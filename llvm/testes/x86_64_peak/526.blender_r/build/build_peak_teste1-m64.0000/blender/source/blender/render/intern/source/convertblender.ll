; ModuleID = 'blender/source/blender/render/intern/source/convertblender.c'
source_filename = "blender/source/blender/render/intern/source/convertblender.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.Global = type { ptr, [1024 x i8], [1024 x i8], i8, i8, i8, %struct.ListBase, i8, i8, i8, i16, i16, i16, i8, i16, i32, i32, i8, i32, i32, [200 x i8] }
%struct.ListBase = type { ptr, ptr }
%struct.Material = type { %struct.ID, ptr, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, %struct.VolumeSettings, %struct.GameSettings, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, float, float, i16, i16, float, float, float, float, i16, i16, i32, i32, i32, i32, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, [64 x i8], float, float, float, i32, i8, i8, i8, i8, i16, i16, i16, i8, i8, i16, i16, float, float, [4 x float], float, float, i16, i16, ptr, ptr, i8, i8, i8, i8, i16, i16, float, float, [18 x ptr], ptr, ptr, ptr, ptr, float, float, float, float, float, i16, i16, [3 x float], [3 x float], float, float, float, float, float, float, float, i16, i16, i32, i16, i16, [4 x float], i16, i16, i16, i16, i16, [3 x i16], ptr, %struct.ListBase }
%struct.ID = type { ptr, ptr, ptr, ptr, [66 x i8], i16, i32, i32, i32, ptr }
%struct.VolumeSettings = type { float, float, float, float, [3 x float], [3 x float], [3 x float], float, float, float, i16, i16, i16, i16, float, float, float, float }
%struct.GameSettings = type { i32, i32, i32, i32 }
%struct.LampRen = type { ptr, ptr, float, float, float, [3 x float], i16, i32, float, float, float, float, float, float, float, float, float, i32, float, float, [3 x float], float, float, float, float, float, float, i16, float, float, ptr, i16, i16, float, i16, i16, i16, i16, i16, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, [1 x i16], [1 x i16], float, float, float, float, ptr, ptr, ptr, [3 x [3 x float]], float, [3 x float], float, [4 x [4 x float]], [3 x [3 x float]], [8 x [3 x float]], float, ptr, [1 x ptr], [18 x ptr], i32, i32 }
%struct.Render = type { ptr, ptr, [74 x i8], i32, i16, i16, i16, i16, i8, ptr, ptr, %struct.ListBase, i32, i32, i32, %struct.rcti, %struct.rctf, float, float, float, i32, i32, i32, i32, float, float, float, float, float, float, [3 x float], [3 x [3 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], float, float, ptr, [32 x [2 x float]], [32 x [2 x float]], ptr, [1 x i32], ptr, ptr, %struct.RenderData, %struct.World, ptr, i32, i32, %struct.ListBase, ptr, ptr, ptr, ptr, float, ptr, %struct.ListBase, float, float, i32, i32, i32, i32, i32, ptr, %struct.ListBase, %struct.ListBase, %struct.ListBase, ptr, %struct.ListBase, i32, ptr, ptr, ptr, ptr, ptr, %struct.ListBase, ptr, %struct.ListBase, %struct.ListBase, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.RenderStats, ptr, ptr, ptr }
%struct.rcti = type { i32, i32, i32, i32 }
%struct.rctf = type { float, float, float, float }
%struct.RenderData = type { %struct.ImageFormatData, ptr, ptr, %struct.QuicktimeCodecSettings, %struct.FFMpegCodecData, i32, i32, i32, float, i32, i32, i32, i32, i16, i16, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i32, i32, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, %struct.rctf, %struct.rctf, %struct.rcti, %struct.ListBase, i16, i16, float, float, float, float, i32, float, float, float, float, i16, i16, i16, i16, i16, i16, float, float, i16, i16, float, float, [1024 x i8], i32, i16, i16, [768 x i8], [4 x float], [4 x float], i8, i8, i8, [5 x i8], i32, i16, i16, float, float, i16, i16, float, i16, i16, i32, i16, i16, i16, i16, float, float, ptr, i32, float, [32 x i8], %struct.BakeData, i32, i32 }
%struct.ImageFormatData = type { i8, i8, i8, i8, i8, i8, i8, i8, i16, i16, float, i8, i8, [6 x i8], %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings }
%struct.ColorManagedViewSettings = type { i32, i32, [64 x i8], [64 x i8], float, float, ptr, ptr }
%struct.ColorManagedDisplaySettings = type { [64 x i8] }
%struct.QuicktimeCodecSettings = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32, i32 }
%struct.FFMpegCodecData = type { i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, ptr }
%struct.BakeData = type { %struct.ImageFormatData, [1024 x i8], i16, i16, i16, i16, float, float, [3 x i8], i8, i8, [3 x i8], [64 x i8] }
%struct.World = type { %struct.ID, ptr, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, float, float, float, float, i16, i16, i16, i16, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, ptr, ptr, ptr, [18 x ptr], i16, i16, [2 x i16], ptr, ptr }
%struct.RenderStats = type { i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i8, double, double, ptr, ptr, [64 x i8], float, float }
%struct.Scene = type { %struct.ID, ptr, ptr, ptr, ptr, %struct.ListBase, ptr, ptr, [3 x float], [3 x float], [3 x float], [3 x float], i32, i32, i32, i16, i8, [1 x i8], ptr, ptr, ptr, ptr, %struct.RenderData, %struct.AudioData, %struct.ListBase, %struct.ListBase, ptr, ptr, ptr, ptr, ptr, ptr, i16, i16, i32, %struct.ListBase, %struct.GameFraming, %struct.GameData, %struct.UnitSettings, ptr, %struct.PhysicsSettings, ptr, i64, i64, %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings, %struct.ColorManagedColorspaceSettings, ptr }
%struct.AudioData = type { i32, float, float, float, i32, i16, i16, float, float }
%struct.GameFraming = type { [3 x float], i8, i8, i8, i8 }
%struct.GameData = type { %struct.GameFraming, i16, i16, i16, i16, i16, i16, i16, i16, i16, [3 x i16], %struct.GameDome, i16, i16, float, %struct.RecastData, float, float, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float }
%struct.GameDome = type { i16, i16, i16, i16, float, float, ptr }
%struct.RecastData = type { float, float, float, float, float, float, float, float, float, float, i32, float, float, i16, i16 }
%struct.UnitSettings = type { float, i8, i8, i16 }
%struct.PhysicsSettings = type { [3 x float], i32, i32, i32 }
%struct.ColorManagedColorspaceSettings = type { [64 x i8] }
%struct.MTex = type { i16, i16, i16, i16, ptr, ptr, [64 x i8], i8, i8, i8, i8, [3 x float], [3 x float], float, i16, i16, i16, i16, i16, i16, i8, [7 x i8], float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float }
%struct.Object = type { %struct.ID, ptr, ptr, i16, i16, i32, i32, i32, [64 x i8], ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.bAnimVizSettings, ptr, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, ptr, ptr, i32, i32, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [4 x float], [3 x float], [3 x float], float, float, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, i16, i8, i8, float, float, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, float, i16, i16, [4 x float], i32, i32, ptr, i8, i8, i16, [3 x float], %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, ptr, ptr, ptr, i8, i8, i16, float, ptr, ptr, ptr, ptr, i64, i64, i32, i32, %struct.ListBase, %struct.ListBase, ptr, ptr, ptr, [2 x float], ptr, %struct.ListBase, ptr }
%struct.bAnimVizSettings = type { i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i32, i32 }
%struct.Main = type { ptr, ptr, [1024 x i8], i16, i16, i16, i16, i64, [16 x i8], i16, ptr, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, [256 x i8], ptr, ptr }
%struct.SceneRenderLayer = type { ptr, ptr, [64 x i8], ptr, ptr, i32, i32, i32, i32, i32, i32, i32, float, %struct.FreestyleConfig }
%struct.FreestyleConfig = type { %struct.ListBase, i32, i32, i32, float, float, float, %struct.ListBase }
%struct.Group = type { %struct.ID, %struct.ListBase, i32, [3 x float] }
%struct.GroupObject = type { ptr, ptr, ptr, ptr, i16, [6 x i8] }
%struct.Base = type { ptr, ptr, i32, i32, i32, i16, i16, ptr }
%struct.DupliApplyData = type { i32, ptr }
%struct.DupliExtraData = type { [4 x [4 x float]], i32 }
%struct.DupliObject = type { ptr, ptr, ptr, [4 x [4 x float]], [3 x float], [2 x float], i16, i8, i8, [8 x i32], ptr }
%struct.ParticleSystem = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.ListBase, %struct.ListBase, ptr, ptr, ptr, ptr, ptr, ptr, %struct.ListBase, [64 x i8], [4 x [4 x float]], float, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, [3 x [64 x i8]], [12 x i16], i16, i16, ptr, ptr, %struct.ListBase, ptr, ptr, i32, i32, ptr, ptr, ptr, float, float }
%struct.ParticleSettings = type { %struct.ID, ptr, ptr, ptr, ptr, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, [2 x float], [2 x float], float, float, float, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, [1 x float], i32, i32, i32, i32, i16, [3 x i16], float, float, float, float, float, float, float, [3 x float], float, float, float, float, float, float, float, [3 x float], float, float, float, float, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, [2 x float], float, float, i32, i32, [18 x ptr], ptr, %struct.ListBase, ptr, ptr, ptr, ptr, ptr, ptr, i16, [3 x i16] }
%struct.ObjectRen = type { ptr, ptr, ptr, ptr, ptr, i32, i32, i32, i32, [2 x [3 x float]], i32, i32, i32, i32, i32, i32, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, i32, [4 x [4 x float]], ptr, ptr, ptr, ptr }
%struct.ObjectInstanceRen = type { ptr, ptr, ptr, ptr, ptr, i32, i32, i32, [4 x [4 x float]], [4 x [4 x float]], [3 x [3 x float]], i16, [3 x float], [2 x float], ptr, ptr, ptr, i32, ptr, i32 }
%struct.HaloRen = type { i16, i16, float, float, float, float, float, float, float, [3 x float], [3 x float], float, float, float, float, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i16, float, i32, i32, ptr, ptr }
%struct.VolumeOb = type { ptr, ptr, ptr, ptr }
%struct.MatInside = type { ptr, ptr, ptr, ptr }
%struct.FluidsimModifierData = type { %struct.ModifierData, ptr, ptr }
%struct.ModifierData = type { ptr, ptr, i32, i32, i32, i32, [64 x i8], ptr, ptr }
%struct.FluidsimSettings = type { ptr, i32, i32, i16, i16, i16, i16, float, i16, i16, float, i16, i16, [3 x float], float, float, i32, i32, i32, i32, float, i32, float, float, float, ptr, ptr, [1024 x i8], [3 x float], [3 x float], ptr, i16, i8, i8, float, i32, float, float, i32, i32, float, float, float, ptr, i32, float, float, float, float, float, float, float, i32, float }
%struct.FluidVertexVelocity = type { [3 x float] }
%struct.VertTableNode = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.VertRen = type { [3 x float], [3 x float], ptr, i32, float, i32 }
%struct.StrandBuffer = type { ptr, ptr, ptr, ptr, i32, i32, ptr, ptr, ptr, i32, i32, i32, i32, float, float, float, float, [4 x [4 x float]], i32, i32 }
%struct.StrandSurface = type { ptr, ptr, %struct.ObjectRen, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32 }
%struct.StrandTableNode = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32 }
%struct.StrandRen = type { ptr, ptr, i32, i32, i32, i32, [3 x float] }
%struct.DerivedMesh = type { %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, i32, i32, i32, i32, i32, i32, i32, ptr, ptr, i32, float, i32, i32, ptr, i8, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.CustomData = type { ptr, [41 x i32], i32, i32, i32, ptr, ptr }
%struct.ParticleSystemModifierData = type { %struct.ModifierData, ptr, ptr, i32, i32, i32, i16, i16 }
%struct.Lamp = type { %struct.ID, ptr, i16, i16, i32, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr, i16, i16, float, float, float, float, float, float, float, i16, i16, i16, i16, i8, i8, i16, i16, i16, i16, i16, float, float, float, float, i16, i16, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, i16, [2 x i8], ptr, [18 x ptr], i16, i16, [4 x i8], ptr, ptr }
%struct.Tex = type { %struct.ID, ptr, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, i32, i32, i16, i16, i16, i16, i32, i32, i32, i32, float, float, float, %struct.ImageUser, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i8, [7 x i8] }
%struct.ImageUser = type { ptr, i32, i32, i32, i32, i8, i8, i8, i8, i16, i16, i16, i16, i32 }
%struct.ShadBuf = type { i16, i16, i16, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], ptr, ptr, float, float, float, float, float, [3 x i32], i32, i32, %struct.ListBase, [1 x ptr] }
%struct.LampShadowSubSample = type { i32, [4 x float] }
%struct.LampShadowSample = type { [16 x %struct.LampShadowSubSample] }
%struct.ParticleKey = type { [3 x float], [3 x float], [4 x float], [3 x float], float }
%struct.ParticleBillboardData = type { ptr, [3 x float], [3 x float], [2 x float], [2 x float], float, float, float, [3 x i32], i32, i32, i32, i32, i16, i16, i16, i16 }
%struct.ParticleSimulationData = type { ptr, ptr, ptr, ptr, ptr, float }
%struct.ParticleStrandData = type { ptr, ptr, ptr, ptr, float, float, float, float, i32, i32, i32, i32, i32, i32 }
%struct.StrandBound = type { i32, i32, [2 x [3 x float]] }
%struct.ParticleData = type { %struct.ParticleKey, %struct.ParticleKey, ptr, ptr, ptr, i32, float, float, float, i32, i32, [4 x float], float, float, float, i32, i32, i16, i16 }
%struct.ParticleCacheKey = type { [3 x float], [3 x float], [4 x float], [3 x float], float, i32 }
%struct.ChildParticle = type { i32, i32, [4 x i32], [4 x float], [4 x float], float, float }
%struct.MCol = type { i8, i8, i8, i8 }
%struct.StrandVert = type { [3 x float], float }
%struct.Curve = type { %struct.ID, ptr, ptr, %struct.ListBase, ptr, ptr, ptr, ptr, ptr, ptr, ptr, [3 x float], [3 x float], [3 x float], i16, i16, i16, i16, float, float, i32, i16, i16, i32, float, float, float, i16, i16, i16, i16, i32, i32, [4 x i8], i16, i8, i8, float, float, float, float, float, float, float, float, float, float, i32, i32, i32, i32, i32, ptr, ptr, [64 x i8], ptr, ptr, ptr, ptr, ptr, i32, i32, ptr, %struct.CharInfo, float, float, float, i8, i8, [2 x i8] }
%struct.CharInfo = type { i16, i16, i8, i8, i16 }
%struct.DispList = type { ptr, ptr, i16, i16, i32, i32, i16, i16, ptr, ptr, ptr, i32, i32, ptr }
%struct.VlakRen = type { ptr, ptr, ptr, ptr, [3 x float], ptr, i8, i8, i8, i32 }
%struct.Mesh = type { %struct.ID, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, i32, i32, i32, i32, i32, i32, i32, [3 x float], [3 x float], [3 x float], i32, i16, i16, float, i32, i8, i8, i8, i8, i8, i8, i16, ptr }
%struct.MVert = type { [3 x float], [3 x i16], i8, i8 }
%struct.MFace = type { i32, i32, i32, i32, i16, i8, i8 }
%struct.CustomDataLayer = type { i32, i32, i32, i32, i32, i32, i32, i32, [64 x i8], ptr }
%struct.MTFace = type { [4 x [2 x float]], ptr, i8, i8, i16, i16, i16 }
%struct.edgesort = type { i32, i32, i32, i32, i32 }
%struct.MEdge = type { i32, i32, i8, i8, i16 }
%struct.ASvert = type { i32, %struct.ListBase }
%struct.SRenderMeshToTangent = type { ptr }
%struct.SMikkTSpaceContext = type { ptr, ptr }
%struct.SMikkTSpaceInterface = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.ShadeInput = type { ptr, ptr, ptr, ptr, ptr, i32, [3 x float], i16, ptr, ptr, ptr, i16, i16, i16, i16, i16, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], i32, i32, float, float, float, float, float, float, [3 x float], [3 x float], [3 x float], float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i32, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [4 x float], [3 x float], float, [3 x float], [3 x float], [4 x float], float, [4 x float], [3 x float], [3 x float], [8 x %struct.ShadeInputUV], [8 x %struct.ShadeInputCol], i32, i32, i32, i32, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], float, float, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], float, float, [3 x float], [3 x float], [3 x float], i32, i32, i32, [3 x float], i32, i32, i32, [3 x float], float, i8, i8, i16, i16, i16, i32, i32, i32, i32, ptr, ptr }
%struct.ShadeInputUV = type { [3 x float], [3 x float], [3 x float], ptr }
%struct.ShadeInputCol = type { [4 x float], ptr }
%struct.ASface = type { ptr, ptr, [4 x ptr], [4 x ptr] }
%struct.bNodeTree = type { %struct.ID, ptr, ptr, [64 x i8], ptr, ptr, [2 x float], %struct.ListBase, %struct.ListBase, i32, i32, i32, i32, i32, i16, i16, i32, i32, i16, i16, i32, %struct.rctf, %struct.ListBase, %struct.ListBase, ptr, %struct.bNodeInstanceKey, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.bNodeInstanceKey = type { i32 }
%struct.bNode = type { ptr, ptr, ptr, ptr, ptr, [64 x i8], [64 x i8], i32, i16, i16, i16, i16, i16, i16, i16, i16, [3 x float], %struct.ListBase, %struct.ListBase, ptr, ptr, ptr, ptr, %struct.ListBase, float, float, float, float, float, float, float, i32, [64 x i8], i16, i16, float, float, i16, i16, ptr, %struct.rctf, %struct.rctf, %struct.rctf, i16, i16, i32, ptr }

@G = external local_unnamed_addr global %struct.Global, align 8
@MEM_printmemlist_stats = external local_unnamed_addr global ptr, align 8
@MEM_freeN = external local_unnamed_addr global ptr, align 8
@.str = private unnamed_addr constant [21 x i8] c"Preparing Scene data\00", align 1
@.str.1 = private unnamed_addr constant [16 x i8] c"render db arena\00", align 1
@slurph_opt = external local_unnamed_addr global i32, align 4
@.str.2 = private unnamed_addr constant [23 x i8] c"Creating Shadowbuffers\00", align 1
@.str.3 = private unnamed_addr constant [35 x i8] c"Calculating previous frame vectors\00", align 1
@.str.4 = private unnamed_addr constant [31 x i8] c"Calculating next frame vectors\00", align 1
@.str.5 = private unnamed_addr constant [32 x i8] c"speed table: missing object %s\0A\00", align 1
@.str.6 = private unnamed_addr constant [79 x i8] c"Warning: object %s has different amount of vertices or strands on other frame\0A\00", align 1
@.str.7 = private unnamed_addr constant [14 x i8] c"bake db arena\00", align 1
@set_dupli_tex_mat.lastob = internal unnamed_addr global ptr null, align 8
@set_dupli_tex_mat.needtexmat = internal unnamed_addr global i1 false, align 4
@init_render_object.lasttime = internal unnamed_addr global double 0.000000e+00, align 8
@MEM_callocN = external local_unnamed_addr global ptr, align 8
@.str.8 = private unnamed_addr constant [12 x i8] c"groupobject\00", align 1
@.str.9 = private unnamed_addr constant [8 x i8] c"lampren\00", align 1
@.str.10 = private unnamed_addr constant [10 x i8] c"sunskyren\00", align 1
@MEM_mallocN = external local_unnamed_addr global ptr, align 8
@.str.11 = private unnamed_addr constant [19 x i8] c"lamp shadow sample\00", align 1
@.str.12 = private unnamed_addr constant [12 x i8] c"initshadbuf\00", align 1
@CD_MASK_BAREMESH = external local_unnamed_addr constant i64, align 8
@.str.13 = private unnamed_addr constant [13 x i8] c"particle_uvs\00", align 1
@.str.14 = private unnamed_addr constant [15 x i8] c"particle_mcols\00", align 1
@.str.15 = private unnamed_addr constant [15 x i8] c"particle orcos\00", align 1
@.str.16 = private unnamed_addr constant [12 x i8] c"StrandBound\00", align 1
@.str.17 = private unnamed_addr constant [14 x i8] c"particle orco\00", align 1
@.str.18 = private unnamed_addr constant [19 x i8] c"set_object_orco gh\00", align 1
@PSYS_FRAND_SEED_OFFSET = external local_unnamed_addr global [1024 x i32], align 16
@PSYS_FRAND_SEED_MULTIPLIER = external local_unnamed_addr global [1024 x i32], align 16
@PSYS_FRAND_BASE = external local_unnamed_addr global [1024 x float], align 16
@static_particle_wire.v1 = internal unnamed_addr global ptr null, align 8
@static_particle_strand.v1 = internal unnamed_addr global ptr null, align 8
@static_particle_strand.v2 = internal unnamed_addr global ptr null, align 8
@static_particle_strand.anor.0 = internal unnamed_addr global float 0.000000e+00, align 4
@static_particle_strand.anor.1 = internal unnamed_addr global float 0.000000e+00, align 4
@static_particle_strand.anor.2 = internal unnamed_addr global float 0.000000e+00, align 4
@static_particle_strand.avec.0 = internal unnamed_addr global float 0.000000e+00, align 4
@static_particle_strand.avec.1 = internal unnamed_addr global float 0.000000e+00, align 4
@static_particle_strand.avec.2 = internal unnamed_addr global float 0.000000e+00, align 4
@static_particle_strand.second = internal unnamed_addr global i1 false, align 4
@.str.19 = private unnamed_addr constant [23 x i8] c"init_render_surf matar\00", align 1
@MEM_dupallocN = external local_unnamed_addr global ptr, align 8
@__func__.init_render_mesh = private unnamed_addr constant [17 x i8] c"init_render_mesh\00", align 1
@.str.20 = private unnamed_addr constant [9 x i8] c"edgesort\00", align 1
@.str.21 = private unnamed_addr constant [22 x i8] c"temp accum for stress\00", align 1
@__const.displace.scale = private unnamed_addr constant [3 x float] [float 1.000000e+00, float 1.000000e+00, float 1.000000e+00], align 4
@.str.22 = private unnamed_addr constant [17 x i8] c"all smooth verts\00", align 1
@.str.23 = private unnamed_addr constant [7 x i8] c"asface\00", align 1
@defmaterial = external global %struct.Material, align 8
@.str.24 = private unnamed_addr constant [14 x i8] c"volume object\00", align 1
@.str.25 = private unnamed_addr constant [10 x i8] c"sorthalos\00", align 1
@.str.26 = private unnamed_addr constant [23 x i8] c"camera inside material\00", align 1
@speedvector_project.pixelphix = internal unnamed_addr global float 0.000000e+00, align 4
@speedvector_project.pixelphiy = internal unnamed_addr global float 0.000000e+00, align 4
@speedvector_project.zmulx = internal unnamed_addr global float 0.000000e+00, align 4
@speedvector_project.zmuly = internal unnamed_addr global float 0.000000e+00, align 4
@speedvector_project.pano = internal unnamed_addr global i32 0, align 4
@.str.27 = private unnamed_addr constant [23 x i8] c"vector render db arena\00", align 1
@.str.28 = private unnamed_addr constant [17 x i8] c"ObInstanceVector\00", align 1
@.str.29 = private unnamed_addr constant [13 x i8] c"vector array\00", align 1
@.str.30 = private unnamed_addr constant [14 x i8] c"StrandSurfWin\00", align 1
@switch.table.RE_Database_Baking = private unnamed_addr constant [12 x i32] [i32 1, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 1], align 4

; Function Attrs: mustprogress nofree nosync nounwind sspstrong willreturn memory(argmem: readwrite) uwtable
define dso_local void @area_lamp_vectors(ptr nocapture noundef %0) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.LampRen, ptr %0, i64 0, i32 52
  %3 = getelementptr inbounds %struct.LampRen, ptr %0, i64 0, i32 49
  %4 = load i16, ptr %3, align 8, !tbaa !5
  %5 = sitofp i16 %4 to float
  %6 = tail call fast float @llvm.sqrt.f32(float %5)
  %7 = fdiv fast float 5.000000e-01, %6
  %8 = getelementptr inbounds %struct.LampRen, ptr %0, i64 0, i32 5
  %9 = load float, ptr %8, align 4, !tbaa !13
  %10 = getelementptr inbounds %struct.LampRen, ptr %0, i64 0, i32 64
  %11 = getelementptr inbounds %struct.LampRen, ptr %0, i64 0, i32 65
  %12 = getelementptr inbounds %struct.LampRen, ptr %0, i64 0, i32 5, i64 1
  %13 = getelementptr inbounds %struct.LampRen, ptr %0, i64 0, i32 64, i64 1, i64 1
  %14 = load <2 x float>, ptr %2, align 8, !tbaa !13
  %15 = insertelement <2 x float> poison, float %7, i64 0
  %16 = shufflevector <2 x float> %15, <2 x float> poison, <2 x i32> zeroinitializer
  %17 = fmul fast <2 x float> %16, %14
  %18 = shufflevector <2 x float> %17, <2 x float> poison, <4 x i32> <i32 0, i32 0, i32 0, i32 1>
  %19 = extractelement <2 x float> %17, i64 1
  %20 = load <4 x float>, ptr %10, align 8, !tbaa !13
  %21 = fmul fast <4 x float> %20, %18
  %22 = insertelement <4 x float> poison, float %9, i64 0
  %23 = insertelement <4 x float> %21, float %9, i64 0
  %24 = getelementptr inbounds %struct.LampRen, ptr %0, i64 0, i32 65, i64 1, i64 1
  %25 = load <2 x float>, ptr %12, align 4, !tbaa !13
  %26 = load <2 x float>, ptr %13, align 4, !tbaa !13
  %27 = shufflevector <2 x float> %17, <2 x float> poison, <2 x i32> <i32 1, i32 1>
  %28 = fmul fast <2 x float> %26, %27
  %29 = shufflevector <2 x float> %28, <2 x float> poison, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>
  %30 = shufflevector <4 x float> %22, <4 x float> %29, <4 x i32> <i32 0, i32 4, i32 5, i32 poison>
  %31 = shufflevector <4 x float> %30, <4 x float> %21, <4 x i32> <i32 0, i32 1, i32 2, i32 4>
  %32 = fadd fast <4 x float> %31, %21
  %33 = fsub fast <4 x float> %31, %21
  %34 = shufflevector <4 x float> %32, <4 x float> %33, <4 x i32> <i32 3, i32 1, i32 2, i32 4>
  %35 = shufflevector <2 x float> %25, <2 x float> poison, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>
  %36 = shufflevector <4 x float> %23, <4 x float> %35, <4 x i32> <i32 0, i32 4, i32 5, i32 3>
  %37 = fsub fast <4 x float> %36, %34
  %38 = fadd fast <4 x float> %36, %34
  %39 = shufflevector <4 x float> %37, <4 x float> %38, <4 x i32> <i32 0, i32 1, i32 2, i32 7>
  store <4 x float> %39, ptr %11, align 4, !tbaa !13
  %40 = shufflevector <4 x float> %21, <4 x float> poison, <2 x i32> <i32 1, i32 2>
  %41 = fsub fast <2 x float> %25, %40
  %42 = fadd fast <2 x float> %41, %28
  store <2 x float> %42, ptr %24, align 4, !tbaa !13
  %43 = extractelement <4 x float> %21, i64 0
  %44 = fadd fast float %43, %9
  %45 = extractelement <4 x float> %21, i64 3
  %46 = fadd fast float %44, %45
  %47 = getelementptr inbounds %struct.LampRen, ptr %0, i64 0, i32 65, i64 2
  store float %46, ptr %47, align 4, !tbaa !13
  %48 = getelementptr inbounds %struct.LampRen, ptr %0, i64 0, i32 65, i64 2, i64 1
  %49 = fadd fast <2 x float> %40, %25
  %50 = fadd fast <2 x float> %49, %28
  store <2 x float> %50, ptr %48, align 4, !tbaa !13
  %51 = fsub fast float %44, %45
  %52 = getelementptr inbounds %struct.LampRen, ptr %0, i64 0, i32 65, i64 3
  store float %51, ptr %52, align 4, !tbaa !13
  %53 = getelementptr inbounds %struct.LampRen, ptr %0, i64 0, i32 65, i64 3, i64 1
  %54 = fsub fast <2 x float> %49, %28
  store <2 x float> %54, ptr %53, align 4, !tbaa !13
  %55 = getelementptr inbounds %struct.LampRen, ptr %0, i64 0, i32 4
  %56 = load float, ptr %55, align 8, !tbaa !14
  %57 = fmul fast float %56, %56
  %58 = extractelement <2 x float> %17, i64 0
  %59 = fmul fast float %58, 4.000000e+00
  %60 = fmul fast float %59, %19
  %61 = fdiv fast float %57, %60
  %62 = getelementptr inbounds %struct.LampRen, ptr %0, i64 0, i32 66
  store float %61, ptr %62, align 4, !tbaa !15
  ret void
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.sqrt.f32(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @init_render_world(ptr noundef %0) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 46
  %3 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 46, i32 67
  %4 = load <2 x ptr>, ptr %3, align 8, !tbaa !16
  %5 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 44
  %6 = load ptr, ptr %5, align 8, !tbaa !17
  %7 = icmp eq ptr %6, null
  br i1 %7, label %267, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.Scene, ptr %6, i64 0, i32 3
  %10 = load ptr, ptr %9, align 8, !tbaa !33
  %11 = icmp eq ptr %10, null
  br i1 %11, label %267, label %12

12:                                               ; preds = %8
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(528) %2, ptr noundef nonnull align 8 dereferenceable(528) %10, i64 528, i1 false), !tbaa.struct !44
  %13 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 30
  %14 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 32, i64 2
  %15 = load <2 x float>, ptr %14, align 4, !tbaa !13
  %16 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 32, i64 2, i64 2
  %17 = load float, ptr %16, align 4, !tbaa !13
  %18 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 30, i64 2
  %19 = fmul fast <2 x float> %15, %15
  %20 = shufflevector <2 x float> %19, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %21 = fadd fast <2 x float> %20, %19
  %22 = extractelement <2 x float> %21, i64 0
  %23 = fmul fast float %17, %17
  %24 = fadd fast float %22, %23
  %25 = fcmp fast ogt float %24, 0x38AA95A5C0000000
  br i1 %25, label %26, label %33

26:                                               ; preds = %12
  %27 = tail call fast float @llvm.sqrt.f32(float %24)
  %28 = fdiv fast float 1.000000e+00, %27
  %29 = insertelement <2 x float> poison, float %28, i64 0
  %30 = shufflevector <2 x float> %29, <2 x float> poison, <2 x i32> zeroinitializer
  %31 = fmul fast <2 x float> %30, %15
  %32 = fmul fast float %28, %17
  br label %33

33:                                               ; preds = %12, %26
  %34 = phi float [ %32, %26 ], [ 0.000000e+00, %12 ]
  %35 = phi <2 x float> [ %31, %26 ], [ zeroinitializer, %12 ]
  store <2 x float> %35, ptr %13, align 4
  store float %34, ptr %18, align 4
  %36 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 31
  %37 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 33
  tail call void @copy_m3_m4(ptr noundef nonnull %36, ptr noundef nonnull %37) #16
  %38 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 46, i32 22
  %39 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 46, i32 70, i64 0
  %40 = load ptr, ptr %39, align 8, !tbaa !16
  %41 = icmp eq ptr %40, null
  br i1 %41, label %49, label %42

42:                                               ; preds = %33
  %43 = getelementptr inbounds %struct.MTex, ptr %40, i64 0, i32 5
  %44 = load ptr, ptr %43, align 8, !tbaa !48
  %45 = icmp eq ptr %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %42
  %47 = load i16, ptr %38, align 8, !tbaa !50
  %48 = or i16 %47, 8
  store i16 %48, ptr %38, align 8, !tbaa !50
  br label %49

49:                                               ; preds = %33, %42, %46
  %50 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 46, i32 70, i64 1
  %51 = load ptr, ptr %50, align 8, !tbaa !16
  %52 = icmp eq ptr %51, null
  br i1 %52, label %60, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %struct.MTex, ptr %51, i64 0, i32 5
  %55 = load ptr, ptr %54, align 8, !tbaa !48
  %56 = icmp eq ptr %55, null
  br i1 %56, label %60, label %57

57:                                               ; preds = %53
  %58 = load i16, ptr %38, align 8, !tbaa !50
  %59 = or i16 %58, 8
  store i16 %59, ptr %38, align 8, !tbaa !50
  br label %60

60:                                               ; preds = %57, %53, %49
  %61 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 46, i32 70, i64 2
  %62 = load ptr, ptr %61, align 8, !tbaa !16
  %63 = icmp eq ptr %62, null
  br i1 %63, label %71, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds %struct.MTex, ptr %62, i64 0, i32 5
  %66 = load ptr, ptr %65, align 8, !tbaa !48
  %67 = icmp eq ptr %66, null
  br i1 %67, label %71, label %68

68:                                               ; preds = %64
  %69 = load i16, ptr %38, align 8, !tbaa !50
  %70 = or i16 %69, 8
  store i16 %70, ptr %38, align 8, !tbaa !50
  br label %71

71:                                               ; preds = %68, %64, %60
  %72 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 46, i32 70, i64 3
  %73 = load ptr, ptr %72, align 8, !tbaa !16
  %74 = icmp eq ptr %73, null
  br i1 %74, label %82, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %struct.MTex, ptr %73, i64 0, i32 5
  %77 = load ptr, ptr %76, align 8, !tbaa !48
  %78 = icmp eq ptr %77, null
  br i1 %78, label %82, label %79

79:                                               ; preds = %75
  %80 = load i16, ptr %38, align 8, !tbaa !50
  %81 = or i16 %80, 8
  store i16 %81, ptr %38, align 8, !tbaa !50
  br label %82

82:                                               ; preds = %79, %75, %71
  %83 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 46, i32 70, i64 4
  %84 = load ptr, ptr %83, align 8, !tbaa !16
  %85 = icmp eq ptr %84, null
  br i1 %85, label %93, label %86

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.MTex, ptr %84, i64 0, i32 5
  %88 = load ptr, ptr %87, align 8, !tbaa !48
  %89 = icmp eq ptr %88, null
  br i1 %89, label %93, label %90

90:                                               ; preds = %86
  %91 = load i16, ptr %38, align 8, !tbaa !50
  %92 = or i16 %91, 8
  store i16 %92, ptr %38, align 8, !tbaa !50
  br label %93

93:                                               ; preds = %90, %86, %82
  %94 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 46, i32 70, i64 5
  %95 = load ptr, ptr %94, align 8, !tbaa !16
  %96 = icmp eq ptr %95, null
  br i1 %96, label %104, label %97

97:                                               ; preds = %93
  %98 = getelementptr inbounds %struct.MTex, ptr %95, i64 0, i32 5
  %99 = load ptr, ptr %98, align 8, !tbaa !48
  %100 = icmp eq ptr %99, null
  br i1 %100, label %104, label %101

101:                                              ; preds = %97
  %102 = load i16, ptr %38, align 8, !tbaa !50
  %103 = or i16 %102, 8
  store i16 %103, ptr %38, align 8, !tbaa !50
  br label %104

104:                                              ; preds = %101, %97, %93
  %105 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 46, i32 70, i64 6
  %106 = load ptr, ptr %105, align 8, !tbaa !16
  %107 = icmp eq ptr %106, null
  br i1 %107, label %115, label %108

108:                                              ; preds = %104
  %109 = getelementptr inbounds %struct.MTex, ptr %106, i64 0, i32 5
  %110 = load ptr, ptr %109, align 8, !tbaa !48
  %111 = icmp eq ptr %110, null
  br i1 %111, label %115, label %112

112:                                              ; preds = %108
  %113 = load i16, ptr %38, align 8, !tbaa !50
  %114 = or i16 %113, 8
  store i16 %114, ptr %38, align 8, !tbaa !50
  br label %115

115:                                              ; preds = %112, %108, %104
  %116 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 46, i32 70, i64 7
  %117 = load ptr, ptr %116, align 8, !tbaa !16
  %118 = icmp eq ptr %117, null
  br i1 %118, label %126, label %119

119:                                              ; preds = %115
  %120 = getelementptr inbounds %struct.MTex, ptr %117, i64 0, i32 5
  %121 = load ptr, ptr %120, align 8, !tbaa !48
  %122 = icmp eq ptr %121, null
  br i1 %122, label %126, label %123

123:                                              ; preds = %119
  %124 = load i16, ptr %38, align 8, !tbaa !50
  %125 = or i16 %124, 8
  store i16 %125, ptr %38, align 8, !tbaa !50
  br label %126

126:                                              ; preds = %123, %119, %115
  %127 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 46, i32 70, i64 8
  %128 = load ptr, ptr %127, align 8, !tbaa !16
  %129 = icmp eq ptr %128, null
  br i1 %129, label %137, label %130

130:                                              ; preds = %126
  %131 = getelementptr inbounds %struct.MTex, ptr %128, i64 0, i32 5
  %132 = load ptr, ptr %131, align 8, !tbaa !48
  %133 = icmp eq ptr %132, null
  br i1 %133, label %137, label %134

134:                                              ; preds = %130
  %135 = load i16, ptr %38, align 8, !tbaa !50
  %136 = or i16 %135, 8
  store i16 %136, ptr %38, align 8, !tbaa !50
  br label %137

137:                                              ; preds = %134, %130, %126
  %138 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 46, i32 70, i64 9
  %139 = load ptr, ptr %138, align 8, !tbaa !16
  %140 = icmp eq ptr %139, null
  br i1 %140, label %148, label %141

141:                                              ; preds = %137
  %142 = getelementptr inbounds %struct.MTex, ptr %139, i64 0, i32 5
  %143 = load ptr, ptr %142, align 8, !tbaa !48
  %144 = icmp eq ptr %143, null
  br i1 %144, label %148, label %145

145:                                              ; preds = %141
  %146 = load i16, ptr %38, align 8, !tbaa !50
  %147 = or i16 %146, 8
  store i16 %147, ptr %38, align 8, !tbaa !50
  br label %148

148:                                              ; preds = %145, %141, %137
  %149 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 46, i32 70, i64 10
  %150 = load ptr, ptr %149, align 8, !tbaa !16
  %151 = icmp eq ptr %150, null
  br i1 %151, label %159, label %152

152:                                              ; preds = %148
  %153 = getelementptr inbounds %struct.MTex, ptr %150, i64 0, i32 5
  %154 = load ptr, ptr %153, align 8, !tbaa !48
  %155 = icmp eq ptr %154, null
  br i1 %155, label %159, label %156

156:                                              ; preds = %152
  %157 = load i16, ptr %38, align 8, !tbaa !50
  %158 = or i16 %157, 8
  store i16 %158, ptr %38, align 8, !tbaa !50
  br label %159

159:                                              ; preds = %156, %152, %148
  %160 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 46, i32 70, i64 11
  %161 = load ptr, ptr %160, align 8, !tbaa !16
  %162 = icmp eq ptr %161, null
  br i1 %162, label %170, label %163

163:                                              ; preds = %159
  %164 = getelementptr inbounds %struct.MTex, ptr %161, i64 0, i32 5
  %165 = load ptr, ptr %164, align 8, !tbaa !48
  %166 = icmp eq ptr %165, null
  br i1 %166, label %170, label %167

167:                                              ; preds = %163
  %168 = load i16, ptr %38, align 8, !tbaa !50
  %169 = or i16 %168, 8
  store i16 %169, ptr %38, align 8, !tbaa !50
  br label %170

170:                                              ; preds = %167, %163, %159
  %171 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 46, i32 70, i64 12
  %172 = load ptr, ptr %171, align 8, !tbaa !16
  %173 = icmp eq ptr %172, null
  br i1 %173, label %181, label %174

174:                                              ; preds = %170
  %175 = getelementptr inbounds %struct.MTex, ptr %172, i64 0, i32 5
  %176 = load ptr, ptr %175, align 8, !tbaa !48
  %177 = icmp eq ptr %176, null
  br i1 %177, label %181, label %178

178:                                              ; preds = %174
  %179 = load i16, ptr %38, align 8, !tbaa !50
  %180 = or i16 %179, 8
  store i16 %180, ptr %38, align 8, !tbaa !50
  br label %181

181:                                              ; preds = %178, %174, %170
  %182 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 46, i32 70, i64 13
  %183 = load ptr, ptr %182, align 8, !tbaa !16
  %184 = icmp eq ptr %183, null
  br i1 %184, label %192, label %185

185:                                              ; preds = %181
  %186 = getelementptr inbounds %struct.MTex, ptr %183, i64 0, i32 5
  %187 = load ptr, ptr %186, align 8, !tbaa !48
  %188 = icmp eq ptr %187, null
  br i1 %188, label %192, label %189

189:                                              ; preds = %185
  %190 = load i16, ptr %38, align 8, !tbaa !50
  %191 = or i16 %190, 8
  store i16 %191, ptr %38, align 8, !tbaa !50
  br label %192

192:                                              ; preds = %189, %185, %181
  %193 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 46, i32 70, i64 14
  %194 = load ptr, ptr %193, align 8, !tbaa !16
  %195 = icmp eq ptr %194, null
  br i1 %195, label %203, label %196

196:                                              ; preds = %192
  %197 = getelementptr inbounds %struct.MTex, ptr %194, i64 0, i32 5
  %198 = load ptr, ptr %197, align 8, !tbaa !48
  %199 = icmp eq ptr %198, null
  br i1 %199, label %203, label %200

200:                                              ; preds = %196
  %201 = load i16, ptr %38, align 8, !tbaa !50
  %202 = or i16 %201, 8
  store i16 %202, ptr %38, align 8, !tbaa !50
  br label %203

203:                                              ; preds = %200, %196, %192
  %204 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 46, i32 70, i64 15
  %205 = load ptr, ptr %204, align 8, !tbaa !16
  %206 = icmp eq ptr %205, null
  br i1 %206, label %214, label %207

207:                                              ; preds = %203
  %208 = getelementptr inbounds %struct.MTex, ptr %205, i64 0, i32 5
  %209 = load ptr, ptr %208, align 8, !tbaa !48
  %210 = icmp eq ptr %209, null
  br i1 %210, label %214, label %211

211:                                              ; preds = %207
  %212 = load i16, ptr %38, align 8, !tbaa !50
  %213 = or i16 %212, 8
  store i16 %213, ptr %38, align 8, !tbaa !50
  br label %214

214:                                              ; preds = %211, %207, %203
  %215 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 46, i32 70, i64 16
  %216 = load ptr, ptr %215, align 8, !tbaa !16
  %217 = icmp eq ptr %216, null
  br i1 %217, label %225, label %218

218:                                              ; preds = %214
  %219 = getelementptr inbounds %struct.MTex, ptr %216, i64 0, i32 5
  %220 = load ptr, ptr %219, align 8, !tbaa !48
  %221 = icmp eq ptr %220, null
  br i1 %221, label %225, label %222

222:                                              ; preds = %218
  %223 = load i16, ptr %38, align 8, !tbaa !50
  %224 = or i16 %223, 8
  store i16 %224, ptr %38, align 8, !tbaa !50
  br label %225

225:                                              ; preds = %222, %218, %214
  %226 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 46, i32 70, i64 17
  %227 = load ptr, ptr %226, align 8, !tbaa !16
  %228 = icmp eq ptr %227, null
  br i1 %228, label %236, label %229

229:                                              ; preds = %225
  %230 = getelementptr inbounds %struct.MTex, ptr %227, i64 0, i32 5
  %231 = load ptr, ptr %230, align 8, !tbaa !48
  %232 = icmp eq ptr %231, null
  br i1 %232, label %236, label %233

233:                                              ; preds = %229
  %234 = load i16, ptr %38, align 8, !tbaa !50
  %235 = or i16 %234, 8
  store i16 %235, ptr %38, align 8, !tbaa !50
  br label %236

236:                                              ; preds = %233, %229, %225
  %237 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 5
  %238 = load i16, ptr %237, align 2, !tbaa !51
  %239 = icmp eq i16 %238, 0
  br i1 %239, label %254, label %240

240:                                              ; preds = %236
  %241 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 46, i32 51
  %242 = sext i16 %238 to i32
  %243 = load i16, ptr %241, align 2, !tbaa !52
  %244 = sext i16 %243 to i32
  %245 = mul nsw i32 %244, %244
  %246 = icmp slt i32 %245, %242
  br i1 %246, label %247, label %254

247:                                              ; preds = %240, %247
  %248 = phi i16 [ %249, %247 ], [ %243, %240 ]
  %249 = add i16 %248, 1
  %250 = sext i16 %249 to i32
  %251 = mul nsw i32 %250, %250
  %252 = icmp slt i32 %251, %242
  br i1 %252, label %247, label %253, !llvm.loop !53

253:                                              ; preds = %247
  store i16 %249, ptr %241, align 2, !tbaa !52
  br label %254

254:                                              ; preds = %240, %253, %236
  %255 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 45, i32 47
  %256 = load i32, ptr %255, align 8, !tbaa !55
  %257 = and i32 %256, 65536
  %258 = icmp eq i32 %257, 0
  br i1 %258, label %259, label %277

259:                                              ; preds = %254
  %260 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 46, i32 64
  %261 = load i16, ptr %260, align 2, !tbaa !56
  %262 = icmp eq i16 %261, 0
  br i1 %262, label %263, label %277

263:                                              ; preds = %259
  %264 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 46, i32 23
  %265 = load i16, ptr %264, align 2, !tbaa !57
  %266 = and i16 %265, -209
  store i16 %266, ptr %264, align 2, !tbaa !57
  br label %277

267:                                              ; preds = %8, %1
  %268 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 46, i32 17
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(528) %2, i8 0, i64 528, i1 false)
  store float 1.000000e+00, ptr %268, align 4, !tbaa !58
  %269 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 36
  %270 = load float, ptr %269, align 8, !tbaa !59
  %271 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 46, i32 31
  store float %270, ptr %271, align 4, !tbaa !60
  %272 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 37
  %273 = load float, ptr %272, align 4, !tbaa !61
  %274 = fsub fast float %273, %270
  %275 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 46, i32 32
  store float %274, ptr %275, align 8, !tbaa !62
  %276 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 46, i32 30
  store float 1.000000e+00, ptr %276, align 8, !tbaa !63
  br label %277

277:                                              ; preds = %254, %259, %263, %267
  %278 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 46, i32 16
  %279 = load float, ptr %278, align 8, !tbaa !64
  %280 = fmul fast float %279, 2.000000e+00
  %281 = fadd fast float %280, 5.000000e-01
  %282 = tail call fast float @llvm.powi.f32.i32(float %281, i32 -10)
  %283 = fadd fast float %282, 1.000000e+00
  %284 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 46, i32 18
  store float %283, ptr %284, align 8, !tbaa !65
  %285 = fdiv fast float %282, %283
  %286 = tail call fast float @llvm.log.f32(float %285)
  %287 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 46, i32 17
  %288 = load float, ptr %287, align 4, !tbaa !58
  %289 = fdiv fast float %286, %288
  %290 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 46, i32 19
  store float %289, ptr %290, align 4, !tbaa !66
  store <2 x ptr> %4, ptr %3, align 8, !tbaa !16
  ret void
}

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #4

declare void @copy_m3_m4(ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #6

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.log.f32(float) #2

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @RE_Database_Free(ptr noundef %0) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 98, i32 11
  %3 = load i16, ptr %2, align 4, !tbaa !67
  %4 = icmp eq i16 %3, 0
  br i1 %4, label %122, label %5

5:                                                ; preds = %1
  %6 = load i32, ptr getelementptr inbounds (%struct.Global, ptr @G, i64 0, i32 16), align 4, !tbaa !68
  %7 = and i32 %6, 1
  %8 = icmp ne i32 %7, 0
  %9 = load i8, ptr getelementptr inbounds (%struct.Global, ptr @G, i64 0, i32 13), align 2
  %10 = icmp ne i8 %9, 0
  %11 = select i1 %8, i1 %10, i1 false
  br i1 %11, label %12, label %19

12:                                               ; preds = %5
  %13 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 45, i32 46
  %14 = load i32, ptr %13, align 4, !tbaa !70
  %15 = and i32 %14, 524296
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %12
  tail call void @BKE_image_print_memlist() #16
  %18 = load ptr, ptr @MEM_printmemlist_stats, align 8, !tbaa !16
  tail call void %18() #16
  br label %19

19:                                               ; preds = %12, %17, %5
  %20 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 67
  %21 = load ptr, ptr %20, align 8, !tbaa !16
  %22 = icmp eq ptr %21, null
  br i1 %22, label %47, label %23

23:                                               ; preds = %19, %42
  %24 = phi ptr [ %45, %42 ], [ %21, %19 ]
  tail call void @freeshadowbuf(ptr noundef nonnull %24) #16
  %25 = getelementptr inbounds %struct.LampRen, ptr %24, i64 0, i32 58
  %26 = load ptr, ptr %25, align 8, !tbaa !71
  %27 = icmp eq ptr %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %23
  %29 = load ptr, ptr @MEM_freeN, align 8, !tbaa !16
  tail call void %29(ptr noundef nonnull %26) #16
  br label %30

30:                                               ; preds = %28, %23
  %31 = getelementptr inbounds %struct.LampRen, ptr %24, i64 0, i32 67
  %32 = load ptr, ptr %31, align 8, !tbaa !72
  %33 = icmp eq ptr %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %30
  %35 = load ptr, ptr @MEM_freeN, align 8, !tbaa !16
  tail call void %35(ptr noundef nonnull %32) #16
  br label %36

36:                                               ; preds = %34, %30
  %37 = getelementptr inbounds %struct.LampRen, ptr %24, i64 0, i32 56
  %38 = load ptr, ptr %37, align 8, !tbaa !73
  %39 = icmp eq ptr %38, null
  br i1 %39, label %42, label %40

40:                                               ; preds = %36
  %41 = load ptr, ptr @MEM_freeN, align 8, !tbaa !16
  tail call void %41(ptr noundef nonnull %38) #16
  br label %42

42:                                               ; preds = %40, %36
  %43 = getelementptr inbounds %struct.LampRen, ptr %24, i64 0, i32 30
  %44 = load ptr, ptr %43, align 8, !tbaa !74
  tail call void @curvemapping_free(ptr noundef %44) #16
  %45 = load ptr, ptr %24, align 8, !tbaa !16
  %46 = icmp eq ptr %45, null
  br i1 %46, label %47, label %23, !llvm.loop !75

47:                                               ; preds = %42, %19
  tail call void @free_volume_precache(ptr noundef %0) #16
  tail call void @BLI_freelistN(ptr noundef nonnull %20) #16
  %48 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 66
  tail call void @BLI_freelistN(ptr noundef nonnull %48) #16
  tail call void @free_renderdata_tables(ptr noundef %0) #16
  %49 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 73
  %50 = load ptr, ptr %49, align 8, !tbaa !76
  %51 = icmp eq ptr %50, null
  br i1 %51, label %54, label %52

52:                                               ; preds = %47
  %53 = load ptr, ptr @MEM_freeN, align 8, !tbaa !16
  tail call void @BLI_ghash_free(ptr noundef nonnull %50, ptr noundef null, ptr noundef %53) #16
  store ptr null, ptr %49, align 8, !tbaa !76
  br label %54

54:                                               ; preds = %47, %52
  %55 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 43
  %56 = load ptr, ptr %55, align 8, !tbaa !77
  %57 = icmp eq ptr %56, null
  br i1 %57, label %59, label %58

58:                                               ; preds = %54
  tail call void @end_render_materials(ptr noundef nonnull %56) #16
  tail call void @end_render_textures(ptr noundef nonnull %0) #16
  tail call void @free_pointdensities(ptr noundef nonnull %0) #16
  br label %59

59:                                               ; preds = %58, %54
  %60 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 79
  tail call void @BLI_freelistN(ptr noundef nonnull %60) #16
  %61 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 46, i32 67
  %62 = load ptr, ptr %61, align 8, !tbaa !78
  %63 = icmp eq ptr %62, null
  br i1 %63, label %75, label %64

64:                                               ; preds = %59
  %65 = load ptr, ptr @MEM_freeN, align 8, !tbaa !16
  tail call void %65(ptr noundef nonnull %62) #16
  store ptr null, ptr %61, align 8, !tbaa !78
  %66 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 44
  %67 = load ptr, ptr %66, align 8, !tbaa !17
  %68 = icmp eq ptr %67, null
  br i1 %68, label %75, label %69

69:                                               ; preds = %64
  %70 = getelementptr inbounds %struct.Scene, ptr %67, i64 0, i32 3
  %71 = load ptr, ptr %70, align 8, !tbaa !33
  %72 = icmp eq ptr %71, null
  br i1 %72, label %75, label %73

73:                                               ; preds = %69
  %74 = getelementptr inbounds %struct.World, ptr %71, i64 0, i32 67
  store ptr null, ptr %74, align 8, !tbaa !79
  br label %75

75:                                               ; preds = %64, %69, %73, %59
  %76 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 46, i32 68
  %77 = load ptr, ptr %76, align 8, !tbaa !80
  %78 = icmp eq ptr %77, null
  br i1 %78, label %90, label %79

79:                                               ; preds = %75
  %80 = load ptr, ptr @MEM_freeN, align 8, !tbaa !16
  tail call void %80(ptr noundef nonnull %77) #16
  store ptr null, ptr %76, align 8, !tbaa !80
  %81 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 44
  %82 = load ptr, ptr %81, align 8, !tbaa !17
  %83 = icmp eq ptr %82, null
  br i1 %83, label %90, label %84

84:                                               ; preds = %79
  %85 = getelementptr inbounds %struct.Scene, ptr %82, i64 0, i32 3
  %86 = load ptr, ptr %85, align 8, !tbaa !33
  %87 = icmp eq ptr %86, null
  br i1 %87, label %90, label %88

88:                                               ; preds = %84
  %89 = getelementptr inbounds %struct.World, ptr %86, i64 0, i32 68
  store ptr null, ptr %89, align 8, !tbaa !81
  br label %90

90:                                               ; preds = %79, %84, %88, %75
  %91 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 45, i32 47
  %92 = load i32, ptr %91, align 8, !tbaa !55
  %93 = and i32 %92, 65536
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %100, label %95

95:                                               ; preds = %90
  tail call void @free_render_qmcsampler(ptr noundef nonnull %0) #16
  %96 = load i32, ptr %91, align 8, !tbaa !55
  %97 = and i32 %96, 65536
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %100, label %99

99:                                               ; preds = %95
  tail call void @freeraytree(ptr noundef nonnull %0) #16
  br label %100

100:                                              ; preds = %90, %99, %95
  tail call void @free_sss(ptr noundef nonnull %0) #16
  tail call void @free_occ(ptr noundef nonnull %0) #16
  tail call void @free_strand_surface(ptr noundef nonnull %0) #16
  %101 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 60
  store i16 0, ptr %2, align 4, !tbaa !67
  %102 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 72
  store ptr null, ptr %102, align 8, !tbaa !82
  %103 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 44
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(20) %101, i8 0, i64 20, i1 false)
  %104 = load ptr, ptr %103, align 8, !tbaa !17
  %105 = icmp eq ptr %104, null
  br i1 %105, label %117, label %106

106:                                              ; preds = %100
  %107 = getelementptr inbounds %struct.Scene, ptr %104, i64 0, i32 22, i32 46
  %108 = load i32, ptr %107, align 4, !tbaa !83
  %109 = and i32 %108, 256
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %117, label %111

111:                                              ; preds = %106
  %112 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 45, i32 46
  %113 = load i32, ptr %112, align 4, !tbaa !70
  %114 = and i32 %113, 524296
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %117

116:                                              ; preds = %111
  tail call void @BKE_image_free_all_textures() #16
  br label %117

117:                                              ; preds = %106, %116, %111, %100
  %118 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 81
  %119 = load ptr, ptr %118, align 8, !tbaa !84
  %120 = icmp eq ptr %119, null
  br i1 %120, label %122, label %121

121:                                              ; preds = %117
  tail call void @BLI_memarena_free(ptr noundef nonnull %119) #16
  store ptr null, ptr %118, align 8, !tbaa !84
  br label %122

122:                                              ; preds = %117, %121, %1
  ret void
}

declare void @BKE_image_print_memlist() local_unnamed_addr #5

declare void @freeshadowbuf(ptr noundef) local_unnamed_addr #5

declare void @curvemapping_free(ptr noundef) local_unnamed_addr #5

declare void @free_volume_precache(ptr noundef) local_unnamed_addr #5

declare void @BLI_freelistN(ptr noundef) local_unnamed_addr #5

declare void @free_renderdata_tables(ptr noundef) local_unnamed_addr #5

declare void @end_render_materials(ptr noundef) local_unnamed_addr #5

declare void @end_render_textures(ptr noundef) local_unnamed_addr #5

declare void @free_pointdensities(ptr noundef) local_unnamed_addr #5

declare void @free_render_qmcsampler(ptr noundef) local_unnamed_addr #5

declare void @freeraytree(ptr noundef) local_unnamed_addr #5

declare void @free_sss(ptr noundef) local_unnamed_addr #5

declare void @free_occ(ptr noundef) local_unnamed_addr #5

declare void @free_strand_surface(ptr noundef) local_unnamed_addr #5

declare void @BKE_image_free_all_textures() local_unnamed_addr #5

declare void @BLI_memarena_free(ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @RE_Database_FromScene(ptr noundef %0, ptr noundef %1, ptr noundef %2, i32 noundef %3, i32 noundef %4) local_unnamed_addr #3 {
  %6 = alloca [4 x [4 x float]], align 16
  %7 = alloca [3 x float], align 8
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %6) #16
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %7) #16
  %8 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 43
  store ptr %1, ptr %8, align 8, !tbaa !77
  %9 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 44
  store ptr %2, ptr %9, align 8, !tbaa !17
  %10 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 48
  store i32 %3, ptr %10, align 8, !tbaa !85
  %11 = getelementptr %struct.Render, ptr %0, i64 0, i32 45, i32 46
  %12 = load i32, ptr %11, align 4, !tbaa !70
  %13 = and i32 %12, 524288
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %5
  %16 = tail call zeroext i8 @BKE_scene_check_color_management_enabled(ptr noundef %2) #16
  %17 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 8
  store i8 %16, ptr %17, align 8, !tbaa !86
  br label %18

18:                                               ; preds = %15, %5
  %19 = tail call ptr @RE_GetCamera(ptr noundef nonnull %0) #16
  %20 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 98
  %21 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 98, i32 16
  store ptr @.str, ptr %21, align 8, !tbaa !87
  %22 = getelementptr inbounds %struct.Scene, ptr %2, i64 0, i32 22, i32 5
  %23 = load i32, ptr %22, align 8, !tbaa !88
  store i32 %23, ptr %20, align 8, !tbaa !89
  %24 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 98, i32 18
  %25 = getelementptr inbounds %struct.ID, ptr %2, i64 0, i32 4, i64 2
  %26 = tail call ptr @BLI_strncpy(ptr noundef nonnull %24, ptr noundef nonnull %25, i64 noundef 64) #16
  %27 = tail call ptr @BLI_memarena_new(i64 noundef 16376, ptr noundef nonnull @.str.1) #16
  %28 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 81
  store ptr %27, ptr %28, align 8, !tbaa !84
  %29 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 64
  %30 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 60
  %31 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 66
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(20) %30, i8 0, i64 20, i1 false)
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %31, i8 0, i64 32, i1 false)
  store i32 0, ptr @slurph_opt, align 4, !tbaa !47
  %32 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 98, i32 10
  store i16 0, ptr %32, align 2, !tbaa !90
  %33 = load i32, ptr %10, align 8, !tbaa !85
  %34 = icmp ult i32 %33, 16777216
  %35 = and i32 %3, -16777216
  %36 = select i1 %34, i32 %3, i32 %35
  %37 = load i32, ptr %11, align 4, !tbaa !70
  %38 = and i32 %37, 540680
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %47

40:                                               ; preds = %18
  %41 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 101
  %42 = load ptr, ptr %41, align 8, !tbaa !91
  %43 = load ptr, ptr %8, align 8, !tbaa !77
  %44 = load ptr, ptr %9, align 8, !tbaa !17
  tail call void @BKE_scene_update_for_newframe(ptr noundef %42, ptr noundef %43, ptr noundef %44, i32 noundef %36) #16
  %45 = load ptr, ptr %9, align 8, !tbaa !17
  %46 = getelementptr inbounds %struct.Scene, ptr %45, i64 0, i32 22
  tail call void @render_update_anim_renderdata(ptr noundef nonnull %0, ptr noundef nonnull %46) #16
  br label %47

47:                                               ; preds = %40, %18
  %48 = icmp ne i32 %4, 0
  %49 = icmp ne ptr %19, null
  %50 = select i1 %48, i1 %49, i1 false
  br i1 %50, label %51, label %55

51:                                               ; preds = %47
  tail call void @RE_SetCamera(ptr noundef nonnull %0, ptr noundef nonnull %19) #16
  %52 = getelementptr inbounds %struct.Object, ptr %19, i64 0, i32 47
  call void @normalize_m4_m4(ptr noundef nonnull %6, ptr noundef nonnull %52) #16
  %53 = call zeroext i8 @invert_m4(ptr noundef nonnull %6) #16
  call void @RE_SetView(ptr noundef nonnull %0, ptr noundef nonnull %6) #16
  %54 = load ptr, ptr %8, align 8, !tbaa !77
  call void @DAG_id_tag_update_ex(ptr noundef %54, ptr noundef nonnull %19, i16 noundef signext 1) #16
  br label %55

55:                                               ; preds = %51, %47
  %56 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 34
  %57 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 32
  call void @copy_m4_m4(ptr noundef nonnull %56, ptr noundef nonnull %57) #16
  call void @init_render_world(ptr noundef nonnull %0)
  %58 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 45, i32 47
  %59 = load i32, ptr %58, align 8, !tbaa !55
  %60 = and i32 %59, 65536
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %73, label %62

62:                                               ; preds = %55
  call void @init_render_qmcsampler(ptr noundef nonnull %0) #16
  %63 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 46
  %64 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 46, i32 23
  %65 = load i16, ptr %64, align 2, !tbaa !57
  %66 = and i16 %65, 208
  %67 = icmp eq i16 %66, 0
  br i1 %67, label %73, label %68

68:                                               ; preds = %62
  %69 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 46, i32 63
  %70 = load i16, ptr %69, align 8, !tbaa !92
  %71 = icmp eq i16 %70, 0
  br i1 %71, label %72, label %73

72:                                               ; preds = %68
  call void @init_ao_sphere(ptr noundef nonnull %63) #16
  br label %73

73:                                               ; preds = %62, %72, %68, %55
  call void @init_render_textures(ptr noundef nonnull %0) #16
  %74 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 46, i32 12
  %75 = load <2 x float>, ptr %74, align 4, !tbaa !13
  store <2 x float> %75, ptr %7, align 8, !tbaa !13
  %76 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 46, i32 14
  %77 = load float, ptr %76, align 4, !tbaa !13
  %78 = getelementptr inbounds float, ptr %7, i64 2
  store float %77, ptr %78, align 8, !tbaa !13
  %79 = load ptr, ptr %8, align 8, !tbaa !77
  %80 = load i32, ptr %58, align 8, !tbaa !55
  call void @init_render_materials(ptr noundef %79, i32 noundef %80, ptr noundef nonnull %7) #16
  call void @set_node_shader_lamp_loop(ptr noundef nonnull @shade_material_loop) #16
  call fastcc void @database_init_objects(ptr noundef nonnull %0, i32 noundef %36, i32 noundef 0, i32 noundef 0, ptr noundef null, i32 noundef 0)
  %81 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 96
  %82 = load ptr, ptr %81, align 8, !tbaa !93
  %83 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 97
  %84 = load ptr, ptr %83, align 8, !tbaa !94
  %85 = call i32 %82(ptr noundef %84) #16
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %216

87:                                               ; preds = %73
  %88 = load ptr, ptr %9, align 8, !tbaa !16
  %89 = getelementptr inbounds %struct.Scene, ptr %88, i64 0, i32 22, i32 46
  %90 = load i32, ptr %89, align 4, !tbaa !83
  %91 = and i32 %90, 524296
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %129

93:                                               ; preds = %87
  %94 = load ptr, ptr %8, align 8, !tbaa !77
  %95 = getelementptr inbounds %struct.Main, ptr %94, i64 0, i32 32
  %96 = load ptr, ptr %95, align 8, !tbaa !16
  %97 = icmp eq ptr %96, null
  br i1 %97, label %105, label %98

98:                                               ; preds = %93, %98
  %99 = phi ptr [ %103, %98 ], [ %96, %93 ]
  %100 = getelementptr inbounds %struct.ID, ptr %99, i64 0, i32 5
  %101 = load i16, ptr %100, align 2, !tbaa !95
  %102 = or i16 %101, 1024
  store i16 %102, ptr %100, align 2, !tbaa !95
  %103 = load ptr, ptr %99, align 8, !tbaa !16
  %104 = icmp eq ptr %103, null
  br i1 %104, label %105, label %98, !llvm.loop !97

105:                                              ; preds = %98, %93
  %106 = getelementptr inbounds %struct.Main, ptr %94, i64 0, i32 17
  %107 = load ptr, ptr %106, align 8, !tbaa !16
  %108 = icmp eq ptr %107, null
  br i1 %108, label %126, label %109

109:                                              ; preds = %105, %123
  %110 = phi ptr [ %124, %123 ], [ %107, %105 ]
  %111 = getelementptr inbounds %struct.Material, ptr %110, i64 0, i32 105
  %112 = load ptr, ptr %111, align 8, !tbaa !98
  %113 = icmp eq ptr %112, null
  br i1 %113, label %123, label %114

114:                                              ; preds = %109
  %115 = getelementptr inbounds %struct.ID, ptr %112, i64 0, i32 5
  %116 = load i16, ptr %115, align 2, !tbaa !95
  %117 = and i16 %116, 1024
  %118 = icmp eq i16 %117, 0
  br i1 %118, label %123, label %119

119:                                              ; preds = %114
  %120 = getelementptr inbounds %struct.Material, ptr %110, i64 0, i32 51
  %121 = load i32, ptr %120, align 4, !tbaa !102
  %122 = and i32 %121, 268435456
  call fastcc void @add_lightgroup(ptr noundef %0, ptr noundef nonnull %112, i32 noundef %122)
  br label %123

123:                                              ; preds = %119, %114, %109
  %124 = load ptr, ptr %110, align 8, !tbaa !16
  %125 = icmp eq ptr %124, null
  br i1 %125, label %126, label %109, !llvm.loop !103

126:                                              ; preds = %123, %105
  %127 = load ptr, ptr %9, align 8, !tbaa !16
  %128 = icmp eq ptr %127, null
  br i1 %128, label %206, label %129

129:                                              ; preds = %87, %126
  %130 = phi ptr [ %88, %87 ], [ %127, %126 ]
  br label %131

131:                                              ; preds = %129, %202
  %132 = phi ptr [ %204, %202 ], [ %130, %129 ]
  %133 = getelementptr inbounds %struct.Scene, ptr %132, i64 0, i32 22, i32 60
  %134 = load ptr, ptr %133, align 8, !tbaa !16
  %135 = icmp eq ptr %134, null
  br i1 %135, label %202, label %136

136:                                              ; preds = %131, %199
  %137 = phi ptr [ %200, %199 ], [ %134, %131 ]
  %138 = getelementptr inbounds %struct.SceneRenderLayer, ptr %137, i64 0, i32 4
  %139 = load ptr, ptr %138, align 8, !tbaa !104
  %140 = icmp eq ptr %139, null
  br i1 %140, label %199, label %141

141:                                              ; preds = %136
  %142 = getelementptr inbounds %struct.ID, ptr %139, i64 0, i32 5
  %143 = load i16, ptr %142, align 2, !tbaa !95
  %144 = and i16 %143, -1025
  store i16 %144, ptr %142, align 2, !tbaa !95
  %145 = getelementptr inbounds %struct.Group, ptr %139, i64 0, i32 1
  %146 = load ptr, ptr %145, align 8, !tbaa !16
  %147 = icmp eq ptr %146, null
  br i1 %147, label %199, label %148

148:                                              ; preds = %141, %196
  %149 = phi ptr [ %197, %196 ], [ %146, %141 ]
  %150 = getelementptr inbounds %struct.GroupObject, ptr %149, i64 0, i32 3
  store ptr null, ptr %150, align 8, !tbaa !107
  %151 = getelementptr inbounds %struct.GroupObject, ptr %149, i64 0, i32 2
  %152 = load ptr, ptr %151, align 8, !tbaa !109
  %153 = load i32, ptr %11, align 4, !tbaa !70
  %154 = and i32 %153, 524288
  %155 = icmp eq i32 %154, 0
  %156 = getelementptr inbounds %struct.Object, ptr %152, i64 0, i32 102
  %157 = load i8, ptr %156, align 8, !tbaa !110
  %158 = lshr i8 %157, 2
  %159 = select i1 %155, i8 %158, i8 %157
  %160 = and i8 %159, 1
  %161 = icmp ne i8 %160, 0
  %162 = or i1 %155, %161
  br i1 %162, label %169, label %163

163:                                              ; preds = %148
  %164 = getelementptr inbounds %struct.Object, ptr %152, i64 0, i32 87
  %165 = load i8, ptr %164, align 2, !tbaa !113
  %166 = add i8 %165, -1
  %167 = icmp ult i8 %166, 2
  %168 = zext i1 %167 to i8
  br label %169

169:                                              ; preds = %163, %148
  %170 = phi i8 [ %168, %163 ], [ %160, %148 ]
  %171 = icmp eq i8 %170, 0
  br i1 %171, label %172, label %196

172:                                              ; preds = %169
  %173 = getelementptr inbounds %struct.Object, ptr %152, i64 0, i32 52
  %174 = load i32, ptr %173, align 8, !tbaa !114
  %175 = load i32, ptr %10, align 8, !tbaa !85
  %176 = and i32 %175, %174
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %196, label %178

178:                                              ; preds = %172
  %179 = getelementptr inbounds %struct.Object, ptr %152, i64 0, i32 3
  %180 = load i16, ptr %179, align 8, !tbaa !115
  %181 = icmp eq i16 %180, 10
  br i1 %181, label %182, label %196

182:                                              ; preds = %178, %186
  %183 = phi ptr [ %184, %186 ], [ %31, %178 ]
  %184 = load ptr, ptr %183, align 8, !tbaa !16
  %185 = icmp eq ptr %184, null
  br i1 %185, label %194, label %186

186:                                              ; preds = %182
  %187 = getelementptr inbounds %struct.GroupObject, ptr %184, i64 0, i32 2
  %188 = load ptr, ptr %187, align 8, !tbaa !109
  %189 = icmp eq ptr %188, %152
  br i1 %189, label %190, label %182, !llvm.loop !116

190:                                              ; preds = %186
  %191 = getelementptr inbounds %struct.GroupObject, ptr %184, i64 0, i32 3
  %192 = load ptr, ptr %191, align 8, !tbaa !107
  store ptr %192, ptr %150, align 8, !tbaa !107
  %193 = icmp eq ptr %192, null
  br i1 %193, label %194, label %196

194:                                              ; preds = %182, %190
  %195 = call fastcc ptr @add_render_lamp(ptr noundef %0, ptr noundef %152)
  br label %196

196:                                              ; preds = %194, %190, %178, %172, %169
  %197 = load ptr, ptr %149, align 8, !tbaa !16
  %198 = icmp eq ptr %197, null
  br i1 %198, label %199, label %148, !llvm.loop !117

199:                                              ; preds = %196, %141, %136
  %200 = load ptr, ptr %137, align 8, !tbaa !16
  %201 = icmp eq ptr %200, null
  br i1 %201, label %202, label %136, !llvm.loop !118

202:                                              ; preds = %199, %131
  %203 = getelementptr inbounds %struct.Scene, ptr %132, i64 0, i32 4
  %204 = load ptr, ptr %203, align 8, !tbaa !16
  %205 = icmp eq ptr %204, null
  br i1 %205, label %206, label %131, !llvm.loop !119

206:                                              ; preds = %202, %126
  %207 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 98, i32 1
  %208 = load <4 x i32>, ptr %30, align 8, !tbaa !47
  %209 = shufflevector <4 x i32> %208, <4 x i32> poison, <4 x i32> <i32 0, i32 1, i32 3, i32 2>
  store <4 x i32> %209, ptr %207, align 4, !tbaa !47
  %210 = load i32, ptr %29, align 8, !tbaa !120
  %211 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 98, i32 5
  store i32 %210, ptr %211, align 4, !tbaa !121
  %212 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 90
  %213 = load ptr, ptr %212, align 8, !tbaa !122
  %214 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 91
  %215 = load ptr, ptr %214, align 8, !tbaa !123
  call void %213(ptr noundef %215, ptr noundef nonnull %20) #16
  br label %216

216:                                              ; preds = %206, %73
  store i32 1, ptr @slurph_opt, align 4, !tbaa !47
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %7) #16
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %6) #16
  ret void
}

declare zeroext i8 @BKE_scene_check_color_management_enabled(ptr noundef) local_unnamed_addr #5

declare ptr @RE_GetCamera(ptr noundef) local_unnamed_addr #5

declare ptr @BLI_strncpy(ptr noundef, ptr noundef, i64 noundef) local_unnamed_addr #5

declare ptr @BLI_memarena_new(i64 noundef, ptr noundef) local_unnamed_addr #5

declare void @BKE_scene_update_for_newframe(ptr noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #5

declare void @render_update_anim_renderdata(ptr noundef, ptr noundef) local_unnamed_addr #5

declare void @RE_SetCamera(ptr noundef, ptr noundef) local_unnamed_addr #5

declare void @normalize_m4_m4(ptr noundef, ptr noundef) local_unnamed_addr #5

declare zeroext i8 @invert_m4(ptr noundef) local_unnamed_addr #5

declare void @RE_SetView(ptr noundef, ptr noundef) local_unnamed_addr #5

declare void @DAG_id_tag_update_ex(ptr noundef, ptr noundef, i16 noundef signext) local_unnamed_addr #5

declare void @copy_m4_m4(ptr noundef, ptr noundef) local_unnamed_addr #5

declare void @init_render_qmcsampler(ptr noundef) local_unnamed_addr #5

declare void @init_ao_sphere(ptr noundef) local_unnamed_addr #5

declare void @init_render_textures(ptr noundef) local_unnamed_addr #5

declare void @init_render_materials(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #5

declare void @set_node_shader_lamp_loop(ptr noundef) local_unnamed_addr #5

declare void @shade_material_loop(ptr noundef, ptr noundef) #5

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @database_init_objects(ptr noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3, ptr noundef %4, i32 noundef %5) unnamed_addr #3 {
  %7 = alloca ptr, align 8
  %8 = alloca [4 x [4 x float]], align 16
  %9 = alloca [4 x [4 x float]], align 16
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %7) #16
  store ptr null, ptr @set_dupli_tex_mat.lastob, align 8, !tbaa !16
  store i1 false, ptr @set_dupli_tex_mat.needtexmat, align 4
  %10 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 43
  %11 = load ptr, ptr %10, align 8, !tbaa !77
  %12 = getelementptr inbounds %struct.Main, ptr %11, i64 0, i32 13
  %13 = load ptr, ptr %12, align 8, !tbaa !16
  %14 = icmp eq ptr %13, null
  br i1 %14, label %31, label %15

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 32
  br label %17

17:                                               ; preds = %15, %17
  %18 = phi ptr [ %13, %15 ], [ %29, %17 ]
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %8) #16
  %19 = getelementptr inbounds %struct.Object, ptr %18, i64 0, i32 47
  call void @mul_m4_m4m4(ptr noundef nonnull %8, ptr noundef nonnull %16, ptr noundef nonnull %19) #16
  %20 = getelementptr inbounds %struct.Object, ptr %18, i64 0, i32 51
  %21 = call zeroext i8 @invert_m4_m4(ptr noundef nonnull %20, ptr noundef nonnull %8) #16
  %22 = getelementptr inbounds %struct.Object, ptr %18, i64 0, i32 50
  call void @copy_m4_m4(ptr noundef nonnull %22, ptr noundef nonnull %20) #16
  %23 = getelementptr inbounds %struct.Object, ptr %18, i64 0, i32 53
  %24 = load i16, ptr %23, align 4, !tbaa !124
  %25 = and i16 %24, -1025
  store i16 %25, ptr %23, align 4, !tbaa !124
  %26 = getelementptr inbounds %struct.Object, ptr %18, i64 0, i32 55
  %27 = load i16, ptr %26, align 8, !tbaa !125
  %28 = and i16 %27, -4097
  store i16 %28, ptr %26, align 8, !tbaa !125
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %8) #16
  %29 = load ptr, ptr %18, align 8, !tbaa !16
  %30 = icmp eq ptr %29, null
  br i1 %30, label %31, label %17, !llvm.loop !126

31:                                               ; preds = %17, %6
  %32 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 44
  %33 = load ptr, ptr %32, align 8, !tbaa !17
  store ptr %33, ptr %7, align 8, !tbaa !16
  %34 = call ptr @_setlooper_base_step(ptr noundef nonnull %7, ptr noundef null) #16
  %35 = icmp eq ptr %34, null
  br i1 %35, label %533, label %36

36:                                               ; preds = %31
  %37 = icmp eq i32 %5, 0
  %38 = getelementptr i8, ptr %0, i64 1620
  %39 = icmp ne i32 %2, 0
  %40 = icmp eq i32 %3, 0
  %41 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 48
  %42 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 101
  %43 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 68
  %44 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 32
  %45 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 96
  %46 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 97
  br label %47

47:                                               ; preds = %36, %530
  %48 = phi ptr [ %34, %36 ], [ %531, %530 ]
  %49 = getelementptr inbounds %struct.Base, ptr %48, i64 0, i32 7
  %50 = load ptr, ptr %49, align 8, !tbaa !127
  %51 = load ptr, ptr %32, align 8, !tbaa !17
  %52 = getelementptr inbounds %struct.Scene, ptr %51, i64 0, i32 22, i32 60
  %53 = load ptr, ptr %52, align 8, !tbaa !16
  %54 = icmp eq ptr %53, null
  br i1 %54, label %70, label %55

55:                                               ; preds = %47, %66
  %56 = phi ptr [ %68, %66 ], [ %53, %47 ]
  %57 = phi i32 [ %67, %66 ], [ 0, %47 ]
  %58 = getelementptr inbounds %struct.SceneRenderLayer, ptr %56, i64 0, i32 9
  %59 = load i32, ptr %58, align 8, !tbaa !129
  %60 = and i32 %59, 512
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %66, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %struct.SceneRenderLayer, ptr %56, i64 0, i32 5
  %64 = load i32, ptr %63, align 8, !tbaa !130
  %65 = or i32 %64, %57
  br label %66

66:                                               ; preds = %62, %55
  %67 = phi i32 [ %65, %62 ], [ %57, %55 ]
  %68 = load ptr, ptr %56, align 8, !tbaa !16
  %69 = icmp eq ptr %68, null
  br i1 %69, label %70, label %55, !llvm.loop !131

70:                                               ; preds = %66, %47
  %71 = phi i32 [ 0, %47 ], [ %67, %66 ]
  %72 = select i1 %37, i32 -1, i32 %71
  %73 = and i32 %72, %1
  %74 = load i32, ptr %38, align 4, !tbaa !70
  %75 = and i32 %74, 524288
  %76 = icmp eq i32 %75, 0
  %77 = getelementptr inbounds %struct.Object, ptr %50, i64 0, i32 102
  %78 = load i8, ptr %77, align 8, !tbaa !110
  %79 = lshr i8 %78, 2
  %80 = select i1 %76, i8 %79, i8 %78
  %81 = and i8 %80, 1
  %82 = icmp eq i8 %81, 0
  br i1 %82, label %83, label %530

83:                                               ; preds = %70
  %84 = getelementptr inbounds %struct.Object, ptr %50, i64 0, i32 53
  %85 = load i16, ptr %84, align 4, !tbaa !124
  %86 = and i16 %85, 1024
  %87 = icmp eq i16 %86, 0
  br i1 %87, label %131, label %88

88:                                               ; preds = %83
  %89 = getelementptr inbounds %struct.Object, ptr %50, i64 0, i32 55
  %90 = load i16, ptr %89, align 8, !tbaa !125
  %91 = and i16 %90, 4096
  %92 = icmp eq i16 %91, 0
  br i1 %92, label %525, label %93

93:                                               ; preds = %88
  br i1 %76, label %99, label %94

94:                                               ; preds = %93
  %95 = getelementptr inbounds %struct.Object, ptr %50, i64 0, i32 87
  %96 = load i8, ptr %95, align 2, !tbaa !113
  %97 = add i8 %96, -3
  %98 = icmp ult i8 %97, -2
  br i1 %98, label %99, label %525

99:                                               ; preds = %93, %94
  %100 = getelementptr inbounds %struct.Object, ptr %50, i64 0, i32 109
  %101 = load ptr, ptr %100, align 8, !tbaa !132
  %102 = icmp eq ptr %101, null
  br i1 %102, label %103, label %110

103:                                              ; preds = %99
  %104 = zext i16 %90 to i32
  %105 = and i32 %104, 2840
  %106 = icmp ne i32 %105, 0
  %107 = and i32 %104, 8
  %108 = icmp eq i32 %107, 0
  %109 = and i1 %106, %108
  br i1 %109, label %525, label %110

110:                                              ; preds = %103, %99
  %111 = getelementptr inbounds %struct.Object, ptr %50, i64 0, i32 3
  %112 = load i16, ptr %111, align 8, !tbaa !115
  %113 = icmp eq i16 %112, 5
  br i1 %113, label %114, label %117

114:                                              ; preds = %110
  %115 = call ptr @BKE_mball_basis_find(ptr noundef %51, ptr noundef nonnull %50) #16
  %116 = icmp eq ptr %115, %50
  br i1 %116, label %117, label %525

117:                                              ; preds = %114, %110
  br i1 %39, label %118, label %121

118:                                              ; preds = %117
  %119 = load i16, ptr %111, align 8, !tbaa !115
  %120 = icmp eq i16 %119, 10
  br i1 %120, label %525, label %121

121:                                              ; preds = %118, %117
  %122 = icmp eq ptr %50, %4
  %123 = or i1 %40, %122
  br i1 %123, label %128, label %124

124:                                              ; preds = %121
  %125 = load i16, ptr %84, align 4, !tbaa !124
  %126 = and i16 %125, 1
  %127 = icmp eq i16 %126, 0
  br i1 %127, label %525, label %128

128:                                              ; preds = %124, %121
  call fastcc void @init_render_object(ptr noundef nonnull %0, ptr noundef nonnull %50, ptr noundef null, ptr noundef null, ptr noundef null, i32 noundef %5)
  %129 = load i16, ptr %89, align 8, !tbaa !125
  %130 = and i16 %129, -4097
  store i16 %130, ptr %89, align 8, !tbaa !125
  br label %525

131:                                              ; preds = %83
  %132 = getelementptr inbounds %struct.Base, ptr %48, i64 0, i32 2
  %133 = load i32, ptr %132, align 8, !tbaa !133
  %134 = and i32 %73, %133
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %144

136:                                              ; preds = %131
  %137 = getelementptr inbounds %struct.Object, ptr %50, i64 0, i32 3
  %138 = load i16, ptr %137, align 8, !tbaa !115
  %139 = icmp eq i16 %138, 10
  br i1 %139, label %140, label %525

140:                                              ; preds = %136
  %141 = load i32, ptr %41, align 8, !tbaa !85
  %142 = and i32 %141, %133
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %525, label %144

144:                                              ; preds = %140, %131
  %145 = getelementptr inbounds %struct.Object, ptr %50, i64 0, i32 55
  %146 = load i16, ptr %145, align 8, !tbaa !125
  %147 = and i16 %146, 2840
  %148 = icmp eq i16 %147, 0
  br i1 %148, label %489, label %149

149:                                              ; preds = %144
  %150 = getelementptr inbounds %struct.Object, ptr %50, i64 0, i32 3
  %151 = load i16, ptr %150, align 8, !tbaa !115
  %152 = icmp eq i16 %151, 5
  br i1 %152, label %489, label %153

153:                                              ; preds = %149
  call fastcc void @dupli_render_particle_set(ptr noundef nonnull %0, ptr noundef nonnull %50, i32 noundef %5, i32 noundef 0, i32 noundef 1)
  %154 = load ptr, ptr %42, align 8, !tbaa !91
  %155 = load ptr, ptr %32, align 8, !tbaa !17
  %156 = call ptr @object_duplilist(ptr noundef %154, ptr noundef %155, ptr noundef nonnull %50) #16
  %157 = call ptr @duplilist_apply(ptr noundef nonnull %50, ptr noundef %156) #16
  call fastcc void @dupli_render_particle_set(ptr noundef nonnull %0, ptr noundef nonnull %50, i32 noundef %5, i32 noundef 0, i32 noundef 0)
  %158 = load ptr, ptr %156, align 8, !tbaa !16
  %159 = icmp eq ptr %158, null
  br i1 %159, label %436, label %160

160:                                              ; preds = %153
  %161 = getelementptr inbounds %struct.DupliApplyData, ptr %157, i64 0, i32 1
  %162 = getelementptr inbounds %struct.Object, ptr %50, i64 0, i32 52
  br label %163

163:                                              ; preds = %160, %432
  %164 = phi i64 [ 0, %160 ], [ %433, %432 ]
  %165 = phi ptr [ %158, %160 ], [ %434, %432 ]
  %166 = load ptr, ptr %161, align 8, !tbaa !134
  %167 = getelementptr inbounds %struct.DupliExtraData, ptr %166, i64 %164
  %168 = getelementptr inbounds %struct.DupliObject, ptr %165, i64 0, i32 2
  %169 = load ptr, ptr %168, align 8, !tbaa !136
  %170 = getelementptr inbounds %struct.Object, ptr %169, i64 0, i32 47
  %171 = getelementptr inbounds %struct.DupliObject, ptr %165, i64 0, i32 3
  call void @copy_m4_m4(ptr noundef nonnull %170, ptr noundef nonnull %171) #16
  %172 = getelementptr inbounds %struct.Object, ptr %169, i64 0, i32 55
  %173 = load i16, ptr %172, align 8, !tbaa !125
  %174 = and i16 %173, 4096
  %175 = icmp eq i16 %174, 0
  br i1 %175, label %176, label %180

176:                                              ; preds = %163
  %177 = getelementptr inbounds %struct.DupliObject, ptr %165, i64 0, i32 7
  %178 = load i8, ptr %177, align 2, !tbaa !138
  %179 = icmp eq i8 %178, 0
  br i1 %179, label %180, label %432

180:                                              ; preds = %176, %163
  %181 = load i32, ptr %38, align 4, !tbaa !70
  %182 = and i32 %181, 524288
  %183 = icmp eq i32 %182, 0
  %184 = getelementptr inbounds %struct.Object, ptr %169, i64 0, i32 102
  %185 = load i8, ptr %184, align 8, !tbaa !110
  %186 = lshr i8 %185, 2
  %187 = select i1 %183, i8 %186, i8 %185
  %188 = and i8 %187, 1
  %189 = icmp ne i8 %188, 0
  %190 = or i1 %183, %189
  br i1 %190, label %197, label %191

191:                                              ; preds = %180
  %192 = getelementptr inbounds %struct.Object, ptr %169, i64 0, i32 87
  %193 = load i8, ptr %192, align 2, !tbaa !113
  %194 = add i8 %193, -1
  %195 = icmp ult i8 %194, 2
  %196 = zext i1 %195 to i8
  br label %197

197:                                              ; preds = %180, %191
  %198 = phi i8 [ %196, %191 ], [ %188, %180 ]
  %199 = icmp eq i8 %198, 0
  br i1 %199, label %200, label %432

200:                                              ; preds = %197
  %201 = getelementptr inbounds %struct.Object, ptr %169, i64 0, i32 3
  %202 = load i16, ptr %201, align 8, !tbaa !115
  %203 = icmp eq i16 %202, 5
  br i1 %203, label %432, label %204

204:                                              ; preds = %200
  br i1 %190, label %211, label %205

205:                                              ; preds = %204
  %206 = getelementptr inbounds %struct.Object, ptr %169, i64 0, i32 87
  %207 = load i8, ptr %206, align 2, !tbaa !113
  %208 = add i8 %207, -1
  %209 = icmp ult i8 %208, 2
  %210 = zext i1 %209 to i8
  br label %211

211:                                              ; preds = %205, %204
  %212 = phi i8 [ %210, %205 ], [ %188, %204 ]
  %213 = icmp eq i8 %212, 0
  br i1 %213, label %214, label %432

214:                                              ; preds = %211
  %215 = getelementptr inbounds %struct.Object, ptr %169, i64 0, i32 109
  %216 = load ptr, ptr %215, align 8, !tbaa !132
  %217 = icmp eq ptr %216, null
  br i1 %217, label %218, label %228

218:                                              ; preds = %214
  %219 = zext i16 %173 to i32
  %220 = and i32 %219, 2840
  %221 = icmp ne i32 %220, 0
  %222 = and i32 %219, 8
  %223 = icmp eq i32 %222, 0
  %224 = and i1 %221, %223
  %225 = icmp eq i16 %202, 10
  %226 = and i1 %39, %225
  %227 = or i1 %224, %226
  br i1 %227, label %432, label %231

228:                                              ; preds = %214
  %229 = icmp eq i16 %202, 10
  %230 = and i1 %39, %229
  br i1 %230, label %432, label %231

231:                                              ; preds = %218, %228
  %232 = icmp eq ptr %169, %4
  %233 = or i1 %40, %232
  br i1 %233, label %239, label %234

234:                                              ; preds = %231
  %235 = getelementptr inbounds %struct.Object, ptr %169, i64 0, i32 53
  %236 = load i16, ptr %235, align 4, !tbaa !124
  %237 = and i16 %236, 1
  %238 = icmp eq i16 %237, 0
  br i1 %238, label %432, label %239

239:                                              ; preds = %234, %231
  %240 = call ptr @give_totcolp(ptr noundef nonnull %169) #16
  %241 = icmp eq ptr %240, null
  br i1 %241, label %257, label %242

242:                                              ; preds = %239
  %243 = load i16, ptr %240, align 2, !tbaa !46
  %244 = icmp sgt i16 %243, 0
  br i1 %244, label %245, label %257

245:                                              ; preds = %242, %254
  %246 = phi i16 [ %247, %254 ], [ 0, %242 ]
  %247 = add nuw nsw i16 %246, 1
  %248 = call ptr @give_current_material(ptr noundef %169, i16 noundef signext %247) #16
  %249 = icmp eq ptr %248, null
  br i1 %249, label %254, label %250

250:                                              ; preds = %245
  %251 = getelementptr inbounds %struct.Material, ptr %248, i64 0, i32 2
  %252 = load i16, ptr %251, align 8, !tbaa !139
  %253 = icmp eq i16 %252, 1
  br i1 %253, label %426, label %254

254:                                              ; preds = %250, %245
  %255 = load i16, ptr %240, align 2, !tbaa !46
  %256 = icmp slt i16 %247, %255
  br i1 %256, label %245, label %257, !llvm.loop !140

257:                                              ; preds = %254, %242, %239
  br label %258

258:                                              ; preds = %257, %262
  %259 = phi ptr [ %260, %262 ], [ %215, %257 ]
  %260 = load ptr, ptr %259, align 8, !tbaa !16
  %261 = icmp eq ptr %260, null
  br i1 %261, label %269, label %262

262:                                              ; preds = %258
  %263 = getelementptr inbounds %struct.ParticleSystem, ptr %260, i64 0, i32 2
  %264 = load ptr, ptr %263, align 8, !tbaa !141
  %265 = getelementptr inbounds %struct.ParticleSettings, ptr %264, i64 0, i32 21
  %266 = load i16, ptr %265, align 8, !tbaa !143
  %267 = add i16 %266, -5
  %268 = icmp ult i16 %267, 5
  br i1 %268, label %258, label %426, !llvm.loop !145

269:                                              ; preds = %258
  %270 = load i16, ptr %201, align 8, !tbaa !115
  %271 = add i16 %270, -6
  %272 = icmp ult i16 %271, -5
  br i1 %272, label %426, label %273

273:                                              ; preds = %269
  %274 = getelementptr inbounds %struct.DupliObject, ptr %165, i64 0, i32 6
  %275 = load i16, ptr %274, align 4, !tbaa !146
  %276 = icmp eq i16 %275, 256
  br i1 %276, label %277, label %281

277:                                              ; preds = %273
  %278 = getelementptr inbounds %struct.DupliObject, ptr %165, i64 0, i32 8
  %279 = load i8, ptr %278, align 1, !tbaa !147
  %280 = icmp eq i8 %279, 0
  br i1 %280, label %282, label %426

281:                                              ; preds = %273
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %9) #16
  br label %306

282:                                              ; preds = %277
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %9) #16
  %283 = load i16, ptr %172, align 8, !tbaa !125
  %284 = and i16 %283, 4096
  %285 = icmp eq i16 %284, 0
  br i1 %285, label %286, label %335

286:                                              ; preds = %282
  %287 = load ptr, ptr %43, align 8, !tbaa !16
  %288 = icmp eq ptr %287, null
  br i1 %288, label %335, label %289

289:                                              ; preds = %286, %303
  %290 = phi ptr [ %304, %303 ], [ %287, %286 ]
  %291 = getelementptr inbounds %struct.ObjectRen, ptr %290, i64 0, i32 2
  %292 = load ptr, ptr %291, align 8, !tbaa !148
  %293 = icmp eq ptr %292, %169
  br i1 %293, label %294, label %303

294:                                              ; preds = %289
  %295 = getelementptr inbounds %struct.ObjectRen, ptr %290, i64 0, i32 6
  %296 = load i32, ptr %295, align 4, !tbaa !150
  %297 = icmp eq i32 %296, 0
  br i1 %297, label %298, label %303

298:                                              ; preds = %294
  %299 = getelementptr inbounds %struct.ObjectRen, ptr %290, i64 0, i32 7
  %300 = load i32, ptr %299, align 8, !tbaa !151
  %301 = and i32 %300, 1
  %302 = icmp eq i32 %301, 0
  br i1 %302, label %303, label %306

303:                                              ; preds = %298, %294, %289
  %304 = load ptr, ptr %290, align 8, !tbaa !16
  %305 = icmp eq ptr %304, null
  br i1 %305, label %335, label %289, !llvm.loop !152

306:                                              ; preds = %298, %281
  %307 = phi ptr [ null, %281 ], [ %290, %298 ]
  call void @mul_m4_m4m4(ptr noundef nonnull %9, ptr noundef nonnull %44, ptr noundef nonnull %171) #16
  %308 = getelementptr inbounds %struct.DupliObject, ptr %165, i64 0, i32 9
  %309 = load i32, ptr %308, align 8, !tbaa !47
  %310 = load i32, ptr %162, align 8, !tbaa !114
  %311 = call ptr @RE_addRenderInstance(ptr noundef %0, ptr noundef null, ptr noundef %169, ptr noundef %50, i32 noundef %309, i32 noundef 0, ptr noundef nonnull %9, i32 noundef %310) #16
  call fastcc void @set_dupli_tex_mat(ptr noundef %0, ptr noundef %311, ptr noundef nonnull %165, ptr noundef %167)
  %312 = load i16, ptr %274, align 4, !tbaa !146
  %313 = icmp eq i16 %312, 256
  br i1 %313, label %330, label %314

314:                                              ; preds = %306
  %315 = getelementptr inbounds %struct.ObjectInstanceRen, ptr %311, i64 0, i32 12
  %316 = getelementptr inbounds %struct.DupliObject, ptr %165, i64 0, i32 4
  %317 = load float, ptr %316, align 4, !tbaa !13
  store float %317, ptr %315, align 4, !tbaa !13
  %318 = getelementptr inbounds %struct.DupliObject, ptr %165, i64 0, i32 4, i64 1
  %319 = load float, ptr %318, align 4, !tbaa !13
  %320 = getelementptr inbounds %struct.ObjectInstanceRen, ptr %311, i64 0, i32 12, i64 1
  store float %319, ptr %320, align 4, !tbaa !13
  %321 = getelementptr inbounds %struct.DupliObject, ptr %165, i64 0, i32 4, i64 2
  %322 = load float, ptr %321, align 4, !tbaa !13
  %323 = getelementptr inbounds %struct.ObjectInstanceRen, ptr %311, i64 0, i32 12, i64 2
  store float %322, ptr %323, align 4, !tbaa !13
  %324 = getelementptr inbounds %struct.DupliObject, ptr %165, i64 0, i32 5
  %325 = load float, ptr %324, align 4, !tbaa !13
  %326 = getelementptr inbounds %struct.ObjectInstanceRen, ptr %311, i64 0, i32 13
  store float %325, ptr %326, align 8, !tbaa !13
  %327 = getelementptr inbounds %struct.DupliObject, ptr %165, i64 0, i32 5, i64 1
  %328 = load float, ptr %327, align 4, !tbaa !13
  %329 = getelementptr inbounds %struct.ObjectInstanceRen, ptr %311, i64 0, i32 13, i64 1
  store float %328, ptr %329, align 4, !tbaa !13
  br label %335

330:                                              ; preds = %306
  call fastcc void @assign_dupligroup_dupli(ptr noundef %0, ptr noundef %311, ptr noundef %307, ptr noundef nonnull %165)
  %331 = load i16, ptr %172, align 8, !tbaa !125
  %332 = and i16 %331, 4096
  %333 = icmp eq i16 %332, 0
  br i1 %333, label %335, label %334

334:                                              ; preds = %330
  call fastcc void @find_dupli_instances(ptr noundef %0, ptr noundef %307, ptr noundef nonnull %165)
  br label %335

335:                                              ; preds = %303, %286, %282, %314, %334, %330
  %336 = phi ptr [ %311, %314 ], [ %311, %334 ], [ %311, %330 ], [ null, %282 ], [ null, %286 ], [ null, %303 ]
  %337 = phi ptr [ %307, %314 ], [ %307, %334 ], [ %307, %330 ], [ null, %282 ], [ null, %286 ], [ null, %303 ]
  %338 = load ptr, ptr %215, align 8, !tbaa !16
  %339 = icmp eq ptr %338, null
  br i1 %339, label %412, label %340

340:                                              ; preds = %335
  %341 = getelementptr inbounds %struct.DupliObject, ptr %165, i64 0, i32 9
  %342 = getelementptr inbounds %struct.Object, ptr %169, i64 0, i32 52
  %343 = getelementptr inbounds %struct.DupliObject, ptr %165, i64 0, i32 4
  %344 = getelementptr inbounds %struct.DupliObject, ptr %165, i64 0, i32 4, i64 1
  %345 = getelementptr inbounds %struct.DupliObject, ptr %165, i64 0, i32 4, i64 2
  %346 = getelementptr inbounds %struct.DupliObject, ptr %165, i64 0, i32 5
  %347 = getelementptr inbounds %struct.DupliObject, ptr %165, i64 0, i32 5, i64 1
  br label %348

348:                                              ; preds = %340, %406
  %349 = phi ptr [ %338, %340 ], [ %410, %406 ]
  %350 = phi i32 [ 1, %340 ], [ %409, %406 ]
  %351 = phi ptr [ %337, %340 ], [ %408, %406 ]
  %352 = phi ptr [ %336, %340 ], [ %407, %406 ]
  %353 = load i16, ptr %274, align 4, !tbaa !146
  %354 = icmp eq i16 %353, 256
  br i1 %354, label %355, label %379

355:                                              ; preds = %348
  %356 = load i16, ptr %172, align 8, !tbaa !125
  %357 = and i16 %356, 4096
  %358 = icmp eq i16 %357, 0
  br i1 %358, label %359, label %406

359:                                              ; preds = %355
  %360 = load ptr, ptr %43, align 8, !tbaa !16
  %361 = icmp eq ptr %360, null
  br i1 %361, label %406, label %362

362:                                              ; preds = %359, %376
  %363 = phi ptr [ %377, %376 ], [ %360, %359 ]
  %364 = getelementptr inbounds %struct.ObjectRen, ptr %363, i64 0, i32 2
  %365 = load ptr, ptr %364, align 8, !tbaa !148
  %366 = icmp eq ptr %365, %169
  br i1 %366, label %367, label %376

367:                                              ; preds = %362
  %368 = getelementptr inbounds %struct.ObjectRen, ptr %363, i64 0, i32 6
  %369 = load i32, ptr %368, align 4, !tbaa !150
  %370 = icmp eq i32 %369, %350
  br i1 %370, label %371, label %376

371:                                              ; preds = %367
  %372 = getelementptr inbounds %struct.ObjectRen, ptr %363, i64 0, i32 7
  %373 = load i32, ptr %372, align 8, !tbaa !151
  %374 = and i32 %373, 1
  %375 = icmp eq i32 %374, 0
  br i1 %375, label %376, label %379

376:                                              ; preds = %371, %367, %362
  %377 = load ptr, ptr %363, align 8, !tbaa !16
  %378 = icmp eq ptr %377, null
  br i1 %378, label %406, label %362, !llvm.loop !152

379:                                              ; preds = %371, %348
  %380 = phi ptr [ %351, %348 ], [ %363, %371 ]
  %381 = icmp eq ptr %352, null
  br i1 %381, label %382, label %383

382:                                              ; preds = %379
  call void @mul_m4_m4m4(ptr noundef nonnull %9, ptr noundef nonnull %44, ptr noundef nonnull %171) #16
  br label %383

383:                                              ; preds = %382, %379
  %384 = load i32, ptr %341, align 8, !tbaa !47
  %385 = add nsw i32 %350, 1
  %386 = load i32, ptr %342, align 8, !tbaa !114
  %387 = call ptr @RE_addRenderInstance(ptr noundef %0, ptr noundef null, ptr noundef %169, ptr noundef %50, i32 noundef %384, i32 noundef %350, ptr noundef nonnull %9, i32 noundef %386) #16
  call fastcc void @set_dupli_tex_mat(ptr noundef %0, ptr noundef %387, ptr noundef nonnull %165, ptr noundef %167)
  %388 = load i16, ptr %274, align 4, !tbaa !146
  %389 = icmp eq i16 %388, 256
  br i1 %389, label %401, label %390

390:                                              ; preds = %383
  %391 = getelementptr inbounds %struct.ObjectInstanceRen, ptr %387, i64 0, i32 12
  %392 = load float, ptr %343, align 4, !tbaa !13
  store float %392, ptr %391, align 4, !tbaa !13
  %393 = load float, ptr %344, align 4, !tbaa !13
  %394 = getelementptr inbounds %struct.ObjectInstanceRen, ptr %387, i64 0, i32 12, i64 1
  store float %393, ptr %394, align 4, !tbaa !13
  %395 = load float, ptr %345, align 4, !tbaa !13
  %396 = getelementptr inbounds %struct.ObjectInstanceRen, ptr %387, i64 0, i32 12, i64 2
  store float %395, ptr %396, align 4, !tbaa !13
  %397 = load float, ptr %346, align 4, !tbaa !13
  %398 = getelementptr inbounds %struct.ObjectInstanceRen, ptr %387, i64 0, i32 13
  store float %397, ptr %398, align 8, !tbaa !13
  %399 = load float, ptr %347, align 4, !tbaa !13
  %400 = getelementptr inbounds %struct.ObjectInstanceRen, ptr %387, i64 0, i32 13, i64 1
  store float %399, ptr %400, align 4, !tbaa !13
  br label %406

401:                                              ; preds = %383
  call fastcc void @assign_dupligroup_dupli(ptr noundef %0, ptr noundef %387, ptr noundef %380, ptr noundef nonnull %165)
  %402 = load i16, ptr %172, align 8, !tbaa !125
  %403 = and i16 %402, 4096
  %404 = icmp eq i16 %403, 0
  br i1 %404, label %406, label %405

405:                                              ; preds = %401
  call fastcc void @find_dupli_instances(ptr noundef %0, ptr noundef %380, ptr noundef nonnull %165)
  br label %406

406:                                              ; preds = %376, %359, %355, %401, %405, %390
  %407 = phi ptr [ %387, %390 ], [ %387, %405 ], [ %387, %401 ], [ %352, %355 ], [ %352, %359 ], [ %352, %376 ]
  %408 = phi ptr [ %380, %390 ], [ %380, %405 ], [ %380, %401 ], [ null, %355 ], [ null, %359 ], [ null, %376 ]
  %409 = phi i32 [ %385, %390 ], [ %385, %405 ], [ %385, %401 ], [ %350, %355 ], [ %350, %359 ], [ %350, %376 ]
  %410 = load ptr, ptr %349, align 8, !tbaa !16
  %411 = icmp eq ptr %410, null
  br i1 %411, label %412, label %348, !llvm.loop !153

412:                                              ; preds = %406, %335
  %413 = phi ptr [ %336, %335 ], [ %407, %406 ]
  %414 = icmp eq ptr %413, null
  br i1 %414, label %415, label %416

415:                                              ; preds = %412
  call fastcc void @init_render_object(ptr noundef %0, ptr noundef %169, ptr noundef %50, ptr noundef nonnull %165, ptr noundef %167, i32 noundef %5)
  br label %416

416:                                              ; preds = %415, %412
  %417 = load i16, ptr %274, align 4, !tbaa !146
  %418 = icmp eq i16 %417, 256
  br i1 %418, label %425, label %419

419:                                              ; preds = %416
  %420 = getelementptr inbounds %struct.Object, ptr %169, i64 0, i32 53
  %421 = load i16, ptr %420, align 4, !tbaa !124
  %422 = or i16 %421, 1024
  store i16 %422, ptr %420, align 4, !tbaa !124
  %423 = load i16, ptr %172, align 8, !tbaa !125
  %424 = or i16 %423, 4096
  store i16 %424, ptr %172, align 8, !tbaa !125
  br label %425

425:                                              ; preds = %419, %416
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %9) #16
  br label %427

426:                                              ; preds = %250, %262, %269, %277
  call fastcc void @init_render_object(ptr noundef %0, ptr noundef %169, ptr noundef %50, ptr noundef nonnull %165, ptr noundef %167, i32 noundef %5)
  br label %427

427:                                              ; preds = %425, %426
  %428 = load ptr, ptr %45, align 8, !tbaa !93
  %429 = load ptr, ptr %46, align 8, !tbaa !94
  %430 = call i32 %428(ptr noundef %429) #16
  %431 = icmp eq i32 %430, 0
  br i1 %431, label %432, label %436

432:                                              ; preds = %228, %234, %218, %211, %200, %197, %176, %427
  %433 = add nuw i64 %164, 1
  %434 = load ptr, ptr %165, align 8, !tbaa !16
  %435 = icmp eq ptr %434, null
  br i1 %435, label %436, label %163, !llvm.loop !154

436:                                              ; preds = %432, %427, %153
  %437 = icmp eq ptr %157, null
  br i1 %437, label %439, label %438

438:                                              ; preds = %436
  call void @duplilist_restore(ptr noundef nonnull %156, ptr noundef nonnull %157) #16
  call void @duplilist_free_apply_data(ptr noundef nonnull %157) #16
  br label %439

439:                                              ; preds = %438, %436
  call void @free_object_duplilist(ptr noundef nonnull %156) #16
  %440 = load i32, ptr %38, align 4, !tbaa !70
  %441 = and i32 %440, 524288
  %442 = icmp eq i32 %441, 0
  %443 = load i8, ptr %77, align 8, !tbaa !110
  %444 = lshr i8 %443, 2
  %445 = select i1 %442, i8 %444, i8 %443
  %446 = and i8 %445, 1
  %447 = icmp ne i8 %446, 0
  %448 = or i1 %442, %447
  br i1 %448, label %455, label %449

449:                                              ; preds = %439
  %450 = getelementptr inbounds %struct.Object, ptr %50, i64 0, i32 87
  %451 = load i8, ptr %450, align 2, !tbaa !113
  %452 = add i8 %451, -1
  %453 = icmp ult i8 %452, 2
  %454 = zext i1 %453 to i8
  br label %455

455:                                              ; preds = %449, %439
  %456 = phi i8 [ %454, %449 ], [ %446, %439 ]
  %457 = icmp eq i8 %456, 0
  br i1 %457, label %458, label %525

458:                                              ; preds = %455
  %459 = getelementptr inbounds %struct.Object, ptr %50, i64 0, i32 109
  %460 = load ptr, ptr %459, align 8, !tbaa !132
  %461 = icmp eq ptr %460, null
  br i1 %461, label %462, label %470

462:                                              ; preds = %458
  %463 = load i16, ptr %145, align 8, !tbaa !125
  %464 = zext i16 %463 to i32
  %465 = and i32 %464, 2840
  %466 = icmp ne i32 %465, 0
  %467 = and i32 %464, 8
  %468 = icmp eq i32 %467, 0
  %469 = and i1 %466, %468
  br i1 %469, label %525, label %470

470:                                              ; preds = %462, %458
  %471 = load i16, ptr %150, align 8, !tbaa !115
  %472 = icmp eq i16 %471, 5
  br i1 %472, label %473, label %477

473:                                              ; preds = %470
  %474 = load ptr, ptr %32, align 8, !tbaa !17
  %475 = call ptr @BKE_mball_basis_find(ptr noundef %474, ptr noundef nonnull %50) #16
  %476 = icmp eq ptr %475, %50
  br i1 %476, label %477, label %525

477:                                              ; preds = %473, %470
  br i1 %39, label %478, label %481

478:                                              ; preds = %477
  %479 = load i16, ptr %150, align 8, !tbaa !115
  %480 = icmp eq i16 %479, 10
  br i1 %480, label %525, label %481

481:                                              ; preds = %478, %477
  %482 = icmp eq ptr %50, %4
  %483 = or i1 %40, %482
  br i1 %483, label %488, label %484

484:                                              ; preds = %481
  %485 = load i16, ptr %84, align 4, !tbaa !124
  %486 = and i16 %485, 1
  %487 = icmp eq i16 %486, 0
  br i1 %487, label %525, label %488

488:                                              ; preds = %484, %481
  call fastcc void @init_render_object(ptr noundef nonnull %0, ptr noundef nonnull %50, ptr noundef null, ptr noundef null, ptr noundef null, i32 noundef %5)
  br label %525

489:                                              ; preds = %149, %144
  br i1 %76, label %495, label %490

490:                                              ; preds = %489
  %491 = getelementptr inbounds %struct.Object, ptr %50, i64 0, i32 87
  %492 = load i8, ptr %491, align 2, !tbaa !113
  %493 = add i8 %492, -3
  %494 = icmp ult i8 %493, -2
  br i1 %494, label %495, label %525

495:                                              ; preds = %489, %490
  %496 = getelementptr inbounds %struct.Object, ptr %50, i64 0, i32 109
  %497 = load ptr, ptr %496, align 8, !tbaa !132
  %498 = icmp eq ptr %497, null
  br i1 %498, label %499, label %506

499:                                              ; preds = %495
  %500 = zext i16 %146 to i32
  %501 = and i32 %500, 2840
  %502 = icmp ne i32 %501, 0
  %503 = and i32 %500, 8
  %504 = icmp eq i32 %503, 0
  %505 = and i1 %502, %504
  br i1 %505, label %525, label %506

506:                                              ; preds = %499, %495
  %507 = getelementptr inbounds %struct.Object, ptr %50, i64 0, i32 3
  %508 = load i16, ptr %507, align 8, !tbaa !115
  %509 = icmp eq i16 %508, 5
  br i1 %509, label %510, label %513

510:                                              ; preds = %506
  %511 = call ptr @BKE_mball_basis_find(ptr noundef %51, ptr noundef nonnull %50) #16
  %512 = icmp eq ptr %511, %50
  br i1 %512, label %513, label %525

513:                                              ; preds = %510, %506
  br i1 %39, label %514, label %517

514:                                              ; preds = %513
  %515 = load i16, ptr %507, align 8, !tbaa !115
  %516 = icmp eq i16 %515, 10
  br i1 %516, label %525, label %517

517:                                              ; preds = %514, %513
  %518 = icmp eq ptr %50, %4
  %519 = or i1 %40, %518
  br i1 %519, label %524, label %520

520:                                              ; preds = %517
  %521 = load i16, ptr %84, align 4, !tbaa !124
  %522 = and i16 %521, 1
  %523 = icmp eq i16 %522, 0
  br i1 %523, label %525, label %524

524:                                              ; preds = %520, %517
  call fastcc void @init_render_object(ptr noundef nonnull %0, ptr noundef nonnull %50, ptr noundef null, ptr noundef null, ptr noundef null, i32 noundef %5)
  br label %525

525:                                              ; preds = %520, %514, %510, %499, %490, %484, %478, %473, %462, %455, %124, %118, %114, %103, %94, %488, %136, %140, %524, %88, %128
  %526 = load ptr, ptr %45, align 8, !tbaa !93
  %527 = load ptr, ptr %46, align 8, !tbaa !94
  %528 = call i32 %526(ptr noundef %527) #16
  %529 = icmp eq i32 %528, 0
  br i1 %529, label %530, label %533

530:                                              ; preds = %525, %70
  %531 = call ptr @_setlooper_base_step(ptr noundef nonnull %7, ptr noundef nonnull %48) #16
  %532 = icmp eq ptr %531, null
  br i1 %532, label %533, label %47, !llvm.loop !155

533:                                              ; preds = %530, %525, %31
  %534 = load ptr, ptr %10, align 8, !tbaa !77
  %535 = getelementptr inbounds %struct.Main, ptr %534, i64 0, i32 32
  %536 = load ptr, ptr %535, align 8, !tbaa !16
  %537 = icmp eq ptr %536, null
  br i1 %537, label %542, label %538

538:                                              ; preds = %533, %538
  %539 = phi ptr [ %540, %538 ], [ %536, %533 ]
  call fastcc void @add_group_render_dupli_obs(ptr noundef %0, ptr noundef nonnull %539, i32 noundef %2, i32 noundef %3, ptr noundef %4, i32 noundef %5, i32 noundef 0)
  %540 = load ptr, ptr %539, align 8, !tbaa !16
  %541 = icmp eq ptr %540, null
  br i1 %541, label %542, label %538, !llvm.loop !156

542:                                              ; preds = %538, %533
  %543 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 96
  %544 = load ptr, ptr %543, align 8, !tbaa !93
  %545 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 97
  %546 = load ptr, ptr %545, align 8, !tbaa !94
  %547 = call i32 %544(ptr noundef %546) #16
  %548 = icmp eq i32 %547, 0
  br i1 %548, label %549, label %550

549:                                              ; preds = %542
  call void @RE_makeRenderInstances(ptr noundef nonnull %0) #16
  br label %550

550:                                              ; preds = %549, %542
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7) #16
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @RE_Database_Preprocess(ptr noundef %0) local_unnamed_addr #3 {
  %2 = alloca [3 x float], align 8
  %3 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 96
  %4 = load ptr, ptr %3, align 8, !tbaa !93
  %5 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 97
  %6 = load ptr, ptr %5, align 8, !tbaa !94
  %7 = tail call i32 %4(ptr noundef %6) #16
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %218

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 62
  %11 = load i32, ptr %10, align 8, !tbaa !157
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %88, label %13

13:                                               ; preds = %9
  %14 = load ptr, ptr @MEM_callocN, align 8, !tbaa !16
  %15 = sext i32 %11 to i64
  %16 = shl nsw i64 %15, 3
  %17 = tail call ptr %14(i64 noundef %16, ptr noundef nonnull @.str.25) #16
  %18 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 65
  store ptr %17, ptr %18, align 8, !tbaa !158
  %19 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 68
  %20 = load ptr, ptr %19, align 8, !tbaa !16
  %21 = icmp eq ptr %20, null
  br i1 %21, label %86, label %48

22:                                               ; preds = %76, %55
  %23 = phi ptr [ undef, %55 ], [ %79, %76 ]
  %24 = phi ptr [ undef, %55 ], [ %80, %76 ]
  %25 = phi i32 [ 0, %55 ], [ %81, %76 ]
  %26 = phi ptr [ %50, %55 ], [ %80, %76 ]
  %27 = phi ptr [ %51, %55 ], [ %79, %76 ]
  %28 = icmp eq i32 %57, 0
  br i1 %28, label %43, label %29

29:                                               ; preds = %22
  %30 = and i32 %25, 255
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %34, label %32

32:                                               ; preds = %29
  %33 = getelementptr inbounds %struct.HaloRen, ptr %27, i64 1
  br label %40

34:                                               ; preds = %29
  %35 = load ptr, ptr %56, align 8, !tbaa !159
  %36 = lshr i32 %25, 8
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds ptr, ptr %35, i64 %37
  %39 = load ptr, ptr %38, align 8, !tbaa !16
  br label %40

40:                                               ; preds = %34, %32
  %41 = phi ptr [ %39, %34 ], [ %33, %32 ]
  %42 = getelementptr inbounds ptr, ptr %26, i64 1
  store ptr %41, ptr %26, align 8, !tbaa !16
  br label %43

43:                                               ; preds = %40, %22, %48
  %44 = phi ptr [ %51, %48 ], [ %23, %22 ], [ %41, %40 ]
  %45 = phi ptr [ %50, %48 ], [ %24, %22 ], [ %42, %40 ]
  %46 = load ptr, ptr %49, align 8, !tbaa !16
  %47 = icmp eq ptr %46, null
  br i1 %47, label %84, label %48, !llvm.loop !160

48:                                               ; preds = %13, %43
  %49 = phi ptr [ %46, %43 ], [ %20, %13 ]
  %50 = phi ptr [ %45, %43 ], [ %17, %13 ]
  %51 = phi ptr [ %44, %43 ], [ null, %13 ]
  %52 = getelementptr inbounds %struct.ObjectRen, ptr %49, i64 0, i32 13
  %53 = load i32, ptr %52, align 4, !tbaa !161
  %54 = icmp sgt i32 %53, 0
  br i1 %54, label %55, label %43

55:                                               ; preds = %48
  %56 = getelementptr inbounds %struct.ObjectRen, ptr %49, i64 0, i32 21
  %57 = and i32 %53, 1
  %58 = icmp eq i32 %53, 1
  br i1 %58, label %22, label %59

59:                                               ; preds = %55
  %60 = and i32 %53, -2
  br label %61

61:                                               ; preds = %76, %59
  %62 = phi i32 [ 0, %59 ], [ %81, %76 ]
  %63 = phi ptr [ %50, %59 ], [ %80, %76 ]
  %64 = phi ptr [ %51, %59 ], [ %79, %76 ]
  %65 = phi i32 [ 0, %59 ], [ %82, %76 ]
  %66 = and i32 %62, 254
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %74

68:                                               ; preds = %61
  %69 = load ptr, ptr %56, align 8, !tbaa !159
  %70 = lshr i32 %62, 8
  %71 = zext i32 %70 to i64
  %72 = getelementptr inbounds ptr, ptr %69, i64 %71
  %73 = load ptr, ptr %72, align 8, !tbaa !16
  br label %76

74:                                               ; preds = %61
  %75 = getelementptr inbounds %struct.HaloRen, ptr %64, i64 1
  br label %76

76:                                               ; preds = %74, %68
  %77 = phi ptr [ %73, %68 ], [ %75, %74 ]
  %78 = getelementptr inbounds ptr, ptr %63, i64 1
  store ptr %77, ptr %63, align 8, !tbaa !16
  %79 = getelementptr inbounds %struct.HaloRen, ptr %77, i64 1
  %80 = getelementptr inbounds ptr, ptr %63, i64 2
  store ptr %79, ptr %78, align 8, !tbaa !16
  %81 = add nuw nsw i32 %62, 2
  %82 = add i32 %65, 2
  %83 = icmp eq i32 %82, %60
  br i1 %83, label %22, label %61, !llvm.loop !162

84:                                               ; preds = %43
  %85 = load ptr, ptr %18, align 8, !tbaa !158
  br label %86

86:                                               ; preds = %84, %13
  %87 = phi ptr [ %85, %84 ], [ %17, %13 ]
  tail call void @qsort(ptr noundef %87, i64 noundef %15, i64 noundef 8, ptr noundef nonnull @verghalo) #16
  br label %88

88:                                               ; preds = %9, %86
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %2) #16
  store <2 x float> zeroinitializer, ptr %2, align 8, !tbaa !13
  %89 = getelementptr inbounds float, ptr %2, i64 2
  %90 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 36
  %91 = load float, ptr %90, align 8, !tbaa !59
  %92 = fneg fast float %91
  store float %92, ptr %89, align 8, !tbaa !13
  %93 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 80
  %94 = load ptr, ptr %93, align 8, !tbaa !16
  %95 = icmp eq ptr %94, null
  br i1 %95, label %131, label %96

96:                                               ; preds = %88
  %97 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 70
  %98 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 79
  %99 = load ptr, ptr %97, align 8, !tbaa !16
  %100 = icmp eq ptr %99, null
  br i1 %100, label %131, label %106

101:                                              ; preds = %128, %106
  %102 = load ptr, ptr %108, align 8, !tbaa !16
  %103 = icmp eq ptr %102, null
  br i1 %103, label %131, label %104, !llvm.loop !163

104:                                              ; preds = %101
  %105 = load ptr, ptr %97, align 8, !tbaa !16
  br label %106

106:                                              ; preds = %96, %104
  %107 = phi ptr [ %105, %104 ], [ %99, %96 ]
  %108 = phi ptr [ %102, %104 ], [ %94, %96 ]
  %109 = icmp eq ptr %107, null
  br i1 %109, label %101, label %110

110:                                              ; preds = %106
  %111 = getelementptr inbounds %struct.VolumeOb, ptr %108, i64 0, i32 3
  %112 = getelementptr inbounds %struct.VolumeOb, ptr %108, i64 0, i32 2
  br label %113

113:                                              ; preds = %128, %110
  %114 = phi ptr [ %107, %110 ], [ %129, %128 ]
  %115 = getelementptr inbounds %struct.ObjectInstanceRen, ptr %114, i64 0, i32 2
  %116 = load ptr, ptr %115, align 8, !tbaa !165
  %117 = load ptr, ptr %111, align 8, !tbaa !167
  %118 = icmp eq ptr %116, %117
  br i1 %118, label %119, label %128

119:                                              ; preds = %113
  %120 = call i32 @point_inside_volume_objectinstance(ptr noundef %0, ptr noundef nonnull %114, ptr noundef nonnull %2) #16
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %128, label %122

122:                                              ; preds = %119
  %123 = load ptr, ptr @MEM_mallocN, align 8, !tbaa !16
  %124 = call ptr %123(i64 noundef 32, ptr noundef nonnull @.str.26) #16
  %125 = load ptr, ptr %112, align 8, !tbaa !169
  %126 = getelementptr inbounds %struct.MatInside, ptr %124, i64 0, i32 2
  store ptr %125, ptr %126, align 8, !tbaa !170
  %127 = getelementptr inbounds %struct.MatInside, ptr %124, i64 0, i32 3
  store ptr %114, ptr %127, align 8, !tbaa !172
  call void @BLI_addtail(ptr noundef nonnull %98, ptr noundef %124) #16
  br label %128

128:                                              ; preds = %122, %119, %113
  %129 = load ptr, ptr %114, align 8, !tbaa !16
  %130 = icmp eq ptr %129, null
  br i1 %130, label %101, label %113, !llvm.loop !173

131:                                              ; preds = %101, %88, %96
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %2) #16
  %132 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 98
  %133 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 98, i32 16
  store ptr @.str.2, ptr %133, align 8, !tbaa !87
  %134 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 90
  %135 = load ptr, ptr %134, align 8, !tbaa !122
  %136 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 91
  %137 = load ptr, ptr %136, align 8, !tbaa !123
  call void %135(ptr noundef %137, ptr noundef nonnull %132) #16
  call void @threaded_makeshadowbufs(ptr noundef %0) #16
  %138 = load ptr, ptr %3, align 8, !tbaa !93
  %139 = load ptr, ptr %5, align 8, !tbaa !94
  %140 = call i32 %138(ptr noundef %139) #16
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %148

142:                                              ; preds = %131
  %143 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 45, i32 47
  %144 = load i32, ptr %143, align 8, !tbaa !55
  %145 = and i32 %144, 65536
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %148, label %147

147:                                              ; preds = %142
  call void @makeraytree(ptr noundef nonnull %0) #16
  br label %148

148:                                              ; preds = %142, %147, %131
  %149 = load ptr, ptr %3, align 8, !tbaa !93
  %150 = load ptr, ptr %5, align 8, !tbaa !94
  %151 = call i32 %149(ptr noundef %150) #16
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %154

153:                                              ; preds = %148
  call void @make_envmaps(ptr noundef nonnull %0) #16
  br label %154

154:                                              ; preds = %153, %148
  %155 = load ptr, ptr %3, align 8, !tbaa !93
  %156 = load ptr, ptr %5, align 8, !tbaa !94
  %157 = call i32 %155(ptr noundef %156) #16
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %159, label %160

159:                                              ; preds = %154
  call void @make_pointdensities(ptr noundef nonnull %0) #16
  br label %160

160:                                              ; preds = %159, %154
  %161 = load ptr, ptr %3, align 8, !tbaa !93
  %162 = load ptr, ptr %5, align 8, !tbaa !94
  %163 = call i32 %161(ptr noundef %162) #16
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %165, label %166

165:                                              ; preds = %160
  call void @make_voxeldata(ptr noundef nonnull %0) #16
  br label %166

166:                                              ; preds = %165, %160
  %167 = load ptr, ptr %3, align 8, !tbaa !93
  %168 = load ptr, ptr %5, align 8, !tbaa !94
  %169 = call i32 %167(ptr noundef %168) #16
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %171, label %177

171:                                              ; preds = %166
  %172 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 45, i32 47
  %173 = load i32, ptr %172, align 8, !tbaa !55
  %174 = lshr i32 %173, 10
  %175 = trunc i32 %174 to i8
  %176 = and i8 %175, 1
  call void @project_renderdata(ptr noundef nonnull %0, ptr noundef nonnull @projectverto, i8 noundef zeroext %176, float noundef nofpclass(nan inf) 0.000000e+00, i8 noundef zeroext 1) #16
  br label %177

177:                                              ; preds = %171, %166
  %178 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 46, i32 23
  %179 = load i16, ptr %178, align 2, !tbaa !57
  %180 = and i16 %179, 208
  %181 = icmp eq i16 %180, 0
  br i1 %181, label %197, label %182

182:                                              ; preds = %177
  %183 = load ptr, ptr %3, align 8, !tbaa !93
  %184 = load ptr, ptr %5, align 8, !tbaa !94
  %185 = call i32 %183(ptr noundef %184) #16
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %187, label %197

187:                                              ; preds = %182
  %188 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 46, i32 64
  %189 = load i16, ptr %188, align 2, !tbaa !56
  %190 = icmp eq i16 %189, 1
  br i1 %190, label %191, label %197

191:                                              ; preds = %187
  %192 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 45, i32 47
  %193 = load i32, ptr %192, align 8, !tbaa !55
  %194 = and i32 %193, 2
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %197, label %196

196:                                              ; preds = %191
  call void @make_occ_tree(ptr noundef nonnull %0) #16
  br label %197

197:                                              ; preds = %187, %196, %191, %182, %177
  %198 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 45, i32 47
  %199 = load i32, ptr %198, align 8, !tbaa !55
  %200 = and i32 %199, 2097152
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %208, label %202

202:                                              ; preds = %197
  %203 = load ptr, ptr %3, align 8, !tbaa !93
  %204 = load ptr, ptr %5, align 8, !tbaa !94
  %205 = call i32 %203(ptr noundef %204) #16
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %207, label %208

207:                                              ; preds = %202
  call void @make_sss_tree(ptr noundef nonnull %0) #16
  br label %208

208:                                              ; preds = %207, %202, %197
  %209 = load ptr, ptr %3, align 8, !tbaa !93
  %210 = load ptr, ptr %5, align 8, !tbaa !94
  %211 = call i32 %209(ptr noundef %210) #16
  %212 = icmp eq i32 %211, 0
  br i1 %212, label %213, label %218

213:                                              ; preds = %208
  %214 = load i32, ptr %198, align 8, !tbaa !55
  %215 = and i32 %214, 65536
  %216 = icmp eq i32 %215, 0
  br i1 %216, label %218, label %217

217:                                              ; preds = %213
  call void @volume_precache(ptr noundef nonnull %0) #16
  br label %218

218:                                              ; preds = %208, %217, %213, %1
  %219 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 98, i32 11
  store i16 1, ptr %219, align 4, !tbaa !67
  %220 = load ptr, ptr %3, align 8, !tbaa !93
  %221 = load ptr, ptr %5, align 8, !tbaa !94
  %222 = call i32 %220(ptr noundef %221) #16
  %223 = icmp eq i32 %222, 0
  br i1 %223, label %225, label %224

224:                                              ; preds = %218
  call void @RE_Database_Free(ptr noundef nonnull %0)
  br label %225

225:                                              ; preds = %224, %218
  %226 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 98
  %227 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 98, i32 16
  store ptr null, ptr %227, align 8, !tbaa !87
  %228 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 90
  %229 = load ptr, ptr %228, align 8, !tbaa !122
  %230 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 91
  %231 = load ptr, ptr %230, align 8, !tbaa !123
  call void %229(ptr noundef %231, ptr noundef nonnull %226) #16
  ret void
}

declare void @threaded_makeshadowbufs(ptr noundef) local_unnamed_addr #5

declare void @makeraytree(ptr noundef) local_unnamed_addr #5

declare void @make_envmaps(ptr noundef) local_unnamed_addr #5

declare void @make_pointdensities(ptr noundef) local_unnamed_addr #5

declare void @make_voxeldata(ptr noundef) local_unnamed_addr #5

declare void @project_renderdata(ptr noundef, ptr noundef, i8 noundef zeroext, float noundef nofpclass(nan inf), i8 noundef zeroext) local_unnamed_addr #5

declare void @projectverto(ptr noundef, ptr noundef, ptr noundef) #5

declare void @make_occ_tree(ptr noundef) local_unnamed_addr #5

declare void @make_sss_tree(ptr noundef) local_unnamed_addr #5

declare void @volume_precache(ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @RE_DataBase_ApplyWindow(ptr noundef %0) local_unnamed_addr #3 {
  tail call void @project_renderdata(ptr noundef %0, ptr noundef nonnull @projectverto, i8 noundef zeroext 0, float noundef nofpclass(nan inf) 0.000000e+00, i8 noundef zeroext 0) #16
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @RE_DataBase_IncrementalView(ptr noundef %0, ptr noundef %1, i32 noundef %2) local_unnamed_addr #3 {
  %4 = alloca [3 x float], align 8
  %5 = alloca [4 x [4 x float]], align 16
  %6 = alloca [4 x [4 x float]], align 16
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %5) #16
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %6) #16
  %7 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 34
  %8 = call zeroext i8 @invert_m4_m4(ptr noundef nonnull %5, ptr noundef nonnull %7) #16
  call void @mul_m4_m4m4(ptr noundef nonnull %6, ptr noundef %1, ptr noundef nonnull %5) #16
  %9 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 32
  call void @copy_m4_m4(ptr noundef nonnull %9, ptr noundef %1) #16
  %10 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 33
  %11 = call zeroext i8 @invert_m4_m4(ptr noundef nonnull %10, ptr noundef nonnull %9) #16
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %4) #16
  store <2 x float> zeroinitializer, ptr %4, align 8, !tbaa !13
  %12 = getelementptr inbounds float, ptr %4, i64 2
  %13 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 36
  %14 = load float, ptr %13, align 8, !tbaa !59
  %15 = fneg fast float %14
  store float %15, ptr %12, align 8, !tbaa !13
  %16 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 80
  %17 = load ptr, ptr %16, align 8, !tbaa !16
  %18 = icmp eq ptr %17, null
  br i1 %18, label %54, label %19

19:                                               ; preds = %3
  %20 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 70
  %21 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 79
  %22 = load ptr, ptr %20, align 8, !tbaa !16
  %23 = icmp eq ptr %22, null
  br i1 %23, label %54, label %29

24:                                               ; preds = %51, %29
  %25 = load ptr, ptr %31, align 8, !tbaa !16
  %26 = icmp eq ptr %25, null
  br i1 %26, label %54, label %27, !llvm.loop !163

27:                                               ; preds = %24
  %28 = load ptr, ptr %20, align 8, !tbaa !16
  br label %29

29:                                               ; preds = %19, %27
  %30 = phi ptr [ %28, %27 ], [ %22, %19 ]
  %31 = phi ptr [ %25, %27 ], [ %17, %19 ]
  %32 = icmp eq ptr %30, null
  br i1 %32, label %24, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %struct.VolumeOb, ptr %31, i64 0, i32 3
  %35 = getelementptr inbounds %struct.VolumeOb, ptr %31, i64 0, i32 2
  br label %36

36:                                               ; preds = %51, %33
  %37 = phi ptr [ %30, %33 ], [ %52, %51 ]
  %38 = getelementptr inbounds %struct.ObjectInstanceRen, ptr %37, i64 0, i32 2
  %39 = load ptr, ptr %38, align 8, !tbaa !165
  %40 = load ptr, ptr %34, align 8, !tbaa !167
  %41 = icmp eq ptr %39, %40
  br i1 %41, label %42, label %51

42:                                               ; preds = %36
  %43 = call i32 @point_inside_volume_objectinstance(ptr noundef %0, ptr noundef nonnull %37, ptr noundef nonnull %4) #16
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %51, label %45

45:                                               ; preds = %42
  %46 = load ptr, ptr @MEM_mallocN, align 8, !tbaa !16
  %47 = call ptr %46(i64 noundef 32, ptr noundef nonnull @.str.26) #16
  %48 = load ptr, ptr %35, align 8, !tbaa !169
  %49 = getelementptr inbounds %struct.MatInside, ptr %47, i64 0, i32 2
  store ptr %48, ptr %49, align 8, !tbaa !170
  %50 = getelementptr inbounds %struct.MatInside, ptr %47, i64 0, i32 3
  store ptr %37, ptr %50, align 8, !tbaa !172
  call void @BLI_addtail(ptr noundef nonnull %21, ptr noundef %47) #16
  br label %51

51:                                               ; preds = %45, %42, %36
  %52 = load ptr, ptr %37, align 8, !tbaa !16
  %53 = icmp eq ptr %52, null
  br i1 %53, label %24, label %36, !llvm.loop !173

54:                                               ; preds = %24, %3, %19
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %4) #16
  %55 = icmp eq i32 %2, 0
  %56 = zext i1 %55 to i32
  call void @env_rotate_scene(ptr noundef %0, ptr noundef nonnull %6, i32 noundef %56) #16
  %57 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 45, i32 47
  %58 = load i32, ptr %57, align 8, !tbaa !55
  %59 = and i32 %58, 2097152
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %69, label %61

61:                                               ; preds = %54
  %62 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 96
  %63 = load ptr, ptr %62, align 8, !tbaa !93
  %64 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 97
  %65 = load ptr, ptr %64, align 8, !tbaa !94
  %66 = call i32 %63(ptr noundef %65) #16
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %61
  call void @make_sss_tree(ptr noundef nonnull %0) #16
  br label %69

69:                                               ; preds = %68, %61, %54
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %6) #16
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %5) #16
  ret void
}

declare zeroext i8 @invert_m4_m4(ptr noundef, ptr noundef) local_unnamed_addr #5

declare void @mul_m4_m4m4(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

declare void @env_rotate_scene(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @RE_DataBase_GetView(ptr noundef %0, ptr noundef %1) local_unnamed_addr #3 {
  %3 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 32
  tail call void @copy_m4_m4(ptr noundef %1, ptr noundef nonnull %3) #16
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @RE_Database_FromScene_Vectors(ptr noundef %0, ptr noundef %1, ptr noundef %2, i32 noundef %3) local_unnamed_addr #3 {
  %5 = alloca [2 x float], align 8
  %6 = alloca [2 x float], align 8
  %7 = alloca [4 x float], align 16
  %8 = alloca [4 x float], align 16
  %9 = alloca [4 x float], align 16
  %10 = alloca [4 x [4 x float]], align 16
  %11 = alloca [2 x float], align 8
  %12 = alloca [4 x float], align 16
  %13 = alloca [4 x [4 x float]], align 16
  %14 = alloca [4 x float], align 16
  %15 = alloca [4 x float], align 16
  %16 = alloca [4 x float], align 16
  %17 = alloca [4 x float], align 16
  %18 = alloca [4 x [4 x float]], align 16
  %19 = alloca [4 x [4 x float]], align 16
  %20 = alloca [4 x [4 x float]], align 16
  %21 = alloca %struct.ListBase, align 8
  %22 = alloca %struct.ListBase, align 8
  %23 = alloca %struct.ListBase, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %21) #16
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %21, i8 0, i64 16, i1 false)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %22) #16
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %22, i8 0, i64 16, i1 false)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %23)
  %24 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 98, i32 16
  store ptr @.str.3, ptr %24, align 8, !tbaa !87
  %25 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 45, i32 47
  %26 = load i32, ptr %25, align 8, !tbaa !55
  %27 = or i32 %26, 1048576
  store i32 %27, ptr %25, align 8, !tbaa !55
  tail call fastcc void @speedvector_project(ptr noundef %0, ptr noundef null, ptr noundef null, ptr noundef null)
  tail call fastcc void @database_fromscene_vectors(ptr noundef %0, ptr noundef %2, i32 noundef %3, i32 noundef -1)
  call fastcc void @copy_dbase_object_vectors(ptr noundef %0, ptr noundef nonnull %21)
  %28 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 57
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %23, ptr noundef nonnull align 8 dereferenceable(16) %28, i64 16, i1 false), !tbaa.struct !174
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %28, i8 0, i64 16, i1 false)
  %29 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 98, i32 11
  store i16 1, ptr %29, align 4, !tbaa !67
  call void @RE_Database_Free(ptr noundef %0)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %28, ptr noundef nonnull align 8 dereferenceable(16) %23, i64 16, i1 false), !tbaa.struct !174
  %30 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 96
  %31 = load ptr, ptr %30, align 8, !tbaa !93
  %32 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 97
  %33 = load ptr, ptr %32, align 8, !tbaa !94
  %34 = call i32 %31(ptr noundef %33) #16
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %4
  store ptr @.str.4, ptr %24, align 8, !tbaa !87
  call fastcc void @database_fromscene_vectors(ptr noundef nonnull %0, ptr noundef %2, i32 noundef %3, i32 noundef 1)
  br label %37

37:                                               ; preds = %36, %4
  call fastcc void @copy_dbase_object_vectors(ptr noundef nonnull %0, ptr noundef nonnull %22)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %23, ptr noundef nonnull align 8 dereferenceable(16) %28, i64 16, i1 false), !tbaa.struct !174
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %28, i8 0, i64 16, i1 false)
  store i16 1, ptr %29, align 4, !tbaa !67
  call void @RE_Database_Free(ptr noundef nonnull %0)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %28, ptr noundef nonnull align 8 dereferenceable(16) %23, i64 16, i1 false), !tbaa.struct !174
  %38 = load ptr, ptr %30, align 8, !tbaa !93
  %39 = load ptr, ptr %32, align 8, !tbaa !94
  %40 = call i32 %38(ptr noundef %39) #16
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %37
  call void @RE_Database_FromScene(ptr noundef nonnull %0, ptr noundef %1, ptr noundef %2, i32 noundef %3, i32 noundef 1)
  call void @RE_Database_Preprocess(ptr noundef nonnull %0)
  br label %43

43:                                               ; preds = %42, %37
  %44 = load ptr, ptr %30, align 8, !tbaa !93
  %45 = load ptr, ptr %32, align 8, !tbaa !94
  %46 = call i32 %44(ptr noundef %45) #16
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %958

48:                                               ; preds = %43
  %49 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 44
  %50 = load ptr, ptr %49, align 8, !tbaa !17
  %51 = getelementptr inbounds %struct.Scene, ptr %50, i64 0, i32 22, i32 60
  %52 = load ptr, ptr %51, align 8, !tbaa !16
  %53 = icmp eq ptr %52, null
  br i1 %53, label %69, label %54

54:                                               ; preds = %48, %65
  %55 = phi ptr [ %67, %65 ], [ %52, %48 ]
  %56 = phi i32 [ %66, %65 ], [ 0, %48 ]
  %57 = getelementptr inbounds %struct.SceneRenderLayer, ptr %55, i64 0, i32 9
  %58 = load i32, ptr %57, align 8, !tbaa !129
  %59 = and i32 %58, 512
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %65, label %61

61:                                               ; preds = %54
  %62 = getelementptr inbounds %struct.SceneRenderLayer, ptr %55, i64 0, i32 5
  %63 = load i32, ptr %62, align 8, !tbaa !130
  %64 = or i32 %63, %56
  br label %65

65:                                               ; preds = %61, %54
  %66 = phi i32 [ %64, %61 ], [ %56, %54 ]
  %67 = load ptr, ptr %55, align 8, !tbaa !16
  %68 = icmp eq ptr %67, null
  br i1 %68, label %69, label %54, !llvm.loop !131

69:                                               ; preds = %65, %48
  %70 = phi i32 [ 0, %48 ], [ %66, %65 ]
  %71 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 70
  %72 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 13
  %73 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 14
  %74 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 32
  %75 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 35
  %76 = getelementptr inbounds float, ptr %20, i64 1
  %77 = getelementptr inbounds float, ptr %20, i64 2
  %78 = getelementptr inbounds [4 x [4 x float]], ptr %20, i64 0, i64 1
  %79 = getelementptr inbounds [4 x [4 x float]], ptr %20, i64 0, i64 1, i64 1
  %80 = getelementptr inbounds [4 x [4 x float]], ptr %20, i64 0, i64 1, i64 2
  %81 = getelementptr inbounds [4 x [4 x float]], ptr %20, i64 0, i64 2
  %82 = getelementptr inbounds [4 x [4 x float]], ptr %20, i64 0, i64 2, i64 1
  %83 = getelementptr inbounds [4 x [4 x float]], ptr %20, i64 0, i64 2, i64 2
  %84 = getelementptr inbounds [4 x float], ptr %17, i64 0, i64 2
  %85 = getelementptr inbounds [4 x float], ptr %16, i64 0, i64 3
  %86 = getelementptr inbounds float, ptr %12, i64 3
  %87 = getelementptr inbounds [4 x float], ptr %14, i64 0, i64 1
  %88 = getelementptr inbounds [4 x float], ptr %14, i64 0, i64 2
  %89 = getelementptr inbounds [4 x float], ptr %14, i64 0, i64 3
  br label %90

90:                                               ; preds = %69, %957
  %91 = phi i1 [ false, %69 ], [ true, %957 ]
  %92 = phi i1 [ true, %69 ], [ false, %957 ]
  %93 = select i1 %91, ptr %22, ptr %21
  %94 = load ptr, ptr %93, align 8, !tbaa !175
  %95 = load ptr, ptr %71, align 8, !tbaa !16
  %96 = icmp ne ptr %95, null
  %97 = icmp ne ptr %94, null
  %98 = select i1 %96, i1 %97, i1 false
  br i1 %98, label %99, label %957

99:                                               ; preds = %90, %951
  %100 = phi ptr [ %953, %951 ], [ %95, %90 ]
  %101 = phi ptr [ %952, %951 ], [ %94, %90 ]
  %102 = getelementptr inbounds %struct.ObjectInstanceRen, ptr %100, i64 0, i32 7
  %103 = load i32, ptr %102, align 8, !tbaa !176
  %104 = and i32 %103, %70
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %951, label %106

106:                                              ; preds = %99
  %107 = getelementptr inbounds %struct.ObjectInstanceRen, ptr %100, i64 0, i32 2
  %108 = load ptr, ptr %107, align 8, !tbaa !165
  %109 = getelementptr inbounds %struct.ObjectRen, ptr %108, i64 0, i32 10
  %110 = load i32, ptr %109, align 8, !tbaa !177
  %111 = getelementptr inbounds %struct.ObjectInstanceRen, ptr %100, i64 0, i32 17
  store i32 %110, ptr %111, align 8, !tbaa !178
  %112 = getelementptr inbounds %struct.ObjectInstanceRen, ptr %101, i64 0, i32 3
  %113 = load ptr, ptr %112, align 8, !tbaa !179
  %114 = getelementptr inbounds %struct.ObjectInstanceRen, ptr %100, i64 0, i32 3
  %115 = load ptr, ptr %114, align 8, !tbaa !179
  %116 = icmp eq ptr %113, %115
  br i1 %116, label %117, label %135

117:                                              ; preds = %106
  %118 = getelementptr inbounds %struct.ObjectInstanceRen, ptr %101, i64 0, i32 4
  %119 = load ptr, ptr %118, align 8, !tbaa !180
  %120 = getelementptr inbounds %struct.ObjectInstanceRen, ptr %100, i64 0, i32 4
  %121 = load ptr, ptr %120, align 8, !tbaa !180
  %122 = icmp eq ptr %119, %121
  br i1 %122, label %123, label %135

123:                                              ; preds = %117
  %124 = getelementptr inbounds %struct.ObjectInstanceRen, ptr %101, i64 0, i32 5
  %125 = load i32, ptr %124, align 8, !tbaa !181
  %126 = getelementptr inbounds %struct.ObjectInstanceRen, ptr %100, i64 0, i32 5
  %127 = load i32, ptr %126, align 8, !tbaa !181
  %128 = icmp eq i32 %125, %127
  br i1 %128, label %129, label %135

129:                                              ; preds = %123
  %130 = getelementptr inbounds %struct.ObjectInstanceRen, ptr %101, i64 0, i32 6
  %131 = load i32, ptr %130, align 4, !tbaa !182
  %132 = getelementptr inbounds %struct.ObjectInstanceRen, ptr %100, i64 0, i32 6
  %133 = load i32, ptr %132, align 4, !tbaa !182
  %134 = icmp eq i32 %131, %133
  br i1 %134, label %168, label %135

135:                                              ; preds = %129, %123, %117, %106
  %136 = load ptr, ptr %93, align 8, !tbaa !16
  %137 = icmp eq ptr %136, null
  br i1 %137, label %165, label %138

138:                                              ; preds = %135
  %139 = getelementptr inbounds %struct.ObjectInstanceRen, ptr %100, i64 0, i32 4
  %140 = getelementptr inbounds %struct.ObjectInstanceRen, ptr %100, i64 0, i32 5
  %141 = getelementptr inbounds %struct.ObjectInstanceRen, ptr %100, i64 0, i32 6
  br label %142

142:                                              ; preds = %138, %162
  %143 = phi ptr [ %136, %138 ], [ %163, %162 ]
  %144 = getelementptr inbounds %struct.ObjectInstanceRen, ptr %143, i64 0, i32 3
  %145 = load ptr, ptr %144, align 8, !tbaa !179
  %146 = icmp eq ptr %145, %115
  br i1 %146, label %147, label %162

147:                                              ; preds = %142
  %148 = getelementptr inbounds %struct.ObjectInstanceRen, ptr %143, i64 0, i32 4
  %149 = load ptr, ptr %148, align 8, !tbaa !180
  %150 = load ptr, ptr %139, align 8, !tbaa !180
  %151 = icmp eq ptr %149, %150
  br i1 %151, label %152, label %162

152:                                              ; preds = %147
  %153 = getelementptr inbounds %struct.ObjectInstanceRen, ptr %143, i64 0, i32 5
  %154 = load i32, ptr %153, align 8, !tbaa !181
  %155 = load i32, ptr %140, align 8, !tbaa !181
  %156 = icmp eq i32 %154, %155
  br i1 %156, label %157, label %162

157:                                              ; preds = %152
  %158 = getelementptr inbounds %struct.ObjectInstanceRen, ptr %143, i64 0, i32 6
  %159 = load i32, ptr %158, align 4, !tbaa !182
  %160 = load i32, ptr %141, align 4, !tbaa !182
  %161 = icmp eq i32 %159, %160
  br i1 %161, label %168, label %162

162:                                              ; preds = %142, %147, %152, %157
  %163 = load ptr, ptr %143, align 8, !tbaa !16
  %164 = icmp eq ptr %163, null
  br i1 %164, label %165, label %142, !llvm.loop !183

165:                                              ; preds = %162, %135
  %166 = getelementptr inbounds %struct.ID, ptr %115, i64 0, i32 4, i64 2
  %167 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.5, ptr noundef nonnull %166)
  br label %951

168:                                              ; preds = %157, %129
  %169 = phi ptr [ %101, %129 ], [ %143, %157 ]
  %170 = call ptr @modifiers_findByType(ptr noundef %115, i32 noundef 26) #16
  %171 = icmp eq ptr %170, null
  br i1 %171, label %542, label %172

172:                                              ; preds = %168
  %173 = getelementptr inbounds %struct.FluidsimModifierData, ptr %170, i64 0, i32 1
  %174 = load ptr, ptr %173, align 8, !tbaa !184
  %175 = icmp eq ptr %174, null
  br i1 %175, label %542, label %176

176:                                              ; preds = %172
  %177 = getelementptr inbounds %struct.FluidsimSettings, ptr %174, i64 0, i32 3
  %178 = load i16, ptr %177, align 8, !tbaa !187
  %179 = and i16 %178, 2
  %180 = icmp eq i16 %179, 0
  br i1 %180, label %542, label %181

181:                                              ; preds = %176
  %182 = load ptr, ptr %107, align 8, !tbaa !165
  %183 = getelementptr inbounds %struct.ObjectRen, ptr %182, i64 0, i32 2
  %184 = load ptr, ptr %183, align 8, !tbaa !148
  %185 = load <2 x i32>, ptr %72, align 4, !tbaa !47
  %186 = sdiv <2 x i32> %185, <i32 2, i32 2>
  %187 = sitofp <2 x i32> %186 to <2 x float>
  %188 = extractelement <2 x i32> %185, i64 0
  %189 = sitofp i32 %188 to float
  %190 = extractelement <2 x i32> %185, i64 1
  %191 = sitofp i32 %190 to float
  %192 = fmul fast float %191, %189
  %193 = call fast float @llvm.sqrt.f32(float %192)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %15) #16
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %16) #16
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %17) #16
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %18) #16
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %19) #16
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %20) #16
  %194 = call ptr @modifiers_findByType(ptr noundef %184, i32 noundef 26) #16
  %195 = icmp eq ptr %194, null
  %196 = select i1 %91, i1 true, i1 %195
  br i1 %196, label %541, label %197

197:                                              ; preds = %181
  %198 = getelementptr inbounds %struct.FluidsimModifierData, ptr %194, i64 0, i32 1
  %199 = load ptr, ptr %198, align 8, !tbaa !184
  call void @copy_m4_m4(ptr noundef nonnull %18, ptr noundef nonnull %74) #16
  %200 = call zeroext i8 @invert_m4_m4(ptr noundef nonnull %20, ptr noundef nonnull %18) #16
  %201 = getelementptr inbounds %struct.FluidsimSettings, ptr %199, i64 0, i32 43
  %202 = load ptr, ptr %201, align 8, !tbaa !189
  %203 = icmp eq ptr %202, null
  br i1 %203, label %541, label %204

204:                                              ; preds = %197
  %205 = getelementptr inbounds %struct.ObjectRen, ptr %182, i64 0, i32 10
  %206 = load i32, ptr %205, align 8, !tbaa !177
  %207 = getelementptr inbounds %struct.FluidsimSettings, ptr %199, i64 0, i32 44
  %208 = load i32, ptr %207, align 8, !tbaa !190
  %209 = icmp eq i32 %206, %208
  br i1 %209, label %210, label %541

210:                                              ; preds = %204
  %211 = getelementptr inbounds %struct.ObjectInstanceRen, ptr %100, i64 0, i32 11
  %212 = load i16, ptr %211, align 8, !tbaa !191
  %213 = and i16 %212, 3
  %214 = icmp eq i16 %213, 0
  br i1 %214, label %217, label %215

215:                                              ; preds = %210
  %216 = getelementptr inbounds %struct.ObjectInstanceRen, ptr %100, i64 0, i32 8
  call void @mul_m4_m4m4(ptr noundef nonnull %19, ptr noundef nonnull %75, ptr noundef nonnull %216) #16
  br label %218

217:                                              ; preds = %210
  call void @copy_m4_m4(ptr noundef nonnull %19, ptr noundef nonnull %75) #16
  br label %218

218:                                              ; preds = %217, %215
  %219 = load i32, ptr %205, align 8, !tbaa !177
  %220 = icmp sgt i32 %219, 0
  br i1 %220, label %221, label %541

221:                                              ; preds = %218
  %222 = zext i32 %219 to i64
  %223 = icmp ult i32 %219, 16
  br i1 %223, label %429, label %224

224:                                              ; preds = %221
  %225 = and i64 %222, 4294967280
  br label %226

226:                                              ; preds = %226, %224
  %227 = phi i64 [ 0, %224 ], [ %411, %226 ]
  %228 = phi <4 x float> [ zeroinitializer, %224 ], [ %407, %226 ]
  %229 = phi <4 x float> [ zeroinitializer, %224 ], [ %408, %226 ]
  %230 = phi <4 x float> [ zeroinitializer, %224 ], [ %409, %226 ]
  %231 = phi <4 x float> [ zeroinitializer, %224 ], [ %410, %226 ]
  %232 = phi <4 x float> [ zeroinitializer, %224 ], [ %355, %226 ]
  %233 = phi <4 x float> [ zeroinitializer, %224 ], [ %356, %226 ]
  %234 = phi <4 x float> [ zeroinitializer, %224 ], [ %357, %226 ]
  %235 = phi <4 x float> [ zeroinitializer, %224 ], [ %358, %226 ]
  %236 = phi <4 x float> [ zeroinitializer, %224 ], [ %303, %226 ]
  %237 = phi <4 x float> [ zeroinitializer, %224 ], [ %304, %226 ]
  %238 = phi <4 x float> [ zeroinitializer, %224 ], [ %305, %226 ]
  %239 = phi <4 x float> [ zeroinitializer, %224 ], [ %306, %226 ]
  %240 = or i64 %227, 1
  %241 = or i64 %227, 2
  %242 = or i64 %227, 3
  %243 = or i64 %227, 4
  %244 = or i64 %227, 5
  %245 = or i64 %227, 6
  %246 = or i64 %227, 7
  %247 = or i64 %227, 8
  %248 = or i64 %227, 9
  %249 = or i64 %227, 10
  %250 = or i64 %227, 11
  %251 = or i64 %227, 12
  %252 = or i64 %227, 13
  %253 = or i64 %227, 14
  %254 = or i64 %227, 15
  %255 = getelementptr inbounds %struct.FluidVertexVelocity, ptr %202, i64 %227
  %256 = getelementptr inbounds %struct.FluidVertexVelocity, ptr %202, i64 %240
  %257 = getelementptr inbounds %struct.FluidVertexVelocity, ptr %202, i64 %241
  %258 = getelementptr inbounds %struct.FluidVertexVelocity, ptr %202, i64 %242
  %259 = getelementptr inbounds %struct.FluidVertexVelocity, ptr %202, i64 %243
  %260 = getelementptr inbounds %struct.FluidVertexVelocity, ptr %202, i64 %244
  %261 = getelementptr inbounds %struct.FluidVertexVelocity, ptr %202, i64 %245
  %262 = getelementptr inbounds %struct.FluidVertexVelocity, ptr %202, i64 %246
  %263 = getelementptr inbounds %struct.FluidVertexVelocity, ptr %202, i64 %247
  %264 = getelementptr inbounds %struct.FluidVertexVelocity, ptr %202, i64 %248
  %265 = getelementptr inbounds %struct.FluidVertexVelocity, ptr %202, i64 %249
  %266 = getelementptr inbounds %struct.FluidVertexVelocity, ptr %202, i64 %250
  %267 = getelementptr inbounds %struct.FluidVertexVelocity, ptr %202, i64 %251
  %268 = getelementptr inbounds %struct.FluidVertexVelocity, ptr %202, i64 %252
  %269 = getelementptr inbounds %struct.FluidVertexVelocity, ptr %202, i64 %253
  %270 = getelementptr inbounds %struct.FluidVertexVelocity, ptr %202, i64 %254
  %271 = load float, ptr %255, align 4, !tbaa !13
  %272 = load float, ptr %256, align 4, !tbaa !13
  %273 = load float, ptr %257, align 4, !tbaa !13
  %274 = load float, ptr %258, align 4, !tbaa !13
  %275 = insertelement <4 x float> poison, float %271, i64 0
  %276 = insertelement <4 x float> %275, float %272, i64 1
  %277 = insertelement <4 x float> %276, float %273, i64 2
  %278 = insertelement <4 x float> %277, float %274, i64 3
  %279 = load float, ptr %259, align 4, !tbaa !13
  %280 = load float, ptr %260, align 4, !tbaa !13
  %281 = load float, ptr %261, align 4, !tbaa !13
  %282 = load float, ptr %262, align 4, !tbaa !13
  %283 = insertelement <4 x float> poison, float %279, i64 0
  %284 = insertelement <4 x float> %283, float %280, i64 1
  %285 = insertelement <4 x float> %284, float %281, i64 2
  %286 = insertelement <4 x float> %285, float %282, i64 3
  %287 = load float, ptr %263, align 4, !tbaa !13
  %288 = load float, ptr %264, align 4, !tbaa !13
  %289 = load float, ptr %265, align 4, !tbaa !13
  %290 = load float, ptr %266, align 4, !tbaa !13
  %291 = insertelement <4 x float> poison, float %287, i64 0
  %292 = insertelement <4 x float> %291, float %288, i64 1
  %293 = insertelement <4 x float> %292, float %289, i64 2
  %294 = insertelement <4 x float> %293, float %290, i64 3
  %295 = load float, ptr %267, align 4, !tbaa !13
  %296 = load float, ptr %268, align 4, !tbaa !13
  %297 = load float, ptr %269, align 4, !tbaa !13
  %298 = load float, ptr %270, align 4, !tbaa !13
  %299 = insertelement <4 x float> poison, float %295, i64 0
  %300 = insertelement <4 x float> %299, float %296, i64 1
  %301 = insertelement <4 x float> %300, float %297, i64 2
  %302 = insertelement <4 x float> %301, float %298, i64 3
  %303 = fadd fast <4 x float> %278, %236
  %304 = fadd fast <4 x float> %286, %237
  %305 = fadd fast <4 x float> %294, %238
  %306 = fadd fast <4 x float> %302, %239
  %307 = getelementptr inbounds [3 x float], ptr %255, i64 0, i64 1
  %308 = getelementptr inbounds [3 x float], ptr %256, i64 0, i64 1
  %309 = getelementptr inbounds [3 x float], ptr %257, i64 0, i64 1
  %310 = getelementptr inbounds [3 x float], ptr %258, i64 0, i64 1
  %311 = getelementptr inbounds [3 x float], ptr %259, i64 0, i64 1
  %312 = getelementptr inbounds [3 x float], ptr %260, i64 0, i64 1
  %313 = getelementptr inbounds [3 x float], ptr %261, i64 0, i64 1
  %314 = getelementptr inbounds [3 x float], ptr %262, i64 0, i64 1
  %315 = getelementptr inbounds [3 x float], ptr %263, i64 0, i64 1
  %316 = getelementptr inbounds [3 x float], ptr %264, i64 0, i64 1
  %317 = getelementptr inbounds [3 x float], ptr %265, i64 0, i64 1
  %318 = getelementptr inbounds [3 x float], ptr %266, i64 0, i64 1
  %319 = getelementptr inbounds [3 x float], ptr %267, i64 0, i64 1
  %320 = getelementptr inbounds [3 x float], ptr %268, i64 0, i64 1
  %321 = getelementptr inbounds [3 x float], ptr %269, i64 0, i64 1
  %322 = getelementptr inbounds [3 x float], ptr %270, i64 0, i64 1
  %323 = load float, ptr %307, align 4, !tbaa !13
  %324 = load float, ptr %308, align 4, !tbaa !13
  %325 = load float, ptr %309, align 4, !tbaa !13
  %326 = load float, ptr %310, align 4, !tbaa !13
  %327 = insertelement <4 x float> poison, float %323, i64 0
  %328 = insertelement <4 x float> %327, float %324, i64 1
  %329 = insertelement <4 x float> %328, float %325, i64 2
  %330 = insertelement <4 x float> %329, float %326, i64 3
  %331 = load float, ptr %311, align 4, !tbaa !13
  %332 = load float, ptr %312, align 4, !tbaa !13
  %333 = load float, ptr %313, align 4, !tbaa !13
  %334 = load float, ptr %314, align 4, !tbaa !13
  %335 = insertelement <4 x float> poison, float %331, i64 0
  %336 = insertelement <4 x float> %335, float %332, i64 1
  %337 = insertelement <4 x float> %336, float %333, i64 2
  %338 = insertelement <4 x float> %337, float %334, i64 3
  %339 = load float, ptr %315, align 4, !tbaa !13
  %340 = load float, ptr %316, align 4, !tbaa !13
  %341 = load float, ptr %317, align 4, !tbaa !13
  %342 = load float, ptr %318, align 4, !tbaa !13
  %343 = insertelement <4 x float> poison, float %339, i64 0
  %344 = insertelement <4 x float> %343, float %340, i64 1
  %345 = insertelement <4 x float> %344, float %341, i64 2
  %346 = insertelement <4 x float> %345, float %342, i64 3
  %347 = load float, ptr %319, align 4, !tbaa !13
  %348 = load float, ptr %320, align 4, !tbaa !13
  %349 = load float, ptr %321, align 4, !tbaa !13
  %350 = load float, ptr %322, align 4, !tbaa !13
  %351 = insertelement <4 x float> poison, float %347, i64 0
  %352 = insertelement <4 x float> %351, float %348, i64 1
  %353 = insertelement <4 x float> %352, float %349, i64 2
  %354 = insertelement <4 x float> %353, float %350, i64 3
  %355 = fadd fast <4 x float> %330, %232
  %356 = fadd fast <4 x float> %338, %233
  %357 = fadd fast <4 x float> %346, %234
  %358 = fadd fast <4 x float> %354, %235
  %359 = getelementptr inbounds [3 x float], ptr %255, i64 0, i64 2
  %360 = getelementptr inbounds [3 x float], ptr %256, i64 0, i64 2
  %361 = getelementptr inbounds [3 x float], ptr %257, i64 0, i64 2
  %362 = getelementptr inbounds [3 x float], ptr %258, i64 0, i64 2
  %363 = getelementptr inbounds [3 x float], ptr %259, i64 0, i64 2
  %364 = getelementptr inbounds [3 x float], ptr %260, i64 0, i64 2
  %365 = getelementptr inbounds [3 x float], ptr %261, i64 0, i64 2
  %366 = getelementptr inbounds [3 x float], ptr %262, i64 0, i64 2
  %367 = getelementptr inbounds [3 x float], ptr %263, i64 0, i64 2
  %368 = getelementptr inbounds [3 x float], ptr %264, i64 0, i64 2
  %369 = getelementptr inbounds [3 x float], ptr %265, i64 0, i64 2
  %370 = getelementptr inbounds [3 x float], ptr %266, i64 0, i64 2
  %371 = getelementptr inbounds [3 x float], ptr %267, i64 0, i64 2
  %372 = getelementptr inbounds [3 x float], ptr %268, i64 0, i64 2
  %373 = getelementptr inbounds [3 x float], ptr %269, i64 0, i64 2
  %374 = getelementptr inbounds [3 x float], ptr %270, i64 0, i64 2
  %375 = load float, ptr %359, align 4, !tbaa !13
  %376 = load float, ptr %360, align 4, !tbaa !13
  %377 = load float, ptr %361, align 4, !tbaa !13
  %378 = load float, ptr %362, align 4, !tbaa !13
  %379 = insertelement <4 x float> poison, float %375, i64 0
  %380 = insertelement <4 x float> %379, float %376, i64 1
  %381 = insertelement <4 x float> %380, float %377, i64 2
  %382 = insertelement <4 x float> %381, float %378, i64 3
  %383 = load float, ptr %363, align 4, !tbaa !13
  %384 = load float, ptr %364, align 4, !tbaa !13
  %385 = load float, ptr %365, align 4, !tbaa !13
  %386 = load float, ptr %366, align 4, !tbaa !13
  %387 = insertelement <4 x float> poison, float %383, i64 0
  %388 = insertelement <4 x float> %387, float %384, i64 1
  %389 = insertelement <4 x float> %388, float %385, i64 2
  %390 = insertelement <4 x float> %389, float %386, i64 3
  %391 = load float, ptr %367, align 4, !tbaa !13
  %392 = load float, ptr %368, align 4, !tbaa !13
  %393 = load float, ptr %369, align 4, !tbaa !13
  %394 = load float, ptr %370, align 4, !tbaa !13
  %395 = insertelement <4 x float> poison, float %391, i64 0
  %396 = insertelement <4 x float> %395, float %392, i64 1
  %397 = insertelement <4 x float> %396, float %393, i64 2
  %398 = insertelement <4 x float> %397, float %394, i64 3
  %399 = load float, ptr %371, align 4, !tbaa !13
  %400 = load float, ptr %372, align 4, !tbaa !13
  %401 = load float, ptr %373, align 4, !tbaa !13
  %402 = load float, ptr %374, align 4, !tbaa !13
  %403 = insertelement <4 x float> poison, float %399, i64 0
  %404 = insertelement <4 x float> %403, float %400, i64 1
  %405 = insertelement <4 x float> %404, float %401, i64 2
  %406 = insertelement <4 x float> %405, float %402, i64 3
  %407 = fadd fast <4 x float> %382, %228
  %408 = fadd fast <4 x float> %390, %229
  %409 = fadd fast <4 x float> %398, %230
  %410 = fadd fast <4 x float> %406, %231
  %411 = add nuw i64 %227, 16
  %412 = icmp eq i64 %411, %225
  br i1 %412, label %413, label %226, !llvm.loop !192

413:                                              ; preds = %226
  %414 = fadd fast <4 x float> %304, %303
  %415 = fadd fast <4 x float> %305, %414
  %416 = fadd fast <4 x float> %306, %415
  %417 = call fast float @llvm.vector.reduce.fadd.v4f32(float -0.000000e+00, <4 x float> %416)
  %418 = fadd fast <4 x float> %356, %355
  %419 = fadd fast <4 x float> %357, %418
  %420 = fadd fast <4 x float> %358, %419
  %421 = call fast float @llvm.vector.reduce.fadd.v4f32(float -0.000000e+00, <4 x float> %420)
  %422 = fadd fast <4 x float> %408, %407
  %423 = fadd fast <4 x float> %409, %422
  %424 = fadd fast <4 x float> %410, %423
  %425 = call fast float @llvm.vector.reduce.fadd.v4f32(float -0.000000e+00, <4 x float> %424)
  %426 = icmp eq i64 %225, %222
  %427 = insertelement <2 x float> poison, float %417, i64 0
  %428 = insertelement <2 x float> %427, float %421, i64 1
  br i1 %426, label %445, label %429

429:                                              ; preds = %221, %413
  %430 = phi float [ 0.000000e+00, %221 ], [ %425, %413 ]
  %431 = phi i64 [ 0, %221 ], [ %225, %413 ]
  %432 = phi <2 x float> [ zeroinitializer, %221 ], [ %428, %413 ]
  br label %433

433:                                              ; preds = %429, %433
  %434 = phi float [ %442, %433 ], [ %430, %429 ]
  %435 = phi i64 [ %443, %433 ], [ %431, %429 ]
  %436 = phi <2 x float> [ %439, %433 ], [ %432, %429 ]
  %437 = getelementptr inbounds %struct.FluidVertexVelocity, ptr %202, i64 %435
  %438 = load <2 x float>, ptr %437, align 4, !tbaa !13
  %439 = fadd fast <2 x float> %438, %436
  %440 = getelementptr inbounds [3 x float], ptr %437, i64 0, i64 2
  %441 = load float, ptr %440, align 4, !tbaa !13
  %442 = fadd fast float %441, %434
  %443 = add nuw nsw i64 %435, 1
  %444 = icmp eq i64 %443, %222
  br i1 %444, label %445, label %433, !llvm.loop !195

445:                                              ; preds = %433, %413
  %446 = phi float [ %425, %413 ], [ %442, %433 ]
  %447 = phi <2 x float> [ %428, %413 ], [ %439, %433 ]
  %448 = sitofp i32 %219 to float
  %449 = insertelement <2 x float> poison, float %448, i64 0
  %450 = shufflevector <2 x float> %449, <2 x float> poison, <2 x i32> zeroinitializer
  %451 = fdiv fast <2 x float> %447, %450
  %452 = fdiv fast float %446, %448
  %453 = getelementptr inbounds %struct.ObjectRen, ptr %182, i64 0, i32 18
  br label %454

454:                                              ; preds = %469, %445
  %455 = phi i64 [ 0, %445 ], [ %537, %469 ]
  %456 = phi ptr [ null, %445 ], [ %470, %469 ]
  %457 = mul nuw nsw i64 %455, 12
  %458 = getelementptr i8, ptr %202, i64 %457
  %459 = and i64 %455, 255
  %460 = icmp eq i64 %459, 0
  br i1 %460, label %461, label %467

461:                                              ; preds = %454
  %462 = load ptr, ptr %453, align 8, !tbaa !196
  %463 = lshr i64 %455, 8
  %464 = and i64 %463, 16777215
  %465 = getelementptr inbounds %struct.VertTableNode, ptr %462, i64 %464
  %466 = load ptr, ptr %465, align 8, !tbaa !197
  br label %469

467:                                              ; preds = %454
  %468 = getelementptr inbounds %struct.VertRen, ptr %456, i64 1
  br label %469

469:                                              ; preds = %467, %461
  %470 = phi ptr [ %466, %461 ], [ %468, %467 ]
  %471 = getelementptr inbounds i8, ptr %458, i64 8
  %472 = load float, ptr %471, align 4, !tbaa !13
  %473 = fcmp fast oeq float %472, 0.000000e+00
  %474 = load <4 x float>, ptr %20, align 16
  %475 = shufflevector <4 x float> %474, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %476 = load <4 x float>, ptr %76, align 4
  %477 = shufflevector <4 x float> %476, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %478 = load <4 x float>, ptr %77, align 8
  %479 = shufflevector <4 x float> %478, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %480 = load float, ptr %78, align 16, !tbaa !13
  %481 = load float, ptr %79, align 4, !tbaa !13
  %482 = load float, ptr %80, align 8, !tbaa !13
  %483 = load <2 x float>, ptr %458, align 4, !tbaa !13
  %484 = extractelement <2 x float> %483, i64 0
  %485 = fcmp fast oeq float %484, 0.000000e+00
  %486 = extractelement <2 x float> %483, i64 1
  %487 = fcmp fast oeq float %486, 0.000000e+00
  %488 = select i1 %485, i1 %487, i1 false
  %489 = select i1 %488, i1 %473, i1 false
  %490 = select i1 %489, float %452, float %472
  %491 = insertelement <2 x i1> poison, i1 %489, i64 0
  %492 = shufflevector <2 x i1> %491, <2 x i1> poison, <2 x i32> zeroinitializer
  %493 = select <2 x i1> %492, <2 x float> %451, <2 x float> %483
  %494 = shufflevector <2 x float> %493, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %495 = insertelement <2 x float> %477, float %480, i64 1
  %496 = fmul fast <2 x float> %494, %495
  %497 = insertelement <2 x float> %475, float %481, i64 1
  %498 = fmul fast <2 x float> %493, %497
  %499 = fadd fast <2 x float> %498, %496
  %500 = insertelement <2 x float> poison, float %490, i64 0
  %501 = shufflevector <2 x float> %500, <2 x float> poison, <2 x i32> zeroinitializer
  %502 = insertelement <2 x float> %479, float %482, i64 1
  %503 = fmul fast <2 x float> %501, %502
  %504 = fadd fast <2 x float> %499, %503
  store <2 x float> %504, ptr %17, align 16, !tbaa !13
  %505 = load float, ptr %81, align 16, !tbaa !13
  %506 = extractelement <2 x float> %493, i64 0
  %507 = fmul fast float %505, %506
  %508 = load float, ptr %82, align 4, !tbaa !13
  %509 = extractelement <2 x float> %493, i64 1
  %510 = fmul fast float %508, %509
  %511 = fadd fast float %510, %507
  %512 = load float, ptr %83, align 8, !tbaa !13
  %513 = fmul fast float %512, %490
  %514 = fadd fast float %511, %513
  store float %514, ptr %84, align 8, !tbaa !13
  call void @projectvert(ptr noundef nonnull %17, ptr noundef nonnull %19, ptr noundef nonnull %15) #16
  call void @projectvert(ptr noundef %470, ptr noundef nonnull %19, ptr noundef nonnull %16) #16
  %515 = load float, ptr %85, align 4, !tbaa !13
  %516 = fcmp fast olt float %515, 0x3FB99999A0000000
  %517 = fdiv fast float 1.000000e+00, %515
  %518 = select i1 %516, float 1.000000e+01, float %517
  %519 = load <2 x float>, ptr %15, align 16, !tbaa !13
  %520 = fmul fast <2 x float> %519, %187
  %521 = insertelement <2 x float> poison, float %518, i64 0
  %522 = shufflevector <2 x float> %521, <2 x float> poison, <2 x i32> zeroinitializer
  %523 = fmul fast <2 x float> %520, %522
  %524 = fmul fast <2 x float> %523, %523
  %525 = shufflevector <2 x float> %524, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %526 = fadd fast <2 x float> %525, %524
  %527 = extractelement <2 x float> %526, i64 0
  %528 = fcmp fast ogt float %527, %192
  %529 = call fast float @llvm.sqrt.f32(float %527)
  %530 = fdiv fast float %193, %529
  %531 = select i1 %528, float %530, float 1.000000e+00
  %532 = insertelement <2 x float> poison, float %531, i64 0
  %533 = shufflevector <2 x float> %532, <2 x float> poison, <2 x i32> zeroinitializer
  %534 = fmul fast <2 x float> %533, %523
  %535 = shufflevector <2 x float> %534, <2 x float> poison, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %536 = call ptr @RE_vertren_get_winspeed(ptr noundef nonnull %100, ptr noundef %470, i32 noundef 1) #16
  store <4 x float> %535, ptr %536, align 4, !tbaa !13
  %537 = add nuw nsw i64 %455, 1
  %538 = trunc i64 %537 to i32
  %539 = load i32, ptr %205, align 8, !tbaa !177
  %540 = icmp sgt i32 %539, %538
  br i1 %540, label %454, label %541, !llvm.loop !199

541:                                              ; preds = %469, %181, %197, %204, %218
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %20) #16
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %19) #16
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %18) #16
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %17) #16
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %16) #16
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %15) #16
  br label %949

542:                                              ; preds = %176, %172, %168
  %543 = load i32, ptr %111, align 8, !tbaa !178
  %544 = getelementptr inbounds %struct.ObjectInstanceRen, ptr %169, i64 0, i32 17
  %545 = load i32, ptr %544, align 8, !tbaa !178
  %546 = icmp eq i32 %543, %545
  br i1 %546, label %547, label %945

547:                                              ; preds = %542
  %548 = getelementptr inbounds %struct.ObjectInstanceRen, ptr %169, i64 0, i32 16
  %549 = load ptr, ptr %548, align 8, !tbaa !200
  %550 = load ptr, ptr %107, align 8, !tbaa !165
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %12) #16
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %13) #16
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %14) #16
  %551 = load i32, ptr %72, align 4, !tbaa !201
  %552 = sitofp i32 %551 to float
  %553 = load i32, ptr %73, align 8, !tbaa !202
  %554 = sitofp i32 %553 to float
  %555 = fmul fast float %554, %552
  %556 = call fast float @llvm.sqrt.f32(float %555)
  %557 = getelementptr inbounds %struct.ObjectInstanceRen, ptr %100, i64 0, i32 11
  %558 = load i16, ptr %557, align 8, !tbaa !191
  %559 = and i16 %558, 3
  %560 = icmp eq i16 %559, 0
  br i1 %560, label %563, label %561

561:                                              ; preds = %547
  %562 = getelementptr inbounds %struct.ObjectInstanceRen, ptr %100, i64 0, i32 8
  call void @mul_m4_m4m4(ptr noundef nonnull %13, ptr noundef nonnull %75, ptr noundef nonnull %562) #16
  br label %564

563:                                              ; preds = %547
  call void @copy_m4_m4(ptr noundef nonnull %13, ptr noundef nonnull %75) #16
  br label %564

564:                                              ; preds = %563, %561
  %565 = getelementptr inbounds %struct.ObjectRen, ptr %550, i64 0, i32 18
  %566 = load ptr, ptr %565, align 8, !tbaa !196
  %567 = icmp eq ptr %566, null
  br i1 %567, label %688, label %568

568:                                              ; preds = %564
  %569 = getelementptr inbounds %struct.ObjectRen, ptr %550, i64 0, i32 10
  %570 = load i32, ptr %569, align 8, !tbaa !177
  %571 = icmp sgt i32 %570, 0
  br i1 %571, label %572, label %688

572:                                              ; preds = %568, %680
  %573 = phi ptr [ %685, %680 ], [ %549, %568 ]
  %574 = phi ptr [ %587, %680 ], [ null, %568 ]
  %575 = phi i32 [ %684, %680 ], [ 0, %568 ]
  %576 = and i32 %575, 255
  %577 = icmp eq i32 %576, 0
  br i1 %577, label %578, label %584

578:                                              ; preds = %572
  %579 = load ptr, ptr %565, align 8, !tbaa !196
  %580 = lshr i32 %575, 8
  %581 = zext i32 %580 to i64
  %582 = getelementptr inbounds %struct.VertTableNode, ptr %579, i64 %581
  %583 = load ptr, ptr %582, align 8, !tbaa !197
  br label %586

584:                                              ; preds = %572
  %585 = getelementptr inbounds %struct.VertRen, ptr %574, i64 1
  br label %586

586:                                              ; preds = %584, %578
  %587 = phi ptr [ %583, %578 ], [ %585, %584 ]
  %588 = call ptr @RE_vertren_get_winspeed(ptr noundef nonnull %100, ptr noundef %587, i32 noundef 1) #16
  call void @projectvert(ptr noundef %587, ptr noundef nonnull %13, ptr noundef nonnull %12) #16
  %589 = load i32, ptr @speedvector_project.pano, align 4, !tbaa !47
  %590 = icmp eq i32 %589, 0
  br i1 %590, label %636, label %591

591:                                              ; preds = %586
  %592 = load float, ptr %587, align 4, !tbaa !13
  %593 = getelementptr inbounds float, ptr %587, i64 1
  %594 = load float, ptr %593, align 4, !tbaa !13
  %595 = getelementptr inbounds float, ptr %587, i64 2
  %596 = load float, ptr %595, align 4, !tbaa !13
  %597 = fneg fast float %596
  %598 = fmul fast float %592, %592
  %599 = fmul fast float %596, %596
  %600 = fadd fast float %599, %598
  %601 = call fast float @llvm.sqrt.f32(float %600)
  %602 = fdiv fast float %597, %601
  %603 = fcmp fast ugt float %602, -1.000000e+00
  br i1 %603, label %604, label %608

604:                                              ; preds = %591
  %605 = fcmp fast ult float %602, 1.000000e+00
  br i1 %605, label %606, label %608

606:                                              ; preds = %604
  %607 = call fast nofpclass(nan inf) float @acosf(float noundef nofpclass(nan inf) %602) #17
  br label %608

608:                                              ; preds = %606, %604, %591
  %609 = phi float [ %607, %606 ], [ 0x400921FB60000000, %591 ], [ 0.000000e+00, %604 ]
  %610 = fcmp fast olt float %592, 0.000000e+00
  %611 = fneg fast float %609
  %612 = select i1 %610, float %611, float %609
  %613 = load float, ptr @speedvector_project.pixelphix, align 4, !tbaa !13
  %614 = fdiv fast float %612, %613
  %615 = load float, ptr @speedvector_project.zmulx, align 4, !tbaa !13
  %616 = fadd fast float %614, %615
  %617 = fmul fast float %594, %594
  %618 = fadd fast float %617, %598
  %619 = fadd fast float %618, %599
  %620 = call fast float @llvm.sqrt.f32(float %619)
  %621 = fdiv fast float %594, %620
  %622 = fcmp fast ugt float %621, -1.000000e+00
  br i1 %622, label %623, label %627

623:                                              ; preds = %608
  %624 = fcmp fast ult float %621, 1.000000e+00
  br i1 %624, label %625, label %627

625:                                              ; preds = %623
  %626 = call fast nofpclass(nan inf) float @acosf(float noundef nofpclass(nan inf) %621) #17
  br label %627

627:                                              ; preds = %625, %623, %608
  %628 = phi float [ %626, %625 ], [ 0x400921FB60000000, %608 ], [ 0.000000e+00, %623 ]
  %629 = fsub fast float 0x3FF921FB60000000, %628
  %630 = load float, ptr @speedvector_project.pixelphiy, align 4, !tbaa !13
  %631 = fdiv fast float %629, %630
  %632 = load float, ptr @speedvector_project.zmuly, align 4, !tbaa !13
  %633 = fadd fast float %631, %632
  %634 = insertelement <2 x float> poison, float %616, i64 0
  %635 = insertelement <2 x float> %634, float %633, i64 1
  br label %651

636:                                              ; preds = %586
  %637 = load float, ptr %86, align 4, !tbaa !13
  %638 = fcmp fast olt float %637, 0x3FB99999A0000000
  %639 = fdiv fast float 1.000000e+00, %637
  %640 = select i1 %638, float 1.000000e+01, float %639
  %641 = load float, ptr @speedvector_project.zmulx, align 4, !tbaa !13
  %642 = load float, ptr @speedvector_project.zmuly, align 4, !tbaa !13
  %643 = load <2 x float>, ptr %12, align 16, !tbaa !13
  %644 = insertelement <2 x float> poison, float %640, i64 0
  %645 = shufflevector <2 x float> %644, <2 x float> poison, <2 x i32> zeroinitializer
  %646 = fmul fast <2 x float> %643, %645
  %647 = fadd fast <2 x float> %646, <float 1.000000e+00, float 1.000000e+00>
  %648 = insertelement <2 x float> poison, float %641, i64 0
  %649 = insertelement <2 x float> %648, float %642, i64 1
  %650 = fmul fast <2 x float> %647, %649
  br label %651

651:                                              ; preds = %627, %636
  %652 = phi <2 x float> [ %650, %636 ], [ %635, %627 ]
  %653 = load <2 x float>, ptr %573, align 4, !tbaa !13
  %654 = fsub fast <2 x float> %653, %652
  %655 = shufflevector <2 x float> %654, <2 x float> poison, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %656 = fcmp fast ogt <4 x float> %655, <float 0xBFB99999A0000000, float 0xBFB99999A0000000, float 0x3FB99999A0000000, float 0x3FB99999A0000000>
  %657 = fcmp fast olt <4 x float> %655, <float 0xBFB99999A0000000, float 0xBFB99999A0000000, float 0x3FB99999A0000000, float 0x3FB99999A0000000>
  %658 = shufflevector <4 x i1> %656, <4 x i1> %657, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %659 = freeze <4 x i1> %658
  %660 = bitcast <4 x i1> %659 to i4
  %661 = icmp eq i4 %660, -1
  %662 = extractelement <2 x float> %654, i64 1
  %663 = select i1 %661, float 0.000000e+00, float %662
  %664 = extractelement <2 x float> %654, i64 0
  %665 = select i1 %661, float 0.000000e+00, float %664
  %666 = fmul fast float %665, %665
  %667 = fmul fast float %663, %663
  %668 = fadd fast float %667, %666
  %669 = fcmp fast ogt float %668, %555
  %670 = call fast float @llvm.sqrt.f32(float %668)
  %671 = fdiv fast float %556, %670
  %672 = select i1 %669, float %671, float 1.000000e+00
  %673 = fmul fast float %672, %663
  %674 = fmul fast float %672, %665
  br i1 %91, label %675, label %679

675:                                              ; preds = %651
  %676 = fneg fast float %674
  %677 = getelementptr inbounds float, ptr %588, i64 2
  store float %676, ptr %677, align 4, !tbaa !13
  %678 = fneg fast float %673
  br label %680

679:                                              ; preds = %651
  store float %674, ptr %588, align 4, !tbaa !13
  br label %680

680:                                              ; preds = %679, %675
  %681 = phi i64 [ 1, %679 ], [ 3, %675 ]
  %682 = phi float [ %673, %679 ], [ %678, %675 ]
  %683 = getelementptr inbounds float, ptr %588, i64 %681
  store float %682, ptr %683, align 4, !tbaa !13
  %684 = add nuw nsw i32 %575, 1
  %685 = getelementptr inbounds float, ptr %573, i64 2
  %686 = load i32, ptr %569, align 8, !tbaa !177
  %687 = icmp slt i32 %684, %686
  br i1 %687, label %572, label %688, !llvm.loop !203

688:                                              ; preds = %680, %568, %564
  %689 = getelementptr inbounds %struct.ObjectRen, ptr %550, i64 0, i32 20
  %690 = load ptr, ptr %689, align 8, !tbaa !204
  %691 = icmp eq ptr %690, null
  br i1 %691, label %944, label %692

692:                                              ; preds = %688
  %693 = getelementptr inbounds %struct.ObjectRen, ptr %550, i64 0, i32 22
  %694 = load ptr, ptr %693, align 8, !tbaa !205
  %695 = icmp eq ptr %694, null
  br i1 %695, label %944, label %696

696:                                              ; preds = %692
  %697 = getelementptr inbounds %struct.StrandBuffer, ptr %694, i64 0, i32 8
  %698 = load ptr, ptr %697, align 8, !tbaa !206
  %699 = icmp eq ptr %698, null
  br i1 %699, label %944, label %700

700:                                              ; preds = %696
  %701 = getelementptr inbounds %struct.StrandSurface, ptr %698, i64 0, i32 4
  %702 = load ptr, ptr %701, align 8, !tbaa !208
  %703 = icmp eq ptr %702, null
  br i1 %703, label %944, label %704

704:                                              ; preds = %700
  %705 = getelementptr inbounds %struct.StrandSurface, ptr %698, i64 0, i32 8
  %706 = load ptr, ptr %705, align 8, !tbaa !210
  %707 = icmp eq ptr %706, null
  br i1 %707, label %944, label %708

708:                                              ; preds = %704
  %709 = getelementptr inbounds %struct.StrandSurface, ptr %698, i64 0, i32 9
  %710 = load ptr, ptr %709, align 8, !tbaa !211
  %711 = icmp eq ptr %710, null
  br i1 %711, label %944, label %712

712:                                              ; preds = %708
  %713 = load i32, ptr %72, align 4, !tbaa !201
  %714 = sitofp i32 %713 to float
  %715 = load i32, ptr %73, align 8, !tbaa !202
  %716 = sitofp i32 %715 to float
  %717 = fmul fast float %716, %714
  %718 = call fast float @llvm.sqrt.f32(float %717)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %7) #16
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %8) #16
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %9) #16
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %10) #16
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %11) #16
  %719 = load i16, ptr %557, align 8, !tbaa !191
  %720 = and i16 %719, 3
  %721 = icmp eq i16 %720, 0
  br i1 %721, label %724, label %722

722:                                              ; preds = %712
  %723 = getelementptr inbounds %struct.ObjectInstanceRen, ptr %100, i64 0, i32 8
  call void @mul_m4_m4m4(ptr noundef nonnull %10, ptr noundef nonnull %75, ptr noundef nonnull %723) #16
  br label %725

724:                                              ; preds = %712
  call void @copy_m4_m4(ptr noundef nonnull %10, ptr noundef nonnull %75) #16
  br label %725

725:                                              ; preds = %724, %722
  %726 = load ptr, ptr @MEM_callocN, align 8, !tbaa !16
  %727 = getelementptr inbounds %struct.StrandSurface, ptr %698, i64 0, i32 10
  %728 = load i32, ptr %727, align 8, !tbaa !212
  %729 = sext i32 %728 to i64
  %730 = shl nsw i64 %729, 4
  %731 = call ptr %726(i64 noundef %730, ptr noundef nonnull @.str.30) #16
  %732 = load i32, ptr %727, align 8, !tbaa !212
  %733 = icmp sgt i32 %732, 0
  br i1 %733, label %734, label %806

734:                                              ; preds = %725, %734
  %735 = phi i64 [ %801, %734 ], [ 0, %725 ]
  %736 = load ptr, ptr %701, align 8, !tbaa !208
  %737 = getelementptr inbounds [3 x float], ptr %736, i64 %735
  call void @projectvert(ptr noundef %737, ptr noundef nonnull %10, ptr noundef nonnull %7) #16
  %738 = load ptr, ptr %705, align 8, !tbaa !210
  %739 = getelementptr inbounds [3 x float], ptr %738, i64 %735
  call void @projectvert(ptr noundef %739, ptr noundef nonnull %10, ptr noundef nonnull %8) #16
  %740 = load ptr, ptr %705, align 8, !tbaa !210
  %741 = getelementptr inbounds [3 x float], ptr %740, i64 %735
  call fastcc void @speedvector_project(ptr noundef null, ptr noundef nonnull %11, ptr noundef %741, ptr noundef nonnull %8)
  %742 = load ptr, ptr %701, align 8, !tbaa !208
  %743 = getelementptr inbounds [3 x float], ptr %742, i64 %735
  %744 = getelementptr inbounds [4 x float], ptr %731, i64 %735
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6) #16
  call fastcc void @speedvector_project(ptr noundef null, ptr noundef nonnull %6, ptr noundef %743, ptr noundef nonnull %7)
  %745 = load <2 x float>, ptr %11, align 8, !tbaa !13
  %746 = load <2 x float>, ptr %6, align 8, !tbaa !13
  %747 = fsub fast <2 x float> %745, %746
  %748 = shufflevector <2 x float> %747, <2 x float> poison, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %749 = fcmp fast ogt <4 x float> %748, <float 0xBFB99999A0000000, float 0xBFB99999A0000000, float 0x3FB99999A0000000, float 0x3FB99999A0000000>
  %750 = fcmp fast olt <4 x float> %748, <float 0xBFB99999A0000000, float 0xBFB99999A0000000, float 0x3FB99999A0000000, float 0x3FB99999A0000000>
  %751 = shufflevector <4 x i1> %749, <4 x i1> %750, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %752 = freeze <4 x i1> %751
  %753 = bitcast <4 x i1> %752 to i4
  %754 = icmp eq i4 %753, -1
  %755 = insertelement <2 x i1> poison, i1 %754, i64 0
  %756 = shufflevector <2 x i1> %755, <2 x i1> poison, <2 x i32> zeroinitializer
  %757 = select <2 x i1> %756, <2 x float> zeroinitializer, <2 x float> %747
  %758 = fmul fast <2 x float> %757, %757
  %759 = shufflevector <2 x float> %758, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %760 = fadd fast <2 x float> %759, %758
  %761 = extractelement <2 x float> %760, i64 0
  %762 = fcmp fast ogt float %761, %717
  %763 = call fast float @llvm.sqrt.f32(float %761)
  %764 = fdiv fast float %718, %763
  %765 = select i1 %762, float %764, float 1.000000e+00
  %766 = insertelement <2 x float> poison, float %765, i64 0
  %767 = shufflevector <2 x float> %766, <2 x float> poison, <2 x i32> zeroinitializer
  %768 = fmul fast <2 x float> %767, %757
  store <2 x float> %768, ptr %744, align 4, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #16
  %769 = load ptr, ptr %709, align 8, !tbaa !211
  %770 = getelementptr inbounds [3 x float], ptr %769, i64 %735
  call void @projectvert(ptr noundef %770, ptr noundef nonnull %10, ptr noundef nonnull %9) #16
  %771 = load ptr, ptr %709, align 8, !tbaa !211
  %772 = getelementptr inbounds [3 x float], ptr %771, i64 %735
  call fastcc void @speedvector_project(ptr noundef null, ptr noundef nonnull %11, ptr noundef %772, ptr noundef nonnull %9)
  %773 = load ptr, ptr %701, align 8, !tbaa !208
  %774 = getelementptr inbounds [3 x float], ptr %773, i64 %735
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #16
  call fastcc void @speedvector_project(ptr noundef null, ptr noundef nonnull %5, ptr noundef %774, ptr noundef nonnull %7)
  %775 = getelementptr inbounds float, ptr %744, i64 2
  %776 = load <2 x float>, ptr %11, align 8, !tbaa !13
  %777 = load <2 x float>, ptr %5, align 8, !tbaa !13
  %778 = fsub fast <2 x float> %776, %777
  %779 = shufflevector <2 x float> %778, <2 x float> poison, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %780 = fcmp fast ogt <4 x float> %779, <float 0xBFB99999A0000000, float 0xBFB99999A0000000, float 0x3FB99999A0000000, float 0x3FB99999A0000000>
  %781 = fcmp fast olt <4 x float> %779, <float 0xBFB99999A0000000, float 0xBFB99999A0000000, float 0x3FB99999A0000000, float 0x3FB99999A0000000>
  %782 = shufflevector <4 x i1> %780, <4 x i1> %781, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %783 = freeze <4 x i1> %782
  %784 = bitcast <4 x i1> %783 to i4
  %785 = icmp eq i4 %784, -1
  %786 = insertelement <2 x i1> poison, i1 %785, i64 0
  %787 = shufflevector <2 x i1> %786, <2 x i1> poison, <2 x i32> zeroinitializer
  %788 = select <2 x i1> %787, <2 x float> zeroinitializer, <2 x float> %778
  %789 = fmul fast <2 x float> %788, %788
  %790 = shufflevector <2 x float> %789, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %791 = fadd fast <2 x float> %790, %789
  %792 = extractelement <2 x float> %791, i64 0
  %793 = fcmp fast ogt float %792, %717
  %794 = call fast float @llvm.sqrt.f32(float %792)
  %795 = fdiv fast float %718, %794
  %796 = select i1 %793, float %795, float 1.000000e+00
  %797 = fneg fast <2 x float> %788
  %798 = insertelement <2 x float> poison, float %796, i64 0
  %799 = shufflevector <2 x float> %798, <2 x float> poison, <2 x i32> zeroinitializer
  %800 = fmul fast <2 x float> %799, %797
  store <2 x float> %800, ptr %775, align 4, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #16
  %801 = add nuw nsw i64 %735, 1
  %802 = load i32, ptr %727, align 8, !tbaa !212
  %803 = sext i32 %802 to i64
  %804 = icmp slt i64 %801, %803
  br i1 %804, label %734, label %805, !llvm.loop !213

805:                                              ; preds = %734
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %11) #16
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %10) #16
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %9) #16
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %8) #16
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %7) #16
  br label %808

806:                                              ; preds = %725
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %11) #16
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %10) #16
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %9) #16
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %8) #16
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %7) #16
  %807 = icmp eq ptr %731, null
  br i1 %807, label %944, label %808

808:                                              ; preds = %806, %805
  %809 = getelementptr inbounds %struct.ObjectRen, ptr %550, i64 0, i32 12
  %810 = load i32, ptr %809, align 8, !tbaa !214
  %811 = icmp sgt i32 %810, 0
  br i1 %811, label %812, label %942

812:                                              ; preds = %808
  %813 = getelementptr inbounds %struct.StrandSurface, ptr %698, i64 0, i32 11
  %814 = getelementptr inbounds %struct.StrandSurface, ptr %698, i64 0, i32 3
  br label %815

815:                                              ; preds = %938, %812
  %816 = phi i32 [ 0, %812 ], [ %939, %938 ]
  %817 = phi ptr [ null, %812 ], [ %829, %938 ]
  %818 = and i32 %816, 255
  %819 = icmp eq i32 %818, 0
  br i1 %819, label %820, label %826

820:                                              ; preds = %815
  %821 = load ptr, ptr %689, align 8, !tbaa !204
  %822 = lshr i32 %816, 8
  %823 = zext i32 %822 to i64
  %824 = getelementptr inbounds %struct.StrandTableNode, ptr %821, i64 %823
  %825 = load ptr, ptr %824, align 8, !tbaa !215
  br label %828

826:                                              ; preds = %815
  %827 = getelementptr inbounds %struct.StrandRen, ptr %817, i64 1
  br label %828

828:                                              ; preds = %826, %820
  %829 = phi ptr [ %825, %820 ], [ %827, %826 ]
  %830 = call ptr @RE_strandren_get_face(ptr noundef nonnull %550, ptr noundef %829, i32 noundef 0) #16
  %831 = icmp eq ptr %830, null
  br i1 %831, label %938, label %832

832:                                              ; preds = %828
  %833 = load i32, ptr %830, align 4, !tbaa !47
  %834 = load i32, ptr %813, align 4, !tbaa !217
  %835 = icmp slt i32 %833, %834
  br i1 %835, label %836, label %938

836:                                              ; preds = %832
  %837 = call ptr @RE_strandren_get_winspeed(ptr noundef nonnull %100, ptr noundef %829, i32 noundef 1) #16
  %838 = load ptr, ptr %814, align 8, !tbaa !218
  %839 = load i32, ptr %830, align 4, !tbaa !47
  %840 = sext i32 %839 to i64
  %841 = getelementptr inbounds [4 x i32], ptr %838, i64 %840
  %842 = load ptr, ptr %701, align 8, !tbaa !208
  %843 = load i32, ptr %841, align 4, !tbaa !47
  %844 = sext i32 %843 to i64
  %845 = getelementptr inbounds [3 x float], ptr %842, i64 %844
  %846 = getelementptr inbounds i32, ptr %841, i64 1
  %847 = load i32, ptr %846, align 4, !tbaa !47
  %848 = sext i32 %847 to i64
  %849 = getelementptr inbounds [3 x float], ptr %842, i64 %848
  %850 = getelementptr inbounds i32, ptr %841, i64 2
  %851 = load i32, ptr %850, align 4, !tbaa !47
  %852 = sext i32 %851 to i64
  %853 = getelementptr inbounds [3 x float], ptr %842, i64 %852
  %854 = getelementptr inbounds i32, ptr %841, i64 3
  %855 = load i32, ptr %854, align 4, !tbaa !47
  %856 = icmp eq i32 %855, 0
  %857 = sext i32 %855 to i64
  %858 = getelementptr inbounds [3 x float], ptr %842, i64 %857
  %859 = select i1 %856, ptr null, ptr %858
  %860 = load ptr, ptr %829, align 8, !tbaa !219
  call void @interp_weights_face_v3(ptr noundef nonnull %14, ptr noundef %845, ptr noundef %849, ptr noundef %853, ptr noundef %859, ptr noundef %860) #16
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %837, i8 0, i64 16, i1 false)
  %861 = load i32, ptr %841, align 4, !tbaa !47
  %862 = sext i32 %861 to i64
  %863 = getelementptr inbounds [4 x float], ptr %731, i64 %862
  %864 = load float, ptr %14, align 16, !tbaa !13
  %865 = load float, ptr %863, align 4, !tbaa !13
  %866 = fmul fast float %865, %864
  store float %866, ptr %837, align 4, !tbaa !13
  %867 = getelementptr inbounds float, ptr %863, i64 1
  %868 = load float, ptr %867, align 4, !tbaa !13
  %869 = fmul fast float %868, %864
  %870 = getelementptr inbounds float, ptr %837, i64 1
  store float %869, ptr %870, align 4, !tbaa !13
  %871 = getelementptr inbounds float, ptr %863, i64 2
  %872 = load float, ptr %871, align 4, !tbaa !13
  %873 = fmul fast float %872, %864
  %874 = getelementptr inbounds float, ptr %837, i64 2
  store float %873, ptr %874, align 4, !tbaa !13
  %875 = getelementptr inbounds float, ptr %863, i64 3
  %876 = load float, ptr %875, align 4, !tbaa !13
  %877 = fmul fast float %876, %864
  %878 = getelementptr inbounds float, ptr %837, i64 3
  store float %877, ptr %878, align 4, !tbaa !13
  %879 = load i32, ptr %846, align 4, !tbaa !47
  %880 = sext i32 %879 to i64
  %881 = getelementptr inbounds [4 x float], ptr %731, i64 %880
  %882 = load float, ptr %87, align 4, !tbaa !13
  %883 = load float, ptr %881, align 4, !tbaa !13
  %884 = fmul fast float %883, %882
  %885 = fadd fast float %884, %866
  store float %885, ptr %837, align 4, !tbaa !13
  %886 = getelementptr inbounds float, ptr %881, i64 1
  %887 = load float, ptr %886, align 4, !tbaa !13
  %888 = fmul fast float %887, %882
  %889 = fadd fast float %888, %869
  store float %889, ptr %870, align 4, !tbaa !13
  %890 = getelementptr inbounds float, ptr %881, i64 2
  %891 = load float, ptr %890, align 4, !tbaa !13
  %892 = fmul fast float %891, %882
  %893 = fadd fast float %892, %873
  store float %893, ptr %874, align 4, !tbaa !13
  %894 = getelementptr inbounds float, ptr %881, i64 3
  %895 = load float, ptr %894, align 4, !tbaa !13
  %896 = fmul fast float %895, %882
  %897 = fadd fast float %896, %877
  store float %897, ptr %878, align 4, !tbaa !13
  %898 = load i32, ptr %850, align 4, !tbaa !47
  %899 = sext i32 %898 to i64
  %900 = getelementptr inbounds [4 x float], ptr %731, i64 %899
  %901 = load float, ptr %88, align 8, !tbaa !13
  %902 = load float, ptr %900, align 4, !tbaa !13
  %903 = fmul fast float %902, %901
  %904 = fadd fast float %903, %885
  store float %904, ptr %837, align 4, !tbaa !13
  %905 = getelementptr inbounds float, ptr %900, i64 1
  %906 = load float, ptr %905, align 4, !tbaa !13
  %907 = fmul fast float %906, %901
  %908 = fadd fast float %907, %889
  store float %908, ptr %870, align 4, !tbaa !13
  %909 = getelementptr inbounds float, ptr %900, i64 2
  %910 = load float, ptr %909, align 4, !tbaa !13
  %911 = fmul fast float %910, %901
  %912 = fadd fast float %911, %893
  store float %912, ptr %874, align 4, !tbaa !13
  %913 = getelementptr inbounds float, ptr %900, i64 3
  %914 = load float, ptr %913, align 4, !tbaa !13
  %915 = fmul fast float %914, %901
  %916 = fadd fast float %915, %897
  store float %916, ptr %878, align 4, !tbaa !13
  %917 = load i32, ptr %854, align 4, !tbaa !47
  %918 = icmp eq i32 %917, 0
  br i1 %918, label %938, label %919

919:                                              ; preds = %836
  %920 = sext i32 %917 to i64
  %921 = getelementptr inbounds [4 x float], ptr %731, i64 %920
  %922 = load float, ptr %89, align 4, !tbaa !13
  %923 = load float, ptr %921, align 4, !tbaa !13
  %924 = fmul fast float %923, %922
  %925 = fadd fast float %924, %904
  store float %925, ptr %837, align 4, !tbaa !13
  %926 = getelementptr inbounds float, ptr %921, i64 1
  %927 = load float, ptr %926, align 4, !tbaa !13
  %928 = fmul fast float %927, %922
  %929 = fadd fast float %928, %908
  store float %929, ptr %870, align 4, !tbaa !13
  %930 = getelementptr inbounds float, ptr %921, i64 2
  %931 = load float, ptr %930, align 4, !tbaa !13
  %932 = fmul fast float %931, %922
  %933 = fadd fast float %932, %912
  store float %933, ptr %874, align 4, !tbaa !13
  %934 = getelementptr inbounds float, ptr %921, i64 3
  %935 = load float, ptr %934, align 4, !tbaa !13
  %936 = fmul fast float %935, %922
  %937 = fadd fast float %936, %916
  store float %937, ptr %878, align 4, !tbaa !13
  br label %938

938:                                              ; preds = %919, %836, %832, %828
  %939 = add nuw nsw i32 %816, 1
  %940 = load i32, ptr %809, align 8, !tbaa !214
  %941 = icmp slt i32 %939, %940
  br i1 %941, label %815, label %942, !llvm.loop !221

942:                                              ; preds = %938, %808
  %943 = load ptr, ptr @MEM_freeN, align 8, !tbaa !16
  call void %943(ptr noundef nonnull %731) #16
  br label %944

944:                                              ; preds = %688, %692, %696, %700, %704, %708, %806, %942
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %14) #16
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %13) #16
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %12) #16
  br label %949

945:                                              ; preds = %542
  %946 = load ptr, ptr %114, align 8, !tbaa !179
  %947 = getelementptr inbounds %struct.ID, ptr %946, i64 0, i32 4, i64 2
  %948 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.6, ptr noundef nonnull %947)
  br label %949

949:                                              ; preds = %944, %945, %541
  %950 = load ptr, ptr %169, align 8, !tbaa !222
  br label %951

951:                                              ; preds = %99, %949, %165
  %952 = phi ptr [ %136, %165 ], [ %950, %949 ], [ %101, %99 ]
  %953 = load ptr, ptr %100, align 8, !tbaa !16
  %954 = icmp ne ptr %953, null
  %955 = icmp ne ptr %952, null
  %956 = select i1 %954, i1 %955, i1 false
  br i1 %956, label %99, label %957, !llvm.loop !223

957:                                              ; preds = %951, %90
  br i1 %92, label %90, label %958, !llvm.loop !224

958:                                              ; preds = %957, %43
  %959 = load ptr, ptr %21, align 8, !tbaa !16
  %960 = icmp eq ptr %959, null
  br i1 %960, label %971, label %961

961:                                              ; preds = %958, %968
  %962 = phi ptr [ %969, %968 ], [ %959, %958 ]
  %963 = getelementptr inbounds %struct.ObjectInstanceRen, ptr %962, i64 0, i32 16
  %964 = load ptr, ptr %963, align 8, !tbaa !200
  %965 = icmp eq ptr %964, null
  br i1 %965, label %968, label %966

966:                                              ; preds = %961
  %967 = load ptr, ptr @MEM_freeN, align 8, !tbaa !16
  call void %967(ptr noundef nonnull %964) #16
  br label %968

968:                                              ; preds = %966, %961
  %969 = load ptr, ptr %962, align 8, !tbaa !16
  %970 = icmp eq ptr %969, null
  br i1 %970, label %971, label %961, !llvm.loop !225

971:                                              ; preds = %968, %958
  call void @BLI_freelistN(ptr noundef nonnull %21) #16
  %972 = load ptr, ptr %22, align 8, !tbaa !16
  %973 = icmp eq ptr %972, null
  br i1 %973, label %984, label %974

974:                                              ; preds = %971, %981
  %975 = phi ptr [ %982, %981 ], [ %972, %971 ]
  %976 = getelementptr inbounds %struct.ObjectInstanceRen, ptr %975, i64 0, i32 16
  %977 = load ptr, ptr %976, align 8, !tbaa !200
  %978 = icmp eq ptr %977, null
  br i1 %978, label %981, label %979

979:                                              ; preds = %974
  %980 = load ptr, ptr @MEM_freeN, align 8, !tbaa !16
  call void %980(ptr noundef nonnull %977) #16
  br label %981

981:                                              ; preds = %979, %974
  %982 = load ptr, ptr %975, align 8, !tbaa !16
  %983 = icmp eq ptr %982, null
  br i1 %983, label %984, label %974, !llvm.loop !225

984:                                              ; preds = %981, %971
  call void @BLI_freelistN(ptr noundef nonnull %22) #16
  %985 = load ptr, ptr %28, align 8, !tbaa !16
  %986 = icmp eq ptr %985, null
  br i1 %986, label %1003, label %987

987:                                              ; preds = %984, %1000
  %988 = phi ptr [ %1001, %1000 ], [ %985, %984 ]
  %989 = getelementptr inbounds %struct.StrandSurface, ptr %988, i64 0, i32 8
  %990 = load ptr, ptr %989, align 8, !tbaa !210
  %991 = icmp eq ptr %990, null
  br i1 %991, label %994, label %992

992:                                              ; preds = %987
  %993 = load ptr, ptr @MEM_freeN, align 8, !tbaa !16
  call void %993(ptr noundef nonnull %990) #16
  store ptr null, ptr %989, align 8, !tbaa !210
  br label %994

994:                                              ; preds = %992, %987
  %995 = getelementptr inbounds %struct.StrandSurface, ptr %988, i64 0, i32 9
  %996 = load ptr, ptr %995, align 8, !tbaa !211
  %997 = icmp eq ptr %996, null
  br i1 %997, label %1000, label %998

998:                                              ; preds = %994
  %999 = load ptr, ptr @MEM_freeN, align 8, !tbaa !16
  call void %999(ptr noundef nonnull %996) #16
  store ptr null, ptr %995, align 8, !tbaa !211
  br label %1000

1000:                                             ; preds = %994, %998
  %1001 = load ptr, ptr %988, align 8, !tbaa !16
  %1002 = icmp eq ptr %1001, null
  br i1 %1002, label %1003, label %987, !llvm.loop !226

1003:                                             ; preds = %1000, %984
  %1004 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 98
  store ptr null, ptr %24, align 8, !tbaa !87
  %1005 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 90
  %1006 = load ptr, ptr %1005, align 8, !tbaa !122
  %1007 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 91
  %1008 = load ptr, ptr %1007, align 8, !tbaa !123
  call void %1006(ptr noundef %1008, ptr noundef nonnull %1004) #16
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %23)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %22) #16
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %21) #16
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind sspstrong willreturn memory(readwrite, inaccessiblemem: none) uwtable
define internal fastcc void @speedvector_project(ptr noundef readonly %0, ptr nocapture noundef writeonly %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3) unnamed_addr #7 {
  %5 = icmp eq ptr %0, null
  br i1 %5, label %48, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 45, i32 47
  %8 = load i32, ptr %7, align 8, !tbaa !55
  %9 = and i32 %8, 1024
  store i32 %9, ptr @speedvector_project.pano, align 4, !tbaa !47
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %16

11:                                               ; preds = %6
  %12 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 13
  %13 = load i32, ptr %12, align 4, !tbaa !201
  %14 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 14
  %15 = load i32, ptr %14, align 8, !tbaa !202
  br label %41

16:                                               ; preds = %6
  %17 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 16
  %18 = load float, ptr %17, align 4, !tbaa !227
  %19 = getelementptr %struct.Render, ptr %0, i64 0, i32 16, i32 1
  %20 = load float, ptr %19, align 4, !tbaa !228
  %21 = fsub fast float %20, %18
  %22 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 13
  %23 = load i32, ptr %22, align 4, !tbaa !201
  %24 = sitofp i32 %23 to float
  %25 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 36
  %26 = load float, ptr %25, align 8, !tbaa !59
  %27 = fmul fast float %26, %24
  %28 = fdiv fast float %21, %27
  %29 = tail call fast nofpclass(nan inf) float @atanf(float noundef nofpclass(nan inf) %28) #9
  store float %29, ptr @speedvector_project.pixelphix, align 4, !tbaa !13
  %30 = getelementptr %struct.Render, ptr %0, i64 0, i32 16, i32 2
  %31 = load float, ptr %30, align 4, !tbaa !229
  %32 = getelementptr %struct.Render, ptr %0, i64 0, i32 16, i32 3
  %33 = load float, ptr %32, align 4, !tbaa !230
  %34 = fsub fast float %33, %31
  %35 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 14
  %36 = load i32, ptr %35, align 8, !tbaa !202
  %37 = sitofp i32 %36 to float
  %38 = fmul fast float %26, %37
  %39 = fdiv fast float %34, %38
  %40 = tail call fast nofpclass(nan inf) float @atanf(float noundef nofpclass(nan inf) %39) #9
  store float %40, ptr @speedvector_project.pixelphiy, align 4, !tbaa !13
  br label %41

41:                                               ; preds = %11, %16
  %42 = phi i32 [ %15, %11 ], [ %36, %16 ]
  %43 = phi i32 [ %13, %11 ], [ %23, %16 ]
  %44 = sdiv i32 %43, 2
  %45 = sitofp i32 %44 to float
  store float %45, ptr @speedvector_project.zmulx, align 4, !tbaa !13
  %46 = sdiv i32 %42, 2
  %47 = sitofp i32 %46 to float
  store float %47, ptr @speedvector_project.zmuly, align 4, !tbaa !13
  br label %113

48:                                               ; preds = %4
  %49 = load i32, ptr @speedvector_project.pano, align 4, !tbaa !47
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %95, label %51

51:                                               ; preds = %48
  %52 = load float, ptr %2, align 4, !tbaa !13
  %53 = getelementptr inbounds float, ptr %2, i64 1
  %54 = load float, ptr %53, align 4, !tbaa !13
  %55 = getelementptr inbounds float, ptr %2, i64 2
  %56 = load float, ptr %55, align 4, !tbaa !13
  %57 = fneg fast float %56
  %58 = fmul fast float %52, %52
  %59 = fmul fast float %56, %56
  %60 = fadd fast float %59, %58
  %61 = tail call fast float @llvm.sqrt.f32(float %60)
  %62 = fdiv fast float %57, %61
  %63 = fcmp fast ugt float %62, -1.000000e+00
  br i1 %63, label %64, label %68

64:                                               ; preds = %51
  %65 = fcmp fast ult float %62, 1.000000e+00
  br i1 %65, label %66, label %68

66:                                               ; preds = %64
  %67 = tail call fast nofpclass(nan inf) float @acosf(float noundef nofpclass(nan inf) %62) #17
  br label %68

68:                                               ; preds = %51, %64, %66
  %69 = phi float [ %67, %66 ], [ 0x400921FB60000000, %51 ], [ 0.000000e+00, %64 ]
  %70 = fcmp fast olt float %52, 0.000000e+00
  %71 = fneg fast float %69
  %72 = select i1 %70, float %71, float %69
  %73 = load float, ptr @speedvector_project.pixelphix, align 4, !tbaa !13
  %74 = fdiv fast float %72, %73
  %75 = load float, ptr @speedvector_project.zmulx, align 4, !tbaa !13
  %76 = fadd fast float %74, %75
  store float %76, ptr %1, align 4, !tbaa !13
  %77 = fmul fast float %54, %54
  %78 = fadd fast float %77, %58
  %79 = fadd fast float %78, %59
  %80 = tail call fast float @llvm.sqrt.f32(float %79)
  %81 = fdiv fast float %54, %80
  %82 = fcmp fast ugt float %81, -1.000000e+00
  br i1 %82, label %83, label %87

83:                                               ; preds = %68
  %84 = fcmp fast ult float %81, 1.000000e+00
  br i1 %84, label %85, label %87

85:                                               ; preds = %83
  %86 = tail call fast nofpclass(nan inf) float @acosf(float noundef nofpclass(nan inf) %81) #17
  br label %87

87:                                               ; preds = %68, %83, %85
  %88 = phi float [ %86, %85 ], [ 0x400921FB60000000, %68 ], [ 0.000000e+00, %83 ]
  %89 = fsub fast float 0x3FF921FB60000000, %88
  %90 = load float, ptr @speedvector_project.pixelphiy, align 4, !tbaa !13
  %91 = fdiv fast float %89, %90
  %92 = load float, ptr @speedvector_project.zmuly, align 4, !tbaa !13
  %93 = fadd fast float %91, %92
  %94 = getelementptr inbounds float, ptr %1, i64 1
  store float %93, ptr %94, align 4, !tbaa !13
  br label %113

95:                                               ; preds = %48
  %96 = getelementptr inbounds float, ptr %3, i64 3
  %97 = load float, ptr %96, align 4, !tbaa !13
  %98 = fcmp fast olt float %97, 0x3FB99999A0000000
  %99 = fdiv fast float 1.000000e+00, %97
  %100 = select i1 %98, float 1.000000e+01, float %99
  %101 = load float, ptr @speedvector_project.zmulx, align 4, !tbaa !13
  %102 = load float, ptr %3, align 4, !tbaa !13
  %103 = fmul fast float %102, %100
  %104 = fadd fast float %103, 1.000000e+00
  %105 = fmul fast float %104, %101
  store float %105, ptr %1, align 4, !tbaa !13
  %106 = load float, ptr @speedvector_project.zmuly, align 4, !tbaa !13
  %107 = getelementptr inbounds float, ptr %3, i64 1
  %108 = load float, ptr %107, align 4, !tbaa !13
  %109 = fmul fast float %108, %100
  %110 = fadd fast float %109, 1.000000e+00
  %111 = fmul fast float %110, %106
  %112 = getelementptr inbounds float, ptr %1, i64 1
  store float %111, ptr %112, align 4, !tbaa !13
  br label %113

113:                                              ; preds = %87, %95, %41
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @database_fromscene_vectors(ptr noundef %0, ptr noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #3 {
  %5 = alloca [4 x [4 x float]], align 16
  %6 = tail call ptr @RE_GetCamera(ptr noundef %0) #16
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %5) #16
  %7 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 44
  store ptr %1, ptr %7, align 8, !tbaa !17
  %8 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 48
  store i32 %2, ptr %8, align 8, !tbaa !85
  %9 = tail call ptr @BLI_memarena_new(i64 noundef 16376, ptr noundef nonnull @.str.27) #16
  %10 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 81
  store ptr %9, ptr %10, align 8, !tbaa !84
  %11 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 60
  %12 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 98, i32 1
  %13 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 66
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(20) %11, i8 0, i64 20, i1 false)
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %13, i8 0, i64 16, i1 false)
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(20) %12, i8 0, i64 20, i1 false)
  store i32 0, ptr @slurph_opt, align 4, !tbaa !47
  %14 = load i32, ptr %8, align 8, !tbaa !85
  %15 = icmp ult i32 %14, 16777216
  %16 = and i32 %2, -16777216
  %17 = select i1 %15, i32 %2, i32 %16
  %18 = getelementptr inbounds %struct.Scene, ptr %1, i64 0, i32 22, i32 5
  %19 = load i32, ptr %18, align 8, !tbaa !88
  %20 = add nsw i32 %19, %3
  store i32 %20, ptr %18, align 8, !tbaa !88
  %21 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 101
  %22 = load ptr, ptr %21, align 8, !tbaa !91
  %23 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 43
  %24 = load ptr, ptr %23, align 8, !tbaa !77
  %25 = load ptr, ptr %7, align 8, !tbaa !17
  tail call void @BKE_scene_update_for_newframe(ptr noundef %22, ptr noundef %24, ptr noundef %25, i32 noundef %17) #16
  %26 = icmp eq ptr %6, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %4
  %28 = getelementptr inbounds %struct.Object, ptr %6, i64 0, i32 47
  call void @normalize_m4_m4(ptr noundef nonnull %5, ptr noundef nonnull %28) #16
  %29 = call zeroext i8 @invert_m4(ptr noundef nonnull %5) #16
  call void @RE_SetView(ptr noundef nonnull %0, ptr noundef nonnull %5) #16
  br label %30

30:                                               ; preds = %27, %4
  call fastcc void @database_init_objects(ptr noundef nonnull %0, i32 noundef %17, i32 noundef 0, i32 noundef 0, ptr noundef null, i32 noundef %3)
  %31 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 96
  %32 = load ptr, ptr %31, align 8, !tbaa !93
  %33 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 97
  %34 = load ptr, ptr %33, align 8, !tbaa !94
  %35 = call i32 %32(ptr noundef %34) #16
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %43

37:                                               ; preds = %30
  %38 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 45, i32 47
  %39 = load i32, ptr %38, align 8, !tbaa !55
  %40 = lshr i32 %39, 10
  %41 = trunc i32 %40 to i8
  %42 = and i8 %41, 1
  call void @project_renderdata(ptr noundef nonnull %0, ptr noundef nonnull @projectverto, i8 noundef zeroext %42, float noundef nofpclass(nan inf) 0.000000e+00, i8 noundef zeroext 1) #16
  br label %43

43:                                               ; preds = %37, %30
  %44 = load i32, ptr %18, align 8, !tbaa !88
  %45 = sub nsw i32 %44, %3
  store i32 %45, ptr %18, align 8, !tbaa !88
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %5) #16
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @copy_dbase_object_vectors(ptr noundef %0, ptr noundef %1) unnamed_addr #3 {
  %3 = alloca [4 x float], align 16
  %4 = alloca [4 x [4 x float]], align 16
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %3) #16
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %4) #16
  %5 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 70
  %6 = load ptr, ptr %5, align 8, !tbaa !16
  %7 = icmp eq ptr %6, null
  br i1 %7, label %128, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 35
  %10 = getelementptr inbounds float, ptr %3, i64 3
  %11 = getelementptr inbounds float, ptr %3, i64 1
  br label %12

12:                                               ; preds = %8, %124
  %13 = phi ptr [ %6, %8 ], [ %126, %124 ]
  %14 = phi ptr [ null, %8 ], [ %125, %124 ]
  %15 = getelementptr inbounds %struct.ObjectInstanceRen, ptr %13, i64 0, i32 2
  %16 = load ptr, ptr %15, align 8, !tbaa !165
  %17 = load ptr, ptr @MEM_mallocN, align 8, !tbaa !16
  %18 = call ptr %17(i64 noundef 288, ptr noundef nonnull @.str.28) #16
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(288) %18, ptr noundef nonnull align 8 dereferenceable(288) %13, i64 288, i1 false)
  call void @BLI_addtail(ptr noundef %1, ptr noundef %18) #16
  %19 = getelementptr inbounds %struct.ObjectRen, ptr %16, i64 0, i32 10
  %20 = load i32, ptr %19, align 8, !tbaa !177
  %21 = getelementptr inbounds %struct.ObjectInstanceRen, ptr %18, i64 0, i32 17
  store i32 %20, ptr %21, align 8, !tbaa !178
  %22 = icmp sgt i32 %20, 0
  br i1 %22, label %23, label %124

23:                                               ; preds = %12
  %24 = load ptr, ptr @MEM_mallocN, align 8, !tbaa !16
  %25 = zext i32 %20 to i64
  %26 = shl nuw nsw i64 %25, 3
  %27 = call ptr %24(i64 noundef %26, ptr noundef nonnull @.str.29) #16
  %28 = getelementptr inbounds %struct.ObjectInstanceRen, ptr %18, i64 0, i32 16
  store ptr %27, ptr %28, align 8, !tbaa !200
  %29 = getelementptr inbounds %struct.ObjectInstanceRen, ptr %13, i64 0, i32 11
  %30 = load i16, ptr %29, align 8, !tbaa !191
  %31 = and i16 %30, 3
  %32 = icmp eq i16 %31, 0
  br i1 %32, label %35, label %33

33:                                               ; preds = %23
  %34 = getelementptr inbounds %struct.ObjectInstanceRen, ptr %13, i64 0, i32 8
  call void @mul_m4_m4m4(ptr noundef nonnull %4, ptr noundef nonnull %9, ptr noundef nonnull %34) #16
  br label %36

35:                                               ; preds = %23
  call void @copy_m4_m4(ptr noundef nonnull %4, ptr noundef nonnull %9) #16
  br label %36

36:                                               ; preds = %35, %33
  %37 = load i32, ptr %19, align 8, !tbaa !177
  %38 = icmp sgt i32 %37, 0
  br i1 %38, label %39, label %124

39:                                               ; preds = %36
  %40 = getelementptr inbounds %struct.ObjectRen, ptr %16, i64 0, i32 18
  br label %41

41:                                               ; preds = %39, %117
  %42 = phi i32 [ 0, %39 ], [ %120, %117 ]
  %43 = phi ptr [ %27, %39 ], [ %121, %117 ]
  %44 = phi ptr [ %14, %39 ], [ %56, %117 ]
  %45 = and i32 %42, 255
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %53

47:                                               ; preds = %41
  %48 = load ptr, ptr %40, align 8, !tbaa !196
  %49 = lshr i32 %42, 8
  %50 = zext i32 %49 to i64
  %51 = getelementptr inbounds %struct.VertTableNode, ptr %48, i64 %50
  %52 = load ptr, ptr %51, align 8, !tbaa !197
  br label %55

53:                                               ; preds = %41
  %54 = getelementptr inbounds %struct.VertRen, ptr %44, i64 1
  br label %55

55:                                               ; preds = %53, %47
  %56 = phi ptr [ %52, %47 ], [ %54, %53 ]
  call void @projectvert(ptr noundef %56, ptr noundef nonnull %4, ptr noundef nonnull %3) #16
  %57 = load i32, ptr @speedvector_project.pano, align 4, !tbaa !47
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %102, label %59

59:                                               ; preds = %55
  %60 = load float, ptr %56, align 4, !tbaa !13
  %61 = getelementptr inbounds float, ptr %56, i64 1
  %62 = load float, ptr %61, align 4, !tbaa !13
  %63 = getelementptr inbounds float, ptr %56, i64 2
  %64 = load float, ptr %63, align 4, !tbaa !13
  %65 = fneg fast float %64
  %66 = fmul fast float %60, %60
  %67 = fmul fast float %64, %64
  %68 = fadd fast float %67, %66
  %69 = call fast float @llvm.sqrt.f32(float %68)
  %70 = fdiv fast float %65, %69
  %71 = fcmp fast ugt float %70, -1.000000e+00
  br i1 %71, label %72, label %76

72:                                               ; preds = %59
  %73 = fcmp fast ult float %70, 1.000000e+00
  br i1 %73, label %74, label %76

74:                                               ; preds = %72
  %75 = call fast nofpclass(nan inf) float @acosf(float noundef nofpclass(nan inf) %70) #17
  br label %76

76:                                               ; preds = %74, %72, %59
  %77 = phi float [ %75, %74 ], [ 0x400921FB60000000, %59 ], [ 0.000000e+00, %72 ]
  %78 = fcmp fast olt float %60, 0.000000e+00
  %79 = fneg fast float %77
  %80 = select i1 %78, float %79, float %77
  %81 = load float, ptr @speedvector_project.pixelphix, align 4, !tbaa !13
  %82 = fdiv fast float %80, %81
  %83 = load float, ptr @speedvector_project.zmulx, align 4, !tbaa !13
  %84 = fadd fast float %82, %83
  store float %84, ptr %43, align 4, !tbaa !13
  %85 = fmul fast float %62, %62
  %86 = fadd fast float %85, %66
  %87 = fadd fast float %86, %67
  %88 = call fast float @llvm.sqrt.f32(float %87)
  %89 = fdiv fast float %62, %88
  %90 = fcmp fast ugt float %89, -1.000000e+00
  br i1 %90, label %91, label %95

91:                                               ; preds = %76
  %92 = fcmp fast ult float %89, 1.000000e+00
  br i1 %92, label %93, label %95

93:                                               ; preds = %91
  %94 = call fast nofpclass(nan inf) float @acosf(float noundef nofpclass(nan inf) %89) #17
  br label %95

95:                                               ; preds = %93, %91, %76
  %96 = phi float [ %94, %93 ], [ 0x400921FB60000000, %76 ], [ 0.000000e+00, %91 ]
  %97 = fsub fast float 0x3FF921FB60000000, %96
  %98 = load float, ptr @speedvector_project.pixelphiy, align 4, !tbaa !13
  %99 = fdiv fast float %97, %98
  %100 = load float, ptr @speedvector_project.zmuly, align 4, !tbaa !13
  %101 = fadd fast float %99, %100
  br label %117

102:                                              ; preds = %55
  %103 = load float, ptr %10, align 4, !tbaa !13
  %104 = fcmp fast olt float %103, 0x3FB99999A0000000
  %105 = fdiv fast float 1.000000e+00, %103
  %106 = select i1 %104, float 1.000000e+01, float %105
  %107 = load float, ptr @speedvector_project.zmulx, align 4, !tbaa !13
  %108 = load float, ptr %3, align 16, !tbaa !13
  %109 = fmul fast float %108, %106
  %110 = fadd fast float %109, 1.000000e+00
  %111 = fmul fast float %110, %107
  store float %111, ptr %43, align 4, !tbaa !13
  %112 = load float, ptr @speedvector_project.zmuly, align 4, !tbaa !13
  %113 = load float, ptr %11, align 4, !tbaa !13
  %114 = fmul fast float %113, %106
  %115 = fadd fast float %114, 1.000000e+00
  %116 = fmul fast float %115, %112
  br label %117

117:                                              ; preds = %95, %102
  %118 = phi float [ %101, %95 ], [ %116, %102 ]
  %119 = getelementptr inbounds float, ptr %43, i64 1
  store float %118, ptr %119, align 4, !tbaa !13
  %120 = add nuw nsw i32 %42, 1
  %121 = getelementptr inbounds float, ptr %43, i64 2
  %122 = load i32, ptr %19, align 8, !tbaa !177
  %123 = icmp slt i32 %120, %122
  br i1 %123, label %41, label %124, !llvm.loop !231

124:                                              ; preds = %117, %36, %12
  %125 = phi ptr [ %14, %12 ], [ %14, %36 ], [ %56, %117 ]
  %126 = load ptr, ptr %13, align 8, !tbaa !16
  %127 = icmp eq ptr %126, null
  br i1 %127, label %128, label %12, !llvm.loop !232

128:                                              ; preds = %124, %2
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %4) #16
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %3) #16
  ret void
}

; Function Attrs: nofree nounwind
declare noundef i32 @printf(ptr nocapture noundef readonly, ...) local_unnamed_addr #8

declare ptr @modifiers_findByType(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @RE_Database_Baking(ptr noundef %0, ptr noundef %1, ptr noundef %2, i32 noundef %3, i32 noundef %4, ptr noundef %5) local_unnamed_addr #3 {
  %7 = alloca [4 x [4 x float]], align 16
  %8 = alloca [3 x float], align 8
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %7) #16
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %8) #16
  %9 = icmp eq i32 %4, 6
  switch i32 %4, label %10 [
    i32 6, label %11
    i32 2, label %11
    i32 1, label %11
    i32 0, label %11
    i32 14, label %11
  ]

10:                                               ; preds = %6
  br label %11

11:                                               ; preds = %6, %6, %6, %6, %6, %10
  %12 = phi i32 [ 0, %6 ], [ 1, %10 ], [ 0, %6 ], [ 0, %6 ], [ 0, %6 ], [ 0, %6 ]
  %13 = add i32 %4, -3
  %14 = icmp ult i32 %13, 12
  br i1 %14, label %15, label %19

15:                                               ; preds = %11
  %16 = sext i32 %13 to i64
  %17 = getelementptr inbounds [12 x i32], ptr @switch.table.RE_Database_Baking, i64 0, i64 %16
  %18 = load i32, ptr %17, align 4
  br label %19

19:                                               ; preds = %11, %15
  %20 = phi i32 [ %18, %15 ], [ 0, %11 ]
  %21 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 43
  store ptr %1, ptr %21, align 8, !tbaa !77
  %22 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 44
  store ptr %2, ptr %22, align 8, !tbaa !17
  %23 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 48
  store i32 %3, ptr %23, align 8, !tbaa !85
  %24 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 45
  %25 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 45, i32 60
  tail call void @BLI_freelistN(ptr noundef nonnull %25) #16
  %26 = getelementptr inbounds %struct.Scene, ptr %2, i64 0, i32 22
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(3984) %24, ptr noundef nonnull align 8 dereferenceable(3984) %26, i64 3984, i1 false), !tbaa.struct !233
  %27 = getelementptr inbounds %struct.Scene, ptr %2, i64 0, i32 22, i32 60
  tail call void @BLI_duplicatelist(ptr noundef nonnull %25, ptr noundef nonnull %27) #16
  tail call void @RE_init_threadcount(ptr noundef %0) #16
  %28 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 4
  %29 = load i16, ptr %28, align 8, !tbaa !234
  %30 = or i16 %29, 64
  store i16 %30, ptr %28, align 8, !tbaa !234
  %31 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 78
  store ptr %5, ptr %31, align 8, !tbaa !235
  %32 = icmp eq ptr %5, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %19
  %34 = or i16 %29, 96
  store i16 %34, ptr %28, align 8, !tbaa !234
  br label %35

35:                                               ; preds = %33, %19
  %36 = phi i16 [ %34, %33 ], [ %30, %19 ]
  switch i32 %4, label %44 [
    i32 3, label %37
    i32 14, label %41
  ]

37:                                               ; preds = %35
  %38 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 45, i32 76
  %39 = load i16, ptr %38, align 8, !tbaa !236
  %40 = icmp eq i16 %39, 3
  br i1 %40, label %41, label %44

41:                                               ; preds = %35, %37
  %42 = phi i16 [ 16, %37 ], [ 256, %35 ]
  %43 = or i16 %36, %42
  store i16 %43, ptr %28, align 8, !tbaa !234
  br label %44

44:                                               ; preds = %41, %37, %35
  br i1 %32, label %45, label %54

45:                                               ; preds = %44
  switch i32 %4, label %54 [
    i32 14, label %46
    i32 13, label %46
    i32 5, label %46
    i32 4, label %46
    i32 3, label %46
    i32 0, label %46
    i32 6, label %50
  ]

46:                                               ; preds = %45, %45, %45, %45, %45, %45
  %47 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 45, i32 47
  %48 = load i32, ptr %47, align 8, !tbaa !55
  %49 = and i32 %48, -65539
  store i32 %49, ptr %47, align 8, !tbaa !55
  br i1 %9, label %50, label %54

50:                                               ; preds = %45, %46
  %51 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 45, i32 47
  %52 = load i32, ptr %51, align 8, !tbaa !55
  %53 = or i32 %52, 2
  store i32 %53, ptr %51, align 8, !tbaa !55
  br label %54

54:                                               ; preds = %45, %44, %50, %46
  %55 = tail call ptr @BLI_memarena_new(i64 noundef 16376, ptr noundef nonnull @.str.7) #16
  %56 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 81
  store ptr %55, ptr %56, align 8, !tbaa !84
  %57 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 60
  %58 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 66
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(20) %57, i8 0, i64 20, i1 false)
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %58, i8 0, i64 32, i1 false)
  %59 = load i32, ptr %23, align 8, !tbaa !85
  %60 = icmp ult i32 %59, 16777216
  %61 = and i32 %3, -16777216
  %62 = select i1 %60, i32 %3, i32 %61
  %63 = tail call ptr @RE_GetCamera(ptr noundef nonnull %0) #16
  %64 = icmp eq ptr %63, null
  br i1 %64, label %68, label %65

65:                                               ; preds = %54
  %66 = getelementptr inbounds %struct.Object, ptr %63, i64 0, i32 47
  call void @normalize_m4_m4(ptr noundef nonnull %7, ptr noundef nonnull %66) #16
  %67 = call zeroext i8 @invert_m4(ptr noundef nonnull %7) #16
  br label %69

68:                                               ; preds = %54
  call void @unit_m4(ptr noundef nonnull %7) #16
  br label %69

69:                                               ; preds = %68, %65
  call void @RE_SetView(ptr noundef nonnull %0, ptr noundef nonnull %7) #16
  %70 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 31
  %71 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 33
  call void @copy_m3_m4(ptr noundef nonnull %70, ptr noundef nonnull %71) #16
  %72 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 35
  call void @unit_m4(ptr noundef nonnull %72) #16
  %73 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 14
  store i32 256, ptr %73, align 8, !tbaa !202
  %74 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 13
  store i32 256, ptr %74, align 4, !tbaa !201
  call void @init_render_world(ptr noundef nonnull %0)
  %75 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 45, i32 47
  %76 = load i32, ptr %75, align 8, !tbaa !55
  %77 = and i32 %76, 65536
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %90, label %79

79:                                               ; preds = %69
  call void @init_render_qmcsampler(ptr noundef nonnull %0) #16
  %80 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 46
  %81 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 46, i32 23
  %82 = load i16, ptr %81, align 2, !tbaa !57
  %83 = and i16 %82, 208
  %84 = icmp eq i16 %83, 0
  br i1 %84, label %90, label %85

85:                                               ; preds = %79
  %86 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 46, i32 63
  %87 = load i16, ptr %86, align 8, !tbaa !92
  %88 = icmp eq i16 %87, 0
  br i1 %88, label %89, label %90

89:                                               ; preds = %85
  call void @init_ao_sphere(ptr noundef nonnull %80) #16
  br label %90

90:                                               ; preds = %79, %89, %85, %69
  call void @init_render_textures(ptr noundef nonnull %0) #16
  %91 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 46, i32 12
  %92 = load <2 x float>, ptr %91, align 4, !tbaa !13
  store <2 x float> %92, ptr %8, align 8, !tbaa !13
  %93 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 46, i32 14
  %94 = load float, ptr %93, align 4, !tbaa !13
  %95 = getelementptr inbounds float, ptr %8, i64 2
  store float %94, ptr %95, align 8, !tbaa !13
  %96 = load ptr, ptr %21, align 8, !tbaa !77
  %97 = load i32, ptr %75, align 8, !tbaa !55
  call void @init_render_materials(ptr noundef %96, i32 noundef %97, ptr noundef nonnull %8) #16
  call void @set_node_shader_lamp_loop(ptr noundef nonnull @shade_material_loop) #16
  call fastcc void @database_init_objects(ptr noundef nonnull %0, i32 noundef %62, i32 noundef %20, i32 noundef %12, ptr noundef %5, i32 noundef 0)
  %98 = load ptr, ptr %22, align 8, !tbaa !17
  %99 = getelementptr inbounds %struct.Scene, ptr %98, i64 0, i32 22, i32 46
  %100 = load i32, ptr %99, align 4, !tbaa !83
  %101 = and i32 %100, 524296
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %136

103:                                              ; preds = %90
  %104 = load ptr, ptr %21, align 8, !tbaa !77
  %105 = getelementptr inbounds %struct.Main, ptr %104, i64 0, i32 32
  %106 = load ptr, ptr %105, align 8, !tbaa !16
  %107 = icmp eq ptr %106, null
  br i1 %107, label %115, label %108

108:                                              ; preds = %103, %108
  %109 = phi ptr [ %113, %108 ], [ %106, %103 ]
  %110 = getelementptr inbounds %struct.ID, ptr %109, i64 0, i32 5
  %111 = load i16, ptr %110, align 2, !tbaa !95
  %112 = or i16 %111, 1024
  store i16 %112, ptr %110, align 2, !tbaa !95
  %113 = load ptr, ptr %109, align 8, !tbaa !16
  %114 = icmp eq ptr %113, null
  br i1 %114, label %115, label %108, !llvm.loop !97

115:                                              ; preds = %108, %103
  %116 = getelementptr inbounds %struct.Main, ptr %104, i64 0, i32 17
  %117 = load ptr, ptr %116, align 8, !tbaa !16
  %118 = icmp eq ptr %117, null
  br i1 %118, label %136, label %119

119:                                              ; preds = %115, %133
  %120 = phi ptr [ %134, %133 ], [ %117, %115 ]
  %121 = getelementptr inbounds %struct.Material, ptr %120, i64 0, i32 105
  %122 = load ptr, ptr %121, align 8, !tbaa !98
  %123 = icmp eq ptr %122, null
  br i1 %123, label %133, label %124

124:                                              ; preds = %119
  %125 = getelementptr inbounds %struct.ID, ptr %122, i64 0, i32 5
  %126 = load i16, ptr %125, align 2, !tbaa !95
  %127 = and i16 %126, 1024
  %128 = icmp eq i16 %127, 0
  br i1 %128, label %133, label %129

129:                                              ; preds = %124
  %130 = getelementptr inbounds %struct.Material, ptr %120, i64 0, i32 51
  %131 = load i32, ptr %130, align 4, !tbaa !102
  %132 = and i32 %131, 268435456
  call fastcc void @add_lightgroup(ptr noundef %0, ptr noundef nonnull %122, i32 noundef %132)
  br label %133

133:                                              ; preds = %129, %124, %119
  %134 = load ptr, ptr %120, align 8, !tbaa !16
  %135 = icmp eq ptr %134, null
  br i1 %135, label %136, label %119, !llvm.loop !103

136:                                              ; preds = %133, %90, %115
  %137 = icmp eq i32 %4, 0
  br i1 %137, label %143, label %138

138:                                              ; preds = %136
  %139 = load i32, ptr %75, align 8, !tbaa !55
  %140 = and i32 %139, 2
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %143, label %142

142:                                              ; preds = %138
  call void @threaded_makeshadowbufs(ptr noundef nonnull %0) #16
  br label %143

143:                                              ; preds = %138, %142, %136
  %144 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 96
  %145 = load ptr, ptr %144, align 8, !tbaa !93
  %146 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 97
  %147 = load ptr, ptr %146, align 8, !tbaa !94
  %148 = call i32 %145(ptr noundef %147) #16
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %150, label %155

150:                                              ; preds = %143
  %151 = load i32, ptr %75, align 8, !tbaa !55
  %152 = and i32 %151, 65536
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %155, label %154

154:                                              ; preds = %150
  call void @makeraytree(ptr noundef nonnull %0) #16
  br label %155

155:                                              ; preds = %150, %154, %143
  %156 = load ptr, ptr %144, align 8, !tbaa !93
  %157 = load ptr, ptr %146, align 8, !tbaa !94
  %158 = call i32 %156(ptr noundef %157) #16
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %160, label %161

160:                                              ; preds = %155
  call void @make_pointdensities(ptr noundef nonnull %0) #16
  br label %161

161:                                              ; preds = %160, %155
  %162 = load ptr, ptr %144, align 8, !tbaa !93
  %163 = load ptr, ptr %146, align 8, !tbaa !94
  %164 = call i32 %162(ptr noundef %163) #16
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %166, label %167

166:                                              ; preds = %161
  call void @make_voxeldata(ptr noundef nonnull %0) #16
  br label %167

167:                                              ; preds = %166, %161
  %168 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 46, i32 23
  %169 = load i16, ptr %168, align 2, !tbaa !57
  %170 = and i16 %169, 208
  %171 = icmp eq i16 %170, 0
  br i1 %171, label %186, label %172

172:                                              ; preds = %167
  %173 = load ptr, ptr %144, align 8, !tbaa !93
  %174 = load ptr, ptr %146, align 8, !tbaa !94
  %175 = call i32 %173(ptr noundef %174) #16
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %177, label %186

177:                                              ; preds = %172
  %178 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 46, i32 64
  %179 = load i16, ptr %178, align 2, !tbaa !56
  %180 = icmp eq i16 %179, 1
  br i1 %180, label %181, label %186

181:                                              ; preds = %177
  %182 = load i32, ptr %75, align 8, !tbaa !55
  %183 = and i32 %182, 2
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %186, label %185

185:                                              ; preds = %181
  call void @make_occ_tree(ptr noundef nonnull %0) #16
  br label %186

186:                                              ; preds = %177, %185, %181, %172, %167
  %187 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 98, i32 11
  store i16 1, ptr %187, align 4, !tbaa !67
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %8) #16
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %7) #16
  ret void
}

declare void @BLI_duplicatelist(ptr noundef, ptr noundef) local_unnamed_addr #5

declare void @RE_init_threadcount(ptr noundef) local_unnamed_addr #5

declare void @unit_m4(ptr noundef) local_unnamed_addr #5

declare void @BLI_ghash_free(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @set_dupli_tex_mat(ptr noundef %0, ptr nocapture noundef %1, ptr noundef %2, ptr noundef %3) unnamed_addr #3 {
  %5 = alloca [4 x [4 x float]], align 16
  %6 = icmp eq ptr %0, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %4
  store ptr null, ptr @set_dupli_tex_mat.lastob, align 8, !tbaa !16
  store i1 false, ptr @set_dupli_tex_mat.needtexmat, align 4
  br label %98

8:                                                ; preds = %4
  %9 = load ptr, ptr @set_dupli_tex_mat.lastob, align 8, !tbaa !16
  %10 = getelementptr inbounds %struct.DupliObject, ptr %2, i64 0, i32 2
  %11 = load ptr, ptr %10, align 8, !tbaa !136
  %12 = icmp eq ptr %9, %11
  br i1 %12, label %70, label %13

13:                                               ; preds = %8
  store ptr %11, ptr @set_dupli_tex_mat.lastob, align 8, !tbaa !16
  store i1 false, ptr @set_dupli_tex_mat.needtexmat, align 4
  %14 = tail call ptr @give_totcolp(ptr noundef %11) #16
  %15 = load ptr, ptr %10, align 8, !tbaa !136
  %16 = tail call ptr @give_matarar(ptr noundef %15) #16
  %17 = icmp ne ptr %14, null
  %18 = icmp ne ptr %16, null
  %19 = select i1 %17, i1 %18, i1 false
  br i1 %19, label %20, label %70

20:                                               ; preds = %13
  %21 = load i16, ptr %14, align 2, !tbaa !46
  %22 = icmp sgt i16 %21, 0
  br i1 %22, label %23, label %70

23:                                               ; preds = %20
  %24 = load ptr, ptr %16, align 8, !tbaa !16
  %25 = zext i16 %21 to i64
  %26 = and i64 %25, 1
  %27 = icmp eq i16 %21, 1
  br i1 %27, label %57, label %28

28:                                               ; preds = %23
  %29 = and i64 %25, 65534
  br label %30

30:                                               ; preds = %53, %28
  %31 = phi i64 [ 0, %28 ], [ %54, %53 ]
  %32 = phi i64 [ 0, %28 ], [ %55, %53 ]
  %33 = getelementptr inbounds ptr, ptr %24, i64 %31
  %34 = load ptr, ptr %33, align 8, !tbaa !16
  %35 = icmp eq ptr %34, null
  br i1 %35, label %42, label %36

36:                                               ; preds = %30
  %37 = getelementptr inbounds %struct.Material, ptr %34, i64 0, i32 90
  %38 = load i16, ptr %37, align 4, !tbaa !237
  %39 = and i16 %38, 32
  %40 = icmp eq i16 %39, 0
  br i1 %40, label %42, label %41

41:                                               ; preds = %36
  store i1 true, ptr @set_dupli_tex_mat.needtexmat, align 4
  br label %42

42:                                               ; preds = %30, %36, %41
  %43 = or i64 %31, 1
  %44 = getelementptr inbounds ptr, ptr %24, i64 %43
  %45 = load ptr, ptr %44, align 8, !tbaa !16
  %46 = icmp eq ptr %45, null
  br i1 %46, label %53, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %struct.Material, ptr %45, i64 0, i32 90
  %49 = load i16, ptr %48, align 4, !tbaa !237
  %50 = and i16 %49, 32
  %51 = icmp eq i16 %50, 0
  br i1 %51, label %53, label %52

52:                                               ; preds = %47
  store i1 true, ptr @set_dupli_tex_mat.needtexmat, align 4
  br label %53

53:                                               ; preds = %52, %47, %42
  %54 = add nuw nsw i64 %31, 2
  %55 = add i64 %32, 2
  %56 = icmp eq i64 %55, %29
  br i1 %56, label %57, label %30, !llvm.loop !238

57:                                               ; preds = %53, %23
  %58 = phi i64 [ 0, %23 ], [ %54, %53 ]
  %59 = icmp eq i64 %26, 0
  br i1 %59, label %70, label %60

60:                                               ; preds = %57
  %61 = getelementptr inbounds ptr, ptr %24, i64 %58
  %62 = load ptr, ptr %61, align 8, !tbaa !16
  %63 = icmp eq ptr %62, null
  br i1 %63, label %70, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds %struct.Material, ptr %62, i64 0, i32 90
  %66 = load i16, ptr %65, align 4, !tbaa !237
  %67 = and i16 %66, 32
  %68 = icmp eq i16 %67, 0
  br i1 %68, label %70, label %69

69:                                               ; preds = %64
  store i1 true, ptr @set_dupli_tex_mat.needtexmat, align 4
  br label %70

70:                                               ; preds = %57, %69, %64, %60, %20, %13, %8
  %71 = load i1, ptr @set_dupli_tex_mat.needtexmat, align 4
  br i1 %71, label %72, label %82

72:                                               ; preds = %70
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %5) #16
  %73 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 81
  %74 = load ptr, ptr %73, align 8, !tbaa !84
  %75 = tail call ptr @BLI_memarena_alloc(ptr noundef %74, i64 noundef 64) #16
  %76 = getelementptr inbounds %struct.ObjectInstanceRen, ptr %1, i64 0, i32 14
  store ptr %75, ptr %76, align 8, !tbaa !239
  %77 = getelementptr inbounds %struct.DupliObject, ptr %2, i64 0, i32 3
  %78 = call zeroext i8 @invert_m4_m4(ptr noundef nonnull %5, ptr noundef nonnull %77) #16
  %79 = load ptr, ptr %76, align 8, !tbaa !239
  %80 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 32
  %81 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 33
  call void @_va_mul_m4_series_5(ptr noundef %79, ptr noundef nonnull %80, ptr noundef %3, ptr noundef nonnull %5, ptr noundef nonnull %81) #16
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %5) #16
  br label %82

82:                                               ; preds = %72, %70
  %83 = getelementptr inbounds %struct.ObjectInstanceRen, ptr %1, i64 0, i32 12
  %84 = getelementptr inbounds %struct.DupliObject, ptr %2, i64 0, i32 4
  %85 = load float, ptr %84, align 4, !tbaa !13
  store float %85, ptr %83, align 4, !tbaa !13
  %86 = getelementptr inbounds %struct.DupliObject, ptr %2, i64 0, i32 4, i64 1
  %87 = load float, ptr %86, align 4, !tbaa !13
  %88 = getelementptr inbounds %struct.ObjectInstanceRen, ptr %1, i64 0, i32 12, i64 1
  store float %87, ptr %88, align 4, !tbaa !13
  %89 = getelementptr inbounds %struct.DupliObject, ptr %2, i64 0, i32 4, i64 2
  %90 = load float, ptr %89, align 4, !tbaa !13
  %91 = getelementptr inbounds %struct.ObjectInstanceRen, ptr %1, i64 0, i32 12, i64 2
  store float %90, ptr %91, align 4, !tbaa !13
  %92 = getelementptr inbounds %struct.ObjectInstanceRen, ptr %1, i64 0, i32 13
  %93 = getelementptr inbounds %struct.DupliObject, ptr %2, i64 0, i32 5
  %94 = load float, ptr %93, align 4, !tbaa !13
  store float %94, ptr %92, align 4, !tbaa !13
  %95 = getelementptr inbounds %struct.DupliObject, ptr %2, i64 0, i32 5, i64 1
  %96 = load float, ptr %95, align 4, !tbaa !13
  %97 = getelementptr inbounds %struct.ObjectInstanceRen, ptr %1, i64 0, i32 13, i64 1
  store float %96, ptr %97, align 4, !tbaa !13
  br label %98

98:                                               ; preds = %82, %7
  ret void
}

declare ptr @_setlooper_base_step(ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @init_render_object(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4, i32 noundef %5) unnamed_addr #3 {
  %7 = alloca [4 x [4 x float]], align 16
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %7) #16
  %8 = getelementptr inbounds %struct.Object, ptr %1, i64 0, i32 3
  %9 = load i16, ptr %8, align 8, !tbaa !115
  %10 = icmp eq i16 %9, 10
  br i1 %10, label %11, label %13

11:                                               ; preds = %6
  %12 = tail call fastcc ptr @add_render_lamp(ptr noundef %0, ptr noundef nonnull %1)
  br label %163

13:                                               ; preds = %6
  %14 = add i16 %9, -6
  %15 = icmp ult i16 %14, -5
  br i1 %15, label %158, label %16

16:                                               ; preds = %13
  %17 = icmp eq ptr %3, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %16
  %19 = getelementptr inbounds %struct.DupliObject, ptr %3, i64 0, i32 9
  %20 = load i32, ptr %19, align 8, !tbaa !47
  br label %21

21:                                               ; preds = %18, %16
  %22 = phi i32 [ %20, %18 ], [ 0, %16 ]
  %23 = getelementptr inbounds %struct.Object, ptr %1, i64 0, i32 109
  %24 = load ptr, ptr %23, align 8, !tbaa !132
  %25 = icmp eq ptr %24, null
  br i1 %25, label %52, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 45, i32 46
  %28 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 32
  %29 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 35
  %30 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 13
  %31 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 14
  br label %32

32:                                               ; preds = %47, %26
  %33 = phi i32 [ 0, %26 ], [ %40, %47 ]
  %34 = phi ptr [ %24, %26 ], [ %48, %47 ]
  %35 = getelementptr inbounds %struct.ParticleSystem, ptr %34, i64 0, i32 2
  %36 = load ptr, ptr %35, align 8, !tbaa !141
  %37 = getelementptr inbounds %struct.ParticleSettings, ptr %36, i64 0, i32 15
  %38 = load i32, ptr %37, align 8, !tbaa !240
  %39 = and i32 %38, 8
  %40 = add nuw nsw i32 %39, %33
  %41 = load i32, ptr %27, align 4, !tbaa !70
  %42 = and i32 %41, 524288
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %47

44:                                               ; preds = %32
  %45 = load i32, ptr %30, align 4, !tbaa !201
  %46 = load i32, ptr %31, align 8, !tbaa !202
  tail call void @psys_render_set(ptr noundef %1, ptr noundef nonnull %34, ptr noundef nonnull %28, ptr noundef nonnull %29, i32 noundef %45, i32 noundef %46, i32 noundef %5) #16
  br label %47

47:                                               ; preds = %44, %32
  %48 = load ptr, ptr %34, align 8, !tbaa !241
  %49 = icmp eq ptr %48, null
  br i1 %49, label %50, label %32, !llvm.loop !242

50:                                               ; preds = %47
  %51 = icmp eq i32 %40, 0
  br i1 %51, label %103, label %52

52:                                               ; preds = %50, %21
  %53 = getelementptr inbounds %struct.Object, ptr %1, i64 0, i32 52
  %54 = load i32, ptr %53, align 8, !tbaa !114
  %55 = tail call ptr @RE_addRenderObject(ptr noundef %0, ptr noundef %1, ptr noundef %2, i32 noundef %22, i32 noundef 0, i32 noundef %54) #16
  br i1 %17, label %60, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %struct.DupliObject, ptr %3, i64 0, i32 8
  %58 = load i8, ptr %57, align 1, !tbaa !147
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %65, label %60

60:                                               ; preds = %56, %52
  %61 = getelementptr inbounds %struct.Object, ptr %1, i64 0, i32 55
  %62 = load i16, ptr %61, align 8, !tbaa !125
  %63 = and i16 %62, 4096
  %64 = icmp eq i16 %63, 0
  br i1 %64, label %71, label %65

65:                                               ; preds = %60, %56
  %66 = getelementptr inbounds %struct.ObjectRen, ptr %55, i64 0, i32 7
  %67 = load i32, ptr %66, align 8, !tbaa !151
  %68 = or i32 %67, 1
  store i32 %68, ptr %66, align 8, !tbaa !151
  %69 = getelementptr inbounds %struct.ObjectRen, ptr %55, i64 0, i32 28
  %70 = getelementptr inbounds %struct.Object, ptr %1, i64 0, i32 47
  tail call void @copy_m4_m4(ptr noundef nonnull %69, ptr noundef nonnull %70) #16
  br label %71

71:                                               ; preds = %65, %60
  tail call fastcc void @init_render_object_data(ptr noundef %0, ptr noundef %55, i32 noundef %5)
  %72 = getelementptr inbounds %struct.Object, ptr %1, i64 0, i32 55
  %73 = load i16, ptr %72, align 8, !tbaa !125
  %74 = and i16 %73, 4096
  %75 = icmp eq i16 %74, 0
  br i1 %75, label %76, label %80

76:                                               ; preds = %71
  %77 = load i32, ptr %53, align 8, !tbaa !114
  %78 = tail call ptr @RE_addRenderInstance(ptr noundef %0, ptr noundef %55, ptr noundef nonnull %1, ptr noundef %2, i32 noundef %22, i32 noundef 0, ptr noundef null, i32 noundef %77) #16
  br i1 %17, label %81, label %79

79:                                               ; preds = %76
  tail call fastcc void @set_dupli_tex_mat(ptr noundef %0, ptr noundef %78, ptr noundef nonnull %3, ptr noundef %4)
  br label %81

80:                                               ; preds = %71
  tail call fastcc void @find_dupli_instances(ptr noundef %0, ptr noundef %55, ptr noundef %3)
  br label %81

81:                                               ; preds = %80, %79, %76
  %82 = getelementptr inbounds %struct.Object, ptr %1, i64 0, i32 31
  %83 = load i32, ptr %82, align 8, !tbaa !243
  %84 = icmp slt i32 %83, 1
  br i1 %84, label %103, label %85

85:                                               ; preds = %81
  %86 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 80
  br label %87

87:                                               ; preds = %99, %85
  %88 = phi i32 [ 1, %85 ], [ %100, %99 ]
  %89 = trunc i32 %88 to i16
  %90 = tail call fastcc ptr @give_render_material(ptr noundef %0, ptr noundef nonnull %1, i16 noundef signext %89)
  %91 = getelementptr inbounds %struct.Material, ptr %90, i64 0, i32 2
  %92 = load i16, ptr %91, align 8, !tbaa !139
  %93 = icmp eq i16 %92, 2
  br i1 %93, label %94, label %99

94:                                               ; preds = %87
  %95 = load ptr, ptr @MEM_mallocN, align 8, !tbaa !16
  %96 = tail call ptr %95(i64 noundef 32, ptr noundef nonnull @.str.24) #16
  %97 = getelementptr inbounds %struct.VolumeOb, ptr %96, i64 0, i32 2
  store ptr %90, ptr %97, align 8, !tbaa !169
  %98 = getelementptr inbounds %struct.VolumeOb, ptr %96, i64 0, i32 3
  store ptr %55, ptr %98, align 8, !tbaa !167
  tail call void @BLI_addtail(ptr noundef nonnull %86, ptr noundef %96) #16
  br label %99

99:                                               ; preds = %94, %87
  %100 = add nuw nsw i32 %88, 1
  %101 = load i32, ptr %82, align 8, !tbaa !243
  %102 = icmp slt i32 %88, %101
  br i1 %102, label %87, label %103, !llvm.loop !244

103:                                              ; preds = %99, %81, %50
  %104 = load ptr, ptr %23, align 8, !tbaa !132
  %105 = icmp eq ptr %104, null
  br i1 %105, label %163, label %106

106:                                              ; preds = %103
  %107 = getelementptr inbounds %struct.Object, ptr %1, i64 0, i32 52
  %108 = getelementptr inbounds %struct.DupliObject, ptr %3, i64 0, i32 8
  %109 = getelementptr inbounds %struct.Object, ptr %1, i64 0, i32 55
  %110 = getelementptr inbounds %struct.Object, ptr %1, i64 0, i32 47
  %111 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 45, i32 46
  br label %112

112:                                              ; preds = %154, %106
  %113 = phi i32 [ 1, %106 ], [ %156, %154 ]
  %114 = phi ptr [ %104, %106 ], [ %155, %154 ]
  %115 = tail call i32 @psys_check_enabled(ptr noundef %1, ptr noundef nonnull %114) #16
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %154, label %117

117:                                              ; preds = %112
  %118 = load i32, ptr %107, align 8, !tbaa !114
  %119 = tail call ptr @RE_addRenderObject(ptr noundef %0, ptr noundef %1, ptr noundef %2, i32 noundef %22, i32 noundef %113, i32 noundef %118) #16
  br i1 %17, label %123, label %120

120:                                              ; preds = %117
  %121 = load i8, ptr %108, align 1, !tbaa !147
  %122 = icmp eq i8 %121, 0
  br i1 %122, label %127, label %123

123:                                              ; preds = %120, %117
  %124 = load i16, ptr %109, align 8, !tbaa !125
  %125 = and i16 %124, 4096
  %126 = icmp eq i16 %125, 0
  br i1 %126, label %132, label %127

127:                                              ; preds = %123, %120
  %128 = getelementptr inbounds %struct.ObjectRen, ptr %119, i64 0, i32 7
  %129 = load i32, ptr %128, align 8, !tbaa !151
  %130 = or i32 %129, 1
  store i32 %130, ptr %128, align 8, !tbaa !151
  %131 = getelementptr inbounds %struct.ObjectRen, ptr %119, i64 0, i32 28
  tail call void @copy_m4_m4(ptr noundef nonnull %131, ptr noundef nonnull %110) #16
  br label %132

132:                                              ; preds = %127, %123
  br i1 %17, label %137, label %133

133:                                              ; preds = %132
  %134 = getelementptr inbounds %struct.ParticleSystem, ptr %114, i64 0, i32 25
  %135 = load i32, ptr %134, align 4, !tbaa !245
  %136 = or i32 %135, 128
  store i32 %136, ptr %134, align 4, !tbaa !245
  br label %137

137:                                              ; preds = %133, %132
  tail call fastcc void @init_render_object_data(ptr noundef %0, ptr noundef %119, i32 noundef %5)
  %138 = load i32, ptr %111, align 4, !tbaa !70
  %139 = and i32 %138, 524288
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %141, label %142

141:                                              ; preds = %137
  tail call void @psys_render_restore(ptr noundef nonnull %1, ptr noundef nonnull %114) #16
  br label %142

142:                                              ; preds = %141, %137
  %143 = getelementptr inbounds %struct.ParticleSystem, ptr %114, i64 0, i32 25
  %144 = load i32, ptr %143, align 4, !tbaa !245
  %145 = and i32 %144, -129
  store i32 %145, ptr %143, align 4, !tbaa !245
  %146 = load i16, ptr %109, align 8, !tbaa !125
  %147 = and i16 %146, 4096
  %148 = icmp eq i16 %147, 0
  br i1 %148, label %149, label %153

149:                                              ; preds = %142
  %150 = load i32, ptr %107, align 8, !tbaa !114
  %151 = tail call ptr @RE_addRenderInstance(ptr noundef nonnull %0, ptr noundef %119, ptr noundef nonnull %1, ptr noundef %2, i32 noundef %22, i32 noundef %113, ptr noundef null, i32 noundef %150) #16
  br i1 %17, label %154, label %152

152:                                              ; preds = %149
  tail call fastcc void @set_dupli_tex_mat(ptr noundef nonnull %0, ptr noundef %151, ptr noundef nonnull %3, ptr noundef %4)
  br label %154

153:                                              ; preds = %142
  tail call fastcc void @find_dupli_instances(ptr noundef nonnull %0, ptr noundef %119, ptr noundef %3)
  br label %154

154:                                              ; preds = %153, %152, %149, %112
  %155 = load ptr, ptr %114, align 8, !tbaa !241
  %156 = add nuw nsw i32 %113, 1
  %157 = icmp eq ptr %155, null
  br i1 %157, label %163, label %112, !llvm.loop !246

158:                                              ; preds = %13
  %159 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 32
  %160 = getelementptr inbounds %struct.Object, ptr %1, i64 0, i32 47
  call void @mul_m4_m4m4(ptr noundef nonnull %7, ptr noundef nonnull %159, ptr noundef nonnull %160) #16
  %161 = getelementptr inbounds %struct.Object, ptr %1, i64 0, i32 50
  %162 = call zeroext i8 @invert_m4_m4(ptr noundef nonnull %161, ptr noundef nonnull %7) #16
  br label %163

163:                                              ; preds = %154, %103, %158, %11
  %164 = call fast nofpclass(nan inf) double @PIL_check_seconds_timer() #16
  %165 = load double, ptr @init_render_object.lasttime, align 8, !tbaa !247
  %166 = fsub fast double %164, %165
  %167 = fcmp fast ogt double %166, 1.000000e+00
  br i1 %167, label %168, label %181

168:                                              ; preds = %163
  store double %164, ptr @init_render_object.lasttime, align 8, !tbaa !247
  %169 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 98
  %170 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 60
  %171 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 98, i32 1
  %172 = load <4 x i32>, ptr %170, align 8, !tbaa !47
  %173 = shufflevector <4 x i32> %172, <4 x i32> poison, <4 x i32> <i32 0, i32 1, i32 3, i32 2>
  store <4 x i32> %173, ptr %171, align 4, !tbaa !47
  %174 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 64
  %175 = load i32, ptr %174, align 8, !tbaa !120
  %176 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 98, i32 5
  store i32 %175, ptr %176, align 4, !tbaa !121
  %177 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 90
  %178 = load ptr, ptr %177, align 8, !tbaa !122
  %179 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 91
  %180 = load ptr, ptr %179, align 8, !tbaa !123
  call void %178(ptr noundef %180, ptr noundef nonnull %169) #16
  br label %181

181:                                              ; preds = %168, %163
  %182 = getelementptr inbounds %struct.Object, ptr %1, i64 0, i32 53
  %183 = load i16, ptr %182, align 4, !tbaa !124
  %184 = or i16 %183, 1024
  store i16 %184, ptr %182, align 4, !tbaa !124
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %7) #16
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @dupli_render_particle_set(ptr noundef %0, ptr noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4) unnamed_addr #3 {
  %6 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 45, i32 46
  %7 = load i32, ptr %6, align 4, !tbaa !70
  %8 = and i32 %7, 524288
  %9 = icmp ne i32 %8, 0
  %10 = icmp sgt i32 %3, 7
  %11 = or i1 %10, %9
  br i1 %11, label %89, label %12

12:                                               ; preds = %5
  %13 = getelementptr inbounds %struct.Object, ptr %1, i64 0, i32 55
  %14 = load i16, ptr %13, align 8, !tbaa !125
  %15 = and i16 %14, 2048
  %16 = icmp eq i16 %15, 0
  br i1 %16, label %73, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.Object, ptr %1, i64 0, i32 109
  %19 = load ptr, ptr %18, align 8, !tbaa !16
  %20 = icmp eq ptr %19, null
  br i1 %20, label %53, label %21

21:                                               ; preds = %17
  %22 = icmp eq i32 %4, 0
  %23 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 32
  %24 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 35
  %25 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 13
  %26 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 14
  br i1 %22, label %27, label %39

27:                                               ; preds = %21, %36
  %28 = phi ptr [ %37, %36 ], [ %19, %21 ]
  %29 = getelementptr inbounds %struct.ParticleSystem, ptr %28, i64 0, i32 2
  %30 = load ptr, ptr %29, align 8, !tbaa !141
  %31 = getelementptr inbounds %struct.ParticleSettings, ptr %30, i64 0, i32 21
  %32 = load i16, ptr %31, align 8, !tbaa !143
  %33 = add i16 %32, -7
  %34 = icmp ult i16 %33, 2
  br i1 %34, label %35, label %36

35:                                               ; preds = %27
  tail call void @psys_render_restore(ptr noundef %1, ptr noundef nonnull %28) #16
  br label %36

36:                                               ; preds = %35, %27
  %37 = load ptr, ptr %28, align 8, !tbaa !16
  %38 = icmp eq ptr %37, null
  br i1 %38, label %53, label %27, !llvm.loop !248

39:                                               ; preds = %21, %50
  %40 = phi ptr [ %51, %50 ], [ %19, %21 ]
  %41 = getelementptr inbounds %struct.ParticleSystem, ptr %40, i64 0, i32 2
  %42 = load ptr, ptr %41, align 8, !tbaa !141
  %43 = getelementptr inbounds %struct.ParticleSettings, ptr %42, i64 0, i32 21
  %44 = load i16, ptr %43, align 8, !tbaa !143
  %45 = add i16 %44, -7
  %46 = icmp ult i16 %45, 2
  br i1 %46, label %47, label %50

47:                                               ; preds = %39
  %48 = load i32, ptr %25, align 4, !tbaa !201
  %49 = load i32, ptr %26, align 8, !tbaa !202
  tail call void @psys_render_set(ptr noundef %1, ptr noundef nonnull %40, ptr noundef nonnull %23, ptr noundef nonnull %24, i32 noundef %48, i32 noundef %49, i32 noundef %2) #16
  br label %50

50:                                               ; preds = %39, %47
  %51 = load ptr, ptr %40, align 8, !tbaa !16
  %52 = icmp eq ptr %51, null
  br i1 %52, label %53, label %39, !llvm.loop !248

53:                                               ; preds = %50, %36, %17
  %54 = icmp eq i32 %4, 0
  br i1 %54, label %73, label %55

55:                                               ; preds = %53
  %56 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 44
  %57 = load ptr, ptr %56, align 8, !tbaa !17
  %58 = load i64, ptr @CD_MASK_BAREMESH, align 8, !tbaa !249
  %59 = or i64 %58, 96
  %60 = tail call ptr @mesh_create_derived_render(ptr noundef %57, ptr noundef %1, i64 noundef %59) #16
  %61 = getelementptr inbounds %struct.DerivedMesh, ptr %60, i64 0, i32 95
  %62 = load ptr, ptr %61, align 8, !tbaa !250
  tail call void %62(ptr noundef %60) #16
  %63 = load ptr, ptr %18, align 8, !tbaa !16
  %64 = icmp eq ptr %63, null
  br i1 %64, label %73, label %65

65:                                               ; preds = %55, %65
  %66 = phi ptr [ %71, %65 ], [ %63, %55 ]
  %67 = tail call ptr @psys_get_modifier(ptr noundef %1, ptr noundef nonnull %66) #16
  %68 = getelementptr inbounds %struct.ParticleSystemModifierData, ptr %67, i64 0, i32 6
  %69 = load i16, ptr %68, align 4, !tbaa !253
  %70 = and i16 %69, -3
  store i16 %70, ptr %68, align 4, !tbaa !253
  %71 = load ptr, ptr %66, align 8, !tbaa !16
  %72 = icmp eq ptr %71, null
  br i1 %72, label %73, label %65, !llvm.loop !255

73:                                               ; preds = %65, %55, %53, %12
  %74 = getelementptr inbounds %struct.Object, ptr %1, i64 0, i32 112
  %75 = load ptr, ptr %74, align 8, !tbaa !256
  %76 = icmp eq ptr %75, null
  br i1 %76, label %89, label %77

77:                                               ; preds = %73
  %78 = getelementptr inbounds %struct.Group, ptr %75, i64 0, i32 1
  %79 = load ptr, ptr %78, align 8, !tbaa !16
  %80 = icmp eq ptr %79, null
  br i1 %80, label %89, label %81

81:                                               ; preds = %77
  %82 = add nuw nsw i32 %3, 1
  br label %83

83:                                               ; preds = %81, %83
  %84 = phi ptr [ %79, %81 ], [ %87, %83 ]
  %85 = getelementptr inbounds %struct.GroupObject, ptr %84, i64 0, i32 2
  %86 = load ptr, ptr %85, align 8, !tbaa !109
  tail call fastcc void @dupli_render_particle_set(ptr noundef %0, ptr noundef %86, i32 noundef %2, i32 noundef %82, i32 noundef %4)
  %87 = load ptr, ptr %84, align 8, !tbaa !16
  %88 = icmp eq ptr %87, null
  br i1 %88, label %89, label %83, !llvm.loop !257

89:                                               ; preds = %83, %77, %73, %5
  ret void
}

declare ptr @object_duplilist(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

declare ptr @duplilist_apply(ptr noundef, ptr noundef) local_unnamed_addr #5

declare ptr @RE_addRenderInstance(ptr noundef, ptr noundef, ptr noundef, ptr noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @assign_dupligroup_dupli(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr nocapture noundef readonly %3) unnamed_addr #3 {
  %5 = alloca [4 x [4 x float]], align 16
  %6 = alloca [4 x [4 x float]], align 16
  %7 = alloca [4 x [4 x float]], align 16
  %8 = alloca [3 x [3 x float]], align 16
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %5) #16
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %6) #16
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %7) #16
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %8) #16
  %9 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 32
  %10 = getelementptr inbounds %struct.ObjectRen, ptr %2, i64 0, i32 28
  call void @mul_m4_m4m4(ptr noundef nonnull %6, ptr noundef nonnull %9, ptr noundef nonnull %10) #16
  %11 = call zeroext i8 @invert_m4_m4(ptr noundef nonnull %5, ptr noundef nonnull %6) #16
  %12 = getelementptr inbounds %struct.ObjectInstanceRen, ptr %1, i64 0, i32 2
  store ptr %2, ptr %12, align 8, !tbaa !165
  %13 = getelementptr inbounds %struct.ObjectInstanceRen, ptr %1, i64 0, i32 8
  call void @copy_m4_m4(ptr noundef nonnull %7, ptr noundef nonnull %13) #16
  call void @mul_m4_m4m4(ptr noundef nonnull %13, ptr noundef nonnull %7, ptr noundef nonnull %5) #16
  call void @copy_m3_m4(ptr noundef nonnull %8, ptr noundef nonnull %13) #16
  %14 = getelementptr inbounds %struct.ObjectInstanceRen, ptr %1, i64 0, i32 10
  %15 = call zeroext i8 @invert_m3_m3(ptr noundef nonnull %14, ptr noundef nonnull %8) #16
  call void @transpose_m3(ptr noundef nonnull %14) #16
  %16 = getelementptr inbounds %struct.ObjectInstanceRen, ptr %1, i64 0, i32 12
  %17 = getelementptr inbounds %struct.DupliObject, ptr %3, i64 0, i32 4
  %18 = load float, ptr %17, align 4, !tbaa !13
  store float %18, ptr %16, align 4, !tbaa !13
  %19 = getelementptr inbounds %struct.DupliObject, ptr %3, i64 0, i32 4, i64 1
  %20 = load float, ptr %19, align 4, !tbaa !13
  %21 = getelementptr inbounds %struct.ObjectInstanceRen, ptr %1, i64 0, i32 12, i64 1
  store float %20, ptr %21, align 4, !tbaa !13
  %22 = getelementptr inbounds %struct.DupliObject, ptr %3, i64 0, i32 4, i64 2
  %23 = load float, ptr %22, align 4, !tbaa !13
  %24 = getelementptr inbounds %struct.ObjectInstanceRen, ptr %1, i64 0, i32 12, i64 2
  store float %23, ptr %24, align 4, !tbaa !13
  %25 = getelementptr inbounds %struct.DupliObject, ptr %3, i64 0, i32 5
  %26 = load float, ptr %25, align 4, !tbaa !13
  %27 = getelementptr inbounds %struct.ObjectInstanceRen, ptr %1, i64 0, i32 13
  store float %26, ptr %27, align 8, !tbaa !13
  %28 = getelementptr inbounds %struct.DupliObject, ptr %3, i64 0, i32 5, i64 1
  %29 = load float, ptr %28, align 4, !tbaa !13
  %30 = getelementptr inbounds %struct.ObjectInstanceRen, ptr %1, i64 0, i32 13, i64 1
  store float %29, ptr %30, align 4, !tbaa !13
  %31 = getelementptr inbounds %struct.ObjectRen, ptr %2, i64 0, i32 10
  %32 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 60
  %33 = load <4 x i32>, ptr %31, align 8, !tbaa !47
  %34 = shufflevector <4 x i32> %33, <4 x i32> poison, <4 x i32> <i32 1, i32 0, i32 3, i32 2>
  %35 = load <4 x i32>, ptr %32, align 8, !tbaa !47
  %36 = add nsw <4 x i32> %35, %34
  store <4 x i32> %36, ptr %32, align 8, !tbaa !47
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %8) #16
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %7) #16
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %6) #16
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %5) #16
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @find_dupli_instances(ptr noundef %0, ptr noundef %1, ptr noundef readonly %2) unnamed_addr #3 {
  %4 = alloca [4 x [4 x float]], align 16
  %5 = alloca [4 x [4 x float]], align 16
  %6 = alloca [4 x [4 x float]], align 16
  %7 = alloca [3 x [3 x float]], align 16
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %4) #16
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %5) #16
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %6) #16
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %7) #16
  %8 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 32
  %9 = getelementptr inbounds %struct.ObjectRen, ptr %1, i64 0, i32 28
  call void @mul_m4_m4m4(ptr noundef nonnull %5, ptr noundef nonnull %8, ptr noundef nonnull %9) #16
  %10 = call zeroext i8 @invert_m4_m4(ptr noundef nonnull %4, ptr noundef nonnull %5) #16
  %11 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 70, i32 1
  %12 = load ptr, ptr %11, align 8, !tbaa !16
  %13 = icmp eq ptr %12, null
  br i1 %13, label %68, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %struct.ObjectRen, ptr %1, i64 0, i32 2
  %16 = getelementptr inbounds %struct.ObjectRen, ptr %1, i64 0, i32 6
  %17 = icmp eq ptr %2, null
  %18 = getelementptr inbounds %struct.DupliObject, ptr %2, i64 0, i32 4
  %19 = getelementptr inbounds %struct.DupliObject, ptr %2, i64 0, i32 4, i64 1
  %20 = getelementptr inbounds %struct.DupliObject, ptr %2, i64 0, i32 4, i64 2
  %21 = getelementptr inbounds %struct.DupliObject, ptr %2, i64 0, i32 5
  %22 = getelementptr inbounds %struct.DupliObject, ptr %2, i64 0, i32 5, i64 1
  %23 = getelementptr inbounds %struct.ObjectRen, ptr %1, i64 0, i32 10
  %24 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 60
  br label %25

25:                                               ; preds = %14, %63
  %26 = phi ptr [ %12, %14 ], [ %66, %63 ]
  %27 = phi i32 [ 1, %14 ], [ %64, %63 ]
  %28 = getelementptr inbounds %struct.ObjectInstanceRen, ptr %26, i64 0, i32 2
  %29 = load ptr, ptr %28, align 8, !tbaa !165
  %30 = icmp eq ptr %29, null
  br i1 %30, label %31, label %63

31:                                               ; preds = %25
  %32 = getelementptr inbounds %struct.ObjectInstanceRen, ptr %26, i64 0, i32 3
  %33 = load ptr, ptr %32, align 8, !tbaa !179
  %34 = load ptr, ptr %15, align 8, !tbaa !148
  %35 = icmp eq ptr %33, %34
  br i1 %35, label %36, label %63

36:                                               ; preds = %31
  %37 = getelementptr inbounds %struct.ObjectInstanceRen, ptr %26, i64 0, i32 6
  %38 = load i32, ptr %37, align 4, !tbaa !182
  %39 = load i32, ptr %16, align 4, !tbaa !150
  %40 = icmp eq i32 %38, %39
  br i1 %40, label %41, label %63

41:                                               ; preds = %36
  store ptr %1, ptr %28, align 8, !tbaa !165
  %42 = getelementptr inbounds %struct.ObjectInstanceRen, ptr %26, i64 0, i32 8
  call void @copy_m4_m4(ptr noundef nonnull %6, ptr noundef nonnull %42) #16
  call void @mul_m4_m4m4(ptr noundef nonnull %42, ptr noundef nonnull %6, ptr noundef nonnull %4) #16
  call void @copy_m3_m4(ptr noundef nonnull %7, ptr noundef nonnull %42) #16
  %43 = getelementptr inbounds %struct.ObjectInstanceRen, ptr %26, i64 0, i32 10
  %44 = call zeroext i8 @invert_m3_m3(ptr noundef nonnull %43, ptr noundef nonnull %7) #16
  call void @transpose_m3(ptr noundef nonnull %43) #16
  br i1 %17, label %56, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %struct.ObjectInstanceRen, ptr %26, i64 0, i32 12
  %47 = load float, ptr %18, align 4, !tbaa !13
  store float %47, ptr %46, align 4, !tbaa !13
  %48 = load float, ptr %19, align 4, !tbaa !13
  %49 = getelementptr inbounds %struct.ObjectInstanceRen, ptr %26, i64 0, i32 12, i64 1
  store float %48, ptr %49, align 4, !tbaa !13
  %50 = load float, ptr %20, align 4, !tbaa !13
  %51 = getelementptr inbounds %struct.ObjectInstanceRen, ptr %26, i64 0, i32 12, i64 2
  store float %50, ptr %51, align 4, !tbaa !13
  %52 = load float, ptr %21, align 4, !tbaa !13
  %53 = getelementptr inbounds %struct.ObjectInstanceRen, ptr %26, i64 0, i32 13
  store float %52, ptr %53, align 8, !tbaa !13
  %54 = load float, ptr %22, align 4, !tbaa !13
  %55 = getelementptr inbounds %struct.ObjectInstanceRen, ptr %26, i64 0, i32 13, i64 1
  store float %54, ptr %55, align 4, !tbaa !13
  br label %56

56:                                               ; preds = %45, %41
  %57 = icmp eq i32 %27, 0
  br i1 %57, label %58, label %63

58:                                               ; preds = %56
  %59 = load <4 x i32>, ptr %23, align 8, !tbaa !47
  %60 = shufflevector <4 x i32> %59, <4 x i32> poison, <4 x i32> <i32 1, i32 0, i32 3, i32 2>
  %61 = load <4 x i32>, ptr %24, align 8, !tbaa !47
  %62 = add nsw <4 x i32> %61, %60
  store <4 x i32> %62, ptr %24, align 8, !tbaa !47
  br label %63

63:                                               ; preds = %56, %25, %31, %36, %58
  %64 = phi i32 [ %27, %25 ], [ 0, %58 ], [ %27, %36 ], [ %27, %31 ], [ 0, %56 ]
  %65 = getelementptr inbounds %struct.ObjectInstanceRen, ptr %26, i64 0, i32 1
  %66 = load ptr, ptr %65, align 8, !tbaa !16
  %67 = icmp eq ptr %66, null
  br i1 %67, label %68, label %25, !llvm.loop !258

68:                                               ; preds = %63, %3
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %7) #16
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %6) #16
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %5) #16
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %4) #16
  ret void
}

declare void @duplilist_restore(ptr noundef, ptr noundef) local_unnamed_addr #5

declare void @duplilist_free_apply_data(ptr noundef) local_unnamed_addr #5

declare void @free_object_duplilist(ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @add_group_render_dupli_obs(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2, i32 noundef %3, ptr noundef %4, i32 noundef %5, i32 noundef %6) unnamed_addr #3 {
  %8 = icmp sgt i32 %6, 8
  br i1 %8, label %92, label %9

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.Group, ptr %1, i64 0, i32 1
  %11 = load ptr, ptr %10, align 8, !tbaa !16
  %12 = icmp eq ptr %11, null
  br i1 %12, label %92, label %13

13:                                               ; preds = %9
  %14 = getelementptr i8, ptr %0, i64 1620
  %15 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 44
  %16 = icmp eq i32 %2, 0
  %17 = icmp eq i32 %3, 0
  %18 = add nuw nsw i32 %6, 1
  br label %19

19:                                               ; preds = %13, %89
  %20 = phi ptr [ %11, %13 ], [ %90, %89 ]
  %21 = getelementptr inbounds %struct.GroupObject, ptr %20, i64 0, i32 2
  %22 = load ptr, ptr %21, align 8, !tbaa !109
  %23 = getelementptr inbounds %struct.Object, ptr %22, i64 0, i32 53
  %24 = load i16, ptr %23, align 4, !tbaa !124
  %25 = and i16 %24, 1024
  %26 = icmp eq i16 %25, 0
  br i1 %26, label %89, label %27

27:                                               ; preds = %19
  %28 = getelementptr inbounds %struct.Object, ptr %22, i64 0, i32 55
  %29 = load i16, ptr %28, align 8, !tbaa !125
  %30 = and i16 %29, 4096
  %31 = icmp eq i16 %30, 0
  br i1 %31, label %89, label %32

32:                                               ; preds = %27
  %33 = load i32, ptr %14, align 4, !tbaa !70
  %34 = and i32 %33, 524288
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %struct.Object, ptr %22, i64 0, i32 102
  %37 = load i8, ptr %36, align 8, !tbaa !110
  %38 = lshr i8 %37, 2
  %39 = select i1 %35, i8 %38, i8 %37
  %40 = and i8 %39, 1
  %41 = icmp ne i8 %40, 0
  %42 = or i1 %35, %41
  br i1 %42, label %49, label %43

43:                                               ; preds = %32
  %44 = getelementptr inbounds %struct.Object, ptr %22, i64 0, i32 87
  %45 = load i8, ptr %44, align 2, !tbaa !113
  %46 = add i8 %45, -1
  %47 = icmp ult i8 %46, 2
  %48 = zext i1 %47 to i8
  br label %49

49:                                               ; preds = %43, %32
  %50 = phi i8 [ %48, %43 ], [ %40, %32 ]
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %52, label %89

52:                                               ; preds = %49
  %53 = getelementptr inbounds %struct.Object, ptr %22, i64 0, i32 109
  %54 = load ptr, ptr %53, align 8, !tbaa !132
  %55 = icmp eq ptr %54, null
  br i1 %55, label %56, label %63

56:                                               ; preds = %52
  %57 = zext i16 %29 to i32
  %58 = and i32 %57, 2840
  %59 = icmp ne i32 %58, 0
  %60 = and i32 %57, 8
  %61 = icmp eq i32 %60, 0
  %62 = and i1 %59, %61
  br i1 %62, label %89, label %63

63:                                               ; preds = %56, %52
  %64 = getelementptr inbounds %struct.Object, ptr %22, i64 0, i32 3
  %65 = load i16, ptr %64, align 8, !tbaa !115
  %66 = icmp eq i16 %65, 5
  br i1 %66, label %67, label %71

67:                                               ; preds = %63
  %68 = load ptr, ptr %15, align 8, !tbaa !17
  %69 = tail call ptr @BKE_mball_basis_find(ptr noundef %68, ptr noundef nonnull %22) #16
  %70 = icmp eq ptr %69, %22
  br i1 %70, label %71, label %89

71:                                               ; preds = %67, %63
  br i1 %16, label %75, label %72

72:                                               ; preds = %71
  %73 = load i16, ptr %64, align 8, !tbaa !115
  %74 = icmp eq i16 %73, 10
  br i1 %74, label %89, label %75

75:                                               ; preds = %72, %71
  %76 = icmp eq ptr %22, %4
  %77 = or i1 %17, %76
  br i1 %77, label %82, label %78

78:                                               ; preds = %75
  %79 = load i16, ptr %23, align 4, !tbaa !124
  %80 = and i16 %79, 1
  %81 = icmp eq i16 %80, 0
  br i1 %81, label %89, label %82

82:                                               ; preds = %78, %75
  tail call fastcc void @init_render_object(ptr noundef nonnull %0, ptr noundef nonnull %22, ptr noundef null, ptr noundef null, ptr noundef null, i32 noundef %5)
  %83 = load i16, ptr %28, align 8, !tbaa !125
  %84 = and i16 %83, -4097
  store i16 %84, ptr %28, align 8, !tbaa !125
  %85 = getelementptr inbounds %struct.Object, ptr %22, i64 0, i32 112
  %86 = load ptr, ptr %85, align 8, !tbaa !256
  %87 = icmp eq ptr %86, null
  br i1 %87, label %89, label %88

88:                                               ; preds = %82
  tail call fastcc void @add_group_render_dupli_obs(ptr noundef nonnull %0, ptr noundef nonnull %86, i32 noundef %2, i32 noundef %3, ptr noundef %4, i32 noundef %5, i32 noundef %18)
  br label %89

89:                                               ; preds = %78, %72, %67, %56, %49, %19, %88, %82, %27
  %90 = load ptr, ptr %20, align 8, !tbaa !16
  %91 = icmp eq ptr %90, null
  br i1 %91, label %92, label %19, !llvm.loop !259

92:                                               ; preds = %89, %9, %7
  ret void
}

declare void @RE_makeRenderInstances(ptr noundef) local_unnamed_addr #5

declare ptr @give_totcolp(ptr noundef) local_unnamed_addr #5

declare ptr @give_matarar(ptr noundef) local_unnamed_addr #5

declare ptr @BLI_memarena_alloc(ptr noundef, i64 noundef) local_unnamed_addr #5

declare void @_va_mul_m4_series_5(ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

declare ptr @BKE_mball_basis_find(ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @add_render_lamp(ptr noundef %0, ptr noundef %1) unnamed_addr #3 {
  %3 = alloca [4 x [4 x float]], align 16
  %4 = alloca [4 x [4 x float]], align 16
  %5 = alloca [3 x float], align 8
  %6 = getelementptr inbounds %struct.Object, ptr %1, i64 0, i32 19
  %7 = load ptr, ptr %6, align 8, !tbaa !260
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %4) #16
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %5) #16
  %8 = icmp eq ptr %7, null
  br i1 %8, label %700, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.Lamp, ptr %7, i64 0, i32 4
  %11 = load i32, ptr %10, align 4, !tbaa !261
  %12 = and i32 %11, 32
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %19, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 45, i32 47
  %16 = load i32, ptr %15, align 8, !tbaa !55
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %700, label %19

19:                                               ; preds = %14, %9
  %20 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 64
  %21 = load i32, ptr %20, align 8, !tbaa !120
  %22 = add nsw i32 %21, 1
  store i32 %22, ptr %20, align 8, !tbaa !120
  %23 = load ptr, ptr @MEM_callocN, align 8, !tbaa !16
  %24 = tail call ptr %23(i64 noundef 40, ptr noundef nonnull @.str.8) #16
  %25 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 66
  tail call void @BLI_addtail(ptr noundef nonnull %25, ptr noundef %24) #16
  %26 = getelementptr inbounds %struct.GroupObject, ptr %24, i64 0, i32 2
  store ptr %1, ptr %26, align 8, !tbaa !109
  %27 = load ptr, ptr @MEM_callocN, align 8, !tbaa !16
  %28 = tail call ptr %27(i64 noundef 672, ptr noundef nonnull @.str.9) #16
  %29 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 67
  tail call void @BLI_addtail(ptr noundef nonnull %29, ptr noundef %28) #16
  %30 = getelementptr inbounds %struct.GroupObject, ptr %24, i64 0, i32 3
  store ptr %28, ptr %30, align 8, !tbaa !107
  %31 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 32
  %32 = getelementptr inbounds %struct.Object, ptr %1, i64 0, i32 47
  call void @mul_m4_m4m4(ptr noundef nonnull %4, ptr noundef nonnull %31, ptr noundef nonnull %32) #16
  %33 = getelementptr inbounds %struct.Object, ptr %1, i64 0, i32 50
  %34 = call zeroext i8 @invert_m4_m4(ptr noundef nonnull %33, ptr noundef nonnull %4) #16
  %35 = getelementptr inbounds %struct.LampRen, ptr %28, i64 0, i32 63
  call void @copy_m4_m4(ptr noundef nonnull %35, ptr noundef nonnull %32) #16
  %36 = getelementptr inbounds %struct.LampRen, ptr %28, i64 0, i32 64
  call void @copy_m3_m4(ptr noundef nonnull %36, ptr noundef nonnull %4) #16
  %37 = getelementptr inbounds %struct.LampRen, ptr %28, i64 0, i32 59
  call void @copy_m3_m4(ptr noundef nonnull %37, ptr noundef nonnull %33) #16
  %38 = getelementptr inbounds %struct.Lamp, ptr %7, i64 0, i32 32
  %39 = getelementptr inbounds %struct.LampRen, ptr %28, i64 0, i32 31
  %40 = getelementptr inbounds %struct.LampRen, ptr %28, i64 0, i32 32
  %41 = load <2 x i16>, ptr %38, align 8, !tbaa !46
  store <2 x i16> %41, ptr %39, align 8, !tbaa !46
  %42 = getelementptr inbounds %struct.Lamp, ptr %7, i64 0, i32 34
  %43 = load i16, ptr %42, align 4, !tbaa !263
  %44 = getelementptr inbounds %struct.LampRen, ptr %28, i64 0, i32 34
  %45 = call i16 @llvm.umax.i16(i16 %43, i16 1)
  store i16 %45, ptr %44, align 8, !tbaa !264
  %46 = getelementptr inbounds %struct.Lamp, ptr %7, i64 0, i32 37
  %47 = load i8, ptr %46, align 1, !tbaa !265
  %48 = zext i8 %47 to i16
  %49 = getelementptr inbounds %struct.LampRen, ptr %28, i64 0, i32 36
  store i16 %48, ptr %49, align 4, !tbaa !266
  %50 = getelementptr inbounds %struct.Lamp, ptr %7, i64 0, i32 35
  %51 = load i16, ptr %50, align 2, !tbaa !267
  %52 = getelementptr inbounds %struct.LampRen, ptr %28, i64 0, i32 35
  store i16 %51, ptr %52, align 2, !tbaa !268
  %53 = getelementptr inbounds %struct.Lamp, ptr %7, i64 0, i32 28
  %54 = load float, ptr %53, align 8, !tbaa !269
  %55 = getelementptr inbounds %struct.LampRen, ptr %28, i64 0, i32 33
  store float %54, ptr %55, align 4, !tbaa !270
  %56 = getelementptr inbounds %struct.Lamp, ptr %7, i64 0, i32 50
  %57 = load i16, ptr %56, align 2, !tbaa !271
  %58 = getelementptr inbounds %struct.LampRen, ptr %28, i64 0, i32 38
  store i16 %57, ptr %58, align 8, !tbaa !272
  %59 = getelementptr inbounds %struct.Lamp, ptr %7, i64 0, i32 25
  %60 = load float, ptr %59, align 4, !tbaa !273
  %61 = getelementptr inbounds %struct.LampRen, ptr %28, i64 0, i32 39
  %62 = getelementptr inbounds %struct.Lamp, ptr %7, i64 0, i32 26
  %63 = load <2 x float>, ptr %62, align 8, !tbaa !13
  %64 = getelementptr inbounds %struct.LampRen, ptr %28, i64 0, i32 41
  %65 = getelementptr inbounds %struct.Lamp, ptr %7, i64 0, i32 29
  %66 = load float, ptr %65, align 4, !tbaa !274
  %67 = getelementptr inbounds %struct.LampRen, ptr %28, i64 0, i32 42
  %68 = insertelement <4 x float> poison, float %60, i64 0
  %69 = shufflevector <2 x float> %63, <2 x float> poison, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>
  %70 = shufflevector <4 x float> %68, <4 x float> %69, <4 x i32> <i32 0, i32 4, i32 5, i32 poison>
  %71 = insertelement <4 x float> %70, float %66, i64 3
  store <4 x float> %71, ptr %61, align 4, !tbaa !13
  %72 = getelementptr inbounds %struct.Lamp, ptr %7, i64 0, i32 2
  %73 = load i16, ptr %72, align 8, !tbaa !275
  %74 = getelementptr inbounds %struct.LampRen, ptr %28, i64 0, i32 6
  store i16 %73, ptr %74, align 8, !tbaa !276
  %75 = load i32, ptr %10, align 4, !tbaa !261
  %76 = getelementptr inbounds %struct.LampRen, ptr %28, i64 0, i32 7
  store i32 %75, ptr %76, align 4, !tbaa !277
  %77 = getelementptr inbounds %struct.Lamp, ptr %7, i64 0, i32 15
  %78 = load float, ptr %77, align 4, !tbaa !278
  %79 = getelementptr inbounds %struct.LampRen, ptr %28, i64 0, i32 15
  %80 = and i32 %75, 16
  %81 = icmp eq i32 %80, 0
  %82 = fneg fast float %78
  %83 = select i1 %81, float %78, float %82
  store float %83, ptr %79, align 4, !tbaa !279
  %84 = getelementptr inbounds [4 x [4 x float]], ptr %4, i64 0, i64 2
  %85 = getelementptr inbounds %struct.LampRen, ptr %28, i64 0, i32 20
  %86 = load <2 x float>, ptr %84, align 16, !tbaa !13
  %87 = getelementptr inbounds [4 x [4 x float]], ptr %4, i64 0, i64 2, i64 2
  %88 = load float, ptr %87, align 8, !tbaa !13
  %89 = getelementptr inbounds %struct.LampRen, ptr %28, i64 0, i32 20, i64 2
  %90 = fmul fast <2 x float> %86, %86
  %91 = shufflevector <2 x float> %90, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %92 = fadd fast <2 x float> %91, %90
  %93 = extractelement <2 x float> %92, i64 0
  %94 = fmul fast float %88, %88
  %95 = fadd fast float %93, %94
  %96 = fcmp fast ogt float %95, 0x38AA95A5C0000000
  br i1 %96, label %97, label %106

97:                                               ; preds = %19
  %98 = fneg fast float %88
  %99 = fneg fast <2 x float> %86
  %100 = call fast float @llvm.sqrt.f32(float %95)
  %101 = fdiv fast float 1.000000e+00, %100
  %102 = insertelement <2 x float> poison, float %101, i64 0
  %103 = shufflevector <2 x float> %102, <2 x float> poison, <2 x i32> zeroinitializer
  %104 = fmul fast <2 x float> %103, %99
  %105 = fmul fast float %101, %98
  br label %106

106:                                              ; preds = %19, %97
  %107 = phi float [ %105, %97 ], [ 0.000000e+00, %19 ]
  %108 = phi <2 x float> [ %104, %97 ], [ zeroinitializer, %19 ]
  store <2 x float> %108, ptr %85, align 4
  store float %107, ptr %89, align 4
  %109 = getelementptr inbounds [4 x [4 x float]], ptr %4, i64 0, i64 3
  %110 = getelementptr inbounds %struct.LampRen, ptr %28, i64 0, i32 5
  %111 = getelementptr inbounds [4 x [4 x float]], ptr %4, i64 0, i64 3, i64 1
  %112 = load float, ptr %109, align 16, !tbaa !13
  store float %112, ptr %110, align 4, !tbaa !13
  %113 = load float, ptr %111, align 4, !tbaa !13
  %114 = getelementptr inbounds %struct.LampRen, ptr %28, i64 0, i32 5, i64 1
  store float %113, ptr %114, align 4, !tbaa !13
  %115 = getelementptr inbounds [4 x [4 x float]], ptr %4, i64 0, i64 3, i64 2
  %116 = load float, ptr %115, align 8, !tbaa !13
  %117 = getelementptr inbounds %struct.LampRen, ptr %28, i64 0, i32 5, i64 2
  store float %116, ptr %117, align 4, !tbaa !13
  %118 = getelementptr inbounds %struct.Lamp, ptr %7, i64 0, i32 16
  %119 = load float, ptr %118, align 8, !tbaa !280
  %120 = getelementptr inbounds %struct.LampRen, ptr %28, i64 0, i32 4
  store float %119, ptr %120, align 8, !tbaa !14
  %121 = getelementptr inbounds %struct.Lamp, ptr %7, i64 0, i32 19
  %122 = load float, ptr %121, align 4, !tbaa !281
  %123 = getelementptr inbounds %struct.LampRen, ptr %28, i64 0, i32 16
  store float %122, ptr %123, align 8, !tbaa !282
  %124 = fmul fast float %119, %119
  %125 = getelementptr inbounds %struct.LampRen, ptr %28, i64 0, i32 23
  store float %124, ptr %125, align 4, !tbaa !283
  %126 = getelementptr inbounds %struct.Lamp, ptr %7, i64 0, i32 7
  %127 = getelementptr inbounds %struct.LampRen, ptr %28, i64 0, i32 8
  %128 = load <2 x float>, ptr %126, align 4, !tbaa !13
  %129 = insertelement <2 x float> poison, float %83, i64 0
  %130 = shufflevector <2 x float> %129, <2 x float> poison, <2 x i32> zeroinitializer
  %131 = fmul fast <2 x float> %128, %130
  store <2 x float> %131, ptr %127, align 8, !tbaa !13
  %132 = getelementptr inbounds %struct.Lamp, ptr %7, i64 0, i32 9
  %133 = load float, ptr %132, align 4, !tbaa !284
  %134 = fmul fast float %133, %83
  %135 = getelementptr inbounds %struct.LampRen, ptr %28, i64 0, i32 10
  store float %134, ptr %135, align 8, !tbaa !285
  %136 = getelementptr inbounds %struct.Lamp, ptr %7, i64 0, i32 10
  %137 = getelementptr inbounds %struct.LampRen, ptr %28, i64 0, i32 11
  %138 = load <4 x float>, ptr %136, align 8, !tbaa !13
  store <4 x float> %138, ptr %137, align 4, !tbaa !13
  %139 = getelementptr inbounds %struct.Lamp, ptr %7, i64 0, i32 38
  %140 = load i16, ptr %139, align 2, !tbaa !286
  %141 = getelementptr inbounds %struct.LampRen, ptr %28, i64 0, i32 43
  store i16 %140, ptr %141, align 4, !tbaa !287
  %142 = getelementptr inbounds %struct.Lamp, ptr %7, i64 0, i32 39
  %143 = load i16, ptr %142, align 4, !tbaa !288
  %144 = getelementptr inbounds %struct.LampRen, ptr %28, i64 0, i32 44
  store i16 %143, ptr %144, align 2, !tbaa !289
  %145 = getelementptr inbounds %struct.Lamp, ptr %7, i64 0, i32 40
  %146 = load i16, ptr %145, align 2, !tbaa !290
  %147 = getelementptr inbounds %struct.LampRen, ptr %28, i64 0, i32 45
  store i16 %146, ptr %147, align 8, !tbaa !291
  %148 = getelementptr inbounds %struct.Lamp, ptr %7, i64 0, i32 43
  %149 = getelementptr inbounds %struct.LampRen, ptr %28, i64 0, i32 52
  %150 = getelementptr inbounds %struct.LampRen, ptr %28, i64 0, i32 53
  %151 = load <2 x float>, ptr %148, align 4, !tbaa !13
  store <2 x float> %151, ptr %149, align 8, !tbaa !13
  %152 = getelementptr inbounds %struct.Lamp, ptr %7, i64 0, i32 45
  %153 = load float, ptr %152, align 4, !tbaa !292
  %154 = getelementptr inbounds %struct.LampRen, ptr %28, i64 0, i32 54
  store float %153, ptr %154, align 8, !tbaa !293
  %155 = getelementptr inbounds %struct.Lamp, ptr %7, i64 0, i32 42
  %156 = load i16, ptr %155, align 2, !tbaa !294
  %157 = getelementptr inbounds %struct.LampRen, ptr %28, i64 0, i32 48
  store i16 %156, ptr %157, align 2, !tbaa !295
  %158 = load i16, ptr %72, align 8, !tbaa !275
  switch i16 %158, label %170 [
    i16 4, label %159
    i16 2, label %159
    i16 1, label %159
    i16 0, label %159
  ]

159:                                              ; preds = %106, %106, %106, %106
  %160 = load i32, ptr %10, align 4, !tbaa !261
  %161 = and i32 %160, 8192
  %162 = icmp ne i32 %161, 0
  %163 = icmp ult i16 %158, 3
  %164 = and i1 %163, %162
  br i1 %164, label %165, label %170

165:                                              ; preds = %159
  %166 = getelementptr inbounds %struct.Lamp, ptr %7, i64 0, i32 47
  %167 = load i16, ptr %166, align 4, !tbaa !296
  %168 = icmp eq i16 %167, 0
  br i1 %168, label %169, label %170

169:                                              ; preds = %165
  store i16 1, ptr %166, align 4, !tbaa !296
  br label %170

170:                                              ; preds = %106, %169, %165, %159
  %171 = getelementptr inbounds %struct.Lamp, ptr %7, i64 0, i32 47
  %172 = load i16, ptr %171, align 4, !tbaa !296
  %173 = getelementptr inbounds %struct.LampRen, ptr %28, i64 0, i32 46
  store i16 %172, ptr %173, align 2, !tbaa !297
  %174 = getelementptr inbounds %struct.Lamp, ptr %7, i64 0, i32 41
  %175 = load i16, ptr %174, align 8, !tbaa !298
  %176 = getelementptr inbounds %struct.LampRen, ptr %28, i64 0, i32 47
  store i16 %175, ptr %176, align 4, !tbaa !299
  %177 = getelementptr inbounds %struct.Lamp, ptr %7, i64 0, i32 46
  %178 = load float, ptr %177, align 8, !tbaa !300
  %179 = getelementptr inbounds %struct.LampRen, ptr %28, i64 0, i32 55
  store float %178, ptr %179, align 4, !tbaa !301
  %180 = getelementptr inbounds %struct.LampRen, ptr %28, i64 0, i32 56
  store ptr null, ptr %180, align 8, !tbaa !73
  switch i16 %73, label %325 [
    i16 2, label %181
    i16 0, label %181
    i16 4, label %185
    i16 1, label %261
  ]

181:                                              ; preds = %170, %170
  %182 = mul i16 %140, %140
  %183 = getelementptr inbounds %struct.LampRen, ptr %28, i64 0, i32 49
  store i16 %182, ptr %183, align 8, !tbaa !5
  store i16 0, ptr %157, align 2, !tbaa !295
  %184 = extractelement <2 x float> %151, i64 0
  store float %184, ptr %150, align 4, !tbaa !302
  br label %327

185:                                              ; preds = %170
  %186 = sext i16 %156 to i32
  switch i32 %186, label %187 [
    i32 0, label %191
    i32 1, label %195
    i32 2, label %199
    i32 3, label %204
  ]

187:                                              ; preds = %185
  %188 = getelementptr inbounds %struct.LampRen, ptr %28, i64 0, i32 49
  %189 = load i16, ptr %188, align 8, !tbaa !5
  %190 = extractelement <2 x float> %151, i64 1
  br label %209

191:                                              ; preds = %185
  %192 = mul i16 %140, %140
  %193 = getelementptr inbounds %struct.LampRen, ptr %28, i64 0, i32 49
  store i16 %192, ptr %193, align 8, !tbaa !5
  store i16 %140, ptr %144, align 2, !tbaa !289
  %194 = extractelement <2 x float> %151, i64 0
  store float %194, ptr %150, align 4, !tbaa !302
  br label %209

195:                                              ; preds = %185
  %196 = mul i16 %143, %140
  %197 = getelementptr inbounds %struct.LampRen, ptr %28, i64 0, i32 49
  store i16 %196, ptr %197, align 8, !tbaa !5
  %198 = extractelement <2 x float> %151, i64 1
  br label %209

199:                                              ; preds = %185
  %200 = mul i16 %140, %140
  %201 = mul i16 %200, %140
  %202 = getelementptr inbounds %struct.LampRen, ptr %28, i64 0, i32 49
  store i16 %201, ptr %202, align 8, !tbaa !5
  store i16 %140, ptr %144, align 2, !tbaa !289
  store i16 %140, ptr %147, align 8, !tbaa !291
  %203 = extractelement <2 x float> %151, i64 0
  store float %203, ptr %150, align 4, !tbaa !302
  store float %203, ptr %154, align 8, !tbaa !293
  br label %209

204:                                              ; preds = %185
  %205 = mul i16 %143, %140
  %206 = mul i16 %205, %146
  %207 = getelementptr inbounds %struct.LampRen, ptr %28, i64 0, i32 49
  store i16 %206, ptr %207, align 8, !tbaa !5
  %208 = extractelement <2 x float> %151, i64 1
  br label %209

209:                                              ; preds = %187, %204, %199, %195, %191
  %210 = phi i16 [ %189, %187 ], [ %206, %204 ], [ %201, %199 ], [ %196, %195 ], [ %192, %191 ]
  %211 = phi float [ %190, %187 ], [ %208, %204 ], [ %203, %199 ], [ %198, %195 ], [ %194, %191 ]
  %212 = sitofp i16 %210 to float
  %213 = call fast float @llvm.sqrt.f32(float %212)
  %214 = fdiv fast float 5.000000e-01, %213
  %215 = extractelement <2 x float> %151, i64 0
  %216 = fmul fast float %214, %215
  %217 = fmul fast float %214, %211
  %218 = getelementptr inbounds %struct.LampRen, ptr %28, i64 0, i32 64, i64 1
  %219 = getelementptr inbounds %struct.LampRen, ptr %28, i64 0, i32 65
  %220 = load <2 x float>, ptr %36, align 8, !tbaa !13
  %221 = insertelement <2 x float> poison, float %216, i64 0
  %222 = shufflevector <2 x float> %221, <2 x float> poison, <2 x i32> zeroinitializer
  %223 = fmul fast <2 x float> %222, %220
  %224 = load <2 x float>, ptr %218, align 4, !tbaa !13
  %225 = insertelement <2 x float> poison, float %217, i64 0
  %226 = shufflevector <2 x float> %225, <2 x float> poison, <2 x i32> zeroinitializer
  %227 = fmul fast <2 x float> %226, %224
  %228 = fadd fast <2 x float> %223, %227
  %229 = insertelement <2 x float> poison, float %112, i64 0
  %230 = insertelement <2 x float> %229, float %113, i64 1
  %231 = fsub fast <2 x float> %230, %228
  store <2 x float> %231, ptr %219, align 4, !tbaa !13
  %232 = getelementptr inbounds %struct.LampRen, ptr %28, i64 0, i32 64, i64 0, i64 2
  %233 = load float, ptr %232, align 8, !tbaa !13
  %234 = fmul fast float %233, %216
  %235 = getelementptr inbounds %struct.LampRen, ptr %28, i64 0, i32 64, i64 1, i64 2
  %236 = load float, ptr %235, align 4, !tbaa !13
  %237 = fmul fast float %236, %217
  %238 = fadd fast float %234, %237
  %239 = fsub fast float %116, %238
  %240 = getelementptr inbounds %struct.LampRen, ptr %28, i64 0, i32 65, i64 0, i64 2
  store float %239, ptr %240, align 4, !tbaa !13
  %241 = getelementptr inbounds %struct.LampRen, ptr %28, i64 0, i32 65, i64 1
  %242 = fsub fast <2 x float> %230, %223
  %243 = fadd fast <2 x float> %242, %227
  store <2 x float> %243, ptr %241, align 4, !tbaa !13
  %244 = fsub fast float %116, %234
  %245 = fadd fast float %244, %237
  %246 = getelementptr inbounds %struct.LampRen, ptr %28, i64 0, i32 65, i64 1, i64 2
  store float %245, ptr %246, align 4, !tbaa !13
  %247 = getelementptr inbounds %struct.LampRen, ptr %28, i64 0, i32 65, i64 2
  %248 = fadd fast <2 x float> %223, %230
  %249 = fadd fast <2 x float> %248, %227
  store <2 x float> %249, ptr %247, align 4, !tbaa !13
  %250 = fadd fast float %234, %116
  %251 = fadd fast float %250, %237
  %252 = getelementptr inbounds %struct.LampRen, ptr %28, i64 0, i32 65, i64 2, i64 2
  store float %251, ptr %252, align 4, !tbaa !13
  %253 = getelementptr inbounds %struct.LampRen, ptr %28, i64 0, i32 65, i64 3
  %254 = fsub fast <2 x float> %248, %227
  store <2 x float> %254, ptr %253, align 4, !tbaa !13
  %255 = fsub fast float %250, %237
  %256 = getelementptr inbounds %struct.LampRen, ptr %28, i64 0, i32 65, i64 3, i64 2
  store float %255, ptr %256, align 4, !tbaa !13
  %257 = fmul fast float %216, 4.000000e+00
  %258 = fmul fast float %257, %217
  %259 = fdiv fast float %124, %258
  %260 = getelementptr inbounds %struct.LampRen, ptr %28, i64 0, i32 66
  store float %259, ptr %260, align 4, !tbaa !15
  call void @init_jitter_plane(ptr noundef nonnull %28) #16
  br label %327

261:                                              ; preds = %170
  %262 = mul i16 %140, %140
  %263 = getelementptr inbounds %struct.LampRen, ptr %28, i64 0, i32 49
  store i16 %262, ptr %263, align 8, !tbaa !5
  store i16 0, ptr %157, align 2, !tbaa !295
  %264 = extractelement <2 x float> %151, i64 0
  store float %264, ptr %150, align 4, !tbaa !302
  %265 = getelementptr inbounds %struct.Lamp, ptr %7, i64 0, i32 51
  %266 = load i16, ptr %265, align 4, !tbaa !303
  %267 = and i16 %266, 3
  %268 = icmp eq i16 %267, 0
  br i1 %268, label %327, label %269

269:                                              ; preds = %261
  %270 = load ptr, ptr @MEM_callocN, align 8, !tbaa !16
  %271 = call ptr %270(i64 noundef 224, ptr noundef nonnull @.str.10) #16
  store ptr %271, ptr %180, align 8, !tbaa !73
  %272 = load i16, ptr %265, align 4, !tbaa !303
  store i16 %272, ptr %271, align 4, !tbaa !304
  %273 = getelementptr inbounds %struct.Object, ptr %1, i64 0, i32 47, i64 2
  %274 = load <2 x float>, ptr %273, align 4, !tbaa !13
  %275 = getelementptr inbounds %struct.Object, ptr %1, i64 0, i32 47, i64 2, i64 2
  %276 = load float, ptr %275, align 4, !tbaa !13
  %277 = getelementptr inbounds float, ptr %5, i64 2
  %278 = fmul fast <2 x float> %274, %274
  %279 = shufflevector <2 x float> %278, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %280 = fadd fast <2 x float> %279, %278
  %281 = extractelement <2 x float> %280, i64 0
  %282 = fmul fast float %276, %276
  %283 = fadd fast float %281, %282
  %284 = fcmp fast ogt float %283, 0x38AA95A5C0000000
  br i1 %284, label %285, label %292

285:                                              ; preds = %269
  %286 = call fast float @llvm.sqrt.f32(float %283)
  %287 = fdiv fast float 1.000000e+00, %286
  %288 = insertelement <2 x float> poison, float %287, i64 0
  %289 = shufflevector <2 x float> %288, <2 x float> poison, <2 x i32> zeroinitializer
  %290 = fmul fast <2 x float> %289, %274
  %291 = fmul fast float %287, %276
  br label %292

292:                                              ; preds = %269, %285
  %293 = phi float [ %291, %285 ], [ 0.000000e+00, %269 ]
  %294 = phi <2 x float> [ %290, %285 ], [ zeroinitializer, %269 ]
  store <2 x float> %294, ptr %5, align 8
  store float %293, ptr %277, align 8
  %295 = getelementptr inbounds %struct.Lamp, ptr %7, i64 0, i32 59
  %296 = load float, ptr %295, align 8, !tbaa !306
  %297 = getelementptr inbounds %struct.Lamp, ptr %7, i64 0, i32 53
  %298 = load float, ptr %297, align 8, !tbaa !307
  %299 = getelementptr inbounds %struct.Lamp, ptr %7, i64 0, i32 54
  %300 = load float, ptr %299, align 4, !tbaa !308
  %301 = getelementptr inbounds %struct.Lamp, ptr %7, i64 0, i32 55
  %302 = load float, ptr %301, align 8, !tbaa !309
  %303 = getelementptr inbounds %struct.Lamp, ptr %7, i64 0, i32 56
  %304 = load float, ptr %303, align 4, !tbaa !310
  %305 = getelementptr inbounds %struct.Lamp, ptr %7, i64 0, i32 57
  %306 = load float, ptr %305, align 8, !tbaa !311
  %307 = getelementptr inbounds %struct.Lamp, ptr %7, i64 0, i32 63
  %308 = load float, ptr %307, align 8, !tbaa !312
  %309 = getelementptr inbounds %struct.Lamp, ptr %7, i64 0, i32 52
  %310 = load i16, ptr %309, align 2, !tbaa !313
  %311 = getelementptr inbounds %struct.Lamp, ptr %7, i64 0, i32 64
  %312 = load float, ptr %311, align 4, !tbaa !314
  %313 = getelementptr inbounds %struct.Lamp, ptr %7, i64 0, i32 66
  %314 = load i16, ptr %313, align 4, !tbaa !315
  %315 = sitofp i16 %314 to float
  call void @InitSunSky(ptr noundef nonnull %271, float noundef nofpclass(nan inf) %296, ptr noundef nonnull %5, float noundef nofpclass(nan inf) %298, float noundef nofpclass(nan inf) %300, float noundef nofpclass(nan inf) %302, float noundef nofpclass(nan inf) %304, float noundef nofpclass(nan inf) %306, float noundef nofpclass(nan inf) %308, i16 noundef signext %310, float noundef nofpclass(nan inf) %312, float noundef nofpclass(nan inf) %315) #16
  %316 = load ptr, ptr %180, align 8, !tbaa !73
  %317 = getelementptr inbounds %struct.Lamp, ptr %7, i64 0, i32 58
  %318 = load float, ptr %317, align 4, !tbaa !316
  %319 = getelementptr inbounds %struct.Lamp, ptr %7, i64 0, i32 60
  %320 = load float, ptr %319, align 4, !tbaa !317
  %321 = getelementptr inbounds %struct.Lamp, ptr %7, i64 0, i32 61
  %322 = load float, ptr %321, align 8, !tbaa !318
  %323 = getelementptr inbounds %struct.Lamp, ptr %7, i64 0, i32 62
  %324 = load float, ptr %323, align 4, !tbaa !319
  call void @InitAtmosphere(ptr noundef %316, float noundef nofpclass(nan inf) %318, float noundef nofpclass(nan inf) 1.000000e+00, float noundef nofpclass(nan inf) 1.000000e+00, float noundef nofpclass(nan inf) %320, float noundef nofpclass(nan inf) %322, float noundef nofpclass(nan inf) %324) #16
  br label %327

325:                                              ; preds = %170
  %326 = getelementptr inbounds %struct.LampRen, ptr %28, i64 0, i32 49
  store i16 0, ptr %326, align 8, !tbaa !5
  br label %327

327:                                              ; preds = %261, %209, %292, %325, %181
  %328 = getelementptr inbounds %struct.Lamp, ptr %7, i64 0, i32 17
  %329 = load float, ptr %328, align 4, !tbaa !320
  %330 = getelementptr inbounds %struct.LampRen, ptr %28, i64 0, i32 18
  %331 = load i32, ptr %76, align 4, !tbaa !277
  %332 = and i32 %331, 2
  %333 = icmp ne i32 %332, 0
  %334 = fcmp fast ogt float %329, 0x4007BC89C0000000
  %335 = select i1 %333, i1 %334, i1 false
  %336 = fmul fast float %329, 5.000000e-01
  %337 = select i1 %335, float 0x3FF7BC89C0000000, float %336
  %338 = call fast float @llvm.cos.f32(float %337)
  store float %338, ptr %330, align 8, !tbaa !321
  %339 = fsub fast float 1.000000e+00, %338
  %340 = getelementptr inbounds %struct.Lamp, ptr %7, i64 0, i32 18
  %341 = load float, ptr %340, align 8, !tbaa !322
  %342 = fmul fast float %339, %341
  %343 = getelementptr inbounds %struct.LampRen, ptr %28, i64 0, i32 19
  store float %342, ptr %343, align 4, !tbaa !323
  %344 = getelementptr inbounds %struct.LampRen, ptr %28, i64 0, i32 69
  %345 = getelementptr inbounds %struct.Lamp, ptr %7, i64 0, i32 69
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(144) %344, ptr noundef nonnull align 8 dereferenceable(144) %345, i64 144, i1 false)
  %346 = getelementptr inbounds %struct.Object, ptr %1, i64 0, i32 52
  %347 = load i32, ptr %346, align 8, !tbaa !114
  %348 = and i32 %347, 16777215
  %349 = getelementptr inbounds %struct.LampRen, ptr %28, i64 0, i32 17
  store i32 %348, ptr %349, align 4, !tbaa !324
  %350 = getelementptr inbounds %struct.Lamp, ptr %7, i64 0, i32 23
  %351 = load i16, ptr %350, align 8, !tbaa !325
  %352 = getelementptr inbounds %struct.LampRen, ptr %28, i64 0, i32 27
  store i16 %351, ptr %352, align 4, !tbaa !326
  %353 = getelementptr inbounds %struct.Lamp, ptr %7, i64 0, i32 20
  %354 = getelementptr inbounds %struct.LampRen, ptr %28, i64 0, i32 28
  %355 = load <2 x float>, ptr %353, align 8, !tbaa !13
  store <2 x float> %355, ptr %354, align 8, !tbaa !13
  %356 = getelementptr inbounds %struct.Lamp, ptr %7, i64 0, i32 22
  %357 = load ptr, ptr %356, align 8, !tbaa !327
  %358 = call ptr @curvemapping_copy(ptr noundef %357) #16
  %359 = getelementptr inbounds %struct.LampRen, ptr %28, i64 0, i32 30
  store ptr %358, ptr %359, align 8, !tbaa !74
  %360 = icmp eq ptr %358, null
  br i1 %360, label %362, label %361

361:                                              ; preds = %327
  call void @curvemapping_initialize(ptr noundef nonnull %358) #16
  br label %362

362:                                              ; preds = %361, %327
  %363 = load i16, ptr %74, align 8, !tbaa !276
  %364 = icmp eq i16 %363, 2
  br i1 %364, label %365, label %444

365:                                              ; preds = %362
  %366 = load <2 x float>, ptr %37, align 4, !tbaa !13
  %367 = fmul fast <2 x float> %366, %366
  %368 = shufflevector <2 x float> %367, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %369 = fadd fast <2 x float> %368, %367
  %370 = extractelement <2 x float> %369, i64 0
  %371 = getelementptr inbounds %struct.LampRen, ptr %28, i64 0, i32 59, i64 0, i64 2
  %372 = load float, ptr %371, align 4, !tbaa !13
  %373 = fmul fast float %372, %372
  %374 = fadd fast float %370, %373
  %375 = fcmp fast ogt float %374, 0x38AA95A5C0000000
  br i1 %375, label %376, label %383

376:                                              ; preds = %365
  %377 = call fast float @llvm.sqrt.f32(float %374)
  %378 = fdiv fast float 1.000000e+00, %377
  %379 = insertelement <2 x float> poison, float %378, i64 0
  %380 = shufflevector <2 x float> %379, <2 x float> poison, <2 x i32> zeroinitializer
  %381 = fmul fast <2 x float> %380, %366
  %382 = fmul fast float %378, %372
  br label %383

383:                                              ; preds = %365, %376
  %384 = phi float [ %382, %376 ], [ 0.000000e+00, %365 ]
  %385 = phi <2 x float> [ %381, %376 ], [ zeroinitializer, %365 ]
  store <2 x float> %385, ptr %37, align 4
  store float %384, ptr %371, align 4
  %386 = getelementptr inbounds %struct.LampRen, ptr %28, i64 0, i32 59, i64 1
  %387 = load <2 x float>, ptr %386, align 4, !tbaa !13
  %388 = fmul fast <2 x float> %387, %387
  %389 = shufflevector <2 x float> %388, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %390 = fadd fast <2 x float> %389, %388
  %391 = extractelement <2 x float> %390, i64 0
  %392 = getelementptr inbounds %struct.LampRen, ptr %28, i64 0, i32 59, i64 1, i64 2
  %393 = load float, ptr %392, align 4, !tbaa !13
  %394 = fmul fast float %393, %393
  %395 = fadd fast float %391, %394
  %396 = fcmp fast ogt float %395, 0x38AA95A5C0000000
  br i1 %396, label %397, label %404

397:                                              ; preds = %383
  %398 = call fast float @llvm.sqrt.f32(float %395)
  %399 = fdiv fast float 1.000000e+00, %398
  %400 = insertelement <2 x float> poison, float %399, i64 0
  %401 = shufflevector <2 x float> %400, <2 x float> poison, <2 x i32> zeroinitializer
  %402 = fmul fast <2 x float> %401, %387
  %403 = fmul fast float %399, %393
  br label %404

404:                                              ; preds = %383, %397
  %405 = phi float [ %403, %397 ], [ 0.000000e+00, %383 ]
  %406 = phi <2 x float> [ %402, %397 ], [ zeroinitializer, %383 ]
  store <2 x float> %406, ptr %386, align 4
  store float %405, ptr %392, align 4
  %407 = getelementptr inbounds %struct.LampRen, ptr %28, i64 0, i32 59, i64 2
  %408 = load <2 x float>, ptr %407, align 4, !tbaa !13
  %409 = fmul fast <2 x float> %408, %408
  %410 = shufflevector <2 x float> %409, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %411 = fadd fast <2 x float> %410, %409
  %412 = extractelement <2 x float> %411, i64 0
  %413 = getelementptr inbounds %struct.LampRen, ptr %28, i64 0, i32 59, i64 2, i64 2
  %414 = load float, ptr %413, align 4, !tbaa !13
  %415 = fmul fast float %414, %414
  %416 = fadd fast float %412, %415
  %417 = fcmp fast ogt float %416, 0x38AA95A5C0000000
  br i1 %417, label %418, label %425

418:                                              ; preds = %404
  %419 = call fast float @llvm.sqrt.f32(float %416)
  %420 = fdiv fast float 1.000000e+00, %419
  %421 = insertelement <2 x float> poison, float %420, i64 0
  %422 = shufflevector <2 x float> %421, <2 x float> poison, <2 x i32> zeroinitializer
  %423 = fmul fast <2 x float> %422, %408
  %424 = fmul fast float %420, %414
  br label %425

425:                                              ; preds = %404, %418
  %426 = phi float [ %424, %418 ], [ 0.000000e+00, %404 ]
  %427 = phi <2 x float> [ %423, %418 ], [ zeroinitializer, %404 ]
  store <2 x float> %427, ptr %407, align 4
  store float %426, ptr %413, align 4
  %428 = load float, ptr %330, align 8, !tbaa !321
  %429 = fcmp fast ugt float %428, -1.000000e+00
  br i1 %429, label %430, label %434

430:                                              ; preds = %425
  %431 = fcmp fast ult float %428, 1.000000e+00
  br i1 %431, label %432, label %434

432:                                              ; preds = %430
  %433 = call fast nofpclass(nan inf) float @acosf(float noundef nofpclass(nan inf) %428) #17
  br label %434

434:                                              ; preds = %425, %430, %432
  %435 = phi float [ %433, %432 ], [ 0x400921FB60000000, %425 ], [ 0.000000e+00, %430 ]
  %436 = call fast float @tanf(float %435) #18
  %437 = fdiv fast float 1.000000e+00, %436
  %438 = getelementptr inbounds %struct.LampRen, ptr %28, i64 0, i32 60
  store float %437, ptr %438, align 4, !tbaa !328
  %439 = load i32, ptr %76, align 4, !tbaa !277
  %440 = and i32 %439, 8225
  %441 = icmp eq i32 %440, 32
  br i1 %441, label %442, label %444

442:                                              ; preds = %434
  %443 = add nsw i32 %439, -32
  store i32 %443, ptr %76, align 4, !tbaa !277
  br label %444

444:                                              ; preds = %434, %442, %362
  %445 = load i16, ptr %72, align 8, !tbaa !275
  switch i16 %445, label %485 [
    i16 2, label %446
    i16 3, label %482
  ]

446:                                              ; preds = %444
  %447 = load i32, ptr %10, align 4, !tbaa !261
  %448 = and i32 %447, 2
  %449 = icmp eq i32 %448, 0
  br i1 %449, label %485, label %450

450:                                              ; preds = %446
  %451 = load i8, ptr %46, align 1, !tbaa !265
  %452 = icmp eq i8 %451, 3
  br i1 %452, label %485, label %453

453:                                              ; preds = %450
  %454 = load float, ptr %121, align 4, !tbaa !281
  %455 = fcmp fast ogt float %454, 0.000000e+00
  br i1 %455, label %456, label %485

456:                                              ; preds = %453
  %457 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 4
  %458 = load i16, ptr %457, align 8, !tbaa !234
  %459 = or i16 %458, 8
  store i16 %459, ptr %457, align 8, !tbaa !234
  %460 = getelementptr inbounds %struct.LampRen, ptr %28, i64 0, i32 61
  %461 = load <2 x float>, ptr %110, align 4, !tbaa !13
  %462 = fneg fast <2 x float> %461
  store <2 x float> %462, ptr %460, align 8, !tbaa !13
  %463 = load float, ptr %117, align 4, !tbaa !13
  %464 = fneg fast float %463
  %465 = getelementptr inbounds %struct.LampRen, ptr %28, i64 0, i32 61, i64 2
  store float %464, ptr %465, align 8, !tbaa !13
  call void @mul_m3_v3(ptr noundef nonnull %37, ptr noundef nonnull %460) #16
  %466 = load float, ptr %330, align 8, !tbaa !321
  %467 = fcmp fast ugt float %466, -1.000000e+00
  br i1 %467, label %468, label %472

468:                                              ; preds = %456
  %469 = fcmp fast ult float %466, 1.000000e+00
  br i1 %469, label %470, label %472

470:                                              ; preds = %468
  %471 = call fast nofpclass(nan inf) float @acosf(float noundef nofpclass(nan inf) %466) #17
  br label %472

472:                                              ; preds = %456, %468, %470
  %473 = phi float [ %471, %470 ], [ 0x400921FB60000000, %456 ], [ 0.000000e+00, %468 ]
  %474 = call fast float @llvm.sin.f32(float %473)
  %475 = fdiv fast float %474, %466
  %476 = getelementptr inbounds %struct.LampRen, ptr %28, i64 0, i32 62
  store float %475, ptr %476, align 4, !tbaa !329
  %477 = load float, ptr %465, align 8, !tbaa !13
  %478 = fmul fast float %477, %475
  store float %478, ptr %465, align 8, !tbaa !13
  %479 = load i16, ptr %49, align 4, !tbaa !266
  %480 = icmp eq i16 %479, 2
  br i1 %480, label %481, label %485

481:                                              ; preds = %472
  store i16 0, ptr %49, align 4, !tbaa !266
  br label %485

482:                                              ; preds = %444
  %483 = load i32, ptr %76, align 4, !tbaa !277
  %484 = and i32 %483, -8194
  store i32 %484, ptr %76, align 4, !tbaa !277
  br label %485

485:                                              ; preds = %444, %446, %450, %482, %453, %481, %472
  %486 = load i8, ptr getelementptr inbounds (%struct.Global, ptr @G, i64 0, i32 13), align 2
  %487 = freeze i8 %486
  %488 = icmp eq i8 %487, 0
  %489 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 5
  br i1 %488, label %490, label %516

490:                                              ; preds = %485, %513
  %491 = phi i64 [ %514, %513 ], [ 0, %485 ]
  %492 = getelementptr inbounds %struct.Lamp, ptr %7, i64 0, i32 69, i64 %491
  %493 = load ptr, ptr %492, align 8, !tbaa !16
  %494 = icmp eq ptr %493, null
  br i1 %494, label %513, label %495

495:                                              ; preds = %490
  %496 = getelementptr inbounds %struct.MTex, ptr %493, i64 0, i32 5
  %497 = load ptr, ptr %496, align 8, !tbaa !48
  %498 = icmp eq ptr %497, null
  br i1 %498, label %513, label %499

499:                                              ; preds = %495
  %500 = getelementptr inbounds %struct.MTex, ptr %493, i64 0, i32 1
  %501 = load i16, ptr %500, align 2, !tbaa !330
  %502 = and i16 %501, 1
  %503 = icmp eq i16 %502, 0
  br i1 %503, label %507, label %504

504:                                              ; preds = %499
  %505 = load i32, ptr %76, align 4, !tbaa !277
  %506 = or i32 %505, 256
  store i32 %506, ptr %76, align 4, !tbaa !277
  br label %507

507:                                              ; preds = %504, %499
  %508 = and i16 %501, 2
  %509 = icmp eq i16 %508, 0
  br i1 %509, label %513, label %510

510:                                              ; preds = %507
  %511 = load i32, ptr %76, align 4, !tbaa !277
  %512 = or i32 %511, 65536
  store i32 %512, ptr %76, align 4, !tbaa !277
  br label %513

513:                                              ; preds = %507, %510, %495, %490
  %514 = add nuw nsw i64 %491, 1
  %515 = icmp eq i64 %514, 18
  br i1 %515, label %552, label %490, !llvm.loop !331

516:                                              ; preds = %485, %549
  %517 = phi i64 [ %550, %549 ], [ 0, %485 ]
  %518 = getelementptr inbounds %struct.Lamp, ptr %7, i64 0, i32 69, i64 %517
  %519 = load ptr, ptr %518, align 8, !tbaa !16
  %520 = icmp eq ptr %519, null
  br i1 %520, label %549, label %521

521:                                              ; preds = %516
  %522 = getelementptr inbounds %struct.MTex, ptr %519, i64 0, i32 5
  %523 = load ptr, ptr %522, align 8, !tbaa !48
  %524 = icmp eq ptr %523, null
  br i1 %524, label %549, label %525

525:                                              ; preds = %521
  %526 = getelementptr inbounds %struct.MTex, ptr %519, i64 0, i32 1
  %527 = load i16, ptr %526, align 2, !tbaa !330
  %528 = and i16 %527, 1
  %529 = icmp eq i16 %528, 0
  br i1 %529, label %533, label %530

530:                                              ; preds = %525
  %531 = load i32, ptr %76, align 4, !tbaa !277
  %532 = or i32 %531, 256
  store i32 %532, ptr %76, align 4, !tbaa !277
  br label %533

533:                                              ; preds = %530, %525
  %534 = and i16 %527, 2
  %535 = icmp eq i16 %534, 0
  br i1 %535, label %539, label %536

536:                                              ; preds = %533
  %537 = load i32, ptr %76, align 4, !tbaa !277
  %538 = or i32 %537, 65536
  store i32 %538, ptr %76, align 4, !tbaa !277
  br label %539

539:                                              ; preds = %536, %533
  %540 = load i16, ptr %489, align 2, !tbaa !51
  %541 = icmp eq i16 %540, 0
  br i1 %541, label %549, label %542

542:                                              ; preds = %539
  %543 = getelementptr inbounds %struct.Tex, ptr %523, i64 0, i32 32
  %544 = load i16, ptr %543, align 8, !tbaa !332
  %545 = icmp eq i16 %544, 8
  br i1 %545, label %546, label %549

546:                                              ; preds = %542
  %547 = load i32, ptr %76, align 4, !tbaa !277
  %548 = or i32 %547, 512
  store i32 %548, ptr %76, align 4, !tbaa !277
  br label %549

549:                                              ; preds = %516, %521, %539, %546, %542
  %550 = add nuw nsw i64 %517, 1
  %551 = icmp eq i64 %550, 18
  br i1 %551, label %552, label %516, !llvm.loop !331

552:                                              ; preds = %549, %513
  %553 = load i32, ptr %76, align 4, !tbaa !277
  %554 = and i32 %553, 8192
  %555 = icmp ne i32 %554, 0
  %556 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 45, i32 47
  %557 = load i32, ptr %556, align 8, !tbaa !55
  %558 = and i32 %557, 65536
  %559 = icmp eq i32 %558, 0
  %560 = select i1 %555, i1 %559, i1 false
  br i1 %560, label %561, label %563

561:                                              ; preds = %552
  %562 = and i32 %553, -8193
  store i32 %562, ptr %76, align 4, !tbaa !277
  br label %563

563:                                              ; preds = %552, %561
  %564 = phi i32 [ %562, %561 ], [ %553, %552 ]
  %565 = and i32 %557, 2
  %566 = icmp eq i32 %565, 0
  br i1 %566, label %700, label %567

567:                                              ; preds = %563
  %568 = load i16, ptr %72, align 8, !tbaa !275
  switch i16 %568, label %633 [
    i16 4, label %569
    i16 2, label %576
  ]

569:                                              ; preds = %567
  %570 = and i32 %564, 8192
  %571 = icmp eq i32 %570, 0
  br i1 %571, label %633, label %572

572:                                              ; preds = %569
  %573 = load i16, ptr %173, align 2, !tbaa !297
  %574 = icmp eq i16 %573, 0
  br i1 %574, label %575, label %633

575:                                              ; preds = %572
  call void @init_jitter_plane(ptr noundef nonnull %28) #16
  br label %633

576:                                              ; preds = %567
  %577 = and i32 %564, 1
  %578 = icmp eq i32 %577, 0
  br i1 %578, label %633, label %579

579:                                              ; preds = %576
  %580 = getelementptr inbounds %struct.Lamp, ptr %7, i64 0, i32 36
  %581 = load i8, ptr %580, align 8, !tbaa !335
  %582 = zext i8 %581 to i16
  %583 = getelementptr inbounds %struct.LampRen, ptr %28, i64 0, i32 37
  store i16 %582, ptr %583, align 2, !tbaa !336
  call void @copy_m4_m4(ptr noundef nonnull %4, ptr noundef nonnull %32) #16
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %3) #16
  %584 = load ptr, ptr @MEM_callocN, align 8, !tbaa !16
  %585 = call ptr %584(i64 noundef 280, ptr noundef nonnull @.str.12) #16
  %586 = getelementptr inbounds %struct.LampRen, ptr %28, i64 0, i32 57
  store ptr %585, ptr %586, align 8, !tbaa !337
  %587 = icmp eq ptr %585, null
  br i1 %587, label %632, label %588

588:                                              ; preds = %579
  %589 = getelementptr inbounds %struct.ShadBuf, ptr %585, i64 0, i32 13
  %590 = load <2 x float>, ptr %110, align 4, !tbaa !13
  %591 = fptosi <2 x float> %590 to <2 x i32>
  store <2 x i32> %591, ptr %589, align 4, !tbaa !47
  %592 = load float, ptr %117, align 4, !tbaa !13
  %593 = fptosi float %592 to i32
  %594 = getelementptr inbounds %struct.ShadBuf, ptr %585, i64 0, i32 13, i64 2
  store i32 %593, ptr %594, align 4, !tbaa !47
  %595 = load i16, ptr %39, align 8, !tbaa !338
  %596 = sext i16 %595 to i32
  %597 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 45, i32 30
  %598 = load i16, ptr %597, align 2, !tbaa !339
  %599 = sext i16 %598 to i32
  %600 = mul nsw i32 %599, %596
  %601 = sdiv i32 %600, 100
  %602 = getelementptr inbounds %struct.ShadBuf, ptr %585, i64 0, i32 14
  %603 = icmp slt i32 %600, 51200
  %604 = call i32 @llvm.smin.i32(i32 %601, i32 %596)
  %605 = and i32 %604, -16
  %606 = select i1 %603, i32 512, i32 %605
  store i32 %606, ptr %602, align 8, !tbaa !340
  %607 = load i16, ptr %40, align 2, !tbaa !342
  store i16 %607, ptr %585, align 8, !tbaa !343
  %608 = load float, ptr %55, align 4, !tbaa !270
  %609 = getelementptr inbounds %struct.ShadBuf, ptr %585, i64 0, i32 11
  store float %608, ptr %609, align 4, !tbaa !344
  %610 = load i16, ptr %58, align 8, !tbaa !272
  %611 = getelementptr inbounds %struct.ShadBuf, ptr %585, i64 0, i32 1
  store i16 %610, ptr %611, align 2, !tbaa !345
  call void @normalize_m4(ptr noundef nonnull %4) #16
  %612 = getelementptr inbounds %struct.ShadBuf, ptr %585, i64 0, i32 5
  %613 = call zeroext i8 @invert_m4_m4(ptr noundef nonnull %612, ptr noundef nonnull %4) #16
  %614 = call zeroext i8 @invert_m4_m4(ptr noundef nonnull %3, ptr noundef nonnull %31) #16
  %615 = getelementptr inbounds %struct.ShadBuf, ptr %585, i64 0, i32 4
  call void @mul_m4_m4m4(ptr noundef nonnull %615, ptr noundef nonnull %612, ptr noundef nonnull %3) #16
  %616 = getelementptr inbounds %struct.ShadBuf, ptr %585, i64 0, i32 8
  %617 = load <2 x float>, ptr %61, align 4, !tbaa !13
  store <2 x float> %617, ptr %616, align 8, !tbaa !13
  %618 = load float, ptr %64, align 4, !tbaa !346
  %619 = fmul fast float %618, 0x41847AE140000000
  %620 = fptosi float %619 to i32
  %621 = getelementptr inbounds %struct.ShadBuf, ptr %585, i64 0, i32 15
  store i32 %620, ptr %621, align 4, !tbaa !347
  %622 = load i16, ptr %49, align 4, !tbaa !266
  %623 = and i16 %622, -2
  %624 = icmp eq i16 %623, 2
  br i1 %624, label %625, label %629

625:                                              ; preds = %588
  %626 = sitofp i32 %620 to float
  %627 = fmul fast float %626, 0x3FB99999A0000000
  %628 = fptosi float %627 to i32
  store i32 %628, ptr %621, align 4, !tbaa !347
  br label %629

629:                                              ; preds = %625, %588
  %630 = load float, ptr %67, align 8, !tbaa !348
  %631 = getelementptr inbounds %struct.ShadBuf, ptr %585, i64 0, i32 12
  store float %630, ptr %631, align 8, !tbaa !349
  br label %632

632:                                              ; preds = %579, %629
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %3) #16
  br label %633

633:                                              ; preds = %567, %569, %572, %576, %632, %575
  %634 = getelementptr inbounds %struct.LampRen, ptr %28, i64 0, i32 57
  %635 = load ptr, ptr %634, align 8, !tbaa !337
  %636 = icmp eq ptr %635, null
  br i1 %636, label %637, label %641

637:                                              ; preds = %633
  %638 = load i32, ptr %76, align 4, !tbaa !277
  %639 = and i32 %638, 8192
  %640 = icmp eq i32 %639, 0
  br i1 %640, label %700, label %641

641:                                              ; preds = %637, %633
  %642 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 42
  store i32 0, ptr %642, align 8
  %643 = load ptr, ptr @MEM_mallocN, align 8, !tbaa !16
  %644 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 45, i32 14
  %645 = load i16, ptr %644, align 2, !tbaa !350
  %646 = sext i16 %645 to i64
  %647 = mul nsw i64 %646, 320
  %648 = call ptr %643(i64 noundef %647, ptr noundef nonnull @.str.11) #16
  %649 = getelementptr inbounds %struct.LampRen, ptr %28, i64 0, i32 67
  store ptr %648, ptr %649, align 8, !tbaa !72
  %650 = load i16, ptr %644, align 2, !tbaa !350
  %651 = sext i16 %650 to i32
  %652 = icmp sgt i16 %650, 0
  br i1 %652, label %653, label %700

653:                                              ; preds = %641
  %654 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 45, i32 54
  %655 = load i16, ptr %654, align 2, !tbaa !351
  %656 = sext i16 %655 to i32
  %657 = icmp sgt i16 %655, 0
  br i1 %657, label %658, label %700

658:                                              ; preds = %653
  %659 = and i32 %656, 7
  %660 = icmp ult i16 %655, 8
  %661 = and i32 %656, -8
  %662 = icmp eq i32 %659, 0
  br label %663

663:                                              ; preds = %658, %696
  %664 = phi i32 [ %697, %696 ], [ 0, %658 ]
  %665 = phi ptr [ %698, %696 ], [ %648, %658 ]
  br i1 %660, label %687, label %666

666:                                              ; preds = %663, %666
  %667 = phi ptr [ %684, %666 ], [ %665, %663 ]
  %668 = phi i32 [ %685, %666 ], [ 0, %663 ]
  store i32 -1, ptr %667, align 4, !tbaa !352
  %669 = getelementptr inbounds %struct.LampShadowSubSample, ptr %667, i64 0, i32 1
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, ptr %669, align 4, !tbaa !13
  %670 = getelementptr inbounds %struct.LampShadowSubSample, ptr %667, i64 1
  store i32 -1, ptr %670, align 4, !tbaa !352
  %671 = getelementptr inbounds %struct.LampShadowSubSample, ptr %667, i64 1, i32 1
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, ptr %671, align 4, !tbaa !13
  %672 = getelementptr inbounds %struct.LampShadowSubSample, ptr %667, i64 2
  store i32 -1, ptr %672, align 4, !tbaa !352
  %673 = getelementptr inbounds %struct.LampShadowSubSample, ptr %667, i64 2, i32 1
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, ptr %673, align 4, !tbaa !13
  %674 = getelementptr inbounds %struct.LampShadowSubSample, ptr %667, i64 3
  store i32 -1, ptr %674, align 4, !tbaa !352
  %675 = getelementptr inbounds %struct.LampShadowSubSample, ptr %667, i64 3, i32 1
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, ptr %675, align 4, !tbaa !13
  %676 = getelementptr inbounds %struct.LampShadowSubSample, ptr %667, i64 4
  store i32 -1, ptr %676, align 4, !tbaa !352
  %677 = getelementptr inbounds %struct.LampShadowSubSample, ptr %667, i64 4, i32 1
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, ptr %677, align 4, !tbaa !13
  %678 = getelementptr inbounds %struct.LampShadowSubSample, ptr %667, i64 5
  store i32 -1, ptr %678, align 4, !tbaa !352
  %679 = getelementptr inbounds %struct.LampShadowSubSample, ptr %667, i64 5, i32 1
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, ptr %679, align 4, !tbaa !13
  %680 = getelementptr inbounds %struct.LampShadowSubSample, ptr %667, i64 6
  store i32 -1, ptr %680, align 4, !tbaa !352
  %681 = getelementptr inbounds %struct.LampShadowSubSample, ptr %667, i64 6, i32 1
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, ptr %681, align 4, !tbaa !13
  %682 = getelementptr inbounds %struct.LampShadowSubSample, ptr %667, i64 7
  store i32 -1, ptr %682, align 4, !tbaa !352
  %683 = getelementptr inbounds %struct.LampShadowSubSample, ptr %667, i64 7, i32 1
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, ptr %683, align 4, !tbaa !13
  %684 = getelementptr inbounds %struct.LampShadowSubSample, ptr %667, i64 8
  %685 = add i32 %668, 8
  %686 = icmp eq i32 %685, %661
  br i1 %686, label %687, label %666, !llvm.loop !354

687:                                              ; preds = %666, %663
  %688 = phi ptr [ %665, %663 ], [ %684, %666 ]
  br i1 %662, label %696, label %689

689:                                              ; preds = %687, %689
  %690 = phi ptr [ %693, %689 ], [ %688, %687 ]
  %691 = phi i32 [ %694, %689 ], [ 0, %687 ]
  store i32 -1, ptr %690, align 4, !tbaa !352
  %692 = getelementptr inbounds %struct.LampShadowSubSample, ptr %690, i64 0, i32 1
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, ptr %692, align 4, !tbaa !13
  %693 = getelementptr inbounds %struct.LampShadowSubSample, ptr %690, i64 1
  %694 = add i32 %691, 1
  %695 = icmp eq i32 %694, %659
  br i1 %695, label %696, label %689, !llvm.loop !355

696:                                              ; preds = %689, %687
  %697 = add nuw nsw i32 %664, 1
  %698 = getelementptr inbounds %struct.LampShadowSample, ptr %665, i64 1
  %699 = icmp eq i32 %697, %651
  br i1 %699, label %700, label %663, !llvm.loop !357

700:                                              ; preds = %696, %653, %641, %563, %637, %14, %2
  %701 = phi ptr [ null, %2 ], [ null, %14 ], [ %24, %637 ], [ %24, %563 ], [ %24, %641 ], [ %24, %653 ], [ %24, %696 ]
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %5) #16
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %4) #16
  ret ptr %701
}

declare nofpclass(nan inf) double @PIL_check_seconds_timer() local_unnamed_addr #5

declare void @BLI_addtail(ptr noundef, ptr noundef) local_unnamed_addr #5

declare void @init_jitter_plane(ptr noundef) local_unnamed_addr #5

declare void @InitSunSky(ptr noundef, float noundef nofpclass(nan inf), ptr noundef, float noundef nofpclass(nan inf), float noundef nofpclass(nan inf), float noundef nofpclass(nan inf), float noundef nofpclass(nan inf), float noundef nofpclass(nan inf), float noundef nofpclass(nan inf), i16 noundef signext, float noundef nofpclass(nan inf), float noundef nofpclass(nan inf)) local_unnamed_addr #5

declare void @InitAtmosphere(ptr noundef, float noundef nofpclass(nan inf), float noundef nofpclass(nan inf), float noundef nofpclass(nan inf), float noundef nofpclass(nan inf), float noundef nofpclass(nan inf), float noundef nofpclass(nan inf)) local_unnamed_addr #5

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.cos.f32(float) #2

declare ptr @curvemapping_copy(ptr noundef) local_unnamed_addr #5

declare void @curvemapping_initialize(ptr noundef) local_unnamed_addr #5

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.sin.f32(float) #2

declare void @mul_m3_v3(ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare nofpclass(nan inf) float @acosf(float noundef nofpclass(nan inf)) local_unnamed_addr #9

declare void @normalize_m4(ptr noundef) local_unnamed_addr #5

declare void @psys_render_set(ptr noundef, ptr noundef, ptr noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

declare ptr @RE_addRenderObject(ptr noundef, ptr noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @init_render_object_data(ptr noundef %0, ptr noundef %1, i32 noundef %2) unnamed_addr #3 {
  %4 = alloca [3 x float], align 8
  %5 = alloca [3 x float], align 8
  %6 = alloca [3 x float], align 8
  %7 = alloca [3 x float], align 8
  %8 = alloca [3 x float], align 8
  %9 = alloca [4 x [4 x float]], align 16
  %10 = alloca [3 x [3 x float]], align 16
  %11 = alloca %struct.ListBase, align 8
  %12 = alloca [3 x float], align 4
  %13 = alloca [3 x float], align 4
  %14 = alloca ptr, align 8
  %15 = alloca [3 x float], align 8
  %16 = alloca [4 x [4 x float]], align 16
  %17 = alloca [3 x [3 x float]], align 16
  %18 = alloca [3 x [3 x float]], align 16
  %19 = alloca [4 x [4 x float]], align 16
  %20 = alloca [4 x i32], align 16
  %21 = alloca ptr, align 8
  %22 = alloca %struct.ListBase, align 8
  %23 = alloca [4 x [4 x float]], align 16
  %24 = alloca ptr, align 8
  %25 = alloca ptr, align 8
  %26 = alloca %struct.ListBase, align 8
  %27 = alloca [3 x float], align 8
  %28 = alloca [4 x [4 x float]], align 16
  %29 = alloca [4 x [4 x float]], align 16
  %30 = alloca i32, align 4
  %31 = alloca [3 x float], align 8
  %32 = alloca i32, align 4
  %33 = alloca i32, align 4
  %34 = alloca i32, align 4
  %35 = alloca i32, align 4
  %36 = alloca %struct.ParticleKey, align 16
  %37 = alloca %struct.ParticleBillboardData, align 8
  %38 = alloca %struct.ParticleSimulationData, align 8
  %39 = alloca %struct.ParticleStrandData, align 8
  %40 = alloca [3 x float], align 8
  %41 = alloca [3 x float], align 8
  %42 = alloca [3 x float], align 8
  %43 = alloca [4 x [4 x float]], align 16
  %44 = alloca [3 x [3 x float]], align 16
  %45 = alloca [3 x float], align 4
  %46 = alloca [3 x float], align 4
  %47 = alloca [4 x [4 x float]], align 16
  %48 = alloca float, align 4
  %49 = alloca float, align 4
  %50 = alloca float, align 4
  %51 = alloca [2 x float], align 4
  %52 = alloca [3 x float], align 4
  %53 = getelementptr inbounds %struct.ObjectRen, ptr %1, i64 0, i32 2
  %54 = load ptr, ptr %53, align 8, !tbaa !148
  %55 = getelementptr inbounds %struct.ObjectRen, ptr %1, i64 0, i32 6
  %56 = load i32, ptr %55, align 4, !tbaa !150
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %1481, label %58

58:                                               ; preds = %3
  %59 = getelementptr inbounds %struct.ObjectRen, ptr %1, i64 0, i32 1
  %60 = load ptr, ptr %59, align 8, !tbaa !358
  %61 = icmp eq ptr %60, null
  br i1 %61, label %71, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %struct.ObjectRen, ptr %60, i64 0, i32 2
  %64 = load ptr, ptr %63, align 8, !tbaa !148
  %65 = icmp eq ptr %64, %54
  br i1 %65, label %66, label %71

66:                                               ; preds = %62
  %67 = getelementptr inbounds %struct.ObjectRen, ptr %60, i64 0, i32 7
  %68 = load i32, ptr %67, align 8, !tbaa !151
  %69 = and i32 %68, 1
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %93

71:                                               ; preds = %66, %62, %58
  %72 = getelementptr inbounds %struct.Object, ptr %54, i64 0, i32 3
  %73 = load i16, ptr %72, align 8, !tbaa !115
  %74 = icmp eq i16 %73, 1
  br i1 %74, label %75, label %93

75:                                               ; preds = %71
  %76 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 45, i32 46
  %77 = load i32, ptr %76, align 4, !tbaa !70
  %78 = and i32 %77, 524288
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 44
  %81 = load ptr, ptr %80, align 8, !tbaa !17
  %82 = load i64, ptr @CD_MASK_BAREMESH, align 8, !tbaa !249
  %83 = or i64 %82, 96
  br i1 %79, label %86, label %84

84:                                               ; preds = %75
  %85 = tail call ptr @mesh_create_derived_view(ptr noundef %81, ptr noundef nonnull %54, i64 noundef %83) #16
  br label %88

86:                                               ; preds = %75
  %87 = tail call ptr @mesh_create_derived_render(ptr noundef %81, ptr noundef nonnull %54, i64 noundef %83) #16
  br label %88

88:                                               ; preds = %86, %84
  %89 = phi ptr [ %85, %84 ], [ %87, %86 ]
  %90 = getelementptr inbounds %struct.DerivedMesh, ptr %89, i64 0, i32 95
  %91 = load ptr, ptr %90, align 8, !tbaa !250
  tail call void %91(ptr noundef %89) #16
  %92 = load i32, ptr %55, align 4, !tbaa !150
  br label %93

93:                                               ; preds = %88, %71, %66
  %94 = phi i32 [ %92, %88 ], [ %56, %71 ], [ %56, %66 ]
  %95 = getelementptr inbounds %struct.Object, ptr %54, i64 0, i32 109
  %96 = tail call i32 @llvm.smax.i32(i32 %94, i32 1)
  %97 = and i32 %96, 7
  %98 = icmp ult i32 %96, 8
  br i1 %98, label %114, label %99

99:                                               ; preds = %93
  %100 = and i32 %96, 2147483640
  br label %101

101:                                              ; preds = %101, %99
  %102 = phi ptr [ %95, %99 ], [ %111, %101 ]
  %103 = phi i32 [ 0, %99 ], [ %112, %101 ]
  %104 = load ptr, ptr %102, align 8, !tbaa !16
  %105 = load ptr, ptr %104, align 8, !tbaa !16
  %106 = load ptr, ptr %105, align 8, !tbaa !16
  %107 = load ptr, ptr %106, align 8, !tbaa !16
  %108 = load ptr, ptr %107, align 8, !tbaa !16
  %109 = load ptr, ptr %108, align 8, !tbaa !16
  %110 = load ptr, ptr %109, align 8, !tbaa !16
  %111 = load ptr, ptr %110, align 8, !tbaa !16
  %112 = add i32 %103, 8
  %113 = icmp eq i32 %112, %100
  br i1 %113, label %114, label %101, !llvm.loop !359

114:                                              ; preds = %101, %93
  %115 = phi ptr [ undef, %93 ], [ %111, %101 ]
  %116 = phi ptr [ %95, %93 ], [ %111, %101 ]
  %117 = icmp eq i32 %97, 0
  br i1 %117, label %124, label %118

118:                                              ; preds = %114, %118
  %119 = phi ptr [ %121, %118 ], [ %116, %114 ]
  %120 = phi i32 [ %122, %118 ], [ 0, %114 ]
  %121 = load ptr, ptr %119, align 8, !tbaa !16
  %122 = add i32 %120, 1
  %123 = icmp eq i32 %122, %97
  br i1 %123, label %124, label %118, !llvm.loop !360

124:                                              ; preds = %118, %114
  %125 = phi ptr [ %115, %114 ], [ %121, %118 ]
  %126 = load ptr, ptr %53, align 8, !tbaa !148
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %36) #16
  call void @llvm.lifetime.start.p0(i64 96, ptr nonnull %37) #16
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %38) #16
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %38, i8 0, i64 48, i1 false)
  call void @llvm.lifetime.start.p0(i64 72, ptr nonnull %39) #16
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %40) #16
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %41) #16
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %42) #16
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %43) #16
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %44) #16
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %45) #16
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %46) #16
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %47) #16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %48) #16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %49) #16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %50) #16
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %51) #16
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %52) #16
  %127 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 44
  %128 = load ptr, ptr %127, align 8, !tbaa !17
  %129 = tail call fast nofpclass(nan inf) float @BKE_scene_frame_get(ptr noundef %128) #16
  %130 = icmp eq ptr %125, null
  br i1 %130, label %1480, label %131

131:                                              ; preds = %124
  %132 = getelementptr inbounds %struct.ParticleSystem, ptr %125, i64 0, i32 2
  %133 = load ptr, ptr %132, align 8, !tbaa !141
  %134 = getelementptr inbounds %struct.ParticleSystem, ptr %125, i64 0, i32 3
  %135 = load ptr, ptr %134, align 8, !tbaa !361
  %136 = icmp eq ptr %133, null
  %137 = icmp eq ptr %135, null
  %138 = select i1 %136, i1 true, i1 %137
  br i1 %138, label %1480, label %139

139:                                              ; preds = %131
  %140 = tail call i32 @psys_check_enabled(ptr noundef %126, ptr noundef nonnull %125) #16
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %1480, label %142

142:                                              ; preds = %139
  %143 = getelementptr inbounds %struct.ParticleSettings, ptr %133, i64 0, i32 21
  %144 = load i16, ptr %143, align 8, !tbaa !143
  switch i16 %144, label %145 [
    i16 7, label %1480
    i16 8, label %1480
    i16 0, label %1480
  ]

145:                                              ; preds = %142
  %146 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 45, i32 46
  %147 = load i32, ptr %146, align 4, !tbaa !70
  %148 = and i32 %147, 524288
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %155, label %150

150:                                              ; preds = %145
  %151 = getelementptr inbounds %struct.Object, ptr %126, i64 0, i32 27
  %152 = load i32, ptr %151, align 8, !tbaa !362
  %153 = and i32 %152, 32
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %1480

155:                                              ; preds = %150, %145
  %156 = tail call ptr @psys_get_modifier(ptr noundef %126, ptr noundef nonnull %125) #16
  %157 = getelementptr inbounds %struct.ModifierData, ptr %156, i64 0, i32 3
  %158 = load i32, ptr %157, align 4, !tbaa !363
  %159 = and i32 %158, 2
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %1480, label %161

161:                                              ; preds = %155
  %162 = load ptr, ptr %127, align 8, !tbaa !17
  store ptr %162, ptr %38, align 8, !tbaa !364
  %163 = getelementptr inbounds %struct.ParticleSimulationData, ptr %38, i64 0, i32 1
  store ptr %126, ptr %163, align 8, !tbaa !366
  %164 = getelementptr inbounds %struct.ParticleSimulationData, ptr %38, i64 0, i32 2
  store ptr %125, ptr %164, align 8, !tbaa !367
  %165 = getelementptr inbounds %struct.ParticleSimulationData, ptr %38, i64 0, i32 3
  store ptr %156, ptr %165, align 8, !tbaa !368
  %166 = getelementptr inbounds %struct.ParticleSettings, ptr %133, i64 0, i32 11
  %167 = load i16, ptr %166, align 8, !tbaa !369
  %168 = icmp eq i16 %167, 2
  br i1 %168, label %169, label %170

169:                                              ; preds = %161
  call void @psys_count_keyed_targets(ptr noundef nonnull %38) #16
  br label %170

170:                                              ; preds = %169, %161
  %171 = getelementptr inbounds %struct.ParticleSystem, ptr %125, i64 0, i32 28
  %172 = load i32, ptr %171, align 8, !tbaa !370
  %173 = getelementptr inbounds %struct.ParticleSettings, ptr %133, i64 0, i32 7
  %174 = load i16, ptr %173, align 8, !tbaa !371
  %175 = icmp eq i16 %174, 2
  br i1 %175, label %176, label %181

176:                                              ; preds = %170
  %177 = getelementptr inbounds %struct.ParticleSystem, ptr %125, i64 0, i32 8
  %178 = load ptr, ptr %177, align 8, !tbaa !372
  %179 = icmp eq ptr %178, null
  %180 = select i1 %179, i32 0, i32 %172
  br label %181

181:                                              ; preds = %176, %170
  %182 = phi i32 [ %172, %170 ], [ %180, %176 ]
  %183 = load i32, ptr %146, align 4, !tbaa !70
  %184 = and i32 %183, 524288
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %195, label %186

186:                                              ; preds = %181
  %187 = sitofp i32 %182 to float
  %188 = getelementptr inbounds %struct.ParticleSettings, ptr %133, i64 0, i32 30
  %189 = load i16, ptr %188, align 2, !tbaa !373
  %190 = sitofp i16 %189 to float
  %191 = fmul fast float %187, 0x3F847AE140000000
  %192 = fmul fast float %191, %190
  %193 = fptosi float %192 to i32
  %194 = getelementptr inbounds %struct.ParticleSettings, ptr %133, i64 0, i32 24
  br label %197

195:                                              ; preds = %181
  %196 = getelementptr inbounds %struct.ParticleSettings, ptr %133, i64 0, i32 25
  br label %197

197:                                              ; preds = %195, %186
  %198 = phi i32 [ %193, %186 ], [ %182, %195 ]
  %199 = phi ptr [ %194, %186 ], [ %196, %195 ]
  %200 = load i16, ptr %199, align 2, !tbaa !46
  %201 = getelementptr inbounds %struct.ParticleSystem, ptr %125, i64 0, i32 25
  %202 = load i32, ptr %201, align 4, !tbaa !245
  %203 = or i32 %202, 64
  store i32 %203, ptr %201, align 4, !tbaa !245
  %204 = getelementptr %struct.ParticleSystem, ptr %125, i64 0, i32 23
  %205 = load i32, ptr %204, align 4, !tbaa !374
  %206 = call ptr @BLI_rng_new(i32 noundef %205) #16
  %207 = getelementptr inbounds %struct.ParticleSystem, ptr %125, i64 0, i32 26
  %208 = load i32, ptr %207, align 8, !tbaa !375
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %39, i8 0, i64 72, i1 false)
  %209 = getelementptr inbounds %struct.ParticleStrandData, ptr %39, i64 0, i32 13
  store i32 -1, ptr %209, align 4, !tbaa !376
  %210 = getelementptr inbounds %struct.ParticleSettings, ptr %133, i64 0, i32 31
  %211 = load i16, ptr %210, align 4, !tbaa !378
  %212 = call fastcc ptr @give_render_material(ptr noundef nonnull %0, ptr noundef %126, i16 noundef signext %211)
  %213 = getelementptr inbounds %struct.Material, ptr %212, i64 0, i32 59
  %214 = load float, ptr %213, align 4, !tbaa !379
  %215 = getelementptr inbounds %struct.Material, ptr %212, i64 0, i32 39
  %216 = load i8, ptr %215, align 2, !tbaa !380
  %217 = zext i8 %216 to i32
  %218 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 4
  %219 = load i16, ptr %218, align 8, !tbaa !234
  %220 = or i16 %219, 2
  store i16 %220, ptr %218, align 8, !tbaa !234
  %221 = getelementptr inbounds %struct.ParticleSystemModifierData, ptr %156, i64 0, i32 2
  %222 = load ptr, ptr %221, align 8, !tbaa !381
  %223 = getelementptr inbounds %struct.DerivedMesh, ptr %222, i64 0, i32 2
  call void @RE_set_customdata_names(ptr noundef nonnull %1, ptr noundef nonnull %223) #16
  %224 = load ptr, ptr %221, align 8, !tbaa !381
  %225 = getelementptr inbounds %struct.DerivedMesh, ptr %224, i64 0, i32 2
  %226 = call i32 @CustomData_number_of_layers(ptr noundef nonnull %225, i32 noundef 5) #16
  %227 = getelementptr inbounds %struct.ParticleStrandData, ptr %39, i64 0, i32 8
  store i32 %226, ptr %227, align 8, !tbaa !382
  %228 = load ptr, ptr %221, align 8, !tbaa !381
  %229 = getelementptr inbounds %struct.DerivedMesh, ptr %228, i64 0, i32 2
  %230 = call i32 @CustomData_number_of_layers(ptr noundef nonnull %229, i32 noundef 6) #16
  %231 = getelementptr inbounds %struct.ParticleStrandData, ptr %39, i64 0, i32 9
  store i32 %230, ptr %231, align 4, !tbaa !383
  %232 = getelementptr inbounds %struct.Material, ptr %212, i64 0, i32 90
  %233 = load i16, ptr %232, align 4, !tbaa !237
  %234 = and i16 %233, 16
  %235 = icmp ne i16 %234, 0
  %236 = icmp ne i32 %226, 0
  %237 = select i1 %235, i1 %236, i1 false
  br i1 %237, label %238, label %256

238:                                              ; preds = %197
  %239 = load ptr, ptr @MEM_callocN, align 8, !tbaa !16
  %240 = shl nsw i32 %226, 1
  %241 = sext i32 %240 to i64
  %242 = shl nsw i64 %241, 2
  %243 = call ptr %239(i64 noundef %242, ptr noundef nonnull @.str.13) #16
  %244 = getelementptr inbounds %struct.ParticleStrandData, ptr %39, i64 0, i32 2
  store ptr %243, ptr %244, align 8, !tbaa !384
  %245 = getelementptr inbounds %struct.Material, ptr %212, i64 0, i32 69
  %246 = load i8, ptr %245, align 4, !tbaa !45
  %247 = icmp eq i8 %246, 0
  br i1 %247, label %258, label %248

248:                                              ; preds = %238
  %249 = load ptr, ptr %221, align 8, !tbaa !381
  %250 = getelementptr inbounds %struct.DerivedMesh, ptr %249, i64 0, i32 2
  %251 = call i32 @CustomData_get_named_layer_index(ptr noundef nonnull %250, i32 noundef 5, ptr noundef nonnull %245) #16
  %252 = load ptr, ptr %221, align 8, !tbaa !381
  %253 = getelementptr inbounds %struct.DerivedMesh, ptr %252, i64 0, i32 2
  %254 = call i32 @CustomData_get_layer_index(ptr noundef nonnull %253, i32 noundef 5) #16
  %255 = sub nsw i32 %251, %254
  store i32 %255, ptr %209, align 4, !tbaa !376
  br label %258

256:                                              ; preds = %197
  %257 = getelementptr inbounds %struct.ParticleStrandData, ptr %39, i64 0, i32 2
  store ptr null, ptr %257, align 8, !tbaa !384
  br label %258

258:                                              ; preds = %256, %248, %238
  %259 = phi i32 [ -1, %238 ], [ %255, %248 ], [ -1, %256 ]
  %260 = icmp eq i32 %230, 0
  br i1 %260, label %266, label %261

261:                                              ; preds = %258
  %262 = load ptr, ptr @MEM_callocN, align 8, !tbaa !16
  %263 = sext i32 %230 to i64
  %264 = shl nsw i64 %263, 2
  %265 = call ptr %262(i64 noundef %264, ptr noundef nonnull @.str.14) #16
  store ptr %265, ptr %39, align 8, !tbaa !385
  br label %266

266:                                              ; preds = %261, %258
  %267 = load i16, ptr %143, align 8, !tbaa !143
  %268 = icmp eq i16 %267, 9
  br i1 %268, label %269, label %327

269:                                              ; preds = %266
  %270 = load ptr, ptr %221, align 8, !tbaa !381
  %271 = getelementptr inbounds %struct.DerivedMesh, ptr %270, i64 0, i32 2
  %272 = call i32 @CustomData_get_layer_index(ptr noundef nonnull %271, i32 noundef 5) #16
  %273 = load ptr, ptr %221, align 8, !tbaa !381
  %274 = getelementptr inbounds %struct.DerivedMesh, ptr %273, i64 0, i32 2
  %275 = getelementptr inbounds %struct.ParticleSystem, ptr %125, i64 0, i32 35
  %276 = call i32 @CustomData_get_named_layer_index(ptr noundef nonnull %274, i32 noundef 5, ptr noundef nonnull %275) #16
  %277 = getelementptr inbounds %struct.ParticleBillboardData, ptr %37, i64 0, i32 8
  store i32 %276, ptr %277, align 4, !tbaa !47
  %278 = icmp slt i32 %276, 0
  br i1 %278, label %279, label %283

279:                                              ; preds = %269
  %280 = load ptr, ptr %221, align 8, !tbaa !381
  %281 = getelementptr inbounds %struct.DerivedMesh, ptr %280, i64 0, i32 2
  %282 = call i32 @CustomData_get_active_layer_index(ptr noundef nonnull %281, i32 noundef 5) #16
  store i32 %282, ptr %277, align 4, !tbaa !47
  br label %283

283:                                              ; preds = %279, %269
  %284 = load ptr, ptr %221, align 8, !tbaa !381
  %285 = getelementptr inbounds %struct.DerivedMesh, ptr %284, i64 0, i32 2
  %286 = getelementptr inbounds %struct.ParticleSystem, ptr %125, i64 0, i32 35, i64 1
  %287 = call i32 @CustomData_get_named_layer_index(ptr noundef nonnull %285, i32 noundef 5, ptr noundef nonnull %286) #16
  %288 = getelementptr inbounds %struct.ParticleBillboardData, ptr %37, i64 0, i32 8, i64 1
  store i32 %287, ptr %288, align 8, !tbaa !47
  %289 = load ptr, ptr %221, align 8, !tbaa !381
  %290 = getelementptr inbounds %struct.DerivedMesh, ptr %289, i64 0, i32 2
  %291 = getelementptr inbounds %struct.ParticleSystem, ptr %125, i64 0, i32 35, i64 2
  %292 = call i32 @CustomData_get_named_layer_index(ptr noundef nonnull %290, i32 noundef 5, ptr noundef nonnull %291) #16
  %293 = getelementptr inbounds %struct.ParticleBillboardData, ptr %37, i64 0, i32 8, i64 2
  store i32 %292, ptr %293, align 4, !tbaa !47
  %294 = icmp sgt i32 %272, -1
  br i1 %294, label %295, label %301

295:                                              ; preds = %283
  %296 = load <2 x i32>, ptr %277, align 4, !tbaa !47
  %297 = insertelement <2 x i32> poison, i32 %272, i64 0
  %298 = shufflevector <2 x i32> %297, <2 x i32> poison, <2 x i32> zeroinitializer
  %299 = sub nsw <2 x i32> %296, %298
  store <2 x i32> %299, ptr %277, align 4, !tbaa !47
  %300 = sub nsw i32 %292, %272
  store i32 %300, ptr %293, align 4, !tbaa !47
  br label %301

301:                                              ; preds = %295, %283
  %302 = getelementptr inbounds %struct.ParticleSettings, ptr %133, i64 0, i32 37
  %303 = load i16, ptr %302, align 8, !tbaa !386
  %304 = getelementptr inbounds %struct.ParticleBillboardData, ptr %37, i64 0, i32 13
  store i16 %303, ptr %304, align 8, !tbaa !387
  %305 = getelementptr inbounds %struct.ParticleSettings, ptr %133, i64 0, i32 39
  %306 = load i16, ptr %305, align 4, !tbaa !389
  %307 = getelementptr inbounds %struct.ParticleBillboardData, ptr %37, i64 0, i32 15
  store i16 %306, ptr %307, align 4, !tbaa !390
  %308 = getelementptr inbounds %struct.ParticleSettings, ptr %133, i64 0, i32 15
  %309 = load i32, ptr %308, align 8, !tbaa !240
  %310 = and i32 %309, 128
  %311 = getelementptr inbounds %struct.ParticleBillboardData, ptr %37, i64 0, i32 9
  store i32 %310, ptr %311, align 8, !tbaa !391
  %312 = getelementptr inbounds %struct.ParticleSettings, ptr %133, i64 0, i32 126
  %313 = load ptr, ptr %312, align 8, !tbaa !392
  %314 = icmp eq ptr %313, null
  br i1 %314, label %315, label %317

315:                                              ; preds = %301
  %316 = call ptr @RE_GetCamera(ptr noundef nonnull %0) #16
  br label %317

317:                                              ; preds = %315, %301
  %318 = phi ptr [ %316, %315 ], [ %313, %301 ]
  store ptr %318, ptr %37, align 8, !tbaa !393
  %319 = getelementptr inbounds %struct.ParticleSettings, ptr %133, i64 0, i32 40
  %320 = load i16, ptr %319, align 2, !tbaa !394
  %321 = getelementptr inbounds %struct.ParticleBillboardData, ptr %37, i64 0, i32 16
  store i16 %320, ptr %321, align 2, !tbaa !395
  %322 = add nsw i32 %208, %198
  %323 = getelementptr inbounds %struct.ParticleBillboardData, ptr %37, i64 0, i32 11
  store i32 %322, ptr %323, align 8, !tbaa !396
  %324 = getelementptr inbounds %struct.ParticleSettings, ptr %133, i64 0, i32 38
  %325 = load i16, ptr %324, align 2, !tbaa !397
  %326 = getelementptr inbounds %struct.ParticleBillboardData, ptr %37, i64 0, i32 14
  store i16 %325, ptr %326, align 2, !tbaa !398
  br label %327

327:                                              ; preds = %317, %266
  %328 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 32
  %329 = getelementptr inbounds %struct.Object, ptr %126, i64 0, i32 47
  call void @mul_m4_m4m4(ptr noundef nonnull %43, ptr noundef nonnull %328, ptr noundef nonnull %329) #16
  %330 = getelementptr inbounds %struct.Object, ptr %126, i64 0, i32 50
  %331 = call zeroext i8 @invert_m4_m4(ptr noundef nonnull %330, ptr noundef nonnull %43) #16
  call void @copy_m3_m4(ptr noundef nonnull %44, ptr noundef nonnull %330) #16
  call void @transpose_m3(ptr noundef nonnull %44) #16
  %332 = load i32, ptr %201, align 4, !tbaa !245
  %333 = and i32 %332, 128
  %334 = icmp eq i32 %333, 0
  br i1 %334, label %337, label %335

335:                                              ; preds = %327
  %336 = getelementptr inbounds %struct.ParticleSystem, ptr %125, i64 0, i32 19
  call void @mul_m4_m4m4(ptr noundef nonnull %47, ptr noundef nonnull %329, ptr noundef nonnull %336) #16
  br label %337

337:                                              ; preds = %335, %327
  %338 = load i16, ptr %143, align 8, !tbaa !143
  %339 = icmp eq i16 %338, 6
  br i1 %339, label %340, label %667

340:                                              ; preds = %337
  %341 = getelementptr inbounds %struct.ParticleSystem, ptr %125, i64 0, i32 7
  %342 = load ptr, ptr %341, align 8, !tbaa !399
  %343 = icmp eq ptr %342, null
  br i1 %343, label %667, label %344

344:                                              ; preds = %340
  %345 = sext i16 %200 to i32
  %346 = call fast double @ldexp(double 1.000000e+00, i32 %345) #16
  %347 = fptosi double %346 to i32
  %348 = icmp eq i32 %347, 0
  br i1 %348, label %369, label %349

349:                                              ; preds = %344
  %350 = getelementptr inbounds %struct.Material, ptr %212, i64 0, i32 2
  %351 = load i16, ptr %350, align 8, !tbaa !139
  switch i16 %351, label %352 [
    i16 1, label %369
    i16 3, label %369
  ]

352:                                              ; preds = %349
  %353 = getelementptr i8, ptr %0, i64 5840
  %354 = load ptr, ptr %353, align 8, !tbaa !76
  %355 = icmp eq ptr %354, null
  br i1 %355, label %356, label %358

356:                                              ; preds = %352
  %357 = getelementptr inbounds %struct.ParticleStrandData, ptr %39, i64 0, i32 1
  store ptr null, ptr %357, align 8, !tbaa !400
  br label %362

358:                                              ; preds = %352
  %359 = call ptr @BLI_ghash_lookup(ptr noundef nonnull %354, ptr noundef nonnull %125) #16
  %360 = getelementptr inbounds %struct.ParticleStrandData, ptr %39, i64 0, i32 1
  store ptr %359, ptr %360, align 8, !tbaa !400
  %361 = icmp eq ptr %359, null
  br i1 %361, label %362, label %369

362:                                              ; preds = %358, %356
  %363 = phi ptr [ %357, %356 ], [ %360, %358 ]
  %364 = load ptr, ptr @MEM_mallocN, align 8, !tbaa !16
  %365 = add nsw i32 %208, %198
  %366 = sext i32 %365 to i64
  %367 = mul nsw i64 %366, 12
  %368 = call ptr %364(i64 noundef %367, ptr noundef nonnull @.str.15) #16
  store ptr %368, ptr %363, align 8, !tbaa !400
  call fastcc void @set_object_orco(ptr noundef nonnull %0, ptr noundef nonnull %125, ptr noundef %368)
  br label %369

369:                                              ; preds = %362, %358, %349, %349, %344
  %370 = phi ptr [ null, %349 ], [ null, %349 ], [ %368, %362 ], [ %359, %358 ], [ null, %344 ]
  %371 = getelementptr inbounds %struct.ParticleSettings, ptr %133, i64 0, i32 15
  %372 = load i32, ptr %371, align 8, !tbaa !240
  %373 = and i32 %372, 2048
  %374 = icmp eq i32 %373, 0
  br i1 %374, label %387, label %375

375:                                              ; preds = %369
  %376 = getelementptr inbounds %struct.ParticleStrandData, ptr %39, i64 0, i32 12
  store i32 1, ptr %376, align 8, !tbaa !401
  %377 = getelementptr inbounds %struct.ParticleSettings, ptr %133, i64 0, i32 29
  %378 = load i16, ptr %377, align 8, !tbaa !402
  %379 = sitofp i16 %378 to float
  %380 = getelementptr inbounds %struct.ParticleStrandData, ptr %39, i64 0, i32 6
  store float %379, ptr %380, align 8, !tbaa !403
  %381 = getelementptr inbounds %struct.ParticleSettings, ptr %133, i64 0, i32 28
  %382 = load i16, ptr %381, align 2, !tbaa !404
  %383 = sitofp i16 %382 to float
  %384 = fmul fast float %383, 0x3F91DF46A0000000
  %385 = call fast float @llvm.cos.f32(float %384)
  %386 = getelementptr inbounds %struct.ParticleStrandData, ptr %39, i64 0, i32 5
  store float %385, ptr %386, align 4, !tbaa !405
  br label %387

387:                                              ; preds = %375, %369
  %388 = and i32 %372, 32768
  %389 = icmp eq i32 %388, 0
  br i1 %389, label %669, label %390

390:                                              ; preds = %387
  %391 = add nsw i32 %208, %198
  %392 = add nsw i32 %347, 1
  %393 = mul nsw i32 %392, %391
  %394 = call ptr @RE_addStrandBuffer(ptr noundef nonnull %1, i32 noundef %393) #16
  %395 = getelementptr inbounds %struct.StrandBuffer, ptr %394, i64 0, i32 7
  store ptr %212, ptr %395, align 8, !tbaa !406
  %396 = getelementptr inbounds %struct.Object, ptr %126, i64 0, i32 52
  %397 = load i32, ptr %396, align 8, !tbaa !114
  %398 = getelementptr inbounds %struct.StrandBuffer, ptr %394, i64 0, i32 9
  store i32 %397, ptr %398, align 8, !tbaa !407
  %399 = getelementptr inbounds %struct.StrandBuffer, ptr %394, i64 0, i32 17
  %400 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 35
  call void @copy_m4_m4(ptr noundef nonnull %399, ptr noundef nonnull %400) #16
  %401 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 13
  %402 = getelementptr inbounds %struct.StrandBuffer, ptr %394, i64 0, i32 18
  %403 = load <2 x i32>, ptr %401, align 4, !tbaa !47
  store <2 x i32> %403, ptr %402, align 8, !tbaa !47
  %404 = getelementptr inbounds %struct.StrandBuffer, ptr %394, i64 0, i32 12
  store i32 2, ptr %404, align 4, !tbaa !408
  %405 = getelementptr inbounds %struct.ParticleSettings, ptr %133, i64 0, i32 28
  %406 = load i16, ptr %405, align 2, !tbaa !404
  %407 = sitofp i16 %406 to float
  %408 = fmul fast float %407, 0x3F91DF46A0000000
  %409 = call fast float @llvm.cos.f32(float %408)
  %410 = getelementptr inbounds %struct.StrandBuffer, ptr %394, i64 0, i32 13
  store float %409, ptr %410, align 8, !tbaa !409
  %411 = getelementptr inbounds %struct.StrandBuffer, ptr %394, i64 0, i32 10
  store i32 %259, ptr %411, align 4, !tbaa !410
  %412 = getelementptr inbounds %struct.Material, ptr %212, i64 0, i32 67
  %413 = load float, ptr %412, align 4, !tbaa !411
  %414 = getelementptr inbounds %struct.StrandBuffer, ptr %394, i64 0, i32 14
  store float %413, ptr %414, align 4, !tbaa !412
  %415 = getelementptr inbounds %struct.Material, ptr %212, i64 0, i32 68
  %416 = load float, ptr %415, align 8, !tbaa !413
  %417 = fcmp fast oeq float %416, 0.000000e+00
  br i1 %417, label %425, label %418

418:                                              ; preds = %390
  %419 = fcmp fast ult float %416, 1.000000e+00
  br i1 %419, label %422, label %420

420:                                              ; preds = %418
  %421 = fsub fast float 2.000000e+00, %416
  br label %425

422:                                              ; preds = %418
  %423 = call fast float @llvm.maxnum.f32(float %416, float 0x3EE4F8B580000000)
  %424 = fdiv fast float 1.000000e+00, %423
  br label %425

425:                                              ; preds = %422, %420, %390
  %426 = phi float [ %421, %420 ], [ %424, %422 ], [ -1.000000e+00, %390 ]
  %427 = getelementptr inbounds %struct.StrandBuffer, ptr %394, i64 0, i32 15
  store float %426, ptr %427, align 8, !tbaa !414
  %428 = getelementptr inbounds %struct.ParticleSettings, ptr %133, i64 0, i32 5
  %429 = load i32, ptr %428, align 8, !tbaa !415
  %430 = and i32 %429, 1024
  %431 = icmp eq i32 %430, 0
  br i1 %431, label %436, label %432

432:                                              ; preds = %425
  %433 = getelementptr inbounds %struct.StrandBuffer, ptr %394, i64 0, i32 11
  %434 = load i32, ptr %433, align 8, !tbaa !416
  %435 = or i32 %434, 1
  store i32 %435, ptr %433, align 8, !tbaa !416
  br label %436

436:                                              ; preds = %432, %425
  %437 = getelementptr inbounds %struct.Material, ptr %212, i64 0, i32 51
  %438 = load i32, ptr %437, align 4, !tbaa !102
  %439 = and i32 %438, 1073741824
  %440 = icmp eq i32 %439, 0
  br i1 %440, label %445, label %441

441:                                              ; preds = %436
  %442 = getelementptr inbounds %struct.StrandBuffer, ptr %394, i64 0, i32 11
  %443 = load i32, ptr %442, align 8, !tbaa !416
  %444 = or i32 %443, 2
  store i32 %444, ptr %442, align 8, !tbaa !416
  br label %445

445:                                              ; preds = %441, %436
  %446 = getelementptr inbounds %struct.StrandBuffer, ptr %394, i64 0, i32 2
  %447 = load ptr, ptr %446, align 8, !tbaa !417
  %448 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 45, i32 47
  %449 = load i32, ptr %448, align 8, !tbaa !55
  %450 = and i32 %449, 1048576
  %451 = icmp eq i32 %450, 0
  br i1 %451, label %452, label %466

452:                                              ; preds = %445
  %453 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 46, i32 23
  %454 = load i16, ptr %453, align 2, !tbaa !57
  %455 = and i16 %454, 208
  %456 = icmp eq i16 %455, 0
  br i1 %456, label %466, label %457

457:                                              ; preds = %452
  %458 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 46, i32 64
  %459 = load i16, ptr %458, align 2, !tbaa !56
  %460 = icmp eq i16 %459, 1
  br i1 %460, label %461, label %466

461:                                              ; preds = %457
  %462 = getelementptr inbounds %struct.Material, ptr %212, i64 0, i32 16
  %463 = load float, ptr %462, align 4, !tbaa !418
  %464 = fcmp fast une float %463, 0.000000e+00
  br i1 %464, label %465, label %466

465:                                              ; preds = %461
  br label %466

466:                                              ; preds = %465, %461, %457, %452, %445
  %467 = phi i8 [ 1, %465 ], [ 0, %461 ], [ 0, %457 ], [ 0, %452 ], [ 1, %445 ]
  %468 = load ptr, ptr %221, align 8, !tbaa !381
  %469 = getelementptr inbounds %struct.DerivedMesh, ptr %468, i64 0, i32 25
  %470 = load ptr, ptr %469, align 8, !tbaa !419
  %471 = call i32 %470(ptr noundef %468) #16
  %472 = load ptr, ptr %221, align 8, !tbaa !381
  %473 = getelementptr inbounds %struct.DerivedMesh, ptr %472, i64 0, i32 52
  %474 = load ptr, ptr %473, align 8, !tbaa !420
  %475 = call ptr %474(ptr noundef %472, i32 noundef 7) #16
  %476 = load ptr, ptr %221, align 8, !tbaa !381
  %477 = getelementptr inbounds %struct.DerivedMesh, ptr %476, i64 0, i32 54
  %478 = load ptr, ptr %477, align 8, !tbaa !421
  %479 = call ptr %478(ptr noundef %476, i32 noundef 7) #16
  %480 = freeze ptr %479
  %481 = icmp eq ptr %475, null
  %482 = select i1 %481, ptr null, ptr %480
  %483 = icmp sgt i32 %471, 0
  %484 = getelementptr inbounds %struct.StrandBuffer, ptr %394, i64 0, i32 5
  %485 = load i32, ptr %484, align 4, !tbaa !422
  br i1 %483, label %486, label %658

486:                                              ; preds = %466
  br i1 %481, label %487, label %525

487:                                              ; preds = %486
  %488 = icmp ult i32 %471, 16
  br i1 %488, label %516, label %489

489:                                              ; preds = %487
  %490 = and i32 %471, -16
  %491 = insertelement <4 x i32> poison, i32 %485, i64 0
  %492 = shufflevector <4 x i32> %491, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %493

493:                                              ; preds = %493, %489
  %494 = phi i32 [ 0, %489 ], [ %507, %493 ]
  %495 = phi <4 x i32> [ %492, %489 ], [ %503, %493 ]
  %496 = phi <4 x i32> [ %492, %489 ], [ %504, %493 ]
  %497 = phi <4 x i32> [ %492, %489 ], [ %505, %493 ]
  %498 = phi <4 x i32> [ %492, %489 ], [ %506, %493 ]
  %499 = phi <4 x i32> [ <i32 0, i32 1, i32 2, i32 3>, %489 ], [ %508, %493 ]
  %500 = add <4 x i32> %499, <i32 4, i32 4, i32 4, i32 4>
  %501 = add <4 x i32> %499, <i32 8, i32 8, i32 8, i32 8>
  %502 = add <4 x i32> %499, <i32 12, i32 12, i32 12, i32 12>
  %503 = call <4 x i32> @llvm.smax.v4i32(<4 x i32> %499, <4 x i32> %495)
  %504 = call <4 x i32> @llvm.smax.v4i32(<4 x i32> %500, <4 x i32> %496)
  %505 = call <4 x i32> @llvm.smax.v4i32(<4 x i32> %501, <4 x i32> %497)
  %506 = call <4 x i32> @llvm.smax.v4i32(<4 x i32> %502, <4 x i32> %498)
  %507 = add nuw i32 %494, 16
  %508 = add <4 x i32> %499, <i32 16, i32 16, i32 16, i32 16>
  %509 = icmp eq i32 %507, %490
  br i1 %509, label %510, label %493, !llvm.loop !423

510:                                              ; preds = %493
  %511 = call <4 x i32> @llvm.smax.v4i32(<4 x i32> %503, <4 x i32> %504)
  %512 = call <4 x i32> @llvm.smax.v4i32(<4 x i32> %511, <4 x i32> %505)
  %513 = call <4 x i32> @llvm.smax.v4i32(<4 x i32> %512, <4 x i32> %506)
  %514 = call i32 @llvm.vector.reduce.smax.v4i32(<4 x i32> %513)
  %515 = icmp eq i32 %471, %490
  br i1 %515, label %658, label %516

516:                                              ; preds = %487, %510
  %517 = phi i32 [ %485, %487 ], [ %514, %510 ]
  %518 = phi i32 [ 0, %487 ], [ %490, %510 ]
  br label %519

519:                                              ; preds = %516, %519
  %520 = phi i32 [ %522, %519 ], [ %517, %516 ]
  %521 = phi i32 [ %523, %519 ], [ %518, %516 ]
  %522 = call i32 @llvm.smax.i32(i32 %521, i32 %520)
  %523 = add nuw nsw i32 %521, 1
  %524 = icmp eq i32 %523, %471
  br i1 %524, label %658, label %519, !llvm.loop !424

525:                                              ; preds = %486
  %526 = icmp eq ptr %480, null
  %527 = zext i32 %471 to i64
  br i1 %526, label %533, label %528

528:                                              ; preds = %525
  %529 = and i64 %527, 1
  %530 = icmp eq i32 %471, 1
  br i1 %530, label %642, label %531

531:                                              ; preds = %528
  %532 = and i64 %527, 4294967294
  br label %614

533:                                              ; preds = %525
  %534 = icmp ult i32 %471, 32
  br i1 %534, label %572, label %535

535:                                              ; preds = %533
  %536 = getelementptr i8, ptr %394, i64 40
  %537 = shl nuw nsw i64 %527, 2
  %538 = getelementptr i8, ptr %475, i64 %537
  %539 = icmp ult ptr %484, %538
  %540 = icmp ult ptr %475, %536
  %541 = and i1 %539, %540
  br i1 %541, label %572, label %542

542:                                              ; preds = %535
  %543 = and i64 %527, 4294967264
  %544 = insertelement <8 x i32> poison, i32 %485, i64 0
  %545 = shufflevector <8 x i32> %544, <8 x i32> poison, <8 x i32> zeroinitializer
  br label %546

546:                                              ; preds = %546, %542
  %547 = phi i64 [ 0, %542 ], [ %564, %546 ]
  %548 = phi <8 x i32> [ %545, %542 ], [ %560, %546 ]
  %549 = phi <8 x i32> [ %545, %542 ], [ %561, %546 ]
  %550 = phi <8 x i32> [ %545, %542 ], [ %562, %546 ]
  %551 = phi <8 x i32> [ %545, %542 ], [ %563, %546 ]
  %552 = getelementptr inbounds i32, ptr %475, i64 %547
  %553 = load <8 x i32>, ptr %552, align 4, !tbaa !47, !alias.scope !425
  %554 = getelementptr inbounds i32, ptr %552, i64 8
  %555 = load <8 x i32>, ptr %554, align 4, !tbaa !47, !alias.scope !425
  %556 = getelementptr inbounds i32, ptr %552, i64 16
  %557 = load <8 x i32>, ptr %556, align 4, !tbaa !47, !alias.scope !425
  %558 = getelementptr inbounds i32, ptr %552, i64 24
  %559 = load <8 x i32>, ptr %558, align 4, !tbaa !47, !alias.scope !425
  %560 = call <8 x i32> @llvm.smax.v8i32(<8 x i32> %553, <8 x i32> %548)
  %561 = call <8 x i32> @llvm.smax.v8i32(<8 x i32> %555, <8 x i32> %549)
  %562 = call <8 x i32> @llvm.smax.v8i32(<8 x i32> %557, <8 x i32> %550)
  %563 = call <8 x i32> @llvm.smax.v8i32(<8 x i32> %559, <8 x i32> %551)
  %564 = add nuw i64 %547, 32
  %565 = icmp eq i64 %564, %543
  br i1 %565, label %566, label %546, !llvm.loop !428

566:                                              ; preds = %546
  %567 = call <8 x i32> @llvm.smax.v8i32(<8 x i32> %560, <8 x i32> %561)
  %568 = call <8 x i32> @llvm.smax.v8i32(<8 x i32> %567, <8 x i32> %562)
  %569 = call <8 x i32> @llvm.smax.v8i32(<8 x i32> %568, <8 x i32> %563)
  %570 = call i32 @llvm.vector.reduce.smax.v8i32(<8 x i32> %569)
  store i32 %570, ptr %484, align 4, !tbaa !422
  %571 = icmp eq i64 %543, %527
  br i1 %571, label %658, label %572

572:                                              ; preds = %535, %533, %566
  %573 = phi i64 [ 0, %535 ], [ 0, %533 ], [ %543, %566 ]
  %574 = phi i32 [ %485, %535 ], [ %485, %533 ], [ %570, %566 ]
  %575 = xor i64 %573, -1
  %576 = add nsw i64 %575, %527
  %577 = and i64 %527, 3
  %578 = icmp eq i64 %577, 0
  br i1 %578, label %589, label %579

579:                                              ; preds = %572, %579
  %580 = phi i64 [ %586, %579 ], [ %573, %572 ]
  %581 = phi i32 [ %585, %579 ], [ %574, %572 ]
  %582 = phi i64 [ %587, %579 ], [ 0, %572 ]
  %583 = getelementptr inbounds i32, ptr %475, i64 %580
  %584 = load i32, ptr %583, align 4, !tbaa !47
  %585 = call i32 @llvm.smax.i32(i32 %584, i32 %581)
  store i32 %585, ptr %484, align 4, !tbaa !422
  %586 = add nuw nsw i64 %580, 1
  %587 = add i64 %582, 1
  %588 = icmp eq i64 %587, %577
  br i1 %588, label %589, label %579, !llvm.loop !429

589:                                              ; preds = %579, %572
  %590 = phi i32 [ undef, %572 ], [ %585, %579 ]
  %591 = phi i64 [ %573, %572 ], [ %586, %579 ]
  %592 = phi i32 [ %574, %572 ], [ %585, %579 ]
  %593 = icmp ult i64 %576, 3
  br i1 %593, label %658, label %594

594:                                              ; preds = %589, %594
  %595 = phi i64 [ %612, %594 ], [ %591, %589 ]
  %596 = phi i32 [ %611, %594 ], [ %592, %589 ]
  %597 = getelementptr inbounds i32, ptr %475, i64 %595
  %598 = load i32, ptr %597, align 4, !tbaa !47
  %599 = call i32 @llvm.smax.i32(i32 %598, i32 %596)
  store i32 %599, ptr %484, align 4, !tbaa !422
  %600 = add nuw nsw i64 %595, 1
  %601 = getelementptr inbounds i32, ptr %475, i64 %600
  %602 = load i32, ptr %601, align 4, !tbaa !47
  %603 = call i32 @llvm.smax.i32(i32 %602, i32 %599)
  store i32 %603, ptr %484, align 4, !tbaa !422
  %604 = add nuw nsw i64 %595, 2
  %605 = getelementptr inbounds i32, ptr %475, i64 %604
  %606 = load i32, ptr %605, align 4, !tbaa !47
  %607 = call i32 @llvm.smax.i32(i32 %606, i32 %603)
  store i32 %607, ptr %484, align 4, !tbaa !422
  %608 = add nuw nsw i64 %595, 3
  %609 = getelementptr inbounds i32, ptr %475, i64 %608
  %610 = load i32, ptr %609, align 4, !tbaa !47
  %611 = call i32 @llvm.smax.i32(i32 %610, i32 %607)
  store i32 %611, ptr %484, align 4, !tbaa !422
  %612 = add nuw nsw i64 %595, 4
  %613 = icmp eq i64 %612, %527
  br i1 %613, label %658, label %594, !llvm.loop !430

614:                                              ; preds = %636, %531
  %615 = phi i64 [ 0, %531 ], [ %639, %636 ]
  %616 = phi i32 [ %485, %531 ], [ %638, %636 ]
  %617 = phi i64 [ 0, %531 ], [ %640, %636 ]
  %618 = getelementptr inbounds i32, ptr %475, i64 %615
  %619 = load i32, ptr %618, align 4, !tbaa !47
  %620 = icmp eq i32 %619, -1
  br i1 %620, label %625, label %621

621:                                              ; preds = %614
  %622 = sext i32 %619 to i64
  %623 = getelementptr inbounds i32, ptr %480, i64 %622
  %624 = load i32, ptr %623, align 4, !tbaa !47
  br label %625

625:                                              ; preds = %621, %614
  %626 = phi i32 [ %624, %621 ], [ -1, %614 ]
  %627 = call i32 @llvm.smax.i32(i32 %626, i32 %616)
  store i32 %627, ptr %484, align 4, !tbaa !422
  %628 = or i64 %615, 1
  %629 = getelementptr inbounds i32, ptr %475, i64 %628
  %630 = load i32, ptr %629, align 4, !tbaa !47
  %631 = icmp eq i32 %630, -1
  br i1 %631, label %636, label %632

632:                                              ; preds = %625
  %633 = sext i32 %630 to i64
  %634 = getelementptr inbounds i32, ptr %480, i64 %633
  %635 = load i32, ptr %634, align 4, !tbaa !47
  br label %636

636:                                              ; preds = %632, %625
  %637 = phi i32 [ %635, %632 ], [ -1, %625 ]
  %638 = call i32 @llvm.smax.i32(i32 %637, i32 %627)
  store i32 %638, ptr %484, align 4, !tbaa !422
  %639 = add nuw nsw i64 %615, 2
  %640 = add i64 %617, 2
  %641 = icmp eq i64 %640, %532
  br i1 %641, label %642, label %614, !llvm.loop !431

642:                                              ; preds = %636, %528
  %643 = phi i32 [ undef, %528 ], [ %638, %636 ]
  %644 = phi i64 [ 0, %528 ], [ %639, %636 ]
  %645 = phi i32 [ %485, %528 ], [ %638, %636 ]
  %646 = icmp eq i64 %529, 0
  br i1 %646, label %658, label %647

647:                                              ; preds = %642
  %648 = getelementptr inbounds i32, ptr %475, i64 %644
  %649 = load i32, ptr %648, align 4, !tbaa !47
  %650 = icmp eq i32 %649, -1
  br i1 %650, label %655, label %651

651:                                              ; preds = %647
  %652 = sext i32 %649 to i64
  %653 = getelementptr inbounds i32, ptr %480, i64 %652
  %654 = load i32, ptr %653, align 4, !tbaa !47
  br label %655

655:                                              ; preds = %651, %647
  %656 = phi i32 [ %654, %651 ], [ -1, %647 ]
  %657 = call i32 @llvm.smax.i32(i32 %656, i32 %645)
  store i32 %657, ptr %484, align 4, !tbaa !422
  br label %658

658:                                              ; preds = %655, %642, %589, %594, %519, %566, %510, %466
  %659 = phi i32 [ %485, %466 ], [ %514, %510 ], [ %570, %566 ], [ %522, %519 ], [ %590, %589 ], [ %611, %594 ], [ %643, %642 ], [ %657, %655 ]
  %660 = add nsw i32 %659, 1
  store i32 %660, ptr %484, align 4, !tbaa !422
  %661 = load ptr, ptr @MEM_callocN, align 8, !tbaa !16
  %662 = sext i32 %660 to i64
  %663 = shl nsw i64 %662, 5
  %664 = call ptr %661(i64 noundef %663, ptr noundef nonnull @.str.16) #16
  %665 = getelementptr inbounds %struct.StrandBuffer, ptr %394, i64 0, i32 3
  store ptr %664, ptr %665, align 8, !tbaa !432
  %666 = getelementptr inbounds %struct.StrandBound, ptr %664, i64 0, i32 1
  store i32 0, ptr %666, align 4, !tbaa !433
  store i32 0, ptr %664, align 4, !tbaa !435
  br label %669

667:                                              ; preds = %340, %337
  %668 = getelementptr inbounds %struct.ParticleStrandData, ptr %39, i64 0, i32 1
  br label %678

669:                                              ; preds = %658, %387
  %670 = phi i8 [ %467, %658 ], [ 0, %387 ]
  %671 = phi ptr [ %475, %658 ], [ null, %387 ]
  %672 = phi ptr [ %482, %658 ], [ null, %387 ]
  %673 = phi ptr [ %664, %658 ], [ null, %387 ]
  %674 = phi ptr [ %447, %658 ], [ null, %387 ]
  %675 = phi ptr [ %394, %658 ], [ null, %387 ]
  %676 = getelementptr inbounds %struct.ParticleStrandData, ptr %39, i64 0, i32 1
  %677 = icmp eq ptr %370, null
  br i1 %677, label %678, label %689

678:                                              ; preds = %669, %667
  %679 = phi ptr [ %668, %667 ], [ %676, %669 ]
  %680 = phi ptr [ null, %667 ], [ %675, %669 ]
  %681 = phi ptr [ null, %667 ], [ %674, %669 ]
  %682 = phi ptr [ null, %667 ], [ %673, %669 ]
  %683 = phi ptr [ null, %667 ], [ %672, %669 ]
  %684 = phi ptr [ null, %667 ], [ %671, %669 ]
  %685 = phi i8 [ 0, %667 ], [ %670, %669 ]
  %686 = phi i32 [ 0, %667 ], [ %347, %669 ]
  %687 = load ptr, ptr @MEM_mallocN, align 8, !tbaa !16
  %688 = call ptr %687(i64 noundef 12, ptr noundef nonnull @.str.17) #16
  store ptr %688, ptr %679, align 8, !tbaa !400
  br label %689

689:                                              ; preds = %678, %669
  %690 = phi i1 [ true, %678 ], [ false, %669 ]
  %691 = phi ptr [ %679, %678 ], [ %676, %669 ]
  %692 = phi ptr [ %680, %678 ], [ %675, %669 ]
  %693 = phi ptr [ %681, %678 ], [ %674, %669 ]
  %694 = phi ptr [ %682, %678 ], [ %673, %669 ]
  %695 = phi ptr [ %683, %678 ], [ %672, %669 ]
  %696 = phi ptr [ %684, %678 ], [ %671, %669 ]
  %697 = phi i8 [ %685, %678 ], [ %670, %669 ]
  %698 = phi i32 [ %686, %678 ], [ %347, %669 ]
  %699 = icmp eq i32 %698, 0
  br i1 %699, label %700, label %703

700:                                              ; preds = %689
  %701 = call ptr @psys_create_lattice_deform_data(ptr noundef nonnull %38) #16
  %702 = getelementptr inbounds %struct.ParticleSystem, ptr %125, i64 0, i32 15
  store ptr %701, ptr %702, align 8, !tbaa !436
  br label %703

703:                                              ; preds = %700, %689
  %704 = add nsw i32 %208, %198
  %705 = icmp sgt i32 %704, 0
  br i1 %705, label %706, label %1445

706:                                              ; preds = %703
  %707 = getelementptr inbounds %struct.ParticleSystem, ptr %125, i64 0, i32 4
  %708 = sext i32 %208 to i64
  %709 = sub nsw i64 0, %708
  %710 = getelementptr inbounds %struct.ParticleSystem, ptr %125, i64 0, i32 8
  %711 = getelementptr inbounds %struct.ParticleSettings, ptr %133, i64 0, i32 19
  %712 = getelementptr inbounds %struct.ParticleSettings, ptr %133, i64 0, i32 8
  %713 = icmp eq ptr %692, null
  %714 = icmp eq ptr %696, null
  %715 = icmp eq ptr %695, null
  %716 = getelementptr inbounds %struct.StrandBuffer, ptr %692, i64 0, i32 3
  %717 = getelementptr inbounds %struct.StrandBuffer, ptr %692, i64 0, i32 5
  %718 = getelementptr inbounds %struct.ObjectRen, ptr %1, i64 0, i32 12
  %719 = getelementptr inbounds %struct.ParticleSystem, ptr %125, i64 0, i32 7
  %720 = icmp eq i32 %198, 0
  %721 = getelementptr inbounds %struct.ParticleSettings, ptr %133, i64 0, i32 15
  %722 = getelementptr inbounds [3 x float], ptr %52, i64 0, i64 1
  %723 = getelementptr inbounds %struct.Material, ptr %212, i64 0, i32 52
  %724 = getelementptr inbounds %struct.ParticleStrandData, ptr %39, i64 0, i32 3
  %725 = getelementptr inbounds [2 x float], ptr %51, i64 0, i64 1
  %726 = icmp ne i8 %697, 0
  %727 = getelementptr inbounds %struct.ParticleStrandData, ptr %39, i64 0, i32 2
  %728 = icmp slt i32 %698, 1
  %729 = getelementptr inbounds float, ptr %36, i64 1
  %730 = getelementptr inbounds float, ptr %36, i64 2
  %731 = getelementptr inbounds %struct.ParticleKey, ptr %36, i64 0, i32 1
  %732 = getelementptr inbounds %struct.ParticleKey, ptr %36, i64 0, i32 1, i64 1
  %733 = getelementptr inbounds %struct.ParticleKey, ptr %36, i64 0, i32 1, i64 2
  %734 = getelementptr inbounds float, ptr %40, i64 1
  %735 = getelementptr inbounds float, ptr %40, i64 2
  %736 = getelementptr inbounds %struct.ParticleStrandData, ptr %39, i64 0, i32 7
  %737 = getelementptr inbounds %struct.ParticleStrandData, ptr %39, i64 0, i32 10
  %738 = getelementptr inbounds %struct.ParticleStrandData, ptr %39, i64 0, i32 4
  %739 = getelementptr inbounds float, ptr %41, i64 2
  %740 = getelementptr inbounds float, ptr %42, i64 2
  %741 = getelementptr inbounds %struct.ParticleSettings, ptr %133, i64 0, i32 119
  %742 = getelementptr inbounds %struct.ParticleKey, ptr %36, i64 0, i32 4
  %743 = getelementptr inbounds %struct.ParticleSystem, ptr %125, i64 0, i32 16
  %744 = getelementptr inbounds %struct.ParticleBillboardData, ptr %37, i64 0, i32 6
  %745 = getelementptr inbounds %struct.ParticleSettings, ptr %133, i64 0, i32 43
  %746 = getelementptr inbounds %struct.ParticleBillboardData, ptr %37, i64 0, i32 3
  %747 = getelementptr inbounds %struct.ParticleBillboardData, ptr %37, i64 0, i32 3, i64 1
  %748 = getelementptr inbounds %struct.ParticleSettings, ptr %133, i64 0, i32 44
  %749 = getelementptr inbounds %struct.ParticleBillboardData, ptr %37, i64 0, i32 4
  %750 = getelementptr inbounds %struct.ParticleSettings, ptr %133, i64 0, i32 37
  %751 = getelementptr inbounds %struct.ParticleSettings, ptr %133, i64 0, i32 44, i64 1
  %752 = getelementptr inbounds %struct.ParticleBillboardData, ptr %37, i64 0, i32 4, i64 1
  %753 = getelementptr inbounds %struct.ParticleSettings, ptr %133, i64 0, i32 45
  %754 = getelementptr inbounds %struct.ParticleSettings, ptr %133, i64 0, i32 46
  %755 = getelementptr inbounds %struct.ParticleSettings, ptr %133, i64 0, i32 41
  %756 = getelementptr inbounds %struct.ParticleSettings, ptr %133, i64 0, i32 42
  %757 = getelementptr inbounds %struct.ParticleBillboardData, ptr %37, i64 0, i32 5
  %758 = getelementptr inbounds %struct.ParticleBillboardData, ptr %37, i64 0, i32 7
  %759 = getelementptr inbounds %struct.ParticleBillboardData, ptr %37, i64 0, i32 10
  %760 = getelementptr inbounds %struct.ParticleBillboardData, ptr %37, i64 0, i32 12
  %761 = getelementptr inbounds %struct.ParticleSettings, ptr %133, i64 0, i32 118
  %762 = getelementptr inbounds %struct.ParticleSettings, ptr %133, i64 0, i32 88
  %763 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 96
  %764 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 97
  %765 = add i32 %698, 1
  %766 = zext i32 %704 to i64
  %767 = zext i32 %765 to i64
  %768 = icmp eq i32 %765, 2
  br label %769

769:                                              ; preds = %1433, %706
  %770 = phi i64 [ 0, %706 ], [ %1441, %1433 ]
  %771 = phi ptr [ %135, %706 ], [ %1442, %1433 ]
  %772 = phi ptr [ null, %706 ], [ %1440, %1433 ]
  %773 = phi ptr [ %693, %706 ], [ %1439, %1433 ]
  %774 = phi ptr [ %694, %706 ], [ %1438, %1433 ]
  %775 = phi ptr [ null, %706 ], [ %1437, %1433 ]
  %776 = phi float [ %214, %706 ], [ %1436, %1433 ]
  %777 = phi i32 [ 0, %706 ], [ %1435, %1433 ]
  %778 = phi i8 [ 0, %706 ], [ %1434, %1433 ]
  %779 = phi i32 [ %217, %706 ], [ %1443, %1433 ]
  %780 = call fast nofpclass(nan inf) float @BLI_rng_get_float(ptr noundef %206) #16
  %781 = icmp slt i64 %770, %708
  br i1 %781, label %782, label %858

782:                                              ; preds = %769
  %783 = getelementptr inbounds %struct.ParticleData, ptr %771, i64 0, i32 17
  %784 = load i16, ptr %783, align 4, !tbaa !437
  %785 = and i16 %784, 1
  %786 = icmp eq i16 %785, 0
  br i1 %786, label %787, label %1433

787:                                              ; preds = %782
  %788 = getelementptr inbounds %struct.ParticleData, ptr %771, i64 0, i32 6
  %789 = load float, ptr %788, align 4, !tbaa !440
  %790 = fsub fast float %129, %789
  %791 = getelementptr inbounds %struct.ParticleData, ptr %771, i64 0, i32 7
  %792 = load float, ptr %791, align 8, !tbaa !441
  %793 = fdiv fast float %790, %792
  store float %793, ptr %48, align 4, !tbaa !13
  store float %789, ptr %49, align 4, !tbaa !13
  %794 = getelementptr inbounds %struct.ParticleData, ptr %771, i64 0, i32 8
  %795 = load float, ptr %794, align 4, !tbaa !442
  store float %795, ptr %50, align 4, !tbaa !13
  %796 = load float, ptr %213, align 4, !tbaa !379
  %797 = load i16, ptr %712, align 2, !tbaa !443
  %798 = sext i16 %797 to i32
  %799 = getelementptr inbounds %struct.ParticleData, ptr %771, i64 0, i32 9
  %800 = load i32, ptr %799, align 8, !tbaa !444
  %801 = getelementptr inbounds %struct.ParticleData, ptr %771, i64 0, i32 10
  %802 = load i32, ptr %801, align 4, !tbaa !445
  %803 = getelementptr inbounds %struct.ParticleData, ptr %771, i64 0, i32 11
  %804 = getelementptr inbounds %struct.ParticleData, ptr %771, i64 0, i32 12
  %805 = load float, ptr %804, align 8, !tbaa !446
  %806 = load ptr, ptr %691, align 8, !tbaa !400
  call void @psys_particle_on_emitter(ptr noundef %156, i32 noundef %798, i32 noundef %800, i32 noundef %802, ptr noundef nonnull %803, float noundef nofpclass(nan inf) %805, ptr noundef nonnull %45, ptr noundef nonnull %46, ptr noundef null, ptr noundef null, ptr noundef %806, ptr noundef null) #16
  %807 = load i32, ptr %801, align 4, !tbaa !445
  %808 = icmp eq i32 %807, -1
  br i1 %808, label %809, label %818

809:                                              ; preds = %787
  %810 = load i32, ptr %799, align 8, !tbaa !444
  %811 = load ptr, ptr %221, align 8, !tbaa !381
  %812 = getelementptr inbounds %struct.DerivedMesh, ptr %811, i64 0, i32 25
  %813 = load ptr, ptr %812, align 8, !tbaa !419
  %814 = call i32 %813(ptr noundef %811) #16
  %815 = icmp slt i32 %810, %814
  br i1 %815, label %816, label %818

816:                                              ; preds = %809
  %817 = load i32, ptr %799, align 8, !tbaa !444
  br label %818

818:                                              ; preds = %816, %809, %787
  %819 = phi i32 [ %817, %816 ], [ -1, %809 ], [ %807, %787 ]
  %820 = load i16, ptr %712, align 2, !tbaa !443
  %821 = load ptr, ptr %221, align 8, !tbaa !381
  call fastcc void @get_particle_uvco_mcol(i16 noundef signext %820, ptr noundef %821, ptr noundef nonnull %803, i32 noundef %819, ptr noundef nonnull %39)
  %822 = getelementptr inbounds %struct.ParticleData, ptr %771, i64 0, i32 13
  %823 = load float, ptr %822, align 4, !tbaa !447
  %824 = load i32, ptr %204, align 4, !tbaa !374
  %825 = srem i32 %824, 1024
  %826 = sext i32 %825 to i64
  %827 = getelementptr inbounds [1024 x i32], ptr @PSYS_FRAND_SEED_OFFSET, i64 0, i64 %826
  %828 = load i32, ptr %827, align 4, !tbaa !47
  %829 = getelementptr inbounds [1024 x i32], ptr @PSYS_FRAND_SEED_MULTIPLIER, i64 0, i64 %826
  %830 = load i32, ptr %829, align 4, !tbaa !47
  %831 = trunc i64 %770 to i32
  %832 = mul i32 %830, %831
  %833 = add i32 %832, %828
  %834 = and i32 %833, 1023
  %835 = zext i32 %834 to i64
  %836 = getelementptr inbounds [1024 x float], ptr @PSYS_FRAND_BASE, i64 0, i64 %835
  %837 = load float, ptr %836, align 4, !tbaa !13
  %838 = add i32 %831, 1
  %839 = mul i32 %830, %838
  %840 = add i32 %839, %828
  %841 = and i32 %840, 1023
  %842 = zext i32 %841 to i64
  %843 = getelementptr inbounds [1024 x float], ptr @PSYS_FRAND_BASE, i64 0, i64 %842
  %844 = load float, ptr %843, align 4, !tbaa !13
  br i1 %699, label %851, label %845

845:                                              ; preds = %818
  %846 = load ptr, ptr %719, align 8, !tbaa !399
  %847 = getelementptr inbounds ptr, ptr %846, i64 %770
  %848 = load ptr, ptr %847, align 8, !tbaa !16
  %849 = getelementptr inbounds %struct.ParticleCacheKey, ptr %848, i64 0, i32 5
  %850 = load i32, ptr %849, align 4, !tbaa !448
  br label %851

851:                                              ; preds = %845, %818
  %852 = phi i32 [ %850, %845 ], [ %777, %818 ]
  %853 = phi ptr [ %848, %845 ], [ %772, %818 ]
  br i1 %720, label %980, label %854

854:                                              ; preds = %851
  %855 = load i32, ptr %721, align 8, !tbaa !240
  %856 = and i32 %855, 256
  %857 = icmp eq i32 %856, 0
  br i1 %857, label %1433, label %980

858:                                              ; preds = %769
  %859 = load ptr, ptr %707, align 8, !tbaa !450
  %860 = getelementptr inbounds %struct.ChildParticle, ptr %859, i64 %770
  %861 = getelementptr inbounds %struct.ChildParticle, ptr %860, i64 %709
  br i1 %699, label %870, label %862

862:                                              ; preds = %858
  %863 = load ptr, ptr %710, align 8, !tbaa !372
  %864 = sub nsw i64 %770, %708
  %865 = getelementptr inbounds ptr, ptr %863, i64 %864
  %866 = load ptr, ptr %865, align 8, !tbaa !16
  %867 = getelementptr inbounds %struct.ParticleCacheKey, ptr %866, i64 0, i32 5
  %868 = load i32, ptr %867, align 4, !tbaa !448
  %869 = icmp slt i32 %868, 0
  br i1 %869, label %1433, label %870

870:                                              ; preds = %862, %858
  %871 = phi i32 [ %777, %858 ], [ %868, %862 ]
  %872 = phi ptr [ %772, %858 ], [ %866, %862 ]
  %873 = call fast nofpclass(nan inf) float @psys_get_child_time(ptr noundef nonnull %125, ptr noundef %861, float noundef nofpclass(nan inf) %129, ptr noundef nonnull %49, ptr noundef nonnull %50) #16
  store float %873, ptr %48, align 4, !tbaa !13
  %874 = call fast nofpclass(nan inf) float @psys_get_child_size(ptr noundef nonnull %125, ptr noundef %861, float noundef nofpclass(nan inf) %129, ptr noundef nonnull %48) #16
  %875 = load i32, ptr %204, align 4, !tbaa !374
  %876 = srem i32 %875, 1024
  %877 = sext i32 %876 to i64
  %878 = getelementptr inbounds [1024 x i32], ptr @PSYS_FRAND_SEED_OFFSET, i64 0, i64 %877
  %879 = load i32, ptr %878, align 4, !tbaa !47
  %880 = getelementptr inbounds [1024 x i32], ptr @PSYS_FRAND_SEED_MULTIPLIER, i64 0, i64 %877
  %881 = load i32, ptr %880, align 4, !tbaa !47
  %882 = trunc i64 %770 to i32
  %883 = add i32 %882, 21
  %884 = mul i32 %881, %883
  %885 = add i32 %884, %879
  %886 = and i32 %885, 1023
  %887 = zext i32 %886 to i64
  %888 = getelementptr inbounds [1024 x float], ptr @PSYS_FRAND_BASE, i64 0, i64 %887
  %889 = load float, ptr %888, align 4, !tbaa !13
  %890 = add i32 %882, 22
  %891 = mul i32 %881, %890
  %892 = add i32 %891, %879
  %893 = and i32 %892, 1023
  %894 = zext i32 %893 to i64
  %895 = getelementptr inbounds [1024 x float], ptr @PSYS_FRAND_BASE, i64 0, i64 %894
  %896 = load float, ptr %895, align 4, !tbaa !13
  %897 = load i32, ptr %861, align 4, !tbaa !451
  %898 = load i16, ptr %711, align 4, !tbaa !453
  %899 = icmp eq i16 %898, 2
  br i1 %899, label %900, label %905

900:                                              ; preds = %870
  %901 = getelementptr inbounds %struct.ChildParticle, ptr %860, i64 %709, i32 4
  %902 = getelementptr inbounds %struct.ChildParticle, ptr %860, i64 %709, i32 5
  %903 = load float, ptr %902, align 4, !tbaa !454
  %904 = load ptr, ptr %691, align 8, !tbaa !400
  call void @psys_particle_on_emitter(ptr noundef %156, i32 noundef 1, i32 noundef %897, i32 noundef -2, ptr noundef nonnull %901, float noundef nofpclass(nan inf) %903, ptr noundef nonnull %45, ptr noundef nonnull %46, ptr noundef null, ptr noundef null, ptr noundef %904, ptr noundef null) #16
  br label %918

905:                                              ; preds = %870
  %906 = load ptr, ptr %134, align 8, !tbaa !361
  %907 = getelementptr inbounds %struct.ChildParticle, ptr %860, i64 %709, i32 1
  %908 = load i32, ptr %907, align 4, !tbaa !455
  %909 = sext i32 %908 to i64
  %910 = load i16, ptr %712, align 2, !tbaa !443
  %911 = sext i16 %910 to i32
  %912 = getelementptr inbounds %struct.ParticleData, ptr %906, i64 %909, i32 9
  %913 = load i32, ptr %912, align 8, !tbaa !444
  %914 = getelementptr inbounds %struct.ParticleData, ptr %906, i64 %909, i32 11
  %915 = getelementptr inbounds %struct.ParticleData, ptr %906, i64 %909, i32 12
  %916 = load float, ptr %915, align 8, !tbaa !446
  %917 = load ptr, ptr %691, align 8, !tbaa !400
  call void @psys_particle_on_emitter(ptr noundef %156, i32 noundef %911, i32 noundef %913, i32 noundef -2, ptr noundef nonnull %914, float noundef nofpclass(nan inf) %916, ptr noundef nonnull %45, ptr noundef nonnull %46, ptr noundef null, ptr noundef null, ptr noundef %917, ptr noundef null) #16
  br label %918

918:                                              ; preds = %905, %900
  %919 = phi ptr [ %917, %905 ], [ %904, %900 ]
  %920 = load i16, ptr %711, align 4, !tbaa !453
  %921 = icmp eq i16 %920, 2
  br i1 %921, label %922, label %926

922:                                              ; preds = %918
  %923 = load ptr, ptr %221, align 8, !tbaa !381
  %924 = getelementptr inbounds %struct.ChildParticle, ptr %860, i64 %709, i32 4
  %925 = load i32, ptr %861, align 4, !tbaa !451
  call fastcc void @get_particle_uvco_mcol(i16 noundef signext 1, ptr noundef %923, ptr noundef nonnull %924, i32 noundef %925, ptr noundef nonnull %39)
  br label %949

926:                                              ; preds = %918
  %927 = load ptr, ptr %134, align 8, !tbaa !361
  %928 = getelementptr inbounds %struct.ChildParticle, ptr %860, i64 %709, i32 1
  %929 = load i32, ptr %928, align 4, !tbaa !455
  %930 = sext i32 %929 to i64
  %931 = getelementptr inbounds %struct.ParticleData, ptr %927, i64 %930, i32 10
  %932 = load i32, ptr %931, align 4, !tbaa !445
  %933 = icmp eq i32 %932, -1
  br i1 %933, label %934, label %944

934:                                              ; preds = %926
  %935 = getelementptr inbounds %struct.ParticleData, ptr %927, i64 %930, i32 9
  %936 = load i32, ptr %935, align 8, !tbaa !444
  %937 = load ptr, ptr %221, align 8, !tbaa !381
  %938 = getelementptr inbounds %struct.DerivedMesh, ptr %937, i64 0, i32 25
  %939 = load ptr, ptr %938, align 8, !tbaa !419
  %940 = call i32 %939(ptr noundef %937) #16
  %941 = icmp slt i32 %936, %940
  br i1 %941, label %942, label %944

942:                                              ; preds = %934
  %943 = load i32, ptr %935, align 8, !tbaa !444
  br label %944

944:                                              ; preds = %942, %934, %926
  %945 = phi i32 [ %943, %942 ], [ -1, %934 ], [ %932, %926 ]
  %946 = load i16, ptr %712, align 2, !tbaa !443
  %947 = load ptr, ptr %221, align 8, !tbaa !381
  %948 = getelementptr inbounds %struct.ParticleData, ptr %927, i64 %930, i32 11
  call fastcc void @get_particle_uvco_mcol(i16 noundef signext %946, ptr noundef %947, ptr noundef nonnull %948, i32 noundef %945, ptr noundef nonnull %39)
  br label %949

949:                                              ; preds = %944, %922
  %950 = phi i32 [ %897, %922 ], [ %945, %944 ]
  %951 = call zeroext i8 @psys_render_simplify_params(ptr noundef nonnull %125, ptr noundef nonnull %861, ptr noundef nonnull %51) #16
  br i1 %713, label %980, label %952

952:                                              ; preds = %949
  %953 = load i32, ptr %861, align 4, !tbaa !451
  br i1 %714, label %964, label %954

954:                                              ; preds = %952
  %955 = sext i32 %953 to i64
  %956 = getelementptr inbounds i32, ptr %696, i64 %955
  %957 = load i32, ptr %956, align 4, !tbaa !47
  %958 = icmp eq i32 %957, -1
  %959 = select i1 %958, i1 true, i1 %715
  br i1 %959, label %964, label %960

960:                                              ; preds = %954
  %961 = sext i32 %957 to i64
  %962 = getelementptr inbounds i32, ptr %695, i64 %961
  %963 = load i32, ptr %962, align 4, !tbaa !47
  br label %964

964:                                              ; preds = %960, %954, %952
  %965 = phi i32 [ %963, %960 ], [ %957, %954 ], [ %953, %952 ]
  %966 = sext i32 %965 to i64
  %967 = load ptr, ptr %716, align 8, !tbaa !432
  %968 = ptrtoint ptr %774 to i64
  %969 = ptrtoint ptr %967 to i64
  %970 = sub i64 %968, %969
  %971 = ashr exact i64 %970, 5
  %972 = icmp slt i64 %971, %966
  br i1 %972, label %973, label %980

973:                                              ; preds = %964
  %974 = load i32, ptr %717, align 4, !tbaa !422
  %975 = icmp slt i32 %965, %974
  br i1 %975, label %976, label %980

976:                                              ; preds = %973
  %977 = getelementptr inbounds %struct.StrandBound, ptr %967, i64 %966
  %978 = load i32, ptr %718, align 8, !tbaa !214
  %979 = getelementptr inbounds %struct.StrandBound, ptr %967, i64 %966, i32 1
  store i32 %978, ptr %979, align 4, !tbaa !433
  store i32 %978, ptr %977, align 4, !tbaa !435
  br label %980

980:                                              ; preds = %976, %973, %964, %949, %854, %851
  %981 = phi ptr [ %806, %854 ], [ %806, %851 ], [ %919, %964 ], [ %919, %973 ], [ %919, %976 ], [ %919, %949 ]
  %982 = phi i32 [ %819, %854 ], [ %819, %851 ], [ %950, %964 ], [ %950, %973 ], [ %950, %976 ], [ %950, %949 ]
  %983 = phi i8 [ %778, %854 ], [ %778, %851 ], [ %951, %964 ], [ %951, %973 ], [ %951, %976 ], [ %951, %949 ]
  %984 = phi i32 [ %852, %854 ], [ %852, %851 ], [ %871, %964 ], [ %871, %973 ], [ %871, %976 ], [ %871, %949 ]
  %985 = phi float [ %844, %854 ], [ %844, %851 ], [ %896, %964 ], [ %896, %973 ], [ %896, %976 ], [ %896, %949 ]
  %986 = phi float [ %837, %854 ], [ %837, %851 ], [ %889, %964 ], [ %889, %973 ], [ %889, %976 ], [ %889, %949 ]
  %987 = phi float [ %823, %854 ], [ %823, %851 ], [ %874, %964 ], [ %874, %973 ], [ %874, %976 ], [ %874, %949 ]
  %988 = phi float [ %796, %854 ], [ %796, %851 ], [ %776, %964 ], [ %776, %973 ], [ %776, %976 ], [ %776, %949 ]
  %989 = phi ptr [ %774, %854 ], [ %774, %851 ], [ %774, %964 ], [ %774, %973 ], [ %977, %976 ], [ %774, %949 ]
  %990 = phi ptr [ %853, %854 ], [ %853, %851 ], [ %872, %964 ], [ %872, %973 ], [ %872, %976 ], [ %872, %949 ]
  %991 = fmul fast float %986, 2.000000e+00
  %992 = fadd fast float %991, -1.000000e+00
  %993 = load float, ptr %48, align 4, !tbaa !13
  store float %993, ptr %52, align 4, !tbaa !13
  store <2 x float> zeroinitializer, ptr %722, align 4, !tbaa !13
  %994 = load i32, ptr %723, align 8, !tbaa !456
  %995 = icmp sgt i32 %994, -1
  br i1 %995, label %997, label %996

996:                                              ; preds = %980
  call void @mul_m3_v3(ptr noundef nonnull %44, ptr noundef nonnull %46) #16
  br label %997

997:                                              ; preds = %996, %980
  %998 = phi ptr [ %46, %996 ], [ null, %980 ]
  store ptr %998, ptr %724, align 8, !tbaa !457
  br i1 %713, label %1080, label %999

999:                                              ; preds = %997
  %1000 = load i32, ptr %718, align 8, !tbaa !214
  %1001 = add nsw i32 %1000, 1
  store i32 %1001, ptr %718, align 8, !tbaa !214
  %1002 = call ptr @RE_findOrAddStrand(ptr noundef %1, i32 noundef %1000) #16
  %1003 = getelementptr inbounds %struct.StrandRen, ptr %1002, i64 0, i32 1
  store ptr %692, ptr %1003, align 8, !tbaa !458
  store ptr %773, ptr %1002, align 8, !tbaa !219
  %1004 = getelementptr inbounds %struct.StrandRen, ptr %1002, i64 0, i32 6
  %1005 = load float, ptr %981, align 4, !tbaa !13
  store float %1005, ptr %1004, align 4, !tbaa !13
  %1006 = getelementptr inbounds float, ptr %981, i64 1
  %1007 = load float, ptr %1006, align 4, !tbaa !13
  %1008 = getelementptr inbounds %struct.StrandRen, ptr %1002, i64 0, i32 6, i64 1
  store float %1007, ptr %1008, align 4, !tbaa !13
  %1009 = getelementptr inbounds float, ptr %981, i64 2
  %1010 = load float, ptr %1009, align 4, !tbaa !13
  %1011 = getelementptr inbounds %struct.StrandRen, ptr %1002, i64 0, i32 6, i64 2
  store float %1010, ptr %1011, align 4, !tbaa !13
  %1012 = icmp eq i8 %983, 0
  br i1 %1012, label %1018, label %1013

1013:                                             ; preds = %999
  %1014 = call ptr @RE_strandren_get_simplify(ptr noundef nonnull %1, ptr noundef nonnull %1002, i32 noundef 1) #16
  %1015 = load float, ptr %51, align 4, !tbaa !13
  store float %1015, ptr %1014, align 4, !tbaa !13
  %1016 = load float, ptr %725, align 4, !tbaa !13
  %1017 = getelementptr inbounds float, ptr %1014, i64 1
  store float %1016, ptr %1017, align 4, !tbaa !13
  br label %1018

1018:                                             ; preds = %1013, %999
  %1019 = icmp eq ptr %998, null
  br i1 %1019, label %1029, label %1020

1020:                                             ; preds = %1018
  %1021 = call ptr @RE_strandren_get_surfnor(ptr noundef nonnull %1, ptr noundef nonnull %1002, i32 noundef 1) #16
  %1022 = load float, ptr %998, align 4, !tbaa !13
  store float %1022, ptr %1021, align 4, !tbaa !13
  %1023 = getelementptr inbounds float, ptr %998, i64 1
  %1024 = load float, ptr %1023, align 4, !tbaa !13
  %1025 = getelementptr inbounds float, ptr %1021, i64 1
  store float %1024, ptr %1025, align 4, !tbaa !13
  %1026 = getelementptr inbounds float, ptr %998, i64 2
  %1027 = load float, ptr %1026, align 4, !tbaa !13
  %1028 = getelementptr inbounds float, ptr %1021, i64 2
  store float %1027, ptr %1028, align 4, !tbaa !13
  br label %1029

1029:                                             ; preds = %1020, %1018
  %1030 = icmp sgt i32 %982, -1
  %1031 = select i1 %726, i1 %1030, i1 false
  br i1 %1031, label %1032, label %1034

1032:                                             ; preds = %1029
  %1033 = call ptr @RE_strandren_get_face(ptr noundef nonnull %1, ptr noundef nonnull %1002, i32 noundef 1) #16
  store i32 %982, ptr %1033, align 4, !tbaa !47
  br label %1034

1034:                                             ; preds = %1032, %1029
  %1035 = load ptr, ptr %727, align 8, !tbaa !384
  %1036 = icmp eq ptr %1035, null
  br i1 %1036, label %1060, label %1037

1037:                                             ; preds = %1034
  %1038 = load i32, ptr %227, align 8, !tbaa !382
  %1039 = icmp sgt i32 %1038, 0
  br i1 %1039, label %1040, label %1060

1040:                                             ; preds = %1037
  %1041 = load i32, ptr %209, align 4, !tbaa !376
  %1042 = zext i32 %1041 to i64
  %1043 = zext i32 %1038 to i64
  br label %1044

1044:                                             ; preds = %1057, %1040
  %1045 = phi i64 [ 0, %1040 ], [ %1058, %1057 ]
  %1046 = icmp eq i64 %1045, %1042
  br i1 %1046, label %1057, label %1047

1047:                                             ; preds = %1044
  %1048 = trunc i64 %1045 to i32
  %1049 = call ptr @RE_strandren_get_uv(ptr noundef %1, ptr noundef nonnull %1002, i32 noundef %1048, ptr noundef null, i32 noundef 1) #16
  %1050 = shl nuw nsw i64 %1045, 1
  %1051 = getelementptr inbounds float, ptr %1035, i64 %1050
  %1052 = load float, ptr %1051, align 4, !tbaa !13
  store float %1052, ptr %1049, align 4, !tbaa !13
  %1053 = or i64 %1050, 1
  %1054 = getelementptr inbounds float, ptr %1035, i64 %1053
  %1055 = load float, ptr %1054, align 4, !tbaa !13
  %1056 = getelementptr inbounds float, ptr %1049, i64 1
  store float %1055, ptr %1056, align 4, !tbaa !13
  br label %1057

1057:                                             ; preds = %1047, %1044
  %1058 = add nuw nsw i64 %1045, 1
  %1059 = icmp eq i64 %1058, %1043
  br i1 %1059, label %1060, label %1044, !llvm.loop !459

1060:                                             ; preds = %1057, %1037, %1034
  %1061 = load ptr, ptr %39, align 8, !tbaa !385
  %1062 = icmp eq ptr %1061, null
  br i1 %1062, label %1076, label %1063

1063:                                             ; preds = %1060
  %1064 = load i32, ptr %231, align 4, !tbaa !383
  %1065 = icmp sgt i32 %1064, 0
  br i1 %1065, label %1066, label %1076

1066:                                             ; preds = %1063
  %1067 = zext i32 %1064 to i64
  br label %1068

1068:                                             ; preds = %1068, %1066
  %1069 = phi i64 [ 0, %1066 ], [ %1074, %1068 ]
  %1070 = trunc i64 %1069 to i32
  %1071 = call ptr @RE_strandren_get_mcol(ptr noundef %1, ptr noundef nonnull %1002, i32 noundef %1070, ptr noundef null, i32 noundef 1) #16
  %1072 = getelementptr inbounds %struct.MCol, ptr %1061, i64 %1069
  %1073 = load i32, ptr %1072, align 1
  store i32 %1073, ptr %1071, align 1
  %1074 = add nuw nsw i64 %1069, 1
  %1075 = icmp eq i64 %1074, %1067
  br i1 %1075, label %1076, label %1068, !llvm.loop !460

1076:                                             ; preds = %1068, %1063, %1060
  %1077 = getelementptr inbounds %struct.StrandBound, ptr %989, i64 0, i32 1
  %1078 = load i32, ptr %1077, align 4, !tbaa !433
  %1079 = add nsw i32 %1078, 1
  store i32 %1079, ptr %1077, align 4, !tbaa !433
  br label %1080

1080:                                             ; preds = %1076, %997
  %1081 = phi ptr [ %1002, %1076 ], [ %775, %997 ]
  br i1 %699, label %1250, label %1082

1082:                                             ; preds = %1080
  br i1 %728, label %1423, label %1083

1083:                                             ; preds = %1082
  %1084 = sext i32 %984 to i64
  br label %1164

1085:                                             ; preds = %1187
  %1086 = getelementptr inbounds %struct.StrandRen, ptr %1081, i64 0, i32 2
  %1087 = icmp slt i32 %984, 0
  br i1 %1087, label %1159, label %1088

1088:                                             ; preds = %1085
  %1089 = load <4 x float>, ptr %990, align 4, !tbaa !13
  store <4 x float> %1089, ptr %36, align 16, !tbaa !13
  %1090 = getelementptr inbounds %struct.ParticleCacheKey, ptr %990, i64 0, i32 1, i64 1
  %1091 = load <2 x float>, ptr %1090, align 4, !tbaa !13
  store <2 x float> %1091, ptr %732, align 16, !tbaa !13
  %1092 = shufflevector <4 x float> %1089, <4 x float> poison, <2 x i32> <i32 0, i32 1>
  store <2 x float> %1092, ptr %40, align 8, !tbaa !13
  %1093 = extractelement <4 x float> %1089, i64 2
  store float %1093, ptr %735, align 8, !tbaa !13
  call void @mul_m4_v3(ptr noundef nonnull %328, ptr noundef nonnull %40) #16
  br i1 %713, label %1104, label %1094

1094:                                             ; preds = %1088
  %1095 = load float, ptr %40, align 8, !tbaa !13
  store float %1095, ptr %773, align 4, !tbaa !13
  %1096 = load float, ptr %734, align 4, !tbaa !13
  %1097 = getelementptr inbounds float, ptr %773, i64 1
  store float %1096, ptr %1097, align 4, !tbaa !13
  %1098 = load float, ptr %735, align 8, !tbaa !13
  %1099 = getelementptr inbounds float, ptr %773, i64 2
  store float %1098, ptr %1099, align 4, !tbaa !13
  %1100 = getelementptr inbounds %struct.StrandVert, ptr %773, i64 0, i32 1
  store float -1.000000e+00, ptr %1100, align 4, !tbaa !461
  %1101 = getelementptr inbounds %struct.StrandVert, ptr %773, i64 1
  %1102 = load i32, ptr %1086, align 8, !tbaa !463
  %1103 = add nsw i32 %1102, 1
  store i32 %1103, ptr %1086, align 8, !tbaa !463
  br label %1107

1104:                                             ; preds = %1088
  store float %988, ptr %736, align 4, !tbaa !464
  store i32 0, ptr %737, align 8, !tbaa !465
  store float 0.000000e+00, ptr %738, align 8, !tbaa !466
  %1105 = load float, ptr %735, align 8, !tbaa !13
  %1106 = load <2 x float>, ptr %40, align 8, !tbaa !13
  store <2 x float> %1106, ptr %41, align 8, !tbaa !13
  store float %1105, ptr %739, align 8, !tbaa !13
  br label %1107

1107:                                             ; preds = %1104, %1094
  %1108 = phi ptr [ %773, %1104 ], [ %1101, %1094 ]
  %1109 = icmp eq i32 %984, 0
  br i1 %1109, label %1159, label %1110

1110:                                             ; preds = %1107
  %1111 = getelementptr inbounds %struct.ParticleCacheKey, ptr %990, i64 1
  %1112 = load <4 x float>, ptr %1111, align 4, !tbaa !13
  store <4 x float> %1112, ptr %36, align 16, !tbaa !13
  %1113 = getelementptr inbounds %struct.ParticleCacheKey, ptr %990, i64 1, i32 1, i64 1
  %1114 = load <2 x float>, ptr %1113, align 4, !tbaa !13
  store <2 x float> %1114, ptr %732, align 16, !tbaa !13
  %1115 = load float, ptr %990, align 4, !tbaa !13
  %1116 = extractelement <4 x float> %1112, i64 0
  %1117 = fsub fast float %1116, %1115
  %1118 = getelementptr %struct.ParticleCacheKey, ptr %990, i64 0, i32 0, i64 1
  %1119 = load float, ptr %1118, align 4, !tbaa !13
  %1120 = extractelement <4 x float> %1112, i64 1
  %1121 = fsub fast float %1120, %1119
  %1122 = getelementptr %struct.ParticleCacheKey, ptr %990, i64 0, i32 0, i64 2
  %1123 = load float, ptr %1122, align 4, !tbaa !13
  %1124 = extractelement <4 x float> %1112, i64 2
  %1125 = fsub fast float %1124, %1123
  %1126 = fmul fast float %1117, %1117
  %1127 = fmul fast float %1121, %1121
  %1128 = fadd fast float %1127, %1126
  %1129 = fmul fast float %1125, %1125
  %1130 = fadd fast float %1128, %1129
  %1131 = call fast float @llvm.sqrt.f32(float %1130)
  %1132 = fdiv fast float %1131, %1188
  %1133 = shufflevector <4 x float> %1112, <4 x float> poison, <2 x i32> <i32 0, i32 1>
  store <2 x float> %1133, ptr %40, align 8, !tbaa !13
  store float %1124, ptr %735, align 8, !tbaa !13
  call void @mul_m4_v3(ptr noundef nonnull %328, ptr noundef nonnull %40) #16
  br i1 %713, label %1146, label %1134

1134:                                             ; preds = %1110
  %1135 = load float, ptr %40, align 8, !tbaa !13
  store float %1135, ptr %1108, align 4, !tbaa !13
  %1136 = load float, ptr %734, align 4, !tbaa !13
  %1137 = getelementptr inbounds float, ptr %1108, i64 1
  store float %1136, ptr %1137, align 4, !tbaa !13
  %1138 = load float, ptr %735, align 8, !tbaa !13
  %1139 = getelementptr inbounds float, ptr %1108, i64 2
  store float %1138, ptr %1139, align 4, !tbaa !13
  %1140 = fmul fast float %1132, 2.000000e+00
  %1141 = fadd fast float %1140, -1.000000e+00
  %1142 = getelementptr inbounds %struct.StrandVert, ptr %1108, i64 0, i32 1
  store float %1141, ptr %1142, align 4, !tbaa !461
  %1143 = getelementptr inbounds %struct.StrandVert, ptr %1108, i64 1
  %1144 = load i32, ptr %1086, align 8, !tbaa !463
  %1145 = add nsw i32 %1144, 1
  store i32 %1145, ptr %1086, align 8, !tbaa !463
  br label %1159

1146:                                             ; preds = %1110
  store float %988, ptr %736, align 4, !tbaa !464
  store i32 1, ptr %737, align 8, !tbaa !465
  store float 0.000000e+00, ptr %738, align 8, !tbaa !466
  %1147 = load float, ptr %739, align 8, !tbaa !13
  %1148 = load float, ptr %735, align 8, !tbaa !13
  %1149 = load <2 x float>, ptr %41, align 8, !tbaa !13
  %1150 = load <2 x float>, ptr %40, align 8, !tbaa !13
  %1151 = fmul fast <2 x float> %1149, <float 2.000000e+00, float 2.000000e+00>
  %1152 = fsub fast <2 x float> %1151, %1150
  store <2 x float> %1152, ptr %42, align 8, !tbaa !13
  %1153 = fmul fast float %1147, 2.000000e+00
  %1154 = fsub fast float %1153, %1148
  store float %1154, ptr %740, align 8, !tbaa !13
  %1155 = load ptr, ptr %221, align 8, !tbaa !381
  call fastcc void @particle_curve(ptr noundef %0, ptr noundef %1, ptr noundef %1155, ptr noundef nonnull %212, ptr noundef nonnull %39, ptr noundef nonnull %41, ptr noundef nonnull %42, i32 noundef %779, ptr noundef nonnull %52)
  store i32 0, ptr %737, align 8, !tbaa !465
  store float %1132, ptr %738, align 8, !tbaa !466
  %1156 = load ptr, ptr %221, align 8, !tbaa !381
  call fastcc void @particle_curve(ptr noundef %0, ptr noundef %1, ptr noundef %1156, ptr noundef nonnull %212, ptr noundef nonnull %39, ptr noundef nonnull %40, ptr noundef nonnull %41, i32 noundef %779, ptr noundef nonnull %52)
  %1157 = load <2 x float>, ptr %40, align 8, !tbaa !13
  store <2 x float> %1157, ptr %41, align 8, !tbaa !13
  %1158 = load float, ptr %735, align 8, !tbaa !13
  store float %1158, ptr %739, align 8, !tbaa !13
  br label %1159

1159:                                             ; preds = %1085, %1146, %1134, %1107
  %1160 = phi float [ 0.000000e+00, %1107 ], [ %1131, %1146 ], [ %1131, %1134 ], [ 0.000000e+00, %1085 ]
  %1161 = phi ptr [ %1108, %1107 ], [ %1108, %1146 ], [ %1143, %1134 ], [ %773, %1085 ]
  br i1 %768, label %1423, label %1162

1162:                                             ; preds = %1159
  %1163 = fdiv fast float 1.000000e+00, %1188
  br label %1191

1164:                                             ; preds = %1187, %1083
  %1165 = phi i64 [ 1, %1083 ], [ %1189, %1187 ]
  %1166 = phi float [ 0.000000e+00, %1083 ], [ %1188, %1187 ]
  %1167 = icmp sgt i64 %1165, %1084
  br i1 %1167, label %1187, label %1168

1168:                                             ; preds = %1164
  %1169 = getelementptr inbounds %struct.ParticleCacheKey, ptr %990, i64 %1165
  %1170 = getelementptr inbounds %struct.ParticleCacheKey, ptr %1169, i64 -1
  %1171 = load float, ptr %1169, align 4, !tbaa !13
  %1172 = load float, ptr %1170, align 4, !tbaa !13
  %1173 = fsub fast float %1171, %1172
  %1174 = getelementptr inbounds float, ptr %1169, i64 1
  %1175 = getelementptr %struct.ParticleCacheKey, ptr %1169, i64 -1, i32 0, i64 1
  %1176 = fmul fast float %1173, %1173
  %1177 = load <2 x float>, ptr %1174, align 4, !tbaa !13
  %1178 = load <2 x float>, ptr %1175, align 4, !tbaa !13
  %1179 = fsub fast <2 x float> %1177, %1178
  %1180 = fmul fast <2 x float> %1179, %1179
  %1181 = extractelement <2 x float> %1180, i64 0
  %1182 = fadd fast float %1181, %1176
  %1183 = extractelement <2 x float> %1180, i64 1
  %1184 = fadd fast float %1182, %1183
  %1185 = call fast float @llvm.sqrt.f32(float %1184)
  %1186 = fadd fast float %1185, %1166
  br label %1187

1187:                                             ; preds = %1168, %1164
  %1188 = phi float [ %1186, %1168 ], [ %1166, %1164 ]
  %1189 = add nuw nsw i64 %1165, 1
  %1190 = icmp eq i64 %1189, %767
  br i1 %1190, label %1085, label %1164, !llvm.loop !467

1191:                                             ; preds = %1162, %1245
  %1192 = phi i64 [ %1248, %1245 ], [ 2, %1162 ]
  %1193 = phi ptr [ %1247, %1245 ], [ %1161, %1162 ]
  %1194 = phi float [ %1246, %1245 ], [ %1160, %1162 ]
  %1195 = icmp sgt i64 %1192, %1084
  br i1 %1195, label %1245, label %1196

1196:                                             ; preds = %1191
  %1197 = getelementptr inbounds %struct.ParticleCacheKey, ptr %990, i64 %1192
  %1198 = load float, ptr %1197, align 4, !tbaa !13
  store float %1198, ptr %36, align 16, !tbaa !13
  %1199 = getelementptr inbounds float, ptr %1197, i64 1
  %1200 = load float, ptr %1199, align 4, !tbaa !13
  store float %1200, ptr %729, align 4, !tbaa !13
  %1201 = getelementptr inbounds float, ptr %1197, i64 2
  %1202 = load float, ptr %1201, align 4, !tbaa !13
  store float %1202, ptr %730, align 8, !tbaa !13
  %1203 = getelementptr inbounds %struct.ParticleCacheKey, ptr %990, i64 %1192, i32 1
  %1204 = load float, ptr %1203, align 4, !tbaa !13
  store float %1204, ptr %731, align 4, !tbaa !13
  %1205 = getelementptr inbounds float, ptr %1203, i64 1
  %1206 = load float, ptr %1205, align 4, !tbaa !13
  store float %1206, ptr %732, align 16, !tbaa !13
  %1207 = getelementptr inbounds float, ptr %1203, i64 2
  %1208 = load float, ptr %1207, align 4, !tbaa !13
  store float %1208, ptr %733, align 4, !tbaa !13
  %1209 = getelementptr inbounds %struct.ParticleCacheKey, ptr %1197, i64 -1
  %1210 = load float, ptr %1197, align 4, !tbaa !13
  %1211 = load float, ptr %1209, align 4, !tbaa !13
  %1212 = fsub fast float %1210, %1211
  %1213 = load float, ptr %1199, align 4, !tbaa !13
  %1214 = getelementptr %struct.ParticleCacheKey, ptr %1197, i64 -1, i32 0, i64 1
  %1215 = load float, ptr %1214, align 4, !tbaa !13
  %1216 = fsub fast float %1213, %1215
  %1217 = load float, ptr %1201, align 4, !tbaa !13
  %1218 = getelementptr %struct.ParticleCacheKey, ptr %1197, i64 -1, i32 0, i64 2
  %1219 = load float, ptr %1218, align 4, !tbaa !13
  %1220 = fsub fast float %1217, %1219
  %1221 = fmul fast float %1212, %1212
  %1222 = fmul fast float %1216, %1216
  %1223 = fadd fast float %1222, %1221
  %1224 = fmul fast float %1220, %1220
  %1225 = fadd fast float %1223, %1224
  %1226 = call fast float @llvm.sqrt.f32(float %1225)
  %1227 = fadd fast float %1226, %1194
  %1228 = fmul fast float %1227, %1163
  store float %1198, ptr %40, align 8, !tbaa !13
  store float %1200, ptr %734, align 4, !tbaa !13
  store float %1202, ptr %735, align 8, !tbaa !13
  call void @mul_m4_v3(ptr noundef nonnull %328, ptr noundef nonnull %40) #16
  br i1 %713, label %1241, label %1229

1229:                                             ; preds = %1196
  %1230 = load float, ptr %40, align 8, !tbaa !13
  store float %1230, ptr %1193, align 4, !tbaa !13
  %1231 = load float, ptr %734, align 4, !tbaa !13
  %1232 = getelementptr inbounds float, ptr %1193, i64 1
  store float %1231, ptr %1232, align 4, !tbaa !13
  %1233 = load float, ptr %735, align 8, !tbaa !13
  %1234 = getelementptr inbounds float, ptr %1193, i64 2
  store float %1233, ptr %1234, align 4, !tbaa !13
  %1235 = fmul fast float %1228, 2.000000e+00
  %1236 = fadd fast float %1235, -1.000000e+00
  %1237 = getelementptr inbounds %struct.StrandVert, ptr %1193, i64 0, i32 1
  store float %1236, ptr %1237, align 4, !tbaa !461
  %1238 = getelementptr inbounds %struct.StrandVert, ptr %1193, i64 1
  %1239 = load i32, ptr %1086, align 8, !tbaa !463
  %1240 = add nsw i32 %1239, 1
  store i32 %1240, ptr %1086, align 8, !tbaa !463
  br label %1245

1241:                                             ; preds = %1196
  store float %988, ptr %736, align 4, !tbaa !464
  %1242 = load ptr, ptr %221, align 8, !tbaa !381
  store i32 0, ptr %737, align 8, !tbaa !465
  store float %1228, ptr %738, align 8, !tbaa !466
  call fastcc void @particle_curve(ptr noundef %0, ptr noundef %1, ptr noundef %1242, ptr noundef nonnull %212, ptr noundef nonnull %39, ptr noundef nonnull %40, ptr noundef nonnull %41, i32 noundef %779, ptr noundef nonnull %52)
  %1243 = load <2 x float>, ptr %40, align 8, !tbaa !13
  store <2 x float> %1243, ptr %41, align 8, !tbaa !13
  %1244 = load float, ptr %735, align 8, !tbaa !13
  store float %1244, ptr %739, align 8, !tbaa !13
  br label %1245

1245:                                             ; preds = %1241, %1229, %1191
  %1246 = phi float [ %1194, %1191 ], [ %1227, %1241 ], [ %1227, %1229 ]
  %1247 = phi ptr [ %1193, %1191 ], [ %1193, %1241 ], [ %1238, %1229 ]
  %1248 = add nuw nsw i64 %1192, 1
  %1249 = icmp eq i64 %1248, %767
  br i1 %1249, label %1423, label %1191, !llvm.loop !468

1250:                                             ; preds = %1080
  %1251 = load i32, ptr %741, align 8, !tbaa !470
  %1252 = icmp sgt i32 %1251, 1
  br i1 %1252, label %1253, label %1363

1253:                                             ; preds = %1250
  %1254 = load float, ptr %761, align 4, !tbaa !471
  %1255 = load float, ptr %762, align 8, !tbaa !472
  %1256 = fmul fast float %1255, %985
  %1257 = fsub fast float 1.000000e+00, %1256
  %1258 = fmul fast float %1257, %1254
  %1259 = sitofp i32 %1251 to float
  %1260 = fmul fast float %1257, %1259
  %1261 = fptosi float %1260 to i32
  %1262 = load i32, ptr %721, align 8, !tbaa !240
  %1263 = load float, ptr %48, align 4
  %1264 = icmp eq i32 %1261, 0
  %1265 = sitofp i32 %1261 to float
  %1266 = select fast i1 %1264, float 1.000000e+00, float %1265
  %1267 = fdiv fast float %1258, %1266
  call void @psys_make_temp_pointcache(ptr noundef %126, ptr noundef nonnull %125) #16
  %1268 = icmp sgt i32 %1261, 0
  br i1 %1268, label %1269, label %1423

1269:                                             ; preds = %1253
  %1270 = and i32 %1262, 32
  %1271 = icmp eq i32 %1270, 0
  %1272 = select fast i1 %1271, float %1263, float %129
  %1273 = add nsw i32 %1261, -1
  %1274 = sitofp i32 %1273 to float
  %1275 = trunc i64 %770 to i32
  %1276 = fdiv fast float 1.000000e+00, %1274
  br label %1277

1277:                                             ; preds = %1359, %1269
  %1278 = phi float [ %1272, %1269 ], [ %1361, %1359 ]
  %1279 = phi i32 [ 0, %1269 ], [ %1360, %1359 ]
  %1280 = load i32, ptr %721, align 8, !tbaa !240
  %1281 = and i32 %1280, 32
  %1282 = icmp eq i32 %1281, 0
  br i1 %1282, label %1289, label %1283

1283:                                             ; preds = %1277
  %1284 = load float, ptr %49, align 4, !tbaa !13
  %1285 = fcmp fast olt float %1278, %1284
  %1286 = load float, ptr %50, align 4
  %1287 = fcmp fast ogt float %1278, %1286
  %1288 = select i1 %1285, i1 true, i1 %1287
  br i1 %1288, label %1359, label %1293

1289:                                             ; preds = %1277
  %1290 = fcmp fast olt float %1278, 0.000000e+00
  %1291 = fcmp fast ogt float %1278, 1.000000e+00
  %1292 = select i1 %1290, i1 true, i1 %1291
  br i1 %1292, label %1359, label %1293

1293:                                             ; preds = %1289, %1283
  %1294 = fneg fast float %1278
  %1295 = select fast i1 %1282, float %1278, float %1294
  store float %1295, ptr %742, align 4, !tbaa !473
  call void @psys_get_particle_on_path(ptr noundef nonnull %38, i32 noundef %1275, ptr noundef nonnull %36, i8 noundef zeroext 1) #16
  %1296 = load ptr, ptr %743, align 8, !tbaa !474
  %1297 = icmp eq ptr %1296, null
  br i1 %1297, label %1300, label %1298

1298:                                             ; preds = %1293
  %1299 = getelementptr inbounds %struct.Object, ptr %1296, i64 0, i32 47
  call void @mul_m4_v3(ptr noundef nonnull %1299, ptr noundef nonnull %36) #16
  br label %1300

1300:                                             ; preds = %1298, %1293
  br i1 %334, label %1302, label %1301

1301:                                             ; preds = %1300
  call void @mul_m4_v4(ptr noundef nonnull %47, ptr noundef nonnull %36) #16
  br label %1302

1302:                                             ; preds = %1301, %1300
  %1303 = load i16, ptr %143, align 8, !tbaa !143
  %1304 = icmp eq i16 %1303, 9
  br i1 %1304, label %1305, label %1344

1305:                                             ; preds = %1302
  store float %780, ptr %744, align 4, !tbaa !475
  %1306 = load <2 x float>, ptr %745, align 8, !tbaa !13
  store <2 x float> %1306, ptr %746, align 8, !tbaa !13
  %1307 = load float, ptr %748, align 8, !tbaa !13
  %1308 = fmul fast float %1307, %987
  store float %1308, ptr %749, align 8, !tbaa !13
  %1309 = load i16, ptr %750, align 8, !tbaa !386
  %1310 = icmp eq i16 %1309, 4
  br i1 %1310, label %1311, label %1335

1311:                                             ; preds = %1305
  %1312 = load float, ptr %731, align 4, !tbaa !13
  %1313 = fmul fast float %1312, %1312
  %1314 = load <2 x float>, ptr %732, align 16, !tbaa !13
  %1315 = fmul fast <2 x float> %1314, %1314
  %1316 = extractelement <2 x float> %1315, i64 0
  %1317 = fadd fast float %1316, %1313
  %1318 = extractelement <2 x float> %1315, i64 1
  %1319 = fadd fast float %1317, %1318
  %1320 = call fast float @llvm.sqrt.f32(float %1319)
  %1321 = load float, ptr %753, align 8, !tbaa !476
  %1322 = fmul fast float %1320, %1321
  %1323 = load float, ptr %754, align 4, !tbaa !477
  %1324 = fmul fast float %1320, %1323
  %1325 = load float, ptr %751, align 4, !tbaa !13
  %1326 = fmul fast float %1325, %987
  %1327 = fadd fast float %1326, %1322
  %1328 = fadd fast float %1327, %1324
  store float %1328, ptr %752, align 4, !tbaa !13
  %1329 = fcmp fast ogt float %1328, 0.000000e+00
  br i1 %1329, label %1330, label %1338

1330:                                             ; preds = %1311
  %1331 = fsub fast float %1322, %1324
  %1332 = fdiv fast float %1331, %1328
  %1333 = extractelement <2 x float> %1306, i64 1
  %1334 = fadd fast float %1332, %1333
  store float %1334, ptr %747, align 4, !tbaa !13
  br label %1338

1335:                                             ; preds = %1305
  %1336 = load float, ptr %751, align 4, !tbaa !13
  %1337 = fmul fast float %1336, %987
  store float %1337, ptr %752, align 4, !tbaa !13
  br label %1338

1338:                                             ; preds = %1335, %1330, %1311
  %1339 = load float, ptr %755, align 8, !tbaa !478
  %1340 = load float, ptr %756, align 4, !tbaa !479
  %1341 = fmul fast float %1340, %992
  %1342 = fsub fast float 1.000000e+00, %1341
  %1343 = fmul fast float %1342, %1339
  store float %1343, ptr %757, align 8, !tbaa !480
  store float %1278, ptr %758, align 8, !tbaa !481
  store i32 %1275, ptr %759, align 4, !tbaa !482
  br label %1344

1344:                                             ; preds = %1338, %1302
  %1345 = load i32, ptr %721, align 8, !tbaa !240
  %1346 = and i32 %1345, 32
  %1347 = icmp eq i32 %1346, 0
  br i1 %1347, label %1354, label %1348

1348:                                             ; preds = %1344
  %1349 = load float, ptr %49, align 4, !tbaa !13
  %1350 = fsub fast float %1278, %1349
  %1351 = load float, ptr %50, align 4, !tbaa !13
  %1352 = fsub fast float %1351, %1349
  %1353 = fdiv fast float %1350, %1352
  br label %1354

1354:                                             ; preds = %1348, %1344
  %1355 = phi fast float [ %1353, %1348 ], [ %1278, %1344 ]
  store float %1355, ptr %52, align 4, !tbaa !13
  %1356 = sitofp i32 %1279 to float
  %1357 = fmul fast float %1356, %1276
  store float %1357, ptr %722, align 4, !tbaa !13
  %1358 = load ptr, ptr %221, align 8, !tbaa !381
  call fastcc void @particle_normal_ren(i16 noundef signext %1303, ptr noundef nonnull %133, ptr noundef %0, ptr noundef %1, ptr noundef %1358, ptr noundef nonnull %212, ptr noundef nonnull %39, ptr noundef nonnull %37, ptr noundef nonnull %36, i32 noundef %779, float noundef nofpclass(nan inf) %988, ptr noundef nonnull %52)
  br label %1359

1359:                                             ; preds = %1354, %1289, %1283
  %1360 = add nuw nsw i32 %1279, 1
  %1361 = fsub fast float %1278, %1267
  %1362 = icmp eq i32 %1360, %1261
  br i1 %1362, label %1423, label %1277, !llvm.loop !483

1363:                                             ; preds = %1250
  store float %129, ptr %742, align 4, !tbaa !473
  %1364 = trunc i64 %770 to i32
  %1365 = call i32 @psys_get_particle_state(ptr noundef nonnull %38, i32 noundef %1364, ptr noundef nonnull %36, i32 noundef 0) #16
  %1366 = icmp eq i32 %1365, 0
  br i1 %1366, label %1433, label %1367

1367:                                             ; preds = %1363
  %1368 = load ptr, ptr %743, align 8, !tbaa !474
  %1369 = icmp eq ptr %1368, null
  br i1 %1369, label %1372, label %1370

1370:                                             ; preds = %1367
  %1371 = getelementptr inbounds %struct.Object, ptr %1368, i64 0, i32 47
  call void @mul_m4_v3(ptr noundef nonnull %1371, ptr noundef nonnull %36) #16
  br label %1372

1372:                                             ; preds = %1370, %1367
  br i1 %334, label %1374, label %1373

1373:                                             ; preds = %1372
  call void @mul_m4_v3(ptr noundef nonnull %47, ptr noundef nonnull %36) #16
  br label %1374

1374:                                             ; preds = %1373, %1372
  %1375 = load i16, ptr %143, align 8, !tbaa !143
  %1376 = icmp eq i16 %1375, 9
  br i1 %1376, label %1377, label %1421

1377:                                             ; preds = %1374
  store float %780, ptr %744, align 4, !tbaa !475
  %1378 = load <2 x float>, ptr %745, align 8, !tbaa !13
  store <2 x float> %1378, ptr %746, align 8, !tbaa !13
  %1379 = load float, ptr %748, align 8, !tbaa !13
  %1380 = fmul fast float %1379, %987
  store float %1380, ptr %749, align 8, !tbaa !13
  %1381 = load i16, ptr %750, align 8, !tbaa !386
  %1382 = icmp eq i16 %1381, 4
  br i1 %1382, label %1383, label %1407

1383:                                             ; preds = %1377
  %1384 = load float, ptr %731, align 4, !tbaa !13
  %1385 = fmul fast float %1384, %1384
  %1386 = load <2 x float>, ptr %732, align 16, !tbaa !13
  %1387 = fmul fast <2 x float> %1386, %1386
  %1388 = extractelement <2 x float> %1387, i64 0
  %1389 = fadd fast float %1388, %1385
  %1390 = extractelement <2 x float> %1387, i64 1
  %1391 = fadd fast float %1389, %1390
  %1392 = call fast float @llvm.sqrt.f32(float %1391)
  %1393 = load float, ptr %753, align 8, !tbaa !476
  %1394 = fmul fast float %1392, %1393
  %1395 = load float, ptr %754, align 4, !tbaa !477
  %1396 = fmul fast float %1392, %1395
  %1397 = load float, ptr %751, align 4, !tbaa !13
  %1398 = fmul fast float %1397, %987
  %1399 = fadd fast float %1398, %1394
  %1400 = fadd fast float %1399, %1396
  store float %1400, ptr %752, align 4, !tbaa !13
  %1401 = fcmp fast ogt float %1400, 0.000000e+00
  br i1 %1401, label %1402, label %1410

1402:                                             ; preds = %1383
  %1403 = fsub fast float %1394, %1396
  %1404 = fdiv fast float %1403, %1400
  %1405 = extractelement <2 x float> %1378, i64 1
  %1406 = fadd fast float %1404, %1405
  store float %1406, ptr %747, align 4, !tbaa !13
  br label %1410

1407:                                             ; preds = %1377
  %1408 = load float, ptr %751, align 4, !tbaa !13
  %1409 = fmul fast float %1408, %987
  store float %1409, ptr %752, align 4, !tbaa !13
  br label %1410

1410:                                             ; preds = %1407, %1402, %1383
  %1411 = load float, ptr %755, align 8, !tbaa !478
  %1412 = load float, ptr %756, align 4, !tbaa !479
  %1413 = fmul fast float %1412, %992
  %1414 = fsub fast float 1.000000e+00, %1413
  %1415 = fmul fast float %1414, %1411
  store float %1415, ptr %757, align 8, !tbaa !480
  %1416 = load float, ptr %48, align 4, !tbaa !13
  store float %1416, ptr %758, align 8, !tbaa !481
  store i32 %1364, ptr %759, align 4, !tbaa !482
  %1417 = load float, ptr %50, align 4, !tbaa !13
  %1418 = load float, ptr %49, align 4, !tbaa !13
  %1419 = fsub fast float %1417, %1418
  %1420 = fptosi float %1419 to i32
  store i32 %1420, ptr %760, align 4, !tbaa !484
  br label %1421

1421:                                             ; preds = %1410, %1374
  %1422 = load ptr, ptr %221, align 8, !tbaa !381
  call fastcc void @particle_normal_ren(i16 noundef signext %1375, ptr noundef nonnull %133, ptr noundef %0, ptr noundef %1, ptr noundef %1422, ptr noundef nonnull %212, ptr noundef nonnull %39, ptr noundef nonnull %37, ptr noundef nonnull %36, i32 noundef %779, float noundef nofpclass(nan inf) %988, ptr noundef nonnull %52)
  br label %1423

1423:                                             ; preds = %1245, %1359, %1159, %1421, %1253, %1082
  %1424 = phi ptr [ %773, %1421 ], [ %773, %1253 ], [ %773, %1082 ], [ %1161, %1159 ], [ %773, %1359 ], [ %1247, %1245 ]
  br i1 %690, label %1428, label %1425

1425:                                             ; preds = %1423
  %1426 = load ptr, ptr %691, align 8, !tbaa !400
  %1427 = getelementptr inbounds float, ptr %1426, i64 3
  store ptr %1427, ptr %691, align 8, !tbaa !400
  br label %1428

1428:                                             ; preds = %1425, %1423
  %1429 = load ptr, ptr %763, align 8, !tbaa !93
  %1430 = load ptr, ptr %764, align 8, !tbaa !94
  %1431 = call i32 %1429(ptr noundef %1430) #16
  %1432 = icmp eq i32 %1431, 0
  br i1 %1432, label %1433, label %1445

1433:                                             ; preds = %1428, %1363, %862, %854, %782
  %1434 = phi i8 [ %778, %782 ], [ %778, %854 ], [ %983, %1428 ], [ %983, %1363 ], [ %778, %862 ]
  %1435 = phi i32 [ %777, %782 ], [ %852, %854 ], [ %984, %1428 ], [ %984, %1363 ], [ %777, %862 ]
  %1436 = phi float [ %776, %782 ], [ %796, %854 ], [ %988, %1428 ], [ %988, %1363 ], [ %776, %862 ]
  %1437 = phi ptr [ %775, %782 ], [ %775, %854 ], [ %1081, %1428 ], [ %1081, %1363 ], [ %775, %862 ]
  %1438 = phi ptr [ %774, %782 ], [ %774, %854 ], [ %989, %1428 ], [ %989, %1363 ], [ %774, %862 ]
  %1439 = phi ptr [ %773, %782 ], [ %773, %854 ], [ %1424, %1428 ], [ %773, %1363 ], [ %773, %862 ]
  %1440 = phi ptr [ %772, %782 ], [ %853, %854 ], [ %990, %1428 ], [ %990, %1363 ], [ %866, %862 ]
  %1441 = add nuw nsw i64 %770, 1
  %1442 = getelementptr inbounds %struct.ParticleData, ptr %771, i64 1
  %1443 = add nuw nsw i32 %779, 1
  %1444 = icmp eq i64 %1441, %766
  br i1 %1444, label %1445, label %769, !llvm.loop !485

1445:                                             ; preds = %1433, %1428, %703
  %1446 = icmp eq i8 %697, 0
  br i1 %1446, label %1451, label %1447

1447:                                             ; preds = %1445
  %1448 = load ptr, ptr %221, align 8, !tbaa !381
  %1449 = call ptr @cache_strand_surface(ptr noundef %0, ptr noundef %1, ptr noundef %1448, ptr noundef nonnull %43, i32 noundef %2) #16
  %1450 = getelementptr inbounds %struct.StrandBuffer, ptr %692, i64 0, i32 8
  store ptr %1449, ptr %1450, align 8, !tbaa !206
  br label %1451

1451:                                             ; preds = %1447, %1445
  br i1 %690, label %1452, label %1455

1452:                                             ; preds = %1451
  %1453 = load ptr, ptr @MEM_freeN, align 8, !tbaa !16
  %1454 = load ptr, ptr %691, align 8, !tbaa !400
  call void %1453(ptr noundef %1454) #16
  br label %1455

1455:                                             ; preds = %1452, %1451
  %1456 = getelementptr inbounds %struct.ParticleStrandData, ptr %39, i64 0, i32 2
  %1457 = load ptr, ptr %1456, align 8, !tbaa !384
  %1458 = icmp eq ptr %1457, null
  br i1 %1458, label %1461, label %1459

1459:                                             ; preds = %1455
  %1460 = load ptr, ptr @MEM_freeN, align 8, !tbaa !16
  call void %1460(ptr noundef nonnull %1457) #16
  br label %1461

1461:                                             ; preds = %1459, %1455
  %1462 = load ptr, ptr %39, align 8, !tbaa !385
  %1463 = icmp eq ptr %1462, null
  br i1 %1463, label %1466, label %1464

1464:                                             ; preds = %1461
  %1465 = load ptr, ptr @MEM_freeN, align 8, !tbaa !16
  call void %1465(ptr noundef nonnull %1462) #16
  br label %1466

1466:                                             ; preds = %1464, %1461
  call void @BLI_rng_free(ptr noundef %206) #16
  %1467 = load i32, ptr %201, align 4, !tbaa !245
  %1468 = and i32 %1467, -65
  store i32 %1468, ptr %201, align 4, !tbaa !245
  %1469 = getelementptr inbounds %struct.ParticleSystem, ptr %125, i64 0, i32 15
  %1470 = load ptr, ptr %1469, align 8, !tbaa !436
  %1471 = icmp eq ptr %1470, null
  br i1 %1471, label %1473, label %1472

1472:                                             ; preds = %1466
  call void @end_latt_deform(ptr noundef nonnull %1470) #16
  store ptr null, ptr %1469, align 8, !tbaa !436
  br label %1473

1473:                                             ; preds = %1472, %1466
  br i1 %699, label %1480, label %1474

1474:                                             ; preds = %1473
  %1475 = getelementptr inbounds %struct.Material, ptr %212, i64 0, i32 52
  %1476 = load i32, ptr %1475, align 8, !tbaa !456
  %1477 = and i32 %1476, 16777216
  %1478 = icmp eq i32 %1477, 0
  br i1 %1478, label %1479, label %1480

1479:                                             ; preds = %1474
  call fastcc void @calc_vertexnormals(ptr noundef %1, i8 noundef zeroext 1, i8 noundef zeroext 0, i8 noundef zeroext 0)
  br label %1480

1480:                                             ; preds = %124, %131, %139, %142, %142, %142, %150, %155, %1473, %1474, %1479
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %52) #16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %51) #16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %50) #16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %49) #16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %48) #16
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %47) #16
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %46) #16
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %45) #16
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %44) #16
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %43) #16
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %42) #16
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %41) #16
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %40) #16
  call void @llvm.lifetime.end.p0(i64 72, ptr nonnull %39) #16
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %38) #16
  call void @llvm.lifetime.end.p0(i64 96, ptr nonnull %37) #16
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %36) #16
  br label %4596

1481:                                             ; preds = %3
  %1482 = getelementptr inbounds %struct.Object, ptr %54, i64 0, i32 3
  %1483 = load i16, ptr %1482, align 8, !tbaa !115
  switch i16 %1483, label %4596 [
    i16 4, label %1484
    i16 2, label %1484
    i16 3, label %2161
    i16 1, label %2278
    i16 5, label %4401
  ]

1484:                                             ; preds = %1481, %1481
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %25) #16
  store ptr null, ptr %25, align 8, !tbaa !16
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %26) #16
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %26, i8 0, i64 16, i1 false)
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %27) #16
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %28) #16
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %29) #16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %30) #16
  %1485 = getelementptr inbounds %struct.Object, ptr %54, i64 0, i32 19
  %1486 = load ptr, ptr %1485, align 8, !tbaa !260
  switch i16 %1483, label %1495 [
    i16 4, label %1487
    i16 2, label %1491
  ]

1487:                                             ; preds = %1484
  %1488 = getelementptr inbounds %struct.Curve, ptr %1486, i64 0, i32 52
  %1489 = load ptr, ptr %1488, align 8, !tbaa !486
  %1490 = icmp eq ptr %1489, null
  br i1 %1490, label %2160, label %1495

1491:                                             ; preds = %1484
  %1492 = getelementptr inbounds %struct.Curve, ptr %1486, i64 0, i32 3
  %1493 = load ptr, ptr %1492, align 8, !tbaa !489
  %1494 = icmp eq ptr %1493, null
  br i1 %1494, label %2160, label %1495

1495:                                             ; preds = %1491, %1487, %1484
  %1496 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 44
  %1497 = load ptr, ptr %1496, align 8, !tbaa !17
  call void @BKE_displist_make_curveTypes_forRender(ptr noundef %1497, ptr noundef nonnull %54, ptr noundef nonnull %26, ptr noundef nonnull %25, i8 noundef zeroext 0, i8 noundef zeroext 1) #16
  %1498 = load ptr, ptr %26, align 8, !tbaa !175
  %1499 = icmp eq ptr %1498, null
  br i1 %1499, label %2160, label %1500

1500:                                             ; preds = %1495
  %1501 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 32
  %1502 = getelementptr inbounds %struct.Object, ptr %54, i64 0, i32 47
  call void @mul_m4_m4m4(ptr noundef nonnull %28, ptr noundef nonnull %1501, ptr noundef nonnull %1502) #16
  %1503 = getelementptr inbounds %struct.Object, ptr %54, i64 0, i32 50
  %1504 = call zeroext i8 @invert_m4_m4(ptr noundef nonnull %1503, ptr noundef nonnull %28) #16
  %1505 = call zeroext i8 @is_negative_m4(ptr noundef nonnull %28) #16
  call void @copy_m4_m4(ptr noundef nonnull %29, ptr noundef nonnull %28) #16
  call void @transpose_m4(ptr noundef nonnull %29) #16
  %1506 = call zeroext i8 @invert_m4(ptr noundef nonnull %29) #16
  %1507 = getelementptr inbounds %struct.Object, ptr %54, i64 0, i32 31
  %1508 = load i32, ptr %1507, align 8, !tbaa !243
  %1509 = add i32 %1508, 1
  %1510 = load ptr, ptr @MEM_callocN, align 8, !tbaa !16
  %1511 = sext i32 %1509 to i64
  %1512 = shl nsw i64 %1511, 3
  %1513 = call ptr %1510(i64 noundef %1512, ptr noundef nonnull @.str.19) #16
  %1514 = icmp slt i32 %1508, 0
  br i1 %1514, label %1534, label %1515

1515:                                             ; preds = %1500
  %1516 = zext i32 %1509 to i64
  br label %1517

1517:                                             ; preds = %1517, %1515
  %1518 = phi i64 [ 0, %1515 ], [ %1520, %1517 ]
  %1519 = phi i8 [ 0, %1515 ], [ %1528, %1517 ]
  %1520 = add nuw nsw i64 %1518, 1
  %1521 = trunc i64 %1520 to i16
  %1522 = call fastcc ptr @give_render_material(ptr noundef %0, ptr noundef %54, i16 noundef signext %1521)
  %1523 = getelementptr inbounds ptr, ptr %1513, i64 %1518
  store ptr %1522, ptr %1523, align 8, !tbaa !16
  %1524 = getelementptr inbounds %struct.Material, ptr %1522, i64 0, i32 90
  %1525 = load i16, ptr %1524, align 4, !tbaa !237
  %1526 = and i16 %1525, 1
  %1527 = icmp eq i16 %1526, 0
  %1528 = select i1 %1527, i8 %1519, i8 1
  %1529 = icmp eq i64 %1520, %1516
  br i1 %1529, label %1530, label %1517, !llvm.loop !490

1530:                                             ; preds = %1517
  %1531 = load ptr, ptr %25, align 8, !tbaa !16
  %1532 = icmp eq ptr %1531, null
  %1533 = icmp eq i8 %1528, 0
  br i1 %1532, label %1565, label %1537

1534:                                             ; preds = %1500
  %1535 = load ptr, ptr %25, align 8, !tbaa !16
  %1536 = icmp eq ptr %1535, null
  br i1 %1536, label %1582, label %1559

1537:                                             ; preds = %1530
  br i1 %1533, label %1559, label %1538

1538:                                             ; preds = %1537
  %1539 = getelementptr i8, ptr %0, i64 5840
  %1540 = load ptr, ptr %1539, align 8, !tbaa !76
  %1541 = icmp eq ptr %1540, null
  br i1 %1541, label %1547, label %1542

1542:                                             ; preds = %1538
  %1543 = call ptr @BLI_ghash_lookup(ptr noundef nonnull %1540, ptr noundef %54) #16
  %1544 = icmp eq ptr %1543, null
  br i1 %1544, label %1545, label %1559

1545:                                             ; preds = %1542
  %1546 = load ptr, ptr %25, align 8, !tbaa !16
  br label %1547

1547:                                             ; preds = %1545, %1538
  %1548 = phi ptr [ %1546, %1545 ], [ %1531, %1538 ]
  %1549 = load ptr, ptr %1496, align 8, !tbaa !17
  %1550 = call ptr @BKE_displist_make_orco(ptr noundef %1549, ptr noundef %54, ptr noundef %1548, i8 noundef zeroext 1, i8 noundef zeroext 1) #16
  %1551 = icmp eq ptr %1550, null
  br i1 %1551, label %1559, label %1552

1552:                                             ; preds = %1547
  %1553 = load ptr, ptr %1539, align 8, !tbaa !76
  %1554 = icmp eq ptr %1553, null
  br i1 %1554, label %1555, label %1557

1555:                                             ; preds = %1552
  %1556 = call ptr @BLI_ghash_ptr_new(ptr noundef nonnull @.str.18) #16
  store ptr %1556, ptr %1539, align 8, !tbaa !76
  br label %1557

1557:                                             ; preds = %1555, %1552
  %1558 = phi ptr [ %1556, %1555 ], [ %1553, %1552 ]
  call void @BLI_ghash_insert(ptr noundef %1558, ptr noundef %54, ptr noundef nonnull %1550) #16
  br label %1559

1559:                                             ; preds = %1557, %1547, %1542, %1537, %1534
  %1560 = phi ptr [ %1543, %1542 ], [ %1550, %1557 ], [ null, %1547 ], [ null, %1537 ], [ null, %1534 ]
  %1561 = load ptr, ptr %25, align 8, !tbaa !16
  call fastcc void @init_render_dm(ptr noundef %1561, ptr noundef %0, ptr noundef %1, i32 noundef %2, ptr noundef %1560, ptr noundef nonnull %28)
  %1562 = load ptr, ptr %25, align 8, !tbaa !16
  %1563 = getelementptr inbounds %struct.DerivedMesh, ptr %1562, i64 0, i32 95
  %1564 = load ptr, ptr %1563, align 8, !tbaa !250
  call void %1564(ptr noundef %1562) #16
  br label %2158

1565:                                             ; preds = %1530
  br i1 %1533, label %1582, label %1566

1566:                                             ; preds = %1565
  %1567 = getelementptr i8, ptr %0, i64 5840
  %1568 = load ptr, ptr %1567, align 8, !tbaa !76
  %1569 = icmp eq ptr %1568, null
  br i1 %1569, label %1573, label %1570

1570:                                             ; preds = %1566
  %1571 = call ptr @BLI_ghash_lookup(ptr noundef nonnull %1568, ptr noundef %54) #16
  %1572 = icmp eq ptr %1571, null
  br i1 %1572, label %1573, label %1582

1573:                                             ; preds = %1570, %1566
  %1574 = load ptr, ptr %1496, align 8, !tbaa !17
  %1575 = call ptr @BKE_curve_make_orco(ptr noundef %1574, ptr noundef %54, ptr noundef null) #16
  %1576 = load ptr, ptr %1567, align 8, !tbaa !76
  %1577 = icmp eq ptr %1576, null
  br i1 %1577, label %1578, label %1580

1578:                                             ; preds = %1573
  %1579 = call ptr @BLI_ghash_ptr_new(ptr noundef nonnull @.str.18) #16
  store ptr %1579, ptr %1567, align 8, !tbaa !76
  br label %1580

1580:                                             ; preds = %1578, %1573
  %1581 = phi ptr [ %1579, %1578 ], [ %1576, %1573 ]
  call void @BLI_ghash_insert(ptr noundef %1581, ptr noundef %54, ptr noundef %1575) #16
  br label %1582

1582:                                             ; preds = %1580, %1570, %1565, %1534
  %1583 = phi ptr [ %1571, %1570 ], [ %1575, %1580 ], [ null, %1565 ], [ null, %1534 ]
  %1584 = getelementptr inbounds %struct.ObjectRen, ptr %1, i64 0, i32 10
  %1585 = icmp eq i32 %2, 0
  %1586 = getelementptr inbounds %struct.ObjectRen, ptr %1, i64 0, i32 11
  %1587 = getelementptr inbounds float, ptr %27, i64 2
  %1588 = icmp eq i8 %1505, 0
  %1589 = getelementptr inbounds float, ptr %31, i64 2
  br label %1590

1590:                                             ; preds = %2154, %1582
  %1591 = phi ptr [ %1498, %1582 ], [ %2156, %2154 ]
  %1592 = phi ptr [ %1583, %1582 ], [ %2155, %2154 ]
  %1593 = getelementptr inbounds %struct.DispList, ptr %1591, i64 0, i32 6
  %1594 = load i16, ptr %1593, align 4, !tbaa !491
  %1595 = sext i16 %1594 to i32
  %1596 = load i32, ptr %1507, align 8, !tbaa !243
  %1597 = icmp slt i32 %1596, %1595
  br i1 %1597, label %2154, label %1598

1598:                                             ; preds = %1590
  %1599 = getelementptr inbounds %struct.DispList, ptr %1591, i64 0, i32 2
  %1600 = load i16, ptr %1599, align 8, !tbaa !493
  switch i16 %1600, label %2154 [
    i16 4, label %1601
    i16 2, label %1804
  ]

1601:                                             ; preds = %1598
  %1602 = load i32, ptr %1584, align 8, !tbaa !177
  %1603 = getelementptr inbounds %struct.DispList, ptr %1591, i64 0, i32 8
  %1604 = getelementptr inbounds %struct.DispList, ptr %1591, i64 0, i32 5
  %1605 = load i32, ptr %1604, align 8, !tbaa !494
  %1606 = icmp sgt i32 %1605, 0
  br i1 %1606, label %1607, label %1633

1607:                                             ; preds = %1601
  %1608 = load ptr, ptr %1603, align 8, !tbaa !495
  br label %1609

1609:                                             ; preds = %1627, %1607
  %1610 = phi ptr [ %1630, %1627 ], [ %1608, %1607 ]
  %1611 = phi ptr [ %1628, %1627 ], [ %1592, %1607 ]
  %1612 = phi i32 [ %1629, %1627 ], [ 0, %1607 ]
  %1613 = load i32, ptr %1584, align 8, !tbaa !177
  %1614 = add nsw i32 %1613, 1
  store i32 %1614, ptr %1584, align 8, !tbaa !177
  %1615 = call ptr @RE_findOrAddVert(ptr noundef nonnull %1, i32 noundef %1613) #16
  %1616 = load float, ptr %1610, align 4, !tbaa !13
  store float %1616, ptr %1615, align 4, !tbaa !13
  %1617 = getelementptr inbounds float, ptr %1610, i64 1
  %1618 = load float, ptr %1617, align 4, !tbaa !13
  %1619 = getelementptr inbounds float, ptr %1615, i64 1
  store float %1618, ptr %1619, align 4, !tbaa !13
  %1620 = getelementptr inbounds float, ptr %1610, i64 2
  %1621 = load float, ptr %1620, align 4, !tbaa !13
  %1622 = getelementptr inbounds float, ptr %1615, i64 2
  store float %1621, ptr %1622, align 4, !tbaa !13
  call void @mul_m4_v3(ptr noundef nonnull %28, ptr noundef nonnull %1615) #16
  %1623 = icmp eq ptr %1611, null
  br i1 %1623, label %1627, label %1624

1624:                                             ; preds = %1609
  %1625 = getelementptr inbounds %struct.VertRen, ptr %1615, i64 0, i32 2
  store ptr %1611, ptr %1625, align 8, !tbaa !496
  %1626 = getelementptr inbounds float, ptr %1611, i64 3
  br label %1627

1627:                                             ; preds = %1624, %1609
  %1628 = phi ptr [ %1626, %1624 ], [ null, %1609 ]
  %1629 = add nuw nsw i32 %1612, 1
  %1630 = getelementptr inbounds float, ptr %1610, i64 3
  %1631 = load i32, ptr %1604, align 8, !tbaa !494
  %1632 = icmp slt i32 %1629, %1631
  br i1 %1632, label %1609, label %1633, !llvm.loop !498

1633:                                             ; preds = %1627, %1601
  %1634 = phi ptr [ %1592, %1601 ], [ %1628, %1627 ]
  br i1 %1585, label %1635, label %2154

1635:                                             ; preds = %1633
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %31) #16
  %1636 = load i32, ptr %1586, align 4, !tbaa !499
  store <2 x float> zeroinitializer, ptr %27, align 8, !tbaa !13
  store float 0.000000e+00, ptr %1587, align 8, !tbaa !13
  %1637 = getelementptr inbounds %struct.DispList, ptr %1591, i64 0, i32 4
  %1638 = load i32, ptr %1637, align 4, !tbaa !500
  %1639 = icmp sgt i32 %1638, 0
  br i1 %1639, label %1640, label %1699

1640:                                             ; preds = %1635
  %1641 = getelementptr inbounds %struct.DispList, ptr %1591, i64 0, i32 10
  %1642 = load ptr, ptr %1641, align 8, !tbaa !501
  br label %1643

1643:                                             ; preds = %1687, %1640
  %1644 = phi ptr [ %1696, %1687 ], [ %1642, %1640 ]
  %1645 = phi i32 [ %1695, %1687 ], [ 0, %1640 ]
  %1646 = load i32, ptr %1644, align 4, !tbaa !47
  %1647 = getelementptr inbounds i32, ptr %1644, i64 2
  %1648 = load i32, ptr %1647, align 4, !tbaa !47
  %1649 = getelementptr inbounds i32, ptr %1644, i64 1
  %1650 = load i32, ptr %1649, align 4, !tbaa !47
  %1651 = load ptr, ptr %1603, align 8, !tbaa !495
  %1652 = mul nsw i32 %1646, 3
  %1653 = sext i32 %1652 to i64
  %1654 = getelementptr inbounds float, ptr %1651, i64 %1653
  %1655 = mul nsw i32 %1648, 3
  %1656 = sext i32 %1655 to i64
  %1657 = getelementptr inbounds float, ptr %1651, i64 %1656
  %1658 = mul nsw i32 %1650, 3
  %1659 = sext i32 %1658 to i64
  %1660 = getelementptr inbounds float, ptr %1651, i64 %1659
  %1661 = load i32, ptr %1586, align 4, !tbaa !499
  %1662 = add nsw i32 %1661, 1
  store i32 %1662, ptr %1586, align 4, !tbaa !499
  %1663 = call ptr @RE_findOrAddVlak(ptr noundef nonnull %1, i32 noundef %1661) #16
  %1664 = add nsw i32 %1646, %1602
  %1665 = call ptr @RE_findOrAddVert(ptr noundef nonnull %1, i32 noundef %1664) #16
  store ptr %1665, ptr %1663, align 8, !tbaa !502
  %1666 = add nsw i32 %1648, %1602
  %1667 = call ptr @RE_findOrAddVert(ptr noundef nonnull %1, i32 noundef %1666) #16
  %1668 = getelementptr inbounds %struct.VlakRen, ptr %1663, i64 0, i32 1
  store ptr %1667, ptr %1668, align 8, !tbaa !504
  %1669 = add nsw i32 %1650, %1602
  %1670 = call ptr @RE_findOrAddVert(ptr noundef nonnull %1, i32 noundef %1669) #16
  %1671 = getelementptr inbounds %struct.VlakRen, ptr %1663, i64 0, i32 2
  store ptr %1670, ptr %1671, align 8, !tbaa !505
  %1672 = getelementptr inbounds %struct.VlakRen, ptr %1663, i64 0, i32 3
  store ptr null, ptr %1672, align 8, !tbaa !506
  %1673 = call fast nofpclass(nan inf) float @area_tri_v3(ptr noundef %1660, ptr noundef %1657, ptr noundef %1654) #16
  %1674 = fcmp fast ogt float %1673, 0x3E80000000000000
  br i1 %1674, label %1675, label %1687

1675:                                             ; preds = %1643
  br i1 %1588, label %1678, label %1676

1676:                                             ; preds = %1675
  %1677 = call fast nofpclass(nan inf) float @normal_tri_v3(ptr noundef nonnull %31, ptr noundef %1654, ptr noundef %1657, ptr noundef %1660) #16
  br label %1680

1678:                                             ; preds = %1675
  %1679 = call fast nofpclass(nan inf) float @normal_tri_v3(ptr noundef nonnull %31, ptr noundef %1660, ptr noundef %1657, ptr noundef %1654) #16
  br label %1680

1680:                                             ; preds = %1678, %1676
  %1681 = load <2 x float>, ptr %31, align 8, !tbaa !13
  %1682 = load <2 x float>, ptr %27, align 8, !tbaa !13
  %1683 = fadd fast <2 x float> %1682, %1681
  store <2 x float> %1683, ptr %27, align 8, !tbaa !13
  %1684 = load float, ptr %1589, align 8, !tbaa !13
  %1685 = load float, ptr %1587, align 8, !tbaa !13
  %1686 = fadd fast float %1685, %1684
  store float %1686, ptr %1587, align 8, !tbaa !13
  br label %1687

1687:                                             ; preds = %1680, %1643
  %1688 = load i16, ptr %1593, align 4, !tbaa !491
  %1689 = sext i16 %1688 to i64
  %1690 = getelementptr inbounds ptr, ptr %1513, i64 %1689
  %1691 = load ptr, ptr %1690, align 8, !tbaa !16
  %1692 = getelementptr inbounds %struct.VlakRen, ptr %1663, i64 0, i32 5
  store ptr %1691, ptr %1692, align 8, !tbaa !507
  %1693 = getelementptr inbounds %struct.VlakRen, ptr %1663, i64 0, i32 7
  store i8 0, ptr %1693, align 1, !tbaa !508
  %1694 = getelementptr inbounds %struct.VlakRen, ptr %1663, i64 0, i32 8
  store i8 0, ptr %1694, align 2, !tbaa !509
  %1695 = add nuw nsw i32 %1645, 1
  %1696 = getelementptr inbounds i32, ptr %1644, i64 3
  %1697 = load i32, ptr %1637, align 4, !tbaa !500
  %1698 = icmp slt i32 %1695, %1697
  br i1 %1698, label %1643, label %1699, !llvm.loop !510

1699:                                             ; preds = %1687, %1635
  call void @mul_m4_v3(ptr noundef nonnull %29, ptr noundef nonnull %27) #16
  %1700 = load <2 x float>, ptr %27, align 8, !tbaa !13
  %1701 = fmul fast <2 x float> %1700, %1700
  %1702 = shufflevector <2 x float> %1701, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %1703 = fadd fast <2 x float> %1702, %1701
  %1704 = extractelement <2 x float> %1703, i64 0
  %1705 = load float, ptr %1587, align 8, !tbaa !13
  %1706 = fmul fast float %1705, %1705
  %1707 = fadd fast float %1704, %1706
  %1708 = fcmp fast ogt float %1707, 0x38AA95A5C0000000
  br i1 %1708, label %1709, label %1716

1709:                                             ; preds = %1699
  %1710 = call fast float @llvm.sqrt.f32(float %1707)
  %1711 = fdiv fast float 1.000000e+00, %1710
  %1712 = insertelement <2 x float> poison, float %1711, i64 0
  %1713 = shufflevector <2 x float> %1712, <2 x float> poison, <2 x i32> zeroinitializer
  %1714 = fmul fast <2 x float> %1713, %1700
  %1715 = fmul fast float %1711, %1705
  br label %1716

1716:                                             ; preds = %1709, %1699
  %1717 = phi float [ %1715, %1709 ], [ 0.000000e+00, %1699 ]
  %1718 = phi <2 x float> [ %1714, %1709 ], [ zeroinitializer, %1699 ]
  store <2 x float> %1718, ptr %27, align 8
  store float %1717, ptr %1587, align 8
  %1719 = load i32, ptr %1586, align 4, !tbaa !499
  %1720 = icmp slt i32 %1636, %1719
  br i1 %1720, label %1724, label %1721

1721:                                             ; preds = %1724, %1716
  %1722 = load i32, ptr %1584, align 8, !tbaa !177
  %1723 = icmp slt i32 %1602, %1722
  br i1 %1723, label %1776, label %1803

1724:                                             ; preds = %1716, %1724
  %1725 = phi i32 [ %1773, %1724 ], [ %1636, %1716 ]
  %1726 = call ptr @RE_findOrAddVlak(ptr noundef nonnull %1, i32 noundef %1725) #16
  %1727 = getelementptr inbounds %struct.VlakRen, ptr %1726, i64 0, i32 4
  %1728 = getelementptr inbounds %struct.VlakRen, ptr %1726, i64 0, i32 4, i64 1
  %1729 = load <2 x float>, ptr %27, align 8, !tbaa !13
  store <2 x float> %1729, ptr %1727, align 4, !tbaa !13
  %1730 = load float, ptr %1587, align 8, !tbaa !13
  %1731 = getelementptr inbounds %struct.VlakRen, ptr %1726, i64 0, i32 4, i64 2
  store float %1730, ptr %1731, align 4, !tbaa !13
  %1732 = load ptr, ptr %1726, align 8, !tbaa !502
  %1733 = getelementptr inbounds %struct.VertRen, ptr %1732, i64 0, i32 1
  %1734 = load float, ptr %1733, align 4, !tbaa !13
  %1735 = extractelement <2 x float> %1729, i64 0
  %1736 = fadd fast float %1734, %1735
  store float %1736, ptr %1733, align 4, !tbaa !13
  %1737 = load float, ptr %1728, align 4, !tbaa !13
  %1738 = getelementptr inbounds %struct.VertRen, ptr %1732, i64 0, i32 1, i64 1
  %1739 = load float, ptr %1738, align 4, !tbaa !13
  %1740 = fadd fast float %1739, %1737
  store float %1740, ptr %1738, align 4, !tbaa !13
  %1741 = load float, ptr %1731, align 4, !tbaa !13
  %1742 = getelementptr inbounds %struct.VertRen, ptr %1732, i64 0, i32 1, i64 2
  %1743 = load float, ptr %1742, align 4, !tbaa !13
  %1744 = fadd fast float %1743, %1741
  store float %1744, ptr %1742, align 4, !tbaa !13
  %1745 = getelementptr inbounds %struct.VlakRen, ptr %1726, i64 0, i32 2
  %1746 = load ptr, ptr %1745, align 8, !tbaa !505
  %1747 = getelementptr inbounds %struct.VertRen, ptr %1746, i64 0, i32 1
  %1748 = load float, ptr %1727, align 4, !tbaa !13
  %1749 = load float, ptr %1747, align 4, !tbaa !13
  %1750 = fadd fast float %1749, %1748
  store float %1750, ptr %1747, align 4, !tbaa !13
  %1751 = load float, ptr %1728, align 4, !tbaa !13
  %1752 = getelementptr inbounds %struct.VertRen, ptr %1746, i64 0, i32 1, i64 1
  %1753 = load float, ptr %1752, align 4, !tbaa !13
  %1754 = fadd fast float %1753, %1751
  store float %1754, ptr %1752, align 4, !tbaa !13
  %1755 = load float, ptr %1731, align 4, !tbaa !13
  %1756 = getelementptr inbounds %struct.VertRen, ptr %1746, i64 0, i32 1, i64 2
  %1757 = load float, ptr %1756, align 4, !tbaa !13
  %1758 = fadd fast float %1757, %1755
  store float %1758, ptr %1756, align 4, !tbaa !13
  %1759 = getelementptr inbounds %struct.VlakRen, ptr %1726, i64 0, i32 1
  %1760 = load ptr, ptr %1759, align 8, !tbaa !504
  %1761 = getelementptr inbounds %struct.VertRen, ptr %1760, i64 0, i32 1
  %1762 = load float, ptr %1727, align 4, !tbaa !13
  %1763 = load float, ptr %1761, align 4, !tbaa !13
  %1764 = fadd fast float %1763, %1762
  store float %1764, ptr %1761, align 4, !tbaa !13
  %1765 = load float, ptr %1728, align 4, !tbaa !13
  %1766 = getelementptr inbounds %struct.VertRen, ptr %1760, i64 0, i32 1, i64 1
  %1767 = load float, ptr %1766, align 4, !tbaa !13
  %1768 = fadd fast float %1767, %1765
  store float %1768, ptr %1766, align 4, !tbaa !13
  %1769 = load float, ptr %1731, align 4, !tbaa !13
  %1770 = getelementptr inbounds %struct.VertRen, ptr %1760, i64 0, i32 1, i64 2
  %1771 = load float, ptr %1770, align 4, !tbaa !13
  %1772 = fadd fast float %1771, %1769
  store float %1772, ptr %1770, align 4, !tbaa !13
  %1773 = add nsw i32 %1725, 1
  %1774 = load i32, ptr %1586, align 4, !tbaa !499
  %1775 = icmp slt i32 %1773, %1774
  br i1 %1775, label %1724, label %1721, !llvm.loop !511

1776:                                             ; preds = %1721, %1797
  %1777 = phi i32 [ %1800, %1797 ], [ %1602, %1721 ]
  %1778 = call ptr @RE_findOrAddVert(ptr noundef nonnull %1, i32 noundef %1777) #16
  %1779 = getelementptr inbounds %struct.VertRen, ptr %1778, i64 0, i32 1
  %1780 = load <2 x float>, ptr %1779, align 4, !tbaa !13
  %1781 = fmul fast <2 x float> %1780, %1780
  %1782 = shufflevector <2 x float> %1781, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %1783 = fadd fast <2 x float> %1782, %1781
  %1784 = extractelement <2 x float> %1783, i64 0
  %1785 = getelementptr inbounds %struct.VertRen, ptr %1778, i64 0, i32 1, i64 2
  %1786 = load float, ptr %1785, align 4, !tbaa !13
  %1787 = fmul fast float %1786, %1786
  %1788 = fadd fast float %1784, %1787
  %1789 = fcmp fast ogt float %1788, 0x38AA95A5C0000000
  br i1 %1789, label %1790, label %1797

1790:                                             ; preds = %1776
  %1791 = call fast float @llvm.sqrt.f32(float %1788)
  %1792 = fdiv fast float 1.000000e+00, %1791
  %1793 = insertelement <2 x float> poison, float %1792, i64 0
  %1794 = shufflevector <2 x float> %1793, <2 x float> poison, <2 x i32> zeroinitializer
  %1795 = fmul fast <2 x float> %1794, %1780
  %1796 = fmul fast float %1792, %1786
  br label %1797

1797:                                             ; preds = %1790, %1776
  %1798 = phi float [ %1796, %1790 ], [ 0.000000e+00, %1776 ]
  %1799 = phi <2 x float> [ %1795, %1790 ], [ zeroinitializer, %1776 ]
  store <2 x float> %1799, ptr %1779, align 4
  store float %1798, ptr %1785, align 4
  %1800 = add nsw i32 %1777, 1
  %1801 = load i32, ptr %1584, align 8, !tbaa !177
  %1802 = icmp slt i32 %1800, %1801
  br i1 %1802, label %1776, label %1803, !llvm.loop !512

1803:                                             ; preds = %1797, %1721
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %31) #16
  br label %2154

1804:                                             ; preds = %1598
  %1805 = getelementptr inbounds %struct.DispList, ptr %1591, i64 0, i32 3
  %1806 = load i16, ptr %1805, align 2, !tbaa !513
  %1807 = and i16 %1806, 1
  %1808 = icmp eq i16 %1807, 0
  br i1 %1808, label %1814, label %1809

1809:                                             ; preds = %1804
  %1810 = call fastcc i32 @dl_surf_to_renderdata(ptr noundef %1, ptr noundef nonnull %1591, ptr noundef %1513, ptr noundef %1592, ptr noundef nonnull %28)
  %1811 = mul nsw i32 %1810, 3
  %1812 = sext i32 %1811 to i64
  %1813 = getelementptr inbounds float, ptr %1592, i64 %1812
  br label %2154

1814:                                             ; preds = %1804
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %32) #16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %33) #16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %34) #16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %35) #16
  %1815 = getelementptr inbounds %struct.DispList, ptr %1591, i64 0, i32 8
  %1816 = load i32, ptr %1584, align 8, !tbaa !177
  %1817 = getelementptr inbounds %struct.DispList, ptr %1591, i64 0, i32 5
  %1818 = load i32, ptr %1817, align 8, !tbaa !494
  %1819 = getelementptr inbounds %struct.DispList, ptr %1591, i64 0, i32 4
  %1820 = load i32, ptr %1819, align 4, !tbaa !500
  %1821 = mul nsw i32 %1820, %1818
  %1822 = icmp eq i32 %1821, 0
  br i1 %1822, label %1850, label %1823

1823:                                             ; preds = %1814
  %1824 = load ptr, ptr %1815, align 8, !tbaa !495
  br label %1825

1825:                                             ; preds = %1845, %1823
  %1826 = phi i32 [ %1829, %1845 ], [ %1821, %1823 ]
  %1827 = phi ptr [ %1840, %1845 ], [ %1824, %1823 ]
  %1828 = phi ptr [ %1846, %1845 ], [ %1592, %1823 ]
  %1829 = add nsw i32 %1826, -1
  %1830 = load i32, ptr %1584, align 8, !tbaa !177
  %1831 = add nsw i32 %1830, 1
  store i32 %1831, ptr %1584, align 8, !tbaa !177
  %1832 = call ptr @RE_findOrAddVert(ptr noundef nonnull %1, i32 noundef %1830) #16
  %1833 = load float, ptr %1827, align 4, !tbaa !13
  store float %1833, ptr %1832, align 4, !tbaa !13
  %1834 = getelementptr inbounds float, ptr %1827, i64 1
  %1835 = load float, ptr %1834, align 4, !tbaa !13
  %1836 = getelementptr inbounds float, ptr %1832, i64 1
  store float %1835, ptr %1836, align 4, !tbaa !13
  %1837 = getelementptr inbounds float, ptr %1827, i64 2
  %1838 = load float, ptr %1837, align 4, !tbaa !13
  %1839 = getelementptr inbounds float, ptr %1832, i64 2
  store float %1838, ptr %1839, align 4, !tbaa !13
  call void @mul_m4_v3(ptr noundef nonnull %28, ptr noundef nonnull %1832) #16
  %1840 = getelementptr inbounds float, ptr %1827, i64 3
  %1841 = icmp eq ptr %1828, null
  br i1 %1841, label %1845, label %1842

1842:                                             ; preds = %1825
  %1843 = getelementptr inbounds %struct.VertRen, ptr %1832, i64 0, i32 2
  store ptr %1828, ptr %1843, align 8, !tbaa !496
  %1844 = getelementptr inbounds float, ptr %1828, i64 3
  br label %1845

1845:                                             ; preds = %1842, %1825
  %1846 = phi ptr [ %1844, %1842 ], [ null, %1825 ]
  %1847 = icmp eq i32 %1829, 0
  br i1 %1847, label %1848, label %1825, !llvm.loop !514

1848:                                             ; preds = %1845
  %1849 = load i16, ptr %1805, align 2, !tbaa !513
  br label %1850

1850:                                             ; preds = %1848, %1814
  %1851 = phi i16 [ %1806, %1814 ], [ %1849, %1848 ]
  %1852 = phi ptr [ %1592, %1814 ], [ %1846, %1848 ]
  %1853 = and i16 %1851, 2
  %1854 = icmp ne i16 %1853, 0
  %1855 = icmp ne ptr %1852, null
  %1856 = select i1 %1854, i1 %1855, i1 false
  br i1 %1856, label %1857, label %1881

1857:                                             ; preds = %1850
  %1858 = load i32, ptr %1817, align 8, !tbaa !494
  %1859 = icmp eq i32 %1858, 0
  br i1 %1859, label %1881, label %1860

1860:                                             ; preds = %1857
  %1861 = load ptr, ptr %1815, align 8, !tbaa !495
  br label %1862

1862:                                             ; preds = %1862, %1860
  %1863 = phi ptr [ %1878, %1862 ], [ %1861, %1860 ]
  %1864 = phi ptr [ %1879, %1862 ], [ %1852, %1860 ]
  %1865 = phi i32 [ %1866, %1862 ], [ %1858, %1860 ]
  %1866 = add nsw i32 %1865, -1
  %1867 = load i32, ptr %1584, align 8, !tbaa !177
  %1868 = add nsw i32 %1867, 1
  store i32 %1868, ptr %1584, align 8, !tbaa !177
  %1869 = call ptr @RE_findOrAddVert(ptr noundef nonnull %1, i32 noundef %1867) #16
  %1870 = load float, ptr %1863, align 4, !tbaa !13
  store float %1870, ptr %1869, align 4, !tbaa !13
  %1871 = getelementptr inbounds float, ptr %1863, i64 1
  %1872 = load float, ptr %1871, align 4, !tbaa !13
  %1873 = getelementptr inbounds float, ptr %1869, i64 1
  store float %1872, ptr %1873, align 4, !tbaa !13
  %1874 = getelementptr inbounds float, ptr %1863, i64 2
  %1875 = load float, ptr %1874, align 4, !tbaa !13
  %1876 = getelementptr inbounds float, ptr %1869, i64 2
  store float %1875, ptr %1876, align 4, !tbaa !13
  call void @mul_m4_v3(ptr noundef nonnull %28, ptr noundef nonnull %1869) #16
  %1877 = getelementptr inbounds %struct.VertRen, ptr %1869, i64 0, i32 2
  store ptr %1864, ptr %1877, align 8, !tbaa !496
  %1878 = getelementptr inbounds float, ptr %1863, i64 3
  %1879 = getelementptr inbounds float, ptr %1864, i64 3
  %1880 = icmp eq i32 %1866, 0
  br i1 %1880, label %1881, label %1862, !llvm.loop !515

1881:                                             ; preds = %1862, %1857, %1850
  %1882 = phi ptr [ %1852, %1850 ], [ %1852, %1857 ], [ %1879, %1862 ]
  %1883 = getelementptr inbounds %struct.DispList, ptr %1591, i64 0, i32 13
  %1884 = load ptr, ptr %1883, align 8, !tbaa !516
  %1885 = icmp ne ptr %1884, null
  %1886 = or i1 %1585, %1885
  br i1 %1886, label %1887, label %2153

1887:                                             ; preds = %1881
  %1888 = load i32, ptr %1586, align 4, !tbaa !499
  %1889 = load i32, ptr %1819, align 4, !tbaa !500
  %1890 = icmp sgt i32 %1889, 0
  br i1 %1890, label %1891, label %1971

1891:                                             ; preds = %1887
  %1892 = icmp ne ptr %1882, null
  %1893 = getelementptr inbounds %struct.DispList, ptr %1591, i64 0, i32 7
  br label %1894

1894:                                             ; preds = %1965, %1891
  %1895 = phi i32 [ 0, %1891 ], [ %1966, %1965 ]
  %1896 = call zeroext i8 @BKE_displist_surfindex_get(ptr noundef nonnull %1591, i32 noundef %1895, ptr noundef nonnull %30, ptr noundef nonnull %32, ptr noundef nonnull %33, ptr noundef nonnull %34, ptr noundef nonnull %35) #16
  %1897 = icmp eq i8 %1896, 0
  br i1 %1897, label %1969, label %1898

1898:                                             ; preds = %1894
  %1899 = load i32, ptr %32, align 4, !tbaa !47
  %1900 = add nsw i32 %1899, %1816
  store i32 %1900, ptr %32, align 4, !tbaa !47
  %1901 = load i32, ptr %33, align 4, !tbaa !47
  %1902 = add nsw i32 %1901, %1816
  store i32 %1902, ptr %33, align 4, !tbaa !47
  %1903 = load i32, ptr %34, align 4, !tbaa !47
  %1904 = add nsw i32 %1903, %1816
  store i32 %1904, ptr %34, align 4, !tbaa !47
  %1905 = load i32, ptr %35, align 4, !tbaa !47
  %1906 = add nsw i32 %1905, %1816
  store i32 %1906, ptr %35, align 4, !tbaa !47
  %1907 = load i16, ptr %1805, align 2, !tbaa !513
  %1908 = and i16 %1907, 2
  %1909 = icmp ne i16 %1908, 0
  %1910 = select i1 %1909, i1 %1892, i1 false
  br i1 %1910, label %1913, label %1911

1911:                                             ; preds = %1898
  %1912 = load i32, ptr %1817, align 8, !tbaa !494
  br label %1921

1913:                                             ; preds = %1898
  %1914 = load i32, ptr %1819, align 4, !tbaa !500
  %1915 = add nsw i32 %1914, -1
  %1916 = icmp eq i32 %1895, %1915
  %1917 = load i32, ptr %1817, align 8, !tbaa !494
  br i1 %1916, label %1918, label %1921

1918:                                             ; preds = %1913
  %1919 = add nsw i32 %1917, %1900
  store i32 %1919, ptr %34, align 4, !tbaa !47
  %1920 = add nsw i32 %1917, %1902
  store i32 %1920, ptr %35, align 4, !tbaa !47
  br label %1921

1921:                                             ; preds = %1918, %1913, %1911
  %1922 = phi i32 [ %1912, %1911 ], [ %1917, %1918 ], [ %1917, %1913 ]
  %1923 = load i32, ptr %30, align 4, !tbaa !47
  %1924 = icmp slt i32 %1923, %1922
  br i1 %1924, label %1925, label %1965

1925:                                             ; preds = %1921
  %1926 = icmp eq i32 %1895, 0
  %1927 = select i1 %1926, i8 7, i8 6
  br label %1928

1928:                                             ; preds = %1928, %1925
  %1929 = load i32, ptr %1586, align 4, !tbaa !499
  %1930 = add nsw i32 %1929, 1
  store i32 %1930, ptr %1586, align 4, !tbaa !499
  %1931 = call ptr @RE_findOrAddVlak(ptr noundef %1, i32 noundef %1929) #16
  %1932 = load i32, ptr %33, align 4, !tbaa !47
  %1933 = call ptr @RE_findOrAddVert(ptr noundef %1, i32 noundef %1932) #16
  store ptr %1933, ptr %1931, align 8, !tbaa !502
  %1934 = load i32, ptr %32, align 4, !tbaa !47
  %1935 = call ptr @RE_findOrAddVert(ptr noundef %1, i32 noundef %1934) #16
  %1936 = getelementptr inbounds %struct.VlakRen, ptr %1931, i64 0, i32 1
  store ptr %1935, ptr %1936, align 8, !tbaa !504
  %1937 = load i32, ptr %34, align 4, !tbaa !47
  %1938 = call ptr @RE_findOrAddVert(ptr noundef %1, i32 noundef %1937) #16
  %1939 = getelementptr inbounds %struct.VlakRen, ptr %1931, i64 0, i32 2
  store ptr %1938, ptr %1939, align 8, !tbaa !505
  %1940 = load i32, ptr %35, align 4, !tbaa !47
  %1941 = call ptr @RE_findOrAddVert(ptr noundef %1, i32 noundef %1940) #16
  %1942 = getelementptr inbounds %struct.VlakRen, ptr %1931, i64 0, i32 3
  store ptr %1941, ptr %1942, align 8, !tbaa !506
  %1943 = getelementptr inbounds %struct.VlakRen, ptr %1931, i64 0, i32 8
  store i8 %1927, ptr %1943, align 2, !tbaa !509
  %1944 = load i16, ptr %1893, align 2, !tbaa !517
  %1945 = trunc i16 %1944 to i8
  %1946 = getelementptr inbounds %struct.VlakRen, ptr %1931, i64 0, i32 7
  store i8 %1945, ptr %1946, align 1, !tbaa !508
  %1947 = getelementptr inbounds %struct.VlakRen, ptr %1931, i64 0, i32 4
  %1948 = load ptr, ptr %1939, align 8, !tbaa !505
  %1949 = load ptr, ptr %1936, align 8, !tbaa !504
  %1950 = load ptr, ptr %1931, align 8, !tbaa !502
  %1951 = call fast nofpclass(nan inf) float @normal_quad_v3(ptr noundef nonnull %1947, ptr noundef %1941, ptr noundef %1948, ptr noundef %1949, ptr noundef %1950) #16
  %1952 = load i16, ptr %1593, align 4, !tbaa !491
  %1953 = sext i16 %1952 to i64
  %1954 = getelementptr inbounds ptr, ptr %1513, i64 %1953
  %1955 = load ptr, ptr %1954, align 8, !tbaa !16
  %1956 = getelementptr inbounds %struct.VlakRen, ptr %1931, i64 0, i32 5
  store ptr %1955, ptr %1956, align 8, !tbaa !507
  %1957 = load i32, ptr %34, align 4, !tbaa !47
  store i32 %1957, ptr %35, align 4, !tbaa !47
  %1958 = add nsw i32 %1957, 1
  store i32 %1958, ptr %34, align 4, !tbaa !47
  %1959 = load i32, ptr %32, align 4, !tbaa !47
  store i32 %1959, ptr %33, align 4, !tbaa !47
  %1960 = add nsw i32 %1959, 1
  store i32 %1960, ptr %32, align 4, !tbaa !47
  %1961 = load i32, ptr %30, align 4, !tbaa !47
  %1962 = add nsw i32 %1961, 1
  store i32 %1962, ptr %30, align 4, !tbaa !47
  %1963 = load i32, ptr %1817, align 8, !tbaa !494
  %1964 = icmp slt i32 %1962, %1963
  br i1 %1964, label %1928, label %1965, !llvm.loop !518

1965:                                             ; preds = %1928, %1921
  %1966 = add nuw nsw i32 %1895, 1
  %1967 = load i32, ptr %1819, align 4, !tbaa !500
  %1968 = icmp slt i32 %1966, %1967
  br i1 %1968, label %1894, label %1969, !llvm.loop !519

1969:                                             ; preds = %1965, %1894
  %1970 = load ptr, ptr %1883, align 8, !tbaa !516
  br label %1971

1971:                                             ; preds = %1969, %1887
  %1972 = phi ptr [ %1970, %1969 ], [ %1884, %1887 ]
  %1973 = icmp eq ptr %1972, null
  br i1 %1973, label %2056, label %1974

1974:                                             ; preds = %1971
  %1975 = load i32, ptr %1819, align 4, !tbaa !500
  %1976 = add nsw i32 %1975, -1
  %1977 = load i16, ptr %1805, align 2, !tbaa !513
  %1978 = zext i16 %1977 to i32
  %1979 = lshr i32 %1978, 1
  %1980 = and i32 %1979, 1
  %1981 = add nsw i32 %1976, %1980
  %1982 = icmp sgt i32 %1981, 0
  br i1 %1982, label %1983, label %2056

1983:                                             ; preds = %1974, %2046
  %1984 = phi i32 [ %2051, %2046 ], [ %1978, %1974 ]
  %1985 = phi i32 [ %2047, %2046 ], [ 0, %1974 ]
  %1986 = load ptr, ptr %1883, align 8, !tbaa !516
  %1987 = lshr i32 %1985, 5
  %1988 = zext i32 %1987 to i64
  %1989 = getelementptr inbounds i32, ptr %1986, i64 %1988
  %1990 = load i32, ptr %1989, align 4, !tbaa !47
  %1991 = and i32 %1985, 31
  %1992 = shl nuw i32 1, %1991
  %1993 = and i32 %1990, %1992
  %1994 = icmp eq i32 %1993, 0
  br i1 %1994, label %2046, label %1995

1995:                                             ; preds = %1983
  %1996 = load i32, ptr %1817, align 8, !tbaa !494
  %1997 = and i32 %1984, 1
  %1998 = add nsw i32 %1997, -1
  %1999 = add i32 %1998, %1996
  %2000 = icmp sgt i32 %1999, 0
  br i1 %2000, label %2001, label %2046

2001:                                             ; preds = %1995
  %2002 = icmp eq i32 %1997, 0
  %2003 = mul nsw i32 %1999, %1985
  %2004 = add nsw i32 %2003, %1888
  %2005 = add nsw i32 %1999, -1
  br i1 %2002, label %2006, label %2019

2006:                                             ; preds = %2001
  %2007 = call ptr @RE_findOrAddVlak(ptr noundef %1, i32 noundef %2004) #16
  %2008 = getelementptr inbounds %struct.VlakRen, ptr %2007, i64 0, i32 1
  %2009 = load ptr, ptr %2008, align 8, !tbaa !504
  %2010 = call ptr @RE_vertren_copy(ptr noundef %1, ptr noundef %2009) #16
  store ptr %2010, ptr %2008, align 8, !tbaa !504
  %2011 = icmp ugt i32 %1999, 1
  br i1 %2011, label %2012, label %2015

2012:                                             ; preds = %2006
  %2013 = add nsw i32 %2004, 1
  %2014 = call ptr @RE_findOrAddVlak(ptr noundef %1, i32 noundef %2013) #16
  store ptr %2010, ptr %2014, align 8, !tbaa !502
  br label %2015

2015:                                             ; preds = %2012, %2006
  %2016 = load ptr, ptr %2007, align 8, !tbaa !502
  %2017 = call ptr @RE_vertren_copy(ptr noundef %1, ptr noundef %2016) #16
  store ptr %2017, ptr %2007, align 8, !tbaa !502
  %2018 = icmp eq i32 %1999, 1
  br i1 %2018, label %2046, label %2032

2019:                                             ; preds = %2001, %2019
  %2020 = phi i32 [ %2030, %2019 ], [ 0, %2001 ]
  %2021 = add nsw i32 %2020, %2004
  %2022 = call ptr @RE_findOrAddVlak(ptr noundef %1, i32 noundef %2021) #16
  %2023 = getelementptr inbounds %struct.VlakRen, ptr %2022, i64 0, i32 1
  %2024 = load ptr, ptr %2023, align 8, !tbaa !504
  %2025 = call ptr @RE_vertren_copy(ptr noundef %1, ptr noundef %2024) #16
  store ptr %2025, ptr %2023, align 8, !tbaa !504
  %2026 = icmp eq i32 %2020, %2005
  %2027 = add nsw i32 %2021, 1
  %2028 = select i1 %2026, i32 %2004, i32 %2027
  %2029 = call ptr @RE_findOrAddVlak(ptr noundef %1, i32 noundef %2028) #16
  store ptr %2025, ptr %2029, align 8, !tbaa !502
  %2030 = add nuw nsw i32 %2020, 1
  %2031 = icmp eq i32 %2030, %1999
  br i1 %2031, label %2046, label %2019, !llvm.loop !520

2032:                                             ; preds = %2015, %2043
  %2033 = phi i32 [ %2044, %2043 ], [ 1, %2015 ]
  %2034 = add nsw i32 %2033, %2004
  %2035 = call ptr @RE_findOrAddVlak(ptr noundef %1, i32 noundef %2034) #16
  %2036 = getelementptr inbounds %struct.VlakRen, ptr %2035, i64 0, i32 1
  %2037 = load ptr, ptr %2036, align 8, !tbaa !504
  %2038 = call ptr @RE_vertren_copy(ptr noundef %1, ptr noundef %2037) #16
  store ptr %2038, ptr %2036, align 8, !tbaa !504
  %2039 = icmp slt i32 %2033, %2005
  br i1 %2039, label %2040, label %2043

2040:                                             ; preds = %2032
  %2041 = add nsw i32 %2034, 1
  %2042 = call ptr @RE_findOrAddVlak(ptr noundef %1, i32 noundef %2041) #16
  store ptr %2038, ptr %2042, align 8, !tbaa !502
  br label %2043

2043:                                             ; preds = %2040, %2032
  %2044 = add nuw nsw i32 %2033, 1
  %2045 = icmp eq i32 %2044, %1999
  br i1 %2045, label %2046, label %2032, !llvm.loop !521

2046:                                             ; preds = %2019, %2043, %2015, %1995, %1983
  %2047 = add nuw nsw i32 %1985, 1
  %2048 = load i32, ptr %1819, align 4, !tbaa !500
  %2049 = add nsw i32 %2048, -1
  %2050 = load i16, ptr %1805, align 2, !tbaa !513
  %2051 = zext i16 %2050 to i32
  %2052 = lshr i32 %2051, 1
  %2053 = and i32 %2052, 1
  %2054 = add nsw i32 %2049, %2053
  %2055 = icmp slt i32 %2047, %2054
  br i1 %2055, label %1983, label %2056, !llvm.loop !523

2056:                                             ; preds = %2046, %1974, %1971
  %2057 = load i32, ptr %1586, align 4, !tbaa !499
  %2058 = icmp slt i32 %1888, %2057
  br i1 %2058, label %2062, label %2059

2059:                                             ; preds = %2062, %2056
  %2060 = load i32, ptr %1584, align 8, !tbaa !177
  %2061 = icmp slt i32 %1816, %2060
  br i1 %2061, label %2126, label %2153

2062:                                             ; preds = %2056, %2062
  %2063 = phi i32 [ %2123, %2062 ], [ %1888, %2056 ]
  %2064 = call ptr @RE_findOrAddVlak(ptr noundef nonnull %1, i32 noundef %2063) #16
  %2065 = load ptr, ptr %2064, align 8, !tbaa !502
  %2066 = getelementptr inbounds %struct.VertRen, ptr %2065, i64 0, i32 1
  %2067 = getelementptr inbounds %struct.VlakRen, ptr %2064, i64 0, i32 4
  %2068 = load float, ptr %2067, align 4, !tbaa !13
  %2069 = load float, ptr %2066, align 4, !tbaa !13
  %2070 = fadd fast float %2069, %2068
  store float %2070, ptr %2066, align 4, !tbaa !13
  %2071 = getelementptr inbounds %struct.VlakRen, ptr %2064, i64 0, i32 4, i64 1
  %2072 = load float, ptr %2071, align 4, !tbaa !13
  %2073 = getelementptr inbounds %struct.VertRen, ptr %2065, i64 0, i32 1, i64 1
  %2074 = load float, ptr %2073, align 4, !tbaa !13
  %2075 = fadd fast float %2074, %2072
  store float %2075, ptr %2073, align 4, !tbaa !13
  %2076 = getelementptr inbounds %struct.VlakRen, ptr %2064, i64 0, i32 4, i64 2
  %2077 = load float, ptr %2076, align 4, !tbaa !13
  %2078 = getelementptr inbounds %struct.VertRen, ptr %2065, i64 0, i32 1, i64 2
  %2079 = load float, ptr %2078, align 4, !tbaa !13
  %2080 = fadd fast float %2079, %2077
  store float %2080, ptr %2078, align 4, !tbaa !13
  %2081 = getelementptr inbounds %struct.VlakRen, ptr %2064, i64 0, i32 2
  %2082 = load ptr, ptr %2081, align 8, !tbaa !505
  %2083 = getelementptr inbounds %struct.VertRen, ptr %2082, i64 0, i32 1
  %2084 = load float, ptr %2067, align 4, !tbaa !13
  %2085 = load float, ptr %2083, align 4, !tbaa !13
  %2086 = fadd fast float %2085, %2084
  store float %2086, ptr %2083, align 4, !tbaa !13
  %2087 = load float, ptr %2071, align 4, !tbaa !13
  %2088 = getelementptr inbounds %struct.VertRen, ptr %2082, i64 0, i32 1, i64 1
  %2089 = load float, ptr %2088, align 4, !tbaa !13
  %2090 = fadd fast float %2089, %2087
  store float %2090, ptr %2088, align 4, !tbaa !13
  %2091 = load float, ptr %2076, align 4, !tbaa !13
  %2092 = getelementptr inbounds %struct.VertRen, ptr %2082, i64 0, i32 1, i64 2
  %2093 = load float, ptr %2092, align 4, !tbaa !13
  %2094 = fadd fast float %2093, %2091
  store float %2094, ptr %2092, align 4, !tbaa !13
  %2095 = getelementptr inbounds %struct.VlakRen, ptr %2064, i64 0, i32 1
  %2096 = load ptr, ptr %2095, align 8, !tbaa !504
  %2097 = getelementptr inbounds %struct.VertRen, ptr %2096, i64 0, i32 1
  %2098 = load float, ptr %2067, align 4, !tbaa !13
  %2099 = load float, ptr %2097, align 4, !tbaa !13
  %2100 = fadd fast float %2099, %2098
  store float %2100, ptr %2097, align 4, !tbaa !13
  %2101 = load float, ptr %2071, align 4, !tbaa !13
  %2102 = getelementptr inbounds %struct.VertRen, ptr %2096, i64 0, i32 1, i64 1
  %2103 = load float, ptr %2102, align 4, !tbaa !13
  %2104 = fadd fast float %2103, %2101
  store float %2104, ptr %2102, align 4, !tbaa !13
  %2105 = load float, ptr %2076, align 4, !tbaa !13
  %2106 = getelementptr inbounds %struct.VertRen, ptr %2096, i64 0, i32 1, i64 2
  %2107 = load float, ptr %2106, align 4, !tbaa !13
  %2108 = fadd fast float %2107, %2105
  store float %2108, ptr %2106, align 4, !tbaa !13
  %2109 = getelementptr inbounds %struct.VlakRen, ptr %2064, i64 0, i32 3
  %2110 = load ptr, ptr %2109, align 8, !tbaa !506
  %2111 = getelementptr inbounds %struct.VertRen, ptr %2110, i64 0, i32 1
  %2112 = load float, ptr %2067, align 4, !tbaa !13
  %2113 = load float, ptr %2111, align 4, !tbaa !13
  %2114 = fadd fast float %2113, %2112
  store float %2114, ptr %2111, align 4, !tbaa !13
  %2115 = load float, ptr %2071, align 4, !tbaa !13
  %2116 = getelementptr inbounds %struct.VertRen, ptr %2110, i64 0, i32 1, i64 1
  %2117 = load float, ptr %2116, align 4, !tbaa !13
  %2118 = fadd fast float %2117, %2115
  store float %2118, ptr %2116, align 4, !tbaa !13
  %2119 = load float, ptr %2076, align 4, !tbaa !13
  %2120 = getelementptr inbounds %struct.VertRen, ptr %2110, i64 0, i32 1, i64 2
  %2121 = load float, ptr %2120, align 4, !tbaa !13
  %2122 = fadd fast float %2121, %2119
  store float %2122, ptr %2120, align 4, !tbaa !13
  %2123 = add nsw i32 %2063, 1
  %2124 = load i32, ptr %1586, align 4, !tbaa !499
  %2125 = icmp slt i32 %2123, %2124
  br i1 %2125, label %2062, label %2059, !llvm.loop !524

2126:                                             ; preds = %2059, %2147
  %2127 = phi i32 [ %2150, %2147 ], [ %1816, %2059 ]
  %2128 = call ptr @RE_findOrAddVert(ptr noundef nonnull %1, i32 noundef %2127) #16
  %2129 = getelementptr inbounds %struct.VertRen, ptr %2128, i64 0, i32 1
  %2130 = load <2 x float>, ptr %2129, align 4, !tbaa !13
  %2131 = fmul fast <2 x float> %2130, %2130
  %2132 = shufflevector <2 x float> %2131, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %2133 = fadd fast <2 x float> %2132, %2131
  %2134 = extractelement <2 x float> %2133, i64 0
  %2135 = getelementptr inbounds %struct.VertRen, ptr %2128, i64 0, i32 1, i64 2
  %2136 = load float, ptr %2135, align 4, !tbaa !13
  %2137 = fmul fast float %2136, %2136
  %2138 = fadd fast float %2134, %2137
  %2139 = fcmp fast ogt float %2138, 0x38AA95A5C0000000
  br i1 %2139, label %2140, label %2147

2140:                                             ; preds = %2126
  %2141 = call fast float @llvm.sqrt.f32(float %2138)
  %2142 = fdiv fast float 1.000000e+00, %2141
  %2143 = insertelement <2 x float> poison, float %2142, i64 0
  %2144 = shufflevector <2 x float> %2143, <2 x float> poison, <2 x i32> zeroinitializer
  %2145 = fmul fast <2 x float> %2144, %2130
  %2146 = fmul fast float %2142, %2136
  br label %2147

2147:                                             ; preds = %2140, %2126
  %2148 = phi float [ %2146, %2140 ], [ 0.000000e+00, %2126 ]
  %2149 = phi <2 x float> [ %2145, %2140 ], [ zeroinitializer, %2126 ]
  store <2 x float> %2149, ptr %2129, align 4
  store float %2148, ptr %2135, align 4
  %2150 = add nsw i32 %2127, 1
  %2151 = load i32, ptr %1584, align 8, !tbaa !177
  %2152 = icmp slt i32 %2150, %2151
  br i1 %2152, label %2126, label %2153, !llvm.loop !525

2153:                                             ; preds = %2147, %2059, %1881
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %35) #16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %34) #16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %33) #16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %32) #16
  br label %2154

2154:                                             ; preds = %2153, %1809, %1803, %1633, %1598, %1590
  %2155 = phi ptr [ %1592, %1590 ], [ %1813, %1809 ], [ %1882, %2153 ], [ %1634, %1803 ], [ %1634, %1633 ], [ %1592, %1598 ]
  %2156 = load ptr, ptr %1591, align 8, !tbaa !526
  %2157 = icmp eq ptr %2156, null
  br i1 %2157, label %2158, label %1590, !llvm.loop !527

2158:                                             ; preds = %2154, %1559
  call void @BKE_displist_free(ptr noundef nonnull %26) #16
  %2159 = load ptr, ptr @MEM_freeN, align 8, !tbaa !16
  call void %2159(ptr noundef %1513) #16
  br label %2160

2160:                                             ; preds = %1487, %1491, %1495, %2158
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %30) #16
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %29) #16
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %28) #16
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %27) #16
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %26) #16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %25) #16
  br label %4596

2161:                                             ; preds = %1481
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %22) #16
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %22, i8 0, i64 16, i1 false)
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %23) #16
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %24) #16
  store ptr null, ptr %24, align 8, !tbaa !16
  %2162 = getelementptr inbounds %struct.Object, ptr %54, i64 0, i32 19
  %2163 = load ptr, ptr %2162, align 8, !tbaa !260
  %2164 = getelementptr inbounds %struct.Curve, ptr %2163, i64 0, i32 3
  %2165 = load ptr, ptr %2164, align 8, !tbaa !489
  %2166 = icmp eq ptr %2165, null
  br i1 %2166, label %2277, label %2167

2167:                                             ; preds = %2161
  %2168 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 32
  %2169 = getelementptr inbounds %struct.Object, ptr %54, i64 0, i32 47
  call void @mul_m4_m4m4(ptr noundef nonnull %23, ptr noundef nonnull %2168, ptr noundef nonnull %2169) #16
  %2170 = getelementptr inbounds %struct.Object, ptr %54, i64 0, i32 50
  %2171 = call zeroext i8 @invert_m4_m4(ptr noundef nonnull %2170, ptr noundef nonnull %23) #16
  %2172 = getelementptr inbounds %struct.Object, ptr %54, i64 0, i32 31
  %2173 = load i32, ptr %2172, align 8, !tbaa !243
  %2174 = add i32 %2173, 1
  %2175 = load ptr, ptr @MEM_callocN, align 8, !tbaa !16
  %2176 = sext i32 %2174 to i64
  %2177 = shl nsw i64 %2176, 3
  %2178 = call ptr %2175(i64 noundef %2177, ptr noundef nonnull @.str.19) #16
  %2179 = icmp slt i32 %2173, 0
  br i1 %2179, label %2195, label %2180

2180:                                             ; preds = %2167
  %2181 = zext i32 %2174 to i64
  br label %2182

2182:                                             ; preds = %2182, %2180
  %2183 = phi i64 [ 0, %2180 ], [ %2185, %2182 ]
  %2184 = phi i8 [ 0, %2180 ], [ %2193, %2182 ]
  %2185 = add nuw nsw i64 %2183, 1
  %2186 = trunc i64 %2185 to i16
  %2187 = call fastcc ptr @give_render_material(ptr noundef %0, ptr noundef %54, i16 noundef signext %2186)
  %2188 = getelementptr inbounds ptr, ptr %2178, i64 %2183
  store ptr %2187, ptr %2188, align 8, !tbaa !16
  %2189 = getelementptr inbounds %struct.Material, ptr %2187, i64 0, i32 90
  %2190 = load i16, ptr %2189, align 4, !tbaa !237
  %2191 = and i16 %2190, 1
  %2192 = icmp eq i16 %2191, 0
  %2193 = select i1 %2192, i8 %2184, i8 1
  %2194 = icmp eq i64 %2185, %2181
  br i1 %2194, label %2195, label %2182, !llvm.loop !528

2195:                                             ; preds = %2182, %2167
  %2196 = phi i8 [ 0, %2167 ], [ %2193, %2182 ]
  %2197 = getelementptr inbounds %struct.Object, ptr %54, i64 0, i32 9
  %2198 = load ptr, ptr %2197, align 8, !tbaa !529
  %2199 = icmp eq ptr %2198, null
  br i1 %2199, label %2205, label %2200

2200:                                             ; preds = %2195
  %2201 = getelementptr inbounds %struct.Object, ptr %2198, i64 0, i32 3
  %2202 = load i16, ptr %2201, align 8, !tbaa !115
  %2203 = icmp eq i16 %2202, 22
  %2204 = select i1 %2203, i8 1, i8 %2196
  br label %2205

2205:                                             ; preds = %2200, %2195
  %2206 = phi i8 [ %2196, %2195 ], [ %2204, %2200 ]
  %2207 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 44
  %2208 = load ptr, ptr %2207, align 8, !tbaa !17
  call void @BKE_displist_make_surf(ptr noundef %2208, ptr noundef nonnull %54, ptr noundef nonnull %22, ptr noundef nonnull %24, i8 noundef zeroext 1, i8 noundef zeroext 0, i8 noundef zeroext 1) #16
  %2209 = load ptr, ptr %24, align 8, !tbaa !16
  %2210 = icmp eq ptr %2209, null
  %2211 = icmp eq i8 %2206, 0
  br i1 %2210, label %2240, label %2212

2212:                                             ; preds = %2205
  br i1 %2211, label %2234, label %2213

2213:                                             ; preds = %2212
  %2214 = getelementptr i8, ptr %0, i64 5840
  %2215 = load ptr, ptr %2214, align 8, !tbaa !76
  %2216 = icmp eq ptr %2215, null
  br i1 %2216, label %2222, label %2217

2217:                                             ; preds = %2213
  %2218 = call ptr @BLI_ghash_lookup(ptr noundef nonnull %2215, ptr noundef nonnull %54) #16
  %2219 = icmp eq ptr %2218, null
  br i1 %2219, label %2220, label %2234

2220:                                             ; preds = %2217
  %2221 = load ptr, ptr %24, align 8, !tbaa !16
  br label %2222

2222:                                             ; preds = %2220, %2213
  %2223 = phi ptr [ %2221, %2220 ], [ %2209, %2213 ]
  %2224 = load ptr, ptr %2207, align 8, !tbaa !17
  %2225 = call ptr @BKE_displist_make_orco(ptr noundef %2224, ptr noundef nonnull %54, ptr noundef %2223, i8 noundef zeroext 1, i8 noundef zeroext 1) #16
  %2226 = icmp eq ptr %2225, null
  br i1 %2226, label %2234, label %2227

2227:                                             ; preds = %2222
  %2228 = load ptr, ptr %2214, align 8, !tbaa !76
  %2229 = icmp eq ptr %2228, null
  br i1 %2229, label %2230, label %2232

2230:                                             ; preds = %2227
  %2231 = call ptr @BLI_ghash_ptr_new(ptr noundef nonnull @.str.18) #16
  store ptr %2231, ptr %2214, align 8, !tbaa !76
  br label %2232

2232:                                             ; preds = %2230, %2227
  %2233 = phi ptr [ %2231, %2230 ], [ %2228, %2227 ]
  call void @BLI_ghash_insert(ptr noundef %2233, ptr noundef nonnull %54, ptr noundef nonnull %2225) #16
  br label %2234

2234:                                             ; preds = %2232, %2222, %2217, %2212
  %2235 = phi ptr [ %2218, %2217 ], [ %2225, %2232 ], [ null, %2222 ], [ null, %2212 ]
  %2236 = load ptr, ptr %24, align 8, !tbaa !16
  call fastcc void @init_render_dm(ptr noundef %2236, ptr noundef nonnull %0, ptr noundef %1, i32 noundef %2, ptr noundef %2235, ptr noundef nonnull %23)
  %2237 = load ptr, ptr %24, align 8, !tbaa !16
  %2238 = getelementptr inbounds %struct.DerivedMesh, ptr %2237, i64 0, i32 95
  %2239 = load ptr, ptr %2238, align 8, !tbaa !250
  call void %2239(ptr noundef %2237) #16
  br label %2275

2240:                                             ; preds = %2205
  br i1 %2211, label %2256, label %2241

2241:                                             ; preds = %2240
  %2242 = getelementptr i8, ptr %0, i64 5840
  %2243 = load ptr, ptr %2242, align 8, !tbaa !76
  %2244 = icmp eq ptr %2243, null
  br i1 %2244, label %2248, label %2245

2245:                                             ; preds = %2241
  %2246 = call ptr @BLI_ghash_lookup(ptr noundef nonnull %2243, ptr noundef nonnull %54) #16
  %2247 = icmp eq ptr %2246, null
  br i1 %2247, label %2248, label %2256

2248:                                             ; preds = %2245, %2241
  %2249 = call ptr @BKE_curve_surf_make_orco(ptr noundef nonnull %54) #16
  %2250 = load ptr, ptr %2242, align 8, !tbaa !76
  %2251 = icmp eq ptr %2250, null
  br i1 %2251, label %2252, label %2254

2252:                                             ; preds = %2248
  %2253 = call ptr @BLI_ghash_ptr_new(ptr noundef nonnull @.str.18) #16
  store ptr %2253, ptr %2242, align 8, !tbaa !76
  br label %2254

2254:                                             ; preds = %2252, %2248
  %2255 = phi ptr [ %2253, %2252 ], [ %2250, %2248 ]
  call void @BLI_ghash_insert(ptr noundef %2255, ptr noundef nonnull %54, ptr noundef %2249) #16
  br label %2256

2256:                                             ; preds = %2254, %2245, %2240
  %2257 = phi ptr [ %2246, %2245 ], [ %2249, %2254 ], [ null, %2240 ]
  %2258 = load ptr, ptr %22, align 8, !tbaa !16
  %2259 = icmp eq ptr %2258, null
  br i1 %2259, label %2275, label %2260

2260:                                             ; preds = %2256, %2271
  %2261 = phi ptr [ %2273, %2271 ], [ %2258, %2256 ]
  %2262 = phi ptr [ %2272, %2271 ], [ %2257, %2256 ]
  %2263 = getelementptr inbounds %struct.DispList, ptr %2261, i64 0, i32 2
  %2264 = load i16, ptr %2263, align 8, !tbaa !493
  %2265 = icmp eq i16 %2264, 2
  br i1 %2265, label %2266, label %2271

2266:                                             ; preds = %2260
  %2267 = call fastcc i32 @dl_surf_to_renderdata(ptr noundef %1, ptr noundef nonnull %2261, ptr noundef %2178, ptr noundef %2262, ptr noundef nonnull %23)
  %2268 = mul nsw i32 %2267, 3
  %2269 = sext i32 %2268 to i64
  %2270 = getelementptr inbounds float, ptr %2262, i64 %2269
  br label %2271

2271:                                             ; preds = %2266, %2260
  %2272 = phi ptr [ %2270, %2266 ], [ %2262, %2260 ]
  %2273 = load ptr, ptr %2261, align 8, !tbaa !16
  %2274 = icmp eq ptr %2273, null
  br i1 %2274, label %2275, label %2260, !llvm.loop !530

2275:                                             ; preds = %2271, %2256, %2234
  call void @BKE_displist_free(ptr noundef nonnull %22) #16
  %2276 = load ptr, ptr @MEM_freeN, align 8, !tbaa !16
  call void %2276(ptr noundef %2178) #16
  br label %2277

2277:                                             ; preds = %2161, %2275
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %24) #16
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %23) #16
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %22) #16
  br label %4596

2278:                                             ; preds = %1481
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %18) #16
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %19) #16
  %2279 = getelementptr inbounds %struct.Object, ptr %54, i64 0, i32 19
  %2280 = load ptr, ptr %2279, align 8, !tbaa !260
  %2281 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 32
  %2282 = getelementptr inbounds %struct.Object, ptr %54, i64 0, i32 47
  call void @mul_m4_m4m4(ptr noundef nonnull %19, ptr noundef nonnull %2281, ptr noundef nonnull %2282) #16
  %2283 = getelementptr inbounds %struct.Object, ptr %54, i64 0, i32 50
  %2284 = call zeroext i8 @invert_m4_m4(ptr noundef nonnull %2283, ptr noundef nonnull %19) #16
  call void @copy_m3_m4(ptr noundef nonnull %18, ptr noundef nonnull %2283) #16
  %2285 = call zeroext i8 @is_negative_m4(ptr noundef nonnull %19) #16
  %2286 = getelementptr inbounds %struct.Mesh, ptr %2280, i64 0, i32 26
  %2287 = load i32, ptr %2286, align 8, !tbaa !531
  %2288 = icmp eq i32 %2287, 0
  br i1 %2288, label %4400, label %2289

2289:                                             ; preds = %2278
  %2290 = getelementptr inbounds %struct.Object, ptr %54, i64 0, i32 31
  %2291 = load i32, ptr %2290, align 8, !tbaa !243
  %2292 = icmp slt i32 %2291, 1
  br i1 %2292, label %2336, label %2293

2293:                                             ; preds = %2289
  %2294 = getelementptr inbounds %struct.Mesh, ptr %2280, i64 0, i32 8
  br label %2295

2295:                                             ; preds = %2329, %2293
  %2296 = phi i8 [ 0, %2293 ], [ %2332, %2329 ]
  %2297 = phi i8 [ 0, %2293 ], [ %2310, %2329 ]
  %2298 = phi i8 [ 0, %2293 ], [ %2331, %2329 ]
  %2299 = phi i8 [ 0, %2293 ], [ %2330, %2329 ]
  %2300 = phi i32 [ 1, %2293 ], [ %2333, %2329 ]
  %2301 = trunc i32 %2300 to i16
  %2302 = call fastcc ptr @give_render_material(ptr noundef %0, ptr noundef nonnull %54, i16 noundef signext %2301)
  %2303 = getelementptr inbounds %struct.Material, ptr %2302, i64 0, i32 90
  %2304 = load i16, ptr %2303, align 4, !tbaa !237
  %2305 = and i16 %2304, 16385
  %2306 = icmp eq i16 %2305, 0
  %2307 = select i1 %2306, i8 %2296, i8 1
  %2308 = and i16 %2304, 16384
  %2309 = icmp eq i16 %2308, 0
  %2310 = select i1 %2309, i8 %2297, i8 1
  %2311 = getelementptr inbounds %struct.Material, ptr %2302, i64 0, i32 52
  %2312 = load i32, ptr %2311, align 8, !tbaa !456
  %2313 = and i32 %2312, 67108864
  %2314 = icmp eq i32 %2313, 0
  br i1 %2314, label %2319, label %2315

2315:                                             ; preds = %2295
  %2316 = load ptr, ptr %2294, align 8, !tbaa !533
  %2317 = icmp eq ptr %2316, null
  %2318 = select i1 %2317, i8 1, i8 %2307
  br label %2319

2319:                                             ; preds = %2315, %2295
  %2320 = phi i8 [ %2299, %2295 ], [ 1, %2315 ]
  %2321 = phi i8 [ %2307, %2295 ], [ %2318, %2315 ]
  %2322 = and i32 %2312, 134217728
  %2323 = icmp eq i32 %2322, 0
  br i1 %2323, label %2329, label %2324

2324:                                             ; preds = %2319
  %2325 = load ptr, ptr %2294, align 8, !tbaa !533
  %2326 = icmp eq ptr %2325, null
  %2327 = select i1 %2326, i8 1, i8 %2320
  %2328 = select i1 %2326, i8 1, i8 %2321
  br label %2329

2329:                                             ; preds = %2324, %2319
  %2330 = phi i8 [ %2327, %2324 ], [ %2320, %2319 ]
  %2331 = phi i8 [ 1, %2324 ], [ %2298, %2319 ]
  %2332 = phi i8 [ %2328, %2324 ], [ %2321, %2319 ]
  %2333 = add nuw nsw i32 %2300, 1
  %2334 = load i32, ptr %2290, align 8, !tbaa !243
  %2335 = icmp slt i32 %2300, %2334
  br i1 %2335, label %2295, label %2336, !llvm.loop !534

2336:                                             ; preds = %2329, %2289
  %2337 = phi i8 [ 0, %2289 ], [ %2330, %2329 ]
  %2338 = phi i8 [ 0, %2289 ], [ %2331, %2329 ]
  %2339 = phi i8 [ 0, %2289 ], [ %2310, %2329 ]
  %2340 = phi i8 [ 0, %2289 ], [ %2332, %2329 ]
  %2341 = phi i32 [ %2291, %2289 ], [ %2334, %2329 ]
  %2342 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 4
  %2343 = load i16, ptr %2342, align 8, !tbaa !234
  %2344 = and i16 %2343, 16
  %2345 = icmp eq i16 %2344, 0
  br i1 %2345, label %2352, label %2346

2346:                                             ; preds = %2336
  %2347 = getelementptr inbounds %struct.Mesh, ptr %2280, i64 0, i32 8
  %2348 = load ptr, ptr %2347, align 8, !tbaa !533
  %2349 = icmp eq ptr %2348, null
  %2350 = select i1 %2349, i8 1, i8 %2337
  %2351 = select i1 %2349, i8 1, i8 %2340
  br label %2352

2352:                                             ; preds = %2346, %2336
  %2353 = phi i8 [ %2350, %2346 ], [ %2337, %2336 ]
  %2354 = phi i8 [ 1, %2346 ], [ %2338, %2336 ]
  %2355 = phi i8 [ %2351, %2346 ], [ %2340, %2336 ]
  %2356 = icmp slt i32 %2341, 1
  br i1 %2356, label %2371, label %2361

2357:                                             ; preds = %2361
  %2358 = add nuw nsw i32 %2362, 1
  %2359 = load i32, ptr %2290, align 8, !tbaa !243
  %2360 = icmp slt i32 %2362, %2359
  br i1 %2360, label %2361, label %2369, !llvm.loop !535

2361:                                             ; preds = %2352, %2357
  %2362 = phi i32 [ %2358, %2357 ], [ 1, %2352 ]
  %2363 = trunc i32 %2362 to i16
  %2364 = call fastcc ptr @give_render_material(ptr noundef %0, ptr noundef nonnull %54, i16 noundef signext %2363)
  %2365 = getelementptr inbounds %struct.Material, ptr %2364, i64 0, i32 91
  %2366 = load i16, ptr %2365, align 2, !tbaa !536
  %2367 = and i16 %2366, 4096
  %2368 = icmp eq i16 %2367, 0
  br i1 %2368, label %2357, label %2369

2369:                                             ; preds = %2361, %2357
  %2370 = xor i1 %2368, true
  br label %2371

2371:                                             ; preds = %2369, %2352
  %2372 = phi i1 [ true, %2352 ], [ %2368, %2369 ]
  %2373 = phi i1 [ false, %2352 ], [ %2370, %2369 ]
  %2374 = getelementptr inbounds %struct.Mesh, ptr %2280, i64 0, i32 38
  %2375 = load i16, ptr %2374, align 2, !tbaa !537
  %2376 = and i16 %2375, 32
  %2377 = icmp ne i16 %2376, 0
  %2378 = and i1 %2372, %2377
  br i1 %2378, label %2388, label %2379

2379:                                             ; preds = %2371
  %2380 = load i16, ptr %2342, align 8, !tbaa !234
  %2381 = and i16 %2380, 64
  %2382 = icmp eq i16 %2381, 0
  br i1 %2382, label %2388, label %2383

2383:                                             ; preds = %2379
  %2384 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 45, i32 75
  %2385 = load i16, ptr %2384, align 2, !tbaa !538
  %2386 = and i16 %2385, 64
  %2387 = icmp ne i16 %2386, 0
  br label %2388

2388:                                             ; preds = %2383, %2379, %2371
  %2389 = phi i1 [ true, %2371 ], [ false, %2379 ], [ %2387, %2383 ]
  %2390 = load i64, ptr @CD_MASK_BAREMESH, align 8, !tbaa !249
  %2391 = icmp eq i32 %2, 0
  %2392 = or i1 %2391, %2373
  %2393 = or i1 %2392, %2377
  %2394 = icmp ne i8 %2355, 0
  %2395 = select i1 %2393, i1 %2394, i1 false
  %2396 = select i1 %2395, i64 16480, i64 96
  %2397 = or i64 %2390, %2396
  %2398 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 45, i32 46
  %2399 = load i32, ptr %2398, align 4, !tbaa !70
  %2400 = and i32 %2399, 524288
  %2401 = icmp eq i32 %2400, 0
  %2402 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 44
  %2403 = load ptr, ptr %2402, align 8, !tbaa !17
  br i1 %2401, label %2406, label %2404

2404:                                             ; preds = %2388
  %2405 = call ptr @mesh_create_derived_view(ptr noundef %2403, ptr noundef nonnull %54, i64 noundef %2397) #16
  br label %2408

2406:                                             ; preds = %2388
  %2407 = call ptr @mesh_create_derived_render(ptr noundef %2403, ptr noundef nonnull %54, i64 noundef %2397) #16
  br label %2408

2408:                                             ; preds = %2406, %2404
  %2409 = phi ptr [ %2405, %2404 ], [ %2407, %2406 ]
  %2410 = icmp eq ptr %2409, null
  br i1 %2410, label %4400, label %2411

2411:                                             ; preds = %2408
  %2412 = and i64 %2397, 16384
  %2413 = icmp eq i64 %2412, 0
  br i1 %2413, label %2435, label %2414

2414:                                             ; preds = %2411
  %2415 = getelementptr i8, ptr %0, i64 5840
  %2416 = load ptr, ptr %2415, align 8, !tbaa !76
  %2417 = icmp eq ptr %2416, null
  br i1 %2417, label %2421, label %2418

2418:                                             ; preds = %2414
  %2419 = call ptr @BLI_ghash_lookup(ptr noundef nonnull %2416, ptr noundef nonnull %54) #16
  %2420 = icmp eq ptr %2419, null
  br i1 %2420, label %2421, label %2435

2421:                                             ; preds = %2418, %2414
  %2422 = getelementptr inbounds %struct.DerivedMesh, ptr %2409, i64 0, i32 50
  %2423 = load ptr, ptr %2422, align 8, !tbaa !539
  %2424 = call ptr %2423(ptr noundef nonnull %2409, i32 noundef 14) #16
  %2425 = icmp eq ptr %2424, null
  br i1 %2425, label %2435, label %2426

2426:                                             ; preds = %2421
  %2427 = load ptr, ptr @MEM_dupallocN, align 8, !tbaa !16
  %2428 = call ptr %2427(ptr noundef nonnull %2424) #16
  %2429 = load ptr, ptr %2415, align 8, !tbaa !76
  %2430 = icmp eq ptr %2429, null
  br i1 %2430, label %2431, label %2433

2431:                                             ; preds = %2426
  %2432 = call ptr @BLI_ghash_ptr_new(ptr noundef nonnull @.str.18) #16
  store ptr %2432, ptr %2415, align 8, !tbaa !76
  br label %2433

2433:                                             ; preds = %2431, %2426
  %2434 = phi ptr [ %2432, %2431 ], [ %2429, %2426 ]
  call void @BLI_ghash_insert(ptr noundef %2434, ptr noundef nonnull %54, ptr noundef %2428) #16
  br label %2435

2435:                                             ; preds = %2433, %2421, %2418, %2411
  %2436 = phi ptr [ %2419, %2418 ], [ %2428, %2433 ], [ null, %2421 ], [ null, %2411 ]
  %2437 = getelementptr inbounds %struct.DerivedMesh, ptr %2409, i64 0, i32 31
  %2438 = load ptr, ptr %2437, align 8, !tbaa !540
  %2439 = call ptr %2438(ptr noundef nonnull %2409) #16
  %2440 = getelementptr inbounds %struct.DerivedMesh, ptr %2409, i64 0, i32 23
  %2441 = load ptr, ptr %2440, align 8, !tbaa !541
  %2442 = call i32 %2441(ptr noundef nonnull %2409) #16
  br i1 %2378, label %2443, label %2453

2443:                                             ; preds = %2435
  %2444 = load i32, ptr %2286, align 8, !tbaa !531
  %2445 = icmp eq i32 %2444, %2442
  br i1 %2445, label %2446, label %2453

2446:                                             ; preds = %2443
  %2447 = getelementptr inbounds %struct.Mesh, ptr %2280, i64 0, i32 28
  %2448 = load i32, ptr %2447, align 8, !tbaa !542
  %2449 = getelementptr inbounds %struct.DerivedMesh, ptr %2409, i64 0, i32 25
  %2450 = load ptr, ptr %2449, align 8, !tbaa !419
  %2451 = call i32 %2450(ptr noundef nonnull %2409) #16
  %2452 = icmp ne i32 %2448, %2451
  br label %2453

2453:                                             ; preds = %2446, %2443, %2435
  %2454 = phi i1 [ true, %2443 ], [ true, %2435 ], [ %2452, %2446 ]
  %2455 = call fastcc ptr @give_render_material(ptr noundef nonnull %0, ptr noundef nonnull %54, i16 noundef signext 1)
  %2456 = getelementptr inbounds %struct.Material, ptr %2455, i64 0, i32 2
  %2457 = load i16, ptr %2456, align 8, !tbaa !139
  %2458 = icmp eq i16 %2457, 1
  br i1 %2458, label %2459, label %2585

2459:                                             ; preds = %2453
  %2460 = load ptr, ptr %53, align 8, !tbaa !148
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %15) #16
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %16) #16
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %17) #16
  %2461 = getelementptr inbounds %struct.Material, ptr %2455, i64 0, i32 39
  %2462 = load i8, ptr %2461, align 2, !tbaa !380
  %2463 = getelementptr inbounds %struct.Object, ptr %2460, i64 0, i32 47
  call void @mul_m4_m4m4(ptr noundef nonnull %16, ptr noundef nonnull %2281, ptr noundef nonnull %2463) #16
  %2464 = getelementptr inbounds %struct.Object, ptr %2460, i64 0, i32 50
  call void @copy_m3_m4(ptr noundef nonnull %17, ptr noundef nonnull %2464) #16
  %2465 = load i16, ptr %2342, align 8, !tbaa !234
  %2466 = or i16 %2465, 2
  store i16 %2466, ptr %2342, align 8, !tbaa !234
  %2467 = icmp sgt i32 %2442, 0
  br i1 %2467, label %2468, label %2584

2468:                                             ; preds = %2459
  %2469 = zext i8 %2462 to i32
  %2470 = getelementptr inbounds %struct.Material, ptr %2455, i64 0, i32 59
  %2471 = getelementptr inbounds float, ptr %15, i64 1
  %2472 = getelementptr inbounds float, ptr %15, i64 2
  %2473 = getelementptr inbounds %struct.Material, ptr %2455, i64 0, i32 51
  %2474 = getelementptr inbounds [3 x float], ptr %17, i64 0, i64 1
  %2475 = getelementptr inbounds [3 x [3 x float]], ptr %17, i64 0, i64 1
  %2476 = getelementptr inbounds [3 x [3 x float]], ptr %17, i64 0, i64 1, i64 1
  %2477 = getelementptr inbounds [3 x [3 x float]], ptr %17, i64 0, i64 2
  %2478 = getelementptr inbounds [3 x [3 x float]], ptr %17, i64 0, i64 2, i64 1
  %2479 = getelementptr inbounds %struct.Object, ptr %2460, i64 0, i32 52
  br label %2480

2480:                                             ; preds = %2577, %2468
  %2481 = phi i32 [ %2469, %2468 ], [ %2580, %2577 ]
  %2482 = phi ptr [ %2439, %2468 ], [ %2582, %2577 ]
  %2483 = phi i32 [ 0, %2468 ], [ %2581, %2577 ]
  %2484 = phi ptr [ %2436, %2468 ], [ %2579, %2577 ]
  %2485 = load float, ptr %2470, align 4, !tbaa !379
  %2486 = load <2 x float>, ptr %2482, align 4, !tbaa !13
  store <2 x float> %2486, ptr %15, align 8, !tbaa !13
  %2487 = getelementptr inbounds float, ptr %2482, i64 2
  %2488 = load float, ptr %2487, align 4, !tbaa !13
  store float %2488, ptr %2472, align 8, !tbaa !13
  call void @mul_m4_v3(ptr noundef nonnull %16, ptr noundef nonnull %15) #16
  %2489 = load i32, ptr %2473, align 4, !tbaa !102
  %2490 = and i32 %2489, 8192
  %2491 = icmp eq i32 %2490, 0
  br i1 %2491, label %2568, label %2492

2492:                                             ; preds = %2480
  %2493 = getelementptr inbounds %struct.MVert, ptr %2482, i64 0, i32 1
  %2494 = load i16, ptr %2493, align 4, !tbaa !46
  %2495 = sitofp i16 %2494 to float
  %2496 = getelementptr inbounds %struct.MVert, ptr %2482, i64 0, i32 1, i64 1
  %2497 = load float, ptr %17, align 16, !tbaa !13
  %2498 = fmul fast float %2497, %2495
  %2499 = load float, ptr %2475, align 4, !tbaa !13
  %2500 = fmul fast float %2499, %2495
  %2501 = load float, ptr %2477, align 8, !tbaa !13
  %2502 = fmul fast float %2501, %2495
  %2503 = load <2 x i16>, ptr %2496, align 2, !tbaa !46
  %2504 = sitofp <2 x i16> %2503 to <2 x float>
  %2505 = load <2 x float>, ptr %2474, align 4, !tbaa !13
  %2506 = fmul fast <2 x float> %2505, %2504
  %2507 = extractelement <2 x float> %2506, i64 0
  %2508 = fadd fast float %2507, %2498
  %2509 = extractelement <2 x float> %2506, i64 1
  %2510 = fadd fast float %2508, %2509
  %2511 = load <2 x float>, ptr %2476, align 16, !tbaa !13
  %2512 = fmul fast <2 x float> %2511, %2504
  %2513 = extractelement <2 x float> %2512, i64 0
  %2514 = fadd fast float %2513, %2500
  %2515 = extractelement <2 x float> %2512, i64 1
  %2516 = fadd fast float %2514, %2515
  %2517 = load <2 x float>, ptr %2478, align 4, !tbaa !13
  %2518 = fmul fast <2 x float> %2517, %2504
  %2519 = extractelement <2 x float> %2518, i64 0
  %2520 = fadd fast float %2519, %2502
  %2521 = extractelement <2 x float> %2518, i64 1
  %2522 = fadd fast float %2520, %2521
  %2523 = fmul fast float %2510, %2510
  %2524 = fmul fast float %2516, %2516
  %2525 = fadd fast float %2524, %2523
  %2526 = fmul fast float %2522, %2522
  %2527 = fadd fast float %2525, %2526
  %2528 = fcmp fast ogt float %2527, 0x38AA95A5C0000000
  br i1 %2528, label %2529, label %2535

2529:                                             ; preds = %2492
  %2530 = call fast float @llvm.sqrt.f32(float %2527)
  %2531 = fdiv fast float 1.000000e+00, %2530
  %2532 = fmul fast float %2531, %2510
  %2533 = fmul fast float %2531, %2516
  %2534 = fmul fast float %2531, %2522
  br label %2535

2535:                                             ; preds = %2529, %2492
  %2536 = phi float [ %2532, %2529 ], [ 0.000000e+00, %2492 ]
  %2537 = phi float [ %2533, %2529 ], [ 0.000000e+00, %2492 ]
  %2538 = phi float [ %2534, %2529 ], [ 0.000000e+00, %2492 ]
  %2539 = load float, ptr %15, align 8, !tbaa !13
  %2540 = load float, ptr %2471, align 4, !tbaa !13
  %2541 = load float, ptr %2472, align 8, !tbaa !13
  %2542 = fmul fast float %2539, %2539
  %2543 = fmul fast float %2540, %2540
  %2544 = fadd fast float %2543, %2542
  %2545 = fmul fast float %2541, %2541
  %2546 = fadd fast float %2544, %2545
  %2547 = fcmp fast ogt float %2546, 0x38AA95A5C0000000
  br i1 %2547, label %2548, label %2554

2548:                                             ; preds = %2535
  %2549 = call fast float @llvm.sqrt.f32(float %2546)
  %2550 = fdiv fast float 1.000000e+00, %2549
  %2551 = fmul fast float %2550, %2539
  %2552 = fmul fast float %2550, %2540
  %2553 = fmul fast float %2550, %2541
  br label %2554

2554:                                             ; preds = %2548, %2535
  %2555 = phi float [ %2551, %2548 ], [ 0.000000e+00, %2535 ]
  %2556 = phi float [ %2552, %2548 ], [ 0.000000e+00, %2535 ]
  %2557 = phi float [ %2553, %2548 ], [ 0.000000e+00, %2535 ]
  %2558 = fmul fast float %2555, %2536
  %2559 = fmul fast float %2556, %2537
  %2560 = fadd fast float %2559, %2558
  %2561 = fmul fast float %2557, %2538
  %2562 = fadd fast float %2560, %2561
  %2563 = fcmp fast ult float %2562, 0.000000e+00
  br i1 %2563, label %2564, label %2568

2564:                                             ; preds = %2554
  %2565 = fmul fast float %2562, %2562
  %2566 = fmul fast float %2565, %2565
  %2567 = fmul fast float %2566, %2485
  br label %2568

2568:                                             ; preds = %2564, %2554, %2480
  %2569 = phi float [ %2567, %2564 ], [ %2485, %2480 ], [ 0.000000e+00, %2554 ]
  %2570 = icmp eq ptr %2484, null
  %2571 = select i1 %2570, ptr %2482, ptr %2484
  %2572 = call ptr @RE_inithalo(ptr noundef %0, ptr noundef %1, ptr noundef nonnull %2455, ptr noundef nonnull %15, ptr noundef null, ptr noundef nonnull %2571, float noundef nofpclass(nan inf) %2569, float noundef nofpclass(nan inf) 0.000000e+00, i32 noundef %2481) #16
  %2573 = icmp eq ptr %2572, null
  br i1 %2573, label %2577, label %2574

2574:                                             ; preds = %2568
  %2575 = load i32, ptr %2479, align 8, !tbaa !114
  %2576 = getelementptr inbounds %struct.HaloRen, ptr %2572, i64 0, i32 28
  store i32 %2575, ptr %2576, align 8, !tbaa !543
  br label %2577

2577:                                             ; preds = %2574, %2568
  %2578 = getelementptr inbounds float, ptr %2484, i64 3
  %2579 = select i1 %2570, ptr null, ptr %2578
  %2580 = add nuw nsw i32 %2481, 1
  %2581 = add nuw nsw i32 %2483, 1
  %2582 = getelementptr inbounds %struct.MVert, ptr %2482, i64 1
  %2583 = icmp eq i32 %2581, %2442
  br i1 %2583, label %2584, label %2480, !llvm.loop !545

2584:                                             ; preds = %2577, %2459
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %17) #16
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %16) #16
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %15) #16
  br label %3834

2585:                                             ; preds = %2453
  br i1 %2389, label %2586, label %2590

2586:                                             ; preds = %2585
  %2587 = getelementptr inbounds %struct.DerivedMesh, ptr %2409, i64 0, i32 50
  %2588 = load ptr, ptr %2587, align 8, !tbaa !539
  %2589 = call ptr %2588(ptr noundef nonnull %2409, i32 noundef 7) #16
  br label %2590

2590:                                             ; preds = %2586, %2585
  %2591 = phi ptr [ %2589, %2586 ], [ null, %2585 ]
  %2592 = icmp sgt i32 %2442, 0
  br i1 %2592, label %2593, label %2662

2593:                                             ; preds = %2590
  %2594 = getelementptr inbounds %struct.ObjectRen, ptr %1, i64 0, i32 10
  %2595 = icmp eq ptr %2591, null
  %2596 = zext i32 %2442 to i64
  br label %2597

2597:                                             ; preds = %2658, %2593
  %2598 = phi i64 [ 0, %2593 ], [ %2659, %2658 ]
  %2599 = phi ptr [ %2439, %2593 ], [ %2660, %2658 ]
  %2600 = phi ptr [ %2436, %2593 ], [ %2649, %2658 ]
  %2601 = load i32, ptr %2594, align 8, !tbaa !177
  %2602 = add nsw i32 %2601, 1
  store i32 %2602, ptr %2594, align 8, !tbaa !177
  %2603 = call ptr @RE_findOrAddVert(ptr noundef %1, i32 noundef %2601) #16
  %2604 = load float, ptr %2599, align 4, !tbaa !13
  store float %2604, ptr %2603, align 4, !tbaa !13
  %2605 = getelementptr inbounds float, ptr %2599, i64 1
  %2606 = load float, ptr %2605, align 4, !tbaa !13
  %2607 = getelementptr inbounds float, ptr %2603, i64 1
  store float %2606, ptr %2607, align 4, !tbaa !13
  %2608 = getelementptr inbounds float, ptr %2599, i64 2
  %2609 = load float, ptr %2608, align 4, !tbaa !13
  %2610 = getelementptr inbounds float, ptr %2603, i64 2
  store float %2609, ptr %2610, align 4, !tbaa !13
  br i1 %2378, label %2643, label %2611

2611:                                             ; preds = %2597
  %2612 = getelementptr inbounds %struct.VertRen, ptr %2603, i64 0, i32 1
  %2613 = getelementptr inbounds %struct.MVert, ptr %2599, i64 0, i32 1
  %2614 = load <2 x i16>, ptr %2613, align 2, !tbaa !46
  %2615 = sitofp <2 x i16> %2614 to <2 x float>
  %2616 = fmul fast <2 x float> %2615, <float 0x3F00002000000000, float 0x3F00002000000000>
  store <2 x float> %2616, ptr %2612, align 4, !tbaa !13
  %2617 = getelementptr inbounds %struct.MVert, ptr %2599, i64 0, i32 1, i64 2
  %2618 = load i16, ptr %2617, align 2, !tbaa !46
  %2619 = sitofp i16 %2618 to float
  %2620 = fmul fast float %2619, 0x3F00002000000000
  %2621 = getelementptr inbounds %struct.VertRen, ptr %2603, i64 0, i32 1, i64 2
  store float %2620, ptr %2621, align 4, !tbaa !13
  call void @mul_m4_v3(ptr noundef nonnull %19, ptr noundef nonnull %2603) #16
  call void @mul_transposed_m3_v3(ptr noundef nonnull %18, ptr noundef nonnull %2612) #16
  %2622 = load <2 x float>, ptr %2612, align 4, !tbaa !13
  %2623 = fmul fast <2 x float> %2622, %2622
  %2624 = shufflevector <2 x float> %2623, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %2625 = fadd fast <2 x float> %2624, %2623
  %2626 = extractelement <2 x float> %2625, i64 0
  %2627 = load float, ptr %2621, align 4, !tbaa !13
  %2628 = fmul fast float %2627, %2627
  %2629 = fadd fast float %2626, %2628
  %2630 = fcmp fast ogt float %2629, 0x38AA95A5C0000000
  br i1 %2630, label %2631, label %2638

2631:                                             ; preds = %2611
  %2632 = call fast float @llvm.sqrt.f32(float %2629)
  %2633 = fdiv fast float 1.000000e+00, %2632
  %2634 = insertelement <2 x float> poison, float %2633, i64 0
  %2635 = shufflevector <2 x float> %2634, <2 x float> poison, <2 x i32> zeroinitializer
  %2636 = fmul fast <2 x float> %2635, %2622
  %2637 = fmul fast float %2633, %2627
  br label %2638

2638:                                             ; preds = %2631, %2611
  %2639 = phi float [ %2637, %2631 ], [ 0.000000e+00, %2611 ]
  %2640 = phi <2 x float> [ %2636, %2631 ], [ zeroinitializer, %2611 ]
  %2641 = fneg fast <2 x float> %2640
  store <2 x float> %2641, ptr %2612, align 4, !tbaa !13
  %2642 = fneg fast float %2639
  store float %2642, ptr %2621, align 4, !tbaa !13
  br label %2643

2643:                                             ; preds = %2638, %2597
  %2644 = icmp eq ptr %2600, null
  br i1 %2644, label %2648, label %2645

2645:                                             ; preds = %2643
  %2646 = getelementptr inbounds %struct.VertRen, ptr %2603, i64 0, i32 2
  store ptr %2600, ptr %2646, align 8, !tbaa !496
  %2647 = getelementptr inbounds float, ptr %2600, i64 3
  br label %2648

2648:                                             ; preds = %2645, %2643
  %2649 = phi ptr [ %2647, %2645 ], [ null, %2643 ]
  br i1 %2389, label %2650, label %2658

2650:                                             ; preds = %2648
  %2651 = call ptr @RE_vertren_get_origindex(ptr noundef nonnull %1, ptr noundef nonnull %2603, i32 noundef 1) #16
  %2652 = trunc i64 %2598 to i32
  br i1 %2595, label %2656, label %2653

2653:                                             ; preds = %2650
  %2654 = getelementptr inbounds i32, ptr %2591, i64 %2598
  %2655 = load i32, ptr %2654, align 4, !tbaa !47
  br label %2656

2656:                                             ; preds = %2653, %2650
  %2657 = phi i32 [ %2655, %2653 ], [ %2652, %2650 ]
  store i32 %2657, ptr %2651, align 4, !tbaa !47
  br label %2658

2658:                                             ; preds = %2656, %2648
  %2659 = add nuw nsw i64 %2598, 1
  %2660 = getelementptr inbounds %struct.MVert, ptr %2599, i64 1
  %2661 = icmp eq i64 %2659, %2596
  br i1 %2661, label %2662, label %2597, !llvm.loop !546

2662:                                             ; preds = %2658, %2590
  br i1 %2393, label %2663, label %4397

2663:                                             ; preds = %2662
  %2664 = getelementptr inbounds %struct.DerivedMesh, ptr %2409, i64 0, i32 2
  call void @RE_set_customdata_names(ptr noundef %1, ptr noundef nonnull %2664) #16
  %2665 = icmp eq i8 %2354, 0
  br i1 %2665, label %2670, label %2666

2666:                                             ; preds = %2663
  %2667 = call i32 @CustomData_get_layer_index(ptr noundef nonnull %2664, i32 noundef 18) #16
  %2668 = icmp eq i32 %2667, -1
  br i1 %2668, label %2669, label %2670

2669:                                             ; preds = %2666
  call void @DM_add_tangent_layer(ptr noundef %2409) #16
  br label %2670

2670:                                             ; preds = %2669, %2666, %2663
  %2671 = getelementptr inbounds %struct.ObjectRen, ptr %1, i64 0, i32 10
  %2672 = load i32, ptr %2671, align 8, !tbaa !177
  %2673 = sub nsw i32 %2672, %2442
  %2674 = load i32, ptr %2290, align 8, !tbaa !243
  %2675 = icmp sgt i32 %2674, -1
  br i1 %2675, label %2676, label %3367

2676:                                             ; preds = %2670
  %2677 = getelementptr inbounds %struct.DerivedMesh, ptr %2409, i64 0, i32 24
  %2678 = getelementptr inbounds %struct.DerivedMesh, ptr %2409, i64 0, i32 25
  %2679 = getelementptr inbounds %struct.DerivedMesh, ptr %2409, i64 0, i32 33
  %2680 = getelementptr inbounds %struct.DerivedMesh, ptr %2409, i64 0, i32 52
  %2681 = icmp eq i8 %2285, 0
  %2682 = or i1 %2681, %2378
  %2683 = select i1 %2682, i32 0, i32 2
  %2684 = getelementptr inbounds i32, ptr %20, i64 1
  %2685 = getelementptr inbounds i32, ptr %20, i64 2
  %2686 = select i1 %2682, i32 2, i32 0
  %2687 = getelementptr inbounds i32, ptr %20, i64 3
  %2688 = getelementptr inbounds %struct.ObjectRen, ptr %1, i64 0, i32 11
  %2689 = getelementptr inbounds %struct.Mesh, ptr %2280, i64 0, i32 12
  %2690 = getelementptr inbounds %struct.Mesh, ptr %2280, i64 0, i32 15
  %2691 = getelementptr inbounds %struct.DerivedMesh, ptr %2409, i64 0, i32 2, i32 2
  %2692 = zext i32 %2683 to i64
  %2693 = zext i32 %2686 to i64
  br label %2694

2694:                                             ; preds = %3362, %2676
  %2695 = phi ptr [ null, %2676 ], [ %3364, %3362 ]
  %2696 = phi i32 [ 0, %2676 ], [ %2698, %3362 ]
  %2697 = phi ptr [ null, %2676 ], [ %3363, %3362 ]
  %2698 = add nuw nsw i32 %2696, 1
  %2699 = trunc i32 %2698 to i16
  %2700 = call fastcc ptr @give_render_material(ptr noundef %0, ptr noundef nonnull %54, i16 noundef signext %2699)
  %2701 = getelementptr inbounds %struct.Material, ptr %2700, i64 0, i32 21
  %2702 = load float, ptr %2701, align 8, !tbaa !547
  %2703 = fcmp fast oeq float %2702, 0.000000e+00
  br i1 %2703, label %2704, label %2986

2704:                                             ; preds = %2694
  %2705 = getelementptr inbounds %struct.Material, ptr %2700, i64 0, i32 19
  %2706 = load float, ptr %2705, align 8, !tbaa !548
  %2707 = fcmp fast oeq float %2706, 0.000000e+00
  br i1 %2707, label %2708, label %2986

2708:                                             ; preds = %2704
  %2709 = getelementptr inbounds %struct.Material, ptr %2700, i64 0, i32 33
  %2710 = load float, ptr %2709, align 8, !tbaa !549
  %2711 = fcmp fast oeq float %2710, 0.000000e+00
  br i1 %2711, label %2712, label %2986

2712:                                             ; preds = %2708
  %2713 = getelementptr inbounds %struct.Material, ptr %2700, i64 0, i32 51
  %2714 = load i32, ptr %2713, align 4, !tbaa !102
  %2715 = and i32 %2714, 458752
  %2716 = icmp eq i32 %2715, 65536
  br i1 %2716, label %2717, label %2986

2717:                                             ; preds = %2712
  %2718 = getelementptr inbounds %struct.Material, ptr %2700, i64 0, i32 102, i64 0
  %2719 = load ptr, ptr %2718, align 8, !tbaa !16
  %2720 = icmp eq ptr %2719, null
  br i1 %2720, label %2731, label %2721

2721:                                             ; preds = %2717
  %2722 = getelementptr inbounds %struct.MTex, ptr %2719, i64 0, i32 5
  %2723 = load ptr, ptr %2722, align 8, !tbaa !48
  %2724 = icmp eq ptr %2723, null
  br i1 %2724, label %2731, label %2725

2725:                                             ; preds = %2721
  %2726 = getelementptr inbounds %struct.MTex, ptr %2719, i64 0, i32 1
  %2727 = load i16, ptr %2726, align 2, !tbaa !330
  %2728 = lshr i16 %2727, 7
  %2729 = and i16 %2728, 1
  %2730 = zext i16 %2729 to i32
  br label %2731

2731:                                             ; preds = %2725, %2721, %2717
  %2732 = phi i32 [ 0, %2721 ], [ 0, %2717 ], [ %2730, %2725 ]
  %2733 = getelementptr inbounds %struct.Material, ptr %2700, i64 0, i32 102, i64 1
  %2734 = load ptr, ptr %2733, align 8, !tbaa !16
  %2735 = icmp eq ptr %2734, null
  br i1 %2735, label %2746, label %2736

2736:                                             ; preds = %2731
  %2737 = getelementptr inbounds %struct.MTex, ptr %2734, i64 0, i32 5
  %2738 = load ptr, ptr %2737, align 8, !tbaa !48
  %2739 = icmp eq ptr %2738, null
  br i1 %2739, label %2746, label %2740

2740:                                             ; preds = %2736
  %2741 = getelementptr inbounds %struct.MTex, ptr %2734, i64 0, i32 1
  %2742 = load i16, ptr %2741, align 2, !tbaa !330
  %2743 = and i16 %2742, 128
  %2744 = icmp eq i16 %2743, 0
  %2745 = select i1 %2744, i32 %2732, i32 1
  br label %2746

2746:                                             ; preds = %2740, %2736, %2731
  %2747 = phi i32 [ %2732, %2736 ], [ %2732, %2731 ], [ %2745, %2740 ]
  %2748 = getelementptr inbounds %struct.Material, ptr %2700, i64 0, i32 102, i64 2
  %2749 = load ptr, ptr %2748, align 8, !tbaa !16
  %2750 = icmp eq ptr %2749, null
  br i1 %2750, label %2761, label %2751

2751:                                             ; preds = %2746
  %2752 = getelementptr inbounds %struct.MTex, ptr %2749, i64 0, i32 5
  %2753 = load ptr, ptr %2752, align 8, !tbaa !48
  %2754 = icmp eq ptr %2753, null
  br i1 %2754, label %2761, label %2755

2755:                                             ; preds = %2751
  %2756 = getelementptr inbounds %struct.MTex, ptr %2749, i64 0, i32 1
  %2757 = load i16, ptr %2756, align 2, !tbaa !330
  %2758 = and i16 %2757, 128
  %2759 = icmp eq i16 %2758, 0
  %2760 = select i1 %2759, i32 %2747, i32 1
  br label %2761

2761:                                             ; preds = %2755, %2751, %2746
  %2762 = phi i32 [ %2747, %2751 ], [ %2747, %2746 ], [ %2760, %2755 ]
  %2763 = getelementptr inbounds %struct.Material, ptr %2700, i64 0, i32 102, i64 3
  %2764 = load ptr, ptr %2763, align 8, !tbaa !16
  %2765 = icmp eq ptr %2764, null
  br i1 %2765, label %2776, label %2766

2766:                                             ; preds = %2761
  %2767 = getelementptr inbounds %struct.MTex, ptr %2764, i64 0, i32 5
  %2768 = load ptr, ptr %2767, align 8, !tbaa !48
  %2769 = icmp eq ptr %2768, null
  br i1 %2769, label %2776, label %2770

2770:                                             ; preds = %2766
  %2771 = getelementptr inbounds %struct.MTex, ptr %2764, i64 0, i32 1
  %2772 = load i16, ptr %2771, align 2, !tbaa !330
  %2773 = and i16 %2772, 128
  %2774 = icmp eq i16 %2773, 0
  %2775 = select i1 %2774, i32 %2762, i32 1
  br label %2776

2776:                                             ; preds = %2770, %2766, %2761
  %2777 = phi i32 [ %2762, %2766 ], [ %2762, %2761 ], [ %2775, %2770 ]
  %2778 = getelementptr inbounds %struct.Material, ptr %2700, i64 0, i32 102, i64 4
  %2779 = load ptr, ptr %2778, align 8, !tbaa !16
  %2780 = icmp eq ptr %2779, null
  br i1 %2780, label %2791, label %2781

2781:                                             ; preds = %2776
  %2782 = getelementptr inbounds %struct.MTex, ptr %2779, i64 0, i32 5
  %2783 = load ptr, ptr %2782, align 8, !tbaa !48
  %2784 = icmp eq ptr %2783, null
  br i1 %2784, label %2791, label %2785

2785:                                             ; preds = %2781
  %2786 = getelementptr inbounds %struct.MTex, ptr %2779, i64 0, i32 1
  %2787 = load i16, ptr %2786, align 2, !tbaa !330
  %2788 = and i16 %2787, 128
  %2789 = icmp eq i16 %2788, 0
  %2790 = select i1 %2789, i32 %2777, i32 1
  br label %2791

2791:                                             ; preds = %2785, %2781, %2776
  %2792 = phi i32 [ %2777, %2781 ], [ %2777, %2776 ], [ %2790, %2785 ]
  %2793 = getelementptr inbounds %struct.Material, ptr %2700, i64 0, i32 102, i64 5
  %2794 = load ptr, ptr %2793, align 8, !tbaa !16
  %2795 = icmp eq ptr %2794, null
  br i1 %2795, label %2806, label %2796

2796:                                             ; preds = %2791
  %2797 = getelementptr inbounds %struct.MTex, ptr %2794, i64 0, i32 5
  %2798 = load ptr, ptr %2797, align 8, !tbaa !48
  %2799 = icmp eq ptr %2798, null
  br i1 %2799, label %2806, label %2800

2800:                                             ; preds = %2796
  %2801 = getelementptr inbounds %struct.MTex, ptr %2794, i64 0, i32 1
  %2802 = load i16, ptr %2801, align 2, !tbaa !330
  %2803 = and i16 %2802, 128
  %2804 = icmp eq i16 %2803, 0
  %2805 = select i1 %2804, i32 %2792, i32 1
  br label %2806

2806:                                             ; preds = %2800, %2796, %2791
  %2807 = phi i32 [ %2792, %2796 ], [ %2792, %2791 ], [ %2805, %2800 ]
  %2808 = getelementptr inbounds %struct.Material, ptr %2700, i64 0, i32 102, i64 6
  %2809 = load ptr, ptr %2808, align 8, !tbaa !16
  %2810 = icmp eq ptr %2809, null
  br i1 %2810, label %2821, label %2811

2811:                                             ; preds = %2806
  %2812 = getelementptr inbounds %struct.MTex, ptr %2809, i64 0, i32 5
  %2813 = load ptr, ptr %2812, align 8, !tbaa !48
  %2814 = icmp eq ptr %2813, null
  br i1 %2814, label %2821, label %2815

2815:                                             ; preds = %2811
  %2816 = getelementptr inbounds %struct.MTex, ptr %2809, i64 0, i32 1
  %2817 = load i16, ptr %2816, align 2, !tbaa !330
  %2818 = and i16 %2817, 128
  %2819 = icmp eq i16 %2818, 0
  %2820 = select i1 %2819, i32 %2807, i32 1
  br label %2821

2821:                                             ; preds = %2815, %2811, %2806
  %2822 = phi i32 [ %2807, %2811 ], [ %2807, %2806 ], [ %2820, %2815 ]
  %2823 = getelementptr inbounds %struct.Material, ptr %2700, i64 0, i32 102, i64 7
  %2824 = load ptr, ptr %2823, align 8, !tbaa !16
  %2825 = icmp eq ptr %2824, null
  br i1 %2825, label %2836, label %2826

2826:                                             ; preds = %2821
  %2827 = getelementptr inbounds %struct.MTex, ptr %2824, i64 0, i32 5
  %2828 = load ptr, ptr %2827, align 8, !tbaa !48
  %2829 = icmp eq ptr %2828, null
  br i1 %2829, label %2836, label %2830

2830:                                             ; preds = %2826
  %2831 = getelementptr inbounds %struct.MTex, ptr %2824, i64 0, i32 1
  %2832 = load i16, ptr %2831, align 2, !tbaa !330
  %2833 = and i16 %2832, 128
  %2834 = icmp eq i16 %2833, 0
  %2835 = select i1 %2834, i32 %2822, i32 1
  br label %2836

2836:                                             ; preds = %2830, %2826, %2821
  %2837 = phi i32 [ %2822, %2826 ], [ %2822, %2821 ], [ %2835, %2830 ]
  %2838 = getelementptr inbounds %struct.Material, ptr %2700, i64 0, i32 102, i64 8
  %2839 = load ptr, ptr %2838, align 8, !tbaa !16
  %2840 = icmp eq ptr %2839, null
  br i1 %2840, label %2851, label %2841

2841:                                             ; preds = %2836
  %2842 = getelementptr inbounds %struct.MTex, ptr %2839, i64 0, i32 5
  %2843 = load ptr, ptr %2842, align 8, !tbaa !48
  %2844 = icmp eq ptr %2843, null
  br i1 %2844, label %2851, label %2845

2845:                                             ; preds = %2841
  %2846 = getelementptr inbounds %struct.MTex, ptr %2839, i64 0, i32 1
  %2847 = load i16, ptr %2846, align 2, !tbaa !330
  %2848 = and i16 %2847, 128
  %2849 = icmp eq i16 %2848, 0
  %2850 = select i1 %2849, i32 %2837, i32 1
  br label %2851

2851:                                             ; preds = %2845, %2841, %2836
  %2852 = phi i32 [ %2837, %2841 ], [ %2837, %2836 ], [ %2850, %2845 ]
  %2853 = getelementptr inbounds %struct.Material, ptr %2700, i64 0, i32 102, i64 9
  %2854 = load ptr, ptr %2853, align 8, !tbaa !16
  %2855 = icmp eq ptr %2854, null
  br i1 %2855, label %2866, label %2856

2856:                                             ; preds = %2851
  %2857 = getelementptr inbounds %struct.MTex, ptr %2854, i64 0, i32 5
  %2858 = load ptr, ptr %2857, align 8, !tbaa !48
  %2859 = icmp eq ptr %2858, null
  br i1 %2859, label %2866, label %2860

2860:                                             ; preds = %2856
  %2861 = getelementptr inbounds %struct.MTex, ptr %2854, i64 0, i32 1
  %2862 = load i16, ptr %2861, align 2, !tbaa !330
  %2863 = and i16 %2862, 128
  %2864 = icmp eq i16 %2863, 0
  %2865 = select i1 %2864, i32 %2852, i32 1
  br label %2866

2866:                                             ; preds = %2860, %2856, %2851
  %2867 = phi i32 [ %2852, %2856 ], [ %2852, %2851 ], [ %2865, %2860 ]
  %2868 = getelementptr inbounds %struct.Material, ptr %2700, i64 0, i32 102, i64 10
  %2869 = load ptr, ptr %2868, align 8, !tbaa !16
  %2870 = icmp eq ptr %2869, null
  br i1 %2870, label %2881, label %2871

2871:                                             ; preds = %2866
  %2872 = getelementptr inbounds %struct.MTex, ptr %2869, i64 0, i32 5
  %2873 = load ptr, ptr %2872, align 8, !tbaa !48
  %2874 = icmp eq ptr %2873, null
  br i1 %2874, label %2881, label %2875

2875:                                             ; preds = %2871
  %2876 = getelementptr inbounds %struct.MTex, ptr %2869, i64 0, i32 1
  %2877 = load i16, ptr %2876, align 2, !tbaa !330
  %2878 = and i16 %2877, 128
  %2879 = icmp eq i16 %2878, 0
  %2880 = select i1 %2879, i32 %2867, i32 1
  br label %2881

2881:                                             ; preds = %2875, %2871, %2866
  %2882 = phi i32 [ %2867, %2871 ], [ %2867, %2866 ], [ %2880, %2875 ]
  %2883 = getelementptr inbounds %struct.Material, ptr %2700, i64 0, i32 102, i64 11
  %2884 = load ptr, ptr %2883, align 8, !tbaa !16
  %2885 = icmp eq ptr %2884, null
  br i1 %2885, label %2896, label %2886

2886:                                             ; preds = %2881
  %2887 = getelementptr inbounds %struct.MTex, ptr %2884, i64 0, i32 5
  %2888 = load ptr, ptr %2887, align 8, !tbaa !48
  %2889 = icmp eq ptr %2888, null
  br i1 %2889, label %2896, label %2890

2890:                                             ; preds = %2886
  %2891 = getelementptr inbounds %struct.MTex, ptr %2884, i64 0, i32 1
  %2892 = load i16, ptr %2891, align 2, !tbaa !330
  %2893 = and i16 %2892, 128
  %2894 = icmp eq i16 %2893, 0
  %2895 = select i1 %2894, i32 %2882, i32 1
  br label %2896

2896:                                             ; preds = %2890, %2886, %2881
  %2897 = phi i32 [ %2882, %2886 ], [ %2882, %2881 ], [ %2895, %2890 ]
  %2898 = getelementptr inbounds %struct.Material, ptr %2700, i64 0, i32 102, i64 12
  %2899 = load ptr, ptr %2898, align 8, !tbaa !16
  %2900 = icmp eq ptr %2899, null
  br i1 %2900, label %2911, label %2901

2901:                                             ; preds = %2896
  %2902 = getelementptr inbounds %struct.MTex, ptr %2899, i64 0, i32 5
  %2903 = load ptr, ptr %2902, align 8, !tbaa !48
  %2904 = icmp eq ptr %2903, null
  br i1 %2904, label %2911, label %2905

2905:                                             ; preds = %2901
  %2906 = getelementptr inbounds %struct.MTex, ptr %2899, i64 0, i32 1
  %2907 = load i16, ptr %2906, align 2, !tbaa !330
  %2908 = and i16 %2907, 128
  %2909 = icmp eq i16 %2908, 0
  %2910 = select i1 %2909, i32 %2897, i32 1
  br label %2911

2911:                                             ; preds = %2905, %2901, %2896
  %2912 = phi i32 [ %2897, %2901 ], [ %2897, %2896 ], [ %2910, %2905 ]
  %2913 = getelementptr inbounds %struct.Material, ptr %2700, i64 0, i32 102, i64 13
  %2914 = load ptr, ptr %2913, align 8, !tbaa !16
  %2915 = icmp eq ptr %2914, null
  br i1 %2915, label %2926, label %2916

2916:                                             ; preds = %2911
  %2917 = getelementptr inbounds %struct.MTex, ptr %2914, i64 0, i32 5
  %2918 = load ptr, ptr %2917, align 8, !tbaa !48
  %2919 = icmp eq ptr %2918, null
  br i1 %2919, label %2926, label %2920

2920:                                             ; preds = %2916
  %2921 = getelementptr inbounds %struct.MTex, ptr %2914, i64 0, i32 1
  %2922 = load i16, ptr %2921, align 2, !tbaa !330
  %2923 = and i16 %2922, 128
  %2924 = icmp eq i16 %2923, 0
  %2925 = select i1 %2924, i32 %2912, i32 1
  br label %2926

2926:                                             ; preds = %2920, %2916, %2911
  %2927 = phi i32 [ %2912, %2916 ], [ %2912, %2911 ], [ %2925, %2920 ]
  %2928 = getelementptr inbounds %struct.Material, ptr %2700, i64 0, i32 102, i64 14
  %2929 = load ptr, ptr %2928, align 8, !tbaa !16
  %2930 = icmp eq ptr %2929, null
  br i1 %2930, label %2941, label %2931

2931:                                             ; preds = %2926
  %2932 = getelementptr inbounds %struct.MTex, ptr %2929, i64 0, i32 5
  %2933 = load ptr, ptr %2932, align 8, !tbaa !48
  %2934 = icmp eq ptr %2933, null
  br i1 %2934, label %2941, label %2935

2935:                                             ; preds = %2931
  %2936 = getelementptr inbounds %struct.MTex, ptr %2929, i64 0, i32 1
  %2937 = load i16, ptr %2936, align 2, !tbaa !330
  %2938 = and i16 %2937, 128
  %2939 = icmp eq i16 %2938, 0
  %2940 = select i1 %2939, i32 %2927, i32 1
  br label %2941

2941:                                             ; preds = %2935, %2931, %2926
  %2942 = phi i32 [ %2927, %2931 ], [ %2927, %2926 ], [ %2940, %2935 ]
  %2943 = getelementptr inbounds %struct.Material, ptr %2700, i64 0, i32 102, i64 15
  %2944 = load ptr, ptr %2943, align 8, !tbaa !16
  %2945 = icmp eq ptr %2944, null
  br i1 %2945, label %2956, label %2946

2946:                                             ; preds = %2941
  %2947 = getelementptr inbounds %struct.MTex, ptr %2944, i64 0, i32 5
  %2948 = load ptr, ptr %2947, align 8, !tbaa !48
  %2949 = icmp eq ptr %2948, null
  br i1 %2949, label %2956, label %2950

2950:                                             ; preds = %2946
  %2951 = getelementptr inbounds %struct.MTex, ptr %2944, i64 0, i32 1
  %2952 = load i16, ptr %2951, align 2, !tbaa !330
  %2953 = and i16 %2952, 128
  %2954 = icmp eq i16 %2953, 0
  %2955 = select i1 %2954, i32 %2942, i32 1
  br label %2956

2956:                                             ; preds = %2950, %2946, %2941
  %2957 = phi i32 [ %2942, %2946 ], [ %2942, %2941 ], [ %2955, %2950 ]
  %2958 = getelementptr inbounds %struct.Material, ptr %2700, i64 0, i32 102, i64 16
  %2959 = load ptr, ptr %2958, align 8, !tbaa !16
  %2960 = icmp eq ptr %2959, null
  br i1 %2960, label %2971, label %2961

2961:                                             ; preds = %2956
  %2962 = getelementptr inbounds %struct.MTex, ptr %2959, i64 0, i32 5
  %2963 = load ptr, ptr %2962, align 8, !tbaa !48
  %2964 = icmp eq ptr %2963, null
  br i1 %2964, label %2971, label %2965

2965:                                             ; preds = %2961
  %2966 = getelementptr inbounds %struct.MTex, ptr %2959, i64 0, i32 1
  %2967 = load i16, ptr %2966, align 2, !tbaa !330
  %2968 = and i16 %2967, 128
  %2969 = icmp eq i16 %2968, 0
  %2970 = select i1 %2969, i32 %2957, i32 1
  br label %2971

2971:                                             ; preds = %2965, %2961, %2956
  %2972 = phi i32 [ %2957, %2961 ], [ %2957, %2956 ], [ %2970, %2965 ]
  %2973 = getelementptr inbounds %struct.Material, ptr %2700, i64 0, i32 102, i64 17
  %2974 = load ptr, ptr %2973, align 8, !tbaa !16
  %2975 = icmp eq ptr %2974, null
  br i1 %2975, label %2986, label %2976

2976:                                             ; preds = %2971
  %2977 = getelementptr inbounds %struct.MTex, ptr %2974, i64 0, i32 5
  %2978 = load ptr, ptr %2977, align 8, !tbaa !48
  %2979 = icmp eq ptr %2978, null
  br i1 %2979, label %2986, label %2980

2980:                                             ; preds = %2976
  %2981 = getelementptr inbounds %struct.MTex, ptr %2974, i64 0, i32 1
  %2982 = load i16, ptr %2981, align 2, !tbaa !330
  %2983 = and i16 %2982, 128
  %2984 = icmp eq i16 %2983, 0
  %2985 = select i1 %2984, i32 %2972, i32 1
  br label %2986

2986:                                             ; preds = %2980, %2976, %2971, %2712, %2708, %2704, %2694
  %2987 = phi i32 [ 1, %2712 ], [ 1, %2708 ], [ 1, %2704 ], [ 1, %2694 ], [ %2972, %2976 ], [ %2972, %2971 ], [ %2985, %2980 ]
  %2988 = getelementptr inbounds %struct.Material, ptr %2700, i64 0, i32 2
  %2989 = load i16, ptr %2988, align 8, !tbaa !139
  %2990 = icmp eq i16 %2989, 3
  br i1 %2990, label %2991, label %2997

2991:                                             ; preds = %2986
  %2992 = load ptr, ptr %2677, align 8, !tbaa !550
  %2993 = call i32 %2992(ptr noundef %2409) #16
  %2994 = icmp ne i32 %2993, 0
  %2995 = icmp eq i32 %2987, 0
  %2996 = select i1 %2994, i1 true, i1 %2995
  br i1 %2996, label %3362, label %2999

2997:                                             ; preds = %2986
  %2998 = icmp eq i32 %2987, 0
  br i1 %2998, label %3362, label %2999

2999:                                             ; preds = %2997, %2991
  %3000 = load ptr, ptr %2678, align 8, !tbaa !419
  %3001 = call i32 %3000(ptr noundef %2409) #16
  %3002 = load ptr, ptr %2679, align 8, !tbaa !551
  %3003 = call ptr %3002(ptr noundef %2409) #16
  %3004 = icmp eq ptr %2695, null
  %3005 = and i1 %2378, %3004
  br i1 %3005, label %3006, label %3015

3006:                                             ; preds = %2999
  %3007 = load ptr, ptr %2680, align 8, !tbaa !420
  %3008 = call ptr %3007(ptr noundef nonnull %2409, i32 noundef 40) #16
  %3009 = icmp eq ptr %3008, null
  br i1 %3009, label %3015, label %3010

3010:                                             ; preds = %3006
  %3011 = load ptr, ptr @MEM_mallocN, align 8, !tbaa !16
  %3012 = sext i32 %3001 to i64
  %3013 = mul nsw i64 %3012, 24
  %3014 = call ptr %3011(i64 noundef %3013, ptr noundef nonnull @__func__.init_render_mesh) #16
  br label %3015

3015:                                             ; preds = %3010, %3006, %2999
  %3016 = phi ptr [ %3014, %3010 ], [ %2697, %3006 ], [ %2697, %2999 ]
  %3017 = phi ptr [ %3014, %3010 ], [ null, %3006 ], [ %2695, %2999 ]
  %3018 = icmp sgt i32 %3001, 0
  br i1 %3018, label %3019, label %3362

3019:                                             ; preds = %3015
  %3020 = icmp eq ptr %3017, null
  %3021 = zext i32 %3001 to i64
  br label %3022

3022:                                             ; preds = %3357, %3019
  %3023 = phi i64 [ 0, %3019 ], [ %3359, %3357 ]
  %3024 = phi ptr [ %3003, %3019 ], [ %3360, %3357 ]
  %3025 = phi ptr [ %3016, %3019 ], [ %3358, %3357 ]
  %3026 = getelementptr inbounds %struct.MFace, ptr %3024, i64 0, i32 4
  %3027 = load i16, ptr %3026, align 4, !tbaa !552
  %3028 = sext i16 %3027 to i32
  %3029 = icmp eq i32 %2696, %3028
  br i1 %3029, label %3030, label %3357

3030:                                             ; preds = %3022
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %20) #16
  store i32 %2683, ptr %20, align 16, !tbaa !47
  store i32 1, ptr %2684, align 4, !tbaa !47
  store i32 %2686, ptr %2685, align 8, !tbaa !47
  store i32 3, ptr %2687, align 4, !tbaa !47
  %3031 = getelementptr inbounds %struct.MFace, ptr %3024, i64 0, i32 2
  %3032 = select i1 %2682, ptr %3024, ptr %3031
  %3033 = load i32, ptr %3032, align 4, !tbaa !47
  %3034 = getelementptr inbounds %struct.MFace, ptr %3024, i64 0, i32 1
  %3035 = load i32, ptr %3034, align 4, !tbaa !554
  %3036 = select i1 %2682, ptr %3031, ptr %3024
  %3037 = load i32, ptr %3036, align 4, !tbaa !47
  %3038 = getelementptr inbounds %struct.MFace, ptr %3024, i64 0, i32 3
  %3039 = load i32, ptr %3038, align 4, !tbaa !555
  %3040 = getelementptr inbounds %struct.MFace, ptr %3024, i64 0, i32 6
  %3041 = load i8, ptr %3040, align 1, !tbaa !556
  %3042 = and i8 %3041, 1
  %3043 = load i32, ptr %2688, align 4, !tbaa !499
  %3044 = add nsw i32 %3043, 1
  store i32 %3044, ptr %2688, align 4, !tbaa !499
  %3045 = call ptr @RE_findOrAddVlak(ptr noundef %1, i32 noundef %3043) #16
  %3046 = add nsw i32 %3033, %2673
  %3047 = call ptr @RE_findOrAddVert(ptr noundef %1, i32 noundef %3046) #16
  store ptr %3047, ptr %3045, align 8, !tbaa !502
  %3048 = add nsw i32 %3035, %2673
  %3049 = call ptr @RE_findOrAddVert(ptr noundef %1, i32 noundef %3048) #16
  %3050 = getelementptr inbounds %struct.VlakRen, ptr %3045, i64 0, i32 1
  store ptr %3049, ptr %3050, align 8, !tbaa !504
  %3051 = add nsw i32 %3037, %2673
  %3052 = call ptr @RE_findOrAddVert(ptr noundef %1, i32 noundef %3051) #16
  %3053 = getelementptr inbounds %struct.VlakRen, ptr %3045, i64 0, i32 2
  store ptr %3052, ptr %3053, align 8, !tbaa !505
  %3054 = icmp eq i32 %3039, 0
  br i1 %3054, label %3059, label %3055

3055:                                             ; preds = %3030
  %3056 = add nsw i32 %3039, %2673
  %3057 = call ptr @RE_findOrAddVert(ptr noundef nonnull %1, i32 noundef %3056) #16
  %3058 = getelementptr inbounds %struct.VlakRen, ptr %3045, i64 0, i32 3
  store ptr %3057, ptr %3058, align 8
  br i1 %2454, label %3105, label %3065

3059:                                             ; preds = %3030
  %3060 = getelementptr inbounds %struct.VlakRen, ptr %3045, i64 0, i32 3
  store ptr null, ptr %3060, align 8
  br i1 %2454, label %3113, label %3061

3061:                                             ; preds = %3059
  %3062 = load ptr, ptr %2689, align 8, !tbaa !557
  %3063 = getelementptr inbounds %struct.MFace, ptr %3062, i64 %3023
  %3064 = load ptr, ptr %2690, align 8, !tbaa !558
  br label %3088

3065:                                             ; preds = %3055
  %3066 = load ptr, ptr %2689, align 8, !tbaa !557
  %3067 = getelementptr inbounds %struct.MFace, ptr %3066, i64 %3023
  %3068 = load ptr, ptr %2690, align 8, !tbaa !558
  %3069 = icmp eq ptr %3057, null
  br i1 %3069, label %3088, label %3070

3070:                                             ; preds = %3065
  %3071 = getelementptr inbounds %struct.VlakRen, ptr %3045, i64 0, i32 4
  %3072 = getelementptr inbounds %struct.MFace, ptr %3066, i64 %3023, i32 3
  %3073 = load i32, ptr %3072, align 4, !tbaa !555
  %3074 = zext i32 %3073 to i64
  %3075 = getelementptr inbounds %struct.MVert, ptr %3068, i64 %3074
  %3076 = getelementptr inbounds %struct.MFace, ptr %3066, i64 %3023, i32 2
  %3077 = load i32, ptr %3076, align 4, !tbaa !559
  %3078 = zext i32 %3077 to i64
  %3079 = getelementptr inbounds %struct.MVert, ptr %3068, i64 %3078
  %3080 = getelementptr inbounds %struct.MFace, ptr %3066, i64 %3023, i32 1
  %3081 = load i32, ptr %3080, align 4, !tbaa !554
  %3082 = zext i32 %3081 to i64
  %3083 = getelementptr inbounds %struct.MVert, ptr %3068, i64 %3082
  %3084 = load i32, ptr %3067, align 4, !tbaa !560
  %3085 = zext i32 %3084 to i64
  %3086 = getelementptr inbounds %struct.MVert, ptr %3068, i64 %3085
  %3087 = call fast nofpclass(nan inf) float @normal_quad_v3(ptr noundef nonnull %3071, ptr noundef %3075, ptr noundef %3079, ptr noundef %3083, ptr noundef %3086) #16
  br label %3119

3088:                                             ; preds = %3065, %3061
  %3089 = phi ptr [ %3064, %3061 ], [ %3068, %3065 ]
  %3090 = phi ptr [ %3063, %3061 ], [ %3067, %3065 ]
  %3091 = phi ptr [ %3062, %3061 ], [ %3066, %3065 ]
  %3092 = getelementptr inbounds %struct.VlakRen, ptr %3045, i64 0, i32 4
  %3093 = getelementptr inbounds %struct.MFace, ptr %3091, i64 %3023, i32 2
  %3094 = load i32, ptr %3093, align 4, !tbaa !559
  %3095 = zext i32 %3094 to i64
  %3096 = getelementptr inbounds %struct.MVert, ptr %3089, i64 %3095
  %3097 = getelementptr inbounds %struct.MFace, ptr %3091, i64 %3023, i32 1
  %3098 = load i32, ptr %3097, align 4, !tbaa !554
  %3099 = zext i32 %3098 to i64
  %3100 = getelementptr inbounds %struct.MVert, ptr %3089, i64 %3099
  %3101 = load i32, ptr %3090, align 4, !tbaa !560
  %3102 = zext i32 %3101 to i64
  %3103 = getelementptr inbounds %struct.MVert, ptr %3089, i64 %3102
  %3104 = call fast nofpclass(nan inf) float @normal_tri_v3(ptr noundef nonnull %3092, ptr noundef %3096, ptr noundef %3100, ptr noundef %3103) #16
  br label %3119

3105:                                             ; preds = %3055
  %3106 = icmp eq ptr %3057, null
  %3107 = load ptr, ptr %3053, align 8, !tbaa !505
  br i1 %3106, label %3113, label %3108

3108:                                             ; preds = %3105
  %3109 = getelementptr inbounds %struct.VlakRen, ptr %3045, i64 0, i32 4
  %3110 = load ptr, ptr %3050, align 8, !tbaa !504
  %3111 = load ptr, ptr %3045, align 8, !tbaa !502
  %3112 = call fast nofpclass(nan inf) float @normal_quad_v3(ptr noundef nonnull %3109, ptr noundef nonnull %3057, ptr noundef %3107, ptr noundef %3110, ptr noundef %3111) #16
  br label %3119

3113:                                             ; preds = %3105, %3059
  %3114 = phi ptr [ %3107, %3105 ], [ %3052, %3059 ]
  %3115 = getelementptr inbounds %struct.VlakRen, ptr %3045, i64 0, i32 4
  %3116 = load ptr, ptr %3050, align 8, !tbaa !504
  %3117 = load ptr, ptr %3045, align 8, !tbaa !502
  %3118 = call fast nofpclass(nan inf) float @normal_tri_v3(ptr noundef nonnull %3115, ptr noundef %3114, ptr noundef %3116, ptr noundef %3117) #16
  br label %3119

3119:                                             ; preds = %3113, %3108, %3088, %3070
  %3120 = phi float [ %3112, %3108 ], [ %3118, %3113 ], [ %3087, %3070 ], [ %3104, %3088 ]
  %3121 = getelementptr inbounds %struct.VlakRen, ptr %3045, i64 0, i32 5
  store ptr %2700, ptr %3121, align 8, !tbaa !507
  %3122 = getelementptr inbounds %struct.VlakRen, ptr %3045, i64 0, i32 7
  store i8 %3042, ptr %3122, align 1, !tbaa !508
  %3123 = getelementptr inbounds %struct.VlakRen, ptr %3045, i64 0, i32 8
  store i8 0, ptr %3123, align 2, !tbaa !509
  %3124 = fcmp fast oeq float %3120, 0.000000e+00
  br i1 %3124, label %3125, label %3128

3125:                                             ; preds = %3119
  %3126 = load i32, ptr %2688, align 4, !tbaa !499
  %3127 = add nsw i32 %3126, -1
  store i32 %3127, ptr %2688, align 4, !tbaa !499
  br label %3355

3128:                                             ; preds = %3119
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %21) #16
  %3129 = load i32, ptr %2691, align 4, !tbaa !561
  %3130 = icmp sgt i32 %3129, 0
  br i1 %3130, label %3131, label %3349

3131:                                             ; preds = %3128
  %3132 = select i1 %3054, i64 3, i64 4
  %3133 = trunc i64 %3023 to i32
  %3134 = shl i64 %3023, 4
  %3135 = and i64 %3134, 4294967280
  %3136 = shl nsw i32 %3133, 2
  %3137 = add nsw i64 %3132, -1
  %3138 = and i64 %3132, 1
  %3139 = icmp eq i64 %3137, 0
  %3140 = and i64 %3132, 6
  %3141 = icmp eq i64 %3138, 0
  %3142 = and i64 %3132, 1
  %3143 = icmp eq i64 %3137, 0
  %3144 = and i64 %3132, 6
  %3145 = icmp eq i64 %3142, 0
  br label %3146

3146:                                             ; preds = %3339, %3131
  %3147 = phi i64 [ 0, %3131 ], [ %3345, %3339 ]
  %3148 = phi i32 [ 0, %3131 ], [ %3344, %3339 ]
  %3149 = phi i32 [ 0, %3131 ], [ %3343, %3339 ]
  %3150 = phi i32 [ 0, %3131 ], [ %3342, %3339 ]
  %3151 = phi i32 [ 0, %3131 ], [ %3341, %3339 ]
  %3152 = phi ptr [ %3025, %3131 ], [ %3340, %3339 ]
  %3153 = load ptr, ptr %2664, align 8, !tbaa !562
  %3154 = getelementptr inbounds %struct.CustomDataLayer, ptr %3153, i64 %3147
  %3155 = getelementptr inbounds %struct.CustomDataLayer, ptr %3153, i64 %3147, i32 8
  store ptr %3155, ptr %21, align 8, !tbaa !16
  %3156 = load i32, ptr %3154, align 8, !tbaa !563
  %3157 = icmp eq i32 %3156, 5
  %3158 = icmp slt i32 %3151, 8
  %3159 = select i1 %3157, i1 %3158, i1 false
  br i1 %3159, label %3160, label %3190

3160:                                             ; preds = %3146
  %3161 = call ptr @RE_vlakren_get_tface(ptr noundef %1, ptr noundef nonnull %3045, i32 noundef %3151, ptr noundef nonnull %21, i32 noundef 1) #16
  %3162 = getelementptr inbounds %struct.CustomDataLayer, ptr %3153, i64 %3147, i32 9
  %3163 = load ptr, ptr %3162, align 8, !tbaa !565
  %3164 = getelementptr inbounds %struct.MTFace, ptr %3163, i64 %3023
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %3161, ptr noundef nonnull align 8 dereferenceable(48) %3164, i64 48, i1 false), !tbaa.struct !566
  br i1 %3143, label %3313, label %3165

3165:                                             ; preds = %3160, %3165
  %3166 = phi i64 [ %3187, %3165 ], [ 0, %3160 ]
  %3167 = phi i64 [ %3188, %3165 ], [ 0, %3160 ]
  %3168 = getelementptr inbounds [4 x i32], ptr %20, i64 0, i64 %3166
  %3169 = load i32, ptr %3168, align 8, !tbaa !47
  %3170 = sext i32 %3169 to i64
  %3171 = getelementptr inbounds [4 x [2 x float]], ptr %3164, i64 0, i64 %3170, i64 0
  %3172 = load float, ptr %3171, align 4, !tbaa !13
  %3173 = getelementptr inbounds [4 x [2 x float]], ptr %3161, i64 0, i64 %3166, i64 0
  store float %3172, ptr %3173, align 4, !tbaa !13
  %3174 = getelementptr inbounds [4 x [2 x float]], ptr %3164, i64 0, i64 %3170, i64 1
  %3175 = load float, ptr %3174, align 4, !tbaa !13
  %3176 = getelementptr inbounds [4 x [2 x float]], ptr %3161, i64 0, i64 %3166, i64 1
  store float %3175, ptr %3176, align 4, !tbaa !13
  %3177 = or i64 %3166, 1
  %3178 = getelementptr inbounds [4 x i32], ptr %20, i64 0, i64 %3177
  %3179 = load i32, ptr %3178, align 4, !tbaa !47
  %3180 = sext i32 %3179 to i64
  %3181 = getelementptr inbounds [4 x [2 x float]], ptr %3164, i64 0, i64 %3180, i64 0
  %3182 = load float, ptr %3181, align 4, !tbaa !13
  %3183 = getelementptr inbounds [4 x [2 x float]], ptr %3161, i64 0, i64 %3177, i64 0
  store float %3182, ptr %3183, align 4, !tbaa !13
  %3184 = getelementptr inbounds [4 x [2 x float]], ptr %3164, i64 0, i64 %3180, i64 1
  %3185 = load float, ptr %3184, align 4, !tbaa !13
  %3186 = getelementptr inbounds [4 x [2 x float]], ptr %3161, i64 0, i64 %3177, i64 1
  store float %3185, ptr %3186, align 4, !tbaa !13
  %3187 = add nuw nsw i64 %3166, 2
  %3188 = add i64 %3167, 2
  %3189 = icmp eq i64 %3188, %3144
  br i1 %3189, label %3313, label %3165, !llvm.loop !567

3190:                                             ; preds = %3146
  %3191 = icmp eq i32 %3156, 6
  %3192 = icmp slt i32 %3150, 8
  %3193 = select i1 %3191, i1 %3192, i1 false
  br i1 %3193, label %3194, label %3219

3194:                                             ; preds = %3190
  %3195 = call ptr @RE_vlakren_get_mcol(ptr noundef %1, ptr noundef nonnull %3045, i32 noundef %3150, ptr noundef nonnull %21, i32 noundef 1) #16
  %3196 = getelementptr inbounds %struct.CustomDataLayer, ptr %3153, i64 %3147, i32 9
  %3197 = load ptr, ptr %3196, align 8, !tbaa !565
  br i1 %3139, label %3327, label %3198

3198:                                             ; preds = %3194, %3198
  %3199 = phi i64 [ %3216, %3198 ], [ 0, %3194 ]
  %3200 = phi i64 [ %3217, %3198 ], [ 0, %3194 ]
  %3201 = getelementptr inbounds %struct.MCol, ptr %3195, i64 %3199
  %3202 = getelementptr inbounds [4 x i32], ptr %20, i64 0, i64 %3199
  %3203 = load i32, ptr %3202, align 8, !tbaa !47
  %3204 = add nsw i32 %3203, %3136
  %3205 = sext i32 %3204 to i64
  %3206 = getelementptr inbounds %struct.MCol, ptr %3197, i64 %3205
  %3207 = load i32, ptr %3206, align 1
  store i32 %3207, ptr %3201, align 1
  %3208 = or i64 %3199, 1
  %3209 = getelementptr inbounds %struct.MCol, ptr %3195, i64 %3208
  %3210 = getelementptr inbounds [4 x i32], ptr %20, i64 0, i64 %3208
  %3211 = load i32, ptr %3210, align 4, !tbaa !47
  %3212 = add nsw i32 %3211, %3136
  %3213 = sext i32 %3212 to i64
  %3214 = getelementptr inbounds %struct.MCol, ptr %3197, i64 %3213
  %3215 = load i32, ptr %3214, align 1
  store i32 %3215, ptr %3209, align 1
  %3216 = add nuw nsw i64 %3199, 2
  %3217 = add i64 %3200, 2
  %3218 = icmp eq i64 %3217, %3140
  br i1 %3218, label %3327, label %3198, !llvm.loop !568

3219:                                             ; preds = %3190
  %3220 = icmp eq i32 %3156, 18
  %3221 = icmp slt i32 %3149, 1
  %3222 = select i1 %3220, i1 %3221, i1 false
  br i1 %3222, label %3223, label %3269

3223:                                             ; preds = %3219
  br i1 %2665, label %3339, label %3224

3224:                                             ; preds = %3223
  %3225 = getelementptr inbounds %struct.CustomDataLayer, ptr %3153, i64 %3147, i32 9
  %3226 = load ptr, ptr %3225, align 8, !tbaa !565
  %3227 = call ptr @RE_vlakren_get_nmap_tangent(ptr noundef %1, ptr noundef nonnull %3045, i32 noundef 1) #16
  %3228 = getelementptr inbounds float, ptr %3226, i64 %3135
  br label %3229

3229:                                             ; preds = %3264, %3224
  %3230 = phi i64 [ 0, %3224 ], [ %3267, %3264 ]
  %3231 = shl nsw i64 %3230, 2
  %3232 = getelementptr inbounds float, ptr %3227, i64 %3231
  %3233 = getelementptr inbounds [4 x i32], ptr %20, i64 0, i64 %3230
  %3234 = load i32, ptr %3233, align 4, !tbaa !47
  %3235 = shl nsw i32 %3234, 2
  %3236 = sext i32 %3235 to i64
  %3237 = getelementptr inbounds float, ptr %3228, i64 %3236
  %3238 = load float, ptr %3237, align 4, !tbaa !13
  store float %3238, ptr %3232, align 4, !tbaa !13
  %3239 = getelementptr inbounds float, ptr %3237, i64 1
  %3240 = load float, ptr %3239, align 4, !tbaa !13
  %3241 = getelementptr inbounds float, ptr %3232, i64 1
  store float %3240, ptr %3241, align 4, !tbaa !13
  %3242 = getelementptr inbounds float, ptr %3237, i64 2
  %3243 = load float, ptr %3242, align 4, !tbaa !13
  %3244 = getelementptr inbounds float, ptr %3232, i64 2
  store float %3243, ptr %3244, align 4, !tbaa !13
  %3245 = getelementptr inbounds float, ptr %3237, i64 3
  %3246 = load float, ptr %3245, align 4, !tbaa !13
  %3247 = getelementptr inbounds float, ptr %3232, i64 3
  store float %3246, ptr %3247, align 4, !tbaa !13
  call void @mul_mat3_m4_v3(ptr noundef nonnull %19, ptr noundef nonnull %3232) #16
  %3248 = load <2 x float>, ptr %3232, align 4, !tbaa !13
  %3249 = fmul fast <2 x float> %3248, %3248
  %3250 = shufflevector <2 x float> %3249, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %3251 = fadd fast <2 x float> %3250, %3249
  %3252 = extractelement <2 x float> %3251, i64 0
  %3253 = load float, ptr %3244, align 4, !tbaa !13
  %3254 = fmul fast float %3253, %3253
  %3255 = fadd fast float %3252, %3254
  %3256 = fcmp fast ogt float %3255, 0x38AA95A5C0000000
  br i1 %3256, label %3257, label %3264

3257:                                             ; preds = %3229
  %3258 = call fast float @llvm.sqrt.f32(float %3255)
  %3259 = fdiv fast float 1.000000e+00, %3258
  %3260 = insertelement <2 x float> poison, float %3259, i64 0
  %3261 = shufflevector <2 x float> %3260, <2 x float> poison, <2 x i32> zeroinitializer
  %3262 = fmul fast <2 x float> %3261, %3248
  %3263 = fmul fast float %3259, %3253
  br label %3264

3264:                                             ; preds = %3257, %3229
  %3265 = phi float [ %3263, %3257 ], [ 0.000000e+00, %3229 ]
  %3266 = phi <2 x float> [ %3262, %3257 ], [ zeroinitializer, %3229 ]
  store <2 x float> %3266, ptr %3232, align 4
  store float %3265, ptr %3244, align 4
  %3267 = add nuw nsw i64 %3230, 1
  %3268 = icmp eq i64 %3267, %3132
  br i1 %3268, label %3339, label %3229, !llvm.loop !569

3269:                                             ; preds = %3219
  %3270 = icmp eq i32 %3156, 40
  %3271 = icmp slt i32 %3148, 1
  %3272 = select i1 %3270, i1 %3271, i1 false
  br i1 %3272, label %3273, label %3339

3273:                                             ; preds = %3269
  br i1 %3020, label %3339, label %3274

3274:                                             ; preds = %3273
  %3275 = getelementptr inbounds %struct.CustomDataLayer, ptr %3153, i64 %3147, i32 9
  %3276 = load ptr, ptr %3275, align 8, !tbaa !565
  %3277 = getelementptr inbounds [4 x [3 x i16]], ptr %3276, i64 %3023, i64 %2692
  %3278 = load i16, ptr %3277, align 2, !tbaa !46
  store i16 %3278, ptr %3152, align 2, !tbaa !46
  %3279 = getelementptr inbounds i16, ptr %3277, i64 1
  %3280 = load i16, ptr %3279, align 2, !tbaa !46
  %3281 = getelementptr inbounds i16, ptr %3152, i64 1
  store i16 %3280, ptr %3281, align 2, !tbaa !46
  %3282 = getelementptr inbounds i16, ptr %3277, i64 2
  %3283 = load i16, ptr %3282, align 2, !tbaa !46
  %3284 = getelementptr inbounds i16, ptr %3152, i64 2
  store i16 %3283, ptr %3284, align 2, !tbaa !46
  %3285 = getelementptr inbounds [4 x [3 x i16]], ptr %3152, i64 0, i64 1
  %3286 = getelementptr inbounds [4 x [3 x i16]], ptr %3276, i64 %3023, i64 1
  %3287 = load i16, ptr %3286, align 2, !tbaa !46
  store i16 %3287, ptr %3285, align 2, !tbaa !46
  %3288 = getelementptr inbounds i16, ptr %3286, i64 1
  %3289 = load i16, ptr %3288, align 2, !tbaa !46
  %3290 = getelementptr inbounds [4 x [3 x i16]], ptr %3152, i64 0, i64 1, i64 1
  store i16 %3289, ptr %3290, align 2, !tbaa !46
  %3291 = getelementptr inbounds i16, ptr %3286, i64 2
  %3292 = load i16, ptr %3291, align 2, !tbaa !46
  %3293 = getelementptr inbounds [4 x [3 x i16]], ptr %3152, i64 0, i64 1, i64 2
  store i16 %3292, ptr %3293, align 2, !tbaa !46
  %3294 = getelementptr inbounds [4 x [3 x i16]], ptr %3152, i64 0, i64 2
  %3295 = getelementptr inbounds [4 x [3 x i16]], ptr %3276, i64 %3023, i64 %2693
  %3296 = load i16, ptr %3295, align 2, !tbaa !46
  store i16 %3296, ptr %3294, align 2, !tbaa !46
  %3297 = getelementptr inbounds i16, ptr %3295, i64 1
  %3298 = load i16, ptr %3297, align 2, !tbaa !46
  %3299 = getelementptr inbounds [4 x [3 x i16]], ptr %3152, i64 0, i64 2, i64 1
  store i16 %3298, ptr %3299, align 2, !tbaa !46
  %3300 = getelementptr inbounds i16, ptr %3295, i64 2
  %3301 = load i16, ptr %3300, align 2, !tbaa !46
  %3302 = getelementptr inbounds [4 x [3 x i16]], ptr %3152, i64 0, i64 2, i64 2
  store i16 %3301, ptr %3302, align 2, !tbaa !46
  %3303 = getelementptr inbounds [4 x [3 x i16]], ptr %3152, i64 0, i64 3
  %3304 = getelementptr inbounds [4 x [3 x i16]], ptr %3276, i64 %3023, i64 3
  %3305 = load i16, ptr %3304, align 2, !tbaa !46
  store i16 %3305, ptr %3303, align 2, !tbaa !46
  %3306 = getelementptr inbounds i16, ptr %3304, i64 1
  %3307 = load i16, ptr %3306, align 2, !tbaa !46
  %3308 = getelementptr inbounds [4 x [3 x i16]], ptr %3152, i64 0, i64 3, i64 1
  store i16 %3307, ptr %3308, align 2, !tbaa !46
  %3309 = getelementptr inbounds i16, ptr %3304, i64 2
  %3310 = load i16, ptr %3309, align 2, !tbaa !46
  %3311 = getelementptr inbounds [4 x [3 x i16]], ptr %3152, i64 0, i64 3, i64 2
  store i16 %3310, ptr %3311, align 2, !tbaa !46
  %3312 = getelementptr inbounds [4 x [3 x i16]], ptr %3152, i64 1
  br label %3339

3313:                                             ; preds = %3165, %3160
  %3314 = phi i64 [ 0, %3160 ], [ %3187, %3165 ]
  br i1 %3145, label %3325, label %3315

3315:                                             ; preds = %3313
  %3316 = getelementptr inbounds [4 x i32], ptr %20, i64 0, i64 %3314
  %3317 = load i32, ptr %3316, align 4, !tbaa !47
  %3318 = sext i32 %3317 to i64
  %3319 = getelementptr inbounds [4 x [2 x float]], ptr %3164, i64 0, i64 %3318, i64 0
  %3320 = load float, ptr %3319, align 4, !tbaa !13
  %3321 = getelementptr inbounds [4 x [2 x float]], ptr %3161, i64 0, i64 %3314, i64 0
  store float %3320, ptr %3321, align 4, !tbaa !13
  %3322 = getelementptr inbounds [4 x [2 x float]], ptr %3164, i64 0, i64 %3318, i64 1
  %3323 = load float, ptr %3322, align 4, !tbaa !13
  %3324 = getelementptr inbounds [4 x [2 x float]], ptr %3161, i64 0, i64 %3314, i64 1
  store float %3323, ptr %3324, align 4, !tbaa !13
  br label %3325

3325:                                             ; preds = %3313, %3315
  %3326 = add nsw i32 %3151, 1
  br label %3339

3327:                                             ; preds = %3198, %3194
  %3328 = phi i64 [ 0, %3194 ], [ %3216, %3198 ]
  br i1 %3141, label %3337, label %3329

3329:                                             ; preds = %3327
  %3330 = getelementptr inbounds %struct.MCol, ptr %3195, i64 %3328
  %3331 = getelementptr inbounds [4 x i32], ptr %20, i64 0, i64 %3328
  %3332 = load i32, ptr %3331, align 4, !tbaa !47
  %3333 = add nsw i32 %3332, %3136
  %3334 = sext i32 %3333 to i64
  %3335 = getelementptr inbounds %struct.MCol, ptr %3197, i64 %3334
  %3336 = load i32, ptr %3335, align 1
  store i32 %3336, ptr %3330, align 1
  br label %3337

3337:                                             ; preds = %3327, %3329
  %3338 = add nsw i32 %3150, 1
  br label %3339

3339:                                             ; preds = %3264, %3337, %3325, %3274, %3273, %3269, %3223
  %3340 = phi ptr [ %3152, %3269 ], [ %3152, %3223 ], [ %3312, %3274 ], [ %3152, %3273 ], [ %3152, %3325 ], [ %3152, %3337 ], [ %3152, %3264 ]
  %3341 = phi i32 [ %3151, %3269 ], [ %3151, %3223 ], [ %3151, %3274 ], [ %3151, %3273 ], [ %3326, %3325 ], [ %3151, %3337 ], [ %3151, %3264 ]
  %3342 = phi i32 [ %3150, %3269 ], [ %3150, %3223 ], [ %3150, %3274 ], [ %3150, %3273 ], [ %3150, %3325 ], [ %3338, %3337 ], [ %3150, %3264 ]
  %3343 = phi i32 [ %3149, %3269 ], [ 1, %3223 ], [ %3149, %3274 ], [ %3149, %3273 ], [ %3149, %3325 ], [ %3149, %3337 ], [ 1, %3264 ]
  %3344 = phi i32 [ %3148, %3269 ], [ %3148, %3223 ], [ 1, %3274 ], [ 1, %3273 ], [ %3148, %3325 ], [ %3148, %3337 ], [ %3148, %3264 ]
  %3345 = add nuw nsw i64 %3147, 1
  %3346 = load i32, ptr %2691, align 4, !tbaa !561
  %3347 = sext i32 %3346 to i64
  %3348 = icmp slt i64 %3345, %3347
  br i1 %3348, label %3146, label %3349, !llvm.loop !570

3349:                                             ; preds = %3339, %3128
  %3350 = phi ptr [ %3025, %3128 ], [ %3340, %3339 ]
  br i1 %2389, label %3351, label %3354

3351:                                             ; preds = %3349
  %3352 = call ptr @RE_vlakren_get_origindex(ptr noundef %1, ptr noundef nonnull %3045, i32 noundef 1) #16
  %3353 = trunc i64 %3023 to i32
  store i32 %3353, ptr %3352, align 4, !tbaa !47
  br label %3354

3354:                                             ; preds = %3351, %3349
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %21) #16
  br label %3355

3355:                                             ; preds = %3354, %3125
  %3356 = phi ptr [ %3025, %3125 ], [ %3350, %3354 ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %20) #16
  br label %3357

3357:                                             ; preds = %3355, %3022
  %3358 = phi ptr [ %3356, %3355 ], [ %3025, %3022 ]
  %3359 = add nuw nsw i64 %3023, 1
  %3360 = getelementptr inbounds %struct.MFace, ptr %3024, i64 1
  %3361 = icmp eq i64 %3359, %3021
  br i1 %3361, label %3362, label %3022, !llvm.loop !571

3362:                                             ; preds = %3357, %3015, %2997, %2991
  %3363 = phi ptr [ %2697, %2997 ], [ %2697, %2991 ], [ %3016, %3015 ], [ %3358, %3357 ]
  %3364 = phi ptr [ %2695, %2997 ], [ %2695, %2991 ], [ %3017, %3015 ], [ %3017, %3357 ]
  %3365 = load i32, ptr %2290, align 8, !tbaa !243
  %3366 = icmp slt i32 %2698, %3365
  br i1 %3366, label %2694, label %3367, !llvm.loop !572

3367:                                             ; preds = %3362, %2670
  %3368 = phi ptr [ null, %2670 ], [ %3364, %3362 ]
  %3369 = getelementptr inbounds %struct.DerivedMesh, ptr %2409, i64 0, i32 24
  %3370 = load ptr, ptr %3369, align 8, !tbaa !550
  %3371 = call i32 %3370(ptr noundef %2409) #16
  %3372 = load ptr, ptr %2437, align 8, !tbaa !540
  %3373 = call ptr %3372(ptr noundef %2409) #16
  %3374 = call fastcc ptr @give_render_material(ptr noundef %0, ptr noundef nonnull %54, i16 noundef signext 1)
  %3375 = icmp eq i32 %3371, 0
  br i1 %3375, label %3834, label %3376

3376:                                             ; preds = %3367
  %3377 = getelementptr inbounds %struct.Material, ptr %3374, i64 0, i32 2
  %3378 = load i16, ptr %3377, align 8, !tbaa !139
  %3379 = icmp eq i16 %3378, 3
  br i1 %3379, label %3380, label %3834

3380:                                             ; preds = %3376
  %3381 = getelementptr inbounds %struct.DerivedMesh, ptr %2409, i64 0, i32 32
  %3382 = load ptr, ptr %3381, align 8, !tbaa !573
  %3383 = call ptr %3382(ptr noundef nonnull %2409) #16
  %3384 = getelementptr inbounds %struct.DerivedMesh, ptr %2409, i64 0, i32 33
  %3385 = load ptr, ptr %3384, align 8, !tbaa !551
  %3386 = call ptr %3385(ptr noundef nonnull %2409) #16
  %3387 = getelementptr inbounds %struct.DerivedMesh, ptr %2409, i64 0, i32 25
  %3388 = load ptr, ptr %3387, align 8, !tbaa !419
  %3389 = call i32 %3388(ptr noundef nonnull %2409) #16
  %3390 = getelementptr inbounds %struct.DerivedMesh, ptr %2409, i64 0, i32 52
  %3391 = load ptr, ptr %3390, align 8, !tbaa !420
  %3392 = call ptr %3391(ptr noundef nonnull %2409, i32 noundef 5) #16
  %3393 = load ptr, ptr %3390, align 8, !tbaa !420
  %3394 = call ptr %3393(ptr noundef nonnull %2409, i32 noundef 6) #16
  %3395 = icmp ne ptr %3394, null
  %3396 = icmp ne ptr %3392, null
  %3397 = select i1 %3395, i1 true, i1 %3396
  %3398 = icmp sgt i32 %3389, 0
  %3399 = select i1 %3397, i1 %3398, i1 false
  br i1 %3399, label %3400, label %3612

3400:                                             ; preds = %3380
  %3401 = icmp ult i32 %3389, 17
  br i1 %3401, label %3532, label %3402

3402:                                             ; preds = %3400
  %3403 = zext i32 %3389 to i64
  %3404 = and i64 %3403, 15
  %3405 = icmp eq i64 %3404, 0
  %3406 = select i1 %3405, i64 16, i64 %3404
  %3407 = sub nsw i64 %3403, %3406
  %3408 = trunc i64 %3407 to i32
  %3409 = sub i32 %3389, %3408
  %3410 = mul nsw i64 %3407, 20
  %3411 = getelementptr i8, ptr %3386, i64 %3410
  %3412 = getelementptr %struct.MFace, ptr %3386, i64 0, i32 3
  %3413 = getelementptr %struct.MFace, ptr %3386, i64 0, i32 3
  %3414 = getelementptr %struct.MFace, ptr %3386, i64 0, i32 3
  %3415 = getelementptr %struct.MFace, ptr %3386, i64 0, i32 3
  %3416 = getelementptr %struct.MFace, ptr %3386, i64 0, i32 3
  %3417 = getelementptr %struct.MFace, ptr %3386, i64 0, i32 3
  %3418 = getelementptr %struct.MFace, ptr %3386, i64 0, i32 3
  %3419 = getelementptr %struct.MFace, ptr %3386, i64 0, i32 3
  %3420 = getelementptr %struct.MFace, ptr %3386, i64 0, i32 3
  %3421 = getelementptr %struct.MFace, ptr %3386, i64 0, i32 3
  %3422 = getelementptr %struct.MFace, ptr %3386, i64 0, i32 3
  %3423 = getelementptr %struct.MFace, ptr %3386, i64 0, i32 3
  %3424 = getelementptr %struct.MFace, ptr %3386, i64 0, i32 3
  %3425 = getelementptr %struct.MFace, ptr %3386, i64 0, i32 3
  %3426 = getelementptr %struct.MFace, ptr %3386, i64 0, i32 3
  %3427 = getelementptr %struct.MFace, ptr %3386, i64 0, i32 3
  br label %3428

3428:                                             ; preds = %3428, %3402
  %3429 = phi i64 [ 0, %3402 ], [ %3525, %3428 ]
  %3430 = phi <4 x i32> [ zeroinitializer, %3402 ], [ %3521, %3428 ]
  %3431 = phi <4 x i32> [ zeroinitializer, %3402 ], [ %3522, %3428 ]
  %3432 = phi <4 x i32> [ zeroinitializer, %3402 ], [ %3523, %3428 ]
  %3433 = phi <4 x i32> [ zeroinitializer, %3402 ], [ %3524, %3428 ]
  %3434 = mul i64 %3429, 20
  %3435 = mul i64 %3429, 20
  %3436 = or i64 %3435, 20
  %3437 = mul i64 %3429, 20
  %3438 = or i64 %3437, 40
  %3439 = mul i64 %3429, 20
  %3440 = or i64 %3439, 60
  %3441 = mul i64 %3429, 20
  %3442 = add i64 %3441, 80
  %3443 = mul i64 %3429, 20
  %3444 = add i64 %3443, 100
  %3445 = mul i64 %3429, 20
  %3446 = add i64 %3445, 120
  %3447 = mul i64 %3429, 20
  %3448 = add i64 %3447, 140
  %3449 = mul i64 %3429, 20
  %3450 = add i64 %3449, 160
  %3451 = mul i64 %3429, 20
  %3452 = add i64 %3451, 180
  %3453 = mul i64 %3429, 20
  %3454 = add i64 %3453, 200
  %3455 = mul i64 %3429, 20
  %3456 = add i64 %3455, 220
  %3457 = mul i64 %3429, 20
  %3458 = add i64 %3457, 240
  %3459 = mul i64 %3429, 20
  %3460 = add i64 %3459, 260
  %3461 = mul i64 %3429, 20
  %3462 = add i64 %3461, 280
  %3463 = mul i64 %3429, 20
  %3464 = add i64 %3463, 300
  %3465 = getelementptr i8, ptr %3412, i64 %3434
  %3466 = getelementptr i8, ptr %3413, i64 %3436
  %3467 = getelementptr i8, ptr %3414, i64 %3438
  %3468 = getelementptr i8, ptr %3415, i64 %3440
  %3469 = getelementptr i8, ptr %3416, i64 %3442
  %3470 = getelementptr i8, ptr %3417, i64 %3444
  %3471 = getelementptr i8, ptr %3418, i64 %3446
  %3472 = getelementptr i8, ptr %3419, i64 %3448
  %3473 = getelementptr i8, ptr %3420, i64 %3450
  %3474 = getelementptr i8, ptr %3421, i64 %3452
  %3475 = getelementptr i8, ptr %3422, i64 %3454
  %3476 = getelementptr i8, ptr %3423, i64 %3456
  %3477 = getelementptr i8, ptr %3424, i64 %3458
  %3478 = getelementptr i8, ptr %3425, i64 %3460
  %3479 = getelementptr i8, ptr %3426, i64 %3462
  %3480 = getelementptr i8, ptr %3427, i64 %3464
  %3481 = load i32, ptr %3465, align 4, !tbaa !555
  %3482 = load i32, ptr %3466, align 4, !tbaa !555
  %3483 = load i32, ptr %3467, align 4, !tbaa !555
  %3484 = load i32, ptr %3468, align 4, !tbaa !555
  %3485 = insertelement <4 x i32> poison, i32 %3481, i64 0
  %3486 = insertelement <4 x i32> %3485, i32 %3482, i64 1
  %3487 = insertelement <4 x i32> %3486, i32 %3483, i64 2
  %3488 = insertelement <4 x i32> %3487, i32 %3484, i64 3
  %3489 = load i32, ptr %3469, align 4, !tbaa !555
  %3490 = load i32, ptr %3470, align 4, !tbaa !555
  %3491 = load i32, ptr %3471, align 4, !tbaa !555
  %3492 = load i32, ptr %3472, align 4, !tbaa !555
  %3493 = insertelement <4 x i32> poison, i32 %3489, i64 0
  %3494 = insertelement <4 x i32> %3493, i32 %3490, i64 1
  %3495 = insertelement <4 x i32> %3494, i32 %3491, i64 2
  %3496 = insertelement <4 x i32> %3495, i32 %3492, i64 3
  %3497 = load i32, ptr %3473, align 4, !tbaa !555
  %3498 = load i32, ptr %3474, align 4, !tbaa !555
  %3499 = load i32, ptr %3475, align 4, !tbaa !555
  %3500 = load i32, ptr %3476, align 4, !tbaa !555
  %3501 = insertelement <4 x i32> poison, i32 %3497, i64 0
  %3502 = insertelement <4 x i32> %3501, i32 %3498, i64 1
  %3503 = insertelement <4 x i32> %3502, i32 %3499, i64 2
  %3504 = insertelement <4 x i32> %3503, i32 %3500, i64 3
  %3505 = load i32, ptr %3477, align 4, !tbaa !555
  %3506 = load i32, ptr %3478, align 4, !tbaa !555
  %3507 = load i32, ptr %3479, align 4, !tbaa !555
  %3508 = load i32, ptr %3480, align 4, !tbaa !555
  %3509 = insertelement <4 x i32> poison, i32 %3505, i64 0
  %3510 = insertelement <4 x i32> %3509, i32 %3506, i64 1
  %3511 = insertelement <4 x i32> %3510, i32 %3507, i64 2
  %3512 = insertelement <4 x i32> %3511, i32 %3508, i64 3
  %3513 = icmp eq <4 x i32> %3488, zeroinitializer
  %3514 = icmp eq <4 x i32> %3496, zeroinitializer
  %3515 = icmp eq <4 x i32> %3504, zeroinitializer
  %3516 = icmp eq <4 x i32> %3512, zeroinitializer
  %3517 = select <4 x i1> %3513, <4 x i32> <i32 3, i32 3, i32 3, i32 3>, <4 x i32> <i32 4, i32 4, i32 4, i32 4>
  %3518 = select <4 x i1> %3514, <4 x i32> <i32 3, i32 3, i32 3, i32 3>, <4 x i32> <i32 4, i32 4, i32 4, i32 4>
  %3519 = select <4 x i1> %3515, <4 x i32> <i32 3, i32 3, i32 3, i32 3>, <4 x i32> <i32 4, i32 4, i32 4, i32 4>
  %3520 = select <4 x i1> %3516, <4 x i32> <i32 3, i32 3, i32 3, i32 3>, <4 x i32> <i32 4, i32 4, i32 4, i32 4>
  %3521 = add <4 x i32> %3517, %3430
  %3522 = add <4 x i32> %3518, %3431
  %3523 = add <4 x i32> %3519, %3432
  %3524 = add <4 x i32> %3520, %3433
  %3525 = add nuw i64 %3429, 16
  %3526 = icmp eq i64 %3525, %3407
  br i1 %3526, label %3527, label %3428, !llvm.loop !574

3527:                                             ; preds = %3428
  %3528 = add <4 x i32> %3522, %3521
  %3529 = add <4 x i32> %3523, %3528
  %3530 = add <4 x i32> %3524, %3529
  %3531 = call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %3530)
  br label %3532

3532:                                             ; preds = %3400, %3527
  %3533 = phi i32 [ 0, %3400 ], [ %3531, %3527 ]
  %3534 = phi i32 [ %3389, %3400 ], [ %3409, %3527 ]
  %3535 = phi ptr [ %3386, %3400 ], [ %3411, %3527 ]
  br label %3536

3536:                                             ; preds = %3532, %3536
  %3537 = phi i32 [ %3544, %3536 ], [ %3533, %3532 ]
  %3538 = phi i32 [ %3545, %3536 ], [ %3534, %3532 ]
  %3539 = phi ptr [ %3546, %3536 ], [ %3535, %3532 ]
  %3540 = getelementptr inbounds %struct.MFace, ptr %3539, i64 0, i32 3
  %3541 = load i32, ptr %3540, align 4, !tbaa !555
  %3542 = icmp eq i32 %3541, 0
  %3543 = select i1 %3542, i32 3, i32 4
  %3544 = add nuw nsw i32 %3543, %3537
  %3545 = add nsw i32 %3538, -1
  %3546 = getelementptr inbounds %struct.MFace, ptr %3539, i64 1
  %3547 = icmp ugt i32 %3538, 1
  br i1 %3547, label %3536, label %3548, !llvm.loop !575

3548:                                             ; preds = %3536
  %3549 = load ptr, ptr @MEM_callocN, align 8, !tbaa !16
  %3550 = zext i32 %3544 to i64
  %3551 = mul nuw nsw i64 %3550, 20
  %3552 = call ptr %3549(i64 noundef %3551, ptr noundef nonnull @.str.20) #16
  br label %3553

3553:                                             ; preds = %3600, %3548
  %3554 = phi i32 [ %3608, %3600 ], [ 0, %3548 ]
  %3555 = phi ptr [ %3609, %3600 ], [ %3386, %3548 ]
  %3556 = phi ptr [ %3603, %3600 ], [ %3552, %3548 ]
  %3557 = getelementptr inbounds %struct.edgesort, ptr %3556, i64 1
  %3558 = load i32, ptr %3555, align 4, !tbaa !560
  %3559 = getelementptr inbounds %struct.MFace, ptr %3555, i64 0, i32 1
  %3560 = load i32, ptr %3559, align 4, !tbaa !554
  %3561 = icmp ugt i32 %3558, %3560
  %3562 = select i1 %3561, i32 %3558, i32 %3560
  %3563 = select i1 %3561, i32 %3560, i32 %3558
  %3564 = select i1 %3561, <2 x i32> <i32 1, i32 0>, <2 x i32> <i32 0, i32 1>
  store i32 %3563, ptr %3556, align 4, !tbaa !576
  %3565 = getelementptr inbounds %struct.edgesort, ptr %3556, i64 0, i32 1
  store i32 %3562, ptr %3565, align 4, !tbaa !578
  %3566 = getelementptr inbounds %struct.edgesort, ptr %3556, i64 0, i32 3
  store <2 x i32> %3564, ptr %3566, align 4, !tbaa !47
  %3567 = getelementptr inbounds %struct.edgesort, ptr %3556, i64 0, i32 2
  store i32 %3554, ptr %3567, align 4, !tbaa !579
  %3568 = getelementptr inbounds %struct.edgesort, ptr %3556, i64 2
  %3569 = getelementptr inbounds %struct.MFace, ptr %3555, i64 0, i32 2
  %3570 = load i32, ptr %3569, align 4, !tbaa !559
  %3571 = icmp ugt i32 %3560, %3570
  %3572 = select i1 %3571, i32 %3560, i32 %3570
  %3573 = select i1 %3571, i32 %3570, i32 %3560
  %3574 = select i1 %3571, <2 x i32> <i32 2, i32 1>, <2 x i32> <i32 1, i32 2>
  store i32 %3573, ptr %3557, align 4, !tbaa !576
  %3575 = getelementptr inbounds %struct.edgesort, ptr %3556, i64 1, i32 1
  store i32 %3572, ptr %3575, align 4, !tbaa !578
  %3576 = getelementptr inbounds %struct.edgesort, ptr %3556, i64 1, i32 3
  store <2 x i32> %3574, ptr %3576, align 4, !tbaa !47
  %3577 = getelementptr inbounds %struct.edgesort, ptr %3556, i64 1, i32 2
  store i32 %3554, ptr %3577, align 4, !tbaa !579
  %3578 = getelementptr inbounds %struct.MFace, ptr %3555, i64 0, i32 3
  %3579 = load i32, ptr %3578, align 4, !tbaa !555
  %3580 = icmp eq i32 %3579, 0
  %3581 = getelementptr inbounds %struct.edgesort, ptr %3556, i64 3
  br i1 %3580, label %3595, label %3582

3582:                                             ; preds = %3553
  %3583 = icmp ugt i32 %3570, %3579
  %3584 = select i1 %3583, i32 %3570, i32 %3579
  %3585 = select i1 %3583, i32 %3579, i32 %3570
  %3586 = select i1 %3583, <2 x i32> <i32 3, i32 2>, <2 x i32> <i32 2, i32 3>
  store i32 %3585, ptr %3568, align 4, !tbaa !576
  %3587 = getelementptr inbounds %struct.edgesort, ptr %3556, i64 2, i32 1
  store i32 %3584, ptr %3587, align 4, !tbaa !578
  %3588 = getelementptr inbounds %struct.edgesort, ptr %3556, i64 2, i32 3
  store <2 x i32> %3586, ptr %3588, align 4, !tbaa !47
  %3589 = getelementptr inbounds %struct.edgesort, ptr %3556, i64 2, i32 2
  store i32 %3554, ptr %3589, align 4, !tbaa !579
  %3590 = getelementptr inbounds %struct.edgesort, ptr %3556, i64 4
  %3591 = icmp ugt i32 %3579, %3558
  %3592 = select i1 %3591, i32 %3579, i32 %3558
  %3593 = select i1 %3591, i32 %3558, i32 %3579
  %3594 = select i1 %3591, <2 x i32> <i32 0, i32 3>, <2 x i32> <i32 3, i32 0>
  store i32 %3593, ptr %3581, align 4, !tbaa !576
  br label %3600

3595:                                             ; preds = %3553
  %3596 = icmp ugt i32 %3570, %3558
  %3597 = select i1 %3596, i32 %3570, i32 %3558
  %3598 = select i1 %3596, i32 %3558, i32 %3570
  %3599 = select i1 %3596, <2 x i32> <i32 3, i32 2>, <2 x i32> <i32 2, i32 3>
  store i32 %3598, ptr %3568, align 4, !tbaa !576
  br label %3600

3600:                                             ; preds = %3595, %3582
  %3601 = phi i64 [ 3, %3582 ], [ 2, %3595 ]
  %3602 = phi i32 [ %3592, %3582 ], [ %3597, %3595 ]
  %3603 = phi ptr [ %3590, %3582 ], [ %3581, %3595 ]
  %3604 = phi <2 x i32> [ %3594, %3582 ], [ %3599, %3595 ]
  %3605 = getelementptr inbounds %struct.edgesort, ptr %3556, i64 %3601, i32 1
  store i32 %3602, ptr %3605, align 4, !tbaa !578
  %3606 = getelementptr inbounds %struct.edgesort, ptr %3556, i64 %3601, i32 3
  store <2 x i32> %3604, ptr %3606, align 4, !tbaa !47
  %3607 = getelementptr inbounds %struct.edgesort, ptr %3556, i64 %3601, i32 2
  store i32 %3554, ptr %3607, align 4, !tbaa !579
  %3608 = add nuw nsw i32 %3554, 1
  %3609 = getelementptr inbounds %struct.MFace, ptr %3555, i64 1
  %3610 = icmp eq i32 %3608, %3389
  br i1 %3610, label %3611, label %3553, !llvm.loop !580

3611:                                             ; preds = %3600
  call void @qsort(ptr noundef %3552, i64 noundef %3550, i64 noundef 20, ptr noundef nonnull @vergedgesort) #16
  br label %3612

3612:                                             ; preds = %3611, %3380
  %3613 = phi i32 [ 0, %3380 ], [ %3544, %3611 ]
  %3614 = phi ptr [ null, %3380 ], [ %3552, %3611 ]
  %3615 = icmp sgt i32 %3371, 0
  br i1 %3615, label %3616, label %3830

3616:                                             ; preds = %3612
  %3617 = getelementptr inbounds %struct.ObjectRen, ptr %1, i64 0, i32 11
  %3618 = icmp eq ptr %3614, null
  %3619 = icmp eq i32 %3613, 0
  %3620 = sext i32 %3613 to i64
  %3621 = getelementptr inbounds %struct.DerivedMesh, ptr %2409, i64 0, i32 2, i32 2
  %3622 = getelementptr inbounds [3 x float], ptr %18, i64 0, i64 1
  %3623 = getelementptr inbounds [3 x float], ptr %18, i64 0, i64 2
  %3624 = getelementptr inbounds [3 x [3 x float]], ptr %18, i64 0, i64 1
  %3625 = getelementptr inbounds [3 x [3 x float]], ptr %18, i64 0, i64 1, i64 1
  %3626 = getelementptr inbounds [3 x [3 x float]], ptr %18, i64 0, i64 1, i64 2
  %3627 = getelementptr inbounds [3 x [3 x float]], ptr %18, i64 0, i64 2
  %3628 = getelementptr inbounds [3 x [3 x float]], ptr %18, i64 0, i64 2, i64 1
  br label %3629

3629:                                             ; preds = %3826, %3616
  %3630 = phi ptr [ %3383, %3616 ], [ %3828, %3826 ]
  %3631 = phi i32 [ 0, %3616 ], [ %3827, %3826 ]
  %3632 = getelementptr inbounds %struct.MEdge, ptr %3630, i64 0, i32 4
  %3633 = load i16, ptr %3632, align 2, !tbaa !581
  %3634 = and i16 %3633, 32
  %3635 = icmp eq i16 %3634, 0
  br i1 %3635, label %3826, label %3636

3636:                                             ; preds = %3629
  %3637 = load i32, ptr %3630, align 4, !tbaa !583
  %3638 = zext i32 %3637 to i64
  %3639 = getelementptr %struct.MEdge, ptr %3630, i64 0, i32 1
  %3640 = load i32, ptr %3639, align 4, !tbaa !584
  %3641 = zext i32 %3640 to i64
  %3642 = load i32, ptr %3617, align 4, !tbaa !499
  %3643 = add nsw i32 %3642, 1
  store i32 %3643, ptr %3617, align 4, !tbaa !499
  %3644 = call ptr @RE_findOrAddVlak(ptr noundef %1, i32 noundef %3642) #16
  %3645 = load i32, ptr %3630, align 4, !tbaa !583
  %3646 = add i32 %3645, %2673
  %3647 = call ptr @RE_findOrAddVert(ptr noundef %1, i32 noundef %3646) #16
  store ptr %3647, ptr %3644, align 8, !tbaa !502
  %3648 = load i32, ptr %3639, align 4, !tbaa !584
  %3649 = add i32 %3648, %2673
  %3650 = call ptr @RE_findOrAddVert(ptr noundef %1, i32 noundef %3649) #16
  %3651 = getelementptr inbounds %struct.VlakRen, ptr %3644, i64 0, i32 1
  store ptr %3650, ptr %3651, align 8, !tbaa !504
  %3652 = getelementptr inbounds %struct.VlakRen, ptr %3644, i64 0, i32 2
  store ptr %3650, ptr %3652, align 8, !tbaa !505
  %3653 = getelementptr inbounds %struct.VlakRen, ptr %3644, i64 0, i32 3
  store ptr null, ptr %3653, align 8, !tbaa !506
  br i1 %3618, label %3754, label %3654

3654:                                             ; preds = %3636
  %3655 = load i32, ptr %3630, align 4, !tbaa !583
  %3656 = load i32, ptr %3639, align 4, !tbaa !584
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %14) #16
  %3657 = call i32 @llvm.umax.i32(i32 %3655, i32 %3656)
  %3658 = call i32 @llvm.umin.i32(i32 %3655, i32 %3656)
  br i1 %3619, label %3753, label %3659

3659:                                             ; preds = %3654, %3685
  %3660 = phi i64 [ %3687, %3685 ], [ 0, %3654 ]
  %3661 = phi i64 [ %3686, %3685 ], [ %3620, %3654 ]
  %3662 = add i64 %3661, %3660
  %3663 = lshr i64 %3662, 1
  %3664 = mul i64 %3663, 20
  %3665 = getelementptr inbounds i8, ptr %3614, i64 %3664
  %3666 = load i32, ptr %3665, align 4, !tbaa !576
  %3667 = icmp ugt i32 %3658, %3666
  br i1 %3667, label %3683, label %3668

3668:                                             ; preds = %3659
  %3669 = icmp ult i32 %3658, %3666
  br i1 %3669, label %3685, label %3670

3670:                                             ; preds = %3668
  %3671 = getelementptr inbounds %struct.edgesort, ptr %3665, i64 0, i32 1
  %3672 = load i32, ptr %3671, align 4, !tbaa !578
  %3673 = icmp ugt i32 %3657, %3672
  br i1 %3673, label %3683, label %3674

3674:                                             ; preds = %3670
  %3675 = icmp ult i32 %3657, %3672
  br i1 %3675, label %3685, label %3676

3676:                                             ; preds = %3674
  %3677 = load i32, ptr %3621, align 4, !tbaa !561
  %3678 = icmp sgt i32 %3677, 0
  br i1 %3678, label %3679, label %3753

3679:                                             ; preds = %3676
  %3680 = getelementptr inbounds %struct.edgesort, ptr %3665, i64 0, i32 2
  %3681 = getelementptr inbounds %struct.edgesort, ptr %3665, i64 0, i32 3
  %3682 = getelementptr inbounds %struct.edgesort, ptr %3665, i64 0, i32 4
  br label %3689

3683:                                             ; preds = %3670, %3659
  %3684 = add nuw i64 %3663, 1
  br label %3685

3685:                                             ; preds = %3683, %3674, %3668
  %3686 = phi i64 [ %3661, %3683 ], [ %3663, %3674 ], [ %3663, %3668 ]
  %3687 = phi i64 [ %3684, %3683 ], [ %3660, %3674 ], [ %3660, %3668 ]
  %3688 = icmp ult i64 %3687, %3686
  br i1 %3688, label %3659, label %3753, !llvm.loop !585

3689:                                             ; preds = %3746, %3679
  %3690 = phi i64 [ 0, %3679 ], [ %3749, %3746 ]
  %3691 = phi i32 [ 0, %3679 ], [ %3748, %3746 ]
  %3692 = phi i32 [ 0, %3679 ], [ %3747, %3746 ]
  %3693 = load ptr, ptr %2664, align 8, !tbaa !562
  %3694 = getelementptr inbounds %struct.CustomDataLayer, ptr %3693, i64 %3690
  %3695 = getelementptr inbounds %struct.CustomDataLayer, ptr %3693, i64 %3690, i32 8
  store ptr %3695, ptr %14, align 8, !tbaa !16
  %3696 = load i32, ptr %3694, align 8, !tbaa !563
  %3697 = icmp eq i32 %3696, 5
  %3698 = icmp slt i32 %3692, 8
  %3699 = select i1 %3697, i1 %3698, i1 false
  br i1 %3699, label %3700, label %3722

3700:                                             ; preds = %3689
  %3701 = getelementptr inbounds %struct.CustomDataLayer, ptr %3693, i64 %3690, i32 9
  %3702 = load ptr, ptr %3701, align 8, !tbaa !565
  %3703 = load i32, ptr %3680, align 4, !tbaa !579
  %3704 = sext i32 %3703 to i64
  %3705 = getelementptr inbounds %struct.MTFace, ptr %3702, i64 %3704
  %3706 = add nsw i32 %3692, 1
  %3707 = call ptr @RE_vlakren_get_tface(ptr noundef %1, ptr noundef nonnull %3644, i32 noundef %3692, ptr noundef nonnull %14, i32 noundef 1) #16
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %3707, ptr noundef nonnull align 8 dereferenceable(48) %3705, i64 48, i1 false), !tbaa.struct !566
  %3708 = load i32, ptr %3681, align 4, !tbaa !586
  %3709 = zext i32 %3708 to i64
  %3710 = getelementptr inbounds [4 x [2 x float]], ptr %3705, i64 0, i64 %3709
  %3711 = load i64, ptr %3710, align 8
  store i64 %3711, ptr %3707, align 8
  %3712 = getelementptr inbounds [4 x [2 x float]], ptr %3707, i64 0, i64 1
  %3713 = load i32, ptr %3682, align 4, !tbaa !587
  %3714 = zext i32 %3713 to i64
  %3715 = getelementptr inbounds [4 x [2 x float]], ptr %3705, i64 0, i64 %3714
  %3716 = load i64, ptr %3715, align 8
  store i64 %3716, ptr %3712, align 8
  %3717 = getelementptr inbounds [4 x [2 x float]], ptr %3707, i64 0, i64 2
  %3718 = getelementptr inbounds [4 x [2 x float]], ptr %3705, i64 0, i64 1
  %3719 = load i64, ptr %3718, align 8
  store i64 %3719, ptr %3717, align 8
  %3720 = getelementptr inbounds [4 x [2 x float]], ptr %3707, i64 0, i64 3
  %3721 = load i64, ptr %3718, align 8
  store i64 %3721, ptr %3720, align 8
  br label %3746

3722:                                             ; preds = %3689
  %3723 = icmp eq i32 %3696, 6
  %3724 = icmp slt i32 %3691, 8
  %3725 = select i1 %3723, i1 %3724, i1 false
  br i1 %3725, label %3726, label %3746

3726:                                             ; preds = %3722
  %3727 = getelementptr inbounds %struct.CustomDataLayer, ptr %3693, i64 %3690, i32 9
  %3728 = load ptr, ptr %3727, align 8, !tbaa !565
  %3729 = load i32, ptr %3680, align 4, !tbaa !579
  %3730 = shl nsw i32 %3729, 2
  %3731 = sext i32 %3730 to i64
  %3732 = getelementptr inbounds %struct.MCol, ptr %3728, i64 %3731
  %3733 = add nsw i32 %3691, 1
  %3734 = call ptr @RE_vlakren_get_mcol(ptr noundef %1, ptr noundef nonnull %3644, i32 noundef %3691, ptr noundef nonnull %14, i32 noundef 1) #16
  %3735 = load i32, ptr %3681, align 4, !tbaa !586
  %3736 = zext i32 %3735 to i64
  %3737 = getelementptr inbounds %struct.MCol, ptr %3732, i64 %3736
  %3738 = load i32, ptr %3737, align 1
  store i32 %3738, ptr %3734, align 1
  %3739 = getelementptr inbounds %struct.MCol, ptr %3734, i64 1
  %3740 = getelementptr inbounds %struct.MCol, ptr %3734, i64 2
  %3741 = getelementptr inbounds %struct.MCol, ptr %3734, i64 3
  %3742 = load i32, ptr %3682, align 4, !tbaa !587
  %3743 = zext i32 %3742 to i64
  %3744 = getelementptr inbounds %struct.MCol, ptr %3732, i64 %3743
  %3745 = load i32, ptr %3744, align 1
  store i32 %3745, ptr %3741, align 1
  store i32 %3745, ptr %3740, align 1
  store i32 %3745, ptr %3739, align 1
  br label %3746

3746:                                             ; preds = %3726, %3722, %3700
  %3747 = phi i32 [ %3706, %3700 ], [ %3692, %3726 ], [ %3692, %3722 ]
  %3748 = phi i32 [ %3691, %3700 ], [ %3733, %3726 ], [ %3691, %3722 ]
  %3749 = add nuw nsw i64 %3690, 1
  %3750 = load i32, ptr %3621, align 4, !tbaa !561
  %3751 = sext i32 %3750 to i64
  %3752 = icmp slt i64 %3749, %3751
  br i1 %3752, label %3689, label %3753, !llvm.loop !588

3753:                                             ; preds = %3685, %3746, %3676, %3654
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %14) #16
  br label %3754

3754:                                             ; preds = %3753, %3636
  %3755 = getelementptr inbounds %struct.MVert, ptr %3373, i64 %3638, i32 1
  %3756 = getelementptr inbounds %struct.MVert, ptr %3373, i64 %3641, i32 1
  %3757 = getelementptr inbounds %struct.MVert, ptr %3373, i64 %3638, i32 1, i64 2
  %3758 = load i16, ptr %3757, align 4, !tbaa !46
  %3759 = sext i16 %3758 to i32
  %3760 = getelementptr inbounds %struct.MVert, ptr %3373, i64 %3641, i32 1, i64 2
  %3761 = load i16, ptr %3760, align 4, !tbaa !46
  %3762 = sext i16 %3761 to i32
  %3763 = add nsw i32 %3759, %3762
  %3764 = sub nsw i32 0, %3763
  %3765 = sitofp i32 %3764 to float
  %3766 = load <4 x float>, ptr %18, align 16
  %3767 = shufflevector <4 x float> %3766, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %3768 = load <4 x float>, ptr %3622, align 4
  %3769 = shufflevector <4 x float> %3768, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %3770 = load <4 x float>, ptr %3623, align 8
  %3771 = shufflevector <4 x float> %3770, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %3772 = getelementptr inbounds %struct.VlakRen, ptr %3644, i64 0, i32 4
  %3773 = load float, ptr %3624, align 4, !tbaa !13
  %3774 = load float, ptr %3625, align 16, !tbaa !13
  %3775 = load float, ptr %3626, align 4, !tbaa !13
  %3776 = load <2 x i16>, ptr %3755, align 4, !tbaa !46
  %3777 = sext <2 x i16> %3776 to <2 x i32>
  %3778 = load <2 x i16>, ptr %3756, align 4, !tbaa !46
  %3779 = sext <2 x i16> %3778 to <2 x i32>
  %3780 = add nsw <2 x i32> %3777, %3779
  %3781 = sub nsw <2 x i32> zeroinitializer, %3780
  %3782 = sitofp <2 x i32> %3781 to <2 x float>
  %3783 = insertelement <2 x float> %3769, float %3773, i64 1
  %3784 = shufflevector <2 x float> %3782, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %3785 = fmul fast <2 x float> %3783, %3784
  %3786 = insertelement <2 x float> %3767, float %3774, i64 1
  %3787 = fmul fast <2 x float> %3786, %3782
  %3788 = fadd fast <2 x float> %3787, %3785
  %3789 = insertelement <2 x float> %3771, float %3775, i64 1
  %3790 = insertelement <2 x float> poison, float %3765, i64 0
  %3791 = shufflevector <2 x float> %3790, <2 x float> poison, <2 x i32> zeroinitializer
  %3792 = fmul fast <2 x float> %3789, %3791
  %3793 = fadd fast <2 x float> %3788, %3792
  %3794 = extractelement <2 x float> %3793, i64 0
  store float %3794, ptr %3772, align 8, !tbaa !13
  %3795 = load float, ptr %3627, align 8, !tbaa !13
  %3796 = extractelement <2 x float> %3782, i64 0
  %3797 = fmul fast float %3795, %3796
  %3798 = load <2 x float>, ptr %3628, align 4, !tbaa !13
  %3799 = insertelement <2 x float> %3784, float %3765, i64 1
  %3800 = fmul fast <2 x float> %3798, %3799
  %3801 = extractelement <2 x float> %3800, i64 0
  %3802 = fadd fast float %3801, %3797
  %3803 = extractelement <2 x float> %3800, i64 1
  %3804 = fadd fast float %3802, %3803
  %3805 = getelementptr inbounds %struct.VlakRen, ptr %3644, i64 0, i32 4, i64 2
  %3806 = fmul fast <2 x float> %3793, %3793
  %3807 = shufflevector <2 x float> %3806, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %3808 = fadd fast <2 x float> %3807, %3806
  %3809 = extractelement <2 x float> %3808, i64 0
  %3810 = fmul fast float %3804, %3804
  %3811 = fadd fast float %3809, %3810
  %3812 = fcmp fast ogt float %3811, 0x38AA95A5C0000000
  br i1 %3812, label %3813, label %3820

3813:                                             ; preds = %3754
  %3814 = call fast float @llvm.sqrt.f32(float %3811)
  %3815 = fdiv fast float 1.000000e+00, %3814
  %3816 = insertelement <2 x float> poison, float %3815, i64 0
  %3817 = shufflevector <2 x float> %3816, <2 x float> poison, <2 x i32> zeroinitializer
  %3818 = fmul fast <2 x float> %3817, %3793
  %3819 = fmul fast float %3815, %3804
  br label %3820

3820:                                             ; preds = %3813, %3754
  %3821 = phi float [ %3819, %3813 ], [ 0.000000e+00, %3754 ]
  %3822 = phi <2 x float> [ %3818, %3813 ], [ zeroinitializer, %3754 ]
  store <2 x float> %3822, ptr %3772, align 4
  store float %3821, ptr %3805, align 4
  %3823 = getelementptr inbounds %struct.VlakRen, ptr %3644, i64 0, i32 5
  store ptr %3374, ptr %3823, align 8, !tbaa !507
  %3824 = getelementptr inbounds %struct.VlakRen, ptr %3644, i64 0, i32 7
  store i8 0, ptr %3824, align 1, !tbaa !508
  %3825 = getelementptr inbounds %struct.VlakRen, ptr %3644, i64 0, i32 8
  store i8 1, ptr %3825, align 2, !tbaa !509
  br label %3826

3826:                                             ; preds = %3820, %3629
  %3827 = add nuw nsw i32 %3631, 1
  %3828 = getelementptr inbounds %struct.MEdge, ptr %3630, i64 1
  %3829 = icmp eq i32 %3827, %3371
  br i1 %3829, label %3830, label %3629, !llvm.loop !589

3830:                                             ; preds = %3826, %3612
  %3831 = icmp eq ptr %3614, null
  br i1 %3831, label %3834, label %3832

3832:                                             ; preds = %3830
  %3833 = load ptr, ptr @MEM_freeN, align 8, !tbaa !16
  call void %3833(ptr noundef nonnull %3614) #16
  br label %3834

3834:                                             ; preds = %3832, %3830, %3376, %3367, %2584
  %3835 = phi i32 [ 0, %2584 ], [ 0, %3376 ], [ 0, %3367 ], [ 1, %3832 ], [ 1, %3830 ]
  %3836 = phi ptr [ null, %2584 ], [ %3368, %3376 ], [ %3368, %3367 ], [ %3368, %3832 ], [ %3368, %3830 ]
  br i1 %2393, label %3837, label %4393

3837:                                             ; preds = %3834
  %3838 = icmp eq i8 %2339, 0
  br i1 %3838, label %4250, label %3839

3839:                                             ; preds = %3837
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %12) #16
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %13) #16
  %3840 = getelementptr inbounds %struct.ObjectRen, ptr %1, i64 0, i32 10
  %3841 = load i32, ptr %3840, align 8, !tbaa !177
  %3842 = icmp eq i32 %3841, 0
  br i1 %3842, label %4249, label %3843

3843:                                             ; preds = %3839
  call void @BKE_mesh_texspace_get(ptr noundef %2280, ptr noundef nonnull %12, ptr noundef null, ptr noundef nonnull %13) #16
  %3844 = load ptr, ptr @MEM_callocN, align 8, !tbaa !16
  %3845 = load i32, ptr %3840, align 8, !tbaa !177
  %3846 = sext i32 %3845 to i64
  %3847 = shl nsw i64 %3846, 3
  %3848 = call ptr %3844(i64 noundef %3847, ptr noundef nonnull @.str.21) #16
  %3849 = load i32, ptr %3840, align 8, !tbaa !177
  %3850 = icmp sgt i32 %3849, 0
  br i1 %3850, label %3851, label %3856

3851:                                             ; preds = %3843
  %3852 = getelementptr inbounds [3 x float], ptr %13, i64 0, i64 1
  %3853 = getelementptr inbounds [3 x float], ptr %12, i64 0, i64 1
  %3854 = getelementptr inbounds [3 x float], ptr %13, i64 0, i64 2
  %3855 = getelementptr inbounds [3 x float], ptr %12, i64 0, i64 2
  br label %3861

3856:                                             ; preds = %3885, %3843
  %3857 = phi i32 [ %3849, %3843 ], [ %3887, %3885 ]
  %3858 = getelementptr inbounds %struct.ObjectRen, ptr %1, i64 0, i32 11
  %3859 = load i32, ptr %3858, align 4, !tbaa !499
  %3860 = icmp sgt i32 %3859, 0
  br i1 %3860, label %3899, label %3891

3861:                                             ; preds = %3885, %3851
  %3862 = phi i32 [ 0, %3851 ], [ %3886, %3885 ]
  %3863 = call ptr @RE_findOrAddVert(ptr noundef nonnull %1, i32 noundef %3862) #16
  %3864 = getelementptr inbounds %struct.VertRen, ptr %3863, i64 0, i32 2
  %3865 = load ptr, ptr %3864, align 8, !tbaa !496
  %3866 = icmp eq ptr %3865, null
  br i1 %3866, label %3885, label %3867

3867:                                             ; preds = %3861
  %3868 = load float, ptr %3865, align 4, !tbaa !13
  %3869 = load float, ptr %13, align 4, !tbaa !13
  %3870 = fmul fast float %3869, %3868
  %3871 = load float, ptr %12, align 4, !tbaa !13
  %3872 = fadd fast float %3870, %3871
  store float %3872, ptr %3865, align 4, !tbaa !13
  %3873 = getelementptr inbounds float, ptr %3865, i64 1
  %3874 = load float, ptr %3873, align 4, !tbaa !13
  %3875 = load float, ptr %3852, align 4, !tbaa !13
  %3876 = fmul fast float %3875, %3874
  %3877 = load float, ptr %3853, align 4, !tbaa !13
  %3878 = fadd fast float %3876, %3877
  store float %3878, ptr %3873, align 4, !tbaa !13
  %3879 = getelementptr inbounds float, ptr %3865, i64 2
  %3880 = load float, ptr %3879, align 4, !tbaa !13
  %3881 = load float, ptr %3854, align 4, !tbaa !13
  %3882 = fmul fast float %3881, %3880
  %3883 = load float, ptr %3855, align 4, !tbaa !13
  %3884 = fadd fast float %3882, %3883
  store float %3884, ptr %3879, align 4, !tbaa !13
  br label %3885

3885:                                             ; preds = %3867, %3861
  %3886 = add nuw nsw i32 %3862, 1
  %3887 = load i32, ptr %3840, align 8, !tbaa !177
  %3888 = icmp slt i32 %3886, %3887
  br i1 %3888, label %3861, label %3856, !llvm.loop !590

3889:                                             ; preds = %4200
  %3890 = load i32, ptr %3840, align 8, !tbaa !177
  br label %3891

3891:                                             ; preds = %3889, %3856
  %3892 = phi i32 [ %3890, %3889 ], [ %3857, %3856 ]
  %3893 = icmp sgt i32 %3892, 0
  br i1 %3893, label %3894, label %4247

3894:                                             ; preds = %3891
  %3895 = getelementptr inbounds [3 x float], ptr %12, i64 0, i64 1
  %3896 = getelementptr inbounds [3 x float], ptr %13, i64 0, i64 1
  %3897 = getelementptr inbounds [3 x float], ptr %12, i64 0, i64 2
  %3898 = getelementptr inbounds [3 x float], ptr %13, i64 0, i64 2
  br label %4204

3899:                                             ; preds = %3856, %4200
  %3900 = phi i32 [ %4201, %4200 ], [ 0, %3856 ]
  %3901 = call ptr @RE_findOrAddVlak(ptr noundef nonnull %1, i32 noundef %3900) #16
  %3902 = load ptr, ptr %3901, align 8, !tbaa !502
  %3903 = getelementptr inbounds %struct.VertRen, ptr %3902, i64 0, i32 2
  %3904 = load ptr, ptr %3903, align 8, !tbaa !496
  %3905 = icmp eq ptr %3904, null
  br i1 %3905, label %4200, label %3906

3906:                                             ; preds = %3899
  %3907 = getelementptr inbounds %struct.VlakRen, ptr %3901, i64 0, i32 3
  %3908 = load ptr, ptr %3907, align 8, !tbaa !506
  %3909 = icmp eq ptr %3908, null
  br i1 %3909, label %4200, label %3910

3910:                                             ; preds = %3906
  %3911 = getelementptr inbounds %struct.VlakRen, ptr %3901, i64 0, i32 1
  %3912 = load ptr, ptr %3911, align 8, !tbaa !504
  %3913 = load float, ptr %3912, align 4, !tbaa !13
  %3914 = load float, ptr %3902, align 4, !tbaa !13
  %3915 = getelementptr inbounds float, ptr %3912, i64 1
  %3916 = load float, ptr %3915, align 4, !tbaa !13
  %3917 = getelementptr inbounds float, ptr %3902, i64 1
  %3918 = load float, ptr %3917, align 4, !tbaa !13
  %3919 = getelementptr inbounds float, ptr %3912, i64 2
  %3920 = load float, ptr %3919, align 4, !tbaa !13
  %3921 = getelementptr inbounds float, ptr %3902, i64 2
  %3922 = load float, ptr %3921, align 4, !tbaa !13
  %3923 = getelementptr inbounds %struct.VertRen, ptr %3912, i64 0, i32 2
  %3924 = load ptr, ptr %3923, align 8, !tbaa !496
  %3925 = load float, ptr %3924, align 4, !tbaa !13
  %3926 = load float, ptr %3904, align 4, !tbaa !13
  %3927 = getelementptr inbounds float, ptr %3924, i64 1
  %3928 = load float, ptr %3927, align 4, !tbaa !13
  %3929 = getelementptr inbounds float, ptr %3904, i64 1
  %3930 = load float, ptr %3929, align 4, !tbaa !13
  %3931 = getelementptr inbounds float, ptr %3924, i64 2
  %3932 = load float, ptr %3931, align 4, !tbaa !13
  %3933 = getelementptr inbounds float, ptr %3904, i64 2
  %3934 = load float, ptr %3933, align 4, !tbaa !13
  %3935 = insertelement <2 x float> poison, float %3913, i64 0
  %3936 = insertelement <2 x float> %3935, float %3925, i64 1
  %3937 = insertelement <2 x float> poison, float %3914, i64 0
  %3938 = insertelement <2 x float> %3937, float %3926, i64 1
  %3939 = fsub fast <2 x float> %3936, %3938
  %3940 = insertelement <2 x float> poison, float %3916, i64 0
  %3941 = insertelement <2 x float> %3940, float %3928, i64 1
  %3942 = insertelement <2 x float> poison, float %3918, i64 0
  %3943 = insertelement <2 x float> %3942, float %3930, i64 1
  %3944 = fsub fast <2 x float> %3941, %3943
  %3945 = insertelement <2 x float> poison, float %3920, i64 0
  %3946 = insertelement <2 x float> %3945, float %3932, i64 1
  %3947 = insertelement <2 x float> poison, float %3922, i64 0
  %3948 = insertelement <2 x float> %3947, float %3934, i64 1
  %3949 = fsub fast <2 x float> %3946, %3948
  %3950 = fmul fast <2 x float> %3939, %3939
  %3951 = fmul fast <2 x float> %3944, %3944
  %3952 = fadd fast <2 x float> %3951, %3950
  %3953 = fmul fast <2 x float> %3949, %3949
  %3954 = fadd fast <2 x float> %3952, %3953
  %3955 = call fast <2 x float> @llvm.sqrt.v2f32(<2 x float> %3954)
  %3956 = shufflevector <2 x float> %3955, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %3957 = fdiv fast <2 x float> %3955, %3956
  %3958 = getelementptr inbounds %struct.VertRen, ptr %3902, i64 0, i32 5
  %3959 = load i32, ptr %3958, align 8, !tbaa !591
  %3960 = shl nsw i32 %3959, 1
  %3961 = sext i32 %3960 to i64
  %3962 = getelementptr inbounds float, ptr %3848, i64 %3961
  %3963 = load <2 x float>, ptr %3962, align 4, !tbaa !13
  %3964 = insertelement <2 x float> %3957, float 1.000000e+00, i64 1
  %3965 = fadd fast <2 x float> %3964, %3963
  store <2 x float> %3965, ptr %3962, align 4, !tbaa !13
  %3966 = getelementptr inbounds %struct.VertRen, ptr %3912, i64 0, i32 5
  %3967 = load i32, ptr %3966, align 8, !tbaa !591
  %3968 = shl nsw i32 %3967, 1
  %3969 = sext i32 %3968 to i64
  %3970 = getelementptr inbounds float, ptr %3848, i64 %3969
  %3971 = load <2 x float>, ptr %3970, align 4, !tbaa !13
  %3972 = fadd fast <2 x float> %3971, %3964
  store <2 x float> %3972, ptr %3970, align 4, !tbaa !13
  %3973 = getelementptr inbounds %struct.VlakRen, ptr %3901, i64 0, i32 2
  %3974 = load ptr, ptr %3973, align 8, !tbaa !505
  %3975 = load float, ptr %3974, align 4, !tbaa !13
  %3976 = load float, ptr %3912, align 4, !tbaa !13
  %3977 = getelementptr inbounds float, ptr %3974, i64 1
  %3978 = load float, ptr %3977, align 4, !tbaa !13
  %3979 = load float, ptr %3915, align 4, !tbaa !13
  %3980 = getelementptr inbounds float, ptr %3974, i64 2
  %3981 = load float, ptr %3980, align 4, !tbaa !13
  %3982 = load float, ptr %3919, align 4, !tbaa !13
  %3983 = getelementptr inbounds %struct.VertRen, ptr %3974, i64 0, i32 2
  %3984 = load ptr, ptr %3983, align 8, !tbaa !496
  %3985 = load float, ptr %3984, align 4, !tbaa !13
  %3986 = load float, ptr %3924, align 4, !tbaa !13
  %3987 = getelementptr inbounds float, ptr %3984, i64 1
  %3988 = load float, ptr %3987, align 4, !tbaa !13
  %3989 = load float, ptr %3927, align 4, !tbaa !13
  %3990 = getelementptr inbounds float, ptr %3984, i64 2
  %3991 = load float, ptr %3990, align 4, !tbaa !13
  %3992 = load float, ptr %3931, align 4, !tbaa !13
  %3993 = insertelement <2 x float> poison, float %3975, i64 0
  %3994 = insertelement <2 x float> %3993, float %3985, i64 1
  %3995 = insertelement <2 x float> poison, float %3976, i64 0
  %3996 = insertelement <2 x float> %3995, float %3986, i64 1
  %3997 = fsub fast <2 x float> %3994, %3996
  %3998 = insertelement <2 x float> poison, float %3978, i64 0
  %3999 = insertelement <2 x float> %3998, float %3988, i64 1
  %4000 = insertelement <2 x float> poison, float %3979, i64 0
  %4001 = insertelement <2 x float> %4000, float %3989, i64 1
  %4002 = fsub fast <2 x float> %3999, %4001
  %4003 = insertelement <2 x float> poison, float %3981, i64 0
  %4004 = insertelement <2 x float> %4003, float %3991, i64 1
  %4005 = insertelement <2 x float> poison, float %3982, i64 0
  %4006 = insertelement <2 x float> %4005, float %3992, i64 1
  %4007 = fsub fast <2 x float> %4004, %4006
  %4008 = fmul fast <2 x float> %3997, %3997
  %4009 = fmul fast <2 x float> %4002, %4002
  %4010 = fadd fast <2 x float> %4009, %4008
  %4011 = fmul fast <2 x float> %4007, %4007
  %4012 = fadd fast <2 x float> %4010, %4011
  %4013 = call fast <2 x float> @llvm.sqrt.v2f32(<2 x float> %4012)
  %4014 = shufflevector <2 x float> %4013, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %4015 = fdiv fast <2 x float> %4013, %4014
  %4016 = shufflevector <2 x float> %4015, <2 x float> %3971, <2 x i32> <i32 0, i32 3>
  %4017 = insertelement <2 x float> %3972, float 2.000000e+00, i64 1
  %4018 = fadd fast <2 x float> %4016, %4017
  store <2 x float> %4018, ptr %3970, align 4, !tbaa !13
  %4019 = getelementptr inbounds %struct.VertRen, ptr %3974, i64 0, i32 5
  %4020 = load i32, ptr %4019, align 8, !tbaa !591
  %4021 = shl nsw i32 %4020, 1
  %4022 = sext i32 %4021 to i64
  %4023 = getelementptr inbounds float, ptr %3848, i64 %4022
  %4024 = load <2 x float>, ptr %4023, align 4, !tbaa !13
  %4025 = insertelement <2 x float> %4015, float 1.000000e+00, i64 1
  %4026 = fadd fast <2 x float> %4025, %4024
  store <2 x float> %4026, ptr %4023, align 4, !tbaa !13
  %4027 = load float, ptr %3902, align 4, !tbaa !13
  %4028 = load float, ptr %3974, align 4, !tbaa !13
  %4029 = load float, ptr %3917, align 4, !tbaa !13
  %4030 = load float, ptr %3977, align 4, !tbaa !13
  %4031 = load float, ptr %3921, align 4, !tbaa !13
  %4032 = load float, ptr %3980, align 4, !tbaa !13
  %4033 = load float, ptr %3904, align 4, !tbaa !13
  %4034 = load float, ptr %3984, align 4, !tbaa !13
  %4035 = load float, ptr %3929, align 4, !tbaa !13
  %4036 = load float, ptr %3987, align 4, !tbaa !13
  %4037 = load float, ptr %3933, align 4, !tbaa !13
  %4038 = load float, ptr %3990, align 4, !tbaa !13
  %4039 = insertelement <2 x float> poison, float %4027, i64 0
  %4040 = insertelement <2 x float> %4039, float %4033, i64 1
  %4041 = insertelement <2 x float> poison, float %4028, i64 0
  %4042 = insertelement <2 x float> %4041, float %4034, i64 1
  %4043 = fsub fast <2 x float> %4040, %4042
  %4044 = insertelement <2 x float> poison, float %4029, i64 0
  %4045 = insertelement <2 x float> %4044, float %4035, i64 1
  %4046 = insertelement <2 x float> poison, float %4030, i64 0
  %4047 = insertelement <2 x float> %4046, float %4036, i64 1
  %4048 = fsub fast <2 x float> %4045, %4047
  %4049 = insertelement <2 x float> poison, float %4031, i64 0
  %4050 = insertelement <2 x float> %4049, float %4037, i64 1
  %4051 = insertelement <2 x float> poison, float %4032, i64 0
  %4052 = insertelement <2 x float> %4051, float %4038, i64 1
  %4053 = fsub fast <2 x float> %4050, %4052
  %4054 = fmul fast <2 x float> %4043, %4043
  %4055 = fmul fast <2 x float> %4048, %4048
  %4056 = fadd fast <2 x float> %4055, %4054
  %4057 = fmul fast <2 x float> %4053, %4053
  %4058 = fadd fast <2 x float> %4056, %4057
  %4059 = call fast <2 x float> @llvm.sqrt.v2f32(<2 x float> %4058)
  %4060 = shufflevector <2 x float> %4059, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %4061 = fdiv fast <2 x float> %4059, %4060
  %4062 = shufflevector <2 x float> %4061, <2 x float> %4024, <2 x i32> <i32 0, i32 3>
  %4063 = insertelement <2 x float> %4026, float 2.000000e+00, i64 1
  %4064 = fadd fast <2 x float> %4062, %4063
  store <2 x float> %4064, ptr %4023, align 4, !tbaa !13
  %4065 = load <2 x float>, ptr %3962, align 4, !tbaa !13
  %4066 = insertelement <2 x float> %4061, float 1.000000e+00, i64 1
  %4067 = fadd fast <2 x float> %4066, %4065
  store <2 x float> %4067, ptr %3962, align 4, !tbaa !13
  %4068 = load float, ptr %3908, align 4, !tbaa !13
  %4069 = load float, ptr %3974, align 4, !tbaa !13
  %4070 = getelementptr inbounds float, ptr %3908, i64 1
  %4071 = load float, ptr %4070, align 4, !tbaa !13
  %4072 = load float, ptr %3977, align 4, !tbaa !13
  %4073 = getelementptr inbounds float, ptr %3908, i64 2
  %4074 = load float, ptr %4073, align 4, !tbaa !13
  %4075 = load float, ptr %3980, align 4, !tbaa !13
  %4076 = getelementptr inbounds %struct.VertRen, ptr %3908, i64 0, i32 2
  %4077 = load ptr, ptr %4076, align 8, !tbaa !496
  %4078 = load float, ptr %4077, align 4, !tbaa !13
  %4079 = load float, ptr %3984, align 4, !tbaa !13
  %4080 = getelementptr inbounds float, ptr %4077, i64 1
  %4081 = load float, ptr %4080, align 4, !tbaa !13
  %4082 = load float, ptr %3987, align 4, !tbaa !13
  %4083 = getelementptr inbounds float, ptr %4077, i64 2
  %4084 = load float, ptr %4083, align 4, !tbaa !13
  %4085 = load float, ptr %3990, align 4, !tbaa !13
  %4086 = insertelement <2 x float> poison, float %4068, i64 0
  %4087 = insertelement <2 x float> %4086, float %4078, i64 1
  %4088 = insertelement <2 x float> poison, float %4069, i64 0
  %4089 = insertelement <2 x float> %4088, float %4079, i64 1
  %4090 = fsub fast <2 x float> %4087, %4089
  %4091 = insertelement <2 x float> poison, float %4071, i64 0
  %4092 = insertelement <2 x float> %4091, float %4081, i64 1
  %4093 = insertelement <2 x float> poison, float %4072, i64 0
  %4094 = insertelement <2 x float> %4093, float %4082, i64 1
  %4095 = fsub fast <2 x float> %4092, %4094
  %4096 = insertelement <2 x float> poison, float %4074, i64 0
  %4097 = insertelement <2 x float> %4096, float %4084, i64 1
  %4098 = insertelement <2 x float> poison, float %4075, i64 0
  %4099 = insertelement <2 x float> %4098, float %4085, i64 1
  %4100 = fsub fast <2 x float> %4097, %4099
  %4101 = fmul fast <2 x float> %4090, %4090
  %4102 = fmul fast <2 x float> %4095, %4095
  %4103 = fadd fast <2 x float> %4102, %4101
  %4104 = fmul fast <2 x float> %4100, %4100
  %4105 = fadd fast <2 x float> %4103, %4104
  %4106 = call fast <2 x float> @llvm.sqrt.v2f32(<2 x float> %4105)
  %4107 = shufflevector <2 x float> %4106, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %4108 = fdiv fast <2 x float> %4106, %4107
  %4109 = load <2 x float>, ptr %4023, align 4, !tbaa !13
  %4110 = insertelement <2 x float> %4108, float 1.000000e+00, i64 1
  %4111 = fadd fast <2 x float> %4110, %4109
  store <2 x float> %4111, ptr %4023, align 4, !tbaa !13
  %4112 = getelementptr inbounds %struct.VertRen, ptr %3908, i64 0, i32 5
  %4113 = load i32, ptr %4112, align 8, !tbaa !591
  %4114 = shl nsw i32 %4113, 1
  %4115 = sext i32 %4114 to i64
  %4116 = getelementptr inbounds float, ptr %3848, i64 %4115
  %4117 = load <2 x float>, ptr %4116, align 4, !tbaa !13
  %4118 = fadd fast <2 x float> %4117, %4110
  store <2 x float> %4118, ptr %4116, align 4, !tbaa !13
  %4119 = load float, ptr %3902, align 4, !tbaa !13
  %4120 = load float, ptr %3908, align 4, !tbaa !13
  %4121 = load float, ptr %3917, align 4, !tbaa !13
  %4122 = load float, ptr %4070, align 4, !tbaa !13
  %4123 = load float, ptr %3921, align 4, !tbaa !13
  %4124 = load float, ptr %4073, align 4, !tbaa !13
  %4125 = load float, ptr %3904, align 4, !tbaa !13
  %4126 = load float, ptr %4077, align 4, !tbaa !13
  %4127 = load float, ptr %3929, align 4, !tbaa !13
  %4128 = load float, ptr %4080, align 4, !tbaa !13
  %4129 = load float, ptr %3933, align 4, !tbaa !13
  %4130 = load float, ptr %4083, align 4, !tbaa !13
  %4131 = insertelement <2 x float> poison, float %4119, i64 0
  %4132 = insertelement <2 x float> %4131, float %4125, i64 1
  %4133 = insertelement <2 x float> poison, float %4120, i64 0
  %4134 = insertelement <2 x float> %4133, float %4126, i64 1
  %4135 = fsub fast <2 x float> %4132, %4134
  %4136 = insertelement <2 x float> poison, float %4121, i64 0
  %4137 = insertelement <2 x float> %4136, float %4127, i64 1
  %4138 = insertelement <2 x float> poison, float %4122, i64 0
  %4139 = insertelement <2 x float> %4138, float %4128, i64 1
  %4140 = fsub fast <2 x float> %4137, %4139
  %4141 = insertelement <2 x float> poison, float %4123, i64 0
  %4142 = insertelement <2 x float> %4141, float %4129, i64 1
  %4143 = insertelement <2 x float> poison, float %4124, i64 0
  %4144 = insertelement <2 x float> %4143, float %4130, i64 1
  %4145 = fsub fast <2 x float> %4142, %4144
  %4146 = fmul fast <2 x float> %4135, %4135
  %4147 = fmul fast <2 x float> %4140, %4140
  %4148 = fadd fast <2 x float> %4147, %4146
  %4149 = fmul fast <2 x float> %4145, %4145
  %4150 = fadd fast <2 x float> %4148, %4149
  %4151 = call fast <2 x float> @llvm.sqrt.v2f32(<2 x float> %4150)
  %4152 = shufflevector <2 x float> %4151, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %4153 = fdiv fast <2 x float> %4151, %4152
  %4154 = shufflevector <2 x float> %4153, <2 x float> %4117, <2 x i32> <i32 0, i32 3>
  %4155 = insertelement <2 x float> %4118, float 2.000000e+00, i64 1
  %4156 = fadd fast <2 x float> %4154, %4155
  store <2 x float> %4156, ptr %4116, align 4, !tbaa !13
  %4157 = load <2 x float>, ptr %3962, align 4, !tbaa !13
  %4158 = insertelement <2 x float> %4153, float 1.000000e+00, i64 1
  %4159 = fadd fast <2 x float> %4158, %4157
  store <2 x float> %4159, ptr %3962, align 4, !tbaa !13
  %4160 = load float, ptr %3908, align 4, !tbaa !13
  %4161 = load float, ptr %3912, align 4, !tbaa !13
  %4162 = load float, ptr %4070, align 4, !tbaa !13
  %4163 = load float, ptr %3915, align 4, !tbaa !13
  %4164 = load float, ptr %4073, align 4, !tbaa !13
  %4165 = load float, ptr %3919, align 4, !tbaa !13
  %4166 = load float, ptr %4077, align 4, !tbaa !13
  %4167 = load float, ptr %3924, align 4, !tbaa !13
  %4168 = load float, ptr %4080, align 4, !tbaa !13
  %4169 = load float, ptr %3927, align 4, !tbaa !13
  %4170 = load float, ptr %4083, align 4, !tbaa !13
  %4171 = load float, ptr %3931, align 4, !tbaa !13
  %4172 = insertelement <2 x float> poison, float %4160, i64 0
  %4173 = insertelement <2 x float> %4172, float %4166, i64 1
  %4174 = insertelement <2 x float> poison, float %4161, i64 0
  %4175 = insertelement <2 x float> %4174, float %4167, i64 1
  %4176 = fsub fast <2 x float> %4173, %4175
  %4177 = insertelement <2 x float> poison, float %4162, i64 0
  %4178 = insertelement <2 x float> %4177, float %4168, i64 1
  %4179 = insertelement <2 x float> poison, float %4163, i64 0
  %4180 = insertelement <2 x float> %4179, float %4169, i64 1
  %4181 = fsub fast <2 x float> %4178, %4180
  %4182 = insertelement <2 x float> poison, float %4164, i64 0
  %4183 = insertelement <2 x float> %4182, float %4170, i64 1
  %4184 = insertelement <2 x float> poison, float %4165, i64 0
  %4185 = insertelement <2 x float> %4184, float %4171, i64 1
  %4186 = fsub fast <2 x float> %4183, %4185
  %4187 = fmul fast <2 x float> %4176, %4176
  %4188 = fmul fast <2 x float> %4181, %4181
  %4189 = fadd fast <2 x float> %4188, %4187
  %4190 = fmul fast <2 x float> %4186, %4186
  %4191 = fadd fast <2 x float> %4189, %4190
  %4192 = call fast <2 x float> @llvm.sqrt.v2f32(<2 x float> %4191)
  %4193 = shufflevector <2 x float> %4192, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %4194 = fdiv fast <2 x float> %4192, %4193
  %4195 = load <2 x float>, ptr %3970, align 4, !tbaa !13
  %4196 = insertelement <2 x float> %4194, float 1.000000e+00, i64 1
  %4197 = fadd fast <2 x float> %4196, %4195
  store <2 x float> %4197, ptr %3970, align 4, !tbaa !13
  %4198 = load <2 x float>, ptr %4116, align 4, !tbaa !13
  %4199 = fadd fast <2 x float> %4198, %4196
  store <2 x float> %4199, ptr %4116, align 4, !tbaa !13
  br label %4200

4200:                                             ; preds = %3910, %3906, %3899
  %4201 = add nuw nsw i32 %3900, 1
  %4202 = load i32, ptr %3858, align 4, !tbaa !499
  %4203 = icmp slt i32 %4201, %4202
  br i1 %4203, label %3899, label %3889, !llvm.loop !592

4204:                                             ; preds = %4243, %3894
  %4205 = phi i32 [ 0, %3894 ], [ %4244, %4243 ]
  %4206 = call ptr @RE_findOrAddVert(ptr noundef nonnull %1, i32 noundef %4205) #16
  %4207 = getelementptr inbounds %struct.VertRen, ptr %4206, i64 0, i32 2
  %4208 = load ptr, ptr %4207, align 8, !tbaa !496
  %4209 = icmp eq ptr %4208, null
  br i1 %4209, label %4243, label %4210

4210:                                             ; preds = %4204
  %4211 = getelementptr inbounds %struct.VertRen, ptr %4206, i64 0, i32 5
  %4212 = load i32, ptr %4211, align 8, !tbaa !591
  %4213 = shl nsw i32 %4212, 1
  %4214 = sext i32 %4213 to i64
  %4215 = getelementptr inbounds float, ptr %3848, i64 %4214
  %4216 = getelementptr inbounds float, ptr %4215, i64 1
  %4217 = load float, ptr %4216, align 4, !tbaa !13
  %4218 = fcmp fast une float %4217, 0.000000e+00
  br i1 %4218, label %4219, label %4222

4219:                                             ; preds = %4210
  %4220 = load float, ptr %4215, align 4, !tbaa !13
  %4221 = fdiv fast float %4220, %4217
  store float %4221, ptr %4215, align 4, !tbaa !13
  br label %4222

4222:                                             ; preds = %4219, %4210
  %4223 = call ptr @RE_vertren_get_stress(ptr noundef nonnull %1, ptr noundef nonnull %4206, i32 noundef 1) #16
  %4224 = load float, ptr %4215, align 4, !tbaa !13
  store float %4224, ptr %4223, align 4, !tbaa !13
  %4225 = load ptr, ptr %4207, align 8, !tbaa !496
  %4226 = load float, ptr %4225, align 4, !tbaa !13
  %4227 = load float, ptr %12, align 4, !tbaa !13
  %4228 = fsub fast float %4226, %4227
  %4229 = load float, ptr %13, align 4, !tbaa !13
  %4230 = fdiv fast float %4228, %4229
  store float %4230, ptr %4225, align 4, !tbaa !13
  %4231 = getelementptr inbounds float, ptr %4225, i64 1
  %4232 = load float, ptr %4231, align 4, !tbaa !13
  %4233 = load float, ptr %3895, align 4, !tbaa !13
  %4234 = fsub fast float %4232, %4233
  %4235 = load float, ptr %3896, align 4, !tbaa !13
  %4236 = fdiv fast float %4234, %4235
  store float %4236, ptr %4231, align 4, !tbaa !13
  %4237 = getelementptr inbounds float, ptr %4225, i64 2
  %4238 = load float, ptr %4237, align 4, !tbaa !13
  %4239 = load float, ptr %3897, align 4, !tbaa !13
  %4240 = fsub fast float %4238, %4239
  %4241 = load float, ptr %3898, align 4, !tbaa !13
  %4242 = fdiv fast float %4240, %4241
  store float %4242, ptr %4237, align 4, !tbaa !13
  br label %4243

4243:                                             ; preds = %4222, %4204
  %4244 = add nuw nsw i32 %4205, 1
  %4245 = load i32, ptr %3840, align 8, !tbaa !177
  %4246 = icmp slt i32 %4244, %4245
  br i1 %4246, label %4204, label %4247, !llvm.loop !593

4247:                                             ; preds = %4243, %3891
  %4248 = load ptr, ptr @MEM_freeN, align 8, !tbaa !16
  call void %4248(ptr noundef %3848) #16
  br label %4249

4249:                                             ; preds = %4247, %3839
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %13) #16
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %12) #16
  br label %4250

4250:                                             ; preds = %4249, %3837
  br i1 %2372, label %4252, label %4251

4251:                                             ; preds = %4250
  call fastcc void @calc_vertexnormals(ptr noundef %1, i8 noundef zeroext 1, i8 noundef zeroext 0, i8 noundef zeroext 0)
  call fastcc void @displace(ptr noundef %0, ptr noundef %1)
  br label %4386

4252:                                             ; preds = %4250
  br i1 %2378, label %4253, label %4386

4253:                                             ; preds = %4252
  %4254 = icmp eq ptr %3836, null
  %4255 = zext i1 %4254 to i32
  %4256 = getelementptr inbounds %struct.ObjectRen, ptr %1, i64 0, i32 10
  %4257 = load i32, ptr %4256, align 8, !tbaa !177
  %4258 = icmp eq i32 %4257, 0
  br i1 %4258, label %4386, label %4259

4259:                                             ; preds = %4253
  %4260 = load ptr, ptr @MEM_callocN, align 8, !tbaa !16
  %4261 = sext i32 %4257 to i64
  %4262 = mul nsw i64 %4261, 24
  %4263 = call ptr %4260(i64 noundef %4262, ptr noundef nonnull @.str.22) #16
  br i1 %4254, label %4309, label %4264

4264:                                             ; preds = %4259
  %4265 = getelementptr inbounds %struct.ObjectRen, ptr %1, i64 0, i32 11
  %4266 = load i32, ptr %4265, align 4, !tbaa !499
  %4267 = icmp sgt i32 %4266, 0
  br i1 %4267, label %4268, label %4309

4268:                                             ; preds = %4264, %4304
  %4269 = phi ptr [ %4306, %4304 ], [ %3836, %4264 ]
  %4270 = phi i32 [ %4305, %4304 ], [ 0, %4264 ]
  %4271 = call ptr @RE_findOrAddVlak(ptr noundef nonnull %1, i32 noundef %4270) #16
  %4272 = getelementptr inbounds %struct.VlakRen, ptr %4271, i64 0, i32 1
  %4273 = load ptr, ptr %4272, align 8, !tbaa !504
  %4274 = getelementptr inbounds %struct.VlakRen, ptr %4271, i64 0, i32 2
  %4275 = load ptr, ptr %4274, align 8, !tbaa !505
  %4276 = icmp eq ptr %4273, %4275
  br i1 %4276, label %4304, label %4277

4277:                                             ; preds = %4268
  %4278 = load ptr, ptr %4271, align 8, !tbaa !502
  %4279 = getelementptr inbounds %struct.VertRen, ptr %4278, i64 0, i32 5
  %4280 = load i32, ptr %4279, align 8, !tbaa !591
  %4281 = sext i32 %4280 to i64
  %4282 = getelementptr inbounds %struct.ASvert, ptr %4263, i64 %4281
  call fastcc void @as_addvert_lnor(ptr noundef nonnull %1, ptr noundef %4282, ptr noundef %4278, ptr noundef nonnull %4271, ptr noundef nonnull %4269)
  %4283 = load ptr, ptr %4272, align 8, !tbaa !504
  %4284 = getelementptr inbounds %struct.VertRen, ptr %4283, i64 0, i32 5
  %4285 = load i32, ptr %4284, align 8, !tbaa !591
  %4286 = sext i32 %4285 to i64
  %4287 = getelementptr inbounds %struct.ASvert, ptr %4263, i64 %4286
  %4288 = getelementptr inbounds [4 x [3 x i16]], ptr %4269, i64 0, i64 1
  call fastcc void @as_addvert_lnor(ptr noundef nonnull %1, ptr noundef %4287, ptr noundef %4283, ptr noundef nonnull %4271, ptr noundef nonnull %4288)
  %4289 = load ptr, ptr %4274, align 8, !tbaa !505
  %4290 = getelementptr inbounds %struct.VertRen, ptr %4289, i64 0, i32 5
  %4291 = load i32, ptr %4290, align 8, !tbaa !591
  %4292 = sext i32 %4291 to i64
  %4293 = getelementptr inbounds %struct.ASvert, ptr %4263, i64 %4292
  %4294 = getelementptr inbounds [4 x [3 x i16]], ptr %4269, i64 0, i64 2
  call fastcc void @as_addvert_lnor(ptr noundef nonnull %1, ptr noundef %4293, ptr noundef %4289, ptr noundef nonnull %4271, ptr noundef nonnull %4294)
  %4295 = getelementptr inbounds %struct.VlakRen, ptr %4271, i64 0, i32 3
  %4296 = load ptr, ptr %4295, align 8, !tbaa !506
  %4297 = icmp eq ptr %4296, null
  br i1 %4297, label %4304, label %4298

4298:                                             ; preds = %4277
  %4299 = getelementptr inbounds %struct.VertRen, ptr %4296, i64 0, i32 5
  %4300 = load i32, ptr %4299, align 8, !tbaa !591
  %4301 = sext i32 %4300 to i64
  %4302 = getelementptr inbounds %struct.ASvert, ptr %4263, i64 %4301
  %4303 = getelementptr inbounds [4 x [3 x i16]], ptr %4269, i64 0, i64 3
  call fastcc void @as_addvert_lnor(ptr noundef nonnull %1, ptr noundef %4302, ptr noundef nonnull %4296, ptr noundef nonnull %4271, ptr noundef nonnull %4303)
  br label %4304

4304:                                             ; preds = %4298, %4277, %4268
  %4305 = add nuw nsw i32 %4270, 1
  %4306 = getelementptr [4 x [3 x i16]], ptr %4269, i64 1
  %4307 = load i32, ptr %4265, align 4, !tbaa !499
  %4308 = icmp slt i32 %4305, %4307
  br i1 %4308, label %4268, label %4309, !llvm.loop !594

4309:                                             ; preds = %4304, %4264, %4259
  %4310 = phi ptr [ null, %4259 ], [ %3836, %4264 ], [ %4306, %4304 ]
  %4311 = icmp sgt i32 %4257, 0
  br i1 %4311, label %4312, label %4319

4312:                                             ; preds = %4309
  %4313 = zext i32 %4257 to i64
  br label %4314

4314:                                             ; preds = %4314, %4312
  %4315 = phi i64 [ 0, %4312 ], [ %4317, %4314 ]
  %4316 = getelementptr inbounds %struct.ASvert, ptr %4263, i64 %4315, i32 1
  call void @BLI_freelistN(ptr noundef nonnull %4316) #16
  %4317 = add nuw nsw i64 %4315, 1
  %4318 = icmp eq i64 %4317, %4313
  br i1 %4318, label %4319, label %4314, !llvm.loop !595

4319:                                             ; preds = %4314, %4309
  %4320 = load ptr, ptr @MEM_freeN, align 8, !tbaa !16
  call void %4320(ptr noundef %4263) #16
  %4321 = load i32, ptr %4256, align 8, !tbaa !177
  %4322 = icmp sgt i32 %4321, 0
  br i1 %4322, label %4323, label %4331

4323:                                             ; preds = %4319
  %4324 = icmp eq ptr %4310, null
  br i1 %4324, label %4325, label %4335

4325:                                             ; preds = %4323, %4325
  %4326 = phi i32 [ %4328, %4325 ], [ 0, %4323 ]
  %4327 = call ptr @RE_findOrAddVert(ptr noundef nonnull %1, i32 noundef %4326) #16
  call void @mul_m4_v3(ptr noundef nonnull %19, ptr noundef %4327) #16
  %4328 = add nuw nsw i32 %4326, 1
  %4329 = load i32, ptr %4256, align 8, !tbaa !177
  %4330 = icmp slt i32 %4328, %4329
  br i1 %4330, label %4325, label %4331, !llvm.loop !596

4331:                                             ; preds = %4358, %4325, %4319
  %4332 = getelementptr inbounds %struct.ObjectRen, ptr %1, i64 0, i32 11
  %4333 = load i32, ptr %4332, align 4, !tbaa !499
  %4334 = icmp sgt i32 %4333, 0
  br i1 %4334, label %4364, label %4386

4335:                                             ; preds = %4323, %4358
  %4336 = phi i32 [ %4361, %4358 ], [ 0, %4323 ]
  %4337 = call ptr @RE_findOrAddVert(ptr noundef nonnull %1, i32 noundef %4336) #16
  call void @mul_m4_v3(ptr noundef nonnull %19, ptr noundef %4337) #16
  %4338 = getelementptr inbounds %struct.VertRen, ptr %4337, i64 0, i32 1
  call void @mul_mat3_m4_v3(ptr noundef nonnull %19, ptr noundef nonnull %4338) #16
  %4339 = load <2 x float>, ptr %4338, align 4, !tbaa !13
  %4340 = getelementptr inbounds %struct.VertRen, ptr %4337, i64 0, i32 1, i64 2
  %4341 = load float, ptr %4340, align 4, !tbaa !13
  %4342 = fmul fast <2 x float> %4339, %4339
  %4343 = shufflevector <2 x float> %4342, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %4344 = fadd fast <2 x float> %4343, %4342
  %4345 = extractelement <2 x float> %4344, i64 0
  %4346 = fmul fast float %4341, %4341
  %4347 = fadd fast float %4345, %4346
  %4348 = fcmp fast ogt float %4347, 0x38AA95A5C0000000
  br i1 %4348, label %4349, label %4358

4349:                                             ; preds = %4335
  %4350 = fneg fast float %4341
  %4351 = fneg fast <2 x float> %4339
  %4352 = call fast float @llvm.sqrt.f32(float %4347)
  %4353 = fdiv fast float 1.000000e+00, %4352
  %4354 = insertelement <2 x float> poison, float %4353, i64 0
  %4355 = shufflevector <2 x float> %4354, <2 x float> poison, <2 x i32> zeroinitializer
  %4356 = fmul fast <2 x float> %4355, %4351
  %4357 = fmul fast float %4353, %4350
  br label %4358

4358:                                             ; preds = %4349, %4335
  %4359 = phi float [ %4357, %4349 ], [ 0.000000e+00, %4335 ]
  %4360 = phi <2 x float> [ %4356, %4349 ], [ zeroinitializer, %4335 ]
  store <2 x float> %4360, ptr %4338, align 4
  store float %4359, ptr %4340, align 4
  %4361 = add nuw nsw i32 %4336, 1
  %4362 = load i32, ptr %4256, align 8, !tbaa !177
  %4363 = icmp slt i32 %4361, %4362
  br i1 %4363, label %4335, label %4331, !llvm.loop !596

4364:                                             ; preds = %4331, %4382
  %4365 = phi i32 [ %4383, %4382 ], [ 0, %4331 ]
  %4366 = call ptr @RE_findOrAddVlak(ptr noundef nonnull %1, i32 noundef %4365) #16
  %4367 = getelementptr inbounds %struct.VlakRen, ptr %4366, i64 0, i32 1
  %4368 = load ptr, ptr %4367, align 8, !tbaa !504
  %4369 = getelementptr inbounds %struct.VlakRen, ptr %4366, i64 0, i32 2
  %4370 = load ptr, ptr %4369, align 8, !tbaa !505
  %4371 = icmp eq ptr %4368, %4370
  br i1 %4371, label %4382, label %4372

4372:                                             ; preds = %4364
  %4373 = getelementptr inbounds %struct.VlakRen, ptr %4366, i64 0, i32 3
  %4374 = load ptr, ptr %4373, align 8, !tbaa !506
  %4375 = icmp eq ptr %4374, null
  %4376 = getelementptr inbounds %struct.VlakRen, ptr %4366, i64 0, i32 4
  %4377 = load ptr, ptr %4366, align 8, !tbaa !502
  br i1 %4375, label %4380, label %4378

4378:                                             ; preds = %4372
  %4379 = call fast nofpclass(nan inf) float @normal_quad_v3(ptr noundef nonnull %4376, ptr noundef nonnull %4374, ptr noundef %4370, ptr noundef %4368, ptr noundef %4377) #16
  br label %4382

4380:                                             ; preds = %4372
  %4381 = call fast nofpclass(nan inf) float @normal_tri_v3(ptr noundef nonnull %4376, ptr noundef %4370, ptr noundef %4368, ptr noundef %4377) #16
  br label %4382

4382:                                             ; preds = %4380, %4378, %4364
  %4383 = add nuw nsw i32 %4365, 1
  %4384 = load i32, ptr %4332, align 4, !tbaa !499
  %4385 = icmp slt i32 %4383, %4384
  br i1 %4385, label %4364, label %4386, !llvm.loop !597

4386:                                             ; preds = %4382, %4331, %4253, %4252, %4251
  %4387 = phi i32 [ 0, %4251 ], [ %3835, %4252 ], [ %4255, %4253 ], [ %4255, %4331 ], [ %4255, %4382 ]
  %4388 = icmp ne i32 %4387, 0
  %4389 = icmp ne i8 %2353, 0
  %4390 = select i1 %4388, i1 true, i1 %4389
  br i1 %4390, label %4391, label %4393

4391:                                             ; preds = %4386
  %4392 = trunc i32 %4387 to i8
  call fastcc void @calc_vertexnormals(ptr noundef %1, i8 noundef zeroext %4392, i8 noundef zeroext %2353, i8 noundef zeroext %2354)
  br label %4393

4393:                                             ; preds = %4391, %4386, %3834
  %4394 = icmp eq ptr %3836, null
  br i1 %4394, label %4397, label %4395

4395:                                             ; preds = %4393
  %4396 = load ptr, ptr @MEM_freeN, align 8, !tbaa !16
  call void %4396(ptr noundef nonnull %3836) #16
  br label %4397

4397:                                             ; preds = %4395, %4393, %2662
  %4398 = getelementptr inbounds %struct.DerivedMesh, ptr %2409, i64 0, i32 95
  %4399 = load ptr, ptr %4398, align 8, !tbaa !250
  call void %4399(ptr noundef %2409) #16
  br label %4400

4400:                                             ; preds = %2278, %2408, %4397
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %19) #16
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %18) #16
  br label %4596

4401:                                             ; preds = %1481
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %9) #16
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %10) #16
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %11) #16
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %11, i8 0, i64 16, i1 false)
  %4402 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 44
  %4403 = load ptr, ptr %4402, align 8, !tbaa !17
  %4404 = tail call ptr @BKE_mball_basis_find(ptr noundef %4403, ptr noundef nonnull %54) #16
  %4405 = icmp eq ptr %54, %4404
  br i1 %4405, label %4406, label %4595

4406:                                             ; preds = %4401
  %4407 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 32
  %4408 = getelementptr inbounds %struct.Object, ptr %54, i64 0, i32 47
  call void @mul_m4_m4m4(ptr noundef nonnull %9, ptr noundef nonnull %4407, ptr noundef nonnull %4408) #16
  %4409 = getelementptr inbounds %struct.Object, ptr %54, i64 0, i32 50
  %4410 = call zeroext i8 @invert_m4_m4(ptr noundef nonnull %4409, ptr noundef nonnull %9) #16
  call void @copy_m3_m4(ptr noundef nonnull %10, ptr noundef nonnull %4409) #16
  %4411 = call zeroext i8 @is_negative_m4(ptr noundef nonnull %9) #16
  %4412 = call fastcc ptr @give_render_material(ptr noundef nonnull %0, ptr noundef nonnull %54, i16 noundef signext 1)
  %4413 = getelementptr inbounds %struct.Material, ptr %4412, i64 0, i32 90
  %4414 = load i16, ptr %4413, align 4, !tbaa !237
  %4415 = and i16 %4414, 1
  %4416 = icmp eq i16 %4415, 0
  %4417 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 101
  %4418 = load ptr, ptr %4417, align 8, !tbaa !91
  %4419 = load ptr, ptr %4402, align 8, !tbaa !17
  call void @BKE_displist_make_mball_forRender(ptr noundef %4418, ptr noundef %4419, ptr noundef nonnull %54, ptr noundef nonnull %11) #16
  %4420 = load ptr, ptr %11, align 8, !tbaa !175
  %4421 = icmp eq ptr %4420, null
  br i1 %4421, label %4595, label %4422

4422:                                             ; preds = %4406
  %4423 = getelementptr inbounds %struct.DispList, ptr %4420, i64 0, i32 8
  %4424 = load ptr, ptr %4423, align 8, !tbaa !495
  %4425 = getelementptr inbounds %struct.DispList, ptr %4420, i64 0, i32 9
  %4426 = load ptr, ptr %4425, align 8, !tbaa !598
  br i1 %4416, label %4442, label %4427

4427:                                             ; preds = %4422
  %4428 = getelementptr i8, ptr %0, i64 5840
  %4429 = load ptr, ptr %4428, align 8, !tbaa !76
  %4430 = icmp eq ptr %4429, null
  br i1 %4430, label %4434, label %4431

4431:                                             ; preds = %4427
  %4432 = call ptr @BLI_ghash_lookup(ptr noundef nonnull %4429, ptr noundef nonnull %54) #16
  %4433 = icmp eq ptr %4432, null
  br i1 %4433, label %4434, label %4442

4434:                                             ; preds = %4431, %4427
  %4435 = call ptr @BKE_mball_make_orco(ptr noundef nonnull %54, ptr noundef nonnull %11) #16
  %4436 = load ptr, ptr %4428, align 8, !tbaa !76
  %4437 = icmp eq ptr %4436, null
  br i1 %4437, label %4438, label %4440

4438:                                             ; preds = %4434
  %4439 = call ptr @BLI_ghash_ptr_new(ptr noundef nonnull @.str.18) #16
  store ptr %4439, ptr %4428, align 8, !tbaa !76
  br label %4440

4440:                                             ; preds = %4438, %4434
  %4441 = phi ptr [ %4439, %4438 ], [ %4436, %4434 ]
  call void @BLI_ghash_insert(ptr noundef %4441, ptr noundef nonnull %54, ptr noundef %4435) #16
  br label %4442

4442:                                             ; preds = %4440, %4431, %4422
  %4443 = phi ptr [ %4432, %4431 ], [ %4435, %4440 ], [ null, %4422 ]
  %4444 = getelementptr inbounds %struct.DispList, ptr %4420, i64 0, i32 5
  %4445 = load i32, ptr %4444, align 8, !tbaa !494
  %4446 = icmp sgt i32 %4445, 0
  br i1 %4446, label %4447, label %4531

4447:                                             ; preds = %4442
  %4448 = getelementptr inbounds %struct.ObjectRen, ptr %1, i64 0, i32 10
  %4449 = getelementptr inbounds [3 x float], ptr %10, i64 0, i64 1
  %4450 = getelementptr inbounds [3 x float], ptr %10, i64 0, i64 2
  %4451 = getelementptr inbounds [3 x [3 x float]], ptr %10, i64 0, i64 1
  %4452 = getelementptr inbounds [3 x [3 x float]], ptr %10, i64 0, i64 1, i64 1
  %4453 = getelementptr inbounds [3 x [3 x float]], ptr %10, i64 0, i64 1, i64 2
  %4454 = getelementptr inbounds [3 x [3 x float]], ptr %10, i64 0, i64 2
  %4455 = getelementptr inbounds [3 x [3 x float]], ptr %10, i64 0, i64 2, i64 1
  %4456 = getelementptr inbounds [3 x [3 x float]], ptr %10, i64 0, i64 2, i64 2
  br label %4457

4457:                                             ; preds = %4524, %4447
  %4458 = phi ptr [ %4424, %4447 ], [ %4527, %4524 ]
  %4459 = phi ptr [ %4426, %4447 ], [ %4528, %4524 ]
  %4460 = phi i32 [ 0, %4447 ], [ %4526, %4524 ]
  %4461 = phi ptr [ %4443, %4447 ], [ %4525, %4524 ]
  %4462 = load i32, ptr %4448, align 8, !tbaa !177
  %4463 = add nsw i32 %4462, 1
  store i32 %4463, ptr %4448, align 8, !tbaa !177
  %4464 = call ptr @RE_findOrAddVert(ptr noundef nonnull %1, i32 noundef %4462) #16
  %4465 = load float, ptr %4458, align 4, !tbaa !13
  store float %4465, ptr %4464, align 4, !tbaa !13
  %4466 = getelementptr inbounds float, ptr %4458, i64 1
  %4467 = load float, ptr %4466, align 4, !tbaa !13
  %4468 = getelementptr inbounds float, ptr %4464, i64 1
  store float %4467, ptr %4468, align 4, !tbaa !13
  %4469 = getelementptr inbounds float, ptr %4458, i64 2
  %4470 = load float, ptr %4469, align 4, !tbaa !13
  %4471 = getelementptr inbounds float, ptr %4464, i64 2
  store float %4470, ptr %4471, align 4, !tbaa !13
  call void @mul_m4_v3(ptr noundef nonnull %9, ptr noundef nonnull %4464) #16
  %4472 = load float, ptr %4459, align 4, !tbaa !13
  %4473 = getelementptr inbounds float, ptr %4459, i64 1
  %4474 = load float, ptr %4473, align 4, !tbaa !13
  %4475 = fneg fast float %4474
  %4476 = getelementptr inbounds float, ptr %4459, i64 2
  %4477 = load float, ptr %4476, align 4, !tbaa !13
  %4478 = load float, ptr %10, align 16, !tbaa !13
  %4479 = load float, ptr %4449, align 4, !tbaa !13
  %4480 = fmul fast float %4479, %4475
  %4481 = load float, ptr %4450, align 8, !tbaa !13
  %4482 = fmul fast float %4478, %4472
  %4483 = fmul fast float %4481, %4477
  %4484 = fadd fast float %4482, %4483
  %4485 = fsub fast float %4480, %4484
  %4486 = getelementptr inbounds %struct.VertRen, ptr %4464, i64 0, i32 1
  store float %4485, ptr %4486, align 4, !tbaa !13
  %4487 = load float, ptr %4451, align 4, !tbaa !13
  %4488 = load float, ptr %4452, align 16, !tbaa !13
  %4489 = fmul fast float %4488, %4475
  %4490 = load float, ptr %4453, align 4, !tbaa !13
  %4491 = fmul fast float %4487, %4472
  %4492 = fmul fast float %4490, %4477
  %4493 = fadd fast float %4491, %4492
  %4494 = fsub fast float %4489, %4493
  %4495 = getelementptr inbounds %struct.VertRen, ptr %4464, i64 0, i32 1, i64 1
  store float %4494, ptr %4495, align 4, !tbaa !13
  %4496 = load float, ptr %4454, align 8, !tbaa !13
  %4497 = load float, ptr %4455, align 4, !tbaa !13
  %4498 = fmul fast float %4497, %4475
  %4499 = load float, ptr %4456, align 16, !tbaa !13
  %4500 = fmul fast float %4496, %4472
  %4501 = fmul fast float %4499, %4477
  %4502 = fadd fast float %4500, %4501
  %4503 = fsub fast float %4498, %4502
  %4504 = getelementptr inbounds %struct.VertRen, ptr %4464, i64 0, i32 1, i64 2
  %4505 = fmul fast float %4485, %4485
  %4506 = fmul fast float %4494, %4494
  %4507 = fadd fast float %4506, %4505
  %4508 = fmul fast float %4503, %4503
  %4509 = fadd fast float %4507, %4508
  %4510 = fcmp fast ogt float %4509, 0x38AA95A5C0000000
  br i1 %4510, label %4511, label %4517

4511:                                             ; preds = %4457
  %4512 = call fast float @llvm.sqrt.f32(float %4509)
  %4513 = fdiv fast float 1.000000e+00, %4512
  %4514 = fmul fast float %4513, %4485
  %4515 = fmul fast float %4513, %4494
  %4516 = fmul fast float %4513, %4503
  br label %4517

4517:                                             ; preds = %4511, %4457
  %4518 = phi float [ %4514, %4511 ], [ 0.000000e+00, %4457 ]
  %4519 = phi float [ %4515, %4511 ], [ 0.000000e+00, %4457 ]
  %4520 = phi float [ %4516, %4511 ], [ 0.000000e+00, %4457 ]
  store float %4518, ptr %4486, align 4
  store float %4519, ptr %4495, align 4
  store float %4520, ptr %4504, align 4
  br i1 %4416, label %4524, label %4521

4521:                                             ; preds = %4517
  %4522 = getelementptr inbounds %struct.VertRen, ptr %4464, i64 0, i32 2
  store ptr %4461, ptr %4522, align 8, !tbaa !496
  %4523 = getelementptr inbounds float, ptr %4461, i64 3
  br label %4524

4524:                                             ; preds = %4521, %4517
  %4525 = phi ptr [ %4523, %4521 ], [ %4461, %4517 ]
  %4526 = add nuw nsw i32 %4460, 1
  %4527 = getelementptr inbounds float, ptr %4458, i64 3
  %4528 = getelementptr inbounds float, ptr %4459, i64 3
  %4529 = load i32, ptr %4444, align 8, !tbaa !494
  %4530 = icmp slt i32 %4526, %4529
  br i1 %4530, label %4457, label %4531, !llvm.loop !599

4531:                                             ; preds = %4524, %4442
  %4532 = getelementptr inbounds %struct.DispList, ptr %4420, i64 0, i32 4
  %4533 = load i32, ptr %4532, align 4, !tbaa !500
  %4534 = icmp sgt i32 %4533, 0
  br i1 %4534, label %4535, label %4594

4535:                                             ; preds = %4531
  %4536 = getelementptr inbounds %struct.DispList, ptr %4420, i64 0, i32 10
  %4537 = load ptr, ptr %4536, align 8, !tbaa !501
  %4538 = getelementptr inbounds %struct.ObjectRen, ptr %1, i64 0, i32 11
  %4539 = icmp eq i8 %4411, 0
  br label %4540

4540:                                             ; preds = %4589, %4535
  %4541 = phi ptr [ %4537, %4535 ], [ %4591, %4589 ]
  %4542 = phi i32 [ 0, %4535 ], [ %4590, %4589 ]
  %4543 = load i32, ptr %4538, align 4, !tbaa !499
  %4544 = add nsw i32 %4543, 1
  store i32 %4544, ptr %4538, align 4, !tbaa !499
  %4545 = call ptr @RE_findOrAddVlak(ptr noundef nonnull %1, i32 noundef %4543) #16
  %4546 = load i32, ptr %4541, align 4, !tbaa !47
  %4547 = call ptr @RE_findOrAddVert(ptr noundef nonnull %1, i32 noundef %4546) #16
  store ptr %4547, ptr %4545, align 8, !tbaa !502
  %4548 = getelementptr inbounds i32, ptr %4541, i64 1
  %4549 = load i32, ptr %4548, align 4, !tbaa !47
  %4550 = call ptr @RE_findOrAddVert(ptr noundef nonnull %1, i32 noundef %4549) #16
  %4551 = getelementptr inbounds %struct.VlakRen, ptr %4545, i64 0, i32 1
  store ptr %4550, ptr %4551, align 8, !tbaa !504
  %4552 = getelementptr inbounds i32, ptr %4541, i64 2
  %4553 = load i32, ptr %4552, align 4, !tbaa !47
  %4554 = call ptr @RE_findOrAddVert(ptr noundef nonnull %1, i32 noundef %4553) #16
  %4555 = getelementptr inbounds %struct.VlakRen, ptr %4545, i64 0, i32 2
  store ptr %4554, ptr %4555, align 8, !tbaa !505
  %4556 = getelementptr inbounds %struct.VlakRen, ptr %4545, i64 0, i32 3
  store ptr null, ptr %4556, align 8, !tbaa !506
  %4557 = getelementptr inbounds %struct.VlakRen, ptr %4545, i64 0, i32 4
  %4558 = load ptr, ptr %4545, align 8, !tbaa !502
  %4559 = select i1 %4539, ptr %4558, ptr %4554
  %4560 = select i1 %4539, ptr %4554, ptr %4558
  %4561 = load ptr, ptr %4551, align 8, !tbaa !504
  %4562 = call fast nofpclass(nan inf) float @normal_tri_v3(ptr noundef nonnull %4557, ptr noundef %4560, ptr noundef %4561, ptr noundef %4559) #16
  %4563 = getelementptr inbounds %struct.VlakRen, ptr %4545, i64 0, i32 5
  store ptr %4412, ptr %4563, align 8, !tbaa !507
  %4564 = getelementptr inbounds %struct.VlakRen, ptr %4545, i64 0, i32 7
  store i8 1, ptr %4564, align 1, !tbaa !508
  %4565 = getelementptr inbounds %struct.VlakRen, ptr %4545, i64 0, i32 8
  store i8 0, ptr %4565, align 2, !tbaa !509
  %4566 = getelementptr inbounds i32, ptr %4541, i64 3
  %4567 = load i32, ptr %4566, align 4, !tbaa !47
  %4568 = icmp eq i32 %4567, 0
  br i1 %4568, label %4589, label %4569

4569:                                             ; preds = %4540
  %4570 = load i32, ptr %4552, align 4, !tbaa !47
  %4571 = icmp eq i32 %4567, %4570
  br i1 %4571, label %4589, label %4572

4572:                                             ; preds = %4569
  %4573 = load i32, ptr %4538, align 4, !tbaa !499
  %4574 = add nsw i32 %4573, 1
  store i32 %4574, ptr %4538, align 4, !tbaa !499
  %4575 = call ptr @RE_findOrAddVlak(ptr noundef nonnull %1, i32 noundef %4573) #16
  %4576 = getelementptr inbounds %struct.VlakRen, ptr %4575, i64 0, i32 9
  %4577 = load i32, ptr %4576, align 4, !tbaa !600
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %4575, ptr noundef nonnull align 8 dereferenceable(64) %4545, i64 64, i1 false), !tbaa.struct !601
  store i32 %4577, ptr %4576, align 4, !tbaa !600
  %4578 = getelementptr inbounds %struct.VlakRen, ptr %4575, i64 0, i32 2
  %4579 = load ptr, ptr %4578, align 8, !tbaa !505
  %4580 = getelementptr inbounds %struct.VlakRen, ptr %4575, i64 0, i32 1
  store ptr %4579, ptr %4580, align 8, !tbaa !504
  %4581 = load i32, ptr %4566, align 4, !tbaa !47
  %4582 = call ptr @RE_findOrAddVert(ptr noundef nonnull %1, i32 noundef %4581) #16
  store ptr %4582, ptr %4578, align 8, !tbaa !505
  %4583 = getelementptr inbounds %struct.VlakRen, ptr %4575, i64 0, i32 4
  %4584 = load ptr, ptr %4575, align 8, !tbaa !502
  %4585 = select i1 %4539, ptr %4584, ptr %4582
  %4586 = select i1 %4539, ptr %4582, ptr %4584
  %4587 = load ptr, ptr %4580, align 8, !tbaa !504
  %4588 = call fast nofpclass(nan inf) float @normal_tri_v3(ptr noundef nonnull %4583, ptr noundef %4586, ptr noundef %4587, ptr noundef %4585) #16
  br label %4589

4589:                                             ; preds = %4572, %4569, %4540
  %4590 = add nuw nsw i32 %4542, 1
  %4591 = getelementptr inbounds i32, ptr %4541, i64 4
  %4592 = load i32, ptr %4532, align 4, !tbaa !500
  %4593 = icmp slt i32 %4590, %4592
  br i1 %4593, label %4540, label %4594, !llvm.loop !602

4594:                                             ; preds = %4589, %4531
  call void @BKE_displist_free(ptr noundef nonnull %11) #16
  br label %4595

4595:                                             ; preds = %4401, %4406, %4594
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %11) #16
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %10) #16
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %9) #16
  br label %4596

4596:                                             ; preds = %1481, %2160, %4400, %4595, %2277, %1480
  %4597 = load ptr, ptr %53, align 8, !tbaa !148
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %5) #16
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %6) #16
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %7) #16
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %8) #16
  %4598 = getelementptr inbounds %struct.ObjectRen, ptr %1, i64 0, i32 10
  %4599 = load i32, ptr %4598, align 8, !tbaa !177
  %4600 = icmp eq i32 %4599, 0
  br i1 %4600, label %4601, label %4613

4601:                                             ; preds = %4596
  %4602 = getelementptr inbounds %struct.ObjectRen, ptr %1, i64 0, i32 11
  %4603 = load i32, ptr %4602, align 4, !tbaa !499
  %4604 = icmp eq i32 %4603, 0
  br i1 %4604, label %4605, label %4613

4605:                                             ; preds = %4601
  %4606 = getelementptr inbounds %struct.ObjectRen, ptr %1, i64 0, i32 13
  %4607 = load i32, ptr %4606, align 4, !tbaa !161
  %4608 = icmp eq i32 %4607, 0
  br i1 %4608, label %4609, label %4613

4609:                                             ; preds = %4605
  %4610 = getelementptr inbounds %struct.ObjectRen, ptr %1, i64 0, i32 12
  %4611 = load i32, ptr %4610, align 8, !tbaa !214
  %4612 = icmp eq i32 %4611, 0
  br i1 %4612, label %5177, label %4613

4613:                                             ; preds = %4609, %4605, %4601, %4596
  %4614 = getelementptr inbounds %struct.Object, ptr %4597, i64 0, i32 3
  %4615 = load i16, ptr %4614, align 8, !tbaa !115
  %4616 = icmp eq i16 %4615, 1
  br i1 %4616, label %4634, label %4617

4617:                                             ; preds = %4613
  %4618 = getelementptr inbounds %struct.Object, ptr %4597, i64 0, i32 31
  %4619 = load i32, ptr %4618, align 8, !tbaa !243
  %4620 = icmp slt i32 %4619, 1
  br i1 %4620, label %4634, label %4625

4621:                                             ; preds = %4625
  %4622 = add nuw nsw i32 %4626, 1
  %4623 = load i32, ptr %4618, align 8, !tbaa !243
  %4624 = icmp slt i32 %4626, %4623
  br i1 %4624, label %4625, label %4634, !llvm.loop !535

4625:                                             ; preds = %4617, %4621
  %4626 = phi i32 [ %4622, %4621 ], [ 1, %4617 ]
  %4627 = trunc i32 %4626 to i16
  %4628 = call fastcc ptr @give_render_material(ptr noundef %0, ptr noundef nonnull %4597, i16 noundef signext %4627)
  %4629 = getelementptr inbounds %struct.Material, ptr %4628, i64 0, i32 91
  %4630 = load i16, ptr %4629, align 2, !tbaa !536
  %4631 = and i16 %4630, 4096
  %4632 = icmp eq i16 %4631, 0
  br i1 %4632, label %4621, label %4633

4633:                                             ; preds = %4625
  call fastcc void @displace(ptr noundef %0, ptr noundef %1)
  br label %4634

4634:                                             ; preds = %4621, %4633, %4617, %4613
  %4635 = icmp eq i32 %2, 0
  br i1 %4635, label %4636, label %5177

4636:                                             ; preds = %4634
  %4637 = getelementptr inbounds %struct.Object, ptr %4597, i64 0, i32 116
  store float 0.000000e+00, ptr %4637, align 4, !tbaa !603
  %4638 = getelementptr %struct.Render, ptr %0, i64 0, i32 45, i32 47
  %4639 = load i32, ptr %4638, align 8, !tbaa !55
  %4640 = and i32 %4639, 65538
  %4641 = icmp eq i32 %4640, 65538
  br i1 %4641, label %4642, label %4754

4642:                                             ; preds = %4636
  %4643 = getelementptr inbounds %struct.ObjectRen, ptr %1, i64 0, i32 11
  %4644 = load i32, ptr %4643, align 4, !tbaa !499
  %4645 = icmp sgt i32 %4644, 0
  br i1 %4645, label %4646, label %4754

4646:                                             ; preds = %4642, %4732
  %4647 = phi i32 [ %4735, %4732 ], [ 0, %4642 ]
  %4648 = phi i32 [ %4734, %4732 ], [ 0, %4642 ]
  %4649 = phi float [ %4733, %4732 ], [ 0.000000e+00, %4642 ]
  %4650 = call ptr @RE_findOrAddVlak(ptr noundef nonnull %1, i32 noundef %4647) #16
  %4651 = getelementptr inbounds %struct.VlakRen, ptr %4650, i64 0, i32 7
  %4652 = load i8, ptr %4651, align 1, !tbaa !508
  %4653 = and i8 %4652, 5
  %4654 = icmp eq i8 %4653, 1
  br i1 %4654, label %4655, label %4732

4655:                                             ; preds = %4646
  %4656 = getelementptr inbounds %struct.VlakRen, ptr %4650, i64 0, i32 4
  %4657 = load ptr, ptr %4650, align 8, !tbaa !502
  %4658 = getelementptr inbounds %struct.VertRen, ptr %4657, i64 0, i32 1
  %4659 = load float, ptr %4656, align 4, !tbaa !13
  %4660 = load float, ptr %4658, align 4, !tbaa !13
  %4661 = fmul fast float %4660, %4659
  %4662 = getelementptr inbounds %struct.VlakRen, ptr %4650, i64 0, i32 4, i64 1
  %4663 = getelementptr inbounds %struct.VertRen, ptr %4657, i64 0, i32 1, i64 1
  %4664 = getelementptr inbounds %struct.VlakRen, ptr %4650, i64 0, i32 1
  %4665 = load ptr, ptr %4664, align 8, !tbaa !504
  %4666 = getelementptr inbounds %struct.VertRen, ptr %4665, i64 0, i32 1
  %4667 = load float, ptr %4666, align 4, !tbaa !13
  %4668 = fmul fast float %4667, %4659
  %4669 = getelementptr inbounds %struct.VertRen, ptr %4665, i64 0, i32 1, i64 1
  %4670 = getelementptr inbounds %struct.VlakRen, ptr %4650, i64 0, i32 2
  %4671 = load ptr, ptr %4670, align 8, !tbaa !505
  %4672 = getelementptr inbounds %struct.VertRen, ptr %4671, i64 0, i32 1
  %4673 = load float, ptr %4672, align 4, !tbaa !13
  %4674 = fmul fast float %4673, %4659
  %4675 = getelementptr inbounds %struct.VertRen, ptr %4671, i64 0, i32 1, i64 1
  %4676 = load <2 x float>, ptr %4662, align 4, !tbaa !13
  %4677 = load <2 x float>, ptr %4663, align 4, !tbaa !13
  %4678 = fmul fast <2 x float> %4677, %4676
  %4679 = extractelement <2 x float> %4678, i64 0
  %4680 = fadd fast float %4679, %4661
  %4681 = extractelement <2 x float> %4678, i64 1
  %4682 = fadd fast float %4680, %4681
  %4683 = call fast float @llvm.fabs.f32(float %4682)
  %4684 = fcmp fast ogt float %4683, 0x3FECCCCCC0000000
  %4685 = select i1 %4684, float %4683, float -0.000000e+00
  %4686 = fadd fast float %4685, %4649
  %4687 = zext i1 %4684 to i32
  %4688 = add nsw i32 %4648, %4687
  %4689 = load <2 x float>, ptr %4669, align 4, !tbaa !13
  %4690 = fmul fast <2 x float> %4689, %4676
  %4691 = extractelement <2 x float> %4690, i64 0
  %4692 = fadd fast float %4691, %4668
  %4693 = extractelement <2 x float> %4690, i64 1
  %4694 = fadd fast float %4692, %4693
  %4695 = call fast float @llvm.fabs.f32(float %4694)
  %4696 = fcmp fast ogt float %4695, 0x3FECCCCCC0000000
  %4697 = select i1 %4696, float %4695, float -0.000000e+00
  %4698 = fadd fast float %4686, %4697
  %4699 = zext i1 %4696 to i32
  %4700 = add nsw i32 %4688, %4699
  %4701 = load <2 x float>, ptr %4675, align 4, !tbaa !13
  %4702 = fmul fast <2 x float> %4701, %4676
  %4703 = extractelement <2 x float> %4702, i64 0
  %4704 = fadd fast float %4703, %4674
  %4705 = extractelement <2 x float> %4702, i64 1
  %4706 = fadd fast float %4704, %4705
  %4707 = call fast float @llvm.fabs.f32(float %4706)
  %4708 = fcmp fast ogt float %4707, 0x3FECCCCCC0000000
  %4709 = select i1 %4708, float %4707, float -0.000000e+00
  %4710 = fadd fast float %4698, %4709
  %4711 = zext i1 %4708 to i32
  %4712 = add nsw i32 %4700, %4711
  %4713 = getelementptr inbounds %struct.VlakRen, ptr %4650, i64 0, i32 3
  %4714 = load ptr, ptr %4713, align 8, !tbaa !506
  %4715 = icmp eq ptr %4714, null
  br i1 %4715, label %4732, label %4716

4716:                                             ; preds = %4655
  %4717 = getelementptr inbounds %struct.VertRen, ptr %4714, i64 0, i32 1
  %4718 = load float, ptr %4717, align 4, !tbaa !13
  %4719 = fmul fast float %4718, %4659
  %4720 = getelementptr inbounds %struct.VertRen, ptr %4714, i64 0, i32 1, i64 1
  %4721 = load <2 x float>, ptr %4720, align 4, !tbaa !13
  %4722 = fmul fast <2 x float> %4721, %4676
  %4723 = extractelement <2 x float> %4722, i64 0
  %4724 = fadd fast float %4723, %4719
  %4725 = extractelement <2 x float> %4722, i64 1
  %4726 = fadd fast float %4724, %4725
  %4727 = call fast float @llvm.fabs.f32(float %4726)
  %4728 = fcmp fast ogt float %4727, 0x3FECCCCCC0000000
  br i1 %4728, label %4729, label %4732

4729:                                             ; preds = %4716
  %4730 = fadd fast float %4727, %4710
  %4731 = add nsw i32 %4712, 1
  br label %4732

4732:                                             ; preds = %4729, %4716, %4655, %4646
  %4733 = phi float [ %4730, %4729 ], [ %4710, %4716 ], [ %4710, %4655 ], [ %4649, %4646 ]
  %4734 = phi i32 [ %4731, %4729 ], [ %4712, %4716 ], [ %4712, %4655 ], [ %4648, %4646 ]
  %4735 = add nuw nsw i32 %4647, 1
  %4736 = load i32, ptr %4643, align 4, !tbaa !499
  %4737 = icmp slt i32 %4735, %4736
  br i1 %4737, label %4646, label %4738, !llvm.loop !604

4738:                                             ; preds = %4732
  %4739 = icmp eq i32 %4734, 0
  br i1 %4739, label %4754, label %4740

4740:                                             ; preds = %4738
  %4741 = sitofp i32 %4734 to float
  %4742 = fdiv fast float %4733, %4741
  %4743 = fcmp fast ugt float %4742, -1.000000e+00
  br i1 %4743, label %4744, label %4748

4744:                                             ; preds = %4740
  %4745 = fcmp fast ult float %4742, 1.000000e+00
  br i1 %4745, label %4746, label %4748

4746:                                             ; preds = %4744
  %4747 = call fast nofpclass(nan inf) float @acosf(float noundef nofpclass(nan inf) %4742) #17
  br label %4748

4748:                                             ; preds = %4746, %4744, %4740
  %4749 = phi float [ %4747, %4746 ], [ 0x400921FB60000000, %4740 ], [ 0.000000e+00, %4744 ]
  %4750 = fsub fast float 0x3FF921FB60000000, %4749
  %4751 = call fast float @llvm.cos.f32(float %4750)
  %4752 = load ptr, ptr %53, align 8, !tbaa !148
  %4753 = getelementptr inbounds %struct.Object, ptr %4752, i64 0, i32 116
  store float %4751, ptr %4753, align 4, !tbaa !603
  br label %4754

4754:                                             ; preds = %4748, %4738, %4642, %4636
  %4755 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 4
  %4756 = load i16, ptr %4755, align 8, !tbaa !234
  %4757 = and i16 %4756, 64
  %4758 = icmp eq i16 %4757, 0
  br i1 %4758, label %4765, label %4759

4759:                                             ; preds = %4754
  %4760 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 45, i32 77
  %4761 = load i16, ptr %4760, align 2, !tbaa !605
  %4762 = icmp eq i16 %4761, 0
  br i1 %4762, label %4765, label %4763

4763:                                             ; preds = %4759
  %4764 = sext i16 %4761 to i32
  call fastcc void @split_quads(ptr noundef %1, i32 noundef %4764)
  br label %4982

4765:                                             ; preds = %4759, %4754
  %4766 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 44
  %4767 = load ptr, ptr %4766, align 8, !tbaa !17
  %4768 = call zeroext i8 @BKE_object_is_animated(ptr noundef %4767, ptr noundef %4597) #16
  %4769 = icmp eq i8 %4768, 0
  br i1 %4769, label %4771, label %4770

4770:                                             ; preds = %4765
  call fastcc void @split_quads(ptr noundef %1, i32 noundef 1)
  br label %4982

4771:                                             ; preds = %4765
  %4772 = load i32, ptr %4638, align 8, !tbaa !55
  %4773 = and i32 %4772, 16777216
  %4774 = icmp eq i32 %4773, 0
  br i1 %4774, label %4780, label %4775

4775:                                             ; preds = %4771
  %4776 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 45, i32 95
  %4777 = load i32, ptr %4776, align 8, !tbaa !606
  %4778 = and i32 %4777, 1
  %4779 = icmp eq i32 %4778, 0
  br i1 %4779, label %4780, label %4982

4780:                                             ; preds = %4775, %4771
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %4) #16
  %4781 = getelementptr inbounds %struct.ObjectRen, ptr %1, i64 0, i32 11
  %4782 = load i32, ptr %4781, align 4, !tbaa !499
  %4783 = icmp sgt i32 %4782, 0
  br i1 %4783, label %4784, label %4981

4784:                                             ; preds = %4780
  %4785 = getelementptr inbounds float, ptr %4, i64 1
  %4786 = getelementptr inbounds float, ptr %4, i64 2
  br label %4787

4787:                                             ; preds = %4979, %4784
  %4788 = phi i32 [ %4782, %4784 ], [ %4789, %4979 ]
  %4789 = add nsw i32 %4788, -1
  %4790 = call ptr @RE_findOrAddVlak(ptr noundef %1, i32 noundef %4789) #16
  %4791 = getelementptr inbounds %struct.VlakRen, ptr %4790, i64 0, i32 3
  %4792 = load ptr, ptr %4791, align 8, !tbaa !506
  %4793 = icmp eq ptr %4792, null
  br i1 %4793, label %4979, label %4794

4794:                                             ; preds = %4787
  %4795 = getelementptr inbounds %struct.VlakRen, ptr %4790, i64 0, i32 7
  %4796 = load i8, ptr %4795, align 1, !tbaa !508
  %4797 = and i8 %4796, 4
  %4798 = icmp eq i8 %4797, 0
  br i1 %4798, label %4799, label %4979

4799:                                             ; preds = %4794
  %4800 = getelementptr inbounds %struct.VlakRen, ptr %4790, i64 0, i32 5
  %4801 = load ptr, ptr %4800, align 8, !tbaa !507
  %4802 = getelementptr inbounds %struct.Material, ptr %4801, i64 0, i32 2
  %4803 = load i16, ptr %4802, align 8, !tbaa !139
  %4804 = icmp eq i16 %4803, 3
  br i1 %4804, label %4979, label %4805

4805:                                             ; preds = %4799
  %4806 = load ptr, ptr %4790, align 8, !tbaa !502
  %4807 = getelementptr inbounds %struct.VlakRen, ptr %4790, i64 0, i32 1
  %4808 = load ptr, ptr %4807, align 8, !tbaa !504
  %4809 = getelementptr inbounds %struct.VlakRen, ptr %4790, i64 0, i32 2
  %4810 = load ptr, ptr %4809, align 8, !tbaa !505
  %4811 = load <2 x float>, ptr %4806, align 4, !tbaa !13
  %4812 = load <2 x float>, ptr %4808, align 4, !tbaa !13
  %4813 = fsub fast <2 x float> %4811, %4812
  store <2 x float> %4813, ptr %4, align 8, !tbaa !13
  %4814 = getelementptr inbounds float, ptr %4806, i64 2
  %4815 = load float, ptr %4814, align 4, !tbaa !13
  %4816 = getelementptr inbounds float, ptr %4808, i64 2
  %4817 = load float, ptr %4816, align 4, !tbaa !13
  %4818 = fsub fast float %4815, %4817
  store float %4818, ptr %4786, align 8, !tbaa !13
  %4819 = call fast <2 x float> @llvm.fabs.v2f32(<2 x float> %4813)
  %4820 = fcmp fast olt <2 x float> %4819, <float 0x3EB4000000000000, float 0x3EB4000000000000>
  %4821 = extractelement <2 x i1> %4820, i64 0
  %4822 = extractelement <2 x i1> %4820, i64 1
  %4823 = select i1 %4821, i1 %4822, i1 false
  %4824 = call fast float @llvm.fabs.f32(float %4818)
  %4825 = fcmp fast olt float %4824, 0x3EB4000000000000
  %4826 = select i1 %4823, i1 %4825, i1 false
  br i1 %4826, label %4827, label %4828

4827:                                             ; preds = %4805
  store ptr %4808, ptr %4790, align 8, !tbaa !502
  store ptr %4810, ptr %4807, align 8, !tbaa !504
  store ptr %4792, ptr %4809, align 8, !tbaa !505
  store ptr null, ptr %4791, align 8, !tbaa !506
  br label %4979

4828:                                             ; preds = %4805
  %4829 = load <2 x float>, ptr %4808, align 4, !tbaa !13
  %4830 = load <2 x float>, ptr %4810, align 4, !tbaa !13
  %4831 = fsub fast <2 x float> %4829, %4830
  store <2 x float> %4831, ptr %4, align 8, !tbaa !13
  %4832 = load float, ptr %4816, align 4, !tbaa !13
  %4833 = getelementptr inbounds float, ptr %4810, i64 2
  %4834 = load float, ptr %4833, align 4, !tbaa !13
  %4835 = fsub fast float %4832, %4834
  store float %4835, ptr %4786, align 8, !tbaa !13
  %4836 = call fast <2 x float> @llvm.fabs.v2f32(<2 x float> %4831)
  %4837 = fcmp fast olt <2 x float> %4836, <float 0x3EB4000000000000, float 0x3EB4000000000000>
  %4838 = extractelement <2 x i1> %4837, i64 0
  %4839 = extractelement <2 x i1> %4837, i64 1
  %4840 = select i1 %4838, i1 %4839, i1 false
  %4841 = call fast float @llvm.fabs.f32(float %4835)
  %4842 = fcmp fast olt float %4841, 0x3EB4000000000000
  %4843 = select i1 %4840, i1 %4842, i1 false
  br i1 %4843, label %4844, label %4845

4844:                                             ; preds = %4828
  store ptr %4810, ptr %4807, align 8, !tbaa !504
  store ptr %4792, ptr %4809, align 8, !tbaa !505
  store ptr null, ptr %4791, align 8, !tbaa !506
  br label %4979

4845:                                             ; preds = %4828
  %4846 = load <2 x float>, ptr %4810, align 4, !tbaa !13
  %4847 = load <2 x float>, ptr %4792, align 4, !tbaa !13
  %4848 = fsub fast <2 x float> %4846, %4847
  store <2 x float> %4848, ptr %4, align 8, !tbaa !13
  %4849 = load float, ptr %4833, align 4, !tbaa !13
  %4850 = getelementptr inbounds float, ptr %4792, i64 2
  %4851 = load float, ptr %4850, align 4, !tbaa !13
  %4852 = fsub fast float %4849, %4851
  store float %4852, ptr %4786, align 8, !tbaa !13
  %4853 = call fast <2 x float> @llvm.fabs.v2f32(<2 x float> %4848)
  %4854 = fcmp fast olt <2 x float> %4853, <float 0x3EB4000000000000, float 0x3EB4000000000000>
  %4855 = extractelement <2 x i1> %4854, i64 0
  %4856 = extractelement <2 x i1> %4854, i64 1
  %4857 = select i1 %4855, i1 %4856, i1 false
  %4858 = call fast float @llvm.fabs.f32(float %4852)
  %4859 = fcmp fast olt float %4858, 0x3EB4000000000000
  %4860 = select i1 %4857, i1 %4859, i1 false
  br i1 %4860, label %4861, label %4862

4861:                                             ; preds = %4845
  store ptr null, ptr %4791, align 8, !tbaa !506
  br label %4979

4862:                                             ; preds = %4845
  %4863 = load <2 x float>, ptr %4792, align 4, !tbaa !13
  %4864 = load <2 x float>, ptr %4806, align 4, !tbaa !13
  %4865 = fsub fast <2 x float> %4863, %4864
  store <2 x float> %4865, ptr %4, align 8, !tbaa !13
  %4866 = load float, ptr %4850, align 4, !tbaa !13
  %4867 = load float, ptr %4814, align 4, !tbaa !13
  %4868 = fsub fast float %4866, %4867
  store float %4868, ptr %4786, align 8, !tbaa !13
  %4869 = call fast <2 x float> @llvm.fabs.v2f32(<2 x float> %4865)
  %4870 = fcmp fast olt <2 x float> %4869, <float 0x3EB4000000000000, float 0x3EB4000000000000>
  %4871 = extractelement <2 x i1> %4870, i64 0
  %4872 = extractelement <2 x i1> %4870, i64 1
  %4873 = select i1 %4871, i1 %4872, i1 false
  %4874 = call fast float @llvm.fabs.f32(float %4868)
  %4875 = fcmp fast olt float %4874, 0x3EB4000000000000
  %4876 = select i1 %4873, i1 %4875, i1 false
  br i1 %4876, label %4877, label %4878

4877:                                             ; preds = %4862
  store ptr null, ptr %4791, align 8, !tbaa !506
  br label %4979

4878:                                             ; preds = %4862
  %4879 = call fast nofpclass(nan inf) float @normal_tri_v3(ptr noundef nonnull %4, ptr noundef nonnull %4792, ptr noundef nonnull %4810, ptr noundef nonnull %4806) #16
  %4880 = fcmp fast oeq float %4879, 0.000000e+00
  br i1 %4880, label %4881, label %4886

4881:                                             ; preds = %4878
  %4882 = load ptr, ptr %4791, align 8, !tbaa !506
  %4883 = load ptr, ptr %4807, align 8, !tbaa !504
  %4884 = load ptr, ptr %4790, align 8, !tbaa !502
  %4885 = call fast nofpclass(nan inf) float @normal_tri_v3(ptr noundef nonnull %4, ptr noundef %4882, ptr noundef %4883, ptr noundef %4884) #16
  br label %4886

4886:                                             ; preds = %4881, %4878
  %4887 = getelementptr inbounds %struct.VlakRen, ptr %4790, i64 0, i32 4
  %4888 = load float, ptr %4, align 8, !tbaa !13
  %4889 = load float, ptr %4887, align 4, !tbaa !13
  %4890 = fmul fast float %4889, %4888
  %4891 = getelementptr inbounds %struct.VlakRen, ptr %4790, i64 0, i32 4, i64 1
  %4892 = load <2 x float>, ptr %4785, align 4, !tbaa !13
  %4893 = load <2 x float>, ptr %4891, align 4, !tbaa !13
  %4894 = fmul fast <2 x float> %4893, %4892
  %4895 = extractelement <2 x float> %4894, i64 0
  %4896 = fadd fast float %4895, %4890
  %4897 = extractelement <2 x float> %4894, i64 1
  %4898 = fadd fast float %4896, %4897
  %4899 = call fast float @llvm.fabs.f32(float %4898)
  %4900 = fcmp fast olt float %4899, 0x3FEFFFF580000000
  br i1 %4900, label %4901, label %4976

4901:                                             ; preds = %4886
  %4902 = call ptr @RE_vlakren_copy(ptr noundef %1, ptr noundef nonnull %4790) #16
  %4903 = getelementptr inbounds %struct.VlakRen, ptr %4902, i64 0, i32 7
  %4904 = load i8, ptr %4903, align 1, !tbaa !508
  %4905 = or i8 %4904, 16
  store i8 %4905, ptr %4903, align 1, !tbaa !508
  %4906 = load ptr, ptr %4790, align 8, !tbaa !502
  %4907 = load ptr, ptr %4807, align 8, !tbaa !504
  %4908 = load ptr, ptr %4809, align 8, !tbaa !505
  %4909 = call fast nofpclass(nan inf) float @normal_tri_v3(ptr noundef nonnull %4, ptr noundef %4906, ptr noundef %4907, ptr noundef %4908) #16
  %4910 = load ptr, ptr %4790, align 8, !tbaa !502
  %4911 = getelementptr inbounds %struct.VertRen, ptr %4910, i64 0, i32 1
  %4912 = load float, ptr %4, align 8, !tbaa !13
  %4913 = load float, ptr %4911, align 4, !tbaa !13
  %4914 = fmul fast float %4913, %4912
  %4915 = getelementptr inbounds %struct.VertRen, ptr %4910, i64 0, i32 1, i64 1
  %4916 = load <2 x float>, ptr %4785, align 4, !tbaa !13
  %4917 = load <2 x float>, ptr %4915, align 4, !tbaa !13
  %4918 = fmul fast <2 x float> %4917, %4916
  %4919 = extractelement <2 x float> %4918, i64 0
  %4920 = fadd fast float %4919, %4914
  %4921 = extractelement <2 x float> %4918, i64 1
  %4922 = fadd fast float %4920, %4921
  %4923 = load ptr, ptr %4807, align 8, !tbaa !504
  %4924 = load ptr, ptr %4809, align 8, !tbaa !505
  %4925 = load ptr, ptr %4791, align 8, !tbaa !506
  %4926 = call fast nofpclass(nan inf) float @normal_tri_v3(ptr noundef nonnull %4, ptr noundef %4923, ptr noundef %4924, ptr noundef %4925) #16
  %4927 = load ptr, ptr %4807, align 8, !tbaa !504
  %4928 = getelementptr inbounds %struct.VertRen, ptr %4927, i64 0, i32 1
  %4929 = load float, ptr %4, align 8, !tbaa !13
  %4930 = load float, ptr %4928, align 4, !tbaa !13
  %4931 = fmul fast float %4930, %4929
  %4932 = getelementptr inbounds %struct.VertRen, ptr %4927, i64 0, i32 1, i64 1
  %4933 = load <2 x float>, ptr %4785, align 4, !tbaa !13
  %4934 = load <2 x float>, ptr %4932, align 4, !tbaa !13
  %4935 = fmul fast <2 x float> %4934, %4933
  %4936 = extractelement <2 x float> %4935, i64 0
  %4937 = fadd fast float %4936, %4931
  %4938 = extractelement <2 x float> %4935, i64 1
  %4939 = fadd fast float %4937, %4938
  %4940 = call fast float @llvm.fabs.f32(float %4922)
  %4941 = call fast float @llvm.fabs.f32(float %4939)
  %4942 = fcmp fast uge float %4940, %4941
  %4943 = load i8, ptr %4795, align 1, !tbaa !508
  %4944 = and i8 %4943, -33
  %4945 = select i1 %4942, i8 0, i8 32
  %4946 = or i8 %4945, %4944
  store i8 %4946, ptr %4795, align 1, !tbaa !508
  br i1 %4942, label %4953, label %4947

4947:                                             ; preds = %4901
  %4948 = load ptr, ptr %4809, align 8, !tbaa !505
  %4949 = load ptr, ptr %4791, align 8, !tbaa !506
  %4950 = getelementptr inbounds %struct.VlakRen, ptr %4902, i64 0, i32 2
  store ptr %4949, ptr %4950, align 8, !tbaa !505
  store ptr %4949, ptr %4809, align 8, !tbaa !505
  %4951 = load i8, ptr %4903, align 1, !tbaa !508
  %4952 = or i8 %4951, 32
  br label %4960

4953:                                             ; preds = %4901
  %4954 = load ptr, ptr %4790, align 8, !tbaa !502
  %4955 = load ptr, ptr %4809, align 8, !tbaa !505
  %4956 = load ptr, ptr %4791, align 8, !tbaa !506
  %4957 = getelementptr inbounds %struct.VlakRen, ptr %4902, i64 0, i32 2
  store ptr %4956, ptr %4957, align 8, !tbaa !505
  %4958 = load i8, ptr %4903, align 1, !tbaa !508
  %4959 = and i8 %4958, -33
  br label %4960

4960:                                             ; preds = %4953, %4947
  %4961 = phi ptr [ %4954, %4953 ], [ %4927, %4947 ]
  %4962 = phi ptr [ %4955, %4953 ], [ %4948, %4947 ]
  %4963 = phi i8 [ %4959, %4953 ], [ %4952, %4947 ]
  store ptr %4961, ptr %4902, align 8
  %4964 = getelementptr inbounds %struct.VlakRen, ptr %4902, i64 0, i32 1
  store ptr %4962, ptr %4964, align 8
  store i8 %4963, ptr %4903, align 1, !tbaa !508
  %4965 = getelementptr inbounds %struct.VlakRen, ptr %4902, i64 0, i32 3
  store ptr null, ptr %4965, align 8, !tbaa !506
  store ptr null, ptr %4791, align 8, !tbaa !506
  %4966 = load ptr, ptr %4809, align 8, !tbaa !505
  %4967 = load ptr, ptr %4807, align 8, !tbaa !504
  %4968 = load ptr, ptr %4790, align 8, !tbaa !502
  %4969 = call fast nofpclass(nan inf) float @normal_tri_v3(ptr noundef nonnull %4887, ptr noundef %4966, ptr noundef %4967, ptr noundef %4968) #16
  %4970 = getelementptr inbounds %struct.VlakRen, ptr %4902, i64 0, i32 4
  %4971 = getelementptr inbounds %struct.VlakRen, ptr %4902, i64 0, i32 2
  %4972 = load ptr, ptr %4971, align 8, !tbaa !505
  %4973 = load ptr, ptr %4964, align 8, !tbaa !504
  %4974 = load ptr, ptr %4902, align 8, !tbaa !502
  %4975 = call fast nofpclass(nan inf) float @normal_tri_v3(ptr noundef nonnull %4970, ptr noundef %4972, ptr noundef %4973, ptr noundef %4974) #16
  br label %4979

4976:                                             ; preds = %4886
  %4977 = load i8, ptr %4795, align 1, !tbaa !508
  %4978 = and i8 %4977, -33
  store i8 %4978, ptr %4795, align 1, !tbaa !508
  br label %4979

4979:                                             ; preds = %4976, %4960, %4877, %4861, %4844, %4827, %4799, %4794, %4787
  %4980 = icmp ugt i32 %4788, 1
  br i1 %4980, label %4787, label %4981, !llvm.loop !607

4981:                                             ; preds = %4979, %4780
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %4) #16
  br label %4982

4982:                                             ; preds = %4981, %4775, %4770, %4763
  %4983 = getelementptr inbounds %struct.ObjectRen, ptr %1, i64 0, i32 11
  %4984 = load i32, ptr %4983, align 4, !tbaa !499
  %4985 = add nsw i32 %4984, -1
  %4986 = icmp sgt i32 %4984, 0
  br i1 %4986, label %4987, label %5079

4987:                                             ; preds = %4982
  %4988 = load i32, ptr %4638, align 8, !tbaa !55
  %4989 = getelementptr i8, ptr %0, i64 98
  %4990 = load i16, ptr %4989, align 2, !tbaa !51
  %4991 = freeze i32 %4988
  %4992 = and i32 %4991, 65536
  %4993 = icmp eq i32 %4992, 0
  %4994 = freeze i16 %4990
  %4995 = icmp eq i16 %4994, 0
  br i1 %4995, label %4996, label %5018

4996:                                             ; preds = %4987
  br i1 %4993, label %4997, label %5002

4997:                                             ; preds = %4996, %4997
  %4998 = phi i32 [ %5000, %4997 ], [ %4985, %4996 ]
  %4999 = call ptr @RE_findOrAddVlak(ptr noundef %1, i32 noundef %4998) #16
  %5000 = add nsw i32 %4998, -1
  %5001 = icmp eq i32 %4998, 0
  br i1 %5001, label %5079, label %4997, !llvm.loop !608

5002:                                             ; preds = %4996, %5015
  %5003 = phi i32 [ %5016, %5015 ], [ %4985, %4996 ]
  %5004 = call ptr @RE_findOrAddVlak(ptr noundef %1, i32 noundef %5003) #16
  %5005 = getelementptr inbounds %struct.VlakRen, ptr %5004, i64 0, i32 5
  %5006 = load ptr, ptr %5005, align 8, !tbaa !507
  %5007 = getelementptr inbounds %struct.Material, ptr %5006, i64 0, i32 51
  %5008 = load i32, ptr %5007, align 4, !tbaa !102
  %5009 = and i32 %5008, 1
  %5010 = icmp eq i32 %5009, 0
  br i1 %5010, label %5015, label %5011

5011:                                             ; preds = %5002
  %5012 = getelementptr inbounds %struct.VlakRen, ptr %5004, i64 0, i32 7
  %5013 = load i8, ptr %5012, align 1, !tbaa !508
  %5014 = or i8 %5013, -128
  store i8 %5014, ptr %5012, align 1, !tbaa !508
  br label %5015

5015:                                             ; preds = %5011, %5002
  %5016 = add nsw i32 %5003, -1
  %5017 = icmp sgt i32 %5003, 0
  br i1 %5017, label %5002, label %5079, !llvm.loop !608

5018:                                             ; preds = %4987
  br i1 %4993, label %5019, label %5035

5019:                                             ; preds = %5018, %5032
  %5020 = phi i32 [ %5033, %5032 ], [ %4985, %5018 ]
  %5021 = call ptr @RE_findOrAddVlak(ptr noundef %1, i32 noundef %5020) #16
  %5022 = getelementptr inbounds %struct.VlakRen, ptr %5021, i64 0, i32 5
  %5023 = load ptr, ptr %5022, align 8, !tbaa !507
  %5024 = getelementptr inbounds %struct.Material, ptr %5023, i64 0, i32 51
  %5025 = load i32, ptr %5024, align 4, !tbaa !102
  %5026 = and i32 %5025, 8388608
  %5027 = icmp eq i32 %5026, 0
  br i1 %5027, label %5032, label %5028

5028:                                             ; preds = %5019
  %5029 = getelementptr inbounds %struct.VlakRen, ptr %5021, i64 0, i32 7
  %5030 = load i8, ptr %5029, align 1, !tbaa !508
  %5031 = or i8 %5030, 8
  store i8 %5031, ptr %5029, align 1, !tbaa !508
  br label %5032

5032:                                             ; preds = %5028, %5019
  %5033 = add nsw i32 %5020, -1
  %5034 = icmp sgt i32 %5020, 0
  br i1 %5034, label %5019, label %5079, !llvm.loop !608

5035:                                             ; preds = %5018, %5076
  %5036 = phi i32 [ %5077, %5076 ], [ %4985, %5018 ]
  %5037 = call ptr @RE_findOrAddVlak(ptr noundef %1, i32 noundef %5036) #16
  %5038 = getelementptr inbounds %struct.VlakRen, ptr %5037, i64 0, i32 5
  %5039 = load ptr, ptr %5038, align 8, !tbaa !507
  %5040 = getelementptr inbounds %struct.Material, ptr %5039, i64 0, i32 51
  %5041 = load i32, ptr %5040, align 4, !tbaa !102
  %5042 = and i32 %5041, 1
  %5043 = icmp eq i32 %5042, 0
  br i1 %5043, label %5048, label %5044

5044:                                             ; preds = %5035
  %5045 = getelementptr inbounds %struct.VlakRen, ptr %5037, i64 0, i32 7
  %5046 = load i8, ptr %5045, align 1, !tbaa !508
  %5047 = or i8 %5046, -128
  store i8 %5047, ptr %5045, align 1, !tbaa !508
  br label %5048

5048:                                             ; preds = %5044, %5035
  %5049 = and i32 %5041, 8388608
  %5050 = icmp eq i32 %5049, 0
  br i1 %5050, label %5051, label %5072

5051:                                             ; preds = %5048
  %5052 = and i32 %5041, 4
  %5053 = icmp eq i32 %5052, 0
  br i1 %5053, label %5054, label %5076

5054:                                             ; preds = %5051
  %5055 = getelementptr inbounds %struct.Material, ptr %5039, i64 0, i32 2
  %5056 = load i16, ptr %5055, align 8, !tbaa !139
  %5057 = icmp eq i16 %5056, 2
  br i1 %5057, label %5076, label %5058

5058:                                             ; preds = %5054
  %5059 = and i32 %5041, 262144
  %5060 = icmp ne i32 %5059, 0
  %5061 = and i32 %5041, 196608
  %5062 = icmp eq i32 %5061, 196608
  %5063 = or i1 %5060, %5062
  br i1 %5063, label %5064, label %5076

5064:                                             ; preds = %5058
  %5065 = getelementptr inbounds %struct.Material, ptr %5039, i64 0, i32 41
  %5066 = load float, ptr %5065, align 4, !tbaa !609
  %5067 = fcmp fast oeq float %5066, 1.000000e+00
  br i1 %5067, label %5068, label %5076

5068:                                             ; preds = %5064
  %5069 = getelementptr inbounds %struct.Material, ptr %5039, i64 0, i32 42
  %5070 = load float, ptr %5069, align 8, !tbaa !610
  %5071 = fcmp fast oeq float %5070, 1.000000e+00
  br i1 %5071, label %5072, label %5076

5072:                                             ; preds = %5068, %5048
  %5073 = getelementptr inbounds %struct.VlakRen, ptr %5037, i64 0, i32 7
  %5074 = load i8, ptr %5073, align 1, !tbaa !508
  %5075 = or i8 %5074, 8
  store i8 %5075, ptr %5073, align 1, !tbaa !508
  br label %5076

5076:                                             ; preds = %5072, %5068, %5064, %5058, %5054, %5051
  %5077 = add nsw i32 %5036, -1
  %5078 = icmp sgt i32 %5036, 0
  br i1 %5078, label %5035, label %5079, !llvm.loop !608

5079:                                             ; preds = %5076, %5032, %5015, %4997, %4982
  %5080 = getelementptr inbounds [3 x float], ptr %5, i64 0, i64 2
  store float 0x46293E5940000000, ptr %5080, align 8, !tbaa !13
  %5081 = getelementptr inbounds [3 x float], ptr %5, i64 0, i64 1
  store <2 x float> <float 0x46293E5940000000, float 0x46293E5940000000>, ptr %5, align 8, !tbaa !13
  %5082 = getelementptr inbounds [3 x float], ptr %6, i64 0, i64 2
  store float 0xC6293E5940000000, ptr %5082, align 8, !tbaa !13
  %5083 = getelementptr inbounds [3 x float], ptr %6, i64 0, i64 1
  store <2 x float> <float 0xC6293E5940000000, float 0xC6293E5940000000>, ptr %6, align 8, !tbaa !13
  %5084 = load i32, ptr %4598, align 8, !tbaa !177
  %5085 = icmp sgt i32 %5084, 0
  br i1 %5085, label %5086, label %5106

5086:                                             ; preds = %5079
  %5087 = getelementptr inbounds %struct.ObjectRen, ptr %1, i64 0, i32 18
  br label %5088

5088:                                             ; preds = %5101, %5086
  %5089 = phi ptr [ null, %5086 ], [ %5102, %5101 ]
  %5090 = phi i32 [ 0, %5086 ], [ %5103, %5101 ]
  %5091 = and i32 %5090, 255
  %5092 = icmp eq i32 %5091, 0
  br i1 %5092, label %5093, label %5099

5093:                                             ; preds = %5088
  %5094 = load ptr, ptr %5087, align 8, !tbaa !196
  %5095 = lshr i32 %5090, 8
  %5096 = zext i32 %5095 to i64
  %5097 = getelementptr inbounds %struct.VertTableNode, ptr %5094, i64 %5096
  %5098 = load ptr, ptr %5097, align 8, !tbaa !197
  br label %5101

5099:                                             ; preds = %5088
  %5100 = getelementptr inbounds %struct.VertRen, ptr %5089, i64 1
  br label %5101

5101:                                             ; preds = %5099, %5093
  %5102 = phi ptr [ %5098, %5093 ], [ %5100, %5099 ]
  call void @minmax_v3v3_v3(ptr noundef nonnull %5, ptr noundef nonnull %6, ptr noundef %5102) #16
  %5103 = add nuw nsw i32 %5090, 1
  %5104 = load i32, ptr %4598, align 8, !tbaa !177
  %5105 = icmp slt i32 %5103, %5104
  br i1 %5105, label %5088, label %5106, !llvm.loop !611

5106:                                             ; preds = %5101, %5079
  %5107 = getelementptr inbounds %struct.ObjectRen, ptr %1, i64 0, i32 22
  %5108 = load ptr, ptr %5107, align 8, !tbaa !205
  %5109 = icmp eq ptr %5108, null
  br i1 %5109, label %5166, label %5110

5110:                                             ; preds = %5106
  %5111 = getelementptr inbounds %struct.StrandBuffer, ptr %5108, i64 0, i32 11
  %5112 = load i32, ptr %5111, align 8, !tbaa !416
  %5113 = and i32 %5112, 2
  %5114 = icmp eq i32 %5113, 0
  br i1 %5114, label %5123, label %5115

5115:                                             ; preds = %5110
  %5116 = getelementptr inbounds %struct.StrandBuffer, ptr %5108, i64 0, i32 7
  %5117 = load ptr, ptr %5116, align 8, !tbaa !406
  %5118 = getelementptr inbounds %struct.Material, ptr %5117, i64 0, i32 63
  %5119 = load float, ptr %5118, align 4, !tbaa !612
  %5120 = getelementptr inbounds %struct.Material, ptr %5117, i64 0, i32 64
  %5121 = load float, ptr %5120, align 8, !tbaa !613
  %5122 = call fast float @llvm.maxnum.f32(float %5119, float %5121)
  br label %5123

5123:                                             ; preds = %5115, %5110
  %5124 = phi float [ %5122, %5115 ], [ 0.000000e+00, %5110 ]
  %5125 = getelementptr inbounds %struct.StrandBuffer, ptr %5108, i64 0, i32 16
  store float %5124, ptr %5125, align 4
  %5126 = load ptr, ptr %5107, align 8, !tbaa !205
  %5127 = getelementptr inbounds %struct.StrandBuffer, ptr %5126, i64 0, i32 5
  %5128 = load i32, ptr %5127, align 4, !tbaa !422
  %5129 = icmp sgt i32 %5128, 0
  br i1 %5129, label %5130, label %5166

5130:                                             ; preds = %5123
  %5131 = getelementptr inbounds %struct.StrandBuffer, ptr %5108, i64 0, i32 3
  %5132 = load ptr, ptr %5131, align 8, !tbaa !432
  %5133 = getelementptr inbounds [3 x float], ptr %7, i64 0, i64 2
  %5134 = getelementptr inbounds [3 x float], ptr %8, i64 0, i64 2
  br label %5135

5135:                                             ; preds = %5151, %5130
  %5136 = phi i32 [ 0, %5130 ], [ %5160, %5151 ]
  %5137 = phi ptr [ %5132, %5130 ], [ %5161, %5151 ]
  store float 0x46293E5940000000, ptr %5133, align 8, !tbaa !13
  store <2 x float> <float 0x46293E5940000000, float 0x46293E5940000000>, ptr %7, align 8, !tbaa !13
  store float 0xC6293E5940000000, ptr %5134, align 8, !tbaa !13
  store <2 x float> <float 0xC6293E5940000000, float 0xC6293E5940000000>, ptr %8, align 8, !tbaa !13
  %5138 = load i32, ptr %5137, align 4, !tbaa !435
  %5139 = getelementptr inbounds %struct.StrandBound, ptr %5137, i64 0, i32 1
  %5140 = load i32, ptr %5139, align 4, !tbaa !433
  %5141 = icmp slt i32 %5138, %5140
  br i1 %5141, label %5142, label %5151

5142:                                             ; preds = %5135, %5142
  %5143 = phi i32 [ %5145, %5142 ], [ %5138, %5135 ]
  %5144 = call ptr @RE_findOrAddStrand(ptr noundef %1, i32 noundef %5143) #16
  call void @strand_minmax(ptr noundef %5144, ptr noundef nonnull %7, ptr noundef nonnull %8, float noundef nofpclass(nan inf) %5124) #16
  %5145 = add nsw i32 %5143, 1
  %5146 = load i32, ptr %5139, align 4, !tbaa !433
  %5147 = icmp slt i32 %5145, %5146
  br i1 %5147, label %5142, label %5148, !llvm.loop !614

5148:                                             ; preds = %5142
  %5149 = load <2 x float>, ptr %7, align 8, !tbaa !13
  %5150 = load <2 x float>, ptr %8, align 8, !tbaa !13
  br label %5151

5151:                                             ; preds = %5148, %5135
  %5152 = phi <2 x float> [ %5149, %5148 ], [ <float 0x46293E5940000000, float 0x46293E5940000000>, %5135 ]
  %5153 = phi <2 x float> [ %5150, %5148 ], [ <float 0xC6293E5940000000, float 0xC6293E5940000000>, %5135 ]
  %5154 = getelementptr inbounds %struct.StrandBound, ptr %5137, i64 0, i32 2
  store <2 x float> %5152, ptr %5154, align 4, !tbaa !13
  %5155 = load float, ptr %5133, align 8, !tbaa !13
  %5156 = getelementptr inbounds %struct.StrandBound, ptr %5137, i64 0, i32 2, i64 0, i64 2
  store float %5155, ptr %5156, align 4, !tbaa !13
  %5157 = getelementptr inbounds %struct.StrandBound, ptr %5137, i64 0, i32 2, i64 1
  store <2 x float> %5153, ptr %5157, align 4, !tbaa !13
  %5158 = load float, ptr %5134, align 8, !tbaa !13
  %5159 = getelementptr inbounds %struct.StrandBound, ptr %5137, i64 0, i32 2, i64 1, i64 2
  store float %5158, ptr %5159, align 4, !tbaa !13
  call void @minmax_v3v3_v3(ptr noundef nonnull %5, ptr noundef nonnull %6, ptr noundef nonnull %7) #16
  call void @minmax_v3v3_v3(ptr noundef nonnull %5, ptr noundef nonnull %6, ptr noundef nonnull %8) #16
  %5160 = add nuw nsw i32 %5136, 1
  %5161 = getelementptr inbounds %struct.StrandBound, ptr %5137, i64 1
  %5162 = load ptr, ptr %5107, align 8, !tbaa !205
  %5163 = getelementptr inbounds %struct.StrandBuffer, ptr %5162, i64 0, i32 5
  %5164 = load i32, ptr %5163, align 4, !tbaa !422
  %5165 = icmp slt i32 %5160, %5164
  br i1 %5165, label %5135, label %5166, !llvm.loop !615

5166:                                             ; preds = %5151, %5123, %5106
  %5167 = getelementptr inbounds %struct.ObjectRen, ptr %1, i64 0, i32 9
  %5168 = load float, ptr %5, align 8, !tbaa !13
  %5169 = load <2 x float>, ptr %5081, align 4, !tbaa !13
  %5170 = load float, ptr %6, align 8, !tbaa !13
  %5171 = insertelement <4 x float> poison, float %5168, i64 0
  %5172 = shufflevector <2 x float> %5169, <2 x float> poison, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>
  %5173 = shufflevector <4 x float> %5171, <4 x float> %5172, <4 x i32> <i32 0, i32 4, i32 5, i32 poison>
  %5174 = insertelement <4 x float> %5173, float %5170, i64 3
  store <4 x float> %5174, ptr %5167, align 4, !tbaa !13
  %5175 = getelementptr inbounds %struct.ObjectRen, ptr %1, i64 0, i32 9, i64 1, i64 1
  %5176 = load <2 x float>, ptr %5083, align 4, !tbaa !13
  store <2 x float> %5176, ptr %5175, align 4, !tbaa !13
  br label %5177

5177:                                             ; preds = %4609, %4634, %5166
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %8) #16
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %7) #16
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %6) #16
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %5) #16
  %5178 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 60
  %5179 = load <4 x i32>, ptr %4598, align 8, !tbaa !47
  %5180 = shufflevector <4 x i32> %5179, <4 x i32> poison, <4 x i32> <i32 1, i32 0, i32 3, i32 2>
  %5181 = load <4 x i32>, ptr %5178, align 8, !tbaa !47
  %5182 = add nsw <4 x i32> %5181, %5180
  store <4 x i32> %5182, ptr %5178, align 8, !tbaa !47
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc nonnull ptr @give_render_material(ptr nocapture noundef %0, ptr noundef %1, i16 noundef signext %2) unnamed_addr #3 {
  %4 = tail call ptr @give_current_material(ptr noundef %1, i16 noundef signext %2) #16
  %5 = icmp eq ptr %4, null
  %6 = select i1 %5, ptr @defmaterial, ptr %4
  %7 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 45, i32 47
  %8 = load i32, ptr %7, align 8, !tbaa !55
  %9 = and i32 %8, 1048576
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %15, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.Material, ptr %6, i64 0, i32 90
  %13 = load i16, ptr %12, align 4, !tbaa !237
  %14 = or i16 %13, 2048
  store i16 %14, ptr %12, align 4, !tbaa !237
  br label %15

15:                                               ; preds = %11, %3
  %16 = getelementptr inbounds %struct.Material, ptr %6, i64 0, i32 2
  %17 = load i16, ptr %16, align 8, !tbaa !139
  %18 = icmp eq i16 %17, 2
  %19 = getelementptr inbounds %struct.Material, ptr %6, i64 0, i32 51
  %20 = load i32, ptr %19, align 4, !tbaa !102
  br i1 %18, label %21, label %24

21:                                               ; preds = %15
  %22 = and i32 %20, -33619969
  %23 = or i32 %22, 65536
  store i32 %23, ptr %19, align 4, !tbaa !102
  br label %24

24:                                               ; preds = %15, %21
  %25 = phi i32 [ %23, %21 ], [ %20, %15 ]
  %26 = and i32 %25, 65600
  %27 = icmp eq i32 %26, 65600
  br i1 %27, label %28, label %32

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 4
  %30 = load i16, ptr %29, align 8, !tbaa !234
  %31 = or i16 %30, 1
  store i16 %31, ptr %29, align 8, !tbaa !234
  br label %32

32:                                               ; preds = %28, %24
  %33 = getelementptr inbounds %struct.Material, ptr %6, i64 0, i32 3
  %34 = load i16, ptr %33, align 2, !tbaa !616
  %35 = or i16 %34, 1
  store i16 %35, ptr %33, align 2, !tbaa !616
  %36 = getelementptr inbounds %struct.Material, ptr %6, i64 0, i32 103
  %37 = load ptr, ptr %36, align 8, !tbaa !617
  %38 = icmp eq ptr %37, null
  br i1 %38, label %44, label %39

39:                                               ; preds = %32
  %40 = getelementptr inbounds %struct.Material, ptr %6, i64 0, i32 77
  %41 = load i8, ptr %40, align 1, !tbaa !618
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %44, label %43

43:                                               ; preds = %39
  tail call fastcc void @flag_render_node_material(ptr noundef nonnull %0, ptr noundef nonnull %37)
  br label %44

44:                                               ; preds = %43, %39, %32
  %45 = getelementptr inbounds %struct.Material, ptr %6, i64 0, i32 125
  store i32 0, ptr %45, align 8, !tbaa !619
  %46 = getelementptr inbounds %struct.Material, ptr %6, i64 0, i32 102, i64 0
  %47 = load ptr, ptr %46, align 8, !tbaa !16
  %48 = icmp eq ptr %47, null
  br i1 %48, label %60, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %struct.MTex, ptr %47, i64 0, i32 5
  %51 = load ptr, ptr %50, align 8, !tbaa !48
  %52 = icmp eq ptr %51, null
  br i1 %52, label %60, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %struct.MTex, ptr %47, i64 0, i32 1
  %55 = load i16, ptr %54, align 2, !tbaa !330
  %56 = and i16 %55, 253
  %57 = icmp eq i16 %56, 0
  br i1 %57, label %60, label %58

58:                                               ; preds = %53
  %59 = zext i16 %56 to i32
  store i32 %59, ptr %45, align 8, !tbaa !619
  br label %60

60:                                               ; preds = %58, %53, %49, %44
  %61 = phi i32 [ 0, %44 ], [ 0, %49 ], [ 0, %53 ], [ %59, %58 ]
  %62 = getelementptr inbounds %struct.Material, ptr %6, i64 0, i32 102, i64 1
  %63 = load ptr, ptr %62, align 8, !tbaa !16
  %64 = icmp eq ptr %63, null
  br i1 %64, label %77, label %65

65:                                               ; preds = %60
  %66 = getelementptr inbounds %struct.MTex, ptr %63, i64 0, i32 5
  %67 = load ptr, ptr %66, align 8, !tbaa !48
  %68 = icmp eq ptr %67, null
  br i1 %68, label %77, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %struct.MTex, ptr %63, i64 0, i32 1
  %71 = load i16, ptr %70, align 2, !tbaa !330
  %72 = and i16 %71, 253
  %73 = zext i16 %72 to i32
  %74 = or i32 %61, %73
  %75 = icmp eq i16 %72, 0
  br i1 %75, label %77, label %76

76:                                               ; preds = %69
  store i32 %74, ptr %45, align 8, !tbaa !619
  br label %77

77:                                               ; preds = %76, %69, %65, %60
  %78 = phi i32 [ %61, %60 ], [ %61, %65 ], [ %74, %69 ], [ %74, %76 ]
  %79 = getelementptr inbounds %struct.Material, ptr %6, i64 0, i32 102, i64 2
  %80 = load ptr, ptr %79, align 8, !tbaa !16
  %81 = icmp eq ptr %80, null
  br i1 %81, label %94, label %82

82:                                               ; preds = %77
  %83 = getelementptr inbounds %struct.MTex, ptr %80, i64 0, i32 5
  %84 = load ptr, ptr %83, align 8, !tbaa !48
  %85 = icmp eq ptr %84, null
  br i1 %85, label %94, label %86

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.MTex, ptr %80, i64 0, i32 1
  %88 = load i16, ptr %87, align 2, !tbaa !330
  %89 = and i16 %88, 253
  %90 = zext i16 %89 to i32
  %91 = or i32 %78, %90
  %92 = icmp eq i16 %89, 0
  br i1 %92, label %94, label %93

93:                                               ; preds = %86
  store i32 %91, ptr %45, align 8, !tbaa !619
  br label %94

94:                                               ; preds = %93, %86, %82, %77
  %95 = phi i32 [ %78, %77 ], [ %78, %82 ], [ %91, %86 ], [ %91, %93 ]
  %96 = getelementptr inbounds %struct.Material, ptr %6, i64 0, i32 102, i64 3
  %97 = load ptr, ptr %96, align 8, !tbaa !16
  %98 = icmp eq ptr %97, null
  br i1 %98, label %111, label %99

99:                                               ; preds = %94
  %100 = getelementptr inbounds %struct.MTex, ptr %97, i64 0, i32 5
  %101 = load ptr, ptr %100, align 8, !tbaa !48
  %102 = icmp eq ptr %101, null
  br i1 %102, label %111, label %103

103:                                              ; preds = %99
  %104 = getelementptr inbounds %struct.MTex, ptr %97, i64 0, i32 1
  %105 = load i16, ptr %104, align 2, !tbaa !330
  %106 = and i16 %105, 253
  %107 = zext i16 %106 to i32
  %108 = or i32 %95, %107
  %109 = icmp eq i16 %106, 0
  br i1 %109, label %111, label %110

110:                                              ; preds = %103
  store i32 %108, ptr %45, align 8, !tbaa !619
  br label %111

111:                                              ; preds = %110, %103, %99, %94
  %112 = phi i32 [ %95, %94 ], [ %95, %99 ], [ %108, %103 ], [ %108, %110 ]
  %113 = getelementptr inbounds %struct.Material, ptr %6, i64 0, i32 102, i64 4
  %114 = load ptr, ptr %113, align 8, !tbaa !16
  %115 = icmp eq ptr %114, null
  br i1 %115, label %128, label %116

116:                                              ; preds = %111
  %117 = getelementptr inbounds %struct.MTex, ptr %114, i64 0, i32 5
  %118 = load ptr, ptr %117, align 8, !tbaa !48
  %119 = icmp eq ptr %118, null
  br i1 %119, label %128, label %120

120:                                              ; preds = %116
  %121 = getelementptr inbounds %struct.MTex, ptr %114, i64 0, i32 1
  %122 = load i16, ptr %121, align 2, !tbaa !330
  %123 = and i16 %122, 253
  %124 = zext i16 %123 to i32
  %125 = or i32 %112, %124
  %126 = icmp eq i16 %123, 0
  br i1 %126, label %128, label %127

127:                                              ; preds = %120
  store i32 %125, ptr %45, align 8, !tbaa !619
  br label %128

128:                                              ; preds = %127, %120, %116, %111
  %129 = phi i32 [ %112, %111 ], [ %112, %116 ], [ %125, %120 ], [ %125, %127 ]
  %130 = getelementptr inbounds %struct.Material, ptr %6, i64 0, i32 102, i64 5
  %131 = load ptr, ptr %130, align 8, !tbaa !16
  %132 = icmp eq ptr %131, null
  br i1 %132, label %145, label %133

133:                                              ; preds = %128
  %134 = getelementptr inbounds %struct.MTex, ptr %131, i64 0, i32 5
  %135 = load ptr, ptr %134, align 8, !tbaa !48
  %136 = icmp eq ptr %135, null
  br i1 %136, label %145, label %137

137:                                              ; preds = %133
  %138 = getelementptr inbounds %struct.MTex, ptr %131, i64 0, i32 1
  %139 = load i16, ptr %138, align 2, !tbaa !330
  %140 = and i16 %139, 253
  %141 = zext i16 %140 to i32
  %142 = or i32 %129, %141
  %143 = icmp eq i16 %140, 0
  br i1 %143, label %145, label %144

144:                                              ; preds = %137
  store i32 %142, ptr %45, align 8, !tbaa !619
  br label %145

145:                                              ; preds = %144, %137, %133, %128
  %146 = phi i32 [ %129, %128 ], [ %129, %133 ], [ %142, %137 ], [ %142, %144 ]
  %147 = getelementptr inbounds %struct.Material, ptr %6, i64 0, i32 102, i64 6
  %148 = load ptr, ptr %147, align 8, !tbaa !16
  %149 = icmp eq ptr %148, null
  br i1 %149, label %162, label %150

150:                                              ; preds = %145
  %151 = getelementptr inbounds %struct.MTex, ptr %148, i64 0, i32 5
  %152 = load ptr, ptr %151, align 8, !tbaa !48
  %153 = icmp eq ptr %152, null
  br i1 %153, label %162, label %154

154:                                              ; preds = %150
  %155 = getelementptr inbounds %struct.MTex, ptr %148, i64 0, i32 1
  %156 = load i16, ptr %155, align 2, !tbaa !330
  %157 = and i16 %156, 253
  %158 = zext i16 %157 to i32
  %159 = or i32 %146, %158
  %160 = icmp eq i16 %157, 0
  br i1 %160, label %162, label %161

161:                                              ; preds = %154
  store i32 %159, ptr %45, align 8, !tbaa !619
  br label %162

162:                                              ; preds = %161, %154, %150, %145
  %163 = phi i32 [ %146, %145 ], [ %146, %150 ], [ %159, %154 ], [ %159, %161 ]
  %164 = getelementptr inbounds %struct.Material, ptr %6, i64 0, i32 102, i64 7
  %165 = load ptr, ptr %164, align 8, !tbaa !16
  %166 = icmp eq ptr %165, null
  br i1 %166, label %179, label %167

167:                                              ; preds = %162
  %168 = getelementptr inbounds %struct.MTex, ptr %165, i64 0, i32 5
  %169 = load ptr, ptr %168, align 8, !tbaa !48
  %170 = icmp eq ptr %169, null
  br i1 %170, label %179, label %171

171:                                              ; preds = %167
  %172 = getelementptr inbounds %struct.MTex, ptr %165, i64 0, i32 1
  %173 = load i16, ptr %172, align 2, !tbaa !330
  %174 = and i16 %173, 253
  %175 = zext i16 %174 to i32
  %176 = or i32 %163, %175
  %177 = icmp eq i16 %174, 0
  br i1 %177, label %179, label %178

178:                                              ; preds = %171
  store i32 %176, ptr %45, align 8, !tbaa !619
  br label %179

179:                                              ; preds = %178, %171, %167, %162
  %180 = phi i32 [ %163, %162 ], [ %163, %167 ], [ %176, %171 ], [ %176, %178 ]
  %181 = getelementptr inbounds %struct.Material, ptr %6, i64 0, i32 102, i64 8
  %182 = load ptr, ptr %181, align 8, !tbaa !16
  %183 = icmp eq ptr %182, null
  br i1 %183, label %196, label %184

184:                                              ; preds = %179
  %185 = getelementptr inbounds %struct.MTex, ptr %182, i64 0, i32 5
  %186 = load ptr, ptr %185, align 8, !tbaa !48
  %187 = icmp eq ptr %186, null
  br i1 %187, label %196, label %188

188:                                              ; preds = %184
  %189 = getelementptr inbounds %struct.MTex, ptr %182, i64 0, i32 1
  %190 = load i16, ptr %189, align 2, !tbaa !330
  %191 = and i16 %190, 253
  %192 = zext i16 %191 to i32
  %193 = or i32 %180, %192
  %194 = icmp eq i16 %191, 0
  br i1 %194, label %196, label %195

195:                                              ; preds = %188
  store i32 %193, ptr %45, align 8, !tbaa !619
  br label %196

196:                                              ; preds = %195, %188, %184, %179
  %197 = phi i32 [ %180, %179 ], [ %180, %184 ], [ %193, %188 ], [ %193, %195 ]
  %198 = getelementptr inbounds %struct.Material, ptr %6, i64 0, i32 102, i64 9
  %199 = load ptr, ptr %198, align 8, !tbaa !16
  %200 = icmp eq ptr %199, null
  br i1 %200, label %213, label %201

201:                                              ; preds = %196
  %202 = getelementptr inbounds %struct.MTex, ptr %199, i64 0, i32 5
  %203 = load ptr, ptr %202, align 8, !tbaa !48
  %204 = icmp eq ptr %203, null
  br i1 %204, label %213, label %205

205:                                              ; preds = %201
  %206 = getelementptr inbounds %struct.MTex, ptr %199, i64 0, i32 1
  %207 = load i16, ptr %206, align 2, !tbaa !330
  %208 = and i16 %207, 253
  %209 = zext i16 %208 to i32
  %210 = or i32 %197, %209
  %211 = icmp eq i16 %208, 0
  br i1 %211, label %213, label %212

212:                                              ; preds = %205
  store i32 %210, ptr %45, align 8, !tbaa !619
  br label %213

213:                                              ; preds = %212, %205, %201, %196
  %214 = phi i32 [ %197, %196 ], [ %197, %201 ], [ %210, %205 ], [ %210, %212 ]
  %215 = getelementptr inbounds %struct.Material, ptr %6, i64 0, i32 102, i64 10
  %216 = load ptr, ptr %215, align 8, !tbaa !16
  %217 = icmp eq ptr %216, null
  br i1 %217, label %230, label %218

218:                                              ; preds = %213
  %219 = getelementptr inbounds %struct.MTex, ptr %216, i64 0, i32 5
  %220 = load ptr, ptr %219, align 8, !tbaa !48
  %221 = icmp eq ptr %220, null
  br i1 %221, label %230, label %222

222:                                              ; preds = %218
  %223 = getelementptr inbounds %struct.MTex, ptr %216, i64 0, i32 1
  %224 = load i16, ptr %223, align 2, !tbaa !330
  %225 = and i16 %224, 253
  %226 = zext i16 %225 to i32
  %227 = or i32 %214, %226
  %228 = icmp eq i16 %225, 0
  br i1 %228, label %230, label %229

229:                                              ; preds = %222
  store i32 %227, ptr %45, align 8, !tbaa !619
  br label %230

230:                                              ; preds = %229, %222, %218, %213
  %231 = phi i32 [ %214, %213 ], [ %214, %218 ], [ %227, %222 ], [ %227, %229 ]
  %232 = getelementptr inbounds %struct.Material, ptr %6, i64 0, i32 102, i64 11
  %233 = load ptr, ptr %232, align 8, !tbaa !16
  %234 = icmp eq ptr %233, null
  br i1 %234, label %247, label %235

235:                                              ; preds = %230
  %236 = getelementptr inbounds %struct.MTex, ptr %233, i64 0, i32 5
  %237 = load ptr, ptr %236, align 8, !tbaa !48
  %238 = icmp eq ptr %237, null
  br i1 %238, label %247, label %239

239:                                              ; preds = %235
  %240 = getelementptr inbounds %struct.MTex, ptr %233, i64 0, i32 1
  %241 = load i16, ptr %240, align 2, !tbaa !330
  %242 = and i16 %241, 253
  %243 = zext i16 %242 to i32
  %244 = or i32 %231, %243
  %245 = icmp eq i16 %242, 0
  br i1 %245, label %247, label %246

246:                                              ; preds = %239
  store i32 %244, ptr %45, align 8, !tbaa !619
  br label %247

247:                                              ; preds = %246, %239, %235, %230
  %248 = phi i32 [ %231, %230 ], [ %231, %235 ], [ %244, %239 ], [ %244, %246 ]
  %249 = getelementptr inbounds %struct.Material, ptr %6, i64 0, i32 102, i64 12
  %250 = load ptr, ptr %249, align 8, !tbaa !16
  %251 = icmp eq ptr %250, null
  br i1 %251, label %264, label %252

252:                                              ; preds = %247
  %253 = getelementptr inbounds %struct.MTex, ptr %250, i64 0, i32 5
  %254 = load ptr, ptr %253, align 8, !tbaa !48
  %255 = icmp eq ptr %254, null
  br i1 %255, label %264, label %256

256:                                              ; preds = %252
  %257 = getelementptr inbounds %struct.MTex, ptr %250, i64 0, i32 1
  %258 = load i16, ptr %257, align 2, !tbaa !330
  %259 = and i16 %258, 253
  %260 = zext i16 %259 to i32
  %261 = or i32 %248, %260
  %262 = icmp eq i16 %259, 0
  br i1 %262, label %264, label %263

263:                                              ; preds = %256
  store i32 %261, ptr %45, align 8, !tbaa !619
  br label %264

264:                                              ; preds = %263, %256, %252, %247
  %265 = phi i32 [ %248, %247 ], [ %248, %252 ], [ %261, %256 ], [ %261, %263 ]
  %266 = getelementptr inbounds %struct.Material, ptr %6, i64 0, i32 102, i64 13
  %267 = load ptr, ptr %266, align 8, !tbaa !16
  %268 = icmp eq ptr %267, null
  br i1 %268, label %281, label %269

269:                                              ; preds = %264
  %270 = getelementptr inbounds %struct.MTex, ptr %267, i64 0, i32 5
  %271 = load ptr, ptr %270, align 8, !tbaa !48
  %272 = icmp eq ptr %271, null
  br i1 %272, label %281, label %273

273:                                              ; preds = %269
  %274 = getelementptr inbounds %struct.MTex, ptr %267, i64 0, i32 1
  %275 = load i16, ptr %274, align 2, !tbaa !330
  %276 = and i16 %275, 253
  %277 = zext i16 %276 to i32
  %278 = or i32 %265, %277
  %279 = icmp eq i16 %276, 0
  br i1 %279, label %281, label %280

280:                                              ; preds = %273
  store i32 %278, ptr %45, align 8, !tbaa !619
  br label %281

281:                                              ; preds = %280, %273, %269, %264
  %282 = phi i32 [ %265, %264 ], [ %265, %269 ], [ %278, %273 ], [ %278, %280 ]
  %283 = getelementptr inbounds %struct.Material, ptr %6, i64 0, i32 102, i64 14
  %284 = load ptr, ptr %283, align 8, !tbaa !16
  %285 = icmp eq ptr %284, null
  br i1 %285, label %298, label %286

286:                                              ; preds = %281
  %287 = getelementptr inbounds %struct.MTex, ptr %284, i64 0, i32 5
  %288 = load ptr, ptr %287, align 8, !tbaa !48
  %289 = icmp eq ptr %288, null
  br i1 %289, label %298, label %290

290:                                              ; preds = %286
  %291 = getelementptr inbounds %struct.MTex, ptr %284, i64 0, i32 1
  %292 = load i16, ptr %291, align 2, !tbaa !330
  %293 = and i16 %292, 253
  %294 = zext i16 %293 to i32
  %295 = or i32 %282, %294
  %296 = icmp eq i16 %293, 0
  br i1 %296, label %298, label %297

297:                                              ; preds = %290
  store i32 %295, ptr %45, align 8, !tbaa !619
  br label %298

298:                                              ; preds = %297, %290, %286, %281
  %299 = phi i32 [ %282, %281 ], [ %282, %286 ], [ %295, %290 ], [ %295, %297 ]
  %300 = getelementptr inbounds %struct.Material, ptr %6, i64 0, i32 102, i64 15
  %301 = load ptr, ptr %300, align 8, !tbaa !16
  %302 = icmp eq ptr %301, null
  br i1 %302, label %315, label %303

303:                                              ; preds = %298
  %304 = getelementptr inbounds %struct.MTex, ptr %301, i64 0, i32 5
  %305 = load ptr, ptr %304, align 8, !tbaa !48
  %306 = icmp eq ptr %305, null
  br i1 %306, label %315, label %307

307:                                              ; preds = %303
  %308 = getelementptr inbounds %struct.MTex, ptr %301, i64 0, i32 1
  %309 = load i16, ptr %308, align 2, !tbaa !330
  %310 = and i16 %309, 253
  %311 = zext i16 %310 to i32
  %312 = or i32 %299, %311
  %313 = icmp eq i16 %310, 0
  br i1 %313, label %315, label %314

314:                                              ; preds = %307
  store i32 %312, ptr %45, align 8, !tbaa !619
  br label %315

315:                                              ; preds = %314, %307, %303, %298
  %316 = phi i32 [ %299, %298 ], [ %299, %303 ], [ %312, %307 ], [ %312, %314 ]
  %317 = getelementptr inbounds %struct.Material, ptr %6, i64 0, i32 102, i64 16
  %318 = load ptr, ptr %317, align 8, !tbaa !16
  %319 = icmp eq ptr %318, null
  br i1 %319, label %332, label %320

320:                                              ; preds = %315
  %321 = getelementptr inbounds %struct.MTex, ptr %318, i64 0, i32 5
  %322 = load ptr, ptr %321, align 8, !tbaa !48
  %323 = icmp eq ptr %322, null
  br i1 %323, label %332, label %324

324:                                              ; preds = %320
  %325 = getelementptr inbounds %struct.MTex, ptr %318, i64 0, i32 1
  %326 = load i16, ptr %325, align 2, !tbaa !330
  %327 = and i16 %326, 253
  %328 = zext i16 %327 to i32
  %329 = or i32 %316, %328
  %330 = icmp eq i16 %327, 0
  br i1 %330, label %332, label %331

331:                                              ; preds = %324
  store i32 %329, ptr %45, align 8, !tbaa !619
  br label %332

332:                                              ; preds = %331, %324, %320, %315
  %333 = phi i32 [ %316, %315 ], [ %316, %320 ], [ %329, %324 ], [ %329, %331 ]
  %334 = getelementptr inbounds %struct.Material, ptr %6, i64 0, i32 102, i64 17
  %335 = load ptr, ptr %334, align 8, !tbaa !16
  %336 = icmp eq ptr %335, null
  br i1 %336, label %349, label %337

337:                                              ; preds = %332
  %338 = getelementptr inbounds %struct.MTex, ptr %335, i64 0, i32 5
  %339 = load ptr, ptr %338, align 8, !tbaa !48
  %340 = icmp eq ptr %339, null
  br i1 %340, label %349, label %341

341:                                              ; preds = %337
  %342 = getelementptr inbounds %struct.MTex, ptr %335, i64 0, i32 1
  %343 = load i16, ptr %342, align 2, !tbaa !330
  %344 = and i16 %343, 253
  %345 = icmp eq i16 %344, 0
  br i1 %345, label %349, label %346

346:                                              ; preds = %341
  %347 = zext i16 %344 to i32
  %348 = or i32 %333, %347
  store i32 %348, ptr %45, align 8, !tbaa !619
  br label %349

349:                                              ; preds = %346, %341, %337, %332
  ret ptr %6
}

declare i32 @psys_check_enabled(ptr noundef, ptr noundef) local_unnamed_addr #5

declare void @psys_render_restore(ptr noundef, ptr noundef) local_unnamed_addr #5

declare ptr @mesh_create_derived_view(ptr noundef, ptr noundef, i64 noundef) local_unnamed_addr #5

declare ptr @mesh_create_derived_render(ptr noundef, ptr noundef, i64 noundef) local_unnamed_addr #5

declare nofpclass(nan inf) float @BKE_scene_frame_get(ptr noundef) local_unnamed_addr #5

declare ptr @psys_get_modifier(ptr noundef, ptr noundef) local_unnamed_addr #5

declare void @psys_count_keyed_targets(ptr noundef) local_unnamed_addr #5

declare ptr @BLI_rng_new(i32 noundef) local_unnamed_addr #5

declare void @RE_set_customdata_names(ptr noundef, ptr noundef) local_unnamed_addr #5

declare i32 @CustomData_number_of_layers(ptr noundef, i32 noundef) local_unnamed_addr #5

declare i32 @CustomData_get_named_layer_index(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #5

declare i32 @CustomData_get_layer_index(ptr noundef, i32 noundef) local_unnamed_addr #5

declare i32 @CustomData_get_active_layer_index(ptr noundef, i32 noundef) local_unnamed_addr #5

declare void @transpose_m3(ptr noundef) local_unnamed_addr #5

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare double @llvm.pow.f64(double, double) #2

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @set_object_orco(ptr nocapture noundef %0, ptr noundef %1, ptr noundef %2) unnamed_addr #3 {
  %4 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 73
  %5 = load ptr, ptr %4, align 8, !tbaa !76
  %6 = icmp eq ptr %5, null
  br i1 %6, label %7, label %9

7:                                                ; preds = %3
  %8 = tail call ptr @BLI_ghash_ptr_new(ptr noundef nonnull @.str.18) #16
  store ptr %8, ptr %4, align 8, !tbaa !76
  br label %9

9:                                                ; preds = %7, %3
  %10 = phi ptr [ %8, %7 ], [ %5, %3 ]
  tail call void @BLI_ghash_insert(ptr noundef %10, ptr noundef %1, ptr noundef %2) #16
  ret void
}

declare ptr @RE_addStrandBuffer(ptr noundef, i32 noundef) local_unnamed_addr #5

declare ptr @psys_create_lattice_deform_data(ptr noundef) local_unnamed_addr #5

declare nofpclass(nan inf) float @BLI_rng_get_float(ptr noundef) local_unnamed_addr #5

declare void @psys_particle_on_emitter(ptr noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef, float noundef nofpclass(nan inf), ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @get_particle_uvco_mcol(i16 noundef signext %0, ptr noundef %1, ptr noundef %2, i32 noundef %3, ptr nocapture noundef readonly %4) unnamed_addr #3 {
  %6 = getelementptr inbounds %struct.ParticleStrandData, ptr %4, i64 0, i32 2
  %7 = load ptr, ptr %6, align 8, !tbaa !384
  %8 = icmp ne ptr %7, null
  %9 = add i16 %0, -1
  %10 = icmp ult i16 %9, 2
  %11 = and i1 %10, %8
  br i1 %11, label %12, label %40

12:                                               ; preds = %5
  %13 = getelementptr inbounds %struct.ParticleStrandData, ptr %4, i64 0, i32 8
  %14 = load i32, ptr %13, align 8, !tbaa !382
  %15 = icmp sgt i32 %14, 0
  br i1 %15, label %16, label %40

16:                                               ; preds = %12
  %17 = icmp eq i32 %3, -1
  %18 = getelementptr inbounds %struct.DerivedMesh, ptr %1, i64 0, i32 48
  %19 = getelementptr inbounds %struct.DerivedMesh, ptr %1, i64 0, i32 2
  %20 = sext i32 %3 to i64
  br i1 %17, label %21, label %24

21:                                               ; preds = %16
  %22 = zext i32 %14 to i64
  %23 = shl nuw nsw i64 %22, 3
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(1) %7, i8 0, i64 %23, i1 false), !tbaa !13
  br label %40

24:                                               ; preds = %16, %24
  %25 = phi i64 [ %36, %24 ], [ 0, %16 ]
  %26 = load ptr, ptr %18, align 8, !tbaa !620
  %27 = tail call ptr %26(ptr noundef %1, i32 noundef %3, i32 noundef 4) #16
  %28 = trunc i64 %25 to i32
  %29 = tail call ptr @CustomData_get_layer_n(ptr noundef nonnull %19, i32 noundef 5, i32 noundef %28) #16
  %30 = getelementptr inbounds %struct.MTFace, ptr %29, i64 %20
  %31 = getelementptr inbounds %struct.MFace, ptr %27, i64 0, i32 3
  %32 = load i32, ptr %31, align 4, !tbaa !555
  %33 = load ptr, ptr %6, align 8, !tbaa !384
  %34 = shl nuw nsw i64 %25, 1
  %35 = getelementptr inbounds float, ptr %33, i64 %34
  tail call void @psys_interpolate_uvs(ptr noundef %30, i32 noundef %32, ptr noundef %2, ptr noundef %35) #16
  %36 = add nuw nsw i64 %25, 1
  %37 = load i32, ptr %13, align 8, !tbaa !382
  %38 = sext i32 %37 to i64
  %39 = icmp slt i64 %36, %38
  br i1 %39, label %24, label %40, !llvm.loop !621

40:                                               ; preds = %24, %21, %12, %5
  %41 = load ptr, ptr %4, align 8, !tbaa !385
  %42 = icmp ne ptr %41, null
  %43 = and i1 %10, %42
  br i1 %43, label %44, label %77

44:                                               ; preds = %40
  %45 = getelementptr inbounds %struct.ParticleStrandData, ptr %4, i64 0, i32 9
  %46 = load i32, ptr %45, align 4, !tbaa !383
  %47 = icmp sgt i32 %46, 0
  br i1 %47, label %48, label %77

48:                                               ; preds = %44
  %49 = icmp eq i32 %3, -1
  %50 = getelementptr inbounds %struct.DerivedMesh, ptr %1, i64 0, i32 48
  %51 = getelementptr inbounds %struct.DerivedMesh, ptr %1, i64 0, i32 2
  %52 = shl nsw i32 %3, 2
  %53 = sext i32 %52 to i64
  br i1 %49, label %54, label %62

54:                                               ; preds = %48, %54
  %55 = phi i64 [ %58, %54 ], [ 0, %48 ]
  %56 = load ptr, ptr %4, align 8, !tbaa !385
  %57 = getelementptr inbounds %struct.MCol, ptr %56, i64 %55
  store i32 0, ptr %57, align 1
  %58 = add nuw nsw i64 %55, 1
  %59 = load i32, ptr %45, align 4, !tbaa !383
  %60 = sext i32 %59 to i64
  %61 = icmp slt i64 %58, %60
  br i1 %61, label %54, label %77, !llvm.loop !622

62:                                               ; preds = %48, %62
  %63 = phi i64 [ %73, %62 ], [ 0, %48 ]
  %64 = load ptr, ptr %50, align 8, !tbaa !620
  %65 = tail call ptr %64(ptr noundef %1, i32 noundef %3, i32 noundef 4) #16
  %66 = trunc i64 %63 to i32
  %67 = tail call ptr @CustomData_get_layer_n(ptr noundef nonnull %51, i32 noundef 6, i32 noundef %66) #16
  %68 = getelementptr inbounds %struct.MCol, ptr %67, i64 %53
  %69 = getelementptr inbounds %struct.MFace, ptr %65, i64 0, i32 3
  %70 = load i32, ptr %69, align 4, !tbaa !555
  %71 = load ptr, ptr %4, align 8, !tbaa !385
  %72 = getelementptr inbounds %struct.MCol, ptr %71, i64 %63
  tail call void @psys_interpolate_mcol(ptr noundef %68, i32 noundef %70, ptr noundef %2, ptr noundef %72) #16
  %73 = add nuw nsw i64 %63, 1
  %74 = load i32, ptr %45, align 4, !tbaa !383
  %75 = sext i32 %74 to i64
  %76 = icmp slt i64 %73, %75
  br i1 %76, label %62, label %77, !llvm.loop !622

77:                                               ; preds = %62, %54, %44, %40
  ret void
}

declare nofpclass(nan inf) float @psys_get_child_time(ptr noundef, ptr noundef, float noundef nofpclass(nan inf), ptr noundef, ptr noundef) local_unnamed_addr #5

declare nofpclass(nan inf) float @psys_get_child_size(ptr noundef, ptr noundef, float noundef nofpclass(nan inf), ptr noundef) local_unnamed_addr #5

declare zeroext i8 @psys_render_simplify_params(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

declare ptr @RE_findOrAddStrand(ptr noundef, i32 noundef) local_unnamed_addr #5

declare ptr @RE_strandren_get_simplify(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #5

declare ptr @RE_strandren_get_surfnor(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #5

declare ptr @RE_strandren_get_face(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #5

declare ptr @RE_strandren_get_uv(ptr noundef, ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #5

declare ptr @RE_strandren_get_mcol(ptr noundef, ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #5

declare void @mul_m4_v3(ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @particle_curve(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3, ptr nocapture noundef readonly %4, ptr noundef %5, ptr noundef %6, i32 noundef %7, ptr noundef %8) unnamed_addr #3 {
  %10 = alloca [3 x float], align 8
  %11 = alloca [3 x float], align 8
  %12 = getelementptr inbounds %struct.Material, ptr %3, i64 0, i32 2
  %13 = load i16, ptr %12, align 8, !tbaa !139
  switch i16 %13, label %177 [
    i16 3, label %14
    i16 1, label %162
  ]

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.ParticleStrandData, ptr %4, i64 0, i32 11
  %16 = load i32, ptr %15, align 4, !tbaa !623
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %89, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.ObjectRen, ptr %1, i64 0, i32 11
  %20 = load i32, ptr %19, align 4, !tbaa !499
  %21 = add nsw i32 %20, 1
  store i32 %21, ptr %19, align 4, !tbaa !499
  %22 = tail call ptr @RE_findOrAddVlak(ptr noundef %1, i32 noundef %20) #16
  %23 = getelementptr inbounds %struct.ObjectRen, ptr %1, i64 0, i32 10
  %24 = load i32, ptr %23, align 8, !tbaa !177
  %25 = add nsw i32 %24, 1
  store i32 %25, ptr %23, align 8, !tbaa !177
  %26 = tail call ptr @RE_findOrAddVert(ptr noundef %1, i32 noundef %24) #16
  store ptr %26, ptr %22, align 8, !tbaa !502
  %27 = load i32, ptr %23, align 8, !tbaa !177
  %28 = add nsw i32 %27, 1
  store i32 %28, ptr %23, align 8, !tbaa !177
  %29 = tail call ptr @RE_findOrAddVert(ptr noundef %1, i32 noundef %27) #16
  %30 = getelementptr inbounds %struct.VlakRen, ptr %22, i64 0, i32 1
  store ptr %29, ptr %30, align 8, !tbaa !504
  %31 = getelementptr inbounds %struct.VlakRen, ptr %22, i64 0, i32 2
  store ptr %29, ptr %31, align 8, !tbaa !505
  %32 = getelementptr inbounds %struct.VlakRen, ptr %22, i64 0, i32 3
  store ptr null, ptr %32, align 8, !tbaa !506
  %33 = load ptr, ptr %22, align 8, !tbaa !502
  %34 = load float, ptr %5, align 4, !tbaa !13
  store float %34, ptr %33, align 4, !tbaa !13
  %35 = getelementptr inbounds float, ptr %5, i64 1
  %36 = load float, ptr %35, align 4, !tbaa !13
  %37 = getelementptr inbounds float, ptr %33, i64 1
  store float %36, ptr %37, align 4, !tbaa !13
  %38 = getelementptr inbounds float, ptr %5, i64 2
  %39 = load float, ptr %38, align 4, !tbaa !13
  %40 = getelementptr inbounds float, ptr %33, i64 2
  store float %39, ptr %40, align 4, !tbaa !13
  %41 = load float, ptr %6, align 4, !tbaa !13
  store float %41, ptr %29, align 4, !tbaa !13
  %42 = getelementptr inbounds float, ptr %6, i64 1
  %43 = load float, ptr %42, align 4, !tbaa !13
  %44 = getelementptr inbounds float, ptr %29, i64 1
  store float %43, ptr %44, align 4, !tbaa !13
  %45 = getelementptr inbounds float, ptr %6, i64 2
  %46 = load float, ptr %45, align 4, !tbaa !13
  %47 = getelementptr inbounds float, ptr %29, i64 2
  store float %46, ptr %47, align 4, !tbaa !13
  %48 = getelementptr inbounds %struct.VlakRen, ptr %22, i64 0, i32 4
  %49 = load float, ptr %5, align 4, !tbaa !13
  %50 = load float, ptr %6, align 4, !tbaa !13
  %51 = fsub fast float %49, %50
  store float %51, ptr %48, align 4, !tbaa !13
  %52 = load float, ptr %35, align 4, !tbaa !13
  %53 = load float, ptr %42, align 4, !tbaa !13
  %54 = fsub fast float %52, %53
  %55 = getelementptr inbounds %struct.VlakRen, ptr %22, i64 0, i32 4, i64 1
  store float %54, ptr %55, align 4, !tbaa !13
  %56 = load float, ptr %38, align 4, !tbaa !13
  %57 = load float, ptr %45, align 4, !tbaa !13
  %58 = fsub fast float %56, %57
  %59 = getelementptr inbounds %struct.VlakRen, ptr %22, i64 0, i32 4, i64 2
  %60 = fmul fast float %51, %51
  %61 = fmul fast float %54, %54
  %62 = fadd fast float %61, %60
  %63 = fmul fast float %58, %58
  %64 = fadd fast float %62, %63
  %65 = fcmp fast ogt float %64, 0x38AA95A5C0000000
  br i1 %65, label %66, label %72

66:                                               ; preds = %18
  %67 = tail call fast float @llvm.sqrt.f32(float %64)
  %68 = fdiv fast float 1.000000e+00, %67
  %69 = fmul fast float %68, %51
  %70 = fmul fast float %68, %54
  %71 = fmul fast float %68, %58
  br label %72

72:                                               ; preds = %66, %18
  %73 = phi float [ %69, %66 ], [ 0.000000e+00, %18 ]
  %74 = phi float [ %70, %66 ], [ 0.000000e+00, %18 ]
  %75 = phi float [ %71, %66 ], [ 0.000000e+00, %18 ]
  store float %73, ptr %48, align 4
  store float %74, ptr %55, align 4
  store float %75, ptr %59, align 4
  %76 = getelementptr inbounds %struct.VertRen, ptr %33, i64 0, i32 1
  store float %73, ptr %76, align 4, !tbaa !13
  %77 = load float, ptr %55, align 4, !tbaa !13
  %78 = getelementptr inbounds %struct.VertRen, ptr %33, i64 0, i32 1, i64 1
  store float %77, ptr %78, align 4, !tbaa !13
  %79 = load float, ptr %59, align 4, !tbaa !13
  %80 = getelementptr inbounds %struct.VertRen, ptr %33, i64 0, i32 1, i64 2
  store float %79, ptr %80, align 4, !tbaa !13
  %81 = getelementptr inbounds %struct.VertRen, ptr %29, i64 0, i32 1
  %82 = load float, ptr %48, align 4, !tbaa !13
  store float %82, ptr %81, align 4, !tbaa !13
  %83 = load float, ptr %55, align 4, !tbaa !13
  %84 = getelementptr inbounds %struct.VertRen, ptr %29, i64 0, i32 1, i64 1
  store float %83, ptr %84, align 4, !tbaa !13
  %85 = load float, ptr %59, align 4, !tbaa !13
  %86 = getelementptr inbounds %struct.VertRen, ptr %29, i64 0, i32 1, i64 2
  store float %85, ptr %86, align 4, !tbaa !13
  %87 = getelementptr inbounds %struct.VlakRen, ptr %22, i64 0, i32 5
  store ptr %3, ptr %87, align 8, !tbaa !507
  %88 = getelementptr inbounds %struct.VlakRen, ptr %22, i64 0, i32 8
  store i8 1, ptr %88, align 2, !tbaa !509
  br label %789

89:                                               ; preds = %14
  %90 = getelementptr inbounds %struct.ParticleStrandData, ptr %4, i64 0, i32 10
  %91 = load i32, ptr %90, align 8, !tbaa !465
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %105, label %93

93:                                               ; preds = %89
  %94 = getelementptr inbounds %struct.ObjectRen, ptr %1, i64 0, i32 10
  %95 = load i32, ptr %94, align 8, !tbaa !177
  %96 = add nsw i32 %95, 1
  store i32 %96, ptr %94, align 8, !tbaa !177
  %97 = tail call ptr @RE_findOrAddVert(ptr noundef %1, i32 noundef %95) #16
  store ptr %97, ptr @static_particle_wire.v1, align 8, !tbaa !16
  %98 = load float, ptr %5, align 4, !tbaa !13
  store float %98, ptr %97, align 4, !tbaa !13
  %99 = getelementptr inbounds float, ptr %5, i64 1
  %100 = load float, ptr %99, align 4, !tbaa !13
  %101 = getelementptr inbounds float, ptr %97, i64 1
  store float %100, ptr %101, align 4, !tbaa !13
  %102 = getelementptr inbounds float, ptr %5, i64 2
  %103 = load float, ptr %102, align 4, !tbaa !13
  %104 = getelementptr inbounds float, ptr %97, i64 2
  store float %103, ptr %104, align 4, !tbaa !13
  br label %789

105:                                              ; preds = %89
  %106 = getelementptr inbounds %struct.ObjectRen, ptr %1, i64 0, i32 11
  %107 = load i32, ptr %106, align 4, !tbaa !499
  %108 = add nsw i32 %107, 1
  store i32 %108, ptr %106, align 4, !tbaa !499
  %109 = tail call ptr @RE_findOrAddVlak(ptr noundef %1, i32 noundef %107) #16
  %110 = load ptr, ptr @static_particle_wire.v1, align 8, !tbaa !16
  store ptr %110, ptr %109, align 8, !tbaa !502
  %111 = getelementptr inbounds %struct.ObjectRen, ptr %1, i64 0, i32 10
  %112 = load i32, ptr %111, align 8, !tbaa !177
  %113 = add nsw i32 %112, 1
  store i32 %113, ptr %111, align 8, !tbaa !177
  %114 = tail call ptr @RE_findOrAddVert(ptr noundef %1, i32 noundef %112) #16
  %115 = getelementptr inbounds %struct.VlakRen, ptr %109, i64 0, i32 1
  store ptr %114, ptr %115, align 8, !tbaa !504
  %116 = getelementptr inbounds %struct.VlakRen, ptr %109, i64 0, i32 2
  store ptr %114, ptr %116, align 8, !tbaa !505
  %117 = getelementptr inbounds %struct.VlakRen, ptr %109, i64 0, i32 3
  store ptr null, ptr %117, align 8, !tbaa !506
  store ptr %114, ptr @static_particle_wire.v1, align 8, !tbaa !16
  %118 = load float, ptr %5, align 4, !tbaa !13
  store float %118, ptr %114, align 4, !tbaa !13
  %119 = getelementptr inbounds float, ptr %5, i64 1
  %120 = load float, ptr %119, align 4, !tbaa !13
  %121 = getelementptr inbounds float, ptr %114, i64 1
  store float %120, ptr %121, align 4, !tbaa !13
  %122 = getelementptr inbounds float, ptr %5, i64 2
  %123 = load float, ptr %122, align 4, !tbaa !13
  %124 = getelementptr inbounds float, ptr %114, i64 2
  store float %123, ptr %124, align 4, !tbaa !13
  %125 = getelementptr inbounds %struct.VlakRen, ptr %109, i64 0, i32 4
  %126 = load float, ptr %5, align 4, !tbaa !13
  %127 = load float, ptr %6, align 4, !tbaa !13
  %128 = fsub fast float %126, %127
  store float %128, ptr %125, align 4, !tbaa !13
  %129 = load float, ptr %119, align 4, !tbaa !13
  %130 = getelementptr inbounds float, ptr %6, i64 1
  %131 = load float, ptr %130, align 4, !tbaa !13
  %132 = fsub fast float %129, %131
  %133 = getelementptr inbounds %struct.VlakRen, ptr %109, i64 0, i32 4, i64 1
  store float %132, ptr %133, align 4, !tbaa !13
  %134 = load float, ptr %122, align 4, !tbaa !13
  %135 = getelementptr inbounds float, ptr %6, i64 2
  %136 = load float, ptr %135, align 4, !tbaa !13
  %137 = fsub fast float %134, %136
  %138 = getelementptr inbounds %struct.VlakRen, ptr %109, i64 0, i32 4, i64 2
  %139 = fmul fast float %128, %128
  %140 = fmul fast float %132, %132
  %141 = fadd fast float %140, %139
  %142 = fmul fast float %137, %137
  %143 = fadd fast float %141, %142
  %144 = fcmp fast ogt float %143, 0x38AA95A5C0000000
  br i1 %144, label %145, label %151

145:                                              ; preds = %105
  %146 = tail call fast float @llvm.sqrt.f32(float %143)
  %147 = fdiv fast float 1.000000e+00, %146
  %148 = fmul fast float %147, %128
  %149 = fmul fast float %147, %132
  %150 = fmul fast float %147, %137
  br label %151

151:                                              ; preds = %145, %105
  %152 = phi float [ %148, %145 ], [ 0.000000e+00, %105 ]
  %153 = phi float [ %149, %145 ], [ 0.000000e+00, %105 ]
  %154 = phi float [ %150, %145 ], [ 0.000000e+00, %105 ]
  store float %152, ptr %125, align 4
  store float %153, ptr %133, align 4
  store float %154, ptr %138, align 4
  %155 = getelementptr inbounds %struct.VertRen, ptr %114, i64 0, i32 1
  store float %152, ptr %155, align 4, !tbaa !13
  %156 = load float, ptr %133, align 4, !tbaa !13
  %157 = getelementptr inbounds %struct.VertRen, ptr %114, i64 0, i32 1, i64 1
  store float %156, ptr %157, align 4, !tbaa !13
  %158 = load float, ptr %138, align 4, !tbaa !13
  %159 = getelementptr inbounds %struct.VertRen, ptr %114, i64 0, i32 1, i64 2
  store float %158, ptr %159, align 4, !tbaa !13
  %160 = getelementptr inbounds %struct.VlakRen, ptr %109, i64 0, i32 5
  store ptr %3, ptr %160, align 8, !tbaa !507
  %161 = getelementptr inbounds %struct.VlakRen, ptr %109, i64 0, i32 8
  store i8 1, ptr %161, align 2, !tbaa !509
  br label %789

162:                                              ; preds = %9
  %163 = getelementptr inbounds %struct.ParticleStrandData, ptr %4, i64 0, i32 1
  %164 = load ptr, ptr %163, align 8, !tbaa !400
  %165 = getelementptr inbounds %struct.ParticleStrandData, ptr %4, i64 0, i32 2
  %166 = load ptr, ptr %165, align 8, !tbaa !384
  %167 = getelementptr inbounds %struct.ParticleStrandData, ptr %4, i64 0, i32 7
  %168 = load float, ptr %167, align 4, !tbaa !464
  %169 = tail call ptr @RE_inithalo_particle(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef nonnull %3, ptr noundef %5, ptr noundef %6, ptr noundef %164, ptr noundef %166, float noundef nofpclass(nan inf) %168, float noundef nofpclass(nan inf) 1.000000e+00, i32 noundef %7, ptr noundef %8) #16
  %170 = icmp eq ptr %169, null
  br i1 %170, label %789, label %171

171:                                              ; preds = %162
  %172 = getelementptr inbounds %struct.ObjectRen, ptr %1, i64 0, i32 2
  %173 = load ptr, ptr %172, align 8, !tbaa !148
  %174 = getelementptr inbounds %struct.Object, ptr %173, i64 0, i32 52
  %175 = load i32, ptr %174, align 8, !tbaa !114
  %176 = getelementptr inbounds %struct.HaloRen, ptr %169, i64 0, i32 28
  store i32 %175, ptr %176, align 8, !tbaa !543
  br label %789

177:                                              ; preds = %9
  %178 = getelementptr inbounds float, ptr %5, i64 1
  %179 = getelementptr inbounds float, ptr %6, i64 1
  %180 = load <2 x float>, ptr %5, align 4, !tbaa !13
  %181 = load <2 x float>, ptr %6, align 4, !tbaa !13
  %182 = fsub fast <2 x float> %180, %181
  %183 = getelementptr inbounds float, ptr %5, i64 2
  %184 = load float, ptr %183, align 4, !tbaa !13
  %185 = getelementptr inbounds float, ptr %6, i64 2
  %186 = load float, ptr %185, align 4, !tbaa !13
  %187 = fsub fast float %184, %186
  %188 = fmul fast <2 x float> %182, %182
  %189 = shufflevector <2 x float> %188, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %190 = fadd fast <2 x float> %189, %188
  %191 = extractelement <2 x float> %190, i64 0
  %192 = fmul fast float %187, %187
  %193 = fadd fast float %191, %192
  %194 = fcmp fast ogt float %193, 0x38AA95A5C0000000
  br i1 %194, label %195, label %202

195:                                              ; preds = %177
  %196 = tail call fast float @llvm.sqrt.f32(float %193)
  %197 = fdiv fast float 1.000000e+00, %196
  %198 = insertelement <2 x float> poison, float %197, i64 0
  %199 = shufflevector <2 x float> %198, <2 x float> poison, <2 x i32> zeroinitializer
  %200 = fmul fast <2 x float> %199, %182
  %201 = fmul fast float %197, %187
  br label %202

202:                                              ; preds = %195, %177
  %203 = phi float [ %201, %195 ], [ 0.000000e+00, %177 ]
  %204 = phi <2 x float> [ %200, %195 ], [ zeroinitializer, %177 ]
  %205 = extractelement <2 x float> %204, i64 1
  %206 = extractelement <2 x float> %204, i64 0
  %207 = extractelement <2 x float> %180, i64 0
  %208 = fmul fast float %205, %207
  %209 = shufflevector <2 x float> %180, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %210 = fmul fast <2 x float> %204, %209
  %211 = extractelement <2 x float> %210, i64 0
  %212 = fsub fast float %208, %211
  %213 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 35
  %214 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 35, i64 2, i64 3
  %215 = load float, ptr %214, align 4, !tbaa !13
  %216 = fmul fast float %215, %184
  %217 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 35, i64 3, i64 3
  %218 = load float, ptr %217, align 4, !tbaa !13
  %219 = fadd fast float %216, %218
  %220 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 13
  %221 = load float, ptr %213, align 8, !tbaa !13
  %222 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 35, i64 1, i64 1
  %223 = load float, ptr %222, align 4, !tbaa !13
  %224 = shufflevector <2 x float> %180, <2 x float> %204, <2 x i32> <i32 1, i32 2>
  %225 = insertelement <2 x float> poison, float %203, i64 0
  %226 = insertelement <2 x float> %225, float %184, i64 1
  %227 = fmul fast <2 x float> %224, %226
  %228 = shufflevector <2 x float> %226, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %229 = shufflevector <2 x float> %204, <2 x float> %180, <2 x i32> <i32 1, i32 2>
  %230 = fmul fast <2 x float> %228, %229
  %231 = fsub fast <2 x float> %227, %230
  %232 = load <2 x i32>, ptr %220, align 4, !tbaa !47
  %233 = sitofp <2 x i32> %232 to <2 x float>
  %234 = fmul fast <2 x float> %231, %233
  %235 = insertelement <2 x float> poison, float %221, i64 0
  %236 = insertelement <2 x float> %235, float %223, i64 1
  %237 = fmul fast <2 x float> %234, %236
  %238 = fmul fast <2 x float> %237, %237
  %239 = shufflevector <2 x float> %238, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %240 = fadd fast <2 x float> %239, %238
  %241 = extractelement <2 x float> %240, i64 0
  %242 = tail call fast float @llvm.sqrt.f32(float %241)
  %243 = fdiv fast float %242, %219
  %244 = fcmp fast une float %243, 0.000000e+00
  br i1 %244, label %252, label %245

245:                                              ; preds = %202
  %246 = getelementptr inbounds %struct.Material, ptr %3, i64 0, i32 51
  %247 = load i32, ptr %246, align 4, !tbaa !102
  %248 = getelementptr inbounds %struct.Material, ptr %3, i64 0, i32 63
  %249 = load float, ptr %248, align 4, !tbaa !612
  %250 = extractelement <2 x float> %231, i64 0
  %251 = extractelement <2 x float> %231, i64 1
  br label %321

252:                                              ; preds = %202
  %253 = getelementptr inbounds %struct.Material, ptr %3, i64 0, i32 65
  %254 = load float, ptr %253, align 4, !tbaa !624
  %255 = fcmp fast une float %254, 0.000000e+00
  br i1 %255, label %256, label %272

256:                                              ; preds = %252
  %257 = fcmp fast olt float %254, 0.000000e+00
  %258 = getelementptr inbounds %struct.ParticleStrandData, ptr %4, i64 0, i32 4
  %259 = load float, ptr %258, align 8, !tbaa !466
  %260 = fpext float %259 to double
  br i1 %257, label %261, label %266

261:                                              ; preds = %256
  %262 = fadd fast float %254, 1.000000e+00
  %263 = fpext float %262 to double
  %264 = tail call fast double @llvm.pow.f64(double %260, double %263)
  %265 = fptrunc double %264 to float
  br label %275

266:                                              ; preds = %256
  %267 = fsub fast float 1.000000e+00, %254
  %268 = fdiv fast float 1.000000e+00, %267
  %269 = fpext float %268 to double
  %270 = tail call fast double @llvm.pow.f64(double %260, double %269)
  %271 = fptrunc double %270 to float
  br label %275

272:                                              ; preds = %252
  %273 = getelementptr inbounds %struct.ParticleStrandData, ptr %4, i64 0, i32 4
  %274 = load float, ptr %273, align 8, !tbaa !466
  br label %275

275:                                              ; preds = %272, %266, %261
  %276 = phi float [ %265, %261 ], [ %271, %266 ], [ %274, %272 ]
  %277 = getelementptr inbounds %struct.Material, ptr %3, i64 0, i32 63
  %278 = load float, ptr %277, align 4, !tbaa !612
  %279 = getelementptr inbounds %struct.Material, ptr %3, i64 0, i32 64
  %280 = load float, ptr %279, align 8, !tbaa !613
  %281 = fsub fast float %280, %278
  %282 = fmul fast float %281, %276
  %283 = fadd fast float %282, %278
  %284 = getelementptr inbounds %struct.Material, ptr %3, i64 0, i32 51
  %285 = load i32, ptr %284, align 4, !tbaa !102
  %286 = and i32 %285, 1073741824
  %287 = icmp eq i32 %286, 0
  br i1 %287, label %309, label %288

288:                                              ; preds = %275
  %289 = extractelement <2 x float> %231, i64 0
  %290 = fmul fast <2 x float> %231, %231
  %291 = extractelement <2 x float> %290, i64 0
  %292 = extractelement <2 x float> %231, i64 1
  %293 = fmul fast float %292, %292
  %294 = fmul fast float %212, %212
  %295 = fadd fast float %291, %294
  %296 = fadd fast float %295, %293
  %297 = tail call fast float @llvm.sqrt.f32(float %296)
  %298 = fmul fast float %297, 2.000000e+00
  %299 = getelementptr inbounds %struct.Material, ptr %3, i64 0, i32 67
  %300 = load float, ptr %299, align 4, !tbaa !411
  %301 = fmul fast float %298, %300
  %302 = fdiv fast float %301, %243
  %303 = fcmp fast olt float %283, %302
  %304 = select i1 %303, float %302, float %283
  %305 = fdiv fast float 5.000000e-01, %297
  %306 = fmul fast float %305, %289
  %307 = fmul fast float %305, %292
  %308 = fmul fast float %305, %212
  br label %313

309:                                              ; preds = %275
  %310 = fdiv fast float %283, %243
  %311 = extractelement <2 x float> %231, i64 0
  %312 = extractelement <2 x float> %231, i64 1
  br label %313

313:                                              ; preds = %309, %288
  %314 = phi float [ %212, %309 ], [ %308, %288 ]
  %315 = phi float [ %312, %309 ], [ %307, %288 ]
  %316 = phi float [ %311, %309 ], [ %306, %288 ]
  %317 = phi float [ %310, %309 ], [ %304, %288 ]
  %318 = fmul fast float %317, %316
  %319 = fmul fast float %317, %315
  %320 = fmul fast float %317, %314
  br label %321

321:                                              ; preds = %313, %245
  %322 = phi float [ %278, %313 ], [ %249, %245 ]
  %323 = phi i32 [ %285, %313 ], [ %247, %245 ]
  %324 = phi float [ %320, %313 ], [ %212, %245 ]
  %325 = phi float [ %319, %313 ], [ %251, %245 ]
  %326 = phi float [ %318, %313 ], [ %250, %245 ]
  %327 = and i32 %323, 16777216
  %328 = icmp eq i32 %327, 0
  %329 = select i1 %328, i32 1, i32 65
  %330 = fcmp fast oeq float %322, 1.000000e+00
  %331 = or i32 %329, 4
  %332 = select i1 %330, i32 %331, i32 %329
  %333 = getelementptr inbounds %struct.ParticleStrandData, ptr %4, i64 0, i32 11
  %334 = load i32, ptr %333, align 4, !tbaa !623
  %335 = icmp eq i32 %334, 0
  br i1 %335, label %491, label %336

336:                                              ; preds = %321
  %337 = getelementptr inbounds %struct.ObjectRen, ptr %1, i64 0, i32 11
  %338 = load i32, ptr %337, align 4, !tbaa !499
  %339 = add nsw i32 %338, 1
  store i32 %339, ptr %337, align 4, !tbaa !499
  %340 = tail call ptr @RE_findOrAddVlak(ptr noundef %1, i32 noundef %338) #16
  %341 = trunc i32 %332 to i8
  %342 = getelementptr inbounds %struct.VlakRen, ptr %340, i64 0, i32 7
  store i8 %341, ptr %342, align 1, !tbaa !508
  %343 = getelementptr inbounds %struct.ObjectRen, ptr %1, i64 0, i32 10
  %344 = load i32, ptr %343, align 8, !tbaa !177
  %345 = add nsw i32 %344, 1
  store i32 %345, ptr %343, align 8, !tbaa !177
  %346 = tail call ptr @RE_findOrAddVert(ptr noundef %1, i32 noundef %344) #16
  store ptr %346, ptr %340, align 8, !tbaa !502
  %347 = load i32, ptr %343, align 8, !tbaa !177
  %348 = add nsw i32 %347, 1
  store i32 %348, ptr %343, align 8, !tbaa !177
  %349 = tail call ptr @RE_findOrAddVert(ptr noundef %1, i32 noundef %347) #16
  %350 = getelementptr inbounds %struct.VlakRen, ptr %340, i64 0, i32 1
  store ptr %349, ptr %350, align 8, !tbaa !504
  %351 = load i32, ptr %343, align 8, !tbaa !177
  %352 = add nsw i32 %351, 1
  store i32 %352, ptr %343, align 8, !tbaa !177
  %353 = tail call ptr @RE_findOrAddVert(ptr noundef %1, i32 noundef %351) #16
  %354 = getelementptr inbounds %struct.VlakRen, ptr %340, i64 0, i32 2
  store ptr %353, ptr %354, align 8, !tbaa !505
  %355 = load i32, ptr %343, align 8, !tbaa !177
  %356 = add nsw i32 %355, 1
  store i32 %356, ptr %343, align 8, !tbaa !177
  %357 = tail call ptr @RE_findOrAddVert(ptr noundef %1, i32 noundef %355) #16
  %358 = getelementptr inbounds %struct.VlakRen, ptr %340, i64 0, i32 3
  store ptr %357, ptr %358, align 8, !tbaa !506
  %359 = load ptr, ptr %340, align 8, !tbaa !502
  %360 = load float, ptr %5, align 4, !tbaa !13
  store float %360, ptr %359, align 4, !tbaa !13
  %361 = load float, ptr %178, align 4, !tbaa !13
  %362 = getelementptr inbounds float, ptr %359, i64 1
  store float %361, ptr %362, align 4, !tbaa !13
  %363 = load float, ptr %183, align 4, !tbaa !13
  %364 = getelementptr inbounds float, ptr %359, i64 2
  %365 = fadd fast float %360, %326
  store float %365, ptr %359, align 4, !tbaa !13
  %366 = fadd fast float %361, %325
  store float %366, ptr %362, align 4, !tbaa !13
  %367 = fadd fast float %363, %324
  store float %367, ptr %364, align 4, !tbaa !13
  %368 = getelementptr inbounds %struct.VertRen, ptr %359, i64 0, i32 1
  store <2 x float> %204, ptr %368, align 4, !tbaa !13
  %369 = getelementptr inbounds %struct.VertRen, ptr %359, i64 0, i32 1, i64 2
  store float %203, ptr %369, align 4, !tbaa !13
  %370 = getelementptr inbounds %struct.ParticleStrandData, ptr %4, i64 0, i32 1
  %371 = load ptr, ptr %370, align 8, !tbaa !400
  %372 = getelementptr inbounds %struct.VertRen, ptr %359, i64 0, i32 2
  store ptr %371, ptr %372, align 8, !tbaa !496
  %373 = getelementptr inbounds %struct.VertRen, ptr %359, i64 0, i32 4
  store float -1.000000e+00, ptr %373, align 4, !tbaa !625
  %374 = load ptr, ptr %350, align 8, !tbaa !504
  %375 = load float, ptr %5, align 4, !tbaa !13
  store float %375, ptr %374, align 4, !tbaa !13
  %376 = load float, ptr %178, align 4, !tbaa !13
  %377 = getelementptr inbounds float, ptr %374, i64 1
  store float %376, ptr %377, align 4, !tbaa !13
  %378 = load float, ptr %183, align 4, !tbaa !13
  %379 = getelementptr inbounds float, ptr %374, i64 2
  %380 = fsub fast float %375, %326
  store float %380, ptr %374, align 4, !tbaa !13
  %381 = fsub fast float %376, %325
  store float %381, ptr %377, align 4, !tbaa !13
  %382 = fsub fast float %378, %324
  store float %382, ptr %379, align 4, !tbaa !13
  %383 = getelementptr inbounds %struct.VertRen, ptr %374, i64 0, i32 1
  store <2 x float> %204, ptr %383, align 4, !tbaa !13
  %384 = getelementptr inbounds %struct.VertRen, ptr %374, i64 0, i32 1, i64 2
  store float %203, ptr %384, align 4, !tbaa !13
  %385 = getelementptr inbounds %struct.VertRen, ptr %374, i64 0, i32 2
  store ptr %371, ptr %385, align 8, !tbaa !496
  %386 = load float, ptr %373, align 4, !tbaa !625
  %387 = getelementptr inbounds %struct.VertRen, ptr %374, i64 0, i32 4
  store float %386, ptr %387, align 4, !tbaa !625
  %388 = load float, ptr %6, align 4, !tbaa !13
  store float %388, ptr %357, align 4, !tbaa !13
  %389 = load float, ptr %179, align 4, !tbaa !13
  %390 = getelementptr inbounds float, ptr %357, i64 1
  store float %389, ptr %390, align 4, !tbaa !13
  %391 = load float, ptr %185, align 4, !tbaa !13
  %392 = getelementptr inbounds float, ptr %357, i64 2
  %393 = fadd fast float %388, %326
  store float %393, ptr %357, align 4, !tbaa !13
  %394 = fadd fast float %389, %325
  store float %394, ptr %390, align 4, !tbaa !13
  %395 = fadd fast float %391, %324
  store float %395, ptr %392, align 4, !tbaa !13
  %396 = getelementptr inbounds %struct.VertRen, ptr %357, i64 0, i32 1
  store <2 x float> %204, ptr %396, align 4, !tbaa !13
  %397 = getelementptr inbounds %struct.VertRen, ptr %357, i64 0, i32 1, i64 2
  store float %203, ptr %397, align 4, !tbaa !13
  %398 = getelementptr inbounds %struct.VertRen, ptr %357, i64 0, i32 2
  store ptr %371, ptr %398, align 8, !tbaa !496
  %399 = getelementptr inbounds %struct.VertRen, ptr %357, i64 0, i32 4
  store float 1.000000e+00, ptr %399, align 4, !tbaa !625
  %400 = load ptr, ptr %354, align 8, !tbaa !505
  %401 = load float, ptr %6, align 4, !tbaa !13
  store float %401, ptr %400, align 4, !tbaa !13
  %402 = load float, ptr %179, align 4, !tbaa !13
  %403 = getelementptr inbounds float, ptr %400, i64 1
  store float %402, ptr %403, align 4, !tbaa !13
  %404 = load float, ptr %185, align 4, !tbaa !13
  %405 = getelementptr inbounds float, ptr %400, i64 2
  %406 = fsub fast float %401, %326
  store float %406, ptr %400, align 4, !tbaa !13
  %407 = fsub fast float %402, %325
  store float %407, ptr %403, align 4, !tbaa !13
  %408 = fsub fast float %404, %324
  store float %408, ptr %405, align 4, !tbaa !13
  %409 = getelementptr inbounds %struct.VertRen, ptr %400, i64 0, i32 1
  store <2 x float> %204, ptr %409, align 4, !tbaa !13
  %410 = getelementptr inbounds %struct.VertRen, ptr %400, i64 0, i32 1, i64 2
  store float %203, ptr %410, align 4, !tbaa !13
  %411 = getelementptr inbounds %struct.VertRen, ptr %400, i64 0, i32 2
  store ptr %371, ptr %411, align 8, !tbaa !496
  %412 = load float, ptr %399, align 4, !tbaa !625
  %413 = getelementptr inbounds %struct.VertRen, ptr %400, i64 0, i32 4
  store float %412, ptr %413, align 4, !tbaa !625
  %414 = getelementptr inbounds %struct.VlakRen, ptr %340, i64 0, i32 4
  %415 = tail call fast nofpclass(nan inf) float @normal_quad_v3(ptr noundef nonnull %414, ptr noundef nonnull %357, ptr noundef nonnull %400, ptr noundef nonnull %374, ptr noundef nonnull %359) #16
  %416 = getelementptr inbounds %struct.VlakRen, ptr %340, i64 0, i32 5
  store ptr %3, ptr %416, align 8, !tbaa !507
  %417 = getelementptr inbounds %struct.VlakRen, ptr %340, i64 0, i32 8
  store i8 2, ptr %417, align 2, !tbaa !509
  %418 = getelementptr inbounds %struct.ParticleStrandData, ptr %4, i64 0, i32 3
  %419 = load ptr, ptr %418, align 8, !tbaa !457
  %420 = icmp eq ptr %419, null
  br i1 %420, label %431, label %421

421:                                              ; preds = %336
  %422 = tail call ptr @RE_vlakren_get_surfnor(ptr noundef nonnull %1, ptr noundef nonnull %340, i32 noundef 1) #16
  %423 = load ptr, ptr %418, align 8, !tbaa !457
  %424 = load float, ptr %423, align 4, !tbaa !13
  store float %424, ptr %422, align 4, !tbaa !13
  %425 = getelementptr inbounds float, ptr %423, i64 1
  %426 = load float, ptr %425, align 4, !tbaa !13
  %427 = getelementptr inbounds float, ptr %422, i64 1
  store float %426, ptr %427, align 4, !tbaa !13
  %428 = getelementptr inbounds float, ptr %423, i64 2
  %429 = load float, ptr %428, align 4, !tbaa !13
  %430 = getelementptr inbounds float, ptr %422, i64 2
  store float %429, ptr %430, align 4, !tbaa !13
  br label %431

431:                                              ; preds = %421, %336
  %432 = getelementptr inbounds %struct.ParticleStrandData, ptr %4, i64 0, i32 2
  %433 = load ptr, ptr %432, align 8, !tbaa !384
  %434 = icmp eq ptr %433, null
  br i1 %434, label %466, label %435

435:                                              ; preds = %431
  %436 = getelementptr inbounds %struct.ParticleStrandData, ptr %4, i64 0, i32 8
  %437 = load i32, ptr %436, align 8, !tbaa !382
  %438 = icmp sgt i32 %437, 0
  br i1 %438, label %439, label %460

439:                                              ; preds = %435, %439
  %440 = phi i64 [ %456, %439 ], [ 0, %435 ]
  %441 = trunc i64 %440 to i32
  %442 = tail call ptr @RE_vlakren_get_tface(ptr noundef %1, ptr noundef nonnull %340, i32 noundef %441, ptr noundef null, i32 noundef 1) #16
  %443 = load ptr, ptr %432, align 8, !tbaa !384
  %444 = shl nuw nsw i64 %440, 1
  %445 = getelementptr inbounds float, ptr %443, i64 %444
  %446 = load float, ptr %445, align 4, !tbaa !13
  %447 = getelementptr inbounds [4 x [2 x float]], ptr %442, i64 0, i64 3
  store float %446, ptr %447, align 8, !tbaa !13
  %448 = getelementptr inbounds [4 x [2 x float]], ptr %442, i64 0, i64 2
  store float %446, ptr %448, align 8, !tbaa !13
  %449 = getelementptr inbounds [4 x [2 x float]], ptr %442, i64 0, i64 1
  store float %446, ptr %449, align 8, !tbaa !13
  store float %446, ptr %442, align 8, !tbaa !13
  %450 = getelementptr inbounds float, ptr %445, i64 1
  %451 = load float, ptr %450, align 4, !tbaa !13
  %452 = getelementptr inbounds [4 x [2 x float]], ptr %442, i64 0, i64 3, i64 1
  store float %451, ptr %452, align 4, !tbaa !13
  %453 = getelementptr inbounds [4 x [2 x float]], ptr %442, i64 0, i64 2, i64 1
  store float %451, ptr %453, align 4, !tbaa !13
  %454 = getelementptr inbounds [4 x [2 x float]], ptr %442, i64 0, i64 1, i64 1
  store float %451, ptr %454, align 4, !tbaa !13
  %455 = getelementptr inbounds [2 x float], ptr %442, i64 0, i64 1
  store float %451, ptr %455, align 4, !tbaa !13
  %456 = add nuw nsw i64 %440, 1
  %457 = load i32, ptr %436, align 8, !tbaa !382
  %458 = sext i32 %457 to i64
  %459 = icmp slt i64 %456, %458
  br i1 %459, label %439, label %460, !llvm.loop !626

460:                                              ; preds = %439, %435
  %461 = getelementptr inbounds %struct.ParticleStrandData, ptr %4, i64 0, i32 13
  %462 = load i32, ptr %461, align 4, !tbaa !376
  %463 = icmp sgt i32 %462, -1
  br i1 %463, label %464, label %466

464:                                              ; preds = %460
  %465 = tail call ptr @RE_vlakren_get_tface(ptr noundef %1, ptr noundef nonnull %340, i32 noundef %462, ptr noundef null, i32 noundef 0) #16
  store <8 x float> <float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 1.000000e+00, float 1.000000e+00, float 0.000000e+00, float 1.000000e+00>, ptr %465, align 8, !tbaa !13
  br label %466

466:                                              ; preds = %464, %460, %431
  %467 = load ptr, ptr %4, align 8, !tbaa !385
  %468 = icmp eq ptr %467, null
  br i1 %468, label %789, label %469

469:                                              ; preds = %466
  %470 = getelementptr inbounds %struct.ParticleStrandData, ptr %4, i64 0, i32 9
  %471 = load i32, ptr %470, align 4, !tbaa !383
  %472 = icmp sgt i32 %471, 0
  br i1 %472, label %473, label %789

473:                                              ; preds = %469, %473
  %474 = phi i64 [ %487, %473 ], [ 0, %469 ]
  %475 = trunc i64 %474 to i32
  %476 = tail call ptr @RE_vlakren_get_mcol(ptr noundef %1, ptr noundef nonnull %340, i32 noundef %475, ptr noundef null, i32 noundef 1) #16
  %477 = load ptr, ptr %4, align 8, !tbaa !385
  %478 = getelementptr inbounds %struct.MCol, ptr %477, i64 %474
  %479 = load i32, ptr %478, align 1
  %480 = insertelement <4 x i32> poison, i32 %479, i64 0
  %481 = shufflevector <4 x i32> %480, <4 x i32> poison, <4 x i32> zeroinitializer
  store <4 x i32> %481, ptr %476, align 1
  %482 = load ptr, ptr %4, align 8, !tbaa !385
  %483 = getelementptr inbounds %struct.MCol, ptr %482, i64 %474
  %484 = load i32, ptr %483, align 1
  %485 = insertelement <4 x i32> poison, i32 %484, i64 0
  %486 = shufflevector <4 x i32> %485, <4 x i32> poison, <4 x i32> zeroinitializer
  store <4 x i32> %486, ptr %476, align 1
  %487 = add nuw nsw i64 %474, 1
  %488 = load i32, ptr %470, align 4, !tbaa !383
  %489 = sext i32 %488 to i64
  %490 = icmp slt i64 %487, %489
  br i1 %490, label %473, label %789, !llvm.loop !627

491:                                              ; preds = %321
  %492 = getelementptr inbounds %struct.ParticleStrandData, ptr %4, i64 0, i32 10
  %493 = load i32, ptr %492, align 8, !tbaa !465
  %494 = icmp eq i32 %493, 0
  %495 = getelementptr inbounds %struct.ParticleStrandData, ptr %4, i64 0, i32 12
  %496 = load i32, ptr %495, align 8, !tbaa !401
  %497 = icmp eq i32 %496, 0
  br i1 %494, label %539, label %498

498:                                              ; preds = %491
  br i1 %497, label %503, label %499

499:                                              ; preds = %498
  store float %206, ptr @static_particle_strand.anor.0, align 4, !tbaa !13
  store float %205, ptr @static_particle_strand.anor.1, align 4, !tbaa !13
  store float %203, ptr @static_particle_strand.anor.2, align 4, !tbaa !13
  %500 = load float, ptr %5, align 4, !tbaa !13
  store float %500, ptr @static_particle_strand.avec.0, align 4, !tbaa !13
  %501 = load float, ptr %178, align 4, !tbaa !13
  store float %501, ptr @static_particle_strand.avec.1, align 4, !tbaa !13
  %502 = load float, ptr %183, align 4, !tbaa !13
  store float %502, ptr @static_particle_strand.avec.2, align 4, !tbaa !13
  store i1 true, ptr @static_particle_strand.second, align 4
  br label %503

503:                                              ; preds = %499, %498
  %504 = getelementptr inbounds %struct.ObjectRen, ptr %1, i64 0, i32 10
  %505 = load i32, ptr %504, align 8, !tbaa !177
  %506 = add nsw i32 %505, 1
  store i32 %506, ptr %504, align 8, !tbaa !177
  %507 = tail call ptr @RE_findOrAddVert(ptr noundef %1, i32 noundef %505) #16
  store ptr %507, ptr @static_particle_strand.v1, align 8, !tbaa !16
  %508 = load i32, ptr %504, align 8, !tbaa !177
  %509 = add nsw i32 %508, 1
  store i32 %509, ptr %504, align 8, !tbaa !177
  %510 = tail call ptr @RE_findOrAddVert(ptr noundef %1, i32 noundef %508) #16
  store ptr %510, ptr @static_particle_strand.v2, align 8, !tbaa !16
  %511 = load ptr, ptr @static_particle_strand.v1, align 8, !tbaa !16
  %512 = load float, ptr %5, align 4, !tbaa !13
  store float %512, ptr %511, align 4, !tbaa !13
  %513 = load float, ptr %178, align 4, !tbaa !13
  %514 = getelementptr inbounds float, ptr %511, i64 1
  store float %513, ptr %514, align 4, !tbaa !13
  %515 = load float, ptr %183, align 4, !tbaa !13
  %516 = getelementptr inbounds float, ptr %511, i64 2
  %517 = fadd fast float %512, %326
  store float %517, ptr %511, align 4, !tbaa !13
  %518 = fadd fast float %513, %325
  store float %518, ptr %514, align 4, !tbaa !13
  %519 = fadd fast float %515, %324
  store float %519, ptr %516, align 4, !tbaa !13
  %520 = getelementptr inbounds %struct.VertRen, ptr %511, i64 0, i32 1
  store <2 x float> %204, ptr %520, align 4, !tbaa !13
  %521 = getelementptr inbounds %struct.VertRen, ptr %511, i64 0, i32 1, i64 2
  store float %203, ptr %521, align 4, !tbaa !13
  %522 = getelementptr inbounds %struct.ParticleStrandData, ptr %4, i64 0, i32 1
  %523 = load ptr, ptr %522, align 8, !tbaa !400
  %524 = getelementptr inbounds %struct.VertRen, ptr %511, i64 0, i32 2
  store ptr %523, ptr %524, align 8, !tbaa !496
  %525 = getelementptr inbounds %struct.VertRen, ptr %511, i64 0, i32 4
  store float -1.000000e+00, ptr %525, align 4, !tbaa !625
  %526 = load float, ptr %5, align 4, !tbaa !13
  store float %526, ptr %510, align 4, !tbaa !13
  %527 = load float, ptr %178, align 4, !tbaa !13
  %528 = getelementptr inbounds float, ptr %510, i64 1
  store float %527, ptr %528, align 4, !tbaa !13
  %529 = load float, ptr %183, align 4, !tbaa !13
  %530 = getelementptr inbounds float, ptr %510, i64 2
  %531 = fsub fast float %526, %326
  store float %531, ptr %510, align 4, !tbaa !13
  %532 = fsub fast float %527, %325
  store float %532, ptr %528, align 4, !tbaa !13
  %533 = fsub fast float %529, %324
  store float %533, ptr %530, align 4, !tbaa !13
  %534 = getelementptr inbounds %struct.VertRen, ptr %510, i64 0, i32 1
  store <2 x float> %204, ptr %534, align 4, !tbaa !13
  %535 = getelementptr inbounds %struct.VertRen, ptr %510, i64 0, i32 1, i64 2
  store float %203, ptr %535, align 4, !tbaa !13
  %536 = getelementptr inbounds %struct.VertRen, ptr %510, i64 0, i32 2
  store ptr %523, ptr %536, align 8, !tbaa !496
  %537 = load float, ptr %525, align 4, !tbaa !625
  %538 = getelementptr inbounds %struct.VertRen, ptr %510, i64 0, i32 4
  store float %537, ptr %538, align 4, !tbaa !625
  br label %789

539:                                              ; preds = %491
  %540 = load i1, ptr @static_particle_strand.second, align 4
  %541 = select i1 %497, i1 true, i1 %540
  br i1 %541, label %542, label %568

542:                                              ; preds = %539
  %543 = getelementptr inbounds %struct.ObjectRen, ptr %1, i64 0, i32 11
  %544 = load i32, ptr %543, align 4, !tbaa !499
  %545 = add nsw i32 %544, 1
  store i32 %545, ptr %543, align 4, !tbaa !499
  %546 = tail call ptr @RE_findOrAddVlak(ptr noundef %1, i32 noundef %544) #16
  %547 = trunc i32 %332 to i8
  %548 = getelementptr inbounds %struct.VlakRen, ptr %546, i64 0, i32 7
  store i8 %547, ptr %548, align 1, !tbaa !508
  %549 = load ptr, ptr @static_particle_strand.v1, align 8, !tbaa !16
  store ptr %549, ptr %546, align 8, !tbaa !502
  %550 = load ptr, ptr @static_particle_strand.v2, align 8, !tbaa !16
  %551 = getelementptr inbounds %struct.VlakRen, ptr %546, i64 0, i32 1
  store ptr %550, ptr %551, align 8, !tbaa !504
  %552 = getelementptr inbounds %struct.ObjectRen, ptr %1, i64 0, i32 10
  %553 = load i32, ptr %552, align 8, !tbaa !177
  %554 = add nsw i32 %553, 1
  store i32 %554, ptr %552, align 8, !tbaa !177
  %555 = tail call ptr @RE_findOrAddVert(ptr noundef %1, i32 noundef %553) #16
  %556 = getelementptr inbounds %struct.VlakRen, ptr %546, i64 0, i32 2
  store ptr %555, ptr %556, align 8, !tbaa !505
  %557 = load i32, ptr %552, align 8, !tbaa !177
  %558 = add nsw i32 %557, 1
  store i32 %558, ptr %552, align 8, !tbaa !177
  %559 = tail call ptr @RE_findOrAddVert(ptr noundef %1, i32 noundef %557) #16
  %560 = getelementptr inbounds %struct.VlakRen, ptr %546, i64 0, i32 3
  store ptr %559, ptr %560, align 8, !tbaa !506
  store ptr %559, ptr @static_particle_strand.v1, align 8, !tbaa !16
  %561 = load ptr, ptr %556, align 8, !tbaa !505
  store ptr %561, ptr @static_particle_strand.v2, align 8, !tbaa !16
  %562 = load i32, ptr %495, align 8, !tbaa !401
  %563 = icmp eq i32 %562, 0
  br i1 %563, label %656, label %564

564:                                              ; preds = %542
  store i1 false, ptr @static_particle_strand.second, align 4
  store float %206, ptr @static_particle_strand.anor.0, align 4, !tbaa !13
  store float %205, ptr @static_particle_strand.anor.1, align 4, !tbaa !13
  store float %203, ptr @static_particle_strand.anor.2, align 4, !tbaa !13
  %565 = load float, ptr %5, align 4, !tbaa !13
  store float %565, ptr @static_particle_strand.avec.0, align 4, !tbaa !13
  %566 = load float, ptr %178, align 4, !tbaa !13
  store float %566, ptr @static_particle_strand.avec.1, align 4, !tbaa !13
  %567 = load float, ptr %183, align 4, !tbaa !13
  store float %567, ptr @static_particle_strand.avec.2, align 4, !tbaa !13
  br label %656

568:                                              ; preds = %539
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %10) #16
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %11) #16
  %569 = load float, ptr @static_particle_strand.avec.0, align 4, !tbaa !13
  %570 = load float, ptr @static_particle_strand.avec.1, align 4, !tbaa !13
  %571 = insertelement <2 x float> poison, float %569, i64 0
  %572 = insertelement <2 x float> %571, float %570, i64 1
  %573 = fsub fast <2 x float> %572, %180
  store <2 x float> %573, ptr %10, align 8, !tbaa !13
  %574 = load float, ptr @static_particle_strand.avec.2, align 4, !tbaa !13
  %575 = fsub fast float %574, %184
  %576 = getelementptr inbounds float, ptr %10, i64 2
  store float %575, ptr %576, align 8, !tbaa !13
  call void @project_v3_v3v3(ptr noundef nonnull %11, ptr noundef nonnull %10, ptr noundef nonnull %5) #16
  %577 = load <2 x float>, ptr %10, align 8, !tbaa !13
  %578 = load <2 x float>, ptr %11, align 8, !tbaa !13
  %579 = fsub fast <2 x float> %577, %578
  store <2 x float> %579, ptr %10, align 8, !tbaa !13
  %580 = load float, ptr %576, align 8, !tbaa !13
  %581 = getelementptr inbounds float, ptr %11, i64 2
  %582 = load float, ptr %581, align 8, !tbaa !13
  %583 = fsub fast float %580, %582
  store float %583, ptr %576, align 8, !tbaa !13
  %584 = load float, ptr @static_particle_strand.anor.0, align 4, !tbaa !13
  %585 = fmul fast float %584, %206
  %586 = load float, ptr @static_particle_strand.anor.1, align 4, !tbaa !13
  %587 = fmul fast float %586, %205
  %588 = fadd fast float %587, %585
  %589 = load float, ptr @static_particle_strand.anor.2, align 4, !tbaa !13
  %590 = fmul fast float %589, %203
  %591 = fadd fast float %588, %590
  %592 = getelementptr inbounds %struct.ParticleStrandData, ptr %4, i64 0, i32 5
  %593 = load float, ptr %592, align 4, !tbaa !405
  %594 = fcmp fast olt float %591, %593
  br i1 %594, label %595, label %643

595:                                              ; preds = %568
  %596 = load float, ptr %222, align 4, !tbaa !13
  %597 = load float, ptr %213, align 8, !tbaa !13
  %598 = load float, ptr %217, align 4, !tbaa !13
  %599 = load float, ptr %214, align 4, !tbaa !13
  %600 = load float, ptr %183, align 4, !tbaa !13
  %601 = fmul fast float %600, %599
  %602 = fadd fast float %601, %598
  %603 = load <2 x i32>, ptr %220, align 4, !tbaa !47
  %604 = sitofp <2 x i32> %603 to <2 x float>
  %605 = insertelement <2 x float> poison, float %597, i64 0
  %606 = insertelement <2 x float> %605, float %596, i64 1
  %607 = fmul fast <2 x float> %606, %579
  %608 = fmul fast <2 x float> %607, %604
  %609 = insertelement <2 x float> poison, float %602, i64 0
  %610 = shufflevector <2 x float> %609, <2 x float> poison, <2 x i32> zeroinitializer
  %611 = fdiv fast <2 x float> %608, %610
  %612 = fmul fast <2 x float> %611, %611
  %613 = shufflevector <2 x float> %612, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %614 = fadd fast <2 x float> %612, %613
  %615 = extractelement <2 x float> %614, i64 0
  %616 = call fast float @llvm.sqrt.f32(float %615)
  %617 = getelementptr inbounds %struct.ParticleStrandData, ptr %4, i64 0, i32 6
  %618 = load float, ptr %617, align 8, !tbaa !403
  %619 = fcmp fast ogt float %616, %618
  br i1 %619, label %620, label %643

620:                                              ; preds = %595
  %621 = getelementptr inbounds %struct.ObjectRen, ptr %1, i64 0, i32 11
  %622 = load i32, ptr %621, align 4, !tbaa !499
  %623 = add nsw i32 %622, 1
  store i32 %623, ptr %621, align 4, !tbaa !499
  %624 = call ptr @RE_findOrAddVlak(ptr noundef %1, i32 noundef %622) #16
  %625 = trunc i32 %332 to i8
  %626 = getelementptr inbounds %struct.VlakRen, ptr %624, i64 0, i32 7
  store i8 %625, ptr %626, align 1, !tbaa !508
  %627 = load ptr, ptr @static_particle_strand.v1, align 8, !tbaa !16
  store ptr %627, ptr %624, align 8, !tbaa !502
  %628 = load ptr, ptr @static_particle_strand.v2, align 8, !tbaa !16
  %629 = getelementptr inbounds %struct.VlakRen, ptr %624, i64 0, i32 1
  store ptr %628, ptr %629, align 8, !tbaa !504
  %630 = getelementptr inbounds %struct.ObjectRen, ptr %1, i64 0, i32 10
  %631 = load i32, ptr %630, align 8, !tbaa !177
  %632 = add nsw i32 %631, 1
  store i32 %632, ptr %630, align 8, !tbaa !177
  %633 = call ptr @RE_findOrAddVert(ptr noundef %1, i32 noundef %631) #16
  %634 = getelementptr inbounds %struct.VlakRen, ptr %624, i64 0, i32 2
  store ptr %633, ptr %634, align 8, !tbaa !505
  %635 = load i32, ptr %630, align 8, !tbaa !177
  %636 = add nsw i32 %635, 1
  store i32 %636, ptr %630, align 8, !tbaa !177
  %637 = call ptr @RE_findOrAddVert(ptr noundef %1, i32 noundef %635) #16
  %638 = getelementptr inbounds %struct.VlakRen, ptr %624, i64 0, i32 3
  store ptr %637, ptr %638, align 8, !tbaa !506
  store ptr %637, ptr @static_particle_strand.v1, align 8, !tbaa !16
  %639 = load ptr, ptr %634, align 8, !tbaa !505
  store ptr %639, ptr @static_particle_strand.v2, align 8, !tbaa !16
  store float %206, ptr @static_particle_strand.anor.0, align 4, !tbaa !13
  store float %205, ptr @static_particle_strand.anor.1, align 4, !tbaa !13
  store float %203, ptr @static_particle_strand.anor.2, align 4, !tbaa !13
  %640 = load float, ptr %5, align 4, !tbaa !13
  store float %640, ptr @static_particle_strand.avec.0, align 4, !tbaa !13
  %641 = load float, ptr %178, align 4, !tbaa !13
  store float %641, ptr @static_particle_strand.avec.1, align 4, !tbaa !13
  %642 = load float, ptr %183, align 4, !tbaa !13
  store float %642, ptr @static_particle_strand.avec.2, align 4, !tbaa !13
  br label %652

643:                                              ; preds = %595, %568
  %644 = getelementptr inbounds %struct.ObjectRen, ptr %1, i64 0, i32 11
  %645 = load i32, ptr %644, align 4, !tbaa !499
  %646 = add nsw i32 %645, -1
  %647 = call ptr @RE_findOrAddVlak(ptr noundef %1, i32 noundef %646) #16
  %648 = getelementptr inbounds %struct.VlakRen, ptr %647, i64 0, i32 3
  %649 = load ptr, ptr %648, align 8, !tbaa !506
  %650 = getelementptr inbounds %struct.VlakRen, ptr %647, i64 0, i32 2
  %651 = load ptr, ptr %650, align 8, !tbaa !505
  br label %652

652:                                              ; preds = %643, %620
  %653 = phi ptr [ %639, %620 ], [ %651, %643 ]
  %654 = phi ptr [ %637, %620 ], [ %649, %643 ]
  %655 = phi ptr [ %624, %620 ], [ %647, %643 ]
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %11) #16
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %10) #16
  br label %656

656:                                              ; preds = %652, %564, %542
  %657 = phi ptr [ %561, %564 ], [ %561, %542 ], [ %653, %652 ]
  %658 = phi ptr [ %559, %564 ], [ %559, %542 ], [ %654, %652 ]
  %659 = phi ptr [ %546, %564 ], [ %546, %542 ], [ %655, %652 ]
  %660 = load float, ptr %5, align 4, !tbaa !13
  store float %660, ptr %658, align 4, !tbaa !13
  %661 = load float, ptr %178, align 4, !tbaa !13
  %662 = getelementptr inbounds float, ptr %658, i64 1
  store float %661, ptr %662, align 4, !tbaa !13
  %663 = load float, ptr %183, align 4, !tbaa !13
  %664 = getelementptr inbounds float, ptr %658, i64 2
  %665 = fadd fast float %660, %326
  store float %665, ptr %658, align 4, !tbaa !13
  %666 = fadd fast float %661, %325
  store float %666, ptr %662, align 4, !tbaa !13
  %667 = fadd fast float %663, %324
  store float %667, ptr %664, align 4, !tbaa !13
  %668 = getelementptr inbounds %struct.VertRen, ptr %658, i64 0, i32 1
  store <2 x float> %204, ptr %668, align 4, !tbaa !13
  %669 = getelementptr inbounds %struct.VertRen, ptr %658, i64 0, i32 1, i64 2
  store float %203, ptr %669, align 4, !tbaa !13
  %670 = getelementptr inbounds %struct.ParticleStrandData, ptr %4, i64 0, i32 1
  %671 = load ptr, ptr %670, align 8, !tbaa !400
  %672 = getelementptr inbounds %struct.VertRen, ptr %658, i64 0, i32 2
  store ptr %671, ptr %672, align 8, !tbaa !496
  %673 = getelementptr inbounds %struct.ParticleStrandData, ptr %4, i64 0, i32 4
  %674 = load float, ptr %673, align 8, !tbaa !466
  %675 = fmul fast float %674, 2.000000e+00
  %676 = fadd fast float %675, -1.000000e+00
  %677 = getelementptr inbounds %struct.VertRen, ptr %658, i64 0, i32 4
  store float %676, ptr %677, align 4, !tbaa !625
  %678 = getelementptr inbounds %struct.VlakRen, ptr %659, i64 0, i32 2
  %679 = load float, ptr %5, align 4, !tbaa !13
  store float %679, ptr %657, align 4, !tbaa !13
  %680 = load float, ptr %178, align 4, !tbaa !13
  %681 = getelementptr inbounds float, ptr %657, i64 1
  store float %680, ptr %681, align 4, !tbaa !13
  %682 = load float, ptr %183, align 4, !tbaa !13
  %683 = getelementptr inbounds float, ptr %657, i64 2
  %684 = fsub fast float %679, %326
  store float %684, ptr %657, align 4, !tbaa !13
  %685 = fsub fast float %680, %325
  store float %685, ptr %681, align 4, !tbaa !13
  %686 = fsub fast float %682, %324
  store float %686, ptr %683, align 4, !tbaa !13
  %687 = getelementptr inbounds %struct.VertRen, ptr %657, i64 0, i32 1
  store <2 x float> %204, ptr %687, align 4, !tbaa !13
  %688 = getelementptr inbounds %struct.VertRen, ptr %657, i64 0, i32 1, i64 2
  store float %203, ptr %688, align 4, !tbaa !13
  %689 = getelementptr inbounds %struct.VertRen, ptr %657, i64 0, i32 2
  store ptr %671, ptr %689, align 8, !tbaa !496
  %690 = load float, ptr %677, align 4, !tbaa !625
  %691 = getelementptr inbounds %struct.VertRen, ptr %657, i64 0, i32 4
  store float %690, ptr %691, align 4, !tbaa !625
  %692 = getelementptr inbounds %struct.VlakRen, ptr %659, i64 0, i32 4
  %693 = getelementptr inbounds %struct.VlakRen, ptr %659, i64 0, i32 1
  %694 = load ptr, ptr %693, align 8, !tbaa !504
  %695 = load ptr, ptr %659, align 8, !tbaa !502
  %696 = call fast nofpclass(nan inf) float @normal_quad_v3(ptr noundef nonnull %692, ptr noundef nonnull %658, ptr noundef nonnull %657, ptr noundef %694, ptr noundef %695) #16
  %697 = getelementptr inbounds %struct.VlakRen, ptr %659, i64 0, i32 5
  store ptr %3, ptr %697, align 8, !tbaa !507
  %698 = getelementptr inbounds %struct.VlakRen, ptr %659, i64 0, i32 8
  store i8 2, ptr %698, align 2, !tbaa !509
  %699 = getelementptr inbounds %struct.ParticleStrandData, ptr %4, i64 0, i32 3
  %700 = load ptr, ptr %699, align 8, !tbaa !457
  %701 = icmp eq ptr %700, null
  br i1 %701, label %712, label %702

702:                                              ; preds = %656
  %703 = call ptr @RE_vlakren_get_surfnor(ptr noundef nonnull %1, ptr noundef nonnull %659, i32 noundef 1) #16
  %704 = load ptr, ptr %699, align 8, !tbaa !457
  %705 = load float, ptr %704, align 4, !tbaa !13
  store float %705, ptr %703, align 4, !tbaa !13
  %706 = getelementptr inbounds float, ptr %704, i64 1
  %707 = load float, ptr %706, align 4, !tbaa !13
  %708 = getelementptr inbounds float, ptr %703, i64 1
  store float %707, ptr %708, align 4, !tbaa !13
  %709 = getelementptr inbounds float, ptr %704, i64 2
  %710 = load float, ptr %709, align 4, !tbaa !13
  %711 = getelementptr inbounds float, ptr %703, i64 2
  store float %710, ptr %711, align 4, !tbaa !13
  br label %712

712:                                              ; preds = %702, %656
  %713 = getelementptr inbounds %struct.ParticleStrandData, ptr %4, i64 0, i32 2
  %714 = load ptr, ptr %713, align 8, !tbaa !384
  %715 = icmp eq ptr %714, null
  br i1 %715, label %764, label %716

716:                                              ; preds = %712
  %717 = getelementptr inbounds %struct.ParticleStrandData, ptr %4, i64 0, i32 8
  %718 = load i32, ptr %717, align 8, !tbaa !382
  %719 = icmp sgt i32 %718, 0
  br i1 %719, label %720, label %741

720:                                              ; preds = %716, %720
  %721 = phi i64 [ %737, %720 ], [ 0, %716 ]
  %722 = trunc i64 %721 to i32
  %723 = call ptr @RE_vlakren_get_tface(ptr noundef %1, ptr noundef nonnull %659, i32 noundef %722, ptr noundef null, i32 noundef 1) #16
  %724 = load ptr, ptr %713, align 8, !tbaa !384
  %725 = shl nuw nsw i64 %721, 1
  %726 = getelementptr inbounds float, ptr %724, i64 %725
  %727 = load float, ptr %726, align 4, !tbaa !13
  %728 = getelementptr inbounds [4 x [2 x float]], ptr %723, i64 0, i64 3
  store float %727, ptr %728, align 8, !tbaa !13
  %729 = getelementptr inbounds [4 x [2 x float]], ptr %723, i64 0, i64 2
  store float %727, ptr %729, align 8, !tbaa !13
  %730 = getelementptr inbounds [4 x [2 x float]], ptr %723, i64 0, i64 1
  store float %727, ptr %730, align 8, !tbaa !13
  store float %727, ptr %723, align 8, !tbaa !13
  %731 = getelementptr inbounds float, ptr %726, i64 1
  %732 = load float, ptr %731, align 4, !tbaa !13
  %733 = getelementptr inbounds [4 x [2 x float]], ptr %723, i64 0, i64 3, i64 1
  store float %732, ptr %733, align 4, !tbaa !13
  %734 = getelementptr inbounds [4 x [2 x float]], ptr %723, i64 0, i64 2, i64 1
  store float %732, ptr %734, align 4, !tbaa !13
  %735 = getelementptr inbounds [4 x [2 x float]], ptr %723, i64 0, i64 1, i64 1
  store float %732, ptr %735, align 4, !tbaa !13
  %736 = getelementptr inbounds [2 x float], ptr %723, i64 0, i64 1
  store float %732, ptr %736, align 4, !tbaa !13
  %737 = add nuw nsw i64 %721, 1
  %738 = load i32, ptr %717, align 8, !tbaa !382
  %739 = sext i32 %738 to i64
  %740 = icmp slt i64 %737, %739
  br i1 %740, label %720, label %741, !llvm.loop !628

741:                                              ; preds = %720, %716
  %742 = getelementptr inbounds %struct.ParticleStrandData, ptr %4, i64 0, i32 13
  %743 = load i32, ptr %742, align 4, !tbaa !376
  %744 = icmp sgt i32 %743, -1
  br i1 %744, label %745, label %764

745:                                              ; preds = %741
  %746 = call ptr @RE_vlakren_get_tface(ptr noundef %1, ptr noundef nonnull %659, i32 noundef %743, ptr noundef null, i32 noundef 0) #16
  %747 = getelementptr inbounds [4 x [2 x float]], ptr %746, i64 0, i64 3
  store float 0.000000e+00, ptr %747, align 8, !tbaa !13
  store float 0.000000e+00, ptr %746, align 8, !tbaa !13
  %748 = getelementptr inbounds [4 x [2 x float]], ptr %746, i64 0, i64 2
  store float 1.000000e+00, ptr %748, align 8, !tbaa !13
  %749 = getelementptr inbounds [4 x [2 x float]], ptr %746, i64 0, i64 1
  store float 1.000000e+00, ptr %749, align 8, !tbaa !13
  %750 = load ptr, ptr %659, align 8, !tbaa !502
  %751 = getelementptr inbounds %struct.VertRen, ptr %750, i64 0, i32 4
  %752 = load float, ptr %751, align 4, !tbaa !625
  %753 = fmul fast float %752, 5.000000e-01
  %754 = fadd fast float %753, 5.000000e-01
  %755 = getelementptr inbounds [4 x [2 x float]], ptr %746, i64 0, i64 1, i64 1
  store float %754, ptr %755, align 4, !tbaa !13
  %756 = getelementptr inbounds [2 x float], ptr %746, i64 0, i64 1
  store float %754, ptr %756, align 4, !tbaa !13
  %757 = load ptr, ptr %678, align 8, !tbaa !505
  %758 = getelementptr inbounds %struct.VertRen, ptr %757, i64 0, i32 4
  %759 = load float, ptr %758, align 4, !tbaa !625
  %760 = fmul fast float %759, 5.000000e-01
  %761 = fadd fast float %760, 5.000000e-01
  %762 = getelementptr inbounds [4 x [2 x float]], ptr %746, i64 0, i64 3, i64 1
  store float %761, ptr %762, align 4, !tbaa !13
  %763 = getelementptr inbounds [4 x [2 x float]], ptr %746, i64 0, i64 2, i64 1
  store float %761, ptr %763, align 4, !tbaa !13
  br label %764

764:                                              ; preds = %745, %741, %712
  %765 = load ptr, ptr %4, align 8, !tbaa !385
  %766 = icmp eq ptr %765, null
  br i1 %766, label %789, label %767

767:                                              ; preds = %764
  %768 = getelementptr inbounds %struct.ParticleStrandData, ptr %4, i64 0, i32 9
  %769 = load i32, ptr %768, align 4, !tbaa !383
  %770 = icmp sgt i32 %769, 0
  br i1 %770, label %771, label %789

771:                                              ; preds = %767, %771
  %772 = phi i64 [ %785, %771 ], [ 0, %767 ]
  %773 = trunc i64 %772 to i32
  %774 = call ptr @RE_vlakren_get_mcol(ptr noundef %1, ptr noundef nonnull %659, i32 noundef %773, ptr noundef null, i32 noundef 1) #16
  %775 = load ptr, ptr %4, align 8, !tbaa !385
  %776 = getelementptr inbounds %struct.MCol, ptr %775, i64 %772
  %777 = load i32, ptr %776, align 1
  %778 = insertelement <4 x i32> poison, i32 %777, i64 0
  %779 = shufflevector <4 x i32> %778, <4 x i32> poison, <4 x i32> zeroinitializer
  store <4 x i32> %779, ptr %774, align 1
  %780 = load ptr, ptr %4, align 8, !tbaa !385
  %781 = getelementptr inbounds %struct.MCol, ptr %780, i64 %772
  %782 = load i32, ptr %781, align 1
  %783 = insertelement <4 x i32> poison, i32 %782, i64 0
  %784 = shufflevector <4 x i32> %783, <4 x i32> poison, <4 x i32> zeroinitializer
  store <4 x i32> %784, ptr %774, align 1
  %785 = add nuw nsw i64 %772, 1
  %786 = load i32, ptr %768, align 4, !tbaa !383
  %787 = sext i32 %786 to i64
  %788 = icmp slt i64 %785, %787
  br i1 %788, label %771, label %789, !llvm.loop !629

789:                                              ; preds = %473, %771, %767, %764, %503, %469, %466, %151, %93, %72, %171, %162
  ret void
}

declare void @psys_make_temp_pointcache(ptr noundef, ptr noundef) local_unnamed_addr #5

declare void @psys_get_particle_on_path(ptr noundef, i32 noundef, ptr noundef, i8 noundef zeroext) local_unnamed_addr #5

declare void @mul_m4_v4(ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @particle_normal_ren(i16 noundef signext %0, ptr nocapture noundef readonly %1, ptr noundef %2, ptr noundef %3, ptr noundef %4, ptr noundef %5, ptr nocapture noundef %6, ptr noundef %7, ptr nocapture noundef readonly %8, i32 noundef %9, float noundef nofpclass(nan inf) %10, ptr noundef %11) unnamed_addr #3 {
  %13 = alloca [3 x float], align 4
  %14 = alloca [3 x float], align 4
  %15 = alloca [3 x float], align 4
  %16 = alloca [3 x float], align 4
  %17 = alloca [3 x float], align 4
  %18 = alloca [3 x float], align 4
  %19 = alloca [3 x float], align 8
  %20 = alloca [3 x float], align 4
  %21 = alloca [3 x float], align 4
  %22 = alloca [3 x float], align 8
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %19) #16
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %20) #16
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %21) #16
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %22) #16
  %23 = load <2 x float>, ptr %8, align 4, !tbaa !13
  %24 = getelementptr inbounds float, ptr %19, i64 1
  store <2 x float> %23, ptr %19, align 8, !tbaa !13
  %25 = getelementptr inbounds float, ptr %8, i64 2
  %26 = load float, ptr %25, align 4, !tbaa !13
  %27 = getelementptr inbounds float, ptr %19, i64 2
  store float %26, ptr %27, align 8, !tbaa !13
  %28 = icmp eq i16 %0, 9
  br i1 %28, label %109, label %29

29:                                               ; preds = %12
  %30 = sext i16 %0 to i32
  %31 = getelementptr inbounds %struct.Render, ptr %2, i64 0, i32 32
  call void @mul_m4_v3(ptr noundef nonnull %31, ptr noundef nonnull %19) #16
  switch i32 %30, label %451 [
    i32 5, label %35
    i32 9, label %32
  ]

32:                                               ; preds = %29
  %33 = load <2 x float>, ptr %19, align 8, !tbaa !13
  %34 = load float, ptr %27, align 8, !tbaa !13
  br label %109

35:                                               ; preds = %29
  %36 = getelementptr inbounds %struct.ParticleStrandData, ptr %6, i64 0, i32 11
  store i32 1, ptr %36, align 4, !tbaa !623
  %37 = getelementptr inbounds %struct.ParticleStrandData, ptr %6, i64 0, i32 4
  store float 0.000000e+00, ptr %37, align 8, !tbaa !466
  %38 = getelementptr inbounds %struct.ParticleStrandData, ptr %6, i64 0, i32 7
  store float %10, ptr %38, align 4, !tbaa !464
  %39 = getelementptr inbounds %struct.ParticleKey, ptr %8, i64 0, i32 1
  %40 = getelementptr inbounds %struct.ParticleKey, ptr %8, i64 0, i32 1, i64 1
  %41 = getelementptr inbounds float, ptr %22, i64 1
  %42 = load <2 x float>, ptr %39, align 4, !tbaa !13
  store <2 x float> %42, ptr %22, align 8, !tbaa !13
  %43 = getelementptr inbounds %struct.ParticleKey, ptr %8, i64 0, i32 1, i64 2
  %44 = load float, ptr %43, align 4, !tbaa !13
  %45 = getelementptr inbounds float, ptr %22, i64 2
  store float %44, ptr %45, align 8, !tbaa !13
  call void @mul_mat3_m4_v3(ptr noundef nonnull %31, ptr noundef nonnull %22) #16
  %46 = load float, ptr %22, align 8, !tbaa !13
  %47 = fmul fast float %46, %46
  %48 = load float, ptr %41, align 4, !tbaa !13
  %49 = fmul fast float %48, %48
  %50 = fadd fast float %49, %47
  %51 = load float, ptr %45, align 8, !tbaa !13
  %52 = fmul fast float %51, %51
  %53 = fadd fast float %50, %52
  %54 = fcmp fast ogt float %53, 0x38AA95A5C0000000
  br i1 %54, label %55, label %61

55:                                               ; preds = %35
  %56 = call fast float @llvm.sqrt.f32(float %53)
  %57 = fdiv fast float 1.000000e+00, %56
  %58 = fmul fast float %57, %46
  %59 = fmul fast float %57, %48
  %60 = fmul fast float %57, %51
  br label %61

61:                                               ; preds = %35, %55
  %62 = phi float [ %58, %55 ], [ 0.000000e+00, %35 ]
  %63 = phi float [ %59, %55 ], [ 0.000000e+00, %35 ]
  %64 = phi float [ %60, %55 ], [ 0.000000e+00, %35 ]
  store float %62, ptr %22, align 8
  store float %63, ptr %41, align 4
  store float %64, ptr %45, align 8
  %65 = getelementptr inbounds %struct.ParticleSettings, ptr %1, i64 0, i32 15
  %66 = load i32, ptr %65, align 8, !tbaa !240
  %67 = and i32 %66, 4096
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %82, label %69

69:                                               ; preds = %61
  %70 = load float, ptr %39, align 4, !tbaa !13
  %71 = fmul fast float %70, %70
  %72 = load <2 x float>, ptr %40, align 4, !tbaa !13
  %73 = fmul fast <2 x float> %72, %72
  %74 = extractelement <2 x float> %73, i64 0
  %75 = fadd fast float %74, %71
  %76 = extractelement <2 x float> %73, i64 1
  %77 = fadd fast float %75, %76
  %78 = call fast float @llvm.sqrt.f32(float %77)
  %79 = fmul fast float %78, %62
  store float %79, ptr %22, align 8, !tbaa !13
  %80 = fmul fast float %78, %63
  store float %80, ptr %41, align 4, !tbaa !13
  %81 = fmul fast float %78, %64
  store float %81, ptr %45, align 8, !tbaa !13
  br label %82

82:                                               ; preds = %69, %61
  %83 = phi float [ %81, %69 ], [ %64, %61 ]
  %84 = phi float [ %80, %69 ], [ %63, %61 ]
  %85 = phi float [ %79, %69 ], [ %62, %61 ]
  %86 = getelementptr inbounds %struct.ParticleSettings, ptr %1, i64 0, i32 116
  %87 = load float, ptr %86, align 8, !tbaa !13
  %88 = load float, ptr %19, align 8, !tbaa !13
  %89 = fmul fast float %85, %87
  %90 = fsub fast float %88, %89
  store float %90, ptr %20, align 4, !tbaa !13
  %91 = load float, ptr %24, align 4, !tbaa !13
  %92 = fmul fast float %84, %87
  %93 = fsub fast float %91, %92
  %94 = getelementptr inbounds float, ptr %20, i64 1
  store float %93, ptr %94, align 4, !tbaa !13
  %95 = load float, ptr %27, align 8, !tbaa !13
  %96 = fmul fast float %83, %87
  %97 = fsub fast float %95, %96
  %98 = getelementptr inbounds float, ptr %20, i64 2
  store float %97, ptr %98, align 4, !tbaa !13
  %99 = getelementptr inbounds %struct.ParticleSettings, ptr %1, i64 0, i32 116, i64 1
  %100 = load float, ptr %99, align 4, !tbaa !13
  %101 = fmul fast float %100, %85
  %102 = fadd fast float %101, %88
  store float %102, ptr %21, align 4, !tbaa !13
  %103 = fmul fast float %100, %84
  %104 = fadd fast float %103, %91
  %105 = getelementptr inbounds float, ptr %21, i64 1
  store float %104, ptr %105, align 4, !tbaa !13
  %106 = fmul fast float %100, %83
  %107 = fadd fast float %106, %95
  %108 = getelementptr inbounds float, ptr %21, i64 2
  store float %107, ptr %108, align 4, !tbaa !13
  call fastcc void @particle_curve(ptr noundef %2, ptr noundef %3, ptr noundef %4, ptr noundef %5, ptr noundef nonnull %6, ptr noundef nonnull %20, ptr noundef nonnull %21, i32 noundef %9, ptr noundef %11)
  br label %464

109:                                              ; preds = %32, %12
  %110 = phi float [ %34, %32 ], [ %26, %12 ]
  %111 = phi <2 x float> [ %33, %32 ], [ %23, %12 ]
  %112 = getelementptr inbounds %struct.ParticleBillboardData, ptr %7, i64 0, i32 1
  store <2 x float> %111, ptr %112, align 4, !tbaa !13
  %113 = getelementptr inbounds %struct.ParticleBillboardData, ptr %7, i64 0, i32 1, i64 2
  store float %110, ptr %113, align 4, !tbaa !13
  %114 = getelementptr inbounds %struct.ParticleBillboardData, ptr %7, i64 0, i32 2
  %115 = getelementptr inbounds %struct.ParticleKey, ptr %8, i64 0, i32 1
  %116 = load float, ptr %115, align 4, !tbaa !13
  store float %116, ptr %114, align 4, !tbaa !13
  %117 = getelementptr inbounds %struct.ParticleKey, ptr %8, i64 0, i32 1, i64 1
  %118 = load float, ptr %117, align 4, !tbaa !13
  %119 = getelementptr inbounds %struct.ParticleBillboardData, ptr %7, i64 0, i32 2, i64 1
  store float %118, ptr %119, align 4, !tbaa !13
  %120 = getelementptr inbounds %struct.ParticleKey, ptr %8, i64 0, i32 1, i64 2
  %121 = load float, ptr %120, align 4, !tbaa !13
  %122 = getelementptr inbounds %struct.ParticleBillboardData, ptr %7, i64 0, i32 2, i64 2
  store float %121, ptr %122, align 4, !tbaa !13
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %13) #16
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %14) #16
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %15) #16
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %16) #16
  %123 = getelementptr inbounds %struct.ParticleBillboardData, ptr %7, i64 0, i32 14
  %124 = load i16, ptr %123, align 2, !tbaa !398
  %125 = sext i16 %124 to i32
  %126 = mul nsw i32 %125, %125
  %127 = getelementptr inbounds %struct.ObjectRen, ptr %3, i64 0, i32 11
  %128 = load i32, ptr %127, align 4, !tbaa !499
  %129 = add nsw i32 %128, 1
  store i32 %129, ptr %127, align 4, !tbaa !499
  %130 = call ptr @RE_findOrAddVlak(ptr noundef %3, i32 noundef %128) #16
  %131 = getelementptr inbounds %struct.ObjectRen, ptr %3, i64 0, i32 10
  %132 = load i32, ptr %131, align 8, !tbaa !177
  %133 = add nsw i32 %132, 1
  store i32 %133, ptr %131, align 8, !tbaa !177
  %134 = call ptr @RE_findOrAddVert(ptr noundef %3, i32 noundef %132) #16
  store ptr %134, ptr %130, align 8, !tbaa !502
  %135 = load i32, ptr %131, align 8, !tbaa !177
  %136 = add nsw i32 %135, 1
  store i32 %136, ptr %131, align 8, !tbaa !177
  %137 = call ptr @RE_findOrAddVert(ptr noundef %3, i32 noundef %135) #16
  %138 = getelementptr inbounds %struct.VlakRen, ptr %130, i64 0, i32 1
  store ptr %137, ptr %138, align 8, !tbaa !504
  %139 = load i32, ptr %131, align 8, !tbaa !177
  %140 = add nsw i32 %139, 1
  store i32 %140, ptr %131, align 8, !tbaa !177
  %141 = call ptr @RE_findOrAddVert(ptr noundef %3, i32 noundef %139) #16
  %142 = getelementptr inbounds %struct.VlakRen, ptr %130, i64 0, i32 2
  store ptr %141, ptr %142, align 8, !tbaa !505
  %143 = load i32, ptr %131, align 8, !tbaa !177
  %144 = add nsw i32 %143, 1
  store i32 %144, ptr %131, align 8, !tbaa !177
  %145 = call ptr @RE_findOrAddVert(ptr noundef %3, i32 noundef %143) #16
  %146 = getelementptr inbounds %struct.VlakRen, ptr %130, i64 0, i32 3
  store ptr %145, ptr %146, align 8, !tbaa !506
  call void @psys_make_billboard(ptr noundef %7, ptr noundef nonnull %13, ptr noundef nonnull %14, ptr noundef nonnull %15, ptr noundef nonnull %16) #16
  %147 = load ptr, ptr %130, align 8, !tbaa !502
  %148 = load float, ptr %16, align 4, !tbaa !13
  %149 = load float, ptr %13, align 4, !tbaa !13
  %150 = fadd fast float %149, %148
  store float %150, ptr %147, align 4, !tbaa !13
  %151 = getelementptr inbounds float, ptr %16, i64 1
  %152 = load float, ptr %151, align 4, !tbaa !13
  %153 = getelementptr inbounds float, ptr %13, i64 1
  %154 = load float, ptr %153, align 4, !tbaa !13
  %155 = fadd fast float %154, %152
  %156 = getelementptr inbounds float, ptr %147, i64 1
  store float %155, ptr %156, align 4, !tbaa !13
  %157 = getelementptr inbounds float, ptr %16, i64 2
  %158 = load float, ptr %157, align 4, !tbaa !13
  %159 = getelementptr inbounds float, ptr %13, i64 2
  %160 = load float, ptr %159, align 4, !tbaa !13
  %161 = fadd fast float %160, %158
  %162 = getelementptr inbounds float, ptr %147, i64 2
  store float %161, ptr %162, align 4, !tbaa !13
  %163 = load float, ptr %14, align 4, !tbaa !13
  %164 = fadd fast float %163, %150
  store float %164, ptr %147, align 4, !tbaa !13
  %165 = getelementptr inbounds float, ptr %14, i64 1
  %166 = load float, ptr %165, align 4, !tbaa !13
  %167 = fadd fast float %166, %155
  store float %167, ptr %156, align 4, !tbaa !13
  %168 = getelementptr inbounds float, ptr %14, i64 2
  %169 = load float, ptr %168, align 4, !tbaa !13
  %170 = fadd fast float %169, %161
  store float %170, ptr %162, align 4, !tbaa !13
  %171 = getelementptr inbounds %struct.Render, ptr %2, i64 0, i32 32
  call void @mul_m4_v3(ptr noundef nonnull %171, ptr noundef nonnull %147) #16
  %172 = load ptr, ptr %138, align 8, !tbaa !504
  %173 = load float, ptr %16, align 4, !tbaa !13
  %174 = load float, ptr %13, align 4, !tbaa !13
  %175 = fsub fast float %173, %174
  store float %175, ptr %172, align 4, !tbaa !13
  %176 = load float, ptr %151, align 4, !tbaa !13
  %177 = load float, ptr %153, align 4, !tbaa !13
  %178 = fsub fast float %176, %177
  %179 = getelementptr inbounds float, ptr %172, i64 1
  store float %178, ptr %179, align 4, !tbaa !13
  %180 = load float, ptr %157, align 4, !tbaa !13
  %181 = load float, ptr %159, align 4, !tbaa !13
  %182 = fsub fast float %180, %181
  %183 = getelementptr inbounds float, ptr %172, i64 2
  store float %182, ptr %183, align 4, !tbaa !13
  %184 = load float, ptr %14, align 4, !tbaa !13
  %185 = fadd fast float %184, %175
  store float %185, ptr %172, align 4, !tbaa !13
  %186 = load float, ptr %165, align 4, !tbaa !13
  %187 = fadd fast float %186, %178
  store float %187, ptr %179, align 4, !tbaa !13
  %188 = load float, ptr %168, align 4, !tbaa !13
  %189 = fadd fast float %188, %182
  store float %189, ptr %183, align 4, !tbaa !13
  call void @mul_m4_v3(ptr noundef nonnull %171, ptr noundef nonnull %172) #16
  %190 = load ptr, ptr %142, align 8, !tbaa !505
  %191 = load float, ptr %16, align 4, !tbaa !13
  %192 = load float, ptr %13, align 4, !tbaa !13
  %193 = fsub fast float %191, %192
  store float %193, ptr %190, align 4, !tbaa !13
  %194 = load float, ptr %151, align 4, !tbaa !13
  %195 = load float, ptr %153, align 4, !tbaa !13
  %196 = fsub fast float %194, %195
  %197 = getelementptr inbounds float, ptr %190, i64 1
  store float %196, ptr %197, align 4, !tbaa !13
  %198 = load float, ptr %157, align 4, !tbaa !13
  %199 = load float, ptr %159, align 4, !tbaa !13
  %200 = fsub fast float %198, %199
  %201 = getelementptr inbounds float, ptr %190, i64 2
  store float %200, ptr %201, align 4, !tbaa !13
  %202 = load float, ptr %14, align 4, !tbaa !13
  %203 = fsub fast float %193, %202
  store float %203, ptr %190, align 4, !tbaa !13
  %204 = load float, ptr %165, align 4, !tbaa !13
  %205 = fsub fast float %196, %204
  store float %205, ptr %197, align 4, !tbaa !13
  %206 = load float, ptr %168, align 4, !tbaa !13
  %207 = fsub fast float %200, %206
  store float %207, ptr %201, align 4, !tbaa !13
  call void @mul_m4_v3(ptr noundef nonnull %171, ptr noundef nonnull %190) #16
  %208 = load ptr, ptr %146, align 8, !tbaa !506
  %209 = load float, ptr %16, align 4, !tbaa !13
  %210 = load float, ptr %13, align 4, !tbaa !13
  %211 = fadd fast float %210, %209
  store float %211, ptr %208, align 4, !tbaa !13
  %212 = load float, ptr %151, align 4, !tbaa !13
  %213 = load float, ptr %153, align 4, !tbaa !13
  %214 = fadd fast float %213, %212
  %215 = getelementptr inbounds float, ptr %208, i64 1
  store float %214, ptr %215, align 4, !tbaa !13
  %216 = load float, ptr %157, align 4, !tbaa !13
  %217 = load float, ptr %159, align 4, !tbaa !13
  %218 = fadd fast float %217, %216
  %219 = getelementptr inbounds float, ptr %208, i64 2
  store float %218, ptr %219, align 4, !tbaa !13
  %220 = load float, ptr %14, align 4, !tbaa !13
  %221 = fsub fast float %211, %220
  store float %221, ptr %208, align 4, !tbaa !13
  %222 = load float, ptr %165, align 4, !tbaa !13
  %223 = fsub fast float %214, %222
  store float %223, ptr %215, align 4, !tbaa !13
  %224 = load float, ptr %168, align 4, !tbaa !13
  %225 = fsub fast float %218, %224
  store float %225, ptr %219, align 4, !tbaa !13
  call void @mul_m4_v3(ptr noundef nonnull %171, ptr noundef nonnull %208) #16
  %226 = getelementptr inbounds %struct.VlakRen, ptr %130, i64 0, i32 4
  %227 = load ptr, ptr %146, align 8, !tbaa !506
  %228 = load ptr, ptr %142, align 8, !tbaa !505
  %229 = load ptr, ptr %138, align 8, !tbaa !504
  %230 = load ptr, ptr %130, align 8, !tbaa !502
  %231 = call fast nofpclass(nan inf) float @normal_quad_v3(ptr noundef nonnull %226, ptr noundef %227, ptr noundef %228, ptr noundef %229, ptr noundef %230) #16
  %232 = load ptr, ptr %130, align 8, !tbaa !502
  %233 = getelementptr inbounds %struct.VertRen, ptr %232, i64 0, i32 1
  %234 = load float, ptr %226, align 4, !tbaa !13
  store float %234, ptr %233, align 4, !tbaa !13
  %235 = getelementptr inbounds %struct.VlakRen, ptr %130, i64 0, i32 4, i64 1
  %236 = load float, ptr %235, align 4, !tbaa !13
  %237 = getelementptr inbounds %struct.VertRen, ptr %232, i64 0, i32 1, i64 1
  store float %236, ptr %237, align 4, !tbaa !13
  %238 = getelementptr inbounds %struct.VlakRen, ptr %130, i64 0, i32 4, i64 2
  %239 = load float, ptr %238, align 4, !tbaa !13
  %240 = getelementptr inbounds %struct.VertRen, ptr %232, i64 0, i32 1, i64 2
  store float %239, ptr %240, align 4, !tbaa !13
  %241 = load ptr, ptr %138, align 8, !tbaa !504
  %242 = getelementptr inbounds %struct.VertRen, ptr %241, i64 0, i32 1
  %243 = load float, ptr %226, align 4, !tbaa !13
  store float %243, ptr %242, align 4, !tbaa !13
  %244 = load float, ptr %235, align 4, !tbaa !13
  %245 = getelementptr inbounds %struct.VertRen, ptr %241, i64 0, i32 1, i64 1
  store float %244, ptr %245, align 4, !tbaa !13
  %246 = load float, ptr %238, align 4, !tbaa !13
  %247 = getelementptr inbounds %struct.VertRen, ptr %241, i64 0, i32 1, i64 2
  store float %246, ptr %247, align 4, !tbaa !13
  %248 = load ptr, ptr %142, align 8, !tbaa !505
  %249 = getelementptr inbounds %struct.VertRen, ptr %248, i64 0, i32 1
  %250 = load float, ptr %226, align 4, !tbaa !13
  store float %250, ptr %249, align 4, !tbaa !13
  %251 = load float, ptr %235, align 4, !tbaa !13
  %252 = getelementptr inbounds %struct.VertRen, ptr %248, i64 0, i32 1, i64 1
  store float %251, ptr %252, align 4, !tbaa !13
  %253 = load float, ptr %238, align 4, !tbaa !13
  %254 = getelementptr inbounds %struct.VertRen, ptr %248, i64 0, i32 1, i64 2
  store float %253, ptr %254, align 4, !tbaa !13
  %255 = load ptr, ptr %146, align 8, !tbaa !506
  %256 = getelementptr inbounds %struct.VertRen, ptr %255, i64 0, i32 1
  %257 = load float, ptr %226, align 4, !tbaa !13
  store float %257, ptr %256, align 4, !tbaa !13
  %258 = load float, ptr %235, align 4, !tbaa !13
  %259 = getelementptr inbounds %struct.VertRen, ptr %255, i64 0, i32 1, i64 1
  store float %258, ptr %259, align 4, !tbaa !13
  %260 = load float, ptr %238, align 4, !tbaa !13
  %261 = getelementptr inbounds %struct.VertRen, ptr %255, i64 0, i32 1, i64 2
  store float %260, ptr %261, align 4, !tbaa !13
  %262 = getelementptr inbounds %struct.VlakRen, ptr %130, i64 0, i32 5
  store ptr %5, ptr %262, align 8, !tbaa !507
  %263 = getelementptr inbounds %struct.VlakRen, ptr %130, i64 0, i32 8
  store i8 2, ptr %263, align 2, !tbaa !509
  %264 = load i16, ptr %123, align 2, !tbaa !398
  %265 = icmp sgt i16 %264, 1
  br i1 %265, label %266, label %406

266:                                              ; preds = %109
  %267 = sitofp i16 %264 to float
  %268 = fdiv fast float 1.000000e+00, %267
  %269 = getelementptr inbounds %struct.ParticleBillboardData, ptr %7, i64 0, i32 15
  %270 = load i16, ptr %269, align 4, !tbaa !390
  switch i16 %270, label %374 [
    i16 2, label %286
    i16 3, label %271
    i16 1, label %283
  ]

271:                                              ; preds = %266
  %272 = getelementptr inbounds %struct.ParticleBillboardData, ptr %7, i64 0, i32 7
  %273 = load float, ptr %272, align 8, !tbaa !481
  %274 = getelementptr inbounds %struct.ParticleBillboardData, ptr %7, i64 0, i32 12
  %275 = load i32, ptr %274, align 4, !tbaa !484
  %276 = sitofp i32 %275 to float
  %277 = fmul fast float %273, %276
  %278 = fptosi float %277 to i32
  %279 = srem i32 %278, %126
  %280 = sitofp i32 %279 to float
  %281 = sitofp i32 %126 to float
  %282 = fdiv fast float %280, %281
  br label %374

283:                                              ; preds = %266
  %284 = getelementptr inbounds %struct.ParticleBillboardData, ptr %7, i64 0, i32 7
  %285 = load float, ptr %284, align 8, !tbaa !481
  br label %374

286:                                              ; preds = %266
  %287 = getelementptr inbounds %struct.ParticleBillboardData, ptr %7, i64 0, i32 13
  %288 = load i16, ptr %287, align 8, !tbaa !387
  %289 = icmp eq i16 %288, 3
  br i1 %289, label %290, label %296

290:                                              ; preds = %286
  %291 = getelementptr inbounds %struct.ParticleBillboardData, ptr %7, i64 0, i32 5
  %292 = load float, ptr %291, align 8, !tbaa !480
  %293 = fmul fast float %292, 5.000000e-01
  %294 = fadd fast float %293, 5.000000e-01
  %295 = frem fast float %294, 1.000000e+00
  br label %374

296:                                              ; preds = %286
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %17) #16
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(12) %17, i8 0, i64 12, i1 false)
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %18) #16
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(12) %18, i8 0, i64 12, i1 false)
  %297 = sext i16 %288 to i32
  %298 = add nsw i32 %297, 1
  %299 = srem i32 %298, 3
  %300 = sext i32 %299 to i64
  %301 = getelementptr inbounds [3 x float], ptr %17, i64 0, i64 %300
  store float 1.000000e+00, ptr %301, align 4, !tbaa !13
  %302 = add nsw i32 %297, 2
  %303 = srem i32 %302, 3
  %304 = sext i32 %303 to i64
  %305 = getelementptr inbounds [3 x float], ptr %18, i64 0, i64 %304
  store float 1.000000e+00, ptr %305, align 4, !tbaa !13
  %306 = getelementptr inbounds %struct.ParticleBillboardData, ptr %7, i64 0, i32 9
  %307 = load i32, ptr %306, align 8, !tbaa !391
  %308 = icmp eq i32 %307, 0
  br i1 %308, label %315, label %309

309:                                              ; preds = %296
  %310 = load float, ptr %15, align 4, !tbaa !13
  %311 = getelementptr inbounds float, ptr %15, i64 1
  %312 = load float, ptr %311, align 4, !tbaa !13
  %313 = getelementptr inbounds float, ptr %15, i64 2
  %314 = load float, ptr %313, align 4, !tbaa !13
  br label %339

315:                                              ; preds = %296
  %316 = sext i16 %288 to i64
  %317 = getelementptr inbounds [3 x float], ptr %15, i64 0, i64 %316
  store float 0.000000e+00, ptr %317, align 4, !tbaa !13
  %318 = load float, ptr %15, align 4, !tbaa !13
  %319 = fmul fast float %318, %318
  %320 = getelementptr inbounds float, ptr %15, i64 1
  %321 = load float, ptr %320, align 4, !tbaa !13
  %322 = fmul fast float %321, %321
  %323 = fadd fast float %322, %319
  %324 = getelementptr inbounds float, ptr %15, i64 2
  %325 = load float, ptr %324, align 4, !tbaa !13
  %326 = fmul fast float %325, %325
  %327 = fadd fast float %323, %326
  %328 = fcmp fast ogt float %327, 0x38AA95A5C0000000
  br i1 %328, label %329, label %335

329:                                              ; preds = %315
  %330 = call fast float @llvm.sqrt.f32(float %327)
  %331 = fdiv fast float 1.000000e+00, %330
  %332 = fmul fast float %331, %318
  %333 = fmul fast float %331, %321
  %334 = fmul fast float %331, %325
  br label %335

335:                                              ; preds = %329, %315
  %336 = phi float [ %332, %329 ], [ 0.000000e+00, %315 ]
  %337 = phi float [ %333, %329 ], [ 0.000000e+00, %315 ]
  %338 = phi float [ %334, %329 ], [ 0.000000e+00, %315 ]
  store float %336, ptr %15, align 4
  store float %337, ptr %320, align 4
  store float %338, ptr %324, align 4
  br label %339

339:                                              ; preds = %335, %309
  %340 = phi float [ %314, %309 ], [ %338, %335 ]
  %341 = phi float [ %312, %309 ], [ %337, %335 ]
  %342 = phi float [ %310, %309 ], [ %336, %335 ]
  %343 = load float, ptr %17, align 4, !tbaa !13
  %344 = fmul fast float %343, %342
  %345 = getelementptr inbounds float, ptr %17, i64 1
  %346 = load float, ptr %345, align 4, !tbaa !13
  %347 = fmul fast float %346, %341
  %348 = fadd fast float %347, %344
  %349 = getelementptr inbounds float, ptr %17, i64 2
  %350 = load float, ptr %349, align 4, !tbaa !13
  %351 = fmul fast float %350, %340
  %352 = fadd fast float %348, %351
  %353 = fcmp fast ugt float %352, -1.000000e+00
  br i1 %353, label %354, label %359

354:                                              ; preds = %339
  %355 = fcmp fast ult float %352, 1.000000e+00
  br i1 %355, label %356, label %359

356:                                              ; preds = %354
  %357 = call fast nofpclass(nan inf) float @acosf(float noundef nofpclass(nan inf) %352) #17
  %358 = fmul fast float %357, 0x3FC45F3060000000
  br label %359

359:                                              ; preds = %356, %354, %339
  %360 = phi float [ %358, %356 ], [ 5.000000e-01, %339 ], [ 0.000000e+00, %354 ]
  %361 = load float, ptr %18, align 4, !tbaa !13
  %362 = fmul fast float %361, %342
  %363 = getelementptr inbounds float, ptr %18, i64 1
  %364 = load float, ptr %363, align 4, !tbaa !13
  %365 = fmul fast float %364, %341
  %366 = fadd fast float %365, %362
  %367 = getelementptr inbounds float, ptr %18, i64 2
  %368 = load float, ptr %367, align 4, !tbaa !13
  %369 = fmul fast float %368, %340
  %370 = fadd fast float %366, %369
  %371 = fcmp fast olt float %370, 0.000000e+00
  %372 = fsub fast float 1.000000e+00, %360
  %373 = select i1 %371, float %372, float %360
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %18) #16
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %17) #16
  br label %374

374:                                              ; preds = %359, %290, %283, %271, %266
  %375 = phi float [ %282, %271 ], [ %285, %283 ], [ %295, %290 ], [ %373, %359 ], [ 0.000000e+00, %266 ]
  %376 = getelementptr inbounds %struct.ParticleBillboardData, ptr %7, i64 0, i32 16
  %377 = load i16, ptr %376, align 2, !tbaa !395
  switch i16 %377, label %391 [
    i16 1, label %378
    i16 2, label %386
  ]

378:                                              ; preds = %374
  %379 = getelementptr inbounds %struct.ParticleBillboardData, ptr %7, i64 0, i32 10
  %380 = load i32, ptr %379, align 4, !tbaa !482
  %381 = sitofp i32 %380 to float
  %382 = sitofp i32 %126 to float
  %383 = fdiv fast float %381, %382
  %384 = fadd fast float %383, %375
  %385 = frem fast float %384, 1.000000e+00
  br label %391

386:                                              ; preds = %374
  %387 = getelementptr inbounds %struct.ParticleBillboardData, ptr %7, i64 0, i32 6
  %388 = load float, ptr %387, align 4, !tbaa !475
  %389 = fadd fast float %388, %375
  %390 = frem fast float %389, 1.000000e+00
  br label %391

391:                                              ; preds = %386, %378, %374
  %392 = phi float [ %385, %378 ], [ %390, %386 ], [ %375, %374 ]
  %393 = fadd fast float %392, 0x3EB4000000000000
  %394 = sitofp i32 %126 to float
  %395 = fmul fast float %393, %394
  %396 = fptosi float %395 to i32
  %397 = zext i16 %264 to i32
  %398 = srem i32 %396, %397
  %399 = sdiv i32 %396, %397
  %400 = xor i32 %399, -1
  %401 = add nsw i32 %400, %397
  %402 = sitofp i32 %398 to float
  %403 = fmul fast float %268, %402
  %404 = sitofp i32 %401 to float
  %405 = fmul fast float %268, %404
  br label %406

406:                                              ; preds = %391, %109
  %407 = phi float [ %403, %391 ], [ 0.000000e+00, %109 ]
  %408 = phi float [ %405, %391 ], [ 0.000000e+00, %109 ]
  %409 = phi float [ %268, %391 ], [ 1.000000e+00, %109 ]
  %410 = getelementptr inbounds %struct.ParticleBillboardData, ptr %7, i64 0, i32 8
  %411 = load i32, ptr %410, align 4, !tbaa !47
  %412 = icmp sgt i32 %411, -1
  br i1 %412, label %413, label %415

413:                                              ; preds = %406
  %414 = call ptr @RE_vlakren_get_tface(ptr noundef nonnull %3, ptr noundef nonnull %130, i32 noundef %411, ptr noundef null, i32 noundef 1) #16
  store <8 x float> <float 1.000000e+00, float 1.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00>, ptr %414, align 8, !tbaa !13
  br label %415

415:                                              ; preds = %413, %406
  %416 = getelementptr inbounds %struct.ParticleBillboardData, ptr %7, i64 0, i32 8, i64 1
  %417 = load i32, ptr %416, align 4, !tbaa !47
  %418 = icmp sgt i32 %417, -1
  br i1 %418, label %419, label %432

419:                                              ; preds = %415
  %420 = call ptr @RE_vlakren_get_tface(ptr noundef nonnull %3, ptr noundef nonnull %130, i32 noundef %417, ptr noundef null, i32 noundef 1) #16
  %421 = getelementptr inbounds %struct.ParticleBillboardData, ptr %7, i64 0, i32 7
  %422 = load float, ptr %421, align 8, !tbaa !481
  %423 = getelementptr inbounds %struct.ParticleBillboardData, ptr %7, i64 0, i32 10
  %424 = load <2 x i32>, ptr %423, align 4, !tbaa !47
  %425 = sitofp <2 x i32> %424 to <2 x float>
  %426 = shufflevector <2 x float> %425, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %427 = fdiv fast <2 x float> %425, %426
  %428 = shufflevector <2 x float> %427, <2 x float> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %429 = insertelement <8 x float> poison, float %422, i64 0
  %430 = shufflevector <8 x float> %429, <8 x float> %428, <8 x i32> <i32 0, i32 8, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %431 = shufflevector <8 x float> %430, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>
  store <8 x float> %431, ptr %420, align 8, !tbaa !13
  br label %432

432:                                              ; preds = %419, %415
  %433 = load i16, ptr %123, align 2, !tbaa !398
  %434 = icmp sgt i16 %433, 1
  br i1 %434, label %435, label %450

435:                                              ; preds = %432
  %436 = getelementptr inbounds %struct.ParticleBillboardData, ptr %7, i64 0, i32 8, i64 2
  %437 = load i32, ptr %436, align 4, !tbaa !47
  %438 = icmp sgt i32 %437, -1
  br i1 %438, label %439, label %450

439:                                              ; preds = %435
  %440 = call ptr @RE_vlakren_get_tface(ptr noundef nonnull %3, ptr noundef nonnull %130, i32 noundef %437, ptr noundef null, i32 noundef 1) #16
  %441 = fadd fast float %409, %407
  store float %441, ptr %440, align 8, !tbaa !13
  %442 = fadd fast float %409, %408
  %443 = getelementptr inbounds [2 x float], ptr %440, i64 0, i64 1
  %444 = insertelement <4 x float> poison, float %442, i64 0
  %445 = insertelement <4 x float> %444, float %407, i64 1
  %446 = shufflevector <4 x float> %445, <4 x float> poison, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  store <4 x float> %446, ptr %443, align 4, !tbaa !13
  %447 = getelementptr inbounds [4 x [2 x float]], ptr %440, i64 0, i64 2, i64 1
  store float %408, ptr %447, align 4, !tbaa !13
  %448 = getelementptr inbounds [4 x [2 x float]], ptr %440, i64 0, i64 3
  store float %441, ptr %448, align 8, !tbaa !13
  %449 = getelementptr inbounds [4 x [2 x float]], ptr %440, i64 0, i64 3, i64 1
  store float %408, ptr %449, align 4, !tbaa !13
  br label %450

450:                                              ; preds = %432, %435, %439
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %16) #16
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %15) #16
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %14) #16
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %13) #16
  br label %464

451:                                              ; preds = %29
  %452 = getelementptr inbounds %struct.ParticleStrandData, ptr %6, i64 0, i32 1
  %453 = load ptr, ptr %452, align 8, !tbaa !400
  %454 = getelementptr inbounds %struct.ParticleStrandData, ptr %6, i64 0, i32 2
  %455 = load ptr, ptr %454, align 8, !tbaa !384
  %456 = call ptr @RE_inithalo_particle(ptr noundef %2, ptr noundef %3, ptr noundef %4, ptr noundef %5, ptr noundef nonnull %19, ptr noundef null, ptr noundef %453, ptr noundef %455, float noundef nofpclass(nan inf) %10, float noundef nofpclass(nan inf) 0.000000e+00, i32 noundef %9, ptr noundef %11) #16
  %457 = icmp eq ptr %456, null
  br i1 %457, label %464, label %458

458:                                              ; preds = %451
  %459 = getelementptr inbounds %struct.ObjectRen, ptr %3, i64 0, i32 2
  %460 = load ptr, ptr %459, align 8, !tbaa !148
  %461 = getelementptr inbounds %struct.Object, ptr %460, i64 0, i32 52
  %462 = load i32, ptr %461, align 8, !tbaa !114
  %463 = getelementptr inbounds %struct.HaloRen, ptr %456, i64 0, i32 28
  store i32 %462, ptr %463, align 8, !tbaa !543
  br label %464

464:                                              ; preds = %451, %458, %450, %82
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %22) #16
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %21) #16
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %20) #16
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %19) #16
  ret void
}

declare i32 @psys_get_particle_state(ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #5

declare ptr @cache_strand_surface(ptr noundef, ptr noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #5

declare void @BLI_rng_free(ptr noundef) local_unnamed_addr #5

declare void @end_latt_deform(ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @calc_vertexnormals(ptr noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) unnamed_addr #3 {
  %5 = alloca [3 x float], align 4
  %6 = alloca [4 x [2 x float]], align 16
  %7 = alloca %struct.SRenderMeshToTangent, align 8
  %8 = alloca %struct.SMikkTSpaceContext, align 8
  %9 = alloca %struct.SMikkTSpaceInterface, align 8
  %10 = icmp eq i8 %1, 0
  br i1 %10, label %23, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %struct.ObjectRen, ptr %0, i64 0, i32 10
  %13 = load i32, ptr %12, align 8, !tbaa !177
  %14 = icmp sgt i32 %13, 0
  br i1 %14, label %15, label %23

15:                                               ; preds = %11, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %11 ]
  %17 = tail call ptr @RE_findOrAddVert(ptr noundef nonnull %0, i32 noundef %16) #16
  %18 = getelementptr inbounds %struct.VertRen, ptr %17, i64 0, i32 1
  %19 = getelementptr inbounds %struct.VertRen, ptr %17, i64 0, i32 1, i64 2
  store float 0.000000e+00, ptr %19, align 4, !tbaa !13
  store <2 x float> zeroinitializer, ptr %18, align 4, !tbaa !13
  %20 = add nuw nsw i32 %16, 1
  %21 = load i32, ptr %12, align 8, !tbaa !177
  %22 = icmp slt i32 %20, %21
  br i1 %22, label %15, label %23, !llvm.loop !630

23:                                               ; preds = %15, %11, %4
  %24 = getelementptr inbounds %struct.ObjectRen, ptr %0, i64 0, i32 11
  %25 = load i32, ptr %24, align 4, !tbaa !499
  %26 = icmp sgt i32 %25, 0
  br i1 %26, label %27, label %205

27:                                               ; preds = %23
  %28 = icmp eq i8 %2, 0
  %29 = getelementptr inbounds %struct.ObjectRen, ptr %0, i64 0, i32 25
  %30 = getelementptr inbounds [4 x [2 x float]], ptr %6, i64 0, i64 1
  %31 = getelementptr inbounds [4 x [2 x float]], ptr %6, i64 0, i64 2
  %32 = getelementptr inbounds [4 x [2 x float]], ptr %6, i64 0, i64 3
  %33 = getelementptr inbounds [2 x float], ptr %6, i64 0, i64 1
  %34 = getelementptr inbounds [4 x [2 x float]], ptr %6, i64 0, i64 1, i64 1
  %35 = getelementptr inbounds [4 x [2 x float]], ptr %6, i64 0, i64 2, i64 1
  %36 = getelementptr inbounds [4 x [2 x float]], ptr %6, i64 0, i64 3, i64 1
  %37 = getelementptr inbounds float, ptr %5, i64 1
  %38 = getelementptr inbounds float, ptr %5, i64 2
  br label %48

39:                                               ; preds = %201
  %40 = icmp sgt i32 %203, 0
  br i1 %40, label %41, label %205

41:                                               ; preds = %39
  br i1 %10, label %42, label %211

42:                                               ; preds = %41, %42
  %43 = phi i32 [ %45, %42 ], [ 0, %41 ]
  %44 = call ptr @RE_findOrAddVlak(ptr noundef nonnull %0, i32 noundef %43) #16
  %45 = add nuw nsw i32 %43, 1
  %46 = load i32, ptr %24, align 4, !tbaa !499
  %47 = icmp slt i32 %45, %46
  br i1 %47, label %42, label %205, !llvm.loop !631

48:                                               ; preds = %27, %201
  %49 = phi i32 [ 0, %27 ], [ %202, %201 ]
  %50 = call ptr @RE_findOrAddVlak(ptr noundef nonnull %0, i32 noundef %49) #16
  br i1 %10, label %71, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds %struct.VlakRen, ptr %50, i64 0, i32 7
  %53 = load i8, ptr %52, align 1, !tbaa !508
  %54 = and i8 %53, 1
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %71, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %struct.VlakRen, ptr %50, i64 0, i32 3
  %58 = load ptr, ptr %57, align 8, !tbaa !506
  %59 = icmp eq ptr %58, null
  %60 = getelementptr inbounds %struct.VertRen, ptr %58, i64 0, i32 1
  %61 = select i1 %59, ptr null, ptr %60
  %62 = load ptr, ptr %50, align 8, !tbaa !502
  %63 = getelementptr inbounds %struct.VertRen, ptr %62, i64 0, i32 1
  %64 = getelementptr inbounds %struct.VlakRen, ptr %50, i64 0, i32 1
  %65 = load ptr, ptr %64, align 8, !tbaa !504
  %66 = getelementptr inbounds %struct.VertRen, ptr %65, i64 0, i32 1
  %67 = getelementptr inbounds %struct.VlakRen, ptr %50, i64 0, i32 2
  %68 = load ptr, ptr %67, align 8, !tbaa !505
  %69 = getelementptr inbounds %struct.VertRen, ptr %68, i64 0, i32 1
  %70 = getelementptr inbounds %struct.VlakRen, ptr %50, i64 0, i32 4
  call void @accumulate_vertex_normals(ptr noundef nonnull %63, ptr noundef nonnull %66, ptr noundef nonnull %69, ptr noundef %61, ptr noundef nonnull %70, ptr noundef %62, ptr noundef %65, ptr noundef %68, ptr noundef %58) #16
  br label %71

71:                                               ; preds = %56, %51, %48
  br i1 %28, label %201, label %72

72:                                               ; preds = %71
  %73 = load i32, ptr %29, align 8, !tbaa !632
  %74 = call ptr @RE_vlakren_get_tface(ptr noundef %0, ptr noundef %50, i32 noundef %73, ptr noundef null, i32 noundef 0) #16
  %75 = load ptr, ptr %50, align 8, !tbaa !502
  %76 = getelementptr inbounds %struct.VlakRen, ptr %50, i64 0, i32 1
  %77 = load ptr, ptr %76, align 8, !tbaa !504
  %78 = getelementptr inbounds %struct.VlakRen, ptr %50, i64 0, i32 2
  %79 = load ptr, ptr %78, align 8, !tbaa !505
  %80 = getelementptr inbounds %struct.VlakRen, ptr %50, i64 0, i32 3
  %81 = load ptr, ptr %80, align 8, !tbaa !506
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %5) #16
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %6) #16
  %82 = icmp eq ptr %74, null
  br i1 %82, label %87, label %83

83:                                               ; preds = %72
  %84 = getelementptr inbounds [4 x [2 x float]], ptr %74, i64 0, i64 1
  %85 = getelementptr inbounds [4 x [2 x float]], ptr %74, i64 0, i64 2
  %86 = getelementptr inbounds [4 x [2 x float]], ptr %74, i64 0, i64 3
  br label %120

87:                                               ; preds = %72
  %88 = getelementptr inbounds %struct.VertRen, ptr %75, i64 0, i32 2
  %89 = load ptr, ptr %88, align 8, !tbaa !496
  %90 = icmp eq ptr %89, null
  br i1 %90, label %200, label %91

91:                                               ; preds = %87
  %92 = load float, ptr %89, align 4, !tbaa !13
  %93 = getelementptr inbounds float, ptr %89, i64 1
  %94 = load float, ptr %93, align 4, !tbaa !13
  %95 = getelementptr inbounds float, ptr %89, i64 2
  %96 = load float, ptr %95, align 4, !tbaa !13
  call void @map_to_sphere(ptr noundef nonnull %6, ptr noundef nonnull %33, float noundef nofpclass(nan inf) %92, float noundef nofpclass(nan inf) %94, float noundef nofpclass(nan inf) %96) #16
  %97 = getelementptr inbounds %struct.VertRen, ptr %77, i64 0, i32 2
  %98 = load ptr, ptr %97, align 8, !tbaa !496
  %99 = load float, ptr %98, align 4, !tbaa !13
  %100 = getelementptr inbounds float, ptr %98, i64 1
  %101 = load float, ptr %100, align 4, !tbaa !13
  %102 = getelementptr inbounds float, ptr %98, i64 2
  %103 = load float, ptr %102, align 4, !tbaa !13
  call void @map_to_sphere(ptr noundef nonnull %30, ptr noundef nonnull %34, float noundef nofpclass(nan inf) %99, float noundef nofpclass(nan inf) %101, float noundef nofpclass(nan inf) %103) #16
  %104 = getelementptr inbounds %struct.VertRen, ptr %79, i64 0, i32 2
  %105 = load ptr, ptr %104, align 8, !tbaa !496
  %106 = load float, ptr %105, align 4, !tbaa !13
  %107 = getelementptr inbounds float, ptr %105, i64 1
  %108 = load float, ptr %107, align 4, !tbaa !13
  %109 = getelementptr inbounds float, ptr %105, i64 2
  %110 = load float, ptr %109, align 4, !tbaa !13
  call void @map_to_sphere(ptr noundef nonnull %31, ptr noundef nonnull %35, float noundef nofpclass(nan inf) %106, float noundef nofpclass(nan inf) %108, float noundef nofpclass(nan inf) %110) #16
  %111 = icmp eq ptr %81, null
  br i1 %111, label %120, label %112

112:                                              ; preds = %91
  %113 = getelementptr inbounds %struct.VertRen, ptr %81, i64 0, i32 2
  %114 = load ptr, ptr %113, align 8, !tbaa !496
  %115 = load float, ptr %114, align 4, !tbaa !13
  %116 = getelementptr inbounds float, ptr %114, i64 1
  %117 = load float, ptr %116, align 4, !tbaa !13
  %118 = getelementptr inbounds float, ptr %114, i64 2
  %119 = load float, ptr %118, align 4, !tbaa !13
  call void @map_to_sphere(ptr noundef nonnull %32, ptr noundef nonnull %36, float noundef nofpclass(nan inf) %115, float noundef nofpclass(nan inf) %117, float noundef nofpclass(nan inf) %119) #16
  br label %120

120:                                              ; preds = %112, %91, %83
  %121 = phi ptr [ %74, %83 ], [ %6, %112 ], [ %6, %91 ]
  %122 = phi ptr [ %84, %83 ], [ %30, %112 ], [ %30, %91 ]
  %123 = phi ptr [ %85, %83 ], [ %31, %112 ], [ %31, %91 ]
  %124 = phi ptr [ %86, %83 ], [ %32, %112 ], [ %32, %91 ]
  %125 = getelementptr inbounds %struct.VlakRen, ptr %50, i64 0, i32 4
  call void @tangent_from_uv(ptr noundef nonnull %121, ptr noundef nonnull %122, ptr noundef nonnull %123, ptr noundef %75, ptr noundef %77, ptr noundef %79, ptr noundef nonnull %125, ptr noundef nonnull %5) #16
  %126 = call ptr @RE_vertren_get_tangent(ptr noundef nonnull %0, ptr noundef %75, i32 noundef 1) #16
  %127 = load float, ptr %5, align 4, !tbaa !13
  %128 = load float, ptr %126, align 4, !tbaa !13
  %129 = fadd fast float %128, %127
  store float %129, ptr %126, align 4, !tbaa !13
  %130 = load float, ptr %37, align 4, !tbaa !13
  %131 = getelementptr inbounds float, ptr %126, i64 1
  %132 = load float, ptr %131, align 4, !tbaa !13
  %133 = fadd fast float %132, %130
  store float %133, ptr %131, align 4, !tbaa !13
  %134 = load float, ptr %38, align 4, !tbaa !13
  %135 = getelementptr inbounds float, ptr %126, i64 2
  %136 = load float, ptr %135, align 4, !tbaa !13
  %137 = fadd fast float %136, %134
  store float %137, ptr %135, align 4, !tbaa !13
  %138 = call ptr @RE_vertren_get_tangent(ptr noundef nonnull %0, ptr noundef %77, i32 noundef 1) #16
  %139 = load float, ptr %5, align 4, !tbaa !13
  %140 = load float, ptr %138, align 4, !tbaa !13
  %141 = fadd fast float %140, %139
  store float %141, ptr %138, align 4, !tbaa !13
  %142 = load float, ptr %37, align 4, !tbaa !13
  %143 = getelementptr inbounds float, ptr %138, i64 1
  %144 = load float, ptr %143, align 4, !tbaa !13
  %145 = fadd fast float %144, %142
  store float %145, ptr %143, align 4, !tbaa !13
  %146 = load float, ptr %38, align 4, !tbaa !13
  %147 = getelementptr inbounds float, ptr %138, i64 2
  %148 = load float, ptr %147, align 4, !tbaa !13
  %149 = fadd fast float %148, %146
  store float %149, ptr %147, align 4, !tbaa !13
  %150 = call ptr @RE_vertren_get_tangent(ptr noundef nonnull %0, ptr noundef %79, i32 noundef 1) #16
  %151 = load float, ptr %5, align 4, !tbaa !13
  %152 = load float, ptr %150, align 4, !tbaa !13
  %153 = fadd fast float %152, %151
  store float %153, ptr %150, align 4, !tbaa !13
  %154 = load float, ptr %37, align 4, !tbaa !13
  %155 = getelementptr inbounds float, ptr %150, i64 1
  %156 = load float, ptr %155, align 4, !tbaa !13
  %157 = fadd fast float %156, %154
  store float %157, ptr %155, align 4, !tbaa !13
  %158 = load float, ptr %38, align 4, !tbaa !13
  %159 = getelementptr inbounds float, ptr %150, i64 2
  %160 = load float, ptr %159, align 4, !tbaa !13
  %161 = fadd fast float %160, %158
  store float %161, ptr %159, align 4, !tbaa !13
  %162 = icmp eq ptr %81, null
  br i1 %162, label %200, label %163

163:                                              ; preds = %120
  call void @tangent_from_uv(ptr noundef nonnull %121, ptr noundef nonnull %123, ptr noundef nonnull %124, ptr noundef %75, ptr noundef %79, ptr noundef nonnull %81, ptr noundef nonnull %125, ptr noundef nonnull %5) #16
  %164 = call ptr @RE_vertren_get_tangent(ptr noundef nonnull %0, ptr noundef %75, i32 noundef 1) #16
  %165 = load float, ptr %5, align 4, !tbaa !13
  %166 = load float, ptr %164, align 4, !tbaa !13
  %167 = fadd fast float %166, %165
  store float %167, ptr %164, align 4, !tbaa !13
  %168 = load float, ptr %37, align 4, !tbaa !13
  %169 = getelementptr inbounds float, ptr %164, i64 1
  %170 = load float, ptr %169, align 4, !tbaa !13
  %171 = fadd fast float %170, %168
  store float %171, ptr %169, align 4, !tbaa !13
  %172 = load float, ptr %38, align 4, !tbaa !13
  %173 = getelementptr inbounds float, ptr %164, i64 2
  %174 = load float, ptr %173, align 4, !tbaa !13
  %175 = fadd fast float %174, %172
  store float %175, ptr %173, align 4, !tbaa !13
  %176 = call ptr @RE_vertren_get_tangent(ptr noundef nonnull %0, ptr noundef %79, i32 noundef 1) #16
  %177 = load float, ptr %5, align 4, !tbaa !13
  %178 = load float, ptr %176, align 4, !tbaa !13
  %179 = fadd fast float %178, %177
  store float %179, ptr %176, align 4, !tbaa !13
  %180 = load float, ptr %37, align 4, !tbaa !13
  %181 = getelementptr inbounds float, ptr %176, i64 1
  %182 = load float, ptr %181, align 4, !tbaa !13
  %183 = fadd fast float %182, %180
  store float %183, ptr %181, align 4, !tbaa !13
  %184 = load float, ptr %38, align 4, !tbaa !13
  %185 = getelementptr inbounds float, ptr %176, i64 2
  %186 = load float, ptr %185, align 4, !tbaa !13
  %187 = fadd fast float %186, %184
  store float %187, ptr %185, align 4, !tbaa !13
  %188 = call ptr @RE_vertren_get_tangent(ptr noundef nonnull %0, ptr noundef nonnull %81, i32 noundef 1) #16
  %189 = load float, ptr %5, align 4, !tbaa !13
  %190 = load float, ptr %188, align 4, !tbaa !13
  %191 = fadd fast float %190, %189
  store float %191, ptr %188, align 4, !tbaa !13
  %192 = load float, ptr %37, align 4, !tbaa !13
  %193 = getelementptr inbounds float, ptr %188, i64 1
  %194 = load float, ptr %193, align 4, !tbaa !13
  %195 = fadd fast float %194, %192
  store float %195, ptr %193, align 4, !tbaa !13
  %196 = load float, ptr %38, align 4, !tbaa !13
  %197 = getelementptr inbounds float, ptr %188, i64 2
  %198 = load float, ptr %197, align 4, !tbaa !13
  %199 = fadd fast float %198, %196
  store float %199, ptr %197, align 4, !tbaa !13
  br label %200

200:                                              ; preds = %87, %120, %163
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %6) #16
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %5) #16
  br label %201

201:                                              ; preds = %200, %71
  %202 = add nuw nsw i32 %49, 1
  %203 = load i32, ptr %24, align 4, !tbaa !499
  %204 = icmp slt i32 %202, %203
  br i1 %204, label %48, label %39, !llvm.loop !633

205:                                              ; preds = %303, %42, %23, %39
  %206 = getelementptr inbounds %struct.ObjectRen, ptr %0, i64 0, i32 10
  %207 = load i32, ptr %206, align 8, !tbaa !177
  %208 = icmp sgt i32 %207, 0
  br i1 %208, label %209, label %378

209:                                              ; preds = %205
  %210 = icmp eq i8 %2, 0
  br label %307

211:                                              ; preds = %41, %303
  %212 = phi i32 [ %304, %303 ], [ 0, %41 ]
  %213 = call ptr @RE_findOrAddVlak(ptr noundef nonnull %0, i32 noundef %212) #16
  %214 = getelementptr inbounds %struct.VlakRen, ptr %213, i64 0, i32 7
  %215 = load i8, ptr %214, align 1, !tbaa !508
  %216 = and i8 %215, 1
  %217 = icmp eq i8 %216, 0
  br i1 %217, label %218, label %303

218:                                              ; preds = %211
  %219 = load ptr, ptr %213, align 8, !tbaa !502
  %220 = getelementptr inbounds %struct.VertRen, ptr %219, i64 0, i32 1
  %221 = load float, ptr %220, align 4, !tbaa !13
  %222 = fcmp fast oeq float %221, 0.000000e+00
  br i1 %222, label %223, label %238

223:                                              ; preds = %218
  %224 = getelementptr inbounds %struct.VertRen, ptr %219, i64 0, i32 1, i64 1
  %225 = load float, ptr %224, align 4, !tbaa !13
  %226 = fcmp fast oeq float %225, 0.000000e+00
  br i1 %226, label %227, label %238

227:                                              ; preds = %223
  %228 = getelementptr inbounds %struct.VertRen, ptr %219, i64 0, i32 1, i64 2
  %229 = load float, ptr %228, align 4, !tbaa !13
  %230 = fcmp fast une float %229, 0.000000e+00
  br i1 %230, label %238, label %231

231:                                              ; preds = %227
  %232 = getelementptr inbounds %struct.VlakRen, ptr %213, i64 0, i32 4
  %233 = load float, ptr %232, align 4, !tbaa !13
  store float %233, ptr %220, align 4, !tbaa !13
  %234 = getelementptr inbounds %struct.VlakRen, ptr %213, i64 0, i32 4, i64 1
  %235 = load float, ptr %234, align 4, !tbaa !13
  store float %235, ptr %224, align 4, !tbaa !13
  %236 = getelementptr inbounds %struct.VlakRen, ptr %213, i64 0, i32 4, i64 2
  %237 = load float, ptr %236, align 4, !tbaa !13
  store float %237, ptr %228, align 4, !tbaa !13
  br label %238

238:                                              ; preds = %218, %223, %231, %227
  %239 = getelementptr inbounds %struct.VlakRen, ptr %213, i64 0, i32 1
  %240 = load ptr, ptr %239, align 8, !tbaa !504
  %241 = getelementptr inbounds %struct.VertRen, ptr %240, i64 0, i32 1
  %242 = load float, ptr %241, align 4, !tbaa !13
  %243 = fcmp fast oeq float %242, 0.000000e+00
  br i1 %243, label %244, label %259

244:                                              ; preds = %238
  %245 = getelementptr inbounds %struct.VertRen, ptr %240, i64 0, i32 1, i64 1
  %246 = load float, ptr %245, align 4, !tbaa !13
  %247 = fcmp fast oeq float %246, 0.000000e+00
  br i1 %247, label %248, label %259

248:                                              ; preds = %244
  %249 = getelementptr inbounds %struct.VertRen, ptr %240, i64 0, i32 1, i64 2
  %250 = load float, ptr %249, align 4, !tbaa !13
  %251 = fcmp fast une float %250, 0.000000e+00
  br i1 %251, label %259, label %252

252:                                              ; preds = %248
  %253 = getelementptr inbounds %struct.VlakRen, ptr %213, i64 0, i32 4
  %254 = load float, ptr %253, align 4, !tbaa !13
  store float %254, ptr %241, align 4, !tbaa !13
  %255 = getelementptr inbounds %struct.VlakRen, ptr %213, i64 0, i32 4, i64 1
  %256 = load float, ptr %255, align 4, !tbaa !13
  store float %256, ptr %245, align 4, !tbaa !13
  %257 = getelementptr inbounds %struct.VlakRen, ptr %213, i64 0, i32 4, i64 2
  %258 = load float, ptr %257, align 4, !tbaa !13
  store float %258, ptr %249, align 4, !tbaa !13
  br label %259

259:                                              ; preds = %238, %244, %252, %248
  %260 = getelementptr inbounds %struct.VlakRen, ptr %213, i64 0, i32 2
  %261 = load ptr, ptr %260, align 8, !tbaa !505
  %262 = getelementptr inbounds %struct.VertRen, ptr %261, i64 0, i32 1
  %263 = load float, ptr %262, align 4, !tbaa !13
  %264 = fcmp fast oeq float %263, 0.000000e+00
  br i1 %264, label %265, label %280

265:                                              ; preds = %259
  %266 = getelementptr inbounds %struct.VertRen, ptr %261, i64 0, i32 1, i64 1
  %267 = load float, ptr %266, align 4, !tbaa !13
  %268 = fcmp fast oeq float %267, 0.000000e+00
  br i1 %268, label %269, label %280

269:                                              ; preds = %265
  %270 = getelementptr inbounds %struct.VertRen, ptr %261, i64 0, i32 1, i64 2
  %271 = load float, ptr %270, align 4, !tbaa !13
  %272 = fcmp fast une float %271, 0.000000e+00
  br i1 %272, label %280, label %273

273:                                              ; preds = %269
  %274 = getelementptr inbounds %struct.VlakRen, ptr %213, i64 0, i32 4
  %275 = load float, ptr %274, align 4, !tbaa !13
  store float %275, ptr %262, align 4, !tbaa !13
  %276 = getelementptr inbounds %struct.VlakRen, ptr %213, i64 0, i32 4, i64 1
  %277 = load float, ptr %276, align 4, !tbaa !13
  store float %277, ptr %266, align 4, !tbaa !13
  %278 = getelementptr inbounds %struct.VlakRen, ptr %213, i64 0, i32 4, i64 2
  %279 = load float, ptr %278, align 4, !tbaa !13
  store float %279, ptr %270, align 4, !tbaa !13
  br label %280

280:                                              ; preds = %259, %265, %273, %269
  %281 = getelementptr inbounds %struct.VlakRen, ptr %213, i64 0, i32 3
  %282 = load ptr, ptr %281, align 8, !tbaa !506
  %283 = icmp eq ptr %282, null
  br i1 %283, label %303, label %284

284:                                              ; preds = %280
  %285 = getelementptr inbounds %struct.VertRen, ptr %282, i64 0, i32 1
  %286 = load float, ptr %285, align 4, !tbaa !13
  %287 = fcmp fast oeq float %286, 0.000000e+00
  br i1 %287, label %288, label %303

288:                                              ; preds = %284
  %289 = getelementptr inbounds %struct.VertRen, ptr %282, i64 0, i32 1, i64 1
  %290 = load float, ptr %289, align 4, !tbaa !13
  %291 = fcmp fast oeq float %290, 0.000000e+00
  br i1 %291, label %292, label %303

292:                                              ; preds = %288
  %293 = getelementptr inbounds %struct.VertRen, ptr %282, i64 0, i32 1, i64 2
  %294 = load float, ptr %293, align 4, !tbaa !13
  %295 = fcmp fast une float %294, 0.000000e+00
  br i1 %295, label %303, label %296

296:                                              ; preds = %292
  %297 = getelementptr inbounds %struct.VlakRen, ptr %213, i64 0, i32 4
  %298 = load float, ptr %297, align 4, !tbaa !13
  store float %298, ptr %285, align 4, !tbaa !13
  %299 = getelementptr inbounds %struct.VlakRen, ptr %213, i64 0, i32 4, i64 1
  %300 = load float, ptr %299, align 4, !tbaa !13
  store float %300, ptr %289, align 4, !tbaa !13
  %301 = getelementptr inbounds %struct.VlakRen, ptr %213, i64 0, i32 4, i64 2
  %302 = load float, ptr %301, align 4, !tbaa !13
  store float %302, ptr %293, align 4, !tbaa !13
  br label %303

303:                                              ; preds = %284, %288, %280, %292, %296, %211
  %304 = add nuw nsw i32 %212, 1
  %305 = load i32, ptr %24, align 4, !tbaa !499
  %306 = icmp slt i32 %304, %305
  br i1 %306, label %211, label %205, !llvm.loop !631

307:                                              ; preds = %209, %374
  %308 = phi i32 [ 0, %209 ], [ %375, %374 ]
  %309 = call ptr @RE_findOrAddVert(ptr noundef nonnull %0, i32 noundef %308) #16
  %310 = getelementptr inbounds %struct.VertRen, ptr %309, i64 0, i32 1
  %311 = getelementptr inbounds %struct.VertRen, ptr %309, i64 0, i32 1, i64 1
  %312 = load <2 x float>, ptr %310, align 4, !tbaa !13
  %313 = fmul fast <2 x float> %312, %312
  %314 = shufflevector <2 x float> %313, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %315 = fadd fast <2 x float> %314, %313
  %316 = extractelement <2 x float> %315, i64 0
  %317 = getelementptr inbounds %struct.VertRen, ptr %309, i64 0, i32 1, i64 2
  %318 = load float, ptr %317, align 4, !tbaa !13
  %319 = fmul fast float %318, %318
  %320 = fadd fast float %316, %319
  %321 = fcmp fast ogt float %320, 0x38AA95A5C0000000
  br i1 %321, label %322, label %329

322:                                              ; preds = %307
  %323 = call fast float @llvm.sqrt.f32(float %320)
  %324 = fdiv fast float 1.000000e+00, %323
  %325 = insertelement <2 x float> poison, float %324, i64 0
  %326 = shufflevector <2 x float> %325, <2 x float> poison, <2 x i32> zeroinitializer
  %327 = fmul fast <2 x float> %326, %312
  %328 = fmul fast float %324, %318
  br label %329

329:                                              ; preds = %307, %322
  %330 = phi float [ %328, %322 ], [ 0.000000e+00, %307 ]
  %331 = phi <2 x float> [ %327, %322 ], [ zeroinitializer, %307 ]
  store <2 x float> %331, ptr %310, align 4
  store float %330, ptr %317, align 4
  br i1 %210, label %374, label %332

332:                                              ; preds = %329
  %333 = call ptr @RE_vertren_get_tangent(ptr noundef nonnull %0, ptr noundef nonnull %309, i32 noundef 0) #16
  %334 = icmp eq ptr %333, null
  br i1 %334, label %374, label %335

335:                                              ; preds = %332
  %336 = load float, ptr %333, align 4, !tbaa !13
  %337 = load float, ptr %310, align 4, !tbaa !13
  %338 = fmul fast float %337, %336
  %339 = getelementptr inbounds float, ptr %333, i64 1
  %340 = getelementptr inbounds float, ptr %333, i64 2
  %341 = load <2 x float>, ptr %339, align 4, !tbaa !13
  %342 = load <2 x float>, ptr %311, align 4, !tbaa !13
  %343 = fmul fast <2 x float> %342, %341
  %344 = extractelement <2 x float> %343, i64 0
  %345 = fadd fast float %344, %338
  %346 = extractelement <2 x float> %343, i64 1
  %347 = fadd fast float %345, %346
  %348 = fmul fast float %347, %337
  %349 = fsub fast float %336, %348
  store float %349, ptr %333, align 4, !tbaa !13
  %350 = load float, ptr %311, align 4, !tbaa !13
  %351 = fmul fast float %350, %347
  %352 = extractelement <2 x float> %341, i64 0
  %353 = fsub fast float %352, %351
  store float %353, ptr %339, align 4, !tbaa !13
  %354 = load float, ptr %317, align 4, !tbaa !13
  %355 = fmul fast float %354, %347
  %356 = extractelement <2 x float> %341, i64 1
  %357 = fsub fast float %356, %355
  %358 = fmul fast float %349, %349
  %359 = fmul fast float %353, %353
  %360 = fadd fast float %359, %358
  %361 = fmul fast float %357, %357
  %362 = fadd fast float %360, %361
  %363 = fcmp fast ogt float %362, 0x38AA95A5C0000000
  br i1 %363, label %364, label %370

364:                                              ; preds = %335
  %365 = call fast float @llvm.sqrt.f32(float %362)
  %366 = fdiv fast float 1.000000e+00, %365
  %367 = fmul fast float %366, %349
  %368 = fmul fast float %366, %353
  %369 = fmul fast float %366, %357
  br label %370

370:                                              ; preds = %335, %364
  %371 = phi float [ %367, %364 ], [ 0.000000e+00, %335 ]
  %372 = phi float [ %368, %364 ], [ 0.000000e+00, %335 ]
  %373 = phi float [ %369, %364 ], [ 0.000000e+00, %335 ]
  store float %371, ptr %333, align 4
  store float %372, ptr %339, align 4
  store float %373, ptr %340, align 4
  br label %374

374:                                              ; preds = %332, %370, %329
  %375 = add nuw nsw i32 %308, 1
  %376 = load i32, ptr %206, align 8, !tbaa !177
  %377 = icmp slt i32 %375, %376
  br i1 %377, label %307, label %378, !llvm.loop !634

378:                                              ; preds = %374, %205
  %379 = icmp eq i8 %3, 0
  br i1 %379, label %389, label %380

380:                                              ; preds = %378
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %7) #16
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %8) #16
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %9) #16
  %381 = getelementptr inbounds i8, ptr %9, i64 48
  store i64 0, ptr %381, align 8
  store ptr %0, ptr %7, align 8, !tbaa !635
  %382 = getelementptr inbounds %struct.SMikkTSpaceContext, ptr %8, i64 0, i32 1
  store ptr %7, ptr %382, align 8, !tbaa !637
  store ptr %9, ptr %8, align 8, !tbaa !639
  store ptr @GetNumFaces, ptr %9, align 8, !tbaa !640
  %383 = getelementptr inbounds %struct.SMikkTSpaceInterface, ptr %9, i64 0, i32 1
  store ptr @GetNumVertsOfFace, ptr %383, align 8, !tbaa !642
  %384 = getelementptr inbounds %struct.SMikkTSpaceInterface, ptr %9, i64 0, i32 2
  store ptr @GetPosition, ptr %384, align 8, !tbaa !643
  %385 = getelementptr inbounds %struct.SMikkTSpaceInterface, ptr %9, i64 0, i32 4
  store ptr @GetTextureCoordinate, ptr %385, align 8, !tbaa !644
  %386 = getelementptr inbounds %struct.SMikkTSpaceInterface, ptr %9, i64 0, i32 3
  store ptr @GetNormal, ptr %386, align 8, !tbaa !645
  %387 = getelementptr inbounds %struct.SMikkTSpaceInterface, ptr %9, i64 0, i32 5
  store ptr @SetTSpace, ptr %387, align 8, !tbaa !646
  %388 = call i32 @genTangSpaceDefault(ptr noundef nonnull %8) #16
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %9) #16
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %8) #16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7) #16
  br label %389

389:                                              ; preds = %380, %378
  ret void
}

declare ptr @BLI_ghash_lookup(ptr noundef, ptr noundef) local_unnamed_addr #5

declare ptr @BLI_ghash_ptr_new(ptr noundef) local_unnamed_addr #5

declare void @BLI_ghash_insert(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

declare ptr @CustomData_get_layer_n(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

declare void @psys_interpolate_uvs(ptr noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

declare void @psys_interpolate_mcol(ptr noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

declare ptr @RE_inithalo_particle(ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, float noundef nofpclass(nan inf), float noundef nofpclass(nan inf), i32 noundef, ptr noundef) local_unnamed_addr #5

declare ptr @RE_findOrAddVlak(ptr noundef, i32 noundef) local_unnamed_addr #5

declare ptr @RE_findOrAddVert(ptr noundef, i32 noundef) local_unnamed_addr #5

declare nofpclass(nan inf) float @normal_quad_v3(ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

declare ptr @RE_vlakren_get_surfnor(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #5

declare ptr @RE_vlakren_get_tface(ptr noundef, ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #5

declare ptr @RE_vlakren_get_mcol(ptr noundef, ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #5

declare void @project_v3_v3v3(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

declare void @mul_mat3_m4_v3(ptr noundef, ptr noundef) local_unnamed_addr #5

declare void @psys_make_billboard(ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

declare void @accumulate_vertex_normals(ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

declare ptr @RE_vertren_get_tangent(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(read, inaccessiblemem: none) uwtable
define internal i32 @GetNumFaces(ptr nocapture noundef readonly %0) #10 {
  %2 = getelementptr inbounds %struct.SMikkTSpaceContext, ptr %0, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !637
  %4 = load ptr, ptr %3, align 8, !tbaa !635
  %5 = getelementptr inbounds %struct.ObjectRen, ptr %4, i64 0, i32 11
  %6 = load i32, ptr %5, align 4, !tbaa !499
  ret i32 %6
}

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @GetNumVertsOfFace(ptr nocapture noundef readonly %0, i32 noundef %1) #3 {
  %3 = getelementptr inbounds %struct.SMikkTSpaceContext, ptr %0, i64 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !637
  %5 = load ptr, ptr %4, align 8, !tbaa !635
  %6 = tail call ptr @RE_findOrAddVlak(ptr noundef %5, i32 noundef %1) #16
  %7 = getelementptr inbounds %struct.VlakRen, ptr %6, i64 0, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !506
  %9 = icmp eq ptr %8, null
  %10 = select i1 %9, i32 3, i32 4
  ret i32 %10
}

; Function Attrs: nounwind sspstrong uwtable
define internal void @GetPosition(ptr nocapture noundef readonly %0, ptr nocapture noundef writeonly %1, i32 noundef %2, i32 noundef %3) #3 {
  %5 = getelementptr inbounds %struct.SMikkTSpaceContext, ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !637
  %7 = load ptr, ptr %6, align 8, !tbaa !635
  %8 = tail call ptr @RE_findOrAddVlak(ptr noundef %7, i32 noundef %2) #16
  %9 = sext i32 %3 to i64
  %10 = getelementptr inbounds ptr, ptr %8, i64 %9
  %11 = load ptr, ptr %10, align 8, !tbaa !502
  %12 = load float, ptr %11, align 4, !tbaa !13
  store float %12, ptr %1, align 4, !tbaa !13
  %13 = getelementptr inbounds float, ptr %11, i64 1
  %14 = load float, ptr %13, align 4, !tbaa !13
  %15 = getelementptr inbounds float, ptr %1, i64 1
  store float %14, ptr %15, align 4, !tbaa !13
  %16 = getelementptr inbounds float, ptr %11, i64 2
  %17 = load float, ptr %16, align 4, !tbaa !13
  %18 = getelementptr inbounds float, ptr %1, i64 2
  store float %17, ptr %18, align 4, !tbaa !13
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal void @GetTextureCoordinate(ptr nocapture noundef readonly %0, ptr noundef %1, i32 noundef %2, i32 noundef %3) #3 {
  %5 = getelementptr inbounds %struct.SMikkTSpaceContext, ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !637
  %7 = load ptr, ptr %6, align 8, !tbaa !635
  %8 = tail call ptr @RE_findOrAddVlak(ptr noundef %7, i32 noundef %2) #16
  %9 = load ptr, ptr %6, align 8, !tbaa !635
  %10 = getelementptr inbounds %struct.ObjectRen, ptr %9, i64 0, i32 25
  %11 = load i32, ptr %10, align 8, !tbaa !632
  %12 = tail call ptr @RE_vlakren_get_tface(ptr noundef %9, ptr noundef %8, i32 noundef %11, ptr noundef null, i32 noundef 0) #16
  %13 = icmp eq ptr %12, null
  %14 = sext i32 %3 to i64
  br i1 %13, label %21, label %15

15:                                               ; preds = %4
  %16 = getelementptr inbounds [4 x [2 x float]], ptr %12, i64 0, i64 %14
  %17 = load float, ptr %16, align 4, !tbaa !13
  store float %17, ptr %1, align 4, !tbaa !13
  %18 = getelementptr inbounds float, ptr %16, i64 1
  %19 = load float, ptr %18, align 4, !tbaa !13
  %20 = getelementptr inbounds float, ptr %1, i64 1
  store float %19, ptr %20, align 4, !tbaa !13
  br label %35

21:                                               ; preds = %4
  %22 = getelementptr inbounds ptr, ptr %8, i64 %14
  %23 = load ptr, ptr %22, align 8, !tbaa !502
  %24 = getelementptr inbounds %struct.VertRen, ptr %23, i64 0, i32 2
  %25 = load ptr, ptr %24, align 8, !tbaa !496
  %26 = icmp eq ptr %25, null
  br i1 %26, label %34, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds float, ptr %1, i64 1
  %29 = load float, ptr %25, align 4, !tbaa !13
  %30 = getelementptr inbounds float, ptr %25, i64 1
  %31 = load float, ptr %30, align 4, !tbaa !13
  %32 = getelementptr inbounds float, ptr %25, i64 2
  %33 = load float, ptr %32, align 4, !tbaa !13
  tail call void @map_to_sphere(ptr noundef %1, ptr noundef nonnull %28, float noundef nofpclass(nan inf) %29, float noundef nofpclass(nan inf) %31, float noundef nofpclass(nan inf) %33) #16
  br label %35

34:                                               ; preds = %21
  store <2 x float> zeroinitializer, ptr %1, align 4, !tbaa !13
  br label %35

35:                                               ; preds = %27, %34, %15
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal void @GetNormal(ptr nocapture noundef readonly %0, ptr nocapture noundef writeonly %1, i32 noundef %2, i32 noundef %3) #3 {
  %5 = getelementptr inbounds %struct.SMikkTSpaceContext, ptr %0, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !637
  %7 = load ptr, ptr %6, align 8, !tbaa !635
  %8 = tail call ptr @RE_findOrAddVlak(ptr noundef %7, i32 noundef %2) #16
  %9 = getelementptr inbounds %struct.VlakRen, ptr %8, i64 0, i32 7
  %10 = load i8, ptr %9, align 1, !tbaa !508
  %11 = and i8 %10, 1
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %24, label %13

13:                                               ; preds = %4
  %14 = sext i32 %3 to i64
  %15 = getelementptr inbounds ptr, ptr %8, i64 %14
  %16 = load ptr, ptr %15, align 8, !tbaa !502
  %17 = getelementptr inbounds %struct.VertRen, ptr %16, i64 0, i32 1
  %18 = load float, ptr %17, align 4, !tbaa !13
  store float %18, ptr %1, align 4, !tbaa !13
  %19 = getelementptr inbounds %struct.VertRen, ptr %16, i64 0, i32 1, i64 1
  %20 = load float, ptr %19, align 4, !tbaa !13
  %21 = getelementptr inbounds float, ptr %1, i64 1
  store float %20, ptr %21, align 4, !tbaa !13
  %22 = getelementptr inbounds %struct.VertRen, ptr %16, i64 0, i32 1, i64 2
  %23 = load float, ptr %22, align 4, !tbaa !13
  br label %35

24:                                               ; preds = %4
  %25 = getelementptr inbounds %struct.VlakRen, ptr %8, i64 0, i32 4
  %26 = load float, ptr %25, align 4, !tbaa !13
  %27 = fneg fast float %26
  store float %27, ptr %1, align 4, !tbaa !13
  %28 = getelementptr inbounds %struct.VlakRen, ptr %8, i64 0, i32 4, i64 1
  %29 = load float, ptr %28, align 4, !tbaa !13
  %30 = fneg fast float %29
  %31 = getelementptr inbounds float, ptr %1, i64 1
  store float %30, ptr %31, align 4, !tbaa !13
  %32 = getelementptr inbounds %struct.VlakRen, ptr %8, i64 0, i32 4, i64 2
  %33 = load float, ptr %32, align 4, !tbaa !13
  %34 = fneg fast float %33
  br label %35

35:                                               ; preds = %24, %13
  %36 = phi float [ %34, %24 ], [ %23, %13 ]
  %37 = getelementptr inbounds float, ptr %1, i64 2
  store float %36, ptr %37, align 4
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal void @SetTSpace(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1, float noundef nofpclass(nan inf) %2, i32 noundef %3, i32 noundef %4) #3 {
  %6 = getelementptr inbounds %struct.SMikkTSpaceContext, ptr %0, i64 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !637
  %8 = load ptr, ptr %7, align 8, !tbaa !635
  %9 = tail call ptr @RE_findOrAddVlak(ptr noundef %8, i32 noundef %3) #16
  %10 = load ptr, ptr %7, align 8, !tbaa !635
  %11 = tail call ptr @RE_vlakren_get_nmap_tangent(ptr noundef %10, ptr noundef %9, i32 noundef 1) #16
  %12 = icmp eq ptr %11, null
  br i1 %12, label %27, label %13

13:                                               ; preds = %5
  %14 = shl nsw i32 %4, 2
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds float, ptr %11, i64 %15
  %17 = load float, ptr %1, align 4, !tbaa !13
  store float %17, ptr %16, align 4, !tbaa !13
  %18 = getelementptr inbounds float, ptr %1, i64 1
  %19 = load float, ptr %18, align 4, !tbaa !13
  %20 = getelementptr inbounds float, ptr %16, i64 1
  store float %19, ptr %20, align 4, !tbaa !13
  %21 = getelementptr inbounds float, ptr %1, i64 2
  %22 = load float, ptr %21, align 4, !tbaa !13
  %23 = getelementptr inbounds float, ptr %16, i64 2
  store float %22, ptr %23, align 4, !tbaa !13
  %24 = or i32 %14, 3
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds float, ptr %11, i64 %25
  store float %2, ptr %26, align 4, !tbaa !13
  br label %27

27:                                               ; preds = %13, %5
  ret void
}

declare i32 @genTangSpaceDefault(ptr noundef) local_unnamed_addr #5

declare void @map_to_sphere(ptr noundef, ptr noundef, float noundef nofpclass(nan inf), float noundef nofpclass(nan inf), float noundef nofpclass(nan inf)) local_unnamed_addr #5

declare void @tangent_from_uv(ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

declare ptr @RE_vlakren_get_nmap_tangent(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #5

declare void @BKE_displist_make_curveTypes_forRender(ptr noundef, ptr noundef, ptr noundef, ptr noundef, i8 noundef zeroext, i8 noundef zeroext) local_unnamed_addr #5

declare zeroext i8 @is_negative_m4(ptr noundef) local_unnamed_addr #5

declare void @transpose_m4(ptr noundef) local_unnamed_addr #5

declare ptr @BKE_displist_make_orco(ptr noundef, ptr noundef, ptr noundef, i8 noundef zeroext, i8 noundef zeroext) local_unnamed_addr #5

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @init_render_dm(ptr noundef %0, ptr nocapture noundef %1, ptr noundef %2, i32 noundef %3, ptr noundef %4, ptr noundef %5) unnamed_addr #3 {
  %7 = alloca ptr, align 8
  %8 = getelementptr inbounds %struct.ObjectRen, ptr %2, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !148
  %10 = getelementptr inbounds %struct.DerivedMesh, ptr %0, i64 0, i32 31
  %11 = load ptr, ptr %10, align 8, !tbaa !540
  %12 = tail call ptr %11(ptr noundef %0) #16
  %13 = getelementptr inbounds %struct.DerivedMesh, ptr %0, i64 0, i32 23
  %14 = load ptr, ptr %13, align 8, !tbaa !541
  %15 = tail call i32 %14(ptr noundef %0) #16
  %16 = icmp sgt i32 %15, 0
  br i1 %16, label %17, label %42

17:                                               ; preds = %6
  %18 = getelementptr inbounds %struct.ObjectRen, ptr %2, i64 0, i32 10
  br label %19

19:                                               ; preds = %17, %37
  %20 = phi ptr [ %4, %17 ], [ %38, %37 ]
  %21 = phi i32 [ 0, %17 ], [ %39, %37 ]
  %22 = phi ptr [ %12, %17 ], [ %40, %37 ]
  %23 = load i32, ptr %18, align 8, !tbaa !177
  %24 = add nsw i32 %23, 1
  store i32 %24, ptr %18, align 8, !tbaa !177
  %25 = tail call ptr @RE_findOrAddVert(ptr noundef nonnull %2, i32 noundef %23) #16
  %26 = load float, ptr %22, align 4, !tbaa !13
  store float %26, ptr %25, align 4, !tbaa !13
  %27 = getelementptr inbounds float, ptr %22, i64 1
  %28 = load float, ptr %27, align 4, !tbaa !13
  %29 = getelementptr inbounds float, ptr %25, i64 1
  store float %28, ptr %29, align 4, !tbaa !13
  %30 = getelementptr inbounds float, ptr %22, i64 2
  %31 = load float, ptr %30, align 4, !tbaa !13
  %32 = getelementptr inbounds float, ptr %25, i64 2
  store float %31, ptr %32, align 4, !tbaa !13
  tail call void @mul_m4_v3(ptr noundef %5, ptr noundef nonnull %25) #16
  %33 = icmp eq ptr %20, null
  br i1 %33, label %37, label %34

34:                                               ; preds = %19
  %35 = getelementptr inbounds %struct.VertRen, ptr %25, i64 0, i32 2
  store ptr %20, ptr %35, align 8, !tbaa !496
  %36 = getelementptr inbounds float, ptr %20, i64 3
  br label %37

37:                                               ; preds = %19, %34
  %38 = phi ptr [ %36, %34 ], [ null, %19 ]
  %39 = add nuw nsw i32 %21, 1
  %40 = getelementptr inbounds %struct.MVert, ptr %22, i64 1
  %41 = icmp eq i32 %39, %15
  br i1 %41, label %42, label %19, !llvm.loop !647

42:                                               ; preds = %37, %6
  %43 = icmp eq i32 %3, 0
  br i1 %43, label %44, label %177

44:                                               ; preds = %42
  %45 = getelementptr inbounds %struct.DerivedMesh, ptr %0, i64 0, i32 2
  tail call void @RE_set_customdata_names(ptr noundef nonnull %2, ptr noundef nonnull %45) #16
  %46 = getelementptr inbounds %struct.ObjectRen, ptr %2, i64 0, i32 10
  %47 = load i32, ptr %46, align 8, !tbaa !177
  %48 = sub nsw i32 %47, %15
  %49 = getelementptr inbounds %struct.Object, ptr %9, i64 0, i32 31
  %50 = getelementptr inbounds %struct.DerivedMesh, ptr %0, i64 0, i32 25
  %51 = getelementptr inbounds %struct.DerivedMesh, ptr %0, i64 0, i32 33
  %52 = getelementptr inbounds %struct.ObjectRen, ptr %2, i64 0, i32 11
  %53 = getelementptr inbounds %struct.DerivedMesh, ptr %0, i64 0, i32 2, i32 2
  br label %55

54:                                               ; preds = %172, %64
  br label %55, !llvm.loop !648

55:                                               ; preds = %54, %44
  %56 = phi i16 [ 0, %44 ], [ %65, %54 ]
  %57 = sext i16 %56 to i32
  %58 = load i32, ptr %49, align 8, !tbaa !243
  %59 = icmp sgt i32 %58, %57
  br i1 %59, label %64, label %60

60:                                               ; preds = %55
  %61 = icmp eq i16 %56, 0
  %62 = icmp eq i32 %58, 0
  %63 = and i1 %61, %62
  br i1 %63, label %64, label %176

64:                                               ; preds = %60, %55
  %65 = add i16 %56, 1
  %66 = call fastcc ptr @give_render_material(ptr noundef %1, ptr noundef nonnull %9, i16 noundef signext %65)
  %67 = load ptr, ptr %50, align 8, !tbaa !419
  %68 = call i32 %67(ptr noundef %0) #16
  %69 = load ptr, ptr %51, align 8, !tbaa !551
  %70 = call ptr %69(ptr noundef %0) #16
  %71 = icmp sgt i32 %68, 0
  br i1 %71, label %72, label %54

72:                                               ; preds = %64
  %73 = zext i32 %68 to i64
  br label %74

74:                                               ; preds = %72, %172
  %75 = phi i64 [ 0, %72 ], [ %173, %172 ]
  %76 = phi ptr [ %70, %72 ], [ %174, %172 ]
  %77 = getelementptr inbounds %struct.MFace, ptr %76, i64 0, i32 4
  %78 = load i16, ptr %77, align 4, !tbaa !552
  %79 = icmp eq i16 %78, %56
  br i1 %79, label %80, label %172

80:                                               ; preds = %74
  %81 = load i32, ptr %76, align 4, !tbaa !560
  %82 = getelementptr inbounds %struct.MFace, ptr %76, i64 0, i32 1
  %83 = load i32, ptr %82, align 4, !tbaa !554
  %84 = getelementptr inbounds %struct.MFace, ptr %76, i64 0, i32 2
  %85 = load i32, ptr %84, align 4, !tbaa !559
  %86 = getelementptr inbounds %struct.MFace, ptr %76, i64 0, i32 3
  %87 = load i32, ptr %86, align 4, !tbaa !555
  %88 = getelementptr inbounds %struct.MFace, ptr %76, i64 0, i32 6
  %89 = load i8, ptr %88, align 1, !tbaa !556
  %90 = and i8 %89, 1
  %91 = load i32, ptr %52, align 4, !tbaa !499
  %92 = add nsw i32 %91, 1
  store i32 %92, ptr %52, align 4, !tbaa !499
  %93 = call ptr @RE_findOrAddVlak(ptr noundef %2, i32 noundef %91) #16
  %94 = add nsw i32 %81, %48
  %95 = call ptr @RE_findOrAddVert(ptr noundef %2, i32 noundef %94) #16
  store ptr %95, ptr %93, align 8, !tbaa !502
  %96 = add nsw i32 %83, %48
  %97 = call ptr @RE_findOrAddVert(ptr noundef %2, i32 noundef %96) #16
  %98 = getelementptr inbounds %struct.VlakRen, ptr %93, i64 0, i32 1
  store ptr %97, ptr %98, align 8, !tbaa !504
  %99 = add nsw i32 %85, %48
  %100 = call ptr @RE_findOrAddVert(ptr noundef %2, i32 noundef %99) #16
  %101 = getelementptr inbounds %struct.VlakRen, ptr %93, i64 0, i32 2
  store ptr %100, ptr %101, align 8, !tbaa !505
  %102 = icmp eq i32 %87, 0
  br i1 %102, label %103, label %105

103:                                              ; preds = %80
  %104 = getelementptr inbounds %struct.VlakRen, ptr %93, i64 0, i32 3
  store ptr null, ptr %104, align 8
  br label %116

105:                                              ; preds = %80
  %106 = add nsw i32 %87, %48
  %107 = call ptr @RE_findOrAddVert(ptr noundef nonnull %2, i32 noundef %106) #16
  %108 = getelementptr inbounds %struct.VlakRen, ptr %93, i64 0, i32 3
  store ptr %107, ptr %108, align 8
  %109 = icmp eq ptr %107, null
  br i1 %109, label %116, label %110

110:                                              ; preds = %105
  %111 = getelementptr inbounds %struct.VlakRen, ptr %93, i64 0, i32 4
  %112 = load ptr, ptr %101, align 8, !tbaa !505
  %113 = load ptr, ptr %98, align 8, !tbaa !504
  %114 = load ptr, ptr %93, align 8, !tbaa !502
  %115 = call fast nofpclass(nan inf) float @normal_quad_v3(ptr noundef nonnull %111, ptr noundef nonnull %107, ptr noundef %112, ptr noundef %113, ptr noundef %114) #16
  br label %122

116:                                              ; preds = %103, %105
  %117 = getelementptr inbounds %struct.VlakRen, ptr %93, i64 0, i32 4
  %118 = load ptr, ptr %101, align 8, !tbaa !505
  %119 = load ptr, ptr %98, align 8, !tbaa !504
  %120 = load ptr, ptr %93, align 8, !tbaa !502
  %121 = call fast nofpclass(nan inf) float @normal_tri_v3(ptr noundef nonnull %117, ptr noundef %118, ptr noundef %119, ptr noundef %120) #16
  br label %122

122:                                              ; preds = %116, %110
  %123 = phi float [ %115, %110 ], [ %121, %116 ]
  %124 = getelementptr inbounds %struct.VlakRen, ptr %93, i64 0, i32 5
  store ptr %66, ptr %124, align 8, !tbaa !507
  %125 = getelementptr inbounds %struct.VlakRen, ptr %93, i64 0, i32 7
  store i8 %90, ptr %125, align 1, !tbaa !508
  %126 = getelementptr inbounds %struct.VlakRen, ptr %93, i64 0, i32 8
  store i8 0, ptr %126, align 2, !tbaa !509
  %127 = fcmp fast oeq float %123, 0.000000e+00
  br i1 %127, label %128, label %131

128:                                              ; preds = %122
  %129 = load i32, ptr %52, align 4, !tbaa !499
  %130 = add nsw i32 %129, -1
  store i32 %130, ptr %52, align 4, !tbaa !499
  br label %172

131:                                              ; preds = %122
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %7) #16
  %132 = load i32, ptr %53, align 4, !tbaa !561
  %133 = icmp sgt i32 %132, 0
  br i1 %133, label %134, label %171

134:                                              ; preds = %131
  %135 = shl i64 %75, 2
  %136 = and i64 %135, 4294967292
  br label %137

137:                                              ; preds = %134, %164
  %138 = phi i64 [ 0, %134 ], [ %167, %164 ]
  %139 = phi i32 [ 0, %134 ], [ %166, %164 ]
  %140 = phi i32 [ 0, %134 ], [ %165, %164 ]
  %141 = load ptr, ptr %45, align 8, !tbaa !562
  %142 = getelementptr inbounds %struct.CustomDataLayer, ptr %141, i64 %138
  %143 = getelementptr inbounds %struct.CustomDataLayer, ptr %141, i64 %138, i32 8
  store ptr %143, ptr %7, align 8, !tbaa !16
  %144 = load i32, ptr %142, align 8, !tbaa !563
  %145 = icmp eq i32 %144, 5
  %146 = icmp slt i32 %140, 8
  %147 = select i1 %145, i1 %146, i1 false
  br i1 %147, label %148, label %154

148:                                              ; preds = %137
  %149 = add nsw i32 %140, 1
  %150 = call ptr @RE_vlakren_get_tface(ptr noundef %2, ptr noundef nonnull %93, i32 noundef %140, ptr noundef nonnull %7, i32 noundef 1) #16
  %151 = getelementptr inbounds %struct.CustomDataLayer, ptr %141, i64 %138, i32 9
  %152 = load ptr, ptr %151, align 8, !tbaa !565
  %153 = getelementptr inbounds %struct.MTFace, ptr %152, i64 %75
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %150, ptr noundef nonnull align 8 dereferenceable(48) %153, i64 48, i1 false), !tbaa.struct !566
  br label %164

154:                                              ; preds = %137
  %155 = icmp eq i32 %144, 6
  %156 = icmp slt i32 %139, 8
  %157 = select i1 %155, i1 %156, i1 false
  br i1 %157, label %158, label %164

158:                                              ; preds = %154
  %159 = add nsw i32 %139, 1
  %160 = call ptr @RE_vlakren_get_mcol(ptr noundef %2, ptr noundef nonnull %93, i32 noundef %139, ptr noundef nonnull %7, i32 noundef 1) #16
  %161 = getelementptr inbounds %struct.CustomDataLayer, ptr %141, i64 %138, i32 9
  %162 = load ptr, ptr %161, align 8, !tbaa !565
  %163 = getelementptr inbounds %struct.MCol, ptr %162, i64 %136
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(16) %160, ptr noundef nonnull align 1 dereferenceable(16) %163, i64 16, i1 false)
  br label %164

164:                                              ; preds = %148, %158, %154
  %165 = phi i32 [ %149, %148 ], [ %140, %158 ], [ %140, %154 ]
  %166 = phi i32 [ %139, %148 ], [ %159, %158 ], [ %139, %154 ]
  %167 = add nuw nsw i64 %138, 1
  %168 = load i32, ptr %53, align 4, !tbaa !561
  %169 = sext i32 %168 to i64
  %170 = icmp slt i64 %167, %169
  br i1 %170, label %137, label %171, !llvm.loop !649

171:                                              ; preds = %164, %131
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7) #16
  br label %172

172:                                              ; preds = %128, %171, %74
  %173 = add nuw nsw i64 %75, 1
  %174 = getelementptr inbounds %struct.MFace, ptr %76, i64 1
  %175 = icmp eq i64 %173, %73
  br i1 %175, label %54, label %74, !llvm.loop !650

176:                                              ; preds = %60
  call fastcc void @calc_vertexnormals(ptr noundef %2, i8 noundef zeroext 1, i8 noundef zeroext 0, i8 noundef zeroext 0)
  br label %177

177:                                              ; preds = %176, %42
  ret void
}

declare ptr @BKE_curve_make_orco(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

declare nofpclass(nan inf) float @area_tri_v3(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

declare nofpclass(nan inf) float @normal_tri_v3(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc i32 @dl_surf_to_renderdata(ptr noundef %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readonly %2, ptr noundef %3, ptr noundef %4) unnamed_addr #3 {
  %6 = alloca [3 x float], align 8
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %6) #16
  %7 = getelementptr inbounds %struct.ObjectRen, ptr %0, i64 0, i32 10
  %8 = load i32, ptr %7, align 8, !tbaa !177
  %9 = getelementptr inbounds %struct.DispList, ptr %1, i64 0, i32 4
  %10 = load i32, ptr %9, align 4, !tbaa !500
  %11 = getelementptr inbounds %struct.DispList, ptr %1, i64 0, i32 5
  %12 = load i32, ptr %11, align 8, !tbaa !494
  %13 = icmp sgt i32 %10, 0
  br i1 %13, label %14, label %96

14:                                               ; preds = %5
  %15 = getelementptr inbounds %struct.DispList, ptr %1, i64 0, i32 8
  %16 = load ptr, ptr %15, align 8, !tbaa !495
  %17 = icmp sgt i32 %12, 1
  %18 = getelementptr inbounds %struct.DispList, ptr %1, i64 0, i32 3
  br label %19

19:                                               ; preds = %14, %91
  %20 = phi ptr [ %3, %14 ], [ %93, %91 ]
  %21 = phi i32 [ 0, %14 ], [ %92, %91 ]
  %22 = phi i32 [ 0, %14 ], [ %94, %91 ]
  %23 = phi ptr [ %16, %14 ], [ %73, %91 ]
  %24 = load i32, ptr %7, align 8, !tbaa !177
  %25 = add nsw i32 %24, 1
  store i32 %25, ptr %7, align 8, !tbaa !177
  %26 = tail call ptr @RE_findOrAddVert(ptr noundef nonnull %0, i32 noundef %24) #16
  %27 = load float, ptr %23, align 4, !tbaa !13
  store float %27, ptr %26, align 4, !tbaa !13
  %28 = getelementptr inbounds float, ptr %23, i64 1
  %29 = load float, ptr %28, align 4, !tbaa !13
  %30 = getelementptr inbounds float, ptr %26, i64 1
  store float %29, ptr %30, align 4, !tbaa !13
  %31 = getelementptr inbounds float, ptr %23, i64 2
  %32 = load float, ptr %31, align 4, !tbaa !13
  %33 = getelementptr inbounds float, ptr %26, i64 2
  store float %32, ptr %33, align 4, !tbaa !13
  %34 = icmp eq ptr %20, null
  br i1 %34, label %39, label %35

35:                                               ; preds = %19
  %36 = getelementptr inbounds %struct.VertRen, ptr %26, i64 0, i32 2
  store ptr %20, ptr %36, align 8, !tbaa !496
  %37 = getelementptr inbounds float, ptr %20, i64 3
  %38 = add nsw i32 %21, 1
  br label %39

39:                                               ; preds = %35, %19
  %40 = phi i32 [ %38, %35 ], [ %21, %19 ]
  %41 = phi ptr [ %37, %35 ], [ null, %19 ]
  tail call void @mul_m4_v3(ptr noundef %4, ptr noundef nonnull %26) #16
  %42 = getelementptr inbounds float, ptr %23, i64 3
  br i1 %17, label %43, label %70

43:                                               ; preds = %39, %64
  %44 = phi ptr [ %68, %64 ], [ %42, %39 ]
  %45 = phi ptr [ %66, %64 ], [ %41, %39 ]
  %46 = phi i32 [ %65, %64 ], [ %40, %39 ]
  %47 = phi i32 [ %67, %64 ], [ 1, %39 ]
  %48 = phi ptr [ %44, %64 ], [ %23, %39 ]
  %49 = load i32, ptr %7, align 8, !tbaa !177
  %50 = add nsw i32 %49, 1
  store i32 %50, ptr %7, align 8, !tbaa !177
  %51 = tail call ptr @RE_findOrAddVert(ptr noundef nonnull %0, i32 noundef %49) #16
  %52 = load float, ptr %44, align 4, !tbaa !13
  store float %52, ptr %51, align 4, !tbaa !13
  %53 = getelementptr inbounds float, ptr %48, i64 4
  %54 = load float, ptr %53, align 4, !tbaa !13
  %55 = getelementptr inbounds float, ptr %51, i64 1
  store float %54, ptr %55, align 4, !tbaa !13
  %56 = getelementptr inbounds float, ptr %48, i64 5
  %57 = load float, ptr %56, align 4, !tbaa !13
  %58 = getelementptr inbounds float, ptr %51, i64 2
  store float %57, ptr %58, align 4, !tbaa !13
  %59 = icmp eq ptr %45, null
  br i1 %59, label %64, label %60

60:                                               ; preds = %43
  %61 = getelementptr inbounds %struct.VertRen, ptr %51, i64 0, i32 2
  store ptr %45, ptr %61, align 8, !tbaa !496
  %62 = getelementptr inbounds float, ptr %45, i64 3
  %63 = add nsw i32 %46, 1
  br label %64

64:                                               ; preds = %60, %43
  %65 = phi i32 [ %63, %60 ], [ %46, %43 ]
  %66 = phi ptr [ %62, %60 ], [ null, %43 ]
  tail call void @mul_m4_v3(ptr noundef %4, ptr noundef nonnull %51) #16
  %67 = add nuw nsw i32 %47, 1
  %68 = getelementptr inbounds float, ptr %44, i64 3
  %69 = icmp eq i32 %67, %12
  br i1 %69, label %70, label %43, !llvm.loop !651

70:                                               ; preds = %64, %39
  %71 = phi i32 [ %40, %39 ], [ %65, %64 ]
  %72 = phi ptr [ %41, %39 ], [ %66, %64 ]
  %73 = phi ptr [ %42, %39 ], [ %68, %64 ]
  %74 = load i16, ptr %18, align 2, !tbaa !513
  %75 = and i16 %74, 1
  %76 = icmp eq i16 %75, 0
  br i1 %76, label %91, label %77

77:                                               ; preds = %70
  %78 = load i32, ptr %7, align 8, !tbaa !177
  %79 = add nsw i32 %78, 1
  store i32 %79, ptr %7, align 8, !tbaa !177
  %80 = tail call ptr @RE_findOrAddVert(ptr noundef nonnull %0, i32 noundef %78) #16
  %81 = load float, ptr %26, align 4, !tbaa !13
  store float %81, ptr %80, align 4, !tbaa !13
  %82 = load float, ptr %30, align 4, !tbaa !13
  %83 = getelementptr inbounds float, ptr %80, i64 1
  store float %82, ptr %83, align 4, !tbaa !13
  %84 = load float, ptr %33, align 4, !tbaa !13
  %85 = getelementptr inbounds float, ptr %80, i64 2
  store float %84, ptr %85, align 4, !tbaa !13
  %86 = icmp eq ptr %72, null
  br i1 %86, label %91, label %87

87:                                               ; preds = %77
  %88 = getelementptr inbounds %struct.VertRen, ptr %80, i64 0, i32 2
  store ptr %72, ptr %88, align 8, !tbaa !496
  %89 = getelementptr inbounds float, ptr %72, i64 3
  %90 = add nsw i32 %71, 1
  br label %91

91:                                               ; preds = %70, %87, %77
  %92 = phi i32 [ %90, %87 ], [ %71, %77 ], [ %71, %70 ]
  %93 = phi ptr [ %89, %87 ], [ null, %77 ], [ %72, %70 ]
  %94 = add nuw nsw i32 %22, 1
  %95 = icmp eq i32 %94, %10
  br i1 %95, label %96, label %19, !llvm.loop !652

96:                                               ; preds = %91, %5
  %97 = phi i32 [ 0, %5 ], [ %92, %91 ]
  %98 = phi ptr [ %3, %5 ], [ %93, %91 ]
  %99 = getelementptr inbounds %struct.DispList, ptr %1, i64 0, i32 3
  %100 = load i16, ptr %99, align 2, !tbaa !513
  %101 = and i16 %100, 1
  %102 = zext i16 %101 to i32
  %103 = add i32 %12, %102
  %104 = and i16 %100, 2
  %105 = icmp ne i16 %104, 0
  %106 = lshr exact i16 %104, 1
  %107 = zext i16 %106 to i32
  %108 = add nsw i32 %10, %107
  %109 = icmp sgt i32 %103, 0
  %110 = select i1 %105, i1 %109, i1 false
  br i1 %110, label %111, label %137

111:                                              ; preds = %96, %132
  %112 = phi ptr [ %134, %132 ], [ %98, %96 ]
  %113 = phi i32 [ %133, %132 ], [ %97, %96 ]
  %114 = phi i32 [ %135, %132 ], [ 0, %96 ]
  %115 = add nsw i32 %114, %8
  %116 = tail call ptr @RE_findOrAddVert(ptr noundef nonnull %0, i32 noundef %115) #16
  %117 = load i32, ptr %7, align 8, !tbaa !177
  %118 = add nsw i32 %117, 1
  store i32 %118, ptr %7, align 8, !tbaa !177
  %119 = tail call ptr @RE_findOrAddVert(ptr noundef nonnull %0, i32 noundef %117) #16
  %120 = load float, ptr %116, align 4, !tbaa !13
  store float %120, ptr %119, align 4, !tbaa !13
  %121 = getelementptr inbounds float, ptr %116, i64 1
  %122 = load float, ptr %121, align 4, !tbaa !13
  %123 = getelementptr inbounds float, ptr %119, i64 1
  store float %122, ptr %123, align 4, !tbaa !13
  %124 = getelementptr inbounds float, ptr %116, i64 2
  %125 = load float, ptr %124, align 4, !tbaa !13
  %126 = getelementptr inbounds float, ptr %119, i64 2
  store float %125, ptr %126, align 4, !tbaa !13
  %127 = icmp eq ptr %112, null
  br i1 %127, label %132, label %128

128:                                              ; preds = %111
  %129 = getelementptr inbounds %struct.VertRen, ptr %119, i64 0, i32 2
  store ptr %112, ptr %129, align 8, !tbaa !496
  %130 = getelementptr inbounds float, ptr %112, i64 3
  %131 = add nsw i32 %113, 1
  br label %132

132:                                              ; preds = %111, %128
  %133 = phi i32 [ %131, %128 ], [ %113, %111 ]
  %134 = phi ptr [ %130, %128 ], [ null, %111 ]
  %135 = add nuw nsw i32 %114, 1
  %136 = icmp eq i32 %135, %103
  br i1 %136, label %137, label %111, !llvm.loop !653

137:                                              ; preds = %132, %96
  %138 = phi i32 [ %97, %96 ], [ %133, %132 ]
  %139 = getelementptr inbounds %struct.ObjectRen, ptr %0, i64 0, i32 11
  %140 = load i32, ptr %139, align 4, !tbaa !499
  %141 = add i32 %108, -1
  %142 = icmp sgt i32 %108, 1
  %143 = add i32 %103, -1
  br i1 %142, label %144, label %219

144:                                              ; preds = %137
  %145 = icmp sgt i32 %103, 1
  %146 = getelementptr inbounds float, ptr %6, i64 2
  %147 = getelementptr inbounds %struct.DispList, ptr %1, i64 0, i32 6
  %148 = getelementptr inbounds %struct.DispList, ptr %1, i64 0, i32 7
  br i1 %145, label %149, label %299

149:                                              ; preds = %144, %216
  %150 = phi i32 [ %217, %216 ], [ 0, %144 ]
  %151 = mul nsw i32 %150, %103
  %152 = add nsw i32 %151, %8
  %153 = add nsw i32 %152, 1
  %154 = add nsw i32 %153, %103
  %155 = add i32 %152, %103
  br label %156

156:                                              ; preds = %149, %156
  %157 = phi i32 [ %155, %149 ], [ %213, %156 ]
  %158 = phi i32 [ %154, %149 ], [ %212, %156 ]
  %159 = phi i32 [ %153, %149 ], [ %211, %156 ]
  %160 = phi i32 [ %152, %149 ], [ %210, %156 ]
  %161 = phi i32 [ 0, %149 ], [ %214, %156 ]
  %162 = call ptr @RE_findOrAddVert(ptr noundef nonnull %0, i32 noundef %160) #16
  %163 = call ptr @RE_findOrAddVert(ptr noundef nonnull %0, i32 noundef %159) #16
  %164 = call ptr @RE_findOrAddVert(ptr noundef nonnull %0, i32 noundef %158) #16
  %165 = call ptr @RE_findOrAddVert(ptr noundef nonnull %0, i32 noundef %157) #16
  %166 = load i32, ptr %139, align 4, !tbaa !499
  %167 = add nsw i32 %166, 1
  store i32 %167, ptr %139, align 4, !tbaa !499
  %168 = call ptr @RE_findOrAddVlak(ptr noundef nonnull %0, i32 noundef %166) #16
  store ptr %162, ptr %168, align 8, !tbaa !502
  %169 = getelementptr inbounds %struct.VlakRen, ptr %168, i64 0, i32 1
  store ptr %163, ptr %169, align 8, !tbaa !504
  %170 = getelementptr inbounds %struct.VlakRen, ptr %168, i64 0, i32 2
  store ptr %164, ptr %170, align 8, !tbaa !505
  %171 = getelementptr inbounds %struct.VlakRen, ptr %168, i64 0, i32 3
  store ptr %165, ptr %171, align 8, !tbaa !506
  %172 = call fast nofpclass(nan inf) float @normal_quad_v3(ptr noundef nonnull %6, ptr noundef %165, ptr noundef %164, ptr noundef %163, ptr noundef %162) #16
  %173 = getelementptr inbounds %struct.VlakRen, ptr %168, i64 0, i32 4
  %174 = load <2 x float>, ptr %6, align 8, !tbaa !13
  store <2 x float> %174, ptr %173, align 4, !tbaa !13
  %175 = load float, ptr %146, align 8, !tbaa !13
  %176 = getelementptr inbounds %struct.VlakRen, ptr %168, i64 0, i32 4, i64 2
  store float %175, ptr %176, align 4, !tbaa !13
  %177 = load i16, ptr %147, align 4, !tbaa !491
  %178 = sext i16 %177 to i64
  %179 = getelementptr inbounds ptr, ptr %2, i64 %178
  %180 = load ptr, ptr %179, align 8, !tbaa !16
  %181 = getelementptr inbounds %struct.VlakRen, ptr %168, i64 0, i32 5
  store ptr %180, ptr %181, align 8, !tbaa !507
  %182 = getelementptr inbounds %struct.VlakRen, ptr %168, i64 0, i32 8
  store i8 3, ptr %182, align 2, !tbaa !509
  %183 = load i16, ptr %148, align 2, !tbaa !517
  %184 = trunc i16 %183 to i8
  %185 = getelementptr inbounds %struct.VlakRen, ptr %168, i64 0, i32 7
  store i8 %184, ptr %185, align 1, !tbaa !508
  %186 = getelementptr inbounds %struct.VertRen, ptr %162, i64 0, i32 1
  %187 = load <2 x float>, ptr %186, align 4, !tbaa !13
  %188 = fadd fast <2 x float> %187, %174
  store <2 x float> %188, ptr %186, align 4, !tbaa !13
  %189 = getelementptr inbounds %struct.VertRen, ptr %162, i64 0, i32 1, i64 2
  %190 = load float, ptr %189, align 4, !tbaa !13
  %191 = fadd fast float %190, %175
  store float %191, ptr %189, align 4, !tbaa !13
  %192 = getelementptr inbounds %struct.VertRen, ptr %163, i64 0, i32 1
  %193 = load <2 x float>, ptr %192, align 4, !tbaa !13
  %194 = fadd fast <2 x float> %193, %174
  store <2 x float> %194, ptr %192, align 4, !tbaa !13
  %195 = getelementptr inbounds %struct.VertRen, ptr %163, i64 0, i32 1, i64 2
  %196 = load float, ptr %195, align 4, !tbaa !13
  %197 = fadd fast float %196, %175
  store float %197, ptr %195, align 4, !tbaa !13
  %198 = getelementptr inbounds %struct.VertRen, ptr %164, i64 0, i32 1
  %199 = load <2 x float>, ptr %198, align 4, !tbaa !13
  %200 = fadd fast <2 x float> %199, %174
  store <2 x float> %200, ptr %198, align 4, !tbaa !13
  %201 = getelementptr inbounds %struct.VertRen, ptr %164, i64 0, i32 1, i64 2
  %202 = load float, ptr %201, align 4, !tbaa !13
  %203 = fadd fast float %202, %175
  store float %203, ptr %201, align 4, !tbaa !13
  %204 = getelementptr inbounds %struct.VertRen, ptr %165, i64 0, i32 1
  %205 = load <2 x float>, ptr %204, align 4, !tbaa !13
  %206 = fadd fast <2 x float> %205, %174
  store <2 x float> %206, ptr %204, align 4, !tbaa !13
  %207 = getelementptr inbounds %struct.VertRen, ptr %165, i64 0, i32 1, i64 2
  %208 = load float, ptr %207, align 4, !tbaa !13
  %209 = fadd fast float %208, %175
  store float %209, ptr %207, align 4, !tbaa !13
  %210 = add nsw i32 %160, 1
  %211 = add nsw i32 %159, 1
  %212 = add nsw i32 %158, 1
  %213 = add nsw i32 %157, 1
  %214 = add nuw nsw i32 %161, 1
  %215 = icmp eq i32 %214, %143
  br i1 %215, label %216, label %156, !llvm.loop !654

216:                                              ; preds = %156
  %217 = add nuw nsw i32 %150, 1
  %218 = icmp eq i32 %217, %141
  br i1 %218, label %219, label %149, !llvm.loop !655

219:                                              ; preds = %216, %137
  %220 = load i16, ptr %99, align 2, !tbaa !513
  %221 = and i16 %220, 2
  %222 = icmp ne i16 %221, 0
  %223 = icmp sgt i32 %103, 1
  %224 = select i1 %222, i1 %223, i1 false
  br i1 %224, label %225, label %301

225:                                              ; preds = %219
  %226 = add nsw i32 %108, -2
  %227 = mul nsw i32 %226, %143
  %228 = add nsw i32 %140, %227
  %229 = call i32 @llvm.smax.i32(i32 %143, i32 1)
  br label %230

230:                                              ; preds = %225, %230
  %231 = phi i32 [ 0, %225 ], [ %297, %230 ]
  %232 = add nsw i32 %228, %231
  %233 = call ptr @RE_findOrAddVlak(ptr noundef %0, i32 noundef %232) #16
  %234 = add nsw i32 %231, %140
  %235 = call ptr @RE_findOrAddVlak(ptr noundef %0, i32 noundef %234) #16
  %236 = load ptr, ptr %235, align 8, !tbaa !502
  %237 = getelementptr inbounds %struct.VertRen, ptr %236, i64 0, i32 1
  %238 = getelementptr inbounds %struct.VlakRen, ptr %233, i64 0, i32 4
  %239 = load float, ptr %238, align 4, !tbaa !13
  %240 = load float, ptr %237, align 4, !tbaa !13
  %241 = fadd fast float %240, %239
  store float %241, ptr %237, align 4, !tbaa !13
  %242 = getelementptr inbounds %struct.VlakRen, ptr %233, i64 0, i32 4, i64 1
  %243 = load float, ptr %242, align 4, !tbaa !13
  %244 = getelementptr inbounds %struct.VertRen, ptr %236, i64 0, i32 1, i64 1
  %245 = load float, ptr %244, align 4, !tbaa !13
  %246 = fadd fast float %245, %243
  store float %246, ptr %244, align 4, !tbaa !13
  %247 = getelementptr inbounds %struct.VlakRen, ptr %233, i64 0, i32 4, i64 2
  %248 = load float, ptr %247, align 4, !tbaa !13
  %249 = getelementptr inbounds %struct.VertRen, ptr %236, i64 0, i32 1, i64 2
  %250 = load float, ptr %249, align 4, !tbaa !13
  %251 = fadd fast float %250, %248
  store float %251, ptr %249, align 4, !tbaa !13
  %252 = getelementptr inbounds %struct.VlakRen, ptr %235, i64 0, i32 1
  %253 = load ptr, ptr %252, align 8, !tbaa !504
  %254 = getelementptr inbounds %struct.VertRen, ptr %253, i64 0, i32 1
  %255 = load float, ptr %238, align 4, !tbaa !13
  %256 = load float, ptr %254, align 4, !tbaa !13
  %257 = fadd fast float %256, %255
  store float %257, ptr %254, align 4, !tbaa !13
  %258 = load float, ptr %242, align 4, !tbaa !13
  %259 = getelementptr inbounds %struct.VertRen, ptr %253, i64 0, i32 1, i64 1
  %260 = load float, ptr %259, align 4, !tbaa !13
  %261 = fadd fast float %260, %258
  store float %261, ptr %259, align 4, !tbaa !13
  %262 = load float, ptr %247, align 4, !tbaa !13
  %263 = getelementptr inbounds %struct.VertRen, ptr %253, i64 0, i32 1, i64 2
  %264 = load float, ptr %263, align 4, !tbaa !13
  %265 = fadd fast float %264, %262
  store float %265, ptr %263, align 4, !tbaa !13
  %266 = getelementptr inbounds %struct.VlakRen, ptr %233, i64 0, i32 2
  %267 = load ptr, ptr %266, align 8, !tbaa !505
  %268 = getelementptr inbounds %struct.VertRen, ptr %267, i64 0, i32 1
  %269 = getelementptr inbounds %struct.VlakRen, ptr %235, i64 0, i32 4
  %270 = load float, ptr %269, align 4, !tbaa !13
  %271 = load float, ptr %268, align 4, !tbaa !13
  %272 = fadd fast float %271, %270
  store float %272, ptr %268, align 4, !tbaa !13
  %273 = getelementptr inbounds %struct.VlakRen, ptr %235, i64 0, i32 4, i64 1
  %274 = load float, ptr %273, align 4, !tbaa !13
  %275 = getelementptr inbounds %struct.VertRen, ptr %267, i64 0, i32 1, i64 1
  %276 = load float, ptr %275, align 4, !tbaa !13
  %277 = fadd fast float %276, %274
  store float %277, ptr %275, align 4, !tbaa !13
  %278 = getelementptr inbounds %struct.VlakRen, ptr %235, i64 0, i32 4, i64 2
  %279 = load float, ptr %278, align 4, !tbaa !13
  %280 = getelementptr inbounds %struct.VertRen, ptr %267, i64 0, i32 1, i64 2
  %281 = load float, ptr %280, align 4, !tbaa !13
  %282 = fadd fast float %281, %279
  store float %282, ptr %280, align 4, !tbaa !13
  %283 = getelementptr inbounds %struct.VlakRen, ptr %233, i64 0, i32 3
  %284 = load ptr, ptr %283, align 8, !tbaa !506
  %285 = getelementptr inbounds %struct.VertRen, ptr %284, i64 0, i32 1
  %286 = load float, ptr %269, align 4, !tbaa !13
  %287 = load float, ptr %285, align 4, !tbaa !13
  %288 = fadd fast float %287, %286
  store float %288, ptr %285, align 4, !tbaa !13
  %289 = load float, ptr %273, align 4, !tbaa !13
  %290 = getelementptr inbounds %struct.VertRen, ptr %284, i64 0, i32 1, i64 1
  %291 = load float, ptr %290, align 4, !tbaa !13
  %292 = fadd fast float %291, %289
  store float %292, ptr %290, align 4, !tbaa !13
  %293 = load float, ptr %278, align 4, !tbaa !13
  %294 = getelementptr inbounds %struct.VertRen, ptr %284, i64 0, i32 1, i64 2
  %295 = load float, ptr %294, align 4, !tbaa !13
  %296 = fadd fast float %295, %293
  store float %296, ptr %294, align 4, !tbaa !13
  %297 = add nuw nsw i32 %231, 1
  %298 = icmp eq i32 %297, %229
  br i1 %298, label %299, label %230, !llvm.loop !656

299:                                              ; preds = %230, %144
  %300 = load i16, ptr %99, align 2, !tbaa !513
  br label %301

301:                                              ; preds = %299, %219
  %302 = phi i16 [ %220, %219 ], [ %300, %299 ]
  %303 = and i16 %302, 1
  %304 = icmp ne i16 %303, 0
  %305 = and i1 %304, %142
  br i1 %305, label %306, label %380

306:                                              ; preds = %301
  %307 = add nsw i32 %103, -2
  br label %308

308:                                              ; preds = %306, %308
  %309 = phi i32 [ 0, %306 ], [ %376, %308 ]
  %310 = mul nsw i32 %309, %143
  %311 = add nsw i32 %310, %140
  %312 = call ptr @RE_findOrAddVlak(ptr noundef %0, i32 noundef %311) #16
  %313 = add nsw i32 %307, %311
  %314 = call ptr @RE_findOrAddVlak(ptr noundef %0, i32 noundef %313) #16
  %315 = getelementptr inbounds %struct.VlakRen, ptr %314, i64 0, i32 1
  %316 = load ptr, ptr %315, align 8, !tbaa !504
  %317 = getelementptr inbounds %struct.VertRen, ptr %316, i64 0, i32 1
  %318 = getelementptr inbounds %struct.VlakRen, ptr %312, i64 0, i32 4
  %319 = load float, ptr %318, align 4, !tbaa !13
  %320 = load float, ptr %317, align 4, !tbaa !13
  %321 = fadd fast float %320, %319
  store float %321, ptr %317, align 4, !tbaa !13
  %322 = getelementptr inbounds %struct.VlakRen, ptr %312, i64 0, i32 4, i64 1
  %323 = load float, ptr %322, align 4, !tbaa !13
  %324 = getelementptr inbounds %struct.VertRen, ptr %316, i64 0, i32 1, i64 1
  %325 = load float, ptr %324, align 4, !tbaa !13
  %326 = fadd fast float %325, %323
  store float %326, ptr %324, align 4, !tbaa !13
  %327 = getelementptr inbounds %struct.VlakRen, ptr %312, i64 0, i32 4, i64 2
  %328 = load float, ptr %327, align 4, !tbaa !13
  %329 = getelementptr inbounds %struct.VertRen, ptr %316, i64 0, i32 1, i64 2
  %330 = load float, ptr %329, align 4, !tbaa !13
  %331 = fadd fast float %330, %328
  store float %331, ptr %329, align 4, !tbaa !13
  %332 = getelementptr inbounds %struct.VlakRen, ptr %314, i64 0, i32 2
  %333 = load ptr, ptr %332, align 8, !tbaa !505
  %334 = getelementptr inbounds %struct.VertRen, ptr %333, i64 0, i32 1
  %335 = load float, ptr %318, align 4, !tbaa !13
  %336 = load float, ptr %334, align 4, !tbaa !13
  %337 = fadd fast float %336, %335
  store float %337, ptr %334, align 4, !tbaa !13
  %338 = load float, ptr %322, align 4, !tbaa !13
  %339 = getelementptr inbounds %struct.VertRen, ptr %333, i64 0, i32 1, i64 1
  %340 = load float, ptr %339, align 4, !tbaa !13
  %341 = fadd fast float %340, %338
  store float %341, ptr %339, align 4, !tbaa !13
  %342 = load float, ptr %327, align 4, !tbaa !13
  %343 = getelementptr inbounds %struct.VertRen, ptr %333, i64 0, i32 1, i64 2
  %344 = load float, ptr %343, align 4, !tbaa !13
  %345 = fadd fast float %344, %342
  store float %345, ptr %343, align 4, !tbaa !13
  %346 = load ptr, ptr %312, align 8, !tbaa !502
  %347 = getelementptr inbounds %struct.VertRen, ptr %346, i64 0, i32 1
  %348 = getelementptr inbounds %struct.VlakRen, ptr %314, i64 0, i32 4
  %349 = load float, ptr %348, align 4, !tbaa !13
  %350 = load float, ptr %347, align 4, !tbaa !13
  %351 = fadd fast float %350, %349
  store float %351, ptr %347, align 4, !tbaa !13
  %352 = getelementptr inbounds %struct.VlakRen, ptr %314, i64 0, i32 4, i64 1
  %353 = load float, ptr %352, align 4, !tbaa !13
  %354 = getelementptr inbounds %struct.VertRen, ptr %346, i64 0, i32 1, i64 1
  %355 = load float, ptr %354, align 4, !tbaa !13
  %356 = fadd fast float %355, %353
  store float %356, ptr %354, align 4, !tbaa !13
  %357 = getelementptr inbounds %struct.VlakRen, ptr %314, i64 0, i32 4, i64 2
  %358 = load float, ptr %357, align 4, !tbaa !13
  %359 = getelementptr inbounds %struct.VertRen, ptr %346, i64 0, i32 1, i64 2
  %360 = load float, ptr %359, align 4, !tbaa !13
  %361 = fadd fast float %360, %358
  store float %361, ptr %359, align 4, !tbaa !13
  %362 = getelementptr inbounds %struct.VlakRen, ptr %312, i64 0, i32 3
  %363 = load ptr, ptr %362, align 8, !tbaa !506
  %364 = getelementptr inbounds %struct.VertRen, ptr %363, i64 0, i32 1
  %365 = load float, ptr %348, align 4, !tbaa !13
  %366 = load float, ptr %364, align 4, !tbaa !13
  %367 = fadd fast float %366, %365
  store float %367, ptr %364, align 4, !tbaa !13
  %368 = load float, ptr %352, align 4, !tbaa !13
  %369 = getelementptr inbounds %struct.VertRen, ptr %363, i64 0, i32 1, i64 1
  %370 = load float, ptr %369, align 4, !tbaa !13
  %371 = fadd fast float %370, %368
  store float %371, ptr %369, align 4, !tbaa !13
  %372 = load float, ptr %357, align 4, !tbaa !13
  %373 = getelementptr inbounds %struct.VertRen, ptr %363, i64 0, i32 1, i64 2
  %374 = load float, ptr %373, align 4, !tbaa !13
  %375 = fadd fast float %374, %372
  store float %375, ptr %373, align 4, !tbaa !13
  %376 = add nuw nsw i32 %309, 1
  %377 = icmp eq i32 %376, %141
  br i1 %377, label %378, label %308, !llvm.loop !657

378:                                              ; preds = %308
  %379 = load i16, ptr %99, align 2, !tbaa !513
  br label %380

380:                                              ; preds = %378, %301
  %381 = phi i16 [ %379, %378 ], [ %302, %301 ]
  %382 = and i16 %381, 3
  %383 = icmp eq i16 %382, 3
  br i1 %383, label %384, label %437

384:                                              ; preds = %380
  %385 = add nsw i32 %108, -2
  %386 = mul nsw i32 %385, %143
  %387 = add nsw i32 %140, %386
  %388 = add nsw i32 %103, -2
  %389 = add nsw i32 %387, %388
  %390 = call ptr @RE_findOrAddVlak(ptr noundef %0, i32 noundef %389) #16
  %391 = call ptr @RE_findOrAddVlak(ptr noundef %0, i32 noundef %140) #16
  %392 = getelementptr inbounds %struct.VlakRen, ptr %390, i64 0, i32 4
  %393 = getelementptr inbounds %struct.VlakRen, ptr %391, i64 0, i32 4
  %394 = load <2 x float>, ptr %392, align 4, !tbaa !13
  %395 = load <2 x float>, ptr %393, align 4, !tbaa !13
  %396 = fadd fast <2 x float> %395, %394
  store <2 x float> %396, ptr %6, align 8, !tbaa !13
  %397 = getelementptr inbounds %struct.VlakRen, ptr %390, i64 0, i32 4, i64 2
  %398 = load float, ptr %397, align 4, !tbaa !13
  %399 = getelementptr inbounds %struct.VlakRen, ptr %391, i64 0, i32 4, i64 2
  %400 = load float, ptr %399, align 4, !tbaa !13
  %401 = fadd fast float %400, %398
  %402 = getelementptr inbounds float, ptr %6, i64 2
  store float %401, ptr %402, align 8, !tbaa !13
  %403 = add nsw i32 %140, %388
  %404 = call ptr @RE_findOrAddVlak(ptr noundef %0, i32 noundef %403) #16
  %405 = getelementptr inbounds %struct.VlakRen, ptr %404, i64 0, i32 4
  %406 = load <2 x float>, ptr %405, align 4, !tbaa !13
  %407 = load <2 x float>, ptr %6, align 8, !tbaa !13
  %408 = fadd fast <2 x float> %407, %406
  store <2 x float> %408, ptr %6, align 8, !tbaa !13
  %409 = getelementptr inbounds %struct.VlakRen, ptr %404, i64 0, i32 4, i64 2
  %410 = load float, ptr %409, align 4, !tbaa !13
  %411 = load float, ptr %402, align 8, !tbaa !13
  %412 = fadd fast float %411, %410
  store float %412, ptr %402, align 8, !tbaa !13
  %413 = call ptr @RE_findOrAddVlak(ptr noundef %0, i32 noundef %387) #16
  %414 = getelementptr inbounds %struct.VlakRen, ptr %413, i64 0, i32 4
  %415 = load <2 x float>, ptr %414, align 4, !tbaa !13
  %416 = load <2 x float>, ptr %6, align 8, !tbaa !13
  %417 = fadd fast <2 x float> %416, %415
  store <2 x float> %417, ptr %6, align 8, !tbaa !13
  %418 = getelementptr inbounds %struct.VlakRen, ptr %413, i64 0, i32 4, i64 2
  %419 = load float, ptr %418, align 4, !tbaa !13
  %420 = load float, ptr %402, align 8, !tbaa !13
  %421 = fadd fast float %420, %419
  store float %421, ptr %402, align 8, !tbaa !13
  %422 = getelementptr inbounds %struct.VlakRen, ptr %390, i64 0, i32 2
  %423 = load ptr, ptr %422, align 8, !tbaa !505
  %424 = getelementptr inbounds %struct.VertRen, ptr %423, i64 0, i32 1
  store <2 x float> %417, ptr %424, align 4, !tbaa !13
  %425 = getelementptr inbounds %struct.VertRen, ptr %423, i64 0, i32 1, i64 2
  store float %421, ptr %425, align 4, !tbaa !13
  %426 = load ptr, ptr %391, align 8, !tbaa !502
  %427 = getelementptr inbounds %struct.VertRen, ptr %426, i64 0, i32 1
  store <2 x float> %417, ptr %427, align 4, !tbaa !13
  %428 = getelementptr inbounds %struct.VertRen, ptr %426, i64 0, i32 1, i64 2
  store float %421, ptr %428, align 4, !tbaa !13
  %429 = getelementptr inbounds %struct.VlakRen, ptr %404, i64 0, i32 1
  %430 = load ptr, ptr %429, align 8, !tbaa !504
  %431 = getelementptr inbounds %struct.VertRen, ptr %430, i64 0, i32 1
  store <2 x float> %417, ptr %431, align 4, !tbaa !13
  %432 = getelementptr inbounds %struct.VertRen, ptr %430, i64 0, i32 1, i64 2
  store float %421, ptr %432, align 4, !tbaa !13
  %433 = getelementptr inbounds %struct.VlakRen, ptr %413, i64 0, i32 3
  %434 = load ptr, ptr %433, align 8, !tbaa !506
  %435 = getelementptr inbounds %struct.VertRen, ptr %434, i64 0, i32 1
  store <2 x float> %417, ptr %435, align 4, !tbaa !13
  %436 = getelementptr inbounds %struct.VertRen, ptr %434, i64 0, i32 1, i64 2
  store float %421, ptr %436, align 4, !tbaa !13
  br label %437

437:                                              ; preds = %384, %380
  %438 = load i32, ptr %7, align 8, !tbaa !177
  %439 = icmp slt i32 %8, %438
  br i1 %439, label %440, label %467

440:                                              ; preds = %437, %461
  %441 = phi i32 [ %464, %461 ], [ %8, %437 ]
  %442 = call ptr @RE_findOrAddVert(ptr noundef nonnull %0, i32 noundef %441) #16
  %443 = getelementptr inbounds %struct.VertRen, ptr %442, i64 0, i32 1
  %444 = load <2 x float>, ptr %443, align 4, !tbaa !13
  %445 = fmul fast <2 x float> %444, %444
  %446 = shufflevector <2 x float> %445, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %447 = fadd fast <2 x float> %446, %445
  %448 = extractelement <2 x float> %447, i64 0
  %449 = getelementptr inbounds %struct.VertRen, ptr %442, i64 0, i32 1, i64 2
  %450 = load float, ptr %449, align 4, !tbaa !13
  %451 = fmul fast float %450, %450
  %452 = fadd fast float %448, %451
  %453 = fcmp fast ogt float %452, 0x38AA95A5C0000000
  br i1 %453, label %454, label %461

454:                                              ; preds = %440
  %455 = call fast float @llvm.sqrt.f32(float %452)
  %456 = fdiv fast float 1.000000e+00, %455
  %457 = insertelement <2 x float> poison, float %456, i64 0
  %458 = shufflevector <2 x float> %457, <2 x float> poison, <2 x i32> zeroinitializer
  %459 = fmul fast <2 x float> %458, %444
  %460 = fmul fast float %456, %450
  br label %461

461:                                              ; preds = %440, %454
  %462 = phi float [ %460, %454 ], [ 0.000000e+00, %440 ]
  %463 = phi <2 x float> [ %459, %454 ], [ zeroinitializer, %440 ]
  store <2 x float> %463, ptr %443, align 4
  store float %462, ptr %449, align 4
  %464 = add nsw i32 %441, 1
  %465 = load i32, ptr %7, align 8, !tbaa !177
  %466 = icmp slt i32 %464, %465
  br i1 %466, label %440, label %467, !llvm.loop !658

467:                                              ; preds = %461, %437
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %6) #16
  ret i32 %138
}

declare zeroext i8 @BKE_displist_surfindex_get(ptr noundef, i32 noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

declare void @BKE_displist_free(ptr noundef) local_unnamed_addr #5

declare ptr @RE_vertren_copy(ptr noundef, ptr noundef) local_unnamed_addr #5

declare void @BKE_displist_make_surf(ptr noundef, ptr noundef, ptr noundef, ptr noundef, i8 noundef zeroext, i8 noundef zeroext, i8 noundef zeroext) local_unnamed_addr #5

declare ptr @BKE_curve_surf_make_orco(ptr noundef) local_unnamed_addr #5

declare void @mul_transposed_m3_v3(ptr noundef, ptr noundef) local_unnamed_addr #5

declare ptr @RE_vertren_get_origindex(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #5

declare void @DM_add_tangent_layer(ptr noundef) local_unnamed_addr #5

declare ptr @RE_vlakren_get_origindex(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @displace(ptr noundef %0, ptr noundef %1) unnamed_addr #3 {
  %3 = alloca %struct.ShadeInput, align 8
  %4 = alloca [3 x float], align 4
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %4) #16
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(12) %4, ptr noundef nonnull align 4 dereferenceable(12) @__const.displace.scale, i64 12, i1 false)
  %5 = getelementptr inbounds %struct.ObjectRen, ptr %1, i64 0, i32 2
  %6 = load ptr, ptr %5, align 8, !tbaa !16
  %7 = icmp eq ptr %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds [3 x float], ptr %4, i64 0, i64 1
  br label %16

10:                                               ; preds = %16
  store <2 x float> %31, ptr %9, align 4, !tbaa !13
  br label %11

11:                                               ; preds = %10, %2
  %12 = phi float [ %30, %10 ], [ 1.000000e+00, %2 ]
  store float %12, ptr %4, align 4, !tbaa !13
  %13 = getelementptr inbounds %struct.ObjectRen, ptr %1, i64 0, i32 10
  %14 = load i32, ptr %13, align 8, !tbaa !177
  %15 = icmp sgt i32 %14, 0
  br i1 %15, label %43, label %35

16:                                               ; preds = %8, %16
  %17 = phi ptr [ %6, %8 ], [ %33, %16 ]
  %18 = phi float [ 1.000000e+00, %8 ], [ %30, %16 ]
  %19 = phi <2 x float> [ <float 1.000000e+00, float 1.000000e+00>, %8 ], [ %31, %16 ]
  %20 = getelementptr inbounds %struct.Object, ptr %17, i64 0, i32 36
  %21 = getelementptr inbounds %struct.Object, ptr %17, i64 0, i32 38
  %22 = load float, ptr %20, align 4, !tbaa !13
  %23 = load float, ptr %21, align 4, !tbaa !13
  %24 = fmul fast float %23, %22
  %25 = getelementptr inbounds %struct.Object, ptr %17, i64 0, i32 36, i64 1
  %26 = getelementptr inbounds %struct.Object, ptr %17, i64 0, i32 38, i64 1
  %27 = load <2 x float>, ptr %25, align 4, !tbaa !13
  %28 = load <2 x float>, ptr %26, align 4, !tbaa !13
  %29 = fmul fast <2 x float> %28, %27
  %30 = fmul fast float %24, %18
  %31 = fmul fast <2 x float> %29, %19
  %32 = getelementptr inbounds %struct.Object, ptr %17, i64 0, i32 9
  %33 = load ptr, ptr %32, align 8, !tbaa !16
  %34 = icmp eq ptr %33, null
  br i1 %34, label %10, label %16, !llvm.loop !659

35:                                               ; preds = %43, %11
  %36 = getelementptr inbounds %struct.ObjectRen, ptr %1, i64 0, i32 11
  %37 = load i32, ptr %36, align 4, !tbaa !499
  %38 = icmp sgt i32 %37, 0
  br i1 %38, label %39, label %119

39:                                               ; preds = %35
  %40 = getelementptr inbounds i8, ptr %3, i64 16
  %41 = getelementptr inbounds %struct.ShadeInput, ptr %3, i64 0, i32 4
  %42 = getelementptr inbounds %struct.ShadeInput, ptr %3, i64 0, i32 1
  br label %50

43:                                               ; preds = %11, %43
  %44 = phi i32 [ %47, %43 ], [ 0, %11 ]
  %45 = tail call ptr @RE_findOrAddVert(ptr noundef nonnull %1, i32 noundef %44) #16
  %46 = getelementptr inbounds %struct.VertRen, ptr %45, i64 0, i32 3
  store i32 0, ptr %46, align 8, !tbaa !660
  %47 = add nuw nsw i32 %44, 1
  %48 = load i32, ptr %13, align 8, !tbaa !177
  %49 = icmp slt i32 %47, %48
  br i1 %49, label %43, label %35, !llvm.loop !661

50:                                               ; preds = %39, %115
  %51 = phi i32 [ 0, %39 ], [ %116, %115 ]
  %52 = call ptr @RE_findOrAddVlak(ptr noundef nonnull %1, i32 noundef %51) #16
  call void @llvm.lifetime.start.p0(i64 1472, ptr nonnull %3) #16
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(1472) %40, i8 0, i64 1456, i1 false)
  store ptr %1, ptr %41, align 8, !tbaa !662
  store ptr %52, ptr %42, align 8, !tbaa !664
  %53 = getelementptr inbounds %struct.VlakRen, ptr %52, i64 0, i32 5
  %54 = load ptr, ptr %53, align 8, !tbaa !507
  store ptr %54, ptr %3, align 8, !tbaa !665
  %55 = load ptr, ptr %52, align 8, !tbaa !502
  %56 = getelementptr inbounds %struct.VertRen, ptr %55, i64 0, i32 3
  %57 = load i32, ptr %56, align 8, !tbaa !660
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %50
  call fastcc void @displace_render_vert(ptr noundef %0, ptr noundef nonnull %1, ptr noundef nonnull %3, ptr noundef nonnull %55, i32 noundef 0, ptr noundef nonnull %4)
  br label %60

60:                                               ; preds = %59, %50
  %61 = getelementptr inbounds %struct.VlakRen, ptr %52, i64 0, i32 1
  %62 = load ptr, ptr %61, align 8, !tbaa !504
  %63 = getelementptr inbounds %struct.VertRen, ptr %62, i64 0, i32 3
  %64 = load i32, ptr %63, align 8, !tbaa !660
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %60
  call fastcc void @displace_render_vert(ptr noundef %0, ptr noundef %1, ptr noundef nonnull %3, ptr noundef nonnull %62, i32 noundef 1, ptr noundef nonnull %4)
  br label %67

67:                                               ; preds = %66, %60
  %68 = getelementptr inbounds %struct.VlakRen, ptr %52, i64 0, i32 2
  %69 = load ptr, ptr %68, align 8, !tbaa !505
  %70 = getelementptr inbounds %struct.VertRen, ptr %69, i64 0, i32 3
  %71 = load i32, ptr %70, align 8, !tbaa !660
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %74

73:                                               ; preds = %67
  call fastcc void @displace_render_vert(ptr noundef %0, ptr noundef %1, ptr noundef nonnull %3, ptr noundef nonnull %69, i32 noundef 2, ptr noundef nonnull %4)
  br label %74

74:                                               ; preds = %73, %67
  %75 = getelementptr inbounds %struct.VlakRen, ptr %52, i64 0, i32 3
  %76 = load ptr, ptr %75, align 8, !tbaa !506
  %77 = icmp eq ptr %76, null
  br i1 %77, label %109, label %78

78:                                               ; preds = %74
  %79 = getelementptr inbounds %struct.VertRen, ptr %76, i64 0, i32 3
  %80 = load i32, ptr %79, align 8, !tbaa !660
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %84

82:                                               ; preds = %78
  call fastcc void @displace_render_vert(ptr noundef %0, ptr noundef %1, ptr noundef nonnull %3, ptr noundef nonnull %76, i32 noundef 3, ptr noundef nonnull %4)
  %83 = load ptr, ptr %75, align 8, !tbaa !506
  br label %84

84:                                               ; preds = %82, %78
  %85 = phi ptr [ %83, %82 ], [ %76, %78 ]
  %86 = load ptr, ptr %52, align 8, !tbaa !502
  %87 = getelementptr inbounds %struct.VertRen, ptr %86, i64 0, i32 4
  %88 = load float, ptr %87, align 4, !tbaa !625
  %89 = load ptr, ptr %68, align 8, !tbaa !505
  %90 = getelementptr inbounds %struct.VertRen, ptr %89, i64 0, i32 4
  %91 = load float, ptr %90, align 4, !tbaa !625
  %92 = fsub fast float %88, %91
  %93 = call fast float @llvm.fabs.f32(float %92)
  %94 = load ptr, ptr %61, align 8, !tbaa !504
  %95 = getelementptr inbounds %struct.VertRen, ptr %94, i64 0, i32 4
  %96 = load float, ptr %95, align 4, !tbaa !625
  %97 = getelementptr inbounds %struct.VertRen, ptr %85, i64 0, i32 4
  %98 = load float, ptr %97, align 4, !tbaa !625
  %99 = fsub fast float %96, %98
  %100 = call fast float @llvm.fabs.f32(float %99)
  %101 = fcmp fast ogt float %93, %100
  %102 = getelementptr inbounds %struct.VlakRen, ptr %52, i64 0, i32 7
  %103 = load i8, ptr %102, align 1, !tbaa !508
  %104 = and i8 %103, -33
  %105 = select i1 %101, i8 32, i8 0
  %106 = or i8 %105, %104
  store i8 %106, ptr %102, align 1, !tbaa !508
  %107 = getelementptr inbounds %struct.VlakRen, ptr %52, i64 0, i32 4
  %108 = call fast nofpclass(nan inf) float @normal_quad_v3(ptr noundef nonnull %107, ptr noundef nonnull %85, ptr noundef nonnull %89, ptr noundef nonnull %94, ptr noundef nonnull %86) #16
  br label %115

109:                                              ; preds = %74
  %110 = load ptr, ptr %68, align 8, !tbaa !505
  %111 = load ptr, ptr %61, align 8, !tbaa !504
  %112 = load ptr, ptr %52, align 8, !tbaa !502
  %113 = getelementptr inbounds %struct.VlakRen, ptr %52, i64 0, i32 4
  %114 = call fast nofpclass(nan inf) float @normal_tri_v3(ptr noundef nonnull %113, ptr noundef %110, ptr noundef %111, ptr noundef %112) #16
  br label %115

115:                                              ; preds = %84, %109
  call void @llvm.lifetime.end.p0(i64 1472, ptr nonnull %3) #16
  %116 = add nuw nsw i32 %51, 1
  %117 = load i32, ptr %36, align 4, !tbaa !499
  %118 = icmp slt i32 %116, %117
  br i1 %118, label %50, label %119, !llvm.loop !666

119:                                              ; preds = %115, %35
  call fastcc void @calc_vertexnormals(ptr noundef nonnull %1, i8 noundef zeroext 1, i8 noundef zeroext 0, i8 noundef zeroext 0)
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %4) #16
  ret void
}

declare ptr @RE_inithalo(ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, float noundef nofpclass(nan inf), float noundef nofpclass(nan inf), i32 noundef) local_unnamed_addr #5

; Function Attrs: nofree
declare void @qsort(ptr noundef, i64 noundef, i64 noundef, ptr nocapture noundef) local_unnamed_addr #11

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable
define internal i32 @vergedgesort(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1) #12 {
  %3 = load i32, ptr %0, align 4, !tbaa !576
  %4 = load i32, ptr %1, align 4, !tbaa !576
  %5 = icmp ugt i32 %3, %4
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = icmp ult i32 %3, %4
  br i1 %7, label %17, label %8

8:                                                ; preds = %6
  %9 = getelementptr inbounds %struct.edgesort, ptr %0, i64 0, i32 1
  %10 = load i32, ptr %9, align 4, !tbaa !578
  %11 = getelementptr inbounds %struct.edgesort, ptr %1, i64 0, i32 1
  %12 = load i32, ptr %11, align 4, !tbaa !578
  %13 = icmp ugt i32 %10, %12
  br i1 %13, label %17, label %14

14:                                               ; preds = %8
  %15 = icmp ult i32 %10, %12
  %16 = sext i1 %15 to i32
  br label %17

17:                                               ; preds = %14, %8, %6, %2
  %18 = phi i32 [ 1, %2 ], [ -1, %6 ], [ 1, %8 ], [ %16, %14 ]
  ret i32 %18
}

declare void @BKE_mesh_texspace_get(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

declare ptr @RE_vertren_get_stress(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @displace_render_vert(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3, i32 noundef %4, ptr nocapture noundef readonly %5) unnamed_addr #3 {
  %7 = alloca ptr, align 8
  %8 = load ptr, ptr %2, align 8, !tbaa !665
  %9 = getelementptr inbounds %struct.Material, ptr %8, i64 0, i32 90
  %10 = load i16, ptr %9, align 4, !tbaa !237
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %7) #16
  %11 = getelementptr inbounds %struct.ShadeInput, ptr %2, i64 0, i32 29
  %12 = load float, ptr %3, align 4, !tbaa !13
  store float %12, ptr %11, align 4, !tbaa !13
  %13 = getelementptr inbounds float, ptr %3, i64 1
  %14 = load float, ptr %13, align 4, !tbaa !13
  %15 = getelementptr inbounds %struct.ShadeInput, ptr %2, i64 0, i32 29, i64 1
  store float %14, ptr %15, align 4, !tbaa !13
  %16 = getelementptr inbounds float, ptr %3, i64 2
  %17 = load float, ptr %16, align 4, !tbaa !13
  %18 = getelementptr inbounds %struct.ShadeInput, ptr %2, i64 0, i32 29, i64 2
  store float %17, ptr %18, align 4, !tbaa !13
  %19 = getelementptr inbounds %struct.ShadeInput, ptr %2, i64 0, i32 16
  %20 = getelementptr inbounds %struct.VertRen, ptr %3, i64 0, i32 1
  %21 = load float, ptr %20, align 4, !tbaa !13
  store float %21, ptr %19, align 4, !tbaa !13
  %22 = getelementptr inbounds %struct.VertRen, ptr %3, i64 0, i32 1, i64 1
  %23 = load float, ptr %22, align 4, !tbaa !13
  %24 = getelementptr inbounds %struct.ShadeInput, ptr %2, i64 0, i32 16, i64 1
  store float %23, ptr %24, align 4, !tbaa !13
  %25 = getelementptr inbounds %struct.VertRen, ptr %3, i64 0, i32 1, i64 2
  %26 = load float, ptr %25, align 4, !tbaa !13
  %27 = getelementptr inbounds %struct.ShadeInput, ptr %2, i64 0, i32 16, i64 2
  store float %26, ptr %27, align 4, !tbaa !13
  %28 = zext i16 %10 to i32
  %29 = and i32 %28, 16
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %65, label %31

31:                                               ; preds = %6
  %32 = getelementptr inbounds %struct.ShadeInput, ptr %2, i64 0, i32 74
  store i32 0, ptr %32, align 8, !tbaa !667
  %33 = getelementptr inbounds %struct.ObjectRen, ptr %1, i64 0, i32 25
  %34 = load i32, ptr %33, align 8, !tbaa !632
  %35 = getelementptr inbounds %struct.ShadeInput, ptr %2, i64 0, i32 76
  store i32 %34, ptr %35, align 8, !tbaa !668
  %36 = getelementptr inbounds %struct.ShadeInput, ptr %2, i64 0, i32 1
  %37 = load ptr, ptr %36, align 8, !tbaa !664
  %38 = call ptr @RE_vlakren_get_tface(ptr noundef %1, ptr noundef %37, i32 noundef 0, ptr noundef nonnull %7, i32 noundef 0) #16
  %39 = icmp eq ptr %38, null
  br i1 %39, label %65, label %40

40:                                               ; preds = %31
  %41 = zext i32 %4 to i64
  br label %42

42:                                               ; preds = %40, %42
  %43 = phi i64 [ 0, %40 ], [ %60, %42 ]
  %44 = phi ptr [ %38, %40 ], [ %63, %42 ]
  %45 = getelementptr inbounds [4 x [2 x float]], ptr %44, i64 0, i64 %41
  %46 = load float, ptr %45, align 8, !tbaa !13
  %47 = fmul fast float %46, 2.000000e+00
  %48 = fadd fast float %47, -1.000000e+00
  %49 = getelementptr inbounds %struct.ShadeInput, ptr %2, i64 0, i32 72, i64 %43, i32 2
  store float %48, ptr %49, align 8, !tbaa !13
  %50 = getelementptr inbounds [4 x [2 x float]], ptr %44, i64 0, i64 %41, i64 1
  %51 = load float, ptr %50, align 4, !tbaa !13
  %52 = fmul fast float %51, 2.000000e+00
  %53 = fadd fast float %52, -1.000000e+00
  %54 = getelementptr inbounds %struct.ShadeInput, ptr %2, i64 0, i32 72, i64 %43, i32 2, i64 1
  store float %53, ptr %54, align 4, !tbaa !13
  %55 = getelementptr inbounds %struct.ShadeInput, ptr %2, i64 0, i32 72, i64 %43, i32 2, i64 2
  store float 0.000000e+00, ptr %55, align 8, !tbaa !13
  %56 = load ptr, ptr %7, align 8, !tbaa !16
  %57 = getelementptr inbounds %struct.ShadeInput, ptr %2, i64 0, i32 72, i64 %43, i32 3
  store ptr %56, ptr %57, align 8, !tbaa !669
  %58 = load i32, ptr %32, align 8, !tbaa !667
  %59 = add nsw i32 %58, 1
  store i32 %59, ptr %32, align 8, !tbaa !667
  %60 = add nuw i64 %43, 1
  %61 = load ptr, ptr %36, align 8, !tbaa !664
  %62 = trunc i64 %60 to i32
  %63 = call ptr @RE_vlakren_get_tface(ptr noundef %1, ptr noundef %61, i32 noundef %62, ptr noundef nonnull %7, i32 noundef 0) #16
  %64 = icmp eq ptr %63, null
  br i1 %64, label %65, label %42, !llvm.loop !671

65:                                               ; preds = %42, %31, %6
  %66 = and i32 %28, 1
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %81, label %68

68:                                               ; preds = %65
  %69 = getelementptr inbounds %struct.VertRen, ptr %3, i64 0, i32 2
  %70 = load ptr, ptr %69, align 8, !tbaa !496
  %71 = icmp eq ptr %70, null
  br i1 %71, label %81, label %72

72:                                               ; preds = %68
  %73 = getelementptr inbounds %struct.ShadeInput, ptr %2, i64 0, i32 56
  %74 = load float, ptr %70, align 4, !tbaa !13
  store float %74, ptr %73, align 4, !tbaa !13
  %75 = getelementptr inbounds float, ptr %70, i64 1
  %76 = load float, ptr %75, align 4, !tbaa !13
  %77 = getelementptr inbounds %struct.ShadeInput, ptr %2, i64 0, i32 56, i64 1
  store float %76, ptr %77, align 4, !tbaa !13
  %78 = getelementptr inbounds float, ptr %70, i64 2
  %79 = load float, ptr %78, align 4, !tbaa !13
  %80 = getelementptr inbounds %struct.ShadeInput, ptr %2, i64 0, i32 56, i64 2
  store float %79, ptr %80, align 4, !tbaa !13
  br label %81

81:                                               ; preds = %72, %68, %65
  %82 = and i32 %28, 8
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %90, label %84

84:                                               ; preds = %81
  %85 = getelementptr inbounds %struct.ShadeInput, ptr %2, i64 0, i32 57
  %86 = load <2 x float>, ptr %11, align 4, !tbaa !13
  store <2 x float> %86, ptr %85, align 4, !tbaa !13
  %87 = load float, ptr %18, align 4, !tbaa !13
  %88 = getelementptr inbounds %struct.ShadeInput, ptr %2, i64 0, i32 57, i64 2
  store float %87, ptr %88, align 4, !tbaa !13
  %89 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 33
  call void @mul_m4_v3(ptr noundef nonnull %89, ptr noundef nonnull %85) #16
  br label %90

90:                                               ; preds = %84, %81
  %91 = and i32 %28, 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %98, label %93

93:                                               ; preds = %90
  %94 = getelementptr inbounds %struct.ShadeInput, ptr %2, i64 0, i32 59
  %95 = load <2 x float>, ptr %19, align 4, !tbaa !13
  store <2 x float> %95, ptr %94, align 4, !tbaa !13
  %96 = load float, ptr %27, align 4, !tbaa !13
  %97 = getelementptr inbounds %struct.ShadeInput, ptr %2, i64 0, i32 59, i64 2
  store float %96, ptr %97, align 4, !tbaa !13
  br label %98

98:                                               ; preds = %93, %90
  %99 = and i32 %28, 16384
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %114, label %101

101:                                              ; preds = %98
  %102 = call ptr @RE_vertren_get_stress(ptr noundef %1, ptr noundef nonnull %3, i32 noundef 0) #16
  %103 = icmp eq ptr %102, null
  br i1 %103, label %112, label %104

104:                                              ; preds = %101
  %105 = load float, ptr %102, align 4, !tbaa !13
  %106 = getelementptr inbounds %struct.ShadeInput, ptr %2, i64 0, i32 68
  %107 = fcmp fast olt float %105, 1.000000e+00
  %108 = fadd fast float %105, -1.000000e+00
  br i1 %107, label %109, label %110

109:                                              ; preds = %104
  store float %108, ptr %106, align 8, !tbaa !672
  br label %114

110:                                              ; preds = %104
  %111 = fdiv fast float %108, %105
  store float %111, ptr %106, align 8, !tbaa !672
  br label %114

112:                                              ; preds = %101
  %113 = getelementptr inbounds %struct.ShadeInput, ptr %2, i64 0, i32 68
  store float 0.000000e+00, ptr %113, align 8, !tbaa !672
  br label %114

114:                                              ; preds = %112, %110, %109, %98
  %115 = getelementptr inbounds %struct.ShadeInput, ptr %2, i64 0, i32 63
  %116 = getelementptr inbounds %struct.ShadeInput, ptr %2, i64 0, i32 63, i64 2
  store float 0.000000e+00, ptr %116, align 8, !tbaa !13
  %117 = getelementptr inbounds %struct.ShadeInput, ptr %2, i64 0, i32 63, i64 1
  store <2 x float> zeroinitializer, ptr %115, align 8, !tbaa !13
  call void @do_material_tex(ptr noundef nonnull %2, ptr noundef %0) #16
  %118 = load float, ptr %116, align 8, !tbaa !13
  %119 = getelementptr inbounds float, ptr %5, i64 2
  %120 = load float, ptr %119, align 4, !tbaa !13
  %121 = fmul fast float %120, %118
  %122 = load <2 x float>, ptr %115, align 8, !tbaa !13
  %123 = load <2 x float>, ptr %5, align 4, !tbaa !13
  %124 = fmul fast <2 x float> %123, %122
  %125 = load <2 x float>, ptr %3, align 8, !tbaa !13
  %126 = fadd fast <2 x float> %125, %124
  store <2 x float> %126, ptr %3, align 8, !tbaa !13
  %127 = load float, ptr %16, align 8, !tbaa !13
  %128 = fadd fast float %127, %121
  store float %128, ptr %16, align 8, !tbaa !13
  %129 = getelementptr inbounds %struct.VertRen, ptr %3, i64 0, i32 3
  %130 = load i32, ptr %129, align 8, !tbaa !660
  %131 = or i32 %130, 1
  store i32 %131, ptr %129, align 8, !tbaa !660
  %132 = load float, ptr %115, align 8, !tbaa !13
  %133 = fmul fast float %132, %132
  %134 = load float, ptr %117, align 4, !tbaa !13
  %135 = fmul fast float %134, %134
  %136 = fadd fast float %135, %133
  %137 = load float, ptr %116, align 8, !tbaa !13
  %138 = fmul fast float %137, %137
  %139 = fadd fast float %136, %138
  %140 = getelementptr inbounds %struct.VertRen, ptr %3, i64 0, i32 4
  store float %139, ptr %140, align 4, !tbaa !625
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7) #16
  ret void
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.fabs.f32(float) #2

declare void @do_material_tex(ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @as_addvert_lnor(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3, ptr nocapture noundef readonly %4) unnamed_addr #3 {
  %6 = load <2 x i16>, ptr %4, align 2, !tbaa !46
  %7 = sitofp <2 x i16> %6 to <2 x float>
  %8 = fmul fast <2 x float> %7, <float 0x3F00002000000000, float 0x3F00002000000000>
  %9 = getelementptr inbounds i16, ptr %4, i64 2
  %10 = load i16, ptr %9, align 2, !tbaa !46
  %11 = sitofp i16 %10 to float
  %12 = fmul fast float %11, 0x3F00002000000000
  %13 = icmp eq ptr %2, null
  br i1 %13, label %189, label %14

14:                                               ; preds = %5
  %15 = getelementptr inbounds %struct.ASvert, ptr %1, i64 0, i32 1
  %16 = getelementptr inbounds %struct.ASvert, ptr %1, i64 0, i32 1, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !673
  %18 = icmp eq ptr %17, null
  br i1 %18, label %35, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.ASface, ptr %17, i64 0, i32 2, i64 0
  %21 = load ptr, ptr %20, align 8, !tbaa !16
  %22 = icmp eq ptr %21, null
  br i1 %22, label %38, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %struct.ASface, ptr %17, i64 0, i32 2, i64 1
  %25 = load ptr, ptr %24, align 8, !tbaa !16
  %26 = icmp eq ptr %25, null
  br i1 %26, label %38, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.ASface, ptr %17, i64 0, i32 2, i64 2
  %29 = load ptr, ptr %28, align 8, !tbaa !16
  %30 = icmp eq ptr %29, null
  br i1 %30, label %38, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %struct.ASface, ptr %17, i64 0, i32 2, i64 3
  %33 = load ptr, ptr %32, align 8, !tbaa !16
  %34 = icmp eq ptr %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %31, %14
  %36 = load ptr, ptr @MEM_callocN, align 8, !tbaa !16
  %37 = tail call ptr %36(i64 noundef 80, ptr noundef nonnull @.str.23) #16
  tail call void @BLI_addtail(ptr noundef nonnull %15, ptr noundef %37) #16
  br label %38

38:                                               ; preds = %35, %31, %27, %23, %19
  %39 = phi ptr [ %37, %35 ], [ %17, %31 ], [ %17, %27 ], [ %17, %23 ], [ %17, %19 ]
  %40 = phi i64 [ 0, %35 ], [ 3, %31 ], [ 2, %27 ], [ 1, %23 ], [ 0, %19 ]
  %41 = getelementptr inbounds %struct.ASface, ptr %39, i64 0, i32 2, i64 %40
  store ptr %3, ptr %41, align 8, !tbaa !16
  %42 = load i32, ptr %1, align 8, !tbaa !675
  %43 = add nsw i32 %42, 1
  store i32 %43, ptr %1, align 8, !tbaa !675
  %44 = load ptr, ptr %16, align 8, !tbaa !673
  %45 = icmp eq i32 %42, 0
  %46 = getelementptr inbounds %struct.VertRen, ptr %2, i64 0, i32 1
  br i1 %45, label %47, label %49

47:                                               ; preds = %38
  store <2 x float> %8, ptr %46, align 4, !tbaa !13
  %48 = getelementptr inbounds %struct.VertRen, ptr %2, i64 0, i32 1, i64 2
  store float %12, ptr %48, align 4, !tbaa !13
  br label %189

49:                                               ; preds = %38
  %50 = load float, ptr %46, align 4, !tbaa !13
  %51 = extractelement <2 x float> %8, i64 0
  %52 = fcmp fast oeq float %51, %50
  br i1 %52, label %53, label %62

53:                                               ; preds = %49
  %54 = getelementptr inbounds %struct.VertRen, ptr %2, i64 0, i32 1, i64 1
  %55 = load float, ptr %54, align 4, !tbaa !13
  %56 = extractelement <2 x float> %8, i64 1
  %57 = fcmp fast oeq float %56, %55
  br i1 %57, label %58, label %62

58:                                               ; preds = %53
  %59 = getelementptr inbounds %struct.VertRen, ptr %2, i64 0, i32 1, i64 2
  %60 = load float, ptr %59, align 4, !tbaa !13
  %61 = fcmp fast une float %12, %60
  br i1 %61, label %62, label %189

62:                                               ; preds = %58, %53, %49
  %63 = load ptr, ptr %15, align 8, !tbaa !16
  %64 = icmp eq ptr %63, null
  br i1 %64, label %162, label %65

65:                                               ; preds = %62
  %66 = extractelement <2 x float> %8, i64 1
  %67 = extractelement <2 x float> %8, i64 1
  %68 = extractelement <2 x float> %8, i64 1
  %69 = extractelement <2 x float> %8, i64 1
  br label %70

70:                                               ; preds = %65, %159
  %71 = phi ptr [ %160, %159 ], [ %63, %65 ]
  %72 = getelementptr inbounds %struct.ASface, ptr %71, i64 0, i32 2, i64 0
  %73 = load ptr, ptr %72, align 8, !tbaa !16
  %74 = icmp eq ptr %73, null
  %75 = icmp eq ptr %73, %3
  %76 = or i1 %74, %75
  br i1 %76, label %93, label %77

77:                                               ; preds = %70
  %78 = getelementptr inbounds %struct.ASface, ptr %71, i64 0, i32 3, i64 0
  %79 = load ptr, ptr %78, align 8, !tbaa !16
  %80 = icmp eq ptr %79, null
  br i1 %80, label %93, label %81

81:                                               ; preds = %77
  %82 = getelementptr inbounds %struct.VertRen, ptr %79, i64 0, i32 1
  %83 = load float, ptr %82, align 4, !tbaa !13
  %84 = fcmp fast oeq float %51, %83
  br i1 %84, label %85, label %93

85:                                               ; preds = %81
  %86 = getelementptr inbounds %struct.VertRen, ptr %79, i64 0, i32 1, i64 1
  %87 = load float, ptr %86, align 4, !tbaa !13
  %88 = fcmp fast oeq float %66, %87
  br i1 %88, label %89, label %93

89:                                               ; preds = %85
  %90 = getelementptr inbounds %struct.VertRen, ptr %79, i64 0, i32 1, i64 2
  %91 = load float, ptr %90, align 4, !tbaa !13
  %92 = fcmp fast une float %12, %91
  br i1 %92, label %93, label %166

93:                                               ; preds = %89, %85, %81, %77, %70
  %94 = getelementptr inbounds %struct.ASface, ptr %71, i64 0, i32 2, i64 1
  %95 = load ptr, ptr %94, align 8, !tbaa !16
  %96 = icmp eq ptr %95, null
  %97 = icmp eq ptr %95, %3
  %98 = or i1 %96, %97
  br i1 %98, label %115, label %99

99:                                               ; preds = %93
  %100 = getelementptr inbounds %struct.ASface, ptr %71, i64 0, i32 3, i64 1
  %101 = load ptr, ptr %100, align 8, !tbaa !16
  %102 = icmp eq ptr %101, null
  br i1 %102, label %115, label %103

103:                                              ; preds = %99
  %104 = getelementptr inbounds %struct.VertRen, ptr %101, i64 0, i32 1
  %105 = load float, ptr %104, align 4, !tbaa !13
  %106 = fcmp fast oeq float %51, %105
  br i1 %106, label %107, label %115

107:                                              ; preds = %103
  %108 = getelementptr inbounds %struct.VertRen, ptr %101, i64 0, i32 1, i64 1
  %109 = load float, ptr %108, align 4, !tbaa !13
  %110 = fcmp fast oeq float %67, %109
  br i1 %110, label %111, label %115

111:                                              ; preds = %107
  %112 = getelementptr inbounds %struct.VertRen, ptr %101, i64 0, i32 1, i64 2
  %113 = load float, ptr %112, align 4, !tbaa !13
  %114 = fcmp fast une float %12, %113
  br i1 %114, label %115, label %166

115:                                              ; preds = %111, %107, %103, %99, %93
  %116 = getelementptr inbounds %struct.ASface, ptr %71, i64 0, i32 2, i64 2
  %117 = load ptr, ptr %116, align 8, !tbaa !16
  %118 = icmp eq ptr %117, null
  %119 = icmp eq ptr %117, %3
  %120 = or i1 %118, %119
  br i1 %120, label %137, label %121

121:                                              ; preds = %115
  %122 = getelementptr inbounds %struct.ASface, ptr %71, i64 0, i32 3, i64 2
  %123 = load ptr, ptr %122, align 8, !tbaa !16
  %124 = icmp eq ptr %123, null
  br i1 %124, label %137, label %125

125:                                              ; preds = %121
  %126 = getelementptr inbounds %struct.VertRen, ptr %123, i64 0, i32 1
  %127 = load float, ptr %126, align 4, !tbaa !13
  %128 = fcmp fast oeq float %51, %127
  br i1 %128, label %129, label %137

129:                                              ; preds = %125
  %130 = getelementptr inbounds %struct.VertRen, ptr %123, i64 0, i32 1, i64 1
  %131 = load float, ptr %130, align 4, !tbaa !13
  %132 = fcmp fast oeq float %68, %131
  br i1 %132, label %133, label %137

133:                                              ; preds = %129
  %134 = getelementptr inbounds %struct.VertRen, ptr %123, i64 0, i32 1, i64 2
  %135 = load float, ptr %134, align 4, !tbaa !13
  %136 = fcmp fast une float %12, %135
  br i1 %136, label %137, label %166

137:                                              ; preds = %133, %129, %125, %121, %115
  %138 = getelementptr inbounds %struct.ASface, ptr %71, i64 0, i32 2, i64 3
  %139 = load ptr, ptr %138, align 8, !tbaa !16
  %140 = icmp eq ptr %139, null
  %141 = icmp eq ptr %139, %3
  %142 = or i1 %140, %141
  br i1 %142, label %159, label %143

143:                                              ; preds = %137
  %144 = getelementptr inbounds %struct.ASface, ptr %71, i64 0, i32 3, i64 3
  %145 = load ptr, ptr %144, align 8, !tbaa !16
  %146 = icmp eq ptr %145, null
  br i1 %146, label %159, label %147

147:                                              ; preds = %143
  %148 = getelementptr inbounds %struct.VertRen, ptr %145, i64 0, i32 1
  %149 = load float, ptr %148, align 4, !tbaa !13
  %150 = fcmp fast oeq float %51, %149
  br i1 %150, label %151, label %159

151:                                              ; preds = %147
  %152 = getelementptr inbounds %struct.VertRen, ptr %145, i64 0, i32 1, i64 1
  %153 = load float, ptr %152, align 4, !tbaa !13
  %154 = fcmp fast oeq float %69, %153
  br i1 %154, label %155, label %159

155:                                              ; preds = %151
  %156 = getelementptr inbounds %struct.VertRen, ptr %145, i64 0, i32 1, i64 2
  %157 = load float, ptr %156, align 4, !tbaa !13
  %158 = fcmp fast une float %12, %157
  br i1 %158, label %159, label %166

159:                                              ; preds = %155, %151, %147, %143, %137
  %160 = load ptr, ptr %71, align 8, !tbaa !16
  %161 = icmp eq ptr %160, null
  br i1 %161, label %162, label %70, !llvm.loop !676

162:                                              ; preds = %159, %62
  %163 = tail call ptr @RE_vertren_copy(ptr noundef %0, ptr noundef nonnull %2) #16
  %164 = getelementptr inbounds %struct.VertRen, ptr %163, i64 0, i32 1
  store <2 x float> %8, ptr %164, align 4, !tbaa !13
  %165 = getelementptr inbounds %struct.VertRen, ptr %163, i64 0, i32 1, i64 2
  store float %12, ptr %165, align 4, !tbaa !13
  br label %166

166:                                              ; preds = %89, %111, %133, %155, %162
  %167 = phi ptr [ %163, %162 ], [ %145, %155 ], [ %123, %133 ], [ %101, %111 ], [ %79, %89 ]
  %168 = icmp eq ptr %167, %2
  br i1 %168, label %189, label %169

169:                                              ; preds = %166
  %170 = getelementptr inbounds %struct.ASface, ptr %44, i64 0, i32 3, i64 %40
  store ptr %167, ptr %170, align 8, !tbaa !16
  %171 = load ptr, ptr %3, align 8, !tbaa !502
  %172 = icmp eq ptr %171, %2
  br i1 %172, label %173, label %174

173:                                              ; preds = %169
  store ptr %167, ptr %3, align 8, !tbaa !502
  br label %174

174:                                              ; preds = %173, %169
  %175 = getelementptr inbounds %struct.VlakRen, ptr %3, i64 0, i32 1
  %176 = load ptr, ptr %175, align 8, !tbaa !504
  %177 = icmp eq ptr %176, %2
  br i1 %177, label %178, label %179

178:                                              ; preds = %174
  store ptr %167, ptr %175, align 8, !tbaa !504
  br label %179

179:                                              ; preds = %178, %174
  %180 = getelementptr inbounds %struct.VlakRen, ptr %3, i64 0, i32 2
  %181 = load ptr, ptr %180, align 8, !tbaa !505
  %182 = icmp eq ptr %181, %2
  br i1 %182, label %183, label %184

183:                                              ; preds = %179
  store ptr %167, ptr %180, align 8, !tbaa !505
  br label %184

184:                                              ; preds = %183, %179
  %185 = getelementptr inbounds %struct.VlakRen, ptr %3, i64 0, i32 3
  %186 = load ptr, ptr %185, align 8, !tbaa !506
  %187 = icmp eq ptr %186, %2
  br i1 %187, label %188, label %189

188:                                              ; preds = %184
  store ptr %167, ptr %185, align 8, !tbaa !506
  br label %189

189:                                              ; preds = %47, %58, %5, %166, %188, %184
  ret void
}

declare void @BKE_displist_make_mball_forRender(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

declare ptr @BKE_mball_make_orco(ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @split_quads(ptr noundef %0, i32 noundef %1) unnamed_addr #3 {
  %3 = getelementptr inbounds %struct.ObjectRen, ptr %0, i64 0, i32 11
  %4 = load i32, ptr %3, align 4, !tbaa !499
  %5 = icmp sgt i32 %4, 0
  br i1 %5, label %6, label %73

6:                                                ; preds = %2
  %7 = icmp eq i32 %1, 2
  %8 = select i1 %7, i8 32, i8 0
  br label %9

9:                                                ; preds = %6, %71
  %10 = phi i32 [ %4, %6 ], [ %11, %71 ]
  %11 = add nsw i32 %10, -1
  %12 = tail call ptr @RE_findOrAddVlak(ptr noundef %0, i32 noundef %11) #16
  %13 = getelementptr inbounds %struct.VlakRen, ptr %12, i64 0, i32 3
  %14 = load ptr, ptr %13, align 8, !tbaa !506
  %15 = icmp eq ptr %14, null
  br i1 %15, label %71, label %16

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct.VlakRen, ptr %12, i64 0, i32 7
  %18 = load i8, ptr %17, align 1, !tbaa !508
  %19 = and i8 %18, 4
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %71

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.VlakRen, ptr %12, i64 0, i32 5
  %23 = load ptr, ptr %22, align 8, !tbaa !507
  %24 = getelementptr inbounds %struct.Material, ptr %23, i64 0, i32 2
  %25 = load i16, ptr %24, align 8, !tbaa !139
  %26 = icmp eq i16 %25, 3
  br i1 %26, label %71, label %27

27:                                               ; preds = %21
  %28 = tail call ptr @RE_vlakren_copy(ptr noundef %0, ptr noundef nonnull %12) #16
  %29 = getelementptr inbounds %struct.VlakRen, ptr %28, i64 0, i32 7
  %30 = load i8, ptr %29, align 1, !tbaa !508
  %31 = or i8 %30, 16
  store i8 %31, ptr %29, align 1, !tbaa !508
  %32 = load i8, ptr %17, align 1, !tbaa !508
  %33 = and i8 %32, -33
  %34 = or i8 %33, %8
  store i8 %34, ptr %17, align 1, !tbaa !508
  br i1 %7, label %35, label %44

35:                                               ; preds = %27
  %36 = getelementptr inbounds %struct.VlakRen, ptr %12, i64 0, i32 1
  %37 = load ptr, ptr %36, align 8, !tbaa !504
  %38 = getelementptr inbounds %struct.VlakRen, ptr %12, i64 0, i32 2
  %39 = load ptr, ptr %38, align 8, !tbaa !505
  %40 = load ptr, ptr %13, align 8, !tbaa !506
  %41 = getelementptr inbounds %struct.VlakRen, ptr %28, i64 0, i32 2
  store ptr %40, ptr %41, align 8, !tbaa !505
  store ptr %40, ptr %38, align 8, !tbaa !505
  %42 = load i8, ptr %29, align 1, !tbaa !508
  %43 = or i8 %42, 32
  br label %52

44:                                               ; preds = %27
  %45 = load ptr, ptr %12, align 8, !tbaa !502
  %46 = getelementptr inbounds %struct.VlakRen, ptr %12, i64 0, i32 2
  %47 = load ptr, ptr %46, align 8, !tbaa !505
  %48 = load ptr, ptr %13, align 8, !tbaa !506
  %49 = getelementptr inbounds %struct.VlakRen, ptr %28, i64 0, i32 2
  store ptr %48, ptr %49, align 8, !tbaa !505
  %50 = load i8, ptr %29, align 1, !tbaa !508
  %51 = and i8 %50, -33
  br label %52

52:                                               ; preds = %44, %35
  %53 = phi ptr [ %45, %44 ], [ %37, %35 ]
  %54 = phi ptr [ %47, %44 ], [ %39, %35 ]
  %55 = phi i8 [ %51, %44 ], [ %43, %35 ]
  store ptr %53, ptr %28, align 8
  %56 = getelementptr inbounds %struct.VlakRen, ptr %28, i64 0, i32 1
  store ptr %54, ptr %56, align 8
  store i8 %55, ptr %29, align 1, !tbaa !508
  %57 = getelementptr inbounds %struct.VlakRen, ptr %28, i64 0, i32 3
  store ptr null, ptr %57, align 8, !tbaa !506
  store ptr null, ptr %13, align 8, !tbaa !506
  %58 = getelementptr inbounds %struct.VlakRen, ptr %12, i64 0, i32 4
  %59 = getelementptr inbounds %struct.VlakRen, ptr %12, i64 0, i32 2
  %60 = load ptr, ptr %59, align 8, !tbaa !505
  %61 = getelementptr inbounds %struct.VlakRen, ptr %12, i64 0, i32 1
  %62 = load ptr, ptr %61, align 8, !tbaa !504
  %63 = load ptr, ptr %12, align 8, !tbaa !502
  %64 = tail call fast nofpclass(nan inf) float @normal_tri_v3(ptr noundef nonnull %58, ptr noundef %60, ptr noundef %62, ptr noundef %63) #16
  %65 = getelementptr inbounds %struct.VlakRen, ptr %28, i64 0, i32 4
  %66 = getelementptr inbounds %struct.VlakRen, ptr %28, i64 0, i32 2
  %67 = load ptr, ptr %66, align 8, !tbaa !505
  %68 = load ptr, ptr %56, align 8, !tbaa !504
  %69 = load ptr, ptr %28, align 8, !tbaa !502
  %70 = tail call fast nofpclass(nan inf) float @normal_tri_v3(ptr noundef nonnull %65, ptr noundef %67, ptr noundef %68, ptr noundef %69) #16
  br label %71

71:                                               ; preds = %9, %16, %21, %52
  %72 = icmp ugt i32 %10, 1
  br i1 %72, label %9, label %73, !llvm.loop !677

73:                                               ; preds = %71, %2
  ret void
}

declare zeroext i8 @BKE_object_is_animated(ptr noundef, ptr noundef) local_unnamed_addr #5

declare void @minmax_v3v3_v3(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

declare void @strand_minmax(ptr noundef, ptr noundef, ptr noundef, float noundef nofpclass(nan inf)) local_unnamed_addr #5

declare ptr @RE_vlakren_copy(ptr noundef, ptr noundef) local_unnamed_addr #5

declare ptr @give_current_material(ptr noundef, i16 noundef signext) local_unnamed_addr #5

; Function Attrs: nofree nosync nounwind sspstrong memory(readwrite, inaccessiblemem: none) uwtable
define internal fastcc void @flag_render_node_material(ptr nocapture noundef %0, ptr nocapture noundef readonly %1) unnamed_addr #13 {
  %3 = getelementptr inbounds %struct.bNodeTree, ptr %1, i64 0, i32 7
  %4 = load ptr, ptr %3, align 8, !tbaa !16
  %5 = icmp eq ptr %4, null
  br i1 %5, label %37, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 4
  br label %8

8:                                                ; preds = %6, %34
  %9 = phi ptr [ %4, %6 ], [ %35, %34 ]
  %10 = getelementptr inbounds %struct.bNode, ptr %9, i64 0, i32 20
  %11 = load ptr, ptr %10, align 8, !tbaa !678
  %12 = icmp eq ptr %11, null
  br i1 %12, label %34, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %struct.ID, ptr %11, i64 0, i32 4
  %15 = load i16, ptr %14, align 8, !tbaa !46
  %16 = icmp eq i16 %15, 16717
  br i1 %16, label %17, label %29

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.Material, ptr %11, i64 0, i32 51
  %19 = load i32, ptr %18, align 4, !tbaa !102
  %20 = and i32 %19, 65600
  %21 = icmp eq i32 %20, 65600
  br i1 %21, label %22, label %25

22:                                               ; preds = %17
  %23 = load i16, ptr %7, align 8, !tbaa !234
  %24 = or i16 %23, 1
  store i16 %24, ptr %7, align 8, !tbaa !234
  br label %25

25:                                               ; preds = %22, %17
  %26 = getelementptr inbounds %struct.Material, ptr %11, i64 0, i32 3
  %27 = load i16, ptr %26, align 2, !tbaa !616
  %28 = or i16 %27, 1
  store i16 %28, ptr %26, align 2, !tbaa !616
  br label %34

29:                                               ; preds = %13
  %30 = getelementptr inbounds %struct.bNode, ptr %9, i64 0, i32 8
  %31 = load i16, ptr %30, align 4, !tbaa !680
  %32 = icmp eq i16 %31, 2
  br i1 %32, label %33, label %34

33:                                               ; preds = %29
  tail call fastcc void @flag_render_node_material(ptr noundef %0, ptr noundef nonnull %11)
  br label %34

34:                                               ; preds = %8, %29, %33, %25
  %35 = load ptr, ptr %9, align 8, !tbaa !16
  %36 = icmp eq ptr %35, null
  br i1 %36, label %37, label %8, !llvm.loop !681

37:                                               ; preds = %34, %2
  ret void
}

declare zeroext i8 @invert_m3_m3(ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @add_lightgroup(ptr noundef %0, ptr nocapture noundef %1, i32 noundef %2) unnamed_addr #3 {
  %4 = getelementptr inbounds %struct.ID, ptr %1, i64 0, i32 5
  %5 = load i16, ptr %4, align 2, !tbaa !95
  %6 = and i16 %5, -1025
  store i16 %6, ptr %4, align 2, !tbaa !95
  %7 = getelementptr inbounds %struct.Group, ptr %1, i64 0, i32 1
  %8 = load ptr, ptr %7, align 8, !tbaa !16
  %9 = icmp eq ptr %8, null
  br i1 %9, label %72, label %10

10:                                               ; preds = %3
  %11 = getelementptr i8, ptr %0, i64 1620
  %12 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 48
  %13 = getelementptr inbounds %struct.Render, ptr %0, i64 0, i32 66
  %14 = icmp ne i32 %2, 0
  br label %15

15:                                               ; preds = %10, %69
  %16 = phi ptr [ %8, %10 ], [ %70, %69 ]
  %17 = getelementptr inbounds %struct.GroupObject, ptr %16, i64 0, i32 3
  store ptr null, ptr %17, align 8, !tbaa !107
  %18 = getelementptr inbounds %struct.GroupObject, ptr %16, i64 0, i32 2
  %19 = load ptr, ptr %18, align 8, !tbaa !109
  %20 = load i32, ptr %11, align 4, !tbaa !70
  %21 = and i32 %20, 524288
  %22 = icmp eq i32 %21, 0
  %23 = getelementptr inbounds %struct.Object, ptr %19, i64 0, i32 102
  %24 = load i8, ptr %23, align 8, !tbaa !110
  %25 = lshr i8 %24, 2
  %26 = select i1 %22, i8 %25, i8 %24
  %27 = and i8 %26, 1
  %28 = icmp ne i8 %27, 0
  %29 = or i1 %22, %28
  br i1 %29, label %36, label %30

30:                                               ; preds = %15
  %31 = getelementptr inbounds %struct.Object, ptr %19, i64 0, i32 87
  %32 = load i8, ptr %31, align 2, !tbaa !113
  %33 = add i8 %32, -1
  %34 = icmp ult i8 %33, 2
  %35 = zext i1 %34 to i8
  br label %36

36:                                               ; preds = %15, %30
  %37 = phi i8 [ %35, %30 ], [ %27, %15 ]
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %69

39:                                               ; preds = %36
  %40 = getelementptr inbounds %struct.Object, ptr %19, i64 0, i32 52
  %41 = load i32, ptr %40, align 8, !tbaa !114
  %42 = load i32, ptr %12, align 8, !tbaa !85
  %43 = and i32 %42, %41
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %69, label %45

45:                                               ; preds = %39
  %46 = getelementptr inbounds %struct.Object, ptr %19, i64 0, i32 3
  %47 = load i16, ptr %46, align 8, !tbaa !115
  %48 = icmp eq i16 %47, 10
  br i1 %48, label %49, label %69

49:                                               ; preds = %45, %53
  %50 = phi ptr [ %51, %53 ], [ %13, %45 ]
  %51 = load ptr, ptr %50, align 8, !tbaa !16
  %52 = icmp eq ptr %51, null
  br i1 %52, label %61, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %struct.GroupObject, ptr %51, i64 0, i32 2
  %55 = load ptr, ptr %54, align 8, !tbaa !109
  %56 = icmp eq ptr %55, %19
  br i1 %56, label %57, label %49, !llvm.loop !116

57:                                               ; preds = %53
  %58 = getelementptr inbounds %struct.GroupObject, ptr %51, i64 0, i32 3
  %59 = load ptr, ptr %58, align 8, !tbaa !107
  store ptr %59, ptr %17, align 8, !tbaa !107
  %60 = icmp eq ptr %59, null
  br i1 %60, label %61, label %63

61:                                               ; preds = %49, %57
  %62 = tail call fastcc ptr @add_render_lamp(ptr noundef %0, ptr noundef %19)
  br label %63

63:                                               ; preds = %61, %57
  %64 = phi ptr [ %62, %61 ], [ %51, %57 ]
  %65 = icmp ne ptr %64, null
  %66 = and i1 %14, %65
  br i1 %66, label %67, label %69

67:                                               ; preds = %63
  tail call void @BLI_remlink(ptr noundef nonnull %13, ptr noundef nonnull %64) #16
  %68 = load ptr, ptr @MEM_freeN, align 8, !tbaa !16
  tail call void %68(ptr noundef nonnull %64) #16
  br label %69

69:                                               ; preds = %39, %63, %67, %45, %36
  %70 = load ptr, ptr %16, align 8, !tbaa !16
  %71 = icmp eq ptr %70, null
  br i1 %71, label %72, label %15, !llvm.loop !117

72:                                               ; preds = %69, %3
  ret void
}

declare void @BLI_remlink(ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(read, inaccessiblemem: none) uwtable
define internal i32 @verghalo(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1) #10 {
  %3 = load ptr, ptr %0, align 8, !tbaa !16
  %4 = load ptr, ptr %1, align 8, !tbaa !16
  %5 = getelementptr inbounds %struct.HaloRen, ptr %3, i64 0, i32 15
  %6 = load i32, ptr %5, align 8, !tbaa !682
  %7 = getelementptr inbounds %struct.HaloRen, ptr %4, i64 0, i32 15
  %8 = load i32, ptr %7, align 8, !tbaa !682
  %9 = icmp slt i32 %6, %8
  %10 = icmp sgt i32 %6, %8
  %11 = sext i1 %10 to i32
  %12 = select i1 %9, i32 1, i32 %11
  ret i32 %12
}

declare i32 @point_inside_volume_objectinstance(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

declare void @projectvert(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

declare ptr @RE_vertren_get_winspeed(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #5

declare ptr @RE_strandren_get_winspeed(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #5

declare void @interp_weights_face_v3(ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.powi.f32.i32(float, i32) #14

declare float @atanf(float) local_unnamed_addr

declare float @tanf(float) local_unnamed_addr

; Function Attrs: nofree willreturn
declare double @ldexp(double, i32) local_unnamed_addr #15

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smax.i32(i32, i32) #14

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.maxnum.f32(float, float) #14

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smin.i32(i32, i32) #14

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i16 @llvm.umax.i16(i16, i16) #14

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.umax.i32(i32, i32) #14

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.umin.i32(i32, i32) #14

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.vector.reduce.fadd.v4f32(float, <4 x float>) #14

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <8 x i32> @llvm.smax.v8i32(<8 x i32>, <8 x i32>) #14

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.vector.reduce.smax.v8i32(<8 x i32>) #14

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <4 x i32> @llvm.smax.v4i32(<4 x i32>, <4 x i32>) #14

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.vector.reduce.smax.v4i32(<4 x i32>) #14

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.vector.reduce.add.v4i32(<4 x i32>) #14

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <2 x float> @llvm.fabs.v2f32(<2 x float>) #14

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <2 x float> @llvm.sqrt.v2f32(<2 x float>) #14

attributes #0 = { mustprogress nofree nosync nounwind sspstrong willreturn memory(argmem: readwrite) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #1 = { mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #2 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #3 = { nounwind sspstrong uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #4 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #5 = { "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #6 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #7 = { mustprogress nofree nosync nounwind sspstrong willreturn memory(readwrite, inaccessiblemem: none) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #8 = { nofree nounwind "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #9 = { mustprogress nofree nosync nounwind willreturn memory(none) "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #10 = { mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(read, inaccessiblemem: none) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #11 = { nofree "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #12 = { mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #13 = { nofree nosync nounwind sspstrong memory(readwrite, inaccessiblemem: none) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #14 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #15 = { nofree willreturn }
attributes #16 = { nounwind }
attributes #17 = { nounwind willreturn memory(none) }
attributes #18 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{!"clang version 17.0.6"}
!5 = !{!6, !11, i64 200}
!6 = !{!"LampRen", !7, i64 0, !7, i64 8, !10, i64 16, !10, i64 20, !10, i64 24, !8, i64 28, !11, i64 40, !12, i64 44, !10, i64 48, !10, i64 52, !10, i64 56, !10, i64 60, !10, i64 64, !10, i64 68, !10, i64 72, !10, i64 76, !10, i64 80, !12, i64 84, !10, i64 88, !10, i64 92, !8, i64 96, !10, i64 108, !10, i64 112, !10, i64 116, !10, i64 120, !10, i64 124, !10, i64 128, !11, i64 132, !10, i64 136, !10, i64 140, !7, i64 144, !11, i64 152, !11, i64 154, !10, i64 156, !11, i64 160, !11, i64 162, !11, i64 164, !11, i64 166, !11, i64 168, !10, i64 172, !10, i64 176, !10, i64 180, !10, i64 184, !11, i64 188, !11, i64 190, !11, i64 192, !11, i64 194, !11, i64 196, !11, i64 198, !11, i64 200, !8, i64 202, !8, i64 204, !10, i64 208, !10, i64 212, !10, i64 216, !10, i64 220, !7, i64 224, !7, i64 232, !7, i64 240, !8, i64 248, !10, i64 284, !8, i64 288, !10, i64 300, !8, i64 304, !8, i64 368, !8, i64 404, !10, i64 500, !7, i64 504, !8, i64 512, !8, i64 520, !12, i64 664, !12, i64 668}
!7 = !{!"any pointer", !8, i64 0}
!8 = !{!"omnipotent char", !9, i64 0}
!9 = !{!"Simple C/C++ TBAA"}
!10 = !{!"float", !8, i64 0}
!11 = !{!"short", !8, i64 0}
!12 = !{!"int", !8, i64 0}
!13 = !{!10, !10, i64 0}
!14 = !{!6, !10, i64 24}
!15 = !{!6, !10, i64 500}
!16 = !{!7, !7, i64 0}
!17 = !{!18, !7, i64 1096}
!18 = !{!"Render", !7, i64 0, !7, i64 8, !8, i64 16, !12, i64 92, !11, i64 96, !11, i64 98, !11, i64 100, !11, i64 102, !8, i64 104, !7, i64 112, !7, i64 120, !19, i64 128, !12, i64 144, !12, i64 148, !12, i64 152, !20, i64 156, !21, i64 172, !10, i64 188, !10, i64 192, !10, i64 196, !12, i64 200, !12, i64 204, !12, i64 208, !12, i64 212, !10, i64 216, !10, i64 220, !10, i64 224, !10, i64 228, !10, i64 232, !10, i64 236, !8, i64 240, !8, i64 252, !8, i64 288, !8, i64 352, !8, i64 416, !8, i64 480, !10, i64 544, !10, i64 548, !7, i64 552, !8, i64 560, !8, i64 816, !7, i64 1072, !8, i64 1080, !7, i64 1088, !7, i64 1096, !22, i64 1104, !29, i64 5088, !7, i64 5616, !12, i64 5624, !12, i64 5628, !19, i64 5632, !7, i64 5648, !7, i64 5656, !7, i64 5664, !7, i64 5672, !10, i64 5680, !7, i64 5688, !19, i64 5696, !10, i64 5712, !10, i64 5716, !12, i64 5720, !12, i64 5724, !12, i64 5728, !12, i64 5732, !12, i64 5736, !7, i64 5744, !19, i64 5752, !19, i64 5768, !19, i64 5784, !7, i64 5800, !19, i64 5808, !12, i64 5824, !7, i64 5832, !7, i64 5840, !7, i64 5848, !7, i64 5856, !7, i64 5864, !19, i64 5872, !7, i64 5888, !19, i64 5896, !19, i64 5912, !7, i64 5928, !7, i64 5936, !7, i64 5944, !7, i64 5952, !7, i64 5960, !7, i64 5968, !7, i64 5976, !7, i64 5984, !7, i64 5992, !7, i64 6000, !7, i64 6008, !7, i64 6016, !7, i64 6024, !7, i64 6032, !7, i64 6040, !7, i64 6048, !7, i64 6056, !31, i64 6064, !7, i64 6216, !7, i64 6224, !7, i64 6232}
!19 = !{!"ListBase", !7, i64 0, !7, i64 8}
!20 = !{!"rcti", !12, i64 0, !12, i64 4, !12, i64 8, !12, i64 12}
!21 = !{!"rctf", !10, i64 0, !10, i64 4, !10, i64 8, !10, i64 12}
!22 = !{!"RenderData", !23, i64 0, !7, i64 248, !7, i64 256, !26, i64 264, !27, i64 328, !12, i64 400, !12, i64 404, !12, i64 408, !10, i64 412, !12, i64 416, !12, i64 420, !12, i64 424, !12, i64 428, !11, i64 432, !11, i64 434, !10, i64 436, !10, i64 440, !10, i64 444, !10, i64 448, !10, i64 452, !11, i64 456, !11, i64 458, !11, i64 460, !11, i64 462, !11, i64 464, !11, i64 466, !12, i64 468, !11, i64 472, !11, i64 474, !11, i64 476, !11, i64 478, !11, i64 480, !11, i64 482, !12, i64 484, !12, i64 488, !11, i64 492, !11, i64 494, !12, i64 496, !12, i64 500, !11, i64 504, !11, i64 506, !11, i64 508, !11, i64 510, !11, i64 512, !8, i64 514, !8, i64 515, !12, i64 516, !12, i64 520, !12, i64 524, !11, i64 528, !11, i64 530, !11, i64 532, !11, i64 534, !11, i64 536, !11, i64 538, !11, i64 540, !11, i64 542, !21, i64 544, !21, i64 560, !20, i64 576, !19, i64 592, !11, i64 608, !11, i64 610, !10, i64 612, !10, i64 616, !10, i64 620, !10, i64 624, !12, i64 628, !10, i64 632, !10, i64 636, !10, i64 640, !10, i64 644, !11, i64 648, !11, i64 650, !11, i64 652, !11, i64 654, !11, i64 656, !11, i64 658, !10, i64 660, !10, i64 664, !11, i64 668, !11, i64 670, !10, i64 672, !10, i64 676, !8, i64 680, !12, i64 1704, !11, i64 1708, !11, i64 1710, !8, i64 1712, !8, i64 2480, !8, i64 2496, !8, i64 2512, !8, i64 2513, !8, i64 2514, !8, i64 2515, !12, i64 2520, !11, i64 2524, !11, i64 2526, !10, i64 2528, !10, i64 2532, !11, i64 2536, !11, i64 2538, !10, i64 2540, !11, i64 2544, !11, i64 2546, !12, i64 2548, !11, i64 2552, !11, i64 2554, !11, i64 2556, !11, i64 2558, !10, i64 2560, !10, i64 2564, !7, i64 2568, !12, i64 2576, !10, i64 2580, !8, i64 2584, !28, i64 2616, !12, i64 3976, !12, i64 3980}
!23 = !{!"ImageFormatData", !8, i64 0, !8, i64 1, !8, i64 2, !8, i64 3, !8, i64 4, !8, i64 5, !8, i64 6, !8, i64 7, !11, i64 8, !11, i64 10, !10, i64 12, !8, i64 16, !8, i64 17, !8, i64 18, !24, i64 24, !25, i64 184}
!24 = !{!"ColorManagedViewSettings", !12, i64 0, !12, i64 4, !8, i64 8, !8, i64 72, !10, i64 136, !10, i64 140, !7, i64 144, !7, i64 152}
!25 = !{!"ColorManagedDisplaySettings", !8, i64 0}
!26 = !{!"QuicktimeCodecSettings", !12, i64 0, !12, i64 4, !12, i64 8, !12, i64 12, !12, i64 16, !12, i64 20, !12, i64 24, !12, i64 28, !12, i64 32, !12, i64 36, !12, i64 40, !12, i64 44, !11, i64 48, !11, i64 50, !12, i64 52, !12, i64 56, !12, i64 60}
!27 = !{!"FFMpegCodecData", !12, i64 0, !12, i64 4, !12, i64 8, !12, i64 12, !12, i64 16, !12, i64 20, !12, i64 24, !12, i64 28, !10, i64 32, !12, i64 36, !12, i64 40, !12, i64 44, !12, i64 48, !12, i64 52, !12, i64 56, !12, i64 60, !7, i64 64}
!28 = !{!"BakeData", !23, i64 0, !8, i64 248, !11, i64 1272, !11, i64 1274, !11, i64 1276, !11, i64 1278, !10, i64 1280, !10, i64 1284, !8, i64 1288, !8, i64 1291, !8, i64 1292, !8, i64 1293, !8, i64 1296}
!29 = !{!"World", !30, i64 0, !7, i64 120, !11, i64 128, !11, i64 130, !11, i64 132, !11, i64 134, !10, i64 136, !10, i64 140, !10, i64 144, !10, i64 148, !10, i64 152, !10, i64 156, !10, i64 160, !10, i64 164, !10, i64 168, !10, i64 172, !10, i64 176, !10, i64 180, !10, i64 184, !10, i64 188, !10, i64 192, !10, i64 196, !11, i64 200, !11, i64 202, !11, i64 204, !11, i64 206, !11, i64 208, !11, i64 210, !11, i64 212, !11, i64 214, !10, i64 216, !10, i64 220, !10, i64 224, !10, i64 228, !10, i64 232, !10, i64 236, !10, i64 240, !10, i64 244, !10, i64 248, !10, i64 252, !10, i64 256, !10, i64 260, !11, i64 264, !11, i64 266, !11, i64 268, !11, i64 270, !10, i64 272, !10, i64 276, !10, i64 280, !10, i64 284, !11, i64 288, !11, i64 290, !11, i64 292, !11, i64 294, !10, i64 296, !10, i64 300, !10, i64 304, !10, i64 308, !10, i64 312, !10, i64 316, !10, i64 320, !11, i64 324, !11, i64 326, !11, i64 328, !11, i64 330, !11, i64 332, !11, i64 334, !7, i64 336, !7, i64 344, !7, i64 352, !8, i64 360, !11, i64 504, !11, i64 506, !8, i64 508, !7, i64 512, !7, i64 520}
!30 = !{!"ID", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !8, i64 32, !11, i64 98, !12, i64 100, !12, i64 104, !12, i64 108, !7, i64 112}
!31 = !{!"RenderStats", !12, i64 0, !12, i64 4, !12, i64 8, !12, i64 12, !12, i64 16, !12, i64 20, !12, i64 24, !11, i64 28, !11, i64 30, !11, i64 32, !11, i64 34, !11, i64 36, !11, i64 38, !8, i64 40, !32, i64 48, !32, i64 56, !7, i64 64, !7, i64 72, !8, i64 80, !10, i64 144, !10, i64 148}
!32 = !{!"double", !8, i64 0}
!33 = !{!34, !7, i64 136}
!34 = !{!"Scene", !30, i64 0, !7, i64 120, !7, i64 128, !7, i64 136, !7, i64 144, !19, i64 152, !7, i64 168, !7, i64 176, !8, i64 184, !8, i64 196, !8, i64 208, !8, i64 220, !12, i64 232, !12, i64 236, !12, i64 240, !11, i64 244, !8, i64 246, !8, i64 247, !7, i64 248, !7, i64 256, !7, i64 264, !7, i64 272, !22, i64 280, !35, i64 4264, !19, i64 4296, !19, i64 4312, !7, i64 4328, !7, i64 4336, !7, i64 4344, !7, i64 4352, !7, i64 4360, !7, i64 4368, !11, i64 4376, !11, i64 4378, !12, i64 4380, !19, i64 4384, !36, i64 4400, !37, i64 4416, !40, i64 4600, !7, i64 4608, !41, i64 4616, !7, i64 4640, !42, i64 4648, !42, i64 4656, !24, i64 4664, !25, i64 4824, !43, i64 4888, !7, i64 4952}
!35 = !{!"AudioData", !12, i64 0, !10, i64 4, !10, i64 8, !10, i64 12, !12, i64 16, !11, i64 20, !11, i64 22, !10, i64 24, !10, i64 28}
!36 = !{!"GameFraming", !8, i64 0, !8, i64 12, !8, i64 13, !8, i64 14, !8, i64 15}
!37 = !{!"GameData", !36, i64 0, !11, i64 16, !11, i64 18, !11, i64 20, !11, i64 22, !11, i64 24, !11, i64 26, !11, i64 28, !11, i64 30, !11, i64 32, !8, i64 34, !38, i64 40, !11, i64 64, !11, i64 66, !10, i64 68, !39, i64 72, !10, i64 128, !10, i64 132, !12, i64 136, !11, i64 140, !11, i64 142, !11, i64 144, !11, i64 146, !11, i64 148, !11, i64 150, !11, i64 152, !11, i64 154, !11, i64 156, !11, i64 158, !11, i64 160, !11, i64 162, !10, i64 164, !10, i64 168, !10, i64 172, !10, i64 176, !10, i64 180}
!38 = !{!"GameDome", !11, i64 0, !11, i64 2, !11, i64 4, !11, i64 6, !10, i64 8, !10, i64 12, !7, i64 16}
!39 = !{!"RecastData", !10, i64 0, !10, i64 4, !10, i64 8, !10, i64 12, !10, i64 16, !10, i64 20, !10, i64 24, !10, i64 28, !10, i64 32, !10, i64 36, !12, i64 40, !10, i64 44, !10, i64 48, !11, i64 52, !11, i64 54}
!40 = !{!"UnitSettings", !10, i64 0, !8, i64 4, !8, i64 5, !11, i64 6}
!41 = !{!"PhysicsSettings", !8, i64 0, !12, i64 12, !12, i64 16, !12, i64 20}
!42 = !{!"long", !8, i64 0}
!43 = !{!"ColorManagedColorspaceSettings", !8, i64 0}
!44 = !{i64 0, i64 8, !16, i64 8, i64 8, !16, i64 16, i64 8, !16, i64 24, i64 8, !16, i64 32, i64 66, !45, i64 98, i64 2, !46, i64 100, i64 4, !47, i64 104, i64 4, !47, i64 108, i64 4, !47, i64 112, i64 8, !16, i64 120, i64 8, !16, i64 128, i64 2, !46, i64 130, i64 2, !46, i64 132, i64 2, !46, i64 134, i64 2, !46, i64 136, i64 4, !13, i64 140, i64 4, !13, i64 144, i64 4, !13, i64 148, i64 4, !13, i64 152, i64 4, !13, i64 156, i64 4, !13, i64 160, i64 4, !13, i64 164, i64 4, !13, i64 168, i64 4, !13, i64 172, i64 4, !13, i64 176, i64 4, !13, i64 180, i64 4, !13, i64 184, i64 4, !13, i64 188, i64 4, !13, i64 192, i64 4, !13, i64 196, i64 4, !13, i64 200, i64 2, !46, i64 202, i64 2, !46, i64 204, i64 2, !46, i64 206, i64 2, !46, i64 208, i64 2, !46, i64 210, i64 2, !46, i64 212, i64 2, !46, i64 214, i64 2, !46, i64 216, i64 4, !13, i64 220, i64 4, !13, i64 224, i64 4, !13, i64 228, i64 4, !13, i64 232, i64 4, !13, i64 236, i64 4, !13, i64 240, i64 4, !13, i64 244, i64 4, !13, i64 248, i64 4, !13, i64 252, i64 4, !13, i64 256, i64 4, !13, i64 260, i64 4, !13, i64 264, i64 2, !46, i64 266, i64 2, !46, i64 268, i64 2, !46, i64 270, i64 2, !46, i64 272, i64 4, !13, i64 276, i64 4, !13, i64 280, i64 4, !13, i64 284, i64 4, !13, i64 288, i64 2, !46, i64 290, i64 2, !46, i64 292, i64 2, !46, i64 294, i64 2, !46, i64 296, i64 4, !13, i64 300, i64 4, !13, i64 304, i64 4, !13, i64 308, i64 4, !13, i64 312, i64 4, !13, i64 316, i64 4, !13, i64 320, i64 4, !13, i64 324, i64 2, !46, i64 326, i64 2, !46, i64 328, i64 2, !46, i64 330, i64 2, !46, i64 332, i64 2, !46, i64 334, i64 2, !46, i64 336, i64 8, !16, i64 344, i64 8, !16, i64 352, i64 8, !16, i64 360, i64 144, !45, i64 504, i64 2, !46, i64 506, i64 2, !46, i64 508, i64 4, !45, i64 512, i64 8, !16, i64 520, i64 8, !16}
!45 = !{!8, !8, i64 0}
!46 = !{!11, !11, i64 0}
!47 = !{!12, !12, i64 0}
!48 = !{!49, !7, i64 16}
!49 = !{!"MTex", !11, i64 0, !11, i64 2, !11, i64 4, !11, i64 6, !7, i64 8, !7, i64 16, !8, i64 24, !8, i64 88, !8, i64 89, !8, i64 90, !8, i64 91, !8, i64 92, !8, i64 104, !10, i64 116, !11, i64 120, !11, i64 122, !11, i64 124, !11, i64 126, !11, i64 128, !11, i64 130, !8, i64 132, !8, i64 133, !10, i64 140, !10, i64 144, !10, i64 148, !10, i64 152, !10, i64 156, !10, i64 160, !10, i64 164, !10, i64 168, !10, i64 172, !10, i64 176, !10, i64 180, !10, i64 184, !10, i64 188, !10, i64 192, !10, i64 196, !10, i64 200, !10, i64 204, !10, i64 208, !10, i64 212, !10, i64 216, !10, i64 220, !10, i64 224, !10, i64 228, !10, i64 232, !10, i64 236, !10, i64 240, !10, i64 244, !10, i64 248, !10, i64 252, !10, i64 256, !10, i64 260, !10, i64 264, !10, i64 268, !10, i64 272, !10, i64 276, !10, i64 280, !10, i64 284, !10, i64 288, !10, i64 292, !10, i64 296, !10, i64 300, !10, i64 304, !10, i64 308}
!50 = !{!18, !11, i64 5288}
!51 = !{!18, !11, i64 98}
!52 = !{!18, !11, i64 5378}
!53 = distinct !{!53, !54}
!54 = !{!"llvm.loop.mustprogress"}
!55 = !{!18, !12, i64 1624}
!56 = !{!18, !11, i64 5418}
!57 = !{!18, !11, i64 5290}
!58 = !{!18, !10, i64 5268}
!59 = !{!18, !10, i64 544}
!60 = !{!18, !10, i64 5308}
!61 = !{!18, !10, i64 548}
!62 = !{!18, !10, i64 5312}
!63 = !{!18, !10, i64 5304}
!64 = !{!18, !10, i64 5264}
!65 = !{!18, !10, i64 5272}
!66 = !{!18, !10, i64 5276}
!67 = !{!18, !11, i64 6100}
!68 = !{!69, !12, i64 2100}
!69 = !{!"Global", !7, i64 0, !8, i64 8, !8, i64 1032, !8, i64 2056, !8, i64 2057, !8, i64 2058, !19, i64 2064, !8, i64 2080, !8, i64 2081, !8, i64 2082, !11, i64 2084, !11, i64 2086, !11, i64 2088, !8, i64 2090, !11, i64 2092, !12, i64 2096, !12, i64 2100, !8, i64 2104, !12, i64 2108, !12, i64 2112, !8, i64 2116}
!70 = !{!18, !12, i64 1620}
!71 = !{!6, !7, i64 240}
!72 = !{!6, !7, i64 504}
!73 = !{!6, !7, i64 224}
!74 = !{!6, !7, i64 144}
!75 = distinct !{!75, !54}
!76 = !{!18, !7, i64 5840}
!77 = !{!18, !7, i64 1088}
!78 = !{!18, !7, i64 5424}
!79 = !{!29, !7, i64 336}
!80 = !{!18, !7, i64 5432}
!81 = !{!29, !7, i64 344}
!82 = !{!18, !7, i64 5832}
!83 = !{!34, !12, i64 796}
!84 = !{!18, !7, i64 5928}
!85 = !{!18, !12, i64 5624}
!86 = !{!18, !8, i64 104}
!87 = !{!18, !7, i64 6128}
!88 = !{!34, !12, i64 680}
!89 = !{!18, !12, i64 6064}
!90 = !{!18, !11, i64 6098}
!91 = !{!18, !7, i64 6232}
!92 = !{!18, !11, i64 5416}
!93 = !{!18, !7, i64 6048}
!94 = !{!18, !7, i64 6056}
!95 = !{!96, !11, i64 98}
!96 = !{!"Group", !30, i64 0, !19, i64 120, !12, i64 136, !8, i64 140}
!97 = distinct !{!97, !54}
!98 = !{!99, !7, i64 784}
!99 = !{!"Material", !30, i64 0, !7, i64 120, !11, i64 128, !11, i64 130, !10, i64 132, !10, i64 136, !10, i64 140, !10, i64 144, !10, i64 148, !10, i64 152, !10, i64 156, !10, i64 160, !10, i64 164, !10, i64 168, !10, i64 172, !10, i64 176, !10, i64 180, !10, i64 184, !10, i64 188, !10, i64 192, !10, i64 196, !10, i64 200, !10, i64 204, !10, i64 208, !10, i64 212, !10, i64 216, !10, i64 220, !100, i64 224, !101, i64 312, !10, i64 328, !10, i64 332, !10, i64 336, !10, i64 340, !10, i64 344, !10, i64 348, !10, i64 352, !11, i64 356, !11, i64 358, !11, i64 360, !8, i64 362, !8, i64 363, !10, i64 364, !10, i64 368, !11, i64 372, !11, i64 374, !10, i64 376, !10, i64 380, !10, i64 384, !10, i64 388, !11, i64 392, !11, i64 394, !12, i64 396, !12, i64 400, !12, i64 404, !12, i64 408, !11, i64 412, !11, i64 414, !11, i64 416, !11, i64 418, !10, i64 420, !10, i64 424, !10, i64 428, !10, i64 432, !10, i64 436, !10, i64 440, !10, i64 444, !10, i64 448, !10, i64 452, !10, i64 456, !8, i64 460, !10, i64 524, !10, i64 528, !10, i64 532, !12, i64 536, !8, i64 540, !8, i64 541, !8, i64 542, !8, i64 543, !11, i64 544, !11, i64 546, !11, i64 548, !8, i64 550, !8, i64 551, !11, i64 552, !11, i64 554, !10, i64 556, !10, i64 560, !8, i64 564, !10, i64 580, !10, i64 584, !11, i64 588, !11, i64 590, !7, i64 592, !7, i64 600, !8, i64 608, !8, i64 609, !8, i64 610, !8, i64 611, !11, i64 612, !11, i64 614, !10, i64 616, !10, i64 620, !8, i64 624, !7, i64 768, !7, i64 776, !7, i64 784, !7, i64 792, !10, i64 800, !10, i64 804, !10, i64 808, !10, i64 812, !10, i64 816, !11, i64 820, !11, i64 822, !8, i64 824, !8, i64 836, !10, i64 848, !10, i64 852, !10, i64 856, !10, i64 860, !10, i64 864, !10, i64 868, !10, i64 872, !11, i64 876, !11, i64 878, !12, i64 880, !11, i64 884, !11, i64 886, !8, i64 888, !11, i64 904, !11, i64 906, !11, i64 908, !11, i64 910, !11, i64 912, !8, i64 914, !7, i64 920, !19, i64 928}
!100 = !{!"VolumeSettings", !10, i64 0, !10, i64 4, !10, i64 8, !10, i64 12, !8, i64 16, !8, i64 28, !8, i64 40, !10, i64 52, !10, i64 56, !10, i64 60, !11, i64 64, !11, i64 66, !11, i64 68, !11, i64 70, !10, i64 72, !10, i64 76, !10, i64 80, !10, i64 84}
!101 = !{!"GameSettings", !12, i64 0, !12, i64 4, !12, i64 8, !12, i64 12}
!102 = !{!99, !12, i64 396}
!103 = distinct !{!103, !54}
!104 = !{!105, !7, i64 88}
!105 = !{!"SceneRenderLayer", !7, i64 0, !7, i64 8, !8, i64 16, !7, i64 80, !7, i64 88, !12, i64 96, !12, i64 100, !12, i64 104, !12, i64 108, !12, i64 112, !12, i64 116, !12, i64 120, !10, i64 124, !106, i64 128}
!106 = !{!"FreestyleConfig", !19, i64 0, !12, i64 16, !12, i64 20, !12, i64 24, !10, i64 28, !10, i64 32, !10, i64 36, !19, i64 40}
!107 = !{!108, !7, i64 24}
!108 = !{!"GroupObject", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !11, i64 32, !8, i64 34}
!109 = !{!108, !7, i64 16}
!110 = !{!111, !8, i64 1160}
!111 = !{!"Object", !30, i64 0, !7, i64 120, !7, i64 128, !11, i64 136, !11, i64 138, !12, i64 140, !12, i64 144, !12, i64 148, !8, i64 152, !7, i64 216, !7, i64 224, !7, i64 232, !7, i64 240, !7, i64 248, !7, i64 256, !7, i64 264, !7, i64 272, !7, i64 280, !7, i64 288, !7, i64 296, !7, i64 304, !112, i64 312, !7, i64 360, !19, i64 368, !19, i64 384, !19, i64 400, !19, i64 416, !12, i64 432, !12, i64 436, !7, i64 440, !7, i64 448, !12, i64 456, !12, i64 460, !8, i64 464, !8, i64 476, !8, i64 488, !8, i64 500, !8, i64 512, !8, i64 524, !8, i64 536, !8, i64 548, !8, i64 560, !8, i64 576, !8, i64 592, !8, i64 604, !10, i64 616, !10, i64 620, !8, i64 624, !8, i64 688, !8, i64 752, !8, i64 816, !8, i64 880, !12, i64 944, !11, i64 948, !11, i64 950, !11, i64 952, !11, i64 954, !11, i64 956, !11, i64 958, !11, i64 960, !11, i64 962, !11, i64 964, !8, i64 966, !8, i64 967, !12, i64 968, !12, i64 972, !12, i64 976, !12, i64 980, !12, i64 984, !10, i64 988, !10, i64 992, !10, i64 996, !10, i64 1000, !10, i64 1004, !10, i64 1008, !10, i64 1012, !10, i64 1016, !10, i64 1020, !10, i64 1024, !10, i64 1028, !10, i64 1032, !11, i64 1036, !11, i64 1038, !11, i64 1040, !8, i64 1042, !8, i64 1043, !11, i64 1044, !8, i64 1046, !8, i64 1047, !10, i64 1048, !10, i64 1052, !19, i64 1056, !19, i64 1072, !19, i64 1088, !19, i64 1104, !10, i64 1120, !11, i64 1124, !11, i64 1126, !8, i64 1128, !12, i64 1144, !12, i64 1148, !7, i64 1152, !8, i64 1160, !8, i64 1161, !11, i64 1162, !8, i64 1164, !19, i64 1176, !19, i64 1192, !19, i64 1208, !19, i64 1224, !7, i64 1240, !7, i64 1248, !7, i64 1256, !8, i64 1264, !8, i64 1265, !11, i64 1266, !10, i64 1268, !7, i64 1272, !7, i64 1280, !7, i64 1288, !7, i64 1296, !42, i64 1304, !42, i64 1312, !12, i64 1320, !12, i64 1324, !19, i64 1328, !19, i64 1344, !7, i64 1360, !7, i64 1368, !7, i64 1376, !8, i64 1384, !7, i64 1392, !19, i64 1400, !7, i64 1416}
!112 = !{!"bAnimVizSettings", !12, i64 0, !12, i64 4, !12, i64 8, !12, i64 12, !11, i64 16, !11, i64 18, !11, i64 20, !11, i64 22, !11, i64 24, !11, i64 26, !11, i64 28, !11, i64 30, !12, i64 32, !12, i64 36, !12, i64 40, !12, i64 44}
!113 = !{!111, !8, i64 1046}
!114 = !{!111, !12, i64 944}
!115 = !{!111, !11, i64 136}
!116 = distinct !{!116, !54}
!117 = distinct !{!117, !54}
!118 = distinct !{!118, !54}
!119 = distinct !{!119, !54}
!120 = !{!18, !12, i64 5736}
!121 = !{!18, !12, i64 6084}
!122 = !{!18, !7, i64 6000}
!123 = !{!18, !7, i64 6008}
!124 = !{!111, !11, i64 948}
!125 = !{!111, !11, i64 952}
!126 = distinct !{!126, !54}
!127 = !{!128, !7, i64 32}
!128 = !{!"Base", !7, i64 0, !7, i64 8, !12, i64 16, !12, i64 20, !12, i64 24, !11, i64 28, !11, i64 30, !7, i64 32}
!129 = !{!105, !12, i64 112}
!130 = !{!105, !12, i64 96}
!131 = distinct !{!131, !54}
!132 = !{!111, !7, i64 1224}
!133 = !{!128, !12, i64 16}
!134 = !{!135, !7, i64 8}
!135 = !{!"DupliApplyData", !12, i64 0, !7, i64 8}
!136 = !{!137, !7, i64 16}
!137 = !{!"DupliObject", !7, i64 0, !7, i64 8, !7, i64 16, !8, i64 24, !8, i64 88, !8, i64 100, !11, i64 108, !8, i64 110, !8, i64 111, !8, i64 112, !7, i64 144}
!138 = !{!137, !8, i64 110}
!139 = !{!99, !11, i64 128}
!140 = distinct !{!140, !54}
!141 = !{!142, !7, i64 16}
!142 = !{!"ParticleSystem", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !7, i64 32, !7, i64 40, !7, i64 48, !7, i64 56, !7, i64 64, !19, i64 72, !19, i64 88, !7, i64 104, !7, i64 112, !7, i64 120, !7, i64 128, !7, i64 136, !7, i64 144, !19, i64 152, !8, i64 168, !8, i64 232, !10, i64 296, !10, i64 300, !10, i64 304, !12, i64 308, !12, i64 312, !12, i64 316, !12, i64 320, !12, i64 324, !12, i64 328, !12, i64 332, !12, i64 336, !11, i64 340, !11, i64 342, !11, i64 344, !11, i64 346, !8, i64 348, !8, i64 540, !11, i64 564, !11, i64 566, !7, i64 568, !7, i64 576, !19, i64 584, !7, i64 600, !7, i64 608, !12, i64 616, !12, i64 620, !7, i64 624, !7, i64 632, !7, i64 640, !10, i64 648, !10, i64 652}
!143 = !{!144, !11, i64 192}
!144 = !{!"ParticleSettings", !30, i64 0, !7, i64 120, !7, i64 128, !7, i64 136, !7, i64 144, !12, i64 152, !12, i64 156, !11, i64 160, !11, i64 162, !11, i64 164, !11, i64 166, !11, i64 168, !11, i64 170, !11, i64 172, !11, i64 174, !12, i64 176, !12, i64 180, !11, i64 184, !11, i64 186, !11, i64 188, !11, i64 190, !11, i64 192, !11, i64 194, !11, i64 196, !11, i64 198, !11, i64 200, !11, i64 202, !11, i64 204, !11, i64 206, !11, i64 208, !11, i64 210, !11, i64 212, !11, i64 214, !11, i64 216, !11, i64 218, !11, i64 220, !11, i64 222, !11, i64 224, !11, i64 226, !11, i64 228, !11, i64 230, !10, i64 232, !10, i64 236, !8, i64 240, !8, i64 248, !10, i64 256, !10, i64 260, !10, i64 264, !11, i64 268, !11, i64 270, !10, i64 272, !10, i64 276, !10, i64 280, !10, i64 284, !10, i64 288, !10, i64 292, !10, i64 296, !10, i64 300, !10, i64 304, !10, i64 308, !10, i64 312, !10, i64 316, !8, i64 320, !12, i64 324, !12, i64 328, !12, i64 332, !12, i64 336, !11, i64 340, !8, i64 342, !10, i64 348, !10, i64 352, !10, i64 356, !10, i64 360, !10, i64 364, !10, i64 368, !10, i64 372, !8, i64 376, !10, i64 388, !10, i64 392, !10, i64 396, !10, i64 400, !10, i64 404, !10, i64 408, !10, i64 412, !8, i64 416, !10, i64 428, !10, i64 432, !10, i64 436, !10, i64 440, !12, i64 444, !12, i64 448, !10, i64 452, !10, i64 456, !10, i64 460, !10, i64 464, !10, i64 468, !10, i64 472, !10, i64 476, !10, i64 480, !10, i64 484, !10, i64 488, !10, i64 492, !10, i64 496, !10, i64 500, !10, i64 504, !10, i64 508, !10, i64 512, !10, i64 516, !10, i64 520, !10, i64 524, !10, i64 528, !10, i64 532, !10, i64 536, !10, i64 540, !10, i64 544, !10, i64 548, !8, i64 552, !10, i64 560, !10, i64 564, !12, i64 568, !12, i64 572, !8, i64 576, !7, i64 720, !19, i64 728, !7, i64 744, !7, i64 752, !7, i64 760, !7, i64 768, !7, i64 776, !7, i64 784, !11, i64 792, !8, i64 794}
!145 = distinct !{!145, !54}
!146 = !{!137, !11, i64 108}
!147 = !{!137, !8, i64 111}
!148 = !{!149, !7, i64 16}
!149 = !{!"ObjectRen", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !7, i64 32, !12, i64 40, !12, i64 44, !12, i64 48, !12, i64 52, !8, i64 56, !12, i64 80, !12, i64 84, !12, i64 88, !12, i64 92, !12, i64 96, !12, i64 100, !12, i64 104, !12, i64 108, !7, i64 112, !7, i64 120, !7, i64 128, !7, i64 136, !7, i64 144, !7, i64 152, !7, i64 160, !12, i64 168, !12, i64 172, !12, i64 176, !8, i64 180, !7, i64 248, !7, i64 256, !7, i64 264, !7, i64 272}
!150 = !{!149, !12, i64 44}
!151 = !{!149, !12, i64 48}
!152 = distinct !{!152, !54}
!153 = distinct !{!153, !54}
!154 = distinct !{!154, !54}
!155 = distinct !{!155, !54}
!156 = distinct !{!156, !54}
!157 = !{!18, !12, i64 5728}
!158 = !{!18, !7, i64 5744}
!159 = !{!149, !7, i64 136}
!160 = distinct !{!160, !54}
!161 = !{!149, !12, i64 92}
!162 = distinct !{!162, !54}
!163 = distinct !{!163, !54, !164}
!164 = !{!"llvm.loop.unswitch.partial.disable"}
!165 = !{!166, !7, i64 16}
!166 = !{!"ObjectInstanceRen", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !7, i64 32, !12, i64 40, !12, i64 44, !12, i64 48, !8, i64 52, !8, i64 116, !8, i64 180, !11, i64 216, !8, i64 220, !8, i64 232, !7, i64 240, !7, i64 248, !7, i64 256, !12, i64 264, !7, i64 272, !12, i64 280}
!167 = !{!168, !7, i64 24}
!168 = !{!"VolumeOb", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24}
!169 = !{!168, !7, i64 16}
!170 = !{!171, !7, i64 16}
!171 = !{!"MatInside", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24}
!172 = !{!171, !7, i64 24}
!173 = distinct !{!173, !54}
!174 = !{i64 0, i64 8, !16, i64 8, i64 8, !16}
!175 = !{!19, !7, i64 0}
!176 = !{!166, !12, i64 48}
!177 = !{!149, !12, i64 80}
!178 = !{!166, !12, i64 264}
!179 = !{!166, !7, i64 24}
!180 = !{!166, !7, i64 32}
!181 = !{!166, !12, i64 40}
!182 = !{!166, !12, i64 44}
!183 = distinct !{!183, !54}
!184 = !{!185, !7, i64 112}
!185 = !{!"FluidsimModifierData", !186, i64 0, !7, i64 112, !7, i64 120}
!186 = !{!"ModifierData", !7, i64 0, !7, i64 8, !12, i64 16, !12, i64 20, !12, i64 24, !12, i64 28, !8, i64 32, !7, i64 96, !7, i64 104}
!187 = !{!188, !11, i64 16}
!188 = !{!"FluidsimSettings", !7, i64 0, !12, i64 8, !12, i64 12, !11, i64 16, !11, i64 18, !11, i64 20, !11, i64 22, !10, i64 24, !11, i64 28, !11, i64 30, !10, i64 32, !11, i64 36, !11, i64 38, !8, i64 40, !10, i64 52, !10, i64 56, !12, i64 60, !12, i64 64, !12, i64 68, !12, i64 72, !10, i64 76, !12, i64 80, !10, i64 84, !10, i64 88, !10, i64 92, !7, i64 96, !7, i64 104, !8, i64 112, !8, i64 1136, !8, i64 1148, !7, i64 1160, !11, i64 1168, !8, i64 1170, !8, i64 1171, !10, i64 1172, !12, i64 1176, !10, i64 1180, !10, i64 1184, !12, i64 1188, !12, i64 1192, !10, i64 1196, !10, i64 1200, !10, i64 1204, !7, i64 1208, !12, i64 1216, !10, i64 1220, !10, i64 1224, !10, i64 1228, !10, i64 1232, !10, i64 1236, !10, i64 1240, !10, i64 1244, !12, i64 1248, !10, i64 1252}
!189 = !{!188, !7, i64 1208}
!190 = !{!188, !12, i64 1216}
!191 = !{!166, !11, i64 216}
!192 = distinct !{!192, !54, !193, !194}
!193 = !{!"llvm.loop.isvectorized", i32 1}
!194 = !{!"llvm.loop.unroll.runtime.disable"}
!195 = distinct !{!195, !54, !194, !193}
!196 = !{!149, !7, i64 112}
!197 = !{!198, !7, i64 0}
!198 = !{!"VertTableNode", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !7, i64 32, !7, i64 40, !7, i64 48}
!199 = distinct !{!199, !54}
!200 = !{!166, !7, i64 256}
!201 = !{!18, !12, i64 148}
!202 = !{!18, !12, i64 152}
!203 = distinct !{!203, !54}
!204 = !{!149, !7, i64 128}
!205 = !{!149, !7, i64 144}
!206 = !{!207, !7, i64 56}
!207 = !{!"StrandBuffer", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !12, i64 32, !12, i64 36, !7, i64 40, !7, i64 48, !7, i64 56, !12, i64 64, !12, i64 68, !12, i64 72, !12, i64 76, !10, i64 80, !10, i64 84, !10, i64 88, !10, i64 92, !8, i64 96, !12, i64 160, !12, i64 164}
!208 = !{!209, !7, i64 304}
!209 = !{!"StrandSurface", !7, i64 0, !7, i64 8, !149, i64 16, !7, i64 296, !7, i64 304, !7, i64 312, !7, i64 320, !7, i64 328, !7, i64 336, !7, i64 344, !12, i64 352, !12, i64 356}
!210 = !{!209, !7, i64 336}
!211 = !{!209, !7, i64 344}
!212 = !{!209, !12, i64 352}
!213 = distinct !{!213, !54}
!214 = !{!149, !12, i64 88}
!215 = !{!216, !7, i64 0}
!216 = !{!"StrandTableNode", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !7, i64 32, !7, i64 40, !7, i64 48, !12, i64 56, !12, i64 60}
!217 = !{!209, !12, i64 356}
!218 = !{!209, !7, i64 296}
!219 = !{!220, !7, i64 0}
!220 = !{!"StrandRen", !7, i64 0, !7, i64 8, !12, i64 16, !12, i64 20, !12, i64 24, !12, i64 28, !8, i64 32}
!221 = distinct !{!221, !54}
!222 = !{!166, !7, i64 0}
!223 = distinct !{!223, !54}
!224 = distinct !{!224, !54}
!225 = distinct !{!225, !54}
!226 = distinct !{!226, !54}
!227 = !{!21, !10, i64 0}
!228 = !{!21, !10, i64 4}
!229 = !{!21, !10, i64 8}
!230 = !{!21, !10, i64 12}
!231 = distinct !{!231, !54}
!232 = distinct !{!232, !54}
!233 = !{i64 0, i64 1, !45, i64 1, i64 1, !45, i64 2, i64 1, !45, i64 3, i64 1, !45, i64 4, i64 1, !45, i64 5, i64 1, !45, i64 6, i64 1, !45, i64 7, i64 1, !45, i64 8, i64 2, !46, i64 10, i64 2, !46, i64 12, i64 4, !13, i64 16, i64 1, !45, i64 17, i64 1, !45, i64 18, i64 6, !45, i64 24, i64 4, !47, i64 28, i64 4, !47, i64 32, i64 64, !45, i64 96, i64 64, !45, i64 160, i64 4, !13, i64 164, i64 4, !13, i64 168, i64 8, !16, i64 176, i64 8, !16, i64 184, i64 64, !45, i64 248, i64 8, !16, i64 256, i64 8, !16, i64 264, i64 4, !47, i64 268, i64 4, !47, i64 272, i64 4, !47, i64 276, i64 4, !47, i64 280, i64 4, !47, i64 284, i64 4, !47, i64 288, i64 4, !47, i64 292, i64 4, !47, i64 296, i64 4, !47, i64 300, i64 4, !47, i64 304, i64 4, !47, i64 308, i64 4, !47, i64 312, i64 2, !46, i64 314, i64 2, !46, i64 316, i64 4, !47, i64 320, i64 4, !47, i64 324, i64 4, !47, i64 328, i64 4, !47, i64 332, i64 4, !47, i64 336, i64 4, !47, i64 340, i64 4, !47, i64 344, i64 4, !47, i64 348, i64 4, !47, i64 352, i64 4, !47, i64 356, i64 4, !47, i64 360, i64 4, !13, i64 364, i64 4, !47, i64 368, i64 4, !47, i64 372, i64 4, !47, i64 376, i64 4, !47, i64 380, i64 4, !47, i64 384, i64 4, !47, i64 388, i64 4, !47, i64 392, i64 8, !16, i64 400, i64 4, !47, i64 404, i64 4, !47, i64 408, i64 4, !47, i64 412, i64 4, !13, i64 416, i64 4, !47, i64 420, i64 4, !47, i64 424, i64 4, !47, i64 428, i64 4, !47, i64 432, i64 2, !46, i64 434, i64 2, !46, i64 436, i64 4, !13, i64 440, i64 4, !13, i64 444, i64 4, !13, i64 448, i64 4, !13, i64 452, i64 4, !13, i64 456, i64 2, !46, i64 458, i64 2, !46, i64 460, i64 2, !46, i64 462, i64 2, !46, i64 464, i64 2, !46, i64 466, i64 2, !46, i64 468, i64 4, !47, i64 472, i64 2, !46, i64 474, i64 2, !46, i64 476, i64 2, !46, i64 478, i64 2, !46, i64 480, i64 2, !46, i64 482, i64 2, !46, i64 484, i64 4, !47, i64 488, i64 4, !47, i64 492, i64 2, !46, i64 494, i64 2, !46, i64 496, i64 4, !47, i64 500, i64 4, !47, i64 504, i64 2, !46, i64 506, i64 2, !46, i64 508, i64 2, !46, i64 510, i64 2, !46, i64 512, i64 2, !46, i64 514, i64 1, !45, i64 515, i64 1, !45, i64 516, i64 4, !47, i64 520, i64 4, !47, i64 524, i64 4, !47, i64 528, i64 2, !46, i64 530, i64 2, !46, i64 532, i64 2, !46, i64 534, i64 2, !46, i64 536, i64 2, !46, i64 538, i64 2, !46, i64 540, i64 2, !46, i64 542, i64 2, !46, i64 544, i64 4, !13, i64 548, i64 4, !13, i64 552, i64 4, !13, i64 556, i64 4, !13, i64 560, i64 4, !13, i64 564, i64 4, !13, i64 568, i64 4, !13, i64 572, i64 4, !13, i64 576, i64 4, !47, i64 580, i64 4, !47, i64 584, i64 4, !47, i64 588, i64 4, !47, i64 592, i64 8, !16, i64 600, i64 8, !16, i64 608, i64 2, !46, i64 610, i64 2, !46, i64 612, i64 4, !13, i64 616, i64 4, !13, i64 620, i64 4, !13, i64 624, i64 4, !13, i64 628, i64 4, !47, i64 632, i64 4, !13, i64 636, i64 4, !13, i64 640, i64 4, !13, i64 644, i64 4, !13, i64 648, i64 2, !46, i64 650, i64 2, !46, i64 652, i64 2, !46, i64 654, i64 2, !46, i64 656, i64 2, !46, i64 658, i64 2, !46, i64 660, i64 4, !13, i64 664, i64 4, !13, i64 668, i64 2, !46, i64 670, i64 2, !46, i64 672, i64 4, !13, i64 676, i64 4, !13, i64 680, i64 1024, !45, i64 1704, i64 4, !47, i64 1708, i64 2, !46, i64 1710, i64 2, !46, i64 1712, i64 768, !45, i64 2480, i64 16, !45, i64 2496, i64 16, !45, i64 2512, i64 1, !45, i64 2513, i64 1, !45, i64 2514, i64 1, !45, i64 2515, i64 5, !45, i64 2520, i64 4, !47, i64 2524, i64 2, !46, i64 2526, i64 2, !46, i64 2528, i64 4, !13, i64 2532, i64 4, !13, i64 2536, i64 2, !46, i64 2538, i64 2, !46, i64 2540, i64 4, !13, i64 2544, i64 2, !46, i64 2546, i64 2, !46, i64 2548, i64 4, !47, i64 2552, i64 2, !46, i64 2554, i64 2, !46, i64 2556, i64 2, !46, i64 2558, i64 2, !46, i64 2560, i64 4, !13, i64 2564, i64 4, !13, i64 2568, i64 8, !16, i64 2576, i64 4, !47, i64 2580, i64 4, !13, i64 2584, i64 32, !45, i64 2616, i64 1, !45, i64 2617, i64 1, !45, i64 2618, i64 1, !45, i64 2619, i64 1, !45, i64 2620, i64 1, !45, i64 2621, i64 1, !45, i64 2622, i64 1, !45, i64 2623, i64 1, !45, i64 2624, i64 2, !46, i64 2626, i64 2, !46, i64 2628, i64 4, !13, i64 2632, i64 1, !45, i64 2633, i64 1, !45, i64 2634, i64 6, !45, i64 2640, i64 4, !47, i64 2644, i64 4, !47, i64 2648, i64 64, !45, i64 2712, i64 64, !45, i64 2776, i64 4, !13, i64 2780, i64 4, !13, i64 2784, i64 8, !16, i64 2792, i64 8, !16, i64 2800, i64 64, !45, i64 2864, i64 1024, !45, i64 3888, i64 2, !46, i64 3890, i64 2, !46, i64 3892, i64 2, !46, i64 3894, i64 2, !46, i64 3896, i64 4, !13, i64 3900, i64 4, !13, i64 3904, i64 3, !45, i64 3907, i64 1, !45, i64 3908, i64 1, !45, i64 3909, i64 3, !45, i64 3912, i64 64, !45, i64 3976, i64 4, !47, i64 3980, i64 4, !47}
!234 = !{!18, !11, i64 96}
!235 = !{!18, !7, i64 5888}
!236 = !{!18, !11, i64 1760}
!237 = !{!99, !11, i64 588}
!238 = distinct !{!238, !54}
!239 = !{!166, !7, i64 240}
!240 = !{!144, !12, i64 176}
!241 = !{!142, !7, i64 0}
!242 = distinct !{!242, !54}
!243 = !{!111, !12, i64 456}
!244 = distinct !{!244, !54}
!245 = !{!142, !12, i64 316}
!246 = distinct !{!246, !54}
!247 = !{!32, !32, i64 0}
!248 = distinct !{!248, !54}
!249 = !{!42, !42, i64 0}
!250 = !{!251, !7, i64 1680}
!251 = !{!"DerivedMesh", !252, i64 0, !252, i64 200, !252, i64 400, !252, i64 600, !252, i64 800, !12, i64 1000, !12, i64 1004, !12, i64 1008, !12, i64 1012, !12, i64 1016, !12, i64 1020, !12, i64 1024, !7, i64 1032, !7, i64 1040, !8, i64 1048, !10, i64 1052, !8, i64 1056, !12, i64 1060, !7, i64 1064, !8, i64 1072, !7, i64 1080, !7, i64 1088, !7, i64 1096, !7, i64 1104, !7, i64 1112, !7, i64 1120, !7, i64 1128, !7, i64 1136, !7, i64 1144, !7, i64 1152, !7, i64 1160, !7, i64 1168, !7, i64 1176, !7, i64 1184, !7, i64 1192, !7, i64 1200, !7, i64 1208, !7, i64 1216, !7, i64 1224, !7, i64 1232, !7, i64 1240, !7, i64 1248, !7, i64 1256, !7, i64 1264, !7, i64 1272, !7, i64 1280, !7, i64 1288, !7, i64 1296, !7, i64 1304, !7, i64 1312, !7, i64 1320, !7, i64 1328, !7, i64 1336, !7, i64 1344, !7, i64 1352, !7, i64 1360, !7, i64 1368, !7, i64 1376, !7, i64 1384, !7, i64 1392, !7, i64 1400, !7, i64 1408, !7, i64 1416, !7, i64 1424, !7, i64 1432, !7, i64 1440, !7, i64 1448, !7, i64 1456, !7, i64 1464, !7, i64 1472, !7, i64 1480, !7, i64 1488, !7, i64 1496, !7, i64 1504, !7, i64 1512, !7, i64 1520, !7, i64 1528, !7, i64 1536, !7, i64 1544, !7, i64 1552, !7, i64 1560, !7, i64 1568, !7, i64 1576, !7, i64 1584, !7, i64 1592, !7, i64 1600, !7, i64 1608, !7, i64 1616, !7, i64 1624, !7, i64 1632, !7, i64 1640, !7, i64 1648, !7, i64 1656, !7, i64 1664, !7, i64 1672, !7, i64 1680}
!252 = !{!"CustomData", !7, i64 0, !8, i64 8, !12, i64 172, !12, i64 176, !12, i64 180, !7, i64 184, !7, i64 192}
!253 = !{!254, !11, i64 140}
!254 = !{!"ParticleSystemModifierData", !186, i64 0, !7, i64 112, !7, i64 120, !12, i64 128, !12, i64 132, !12, i64 136, !11, i64 140, !11, i64 142}
!255 = distinct !{!255, !54}
!256 = !{!111, !7, i64 1256}
!257 = distinct !{!257, !54}
!258 = distinct !{!258, !54}
!259 = distinct !{!259, !54}
!260 = !{!111, !7, i64 296}
!261 = !{!262, !12, i64 132}
!262 = !{!"Lamp", !30, i64 0, !7, i64 120, !11, i64 128, !11, i64 130, !12, i64 132, !11, i64 136, !11, i64 138, !10, i64 140, !10, i64 144, !10, i64 148, !10, i64 152, !10, i64 156, !10, i64 160, !10, i64 164, !10, i64 168, !10, i64 172, !10, i64 176, !10, i64 180, !10, i64 184, !10, i64 188, !10, i64 192, !10, i64 196, !7, i64 200, !11, i64 208, !11, i64 210, !10, i64 212, !10, i64 216, !10, i64 220, !10, i64 224, !10, i64 228, !10, i64 232, !10, i64 236, !11, i64 240, !11, i64 242, !11, i64 244, !11, i64 246, !8, i64 248, !8, i64 249, !11, i64 250, !11, i64 252, !11, i64 254, !11, i64 256, !11, i64 258, !10, i64 260, !10, i64 264, !10, i64 268, !10, i64 272, !11, i64 276, !11, i64 278, !11, i64 280, !11, i64 282, !11, i64 284, !11, i64 286, !10, i64 288, !10, i64 292, !10, i64 296, !10, i64 300, !10, i64 304, !10, i64 308, !10, i64 312, !10, i64 316, !10, i64 320, !10, i64 324, !10, i64 328, !10, i64 332, !10, i64 336, !11, i64 340, !8, i64 342, !7, i64 344, !8, i64 352, !11, i64 496, !11, i64 498, !8, i64 500, !7, i64 504, !7, i64 512}
!263 = !{!262, !11, i64 244}
!264 = !{!6, !11, i64 160}
!265 = !{!262, !8, i64 249}
!266 = !{!6, !11, i64 164}
!267 = !{!262, !11, i64 246}
!268 = !{!6, !11, i64 162}
!269 = !{!262, !10, i64 224}
!270 = !{!6, !10, i64 156}
!271 = !{!262, !11, i64 282}
!272 = !{!6, !11, i64 168}
!273 = !{!262, !10, i64 212}
!274 = !{!262, !10, i64 228}
!275 = !{!262, !11, i64 128}
!276 = !{!6, !11, i64 40}
!277 = !{!6, !12, i64 44}
!278 = !{!262, !10, i64 172}
!279 = !{!6, !10, i64 76}
!280 = !{!262, !10, i64 176}
!281 = !{!262, !10, i64 188}
!282 = !{!6, !10, i64 80}
!283 = !{!6, !10, i64 116}
!284 = !{!262, !10, i64 148}
!285 = !{!6, !10, i64 56}
!286 = !{!262, !11, i64 250}
!287 = !{!6, !11, i64 188}
!288 = !{!262, !11, i64 252}
!289 = !{!6, !11, i64 190}
!290 = !{!262, !11, i64 254}
!291 = !{!6, !11, i64 192}
!292 = !{!262, !10, i64 268}
!293 = !{!6, !10, i64 216}
!294 = !{!262, !11, i64 258}
!295 = !{!6, !11, i64 198}
!296 = !{!262, !11, i64 276}
!297 = !{!6, !11, i64 194}
!298 = !{!262, !11, i64 256}
!299 = !{!6, !11, i64 196}
!300 = !{!262, !10, i64 272}
!301 = !{!6, !10, i64 220}
!302 = !{!6, !10, i64 212}
!303 = !{!262, !11, i64 284}
!304 = !{!305, !11, i64 0}
!305 = !{!"SunSky", !11, i64 0, !11, i64 2, !11, i64 4, !10, i64 8, !10, i64 12, !10, i64 16, !8, i64 20, !10, i64 32, !10, i64 36, !10, i64 40, !10, i64 44, !8, i64 48, !8, i64 68, !8, i64 88, !10, i64 108, !10, i64 112, !10, i64 116, !10, i64 120, !10, i64 124, !10, i64 128, !10, i64 132, !10, i64 136, !10, i64 140, !10, i64 144, !10, i64 148, !10, i64 152, !10, i64 156, !10, i64 160, !8, i64 164, !8, i64 176, !8, i64 188, !8, i64 200, !8, i64 212}
!306 = !{!262, !10, i64 312}
!307 = !{!262, !10, i64 288}
!308 = !{!262, !10, i64 292}
!309 = !{!262, !10, i64 296}
!310 = !{!262, !10, i64 300}
!311 = !{!262, !10, i64 304}
!312 = !{!262, !10, i64 328}
!313 = !{!262, !11, i64 286}
!314 = !{!262, !10, i64 332}
!315 = !{!262, !11, i64 340}
!316 = !{!262, !10, i64 308}
!317 = !{!262, !10, i64 316}
!318 = !{!262, !10, i64 320}
!319 = !{!262, !10, i64 324}
!320 = !{!262, !10, i64 180}
!321 = !{!6, !10, i64 88}
!322 = !{!262, !10, i64 184}
!323 = !{!6, !10, i64 92}
!324 = !{!6, !12, i64 84}
!325 = !{!262, !11, i64 208}
!326 = !{!6, !11, i64 132}
!327 = !{!262, !7, i64 200}
!328 = !{!6, !10, i64 284}
!329 = !{!6, !10, i64 300}
!330 = !{!49, !11, i64 2}
!331 = distinct !{!331, !54}
!332 = !{!333, !11, i64 232}
!333 = !{!"Tex", !30, i64 0, !7, i64 120, !10, i64 128, !10, i64 132, !10, i64 136, !10, i64 140, !10, i64 144, !10, i64 148, !10, i64 152, !10, i64 156, !10, i64 160, !10, i64 164, !10, i64 168, !10, i64 172, !10, i64 176, !10, i64 180, !10, i64 184, !10, i64 188, !10, i64 192, !10, i64 196, !10, i64 200, !10, i64 204, !10, i64 208, !10, i64 212, !11, i64 216, !11, i64 218, !11, i64 220, !11, i64 222, !11, i64 224, !11, i64 226, !11, i64 228, !11, i64 230, !11, i64 232, !11, i64 234, !10, i64 236, !10, i64 240, !10, i64 244, !10, i64 248, !12, i64 252, !12, i64 256, !11, i64 260, !11, i64 262, !11, i64 264, !11, i64 266, !12, i64 268, !12, i64 272, !12, i64 276, !12, i64 280, !10, i64 284, !10, i64 288, !10, i64 292, !334, i64 296, !7, i64 336, !7, i64 344, !7, i64 352, !7, i64 360, !7, i64 368, !7, i64 376, !7, i64 384, !7, i64 392, !7, i64 400, !8, i64 408, !8, i64 409}
!334 = !{!"ImageUser", !7, i64 0, !12, i64 8, !12, i64 12, !12, i64 16, !12, i64 20, !8, i64 24, !8, i64 25, !8, i64 26, !8, i64 27, !11, i64 28, !11, i64 30, !11, i64 32, !11, i64 34, !12, i64 36}
!335 = !{!262, !8, i64 248}
!336 = !{!6, !11, i64 166}
!337 = !{!6, !7, i64 232}
!338 = !{!6, !11, i64 152}
!339 = !{!18, !11, i64 1582}
!340 = !{!341, !12, i64 248}
!341 = !{!"ShadBuf", !11, i64 0, !11, i64 2, !11, i64 4, !8, i64 8, !8, i64 72, !8, i64 136, !7, i64 200, !7, i64 208, !10, i64 216, !10, i64 220, !10, i64 224, !10, i64 228, !10, i64 232, !8, i64 236, !12, i64 248, !12, i64 252, !19, i64 256, !8, i64 272}
!342 = !{!6, !11, i64 154}
!343 = !{!341, !11, i64 0}
!344 = !{!341, !10, i64 228}
!345 = !{!341, !11, i64 2}
!346 = !{!6, !10, i64 180}
!347 = !{!341, !12, i64 252}
!348 = !{!6, !10, i64 184}
!349 = !{!341, !10, i64 232}
!350 = !{!18, !11, i64 1538}
!351 = !{!18, !11, i64 1642}
!352 = !{!353, !12, i64 0}
!353 = !{!"LampShadowSubSample", !12, i64 0, !8, i64 4}
!354 = distinct !{!354, !54}
!355 = distinct !{!355, !356}
!356 = !{!"llvm.loop.unroll.disable"}
!357 = distinct !{!357, !54}
!358 = !{!149, !7, i64 8}
!359 = distinct !{!359, !54}
!360 = distinct !{!360, !356}
!361 = !{!142, !7, i64 24}
!362 = !{!111, !12, i64 432}
!363 = !{!254, !12, i64 20}
!364 = !{!365, !7, i64 0}
!365 = !{!"ParticleSimulationData", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !7, i64 32, !10, i64 40}
!366 = !{!365, !7, i64 8}
!367 = !{!365, !7, i64 16}
!368 = !{!365, !7, i64 24}
!369 = !{!144, !11, i64 168}
!370 = !{!142, !12, i64 328}
!371 = !{!144, !11, i64 160}
!372 = !{!142, !7, i64 64}
!373 = !{!144, !11, i64 210}
!374 = !{!142, !12, i64 308}
!375 = !{!142, !12, i64 320}
!376 = !{!377, !12, i64 68}
!377 = !{!"ParticleStrandData", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !10, i64 32, !10, i64 36, !10, i64 40, !10, i64 44, !12, i64 48, !12, i64 52, !12, i64 56, !12, i64 60, !12, i64 64, !12, i64 68}
!378 = !{!144, !11, i64 212}
!379 = !{!99, !10, i64 420}
!380 = !{!99, !8, i64 362}
!381 = !{!254, !7, i64 120}
!382 = !{!377, !12, i64 48}
!383 = !{!377, !12, i64 52}
!384 = !{!377, !7, i64 16}
!385 = !{!377, !7, i64 0}
!386 = !{!144, !11, i64 224}
!387 = !{!388, !11, i64 88}
!388 = !{!"ParticleBillboardData", !7, i64 0, !8, i64 8, !8, i64 20, !8, i64 32, !8, i64 40, !10, i64 48, !10, i64 52, !10, i64 56, !8, i64 60, !12, i64 72, !12, i64 76, !12, i64 80, !12, i64 84, !11, i64 88, !11, i64 90, !11, i64 92, !11, i64 94}
!389 = !{!144, !11, i64 228}
!390 = !{!388, !11, i64 92}
!391 = !{!388, !12, i64 72}
!392 = !{!144, !7, i64 760}
!393 = !{!388, !7, i64 0}
!394 = !{!144, !11, i64 230}
!395 = !{!388, !11, i64 94}
!396 = !{!388, !12, i64 80}
!397 = !{!144, !11, i64 226}
!398 = !{!388, !11, i64 90}
!399 = !{!142, !7, i64 56}
!400 = !{!377, !7, i64 8}
!401 = !{!377, !12, i64 64}
!402 = !{!144, !11, i64 208}
!403 = !{!377, !10, i64 40}
!404 = !{!144, !11, i64 206}
!405 = !{!377, !10, i64 36}
!406 = !{!207, !7, i64 48}
!407 = !{!207, !12, i64 64}
!408 = !{!207, !12, i64 76}
!409 = !{!207, !10, i64 80}
!410 = !{!207, !12, i64 68}
!411 = !{!99, !10, i64 452}
!412 = !{!207, !10, i64 84}
!413 = !{!99, !10, i64 456}
!414 = !{!207, !10, i64 88}
!415 = !{!144, !12, i64 152}
!416 = !{!207, !12, i64 72}
!417 = !{!207, !7, i64 16}
!418 = !{!99, !10, i64 180}
!419 = !{!251, !7, i64 1120}
!420 = !{!251, !7, i64 1336}
!421 = !{!251, !7, i64 1352}
!422 = !{!207, !12, i64 36}
!423 = distinct !{!423, !54, !193, !194}
!424 = distinct !{!424, !54, !194, !193}
!425 = !{!426}
!426 = distinct !{!426, !427}
!427 = distinct !{!427, !"LVerDomain"}
!428 = distinct !{!428, !54, !193, !194}
!429 = distinct !{!429, !356}
!430 = distinct !{!430, !54, !193}
!431 = distinct !{!431, !54}
!432 = !{!207, !7, i64 24}
!433 = !{!434, !12, i64 4}
!434 = !{!"StrandBound", !12, i64 0, !12, i64 4, !8, i64 8}
!435 = !{!434, !12, i64 0}
!436 = !{!142, !7, i64 136}
!437 = !{!438, !11, i64 196}
!438 = !{!"ParticleData", !439, i64 0, !439, i64 56, !7, i64 112, !7, i64 120, !7, i64 128, !12, i64 136, !10, i64 140, !10, i64 144, !10, i64 148, !12, i64 152, !12, i64 156, !8, i64 160, !10, i64 176, !10, i64 180, !10, i64 184, !12, i64 188, !12, i64 192, !11, i64 196, !11, i64 198}
!439 = !{!"ParticleKey", !8, i64 0, !8, i64 12, !8, i64 24, !8, i64 40, !10, i64 52}
!440 = !{!438, !10, i64 140}
!441 = !{!438, !10, i64 144}
!442 = !{!438, !10, i64 148}
!443 = !{!144, !11, i64 162}
!444 = !{!438, !12, i64 152}
!445 = !{!438, !12, i64 156}
!446 = !{!438, !10, i64 176}
!447 = !{!438, !10, i64 180}
!448 = !{!449, !12, i64 56}
!449 = !{!"ParticleCacheKey", !8, i64 0, !8, i64 12, !8, i64 24, !8, i64 40, !10, i64 52, !12, i64 56}
!450 = !{!142, !7, i64 32}
!451 = !{!452, !12, i64 0}
!452 = !{!"ChildParticle", !12, i64 0, !12, i64 4, !8, i64 8, !8, i64 24, !8, i64 40, !10, i64 56, !10, i64 60}
!453 = !{!144, !11, i64 188}
!454 = !{!452, !10, i64 56}
!455 = !{!452, !12, i64 4}
!456 = !{!99, !12, i64 400}
!457 = !{!377, !7, i64 24}
!458 = !{!220, !7, i64 8}
!459 = distinct !{!459, !54}
!460 = distinct !{!460, !54}
!461 = !{!462, !10, i64 12}
!462 = !{!"StrandVert", !8, i64 0, !10, i64 12}
!463 = !{!220, !12, i64 16}
!464 = !{!377, !10, i64 44}
!465 = !{!377, !12, i64 56}
!466 = !{!377, !10, i64 32}
!467 = distinct !{!467, !54}
!468 = distinct !{!468, !54, !469}
!469 = !{!"llvm.loop.peeled.count", i32 2}
!470 = !{!144, !12, i64 568}
!471 = !{!144, !10, i64 564}
!472 = !{!144, !10, i64 440}
!473 = !{!439, !10, i64 52}
!474 = !{!142, !7, i64 144}
!475 = !{!388, !10, i64 52}
!476 = !{!144, !10, i64 256}
!477 = !{!144, !10, i64 260}
!478 = !{!144, !10, i64 232}
!479 = !{!144, !10, i64 236}
!480 = !{!388, !10, i64 48}
!481 = !{!388, !10, i64 56}
!482 = !{!388, !12, i64 76}
!483 = distinct !{!483, !54}
!484 = !{!388, !12, i64 84}
!485 = distinct !{!485, !54}
!486 = !{!487, !7, i64 368}
!487 = !{!"Curve", !30, i64 0, !7, i64 120, !7, i64 128, !19, i64 136, !7, i64 152, !7, i64 160, !7, i64 168, !7, i64 176, !7, i64 184, !7, i64 192, !7, i64 200, !8, i64 208, !8, i64 220, !8, i64 232, !11, i64 244, !11, i64 246, !11, i64 248, !11, i64 250, !10, i64 252, !10, i64 256, !12, i64 260, !11, i64 264, !11, i64 266, !12, i64 268, !10, i64 272, !10, i64 276, !10, i64 280, !11, i64 284, !11, i64 286, !11, i64 288, !11, i64 290, !12, i64 292, !12, i64 296, !8, i64 300, !11, i64 304, !8, i64 306, !8, i64 307, !10, i64 308, !10, i64 312, !10, i64 316, !10, i64 320, !10, i64 324, !10, i64 328, !10, i64 332, !10, i64 336, !10, i64 340, !10, i64 344, !12, i64 348, !12, i64 352, !12, i64 356, !12, i64 360, !12, i64 364, !7, i64 368, !7, i64 376, !8, i64 384, !7, i64 448, !7, i64 456, !7, i64 464, !7, i64 472, !7, i64 480, !12, i64 488, !12, i64 492, !7, i64 496, !488, i64 504, !10, i64 512, !10, i64 516, !10, i64 520, !8, i64 524, !8, i64 525, !8, i64 526}
!488 = !{!"CharInfo", !11, i64 0, !11, i64 2, !8, i64 4, !8, i64 5, !11, i64 6}
!489 = !{!487, !7, i64 136}
!490 = distinct !{!490, !54}
!491 = !{!492, !11, i64 28}
!492 = !{!"DispList", !7, i64 0, !7, i64 8, !11, i64 16, !11, i64 18, !12, i64 20, !12, i64 24, !11, i64 28, !11, i64 30, !7, i64 32, !7, i64 40, !7, i64 48, !12, i64 56, !12, i64 60, !7, i64 64}
!493 = !{!492, !11, i64 16}
!494 = !{!492, !12, i64 24}
!495 = !{!492, !7, i64 32}
!496 = !{!497, !7, i64 24}
!497 = !{!"VertRen", !8, i64 0, !8, i64 12, !7, i64 24, !12, i64 32, !10, i64 36, !12, i64 40}
!498 = distinct !{!498, !54}
!499 = !{!149, !12, i64 84}
!500 = !{!492, !12, i64 20}
!501 = !{!492, !7, i64 48}
!502 = !{!503, !7, i64 0}
!503 = !{!"VlakRen", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !8, i64 32, !7, i64 48, !8, i64 56, !8, i64 57, !8, i64 58, !12, i64 60}
!504 = !{!503, !7, i64 8}
!505 = !{!503, !7, i64 16}
!506 = !{!503, !7, i64 24}
!507 = !{!503, !7, i64 48}
!508 = !{!503, !8, i64 57}
!509 = !{!503, !8, i64 58}
!510 = distinct !{!510, !54}
!511 = distinct !{!511, !54}
!512 = distinct !{!512, !54}
!513 = !{!492, !11, i64 18}
!514 = distinct !{!514, !54}
!515 = distinct !{!515, !54}
!516 = !{!492, !7, i64 64}
!517 = !{!492, !11, i64 30}
!518 = distinct !{!518, !54}
!519 = distinct !{!519, !54}
!520 = distinct !{!520, !54}
!521 = distinct !{!521, !54, !522}
!522 = !{!"llvm.loop.peeled.count", i32 1}
!523 = distinct !{!523, !54}
!524 = distinct !{!524, !54}
!525 = distinct !{!525, !54}
!526 = !{!492, !7, i64 0}
!527 = distinct !{!527, !54}
!528 = distinct !{!528, !54}
!529 = !{!111, !7, i64 216}
!530 = distinct !{!530, !54}
!531 = !{!532, !12, i64 1280}
!532 = !{!"Mesh", !30, i64 0, !7, i64 120, !7, i64 128, !7, i64 136, !7, i64 144, !7, i64 152, !7, i64 160, !7, i64 168, !7, i64 176, !7, i64 184, !7, i64 192, !7, i64 200, !7, i64 208, !7, i64 216, !7, i64 224, !7, i64 232, !7, i64 240, !7, i64 248, !7, i64 256, !7, i64 264, !7, i64 272, !252, i64 280, !252, i64 480, !252, i64 680, !252, i64 880, !252, i64 1080, !12, i64 1280, !12, i64 1284, !12, i64 1288, !12, i64 1292, !12, i64 1296, !12, i64 1300, !12, i64 1304, !8, i64 1308, !8, i64 1320, !8, i64 1332, !12, i64 1344, !11, i64 1348, !11, i64 1350, !10, i64 1352, !12, i64 1356, !8, i64 1360, !8, i64 1361, !8, i64 1362, !8, i64 1363, !8, i64 1364, !8, i64 1365, !11, i64 1366, !7, i64 1368}
!533 = !{!532, !7, i64 176}
!534 = distinct !{!534, !54}
!535 = distinct !{!535, !54}
!536 = !{!99, !11, i64 590}
!537 = !{!532, !11, i64 1350}
!538 = !{!18, !11, i64 1758}
!539 = !{!251, !7, i64 1320}
!540 = !{!251, !7, i64 1168}
!541 = !{!251, !7, i64 1104}
!542 = !{!532, !12, i64 1288}
!543 = !{!544, !12, i64 104}
!544 = !{!"HaloRen", !11, i64 0, !11, i64 2, !10, i64 4, !10, i64 8, !10, i64 12, !10, i64 16, !10, i64 20, !10, i64 24, !10, i64 28, !8, i64 32, !8, i64 44, !10, i64 56, !10, i64 60, !10, i64 64, !10, i64 68, !12, i64 72, !12, i64 76, !12, i64 80, !8, i64 84, !8, i64 85, !8, i64 86, !8, i64 87, !8, i64 88, !8, i64 89, !8, i64 90, !11, i64 92, !10, i64 96, !12, i64 100, !12, i64 104, !7, i64 112, !7, i64 120}
!545 = distinct !{!545, !54}
!546 = distinct !{!546, !54}
!547 = !{!99, !10, i64 200}
!548 = !{!99, !10, i64 192}
!549 = !{!99, !10, i64 344}
!550 = !{!251, !7, i64 1112}
!551 = !{!251, !7, i64 1184}
!552 = !{!553, !11, i64 16}
!553 = !{!"MFace", !12, i64 0, !12, i64 4, !12, i64 8, !12, i64 12, !11, i64 16, !8, i64 18, !8, i64 19}
!554 = !{!553, !12, i64 4}
!555 = !{!553, !12, i64 12}
!556 = !{!553, !8, i64 19}
!557 = !{!532, !7, i64 208}
!558 = !{!532, !7, i64 232}
!559 = !{!553, !12, i64 8}
!560 = !{!553, !12, i64 0}
!561 = !{!251, !12, i64 572}
!562 = !{!251, !7, i64 400}
!563 = !{!564, !12, i64 0}
!564 = !{!"CustomDataLayer", !12, i64 0, !12, i64 4, !12, i64 8, !12, i64 12, !12, i64 16, !12, i64 20, !12, i64 24, !12, i64 28, !8, i64 32, !7, i64 96}
!565 = !{!564, !7, i64 96}
!566 = !{i64 0, i64 32, !45, i64 32, i64 8, !16, i64 40, i64 1, !45, i64 41, i64 1, !45, i64 42, i64 2, !46, i64 44, i64 2, !46, i64 46, i64 2, !46}
!567 = distinct !{!567, !54}
!568 = distinct !{!568, !54}
!569 = distinct !{!569, !54}
!570 = distinct !{!570, !54}
!571 = distinct !{!571, !54}
!572 = distinct !{!572, !54}
!573 = !{!251, !7, i64 1176}
!574 = distinct !{!574, !54, !193, !194}
!575 = distinct !{!575, !54, !194, !193}
!576 = !{!577, !12, i64 0}
!577 = !{!"edgesort", !12, i64 0, !12, i64 4, !12, i64 8, !12, i64 12, !12, i64 16}
!578 = !{!577, !12, i64 4}
!579 = !{!577, !12, i64 8}
!580 = distinct !{!580, !54}
!581 = !{!582, !11, i64 10}
!582 = !{!"MEdge", !12, i64 0, !12, i64 4, !8, i64 8, !8, i64 9, !11, i64 10}
!583 = !{!582, !12, i64 0}
!584 = !{!582, !12, i64 4}
!585 = distinct !{!585, !54}
!586 = !{!577, !12, i64 12}
!587 = !{!577, !12, i64 16}
!588 = distinct !{!588, !54}
!589 = distinct !{!589, !54}
!590 = distinct !{!590, !54}
!591 = !{!497, !12, i64 40}
!592 = distinct !{!592, !54}
!593 = distinct !{!593, !54}
!594 = distinct !{!594, !54}
!595 = distinct !{!595, !54}
!596 = distinct !{!596, !54}
!597 = distinct !{!597, !54}
!598 = !{!492, !7, i64 40}
!599 = distinct !{!599, !54}
!600 = !{!503, !12, i64 60}
!601 = !{i64 0, i64 8, !16, i64 8, i64 8, !16, i64 16, i64 8, !16, i64 24, i64 8, !16, i64 32, i64 12, !45, i64 48, i64 8, !16, i64 56, i64 1, !45, i64 57, i64 1, !45, i64 58, i64 1, !45, i64 60, i64 4, !47}
!602 = distinct !{!602, !54}
!603 = !{!111, !10, i64 1268}
!604 = distinct !{!604, !54}
!605 = !{!18, !11, i64 1762}
!606 = !{!18, !12, i64 3624}
!607 = distinct !{!607, !54}
!608 = distinct !{!608, !54}
!609 = !{!99, !10, i64 364}
!610 = !{!99, !10, i64 368}
!611 = distinct !{!611, !54}
!612 = !{!99, !10, i64 436}
!613 = !{!99, !10, i64 440}
!614 = distinct !{!614, !54}
!615 = distinct !{!615, !54}
!616 = !{!99, !11, i64 130}
!617 = !{!99, !7, i64 768}
!618 = !{!99, !8, i64 543}
!619 = !{!99, !12, i64 880}
!620 = !{!251, !7, i64 1304}
!621 = distinct !{!621, !54}
!622 = distinct !{!622, !54}
!623 = !{!377, !12, i64 60}
!624 = !{!99, !10, i64 444}
!625 = !{!497, !10, i64 36}
!626 = distinct !{!626, !54}
!627 = distinct !{!627, !54}
!628 = distinct !{!628, !54}
!629 = distinct !{!629, !54}
!630 = distinct !{!630, !54}
!631 = distinct !{!631, !54}
!632 = !{!149, !12, i64 168}
!633 = distinct !{!633, !54}
!634 = distinct !{!634, !54}
!635 = !{!636, !7, i64 0}
!636 = !{!"", !7, i64 0}
!637 = !{!638, !7, i64 8}
!638 = !{!"SMikkTSpaceContext", !7, i64 0, !7, i64 8}
!639 = !{!638, !7, i64 0}
!640 = !{!641, !7, i64 0}
!641 = !{!"", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !7, i64 32, !7, i64 40, !7, i64 48}
!642 = !{!641, !7, i64 8}
!643 = !{!641, !7, i64 16}
!644 = !{!641, !7, i64 32}
!645 = !{!641, !7, i64 24}
!646 = !{!641, !7, i64 40}
!647 = distinct !{!647, !54}
!648 = distinct !{!648, !54}
!649 = distinct !{!649, !54}
!650 = distinct !{!650, !54}
!651 = distinct !{!651, !54}
!652 = distinct !{!652, !54}
!653 = distinct !{!653, !54}
!654 = distinct !{!654, !54}
!655 = distinct !{!655, !54}
!656 = distinct !{!656, !54}
!657 = distinct !{!657, !54}
!658 = distinct !{!658, !54}
!659 = distinct !{!659, !54}
!660 = !{!497, !12, i64 32}
!661 = distinct !{!661, !54}
!662 = !{!663, !7, i64 32}
!663 = !{!"ShadeInput", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !7, i64 32, !12, i64 40, !8, i64 44, !11, i64 56, !7, i64 64, !7, i64 72, !7, i64 80, !11, i64 88, !11, i64 90, !11, i64 92, !11, i64 94, !11, i64 96, !8, i64 100, !8, i64 112, !8, i64 124, !8, i64 136, !8, i64 148, !12, i64 160, !12, i64 164, !10, i64 168, !10, i64 172, !10, i64 176, !10, i64 180, !10, i64 184, !10, i64 188, !8, i64 192, !8, i64 204, !8, i64 216, !10, i64 228, !10, i64 232, !10, i64 236, !10, i64 240, !10, i64 244, !10, i64 248, !10, i64 252, !10, i64 256, !10, i64 260, !10, i64 264, !10, i64 268, !10, i64 272, !10, i64 276, !10, i64 280, !10, i64 284, !10, i64 288, !10, i64 292, !10, i64 296, !10, i64 300, !10, i64 304, !10, i64 308, !10, i64 312, !10, i64 316, !12, i64 320, !8, i64 324, !8, i64 336, !8, i64 348, !8, i64 360, !8, i64 372, !8, i64 384, !8, i64 400, !8, i64 416, !10, i64 428, !8, i64 432, !8, i64 444, !8, i64 456, !10, i64 472, !8, i64 476, !8, i64 492, !8, i64 504, !8, i64 520, !8, i64 904, !12, i64 1096, !12, i64 1100, !12, i64 1104, !12, i64 1108, !8, i64 1112, !8, i64 1124, !8, i64 1136, !8, i64 1148, !8, i64 1160, !8, i64 1172, !8, i64 1184, !8, i64 1196, !8, i64 1208, !8, i64 1220, !8, i64 1232, !8, i64 1244, !10, i64 1256, !10, i64 1260, !8, i64 1264, !8, i64 1276, !8, i64 1288, !8, i64 1300, !8, i64 1312, !8, i64 1324, !10, i64 1336, !10, i64 1340, !8, i64 1344, !8, i64 1356, !8, i64 1368, !12, i64 1380, !12, i64 1384, !12, i64 1388, !8, i64 1392, !12, i64 1404, !12, i64 1408, !12, i64 1412, !8, i64 1416, !10, i64 1428, !8, i64 1432, !8, i64 1433, !11, i64 1434, !11, i64 1436, !11, i64 1438, !12, i64 1440, !12, i64 1444, !12, i64 1448, !12, i64 1452, !7, i64 1456, !7, i64 1464}
!664 = !{!663, !7, i64 8}
!665 = !{!663, !7, i64 0}
!666 = distinct !{!666, !54}
!667 = !{!663, !12, i64 1096}
!668 = !{!663, !12, i64 1104}
!669 = !{!670, !7, i64 40}
!670 = !{!"ShadeInputUV", !8, i64 0, !8, i64 12, !8, i64 24, !7, i64 40}
!671 = distinct !{!671, !54}
!672 = !{!663, !10, i64 472}
!673 = !{!674, !7, i64 16}
!674 = !{!"ASvert", !12, i64 0, !19, i64 8}
!675 = !{!674, !12, i64 0}
!676 = distinct !{!676, !54}
!677 = distinct !{!677, !54}
!678 = !{!679, !7, i64 240}
!679 = !{!"bNode", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !7, i64 32, !8, i64 40, !8, i64 104, !12, i64 168, !11, i64 172, !11, i64 174, !11, i64 176, !11, i64 178, !11, i64 180, !11, i64 182, !11, i64 184, !11, i64 186, !8, i64 188, !19, i64 200, !19, i64 216, !7, i64 232, !7, i64 240, !7, i64 248, !7, i64 256, !19, i64 264, !10, i64 280, !10, i64 284, !10, i64 288, !10, i64 292, !10, i64 296, !10, i64 300, !10, i64 304, !12, i64 308, !8, i64 312, !11, i64 376, !11, i64 378, !10, i64 380, !10, i64 384, !11, i64 388, !11, i64 390, !7, i64 392, !21, i64 400, !21, i64 416, !21, i64 432, !11, i64 448, !11, i64 450, !12, i64 452, !7, i64 456}
!680 = !{!679, !11, i64 172}
!681 = distinct !{!681, !54}
!682 = !{!544, !12, i64 72}
