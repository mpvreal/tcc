; ModuleID = 'blender/source/blender/editors/transform/transform_conversions.c'
source_filename = "blender/source/blender/editors/transform/transform_conversions.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.UserDef = type { i32, i32, i32, i32, i32, [768 x i8], [768 x i8], [1024 x i8], [768 x i8], [768 x i8], [768 x i8], [768 x i8], [768 x i8], [1024 x i8], [1024 x i8], i32, i16, i16, i16, i16, i16, i16, i32, i32, i32, i16, i16, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, [64 x i8], i16, i16, i16, i16, i16, i16, i16, i16, [3 x %struct.SolidLight], i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i8, i8, i16, i16, i16, i16, i16, i16, float, float, i32, i16, i16, float, i16, i16, i16, i16, %struct.ColorBand, [3 x float], [4 x float], i16, i8, i8, [80 x i8], [1024 x i8], i32, i32, float, float, i32, i16, i16, i16, i16, i16, i16, %struct.WalkNavigation }
%struct.ListBase = type { ptr, ptr }
%struct.SolidLight = type { i32, i32, [4 x float], [4 x float], [4 x float] }
%struct.ColorBand = type { i16, i16, i8, i8, i8, [1 x i8], [32 x %struct.CBData] }
%struct.CBData = type { float, float, float, float, float, i32 }
%struct.WalkNavigation = type { float, float, float, float, float, float, i16, [3 x i16] }
%struct.StructRNA = type opaque
%struct.Global = type { ptr, [1024 x i8], [1024 x i8], i8, i8, i8, %struct.ListBase, i8, i8, i8, i16, i16, i16, i8, i16, i32, i32, i8, i32, i32, [200 x i8] }
%struct.TransInfo = type { i32, i32, i32, i16, i32, float, float, ptr, ptr, i32, ptr, ptr, ptr, %struct.TransCon, %struct.TransSnap, %struct.NumInput, %struct.MouseInput, i32, float, [20 x i8], [3 x float], [2 x float], [2 x i32], i16, i16, [3 x float], i8, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], i16, i16, i8, i8, [3 x float], [3 x [3 x float]], [3 x [3 x float]], [64 x i8], ptr, ptr, ptr, i16, i16, i16, i16, i16, [4 x float], [4 x float], [3 x float], [3 x float], i8, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, [2 x i32], float, ptr, [3 x [3 x float]], ptr, ptr, ptr, ptr }
%struct.TransCon = type { i16, [50 x i8], [3 x [3 x float]], [3 x [3 x float]], [3 x [3 x float]], [3 x float], [2 x i32], i32, ptr, ptr, ptr, ptr }
%struct.TransSnap = type { i16, i16, i16, i16, i8, i8, i8, i8, i16, [3 x float], [3 x float], [3 x float], [3 x float], i8, %struct.ListBase, ptr, float, double, ptr, ptr, ptr, ptr }
%struct.NumInput = type { i16, i32, [3 x i32], i8, i16, [3 x i16], [3 x float], [3 x float], [3 x float], i16, [64 x i8], i32 }
%struct.MouseInput = type { ptr, ptr, [2 x i32], i8, [2 x i32], [2 x float], float, ptr }
%struct.TransData = type { float, float, float, ptr, [3 x float], ptr, float, [3 x float], [3 x [3 x float]], [3 x [3 x float]], [3 x [3 x float]], ptr, ptr, ptr, ptr, ptr, i32, i16 }
%struct.Object = type { %struct.ID, ptr, ptr, i16, i16, i32, i32, i32, [64 x i8], ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.bAnimVizSettings, ptr, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, ptr, ptr, i32, i32, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [4 x float], [3 x float], [3 x float], float, float, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, i16, i8, i8, float, float, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, float, i16, i16, [4 x float], i32, i32, ptr, i8, i8, i16, [3 x float], %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, ptr, ptr, ptr, i8, i8, i16, float, ptr, ptr, ptr, ptr, i64, i64, i32, i32, %struct.ListBase, %struct.ListBase, ptr, ptr, ptr, [2 x float], ptr, %struct.ListBase, ptr }
%struct.ID = type { ptr, ptr, ptr, ptr, [66 x i8], i16, i32, i32, i32, ptr }
%struct.bAnimVizSettings = type { i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i32, i32 }
%struct.bArmature = type { %struct.ID, ptr, %struct.ListBase, %struct.ListBase, ptr, ptr, ptr, ptr, i32, i32, i32, i32, i16, i16, i32, i32, i32, i16, i16, i16, i16, i32, i32, i32, i32, i32, i32 }
%struct.bPoseChannel = type { ptr, ptr, ptr, %struct.ListBase, [64 x i8], i16, i16, i16, i16, i8, i8, [6 x i8], ptr, ptr, ptr, %struct.ListBase, %struct.ListBase, ptr, ptr, ptr, [3 x float], [3 x float], [3 x float], [4 x float], [3 x float], float, i16, i16, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], float, float, float, ptr }
%struct.Bone = type { ptr, ptr, ptr, ptr, %struct.ListBase, [64 x i8], float, [3 x float], [3 x float], [3 x [3 x float]], i32, [3 x float], [3 x float], [4 x [4 x float]], float, float, float, float, float, float, float, float, float, float, [3 x float], i32, i16, [1 x i16] }
%struct.bConstraint = type { ptr, ptr, ptr, i16, i16, i8, i8, [64 x i8], i16, float, float, ptr, float, float }
%struct.bKinematicConstraint = type { ptr, i16, i16, i16, i16, [64 x i8], ptr, [64 x i8], float, float, float, [3 x float], i16, i16, float }
%struct.ToolSettings = type { ptr, ptr, ptr, ptr, float, float, float, i16, i16, i8, i8, i8, i8, float, i16, i8, [5 x i8], %struct.ImagePaintSettings, %struct.ParticleEditSettings, float, float, i16, i16, i8, [1 x i8], i16, float, float, float, float, float, float, float, float, float, float, i16, i8, i8, [3 x i8], i8, ptr, i8, i8, i8, i8, i8, [8 x i8], [8 x i8], i8, i8, i8, i8, i8, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i16, i16, i32, float, float, %struct.UnifiedPaintSettings, %struct.MeshStatVis }
%struct.ImagePaintSettings = type { %struct.Paint, i16, i16, i16, i16, [2 x i16], i32, ptr, ptr, ptr, ptr, [3 x float], float }
%struct.Paint = type { ptr, ptr, ptr, [4 x i8], i32, i32, i32 }
%struct.ParticleEditSettings = type { i16, i16, i16, i16, [7 x %struct.ParticleBrushData], ptr, float, float, i32, i32, i32, i32, ptr, ptr }
%struct.ParticleBrushData = type { i16, i16, i16, i16, i32, float }
%struct.UnifiedPaintSettings = type { i32, float, float, float, [3 x float], [3 x float], i32, [2 x float], float, i32, i32, i8, [7 x i8], float, [2 x float], i32, float, [2 x float], [2 x float], i32, ptr, float, i32 }
%struct.MeshStatVis = type { i8, [2 x i8], i8, float, float, float, float, i8, [3 x i8], float, float, float, float }
%struct.BoneInitData = type { ptr, [3 x float], float, float, [3 x float], float, float, float }
%struct.EditBone = type { ptr, ptr, ptr, ptr, ptr, [64 x i8], float, [3 x float], [3 x float], i32, i32, float, float, float, float, float, float, float, float, float, float, i16 }
%struct.Scene = type { %struct.ID, ptr, ptr, ptr, ptr, %struct.ListBase, ptr, ptr, [3 x float], [3 x float], [3 x float], [3 x float], i32, i32, i32, i16, i8, [1 x i8], ptr, ptr, ptr, ptr, %struct.RenderData, %struct.AudioData, %struct.ListBase, %struct.ListBase, ptr, ptr, ptr, ptr, ptr, ptr, i16, i16, i32, %struct.ListBase, %struct.GameFraming, %struct.GameData, %struct.UnitSettings, ptr, %struct.PhysicsSettings, ptr, i64, i64, %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings, %struct.ColorManagedColorspaceSettings, ptr }
%struct.RenderData = type { %struct.ImageFormatData, ptr, ptr, %struct.QuicktimeCodecSettings, %struct.FFMpegCodecData, i32, i32, i32, float, i32, i32, i32, i32, i16, i16, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i32, i32, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, %struct.rctf, %struct.rctf, %struct.rcti, %struct.ListBase, i16, i16, float, float, float, float, i32, float, float, float, float, i16, i16, i16, i16, i16, i16, float, float, i16, i16, float, float, [1024 x i8], i32, i16, i16, [768 x i8], [4 x float], [4 x float], i8, i8, i8, [5 x i8], i32, i16, i16, float, float, i16, i16, float, i16, i16, i32, i16, i16, i16, i16, float, float, ptr, i32, float, [32 x i8], %struct.BakeData, i32, i32 }
%struct.ImageFormatData = type { i8, i8, i8, i8, i8, i8, i8, i8, i16, i16, float, i8, i8, [6 x i8], %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings }
%struct.QuicktimeCodecSettings = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32, i32 }
%struct.FFMpegCodecData = type { i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, ptr }
%struct.rctf = type { float, float, float, float }
%struct.rcti = type { i32, i32, i32, i32 }
%struct.BakeData = type { %struct.ImageFormatData, [1024 x i8], i16, i16, i16, i16, float, float, [3 x i8], i8, i8, [3 x i8], [64 x i8] }
%struct.AudioData = type { i32, float, float, float, i32, i16, i16, float, float }
%struct.GameFraming = type { [3 x float], i8, i8, i8, i8 }
%struct.GameData = type { %struct.GameFraming, i16, i16, i16, i16, i16, i16, i16, i16, i16, [3 x i16], %struct.GameDome, i16, i16, float, %struct.RecastData, float, float, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float }
%struct.GameDome = type { i16, i16, i16, i16, float, float, ptr }
%struct.RecastData = type { float, float, float, float, float, float, float, float, float, float, i32, float, float, i16, i16 }
%struct.UnitSettings = type { float, i8, i8, i16 }
%struct.PhysicsSettings = type { [3 x float], i32, i32, i32 }
%struct.ColorManagedViewSettings = type { i32, i32, [64 x i8], [64 x i8], float, float, ptr, ptr }
%struct.ColorManagedDisplaySettings = type { [64 x i8] }
%struct.ColorManagedColorspaceSettings = type { [64 x i8] }
%struct.Base = type { ptr, ptr, i32, i32, i32, i16, i16, ptr }
%struct.PTCacheEdit = type { %struct.ListBase, ptr, ptr, %struct.PTCacheID, ptr, ptr, ptr, ptr, ptr, ptr, %struct.ListBase, i32, i32, i32, i32, [3 x i8], [3 x i8] }
%struct.PTCacheID = type { ptr, ptr, ptr, ptr, ptr, i32, i32, i32, i32, i32, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.PTCacheEditPoint = type { ptr, i32, i16 }
%struct.ParticleSystem = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.ListBase, %struct.ListBase, ptr, ptr, ptr, ptr, ptr, ptr, %struct.ListBase, [64 x i8], [4 x [4 x float]], float, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, [3 x [64 x i8]], [12 x i16], i16, i16, ptr, ptr, %struct.ListBase, ptr, ptr, i32, i32, ptr, ptr, ptr, float, float }
%struct.ParticleSystemModifierData = type { %struct.ModifierData, ptr, ptr, i32, i32, i32, i16, i16 }
%struct.ModifierData = type { ptr, ptr, i32, i32, i32, i32, [64 x i8], ptr, ptr }
%struct.ParticleSettings = type { %struct.ID, ptr, ptr, ptr, ptr, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, [2 x float], [2 x float], float, float, float, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, [1 x float], i32, i32, i32, i32, i16, [3 x i16], float, float, float, float, float, float, float, [3 x float], float, float, float, float, float, float, float, [3 x float], float, float, float, float, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, [2 x float], float, float, i32, i32, [18 x ptr], ptr, %struct.ListBase, ptr, ptr, ptr, ptr, ptr, ptr, i16, [3 x i16] }
%struct.ParticleData = type { %struct.ParticleKey, %struct.ParticleKey, ptr, ptr, ptr, i32, float, float, float, i32, i32, [4 x float], float, float, float, i32, i32, i16, i16 }
%struct.ParticleKey = type { [3 x float], [3 x float], [4 x float], [3 x float], float }
%struct.PTCacheEditKey = type { ptr, ptr, ptr, ptr, [3 x float], float, float, i16 }
%struct.bNode = type { ptr, ptr, ptr, ptr, ptr, [64 x i8], [64 x i8], i32, i16, i16, i16, i16, i16, i16, i16, i16, [3 x float], %struct.ListBase, %struct.ListBase, ptr, ptr, ptr, ptr, %struct.ListBase, float, float, float, float, float, float, float, i32, [64 x i8], i16, i16, float, float, i16, i16, ptr, %struct.rctf, %struct.rctf, %struct.rctf, i16, i16, i32, ptr }
%struct.TransData2D = type { [3 x float], ptr, ptr, ptr, [2 x float], [2 x float] }
%struct.Sequence = type { ptr, ptr, ptr, ptr, [64 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, float, i16, i16, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, float, float, ptr, ptr, ptr, %struct.ListBase, ptr, ptr, float, float, float, float, ptr, i32, i32, i32, float, i32, i8, [3 x i8], %struct.ListBase }
%struct.TransDataSeq = type { ptr, i32, i32, i16 }
%struct.ScrArea = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.rcti, i8, i8, i16, i16, i16, i16, i16, i16, i8, i8, ptr, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase }
%struct.SpaceImage = type { ptr, ptr, %struct.ListBase, i32, i32, ptr, %struct.ImageUser, ptr, %struct.Scopes, %struct.Histogram, ptr, [2 x float], float, float, float, float, float, i8, i8, i16, i16, i16, i8, i8, i8, i8, %struct.MaskSpaceInfo }
%struct.ImageUser = type { ptr, i32, i32, i32, i32, i8, i8, i8, i8, i16, i16, i16, i16, i32 }
%struct.Scopes = type { i32, i32, i32, float, i32, float, float, i32, float, i32, [3 x [2 x float]], %struct.Histogram, ptr, ptr, ptr, ptr, i32, i32 }
%struct.Histogram = type { i32, i32, [256 x float], [256 x float], [256 x float], [256 x float], [256 x float], float, float, i16, i16, i32, [2 x [2 x float]] }
%struct.MaskSpaceInfo = type { ptr, i8, i8, i8, [5 x i8] }
%struct.tGPFtransdata = type { float, ptr }
%struct.BeztMap = type { ptr, i32, i32, i16, i8, i8 }
%struct.SpaceIpo = type { ptr, ptr, %struct.ListBase, i32, float, [8 x i16], %struct.View2D, ptr, %struct.ListBase, i16, i16, i32, float, i32 }
%struct.View2D = type { %struct.rctf, %struct.rctf, %struct.rcti, %struct.rcti, %struct.rcti, [2 x float], [2 x float], float, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, ptr, i32, i32, ptr, ptr }
%struct.bAnimListElem = type { ptr, ptr, ptr, i32, i32, i32, i16, i16, ptr, ptr, ptr }
%struct.FCurve = type { ptr, ptr, ptr, ptr, %struct.ListBase, ptr, ptr, i32, float, i16, i16, i32, ptr, i32, [3 x float], float, float }
%struct.BezTriple = type { [3 x [3 x float]], float, float, float, i8, i8, i8, i8, i8, i8, i8, i8, float, float, float, [4 x i8] }
%struct.TransDataCurveHandleFlags = type { i8, i8, ptr, ptr }
%struct.TransDataGraph = type { float }
%struct.bAction = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, i32, i32 }
%struct.bActionGroup = type { ptr, ptr, %struct.ListBase, i32, i32, [64 x i8], %struct.ThemeWireColor }
%struct.ThemeWireColor = type { [4 x i8], [4 x i8], [4 x i8], i16, i16 }
%struct.View3D = type { ptr, ptr, %struct.ListBase, i32, float, [8 x i16], [4 x float], float, float, i8, [3 x i8], i32, i32, i16, i16, ptr, ptr, %struct.rctf, %struct.ListBase, ptr, ptr, [64 x i8], i32, i32, i16, i16, i16, i16, i16, i16, float, float, float, float, [3 x float], [3 x float], i16, i16, i16, i8, i8, i8, i8, [2 x i8], %struct.ListBase, %struct.ListBase, %struct.ListBase, i8, i8, i8, [5 x i8], ptr, ptr, ptr }
%struct.bPose = type { %struct.ListBase, ptr, i16, i16, i32, i32, float, [3 x float], [3 x float], %struct.ListBase, i32, i32, ptr, ptr, %struct.bAnimVizSettings, [64 x i8] }
%struct.bAnimContext = type { ptr, i16, i16, i16, i16, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.BMHeader = type { ptr, i32, i8, i8, i8 }
%struct.EdgeSlideData = type { ptr, i32, ptr, [2 x i32], [2 x i32], ptr, i8, ptr, float, i8, i8, i32 }
%struct.SpaceSeq = type { ptr, ptr, %struct.ListBase, i32, float, [8 x i16], %struct.View2D, float, float, i16, i16, i16, i16, i32, float, i32, i32, ptr, %struct.SequencerScopes }
%struct.SequencerScopes = type { ptr, ptr, ptr, ptr, ptr, ptr }
%struct.SpaceNode = type { ptr, ptr, %struct.ListBase, i32, float, [8 x i16], %struct.View2D, ptr, ptr, i16, i16, float, float, float, float, float, [2 x float], %struct.ListBase, ptr, ptr, [64 x i8], i32, i32, i16, i16, i16, i16, %struct.ListBase, ptr }
%struct.bNodeTree = type { %struct.ID, ptr, ptr, [64 x i8], ptr, ptr, [2 x float], %struct.ListBase, %struct.ListBase, i32, i32, i32, i32, i32, i16, i16, i32, i32, i16, i16, i32, %struct.rctf, %struct.ListBase, %struct.ListBase, ptr, %struct.bNodeInstanceKey, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.bNodeInstanceKey = type { i32 }
%struct.MovieClip = type { %struct.ID, ptr, [1024 x i8], i32, i32, [2 x i32], float, float, ptr, ptr, ptr, %struct.MovieTracking, ptr, %struct.MovieClipProxy, i32, i32, i32, i32, %struct.ColorManagedColorspaceSettings }
%struct.MovieTracking = type { %struct.MovieTrackingSettings, %struct.MovieTrackingCamera, %struct.ListBase, %struct.ListBase, %struct.MovieTrackingReconstruction, %struct.MovieTrackingStabilization, ptr, ptr, %struct.ListBase, i32, i32, ptr, %struct.MovieTrackingDopesheet }
%struct.MovieTrackingSettings = type { i32, i16, i16, float, i16, i16, i16, i16, i16, i16, float, i16, i16, i32, i32, i32, i16, i16, float, i32, i32, float, float, i32 }
%struct.MovieTrackingCamera = type { ptr, i16, i16, float, float, float, i16, i16, [2 x float], float, float, float, float, float }
%struct.MovieTrackingReconstruction = type { i32, float, i32, i32, ptr }
%struct.MovieTrackingStabilization = type { i32, i32, i32, float, ptr, float, float, float, i32, i32, float }
%struct.MovieTrackingDopesheet = type { i32, i16, i16, %struct.ListBase, %struct.ListBase, i32, i32 }
%struct.MovieClipProxy = type { [768 x i8], i16, i16, i16, i16 }
%struct.SpaceClip = type { ptr, ptr, %struct.ListBase, i32, float, float, float, float, float, %struct.MovieClipUser, ptr, %struct.MovieClipScopes, i32, i16, i16, i32, [2 x float], float, float, i32, [4 x [4 x float]], [4 x [4 x float]], i32, i16, i16, i32, i32, [2 x float], %struct.MaskSpaceInfo }
%struct.MovieClipUser = type { i32, i16, i16 }
%struct.MovieClipScopes = type { i16, i16, i32, i32, i32, %struct.MovieTrackingMarker, ptr, ptr, [2 x float], i16, i16, i32, ptr, ptr, [2 x float] }
%struct.MovieTrackingMarker = type { [2 x float], [4 x [2 x float]], [2 x float], [2 x float], i32, i32 }
%struct.MovieTrackingPlaneTrack = type { ptr, ptr, [64 x i8], ptr, i32, i32, ptr, i32, i32, ptr, float, i32 }
%struct.MovieTrackingTrack = type { ptr, ptr, [64 x i8], [2 x float], [2 x float], [2 x float], [2 x float], [2 x float], i32, i32, ptr, [3 x float], float, i32, i32, i32, [3 x float], i16, i16, i16, i16, i32, float, ptr, float, float }
%struct.SpaceAction = type { ptr, ptr, %struct.ListBase, i32, float, [8 x i16], %struct.View2D, ptr, %struct.bDopeSheet, i8, i8, i16, float }
%struct.bDopeSheet = type { ptr, %struct.ListBase, ptr, [64 x i8], i32, i32, i32, i32 }
%struct.Main = type { ptr, ptr, [1024 x i8], i16, i16, i16, i16, i64, [16 x i8], i16, ptr, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, [256 x i8], ptr, ptr }
%struct.bGPdata = type { %struct.ID, %struct.ListBase, i32, i16, i16, ptr }
%struct.bGPDlayer = type { ptr, ptr, %struct.ListBase, ptr, i32, i16, i16, [4 x float], [128 x i8] }
%struct.bGPDframe = type { ptr, ptr, %struct.ListBase, i32, i32 }
%struct.Mask = type { %struct.ID, ptr, %struct.ListBase, i32, i32, i32, i32, i32, i32 }
%struct.MaskLayer = type { ptr, ptr, [64 x i8], %struct.ListBase, %struct.ListBase, ptr, ptr, float, i8, i8, i8, [7 x i8], i8, i8 }
%struct.MaskLayerShape = type { ptr, ptr, ptr, i32, i32, i8, [7 x i8] }
%struct.NlaTrack = type { ptr, ptr, %struct.ListBase, i32, i32, [64 x i8] }
%struct.PointCache = type { ptr, ptr, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, [64 x i8], [64 x i8], [64 x i8], [1024 x i8], ptr, %struct.ListBase, ptr, ptr }
%struct.TransDataExtension = type { [3 x float], [4 x float], [3 x float], ptr, [3 x float], ptr, [4 x float], ptr, float, ptr, [4 x float], ptr, [3 x float], [4 x [4 x float]], [3 x [3 x float]], [3 x [3 x float]], [3 x [3 x float]], i32, [3 x float], [3 x float], [4 x float], [3 x float], float }
%struct.TransDataTracking = type { i32, i32, i32, ptr, ptr, [2 x float], [2 x float], [2 x float], ptr, i32, ptr, ptr, float, i16, ptr, ptr }
%struct.MovieTrackingPlaneMarker = type { [4 x [2 x float]], i32, i32 }
%struct.TransDataMasking = type { i8, [2 x float], [2 x float], [3 x [3 x float]], ptr, [3 x [3 x float]], [3 x [3 x float]], i8, i32 }
%struct.TransDataPaintCurve = type { ptr, i8 }
%struct.BMIter = type { %union.anon, ptr, ptr, i32, i8 }
%union.anon = type { %struct.BMIter__face_of_vert }
%struct.BMIter__face_of_vert = type { ptr, ptr, ptr, ptr, ptr }
%struct.BMesh = type { i32, i32, i32, i32, i32, i32, i32, i8, i8, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, i32, ptr, ptr, ptr, i32, ptr, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, i16, i32, i32, i32, %struct.ListBase, ptr, %struct.ListBase, ptr }
%struct.CustomData = type { ptr, [41 x i32], i32, i32, i32, ptr, ptr }
%struct.BMEdge = type { %struct.BMHeader, ptr, ptr, ptr, ptr, %struct.BMDiskLink, %struct.BMDiskLink }
%struct.BMDiskLink = type { ptr, ptr }
%struct.BMVert = type { %struct.BMHeader, ptr, [3 x float], [3 x float], ptr }
%struct.ARegion = type { ptr, ptr, %struct.View2D, %struct.rcti, %struct.rcti, i16, i16, i16, i16, i16, i16, float, i16, i16, i16, i16, i16, i16, i16, i16, ptr, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, ptr, ptr, ptr }
%struct.NlaStrip = type { ptr, ptr, %struct.ListBase, ptr, ptr, %struct.ListBase, %struct.ListBase, [64 x i8], float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, ptr, i32, i32 }
%struct.SpaceNla = type { ptr, ptr, %struct.ListBase, i32, float, [8 x i16], i16, i16, i32, ptr, %struct.View2D }
%struct.AnimData = type { ptr, ptr, ptr, %struct.ListBase, ptr, %struct.ListBase, %struct.ListBase, i32, i32, i16, i16, float }
%struct.TransDataNla = type { ptr, ptr, ptr, ptr, [3 x float], [3 x float], i32, i32 }
%struct.RegionView3D = type { [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [6 x [4 x float]], [6 x [4 x float]], ptr, ptr, ptr, ptr, ptr, ptr, ptr, [4 x [4 x float]], [4 x float], float, float, float, float, [3 x float], float, i8, i8, i8, i8, i8, [3 x i8], [2 x float], i16, i16, [4 x float], i16, i16, float, [3 x float], float, [3 x float] }
%struct.MaskSpline = type { ptr, ptr, i16, i8, i8, i32, ptr, %struct.MaskParent, ptr }
%struct.MaskParent = type { i32, i32, ptr, [64 x i8], [64 x i8], [2 x float], [4 x [2 x float]] }
%struct.MaskSplinePoint = type { %struct.BezTriple, i32, i32, ptr, %struct.MaskParent }
%struct.Brush = type { %struct.ID, %struct.BrushClone, ptr, %struct.MTex, %struct.MTex, ptr, ptr, ptr, ptr, ptr, [1024 x i8], float, i16, i16, float, i32, i32, i32, float, i32, i32, i32, i32, float, float, [3 x float], float, [3 x float], i32, float, float, i32, i32, i32, i8, i8, i8, i8, float, float, float, float, float, i32, i32, i32, float, float, i32, i32, float, [3 x float], [3 x float], [2 x float], [2 x float], [2 x float], [2 x float] }
%struct.BrushClone = type { ptr, [2 x float], float, float }
%struct.MTex = type { i16, i16, i16, i16, ptr, ptr, [64 x i8], i8, i8, i8, i8, [3 x float], [3 x float], float, i16, i16, i16, i16, i16, i16, i8, [7 x i8], float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float }
%struct.PaintCurve = type { %struct.ID, ptr, i32, i32 }
%struct.PaintCurvePoint = type { %struct.BezTriple, float }
%struct.UvElementMap = type { ptr, ptr, i32, i32, ptr }
%struct.UvElement = type { ptr, ptr, i16, i8, i8, i16 }
%struct.BMEditSelection = type { ptr, ptr, ptr, i8 }
%struct.Mesh = type { %struct.ID, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, i32, i32, i32, i32, i32, i32, i32, [3 x float], [3 x float], [3 x float], i32, i16, i16, float, i32, i8, i8, i8, i8, i8, i8, i16, ptr }
%struct.BMEditMesh = type { ptr, ptr, i32, ptr, i32, ptr, ptr, i64, ptr, i32, ptr, i32, i16, i16, ptr, i32 }
%struct.BMLoop = type { %struct.BMHeader, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.BMFace = type { %struct.BMHeader, ptr, ptr, i32, [3 x float], i16 }
%struct.LinkNode = type { ptr, ptr }
%struct.TransIslandData = type { [3 x float], [3 x [3 x float]] }
%struct.Curve = type { %struct.ID, ptr, ptr, %struct.ListBase, ptr, ptr, ptr, ptr, ptr, ptr, ptr, [3 x float], [3 x float], [3 x float], i16, i16, i16, i16, float, float, i32, i16, i16, i32, float, float, float, i16, i16, i16, i16, i32, i32, [4 x i8], i16, i8, i8, float, float, float, float, float, float, float, float, float, float, i32, i32, i32, i32, i32, ptr, ptr, [64 x i8], ptr, ptr, ptr, ptr, ptr, i32, i32, ptr, %struct.CharInfo, float, float, float, i8, i8, [2 x i8] }
%struct.CharInfo = type { i16, i16, i8, i8, i16 }
%struct.Nurb = type { ptr, ptr, i16, i16, i16, i16, i32, i32, [2 x i16], i16, i16, i16, i16, i16, i16, ptr, ptr, ptr, ptr, i16, i16, i32 }
%struct.BPoint = type { [4 x float], float, float, i16, i16, float, float }
%struct.Lattice = type { %struct.ID, ptr, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i8, i8, i32, float, float, float, float, float, float, ptr, ptr, ptr, ptr, [64 x i8], ptr }
%struct.MetaBall = type { %struct.ID, ptr, %struct.ListBase, %struct.ListBase, ptr, ptr, ptr, i8, i8, i16, i16, i16, [3 x float], [3 x float], [3 x float], float, float, float, ptr }
%struct.MetaElem = type { ptr, ptr, ptr, i16, i16, i16, i16, float, float, float, [4 x float], float, float, float, float, float, float, float, ptr, ptr }
%struct.CollectionPointerLink = type { ptr, ptr, %struct.PointerRNA }
%struct.PointerRNA = type { %struct.anon, ptr, ptr }
%struct.anon = type { ptr }
%struct.bChildOfConstraint = type { ptr, i32, i32, [4 x [4 x float]], [64 x i8] }
%struct.bRotateLikeConstraint = type { ptr, i32, i32, [64 x i8] }

@U = external local_unnamed_addr global %struct.UserDef, align 8
@MEM_freeN = external local_unnamed_addr global ptr, align 8
@.str = private unnamed_addr constant [9 x i8] c"Location\00", align 1
@.str.1 = private unnamed_addr constant [9 x i8] c"Rotation\00", align 1
@.str.2 = private unnamed_addr constant [8 x i8] c"Scaling\00", align 1
@.str.3 = private unnamed_addr constant [12 x i8] c"LocRotScale\00", align 1
@RNA_PoseBone = external global %struct.StructRNA, align 1
@.str.4 = private unnamed_addr constant [6 x i8] c"bones\00", align 1
@.str.5 = private unnamed_addr constant [7 x i8] c"bones[\00", align 1
@G = external local_unnamed_addr global %struct.Global, align 8
@MEM_callocN = external local_unnamed_addr global ptr, align 8
@.str.6 = private unnamed_addr constant [27 x i8] c"flushTransTracking markers\00", align 1
@.str.8 = private unnamed_addr constant [9 x i8] c"BeztMaps\00", align 1
@.str.9 = private unnamed_addr constant [21 x i8] c"beztmap_adjusted_map\00", align 1
@.str.10 = private unnamed_addr constant [19 x i8] c"FCurveSelFrameNums\00", align 1
@.str.11 = private unnamed_addr constant [49 x i8] c"Unsupported object type for text-space transform\00", align 1
@.str.12 = private unnamed_addr constant [39 x i8] c"Linked data can't text-space transform\00", align 1
@.str.13 = private unnamed_addr constant [14 x i8] c"TransTexspace\00", align 1
@.str.14 = private unnamed_addr constant [12 x i8] c"TransCrease\00", align 1
@.str.15 = private unnamed_addr constant [26 x i8] c"TransObData(Mask Editing)\00", align 1
@.str.16 = private unnamed_addr constant [28 x i8] c"TransObData2D(Mask Editing)\00", align 1
@.str.17 = private unnamed_addr constant [31 x i8] c"TransDataMasking(Mask Editing)\00", align 1
@.str.18 = private unnamed_addr constant [12 x i8] c"TransData2D\00", align 1
@.str.19 = private unnamed_addr constant [10 x i8] c"TransData\00", align 1
@.str.20 = private unnamed_addr constant [20 x i8] c"TransDataPaintCurve\00", align 1
@.str.21 = private unnamed_addr constant [28 x i8] c"TransIslandData(UV Editing)\00", align 1
@.str.22 = private unnamed_addr constant [24 x i8] c"TransObData(UV Editing)\00", align 1
@.str.23 = private unnamed_addr constant [26 x i8] c"TransObData2D(UV Editing)\00", align 1
@.str.24 = private unnamed_addr constant [25 x i8] c"TransData(Action Editor)\00", align 1
@.str.25 = private unnamed_addr constant [12 x i8] c"transdata2d\00", align 1
@.str.26 = private unnamed_addr constant [26 x i8] c"TimeSlide + tGPFtransdata\00", align 1
@.str.27 = private unnamed_addr constant [14 x i8] c"tGPFtransdata\00", align 1
@.str.28 = private unnamed_addr constant [18 x i8] c"TimeSlide Min/Max\00", align 1
@.str.29 = private unnamed_addr constant [22 x i8] c"TransData(NLA Editor)\00", align 1
@.str.30 = private unnamed_addr constant [26 x i8] c"TransDataNla (NLA Editor)\00", align 1
@.str.31 = private unnamed_addr constant [19 x i8] c"TransSeq TransData\00", align 1
@.str.32 = private unnamed_addr constant [21 x i8] c"TransSeq TransData2D\00", align 1
@.str.33 = private unnamed_addr constant [22 x i8] c"TransSeq TransDataSeq\00", align 1
@.str.34 = private unnamed_addr constant [25 x i8] c"TransData (Graph Editor)\00", align 1
@.str.35 = private unnamed_addr constant [27 x i8] c"TransData2D (Graph Editor)\00", align 1
@.str.36 = private unnamed_addr constant [15 x i8] c"TransDataGraph\00", align 1
@MEM_mallocN = external local_unnamed_addr global ptr, align 8
@.str.37 = private unnamed_addr constant [14 x i8] c"CuHandle Data\00", align 1
@.str.38 = private unnamed_addr constant [20 x i8] c"TransNode TransData\00", align 1
@.str.39 = private unnamed_addr constant [22 x i8] c"TransNode TransData2D\00", align 1
@.str.40 = private unnamed_addr constant [24 x i8] c"TransTracking TransData\00", align 1
@.str.41 = private unnamed_addr constant [26 x i8] c"TransTracking TransData2D\00", align 1
@.str.42 = private unnamed_addr constant [32 x i8] c"TransTracking TransDataTracking\00", align 1
@.str.43 = private unnamed_addr constant [14 x i8] c"scratch nears\00", align 1
@.str.44 = private unnamed_addr constant [27 x i8] c"TransObData(Mesh EditMode)\00", align 1
@.str.45 = private unnamed_addr constant [16 x i8] c"TransObData ext\00", align 1
@.str.46 = private unnamed_addr constant [12 x i8] c"crazy quats\00", align 1
@__func__.editmesh_set_connectivity_distance = private unnamed_addr constant [35 x i8] c"editmesh_set_connectivity_distance\00", align 1
@__func__.editmesh_islands_info_calc = private unnamed_addr constant [27 x i8] c"editmesh_islands_info_calc\00", align 1
@.str.47 = private unnamed_addr constant [28 x i8] c"TransObData(Curve EditMode)\00", align 1
@.str.48 = private unnamed_addr constant [30 x i8] c"TransObData(Lattice EditMode)\00", align 1
@.str.49 = private unnamed_addr constant [28 x i8] c"TransObData(MBall EditMode)\00", align 1
@.str.50 = private unnamed_addr constant [27 x i8] c"MetaElement_TransExtension\00", align 1
@.str.51 = private unnamed_addr constant [14 x i8] c"TransEditBone\00", align 1
@.str.52 = private unnamed_addr constant [13 x i8] c"BoneInitData\00", align 1
@.str.53 = private unnamed_addr constant [51 x i8] c"Cannot change Pose when 'Rest Position' is enabled\00", align 1
@.str.54 = private unnamed_addr constant [14 x i8] c"TransPoseBone\00", align 1
@.str.55 = private unnamed_addr constant [17 x i8] c"TransPoseBoneExt\00", align 1
@.str.56 = private unnamed_addr constant [27 x i8] c"Bone selection count error\00", align 1
@.str.57 = private unnamed_addr constant [15 x i8] c"TempConstraint\00", align 1
@.str.58 = private unnamed_addr constant [27 x i8] c"TransObData(Particle Mode)\00", align 1
@.str.59 = private unnamed_addr constant [24 x i8] c"Particle_TransExtension\00", align 1
@.str.60 = private unnamed_addr constant [8 x i8] c"TransOb\00", align 1
@.str.61 = private unnamed_addr constant [17 x i8] c"TransObExtension\00", align 1
@str = private unnamed_addr constant [27 x i8] c"edit type not implemented!\00", align 1

; Function Attrs: nofree nounwind sspstrong uwtable
define dso_local void @sort_trans_data_dist(ptr nocapture noundef readonly %0) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 9
  %3 = load i32, ptr %2, align 8, !tbaa !5
  %4 = icmp sgt i32 %3, 0
  br i1 %4, label %5, label %27

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 10
  %7 = load ptr, ptr %6, align 8, !tbaa !19
  br label %8

8:                                                ; preds = %5, %15
  %9 = phi i32 [ %17, %15 ], [ 0, %5 ]
  %10 = phi ptr [ %16, %15 ], [ %7, %5 ]
  %11 = getelementptr inbounds %struct.TransData, ptr %10, i64 0, i32 16
  %12 = load i32, ptr %11, align 8, !tbaa !20
  %13 = and i32 %12, 1
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %19, label %15

15:                                               ; preds = %8
  %16 = getelementptr inbounds %struct.TransData, ptr %10, i64 1
  %17 = add nuw nsw i32 %9, 1
  %18 = icmp eq i32 %17, %3
  br i1 %18, label %27, label %8, !llvm.loop !22

19:                                               ; preds = %8
  %20 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 1
  %21 = load i32, ptr %20, align 4, !tbaa !24
  %22 = and i32 %21, 4096
  %23 = icmp eq i32 %22, 0
  %24 = sub nsw i32 %3, %9
  %25 = sext i32 %24 to i64
  %26 = select i1 %23, ptr @trans_data_compare_rdist, ptr @trans_data_compare_dist
  tail call void @qsort(ptr noundef nonnull %10, i64 noundef %25, i64 noundef 224, ptr noundef nonnull %26) #18
  br label %27

27:                                               ; preds = %15, %19, %1
  ret void
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: nofree
declare void @qsort(ptr noundef, i64 noundef, i64 noundef, ptr nocapture noundef) local_unnamed_addr #2

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable
define internal i32 @trans_data_compare_dist(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1) #3 {
  %3 = load float, ptr %0, align 8, !tbaa !25
  %4 = load float, ptr %1, align 8, !tbaa !25
  %5 = fcmp fast olt float %3, %4
  %6 = fcmp fast ogt float %3, %4
  %7 = zext i1 %6 to i32
  %8 = select i1 %5, i32 -1, i32 %7
  ret i32 %8
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable
define internal i32 @trans_data_compare_rdist(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1) #3 {
  %3 = getelementptr inbounds %struct.TransData, ptr %0, i64 0, i32 1
  %4 = load float, ptr %3, align 4, !tbaa !26
  %5 = getelementptr inbounds %struct.TransData, ptr %1, i64 0, i32 1
  %6 = load float, ptr %5, align 4, !tbaa !26
  %7 = fcmp fast olt float %4, %6
  %8 = fcmp fast ogt float %4, %6
  %9 = zext i1 %8 to i32
  %10 = select i1 %7, i32 -1, i32 %9
  ret i32 %10
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: nofree nosync nounwind sspstrong memory(readwrite, inaccessiblemem: none) uwtable
define dso_local i32 @count_set_pose_transflags(ptr nocapture noundef %0, i16 noundef signext %1, ptr nocapture noundef readonly %2) local_unnamed_addr #4 {
  %4 = load i32, ptr %0, align 4, !tbaa !27
  %5 = freeze i32 %4
  %6 = getelementptr inbounds %struct.Object, ptr %2, i64 0, i32 18
  %7 = load ptr, ptr %6, align 8, !tbaa !28
  %8 = load ptr, ptr %7, align 8, !tbaa !33
  %9 = icmp eq ptr %8, null
  br i1 %9, label %137, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.Object, ptr %2, i64 0, i32 19
  %12 = load ptr, ptr %11, align 8, !tbaa !34
  %13 = getelementptr inbounds %struct.bArmature, ptr %12, i64 0, i32 15
  %14 = load i32, ptr %13, align 8, !tbaa !35
  br label %15

15:                                               ; preds = %10, %36
  %16 = phi ptr [ %8, %10 ], [ %37, %36 ]
  %17 = getelementptr inbounds %struct.bPoseChannel, ptr %16, i64 0, i32 12
  %18 = load ptr, ptr %17, align 8, !tbaa !37
  %19 = getelementptr inbounds %struct.Bone, ptr %18, i64 0, i32 25
  %20 = load i32, ptr %19, align 8, !tbaa !39
  %21 = and i32 %14, %20
  %22 = icmp ne i32 %21, 0
  %23 = getelementptr inbounds %struct.Bone, ptr %18, i64 0, i32 10
  %24 = load i32, ptr %23, align 8, !tbaa !41
  %25 = and i32 %24, 64
  %26 = icmp eq i32 %25, 0
  %27 = select i1 %22, i1 %26, i1 false
  br i1 %27, label %28, label %33

28:                                               ; preds = %15
  %29 = and i32 %24, -1064969
  %30 = shl i32 %24, 3
  %31 = and i32 %30, 8
  %32 = or i32 %31, %29
  store i32 %32, ptr %23, align 8, !tbaa !41
  br label %36

33:                                               ; preds = %15
  %34 = getelementptr inbounds %struct.Bone, ptr %18, i64 0, i32 10
  %35 = and i32 %24, -9
  store i32 %35, ptr %34, align 8, !tbaa !41
  br label %36

36:                                               ; preds = %28, %33
  %37 = load ptr, ptr %16, align 8, !tbaa !33
  %38 = icmp eq ptr %37, null
  br i1 %38, label %39, label %15, !llvm.loop !42

39:                                               ; preds = %36
  %40 = icmp eq i32 %5, 14
  br i1 %40, label %61, label %41

41:                                               ; preds = %39
  br i1 %9, label %137, label %42

42:                                               ; preds = %41, %52
  %43 = phi ptr [ %53, %52 ], [ %8, %41 ]
  %44 = getelementptr inbounds %struct.bPoseChannel, ptr %43, i64 0, i32 12
  %45 = load ptr, ptr %44, align 8, !tbaa !37
  %46 = getelementptr inbounds %struct.Bone, ptr %45, i64 0, i32 10
  %47 = load i32, ptr %46, align 8, !tbaa !41
  %48 = and i32 %47, 8
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %52, label %50

50:                                               ; preds = %42
  %51 = getelementptr inbounds %struct.Bone, ptr %45, i64 0, i32 4
  tail call fastcc void @bone_children_clear_transflag(i32 noundef %5, i16 noundef signext %1, ptr noundef nonnull %51)
  br label %52

52:                                               ; preds = %42, %50
  %53 = load ptr, ptr %43, align 8, !tbaa !33
  %54 = icmp eq ptr %53, null
  br i1 %54, label %55, label %42, !llvm.loop !43

55:                                               ; preds = %52
  %56 = load ptr, ptr %6, align 8, !tbaa !28
  %57 = load ptr, ptr %56, align 8, !tbaa !33
  %58 = icmp eq ptr %57, null
  br i1 %58, label %137, label %59

59:                                               ; preds = %55
  %60 = icmp eq i32 %5, 1
  br i1 %60, label %63, label %61

61:                                               ; preds = %39, %59
  %62 = phi ptr [ %8, %39 ], [ %57, %59 ]
  br label %125

63:                                               ; preds = %59, %120
  %64 = phi ptr [ %123, %120 ], [ %57, %59 ]
  %65 = phi i32 [ %122, %120 ], [ 0, %59 ]
  %66 = phi i32 [ %121, %120 ], [ 0, %59 ]
  %67 = getelementptr inbounds %struct.bPoseChannel, ptr %64, i64 0, i32 12
  %68 = load ptr, ptr %67, align 8, !tbaa !37
  %69 = getelementptr inbounds %struct.Bone, ptr %68, i64 0, i32 10
  %70 = load i32, ptr %69, align 8, !tbaa !41
  %71 = and i32 %70, 8
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %120, label %73

73:                                               ; preds = %63
  %74 = add nsw i32 %65, 1
  %75 = getelementptr inbounds %struct.bPoseChannel, ptr %64, i64 0, i32 3
  %76 = load ptr, ptr %75, align 8, !tbaa !33
  %77 = icmp eq ptr %76, null
  br i1 %77, label %103, label %78

78:                                               ; preds = %73, %100
  %79 = phi ptr [ %101, %100 ], [ %76, %73 ]
  %80 = getelementptr inbounds %struct.bConstraint, ptr %79, i64 0, i32 3
  %81 = load i16, ptr %80, align 8, !tbaa !44
  %82 = icmp eq i16 %81, 3
  br i1 %82, label %83, label %100

83:                                               ; preds = %78
  %84 = getelementptr inbounds %struct.bConstraint, ptr %79, i64 0, i32 9
  %85 = load float, ptr %84, align 8, !tbaa !46
  %86 = fcmp fast une float %85, 0.000000e+00
  br i1 %86, label %87, label %100

87:                                               ; preds = %83
  %88 = getelementptr inbounds %struct.bConstraint, ptr %79, i64 0, i32 2
  %89 = load ptr, ptr %88, align 8, !tbaa !47
  %90 = load ptr, ptr %89, align 8, !tbaa !48
  %91 = icmp eq ptr %90, null
  br i1 %91, label %120, label %92

92:                                               ; preds = %87
  %93 = getelementptr inbounds %struct.Object, ptr %90, i64 0, i32 3
  %94 = load i16, ptr %93, align 8, !tbaa !50
  %95 = icmp eq i16 %94, 25
  br i1 %95, label %96, label %100

96:                                               ; preds = %92
  %97 = getelementptr inbounds %struct.bKinematicConstraint, ptr %89, i64 0, i32 5
  %98 = load i8, ptr %97, align 8, !tbaa !51
  %99 = icmp eq i8 %98, 0
  br i1 %99, label %120, label %100

100:                                              ; preds = %96, %92, %83, %78
  %101 = load ptr, ptr %79, align 8, !tbaa !33
  %102 = icmp eq ptr %101, null
  br i1 %102, label %103, label %78, !llvm.loop !52

103:                                              ; preds = %100, %73
  %104 = getelementptr inbounds %struct.bPoseChannel, ptr %64, i64 0, i32 13
  %105 = load ptr, ptr %104, align 8, !tbaa !53
  %106 = icmp eq ptr %105, null
  %107 = and i32 %70, 16
  %108 = icmp eq i32 %107, 0
  %109 = or i1 %108, %106
  br i1 %109, label %114, label %110

110:                                              ; preds = %103
  %111 = and i32 %70, 16384
  %112 = icmp eq i32 %111, 0
  %113 = select i1 %112, i32 %66, i32 1
  br label %120

114:                                              ; preds = %103
  %115 = getelementptr inbounds %struct.bPoseChannel, ptr %64, i64 0, i32 7
  %116 = load i16, ptr %115, align 4, !tbaa !54
  %117 = and i16 %116, 7
  %118 = icmp eq i16 %117, 7
  %119 = select i1 %118, i32 %66, i32 1
  br label %120

120:                                              ; preds = %87, %96, %114, %110, %63
  %121 = phi i32 [ %66, %63 ], [ %113, %110 ], [ %119, %114 ], [ 1, %96 ], [ 1, %87 ]
  %122 = phi i32 [ %65, %63 ], [ %74, %110 ], [ %74, %114 ], [ %74, %96 ], [ %74, %87 ]
  %123 = load ptr, ptr %64, align 8, !tbaa !33
  %124 = icmp eq ptr %123, null
  br i1 %124, label %137, label %63, !llvm.loop !55

125:                                              ; preds = %61, %125
  %126 = phi ptr [ %135, %125 ], [ %62, %61 ]
  %127 = phi i32 [ %134, %125 ], [ 0, %61 ]
  %128 = getelementptr inbounds %struct.bPoseChannel, ptr %126, i64 0, i32 12
  %129 = load ptr, ptr %128, align 8, !tbaa !37
  %130 = getelementptr inbounds %struct.Bone, ptr %129, i64 0, i32 10
  %131 = load i32, ptr %130, align 8, !tbaa !41
  %132 = lshr i32 %131, 3
  %133 = and i32 %132, 1
  %134 = add nuw nsw i32 %127, %133
  %135 = load ptr, ptr %126, align 8, !tbaa !33
  %136 = icmp eq ptr %135, null
  br i1 %136, label %137, label %125, !llvm.loop !55

137:                                              ; preds = %120, %125, %3, %41, %55
  %138 = phi i32 [ 0, %55 ], [ 0, %41 ], [ 0, %3 ], [ 0, %125 ], [ %121, %120 ]
  %139 = phi i32 [ 0, %55 ], [ 0, %41 ], [ 0, %3 ], [ %134, %125 ], [ %122, %120 ]
  %140 = icmp ne i32 %5, 1
  %141 = icmp ne i32 %138, 0
  %142 = select i1 %140, i1 true, i1 %141
  br i1 %142, label %144, label %143

143:                                              ; preds = %137
  store i32 2, ptr %0, align 4, !tbaa !27
  br label %144

144:                                              ; preds = %143, %137
  ret i32 %139
}

; Function Attrs: nofree nosync nounwind sspstrong memory(readwrite, inaccessiblemem: none) uwtable
define internal fastcc void @bone_children_clear_transflag(i32 noundef %0, i16 noundef signext %1, ptr nocapture noundef readonly %2) unnamed_addr #4 {
  %4 = load ptr, ptr %2, align 8, !tbaa !33
  %5 = icmp eq ptr %4, null
  br i1 %5, label %43, label %6

6:                                                ; preds = %3
  %7 = and i32 %0, -9
  %8 = icmp eq i32 %7, 2
  %9 = icmp eq i16 %1, 2
  %10 = and i1 %8, %9
  br i1 %10, label %11, label %31

11:                                               ; preds = %6, %26
  %12 = phi ptr [ %29, %26 ], [ %4, %6 ]
  %13 = getelementptr inbounds %struct.Bone, ptr %12, i64 0, i32 10
  %14 = load i32, ptr %13, align 8, !tbaa !41
  %15 = and i32 %14, 528
  %16 = icmp eq i32 %15, 528
  br i1 %16, label %24, label %17

17:                                               ; preds = %11
  %18 = and i32 %14, 8
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %22, label %20

20:                                               ; preds = %17
  %21 = or i32 %14, 1048576
  br label %26

22:                                               ; preds = %17
  %23 = and i32 %14, -9
  br label %26

24:                                               ; preds = %11
  %25 = or i32 %14, 16384
  br label %26

26:                                               ; preds = %24, %22, %20
  %27 = phi i32 [ %25, %24 ], [ %23, %22 ], [ %21, %20 ]
  store i32 %27, ptr %13, align 8, !tbaa !41
  %28 = getelementptr inbounds %struct.Bone, ptr %12, i64 0, i32 4
  tail call fastcc void @bone_children_clear_transflag(i32 noundef %0, i16 noundef signext 2, ptr noundef nonnull %28)
  %29 = load ptr, ptr %12, align 8, !tbaa !33
  %30 = icmp eq ptr %29, null
  br i1 %30, label %43, label %11, !llvm.loop !56

31:                                               ; preds = %6, %31
  %32 = phi ptr [ %41, %31 ], [ %4, %6 ]
  %33 = getelementptr inbounds %struct.Bone, ptr %32, i64 0, i32 10
  %34 = load i32, ptr %33, align 8, !tbaa !41
  %35 = and i32 %34, 528
  %36 = icmp eq i32 %35, 528
  %37 = and i32 %34, -9
  %38 = or i32 %34, 16384
  %39 = select i1 %36, i32 %38, i32 %37
  store i32 %39, ptr %33, align 8, !tbaa !41
  %40 = getelementptr inbounds %struct.Bone, ptr %32, i64 0, i32 4
  tail call fastcc void @bone_children_clear_transflag(i32 noundef %0, i16 noundef signext %1, ptr noundef nonnull %40)
  %41 = load ptr, ptr %32, align 8, !tbaa !33
  %42 = icmp eq ptr %41, null
  br i1 %42, label %43, label %31, !llvm.loop !56

43:                                               ; preds = %31, %26, %3
  ret void
}

; Function Attrs: nofree nosync nounwind sspstrong memory(readwrite, inaccessiblemem: none) uwtable
define dso_local void @transform_autoik_update(ptr nocapture noundef readonly %0, i16 noundef signext %1) local_unnamed_addr #4 {
  %3 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 57
  %4 = load ptr, ptr %3, align 8, !tbaa !57
  %5 = getelementptr inbounds %struct.ToolSettings, ptr %4, i64 0, i32 14
  switch i16 %1, label %16 [
    i16 1, label %6
    i16 -1, label %9
  ]

6:                                                ; preds = %2
  %7 = load i16, ptr %5, align 2, !tbaa !58
  %8 = add i16 %7, 1
  br label %14

9:                                                ; preds = %2
  %10 = load i16, ptr %5, align 2, !tbaa !58
  %11 = icmp sgt i16 %10, 0
  br i1 %11, label %12, label %16

12:                                               ; preds = %9
  %13 = add nsw i16 %10, -1
  br label %14

14:                                               ; preds = %6, %12
  %15 = phi i16 [ %13, %12 ], [ %8, %6 ]
  store i16 %15, ptr %5, align 2, !tbaa !58
  br label %16

16:                                               ; preds = %14, %2, %9
  %17 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 39
  %18 = load ptr, ptr %17, align 8, !tbaa !59
  %19 = icmp eq ptr %18, null
  br i1 %19, label %90, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.Object, ptr %18, i64 0, i32 18
  %22 = load ptr, ptr %21, align 8, !tbaa !28
  %23 = icmp eq ptr %22, null
  br i1 %23, label %90, label %24

24:                                               ; preds = %20
  %25 = load ptr, ptr %22, align 8, !tbaa !33
  %26 = icmp eq ptr %25, null
  br i1 %26, label %90, label %27

27:                                               ; preds = %24, %87
  %28 = phi ptr [ %88, %87 ], [ %25, %24 ]
  %29 = load i16, ptr %5, align 2, !tbaa !58
  %30 = getelementptr inbounds %struct.bPoseChannel, ptr %28, i64 0, i32 9
  %31 = load i8, ptr %30, align 8, !tbaa !60
  %32 = and i8 %31, 9
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %87, label %34

34:                                               ; preds = %27
  %35 = getelementptr inbounds %struct.bPoseChannel, ptr %28, i64 0, i32 3
  %36 = load ptr, ptr %35, align 8, !tbaa !33
  %37 = icmp eq ptr %36, null
  br i1 %37, label %87, label %38

38:                                               ; preds = %34
  %39 = icmp eq i16 %29, 0
  br i1 %39, label %40, label %63

40:                                               ; preds = %38, %60
  %41 = phi ptr [ %61, %60 ], [ %36, %38 ]
  %42 = getelementptr inbounds %struct.bConstraint, ptr %41, i64 0, i32 3
  %43 = load i16, ptr %42, align 8, !tbaa !44
  %44 = icmp eq i16 %43, 3
  br i1 %44, label %45, label %60

45:                                               ; preds = %40
  %46 = getelementptr inbounds %struct.bConstraint, ptr %41, i64 0, i32 9
  %47 = load float, ptr %46, align 8, !tbaa !46
  %48 = fcmp fast une float %47, 0.000000e+00
  br i1 %48, label %49, label %60

49:                                               ; preds = %45
  %50 = getelementptr inbounds %struct.bConstraint, ptr %41, i64 0, i32 2
  %51 = load ptr, ptr %50, align 8, !tbaa !47
  %52 = getelementptr inbounds %struct.bKinematicConstraint, ptr %51, i64 0, i32 2
  %53 = load i16, ptr %52, align 2, !tbaa !61
  %54 = and i16 %53, 8
  %55 = icmp eq i16 %54, 0
  br i1 %55, label %60, label %56

56:                                               ; preds = %49
  %57 = getelementptr inbounds %struct.bKinematicConstraint, ptr %51, i64 0, i32 4
  %58 = load i16, ptr %57, align 2, !tbaa !62
  %59 = getelementptr inbounds %struct.bKinematicConstraint, ptr %51, i64 0, i32 3
  store i16 %58, ptr %59, align 4, !tbaa !63
  br label %60

60:                                               ; preds = %56, %49, %45, %40
  %61 = load ptr, ptr %41, align 8, !tbaa !33
  %62 = icmp eq ptr %61, null
  br i1 %62, label %87, label %40, !llvm.loop !64

63:                                               ; preds = %38, %84
  %64 = phi ptr [ %85, %84 ], [ %36, %38 ]
  %65 = getelementptr inbounds %struct.bConstraint, ptr %64, i64 0, i32 3
  %66 = load i16, ptr %65, align 8, !tbaa !44
  %67 = icmp eq i16 %66, 3
  br i1 %67, label %68, label %84

68:                                               ; preds = %63
  %69 = getelementptr inbounds %struct.bConstraint, ptr %64, i64 0, i32 9
  %70 = load float, ptr %69, align 8, !tbaa !46
  %71 = fcmp fast une float %70, 0.000000e+00
  br i1 %71, label %72, label %84

72:                                               ; preds = %68
  %73 = getelementptr inbounds %struct.bConstraint, ptr %64, i64 0, i32 2
  %74 = load ptr, ptr %73, align 8, !tbaa !47
  %75 = getelementptr inbounds %struct.bKinematicConstraint, ptr %74, i64 0, i32 2
  %76 = load i16, ptr %75, align 2, !tbaa !61
  %77 = and i16 %76, 8
  %78 = icmp eq i16 %77, 0
  br i1 %78, label %84, label %79

79:                                               ; preds = %72
  %80 = getelementptr inbounds %struct.bKinematicConstraint, ptr %74, i64 0, i32 4
  %81 = load i16, ptr %80, align 2, !tbaa !62
  %82 = getelementptr inbounds %struct.bKinematicConstraint, ptr %74, i64 0, i32 3
  %83 = tail call i16 @llvm.smin.i16(i16 %81, i16 %29)
  store i16 %83, ptr %82, align 4, !tbaa !63
  br label %84

84:                                               ; preds = %79, %72, %68, %63
  %85 = load ptr, ptr %64, align 8, !tbaa !33
  %86 = icmp eq ptr %85, null
  br i1 %86, label %87, label %63, !llvm.loop !64

87:                                               ; preds = %84, %60, %27, %34
  %88 = load ptr, ptr %28, align 8, !tbaa !33
  %89 = icmp eq ptr %88, null
  br i1 %89, label %90, label %27, !llvm.loop !65

90:                                               ; preds = %87, %24, %16, %20
  ret void
}

; Function Attrs: nofree norecurse nosync nounwind sspstrong memory(readwrite, inaccessiblemem: none) uwtable
define dso_local void @restoreBones(ptr nocapture noundef readonly %0) local_unnamed_addr #5 {
  %2 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 40
  %3 = load ptr, ptr %2, align 8, !tbaa !66
  %4 = load ptr, ptr %3, align 8, !tbaa !67
  %5 = icmp eq ptr %4, null
  br i1 %5, label %197, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 63
  %8 = load ptr, ptr %7, align 8, !tbaa !69
  %9 = getelementptr inbounds %struct.Object, ptr %8, i64 0, i32 19
  %10 = load ptr, ptr %9, align 8, !tbaa !34
  %11 = getelementptr inbounds %struct.bArmature, ptr %10, i64 0, i32 8
  %12 = load i32, ptr %11, align 8, !tbaa !70
  %13 = and i32 %12, 256
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %54

15:                                               ; preds = %6, %15
  %16 = phi ptr [ %52, %15 ], [ %4, %6 ]
  %17 = phi ptr [ %51, %15 ], [ %3, %6 ]
  %18 = getelementptr inbounds %struct.BoneInitData, ptr %17, i64 0, i32 5
  %19 = load float, ptr %18, align 8, !tbaa !71
  %20 = getelementptr inbounds %struct.EditBone, ptr %16, i64 0, i32 11
  store float %19, ptr %20, align 4, !tbaa !72
  %21 = getelementptr inbounds %struct.BoneInitData, ptr %17, i64 0, i32 2
  %22 = load float, ptr %21, align 4, !tbaa !74
  %23 = getelementptr inbounds %struct.EditBone, ptr %16, i64 0, i32 19
  store float %22, ptr %23, align 4, !tbaa !75
  %24 = getelementptr inbounds %struct.BoneInitData, ptr %17, i64 0, i32 3
  %25 = load float, ptr %24, align 8, !tbaa !76
  %26 = getelementptr inbounds %struct.EditBone, ptr %16, i64 0, i32 6
  store float %25, ptr %26, align 8, !tbaa !77
  %27 = getelementptr inbounds %struct.BoneInitData, ptr %17, i64 0, i32 6
  %28 = load float, ptr %27, align 4, !tbaa !78
  %29 = getelementptr inbounds %struct.EditBone, ptr %16, i64 0, i32 13
  store float %28, ptr %29, align 4, !tbaa !79
  %30 = getelementptr inbounds %struct.BoneInitData, ptr %17, i64 0, i32 7
  %31 = load float, ptr %30, align 8, !tbaa !80
  %32 = getelementptr inbounds %struct.EditBone, ptr %16, i64 0, i32 15
  store float %31, ptr %32, align 4, !tbaa !81
  %33 = getelementptr inbounds %struct.EditBone, ptr %16, i64 0, i32 7
  %34 = getelementptr inbounds %struct.BoneInitData, ptr %17, i64 0, i32 4
  %35 = load float, ptr %34, align 4, !tbaa !82
  store float %35, ptr %33, align 4, !tbaa !82
  %36 = getelementptr inbounds %struct.BoneInitData, ptr %17, i64 0, i32 4, i64 1
  %37 = load float, ptr %36, align 4, !tbaa !82
  %38 = getelementptr inbounds %struct.EditBone, ptr %16, i64 0, i32 7, i64 1
  store float %37, ptr %38, align 4, !tbaa !82
  %39 = getelementptr inbounds %struct.BoneInitData, ptr %17, i64 0, i32 4, i64 2
  %40 = load float, ptr %39, align 4, !tbaa !82
  %41 = getelementptr inbounds %struct.EditBone, ptr %16, i64 0, i32 7, i64 2
  store float %40, ptr %41, align 4, !tbaa !82
  %42 = getelementptr inbounds %struct.EditBone, ptr %16, i64 0, i32 8
  %43 = getelementptr inbounds %struct.BoneInitData, ptr %17, i64 0, i32 1
  %44 = load float, ptr %43, align 4, !tbaa !82
  store float %44, ptr %42, align 4, !tbaa !82
  %45 = getelementptr inbounds %struct.BoneInitData, ptr %17, i64 0, i32 1, i64 1
  %46 = load float, ptr %45, align 4, !tbaa !82
  %47 = getelementptr inbounds %struct.EditBone, ptr %16, i64 0, i32 8, i64 1
  store float %46, ptr %47, align 4, !tbaa !82
  %48 = getelementptr inbounds %struct.BoneInitData, ptr %17, i64 0, i32 1, i64 2
  %49 = load float, ptr %48, align 4, !tbaa !82
  %50 = getelementptr inbounds %struct.EditBone, ptr %16, i64 0, i32 8, i64 2
  store float %49, ptr %50, align 4, !tbaa !82
  %51 = getelementptr inbounds %struct.BoneInitData, ptr %17, i64 1
  %52 = load ptr, ptr %51, align 8, !tbaa !67
  %53 = icmp eq ptr %52, null
  br i1 %53, label %197, label %15, !llvm.loop !83

54:                                               ; preds = %6
  %55 = getelementptr inbounds %struct.bArmature, ptr %10, i64 0, i32 4
  %56 = load ptr, ptr %55, align 8, !tbaa !84
  %57 = load ptr, ptr %56, align 8, !tbaa !33
  %58 = icmp eq ptr %57, null
  br i1 %58, label %59, label %116

59:                                               ; preds = %54, %112
  %60 = phi ptr [ %114, %112 ], [ %4, %54 ]
  %61 = phi ptr [ %113, %112 ], [ %3, %54 ]
  %62 = getelementptr inbounds %struct.BoneInitData, ptr %61, i64 0, i32 5
  %63 = load float, ptr %62, align 8, !tbaa !71
  %64 = getelementptr inbounds %struct.EditBone, ptr %60, i64 0, i32 11
  store float %63, ptr %64, align 4, !tbaa !72
  %65 = getelementptr inbounds %struct.BoneInitData, ptr %61, i64 0, i32 2
  %66 = load float, ptr %65, align 4, !tbaa !74
  %67 = getelementptr inbounds %struct.EditBone, ptr %60, i64 0, i32 19
  store float %66, ptr %67, align 4, !tbaa !75
  %68 = getelementptr inbounds %struct.BoneInitData, ptr %61, i64 0, i32 3
  %69 = load float, ptr %68, align 8, !tbaa !76
  %70 = getelementptr inbounds %struct.EditBone, ptr %60, i64 0, i32 6
  store float %69, ptr %70, align 8, !tbaa !77
  %71 = getelementptr inbounds %struct.BoneInitData, ptr %61, i64 0, i32 6
  %72 = load float, ptr %71, align 4, !tbaa !78
  %73 = getelementptr inbounds %struct.EditBone, ptr %60, i64 0, i32 13
  store float %72, ptr %73, align 4, !tbaa !79
  %74 = getelementptr inbounds %struct.BoneInitData, ptr %61, i64 0, i32 7
  %75 = load float, ptr %74, align 8, !tbaa !80
  %76 = getelementptr inbounds %struct.EditBone, ptr %60, i64 0, i32 15
  store float %75, ptr %76, align 4, !tbaa !81
  %77 = getelementptr inbounds %struct.EditBone, ptr %60, i64 0, i32 7
  %78 = getelementptr inbounds %struct.BoneInitData, ptr %61, i64 0, i32 4
  %79 = load float, ptr %78, align 4, !tbaa !82
  store float %79, ptr %77, align 4, !tbaa !82
  %80 = getelementptr inbounds %struct.BoneInitData, ptr %61, i64 0, i32 4, i64 1
  %81 = load float, ptr %80, align 4, !tbaa !82
  %82 = getelementptr inbounds %struct.EditBone, ptr %60, i64 0, i32 7, i64 1
  store float %81, ptr %82, align 4, !tbaa !82
  %83 = getelementptr inbounds %struct.BoneInitData, ptr %61, i64 0, i32 4, i64 2
  %84 = load float, ptr %83, align 4, !tbaa !82
  %85 = getelementptr inbounds %struct.EditBone, ptr %60, i64 0, i32 7, i64 2
  store float %84, ptr %85, align 4, !tbaa !82
  %86 = getelementptr inbounds %struct.EditBone, ptr %60, i64 0, i32 8
  %87 = getelementptr inbounds %struct.BoneInitData, ptr %61, i64 0, i32 1
  %88 = load float, ptr %87, align 4, !tbaa !82
  store float %88, ptr %86, align 4, !tbaa !82
  %89 = getelementptr inbounds %struct.BoneInitData, ptr %61, i64 0, i32 1, i64 1
  %90 = load float, ptr %89, align 4, !tbaa !82
  %91 = getelementptr inbounds %struct.EditBone, ptr %60, i64 0, i32 8, i64 1
  store float %90, ptr %91, align 4, !tbaa !82
  %92 = getelementptr inbounds %struct.BoneInitData, ptr %61, i64 0, i32 1, i64 2
  %93 = load float, ptr %92, align 4, !tbaa !82
  %94 = getelementptr inbounds %struct.EditBone, ptr %60, i64 0, i32 8, i64 2
  store float %93, ptr %94, align 4, !tbaa !82
  %95 = getelementptr inbounds %struct.EditBone, ptr %60, i64 0, i32 9
  %96 = load i32, ptr %95, align 4, !tbaa !85
  %97 = and i32 %96, 16
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %112, label %99

99:                                               ; preds = %59
  %100 = getelementptr inbounds %struct.EditBone, ptr %60, i64 0, i32 3
  %101 = load ptr, ptr %100, align 8, !tbaa !86
  %102 = icmp eq ptr %101, null
  br i1 %102, label %112, label %103

103:                                              ; preds = %99
  %104 = getelementptr inbounds %struct.EditBone, ptr %101, i64 0, i32 8
  store float %79, ptr %104, align 4, !tbaa !82
  %105 = load float, ptr %82, align 4, !tbaa !82
  %106 = getelementptr inbounds %struct.EditBone, ptr %101, i64 0, i32 8, i64 1
  store float %105, ptr %106, align 4, !tbaa !82
  %107 = load float, ptr %85, align 4, !tbaa !82
  %108 = getelementptr inbounds %struct.EditBone, ptr %101, i64 0, i32 8, i64 2
  store float %107, ptr %108, align 4, !tbaa !82
  %109 = getelementptr inbounds %struct.EditBone, ptr %60, i64 0, i32 18
  %110 = load float, ptr %109, align 8, !tbaa !87
  %111 = getelementptr inbounds %struct.EditBone, ptr %101, i64 0, i32 19
  store float %110, ptr %111, align 4, !tbaa !75
  br label %112

112:                                              ; preds = %103, %99, %59
  %113 = getelementptr inbounds %struct.BoneInitData, ptr %61, i64 1
  %114 = load ptr, ptr %113, align 8, !tbaa !67
  %115 = icmp eq ptr %114, null
  br i1 %115, label %197, label %59, !llvm.loop !83

116:                                              ; preds = %54, %193
  %117 = phi ptr [ %195, %193 ], [ %4, %54 ]
  %118 = phi ptr [ %194, %193 ], [ %3, %54 ]
  %119 = getelementptr inbounds %struct.BoneInitData, ptr %118, i64 0, i32 5
  %120 = load float, ptr %119, align 8, !tbaa !71
  %121 = getelementptr inbounds %struct.EditBone, ptr %117, i64 0, i32 11
  store float %120, ptr %121, align 4, !tbaa !72
  %122 = getelementptr inbounds %struct.BoneInitData, ptr %118, i64 0, i32 2
  %123 = load float, ptr %122, align 4, !tbaa !74
  %124 = getelementptr inbounds %struct.EditBone, ptr %117, i64 0, i32 19
  store float %123, ptr %124, align 4, !tbaa !75
  %125 = getelementptr inbounds %struct.BoneInitData, ptr %118, i64 0, i32 3
  %126 = load float, ptr %125, align 8, !tbaa !76
  %127 = getelementptr inbounds %struct.EditBone, ptr %117, i64 0, i32 6
  store float %126, ptr %127, align 8, !tbaa !77
  %128 = getelementptr inbounds %struct.BoneInitData, ptr %118, i64 0, i32 6
  %129 = load float, ptr %128, align 4, !tbaa !78
  %130 = getelementptr inbounds %struct.EditBone, ptr %117, i64 0, i32 13
  store float %129, ptr %130, align 4, !tbaa !79
  %131 = getelementptr inbounds %struct.BoneInitData, ptr %118, i64 0, i32 7
  %132 = load float, ptr %131, align 8, !tbaa !80
  %133 = getelementptr inbounds %struct.EditBone, ptr %117, i64 0, i32 15
  store float %132, ptr %133, align 4, !tbaa !81
  %134 = getelementptr inbounds %struct.EditBone, ptr %117, i64 0, i32 7
  %135 = getelementptr inbounds %struct.BoneInitData, ptr %118, i64 0, i32 4
  %136 = load float, ptr %135, align 4, !tbaa !82
  store float %136, ptr %134, align 4, !tbaa !82
  %137 = getelementptr inbounds %struct.BoneInitData, ptr %118, i64 0, i32 4, i64 1
  %138 = load float, ptr %137, align 4, !tbaa !82
  %139 = getelementptr inbounds %struct.EditBone, ptr %117, i64 0, i32 7, i64 1
  store float %138, ptr %139, align 4, !tbaa !82
  %140 = getelementptr inbounds %struct.BoneInitData, ptr %118, i64 0, i32 4, i64 2
  %141 = load float, ptr %140, align 4, !tbaa !82
  %142 = getelementptr inbounds %struct.EditBone, ptr %117, i64 0, i32 7, i64 2
  store float %141, ptr %142, align 4, !tbaa !82
  %143 = getelementptr inbounds %struct.EditBone, ptr %117, i64 0, i32 8
  %144 = getelementptr inbounds %struct.BoneInitData, ptr %118, i64 0, i32 1
  %145 = load float, ptr %144, align 4, !tbaa !82
  store float %145, ptr %143, align 4, !tbaa !82
  %146 = getelementptr inbounds %struct.BoneInitData, ptr %118, i64 0, i32 1, i64 1
  %147 = load float, ptr %146, align 4, !tbaa !82
  %148 = getelementptr inbounds %struct.EditBone, ptr %117, i64 0, i32 8, i64 1
  store float %147, ptr %148, align 4, !tbaa !82
  %149 = getelementptr inbounds %struct.BoneInitData, ptr %118, i64 0, i32 1, i64 2
  %150 = load float, ptr %149, align 4, !tbaa !82
  %151 = getelementptr inbounds %struct.EditBone, ptr %117, i64 0, i32 8, i64 2
  store float %150, ptr %151, align 4, !tbaa !82
  br label %152

152:                                              ; preds = %116, %171
  %153 = phi ptr [ %57, %116 ], [ %172, %171 ]
  %154 = getelementptr inbounds %struct.EditBone, ptr %153, i64 0, i32 9
  %155 = load i32, ptr %154, align 4, !tbaa !85
  %156 = and i32 %155, 16
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %171, label %158

158:                                              ; preds = %152
  %159 = getelementptr inbounds %struct.EditBone, ptr %153, i64 0, i32 3
  %160 = load ptr, ptr %159, align 8, !tbaa !86
  %161 = icmp eq ptr %160, %117
  br i1 %161, label %162, label %171

162:                                              ; preds = %158
  %163 = getelementptr inbounds %struct.EditBone, ptr %153, i64 0, i32 7
  %164 = load float, ptr %143, align 4, !tbaa !82
  store float %164, ptr %163, align 4, !tbaa !82
  %165 = load float, ptr %148, align 4, !tbaa !82
  %166 = getelementptr inbounds %struct.EditBone, ptr %153, i64 0, i32 7, i64 1
  store float %165, ptr %166, align 4, !tbaa !82
  %167 = load float, ptr %151, align 4, !tbaa !82
  %168 = getelementptr inbounds %struct.EditBone, ptr %153, i64 0, i32 7, i64 2
  store float %167, ptr %168, align 4, !tbaa !82
  %169 = load float, ptr %124, align 4, !tbaa !75
  %170 = getelementptr inbounds %struct.EditBone, ptr %153, i64 0, i32 18
  store float %169, ptr %170, align 8, !tbaa !87
  br label %171

171:                                              ; preds = %152, %158, %162
  %172 = load ptr, ptr %153, align 8, !tbaa !33
  %173 = icmp eq ptr %172, null
  br i1 %173, label %174, label %152, !llvm.loop !88

174:                                              ; preds = %171
  %175 = getelementptr inbounds %struct.EditBone, ptr %117, i64 0, i32 9
  %176 = load i32, ptr %175, align 4, !tbaa !85
  %177 = and i32 %176, 16
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %193, label %179

179:                                              ; preds = %174
  %180 = getelementptr inbounds %struct.EditBone, ptr %117, i64 0, i32 3
  %181 = load ptr, ptr %180, align 8, !tbaa !86
  %182 = icmp eq ptr %181, null
  br i1 %182, label %193, label %183

183:                                              ; preds = %179
  %184 = getelementptr inbounds %struct.EditBone, ptr %181, i64 0, i32 8
  %185 = load float, ptr %134, align 4, !tbaa !82
  store float %185, ptr %184, align 4, !tbaa !82
  %186 = load float, ptr %139, align 4, !tbaa !82
  %187 = getelementptr inbounds %struct.EditBone, ptr %181, i64 0, i32 8, i64 1
  store float %186, ptr %187, align 4, !tbaa !82
  %188 = load float, ptr %142, align 4, !tbaa !82
  %189 = getelementptr inbounds %struct.EditBone, ptr %181, i64 0, i32 8, i64 2
  store float %188, ptr %189, align 4, !tbaa !82
  %190 = getelementptr inbounds %struct.EditBone, ptr %117, i64 0, i32 18
  %191 = load float, ptr %190, align 8, !tbaa !87
  %192 = getelementptr inbounds %struct.EditBone, ptr %181, i64 0, i32 19
  store float %191, ptr %192, align 4, !tbaa !75
  br label %193

193:                                              ; preds = %174, %179, %183
  %194 = getelementptr inbounds %struct.BoneInitData, ptr %118, i64 1
  %195 = load ptr, ptr %194, align 8, !tbaa !67
  %196 = icmp eq ptr %195, null
  br i1 %196, label %197, label %116, !llvm.loop !83

197:                                              ; preds = %193, %112, %15, %1
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @flushTransParticles(ptr nocapture noundef readonly %0) local_unnamed_addr #6 {
  %2 = alloca [4 x [4 x float]], align 16
  %3 = alloca [4 x [4 x float]], align 16
  %4 = alloca [3 x float], align 8
  %5 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 56
  %6 = load ptr, ptr %5, align 8, !tbaa !89
  %7 = getelementptr inbounds %struct.Scene, ptr %6, i64 0, i32 6
  %8 = load ptr, ptr %7, align 8, !tbaa !90
  %9 = icmp eq ptr %8, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct.Base, ptr %8, i64 0, i32 7
  %12 = load ptr, ptr %11, align 8, !tbaa !109
  br label %13

13:                                               ; preds = %1, %10
  %14 = phi ptr [ %12, %10 ], [ null, %1 ]
  %15 = tail call ptr @PE_get_current(ptr noundef nonnull %6, ptr noundef %14) #18
  %16 = getelementptr inbounds %struct.PTCacheEdit, ptr %15, i64 0, i32 4
  %17 = load ptr, ptr %16, align 8, !tbaa !111
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %2) #18
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %3) #18
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %4) #18
  %18 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 1
  %19 = load i32, ptr %18, align 4, !tbaa !24
  %20 = freeze i32 %19
  %21 = and i32 %20, 2048
  %22 = icmp eq ptr %17, null
  br i1 %22, label %23, label %306

23:                                               ; preds = %13
  %24 = getelementptr inbounds %struct.PTCacheEdit, ptr %15, i64 0, i32 2
  %25 = load ptr, ptr %24, align 8, !tbaa !114
  %26 = getelementptr inbounds %struct.PTCacheEdit, ptr %15, i64 0, i32 11
  %27 = load i32, ptr %26, align 8, !tbaa !115
  %28 = icmp sgt i32 %27, 0
  br i1 %28, label %29, label %456

29:                                               ; preds = %23
  %30 = zext i32 %27 to i64
  %31 = icmp ult i32 %27, 9
  br i1 %31, label %209, label %32

32:                                               ; preds = %29
  %33 = icmp ult i32 %27, 17
  br i1 %33, label %212, label %34

34:                                               ; preds = %32
  %35 = and i64 %30, 15
  %36 = icmp eq i64 %35, 0
  %37 = select i1 %36, i64 16, i64 %35
  %38 = sub nsw i64 %30, %37
  %39 = getelementptr %struct.PTCacheEditPoint, ptr %25, i64 0, i32 2
  %40 = getelementptr %struct.PTCacheEditPoint, ptr %25, i64 0, i32 2
  %41 = getelementptr %struct.PTCacheEditPoint, ptr %25, i64 0, i32 2
  %42 = getelementptr %struct.PTCacheEditPoint, ptr %25, i64 0, i32 2
  %43 = getelementptr %struct.PTCacheEditPoint, ptr %25, i64 0, i32 2
  %44 = getelementptr %struct.PTCacheEditPoint, ptr %25, i64 0, i32 2
  %45 = getelementptr %struct.PTCacheEditPoint, ptr %25, i64 0, i32 2
  %46 = getelementptr %struct.PTCacheEditPoint, ptr %25, i64 0, i32 2
  %47 = getelementptr %struct.PTCacheEditPoint, ptr %25, i64 0, i32 2
  %48 = getelementptr %struct.PTCacheEditPoint, ptr %25, i64 0, i32 2
  %49 = getelementptr %struct.PTCacheEditPoint, ptr %25, i64 0, i32 2
  %50 = getelementptr %struct.PTCacheEditPoint, ptr %25, i64 0, i32 2
  %51 = getelementptr %struct.PTCacheEditPoint, ptr %25, i64 0, i32 2
  %52 = getelementptr %struct.PTCacheEditPoint, ptr %25, i64 0, i32 2
  %53 = getelementptr %struct.PTCacheEditPoint, ptr %25, i64 0, i32 2
  %54 = getelementptr %struct.PTCacheEditPoint, ptr %25, i64 0, i32 2
  br label %55

55:                                               ; preds = %201, %34
  %56 = phi i64 [ 0, %34 ], [ %202, %201 ]
  %57 = shl i64 %56, 4
  %58 = shl i64 %56, 4
  %59 = or i64 %58, 16
  %60 = shl i64 %56, 4
  %61 = or i64 %60, 32
  %62 = shl i64 %56, 4
  %63 = or i64 %62, 48
  %64 = shl i64 %56, 4
  %65 = or i64 %64, 64
  %66 = shl i64 %56, 4
  %67 = or i64 %66, 80
  %68 = shl i64 %56, 4
  %69 = or i64 %68, 96
  %70 = shl i64 %56, 4
  %71 = or i64 %70, 112
  %72 = shl i64 %56, 4
  %73 = or i64 %72, 128
  %74 = shl i64 %56, 4
  %75 = or i64 %74, 144
  %76 = shl i64 %56, 4
  %77 = or i64 %76, 160
  %78 = shl i64 %56, 4
  %79 = or i64 %78, 176
  %80 = shl i64 %56, 4
  %81 = or i64 %80, 192
  %82 = shl i64 %56, 4
  %83 = or i64 %82, 208
  %84 = shl i64 %56, 4
  %85 = or i64 %84, 224
  %86 = shl i64 %56, 4
  %87 = or i64 %86, 240
  %88 = getelementptr i8, ptr %39, i64 %57
  %89 = getelementptr i8, ptr %40, i64 %59
  %90 = getelementptr i8, ptr %41, i64 %61
  %91 = getelementptr i8, ptr %42, i64 %63
  %92 = getelementptr i8, ptr %43, i64 %65
  %93 = getelementptr i8, ptr %44, i64 %67
  %94 = getelementptr i8, ptr %45, i64 %69
  %95 = getelementptr i8, ptr %46, i64 %71
  %96 = getelementptr i8, ptr %47, i64 %73
  %97 = getelementptr i8, ptr %48, i64 %75
  %98 = getelementptr i8, ptr %49, i64 %77
  %99 = getelementptr i8, ptr %50, i64 %79
  %100 = getelementptr i8, ptr %51, i64 %81
  %101 = getelementptr i8, ptr %52, i64 %83
  %102 = getelementptr i8, ptr %53, i64 %85
  %103 = getelementptr i8, ptr %54, i64 %87
  %104 = load i16, ptr %88, align 4, !tbaa !116
  %105 = load i16, ptr %89, align 4, !tbaa !116
  %106 = load i16, ptr %90, align 4, !tbaa !116
  %107 = load i16, ptr %91, align 4, !tbaa !116
  %108 = load i16, ptr %92, align 4, !tbaa !116
  %109 = load i16, ptr %93, align 4, !tbaa !116
  %110 = load i16, ptr %94, align 4, !tbaa !116
  %111 = load i16, ptr %95, align 4, !tbaa !116
  %112 = load i16, ptr %96, align 4, !tbaa !116
  %113 = load i16, ptr %97, align 4, !tbaa !116
  %114 = load i16, ptr %98, align 4, !tbaa !116
  %115 = load i16, ptr %99, align 4, !tbaa !116
  %116 = load i16, ptr %100, align 4, !tbaa !116
  %117 = load i16, ptr %101, align 4, !tbaa !116
  %118 = load i16, ptr %102, align 4, !tbaa !116
  %119 = load i16, ptr %103, align 4, !tbaa !116
  %120 = insertelement <16 x i16> poison, i16 %104, i64 0
  %121 = insertelement <16 x i16> %120, i16 %105, i64 1
  %122 = insertelement <16 x i16> %121, i16 %106, i64 2
  %123 = insertelement <16 x i16> %122, i16 %107, i64 3
  %124 = insertelement <16 x i16> %123, i16 %108, i64 4
  %125 = insertelement <16 x i16> %124, i16 %109, i64 5
  %126 = insertelement <16 x i16> %125, i16 %110, i64 6
  %127 = insertelement <16 x i16> %126, i16 %111, i64 7
  %128 = insertelement <16 x i16> %127, i16 %112, i64 8
  %129 = insertelement <16 x i16> %128, i16 %113, i64 9
  %130 = insertelement <16 x i16> %129, i16 %114, i64 10
  %131 = insertelement <16 x i16> %130, i16 %115, i64 11
  %132 = insertelement <16 x i16> %131, i16 %116, i64 12
  %133 = insertelement <16 x i16> %132, i16 %117, i64 13
  %134 = insertelement <16 x i16> %133, i16 %118, i64 14
  %135 = insertelement <16 x i16> %134, i16 %119, i64 15
  %136 = and <16 x i16> %135, <i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4>
  %137 = icmp ne <16 x i16> %136, zeroinitializer
  %138 = extractelement <16 x i1> %137, i64 0
  br i1 %138, label %139, label %141

139:                                              ; preds = %55
  %140 = or i16 %104, 2
  store i16 %140, ptr %88, align 4, !tbaa !116
  br label %141

141:                                              ; preds = %139, %55
  %142 = extractelement <16 x i1> %137, i64 1
  br i1 %142, label %143, label %145

143:                                              ; preds = %141
  %144 = or i16 %105, 2
  store i16 %144, ptr %89, align 4, !tbaa !116
  br label %145

145:                                              ; preds = %143, %141
  %146 = extractelement <16 x i1> %137, i64 2
  br i1 %146, label %147, label %149

147:                                              ; preds = %145
  %148 = or i16 %106, 2
  store i16 %148, ptr %90, align 4, !tbaa !116
  br label %149

149:                                              ; preds = %147, %145
  %150 = extractelement <16 x i1> %137, i64 3
  br i1 %150, label %151, label %153

151:                                              ; preds = %149
  %152 = or i16 %107, 2
  store i16 %152, ptr %91, align 4, !tbaa !116
  br label %153

153:                                              ; preds = %151, %149
  %154 = extractelement <16 x i1> %137, i64 4
  br i1 %154, label %155, label %157

155:                                              ; preds = %153
  %156 = or i16 %108, 2
  store i16 %156, ptr %92, align 4, !tbaa !116
  br label %157

157:                                              ; preds = %155, %153
  %158 = extractelement <16 x i1> %137, i64 5
  br i1 %158, label %159, label %161

159:                                              ; preds = %157
  %160 = or i16 %109, 2
  store i16 %160, ptr %93, align 4, !tbaa !116
  br label %161

161:                                              ; preds = %159, %157
  %162 = extractelement <16 x i1> %137, i64 6
  br i1 %162, label %163, label %165

163:                                              ; preds = %161
  %164 = or i16 %110, 2
  store i16 %164, ptr %94, align 4, !tbaa !116
  br label %165

165:                                              ; preds = %163, %161
  %166 = extractelement <16 x i1> %137, i64 7
  br i1 %166, label %167, label %169

167:                                              ; preds = %165
  %168 = or i16 %111, 2
  store i16 %168, ptr %95, align 4, !tbaa !116
  br label %169

169:                                              ; preds = %167, %165
  %170 = extractelement <16 x i1> %137, i64 8
  br i1 %170, label %171, label %173

171:                                              ; preds = %169
  %172 = or i16 %112, 2
  store i16 %172, ptr %96, align 4, !tbaa !116
  br label %173

173:                                              ; preds = %171, %169
  %174 = extractelement <16 x i1> %137, i64 9
  br i1 %174, label %175, label %177

175:                                              ; preds = %173
  %176 = or i16 %113, 2
  store i16 %176, ptr %97, align 4, !tbaa !116
  br label %177

177:                                              ; preds = %175, %173
  %178 = extractelement <16 x i1> %137, i64 10
  br i1 %178, label %179, label %181

179:                                              ; preds = %177
  %180 = or i16 %114, 2
  store i16 %180, ptr %98, align 4, !tbaa !116
  br label %181

181:                                              ; preds = %179, %177
  %182 = extractelement <16 x i1> %137, i64 11
  br i1 %182, label %183, label %185

183:                                              ; preds = %181
  %184 = or i16 %115, 2
  store i16 %184, ptr %99, align 4, !tbaa !116
  br label %185

185:                                              ; preds = %183, %181
  %186 = extractelement <16 x i1> %137, i64 12
  br i1 %186, label %187, label %189

187:                                              ; preds = %185
  %188 = or i16 %116, 2
  store i16 %188, ptr %100, align 4, !tbaa !116
  br label %189

189:                                              ; preds = %187, %185
  %190 = extractelement <16 x i1> %137, i64 13
  br i1 %190, label %191, label %193

191:                                              ; preds = %189
  %192 = or i16 %117, 2
  store i16 %192, ptr %101, align 4, !tbaa !116
  br label %193

193:                                              ; preds = %191, %189
  %194 = extractelement <16 x i1> %137, i64 14
  br i1 %194, label %195, label %197

195:                                              ; preds = %193
  %196 = or i16 %118, 2
  store i16 %196, ptr %102, align 4, !tbaa !116
  br label %197

197:                                              ; preds = %195, %193
  %198 = extractelement <16 x i1> %137, i64 15
  br i1 %198, label %199, label %201

199:                                              ; preds = %197
  %200 = or i16 %119, 2
  store i16 %200, ptr %103, align 4, !tbaa !116
  br label %201

201:                                              ; preds = %199, %197
  %202 = add nuw i64 %56, 16
  %203 = icmp eq i64 %202, %38
  br i1 %203, label %204, label %55, !llvm.loop !118

204:                                              ; preds = %201
  %205 = shl nsw i64 %38, 4
  %206 = getelementptr i8, ptr %25, i64 %205
  %207 = trunc i64 %38 to i32
  %208 = icmp ult i64 %37, 9
  br i1 %208, label %209, label %212

209:                                              ; preds = %303, %29, %204
  %210 = phi i32 [ 0, %29 ], [ %207, %204 ], [ %218, %303 ]
  %211 = phi ptr [ %25, %29 ], [ %206, %204 ], [ %220, %303 ]
  br label %311

212:                                              ; preds = %32, %204
  %213 = phi i64 [ %38, %204 ], [ 0, %32 ]
  %214 = and i64 %30, 7
  %215 = icmp eq i64 %214, 0
  %216 = select i1 %215, i64 8, i64 %214
  %217 = sub nsw i64 %30, %216
  %218 = trunc i64 %217 to i32
  %219 = shl nsw i64 %217, 4
  %220 = getelementptr i8, ptr %25, i64 %219
  %221 = getelementptr %struct.PTCacheEditPoint, ptr %25, i64 0, i32 2
  %222 = getelementptr %struct.PTCacheEditPoint, ptr %25, i64 0, i32 2
  %223 = getelementptr %struct.PTCacheEditPoint, ptr %25, i64 0, i32 2
  %224 = getelementptr %struct.PTCacheEditPoint, ptr %25, i64 0, i32 2
  %225 = getelementptr %struct.PTCacheEditPoint, ptr %25, i64 0, i32 2
  %226 = getelementptr %struct.PTCacheEditPoint, ptr %25, i64 0, i32 2
  %227 = getelementptr %struct.PTCacheEditPoint, ptr %25, i64 0, i32 2
  %228 = getelementptr %struct.PTCacheEditPoint, ptr %25, i64 0, i32 2
  br label %229

229:                                              ; preds = %303, %212
  %230 = phi i64 [ %213, %212 ], [ %304, %303 ]
  %231 = shl i64 %230, 4
  %232 = shl i64 %230, 4
  %233 = add i64 %232, 16
  %234 = shl i64 %230, 4
  %235 = add i64 %234, 32
  %236 = shl i64 %230, 4
  %237 = add i64 %236, 48
  %238 = shl i64 %230, 4
  %239 = add i64 %238, 64
  %240 = shl i64 %230, 4
  %241 = add i64 %240, 80
  %242 = shl i64 %230, 4
  %243 = add i64 %242, 96
  %244 = shl i64 %230, 4
  %245 = add i64 %244, 112
  %246 = getelementptr i8, ptr %221, i64 %231
  %247 = getelementptr i8, ptr %222, i64 %233
  %248 = getelementptr i8, ptr %223, i64 %235
  %249 = getelementptr i8, ptr %224, i64 %237
  %250 = getelementptr i8, ptr %225, i64 %239
  %251 = getelementptr i8, ptr %226, i64 %241
  %252 = getelementptr i8, ptr %227, i64 %243
  %253 = getelementptr i8, ptr %228, i64 %245
  %254 = load i16, ptr %246, align 4, !tbaa !116
  %255 = load i16, ptr %247, align 4, !tbaa !116
  %256 = load i16, ptr %248, align 4, !tbaa !116
  %257 = load i16, ptr %249, align 4, !tbaa !116
  %258 = load i16, ptr %250, align 4, !tbaa !116
  %259 = load i16, ptr %251, align 4, !tbaa !116
  %260 = load i16, ptr %252, align 4, !tbaa !116
  %261 = load i16, ptr %253, align 4, !tbaa !116
  %262 = insertelement <8 x i16> poison, i16 %254, i64 0
  %263 = insertelement <8 x i16> %262, i16 %255, i64 1
  %264 = insertelement <8 x i16> %263, i16 %256, i64 2
  %265 = insertelement <8 x i16> %264, i16 %257, i64 3
  %266 = insertelement <8 x i16> %265, i16 %258, i64 4
  %267 = insertelement <8 x i16> %266, i16 %259, i64 5
  %268 = insertelement <8 x i16> %267, i16 %260, i64 6
  %269 = insertelement <8 x i16> %268, i16 %261, i64 7
  %270 = and <8 x i16> %269, <i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4, i16 4>
  %271 = icmp ne <8 x i16> %270, zeroinitializer
  %272 = extractelement <8 x i1> %271, i64 0
  br i1 %272, label %273, label %275

273:                                              ; preds = %229
  %274 = or i16 %254, 2
  store i16 %274, ptr %246, align 4, !tbaa !116
  br label %275

275:                                              ; preds = %273, %229
  %276 = extractelement <8 x i1> %271, i64 1
  br i1 %276, label %277, label %279

277:                                              ; preds = %275
  %278 = or i16 %255, 2
  store i16 %278, ptr %247, align 4, !tbaa !116
  br label %279

279:                                              ; preds = %277, %275
  %280 = extractelement <8 x i1> %271, i64 2
  br i1 %280, label %281, label %283

281:                                              ; preds = %279
  %282 = or i16 %256, 2
  store i16 %282, ptr %248, align 4, !tbaa !116
  br label %283

283:                                              ; preds = %281, %279
  %284 = extractelement <8 x i1> %271, i64 3
  br i1 %284, label %285, label %287

285:                                              ; preds = %283
  %286 = or i16 %257, 2
  store i16 %286, ptr %249, align 4, !tbaa !116
  br label %287

287:                                              ; preds = %285, %283
  %288 = extractelement <8 x i1> %271, i64 4
  br i1 %288, label %289, label %291

289:                                              ; preds = %287
  %290 = or i16 %258, 2
  store i16 %290, ptr %250, align 4, !tbaa !116
  br label %291

291:                                              ; preds = %289, %287
  %292 = extractelement <8 x i1> %271, i64 5
  br i1 %292, label %293, label %295

293:                                              ; preds = %291
  %294 = or i16 %259, 2
  store i16 %294, ptr %251, align 4, !tbaa !116
  br label %295

295:                                              ; preds = %293, %291
  %296 = extractelement <8 x i1> %271, i64 6
  br i1 %296, label %297, label %299

297:                                              ; preds = %295
  %298 = or i16 %260, 2
  store i16 %298, ptr %252, align 4, !tbaa !116
  br label %299

299:                                              ; preds = %297, %295
  %300 = extractelement <8 x i1> %271, i64 7
  br i1 %300, label %301, label %303

301:                                              ; preds = %299
  %302 = or i16 %261, 2
  store i16 %302, ptr %253, align 4, !tbaa !116
  br label %303

303:                                              ; preds = %301, %299
  %304 = add nuw i64 %230, 8
  %305 = icmp eq i64 %304, %217
  br i1 %305, label %209, label %229, !llvm.loop !121

306:                                              ; preds = %13
  %307 = tail call ptr @psys_get_modifier(ptr noundef %14, ptr noundef nonnull %17) #18
  %308 = getelementptr inbounds %struct.PTCacheEdit, ptr %15, i64 0, i32 11
  %309 = load i32, ptr %308, align 8, !tbaa !115
  %310 = icmp sgt i32 %309, 0
  br i1 %310, label %324, label %456

311:                                              ; preds = %209, %320
  %312 = phi i32 [ %321, %320 ], [ %210, %209 ]
  %313 = phi ptr [ %322, %320 ], [ %211, %209 ]
  %314 = getelementptr inbounds %struct.PTCacheEditPoint, ptr %313, i64 0, i32 2
  %315 = load i16, ptr %314, align 4, !tbaa !116
  %316 = and i16 %315, 4
  %317 = icmp eq i16 %316, 0
  br i1 %317, label %320, label %318

318:                                              ; preds = %311
  %319 = or i16 %315, 2
  store i16 %319, ptr %314, align 4, !tbaa !116
  br label %320

320:                                              ; preds = %318, %311
  %321 = add nuw nsw i32 %312, 1
  %322 = getelementptr inbounds %struct.PTCacheEditPoint, ptr %313, i64 1
  %323 = icmp eq i32 %321, %27
  br i1 %323, label %456, label %311, !llvm.loop !122

324:                                              ; preds = %306
  %325 = getelementptr inbounds %struct.PTCacheEdit, ptr %15, i64 0, i32 2
  %326 = load ptr, ptr %325, align 8, !tbaa !114
  %327 = getelementptr inbounds %struct.ParticleSystem, ptr %17, i64 0, i32 25
  %328 = getelementptr inbounds %struct.ParticleSystemModifierData, ptr %307, i64 0, i32 2
  %329 = getelementptr inbounds %struct.ParticleSystem, ptr %17, i64 0, i32 2
  %330 = getelementptr inbounds %struct.ParticleSystem, ptr %17, i64 0, i32 3
  %331 = getelementptr inbounds float, ptr %4, i64 1
  %332 = getelementptr inbounds float, ptr %4, i64 2
  %333 = icmp eq i32 %21, 0
  br i1 %333, label %334, label %385

334:                                              ; preds = %324, %360
  %335 = phi i64 [ %361, %360 ], [ 0, %324 ]
  %336 = phi ptr [ %362, %360 ], [ %326, %324 ]
  %337 = getelementptr inbounds %struct.PTCacheEditPoint, ptr %336, i64 0, i32 2
  %338 = load i16, ptr %337, align 4, !tbaa !116
  %339 = and i16 %338, 4
  %340 = icmp eq i16 %339, 0
  br i1 %340, label %360, label %341

341:                                              ; preds = %334
  %342 = load i32, ptr %327, align 4, !tbaa !123
  %343 = and i32 %342, 2
  %344 = icmp eq i32 %343, 0
  br i1 %344, label %345, label %358

345:                                              ; preds = %341
  %346 = load ptr, ptr %328, align 8, !tbaa !125
  %347 = load ptr, ptr %329, align 8, !tbaa !128
  %348 = getelementptr inbounds %struct.ParticleSettings, ptr %347, i64 0, i32 8
  %349 = load i16, ptr %348, align 2, !tbaa !129
  %350 = load ptr, ptr %330, align 8, !tbaa !131
  %351 = getelementptr inbounds %struct.ParticleData, ptr %350, i64 %335
  call void @psys_mat_hair_to_global(ptr noundef %14, ptr noundef %346, i16 noundef signext %349, ptr noundef %351, ptr noundef nonnull %2) #18
  %352 = call zeroext i8 @invert_m4_m4(ptr noundef nonnull %3, ptr noundef nonnull %2) #18
  %353 = getelementptr inbounds %struct.PTCacheEditPoint, ptr %336, i64 0, i32 1
  %354 = load i32, ptr %353, align 8, !tbaa !132
  %355 = icmp sgt i32 %354, 0
  br i1 %355, label %356, label %360

356:                                              ; preds = %345
  %357 = load ptr, ptr %336, align 8, !tbaa !133
  br label %366

358:                                              ; preds = %341
  %359 = or i16 %338, 2
  store i16 %359, ptr %337, align 4, !tbaa !116
  br label %360

360:                                              ; preds = %366, %345, %358, %334
  %361 = add nuw nsw i64 %335, 1
  %362 = getelementptr inbounds %struct.PTCacheEditPoint, ptr %336, i64 1
  %363 = load i32, ptr %308, align 8, !tbaa !115
  %364 = sext i32 %363 to i64
  %365 = icmp slt i64 %361, %364
  br i1 %365, label %334, label %456, !llvm.loop !134

366:                                              ; preds = %356, %366
  %367 = phi i32 [ %381, %366 ], [ 0, %356 ]
  %368 = phi ptr [ %382, %366 ], [ %357, %356 ]
  %369 = getelementptr inbounds %struct.PTCacheEditKey, ptr %368, i64 0, i32 4
  %370 = load <2 x float>, ptr %369, align 4, !tbaa !82
  store <2 x float> %370, ptr %4, align 8, !tbaa !82
  %371 = getelementptr inbounds %struct.PTCacheEditKey, ptr %368, i64 0, i32 4, i64 2
  %372 = load float, ptr %371, align 4, !tbaa !82
  store float %372, ptr %332, align 8, !tbaa !82
  call void @mul_m4_v3(ptr noundef nonnull %3, ptr noundef nonnull %4) #18
  %373 = load ptr, ptr %368, align 8, !tbaa !135
  %374 = load float, ptr %4, align 8, !tbaa !82
  store float %374, ptr %373, align 4, !tbaa !82
  %375 = load float, ptr %331, align 4, !tbaa !82
  %376 = getelementptr inbounds float, ptr %373, i64 1
  store float %375, ptr %376, align 4, !tbaa !82
  %377 = load float, ptr %332, align 8, !tbaa !82
  %378 = getelementptr inbounds float, ptr %373, i64 2
  store float %377, ptr %378, align 4, !tbaa !82
  %379 = load i16, ptr %337, align 4, !tbaa !116
  %380 = or i16 %379, 2
  store i16 %380, ptr %337, align 4, !tbaa !116
  %381 = add nuw nsw i32 %367, 1
  %382 = getelementptr inbounds %struct.PTCacheEditKey, ptr %368, i64 1
  %383 = load i32, ptr %353, align 8, !tbaa !132
  %384 = icmp slt i32 %381, %383
  br i1 %384, label %366, label %360, !llvm.loop !137

385:                                              ; preds = %324, %450
  %386 = phi i64 [ %451, %450 ], [ 0, %324 ]
  %387 = phi ptr [ %452, %450 ], [ %326, %324 ]
  %388 = getelementptr inbounds %struct.PTCacheEditPoint, ptr %387, i64 0, i32 2
  %389 = load i16, ptr %388, align 4, !tbaa !116
  %390 = and i16 %389, 4
  %391 = icmp eq i16 %390, 0
  br i1 %391, label %450, label %392

392:                                              ; preds = %385
  %393 = load i32, ptr %327, align 4, !tbaa !123
  %394 = and i32 %393, 2
  %395 = icmp eq i32 %394, 0
  br i1 %395, label %396, label %448

396:                                              ; preds = %392
  %397 = load ptr, ptr %328, align 8, !tbaa !125
  %398 = load ptr, ptr %329, align 8, !tbaa !128
  %399 = getelementptr inbounds %struct.ParticleSettings, ptr %398, i64 0, i32 8
  %400 = load i16, ptr %399, align 2, !tbaa !129
  %401 = load ptr, ptr %330, align 8, !tbaa !131
  %402 = getelementptr inbounds %struct.ParticleData, ptr %401, i64 %386
  call void @psys_mat_hair_to_global(ptr noundef %14, ptr noundef %397, i16 noundef signext %400, ptr noundef %402, ptr noundef nonnull %2) #18
  %403 = call zeroext i8 @invert_m4_m4(ptr noundef nonnull %3, ptr noundef nonnull %2) #18
  %404 = getelementptr inbounds %struct.PTCacheEditPoint, ptr %387, i64 0, i32 1
  %405 = load i32, ptr %404, align 8, !tbaa !132
  %406 = icmp sgt i32 %405, 0
  br i1 %406, label %407, label %450

407:                                              ; preds = %396
  %408 = load ptr, ptr %387, align 8, !tbaa !133
  br label %409

409:                                              ; preds = %407, %443
  %410 = phi i32 [ %444, %443 ], [ 0, %407 ]
  %411 = phi ptr [ %445, %443 ], [ %408, %407 ]
  %412 = getelementptr inbounds %struct.PTCacheEditKey, ptr %411, i64 0, i32 4
  %413 = load <2 x float>, ptr %412, align 4, !tbaa !82
  store <2 x float> %413, ptr %4, align 8, !tbaa !82
  %414 = getelementptr inbounds %struct.PTCacheEditKey, ptr %411, i64 0, i32 4, i64 2
  %415 = load float, ptr %414, align 4, !tbaa !82
  store float %415, ptr %332, align 8, !tbaa !82
  call void @mul_m4_v3(ptr noundef nonnull %3, ptr noundef nonnull %4) #18
  %416 = load ptr, ptr %411, align 8, !tbaa !135
  %417 = load float, ptr %416, align 4, !tbaa !82
  %418 = load float, ptr %4, align 8, !tbaa !82
  %419 = fsub fast float %417, %418
  %420 = call fast float @llvm.fabs.f32(float %419)
  %421 = fcmp fast ugt float %420, 0x3F1A36E2E0000000
  br i1 %421, label %436, label %422

422:                                              ; preds = %409
  %423 = getelementptr inbounds float, ptr %416, i64 1
  %424 = load float, ptr %423, align 4, !tbaa !82
  %425 = load float, ptr %331, align 4, !tbaa !82
  %426 = fsub fast float %424, %425
  %427 = call fast float @llvm.fabs.f32(float %426)
  %428 = fcmp fast ugt float %427, 0x3F1A36E2E0000000
  br i1 %428, label %436, label %429

429:                                              ; preds = %422
  %430 = getelementptr inbounds float, ptr %416, i64 2
  %431 = load float, ptr %430, align 4, !tbaa !82
  %432 = load float, ptr %332, align 8, !tbaa !82
  %433 = fsub fast float %431, %432
  %434 = call fast float @llvm.fabs.f32(float %433)
  %435 = fcmp fast ugt float %434, 0x3F1A36E2E0000000
  br i1 %435, label %436, label %443

436:                                              ; preds = %429, %422, %409
  store float %418, ptr %416, align 4, !tbaa !82
  %437 = load float, ptr %331, align 4, !tbaa !82
  %438 = getelementptr inbounds float, ptr %416, i64 1
  store float %437, ptr %438, align 4, !tbaa !82
  %439 = load float, ptr %332, align 8, !tbaa !82
  %440 = getelementptr inbounds float, ptr %416, i64 2
  store float %439, ptr %440, align 4, !tbaa !82
  %441 = load i16, ptr %388, align 4, !tbaa !116
  %442 = or i16 %441, 2
  store i16 %442, ptr %388, align 4, !tbaa !116
  br label %443

443:                                              ; preds = %429, %436
  %444 = add nuw nsw i32 %410, 1
  %445 = getelementptr inbounds %struct.PTCacheEditKey, ptr %411, i64 1
  %446 = load i32, ptr %404, align 8, !tbaa !132
  %447 = icmp slt i32 %444, %446
  br i1 %447, label %409, label %450, !llvm.loop !137

448:                                              ; preds = %392
  %449 = or i16 %389, 2
  store i16 %449, ptr %388, align 4, !tbaa !116
  br label %450

450:                                              ; preds = %443, %396, %448, %385
  %451 = add nuw nsw i64 %386, 1
  %452 = getelementptr inbounds %struct.PTCacheEditPoint, ptr %387, i64 1
  %453 = load i32, ptr %308, align 8, !tbaa !115
  %454 = sext i32 %453 to i64
  %455 = icmp slt i64 %451, %454
  br i1 %455, label %385, label %456, !llvm.loop !134

456:                                              ; preds = %450, %360, %320, %306, %23
  %457 = load ptr, ptr %7, align 8, !tbaa !90
  %458 = icmp eq ptr %457, null
  br i1 %458, label %462, label %459

459:                                              ; preds = %456
  %460 = getelementptr inbounds %struct.Base, ptr %457, i64 0, i32 7
  %461 = load ptr, ptr %460, align 8, !tbaa !109
  br label %462

462:                                              ; preds = %456, %459
  %463 = phi ptr [ %461, %459 ], [ null, %456 ]
  call void @PE_update_object(ptr noundef nonnull %6, ptr noundef %463, i32 noundef 1) #18
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %4) #18
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %3) #18
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %2) #18
  ret void
}

declare ptr @PE_get_current(ptr noundef, ptr noundef) local_unnamed_addr #7

declare ptr @psys_get_modifier(ptr noundef, ptr noundef) local_unnamed_addr #7

declare void @psys_mat_hair_to_global(ptr noundef, ptr noundef, i16 noundef signext, ptr noundef, ptr noundef) local_unnamed_addr #7

declare zeroext i8 @invert_m4_m4(ptr noundef, ptr noundef) local_unnamed_addr #7

declare void @mul_m4_v3(ptr noundef, ptr noundef) local_unnamed_addr #7

declare void @PE_update_object(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #7

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @flushTransNodes(ptr noundef %0) local_unnamed_addr #6 {
  %2 = load float, ptr getelementptr inbounds (%struct.UserDef, ptr @U, i64 0, i32 106), align 4, !tbaa !138
  %3 = load i32, ptr getelementptr inbounds (%struct.UserDef, ptr @U, i64 0, i32 33), align 4, !tbaa !142
  tail call void @applyGridAbsolute(ptr noundef %0) #18
  %4 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 9
  %5 = load i32, ptr %4, align 8, !tbaa !5
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %48

7:                                                ; preds = %1
  %8 = fmul fast float %2, 0x3F8C71C720000000
  %9 = sitofp i32 %3 to float
  %10 = fmul fast float %8, %9
  %11 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 12
  %12 = load ptr, ptr %11, align 8, !tbaa !143
  %13 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 10
  %14 = load ptr, ptr %13, align 8, !tbaa !19
  %15 = insertelement <2 x float> poison, float %10, i64 0
  %16 = shufflevector <2 x float> %15, <2 x float> poison, <2 x i32> zeroinitializer
  %17 = fdiv fast <2 x float> <float 1.000000e+00, float 1.000000e+00>, %16
  br label %18

18:                                               ; preds = %7, %37
  %19 = phi i32 [ %38, %37 ], [ %5, %7 ]
  %20 = phi i32 [ %39, %37 ], [ 0, %7 ]
  %21 = phi ptr [ %40, %37 ], [ %14, %7 ]
  %22 = phi ptr [ %41, %37 ], [ %12, %7 ]
  %23 = getelementptr inbounds %struct.TransData, ptr %21, i64 0, i32 15
  %24 = load ptr, ptr %23, align 8, !tbaa !144
  %25 = load <2 x float>, ptr %22, align 8, !tbaa !82
  %26 = fmul fast <2 x float> %25, %17
  %27 = getelementptr inbounds %struct.bNode, ptr %24, i64 0, i32 19
  %28 = load ptr, ptr %27, align 8, !tbaa !145
  %29 = icmp eq ptr %28, null
  %30 = getelementptr inbounds %struct.bNode, ptr %24, i64 0, i32 24
  br i1 %29, label %36, label %31

31:                                               ; preds = %18
  %32 = getelementptr inbounds %struct.bNode, ptr %24, i64 0, i32 25
  %33 = extractelement <2 x float> %26, i64 0
  %34 = extractelement <2 x float> %26, i64 1
  tail call void @nodeFromView(ptr noundef nonnull %28, float noundef nofpclass(nan inf) %33, float noundef nofpclass(nan inf) %34, ptr noundef nonnull %30, ptr noundef nonnull %32) #18
  %35 = load i32, ptr %4, align 8, !tbaa !5
  br label %37

36:                                               ; preds = %18
  store <2 x float> %26, ptr %30, align 8, !tbaa !82
  br label %37

37:                                               ; preds = %36, %31
  %38 = phi i32 [ %19, %36 ], [ %35, %31 ]
  %39 = add nuw nsw i32 %20, 1
  %40 = getelementptr inbounds %struct.TransData, ptr %21, i64 1
  %41 = getelementptr inbounds %struct.TransData2D, ptr %22, i64 1
  %42 = icmp slt i32 %39, %38
  br i1 %42, label %18, label %43, !llvm.loop !147

43:                                               ; preds = %37
  %44 = icmp eq i32 %38, 1
  br i1 %44, label %45, label %48

45:                                               ; preds = %43
  %46 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 54
  %47 = load ptr, ptr %46, align 8, !tbaa !148
  tail call void @ED_node_link_intersect_test(ptr noundef %47, i32 noundef 1) #18
  br label %48

48:                                               ; preds = %1, %45, %43
  ret void
}

declare void @applyGridAbsolute(ptr noundef) local_unnamed_addr #7

declare void @nodeFromView(ptr noundef, float noundef nofpclass(nan inf), float noundef nofpclass(nan inf), ptr noundef, ptr noundef) local_unnamed_addr #7

declare void @ED_node_link_intersect_test(ptr noundef, i32 noundef) local_unnamed_addr #7

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @flushTransSeq(ptr nocapture noundef readonly %0) local_unnamed_addr #6 {
  %2 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 56
  %3 = load ptr, ptr %2, align 8, !tbaa !89
  %4 = tail call ptr @BKE_sequencer_editing_get(ptr noundef %3, i8 noundef zeroext 0) #18
  %5 = load ptr, ptr %4, align 8, !tbaa !149
  %6 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 10
  %7 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 9
  %8 = load i32, ptr %7, align 8, !tbaa !5
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %10, label %117

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 12
  %12 = load ptr, ptr %11, align 8, !tbaa !143
  %13 = load ptr, ptr %6, align 8, !tbaa !19
  br label %14

14:                                               ; preds = %10, %93
  %15 = phi i32 [ %97, %93 ], [ 0, %10 ]
  %16 = phi i32 [ %96, %93 ], [ 0, %10 ]
  %17 = phi i32 [ %95, %93 ], [ 0, %10 ]
  %18 = phi ptr [ %94, %93 ], [ null, %10 ]
  %19 = phi ptr [ %99, %93 ], [ %12, %10 ]
  %20 = phi ptr [ %98, %93 ], [ %13, %10 ]
  %21 = getelementptr inbounds %struct.TransData, ptr %20, i64 0, i32 15
  %22 = load ptr, ptr %21, align 8, !tbaa !144
  %23 = load ptr, ptr %22, align 8, !tbaa !151
  %24 = getelementptr inbounds %struct.Sequence, ptr %23, i64 0, i32 8
  %25 = load i32, ptr %24, align 4, !tbaa !153
  %26 = load float, ptr %19, align 8, !tbaa !82
  %27 = fadd fast float %26, 5.000000e-01
  %28 = tail call fast float @llvm.floor.f32(float %27)
  %29 = fptosi float %28 to i32
  %30 = getelementptr inbounds %struct.TransDataSeq, ptr %22, i64 0, i32 3
  %31 = load i16, ptr %30, align 8, !tbaa !155
  %32 = sext i16 %31 to i32
  switch i32 %32, label %69 [
    i32 1, label %33
    i32 2, label %59
    i32 4, label %64
  ]

33:                                               ; preds = %14
  %34 = getelementptr inbounds %struct.Sequence, ptr %23, i64 0, i32 14
  %35 = load i32, ptr %34, align 4, !tbaa !156
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %40

37:                                               ; preds = %33
  %38 = tail call zeroext i8 @BKE_sequence_tx_test(ptr noundef nonnull %23) #18
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %44, label %40

40:                                               ; preds = %37, %33
  %41 = getelementptr inbounds %struct.TransDataSeq, ptr %22, i64 0, i32 2
  %42 = load i32, ptr %41, align 4, !tbaa !157
  %43 = sub nsw i32 %29, %42
  store i32 %43, ptr %24, align 4, !tbaa !153
  br label %44

44:                                               ; preds = %40, %37
  %45 = load i32, ptr %34, align 4, !tbaa !156
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %69

47:                                               ; preds = %44
  %48 = getelementptr inbounds [3 x float], ptr %19, i64 0, i64 1
  %49 = load float, ptr %48, align 4, !tbaa !82
  %50 = fadd fast float %49, 5.000000e-01
  %51 = tail call fast float @llvm.floor.f32(float %50)
  %52 = fptosi float %51 to i32
  %53 = getelementptr inbounds %struct.Sequence, ptr %23, i64 0, i32 13
  store i32 %52, ptr %53, align 8, !tbaa !158
  %54 = icmp slt i32 %52, 1
  br i1 %54, label %55, label %56

55:                                               ; preds = %47
  store i32 1, ptr %53, align 8, !tbaa !158
  br label %69

56:                                               ; preds = %47
  %57 = icmp ugt i32 %52, 32
  br i1 %57, label %58, label %69

58:                                               ; preds = %56
  store i32 32, ptr %53, align 8, !tbaa !158
  br label %69

59:                                               ; preds = %14
  tail call void @BKE_sequence_tx_set_final_left(ptr noundef nonnull %23, i32 noundef %29) #18
  %60 = getelementptr inbounds %struct.TransDataSeq, ptr %22, i64 0, i32 1
  %61 = load i32, ptr %60, align 8, !tbaa !159
  %62 = and i32 %61, 2
  %63 = and i32 %61, 4
  tail call void @BKE_sequence_tx_handle_xlimits(ptr noundef nonnull %23, i32 noundef %62, i32 noundef %63) #18
  tail call void @BKE_sequence_single_fix(ptr noundef nonnull %23) #18
  br label %69

64:                                               ; preds = %14
  tail call void @BKE_sequence_tx_set_final_right(ptr noundef nonnull %23, i32 noundef %29) #18
  %65 = getelementptr inbounds %struct.TransDataSeq, ptr %22, i64 0, i32 1
  %66 = load i32, ptr %65, align 8, !tbaa !159
  %67 = and i32 %66, 2
  %68 = and i32 %66, 4
  tail call void @BKE_sequence_tx_handle_xlimits(ptr noundef nonnull %23, i32 noundef %67, i32 noundef %68) #18
  tail call void @BKE_sequence_single_fix(ptr noundef nonnull %23) #18
  br label %69

69:                                               ; preds = %44, %56, %58, %55, %14, %64, %59
  %70 = icmp eq ptr %23, %18
  br i1 %70, label %89, label %71

71:                                               ; preds = %69
  %72 = icmp eq ptr %18, null
  br i1 %72, label %86, label %73

73:                                               ; preds = %71
  %74 = load ptr, ptr %2, align 8, !tbaa !89
  %75 = getelementptr inbounds %struct.Sequence, ptr %18, i64 0, i32 14
  %76 = load i32, ptr %75, align 4, !tbaa !156
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %79

78:                                               ; preds = %73
  tail call void @BKE_sequence_calc(ptr noundef %74, ptr noundef nonnull %18) #18
  br label %80

79:                                               ; preds = %73
  tail call void @BKE_sequence_calc_disp(ptr noundef %74, ptr noundef nonnull %18) #18
  br label %80

80:                                               ; preds = %79, %78
  %81 = icmp eq i32 %16, 1
  br i1 %81, label %82, label %86

82:                                               ; preds = %80
  %83 = getelementptr inbounds %struct.Sequence, ptr %18, i64 0, i32 8
  %84 = load i32, ptr %83, align 4, !tbaa !153
  %85 = sub nsw i32 %84, %17
  tail call void @BKE_sequencer_offset_animdata(ptr noundef %74, ptr noundef nonnull %18, i32 noundef %85) #18
  br label %86

86:                                               ; preds = %82, %80, %71
  %87 = load i16, ptr %30, align 8, !tbaa !155
  %88 = sext i16 %87 to i32
  br label %93

89:                                               ; preds = %69
  %90 = load i16, ptr %30, align 8, !tbaa !155
  %91 = sext i16 %90 to i32
  %92 = or i32 %16, %91
  br label %93

93:                                               ; preds = %89, %86
  %94 = phi ptr [ %23, %86 ], [ %18, %89 ]
  %95 = phi i32 [ %25, %86 ], [ %17, %89 ]
  %96 = phi i32 [ %88, %86 ], [ %92, %89 ]
  %97 = add nuw nsw i32 %15, 1
  %98 = getelementptr inbounds %struct.TransData, ptr %20, i64 1
  %99 = getelementptr inbounds %struct.TransData2D, ptr %19, i64 1
  %100 = load i32, ptr %7, align 8, !tbaa !5
  %101 = icmp slt i32 %97, %100
  br i1 %101, label %14, label %102, !llvm.loop !160

102:                                              ; preds = %93
  %103 = icmp eq ptr %94, null
  br i1 %103, label %117, label %104

104:                                              ; preds = %102
  %105 = load ptr, ptr %2, align 8, !tbaa !89
  %106 = getelementptr inbounds %struct.Sequence, ptr %94, i64 0, i32 14
  %107 = load i32, ptr %106, align 4, !tbaa !156
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %110

109:                                              ; preds = %104
  tail call void @BKE_sequence_calc(ptr noundef %105, ptr noundef nonnull %94) #18
  br label %111

110:                                              ; preds = %104
  tail call void @BKE_sequence_calc_disp(ptr noundef %105, ptr noundef nonnull %94) #18
  br label %111

111:                                              ; preds = %110, %109
  %112 = icmp eq i32 %96, 1
  br i1 %112, label %113, label %117

113:                                              ; preds = %111
  %114 = getelementptr inbounds %struct.Sequence, ptr %94, i64 0, i32 8
  %115 = load i32, ptr %114, align 4, !tbaa !153
  %116 = sub nsw i32 %115, %95
  tail call void @BKE_sequencer_offset_animdata(ptr noundef %105, ptr noundef nonnull %94, i32 noundef %116) #18
  br label %117

117:                                              ; preds = %1, %113, %111, %102
  %118 = load i32, ptr %0, align 8, !tbaa !161
  switch i32 %118, label %158 [
    i32 30, label %119
    i32 19, label %119
  ]

119:                                              ; preds = %117, %117
  %120 = load ptr, ptr %5, align 8, !tbaa !33
  %121 = icmp eq ptr %120, null
  br i1 %121, label %158, label %125

122:                                              ; preds = %137
  %123 = load ptr, ptr %5, align 8, !tbaa !33
  %124 = icmp eq ptr %123, null
  br i1 %124, label %158, label %140

125:                                              ; preds = %119, %137
  %126 = phi ptr [ %138, %137 ], [ %120, %119 ]
  %127 = getelementptr inbounds %struct.Sequence, ptr %126, i64 0, i32 6
  %128 = load i32, ptr %127, align 4, !tbaa !162
  %129 = icmp eq i32 %128, 1
  br i1 %129, label %130, label %137

130:                                              ; preds = %125
  %131 = getelementptr inbounds %struct.Sequence, ptr %126, i64 0, i32 5
  %132 = load i32, ptr %131, align 8, !tbaa !163
  %133 = and i32 %132, 1
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %137, label %135

135:                                              ; preds = %130
  %136 = load ptr, ptr %2, align 8, !tbaa !89
  tail call void @BKE_sequence_calc(ptr noundef %136, ptr noundef nonnull %126) #18
  br label %137

137:                                              ; preds = %125, %130, %135
  %138 = load ptr, ptr %126, align 8, !tbaa !33
  %139 = icmp eq ptr %138, null
  br i1 %139, label %122, label %125, !llvm.loop !164

140:                                              ; preds = %122, %155
  %141 = phi ptr [ %156, %155 ], [ %123, %122 ]
  %142 = getelementptr inbounds %struct.Sequence, ptr %141, i64 0, i32 33
  %143 = load ptr, ptr %142, align 8, !tbaa !165
  %144 = icmp eq ptr %143, null
  br i1 %144, label %145, label %153

145:                                              ; preds = %140
  %146 = getelementptr inbounds %struct.Sequence, ptr %141, i64 0, i32 34
  %147 = load ptr, ptr %146, align 8, !tbaa !166
  %148 = icmp eq ptr %147, null
  br i1 %148, label %149, label %153

149:                                              ; preds = %145
  %150 = getelementptr inbounds %struct.Sequence, ptr %141, i64 0, i32 35
  %151 = load ptr, ptr %150, align 8, !tbaa !167
  %152 = icmp eq ptr %151, null
  br i1 %152, label %155, label %153

153:                                              ; preds = %149, %145, %140
  %154 = load ptr, ptr %2, align 8, !tbaa !89
  tail call void @BKE_sequence_calc(ptr noundef %154, ptr noundef nonnull %141) #18
  br label %155

155:                                              ; preds = %149, %153
  %156 = load ptr, ptr %141, align 8, !tbaa !33
  %157 = icmp eq ptr %156, null
  br i1 %157, label %158, label %140, !llvm.loop !168

158:                                              ; preds = %155, %119, %122, %117
  %159 = load i32, ptr %7, align 8, !tbaa !5
  %160 = icmp sgt i32 %159, 0
  br i1 %160, label %161, label %189

161:                                              ; preds = %158
  %162 = load ptr, ptr %6, align 8, !tbaa !19
  br label %163

163:                                              ; preds = %161, %184
  %164 = phi i32 [ %185, %184 ], [ 0, %161 ]
  %165 = phi ptr [ %169, %184 ], [ null, %161 ]
  %166 = phi ptr [ %186, %184 ], [ %162, %161 ]
  %167 = getelementptr inbounds %struct.TransData, ptr %166, i64 0, i32 15
  %168 = load ptr, ptr %167, align 8, !tbaa !144
  %169 = load ptr, ptr %168, align 8, !tbaa !151
  %170 = icmp eq ptr %169, %165
  br i1 %170, label %184, label %171

171:                                              ; preds = %163
  %172 = getelementptr inbounds %struct.Sequence, ptr %169, i64 0, i32 14
  %173 = load i32, ptr %172, align 4, !tbaa !156
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %175, label %184

175:                                              ; preds = %171
  %176 = getelementptr inbounds %struct.Sequence, ptr %169, i64 0, i32 5
  %177 = load i32, ptr %176, align 8, !tbaa !163
  %178 = and i32 %177, -9
  store i32 %178, ptr %176, align 8, !tbaa !163
  %179 = tail call zeroext i8 @BKE_sequence_test_overlap(ptr noundef %5, ptr noundef nonnull %169) #18
  %180 = icmp eq i8 %179, 0
  br i1 %180, label %184, label %181

181:                                              ; preds = %175
  %182 = load i32, ptr %176, align 8, !tbaa !163
  %183 = or i32 %182, 8
  store i32 %183, ptr %176, align 8, !tbaa !163
  br label %184

184:                                              ; preds = %171, %181, %175, %163
  %185 = add nuw nsw i32 %164, 1
  %186 = getelementptr inbounds %struct.TransData, ptr %166, i64 1
  %187 = load i32, ptr %7, align 8, !tbaa !5
  %188 = icmp slt i32 %185, %187
  br i1 %188, label %163, label %189, !llvm.loop !169

189:                                              ; preds = %184, %158
  ret void
}

declare ptr @BKE_sequencer_editing_get(ptr noundef, i8 noundef zeroext) local_unnamed_addr #7

declare zeroext i8 @BKE_sequence_tx_test(ptr noundef) local_unnamed_addr #7

declare void @BKE_sequence_tx_set_final_left(ptr noundef, i32 noundef) local_unnamed_addr #7

declare void @BKE_sequence_tx_handle_xlimits(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #7

declare void @BKE_sequence_single_fix(ptr noundef) local_unnamed_addr #7

declare void @BKE_sequence_tx_set_final_right(ptr noundef, i32 noundef) local_unnamed_addr #7

declare void @BKE_sequence_calc(ptr noundef, ptr noundef) local_unnamed_addr #7

declare zeroext i8 @BKE_sequence_test_overlap(ptr noundef, ptr noundef) local_unnamed_addr #7

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @flushTransUVs(ptr nocapture noundef readonly %0) local_unnamed_addr #6 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca float, align 4
  %5 = alloca float, align 4
  %6 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 54
  %7 = load ptr, ptr %6, align 8, !tbaa !148
  %8 = getelementptr inbounds %struct.ScrArea, ptr %7, i64 0, i32 19
  %9 = load ptr, ptr %8, align 8, !tbaa !170
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #18
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #18
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #18
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #18
  call void @ED_space_image_get_uv_aspect(ptr noundef %9, ptr noundef nonnull %4, ptr noundef nonnull %5) #18
  call void @ED_space_image_get_size(ptr noundef %9, ptr noundef nonnull %2, ptr noundef nonnull %3) #18
  %10 = load float, ptr %4, align 4, !tbaa !82
  %11 = load float, ptr %5, align 4, !tbaa !82
  %12 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 12
  %13 = load ptr, ptr %12, align 8, !tbaa !143
  %14 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 9
  %15 = load i32, ptr %14, align 8, !tbaa !5
  %16 = fdiv fast float 1.000000e+00, %10
  %17 = fdiv fast float 1.000000e+00, %11
  %18 = icmp sgt i32 %15, 0
  br i1 %18, label %19, label %170

19:                                               ; preds = %1
  %20 = getelementptr inbounds %struct.SpaceImage, ptr %9, i64 0, i32 4
  %21 = load i32, ptr %20, align 4, !tbaa !172
  %22 = and i32 %21, 1024
  %23 = icmp eq i32 %22, 0
  %24 = load i32, ptr %2, align 4
  %25 = load i32, ptr %3, align 4
  %26 = insertelement <2 x i32> poison, i32 %24, i64 0
  %27 = insertelement <2 x i32> %26, i32 %25, i64 1
  %28 = sitofp <2 x i32> %27 to <2 x float>
  br i1 %23, label %29, label %57

29:                                               ; preds = %19
  %30 = and i32 %15, 1
  %31 = icmp eq i32 %15, 1
  br i1 %31, label %129, label %32

32:                                               ; preds = %29
  %33 = and i32 %15, -2
  br label %34

34:                                               ; preds = %34, %32
  %35 = phi ptr [ %13, %32 ], [ %54, %34 ]
  %36 = phi i32 [ 0, %32 ], [ %55, %34 ]
  %37 = load float, ptr %35, align 8, !tbaa !82
  %38 = fmul fast float %37, %16
  %39 = getelementptr inbounds %struct.TransData2D, ptr %35, i64 0, i32 1
  %40 = load ptr, ptr %39, align 8, !tbaa !178
  store float %38, ptr %40, align 4, !tbaa !82
  %41 = getelementptr inbounds [3 x float], ptr %35, i64 0, i64 1
  %42 = load float, ptr %41, align 4, !tbaa !82
  %43 = fmul fast float %42, %17
  %44 = getelementptr inbounds float, ptr %40, i64 1
  store float %43, ptr %44, align 4, !tbaa !82
  %45 = getelementptr inbounds %struct.TransData2D, ptr %35, i64 1
  %46 = load float, ptr %45, align 8, !tbaa !82
  %47 = fmul fast float %46, %16
  %48 = getelementptr inbounds %struct.TransData2D, ptr %35, i64 1, i32 1
  %49 = load ptr, ptr %48, align 8, !tbaa !178
  store float %47, ptr %49, align 4, !tbaa !82
  %50 = getelementptr inbounds %struct.TransData2D, ptr %35, i64 1, i32 0, i64 1
  %51 = load float, ptr %50, align 4, !tbaa !82
  %52 = fmul fast float %51, %17
  %53 = getelementptr inbounds float, ptr %49, i64 1
  store float %52, ptr %53, align 4, !tbaa !82
  %54 = getelementptr inbounds %struct.TransData2D, ptr %35, i64 2
  %55 = add i32 %36, 2
  %56 = icmp eq i32 %55, %33
  br i1 %56, label %129, label %34, !llvm.loop !180

57:                                               ; preds = %19
  %58 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 3
  %59 = load i16, ptr %58, align 4, !tbaa !181
  %60 = icmp eq i16 %59, 3
  br i1 %60, label %68, label %61

61:                                               ; preds = %57
  %62 = and i32 %15, 1
  %63 = icmp eq i32 %15, 1
  br i1 %63, label %153, label %64

64:                                               ; preds = %61
  %65 = and i32 %15, -2
  %66 = fdiv fast <2 x float> <float 1.000000e+00, float 1.000000e+00>, %28
  %67 = fdiv fast <2 x float> <float 1.000000e+00, float 1.000000e+00>, %28
  br label %96

68:                                               ; preds = %57
  %69 = and i32 %15, 1
  %70 = icmp eq i32 %15, 1
  br i1 %70, label %141, label %71

71:                                               ; preds = %68
  %72 = and i32 %15, -2
  br label %73

73:                                               ; preds = %73, %71
  %74 = phi ptr [ %13, %71 ], [ %93, %73 ]
  %75 = phi i32 [ 0, %71 ], [ %94, %73 ]
  %76 = load float, ptr %74, align 8, !tbaa !82
  %77 = fmul fast float %76, %16
  %78 = getelementptr inbounds %struct.TransData2D, ptr %74, i64 0, i32 1
  %79 = load ptr, ptr %78, align 8, !tbaa !178
  store float %77, ptr %79, align 4, !tbaa !82
  %80 = getelementptr inbounds [3 x float], ptr %74, i64 0, i64 1
  %81 = load float, ptr %80, align 4, !tbaa !82
  %82 = fmul fast float %81, %17
  %83 = getelementptr inbounds float, ptr %79, i64 1
  store float %82, ptr %83, align 4, !tbaa !82
  %84 = getelementptr inbounds %struct.TransData2D, ptr %74, i64 1
  %85 = load float, ptr %84, align 8, !tbaa !82
  %86 = fmul fast float %85, %16
  %87 = getelementptr inbounds %struct.TransData2D, ptr %74, i64 1, i32 1
  %88 = load ptr, ptr %87, align 8, !tbaa !178
  store float %86, ptr %88, align 4, !tbaa !82
  %89 = getelementptr inbounds %struct.TransData2D, ptr %74, i64 1, i32 0, i64 1
  %90 = load float, ptr %89, align 4, !tbaa !82
  %91 = fmul fast float %90, %17
  %92 = getelementptr inbounds float, ptr %88, i64 1
  store float %91, ptr %92, align 4, !tbaa !82
  %93 = getelementptr inbounds %struct.TransData2D, ptr %74, i64 2
  %94 = add i32 %75, 2
  %95 = icmp eq i32 %94, %72
  br i1 %95, label %141, label %73, !llvm.loop !180

96:                                               ; preds = %96, %64
  %97 = phi ptr [ %13, %64 ], [ %126, %96 ]
  %98 = phi i32 [ 0, %64 ], [ %127, %96 ]
  %99 = load float, ptr %97, align 8, !tbaa !82
  %100 = getelementptr inbounds %struct.TransData2D, ptr %97, i64 0, i32 1
  %101 = load ptr, ptr %100, align 8, !tbaa !178
  %102 = getelementptr inbounds [3 x float], ptr %97, i64 0, i64 1
  %103 = fmul fast float %99, %16
  store float %103, ptr %101, align 4, !tbaa !82
  %104 = load float, ptr %102, align 4, !tbaa !82
  %105 = fmul fast float %104, %17
  %106 = insertelement <2 x float> poison, float %103, i64 0
  %107 = insertelement <2 x float> %106, float %105, i64 1
  %108 = fmul fast <2 x float> %107, %28
  %109 = fadd fast <2 x float> %108, <float 5.000000e-01, float 5.000000e-01>
  %110 = call fast <2 x float> @llvm.floor.v2f32(<2 x float> %109)
  %111 = fmul fast <2 x float> %110, %66
  store <2 x float> %111, ptr %101, align 4, !tbaa !82
  %112 = getelementptr inbounds %struct.TransData2D, ptr %97, i64 1
  %113 = load float, ptr %112, align 8, !tbaa !82
  %114 = getelementptr inbounds %struct.TransData2D, ptr %97, i64 1, i32 1
  %115 = load ptr, ptr %114, align 8, !tbaa !178
  %116 = getelementptr inbounds %struct.TransData2D, ptr %97, i64 1, i32 0, i64 1
  %117 = fmul fast float %113, %16
  store float %117, ptr %115, align 4, !tbaa !82
  %118 = load float, ptr %116, align 4, !tbaa !82
  %119 = fmul fast float %118, %17
  %120 = insertelement <2 x float> poison, float %117, i64 0
  %121 = insertelement <2 x float> %120, float %119, i64 1
  %122 = fmul fast <2 x float> %121, %28
  %123 = fadd fast <2 x float> %122, <float 5.000000e-01, float 5.000000e-01>
  %124 = call fast <2 x float> @llvm.floor.v2f32(<2 x float> %123)
  %125 = fmul fast <2 x float> %124, %67
  store <2 x float> %125, ptr %115, align 4, !tbaa !82
  %126 = getelementptr inbounds %struct.TransData2D, ptr %97, i64 2
  %127 = add i32 %98, 2
  %128 = icmp eq i32 %127, %65
  br i1 %128, label %153, label %96, !llvm.loop !180

129:                                              ; preds = %34, %29
  %130 = phi ptr [ %13, %29 ], [ %54, %34 ]
  %131 = icmp eq i32 %30, 0
  br i1 %131, label %170, label %132

132:                                              ; preds = %129
  %133 = load float, ptr %130, align 8, !tbaa !82
  %134 = fmul fast float %133, %16
  %135 = getelementptr inbounds %struct.TransData2D, ptr %130, i64 0, i32 1
  %136 = load ptr, ptr %135, align 8, !tbaa !178
  store float %134, ptr %136, align 4, !tbaa !82
  %137 = getelementptr inbounds [3 x float], ptr %130, i64 0, i64 1
  %138 = load float, ptr %137, align 4, !tbaa !82
  %139 = fmul fast float %138, %17
  %140 = getelementptr inbounds float, ptr %136, i64 1
  store float %139, ptr %140, align 4, !tbaa !82
  br label %170

141:                                              ; preds = %73, %68
  %142 = phi ptr [ %13, %68 ], [ %93, %73 ]
  %143 = icmp eq i32 %69, 0
  br i1 %143, label %170, label %144

144:                                              ; preds = %141
  %145 = load float, ptr %142, align 8, !tbaa !82
  %146 = fmul fast float %145, %16
  %147 = getelementptr inbounds %struct.TransData2D, ptr %142, i64 0, i32 1
  %148 = load ptr, ptr %147, align 8, !tbaa !178
  store float %146, ptr %148, align 4, !tbaa !82
  %149 = getelementptr inbounds [3 x float], ptr %142, i64 0, i64 1
  %150 = load float, ptr %149, align 4, !tbaa !82
  %151 = fmul fast float %150, %17
  %152 = getelementptr inbounds float, ptr %148, i64 1
  store float %151, ptr %152, align 4, !tbaa !82
  br label %170

153:                                              ; preds = %96, %61
  %154 = phi ptr [ %13, %61 ], [ %126, %96 ]
  %155 = icmp eq i32 %62, 0
  br i1 %155, label %170, label %156

156:                                              ; preds = %153
  %157 = load float, ptr %154, align 8, !tbaa !82
  %158 = getelementptr inbounds %struct.TransData2D, ptr %154, i64 0, i32 1
  %159 = load ptr, ptr %158, align 8, !tbaa !178
  %160 = getelementptr inbounds [3 x float], ptr %154, i64 0, i64 1
  %161 = fmul fast float %157, %16
  store float %161, ptr %159, align 4, !tbaa !82
  %162 = load float, ptr %160, align 4, !tbaa !82
  %163 = fmul fast float %162, %17
  %164 = insertelement <2 x float> poison, float %161, i64 0
  %165 = insertelement <2 x float> %164, float %163, i64 1
  %166 = fmul fast <2 x float> %165, %28
  %167 = fadd fast <2 x float> %166, <float 5.000000e-01, float 5.000000e-01>
  %168 = call fast <2 x float> @llvm.floor.v2f32(<2 x float> %167)
  %169 = fdiv fast <2 x float> %168, %28
  store <2 x float> %169, ptr %159, align 4, !tbaa !82
  br label %170

170:                                              ; preds = %156, %153, %144, %141, %132, %129, %1
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #18
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #18
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #18
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #18
  ret void
}

declare void @ED_space_image_get_uv_aspect(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #7

declare void @ED_space_image_get_size(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #7

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.floor.f32(float) #8

; Function Attrs: nounwind sspstrong uwtable
define dso_local zeroext i8 @clipUVTransform(ptr nocapture noundef readonly %0, ptr nocapture noundef %1, i8 noundef zeroext %2) local_unnamed_addr #6 {
  %4 = alloca float, align 4
  %5 = alloca float, align 4
  %6 = alloca [2 x float], align 8
  %7 = alloca [2 x float], align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #18
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #18
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6) #18
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %7) #18
  %8 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 54
  %9 = load ptr, ptr %8, align 8, !tbaa !148
  %10 = getelementptr inbounds %struct.ScrArea, ptr %9, i64 0, i32 19
  %11 = load ptr, ptr %10, align 8, !tbaa !170
  call void @ED_space_image_get_uv_aspect(ptr noundef %11, ptr noundef nonnull %4, ptr noundef nonnull %5) #18
  %12 = getelementptr inbounds [2 x float], ptr %6, i64 0, i64 1
  store <2 x float> zeroinitializer, ptr %6, align 8, !tbaa !82
  %13 = load float, ptr %4, align 4, !tbaa !82
  store float %13, ptr %7, align 4, !tbaa !82
  %14 = load float, ptr %5, align 4, !tbaa !82
  %15 = getelementptr inbounds [2 x float], ptr %7, i64 0, i64 1
  store float %14, ptr %15, align 4, !tbaa !82
  %16 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 9
  %17 = load i32, ptr %16, align 8, !tbaa !5
  %18 = icmp sgt i32 %17, 0
  br i1 %18, label %19, label %31

19:                                               ; preds = %3
  %20 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 10
  %21 = load ptr, ptr %20, align 8, !tbaa !19
  br label %22

22:                                               ; preds = %19, %22
  %23 = phi i32 [ %27, %22 ], [ 0, %19 ]
  %24 = phi ptr [ %28, %22 ], [ %21, %19 ]
  %25 = getelementptr inbounds %struct.TransData, ptr %24, i64 0, i32 3
  %26 = load ptr, ptr %25, align 8, !tbaa !182
  call void @minmax_v2v2_v2(ptr noundef nonnull %6, ptr noundef nonnull %7, ptr noundef %26) #18
  %27 = add nuw nsw i32 %23, 1
  %28 = getelementptr inbounds %struct.TransData, ptr %24, i64 1
  %29 = load i32, ptr %16, align 8, !tbaa !5
  %30 = icmp slt i32 %27, %29
  br i1 %30, label %22, label %31, !llvm.loop !183

31:                                               ; preds = %22, %3
  %32 = icmp eq i8 %2, 0
  %33 = load float, ptr %6, align 8, !tbaa !82
  %34 = fcmp fast olt float %33, 0.000000e+00
  br i1 %32, label %100, label %35

35:                                               ; preds = %31
  br i1 %34, label %38, label %36

36:                                               ; preds = %35
  %37 = load float, ptr %4, align 4, !tbaa !82
  br label %48

38:                                               ; preds = %35
  %39 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 20
  %40 = load float, ptr %39, align 4, !tbaa !82
  %41 = fcmp fast ogt float %40, 0.000000e+00
  %42 = load float, ptr %4, align 4, !tbaa !82
  %43 = fmul fast float %42, 5.000000e-01
  %44 = fcmp fast olt float %40, %43
  %45 = select i1 %41, i1 %44, i1 false
  br i1 %45, label %46, label %48

46:                                               ; preds = %38
  %47 = fsub fast float %40, %33
  br label %59

48:                                               ; preds = %36, %38
  %49 = phi float [ %37, %36 ], [ %42, %38 ]
  %50 = load float, ptr %7, align 4, !tbaa !82
  %51 = fcmp fast ogt float %50, %49
  br i1 %51, label %52, label %65

52:                                               ; preds = %48
  %53 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 20
  %54 = load float, ptr %53, align 4, !tbaa !82
  %55 = fcmp fast olt float %54, %49
  br i1 %55, label %56, label %65

56:                                               ; preds = %52
  %57 = fsub fast float %54, %49
  %58 = fsub fast float %54, %50
  br label %59

59:                                               ; preds = %46, %56
  %60 = phi float [ %57, %56 ], [ %40, %46 ]
  %61 = phi float [ %58, %56 ], [ %47, %46 ]
  %62 = load float, ptr %1, align 4, !tbaa !82
  %63 = fmul fast float %62, %60
  %64 = fdiv fast float %63, %61
  store float %64, ptr %1, align 4, !tbaa !82
  br label %65

65:                                               ; preds = %59, %48, %52
  %66 = phi i32 [ 0, %52 ], [ 0, %48 ], [ 1, %59 ]
  %67 = load float, ptr %12, align 4, !tbaa !82
  %68 = fcmp fast olt float %67, 0.000000e+00
  br i1 %68, label %71, label %69

69:                                               ; preds = %65
  %70 = load float, ptr %5, align 4, !tbaa !82
  br label %85

71:                                               ; preds = %65
  %72 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 20, i64 1
  %73 = load float, ptr %72, align 4, !tbaa !82
  %74 = fcmp fast ogt float %73, 0.000000e+00
  %75 = load float, ptr %5, align 4, !tbaa !82
  %76 = fmul fast float %75, 5.000000e-01
  %77 = fcmp fast olt float %73, %76
  %78 = select i1 %74, i1 %77, i1 false
  br i1 %78, label %79, label %85

79:                                               ; preds = %71
  %80 = fsub fast float %73, %67
  %81 = getelementptr inbounds float, ptr %1, i64 1
  %82 = load float, ptr %81, align 4, !tbaa !82
  %83 = fmul fast float %82, %73
  %84 = fdiv fast float %83, %80
  store float %84, ptr %81, align 4, !tbaa !82
  br label %131

85:                                               ; preds = %69, %71
  %86 = phi float [ %70, %69 ], [ %75, %71 ]
  %87 = load float, ptr %15, align 4, !tbaa !82
  %88 = fcmp fast ogt float %87, %86
  br i1 %88, label %89, label %131

89:                                               ; preds = %85
  %90 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 20, i64 1
  %91 = load float, ptr %90, align 4, !tbaa !82
  %92 = fcmp fast olt float %91, %86
  br i1 %92, label %93, label %131

93:                                               ; preds = %89
  %94 = fsub fast float %91, %86
  %95 = fsub fast float %91, %87
  %96 = getelementptr inbounds float, ptr %1, i64 1
  %97 = load float, ptr %96, align 4, !tbaa !82
  %98 = fmul fast float %97, %94
  %99 = fdiv fast float %98, %95
  store float %99, ptr %96, align 4, !tbaa !82
  br label %131

100:                                              ; preds = %31
  br i1 %34, label %101, label %104

101:                                              ; preds = %100
  %102 = load float, ptr %1, align 4, !tbaa !82
  %103 = fsub fast float %102, %33
  br label %112

104:                                              ; preds = %100
  %105 = load float, ptr %7, align 4, !tbaa !82
  %106 = load float, ptr %4, align 4, !tbaa !82
  %107 = fcmp fast ogt float %105, %106
  br i1 %107, label %108, label %114

108:                                              ; preds = %104
  %109 = load float, ptr %1, align 4, !tbaa !82
  %110 = fsub fast float %106, %105
  %111 = fadd fast float %110, %109
  br label %112

112:                                              ; preds = %101, %108
  %113 = phi float [ %111, %108 ], [ %103, %101 ]
  store float %113, ptr %1, align 4, !tbaa !82
  br label %114

114:                                              ; preds = %112, %104
  %115 = phi i32 [ 0, %104 ], [ 1, %112 ]
  %116 = load float, ptr %12, align 4, !tbaa !82
  %117 = fcmp fast olt float %116, 0.000000e+00
  br i1 %117, label %118, label %122

118:                                              ; preds = %114
  %119 = getelementptr inbounds float, ptr %1, i64 1
  %120 = load float, ptr %119, align 4, !tbaa !82
  %121 = fsub fast float %120, %116
  store float %121, ptr %119, align 4, !tbaa !82
  br label %131

122:                                              ; preds = %114
  %123 = load float, ptr %15, align 4, !tbaa !82
  %124 = load float, ptr %5, align 4, !tbaa !82
  %125 = fcmp fast ogt float %123, %124
  br i1 %125, label %126, label %131

126:                                              ; preds = %122
  %127 = getelementptr inbounds float, ptr %1, i64 1
  %128 = load float, ptr %127, align 4, !tbaa !82
  %129 = fsub fast float %124, %123
  %130 = fadd fast float %129, %128
  store float %130, ptr %127, align 4, !tbaa !82
  br label %131

131:                                              ; preds = %122, %85, %89, %118, %126, %79, %93
  %132 = phi i32 [ %66, %79 ], [ %66, %93 ], [ %115, %118 ], [ %115, %126 ], [ %66, %89 ], [ %66, %85 ], [ %115, %122 ]
  %133 = phi i1 [ true, %79 ], [ true, %93 ], [ true, %118 ], [ true, %126 ], [ false, %89 ], [ false, %85 ], [ false, %122 ]
  %134 = icmp ne i32 %132, 0
  %135 = or i1 %134, %133
  %136 = zext i1 %135 to i8
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7) #18
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #18
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #18
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #18
  ret i8 %136
}

declare void @minmax_v2v2_v2(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #7

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @clipUVData(ptr nocapture noundef readonly %0) local_unnamed_addr #6 {
  %2 = alloca float, align 4
  %3 = alloca float, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #18
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #18
  %4 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 54
  %5 = load ptr, ptr %4, align 8, !tbaa !148
  %6 = getelementptr inbounds %struct.ScrArea, ptr %5, i64 0, i32 19
  %7 = load ptr, ptr %6, align 8, !tbaa !170
  call void @ED_space_image_get_uv_aspect(ptr noundef %7, ptr noundef nonnull %2, ptr noundef nonnull %3) #18
  %8 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 9
  %9 = load i32, ptr %8, align 8, !tbaa !5
  %10 = icmp sgt i32 %9, 0
  br i1 %10, label %11, label %44

11:                                               ; preds = %1
  %12 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 10
  %13 = load ptr, ptr %12, align 8, !tbaa !19
  br label %14

14:                                               ; preds = %11, %40
  %15 = phi i32 [ %41, %40 ], [ 0, %11 ]
  %16 = phi ptr [ %42, %40 ], [ %13, %11 ]
  %17 = getelementptr inbounds %struct.TransData, ptr %16, i64 0, i32 16
  %18 = load i32, ptr %17, align 8, !tbaa !20
  %19 = and i32 %18, 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %44

21:                                               ; preds = %14
  %22 = and i32 %18, 2048
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %40

24:                                               ; preds = %21
  %25 = getelementptr inbounds %struct.TransData, ptr %16, i64 0, i32 3
  %26 = load ptr, ptr %25, align 8, !tbaa !182
  %27 = icmp eq ptr %26, null
  br i1 %27, label %40, label %28

28:                                               ; preds = %24
  %29 = load float, ptr %26, align 4, !tbaa !82
  %30 = fcmp fast olt float %29, 0.000000e+00
  %31 = select fast i1 %30, float 0.000000e+00, float %29
  %32 = load float, ptr %2, align 4, !tbaa !82
  %33 = call fast float @llvm.minnum.f32(float %31, float %32)
  store float %33, ptr %26, align 4, !tbaa !82
  %34 = getelementptr inbounds float, ptr %26, i64 1
  %35 = load float, ptr %34, align 4, !tbaa !82
  %36 = fcmp fast olt float %35, 0.000000e+00
  %37 = select fast i1 %36, float 0.000000e+00, float %35
  %38 = load float, ptr %3, align 4, !tbaa !82
  %39 = call fast float @llvm.minnum.f32(float %37, float %38)
  store float %39, ptr %34, align 4, !tbaa !82
  br label %40

40:                                               ; preds = %21, %24, %28
  %41 = add nuw nsw i32 %15, 1
  %42 = getelementptr inbounds %struct.TransData, ptr %16, i64 1
  %43 = icmp eq i32 %41, %9
  br i1 %43, label %44, label %14, !llvm.loop !184

44:                                               ; preds = %40, %14, %1
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #18
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #18
  ret void
}

; Function Attrs: nofree nosync nounwind sspstrong memory(readwrite, inaccessiblemem: none) uwtable
define dso_local void @flushTransIntFrameActionData(ptr nocapture noundef readonly %0) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 9
  %3 = load i32, ptr %2, align 8, !tbaa !5
  %4 = icmp sgt i32 %3, 0
  br i1 %4, label %5, label %25

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 40
  %7 = load ptr, ptr %6, align 8, !tbaa !66
  %8 = load i32, ptr %0, align 8, !tbaa !161
  %9 = icmp eq i32 %8, 20
  %10 = select i1 %9, i64 2, i64 0
  %11 = getelementptr inbounds float, ptr %7, i64 %10
  br label %12

12:                                               ; preds = %5, %12
  %13 = phi i32 [ %21, %12 ], [ 0, %5 ]
  %14 = phi ptr [ %22, %12 ], [ %11, %5 ]
  %15 = load float, ptr %14, align 8, !tbaa !185
  %16 = fadd fast float %15, 5.000000e-01
  %17 = tail call fast float @llvm.floor.f32(float %16)
  %18 = fptosi float %17 to i32
  %19 = getelementptr inbounds %struct.tGPFtransdata, ptr %14, i64 0, i32 1
  %20 = load ptr, ptr %19, align 8, !tbaa !187
  store i32 %18, ptr %20, align 4, !tbaa !27
  %21 = add nuw nsw i32 %13, 1
  %22 = getelementptr inbounds %struct.tGPFtransdata, ptr %14, i64 1
  %23 = load i32, ptr %2, align 8, !tbaa !5
  %24 = icmp slt i32 %21, %23
  br i1 %24, label %12, label %25, !llvm.loop !188

25:                                               ; preds = %12, %1
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @remake_graph_transdata(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1) local_unnamed_addr #6 {
  %3 = alloca %struct.BeztMap, align 8
  %4 = load ptr, ptr %1, align 8, !tbaa !33
  %5 = icmp eq ptr %4, null
  br i1 %5, label %255, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 54
  %8 = load ptr, ptr %7, align 8, !tbaa !148
  %9 = getelementptr inbounds %struct.ScrArea, ptr %8, i64 0, i32 19
  %10 = load ptr, ptr %9, align 8, !tbaa !170
  %11 = getelementptr inbounds %struct.SpaceIpo, ptr %10, i64 0, i32 11
  %12 = load i32, ptr %11, align 4, !tbaa !189
  %13 = and i32 %12, 4
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 9
  %16 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 12
  %17 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 10
  %18 = zext i1 %14 to i8
  br label %19

19:                                               ; preds = %6, %252
  %20 = phi ptr [ %4, %6 ], [ %253, %252 ]
  %21 = getelementptr inbounds %struct.bAnimListElem, ptr %20, i64 0, i32 8
  %22 = load ptr, ptr %21, align 8, !tbaa !192
  %23 = getelementptr %struct.FCurve, ptr %22, i64 0, i32 5
  %24 = load ptr, ptr %23, align 8, !tbaa !194
  %25 = icmp eq ptr %24, null
  br i1 %25, label %252, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %struct.FCurve, ptr %22, i64 0, i32 7
  %28 = load i32, ptr %27, align 8, !tbaa !196
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %144, label %30

30:                                               ; preds = %26
  %31 = load ptr, ptr @MEM_callocN, align 8, !tbaa !33
  %32 = sext i32 %28 to i64
  %33 = mul nsw i64 %32, 24
  %34 = tail call ptr %31(i64 noundef %33, ptr noundef nonnull @.str.8) #18
  %35 = icmp sgt i32 %28, 0
  br i1 %35, label %36, label %90

36:                                               ; preds = %30
  %37 = and i32 %28, 1
  %38 = icmp eq i32 %28, 1
  br i1 %38, label %73, label %39

39:                                               ; preds = %36
  %40 = and i32 %28, -2
  br label %41

41:                                               ; preds = %41, %39
  %42 = phi i32 [ 0, %39 ], [ %68, %41 ]
  %43 = phi ptr [ %34, %39 ], [ %69, %41 ]
  %44 = phi ptr [ null, %39 ], [ %59, %41 ]
  %45 = phi ptr [ %24, %39 ], [ %70, %41 ]
  %46 = phi i32 [ 0, %39 ], [ %71, %41 ]
  store ptr %45, ptr %43, align 8, !tbaa !197
  %47 = getelementptr inbounds %struct.BeztMap, ptr %43, i64 0, i32 1
  store i32 %42, ptr %47, align 8, !tbaa !199
  %48 = getelementptr inbounds %struct.BeztMap, ptr %43, i64 0, i32 2
  store i32 %42, ptr %48, align 4, !tbaa !200
  %49 = icmp eq ptr %44, null
  %50 = select i1 %49, ptr %45, ptr %44
  %51 = getelementptr inbounds %struct.BezTriple, ptr %50, i64 0, i32 4
  %52 = load i8, ptr %51, align 4, !tbaa !201
  %53 = getelementptr inbounds %struct.BeztMap, ptr %43, i64 0, i32 4
  store i8 %52, ptr %53, align 2, !tbaa !203
  %54 = getelementptr inbounds %struct.BezTriple, ptr %45, i64 0, i32 4
  %55 = load i8, ptr %54, align 4, !tbaa !201
  %56 = getelementptr inbounds %struct.BeztMap, ptr %43, i64 0, i32 5
  store i8 %55, ptr %56, align 1, !tbaa !204
  %57 = or i32 %42, 1
  %58 = getelementptr inbounds %struct.BeztMap, ptr %43, i64 1
  %59 = getelementptr inbounds %struct.BezTriple, ptr %45, i64 1
  store ptr %59, ptr %58, align 8, !tbaa !197
  %60 = getelementptr inbounds %struct.BeztMap, ptr %43, i64 1, i32 1
  store i32 %57, ptr %60, align 8, !tbaa !199
  %61 = getelementptr inbounds %struct.BeztMap, ptr %43, i64 1, i32 2
  store i32 %57, ptr %61, align 4, !tbaa !200
  %62 = getelementptr inbounds %struct.BezTriple, ptr %45, i64 0, i32 4
  %63 = load i8, ptr %62, align 4, !tbaa !201
  %64 = getelementptr inbounds %struct.BeztMap, ptr %43, i64 1, i32 4
  store i8 %63, ptr %64, align 2, !tbaa !203
  %65 = getelementptr inbounds %struct.BezTriple, ptr %45, i64 1, i32 4
  %66 = load i8, ptr %65, align 4, !tbaa !201
  %67 = getelementptr inbounds %struct.BeztMap, ptr %43, i64 1, i32 5
  store i8 %66, ptr %67, align 1, !tbaa !204
  %68 = add nuw nsw i32 %42, 2
  %69 = getelementptr inbounds %struct.BeztMap, ptr %43, i64 2
  %70 = getelementptr inbounds %struct.BezTriple, ptr %45, i64 2
  %71 = add i32 %46, 2
  %72 = icmp eq i32 %71, %40
  br i1 %72, label %73, label %41, !llvm.loop !205

73:                                               ; preds = %41, %36
  %74 = phi i32 [ 0, %36 ], [ %68, %41 ]
  %75 = phi ptr [ %34, %36 ], [ %69, %41 ]
  %76 = phi ptr [ null, %36 ], [ %59, %41 ]
  %77 = phi ptr [ %24, %36 ], [ %70, %41 ]
  %78 = icmp eq i32 %37, 0
  br i1 %78, label %90, label %79

79:                                               ; preds = %73
  store ptr %77, ptr %75, align 8, !tbaa !197
  %80 = getelementptr inbounds %struct.BeztMap, ptr %75, i64 0, i32 1
  store i32 %74, ptr %80, align 8, !tbaa !199
  %81 = getelementptr inbounds %struct.BeztMap, ptr %75, i64 0, i32 2
  store i32 %74, ptr %81, align 4, !tbaa !200
  %82 = icmp eq ptr %76, null
  %83 = select i1 %82, ptr %77, ptr %76
  %84 = getelementptr inbounds %struct.BezTriple, ptr %83, i64 0, i32 4
  %85 = load i8, ptr %84, align 4, !tbaa !201
  %86 = getelementptr inbounds %struct.BeztMap, ptr %75, i64 0, i32 4
  store i8 %85, ptr %86, align 2, !tbaa !203
  %87 = getelementptr inbounds %struct.BezTriple, ptr %77, i64 0, i32 4
  %88 = load i8, ptr %87, align 4, !tbaa !201
  %89 = getelementptr inbounds %struct.BeztMap, ptr %75, i64 0, i32 5
  store i8 %88, ptr %89, align 1, !tbaa !204
  br label %90

90:                                               ; preds = %79, %73, %30
  %91 = load i32, ptr %27, align 8, !tbaa !196
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %144, label %95

93:                                               ; preds = %135
  %94 = icmp eq i32 %118, 0
  br i1 %94, label %142, label %138

95:                                               ; preds = %90, %138
  %96 = phi i32 [ %139, %138 ], [ 0, %90 ]
  %97 = phi i32 [ %140, %138 ], [ %91, %90 ]
  %98 = phi ptr [ %141, %138 ], [ %34, %90 ]
  %99 = add nsw i32 %97, -1
  %100 = icmp sgt i32 %97, 1
  br i1 %100, label %101, label %117

101:                                              ; preds = %95
  %102 = load ptr, ptr %98, align 8, !tbaa !197
  %103 = getelementptr inbounds [3 x [3 x float]], ptr %102, i64 0, i64 1
  %104 = load float, ptr %103, align 4, !tbaa !82
  %105 = getelementptr inbounds %struct.BeztMap, ptr %98, i64 1
  %106 = load ptr, ptr %105, align 8, !tbaa !197
  %107 = getelementptr inbounds [3 x [3 x float]], ptr %106, i64 0, i64 1
  %108 = load float, ptr %107, align 4, !tbaa !82
  %109 = fcmp fast ogt float %104, %108
  br i1 %109, label %110, label %117

110:                                              ; preds = %101
  %111 = getelementptr inbounds %struct.BeztMap, ptr %98, i64 0, i32 2
  %112 = load i32, ptr %111, align 4, !tbaa !200
  %113 = add i32 %112, 1
  store i32 %113, ptr %111, align 4, !tbaa !200
  %114 = getelementptr inbounds %struct.BeztMap, ptr %98, i64 1, i32 2
  %115 = load i32, ptr %114, align 4, !tbaa !200
  %116 = add i32 %115, -1
  store i32 %116, ptr %114, align 4, !tbaa !200
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %3)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %3, ptr noundef nonnull align 8 dereferenceable(24) %98, i64 24, i1 false), !tbaa.struct !206
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %98, ptr noundef nonnull align 8 dereferenceable(24) %105, i64 24, i1 false), !tbaa.struct !206
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %105, ptr noundef nonnull align 8 dereferenceable(24) %3, i64 24, i1 false), !tbaa.struct !206
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %3)
  br label %117

117:                                              ; preds = %110, %101, %95
  %118 = phi i32 [ 1, %110 ], [ %96, %101 ], [ %96, %95 ]
  %119 = getelementptr inbounds %struct.BeztMap, ptr %98, i64 0, i32 3
  %120 = load i16, ptr %119, align 8, !tbaa !207
  %121 = icmp eq i16 %120, 0
  br i1 %121, label %122, label %135

122:                                              ; preds = %117
  %123 = load ptr, ptr %98, align 8, !tbaa !197
  %124 = load float, ptr %123, align 4, !tbaa !82
  %125 = getelementptr inbounds [3 x [3 x float]], ptr %123, i64 0, i64 1
  %126 = load float, ptr %125, align 4, !tbaa !82
  %127 = fcmp fast ogt float %124, %126
  br i1 %127, label %128, label %132

128:                                              ; preds = %122
  %129 = getelementptr inbounds [3 x [3 x float]], ptr %123, i64 0, i64 2
  %130 = load float, ptr %129, align 4, !tbaa !82
  %131 = fcmp fast olt float %130, %126
  br i1 %131, label %133, label %132

132:                                              ; preds = %128, %122
  br label %133

133:                                              ; preds = %132, %128
  %134 = phi i16 [ -1, %132 ], [ 1, %128 ]
  store i16 %134, ptr %119, align 8, !tbaa !207
  br label %135

135:                                              ; preds = %133, %117
  %136 = getelementptr inbounds %struct.BeztMap, ptr %98, i64 1
  %137 = icmp eq i32 %99, 0
  br i1 %137, label %93, label %138

138:                                              ; preds = %135, %93
  %139 = phi i32 [ %118, %135 ], [ 0, %93 ]
  %140 = phi i32 [ %99, %135 ], [ %91, %93 ]
  %141 = phi ptr [ %136, %135 ], [ %34, %93 ]
  br label %95, !llvm.loop !208

142:                                              ; preds = %93
  %143 = load i32, ptr %27, align 8, !tbaa !196
  br label %144

144:                                              ; preds = %26, %142, %90
  %145 = phi i32 [ %143, %142 ], [ 0, %90 ], [ 0, %26 ]
  %146 = phi ptr [ %34, %142 ], [ %34, %90 ], [ null, %26 ]
  %147 = load ptr, ptr %23, align 8, !tbaa !194
  %148 = load ptr, ptr @MEM_callocN, align 8, !tbaa !33
  %149 = load i32, ptr %15, align 8, !tbaa !5
  %150 = sext i32 %149 to i64
  %151 = tail call ptr %148(i64 noundef %150, ptr noundef nonnull @.str.9) #18
  %152 = icmp sgt i32 %145, 0
  br i1 %152, label %153, label %249

153:                                              ; preds = %144
  %154 = load i32, ptr %15, align 8, !tbaa !5
  %155 = icmp sgt i32 %154, 0
  br i1 %155, label %156, label %249

156:                                              ; preds = %153, %244
  %157 = phi i32 [ %245, %244 ], [ %154, %153 ]
  %158 = phi ptr [ %247, %244 ], [ %146, %153 ]
  %159 = phi i32 [ %246, %244 ], [ 0, %153 ]
  %160 = icmp sgt i32 %157, 0
  br i1 %160, label %161, label %244

161:                                              ; preds = %156
  %162 = load ptr, ptr %17, align 8, !tbaa !19
  %163 = load ptr, ptr %16, align 8, !tbaa !143
  %164 = getelementptr inbounds %struct.BeztMap, ptr %158, i64 0, i32 2
  %165 = getelementptr inbounds %struct.BeztMap, ptr %158, i64 0, i32 3
  br label %166

166:                                              ; preds = %237, %161
  %167 = phi i64 [ 0, %161 ], [ %238, %237 ]
  %168 = phi ptr [ %162, %161 ], [ %240, %237 ]
  %169 = phi ptr [ %163, %161 ], [ %239, %237 ]
  %170 = getelementptr inbounds i8, ptr %151, i64 %167
  %171 = load i8, ptr %170, align 1, !tbaa !51
  %172 = icmp eq i8 %171, 0
  br i1 %172, label %173, label %237

173:                                              ; preds = %166
  %174 = getelementptr inbounds %struct.TransData2D, ptr %169, i64 0, i32 1
  %175 = load ptr, ptr %174, align 8, !tbaa !178
  %176 = load ptr, ptr %158, align 8, !tbaa !197
  %177 = icmp eq ptr %175, %176
  br i1 %177, label %178, label %186

178:                                              ; preds = %173
  %179 = load i16, ptr %165, align 8, !tbaa !207
  %180 = icmp eq i16 %179, 1
  %181 = load i32, ptr %164, align 4, !tbaa !200
  %182 = zext i32 %181 to i64
  %183 = getelementptr inbounds %struct.BezTriple, ptr %147, i64 %182
  %184 = getelementptr inbounds %struct.BezTriple, ptr %147, i64 %182, i32 0, i64 2
  %185 = select i1 %180, ptr %184, ptr %183
  store ptr %185, ptr %174, align 8, !tbaa !178
  br label %215

186:                                              ; preds = %173
  %187 = getelementptr inbounds [3 x [3 x float]], ptr %176, i64 0, i64 2
  %188 = icmp eq ptr %175, %187
  br i1 %188, label %189, label %197

189:                                              ; preds = %186
  %190 = load i16, ptr %165, align 8, !tbaa !207
  %191 = icmp eq i16 %190, 1
  %192 = load i32, ptr %164, align 4, !tbaa !200
  %193 = zext i32 %192 to i64
  %194 = getelementptr inbounds %struct.BezTriple, ptr %147, i64 %193, i32 0, i64 2
  %195 = getelementptr inbounds %struct.BezTriple, ptr %147, i64 %193
  %196 = select i1 %191, ptr %195, ptr %194
  store ptr %196, ptr %174, align 8, !tbaa !178
  br label %215

197:                                              ; preds = %186
  %198 = getelementptr inbounds [3 x [3 x float]], ptr %176, i64 0, i64 1
  %199 = icmp eq ptr %175, %198
  br i1 %199, label %200, label %237

200:                                              ; preds = %197
  %201 = load i32, ptr %164, align 4, !tbaa !200
  %202 = zext i32 %201 to i64
  %203 = getelementptr inbounds %struct.BezTriple, ptr %147, i64 %202, i32 0, i64 1
  store ptr %203, ptr %174, align 8, !tbaa !178
  %204 = getelementptr inbounds %struct.TransData2D, ptr %169, i64 0, i32 2
  %205 = load ptr, ptr %204, align 8, !tbaa !209
  %206 = icmp eq ptr %205, null
  br i1 %206, label %209, label %207

207:                                              ; preds = %200
  %208 = getelementptr inbounds %struct.BezTriple, ptr %147, i64 %202
  store ptr %208, ptr %204, align 8, !tbaa !209
  br label %209

209:                                              ; preds = %207, %200
  %210 = getelementptr inbounds %struct.TransData2D, ptr %169, i64 0, i32 3
  %211 = load ptr, ptr %210, align 8, !tbaa !210
  %212 = icmp eq ptr %211, null
  br i1 %212, label %215, label %213

213:                                              ; preds = %209
  %214 = getelementptr inbounds %struct.BezTriple, ptr %147, i64 %202, i32 0, i64 2
  store ptr %214, ptr %210, align 8, !tbaa !210
  br label %215

215:                                              ; preds = %213, %209, %189, %178
  store i8 1, ptr %170, align 1, !tbaa !51
  %216 = getelementptr inbounds %struct.TransData, ptr %168, i64 0, i32 16
  %217 = load i32, ptr %216, align 8, !tbaa !20
  %218 = and i32 %217, 4096
  %219 = icmp eq i32 %218, 0
  br i1 %219, label %237, label %220

220:                                              ; preds = %215
  %221 = getelementptr inbounds %struct.TransData, ptr %168, i64 0, i32 14
  %222 = load ptr, ptr %221, align 8, !tbaa !211
  %223 = icmp eq ptr %222, null
  br i1 %223, label %237, label %224

224:                                              ; preds = %220
  %225 = load i16, ptr %165, align 8, !tbaa !207
  %226 = icmp eq i16 %225, 1
  %227 = load i32, ptr %164, align 4, !tbaa !200
  %228 = zext i32 %227 to i64
  %229 = getelementptr inbounds %struct.TransDataCurveHandleFlags, ptr %222, i64 0, i32 2
  %230 = getelementptr inbounds %struct.TransDataCurveHandleFlags, ptr %222, i64 0, i32 3
  %231 = getelementptr inbounds %struct.BezTriple, ptr %147, i64 %228, i32 6
  %232 = getelementptr inbounds %struct.BezTriple, ptr %147, i64 %228, i32 5
  %233 = getelementptr inbounds %struct.BezTriple, ptr %147, i64 %228, i32 5
  %234 = getelementptr inbounds %struct.BezTriple, ptr %147, i64 %228, i32 6
  %235 = select i1 %226, ptr %231, ptr %233
  %236 = select i1 %226, ptr %232, ptr %234
  store ptr %235, ptr %229, align 8
  store ptr %236, ptr %230, align 8, !tbaa !212
  br label %237

237:                                              ; preds = %224, %220, %215, %197, %166
  %238 = add nuw nsw i64 %167, 1
  %239 = getelementptr inbounds %struct.TransData2D, ptr %169, i64 1
  %240 = getelementptr inbounds %struct.TransData, ptr %168, i64 1
  %241 = load i32, ptr %15, align 8, !tbaa !5
  %242 = sext i32 %241 to i64
  %243 = icmp slt i64 %238, %242
  br i1 %243, label %166, label %244, !llvm.loop !214

244:                                              ; preds = %237, %156
  %245 = phi i32 [ %157, %156 ], [ %241, %237 ]
  %246 = add nuw nsw i32 %159, 1
  %247 = getelementptr inbounds %struct.BeztMap, ptr %158, i64 1
  %248 = icmp eq i32 %246, %145
  br i1 %248, label %249, label %156, !llvm.loop !215

249:                                              ; preds = %244, %144, %153
  %250 = load ptr, ptr @MEM_freeN, align 8, !tbaa !33
  tail call void %250(ptr noundef %151) #18
  %251 = load ptr, ptr @MEM_freeN, align 8, !tbaa !33
  tail call void %251(ptr noundef %146) #18
  tail call void @sort_time_fcurve(ptr noundef %22) #18
  tail call void @testhandles_fcurve(ptr noundef %22, i8 noundef zeroext %18) #18
  br label %252

252:                                              ; preds = %249, %19
  %253 = load ptr, ptr %20, align 8, !tbaa !33
  %254 = icmp eq ptr %253, null
  br i1 %254, label %255, label %19, !llvm.loop !217

255:                                              ; preds = %252, %2
  ret void
}

declare void @sort_time_fcurve(ptr noundef) local_unnamed_addr #7

declare void @testhandles_fcurve(ptr noundef, i8 noundef zeroext) local_unnamed_addr #7

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @flushTransGraphData(ptr nocapture noundef readonly %0) local_unnamed_addr #6 {
  %2 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 56
  %3 = load ptr, ptr %2, align 8, !tbaa !89
  %4 = getelementptr inbounds %struct.Scene, ptr %3, i64 0, i32 22, i32 55
  %5 = load i16, ptr %4, align 4, !tbaa !218
  %6 = sitofp i16 %5 to double
  %7 = getelementptr inbounds %struct.Scene, ptr %3, i64 0, i32 22, i32 65
  %8 = load float, ptr %7, align 4, !tbaa !219
  %9 = fpext float %8 to double
  %10 = fdiv fast double %6, %9
  %11 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 9
  %12 = load i32, ptr %11, align 8, !tbaa !5
  %13 = icmp sgt i32 %12, 0
  br i1 %13, label %14, label %195

14:                                               ; preds = %1
  %15 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 40
  %16 = load ptr, ptr %15, align 8, !tbaa !66
  %17 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 12
  %18 = load ptr, ptr %17, align 8, !tbaa !143
  %19 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 10
  %20 = load ptr, ptr %19, align 8, !tbaa !19
  %21 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 54
  %22 = load ptr, ptr %21, align 8, !tbaa !148
  %23 = getelementptr inbounds %struct.ScrArea, ptr %22, i64 0, i32 19
  %24 = load ptr, ptr %23, align 8, !tbaa !170
  %25 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 3
  %26 = getelementptr inbounds %struct.SpaceIpo, ptr %24, i64 0, i32 10
  %27 = load i16, ptr %25, align 4, !tbaa !181
  %28 = fdiv fast double 1.000000e+00, %10
  %29 = fdiv fast double 1.000000e+00, %10
  %30 = fdiv fast double 1.000000e+00, %10
  br label %31

31:                                               ; preds = %14, %188
  %32 = phi i16 [ %27, %14 ], [ %84, %188 ]
  %33 = phi ptr [ %20, %14 ], [ %190, %188 ]
  %34 = phi ptr [ %18, %14 ], [ %191, %188 ]
  %35 = phi i32 [ 0, %14 ], [ %189, %188 ]
  %36 = phi ptr [ %16, %14 ], [ %192, %188 ]
  %37 = getelementptr inbounds %struct.TransData, ptr %33, i64 0, i32 15
  %38 = load ptr, ptr %37, align 8, !tbaa !144
  %39 = load float, ptr %36, align 4, !tbaa !220
  %40 = fdiv fast float 1.000000e+00, %39
  %41 = icmp eq i16 %32, 3
  br i1 %41, label %72, label %42

42:                                               ; preds = %31
  %43 = getelementptr inbounds %struct.TransData, ptr %33, i64 0, i32 16
  %44 = load i32, ptr %43, align 8, !tbaa !20
  %45 = and i32 %44, 16384
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %72

47:                                               ; preds = %42
  %48 = load i16, ptr %26, align 2, !tbaa !222
  %49 = sext i16 %48 to i32
  switch i32 %49, label %72 [
    i32 2, label %50
    i32 4, label %56
    i32 3, label %64
  ]

50:                                               ; preds = %47
  %51 = load float, ptr %34, align 8, !tbaa !82
  %52 = fpext float %51 to double
  %53 = fadd fast double %52, 5.000000e-01
  %54 = tail call fast double @llvm.floor.f64(double %53)
  %55 = fptrunc double %54 to float
  br label %70

56:                                               ; preds = %47
  %57 = load float, ptr %34, align 8, !tbaa !82
  %58 = fpext float %57 to double
  %59 = fmul fast double %58, %28
  %60 = fadd fast double %59, 5.000000e-01
  %61 = tail call fast double @llvm.floor.f64(double %60)
  %62 = fmul fast double %61, %10
  %63 = fptrunc double %62 to float
  br label %70

64:                                               ; preds = %47
  %65 = load ptr, ptr %2, align 8, !tbaa !89
  %66 = getelementptr inbounds %struct.Scene, ptr %65, i64 0, i32 24
  %67 = load float, ptr %34, align 8, !tbaa !82
  %68 = tail call i32 @ED_markers_find_nearest_marker_time(ptr noundef nonnull %66, float noundef nofpclass(nan inf) %67) #18
  %69 = sitofp i32 %68 to float
  br label %70

70:                                               ; preds = %64, %56, %50
  %71 = phi float [ %55, %50 ], [ %63, %56 ], [ %69, %64 ]
  store float %71, ptr %34, align 8, !tbaa !82
  br label %72

72:                                               ; preds = %70, %47, %42, %31
  %73 = icmp eq ptr %38, null
  %74 = load float, ptr %34, align 8, !tbaa !82
  br i1 %73, label %79, label %75

75:                                               ; preds = %72
  %76 = tail call fast nofpclass(nan inf) float @BKE_nla_tweakedit_remap(ptr noundef nonnull %38, float noundef nofpclass(nan inf) %74, i16 noundef signext 1) #18
  %77 = getelementptr inbounds %struct.TransData2D, ptr %34, i64 0, i32 1
  %78 = load ptr, ptr %77, align 8, !tbaa !178
  store float %76, ptr %78, align 4, !tbaa !82
  br label %82

79:                                               ; preds = %72
  %80 = getelementptr inbounds %struct.TransData2D, ptr %34, i64 0, i32 1
  %81 = load ptr, ptr %80, align 8, !tbaa !178
  store float %74, ptr %81, align 4, !tbaa !82
  br label %82

82:                                               ; preds = %79, %75
  %83 = phi ptr [ %81, %79 ], [ %78, %75 ]
  %84 = load i16, ptr %25, align 4, !tbaa !181
  %85 = icmp ne i16 %84, 3
  %86 = getelementptr inbounds %struct.TransData, ptr %33, i64 0, i32 16
  %87 = load i32, ptr %86, align 8, !tbaa !20
  %88 = and i32 %87, 16384
  %89 = icmp eq i32 %88, 0
  %90 = select i1 %85, i1 %89, i1 false
  br i1 %90, label %91, label %125

91:                                               ; preds = %82
  %92 = load i16, ptr %26, align 2, !tbaa !222
  switch i16 %92, label %125 [
    i16 1, label %93
    i16 5, label %105
  ]

93:                                               ; preds = %91
  %94 = load float, ptr %34, align 8, !tbaa !82
  %95 = fpext float %94 to double
  %96 = fadd fast double %95, 5.000000e-01
  %97 = tail call fast double @llvm.floor.f64(double %96)
  %98 = fptrunc double %97 to float
  store float %98, ptr %83, align 4, !tbaa !82
  %99 = getelementptr inbounds %struct.TransData, ptr %33, i64 0, i32 3
  %100 = load ptr, ptr %99, align 8, !tbaa !182
  %101 = load float, ptr %100, align 4, !tbaa !82
  %102 = fpext float %101 to double
  %103 = fadd fast double %102, 5.000000e-01
  %104 = tail call fast double @llvm.floor.f64(double %103)
  br label %121

105:                                              ; preds = %91
  %106 = load float, ptr %34, align 8, !tbaa !82
  %107 = fpext float %106 to double
  %108 = fmul fast double %107, %29
  %109 = fadd fast double %108, 5.000000e-01
  %110 = tail call fast double @llvm.floor.f64(double %109)
  %111 = fmul fast double %110, %10
  %112 = fptrunc double %111 to float
  store float %112, ptr %34, align 8, !tbaa !82
  %113 = getelementptr inbounds %struct.TransData, ptr %33, i64 0, i32 3
  %114 = load ptr, ptr %113, align 8, !tbaa !182
  %115 = load float, ptr %114, align 4, !tbaa !82
  %116 = fpext float %115 to double
  %117 = fmul fast double %116, %30
  %118 = fadd fast double %117, 5.000000e-01
  %119 = tail call fast double @llvm.floor.f64(double %118)
  %120 = fmul fast double %119, %10
  br label %121

121:                                              ; preds = %105, %93
  %122 = phi double [ %104, %93 ], [ %120, %105 ]
  %123 = phi ptr [ %100, %93 ], [ %114, %105 ]
  %124 = fptrunc double %122 to float
  store float %124, ptr %123, align 4, !tbaa !82
  br label %125

125:                                              ; preds = %121, %82, %91
  %126 = and i32 %87, 32768
  %127 = icmp eq i32 %126, 0
  %128 = getelementptr inbounds [3 x float], ptr %34, i64 0, i64 1
  %129 = load float, ptr %128, align 4, !tbaa !82
  %130 = fmul fast float %129, %40
  %131 = fadd fast float %129, 5.000000e-01
  %132 = tail call fast float @llvm.floor.f32(float %131)
  %133 = select i1 %127, float %130, float %132
  %134 = getelementptr inbounds float, ptr %83, i64 1
  store float %133, ptr %134, align 4, !tbaa !82
  %135 = and i32 %87, 131072
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %161, label %137

137:                                              ; preds = %125
  %138 = getelementptr inbounds %struct.TransData2D, ptr %34, i64 0, i32 2
  %139 = load ptr, ptr %138, align 8, !tbaa !209
  %140 = icmp eq ptr %139, null
  br i1 %140, label %161, label %141

141:                                              ; preds = %137
  %142 = getelementptr inbounds %struct.TransData2D, ptr %34, i64 0, i32 4
  %143 = load float, ptr %142, align 8, !tbaa !82
  %144 = getelementptr inbounds %struct.TransData, ptr %33, i64 0, i32 3
  %145 = load ptr, ptr %144, align 8, !tbaa !182
  %146 = load float, ptr %145, align 4, !tbaa !82
  %147 = fadd fast float %146, %143
  %148 = getelementptr inbounds %struct.TransData, ptr %33, i64 0, i32 4
  %149 = load float, ptr %148, align 8, !tbaa !82
  %150 = fsub fast float %147, %149
  store float %150, ptr %139, align 4, !tbaa !82
  %151 = getelementptr inbounds %struct.TransData2D, ptr %34, i64 0, i32 4, i64 1
  %152 = load float, ptr %151, align 4, !tbaa !82
  %153 = getelementptr inbounds float, ptr %145, i64 1
  %154 = load float, ptr %153, align 4, !tbaa !82
  %155 = getelementptr inbounds %struct.TransData, ptr %33, i64 0, i32 4, i64 1
  %156 = load float, ptr %155, align 4, !tbaa !82
  %157 = fsub fast float %154, %156
  %158 = fmul fast float %157, %40
  %159 = fadd fast float %158, %152
  %160 = getelementptr inbounds float, ptr %139, i64 1
  store float %159, ptr %160, align 4, !tbaa !82
  br label %161

161:                                              ; preds = %141, %137, %125
  %162 = and i32 %87, 262144
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %188, label %164

164:                                              ; preds = %161
  %165 = getelementptr inbounds %struct.TransData2D, ptr %34, i64 0, i32 3
  %166 = load ptr, ptr %165, align 8, !tbaa !210
  %167 = icmp eq ptr %166, null
  br i1 %167, label %188, label %168

168:                                              ; preds = %164
  %169 = getelementptr inbounds %struct.TransData2D, ptr %34, i64 0, i32 5
  %170 = load float, ptr %169, align 8, !tbaa !82
  %171 = getelementptr inbounds %struct.TransData, ptr %33, i64 0, i32 3
  %172 = load ptr, ptr %171, align 8, !tbaa !182
  %173 = load float, ptr %172, align 4, !tbaa !82
  %174 = fadd fast float %173, %170
  %175 = getelementptr inbounds %struct.TransData, ptr %33, i64 0, i32 4
  %176 = load float, ptr %175, align 8, !tbaa !82
  %177 = fsub fast float %174, %176
  store float %177, ptr %166, align 4, !tbaa !82
  %178 = getelementptr inbounds %struct.TransData2D, ptr %34, i64 0, i32 5, i64 1
  %179 = load float, ptr %178, align 4, !tbaa !82
  %180 = getelementptr inbounds float, ptr %172, i64 1
  %181 = load float, ptr %180, align 4, !tbaa !82
  %182 = getelementptr inbounds %struct.TransData, ptr %33, i64 0, i32 4, i64 1
  %183 = load float, ptr %182, align 4, !tbaa !82
  %184 = fsub fast float %181, %183
  %185 = fmul fast float %184, %40
  %186 = fadd fast float %185, %179
  %187 = getelementptr inbounds float, ptr %166, i64 1
  store float %186, ptr %187, align 4, !tbaa !82
  br label %188

188:                                              ; preds = %168, %164, %161
  %189 = add nuw nsw i32 %35, 1
  %190 = getelementptr inbounds %struct.TransData, ptr %33, i64 1
  %191 = getelementptr inbounds %struct.TransData2D, ptr %34, i64 1
  %192 = getelementptr inbounds %struct.TransDataGraph, ptr %36, i64 1
  %193 = load i32, ptr %11, align 8, !tbaa !5
  %194 = icmp slt i32 %189, %193
  br i1 %194, label %31, label %195, !llvm.loop !223

195:                                              ; preds = %188, %1
  ret void
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare double @llvm.floor.f64(double) #8

declare i32 @ED_markers_find_nearest_marker_time(ptr noundef, float noundef nofpclass(nan inf)) local_unnamed_addr #7

declare nofpclass(nan inf) float @BKE_nla_tweakedit_remap(ptr noundef, float noundef nofpclass(nan inf), i16 noundef signext) local_unnamed_addr #7

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @autokeyframe_ob_cb_func(ptr noundef %0, ptr noundef %1, ptr nocapture noundef readonly %2, ptr noundef %3, i32 noundef %4) local_unnamed_addr #6 {
  %6 = alloca %struct.ListBase, align 8
  %7 = tail call i32 @autokeyframe_cfra_can_key(ptr noundef %1, ptr noundef %3) #18
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %156, label %9

9:                                                ; preds = %5
  %10 = tail call ptr @CTX_wm_reports(ptr noundef %0) #18
  %11 = tail call ptr @ANIM_scene_get_active_keyingset(ptr noundef %1) #18
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %6) #18
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %6, i8 0, i64 16, i1 false)
  %12 = getelementptr inbounds %struct.Scene, ptr %1, i64 0, i32 22, i32 5
  %13 = load i32, ptr %12, align 8, !tbaa !224
  %14 = sitofp i32 %13 to float
  %15 = tail call signext i16 @ANIM_get_keyframing_flags(ptr noundef %1, i16 noundef signext 1) #18
  call void @ANIM_relative_keyingset_add_source(ptr noundef nonnull %6, ptr noundef %3, ptr noundef null, ptr noundef null) #18
  %16 = getelementptr inbounds %struct.Scene, ptr %1, i64 0, i32 20
  %17 = load ptr, ptr %16, align 8, !tbaa !225
  %18 = getelementptr inbounds %struct.ToolSettings, ptr %17, i64 0, i32 22
  %19 = load i16, ptr %18, align 2, !tbaa !226
  %20 = and i16 %19, 64
  %21 = icmp eq i16 %20, 0
  br i1 %21, label %22, label %28

22:                                               ; preds = %9
  %23 = load i16, ptr getelementptr inbounds (%struct.UserDef, ptr @U, i64 0, i32 92), align 2, !tbaa !233
  %24 = and i16 %23, 64
  %25 = icmp eq i16 %24, 0
  %26 = icmp eq ptr %11, null
  %27 = select i1 %25, i1 true, i1 %26
  br i1 %27, label %32, label %30

28:                                               ; preds = %9
  %29 = icmp eq ptr %11, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %22, %28
  %31 = call i32 @ANIM_apply_keyingset(ptr noundef %0, ptr noundef nonnull %6, ptr noundef null, ptr noundef nonnull %11, i16 noundef signext 0, float noundef nofpclass(nan inf) %14) #18
  br label %147

32:                                               ; preds = %22, %28
  %33 = and i16 %19, 1
  %34 = icmp eq i16 %33, 0
  br i1 %34, label %35, label %39

35:                                               ; preds = %32
  %36 = load i16, ptr getelementptr inbounds (%struct.UserDef, ptr @U, i64 0, i32 92), align 2, !tbaa !233
  %37 = and i16 %36, 1
  %38 = icmp eq i16 %37, 0
  br i1 %38, label %68, label %39

39:                                               ; preds = %35, %32
  %40 = getelementptr inbounds %struct.Object, ptr %3, i64 0, i32 1
  %41 = load ptr, ptr %40, align 8, !tbaa !234
  %42 = icmp eq ptr %41, null
  br i1 %42, label %147, label %43

43:                                               ; preds = %39
  %44 = load ptr, ptr %41, align 8, !tbaa !235
  %45 = icmp eq ptr %44, null
  br i1 %45, label %147, label %46

46:                                               ; preds = %43
  %47 = getelementptr inbounds %struct.bAction, ptr %44, i64 0, i32 1
  %48 = load ptr, ptr %47, align 8, !tbaa !33
  %49 = icmp eq ptr %48, null
  br i1 %49, label %147, label %50

50:                                               ; preds = %46, %50
  %51 = phi ptr [ %66, %50 ], [ %48, %46 ]
  %52 = getelementptr inbounds %struct.FCurve, ptr %51, i64 0, i32 9
  %53 = load i16, ptr %52, align 8, !tbaa !237
  %54 = and i16 %53, -3
  store i16 %54, ptr %52, align 8, !tbaa !237
  %55 = load ptr, ptr %41, align 8, !tbaa !235
  %56 = getelementptr inbounds %struct.FCurve, ptr %51, i64 0, i32 2
  %57 = load ptr, ptr %56, align 8, !tbaa !238
  %58 = icmp eq ptr %57, null
  %59 = getelementptr inbounds %struct.bActionGroup, ptr %57, i64 0, i32 5
  %60 = select i1 %58, ptr null, ptr %59
  %61 = getelementptr inbounds %struct.FCurve, ptr %51, i64 0, i32 12
  %62 = load ptr, ptr %61, align 8, !tbaa !239
  %63 = getelementptr inbounds %struct.FCurve, ptr %51, i64 0, i32 11
  %64 = load i32, ptr %63, align 4, !tbaa !240
  %65 = call signext i16 @insert_keyframe(ptr noundef %10, ptr noundef %3, ptr noundef %55, ptr noundef %60, ptr noundef %62, i32 noundef %64, float noundef nofpclass(nan inf) %14, i16 noundef signext %15) #18
  %66 = load ptr, ptr %51, align 8, !tbaa !33
  %67 = icmp eq ptr %66, null
  br i1 %67, label %147, label %50, !llvm.loop !241

68:                                               ; preds = %35
  %69 = or i16 %19, %36
  %70 = and i16 %69, 2
  %71 = icmp eq i16 %70, 0
  br i1 %71, label %141, label %72

72:                                               ; preds = %68
  switch i32 %4, label %147 [
    i32 1, label %128
    i32 2, label %73
    i32 3, label %93
  ]

73:                                               ; preds = %72
  %74 = getelementptr inbounds %struct.View3D, ptr %2, i64 0, i32 27
  %75 = load i16, ptr %74, align 2, !tbaa !242
  switch i16 %75, label %76 [
    i16 4, label %81
    i16 1, label %88
  ]

76:                                               ; preds = %73
  %77 = getelementptr inbounds %struct.View3D, ptr %2, i64 0, i32 28
  %78 = load i16, ptr %77, align 8, !tbaa !244
  %79 = and i16 %78, 1024
  %80 = icmp eq i16 %79, 0
  br i1 %80, label %144, label %147

81:                                               ; preds = %73
  %82 = getelementptr inbounds %struct.Scene, ptr %1, i64 0, i32 6
  %83 = load ptr, ptr %82, align 8, !tbaa !90
  %84 = icmp eq ptr %83, null
  br i1 %84, label %113, label %85

85:                                               ; preds = %81
  %86 = getelementptr inbounds %struct.Base, ptr %83, i64 0, i32 7
  %87 = load ptr, ptr %86, align 8, !tbaa !109
  br label %113

88:                                               ; preds = %73
  %89 = getelementptr inbounds %struct.View3D, ptr %2, i64 0, i32 28
  %90 = load i16, ptr %89, align 8, !tbaa !244
  %91 = and i16 %90, 1024
  %92 = icmp ne i16 %91, 0
  br label %128

93:                                               ; preds = %72
  %94 = getelementptr inbounds %struct.View3D, ptr %2, i64 0, i32 27
  %95 = load i16, ptr %94, align 2, !tbaa !242
  switch i16 %95, label %96 [
    i16 4, label %101
    i16 1, label %108
  ]

96:                                               ; preds = %93
  %97 = getelementptr inbounds %struct.View3D, ptr %2, i64 0, i32 28
  %98 = load i16, ptr %97, align 8, !tbaa !244
  %99 = and i16 %98, 1024
  %100 = icmp eq i16 %99, 0
  br i1 %100, label %138, label %147

101:                                              ; preds = %93
  %102 = getelementptr inbounds %struct.Scene, ptr %1, i64 0, i32 6
  %103 = load ptr, ptr %102, align 8, !tbaa !90
  %104 = icmp eq ptr %103, null
  br i1 %104, label %120, label %105

105:                                              ; preds = %101
  %106 = getelementptr inbounds %struct.Base, ptr %103, i64 0, i32 7
  %107 = load ptr, ptr %106, align 8, !tbaa !109
  br label %120

108:                                              ; preds = %93
  %109 = getelementptr inbounds %struct.View3D, ptr %2, i64 0, i32 28
  %110 = load i16, ptr %109, align 8, !tbaa !244
  %111 = and i16 %110, 1024
  %112 = icmp ne i16 %111, 0
  br label %128

113:                                              ; preds = %85, %81
  %114 = phi ptr [ %87, %85 ], [ null, %81 ]
  %115 = icmp eq ptr %114, %3
  %116 = getelementptr inbounds %struct.View3D, ptr %2, i64 0, i32 28
  %117 = load i16, ptr %116, align 8, !tbaa !244
  %118 = and i16 %117, 1024
  %119 = icmp ne i16 %118, 0
  br i1 %115, label %133, label %128

120:                                              ; preds = %105, %101
  %121 = phi ptr [ %107, %105 ], [ null, %101 ]
  %122 = icmp eq ptr %121, %3
  %123 = getelementptr inbounds %struct.View3D, ptr %2, i64 0, i32 28
  %124 = load i16, ptr %123, align 8, !tbaa !244
  %125 = and i16 %124, 1024
  %126 = icmp ne i16 %125, 0
  br i1 %122, label %127, label %128

127:                                              ; preds = %120
  br i1 %126, label %147, label %138

128:                                              ; preds = %108, %88, %120, %72, %113
  %129 = phi i1 [ %119, %113 ], [ true, %72 ], [ true, %120 ], [ %92, %88 ], [ true, %108 ]
  %130 = phi i1 [ true, %113 ], [ true, %72 ], [ %126, %120 ], [ true, %88 ], [ %112, %108 ]
  %131 = call ptr @ANIM_builtin_keyingset_get_named(ptr noundef null, ptr noundef nonnull @.str) #18
  %132 = call i32 @ANIM_apply_keyingset(ptr noundef %0, ptr noundef nonnull %6, ptr noundef null, ptr noundef %131, i16 noundef signext 0, float noundef nofpclass(nan inf) %14) #18
  br i1 %129, label %137, label %134

133:                                              ; preds = %113
  br i1 %119, label %147, label %144

134:                                              ; preds = %128
  %135 = call ptr @ANIM_builtin_keyingset_get_named(ptr noundef null, ptr noundef nonnull @.str.1) #18
  %136 = call i32 @ANIM_apply_keyingset(ptr noundef %0, ptr noundef nonnull %6, ptr noundef null, ptr noundef %135, i16 noundef signext 0, float noundef nofpclass(nan inf) %14) #18
  br i1 %130, label %147, label %138

137:                                              ; preds = %128
  br i1 %130, label %147, label %138

138:                                              ; preds = %96, %127, %134, %137
  %139 = call ptr @ANIM_builtin_keyingset_get_named(ptr noundef null, ptr noundef nonnull @.str.2) #18
  %140 = call i32 @ANIM_apply_keyingset(ptr noundef %0, ptr noundef nonnull %6, ptr noundef null, ptr noundef %139, i16 noundef signext 0, float noundef nofpclass(nan inf) %14) #18
  br label %147

141:                                              ; preds = %68
  %142 = call ptr @ANIM_builtin_keyingset_get_named(ptr noundef null, ptr noundef nonnull @.str.3) #18
  %143 = call i32 @ANIM_apply_keyingset(ptr noundef %0, ptr noundef nonnull %6, ptr noundef null, ptr noundef %142, i16 noundef signext 0, float noundef nofpclass(nan inf) %14) #18
  br label %147

144:                                              ; preds = %76, %133
  %145 = call ptr @ANIM_builtin_keyingset_get_named(ptr noundef null, ptr noundef nonnull @.str.1) #18
  %146 = call i32 @ANIM_apply_keyingset(ptr noundef %0, ptr noundef nonnull %6, ptr noundef null, ptr noundef %145, i16 noundef signext 0, float noundef nofpclass(nan inf) %14) #18
  br label %147

147:                                              ; preds = %50, %144, %133, %76, %96, %127, %46, %72, %134, %137, %138, %39, %43, %141, %30
  %148 = icmp eq ptr %0, null
  br i1 %148, label %155, label %149

149:                                              ; preds = %147
  %150 = getelementptr inbounds %struct.Object, ptr %3, i64 0, i32 21, i32 11
  %151 = load i16, ptr %150, align 2, !tbaa !245
  %152 = and i16 %151, 4
  %153 = icmp eq i16 %152, 0
  br i1 %153, label %155, label %154

154:                                              ; preds = %149
  call void @ED_objects_recalculate_paths(ptr noundef nonnull %0, ptr noundef %1) #18
  br label %155

155:                                              ; preds = %154, %149, %147
  call void @BLI_freelistN(ptr noundef nonnull %6) #18
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %6) #18
  br label %156

156:                                              ; preds = %155, %5
  ret void
}

declare i32 @autokeyframe_cfra_can_key(ptr noundef, ptr noundef) local_unnamed_addr #7

declare ptr @CTX_wm_reports(ptr noundef) local_unnamed_addr #7

declare ptr @ANIM_scene_get_active_keyingset(ptr noundef) local_unnamed_addr #7

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #9

declare signext i16 @ANIM_get_keyframing_flags(ptr noundef, i16 noundef signext) local_unnamed_addr #7

declare void @ANIM_relative_keyingset_add_source(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #7

declare i32 @ANIM_apply_keyingset(ptr noundef, ptr noundef, ptr noundef, ptr noundef, i16 noundef signext, float noundef nofpclass(nan inf)) local_unnamed_addr #7

declare signext i16 @insert_keyframe(ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, i32 noundef, float noundef nofpclass(nan inf), i16 noundef signext) local_unnamed_addr #7

declare ptr @ANIM_builtin_keyingset_get_named(ptr noundef, ptr noundef) local_unnamed_addr #7

declare void @ED_objects_recalculate_paths(ptr noundef, ptr noundef) local_unnamed_addr #7

declare void @BLI_freelistN(ptr noundef) local_unnamed_addr #7

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @autokeyframe_pose_cb_func(ptr noundef %0, ptr noundef %1, ptr nocapture noundef readonly %2, ptr noundef %3, i32 noundef %4, i16 noundef signext %5) local_unnamed_addr #6 {
  %7 = alloca %struct.ListBase, align 8
  %8 = getelementptr inbounds %struct.Object, ptr %3, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !234
  %10 = icmp eq ptr %9, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %6
  %12 = load ptr, ptr %9, align 8, !tbaa !235
  br label %13

13:                                               ; preds = %6, %11
  %14 = phi ptr [ %12, %11 ], [ null, %6 ]
  %15 = getelementptr inbounds %struct.Object, ptr %3, i64 0, i32 18
  %16 = load ptr, ptr %15, align 8, !tbaa !28
  %17 = tail call i32 @autokeyframe_cfra_can_key(ptr noundef %1, ptr noundef nonnull %3) #18
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %13
  %20 = load ptr, ptr %16, align 8, !tbaa !33
  %21 = icmp eq ptr %20, null
  br i1 %21, label %166, label %153

22:                                               ; preds = %13
  %23 = tail call ptr @CTX_wm_reports(ptr noundef %0) #18
  %24 = tail call ptr @ANIM_scene_get_active_keyingset(ptr noundef %1) #18
  %25 = getelementptr inbounds %struct.Scene, ptr %1, i64 0, i32 22, i32 5
  %26 = load i32, ptr %25, align 8, !tbaa !224
  %27 = sitofp i32 %26 to float
  %28 = tail call signext i16 @ANIM_get_keyframing_flags(ptr noundef %1, i16 noundef signext 1) #18
  %29 = icmp eq i16 %5, 0
  %30 = or i16 %28, 2
  %31 = select i1 %29, i16 %28, i16 %30
  %32 = load ptr, ptr %16, align 8, !tbaa !33
  %33 = icmp eq ptr %32, null
  br i1 %33, label %144, label %34

34:                                               ; preds = %22
  %35 = getelementptr inbounds %struct.Scene, ptr %1, i64 0, i32 20
  %36 = icmp eq ptr %24, null
  %37 = icmp eq ptr %14, null
  %38 = getelementptr inbounds %struct.bAction, ptr %14, i64 0, i32 1
  %39 = getelementptr inbounds %struct.View3D, ptr %2, i64 0, i32 27
  %40 = getelementptr inbounds %struct.View3D, ptr %2, i64 0, i32 28
  br label %41

41:                                               ; preds = %34, %141
  %42 = phi ptr [ %32, %34 ], [ %142, %141 ]
  %43 = getelementptr inbounds %struct.bPoseChannel, ptr %42, i64 0, i32 12
  %44 = load ptr, ptr %43, align 8, !tbaa !37
  %45 = getelementptr inbounds %struct.Bone, ptr %44, i64 0, i32 10
  %46 = load i32, ptr %45, align 8, !tbaa !41
  %47 = and i32 %46, 8
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %141, label %49

49:                                               ; preds = %41
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %7) #18
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %7, i8 0, i64 16, i1 false)
  %50 = and i32 %46, -8193
  store i32 %50, ptr %45, align 8, !tbaa !41
  call void @ANIM_relative_keyingset_add_source(ptr noundef nonnull %7, ptr noundef %3, ptr noundef nonnull @RNA_PoseBone, ptr noundef nonnull %42) #18
  %51 = load ptr, ptr %35, align 8, !tbaa !225
  %52 = getelementptr inbounds %struct.ToolSettings, ptr %51, i64 0, i32 22
  %53 = load i16, ptr %52, align 2, !tbaa !226
  %54 = and i16 %53, 64
  %55 = icmp eq i16 %54, 0
  br i1 %55, label %56, label %61

56:                                               ; preds = %49
  %57 = load i16, ptr getelementptr inbounds (%struct.UserDef, ptr @U, i64 0, i32 92), align 2, !tbaa !233
  %58 = and i16 %57, 64
  %59 = icmp eq i16 %58, 0
  %60 = select i1 %59, i1 true, i1 %36
  br i1 %60, label %64, label %62

61:                                               ; preds = %49
  br i1 %36, label %64, label %62

62:                                               ; preds = %56, %61
  %63 = call i32 @ANIM_apply_keyingset(ptr noundef %0, ptr noundef nonnull %7, ptr noundef null, ptr noundef nonnull %24, i16 noundef signext 0, float noundef nofpclass(nan inf) %27) #18
  br label %140

64:                                               ; preds = %61, %56
  %65 = and i16 %53, 1
  %66 = icmp eq i16 %65, 0
  br i1 %66, label %67, label %71

67:                                               ; preds = %64
  %68 = load i16, ptr getelementptr inbounds (%struct.UserDef, ptr @U, i64 0, i32 92), align 2, !tbaa !233
  %69 = and i16 %68, 1
  %70 = icmp eq i16 %69, 0
  br i1 %70, label %104, label %71

71:                                               ; preds = %67, %64
  br i1 %37, label %140, label %72

72:                                               ; preds = %71
  %73 = load ptr, ptr %38, align 8, !tbaa !33
  %74 = icmp eq ptr %73, null
  br i1 %74, label %140, label %75

75:                                               ; preds = %72
  %76 = getelementptr inbounds %struct.bPoseChannel, ptr %42, i64 0, i32 4
  br label %77

77:                                               ; preds = %75, %101
  %78 = phi ptr [ %73, %75 ], [ %102, %101 ]
  %79 = getelementptr inbounds %struct.FCurve, ptr %78, i64 0, i32 12
  %80 = load ptr, ptr %79, align 8, !tbaa !239
  %81 = call ptr @strstr(ptr noundef nonnull dereferenceable(1) %80, ptr noundef nonnull dereferenceable(1) @.str.4) #19
  %82 = icmp eq ptr %81, null
  br i1 %82, label %101, label %83

83:                                               ; preds = %77
  %84 = call ptr @BLI_str_quoted_substrN(ptr noundef %80, ptr noundef nonnull @.str.5) #18
  %85 = icmp eq ptr %84, null
  br i1 %85, label %101, label %86

86:                                               ; preds = %83
  %87 = call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %84, ptr noundef nonnull dereferenceable(1) %76) #19
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %99

89:                                               ; preds = %86
  %90 = getelementptr inbounds %struct.FCurve, ptr %78, i64 0, i32 2
  %91 = load ptr, ptr %90, align 8, !tbaa !238
  %92 = icmp eq ptr %91, null
  %93 = getelementptr inbounds %struct.bActionGroup, ptr %91, i64 0, i32 5
  %94 = select i1 %92, ptr null, ptr %93
  %95 = load ptr, ptr %79, align 8, !tbaa !239
  %96 = getelementptr inbounds %struct.FCurve, ptr %78, i64 0, i32 11
  %97 = load i32, ptr %96, align 4, !tbaa !240
  %98 = call signext i16 @insert_keyframe(ptr noundef %23, ptr noundef %3, ptr noundef nonnull %14, ptr noundef %94, ptr noundef %95, i32 noundef %97, float noundef nofpclass(nan inf) %27, i16 noundef signext %31) #18
  br label %99

99:                                               ; preds = %86, %89
  %100 = load ptr, ptr @MEM_freeN, align 8, !tbaa !33
  call void %100(ptr noundef nonnull %84) #18
  br label %101

101:                                              ; preds = %99, %83, %77
  %102 = load ptr, ptr %78, align 8, !tbaa !33
  %103 = icmp eq ptr %102, null
  br i1 %103, label %140, label %77, !llvm.loop !246

104:                                              ; preds = %67
  %105 = or i16 %53, %68
  %106 = and i16 %105, 2
  %107 = icmp eq i16 %106, 0
  br i1 %107, label %134, label %108

108:                                              ; preds = %104
  switch i32 %4, label %140 [
    i32 1, label %109
    i32 2, label %110
    i32 3, label %115
  ]

109:                                              ; preds = %108
  br i1 %29, label %122, label %137

110:                                              ; preds = %108
  %111 = load i16, ptr %39, align 2, !tbaa !242
  %112 = load i16, ptr %40, align 8, !tbaa !244
  %113 = and i16 %112, 1024
  %114 = icmp ne i16 %113, 0
  switch i16 %111, label %121 [
    i16 4, label %122
    i16 1, label %122
  ]

115:                                              ; preds = %108
  %116 = load i16, ptr %39, align 2, !tbaa !242
  %117 = load i16, ptr %40, align 8, !tbaa !244
  %118 = and i16 %117, 1024
  %119 = icmp ne i16 %118, 0
  switch i16 %116, label %120 [
    i16 4, label %122
    i16 1, label %122
  ]

120:                                              ; preds = %115
  br i1 %119, label %140, label %131

121:                                              ; preds = %110
  br i1 %114, label %140, label %137

122:                                              ; preds = %115, %115, %110, %110, %109
  %123 = phi i1 [ true, %109 ], [ %114, %110 ], [ true, %115 ], [ %114, %110 ], [ true, %115 ]
  %124 = phi i1 [ true, %109 ], [ true, %110 ], [ %119, %115 ], [ true, %110 ], [ %119, %115 ]
  %125 = call ptr @ANIM_builtin_keyingset_get_named(ptr noundef null, ptr noundef nonnull @.str) #18
  %126 = call i32 @ANIM_apply_keyingset(ptr noundef %0, ptr noundef nonnull %7, ptr noundef null, ptr noundef %125, i16 noundef signext 0, float noundef nofpclass(nan inf) %27) #18
  br i1 %123, label %130, label %127

127:                                              ; preds = %122
  %128 = call ptr @ANIM_builtin_keyingset_get_named(ptr noundef null, ptr noundef nonnull @.str.1) #18
  %129 = call i32 @ANIM_apply_keyingset(ptr noundef %0, ptr noundef nonnull %7, ptr noundef null, ptr noundef %128, i16 noundef signext 0, float noundef nofpclass(nan inf) %27) #18
  br i1 %124, label %140, label %131

130:                                              ; preds = %122
  br i1 %124, label %140, label %131

131:                                              ; preds = %120, %127, %130
  %132 = call ptr @ANIM_builtin_keyingset_get_named(ptr noundef null, ptr noundef nonnull @.str.2) #18
  %133 = call i32 @ANIM_apply_keyingset(ptr noundef %0, ptr noundef nonnull %7, ptr noundef null, ptr noundef %132, i16 noundef signext 0, float noundef nofpclass(nan inf) %27) #18
  br label %140

134:                                              ; preds = %104
  %135 = call ptr @ANIM_builtin_keyingset_get_named(ptr noundef null, ptr noundef nonnull @.str.3) #18
  %136 = call i32 @ANIM_apply_keyingset(ptr noundef %0, ptr noundef nonnull %7, ptr noundef null, ptr noundef %135, i16 noundef signext 0, float noundef nofpclass(nan inf) %27) #18
  br label %140

137:                                              ; preds = %109, %121
  %138 = call ptr @ANIM_builtin_keyingset_get_named(ptr noundef null, ptr noundef nonnull @.str.1) #18
  %139 = call i32 @ANIM_apply_keyingset(ptr noundef %0, ptr noundef nonnull %7, ptr noundef null, ptr noundef %138, i16 noundef signext 0, float noundef nofpclass(nan inf) %27) #18
  br label %140

140:                                              ; preds = %101, %72, %137, %108, %121, %120, %127, %130, %131, %71, %134, %62
  call void @BLI_freelistN(ptr noundef nonnull %7) #18
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %7) #18
  br label %141

141:                                              ; preds = %41, %140
  %142 = load ptr, ptr %42, align 8, !tbaa !33
  %143 = icmp eq ptr %142, null
  br i1 %143, label %144, label %41, !llvm.loop !247

144:                                              ; preds = %141, %22
  %145 = icmp eq ptr %0, null
  br i1 %145, label %166, label %146

146:                                              ; preds = %144
  %147 = load ptr, ptr %15, align 8, !tbaa !28
  %148 = getelementptr inbounds %struct.bPose, ptr %147, i64 0, i32 14, i32 11
  %149 = load i16, ptr %148, align 2, !tbaa !248
  %150 = and i16 %149, 4
  %151 = icmp eq i16 %150, 0
  br i1 %151, label %166, label %152

152:                                              ; preds = %146
  call void @ED_pose_recalculate_paths(ptr noundef %1, ptr noundef nonnull %3) #18
  br label %166

153:                                              ; preds = %19, %163
  %154 = phi ptr [ %164, %163 ], [ %20, %19 ]
  %155 = getelementptr inbounds %struct.bPoseChannel, ptr %154, i64 0, i32 12
  %156 = load ptr, ptr %155, align 8, !tbaa !37
  %157 = getelementptr inbounds %struct.Bone, ptr %156, i64 0, i32 10
  %158 = load i32, ptr %157, align 8, !tbaa !41
  %159 = and i32 %158, 8
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %163, label %161

161:                                              ; preds = %153
  %162 = or i32 %158, 8192
  store i32 %162, ptr %157, align 8, !tbaa !41
  br label %163

163:                                              ; preds = %153, %161
  %164 = load ptr, ptr %154, align 8, !tbaa !33
  %165 = icmp eq ptr %164, null
  br i1 %165, label %166, label %153, !llvm.loop !250

166:                                              ; preds = %163, %19, %144, %146, %152
  ret void
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare ptr @strstr(ptr noundef, ptr nocapture noundef) local_unnamed_addr #10

declare ptr @BLI_str_quoted_substrN(ptr noundef, ptr noundef) local_unnamed_addr #7

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare i32 @strcmp(ptr nocapture noundef, ptr nocapture noundef) local_unnamed_addr #10

declare void @ED_pose_recalculate_paths(ptr noundef, ptr noundef) local_unnamed_addr #7

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @special_aftertrans_update(ptr noundef %0, ptr noundef %1) local_unnamed_addr #6 {
  %3 = alloca i8, align 1
  %4 = alloca i8, align 1
  %5 = alloca %struct.bAnimContext, align 8
  %6 = alloca %struct.ListBase, align 8
  %7 = alloca %struct.bAnimContext, align 8
  %8 = alloca %struct.ListBase, align 8
  %9 = alloca %struct.bAnimContext, align 8
  %10 = alloca %struct.ListBase, align 8
  %11 = alloca %struct.ListBase, align 8
  %12 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 3
  %13 = load i16, ptr %12, align 4, !tbaa !181
  %14 = icmp eq i16 %13, 3
  %15 = load i32, ptr %1, align 8, !tbaa !161
  %16 = icmp eq i32 %15, 23
  %17 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 9
  %18 = load i32, ptr %17, align 8, !tbaa !5
  %19 = icmp eq i32 %18, 0
  %20 = icmp eq i32 %15, 0
  %21 = select i1 %19, i1 true, i1 %20
  br i1 %21, label %792, label %22

22:                                               ; preds = %2
  %23 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 33
  %24 = load i8, ptr %23, align 8, !tbaa !251
  %25 = icmp eq i8 %24, 1
  br i1 %25, label %26, label %111

26:                                               ; preds = %22
  %27 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 63
  %28 = load ptr, ptr %27, align 8, !tbaa !69
  %29 = icmp eq ptr %28, null
  br i1 %29, label %109, label %30

30:                                               ; preds = %26
  %31 = icmp eq i32 %15, 28
  br i1 %14, label %104, label %32

32:                                               ; preds = %30
  br i1 %31, label %33, label %37

33:                                               ; preds = %32
  %34 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 40
  %35 = load ptr, ptr %34, align 8, !tbaa !66
  tail call void @projectEdgeSlideData(ptr noundef nonnull %1, i8 noundef zeroext 1) #18
  tail call void @freeEdgeSlideTempFaces(ptr noundef %35) #18
  %36 = load ptr, ptr %27, align 8, !tbaa !69
  br label %37

37:                                               ; preds = %33, %32
  %38 = phi ptr [ %36, %33 ], [ %28, %32 ]
  %39 = getelementptr inbounds %struct.Object, ptr %38, i64 0, i32 3
  %40 = load i16, ptr %39, align 8, !tbaa !50
  %41 = icmp eq i16 %40, 1
  br i1 %41, label %42, label %109

42:                                               ; preds = %37
  %43 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 56
  %44 = load ptr, ptr %43, align 8, !tbaa !89
  %45 = getelementptr inbounds %struct.Scene, ptr %44, i64 0, i32 20
  %46 = load ptr, ptr %45, align 8, !tbaa !225
  %47 = getelementptr inbounds %struct.ToolSettings, ptr %46, i64 0, i32 7
  %48 = load i16, ptr %47, align 4, !tbaa !252
  %49 = icmp eq i16 %48, 0
  br i1 %49, label %109, label %50

50:                                               ; preds = %42
  %51 = tail call ptr @BKE_editmesh_from_object(ptr noundef nonnull %38) #18
  %52 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 1
  %53 = load i32, ptr %52, align 4, !tbaa !24
  %54 = and i32 %53, 524288
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %100, label %56

56:                                               ; preds = %50
  %57 = load ptr, ptr %51, align 8, !tbaa !253
  tail call void @BM_mesh_elem_hflag_disable_all(ptr noundef %57, i8 noundef zeroext 1, i8 noundef zeroext 16, i8 noundef zeroext 0) #18
  %58 = load i32, ptr %17, align 8, !tbaa !5
  %59 = icmp sgt i32 %58, 0
  br i1 %59, label %60, label %100

60:                                               ; preds = %56
  %61 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 10
  %62 = load ptr, ptr %61, align 8, !tbaa !19
  %63 = and i32 %58, 1
  %64 = icmp eq i32 %58, 1
  br i1 %64, label %89, label %65

65:                                               ; preds = %60
  %66 = and i32 %58, -2
  br label %67

67:                                               ; preds = %85, %65
  %68 = phi ptr [ %62, %65 ], [ %86, %85 ]
  %69 = phi i32 [ 0, %65 ], [ %87, %85 ]
  %70 = getelementptr inbounds %struct.TransData, ptr %68, i64 0, i32 15
  %71 = load ptr, ptr %70, align 8, !tbaa !144
  %72 = icmp eq ptr %71, null
  br i1 %72, label %77, label %73

73:                                               ; preds = %67
  %74 = getelementptr inbounds %struct.BMHeader, ptr %71, i64 0, i32 3
  %75 = load i8, ptr %74, align 1, !tbaa !255
  %76 = or i8 %75, 16
  store i8 %76, ptr %74, align 1, !tbaa !255
  br label %77

77:                                               ; preds = %73, %67
  %78 = getelementptr inbounds %struct.TransData, ptr %68, i64 1, i32 15
  %79 = load ptr, ptr %78, align 8, !tbaa !144
  %80 = icmp eq ptr %79, null
  br i1 %80, label %85, label %81

81:                                               ; preds = %77
  %82 = getelementptr inbounds %struct.BMHeader, ptr %79, i64 0, i32 3
  %83 = load i8, ptr %82, align 1, !tbaa !255
  %84 = or i8 %83, 16
  store i8 %84, ptr %82, align 1, !tbaa !255
  br label %85

85:                                               ; preds = %81, %77
  %86 = getelementptr inbounds %struct.TransData, ptr %68, i64 2
  %87 = add i32 %69, 2
  %88 = icmp eq i32 %87, %66
  br i1 %88, label %89, label %67, !llvm.loop !257

89:                                               ; preds = %85, %60
  %90 = phi ptr [ %62, %60 ], [ %86, %85 ]
  %91 = icmp eq i32 %63, 0
  br i1 %91, label %100, label %92

92:                                               ; preds = %89
  %93 = getelementptr inbounds %struct.TransData, ptr %90, i64 0, i32 15
  %94 = load ptr, ptr %93, align 8, !tbaa !144
  %95 = icmp eq ptr %94, null
  br i1 %95, label %100, label %96

96:                                               ; preds = %92
  %97 = getelementptr inbounds %struct.BMHeader, ptr %94, i64 0, i32 3
  %98 = load i8, ptr %97, align 1, !tbaa !255
  %99 = or i8 %98, 16
  store i8 %99, ptr %97, align 1, !tbaa !255
  br label %100

100:                                              ; preds = %89, %96, %92, %56, %50
  %101 = phi i8 [ 1, %50 ], [ 17, %56 ], [ 17, %92 ], [ 17, %96 ], [ 17, %89 ]
  %102 = load ptr, ptr %43, align 8, !tbaa !89
  %103 = load ptr, ptr %27, align 8, !tbaa !69
  tail call void @EDBM_automerge(ptr noundef %102, ptr noundef %103, i8 noundef zeroext 1, i8 noundef zeroext %101) #18
  br label %109

104:                                              ; preds = %30
  br i1 %31, label %105, label %109

105:                                              ; preds = %104
  %106 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 40
  %107 = load ptr, ptr %106, align 8, !tbaa !66
  %108 = getelementptr inbounds %struct.EdgeSlideData, ptr %107, i64 0, i32 8
  store float 0.000000e+00, ptr %108, align 8, !tbaa !258
  tail call void @projectEdgeSlideData(ptr noundef nonnull %1, i8 noundef zeroext 0) #18
  br label %109

109:                                              ; preds = %37, %105, %104, %26, %42, %100
  %110 = load i8, ptr %23, align 8, !tbaa !251
  br label %111

111:                                              ; preds = %109, %22
  %112 = phi i8 [ %110, %109 ], [ %24, %22 ]
  switch i8 %112, label %566 [
    i8 8, label %113
    i8 6, label %145
    i8 16, label %180
    i8 20, label %216
    i8 12, label %301
    i8 2, label %499
    i8 13, label %544
  ]

113:                                              ; preds = %111
  %114 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 54
  %115 = load ptr, ptr %114, align 8, !tbaa !148
  %116 = getelementptr inbounds %struct.ScrArea, ptr %115, i64 0, i32 19
  %117 = load ptr, ptr %116, align 8, !tbaa !170
  %118 = getelementptr inbounds %struct.SpaceSeq, ptr %117, i64 0, i32 13
  %119 = load i32, ptr %118, align 8, !tbaa !260
  %120 = and i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = select i1 %121, i1 true, i1 %14
  br i1 %122, label %773, label %123

123:                                              ; preds = %113
  %124 = load i32, ptr %1, align 8, !tbaa !161
  %125 = icmp eq i32 %124, 30
  %126 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 26
  %127 = load i8, ptr %126, align 8, !tbaa !263
  br i1 %125, label %128, label %137

128:                                              ; preds = %123
  %129 = icmp eq i8 %127, 66
  br i1 %129, label %130, label %773

130:                                              ; preds = %128
  %131 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 56
  %132 = load ptr, ptr %131, align 8, !tbaa !89
  %133 = getelementptr inbounds %struct.Scene, ptr %132, i64 0, i32 24
  %134 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 47
  %135 = load float, ptr %134, align 4, !tbaa !82
  %136 = tail call i32 @ED_markers_post_apply_transform(ptr noundef nonnull %133, ptr noundef %132, i32 noundef 19, float noundef nofpclass(nan inf) %135, i8 noundef zeroext 66) #18
  br label %773

137:                                              ; preds = %123
  switch i8 %127, label %773 [
    i8 76, label %138
    i8 82, label %138
  ]

138:                                              ; preds = %137, %137
  %139 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 56
  %140 = load ptr, ptr %139, align 8, !tbaa !89
  %141 = getelementptr inbounds %struct.Scene, ptr %140, i64 0, i32 24
  %142 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 47
  %143 = load float, ptr %142, align 4, !tbaa !82
  %144 = tail call i32 @ED_markers_post_apply_transform(ptr noundef nonnull %141, ptr noundef %140, i32 noundef 22, float noundef nofpclass(nan inf) %143, i8 noundef zeroext %127) #18
  br label %773

145:                                              ; preds = %111
  %146 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 4
  %147 = load i32, ptr %146, align 8, !tbaa !264
  %148 = and i32 %147, 128
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %773, label %150

150:                                              ; preds = %145
  %151 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 54
  %152 = load ptr, ptr %151, align 8, !tbaa !148
  %153 = getelementptr inbounds %struct.ScrArea, ptr %152, i64 0, i32 19
  %154 = load ptr, ptr %153, align 8, !tbaa !170
  %155 = tail call ptr @ED_space_image_get_mask(ptr noundef %154) #18
  %156 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 56
  %157 = load ptr, ptr %156, align 8, !tbaa !89
  %158 = getelementptr inbounds %struct.Scene, ptr %157, i64 0, i32 18
  %159 = load ptr, ptr %158, align 8, !tbaa !265
  %160 = icmp eq ptr %159, null
  br i1 %160, label %164, label %161

161:                                              ; preds = %150
  tail call void @WM_event_add_notifier(ptr noundef %0, i32 noundef 358285312, ptr noundef %155) #18
  %162 = load ptr, ptr %156, align 8, !tbaa !89
  %163 = icmp eq ptr %162, null
  br i1 %163, label %172, label %164

164:                                              ; preds = %161, %150
  %165 = phi ptr [ %162, %161 ], [ %157, %150 ]
  %166 = getelementptr inbounds %struct.Scene, ptr %165, i64 0, i32 20
  %167 = load ptr, ptr %166, align 8, !tbaa !225
  %168 = getelementptr inbounds %struct.ToolSettings, ptr %167, i64 0, i32 21
  %169 = load i16, ptr %168, align 8, !tbaa !266
  %170 = and i16 %169, 1
  %171 = icmp eq i16 %170, 0
  br i1 %171, label %773, label %176

172:                                              ; preds = %161
  %173 = load i16, ptr getelementptr inbounds (%struct.UserDef, ptr @U, i64 0, i32 91), align 8, !tbaa !267
  %174 = and i16 %173, 1
  %175 = icmp eq i16 %174, 0
  tail call void @llvm.assume(i1 %175)
  br label %773

176:                                              ; preds = %164
  %177 = getelementptr inbounds %struct.Scene, ptr %165, i64 0, i32 22, i32 5
  %178 = load i32, ptr %177, align 8, !tbaa !224
  %179 = tail call zeroext i8 @ED_mask_layer_shape_auto_key_select(ptr noundef %155, i32 noundef %178) #18
  br label %773

180:                                              ; preds = %111
  %181 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 54
  %182 = load ptr, ptr %181, align 8, !tbaa !148
  %183 = getelementptr inbounds %struct.ScrArea, ptr %182, i64 0, i32 19
  %184 = load ptr, ptr %183, align 8, !tbaa !170
  %185 = load i16, ptr %12, align 4, !tbaa !181
  %186 = icmp eq i16 %185, 3
  br i1 %186, label %187, label %209

187:                                              ; preds = %180
  %188 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 51
  %189 = load i8, ptr %188, align 4, !tbaa !268
  %190 = icmp eq i8 %189, 0
  br i1 %190, label %209, label %191

191:                                              ; preds = %187
  %192 = getelementptr inbounds %struct.SpaceNode, ptr %184, i64 0, i32 19
  %193 = load ptr, ptr %192, align 8, !tbaa !269
  %194 = icmp eq ptr %193, null
  br i1 %194, label %209, label %195

195:                                              ; preds = %191
  %196 = getelementptr inbounds %struct.bNodeTree, ptr %193, i64 0, i32 7
  %197 = load ptr, ptr %196, align 8, !tbaa !271
  %198 = icmp eq ptr %197, null
  br i1 %198, label %209, label %199

199:                                              ; preds = %195, %207
  %200 = phi ptr [ %201, %207 ], [ %197, %195 ]
  %201 = load ptr, ptr %200, align 8, !tbaa !274
  %202 = getelementptr inbounds %struct.bNode, ptr %200, i64 0, i32 7
  %203 = load i32, ptr %202, align 8, !tbaa !275
  %204 = and i32 %203, 1
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %207, label %206

206:                                              ; preds = %199
  tail call void @nodeFreeNode(ptr noundef nonnull %193, ptr noundef nonnull %200) #18
  br label %207

207:                                              ; preds = %206, %199
  %208 = icmp eq ptr %201, null
  br i1 %208, label %209, label %199, !llvm.loop !276

209:                                              ; preds = %207, %180, %187, %191, %195
  br i1 %14, label %214, label %210

210:                                              ; preds = %209
  %211 = getelementptr inbounds %struct.SpaceNode, ptr %184, i64 0, i32 19
  %212 = load ptr, ptr %211, align 8, !tbaa !269
  tail call void @ED_node_post_apply_transform(ptr noundef %0, ptr noundef %212) #18
  %213 = load ptr, ptr %181, align 8, !tbaa !148
  tail call void @ED_node_link_insert(ptr noundef %213) #18
  br label %214

214:                                              ; preds = %210, %209
  %215 = load ptr, ptr %181, align 8, !tbaa !148
  tail call void @ED_node_link_intersect_test(ptr noundef %215, i32 noundef 0) #18
  br label %773

216:                                              ; preds = %111
  %217 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 4
  %218 = load i32, ptr %217, align 8, !tbaa !264
  %219 = and i32 %218, 64
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %297, label %221

221:                                              ; preds = %216
  %222 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 54
  %223 = load ptr, ptr %222, align 8, !tbaa !148
  %224 = getelementptr inbounds %struct.ScrArea, ptr %223, i64 0, i32 19
  %225 = load ptr, ptr %224, align 8, !tbaa !170
  %226 = tail call ptr @ED_space_clip_get_clip(ptr noundef %225) #18
  %227 = getelementptr inbounds %struct.MovieClip, ptr %226, i64 0, i32 11
  %228 = tail call ptr @BKE_tracking_get_active_plane_tracks(ptr noundef nonnull %227) #18
  %229 = tail call i32 @ED_space_clip_get_clip_frame_number(ptr noundef %225) #18
  %230 = load ptr, ptr %228, align 8, !tbaa !33
  %231 = icmp eq ptr %230, null
  br i1 %231, label %289, label %232

232:                                              ; preds = %221
  %233 = getelementptr inbounds %struct.SpaceClip, ptr %225, i64 0, i32 12
  br label %234

234:                                              ; preds = %286, %232
  %235 = phi ptr [ %230, %232 ], [ %287, %286 ]
  %236 = getelementptr inbounds %struct.MovieTrackingPlaneTrack, ptr %235, i64 0, i32 8
  %237 = load i32, ptr %236, align 4, !tbaa !277
  %238 = and i32 %237, 2
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %240, label %286

240:                                              ; preds = %234
  %241 = and i32 %237, 9
  %242 = icmp eq i32 %241, 0
  br i1 %242, label %243, label %282

243:                                              ; preds = %240
  %244 = getelementptr inbounds %struct.MovieTrackingPlaneTrack, ptr %235, i64 0, i32 4
  %245 = load i32, ptr %244, align 8, !tbaa !279
  %246 = icmp sgt i32 %245, 0
  br i1 %246, label %247, label %282

247:                                              ; preds = %243
  %248 = getelementptr inbounds %struct.MovieTrackingPlaneTrack, ptr %235, i64 0, i32 3
  %249 = load ptr, ptr %248, align 8, !tbaa !280
  %250 = zext i32 %245 to i64
  br label %251

251:                                              ; preds = %279, %247
  %252 = phi i64 [ 0, %247 ], [ %280, %279 ]
  %253 = getelementptr inbounds ptr, ptr %249, i64 %252
  %254 = load ptr, ptr %253, align 8, !tbaa !33
  %255 = getelementptr inbounds %struct.MovieTrackingTrack, ptr %254, i64 0, i32 13
  %256 = load i32, ptr %255, align 8, !tbaa !281
  %257 = and i32 %256, 32
  %258 = icmp eq i32 %257, 0
  br i1 %258, label %259, label %279

259:                                              ; preds = %251
  %260 = and i32 %256, 1
  %261 = icmp eq i32 %260, 0
  br i1 %261, label %262, label %285

262:                                              ; preds = %259
  %263 = load i32, ptr %233, align 8, !tbaa !283
  %264 = and i32 %263, 1
  %265 = icmp eq i32 %264, 0
  br i1 %265, label %271, label %266

266:                                              ; preds = %262
  %267 = getelementptr inbounds %struct.MovieTrackingTrack, ptr %254, i64 0, i32 14
  %268 = load i32, ptr %267, align 4, !tbaa !288
  %269 = and i32 %268, 1
  %270 = icmp eq i32 %269, 0
  br i1 %270, label %271, label %285

271:                                              ; preds = %266, %262
  %272 = and i32 %263, 2
  %273 = icmp eq i32 %272, 0
  br i1 %273, label %279, label %274

274:                                              ; preds = %271
  %275 = getelementptr inbounds %struct.MovieTrackingTrack, ptr %254, i64 0, i32 15
  %276 = load i32, ptr %275, align 8, !tbaa !289
  %277 = and i32 %276, 1
  %278 = icmp eq i32 %277, 0
  br i1 %278, label %279, label %285

279:                                              ; preds = %274, %271, %251
  %280 = add nuw nsw i64 %252, 1
  %281 = icmp eq i64 %280, %250
  br i1 %281, label %282, label %251, !llvm.loop !290

282:                                              ; preds = %279, %243, %240
  %283 = and i32 %237, 1
  %284 = icmp eq i32 %283, 0
  br i1 %284, label %286, label %285

285:                                              ; preds = %274, %266, %259, %282
  tail call void @BKE_tracking_track_plane_from_existing_motion(ptr noundef nonnull %235, i32 noundef %229) #18
  br label %286

286:                                              ; preds = %285, %282, %234
  %287 = load ptr, ptr %235, align 8, !tbaa !33
  %288 = icmp eq ptr %287, null
  br i1 %288, label %289, label %234, !llvm.loop !291

289:                                              ; preds = %286, %221
  %290 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 56
  %291 = load ptr, ptr %290, align 8, !tbaa !89
  %292 = getelementptr inbounds %struct.Scene, ptr %291, i64 0, i32 18
  %293 = load ptr, ptr %292, align 8, !tbaa !265
  %294 = icmp eq ptr %293, null
  br i1 %294, label %773, label %295

295:                                              ; preds = %289
  %296 = tail call zeroext i8 @nodeUpdateID(ptr noundef nonnull %293, ptr noundef %226) #18
  tail call void @WM_event_add_notifier(ptr noundef %0, i32 noundef 67436544, ptr noundef null) #18
  br label %773

297:                                              ; preds = %216
  %298 = and i32 %218, 128
  %299 = icmp eq i32 %298, 0
  br i1 %299, label %773, label %300

300:                                              ; preds = %297
  tail call fastcc void @special_aftertrans_update__mask(ptr noundef %0, ptr noundef nonnull %1)
  br label %773

301:                                              ; preds = %111
  %302 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 54
  %303 = load ptr, ptr %302, align 8, !tbaa !148
  %304 = getelementptr inbounds %struct.ScrArea, ptr %303, i64 0, i32 19
  %305 = load ptr, ptr %304, align 8, !tbaa !170
  call void @llvm.lifetime.start.p0(i64 80, ptr nonnull %5) #18
  %306 = call zeroext i8 @ANIM_animdata_get_context(ptr noundef %0, ptr noundef nonnull %5) #18
  %307 = icmp eq i8 %306, 0
  br i1 %307, label %789, label %308

308:                                              ; preds = %301
  %309 = getelementptr inbounds %struct.bAnimContext, ptr %5, i64 0, i32 10
  %310 = load ptr, ptr %309, align 8, !tbaa !292
  %311 = getelementptr inbounds %struct.bAnimContext, ptr %5, i64 0, i32 1
  %312 = load i16, ptr %311, align 8
  switch i16 %312, label %475 [
    i16 4, label %313
    i16 2, label %313
    i16 1, label %340
    i16 3, label %362
    i16 9, label %419
  ]

313:                                              ; preds = %308, %308
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %6) #18
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %6, i8 0, i64 16, i1 false)
  %314 = load ptr, ptr %5, align 8, !tbaa !294
  %315 = zext i16 %312 to i32
  %316 = call i64 @ANIM_animdata_filter(ptr noundef nonnull %5, ptr noundef nonnull %6, i32 noundef 257, ptr noundef %314, i32 noundef %315) #18
  %317 = load ptr, ptr %6, align 8, !tbaa !33
  %318 = icmp eq ptr %317, null
  br i1 %318, label %339, label %319

319:                                              ; preds = %313
  %320 = getelementptr inbounds %struct.SpaceAction, ptr %305, i64 0, i32 11
  %321 = xor i1 %14, true
  %322 = select i1 %321, i1 true, i1 %16
  br label %323

323:                                              ; preds = %319, %336
  %324 = phi ptr [ %317, %319 ], [ %337, %336 ]
  %325 = call ptr @ANIM_nla_mapping_get(ptr noundef nonnull %5, ptr noundef nonnull %324) #18
  %326 = getelementptr inbounds %struct.bAnimListElem, ptr %324, i64 0, i32 8
  %327 = load ptr, ptr %326, align 8, !tbaa !192
  %328 = load i16, ptr %320, align 2, !tbaa !295
  %329 = and i16 %328, 16
  %330 = icmp eq i16 %329, 0
  %331 = select i1 %330, i1 %322, i1 false
  br i1 %331, label %332, label %336

332:                                              ; preds = %323
  %333 = icmp eq ptr %325, null
  br i1 %333, label %335, label %334

334:                                              ; preds = %332
  call void @ANIM_nla_mapping_apply_fcurve(ptr noundef nonnull %325, ptr noundef %327, i8 noundef zeroext 0, i8 noundef zeroext 1) #18
  call fastcc void @posttrans_fcurve_clean(ptr noundef %327, i16 noundef signext 0)
  call void @ANIM_nla_mapping_apply_fcurve(ptr noundef nonnull %325, ptr noundef %327, i8 noundef zeroext 1, i8 noundef zeroext 1) #18
  br label %336

335:                                              ; preds = %332
  call fastcc void @posttrans_fcurve_clean(ptr noundef %327, i16 noundef signext 0)
  br label %336

336:                                              ; preds = %334, %335, %323
  %337 = load ptr, ptr %324, align 8, !tbaa !33
  %338 = icmp eq ptr %337, null
  br i1 %338, label %339, label %323, !llvm.loop !298

339:                                              ; preds = %336, %313
  call void @ANIM_animdata_freelist(ptr noundef nonnull %6) #18
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %6) #18
  br label %475

340:                                              ; preds = %308
  %341 = icmp eq ptr %310, null
  br i1 %341, label %352, label %342

342:                                              ; preds = %340
  %343 = getelementptr inbounds %struct.Object, ptr %310, i64 0, i32 18
  %344 = load ptr, ptr %343, align 8, !tbaa !28
  %345 = icmp eq ptr %344, null
  br i1 %345, label %346, label %350

346:                                              ; preds = %342
  %347 = call ptr @BKE_key_from_object(ptr noundef nonnull %310) #18
  %348 = icmp eq ptr %347, null
  %349 = select i1 %348, i16 1, i16 7
  br label %350

350:                                              ; preds = %346, %342
  %351 = phi i16 [ 7, %342 ], [ %349, %346 ]
  call void @DAG_id_tag_update(ptr noundef nonnull %310, i16 noundef signext %351) #18
  br label %352

352:                                              ; preds = %350, %340
  %353 = getelementptr inbounds %struct.SpaceAction, ptr %305, i64 0, i32 11
  %354 = load i16, ptr %353, align 2, !tbaa !295
  %355 = and i16 %354, 16
  %356 = icmp eq i16 %355, 0
  %357 = xor i1 %14, true
  %358 = select i1 %357, i1 true, i1 %16
  %359 = select i1 %356, i1 %358, i1 false
  br i1 %359, label %360, label %475

360:                                              ; preds = %352
  %361 = load ptr, ptr %5, align 8, !tbaa !294
  call fastcc void @posttrans_action_clean(ptr noundef nonnull %5, ptr noundef %361)
  br label %475

362:                                              ; preds = %308
  %363 = getelementptr inbounds %struct.SpaceAction, ptr %305, i64 0, i32 11
  %364 = load i16, ptr %363, align 2, !tbaa !295
  %365 = and i16 %364, 16
  %366 = icmp eq i16 %365, 0
  %367 = xor i1 %14, true
  %368 = select i1 %367, i1 true, i1 %16
  %369 = select i1 %366, i1 %368, i1 false
  br i1 %369, label %370, label %475

370:                                              ; preds = %362
  %371 = load ptr, ptr @G, align 8, !tbaa !299
  %372 = getelementptr inbounds %struct.Main, ptr %371, i64 0, i32 41
  %373 = load ptr, ptr %372, align 8, !tbaa !33
  %374 = icmp eq ptr %373, null
  br i1 %374, label %475, label %375

375:                                              ; preds = %370, %416
  %376 = phi ptr [ %417, %416 ], [ %373, %370 ]
  %377 = getelementptr inbounds %struct.ID, ptr %376, i64 0, i32 6
  %378 = load i32, ptr %377, align 4, !tbaa !301
  %379 = getelementptr inbounds %struct.ID, ptr %376, i64 0, i32 5
  %380 = load i16, ptr %379, align 2, !tbaa !302
  %381 = lshr i16 %380, 9
  %382 = and i16 %381, 1
  %383 = zext i16 %382 to i32
  %384 = icmp eq i32 %378, %383
  br i1 %384, label %416, label %385

385:                                              ; preds = %375
  %386 = getelementptr inbounds %struct.bGPdata, ptr %376, i64 0, i32 1
  %387 = load ptr, ptr %386, align 8, !tbaa !33
  %388 = icmp eq ptr %387, null
  br i1 %388, label %416, label %389

389:                                              ; preds = %385, %413
  %390 = phi ptr [ %414, %413 ], [ %387, %385 ]
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %4) #18
  store i8 0, ptr %4, align 1, !tbaa !51
  %391 = getelementptr inbounds %struct.bGPDlayer, ptr %390, i64 0, i32 2
  call void @BLI_sortlist_r(ptr noundef nonnull %391, ptr noundef nonnull %4, ptr noundef nonnull @gpf_cmp_frame) #18
  %392 = load i8, ptr %4, align 1, !tbaa !51
  %393 = icmp eq i8 %392, 0
  br i1 %393, label %413, label %394

394:                                              ; preds = %389
  %395 = load ptr, ptr %391, align 8, !tbaa !303
  %396 = icmp eq ptr %395, null
  br i1 %396, label %413, label %397

397:                                              ; preds = %394
  %398 = load ptr, ptr %395, align 8, !tbaa !305
  %399 = icmp eq ptr %398, null
  br i1 %399, label %413, label %400

400:                                              ; preds = %397, %410
  %401 = phi ptr [ %411, %410 ], [ %398, %397 ]
  %402 = phi ptr [ %401, %410 ], [ %395, %397 ]
  %403 = getelementptr inbounds %struct.bGPDframe, ptr %402, i64 0, i32 3
  %404 = load i32, ptr %403, align 8, !tbaa !307
  %405 = getelementptr inbounds %struct.bGPDframe, ptr %401, i64 0, i32 3
  %406 = load i32, ptr %405, align 8, !tbaa !307
  %407 = icmp eq i32 %404, %406
  br i1 %407, label %408, label %410

408:                                              ; preds = %400
  %409 = call zeroext i8 @gpencil_layer_delframe(ptr noundef nonnull %390, ptr noundef nonnull %402) #18
  br label %410

410:                                              ; preds = %408, %400
  %411 = load ptr, ptr %401, align 8, !tbaa !305
  %412 = icmp eq ptr %411, null
  br i1 %412, label %413, label %400

413:                                              ; preds = %410, %397, %394, %389
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %4) #18
  %414 = load ptr, ptr %390, align 8, !tbaa !33
  %415 = icmp eq ptr %414, null
  br i1 %415, label %416, label %389, !llvm.loop !308

416:                                              ; preds = %413, %385, %375
  %417 = load ptr, ptr %376, align 8, !tbaa !33
  %418 = icmp eq ptr %417, null
  br i1 %418, label %475, label %375, !llvm.loop !309

419:                                              ; preds = %308
  %420 = getelementptr inbounds %struct.SpaceAction, ptr %305, i64 0, i32 11
  %421 = load i16, ptr %420, align 2, !tbaa !295
  %422 = and i16 %421, 16
  %423 = icmp eq i16 %422, 0
  %424 = xor i1 %14, true
  %425 = select i1 %424, i1 true, i1 %16
  %426 = select i1 %423, i1 %425, i1 false
  br i1 %426, label %427, label %475

427:                                              ; preds = %419
  %428 = load ptr, ptr @G, align 8, !tbaa !299
  %429 = getelementptr inbounds %struct.Main, ptr %428, i64 0, i32 43
  %430 = load ptr, ptr %429, align 8, !tbaa !33
  %431 = icmp eq ptr %430, null
  br i1 %431, label %475, label %432

432:                                              ; preds = %427, %472
  %433 = phi ptr [ %473, %472 ], [ %430, %427 ]
  %434 = getelementptr inbounds %struct.ID, ptr %433, i64 0, i32 6
  %435 = load i32, ptr %434, align 4, !tbaa !301
  %436 = getelementptr inbounds %struct.ID, ptr %433, i64 0, i32 5
  %437 = load i16, ptr %436, align 2, !tbaa !302
  %438 = lshr i16 %437, 9
  %439 = and i16 %438, 1
  %440 = zext i16 %439 to i32
  %441 = icmp eq i32 %435, %440
  br i1 %441, label %472, label %442

442:                                              ; preds = %432
  %443 = getelementptr inbounds %struct.Mask, ptr %433, i64 0, i32 2
  %444 = load ptr, ptr %443, align 8, !tbaa !33
  %445 = icmp eq ptr %444, null
  br i1 %445, label %472, label %446

446:                                              ; preds = %442, %469
  %447 = phi ptr [ %470, %469 ], [ %444, %442 ]
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %3) #18
  store i8 0, ptr %3, align 1, !tbaa !51
  %448 = getelementptr inbounds %struct.MaskLayer, ptr %447, i64 0, i32 4
  call void @BLI_sortlist_r(ptr noundef nonnull %448, ptr noundef nonnull %3, ptr noundef nonnull @masklay_shape_cmp_frame) #18
  %449 = load i8, ptr %3, align 1, !tbaa !51
  %450 = icmp eq i8 %449, 0
  br i1 %450, label %469, label %451

451:                                              ; preds = %446
  %452 = load ptr, ptr %448, align 8, !tbaa !310
  %453 = icmp eq ptr %452, null
  br i1 %453, label %469, label %454

454:                                              ; preds = %451
  %455 = load ptr, ptr %452, align 8, !tbaa !312
  %456 = icmp eq ptr %455, null
  br i1 %456, label %469, label %457

457:                                              ; preds = %454, %466
  %458 = phi ptr [ %467, %466 ], [ %455, %454 ]
  %459 = phi ptr [ %458, %466 ], [ %452, %454 ]
  %460 = getelementptr inbounds %struct.MaskLayerShape, ptr %459, i64 0, i32 4
  %461 = load i32, ptr %460, align 4, !tbaa !314
  %462 = getelementptr inbounds %struct.MaskLayerShape, ptr %458, i64 0, i32 4
  %463 = load i32, ptr %462, align 4, !tbaa !314
  %464 = icmp eq i32 %461, %463
  br i1 %464, label %465, label %466

465:                                              ; preds = %457
  call void @BKE_mask_layer_shape_unlink(ptr noundef nonnull %447, ptr noundef nonnull %459) #18
  br label %466

466:                                              ; preds = %465, %457
  %467 = load ptr, ptr %458, align 8, !tbaa !312
  %468 = icmp eq ptr %467, null
  br i1 %468, label %469, label %457

469:                                              ; preds = %466, %454, %451, %446
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %3) #18
  %470 = load ptr, ptr %447, align 8, !tbaa !33
  %471 = icmp eq ptr %470, null
  br i1 %471, label %472, label %446, !llvm.loop !315

472:                                              ; preds = %469, %442, %432
  %473 = load ptr, ptr %433, align 8, !tbaa !33
  %474 = icmp eq ptr %473, null
  br i1 %474, label %475, label %432, !llvm.loop !316

475:                                              ; preds = %472, %416, %427, %370, %308, %360, %352, %419, %362, %339
  %476 = getelementptr inbounds %struct.SpaceAction, ptr %305, i64 0, i32 11
  %477 = load i16, ptr %476, align 2, !tbaa !295
  %478 = and i16 %477, 2048
  %479 = icmp eq i16 %478, 0
  %480 = select i1 %479, i1 true, i1 %14
  br i1 %480, label %493, label %481

481:                                              ; preds = %475
  %482 = load i32, ptr %1, align 8, !tbaa !161
  switch i32 %482, label %493 [
    i32 19, label %483
    i32 21, label %483
  ]

483:                                              ; preds = %481, %481
  %484 = call ptr @ED_context_get_markers(ptr noundef %0) #18
  %485 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 56
  %486 = load ptr, ptr %485, align 8, !tbaa !89
  %487 = load i32, ptr %1, align 8, !tbaa !161
  %488 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 47
  %489 = load float, ptr %488, align 4, !tbaa !82
  %490 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 26
  %491 = load i8, ptr %490, align 8, !tbaa !263
  %492 = call i32 @ED_markers_post_apply_transform(ptr noundef %484, ptr noundef %486, i32 noundef %487, float noundef nofpclass(nan inf) %489, i8 noundef zeroext %491) #18
  br label %493

493:                                              ; preds = %483, %481, %475
  %494 = load i16, ptr %311, align 8
  switch i16 %494, label %495 [
    i16 9, label %496
    i16 3, label %496
  ]

495:                                              ; preds = %493
  call void @ANIM_editkeyframes_refresh(ptr noundef nonnull %5) #18
  br label %496

496:                                              ; preds = %493, %493, %495
  %497 = load i16, ptr %476, align 2, !tbaa !295
  %498 = and i16 %497, -2
  store i16 %498, ptr %476, align 2, !tbaa !295
  call void @llvm.lifetime.end.p0(i64 80, ptr nonnull %5) #18
  br label %773

499:                                              ; preds = %111
  %500 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 54
  %501 = load ptr, ptr %500, align 8, !tbaa !148
  %502 = getelementptr inbounds %struct.ScrArea, ptr %501, i64 0, i32 19
  %503 = load ptr, ptr %502, align 8, !tbaa !170
  call void @llvm.lifetime.start.p0(i64 80, ptr nonnull %7) #18
  %504 = getelementptr inbounds %struct.SpaceIpo, ptr %503, i64 0, i32 11
  %505 = load i32, ptr %504, align 4, !tbaa !189
  %506 = and i32 %505, 4
  %507 = icmp eq i32 %506, 0
  %508 = zext i1 %507 to i16
  %509 = call zeroext i8 @ANIM_animdata_get_context(ptr noundef %0, ptr noundef nonnull %7) #18
  %510 = icmp eq i8 %509, 0
  br i1 %510, label %790, label %511

511:                                              ; preds = %499
  %512 = getelementptr inbounds %struct.bAnimContext, ptr %7, i64 0, i32 1
  %513 = load i16, ptr %512, align 8, !tbaa !317
  %514 = icmp eq i16 %513, 0
  br i1 %514, label %541, label %515

515:                                              ; preds = %511
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %8) #18
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %8, i8 0, i64 16, i1 false)
  %516 = load ptr, ptr %7, align 8, !tbaa !294
  %517 = sext i16 %513 to i32
  %518 = call i64 @ANIM_animdata_filter(ptr noundef nonnull %7, ptr noundef nonnull %8, i32 noundef 261, ptr noundef %516, i32 noundef %517) #18
  %519 = load ptr, ptr %8, align 8, !tbaa !33
  %520 = icmp eq ptr %519, null
  br i1 %520, label %540, label %521

521:                                              ; preds = %515
  %522 = xor i1 %14, true
  %523 = select i1 %522, i1 true, i1 %16
  br label %524

524:                                              ; preds = %521, %537
  %525 = phi ptr [ %519, %521 ], [ %538, %537 ]
  %526 = call ptr @ANIM_nla_mapping_get(ptr noundef nonnull %7, ptr noundef nonnull %525) #18
  %527 = getelementptr inbounds %struct.bAnimListElem, ptr %525, i64 0, i32 8
  %528 = load ptr, ptr %527, align 8, !tbaa !192
  %529 = load i32, ptr %504, align 4, !tbaa !189
  %530 = and i32 %529, 2
  %531 = icmp eq i32 %530, 0
  %532 = select i1 %531, i1 %523, i1 false
  br i1 %532, label %533, label %537

533:                                              ; preds = %524
  %534 = icmp eq ptr %526, null
  br i1 %534, label %536, label %535

535:                                              ; preds = %533
  call void @ANIM_nla_mapping_apply_fcurve(ptr noundef nonnull %526, ptr noundef %528, i8 noundef zeroext 0, i8 noundef zeroext 0) #18
  call fastcc void @posttrans_fcurve_clean(ptr noundef %528, i16 noundef signext %508)
  call void @ANIM_nla_mapping_apply_fcurve(ptr noundef nonnull %526, ptr noundef %528, i8 noundef zeroext 1, i8 noundef zeroext 0) #18
  br label %537

536:                                              ; preds = %533
  call fastcc void @posttrans_fcurve_clean(ptr noundef %528, i16 noundef signext %508)
  br label %537

537:                                              ; preds = %535, %536, %524
  %538 = load ptr, ptr %525, align 8, !tbaa !33
  %539 = icmp eq ptr %538, null
  br i1 %539, label %540, label %524, !llvm.loop !318

540:                                              ; preds = %537, %515
  call void @ANIM_animdata_freelist(ptr noundef nonnull %8) #18
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %8) #18
  br label %541

541:                                              ; preds = %540, %511
  br i1 %14, label %543, label %542

542:                                              ; preds = %541
  call void @ANIM_editkeyframes_refresh(ptr noundef nonnull %7) #18
  br label %543

543:                                              ; preds = %541, %542
  call void @llvm.lifetime.end.p0(i64 80, ptr nonnull %7) #18
  br label %773

544:                                              ; preds = %111
  call void @llvm.lifetime.start.p0(i64 80, ptr nonnull %9) #18
  %545 = call zeroext i8 @ANIM_animdata_get_context(ptr noundef %0, ptr noundef nonnull %9) #18
  %546 = icmp eq i8 %545, 0
  br i1 %546, label %791, label %547

547:                                              ; preds = %544
  %548 = getelementptr inbounds %struct.bAnimContext, ptr %9, i64 0, i32 1
  %549 = load i16, ptr %548, align 8, !tbaa !317
  %550 = icmp eq i16 %549, 0
  br i1 %550, label %565, label %551

551:                                              ; preds = %547
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %10) #18
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %10, i8 0, i64 16, i1 false)
  %552 = load ptr, ptr %9, align 8, !tbaa !294
  %553 = sext i16 %549 to i32
  %554 = call i64 @ANIM_animdata_filter(ptr noundef nonnull %9, ptr noundef nonnull %10, i32 noundef 257, ptr noundef %552, i32 noundef %553) #18
  %555 = load ptr, ptr %10, align 8, !tbaa !33
  %556 = icmp eq ptr %555, null
  br i1 %556, label %564, label %557

557:                                              ; preds = %551, %557
  %558 = phi ptr [ %562, %557 ], [ %555, %551 ]
  %559 = getelementptr inbounds %struct.bAnimListElem, ptr %558, i64 0, i32 2
  %560 = load ptr, ptr %559, align 8, !tbaa !319
  call void @BKE_nlatrack_sort_strips(ptr noundef %560) #18
  %561 = getelementptr inbounds %struct.NlaTrack, ptr %560, i64 0, i32 2
  call void @BKE_nlastrips_clear_metas(ptr noundef nonnull %561, i8 noundef zeroext 0, i8 noundef zeroext 1) #18
  %562 = load ptr, ptr %558, align 8, !tbaa !33
  %563 = icmp eq ptr %562, null
  br i1 %563, label %564, label %557, !llvm.loop !320

564:                                              ; preds = %557, %551
  call void @ANIM_animdata_freelist(ptr noundef nonnull %10) #18
  call void @ED_nla_postop_refresh(ptr noundef nonnull %9) #18
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %10) #18
  br label %565

565:                                              ; preds = %547, %564
  call void @llvm.lifetime.end.p0(i64 80, ptr nonnull %9) #18
  br label %773

566:                                              ; preds = %111
  %567 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 63
  %568 = load ptr, ptr %567, align 8, !tbaa !69
  %569 = icmp eq ptr %568, null
  br i1 %569, label %578, label %570

570:                                              ; preds = %566
  %571 = getelementptr inbounds %struct.Object, ptr %568, i64 0, i32 3
  %572 = load i16, ptr %571, align 8, !tbaa !50
  %573 = icmp eq i16 %572, 1
  br i1 %573, label %574, label %773

574:                                              ; preds = %570
  %575 = tail call ptr @BKE_editmesh_from_object(ptr noundef nonnull %568) #18
  %576 = load ptr, ptr %567, align 8, !tbaa !69
  %577 = tail call i32 @ED_mesh_mirror_spatial_table(ptr noundef %576, ptr noundef %575, ptr noundef null, i8 noundef zeroext 101) #18
  br label %773

578:                                              ; preds = %566
  %579 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 1
  %580 = load i32, ptr %579, align 4, !tbaa !24
  %581 = and i32 %580, 4
  %582 = icmp eq i32 %581, 0
  br i1 %582, label %677, label %583

583:                                              ; preds = %578
  %584 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 39
  %585 = load ptr, ptr %584, align 8, !tbaa !59
  %586 = icmp eq ptr %585, null
  br i1 %586, label %677, label %587

587:                                              ; preds = %583
  %588 = getelementptr inbounds %struct.Object, ptr %585, i64 0, i32 19
  %589 = load ptr, ptr %588, align 8, !tbaa !34
  %590 = and i32 %580, 262144
  %591 = icmp eq i32 %590, 0
  br i1 %591, label %600, label %592

592:                                              ; preds = %587
  %593 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 4
  %594 = load i32, ptr %593, align 8, !tbaa !264
  %595 = and i32 %594, 16
  %596 = icmp eq i32 %595, 0
  br i1 %596, label %600, label %597

597:                                              ; preds = %592
  %598 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 56
  %599 = load ptr, ptr %598, align 8, !tbaa !89
  tail call void @BKE_pose_where_is(ptr noundef %599, ptr noundef nonnull %585) #18
  br label %600

600:                                              ; preds = %597, %592, %587
  br i1 %14, label %614, label %601

601:                                              ; preds = %600
  %602 = load i32, ptr %1, align 8, !tbaa !161
  %603 = icmp eq i32 %602, 0
  br i1 %603, label %614, label %604

604:                                              ; preds = %601
  %605 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 32
  %606 = load i16, ptr %605, align 2, !tbaa !321
  %607 = tail call i32 @count_set_pose_transflags(ptr noundef nonnull %1, i16 noundef signext %606, ptr noundef nonnull %585)
  %608 = load i32, ptr %1, align 8, !tbaa !161
  %609 = icmp eq i32 %608, 1
  br i1 %609, label %610, label %614

610:                                              ; preds = %604
  %611 = getelementptr i8, ptr %585, i64 288
  %612 = load ptr, ptr %611, align 8, !tbaa !28
  %613 = tail call fastcc signext i16 @apply_targetless_ik(ptr %612)
  br label %656

614:                                              ; preds = %601, %600, %604
  %615 = getelementptr inbounds %struct.Object, ptr %585, i64 0, i32 18
  %616 = load ptr, ptr %615, align 8, !tbaa !28
  %617 = load ptr, ptr %616, align 8, !tbaa !33
  %618 = icmp eq ptr %617, null
  br i1 %618, label %656, label %619

619:                                              ; preds = %614, %653
  %620 = phi ptr [ %654, %653 ], [ %617, %614 ]
  %621 = getelementptr inbounds %struct.bPoseChannel, ptr %620, i64 0, i32 3
  %622 = load ptr, ptr %621, align 8, !tbaa !33
  %623 = icmp eq ptr %622, null
  br i1 %623, label %653, label %624

624:                                              ; preds = %619, %646
  %625 = phi ptr [ %647, %646 ], [ %622, %619 ]
  %626 = getelementptr inbounds %struct.bConstraint, ptr %625, i64 0, i32 3
  %627 = load i16, ptr %626, align 8, !tbaa !44
  %628 = icmp eq i16 %627, 3
  br i1 %628, label %629, label %646

629:                                              ; preds = %624
  %630 = getelementptr inbounds %struct.bConstraint, ptr %625, i64 0, i32 9
  %631 = load float, ptr %630, align 8, !tbaa !46
  %632 = fcmp fast une float %631, 0.000000e+00
  br i1 %632, label %633, label %646

633:                                              ; preds = %629
  %634 = getelementptr inbounds %struct.bConstraint, ptr %625, i64 0, i32 2
  %635 = load ptr, ptr %634, align 8, !tbaa !47
  %636 = load ptr, ptr %635, align 8, !tbaa !48
  %637 = icmp eq ptr %636, null
  br i1 %637, label %649, label %638

638:                                              ; preds = %633
  %639 = getelementptr inbounds %struct.Object, ptr %636, i64 0, i32 3
  %640 = load i16, ptr %639, align 8, !tbaa !50
  %641 = icmp eq i16 %640, 25
  br i1 %641, label %642, label %646

642:                                              ; preds = %638
  %643 = getelementptr inbounds %struct.bKinematicConstraint, ptr %635, i64 0, i32 5
  %644 = load i8, ptr %643, align 8, !tbaa !51
  %645 = icmp eq i8 %644, 0
  br i1 %645, label %649, label %646

646:                                              ; preds = %642, %638, %629, %624
  %647 = load ptr, ptr %625, align 8, !tbaa !33
  %648 = icmp eq ptr %647, null
  br i1 %648, label %653, label %624, !llvm.loop !52

649:                                              ; preds = %642, %633
  %650 = getelementptr inbounds %struct.bKinematicConstraint, ptr %635, i64 0, i32 2
  %651 = load i16, ptr %650, align 2, !tbaa !61
  %652 = and i16 %651, -5
  store i16 %652, ptr %650, align 2, !tbaa !61
  br label %653

653:                                              ; preds = %646, %619, %649
  %654 = load ptr, ptr %620, align 8, !tbaa !33
  %655 = icmp eq ptr %654, null
  br i1 %655, label %656, label %619, !llvm.loop !322

656:                                              ; preds = %653, %614, %610
  %657 = phi i16 [ %613, %610 ], [ 0, %614 ], [ 0, %653 ]
  %658 = load i32, ptr %1, align 8, !tbaa !161
  %659 = icmp eq i32 %658, 1
  br i1 %659, label %660, label %661

660:                                              ; preds = %656
  tail call fastcc void @pose_grab_with_ik_clear(ptr noundef nonnull %585)
  br label %661

661:                                              ; preds = %660, %656
  br i1 %14, label %670, label %662

662:                                              ; preds = %661
  %663 = load i32, ptr %1, align 8, !tbaa !161
  %664 = icmp eq i32 %663, 0
  br i1 %664, label %670, label %665

665:                                              ; preds = %662
  %666 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 56
  %667 = load ptr, ptr %666, align 8, !tbaa !89
  %668 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 52
  %669 = load ptr, ptr %668, align 8, !tbaa !323
  tail call void @autokeyframe_pose_cb_func(ptr noundef %0, ptr noundef %667, ptr noundef %669, ptr noundef nonnull %585, i32 noundef %663, i16 noundef signext %657)
  tail call void @DAG_id_tag_update(ptr noundef nonnull %585, i16 noundef signext 2) #18
  br label %773

670:                                              ; preds = %662, %661
  %671 = getelementptr inbounds %struct.bArmature, ptr %589, i64 0, i32 8
  %672 = load i32, ptr %671, align 8, !tbaa !70
  %673 = and i32 %672, 64
  %674 = icmp eq i32 %673, 0
  tail call void @DAG_id_tag_update(ptr noundef nonnull %585, i16 noundef signext 2) #18
  br i1 %674, label %773, label %675

675:                                              ; preds = %670
  %676 = getelementptr inbounds %struct.Object, ptr %585, i64 0, i32 103
  store i8 0, ptr %676, align 1, !tbaa !324
  br label %773

677:                                              ; preds = %583, %578
  %678 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 4
  %679 = load i32, ptr %678, align 8, !tbaa !264
  %680 = and i32 %679, 256
  %681 = icmp eq i32 %680, 0
  br i1 %681, label %682, label %773

682:                                              ; preds = %677
  %683 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 56
  %684 = load ptr, ptr %683, align 8, !tbaa !89
  %685 = getelementptr inbounds %struct.Scene, ptr %684, i64 0, i32 6
  %686 = load ptr, ptr %685, align 8, !tbaa !90
  %687 = icmp eq ptr %686, null
  br i1 %687, label %700, label %688

688:                                              ; preds = %682
  %689 = getelementptr inbounds %struct.Base, ptr %686, i64 0, i32 7
  %690 = load ptr, ptr %689, align 8, !tbaa !109
  %691 = icmp eq ptr %690, null
  br i1 %691, label %700, label %692

692:                                              ; preds = %688
  %693 = getelementptr inbounds %struct.Object, ptr %690, i64 0, i32 27
  %694 = load i32, ptr %693, align 8, !tbaa !325
  %695 = and i32 %694, 32
  %696 = icmp eq i32 %695, 0
  br i1 %696, label %700, label %697

697:                                              ; preds = %692
  %698 = tail call ptr @PE_get_current(ptr noundef nonnull %684, ptr noundef nonnull %690) #18
  %699 = icmp eq ptr %698, null
  br i1 %699, label %700, label %773

700:                                              ; preds = %697, %692, %688, %682
  %701 = load i32, ptr %17, align 8, !tbaa !5
  %702 = icmp sgt i32 %701, 0
  br i1 %702, label %703, label %773

703:                                              ; preds = %700
  %704 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 10
  %705 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 52
  br label %706

706:                                              ; preds = %703, %768
  %707 = phi i64 [ 0, %703 ], [ %769, %768 ]
  %708 = load ptr, ptr %704, align 8, !tbaa !19
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %11) #18
  %709 = getelementptr inbounds %struct.TransData, ptr %708, i64 %707, i32 11
  %710 = load ptr, ptr %709, align 8, !tbaa !326
  %711 = getelementptr inbounds %struct.TransData, ptr %708, i64 %707, i32 16
  %712 = load i32, ptr %711, align 8, !tbaa !20
  %713 = and i32 %712, 4
  %714 = icmp eq i32 %713, 0
  br i1 %714, label %715, label %767

715:                                              ; preds = %706
  %716 = and i32 %712, 2048
  %717 = icmp eq i32 %716, 0
  br i1 %717, label %718, label %768

718:                                              ; preds = %715
  %719 = load ptr, ptr %683, align 8, !tbaa !89
  call void @BKE_ptcache_ids_from_object(ptr noundef nonnull %11, ptr noundef %710, ptr noundef %719, i32 noundef 8) #18
  %720 = load ptr, ptr %11, align 8, !tbaa !33
  %721 = icmp eq ptr %720, null
  br i1 %721, label %736, label %722

722:                                              ; preds = %718, %733
  %723 = phi ptr [ %734, %733 ], [ %720, %718 ]
  %724 = getelementptr inbounds %struct.PTCacheID, ptr %723, i64 0, i32 5
  %725 = load i32, ptr %724, align 8, !tbaa !327
  %726 = icmp eq i32 %725, 1
  br i1 %726, label %733, label %727

727:                                              ; preds = %722
  %728 = getelementptr inbounds %struct.PTCacheID, ptr %723, i64 0, i32 25
  %729 = load ptr, ptr %728, align 8, !tbaa !328
  %730 = getelementptr inbounds %struct.PointCache, ptr %729, i64 0, i32 2
  %731 = load i32, ptr %730, align 8, !tbaa !329
  %732 = or i32 %731, 2
  store i32 %732, ptr %730, align 8, !tbaa !329
  br label %733

733:                                              ; preds = %722, %727
  %734 = load ptr, ptr %723, align 8, !tbaa !33
  %735 = icmp eq ptr %734, null
  br i1 %735, label %736, label %722, !llvm.loop !331

736:                                              ; preds = %733, %718
  call void @BLI_freelistN(ptr noundef nonnull %11) #18
  %737 = load ptr, ptr %683, align 8, !tbaa !89
  %738 = call i32 @BKE_ptcache_object_reset(ptr noundef %737, ptr noundef %710, i32 noundef 2) #18
  %739 = icmp eq i32 %738, 0
  br i1 %739, label %741, label %740

740:                                              ; preds = %736
  call void @DAG_id_tag_update(ptr noundef %710, i16 noundef signext 2) #18
  br label %741

741:                                              ; preds = %740, %736
  call void @DAG_id_tag_update(ptr noundef %710, i16 noundef signext 1) #18
  br i1 %14, label %746, label %742

742:                                              ; preds = %741
  %743 = load ptr, ptr %683, align 8, !tbaa !89
  %744 = load ptr, ptr %705, align 8, !tbaa !323
  %745 = load i32, ptr %1, align 8, !tbaa !161
  call void @autokeyframe_ob_cb_func(ptr noundef %0, ptr noundef %743, ptr noundef %744, ptr noundef %710, i32 noundef %745)
  br label %768

746:                                              ; preds = %741
  %747 = getelementptr inbounds %struct.Object, ptr %710, i64 0, i32 128
  %748 = load ptr, ptr %747, align 8, !tbaa !332
  %749 = icmp eq ptr %748, null
  br i1 %749, label %768, label %750

750:                                              ; preds = %746
  %751 = load ptr, ptr %683, align 8, !tbaa !89
  %752 = call fast nofpclass(nan inf) float @BKE_scene_frame_get(ptr noundef %751) #18
  %753 = load ptr, ptr %683, align 8, !tbaa !89
  %754 = getelementptr inbounds %struct.Scene, ptr %753, i64 0, i32 47
  %755 = load ptr, ptr %754, align 8, !tbaa !333
  %756 = call zeroext i8 @BKE_rigidbody_check_sim_running(ptr noundef %755, float noundef nofpclass(nan inf) %752) #18
  %757 = icmp eq i8 %756, 0
  br i1 %757, label %768, label %758

758:                                              ; preds = %750
  %759 = getelementptr inbounds %struct.TransData, ptr %708, i64 %707, i32 13
  %760 = load ptr, ptr %759, align 8, !tbaa !334
  %761 = getelementptr inbounds %struct.TransDataExtension, ptr %760, i64 0, i32 18
  %762 = getelementptr inbounds %struct.TransDataExtension, ptr %760, i64 0, i32 19
  %763 = getelementptr inbounds %struct.TransDataExtension, ptr %760, i64 0, i32 20
  %764 = getelementptr inbounds %struct.TransDataExtension, ptr %760, i64 0, i32 21
  %765 = getelementptr inbounds %struct.TransDataExtension, ptr %760, i64 0, i32 22
  %766 = load float, ptr %765, align 8, !tbaa !335
  call void @BKE_rigidbody_aftertrans_update(ptr noundef nonnull %710, ptr noundef nonnull %761, ptr noundef nonnull %762, ptr noundef nonnull %763, ptr noundef nonnull %764, float noundef nofpclass(nan inf) %766) #18
  br label %768

767:                                              ; preds = %706
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %11) #18
  br label %773

768:                                              ; preds = %715, %750, %758, %746, %742
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %11) #18
  %769 = add nuw nsw i64 %707, 1
  %770 = load i32, ptr %17, align 8, !tbaa !5
  %771 = sext i32 %770 to i64
  %772 = icmp slt i64 %769, %771
  br i1 %772, label %706, label %773, !llvm.loop !337

773:                                              ; preds = %768, %670, %700, %767, %565, %543, %496, %295, %289, %176, %172, %164, %665, %675, %113, %138, %128, %130, %137, %145, %297, %300, %574, %570, %677, %697, %214
  %774 = getelementptr i8, ptr %1, i64 1256
  %775 = load ptr, ptr %774, align 8, !tbaa !89
  %776 = getelementptr inbounds %struct.Scene, ptr %775, i64 0, i32 5
  %777 = load ptr, ptr %776, align 8, !tbaa !33
  %778 = icmp eq ptr %777, null
  br i1 %778, label %792, label %779

779:                                              ; preds = %773, %779
  %780 = phi ptr [ %787, %779 ], [ %777, %773 ]
  %781 = getelementptr inbounds %struct.Base, ptr %780, i64 0, i32 4
  %782 = load i32, ptr %781, align 8, !tbaa !338
  %783 = lshr i32 %782, 1
  %784 = and i32 %783, 1
  %785 = and i32 %782, -8495
  %786 = or i32 %784, %785
  store i32 %786, ptr %781, align 8, !tbaa !338
  %787 = load ptr, ptr %780, align 8, !tbaa !33
  %788 = icmp eq ptr %787, null
  br i1 %788, label %792, label %779, !llvm.loop !339

789:                                              ; preds = %301
  call void @llvm.lifetime.end.p0(i64 80, ptr nonnull %5) #18
  br label %792

790:                                              ; preds = %499
  call void @llvm.lifetime.end.p0(i64 80, ptr nonnull %7) #18
  br label %792

791:                                              ; preds = %544
  call void @llvm.lifetime.end.p0(i64 80, ptr nonnull %9) #18
  br label %792

792:                                              ; preds = %779, %773, %791, %790, %789, %2
  ret void
}

declare void @projectEdgeSlideData(ptr noundef, i8 noundef zeroext) local_unnamed_addr #7

declare void @freeEdgeSlideTempFaces(ptr noundef) local_unnamed_addr #7

declare i32 @ED_markers_post_apply_transform(ptr noundef, ptr noundef, i32 noundef, float noundef nofpclass(nan inf), i8 noundef zeroext) local_unnamed_addr #7

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @special_aftertrans_update__mask(ptr noundef %0, ptr nocapture noundef readonly %1) unnamed_addr #6 {
  %3 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 33
  %4 = load i8, ptr %3, align 8, !tbaa !251
  switch i8 %4, label %17 [
    i8 20, label %5
    i8 6, label %11
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 54
  %7 = load ptr, ptr %6, align 8, !tbaa !148
  %8 = getelementptr inbounds %struct.ScrArea, ptr %7, i64 0, i32 19
  %9 = load ptr, ptr %8, align 8, !tbaa !170
  %10 = tail call ptr @ED_space_clip_get_mask(ptr noundef %9) #18
  br label %17

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 54
  %13 = load ptr, ptr %12, align 8, !tbaa !148
  %14 = getelementptr inbounds %struct.ScrArea, ptr %13, i64 0, i32 19
  %15 = load ptr, ptr %14, align 8, !tbaa !170
  %16 = tail call ptr @ED_space_image_get_mask(ptr noundef %15) #18
  br label %17

17:                                               ; preds = %2, %11, %5
  %18 = phi ptr [ %10, %5 ], [ %16, %11 ], [ null, %2 ]
  %19 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 56
  %20 = load ptr, ptr %19, align 8, !tbaa !89
  %21 = getelementptr inbounds %struct.Scene, ptr %20, i64 0, i32 18
  %22 = load ptr, ptr %21, align 8, !tbaa !265
  %23 = icmp eq ptr %22, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %17
  tail call void @WM_event_add_notifier(ptr noundef %0, i32 noundef 358285312, ptr noundef %18) #18
  %25 = load ptr, ptr %19, align 8, !tbaa !89
  %26 = icmp eq ptr %25, null
  br i1 %26, label %35, label %27

27:                                               ; preds = %17, %24
  %28 = phi ptr [ %25, %24 ], [ %20, %17 ]
  %29 = getelementptr inbounds %struct.Scene, ptr %28, i64 0, i32 20
  %30 = load ptr, ptr %29, align 8, !tbaa !225
  %31 = getelementptr inbounds %struct.ToolSettings, ptr %30, i64 0, i32 21
  %32 = load i16, ptr %31, align 8, !tbaa !266
  %33 = and i16 %32, 1
  %34 = icmp eq i16 %33, 0
  br i1 %34, label %43, label %39

35:                                               ; preds = %24
  %36 = load i16, ptr getelementptr inbounds (%struct.UserDef, ptr @U, i64 0, i32 91), align 8, !tbaa !267
  %37 = and i16 %36, 1
  %38 = icmp eq i16 %37, 0
  tail call void @llvm.assume(i1 %38)
  br label %43

39:                                               ; preds = %27
  %40 = getelementptr inbounds %struct.Scene, ptr %28, i64 0, i32 22, i32 5
  %41 = load i32, ptr %40, align 8, !tbaa !224
  %42 = tail call zeroext i8 @ED_mask_layer_shape_auto_key_select(ptr noundef %18, i32 noundef %41) #18
  br label %43

43:                                               ; preds = %35, %39, %27
  ret void
}

declare void @ED_node_post_apply_transform(ptr noundef, ptr noundef) local_unnamed_addr #7

declare void @ED_node_link_insert(ptr noundef) local_unnamed_addr #7

declare zeroext i8 @ANIM_animdata_get_context(ptr noundef, ptr noundef) local_unnamed_addr #7

declare i64 @ANIM_animdata_filter(ptr noundef, ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #7

declare ptr @ANIM_nla_mapping_get(ptr noundef, ptr noundef) local_unnamed_addr #7

declare void @ANIM_nla_mapping_apply_fcurve(ptr noundef, ptr noundef, i8 noundef zeroext, i8 noundef zeroext) local_unnamed_addr #7

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @posttrans_fcurve_clean(ptr noundef %0, i16 noundef signext %1) unnamed_addr #6 {
  %3 = getelementptr inbounds %struct.FCurve, ptr %0, i64 0, i32 7
  %4 = load i32, ptr %3, align 8, !tbaa !196
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %103, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.FCurve, ptr %0, i64 0, i32 5
  %8 = load ptr, ptr %7, align 8, !tbaa !194
  %9 = icmp eq ptr %8, null
  br i1 %9, label %103, label %10

10:                                               ; preds = %6
  %11 = load ptr, ptr @MEM_callocN, align 8, !tbaa !33
  %12 = zext i32 %4 to i64
  %13 = shl nuw nsw i64 %12, 2
  %14 = tail call ptr %11(i64 noundef %13, ptr noundef nonnull @.str.10) #18
  %15 = load i32, ptr %3, align 8, !tbaa !196
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %101, label %17

17:                                               ; preds = %10
  %18 = load ptr, ptr %7, align 8, !tbaa !194
  %19 = zext i32 %15 to i64
  br label %20

20:                                               ; preds = %17, %45
  %21 = phi i64 [ 0, %17 ], [ %49, %45 ]
  %22 = phi i32 [ 0, %17 ], [ %48, %45 ]
  %23 = phi i32 [ 0, %17 ], [ %46, %45 ]
  %24 = getelementptr inbounds %struct.BezTriple, ptr %18, i64 %21, i32 8
  %25 = load i8, ptr %24, align 4, !tbaa !340
  %26 = and i8 %25, 1
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %28, label %38

28:                                               ; preds = %20
  %29 = getelementptr inbounds %struct.BezTriple, ptr %18, i64 %21, i32 7
  %30 = load i8, ptr %29, align 1, !tbaa !341
  %31 = and i8 %30, 1
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %33, label %38

33:                                               ; preds = %28
  %34 = getelementptr inbounds %struct.BezTriple, ptr %18, i64 %21, i32 9
  %35 = load i8, ptr %34, align 1, !tbaa !342
  %36 = and i8 %35, 1
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %45, label %38

38:                                               ; preds = %33, %28, %20
  %39 = getelementptr inbounds %struct.BezTriple, ptr %18, i64 %21, i32 0, i64 1
  %40 = load float, ptr %39, align 4, !tbaa !82
  %41 = sext i32 %23 to i64
  %42 = getelementptr inbounds float, ptr %14, i64 %41
  store float %40, ptr %42, align 4, !tbaa !82
  %43 = add nsw i32 %23, 1
  %44 = add nsw i32 %22, 1
  br label %45

45:                                               ; preds = %38, %33
  %46 = phi i32 [ %43, %38 ], [ %23, %33 ]
  %47 = phi i32 [ %44, %38 ], [ %22, %33 ]
  %48 = freeze i32 %47
  %49 = add nuw nsw i64 %21, 1
  %50 = icmp eq i64 %49, %19
  br i1 %50, label %51, label %20, !llvm.loop !343

51:                                               ; preds = %45
  %52 = icmp eq i32 %48, 0
  %53 = icmp eq i32 %48, %15
  %54 = or i1 %52, %53
  br i1 %54, label %101, label %55

55:                                               ; preds = %51
  %56 = add i32 %15, -1
  %57 = icmp sgt i32 %56, -1
  %58 = icmp sgt i32 %48, 0
  %59 = and i1 %57, %58
  br i1 %59, label %60, label %99

60:                                               ; preds = %55
  %61 = zext i32 %48 to i64
  br label %62

62:                                               ; preds = %60, %93
  %63 = phi i32 [ %94, %93 ], [ %56, %60 ]
  %64 = load ptr, ptr %7, align 8, !tbaa !194
  %65 = zext i32 %63 to i64
  %66 = getelementptr inbounds %struct.BezTriple, ptr %64, i64 %65, i32 8
  %67 = load i8, ptr %66, align 4, !tbaa !340
  %68 = and i8 %67, 1
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %70, label %93

70:                                               ; preds = %62
  %71 = getelementptr inbounds %struct.BezTriple, ptr %64, i64 %65, i32 7
  %72 = load i8, ptr %71, align 1, !tbaa !341
  %73 = and i8 %72, 1
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %75, label %93

75:                                               ; preds = %70
  %76 = getelementptr inbounds %struct.BezTriple, ptr %64, i64 %65, i32 9
  %77 = load i8, ptr %76, align 1, !tbaa !342
  %78 = and i8 %77, 1
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %96, label %93

80:                                               ; preds = %87, %96
  %81 = phi i64 [ %89, %87 ], [ 0, %96 ]
  %82 = getelementptr inbounds float, ptr %14, i64 %81
  %83 = load float, ptr %82, align 4, !tbaa !82
  %84 = fsub fast float %98, %83
  %85 = tail call fast float @llvm.fabs.f32(float %84)
  %86 = fcmp fast ult float %85, 0x3E80000000000000
  br i1 %86, label %92, label %87

87:                                               ; preds = %80
  %88 = fcmp fast uge float %98, %83
  %89 = add nuw nsw i64 %81, 1
  %90 = icmp ult i64 %89, %61
  %91 = select i1 %88, i1 %90, i1 false
  br i1 %91, label %80, label %93, !llvm.loop !344

92:                                               ; preds = %80
  tail call void @delete_fcurve_key(ptr noundef %0, i32 noundef %63, i8 noundef zeroext 0) #18
  br label %93

93:                                               ; preds = %87, %92, %75, %70, %62
  %94 = add nsw i32 %63, -1
  %95 = icmp sgt i32 %63, 0
  br i1 %95, label %62, label %99, !llvm.loop !345

96:                                               ; preds = %75
  %97 = getelementptr inbounds %struct.BezTriple, ptr %64, i64 %65, i32 0, i64 1
  %98 = load float, ptr %97, align 4, !tbaa !82
  br label %80

99:                                               ; preds = %93, %55
  %100 = trunc i16 %1 to i8
  tail call void @testhandles_fcurve(ptr noundef %0, i8 noundef zeroext %100) #18
  br label %101

101:                                              ; preds = %10, %99, %51
  %102 = load ptr, ptr @MEM_freeN, align 8, !tbaa !33
  tail call void %102(ptr noundef %14) #18
  br label %103

103:                                              ; preds = %2, %6, %101
  ret void
}

declare void @ANIM_animdata_freelist(ptr noundef) local_unnamed_addr #7

declare ptr @BKE_key_from_object(ptr noundef) local_unnamed_addr #7

declare void @DAG_id_tag_update(ptr noundef, i16 noundef signext) local_unnamed_addr #7

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @posttrans_action_clean(ptr noundef %0, ptr noundef %1) unnamed_addr #6 {
  %3 = alloca %struct.ListBase, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %3) #18
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %3, i8 0, i64 16, i1 false)
  %4 = call i64 @ANIM_animdata_filter(ptr noundef %0, ptr noundef nonnull %3, i32 noundef 257, ptr noundef %1, i32 noundef 1) #18
  %5 = load ptr, ptr %3, align 8, !tbaa !33
  %6 = icmp eq ptr %5, null
  br i1 %6, label %20, label %7

7:                                                ; preds = %2, %17
  %8 = phi ptr [ %18, %17 ], [ %5, %2 ]
  %9 = call ptr @ANIM_nla_mapping_get(ptr noundef %0, ptr noundef nonnull %8) #18
  %10 = icmp eq ptr %9, null
  %11 = getelementptr inbounds %struct.bAnimListElem, ptr %8, i64 0, i32 8
  %12 = load ptr, ptr %11, align 8, !tbaa !192
  br i1 %10, label %16, label %13

13:                                               ; preds = %7
  call void @ANIM_nla_mapping_apply_fcurve(ptr noundef nonnull %9, ptr noundef %12, i8 noundef zeroext 0, i8 noundef zeroext 1) #18
  %14 = load ptr, ptr %11, align 8, !tbaa !192
  call fastcc void @posttrans_fcurve_clean(ptr noundef %14, i16 noundef signext 0)
  %15 = load ptr, ptr %11, align 8, !tbaa !192
  call void @ANIM_nla_mapping_apply_fcurve(ptr noundef nonnull %9, ptr noundef %15, i8 noundef zeroext 1, i8 noundef zeroext 1) #18
  br label %17

16:                                               ; preds = %7
  call fastcc void @posttrans_fcurve_clean(ptr noundef %12, i16 noundef signext 0)
  br label %17

17:                                               ; preds = %16, %13
  %18 = load ptr, ptr %8, align 8, !tbaa !33
  %19 = icmp eq ptr %18, null
  br i1 %19, label %20, label %7, !llvm.loop !346

20:                                               ; preds = %17, %2
  call void @ANIM_animdata_freelist(ptr noundef nonnull %3) #18
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %3) #18
  ret void
}

declare ptr @ED_context_get_markers(ptr noundef) local_unnamed_addr #7

declare void @ANIM_editkeyframes_refresh(ptr noundef) local_unnamed_addr #7

declare void @BKE_nlatrack_sort_strips(ptr noundef) local_unnamed_addr #7

declare void @BKE_nlastrips_clear_metas(ptr noundef, i8 noundef zeroext, i8 noundef zeroext) local_unnamed_addr #7

declare void @ED_nla_postop_refresh(ptr noundef) local_unnamed_addr #7

declare ptr @BKE_editmesh_from_object(ptr noundef) local_unnamed_addr #7

declare i32 @ED_mesh_mirror_spatial_table(ptr noundef, ptr noundef, ptr noundef, i8 noundef zeroext) local_unnamed_addr #7

declare void @BKE_pose_where_is(ptr noundef, ptr noundef) local_unnamed_addr #7

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc signext i16 @apply_targetless_ik(ptr nocapture readonly %0) unnamed_addr #6 {
  %2 = alloca [256 x ptr], align 16
  %3 = alloca [4 x [4 x float]], align 16
  %4 = alloca [3 x [3 x float]], align 16
  %5 = alloca [3 x [3 x float]], align 16
  %6 = alloca [3 x [3 x float]], align 16
  %7 = alloca [3 x [3 x float]], align 16
  call void @llvm.lifetime.start.p0(i64 2048, ptr nonnull %2) #18
  %8 = load ptr, ptr %0, align 8, !tbaa !33
  %9 = icmp eq ptr %8, null
  br i1 %9, label %134, label %10

10:                                               ; preds = %1, %130
  %11 = phi ptr [ %132, %130 ], [ %8, %1 ]
  %12 = phi i16 [ %131, %130 ], [ 0, %1 ]
  %13 = getelementptr inbounds %struct.bPoseChannel, ptr %11, i64 0, i32 3
  %14 = load ptr, ptr %13, align 8, !tbaa !33
  %15 = icmp eq ptr %14, null
  br i1 %15, label %130, label %16

16:                                               ; preds = %10, %38
  %17 = phi ptr [ %39, %38 ], [ %14, %10 ]
  %18 = getelementptr inbounds %struct.bConstraint, ptr %17, i64 0, i32 3
  %19 = load i16, ptr %18, align 8, !tbaa !44
  %20 = icmp eq i16 %19, 3
  br i1 %20, label %21, label %38

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.bConstraint, ptr %17, i64 0, i32 9
  %23 = load float, ptr %22, align 8, !tbaa !46
  %24 = fcmp fast une float %23, 0.000000e+00
  br i1 %24, label %25, label %38

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.bConstraint, ptr %17, i64 0, i32 2
  %27 = load ptr, ptr %26, align 8, !tbaa !47
  %28 = load ptr, ptr %27, align 8, !tbaa !48
  %29 = icmp eq ptr %28, null
  br i1 %29, label %41, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %struct.Object, ptr %28, i64 0, i32 3
  %32 = load i16, ptr %31, align 8, !tbaa !50
  %33 = icmp eq i16 %32, 25
  br i1 %33, label %34, label %38

34:                                               ; preds = %30
  %35 = getelementptr inbounds %struct.bKinematicConstraint, ptr %27, i64 0, i32 5
  %36 = load i8, ptr %35, align 8, !tbaa !51
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %34, %30, %21, %16
  %39 = load ptr, ptr %17, align 8, !tbaa !33
  %40 = icmp eq ptr %39, null
  br i1 %40, label %130, label %16, !llvm.loop !52

41:                                               ; preds = %34, %25
  %42 = getelementptr inbounds %struct.bKinematicConstraint, ptr %27, i64 0, i32 2
  %43 = load i16, ptr %42, align 2, !tbaa !61
  %44 = zext i16 %43 to i32
  %45 = and i32 %44, 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %130, label %47

47:                                               ; preds = %41
  %48 = and i32 %44, 1
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %47
  %51 = getelementptr inbounds %struct.bPoseChannel, ptr %11, i64 0, i32 13
  %52 = load ptr, ptr %51, align 8, !tbaa !53
  br label %53

53:                                               ; preds = %47, %50
  %54 = phi ptr [ %52, %50 ], [ %11, %47 ]
  %55 = icmp eq ptr %54, null
  br i1 %55, label %127, label %56

56:                                               ; preds = %53
  %57 = getelementptr inbounds %struct.bKinematicConstraint, ptr %27, i64 0, i32 3
  %58 = load i16, ptr %57, align 4, !tbaa !63
  %59 = sext i16 %58 to i32
  %60 = add nsw i32 %59, -1
  %61 = call i32 @llvm.umin.i32(i32 %60, i32 255)
  %62 = add nuw nsw i32 %61, 1
  %63 = zext i32 %61 to i64
  br label %64

64:                                               ; preds = %56, %69
  %65 = phi i64 [ 0, %56 ], [ %70, %69 ]
  %66 = phi ptr [ %54, %56 ], [ %72, %69 ]
  %67 = getelementptr inbounds [256 x ptr], ptr %2, i64 0, i64 %65
  store ptr %66, ptr %67, align 8, !tbaa !33
  %68 = icmp eq i64 %65, %63
  br i1 %68, label %77, label %69

69:                                               ; preds = %64
  %70 = add nuw nsw i64 %65, 1
  %71 = getelementptr inbounds %struct.bPoseChannel, ptr %66, i64 0, i32 13
  %72 = load ptr, ptr %71, align 8, !tbaa !53
  %73 = icmp eq ptr %72, null
  br i1 %73, label %74, label %64, !llvm.loop !347

74:                                               ; preds = %69
  %75 = trunc i64 %70 to i32
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %127, label %77

77:                                               ; preds = %64, %74
  %78 = phi i32 [ %75, %74 ], [ %62, %64 ]
  %79 = zext i32 %78 to i64
  br label %80

80:                                               ; preds = %77, %123
  %81 = phi i64 [ %79, %77 ], [ %82, %123 ]
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %3) #18
  %82 = add nsw i64 %81, -1
  %83 = getelementptr inbounds [256 x ptr], ptr %2, i64 0, i64 %82
  %84 = load ptr, ptr %83, align 8, !tbaa !33
  %85 = getelementptr inbounds %struct.bPoseChannel, ptr %84, i64 0, i32 12
  %86 = load ptr, ptr %85, align 8, !tbaa !37
  %87 = getelementptr inbounds %struct.Bone, ptr %86, i64 0, i32 10
  %88 = load i32, ptr %87, align 8, !tbaa !41
  %89 = or i32 %88, 8
  store i32 %89, ptr %87, align 8, !tbaa !41
  %90 = getelementptr inbounds %struct.bPoseChannel, ptr %84, i64 0, i32 29
  call void @BKE_armature_mat_pose_to_bone(ptr noundef %84, ptr noundef nonnull %90, ptr noundef nonnull %3) #18
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %4) #18
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %5) #18
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %6) #18
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %7) #18
  call void @copy_m3_m4(ptr noundef nonnull %4, ptr noundef nonnull %3) #18
  %91 = getelementptr inbounds %struct.bPoseChannel, ptr %84, i64 0, i32 26
  %92 = load i16, ptr %91, align 4, !tbaa !348
  %93 = icmp sgt i16 %92, 0
  br i1 %93, label %94, label %96

94:                                               ; preds = %80
  %95 = getelementptr inbounds %struct.bPoseChannel, ptr %84, i64 0, i32 22
  call void @mat3_to_eulO(ptr noundef nonnull %95, i16 noundef signext %92, ptr noundef nonnull %4) #18
  br label %103

96:                                               ; preds = %80
  %97 = icmp eq i16 %92, -1
  br i1 %97, label %98, label %101

98:                                               ; preds = %96
  %99 = getelementptr inbounds %struct.bPoseChannel, ptr %84, i64 0, i32 24
  %100 = getelementptr inbounds %struct.bPoseChannel, ptr %84, i64 0, i32 25
  call void @mat3_to_axis_angle(ptr noundef nonnull %99, ptr noundef nonnull %100, ptr noundef nonnull %4) #18
  br label %103

101:                                              ; preds = %96
  %102 = getelementptr inbounds %struct.bPoseChannel, ptr %84, i64 0, i32 23
  call void @mat3_to_quat(ptr noundef nonnull %102, ptr noundef nonnull %4) #18
  br label %103

103:                                              ; preds = %98, %101, %94
  %104 = load i16, ptr %42, align 2, !tbaa !61
  %105 = and i16 %104, 16
  %106 = icmp eq i16 %105, 0
  br i1 %106, label %123, label %107

107:                                              ; preds = %103
  %108 = load i16, ptr %91, align 4, !tbaa !348
  %109 = icmp sgt i16 %108, 0
  br i1 %109, label %110, label %112

110:                                              ; preds = %107
  %111 = getelementptr inbounds %struct.bPoseChannel, ptr %84, i64 0, i32 22
  call void @eulO_to_mat3(ptr noundef nonnull %5, ptr noundef nonnull %111, i16 noundef signext %108) #18
  br label %120

112:                                              ; preds = %107
  %113 = icmp eq i16 %108, -1
  br i1 %113, label %114, label %118

114:                                              ; preds = %112
  %115 = getelementptr inbounds %struct.bPoseChannel, ptr %84, i64 0, i32 24
  %116 = getelementptr inbounds %struct.bPoseChannel, ptr %84, i64 0, i32 25
  %117 = load float, ptr %116, align 8, !tbaa !349
  call void @axis_angle_to_mat3(ptr noundef nonnull %5, ptr noundef nonnull %115, float noundef nofpclass(nan inf) %117) #18
  br label %120

118:                                              ; preds = %112
  %119 = getelementptr inbounds %struct.bPoseChannel, ptr %84, i64 0, i32 23
  call void @quat_to_mat3(ptr noundef nonnull %5, ptr noundef nonnull %119) #18
  br label %120

120:                                              ; preds = %114, %118, %110
  %121 = call zeroext i8 @invert_m3_m3(ptr noundef nonnull %6, ptr noundef nonnull %5) #18
  call void @mul_m3_m3m3(ptr noundef nonnull %7, ptr noundef nonnull %4, ptr noundef nonnull %6) #18
  %122 = getelementptr inbounds %struct.bPoseChannel, ptr %84, i64 0, i32 21
  call void @mat3_to_size(ptr noundef nonnull %122, ptr noundef nonnull %7) #18
  br label %123

123:                                              ; preds = %120, %103
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %7) #18
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %6) #18
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %5) #18
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %4) #18
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %3) #18
  %124 = icmp eq i64 %82, 0
  br i1 %124, label %125, label %80, !llvm.loop !350

125:                                              ; preds = %123
  %126 = load i16, ptr %42, align 2, !tbaa !61
  br label %127

127:                                              ; preds = %53, %125, %74
  %128 = phi i16 [ %126, %125 ], [ %43, %74 ], [ %43, %53 ]
  %129 = and i16 %128, -5
  store i16 %129, ptr %42, align 2, !tbaa !61
  br label %130

130:                                              ; preds = %38, %10, %41, %127
  %131 = phi i16 [ 1, %127 ], [ %12, %41 ], [ %12, %10 ], [ %12, %38 ]
  %132 = load ptr, ptr %11, align 8, !tbaa !33
  %133 = icmp eq ptr %132, null
  br i1 %133, label %134, label %10, !llvm.loop !351

134:                                              ; preds = %130, %1
  %135 = phi i16 [ 0, %1 ], [ %131, %130 ]
  call void @llvm.lifetime.end.p0(i64 2048, ptr nonnull %2) #18
  ret i16 %135
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @pose_grab_with_ik_clear(ptr nocapture noundef readonly %0) unnamed_addr #6 {
  %2 = getelementptr inbounds %struct.Object, ptr %0, i64 0, i32 18
  %3 = load ptr, ptr %2, align 8, !tbaa !28
  %4 = load ptr, ptr %3, align 8, !tbaa !33
  %5 = icmp eq ptr %4, null
  br i1 %5, label %55, label %9

6:                                                ; preds = %53, %9
  %7 = load ptr, ptr %10, align 8, !tbaa !33
  %8 = icmp eq ptr %7, null
  br i1 %8, label %55, label %9, !llvm.loop !352

9:                                                ; preds = %1, %6
  %10 = phi ptr [ %7, %6 ], [ %4, %1 ]
  %11 = getelementptr inbounds %struct.bPoseChannel, ptr %10, i64 0, i32 6
  %12 = load i16, ptr %11, align 2, !tbaa !353
  %13 = and i16 %12, -7169
  store i16 %13, ptr %11, align 2, !tbaa !353
  %14 = getelementptr inbounds %struct.bPoseChannel, ptr %10, i64 0, i32 9
  %15 = load i8, ptr %14, align 8, !tbaa !60
  %16 = and i8 %15, -10
  store i8 %16, ptr %14, align 8, !tbaa !60
  %17 = getelementptr inbounds %struct.bPoseChannel, ptr %10, i64 0, i32 3
  %18 = load ptr, ptr %17, align 8, !tbaa !354
  %19 = icmp eq ptr %18, null
  br i1 %19, label %6, label %20

20:                                               ; preds = %9, %53
  %21 = phi ptr [ %22, %53 ], [ %18, %9 ]
  %22 = load ptr, ptr %21, align 8, !tbaa !355
  %23 = getelementptr inbounds %struct.bConstraint, ptr %21, i64 0, i32 3
  %24 = load i16, ptr %23, align 8, !tbaa !44
  %25 = icmp eq i16 %24, 3
  br i1 %25, label %26, label %53

26:                                               ; preds = %20
  %27 = getelementptr inbounds %struct.bConstraint, ptr %21, i64 0, i32 2
  %28 = load ptr, ptr %27, align 8, !tbaa !47
  %29 = getelementptr inbounds %struct.bKinematicConstraint, ptr %28, i64 0, i32 2
  %30 = load i16, ptr %29, align 2, !tbaa !61
  %31 = and i16 %30, 8
  %32 = icmp eq i16 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %26
  %34 = load ptr, ptr %2, align 8, !tbaa !28
  tail call void @BIK_clear_data(ptr noundef %34) #18
  tail call void @BLI_remlink(ptr noundef nonnull %17, ptr noundef nonnull %21) #18
  %35 = load ptr, ptr @MEM_freeN, align 8, !tbaa !33
  %36 = load ptr, ptr %27, align 8, !tbaa !47
  tail call void %35(ptr noundef %36) #18
  %37 = load ptr, ptr @MEM_freeN, align 8, !tbaa !33
  tail call void %37(ptr noundef nonnull %21) #18
  br label %53

38:                                               ; preds = %26
  %39 = load i8, ptr %14, align 8, !tbaa !60
  %40 = or i8 %39, 1
  store i8 %40, ptr %14, align 8, !tbaa !60
  %41 = load ptr, ptr %28, align 8, !tbaa !48
  %42 = icmp eq ptr %41, null
  br i1 %42, label %51, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %struct.Object, ptr %41, i64 0, i32 3
  %45 = load i16, ptr %44, align 8, !tbaa !50
  %46 = icmp eq i16 %45, 25
  br i1 %46, label %47, label %53

47:                                               ; preds = %43
  %48 = getelementptr inbounds %struct.bKinematicConstraint, ptr %28, i64 0, i32 5
  %49 = load i8, ptr %48, align 8, !tbaa !51
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %51, label %53

51:                                               ; preds = %47, %38
  %52 = or i8 %39, 9
  store i8 %52, ptr %14, align 8, !tbaa !60
  br label %53

53:                                               ; preds = %20, %51, %47, %43, %33
  %54 = icmp eq ptr %22, null
  br i1 %54, label %6, label %20, !llvm.loop !356

55:                                               ; preds = %6, %1
  ret void
}

declare void @BKE_ptcache_ids_from_object(ptr noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #7

declare i32 @BKE_ptcache_object_reset(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #7

declare nofpclass(nan inf) float @BKE_scene_frame_get(ptr noundef) local_unnamed_addr #7

declare zeroext i8 @BKE_rigidbody_check_sim_running(ptr noundef, float noundef nofpclass(nan inf)) local_unnamed_addr #7

declare void @BKE_rigidbody_aftertrans_update(ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, float noundef nofpclass(nan inf)) local_unnamed_addr #7

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable
define dso_local i32 @special_transform_moving(ptr nocapture noundef readonly %0) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 33
  %3 = load i8, ptr %2, align 8, !tbaa !251
  switch i8 %3, label %5 [
    i8 8, label %22
    i8 2, label %4
  ]

4:                                                ; preds = %1
  br label %22

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 63
  %7 = load ptr, ptr %6, align 8, !tbaa !69
  %8 = icmp eq ptr %7, null
  br i1 %8, label %9, label %22

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 1
  %11 = load i32, ptr %10, align 4, !tbaa !24
  %12 = and i32 %11, 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %18, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 39
  %16 = load ptr, ptr %15, align 8, !tbaa !59
  %17 = icmp eq ptr %16, null
  br i1 %17, label %18, label %22

18:                                               ; preds = %14, %9
  %19 = and i32 %11, 9
  %20 = icmp ne i32 %19, 0
  %21 = zext i1 %20 to i32
  br label %22

22:                                               ; preds = %18, %5, %14, %1, %4
  %23 = phi i32 [ 8, %4 ], [ 4, %1 ], [ 2, %14 ], [ 2, %5 ], [ %21, %18 ]
  ret i32 %23
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @flushTransTracking(ptr nocapture noundef readonly %0) local_unnamed_addr #6 {
  %2 = alloca float, align 4
  %3 = alloca float, align 4
  %4 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 54
  %5 = load ptr, ptr %4, align 8, !tbaa !148
  %6 = getelementptr inbounds %struct.ScrArea, ptr %5, i64 0, i32 19
  %7 = load ptr, ptr %6, align 8, !tbaa !170
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %2) #18
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #18
  call void @ED_space_clip_get_aspect_dimension_aware(ptr noundef %7, ptr noundef nonnull %2, ptr noundef nonnull %3) #18
  %8 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 3
  %9 = load i16, ptr %8, align 4, !tbaa !181
  %10 = icmp eq i16 %9, 3
  br i1 %10, label %14, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 9
  %13 = load i32, ptr %12, align 8, !tbaa !5
  br label %95

14:                                               ; preds = %1
  %15 = load ptr, ptr %4, align 8, !tbaa !148
  %16 = getelementptr inbounds %struct.ScrArea, ptr %15, i64 0, i32 19
  %17 = load ptr, ptr %16, align 8, !tbaa !170
  %18 = call i32 @ED_space_clip_get_clip_frame_number(ptr noundef %17) #18
  %19 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 9
  %20 = load i32, ptr %19, align 8, !tbaa !5
  %21 = icmp sgt i32 %20, 0
  br i1 %21, label %22, label %404

22:                                               ; preds = %14
  %23 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 40
  br label %24

24:                                               ; preds = %90, %22
  %25 = phi i32 [ 0, %22 ], [ %92, %90 ]
  %26 = load ptr, ptr %23, align 8, !tbaa !66
  %27 = sext i32 %25 to i64
  %28 = getelementptr inbounds %struct.TransDataTracking, ptr %26, i64 %27
  %29 = load i32, ptr %28, align 8, !tbaa !357
  switch i32 %29, label %90 [
    i32 0, label %30
    i32 1, label %51
    i32 2, label %82
  ]

30:                                               ; preds = %24
  %31 = getelementptr inbounds %struct.TransDataTracking, ptr %26, i64 %27, i32 14
  %32 = load ptr, ptr %31, align 8, !tbaa !359
  %33 = call ptr @BKE_tracking_marker_get(ptr noundef %32, i32 noundef %18) #18
  %34 = getelementptr inbounds %struct.TransDataTracking, ptr %26, i64 %27, i32 1
  %35 = load i32, ptr %34, align 4, !tbaa !360
  %36 = getelementptr inbounds %struct.MovieTrackingMarker, ptr %33, i64 0, i32 5
  store i32 %35, ptr %36, align 4, !tbaa !361
  %37 = getelementptr inbounds %struct.MovieTrackingTrack, ptr %32, i64 0, i32 13
  %38 = load i32, ptr %37, align 8, !tbaa !281
  %39 = and i32 %38, 1
  %40 = add nsw i32 %39, %25
  %41 = getelementptr inbounds %struct.MovieTrackingTrack, ptr %32, i64 0, i32 14
  %42 = add nsw i32 %40, 4
  %43 = load <2 x i32>, ptr %41, align 4, !tbaa !27
  %44 = and <2 x i32> %43, <i32 1, i32 1>
  %45 = icmp eq <2 x i32> %44, zeroinitializer
  %46 = extractelement <2 x i1> %45, i64 0
  %47 = select i1 %46, i32 %40, i32 %42
  %48 = add nsw i32 %47, 2
  %49 = extractelement <2 x i1> %45, i64 1
  %50 = select i1 %49, i32 %47, i32 %48
  br label %90

51:                                               ; preds = %24
  %52 = getelementptr inbounds %struct.TransDataTracking, ptr %26, i64 %27, i32 14
  %53 = load ptr, ptr %52, align 8, !tbaa !359
  %54 = getelementptr inbounds %struct.MovieTrackingTrack, ptr %53, i64 0, i32 8
  %55 = load i32, ptr %54, align 8, !tbaa !362
  %56 = icmp sgt i32 %55, 1
  br i1 %56, label %57, label %90

57:                                               ; preds = %51
  %58 = getelementptr inbounds %struct.MovieTrackingTrack, ptr %53, i64 0, i32 10
  %59 = load ptr, ptr %58, align 8, !tbaa !363
  %60 = getelementptr inbounds %struct.TransDataTracking, ptr %26, i64 %27, i32 1
  %61 = zext i32 %55 to i64
  br label %62

62:                                               ; preds = %79, %57
  %63 = phi i64 [ 1, %57 ], [ %80, %79 ]
  %64 = getelementptr inbounds %struct.MovieTrackingMarker, ptr %59, i64 %63, i32 5
  %65 = load i32, ptr %64, align 4, !tbaa !361
  %66 = and i32 %65, 1
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %79

68:                                               ; preds = %62
  %69 = add nsw i64 %63, -1
  %70 = getelementptr inbounds %struct.MovieTrackingMarker, ptr %59, i64 %69, i32 5
  %71 = load i32, ptr %70, align 4, !tbaa !361
  %72 = and i32 %71, 1
  %73 = icmp ne i32 %72, 0
  %74 = and i32 %65, 12
  %75 = icmp eq i32 %74, 0
  %76 = or i1 %75, %73
  br i1 %76, label %79, label %77

77:                                               ; preds = %68
  %78 = load i32, ptr %60, align 4, !tbaa !360
  store i32 %78, ptr %64, align 4, !tbaa !361
  br label %79

79:                                               ; preds = %77, %68, %62
  %80 = add nuw nsw i64 %63, 1
  %81 = icmp eq i64 %80, %61
  br i1 %81, label %90, label %62, !llvm.loop !364

82:                                               ; preds = %24
  %83 = getelementptr inbounds %struct.TransDataTracking, ptr %26, i64 %27, i32 15
  %84 = load ptr, ptr %83, align 8, !tbaa !365
  %85 = call ptr @BKE_tracking_plane_marker_get(ptr noundef %84, i32 noundef %18) #18
  %86 = getelementptr inbounds %struct.TransDataTracking, ptr %26, i64 %27, i32 1
  %87 = load i32, ptr %86, align 4, !tbaa !360
  %88 = getelementptr inbounds %struct.MovieTrackingPlaneMarker, ptr %85, i64 0, i32 2
  store i32 %87, ptr %88, align 4, !tbaa !366
  %89 = add nsw i32 %25, 3
  br label %90

90:                                               ; preds = %79, %82, %51, %30, %24
  %91 = phi i32 [ %50, %30 ], [ %89, %82 ], [ %25, %24 ], [ %25, %51 ], [ %25, %79 ]
  %92 = add nsw i32 %91, 1
  %93 = load i32, ptr %19, align 8, !tbaa !5
  %94 = icmp slt i32 %92, %93
  br i1 %94, label %24, label %95, !llvm.loop !368

95:                                               ; preds = %90, %11
  %96 = phi i32 [ %13, %11 ], [ %93, %90 ]
  %97 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 9
  %98 = icmp sgt i32 %96, 0
  br i1 %98, label %99, label %404

99:                                               ; preds = %95
  %100 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 40
  %101 = load ptr, ptr %100, align 8, !tbaa !66
  %102 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 12
  %103 = load ptr, ptr %102, align 8, !tbaa !143
  %104 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 1
  br label %105

105:                                              ; preds = %99, %397
  %106 = phi i32 [ 0, %99 ], [ %399, %397 ]
  %107 = phi ptr [ %101, %99 ], [ %401, %397 ]
  %108 = phi ptr [ %103, %99 ], [ %400, %397 ]
  %109 = load i32, ptr %107, align 8, !tbaa !357
  switch i32 %109, label %397 [
    i32 0, label %110
    i32 1, label %369
    i32 2, label %386
  ]

110:                                              ; preds = %105
  %111 = load i32, ptr %0, align 8, !tbaa !161
  %112 = icmp eq i32 %111, 2
  br i1 %112, label %113, label %117

113:                                              ; preds = %110
  %114 = getelementptr inbounds %struct.TransDataTracking, ptr %107, i64 0, i32 2
  %115 = load i32, ptr %114, align 8, !tbaa !369
  %116 = icmp eq i32 %115, 4
  br i1 %116, label %397, label %117

117:                                              ; preds = %113, %110
  %118 = load float, ptr %2, align 4, !tbaa !82
  %119 = load <2 x float>, ptr %108, align 8, !tbaa !82
  %120 = load float, ptr %3, align 4, !tbaa !82
  %121 = insertelement <2 x float> poison, float %118, i64 0
  %122 = insertelement <2 x float> %121, float %120, i64 1
  %123 = fdiv fast <2 x float> %119, %122
  %124 = load i32, ptr %104, align 4, !tbaa !24
  %125 = and i32 %124, 16777216
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %344, label %127

127:                                              ; preds = %117
  switch i32 %111, label %344 [
    i32 3, label %128
    i32 1, label %132
  ]

128:                                              ; preds = %127
  %129 = getelementptr inbounds %struct.TransDataTracking, ptr %107, i64 0, i32 2
  %130 = load i32, ptr %129, align 8, !tbaa !369
  %131 = icmp eq i32 %130, 2
  br i1 %131, label %344, label %397

132:                                              ; preds = %127
  %133 = getelementptr inbounds %struct.TransDataTracking, ptr %107, i64 0, i32 2
  %134 = load i32, ptr %133, align 8, !tbaa !369
  %135 = icmp eq i32 %134, 1
  br i1 %135, label %136, label %344

136:                                              ; preds = %132
  %137 = getelementptr inbounds %struct.TransDataTracking, ptr %107, i64 0, i32 3
  %138 = load ptr, ptr %137, align 8, !tbaa !370
  %139 = icmp eq ptr %138, null
  br i1 %139, label %344, label %140

140:                                              ; preds = %136
  %141 = getelementptr inbounds %struct.TransDataTracking, ptr %107, i64 0, i32 8
  %142 = load ptr, ptr %141, align 8, !tbaa !371
  %143 = icmp eq ptr %142, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %140
  %145 = getelementptr inbounds %struct.TransDataTracking, ptr %107, i64 0, i32 9
  %146 = load i32, ptr %145, align 8, !tbaa !372
  br label %243

147:                                              ; preds = %140
  %148 = load ptr, ptr @MEM_callocN, align 8, !tbaa !33
  %149 = getelementptr inbounds %struct.TransDataTracking, ptr %107, i64 0, i32 9
  %150 = load i32, ptr %149, align 8, !tbaa !372
  %151 = sext i32 %150 to i64
  %152 = shl nsw i64 %151, 3
  %153 = call ptr %148(i64 noundef %152, ptr noundef nonnull @.str.6) #18
  store ptr %153, ptr %141, align 8, !tbaa !371
  %154 = load i32, ptr %149, align 8, !tbaa !372
  %155 = icmp sgt i32 %154, 0
  br i1 %155, label %156, label %243

156:                                              ; preds = %147
  %157 = getelementptr inbounds %struct.TransDataTracking, ptr %107, i64 0, i32 10
  %158 = load ptr, ptr %157, align 8, !tbaa !373
  %159 = zext i32 %154 to i64
  %160 = icmp ult i32 %154, 10
  br i1 %160, label %209, label %161

161:                                              ; preds = %156
  %162 = shl nuw nsw i64 %159, 3
  %163 = getelementptr i8, ptr %153, i64 %162
  %164 = getelementptr i8, ptr %158, i64 -56
  %165 = shl nuw nsw i64 %159, 6
  %166 = getelementptr i8, ptr %164, i64 %165
  %167 = icmp ult ptr %153, %166
  %168 = icmp ult ptr %158, %163
  %169 = and i1 %167, %168
  br i1 %169, label %209, label %170

170:                                              ; preds = %161
  %171 = and i64 %159, 4294967292
  br label %172

172:                                              ; preds = %172, %170
  %173 = phi i64 [ 0, %170 ], [ %205, %172 ]
  %174 = or i64 %173, 1
  %175 = or i64 %173, 2
  %176 = or i64 %173, 3
  %177 = getelementptr inbounds %struct.MovieTrackingMarker, ptr %158, i64 %173
  %178 = getelementptr inbounds %struct.MovieTrackingMarker, ptr %158, i64 %174
  %179 = getelementptr inbounds %struct.MovieTrackingMarker, ptr %158, i64 %175
  %180 = getelementptr inbounds %struct.MovieTrackingMarker, ptr %158, i64 %176
  %181 = load float, ptr %177, align 4, !tbaa !82, !alias.scope !374
  %182 = load float, ptr %178, align 4, !tbaa !82, !alias.scope !374
  %183 = insertelement <2 x float> poison, float %181, i64 0
  %184 = insertelement <2 x float> %183, float %182, i64 1
  %185 = load float, ptr %179, align 4, !tbaa !82, !alias.scope !374
  %186 = load float, ptr %180, align 4, !tbaa !82, !alias.scope !374
  %187 = insertelement <2 x float> poison, float %185, i64 0
  %188 = insertelement <2 x float> %187, float %186, i64 1
  %189 = getelementptr inbounds float, ptr %177, i64 1
  %190 = getelementptr inbounds float, ptr %178, i64 1
  %191 = getelementptr inbounds float, ptr %179, i64 1
  %192 = getelementptr inbounds float, ptr %180, i64 1
  %193 = load float, ptr %189, align 4, !tbaa !82, !alias.scope !374
  %194 = load float, ptr %190, align 4, !tbaa !82, !alias.scope !374
  %195 = insertelement <2 x float> poison, float %193, i64 0
  %196 = insertelement <2 x float> %195, float %194, i64 1
  %197 = load float, ptr %191, align 4, !tbaa !82, !alias.scope !374
  %198 = load float, ptr %192, align 4, !tbaa !82, !alias.scope !374
  %199 = insertelement <2 x float> poison, float %197, i64 0
  %200 = insertelement <2 x float> %199, float %198, i64 1
  %201 = getelementptr inbounds [2 x float], ptr %153, i64 %173
  %202 = getelementptr inbounds [2 x float], ptr %153, i64 %175
  %203 = shufflevector <2 x float> %184, <2 x float> %196, <4 x i32> <i32 0, i32 2, i32 1, i32 3>
  store <4 x float> %203, ptr %201, align 4, !tbaa !82
  %204 = shufflevector <2 x float> %188, <2 x float> %200, <4 x i32> <i32 0, i32 2, i32 1, i32 3>
  store <4 x float> %204, ptr %202, align 4, !tbaa !82
  %205 = add nuw i64 %173, 4
  %206 = icmp eq i64 %205, %171
  br i1 %206, label %207, label %172, !llvm.loop !377

207:                                              ; preds = %172
  %208 = icmp eq i64 %171, %159
  br i1 %208, label %243, label %209

209:                                              ; preds = %161, %156, %207
  %210 = phi i64 [ 0, %161 ], [ 0, %156 ], [ %171, %207 ]
  %211 = xor i64 %210, -1
  %212 = and i64 %159, 1
  %213 = icmp eq i64 %212, 0
  br i1 %213, label %222, label %214

214:                                              ; preds = %209
  %215 = getelementptr inbounds [2 x float], ptr %153, i64 %210
  %216 = getelementptr inbounds %struct.MovieTrackingMarker, ptr %158, i64 %210
  %217 = load float, ptr %216, align 4, !tbaa !82
  store float %217, ptr %215, align 4, !tbaa !82
  %218 = getelementptr inbounds float, ptr %216, i64 1
  %219 = load float, ptr %218, align 4, !tbaa !82
  %220 = getelementptr inbounds float, ptr %215, i64 1
  store float %219, ptr %220, align 4, !tbaa !82
  %221 = or i64 %210, 1
  br label %222

222:                                              ; preds = %214, %209
  %223 = phi i64 [ %210, %209 ], [ %221, %214 ]
  %224 = sub nsw i64 0, %159
  %225 = icmp eq i64 %211, %224
  br i1 %225, label %243, label %226

226:                                              ; preds = %222, %226
  %227 = phi i64 [ %241, %226 ], [ %223, %222 ]
  %228 = getelementptr inbounds [2 x float], ptr %153, i64 %227
  %229 = getelementptr inbounds %struct.MovieTrackingMarker, ptr %158, i64 %227
  %230 = load float, ptr %229, align 4, !tbaa !82
  store float %230, ptr %228, align 4, !tbaa !82
  %231 = getelementptr inbounds float, ptr %229, i64 1
  %232 = load float, ptr %231, align 4, !tbaa !82
  %233 = getelementptr inbounds float, ptr %228, i64 1
  store float %232, ptr %233, align 4, !tbaa !82
  %234 = add nuw nsw i64 %227, 1
  %235 = getelementptr inbounds [2 x float], ptr %153, i64 %234
  %236 = getelementptr inbounds %struct.MovieTrackingMarker, ptr %158, i64 %234
  %237 = load float, ptr %236, align 4, !tbaa !82
  store float %237, ptr %235, align 4, !tbaa !82
  %238 = getelementptr inbounds float, ptr %236, i64 1
  %239 = load float, ptr %238, align 4, !tbaa !82
  %240 = getelementptr inbounds float, ptr %235, i64 1
  store float %239, ptr %240, align 4, !tbaa !82
  %241 = add nuw nsw i64 %227, 2
  %242 = icmp eq i64 %241, %159
  br i1 %242, label %243, label %226, !llvm.loop !378

243:                                              ; preds = %222, %226, %207, %144, %147
  %244 = phi ptr [ %142, %144 ], [ %153, %147 ], [ %153, %207 ], [ %153, %226 ], [ %153, %222 ]
  %245 = phi i32 [ %146, %144 ], [ %154, %147 ], [ %154, %207 ], [ %154, %226 ], [ %154, %222 ]
  %246 = getelementptr inbounds %struct.TransDataTracking, ptr %107, i64 0, i32 5
  %247 = getelementptr inbounds %struct.TransDataTracking, ptr %107, i64 0, i32 6
  %248 = load <2 x float>, ptr %246, align 4, !tbaa !82
  %249 = load <2 x float>, ptr %247, align 4, !tbaa !82
  %250 = fsub fast <2 x float> %123, %249
  %251 = extractelement <2 x float> %250, i64 0
  %252 = fsub fast <2 x float> %123, %249
  %253 = extractelement <2 x float> %252, i64 1
  %254 = icmp sgt i32 %245, 0
  br i1 %254, label %255, label %338

255:                                              ; preds = %243
  %256 = getelementptr inbounds %struct.TransDataTracking, ptr %107, i64 0, i32 10
  %257 = load ptr, ptr %256, align 8, !tbaa !373
  %258 = zext i32 %245 to i64
  %259 = icmp ult i32 %245, 20
  br i1 %259, label %298, label %260

260:                                              ; preds = %255
  %261 = getelementptr i8, ptr %257, i64 -56
  %262 = shl nuw nsw i64 %258, 6
  %263 = getelementptr i8, ptr %261, i64 %262
  %264 = shl nuw nsw i64 %258, 3
  %265 = getelementptr i8, ptr %244, i64 %264
  %266 = icmp ult ptr %257, %265
  %267 = icmp ult ptr %244, %263
  %268 = and i1 %266, %267
  br i1 %268, label %298, label %269

269:                                              ; preds = %260
  %270 = and i64 %258, 4294967292
  %271 = shufflevector <2 x float> %250, <2 x float> undef, <4 x i32> zeroinitializer
  %272 = shufflevector <2 x float> %252, <2 x float> undef, <4 x i32> <i32 1, i32 1, i32 1, i32 1>
  br label %273

273:                                              ; preds = %273, %269
  %274 = phi i64 [ 0, %269 ], [ %294, %273 ]
  %275 = or i64 %274, 1
  %276 = or i64 %274, 2
  %277 = or i64 %274, 3
  %278 = getelementptr inbounds %struct.MovieTrackingMarker, ptr %257, i64 %274
  %279 = getelementptr inbounds %struct.MovieTrackingMarker, ptr %257, i64 %275
  %280 = getelementptr inbounds %struct.MovieTrackingMarker, ptr %257, i64 %276
  %281 = getelementptr inbounds %struct.MovieTrackingMarker, ptr %257, i64 %277
  %282 = getelementptr inbounds [2 x float], ptr %244, i64 %274
  %283 = load <8 x float>, ptr %282, align 4, !tbaa !82
  %284 = shufflevector <8 x float> %283, <8 x float> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %285 = shufflevector <8 x float> %283, <8 x float> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>
  %286 = fadd fast <4 x float> %271, %284
  %287 = extractelement <4 x float> %286, i64 0
  store float %287, ptr %278, align 4, !tbaa !82, !alias.scope !379, !noalias !382
  %288 = fadd fast <4 x float> %272, %285
  %289 = getelementptr inbounds float, ptr %278, i64 1
  %290 = extractelement <4 x float> %288, i64 0
  store float %290, ptr %289, align 4, !tbaa !82, !alias.scope !379, !noalias !382
  %291 = shufflevector <4 x float> %286, <4 x float> %288, <2 x i32> <i32 1, i32 5>
  store <2 x float> %291, ptr %279, align 4, !tbaa !82, !alias.scope !379, !noalias !382
  %292 = shufflevector <4 x float> %286, <4 x float> %288, <2 x i32> <i32 2, i32 6>
  store <2 x float> %292, ptr %280, align 4, !tbaa !82, !alias.scope !379, !noalias !382
  %293 = shufflevector <4 x float> %286, <4 x float> %288, <2 x i32> <i32 3, i32 7>
  store <2 x float> %293, ptr %281, align 4, !tbaa !82, !alias.scope !379, !noalias !382
  %294 = add nuw i64 %274, 4
  %295 = icmp eq i64 %294, %270
  br i1 %295, label %296, label %273, !llvm.loop !384

296:                                              ; preds = %273
  %297 = icmp eq i64 %270, %258
  br i1 %297, label %338, label %298

298:                                              ; preds = %260, %255, %296
  %299 = phi i64 [ 0, %260 ], [ 0, %255 ], [ %270, %296 ]
  %300 = xor i64 %299, -1
  %301 = and i64 %258, 1
  %302 = icmp eq i64 %301, 0
  br i1 %302, label %313, label %303

303:                                              ; preds = %298
  %304 = getelementptr inbounds %struct.MovieTrackingMarker, ptr %257, i64 %299
  %305 = getelementptr inbounds [2 x float], ptr %244, i64 %299
  %306 = load float, ptr %305, align 4, !tbaa !82
  %307 = fadd fast float %251, %306
  store float %307, ptr %304, align 4, !tbaa !82
  %308 = getelementptr inbounds float, ptr %305, i64 1
  %309 = load float, ptr %308, align 4, !tbaa !82
  %310 = fadd fast float %253, %309
  %311 = getelementptr inbounds float, ptr %304, i64 1
  store float %310, ptr %311, align 4, !tbaa !82
  %312 = or i64 %299, 1
  br label %313

313:                                              ; preds = %303, %298
  %314 = phi i64 [ %299, %298 ], [ %312, %303 ]
  %315 = sub nsw i64 0, %258
  %316 = icmp eq i64 %300, %315
  br i1 %316, label %338, label %317

317:                                              ; preds = %313, %317
  %318 = phi i64 [ %336, %317 ], [ %314, %313 ]
  %319 = getelementptr inbounds %struct.MovieTrackingMarker, ptr %257, i64 %318
  %320 = getelementptr inbounds [2 x float], ptr %244, i64 %318
  %321 = load float, ptr %320, align 4, !tbaa !82
  %322 = fadd fast float %251, %321
  store float %322, ptr %319, align 4, !tbaa !82
  %323 = getelementptr inbounds float, ptr %320, i64 1
  %324 = load float, ptr %323, align 4, !tbaa !82
  %325 = fadd fast float %253, %324
  %326 = getelementptr inbounds float, ptr %319, i64 1
  store float %325, ptr %326, align 4, !tbaa !82
  %327 = add nuw nsw i64 %318, 1
  %328 = getelementptr inbounds %struct.MovieTrackingMarker, ptr %257, i64 %327
  %329 = getelementptr inbounds [2 x float], ptr %244, i64 %327
  %330 = load float, ptr %329, align 4, !tbaa !82
  %331 = fadd fast float %251, %330
  store float %331, ptr %328, align 4, !tbaa !82
  %332 = getelementptr inbounds float, ptr %329, i64 1
  %333 = load float, ptr %332, align 4, !tbaa !82
  %334 = fadd fast float %253, %333
  %335 = getelementptr inbounds float, ptr %328, i64 1
  store float %334, ptr %335, align 4, !tbaa !82
  %336 = add nuw nsw i64 %318, 2
  %337 = icmp eq i64 %336, %258
  br i1 %337, label %338, label %317, !llvm.loop !385

338:                                              ; preds = %313, %317, %296, %243
  %339 = phi i32 [ 0, %243 ], [ %245, %296 ], [ %245, %317 ], [ %245, %313 ]
  %340 = getelementptr inbounds %struct.TransData2D, ptr %108, i64 0, i32 1
  %341 = load ptr, ptr %340, align 8, !tbaa !178
  %342 = fsub fast <2 x float> %248, %123
  %343 = fadd fast <2 x float> %342, %249
  store <2 x float> %343, ptr %341, align 4, !tbaa !82
  br label %344

344:                                              ; preds = %127, %128, %132, %136, %338, %117
  %345 = phi i32 [ %106, %128 ], [ %339, %338 ], [ %106, %136 ], [ %106, %132 ], [ %106, %117 ], [ %106, %127 ]
  %346 = getelementptr inbounds %struct.TransDataTracking, ptr %107, i64 0, i32 2
  %347 = load i32, ptr %346, align 8, !tbaa !369
  %348 = icmp eq i32 %347, 1
  %349 = getelementptr inbounds %struct.TransDataTracking, ptr %107, i64 0, i32 3
  %350 = load ptr, ptr %349, align 8, !tbaa !370
  br i1 %348, label %351, label %356

351:                                              ; preds = %344
  %352 = icmp eq ptr %350, null
  br i1 %352, label %353, label %397

353:                                              ; preds = %351
  %354 = getelementptr inbounds %struct.TransData2D, ptr %108, i64 0, i32 1
  %355 = load ptr, ptr %354, align 8, !tbaa !178
  store <2 x float> %123, ptr %355, align 4, !tbaa !82
  br label %397

356:                                              ; preds = %344
  %357 = getelementptr inbounds %struct.TransData2D, ptr %108, i64 0, i32 1
  %358 = load ptr, ptr %357, align 8, !tbaa !178
  store <2 x float> %123, ptr %358, align 4, !tbaa !82
  %359 = icmp eq ptr %350, null
  br i1 %359, label %397, label %360

360:                                              ; preds = %356
  %361 = getelementptr inbounds float, ptr %358, i64 1
  %362 = load float, ptr %350, align 4, !tbaa !82
  %363 = extractelement <2 x float> %123, i64 0
  %364 = fsub fast float %363, %362
  store float %364, ptr %358, align 4, !tbaa !82
  %365 = getelementptr inbounds float, ptr %350, i64 1
  %366 = load float, ptr %365, align 4, !tbaa !82
  %367 = extractelement <2 x float> %123, i64 1
  %368 = fsub fast float %367, %366
  store float %368, ptr %361, align 4, !tbaa !82
  br label %397

369:                                              ; preds = %105
  %370 = getelementptr inbounds %struct.TransDataTracking, ptr %107, i64 0, i32 11
  %371 = load ptr, ptr %370, align 8, !tbaa !386
  %372 = getelementptr inbounds %struct.TransDataTracking, ptr %107, i64 0, i32 13
  %373 = load i16, ptr %372, align 4, !tbaa !387
  %374 = sext i16 %373 to i64
  %375 = getelementptr inbounds float, ptr %371, i64 %374
  %376 = load float, ptr %375, align 4, !tbaa !82
  %377 = getelementptr inbounds [3 x float], ptr %108, i64 0, i64 1
  %378 = load float, ptr %377, align 4, !tbaa !82
  %379 = getelementptr inbounds %struct.TransDataTracking, ptr %107, i64 0, i32 12
  %380 = load float, ptr %379, align 8, !tbaa !388
  %381 = fmul fast float %380, %378
  %382 = fadd fast float %381, %376
  %383 = getelementptr inbounds %struct.TransData2D, ptr %108, i64 0, i32 1
  %384 = load ptr, ptr %383, align 8, !tbaa !178
  %385 = getelementptr inbounds float, ptr %384, i64 %374
  store float %382, ptr %385, align 4, !tbaa !82
  br label %397

386:                                              ; preds = %105
  %387 = load float, ptr %108, align 8, !tbaa !82
  %388 = load float, ptr %2, align 4, !tbaa !82
  %389 = fdiv fast float %387, %388
  %390 = getelementptr inbounds %struct.TransData2D, ptr %108, i64 0, i32 1
  %391 = load ptr, ptr %390, align 8, !tbaa !178
  store float %389, ptr %391, align 4, !tbaa !82
  %392 = getelementptr inbounds [3 x float], ptr %108, i64 0, i64 1
  %393 = load float, ptr %392, align 4, !tbaa !82
  %394 = load float, ptr %3, align 4, !tbaa !82
  %395 = fdiv fast float %393, %394
  %396 = getelementptr inbounds float, ptr %391, i64 1
  store float %395, ptr %396, align 4, !tbaa !82
  br label %397

397:                                              ; preds = %353, %113, %128, %356, %360, %351, %105, %386, %369
  %398 = phi i32 [ %106, %369 ], [ %106, %386 ], [ %106, %105 ], [ %106, %113 ], [ %106, %128 ], [ %345, %356 ], [ %345, %360 ], [ %345, %351 ], [ %345, %353 ]
  %399 = add nsw i32 %398, 1
  %400 = getelementptr inbounds %struct.TransData2D, ptr %108, i64 1
  %401 = getelementptr inbounds %struct.TransDataTracking, ptr %107, i64 1
  %402 = load i32, ptr %97, align 8, !tbaa !5
  %403 = icmp slt i32 %399, %402
  br i1 %403, label %105, label %404, !llvm.loop !389

404:                                              ; preds = %397, %14, %95
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #18
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %2) #18
  ret void
}

declare void @ED_space_clip_get_aspect_dimension_aware(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #7

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @flushTransMasking(ptr nocapture noundef readonly %0) local_unnamed_addr #6 {
  %2 = alloca [2 x float], align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #18
  %3 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 54
  %4 = load ptr, ptr %3, align 8, !tbaa !148
  %5 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 55
  %6 = load ptr, ptr %5, align 8, !tbaa !390
  %7 = getelementptr inbounds [2 x float], ptr %2, i64 0, i64 1
  call void @ED_mask_get_aspect(ptr noundef %4, ptr noundef %6, ptr noundef nonnull %2, ptr noundef nonnull %7) #18
  %8 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 9
  %9 = load i32, ptr %8, align 8, !tbaa !5
  %10 = icmp sgt i32 %9, 0
  br i1 %10, label %11, label %73

11:                                               ; preds = %1
  %12 = load float, ptr %7, align 4, !tbaa !82
  %13 = load float, ptr %2, align 4, !tbaa !82
  %14 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 40
  %15 = load ptr, ptr %14, align 8, !tbaa !66
  %16 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 12
  %17 = load ptr, ptr %16, align 8, !tbaa !143
  %18 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 1
  %19 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 3
  %20 = fdiv fast float 1.000000e+00, %13
  %21 = fdiv fast float 1.000000e+00, %12
  br label %22

22:                                               ; preds = %11, %67
  %23 = phi ptr [ %17, %11 ], [ %69, %67 ]
  %24 = phi ptr [ %15, %11 ], [ %70, %67 ]
  %25 = phi i32 [ 0, %11 ], [ %68, %67 ]
  %26 = load float, ptr %23, align 8, !tbaa !82
  %27 = fmul fast float %26, %20
  %28 = getelementptr inbounds %struct.TransData2D, ptr %23, i64 0, i32 1
  %29 = load ptr, ptr %28, align 8, !tbaa !178
  store float %27, ptr %29, align 4, !tbaa !82
  %30 = getelementptr inbounds [3 x float], ptr %23, i64 0, i64 1
  %31 = load float, ptr %30, align 4, !tbaa !82
  %32 = fmul fast float %31, %21
  %33 = getelementptr inbounds float, ptr %29, i64 1
  store float %32, ptr %33, align 4, !tbaa !82
  %34 = getelementptr inbounds %struct.TransDataMasking, ptr %24, i64 0, i32 6
  call void @mul_m3_v2(ptr noundef nonnull %34, ptr noundef nonnull %29) #18
  %35 = load i8, ptr %24, align 8, !tbaa !391
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %49, label %37

37:                                               ; preds = %22
  %38 = getelementptr inbounds %struct.TransDataMasking, ptr %24, i64 0, i32 4
  %39 = load ptr, ptr %38, align 8, !tbaa !393
  %40 = getelementptr inbounds %struct.TransDataMasking, ptr %24, i64 0, i32 8
  %41 = load i32, ptr %40, align 4, !tbaa !394
  %42 = load ptr, ptr %28, align 8, !tbaa !178
  %43 = load i32, ptr %18, align 4, !tbaa !24
  %44 = lshr i32 %43, 24
  %45 = trunc i32 %44 to i8
  %46 = and i8 %45, 1
  %47 = getelementptr inbounds %struct.TransDataMasking, ptr %24, i64 0, i32 2
  %48 = getelementptr inbounds %struct.TransDataMasking, ptr %24, i64 0, i32 3
  call void @BKE_mask_point_set_handle(ptr noundef %39, i32 noundef %41, ptr noundef %42, i8 noundef zeroext %46, ptr noundef nonnull %47, ptr noundef nonnull %48) #18
  br label %49

49:                                               ; preds = %37, %22
  %50 = load i16, ptr %19, align 4, !tbaa !181
  %51 = icmp eq i16 %50, 3
  br i1 %51, label %52, label %67

52:                                               ; preds = %49
  %53 = getelementptr inbounds %struct.TransDataMasking, ptr %24, i64 0, i32 8
  %54 = load i32, ptr %53, align 4, !tbaa !394
  switch i32 %54, label %67 [
    i32 2, label %55
    i32 3, label %61
  ]

55:                                               ; preds = %52
  %56 = getelementptr inbounds %struct.TransDataMasking, ptr %24, i64 0, i32 7
  %57 = load i8, ptr %56, align 8, !tbaa !395
  %58 = getelementptr inbounds %struct.TransDataMasking, ptr %24, i64 0, i32 4
  %59 = load ptr, ptr %58, align 8, !tbaa !393
  %60 = getelementptr inbounds %struct.BezTriple, ptr %59, i64 0, i32 5
  store i8 %57, ptr %60, align 1, !tbaa !396
  br label %67

61:                                               ; preds = %52
  %62 = getelementptr inbounds %struct.TransDataMasking, ptr %24, i64 0, i32 7
  %63 = load i8, ptr %62, align 8, !tbaa !395
  %64 = getelementptr inbounds %struct.TransDataMasking, ptr %24, i64 0, i32 4
  %65 = load ptr, ptr %64, align 8, !tbaa !393
  %66 = getelementptr inbounds %struct.BezTriple, ptr %65, i64 0, i32 6
  store i8 %63, ptr %66, align 2, !tbaa !399
  br label %67

67:                                               ; preds = %52, %49, %61, %55
  %68 = add nuw nsw i32 %25, 1
  %69 = getelementptr inbounds %struct.TransData2D, ptr %23, i64 1
  %70 = getelementptr inbounds %struct.TransDataMasking, ptr %24, i64 1
  %71 = load i32, ptr %8, align 8, !tbaa !5
  %72 = icmp slt i32 %68, %71
  br i1 %72, label %22, label %73, !llvm.loop !400

73:                                               ; preds = %67, %1
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #18
  ret void
}

declare void @ED_mask_get_aspect(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #7

declare void @mul_m3_v2(ptr noundef, ptr noundef) local_unnamed_addr #7

declare void @BKE_mask_point_set_handle(ptr noundef, i32 noundef, ptr noundef, i8 noundef zeroext, ptr noundef, ptr noundef) local_unnamed_addr #7

; Function Attrs: nofree norecurse nosync nounwind sspstrong memory(readwrite, inaccessiblemem: none) uwtable
define dso_local void @flushTransPaintCurve(ptr nocapture noundef readonly %0) local_unnamed_addr #5 {
  %2 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 9
  %3 = load i32, ptr %2, align 8, !tbaa !5
  %4 = icmp sgt i32 %3, 0
  br i1 %4, label %5, label %56

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 40
  %7 = load ptr, ptr %6, align 8, !tbaa !66
  %8 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 12
  %9 = load ptr, ptr %8, align 8, !tbaa !143
  %10 = and i32 %3, 1
  %11 = icmp eq i32 %3, 1
  br i1 %11, label %42, label %12

12:                                               ; preds = %5
  %13 = and i32 %3, -2
  br label %14

14:                                               ; preds = %14, %12
  %15 = phi ptr [ %7, %12 ], [ %38, %14 ]
  %16 = phi ptr [ %9, %12 ], [ %39, %14 ]
  %17 = phi i32 [ 0, %12 ], [ %40, %14 ]
  %18 = load ptr, ptr %15, align 8, !tbaa !401
  %19 = getelementptr inbounds %struct.TransDataPaintCurve, ptr %15, i64 0, i32 1
  %20 = load i8, ptr %19, align 8, !tbaa !403
  %21 = zext i8 %20 to i64
  %22 = getelementptr inbounds [3 x [3 x float]], ptr %18, i64 0, i64 %21
  %23 = load float, ptr %16, align 4, !tbaa !82
  store float %23, ptr %22, align 4, !tbaa !82
  %24 = getelementptr inbounds float, ptr %16, i64 1
  %25 = load float, ptr %24, align 4, !tbaa !82
  %26 = getelementptr inbounds float, ptr %22, i64 1
  store float %25, ptr %26, align 4, !tbaa !82
  %27 = getelementptr inbounds %struct.TransDataPaintCurve, ptr %15, i64 1
  %28 = getelementptr inbounds %struct.TransData2D, ptr %16, i64 1
  %29 = load ptr, ptr %27, align 8, !tbaa !401
  %30 = getelementptr inbounds %struct.TransDataPaintCurve, ptr %15, i64 1, i32 1
  %31 = load i8, ptr %30, align 8, !tbaa !403
  %32 = zext i8 %31 to i64
  %33 = getelementptr inbounds [3 x [3 x float]], ptr %29, i64 0, i64 %32
  %34 = load float, ptr %28, align 4, !tbaa !82
  store float %34, ptr %33, align 4, !tbaa !82
  %35 = getelementptr inbounds %struct.TransData2D, ptr %16, i64 1, i32 0, i64 1
  %36 = load float, ptr %35, align 4, !tbaa !82
  %37 = getelementptr inbounds float, ptr %33, i64 1
  store float %36, ptr %37, align 4, !tbaa !82
  %38 = getelementptr inbounds %struct.TransDataPaintCurve, ptr %15, i64 2
  %39 = getelementptr inbounds %struct.TransData2D, ptr %16, i64 2
  %40 = add i32 %17, 2
  %41 = icmp eq i32 %40, %13
  br i1 %41, label %42, label %14, !llvm.loop !404

42:                                               ; preds = %14, %5
  %43 = phi ptr [ %7, %5 ], [ %38, %14 ]
  %44 = phi ptr [ %9, %5 ], [ %39, %14 ]
  %45 = icmp eq i32 %10, 0
  br i1 %45, label %56, label %46

46:                                               ; preds = %42
  %47 = load ptr, ptr %43, align 8, !tbaa !401
  %48 = getelementptr inbounds %struct.TransDataPaintCurve, ptr %43, i64 0, i32 1
  %49 = load i8, ptr %48, align 8, !tbaa !403
  %50 = zext i8 %49 to i64
  %51 = getelementptr inbounds [3 x [3 x float]], ptr %47, i64 0, i64 %50
  %52 = load float, ptr %44, align 4, !tbaa !82
  store float %52, ptr %51, align 4, !tbaa !82
  %53 = getelementptr inbounds float, ptr %44, i64 1
  %54 = load float, ptr %53, align 4, !tbaa !82
  %55 = getelementptr inbounds float, ptr %51, i64 1
  store float %54, ptr %55, align 4, !tbaa !82
  br label %56

56:                                               ; preds = %46, %42, %1
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @createTransData(ptr noundef %0, ptr noundef %1) local_unnamed_addr #6 {
  %3 = alloca float, align 4
  %4 = alloca float, align 4
  %5 = alloca %struct.bAnimContext, align 8
  %6 = alloca %struct.ListBase, align 8
  %7 = alloca [3 x [3 x float]], align 16
  %8 = alloca [3 x [3 x float]], align 16
  %9 = alloca float, align 4
  %10 = alloca float, align 4
  %11 = alloca float, align 4
  %12 = alloca float, align 4
  %13 = alloca float, align 4
  %14 = alloca float, align 4
  %15 = alloca %struct.bAnimContext, align 8
  %16 = alloca %struct.ListBase, align 8
  %17 = alloca float, align 4
  %18 = alloca float, align 4
  %19 = alloca %struct.bAnimContext, align 8
  %20 = alloca %struct.ListBase, align 8
  %21 = alloca float, align 4
  %22 = alloca float, align 4
  %23 = alloca %struct.TransData, align 8
  %24 = alloca %struct.BMIter, align 8
  %25 = alloca [3 x [3 x float]], align 16
  %26 = alloca [3 x [3 x float]], align 16
  %27 = alloca ptr, align 8
  %28 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 56
  %29 = load ptr, ptr %28, align 8, !tbaa !89
  %30 = getelementptr inbounds %struct.Scene, ptr %29, i64 0, i32 6
  %31 = load ptr, ptr %30, align 8, !tbaa !90
  %32 = icmp eq ptr %31, null
  br i1 %32, label %33, label %38

33:                                               ; preds = %2
  %34 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 4
  %35 = load i32, ptr %34, align 8, !tbaa !264
  %36 = and i32 %35, 1
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %143, label %45

38:                                               ; preds = %2
  %39 = getelementptr inbounds %struct.Base, ptr %31, i64 0, i32 7
  %40 = load ptr, ptr %39, align 8, !tbaa !109
  %41 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 4
  %42 = load i32, ptr %41, align 8, !tbaa !264
  %43 = and i32 %42, 1
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %143, label %49

45:                                               ; preds = %33
  %46 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 1
  %47 = load i32, ptr %46, align 4, !tbaa !24
  %48 = or i32 %47, 8
  store i32 %48, ptr %46, align 4, !tbaa !24
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %27) #18
  br label %54

49:                                               ; preds = %38
  %50 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 1
  %51 = load i32, ptr %50, align 4, !tbaa !24
  %52 = or i32 %51, 8
  store i32 %52, ptr %50, align 4, !tbaa !24
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %27) #18
  %53 = icmp eq ptr %40, null
  br i1 %53, label %54, label %56

54:                                               ; preds = %45, %49
  %55 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 9
  store i32 0, ptr %55, align 8, !tbaa !5
  br label %142

56:                                               ; preds = %49
  %57 = getelementptr inbounds %struct.Object, ptr %40, i64 0, i32 19
  %58 = load ptr, ptr %57, align 8, !tbaa !34
  %59 = icmp eq ptr %58, null
  br i1 %59, label %63, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %struct.ID, ptr %58, i64 0, i32 4
  %62 = load i16, ptr %61, align 8, !tbaa !58
  switch i16 %62, label %63 [
    i16 17741, label %67
    i16 21827, label %67
    i16 16973, label %67
  ]

63:                                               ; preds = %60, %56
  %64 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 60
  %65 = load ptr, ptr %64, align 8, !tbaa !405
  tail call void @BKE_report(ptr noundef %65, i32 noundef 32, ptr noundef nonnull @.str.11) #18
  %66 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 9
  store i32 0, ptr %66, align 8, !tbaa !5
  br label %142

67:                                               ; preds = %60, %60, %60
  %68 = tail call zeroext i8 @BKE_object_obdata_is_libdata(ptr noundef nonnull %40) #18
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %74, label %70

70:                                               ; preds = %67
  %71 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 60
  %72 = load ptr, ptr %71, align 8, !tbaa !405
  tail call void @BKE_report(ptr noundef %72, i32 noundef 32, ptr noundef nonnull @.str.12) #18
  %73 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 9
  store i32 0, ptr %73, align 8, !tbaa !5
  br label %142

74:                                               ; preds = %67
  %75 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 9
  store i32 1, ptr %75, align 8, !tbaa !5
  %76 = load ptr, ptr @MEM_callocN, align 8, !tbaa !33
  %77 = tail call ptr %76(i64 noundef 224, ptr noundef nonnull @.str.13) #18
  %78 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 10
  store ptr %77, ptr %78, align 8, !tbaa !19
  %79 = load ptr, ptr @MEM_callocN, align 8, !tbaa !33
  %80 = tail call ptr %79(i64 noundef 384, ptr noundef nonnull @.str.13) #18
  %81 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 11
  store ptr %80, ptr %81, align 8, !tbaa !406
  %82 = getelementptr inbounds %struct.TransData, ptr %77, i64 0, i32 13
  store ptr %80, ptr %82, align 8, !tbaa !334
  %83 = getelementptr inbounds %struct.TransData, ptr %77, i64 0, i32 16
  store i32 1, ptr %83, align 8, !tbaa !20
  %84 = getelementptr inbounds %struct.TransData, ptr %77, i64 0, i32 7
  %85 = getelementptr inbounds %struct.Object, ptr %40, i64 0, i32 47
  %86 = getelementptr inbounds %struct.Object, ptr %40, i64 0, i32 47, i64 3
  %87 = load float, ptr %86, align 4, !tbaa !82
  store float %87, ptr %84, align 4, !tbaa !82
  %88 = getelementptr inbounds %struct.Object, ptr %40, i64 0, i32 47, i64 3, i64 1
  %89 = load float, ptr %88, align 4, !tbaa !82
  %90 = getelementptr inbounds %struct.TransData, ptr %77, i64 0, i32 7, i64 1
  store float %89, ptr %90, align 4, !tbaa !82
  %91 = getelementptr inbounds %struct.Object, ptr %40, i64 0, i32 47, i64 3, i64 2
  %92 = load float, ptr %91, align 4, !tbaa !82
  %93 = getelementptr inbounds %struct.TransData, ptr %77, i64 0, i32 7, i64 2
  store float %92, ptr %93, align 4, !tbaa !82
  %94 = getelementptr inbounds %struct.TransData, ptr %77, i64 0, i32 11
  store ptr %40, ptr %94, align 8, !tbaa !326
  %95 = getelementptr inbounds %struct.TransData, ptr %77, i64 0, i32 8
  tail call void @copy_m3_m4(ptr noundef nonnull %95, ptr noundef nonnull %85) #18
  %96 = getelementptr inbounds %struct.TransData, ptr %77, i64 0, i32 10
  tail call void @copy_m3_m4(ptr noundef nonnull %96, ptr noundef nonnull %85) #18
  tail call void @normalize_m3(ptr noundef nonnull %96) #18
  %97 = getelementptr inbounds %struct.TransData, ptr %77, i64 0, i32 9
  tail call void @pseudoinverse_m3_m3(ptr noundef nonnull %97, ptr noundef nonnull %95, float noundef nofpclass(nan inf) 0x3E45798EE0000000) #18
  %98 = getelementptr inbounds %struct.TransData, ptr %77, i64 0, i32 3
  %99 = load ptr, ptr %82, align 8, !tbaa !334
  %100 = getelementptr inbounds %struct.TransDataExtension, ptr %99, i64 0, i32 11
  %101 = getelementptr inbounds %struct.TransDataExtension, ptr %99, i64 0, i32 3
  %102 = call i32 @BKE_object_obdata_texspace_get(ptr noundef nonnull %40, ptr noundef nonnull %27, ptr noundef nonnull %98, ptr noundef nonnull %100, ptr noundef nonnull %101) #18
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %111, label %104

104:                                              ; preds = %74
  %105 = getelementptr inbounds %struct.Object, ptr %40, i64 0, i32 86
  %106 = load i16, ptr %105, align 4, !tbaa !407
  %107 = or i16 %106, 4
  store i16 %107, ptr %105, align 4, !tbaa !407
  %108 = load ptr, ptr %27, align 8, !tbaa !33
  %109 = load i16, ptr %108, align 2, !tbaa !58
  %110 = and i16 %109, -2
  store i16 %110, ptr %108, align 2, !tbaa !58
  br label %111

111:                                              ; preds = %104, %74
  %112 = getelementptr inbounds %struct.TransData, ptr %77, i64 0, i32 4
  %113 = load ptr, ptr %98, align 8, !tbaa !182
  %114 = load float, ptr %113, align 4, !tbaa !82
  store float %114, ptr %112, align 4, !tbaa !82
  %115 = getelementptr inbounds float, ptr %113, i64 1
  %116 = load float, ptr %115, align 4, !tbaa !82
  %117 = getelementptr inbounds %struct.TransData, ptr %77, i64 0, i32 4, i64 1
  store float %116, ptr %117, align 4, !tbaa !82
  %118 = getelementptr inbounds float, ptr %113, i64 2
  %119 = load float, ptr %118, align 4, !tbaa !82
  %120 = getelementptr inbounds %struct.TransData, ptr %77, i64 0, i32 4, i64 2
  store float %119, ptr %120, align 4, !tbaa !82
  %121 = load ptr, ptr %82, align 8, !tbaa !334
  %122 = getelementptr inbounds %struct.TransDataExtension, ptr %121, i64 0, i32 4
  %123 = getelementptr inbounds %struct.TransDataExtension, ptr %121, i64 0, i32 3
  %124 = load ptr, ptr %123, align 8, !tbaa !408
  %125 = load float, ptr %124, align 4, !tbaa !82
  store float %125, ptr %122, align 4, !tbaa !82
  %126 = getelementptr inbounds float, ptr %124, i64 1
  %127 = load float, ptr %126, align 4, !tbaa !82
  %128 = getelementptr inbounds %struct.TransDataExtension, ptr %121, i64 0, i32 4, i64 1
  store float %127, ptr %128, align 4, !tbaa !82
  %129 = getelementptr inbounds float, ptr %124, i64 2
  %130 = load float, ptr %129, align 4, !tbaa !82
  %131 = getelementptr inbounds %struct.TransDataExtension, ptr %121, i64 0, i32 4, i64 2
  store float %130, ptr %131, align 4, !tbaa !82
  %132 = getelementptr inbounds %struct.TransDataExtension, ptr %121, i64 0, i32 12
  %133 = getelementptr inbounds %struct.TransDataExtension, ptr %121, i64 0, i32 11
  %134 = load ptr, ptr %133, align 8, !tbaa !409
  %135 = load float, ptr %134, align 4, !tbaa !82
  store float %135, ptr %132, align 4, !tbaa !82
  %136 = getelementptr inbounds float, ptr %134, i64 1
  %137 = load float, ptr %136, align 4, !tbaa !82
  %138 = getelementptr inbounds %struct.TransDataExtension, ptr %121, i64 0, i32 12, i64 1
  store float %137, ptr %138, align 4, !tbaa !82
  %139 = getelementptr inbounds float, ptr %134, i64 2
  %140 = load float, ptr %139, align 4, !tbaa !82
  %141 = getelementptr inbounds %struct.TransDataExtension, ptr %121, i64 0, i32 12, i64 2
  store float %140, ptr %141, align 4, !tbaa !82
  br label %142

142:                                              ; preds = %54, %63, %70, %111
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %27) #18
  br label %2896

143:                                              ; preds = %38, %33
  %144 = phi i32 [ %42, %38 ], [ %35, %33 ]
  %145 = phi ptr [ %41, %38 ], [ %34, %33 ]
  %146 = phi ptr [ %40, %38 ], [ null, %33 ]
  %147 = and i32 %144, 2
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %350, label %149

149:                                              ; preds = %143
  %150 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 11
  store ptr null, ptr %150, align 8, !tbaa !406
  %151 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 1
  %152 = load i32, ptr %151, align 4, !tbaa !24
  %153 = or i32 %152, 2
  store i32 %153, ptr %151, align 4, !tbaa !24
  %154 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 63
  %155 = load ptr, ptr %154, align 8, !tbaa !69
  %156 = tail call ptr @BKE_editmesh_from_object(ptr noundef %155) #18
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %24) #18
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %25) #18
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %26) #18
  %157 = load i32, ptr %151, align 4, !tbaa !24
  %158 = and i32 %157, 2048
  %159 = load ptr, ptr %156, align 8, !tbaa !253
  %160 = getelementptr inbounds %struct.BMIter, ptr %24, i64 0, i32 4
  store i8 2, ptr %160, align 4, !tbaa !410
  %161 = getelementptr inbounds %struct.BMIter, ptr %24, i64 0, i32 1
  store ptr @bmiter__elem_of_mesh_begin, ptr %161, align 8, !tbaa !412
  %162 = getelementptr inbounds %struct.BMIter, ptr %24, i64 0, i32 2
  store ptr @bmiter__elem_of_mesh_step, ptr %162, align 8, !tbaa !413
  %163 = getelementptr inbounds %struct.BMesh, ptr %159, i64 0, i32 10
  %164 = load ptr, ptr %163, align 8, !tbaa !414
  store ptr %164, ptr %24, align 8, !tbaa !51
  call void @bmiter__elem_of_mesh_begin(ptr noundef nonnull %24) #18
  %165 = load ptr, ptr %162, align 8, !tbaa !413
  %166 = call ptr %165(ptr noundef nonnull %24) #18
  %167 = icmp eq ptr %166, null
  br i1 %167, label %286, label %168

168:                                              ; preds = %149
  %169 = lshr exact i32 %158, 11
  br label %170

170:                                              ; preds = %170, %168
  %171 = phi ptr [ %166, %168 ], [ %185, %170 ]
  %172 = phi i32 [ 0, %168 ], [ %183, %170 ]
  %173 = phi i32 [ 0, %168 ], [ %180, %170 ]
  %174 = getelementptr i8, ptr %171, i64 13
  %175 = load i8, ptr %174, align 1, !tbaa !255
  %176 = and i8 %175, 2
  %177 = icmp eq i8 %176, 0
  %178 = and i8 %175, 1
  %179 = select i1 %177, i32 %169, i32 0
  %180 = add nuw nsw i32 %179, %173
  %181 = select i1 %177, i8 %178, i8 0
  %182 = zext i8 %181 to i32
  %183 = add nuw nsw i32 %172, %182
  %184 = load ptr, ptr %162, align 8, !tbaa !413
  %185 = call ptr %184(ptr noundef nonnull %24) #18
  %186 = icmp eq ptr %185, null
  br i1 %186, label %187, label %170, !llvm.loop !417

187:                                              ; preds = %170
  %188 = icmp eq i32 %183, 0
  br i1 %188, label %286, label %189

189:                                              ; preds = %187
  %190 = icmp eq i32 %158, 0
  %191 = select i1 %190, i32 %183, i32 %180
  %192 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 9
  store i32 %191, ptr %192, align 8
  %193 = load ptr, ptr @MEM_callocN, align 8, !tbaa !33
  %194 = zext i32 %191 to i64
  %195 = mul nuw nsw i64 %194, 224
  %196 = call ptr %193(i64 noundef %195, ptr noundef nonnull @.str.14) #18
  %197 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 10
  store ptr %196, ptr %197, align 8, !tbaa !19
  %198 = load ptr, ptr %154, align 8, !tbaa !69
  %199 = getelementptr inbounds %struct.Object, ptr %198, i64 0, i32 47
  call void @copy_m3_m4(ptr noundef nonnull %25, ptr noundef nonnull %199) #18
  call void @pseudoinverse_m3_m3(ptr noundef nonnull %26, ptr noundef nonnull %25, float noundef nofpclass(nan inf) 0x3E45798EE0000000) #18
  %200 = load i32, ptr %1, align 8, !tbaa !161
  %201 = icmp eq i32 %200, 26
  %202 = select i1 %201, i8 2, i8 4
  %203 = select i1 %201, i32 29, i32 30
  %204 = load ptr, ptr %156, align 8, !tbaa !253
  %205 = load ptr, ptr %154, align 8, !tbaa !69
  %206 = call ptr @BKE_mesh_from_object(ptr noundef %205) #18
  call void @BM_mesh_cd_flag_ensure(ptr noundef %204, ptr noundef %206, i8 noundef zeroext %202) #18
  %207 = load ptr, ptr %156, align 8, !tbaa !253
  %208 = getelementptr inbounds %struct.BMesh, ptr %207, i64 0, i32 25
  %209 = call i32 @CustomData_get_offset(ptr noundef nonnull %208, i32 noundef %203) #18
  %210 = load ptr, ptr %156, align 8, !tbaa !253
  store i8 2, ptr %160, align 4, !tbaa !410
  store ptr @bmiter__elem_of_mesh_begin, ptr %161, align 8, !tbaa !412
  store ptr @bmiter__elem_of_mesh_step, ptr %162, align 8, !tbaa !413
  %211 = getelementptr inbounds %struct.BMesh, ptr %210, i64 0, i32 10
  %212 = load ptr, ptr %211, align 8, !tbaa !414
  store ptr %212, ptr %24, align 8, !tbaa !51
  call void @bmiter__elem_of_mesh_begin(ptr noundef nonnull %24) #18
  %213 = load ptr, ptr %162, align 8, !tbaa !413
  %214 = call ptr %213(ptr noundef nonnull %24) #18
  %215 = icmp eq ptr %214, null
  br i1 %215, label %286, label %216

216:                                              ; preds = %189
  %217 = sext i32 %209 to i64
  br i1 %190, label %252, label %218

218:                                              ; preds = %216, %247
  %219 = phi ptr [ %248, %247 ], [ %196, %216 ]
  %220 = phi ptr [ %250, %247 ], [ %214, %216 ]
  %221 = getelementptr i8, ptr %220, i64 13
  %222 = load i8, ptr %221, align 1, !tbaa !255
  %223 = and i8 %222, 2
  %224 = icmp eq i8 %223, 0
  br i1 %224, label %225, label %247

225:                                              ; preds = %218
  %226 = getelementptr inbounds %struct.TransData, ptr %219, i64 0, i32 7
  %227 = getelementptr inbounds %struct.BMEdge, ptr %220, i64 0, i32 2
  %228 = load ptr, ptr %227, align 8, !tbaa !418
  %229 = getelementptr inbounds %struct.BMVert, ptr %228, i64 0, i32 2
  %230 = getelementptr inbounds %struct.BMEdge, ptr %220, i64 0, i32 3
  %231 = load ptr, ptr %230, align 8, !tbaa !421
  %232 = getelementptr inbounds %struct.BMVert, ptr %231, i64 0, i32 2
  call void @mid_v3_v3v3(ptr noundef nonnull %226, ptr noundef nonnull %229, ptr noundef nonnull %232) #18
  %233 = getelementptr inbounds %struct.TransData, ptr %219, i64 0, i32 3
  store ptr null, ptr %233, align 8, !tbaa !182
  %234 = load i8, ptr %221, align 1, !tbaa !255
  %235 = and i8 %234, 1
  %236 = zext i8 %235 to i32
  %237 = getelementptr inbounds %struct.TransData, ptr %219, i64 0, i32 16
  store i32 %236, ptr %237, align 8
  %238 = getelementptr inbounds %struct.TransData, ptr %219, i64 0, i32 9
  call void @copy_m3_m3(ptr noundef nonnull %238, ptr noundef nonnull %26) #18
  %239 = getelementptr inbounds %struct.TransData, ptr %219, i64 0, i32 8
  call void @copy_m3_m3(ptr noundef nonnull %239, ptr noundef nonnull %25) #18
  %240 = getelementptr inbounds %struct.TransData, ptr %219, i64 0, i32 13
  store ptr null, ptr %240, align 8, !tbaa !334
  %241 = load ptr, ptr %220, align 8, !tbaa !422
  %242 = getelementptr inbounds i8, ptr %241, i64 %217
  %243 = getelementptr inbounds %struct.TransData, ptr %219, i64 0, i32 5
  store ptr %242, ptr %243, align 8, !tbaa !423
  %244 = load float, ptr %242, align 4, !tbaa !82
  %245 = getelementptr inbounds %struct.TransData, ptr %219, i64 0, i32 6
  store float %244, ptr %245, align 8, !tbaa !424
  %246 = getelementptr inbounds %struct.TransData, ptr %219, i64 1
  br label %247

247:                                              ; preds = %225, %218
  %248 = phi ptr [ %219, %218 ], [ %246, %225 ]
  %249 = load ptr, ptr %162, align 8, !tbaa !413
  %250 = call ptr %249(ptr noundef nonnull %24) #18
  %251 = icmp eq ptr %250, null
  br i1 %251, label %286, label %218, !llvm.loop !425

252:                                              ; preds = %216, %281
  %253 = phi ptr [ %282, %281 ], [ %196, %216 ]
  %254 = phi ptr [ %284, %281 ], [ %214, %216 ]
  %255 = getelementptr i8, ptr %254, i64 13
  %256 = load i8, ptr %255, align 1, !tbaa !255
  %257 = and i8 %256, 3
  %258 = icmp eq i8 %257, 1
  br i1 %258, label %259, label %281

259:                                              ; preds = %252
  %260 = getelementptr inbounds %struct.TransData, ptr %253, i64 0, i32 7
  %261 = getelementptr inbounds %struct.BMEdge, ptr %254, i64 0, i32 2
  %262 = load ptr, ptr %261, align 8, !tbaa !418
  %263 = getelementptr inbounds %struct.BMVert, ptr %262, i64 0, i32 2
  %264 = getelementptr inbounds %struct.BMEdge, ptr %254, i64 0, i32 3
  %265 = load ptr, ptr %264, align 8, !tbaa !421
  %266 = getelementptr inbounds %struct.BMVert, ptr %265, i64 0, i32 2
  call void @mid_v3_v3v3(ptr noundef nonnull %260, ptr noundef nonnull %263, ptr noundef nonnull %266) #18
  %267 = getelementptr inbounds %struct.TransData, ptr %253, i64 0, i32 3
  store ptr null, ptr %267, align 8, !tbaa !182
  %268 = load i8, ptr %255, align 1, !tbaa !255
  %269 = and i8 %268, 1
  %270 = zext i8 %269 to i32
  %271 = getelementptr inbounds %struct.TransData, ptr %253, i64 0, i32 16
  store i32 %270, ptr %271, align 8
  %272 = getelementptr inbounds %struct.TransData, ptr %253, i64 0, i32 9
  call void @copy_m3_m3(ptr noundef nonnull %272, ptr noundef nonnull %26) #18
  %273 = getelementptr inbounds %struct.TransData, ptr %253, i64 0, i32 8
  call void @copy_m3_m3(ptr noundef nonnull %273, ptr noundef nonnull %25) #18
  %274 = getelementptr inbounds %struct.TransData, ptr %253, i64 0, i32 13
  store ptr null, ptr %274, align 8, !tbaa !334
  %275 = load ptr, ptr %254, align 8, !tbaa !422
  %276 = getelementptr inbounds i8, ptr %275, i64 %217
  %277 = getelementptr inbounds %struct.TransData, ptr %253, i64 0, i32 5
  store ptr %276, ptr %277, align 8, !tbaa !423
  %278 = load float, ptr %276, align 4, !tbaa !82
  %279 = getelementptr inbounds %struct.TransData, ptr %253, i64 0, i32 6
  store float %278, ptr %279, align 8, !tbaa !424
  %280 = getelementptr inbounds %struct.TransData, ptr %253, i64 1
  br label %281

281:                                              ; preds = %259, %252
  %282 = phi ptr [ %253, %252 ], [ %280, %259 ]
  %283 = load ptr, ptr %162, align 8, !tbaa !413
  %284 = call ptr %283(ptr noundef nonnull %24) #18
  %285 = icmp eq ptr %284, null
  br i1 %285, label %286, label %252, !llvm.loop !425

286:                                              ; preds = %247, %281, %149, %187, %189
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %26) #18
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %25) #18
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %24) #18
  %287 = getelementptr %struct.TransInfo, ptr %1, i64 0, i32 10
  %288 = load ptr, ptr %287, align 8, !tbaa !19
  %289 = icmp eq ptr %288, null
  br i1 %289, label %2896, label %290

290:                                              ; preds = %286
  %291 = load i32, ptr %151, align 4, !tbaa !24
  %292 = and i32 %291, 2048
  %293 = icmp eq i32 %292, 0
  br i1 %293, label %2896, label %294

294:                                              ; preds = %290
  %295 = getelementptr i8, ptr %1, i64 48
  %296 = load i32, ptr %295, align 8, !tbaa !5
  call void @llvm.lifetime.start.p0(i64 224, ptr nonnull %23)
  %297 = icmp sgt i32 %296, 1
  br i1 %297, label %298, label %327

298:                                              ; preds = %294
  %299 = add nsw i32 %296, -1
  %300 = zext i32 %299 to i64
  %301 = getelementptr inbounds %struct.TransData, ptr %288, i64 %300
  br label %302

302:                                              ; preds = %323, %298
  %303 = phi ptr [ %325, %323 ], [ %288, %298 ]
  %304 = phi ptr [ %324, %323 ], [ %301, %298 ]
  br label %305

305:                                              ; preds = %311, %302
  %306 = phi ptr [ %312, %311 ], [ %303, %302 ]
  %307 = getelementptr inbounds %struct.TransData, ptr %306, i64 0, i32 16
  %308 = load i32, ptr %307, align 8, !tbaa !20
  %309 = and i32 %308, 1
  %310 = icmp eq i32 %309, 0
  br i1 %310, label %314, label %311

311:                                              ; preds = %305
  %312 = getelementptr inbounds %struct.TransData, ptr %306, i64 1
  %313 = icmp eq ptr %312, %304
  br i1 %313, label %327, label %305, !llvm.loop !426

314:                                              ; preds = %305, %320
  %315 = phi ptr [ %321, %320 ], [ %304, %305 ]
  %316 = getelementptr inbounds %struct.TransData, ptr %315, i64 0, i32 16
  %317 = load i32, ptr %316, align 8, !tbaa !20
  %318 = and i32 %317, 1
  %319 = icmp eq i32 %318, 0
  br i1 %319, label %320, label %323

320:                                              ; preds = %314
  %321 = getelementptr inbounds %struct.TransData, ptr %315, i64 -1
  %322 = icmp eq ptr %306, %321
  br i1 %322, label %327, label %314, !llvm.loop !427

323:                                              ; preds = %314
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(224) %23, ptr noundef nonnull align 8 dereferenceable(224) %306, i64 224, i1 false), !tbaa.struct !428
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(224) %306, ptr noundef nonnull align 8 dereferenceable(224) %315, i64 224, i1 false), !tbaa.struct !428
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(224) %315, ptr noundef nonnull align 8 dereferenceable(224) %23, i64 224, i1 false), !tbaa.struct !428
  %324 = getelementptr inbounds %struct.TransData, ptr %315, i64 -1
  %325 = getelementptr inbounds %struct.TransData, ptr %306, i64 1
  %326 = icmp ugt ptr %324, %325
  br i1 %326, label %302, label %327, !llvm.loop !429

327:                                              ; preds = %323, %311, %320, %294
  call void @llvm.lifetime.end.p0(i64 224, ptr nonnull %23)
  call fastcc void @set_prop_dist(ptr noundef %1, i8 noundef zeroext 1)
  %328 = load i32, ptr %295, align 8, !tbaa !5
  %329 = icmp sgt i32 %328, 0
  br i1 %329, label %330, label %2896

330:                                              ; preds = %327
  %331 = load ptr, ptr %287, align 8, !tbaa !19
  br label %332

332:                                              ; preds = %339, %330
  %333 = phi i32 [ %341, %339 ], [ 0, %330 ]
  %334 = phi ptr [ %340, %339 ], [ %331, %330 ]
  %335 = getelementptr inbounds %struct.TransData, ptr %334, i64 0, i32 16
  %336 = load i32, ptr %335, align 8, !tbaa !20
  %337 = and i32 %336, 1
  %338 = icmp eq i32 %337, 0
  br i1 %338, label %343, label %339

339:                                              ; preds = %332
  %340 = getelementptr inbounds %struct.TransData, ptr %334, i64 1
  %341 = add nuw nsw i32 %333, 1
  %342 = icmp eq i32 %341, %328
  br i1 %342, label %2896, label %332, !llvm.loop !22

343:                                              ; preds = %332
  %344 = load i32, ptr %151, align 4, !tbaa !24
  %345 = and i32 %344, 4096
  %346 = icmp eq i32 %345, 0
  %347 = sub nsw i32 %328, %333
  %348 = sext i32 %347 to i64
  %349 = select i1 %346, ptr @trans_data_compare_rdist, ptr @trans_data_compare_dist
  call void @qsort(ptr noundef nonnull %334, i64 noundef %348, i64 noundef 224, ptr noundef nonnull %349) #18
  br label %2896

350:                                              ; preds = %143
  %351 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 33
  %352 = load i8, ptr %351, align 8, !tbaa !251
  switch i8 %352, label %2733 [
    i8 6, label %353
    i8 12, label %391
    i8 13, label %1268
    i8 8, label %1563
    i8 2, label %1674
    i8 16, label %2581
    i8 20, label %2712
  ]

353:                                              ; preds = %350
  %354 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 1
  %355 = load i32, ptr %354, align 4, !tbaa !24
  %356 = or i32 %355, 32832
  store i32 %356, ptr %354, align 4, !tbaa !24
  %357 = and i32 %144, 128
  %358 = icmp eq i32 %357, 0
  br i1 %358, label %370, label %359

359:                                              ; preds = %353
  tail call fastcc void @createTransMaskingData(ptr noundef %0, ptr noundef nonnull %1)
  %360 = getelementptr %struct.TransInfo, ptr %1, i64 0, i32 10
  %361 = load ptr, ptr %360, align 8, !tbaa !19
  %362 = icmp eq ptr %361, null
  br i1 %362, label %2896, label %363

363:                                              ; preds = %359
  %364 = load i32, ptr %354, align 4, !tbaa !24
  %365 = and i32 %364, 2048
  %366 = icmp eq i32 %365, 0
  br i1 %366, label %2896, label %367

367:                                              ; preds = %363
  %368 = getelementptr i8, ptr %1, i64 48
  %369 = load i32, ptr %368, align 8, !tbaa !5
  tail call fastcc void @sort_trans_data(i32 %369, ptr nonnull %361)
  tail call fastcc void @set_prop_dist(ptr noundef nonnull %1, i8 noundef zeroext 1)
  tail call void @sort_trans_data_dist(ptr noundef nonnull %1)
  br label %2896

370:                                              ; preds = %353
  %371 = and i32 %144, 256
  %372 = icmp eq i32 %371, 0
  br i1 %372, label %376, label %373

373:                                              ; preds = %370
  %374 = load i32, ptr %1, align 8, !tbaa !161
  switch i32 %374, label %375 [
    i32 6, label %2896
    i32 8, label %2896
  ]

375:                                              ; preds = %373
  tail call fastcc void @createTransPaintCurveVerts(ptr noundef %0, ptr noundef nonnull %1)
  br label %2896

376:                                              ; preds = %370
  %377 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 63
  %378 = load ptr, ptr %377, align 8, !tbaa !69
  %379 = icmp eq ptr %378, null
  br i1 %379, label %2896, label %380

380:                                              ; preds = %376
  tail call fastcc void @createTransUVs(ptr noundef %0, ptr noundef nonnull %1)
  %381 = getelementptr %struct.TransInfo, ptr %1, i64 0, i32 10
  %382 = load ptr, ptr %381, align 8, !tbaa !19
  %383 = icmp eq ptr %382, null
  br i1 %383, label %2896, label %384

384:                                              ; preds = %380
  %385 = load i32, ptr %354, align 4, !tbaa !24
  %386 = and i32 %385, 2048
  %387 = icmp eq i32 %386, 0
  br i1 %387, label %2896, label %388

388:                                              ; preds = %384
  %389 = getelementptr i8, ptr %1, i64 48
  %390 = load i32, ptr %389, align 8, !tbaa !5
  tail call fastcc void @sort_trans_data(i32 %390, ptr nonnull %382)
  tail call fastcc void @set_prop_dist(ptr noundef nonnull %1, i8 noundef zeroext 1)
  tail call void @sort_trans_data_dist(ptr noundef nonnull %1)
  br label %2896

391:                                              ; preds = %350
  %392 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 1
  %393 = load i32, ptr %392, align 4, !tbaa !24
  %394 = or i32 %393, 32832
  store i32 %394, ptr %392, align 4, !tbaa !24
  call void @llvm.lifetime.start.p0(i64 80, ptr nonnull %19) #18
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %20) #18
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %20, i8 0, i64 16, i1 false)
  %395 = call zeroext i8 @ANIM_animdata_get_context(ptr noundef %0, ptr noundef nonnull %19) #18
  %396 = icmp eq i8 %395, 0
  br i1 %396, label %1267, label %397

397:                                              ; preds = %391
  %398 = getelementptr inbounds %struct.bAnimContext, ptr %19, i64 0, i32 1
  %399 = load ptr, ptr %19, align 8, !tbaa !294
  %400 = load i16, ptr %398, align 8, !tbaa !317
  %401 = sext i16 %400 to i32
  %402 = call i64 @ANIM_animdata_filter(ptr noundef nonnull %19, ptr noundef nonnull %20, i32 noundef 257, ptr noundef %399, i32 noundef %401) #18
  %403 = load i32, ptr %1, align 8, !tbaa !161
  %404 = icmp eq i32 %403, 22
  br i1 %404, label %405, label %421

405:                                              ; preds = %397
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %21) #18
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %22) #18
  %406 = getelementptr inbounds %struct.bAnimContext, ptr %19, i64 0, i32 7
  %407 = load ptr, ptr %406, align 8, !tbaa !430
  %408 = getelementptr inbounds %struct.ARegion, ptr %407, i64 0, i32 2
  %409 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 22
  %410 = load i32, ptr %409, align 8, !tbaa !27
  %411 = sitofp i32 %410 to float
  %412 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 22, i64 1
  %413 = load i32, ptr %412, align 4, !tbaa !27
  %414 = sitofp i32 %413 to float
  call void @UI_view2d_region_to_view(ptr noundef nonnull %408, float noundef nofpclass(nan inf) %411, float noundef nofpclass(nan inf) %414, ptr noundef nonnull %21, ptr noundef nonnull %22) #18
  %415 = load float, ptr %21, align 4, !tbaa !82
  %416 = getelementptr inbounds %struct.Scene, ptr %29, i64 0, i32 22, i32 5
  %417 = load i32, ptr %416, align 8, !tbaa !224
  %418 = sitofp i32 %417 to float
  %419 = fcmp fast ogt float %415, %418
  %420 = select i1 %419, i8 82, i8 76
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %22) #18
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %21) #18
  br label %421

421:                                              ; preds = %405, %397
  %422 = phi i8 [ %420, %405 ], [ 66, %397 ]
  %423 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 26
  store i8 %422, ptr %423, align 8
  %424 = load ptr, ptr %20, align 8, !tbaa !33
  %425 = icmp eq ptr %424, null
  br i1 %425, label %1266, label %426

426:                                              ; preds = %421
  %427 = getelementptr inbounds %struct.Scene, ptr %29, i64 0, i32 22, i32 5
  br label %428

428:                                              ; preds = %825, %426
  %429 = phi ptr [ %424, %426 ], [ %827, %825 ]
  %430 = phi i32 [ 0, %426 ], [ %826, %825 ]
  %431 = call ptr @ANIM_nla_mapping_get(ptr noundef nonnull %19, ptr noundef nonnull %429) #18
  %432 = icmp eq ptr %431, null
  %433 = load i32, ptr %427, align 8, !tbaa !224
  %434 = sitofp i32 %433 to float
  br i1 %432, label %437, label %435

435:                                              ; preds = %428
  %436 = call fast nofpclass(nan inf) float @BKE_nla_tweakedit_remap(ptr noundef nonnull %431, float noundef nofpclass(nan inf) %434, i16 noundef signext 1) #18
  br label %437

437:                                              ; preds = %435, %428
  %438 = phi float [ %436, %435 ], [ %434, %428 ]
  %439 = getelementptr inbounds %struct.bAnimListElem, ptr %429, i64 0, i32 3
  %440 = load i32, ptr %439, align 8, !tbaa !431
  switch i32 %440, label %825 [
    i32 7, label %441
    i32 27, label %707
    i32 29, label %766
  ]

441:                                              ; preds = %437
  %442 = getelementptr inbounds %struct.bAnimListElem, ptr %429, i64 0, i32 8
  %443 = load ptr, ptr %442, align 8, !tbaa !192
  %444 = load i8, ptr %423, align 8, !tbaa !263
  %445 = icmp eq ptr %443, null
  br i1 %445, label %704, label %446

446:                                              ; preds = %441
  %447 = getelementptr inbounds %struct.FCurve, ptr %443, i64 0, i32 5
  %448 = load ptr, ptr %447, align 8, !tbaa !194
  %449 = icmp eq ptr %448, null
  br i1 %449, label %704, label %450

450:                                              ; preds = %446
  %451 = getelementptr inbounds %struct.FCurve, ptr %443, i64 0, i32 7
  %452 = load i32, ptr %451, align 8, !tbaa !196
  %453 = icmp eq i32 %452, 0
  br i1 %453, label %704, label %454

454:                                              ; preds = %450
  switch i8 %444, label %460 [
    i8 66, label %465
    i8 82, label %455
  ]

455:                                              ; preds = %454
  %456 = and i32 %452, 1
  %457 = icmp eq i32 %452, 1
  br i1 %457, label %688, label %458

458:                                              ; preds = %455
  %459 = and i32 %452, -2
  br label %610

460:                                              ; preds = %454
  %461 = and i32 %452, 1
  %462 = icmp eq i32 %452, 1
  br i1 %462, label %672, label %463

463:                                              ; preds = %460
  %464 = and i32 %452, -2
  br label %641

465:                                              ; preds = %454
  %466 = zext i32 %452 to i64
  %467 = icmp ult i32 %452, 16
  br i1 %467, label %594, label %468

468:                                              ; preds = %465
  %469 = and i64 %466, 4294967280
  %470 = trunc i64 %469 to i32
  %471 = mul nuw nsw i64 %469, 72
  %472 = getelementptr i8, ptr %448, i64 %471
  %473 = getelementptr %struct.BezTriple, ptr %448, i64 0, i32 8
  %474 = getelementptr %struct.BezTriple, ptr %448, i64 0, i32 8
  %475 = getelementptr %struct.BezTriple, ptr %448, i64 0, i32 8
  %476 = getelementptr %struct.BezTriple, ptr %448, i64 0, i32 8
  %477 = getelementptr %struct.BezTriple, ptr %448, i64 0, i32 8
  %478 = getelementptr %struct.BezTriple, ptr %448, i64 0, i32 8
  %479 = getelementptr %struct.BezTriple, ptr %448, i64 0, i32 8
  %480 = getelementptr %struct.BezTriple, ptr %448, i64 0, i32 8
  %481 = getelementptr %struct.BezTriple, ptr %448, i64 0, i32 8
  %482 = getelementptr %struct.BezTriple, ptr %448, i64 0, i32 8
  %483 = getelementptr %struct.BezTriple, ptr %448, i64 0, i32 8
  %484 = getelementptr %struct.BezTriple, ptr %448, i64 0, i32 8
  %485 = getelementptr %struct.BezTriple, ptr %448, i64 0, i32 8
  %486 = getelementptr %struct.BezTriple, ptr %448, i64 0, i32 8
  %487 = getelementptr %struct.BezTriple, ptr %448, i64 0, i32 8
  %488 = getelementptr %struct.BezTriple, ptr %448, i64 0, i32 8
  br label %489

489:                                              ; preds = %489, %468
  %490 = phi i64 [ 0, %468 ], [ %586, %489 ]
  %491 = phi <4 x i32> [ zeroinitializer, %468 ], [ %582, %489 ]
  %492 = phi <4 x i32> [ zeroinitializer, %468 ], [ %583, %489 ]
  %493 = phi <4 x i32> [ zeroinitializer, %468 ], [ %584, %489 ]
  %494 = phi <4 x i32> [ zeroinitializer, %468 ], [ %585, %489 ]
  %495 = mul i64 %490, 72
  %496 = mul i64 %490, 72
  %497 = or i64 %496, 72
  %498 = mul i64 %490, 72
  %499 = add i64 %498, 144
  %500 = mul i64 %490, 72
  %501 = add i64 %500, 216
  %502 = mul i64 %490, 72
  %503 = add i64 %502, 288
  %504 = mul i64 %490, 72
  %505 = add i64 %504, 360
  %506 = mul i64 %490, 72
  %507 = add i64 %506, 432
  %508 = mul i64 %490, 72
  %509 = add i64 %508, 504
  %510 = mul i64 %490, 72
  %511 = add i64 %510, 576
  %512 = mul i64 %490, 72
  %513 = add i64 %512, 648
  %514 = mul i64 %490, 72
  %515 = add i64 %514, 720
  %516 = mul i64 %490, 72
  %517 = add i64 %516, 792
  %518 = mul i64 %490, 72
  %519 = add i64 %518, 864
  %520 = mul i64 %490, 72
  %521 = add i64 %520, 936
  %522 = mul i64 %490, 72
  %523 = add i64 %522, 1008
  %524 = mul i64 %490, 72
  %525 = add i64 %524, 1080
  %526 = getelementptr i8, ptr %473, i64 %495
  %527 = getelementptr i8, ptr %474, i64 %497
  %528 = getelementptr i8, ptr %475, i64 %499
  %529 = getelementptr i8, ptr %476, i64 %501
  %530 = getelementptr i8, ptr %477, i64 %503
  %531 = getelementptr i8, ptr %478, i64 %505
  %532 = getelementptr i8, ptr %479, i64 %507
  %533 = getelementptr i8, ptr %480, i64 %509
  %534 = getelementptr i8, ptr %481, i64 %511
  %535 = getelementptr i8, ptr %482, i64 %513
  %536 = getelementptr i8, ptr %483, i64 %515
  %537 = getelementptr i8, ptr %484, i64 %517
  %538 = getelementptr i8, ptr %485, i64 %519
  %539 = getelementptr i8, ptr %486, i64 %521
  %540 = getelementptr i8, ptr %487, i64 %523
  %541 = getelementptr i8, ptr %488, i64 %525
  %542 = load i8, ptr %526, align 4, !tbaa !340
  %543 = load i8, ptr %527, align 4, !tbaa !340
  %544 = load i8, ptr %528, align 4, !tbaa !340
  %545 = load i8, ptr %529, align 4, !tbaa !340
  %546 = insertelement <4 x i8> poison, i8 %542, i64 0
  %547 = insertelement <4 x i8> %546, i8 %543, i64 1
  %548 = insertelement <4 x i8> %547, i8 %544, i64 2
  %549 = insertelement <4 x i8> %548, i8 %545, i64 3
  %550 = load i8, ptr %530, align 4, !tbaa !340
  %551 = load i8, ptr %531, align 4, !tbaa !340
  %552 = load i8, ptr %532, align 4, !tbaa !340
  %553 = load i8, ptr %533, align 4, !tbaa !340
  %554 = insertelement <4 x i8> poison, i8 %550, i64 0
  %555 = insertelement <4 x i8> %554, i8 %551, i64 1
  %556 = insertelement <4 x i8> %555, i8 %552, i64 2
  %557 = insertelement <4 x i8> %556, i8 %553, i64 3
  %558 = load i8, ptr %534, align 4, !tbaa !340
  %559 = load i8, ptr %535, align 4, !tbaa !340
  %560 = load i8, ptr %536, align 4, !tbaa !340
  %561 = load i8, ptr %537, align 4, !tbaa !340
  %562 = insertelement <4 x i8> poison, i8 %558, i64 0
  %563 = insertelement <4 x i8> %562, i8 %559, i64 1
  %564 = insertelement <4 x i8> %563, i8 %560, i64 2
  %565 = insertelement <4 x i8> %564, i8 %561, i64 3
  %566 = load i8, ptr %538, align 4, !tbaa !340
  %567 = load i8, ptr %539, align 4, !tbaa !340
  %568 = load i8, ptr %540, align 4, !tbaa !340
  %569 = load i8, ptr %541, align 4, !tbaa !340
  %570 = insertelement <4 x i8> poison, i8 %566, i64 0
  %571 = insertelement <4 x i8> %570, i8 %567, i64 1
  %572 = insertelement <4 x i8> %571, i8 %568, i64 2
  %573 = insertelement <4 x i8> %572, i8 %569, i64 3
  %574 = and <4 x i8> %549, <i8 1, i8 1, i8 1, i8 1>
  %575 = and <4 x i8> %557, <i8 1, i8 1, i8 1, i8 1>
  %576 = and <4 x i8> %565, <i8 1, i8 1, i8 1, i8 1>
  %577 = and <4 x i8> %573, <i8 1, i8 1, i8 1, i8 1>
  %578 = zext <4 x i8> %574 to <4 x i32>
  %579 = zext <4 x i8> %575 to <4 x i32>
  %580 = zext <4 x i8> %576 to <4 x i32>
  %581 = zext <4 x i8> %577 to <4 x i32>
  %582 = add <4 x i32> %491, %578
  %583 = add <4 x i32> %492, %579
  %584 = add <4 x i32> %493, %580
  %585 = add <4 x i32> %494, %581
  %586 = add nuw i64 %490, 16
  %587 = icmp eq i64 %586, %469
  br i1 %587, label %588, label %489, !llvm.loop !432

588:                                              ; preds = %489
  %589 = add <4 x i32> %583, %582
  %590 = add <4 x i32> %584, %589
  %591 = add <4 x i32> %585, %590
  %592 = call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %591)
  %593 = icmp eq i64 %469, %466
  br i1 %593, label %704, label %594

594:                                              ; preds = %465, %588
  %595 = phi i32 [ 0, %465 ], [ %592, %588 ]
  %596 = phi i32 [ 0, %465 ], [ %470, %588 ]
  %597 = phi ptr [ %448, %465 ], [ %472, %588 ]
  br label %598

598:                                              ; preds = %594, %598
  %599 = phi i32 [ %606, %598 ], [ %595, %594 ]
  %600 = phi i32 [ %607, %598 ], [ %596, %594 ]
  %601 = phi ptr [ %608, %598 ], [ %597, %594 ]
  %602 = getelementptr inbounds %struct.BezTriple, ptr %601, i64 0, i32 8
  %603 = load i8, ptr %602, align 4, !tbaa !340
  %604 = and i8 %603, 1
  %605 = zext i8 %604 to i32
  %606 = add nuw nsw i32 %599, %605
  %607 = add nuw nsw i32 %600, 1
  %608 = getelementptr inbounds %struct.BezTriple, ptr %601, i64 1
  %609 = icmp eq i32 %607, %452
  br i1 %609, label %704, label %598, !llvm.loop !433

610:                                              ; preds = %636, %458
  %611 = phi i32 [ 0, %458 ], [ %637, %636 ]
  %612 = phi ptr [ %448, %458 ], [ %638, %636 ]
  %613 = phi i32 [ 0, %458 ], [ %639, %636 ]
  %614 = getelementptr inbounds %struct.BezTriple, ptr %612, i64 0, i32 8
  %615 = load i8, ptr %614, align 4, !tbaa !340
  %616 = and i8 %615, 1
  %617 = icmp eq i8 %616, 0
  br i1 %617, label %624, label %618

618:                                              ; preds = %610
  %619 = getelementptr inbounds [3 x [3 x float]], ptr %612, i64 0, i64 1
  %620 = load float, ptr %619, align 4, !tbaa !82
  %621 = fcmp fast oge float %620, %438
  %622 = zext i1 %621 to i32
  %623 = add nsw i32 %611, %622
  br label %624

624:                                              ; preds = %618, %610
  %625 = phi i32 [ %611, %610 ], [ %623, %618 ]
  %626 = getelementptr inbounds %struct.BezTriple, ptr %612, i64 1, i32 8
  %627 = load i8, ptr %626, align 4, !tbaa !340
  %628 = and i8 %627, 1
  %629 = icmp eq i8 %628, 0
  br i1 %629, label %636, label %630

630:                                              ; preds = %624
  %631 = getelementptr inbounds %struct.BezTriple, ptr %612, i64 1, i32 0, i64 1
  %632 = load float, ptr %631, align 4, !tbaa !82
  %633 = fcmp fast oge float %632, %438
  %634 = zext i1 %633 to i32
  %635 = add nsw i32 %625, %634
  br label %636

636:                                              ; preds = %630, %624
  %637 = phi i32 [ %625, %624 ], [ %635, %630 ]
  %638 = getelementptr inbounds %struct.BezTriple, ptr %612, i64 2
  %639 = add i32 %613, 2
  %640 = icmp eq i32 %639, %459
  br i1 %640, label %688, label %610, !llvm.loop !434

641:                                              ; preds = %667, %463
  %642 = phi i32 [ 0, %463 ], [ %668, %667 ]
  %643 = phi ptr [ %448, %463 ], [ %669, %667 ]
  %644 = phi i32 [ 0, %463 ], [ %670, %667 ]
  %645 = getelementptr inbounds %struct.BezTriple, ptr %643, i64 0, i32 8
  %646 = load i8, ptr %645, align 4, !tbaa !340
  %647 = and i8 %646, 1
  %648 = icmp eq i8 %647, 0
  br i1 %648, label %655, label %649

649:                                              ; preds = %641
  %650 = getelementptr inbounds [3 x [3 x float]], ptr %643, i64 0, i64 1
  %651 = load float, ptr %650, align 4, !tbaa !82
  %652 = fcmp fast ole float %651, %438
  %653 = zext i1 %652 to i32
  %654 = add nsw i32 %642, %653
  br label %655

655:                                              ; preds = %649, %641
  %656 = phi i32 [ %642, %641 ], [ %654, %649 ]
  %657 = getelementptr inbounds %struct.BezTriple, ptr %643, i64 1, i32 8
  %658 = load i8, ptr %657, align 4, !tbaa !340
  %659 = and i8 %658, 1
  %660 = icmp eq i8 %659, 0
  br i1 %660, label %667, label %661

661:                                              ; preds = %655
  %662 = getelementptr inbounds %struct.BezTriple, ptr %643, i64 1, i32 0, i64 1
  %663 = load float, ptr %662, align 4, !tbaa !82
  %664 = fcmp fast ole float %663, %438
  %665 = zext i1 %664 to i32
  %666 = add nsw i32 %656, %665
  br label %667

667:                                              ; preds = %661, %655
  %668 = phi i32 [ %656, %655 ], [ %666, %661 ]
  %669 = getelementptr inbounds %struct.BezTriple, ptr %643, i64 2
  %670 = add i32 %644, 2
  %671 = icmp eq i32 %670, %464
  br i1 %671, label %672, label %641, !llvm.loop !434

672:                                              ; preds = %667, %460
  %673 = phi i32 [ undef, %460 ], [ %668, %667 ]
  %674 = phi i32 [ 0, %460 ], [ %668, %667 ]
  %675 = phi ptr [ %448, %460 ], [ %669, %667 ]
  %676 = icmp eq i32 %461, 0
  br i1 %676, label %704, label %677

677:                                              ; preds = %672
  %678 = getelementptr inbounds %struct.BezTriple, ptr %675, i64 0, i32 8
  %679 = load i8, ptr %678, align 4, !tbaa !340
  %680 = and i8 %679, 1
  %681 = icmp eq i8 %680, 0
  br i1 %681, label %704, label %682

682:                                              ; preds = %677
  %683 = getelementptr inbounds [3 x [3 x float]], ptr %675, i64 0, i64 1
  %684 = load float, ptr %683, align 4, !tbaa !82
  %685 = fcmp fast ole float %684, %438
  %686 = zext i1 %685 to i32
  %687 = add nsw i32 %674, %686
  br label %704

688:                                              ; preds = %636, %455
  %689 = phi i32 [ undef, %455 ], [ %637, %636 ]
  %690 = phi i32 [ 0, %455 ], [ %637, %636 ]
  %691 = phi ptr [ %448, %455 ], [ %638, %636 ]
  %692 = icmp eq i32 %456, 0
  br i1 %692, label %704, label %693

693:                                              ; preds = %688
  %694 = getelementptr inbounds %struct.BezTriple, ptr %691, i64 0, i32 8
  %695 = load i8, ptr %694, align 4, !tbaa !340
  %696 = and i8 %695, 1
  %697 = icmp eq i8 %696, 0
  br i1 %697, label %704, label %698

698:                                              ; preds = %693
  %699 = getelementptr inbounds [3 x [3 x float]], ptr %691, i64 0, i64 1
  %700 = load float, ptr %699, align 4, !tbaa !82
  %701 = fcmp fast oge float %700, %438
  %702 = zext i1 %701 to i32
  %703 = add nsw i32 %690, %702
  br label %704

704:                                              ; preds = %688, %698, %693, %598, %672, %682, %677, %588, %450, %446, %441
  %705 = phi i32 [ 0, %446 ], [ 0, %441 ], [ 0, %450 ], [ %592, %588 ], [ %673, %672 ], [ %674, %677 ], [ %687, %682 ], [ %606, %598 ], [ %689, %688 ], [ %690, %693 ], [ %703, %698 ]
  %706 = add nsw i32 %705, %430
  br label %825

707:                                              ; preds = %437
  %708 = getelementptr inbounds %struct.bAnimListElem, ptr %429, i64 0, i32 2
  %709 = load ptr, ptr %708, align 8, !tbaa !319
  %710 = load i8, ptr %423, align 8, !tbaa !263
  %711 = icmp eq ptr %709, null
  br i1 %711, label %763, label %712

712:                                              ; preds = %707
  %713 = getelementptr inbounds %struct.bGPDlayer, ptr %709, i64 0, i32 2
  %714 = load ptr, ptr %713, align 8, !tbaa !33
  %715 = icmp eq ptr %714, null
  br i1 %715, label %763, label %716

716:                                              ; preds = %712
  switch i8 %710, label %745 [
    i8 66, label %717
    i8 82, label %727
  ]

717:                                              ; preds = %716, %717
  %718 = phi ptr [ %725, %717 ], [ %714, %716 ]
  %719 = phi i32 [ %724, %717 ], [ 0, %716 ]
  %720 = getelementptr inbounds %struct.bGPDframe, ptr %718, i64 0, i32 4
  %721 = load i32, ptr %720, align 4, !tbaa !435
  %722 = lshr i32 %721, 1
  %723 = and i32 %722, 1
  %724 = add nuw nsw i32 %723, %719
  %725 = load ptr, ptr %718, align 8, !tbaa !33
  %726 = icmp eq ptr %725, null
  br i1 %726, label %763, label %717, !llvm.loop !436

727:                                              ; preds = %716, %741
  %728 = phi ptr [ %743, %741 ], [ %714, %716 ]
  %729 = phi i32 [ %742, %741 ], [ 0, %716 ]
  %730 = getelementptr inbounds %struct.bGPDframe, ptr %728, i64 0, i32 4
  %731 = load i32, ptr %730, align 4, !tbaa !435
  %732 = and i32 %731, 2
  %733 = icmp eq i32 %732, 0
  br i1 %733, label %741, label %734

734:                                              ; preds = %727
  %735 = getelementptr inbounds %struct.bGPDframe, ptr %728, i64 0, i32 3
  %736 = load i32, ptr %735, align 8, !tbaa !307
  %737 = sitofp i32 %736 to float
  %738 = fcmp fast ole float %438, %737
  %739 = zext i1 %738 to i32
  %740 = add nsw i32 %729, %739
  br label %741

741:                                              ; preds = %734, %727
  %742 = phi i32 [ %729, %727 ], [ %740, %734 ]
  %743 = load ptr, ptr %728, align 8, !tbaa !33
  %744 = icmp eq ptr %743, null
  br i1 %744, label %763, label %727, !llvm.loop !436

745:                                              ; preds = %716, %759
  %746 = phi ptr [ %761, %759 ], [ %714, %716 ]
  %747 = phi i32 [ %760, %759 ], [ 0, %716 ]
  %748 = getelementptr inbounds %struct.bGPDframe, ptr %746, i64 0, i32 4
  %749 = load i32, ptr %748, align 4, !tbaa !435
  %750 = and i32 %749, 2
  %751 = icmp eq i32 %750, 0
  br i1 %751, label %759, label %752

752:                                              ; preds = %745
  %753 = getelementptr inbounds %struct.bGPDframe, ptr %746, i64 0, i32 3
  %754 = load i32, ptr %753, align 8, !tbaa !307
  %755 = sitofp i32 %754 to float
  %756 = fcmp fast oge float %438, %755
  %757 = zext i1 %756 to i32
  %758 = add nsw i32 %747, %757
  br label %759

759:                                              ; preds = %752, %745
  %760 = phi i32 [ %747, %745 ], [ %758, %752 ]
  %761 = load ptr, ptr %746, align 8, !tbaa !33
  %762 = icmp eq ptr %761, null
  br i1 %762, label %763, label %745, !llvm.loop !436

763:                                              ; preds = %741, %717, %759, %712, %707
  %764 = phi i32 [ 0, %707 ], [ 0, %712 ], [ %760, %759 ], [ %724, %717 ], [ %742, %741 ]
  %765 = add nsw i32 %764, %430
  br label %825

766:                                              ; preds = %437
  %767 = getelementptr inbounds %struct.bAnimListElem, ptr %429, i64 0, i32 2
  %768 = load ptr, ptr %767, align 8, !tbaa !319
  %769 = load i8, ptr %423, align 8, !tbaa !263
  %770 = icmp eq ptr %768, null
  br i1 %770, label %822, label %771

771:                                              ; preds = %766
  %772 = getelementptr inbounds %struct.MaskLayer, ptr %768, i64 0, i32 4
  %773 = load ptr, ptr %772, align 8, !tbaa !33
  %774 = icmp eq ptr %773, null
  br i1 %774, label %822, label %775

775:                                              ; preds = %771
  switch i8 %769, label %804 [
    i8 66, label %776
    i8 82, label %786
  ]

776:                                              ; preds = %775, %776
  %777 = phi ptr [ %784, %776 ], [ %773, %775 ]
  %778 = phi i32 [ %783, %776 ], [ 0, %775 ]
  %779 = getelementptr inbounds %struct.MaskLayerShape, ptr %777, i64 0, i32 5
  %780 = load i8, ptr %779, align 8, !tbaa !437
  %781 = and i8 %780, 1
  %782 = zext i8 %781 to i32
  %783 = add nuw nsw i32 %778, %782
  %784 = load ptr, ptr %777, align 8, !tbaa !33
  %785 = icmp eq ptr %784, null
  br i1 %785, label %822, label %776, !llvm.loop !438

786:                                              ; preds = %775, %800
  %787 = phi ptr [ %802, %800 ], [ %773, %775 ]
  %788 = phi i32 [ %801, %800 ], [ 0, %775 ]
  %789 = getelementptr inbounds %struct.MaskLayerShape, ptr %787, i64 0, i32 5
  %790 = load i8, ptr %789, align 8, !tbaa !437
  %791 = and i8 %790, 1
  %792 = icmp eq i8 %791, 0
  br i1 %792, label %800, label %793

793:                                              ; preds = %786
  %794 = getelementptr inbounds %struct.MaskLayerShape, ptr %787, i64 0, i32 4
  %795 = load i32, ptr %794, align 4, !tbaa !314
  %796 = sitofp i32 %795 to float
  %797 = fcmp fast ole float %438, %796
  %798 = zext i1 %797 to i32
  %799 = add nsw i32 %788, %798
  br label %800

800:                                              ; preds = %793, %786
  %801 = phi i32 [ %788, %786 ], [ %799, %793 ]
  %802 = load ptr, ptr %787, align 8, !tbaa !33
  %803 = icmp eq ptr %802, null
  br i1 %803, label %822, label %786, !llvm.loop !438

804:                                              ; preds = %775, %818
  %805 = phi ptr [ %820, %818 ], [ %773, %775 ]
  %806 = phi i32 [ %819, %818 ], [ 0, %775 ]
  %807 = getelementptr inbounds %struct.MaskLayerShape, ptr %805, i64 0, i32 5
  %808 = load i8, ptr %807, align 8, !tbaa !437
  %809 = and i8 %808, 1
  %810 = icmp eq i8 %809, 0
  br i1 %810, label %818, label %811

811:                                              ; preds = %804
  %812 = getelementptr inbounds %struct.MaskLayerShape, ptr %805, i64 0, i32 4
  %813 = load i32, ptr %812, align 4, !tbaa !314
  %814 = sitofp i32 %813 to float
  %815 = fcmp fast oge float %438, %814
  %816 = zext i1 %815 to i32
  %817 = add nsw i32 %806, %816
  br label %818

818:                                              ; preds = %811, %804
  %819 = phi i32 [ %806, %804 ], [ %817, %811 ]
  %820 = load ptr, ptr %805, align 8, !tbaa !33
  %821 = icmp eq ptr %820, null
  br i1 %821, label %822, label %804, !llvm.loop !438

822:                                              ; preds = %800, %776, %818, %771, %766
  %823 = phi i32 [ 0, %766 ], [ 0, %771 ], [ %819, %818 ], [ %783, %776 ], [ %801, %800 ]
  %824 = add nsw i32 %823, %430
  br label %825

825:                                              ; preds = %822, %763, %704, %437
  %826 = phi i32 [ %706, %704 ], [ %765, %763 ], [ %824, %822 ], [ %430, %437 ]
  %827 = load ptr, ptr %429, align 8, !tbaa !33
  %828 = icmp eq ptr %827, null
  br i1 %828, label %829, label %428, !llvm.loop !439

829:                                              ; preds = %825
  %830 = icmp eq i32 %826, 0
  br i1 %830, label %1266, label %831

831:                                              ; preds = %829
  %832 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 9
  store i32 %826, ptr %832, align 8, !tbaa !5
  %833 = load ptr, ptr @MEM_callocN, align 8, !tbaa !33
  %834 = sext i32 %826 to i64
  %835 = mul nsw i64 %834, 224
  %836 = call ptr %833(i64 noundef %835, ptr noundef nonnull @.str.24) #18
  %837 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 10
  store ptr %836, ptr %837, align 8, !tbaa !19
  %838 = load ptr, ptr @MEM_callocN, align 8, !tbaa !33
  %839 = load i32, ptr %832, align 8, !tbaa !5
  %840 = sext i32 %839 to i64
  %841 = mul nsw i64 %840, 56
  %842 = call ptr %838(i64 noundef %841, ptr noundef nonnull @.str.25) #18
  %843 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 12
  store ptr %842, ptr %843, align 8, !tbaa !143
  %844 = load ptr, ptr %837, align 8, !tbaa !19
  %845 = load i16, ptr %398, align 8
  switch i16 %845, label %863 [
    i16 9, label %846
    i16 3, label %846
  ]

846:                                              ; preds = %831, %831
  %847 = load i32, ptr %1, align 8, !tbaa !161
  %848 = icmp eq i32 %847, 20
  %849 = load ptr, ptr @MEM_callocN, align 8, !tbaa !33
  %850 = shl nsw i64 %834, 4
  br i1 %848, label %851, label %858

851:                                              ; preds = %846
  %852 = or i64 %850, 8
  %853 = call ptr %849(i64 noundef %852, ptr noundef nonnull @.str.26) #18
  %854 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 40
  store ptr %853, ptr %854, align 8, !tbaa !66
  %855 = load i32, ptr %392, align 4, !tbaa !24
  %856 = or i32 %855, 131072
  store i32 %856, ptr %392, align 4, !tbaa !24
  %857 = getelementptr inbounds float, ptr %853, i64 2
  br label %872

858:                                              ; preds = %846
  %859 = call ptr %849(i64 noundef %850, ptr noundef nonnull @.str.27) #18
  %860 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 40
  store ptr %859, ptr %860, align 8, !tbaa !66
  %861 = load i32, ptr %392, align 4, !tbaa !24
  %862 = or i32 %861, 131072
  store i32 %862, ptr %392, align 4, !tbaa !24
  br label %872

863:                                              ; preds = %831
  %864 = load i32, ptr %1, align 8, !tbaa !161
  %865 = icmp eq i32 %864, 20
  br i1 %865, label %866, label %872

866:                                              ; preds = %863
  %867 = load ptr, ptr @MEM_callocN, align 8, !tbaa !33
  %868 = call ptr %867(i64 noundef 8, ptr noundef nonnull @.str.28) #18
  %869 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 40
  store ptr %868, ptr %869, align 8, !tbaa !66
  %870 = load i32, ptr %392, align 4, !tbaa !24
  %871 = or i32 %870, 131072
  store i32 %871, ptr %392, align 4, !tbaa !24
  br label %872

872:                                              ; preds = %866, %863, %858, %851
  %873 = phi ptr [ %857, %851 ], [ %859, %858 ], [ null, %866 ], [ null, %863 ]
  %874 = load ptr, ptr %20, align 8, !tbaa !33
  %875 = icmp eq ptr %874, null
  br i1 %875, label %1193, label %876

876:                                              ; preds = %872, %1186
  %877 = phi ptr [ %1191, %1186 ], [ %874, %872 ]
  %878 = phi ptr [ %1190, %1186 ], [ %844, %872 ]
  %879 = phi ptr [ %1189, %1186 ], [ %873, %872 ]
  %880 = phi float [ %1188, %1186 ], [ %438, %872 ]
  %881 = phi ptr [ %1187, %1186 ], [ %842, %872 ]
  %882 = getelementptr inbounds %struct.bAnimListElem, ptr %877, i64 0, i32 3
  %883 = load i32, ptr %882, align 8, !tbaa !431
  switch i32 %883, label %1068 [
    i32 27, label %884
    i32 29, label %976
  ]

884:                                              ; preds = %876
  %885 = getelementptr inbounds %struct.bAnimListElem, ptr %877, i64 0, i32 2
  %886 = load ptr, ptr %885, align 8, !tbaa !319
  %887 = getelementptr inbounds %struct.bGPDlayer, ptr %886, i64 0, i32 2
  %888 = load ptr, ptr %887, align 8, !tbaa !33
  %889 = icmp eq ptr %888, null
  br i1 %889, label %971, label %890

890:                                              ; preds = %884
  %891 = load i8, ptr %423, align 8, !tbaa !263
  switch i8 %891, label %944 [
    i8 66, label %892
    i8 82, label %917
  ]

892:                                              ; preds = %890, %911
  %893 = phi ptr [ %915, %911 ], [ %888, %890 ]
  %894 = phi i32 [ %914, %911 ], [ 0, %890 ]
  %895 = phi ptr [ %913, %911 ], [ %878, %890 ]
  %896 = phi ptr [ %912, %911 ], [ %879, %890 ]
  %897 = getelementptr inbounds %struct.bGPDframe, ptr %893, i64 0, i32 4
  %898 = load i32, ptr %897, align 4, !tbaa !435
  %899 = and i32 %898, 2
  %900 = icmp eq i32 %899, 0
  br i1 %900, label %911, label %901

901:                                              ; preds = %892
  %902 = getelementptr inbounds %struct.bGPDframe, ptr %893, i64 0, i32 3
  %903 = load i32, ptr %902, align 8, !tbaa !307
  %904 = sitofp i32 %903 to float
  %905 = getelementptr inbounds %struct.TransData, ptr %895, i64 0, i32 5
  store ptr %896, ptr %905, align 8, !tbaa !423
  %906 = getelementptr inbounds %struct.TransData, ptr %895, i64 0, i32 6
  store float %904, ptr %906, align 8, !tbaa !424
  store float %904, ptr %896, align 8, !tbaa !185
  %907 = getelementptr inbounds %struct.tGPFtransdata, ptr %896, i64 0, i32 1
  store ptr %902, ptr %907, align 8, !tbaa !187
  %908 = getelementptr inbounds %struct.TransData, ptr %895, i64 1
  %909 = getelementptr inbounds %struct.tGPFtransdata, ptr %896, i64 1
  %910 = add nsw i32 %894, 1
  br label %911

911:                                              ; preds = %901, %892
  %912 = phi ptr [ %909, %901 ], [ %896, %892 ]
  %913 = phi ptr [ %908, %901 ], [ %895, %892 ]
  %914 = phi i32 [ %910, %901 ], [ %894, %892 ]
  %915 = load ptr, ptr %893, align 8, !tbaa !33
  %916 = icmp eq ptr %915, null
  br i1 %916, label %971, label %892, !llvm.loop !440

917:                                              ; preds = %890, %938
  %918 = phi ptr [ %942, %938 ], [ %888, %890 ]
  %919 = phi i32 [ %941, %938 ], [ 0, %890 ]
  %920 = phi ptr [ %940, %938 ], [ %878, %890 ]
  %921 = phi ptr [ %939, %938 ], [ %879, %890 ]
  %922 = getelementptr inbounds %struct.bGPDframe, ptr %918, i64 0, i32 4
  %923 = load i32, ptr %922, align 4, !tbaa !435
  %924 = and i32 %923, 2
  %925 = icmp eq i32 %924, 0
  br i1 %925, label %938, label %926

926:                                              ; preds = %917
  %927 = getelementptr inbounds %struct.bGPDframe, ptr %918, i64 0, i32 3
  %928 = load i32, ptr %927, align 8, !tbaa !307
  %929 = sitofp i32 %928 to float
  %930 = fcmp fast ugt float %880, %929
  br i1 %930, label %938, label %931

931:                                              ; preds = %926
  %932 = getelementptr inbounds %struct.TransData, ptr %920, i64 0, i32 5
  store ptr %921, ptr %932, align 8, !tbaa !423
  %933 = getelementptr inbounds %struct.TransData, ptr %920, i64 0, i32 6
  store float %929, ptr %933, align 8, !tbaa !424
  store float %929, ptr %921, align 8, !tbaa !185
  %934 = getelementptr inbounds %struct.tGPFtransdata, ptr %921, i64 0, i32 1
  store ptr %927, ptr %934, align 8, !tbaa !187
  %935 = getelementptr inbounds %struct.TransData, ptr %920, i64 1
  %936 = getelementptr inbounds %struct.tGPFtransdata, ptr %921, i64 1
  %937 = add nsw i32 %919, 1
  br label %938

938:                                              ; preds = %931, %926, %917
  %939 = phi ptr [ %936, %931 ], [ %921, %926 ], [ %921, %917 ]
  %940 = phi ptr [ %935, %931 ], [ %920, %926 ], [ %920, %917 ]
  %941 = phi i32 [ %937, %931 ], [ %919, %926 ], [ %919, %917 ]
  %942 = load ptr, ptr %918, align 8, !tbaa !33
  %943 = icmp eq ptr %942, null
  br i1 %943, label %971, label %917, !llvm.loop !440

944:                                              ; preds = %890, %965
  %945 = phi ptr [ %969, %965 ], [ %888, %890 ]
  %946 = phi i32 [ %968, %965 ], [ 0, %890 ]
  %947 = phi ptr [ %967, %965 ], [ %878, %890 ]
  %948 = phi ptr [ %966, %965 ], [ %879, %890 ]
  %949 = getelementptr inbounds %struct.bGPDframe, ptr %945, i64 0, i32 4
  %950 = load i32, ptr %949, align 4, !tbaa !435
  %951 = and i32 %950, 2
  %952 = icmp eq i32 %951, 0
  br i1 %952, label %965, label %953

953:                                              ; preds = %944
  %954 = getelementptr inbounds %struct.bGPDframe, ptr %945, i64 0, i32 3
  %955 = load i32, ptr %954, align 8, !tbaa !307
  %956 = sitofp i32 %955 to float
  %957 = fcmp fast ult float %880, %956
  br i1 %957, label %965, label %958

958:                                              ; preds = %953
  %959 = getelementptr inbounds %struct.TransData, ptr %947, i64 0, i32 5
  store ptr %948, ptr %959, align 8, !tbaa !423
  %960 = getelementptr inbounds %struct.TransData, ptr %947, i64 0, i32 6
  store float %956, ptr %960, align 8, !tbaa !424
  store float %956, ptr %948, align 8, !tbaa !185
  %961 = getelementptr inbounds %struct.tGPFtransdata, ptr %948, i64 0, i32 1
  store ptr %954, ptr %961, align 8, !tbaa !187
  %962 = getelementptr inbounds %struct.TransData, ptr %947, i64 1
  %963 = getelementptr inbounds %struct.tGPFtransdata, ptr %948, i64 1
  %964 = add nsw i32 %946, 1
  br label %965

965:                                              ; preds = %958, %953, %944
  %966 = phi ptr [ %963, %958 ], [ %948, %953 ], [ %948, %944 ]
  %967 = phi ptr [ %962, %958 ], [ %947, %953 ], [ %947, %944 ]
  %968 = phi i32 [ %964, %958 ], [ %946, %953 ], [ %946, %944 ]
  %969 = load ptr, ptr %945, align 8, !tbaa !33
  %970 = icmp eq ptr %969, null
  br i1 %970, label %971, label %944, !llvm.loop !440

971:                                              ; preds = %938, %911, %965, %884
  %972 = phi i32 [ 0, %884 ], [ %968, %965 ], [ %914, %911 ], [ %941, %938 ]
  %973 = sext i32 %972 to i64
  %974 = getelementptr inbounds %struct.TransData, ptr %878, i64 %973
  %975 = getelementptr inbounds %struct.tGPFtransdata, ptr %879, i64 %973
  br label %1186

976:                                              ; preds = %876
  %977 = getelementptr inbounds %struct.bAnimListElem, ptr %877, i64 0, i32 2
  %978 = load ptr, ptr %977, align 8, !tbaa !319
  %979 = getelementptr inbounds %struct.MaskLayer, ptr %978, i64 0, i32 4
  %980 = load ptr, ptr %979, align 8, !tbaa !33
  %981 = icmp eq ptr %980, null
  br i1 %981, label %1063, label %982

982:                                              ; preds = %976
  %983 = load i8, ptr %423, align 8, !tbaa !263
  switch i8 %983, label %1036 [
    i8 66, label %984
    i8 82, label %1009
  ]

984:                                              ; preds = %982, %1003
  %985 = phi ptr [ %1007, %1003 ], [ %980, %982 ]
  %986 = phi i32 [ %1006, %1003 ], [ 0, %982 ]
  %987 = phi ptr [ %1005, %1003 ], [ %878, %982 ]
  %988 = phi ptr [ %1004, %1003 ], [ %879, %982 ]
  %989 = getelementptr inbounds %struct.MaskLayerShape, ptr %985, i64 0, i32 5
  %990 = load i8, ptr %989, align 8, !tbaa !437
  %991 = and i8 %990, 1
  %992 = icmp eq i8 %991, 0
  br i1 %992, label %1003, label %993

993:                                              ; preds = %984
  %994 = getelementptr inbounds %struct.MaskLayerShape, ptr %985, i64 0, i32 4
  %995 = load i32, ptr %994, align 4, !tbaa !314
  %996 = sitofp i32 %995 to float
  %997 = getelementptr inbounds %struct.TransData, ptr %987, i64 0, i32 5
  store ptr %988, ptr %997, align 8, !tbaa !423
  %998 = getelementptr inbounds %struct.TransData, ptr %987, i64 0, i32 6
  store float %996, ptr %998, align 8, !tbaa !424
  store float %996, ptr %988, align 8, !tbaa !185
  %999 = getelementptr inbounds %struct.tGPFtransdata, ptr %988, i64 0, i32 1
  store ptr %994, ptr %999, align 8, !tbaa !187
  %1000 = getelementptr inbounds %struct.TransData, ptr %987, i64 1
  %1001 = getelementptr inbounds %struct.tGPFtransdata, ptr %988, i64 1
  %1002 = add nsw i32 %986, 1
  br label %1003

1003:                                             ; preds = %993, %984
  %1004 = phi ptr [ %1001, %993 ], [ %988, %984 ]
  %1005 = phi ptr [ %1000, %993 ], [ %987, %984 ]
  %1006 = phi i32 [ %1002, %993 ], [ %986, %984 ]
  %1007 = load ptr, ptr %985, align 8, !tbaa !33
  %1008 = icmp eq ptr %1007, null
  br i1 %1008, label %1063, label %984, !llvm.loop !441

1009:                                             ; preds = %982, %1030
  %1010 = phi ptr [ %1034, %1030 ], [ %980, %982 ]
  %1011 = phi i32 [ %1033, %1030 ], [ 0, %982 ]
  %1012 = phi ptr [ %1032, %1030 ], [ %878, %982 ]
  %1013 = phi ptr [ %1031, %1030 ], [ %879, %982 ]
  %1014 = getelementptr inbounds %struct.MaskLayerShape, ptr %1010, i64 0, i32 5
  %1015 = load i8, ptr %1014, align 8, !tbaa !437
  %1016 = and i8 %1015, 1
  %1017 = icmp eq i8 %1016, 0
  br i1 %1017, label %1030, label %1018

1018:                                             ; preds = %1009
  %1019 = getelementptr inbounds %struct.MaskLayerShape, ptr %1010, i64 0, i32 4
  %1020 = load i32, ptr %1019, align 4, !tbaa !314
  %1021 = sitofp i32 %1020 to float
  %1022 = fcmp fast ugt float %880, %1021
  br i1 %1022, label %1030, label %1023

1023:                                             ; preds = %1018
  %1024 = getelementptr inbounds %struct.TransData, ptr %1012, i64 0, i32 5
  store ptr %1013, ptr %1024, align 8, !tbaa !423
  %1025 = getelementptr inbounds %struct.TransData, ptr %1012, i64 0, i32 6
  store float %1021, ptr %1025, align 8, !tbaa !424
  store float %1021, ptr %1013, align 8, !tbaa !185
  %1026 = getelementptr inbounds %struct.tGPFtransdata, ptr %1013, i64 0, i32 1
  store ptr %1019, ptr %1026, align 8, !tbaa !187
  %1027 = getelementptr inbounds %struct.TransData, ptr %1012, i64 1
  %1028 = getelementptr inbounds %struct.tGPFtransdata, ptr %1013, i64 1
  %1029 = add nsw i32 %1011, 1
  br label %1030

1030:                                             ; preds = %1023, %1018, %1009
  %1031 = phi ptr [ %1028, %1023 ], [ %1013, %1018 ], [ %1013, %1009 ]
  %1032 = phi ptr [ %1027, %1023 ], [ %1012, %1018 ], [ %1012, %1009 ]
  %1033 = phi i32 [ %1029, %1023 ], [ %1011, %1018 ], [ %1011, %1009 ]
  %1034 = load ptr, ptr %1010, align 8, !tbaa !33
  %1035 = icmp eq ptr %1034, null
  br i1 %1035, label %1063, label %1009, !llvm.loop !441

1036:                                             ; preds = %982, %1057
  %1037 = phi ptr [ %1061, %1057 ], [ %980, %982 ]
  %1038 = phi i32 [ %1060, %1057 ], [ 0, %982 ]
  %1039 = phi ptr [ %1059, %1057 ], [ %878, %982 ]
  %1040 = phi ptr [ %1058, %1057 ], [ %879, %982 ]
  %1041 = getelementptr inbounds %struct.MaskLayerShape, ptr %1037, i64 0, i32 5
  %1042 = load i8, ptr %1041, align 8, !tbaa !437
  %1043 = and i8 %1042, 1
  %1044 = icmp eq i8 %1043, 0
  br i1 %1044, label %1057, label %1045

1045:                                             ; preds = %1036
  %1046 = getelementptr inbounds %struct.MaskLayerShape, ptr %1037, i64 0, i32 4
  %1047 = load i32, ptr %1046, align 4, !tbaa !314
  %1048 = sitofp i32 %1047 to float
  %1049 = fcmp fast ult float %880, %1048
  br i1 %1049, label %1057, label %1050

1050:                                             ; preds = %1045
  %1051 = getelementptr inbounds %struct.TransData, ptr %1039, i64 0, i32 5
  store ptr %1040, ptr %1051, align 8, !tbaa !423
  %1052 = getelementptr inbounds %struct.TransData, ptr %1039, i64 0, i32 6
  store float %1048, ptr %1052, align 8, !tbaa !424
  store float %1048, ptr %1040, align 8, !tbaa !185
  %1053 = getelementptr inbounds %struct.tGPFtransdata, ptr %1040, i64 0, i32 1
  store ptr %1046, ptr %1053, align 8, !tbaa !187
  %1054 = getelementptr inbounds %struct.TransData, ptr %1039, i64 1
  %1055 = getelementptr inbounds %struct.tGPFtransdata, ptr %1040, i64 1
  %1056 = add nsw i32 %1038, 1
  br label %1057

1057:                                             ; preds = %1050, %1045, %1036
  %1058 = phi ptr [ %1055, %1050 ], [ %1040, %1045 ], [ %1040, %1036 ]
  %1059 = phi ptr [ %1054, %1050 ], [ %1039, %1045 ], [ %1039, %1036 ]
  %1060 = phi i32 [ %1056, %1050 ], [ %1038, %1045 ], [ %1038, %1036 ]
  %1061 = load ptr, ptr %1037, align 8, !tbaa !33
  %1062 = icmp eq ptr %1061, null
  br i1 %1062, label %1063, label %1036, !llvm.loop !441

1063:                                             ; preds = %1030, %1003, %1057, %976
  %1064 = phi i32 [ 0, %976 ], [ %1060, %1057 ], [ %1006, %1003 ], [ %1033, %1030 ]
  %1065 = sext i32 %1064 to i64
  %1066 = getelementptr inbounds %struct.TransData, ptr %878, i64 %1065
  %1067 = getelementptr inbounds %struct.tGPFtransdata, ptr %879, i64 %1065
  br label %1186

1068:                                             ; preds = %876
  %1069 = call ptr @ANIM_nla_mapping_get(ptr noundef nonnull %19, ptr noundef nonnull %877) #18
  %1070 = getelementptr inbounds %struct.bAnimListElem, ptr %877, i64 0, i32 8
  %1071 = load ptr, ptr %1070, align 8, !tbaa !192
  %1072 = icmp eq ptr %1069, null
  %1073 = load i32, ptr %427, align 8, !tbaa !224
  %1074 = sitofp i32 %1073 to float
  br i1 %1072, label %1131, label %1075

1075:                                             ; preds = %1068
  %1076 = call fast nofpclass(nan inf) float @BKE_nla_tweakedit_remap(ptr noundef nonnull %1069, float noundef nofpclass(nan inf) %1074, i16 noundef signext 1) #18
  %1077 = load i8, ptr %423, align 8, !tbaa !263
  %1078 = icmp eq ptr %1071, null
  br i1 %1078, label %1186, label %1079

1079:                                             ; preds = %1075
  %1080 = getelementptr inbounds %struct.FCurve, ptr %1071, i64 0, i32 5
  %1081 = load ptr, ptr %1080, align 8, !tbaa !194
  %1082 = icmp eq ptr %1081, null
  br i1 %1082, label %1186, label %1083

1083:                                             ; preds = %1079
  %1084 = getelementptr inbounds %struct.FCurve, ptr %1071, i64 0, i32 7
  %1085 = load i32, ptr %1084, align 8, !tbaa !196
  %1086 = icmp eq i32 %1085, 0
  br i1 %1086, label %1186, label %1087

1087:                                             ; preds = %1083, %1125
  %1088 = phi i32 [ %1128, %1125 ], [ 0, %1083 ]
  %1089 = phi ptr [ %1127, %1125 ], [ %881, %1083 ]
  %1090 = phi ptr [ %1129, %1125 ], [ %1081, %1083 ]
  %1091 = phi ptr [ %1126, %1125 ], [ %878, %1083 ]
  %1092 = getelementptr inbounds %struct.BezTriple, ptr %1090, i64 0, i32 8
  %1093 = load i8, ptr %1092, align 4, !tbaa !340
  %1094 = and i8 %1093, 1
  %1095 = icmp eq i8 %1094, 0
  br i1 %1095, label %1125, label %1096

1096:                                             ; preds = %1087
  %1097 = getelementptr inbounds [3 x [3 x float]], ptr %1090, i64 0, i64 1
  %1098 = load float, ptr %1097, align 4, !tbaa !82
  switch i8 %1077, label %1101 [
    i8 66, label %1103
    i8 82, label %1099
  ]

1099:                                             ; preds = %1096
  %1100 = fcmp fast ult float %1098, %1076
  br i1 %1100, label %1125, label %1103

1101:                                             ; preds = %1096
  %1102 = fcmp fast ugt float %1098, %1076
  br i1 %1102, label %1125, label %1103

1103:                                             ; preds = %1101, %1099, %1096
  %1104 = getelementptr inbounds %struct.TransData, ptr %1091, i64 0, i32 5
  store ptr %1097, ptr %1104, align 8, !tbaa !423
  %1105 = getelementptr inbounds %struct.TransData, ptr %1091, i64 0, i32 6
  store float %1098, ptr %1105, align 8, !tbaa !424
  %1106 = getelementptr inbounds %struct.TransData, ptr %1091, i64 0, i32 15
  store ptr %1069, ptr %1106, align 8, !tbaa !144
  %1107 = getelementptr inbounds %struct.TransData, ptr %1091, i64 0, i32 16
  %1108 = load i32, ptr %1107, align 8, !tbaa !20
  %1109 = or i32 %1108, 393216
  store i32 %1109, ptr %1107, align 8, !tbaa !20
  %1110 = getelementptr inbounds %struct.TransData2D, ptr %1089, i64 0, i32 2
  store ptr %1090, ptr %1110, align 8, !tbaa !209
  %1111 = getelementptr inbounds [3 x [3 x float]], ptr %1090, i64 0, i64 2
  %1112 = getelementptr inbounds %struct.TransData2D, ptr %1089, i64 0, i32 3
  store ptr %1111, ptr %1112, align 8, !tbaa !210
  %1113 = getelementptr inbounds %struct.TransData2D, ptr %1089, i64 0, i32 4
  %1114 = load float, ptr %1090, align 4, !tbaa !82
  store float %1114, ptr %1113, align 4, !tbaa !82
  %1115 = getelementptr inbounds float, ptr %1090, i64 1
  %1116 = load float, ptr %1115, align 4, !tbaa !82
  %1117 = getelementptr inbounds %struct.TransData2D, ptr %1089, i64 0, i32 4, i64 1
  store float %1116, ptr %1117, align 4, !tbaa !82
  %1118 = getelementptr inbounds %struct.TransData2D, ptr %1089, i64 0, i32 5
  %1119 = load float, ptr %1111, align 4, !tbaa !82
  store float %1119, ptr %1118, align 4, !tbaa !82
  %1120 = getelementptr inbounds [3 x [3 x float]], ptr %1090, i64 0, i64 2, i64 1
  %1121 = load float, ptr %1120, align 4, !tbaa !82
  %1122 = getelementptr inbounds %struct.TransData2D, ptr %1089, i64 0, i32 5, i64 1
  store float %1121, ptr %1122, align 4, !tbaa !82
  %1123 = getelementptr inbounds %struct.TransData, ptr %1091, i64 1
  %1124 = getelementptr inbounds %struct.TransData2D, ptr %1089, i64 1
  br label %1125

1125:                                             ; preds = %1103, %1101, %1099, %1087
  %1126 = phi ptr [ %1123, %1103 ], [ %1091, %1101 ], [ %1091, %1087 ], [ %1091, %1099 ]
  %1127 = phi ptr [ %1124, %1103 ], [ %1089, %1101 ], [ %1089, %1087 ], [ %1089, %1099 ]
  %1128 = add nuw nsw i32 %1088, 1
  %1129 = getelementptr inbounds %struct.BezTriple, ptr %1090, i64 1
  %1130 = icmp eq i32 %1128, %1085
  br i1 %1130, label %1186, label %1087, !llvm.loop !442

1131:                                             ; preds = %1068
  %1132 = load i8, ptr %423, align 8, !tbaa !263
  %1133 = icmp eq ptr %1071, null
  br i1 %1133, label %1186, label %1134

1134:                                             ; preds = %1131
  %1135 = getelementptr inbounds %struct.FCurve, ptr %1071, i64 0, i32 5
  %1136 = load ptr, ptr %1135, align 8, !tbaa !194
  %1137 = icmp eq ptr %1136, null
  br i1 %1137, label %1186, label %1138

1138:                                             ; preds = %1134
  %1139 = getelementptr inbounds %struct.FCurve, ptr %1071, i64 0, i32 7
  %1140 = load i32, ptr %1139, align 8, !tbaa !196
  %1141 = icmp eq i32 %1140, 0
  br i1 %1141, label %1186, label %1142

1142:                                             ; preds = %1138, %1180
  %1143 = phi i32 [ %1183, %1180 ], [ 0, %1138 ]
  %1144 = phi ptr [ %1182, %1180 ], [ %881, %1138 ]
  %1145 = phi ptr [ %1184, %1180 ], [ %1136, %1138 ]
  %1146 = phi ptr [ %1181, %1180 ], [ %878, %1138 ]
  %1147 = getelementptr inbounds %struct.BezTriple, ptr %1145, i64 0, i32 8
  %1148 = load i8, ptr %1147, align 4, !tbaa !340
  %1149 = and i8 %1148, 1
  %1150 = icmp eq i8 %1149, 0
  br i1 %1150, label %1180, label %1151

1151:                                             ; preds = %1142
  %1152 = getelementptr inbounds [3 x [3 x float]], ptr %1145, i64 0, i64 1
  %1153 = load float, ptr %1152, align 4, !tbaa !82
  switch i8 %1132, label %1156 [
    i8 66, label %1158
    i8 82, label %1154
  ]

1154:                                             ; preds = %1151
  %1155 = fcmp fast ult float %1153, %1074
  br i1 %1155, label %1180, label %1158

1156:                                             ; preds = %1151
  %1157 = fcmp fast ugt float %1153, %1074
  br i1 %1157, label %1180, label %1158

1158:                                             ; preds = %1156, %1154, %1151
  %1159 = getelementptr inbounds %struct.TransData, ptr %1146, i64 0, i32 5
  store ptr %1152, ptr %1159, align 8, !tbaa !423
  %1160 = getelementptr inbounds %struct.TransData, ptr %1146, i64 0, i32 6
  store float %1153, ptr %1160, align 8, !tbaa !424
  %1161 = getelementptr inbounds %struct.TransData, ptr %1146, i64 0, i32 15
  store ptr null, ptr %1161, align 8, !tbaa !144
  %1162 = getelementptr inbounds %struct.TransData, ptr %1146, i64 0, i32 16
  %1163 = load i32, ptr %1162, align 8, !tbaa !20
  %1164 = or i32 %1163, 393216
  store i32 %1164, ptr %1162, align 8, !tbaa !20
  %1165 = getelementptr inbounds %struct.TransData2D, ptr %1144, i64 0, i32 2
  store ptr %1145, ptr %1165, align 8, !tbaa !209
  %1166 = getelementptr inbounds [3 x [3 x float]], ptr %1145, i64 0, i64 2
  %1167 = getelementptr inbounds %struct.TransData2D, ptr %1144, i64 0, i32 3
  store ptr %1166, ptr %1167, align 8, !tbaa !210
  %1168 = getelementptr inbounds %struct.TransData2D, ptr %1144, i64 0, i32 4
  %1169 = load float, ptr %1145, align 4, !tbaa !82
  store float %1169, ptr %1168, align 4, !tbaa !82
  %1170 = getelementptr inbounds float, ptr %1145, i64 1
  %1171 = load float, ptr %1170, align 4, !tbaa !82
  %1172 = getelementptr inbounds %struct.TransData2D, ptr %1144, i64 0, i32 4, i64 1
  store float %1171, ptr %1172, align 4, !tbaa !82
  %1173 = getelementptr inbounds %struct.TransData2D, ptr %1144, i64 0, i32 5
  %1174 = load float, ptr %1166, align 4, !tbaa !82
  store float %1174, ptr %1173, align 4, !tbaa !82
  %1175 = getelementptr inbounds [3 x [3 x float]], ptr %1145, i64 0, i64 2, i64 1
  %1176 = load float, ptr %1175, align 4, !tbaa !82
  %1177 = getelementptr inbounds %struct.TransData2D, ptr %1144, i64 0, i32 5, i64 1
  store float %1176, ptr %1177, align 4, !tbaa !82
  %1178 = getelementptr inbounds %struct.TransData, ptr %1146, i64 1
  %1179 = getelementptr inbounds %struct.TransData2D, ptr %1144, i64 1
  br label %1180

1180:                                             ; preds = %1158, %1156, %1154, %1142
  %1181 = phi ptr [ %1178, %1158 ], [ %1146, %1156 ], [ %1146, %1142 ], [ %1146, %1154 ]
  %1182 = phi ptr [ %1179, %1158 ], [ %1144, %1156 ], [ %1144, %1142 ], [ %1144, %1154 ]
  %1183 = add nuw nsw i32 %1143, 1
  %1184 = getelementptr inbounds %struct.BezTriple, ptr %1145, i64 1
  %1185 = icmp eq i32 %1183, %1140
  br i1 %1185, label %1186, label %1142, !llvm.loop !442

1186:                                             ; preds = %1125, %1180, %1138, %1134, %1131, %1083, %1079, %1075, %1063, %971
  %1187 = phi ptr [ %881, %1063 ], [ %881, %971 ], [ %881, %1075 ], [ %881, %1079 ], [ %881, %1083 ], [ %881, %1131 ], [ %881, %1134 ], [ %881, %1138 ], [ %1182, %1180 ], [ %1127, %1125 ]
  %1188 = phi float [ %880, %1063 ], [ %880, %971 ], [ %1076, %1075 ], [ %1076, %1079 ], [ %1076, %1083 ], [ %1074, %1131 ], [ %1074, %1134 ], [ %1074, %1138 ], [ %1074, %1180 ], [ %1076, %1125 ]
  %1189 = phi ptr [ %1067, %1063 ], [ %975, %971 ], [ %879, %1075 ], [ %879, %1079 ], [ %879, %1083 ], [ %879, %1131 ], [ %879, %1134 ], [ %879, %1138 ], [ %879, %1180 ], [ %879, %1125 ]
  %1190 = phi ptr [ %1066, %1063 ], [ %974, %971 ], [ %878, %1075 ], [ %878, %1079 ], [ %878, %1083 ], [ %878, %1131 ], [ %878, %1134 ], [ %878, %1138 ], [ %1181, %1180 ], [ %1126, %1125 ]
  %1191 = load ptr, ptr %877, align 8, !tbaa !33
  %1192 = icmp eq ptr %1191, null
  br i1 %1192, label %1193, label %876, !llvm.loop !443

1193:                                             ; preds = %1186, %872
  %1194 = load i32, ptr %1, align 8, !tbaa !161
  %1195 = icmp eq i32 %1194, 20
  br i1 %1195, label %1196, label %1266

1196:                                             ; preds = %1193
  %1197 = icmp sgt i32 %826, 0
  br i1 %1197, label %1198, label %1260

1198:                                             ; preds = %1196
  %1199 = load ptr, ptr %837, align 8, !tbaa !19
  %1200 = and i32 %826, 1
  %1201 = icmp eq i32 %826, 1
  br i1 %1201, label %1226, label %1202

1202:                                             ; preds = %1198
  %1203 = and i32 %826, -2
  br label %1204

1204:                                             ; preds = %1204, %1202
  %1205 = phi float [ -1.000000e+09, %1202 ], [ %1222, %1204 ]
  %1206 = phi float [ 1.000000e+09, %1202 ], [ %1220, %1204 ]
  %1207 = phi ptr [ %1199, %1202 ], [ %1223, %1204 ]
  %1208 = phi i32 [ 0, %1202 ], [ %1224, %1204 ]
  %1209 = getelementptr inbounds %struct.TransData, ptr %1207, i64 0, i32 5
  %1210 = load ptr, ptr %1209, align 8, !tbaa !423
  %1211 = load float, ptr %1210, align 4, !tbaa !82
  %1212 = fcmp fast ogt float %1206, %1211
  %1213 = select i1 %1212, float %1211, float %1206
  %1214 = fcmp fast olt float %1205, %1211
  %1215 = select i1 %1214, float %1211, float %1205
  %1216 = getelementptr inbounds %struct.TransData, ptr %1207, i64 1, i32 5
  %1217 = load ptr, ptr %1216, align 8, !tbaa !423
  %1218 = load float, ptr %1217, align 4, !tbaa !82
  %1219 = fcmp fast ogt float %1213, %1218
  %1220 = select i1 %1219, float %1218, float %1213
  %1221 = fcmp fast olt float %1215, %1218
  %1222 = select i1 %1221, float %1218, float %1215
  %1223 = getelementptr inbounds %struct.TransData, ptr %1207, i64 2
  %1224 = add i32 %1208, 2
  %1225 = icmp eq i32 %1224, %1203
  br i1 %1225, label %1226, label %1204, !llvm.loop !444

1226:                                             ; preds = %1204, %1198
  %1227 = phi float [ undef, %1198 ], [ %1220, %1204 ]
  %1228 = phi float [ undef, %1198 ], [ %1222, %1204 ]
  %1229 = phi float [ -1.000000e+09, %1198 ], [ %1222, %1204 ]
  %1230 = phi float [ 1.000000e+09, %1198 ], [ %1220, %1204 ]
  %1231 = phi ptr [ %1199, %1198 ], [ %1223, %1204 ]
  %1232 = icmp eq i32 %1200, 0
  br i1 %1232, label %1241, label %1233

1233:                                             ; preds = %1226
  %1234 = getelementptr inbounds %struct.TransData, ptr %1231, i64 0, i32 5
  %1235 = load ptr, ptr %1234, align 8, !tbaa !423
  %1236 = load float, ptr %1235, align 4, !tbaa !82
  %1237 = fcmp fast ogt float %1230, %1236
  %1238 = select i1 %1237, float %1236, float %1230
  %1239 = fcmp fast olt float %1229, %1236
  %1240 = select i1 %1239, float %1236, float %1229
  br label %1241

1241:                                             ; preds = %1226, %1233
  %1242 = phi float [ %1227, %1226 ], [ %1238, %1233 ]
  %1243 = phi float [ %1228, %1226 ], [ %1240, %1233 ]
  %1244 = fcmp fast oeq float %1242, %1243
  br i1 %1244, label %1245, label %1260

1245:                                             ; preds = %1241
  %1246 = getelementptr inbounds %struct.Scene, ptr %29, i64 0, i32 22, i32 13
  %1247 = load i16, ptr %1246, align 8, !tbaa !445
  %1248 = and i16 %1247, 1
  %1249 = icmp eq i16 %1248, 0
  %1250 = getelementptr inbounds %struct.Scene, ptr %29, i64 0, i32 22, i32 9
  %1251 = getelementptr inbounds %struct.Scene, ptr %29, i64 0, i32 22, i32 6
  %1252 = select i1 %1249, ptr %1251, ptr %1250
  %1253 = load i32, ptr %1252, align 4, !tbaa !27
  %1254 = sitofp i32 %1253 to float
  %1255 = getelementptr inbounds %struct.Scene, ptr %29, i64 0, i32 22, i32 10
  %1256 = getelementptr inbounds %struct.Scene, ptr %29, i64 0, i32 22, i32 7
  %1257 = select i1 %1249, ptr %1256, ptr %1255
  %1258 = load i32, ptr %1257, align 4, !tbaa !27
  %1259 = sitofp i32 %1258 to float
  br label %1260

1260:                                             ; preds = %1245, %1241, %1196
  %1261 = phi float [ %1254, %1245 ], [ %1242, %1241 ], [ 1.000000e+09, %1196 ]
  %1262 = phi float [ %1259, %1245 ], [ %1243, %1241 ], [ -1.000000e+09, %1196 ]
  %1263 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 40
  %1264 = load ptr, ptr %1263, align 8, !tbaa !66
  store float %1261, ptr %1264, align 4, !tbaa !82
  %1265 = getelementptr inbounds float, ptr %1264, i64 1
  store float %1262, ptr %1265, align 4, !tbaa !82
  br label %1266

1266:                                             ; preds = %1260, %1193, %829, %421
  call void @ANIM_animdata_freelist(ptr noundef nonnull %20) #18
  br label %1267

1267:                                             ; preds = %391, %1266
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %20) #18
  call void @llvm.lifetime.end.p0(i64 80, ptr nonnull %19) #18
  br label %2896

1268:                                             ; preds = %350
  %1269 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 1
  %1270 = load i32, ptr %1269, align 4, !tbaa !24
  %1271 = or i32 %1270, 32832
  store i32 %1271, ptr %1269, align 4, !tbaa !24
  call void @llvm.lifetime.start.p0(i64 80, ptr nonnull %15) #18
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %16) #18
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %16, i8 0, i64 16, i1 false)
  %1272 = call zeroext i8 @ANIM_animdata_get_context(ptr noundef %0, ptr noundef nonnull %15) #18
  %1273 = icmp eq i8 %1272, 0
  br i1 %1273, label %1562, label %1274

1274:                                             ; preds = %1268
  %1275 = getelementptr inbounds %struct.bAnimContext, ptr %15, i64 0, i32 6
  %1276 = load ptr, ptr %1275, align 8, !tbaa !446
  %1277 = load ptr, ptr %15, align 8, !tbaa !294
  %1278 = getelementptr inbounds %struct.bAnimContext, ptr %15, i64 0, i32 1
  %1279 = load i16, ptr %1278, align 8, !tbaa !317
  %1280 = sext i16 %1279 to i32
  %1281 = call i64 @ANIM_animdata_filter(ptr noundef nonnull %15, ptr noundef nonnull %16, i32 noundef 259, ptr noundef %1277, i32 noundef %1280) #18
  %1282 = load i32, ptr %1, align 8, !tbaa !161
  %1283 = icmp eq i32 %1282, 22
  br i1 %1283, label %1284, label %1300

1284:                                             ; preds = %1274
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %17) #18
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %18) #18
  %1285 = getelementptr inbounds %struct.bAnimContext, ptr %15, i64 0, i32 7
  %1286 = load ptr, ptr %1285, align 8, !tbaa !430
  %1287 = getelementptr inbounds %struct.ARegion, ptr %1286, i64 0, i32 2
  %1288 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 22
  %1289 = load i32, ptr %1288, align 8, !tbaa !27
  %1290 = sitofp i32 %1289 to float
  %1291 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 22, i64 1
  %1292 = load i32, ptr %1291, align 4, !tbaa !27
  %1293 = sitofp i32 %1292 to float
  call void @UI_view2d_region_to_view(ptr noundef nonnull %1287, float noundef nofpclass(nan inf) %1290, float noundef nofpclass(nan inf) %1293, ptr noundef nonnull %17, ptr noundef nonnull %18) #18
  %1294 = load float, ptr %17, align 4, !tbaa !82
  %1295 = getelementptr inbounds %struct.Scene, ptr %29, i64 0, i32 22, i32 5
  %1296 = load i32, ptr %1295, align 8, !tbaa !224
  %1297 = sitofp i32 %1296 to float
  %1298 = fcmp fast ogt float %1294, %1297
  %1299 = select i1 %1298, i8 82, i8 76
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %18) #18
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %17) #18
  br label %1300

1300:                                             ; preds = %1284, %1274
  %1301 = phi i8 [ %1299, %1284 ], [ 66, %1274 ]
  %1302 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 26
  store i8 %1301, ptr %1302, align 8
  %1303 = load ptr, ptr %16, align 8, !tbaa !33
  %1304 = icmp eq ptr %1303, null
  br i1 %1304, label %1561, label %1305

1305:                                             ; preds = %1300
  %1306 = getelementptr inbounds %struct.Scene, ptr %29, i64 0, i32 22, i32 5
  br label %1311

1307:                                             ; preds = %1353, %1311
  %1308 = phi i32 [ %1313, %1311 ], [ %1354, %1353 ]
  %1309 = load ptr, ptr %1312, align 8, !tbaa !33
  %1310 = icmp eq ptr %1309, null
  br i1 %1310, label %1357, label %1311, !llvm.loop !447

1311:                                             ; preds = %1307, %1305
  %1312 = phi ptr [ %1303, %1305 ], [ %1309, %1307 ]
  %1313 = phi i32 [ 0, %1305 ], [ %1308, %1307 ]
  %1314 = getelementptr inbounds %struct.bAnimListElem, ptr %1312, i64 0, i32 2
  %1315 = load ptr, ptr %1314, align 8, !tbaa !319
  %1316 = getelementptr inbounds %struct.NlaTrack, ptr %1315, i64 0, i32 2
  call void @BKE_nlastrips_make_metas(ptr noundef nonnull %1316, i8 noundef zeroext 1) #18
  %1317 = load ptr, ptr %1316, align 8, !tbaa !33
  %1318 = icmp eq ptr %1317, null
  br i1 %1318, label %1307, label %1319

1319:                                             ; preds = %1311, %1353
  %1320 = phi ptr [ %1355, %1353 ], [ %1317, %1311 ]
  %1321 = phi i32 [ %1354, %1353 ], [ %1313, %1311 ]
  %1322 = getelementptr inbounds %struct.NlaStrip, ptr %1320, i64 0, i32 21
  %1323 = load i16, ptr %1322, align 2, !tbaa !448
  %1324 = icmp eq i16 %1323, 1
  br i1 %1324, label %1353, label %1325

1325:                                             ; preds = %1319
  %1326 = getelementptr inbounds %struct.NlaStrip, ptr %1320, i64 0, i32 23
  %1327 = load i32, ptr %1326, align 8, !tbaa !450
  %1328 = and i32 %1327, 2
  %1329 = icmp eq i32 %1328, 0
  br i1 %1329, label %1353, label %1330

1330:                                             ; preds = %1325
  %1331 = load i8, ptr %1302, align 8, !tbaa !263
  %1332 = getelementptr inbounds %struct.NlaStrip, ptr %1320, i64 0, i32 10
  %1333 = load float, ptr %1332, align 8, !tbaa !451
  %1334 = load i32, ptr %1306, align 8, !tbaa !224
  %1335 = sitofp i32 %1334 to float
  switch i8 %1331, label %1341 [
    i8 66, label %1346
    i8 82, label %1336
  ]

1336:                                             ; preds = %1330
  %1337 = fcmp fast oge float %1333, %1335
  %1338 = getelementptr inbounds %struct.NlaStrip, ptr %1320, i64 0, i32 11
  %1339 = load float, ptr %1338, align 4, !tbaa !452
  %1340 = fcmp fast oge float %1339, %1335
  br label %1346

1341:                                             ; preds = %1330
  %1342 = fcmp fast ole float %1333, %1335
  %1343 = getelementptr inbounds %struct.NlaStrip, ptr %1320, i64 0, i32 11
  %1344 = load float, ptr %1343, align 4, !tbaa !452
  %1345 = fcmp fast ole float %1344, %1335
  br label %1346

1346:                                             ; preds = %1341, %1336, %1330
  %1347 = phi i1 [ %1337, %1336 ], [ %1342, %1341 ], [ true, %1330 ]
  %1348 = phi i1 [ %1340, %1336 ], [ %1345, %1341 ], [ true, %1330 ]
  %1349 = zext i1 %1347 to i32
  %1350 = add nsw i32 %1321, %1349
  %1351 = zext i1 %1348 to i32
  %1352 = add nsw i32 %1350, %1351
  br label %1353

1353:                                             ; preds = %1346, %1325, %1319
  %1354 = phi i32 [ %1321, %1325 ], [ %1321, %1319 ], [ %1352, %1346 ]
  %1355 = load ptr, ptr %1320, align 8, !tbaa !33
  %1356 = icmp eq ptr %1355, null
  br i1 %1356, label %1307, label %1319, !llvm.loop !453

1357:                                             ; preds = %1307
  %1358 = icmp eq i32 %1308, 0
  br i1 %1358, label %1359, label %1369

1359:                                             ; preds = %1357
  %1360 = load ptr, ptr %16, align 8, !tbaa !33
  %1361 = icmp eq ptr %1360, null
  br i1 %1361, label %1561, label %1362

1362:                                             ; preds = %1359, %1362
  %1363 = phi ptr [ %1367, %1362 ], [ %1360, %1359 ]
  %1364 = getelementptr inbounds %struct.bAnimListElem, ptr %1363, i64 0, i32 2
  %1365 = load ptr, ptr %1364, align 8, !tbaa !319
  %1366 = getelementptr inbounds %struct.NlaTrack, ptr %1365, i64 0, i32 2
  call void @BKE_nlastrips_clear_metas(ptr noundef nonnull %1366, i8 noundef zeroext 0, i8 noundef zeroext 1) #18
  %1367 = load ptr, ptr %1363, align 8, !tbaa !33
  %1368 = icmp eq ptr %1367, null
  br i1 %1368, label %1561, label %1362, !llvm.loop !454

1369:                                             ; preds = %1357
  %1370 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 9
  store i32 %1308, ptr %1370, align 8, !tbaa !5
  %1371 = load ptr, ptr @MEM_callocN, align 8, !tbaa !33
  %1372 = sext i32 %1308 to i64
  %1373 = mul nsw i64 %1372, 224
  %1374 = call ptr %1371(i64 noundef %1373, ptr noundef nonnull @.str.29) #18
  %1375 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 10
  store ptr %1374, ptr %1375, align 8, !tbaa !19
  %1376 = load ptr, ptr @MEM_callocN, align 8, !tbaa !33
  %1377 = load i32, ptr %1370, align 8, !tbaa !5
  %1378 = sext i32 %1377 to i64
  %1379 = shl nsw i64 %1378, 6
  %1380 = call ptr %1376(i64 noundef %1379, ptr noundef nonnull @.str.30) #18
  %1381 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 40
  store ptr %1380, ptr %1381, align 8, !tbaa !66
  %1382 = load i32, ptr %1269, align 4, !tbaa !24
  %1383 = or i32 %1382, 131072
  store i32 %1383, ptr %1269, align 4, !tbaa !24
  %1384 = load ptr, ptr %16, align 8, !tbaa !33
  %1385 = icmp eq ptr %1384, null
  br i1 %1385, label %1561, label %1386

1386:                                             ; preds = %1369
  %1387 = icmp eq ptr %1276, null
  %1388 = getelementptr inbounds %struct.SpaceNla, ptr %1276, i64 0, i32 7
  br label %1389

1389:                                             ; preds = %1556, %1386
  %1390 = phi ptr [ %1384, %1386 ], [ %1559, %1556 ]
  %1391 = phi ptr [ %1374, %1386 ], [ %1558, %1556 ]
  %1392 = phi ptr [ %1380, %1386 ], [ %1557, %1556 ]
  %1393 = getelementptr inbounds %struct.bAnimListElem, ptr %1390, i64 0, i32 3
  %1394 = load i32, ptr %1393, align 8, !tbaa !431
  %1395 = icmp eq i32 %1394, 30
  br i1 %1395, label %1396, label %1556

1396:                                             ; preds = %1389
  %1397 = getelementptr inbounds %struct.bAnimListElem, ptr %1390, i64 0, i32 2
  %1398 = load ptr, ptr %1397, align 8, !tbaa !319
  %1399 = getelementptr inbounds %struct.NlaTrack, ptr %1398, i64 0, i32 2
  %1400 = load ptr, ptr %1399, align 8, !tbaa !33
  %1401 = icmp eq ptr %1400, null
  br i1 %1401, label %1556, label %1402

1402:                                             ; preds = %1396
  %1403 = getelementptr inbounds %struct.bAnimListElem, ptr %1390, i64 0, i32 10
  %1404 = load ptr, ptr %1403, align 8, !tbaa !455
  %1405 = getelementptr inbounds %struct.bAnimListElem, ptr %1390, i64 0, i32 9
  %1406 = getelementptr inbounds %struct.AnimData, ptr %1404, i64 0, i32 3
  br label %1407

1407:                                             ; preds = %1551, %1402
  %1408 = phi ptr [ %1400, %1402 ], [ %1554, %1551 ]
  %1409 = phi ptr [ %1391, %1402 ], [ %1553, %1551 ]
  %1410 = phi ptr [ %1392, %1402 ], [ %1552, %1551 ]
  %1411 = getelementptr inbounds %struct.NlaStrip, ptr %1408, i64 0, i32 21
  %1412 = load i16, ptr %1411, align 2, !tbaa !448
  %1413 = icmp eq i16 %1412, 1
  br i1 %1413, label %1551, label %1414

1414:                                             ; preds = %1407
  %1415 = getelementptr inbounds %struct.NlaStrip, ptr %1408, i64 0, i32 23
  %1416 = load i32, ptr %1415, align 8, !tbaa !450
  %1417 = and i32 %1416, 2
  %1418 = icmp eq i32 %1417, 0
  br i1 %1418, label %1551, label %1419

1419:                                             ; preds = %1414
  %1420 = load ptr, ptr %1405, align 8, !tbaa !456
  store ptr %1420, ptr %1410, align 8, !tbaa !457
  %1421 = getelementptr inbounds %struct.TransDataNla, ptr %1410, i64 0, i32 2
  store ptr %1398, ptr %1421, align 8, !tbaa !459
  %1422 = getelementptr inbounds %struct.TransDataNla, ptr %1410, i64 0, i32 1
  store ptr %1398, ptr %1422, align 8, !tbaa !460
  %1423 = getelementptr inbounds %struct.TransDataNla, ptr %1410, i64 0, i32 3
  store ptr %1408, ptr %1423, align 8, !tbaa !461
  %1424 = call i32 @BLI_findindex(ptr noundef nonnull %1406, ptr noundef %1398) #18
  %1425 = getelementptr inbounds %struct.TransDataNla, ptr %1410, i64 0, i32 6
  store i32 %1424, ptr %1425, align 8, !tbaa !462
  %1426 = sitofp i32 %1424 to float
  br i1 %1387, label %1435, label %1427

1427:                                             ; preds = %1419
  %1428 = load i16, ptr %1388, align 2, !tbaa !463
  %1429 = and i16 %1428, 32
  %1430 = icmp eq i16 %1429, 0
  br i1 %1430, label %1435, label %1431

1431:                                             ; preds = %1427
  %1432 = load i16, ptr getelementptr inbounds (%struct.UserDef, ptr @U, i64 0, i32 81), align 4, !tbaa !465
  %1433 = sitofp i16 %1432 to float
  %1434 = fmul fast float %1433, 0x3FE99999A0000000
  br label %1439

1435:                                             ; preds = %1427, %1419
  %1436 = load i16, ptr getelementptr inbounds (%struct.UserDef, ptr @U, i64 0, i32 81), align 4, !tbaa !465
  %1437 = sitofp i16 %1436 to float
  %1438 = fmul fast float %1437, 0x3FF3333340000000
  br label %1439

1439:                                             ; preds = %1435, %1431
  %1440 = phi float [ %1437, %1435 ], [ %1433, %1431 ]
  %1441 = phi fast float [ %1438, %1435 ], [ %1434, %1431 ]
  %1442 = fmul fast float %1440, 0x3FB99999A0000000
  %1443 = fadd fast float %1442, %1441
  %1444 = fmul fast float %1443, %1426
  %1445 = getelementptr inbounds %struct.NlaStrip, ptr %1408, i64 0, i32 10
  %1446 = load float, ptr %1445, align 8, !tbaa !451
  %1447 = getelementptr inbounds %struct.TransDataNla, ptr %1410, i64 0, i32 4
  store float %1446, ptr %1447, align 8, !tbaa !82
  %1448 = getelementptr inbounds %struct.TransDataNla, ptr %1410, i64 0, i32 4, i64 1
  store float %1444, ptr %1448, align 4, !tbaa !82
  %1449 = getelementptr inbounds %struct.NlaStrip, ptr %1408, i64 0, i32 11
  %1450 = load float, ptr %1449, align 4, !tbaa !452
  %1451 = getelementptr inbounds %struct.TransDataNla, ptr %1410, i64 0, i32 5
  store float %1450, ptr %1451, align 4, !tbaa !82
  %1452 = getelementptr inbounds %struct.TransDataNla, ptr %1410, i64 0, i32 5, i64 1
  store float %1444, ptr %1452, align 4, !tbaa !82
  %1453 = load i32, ptr %1306, align 8, !tbaa !224
  %1454 = sitofp i32 %1453 to float
  %1455 = load i8, ptr %1302, align 8, !tbaa !263
  %1456 = load float, ptr %1445, align 8, !tbaa !451
  switch i8 %1455, label %1461 [
    i8 66, label %1463
    i8 82, label %1457
  ]

1457:                                             ; preds = %1439
  %1458 = fcmp fast ult float %1456, %1454
  br i1 %1458, label %1459, label %1463

1459:                                             ; preds = %1457
  %1460 = load float, ptr %1449, align 4, !tbaa !452
  br label %1502

1461:                                             ; preds = %1439
  %1462 = fcmp fast ugt float %1456, %1454
  br i1 %1462, label %1497, label %1463

1463:                                             ; preds = %1461, %1457, %1439
  %1464 = getelementptr inbounds %struct.TransDataNla, ptr %1410, i64 0, i32 7
  store i32 -1, ptr %1464, align 4, !tbaa !466
  %1465 = load i32, ptr %1, align 8, !tbaa !161
  switch i32 %1465, label %1489 [
    i32 1, label %1466
    i32 22, label %1466
  ]

1466:                                             ; preds = %1463, %1463
  %1467 = getelementptr inbounds %struct.TransData, ptr %1409, i64 0, i32 3
  store ptr %1447, ptr %1467, align 8, !tbaa !182
  %1468 = getelementptr inbounds %struct.TransData, ptr %1409, i64 0, i32 4
  store float %1446, ptr %1468, align 4, !tbaa !82
  %1469 = load float, ptr %1448, align 4, !tbaa !82
  %1470 = getelementptr inbounds %struct.TransData, ptr %1409, i64 0, i32 4, i64 1
  store float %1469, ptr %1470, align 4, !tbaa !82
  %1471 = getelementptr inbounds %struct.TransDataNla, ptr %1410, i64 0, i32 4, i64 2
  %1472 = load float, ptr %1471, align 4, !tbaa !82
  %1473 = getelementptr inbounds %struct.TransData, ptr %1409, i64 0, i32 4, i64 2
  store float %1472, ptr %1473, align 4, !tbaa !82
  %1474 = getelementptr inbounds %struct.TransData, ptr %1409, i64 0, i32 7
  store float %1454, ptr %1474, align 4, !tbaa !82
  %1475 = getelementptr inbounds %struct.TransData, ptr %1409, i64 0, i32 7, i64 1
  store float %1444, ptr %1475, align 4, !tbaa !82
  %1476 = getelementptr inbounds %struct.TransData, ptr %1409, i64 0, i32 7, i64 2
  store float 0.000000e+00, ptr %1476, align 4, !tbaa !82
  %1477 = getelementptr inbounds %struct.TransData, ptr %1409, i64 0, i32 10
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(36) %1477, i8 0, i64 32, i1 false)
  %1478 = getelementptr inbounds %struct.TransData, ptr %1409, i64 0, i32 10, i64 2, i64 2
  store float 1.000000e+00, ptr %1478, align 8, !tbaa !82
  %1479 = getelementptr inbounds %struct.TransData, ptr %1409, i64 0, i32 13
  store ptr null, ptr %1479, align 8, !tbaa !334
  %1480 = getelementptr inbounds %struct.TransData, ptr %1409, i64 0, i32 5
  store ptr null, ptr %1480, align 8, !tbaa !423
  %1481 = getelementptr inbounds %struct.TransData, ptr %1409, i64 0, i32 16
  %1482 = load i32, ptr %1481, align 8, !tbaa !20
  %1483 = or i32 %1482, 1
  store i32 %1483, ptr %1481, align 8, !tbaa !20
  store float 0.000000e+00, ptr %1409, align 8, !tbaa !25
  %1484 = getelementptr inbounds %struct.TransData, ptr %1409, i64 0, i32 8
  call void @unit_m3(ptr noundef nonnull %1484) #18
  %1485 = getelementptr inbounds %struct.TransData, ptr %1409, i64 0, i32 9
  call void @unit_m3(ptr noundef nonnull %1485) #18
  %1486 = load i8, ptr %1302, align 8, !tbaa !263
  %1487 = load i32, ptr %1306, align 8, !tbaa !224
  %1488 = sitofp i32 %1487 to float
  br label %1492

1489:                                             ; preds = %1463
  %1490 = getelementptr inbounds %struct.TransData, ptr %1409, i64 0, i32 5
  store ptr %1447, ptr %1490, align 8, !tbaa !423
  %1491 = getelementptr inbounds %struct.TransData, ptr %1409, i64 0, i32 6
  store float %1446, ptr %1491, align 8, !tbaa !424
  br label %1492

1492:                                             ; preds = %1489, %1466
  %1493 = phi float [ %1454, %1489 ], [ %1488, %1466 ]
  %1494 = phi i8 [ %1455, %1489 ], [ %1486, %1466 ]
  %1495 = getelementptr inbounds %struct.TransData, ptr %1409, i64 0, i32 15
  store ptr %1410, ptr %1495, align 8, !tbaa !144
  %1496 = getelementptr inbounds %struct.TransData, ptr %1409, i64 1
  br label %1497

1497:                                             ; preds = %1492, %1461
  %1498 = phi float [ %1493, %1492 ], [ %1454, %1461 ]
  %1499 = phi i8 [ %1494, %1492 ], [ %1455, %1461 ]
  %1500 = phi ptr [ %1496, %1492 ], [ %1409, %1461 ]
  %1501 = load float, ptr %1449, align 4, !tbaa !452
  switch i8 %1499, label %1507 [
    i8 66, label %1509
    i8 82, label %1502
  ]

1502:                                             ; preds = %1497, %1459
  %1503 = phi float [ %1460, %1459 ], [ %1501, %1497 ]
  %1504 = phi ptr [ %1409, %1459 ], [ %1500, %1497 ]
  %1505 = phi float [ %1454, %1459 ], [ %1498, %1497 ]
  %1506 = fcmp fast ult float %1503, %1505
  br i1 %1506, label %1544, label %1509

1507:                                             ; preds = %1497
  %1508 = fcmp fast ugt float %1501, %1498
  br i1 %1508, label %1544, label %1509

1509:                                             ; preds = %1507, %1502, %1497
  %1510 = phi ptr [ %1500, %1497 ], [ %1500, %1507 ], [ %1504, %1502 ]
  %1511 = getelementptr inbounds %struct.TransDataNla, ptr %1410, i64 0, i32 7
  %1512 = load i32, ptr %1511, align 4, !tbaa !466
  %1513 = icmp eq i32 %1512, 0
  %1514 = select i1 %1513, i32 1, i32 2
  store i32 %1514, ptr %1511, align 4, !tbaa !466
  %1515 = load i32, ptr %1, align 8, !tbaa !161
  switch i32 %1515, label %1537 [
    i32 1, label %1516
    i32 22, label %1516
  ]

1516:                                             ; preds = %1509, %1509
  %1517 = getelementptr inbounds %struct.TransData, ptr %1510, i64 0, i32 3
  store ptr %1451, ptr %1517, align 8, !tbaa !182
  %1518 = getelementptr inbounds %struct.TransData, ptr %1510, i64 0, i32 4
  %1519 = load float, ptr %1451, align 4, !tbaa !82
  store float %1519, ptr %1518, align 4, !tbaa !82
  %1520 = load float, ptr %1452, align 4, !tbaa !82
  %1521 = getelementptr inbounds %struct.TransData, ptr %1510, i64 0, i32 4, i64 1
  store float %1520, ptr %1521, align 4, !tbaa !82
  %1522 = getelementptr inbounds %struct.TransDataNla, ptr %1410, i64 0, i32 5, i64 2
  %1523 = load float, ptr %1522, align 4, !tbaa !82
  %1524 = getelementptr inbounds %struct.TransData, ptr %1510, i64 0, i32 4, i64 2
  store float %1523, ptr %1524, align 4, !tbaa !82
  %1525 = getelementptr inbounds %struct.TransData, ptr %1510, i64 0, i32 7
  store float %1454, ptr %1525, align 4, !tbaa !82
  %1526 = getelementptr inbounds %struct.TransData, ptr %1510, i64 0, i32 7, i64 1
  store float %1444, ptr %1526, align 4, !tbaa !82
  %1527 = getelementptr inbounds %struct.TransData, ptr %1510, i64 0, i32 7, i64 2
  store float 0.000000e+00, ptr %1527, align 4, !tbaa !82
  %1528 = getelementptr inbounds %struct.TransData, ptr %1510, i64 0, i32 10
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(36) %1528, i8 0, i64 32, i1 false)
  %1529 = getelementptr inbounds %struct.TransData, ptr %1510, i64 0, i32 10, i64 2, i64 2
  store float 1.000000e+00, ptr %1529, align 8, !tbaa !82
  %1530 = getelementptr inbounds %struct.TransData, ptr %1510, i64 0, i32 13
  store ptr null, ptr %1530, align 8, !tbaa !334
  %1531 = getelementptr inbounds %struct.TransData, ptr %1510, i64 0, i32 5
  store ptr null, ptr %1531, align 8, !tbaa !423
  %1532 = getelementptr inbounds %struct.TransData, ptr %1510, i64 0, i32 16
  %1533 = load i32, ptr %1532, align 8, !tbaa !20
  %1534 = or i32 %1533, 1
  store i32 %1534, ptr %1532, align 8, !tbaa !20
  store float 0.000000e+00, ptr %1510, align 8, !tbaa !25
  %1535 = getelementptr inbounds %struct.TransData, ptr %1510, i64 0, i32 8
  call void @unit_m3(ptr noundef nonnull %1535) #18
  %1536 = getelementptr inbounds %struct.TransData, ptr %1510, i64 0, i32 9
  call void @unit_m3(ptr noundef nonnull %1536) #18
  br label %1541

1537:                                             ; preds = %1509
  %1538 = getelementptr inbounds %struct.TransData, ptr %1510, i64 0, i32 5
  store ptr %1451, ptr %1538, align 8, !tbaa !423
  %1539 = load float, ptr %1451, align 4, !tbaa !82
  %1540 = getelementptr inbounds %struct.TransData, ptr %1510, i64 0, i32 6
  store float %1539, ptr %1540, align 8, !tbaa !424
  br label %1541

1541:                                             ; preds = %1537, %1516
  %1542 = getelementptr inbounds %struct.TransData, ptr %1510, i64 0, i32 15
  store ptr %1410, ptr %1542, align 8, !tbaa !144
  %1543 = getelementptr inbounds %struct.TransData, ptr %1510, i64 1
  br label %1544

1544:                                             ; preds = %1541, %1507, %1502
  %1545 = phi ptr [ %1543, %1541 ], [ %1500, %1507 ], [ %1504, %1502 ]
  %1546 = getelementptr inbounds %struct.TransDataNla, ptr %1410, i64 0, i32 7
  %1547 = load i32, ptr %1546, align 4, !tbaa !466
  %1548 = icmp eq i32 %1547, 2
  %1549 = select i1 %1548, i64 2, i64 1
  %1550 = getelementptr inbounds %struct.TransDataNla, ptr %1410, i64 %1549
  br label %1551

1551:                                             ; preds = %1544, %1414, %1407
  %1552 = phi ptr [ %1550, %1544 ], [ %1410, %1414 ], [ %1410, %1407 ]
  %1553 = phi ptr [ %1545, %1544 ], [ %1409, %1414 ], [ %1409, %1407 ]
  %1554 = load ptr, ptr %1408, align 8, !tbaa !33
  %1555 = icmp eq ptr %1554, null
  br i1 %1555, label %1556, label %1407, !llvm.loop !467

1556:                                             ; preds = %1551, %1396, %1389
  %1557 = phi ptr [ %1392, %1389 ], [ %1392, %1396 ], [ %1552, %1551 ]
  %1558 = phi ptr [ %1391, %1389 ], [ %1391, %1396 ], [ %1553, %1551 ]
  %1559 = load ptr, ptr %1390, align 8, !tbaa !33
  %1560 = icmp eq ptr %1559, null
  br i1 %1560, label %1561, label %1389, !llvm.loop !468

1561:                                             ; preds = %1556, %1362, %1369, %1359, %1300
  call void @ANIM_animdata_freelist(ptr noundef nonnull %16) #18
  br label %1562

1562:                                             ; preds = %1268, %1561
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %16) #18
  call void @llvm.lifetime.end.p0(i64 80, ptr nonnull %15) #18
  br label %2896

1563:                                             ; preds = %350
  %1564 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 1
  %1565 = load i32, ptr %1564, align 4, !tbaa !24
  %1566 = or i32 %1565, 32832
  store i32 %1566, ptr %1564, align 4, !tbaa !24
  %1567 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 15, i32 4
  %1568 = load i16, ptr %1567, align 2, !tbaa !469
  %1569 = or i16 %1568, 8
  store i16 %1569, ptr %1567, align 2, !tbaa !469
  %1570 = tail call ptr @UI_view2d_fromcontext(ptr noundef %0) #18
  %1571 = load ptr, ptr %28, align 8, !tbaa !89
  %1572 = tail call ptr @BKE_sequencer_editing_get(ptr noundef %1571, i8 noundef zeroext 0) #18
  %1573 = icmp eq ptr %1572, null
  br i1 %1573, label %1574, label %1576

1574:                                             ; preds = %1563
  %1575 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 9
  store i32 0, ptr %1575, align 8, !tbaa !5
  br label %2896

1576:                                             ; preds = %1563
  %1577 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 41
  store ptr @freeSeqData, ptr %1577, align 8, !tbaa !470
  %1578 = load i32, ptr %1, align 8, !tbaa !161
  %1579 = icmp eq i32 %1578, 22
  br i1 %1579, label %1580, label %1593

1580:                                             ; preds = %1576
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %13) #18
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %14) #18
  %1581 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 22
  %1582 = load i32, ptr %1581, align 8, !tbaa !27
  %1583 = sitofp i32 %1582 to float
  %1584 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 22, i64 1
  %1585 = load i32, ptr %1584, align 4, !tbaa !27
  %1586 = sitofp i32 %1585 to float
  call void @UI_view2d_region_to_view(ptr noundef %1570, float noundef nofpclass(nan inf) %1583, float noundef nofpclass(nan inf) %1586, ptr noundef nonnull %13, ptr noundef nonnull %14) #18
  %1587 = load float, ptr %13, align 4, !tbaa !82
  %1588 = getelementptr inbounds %struct.Scene, ptr %1571, i64 0, i32 22, i32 5
  %1589 = load i32, ptr %1588, align 8, !tbaa !224
  %1590 = sitofp i32 %1589 to float
  %1591 = fcmp fast ogt float %1587, %1590
  %1592 = select i1 %1591, i8 82, i8 76
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %14) #18
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %13) #18
  br label %1593

1593:                                             ; preds = %1580, %1576
  %1594 = phi i8 [ %1592, %1580 ], [ 66, %1576 ]
  %1595 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 26
  store i8 %1594, ptr %1595, align 8
  %1596 = load ptr, ptr %1572, align 8, !tbaa !149
  %1597 = load ptr, ptr %1596, align 8, !tbaa !33
  %1598 = icmp eq ptr %1597, null
  br i1 %1598, label %1648, label %1599

1599:                                             ; preds = %1593, %1645
  %1600 = phi ptr [ %1646, %1645 ], [ %1597, %1593 ]
  %1601 = getelementptr inbounds %struct.Sequence, ptr %1600, i64 0, i32 5
  %1602 = load i32, ptr %1601, align 8, !tbaa !163
  %1603 = and i32 %1602, 1
  %1604 = icmp eq i32 %1603, 0
  br i1 %1604, label %1605, label %1645

1605:                                             ; preds = %1599
  %1606 = getelementptr inbounds %struct.Sequence, ptr %1600, i64 0, i32 6
  %1607 = load i32, ptr %1606, align 4, !tbaa !162
  %1608 = and i32 %1607, 8
  %1609 = icmp eq i32 %1608, 0
  br i1 %1609, label %1645, label %1610

1610:                                             ; preds = %1605
  %1611 = getelementptr inbounds %struct.Sequence, ptr %1600, i64 0, i32 33
  %1612 = load ptr, ptr %1611, align 8, !tbaa !33
  %1613 = icmp eq ptr %1612, null
  br i1 %1613, label %1621, label %1614

1614:                                             ; preds = %1610
  %1615 = getelementptr inbounds %struct.Sequence, ptr %1612, i64 0, i32 5
  %1616 = load i32, ptr %1615, align 8, !tbaa !163
  %1617 = and i32 %1616, 16391
  %1618 = icmp eq i32 %1617, 1
  br i1 %1618, label %1619, label %1621

1619:                                             ; preds = %1614
  %1620 = or i32 %1602, 1
  store i32 %1620, ptr %1601, align 8, !tbaa !163
  br label %1621

1621:                                             ; preds = %1619, %1614, %1610
  %1622 = phi i32 [ %1602, %1610 ], [ %1602, %1614 ], [ %1620, %1619 ]
  %1623 = getelementptr inbounds %struct.Sequence, ptr %1600, i64 0, i32 34
  %1624 = load ptr, ptr %1623, align 8, !tbaa !33
  %1625 = icmp eq ptr %1624, null
  br i1 %1625, label %1633, label %1626

1626:                                             ; preds = %1621
  %1627 = getelementptr inbounds %struct.Sequence, ptr %1624, i64 0, i32 5
  %1628 = load i32, ptr %1627, align 8, !tbaa !163
  %1629 = and i32 %1628, 16391
  %1630 = icmp eq i32 %1629, 1
  br i1 %1630, label %1631, label %1633

1631:                                             ; preds = %1626
  %1632 = or i32 %1622, 1
  store i32 %1632, ptr %1601, align 8, !tbaa !163
  br label %1633

1633:                                             ; preds = %1631, %1626, %1621
  %1634 = phi i32 [ %1632, %1631 ], [ %1622, %1626 ], [ %1622, %1621 ]
  %1635 = getelementptr inbounds %struct.Sequence, ptr %1600, i64 0, i32 35
  %1636 = load ptr, ptr %1635, align 8, !tbaa !33
  %1637 = icmp eq ptr %1636, null
  br i1 %1637, label %1645, label %1638

1638:                                             ; preds = %1633
  %1639 = getelementptr inbounds %struct.Sequence, ptr %1636, i64 0, i32 5
  %1640 = load i32, ptr %1639, align 8, !tbaa !163
  %1641 = and i32 %1640, 16391
  %1642 = icmp eq i32 %1641, 1
  br i1 %1642, label %1643, label %1645

1643:                                             ; preds = %1638
  %1644 = or i32 %1634, 1
  store i32 %1644, ptr %1601, align 8, !tbaa !163
  br label %1645

1645:                                             ; preds = %1643, %1638, %1633, %1605, %1599
  %1646 = load ptr, ptr %1600, align 8, !tbaa !33
  %1647 = icmp eq ptr %1646, null
  br i1 %1647, label %1648, label %1599, !llvm.loop !471

1648:                                             ; preds = %1645, %1593
  %1649 = call fastcc i32 @SeqTransCount(ptr noundef nonnull %1, ptr noundef null, ptr noundef nonnull %1596, i32 noundef 0)
  %1650 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 9
  store i32 %1649, ptr %1650, align 8, !tbaa !5
  %1651 = icmp eq i32 %1649, 0
  br i1 %1651, label %2896, label %1652

1652:                                             ; preds = %1648
  %1653 = load ptr, ptr @MEM_callocN, align 8, !tbaa !33
  %1654 = sext i32 %1649 to i64
  %1655 = mul nsw i64 %1654, 224
  %1656 = call ptr %1653(i64 noundef %1655, ptr noundef nonnull @.str.31) #18
  %1657 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 10
  store ptr %1656, ptr %1657, align 8, !tbaa !19
  %1658 = load ptr, ptr @MEM_callocN, align 8, !tbaa !33
  %1659 = load i32, ptr %1650, align 8, !tbaa !5
  %1660 = sext i32 %1659 to i64
  %1661 = mul nsw i64 %1660, 56
  %1662 = call ptr %1658(i64 noundef %1661, ptr noundef nonnull @.str.32) #18
  %1663 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 12
  store ptr %1662, ptr %1663, align 8, !tbaa !143
  %1664 = load ptr, ptr @MEM_callocN, align 8, !tbaa !33
  %1665 = load i32, ptr %1650, align 8, !tbaa !5
  %1666 = sext i32 %1665 to i64
  %1667 = mul nsw i64 %1666, 24
  %1668 = call ptr %1664(i64 noundef %1667, ptr noundef nonnull @.str.33) #18
  %1669 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 40
  store ptr %1668, ptr %1669, align 8, !tbaa !66
  %1670 = load i32, ptr %1564, align 4, !tbaa !24
  %1671 = or i32 %1670, 131072
  store i32 %1671, ptr %1564, align 4, !tbaa !24
  %1672 = load ptr, ptr %1572, align 8, !tbaa !149
  %1673 = call fastcc i32 @SeqToTransData_Recursive(ptr noundef nonnull %1, ptr noundef %1672, ptr noundef %1656, ptr noundef %1662, ptr noundef %1668)
  br label %2896

1674:                                             ; preds = %350
  %1675 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 1
  %1676 = load i32, ptr %1675, align 4, !tbaa !24
  %1677 = or i32 %1676, 32832
  store i32 %1677, ptr %1675, align 4, !tbaa !24
  %1678 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 54
  %1679 = load ptr, ptr %1678, align 8, !tbaa !148
  %1680 = getelementptr inbounds %struct.ScrArea, ptr %1679, i64 0, i32 19
  %1681 = load ptr, ptr %1680, align 8, !tbaa !170
  %1682 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 55
  %1683 = load ptr, ptr %1682, align 8, !tbaa !390
  %1684 = getelementptr inbounds %struct.ARegion, ptr %1683, i64 0, i32 2
  call void @llvm.lifetime.start.p0(i64 80, ptr nonnull %5) #18
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %6) #18
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %6, i8 0, i64 16, i1 false)
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %7) #18
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %8) #18
  %1685 = load i32, ptr %1, align 8, !tbaa !161
  switch i32 %1685, label %1686 [
    i32 1, label %1689
    i32 19, label %1689
    i32 20, label %1689
  ]

1686:                                             ; preds = %1674
  %1687 = icmp eq i32 %1685, 23
  %1688 = zext i1 %1687 to i8
  br label %1689

1689:                                             ; preds = %1686, %1674, %1674, %1674
  %1690 = phi i8 [ 1, %1674 ], [ %1688, %1686 ], [ 1, %1674 ], [ 1, %1674 ]
  %1691 = getelementptr inbounds %struct.SpaceIpo, ptr %1681, i64 0, i32 11
  %1692 = load i32, ptr %1691, align 4, !tbaa !189
  %1693 = freeze i32 %1692
  %1694 = and i32 %1693, 4
  %1695 = icmp eq i32 %1694, 0
  %1696 = zext i1 %1695 to i8
  %1697 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 32
  %1698 = load i16, ptr %1697, align 2, !tbaa !321
  %1699 = icmp eq i16 %1698, 2
  br i1 %1699, label %1700, label %1704

1700:                                             ; preds = %1689
  switch i32 %1685, label %1701 [
    i32 1, label %1704
    i32 19, label %1704
    i32 20, label %1704
  ]

1701:                                             ; preds = %1700
  %1702 = icmp ne i32 %1685, 23
  %1703 = zext i1 %1702 to i8
  br label %1704

1704:                                             ; preds = %1701, %1700, %1700, %1700, %1689
  %1705 = phi i8 [ 0, %1689 ], [ 0, %1700 ], [ %1703, %1701 ], [ 0, %1700 ], [ 0, %1700 ]
  %1706 = call zeroext i8 @ANIM_animdata_get_context(ptr noundef %0, ptr noundef nonnull %5) #18
  %1707 = icmp eq i8 %1706, 0
  br i1 %1707, label %2580, label %1708

1708:                                             ; preds = %1704
  %1709 = call signext i16 @ANIM_get_normalization_flags(ptr noundef nonnull %5) #18
  %1710 = or i16 %1709, 12
  %1711 = load ptr, ptr %5, align 8, !tbaa !294
  %1712 = getelementptr inbounds %struct.bAnimContext, ptr %5, i64 0, i32 1
  %1713 = load i16, ptr %1712, align 8, !tbaa !317
  %1714 = sext i16 %1713 to i32
  %1715 = call i64 @ANIM_animdata_filter(ptr noundef nonnull %5, ptr noundef nonnull %6, i32 noundef 261, ptr noundef %1711, i32 noundef %1714) #18
  %1716 = load i32, ptr %1, align 8, !tbaa !161
  %1717 = icmp eq i32 %1716, 22
  br i1 %1717, label %1718, label %1731

1718:                                             ; preds = %1708
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %9) #18
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %10) #18
  %1719 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 22
  %1720 = load i32, ptr %1719, align 8, !tbaa !27
  %1721 = sitofp i32 %1720 to float
  %1722 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 22, i64 1
  %1723 = load i32, ptr %1722, align 4, !tbaa !27
  %1724 = sitofp i32 %1723 to float
  call void @UI_view2d_region_to_view(ptr noundef nonnull %1684, float noundef nofpclass(nan inf) %1721, float noundef nofpclass(nan inf) %1724, ptr noundef nonnull %9, ptr noundef nonnull %10) #18
  %1725 = load float, ptr %9, align 4, !tbaa !82
  %1726 = getelementptr inbounds %struct.Scene, ptr %29, i64 0, i32 22, i32 5
  %1727 = load i32, ptr %1726, align 8, !tbaa !224
  %1728 = sitofp i32 %1727 to float
  %1729 = fcmp fast ogt float %1725, %1728
  %1730 = select i1 %1729, i8 82, i8 76
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %10) #18
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %9) #18
  br label %1731

1731:                                             ; preds = %1718, %1708
  %1732 = phi i8 [ %1730, %1718 ], [ 66, %1708 ]
  %1733 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 26
  store i8 %1732, ptr %1733, align 8
  %1734 = load ptr, ptr %6, align 8, !tbaa !33
  %1735 = icmp eq ptr %1734, null
  br i1 %1735, label %2579, label %1736

1736:                                             ; preds = %1731
  %1737 = getelementptr inbounds %struct.Scene, ptr %29, i64 0, i32 22, i32 5
  %1738 = icmp eq i8 %1690, 0
  %1739 = icmp eq i8 %1705, 0
  br i1 %1738, label %1740, label %1858

1740:                                             ; preds = %1736, %1756
  %1741 = phi ptr [ %1758, %1756 ], [ %1734, %1736 ]
  %1742 = phi i32 [ %1757, %1756 ], [ 0, %1736 ]
  %1743 = call ptr @ANIM_nla_mapping_get(ptr noundef nonnull %5, ptr noundef nonnull %1741) #18
  %1744 = getelementptr inbounds %struct.bAnimListElem, ptr %1741, i64 0, i32 8
  %1745 = load ptr, ptr %1744, align 8, !tbaa !192
  %1746 = icmp eq ptr %1743, null
  %1747 = load i32, ptr %1737, align 8, !tbaa !224
  %1748 = sitofp i32 %1747 to float
  br i1 %1746, label %1751, label %1749

1749:                                             ; preds = %1740
  %1750 = call fast nofpclass(nan inf) float @BKE_nla_tweakedit_remap(ptr noundef nonnull %1743, float noundef nofpclass(nan inf) %1748, i16 noundef signext 1) #18
  br label %1751

1751:                                             ; preds = %1749, %1740
  %1752 = phi float [ %1750, %1749 ], [ %1748, %1740 ]
  %1753 = getelementptr inbounds %struct.FCurve, ptr %1745, i64 0, i32 5
  %1754 = load ptr, ptr %1753, align 8, !tbaa !194
  %1755 = icmp eq ptr %1754, null
  br i1 %1755, label %1756, label %1760

1756:                                             ; preds = %1853, %1827, %1796, %1760, %1751
  %1757 = phi i32 [ %1742, %1751 ], [ %1742, %1760 ], [ %1797, %1796 ], [ %1828, %1827 ], [ %1854, %1853 ]
  %1758 = load ptr, ptr %1741, align 8, !tbaa !33
  %1759 = icmp eq ptr %1758, null
  br i1 %1759, label %2241, label %1740, !llvm.loop !472

1760:                                             ; preds = %1751
  %1761 = getelementptr inbounds %struct.FCurve, ptr %1745, i64 0, i32 7
  %1762 = load i32, ptr %1761, align 8, !tbaa !196
  %1763 = icmp eq i32 %1762, 0
  br i1 %1763, label %1756, label %1764

1764:                                             ; preds = %1760
  %1765 = load i8, ptr %1733, align 8, !tbaa !263
  br i1 %1739, label %1766, label %1801

1766:                                             ; preds = %1764, %1796
  %1767 = phi ptr [ %1799, %1796 ], [ %1754, %1764 ]
  %1768 = phi i32 [ %1797, %1796 ], [ %1742, %1764 ]
  %1769 = phi i32 [ %1798, %1796 ], [ 0, %1764 ]
  %1770 = getelementptr inbounds [3 x [3 x float]], ptr %1767, i64 0, i64 1
  %1771 = load float, ptr %1770, align 4, !tbaa !82
  switch i8 %1765, label %1774 [
    i8 66, label %1776
    i8 82, label %1772
  ]

1772:                                             ; preds = %1766
  %1773 = fcmp fast ult float %1771, %1752
  br i1 %1773, label %1796, label %1776

1774:                                             ; preds = %1766
  %1775 = fcmp fast ugt float %1771, %1752
  br i1 %1775, label %1796, label %1776

1776:                                             ; preds = %1774, %1772, %1766
  %1777 = getelementptr inbounds %struct.BezTriple, ptr %1767, i64 0, i32 8
  %1778 = load i8, ptr %1777, align 4, !tbaa !340
  %1779 = and i8 %1778, 1
  br i1 %1695, label %1780, label %1787

1780:                                             ; preds = %1776
  %1781 = getelementptr inbounds %struct.BezTriple, ptr %1767, i64 0, i32 7
  %1782 = load i8, ptr %1781, align 1, !tbaa !341
  %1783 = and i8 %1782, 1
  %1784 = getelementptr inbounds %struct.BezTriple, ptr %1767, i64 0, i32 9
  %1785 = load i8, ptr %1784, align 1, !tbaa !342
  %1786 = and i8 %1785, 1
  br label %1787

1787:                                             ; preds = %1780, %1776
  %1788 = phi i8 [ %1783, %1780 ], [ %1779, %1776 ]
  %1789 = phi i8 [ %1786, %1780 ], [ %1779, %1776 ]
  %1790 = zext i8 %1788 to i32
  %1791 = zext i8 %1779 to i32
  %1792 = zext i8 %1789 to i32
  %1793 = add i32 %1768, %1791
  %1794 = add i32 %1793, %1790
  %1795 = add nsw i32 %1794, %1792
  br label %1796

1796:                                             ; preds = %1787, %1774, %1772
  %1797 = phi i32 [ %1768, %1774 ], [ %1795, %1787 ], [ %1768, %1772 ]
  %1798 = add nuw nsw i32 %1769, 1
  %1799 = getelementptr inbounds %struct.BezTriple, ptr %1767, i64 1
  %1800 = icmp eq i32 %1798, %1762
  br i1 %1800, label %1756, label %1766, !llvm.loop !473

1801:                                             ; preds = %1764
  br i1 %1695, label %1802, label %1832

1802:                                             ; preds = %1801, %1827
  %1803 = phi ptr [ %1830, %1827 ], [ %1754, %1801 ]
  %1804 = phi i32 [ %1828, %1827 ], [ %1742, %1801 ]
  %1805 = phi i32 [ %1829, %1827 ], [ 0, %1801 ]
  %1806 = getelementptr inbounds [3 x [3 x float]], ptr %1803, i64 0, i64 1
  %1807 = load float, ptr %1806, align 4, !tbaa !82
  switch i8 %1765, label %1810 [
    i8 66, label %1812
    i8 82, label %1808
  ]

1808:                                             ; preds = %1802
  %1809 = fcmp fast ult float %1807, %1752
  br i1 %1809, label %1827, label %1812

1810:                                             ; preds = %1802
  %1811 = fcmp fast ugt float %1807, %1752
  br i1 %1811, label %1827, label %1812

1812:                                             ; preds = %1810, %1808, %1802
  %1813 = getelementptr inbounds %struct.BezTriple, ptr %1803, i64 0, i32 4
  %1814 = load i8, ptr %1813, align 4, !tbaa !201
  %1815 = icmp eq i8 %1814, 2
  br i1 %1815, label %1816, label %1827

1816:                                             ; preds = %1812
  %1817 = getelementptr inbounds %struct.BezTriple, ptr %1803, i64 0, i32 9
  %1818 = load i8, ptr %1817, align 1, !tbaa !342
  %1819 = and i8 %1818, 1
  %1820 = getelementptr inbounds %struct.BezTriple, ptr %1803, i64 0, i32 7
  %1821 = load i8, ptr %1820, align 1, !tbaa !341
  %1822 = and i8 %1821, 1
  %1823 = zext i8 %1822 to i32
  %1824 = zext i8 %1819 to i32
  %1825 = add i32 %1804, %1824
  %1826 = add i32 %1825, %1823
  br label %1827

1827:                                             ; preds = %1816, %1812, %1810, %1808
  %1828 = phi i32 [ %1804, %1810 ], [ %1804, %1812 ], [ %1826, %1816 ], [ %1804, %1808 ]
  %1829 = add nuw nsw i32 %1805, 1
  %1830 = getelementptr inbounds %struct.BezTriple, ptr %1803, i64 1
  %1831 = icmp eq i32 %1829, %1762
  br i1 %1831, label %1756, label %1802, !llvm.loop !473

1832:                                             ; preds = %1801, %1853
  %1833 = phi ptr [ %1856, %1853 ], [ %1754, %1801 ]
  %1834 = phi i32 [ %1854, %1853 ], [ %1742, %1801 ]
  %1835 = phi i32 [ %1855, %1853 ], [ 0, %1801 ]
  %1836 = getelementptr inbounds [3 x [3 x float]], ptr %1833, i64 0, i64 1
  %1837 = load float, ptr %1836, align 4, !tbaa !82
  switch i8 %1765, label %1840 [
    i8 66, label %1842
    i8 82, label %1838
  ]

1838:                                             ; preds = %1832
  %1839 = fcmp fast ult float %1837, %1752
  br i1 %1839, label %1853, label %1842

1840:                                             ; preds = %1832
  %1841 = fcmp fast ugt float %1837, %1752
  br i1 %1841, label %1853, label %1842

1842:                                             ; preds = %1840, %1838, %1832
  %1843 = getelementptr inbounds %struct.BezTriple, ptr %1833, i64 0, i32 4
  %1844 = load i8, ptr %1843, align 4, !tbaa !201
  %1845 = icmp eq i8 %1844, 2
  br i1 %1845, label %1846, label %1853

1846:                                             ; preds = %1842
  %1847 = getelementptr inbounds %struct.BezTriple, ptr %1833, i64 0, i32 8
  %1848 = load i8, ptr %1847, align 4, !tbaa !340
  %1849 = shl i8 %1848, 1
  %1850 = and i8 %1849, 2
  %1851 = zext i8 %1850 to i32
  %1852 = add i32 %1834, %1851
  br label %1853

1853:                                             ; preds = %1846, %1842, %1840, %1838
  %1854 = phi i32 [ %1834, %1840 ], [ %1834, %1842 ], [ %1852, %1846 ], [ %1834, %1838 ]
  %1855 = add nuw nsw i32 %1835, 1
  %1856 = getelementptr inbounds %struct.BezTriple, ptr %1833, i64 1
  %1857 = icmp eq i32 %1855, %1762
  br i1 %1857, label %1756, label %1832, !llvm.loop !473

1858:                                             ; preds = %1736
  br i1 %1695, label %1859, label %1971

1859:                                             ; preds = %1858, %1875
  %1860 = phi ptr [ %1877, %1875 ], [ %1734, %1858 ]
  %1861 = phi i32 [ %1876, %1875 ], [ 0, %1858 ]
  %1862 = call ptr @ANIM_nla_mapping_get(ptr noundef nonnull %5, ptr noundef nonnull %1860) #18
  %1863 = getelementptr inbounds %struct.bAnimListElem, ptr %1860, i64 0, i32 8
  %1864 = load ptr, ptr %1863, align 8, !tbaa !192
  %1865 = icmp eq ptr %1862, null
  %1866 = load i32, ptr %1737, align 8, !tbaa !224
  %1867 = sitofp i32 %1866 to float
  br i1 %1865, label %1870, label %1868

1868:                                             ; preds = %1859
  %1869 = call fast nofpclass(nan inf) float @BKE_nla_tweakedit_remap(ptr noundef nonnull %1862, float noundef nofpclass(nan inf) %1867, i16 noundef signext 1) #18
  br label %1870

1870:                                             ; preds = %1868, %1859
  %1871 = phi float [ %1869, %1868 ], [ %1867, %1859 ]
  %1872 = getelementptr inbounds %struct.FCurve, ptr %1864, i64 0, i32 5
  %1873 = load ptr, ptr %1872, align 8, !tbaa !194
  %1874 = icmp eq ptr %1873, null
  br i1 %1874, label %1875, label %1879

1875:                                             ; preds = %1936, %1906, %1966, %1879, %1870
  %1876 = phi i32 [ %1861, %1870 ], [ %1861, %1879 ], [ %1967, %1966 ], [ %1907, %1906 ], [ %1937, %1936 ]
  %1877 = load ptr, ptr %1860, align 8, !tbaa !33
  %1878 = icmp eq ptr %1877, null
  br i1 %1878, label %2241, label %1859, !llvm.loop !472

1879:                                             ; preds = %1870
  %1880 = getelementptr inbounds %struct.FCurve, ptr %1864, i64 0, i32 7
  %1881 = load i32, ptr %1880, align 8, !tbaa !196
  %1882 = icmp eq i32 %1881, 0
  br i1 %1882, label %1875, label %1883

1883:                                             ; preds = %1879
  %1884 = load i8, ptr %1733, align 8, !tbaa !263
  switch i8 %1884, label %1941 [
    i8 66, label %1885
    i8 82, label %1911
  ]

1885:                                             ; preds = %1883, %1906
  %1886 = phi ptr [ %1909, %1906 ], [ %1873, %1883 ]
  %1887 = phi i32 [ %1907, %1906 ], [ %1861, %1883 ]
  %1888 = phi i32 [ %1908, %1906 ], [ 0, %1883 ]
  %1889 = getelementptr inbounds %struct.BezTriple, ptr %1886, i64 0, i32 8
  %1890 = load i8, ptr %1889, align 4, !tbaa !340
  %1891 = and i8 %1890, 1
  %1892 = icmp eq i8 %1891, 0
  br i1 %1892, label %1895, label %1893

1893:                                             ; preds = %1885
  %1894 = add nsw i32 %1887, 1
  br label %1906

1895:                                             ; preds = %1885
  %1896 = getelementptr inbounds %struct.BezTriple, ptr %1886, i64 0, i32 9
  %1897 = load i8, ptr %1896, align 1, !tbaa !342
  %1898 = and i8 %1897, 1
  %1899 = getelementptr inbounds %struct.BezTriple, ptr %1886, i64 0, i32 7
  %1900 = load i8, ptr %1899, align 1, !tbaa !341
  %1901 = and i8 %1900, 1
  %1902 = zext i8 %1901 to i32
  %1903 = zext i8 %1898 to i32
  %1904 = add i32 %1887, %1903
  %1905 = add i32 %1904, %1902
  br label %1906

1906:                                             ; preds = %1895, %1893
  %1907 = phi i32 [ %1894, %1893 ], [ %1905, %1895 ]
  %1908 = add nuw nsw i32 %1888, 1
  %1909 = getelementptr inbounds %struct.BezTriple, ptr %1886, i64 1
  %1910 = icmp eq i32 %1908, %1881
  br i1 %1910, label %1875, label %1885, !llvm.loop !473

1911:                                             ; preds = %1883, %1936
  %1912 = phi ptr [ %1939, %1936 ], [ %1873, %1883 ]
  %1913 = phi i32 [ %1937, %1936 ], [ %1861, %1883 ]
  %1914 = phi i32 [ %1938, %1936 ], [ 0, %1883 ]
  %1915 = getelementptr inbounds [3 x [3 x float]], ptr %1912, i64 0, i64 1
  %1916 = load float, ptr %1915, align 4, !tbaa !82
  %1917 = fcmp fast ult float %1916, %1871
  br i1 %1917, label %1936, label %1918

1918:                                             ; preds = %1911
  %1919 = getelementptr inbounds %struct.BezTriple, ptr %1912, i64 0, i32 8
  %1920 = load i8, ptr %1919, align 4, !tbaa !340
  %1921 = and i8 %1920, 1
  %1922 = icmp eq i8 %1921, 0
  br i1 %1922, label %1925, label %1923

1923:                                             ; preds = %1918
  %1924 = add nsw i32 %1913, 1
  br label %1936

1925:                                             ; preds = %1918
  %1926 = getelementptr inbounds %struct.BezTriple, ptr %1912, i64 0, i32 9
  %1927 = load i8, ptr %1926, align 1, !tbaa !342
  %1928 = and i8 %1927, 1
  %1929 = getelementptr inbounds %struct.BezTriple, ptr %1912, i64 0, i32 7
  %1930 = load i8, ptr %1929, align 1, !tbaa !341
  %1931 = and i8 %1930, 1
  %1932 = zext i8 %1931 to i32
  %1933 = zext i8 %1928 to i32
  %1934 = add i32 %1913, %1933
  %1935 = add i32 %1934, %1932
  br label %1936

1936:                                             ; preds = %1925, %1923, %1911
  %1937 = phi i32 [ %1913, %1911 ], [ %1924, %1923 ], [ %1935, %1925 ]
  %1938 = add nuw nsw i32 %1914, 1
  %1939 = getelementptr inbounds %struct.BezTriple, ptr %1912, i64 1
  %1940 = icmp eq i32 %1938, %1881
  br i1 %1940, label %1875, label %1911, !llvm.loop !473

1941:                                             ; preds = %1883, %1966
  %1942 = phi ptr [ %1969, %1966 ], [ %1873, %1883 ]
  %1943 = phi i32 [ %1967, %1966 ], [ %1861, %1883 ]
  %1944 = phi i32 [ %1968, %1966 ], [ 0, %1883 ]
  %1945 = getelementptr inbounds [3 x [3 x float]], ptr %1942, i64 0, i64 1
  %1946 = load float, ptr %1945, align 4, !tbaa !82
  %1947 = fcmp fast ugt float %1946, %1871
  br i1 %1947, label %1966, label %1948

1948:                                             ; preds = %1941
  %1949 = getelementptr inbounds %struct.BezTriple, ptr %1942, i64 0, i32 8
  %1950 = load i8, ptr %1949, align 4, !tbaa !340
  %1951 = and i8 %1950, 1
  %1952 = icmp eq i8 %1951, 0
  br i1 %1952, label %1955, label %1953

1953:                                             ; preds = %1948
  %1954 = add nsw i32 %1943, 1
  br label %1966

1955:                                             ; preds = %1948
  %1956 = getelementptr inbounds %struct.BezTriple, ptr %1942, i64 0, i32 9
  %1957 = load i8, ptr %1956, align 1, !tbaa !342
  %1958 = and i8 %1957, 1
  %1959 = getelementptr inbounds %struct.BezTriple, ptr %1942, i64 0, i32 7
  %1960 = load i8, ptr %1959, align 1, !tbaa !341
  %1961 = and i8 %1960, 1
  %1962 = zext i8 %1961 to i32
  %1963 = zext i8 %1958 to i32
  %1964 = add i32 %1943, %1963
  %1965 = add i32 %1964, %1962
  br label %1966

1966:                                             ; preds = %1955, %1953, %1941
  %1967 = phi i32 [ %1943, %1941 ], [ %1954, %1953 ], [ %1965, %1955 ]
  %1968 = add nuw nsw i32 %1944, 1
  %1969 = getelementptr inbounds %struct.BezTriple, ptr %1942, i64 1
  %1970 = icmp eq i32 %1968, %1881
  br i1 %1970, label %1875, label %1941, !llvm.loop !473

1971:                                             ; preds = %1858, %2237
  %1972 = phi ptr [ %2239, %2237 ], [ %1734, %1858 ]
  %1973 = phi i32 [ %2238, %2237 ], [ 0, %1858 ]
  %1974 = call ptr @ANIM_nla_mapping_get(ptr noundef nonnull %5, ptr noundef nonnull %1972) #18
  %1975 = getelementptr inbounds %struct.bAnimListElem, ptr %1972, i64 0, i32 8
  %1976 = load ptr, ptr %1975, align 8, !tbaa !192
  %1977 = icmp eq ptr %1974, null
  %1978 = load i32, ptr %1737, align 8, !tbaa !224
  %1979 = sitofp i32 %1978 to float
  br i1 %1977, label %1982, label %1980

1980:                                             ; preds = %1971
  %1981 = call fast nofpclass(nan inf) float @BKE_nla_tweakedit_remap(ptr noundef nonnull %1974, float noundef nofpclass(nan inf) %1979, i16 noundef signext 1) #18
  br label %1982

1982:                                             ; preds = %1980, %1971
  %1983 = phi float [ %1981, %1980 ], [ %1979, %1971 ]
  %1984 = getelementptr inbounds %struct.FCurve, ptr %1976, i64 0, i32 5
  %1985 = load ptr, ptr %1984, align 8, !tbaa !194
  %1986 = icmp eq ptr %1985, null
  br i1 %1986, label %2237, label %1987

1987:                                             ; preds = %1982
  %1988 = getelementptr inbounds %struct.FCurve, ptr %1976, i64 0, i32 7
  %1989 = load i32, ptr %1988, align 8, !tbaa !196
  %1990 = icmp eq i32 %1989, 0
  br i1 %1990, label %2237, label %1991

1991:                                             ; preds = %1987
  %1992 = load i8, ptr %1733, align 8, !tbaa !263
  switch i8 %1992, label %1998 [
    i8 66, label %2003
    i8 82, label %1993
  ]

1993:                                             ; preds = %1991
  %1994 = and i32 %1989, 1
  %1995 = icmp eq i32 %1989, 1
  br i1 %1995, label %2222, label %1996

1996:                                             ; preds = %1993
  %1997 = and i32 %1989, -2
  br label %2149

1998:                                             ; preds = %1991
  %1999 = and i32 %1989, 1
  %2000 = icmp eq i32 %1989, 1
  br i1 %2000, label %2207, label %2001

2001:                                             ; preds = %1998
  %2002 = and i32 %1989, -2
  br label %2178

2003:                                             ; preds = %1991
  %2004 = zext i32 %1989 to i64
  %2005 = icmp ult i32 %1989, 16
  br i1 %2005, label %2133, label %2006

2006:                                             ; preds = %2003
  %2007 = and i64 %2004, 4294967280
  %2008 = mul nuw nsw i64 %2007, 72
  %2009 = getelementptr i8, ptr %1985, i64 %2008
  %2010 = trunc i64 %2007 to i32
  %2011 = insertelement <4 x i32> <i32 poison, i32 0, i32 0, i32 0>, i32 %1973, i64 0
  %2012 = getelementptr %struct.BezTriple, ptr %1985, i64 0, i32 8
  %2013 = getelementptr %struct.BezTriple, ptr %1985, i64 0, i32 8
  %2014 = getelementptr %struct.BezTriple, ptr %1985, i64 0, i32 8
  %2015 = getelementptr %struct.BezTriple, ptr %1985, i64 0, i32 8
  %2016 = getelementptr %struct.BezTriple, ptr %1985, i64 0, i32 8
  %2017 = getelementptr %struct.BezTriple, ptr %1985, i64 0, i32 8
  %2018 = getelementptr %struct.BezTriple, ptr %1985, i64 0, i32 8
  %2019 = getelementptr %struct.BezTriple, ptr %1985, i64 0, i32 8
  %2020 = getelementptr %struct.BezTriple, ptr %1985, i64 0, i32 8
  %2021 = getelementptr %struct.BezTriple, ptr %1985, i64 0, i32 8
  %2022 = getelementptr %struct.BezTriple, ptr %1985, i64 0, i32 8
  %2023 = getelementptr %struct.BezTriple, ptr %1985, i64 0, i32 8
  %2024 = getelementptr %struct.BezTriple, ptr %1985, i64 0, i32 8
  %2025 = getelementptr %struct.BezTriple, ptr %1985, i64 0, i32 8
  %2026 = getelementptr %struct.BezTriple, ptr %1985, i64 0, i32 8
  %2027 = getelementptr %struct.BezTriple, ptr %1985, i64 0, i32 8
  br label %2028

2028:                                             ; preds = %2028, %2006
  %2029 = phi i64 [ 0, %2006 ], [ %2125, %2028 ]
  %2030 = phi <4 x i32> [ %2011, %2006 ], [ %2121, %2028 ]
  %2031 = phi <4 x i32> [ zeroinitializer, %2006 ], [ %2122, %2028 ]
  %2032 = phi <4 x i32> [ zeroinitializer, %2006 ], [ %2123, %2028 ]
  %2033 = phi <4 x i32> [ zeroinitializer, %2006 ], [ %2124, %2028 ]
  %2034 = mul i64 %2029, 72
  %2035 = mul i64 %2029, 72
  %2036 = or i64 %2035, 72
  %2037 = mul i64 %2029, 72
  %2038 = add i64 %2037, 144
  %2039 = mul i64 %2029, 72
  %2040 = add i64 %2039, 216
  %2041 = mul i64 %2029, 72
  %2042 = add i64 %2041, 288
  %2043 = mul i64 %2029, 72
  %2044 = add i64 %2043, 360
  %2045 = mul i64 %2029, 72
  %2046 = add i64 %2045, 432
  %2047 = mul i64 %2029, 72
  %2048 = add i64 %2047, 504
  %2049 = mul i64 %2029, 72
  %2050 = add i64 %2049, 576
  %2051 = mul i64 %2029, 72
  %2052 = add i64 %2051, 648
  %2053 = mul i64 %2029, 72
  %2054 = add i64 %2053, 720
  %2055 = mul i64 %2029, 72
  %2056 = add i64 %2055, 792
  %2057 = mul i64 %2029, 72
  %2058 = add i64 %2057, 864
  %2059 = mul i64 %2029, 72
  %2060 = add i64 %2059, 936
  %2061 = mul i64 %2029, 72
  %2062 = add i64 %2061, 1008
  %2063 = mul i64 %2029, 72
  %2064 = add i64 %2063, 1080
  %2065 = getelementptr i8, ptr %2012, i64 %2034
  %2066 = getelementptr i8, ptr %2013, i64 %2036
  %2067 = getelementptr i8, ptr %2014, i64 %2038
  %2068 = getelementptr i8, ptr %2015, i64 %2040
  %2069 = getelementptr i8, ptr %2016, i64 %2042
  %2070 = getelementptr i8, ptr %2017, i64 %2044
  %2071 = getelementptr i8, ptr %2018, i64 %2046
  %2072 = getelementptr i8, ptr %2019, i64 %2048
  %2073 = getelementptr i8, ptr %2020, i64 %2050
  %2074 = getelementptr i8, ptr %2021, i64 %2052
  %2075 = getelementptr i8, ptr %2022, i64 %2054
  %2076 = getelementptr i8, ptr %2023, i64 %2056
  %2077 = getelementptr i8, ptr %2024, i64 %2058
  %2078 = getelementptr i8, ptr %2025, i64 %2060
  %2079 = getelementptr i8, ptr %2026, i64 %2062
  %2080 = getelementptr i8, ptr %2027, i64 %2064
  %2081 = load i8, ptr %2065, align 4, !tbaa !340
  %2082 = load i8, ptr %2066, align 4, !tbaa !340
  %2083 = load i8, ptr %2067, align 4, !tbaa !340
  %2084 = load i8, ptr %2068, align 4, !tbaa !340
  %2085 = insertelement <4 x i8> poison, i8 %2081, i64 0
  %2086 = insertelement <4 x i8> %2085, i8 %2082, i64 1
  %2087 = insertelement <4 x i8> %2086, i8 %2083, i64 2
  %2088 = insertelement <4 x i8> %2087, i8 %2084, i64 3
  %2089 = load i8, ptr %2069, align 4, !tbaa !340
  %2090 = load i8, ptr %2070, align 4, !tbaa !340
  %2091 = load i8, ptr %2071, align 4, !tbaa !340
  %2092 = load i8, ptr %2072, align 4, !tbaa !340
  %2093 = insertelement <4 x i8> poison, i8 %2089, i64 0
  %2094 = insertelement <4 x i8> %2093, i8 %2090, i64 1
  %2095 = insertelement <4 x i8> %2094, i8 %2091, i64 2
  %2096 = insertelement <4 x i8> %2095, i8 %2092, i64 3
  %2097 = load i8, ptr %2073, align 4, !tbaa !340
  %2098 = load i8, ptr %2074, align 4, !tbaa !340
  %2099 = load i8, ptr %2075, align 4, !tbaa !340
  %2100 = load i8, ptr %2076, align 4, !tbaa !340
  %2101 = insertelement <4 x i8> poison, i8 %2097, i64 0
  %2102 = insertelement <4 x i8> %2101, i8 %2098, i64 1
  %2103 = insertelement <4 x i8> %2102, i8 %2099, i64 2
  %2104 = insertelement <4 x i8> %2103, i8 %2100, i64 3
  %2105 = load i8, ptr %2077, align 4, !tbaa !340
  %2106 = load i8, ptr %2078, align 4, !tbaa !340
  %2107 = load i8, ptr %2079, align 4, !tbaa !340
  %2108 = load i8, ptr %2080, align 4, !tbaa !340
  %2109 = insertelement <4 x i8> poison, i8 %2105, i64 0
  %2110 = insertelement <4 x i8> %2109, i8 %2106, i64 1
  %2111 = insertelement <4 x i8> %2110, i8 %2107, i64 2
  %2112 = insertelement <4 x i8> %2111, i8 %2108, i64 3
  %2113 = and <4 x i8> %2088, <i8 1, i8 1, i8 1, i8 1>
  %2114 = and <4 x i8> %2096, <i8 1, i8 1, i8 1, i8 1>
  %2115 = and <4 x i8> %2104, <i8 1, i8 1, i8 1, i8 1>
  %2116 = and <4 x i8> %2112, <i8 1, i8 1, i8 1, i8 1>
  %2117 = zext <4 x i8> %2113 to <4 x i32>
  %2118 = zext <4 x i8> %2114 to <4 x i32>
  %2119 = zext <4 x i8> %2115 to <4 x i32>
  %2120 = zext <4 x i8> %2116 to <4 x i32>
  %2121 = add <4 x i32> %2030, %2117
  %2122 = add <4 x i32> %2031, %2118
  %2123 = add <4 x i32> %2032, %2119
  %2124 = add <4 x i32> %2033, %2120
  %2125 = add nuw i64 %2029, 16
  %2126 = icmp eq i64 %2125, %2007
  br i1 %2126, label %2127, label %2028, !llvm.loop !474

2127:                                             ; preds = %2028
  %2128 = add <4 x i32> %2122, %2121
  %2129 = add <4 x i32> %2123, %2128
  %2130 = add <4 x i32> %2124, %2129
  %2131 = call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %2130)
  %2132 = icmp eq i64 %2007, %2004
  br i1 %2132, label %2237, label %2133

2133:                                             ; preds = %2003, %2127
  %2134 = phi ptr [ %1985, %2003 ], [ %2009, %2127 ]
  %2135 = phi i32 [ %1973, %2003 ], [ %2131, %2127 ]
  %2136 = phi i32 [ 0, %2003 ], [ %2010, %2127 ]
  br label %2137

2137:                                             ; preds = %2133, %2137
  %2138 = phi ptr [ %2147, %2137 ], [ %2134, %2133 ]
  %2139 = phi i32 [ %2145, %2137 ], [ %2135, %2133 ]
  %2140 = phi i32 [ %2146, %2137 ], [ %2136, %2133 ]
  %2141 = getelementptr inbounds %struct.BezTriple, ptr %2138, i64 0, i32 8
  %2142 = load i8, ptr %2141, align 4, !tbaa !340
  %2143 = and i8 %2142, 1
  %2144 = zext i8 %2143 to i32
  %2145 = add nsw i32 %2139, %2144
  %2146 = add nuw nsw i32 %2140, 1
  %2147 = getelementptr inbounds %struct.BezTriple, ptr %2138, i64 1
  %2148 = icmp eq i32 %2146, %1989
  br i1 %2148, label %2237, label %2137, !llvm.loop !475

2149:                                             ; preds = %2173, %1996
  %2150 = phi ptr [ %1985, %1996 ], [ %2175, %2173 ]
  %2151 = phi i32 [ %1973, %1996 ], [ %2174, %2173 ]
  %2152 = phi i32 [ 0, %1996 ], [ %2176, %2173 ]
  %2153 = getelementptr inbounds [3 x [3 x float]], ptr %2150, i64 0, i64 1
  %2154 = load float, ptr %2153, align 4, !tbaa !82
  %2155 = fcmp fast ult float %2154, %1983
  br i1 %2155, label %2162, label %2156

2156:                                             ; preds = %2149
  %2157 = getelementptr inbounds %struct.BezTriple, ptr %2150, i64 0, i32 8
  %2158 = load i8, ptr %2157, align 4, !tbaa !340
  %2159 = and i8 %2158, 1
  %2160 = zext i8 %2159 to i32
  %2161 = add nsw i32 %2151, %2160
  br label %2162

2162:                                             ; preds = %2156, %2149
  %2163 = phi i32 [ %2151, %2149 ], [ %2161, %2156 ]
  %2164 = getelementptr inbounds %struct.BezTriple, ptr %2150, i64 1, i32 0, i64 1
  %2165 = load float, ptr %2164, align 4, !tbaa !82
  %2166 = fcmp fast ult float %2165, %1983
  br i1 %2166, label %2173, label %2167

2167:                                             ; preds = %2162
  %2168 = getelementptr inbounds %struct.BezTriple, ptr %2150, i64 1, i32 8
  %2169 = load i8, ptr %2168, align 4, !tbaa !340
  %2170 = and i8 %2169, 1
  %2171 = zext i8 %2170 to i32
  %2172 = add nsw i32 %2163, %2171
  br label %2173

2173:                                             ; preds = %2167, %2162
  %2174 = phi i32 [ %2163, %2162 ], [ %2172, %2167 ]
  %2175 = getelementptr inbounds %struct.BezTriple, ptr %2150, i64 2
  %2176 = add i32 %2152, 2
  %2177 = icmp eq i32 %2176, %1997
  br i1 %2177, label %2222, label %2149, !llvm.loop !473

2178:                                             ; preds = %2202, %2001
  %2179 = phi ptr [ %1985, %2001 ], [ %2204, %2202 ]
  %2180 = phi i32 [ %1973, %2001 ], [ %2203, %2202 ]
  %2181 = phi i32 [ 0, %2001 ], [ %2205, %2202 ]
  %2182 = getelementptr inbounds [3 x [3 x float]], ptr %2179, i64 0, i64 1
  %2183 = load float, ptr %2182, align 4, !tbaa !82
  %2184 = fcmp fast ugt float %2183, %1983
  br i1 %2184, label %2191, label %2185

2185:                                             ; preds = %2178
  %2186 = getelementptr inbounds %struct.BezTriple, ptr %2179, i64 0, i32 8
  %2187 = load i8, ptr %2186, align 4, !tbaa !340
  %2188 = and i8 %2187, 1
  %2189 = zext i8 %2188 to i32
  %2190 = add nsw i32 %2180, %2189
  br label %2191

2191:                                             ; preds = %2185, %2178
  %2192 = phi i32 [ %2180, %2178 ], [ %2190, %2185 ]
  %2193 = getelementptr inbounds %struct.BezTriple, ptr %2179, i64 1, i32 0, i64 1
  %2194 = load float, ptr %2193, align 4, !tbaa !82
  %2195 = fcmp fast ugt float %2194, %1983
  br i1 %2195, label %2202, label %2196

2196:                                             ; preds = %2191
  %2197 = getelementptr inbounds %struct.BezTriple, ptr %2179, i64 1, i32 8
  %2198 = load i8, ptr %2197, align 4, !tbaa !340
  %2199 = and i8 %2198, 1
  %2200 = zext i8 %2199 to i32
  %2201 = add nsw i32 %2192, %2200
  br label %2202

2202:                                             ; preds = %2196, %2191
  %2203 = phi i32 [ %2192, %2191 ], [ %2201, %2196 ]
  %2204 = getelementptr inbounds %struct.BezTriple, ptr %2179, i64 2
  %2205 = add i32 %2181, 2
  %2206 = icmp eq i32 %2205, %2002
  br i1 %2206, label %2207, label %2178, !llvm.loop !473

2207:                                             ; preds = %2202, %1998
  %2208 = phi i32 [ undef, %1998 ], [ %2203, %2202 ]
  %2209 = phi ptr [ %1985, %1998 ], [ %2204, %2202 ]
  %2210 = phi i32 [ %1973, %1998 ], [ %2203, %2202 ]
  %2211 = icmp eq i32 %1999, 0
  br i1 %2211, label %2237, label %2212

2212:                                             ; preds = %2207
  %2213 = getelementptr inbounds [3 x [3 x float]], ptr %2209, i64 0, i64 1
  %2214 = load float, ptr %2213, align 4, !tbaa !82
  %2215 = fcmp fast ugt float %2214, %1983
  br i1 %2215, label %2237, label %2216

2216:                                             ; preds = %2212
  %2217 = getelementptr inbounds %struct.BezTriple, ptr %2209, i64 0, i32 8
  %2218 = load i8, ptr %2217, align 4, !tbaa !340
  %2219 = and i8 %2218, 1
  %2220 = zext i8 %2219 to i32
  %2221 = add nsw i32 %2210, %2220
  br label %2237

2222:                                             ; preds = %2173, %1993
  %2223 = phi i32 [ undef, %1993 ], [ %2174, %2173 ]
  %2224 = phi ptr [ %1985, %1993 ], [ %2175, %2173 ]
  %2225 = phi i32 [ %1973, %1993 ], [ %2174, %2173 ]
  %2226 = icmp eq i32 %1994, 0
  br i1 %2226, label %2237, label %2227

2227:                                             ; preds = %2222
  %2228 = getelementptr inbounds [3 x [3 x float]], ptr %2224, i64 0, i64 1
  %2229 = load float, ptr %2228, align 4, !tbaa !82
  %2230 = fcmp fast ult float %2229, %1983
  br i1 %2230, label %2237, label %2231

2231:                                             ; preds = %2227
  %2232 = getelementptr inbounds %struct.BezTriple, ptr %2224, i64 0, i32 8
  %2233 = load i8, ptr %2232, align 4, !tbaa !340
  %2234 = and i8 %2233, 1
  %2235 = zext i8 %2234 to i32
  %2236 = add nsw i32 %2225, %2235
  br label %2237

2237:                                             ; preds = %2222, %2231, %2227, %2137, %2207, %2216, %2212, %2127, %1987, %1982
  %2238 = phi i32 [ %1973, %1982 ], [ %1973, %1987 ], [ %2131, %2127 ], [ %2208, %2207 ], [ %2210, %2212 ], [ %2221, %2216 ], [ %2145, %2137 ], [ %2223, %2222 ], [ %2225, %2227 ], [ %2236, %2231 ]
  %2239 = load ptr, ptr %1972, align 8, !tbaa !33
  %2240 = icmp eq ptr %2239, null
  br i1 %2240, label %2241, label %1971, !llvm.loop !472

2241:                                             ; preds = %2237, %1875, %1756
  %2242 = phi i32 [ %1757, %1756 ], [ %1876, %1875 ], [ %2238, %2237 ]
  %2243 = icmp eq i32 %2242, 0
  br i1 %2243, label %2579, label %2244

2244:                                             ; preds = %2241
  %2245 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 9
  store i32 %2242, ptr %2245, align 8, !tbaa !5
  %2246 = load ptr, ptr @MEM_callocN, align 8, !tbaa !33
  %2247 = sext i32 %2242 to i64
  %2248 = mul nsw i64 %2247, 224
  %2249 = call ptr %2246(i64 noundef %2248, ptr noundef nonnull @.str.34) #18
  %2250 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 10
  store ptr %2249, ptr %2250, align 8, !tbaa !19
  %2251 = load ptr, ptr @MEM_callocN, align 8, !tbaa !33
  %2252 = load i32, ptr %2245, align 8, !tbaa !5
  %2253 = sext i32 %2252 to i64
  %2254 = mul nsw i64 %2253, 56
  %2255 = call ptr %2251(i64 noundef %2254, ptr noundef nonnull @.str.35) #18
  %2256 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 12
  store ptr %2255, ptr %2256, align 8, !tbaa !143
  %2257 = load ptr, ptr @MEM_callocN, align 8, !tbaa !33
  %2258 = load i32, ptr %2245, align 8, !tbaa !5
  %2259 = sext i32 %2258 to i64
  %2260 = shl nsw i64 %2259, 2
  %2261 = call ptr %2257(i64 noundef %2260, ptr noundef nonnull @.str.36) #18
  %2262 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 40
  store ptr %2261, ptr %2262, align 8, !tbaa !66
  %2263 = load i32, ptr %1675, align 4, !tbaa !24
  %2264 = or i32 %2263, 131072
  store i32 %2264, ptr %1675, align 4, !tbaa !24
  %2265 = load ptr, ptr %2250, align 8, !tbaa !19
  %2266 = load ptr, ptr %2256, align 8, !tbaa !143
  call void @unit_m3(ptr noundef nonnull %7) #18
  call void @unit_m3(ptr noundef nonnull %8) #18
  %2267 = load i32, ptr %1, align 8, !tbaa !161
  %2268 = and i32 %2267, -2
  %2269 = icmp eq i32 %2268, 2
  br i1 %2269, label %2270, label %2308

2270:                                             ; preds = %2244
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %11) #18
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %12) #18
  call void @UI_view2d_scale_get(ptr noundef nonnull %1684, ptr noundef nonnull %11, ptr noundef nonnull %12) #18
  %2271 = load float, ptr %11, align 4, !tbaa !82
  %2272 = load float, ptr %12, align 4, !tbaa !82
  %2273 = load <4 x float>, ptr %7, align 16, !tbaa !82
  %2274 = insertelement <4 x float> poison, float %2271, i64 0
  %2275 = insertelement <4 x float> %2274, float %2272, i64 1
  %2276 = shufflevector <4 x float> %2275, <4 x float> poison, <4 x i32> <i32 0, i32 0, i32 0, i32 1>
  %2277 = fmul fast <4 x float> %2273, %2276
  store <4 x float> %2277, ptr %7, align 16, !tbaa !82
  %2278 = getelementptr inbounds [3 x [3 x float]], ptr %7, i64 0, i64 1, i64 1
  %2279 = load <2 x float>, ptr %2278, align 16, !tbaa !82
  %2280 = insertelement <2 x float> poison, float %2272, i64 0
  %2281 = shufflevector <2 x float> %2280, <2 x float> poison, <2 x i32> zeroinitializer
  %2282 = fmul fast <2 x float> %2279, %2281
  store <2 x float> %2282, ptr %2278, align 16, !tbaa !82
  %2283 = call fast float @llvm.fabs.f32(float %2271)
  %2284 = fcmp fast ult float %2283, 0x3E80000000000000
  br i1 %2284, label %2294, label %2285

2285:                                             ; preds = %2270
  %2286 = fdiv fast float 1.000000e+00, %2271
  %2287 = load <2 x float>, ptr %8, align 16, !tbaa !82
  %2288 = insertelement <2 x float> poison, float %2286, i64 0
  %2289 = shufflevector <2 x float> %2288, <2 x float> poison, <2 x i32> zeroinitializer
  %2290 = fmul fast <2 x float> %2287, %2289
  store <2 x float> %2290, ptr %8, align 16, !tbaa !82
  %2291 = getelementptr inbounds float, ptr %8, i64 2
  %2292 = load float, ptr %2291, align 8, !tbaa !82
  %2293 = fmul fast float %2292, %2286
  store float %2293, ptr %2291, align 8, !tbaa !82
  br label %2294

2294:                                             ; preds = %2285, %2270
  %2295 = call fast float @llvm.fabs.f32(float %2272)
  %2296 = fcmp fast ult float %2295, 0x3E80000000000000
  br i1 %2296, label %2307, label %2297

2297:                                             ; preds = %2294
  %2298 = getelementptr inbounds [3 x [3 x float]], ptr %8, i64 0, i64 1
  %2299 = fdiv fast float 1.000000e+00, %2272
  %2300 = load <2 x float>, ptr %2298, align 4, !tbaa !82
  %2301 = insertelement <2 x float> poison, float %2299, i64 0
  %2302 = shufflevector <2 x float> %2301, <2 x float> poison, <2 x i32> zeroinitializer
  %2303 = fmul fast <2 x float> %2300, %2302
  store <2 x float> %2303, ptr %2298, align 4, !tbaa !82
  %2304 = getelementptr inbounds [3 x [3 x float]], ptr %8, i64 0, i64 1, i64 2
  %2305 = load float, ptr %2304, align 4, !tbaa !82
  %2306 = fmul fast float %2305, %2299
  store float %2306, ptr %2304, align 4, !tbaa !82
  br label %2307

2307:                                             ; preds = %2297, %2294
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %12) #18
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %11) #18
  br label %2308

2308:                                             ; preds = %2307, %2244
  %2309 = load ptr, ptr %6, align 8, !tbaa !33
  %2310 = icmp eq ptr %2309, null
  br i1 %2310, label %2579, label %2311

2311:                                             ; preds = %2308
  %2312 = getelementptr inbounds %struct.bAnimContext, ptr %5, i64 0, i32 9
  %2313 = icmp ne i8 %1690, 0
  %2314 = icmp ne i8 %1705, 0
  br label %2315

2315:                                             ; preds = %2573, %2311
  %2316 = phi ptr [ %2309, %2311 ], [ %2577, %2573 ]
  %2317 = phi ptr [ %2265, %2311 ], [ %2576, %2573 ]
  %2318 = phi ptr [ %2266, %2311 ], [ %2575, %2573 ]
  %2319 = phi ptr [ %2261, %2311 ], [ %2574, %2573 ]
  %2320 = call ptr @ANIM_nla_mapping_get(ptr noundef nonnull %5, ptr noundef nonnull %2316) #18
  %2321 = getelementptr inbounds %struct.bAnimListElem, ptr %2316, i64 0, i32 8
  %2322 = load ptr, ptr %2321, align 8, !tbaa !192
  %2323 = getelementptr inbounds %struct.FCurve, ptr %2322, i64 0, i32 9
  %2324 = load i16, ptr %2323, align 8, !tbaa !237
  %2325 = lshr i16 %2324, 11
  %2326 = trunc i16 %2325 to i8
  %2327 = and i8 %2326, 1
  %2328 = icmp eq ptr %2320, null
  %2329 = load i32, ptr %1737, align 8, !tbaa !224
  %2330 = sitofp i32 %2329 to float
  br i1 %2328, label %2333, label %2331

2331:                                             ; preds = %2315
  %2332 = call fast nofpclass(nan inf) float @BKE_nla_tweakedit_remap(ptr noundef nonnull %2320, float noundef nofpclass(nan inf) %2330, i16 noundef signext 1) #18
  br label %2333

2333:                                             ; preds = %2331, %2315
  %2334 = phi float [ %2332, %2331 ], [ %2330, %2315 ]
  %2335 = getelementptr inbounds %struct.FCurve, ptr %2322, i64 0, i32 5
  %2336 = load ptr, ptr %2335, align 8, !tbaa !194
  %2337 = icmp eq ptr %2336, null
  br i1 %2337, label %2573, label %2338

2338:                                             ; preds = %2333
  %2339 = load ptr, ptr %2312, align 8, !tbaa !476
  %2340 = getelementptr inbounds %struct.bAnimListElem, ptr %2316, i64 0, i32 9
  %2341 = load ptr, ptr %2340, align 8, !tbaa !456
  %2342 = load ptr, ptr %2321, align 8, !tbaa !192
  %2343 = call fast nofpclass(nan inf) float @ANIM_unit_mapping_get_factor(ptr noundef %2339, ptr noundef %2341, ptr noundef %2342, i16 noundef signext %1710) #18
  %2344 = getelementptr inbounds %struct.FCurve, ptr %2322, i64 0, i32 7
  %2345 = load i32, ptr %2344, align 8, !tbaa !196
  %2346 = icmp eq i32 %2345, 0
  br i1 %2346, label %2569, label %2347

2347:                                             ; preds = %2338
  %2348 = load ptr, ptr %2335, align 8, !tbaa !194
  %2349 = icmp eq i8 %2327, 0
  br label %2350

2350:                                             ; preds = %2561, %2347
  %2351 = phi ptr [ %2317, %2347 ], [ %2564, %2561 ]
  %2352 = phi ptr [ %2318, %2347 ], [ %2563, %2561 ]
  %2353 = phi ptr [ %2319, %2347 ], [ %2562, %2561 ]
  %2354 = phi ptr [ %2348, %2347 ], [ %2566, %2561 ]
  %2355 = phi i32 [ 0, %2347 ], [ %2565, %2561 ]
  %2356 = load i8, ptr %1733, align 8, !tbaa !263
  %2357 = getelementptr inbounds [3 x [3 x float]], ptr %2354, i64 0, i64 1
  %2358 = load float, ptr %2357, align 4, !tbaa !82
  switch i8 %2356, label %2361 [
    i8 66, label %2363
    i8 82, label %2359
  ]

2359:                                             ; preds = %2350
  %2360 = fcmp fast ult float %2358, %2334
  br i1 %2360, label %2561, label %2363

2361:                                             ; preds = %2350
  %2362 = fcmp fast ugt float %2358, %2334
  br i1 %2362, label %2561, label %2363

2363:                                             ; preds = %2361, %2359, %2350
  %2364 = getelementptr inbounds %struct.BezTriple, ptr %2354, i64 0, i32 8
  %2365 = load i8, ptr %2364, align 4, !tbaa !340
  %2366 = and i8 %2365, 1
  br i1 %1695, label %2367, label %2374

2367:                                             ; preds = %2363
  %2368 = getelementptr inbounds %struct.BezTriple, ptr %2354, i64 0, i32 7
  %2369 = load i8, ptr %2368, align 1, !tbaa !341
  %2370 = and i8 %2369, 1
  %2371 = getelementptr inbounds %struct.BezTriple, ptr %2354, i64 0, i32 9
  %2372 = load i8, ptr %2371, align 1, !tbaa !342
  %2373 = and i8 %2372, 1
  br label %2374

2374:                                             ; preds = %2367, %2363
  %2375 = phi i8 [ %2370, %2367 ], [ %2366, %2363 ]
  %2376 = phi i8 [ %2373, %2367 ], [ %2366, %2363 ]
  %2377 = icmp ne i8 %2366, 0
  %2378 = select i1 %2313, i1 %2377, i1 false
  br i1 %2378, label %2423, label %2379

2379:                                             ; preds = %2374
  %2380 = icmp eq i8 %2375, 0
  br i1 %2380, label %2399, label %2381

2381:                                             ; preds = %2379
  %2382 = getelementptr inbounds %struct.TransData, ptr %2351, i64 0, i32 16
  %2383 = load i32, ptr %2382, align 8, !tbaa !20
  %2384 = or i32 %2383, 4096
  store i32 %2384, ptr %2382, align 8, !tbaa !20
  %2385 = load ptr, ptr @MEM_mallocN, align 8, !tbaa !33
  %2386 = call ptr %2385(i64 noundef 24, ptr noundef nonnull @.str.37) #18
  %2387 = getelementptr inbounds %struct.TransData, ptr %2351, i64 0, i32 14
  store ptr %2386, ptr %2387, align 8, !tbaa !211
  %2388 = getelementptr inbounds %struct.BezTriple, ptr %2354, i64 0, i32 5
  %2389 = load i8, ptr %2388, align 1, !tbaa !477
  store i8 %2389, ptr %2386, align 8, !tbaa !478
  %2390 = getelementptr inbounds %struct.TransDataCurveHandleFlags, ptr %2386, i64 0, i32 2
  store ptr %2388, ptr %2390, align 8, !tbaa !479
  %2391 = getelementptr inbounds %struct.BezTriple, ptr %2354, i64 0, i32 6
  %2392 = load i8, ptr %2391, align 2, !tbaa !480
  %2393 = getelementptr inbounds %struct.TransDataCurveHandleFlags, ptr %2386, i64 0, i32 1
  store i8 %2392, ptr %2393, align 1, !tbaa !481
  %2394 = getelementptr inbounds %struct.TransDataCurveHandleFlags, ptr %2386, i64 0, i32 3
  store ptr %2391, ptr %2394, align 8, !tbaa !212
  %2395 = getelementptr inbounds %struct.TransData, ptr %2351, i64 1
  %2396 = getelementptr inbounds %struct.TransData2D, ptr %2352, i64 1
  %2397 = getelementptr inbounds %struct.TransDataGraph, ptr %2353, i64 1
  call fastcc void @bezt_to_transdata(ptr noundef %2351, ptr noundef %2352, ptr noundef %2353, ptr noundef %2320, ptr noundef nonnull %2354, i32 noundef 0, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %2327, ptr noundef nonnull %7, ptr noundef nonnull %8, float noundef nofpclass(nan inf) %2343)
  %2398 = icmp eq i8 %2376, 0
  br i1 %2398, label %2423, label %2415

2399:                                             ; preds = %2379
  %2400 = icmp eq i8 %2376, 0
  br i1 %2400, label %2423, label %2401

2401:                                             ; preds = %2399
  %2402 = getelementptr inbounds %struct.TransData, ptr %2351, i64 0, i32 16
  %2403 = load i32, ptr %2402, align 8, !tbaa !20
  %2404 = or i32 %2403, 4096
  store i32 %2404, ptr %2402, align 8, !tbaa !20
  %2405 = load ptr, ptr @MEM_mallocN, align 8, !tbaa !33
  %2406 = call ptr %2405(i64 noundef 24, ptr noundef nonnull @.str.37) #18
  %2407 = getelementptr inbounds %struct.TransData, ptr %2351, i64 0, i32 14
  store ptr %2406, ptr %2407, align 8, !tbaa !211
  %2408 = getelementptr inbounds %struct.BezTriple, ptr %2354, i64 0, i32 5
  %2409 = load i8, ptr %2408, align 1, !tbaa !477
  store i8 %2409, ptr %2406, align 8, !tbaa !478
  %2410 = getelementptr inbounds %struct.TransDataCurveHandleFlags, ptr %2406, i64 0, i32 2
  store ptr %2408, ptr %2410, align 8, !tbaa !479
  %2411 = getelementptr inbounds %struct.BezTriple, ptr %2354, i64 0, i32 6
  %2412 = load i8, ptr %2411, align 2, !tbaa !480
  %2413 = getelementptr inbounds %struct.TransDataCurveHandleFlags, ptr %2406, i64 0, i32 1
  store i8 %2412, ptr %2413, align 1, !tbaa !481
  %2414 = getelementptr inbounds %struct.TransDataCurveHandleFlags, ptr %2406, i64 0, i32 3
  store ptr %2411, ptr %2414, align 8, !tbaa !212
  br label %2415

2415:                                             ; preds = %2401, %2381
  %2416 = phi ptr [ %2353, %2401 ], [ %2397, %2381 ]
  %2417 = phi ptr [ %2352, %2401 ], [ %2396, %2381 ]
  %2418 = phi ptr [ %2351, %2401 ], [ %2395, %2381 ]
  %2419 = phi ptr [ %2406, %2401 ], [ %2386, %2381 ]
  %2420 = getelementptr inbounds %struct.TransData, ptr %2418, i64 1
  %2421 = getelementptr inbounds %struct.TransData2D, ptr %2417, i64 1
  %2422 = getelementptr inbounds %struct.TransDataGraph, ptr %2416, i64 1
  call fastcc void @bezt_to_transdata(ptr noundef nonnull %2418, ptr noundef %2417, ptr noundef %2416, ptr noundef %2320, ptr noundef nonnull %2354, i32 noundef 2, i8 noundef zeroext 1, i8 noundef zeroext 1, i8 noundef zeroext %2327, ptr noundef nonnull %7, ptr noundef nonnull %8, float noundef nofpclass(nan inf) %2343)
  br label %2423

2423:                                             ; preds = %2415, %2399, %2381, %2374
  %2424 = phi ptr [ %2353, %2374 ], [ %2422, %2415 ], [ %2397, %2381 ], [ %2353, %2399 ]
  %2425 = phi ptr [ %2352, %2374 ], [ %2421, %2415 ], [ %2396, %2381 ], [ %2352, %2399 ]
  %2426 = phi ptr [ %2351, %2374 ], [ %2420, %2415 ], [ %2395, %2381 ], [ %2351, %2399 ]
  %2427 = phi ptr [ null, %2374 ], [ %2419, %2415 ], [ %2386, %2381 ], [ null, %2399 ]
  %2428 = icmp eq i8 %2366, 0
  %2429 = or i1 %2314, %2428
  br i1 %2429, label %2540, label %2430

2430:                                             ; preds = %2423
  br i1 %2313, label %2431, label %2443

2431:                                             ; preds = %2430
  %2432 = icmp eq i8 %2375, 0
  br i1 %2432, label %2437, label %2433

2433:                                             ; preds = %2431
  %2434 = getelementptr inbounds %struct.TransData, ptr %2426, i64 0, i32 16
  %2435 = load i32, ptr %2434, align 8, !tbaa !20
  %2436 = or i32 %2435, 131072
  store i32 %2436, ptr %2434, align 8, !tbaa !20
  br label %2437

2437:                                             ; preds = %2433, %2431
  %2438 = icmp eq i8 %2376, 0
  br i1 %2438, label %2443, label %2439

2439:                                             ; preds = %2437
  %2440 = getelementptr inbounds %struct.TransData, ptr %2426, i64 0, i32 16
  %2441 = load i32, ptr %2440, align 8, !tbaa !20
  %2442 = or i32 %2441, 262144
  store i32 %2442, ptr %2440, align 8, !tbaa !20
  br label %2443

2443:                                             ; preds = %2439, %2437, %2430
  %2444 = icmp eq i8 %2375, 0
  %2445 = icmp eq i8 %2376, 0
  %2446 = select i1 %2444, i1 true, i1 %2445
  %2447 = icmp eq ptr %2427, null
  %2448 = and i1 %2446, %2447
  br i1 %2448, label %2449, label %2463

2449:                                             ; preds = %2443
  %2450 = getelementptr inbounds %struct.TransData, ptr %2426, i64 0, i32 16
  %2451 = load i32, ptr %2450, align 8, !tbaa !20
  %2452 = or i32 %2451, 4096
  store i32 %2452, ptr %2450, align 8, !tbaa !20
  %2453 = load ptr, ptr @MEM_mallocN, align 8, !tbaa !33
  %2454 = call ptr %2453(i64 noundef 24, ptr noundef nonnull @.str.37) #18
  %2455 = getelementptr inbounds %struct.TransData, ptr %2426, i64 0, i32 14
  store ptr %2454, ptr %2455, align 8, !tbaa !211
  %2456 = getelementptr inbounds %struct.BezTriple, ptr %2354, i64 0, i32 5
  %2457 = load i8, ptr %2456, align 1, !tbaa !477
  store i8 %2457, ptr %2454, align 8, !tbaa !478
  %2458 = getelementptr inbounds %struct.TransDataCurveHandleFlags, ptr %2454, i64 0, i32 2
  store ptr %2456, ptr %2458, align 8, !tbaa !479
  %2459 = getelementptr inbounds %struct.BezTriple, ptr %2354, i64 0, i32 6
  %2460 = load i8, ptr %2459, align 2, !tbaa !480
  %2461 = getelementptr inbounds %struct.TransDataCurveHandleFlags, ptr %2454, i64 0, i32 1
  store i8 %2460, ptr %2461, align 1, !tbaa !481
  %2462 = getelementptr inbounds %struct.TransDataCurveHandleFlags, ptr %2454, i64 0, i32 3
  store ptr %2459, ptr %2462, align 8, !tbaa !212
  br label %2463

2463:                                             ; preds = %2449, %2443
  %2464 = phi ptr [ %2454, %2449 ], [ %2427, %2443 ]
  %2465 = getelementptr inbounds %struct.TransData, ptr %2426, i64 1
  %2466 = getelementptr inbounds %struct.TransData2D, ptr %2425, i64 1
  %2467 = getelementptr inbounds %struct.TransDataGraph, ptr %2424, i64 1
  %2468 = load float, ptr %2357, align 4, !tbaa !82
  br i1 %2328, label %2488, label %2469

2469:                                             ; preds = %2463
  %2470 = call fast nofpclass(nan inf) float @BKE_nla_tweakedit_remap(ptr noundef nonnull %2320, float noundef nofpclass(nan inf) %2468, i16 noundef signext 2) #18
  store float %2470, ptr %2425, align 8, !tbaa !82
  %2471 = getelementptr inbounds [3 x [3 x float]], ptr %2354, i64 0, i64 1, i64 1
  %2472 = load float, ptr %2471, align 4, !tbaa !82
  %2473 = fmul fast float %2472, %2343
  %2474 = getelementptr inbounds [3 x float], ptr %2425, i64 0, i64 1
  store float %2473, ptr %2474, align 4, !tbaa !82
  %2475 = getelementptr inbounds [3 x float], ptr %2425, i64 0, i64 2
  store float 0.000000e+00, ptr %2475, align 8, !tbaa !82
  %2476 = getelementptr inbounds %struct.TransData2D, ptr %2425, i64 0, i32 1
  store ptr %2357, ptr %2476, align 8, !tbaa !178
  %2477 = getelementptr inbounds %struct.TransData, ptr %2426, i64 0, i32 3
  store ptr %2425, ptr %2477, align 8, !tbaa !182
  %2478 = load float, ptr %2357, align 4, !tbaa !82
  %2479 = call fast nofpclass(nan inf) float @BKE_nla_tweakedit_remap(ptr noundef nonnull %2320, float noundef nofpclass(nan inf) %2478, i16 noundef signext 2) #18
  %2480 = getelementptr inbounds %struct.TransData, ptr %2426, i64 0, i32 7
  store float %2479, ptr %2480, align 4, !tbaa !82
  %2481 = load float, ptr %2471, align 4, !tbaa !82
  %2482 = fmul fast float %2481, %2343
  %2483 = getelementptr inbounds %struct.TransData, ptr %2426, i64 0, i32 7, i64 1
  store float %2482, ptr %2483, align 4, !tbaa !82
  %2484 = getelementptr inbounds %struct.TransData, ptr %2426, i64 0, i32 7, i64 2
  store float 0.000000e+00, ptr %2484, align 4, !tbaa !82
  %2485 = load ptr, ptr %2477, align 8, !tbaa !182
  %2486 = getelementptr inbounds float, ptr %2485, i64 1
  %2487 = getelementptr inbounds float, ptr %2485, i64 2
  br label %2504

2488:                                             ; preds = %2463
  store float %2468, ptr %2425, align 8, !tbaa !82
  %2489 = getelementptr inbounds [3 x [3 x float]], ptr %2354, i64 0, i64 1, i64 1
  %2490 = load float, ptr %2489, align 4, !tbaa !82
  %2491 = fmul fast float %2490, %2343
  %2492 = getelementptr inbounds [3 x float], ptr %2425, i64 0, i64 1
  store float %2491, ptr %2492, align 4, !tbaa !82
  %2493 = getelementptr inbounds [3 x float], ptr %2425, i64 0, i64 2
  store float 0.000000e+00, ptr %2493, align 8, !tbaa !82
  %2494 = getelementptr inbounds %struct.TransData2D, ptr %2425, i64 0, i32 1
  store ptr %2357, ptr %2494, align 8, !tbaa !178
  %2495 = getelementptr inbounds %struct.TransData, ptr %2426, i64 0, i32 3
  store ptr %2425, ptr %2495, align 8, !tbaa !182
  %2496 = getelementptr inbounds %struct.TransData, ptr %2426, i64 0, i32 7
  %2497 = load float, ptr %2357, align 4, !tbaa !82
  store float %2497, ptr %2496, align 4, !tbaa !82
  %2498 = load float, ptr %2489, align 4, !tbaa !82
  %2499 = getelementptr inbounds %struct.TransData, ptr %2426, i64 0, i32 7, i64 1
  store float %2498, ptr %2499, align 4, !tbaa !82
  %2500 = getelementptr inbounds [3 x [3 x float]], ptr %2354, i64 0, i64 1, i64 2
  %2501 = load float, ptr %2500, align 4, !tbaa !82
  %2502 = getelementptr inbounds %struct.TransData, ptr %2426, i64 0, i32 7, i64 2
  store float %2501, ptr %2502, align 4, !tbaa !82
  %2503 = fmul fast float %2498, %2343
  store float %2503, ptr %2499, align 4, !tbaa !82
  br label %2504

2504:                                             ; preds = %2488, %2469
  %2505 = phi ptr [ %2425, %2488 ], [ %2485, %2469 ]
  %2506 = phi ptr [ %2492, %2488 ], [ %2486, %2469 ]
  %2507 = phi ptr [ %2493, %2488 ], [ %2487, %2469 ]
  %2508 = load float, ptr %2505, align 4, !tbaa !82
  %2509 = getelementptr inbounds %struct.TransData, ptr %2426, i64 0, i32 4
  store float %2508, ptr %2509, align 4
  %2510 = load float, ptr %2506, align 4, !tbaa !82
  %2511 = getelementptr inbounds %struct.TransData, ptr %2426, i64 0, i32 4, i64 1
  store float %2510, ptr %2511, align 4
  %2512 = load float, ptr %2507, align 4, !tbaa !82
  %2513 = getelementptr inbounds %struct.TransData, ptr %2426, i64 0, i32 4, i64 2
  store float %2512, ptr %2513, align 4
  %2514 = getelementptr inbounds [3 x [3 x float]], ptr %2354, i64 0, i64 2
  %2515 = getelementptr inbounds %struct.TransData2D, ptr %2425, i64 0, i32 4
  %2516 = load float, ptr %2354, align 4, !tbaa !82
  store float %2516, ptr %2515, align 4, !tbaa !82
  %2517 = getelementptr inbounds float, ptr %2354, i64 1
  %2518 = load float, ptr %2517, align 4, !tbaa !82
  %2519 = getelementptr inbounds %struct.TransData2D, ptr %2425, i64 0, i32 4, i64 1
  store float %2518, ptr %2519, align 4, !tbaa !82
  %2520 = getelementptr inbounds %struct.TransData2D, ptr %2425, i64 0, i32 5
  %2521 = load float, ptr %2514, align 4, !tbaa !82
  store float %2521, ptr %2520, align 4, !tbaa !82
  %2522 = getelementptr inbounds [3 x [3 x float]], ptr %2354, i64 0, i64 2, i64 1
  %2523 = load float, ptr %2522, align 4, !tbaa !82
  %2524 = getelementptr inbounds %struct.TransData2D, ptr %2425, i64 0, i32 5, i64 1
  store float %2523, ptr %2524, align 4, !tbaa !82
  %2525 = getelementptr inbounds %struct.TransData2D, ptr %2425, i64 0, i32 2
  store ptr %2354, ptr %2525, align 8
  %2526 = getelementptr inbounds %struct.TransData2D, ptr %2425, i64 0, i32 3
  store ptr %2514, ptr %2526, align 8
  %2527 = getelementptr inbounds %struct.TransData, ptr %2426, i64 0, i32 10
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(36) %2527, i8 0, i64 32, i1 false)
  %2528 = getelementptr inbounds %struct.TransData, ptr %2426, i64 0, i32 10, i64 2, i64 2
  store float 1.000000e+00, ptr %2528, align 8, !tbaa !82
  %2529 = getelementptr inbounds %struct.TransData, ptr %2426, i64 0, i32 13
  store ptr null, ptr %2529, align 8, !tbaa !334
  %2530 = getelementptr inbounds %struct.TransData, ptr %2426, i64 0, i32 5
  store ptr null, ptr %2530, align 8, !tbaa !423
  %2531 = getelementptr inbounds %struct.TransData, ptr %2426, i64 0, i32 15
  store ptr %2320, ptr %2531, align 8, !tbaa !144
  %2532 = getelementptr inbounds %struct.TransData, ptr %2426, i64 0, i32 16
  %2533 = load i32, ptr %2532, align 8, !tbaa !20
  %2534 = or i32 %2533, 1
  store i32 %2534, ptr %2532, align 8, !tbaa !20
  store float 0.000000e+00, ptr %2426, align 8, !tbaa !25
  br i1 %2349, label %2537, label %2535

2535:                                             ; preds = %2504
  %2536 = or i32 %2533, 32769
  store i32 %2536, ptr %2532, align 8, !tbaa !20
  br label %2537

2537:                                             ; preds = %2535, %2504
  %2538 = getelementptr inbounds %struct.TransData, ptr %2426, i64 0, i32 8
  call void @copy_m3_m3(ptr noundef nonnull %2538, ptr noundef nonnull %7) #18
  %2539 = getelementptr inbounds %struct.TransData, ptr %2426, i64 0, i32 9
  call void @copy_m3_m3(ptr noundef nonnull %2539, ptr noundef nonnull %8) #18
  store float %2343, ptr %2424, align 4, !tbaa !220
  br label %2540

2540:                                             ; preds = %2537, %2423
  %2541 = phi ptr [ %2424, %2423 ], [ %2467, %2537 ]
  %2542 = phi ptr [ %2425, %2423 ], [ %2466, %2537 ]
  %2543 = phi ptr [ %2426, %2423 ], [ %2465, %2537 ]
  %2544 = phi ptr [ %2427, %2423 ], [ %2464, %2537 ]
  %2545 = getelementptr inbounds %struct.BezTriple, ptr %2354, i64 0, i32 5
  %2546 = load i8, ptr %2545, align 1, !tbaa !477
  switch i8 %2546, label %2561 [
    i8 1, label %2547
    i8 4, label %2547
  ]

2547:                                             ; preds = %2540, %2540
  %2548 = getelementptr inbounds %struct.BezTriple, ptr %2354, i64 0, i32 6
  %2549 = load i8, ptr %2548, align 2, !tbaa !480
  switch i8 %2549, label %2561 [
    i8 1, label %2550
    i8 4, label %2550
  ]

2550:                                             ; preds = %2547, %2547
  %2551 = load i32, ptr %1, align 8, !tbaa !161
  %2552 = and i32 %2551, -2
  %2553 = icmp eq i32 %2552, 2
  br i1 %2553, label %2554, label %2561

2554:                                             ; preds = %2550
  %2555 = icmp ne ptr %2544, null
  %2556 = icmp ne i8 %2375, 0
  %2557 = select i1 %2555, i1 %2556, i1 false
  %2558 = icmp ne i8 %2376, 0
  %2559 = select i1 %2557, i1 %2558, i1 false
  br i1 %2559, label %2560, label %2561

2560:                                             ; preds = %2554
  store i8 3, ptr %2545, align 1, !tbaa !477
  store i8 3, ptr %2548, align 2, !tbaa !480
  br label %2561

2561:                                             ; preds = %2560, %2554, %2550, %2547, %2540, %2361, %2359
  %2562 = phi ptr [ %2353, %2361 ], [ %2541, %2550 ], [ %2541, %2547 ], [ %2541, %2540 ], [ %2541, %2554 ], [ %2541, %2560 ], [ %2353, %2359 ]
  %2563 = phi ptr [ %2352, %2361 ], [ %2542, %2550 ], [ %2542, %2547 ], [ %2542, %2540 ], [ %2542, %2554 ], [ %2542, %2560 ], [ %2352, %2359 ]
  %2564 = phi ptr [ %2351, %2361 ], [ %2543, %2550 ], [ %2543, %2547 ], [ %2543, %2540 ], [ %2543, %2554 ], [ %2543, %2560 ], [ %2351, %2359 ]
  %2565 = add nuw nsw i32 %2355, 1
  %2566 = getelementptr inbounds %struct.BezTriple, ptr %2354, i64 1
  %2567 = load i32, ptr %2344, align 8, !tbaa !196
  %2568 = icmp ult i32 %2565, %2567
  br i1 %2568, label %2350, label %2569, !llvm.loop !482

2569:                                             ; preds = %2561, %2338
  %2570 = phi ptr [ %2319, %2338 ], [ %2562, %2561 ]
  %2571 = phi ptr [ %2318, %2338 ], [ %2563, %2561 ]
  %2572 = phi ptr [ %2317, %2338 ], [ %2564, %2561 ]
  call void @testhandles_fcurve(ptr noundef nonnull %2322, i8 noundef zeroext %1696) #18
  br label %2573

2573:                                             ; preds = %2569, %2333
  %2574 = phi ptr [ %2570, %2569 ], [ %2319, %2333 ]
  %2575 = phi ptr [ %2571, %2569 ], [ %2318, %2333 ]
  %2576 = phi ptr [ %2572, %2569 ], [ %2317, %2333 ]
  %2577 = load ptr, ptr %2316, align 8, !tbaa !33
  %2578 = icmp eq ptr %2577, null
  br i1 %2578, label %2579, label %2315, !llvm.loop !483

2579:                                             ; preds = %2573, %2308, %2241, %1731
  call void @ANIM_animdata_freelist(ptr noundef nonnull %6) #18
  br label %2580

2580:                                             ; preds = %1704, %2579
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %8) #18
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %7) #18
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %6) #18
  call void @llvm.lifetime.end.p0(i64 80, ptr nonnull %5) #18
  br label %2896

2581:                                             ; preds = %350
  %2582 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 1
  %2583 = load i32, ptr %2582, align 4, !tbaa !24
  %2584 = or i32 %2583, 32832
  store i32 %2584, ptr %2582, align 4, !tbaa !24
  %2585 = load float, ptr getelementptr inbounds (%struct.UserDef, ptr @U, i64 0, i32 106), align 4, !tbaa !138
  %2586 = load i32, ptr getelementptr inbounds (%struct.UserDef, ptr @U, i64 0, i32 33), align 4, !tbaa !142
  %2587 = sitofp i32 %2586 to float
  %2588 = fmul fast float %2585, 0x3F8C71C720000000
  %2589 = fmul fast float %2588, %2587
  %2590 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 54
  %2591 = load ptr, ptr %2590, align 8, !tbaa !148
  %2592 = getelementptr inbounds %struct.ScrArea, ptr %2591, i64 0, i32 19
  %2593 = load ptr, ptr %2592, align 8, !tbaa !170
  %2594 = getelementptr %struct.TransInfo, ptr %1, i64 0, i32 9
  store i32 0, ptr %2594, align 8, !tbaa !5
  %2595 = getelementptr inbounds %struct.SpaceNode, ptr %2593, i64 0, i32 19
  %2596 = load ptr, ptr %2595, align 8, !tbaa !269
  %2597 = icmp eq ptr %2596, null
  br i1 %2597, label %2702, label %2598

2598:                                             ; preds = %2581
  %2599 = and i32 %2584, -33560577
  store i32 %2599, ptr %2582, align 4, !tbaa !24
  %2600 = getelementptr inbounds %struct.bNodeTree, ptr %2596, i64 0, i32 7
  %2601 = load ptr, ptr %2600, align 8, !tbaa !33
  %2602 = icmp eq ptr %2601, null
  br i1 %2602, label %2629, label %2603

2603:                                             ; preds = %2598, %2625
  %2604 = phi i32 [ %2626, %2625 ], [ 0, %2598 ]
  %2605 = phi ptr [ %2627, %2625 ], [ %2601, %2598 ]
  %2606 = getelementptr inbounds %struct.bNode, ptr %2605, i64 0, i32 7
  %2607 = load i32, ptr %2606, align 8, !tbaa !275
  %2608 = and i32 %2607, 1
  %2609 = icmp eq i32 %2608, 0
  br i1 %2609, label %2623, label %2610

2610:                                             ; preds = %2603, %2615
  %2611 = phi ptr [ %2613, %2615 ], [ %2605, %2603 ]
  %2612 = getelementptr inbounds %struct.bNode, ptr %2611, i64 0, i32 19
  %2613 = load ptr, ptr %2612, align 8, !tbaa !145
  %2614 = icmp eq ptr %2613, null
  br i1 %2614, label %2620, label %2615

2615:                                             ; preds = %2610
  %2616 = getelementptr inbounds %struct.bNode, ptr %2613, i64 0, i32 7
  %2617 = load i32, ptr %2616, align 8, !tbaa !275
  %2618 = and i32 %2617, 8192
  %2619 = icmp eq i32 %2618, 0
  br i1 %2619, label %2610, label %2623, !llvm.loop !484

2620:                                             ; preds = %2610
  %2621 = or i32 %2607, 8192
  store i32 %2621, ptr %2606, align 8, !tbaa !275
  %2622 = add nsw i32 %2604, 1
  store i32 %2622, ptr %2594, align 8, !tbaa !5
  br label %2625

2623:                                             ; preds = %2615, %2603
  %2624 = and i32 %2607, -8193
  store i32 %2624, ptr %2606, align 8, !tbaa !275
  br label %2625

2625:                                             ; preds = %2623, %2620
  %2626 = phi i32 [ %2622, %2620 ], [ %2604, %2623 ]
  %2627 = load ptr, ptr %2605, align 8, !tbaa !33
  %2628 = icmp eq ptr %2627, null
  br i1 %2628, label %2629, label %2603, !llvm.loop !485

2629:                                             ; preds = %2625, %2598
  %2630 = phi i32 [ 0, %2598 ], [ %2626, %2625 ]
  %2631 = load ptr, ptr @MEM_callocN, align 8, !tbaa !33
  %2632 = sext i32 %2630 to i64
  %2633 = mul nsw i64 %2632, 224
  %2634 = tail call ptr %2631(i64 noundef %2633, ptr noundef nonnull @.str.38) #18
  %2635 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 10
  store ptr %2634, ptr %2635, align 8, !tbaa !19
  %2636 = load ptr, ptr @MEM_callocN, align 8, !tbaa !33
  %2637 = load i32, ptr %2594, align 8, !tbaa !5
  %2638 = sext i32 %2637 to i64
  %2639 = mul nsw i64 %2638, 56
  %2640 = tail call ptr %2636(i64 noundef %2639, ptr noundef nonnull @.str.39) #18
  %2641 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 12
  store ptr %2640, ptr %2641, align 8, !tbaa !143
  %2642 = load ptr, ptr %2595, align 8, !tbaa !269
  %2643 = getelementptr inbounds %struct.bNodeTree, ptr %2642, i64 0, i32 7
  %2644 = load ptr, ptr %2643, align 8, !tbaa !33
  %2645 = icmp eq ptr %2644, null
  br i1 %2645, label %2702, label %2646

2646:                                             ; preds = %2629, %2697
  %2647 = phi ptr [ %2700, %2697 ], [ %2644, %2629 ]
  %2648 = phi ptr [ %2699, %2697 ], [ %2634, %2629 ]
  %2649 = phi ptr [ %2698, %2697 ], [ %2640, %2629 ]
  %2650 = getelementptr inbounds %struct.bNode, ptr %2647, i64 0, i32 7
  %2651 = load i32, ptr %2650, align 8, !tbaa !275
  %2652 = and i32 %2651, 8192
  %2653 = icmp eq i32 %2652, 0
  br i1 %2653, label %2697, label %2654

2654:                                             ; preds = %2646
  %2655 = getelementptr inbounds %struct.TransData, ptr %2648, i64 1
  %2656 = getelementptr inbounds %struct.TransData2D, ptr %2649, i64 1
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #18
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #18
  %2657 = getelementptr inbounds %struct.bNode, ptr %2647, i64 0, i32 19
  %2658 = load ptr, ptr %2657, align 8, !tbaa !145
  %2659 = icmp eq ptr %2658, null
  %2660 = getelementptr inbounds %struct.bNode, ptr %2647, i64 0, i32 24
  %2661 = load float, ptr %2660, align 8, !tbaa !486
  br i1 %2659, label %2667, label %2662

2662:                                             ; preds = %2654
  %2663 = getelementptr inbounds %struct.bNode, ptr %2647, i64 0, i32 25
  %2664 = load float, ptr %2663, align 4, !tbaa !487
  call void @nodeToView(ptr noundef nonnull %2658, float noundef nofpclass(nan inf) %2661, float noundef nofpclass(nan inf) %2664, ptr noundef nonnull %3, ptr noundef nonnull %4) #18
  %2665 = load float, ptr %3, align 4, !tbaa !82
  %2666 = load float, ptr %4, align 4, !tbaa !82
  br label %2670

2667:                                             ; preds = %2654
  store float %2661, ptr %3, align 4, !tbaa !82
  %2668 = getelementptr inbounds %struct.bNode, ptr %2647, i64 0, i32 25
  %2669 = load float, ptr %2668, align 4, !tbaa !487
  store float %2669, ptr %4, align 4, !tbaa !82
  br label %2670

2670:                                             ; preds = %2667, %2662
  %2671 = phi float [ %2669, %2667 ], [ %2666, %2662 ]
  %2672 = phi float [ %2661, %2667 ], [ %2665, %2662 ]
  %2673 = fmul fast float %2672, %2589
  store float %2673, ptr %2649, align 8, !tbaa !82
  %2674 = fmul fast float %2671, %2589
  %2675 = getelementptr inbounds [3 x float], ptr %2649, i64 0, i64 1
  store float %2674, ptr %2675, align 4, !tbaa !82
  %2676 = getelementptr inbounds [3 x float], ptr %2649, i64 0, i64 2
  store float 0.000000e+00, ptr %2676, align 8, !tbaa !82
  %2677 = getelementptr inbounds %struct.TransData2D, ptr %2649, i64 0, i32 1
  store ptr %2649, ptr %2677, align 8, !tbaa !178
  %2678 = getelementptr inbounds %struct.TransData, ptr %2648, i64 0, i32 16
  %2679 = getelementptr inbounds %struct.TransData, ptr %2648, i64 0, i32 3
  store ptr %2649, ptr %2679, align 8, !tbaa !182
  %2680 = getelementptr inbounds %struct.TransData, ptr %2648, i64 0, i32 4
  store float %2673, ptr %2680, align 4, !tbaa !82
  %2681 = load float, ptr %2675, align 4, !tbaa !82
  %2682 = getelementptr inbounds %struct.TransData, ptr %2648, i64 0, i32 4, i64 1
  store float %2681, ptr %2682, align 4, !tbaa !82
  %2683 = load float, ptr %2676, align 4, !tbaa !82
  %2684 = getelementptr inbounds %struct.TransData, ptr %2648, i64 0, i32 4, i64 2
  store float %2683, ptr %2684, align 4, !tbaa !82
  %2685 = load float, ptr %2649, align 8, !tbaa !82
  %2686 = getelementptr inbounds %struct.TransData, ptr %2648, i64 0, i32 7
  store float %2685, ptr %2686, align 4, !tbaa !82
  %2687 = load float, ptr %2675, align 4, !tbaa !82
  %2688 = getelementptr inbounds %struct.TransData, ptr %2648, i64 0, i32 7, i64 1
  store float %2687, ptr %2688, align 4, !tbaa !82
  %2689 = getelementptr inbounds %struct.TransData, ptr %2648, i64 0, i32 7, i64 2
  store float 0.000000e+00, ptr %2689, align 4, !tbaa !82
  %2690 = getelementptr inbounds %struct.TransData, ptr %2648, i64 0, i32 10
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(36) %2690, i8 0, i64 32, i1 false)
  %2691 = getelementptr inbounds %struct.TransData, ptr %2648, i64 0, i32 10, i64 2, i64 2
  store float 1.000000e+00, ptr %2691, align 8, !tbaa !82
  %2692 = getelementptr inbounds %struct.TransData, ptr %2648, i64 0, i32 13
  store ptr null, ptr %2692, align 8, !tbaa !334
  %2693 = getelementptr inbounds %struct.TransData, ptr %2648, i64 0, i32 5
  store ptr null, ptr %2693, align 8, !tbaa !423
  store i32 1, ptr %2678, align 8, !tbaa !20
  store float 0.000000e+00, ptr %2648, align 8, !tbaa !25
  %2694 = getelementptr inbounds %struct.TransData, ptr %2648, i64 0, i32 8
  call void @unit_m3(ptr noundef nonnull %2694) #18
  %2695 = getelementptr inbounds %struct.TransData, ptr %2648, i64 0, i32 9
  call void @unit_m3(ptr noundef nonnull %2695) #18
  %2696 = getelementptr inbounds %struct.TransData, ptr %2648, i64 0, i32 15
  store ptr %2647, ptr %2696, align 8, !tbaa !144
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #18
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #18
  br label %2697

2697:                                             ; preds = %2670, %2646
  %2698 = phi ptr [ %2656, %2670 ], [ %2649, %2646 ]
  %2699 = phi ptr [ %2655, %2670 ], [ %2648, %2646 ]
  %2700 = load ptr, ptr %2647, align 8, !tbaa !33
  %2701 = icmp eq ptr %2700, null
  br i1 %2701, label %2702, label %2646, !llvm.loop !488

2702:                                             ; preds = %2697, %2581, %2629
  %2703 = getelementptr %struct.TransInfo, ptr %1, i64 0, i32 10
  %2704 = load ptr, ptr %2703, align 8, !tbaa !19
  %2705 = icmp eq ptr %2704, null
  br i1 %2705, label %2896, label %2706

2706:                                             ; preds = %2702
  %2707 = load i32, ptr %2582, align 4, !tbaa !24
  %2708 = and i32 %2707, 2048
  %2709 = icmp eq i32 %2708, 0
  br i1 %2709, label %2896, label %2710

2710:                                             ; preds = %2706
  %2711 = load i32, ptr %2594, align 8, !tbaa !5
  call fastcc void @sort_trans_data(i32 %2711, ptr nonnull %2704)
  call fastcc void @set_prop_dist(ptr noundef nonnull %1, i8 noundef zeroext 1)
  call void @sort_trans_data_dist(ptr noundef nonnull %1)
  br label %2896

2712:                                             ; preds = %350
  %2713 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 1
  %2714 = load i32, ptr %2713, align 4, !tbaa !24
  %2715 = or i32 %2714, 32832
  store i32 %2715, ptr %2713, align 4, !tbaa !24
  %2716 = and i32 %144, 64
  %2717 = icmp eq i32 %2716, 0
  br i1 %2717, label %2719, label %2718

2718:                                             ; preds = %2712
  tail call fastcc void @createTransTrackingData(ptr noundef %0, ptr noundef nonnull %1)
  br label %2896

2719:                                             ; preds = %2712
  %2720 = and i32 %144, 128
  %2721 = icmp eq i32 %2720, 0
  br i1 %2721, label %2896, label %2722

2722:                                             ; preds = %2719
  tail call fastcc void @createTransMaskingData(ptr noundef %0, ptr noundef nonnull %1)
  %2723 = getelementptr %struct.TransInfo, ptr %1, i64 0, i32 10
  %2724 = load ptr, ptr %2723, align 8, !tbaa !19
  %2725 = icmp eq ptr %2724, null
  br i1 %2725, label %2896, label %2726

2726:                                             ; preds = %2722
  %2727 = load i32, ptr %2713, align 4, !tbaa !24
  %2728 = and i32 %2727, 2048
  %2729 = icmp eq i32 %2728, 0
  br i1 %2729, label %2896, label %2730

2730:                                             ; preds = %2726
  %2731 = getelementptr i8, ptr %1, i64 48
  %2732 = load i32, ptr %2731, align 8, !tbaa !5
  tail call fastcc void @sort_trans_data(i32 %2732, ptr nonnull %2724)
  tail call fastcc void @set_prop_dist(ptr noundef nonnull %1, i8 noundef zeroext 1)
  tail call void @sort_trans_data_dist(ptr noundef nonnull %1)
  br label %2896

2733:                                             ; preds = %350
  %2734 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 63
  %2735 = load ptr, ptr %2734, align 8, !tbaa !69
  %2736 = icmp eq ptr %2735, null
  br i1 %2736, label %2778, label %2737

2737:                                             ; preds = %2733
  %2738 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 11
  store ptr null, ptr %2738, align 8, !tbaa !406
  %2739 = getelementptr inbounds %struct.Object, ptr %2735, i64 0, i32 3
  %2740 = load i16, ptr %2739, align 8, !tbaa !50
  switch i16 %2740, label %2749 [
    i16 1, label %2741
    i16 2, label %2742
    i16 3, label %2742
    i16 22, label %2743
    i16 5, label %2744
    i16 25, label %2745
  ]

2741:                                             ; preds = %2737
  tail call fastcc void @createTransEditVerts(ptr noundef nonnull %1)
  br label %2751

2742:                                             ; preds = %2737, %2737
  tail call fastcc void @createTransCurveVerts(ptr noundef nonnull %1)
  br label %2751

2743:                                             ; preds = %2737
  tail call fastcc void @createTransLatticeVerts(ptr noundef nonnull %1)
  br label %2751

2744:                                             ; preds = %2737
  tail call fastcc void @createTransMBallVerts(ptr noundef nonnull %1)
  br label %2751

2745:                                             ; preds = %2737
  %2746 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 1
  %2747 = load i32, ptr %2746, align 4, !tbaa !24
  %2748 = and i32 %2747, -2049
  store i32 %2748, ptr %2746, align 4, !tbaa !24
  tail call fastcc void @createTransArmatureVerts(ptr noundef nonnull %1)
  br label %2751

2749:                                             ; preds = %2737
  %2750 = tail call i32 @puts(ptr nonnull dereferenceable(1) @str)
  br label %2751

2751:                                             ; preds = %2742, %2744, %2749, %2745, %2743, %2741
  %2752 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 1
  %2753 = load i32, ptr %2752, align 4, !tbaa !24
  %2754 = or i32 %2753, 66
  store i32 %2754, ptr %2752, align 4, !tbaa !24
  %2755 = getelementptr %struct.TransInfo, ptr %1, i64 0, i32 10
  %2756 = load ptr, ptr %2755, align 8, !tbaa !19
  %2757 = icmp eq ptr %2756, null
  %2758 = and i32 %2753, 2048
  %2759 = icmp eq i32 %2758, 0
  %2760 = select i1 %2757, i1 true, i1 %2759
  br i1 %2760, label %2770, label %2761

2761:                                             ; preds = %2751
  %2762 = load ptr, ptr %2734, align 8, !tbaa !69
  %2763 = getelementptr inbounds %struct.Object, ptr %2762, i64 0, i32 3
  %2764 = load i16, ptr %2763, align 8, !tbaa !50
  %2765 = add i16 %2764, -3
  %2766 = icmp ult i16 %2765, -2
  %2767 = getelementptr i8, ptr %1, i64 48
  %2768 = load i32, ptr %2767, align 8, !tbaa !5
  tail call fastcc void @sort_trans_data(i32 %2768, ptr nonnull %2756)
  %2769 = zext i1 %2766 to i8
  tail call fastcc void @set_prop_dist(ptr noundef nonnull %1, i8 noundef zeroext %2769)
  tail call void @sort_trans_data_dist(ptr noundef nonnull %1)
  br label %2770

2770:                                             ; preds = %2761, %2751
  %2771 = load i32, ptr %1, align 8, !tbaa !161
  %2772 = icmp eq i32 %2771, 14
  br i1 %2772, label %2773, label %2896

2773:                                             ; preds = %2770
  %2774 = load i32, ptr %2752, align 4, !tbaa !24
  %2775 = and i32 %2774, -71
  %2776 = or i32 %2775, 4
  store i32 %2776, ptr %2752, align 4, !tbaa !24
  %2777 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 39
  store ptr %146, ptr %2777, align 8, !tbaa !59
  br label %2896

2778:                                             ; preds = %2733
  %2779 = icmp eq ptr %146, null
  br i1 %2779, label %2857, label %2780

2780:                                             ; preds = %2778
  %2781 = getelementptr inbounds %struct.Object, ptr %146, i64 0, i32 27
  %2782 = load i32, ptr %2781, align 8, !tbaa !325
  %2783 = and i32 %2782, 64
  %2784 = icmp eq i32 %2783, 0
  br i1 %2784, label %2786, label %2785

2785:                                             ; preds = %2780
  tail call fastcc void @createTransPose(ptr noundef nonnull %1, ptr noundef nonnull %146)
  br label %2896

2786:                                             ; preds = %2780
  %2787 = and i32 %2782, 8
  %2788 = icmp ne i32 %2787, 0
  %2789 = and i32 %144, 256
  %2790 = icmp eq i32 %2789, 0
  %2791 = and i1 %2790, %2788
  br i1 %2791, label %2792, label %2821

2792:                                             ; preds = %2786
  %2793 = tail call ptr @modifiers_isDeformedByArmature(ptr noundef nonnull %146) #18
  %2794 = icmp eq ptr %2793, null
  br i1 %2794, label %2896, label %2795

2795:                                             ; preds = %2792
  %2796 = getelementptr inbounds %struct.Object, ptr %2793, i64 0, i32 27
  %2797 = load i32, ptr %2796, align 8, !tbaa !325
  %2798 = and i32 %2797, 64
  %2799 = icmp eq i32 %2798, 0
  br i1 %2799, label %2896, label %2800

2800:                                             ; preds = %2795
  %2801 = load ptr, ptr %28, align 8, !tbaa !89
  %2802 = tail call ptr @BKE_scene_base_find(ptr noundef %2801, ptr noundef nonnull %2793) #18
  %2803 = icmp eq ptr %2802, null
  br i1 %2803, label %2896, label %2804

2804:                                             ; preds = %2800
  %2805 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 52
  %2806 = load ptr, ptr %2805, align 8, !tbaa !323
  %2807 = getelementptr inbounds %struct.Base, ptr %2802, i64 0, i32 2
  %2808 = load i32, ptr %2807, align 8, !tbaa !489
  %2809 = getelementptr inbounds %struct.View3D, ptr %2806, i64 0, i32 22
  %2810 = load i32, ptr %2809, align 8, !tbaa !490
  %2811 = and i32 %2810, %2808
  %2812 = icmp eq i32 %2811, 0
  br i1 %2812, label %2896, label %2813

2813:                                             ; preds = %2804
  %2814 = getelementptr inbounds %struct.Base, ptr %2802, i64 0, i32 7
  %2815 = load ptr, ptr %2814, align 8, !tbaa !109
  %2816 = getelementptr inbounds %struct.Object, ptr %2815, i64 0, i32 102
  %2817 = load i8, ptr %2816, align 8, !tbaa !491
  %2818 = and i8 %2817, 1
  %2819 = icmp eq i8 %2818, 0
  br i1 %2819, label %2820, label %2896

2820:                                             ; preds = %2813
  tail call fastcc void @createTransPose(ptr noundef nonnull %1, ptr noundef nonnull %2793)
  br label %2896

2821:                                             ; preds = %2786
  %2822 = and i32 %2782, 32
  %2823 = icmp eq i32 %2822, 0
  br i1 %2823, label %2843, label %2824

2824:                                             ; preds = %2821
  %2825 = tail call ptr @PE_get_current(ptr noundef nonnull %29, ptr noundef nonnull %146) #18
  %2826 = tail call i32 @PE_start_edit(ptr noundef %2825) #18
  %2827 = icmp eq i32 %2826, 0
  br i1 %2827, label %2828, label %2830

2828:                                             ; preds = %2824
  %2829 = load i32, ptr %2781, align 8, !tbaa !325
  br label %2843

2830:                                             ; preds = %2824
  tail call fastcc void @createTransParticleVerts(ptr noundef %0, ptr noundef nonnull %1)
  %2831 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 1
  %2832 = load i32, ptr %2831, align 4, !tbaa !24
  %2833 = or i32 %2832, 64
  store i32 %2833, ptr %2831, align 4, !tbaa !24
  %2834 = getelementptr %struct.TransInfo, ptr %1, i64 0, i32 10
  %2835 = load ptr, ptr %2834, align 8, !tbaa !19
  %2836 = icmp eq ptr %2835, null
  %2837 = and i32 %2832, 2048
  %2838 = icmp eq i32 %2837, 0
  %2839 = select i1 %2836, i1 true, i1 %2838
  br i1 %2839, label %2896, label %2840

2840:                                             ; preds = %2830
  %2841 = getelementptr i8, ptr %1, i64 48
  %2842 = load i32, ptr %2841, align 8, !tbaa !5
  tail call fastcc void @sort_trans_data(i32 %2842, ptr nonnull %2835)
  tail call fastcc void @set_prop_dist(ptr noundef nonnull %1, i8 noundef zeroext 1)
  tail call void @sort_trans_data_dist(ptr noundef nonnull %1)
  br label %2896

2843:                                             ; preds = %2828, %2821
  %2844 = phi i32 [ %2829, %2828 ], [ %2782, %2821 ]
  %2845 = and i32 %2844, 30
  %2846 = icmp eq i32 %2845, 0
  br i1 %2846, label %2857, label %2847

2847:                                             ; preds = %2843
  %2848 = load i32, ptr %145, align 8, !tbaa !264
  %2849 = and i32 %2848, 256
  %2850 = icmp eq i32 %2849, 0
  br i1 %2850, label %2896, label %2851

2851:                                             ; preds = %2847
  %2852 = load i32, ptr %1, align 8, !tbaa !161
  switch i32 %2852, label %2853 [
    i32 6, label %2896
    i32 8, label %2896
  ]

2853:                                             ; preds = %2851
  %2854 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 1
  %2855 = load i32, ptr %2854, align 4, !tbaa !24
  %2856 = or i32 %2855, 32832
  store i32 %2856, ptr %2854, align 4, !tbaa !24
  tail call fastcc void @createTransPaintCurveVerts(ptr noundef %0, ptr noundef nonnull %1)
  br label %2896

2857:                                             ; preds = %2778, %2843
  tail call fastcc void @createTransObject(ptr noundef %0, ptr noundef nonnull %1)
  %2858 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 1
  %2859 = load i32, ptr %2858, align 4, !tbaa !24
  %2860 = or i32 %2859, 1
  store i32 %2860, ptr %2858, align 4, !tbaa !24
  %2861 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 10
  %2862 = load ptr, ptr %2861, align 8, !tbaa !19
  %2863 = icmp eq ptr %2862, null
  %2864 = and i32 %2859, 2048
  %2865 = icmp eq i32 %2864, 0
  %2866 = select i1 %2863, i1 true, i1 %2865
  br i1 %2866, label %2868, label %2867

2867:                                             ; preds = %2857
  tail call fastcc void @set_prop_dist(ptr noundef nonnull %1, i8 noundef zeroext 1)
  tail call void @sort_trans_data_dist(ptr noundef nonnull %1)
  br label %2868

2868:                                             ; preds = %2867, %2857
  %2869 = load i8, ptr %351, align 8, !tbaa !251
  %2870 = icmp eq i8 %2869, 1
  br i1 %2870, label %2871, label %2896

2871:                                             ; preds = %2868
  %2872 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 55
  %2873 = load ptr, ptr %2872, align 8, !tbaa !390
  %2874 = getelementptr inbounds %struct.ARegion, ptr %2873, i64 0, i32 8
  %2875 = load i16, ptr %2874, align 2, !tbaa !492
  %2876 = icmp eq i16 %2875, 0
  br i1 %2876, label %2877, label %2896

2877:                                             ; preds = %2871
  %2878 = getelementptr inbounds %struct.ARegion, ptr %2873, i64 0, i32 30
  %2879 = load ptr, ptr %2878, align 8, !tbaa !494
  %2880 = getelementptr inbounds %struct.RegionView3D, ptr %2879, i64 0, i32 25
  %2881 = load i8, ptr %2880, align 1, !tbaa !495
  %2882 = icmp eq i8 %2881, 2
  br i1 %2882, label %2883, label %2896

2883:                                             ; preds = %2877
  %2884 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 52
  %2885 = load ptr, ptr %2884, align 8, !tbaa !323
  %2886 = getelementptr inbounds %struct.View3D, ptr %2885, i64 0, i32 15
  %2887 = load ptr, ptr %2886, align 8, !tbaa !497
  %2888 = icmp eq ptr %2887, null
  br i1 %2888, label %2896, label %2889

2889:                                             ; preds = %2883
  %2890 = getelementptr inbounds %struct.Object, ptr %2887, i64 0, i32 103
  %2891 = load i8, ptr %2890, align 1, !tbaa !324
  %2892 = icmp eq i8 %2891, 0
  br i1 %2892, label %2896, label %2893

2893:                                             ; preds = %2889
  %2894 = load i32, ptr %2858, align 4, !tbaa !24
  %2895 = or i32 %2894, 16
  store i32 %2895, ptr %2858, align 4, !tbaa !24
  br label %2896

2896:                                             ; preds = %339, %1652, %1648, %1574, %343, %327, %2877, %2883, %2893, %2889, %2851, %2851, %2792, %2795, %2804, %2813, %2820, %2800, %373, %373, %290, %286, %1267, %2710, %2706, %2702, %2773, %2770, %2853, %2847, %2871, %2868, %2830, %2840, %2785, %2718, %2722, %2726, %2730, %2719, %2580, %1562, %367, %363, %359, %376, %388, %384, %380, %375, %142
  ret void
}

; Function Attrs: nofree nosync nounwind sspstrong memory(readwrite, inaccessiblemem: none) uwtable
define internal fastcc void @sort_trans_data(i32 %0, ptr %1) unnamed_addr #4 {
  %3 = alloca %struct.TransData, align 8
  call void @llvm.lifetime.start.p0(i64 224, ptr nonnull %3)
  %4 = icmp sgt i32 %0, 1
  br i1 %4, label %5, label %34

5:                                                ; preds = %2
  %6 = add nsw i32 %0, -1
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %struct.TransData, ptr %1, i64 %7
  br label %9

9:                                                ; preds = %5, %30
  %10 = phi ptr [ %32, %30 ], [ %1, %5 ]
  %11 = phi ptr [ %31, %30 ], [ %8, %5 ]
  br label %12

12:                                               ; preds = %9, %18
  %13 = phi ptr [ %19, %18 ], [ %10, %9 ]
  %14 = getelementptr inbounds %struct.TransData, ptr %13, i64 0, i32 16
  %15 = load i32, ptr %14, align 8, !tbaa !20
  %16 = and i32 %15, 1
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %struct.TransData, ptr %13, i64 1
  %20 = icmp eq ptr %19, %11
  br i1 %20, label %34, label %12, !llvm.loop !426

21:                                               ; preds = %12, %27
  %22 = phi ptr [ %28, %27 ], [ %11, %12 ]
  %23 = getelementptr inbounds %struct.TransData, ptr %22, i64 0, i32 16
  %24 = load i32, ptr %23, align 8, !tbaa !20
  %25 = and i32 %24, 1
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %30

27:                                               ; preds = %21
  %28 = getelementptr inbounds %struct.TransData, ptr %22, i64 -1
  %29 = icmp eq ptr %13, %28
  br i1 %29, label %34, label %21, !llvm.loop !427

30:                                               ; preds = %21
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(224) %3, ptr noundef nonnull align 8 dereferenceable(224) %13, i64 224, i1 false), !tbaa.struct !428
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(224) %13, ptr noundef nonnull align 8 dereferenceable(224) %22, i64 224, i1 false), !tbaa.struct !428
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(224) %22, ptr noundef nonnull align 8 dereferenceable(224) %3, i64 224, i1 false), !tbaa.struct !428
  %31 = getelementptr inbounds %struct.TransData, ptr %22, i64 -1
  %32 = getelementptr inbounds %struct.TransData, ptr %13, i64 1
  %33 = icmp ugt ptr %31, %32
  br i1 %33, label %9, label %34, !llvm.loop !429

34:                                               ; preds = %30, %18, %27, %2
  call void @llvm.lifetime.end.p0(i64 224, ptr nonnull %3)
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @set_prop_dist(ptr nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #6 {
  %3 = alloca [3 x float], align 8
  %4 = alloca [3 x float], align 8
  %5 = alloca [3 x float], align 8
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %3) #18
  %6 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 1
  %7 = load i32, ptr %6, align 4, !tbaa !24
  %8 = and i32 %7, 33554432
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %47, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 33
  %12 = load i8, ptr %11, align 8, !tbaa !251
  %13 = icmp eq i8 %12, 1
  br i1 %13, label %14, label %47

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 55
  %16 = load ptr, ptr %15, align 8, !tbaa !390
  %17 = icmp eq ptr %16, null
  br i1 %17, label %47, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.ARegion, ptr %16, i64 0, i32 8
  %20 = load i16, ptr %19, align 2, !tbaa !492
  %21 = icmp eq i16 %20, 0
  br i1 %21, label %22, label %47

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct.ARegion, ptr %16, i64 0, i32 30
  %24 = load ptr, ptr %23, align 8, !tbaa !494
  %25 = getelementptr inbounds %struct.RegionView3D, ptr %24, i64 0, i32 2, i64 2
  %26 = load <2 x float>, ptr %25, align 4, !tbaa !82
  %27 = fmul fast <2 x float> %26, %26
  %28 = shufflevector <2 x float> %27, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %29 = fadd fast <2 x float> %28, %27
  %30 = extractelement <2 x float> %29, i64 0
  %31 = getelementptr inbounds %struct.RegionView3D, ptr %24, i64 0, i32 2, i64 2, i64 2
  %32 = load float, ptr %31, align 4, !tbaa !82
  %33 = fmul fast float %32, %32
  %34 = fadd fast float %30, %33
  %35 = fcmp fast ogt float %34, 0x38AA95A5C0000000
  br i1 %35, label %36, label %43

36:                                               ; preds = %22
  %37 = tail call fast float @llvm.sqrt.f32(float %34)
  %38 = fdiv fast float 1.000000e+00, %37
  %39 = insertelement <2 x float> poison, float %38, i64 0
  %40 = shufflevector <2 x float> %39, <2 x float> poison, <2 x i32> zeroinitializer
  %41 = fmul fast <2 x float> %40, %26
  %42 = fmul fast float %38, %32
  br label %43

43:                                               ; preds = %22, %36
  %44 = phi float [ %42, %36 ], [ 0.000000e+00, %22 ]
  %45 = phi <2 x float> [ %41, %36 ], [ zeroinitializer, %22 ]
  store <2 x float> %45, ptr %3, align 8
  %46 = getelementptr inbounds float, ptr %3, i64 2
  store float %44, ptr %46, align 8
  br label %47

47:                                               ; preds = %10, %14, %18, %43, %2
  %48 = phi ptr [ %3, %43 ], [ null, %18 ], [ null, %14 ], [ null, %10 ], [ null, %2 ]
  %49 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 10
  %50 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 9
  %51 = load i32, ptr %50, align 8, !tbaa !5
  %52 = icmp sgt i32 %51, 0
  br i1 %52, label %53, label %198

53:                                               ; preds = %47
  %54 = load ptr, ptr %49, align 8, !tbaa !19
  %55 = getelementptr inbounds float, ptr %4, i64 1
  %56 = getelementptr inbounds float, ptr %4, i64 2
  %57 = icmp eq ptr %48, null
  %58 = getelementptr inbounds float, ptr %5, i64 2
  %59 = icmp eq i8 %1, 0
  br i1 %57, label %60, label %127

60:                                               ; preds = %53, %76
  %61 = phi i32 [ %77, %76 ], [ %51, %53 ]
  %62 = phi ptr [ %79, %76 ], [ %54, %53 ]
  %63 = phi i32 [ %78, %76 ], [ 0, %53 ]
  %64 = getelementptr inbounds %struct.TransData, ptr %62, i64 0, i32 1
  store float 0.000000e+00, ptr %64, align 4, !tbaa !26
  %65 = getelementptr inbounds %struct.TransData, ptr %62, i64 0, i32 16
  %66 = load i32, ptr %65, align 8, !tbaa !20
  %67 = and i32 %66, 1
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %76

69:                                               ; preds = %60
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %4) #18
  store float -1.000000e+00, ptr %64, align 4, !tbaa !26
  %70 = icmp sgt i32 %61, 0
  br i1 %70, label %81, label %71

71:                                               ; preds = %90, %122, %81, %69
  %72 = phi i32 [ %61, %69 ], [ %61, %81 ], [ %125, %122 ], [ %125, %90 ]
  %73 = phi float [ -1.000000e+00, %69 ], [ -1.000000e+00, %81 ], [ %123, %122 ], [ %123, %90 ]
  br i1 %59, label %75, label %74

74:                                               ; preds = %71
  store float %73, ptr %62, align 8, !tbaa !25
  br label %75

75:                                               ; preds = %74, %71
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %4) #18
  br label %76

76:                                               ; preds = %75, %60
  %77 = phi i32 [ %72, %75 ], [ %61, %60 ]
  %78 = add nuw nsw i32 %63, 1
  %79 = getelementptr inbounds %struct.TransData, ptr %62, i64 1
  %80 = icmp slt i32 %78, %77
  br i1 %80, label %60, label %198, !llvm.loop !498

81:                                               ; preds = %69
  %82 = load ptr, ptr %49, align 8, !tbaa !19
  %83 = getelementptr inbounds %struct.TransData, ptr %62, i64 0, i32 7
  %84 = getelementptr inbounds %struct.TransData, ptr %62, i64 0, i32 7, i64 2
  %85 = getelementptr inbounds %struct.TransData, ptr %62, i64 0, i32 8
  %86 = getelementptr inbounds %struct.TransData, ptr %82, i64 0, i32 16
  %87 = load i32, ptr %86, align 8, !tbaa !20
  %88 = and i32 %87, 1
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %71, label %96

90:                                               ; preds = %122
  %91 = getelementptr inbounds %struct.TransData, ptr %97, i64 1
  %92 = getelementptr inbounds %struct.TransData, ptr %97, i64 1, i32 16
  %93 = load i32, ptr %92, align 8, !tbaa !20
  %94 = and i32 %93, 1
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %71, label %96, !llvm.loop !499

96:                                               ; preds = %81, %90
  %97 = phi ptr [ %91, %90 ], [ %82, %81 ]
  %98 = phi i32 [ %124, %90 ], [ 0, %81 ]
  %99 = getelementptr inbounds %struct.TransData, ptr %97, i64 0, i32 7
  %100 = load <2 x float>, ptr %83, align 4, !tbaa !82
  %101 = load <2 x float>, ptr %99, align 4, !tbaa !82
  %102 = fsub fast <2 x float> %100, %101
  store <2 x float> %102, ptr %4, align 8, !tbaa !82
  %103 = load float, ptr %84, align 4, !tbaa !82
  %104 = getelementptr inbounds %struct.TransData, ptr %97, i64 0, i32 7, i64 2
  %105 = load float, ptr %104, align 4, !tbaa !82
  %106 = fsub fast float %103, %105
  store float %106, ptr %56, align 8, !tbaa !82
  call void @mul_m3_v3(ptr noundef nonnull %85, ptr noundef nonnull %4) #18
  %107 = load float, ptr %4, align 8, !tbaa !82
  %108 = fmul fast float %107, %107
  %109 = load <2 x float>, ptr %55, align 4, !tbaa !82
  %110 = fmul fast <2 x float> %109, %109
  %111 = extractelement <2 x float> %110, i64 0
  %112 = fadd fast float %111, %108
  %113 = extractelement <2 x float> %110, i64 1
  %114 = fadd fast float %112, %113
  %115 = load float, ptr %64, align 4, !tbaa !26
  %116 = fcmp fast oeq float %115, -1.000000e+00
  %117 = fmul fast float %115, %115
  %118 = fcmp fast olt float %114, %117
  %119 = select i1 %116, i1 true, i1 %118
  br i1 %119, label %120, label %122

120:                                              ; preds = %96
  %121 = call fast float @llvm.sqrt.f32(float %114)
  store float %121, ptr %64, align 4, !tbaa !26
  br label %122

122:                                              ; preds = %120, %96
  %123 = phi float [ %121, %120 ], [ %115, %96 ]
  %124 = add nuw nsw i32 %98, 1
  %125 = load i32, ptr %50, align 8, !tbaa !5
  %126 = icmp slt i32 %124, %125
  br i1 %126, label %90, label %71, !llvm.loop !499

127:                                              ; preds = %53, %193
  %128 = phi i32 [ %194, %193 ], [ %51, %53 ]
  %129 = phi ptr [ %196, %193 ], [ %54, %53 ]
  %130 = phi i32 [ %195, %193 ], [ 0, %53 ]
  %131 = getelementptr inbounds %struct.TransData, ptr %129, i64 0, i32 1
  store float 0.000000e+00, ptr %131, align 4, !tbaa !26
  %132 = getelementptr inbounds %struct.TransData, ptr %129, i64 0, i32 16
  %133 = load i32, ptr %132, align 8, !tbaa !20
  %134 = and i32 %133, 1
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %193

136:                                              ; preds = %127
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %4) #18
  store float -1.000000e+00, ptr %131, align 4, !tbaa !26
  %137 = icmp sgt i32 %128, 0
  br i1 %137, label %138, label %188

138:                                              ; preds = %136
  %139 = load ptr, ptr %49, align 8, !tbaa !19
  %140 = getelementptr inbounds %struct.TransData, ptr %129, i64 0, i32 7
  %141 = getelementptr inbounds %struct.TransData, ptr %129, i64 0, i32 7, i64 2
  %142 = getelementptr inbounds %struct.TransData, ptr %129, i64 0, i32 8
  %143 = getelementptr inbounds %struct.TransData, ptr %139, i64 0, i32 16
  %144 = load i32, ptr %143, align 8, !tbaa !20
  %145 = and i32 %144, 1
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %188, label %153

147:                                              ; preds = %183
  %148 = getelementptr inbounds %struct.TransData, ptr %154, i64 1
  %149 = getelementptr inbounds %struct.TransData, ptr %154, i64 1, i32 16
  %150 = load i32, ptr %149, align 8, !tbaa !20
  %151 = and i32 %150, 1
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %188, label %153, !llvm.loop !499

153:                                              ; preds = %138, %147
  %154 = phi ptr [ %148, %147 ], [ %139, %138 ]
  %155 = phi i32 [ %185, %147 ], [ 0, %138 ]
  %156 = getelementptr inbounds %struct.TransData, ptr %154, i64 0, i32 7
  %157 = load <2 x float>, ptr %140, align 4, !tbaa !82
  %158 = load <2 x float>, ptr %156, align 4, !tbaa !82
  %159 = fsub fast <2 x float> %157, %158
  store <2 x float> %159, ptr %4, align 8, !tbaa !82
  %160 = load float, ptr %141, align 4, !tbaa !82
  %161 = getelementptr inbounds %struct.TransData, ptr %154, i64 0, i32 7, i64 2
  %162 = load float, ptr %161, align 4, !tbaa !82
  %163 = fsub fast float %160, %162
  store float %163, ptr %56, align 8, !tbaa !82
  call void @mul_m3_v3(ptr noundef nonnull %142, ptr noundef nonnull %4) #18
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %5) #18
  call void @project_v3_v3v3(ptr noundef nonnull %5, ptr noundef nonnull %4, ptr noundef nonnull %48) #18
  %164 = load <2 x float>, ptr %5, align 8, !tbaa !82
  %165 = load <2 x float>, ptr %4, align 8, !tbaa !82
  %166 = fsub fast <2 x float> %165, %164
  store <2 x float> %166, ptr %4, align 8, !tbaa !82
  %167 = load float, ptr %58, align 8, !tbaa !82
  %168 = load float, ptr %56, align 8, !tbaa !82
  %169 = fsub fast float %168, %167
  store float %169, ptr %56, align 8, !tbaa !82
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %5) #18
  %170 = fmul fast <2 x float> %166, %166
  %171 = shufflevector <2 x float> %170, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %172 = fadd fast <2 x float> %171, %170
  %173 = extractelement <2 x float> %172, i64 0
  %174 = fmul fast float %169, %169
  %175 = fadd fast float %173, %174
  %176 = load float, ptr %131, align 4, !tbaa !26
  %177 = fcmp fast oeq float %176, -1.000000e+00
  %178 = fmul fast float %176, %176
  %179 = fcmp fast olt float %175, %178
  %180 = select i1 %177, i1 true, i1 %179
  br i1 %180, label %181, label %183

181:                                              ; preds = %153
  %182 = call fast float @llvm.sqrt.f32(float %175)
  store float %182, ptr %131, align 4, !tbaa !26
  br label %183

183:                                              ; preds = %153, %181
  %184 = phi float [ %176, %153 ], [ %182, %181 ]
  %185 = add nuw nsw i32 %155, 1
  %186 = load i32, ptr %50, align 8, !tbaa !5
  %187 = icmp slt i32 %185, %186
  br i1 %187, label %147, label %188, !llvm.loop !499

188:                                              ; preds = %147, %183, %138, %136
  %189 = phi i32 [ %128, %136 ], [ %128, %138 ], [ %186, %183 ], [ %186, %147 ]
  %190 = phi float [ -1.000000e+00, %136 ], [ -1.000000e+00, %138 ], [ %184, %183 ], [ %184, %147 ]
  br i1 %59, label %192, label %191

191:                                              ; preds = %188
  store float %190, ptr %129, align 8, !tbaa !25
  br label %192

192:                                              ; preds = %191, %188
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %4) #18
  br label %193

193:                                              ; preds = %127, %192
  %194 = phi i32 [ %128, %127 ], [ %189, %192 ]
  %195 = add nuw nsw i32 %130, 1
  %196 = getelementptr inbounds %struct.TransData, ptr %129, i64 1
  %197 = icmp slt i32 %195, %194
  br i1 %197, label %127, label %198, !llvm.loop !498

198:                                              ; preds = %193, %76, %47
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %3) #18
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @createTransMaskingData(ptr noundef %0, ptr nocapture noundef %1) unnamed_addr #6 {
  %3 = alloca [2 x float], align 4
  %4 = tail call ptr @CTX_data_scene(ptr noundef %0) #18
  %5 = tail call ptr @CTX_data_edit_mask(ptr noundef %0) #18
  %6 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 1
  %7 = load i32, ptr %6, align 4, !tbaa !24
  %8 = freeze i32 %7
  %9 = and i32 %8, 2048
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #18
  %10 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 9
  store i32 0, ptr %10, align 8, !tbaa !5
  %11 = icmp eq ptr %5, null
  br i1 %11, label %343, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 33
  %14 = load i8, ptr %13, align 8, !tbaa !251
  %15 = icmp eq i8 %14, 20
  br i1 %15, label %16, label %23

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 54
  %18 = load ptr, ptr %17, align 8, !tbaa !148
  %19 = getelementptr inbounds %struct.ScrArea, ptr %18, i64 0, i32 19
  %20 = load ptr, ptr %19, align 8, !tbaa !170
  %21 = tail call ptr @ED_space_clip_get_clip(ptr noundef %20) #18
  %22 = icmp eq ptr %21, null
  br i1 %22, label %343, label %23

23:                                               ; preds = %16, %12
  %24 = getelementptr inbounds %struct.Mask, ptr %5, i64 0, i32 2
  %25 = load ptr, ptr %24, align 8, !tbaa !33
  %26 = icmp eq ptr %25, null
  br i1 %26, label %343, label %27

27:                                               ; preds = %23
  %28 = icmp eq i32 %9, 0
  br i1 %28, label %29, label %96

29:                                               ; preds = %27, %40
  %30 = phi ptr [ %42, %40 ], [ %25, %27 ]
  %31 = phi i32 [ %41, %40 ], [ 0, %27 ]
  %32 = getelementptr inbounds %struct.MaskLayer, ptr %30, i64 0, i32 13
  %33 = load i8, ptr %32, align 1, !tbaa !500
  %34 = and i8 %33, 3
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %36, label %40

36:                                               ; preds = %29
  %37 = getelementptr inbounds %struct.MaskLayer, ptr %30, i64 0, i32 3
  %38 = load ptr, ptr %37, align 8, !tbaa !33
  %39 = icmp eq ptr %38, null
  br i1 %39, label %40, label %44

40:                                               ; preds = %50, %36, %29
  %41 = phi i32 [ %31, %29 ], [ %31, %36 ], [ %51, %50 ]
  %42 = load ptr, ptr %30, align 8, !tbaa !33
  %43 = icmp eq ptr %42, null
  br i1 %43, label %169, label %29, !llvm.loop !501

44:                                               ; preds = %36, %50
  %45 = phi ptr [ %52, %50 ], [ %38, %36 ]
  %46 = phi i32 [ %51, %50 ], [ %31, %36 ]
  %47 = getelementptr inbounds %struct.MaskSpline, ptr %45, i64 0, i32 5
  %48 = load i32, ptr %47, align 4, !tbaa !502
  %49 = icmp sgt i32 %48, 0
  br i1 %49, label %54, label %50

50:                                               ; preds = %90, %44
  %51 = phi i32 [ %46, %44 ], [ %91, %90 ]
  %52 = load ptr, ptr %45, align 8, !tbaa !33
  %53 = icmp eq ptr %52, null
  br i1 %53, label %40, label %44, !llvm.loop !504

54:                                               ; preds = %44
  %55 = getelementptr inbounds %struct.MaskSpline, ptr %45, i64 0, i32 6
  br label %56

56:                                               ; preds = %90, %54
  %57 = phi i64 [ %92, %90 ], [ 0, %54 ]
  %58 = phi i32 [ %91, %90 ], [ %46, %54 ]
  %59 = load ptr, ptr %55, align 8, !tbaa !505
  %60 = getelementptr inbounds %struct.MaskSplinePoint, ptr %59, i64 %57
  %61 = getelementptr inbounds %struct.BezTriple, ptr %60, i64 0, i32 7
  %62 = load i8, ptr %61, align 1, !tbaa !506
  %63 = getelementptr inbounds %struct.BezTriple, ptr %60, i64 0, i32 8
  %64 = load i8, ptr %63, align 4, !tbaa !507
  %65 = getelementptr inbounds %struct.BezTriple, ptr %60, i64 0, i32 9
  %66 = load i8, ptr %65, align 1, !tbaa !508
  %67 = or i8 %62, %66
  %68 = or i8 %67, %64
  %69 = and i8 %68, 1
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %90, label %71

71:                                               ; preds = %56
  %72 = and i8 %64, 1
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %76, label %74

74:                                               ; preds = %71
  %75 = add nsw i32 %58, 3
  br label %90

76:                                               ; preds = %71
  %77 = tail call i32 @BKE_mask_point_handles_mode_get(ptr noundef nonnull %60) #18
  %78 = icmp eq i32 %77, 1
  br i1 %78, label %88, label %79

79:                                               ; preds = %76
  %80 = load i8, ptr %61, align 1, !tbaa !341
  %81 = and i8 %80, 1
  %82 = zext i8 %81 to i32
  %83 = add nsw i32 %58, %82
  %84 = load i8, ptr %65, align 1, !tbaa !342
  %85 = and i8 %84, 1
  %86 = zext i8 %85 to i32
  %87 = add nsw i32 %83, %86
  br label %90

88:                                               ; preds = %76
  %89 = add nsw i32 %58, 1
  br label %90

90:                                               ; preds = %88, %79, %74, %56
  %91 = phi i32 [ %75, %74 ], [ %89, %88 ], [ %87, %79 ], [ %58, %56 ]
  %92 = add nuw nsw i64 %57, 1
  %93 = load i32, ptr %47, align 4, !tbaa !502
  %94 = sext i32 %93 to i64
  %95 = icmp slt i64 %92, %94
  br i1 %95, label %56, label %50, !llvm.loop !509

96:                                               ; preds = %27, %164
  %97 = phi ptr [ %167, %164 ], [ %25, %27 ]
  %98 = phi i32 [ %166, %164 ], [ 0, %27 ]
  %99 = phi i32 [ %165, %164 ], [ 0, %27 ]
  %100 = getelementptr inbounds %struct.MaskLayer, ptr %97, i64 0, i32 13
  %101 = load i8, ptr %100, align 1, !tbaa !500
  %102 = and i8 %101, 3
  %103 = icmp eq i8 %102, 0
  br i1 %103, label %104, label %164

104:                                              ; preds = %96
  %105 = getelementptr inbounds %struct.MaskLayer, ptr %97, i64 0, i32 3
  %106 = load ptr, ptr %105, align 8, !tbaa !33
  %107 = icmp eq ptr %106, null
  br i1 %107, label %164, label %113

108:                                              ; preds = %157, %113
  %109 = phi i32 [ %116, %113 ], [ %158, %157 ]
  %110 = phi i32 [ %115, %113 ], [ %159, %157 ]
  %111 = load ptr, ptr %114, align 8, !tbaa !33
  %112 = icmp eq ptr %111, null
  br i1 %112, label %164, label %113, !llvm.loop !504

113:                                              ; preds = %104, %108
  %114 = phi ptr [ %111, %108 ], [ %106, %104 ]
  %115 = phi i32 [ %110, %108 ], [ %98, %104 ]
  %116 = phi i32 [ %109, %108 ], [ %99, %104 ]
  %117 = getelementptr inbounds %struct.MaskSpline, ptr %114, i64 0, i32 5
  %118 = load i32, ptr %117, align 4, !tbaa !502
  %119 = icmp sgt i32 %118, 0
  br i1 %119, label %120, label %108

120:                                              ; preds = %113
  %121 = getelementptr inbounds %struct.MaskSpline, ptr %114, i64 0, i32 6
  br label %122

122:                                              ; preds = %120, %157
  %123 = phi i64 [ 0, %120 ], [ %160, %157 ]
  %124 = phi i32 [ %115, %120 ], [ %159, %157 ]
  %125 = phi i32 [ %116, %120 ], [ %158, %157 ]
  %126 = load ptr, ptr %121, align 8, !tbaa !505
  %127 = getelementptr inbounds %struct.MaskSplinePoint, ptr %126, i64 %123
  %128 = getelementptr inbounds %struct.BezTriple, ptr %127, i64 0, i32 7
  %129 = load i8, ptr %128, align 1, !tbaa !506
  %130 = getelementptr inbounds %struct.BezTriple, ptr %127, i64 0, i32 8
  %131 = load i8, ptr %130, align 4, !tbaa !507
  %132 = getelementptr inbounds %struct.BezTriple, ptr %127, i64 0, i32 9
  %133 = load i8, ptr %132, align 1, !tbaa !508
  %134 = or i8 %129, %133
  %135 = or i8 %134, %131
  %136 = and i8 %135, 1
  %137 = icmp eq i8 %136, 0
  br i1 %137, label %157, label %138

138:                                              ; preds = %122
  %139 = and i8 %131, 1
  %140 = icmp eq i8 %139, 0
  br i1 %140, label %143, label %141

141:                                              ; preds = %138
  %142 = add nsw i32 %125, 3
  br label %157

143:                                              ; preds = %138
  %144 = tail call i32 @BKE_mask_point_handles_mode_get(ptr noundef nonnull %127) #18
  %145 = icmp eq i32 %144, 1
  br i1 %145, label %146, label %148

146:                                              ; preds = %143
  %147 = add nsw i32 %125, 1
  br label %157

148:                                              ; preds = %143
  %149 = load i8, ptr %128, align 1, !tbaa !341
  %150 = and i8 %149, 1
  %151 = zext i8 %150 to i32
  %152 = add nsw i32 %125, %151
  %153 = load i8, ptr %132, align 1, !tbaa !342
  %154 = and i8 %153, 1
  %155 = zext i8 %154 to i32
  %156 = add nsw i32 %152, %155
  br label %157

157:                                              ; preds = %141, %148, %146, %122
  %158 = phi i32 [ %142, %141 ], [ %147, %146 ], [ %156, %148 ], [ %125, %122 ]
  %159 = add nsw i32 %124, 3
  %160 = add nuw nsw i64 %123, 1
  %161 = load i32, ptr %117, align 4, !tbaa !502
  %162 = sext i32 %161 to i64
  %163 = icmp slt i64 %160, %162
  br i1 %163, label %122, label %108, !llvm.loop !509

164:                                              ; preds = %108, %104, %96
  %165 = phi i32 [ %99, %96 ], [ %99, %104 ], [ %109, %108 ]
  %166 = phi i32 [ %98, %96 ], [ %98, %104 ], [ %110, %108 ]
  %167 = load ptr, ptr %97, align 8, !tbaa !33
  %168 = icmp eq ptr %167, null
  br i1 %168, label %169, label %96, !llvm.loop !501

169:                                              ; preds = %164, %40
  %170 = phi i32 [ %41, %40 ], [ %165, %164 ]
  %171 = phi i32 [ 0, %40 ], [ %166, %164 ]
  %172 = icmp eq i32 %170, 0
  br i1 %172, label %343, label %173

173:                                              ; preds = %169
  %174 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 54
  %175 = load ptr, ptr %174, align 8, !tbaa !148
  %176 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 55
  %177 = load ptr, ptr %176, align 8, !tbaa !390
  %178 = getelementptr inbounds [2 x float], ptr %3, i64 0, i64 1
  call void @ED_mask_get_aspect(ptr noundef %175, ptr noundef %177, ptr noundef nonnull %3, ptr noundef nonnull %178) #18
  %179 = icmp eq i32 %9, 0
  %180 = select i1 %179, i32 %170, i32 %171
  store i32 %180, ptr %10, align 8, !tbaa !5
  %181 = load ptr, ptr @MEM_callocN, align 8, !tbaa !33
  %182 = sext i32 %180 to i64
  %183 = mul nsw i64 %182, 224
  %184 = call ptr %181(i64 noundef %183, ptr noundef nonnull @.str.15) #18
  %185 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 10
  store ptr %184, ptr %185, align 8, !tbaa !19
  %186 = load ptr, ptr @MEM_callocN, align 8, !tbaa !33
  %187 = load i32, ptr %10, align 8, !tbaa !5
  %188 = sext i32 %187 to i64
  %189 = mul nsw i64 %188, 56
  %190 = call ptr %186(i64 noundef %189, ptr noundef nonnull @.str.16) #18
  %191 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 12
  store ptr %190, ptr %191, align 8, !tbaa !143
  %192 = load ptr, ptr @MEM_callocN, align 8, !tbaa !33
  %193 = load i32, ptr %10, align 8, !tbaa !5
  %194 = sext i32 %193 to i64
  %195 = mul nsw i64 %194, 144
  %196 = call ptr %192(i64 noundef %195, ptr noundef nonnull @.str.17) #18
  %197 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 40
  store ptr %196, ptr %197, align 8, !tbaa !66
  %198 = load i32, ptr %6, align 4, !tbaa !24
  %199 = or i32 %198, 131072
  store i32 %199, ptr %6, align 4, !tbaa !24
  %200 = load ptr, ptr %24, align 8, !tbaa !33
  %201 = icmp eq ptr %200, null
  br i1 %201, label %343, label %202

202:                                              ; preds = %173
  %203 = getelementptr i8, ptr %4, i64 680
  br i1 %179, label %204, label %293

204:                                              ; preds = %202, %217
  %205 = phi ptr [ %221, %217 ], [ %200, %202 ]
  %206 = phi ptr [ %220, %217 ], [ %184, %202 ]
  %207 = phi ptr [ %219, %217 ], [ %190, %202 ]
  %208 = phi ptr [ %218, %217 ], [ %196, %202 ]
  %209 = getelementptr inbounds %struct.MaskLayer, ptr %205, i64 0, i32 13
  %210 = load i8, ptr %209, align 1, !tbaa !500
  %211 = and i8 %210, 3
  %212 = icmp eq i8 %211, 0
  br i1 %212, label %213, label %217

213:                                              ; preds = %204
  %214 = getelementptr inbounds %struct.MaskLayer, ptr %205, i64 0, i32 3
  %215 = load ptr, ptr %214, align 8, !tbaa !33
  %216 = icmp eq ptr %215, null
  br i1 %216, label %217, label %223

217:                                              ; preds = %231, %213, %204
  %218 = phi ptr [ %208, %204 ], [ %208, %213 ], [ %232, %231 ]
  %219 = phi ptr [ %207, %204 ], [ %207, %213 ], [ %233, %231 ]
  %220 = phi ptr [ %206, %204 ], [ %206, %213 ], [ %234, %231 ]
  %221 = load ptr, ptr %205, align 8, !tbaa !33
  %222 = icmp eq ptr %221, null
  br i1 %222, label %343, label %204, !llvm.loop !510

223:                                              ; preds = %213, %231
  %224 = phi ptr [ %235, %231 ], [ %215, %213 ]
  %225 = phi ptr [ %234, %231 ], [ %206, %213 ]
  %226 = phi ptr [ %233, %231 ], [ %207, %213 ]
  %227 = phi ptr [ %232, %231 ], [ %208, %213 ]
  %228 = getelementptr inbounds %struct.MaskSpline, ptr %224, i64 0, i32 5
  %229 = load i32, ptr %228, align 4, !tbaa !502
  %230 = icmp sgt i32 %229, 0
  br i1 %230, label %237, label %231

231:                                              ; preds = %285, %223
  %232 = phi ptr [ %227, %223 ], [ %286, %285 ]
  %233 = phi ptr [ %226, %223 ], [ %287, %285 ]
  %234 = phi ptr [ %225, %223 ], [ %288, %285 ]
  %235 = load ptr, ptr %224, align 8, !tbaa !33
  %236 = icmp eq ptr %235, null
  br i1 %236, label %217, label %223, !llvm.loop !511

237:                                              ; preds = %223
  %238 = getelementptr inbounds %struct.MaskSpline, ptr %224, i64 0, i32 6
  br label %239

239:                                              ; preds = %285, %237
  %240 = phi i64 [ %289, %285 ], [ 0, %237 ]
  %241 = phi ptr [ %288, %285 ], [ %225, %237 ]
  %242 = phi ptr [ %287, %285 ], [ %226, %237 ]
  %243 = phi ptr [ %286, %285 ], [ %227, %237 ]
  %244 = load ptr, ptr %238, align 8, !tbaa !505
  %245 = getelementptr inbounds %struct.MaskSplinePoint, ptr %244, i64 %240
  %246 = getelementptr inbounds %struct.BezTriple, ptr %245, i64 0, i32 7
  %247 = load i8, ptr %246, align 1, !tbaa !506
  %248 = getelementptr inbounds %struct.BezTriple, ptr %245, i64 0, i32 8
  %249 = load i8, ptr %248, align 4, !tbaa !507
  %250 = or i8 %249, %247
  %251 = getelementptr inbounds %struct.BezTriple, ptr %245, i64 0, i32 9
  %252 = load i8, ptr %251, align 1, !tbaa !508
  %253 = or i8 %250, %252
  %254 = and i8 %253, 1
  %255 = icmp eq i8 %254, 0
  br i1 %255, label %285, label %256

256:                                              ; preds = %239
  %257 = load i32, ptr %203, align 8, !tbaa !224
  call fastcc void @MaskPointToTransData(i32 %257, ptr noundef nonnull %245, ptr noundef %241, ptr noundef %242, ptr noundef %243, i32 noundef 0, ptr noundef nonnull %3)
  %258 = load i8, ptr %248, align 4, !tbaa !507
  %259 = and i8 %258, 1
  %260 = icmp eq i8 %259, 0
  br i1 %260, label %265, label %261

261:                                              ; preds = %256
  %262 = getelementptr inbounds %struct.TransData, ptr %241, i64 3
  %263 = getelementptr inbounds %struct.TransData2D, ptr %242, i64 3
  %264 = getelementptr inbounds %struct.TransDataMasking, ptr %243, i64 3
  br label %285

265:                                              ; preds = %256
  %266 = call i32 @BKE_mask_point_handles_mode_get(ptr noundef nonnull %245) #18
  %267 = icmp eq i32 %266, 1
  br i1 %267, label %281, label %268

268:                                              ; preds = %265
  %269 = load i8, ptr %246, align 1, !tbaa !341
  %270 = and i8 %269, 1
  %271 = zext i8 %270 to i64
  %272 = getelementptr inbounds %struct.TransDataMasking, ptr %243, i64 %271
  %273 = getelementptr inbounds %struct.TransData2D, ptr %242, i64 %271
  %274 = getelementptr inbounds %struct.TransData, ptr %241, i64 %271
  %275 = load i8, ptr %251, align 1, !tbaa !342
  %276 = and i8 %275, 1
  %277 = zext i8 %276 to i64
  %278 = getelementptr inbounds %struct.TransDataMasking, ptr %272, i64 %277
  %279 = getelementptr inbounds %struct.TransData2D, ptr %273, i64 %277
  %280 = getelementptr inbounds %struct.TransData, ptr %274, i64 %277
  br label %285

281:                                              ; preds = %265
  %282 = getelementptr inbounds %struct.TransData, ptr %241, i64 1
  %283 = getelementptr inbounds %struct.TransData2D, ptr %242, i64 1
  %284 = getelementptr inbounds %struct.TransDataMasking, ptr %243, i64 1
  br label %285

285:                                              ; preds = %281, %268, %261, %239
  %286 = phi ptr [ %264, %261 ], [ %284, %281 ], [ %278, %268 ], [ %243, %239 ]
  %287 = phi ptr [ %263, %261 ], [ %283, %281 ], [ %279, %268 ], [ %242, %239 ]
  %288 = phi ptr [ %262, %261 ], [ %282, %281 ], [ %280, %268 ], [ %241, %239 ]
  %289 = add nuw nsw i64 %240, 1
  %290 = load i32, ptr %228, align 4, !tbaa !502
  %291 = sext i32 %290 to i64
  %292 = icmp slt i64 %289, %291
  br i1 %292, label %239, label %231, !llvm.loop !512

293:                                              ; preds = %202, %337
  %294 = phi ptr [ %341, %337 ], [ %200, %202 ]
  %295 = phi ptr [ %340, %337 ], [ %184, %202 ]
  %296 = phi ptr [ %339, %337 ], [ %190, %202 ]
  %297 = phi ptr [ %338, %337 ], [ %196, %202 ]
  %298 = getelementptr inbounds %struct.MaskLayer, ptr %294, i64 0, i32 13
  %299 = load i8, ptr %298, align 1, !tbaa !500
  %300 = and i8 %299, 3
  %301 = icmp eq i8 %300, 0
  br i1 %301, label %302, label %337

302:                                              ; preds = %293
  %303 = getelementptr inbounds %struct.MaskLayer, ptr %294, i64 0, i32 3
  %304 = load ptr, ptr %303, align 8, !tbaa !33
  %305 = icmp eq ptr %304, null
  br i1 %305, label %337, label %312

306:                                              ; preds = %322, %312
  %307 = phi ptr [ %316, %312 ], [ %332, %322 ]
  %308 = phi ptr [ %315, %312 ], [ %331, %322 ]
  %309 = phi ptr [ %314, %312 ], [ %330, %322 ]
  %310 = load ptr, ptr %313, align 8, !tbaa !33
  %311 = icmp eq ptr %310, null
  br i1 %311, label %337, label %312, !llvm.loop !511

312:                                              ; preds = %302, %306
  %313 = phi ptr [ %310, %306 ], [ %304, %302 ]
  %314 = phi ptr [ %309, %306 ], [ %295, %302 ]
  %315 = phi ptr [ %308, %306 ], [ %296, %302 ]
  %316 = phi ptr [ %307, %306 ], [ %297, %302 ]
  %317 = getelementptr inbounds %struct.MaskSpline, ptr %313, i64 0, i32 5
  %318 = load i32, ptr %317, align 4, !tbaa !502
  %319 = icmp sgt i32 %318, 0
  br i1 %319, label %320, label %306

320:                                              ; preds = %312
  %321 = getelementptr inbounds %struct.MaskSpline, ptr %313, i64 0, i32 6
  br label %322

322:                                              ; preds = %320, %322
  %323 = phi i64 [ 0, %320 ], [ %333, %322 ]
  %324 = phi ptr [ %314, %320 ], [ %330, %322 ]
  %325 = phi ptr [ %315, %320 ], [ %331, %322 ]
  %326 = phi ptr [ %316, %320 ], [ %332, %322 ]
  %327 = load ptr, ptr %321, align 8, !tbaa !505
  %328 = getelementptr inbounds %struct.MaskSplinePoint, ptr %327, i64 %323
  %329 = load i32, ptr %203, align 8, !tbaa !224
  call fastcc void @MaskPointToTransData(i32 %329, ptr noundef %328, ptr noundef %324, ptr noundef %325, ptr noundef %326, i32 noundef %9, ptr noundef nonnull %3)
  %330 = getelementptr inbounds %struct.TransData, ptr %324, i64 3
  %331 = getelementptr inbounds %struct.TransData2D, ptr %325, i64 3
  %332 = getelementptr inbounds %struct.TransDataMasking, ptr %326, i64 3
  %333 = add nuw nsw i64 %323, 1
  %334 = load i32, ptr %317, align 4, !tbaa !502
  %335 = sext i32 %334 to i64
  %336 = icmp slt i64 %333, %335
  br i1 %336, label %322, label %306, !llvm.loop !512

337:                                              ; preds = %306, %302, %293
  %338 = phi ptr [ %297, %293 ], [ %297, %302 ], [ %307, %306 ]
  %339 = phi ptr [ %296, %293 ], [ %296, %302 ], [ %308, %306 ]
  %340 = phi ptr [ %295, %293 ], [ %295, %302 ], [ %309, %306 ]
  %341 = load ptr, ptr %294, align 8, !tbaa !33
  %342 = icmp eq ptr %341, null
  br i1 %342, label %343, label %293, !llvm.loop !510

343:                                              ; preds = %337, %217, %23, %173, %169, %2, %16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #18
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @createTransPaintCurveVerts(ptr noundef %0, ptr nocapture noundef %1) unnamed_addr #6 {
  %3 = tail call ptr @BKE_paint_get_active_from_context(ptr noundef %0) #18
  %4 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 9
  store i32 0, ptr %4, align 8, !tbaa !5
  %5 = icmp eq ptr %3, null
  br i1 %5, label %537, label %6

6:                                                ; preds = %2
  %7 = load ptr, ptr %3, align 8, !tbaa !513
  %8 = icmp eq ptr %7, null
  br i1 %8, label %537, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %struct.Brush, ptr %7, i64 0, i32 9
  %11 = load ptr, ptr %10, align 8, !tbaa !514
  %12 = icmp eq ptr %11, null
  br i1 %12, label %537, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.PaintCurve, ptr %11, i64 0, i32 1
  %15 = getelementptr inbounds %struct.PaintCurve, ptr %11, i64 0, i32 2
  %16 = load i32, ptr %15, align 8, !tbaa !518
  %17 = icmp sgt i32 %16, 0
  br i1 %17, label %18, label %537

18:                                               ; preds = %13
  %19 = load ptr, ptr %14, align 8, !tbaa !520
  %20 = zext i32 %16 to i64
  %21 = icmp ult i32 %16, 16
  br i1 %21, label %256, label %22

22:                                               ; preds = %18
  %23 = and i64 %20, 4294967280
  %24 = trunc i64 %23 to i32
  %25 = mul nuw nsw i64 %23, 76
  %26 = getelementptr i8, ptr %19, i64 %25
  br label %27

27:                                               ; preds = %27, %22
  %28 = phi i64 [ 0, %22 ], [ %250, %27 ]
  %29 = phi <8 x i32> [ zeroinitializer, %22 ], [ %247, %27 ]
  %30 = phi <8 x i32> [ zeroinitializer, %22 ], [ %249, %27 ]
  %31 = mul i64 %28, 76
  %32 = getelementptr i8, ptr %19, i64 %31
  %33 = mul i64 %28, 76
  %34 = add i64 %33, 76
  %35 = getelementptr i8, ptr %19, i64 %34
  %36 = mul i64 %28, 76
  %37 = add i64 %36, 152
  %38 = getelementptr i8, ptr %19, i64 %37
  %39 = mul i64 %28, 76
  %40 = add i64 %39, 228
  %41 = getelementptr i8, ptr %19, i64 %40
  %42 = mul i64 %28, 76
  %43 = add i64 %42, 304
  %44 = getelementptr i8, ptr %19, i64 %43
  %45 = mul i64 %28, 76
  %46 = add i64 %45, 380
  %47 = getelementptr i8, ptr %19, i64 %46
  %48 = mul i64 %28, 76
  %49 = add i64 %48, 456
  %50 = getelementptr i8, ptr %19, i64 %49
  %51 = mul i64 %28, 76
  %52 = add i64 %51, 532
  %53 = getelementptr i8, ptr %19, i64 %52
  %54 = mul i64 %28, 76
  %55 = add i64 %54, 608
  %56 = getelementptr i8, ptr %19, i64 %55
  %57 = mul i64 %28, 76
  %58 = add i64 %57, 684
  %59 = getelementptr i8, ptr %19, i64 %58
  %60 = mul i64 %28, 76
  %61 = add i64 %60, 760
  %62 = getelementptr i8, ptr %19, i64 %61
  %63 = mul i64 %28, 76
  %64 = add i64 %63, 836
  %65 = getelementptr i8, ptr %19, i64 %64
  %66 = mul i64 %28, 76
  %67 = add i64 %66, 912
  %68 = getelementptr i8, ptr %19, i64 %67
  %69 = mul i64 %28, 76
  %70 = add i64 %69, 988
  %71 = getelementptr i8, ptr %19, i64 %70
  %72 = mul i64 %28, 76
  %73 = add i64 %72, 1064
  %74 = getelementptr i8, ptr %19, i64 %73
  %75 = mul i64 %28, 76
  %76 = add i64 %75, 1140
  %77 = getelementptr i8, ptr %19, i64 %76
  %78 = getelementptr inbounds %struct.BezTriple, ptr %32, i64 0, i32 7
  %79 = getelementptr inbounds %struct.BezTriple, ptr %35, i64 0, i32 7
  %80 = getelementptr inbounds %struct.BezTriple, ptr %38, i64 0, i32 7
  %81 = getelementptr inbounds %struct.BezTriple, ptr %41, i64 0, i32 7
  %82 = getelementptr inbounds %struct.BezTriple, ptr %44, i64 0, i32 7
  %83 = getelementptr inbounds %struct.BezTriple, ptr %47, i64 0, i32 7
  %84 = getelementptr inbounds %struct.BezTriple, ptr %50, i64 0, i32 7
  %85 = getelementptr inbounds %struct.BezTriple, ptr %53, i64 0, i32 7
  %86 = getelementptr inbounds %struct.BezTriple, ptr %56, i64 0, i32 7
  %87 = getelementptr inbounds %struct.BezTriple, ptr %59, i64 0, i32 7
  %88 = getelementptr inbounds %struct.BezTriple, ptr %62, i64 0, i32 7
  %89 = getelementptr inbounds %struct.BezTriple, ptr %65, i64 0, i32 7
  %90 = getelementptr inbounds %struct.BezTriple, ptr %68, i64 0, i32 7
  %91 = getelementptr inbounds %struct.BezTriple, ptr %71, i64 0, i32 7
  %92 = getelementptr inbounds %struct.BezTriple, ptr %74, i64 0, i32 7
  %93 = getelementptr inbounds %struct.BezTriple, ptr %77, i64 0, i32 7
  %94 = load i8, ptr %78, align 1, !tbaa !521
  %95 = load i8, ptr %79, align 1, !tbaa !521
  %96 = load i8, ptr %80, align 1, !tbaa !521
  %97 = load i8, ptr %81, align 1, !tbaa !521
  %98 = load i8, ptr %82, align 1, !tbaa !521
  %99 = load i8, ptr %83, align 1, !tbaa !521
  %100 = load i8, ptr %84, align 1, !tbaa !521
  %101 = load i8, ptr %85, align 1, !tbaa !521
  %102 = insertelement <8 x i8> poison, i8 %94, i64 0
  %103 = insertelement <8 x i8> %102, i8 %95, i64 1
  %104 = insertelement <8 x i8> %103, i8 %96, i64 2
  %105 = insertelement <8 x i8> %104, i8 %97, i64 3
  %106 = insertelement <8 x i8> %105, i8 %98, i64 4
  %107 = insertelement <8 x i8> %106, i8 %99, i64 5
  %108 = insertelement <8 x i8> %107, i8 %100, i64 6
  %109 = insertelement <8 x i8> %108, i8 %101, i64 7
  %110 = load i8, ptr %86, align 1, !tbaa !521
  %111 = load i8, ptr %87, align 1, !tbaa !521
  %112 = load i8, ptr %88, align 1, !tbaa !521
  %113 = load i8, ptr %89, align 1, !tbaa !521
  %114 = load i8, ptr %90, align 1, !tbaa !521
  %115 = load i8, ptr %91, align 1, !tbaa !521
  %116 = load i8, ptr %92, align 1, !tbaa !521
  %117 = load i8, ptr %93, align 1, !tbaa !521
  %118 = insertelement <8 x i8> poison, i8 %110, i64 0
  %119 = insertelement <8 x i8> %118, i8 %111, i64 1
  %120 = insertelement <8 x i8> %119, i8 %112, i64 2
  %121 = insertelement <8 x i8> %120, i8 %113, i64 3
  %122 = insertelement <8 x i8> %121, i8 %114, i64 4
  %123 = insertelement <8 x i8> %122, i8 %115, i64 5
  %124 = insertelement <8 x i8> %123, i8 %116, i64 6
  %125 = insertelement <8 x i8> %124, i8 %117, i64 7
  %126 = getelementptr inbounds %struct.BezTriple, ptr %32, i64 0, i32 8
  %127 = getelementptr inbounds %struct.BezTriple, ptr %35, i64 0, i32 8
  %128 = getelementptr inbounds %struct.BezTriple, ptr %38, i64 0, i32 8
  %129 = getelementptr inbounds %struct.BezTriple, ptr %41, i64 0, i32 8
  %130 = getelementptr inbounds %struct.BezTriple, ptr %44, i64 0, i32 8
  %131 = getelementptr inbounds %struct.BezTriple, ptr %47, i64 0, i32 8
  %132 = getelementptr inbounds %struct.BezTriple, ptr %50, i64 0, i32 8
  %133 = getelementptr inbounds %struct.BezTriple, ptr %53, i64 0, i32 8
  %134 = getelementptr inbounds %struct.BezTriple, ptr %56, i64 0, i32 8
  %135 = getelementptr inbounds %struct.BezTriple, ptr %59, i64 0, i32 8
  %136 = getelementptr inbounds %struct.BezTriple, ptr %62, i64 0, i32 8
  %137 = getelementptr inbounds %struct.BezTriple, ptr %65, i64 0, i32 8
  %138 = getelementptr inbounds %struct.BezTriple, ptr %68, i64 0, i32 8
  %139 = getelementptr inbounds %struct.BezTriple, ptr %71, i64 0, i32 8
  %140 = getelementptr inbounds %struct.BezTriple, ptr %74, i64 0, i32 8
  %141 = getelementptr inbounds %struct.BezTriple, ptr %77, i64 0, i32 8
  %142 = load i8, ptr %126, align 4, !tbaa !523
  %143 = load i8, ptr %127, align 4, !tbaa !523
  %144 = load i8, ptr %128, align 4, !tbaa !523
  %145 = load i8, ptr %129, align 4, !tbaa !523
  %146 = load i8, ptr %130, align 4, !tbaa !523
  %147 = load i8, ptr %131, align 4, !tbaa !523
  %148 = load i8, ptr %132, align 4, !tbaa !523
  %149 = load i8, ptr %133, align 4, !tbaa !523
  %150 = insertelement <8 x i8> poison, i8 %142, i64 0
  %151 = insertelement <8 x i8> %150, i8 %143, i64 1
  %152 = insertelement <8 x i8> %151, i8 %144, i64 2
  %153 = insertelement <8 x i8> %152, i8 %145, i64 3
  %154 = insertelement <8 x i8> %153, i8 %146, i64 4
  %155 = insertelement <8 x i8> %154, i8 %147, i64 5
  %156 = insertelement <8 x i8> %155, i8 %148, i64 6
  %157 = insertelement <8 x i8> %156, i8 %149, i64 7
  %158 = load i8, ptr %134, align 4, !tbaa !523
  %159 = load i8, ptr %135, align 4, !tbaa !523
  %160 = load i8, ptr %136, align 4, !tbaa !523
  %161 = load i8, ptr %137, align 4, !tbaa !523
  %162 = load i8, ptr %138, align 4, !tbaa !523
  %163 = load i8, ptr %139, align 4, !tbaa !523
  %164 = load i8, ptr %140, align 4, !tbaa !523
  %165 = load i8, ptr %141, align 4, !tbaa !523
  %166 = insertelement <8 x i8> poison, i8 %158, i64 0
  %167 = insertelement <8 x i8> %166, i8 %159, i64 1
  %168 = insertelement <8 x i8> %167, i8 %160, i64 2
  %169 = insertelement <8 x i8> %168, i8 %161, i64 3
  %170 = insertelement <8 x i8> %169, i8 %162, i64 4
  %171 = insertelement <8 x i8> %170, i8 %163, i64 5
  %172 = insertelement <8 x i8> %171, i8 %164, i64 6
  %173 = insertelement <8 x i8> %172, i8 %165, i64 7
  %174 = getelementptr inbounds %struct.BezTriple, ptr %32, i64 0, i32 9
  %175 = getelementptr inbounds %struct.BezTriple, ptr %35, i64 0, i32 9
  %176 = getelementptr inbounds %struct.BezTriple, ptr %38, i64 0, i32 9
  %177 = getelementptr inbounds %struct.BezTriple, ptr %41, i64 0, i32 9
  %178 = getelementptr inbounds %struct.BezTriple, ptr %44, i64 0, i32 9
  %179 = getelementptr inbounds %struct.BezTriple, ptr %47, i64 0, i32 9
  %180 = getelementptr inbounds %struct.BezTriple, ptr %50, i64 0, i32 9
  %181 = getelementptr inbounds %struct.BezTriple, ptr %53, i64 0, i32 9
  %182 = getelementptr inbounds %struct.BezTriple, ptr %56, i64 0, i32 9
  %183 = getelementptr inbounds %struct.BezTriple, ptr %59, i64 0, i32 9
  %184 = getelementptr inbounds %struct.BezTriple, ptr %62, i64 0, i32 9
  %185 = getelementptr inbounds %struct.BezTriple, ptr %65, i64 0, i32 9
  %186 = getelementptr inbounds %struct.BezTriple, ptr %68, i64 0, i32 9
  %187 = getelementptr inbounds %struct.BezTriple, ptr %71, i64 0, i32 9
  %188 = getelementptr inbounds %struct.BezTriple, ptr %74, i64 0, i32 9
  %189 = getelementptr inbounds %struct.BezTriple, ptr %77, i64 0, i32 9
  %190 = load i8, ptr %174, align 1, !tbaa !524
  %191 = load i8, ptr %175, align 1, !tbaa !524
  %192 = load i8, ptr %176, align 1, !tbaa !524
  %193 = load i8, ptr %177, align 1, !tbaa !524
  %194 = load i8, ptr %178, align 1, !tbaa !524
  %195 = load i8, ptr %179, align 1, !tbaa !524
  %196 = load i8, ptr %180, align 1, !tbaa !524
  %197 = load i8, ptr %181, align 1, !tbaa !524
  %198 = insertelement <8 x i8> poison, i8 %190, i64 0
  %199 = insertelement <8 x i8> %198, i8 %191, i64 1
  %200 = insertelement <8 x i8> %199, i8 %192, i64 2
  %201 = insertelement <8 x i8> %200, i8 %193, i64 3
  %202 = insertelement <8 x i8> %201, i8 %194, i64 4
  %203 = insertelement <8 x i8> %202, i8 %195, i64 5
  %204 = insertelement <8 x i8> %203, i8 %196, i64 6
  %205 = insertelement <8 x i8> %204, i8 %197, i64 7
  %206 = load i8, ptr %182, align 1, !tbaa !524
  %207 = load i8, ptr %183, align 1, !tbaa !524
  %208 = load i8, ptr %184, align 1, !tbaa !524
  %209 = load i8, ptr %185, align 1, !tbaa !524
  %210 = load i8, ptr %186, align 1, !tbaa !524
  %211 = load i8, ptr %187, align 1, !tbaa !524
  %212 = load i8, ptr %188, align 1, !tbaa !524
  %213 = load i8, ptr %189, align 1, !tbaa !524
  %214 = insertelement <8 x i8> poison, i8 %206, i64 0
  %215 = insertelement <8 x i8> %214, i8 %207, i64 1
  %216 = insertelement <8 x i8> %215, i8 %208, i64 2
  %217 = insertelement <8 x i8> %216, i8 %209, i64 3
  %218 = insertelement <8 x i8> %217, i8 %210, i64 4
  %219 = insertelement <8 x i8> %218, i8 %211, i64 5
  %220 = insertelement <8 x i8> %219, i8 %212, i64 6
  %221 = insertelement <8 x i8> %220, i8 %213, i64 7
  %222 = or <8 x i8> %157, %109
  %223 = or <8 x i8> %173, %125
  %224 = or <8 x i8> %222, %205
  %225 = or <8 x i8> %223, %221
  %226 = trunc <8 x i8> %224 to <8 x i1>
  %227 = trunc <8 x i8> %225 to <8 x i1>
  %228 = and <8 x i8> %157, <i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1>
  %229 = and <8 x i8> %173, <i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1>
  %230 = icmp eq <8 x i8> %228, zeroinitializer
  %231 = icmp eq <8 x i8> %229, zeroinitializer
  %232 = add <8 x i32> %29, <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>
  %233 = add <8 x i32> %30, <i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3>
  %234 = and <8 x i8> %109, <i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1>
  %235 = and <8 x i8> %125, <i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1>
  %236 = zext <8 x i8> %234 to <8 x i32>
  %237 = zext <8 x i8> %235 to <8 x i32>
  %238 = add <8 x i32> %29, %236
  %239 = add <8 x i32> %30, %237
  %240 = and <8 x i8> %205, <i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1>
  %241 = and <8 x i8> %221, <i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1>
  %242 = zext <8 x i8> %240 to <8 x i32>
  %243 = zext <8 x i8> %241 to <8 x i32>
  %244 = add <8 x i32> %238, %242
  %245 = add <8 x i32> %239, %243
  %246 = select <8 x i1> %230, <8 x i32> %244, <8 x i32> %232
  %247 = select <8 x i1> %226, <8 x i32> %246, <8 x i32> %29
  %248 = select <8 x i1> %231, <8 x i32> %245, <8 x i32> %233
  %249 = select <8 x i1> %227, <8 x i32> %248, <8 x i32> %30
  %250 = add nuw i64 %28, 16
  %251 = icmp eq i64 %250, %23
  br i1 %251, label %252, label %27, !llvm.loop !525

252:                                              ; preds = %27
  %253 = add <8 x i32> %249, %247
  %254 = tail call i32 @llvm.vector.reduce.add.v8i32(<8 x i32> %253)
  %255 = icmp eq i64 %23, %20
  br i1 %255, label %291, label %256

256:                                              ; preds = %18, %252
  %257 = phi i32 [ 0, %18 ], [ %254, %252 ]
  %258 = phi i32 [ 0, %18 ], [ %24, %252 ]
  %259 = phi ptr [ %19, %18 ], [ %26, %252 ]
  br label %260

260:                                              ; preds = %256, %286
  %261 = phi i32 [ %287, %286 ], [ %257, %256 ]
  %262 = phi i32 [ %288, %286 ], [ %258, %256 ]
  %263 = phi ptr [ %289, %286 ], [ %259, %256 ]
  %264 = getelementptr inbounds %struct.BezTriple, ptr %263, i64 0, i32 7
  %265 = load i8, ptr %264, align 1, !tbaa !521
  %266 = getelementptr inbounds %struct.BezTriple, ptr %263, i64 0, i32 8
  %267 = load i8, ptr %266, align 4, !tbaa !523
  %268 = getelementptr inbounds %struct.BezTriple, ptr %263, i64 0, i32 9
  %269 = load i8, ptr %268, align 1, !tbaa !524
  %270 = or i8 %267, %265
  %271 = or i8 %270, %269
  %272 = and i8 %271, 1
  %273 = icmp eq i8 %272, 0
  br i1 %273, label %286, label %274

274:                                              ; preds = %260
  %275 = and i8 %267, 1
  %276 = icmp eq i8 %275, 0
  br i1 %276, label %279, label %277

277:                                              ; preds = %274
  %278 = add nsw i32 %261, 3
  br label %286

279:                                              ; preds = %274
  %280 = and i8 %265, 1
  %281 = zext i8 %280 to i32
  %282 = add nsw i32 %261, %281
  %283 = and i8 %269, 1
  %284 = zext i8 %283 to i32
  %285 = add nsw i32 %282, %284
  br label %286

286:                                              ; preds = %279, %260, %277
  %287 = phi i32 [ %278, %277 ], [ %261, %260 ], [ %285, %279 ]
  %288 = add nuw nsw i32 %262, 1
  %289 = getelementptr inbounds %struct.PaintCurvePoint, ptr %263, i64 1
  %290 = icmp eq i32 %288, %16
  br i1 %290, label %291, label %260, !llvm.loop !526

291:                                              ; preds = %286, %252
  %292 = phi i32 [ %254, %252 ], [ %287, %286 ]
  %293 = icmp eq i32 %292, 0
  br i1 %293, label %537, label %294

294:                                              ; preds = %291
  store i32 %292, ptr %4, align 8, !tbaa !5
  %295 = load ptr, ptr @MEM_callocN, align 8, !tbaa !33
  %296 = sext i32 %292 to i64
  %297 = mul nsw i64 %296, 56
  %298 = tail call ptr %295(i64 noundef %297, ptr noundef nonnull @.str.18) #18
  %299 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 12
  store ptr %298, ptr %299, align 8, !tbaa !143
  %300 = load ptr, ptr @MEM_callocN, align 8, !tbaa !33
  %301 = load i32, ptr %4, align 8, !tbaa !5
  %302 = sext i32 %301 to i64
  %303 = mul nsw i64 %302, 224
  %304 = tail call ptr %300(i64 noundef %303, ptr noundef nonnull @.str.19) #18
  %305 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 10
  store ptr %304, ptr %305, align 8, !tbaa !19
  %306 = load ptr, ptr @MEM_callocN, align 8, !tbaa !33
  %307 = load i32, ptr %4, align 8, !tbaa !5
  %308 = sext i32 %307 to i64
  %309 = shl nsw i64 %308, 4
  %310 = tail call ptr %306(i64 noundef %309, ptr noundef nonnull @.str.20) #18
  %311 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 40
  store ptr %310, ptr %311, align 8, !tbaa !66
  %312 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 1
  %313 = load i32, ptr %312, align 4, !tbaa !24
  %314 = or i32 %313, 131072
  store i32 %314, ptr %312, align 4, !tbaa !24
  %315 = load i32, ptr %15, align 8, !tbaa !518
  %316 = icmp sgt i32 %315, 0
  br i1 %316, label %317, label %537

317:                                              ; preds = %294
  %318 = load ptr, ptr %14, align 8, !tbaa !520
  br label %319

319:                                              ; preds = %317, %529
  %320 = phi i32 [ %533, %529 ], [ 0, %317 ]
  %321 = phi ptr [ %532, %529 ], [ %310, %317 ]
  %322 = phi ptr [ %531, %529 ], [ %298, %317 ]
  %323 = phi ptr [ %530, %529 ], [ %304, %317 ]
  %324 = phi ptr [ %534, %529 ], [ %318, %317 ]
  %325 = getelementptr inbounds %struct.BezTriple, ptr %324, i64 0, i32 7
  %326 = load i8, ptr %325, align 1, !tbaa !341
  %327 = getelementptr inbounds %struct.BezTriple, ptr %324, i64 0, i32 8
  %328 = load i8, ptr %327, align 4, !tbaa !523
  %329 = or i8 %328, %326
  %330 = getelementptr inbounds %struct.BezTriple, ptr %324, i64 0, i32 9
  %331 = load i8, ptr %330, align 1, !tbaa !342
  %332 = or i8 %329, %331
  %333 = and i8 %332, 1
  %334 = icmp eq i8 %333, 0
  br i1 %334, label %529, label %335

335:                                              ; preds = %319
  %336 = icmp eq i8 %328, 1
  br i1 %336, label %337, label %428

337:                                              ; preds = %335
  %338 = getelementptr inbounds [3 x [3 x float]], ptr %324, i64 0, i64 1
  %339 = getelementptr inbounds [3 x [3 x float]], ptr %324, i64 0, i64 1, i64 1
  %340 = getelementptr inbounds [3 x [3 x float]], ptr %324, i64 0, i64 1, i64 2
  %341 = load float, ptr %324, align 4, !tbaa !82
  store float %341, ptr %322, align 4, !tbaa !82
  %342 = getelementptr inbounds float, ptr %324, i64 1
  %343 = load float, ptr %342, align 4, !tbaa !82
  %344 = getelementptr inbounds float, ptr %322, i64 1
  store float %343, ptr %344, align 4, !tbaa !82
  %345 = getelementptr inbounds [3 x float], ptr %322, i64 0, i64 2
  store float 0.000000e+00, ptr %345, align 8, !tbaa !82
  %346 = getelementptr inbounds %struct.TransData2D, ptr %322, i64 0, i32 1
  store ptr %324, ptr %346, align 8, !tbaa !178
  %347 = getelementptr inbounds %struct.TransData, ptr %323, i64 0, i32 16
  %348 = getelementptr inbounds %struct.TransData, ptr %323, i64 0, i32 3
  store ptr %322, ptr %348, align 8, !tbaa !182
  %349 = getelementptr inbounds %struct.TransData, ptr %323, i64 0, i32 7
  %350 = load float, ptr %338, align 4, !tbaa !82
  store float %350, ptr %349, align 4, !tbaa !82
  %351 = load float, ptr %339, align 4, !tbaa !82
  %352 = getelementptr inbounds %struct.TransData, ptr %323, i64 0, i32 7, i64 1
  store float %351, ptr %352, align 4, !tbaa !82
  %353 = load float, ptr %340, align 4, !tbaa !82
  %354 = getelementptr inbounds %struct.TransData, ptr %323, i64 0, i32 7, i64 2
  store float %353, ptr %354, align 4, !tbaa !82
  %355 = getelementptr inbounds %struct.TransData, ptr %323, i64 0, i32 4
  %356 = load float, ptr %322, align 4, !tbaa !82
  store float %356, ptr %355, align 4, !tbaa !82
  %357 = load float, ptr %344, align 4, !tbaa !82
  %358 = getelementptr inbounds %struct.TransData, ptr %323, i64 0, i32 4, i64 1
  store float %357, ptr %358, align 4, !tbaa !82
  %359 = load float, ptr %345, align 4, !tbaa !82
  %360 = getelementptr inbounds %struct.TransData, ptr %323, i64 0, i32 4, i64 2
  store float %359, ptr %360, align 4, !tbaa !82
  %361 = getelementptr inbounds %struct.TransData, ptr %323, i64 0, i32 10
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(36) %361, i8 0, i64 32, i1 false)
  %362 = getelementptr inbounds %struct.TransData, ptr %323, i64 0, i32 10, i64 2, i64 2
  store float 1.000000e+00, ptr %362, align 8, !tbaa !82
  %363 = getelementptr inbounds %struct.TransData, ptr %323, i64 0, i32 13
  store ptr null, ptr %363, align 8, !tbaa !334
  %364 = getelementptr inbounds %struct.TransData, ptr %323, i64 0, i32 5
  store ptr null, ptr %364, align 8, !tbaa !423
  store i32 1, ptr %347, align 8, !tbaa !20
  store float 0.000000e+00, ptr %323, align 8, !tbaa !25
  %365 = getelementptr inbounds %struct.TransData, ptr %323, i64 0, i32 8
  tail call void @unit_m3(ptr noundef nonnull %365) #18
  %366 = getelementptr inbounds %struct.TransData, ptr %323, i64 0, i32 9
  tail call void @unit_m3(ptr noundef nonnull %366) #18
  %367 = getelementptr inbounds %struct.TransDataPaintCurve, ptr %321, i64 0, i32 1
  store i8 0, ptr %367, align 8, !tbaa !403
  store ptr %324, ptr %321, align 8, !tbaa !401
  %368 = getelementptr inbounds %struct.TransData, ptr %323, i64 1
  %369 = getelementptr inbounds %struct.TransData2D, ptr %322, i64 1
  %370 = getelementptr inbounds %struct.TransDataPaintCurve, ptr %321, i64 1
  %371 = load float, ptr %338, align 4, !tbaa !82
  store float %371, ptr %369, align 4, !tbaa !82
  %372 = load float, ptr %339, align 4, !tbaa !82
  %373 = getelementptr inbounds %struct.TransData2D, ptr %322, i64 1, i32 0, i64 1
  store float %372, ptr %373, align 4, !tbaa !82
  %374 = getelementptr inbounds %struct.TransData2D, ptr %322, i64 1, i32 0, i64 2
  store float 0.000000e+00, ptr %374, align 8, !tbaa !82
  %375 = getelementptr inbounds %struct.TransData2D, ptr %322, i64 1, i32 1
  store ptr %338, ptr %375, align 8, !tbaa !178
  %376 = getelementptr inbounds %struct.TransData, ptr %323, i64 1, i32 16
  %377 = getelementptr inbounds %struct.TransData, ptr %323, i64 1, i32 3
  store ptr %369, ptr %377, align 8, !tbaa !182
  %378 = getelementptr inbounds %struct.TransData, ptr %323, i64 1, i32 7
  %379 = load float, ptr %338, align 4, !tbaa !82
  store float %379, ptr %378, align 4, !tbaa !82
  %380 = load float, ptr %339, align 4, !tbaa !82
  %381 = getelementptr inbounds %struct.TransData, ptr %323, i64 1, i32 7, i64 1
  store float %380, ptr %381, align 4, !tbaa !82
  %382 = load float, ptr %340, align 4, !tbaa !82
  %383 = getelementptr inbounds %struct.TransData, ptr %323, i64 1, i32 7, i64 2
  store float %382, ptr %383, align 4, !tbaa !82
  %384 = getelementptr inbounds %struct.TransData, ptr %323, i64 1, i32 4
  %385 = load float, ptr %369, align 4, !tbaa !82
  store float %385, ptr %384, align 4, !tbaa !82
  %386 = load float, ptr %373, align 4, !tbaa !82
  %387 = getelementptr inbounds %struct.TransData, ptr %323, i64 1, i32 4, i64 1
  store float %386, ptr %387, align 4, !tbaa !82
  %388 = load float, ptr %374, align 4, !tbaa !82
  %389 = getelementptr inbounds %struct.TransData, ptr %323, i64 1, i32 4, i64 2
  store float %388, ptr %389, align 4, !tbaa !82
  %390 = getelementptr inbounds %struct.TransData, ptr %323, i64 1, i32 10
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(36) %390, i8 0, i64 32, i1 false)
  %391 = getelementptr inbounds %struct.TransData, ptr %323, i64 1, i32 10, i64 2, i64 2
  store float 1.000000e+00, ptr %391, align 8, !tbaa !82
  %392 = getelementptr inbounds %struct.TransData, ptr %323, i64 1, i32 13
  store ptr null, ptr %392, align 8, !tbaa !334
  %393 = getelementptr inbounds %struct.TransData, ptr %323, i64 1, i32 5
  store ptr null, ptr %393, align 8, !tbaa !423
  store i32 1, ptr %376, align 8, !tbaa !20
  store float 0.000000e+00, ptr %368, align 8, !tbaa !25
  %394 = getelementptr inbounds %struct.TransData, ptr %323, i64 1, i32 8
  tail call void @unit_m3(ptr noundef nonnull %394) #18
  %395 = getelementptr inbounds %struct.TransData, ptr %323, i64 1, i32 9
  tail call void @unit_m3(ptr noundef nonnull %395) #18
  %396 = getelementptr inbounds %struct.TransDataPaintCurve, ptr %321, i64 1, i32 1
  store i8 1, ptr %396, align 8, !tbaa !403
  store ptr %324, ptr %370, align 8, !tbaa !401
  %397 = getelementptr inbounds %struct.TransData, ptr %323, i64 2
  %398 = getelementptr inbounds %struct.TransData2D, ptr %322, i64 2
  %399 = getelementptr inbounds %struct.TransDataPaintCurve, ptr %321, i64 2
  %400 = getelementptr inbounds [3 x [3 x float]], ptr %324, i64 0, i64 2
  %401 = load float, ptr %400, align 4, !tbaa !82
  store float %401, ptr %398, align 4, !tbaa !82
  %402 = getelementptr inbounds [3 x [3 x float]], ptr %324, i64 0, i64 2, i64 1
  %403 = load float, ptr %402, align 4, !tbaa !82
  %404 = getelementptr inbounds %struct.TransData2D, ptr %322, i64 2, i32 0, i64 1
  store float %403, ptr %404, align 4, !tbaa !82
  %405 = getelementptr inbounds %struct.TransData2D, ptr %322, i64 2, i32 0, i64 2
  store float 0.000000e+00, ptr %405, align 8, !tbaa !82
  %406 = getelementptr inbounds %struct.TransData2D, ptr %322, i64 2, i32 1
  store ptr %400, ptr %406, align 8, !tbaa !178
  %407 = getelementptr inbounds %struct.TransData, ptr %323, i64 2, i32 16
  %408 = getelementptr inbounds %struct.TransData, ptr %323, i64 2, i32 3
  store ptr %398, ptr %408, align 8, !tbaa !182
  %409 = getelementptr inbounds %struct.TransData, ptr %323, i64 2, i32 7
  %410 = load float, ptr %338, align 4, !tbaa !82
  store float %410, ptr %409, align 4, !tbaa !82
  %411 = load float, ptr %339, align 4, !tbaa !82
  %412 = getelementptr inbounds %struct.TransData, ptr %323, i64 2, i32 7, i64 1
  store float %411, ptr %412, align 4, !tbaa !82
  %413 = load float, ptr %340, align 4, !tbaa !82
  %414 = getelementptr inbounds %struct.TransData, ptr %323, i64 2, i32 7, i64 2
  store float %413, ptr %414, align 4, !tbaa !82
  %415 = getelementptr inbounds %struct.TransData, ptr %323, i64 2, i32 4
  %416 = load float, ptr %398, align 4, !tbaa !82
  store float %416, ptr %415, align 4, !tbaa !82
  %417 = load float, ptr %404, align 4, !tbaa !82
  %418 = getelementptr inbounds %struct.TransData, ptr %323, i64 2, i32 4, i64 1
  store float %417, ptr %418, align 4, !tbaa !82
  %419 = load float, ptr %405, align 4, !tbaa !82
  %420 = getelementptr inbounds %struct.TransData, ptr %323, i64 2, i32 4, i64 2
  store float %419, ptr %420, align 4, !tbaa !82
  %421 = getelementptr inbounds %struct.TransData, ptr %323, i64 2, i32 10
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(36) %421, i8 0, i64 32, i1 false)
  %422 = getelementptr inbounds %struct.TransData, ptr %323, i64 2, i32 10, i64 2, i64 2
  store float 1.000000e+00, ptr %422, align 8, !tbaa !82
  %423 = getelementptr inbounds %struct.TransData, ptr %323, i64 2, i32 13
  store ptr null, ptr %423, align 8, !tbaa !334
  %424 = getelementptr inbounds %struct.TransData, ptr %323, i64 2, i32 5
  store ptr null, ptr %424, align 8, !tbaa !423
  store i32 1, ptr %407, align 8, !tbaa !20
  store float 0.000000e+00, ptr %397, align 8, !tbaa !25
  %425 = getelementptr inbounds %struct.TransData, ptr %323, i64 2, i32 8
  tail call void @unit_m3(ptr noundef nonnull %425) #18
  %426 = getelementptr inbounds %struct.TransData, ptr %323, i64 2, i32 9
  tail call void @unit_m3(ptr noundef nonnull %426) #18
  %427 = getelementptr inbounds %struct.TransDataPaintCurve, ptr %321, i64 2, i32 1
  store i8 2, ptr %427, align 8, !tbaa !403
  br label %505

428:                                              ; preds = %335
  %429 = and i8 %331, 1
  %430 = icmp eq i8 %429, 0
  br i1 %430, label %467, label %431

431:                                              ; preds = %428
  %432 = getelementptr inbounds [3 x [3 x float]], ptr %324, i64 0, i64 2
  %433 = load float, ptr %432, align 4, !tbaa !82
  store float %433, ptr %322, align 4, !tbaa !82
  %434 = getelementptr inbounds [3 x [3 x float]], ptr %324, i64 0, i64 2, i64 1
  %435 = load float, ptr %434, align 4, !tbaa !82
  %436 = getelementptr inbounds float, ptr %322, i64 1
  store float %435, ptr %436, align 4, !tbaa !82
  %437 = getelementptr inbounds [3 x float], ptr %322, i64 0, i64 2
  store float 0.000000e+00, ptr %437, align 8, !tbaa !82
  %438 = getelementptr inbounds %struct.TransData2D, ptr %322, i64 0, i32 1
  store ptr %432, ptr %438, align 8, !tbaa !178
  %439 = getelementptr inbounds %struct.TransData, ptr %323, i64 0, i32 16
  %440 = getelementptr inbounds %struct.TransData, ptr %323, i64 0, i32 3
  store ptr %322, ptr %440, align 8, !tbaa !182
  %441 = getelementptr inbounds %struct.TransData, ptr %323, i64 0, i32 7
  %442 = getelementptr inbounds [3 x [3 x float]], ptr %324, i64 0, i64 1
  %443 = load float, ptr %442, align 4, !tbaa !82
  store float %443, ptr %441, align 4, !tbaa !82
  %444 = getelementptr inbounds [3 x [3 x float]], ptr %324, i64 0, i64 1, i64 1
  %445 = load float, ptr %444, align 4, !tbaa !82
  %446 = getelementptr inbounds %struct.TransData, ptr %323, i64 0, i32 7, i64 1
  store float %445, ptr %446, align 4, !tbaa !82
  %447 = getelementptr inbounds [3 x [3 x float]], ptr %324, i64 0, i64 1, i64 2
  %448 = load float, ptr %447, align 4, !tbaa !82
  %449 = getelementptr inbounds %struct.TransData, ptr %323, i64 0, i32 7, i64 2
  store float %448, ptr %449, align 4, !tbaa !82
  %450 = getelementptr inbounds %struct.TransData, ptr %323, i64 0, i32 4
  %451 = load float, ptr %322, align 4, !tbaa !82
  store float %451, ptr %450, align 4, !tbaa !82
  %452 = load float, ptr %436, align 4, !tbaa !82
  %453 = getelementptr inbounds %struct.TransData, ptr %323, i64 0, i32 4, i64 1
  store float %452, ptr %453, align 4, !tbaa !82
  %454 = load float, ptr %437, align 4, !tbaa !82
  %455 = getelementptr inbounds %struct.TransData, ptr %323, i64 0, i32 4, i64 2
  store float %454, ptr %455, align 4, !tbaa !82
  %456 = getelementptr inbounds %struct.TransData, ptr %323, i64 0, i32 10
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(36) %456, i8 0, i64 32, i1 false)
  %457 = getelementptr inbounds %struct.TransData, ptr %323, i64 0, i32 10, i64 2, i64 2
  store float 1.000000e+00, ptr %457, align 8, !tbaa !82
  %458 = getelementptr inbounds %struct.TransData, ptr %323, i64 0, i32 13
  store ptr null, ptr %458, align 8, !tbaa !334
  %459 = getelementptr inbounds %struct.TransData, ptr %323, i64 0, i32 5
  store ptr null, ptr %459, align 8, !tbaa !423
  store i32 1, ptr %439, align 8, !tbaa !20
  store float 0.000000e+00, ptr %323, align 8, !tbaa !25
  %460 = getelementptr inbounds %struct.TransData, ptr %323, i64 0, i32 8
  tail call void @unit_m3(ptr noundef nonnull %460) #18
  %461 = getelementptr inbounds %struct.TransData, ptr %323, i64 0, i32 9
  tail call void @unit_m3(ptr noundef nonnull %461) #18
  %462 = getelementptr inbounds %struct.TransDataPaintCurve, ptr %321, i64 0, i32 1
  store i8 2, ptr %462, align 8, !tbaa !403
  store ptr %324, ptr %321, align 8, !tbaa !401
  %463 = getelementptr inbounds %struct.TransData2D, ptr %322, i64 1
  %464 = getelementptr inbounds %struct.TransDataPaintCurve, ptr %321, i64 1
  %465 = getelementptr inbounds %struct.TransData, ptr %323, i64 1
  %466 = load i8, ptr %325, align 1, !tbaa !341
  br label %467

467:                                              ; preds = %431, %428
  %468 = phi i8 [ %466, %431 ], [ %326, %428 ]
  %469 = phi ptr [ %463, %431 ], [ %322, %428 ]
  %470 = phi ptr [ %464, %431 ], [ %321, %428 ]
  %471 = phi ptr [ %465, %431 ], [ %323, %428 ]
  %472 = and i8 %468, 1
  %473 = icmp eq i8 %472, 0
  br i1 %473, label %507, label %474

474:                                              ; preds = %467
  %475 = load float, ptr %324, align 4, !tbaa !82
  store float %475, ptr %469, align 4, !tbaa !82
  %476 = getelementptr inbounds float, ptr %324, i64 1
  %477 = load float, ptr %476, align 4, !tbaa !82
  %478 = getelementptr inbounds float, ptr %469, i64 1
  store float %477, ptr %478, align 4, !tbaa !82
  %479 = getelementptr inbounds [3 x float], ptr %469, i64 0, i64 2
  store float 0.000000e+00, ptr %479, align 8, !tbaa !82
  %480 = getelementptr inbounds %struct.TransData2D, ptr %469, i64 0, i32 1
  store ptr %324, ptr %480, align 8, !tbaa !178
  %481 = getelementptr inbounds %struct.TransData, ptr %471, i64 0, i32 16
  %482 = getelementptr inbounds %struct.TransData, ptr %471, i64 0, i32 3
  store ptr %469, ptr %482, align 8, !tbaa !182
  %483 = getelementptr inbounds %struct.TransData, ptr %471, i64 0, i32 7
  %484 = getelementptr inbounds [3 x [3 x float]], ptr %324, i64 0, i64 1
  %485 = load float, ptr %484, align 4, !tbaa !82
  store float %485, ptr %483, align 4, !tbaa !82
  %486 = getelementptr inbounds [3 x [3 x float]], ptr %324, i64 0, i64 1, i64 1
  %487 = load float, ptr %486, align 4, !tbaa !82
  %488 = getelementptr inbounds %struct.TransData, ptr %471, i64 0, i32 7, i64 1
  store float %487, ptr %488, align 4, !tbaa !82
  %489 = getelementptr inbounds [3 x [3 x float]], ptr %324, i64 0, i64 1, i64 2
  %490 = load float, ptr %489, align 4, !tbaa !82
  %491 = getelementptr inbounds %struct.TransData, ptr %471, i64 0, i32 7, i64 2
  store float %490, ptr %491, align 4, !tbaa !82
  %492 = getelementptr inbounds %struct.TransData, ptr %471, i64 0, i32 4
  %493 = load float, ptr %469, align 4, !tbaa !82
  store float %493, ptr %492, align 4, !tbaa !82
  %494 = load float, ptr %478, align 4, !tbaa !82
  %495 = getelementptr inbounds %struct.TransData, ptr %471, i64 0, i32 4, i64 1
  store float %494, ptr %495, align 4, !tbaa !82
  %496 = load float, ptr %479, align 4, !tbaa !82
  %497 = getelementptr inbounds %struct.TransData, ptr %471, i64 0, i32 4, i64 2
  store float %496, ptr %497, align 4, !tbaa !82
  %498 = getelementptr inbounds %struct.TransData, ptr %471, i64 0, i32 10
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(36) %498, i8 0, i64 32, i1 false)
  %499 = getelementptr inbounds %struct.TransData, ptr %471, i64 0, i32 10, i64 2, i64 2
  store float 1.000000e+00, ptr %499, align 8, !tbaa !82
  %500 = getelementptr inbounds %struct.TransData, ptr %471, i64 0, i32 13
  store ptr null, ptr %500, align 8, !tbaa !334
  %501 = getelementptr inbounds %struct.TransData, ptr %471, i64 0, i32 5
  store ptr null, ptr %501, align 8, !tbaa !423
  store i32 1, ptr %481, align 8, !tbaa !20
  store float 0.000000e+00, ptr %471, align 8, !tbaa !25
  %502 = getelementptr inbounds %struct.TransData, ptr %471, i64 0, i32 8
  tail call void @unit_m3(ptr noundef nonnull %502) #18
  %503 = getelementptr inbounds %struct.TransData, ptr %471, i64 0, i32 9
  tail call void @unit_m3(ptr noundef nonnull %503) #18
  %504 = getelementptr inbounds %struct.TransDataPaintCurve, ptr %470, i64 0, i32 1
  store i8 0, ptr %504, align 8, !tbaa !403
  br label %505

505:                                              ; preds = %474, %337
  %506 = phi ptr [ %399, %337 ], [ %470, %474 ]
  store ptr %324, ptr %506, align 8, !tbaa !401
  br label %507

507:                                              ; preds = %467, %505
  %508 = load i8, ptr %327, align 4, !tbaa !523
  %509 = and i8 %508, 1
  %510 = icmp eq i8 %509, 0
  br i1 %510, label %515, label %511

511:                                              ; preds = %507
  %512 = getelementptr inbounds %struct.TransData, ptr %323, i64 3
  %513 = getelementptr inbounds %struct.TransData2D, ptr %322, i64 3
  %514 = getelementptr inbounds %struct.TransDataPaintCurve, ptr %321, i64 3
  br label %529

515:                                              ; preds = %507
  %516 = load i8, ptr %325, align 1, !tbaa !521
  %517 = and i8 %516, 1
  %518 = zext i8 %517 to i64
  %519 = getelementptr inbounds %struct.TransData, ptr %323, i64 %518
  %520 = getelementptr inbounds %struct.TransData2D, ptr %322, i64 %518
  %521 = getelementptr inbounds %struct.TransDataPaintCurve, ptr %321, i64 %518
  %522 = load i8, ptr %330, align 1, !tbaa !524
  %523 = and i8 %522, 1
  %524 = icmp eq i8 %523, 0
  br i1 %524, label %529, label %525

525:                                              ; preds = %515
  %526 = getelementptr inbounds %struct.TransData, ptr %519, i64 1
  %527 = getelementptr inbounds %struct.TransData2D, ptr %520, i64 1
  %528 = getelementptr inbounds %struct.TransDataPaintCurve, ptr %521, i64 1
  br label %529

529:                                              ; preds = %319, %515, %525, %511
  %530 = phi ptr [ %512, %511 ], [ %526, %525 ], [ %519, %515 ], [ %323, %319 ]
  %531 = phi ptr [ %513, %511 ], [ %527, %525 ], [ %520, %515 ], [ %322, %319 ]
  %532 = phi ptr [ %514, %511 ], [ %528, %525 ], [ %521, %515 ], [ %321, %319 ]
  %533 = add nuw nsw i32 %320, 1
  %534 = getelementptr inbounds %struct.PaintCurvePoint, ptr %324, i64 1
  %535 = load i32, ptr %15, align 8, !tbaa !518
  %536 = icmp slt i32 %533, %535
  br i1 %536, label %319, label %537, !llvm.loop !527

537:                                              ; preds = %529, %13, %294, %291, %2, %6, %9
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @createTransUVs(ptr noundef %0, ptr nocapture noundef %1) unnamed_addr #6 {
  %3 = alloca float, align 4
  %4 = alloca float, align 4
  %5 = alloca %struct.BMIter, align 8
  %6 = alloca %struct.BMIter, align 8
  %7 = tail call ptr @CTX_wm_space_image(ptr noundef %0) #18
  %8 = tail call ptr @CTX_data_edit_image(ptr noundef %0) #18
  %9 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 56
  %10 = load ptr, ptr %9, align 8, !tbaa !89
  %11 = tail call ptr @CTX_data_tool_settings(ptr noundef %0) #18
  %12 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 63
  %13 = load ptr, ptr %12, align 8, !tbaa !69
  %14 = tail call ptr @BKE_editmesh_from_object(ptr noundef %13) #18
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %5) #18
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %6) #18
  %15 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 1
  %16 = load i32, ptr %15, align 4, !tbaa !24
  %17 = lshr i32 %16, 11
  %18 = load ptr, ptr %14, align 8, !tbaa !253
  %19 = getelementptr inbounds %struct.BMesh, ptr %18, i64 0, i32 26
  %20 = tail call i32 @CustomData_get_offset(ptr noundef nonnull %19, i32 noundef 16) #18
  %21 = load ptr, ptr %12, align 8, !tbaa !69
  %22 = tail call zeroext i8 @ED_space_image_show_uvedit(ptr noundef %7, ptr noundef %21) #18
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %291, label %24

24:                                               ; preds = %2
  %25 = and i32 %16, 4096
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %42, label %27

27:                                               ; preds = %24
  %28 = getelementptr inbounds %struct.ToolSettings, ptr %11, i64 0, i32 11
  %29 = load i8, ptr %28, align 2, !tbaa !528
  %30 = and i8 %29, 1
  %31 = load ptr, ptr %14, align 8, !tbaa !253
  %32 = xor i8 %30, 1
  %33 = tail call ptr @BM_uv_element_map_create(ptr noundef %31, i8 noundef zeroext %32, i8 noundef zeroext 1) #18
  %34 = load ptr, ptr @MEM_callocN, align 8, !tbaa !33
  %35 = getelementptr inbounds %struct.UvElementMap, ptr %33, i64 0, i32 3
  %36 = load i32, ptr %35, align 4, !tbaa !529
  %37 = ashr i32 %36, 5
  %38 = add nsw i32 %37, 1
  %39 = sext i32 %38 to i64
  %40 = shl nsw i64 %39, 2
  %41 = tail call ptr %34(i64 noundef %40, ptr noundef nonnull @.str.21) #18
  br label %42

42:                                               ; preds = %27, %24
  %43 = phi ptr [ %41, %27 ], [ null, %24 ]
  %44 = phi ptr [ %33, %27 ], [ null, %24 ]
  %45 = load ptr, ptr %14, align 8, !tbaa !253
  %46 = getelementptr inbounds %struct.BMIter, ptr %5, i64 0, i32 4
  store i8 3, ptr %46, align 4, !tbaa !410
  %47 = getelementptr inbounds %struct.BMIter, ptr %5, i64 0, i32 1
  store ptr @bmiter__elem_of_mesh_begin, ptr %47, align 8, !tbaa !412
  %48 = getelementptr inbounds %struct.BMIter, ptr %5, i64 0, i32 2
  store ptr @bmiter__elem_of_mesh_step, ptr %48, align 8, !tbaa !413
  %49 = getelementptr inbounds %struct.BMesh, ptr %45, i64 0, i32 12
  %50 = load ptr, ptr %49, align 8, !tbaa !531
  store ptr %50, ptr %5, align 8, !tbaa !51
  call void @bmiter__elem_of_mesh_begin(ptr noundef nonnull %5) #18
  %51 = load ptr, ptr %48, align 8, !tbaa !413
  %52 = call ptr %51(ptr noundef nonnull %5) #18
  %53 = icmp eq ptr %52, null
  br i1 %53, label %150, label %54

54:                                               ; preds = %42
  %55 = getelementptr inbounds %struct.BMIter, ptr %6, i64 0, i32 4
  %56 = getelementptr inbounds %struct.BMIter, ptr %6, i64 0, i32 1
  %57 = getelementptr inbounds %struct.BMIter, ptr %6, i64 0, i32 2
  %58 = and i32 %17, 1
  br i1 %26, label %59, label %96

59:                                               ; preds = %54, %78
  %60 = phi ptr [ %82, %78 ], [ %52, %54 ]
  %61 = phi i32 [ %80, %78 ], [ 0, %54 ]
  %62 = phi i32 [ %79, %78 ], [ 0, %54 ]
  %63 = load ptr, ptr %14, align 8, !tbaa !253
  %64 = getelementptr inbounds %struct.BMesh, ptr %63, i64 0, i32 27
  %65 = load ptr, ptr %60, align 8, !tbaa !532
  %66 = call ptr @CustomData_bmesh_get(ptr noundef nonnull %64, ptr noundef %65, i32 noundef 15) #18
  %67 = call zeroext i8 @uvedit_face_visible_test(ptr noundef %10, ptr noundef %8, ptr noundef nonnull %60, ptr noundef %66) #18
  %68 = icmp eq i8 %67, 0
  %69 = getelementptr inbounds %struct.BMHeader, ptr %60, i64 0, i32 3
  %70 = load i8, ptr %69, align 1, !tbaa !255
  br i1 %68, label %76, label %71

71:                                               ; preds = %59
  %72 = or i8 %70, 16
  store i8 %72, ptr %69, align 1, !tbaa !255
  store i8 11, ptr %55, align 4, !tbaa !410
  store ptr @bmiter__loop_of_face_begin, ptr %56, align 8, !tbaa !412
  store ptr @bmiter__loop_of_face_step, ptr %57, align 8, !tbaa !413
  store ptr %60, ptr %6, align 8, !tbaa !51
  call void @bmiter__loop_of_face_begin(ptr noundef nonnull %6) #18
  %73 = load ptr, ptr %57, align 8, !tbaa !413
  %74 = call ptr %73(ptr noundef nonnull %6) #18
  %75 = icmp eq ptr %74, null
  br i1 %75, label %78, label %84

76:                                               ; preds = %59
  %77 = and i8 %70, -17
  store i8 %77, ptr %69, align 1, !tbaa !255
  br label %78

78:                                               ; preds = %84, %71, %76
  %79 = phi i32 [ %62, %76 ], [ %62, %71 ], [ %92, %84 ]
  %80 = phi i32 [ %61, %76 ], [ %61, %71 ], [ %91, %84 ]
  %81 = load ptr, ptr %48, align 8, !tbaa !413
  %82 = call ptr %81(ptr noundef nonnull %5) #18
  %83 = icmp eq ptr %82, null
  br i1 %83, label %146, label %59, !llvm.loop !534

84:                                               ; preds = %71, %84
  %85 = phi ptr [ %94, %84 ], [ %74, %71 ]
  %86 = phi i32 [ %91, %84 ], [ %61, %71 ]
  %87 = phi i32 [ %92, %84 ], [ %62, %71 ]
  %88 = call zeroext i8 @uvedit_uv_select_test(ptr noundef %10, ptr noundef nonnull %85, i32 noundef %20) #18
  %89 = icmp ne i8 %88, 0
  %90 = zext i1 %89 to i32
  %91 = add nsw i32 %86, %90
  %92 = add nsw i32 %87, %58
  %93 = load ptr, ptr %57, align 8, !tbaa !413
  %94 = call ptr %93(ptr noundef nonnull %6) #18
  %95 = icmp eq ptr %94, null
  br i1 %95, label %78, label %84, !llvm.loop !535

96:                                               ; preds = %54, %140
  %97 = phi ptr [ %144, %140 ], [ %52, %54 ]
  %98 = phi i32 [ %142, %140 ], [ 0, %54 ]
  %99 = phi i32 [ %141, %140 ], [ 0, %54 ]
  %100 = load ptr, ptr %14, align 8, !tbaa !253
  %101 = getelementptr inbounds %struct.BMesh, ptr %100, i64 0, i32 27
  %102 = load ptr, ptr %97, align 8, !tbaa !532
  %103 = call ptr @CustomData_bmesh_get(ptr noundef nonnull %101, ptr noundef %102, i32 noundef 15) #18
  %104 = call zeroext i8 @uvedit_face_visible_test(ptr noundef %10, ptr noundef %8, ptr noundef nonnull %97, ptr noundef %103) #18
  %105 = icmp eq i8 %104, 0
  %106 = getelementptr inbounds %struct.BMHeader, ptr %97, i64 0, i32 3
  %107 = load i8, ptr %106, align 1, !tbaa !255
  br i1 %105, label %108, label %110

108:                                              ; preds = %96
  %109 = and i8 %107, -17
  store i8 %109, ptr %106, align 1, !tbaa !255
  br label %140

110:                                              ; preds = %96
  %111 = or i8 %107, 16
  store i8 %111, ptr %106, align 1, !tbaa !255
  store i8 11, ptr %55, align 4, !tbaa !410
  store ptr @bmiter__loop_of_face_begin, ptr %56, align 8, !tbaa !412
  store ptr @bmiter__loop_of_face_step, ptr %57, align 8, !tbaa !413
  store ptr %97, ptr %6, align 8, !tbaa !51
  call void @bmiter__loop_of_face_begin(ptr noundef nonnull %6) #18
  %112 = load ptr, ptr %57, align 8, !tbaa !413
  %113 = call ptr %112(ptr noundef nonnull %6) #18
  %114 = icmp eq ptr %113, null
  br i1 %114, label %140, label %115

115:                                              ; preds = %110, %134
  %116 = phi ptr [ %138, %134 ], [ %113, %110 ]
  %117 = phi i32 [ %135, %134 ], [ %98, %110 ]
  %118 = phi i32 [ %136, %134 ], [ %99, %110 ]
  %119 = call zeroext i8 @uvedit_uv_select_test(ptr noundef %10, ptr noundef nonnull %116, i32 noundef %20) #18
  %120 = icmp eq i8 %119, 0
  br i1 %120, label %134, label %121

121:                                              ; preds = %115
  %122 = add nsw i32 %117, 1
  %123 = call ptr @BM_uv_element_get(ptr noundef %44, ptr noundef nonnull %97, ptr noundef nonnull %116) #18
  %124 = getelementptr inbounds %struct.UvElement, ptr %123, i64 0, i32 5
  %125 = load i16, ptr %124, align 4, !tbaa !536
  %126 = zext i16 %125 to i32
  %127 = and i32 %126, 31
  %128 = shl nuw i32 1, %127
  %129 = lshr i32 %126, 5
  %130 = zext i32 %129 to i64
  %131 = getelementptr inbounds i32, ptr %43, i64 %130
  %132 = load i32, ptr %131, align 4, !tbaa !27
  %133 = or i32 %128, %132
  store i32 %133, ptr %131, align 4, !tbaa !27
  br label %134

134:                                              ; preds = %121, %115
  %135 = phi i32 [ %122, %121 ], [ %117, %115 ]
  %136 = add nsw i32 %118, %58
  %137 = load ptr, ptr %57, align 8, !tbaa !413
  %138 = call ptr %137(ptr noundef nonnull %6) #18
  %139 = icmp eq ptr %138, null
  br i1 %139, label %140, label %115, !llvm.loop !535

140:                                              ; preds = %134, %110, %108
  %141 = phi i32 [ %99, %108 ], [ %99, %110 ], [ %136, %134 ]
  %142 = phi i32 [ %98, %108 ], [ %98, %110 ], [ %135, %134 ]
  %143 = load ptr, ptr %48, align 8, !tbaa !413
  %144 = call ptr %143(ptr noundef nonnull %5) #18
  %145 = icmp eq ptr %144, null
  br i1 %145, label %146, label %96, !llvm.loop !534

146:                                              ; preds = %140, %78
  %147 = phi i32 [ %79, %78 ], [ %141, %140 ]
  %148 = phi i32 [ %80, %78 ], [ %142, %140 ]
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %150, label %153

150:                                              ; preds = %42, %146
  br i1 %26, label %291, label %151

151:                                              ; preds = %150
  %152 = load ptr, ptr @MEM_freeN, align 8, !tbaa !33
  call void %152(ptr noundef %43) #18
  br label %291

153:                                              ; preds = %146
  %154 = and i32 %16, 2048
  %155 = icmp eq i32 %154, 0
  %156 = select i1 %155, i32 %148, i32 %147
  %157 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 9
  store i32 %156, ptr %157, align 8, !tbaa !5
  %158 = load ptr, ptr @MEM_callocN, align 8, !tbaa !33
  %159 = sext i32 %156 to i64
  %160 = mul nsw i64 %159, 224
  %161 = call ptr %158(i64 noundef %160, ptr noundef nonnull @.str.22) #18
  %162 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 10
  store ptr %161, ptr %162, align 8, !tbaa !19
  %163 = load ptr, ptr @MEM_callocN, align 8, !tbaa !33
  %164 = load i32, ptr %157, align 8, !tbaa !5
  %165 = sext i32 %164 to i64
  %166 = mul nsw i64 %165, 56
  %167 = call ptr %163(i64 noundef %166, ptr noundef nonnull @.str.23) #18
  %168 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 12
  store ptr %167, ptr %168, align 8, !tbaa !143
  %169 = getelementptr inbounds %struct.SpaceImage, ptr %7, i64 0, i32 4
  %170 = load i32, ptr %169, align 4, !tbaa !172
  %171 = and i32 %170, 4
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %176, label %173

173:                                              ; preds = %153
  %174 = load i32, ptr %15, align 4, !tbaa !24
  %175 = or i32 %174, 65536
  store i32 %175, ptr %15, align 4, !tbaa !24
  br label %176

176:                                              ; preds = %173, %153
  %177 = load ptr, ptr %162, align 8, !tbaa !19
  %178 = load ptr, ptr %14, align 8, !tbaa !253
  store i8 3, ptr %46, align 4, !tbaa !410
  store ptr @bmiter__elem_of_mesh_begin, ptr %47, align 8, !tbaa !412
  store ptr @bmiter__elem_of_mesh_step, ptr %48, align 8, !tbaa !413
  %179 = getelementptr inbounds %struct.BMesh, ptr %178, i64 0, i32 12
  %180 = load ptr, ptr %179, align 8, !tbaa !531
  store ptr %180, ptr %5, align 8, !tbaa !51
  call void @bmiter__elem_of_mesh_begin(ptr noundef nonnull %5) #18
  %181 = load ptr, ptr %48, align 8, !tbaa !413
  %182 = call ptr %181(ptr noundef nonnull %5) #18
  %183 = icmp eq ptr %182, null
  br i1 %183, label %278, label %184

184:                                              ; preds = %176
  %185 = getelementptr inbounds %struct.BMIter, ptr %6, i64 0, i32 4
  %186 = getelementptr inbounds %struct.BMIter, ptr %6, i64 0, i32 1
  %187 = getelementptr inbounds %struct.BMIter, ptr %6, i64 0, i32 2
  %188 = sext i32 %20 to i64
  br label %189

189:                                              ; preds = %184, %271
  %190 = phi ptr [ %177, %184 ], [ %274, %271 ]
  %191 = phi ptr [ %167, %184 ], [ %273, %271 ]
  %192 = phi ptr [ %182, %184 ], [ %276, %271 ]
  %193 = phi i32 [ 0, %184 ], [ %272, %271 ]
  %194 = getelementptr i8, ptr %192, i64 13
  %195 = load i8, ptr %194, align 1, !tbaa !255
  %196 = and i8 %195, 16
  %197 = icmp eq i8 %196, 0
  br i1 %197, label %271, label %198

198:                                              ; preds = %189
  store i8 11, ptr %185, align 4, !tbaa !410
  store ptr @bmiter__loop_of_face_begin, ptr %186, align 8, !tbaa !412
  store ptr @bmiter__loop_of_face_step, ptr %187, align 8, !tbaa !413
  store ptr %192, ptr %6, align 8, !tbaa !51
  call void @bmiter__loop_of_face_begin(ptr noundef nonnull %6) #18
  %199 = load ptr, ptr %187, align 8, !tbaa !413
  %200 = call ptr %199(ptr noundef nonnull %6) #18
  %201 = icmp eq ptr %200, null
  br i1 %201, label %271, label %202

202:                                              ; preds = %198, %264
  %203 = phi ptr [ %267, %264 ], [ %190, %198 ]
  %204 = phi ptr [ %266, %264 ], [ %191, %198 ]
  %205 = phi ptr [ %269, %264 ], [ %200, %198 ]
  %206 = phi i32 [ %265, %264 ], [ %193, %198 ]
  br i1 %155, label %207, label %210

207:                                              ; preds = %202
  %208 = call zeroext i8 @uvedit_uv_select_test(ptr noundef %10, ptr noundef nonnull %205, i32 noundef %20) #18
  %209 = icmp eq i8 %208, 0
  br i1 %209, label %264, label %210

210:                                              ; preds = %207, %202
  br i1 %26, label %225, label %211

211:                                              ; preds = %210
  %212 = call ptr @BM_uv_element_get(ptr noundef %44, ptr noundef nonnull %192, ptr noundef nonnull %205) #18
  %213 = getelementptr inbounds %struct.UvElement, ptr %212, i64 0, i32 5
  %214 = load i16, ptr %213, align 4, !tbaa !536
  %215 = zext i16 %214 to i32
  %216 = lshr i32 %215, 5
  %217 = zext i32 %216 to i64
  %218 = getelementptr inbounds i32, ptr %43, i64 %217
  %219 = load i32, ptr %218, align 4, !tbaa !27
  %220 = and i32 %215, 31
  %221 = shl nuw i32 1, %220
  %222 = and i32 %221, %219
  %223 = icmp eq i32 %222, 0
  %224 = add nsw i32 %206, 1
  br i1 %223, label %264, label %225

225:                                              ; preds = %211, %210
  %226 = load ptr, ptr %205, align 8, !tbaa !538
  %227 = getelementptr inbounds i8, ptr %226, i64 %188
  %228 = getelementptr inbounds %struct.TransData, ptr %203, i64 1
  %229 = getelementptr inbounds %struct.TransData2D, ptr %204, i64 1
  %230 = call zeroext i8 @uvedit_uv_select_test(ptr noundef %10, ptr noundef nonnull %205, i32 noundef %20) #18
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #18
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #18
  call void @ED_space_image_get_uv_aspect(ptr noundef %7, ptr noundef nonnull %3, ptr noundef nonnull %4) #18
  %231 = load float, ptr %227, align 4, !tbaa !82
  %232 = load float, ptr %3, align 4, !tbaa !82
  %233 = fmul fast float %232, %231
  store float %233, ptr %204, align 8, !tbaa !82
  %234 = getelementptr inbounds float, ptr %227, i64 1
  %235 = load float, ptr %234, align 4, !tbaa !82
  %236 = load float, ptr %4, align 4, !tbaa !82
  %237 = fmul fast float %236, %235
  %238 = getelementptr inbounds [3 x float], ptr %204, i64 0, i64 1
  store float %237, ptr %238, align 4, !tbaa !82
  %239 = getelementptr inbounds [3 x float], ptr %204, i64 0, i64 2
  store float 0.000000e+00, ptr %239, align 8, !tbaa !82
  %240 = getelementptr inbounds %struct.TransData2D, ptr %204, i64 0, i32 1
  store ptr %227, ptr %240, align 8, !tbaa !178
  %241 = getelementptr inbounds %struct.TransData, ptr %203, i64 0, i32 16
  store i32 0, ptr %241, align 8, !tbaa !20
  %242 = getelementptr inbounds %struct.TransData, ptr %203, i64 0, i32 3
  store ptr %204, ptr %242, align 8, !tbaa !182
  %243 = getelementptr inbounds %struct.TransData, ptr %203, i64 0, i32 7
  store float %233, ptr %243, align 4, !tbaa !82
  %244 = load float, ptr %238, align 4, !tbaa !82
  %245 = getelementptr inbounds %struct.TransData, ptr %203, i64 0, i32 7, i64 1
  store float %244, ptr %245, align 4, !tbaa !82
  %246 = load float, ptr %239, align 4, !tbaa !82
  %247 = getelementptr inbounds %struct.TransData, ptr %203, i64 0, i32 7, i64 2
  store float %246, ptr %247, align 4, !tbaa !82
  %248 = getelementptr inbounds %struct.TransData, ptr %203, i64 0, i32 4
  %249 = load float, ptr %204, align 4, !tbaa !82
  store float %249, ptr %248, align 4, !tbaa !82
  %250 = load float, ptr %238, align 4, !tbaa !82
  %251 = getelementptr inbounds %struct.TransData, ptr %203, i64 0, i32 4, i64 1
  store float %250, ptr %251, align 4, !tbaa !82
  %252 = load float, ptr %239, align 4, !tbaa !82
  %253 = getelementptr inbounds %struct.TransData, ptr %203, i64 0, i32 4, i64 2
  store float %252, ptr %253, align 4, !tbaa !82
  %254 = getelementptr inbounds %struct.TransData, ptr %203, i64 0, i32 10
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(36) %254, i8 0, i64 32, i1 false)
  %255 = getelementptr inbounds %struct.TransData, ptr %203, i64 0, i32 10, i64 2, i64 2
  store float 1.000000e+00, ptr %255, align 8, !tbaa !82
  %256 = getelementptr inbounds %struct.TransData, ptr %203, i64 0, i32 13
  store ptr null, ptr %256, align 8, !tbaa !334
  %257 = getelementptr inbounds %struct.TransData, ptr %203, i64 0, i32 5
  store ptr null, ptr %257, align 8, !tbaa !423
  %258 = icmp eq i8 %230, 0
  br i1 %258, label %260, label %259

259:                                              ; preds = %225
  store i32 1, ptr %241, align 8, !tbaa !20
  br label %260

260:                                              ; preds = %225, %259
  %261 = phi float [ 0.000000e+00, %259 ], [ 0x47EFFFFFE0000000, %225 ]
  store float %261, ptr %203, align 8, !tbaa !25
  %262 = getelementptr inbounds %struct.TransData, ptr %203, i64 0, i32 8
  call void @unit_m3(ptr noundef nonnull %262) #18
  %263 = getelementptr inbounds %struct.TransData, ptr %203, i64 0, i32 9
  call void @unit_m3(ptr noundef nonnull %263) #18
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #18
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #18
  br label %264

264:                                              ; preds = %211, %207, %260
  %265 = phi i32 [ %224, %211 ], [ %206, %260 ], [ %206, %207 ]
  %266 = phi ptr [ %204, %211 ], [ %229, %260 ], [ %204, %207 ]
  %267 = phi ptr [ %203, %211 ], [ %228, %260 ], [ %203, %207 ]
  %268 = load ptr, ptr %187, align 8, !tbaa !413
  %269 = call ptr %268(ptr noundef nonnull %6) #18
  %270 = icmp eq ptr %269, null
  br i1 %270, label %271, label %202, !llvm.loop !540

271:                                              ; preds = %264, %198, %189
  %272 = phi i32 [ %193, %189 ], [ %193, %198 ], [ %265, %264 ]
  %273 = phi ptr [ %191, %189 ], [ %191, %198 ], [ %266, %264 ]
  %274 = phi ptr [ %190, %189 ], [ %190, %198 ], [ %267, %264 ]
  %275 = load ptr, ptr %48, align 8, !tbaa !413
  %276 = call ptr %275(ptr noundef nonnull %5) #18
  %277 = icmp eq ptr %276, null
  br i1 %277, label %278, label %189, !llvm.loop !541

278:                                              ; preds = %271, %176
  %279 = phi i32 [ 0, %176 ], [ %272, %271 ]
  br i1 %26, label %284, label %280

280:                                              ; preds = %278
  %281 = load i32, ptr %157, align 8, !tbaa !5
  %282 = sub nsw i32 %281, %279
  store i32 %282, ptr %157, align 8, !tbaa !5
  call void @BM_uv_element_map_free(ptr noundef %44) #18
  %283 = load ptr, ptr @MEM_freeN, align 8, !tbaa !33
  call void %283(ptr noundef %43) #18
  br label %284

284:                                              ; preds = %280, %278
  %285 = load i32, ptr %169, align 4, !tbaa !172
  %286 = and i32 %285, 2048
  %287 = icmp eq i32 %286, 0
  br i1 %287, label %291, label %288

288:                                              ; preds = %284
  %289 = load ptr, ptr %9, align 8, !tbaa !89
  %290 = load ptr, ptr %12, align 8, !tbaa !69
  call void @ED_uvedit_live_unwrap_begin(ptr noundef %289, ptr noundef %290) #18
  br label %291

291:                                              ; preds = %284, %288, %150, %151, %2
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %6) #18
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %5) #18
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @createTransTrackingData(ptr noundef %0, ptr nocapture noundef %1) unnamed_addr #6 {
  %3 = alloca float, align 4
  %4 = alloca float, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = tail call ptr @CTX_wm_region(ptr noundef %0) #18
  %10 = tail call ptr @CTX_wm_space_clip(ptr noundef %0) #18
  %11 = tail call ptr @ED_space_clip_get_clip(ptr noundef %10) #18
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #18
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #18
  %12 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 9
  store i32 0, ptr %12, align 8, !tbaa !5
  %13 = icmp eq ptr %11, null
  br i1 %13, label %1055, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %struct.SpaceClip, ptr %10, i64 0, i32 9
  call void @BKE_movieclip_get_size(ptr noundef nonnull %11, ptr noundef nonnull %15, ptr noundef nonnull %7, ptr noundef nonnull %8) #18
  %16 = load i32, ptr %7, align 4, !tbaa !27
  %17 = icmp eq i32 %16, 0
  %18 = load i32, ptr %8, align 4
  %19 = icmp eq i32 %18, 0
  %20 = select i1 %17, i1 true, i1 %19
  br i1 %20, label %1055, label %21

21:                                               ; preds = %14
  %22 = getelementptr inbounds %struct.ARegion, ptr %9, i64 0, i32 8
  %23 = load i16, ptr %22, align 2, !tbaa !492
  %24 = icmp eq i16 %23, 7
  %25 = call ptr @CTX_wm_space_clip(ptr noundef %0) #18
  %26 = call ptr @ED_space_clip_get_clip(ptr noundef %25) #18
  %27 = getelementptr inbounds %struct.MovieClip, ptr %26, i64 0, i32 11
  %28 = call ptr @BKE_tracking_get_active_tracks(ptr noundef nonnull %27) #18
  br i1 %24, label %29, label %316

29:                                               ; preds = %21
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #18
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #18
  %30 = getelementptr inbounds %struct.SpaceClip, ptr %25, i64 0, i32 9
  call void @BKE_movieclip_get_size(ptr noundef %26, ptr noundef nonnull %30, ptr noundef nonnull %5, ptr noundef nonnull %6) #18
  store i32 0, ptr %12, align 8, !tbaa !5
  %31 = getelementptr inbounds %struct.SpaceClip, ptr %25, i64 0, i32 12
  %32 = load i32, ptr %31, align 8, !tbaa !283
  %33 = and i32 %32, 32768
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %315, label %35

35:                                               ; preds = %29
  %36 = load ptr, ptr %28, align 8, !tbaa !33
  %37 = icmp eq ptr %36, null
  br i1 %37, label %315, label %38

38:                                               ; preds = %35
  %39 = and i32 %32, 1
  %40 = icmp eq i32 %39, 0
  %41 = and i32 %32, 2
  %42 = icmp eq i32 %41, 0
  br label %43

43:                                               ; preds = %106, %38
  %44 = phi i32 [ 0, %38 ], [ %107, %106 ]
  %45 = phi ptr [ %36, %38 ], [ %108, %106 ]
  %46 = getelementptr inbounds %struct.MovieTrackingTrack, ptr %45, i64 0, i32 13
  %47 = load i32, ptr %46, align 8, !tbaa !281
  %48 = and i32 %47, 32
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %106

50:                                               ; preds = %43
  %51 = and i32 %47, 1
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %68

53:                                               ; preds = %50
  br i1 %40, label %59, label %54

54:                                               ; preds = %53
  %55 = getelementptr inbounds %struct.MovieTrackingTrack, ptr %45, i64 0, i32 14
  %56 = load i32, ptr %55, align 4, !tbaa !288
  %57 = and i32 %56, 1
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %68

59:                                               ; preds = %54, %53
  br i1 %42, label %106, label %60

60:                                               ; preds = %59
  %61 = getelementptr inbounds %struct.MovieTrackingTrack, ptr %45, i64 0, i32 15
  %62 = load i32, ptr %61, align 8, !tbaa !289
  %63 = and i32 %62, 1
  %64 = icmp ne i32 %63, 0
  %65 = and i32 %47, 64
  %66 = icmp eq i32 %65, 0
  %67 = and i1 %66, %64
  br i1 %67, label %71, label %106

68:                                               ; preds = %54, %50
  %69 = and i32 %47, 64
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %106

71:                                               ; preds = %68, %60
  %72 = getelementptr inbounds %struct.MovieTrackingTrack, ptr %45, i64 0, i32 8
  %73 = load i32, ptr %72, align 8, !tbaa !362
  %74 = icmp sgt i32 %73, 1
  br i1 %74, label %75, label %106

75:                                               ; preds = %71
  %76 = getelementptr inbounds %struct.MovieTrackingTrack, ptr %45, i64 0, i32 10
  %77 = load ptr, ptr %76, align 8, !tbaa !363
  %78 = zext i32 %73 to i64
  br label %79

79:                                               ; preds = %102, %75
  %80 = phi i32 [ %44, %75 ], [ %103, %102 ]
  %81 = phi i64 [ 1, %75 ], [ %104, %102 ]
  %82 = getelementptr inbounds %struct.MovieTrackingMarker, ptr %77, i64 %81, i32 5
  %83 = load i32, ptr %82, align 4, !tbaa !361
  %84 = and i32 %83, 1
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %102

86:                                               ; preds = %79
  %87 = add nsw i64 %81, -1
  %88 = getelementptr inbounds %struct.MovieTrackingMarker, ptr %77, i64 %87, i32 5
  %89 = load i32, ptr %88, align 4, !tbaa !361
  %90 = and i32 %89, 1
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %102

92:                                               ; preds = %86
  %93 = lshr i32 %83, 2
  %94 = and i32 %93, 1
  %95 = add nsw i32 %94, %80
  %96 = lshr i32 %83, 3
  %97 = and i32 %96, 1
  %98 = add nsw i32 %95, %97
  %99 = and i32 %83, 12
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %102, label %101

101:                                              ; preds = %92
  store i32 %98, ptr %12, align 8, !tbaa !5
  br label %102

102:                                              ; preds = %101, %92, %86, %79
  %103 = phi i32 [ %80, %79 ], [ %80, %86 ], [ %98, %92 ], [ %98, %101 ]
  %104 = add nuw nsw i64 %81, 1
  %105 = icmp eq i64 %104, %78
  br i1 %105, label %106, label %79, !llvm.loop !542

106:                                              ; preds = %102, %71, %68, %60, %59, %43
  %107 = phi i32 [ %44, %71 ], [ %44, %68 ], [ %44, %60 ], [ %44, %59 ], [ %44, %43 ], [ %103, %102 ]
  %108 = load ptr, ptr %45, align 8, !tbaa !33
  %109 = icmp eq ptr %108, null
  br i1 %109, label %110, label %43, !llvm.loop !543

110:                                              ; preds = %106
  %111 = icmp eq i32 %107, 0
  br i1 %111, label %315, label %112

112:                                              ; preds = %110
  %113 = load ptr, ptr @MEM_callocN, align 8, !tbaa !33
  %114 = sext i32 %107 to i64
  %115 = mul nsw i64 %114, 224
  %116 = call ptr %113(i64 noundef %115, ptr noundef nonnull @.str.40) #18
  %117 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 10
  store ptr %116, ptr %117, align 8, !tbaa !19
  %118 = load ptr, ptr @MEM_callocN, align 8, !tbaa !33
  %119 = load i32, ptr %12, align 8, !tbaa !5
  %120 = sext i32 %119 to i64
  %121 = mul nsw i64 %120, 56
  %122 = call ptr %118(i64 noundef %121, ptr noundef nonnull @.str.41) #18
  %123 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 12
  store ptr %122, ptr %123, align 8, !tbaa !143
  %124 = load ptr, ptr @MEM_callocN, align 8, !tbaa !33
  %125 = load i32, ptr %12, align 8, !tbaa !5
  %126 = sext i32 %125 to i64
  %127 = mul nsw i64 %126, 112
  %128 = call ptr %124(i64 noundef %127, ptr noundef nonnull @.str.42) #18
  %129 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 40
  store ptr %128, ptr %129, align 8, !tbaa !66
  %130 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 41
  store ptr @transDataTrackingFree, ptr %130, align 8, !tbaa !470
  %131 = load ptr, ptr %28, align 8, !tbaa !33
  %132 = icmp eq ptr %131, null
  br i1 %132, label %315, label %133

133:                                              ; preds = %112, %309
  %134 = phi ptr [ %313, %309 ], [ %131, %112 ]
  %135 = phi ptr [ %312, %309 ], [ %128, %112 ]
  %136 = phi ptr [ %311, %309 ], [ %116, %112 ]
  %137 = phi ptr [ %310, %309 ], [ %122, %112 ]
  %138 = getelementptr inbounds %struct.MovieTrackingTrack, ptr %134, i64 0, i32 13
  %139 = load i32, ptr %138, align 8, !tbaa !281
  %140 = and i32 %139, 32
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %309

142:                                              ; preds = %133
  %143 = and i32 %139, 1
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %145, label %165

145:                                              ; preds = %142
  %146 = load i32, ptr %31, align 8, !tbaa !283
  %147 = and i32 %146, 1
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %154, label %149

149:                                              ; preds = %145
  %150 = getelementptr inbounds %struct.MovieTrackingTrack, ptr %134, i64 0, i32 14
  %151 = load i32, ptr %150, align 4, !tbaa !288
  %152 = and i32 %151, 1
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %154, label %165

154:                                              ; preds = %149, %145
  %155 = and i32 %146, 2
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %309, label %157

157:                                              ; preds = %154
  %158 = getelementptr inbounds %struct.MovieTrackingTrack, ptr %134, i64 0, i32 15
  %159 = load i32, ptr %158, align 8, !tbaa !289
  %160 = and i32 %159, 1
  %161 = icmp ne i32 %160, 0
  %162 = and i32 %139, 64
  %163 = icmp eq i32 %162, 0
  %164 = and i1 %163, %161
  br i1 %164, label %168, label %309

165:                                              ; preds = %149, %142
  %166 = and i32 %139, 64
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %168, label %309

168:                                              ; preds = %165, %157
  %169 = getelementptr inbounds %struct.MovieTrackingTrack, ptr %134, i64 0, i32 8
  %170 = load i32, ptr %169, align 8, !tbaa !362
  %171 = icmp sgt i32 %170, 1
  br i1 %171, label %172, label %309

172:                                              ; preds = %168
  %173 = getelementptr inbounds %struct.MovieTrackingTrack, ptr %134, i64 0, i32 10
  br label %174

174:                                              ; preds = %301, %172
  %175 = phi i64 [ 1, %172 ], [ %305, %301 ]
  %176 = phi ptr [ %135, %172 ], [ %304, %301 ]
  %177 = phi ptr [ %136, %172 ], [ %303, %301 ]
  %178 = phi ptr [ %137, %172 ], [ %302, %301 ]
  %179 = load ptr, ptr %173, align 8, !tbaa !363
  %180 = getelementptr inbounds %struct.MovieTrackingMarker, ptr %179, i64 %175
  %181 = add nsw i64 %175, -1
  %182 = getelementptr inbounds %struct.MovieTrackingMarker, ptr %179, i64 %181
  %183 = getelementptr inbounds %struct.MovieTrackingMarker, ptr %179, i64 %175, i32 5
  %184 = load i32, ptr %183, align 4, !tbaa !361
  %185 = and i32 %184, 1
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %187, label %301

187:                                              ; preds = %174
  %188 = getelementptr inbounds %struct.MovieTrackingMarker, ptr %179, i64 %181, i32 5
  %189 = load i32, ptr %188, align 4, !tbaa !361
  %190 = and i32 %189, 1
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %192, label %301

192:                                              ; preds = %187
  %193 = and i32 %184, 4
  %194 = icmp eq i32 %193, 0
  br i1 %194, label %243, label %195

195:                                              ; preds = %192
  %196 = load i32, ptr %5, align 4, !tbaa !27
  %197 = sitofp i32 %196 to float
  %198 = getelementptr inbounds %struct.MovieTrackingMarker, ptr %179, i64 %175, i32 4
  %199 = load i32, ptr %198, align 4, !tbaa !544
  %200 = getelementptr inbounds %struct.MovieTrackingMarker, ptr %179, i64 %181, i32 4
  %201 = load i32, ptr %200, align 4, !tbaa !544
  %202 = sub nsw i32 %199, %201
  %203 = sitofp i32 %202 to float
  %204 = getelementptr inbounds %struct.TransDataTracking, ptr %176, i64 0, i32 1
  store i32 %184, ptr %204, align 4, !tbaa !360
  %205 = and i32 %184, -3
  store i32 %205, ptr %183, align 4, !tbaa !361
  store i32 1, ptr %176, align 8, !tbaa !357
  %206 = getelementptr inbounds %struct.TransDataTracking, ptr %176, i64 0, i32 13
  store i16 0, ptr %206, align 4, !tbaa !387
  %207 = fdiv fast float %203, %197
  %208 = getelementptr inbounds %struct.TransDataTracking, ptr %176, i64 0, i32 12
  store float %207, ptr %208, align 8, !tbaa !388
  %209 = getelementptr inbounds %struct.TransDataTracking, ptr %176, i64 0, i32 11
  store ptr %182, ptr %209, align 8, !tbaa !386
  %210 = getelementptr inbounds %struct.TransDataTracking, ptr %176, i64 0, i32 14
  store ptr %134, ptr %210, align 8, !tbaa !359
  %211 = sitofp i32 %199 to float
  store float %211, ptr %178, align 8, !tbaa !82
  %212 = load float, ptr %180, align 4, !tbaa !82
  %213 = load float, ptr %182, align 4, !tbaa !82
  %214 = fsub fast float %212, %213
  %215 = fmul fast float %214, %197
  %216 = fdiv fast float %215, %203
  %217 = getelementptr inbounds [3 x float], ptr %178, i64 0, i64 1
  store float %216, ptr %217, align 4, !tbaa !82
  %218 = getelementptr inbounds [3 x float], ptr %178, i64 0, i64 2
  store float 0.000000e+00, ptr %218, align 8, !tbaa !82
  %219 = getelementptr inbounds %struct.TransData2D, ptr %178, i64 0, i32 1
  store ptr %180, ptr %219, align 8, !tbaa !178
  %220 = getelementptr inbounds %struct.TransData, ptr %177, i64 0, i32 16
  %221 = getelementptr inbounds %struct.TransData, ptr %177, i64 0, i32 3
  store ptr %178, ptr %221, align 8, !tbaa !182
  %222 = getelementptr inbounds %struct.TransData, ptr %177, i64 0, i32 7
  store float %211, ptr %222, align 4, !tbaa !82
  %223 = load float, ptr %217, align 4, !tbaa !82
  %224 = getelementptr inbounds %struct.TransData, ptr %177, i64 0, i32 7, i64 1
  store float %223, ptr %224, align 4, !tbaa !82
  %225 = load float, ptr %218, align 4, !tbaa !82
  %226 = getelementptr inbounds %struct.TransData, ptr %177, i64 0, i32 7, i64 2
  store float %225, ptr %226, align 4, !tbaa !82
  %227 = getelementptr inbounds %struct.TransData, ptr %177, i64 0, i32 4
  %228 = load float, ptr %178, align 4, !tbaa !82
  store float %228, ptr %227, align 4, !tbaa !82
  %229 = load float, ptr %217, align 4, !tbaa !82
  %230 = getelementptr inbounds %struct.TransData, ptr %177, i64 0, i32 4, i64 1
  store float %229, ptr %230, align 4, !tbaa !82
  %231 = load float, ptr %218, align 4, !tbaa !82
  %232 = getelementptr inbounds %struct.TransData, ptr %177, i64 0, i32 4, i64 2
  store float %231, ptr %232, align 4, !tbaa !82
  %233 = getelementptr inbounds %struct.TransData, ptr %177, i64 0, i32 10
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(36) %233, i8 0, i64 32, i1 false)
  %234 = getelementptr inbounds %struct.TransData, ptr %177, i64 0, i32 10, i64 2, i64 2
  store float 1.000000e+00, ptr %234, align 8, !tbaa !82
  %235 = getelementptr inbounds %struct.TransData, ptr %177, i64 0, i32 13
  store ptr null, ptr %235, align 8, !tbaa !334
  %236 = getelementptr inbounds %struct.TransData, ptr %177, i64 0, i32 5
  store ptr null, ptr %236, align 8, !tbaa !423
  store i32 1, ptr %220, align 8, !tbaa !20
  store float 0.000000e+00, ptr %177, align 8, !tbaa !25
  %237 = getelementptr inbounds %struct.TransData, ptr %177, i64 0, i32 8
  call void @unit_m3(ptr noundef nonnull %237) #18
  %238 = getelementptr inbounds %struct.TransData, ptr %177, i64 0, i32 9
  call void @unit_m3(ptr noundef nonnull %238) #18
  %239 = getelementptr inbounds %struct.TransData, ptr %177, i64 1
  %240 = getelementptr inbounds %struct.TransData2D, ptr %178, i64 1
  %241 = getelementptr inbounds %struct.TransDataTracking, ptr %176, i64 1
  %242 = load i32, ptr %183, align 4, !tbaa !361
  br label %243

243:                                              ; preds = %195, %192
  %244 = phi i32 [ %242, %195 ], [ %184, %192 ]
  %245 = phi ptr [ %240, %195 ], [ %178, %192 ]
  %246 = phi ptr [ %239, %195 ], [ %177, %192 ]
  %247 = phi ptr [ %241, %195 ], [ %176, %192 ]
  %248 = and i32 %244, 8
  %249 = icmp eq i32 %248, 0
  br i1 %249, label %301, label %250

250:                                              ; preds = %243
  %251 = load ptr, ptr %173, align 8, !tbaa !363
  %252 = getelementptr inbounds %struct.MovieTrackingMarker, ptr %251, i64 %181
  %253 = load i32, ptr %6, align 4, !tbaa !27
  %254 = sitofp i32 %253 to float
  %255 = getelementptr inbounds %struct.MovieTrackingMarker, ptr %179, i64 %175, i32 4
  %256 = load i32, ptr %255, align 4, !tbaa !544
  %257 = getelementptr inbounds %struct.MovieTrackingMarker, ptr %251, i64 %181, i32 4
  %258 = load i32, ptr %257, align 4, !tbaa !544
  %259 = sub nsw i32 %256, %258
  %260 = sitofp i32 %259 to float
  %261 = getelementptr inbounds %struct.TransDataTracking, ptr %247, i64 0, i32 1
  store i32 %244, ptr %261, align 4, !tbaa !360
  %262 = and i32 %244, -3
  store i32 %262, ptr %183, align 4, !tbaa !361
  store i32 1, ptr %247, align 8, !tbaa !357
  %263 = getelementptr inbounds %struct.TransDataTracking, ptr %247, i64 0, i32 13
  store i16 1, ptr %263, align 4, !tbaa !387
  %264 = fdiv fast float %260, %254
  %265 = getelementptr inbounds %struct.TransDataTracking, ptr %247, i64 0, i32 12
  store float %264, ptr %265, align 8, !tbaa !388
  %266 = getelementptr inbounds %struct.TransDataTracking, ptr %247, i64 0, i32 11
  store ptr %252, ptr %266, align 8, !tbaa !386
  %267 = getelementptr inbounds %struct.TransDataTracking, ptr %247, i64 0, i32 14
  store ptr %134, ptr %267, align 8, !tbaa !359
  %268 = sitofp i32 %256 to float
  store float %268, ptr %245, align 8, !tbaa !82
  %269 = getelementptr inbounds [2 x float], ptr %180, i64 0, i64 1
  %270 = load float, ptr %269, align 4, !tbaa !82
  %271 = getelementptr inbounds [2 x float], ptr %252, i64 0, i64 1
  %272 = load float, ptr %271, align 4, !tbaa !82
  %273 = fsub fast float %270, %272
  %274 = fmul fast float %273, %254
  %275 = fdiv fast float %274, %260
  %276 = getelementptr inbounds [3 x float], ptr %245, i64 0, i64 1
  store float %275, ptr %276, align 4, !tbaa !82
  %277 = getelementptr inbounds [3 x float], ptr %245, i64 0, i64 2
  store float 0.000000e+00, ptr %277, align 8, !tbaa !82
  %278 = getelementptr inbounds %struct.TransData2D, ptr %245, i64 0, i32 1
  store ptr %180, ptr %278, align 8, !tbaa !178
  %279 = getelementptr inbounds %struct.TransData, ptr %246, i64 0, i32 16
  %280 = getelementptr inbounds %struct.TransData, ptr %246, i64 0, i32 3
  store ptr %245, ptr %280, align 8, !tbaa !182
  %281 = getelementptr inbounds %struct.TransData, ptr %246, i64 0, i32 7
  store float %268, ptr %281, align 4, !tbaa !82
  %282 = load float, ptr %276, align 4, !tbaa !82
  %283 = getelementptr inbounds %struct.TransData, ptr %246, i64 0, i32 7, i64 1
  store float %282, ptr %283, align 4, !tbaa !82
  %284 = load float, ptr %277, align 4, !tbaa !82
  %285 = getelementptr inbounds %struct.TransData, ptr %246, i64 0, i32 7, i64 2
  store float %284, ptr %285, align 4, !tbaa !82
  %286 = getelementptr inbounds %struct.TransData, ptr %246, i64 0, i32 4
  %287 = load float, ptr %245, align 4, !tbaa !82
  store float %287, ptr %286, align 4, !tbaa !82
  %288 = load float, ptr %276, align 4, !tbaa !82
  %289 = getelementptr inbounds %struct.TransData, ptr %246, i64 0, i32 4, i64 1
  store float %288, ptr %289, align 4, !tbaa !82
  %290 = load float, ptr %277, align 4, !tbaa !82
  %291 = getelementptr inbounds %struct.TransData, ptr %246, i64 0, i32 4, i64 2
  store float %290, ptr %291, align 4, !tbaa !82
  %292 = getelementptr inbounds %struct.TransData, ptr %246, i64 0, i32 10
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(36) %292, i8 0, i64 32, i1 false)
  %293 = getelementptr inbounds %struct.TransData, ptr %246, i64 0, i32 10, i64 2, i64 2
  store float 1.000000e+00, ptr %293, align 8, !tbaa !82
  %294 = getelementptr inbounds %struct.TransData, ptr %246, i64 0, i32 13
  store ptr null, ptr %294, align 8, !tbaa !334
  %295 = getelementptr inbounds %struct.TransData, ptr %246, i64 0, i32 5
  store ptr null, ptr %295, align 8, !tbaa !423
  store i32 1, ptr %279, align 8, !tbaa !20
  store float 0.000000e+00, ptr %246, align 8, !tbaa !25
  %296 = getelementptr inbounds %struct.TransData, ptr %246, i64 0, i32 8
  call void @unit_m3(ptr noundef nonnull %296) #18
  %297 = getelementptr inbounds %struct.TransData, ptr %246, i64 0, i32 9
  call void @unit_m3(ptr noundef nonnull %297) #18
  %298 = getelementptr inbounds %struct.TransData, ptr %246, i64 1
  %299 = getelementptr inbounds %struct.TransData2D, ptr %245, i64 1
  %300 = getelementptr inbounds %struct.TransDataTracking, ptr %247, i64 1
  br label %301

301:                                              ; preds = %250, %243, %187, %174
  %302 = phi ptr [ %178, %174 ], [ %178, %187 ], [ %299, %250 ], [ %245, %243 ]
  %303 = phi ptr [ %177, %174 ], [ %177, %187 ], [ %298, %250 ], [ %246, %243 ]
  %304 = phi ptr [ %176, %174 ], [ %176, %187 ], [ %300, %250 ], [ %247, %243 ]
  %305 = add nuw nsw i64 %175, 1
  %306 = load i32, ptr %169, align 8, !tbaa !362
  %307 = sext i32 %306 to i64
  %308 = icmp slt i64 %305, %307
  br i1 %308, label %174, label %309, !llvm.loop !545

309:                                              ; preds = %301, %168, %165, %157, %154, %133
  %310 = phi ptr [ %137, %165 ], [ %137, %157 ], [ %137, %154 ], [ %137, %133 ], [ %137, %168 ], [ %302, %301 ]
  %311 = phi ptr [ %136, %165 ], [ %136, %157 ], [ %136, %154 ], [ %136, %133 ], [ %136, %168 ], [ %303, %301 ]
  %312 = phi ptr [ %135, %165 ], [ %135, %157 ], [ %135, %154 ], [ %135, %133 ], [ %135, %168 ], [ %304, %301 ]
  %313 = load ptr, ptr %134, align 8, !tbaa !33
  %314 = icmp eq ptr %313, null
  br i1 %314, label %315, label %133, !llvm.loop !546

315:                                              ; preds = %309, %29, %35, %110, %112
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #18
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #18
  br label %1055

316:                                              ; preds = %21
  %317 = call ptr @BKE_tracking_get_active_plane_tracks(ptr noundef nonnull %27) #18
  %318 = call i32 @ED_space_clip_get_clip_frame_number(ptr noundef %25) #18
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #18
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %4) #18
  store i32 0, ptr %12, align 8, !tbaa !5
  %319 = load ptr, ptr %28, align 8, !tbaa !33
  %320 = icmp eq ptr %319, null
  br i1 %320, label %323, label %321

321:                                              ; preds = %316
  %322 = getelementptr inbounds %struct.SpaceClip, ptr %25, i64 0, i32 12
  br label %327

323:                                              ; preds = %380, %316
  %324 = phi i32 [ 0, %316 ], [ %381, %380 ]
  %325 = load ptr, ptr %317, align 8, !tbaa !33
  %326 = icmp eq ptr %325, null
  br i1 %326, label %397, label %384

327:                                              ; preds = %380, %321
  %328 = phi i32 [ 0, %321 ], [ %381, %380 ]
  %329 = phi ptr [ %319, %321 ], [ %382, %380 ]
  %330 = getelementptr inbounds %struct.MovieTrackingTrack, ptr %329, i64 0, i32 13
  %331 = load i32, ptr %330, align 8, !tbaa !281
  %332 = and i32 %331, 32
  %333 = icmp eq i32 %332, 0
  br i1 %333, label %334, label %380

334:                                              ; preds = %327
  %335 = and i32 %331, 1
  %336 = icmp eq i32 %335, 0
  br i1 %336, label %337, label %360

337:                                              ; preds = %334
  %338 = load i32, ptr %322, align 8, !tbaa !283
  %339 = and i32 %338, 1
  %340 = icmp eq i32 %339, 0
  br i1 %340, label %346, label %341

341:                                              ; preds = %337
  %342 = getelementptr inbounds %struct.MovieTrackingTrack, ptr %329, i64 0, i32 14
  %343 = load i32, ptr %342, align 4, !tbaa !288
  %344 = and i32 %343, 1
  %345 = icmp eq i32 %344, 0
  br i1 %345, label %346, label %357

346:                                              ; preds = %341, %337
  %347 = and i32 %338, 2
  %348 = icmp eq i32 %347, 0
  br i1 %348, label %380, label %349

349:                                              ; preds = %346
  %350 = getelementptr inbounds %struct.MovieTrackingTrack, ptr %329, i64 0, i32 15
  %351 = load i32, ptr %350, align 8, !tbaa !289
  %352 = and i32 %351, 1
  %353 = icmp ne i32 %352, 0
  %354 = and i32 %331, 64
  %355 = icmp eq i32 %354, 0
  %356 = and i1 %355, %353
  br i1 %356, label %363, label %380

357:                                              ; preds = %341
  %358 = and i32 %331, 64
  %359 = icmp eq i32 %358, 0
  br i1 %359, label %363, label %380

360:                                              ; preds = %334
  %361 = and i32 %331, 64
  %362 = icmp eq i32 %361, 0
  br i1 %362, label %363, label %380

363:                                              ; preds = %360, %357, %349
  %364 = phi i32 [ 2, %360 ], [ 1, %349 ], [ 1, %357 ]
  %365 = add nsw i32 %364, %328
  store i32 %365, ptr %12, align 8, !tbaa !5
  %366 = getelementptr inbounds %struct.MovieTrackingTrack, ptr %329, i64 0, i32 14
  %367 = load i32, ptr %366, align 4, !tbaa !288
  %368 = and i32 %367, 1
  %369 = icmp eq i32 %368, 0
  br i1 %369, label %372, label %370

370:                                              ; preds = %363
  %371 = add nsw i32 %365, 4
  store i32 %371, ptr %12, align 8, !tbaa !5
  br label %372

372:                                              ; preds = %370, %363
  %373 = phi i32 [ %371, %370 ], [ %365, %363 ]
  %374 = getelementptr inbounds %struct.MovieTrackingTrack, ptr %329, i64 0, i32 15
  %375 = load i32, ptr %374, align 8, !tbaa !289
  %376 = and i32 %375, 1
  %377 = icmp eq i32 %376, 0
  br i1 %377, label %380, label %378

378:                                              ; preds = %372
  %379 = add nsw i32 %373, 2
  store i32 %379, ptr %12, align 8, !tbaa !5
  br label %380

380:                                              ; preds = %378, %372, %360, %357, %349, %346, %327
  %381 = phi i32 [ %328, %360 ], [ %373, %372 ], [ %379, %378 ], [ %328, %357 ], [ %328, %349 ], [ %328, %346 ], [ %328, %327 ]
  %382 = load ptr, ptr %329, align 8, !tbaa !33
  %383 = icmp eq ptr %382, null
  br i1 %383, label %323, label %327, !llvm.loop !547

384:                                              ; preds = %323, %393
  %385 = phi i32 [ %394, %393 ], [ %324, %323 ]
  %386 = phi ptr [ %395, %393 ], [ %325, %323 ]
  %387 = getelementptr inbounds %struct.MovieTrackingPlaneTrack, ptr %386, i64 0, i32 8
  %388 = load i32, ptr %387, align 4, !tbaa !277
  %389 = and i32 %388, 3
  %390 = icmp eq i32 %389, 1
  br i1 %390, label %391, label %393

391:                                              ; preds = %384
  %392 = add nsw i32 %385, 4
  store i32 %392, ptr %12, align 8, !tbaa !5
  br label %393

393:                                              ; preds = %391, %384
  %394 = phi i32 [ %385, %384 ], [ %392, %391 ]
  %395 = load ptr, ptr %386, align 8, !tbaa !33
  %396 = icmp eq ptr %395, null
  br i1 %396, label %397, label %384, !llvm.loop !548

397:                                              ; preds = %393, %323
  %398 = phi i32 [ %324, %323 ], [ %394, %393 ]
  %399 = icmp eq i32 %398, 0
  br i1 %399, label %1054, label %400

400:                                              ; preds = %397
  call void @ED_space_clip_get_aspect_dimension_aware(ptr noundef %25, ptr noundef nonnull %3, ptr noundef nonnull %4) #18
  %401 = load ptr, ptr @MEM_callocN, align 8, !tbaa !33
  %402 = load i32, ptr %12, align 8, !tbaa !5
  %403 = sext i32 %402 to i64
  %404 = mul nsw i64 %403, 224
  %405 = call ptr %401(i64 noundef %404, ptr noundef nonnull @.str.40) #18
  %406 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 10
  store ptr %405, ptr %406, align 8, !tbaa !19
  %407 = load ptr, ptr @MEM_callocN, align 8, !tbaa !33
  %408 = load i32, ptr %12, align 8, !tbaa !5
  %409 = sext i32 %408 to i64
  %410 = mul nsw i64 %409, 56
  %411 = call ptr %407(i64 noundef %410, ptr noundef nonnull @.str.41) #18
  %412 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 12
  store ptr %411, ptr %412, align 8, !tbaa !143
  %413 = load ptr, ptr @MEM_callocN, align 8, !tbaa !33
  %414 = load i32, ptr %12, align 8, !tbaa !5
  %415 = sext i32 %414 to i64
  %416 = mul nsw i64 %415, 112
  %417 = call ptr %413(i64 noundef %416, ptr noundef nonnull @.str.42) #18
  %418 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 40
  store ptr %417, ptr %418, align 8, !tbaa !66
  %419 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 41
  store ptr @transDataTrackingFree, ptr %419, align 8, !tbaa !470
  %420 = load ptr, ptr %28, align 8, !tbaa !33
  %421 = icmp eq ptr %420, null
  br i1 %421, label %424, label %422

422:                                              ; preds = %400
  %423 = getelementptr inbounds %struct.SpaceClip, ptr %25, i64 0, i32 12
  br label %430

424:                                              ; preds = %898, %400
  %425 = phi ptr [ %411, %400 ], [ %899, %898 ]
  %426 = phi ptr [ %417, %400 ], [ %900, %898 ]
  %427 = phi ptr [ %405, %400 ], [ %901, %898 ]
  %428 = load ptr, ptr %317, align 8, !tbaa !33
  %429 = icmp eq ptr %428, null
  br i1 %429, label %1054, label %904

430:                                              ; preds = %898, %422
  %431 = phi ptr [ %420, %422 ], [ %902, %898 ]
  %432 = phi ptr [ %405, %422 ], [ %901, %898 ]
  %433 = phi ptr [ %417, %422 ], [ %900, %898 ]
  %434 = phi ptr [ %411, %422 ], [ %899, %898 ]
  %435 = getelementptr inbounds %struct.MovieTrackingTrack, ptr %431, i64 0, i32 13
  %436 = load i32, ptr %435, align 8, !tbaa !281
  %437 = and i32 %436, 32
  %438 = icmp eq i32 %437, 0
  br i1 %438, label %439, label %898

439:                                              ; preds = %430
  %440 = and i32 %436, 1
  %441 = icmp eq i32 %440, 0
  br i1 %441, label %442, label %462

442:                                              ; preds = %439
  %443 = load i32, ptr %423, align 8, !tbaa !283
  %444 = and i32 %443, 1
  %445 = icmp eq i32 %444, 0
  br i1 %445, label %451, label %446

446:                                              ; preds = %442
  %447 = getelementptr inbounds %struct.MovieTrackingTrack, ptr %431, i64 0, i32 14
  %448 = load i32, ptr %447, align 4, !tbaa !288
  %449 = and i32 %448, 1
  %450 = icmp eq i32 %449, 0
  br i1 %450, label %451, label %462

451:                                              ; preds = %446, %442
  %452 = and i32 %443, 2
  %453 = icmp eq i32 %452, 0
  br i1 %453, label %898, label %454

454:                                              ; preds = %451
  %455 = getelementptr inbounds %struct.MovieTrackingTrack, ptr %431, i64 0, i32 15
  %456 = load i32, ptr %455, align 8, !tbaa !289
  %457 = and i32 %456, 1
  %458 = icmp ne i32 %457, 0
  %459 = and i32 %436, 64
  %460 = icmp eq i32 %459, 0
  %461 = and i1 %460, %458
  br i1 %461, label %465, label %898

462:                                              ; preds = %446, %439
  %463 = and i32 %436, 64
  %464 = icmp eq i32 %463, 0
  br i1 %464, label %465, label %898

465:                                              ; preds = %462, %454
  %466 = load float, ptr %3, align 4, !tbaa !82
  %467 = load float, ptr %4, align 4, !tbaa !82
  %468 = call ptr @BKE_tracking_marker_ensure(ptr noundef nonnull %431, i32 noundef %318) #18
  %469 = getelementptr inbounds %struct.MovieTrackingMarker, ptr %468, i64 0, i32 5
  %470 = load i32, ptr %469, align 4, !tbaa !361
  %471 = getelementptr inbounds %struct.TransDataTracking, ptr %433, i64 0, i32 1
  store i32 %470, ptr %471, align 4, !tbaa !360
  %472 = and i32 %470, -4
  store i32 %472, ptr %469, align 4, !tbaa !361
  %473 = getelementptr inbounds %struct.TransData, ptr %432, i64 1
  %474 = getelementptr inbounds %struct.TransData2D, ptr %434, i64 1
  %475 = getelementptr inbounds %struct.TransDataTracking, ptr %433, i64 1
  %476 = getelementptr inbounds %struct.MovieTrackingTrack, ptr %431, i64 0, i32 7
  store i32 0, ptr %433, align 8, !tbaa !357
  %477 = load float, ptr %468, align 4, !tbaa !82
  %478 = fmul fast float %477, %466
  store float %478, ptr %434, align 8, !tbaa !82
  %479 = getelementptr inbounds float, ptr %468, i64 1
  %480 = load float, ptr %479, align 4, !tbaa !82
  %481 = getelementptr inbounds %struct.TransDataTracking, ptr %433, i64 0, i32 4
  store ptr %476, ptr %481, align 8, !tbaa !549
  %482 = fmul fast float %480, %467
  %483 = getelementptr inbounds [3 x float], ptr %434, i64 0, i64 1
  store float %482, ptr %483, align 4
  %484 = getelementptr inbounds %struct.TransData2D, ptr %434, i64 0, i32 1
  store ptr %476, ptr %484, align 8
  %485 = getelementptr inbounds [3 x float], ptr %434, i64 0, i64 2
  store float 0.000000e+00, ptr %485, align 8, !tbaa !82
  %486 = getelementptr inbounds %struct.TransDataTracking, ptr %433, i64 0, i32 3
  store ptr %468, ptr %486, align 8, !tbaa !370
  %487 = getelementptr inbounds %struct.TransDataTracking, ptr %433, i64 0, i32 2
  store i32 1, ptr %487, align 8, !tbaa !369
  %488 = getelementptr inbounds %struct.MovieTrackingTrack, ptr %431, i64 0, i32 8
  %489 = load i32, ptr %488, align 8, !tbaa !362
  %490 = getelementptr inbounds %struct.TransDataTracking, ptr %433, i64 0, i32 9
  store i32 %489, ptr %490, align 8, !tbaa !372
  %491 = getelementptr inbounds %struct.MovieTrackingTrack, ptr %431, i64 0, i32 10
  %492 = load ptr, ptr %491, align 8, !tbaa !363
  %493 = getelementptr inbounds %struct.TransDataTracking, ptr %433, i64 0, i32 10
  store ptr %492, ptr %493, align 8, !tbaa !373
  %494 = getelementptr inbounds %struct.TransDataTracking, ptr %433, i64 0, i32 14
  store ptr %431, ptr %494, align 8, !tbaa !359
  %495 = getelementptr inbounds %struct.TransDataTracking, ptr %433, i64 0, i32 6
  %496 = load float, ptr %468, align 4, !tbaa !82
  store float %496, ptr %495, align 4, !tbaa !82
  %497 = load float, ptr %479, align 4, !tbaa !82
  %498 = getelementptr inbounds %struct.TransDataTracking, ptr %433, i64 0, i32 6, i64 1
  store float %497, ptr %498, align 4, !tbaa !82
  %499 = getelementptr inbounds %struct.TransDataTracking, ptr %433, i64 0, i32 5
  %500 = load float, ptr %476, align 4, !tbaa !82
  store float %500, ptr %499, align 4, !tbaa !82
  %501 = getelementptr inbounds %struct.MovieTrackingTrack, ptr %431, i64 0, i32 7, i64 1
  %502 = load float, ptr %501, align 4, !tbaa !82
  %503 = getelementptr inbounds %struct.TransDataTracking, ptr %433, i64 0, i32 5, i64 1
  store float %502, ptr %503, align 4, !tbaa !82
  %504 = getelementptr inbounds %struct.TransData, ptr %432, i64 0, i32 16
  %505 = getelementptr inbounds %struct.TransData, ptr %432, i64 0, i32 3
  store ptr %434, ptr %505, align 8, !tbaa !182
  %506 = getelementptr inbounds %struct.TransData, ptr %432, i64 0, i32 4
  %507 = load float, ptr %434, align 4, !tbaa !82
  store float %507, ptr %506, align 4, !tbaa !82
  %508 = load float, ptr %483, align 4, !tbaa !82
  %509 = getelementptr inbounds %struct.TransData, ptr %432, i64 0, i32 4, i64 1
  store float %508, ptr %509, align 4, !tbaa !82
  %510 = load float, ptr %485, align 4, !tbaa !82
  %511 = getelementptr inbounds %struct.TransData, ptr %432, i64 0, i32 4, i64 2
  store float %510, ptr %511, align 4, !tbaa !82
  %512 = load float, ptr %468, align 4, !tbaa !82
  %513 = fmul fast float %512, %466
  %514 = getelementptr inbounds %struct.TransData, ptr %432, i64 0, i32 7
  store float %513, ptr %514, align 4, !tbaa !82
  %515 = load float, ptr %479, align 4, !tbaa !82
  %516 = fmul fast float %515, %467
  %517 = getelementptr inbounds %struct.TransData, ptr %432, i64 0, i32 7, i64 1
  store float %516, ptr %517, align 4, !tbaa !82
  %518 = getelementptr inbounds %struct.TransData, ptr %432, i64 0, i32 10
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(36) %518, i8 0, i64 32, i1 false)
  %519 = getelementptr inbounds %struct.TransData, ptr %432, i64 0, i32 10, i64 2, i64 2
  store float 1.000000e+00, ptr %519, align 8, !tbaa !82
  %520 = getelementptr inbounds %struct.TransData, ptr %432, i64 0, i32 13
  store ptr null, ptr %520, align 8, !tbaa !334
  %521 = getelementptr inbounds %struct.TransData, ptr %432, i64 0, i32 5
  store ptr null, ptr %521, align 8, !tbaa !423
  store i32 257, ptr %504, align 8, !tbaa !20
  store float 0.000000e+00, ptr %432, align 8, !tbaa !25
  %522 = getelementptr inbounds %struct.TransData, ptr %432, i64 0, i32 8
  call void @unit_m3(ptr noundef nonnull %522) #18
  %523 = getelementptr inbounds %struct.TransData, ptr %432, i64 0, i32 9
  call void @unit_m3(ptr noundef nonnull %523) #18
  %524 = load i32, ptr %435, align 8, !tbaa !281
  %525 = and i32 %524, 1
  %526 = icmp eq i32 %525, 0
  br i1 %526, label %564, label %527

527:                                              ; preds = %465
  %528 = getelementptr inbounds %struct.TransData, ptr %432, i64 2
  %529 = getelementptr inbounds %struct.TransData2D, ptr %434, i64 2
  %530 = getelementptr inbounds %struct.TransDataTracking, ptr %433, i64 2
  store i32 0, ptr %475, align 8, !tbaa !357
  %531 = load float, ptr %468, align 4, !tbaa !82
  %532 = fmul fast float %531, %466
  store float %532, ptr %474, align 8, !tbaa !82
  %533 = load float, ptr %479, align 4, !tbaa !82
  %534 = fmul fast float %533, %467
  %535 = getelementptr inbounds %struct.TransData2D, ptr %434, i64 1, i32 0, i64 1
  store float %534, ptr %535, align 4
  %536 = getelementptr inbounds %struct.TransData2D, ptr %434, i64 1, i32 1
  store ptr %468, ptr %536, align 8
  %537 = getelementptr inbounds %struct.TransData2D, ptr %434, i64 1, i32 0, i64 2
  store float 0.000000e+00, ptr %537, align 8, !tbaa !82
  %538 = getelementptr inbounds %struct.TransDataTracking, ptr %433, i64 1, i32 3
  store ptr null, ptr %538, align 8, !tbaa !370
  %539 = getelementptr inbounds %struct.TransDataTracking, ptr %433, i64 1, i32 2
  store i32 1, ptr %539, align 8, !tbaa !369
  %540 = load i32, ptr %488, align 8, !tbaa !362
  %541 = getelementptr inbounds %struct.TransDataTracking, ptr %433, i64 1, i32 9
  store i32 %540, ptr %541, align 8, !tbaa !372
  %542 = load ptr, ptr %491, align 8, !tbaa !363
  %543 = getelementptr inbounds %struct.TransDataTracking, ptr %433, i64 1, i32 10
  store ptr %542, ptr %543, align 8, !tbaa !373
  %544 = getelementptr inbounds %struct.TransDataTracking, ptr %433, i64 1, i32 14
  store ptr %431, ptr %544, align 8, !tbaa !359
  %545 = getelementptr inbounds %struct.TransData, ptr %432, i64 1, i32 16
  %546 = getelementptr inbounds %struct.TransData, ptr %432, i64 1, i32 3
  store ptr %474, ptr %546, align 8, !tbaa !182
  %547 = getelementptr inbounds %struct.TransData, ptr %432, i64 1, i32 4
  store float %532, ptr %547, align 4, !tbaa !82
  %548 = load float, ptr %535, align 4, !tbaa !82
  %549 = getelementptr inbounds %struct.TransData, ptr %432, i64 1, i32 4, i64 1
  store float %548, ptr %549, align 4, !tbaa !82
  %550 = load float, ptr %537, align 4, !tbaa !82
  %551 = getelementptr inbounds %struct.TransData, ptr %432, i64 1, i32 4, i64 2
  store float %550, ptr %551, align 4, !tbaa !82
  %552 = load float, ptr %468, align 4, !tbaa !82
  %553 = fmul fast float %552, %466
  %554 = getelementptr inbounds %struct.TransData, ptr %432, i64 1, i32 7
  store float %553, ptr %554, align 4, !tbaa !82
  %555 = load float, ptr %479, align 4, !tbaa !82
  %556 = fmul fast float %555, %467
  %557 = getelementptr inbounds %struct.TransData, ptr %432, i64 1, i32 7, i64 1
  store float %556, ptr %557, align 4, !tbaa !82
  %558 = getelementptr inbounds %struct.TransData, ptr %432, i64 1, i32 10
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(36) %558, i8 0, i64 32, i1 false)
  %559 = getelementptr inbounds %struct.TransData, ptr %432, i64 1, i32 10, i64 2, i64 2
  store float 1.000000e+00, ptr %559, align 8, !tbaa !82
  %560 = getelementptr inbounds %struct.TransData, ptr %432, i64 1, i32 13
  store ptr null, ptr %560, align 8, !tbaa !334
  %561 = getelementptr inbounds %struct.TransData, ptr %432, i64 1, i32 5
  store ptr null, ptr %561, align 8, !tbaa !423
  store i32 257, ptr %545, align 8, !tbaa !20
  store float 0.000000e+00, ptr %473, align 8, !tbaa !25
  %562 = getelementptr inbounds %struct.TransData, ptr %432, i64 1, i32 8
  call void @unit_m3(ptr noundef nonnull %562) #18
  %563 = getelementptr inbounds %struct.TransData, ptr %432, i64 1, i32 9
  call void @unit_m3(ptr noundef nonnull %563) #18
  br label %564

564:                                              ; preds = %527, %465
  %565 = phi ptr [ %530, %527 ], [ %475, %465 ]
  %566 = phi ptr [ %529, %527 ], [ %474, %465 ]
  %567 = phi ptr [ %528, %527 ], [ %473, %465 ]
  %568 = getelementptr inbounds %struct.MovieTrackingTrack, ptr %431, i64 0, i32 14
  %569 = load i32, ptr %568, align 4, !tbaa !288
  %570 = and i32 %569, 1
  %571 = icmp eq i32 %570, 0
  br i1 %571, label %769, label %572

572:                                              ; preds = %564
  %573 = getelementptr inbounds %struct.TransData, ptr %567, i64 1
  %574 = getelementptr inbounds %struct.TransData2D, ptr %566, i64 1
  %575 = getelementptr inbounds %struct.TransDataTracking, ptr %565, i64 1
  %576 = getelementptr inbounds %struct.MovieTrackingMarker, ptr %468, i64 0, i32 1, i64 0
  store i32 0, ptr %565, align 8, !tbaa !357
  %577 = load float, ptr %576, align 4, !tbaa !82
  %578 = fmul fast float %577, %466
  store float %578, ptr %566, align 8, !tbaa !82
  %579 = getelementptr inbounds %struct.MovieTrackingMarker, ptr %468, i64 0, i32 1, i64 0, i64 1
  %580 = load float, ptr %579, align 4, !tbaa !82
  %581 = fmul fast float %580, %467
  %582 = getelementptr inbounds [3 x float], ptr %566, i64 0, i64 1
  store float %581, ptr %582, align 4
  %583 = getelementptr inbounds %struct.TransData2D, ptr %566, i64 0, i32 1
  store ptr %576, ptr %583, align 8
  %584 = getelementptr inbounds [3 x float], ptr %566, i64 0, i64 2
  store float 0.000000e+00, ptr %584, align 8, !tbaa !82
  %585 = getelementptr inbounds %struct.TransDataTracking, ptr %565, i64 0, i32 3
  store ptr %468, ptr %585, align 8, !tbaa !370
  %586 = getelementptr inbounds %struct.TransDataTracking, ptr %565, i64 0, i32 2
  store i32 2, ptr %586, align 8, !tbaa !369
  %587 = load i32, ptr %488, align 8, !tbaa !362
  %588 = getelementptr inbounds %struct.TransDataTracking, ptr %565, i64 0, i32 9
  store i32 %587, ptr %588, align 8, !tbaa !372
  %589 = load ptr, ptr %491, align 8, !tbaa !363
  %590 = getelementptr inbounds %struct.TransDataTracking, ptr %565, i64 0, i32 10
  store ptr %589, ptr %590, align 8, !tbaa !373
  %591 = getelementptr inbounds %struct.TransDataTracking, ptr %565, i64 0, i32 14
  store ptr %431, ptr %591, align 8, !tbaa !359
  %592 = load float, ptr %468, align 4, !tbaa !82
  %593 = fmul fast float %592, %466
  %594 = fadd fast float %593, %578
  store float %594, ptr %566, align 8, !tbaa !82
  %595 = load float, ptr %479, align 4, !tbaa !82
  %596 = fmul fast float %595, %467
  %597 = fadd fast float %596, %581
  store float %597, ptr %582, align 4, !tbaa !82
  %598 = getelementptr inbounds %struct.TransDataTracking, ptr %565, i64 0, i32 6
  %599 = load float, ptr %468, align 4, !tbaa !82
  store float %599, ptr %598, align 4, !tbaa !82
  %600 = load float, ptr %479, align 4, !tbaa !82
  %601 = getelementptr inbounds %struct.TransDataTracking, ptr %565, i64 0, i32 6, i64 1
  store float %600, ptr %601, align 4, !tbaa !82
  %602 = getelementptr inbounds %struct.TransData, ptr %567, i64 0, i32 16
  %603 = getelementptr inbounds %struct.TransData, ptr %567, i64 0, i32 3
  store ptr %566, ptr %603, align 8, !tbaa !182
  %604 = getelementptr inbounds %struct.TransData, ptr %567, i64 0, i32 4
  %605 = load float, ptr %566, align 4, !tbaa !82
  store float %605, ptr %604, align 4, !tbaa !82
  %606 = load float, ptr %582, align 4, !tbaa !82
  %607 = getelementptr inbounds %struct.TransData, ptr %567, i64 0, i32 4, i64 1
  store float %606, ptr %607, align 4, !tbaa !82
  %608 = load float, ptr %584, align 4, !tbaa !82
  %609 = getelementptr inbounds %struct.TransData, ptr %567, i64 0, i32 4, i64 2
  store float %608, ptr %609, align 4, !tbaa !82
  %610 = load float, ptr %468, align 4, !tbaa !82
  %611 = fmul fast float %610, %466
  %612 = getelementptr inbounds %struct.TransData, ptr %567, i64 0, i32 7
  store float %611, ptr %612, align 4, !tbaa !82
  %613 = load float, ptr %479, align 4, !tbaa !82
  %614 = fmul fast float %613, %467
  %615 = getelementptr inbounds %struct.TransData, ptr %567, i64 0, i32 7, i64 1
  store float %614, ptr %615, align 4, !tbaa !82
  %616 = getelementptr inbounds %struct.TransData, ptr %567, i64 0, i32 10
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(36) %616, i8 0, i64 32, i1 false)
  %617 = getelementptr inbounds %struct.TransData, ptr %567, i64 0, i32 10, i64 2, i64 2
  store float 1.000000e+00, ptr %617, align 8, !tbaa !82
  %618 = getelementptr inbounds %struct.TransData, ptr %567, i64 0, i32 13
  store ptr null, ptr %618, align 8, !tbaa !334
  %619 = getelementptr inbounds %struct.TransData, ptr %567, i64 0, i32 5
  store ptr null, ptr %619, align 8, !tbaa !423
  store i32 257, ptr %602, align 8, !tbaa !20
  store float 0.000000e+00, ptr %567, align 8, !tbaa !25
  %620 = getelementptr inbounds %struct.TransData, ptr %567, i64 0, i32 8
  call void @unit_m3(ptr noundef nonnull %620) #18
  %621 = getelementptr inbounds %struct.TransData, ptr %567, i64 0, i32 9
  call void @unit_m3(ptr noundef nonnull %621) #18
  %622 = getelementptr inbounds %struct.TransData, ptr %567, i64 2
  %623 = getelementptr inbounds %struct.TransData2D, ptr %566, i64 2
  %624 = getelementptr inbounds %struct.TransDataTracking, ptr %565, i64 2
  %625 = getelementptr inbounds %struct.MovieTrackingMarker, ptr %468, i64 0, i32 1, i64 1
  store i32 0, ptr %575, align 8, !tbaa !357
  %626 = load float, ptr %625, align 4, !tbaa !82
  %627 = fmul fast float %626, %466
  store float %627, ptr %574, align 8, !tbaa !82
  %628 = getelementptr inbounds %struct.MovieTrackingMarker, ptr %468, i64 0, i32 1, i64 1, i64 1
  %629 = load float, ptr %628, align 4, !tbaa !82
  %630 = fmul fast float %629, %467
  %631 = getelementptr inbounds %struct.TransData2D, ptr %566, i64 1, i32 0, i64 1
  store float %630, ptr %631, align 4
  %632 = getelementptr inbounds %struct.TransData2D, ptr %566, i64 1, i32 1
  store ptr %625, ptr %632, align 8
  %633 = getelementptr inbounds %struct.TransData2D, ptr %566, i64 1, i32 0, i64 2
  store float 0.000000e+00, ptr %633, align 8, !tbaa !82
  %634 = getelementptr inbounds %struct.TransDataTracking, ptr %565, i64 1, i32 3
  store ptr %468, ptr %634, align 8, !tbaa !370
  %635 = getelementptr inbounds %struct.TransDataTracking, ptr %565, i64 1, i32 2
  store i32 2, ptr %635, align 8, !tbaa !369
  %636 = load i32, ptr %488, align 8, !tbaa !362
  %637 = getelementptr inbounds %struct.TransDataTracking, ptr %565, i64 1, i32 9
  store i32 %636, ptr %637, align 8, !tbaa !372
  %638 = load ptr, ptr %491, align 8, !tbaa !363
  %639 = getelementptr inbounds %struct.TransDataTracking, ptr %565, i64 1, i32 10
  store ptr %638, ptr %639, align 8, !tbaa !373
  %640 = getelementptr inbounds %struct.TransDataTracking, ptr %565, i64 1, i32 14
  store ptr %431, ptr %640, align 8, !tbaa !359
  %641 = load float, ptr %468, align 4, !tbaa !82
  %642 = fmul fast float %641, %466
  %643 = fadd fast float %642, %627
  store float %643, ptr %574, align 8, !tbaa !82
  %644 = load float, ptr %479, align 4, !tbaa !82
  %645 = fmul fast float %644, %467
  %646 = fadd fast float %645, %630
  store float %646, ptr %631, align 4, !tbaa !82
  %647 = getelementptr inbounds %struct.TransDataTracking, ptr %565, i64 1, i32 6
  %648 = load float, ptr %468, align 4, !tbaa !82
  store float %648, ptr %647, align 4, !tbaa !82
  %649 = load float, ptr %479, align 4, !tbaa !82
  %650 = getelementptr inbounds %struct.TransDataTracking, ptr %565, i64 1, i32 6, i64 1
  store float %649, ptr %650, align 4, !tbaa !82
  %651 = getelementptr inbounds %struct.TransData, ptr %567, i64 1, i32 16
  %652 = getelementptr inbounds %struct.TransData, ptr %567, i64 1, i32 3
  store ptr %574, ptr %652, align 8, !tbaa !182
  %653 = getelementptr inbounds %struct.TransData, ptr %567, i64 1, i32 4
  %654 = load float, ptr %574, align 4, !tbaa !82
  store float %654, ptr %653, align 4, !tbaa !82
  %655 = load float, ptr %631, align 4, !tbaa !82
  %656 = getelementptr inbounds %struct.TransData, ptr %567, i64 1, i32 4, i64 1
  store float %655, ptr %656, align 4, !tbaa !82
  %657 = load float, ptr %633, align 4, !tbaa !82
  %658 = getelementptr inbounds %struct.TransData, ptr %567, i64 1, i32 4, i64 2
  store float %657, ptr %658, align 4, !tbaa !82
  %659 = load float, ptr %468, align 4, !tbaa !82
  %660 = fmul fast float %659, %466
  %661 = getelementptr inbounds %struct.TransData, ptr %567, i64 1, i32 7
  store float %660, ptr %661, align 4, !tbaa !82
  %662 = load float, ptr %479, align 4, !tbaa !82
  %663 = fmul fast float %662, %467
  %664 = getelementptr inbounds %struct.TransData, ptr %567, i64 1, i32 7, i64 1
  store float %663, ptr %664, align 4, !tbaa !82
  %665 = getelementptr inbounds %struct.TransData, ptr %567, i64 1, i32 10
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(36) %665, i8 0, i64 32, i1 false)
  %666 = getelementptr inbounds %struct.TransData, ptr %567, i64 1, i32 10, i64 2, i64 2
  store float 1.000000e+00, ptr %666, align 8, !tbaa !82
  %667 = getelementptr inbounds %struct.TransData, ptr %567, i64 1, i32 13
  store ptr null, ptr %667, align 8, !tbaa !334
  %668 = getelementptr inbounds %struct.TransData, ptr %567, i64 1, i32 5
  store ptr null, ptr %668, align 8, !tbaa !423
  store i32 257, ptr %651, align 8, !tbaa !20
  store float 0.000000e+00, ptr %573, align 8, !tbaa !25
  %669 = getelementptr inbounds %struct.TransData, ptr %567, i64 1, i32 8
  call void @unit_m3(ptr noundef nonnull %669) #18
  %670 = getelementptr inbounds %struct.TransData, ptr %567, i64 1, i32 9
  call void @unit_m3(ptr noundef nonnull %670) #18
  %671 = getelementptr inbounds %struct.TransData, ptr %567, i64 3
  %672 = getelementptr inbounds %struct.TransData2D, ptr %566, i64 3
  %673 = getelementptr inbounds %struct.TransDataTracking, ptr %565, i64 3
  %674 = getelementptr inbounds %struct.MovieTrackingMarker, ptr %468, i64 0, i32 1, i64 2
  store i32 0, ptr %624, align 8, !tbaa !357
  %675 = load float, ptr %674, align 4, !tbaa !82
  %676 = fmul fast float %675, %466
  store float %676, ptr %623, align 8, !tbaa !82
  %677 = getelementptr inbounds %struct.MovieTrackingMarker, ptr %468, i64 0, i32 1, i64 2, i64 1
  %678 = load float, ptr %677, align 4, !tbaa !82
  %679 = fmul fast float %678, %467
  %680 = getelementptr inbounds %struct.TransData2D, ptr %566, i64 2, i32 0, i64 1
  store float %679, ptr %680, align 4
  %681 = getelementptr inbounds %struct.TransData2D, ptr %566, i64 2, i32 1
  store ptr %674, ptr %681, align 8
  %682 = getelementptr inbounds %struct.TransData2D, ptr %566, i64 2, i32 0, i64 2
  store float 0.000000e+00, ptr %682, align 8, !tbaa !82
  %683 = getelementptr inbounds %struct.TransDataTracking, ptr %565, i64 2, i32 3
  store ptr %468, ptr %683, align 8, !tbaa !370
  %684 = getelementptr inbounds %struct.TransDataTracking, ptr %565, i64 2, i32 2
  store i32 2, ptr %684, align 8, !tbaa !369
  %685 = load i32, ptr %488, align 8, !tbaa !362
  %686 = getelementptr inbounds %struct.TransDataTracking, ptr %565, i64 2, i32 9
  store i32 %685, ptr %686, align 8, !tbaa !372
  %687 = load ptr, ptr %491, align 8, !tbaa !363
  %688 = getelementptr inbounds %struct.TransDataTracking, ptr %565, i64 2, i32 10
  store ptr %687, ptr %688, align 8, !tbaa !373
  %689 = getelementptr inbounds %struct.TransDataTracking, ptr %565, i64 2, i32 14
  store ptr %431, ptr %689, align 8, !tbaa !359
  %690 = load float, ptr %468, align 4, !tbaa !82
  %691 = fmul fast float %690, %466
  %692 = fadd fast float %691, %676
  store float %692, ptr %623, align 8, !tbaa !82
  %693 = load float, ptr %479, align 4, !tbaa !82
  %694 = fmul fast float %693, %467
  %695 = fadd fast float %694, %679
  store float %695, ptr %680, align 4, !tbaa !82
  %696 = getelementptr inbounds %struct.TransDataTracking, ptr %565, i64 2, i32 6
  %697 = load float, ptr %468, align 4, !tbaa !82
  store float %697, ptr %696, align 4, !tbaa !82
  %698 = load float, ptr %479, align 4, !tbaa !82
  %699 = getelementptr inbounds %struct.TransDataTracking, ptr %565, i64 2, i32 6, i64 1
  store float %698, ptr %699, align 4, !tbaa !82
  %700 = getelementptr inbounds %struct.TransData, ptr %567, i64 2, i32 16
  %701 = getelementptr inbounds %struct.TransData, ptr %567, i64 2, i32 3
  store ptr %623, ptr %701, align 8, !tbaa !182
  %702 = getelementptr inbounds %struct.TransData, ptr %567, i64 2, i32 4
  %703 = load float, ptr %623, align 4, !tbaa !82
  store float %703, ptr %702, align 4, !tbaa !82
  %704 = load float, ptr %680, align 4, !tbaa !82
  %705 = getelementptr inbounds %struct.TransData, ptr %567, i64 2, i32 4, i64 1
  store float %704, ptr %705, align 4, !tbaa !82
  %706 = load float, ptr %682, align 4, !tbaa !82
  %707 = getelementptr inbounds %struct.TransData, ptr %567, i64 2, i32 4, i64 2
  store float %706, ptr %707, align 4, !tbaa !82
  %708 = load float, ptr %468, align 4, !tbaa !82
  %709 = fmul fast float %708, %466
  %710 = getelementptr inbounds %struct.TransData, ptr %567, i64 2, i32 7
  store float %709, ptr %710, align 4, !tbaa !82
  %711 = load float, ptr %479, align 4, !tbaa !82
  %712 = fmul fast float %711, %467
  %713 = getelementptr inbounds %struct.TransData, ptr %567, i64 2, i32 7, i64 1
  store float %712, ptr %713, align 4, !tbaa !82
  %714 = getelementptr inbounds %struct.TransData, ptr %567, i64 2, i32 10
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(36) %714, i8 0, i64 32, i1 false)
  %715 = getelementptr inbounds %struct.TransData, ptr %567, i64 2, i32 10, i64 2, i64 2
  store float 1.000000e+00, ptr %715, align 8, !tbaa !82
  %716 = getelementptr inbounds %struct.TransData, ptr %567, i64 2, i32 13
  store ptr null, ptr %716, align 8, !tbaa !334
  %717 = getelementptr inbounds %struct.TransData, ptr %567, i64 2, i32 5
  store ptr null, ptr %717, align 8, !tbaa !423
  store i32 257, ptr %700, align 8, !tbaa !20
  store float 0.000000e+00, ptr %622, align 8, !tbaa !25
  %718 = getelementptr inbounds %struct.TransData, ptr %567, i64 2, i32 8
  call void @unit_m3(ptr noundef nonnull %718) #18
  %719 = getelementptr inbounds %struct.TransData, ptr %567, i64 2, i32 9
  call void @unit_m3(ptr noundef nonnull %719) #18
  %720 = getelementptr inbounds %struct.TransData, ptr %567, i64 4
  %721 = getelementptr inbounds %struct.TransData2D, ptr %566, i64 4
  %722 = getelementptr inbounds %struct.TransDataTracking, ptr %565, i64 4
  %723 = getelementptr inbounds %struct.MovieTrackingMarker, ptr %468, i64 0, i32 1, i64 3
  store i32 0, ptr %673, align 8, !tbaa !357
  %724 = load float, ptr %723, align 4, !tbaa !82
  %725 = fmul fast float %724, %466
  store float %725, ptr %672, align 8, !tbaa !82
  %726 = getelementptr inbounds %struct.MovieTrackingMarker, ptr %468, i64 0, i32 1, i64 3, i64 1
  %727 = load float, ptr %726, align 4, !tbaa !82
  %728 = fmul fast float %727, %467
  %729 = getelementptr inbounds %struct.TransData2D, ptr %566, i64 3, i32 0, i64 1
  store float %728, ptr %729, align 4
  %730 = getelementptr inbounds %struct.TransData2D, ptr %566, i64 3, i32 1
  store ptr %723, ptr %730, align 8
  %731 = getelementptr inbounds %struct.TransData2D, ptr %566, i64 3, i32 0, i64 2
  store float 0.000000e+00, ptr %731, align 8, !tbaa !82
  %732 = getelementptr inbounds %struct.TransDataTracking, ptr %565, i64 3, i32 3
  store ptr %468, ptr %732, align 8, !tbaa !370
  %733 = getelementptr inbounds %struct.TransDataTracking, ptr %565, i64 3, i32 2
  store i32 2, ptr %733, align 8, !tbaa !369
  %734 = load i32, ptr %488, align 8, !tbaa !362
  %735 = getelementptr inbounds %struct.TransDataTracking, ptr %565, i64 3, i32 9
  store i32 %734, ptr %735, align 8, !tbaa !372
  %736 = load ptr, ptr %491, align 8, !tbaa !363
  %737 = getelementptr inbounds %struct.TransDataTracking, ptr %565, i64 3, i32 10
  store ptr %736, ptr %737, align 8, !tbaa !373
  %738 = getelementptr inbounds %struct.TransDataTracking, ptr %565, i64 3, i32 14
  store ptr %431, ptr %738, align 8, !tbaa !359
  %739 = load float, ptr %468, align 4, !tbaa !82
  %740 = fmul fast float %739, %466
  %741 = fadd fast float %740, %725
  store float %741, ptr %672, align 8, !tbaa !82
  %742 = load float, ptr %479, align 4, !tbaa !82
  %743 = fmul fast float %742, %467
  %744 = fadd fast float %743, %728
  store float %744, ptr %729, align 4, !tbaa !82
  %745 = getelementptr inbounds %struct.TransDataTracking, ptr %565, i64 3, i32 6
  %746 = load float, ptr %468, align 4, !tbaa !82
  store float %746, ptr %745, align 4, !tbaa !82
  %747 = load float, ptr %479, align 4, !tbaa !82
  %748 = getelementptr inbounds %struct.TransDataTracking, ptr %565, i64 3, i32 6, i64 1
  store float %747, ptr %748, align 4, !tbaa !82
  %749 = getelementptr inbounds %struct.TransData, ptr %567, i64 3, i32 16
  %750 = getelementptr inbounds %struct.TransData, ptr %567, i64 3, i32 3
  store ptr %672, ptr %750, align 8, !tbaa !182
  %751 = getelementptr inbounds %struct.TransData, ptr %567, i64 3, i32 4
  %752 = load float, ptr %672, align 4, !tbaa !82
  store float %752, ptr %751, align 4, !tbaa !82
  %753 = load float, ptr %729, align 4, !tbaa !82
  %754 = getelementptr inbounds %struct.TransData, ptr %567, i64 3, i32 4, i64 1
  store float %753, ptr %754, align 4, !tbaa !82
  %755 = load float, ptr %731, align 4, !tbaa !82
  %756 = getelementptr inbounds %struct.TransData, ptr %567, i64 3, i32 4, i64 2
  store float %755, ptr %756, align 4, !tbaa !82
  %757 = load float, ptr %468, align 4, !tbaa !82
  %758 = fmul fast float %757, %466
  %759 = getelementptr inbounds %struct.TransData, ptr %567, i64 3, i32 7
  store float %758, ptr %759, align 4, !tbaa !82
  %760 = load float, ptr %479, align 4, !tbaa !82
  %761 = fmul fast float %760, %467
  %762 = getelementptr inbounds %struct.TransData, ptr %567, i64 3, i32 7, i64 1
  store float %761, ptr %762, align 4, !tbaa !82
  %763 = getelementptr inbounds %struct.TransData, ptr %567, i64 3, i32 10
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(36) %763, i8 0, i64 32, i1 false)
  %764 = getelementptr inbounds %struct.TransData, ptr %567, i64 3, i32 10, i64 2, i64 2
  store float 1.000000e+00, ptr %764, align 8, !tbaa !82
  %765 = getelementptr inbounds %struct.TransData, ptr %567, i64 3, i32 13
  store ptr null, ptr %765, align 8, !tbaa !334
  %766 = getelementptr inbounds %struct.TransData, ptr %567, i64 3, i32 5
  store ptr null, ptr %766, align 8, !tbaa !423
  store i32 257, ptr %749, align 8, !tbaa !20
  store float 0.000000e+00, ptr %671, align 8, !tbaa !25
  %767 = getelementptr inbounds %struct.TransData, ptr %567, i64 3, i32 8
  call void @unit_m3(ptr noundef nonnull %767) #18
  %768 = getelementptr inbounds %struct.TransData, ptr %567, i64 3, i32 9
  call void @unit_m3(ptr noundef nonnull %768) #18
  br label %769

769:                                              ; preds = %572, %564
  %770 = phi ptr [ %565, %564 ], [ %722, %572 ]
  %771 = phi ptr [ %566, %564 ], [ %721, %572 ]
  %772 = phi ptr [ %567, %564 ], [ %720, %572 ]
  %773 = getelementptr inbounds %struct.MovieTrackingTrack, ptr %431, i64 0, i32 15
  %774 = load i32, ptr %773, align 8, !tbaa !289
  %775 = and i32 %774, 1
  %776 = icmp eq i32 %775, 0
  br i1 %776, label %875, label %777

777:                                              ; preds = %769
  %778 = getelementptr inbounds %struct.TransData, ptr %772, i64 1
  %779 = getelementptr inbounds %struct.TransData2D, ptr %771, i64 1
  %780 = getelementptr inbounds %struct.TransDataTracking, ptr %770, i64 1
  %781 = getelementptr inbounds %struct.MovieTrackingMarker, ptr %468, i64 0, i32 2
  store i32 0, ptr %770, align 8, !tbaa !357
  %782 = load float, ptr %781, align 4, !tbaa !82
  %783 = fmul fast float %782, %466
  store float %783, ptr %771, align 8, !tbaa !82
  %784 = getelementptr inbounds %struct.MovieTrackingMarker, ptr %468, i64 0, i32 2, i64 1
  %785 = load float, ptr %784, align 4, !tbaa !82
  %786 = fmul fast float %785, %467
  %787 = getelementptr inbounds [3 x float], ptr %771, i64 0, i64 1
  store float %786, ptr %787, align 4
  %788 = getelementptr inbounds %struct.TransData2D, ptr %771, i64 0, i32 1
  store ptr %781, ptr %788, align 8
  %789 = getelementptr inbounds [3 x float], ptr %771, i64 0, i64 2
  store float 0.000000e+00, ptr %789, align 8, !tbaa !82
  %790 = getelementptr inbounds %struct.TransDataTracking, ptr %770, i64 0, i32 3
  store ptr %468, ptr %790, align 8, !tbaa !370
  %791 = getelementptr inbounds %struct.TransDataTracking, ptr %770, i64 0, i32 2
  store i32 4, ptr %791, align 8, !tbaa !369
  %792 = load i32, ptr %488, align 8, !tbaa !362
  %793 = getelementptr inbounds %struct.TransDataTracking, ptr %770, i64 0, i32 9
  store i32 %792, ptr %793, align 8, !tbaa !372
  %794 = load ptr, ptr %491, align 8, !tbaa !363
  %795 = getelementptr inbounds %struct.TransDataTracking, ptr %770, i64 0, i32 10
  store ptr %794, ptr %795, align 8, !tbaa !373
  %796 = getelementptr inbounds %struct.TransDataTracking, ptr %770, i64 0, i32 14
  store ptr %431, ptr %796, align 8, !tbaa !359
  %797 = load float, ptr %468, align 4, !tbaa !82
  %798 = fmul fast float %797, %466
  %799 = fadd fast float %798, %783
  store float %799, ptr %771, align 8, !tbaa !82
  %800 = load float, ptr %479, align 4, !tbaa !82
  %801 = fmul fast float %800, %467
  %802 = fadd fast float %801, %786
  store float %802, ptr %787, align 4, !tbaa !82
  %803 = getelementptr inbounds %struct.TransDataTracking, ptr %770, i64 0, i32 6
  %804 = load float, ptr %468, align 4, !tbaa !82
  store float %804, ptr %803, align 4, !tbaa !82
  %805 = load float, ptr %479, align 4, !tbaa !82
  %806 = getelementptr inbounds %struct.TransDataTracking, ptr %770, i64 0, i32 6, i64 1
  store float %805, ptr %806, align 4, !tbaa !82
  %807 = getelementptr inbounds %struct.TransData, ptr %772, i64 0, i32 16
  %808 = getelementptr inbounds %struct.TransData, ptr %772, i64 0, i32 3
  store ptr %771, ptr %808, align 8, !tbaa !182
  %809 = getelementptr inbounds %struct.TransData, ptr %772, i64 0, i32 4
  %810 = load float, ptr %771, align 4, !tbaa !82
  store float %810, ptr %809, align 4, !tbaa !82
  %811 = load float, ptr %787, align 4, !tbaa !82
  %812 = getelementptr inbounds %struct.TransData, ptr %772, i64 0, i32 4, i64 1
  store float %811, ptr %812, align 4, !tbaa !82
  %813 = load float, ptr %789, align 4, !tbaa !82
  %814 = getelementptr inbounds %struct.TransData, ptr %772, i64 0, i32 4, i64 2
  store float %813, ptr %814, align 4, !tbaa !82
  %815 = load float, ptr %468, align 4, !tbaa !82
  %816 = fmul fast float %815, %466
  %817 = getelementptr inbounds %struct.TransData, ptr %772, i64 0, i32 7
  store float %816, ptr %817, align 4, !tbaa !82
  %818 = load float, ptr %479, align 4, !tbaa !82
  %819 = fmul fast float %818, %467
  %820 = getelementptr inbounds %struct.TransData, ptr %772, i64 0, i32 7, i64 1
  store float %819, ptr %820, align 4, !tbaa !82
  %821 = getelementptr inbounds %struct.TransData, ptr %772, i64 0, i32 10
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(36) %821, i8 0, i64 32, i1 false)
  %822 = getelementptr inbounds %struct.TransData, ptr %772, i64 0, i32 10, i64 2, i64 2
  store float 1.000000e+00, ptr %822, align 8, !tbaa !82
  %823 = getelementptr inbounds %struct.TransData, ptr %772, i64 0, i32 13
  store ptr null, ptr %823, align 8, !tbaa !334
  %824 = getelementptr inbounds %struct.TransData, ptr %772, i64 0, i32 5
  store ptr null, ptr %824, align 8, !tbaa !423
  store i32 257, ptr %807, align 8, !tbaa !20
  store float 0.000000e+00, ptr %772, align 8, !tbaa !25
  %825 = getelementptr inbounds %struct.TransData, ptr %772, i64 0, i32 8
  call void @unit_m3(ptr noundef nonnull %825) #18
  %826 = getelementptr inbounds %struct.TransData, ptr %772, i64 0, i32 9
  call void @unit_m3(ptr noundef nonnull %826) #18
  %827 = getelementptr inbounds %struct.MovieTrackingMarker, ptr %468, i64 0, i32 3
  store i32 0, ptr %780, align 8, !tbaa !357
  %828 = load float, ptr %827, align 4, !tbaa !82
  %829 = fmul fast float %828, %466
  store float %829, ptr %779, align 8, !tbaa !82
  %830 = getelementptr inbounds %struct.MovieTrackingMarker, ptr %468, i64 0, i32 3, i64 1
  %831 = load float, ptr %830, align 4, !tbaa !82
  %832 = fmul fast float %831, %467
  %833 = getelementptr inbounds %struct.TransData2D, ptr %771, i64 1, i32 0, i64 1
  store float %832, ptr %833, align 4
  %834 = getelementptr inbounds %struct.TransData2D, ptr %771, i64 1, i32 1
  store ptr %827, ptr %834, align 8
  %835 = getelementptr inbounds %struct.TransData2D, ptr %771, i64 1, i32 0, i64 2
  store float 0.000000e+00, ptr %835, align 8, !tbaa !82
  %836 = getelementptr inbounds %struct.TransDataTracking, ptr %770, i64 1, i32 3
  store ptr %468, ptr %836, align 8, !tbaa !370
  %837 = getelementptr inbounds %struct.TransDataTracking, ptr %770, i64 1, i32 2
  store i32 4, ptr %837, align 8, !tbaa !369
  %838 = load i32, ptr %488, align 8, !tbaa !362
  %839 = getelementptr inbounds %struct.TransDataTracking, ptr %770, i64 1, i32 9
  store i32 %838, ptr %839, align 8, !tbaa !372
  %840 = load ptr, ptr %491, align 8, !tbaa !363
  %841 = getelementptr inbounds %struct.TransDataTracking, ptr %770, i64 1, i32 10
  store ptr %840, ptr %841, align 8, !tbaa !373
  %842 = getelementptr inbounds %struct.TransDataTracking, ptr %770, i64 1, i32 14
  store ptr %431, ptr %842, align 8, !tbaa !359
  %843 = load float, ptr %468, align 4, !tbaa !82
  %844 = fmul fast float %843, %466
  %845 = fadd fast float %844, %829
  store float %845, ptr %779, align 8, !tbaa !82
  %846 = load float, ptr %479, align 4, !tbaa !82
  %847 = fmul fast float %846, %467
  %848 = fadd fast float %847, %832
  store float %848, ptr %833, align 4, !tbaa !82
  %849 = getelementptr inbounds %struct.TransDataTracking, ptr %770, i64 1, i32 6
  %850 = load float, ptr %468, align 4, !tbaa !82
  store float %850, ptr %849, align 4, !tbaa !82
  %851 = load float, ptr %479, align 4, !tbaa !82
  %852 = getelementptr inbounds %struct.TransDataTracking, ptr %770, i64 1, i32 6, i64 1
  store float %851, ptr %852, align 4, !tbaa !82
  %853 = getelementptr inbounds %struct.TransData, ptr %772, i64 1, i32 16
  %854 = getelementptr inbounds %struct.TransData, ptr %772, i64 1, i32 3
  store ptr %779, ptr %854, align 8, !tbaa !182
  %855 = getelementptr inbounds %struct.TransData, ptr %772, i64 1, i32 4
  %856 = load float, ptr %779, align 4, !tbaa !82
  store float %856, ptr %855, align 4, !tbaa !82
  %857 = load float, ptr %833, align 4, !tbaa !82
  %858 = getelementptr inbounds %struct.TransData, ptr %772, i64 1, i32 4, i64 1
  store float %857, ptr %858, align 4, !tbaa !82
  %859 = load float, ptr %835, align 4, !tbaa !82
  %860 = getelementptr inbounds %struct.TransData, ptr %772, i64 1, i32 4, i64 2
  store float %859, ptr %860, align 4, !tbaa !82
  %861 = load float, ptr %468, align 4, !tbaa !82
  %862 = fmul fast float %861, %466
  %863 = getelementptr inbounds %struct.TransData, ptr %772, i64 1, i32 7
  store float %862, ptr %863, align 4, !tbaa !82
  %864 = load float, ptr %479, align 4, !tbaa !82
  %865 = fmul fast float %864, %467
  %866 = getelementptr inbounds %struct.TransData, ptr %772, i64 1, i32 7, i64 1
  store float %865, ptr %866, align 4, !tbaa !82
  %867 = getelementptr inbounds %struct.TransData, ptr %772, i64 1, i32 10
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(36) %867, i8 0, i64 32, i1 false)
  %868 = getelementptr inbounds %struct.TransData, ptr %772, i64 1, i32 10, i64 2, i64 2
  store float 1.000000e+00, ptr %868, align 8, !tbaa !82
  %869 = getelementptr inbounds %struct.TransData, ptr %772, i64 1, i32 13
  store ptr null, ptr %869, align 8, !tbaa !334
  %870 = getelementptr inbounds %struct.TransData, ptr %772, i64 1, i32 5
  store ptr null, ptr %870, align 8, !tbaa !423
  store i32 257, ptr %853, align 8, !tbaa !20
  store float 0.000000e+00, ptr %778, align 8, !tbaa !25
  %871 = getelementptr inbounds %struct.TransData, ptr %772, i64 1, i32 8
  call void @unit_m3(ptr noundef nonnull %871) #18
  %872 = getelementptr inbounds %struct.TransData, ptr %772, i64 1, i32 9
  call void @unit_m3(ptr noundef nonnull %872) #18
  %873 = load i32, ptr %773, align 8, !tbaa !289
  %874 = and i32 %873, 1
  br label %875

875:                                              ; preds = %777, %769
  %876 = phi i32 [ 0, %769 ], [ %874, %777 ]
  %877 = load i32, ptr %435, align 8, !tbaa !281
  %878 = and i32 %877, 1
  %879 = icmp eq i32 %878, 0
  %880 = getelementptr inbounds %struct.TransData, ptr %432, i64 2
  %881 = getelementptr inbounds %struct.TransData2D, ptr %434, i64 2
  %882 = getelementptr inbounds %struct.TransDataTracking, ptr %433, i64 2
  %883 = select i1 %879, ptr %474, ptr %881
  %884 = select i1 %879, ptr %475, ptr %882
  %885 = select i1 %879, ptr %473, ptr %880
  %886 = load i32, ptr %568, align 4, !tbaa !288
  %887 = shl i32 %886, 2
  %888 = and i32 %887, 4
  %889 = zext i32 %888 to i64
  %890 = getelementptr inbounds %struct.TransData2D, ptr %883, i64 %889
  %891 = getelementptr inbounds %struct.TransDataTracking, ptr %884, i64 %889
  %892 = getelementptr inbounds %struct.TransData, ptr %885, i64 %889
  %893 = icmp eq i32 %876, 0
  br i1 %893, label %898, label %894

894:                                              ; preds = %875
  %895 = getelementptr inbounds %struct.TransData, ptr %892, i64 2
  %896 = getelementptr inbounds %struct.TransData2D, ptr %890, i64 2
  %897 = getelementptr inbounds %struct.TransDataTracking, ptr %891, i64 2
  br label %898

898:                                              ; preds = %894, %875, %462, %454, %451, %430
  %899 = phi ptr [ %896, %894 ], [ %890, %875 ], [ %434, %462 ], [ %434, %454 ], [ %434, %451 ], [ %434, %430 ]
  %900 = phi ptr [ %897, %894 ], [ %891, %875 ], [ %433, %462 ], [ %433, %454 ], [ %433, %451 ], [ %433, %430 ]
  %901 = phi ptr [ %895, %894 ], [ %892, %875 ], [ %432, %462 ], [ %432, %454 ], [ %432, %451 ], [ %432, %430 ]
  %902 = load ptr, ptr %431, align 8, !tbaa !33
  %903 = icmp eq ptr %902, null
  br i1 %903, label %424, label %430, !llvm.loop !550

904:                                              ; preds = %424, %1048
  %905 = phi ptr [ %1052, %1048 ], [ %428, %424 ]
  %906 = phi ptr [ %1051, %1048 ], [ %427, %424 ]
  %907 = phi ptr [ %1050, %1048 ], [ %426, %424 ]
  %908 = phi ptr [ %1049, %1048 ], [ %425, %424 ]
  %909 = getelementptr inbounds %struct.MovieTrackingPlaneTrack, ptr %905, i64 0, i32 8
  %910 = load i32, ptr %909, align 4, !tbaa !277
  %911 = and i32 %910, 3
  %912 = icmp eq i32 %911, 1
  br i1 %912, label %913, label %1048

913:                                              ; preds = %904
  %914 = load float, ptr %3, align 4, !tbaa !82
  %915 = load float, ptr %4, align 4, !tbaa !82
  %916 = call ptr @BKE_tracking_plane_marker_ensure(ptr noundef nonnull %905, i32 noundef %318) #18
  %917 = getelementptr inbounds %struct.MovieTrackingPlaneMarker, ptr %916, i64 0, i32 2
  %918 = load i32, ptr %917, align 4, !tbaa !366
  %919 = getelementptr inbounds %struct.TransDataTracking, ptr %907, i64 0, i32 1
  store i32 %918, ptr %919, align 4, !tbaa !360
  %920 = and i32 %918, -3
  store i32 %920, ptr %917, align 4, !tbaa !366
  %921 = getelementptr inbounds %struct.TransData, ptr %906, i64 1
  %922 = getelementptr inbounds %struct.TransData2D, ptr %908, i64 1
  %923 = getelementptr inbounds %struct.TransDataTracking, ptr %907, i64 1
  store i32 2, ptr %907, align 8, !tbaa !357
  %924 = getelementptr inbounds %struct.TransDataTracking, ptr %907, i64 0, i32 15
  store ptr %905, ptr %924, align 8, !tbaa !365
  %925 = load float, ptr %916, align 4, !tbaa !82
  %926 = fmul fast float %925, %914
  store float %926, ptr %908, align 8, !tbaa !82
  %927 = getelementptr inbounds float, ptr %916, i64 1
  %928 = load float, ptr %927, align 4, !tbaa !82
  %929 = fmul fast float %928, %915
  %930 = getelementptr inbounds [3 x float], ptr %908, i64 0, i64 1
  store float %929, ptr %930, align 4, !tbaa !82
  %931 = getelementptr inbounds %struct.TransData2D, ptr %908, i64 0, i32 1
  store ptr %916, ptr %931, align 8, !tbaa !178
  %932 = getelementptr inbounds [3 x float], ptr %908, i64 0, i64 2
  store float 0.000000e+00, ptr %932, align 8, !tbaa !82
  %933 = getelementptr inbounds %struct.TransData, ptr %906, i64 0, i32 16
  %934 = getelementptr inbounds %struct.TransData, ptr %906, i64 0, i32 3
  store ptr %908, ptr %934, align 8, !tbaa !182
  %935 = getelementptr inbounds %struct.TransData, ptr %906, i64 0, i32 4
  store float %926, ptr %935, align 4, !tbaa !82
  %936 = load float, ptr %930, align 4, !tbaa !82
  %937 = getelementptr inbounds %struct.TransData, ptr %906, i64 0, i32 4, i64 1
  store float %936, ptr %937, align 4, !tbaa !82
  %938 = load float, ptr %932, align 4, !tbaa !82
  %939 = getelementptr inbounds %struct.TransData, ptr %906, i64 0, i32 4, i64 2
  store float %938, ptr %939, align 4, !tbaa !82
  %940 = getelementptr inbounds %struct.TransData, ptr %906, i64 0, i32 7
  %941 = load float, ptr %908, align 4, !tbaa !82
  store float %941, ptr %940, align 4, !tbaa !82
  %942 = load float, ptr %930, align 4, !tbaa !82
  %943 = getelementptr inbounds %struct.TransData, ptr %906, i64 0, i32 7, i64 1
  store float %942, ptr %943, align 4, !tbaa !82
  %944 = load float, ptr %932, align 4, !tbaa !82
  %945 = getelementptr inbounds %struct.TransData, ptr %906, i64 0, i32 7, i64 2
  store float %944, ptr %945, align 4, !tbaa !82
  %946 = getelementptr inbounds %struct.TransData, ptr %906, i64 0, i32 10
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(36) %946, i8 0, i64 32, i1 false)
  %947 = getelementptr inbounds %struct.TransData, ptr %906, i64 0, i32 10, i64 2, i64 2
  store float 1.000000e+00, ptr %947, align 8, !tbaa !82
  %948 = getelementptr inbounds %struct.TransData, ptr %906, i64 0, i32 13
  store ptr null, ptr %948, align 8, !tbaa !334
  %949 = getelementptr inbounds %struct.TransData, ptr %906, i64 0, i32 5
  store ptr null, ptr %949, align 8, !tbaa !423
  store i32 1, ptr %933, align 8, !tbaa !20
  store float 0.000000e+00, ptr %906, align 8, !tbaa !25
  %950 = getelementptr inbounds %struct.TransData, ptr %906, i64 0, i32 8
  call void @unit_m3(ptr noundef nonnull %950) #18
  %951 = getelementptr inbounds %struct.TransData, ptr %906, i64 0, i32 9
  call void @unit_m3(ptr noundef nonnull %951) #18
  %952 = getelementptr inbounds %struct.TransData, ptr %906, i64 2
  %953 = getelementptr inbounds %struct.TransData2D, ptr %908, i64 2
  %954 = getelementptr inbounds %struct.TransDataTracking, ptr %907, i64 2
  %955 = getelementptr inbounds [4 x [2 x float]], ptr %916, i64 0, i64 1
  store i32 2, ptr %923, align 8, !tbaa !357
  %956 = getelementptr inbounds %struct.TransDataTracking, ptr %907, i64 1, i32 15
  store ptr %905, ptr %956, align 8, !tbaa !365
  %957 = load float, ptr %955, align 4, !tbaa !82
  %958 = fmul fast float %957, %914
  store float %958, ptr %922, align 8, !tbaa !82
  %959 = getelementptr inbounds [4 x [2 x float]], ptr %916, i64 0, i64 1, i64 1
  %960 = load float, ptr %959, align 4, !tbaa !82
  %961 = fmul fast float %960, %915
  %962 = getelementptr inbounds %struct.TransData2D, ptr %908, i64 1, i32 0, i64 1
  store float %961, ptr %962, align 4, !tbaa !82
  %963 = getelementptr inbounds %struct.TransData2D, ptr %908, i64 1, i32 1
  store ptr %955, ptr %963, align 8, !tbaa !178
  %964 = getelementptr inbounds %struct.TransData2D, ptr %908, i64 1, i32 0, i64 2
  store float 0.000000e+00, ptr %964, align 8, !tbaa !82
  %965 = getelementptr inbounds %struct.TransData, ptr %906, i64 1, i32 16
  %966 = getelementptr inbounds %struct.TransData, ptr %906, i64 1, i32 3
  store ptr %922, ptr %966, align 8, !tbaa !182
  %967 = getelementptr inbounds %struct.TransData, ptr %906, i64 1, i32 4
  store float %958, ptr %967, align 4, !tbaa !82
  %968 = load float, ptr %962, align 4, !tbaa !82
  %969 = getelementptr inbounds %struct.TransData, ptr %906, i64 1, i32 4, i64 1
  store float %968, ptr %969, align 4, !tbaa !82
  %970 = load float, ptr %964, align 4, !tbaa !82
  %971 = getelementptr inbounds %struct.TransData, ptr %906, i64 1, i32 4, i64 2
  store float %970, ptr %971, align 4, !tbaa !82
  %972 = getelementptr inbounds %struct.TransData, ptr %906, i64 1, i32 7
  %973 = load float, ptr %922, align 4, !tbaa !82
  store float %973, ptr %972, align 4, !tbaa !82
  %974 = load float, ptr %962, align 4, !tbaa !82
  %975 = getelementptr inbounds %struct.TransData, ptr %906, i64 1, i32 7, i64 1
  store float %974, ptr %975, align 4, !tbaa !82
  %976 = load float, ptr %964, align 4, !tbaa !82
  %977 = getelementptr inbounds %struct.TransData, ptr %906, i64 1, i32 7, i64 2
  store float %976, ptr %977, align 4, !tbaa !82
  %978 = getelementptr inbounds %struct.TransData, ptr %906, i64 1, i32 10
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(36) %978, i8 0, i64 32, i1 false)
  %979 = getelementptr inbounds %struct.TransData, ptr %906, i64 1, i32 10, i64 2, i64 2
  store float 1.000000e+00, ptr %979, align 8, !tbaa !82
  %980 = getelementptr inbounds %struct.TransData, ptr %906, i64 1, i32 13
  store ptr null, ptr %980, align 8, !tbaa !334
  %981 = getelementptr inbounds %struct.TransData, ptr %906, i64 1, i32 5
  store ptr null, ptr %981, align 8, !tbaa !423
  store i32 1, ptr %965, align 8, !tbaa !20
  store float 0.000000e+00, ptr %921, align 8, !tbaa !25
  %982 = getelementptr inbounds %struct.TransData, ptr %906, i64 1, i32 8
  call void @unit_m3(ptr noundef nonnull %982) #18
  %983 = getelementptr inbounds %struct.TransData, ptr %906, i64 1, i32 9
  call void @unit_m3(ptr noundef nonnull %983) #18
  %984 = getelementptr inbounds %struct.TransData, ptr %906, i64 3
  %985 = getelementptr inbounds %struct.TransData2D, ptr %908, i64 3
  %986 = getelementptr inbounds %struct.TransDataTracking, ptr %907, i64 3
  %987 = getelementptr inbounds [4 x [2 x float]], ptr %916, i64 0, i64 2
  store i32 2, ptr %954, align 8, !tbaa !357
  %988 = getelementptr inbounds %struct.TransDataTracking, ptr %907, i64 2, i32 15
  store ptr %905, ptr %988, align 8, !tbaa !365
  %989 = load float, ptr %987, align 4, !tbaa !82
  %990 = fmul fast float %989, %914
  store float %990, ptr %953, align 8, !tbaa !82
  %991 = getelementptr inbounds [4 x [2 x float]], ptr %916, i64 0, i64 2, i64 1
  %992 = load float, ptr %991, align 4, !tbaa !82
  %993 = fmul fast float %992, %915
  %994 = getelementptr inbounds %struct.TransData2D, ptr %908, i64 2, i32 0, i64 1
  store float %993, ptr %994, align 4, !tbaa !82
  %995 = getelementptr inbounds %struct.TransData2D, ptr %908, i64 2, i32 1
  store ptr %987, ptr %995, align 8, !tbaa !178
  %996 = getelementptr inbounds %struct.TransData2D, ptr %908, i64 2, i32 0, i64 2
  store float 0.000000e+00, ptr %996, align 8, !tbaa !82
  %997 = getelementptr inbounds %struct.TransData, ptr %906, i64 2, i32 16
  %998 = getelementptr inbounds %struct.TransData, ptr %906, i64 2, i32 3
  store ptr %953, ptr %998, align 8, !tbaa !182
  %999 = getelementptr inbounds %struct.TransData, ptr %906, i64 2, i32 4
  store float %990, ptr %999, align 4, !tbaa !82
  %1000 = load float, ptr %994, align 4, !tbaa !82
  %1001 = getelementptr inbounds %struct.TransData, ptr %906, i64 2, i32 4, i64 1
  store float %1000, ptr %1001, align 4, !tbaa !82
  %1002 = load float, ptr %996, align 4, !tbaa !82
  %1003 = getelementptr inbounds %struct.TransData, ptr %906, i64 2, i32 4, i64 2
  store float %1002, ptr %1003, align 4, !tbaa !82
  %1004 = getelementptr inbounds %struct.TransData, ptr %906, i64 2, i32 7
  %1005 = load float, ptr %953, align 4, !tbaa !82
  store float %1005, ptr %1004, align 4, !tbaa !82
  %1006 = load float, ptr %994, align 4, !tbaa !82
  %1007 = getelementptr inbounds %struct.TransData, ptr %906, i64 2, i32 7, i64 1
  store float %1006, ptr %1007, align 4, !tbaa !82
  %1008 = load float, ptr %996, align 4, !tbaa !82
  %1009 = getelementptr inbounds %struct.TransData, ptr %906, i64 2, i32 7, i64 2
  store float %1008, ptr %1009, align 4, !tbaa !82
  %1010 = getelementptr inbounds %struct.TransData, ptr %906, i64 2, i32 10
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(36) %1010, i8 0, i64 32, i1 false)
  %1011 = getelementptr inbounds %struct.TransData, ptr %906, i64 2, i32 10, i64 2, i64 2
  store float 1.000000e+00, ptr %1011, align 8, !tbaa !82
  %1012 = getelementptr inbounds %struct.TransData, ptr %906, i64 2, i32 13
  store ptr null, ptr %1012, align 8, !tbaa !334
  %1013 = getelementptr inbounds %struct.TransData, ptr %906, i64 2, i32 5
  store ptr null, ptr %1013, align 8, !tbaa !423
  store i32 1, ptr %997, align 8, !tbaa !20
  store float 0.000000e+00, ptr %952, align 8, !tbaa !25
  %1014 = getelementptr inbounds %struct.TransData, ptr %906, i64 2, i32 8
  call void @unit_m3(ptr noundef nonnull %1014) #18
  %1015 = getelementptr inbounds %struct.TransData, ptr %906, i64 2, i32 9
  call void @unit_m3(ptr noundef nonnull %1015) #18
  %1016 = getelementptr inbounds [4 x [2 x float]], ptr %916, i64 0, i64 3
  store i32 2, ptr %986, align 8, !tbaa !357
  %1017 = getelementptr inbounds %struct.TransDataTracking, ptr %907, i64 3, i32 15
  store ptr %905, ptr %1017, align 8, !tbaa !365
  %1018 = load float, ptr %1016, align 4, !tbaa !82
  %1019 = fmul fast float %1018, %914
  store float %1019, ptr %985, align 8, !tbaa !82
  %1020 = getelementptr inbounds [4 x [2 x float]], ptr %916, i64 0, i64 3, i64 1
  %1021 = load float, ptr %1020, align 4, !tbaa !82
  %1022 = fmul fast float %1021, %915
  %1023 = getelementptr inbounds %struct.TransData2D, ptr %908, i64 3, i32 0, i64 1
  store float %1022, ptr %1023, align 4, !tbaa !82
  %1024 = getelementptr inbounds %struct.TransData2D, ptr %908, i64 3, i32 1
  store ptr %1016, ptr %1024, align 8, !tbaa !178
  %1025 = getelementptr inbounds %struct.TransData2D, ptr %908, i64 3, i32 0, i64 2
  store float 0.000000e+00, ptr %1025, align 8, !tbaa !82
  %1026 = getelementptr inbounds %struct.TransData, ptr %906, i64 3, i32 16
  %1027 = getelementptr inbounds %struct.TransData, ptr %906, i64 3, i32 3
  store ptr %985, ptr %1027, align 8, !tbaa !182
  %1028 = getelementptr inbounds %struct.TransData, ptr %906, i64 3, i32 4
  store float %1019, ptr %1028, align 4, !tbaa !82
  %1029 = load float, ptr %1023, align 4, !tbaa !82
  %1030 = getelementptr inbounds %struct.TransData, ptr %906, i64 3, i32 4, i64 1
  store float %1029, ptr %1030, align 4, !tbaa !82
  %1031 = load float, ptr %1025, align 4, !tbaa !82
  %1032 = getelementptr inbounds %struct.TransData, ptr %906, i64 3, i32 4, i64 2
  store float %1031, ptr %1032, align 4, !tbaa !82
  %1033 = getelementptr inbounds %struct.TransData, ptr %906, i64 3, i32 7
  %1034 = load float, ptr %985, align 4, !tbaa !82
  store float %1034, ptr %1033, align 4, !tbaa !82
  %1035 = load float, ptr %1023, align 4, !tbaa !82
  %1036 = getelementptr inbounds %struct.TransData, ptr %906, i64 3, i32 7, i64 1
  store float %1035, ptr %1036, align 4, !tbaa !82
  %1037 = load float, ptr %1025, align 4, !tbaa !82
  %1038 = getelementptr inbounds %struct.TransData, ptr %906, i64 3, i32 7, i64 2
  store float %1037, ptr %1038, align 4, !tbaa !82
  %1039 = getelementptr inbounds %struct.TransData, ptr %906, i64 3, i32 10
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(36) %1039, i8 0, i64 32, i1 false)
  %1040 = getelementptr inbounds %struct.TransData, ptr %906, i64 3, i32 10, i64 2, i64 2
  store float 1.000000e+00, ptr %1040, align 8, !tbaa !82
  %1041 = getelementptr inbounds %struct.TransData, ptr %906, i64 3, i32 13
  store ptr null, ptr %1041, align 8, !tbaa !334
  %1042 = getelementptr inbounds %struct.TransData, ptr %906, i64 3, i32 5
  store ptr null, ptr %1042, align 8, !tbaa !423
  store i32 1, ptr %1026, align 8, !tbaa !20
  store float 0.000000e+00, ptr %984, align 8, !tbaa !25
  %1043 = getelementptr inbounds %struct.TransData, ptr %906, i64 3, i32 8
  call void @unit_m3(ptr noundef nonnull %1043) #18
  %1044 = getelementptr inbounds %struct.TransData, ptr %906, i64 3, i32 9
  call void @unit_m3(ptr noundef nonnull %1044) #18
  %1045 = getelementptr inbounds %struct.TransData, ptr %906, i64 4
  %1046 = getelementptr inbounds %struct.TransData2D, ptr %908, i64 4
  %1047 = getelementptr inbounds %struct.TransDataTracking, ptr %907, i64 4
  br label %1048

1048:                                             ; preds = %913, %904
  %1049 = phi ptr [ %1046, %913 ], [ %908, %904 ]
  %1050 = phi ptr [ %1047, %913 ], [ %907, %904 ]
  %1051 = phi ptr [ %1045, %913 ], [ %906, %904 ]
  %1052 = load ptr, ptr %905, align 8, !tbaa !33
  %1053 = icmp eq ptr %1052, null
  br i1 %1053, label %1054, label %904, !llvm.loop !551

1054:                                             ; preds = %1048, %397, %424
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %4) #18
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #18
  br label %1055

1055:                                             ; preds = %315, %1054, %14, %2
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #18
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #18
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @createTransEditVerts(ptr nocapture noundef %0) unnamed_addr #6 {
  %2 = alloca ptr, align 8
  %3 = alloca %struct.BMEditSelection, align 8
  %4 = alloca [3 x float], align 8
  %5 = alloca [3 x float], align 8
  %6 = alloca [3 x float], align 8
  %7 = alloca [3 x float], align 8
  %8 = alloca [3 x float], align 8
  %9 = alloca %struct.BMIter, align 8
  %10 = alloca [3 x float], align 8
  %11 = alloca [3 x float], align 8
  %12 = alloca ptr, align 8
  %13 = alloca ptr, align 8
  %14 = alloca %struct.BMIter, align 8
  %15 = alloca %struct.BMIter, align 8
  %16 = alloca %struct.BMIter, align 8
  %17 = alloca %struct.BMIter, align 8
  %18 = alloca [3 x [3 x float]], align 16
  %19 = alloca [3 x [3 x float]], align 16
  %20 = alloca ptr, align 8
  %21 = alloca ptr, align 8
  %22 = alloca [3 x [3 x float]], align 16
  %23 = alloca [3 x [3 x float]], align 16
  %24 = alloca [3 x [3 x float]], align 16
  %25 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 63
  %26 = load ptr, ptr %25, align 8, !tbaa !69
  %27 = tail call ptr @BKE_editmesh_from_object(ptr noundef %26) #18
  %28 = load ptr, ptr %25, align 8, !tbaa !69
  %29 = getelementptr inbounds %struct.Object, ptr %28, i64 0, i32 19
  %30 = load ptr, ptr %29, align 8, !tbaa !34
  %31 = load ptr, ptr %27, align 8, !tbaa !253
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %17) #18
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %18) #18
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %19) #18
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %20) #18
  store ptr null, ptr %20, align 8, !tbaa !33
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %21) #18
  store ptr null, ptr %21, align 8, !tbaa !33
  %32 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 1
  %33 = load i32, ptr %32, align 4, !tbaa !24
  %34 = and i32 %33, 2048
  %35 = icmp eq i32 %34, 0
  %36 = and i32 %33, 33560576
  %37 = select i1 %35, i32 0, i32 %36
  %38 = and i32 %33, 524288
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %46, label %40

40:                                               ; preds = %1
  %41 = getelementptr inbounds %struct.Mesh, ptr %30, i64 0, i32 46
  %42 = load i8, ptr %41, align 1, !tbaa !552
  %43 = lshr i8 %42, 4
  %44 = and i8 %43, 1
  %45 = zext i1 %35 to i8
  tail call void @EDBM_verts_mirror_cache_begin(ptr noundef nonnull %27, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext %45, i8 noundef zeroext %44) #18
  br label %46

46:                                               ; preds = %40, %1
  %47 = getelementptr %struct.BMEditMesh, ptr %27, i64 0, i32 12
  %48 = load i16, ptr %47, align 4, !tbaa !554
  %49 = zext i16 %48 to i32
  %50 = and i32 %49, 1
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %56, label %52

52:                                               ; preds = %46
  %53 = getelementptr inbounds %struct.BMesh, ptr %31, i64 0, i32 4
  %54 = load i32, ptr %53, align 8, !tbaa !555
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %849, label %78

56:                                               ; preds = %46
  %57 = and i32 %49, 2
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %67, label %59

59:                                               ; preds = %56
  %60 = getelementptr inbounds %struct.BMesh, ptr %31, i64 0, i32 4
  %61 = load i32, ptr %60, align 8, !tbaa !555
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %849, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %struct.BMesh, ptr %31, i64 0, i32 5
  %65 = load i32, ptr %64, align 4, !tbaa !556
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %849, label %78

67:                                               ; preds = %56
  %68 = and i32 %49, 4
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %78, label %70

70:                                               ; preds = %67
  %71 = getelementptr inbounds %struct.BMesh, ptr %31, i64 0, i32 4
  %72 = load i32, ptr %71, align 8, !tbaa !555
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %849, label %74

74:                                               ; preds = %70
  %75 = getelementptr inbounds %struct.BMesh, ptr %31, i64 0, i32 6
  %76 = load i32, ptr %75, align 8, !tbaa !557
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %849, label %78

78:                                               ; preds = %63, %67, %74, %52
  %79 = load i32, ptr %0, align 8, !tbaa !161
  %80 = icmp eq i32 %79, 26
  br i1 %80, label %81, label %86

81:                                               ; preds = %78
  %82 = load ptr, ptr %25, align 8, !tbaa !69
  %83 = tail call ptr @BKE_mesh_from_object(ptr noundef %82) #18
  tail call void @BM_mesh_cd_flag_ensure(ptr noundef %31, ptr noundef %83, i8 noundef zeroext 1) #18
  %84 = getelementptr inbounds %struct.BMesh, ptr %31, i64 0, i32 24
  %85 = tail call i32 @CustomData_get_offset(ptr noundef nonnull %84, i32 noundef 29) #18
  br label %86

86:                                               ; preds = %81, %78
  %87 = phi i32 [ %85, %81 ], [ -1, %78 ]
  %88 = icmp eq i32 %37, 0
  br i1 %88, label %123, label %89

89:                                               ; preds = %86
  %90 = getelementptr inbounds %struct.BMIter, ptr %17, i64 0, i32 4
  store i8 1, ptr %90, align 4, !tbaa !410
  %91 = getelementptr inbounds %struct.BMIter, ptr %17, i64 0, i32 1
  store ptr @bmiter__elem_of_mesh_begin, ptr %91, align 8, !tbaa !412
  %92 = getelementptr inbounds %struct.BMIter, ptr %17, i64 0, i32 2
  store ptr @bmiter__elem_of_mesh_step, ptr %92, align 8, !tbaa !413
  %93 = getelementptr inbounds %struct.BMesh, ptr %31, i64 0, i32 9
  %94 = load ptr, ptr %93, align 8, !tbaa !558
  store ptr %94, ptr %17, align 8, !tbaa !51
  call void @bmiter__elem_of_mesh_begin(ptr noundef nonnull %17) #18
  %95 = load ptr, ptr %92, align 8, !tbaa !413
  %96 = call ptr %95(ptr noundef nonnull %17) #18
  %97 = icmp eq ptr %96, null
  br i1 %97, label %110, label %98

98:                                               ; preds = %89, %98
  %99 = phi ptr [ %108, %98 ], [ %96, %89 ]
  %100 = phi i32 [ %106, %98 ], [ 0, %89 ]
  %101 = getelementptr i8, ptr %99, i64 13
  %102 = load i8, ptr %101, align 1, !tbaa !255
  %103 = and i8 %102, 2
  %104 = icmp eq i8 %103, 0
  %105 = zext i1 %104 to i32
  %106 = add i32 %100, %105
  %107 = load ptr, ptr %92, align 8, !tbaa !413
  %108 = call ptr %107(ptr noundef nonnull %17) #18
  %109 = icmp eq ptr %108, null
  br i1 %109, label %110, label %98, !llvm.loop !559

110:                                              ; preds = %98, %89
  %111 = phi i32 [ 0, %89 ], [ %106, %98 ]
  %112 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 9
  store i32 %111, ptr %112, align 8, !tbaa !5
  %113 = and i32 %37, 4096
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %127, label %115

115:                                              ; preds = %110
  %116 = load ptr, ptr @MEM_mallocN, align 8, !tbaa !33
  %117 = load ptr, ptr %27, align 8, !tbaa !253
  %118 = load i32, ptr %117, align 8, !tbaa !560
  %119 = sext i32 %118 to i64
  %120 = shl nsw i64 %119, 2
  %121 = call ptr %116(i64 noundef %120, ptr noundef nonnull @.str.43) #18
  %122 = load i32, ptr %112, align 8, !tbaa !5
  br label %127

123:                                              ; preds = %86
  %124 = getelementptr inbounds %struct.BMesh, ptr %31, i64 0, i32 4
  %125 = load i32, ptr %124, align 8, !tbaa !555
  %126 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 9
  store i32 %125, ptr %126, align 8, !tbaa !5
  br label %127

127:                                              ; preds = %110, %115, %123
  %128 = phi i32 [ %125, %123 ], [ %122, %115 ], [ %111, %110 ]
  %129 = phi ptr [ null, %123 ], [ %121, %115 ], [ null, %110 ]
  %130 = load ptr, ptr @MEM_callocN, align 8, !tbaa !33
  %131 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 9
  %132 = sext i32 %128 to i64
  %133 = mul nsw i64 %132, 224
  %134 = call ptr %130(i64 noundef %133, ptr noundef nonnull @.str.44) #18
  %135 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 10
  store ptr %134, ptr %135, align 8, !tbaa !19
  %136 = load i32, ptr %0, align 8, !tbaa !161
  switch i32 %136, label %144 [
    i32 4, label %137
    i32 8, label %137
  ]

137:                                              ; preds = %127, %127
  %138 = load ptr, ptr @MEM_callocN, align 8, !tbaa !33
  %139 = load i32, ptr %131, align 8, !tbaa !5
  %140 = sext i32 %139 to i64
  %141 = mul nsw i64 %140, 384
  %142 = call ptr %138(i64 noundef %141, ptr noundef nonnull @.str.45) #18
  %143 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 11
  store ptr %142, ptr %143, align 8, !tbaa !406
  br label %144

144:                                              ; preds = %127, %137
  %145 = phi ptr [ %142, %137 ], [ null, %127 ]
  %146 = load ptr, ptr %25, align 8, !tbaa !69
  %147 = getelementptr inbounds %struct.Object, ptr %146, i64 0, i32 47
  call void @copy_m3_m4(ptr noundef nonnull %18, ptr noundef nonnull %147) #18
  call void @pseudoinverse_m3_m3(ptr noundef nonnull %19, ptr noundef nonnull %18, float noundef nofpclass(nan inf) 0x3E45798EE0000000) #18
  %148 = and i32 %37, 4096
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %379, label %150

150:                                              ; preds = %144
  %151 = load ptr, ptr %27, align 8, !tbaa !253
  %152 = load ptr, ptr @MEM_mallocN, align 8, !tbaa !33
  %153 = load i32, ptr %151, align 8, !tbaa !560
  %154 = sext i32 %153 to i64
  %155 = shl nsw i64 %154, 2
  %156 = call ptr %152(i64 noundef %155, ptr noundef nonnull @__func__.editmesh_set_connectivity_distance) #18
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %12) #18
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %13) #18
  store ptr null, ptr %12, align 8, !tbaa !33
  %157 = call ptr @BLI_mempool_create(i32 noundef 16, i32 noundef 0, i32 noundef 64, i32 noundef 0) #18
  store ptr null, ptr %13, align 8, !tbaa !33
  %158 = call ptr @BLI_mempool_create(i32 noundef 16, i32 noundef 0, i32 noundef 64, i32 noundef 0) #18
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %14) #18
  %159 = getelementptr inbounds %struct.BMIter, ptr %14, i64 0, i32 4
  store i8 1, ptr %159, align 4, !tbaa !410
  %160 = getelementptr inbounds %struct.BMIter, ptr %14, i64 0, i32 1
  store ptr @bmiter__elem_of_mesh_begin, ptr %160, align 8, !tbaa !412
  %161 = getelementptr inbounds %struct.BMIter, ptr %14, i64 0, i32 2
  store ptr @bmiter__elem_of_mesh_step, ptr %161, align 8, !tbaa !413
  %162 = getelementptr inbounds %struct.BMesh, ptr %151, i64 0, i32 9
  %163 = load ptr, ptr %162, align 8, !tbaa !558
  store ptr %163, ptr %14, align 8, !tbaa !51
  call void @bmiter__elem_of_mesh_begin(ptr noundef nonnull %14) #18
  %164 = load ptr, ptr %161, align 8, !tbaa !413
  %165 = call ptr %164(ptr noundef nonnull %14) #18
  %166 = icmp eq ptr %165, null
  br i1 %166, label %185, label %167

167:                                              ; preds = %150, %178
  %168 = phi i64 [ %183, %178 ], [ 0, %150 ]
  %169 = phi ptr [ %182, %178 ], [ %165, %150 ]
  %170 = getelementptr inbounds %struct.BMHeader, ptr %169, i64 0, i32 1
  %171 = trunc i64 %168 to i32
  store i32 %171, ptr %170, align 8, !tbaa !561
  %172 = getelementptr %struct.BMHeader, ptr %169, i64 0, i32 3
  %173 = load i8, ptr %172, align 1, !tbaa !255
  %174 = and i8 %173, -17
  store i8 %174, ptr %172, align 1, !tbaa !255
  %175 = and i8 %173, 3
  %176 = icmp eq i8 %175, 1
  br i1 %176, label %177, label %178

177:                                              ; preds = %167
  call void @BLI_linklist_prepend_pool(ptr noundef nonnull %12, ptr noundef nonnull %169, ptr noundef %157) #18
  br label %178

178:                                              ; preds = %177, %167
  %179 = phi float [ 0.000000e+00, %177 ], [ 0x47EFFFFFE0000000, %167 ]
  %180 = getelementptr inbounds float, ptr %129, i64 %168
  store float %179, ptr %180, align 4
  %181 = load ptr, ptr %161, align 8, !tbaa !413
  %182 = call ptr %181(ptr noundef nonnull %14) #18
  %183 = add nuw i64 %168, 1
  %184 = icmp eq ptr %182, null
  br i1 %184, label %185, label %167, !llvm.loop !562

185:                                              ; preds = %178, %150
  %186 = getelementptr inbounds %struct.BMesh, ptr %151, i64 0, i32 7
  %187 = load i8, ptr %186, align 4, !tbaa !563
  %188 = and i8 %187, -2
  store i8 %188, ptr %186, align 4, !tbaa !563
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %14) #18
  %189 = getelementptr inbounds %struct.BMIter, ptr %15, i64 0, i32 4
  %190 = getelementptr inbounds %struct.BMIter, ptr %15, i64 0, i32 1
  %191 = getelementptr inbounds %struct.BMIter, ptr %15, i64 0, i32 2
  %192 = getelementptr inbounds float, ptr %11, i64 1
  %193 = getelementptr inbounds float, ptr %11, i64 2
  %194 = getelementptr inbounds %struct.BMIter, ptr %16, i64 0, i32 4
  %195 = getelementptr inbounds %struct.BMIter, ptr %16, i64 0, i32 1
  %196 = getelementptr inbounds %struct.BMIter, ptr %16, i64 0, i32 2
  %197 = getelementptr inbounds float, ptr %10, i64 1
  %198 = getelementptr inbounds float, ptr %10, i64 2
  br label %199

199:                                              ; preds = %373, %185
  %200 = phi ptr [ %158, %185 ], [ %201, %373 ]
  %201 = phi ptr [ %157, %185 ], [ %200, %373 ]
  %202 = load i32, ptr %151, align 8, !tbaa !560
  %203 = sext i32 %202 to i64
  %204 = shl nsw i64 %203, 2
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %156, ptr align 4 %129, i64 %204, i1 false)
  %205 = load ptr, ptr %12, align 8, !tbaa !33
  %206 = icmp eq ptr %205, null
  br i1 %206, label %210, label %207

207:                                              ; preds = %199, %361
  %208 = call ptr @BLI_linklist_pop_pool(ptr noundef nonnull %12, ptr noundef %201) #18
  %209 = icmp eq ptr %208, null
  br i1 %209, label %210, label %213

210:                                              ; preds = %361, %207, %199
  %211 = load ptr, ptr %13, align 8, !tbaa !33
  %212 = icmp eq ptr %211, null
  br i1 %212, label %373, label %364

213:                                              ; preds = %207
  %214 = getelementptr inbounds %struct.BMVert, ptr %208, i64 0, i32 4
  %215 = load ptr, ptr %214, align 8, !tbaa !564
  %216 = icmp eq ptr %215, null
  br i1 %216, label %361, label %217

217:                                              ; preds = %213
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %15) #18
  store i8 4, ptr %189, align 4, !tbaa !410
  store ptr @bmiter__edge_of_vert_begin, ptr %190, align 8, !tbaa !412
  store ptr @bmiter__edge_of_vert_step, ptr %191, align 8, !tbaa !413
  store ptr %208, ptr %15, align 8, !tbaa !51
  call void @bmiter__edge_of_vert_begin(ptr noundef nonnull %15) #18
  %218 = load ptr, ptr %191, align 8, !tbaa !413
  %219 = call ptr %218(ptr noundef nonnull %15) #18
  %220 = icmp eq ptr %219, null
  br i1 %220, label %221, label %222

221:                                              ; preds = %217
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %15) #18
  br label %361

222:                                              ; preds = %217
  %223 = getelementptr i8, ptr %208, i64 8
  %224 = getelementptr inbounds %struct.BMVert, ptr %208, i64 0, i32 2
  %225 = getelementptr inbounds %struct.BMVert, ptr %208, i64 0, i32 2, i64 2
  br label %226

226:                                              ; preds = %287, %222
  %227 = phi ptr [ %219, %222 ], [ %289, %287 ]
  %228 = phi i8 [ 0, %222 ], [ %233, %287 ]
  %229 = getelementptr i8, ptr %227, i64 40
  %230 = load ptr, ptr %229, align 8, !tbaa !566
  %231 = icmp ne ptr %230, null
  %232 = zext i1 %231 to i8
  %233 = or i8 %228, %232
  %234 = getelementptr i8, ptr %227, i64 13
  %235 = load i8, ptr %234, align 1, !tbaa !255
  %236 = and i8 %235, 2
  %237 = icmp eq i8 %236, 0
  br i1 %237, label %238, label %287

238:                                              ; preds = %226
  %239 = getelementptr inbounds %struct.BMEdge, ptr %227, i64 0, i32 2
  %240 = load ptr, ptr %239, align 8, !tbaa !418
  %241 = icmp eq ptr %240, %208
  %242 = getelementptr inbounds %struct.BMEdge, ptr %227, i64 0, i32 3
  %243 = load ptr, ptr %242, align 8, !tbaa !421
  %244 = icmp eq ptr %243, %208
  %245 = select i1 %244, ptr %240, ptr null
  %246 = select i1 %241, ptr %243, ptr %245
  %247 = getelementptr i8, ptr %246, i64 13
  %248 = load i8, ptr %247, align 1, !tbaa !255
  %249 = and i8 %248, 3
  %250 = icmp eq i8 %249, 0
  br i1 %250, label %251, label %287

251:                                              ; preds = %238
  %252 = load i32, ptr %223, align 8, !tbaa !561
  %253 = getelementptr i8, ptr %246, i64 8
  %254 = load i32, ptr %253, align 8, !tbaa !561
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %11) #18
  %255 = getelementptr inbounds %struct.BMVert, ptr %246, i64 0, i32 2
  %256 = load <2 x float>, ptr %224, align 4, !tbaa !82
  %257 = load <2 x float>, ptr %255, align 4, !tbaa !82
  %258 = fsub fast <2 x float> %256, %257
  store <2 x float> %258, ptr %11, align 8, !tbaa !82
  %259 = load float, ptr %225, align 4, !tbaa !82
  %260 = getelementptr inbounds %struct.BMVert, ptr %246, i64 0, i32 2, i64 2
  %261 = load float, ptr %260, align 4, !tbaa !82
  %262 = fsub fast float %259, %261
  store float %262, ptr %193, align 8, !tbaa !82
  call void @mul_m3_v3(ptr noundef nonnull %18, ptr noundef nonnull %11) #18
  %263 = sext i32 %252 to i64
  %264 = getelementptr inbounds float, ptr %156, i64 %263
  %265 = load float, ptr %264, align 4, !tbaa !82
  %266 = load float, ptr %11, align 8, !tbaa !82
  %267 = fmul fast float %266, %266
  %268 = load <2 x float>, ptr %192, align 4, !tbaa !82
  %269 = fmul fast <2 x float> %268, %268
  %270 = extractelement <2 x float> %269, i64 0
  %271 = fadd fast float %270, %267
  %272 = extractelement <2 x float> %269, i64 1
  %273 = fadd fast float %271, %272
  %274 = call fast float @llvm.sqrt.f32(float %273)
  %275 = fadd fast float %274, %265
  %276 = sext i32 %254 to i64
  %277 = getelementptr inbounds float, ptr %129, i64 %276
  %278 = load float, ptr %277, align 4, !tbaa !82
  %279 = fcmp fast olt float %275, %278
  br i1 %279, label %281, label %280

280:                                              ; preds = %251
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %11) #18
  br label %287

281:                                              ; preds = %251
  store float %275, ptr %277, align 4, !tbaa !82
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %11) #18
  %282 = load i8, ptr %247, align 1, !tbaa !255
  %283 = and i8 %282, 16
  %284 = icmp eq i8 %283, 0
  br i1 %284, label %285, label %287

285:                                              ; preds = %281
  %286 = or i8 %282, 16
  store i8 %286, ptr %247, align 1, !tbaa !255
  call void @BLI_linklist_prepend_pool(ptr noundef nonnull %13, ptr noundef nonnull %246, ptr noundef %200) #18
  br label %287

287:                                              ; preds = %285, %281, %280, %238, %226
  %288 = load ptr, ptr %191, align 8, !tbaa !413
  %289 = call ptr %288(ptr noundef nonnull %15) #18
  %290 = icmp eq ptr %289, null
  br i1 %290, label %291, label %226, !llvm.loop !567

291:                                              ; preds = %287
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %15) #18
  %292 = icmp eq i8 %233, 0
  br i1 %292, label %361, label %293

293:                                              ; preds = %291
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %16) #18
  store i8 6, ptr %194, align 4, !tbaa !410
  store ptr @bmiter__loop_of_vert_begin, ptr %195, align 8, !tbaa !412
  store ptr @bmiter__loop_of_vert_step, ptr %196, align 8, !tbaa !413
  store ptr %208, ptr %16, align 8, !tbaa !51
  call void @bmiter__loop_of_vert_begin(ptr noundef nonnull %16) #18
  %294 = load ptr, ptr %196, align 8, !tbaa !413
  %295 = call ptr %294(ptr noundef nonnull %16) #18
  %296 = icmp eq ptr %295, null
  br i1 %296, label %360, label %297

297:                                              ; preds = %293, %356
  %298 = phi ptr [ %358, %356 ], [ %295, %293 ]
  %299 = getelementptr inbounds %struct.BMLoop, ptr %298, i64 0, i32 3
  %300 = load ptr, ptr %299, align 8, !tbaa !568
  %301 = getelementptr i8, ptr %300, i64 13
  %302 = load i8, ptr %301, align 1, !tbaa !255
  %303 = and i8 %302, 2
  %304 = icmp eq i8 %303, 0
  br i1 %304, label %305, label %356

305:                                              ; preds = %297
  %306 = getelementptr inbounds %struct.BMFace, ptr %300, i64 0, i32 3
  %307 = load i32, ptr %306, align 8, !tbaa !569
  %308 = icmp eq i32 %307, 4
  br i1 %308, label %309, label %356

309:                                              ; preds = %305
  %310 = getelementptr inbounds %struct.BMLoop, ptr %298, i64 0, i32 6
  %311 = load ptr, ptr %310, align 8, !tbaa !570
  %312 = getelementptr inbounds %struct.BMLoop, ptr %311, i64 0, i32 6
  %313 = load ptr, ptr %312, align 8, !tbaa !570
  %314 = getelementptr inbounds %struct.BMLoop, ptr %313, i64 0, i32 1
  %315 = load ptr, ptr %314, align 8, !tbaa !571
  %316 = getelementptr i8, ptr %315, i64 13
  %317 = load i8, ptr %316, align 1, !tbaa !255
  %318 = and i8 %317, 3
  %319 = icmp eq i8 %318, 0
  br i1 %319, label %320, label %356

320:                                              ; preds = %309
  %321 = load i32, ptr %223, align 8, !tbaa !561
  %322 = getelementptr i8, ptr %315, i64 8
  %323 = load i32, ptr %322, align 8, !tbaa !561
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %10) #18
  %324 = getelementptr inbounds %struct.BMVert, ptr %315, i64 0, i32 2
  %325 = load <2 x float>, ptr %224, align 4, !tbaa !82
  %326 = load <2 x float>, ptr %324, align 4, !tbaa !82
  %327 = fsub fast <2 x float> %325, %326
  store <2 x float> %327, ptr %10, align 8, !tbaa !82
  %328 = load float, ptr %225, align 4, !tbaa !82
  %329 = getelementptr inbounds %struct.BMVert, ptr %315, i64 0, i32 2, i64 2
  %330 = load float, ptr %329, align 4, !tbaa !82
  %331 = fsub fast float %328, %330
  store float %331, ptr %198, align 8, !tbaa !82
  call void @mul_m3_v3(ptr noundef nonnull %18, ptr noundef nonnull %10) #18
  %332 = sext i32 %321 to i64
  %333 = getelementptr inbounds float, ptr %156, i64 %332
  %334 = load float, ptr %333, align 4, !tbaa !82
  %335 = load float, ptr %10, align 8, !tbaa !82
  %336 = fmul fast float %335, %335
  %337 = load <2 x float>, ptr %197, align 4, !tbaa !82
  %338 = fmul fast <2 x float> %337, %337
  %339 = extractelement <2 x float> %338, i64 0
  %340 = fadd fast float %339, %336
  %341 = extractelement <2 x float> %338, i64 1
  %342 = fadd fast float %340, %341
  %343 = call fast float @llvm.sqrt.f32(float %342)
  %344 = fadd fast float %343, %334
  %345 = sext i32 %323 to i64
  %346 = getelementptr inbounds float, ptr %129, i64 %345
  %347 = load float, ptr %346, align 4, !tbaa !82
  %348 = fcmp fast olt float %344, %347
  br i1 %348, label %350, label %349

349:                                              ; preds = %320
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %10) #18
  br label %356

350:                                              ; preds = %320
  store float %344, ptr %346, align 4, !tbaa !82
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %10) #18
  %351 = load i8, ptr %316, align 1, !tbaa !255
  %352 = and i8 %351, 16
  %353 = icmp eq i8 %352, 0
  br i1 %353, label %354, label %356

354:                                              ; preds = %350
  %355 = or i8 %351, 16
  store i8 %355, ptr %316, align 1, !tbaa !255
  call void @BLI_linklist_prepend_pool(ptr noundef nonnull %13, ptr noundef nonnull %315, ptr noundef %200) #18
  br label %356

356:                                              ; preds = %354, %350, %349, %309, %305, %297
  %357 = load ptr, ptr %196, align 8, !tbaa !413
  %358 = call ptr %357(ptr noundef nonnull %16) #18
  %359 = icmp eq ptr %358, null
  br i1 %359, label %360, label %297, !llvm.loop !572

360:                                              ; preds = %356, %293
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %16) #18
  br label %361

361:                                              ; preds = %360, %291, %221, %213
  %362 = load ptr, ptr %12, align 8, !tbaa !33
  %363 = icmp eq ptr %362, null
  br i1 %363, label %210, label %207, !llvm.loop !573

364:                                              ; preds = %210, %364
  %365 = phi ptr [ %371, %364 ], [ %211, %210 ]
  %366 = getelementptr inbounds %struct.LinkNode, ptr %365, i64 0, i32 1
  %367 = load ptr, ptr %366, align 8, !tbaa !574
  %368 = getelementptr inbounds %struct.BMHeader, ptr %367, i64 0, i32 3
  %369 = load i8, ptr %368, align 1, !tbaa !255
  %370 = and i8 %369, -17
  store i8 %370, ptr %368, align 1, !tbaa !255
  %371 = load ptr, ptr %365, align 8, !tbaa !33
  %372 = icmp eq ptr %371, null
  br i1 %372, label %373, label %364, !llvm.loop !576

373:                                              ; preds = %364, %210
  %374 = load ptr, ptr %12, align 8, !tbaa !33
  store ptr %211, ptr %12, align 8, !tbaa !33
  store ptr %374, ptr %13, align 8, !tbaa !33
  %375 = call i32 @BLI_mempool_count(ptr noundef %200) #18
  %376 = icmp eq i32 %375, 0
  br i1 %376, label %377, label %199, !llvm.loop !577

377:                                              ; preds = %373
  call void @BLI_mempool_destroy(ptr noundef %200) #18
  store ptr null, ptr %12, align 8, !tbaa !33
  call void @BLI_mempool_destroy(ptr noundef %201) #18
  store ptr null, ptr %13, align 8, !tbaa !33
  %378 = load ptr, ptr @MEM_freeN, align 8, !tbaa !33
  call void %378(ptr noundef %156) #18
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %13) #18
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %12) #18
  br label %379

379:                                              ; preds = %377, %144
  %380 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 32
  %381 = load i16, ptr %380, align 2, !tbaa !321
  %382 = icmp eq i16 %381, 2
  br i1 %382, label %383, label %536

383:                                              ; preds = %379
  %384 = load ptr, ptr %27, align 8, !tbaa !253
  %385 = load i16, ptr %47, align 4, !tbaa !554
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #18
  %386 = and i16 %385, 3
  %387 = icmp eq i16 %386, 0
  %388 = load ptr, ptr @MEM_mallocN, align 8, !tbaa !33
  br i1 %387, label %396, label %389

389:                                              ; preds = %383
  %390 = getelementptr inbounds %struct.BMesh, ptr %384, i64 0, i32 5
  %391 = load i32, ptr %390, align 4, !tbaa !556
  %392 = sext i32 %391 to i64
  %393 = shl nsw i64 %392, 2
  %394 = call ptr %388(i64 noundef %393, ptr noundef nonnull @__func__.editmesh_islands_info_calc) #18
  %395 = call i32 @BM_mesh_calc_edge_groups(ptr noundef %384, ptr noundef %394, ptr noundef nonnull %2, ptr noundef null, ptr noundef null, i8 noundef zeroext 1) #18
  br label %403

396:                                              ; preds = %383
  %397 = getelementptr inbounds %struct.BMesh, ptr %384, i64 0, i32 6
  %398 = load i32, ptr %397, align 8, !tbaa !557
  %399 = sext i32 %398 to i64
  %400 = shl nsw i64 %399, 2
  %401 = call ptr %388(i64 noundef %400, ptr noundef nonnull @__func__.editmesh_islands_info_calc) #18
  %402 = call i32 @BM_mesh_calc_face_groups(ptr noundef %384, ptr noundef %401, ptr noundef nonnull %2, ptr noundef null, ptr noundef null, i8 noundef zeroext 1, i8 noundef zeroext 1) #18
  br label %403

403:                                              ; preds = %396, %389
  %404 = phi i32 [ %395, %389 ], [ %402, %396 ]
  %405 = phi ptr [ %394, %389 ], [ %401, %396 ]
  %406 = phi i8 [ 7, %389 ], [ 9, %396 ]
  %407 = phi i8 [ 2, %389 ], [ 8, %396 ]
  %408 = load ptr, ptr @MEM_mallocN, align 8, !tbaa !33
  %409 = sext i32 %404 to i64
  %410 = mul nsw i64 %409, 48
  %411 = call ptr %408(i64 noundef %410, ptr noundef nonnull @__func__.editmesh_islands_info_calc) #18
  %412 = load ptr, ptr @MEM_mallocN, align 8, !tbaa !33
  %413 = load i32, ptr %384, align 8, !tbaa !560
  %414 = sext i32 %413 to i64
  %415 = shl nsw i64 %414, 2
  %416 = call ptr %412(i64 noundef %415, ptr noundef nonnull @__func__.editmesh_islands_info_calc) #18
  %417 = load i32, ptr %384, align 8, !tbaa !560
  call void @fill_vn_i(ptr noundef %416, i32 noundef %417, i32 noundef -1) #18
  call void @BM_mesh_elem_table_ensure(ptr noundef nonnull %384, i8 noundef zeroext %407) #18
  %418 = getelementptr inbounds %struct.BMesh, ptr %384, i64 0, i32 15
  %419 = getelementptr inbounds %struct.BMesh, ptr %384, i64 0, i32 14
  %420 = select i1 %387, ptr %418, ptr %419
  %421 = load ptr, ptr %420, align 8, !tbaa !33
  call void @BM_mesh_elem_index_ensure(ptr noundef nonnull %384, i8 noundef zeroext 1) #18
  %422 = icmp sgt i32 %404, 0
  br i1 %422, label %423, label %532

423:                                              ; preds = %403
  %424 = getelementptr inbounds float, ptr %4, i64 2
  %425 = getelementptr inbounds float, ptr %5, i64 2
  %426 = getelementptr inbounds %struct.BMEditSelection, ptr %3, i64 0, i32 3
  %427 = getelementptr inbounds %struct.BMEditSelection, ptr %3, i64 0, i32 2
  %428 = getelementptr inbounds float, ptr %6, i64 2
  %429 = getelementptr inbounds float, ptr %7, i64 2
  %430 = getelementptr inbounds float, ptr %8, i64 2
  %431 = getelementptr inbounds %struct.BMIter, ptr %9, i64 0, i32 4
  %432 = getelementptr inbounds %struct.BMIter, ptr %9, i64 0, i32 1
  %433 = getelementptr inbounds %struct.BMIter, ptr %9, i64 0, i32 2
  %434 = zext i32 %404 to i64
  br label %435

435:                                              ; preds = %529, %423
  %436 = phi i64 [ 0, %423 ], [ %530, %529 ]
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %3) #18
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %3, i8 0, i64 32, i1 false)
  %437 = load ptr, ptr %2, align 8, !tbaa !33
  %438 = getelementptr inbounds [2 x i32], ptr %437, i64 %436
  %439 = load i32, ptr %438, align 4, !tbaa !27
  %440 = getelementptr inbounds [2 x i32], ptr %437, i64 %436, i64 1
  %441 = load i32, ptr %440, align 4, !tbaa !27
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %4) #18
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %5) #18
  store <2 x float> zeroinitializer, ptr %4, align 8, !tbaa !82
  store float 0.000000e+00, ptr %424, align 8, !tbaa !82
  store <2 x float> zeroinitializer, ptr %5, align 8, !tbaa !82
  store float 0.000000e+00, ptr %425, align 8, !tbaa !82
  store i8 %407, ptr %426, align 8, !tbaa !578
  %442 = icmp sgt i32 %441, 0
  br i1 %442, label %443, label %493

443:                                              ; preds = %435
  %444 = sext i32 %439 to i64
  %445 = zext i32 %441 to i64
  %446 = trunc i64 %436 to i32
  br label %447

447:                                              ; preds = %490, %443
  %448 = phi i64 [ 0, %443 ], [ %491, %490 ]
  %449 = phi float [ 0.000000e+00, %443 ], [ %460, %490 ]
  %450 = phi <2 x float> [ zeroinitializer, %443 ], [ %458, %490 ]
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %6) #18
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %7) #18
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %8) #18
  %451 = add nsw i64 %448, %444
  %452 = getelementptr inbounds i32, ptr %405, i64 %451
  %453 = load i32, ptr %452, align 4, !tbaa !27
  %454 = sext i32 %453 to i64
  %455 = getelementptr inbounds ptr, ptr %421, i64 %454
  %456 = load ptr, ptr %455, align 8, !tbaa !33
  store ptr %456, ptr %427, align 8, !tbaa !580
  call void @BM_editselection_center(ptr noundef nonnull %3, ptr noundef nonnull %6) #18
  call void @BM_editselection_normal(ptr noundef nonnull %3, ptr noundef nonnull %7) #18
  call void @BM_editselection_plane(ptr noundef nonnull %3, ptr noundef nonnull %8) #18
  %457 = load <2 x float>, ptr %6, align 8, !tbaa !82
  %458 = fadd fast <2 x float> %457, %450
  %459 = load float, ptr %428, align 8, !tbaa !82
  %460 = fadd fast float %459, %449
  %461 = load <2 x float>, ptr %7, align 8, !tbaa !82
  %462 = load <2 x float>, ptr %4, align 8, !tbaa !82
  %463 = fadd fast <2 x float> %462, %461
  store <2 x float> %463, ptr %4, align 8, !tbaa !82
  %464 = load float, ptr %429, align 8, !tbaa !82
  %465 = load float, ptr %424, align 8, !tbaa !82
  %466 = fadd fast float %465, %464
  store float %466, ptr %424, align 8, !tbaa !82
  %467 = load <2 x float>, ptr %8, align 8, !tbaa !82
  %468 = load <2 x float>, ptr %5, align 8, !tbaa !82
  %469 = fadd fast <2 x float> %468, %467
  store <2 x float> %469, ptr %5, align 8, !tbaa !82
  %470 = load float, ptr %430, align 8, !tbaa !82
  %471 = load float, ptr %425, align 8, !tbaa !82
  %472 = fadd fast float %471, %470
  store float %472, ptr %425, align 8, !tbaa !82
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %9) #18
  %473 = load ptr, ptr %427, align 8, !tbaa !580
  store i8 %406, ptr %431, align 4, !tbaa !410
  switch i8 %406, label %490 [
    i8 9, label %474
    i8 7, label %475
  ]

474:                                              ; preds = %447
  br label %475

475:                                              ; preds = %474, %447
  %476 = phi ptr [ @bmiter__vert_of_face_begin, %474 ], [ @bmiter__vert_of_edge_begin, %447 ]
  %477 = phi ptr [ @bmiter__vert_of_face_step, %474 ], [ @bmiter__vert_of_edge_step, %447 ]
  store ptr %476, ptr %432, align 8, !tbaa !412
  store ptr %477, ptr %433, align 8, !tbaa !413
  store ptr %473, ptr %9, align 8, !tbaa !51
  call void %476(ptr noundef nonnull %9) #18
  %478 = load ptr, ptr %433, align 8, !tbaa !413
  %479 = call ptr %478(ptr noundef nonnull %9) #18
  %480 = icmp eq ptr %479, null
  br i1 %480, label %490, label %481

481:                                              ; preds = %475, %481
  %482 = phi ptr [ %488, %481 ], [ %479, %475 ]
  %483 = getelementptr i8, ptr %482, i64 8
  %484 = load i32, ptr %483, align 8, !tbaa !561
  %485 = sext i32 %484 to i64
  %486 = getelementptr inbounds i32, ptr %416, i64 %485
  store i32 %446, ptr %486, align 4, !tbaa !27
  %487 = load ptr, ptr %433, align 8, !tbaa !413
  %488 = call ptr %487(ptr noundef nonnull %9) #18
  %489 = icmp eq ptr %488, null
  br i1 %489, label %490, label %481, !llvm.loop !581

490:                                              ; preds = %481, %475, %447
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %9) #18
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %8) #18
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %7) #18
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %6) #18
  %491 = add nuw nsw i64 %448, 1
  %492 = icmp eq i64 %491, %445
  br i1 %492, label %493, label %447, !llvm.loop !582

493:                                              ; preds = %490, %435
  %494 = phi float [ 0.000000e+00, %435 ], [ %460, %490 ]
  %495 = phi <2 x float> [ zeroinitializer, %435 ], [ %458, %490 ]
  %496 = getelementptr inbounds %struct.TransIslandData, ptr %411, i64 %436
  %497 = sitofp i32 %441 to float
  %498 = fdiv fast float 1.000000e+00, %497
  %499 = insertelement <2 x float> poison, float %498, i64 0
  %500 = shufflevector <2 x float> %499, <2 x float> poison, <2 x i32> zeroinitializer
  %501 = fmul fast <2 x float> %495, %500
  store <2 x float> %501, ptr %496, align 4, !tbaa !82
  %502 = fmul fast float %494, %498
  %503 = getelementptr inbounds float, ptr %496, i64 2
  store float %502, ptr %503, align 4, !tbaa !82
  %504 = getelementptr inbounds %struct.TransIslandData, ptr %411, i64 %436, i32 1
  %505 = call zeroext i8 @createSpaceNormalTangent(ptr noundef nonnull %504, ptr noundef nonnull %4, ptr noundef nonnull %5) #18
  %506 = icmp eq i8 %505, 0
  br i1 %506, label %507, label %529

507:                                              ; preds = %493
  %508 = load <2 x float>, ptr %4, align 8, !tbaa !82
  %509 = fmul fast <2 x float> %508, %508
  %510 = shufflevector <2 x float> %509, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %511 = fadd fast <2 x float> %510, %509
  %512 = extractelement <2 x float> %511, i64 0
  %513 = load float, ptr %424, align 8, !tbaa !82
  %514 = fmul fast float %513, %513
  %515 = fadd fast float %512, %514
  %516 = fcmp fast ogt float %515, 0x38AA95A5C0000000
  br i1 %516, label %518, label %517

517:                                              ; preds = %507
  store <2 x float> zeroinitializer, ptr %4, align 8
  store float 0.000000e+00, ptr %424, align 8
  br label %528

518:                                              ; preds = %507
  %519 = call fast float @llvm.sqrt.f32(float %515)
  %520 = fdiv fast float 1.000000e+00, %519
  %521 = fmul fast float %520, %513
  %522 = insertelement <2 x float> poison, float %520, i64 0
  %523 = shufflevector <2 x float> %522, <2 x float> poison, <2 x i32> zeroinitializer
  %524 = fmul fast <2 x float> %523, %508
  store <2 x float> %524, ptr %4, align 8
  store float %521, ptr %424, align 8
  %525 = fcmp fast une float %519, 0.000000e+00
  br i1 %525, label %526, label %528

526:                                              ; preds = %518
  call void @axis_dominant_v3_to_m3(ptr noundef nonnull %504, ptr noundef nonnull %4) #18
  %527 = call zeroext i8 @invert_m3(ptr noundef nonnull %504) #18
  br label %529

528:                                              ; preds = %518, %517
  call void @unit_m3(ptr noundef nonnull %504) #18
  br label %529

529:                                              ; preds = %528, %526, %493
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %5) #18
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %4) #18
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %3) #18
  %530 = add nuw nsw i64 %436, 1
  %531 = icmp eq i64 %530, %434
  br i1 %531, label %532, label %435, !llvm.loop !583

532:                                              ; preds = %529, %403
  %533 = load ptr, ptr @MEM_freeN, align 8, !tbaa !33
  call void %533(ptr noundef %405) #18
  %534 = load ptr, ptr @MEM_freeN, align 8, !tbaa !33
  %535 = load ptr, ptr %2, align 8, !tbaa !33
  call void %534(ptr noundef %535) #18
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #18
  br label %536

536:                                              ; preds = %532, %379
  %537 = phi ptr [ %416, %532 ], [ null, %379 ]
  %538 = phi ptr [ %411, %532 ], [ null, %379 ]
  %539 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 56
  %540 = load ptr, ptr %539, align 8, !tbaa !89
  %541 = load ptr, ptr %25, align 8, !tbaa !69
  %542 = call i32 @modifiers_getCageIndex(ptr noundef %540, ptr noundef %541, ptr noundef null, i8 noundef zeroext 1) #18
  %543 = icmp eq i32 %542, -1
  br i1 %543, label %575, label %544

544:                                              ; preds = %536
  %545 = load ptr, ptr %539, align 8, !tbaa !89
  %546 = load ptr, ptr %25, align 8, !tbaa !69
  %547 = call zeroext i8 @modifiers_isCorrectableDeformed(ptr noundef %545, ptr noundef %546) #18
  %548 = icmp eq i8 %547, 0
  br i1 %548, label %569, label %549

549:                                              ; preds = %544
  %550 = load ptr, ptr %539, align 8, !tbaa !89
  %551 = load ptr, ptr %25, align 8, !tbaa !69
  %552 = call i32 @editbmesh_get_first_deform_matrices(ptr noundef %550, ptr noundef %551, ptr noundef nonnull %27, ptr noundef nonnull %20, ptr noundef nonnull %21) #18
  %553 = icmp sgt i32 %552, 0
  br i1 %553, label %554, label %569

554:                                              ; preds = %549
  %555 = load ptr, ptr %539, align 8, !tbaa !89
  %556 = load ptr, ptr %25, align 8, !tbaa !69
  %557 = call ptr @BKE_crazyspace_get_mapped_editverts(ptr noundef %555, ptr noundef %556) #18
  %558 = load ptr, ptr @MEM_mallocN, align 8, !tbaa !33
  %559 = load ptr, ptr %27, align 8, !tbaa !253
  %560 = load i32, ptr %559, align 8, !tbaa !560
  %561 = sext i32 %560 to i64
  %562 = shl nsw i64 %561, 4
  %563 = call ptr %558(i64 noundef %562, ptr noundef nonnull @.str.46) #18
  %564 = load ptr, ptr %21, align 8, !tbaa !33
  %565 = zext i1 %88 to i8
  call void @BKE_crazyspace_set_quats_editmesh(ptr noundef nonnull %27, ptr noundef %564, ptr noundef %557, ptr noundef %563, i8 noundef zeroext %565) #18
  %566 = icmp eq ptr %557, null
  br i1 %566, label %569, label %567

567:                                              ; preds = %554
  %568 = load ptr, ptr @MEM_freeN, align 8, !tbaa !33
  call void %568(ptr noundef nonnull %557) #18
  br label %569

569:                                              ; preds = %544, %554, %567, %549
  %570 = phi ptr [ %563, %567 ], [ %563, %554 ], [ null, %549 ], [ null, %544 ]
  %571 = load ptr, ptr %21, align 8, !tbaa !33
  %572 = icmp eq ptr %571, null
  br i1 %572, label %575, label %573

573:                                              ; preds = %569
  %574 = load ptr, ptr @MEM_freeN, align 8, !tbaa !33
  call void %574(ptr noundef nonnull %571) #18
  br label %575

575:                                              ; preds = %569, %573, %536
  %576 = phi ptr [ null, %536 ], [ %570, %573 ], [ %570, %569 ]
  br i1 %39, label %604, label %577

577:                                              ; preds = %575
  %578 = getelementptr inbounds %struct.BMIter, ptr %17, i64 0, i32 4
  store i8 1, ptr %578, align 4, !tbaa !410
  %579 = getelementptr inbounds %struct.BMIter, ptr %17, i64 0, i32 1
  store ptr @bmiter__elem_of_mesh_begin, ptr %579, align 8, !tbaa !412
  %580 = getelementptr inbounds %struct.BMIter, ptr %17, i64 0, i32 2
  store ptr @bmiter__elem_of_mesh_step, ptr %580, align 8, !tbaa !413
  %581 = getelementptr inbounds %struct.BMesh, ptr %31, i64 0, i32 9
  %582 = load ptr, ptr %581, align 8, !tbaa !558
  store ptr %582, ptr %17, align 8, !tbaa !51
  call void @bmiter__elem_of_mesh_begin(ptr noundef nonnull %17) #18
  %583 = load ptr, ptr %580, align 8, !tbaa !413
  %584 = call ptr %583(ptr noundef nonnull %17) #18
  %585 = icmp eq ptr %584, null
  br i1 %585, label %604, label %586

586:                                              ; preds = %577, %600
  %587 = phi ptr [ %602, %600 ], [ %584, %577 ]
  %588 = getelementptr i8, ptr %587, i64 13
  %589 = load i8, ptr %588, align 1, !tbaa !255
  %590 = and i8 %589, 1
  %591 = icmp eq i8 %590, 0
  br i1 %591, label %600, label %592

592:                                              ; preds = %586
  %593 = getelementptr inbounds %struct.BMVert, ptr %587, i64 0, i32 2
  %594 = load float, ptr %593, align 8, !tbaa !82
  %595 = fcmp fast une float %594, 0.000000e+00
  br i1 %595, label %596, label %600

596:                                              ; preds = %592
  %597 = fcmp fast olt float %594, 0.000000e+00
  br i1 %597, label %598, label %604

598:                                              ; preds = %596
  %599 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 46
  store i16 -1, ptr %599, align 8, !tbaa !584
  br label %604

600:                                              ; preds = %586, %592
  %601 = load ptr, ptr %580, align 8, !tbaa !413
  %602 = call ptr %601(ptr noundef nonnull %17) #18
  %603 = icmp eq ptr %602, null
  br i1 %603, label %604, label %586, !llvm.loop !585

604:                                              ; preds = %600, %577, %598, %596, %575
  %605 = phi i1 [ false, %598 ], [ true, %596 ], [ false, %575 ], [ true, %577 ], [ true, %600 ]
  %606 = phi i1 [ true, %598 ], [ false, %596 ], [ false, %575 ], [ false, %577 ], [ false, %600 ]
  %607 = getelementptr inbounds %struct.BMIter, ptr %17, i64 0, i32 4
  store i8 1, ptr %607, align 4, !tbaa !410
  %608 = getelementptr inbounds %struct.BMIter, ptr %17, i64 0, i32 1
  store ptr @bmiter__elem_of_mesh_begin, ptr %608, align 8, !tbaa !412
  %609 = getelementptr inbounds %struct.BMIter, ptr %17, i64 0, i32 2
  store ptr @bmiter__elem_of_mesh_step, ptr %609, align 8, !tbaa !413
  %610 = getelementptr inbounds %struct.BMesh, ptr %31, i64 0, i32 9
  %611 = load ptr, ptr %610, align 8, !tbaa !558
  store ptr %611, ptr %17, align 8, !tbaa !51
  call void @bmiter__elem_of_mesh_begin(ptr noundef nonnull %17) #18
  %612 = load ptr, ptr %609, align 8, !tbaa !413
  %613 = call ptr %612(ptr noundef nonnull %17) #18
  %614 = icmp eq ptr %613, null
  br i1 %614, label %791, label %615

615:                                              ; preds = %604
  %616 = icmp eq ptr %538, null
  %617 = icmp eq i32 %87, -1
  %618 = sext i32 %87 to i64
  %619 = icmp eq ptr %576, null
  br label %620

620:                                              ; preds = %615, %784
  %621 = phi i64 [ 0, %615 ], [ %789, %784 ]
  %622 = phi ptr [ %134, %615 ], [ %786, %784 ]
  %623 = phi ptr [ %145, %615 ], [ %785, %784 ]
  %624 = phi ptr [ %613, %615 ], [ %788, %784 ]
  %625 = getelementptr i8, ptr %624, i64 13
  %626 = load i8, ptr %625, align 1, !tbaa !255
  %627 = and i8 %626, 2
  %628 = icmp eq i8 %627, 0
  br i1 %628, label %629, label %784

629:                                              ; preds = %620
  %630 = and i8 %626, 1
  %631 = icmp eq i8 %630, 0
  %632 = and i1 %88, %631
  br i1 %632, label %784, label %633

633:                                              ; preds = %629
  br i1 %616, label %641, label %634

634:                                              ; preds = %633
  %635 = getelementptr inbounds i32, ptr %537, i64 %621
  %636 = load i32, ptr %635, align 4, !tbaa !27
  %637 = icmp eq i32 %636, -1
  br i1 %637, label %641, label %638

638:                                              ; preds = %634
  %639 = sext i32 %636 to i64
  %640 = getelementptr inbounds %struct.TransIslandData, ptr %538, i64 %639
  br label %641

641:                                              ; preds = %633, %634, %638
  %642 = phi ptr [ %640, %638 ], [ null, %634 ], [ null, %633 ]
  br i1 %617, label %646, label %643

643:                                              ; preds = %641
  %644 = load ptr, ptr %624, align 8, !tbaa !586
  %645 = getelementptr inbounds i8, ptr %644, i64 %618
  br label %646

646:                                              ; preds = %641, %643
  %647 = phi ptr [ %645, %643 ], [ null, %641 ]
  %648 = getelementptr inbounds %struct.TransData, ptr %622, i64 0, i32 16
  store i32 0, ptr %648, align 8, !tbaa !20
  %649 = getelementptr inbounds %struct.BMVert, ptr %624, i64 0, i32 2
  %650 = getelementptr inbounds %struct.TransData, ptr %622, i64 0, i32 3
  store ptr %649, ptr %650, align 8, !tbaa !182
  %651 = getelementptr inbounds %struct.TransData, ptr %622, i64 0, i32 4
  %652 = load float, ptr %649, align 4, !tbaa !82
  store float %652, ptr %651, align 4, !tbaa !82
  %653 = getelementptr inbounds %struct.BMVert, ptr %624, i64 0, i32 2, i64 1
  %654 = load float, ptr %653, align 4, !tbaa !82
  %655 = getelementptr inbounds %struct.TransData, ptr %622, i64 0, i32 4, i64 1
  store float %654, ptr %655, align 4, !tbaa !82
  %656 = getelementptr inbounds %struct.BMVert, ptr %624, i64 0, i32 2, i64 2
  %657 = load float, ptr %656, align 4, !tbaa !82
  %658 = getelementptr inbounds %struct.TransData, ptr %622, i64 0, i32 4, i64 2
  store float %657, ptr %658, align 4, !tbaa !82
  %659 = icmp eq ptr %642, null
  %660 = getelementptr inbounds %struct.TransData, ptr %622, i64 0, i32 7, i64 2
  %661 = getelementptr inbounds %struct.TransData, ptr %622, i64 0, i32 10
  br i1 %659, label %671, label %662

662:                                              ; preds = %646
  %663 = getelementptr inbounds %struct.TransData, ptr %622, i64 0, i32 7
  %664 = load float, ptr %642, align 4, !tbaa !82
  store float %664, ptr %663, align 4, !tbaa !82
  %665 = getelementptr inbounds float, ptr %642, i64 1
  %666 = load float, ptr %665, align 4, !tbaa !82
  %667 = getelementptr inbounds %struct.TransData, ptr %622, i64 0, i32 7, i64 1
  store float %666, ptr %667, align 4, !tbaa !82
  %668 = getelementptr inbounds float, ptr %642, i64 2
  %669 = load float, ptr %668, align 4, !tbaa !82
  store float %669, ptr %660, align 4, !tbaa !82
  %670 = getelementptr inbounds %struct.TransIslandData, ptr %642, i64 0, i32 1
  call void @copy_m3_m3(ptr noundef nonnull %661, ptr noundef nonnull %670) #18
  br label %692

671:                                              ; preds = %646
  %672 = load i16, ptr %380, align 2, !tbaa !321
  %673 = icmp eq i16 %672, 2
  %674 = getelementptr inbounds %struct.TransData, ptr %622, i64 0, i32 7
  %675 = load float, ptr %649, align 4, !tbaa !82
  store float %675, ptr %674, align 4, !tbaa !82
  %676 = load float, ptr %653, align 4, !tbaa !82
  %677 = getelementptr inbounds %struct.TransData, ptr %622, i64 0, i32 7, i64 1
  store float %676, ptr %677, align 4, !tbaa !82
  %678 = load float, ptr %656, align 4, !tbaa !82
  store float %678, ptr %660, align 4, !tbaa !82
  br i1 %673, label %679, label %682

679:                                              ; preds = %671
  %680 = getelementptr inbounds %struct.BMVert, ptr %624, i64 0, i32 3
  %681 = call zeroext i8 @createSpaceNormal(ptr noundef nonnull %661, ptr noundef nonnull %680) #18
  br label %692

682:                                              ; preds = %671
  %683 = getelementptr inbounds %struct.TransData, ptr %622, i64 0, i32 10, i64 2
  %684 = getelementptr inbounds %struct.BMVert, ptr %624, i64 0, i32 3
  %685 = load float, ptr %684, align 4, !tbaa !82
  store float %685, ptr %683, align 4, !tbaa !82
  %686 = getelementptr inbounds %struct.BMVert, ptr %624, i64 0, i32 3, i64 1
  %687 = load float, ptr %686, align 4, !tbaa !82
  %688 = getelementptr inbounds %struct.TransData, ptr %622, i64 0, i32 10, i64 2, i64 1
  store float %687, ptr %688, align 4, !tbaa !82
  %689 = getelementptr inbounds %struct.BMVert, ptr %624, i64 0, i32 3, i64 2
  %690 = load float, ptr %689, align 4, !tbaa !82
  %691 = getelementptr inbounds %struct.TransData, ptr %622, i64 0, i32 10, i64 2, i64 2
  store float %690, ptr %691, align 4, !tbaa !82
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %661, i8 0, i64 24, i1 false)
  br label %692

692:                                              ; preds = %682, %679, %662
  %693 = getelementptr inbounds %struct.TransData, ptr %622, i64 0, i32 13
  store ptr null, ptr %693, align 8, !tbaa !334
  %694 = getelementptr inbounds %struct.TransData, ptr %622, i64 0, i32 5
  store ptr null, ptr %694, align 8, !tbaa !423
  %695 = getelementptr inbounds %struct.TransData, ptr %622, i64 0, i32 15
  store ptr null, ptr %695, align 8, !tbaa !144
  %696 = load i32, ptr %0, align 8, !tbaa !161
  switch i32 %696, label %717 [
    i32 26, label %697
    i32 4, label %700
    i32 8, label %714
  ]

697:                                              ; preds = %692
  store ptr %647, ptr %694, align 8, !tbaa !423
  %698 = load float, ptr %647, align 4, !tbaa !82
  %699 = getelementptr inbounds %struct.TransData, ptr %622, i64 0, i32 6
  store float %698, ptr %699, align 8, !tbaa !424
  br label %717

700:                                              ; preds = %692
  %701 = load ptr, ptr %27, align 8, !tbaa !253
  %702 = getelementptr inbounds %struct.BMesh, ptr %701, i64 0, i32 24
  %703 = load ptr, ptr %624, align 8, !tbaa !586
  %704 = call ptr @CustomData_bmesh_get(ptr noundef nonnull %702, ptr noundef %703, i32 noundef 36) #18
  store ptr %623, ptr %693, align 8, !tbaa !334
  %705 = getelementptr inbounds %struct.TransDataExtension, ptr %623, i64 0, i32 12
  %706 = load float, ptr %704, align 4, !tbaa !82
  store float %706, ptr %705, align 4, !tbaa !82
  %707 = getelementptr inbounds float, ptr %704, i64 1
  %708 = load float, ptr %707, align 4, !tbaa !82
  %709 = getelementptr inbounds %struct.TransDataExtension, ptr %623, i64 0, i32 12, i64 1
  store float %708, ptr %709, align 4, !tbaa !82
  %710 = getelementptr inbounds float, ptr %704, i64 2
  %711 = load float, ptr %710, align 4, !tbaa !82
  %712 = getelementptr inbounds %struct.TransDataExtension, ptr %623, i64 0, i32 12, i64 2
  store float %711, ptr %712, align 4, !tbaa !82
  %713 = getelementptr inbounds %struct.TransDataExtension, ptr %623, i64 0, i32 11
  store ptr %704, ptr %713, align 8, !tbaa !409
  store ptr %704, ptr %694, align 8, !tbaa !423
  br label %717

714:                                              ; preds = %692
  store ptr %623, ptr %693, align 8, !tbaa !334
  %715 = call fast nofpclass(nan inf) float @BM_vert_calc_shell_factor_ex(ptr noundef nonnull %624, i8 noundef zeroext 1) #18
  %716 = getelementptr inbounds %struct.TransDataExtension, ptr %623, i64 0, i32 12
  store float %715, ptr %716, align 8, !tbaa !82
  br label %717

717:                                              ; preds = %692, %697, %700, %714
  %718 = icmp eq ptr %623, null
  %719 = getelementptr inbounds %struct.TransDataExtension, ptr %623, i64 1
  %720 = select i1 %718, ptr null, ptr %719
  %721 = load i8, ptr %625, align 1, !tbaa !255
  %722 = and i8 %721, 1
  %723 = icmp eq i8 %722, 0
  br i1 %723, label %727, label %724

724:                                              ; preds = %717
  %725 = load i32, ptr %648, align 8, !tbaa !20
  %726 = or i32 %725, 1
  store i32 %726, ptr %648, align 8, !tbaa !20
  br label %727

727:                                              ; preds = %724, %717
  br i1 %88, label %737, label %728

728:                                              ; preds = %727
  br i1 %149, label %732, label %729

729:                                              ; preds = %728
  %730 = getelementptr inbounds float, ptr %129, i64 %621
  %731 = load float, ptr %730, align 4, !tbaa !82
  br label %735

732:                                              ; preds = %728
  %733 = load i32, ptr %648, align 8, !tbaa !20
  %734 = or i32 %733, 16
  store i32 %734, ptr %648, align 8, !tbaa !20
  br label %735

735:                                              ; preds = %732, %729
  %736 = phi float [ %731, %729 ], [ 0x47EFFFFFE0000000, %732 ]
  store float %736, ptr %622, align 8, !tbaa !25
  br label %737

737:                                              ; preds = %735, %727
  %738 = load ptr, ptr %20, align 8, !tbaa !33
  %739 = icmp eq ptr %738, null
  br i1 %739, label %740, label %745

740:                                              ; preds = %737
  %741 = and i8 %721, 16
  %742 = icmp eq i8 %741, 0
  %743 = or i1 %619, %742
  br i1 %743, label %765, label %744

744:                                              ; preds = %740
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %22) #18
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %23) #18
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %24) #18
  br label %749

745:                                              ; preds = %737
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %22) #18
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %23) #18
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %24) #18
  %746 = and i8 %721, 16
  %747 = icmp eq i8 %746, 0
  %748 = or i1 %619, %747
  br i1 %748, label %759, label %749

749:                                              ; preds = %745, %744
  %750 = getelementptr i8, ptr %624, i64 8
  %751 = load i32, ptr %750, align 8, !tbaa !561
  %752 = sext i32 %751 to i64
  %753 = getelementptr inbounds [4 x float], ptr %576, i64 %752
  call void @quat_to_mat3(ptr noundef nonnull %23, ptr noundef nonnull %753) #18
  %754 = load ptr, ptr %20, align 8, !tbaa !33
  %755 = icmp eq ptr %754, null
  br i1 %755, label %758, label %756

756:                                              ; preds = %749
  %757 = getelementptr inbounds [3 x [3 x float]], ptr %754, i64 %621
  call void @_va_mul_m3_series_4(ptr noundef nonnull %22, ptr noundef nonnull %757, ptr noundef nonnull %23, ptr noundef nonnull %18) #18
  br label %761

758:                                              ; preds = %749
  call void @mul_m3_m3m3(ptr noundef nonnull %22, ptr noundef nonnull %18, ptr noundef nonnull %23) #18
  br label %761

759:                                              ; preds = %745
  %760 = getelementptr inbounds [3 x [3 x float]], ptr %738, i64 %621
  call void @mul_m3_m3m3(ptr noundef nonnull %22, ptr noundef nonnull %18, ptr noundef nonnull %760) #18
  br label %761

761:                                              ; preds = %756, %758, %759
  %762 = call zeroext i8 @invert_m3_m3(ptr noundef nonnull %24, ptr noundef nonnull %22) #18
  %763 = getelementptr inbounds %struct.TransData, ptr %622, i64 0, i32 9
  call void @copy_m3_m3(ptr noundef nonnull %763, ptr noundef nonnull %24) #18
  %764 = getelementptr inbounds %struct.TransData, ptr %622, i64 0, i32 8
  call void @copy_m3_m3(ptr noundef nonnull %764, ptr noundef nonnull %22) #18
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %24) #18
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %23) #18
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %22) #18
  br label %768

765:                                              ; preds = %740
  %766 = getelementptr inbounds %struct.TransData, ptr %622, i64 0, i32 9
  call void @copy_m3_m3(ptr noundef nonnull %766, ptr noundef nonnull %19) #18
  %767 = getelementptr inbounds %struct.TransData, ptr %622, i64 0, i32 8
  call void @copy_m3_m3(ptr noundef nonnull %767, ptr noundef nonnull %18) #18
  br label %768

768:                                              ; preds = %765, %761
  br i1 %605, label %769, label %772

769:                                              ; preds = %768
  %770 = load float, ptr %651, align 8, !tbaa !82
  %771 = fcmp fast ogt float %770, 0.000000e+00
  br i1 %771, label %776, label %772

772:                                              ; preds = %769, %768
  br i1 %606, label %773, label %782

773:                                              ; preds = %772
  %774 = load float, ptr %651, align 8, !tbaa !82
  %775 = fcmp fast olt float %774, 0.000000e+00
  br i1 %775, label %776, label %782

776:                                              ; preds = %773, %769
  %777 = call ptr @EDBM_verts_mirror_get(ptr noundef nonnull %27, ptr noundef nonnull %624) #18
  %778 = icmp eq ptr %777, null
  %779 = icmp eq ptr %777, %624
  %780 = or i1 %778, %779
  br i1 %780, label %782, label %781

781:                                              ; preds = %776
  store ptr %777, ptr %695, align 8, !tbaa !144
  br label %782

782:                                              ; preds = %776, %781, %773, %772
  %783 = getelementptr inbounds %struct.TransData, ptr %622, i64 1
  br label %784

784:                                              ; preds = %629, %620, %782
  %785 = phi ptr [ %623, %620 ], [ %720, %782 ], [ %623, %629 ]
  %786 = phi ptr [ %622, %620 ], [ %783, %782 ], [ %622, %629 ]
  %787 = load ptr, ptr %609, align 8, !tbaa !413
  %788 = call ptr %787(ptr noundef nonnull %17) #18
  %789 = add nuw i64 %621, 1
  %790 = icmp eq ptr %788, null
  br i1 %790, label %791, label %620, !llvm.loop !587

791:                                              ; preds = %784, %604
  %792 = icmp eq ptr %538, null
  br i1 %792, label %796, label %793

793:                                              ; preds = %791
  %794 = load ptr, ptr @MEM_freeN, align 8, !tbaa !33
  call void %794(ptr noundef nonnull %538) #18
  %795 = load ptr, ptr @MEM_freeN, align 8, !tbaa !33
  call void %795(ptr noundef %537) #18
  br label %796

796:                                              ; preds = %793, %791
  br i1 %39, label %845, label %797

797:                                              ; preds = %796
  %798 = load i32, ptr %131, align 8, !tbaa !5
  %799 = icmp sgt i32 %798, 0
  br i1 %799, label %800, label %845

800:                                              ; preds = %797
  %801 = load ptr, ptr %135, align 8, !tbaa !19
  %802 = and i32 %798, 1
  %803 = icmp eq i32 %798, 1
  br i1 %803, label %832, label %804

804:                                              ; preds = %800
  %805 = and i32 %798, -2
  br label %806

806:                                              ; preds = %828, %804
  %807 = phi ptr [ %801, %804 ], [ %829, %828 ]
  %808 = phi i32 [ 0, %804 ], [ %830, %828 ]
  %809 = getelementptr inbounds %struct.TransData, ptr %807, i64 0, i32 3
  %810 = load ptr, ptr %809, align 8, !tbaa !182
  %811 = load float, ptr %810, align 4, !tbaa !82
  %812 = call fast float @llvm.fabs.f32(float %811)
  %813 = fcmp fast ugt float %812, 0x3EE4F8B580000000
  br i1 %813, label %818, label %814

814:                                              ; preds = %806
  %815 = getelementptr inbounds %struct.TransData, ptr %807, i64 0, i32 16
  %816 = load i32, ptr %815, align 8, !tbaa !20
  %817 = or i32 %816, 65536
  store i32 %817, ptr %815, align 8, !tbaa !20
  br label %818

818:                                              ; preds = %806, %814
  %819 = getelementptr inbounds %struct.TransData, ptr %807, i64 1, i32 3
  %820 = load ptr, ptr %819, align 8, !tbaa !182
  %821 = load float, ptr %820, align 4, !tbaa !82
  %822 = call fast float @llvm.fabs.f32(float %821)
  %823 = fcmp fast ugt float %822, 0x3EE4F8B580000000
  br i1 %823, label %828, label %824

824:                                              ; preds = %818
  %825 = getelementptr inbounds %struct.TransData, ptr %807, i64 1, i32 16
  %826 = load i32, ptr %825, align 8, !tbaa !20
  %827 = or i32 %826, 65536
  store i32 %827, ptr %825, align 8, !tbaa !20
  br label %828

828:                                              ; preds = %824, %818
  %829 = getelementptr inbounds %struct.TransData, ptr %807, i64 2
  %830 = add i32 %808, 2
  %831 = icmp eq i32 %830, %805
  br i1 %831, label %832, label %806, !llvm.loop !588

832:                                              ; preds = %828, %800
  %833 = phi ptr [ %801, %800 ], [ %829, %828 ]
  %834 = icmp eq i32 %802, 0
  br i1 %834, label %845, label %835

835:                                              ; preds = %832
  %836 = getelementptr inbounds %struct.TransData, ptr %833, i64 0, i32 3
  %837 = load ptr, ptr %836, align 8, !tbaa !182
  %838 = load float, ptr %837, align 4, !tbaa !82
  %839 = call fast float @llvm.fabs.f32(float %838)
  %840 = fcmp fast ugt float %839, 0x3EE4F8B580000000
  br i1 %840, label %845, label %841

841:                                              ; preds = %835
  %842 = getelementptr inbounds %struct.TransData, ptr %833, i64 0, i32 16
  %843 = load i32, ptr %842, align 8, !tbaa !20
  %844 = or i32 %843, 65536
  store i32 %844, ptr %842, align 8, !tbaa !20
  br label %845

845:                                              ; preds = %832, %841, %835, %797, %796
  %846 = icmp eq ptr %576, null
  br i1 %846, label %849, label %847

847:                                              ; preds = %845
  %848 = load ptr, ptr @MEM_freeN, align 8, !tbaa !33
  call void %848(ptr noundef nonnull %576) #18
  br label %849

849:                                              ; preds = %74, %70, %63, %59, %52, %847, %845
  %850 = phi ptr [ %129, %847 ], [ %129, %845 ], [ null, %52 ], [ null, %59 ], [ null, %63 ], [ null, %70 ], [ null, %74 ]
  %851 = load ptr, ptr %20, align 8, !tbaa !33
  %852 = icmp eq ptr %851, null
  br i1 %852, label %855, label %853

853:                                              ; preds = %849
  %854 = load ptr, ptr @MEM_freeN, align 8, !tbaa !33
  call void %854(ptr noundef nonnull %851) #18
  br label %855

855:                                              ; preds = %853, %849
  %856 = icmp eq ptr %850, null
  br i1 %856, label %859, label %857

857:                                              ; preds = %855
  %858 = load ptr, ptr @MEM_freeN, align 8, !tbaa !33
  call void %858(ptr noundef nonnull %850) #18
  br label %859

859:                                              ; preds = %857, %855
  %860 = load i32, ptr %32, align 4, !tbaa !24
  %861 = and i32 %860, 524288
  %862 = icmp eq i32 %861, 0
  br i1 %862, label %864, label %863

863:                                              ; preds = %859
  call void @EDBM_verts_mirror_cache_end(ptr noundef nonnull %27) #18
  br label %864

864:                                              ; preds = %863, %859
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %21) #18
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %20) #18
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %19) #18
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %18) #18
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %17) #18
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @createTransCurveVerts(ptr nocapture noundef %0) unnamed_addr #6 {
  %2 = alloca [3 x [3 x float]], align 16
  %3 = alloca [3 x [3 x float]], align 16
  %4 = alloca [3 x [3 x float]], align 16
  %5 = alloca [3 x float], align 8
  %6 = alloca [3 x float], align 4
  %7 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 63
  %8 = load ptr, ptr %7, align 8, !tbaa !69
  %9 = getelementptr inbounds %struct.Object, ptr %8, i64 0, i32 19
  %10 = load ptr, ptr %9, align 8, !tbaa !34
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %2) #18
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %3) #18
  %11 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 1
  %12 = load i32, ptr %11, align 4, !tbaa !24
  %13 = freeze i32 %12
  %14 = and i32 %13, 2048
  %15 = getelementptr inbounds %struct.Curve, ptr %10, i64 0, i32 16
  %16 = load i16, ptr %15, align 8, !tbaa !589
  %17 = freeze i16 %16
  %18 = and i16 %17, 1
  %19 = getelementptr inbounds %struct.Curve, ptr %10, i64 0, i32 4
  %20 = load ptr, ptr %19, align 8, !tbaa !592
  %21 = icmp eq ptr %20, null
  br i1 %21, label %1074, label %22

22:                                               ; preds = %1
  %23 = tail call ptr @BKE_curve_editNurbs_get(ptr noundef nonnull %10) #18
  %24 = load ptr, ptr %23, align 8, !tbaa !33
  %25 = icmp eq ptr %24, null
  br i1 %25, label %1074, label %26

26:                                               ; preds = %22
  %27 = lshr exact i32 %14, 11
  %28 = icmp eq i16 %18, 0
  %29 = icmp eq i32 %14, 0
  br i1 %28, label %30, label %176

30:                                               ; preds = %26, %109
  %31 = phi ptr [ %112, %109 ], [ %24, %26 ]
  %32 = phi i32 [ %111, %109 ], [ 0, %26 ]
  %33 = phi i32 [ %110, %109 ], [ 0, %26 ]
  %34 = getelementptr inbounds %struct.Nurb, ptr %31, i64 0, i32 2
  %35 = load i16, ptr %34, align 8, !tbaa !593
  %36 = icmp eq i16 %35, 1
  %37 = getelementptr inbounds %struct.Nurb, ptr %31, i64 0, i32 6
  %38 = load i32, ptr %37, align 8, !tbaa !595
  br i1 %36, label %107, label %39

39:                                               ; preds = %30
  %40 = getelementptr inbounds %struct.Nurb, ptr %31, i64 0, i32 7
  %41 = load i32, ptr %40, align 4, !tbaa !596
  %42 = mul nsw i32 %41, %38
  %43 = icmp sgt i32 %42, 0
  br i1 %43, label %44, label %109

44:                                               ; preds = %39
  %45 = getelementptr inbounds %struct.Nurb, ptr %31, i64 0, i32 17
  %46 = load ptr, ptr %45, align 8, !tbaa !597
  %47 = and i32 %42, 1
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %65, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %struct.BPoint, ptr %46, i64 0, i32 4
  %51 = load i16, ptr %50, align 2, !tbaa !598
  %52 = icmp eq i16 %51, 0
  br i1 %52, label %53, label %60

53:                                               ; preds = %49
  %54 = add nsw i32 %33, %27
  %55 = getelementptr inbounds %struct.BPoint, ptr %46, i64 0, i32 3
  %56 = load i16, ptr %55, align 4, !tbaa !600
  %57 = and i16 %56, 1
  %58 = zext i16 %57 to i32
  %59 = add nsw i32 %32, %58
  br label %60

60:                                               ; preds = %53, %49
  %61 = phi i32 [ %33, %49 ], [ %54, %53 ]
  %62 = phi i32 [ %32, %49 ], [ %59, %53 ]
  %63 = add nsw i32 %42, -1
  %64 = getelementptr inbounds %struct.BPoint, ptr %46, i64 1
  br label %65

65:                                               ; preds = %60, %44
  %66 = phi i32 [ %32, %44 ], [ %62, %60 ]
  %67 = phi i32 [ %33, %44 ], [ %61, %60 ]
  %68 = phi i32 [ %42, %44 ], [ %63, %60 ]
  %69 = phi ptr [ %46, %44 ], [ %64, %60 ]
  %70 = phi i32 [ undef, %44 ], [ %61, %60 ]
  %71 = phi i32 [ undef, %44 ], [ %62, %60 ]
  %72 = icmp eq i32 %42, 1
  br i1 %72, label %109, label %73

73:                                               ; preds = %65, %101
  %74 = phi i32 [ %103, %101 ], [ %66, %65 ]
  %75 = phi i32 [ %102, %101 ], [ %67, %65 ]
  %76 = phi i32 [ %104, %101 ], [ %68, %65 ]
  %77 = phi ptr [ %105, %101 ], [ %69, %65 ]
  %78 = getelementptr inbounds %struct.BPoint, ptr %77, i64 0, i32 4
  %79 = load i16, ptr %78, align 2, !tbaa !598
  %80 = icmp eq i16 %79, 0
  br i1 %80, label %81, label %88

81:                                               ; preds = %73
  %82 = add nsw i32 %75, %27
  %83 = getelementptr inbounds %struct.BPoint, ptr %77, i64 0, i32 3
  %84 = load i16, ptr %83, align 4, !tbaa !600
  %85 = and i16 %84, 1
  %86 = zext i16 %85 to i32
  %87 = add nsw i32 %74, %86
  br label %88

88:                                               ; preds = %81, %73
  %89 = phi i32 [ %75, %73 ], [ %82, %81 ]
  %90 = phi i32 [ %74, %73 ], [ %87, %81 ]
  %91 = getelementptr inbounds %struct.BPoint, ptr %77, i64 1, i32 4
  %92 = load i16, ptr %91, align 2, !tbaa !598
  %93 = icmp eq i16 %92, 0
  br i1 %93, label %94, label %101

94:                                               ; preds = %88
  %95 = add nsw i32 %89, %27
  %96 = getelementptr inbounds %struct.BPoint, ptr %77, i64 1, i32 3
  %97 = load i16, ptr %96, align 4, !tbaa !600
  %98 = and i16 %97, 1
  %99 = zext i16 %98 to i32
  %100 = add nsw i32 %90, %99
  br label %101

101:                                              ; preds = %94, %88
  %102 = phi i32 [ %89, %88 ], [ %95, %94 ]
  %103 = phi i32 [ %90, %88 ], [ %100, %94 ]
  %104 = add nsw i32 %76, -2
  %105 = getelementptr inbounds %struct.BPoint, ptr %77, i64 2
  %106 = icmp sgt i32 %76, 2
  br i1 %106, label %73, label %109, !llvm.loop !601

107:                                              ; preds = %30
  %108 = icmp sgt i32 %38, 0
  br i1 %108, label %114, label %109

109:                                              ; preds = %65, %101, %170, %140, %39, %107
  %110 = phi i32 [ %33, %107 ], [ %33, %39 ], [ %33, %140 ], [ %171, %170 ], [ %70, %65 ], [ %102, %101 ]
  %111 = phi i32 [ %32, %107 ], [ %32, %39 ], [ %141, %140 ], [ %172, %170 ], [ %71, %65 ], [ %103, %101 ]
  %112 = load ptr, ptr %31, align 8, !tbaa !33
  %113 = icmp eq ptr %112, null
  br i1 %113, label %461, label %30, !llvm.loop !602

114:                                              ; preds = %107
  %115 = getelementptr inbounds %struct.Nurb, ptr %31, i64 0, i32 18
  %116 = load ptr, ptr %115, align 8, !tbaa !603
  br i1 %29, label %117, label %145

117:                                              ; preds = %114, %140
  %118 = phi ptr [ %143, %140 ], [ %116, %114 ]
  %119 = phi i32 [ %141, %140 ], [ %32, %114 ]
  %120 = phi i32 [ %142, %140 ], [ 0, %114 ]
  %121 = getelementptr inbounds %struct.BezTriple, ptr %118, i64 0, i32 10
  %122 = load i8, ptr %121, align 2, !tbaa !604
  %123 = icmp eq i8 %122, 0
  br i1 %123, label %124, label %140

124:                                              ; preds = %117
  %125 = getelementptr inbounds %struct.BezTriple, ptr %118, i64 0, i32 7
  %126 = load i8, ptr %125, align 1, !tbaa !341
  %127 = and i8 %126, 1
  %128 = zext i8 %127 to i32
  %129 = add nsw i32 %119, %128
  %130 = getelementptr inbounds %struct.BezTriple, ptr %118, i64 0, i32 8
  %131 = load i8, ptr %130, align 4, !tbaa !340
  %132 = and i8 %131, 1
  %133 = zext i8 %132 to i32
  %134 = add nsw i32 %129, %133
  %135 = getelementptr inbounds %struct.BezTriple, ptr %118, i64 0, i32 9
  %136 = load i8, ptr %135, align 1, !tbaa !342
  %137 = and i8 %136, 1
  %138 = zext i8 %137 to i32
  %139 = add nsw i32 %134, %138
  br label %140

140:                                              ; preds = %124, %117
  %141 = phi i32 [ %119, %117 ], [ %139, %124 ]
  %142 = add nuw nsw i32 %120, 1
  %143 = getelementptr inbounds %struct.BezTriple, ptr %118, i64 1
  %144 = icmp eq i32 %142, %38
  br i1 %144, label %109, label %117, !llvm.loop !605

145:                                              ; preds = %114, %170
  %146 = phi ptr [ %174, %170 ], [ %116, %114 ]
  %147 = phi i32 [ %172, %170 ], [ %32, %114 ]
  %148 = phi i32 [ %171, %170 ], [ %33, %114 ]
  %149 = phi i32 [ %173, %170 ], [ 0, %114 ]
  %150 = getelementptr inbounds %struct.BezTriple, ptr %146, i64 0, i32 10
  %151 = load i8, ptr %150, align 2, !tbaa !604
  %152 = icmp eq i8 %151, 0
  br i1 %152, label %153, label %170

153:                                              ; preds = %145
  %154 = getelementptr inbounds %struct.BezTriple, ptr %146, i64 0, i32 7
  %155 = load i8, ptr %154, align 1, !tbaa !341
  %156 = and i8 %155, 1
  %157 = zext i8 %156 to i32
  %158 = add nsw i32 %147, %157
  %159 = getelementptr inbounds %struct.BezTriple, ptr %146, i64 0, i32 8
  %160 = load i8, ptr %159, align 4, !tbaa !340
  %161 = and i8 %160, 1
  %162 = zext i8 %161 to i32
  %163 = add nsw i32 %158, %162
  %164 = getelementptr inbounds %struct.BezTriple, ptr %146, i64 0, i32 9
  %165 = load i8, ptr %164, align 1, !tbaa !342
  %166 = and i8 %165, 1
  %167 = zext i8 %166 to i32
  %168 = add nsw i32 %163, %167
  %169 = add nsw i32 %148, 3
  br label %170

170:                                              ; preds = %153, %145
  %171 = phi i32 [ %148, %145 ], [ %169, %153 ]
  %172 = phi i32 [ %147, %145 ], [ %168, %153 ]
  %173 = add nuw nsw i32 %149, 1
  %174 = getelementptr inbounds %struct.BezTriple, ptr %146, i64 1
  %175 = icmp eq i32 %173, %38
  br i1 %175, label %109, label %145, !llvm.loop !605

176:                                              ; preds = %26
  br i1 %29, label %177, label %315

177:                                              ; preds = %176, %279
  %178 = phi ptr [ %282, %279 ], [ %24, %176 ]
  %179 = phi i32 [ %281, %279 ], [ 0, %176 ]
  %180 = phi i32 [ %280, %279 ], [ 0, %176 ]
  %181 = getelementptr inbounds %struct.Nurb, ptr %178, i64 0, i32 2
  %182 = load i16, ptr %181, align 8, !tbaa !593
  %183 = icmp eq i16 %182, 1
  %184 = getelementptr inbounds %struct.Nurb, ptr %178, i64 0, i32 6
  %185 = load i32, ptr %184, align 8, !tbaa !595
  br i1 %183, label %254, label %186

186:                                              ; preds = %177
  %187 = getelementptr inbounds %struct.Nurb, ptr %178, i64 0, i32 7
  %188 = load i32, ptr %187, align 4, !tbaa !596
  %189 = mul nsw i32 %188, %185
  %190 = icmp sgt i32 %189, 0
  br i1 %190, label %191, label %279

191:                                              ; preds = %186
  %192 = getelementptr inbounds %struct.Nurb, ptr %178, i64 0, i32 17
  %193 = load ptr, ptr %192, align 8, !tbaa !597
  %194 = and i32 %189, 1
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %212, label %196

196:                                              ; preds = %191
  %197 = getelementptr inbounds %struct.BPoint, ptr %193, i64 0, i32 4
  %198 = load i16, ptr %197, align 2, !tbaa !598
  %199 = icmp eq i16 %198, 0
  br i1 %199, label %200, label %207

200:                                              ; preds = %196
  %201 = add nsw i32 %180, %27
  %202 = getelementptr inbounds %struct.BPoint, ptr %193, i64 0, i32 3
  %203 = load i16, ptr %202, align 4, !tbaa !600
  %204 = and i16 %203, 1
  %205 = zext i16 %204 to i32
  %206 = add nsw i32 %179, %205
  br label %207

207:                                              ; preds = %200, %196
  %208 = phi i32 [ %180, %196 ], [ %201, %200 ]
  %209 = phi i32 [ %179, %196 ], [ %206, %200 ]
  %210 = add nsw i32 %189, -1
  %211 = getelementptr inbounds %struct.BPoint, ptr %193, i64 1
  br label %212

212:                                              ; preds = %207, %191
  %213 = phi i32 [ %179, %191 ], [ %209, %207 ]
  %214 = phi i32 [ %180, %191 ], [ %208, %207 ]
  %215 = phi i32 [ %189, %191 ], [ %210, %207 ]
  %216 = phi ptr [ %193, %191 ], [ %211, %207 ]
  %217 = phi i32 [ undef, %191 ], [ %208, %207 ]
  %218 = phi i32 [ undef, %191 ], [ %209, %207 ]
  %219 = icmp eq i32 %189, 1
  br i1 %219, label %279, label %220

220:                                              ; preds = %212, %248
  %221 = phi i32 [ %250, %248 ], [ %213, %212 ]
  %222 = phi i32 [ %249, %248 ], [ %214, %212 ]
  %223 = phi i32 [ %251, %248 ], [ %215, %212 ]
  %224 = phi ptr [ %252, %248 ], [ %216, %212 ]
  %225 = getelementptr inbounds %struct.BPoint, ptr %224, i64 0, i32 4
  %226 = load i16, ptr %225, align 2, !tbaa !598
  %227 = icmp eq i16 %226, 0
  br i1 %227, label %228, label %235

228:                                              ; preds = %220
  %229 = add nsw i32 %222, %27
  %230 = getelementptr inbounds %struct.BPoint, ptr %224, i64 0, i32 3
  %231 = load i16, ptr %230, align 4, !tbaa !600
  %232 = and i16 %231, 1
  %233 = zext i16 %232 to i32
  %234 = add nsw i32 %221, %233
  br label %235

235:                                              ; preds = %228, %220
  %236 = phi i32 [ %222, %220 ], [ %229, %228 ]
  %237 = phi i32 [ %221, %220 ], [ %234, %228 ]
  %238 = getelementptr inbounds %struct.BPoint, ptr %224, i64 1, i32 4
  %239 = load i16, ptr %238, align 2, !tbaa !598
  %240 = icmp eq i16 %239, 0
  br i1 %240, label %241, label %248

241:                                              ; preds = %235
  %242 = add nsw i32 %236, %27
  %243 = getelementptr inbounds %struct.BPoint, ptr %224, i64 1, i32 3
  %244 = load i16, ptr %243, align 4, !tbaa !600
  %245 = and i16 %244, 1
  %246 = zext i16 %245 to i32
  %247 = add nsw i32 %237, %246
  br label %248

248:                                              ; preds = %241, %235
  %249 = phi i32 [ %236, %235 ], [ %242, %241 ]
  %250 = phi i32 [ %237, %235 ], [ %247, %241 ]
  %251 = add nsw i32 %223, -2
  %252 = getelementptr inbounds %struct.BPoint, ptr %224, i64 2
  %253 = icmp sgt i32 %223, 2
  br i1 %253, label %220, label %279, !llvm.loop !601

254:                                              ; preds = %177
  %255 = icmp sgt i32 %185, 0
  br i1 %255, label %256, label %279

256:                                              ; preds = %254
  %257 = getelementptr inbounds %struct.Nurb, ptr %178, i64 0, i32 18
  %258 = load ptr, ptr %257, align 8, !tbaa !603
  %259 = and i32 %185, 1
  %260 = icmp eq i32 %185, 1
  br i1 %260, label %263, label %261

261:                                              ; preds = %256
  %262 = and i32 %185, -2
  br label %284

263:                                              ; preds = %310, %256
  %264 = phi i32 [ undef, %256 ], [ %311, %310 ]
  %265 = phi ptr [ %258, %256 ], [ %312, %310 ]
  %266 = phi i32 [ %179, %256 ], [ %311, %310 ]
  %267 = icmp eq i32 %259, 0
  br i1 %267, label %279, label %268

268:                                              ; preds = %263
  %269 = getelementptr inbounds %struct.BezTriple, ptr %265, i64 0, i32 10
  %270 = load i8, ptr %269, align 2, !tbaa !604
  %271 = icmp eq i8 %270, 0
  br i1 %271, label %272, label %279

272:                                              ; preds = %268
  %273 = getelementptr inbounds %struct.BezTriple, ptr %265, i64 0, i32 8
  %274 = load i8, ptr %273, align 4, !tbaa !340
  %275 = and i8 %274, 1
  %276 = icmp eq i8 %275, 0
  %277 = add nsw i32 %266, 3
  %278 = select i1 %276, i32 %266, i32 %277
  br label %279

279:                                              ; preds = %212, %248, %263, %272, %268, %186, %254
  %280 = phi i32 [ %180, %254 ], [ %180, %186 ], [ %180, %268 ], [ %180, %272 ], [ %180, %263 ], [ %217, %212 ], [ %249, %248 ]
  %281 = phi i32 [ %179, %254 ], [ %179, %186 ], [ %264, %263 ], [ %266, %268 ], [ %278, %272 ], [ %218, %212 ], [ %250, %248 ]
  %282 = load ptr, ptr %178, align 8, !tbaa !33
  %283 = icmp eq ptr %282, null
  br i1 %283, label %461, label %177, !llvm.loop !602

284:                                              ; preds = %310, %261
  %285 = phi ptr [ %258, %261 ], [ %312, %310 ]
  %286 = phi i32 [ %179, %261 ], [ %311, %310 ]
  %287 = phi i32 [ 0, %261 ], [ %313, %310 ]
  %288 = getelementptr inbounds %struct.BezTriple, ptr %285, i64 0, i32 10
  %289 = load i8, ptr %288, align 2, !tbaa !604
  %290 = icmp eq i8 %289, 0
  br i1 %290, label %291, label %298

291:                                              ; preds = %284
  %292 = getelementptr inbounds %struct.BezTriple, ptr %285, i64 0, i32 8
  %293 = load i8, ptr %292, align 4, !tbaa !340
  %294 = and i8 %293, 1
  %295 = icmp eq i8 %294, 0
  %296 = add nsw i32 %286, 3
  %297 = select i1 %295, i32 %286, i32 %296
  br label %298

298:                                              ; preds = %291, %284
  %299 = phi i32 [ %286, %284 ], [ %297, %291 ]
  %300 = getelementptr inbounds %struct.BezTriple, ptr %285, i64 1, i32 10
  %301 = load i8, ptr %300, align 2, !tbaa !604
  %302 = icmp eq i8 %301, 0
  br i1 %302, label %303, label %310

303:                                              ; preds = %298
  %304 = getelementptr inbounds %struct.BezTriple, ptr %285, i64 1, i32 8
  %305 = load i8, ptr %304, align 4, !tbaa !340
  %306 = and i8 %305, 1
  %307 = icmp eq i8 %306, 0
  %308 = add nsw i32 %299, 3
  %309 = select i1 %307, i32 %299, i32 %308
  br label %310

310:                                              ; preds = %303, %298
  %311 = phi i32 [ %299, %298 ], [ %309, %303 ]
  %312 = getelementptr inbounds %struct.BezTriple, ptr %285, i64 2
  %313 = add i32 %287, 2
  %314 = icmp eq i32 %313, %262
  br i1 %314, label %263, label %284, !llvm.loop !605

315:                                              ; preds = %176, %456
  %316 = phi ptr [ %459, %456 ], [ %24, %176 ]
  %317 = phi i32 [ %458, %456 ], [ 0, %176 ]
  %318 = phi i32 [ %457, %456 ], [ 0, %176 ]
  %319 = getelementptr inbounds %struct.Nurb, ptr %316, i64 0, i32 2
  %320 = load i16, ptr %319, align 8, !tbaa !593
  %321 = icmp eq i16 %320, 1
  %322 = getelementptr inbounds %struct.Nurb, ptr %316, i64 0, i32 6
  %323 = load i32, ptr %322, align 8, !tbaa !595
  br i1 %321, label %324, label %369

324:                                              ; preds = %315
  %325 = icmp sgt i32 %323, 0
  br i1 %325, label %326, label %456

326:                                              ; preds = %324
  %327 = getelementptr inbounds %struct.Nurb, ptr %316, i64 0, i32 18
  %328 = load ptr, ptr %327, align 8, !tbaa !603
  %329 = and i32 %323, 1
  %330 = icmp eq i32 %323, 1
  br i1 %330, label %437, label %331

331:                                              ; preds = %326
  %332 = and i32 %323, -2
  br label %333

333:                                              ; preds = %363, %331
  %334 = phi ptr [ %328, %331 ], [ %366, %363 ]
  %335 = phi i32 [ %317, %331 ], [ %365, %363 ]
  %336 = phi i32 [ %318, %331 ], [ %364, %363 ]
  %337 = phi i32 [ 0, %331 ], [ %367, %363 ]
  %338 = getelementptr inbounds %struct.BezTriple, ptr %334, i64 0, i32 10
  %339 = load i8, ptr %338, align 2, !tbaa !604
  %340 = icmp eq i8 %339, 0
  br i1 %340, label %341, label %349

341:                                              ; preds = %333
  %342 = getelementptr inbounds %struct.BezTriple, ptr %334, i64 0, i32 8
  %343 = load i8, ptr %342, align 4, !tbaa !340
  %344 = and i8 %343, 1
  %345 = icmp eq i8 %344, 0
  %346 = add nsw i32 %335, 3
  %347 = select i1 %345, i32 %335, i32 %346
  %348 = add nsw i32 %336, 3
  br label %349

349:                                              ; preds = %341, %333
  %350 = phi i32 [ %336, %333 ], [ %348, %341 ]
  %351 = phi i32 [ %335, %333 ], [ %347, %341 ]
  %352 = getelementptr inbounds %struct.BezTriple, ptr %334, i64 1, i32 10
  %353 = load i8, ptr %352, align 2, !tbaa !604
  %354 = icmp eq i8 %353, 0
  br i1 %354, label %355, label %363

355:                                              ; preds = %349
  %356 = getelementptr inbounds %struct.BezTriple, ptr %334, i64 1, i32 8
  %357 = load i8, ptr %356, align 4, !tbaa !340
  %358 = and i8 %357, 1
  %359 = icmp eq i8 %358, 0
  %360 = add nsw i32 %351, 3
  %361 = select i1 %359, i32 %351, i32 %360
  %362 = add nsw i32 %350, 3
  br label %363

363:                                              ; preds = %355, %349
  %364 = phi i32 [ %350, %349 ], [ %362, %355 ]
  %365 = phi i32 [ %351, %349 ], [ %361, %355 ]
  %366 = getelementptr inbounds %struct.BezTriple, ptr %334, i64 2
  %367 = add i32 %337, 2
  %368 = icmp eq i32 %367, %332
  br i1 %368, label %437, label %333, !llvm.loop !605

369:                                              ; preds = %315
  %370 = getelementptr inbounds %struct.Nurb, ptr %316, i64 0, i32 7
  %371 = load i32, ptr %370, align 4, !tbaa !596
  %372 = mul nsw i32 %371, %323
  %373 = icmp sgt i32 %372, 0
  br i1 %373, label %374, label %456

374:                                              ; preds = %369
  %375 = getelementptr inbounds %struct.Nurb, ptr %316, i64 0, i32 17
  %376 = load ptr, ptr %375, align 8, !tbaa !597
  %377 = and i32 %372, 1
  %378 = icmp eq i32 %377, 0
  br i1 %378, label %395, label %379

379:                                              ; preds = %374
  %380 = getelementptr inbounds %struct.BPoint, ptr %376, i64 0, i32 4
  %381 = load i16, ptr %380, align 2, !tbaa !598
  %382 = icmp eq i16 %381, 0
  br i1 %382, label %383, label %390

383:                                              ; preds = %379
  %384 = add nsw i32 %318, %27
  %385 = getelementptr inbounds %struct.BPoint, ptr %376, i64 0, i32 3
  %386 = load i16, ptr %385, align 4, !tbaa !600
  %387 = and i16 %386, 1
  %388 = zext i16 %387 to i32
  %389 = add nsw i32 %317, %388
  br label %390

390:                                              ; preds = %383, %379
  %391 = phi i32 [ %318, %379 ], [ %384, %383 ]
  %392 = phi i32 [ %317, %379 ], [ %389, %383 ]
  %393 = add nsw i32 %372, -1
  %394 = getelementptr inbounds %struct.BPoint, ptr %376, i64 1
  br label %395

395:                                              ; preds = %390, %374
  %396 = phi i32 [ %317, %374 ], [ %392, %390 ]
  %397 = phi i32 [ %318, %374 ], [ %391, %390 ]
  %398 = phi i32 [ %372, %374 ], [ %393, %390 ]
  %399 = phi ptr [ %376, %374 ], [ %394, %390 ]
  %400 = phi i32 [ undef, %374 ], [ %391, %390 ]
  %401 = phi i32 [ undef, %374 ], [ %392, %390 ]
  %402 = icmp eq i32 %372, 1
  br i1 %402, label %456, label %403

403:                                              ; preds = %395, %431
  %404 = phi i32 [ %433, %431 ], [ %396, %395 ]
  %405 = phi i32 [ %432, %431 ], [ %397, %395 ]
  %406 = phi i32 [ %434, %431 ], [ %398, %395 ]
  %407 = phi ptr [ %435, %431 ], [ %399, %395 ]
  %408 = getelementptr inbounds %struct.BPoint, ptr %407, i64 0, i32 4
  %409 = load i16, ptr %408, align 2, !tbaa !598
  %410 = icmp eq i16 %409, 0
  br i1 %410, label %411, label %418

411:                                              ; preds = %403
  %412 = add nsw i32 %405, %27
  %413 = getelementptr inbounds %struct.BPoint, ptr %407, i64 0, i32 3
  %414 = load i16, ptr %413, align 4, !tbaa !600
  %415 = and i16 %414, 1
  %416 = zext i16 %415 to i32
  %417 = add nsw i32 %404, %416
  br label %418

418:                                              ; preds = %411, %403
  %419 = phi i32 [ %405, %403 ], [ %412, %411 ]
  %420 = phi i32 [ %404, %403 ], [ %417, %411 ]
  %421 = getelementptr inbounds %struct.BPoint, ptr %407, i64 1, i32 4
  %422 = load i16, ptr %421, align 2, !tbaa !598
  %423 = icmp eq i16 %422, 0
  br i1 %423, label %424, label %431

424:                                              ; preds = %418
  %425 = add nsw i32 %419, %27
  %426 = getelementptr inbounds %struct.BPoint, ptr %407, i64 1, i32 3
  %427 = load i16, ptr %426, align 4, !tbaa !600
  %428 = and i16 %427, 1
  %429 = zext i16 %428 to i32
  %430 = add nsw i32 %420, %429
  br label %431

431:                                              ; preds = %424, %418
  %432 = phi i32 [ %419, %418 ], [ %425, %424 ]
  %433 = phi i32 [ %420, %418 ], [ %430, %424 ]
  %434 = add nsw i32 %406, -2
  %435 = getelementptr inbounds %struct.BPoint, ptr %407, i64 2
  %436 = icmp sgt i32 %406, 2
  br i1 %436, label %403, label %456, !llvm.loop !601

437:                                              ; preds = %363, %326
  %438 = phi i32 [ undef, %326 ], [ %364, %363 ]
  %439 = phi i32 [ undef, %326 ], [ %365, %363 ]
  %440 = phi ptr [ %328, %326 ], [ %366, %363 ]
  %441 = phi i32 [ %317, %326 ], [ %365, %363 ]
  %442 = phi i32 [ %318, %326 ], [ %364, %363 ]
  %443 = icmp eq i32 %329, 0
  br i1 %443, label %456, label %444

444:                                              ; preds = %437
  %445 = getelementptr inbounds %struct.BezTriple, ptr %440, i64 0, i32 10
  %446 = load i8, ptr %445, align 2, !tbaa !604
  %447 = icmp eq i8 %446, 0
  br i1 %447, label %448, label %456

448:                                              ; preds = %444
  %449 = getelementptr inbounds %struct.BezTriple, ptr %440, i64 0, i32 8
  %450 = load i8, ptr %449, align 4, !tbaa !340
  %451 = and i8 %450, 1
  %452 = icmp eq i8 %451, 0
  %453 = add nsw i32 %441, 3
  %454 = select i1 %452, i32 %441, i32 %453
  %455 = add nsw i32 %442, 3
  br label %456

456:                                              ; preds = %395, %431, %437, %448, %444, %369, %324
  %457 = phi i32 [ %318, %324 ], [ %318, %369 ], [ %438, %437 ], [ %442, %444 ], [ %455, %448 ], [ %400, %395 ], [ %432, %431 ]
  %458 = phi i32 [ %317, %324 ], [ %317, %369 ], [ %439, %437 ], [ %441, %444 ], [ %454, %448 ], [ %401, %395 ], [ %433, %431 ]
  %459 = load ptr, ptr %316, align 8, !tbaa !33
  %460 = icmp eq ptr %459, null
  br i1 %460, label %461, label %315, !llvm.loop !602

461:                                              ; preds = %456, %279, %109
  %462 = phi i32 [ %110, %109 ], [ %280, %279 ], [ %457, %456 ]
  %463 = phi i32 [ %111, %109 ], [ %281, %279 ], [ %458, %456 ]
  %464 = icmp eq i32 %463, 0
  br i1 %464, label %1074, label %465

465:                                              ; preds = %461
  %466 = icmp eq i32 %14, 0
  %467 = select i1 %466, i32 %463, i32 %462
  %468 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 9
  store i32 %467, ptr %468, align 8
  %469 = load ptr, ptr @MEM_callocN, align 8, !tbaa !33
  %470 = sext i32 %467 to i64
  %471 = mul nsw i64 %470, 224
  %472 = tail call ptr %469(i64 noundef %471, ptr noundef nonnull @.str.47) #18
  %473 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 10
  store ptr %472, ptr %473, align 8, !tbaa !19
  %474 = load i32, ptr %468, align 8, !tbaa !5
  %475 = icmp eq i32 %474, 1
  br i1 %475, label %476, label %482

476:                                              ; preds = %465
  %477 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 32
  %478 = load i16, ptr %477, align 2, !tbaa !321
  switch i16 %478, label %482 [
    i16 0, label %479
    i16 3, label %479
    i16 4, label %479
  ]

479:                                              ; preds = %476, %476, %476
  %480 = load i32, ptr %0, align 8, !tbaa !161
  switch i32 %480, label %482 [
    i32 3, label %481
    i32 2, label %481
    i32 10, label %481
  ]

481:                                              ; preds = %479, %479, %479
  store i16 2, ptr %477, align 2, !tbaa !321
  br label %482

482:                                              ; preds = %465, %476, %479, %481
  %483 = load ptr, ptr %7, align 8, !tbaa !69
  %484 = getelementptr inbounds %struct.Object, ptr %483, i64 0, i32 47
  call void @copy_m3_m4(ptr noundef nonnull %2, ptr noundef nonnull %484) #18
  call void @pseudoinverse_m3_m3(ptr noundef nonnull %3, ptr noundef nonnull %2, float noundef nofpclass(nan inf) 0x3E45798EE0000000) #18
  %485 = load ptr, ptr %23, align 8, !tbaa !33
  %486 = icmp eq ptr %485, null
  br i1 %486, label %1074, label %487

487:                                              ; preds = %482
  %488 = load ptr, ptr %473, align 8, !tbaa !19
  %489 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 32
  %490 = getelementptr inbounds float, ptr %5, i64 2
  %491 = icmp ne i16 %18, 0
  %492 = icmp eq i16 %18, 0
  %493 = zext i1 %492 to i8
  br label %494

494:                                              ; preds = %487, %1070
  %495 = phi ptr [ %485, %487 ], [ %1072, %1070 ]
  %496 = phi ptr [ %488, %487 ], [ %1071, %1070 ]
  %497 = getelementptr inbounds %struct.Nurb, ptr %495, i64 0, i32 2
  %498 = load i16, ptr %497, align 8, !tbaa !593
  %499 = icmp eq i16 %498, 1
  %500 = getelementptr inbounds %struct.Nurb, ptr %495, i64 0, i32 6
  %501 = load i32, ptr %500, align 8, !tbaa !595
  br i1 %499, label %502, label %904

502:                                              ; preds = %494
  %503 = icmp sgt i32 %501, 0
  br i1 %503, label %504, label %900

504:                                              ; preds = %502
  %505 = getelementptr inbounds %struct.Nurb, ptr %495, i64 0, i32 18
  %506 = load ptr, ptr %505, align 8, !tbaa !603
  br label %507

507:                                              ; preds = %504, %887
  %508 = phi i32 [ %888, %887 ], [ %501, %504 ]
  %509 = phi ptr [ %891, %887 ], [ %496, %504 ]
  %510 = phi ptr [ %890, %887 ], [ %496, %504 ]
  %511 = phi ptr [ %889, %887 ], [ %496, %504 ]
  %512 = phi ptr [ %893, %887 ], [ %506, %504 ]
  %513 = phi i32 [ %892, %887 ], [ 0, %504 ]
  %514 = getelementptr inbounds %struct.BezTriple, ptr %512, i64 0, i32 10
  %515 = load i8, ptr %514, align 2, !tbaa !604
  %516 = icmp eq i8 %515, 0
  br i1 %516, label %517, label %790

517:                                              ; preds = %507
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %4) #18
  %518 = load i16, ptr %489, align 2, !tbaa !321
  %519 = icmp eq i16 %518, 2
  br i1 %519, label %520, label %545

520:                                              ; preds = %517
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %5) #18
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %6) #18
  call void @BKE_nurb_bezt_calc_normal(ptr noundef nonnull %495, ptr noundef nonnull %512, ptr noundef nonnull %5) #18
  call void @BKE_nurb_bezt_calc_plane(ptr noundef nonnull %495, ptr noundef nonnull %512, ptr noundef nonnull %6) #18
  %521 = call zeroext i8 @createSpaceNormalTangent(ptr noundef nonnull %4, ptr noundef nonnull %5, ptr noundef nonnull %6) #18
  %522 = icmp eq i8 %521, 0
  br i1 %522, label %523, label %544

523:                                              ; preds = %520
  %524 = load <2 x float>, ptr %5, align 8, !tbaa !82
  %525 = fmul fast <2 x float> %524, %524
  %526 = shufflevector <2 x float> %525, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %527 = fadd fast <2 x float> %526, %525
  %528 = extractelement <2 x float> %527, i64 0
  %529 = load float, ptr %490, align 8, !tbaa !82
  %530 = fmul fast float %529, %529
  %531 = fadd fast float %528, %530
  %532 = fcmp fast ogt float %531, 0x38AA95A5C0000000
  br i1 %532, label %533, label %540

533:                                              ; preds = %523
  %534 = call fast float @llvm.sqrt.f32(float %531)
  %535 = fdiv fast float 1.000000e+00, %534
  %536 = insertelement <2 x float> poison, float %535, i64 0
  %537 = shufflevector <2 x float> %536, <2 x float> poison, <2 x i32> zeroinitializer
  %538 = fmul fast <2 x float> %537, %524
  %539 = fmul fast float %535, %529
  br label %540

540:                                              ; preds = %523, %533
  %541 = phi float [ %539, %533 ], [ 0.000000e+00, %523 ]
  %542 = phi <2 x float> [ %538, %533 ], [ zeroinitializer, %523 ]
  store <2 x float> %542, ptr %5, align 8
  store float %541, ptr %490, align 8
  call void @axis_dominant_v3_to_m3(ptr noundef nonnull %4, ptr noundef nonnull %5) #18
  %543 = call zeroext i8 @invert_m3(ptr noundef nonnull %4) #18
  br label %544

544:                                              ; preds = %520, %540
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %6) #18
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %5) #18
  br label %545

545:                                              ; preds = %544, %517
  br i1 %466, label %546, label %558

546:                                              ; preds = %545
  %547 = getelementptr inbounds %struct.BezTriple, ptr %512, i64 0, i32 8
  %548 = load i8, ptr %547, align 4, !tbaa !340
  %549 = and i8 %548, 1
  %550 = icmp ne i8 %549, 0
  %551 = and i1 %550, %491
  br i1 %551, label %558, label %552

552:                                              ; preds = %546
  %553 = getelementptr inbounds %struct.BezTriple, ptr %512, i64 0, i32 7
  %554 = load i8, ptr %553, align 1, !tbaa !341
  %555 = and i8 %554, 1
  %556 = icmp ne i8 %555, 0
  %557 = and i1 %556, %492
  br i1 %557, label %558, label %621

558:                                              ; preds = %552, %546, %545
  %559 = getelementptr inbounds %struct.TransData, ptr %511, i64 0, i32 4
  %560 = load float, ptr %512, align 4, !tbaa !82
  store float %560, ptr %559, align 4, !tbaa !82
  %561 = getelementptr inbounds float, ptr %512, i64 1
  %562 = load float, ptr %561, align 4, !tbaa !82
  %563 = getelementptr inbounds %struct.TransData, ptr %511, i64 0, i32 4, i64 1
  store float %562, ptr %563, align 4, !tbaa !82
  %564 = getelementptr inbounds float, ptr %512, i64 2
  %565 = load float, ptr %564, align 4, !tbaa !82
  %566 = getelementptr inbounds %struct.TransData, ptr %511, i64 0, i32 4, i64 2
  store float %565, ptr %566, align 4, !tbaa !82
  %567 = getelementptr inbounds %struct.TransData, ptr %511, i64 0, i32 3
  store ptr %512, ptr %567, align 8, !tbaa !182
  %568 = getelementptr inbounds %struct.TransData, ptr %511, i64 0, i32 7
  br i1 %492, label %569, label %577

569:                                              ; preds = %558
  %570 = load i16, ptr %489, align 2, !tbaa !321
  %571 = icmp eq i16 %570, 2
  br i1 %571, label %577, label %572

572:                                              ; preds = %569
  %573 = getelementptr inbounds %struct.BezTriple, ptr %512, i64 0, i32 8
  %574 = load i8, ptr %573, align 4, !tbaa !340
  %575 = and i8 %574, 1
  %576 = icmp ne i8 %575, 0
  br label %577

577:                                              ; preds = %572, %569, %558
  %578 = phi i1 [ true, %569 ], [ true, %558 ], [ %576, %572 ]
  %579 = zext i1 %578 to i64
  %580 = getelementptr inbounds [3 x [3 x float]], ptr %512, i64 0, i64 %579
  %581 = load float, ptr %580, align 4, !tbaa !82
  store float %581, ptr %568, align 4, !tbaa !82
  %582 = getelementptr inbounds float, ptr %580, i64 1
  %583 = load float, ptr %582, align 4, !tbaa !82
  %584 = getelementptr inbounds %struct.TransData, ptr %511, i64 0, i32 7, i64 1
  store float %583, ptr %584, align 4, !tbaa !82
  %585 = getelementptr inbounds float, ptr %580, i64 2
  %586 = load float, ptr %585, align 4, !tbaa !82
  %587 = getelementptr inbounds %struct.TransData, ptr %511, i64 0, i32 7, i64 2
  store float %586, ptr %587, align 4, !tbaa !82
  %588 = getelementptr inbounds %struct.BezTriple, ptr %512, i64 0, i32 7
  %589 = getelementptr inbounds %struct.BezTriple, ptr %512, i64 0, i32 8
  %590 = select i1 %492, ptr %588, ptr %589
  %591 = load i8, ptr %590, align 1, !tbaa !51
  %592 = and i8 %591, 1
  %593 = icmp eq i8 %592, 0
  %594 = select i1 %593, i32 4096, i32 4097
  %595 = getelementptr inbounds %struct.TransData, ptr %511, i64 0, i32 13
  store ptr null, ptr %595, align 8, !tbaa !334
  %596 = getelementptr inbounds %struct.TransData, ptr %511, i64 0, i32 5
  store ptr null, ptr %596, align 8, !tbaa !423
  %597 = getelementptr inbounds %struct.TransData, ptr %511, i64 0, i32 16
  store i32 %594, ptr %597, align 8, !tbaa !20
  %598 = load ptr, ptr @MEM_mallocN, align 8, !tbaa !33
  %599 = call ptr %598(i64 noundef 24, ptr noundef nonnull @.str.37) #18
  %600 = getelementptr inbounds %struct.TransData, ptr %511, i64 0, i32 14
  store ptr %599, ptr %600, align 8, !tbaa !211
  %601 = getelementptr inbounds %struct.BezTriple, ptr %512, i64 0, i32 5
  %602 = load i8, ptr %601, align 1, !tbaa !477
  store i8 %602, ptr %599, align 8, !tbaa !478
  %603 = getelementptr inbounds %struct.TransDataCurveHandleFlags, ptr %599, i64 0, i32 2
  store ptr %601, ptr %603, align 8, !tbaa !479
  %604 = getelementptr inbounds %struct.BezTriple, ptr %512, i64 0, i32 6
  %605 = load i8, ptr %604, align 2, !tbaa !480
  %606 = getelementptr inbounds %struct.TransDataCurveHandleFlags, ptr %599, i64 0, i32 1
  store i8 %605, ptr %606, align 1, !tbaa !481
  %607 = getelementptr inbounds %struct.TransDataCurveHandleFlags, ptr %599, i64 0, i32 3
  store ptr %604, ptr %607, align 8, !tbaa !212
  %608 = getelementptr inbounds %struct.TransData, ptr %511, i64 0, i32 9
  call void @copy_m3_m3(ptr noundef nonnull %608, ptr noundef nonnull %3) #18
  %609 = getelementptr inbounds %struct.TransData, ptr %511, i64 0, i32 8
  call void @copy_m3_m3(ptr noundef nonnull %609, ptr noundef nonnull %2) #18
  %610 = load i16, ptr %489, align 2, !tbaa !321
  %611 = icmp eq i16 %610, 2
  br i1 %611, label %612, label %614

612:                                              ; preds = %577
  %613 = getelementptr inbounds %struct.TransData, ptr %511, i64 0, i32 10
  call void @copy_m3_m3(ptr noundef nonnull %613, ptr noundef nonnull %4) #18
  br label %614

614:                                              ; preds = %577, %612
  %615 = getelementptr inbounds %struct.TransData, ptr %511, i64 1
  %616 = getelementptr inbounds %struct.TransData, ptr %509, i64 1
  %617 = getelementptr inbounds %struct.BezTriple, ptr %512, i64 0, i32 8
  %618 = load i8, ptr %617, align 4, !tbaa !340
  br i1 %466, label %619, label %628

619:                                              ; preds = %614
  %620 = and i8 %618, 1
  br label %621

621:                                              ; preds = %619, %552
  %622 = phi i8 [ %620, %619 ], [ %549, %552 ]
  %623 = phi i8 [ %618, %619 ], [ %548, %552 ]
  %624 = phi ptr [ %599, %619 ], [ null, %552 ]
  %625 = phi ptr [ %616, %619 ], [ %509, %552 ]
  %626 = phi ptr [ %615, %619 ], [ %511, %552 ]
  %627 = icmp eq i8 %622, 0
  br i1 %627, label %708, label %628

628:                                              ; preds = %614, %621
  %629 = phi i8 [ %623, %621 ], [ %618, %614 ]
  %630 = phi ptr [ %624, %621 ], [ %599, %614 ]
  %631 = phi ptr [ %625, %621 ], [ %616, %614 ]
  %632 = phi ptr [ %626, %621 ], [ %615, %614 ]
  %633 = getelementptr inbounds %struct.TransData, ptr %632, i64 0, i32 4
  %634 = getelementptr inbounds [3 x [3 x float]], ptr %512, i64 0, i64 1
  %635 = load float, ptr %634, align 4, !tbaa !82
  store float %635, ptr %633, align 4, !tbaa !82
  %636 = getelementptr inbounds [3 x [3 x float]], ptr %512, i64 0, i64 1, i64 1
  %637 = load float, ptr %636, align 4, !tbaa !82
  %638 = getelementptr inbounds %struct.TransData, ptr %632, i64 0, i32 4, i64 1
  store float %637, ptr %638, align 4, !tbaa !82
  %639 = getelementptr inbounds [3 x [3 x float]], ptr %512, i64 0, i64 1, i64 2
  %640 = load float, ptr %639, align 4, !tbaa !82
  %641 = getelementptr inbounds %struct.TransData, ptr %632, i64 0, i32 4, i64 2
  store float %640, ptr %641, align 4, !tbaa !82
  %642 = getelementptr inbounds %struct.TransData, ptr %632, i64 0, i32 3
  store ptr %634, ptr %642, align 8, !tbaa !182
  %643 = getelementptr inbounds %struct.TransData, ptr %632, i64 0, i32 7
  %644 = load float, ptr %634, align 4, !tbaa !82
  store float %644, ptr %643, align 4, !tbaa !82
  %645 = load float, ptr %636, align 4, !tbaa !82
  %646 = getelementptr inbounds %struct.TransData, ptr %632, i64 0, i32 7, i64 1
  store float %645, ptr %646, align 4, !tbaa !82
  %647 = load float, ptr %639, align 4, !tbaa !82
  %648 = getelementptr inbounds %struct.TransData, ptr %632, i64 0, i32 7, i64 2
  store float %647, ptr %648, align 4, !tbaa !82
  %649 = getelementptr inbounds %struct.BezTriple, ptr %512, i64 0, i32 8
  %650 = and i8 %629, 1
  %651 = zext i8 %650 to i32
  %652 = getelementptr inbounds %struct.TransData, ptr %632, i64 0, i32 16
  store i32 %651, ptr %652, align 8
  %653 = getelementptr inbounds %struct.TransData, ptr %632, i64 0, i32 13
  store ptr null, ptr %653, align 8, !tbaa !334
  %654 = load i32, ptr %0, align 8, !tbaa !161
  switch i32 %654, label %665 [
    i32 16, label %655
    i32 9, label %660
  ]

655:                                              ; preds = %628
  %656 = getelementptr inbounds %struct.BezTriple, ptr %512, i64 0, i32 3
  %657 = getelementptr inbounds %struct.TransData, ptr %632, i64 0, i32 5
  store ptr %656, ptr %657, align 8, !tbaa !423
  %658 = load float, ptr %656, align 4, !tbaa !606
  %659 = getelementptr inbounds %struct.TransData, ptr %632, i64 0, i32 6
  store float %658, ptr %659, align 8, !tbaa !424
  br label %667

660:                                              ; preds = %628
  %661 = getelementptr inbounds %struct.BezTriple, ptr %512, i64 0, i32 1
  %662 = getelementptr inbounds %struct.TransData, ptr %632, i64 0, i32 5
  store ptr %661, ptr %662, align 8, !tbaa !423
  %663 = load float, ptr %661, align 4, !tbaa !607
  %664 = getelementptr inbounds %struct.TransData, ptr %632, i64 0, i32 6
  store float %663, ptr %664, align 8, !tbaa !424
  br label %667

665:                                              ; preds = %628
  %666 = getelementptr inbounds %struct.TransData, ptr %632, i64 0, i32 5
  store ptr null, ptr %666, align 8, !tbaa !423
  br label %667

667:                                              ; preds = %660, %665, %655
  %668 = getelementptr inbounds %struct.TransData, ptr %632, i64 0, i32 9
  call void @copy_m3_m3(ptr noundef nonnull %668, ptr noundef nonnull %3) #18
  %669 = getelementptr inbounds %struct.TransData, ptr %632, i64 0, i32 8
  call void @copy_m3_m3(ptr noundef nonnull %669, ptr noundef nonnull %2) #18
  %670 = load i16, ptr %489, align 2, !tbaa !321
  %671 = icmp eq i16 %670, 2
  br i1 %671, label %672, label %674

672:                                              ; preds = %667
  %673 = getelementptr inbounds %struct.TransData, ptr %632, i64 0, i32 10
  call void @copy_m3_m3(ptr noundef nonnull %673, ptr noundef nonnull %4) #18
  br label %674

674:                                              ; preds = %672, %667
  %675 = getelementptr inbounds %struct.BezTriple, ptr %512, i64 0, i32 7
  %676 = load i8, ptr %675, align 1, !tbaa !341
  %677 = and i8 %676, 1
  %678 = icmp eq i8 %677, 0
  br i1 %678, label %679, label %699

679:                                              ; preds = %674
  %680 = getelementptr inbounds %struct.BezTriple, ptr %512, i64 0, i32 9
  %681 = load i8, ptr %680, align 1, !tbaa !342
  %682 = and i8 %681, 1
  %683 = icmp eq i8 %682, 0
  %684 = icmp eq ptr %630, null
  %685 = and i1 %684, %683
  br i1 %685, label %686, label %699

686:                                              ; preds = %679
  %687 = load i32, ptr %652, align 8, !tbaa !20
  %688 = or i32 %687, 4096
  store i32 %688, ptr %652, align 8, !tbaa !20
  %689 = load ptr, ptr @MEM_mallocN, align 8, !tbaa !33
  %690 = call ptr %689(i64 noundef 24, ptr noundef nonnull @.str.37) #18
  %691 = getelementptr inbounds %struct.TransData, ptr %632, i64 0, i32 14
  store ptr %690, ptr %691, align 8, !tbaa !211
  %692 = getelementptr inbounds %struct.BezTriple, ptr %512, i64 0, i32 5
  %693 = load i8, ptr %692, align 1, !tbaa !477
  store i8 %693, ptr %690, align 8, !tbaa !478
  %694 = getelementptr inbounds %struct.TransDataCurveHandleFlags, ptr %690, i64 0, i32 2
  store ptr %692, ptr %694, align 8, !tbaa !479
  %695 = getelementptr inbounds %struct.BezTriple, ptr %512, i64 0, i32 6
  %696 = load i8, ptr %695, align 2, !tbaa !480
  %697 = getelementptr inbounds %struct.TransDataCurveHandleFlags, ptr %690, i64 0, i32 1
  store i8 %696, ptr %697, align 1, !tbaa !481
  %698 = getelementptr inbounds %struct.TransDataCurveHandleFlags, ptr %690, i64 0, i32 3
  store ptr %695, ptr %698, align 8, !tbaa !212
  br label %699

699:                                              ; preds = %674, %679, %686
  %700 = phi ptr [ %690, %686 ], [ %630, %679 ], [ %630, %674 ]
  %701 = getelementptr inbounds %struct.TransData, ptr %632, i64 1
  %702 = getelementptr inbounds %struct.TransData, ptr %631, i64 1
  br i1 %466, label %703, label %717

703:                                              ; preds = %699
  %704 = load i8, ptr %649, align 4, !tbaa !340
  %705 = and i8 %704, 1
  %706 = icmp ne i8 %705, 0
  %707 = and i1 %706, %491
  br i1 %707, label %717, label %708

708:                                              ; preds = %621, %703
  %709 = phi ptr [ %701, %703 ], [ %626, %621 ]
  %710 = phi ptr [ %702, %703 ], [ %625, %621 ]
  %711 = phi ptr [ %700, %703 ], [ %624, %621 ]
  %712 = getelementptr inbounds %struct.BezTriple, ptr %512, i64 0, i32 9
  %713 = load i8, ptr %712, align 1, !tbaa !342
  %714 = and i8 %713, 1
  %715 = icmp ne i8 %714, 0
  %716 = and i1 %715, %492
  br i1 %716, label %717, label %786

717:                                              ; preds = %708, %703, %699
  %718 = phi ptr [ %711, %708 ], [ %700, %703 ], [ %700, %699 ]
  %719 = phi ptr [ %710, %708 ], [ %702, %703 ], [ %702, %699 ]
  %720 = phi ptr [ %709, %708 ], [ %701, %703 ], [ %701, %699 ]
  %721 = getelementptr inbounds %struct.TransData, ptr %720, i64 0, i32 4
  %722 = getelementptr inbounds [3 x [3 x float]], ptr %512, i64 0, i64 2
  %723 = load float, ptr %722, align 4, !tbaa !82
  store float %723, ptr %721, align 4, !tbaa !82
  %724 = getelementptr inbounds [3 x [3 x float]], ptr %512, i64 0, i64 2, i64 1
  %725 = load float, ptr %724, align 4, !tbaa !82
  %726 = getelementptr inbounds %struct.TransData, ptr %720, i64 0, i32 4, i64 1
  store float %725, ptr %726, align 4, !tbaa !82
  %727 = getelementptr inbounds [3 x [3 x float]], ptr %512, i64 0, i64 2, i64 2
  %728 = load float, ptr %727, align 4, !tbaa !82
  %729 = getelementptr inbounds %struct.TransData, ptr %720, i64 0, i32 4, i64 2
  store float %728, ptr %729, align 4, !tbaa !82
  %730 = getelementptr inbounds %struct.TransData, ptr %720, i64 0, i32 3
  store ptr %722, ptr %730, align 8, !tbaa !182
  %731 = getelementptr inbounds %struct.TransData, ptr %720, i64 0, i32 7
  br i1 %492, label %732, label %741

732:                                              ; preds = %717
  %733 = load i16, ptr %489, align 2, !tbaa !321
  %734 = icmp eq i16 %733, 2
  br i1 %734, label %741, label %735

735:                                              ; preds = %732
  %736 = getelementptr inbounds %struct.BezTriple, ptr %512, i64 0, i32 8
  %737 = load i8, ptr %736, align 4, !tbaa !340
  %738 = freeze i8 %737
  %739 = and i8 %738, 1
  %740 = icmp eq i8 %739, 0
  br i1 %740, label %742, label %741

741:                                              ; preds = %717, %732, %735
  br label %742

742:                                              ; preds = %735, %741
  %743 = phi i64 [ 1, %741 ], [ 2, %735 ]
  %744 = getelementptr inbounds [3 x [3 x float]], ptr %512, i64 0, i64 %743
  %745 = load float, ptr %744, align 4, !tbaa !82
  store float %745, ptr %731, align 4, !tbaa !82
  %746 = getelementptr inbounds float, ptr %744, i64 1
  %747 = load float, ptr %746, align 4, !tbaa !82
  %748 = getelementptr inbounds %struct.TransData, ptr %720, i64 0, i32 7, i64 1
  store float %747, ptr %748, align 4, !tbaa !82
  %749 = getelementptr inbounds float, ptr %744, i64 2
  %750 = load float, ptr %749, align 4, !tbaa !82
  %751 = getelementptr inbounds %struct.TransData, ptr %720, i64 0, i32 7, i64 2
  store float %750, ptr %751, align 4, !tbaa !82
  %752 = getelementptr inbounds %struct.TransData, ptr %720, i64 0, i32 16
  %753 = getelementptr inbounds %struct.BezTriple, ptr %512, i64 0, i32 9
  %754 = getelementptr inbounds %struct.BezTriple, ptr %512, i64 0, i32 8
  %755 = select i1 %492, ptr %753, ptr %754
  %756 = load i8, ptr %755, align 1, !tbaa !51
  %757 = and i8 %756, 1
  %758 = zext i8 %757 to i32
  store i32 %758, ptr %752, align 8, !tbaa !20
  %759 = getelementptr inbounds %struct.TransData, ptr %720, i64 0, i32 13
  store ptr null, ptr %759, align 8, !tbaa !334
  %760 = getelementptr inbounds %struct.TransData, ptr %720, i64 0, i32 5
  store ptr null, ptr %760, align 8, !tbaa !423
  %761 = icmp eq ptr %718, null
  br i1 %761, label %762, label %776

762:                                              ; preds = %742
  %763 = icmp eq i8 %757, 0
  %764 = select i1 %763, i32 4096, i32 4097
  %765 = getelementptr inbounds %struct.TransData, ptr %720, i64 0, i32 16
  store i32 %764, ptr %765, align 8, !tbaa !20
  %766 = load ptr, ptr @MEM_mallocN, align 8, !tbaa !33
  %767 = call ptr %766(i64 noundef 24, ptr noundef nonnull @.str.37) #18
  %768 = getelementptr inbounds %struct.TransData, ptr %720, i64 0, i32 14
  store ptr %767, ptr %768, align 8, !tbaa !211
  %769 = getelementptr inbounds %struct.BezTriple, ptr %512, i64 0, i32 5
  %770 = load i8, ptr %769, align 1, !tbaa !477
  store i8 %770, ptr %767, align 8, !tbaa !478
  %771 = getelementptr inbounds %struct.TransDataCurveHandleFlags, ptr %767, i64 0, i32 2
  store ptr %769, ptr %771, align 8, !tbaa !479
  %772 = getelementptr inbounds %struct.BezTriple, ptr %512, i64 0, i32 6
  %773 = load i8, ptr %772, align 2, !tbaa !480
  %774 = getelementptr inbounds %struct.TransDataCurveHandleFlags, ptr %767, i64 0, i32 1
  store i8 %773, ptr %774, align 1, !tbaa !481
  %775 = getelementptr inbounds %struct.TransDataCurveHandleFlags, ptr %767, i64 0, i32 3
  store ptr %772, ptr %775, align 8, !tbaa !212
  br label %776

776:                                              ; preds = %762, %742
  %777 = getelementptr inbounds %struct.TransData, ptr %720, i64 0, i32 9
  call void @copy_m3_m3(ptr noundef nonnull %777, ptr noundef nonnull %3) #18
  %778 = getelementptr inbounds %struct.TransData, ptr %720, i64 0, i32 8
  call void @copy_m3_m3(ptr noundef nonnull %778, ptr noundef nonnull %2) #18
  %779 = load i16, ptr %489, align 2, !tbaa !321
  %780 = icmp eq i16 %779, 2
  br i1 %780, label %781, label %783

781:                                              ; preds = %776
  %782 = getelementptr inbounds %struct.TransData, ptr %720, i64 0, i32 10
  call void @copy_m3_m3(ptr noundef nonnull %782, ptr noundef nonnull %4) #18
  br label %783

783:                                              ; preds = %781, %776
  %784 = getelementptr inbounds %struct.TransData, ptr %720, i64 1
  %785 = getelementptr inbounds %struct.TransData, ptr %719, i64 1
  br label %786

786:                                              ; preds = %783, %708
  %787 = phi ptr [ %784, %783 ], [ %709, %708 ]
  %788 = phi ptr [ %785, %783 ], [ %710, %708 ]
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %4) #18
  %789 = load i32, ptr %500, align 8, !tbaa !595
  br label %887

790:                                              ; preds = %507
  %791 = icmp eq ptr %510, %509
  %792 = select i1 %466, i1 true, i1 %791
  br i1 %792, label %887, label %793

793:                                              ; preds = %790
  %794 = getelementptr inbounds %struct.TransData, ptr %509, i64 -1
  %795 = icmp ugt ptr %510, %794
  br i1 %795, label %887, label %796

796:                                              ; preds = %793, %830
  %797 = phi ptr [ %832, %830 ], [ %510, %793 ]
  %798 = phi ptr [ %831, %830 ], [ null, %793 ]
  %799 = getelementptr inbounds %struct.TransData, ptr %797, i64 0, i32 16
  %800 = load i32, ptr %799, align 8, !tbaa !20
  %801 = and i32 %800, 1
  %802 = icmp eq i32 %801, 0
  br i1 %802, label %804, label %803

803:                                              ; preds = %796
  store float 0.000000e+00, ptr %797, align 8, !tbaa !25
  br label %830

804:                                              ; preds = %796
  %805 = icmp eq ptr %798, null
  br i1 %805, label %828, label %806

806:                                              ; preds = %804
  %807 = getelementptr inbounds %struct.TransData, ptr %798, i64 0, i32 7
  %808 = getelementptr inbounds %struct.TransData, ptr %797, i64 0, i32 7
  %809 = load float, ptr %808, align 4, !tbaa !82
  %810 = load float, ptr %807, align 4, !tbaa !82
  %811 = fsub fast float %809, %810
  %812 = getelementptr inbounds %struct.TransData, ptr %797, i64 0, i32 7, i64 1
  %813 = getelementptr inbounds %struct.TransData, ptr %798, i64 0, i32 7, i64 1
  %814 = fmul fast float %811, %811
  %815 = load <2 x float>, ptr %812, align 4, !tbaa !82
  %816 = load <2 x float>, ptr %813, align 4, !tbaa !82
  %817 = fsub fast <2 x float> %815, %816
  %818 = fmul fast <2 x float> %817, %817
  %819 = extractelement <2 x float> %818, i64 0
  %820 = fadd fast float %819, %814
  %821 = extractelement <2 x float> %818, i64 1
  %822 = fadd fast float %820, %821
  %823 = call fast float @llvm.sqrt.f32(float %822)
  %824 = getelementptr inbounds %struct.TransData, ptr %797, i64 -1
  %825 = load float, ptr %824, align 8, !tbaa !25
  %826 = fcmp fast olt float %823, %825
  %827 = select i1 %826, float %825, float %823
  store float %827, ptr %797, align 8, !tbaa !25
  br label %830

828:                                              ; preds = %804
  store float 0x47EFFFFFE0000000, ptr %797, align 8, !tbaa !25
  %829 = or i32 %800, 16
  store i32 %829, ptr %799, align 8, !tbaa !20
  br label %830

830:                                              ; preds = %828, %806, %803
  %831 = phi ptr [ %797, %803 ], [ %798, %806 ], [ null, %828 ]
  %832 = getelementptr inbounds %struct.TransData, ptr %797, i64 1
  %833 = icmp ugt ptr %832, %794
  br i1 %833, label %834, label %796, !llvm.loop !608

834:                                              ; preds = %830, %883
  %835 = phi ptr [ %885, %883 ], [ %794, %830 ]
  %836 = phi ptr [ %884, %883 ], [ null, %830 ]
  %837 = getelementptr inbounds %struct.TransData, ptr %835, i64 0, i32 16
  %838 = load i32, ptr %837, align 8, !tbaa !20
  %839 = and i32 %838, 1
  %840 = icmp eq i32 %839, 0
  br i1 %840, label %841, label %880

841:                                              ; preds = %834
  %842 = icmp eq ptr %836, null
  br i1 %842, label %883, label %843

843:                                              ; preds = %841
  %844 = getelementptr inbounds %struct.TransData, ptr %836, i64 0, i32 7
  %845 = getelementptr inbounds %struct.TransData, ptr %835, i64 0, i32 7
  %846 = load float, ptr %845, align 4, !tbaa !82
  %847 = load float, ptr %844, align 4, !tbaa !82
  %848 = fsub fast float %846, %847
  %849 = getelementptr inbounds %struct.TransData, ptr %835, i64 0, i32 7, i64 1
  %850 = load float, ptr %849, align 4, !tbaa !82
  %851 = getelementptr inbounds %struct.TransData, ptr %836, i64 0, i32 7, i64 1
  %852 = load float, ptr %851, align 4, !tbaa !82
  %853 = fsub fast float %850, %852
  %854 = getelementptr inbounds %struct.TransData, ptr %835, i64 0, i32 7, i64 2
  %855 = load float, ptr %854, align 4, !tbaa !82
  %856 = getelementptr inbounds %struct.TransData, ptr %836, i64 0, i32 7, i64 2
  %857 = load float, ptr %856, align 4, !tbaa !82
  %858 = fsub fast float %855, %857
  %859 = fmul fast float %848, %848
  %860 = fmul fast float %853, %853
  %861 = fadd fast float %860, %859
  %862 = fmul fast float %858, %858
  %863 = fadd fast float %861, %862
  %864 = call fast float @llvm.sqrt.f32(float %863)
  %865 = and i32 %838, 16
  %866 = icmp eq i32 %865, 0
  br i1 %866, label %867, label %874

867:                                              ; preds = %843
  %868 = load float, ptr %835, align 8, !tbaa !25
  %869 = fcmp fast olt float %864, %868
  br i1 %869, label %874, label %870

870:                                              ; preds = %867
  %871 = getelementptr inbounds %struct.TransData, ptr %835, i64 1
  %872 = load float, ptr %871, align 8, !tbaa !25
  %873 = fcmp fast olt float %872, %868
  br i1 %873, label %874, label %883

874:                                              ; preds = %870, %867, %843
  %875 = and i32 %838, -17
  store i32 %875, ptr %837, align 8, !tbaa !20
  %876 = getelementptr inbounds %struct.TransData, ptr %835, i64 1
  %877 = load float, ptr %876, align 8, !tbaa !25
  %878 = fcmp fast olt float %864, %877
  %879 = select i1 %878, float %877, float %864
  br label %880

880:                                              ; preds = %874, %834
  %881 = phi float [ 0.000000e+00, %834 ], [ %879, %874 ]
  %882 = phi ptr [ %835, %834 ], [ %836, %874 ]
  store float %881, ptr %835, align 8, !tbaa !25
  br label %883

883:                                              ; preds = %880, %870, %841
  %884 = phi ptr [ null, %841 ], [ %836, %870 ], [ %882, %880 ]
  %885 = getelementptr inbounds %struct.TransData, ptr %835, i64 -1
  %886 = icmp ult ptr %885, %510
  br i1 %886, label %887, label %834, !llvm.loop !609

887:                                              ; preds = %883, %793, %786, %790
  %888 = phi i32 [ %789, %786 ], [ %508, %790 ], [ %508, %793 ], [ %508, %883 ]
  %889 = phi ptr [ %787, %786 ], [ %511, %790 ], [ %511, %793 ], [ %511, %883 ]
  %890 = phi ptr [ %510, %786 ], [ %510, %790 ], [ %509, %793 ], [ %509, %883 ]
  %891 = phi ptr [ %788, %786 ], [ %509, %790 ], [ %509, %793 ], [ %509, %883 ]
  %892 = add nuw nsw i32 %513, 1
  %893 = getelementptr inbounds %struct.BezTriple, ptr %512, i64 1
  %894 = icmp slt i32 %892, %888
  br i1 %894, label %507, label %895, !llvm.loop !610

895:                                              ; preds = %887
  %896 = icmp eq ptr %890, %891
  %897 = select i1 %466, i1 true, i1 %896
  br i1 %897, label %900, label %898

898:                                              ; preds = %895
  %899 = getelementptr inbounds %struct.TransData, ptr %891, i64 -1
  call fastcc void @calc_distanceCurveVerts(ptr noundef %890, ptr noundef nonnull %899)
  br label %900

900:                                              ; preds = %502, %898, %895
  %901 = phi ptr [ %889, %898 ], [ %889, %895 ], [ %496, %502 ]
  %902 = load i32, ptr %0, align 8, !tbaa !161
  switch i32 %902, label %903 [
    i32 16, label %1070
    i32 9, label %1070
  ]

903:                                              ; preds = %900
  call void @BKE_nurb_handles_test(ptr noundef nonnull %495, i8 noundef zeroext %493) #18
  br label %1070

904:                                              ; preds = %494
  %905 = getelementptr inbounds %struct.Nurb, ptr %495, i64 0, i32 7
  %906 = load i32, ptr %905, align 4, !tbaa !596
  %907 = mul nsw i32 %906, %501
  %908 = icmp sgt i32 %907, 0
  br i1 %908, label %909, label %1070

909:                                              ; preds = %904
  %910 = getelementptr inbounds %struct.Nurb, ptr %495, i64 0, i32 17
  %911 = load ptr, ptr %910, align 8, !tbaa !597
  br label %912

912:                                              ; preds = %909, %1058
  %913 = phi ptr [ %1061, %1058 ], [ %496, %909 ]
  %914 = phi ptr [ %1060, %1058 ], [ %496, %909 ]
  %915 = phi ptr [ %1059, %1058 ], [ %496, %909 ]
  %916 = phi i32 [ %1062, %1058 ], [ %907, %909 ]
  %917 = phi ptr [ %1063, %1058 ], [ %911, %909 ]
  %918 = getelementptr inbounds %struct.BPoint, ptr %917, i64 0, i32 4
  %919 = load i16, ptr %918, align 2, !tbaa !598
  %920 = icmp eq i16 %919, 0
  br i1 %920, label %921, label %961

921:                                              ; preds = %912
  %922 = getelementptr inbounds %struct.BPoint, ptr %917, i64 0, i32 3
  %923 = load i16, ptr %922, align 4, !tbaa !600
  %924 = and i16 %923, 1
  %925 = icmp eq i16 %924, 0
  %926 = select i1 %466, i1 %925, i1 false
  br i1 %926, label %1058, label %927

927:                                              ; preds = %921
  %928 = getelementptr inbounds %struct.TransData, ptr %915, i64 0, i32 4
  %929 = load float, ptr %917, align 4, !tbaa !82
  store float %929, ptr %928, align 4, !tbaa !82
  %930 = getelementptr inbounds float, ptr %917, i64 1
  %931 = load float, ptr %930, align 4, !tbaa !82
  %932 = getelementptr inbounds %struct.TransData, ptr %915, i64 0, i32 4, i64 1
  store float %931, ptr %932, align 4, !tbaa !82
  %933 = getelementptr inbounds float, ptr %917, i64 2
  %934 = load float, ptr %933, align 4, !tbaa !82
  %935 = getelementptr inbounds %struct.TransData, ptr %915, i64 0, i32 4, i64 2
  store float %934, ptr %935, align 4, !tbaa !82
  %936 = getelementptr inbounds %struct.TransData, ptr %915, i64 0, i32 3
  store ptr %917, ptr %936, align 8, !tbaa !182
  %937 = getelementptr inbounds %struct.TransData, ptr %915, i64 0, i32 7
  %938 = load float, ptr %917, align 4, !tbaa !82
  store float %938, ptr %937, align 4, !tbaa !82
  %939 = load float, ptr %930, align 4, !tbaa !82
  %940 = getelementptr inbounds %struct.TransData, ptr %915, i64 0, i32 7, i64 1
  store float %939, ptr %940, align 4, !tbaa !82
  %941 = load float, ptr %933, align 4, !tbaa !82
  %942 = getelementptr inbounds %struct.TransData, ptr %915, i64 0, i32 7, i64 2
  store float %941, ptr %942, align 4, !tbaa !82
  %943 = and i16 %923, 1
  %944 = zext i16 %943 to i32
  %945 = getelementptr inbounds %struct.TransData, ptr %915, i64 0, i32 16
  store i32 %944, ptr %945, align 8
  %946 = getelementptr inbounds %struct.TransData, ptr %915, i64 0, i32 13
  store ptr null, ptr %946, align 8, !tbaa !334
  %947 = load i32, ptr %0, align 8, !tbaa !161
  switch i32 %947, label %950 [
    i32 16, label %948
    i32 3, label %948
  ]

948:                                              ; preds = %927, %927
  %949 = getelementptr inbounds %struct.BPoint, ptr %917, i64 0, i32 5
  br label %952

950:                                              ; preds = %927
  %951 = getelementptr inbounds %struct.BPoint, ptr %917, i64 0, i32 1
  br label %952

952:                                              ; preds = %950, %948
  %953 = phi ptr [ %951, %950 ], [ %949, %948 ]
  %954 = getelementptr inbounds %struct.TransData, ptr %915, i64 0, i32 5
  store ptr %953, ptr %954, align 8, !tbaa !423
  %955 = load float, ptr %953, align 4, !tbaa !82
  %956 = getelementptr inbounds %struct.TransData, ptr %915, i64 0, i32 6
  store float %955, ptr %956, align 8, !tbaa !424
  %957 = getelementptr inbounds %struct.TransData, ptr %915, i64 0, i32 9
  call void @copy_m3_m3(ptr noundef nonnull %957, ptr noundef nonnull %3) #18
  %958 = getelementptr inbounds %struct.TransData, ptr %915, i64 0, i32 8
  call void @copy_m3_m3(ptr noundef nonnull %958, ptr noundef nonnull %2) #18
  %959 = getelementptr inbounds %struct.TransData, ptr %915, i64 1
  %960 = getelementptr inbounds %struct.TransData, ptr %913, i64 1
  br label %1058

961:                                              ; preds = %912
  %962 = icmp eq ptr %914, %913
  %963 = select i1 %466, i1 true, i1 %962
  br i1 %963, label %1058, label %964

964:                                              ; preds = %961
  %965 = getelementptr inbounds %struct.TransData, ptr %913, i64 -1
  %966 = icmp ugt ptr %914, %965
  br i1 %966, label %1058, label %967

967:                                              ; preds = %964, %1001
  %968 = phi ptr [ %1003, %1001 ], [ %914, %964 ]
  %969 = phi ptr [ %1002, %1001 ], [ null, %964 ]
  %970 = getelementptr inbounds %struct.TransData, ptr %968, i64 0, i32 16
  %971 = load i32, ptr %970, align 8, !tbaa !20
  %972 = and i32 %971, 1
  %973 = icmp eq i32 %972, 0
  br i1 %973, label %975, label %974

974:                                              ; preds = %967
  store float 0.000000e+00, ptr %968, align 8, !tbaa !25
  br label %1001

975:                                              ; preds = %967
  %976 = icmp eq ptr %969, null
  br i1 %976, label %999, label %977

977:                                              ; preds = %975
  %978 = getelementptr inbounds %struct.TransData, ptr %969, i64 0, i32 7
  %979 = getelementptr inbounds %struct.TransData, ptr %968, i64 0, i32 7
  %980 = load float, ptr %979, align 4, !tbaa !82
  %981 = load float, ptr %978, align 4, !tbaa !82
  %982 = fsub fast float %980, %981
  %983 = getelementptr inbounds %struct.TransData, ptr %968, i64 0, i32 7, i64 1
  %984 = getelementptr inbounds %struct.TransData, ptr %969, i64 0, i32 7, i64 1
  %985 = fmul fast float %982, %982
  %986 = load <2 x float>, ptr %983, align 4, !tbaa !82
  %987 = load <2 x float>, ptr %984, align 4, !tbaa !82
  %988 = fsub fast <2 x float> %986, %987
  %989 = fmul fast <2 x float> %988, %988
  %990 = extractelement <2 x float> %989, i64 0
  %991 = fadd fast float %990, %985
  %992 = extractelement <2 x float> %989, i64 1
  %993 = fadd fast float %991, %992
  %994 = call fast float @llvm.sqrt.f32(float %993)
  %995 = getelementptr inbounds %struct.TransData, ptr %968, i64 -1
  %996 = load float, ptr %995, align 8, !tbaa !25
  %997 = fcmp fast olt float %994, %996
  %998 = select i1 %997, float %996, float %994
  store float %998, ptr %968, align 8, !tbaa !25
  br label %1001

999:                                              ; preds = %975
  store float 0x47EFFFFFE0000000, ptr %968, align 8, !tbaa !25
  %1000 = or i32 %971, 16
  store i32 %1000, ptr %970, align 8, !tbaa !20
  br label %1001

1001:                                             ; preds = %999, %977, %974
  %1002 = phi ptr [ %968, %974 ], [ %969, %977 ], [ null, %999 ]
  %1003 = getelementptr inbounds %struct.TransData, ptr %968, i64 1
  %1004 = icmp ugt ptr %1003, %965
  br i1 %1004, label %1005, label %967, !llvm.loop !608

1005:                                             ; preds = %1001, %1054
  %1006 = phi ptr [ %1056, %1054 ], [ %965, %1001 ]
  %1007 = phi ptr [ %1055, %1054 ], [ null, %1001 ]
  %1008 = getelementptr inbounds %struct.TransData, ptr %1006, i64 0, i32 16
  %1009 = load i32, ptr %1008, align 8, !tbaa !20
  %1010 = and i32 %1009, 1
  %1011 = icmp eq i32 %1010, 0
  br i1 %1011, label %1012, label %1051

1012:                                             ; preds = %1005
  %1013 = icmp eq ptr %1007, null
  br i1 %1013, label %1054, label %1014

1014:                                             ; preds = %1012
  %1015 = getelementptr inbounds %struct.TransData, ptr %1007, i64 0, i32 7
  %1016 = getelementptr inbounds %struct.TransData, ptr %1006, i64 0, i32 7
  %1017 = load float, ptr %1016, align 4, !tbaa !82
  %1018 = load float, ptr %1015, align 4, !tbaa !82
  %1019 = fsub fast float %1017, %1018
  %1020 = getelementptr inbounds %struct.TransData, ptr %1006, i64 0, i32 7, i64 1
  %1021 = load float, ptr %1020, align 4, !tbaa !82
  %1022 = getelementptr inbounds %struct.TransData, ptr %1007, i64 0, i32 7, i64 1
  %1023 = load float, ptr %1022, align 4, !tbaa !82
  %1024 = fsub fast float %1021, %1023
  %1025 = getelementptr inbounds %struct.TransData, ptr %1006, i64 0, i32 7, i64 2
  %1026 = load float, ptr %1025, align 4, !tbaa !82
  %1027 = getelementptr inbounds %struct.TransData, ptr %1007, i64 0, i32 7, i64 2
  %1028 = load float, ptr %1027, align 4, !tbaa !82
  %1029 = fsub fast float %1026, %1028
  %1030 = fmul fast float %1019, %1019
  %1031 = fmul fast float %1024, %1024
  %1032 = fadd fast float %1031, %1030
  %1033 = fmul fast float %1029, %1029
  %1034 = fadd fast float %1032, %1033
  %1035 = call fast float @llvm.sqrt.f32(float %1034)
  %1036 = and i32 %1009, 16
  %1037 = icmp eq i32 %1036, 0
  br i1 %1037, label %1038, label %1045

1038:                                             ; preds = %1014
  %1039 = load float, ptr %1006, align 8, !tbaa !25
  %1040 = fcmp fast olt float %1035, %1039
  br i1 %1040, label %1045, label %1041

1041:                                             ; preds = %1038
  %1042 = getelementptr inbounds %struct.TransData, ptr %1006, i64 1
  %1043 = load float, ptr %1042, align 8, !tbaa !25
  %1044 = fcmp fast olt float %1043, %1039
  br i1 %1044, label %1045, label %1054

1045:                                             ; preds = %1041, %1038, %1014
  %1046 = and i32 %1009, -17
  store i32 %1046, ptr %1008, align 8, !tbaa !20
  %1047 = getelementptr inbounds %struct.TransData, ptr %1006, i64 1
  %1048 = load float, ptr %1047, align 8, !tbaa !25
  %1049 = fcmp fast olt float %1035, %1048
  %1050 = select i1 %1049, float %1048, float %1035
  br label %1051

1051:                                             ; preds = %1045, %1005
  %1052 = phi float [ 0.000000e+00, %1005 ], [ %1050, %1045 ]
  %1053 = phi ptr [ %1006, %1005 ], [ %1007, %1045 ]
  store float %1052, ptr %1006, align 8, !tbaa !25
  br label %1054

1054:                                             ; preds = %1051, %1041, %1012
  %1055 = phi ptr [ null, %1012 ], [ %1007, %1041 ], [ %1053, %1051 ]
  %1056 = getelementptr inbounds %struct.TransData, ptr %1006, i64 -1
  %1057 = icmp ult ptr %1056, %914
  br i1 %1057, label %1058, label %1005, !llvm.loop !609

1058:                                             ; preds = %1054, %921, %964, %952, %961
  %1059 = phi ptr [ %959, %952 ], [ %915, %961 ], [ %915, %964 ], [ %915, %921 ], [ %915, %1054 ]
  %1060 = phi ptr [ %914, %952 ], [ %914, %961 ], [ %913, %964 ], [ %914, %921 ], [ %913, %1054 ]
  %1061 = phi ptr [ %960, %952 ], [ %913, %961 ], [ %913, %964 ], [ %913, %921 ], [ %913, %1054 ]
  %1062 = add nsw i32 %916, -1
  %1063 = getelementptr inbounds %struct.BPoint, ptr %917, i64 1
  %1064 = icmp sgt i32 %916, 1
  br i1 %1064, label %912, label %1065, !llvm.loop !611

1065:                                             ; preds = %1058
  %1066 = icmp eq ptr %1060, %1061
  %1067 = select i1 %466, i1 true, i1 %1066
  br i1 %1067, label %1070, label %1068

1068:                                             ; preds = %1065
  %1069 = getelementptr inbounds %struct.TransData, ptr %1061, i64 -1
  call fastcc void @calc_distanceCurveVerts(ptr noundef %1060, ptr noundef nonnull %1069)
  br label %1070

1070:                                             ; preds = %904, %900, %900, %1065, %1068, %903
  %1071 = phi ptr [ %901, %903 ], [ %901, %900 ], [ %1059, %1068 ], [ %1059, %1065 ], [ %901, %900 ], [ %496, %904 ]
  %1072 = load ptr, ptr %495, align 8, !tbaa !33
  %1073 = icmp eq ptr %1072, null
  br i1 %1073, label %1074, label %494, !llvm.loop !612

1074:                                             ; preds = %1070, %22, %482, %461, %1
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %3) #18
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %2) #18
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @createTransLatticeVerts(ptr nocapture noundef %0) unnamed_addr #6 {
  %2 = alloca [3 x [3 x float]], align 16
  %3 = alloca [3 x [3 x float]], align 16
  %4 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 63
  %5 = load ptr, ptr %4, align 8, !tbaa !69
  %6 = getelementptr inbounds %struct.Object, ptr %5, i64 0, i32 19
  %7 = load ptr, ptr %6, align 8, !tbaa !34
  %8 = getelementptr inbounds %struct.Lattice, ptr %7, i64 0, i32 26
  %9 = load ptr, ptr %8, align 8, !tbaa !613
  %10 = load ptr, ptr %9, align 8, !tbaa !615
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %2) #18
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %3) #18
  %11 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 1
  %12 = load i32, ptr %11, align 4, !tbaa !24
  %13 = and i32 %12, 2048
  %14 = getelementptr inbounds %struct.Lattice, ptr %10, i64 0, i32 21
  %15 = getelementptr inbounds %struct.Lattice, ptr %10, i64 0, i32 2
  %16 = load i16, ptr %15, align 8, !tbaa !617
  %17 = sext i16 %16 to i32
  %18 = getelementptr inbounds %struct.Lattice, ptr %10, i64 0, i32 3
  %19 = load i16, ptr %18, align 2, !tbaa !618
  %20 = sext i16 %19 to i32
  %21 = mul nsw i32 %20, %17
  %22 = getelementptr inbounds %struct.Lattice, ptr %10, i64 0, i32 4
  %23 = load i16, ptr %22, align 4, !tbaa !619
  %24 = sext i16 %23 to i32
  %25 = mul nsw i32 %21, %24
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %191, label %27

27:                                               ; preds = %1
  %28 = load ptr, ptr %14, align 8, !tbaa !620
  %29 = lshr exact i32 %13, 11
  %30 = and i32 %25, 1
  %31 = icmp eq i32 %25, 1
  br i1 %31, label %68, label %32

32:                                               ; preds = %27
  %33 = and i32 %25, -2
  br label %34

34:                                               ; preds = %62, %32
  %35 = phi i32 [ 0, %32 ], [ %64, %62 ]
  %36 = phi i32 [ 0, %32 ], [ %63, %62 ]
  %37 = phi ptr [ %28, %32 ], [ %65, %62 ]
  %38 = phi i32 [ 0, %32 ], [ %66, %62 ]
  %39 = getelementptr inbounds %struct.BPoint, ptr %37, i64 0, i32 4
  %40 = load i16, ptr %39, align 2, !tbaa !598
  %41 = icmp eq i16 %40, 0
  br i1 %41, label %42, label %49

42:                                               ; preds = %34
  %43 = getelementptr inbounds %struct.BPoint, ptr %37, i64 0, i32 3
  %44 = load i16, ptr %43, align 4, !tbaa !600
  %45 = and i16 %44, 1
  %46 = zext i16 %45 to i32
  %47 = add nsw i32 %35, %46
  %48 = add nsw i32 %36, %29
  br label %49

49:                                               ; preds = %42, %34
  %50 = phi i32 [ %36, %34 ], [ %48, %42 ]
  %51 = phi i32 [ %35, %34 ], [ %47, %42 ]
  %52 = getelementptr inbounds %struct.BPoint, ptr %37, i64 1, i32 4
  %53 = load i16, ptr %52, align 2, !tbaa !598
  %54 = icmp eq i16 %53, 0
  br i1 %54, label %55, label %62

55:                                               ; preds = %49
  %56 = getelementptr inbounds %struct.BPoint, ptr %37, i64 1, i32 3
  %57 = load i16, ptr %56, align 4, !tbaa !600
  %58 = and i16 %57, 1
  %59 = zext i16 %58 to i32
  %60 = add nsw i32 %51, %59
  %61 = add nsw i32 %50, %29
  br label %62

62:                                               ; preds = %55, %49
  %63 = phi i32 [ %50, %49 ], [ %61, %55 ]
  %64 = phi i32 [ %51, %49 ], [ %60, %55 ]
  %65 = getelementptr inbounds %struct.BPoint, ptr %37, i64 2
  %66 = add i32 %38, 2
  %67 = icmp eq i32 %66, %33
  br i1 %67, label %68, label %34, !llvm.loop !621

68:                                               ; preds = %62, %27
  %69 = phi i32 [ undef, %27 ], [ %63, %62 ]
  %70 = phi i32 [ undef, %27 ], [ %64, %62 ]
  %71 = phi i32 [ 0, %27 ], [ %64, %62 ]
  %72 = phi i32 [ 0, %27 ], [ %63, %62 ]
  %73 = phi ptr [ %28, %27 ], [ %65, %62 ]
  %74 = icmp eq i32 %30, 0
  br i1 %74, label %86, label %75

75:                                               ; preds = %68
  %76 = getelementptr inbounds %struct.BPoint, ptr %73, i64 0, i32 4
  %77 = load i16, ptr %76, align 2, !tbaa !598
  %78 = icmp eq i16 %77, 0
  br i1 %78, label %79, label %86

79:                                               ; preds = %75
  %80 = getelementptr inbounds %struct.BPoint, ptr %73, i64 0, i32 3
  %81 = load i16, ptr %80, align 4, !tbaa !600
  %82 = and i16 %81, 1
  %83 = zext i16 %82 to i32
  %84 = add nsw i32 %71, %83
  %85 = add nsw i32 %72, %29
  br label %86

86:                                               ; preds = %75, %79, %68
  %87 = phi i32 [ %69, %68 ], [ %72, %75 ], [ %85, %79 ]
  %88 = phi i32 [ %70, %68 ], [ %71, %75 ], [ %84, %79 ]
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %191, label %90

90:                                               ; preds = %86
  %91 = icmp eq i32 %13, 0
  %92 = select i1 %91, i32 %88, i32 %87
  %93 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 9
  store i32 %92, ptr %93, align 8
  %94 = load ptr, ptr @MEM_callocN, align 8, !tbaa !33
  %95 = sext i32 %92 to i64
  %96 = mul nsw i64 %95, 224
  %97 = tail call ptr %94(i64 noundef %96, ptr noundef nonnull @.str.48) #18
  %98 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 10
  store ptr %97, ptr %98, align 8, !tbaa !19
  %99 = load ptr, ptr %4, align 8, !tbaa !69
  %100 = getelementptr inbounds %struct.Object, ptr %99, i64 0, i32 47
  call void @copy_m3_m4(ptr noundef nonnull %2, ptr noundef nonnull %100) #18
  call void @pseudoinverse_m3_m3(ptr noundef nonnull %3, ptr noundef nonnull %2, float noundef nofpclass(nan inf) 0x3E45798EE0000000) #18
  %101 = load i16, ptr %15, align 8, !tbaa !617
  %102 = sext i16 %101 to i32
  %103 = load i16, ptr %18, align 2, !tbaa !618
  %104 = sext i16 %103 to i32
  %105 = mul nsw i32 %104, %102
  %106 = load i16, ptr %22, align 4, !tbaa !619
  %107 = sext i16 %106 to i32
  %108 = mul nsw i32 %105, %107
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %191, label %110

110:                                              ; preds = %90
  %111 = add nsw i32 %108, -1
  %112 = load ptr, ptr %14, align 8, !tbaa !620
  %113 = load ptr, ptr %98, align 8, !tbaa !19
  br i1 %91, label %114, label %153

114:                                              ; preds = %110, %148
  %115 = phi i32 [ %151, %148 ], [ %111, %110 ]
  %116 = phi ptr [ %149, %148 ], [ %113, %110 ]
  %117 = phi ptr [ %150, %148 ], [ %112, %110 ]
  %118 = getelementptr inbounds %struct.BPoint, ptr %117, i64 0, i32 3
  %119 = load i16, ptr %118, align 4, !tbaa !600
  %120 = and i16 %119, 1
  %121 = icmp eq i16 %120, 0
  br i1 %121, label %148, label %122

122:                                              ; preds = %114
  %123 = getelementptr inbounds %struct.BPoint, ptr %117, i64 0, i32 4
  %124 = load i16, ptr %123, align 2, !tbaa !598
  %125 = icmp eq i16 %124, 0
  br i1 %125, label %126, label %148

126:                                              ; preds = %122
  %127 = getelementptr inbounds %struct.TransData, ptr %116, i64 0, i32 4
  %128 = load float, ptr %117, align 4, !tbaa !82
  store float %128, ptr %127, align 4, !tbaa !82
  %129 = getelementptr inbounds float, ptr %117, i64 1
  %130 = load float, ptr %129, align 4, !tbaa !82
  %131 = getelementptr inbounds %struct.TransData, ptr %116, i64 0, i32 4, i64 1
  store float %130, ptr %131, align 4, !tbaa !82
  %132 = getelementptr inbounds float, ptr %117, i64 2
  %133 = load float, ptr %132, align 4, !tbaa !82
  %134 = getelementptr inbounds %struct.TransData, ptr %116, i64 0, i32 4, i64 2
  store float %133, ptr %134, align 4, !tbaa !82
  %135 = getelementptr inbounds %struct.TransData, ptr %116, i64 0, i32 3
  store ptr %117, ptr %135, align 8, !tbaa !182
  %136 = getelementptr inbounds %struct.TransData, ptr %116, i64 0, i32 7
  %137 = load float, ptr %117, align 4, !tbaa !82
  store float %137, ptr %136, align 4, !tbaa !82
  %138 = load float, ptr %129, align 4, !tbaa !82
  %139 = getelementptr inbounds %struct.TransData, ptr %116, i64 0, i32 7, i64 1
  store float %138, ptr %139, align 4, !tbaa !82
  %140 = load float, ptr %132, align 4, !tbaa !82
  %141 = getelementptr inbounds %struct.TransData, ptr %116, i64 0, i32 7, i64 2
  store float %140, ptr %141, align 4, !tbaa !82
  %142 = getelementptr inbounds %struct.TransData, ptr %116, i64 0, i32 16
  store i32 1, ptr %142, align 8
  %143 = getelementptr inbounds %struct.TransData, ptr %116, i64 0, i32 9
  call void @copy_m3_m3(ptr noundef nonnull %143, ptr noundef nonnull %3) #18
  %144 = getelementptr inbounds %struct.TransData, ptr %116, i64 0, i32 8
  call void @copy_m3_m3(ptr noundef nonnull %144, ptr noundef nonnull %2) #18
  %145 = getelementptr inbounds %struct.TransData, ptr %116, i64 0, i32 13
  store ptr null, ptr %145, align 8, !tbaa !334
  %146 = getelementptr inbounds %struct.TransData, ptr %116, i64 0, i32 5
  store ptr null, ptr %146, align 8, !tbaa !423
  %147 = getelementptr inbounds %struct.TransData, ptr %116, i64 1
  br label %148

148:                                              ; preds = %126, %122, %114
  %149 = phi ptr [ %147, %126 ], [ %116, %122 ], [ %116, %114 ]
  %150 = getelementptr inbounds %struct.BPoint, ptr %117, i64 1
  %151 = add nsw i32 %115, -1
  %152 = icmp eq i32 %115, 0
  br i1 %152, label %191, label %114, !llvm.loop !622

153:                                              ; preds = %110, %186
  %154 = phi i32 [ %189, %186 ], [ %111, %110 ]
  %155 = phi ptr [ %187, %186 ], [ %113, %110 ]
  %156 = phi ptr [ %188, %186 ], [ %112, %110 ]
  %157 = getelementptr inbounds %struct.BPoint, ptr %156, i64 0, i32 4
  %158 = load i16, ptr %157, align 2, !tbaa !598
  %159 = icmp eq i16 %158, 0
  br i1 %159, label %160, label %186

160:                                              ; preds = %153
  %161 = getelementptr inbounds %struct.TransData, ptr %155, i64 0, i32 4
  %162 = load float, ptr %156, align 4, !tbaa !82
  store float %162, ptr %161, align 4, !tbaa !82
  %163 = getelementptr inbounds float, ptr %156, i64 1
  %164 = load float, ptr %163, align 4, !tbaa !82
  %165 = getelementptr inbounds %struct.TransData, ptr %155, i64 0, i32 4, i64 1
  store float %164, ptr %165, align 4, !tbaa !82
  %166 = getelementptr inbounds float, ptr %156, i64 2
  %167 = load float, ptr %166, align 4, !tbaa !82
  %168 = getelementptr inbounds %struct.TransData, ptr %155, i64 0, i32 4, i64 2
  store float %167, ptr %168, align 4, !tbaa !82
  %169 = getelementptr inbounds %struct.TransData, ptr %155, i64 0, i32 3
  store ptr %156, ptr %169, align 8, !tbaa !182
  %170 = getelementptr inbounds %struct.TransData, ptr %155, i64 0, i32 7
  %171 = load float, ptr %156, align 4, !tbaa !82
  store float %171, ptr %170, align 4, !tbaa !82
  %172 = load float, ptr %163, align 4, !tbaa !82
  %173 = getelementptr inbounds %struct.TransData, ptr %155, i64 0, i32 7, i64 1
  store float %172, ptr %173, align 4, !tbaa !82
  %174 = load float, ptr %166, align 4, !tbaa !82
  %175 = getelementptr inbounds %struct.TransData, ptr %155, i64 0, i32 7, i64 2
  store float %174, ptr %175, align 4, !tbaa !82
  %176 = getelementptr inbounds %struct.BPoint, ptr %156, i64 0, i32 3
  %177 = load i16, ptr %176, align 4, !tbaa !600
  %178 = and i16 %177, 1
  %179 = zext i16 %178 to i32
  %180 = getelementptr inbounds %struct.TransData, ptr %155, i64 0, i32 16
  store i32 %179, ptr %180, align 8
  %181 = getelementptr inbounds %struct.TransData, ptr %155, i64 0, i32 9
  call void @copy_m3_m3(ptr noundef nonnull %181, ptr noundef nonnull %3) #18
  %182 = getelementptr inbounds %struct.TransData, ptr %155, i64 0, i32 8
  call void @copy_m3_m3(ptr noundef nonnull %182, ptr noundef nonnull %2) #18
  %183 = getelementptr inbounds %struct.TransData, ptr %155, i64 0, i32 13
  store ptr null, ptr %183, align 8, !tbaa !334
  %184 = getelementptr inbounds %struct.TransData, ptr %155, i64 0, i32 5
  store ptr null, ptr %184, align 8, !tbaa !423
  %185 = getelementptr inbounds %struct.TransData, ptr %155, i64 1
  br label %186

186:                                              ; preds = %153, %160
  %187 = phi ptr [ %185, %160 ], [ %155, %153 ]
  %188 = getelementptr inbounds %struct.BPoint, ptr %156, i64 1
  %189 = add nsw i32 %154, -1
  %190 = icmp eq i32 %154, 0
  br i1 %190, label %191, label %153, !llvm.loop !622

191:                                              ; preds = %186, %148, %1, %90, %86
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %3) #18
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %2) #18
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @createTransMBallVerts(ptr nocapture noundef %0) unnamed_addr #6 {
  %2 = alloca [3 x [3 x float]], align 16
  %3 = alloca [3 x [3 x float]], align 16
  %4 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 63
  %5 = load ptr, ptr %4, align 8, !tbaa !69
  %6 = getelementptr inbounds %struct.Object, ptr %5, i64 0, i32 19
  %7 = load ptr, ptr %6, align 8, !tbaa !34
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %2) #18
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %3) #18
  %8 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 1
  %9 = load i32, ptr %8, align 4, !tbaa !24
  %10 = and i32 %9, 2048
  %11 = getelementptr inbounds %struct.MetaBall, ptr %7, i64 0, i32 4
  %12 = load ptr, ptr %11, align 8, !tbaa !623
  %13 = load ptr, ptr %12, align 8, !tbaa !33
  %14 = icmp eq ptr %13, null
  br i1 %14, label %117, label %15

15:                                               ; preds = %1
  %16 = lshr exact i32 %10, 11
  br label %17

17:                                               ; preds = %15, %17
  %18 = phi ptr [ %13, %15 ], [ %27, %17 ]
  %19 = phi i32 [ 0, %15 ], [ %25, %17 ]
  %20 = phi i32 [ 0, %15 ], [ %26, %17 ]
  %21 = getelementptr inbounds %struct.MetaElem, ptr %18, i64 0, i32 4
  %22 = load i16, ptr %21, align 2, !tbaa !625
  %23 = and i16 %22, 1
  %24 = zext i16 %23 to i32
  %25 = add nuw nsw i32 %19, %24
  %26 = add nuw nsw i32 %20, %16
  %27 = load ptr, ptr %18, align 8, !tbaa !33
  %28 = icmp eq ptr %27, null
  br i1 %28, label %29, label %17, !llvm.loop !627

29:                                               ; preds = %17
  %30 = icmp eq i32 %25, 0
  br i1 %30, label %117, label %31

31:                                               ; preds = %29
  %32 = icmp eq i32 %10, 0
  %33 = select i1 %32, i32 %25, i32 %26
  %34 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 9
  store i32 %33, ptr %34, align 8
  %35 = load ptr, ptr @MEM_callocN, align 8, !tbaa !33
  %36 = zext i32 %33 to i64
  %37 = mul nuw nsw i64 %36, 224
  %38 = tail call ptr %35(i64 noundef %37, ptr noundef nonnull @.str.49) #18
  %39 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 10
  store ptr %38, ptr %39, align 8, !tbaa !19
  %40 = load ptr, ptr @MEM_callocN, align 8, !tbaa !33
  %41 = load i32, ptr %34, align 8, !tbaa !5
  %42 = sext i32 %41 to i64
  %43 = mul nsw i64 %42, 384
  %44 = tail call ptr %40(i64 noundef %43, ptr noundef nonnull @.str.50) #18
  %45 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 11
  store ptr %44, ptr %45, align 8, !tbaa !406
  %46 = load ptr, ptr %4, align 8, !tbaa !69
  %47 = getelementptr inbounds %struct.Object, ptr %46, i64 0, i32 47
  call void @copy_m3_m4(ptr noundef nonnull %2, ptr noundef nonnull %47) #18
  call void @pseudoinverse_m3_m3(ptr noundef nonnull %3, ptr noundef nonnull %2, float noundef nofpclass(nan inf) 0x3E45798EE0000000) #18
  %48 = load ptr, ptr %11, align 8, !tbaa !623
  %49 = load ptr, ptr %48, align 8, !tbaa !33
  %50 = icmp eq ptr %49, null
  br i1 %50, label %117, label %51

51:                                               ; preds = %31, %112
  %52 = phi ptr [ %115, %112 ], [ %49, %31 ]
  %53 = phi ptr [ %114, %112 ], [ %44, %31 ]
  %54 = phi ptr [ %113, %112 ], [ %38, %31 ]
  br i1 %32, label %55, label %60

55:                                               ; preds = %51
  %56 = getelementptr inbounds %struct.MetaElem, ptr %52, i64 0, i32 4
  %57 = load i16, ptr %56, align 2, !tbaa !625
  %58 = and i16 %57, 1
  %59 = icmp eq i16 %58, 0
  br i1 %59, label %112, label %60

60:                                               ; preds = %55, %51
  %61 = getelementptr inbounds %struct.MetaElem, ptr %52, i64 0, i32 7
  %62 = getelementptr inbounds %struct.TransData, ptr %54, i64 0, i32 3
  store ptr %61, ptr %62, align 8, !tbaa !182
  %63 = getelementptr inbounds %struct.TransData, ptr %54, i64 0, i32 4
  %64 = load float, ptr %61, align 4, !tbaa !82
  store float %64, ptr %63, align 4, !tbaa !82
  %65 = getelementptr inbounds %struct.MetaElem, ptr %52, i64 0, i32 8
  %66 = load float, ptr %65, align 4, !tbaa !82
  %67 = getelementptr inbounds %struct.TransData, ptr %54, i64 0, i32 4, i64 1
  store float %66, ptr %67, align 4, !tbaa !82
  %68 = getelementptr inbounds %struct.MetaElem, ptr %52, i64 0, i32 9
  %69 = load float, ptr %68, align 4, !tbaa !82
  %70 = getelementptr inbounds %struct.TransData, ptr %54, i64 0, i32 4, i64 2
  store float %69, ptr %70, align 4, !tbaa !82
  %71 = getelementptr inbounds %struct.TransData, ptr %54, i64 0, i32 7
  %72 = load float, ptr %61, align 4, !tbaa !82
  store float %72, ptr %71, align 4, !tbaa !82
  %73 = load float, ptr %65, align 4, !tbaa !82
  %74 = getelementptr inbounds %struct.TransData, ptr %54, i64 0, i32 7, i64 1
  store float %73, ptr %74, align 4, !tbaa !82
  %75 = load float, ptr %68, align 4, !tbaa !82
  %76 = getelementptr inbounds %struct.TransData, ptr %54, i64 0, i32 7, i64 2
  store float %75, ptr %76, align 4, !tbaa !82
  %77 = getelementptr inbounds %struct.TransData, ptr %54, i64 0, i32 10
  %78 = getelementptr inbounds %struct.MetaElem, ptr %52, i64 0, i32 10
  call void @quat_to_mat3(ptr noundef nonnull %77, ptr noundef nonnull %78) #18
  %79 = getelementptr inbounds %struct.MetaElem, ptr %52, i64 0, i32 4
  %80 = load i16, ptr %79, align 2, !tbaa !625
  %81 = and i16 %80, 1
  %82 = icmp eq i16 %81, 0
  %83 = select i1 %82, i32 8, i32 41
  %84 = getelementptr inbounds %struct.TransData, ptr %54, i64 0, i32 16
  store i32 %83, ptr %84, align 8
  %85 = getelementptr inbounds %struct.TransData, ptr %54, i64 0, i32 9
  call void @copy_m3_m3(ptr noundef nonnull %85, ptr noundef nonnull %3) #18
  %86 = getelementptr inbounds %struct.TransData, ptr %54, i64 0, i32 8
  call void @copy_m3_m3(ptr noundef nonnull %86, ptr noundef nonnull %2) #18
  %87 = getelementptr inbounds %struct.TransData, ptr %54, i64 0, i32 13
  store ptr %53, ptr %87, align 8, !tbaa !334
  %88 = load i16, ptr %79, align 2, !tbaa !625
  %89 = and i16 %88, 16
  %90 = icmp eq i16 %89, 0
  %91 = getelementptr inbounds %struct.MetaElem, ptr %52, i64 0, i32 16
  %92 = getelementptr inbounds %struct.MetaElem, ptr %52, i64 0, i32 14
  %93 = select i1 %90, ptr %91, ptr %92
  %94 = load float, ptr %93, align 8, !tbaa !82
  %95 = getelementptr inbounds %struct.TransData, ptr %54, i64 0, i32 5
  store ptr %93, ptr %95, align 8
  %96 = getelementptr inbounds %struct.TransData, ptr %54, i64 0, i32 6
  store float %94, ptr %96, align 8
  %97 = getelementptr inbounds %struct.MetaElem, ptr %52, i64 0, i32 11
  %98 = getelementptr inbounds %struct.TransDataExtension, ptr %53, i64 0, i32 11
  store ptr %97, ptr %98, align 8, !tbaa !409
  %99 = load float, ptr %97, align 4, !tbaa !628
  %100 = getelementptr inbounds %struct.TransDataExtension, ptr %53, i64 0, i32 12
  store float %99, ptr %100, align 8, !tbaa !82
  %101 = getelementptr inbounds %struct.MetaElem, ptr %52, i64 0, i32 12
  %102 = load float, ptr %101, align 8, !tbaa !629
  %103 = getelementptr inbounds %struct.TransDataExtension, ptr %53, i64 0, i32 12, i64 1
  store float %102, ptr %103, align 4, !tbaa !82
  %104 = getelementptr inbounds %struct.MetaElem, ptr %52, i64 0, i32 13
  %105 = load float, ptr %104, align 4, !tbaa !630
  %106 = getelementptr inbounds %struct.TransDataExtension, ptr %53, i64 0, i32 12, i64 2
  store float %105, ptr %106, align 8, !tbaa !82
  %107 = getelementptr inbounds %struct.TransDataExtension, ptr %53, i64 0, i32 5
  store ptr %78, ptr %107, align 8, !tbaa !631
  %108 = getelementptr inbounds %struct.TransDataExtension, ptr %53, i64 0, i32 6
  call void @copy_qt_qt(ptr noundef nonnull %108, ptr noundef nonnull %78) #18
  %109 = getelementptr inbounds %struct.TransDataExtension, ptr %53, i64 0, i32 3
  store ptr null, ptr %109, align 8, !tbaa !408
  %110 = getelementptr inbounds %struct.TransData, ptr %54, i64 1
  %111 = getelementptr inbounds %struct.TransDataExtension, ptr %53, i64 1
  br label %112

112:                                              ; preds = %55, %60
  %113 = phi ptr [ %110, %60 ], [ %54, %55 ]
  %114 = phi ptr [ %111, %60 ], [ %53, %55 ]
  %115 = load ptr, ptr %52, align 8, !tbaa !33
  %116 = icmp eq ptr %115, null
  br i1 %116, label %117, label %51, !llvm.loop !632

117:                                              ; preds = %112, %1, %31, %29
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %3) #18
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %2) #18
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @createTransArmatureVerts(ptr nocapture noundef %0) unnamed_addr #6 {
  %2 = alloca [3 x [3 x float]], align 16
  %3 = alloca [3 x [3 x float]], align 16
  %4 = alloca [3 x [3 x float]], align 16
  %5 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 63
  %6 = load ptr, ptr %5, align 8, !tbaa !69
  %7 = getelementptr inbounds %struct.Object, ptr %6, i64 0, i32 19
  %8 = load ptr, ptr %7, align 8, !tbaa !34
  %9 = getelementptr inbounds %struct.bArmature, ptr %8, i64 0, i32 4
  %10 = load ptr, ptr %9, align 8, !tbaa !84
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %2) #18
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %3) #18
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %4) #18
  %11 = getelementptr inbounds %struct.bArmature, ptr %8, i64 0, i32 8
  %12 = load i32, ptr %11, align 8, !tbaa !70
  %13 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 9
  store i32 0, ptr %13, align 8, !tbaa !5
  %14 = load ptr, ptr %10, align 8, !tbaa !33
  %15 = icmp eq ptr %14, null
  br i1 %15, label %416, label %16

16:                                               ; preds = %1
  %17 = getelementptr inbounds %struct.bArmature, ptr %8, i64 0, i32 15
  %18 = and i32 %12, 256
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %63

20:                                               ; preds = %16
  %21 = load i32, ptr %17, align 8, !tbaa !35
  br label %22

22:                                               ; preds = %58, %20
  %23 = phi i32 [ 0, %20 ], [ %59, %58 ]
  %24 = phi i32 [ 0, %20 ], [ %60, %58 ]
  %25 = phi ptr [ %14, %20 ], [ %61, %58 ]
  %26 = getelementptr inbounds %struct.EditBone, ptr %25, i64 0, i32 10
  %27 = load i32, ptr %26, align 8, !tbaa !633
  %28 = and i32 %27, %21
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %58, label %30

30:                                               ; preds = %22
  %31 = getelementptr inbounds %struct.EditBone, ptr %25, i64 0, i32 9
  %32 = load i32, ptr %31, align 4, !tbaa !85
  %33 = and i32 %32, 525312
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %58

35:                                               ; preds = %30
  %36 = load i32, ptr %0, align 8, !tbaa !161
  switch i32 %36, label %47 [
    i32 14, label %42
    i32 18, label %37
  ]

37:                                               ; preds = %35
  %38 = and i32 %32, 1
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %58, label %40

40:                                               ; preds = %37
  %41 = add nsw i32 %24, 1
  br label %56

42:                                               ; preds = %35
  %43 = and i32 %32, 1
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %58, label %45

45:                                               ; preds = %42
  %46 = add nsw i32 %24, 1
  br label %56

47:                                               ; preds = %35
  %48 = lshr i32 %32, 2
  %49 = and i32 %48, 1
  %50 = add nsw i32 %24, %49
  %51 = lshr i32 %32, 1
  %52 = and i32 %51, 1
  %53 = add nsw i32 %50, %52
  %54 = and i32 %32, 6
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %58, label %56

56:                                               ; preds = %47, %40, %45
  %57 = phi i32 [ %46, %45 ], [ %41, %40 ], [ %53, %47 ]
  store i32 %57, ptr %13, align 8, !tbaa !5
  br label %58

58:                                               ; preds = %56, %47, %42, %37, %30, %22
  %59 = phi i32 [ %23, %42 ], [ %23, %37 ], [ %23, %30 ], [ %23, %22 ], [ %23, %47 ], [ %57, %56 ]
  %60 = phi i32 [ %24, %42 ], [ %24, %37 ], [ %24, %30 ], [ %24, %22 ], [ %53, %47 ], [ %57, %56 ]
  %61 = load ptr, ptr %25, align 8, !tbaa !33
  %62 = icmp eq ptr %61, null
  br i1 %62, label %111, label %22, !llvm.loop !634

63:                                               ; preds = %16, %105
  %64 = phi ptr [ %107, %105 ], [ %14, %16 ]
  %65 = phi i32 [ %106, %105 ], [ 0, %16 ]
  %66 = load i32, ptr %13, align 8, !tbaa !5
  %67 = load i32, ptr %17, align 8, !tbaa !35
  %68 = getelementptr inbounds %struct.EditBone, ptr %64, i64 0, i32 10
  %69 = load i32, ptr %68, align 8, !tbaa !633
  %70 = and i32 %69, %67
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %105, label %72

72:                                               ; preds = %63
  %73 = getelementptr inbounds %struct.EditBone, ptr %64, i64 0, i32 9
  %74 = load i32, ptr %73, align 4, !tbaa !85
  %75 = and i32 %74, 525312
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %105

77:                                               ; preds = %72
  %78 = load i32, ptr %0, align 8, !tbaa !161
  switch i32 %78, label %85 [
    i32 14, label %79
    i32 18, label %82
  ]

79:                                               ; preds = %77
  %80 = and i32 %74, 1
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %105, label %97

82:                                               ; preds = %77
  %83 = and i32 %74, 1
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %105, label %97

85:                                               ; preds = %77
  %86 = lshr i32 %74, 2
  %87 = and i32 %86, 1
  %88 = add nsw i32 %66, %87
  %89 = lshr i32 %74, 1
  %90 = and i32 %89, 1
  %91 = add nsw i32 %88, %90
  %92 = and i32 %74, 6
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %95, label %94

94:                                               ; preds = %85
  store i32 %91, ptr %13, align 8, !tbaa !5
  br label %95

95:                                               ; preds = %85, %94
  %96 = icmp slt i32 %66, %91
  br i1 %96, label %99, label %105

97:                                               ; preds = %82, %79
  %98 = add nsw i32 %66, 1
  store i32 %98, ptr %13, align 8, !tbaa !5
  br label %99

99:                                               ; preds = %97, %95
  %100 = load ptr, ptr %9, align 8, !tbaa !84
  %101 = tail call ptr @ED_armature_bone_get_mirrored(ptr noundef %100, ptr noundef nonnull %64) #18
  %102 = icmp ne ptr %101, null
  %103 = zext i1 %102 to i32
  %104 = add nsw i32 %65, %103
  br label %105

105:                                              ; preds = %72, %82, %79, %63, %99, %95
  %106 = phi i32 [ %65, %95 ], [ %104, %99 ], [ %65, %63 ], [ %65, %79 ], [ %65, %82 ], [ %65, %72 ]
  %107 = load ptr, ptr %64, align 8, !tbaa !33
  %108 = icmp eq ptr %107, null
  br i1 %108, label %109, label %63, !llvm.loop !634

109:                                              ; preds = %105
  %110 = load i32, ptr %13, align 8, !tbaa !5
  br label %111

111:                                              ; preds = %58, %109
  %112 = phi i32 [ %110, %109 ], [ %59, %58 ]
  %113 = phi i32 [ %106, %109 ], [ 0, %58 ]
  switch i32 %112, label %120 [
    i32 0, label %416
    i32 1, label %114
  ]

114:                                              ; preds = %111
  %115 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 32
  %116 = load i16, ptr %115, align 2, !tbaa !321
  switch i16 %116, label %120 [
    i16 0, label %117
    i16 3, label %117
    i16 4, label %117
  ]

117:                                              ; preds = %114, %114, %114
  %118 = load i32, ptr %0, align 8, !tbaa !161
  switch i32 %118, label %120 [
    i32 3, label %119
    i32 2, label %119
    i32 10, label %119
  ]

119:                                              ; preds = %117, %117, %117
  store i16 2, ptr %115, align 2, !tbaa !321
  br label %120

120:                                              ; preds = %111, %114, %117, %119
  %121 = load ptr, ptr %5, align 8, !tbaa !69
  %122 = getelementptr inbounds %struct.Object, ptr %121, i64 0, i32 47
  call void @copy_m3_m4(ptr noundef nonnull %2, ptr noundef nonnull %122) #18
  call void @pseudoinverse_m3_m3(ptr noundef nonnull %3, ptr noundef nonnull %2, float noundef nofpclass(nan inf) 0x3E45798EE0000000) #18
  %123 = load ptr, ptr @MEM_callocN, align 8, !tbaa !33
  %124 = load i32, ptr %13, align 8, !tbaa !5
  %125 = sext i32 %124 to i64
  %126 = mul nsw i64 %125, 224
  %127 = call ptr %123(i64 noundef %126, ptr noundef nonnull @.str.51) #18
  %128 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 10
  store ptr %127, ptr %128, align 8, !tbaa !19
  %129 = and i32 %12, 256
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %141, label %131

131:                                              ; preds = %120
  %132 = load ptr, ptr @MEM_mallocN, align 8, !tbaa !33
  %133 = add nsw i32 %113, 1
  %134 = sext i32 %133 to i64
  %135 = mul nsw i64 %134, 56
  %136 = call ptr %132(i64 noundef %135, ptr noundef nonnull @.str.52) #18
  %137 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 40
  store ptr %136, ptr %137, align 8, !tbaa !66
  %138 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 1
  %139 = load i32, ptr %138, align 4, !tbaa !24
  %140 = or i32 %139, 131072
  store i32 %140, ptr %138, align 4, !tbaa !24
  br label %141

141:                                              ; preds = %131, %120
  %142 = phi ptr [ %136, %131 ], [ undef, %120 ]
  %143 = load ptr, ptr %10, align 8, !tbaa !33
  %144 = icmp eq ptr %143, null
  br i1 %144, label %412, label %145

145:                                              ; preds = %141
  %146 = getelementptr inbounds %struct.bArmature, ptr %8, i64 0, i32 15
  %147 = getelementptr inbounds %struct.bArmature, ptr %8, i64 0, i32 9
  %148 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 32
  br label %149

149:                                              ; preds = %145, %408
  %150 = phi ptr [ %143, %145 ], [ %410, %408 ]
  %151 = phi i32 [ 0, %145 ], [ %409, %408 ]
  %152 = phi ptr [ %127, %145 ], [ %364, %408 ]
  %153 = getelementptr inbounds %struct.EditBone, ptr %150, i64 0, i32 14
  %154 = load float, ptr %153, align 8, !tbaa !635
  %155 = getelementptr inbounds %struct.EditBone, ptr %150, i64 0, i32 20
  store float %154, ptr %155, align 8, !tbaa !636
  %156 = load i32, ptr %146, align 8, !tbaa !35
  %157 = getelementptr inbounds %struct.EditBone, ptr %150, i64 0, i32 10
  %158 = load i32, ptr %157, align 8, !tbaa !633
  %159 = and i32 %158, %156
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %363, label %161

161:                                              ; preds = %149
  %162 = getelementptr inbounds %struct.EditBone, ptr %150, i64 0, i32 9
  %163 = load i32, ptr %162, align 4, !tbaa !85
  %164 = and i32 %163, 525312
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %166, label %363

166:                                              ; preds = %161
  %167 = load i32, ptr %0, align 8, !tbaa !161
  switch i32 %167, label %277 [
    i32 15, label %168
    i32 14, label %218
    i32 18, label %257
  ]

168:                                              ; preds = %166
  %169 = and i32 %163, 2
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %194, label %171

171:                                              ; preds = %168
  %172 = getelementptr inbounds %struct.EditBone, ptr %150, i64 0, i32 18
  %173 = getelementptr inbounds %struct.TransData, ptr %152, i64 0, i32 5
  store ptr %172, ptr %173, align 8, !tbaa !423
  %174 = load float, ptr %172, align 4, !tbaa !82
  %175 = getelementptr inbounds %struct.TransData, ptr %152, i64 0, i32 6
  store float %174, ptr %175, align 8, !tbaa !424
  %176 = getelementptr inbounds %struct.TransData, ptr %152, i64 0, i32 7
  %177 = getelementptr inbounds %struct.EditBone, ptr %150, i64 0, i32 7
  %178 = load float, ptr %177, align 4, !tbaa !82
  store float %178, ptr %176, align 4, !tbaa !82
  %179 = getelementptr inbounds %struct.EditBone, ptr %150, i64 0, i32 7, i64 1
  %180 = load float, ptr %179, align 4, !tbaa !82
  %181 = getelementptr inbounds %struct.TransData, ptr %152, i64 0, i32 7, i64 1
  store float %180, ptr %181, align 4, !tbaa !82
  %182 = getelementptr inbounds %struct.EditBone, ptr %150, i64 0, i32 7, i64 2
  %183 = load float, ptr %182, align 4, !tbaa !82
  %184 = getelementptr inbounds %struct.TransData, ptr %152, i64 0, i32 7, i64 2
  store float %183, ptr %184, align 4, !tbaa !82
  %185 = getelementptr inbounds %struct.TransData, ptr %152, i64 0, i32 16
  store i32 1, ptr %185, align 8, !tbaa !20
  %186 = getelementptr inbounds %struct.TransData, ptr %152, i64 0, i32 9
  call void @copy_m3_m3(ptr noundef nonnull %186, ptr noundef nonnull %3) #18
  %187 = getelementptr inbounds %struct.TransData, ptr %152, i64 0, i32 8
  call void @copy_m3_m3(ptr noundef nonnull %187, ptr noundef nonnull %2) #18
  %188 = getelementptr inbounds %struct.TransData, ptr %152, i64 0, i32 3
  store ptr null, ptr %188, align 8, !tbaa !182
  %189 = getelementptr inbounds %struct.TransData, ptr %152, i64 0, i32 13
  store ptr null, ptr %189, align 8, !tbaa !334
  %190 = load ptr, ptr %5, align 8, !tbaa !69
  %191 = getelementptr inbounds %struct.TransData, ptr %152, i64 0, i32 11
  store ptr %190, ptr %191, align 8, !tbaa !326
  %192 = getelementptr inbounds %struct.TransData, ptr %152, i64 1
  %193 = load i32, ptr %162, align 4, !tbaa !85
  br label %194

194:                                              ; preds = %171, %168
  %195 = phi i32 [ %193, %171 ], [ %163, %168 ]
  %196 = phi ptr [ %192, %171 ], [ %152, %168 ]
  %197 = and i32 %195, 4
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %363, label %199

199:                                              ; preds = %194
  %200 = getelementptr inbounds %struct.EditBone, ptr %150, i64 0, i32 19
  %201 = getelementptr inbounds %struct.TransData, ptr %196, i64 0, i32 5
  store ptr %200, ptr %201, align 8, !tbaa !423
  %202 = load float, ptr %200, align 4, !tbaa !82
  %203 = getelementptr inbounds %struct.TransData, ptr %196, i64 0, i32 6
  store float %202, ptr %203, align 8, !tbaa !424
  %204 = getelementptr inbounds %struct.TransData, ptr %196, i64 0, i32 7
  %205 = getelementptr inbounds %struct.EditBone, ptr %150, i64 0, i32 8
  %206 = load float, ptr %205, align 4, !tbaa !82
  store float %206, ptr %204, align 4, !tbaa !82
  %207 = getelementptr inbounds %struct.EditBone, ptr %150, i64 0, i32 8, i64 1
  %208 = load float, ptr %207, align 4, !tbaa !82
  %209 = getelementptr inbounds %struct.TransData, ptr %196, i64 0, i32 7, i64 1
  store float %208, ptr %209, align 4, !tbaa !82
  %210 = getelementptr inbounds %struct.EditBone, ptr %150, i64 0, i32 8, i64 2
  %211 = load float, ptr %210, align 4, !tbaa !82
  %212 = getelementptr inbounds %struct.TransData, ptr %196, i64 0, i32 7, i64 2
  store float %211, ptr %212, align 4, !tbaa !82
  %213 = getelementptr inbounds %struct.TransData, ptr %196, i64 0, i32 16
  store i32 1, ptr %213, align 8, !tbaa !20
  %214 = getelementptr inbounds %struct.TransData, ptr %196, i64 0, i32 9
  call void @copy_m3_m3(ptr noundef nonnull %214, ptr noundef nonnull %3) #18
  %215 = getelementptr inbounds %struct.TransData, ptr %196, i64 0, i32 8
  call void @copy_m3_m3(ptr noundef nonnull %215, ptr noundef nonnull %2) #18
  %216 = getelementptr inbounds %struct.TransData, ptr %196, i64 0, i32 3
  store ptr null, ptr %216, align 8, !tbaa !182
  %217 = getelementptr inbounds %struct.TransData, ptr %196, i64 0, i32 13
  br label %357

218:                                              ; preds = %166
  %219 = and i32 %163, 1
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %363, label %221

221:                                              ; preds = %218
  %222 = load i32, ptr %147, align 4, !tbaa !637
  %223 = icmp eq i32 %222, 3
  br i1 %223, label %224, label %228

224:                                              ; preds = %221
  %225 = getelementptr inbounds %struct.EditBone, ptr %150, i64 0, i32 11
  %226 = load float, ptr %225, align 4, !tbaa !72
  %227 = getelementptr inbounds %struct.TransData, ptr %152, i64 0, i32 6
  store float %226, ptr %227, align 8, !tbaa !424
  br label %237

228:                                              ; preds = %221
  %229 = getelementptr inbounds %struct.EditBone, ptr %150, i64 0, i32 13
  %230 = getelementptr inbounds %struct.TransData, ptr %152, i64 0, i32 4
  %231 = load float, ptr %229, align 4, !tbaa !82
  store float %231, ptr %230, align 4, !tbaa !82
  %232 = load float, ptr %153, align 4, !tbaa !82
  %233 = getelementptr inbounds %struct.TransData, ptr %152, i64 0, i32 4, i64 1
  store float %232, ptr %233, align 4, !tbaa !82
  %234 = getelementptr inbounds %struct.EditBone, ptr %150, i64 0, i32 15
  %235 = load float, ptr %234, align 4, !tbaa !82
  %236 = getelementptr inbounds %struct.TransData, ptr %152, i64 0, i32 4, i64 2
  store float %235, ptr %236, align 4, !tbaa !82
  br label %237

237:                                              ; preds = %228, %224
  %238 = phi ptr [ null, %224 ], [ %229, %228 ]
  %239 = phi ptr [ %225, %224 ], [ null, %228 ]
  %240 = getelementptr inbounds %struct.TransData, ptr %152, i64 0, i32 3
  store ptr %238, ptr %240, align 8
  %241 = getelementptr inbounds %struct.TransData, ptr %152, i64 0, i32 5
  store ptr %239, ptr %241, align 8
  %242 = getelementptr inbounds %struct.TransData, ptr %152, i64 0, i32 7
  %243 = getelementptr inbounds %struct.EditBone, ptr %150, i64 0, i32 7
  %244 = load float, ptr %243, align 4, !tbaa !82
  store float %244, ptr %242, align 4, !tbaa !82
  %245 = getelementptr inbounds %struct.EditBone, ptr %150, i64 0, i32 7, i64 1
  %246 = load float, ptr %245, align 4, !tbaa !82
  %247 = getelementptr inbounds %struct.TransData, ptr %152, i64 0, i32 7, i64 1
  store float %246, ptr %247, align 4, !tbaa !82
  %248 = getelementptr inbounds %struct.EditBone, ptr %150, i64 0, i32 7, i64 2
  %249 = load float, ptr %248, align 4, !tbaa !82
  %250 = getelementptr inbounds %struct.TransData, ptr %152, i64 0, i32 7, i64 2
  store float %249, ptr %250, align 4, !tbaa !82
  %251 = getelementptr inbounds %struct.TransData, ptr %152, i64 0, i32 16
  store i32 1, ptr %251, align 8, !tbaa !20
  call void @ED_armature_ebone_to_mat3(ptr noundef nonnull %150, ptr noundef nonnull %4) #18
  %252 = getelementptr inbounds %struct.TransData, ptr %152, i64 0, i32 8
  call void @mul_m3_m3m3(ptr noundef nonnull %252, ptr noundef nonnull %2, ptr noundef nonnull %4) #18
  %253 = getelementptr inbounds %struct.TransData, ptr %152, i64 0, i32 9
  %254 = call zeroext i8 @invert_m3_m3(ptr noundef nonnull %253, ptr noundef nonnull %252) #18
  %255 = getelementptr inbounds %struct.TransData, ptr %152, i64 0, i32 10
  call void @copy_m3_m3(ptr noundef nonnull %255, ptr noundef nonnull %252) #18
  call void @normalize_m3(ptr noundef nonnull %255) #18
  %256 = getelementptr inbounds %struct.TransData, ptr %152, i64 0, i32 13
  br label %357

257:                                              ; preds = %166
  %258 = and i32 %163, 1
  %259 = icmp eq i32 %258, 0
  br i1 %259, label %363, label %260

260:                                              ; preds = %257
  %261 = getelementptr inbounds %struct.TransData, ptr %152, i64 0, i32 3
  store ptr null, ptr %261, align 8, !tbaa !182
  %262 = getelementptr inbounds %struct.EditBone, ptr %150, i64 0, i32 6
  %263 = getelementptr inbounds %struct.TransData, ptr %152, i64 0, i32 5
  store ptr %262, ptr %263, align 8, !tbaa !423
  %264 = load float, ptr %262, align 8, !tbaa !77
  %265 = getelementptr inbounds %struct.TransData, ptr %152, i64 0, i32 6
  store float %264, ptr %265, align 8, !tbaa !424
  %266 = getelementptr inbounds %struct.TransData, ptr %152, i64 0, i32 7
  %267 = getelementptr inbounds %struct.EditBone, ptr %150, i64 0, i32 7
  %268 = load float, ptr %267, align 4, !tbaa !82
  store float %268, ptr %266, align 4, !tbaa !82
  %269 = getelementptr inbounds %struct.EditBone, ptr %150, i64 0, i32 7, i64 1
  %270 = load float, ptr %269, align 4, !tbaa !82
  %271 = getelementptr inbounds %struct.TransData, ptr %152, i64 0, i32 7, i64 1
  store float %270, ptr %271, align 4, !tbaa !82
  %272 = getelementptr inbounds %struct.EditBone, ptr %150, i64 0, i32 7, i64 2
  %273 = load float, ptr %272, align 4, !tbaa !82
  %274 = getelementptr inbounds %struct.TransData, ptr %152, i64 0, i32 7, i64 2
  store float %273, ptr %274, align 4, !tbaa !82
  %275 = getelementptr inbounds %struct.TransData, ptr %152, i64 0, i32 16
  store i32 1, ptr %275, align 8, !tbaa !20
  %276 = getelementptr inbounds %struct.TransData, ptr %152, i64 0, i32 13
  br label %357

277:                                              ; preds = %166
  %278 = and i32 %163, 4
  %279 = icmp eq i32 %278, 0
  br i1 %279, label %280, label %282

280:                                              ; preds = %277
  %281 = and i32 %163, 2
  br label %323

282:                                              ; preds = %277
  %283 = getelementptr inbounds %struct.TransData, ptr %152, i64 0, i32 4
  %284 = getelementptr inbounds %struct.EditBone, ptr %150, i64 0, i32 8
  %285 = load float, ptr %284, align 4, !tbaa !82
  store float %285, ptr %283, align 4, !tbaa !82
  %286 = getelementptr inbounds %struct.EditBone, ptr %150, i64 0, i32 8, i64 1
  %287 = load float, ptr %286, align 4, !tbaa !82
  %288 = getelementptr inbounds %struct.TransData, ptr %152, i64 0, i32 4, i64 1
  store float %287, ptr %288, align 4, !tbaa !82
  %289 = getelementptr inbounds %struct.EditBone, ptr %150, i64 0, i32 8, i64 2
  %290 = load float, ptr %289, align 4, !tbaa !82
  %291 = getelementptr inbounds %struct.TransData, ptr %152, i64 0, i32 4, i64 2
  store float %290, ptr %291, align 4, !tbaa !82
  %292 = getelementptr inbounds %struct.TransData, ptr %152, i64 0, i32 7
  %293 = load i16, ptr %148, align 2, !tbaa !321
  %294 = icmp eq i16 %293, 2
  %295 = getelementptr inbounds %struct.EditBone, ptr %150, i64 0, i32 7
  %296 = select i1 %294, ptr %295, ptr %283
  %297 = load float, ptr %296, align 4, !tbaa !82
  store float %297, ptr %292, align 4, !tbaa !82
  %298 = getelementptr inbounds float, ptr %296, i64 1
  %299 = load float, ptr %298, align 4, !tbaa !82
  %300 = getelementptr inbounds %struct.TransData, ptr %152, i64 0, i32 7, i64 1
  store float %299, ptr %300, align 4, !tbaa !82
  %301 = getelementptr inbounds float, ptr %296, i64 2
  %302 = load float, ptr %301, align 4, !tbaa !82
  %303 = getelementptr inbounds %struct.TransData, ptr %152, i64 0, i32 7, i64 2
  store float %302, ptr %303, align 4, !tbaa !82
  %304 = getelementptr inbounds %struct.TransData, ptr %152, i64 0, i32 3
  store ptr %284, ptr %304, align 8, !tbaa !182
  %305 = getelementptr inbounds %struct.TransData, ptr %152, i64 0, i32 16
  store i32 1, ptr %305, align 8, !tbaa !20
  %306 = getelementptr inbounds %struct.TransData, ptr %152, i64 0, i32 9
  call void @copy_m3_m3(ptr noundef nonnull %306, ptr noundef nonnull %3) #18
  %307 = getelementptr inbounds %struct.TransData, ptr %152, i64 0, i32 8
  call void @copy_m3_m3(ptr noundef nonnull %307, ptr noundef nonnull %2) #18
  %308 = getelementptr inbounds %struct.TransData, ptr %152, i64 0, i32 10
  call void @ED_armature_ebone_to_mat3(ptr noundef nonnull %150, ptr noundef nonnull %308) #18
  %309 = load i32, ptr %162, align 4, !tbaa !85
  %310 = and i32 %309, 2
  %311 = icmp eq i32 %310, 0
  br i1 %311, label %312, label %317

312:                                              ; preds = %282
  %313 = getelementptr inbounds %struct.TransData, ptr %152, i64 0, i32 15
  store ptr %150, ptr %313, align 8, !tbaa !144
  %314 = getelementptr inbounds %struct.EditBone, ptr %150, i64 0, i32 6
  %315 = load float, ptr %314, align 8, !tbaa !77
  %316 = getelementptr inbounds %struct.TransData, ptr %152, i64 0, i32 6
  store float %315, ptr %316, align 8, !tbaa !424
  br label %317

317:                                              ; preds = %312, %282
  %318 = getelementptr inbounds %struct.TransData, ptr %152, i64 0, i32 13
  store ptr null, ptr %318, align 8, !tbaa !334
  %319 = getelementptr inbounds %struct.TransData, ptr %152, i64 0, i32 5
  store ptr null, ptr %319, align 8, !tbaa !423
  %320 = load ptr, ptr %5, align 8, !tbaa !69
  %321 = getelementptr inbounds %struct.TransData, ptr %152, i64 0, i32 11
  store ptr %320, ptr %321, align 8, !tbaa !326
  %322 = getelementptr inbounds %struct.TransData, ptr %152, i64 1
  br label %323

323:                                              ; preds = %280, %317
  %324 = phi i32 [ %281, %280 ], [ %310, %317 ]
  %325 = phi i32 [ %163, %280 ], [ %309, %317 ]
  %326 = phi ptr [ %152, %280 ], [ %322, %317 ]
  %327 = icmp eq i32 %324, 0
  br i1 %327, label %363, label %328

328:                                              ; preds = %323
  %329 = getelementptr inbounds %struct.TransData, ptr %326, i64 0, i32 4
  %330 = getelementptr inbounds %struct.EditBone, ptr %150, i64 0, i32 7
  %331 = load float, ptr %330, align 4, !tbaa !82
  store float %331, ptr %329, align 4, !tbaa !82
  %332 = getelementptr inbounds %struct.EditBone, ptr %150, i64 0, i32 7, i64 1
  %333 = load float, ptr %332, align 4, !tbaa !82
  %334 = getelementptr inbounds %struct.TransData, ptr %326, i64 0, i32 4, i64 1
  store float %333, ptr %334, align 4, !tbaa !82
  %335 = getelementptr inbounds %struct.EditBone, ptr %150, i64 0, i32 7, i64 2
  %336 = load float, ptr %335, align 4, !tbaa !82
  %337 = getelementptr inbounds %struct.TransData, ptr %326, i64 0, i32 4, i64 2
  store float %336, ptr %337, align 4, !tbaa !82
  %338 = getelementptr inbounds %struct.TransData, ptr %326, i64 0, i32 7
  store float %331, ptr %338, align 4, !tbaa !82
  %339 = getelementptr inbounds %struct.TransData, ptr %326, i64 0, i32 7, i64 1
  store float %333, ptr %339, align 4, !tbaa !82
  %340 = getelementptr inbounds %struct.TransData, ptr %326, i64 0, i32 7, i64 2
  store float %336, ptr %340, align 4, !tbaa !82
  %341 = getelementptr inbounds %struct.TransData, ptr %326, i64 0, i32 3
  store ptr %330, ptr %341, align 8, !tbaa !182
  %342 = getelementptr inbounds %struct.TransData, ptr %326, i64 0, i32 16
  store i32 1, ptr %342, align 8, !tbaa !20
  %343 = and i32 %325, 524288
  %344 = icmp eq i32 %343, 0
  br i1 %344, label %347, label %345

345:                                              ; preds = %328
  %346 = getelementptr inbounds %struct.TransData, ptr %326, i64 0, i32 17
  store i16 511, ptr %346, align 4, !tbaa !638
  br label %347

347:                                              ; preds = %345, %328
  %348 = getelementptr inbounds %struct.TransData, ptr %326, i64 0, i32 9
  call void @copy_m3_m3(ptr noundef nonnull %348, ptr noundef nonnull %3) #18
  %349 = getelementptr inbounds %struct.TransData, ptr %326, i64 0, i32 8
  call void @copy_m3_m3(ptr noundef nonnull %349, ptr noundef nonnull %2) #18
  %350 = getelementptr inbounds %struct.TransData, ptr %326, i64 0, i32 10
  call void @ED_armature_ebone_to_mat3(ptr noundef nonnull %150, ptr noundef nonnull %350) #18
  %351 = getelementptr inbounds %struct.TransData, ptr %326, i64 0, i32 15
  store ptr %150, ptr %351, align 8, !tbaa !144
  %352 = getelementptr inbounds %struct.EditBone, ptr %150, i64 0, i32 6
  %353 = load float, ptr %352, align 8, !tbaa !77
  %354 = getelementptr inbounds %struct.TransData, ptr %326, i64 0, i32 6
  store float %353, ptr %354, align 8, !tbaa !424
  %355 = getelementptr inbounds %struct.TransData, ptr %326, i64 0, i32 13
  store ptr null, ptr %355, align 8, !tbaa !334
  %356 = getelementptr inbounds %struct.TransData, ptr %326, i64 0, i32 5
  br label %357

357:                                              ; preds = %237, %347, %260, %199
  %358 = phi ptr [ %217, %199 ], [ %276, %260 ], [ %356, %347 ], [ %256, %237 ]
  %359 = phi ptr [ %196, %199 ], [ %152, %260 ], [ %326, %347 ], [ %152, %237 ]
  store ptr null, ptr %358, align 8, !tbaa !33
  %360 = load ptr, ptr %5, align 8, !tbaa !69
  %361 = getelementptr inbounds %struct.TransData, ptr %359, i64 0, i32 11
  store ptr %360, ptr %361, align 8, !tbaa !326
  %362 = getelementptr inbounds %struct.TransData, ptr %359, i64 1
  br label %363

363:                                              ; preds = %357, %149, %194, %257, %323, %218, %161
  %364 = phi ptr [ %196, %194 ], [ %152, %218 ], [ %152, %257 ], [ %326, %323 ], [ %152, %161 ], [ %152, %149 ], [ %362, %357 ]
  %365 = icmp eq ptr %152, %364
  %366 = select i1 %130, i1 true, i1 %365
  br i1 %366, label %408, label %367

367:                                              ; preds = %363
  %368 = load ptr, ptr %9, align 8, !tbaa !84
  %369 = call ptr @ED_armature_bone_get_mirrored(ptr noundef %368, ptr noundef nonnull %150) #18
  %370 = icmp eq ptr %369, null
  br i1 %370, label %408, label %371

371:                                              ; preds = %367
  %372 = sext i32 %151 to i64
  %373 = getelementptr inbounds %struct.BoneInitData, ptr %142, i64 %372
  store ptr %369, ptr %373, align 8, !tbaa !67
  %374 = getelementptr inbounds %struct.EditBone, ptr %369, i64 0, i32 11
  %375 = load float, ptr %374, align 4, !tbaa !72
  %376 = getelementptr inbounds %struct.BoneInitData, ptr %142, i64 %372, i32 5
  store float %375, ptr %376, align 8, !tbaa !71
  %377 = getelementptr inbounds %struct.EditBone, ptr %369, i64 0, i32 19
  %378 = load float, ptr %377, align 4, !tbaa !75
  %379 = getelementptr inbounds %struct.BoneInitData, ptr %142, i64 %372, i32 2
  store float %378, ptr %379, align 4, !tbaa !74
  %380 = getelementptr inbounds %struct.EditBone, ptr %369, i64 0, i32 6
  %381 = load float, ptr %380, align 8, !tbaa !77
  %382 = getelementptr inbounds %struct.BoneInitData, ptr %142, i64 %372, i32 3
  store float %381, ptr %382, align 8, !tbaa !76
  %383 = getelementptr inbounds %struct.EditBone, ptr %369, i64 0, i32 13
  %384 = load float, ptr %383, align 4, !tbaa !79
  %385 = getelementptr inbounds %struct.BoneInitData, ptr %142, i64 %372, i32 6
  store float %384, ptr %385, align 4, !tbaa !78
  %386 = getelementptr inbounds %struct.EditBone, ptr %369, i64 0, i32 15
  %387 = load float, ptr %386, align 4, !tbaa !81
  %388 = getelementptr inbounds %struct.BoneInitData, ptr %142, i64 %372, i32 7
  store float %387, ptr %388, align 8, !tbaa !80
  %389 = getelementptr inbounds %struct.BoneInitData, ptr %142, i64 %372, i32 4
  %390 = getelementptr inbounds %struct.EditBone, ptr %369, i64 0, i32 7
  %391 = load float, ptr %390, align 4, !tbaa !82
  store float %391, ptr %389, align 4, !tbaa !82
  %392 = getelementptr inbounds %struct.EditBone, ptr %369, i64 0, i32 7, i64 1
  %393 = load float, ptr %392, align 4, !tbaa !82
  %394 = getelementptr inbounds float, ptr %389, i64 1
  store float %393, ptr %394, align 4, !tbaa !82
  %395 = getelementptr inbounds %struct.EditBone, ptr %369, i64 0, i32 7, i64 2
  %396 = load float, ptr %395, align 4, !tbaa !82
  %397 = getelementptr inbounds float, ptr %389, i64 2
  store float %396, ptr %397, align 4, !tbaa !82
  %398 = getelementptr inbounds %struct.BoneInitData, ptr %142, i64 %372, i32 1
  %399 = getelementptr inbounds %struct.EditBone, ptr %369, i64 0, i32 8
  %400 = load float, ptr %399, align 4, !tbaa !82
  store float %400, ptr %398, align 4, !tbaa !82
  %401 = getelementptr inbounds %struct.EditBone, ptr %369, i64 0, i32 8, i64 1
  %402 = load float, ptr %401, align 4, !tbaa !82
  %403 = getelementptr inbounds float, ptr %398, i64 1
  store float %402, ptr %403, align 4, !tbaa !82
  %404 = getelementptr inbounds %struct.EditBone, ptr %369, i64 0, i32 8, i64 2
  %405 = load float, ptr %404, align 4, !tbaa !82
  %406 = getelementptr inbounds float, ptr %398, i64 2
  store float %405, ptr %406, align 4, !tbaa !82
  %407 = add nsw i32 %151, 1
  br label %408

408:                                              ; preds = %363, %371, %367
  %409 = phi i32 [ %407, %371 ], [ %151, %367 ], [ %151, %363 ]
  %410 = load ptr, ptr %150, align 8, !tbaa !33
  %411 = icmp eq ptr %410, null
  br i1 %411, label %412, label %149, !llvm.loop !639

412:                                              ; preds = %408, %141
  br i1 %130, label %416, label %413

413:                                              ; preds = %412
  %414 = sext i32 %113 to i64
  %415 = getelementptr inbounds %struct.BoneInitData, ptr %142, i64 %414
  store ptr null, ptr %415, align 8, !tbaa !67
  br label %416

416:                                              ; preds = %1, %111, %412, %413
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %4) #18
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %3) #18
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %2) #18
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @createTransPose(ptr nocapture noundef %0, ptr noundef %1) unnamed_addr #6 {
  %3 = alloca [3 x [3 x float]], align 16
  %4 = alloca [3 x [3 x float]], align 16
  %5 = alloca [3 x [3 x float]], align 16
  %6 = alloca [3 x [3 x float]], align 16
  %7 = alloca [4 x [4 x float]], align 16
  %8 = alloca [4 x [4 x float]], align 16
  %9 = alloca [3 x [3 x float]], align 16
  %10 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 9
  store i32 0, ptr %10, align 8, !tbaa !5
  %11 = tail call ptr @BKE_armature_from_object(ptr noundef %1) #18
  %12 = icmp eq ptr %11, null
  br i1 %12, label %507, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %struct.Object, ptr %1, i64 0, i32 18
  %15 = load ptr, ptr %14, align 8, !tbaa !28
  %16 = icmp eq ptr %15, null
  br i1 %16, label %507, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.bArmature, ptr %11, i64 0, i32 8
  %19 = load i32, ptr %18, align 8, !tbaa !70
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %27, label %22

22:                                               ; preds = %17
  %23 = load i32, ptr %0, align 8, !tbaa !161
  switch i32 %23, label %24 [
    i32 14, label %27
    i32 0, label %27
  ]

24:                                               ; preds = %22
  %25 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 60
  %26 = load ptr, ptr %25, align 8, !tbaa !405
  tail call void @BKE_report(ptr noundef %26, i32 noundef 32, ptr noundef nonnull @.str.53) #18
  br label %507

27:                                               ; preds = %22, %22, %17
  %28 = and i32 %19, 512
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %108, label %30

30:                                               ; preds = %27
  %31 = load i32, ptr %0, align 8, !tbaa !161
  %32 = icmp eq i32 %31, 1
  br i1 %32, label %33, label %108

33:                                               ; preds = %30
  %34 = getelementptr inbounds %struct.Object, ptr %1, i64 0, i32 27
  %35 = load i32, ptr %34, align 8, !tbaa !325
  %36 = and i32 %35, 64
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %108, label %38

38:                                               ; preds = %33
  %39 = load ptr, ptr %15, align 8, !tbaa !33
  %40 = icmp eq ptr %39, null
  br i1 %40, label %108, label %41

41:                                               ; preds = %38
  %42 = getelementptr inbounds %struct.Object, ptr %1, i64 0, i32 19
  %43 = load ptr, ptr %42, align 8, !tbaa !34
  %44 = getelementptr inbounds %struct.bArmature, ptr %43, i64 0, i32 15
  br label %45

45:                                               ; preds = %97, %41
  %46 = phi ptr [ %39, %41 ], [ %99, %97 ]
  %47 = phi i16 [ 0, %41 ], [ %98, %97 ]
  %48 = getelementptr inbounds %struct.bPoseChannel, ptr %46, i64 0, i32 12
  %49 = load ptr, ptr %48, align 8, !tbaa !37
  %50 = getelementptr inbounds %struct.Bone, ptr %49, i64 0, i32 25
  %51 = load i32, ptr %50, align 8, !tbaa !39
  %52 = load i32, ptr %44, align 8, !tbaa !35
  %53 = and i32 %52, %51
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %97, label %55

55:                                               ; preds = %45
  %56 = getelementptr inbounds %struct.Bone, ptr %49, i64 0, i32 10
  %57 = load i32, ptr %56, align 8, !tbaa !41
  %58 = and i32 %57, 1
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %97, label %60

60:                                               ; preds = %55
  %61 = getelementptr inbounds %struct.Bone, ptr %49, i64 0, i32 4
  br label %62

62:                                               ; preds = %66, %60
  %63 = phi ptr [ %61, %60 ], [ %64, %66 ]
  %64 = load ptr, ptr %63, align 8, !tbaa !33
  %65 = icmp eq ptr %64, null
  br i1 %65, label %71, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds %struct.Bone, ptr %64, i64 0, i32 10
  %68 = load i32, ptr %67, align 8, !tbaa !41
  %69 = and i32 %68, 16
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %62, label %74, !llvm.loop !640

71:                                               ; preds = %62
  %72 = and i32 %57, 16
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %97, label %74

74:                                               ; preds = %66, %71
  %75 = getelementptr inbounds %struct.bPoseChannel, ptr %46, i64 0, i32 13
  %76 = load ptr, ptr %75, align 8, !tbaa !53
  %77 = icmp eq ptr %76, null
  br i1 %77, label %93, label %78

78:                                               ; preds = %74, %86
  %79 = phi ptr [ %88, %86 ], [ %76, %74 ]
  %80 = getelementptr inbounds %struct.bPoseChannel, ptr %79, i64 0, i32 12
  %81 = load ptr, ptr %80, align 8, !tbaa !37
  %82 = getelementptr inbounds %struct.Bone, ptr %81, i64 0, i32 10
  %83 = load i32, ptr %82, align 8, !tbaa !41
  %84 = and i32 %83, 1
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %97

86:                                               ; preds = %78
  %87 = getelementptr inbounds %struct.bPoseChannel, ptr %79, i64 0, i32 13
  %88 = load ptr, ptr %87, align 8, !tbaa !53
  %89 = icmp eq ptr %88, null
  br i1 %89, label %90, label %78, !llvm.loop !641

90:                                               ; preds = %86
  %91 = tail call fastcc signext i16 @pose_grab_with_ik_add(ptr noundef nonnull %46), !range !642
  %92 = add i16 %91, %47
  br label %97

93:                                               ; preds = %74
  %94 = load ptr, ptr %14, align 8, !tbaa !28
  %95 = tail call fastcc signext i16 @pose_grab_with_ik_children(ptr noundef %94, ptr noundef %49)
  %96 = add i16 %95, %47
  br label %97

97:                                               ; preds = %78, %93, %90, %71, %55, %45
  %98 = phi i16 [ %47, %71 ], [ %92, %90 ], [ %96, %93 ], [ %47, %55 ], [ %47, %45 ], [ %47, %78 ]
  %99 = load ptr, ptr %46, align 8, !tbaa !33
  %100 = icmp eq ptr %99, null
  br i1 %100, label %101, label %45, !llvm.loop !643

101:                                              ; preds = %97
  %102 = icmp eq i16 %98, 0
  br i1 %102, label %108, label %103

103:                                              ; preds = %101
  %104 = load ptr, ptr %14, align 8, !tbaa !28
  tail call void @BIK_clear_data(ptr noundef %104) #18
  %105 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 1
  %106 = load i32, ptr %105, align 4, !tbaa !24
  %107 = or i32 %106, 262144
  store i32 %107, ptr %105, align 4, !tbaa !24
  br label %108

108:                                              ; preds = %38, %101, %33, %103, %30, %27
  %109 = phi i1 [ false, %103 ], [ true, %30 ], [ true, %27 ], [ true, %33 ], [ true, %101 ], [ true, %38 ]
  %110 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 32
  %111 = load i16, ptr %110, align 2, !tbaa !321
  %112 = tail call i32 @count_set_pose_transflags(ptr noundef %0, i16 noundef signext %111, ptr noundef %1)
  store i32 %112, ptr %10, align 8, !tbaa !5
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %507, label %114

114:                                              ; preds = %108
  %115 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 1
  %116 = load i32, ptr %115, align 4, !tbaa !24
  %117 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 39
  store ptr %1, ptr %117, align 8, !tbaa !59
  %118 = and i32 %116, -33560581
  %119 = or i32 %118, 4
  store i32 %119, ptr %115, align 4, !tbaa !24
  %120 = load ptr, ptr @MEM_callocN, align 8, !tbaa !33
  %121 = sext i32 %112 to i64
  %122 = mul nsw i64 %121, 224
  %123 = tail call ptr %120(i64 noundef %122, ptr noundef nonnull @.str.54) #18
  %124 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 10
  store ptr %123, ptr %124, align 8, !tbaa !19
  %125 = load ptr, ptr @MEM_callocN, align 8, !tbaa !33
  %126 = load i32, ptr %10, align 8, !tbaa !5
  %127 = sext i32 %126 to i64
  %128 = mul nsw i64 %127, 384
  %129 = tail call ptr %125(i64 noundef %128, ptr noundef nonnull @.str.55) #18
  %130 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 11
  store ptr %129, ptr %130, align 8, !tbaa !406
  %131 = load i32, ptr %10, align 8, !tbaa !5
  %132 = icmp sgt i32 %131, 0
  br i1 %132, label %133, label %183

133:                                              ; preds = %114
  %134 = and i32 %131, 7
  %135 = icmp ult i32 %131, 8
  br i1 %135, label %169, label %136

136:                                              ; preds = %133
  %137 = and i32 %131, -8
  br label %138

138:                                              ; preds = %138, %136
  %139 = phi ptr [ %129, %136 ], [ %166, %138 ]
  %140 = phi ptr [ %123, %136 ], [ %165, %138 ]
  %141 = phi i32 [ 0, %136 ], [ %167, %138 ]
  %142 = getelementptr inbounds %struct.TransData, ptr %140, i64 0, i32 13
  store ptr %139, ptr %142, align 8, !tbaa !334
  %143 = getelementptr inbounds %struct.TransData, ptr %140, i64 0, i32 5
  store ptr null, ptr %143, align 8, !tbaa !423
  %144 = getelementptr inbounds %struct.TransDataExtension, ptr %139, i64 1
  %145 = getelementptr inbounds %struct.TransData, ptr %140, i64 1, i32 13
  store ptr %144, ptr %145, align 8, !tbaa !334
  %146 = getelementptr inbounds %struct.TransData, ptr %140, i64 1, i32 5
  store ptr null, ptr %146, align 8, !tbaa !423
  %147 = getelementptr inbounds %struct.TransDataExtension, ptr %139, i64 2
  %148 = getelementptr inbounds %struct.TransData, ptr %140, i64 2, i32 13
  store ptr %147, ptr %148, align 8, !tbaa !334
  %149 = getelementptr inbounds %struct.TransData, ptr %140, i64 2, i32 5
  store ptr null, ptr %149, align 8, !tbaa !423
  %150 = getelementptr inbounds %struct.TransDataExtension, ptr %139, i64 3
  %151 = getelementptr inbounds %struct.TransData, ptr %140, i64 3, i32 13
  store ptr %150, ptr %151, align 8, !tbaa !334
  %152 = getelementptr inbounds %struct.TransData, ptr %140, i64 3, i32 5
  store ptr null, ptr %152, align 8, !tbaa !423
  %153 = getelementptr inbounds %struct.TransDataExtension, ptr %139, i64 4
  %154 = getelementptr inbounds %struct.TransData, ptr %140, i64 4, i32 13
  store ptr %153, ptr %154, align 8, !tbaa !334
  %155 = getelementptr inbounds %struct.TransData, ptr %140, i64 4, i32 5
  store ptr null, ptr %155, align 8, !tbaa !423
  %156 = getelementptr inbounds %struct.TransDataExtension, ptr %139, i64 5
  %157 = getelementptr inbounds %struct.TransData, ptr %140, i64 5, i32 13
  store ptr %156, ptr %157, align 8, !tbaa !334
  %158 = getelementptr inbounds %struct.TransData, ptr %140, i64 5, i32 5
  store ptr null, ptr %158, align 8, !tbaa !423
  %159 = getelementptr inbounds %struct.TransDataExtension, ptr %139, i64 6
  %160 = getelementptr inbounds %struct.TransData, ptr %140, i64 6, i32 13
  store ptr %159, ptr %160, align 8, !tbaa !334
  %161 = getelementptr inbounds %struct.TransData, ptr %140, i64 6, i32 5
  store ptr null, ptr %161, align 8, !tbaa !423
  %162 = getelementptr inbounds %struct.TransDataExtension, ptr %139, i64 7
  %163 = getelementptr inbounds %struct.TransData, ptr %140, i64 7, i32 13
  store ptr %162, ptr %163, align 8, !tbaa !334
  %164 = getelementptr inbounds %struct.TransData, ptr %140, i64 7, i32 5
  store ptr null, ptr %164, align 8, !tbaa !423
  %165 = getelementptr inbounds %struct.TransData, ptr %140, i64 8
  %166 = getelementptr inbounds %struct.TransDataExtension, ptr %139, i64 8
  %167 = add i32 %141, 8
  %168 = icmp eq i32 %167, %137
  br i1 %168, label %169, label %138, !llvm.loop !644

169:                                              ; preds = %138, %133
  %170 = phi ptr [ %129, %133 ], [ %166, %138 ]
  %171 = phi ptr [ %123, %133 ], [ %165, %138 ]
  %172 = icmp eq i32 %134, 0
  br i1 %172, label %183, label %173

173:                                              ; preds = %169, %173
  %174 = phi ptr [ %180, %173 ], [ %170, %169 ]
  %175 = phi ptr [ %179, %173 ], [ %171, %169 ]
  %176 = phi i32 [ %181, %173 ], [ 0, %169 ]
  %177 = getelementptr inbounds %struct.TransData, ptr %175, i64 0, i32 13
  store ptr %174, ptr %177, align 8, !tbaa !334
  %178 = getelementptr inbounds %struct.TransData, ptr %175, i64 0, i32 5
  store ptr null, ptr %178, align 8, !tbaa !423
  %179 = getelementptr inbounds %struct.TransData, ptr %175, i64 1
  %180 = getelementptr inbounds %struct.TransDataExtension, ptr %174, i64 1
  %181 = add i32 %176, 1
  %182 = icmp eq i32 %181, %134
  br i1 %182, label %183, label %173, !llvm.loop !645

183:                                              ; preds = %169, %173, %114
  %184 = load ptr, ptr %124, align 8, !tbaa !19
  %185 = load ptr, ptr %14, align 8, !tbaa !28
  %186 = load ptr, ptr %185, align 8, !tbaa !33
  %187 = icmp eq ptr %186, null
  br i1 %187, label %420, label %188

188:                                              ; preds = %183
  %189 = getelementptr inbounds %struct.Object, ptr %1, i64 0, i32 47
  br label %190

190:                                              ; preds = %188, %413
  %191 = phi ptr [ %186, %188 ], [ %415, %413 ]
  %192 = phi ptr [ %184, %188 ], [ %414, %413 ]
  %193 = getelementptr inbounds %struct.bPoseChannel, ptr %191, i64 0, i32 12
  %194 = load ptr, ptr %193, align 8, !tbaa !37
  %195 = getelementptr inbounds %struct.Bone, ptr %194, i64 0, i32 10
  %196 = load i32, ptr %195, align 8, !tbaa !41
  %197 = and i32 %196, 8
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %413, label %199

199:                                              ; preds = %190
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %3) #18
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %4) #18
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %5) #18
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %6) #18
  %200 = getelementptr inbounds %struct.bPoseChannel, ptr %191, i64 0, i32 29
  %201 = getelementptr inbounds %struct.bPoseChannel, ptr %191, i64 0, i32 29, i64 3
  %202 = getelementptr inbounds %struct.bPoseChannel, ptr %191, i64 0, i32 29, i64 3, i64 2
  %203 = load float, ptr %202, align 4, !tbaa !82
  %204 = getelementptr inbounds %struct.TransData, ptr %192, i64 0, i32 7
  %205 = load <2 x float>, ptr %201, align 4, !tbaa !82
  store <2 x float> %205, ptr %204, align 4, !tbaa !82
  %206 = getelementptr inbounds %struct.TransData, ptr %192, i64 0, i32 7, i64 2
  store float %203, ptr %206, align 4, !tbaa !82
  %207 = getelementptr inbounds %struct.TransData, ptr %192, i64 0, i32 11
  store ptr %1, ptr %207, align 8, !tbaa !326
  %208 = getelementptr inbounds %struct.TransData, ptr %192, i64 0, i32 16
  %209 = and i32 %196, 16384
  %210 = icmp eq i32 %209, 0
  %211 = select i1 %210, i32 1, i32 513
  store i32 %211, ptr %208, align 8
  %212 = load i32, ptr %195, align 8, !tbaa !41
  %213 = and i32 %212, 1048576
  %214 = icmp eq i32 %213, 0
  %215 = select i1 %214, i32 %211, i32 8705
  store i32 %215, ptr %208, align 8
  %216 = getelementptr inbounds %struct.bPoseChannel, ptr %191, i64 0, i32 7
  %217 = load i16, ptr %216, align 4, !tbaa !54
  %218 = getelementptr inbounds %struct.TransData, ptr %192, i64 0, i32 17
  store i16 %217, ptr %218, align 4, !tbaa !638
  %219 = getelementptr inbounds %struct.bPoseChannel, ptr %191, i64 0, i32 20
  %220 = getelementptr inbounds %struct.TransData, ptr %192, i64 0, i32 3
  store ptr %219, ptr %220, align 8, !tbaa !182
  %221 = getelementptr inbounds %struct.TransData, ptr %192, i64 0, i32 4
  %222 = load float, ptr %219, align 4, !tbaa !82
  store float %222, ptr %221, align 4, !tbaa !82
  %223 = getelementptr inbounds %struct.bPoseChannel, ptr %191, i64 0, i32 20, i64 1
  %224 = load float, ptr %223, align 4, !tbaa !82
  %225 = getelementptr inbounds %struct.TransData, ptr %192, i64 0, i32 4, i64 1
  store float %224, ptr %225, align 4, !tbaa !82
  %226 = getelementptr inbounds %struct.bPoseChannel, ptr %191, i64 0, i32 20, i64 2
  %227 = load float, ptr %226, align 4, !tbaa !82
  %228 = getelementptr inbounds %struct.TransData, ptr %192, i64 0, i32 4, i64 2
  store float %227, ptr %228, align 4, !tbaa !82
  %229 = getelementptr inbounds %struct.bPoseChannel, ptr %191, i64 0, i32 21
  %230 = getelementptr inbounds %struct.TransData, ptr %192, i64 0, i32 13
  %231 = load ptr, ptr %230, align 8, !tbaa !334
  %232 = getelementptr inbounds %struct.TransDataExtension, ptr %231, i64 0, i32 11
  store ptr %229, ptr %232, align 8, !tbaa !409
  %233 = getelementptr inbounds %struct.TransDataExtension, ptr %231, i64 0, i32 12
  %234 = load float, ptr %229, align 4, !tbaa !82
  store float %234, ptr %233, align 4, !tbaa !82
  %235 = getelementptr inbounds %struct.bPoseChannel, ptr %191, i64 0, i32 21, i64 1
  %236 = load float, ptr %235, align 4, !tbaa !82
  %237 = getelementptr inbounds %struct.TransDataExtension, ptr %231, i64 0, i32 12, i64 1
  store float %236, ptr %237, align 4, !tbaa !82
  %238 = getelementptr inbounds %struct.bPoseChannel, ptr %191, i64 0, i32 21, i64 2
  %239 = load float, ptr %238, align 4, !tbaa !82
  %240 = getelementptr inbounds %struct.TransDataExtension, ptr %231, i64 0, i32 12, i64 2
  store float %239, ptr %240, align 4, !tbaa !82
  %241 = getelementptr inbounds %struct.bPoseChannel, ptr %191, i64 0, i32 26
  %242 = load i16, ptr %241, align 4, !tbaa !348
  %243 = icmp sgt i16 %242, 0
  %244 = getelementptr inbounds %struct.TransDataExtension, ptr %231, i64 0, i32 3
  br i1 %243, label %245, label %258

245:                                              ; preds = %199
  %246 = getelementptr inbounds %struct.bPoseChannel, ptr %191, i64 0, i32 22
  store ptr %246, ptr %244, align 8, !tbaa !408
  %247 = getelementptr inbounds %struct.TransDataExtension, ptr %231, i64 0, i32 9
  store ptr null, ptr %247, align 8, !tbaa !647
  %248 = getelementptr inbounds %struct.TransDataExtension, ptr %231, i64 0, i32 7
  store ptr null, ptr %248, align 8, !tbaa !648
  %249 = getelementptr inbounds %struct.TransDataExtension, ptr %231, i64 0, i32 5
  store ptr null, ptr %249, align 8, !tbaa !631
  %250 = getelementptr inbounds %struct.TransDataExtension, ptr %231, i64 0, i32 4
  %251 = load float, ptr %246, align 4, !tbaa !82
  store float %251, ptr %250, align 4, !tbaa !82
  %252 = getelementptr inbounds %struct.bPoseChannel, ptr %191, i64 0, i32 22, i64 1
  %253 = load float, ptr %252, align 4, !tbaa !82
  %254 = getelementptr inbounds %struct.TransDataExtension, ptr %231, i64 0, i32 4, i64 1
  store float %253, ptr %254, align 4, !tbaa !82
  %255 = getelementptr inbounds %struct.bPoseChannel, ptr %191, i64 0, i32 22, i64 2
  %256 = load float, ptr %255, align 4, !tbaa !82
  %257 = getelementptr inbounds %struct.TransDataExtension, ptr %231, i64 0, i32 4, i64 2
  store float %256, ptr %257, align 4, !tbaa !82
  br label %284

258:                                              ; preds = %199
  %259 = icmp eq i16 %242, -1
  store ptr null, ptr %244, align 8, !tbaa !408
  br i1 %259, label %260, label %276

260:                                              ; preds = %258
  %261 = getelementptr inbounds %struct.bPoseChannel, ptr %191, i64 0, i32 24
  %262 = getelementptr inbounds %struct.TransDataExtension, ptr %231, i64 0, i32 9
  store ptr %261, ptr %262, align 8, !tbaa !647
  %263 = getelementptr inbounds %struct.bPoseChannel, ptr %191, i64 0, i32 25
  %264 = getelementptr inbounds %struct.TransDataExtension, ptr %231, i64 0, i32 7
  store ptr %263, ptr %264, align 8, !tbaa !648
  %265 = getelementptr inbounds %struct.TransDataExtension, ptr %231, i64 0, i32 5
  store ptr null, ptr %265, align 8, !tbaa !631
  %266 = load float, ptr %263, align 8, !tbaa !349
  %267 = getelementptr inbounds %struct.TransDataExtension, ptr %231, i64 0, i32 8
  store float %266, ptr %267, align 8, !tbaa !649
  %268 = getelementptr inbounds %struct.TransDataExtension, ptr %231, i64 0, i32 10
  %269 = load float, ptr %261, align 4, !tbaa !82
  store float %269, ptr %268, align 4, !tbaa !82
  %270 = getelementptr inbounds %struct.bPoseChannel, ptr %191, i64 0, i32 24, i64 1
  %271 = load float, ptr %270, align 4, !tbaa !82
  %272 = getelementptr inbounds %struct.TransDataExtension, ptr %231, i64 0, i32 10, i64 1
  store float %271, ptr %272, align 4, !tbaa !82
  %273 = getelementptr inbounds %struct.bPoseChannel, ptr %191, i64 0, i32 24, i64 2
  %274 = load float, ptr %273, align 4, !tbaa !82
  %275 = getelementptr inbounds %struct.TransDataExtension, ptr %231, i64 0, i32 10, i64 2
  store float %274, ptr %275, align 4, !tbaa !82
  br label %284

276:                                              ; preds = %258
  %277 = getelementptr inbounds %struct.TransDataExtension, ptr %231, i64 0, i32 9
  store ptr null, ptr %277, align 8, !tbaa !647
  %278 = getelementptr inbounds %struct.TransDataExtension, ptr %231, i64 0, i32 7
  store ptr null, ptr %278, align 8, !tbaa !648
  %279 = getelementptr inbounds %struct.bPoseChannel, ptr %191, i64 0, i32 23
  %280 = getelementptr inbounds %struct.TransDataExtension, ptr %231, i64 0, i32 5
  store ptr %279, ptr %280, align 8, !tbaa !631
  %281 = getelementptr inbounds %struct.TransDataExtension, ptr %231, i64 0, i32 6
  call void @copy_qt_qt(ptr noundef nonnull %281, ptr noundef nonnull %279) #18
  %282 = load i16, ptr %241, align 4, !tbaa !348
  %283 = load ptr, ptr %230, align 8, !tbaa !334
  br label %284

284:                                              ; preds = %276, %260, %245
  %285 = phi ptr [ %231, %260 ], [ %283, %276 ], [ %231, %245 ]
  %286 = phi i16 [ -1, %260 ], [ %282, %276 ], [ %242, %245 ]
  %287 = sext i16 %286 to i32
  %288 = getelementptr inbounds %struct.TransDataExtension, ptr %285, i64 0, i32 17
  store i32 %287, ptr %288, align 8, !tbaa !650
  call void @copy_m3_m4(ptr noundef nonnull %4, ptr noundef nonnull %189) #18
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %7) #18
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %8) #18
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %9) #18
  call void @BKE_pchan_to_pose_mat(ptr noundef nonnull %191, ptr noundef nonnull %7, ptr noundef nonnull %8) #18
  %289 = load i32, ptr %0, align 8, !tbaa !161
  %290 = icmp eq i32 %289, 1
  %291 = select i1 %290, ptr %8, ptr %7
  call void @copy_m3_m4(ptr noundef nonnull %3, ptr noundef nonnull %291) #18
  call void @copy_m3_m4(ptr noundef nonnull %9, ptr noundef nonnull %7) #18
  %292 = getelementptr inbounds %struct.bPoseChannel, ptr %191, i64 0, i32 3
  %293 = call fastcc zeroext i8 @constraints_list_needinv(ptr noundef nonnull %0, ptr noundef nonnull %292)
  %294 = icmp eq i8 %293, 0
  br i1 %294, label %301, label %295

295:                                              ; preds = %284
  %296 = getelementptr inbounds %struct.bPoseChannel, ptr %191, i64 0, i32 30
  call void @copy_m3_m4(ptr noundef nonnull %6, ptr noundef nonnull %296) #18
  %297 = call zeroext i8 @invert_m3_m3(ptr noundef nonnull %5, ptr noundef nonnull %6) #18
  %298 = getelementptr inbounds %struct.TransData, ptr %192, i64 0, i32 8
  call void @_va_mul_m3_series_4(ptr noundef nonnull %298, ptr noundef nonnull %5, ptr noundef nonnull %4, ptr noundef nonnull %3) #18
  %299 = load ptr, ptr %230, align 8, !tbaa !334
  %300 = getelementptr inbounds %struct.TransDataExtension, ptr %299, i64 0, i32 15
  call void @_va_mul_m3_series_4(ptr noundef nonnull %300, ptr noundef nonnull %5, ptr noundef nonnull %4, ptr noundef nonnull %9) #18
  br label %305

301:                                              ; preds = %284
  %302 = getelementptr inbounds %struct.TransData, ptr %192, i64 0, i32 8
  call void @_va_mul_m3_series_3(ptr noundef nonnull %302, ptr noundef nonnull %4, ptr noundef nonnull %3) #18
  %303 = load ptr, ptr %230, align 8, !tbaa !334
  %304 = getelementptr inbounds %struct.TransDataExtension, ptr %303, i64 0, i32 15
  call void @_va_mul_m3_series_3(ptr noundef nonnull %304, ptr noundef nonnull %4, ptr noundef nonnull %9) #18
  br label %305

305:                                              ; preds = %301, %295
  %306 = load ptr, ptr %230, align 8, !tbaa !334
  %307 = getelementptr inbounds %struct.TransDataExtension, ptr %306, i64 0, i32 16
  %308 = getelementptr inbounds %struct.TransDataExtension, ptr %306, i64 0, i32 15
  %309 = call zeroext i8 @invert_m3_m3(ptr noundef nonnull %307, ptr noundef nonnull %308) #18
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %9) #18
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %8) #18
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %7) #18
  %310 = getelementptr inbounds %struct.TransData, ptr %192, i64 0, i32 9
  %311 = getelementptr inbounds %struct.TransData, ptr %192, i64 0, i32 8
  call void @pseudoinverse_m3_m3(ptr noundef nonnull %310, ptr noundef nonnull %311, float noundef nofpclass(nan inf) 0x3E45798EE0000000) #18
  %312 = load i32, ptr %0, align 8, !tbaa !161
  switch i32 %312, label %313 [
    i32 1, label %331
    i32 3, label %331
  ]

313:                                              ; preds = %305
  %314 = load ptr, ptr %193, align 8, !tbaa !37
  %315 = getelementptr inbounds %struct.Bone, ptr %314, i64 0, i32 10
  %316 = load i32, ptr %315, align 8, !tbaa !41
  %317 = and i32 %316, 4194304
  %318 = icmp eq i32 %317, 0
  br i1 %318, label %331, label %319

319:                                              ; preds = %313
  %320 = getelementptr inbounds %struct.bPoseChannel, ptr %191, i64 0, i32 13
  %321 = load ptr, ptr %320, align 8, !tbaa !53
  %322 = icmp eq ptr %321, null
  %323 = load i32, ptr %208, align 8, !tbaa !20
  br i1 %322, label %329, label %324

324:                                              ; preds = %319
  %325 = or i32 %323, 1048576
  store i32 %325, ptr %208, align 8, !tbaa !20
  %326 = load ptr, ptr %230, align 8, !tbaa !334
  %327 = getelementptr inbounds %struct.TransDataExtension, ptr %326, i64 0, i32 14
  %328 = getelementptr inbounds %struct.Bone, ptr %314, i64 0, i32 9
  call void @mul_m3_m3m3(ptr noundef nonnull %327, ptr noundef nonnull %328, ptr noundef nonnull %310) #18
  br label %331

329:                                              ; preds = %319
  %330 = or i32 %323, 524288
  store i32 %330, ptr %208, align 8, !tbaa !20
  br label %331

331:                                              ; preds = %329, %324, %313, %305, %305
  call void @copy_m3_m4(ptr noundef nonnull %3, ptr noundef nonnull %200) #18
  %332 = getelementptr inbounds %struct.TransData, ptr %192, i64 0, i32 10
  call void @mul_m3_m3m3(ptr noundef nonnull %332, ptr noundef nonnull %4, ptr noundef nonnull %3) #18
  call void @normalize_m3(ptr noundef nonnull %332) #18
  %333 = load i32, ptr %0, align 8, !tbaa !161
  switch i32 %333, label %409 [
    i32 14, label %334
    i32 1, label %354
  ]

334:                                              ; preds = %331
  %335 = load ptr, ptr %117, align 8, !tbaa !59
  %336 = getelementptr inbounds %struct.Object, ptr %335, i64 0, i32 19
  %337 = load ptr, ptr %336, align 8, !tbaa !34
  %338 = getelementptr inbounds %struct.bArmature, ptr %337, i64 0, i32 9
  %339 = load i32, ptr %338, align 4, !tbaa !637
  %340 = icmp eq i32 %339, 3
  br i1 %340, label %341, label %346

341:                                              ; preds = %334
  store ptr null, ptr %220, align 8, !tbaa !182
  %342 = getelementptr inbounds %struct.Bone, ptr %194, i64 0, i32 15
  %343 = getelementptr inbounds %struct.TransData, ptr %192, i64 0, i32 5
  store ptr %342, ptr %343, align 8, !tbaa !423
  %344 = load float, ptr %342, align 8, !tbaa !651
  %345 = getelementptr inbounds %struct.TransData, ptr %192, i64 0, i32 6
  store float %344, ptr %345, align 8, !tbaa !424
  br label %409

346:                                              ; preds = %334
  %347 = getelementptr inbounds %struct.Bone, ptr %194, i64 0, i32 17
  store ptr %347, ptr %220, align 8, !tbaa !182
  %348 = load float, ptr %347, align 4, !tbaa !82
  store float %348, ptr %221, align 4, !tbaa !82
  %349 = getelementptr inbounds %struct.Bone, ptr %194, i64 0, i32 18
  %350 = load float, ptr %349, align 4, !tbaa !82
  store float %350, ptr %225, align 4, !tbaa !82
  %351 = getelementptr inbounds %struct.Bone, ptr %194, i64 0, i32 19
  %352 = load float, ptr %351, align 4, !tbaa !82
  store float %352, ptr %228, align 4, !tbaa !82
  %353 = getelementptr inbounds %struct.TransData, ptr %192, i64 0, i32 5
  store ptr null, ptr %353, align 8, !tbaa !423
  br label %409

354:                                              ; preds = %331
  %355 = load ptr, ptr %292, align 8, !tbaa !33
  %356 = icmp eq ptr %355, null
  br i1 %356, label %409, label %357

357:                                              ; preds = %354, %379
  %358 = phi ptr [ %380, %379 ], [ %355, %354 ]
  %359 = getelementptr inbounds %struct.bConstraint, ptr %358, i64 0, i32 3
  %360 = load i16, ptr %359, align 8, !tbaa !44
  %361 = icmp eq i16 %360, 3
  br i1 %361, label %362, label %379

362:                                              ; preds = %357
  %363 = getelementptr inbounds %struct.bConstraint, ptr %358, i64 0, i32 9
  %364 = load float, ptr %363, align 8, !tbaa !46
  %365 = fcmp fast une float %364, 0.000000e+00
  br i1 %365, label %366, label %379

366:                                              ; preds = %362
  %367 = getelementptr inbounds %struct.bConstraint, ptr %358, i64 0, i32 2
  %368 = load ptr, ptr %367, align 8, !tbaa !47
  %369 = load ptr, ptr %368, align 8, !tbaa !48
  %370 = icmp eq ptr %369, null
  br i1 %370, label %382, label %371

371:                                              ; preds = %366
  %372 = getelementptr inbounds %struct.Object, ptr %369, i64 0, i32 3
  %373 = load i16, ptr %372, align 8, !tbaa !50
  %374 = icmp eq i16 %373, 25
  br i1 %374, label %375, label %379

375:                                              ; preds = %371
  %376 = getelementptr inbounds %struct.bKinematicConstraint, ptr %368, i64 0, i32 5
  %377 = load i8, ptr %376, align 8, !tbaa !51
  %378 = icmp eq i8 %377, 0
  br i1 %378, label %382, label %379

379:                                              ; preds = %375, %371, %362, %357
  %380 = load ptr, ptr %358, align 8, !tbaa !33
  %381 = icmp eq ptr %380, null
  br i1 %381, label %409, label %357, !llvm.loop !52

382:                                              ; preds = %375, %366
  %383 = getelementptr inbounds %struct.bKinematicConstraint, ptr %368, i64 0, i32 2
  %384 = load i16, ptr %383, align 2, !tbaa !61
  %385 = and i16 %384, 1
  %386 = icmp eq i16 %385, 0
  %387 = getelementptr inbounds %struct.bKinematicConstraint, ptr %368, i64 0, i32 11
  %388 = getelementptr inbounds %struct.bKinematicConstraint, ptr %368, i64 0, i32 11, i64 1
  br i1 %386, label %394, label %389

389:                                              ; preds = %382
  %390 = getelementptr inbounds %struct.bPoseChannel, ptr %191, i64 0, i32 32
  %391 = load float, ptr %390, align 4, !tbaa !82
  store float %391, ptr %387, align 4, !tbaa !82
  %392 = getelementptr inbounds %struct.bPoseChannel, ptr %191, i64 0, i32 32, i64 1
  %393 = getelementptr inbounds %struct.bPoseChannel, ptr %191, i64 0, i32 32, i64 2
  br label %399

394:                                              ; preds = %382
  %395 = getelementptr inbounds %struct.bPoseChannel, ptr %191, i64 0, i32 31
  %396 = load float, ptr %395, align 4, !tbaa !82
  store float %396, ptr %387, align 4, !tbaa !82
  %397 = getelementptr inbounds %struct.bPoseChannel, ptr %191, i64 0, i32 31, i64 1
  %398 = getelementptr inbounds %struct.bPoseChannel, ptr %191, i64 0, i32 31, i64 2
  br label %399

399:                                              ; preds = %394, %389
  %400 = phi ptr [ %397, %394 ], [ %392, %389 ]
  %401 = phi float [ %396, %394 ], [ %391, %389 ]
  %402 = phi ptr [ %398, %394 ], [ %393, %389 ]
  %403 = load float, ptr %400, align 4, !tbaa !82
  store float %403, ptr %388, align 4
  %404 = load float, ptr %402, align 4, !tbaa !82
  %405 = getelementptr inbounds %struct.bKinematicConstraint, ptr %368, i64 0, i32 11, i64 2
  store float %404, ptr %405, align 4
  store ptr %387, ptr %220, align 8, !tbaa !182
  store float %401, ptr %221, align 4, !tbaa !82
  %406 = load float, ptr %388, align 4, !tbaa !82
  store float %406, ptr %225, align 4, !tbaa !82
  %407 = load float, ptr %405, align 4, !tbaa !82
  store float %407, ptr %228, align 4, !tbaa !82
  %408 = or i16 %384, 4
  store i16 %408, ptr %383, align 2, !tbaa !61
  call void @copy_m3_m3(ptr noundef nonnull %311, ptr noundef nonnull %4) #18
  call void @pseudoinverse_m3_m3(ptr noundef nonnull %310, ptr noundef nonnull %311, float noundef nofpclass(nan inf) 0x3E45798EE0000000) #18
  br label %409

409:                                              ; preds = %379, %331, %341, %346, %354, %399
  %410 = load ptr, ptr %292, align 8, !tbaa !354
  %411 = getelementptr inbounds %struct.TransData, ptr %192, i64 0, i32 12
  store ptr %410, ptr %411, align 8, !tbaa !652
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %6) #18
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %5) #18
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %4) #18
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %3) #18
  %412 = getelementptr inbounds %struct.TransData, ptr %192, i64 1
  br label %413

413:                                              ; preds = %190, %409
  %414 = phi ptr [ %412, %409 ], [ %192, %190 ]
  %415 = load ptr, ptr %191, align 8, !tbaa !33
  %416 = icmp eq ptr %415, null
  br i1 %416, label %417, label %190, !llvm.loop !653

417:                                              ; preds = %413
  %418 = load ptr, ptr %124, align 8, !tbaa !19
  %419 = load i32, ptr %10, align 8, !tbaa !5
  br label %420

420:                                              ; preds = %417, %183
  %421 = phi i32 [ %131, %183 ], [ %419, %417 ]
  %422 = phi ptr [ %184, %183 ], [ %418, %417 ]
  %423 = phi ptr [ %184, %183 ], [ %414, %417 ]
  %424 = sext i32 %421 to i64
  %425 = getelementptr inbounds %struct.TransData, ptr %422, i64 %424
  %426 = icmp eq ptr %423, %425
  br i1 %426, label %430, label %427

427:                                              ; preds = %420
  %428 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 60
  %429 = load ptr, ptr %428, align 8, !tbaa !405
  call void @BKE_report(ptr noundef %429, i32 noundef 1, ptr noundef nonnull @.str.56) #18
  br label %430

430:                                              ; preds = %427, %420
  br i1 %109, label %507, label %431

431:                                              ; preds = %430
  %432 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 57
  %433 = load ptr, ptr %432, align 8, !tbaa !57
  %434 = getelementptr inbounds %struct.ToolSettings, ptr %433, i64 0, i32 14
  %435 = load ptr, ptr %117, align 8, !tbaa !59
  %436 = icmp eq ptr %435, null
  br i1 %436, label %507, label %437

437:                                              ; preds = %431
  %438 = getelementptr inbounds %struct.Object, ptr %435, i64 0, i32 18
  %439 = load ptr, ptr %438, align 8, !tbaa !28
  %440 = icmp eq ptr %439, null
  br i1 %440, label %507, label %441

441:                                              ; preds = %437
  %442 = load ptr, ptr %439, align 8, !tbaa !33
  %443 = icmp eq ptr %442, null
  br i1 %443, label %507, label %444

444:                                              ; preds = %441, %504
  %445 = phi ptr [ %505, %504 ], [ %442, %441 ]
  %446 = load i16, ptr %434, align 2, !tbaa !58
  %447 = getelementptr inbounds %struct.bPoseChannel, ptr %445, i64 0, i32 9
  %448 = load i8, ptr %447, align 8, !tbaa !60
  %449 = and i8 %448, 9
  %450 = icmp eq i8 %449, 0
  br i1 %450, label %504, label %451

451:                                              ; preds = %444
  %452 = getelementptr inbounds %struct.bPoseChannel, ptr %445, i64 0, i32 3
  %453 = load ptr, ptr %452, align 8, !tbaa !33
  %454 = icmp eq ptr %453, null
  br i1 %454, label %504, label %455

455:                                              ; preds = %451
  %456 = icmp eq i16 %446, 0
  br i1 %456, label %457, label %480

457:                                              ; preds = %455, %477
  %458 = phi ptr [ %478, %477 ], [ %453, %455 ]
  %459 = getelementptr inbounds %struct.bConstraint, ptr %458, i64 0, i32 3
  %460 = load i16, ptr %459, align 8, !tbaa !44
  %461 = icmp eq i16 %460, 3
  br i1 %461, label %462, label %477

462:                                              ; preds = %457
  %463 = getelementptr inbounds %struct.bConstraint, ptr %458, i64 0, i32 9
  %464 = load float, ptr %463, align 8, !tbaa !46
  %465 = fcmp fast une float %464, 0.000000e+00
  br i1 %465, label %466, label %477

466:                                              ; preds = %462
  %467 = getelementptr inbounds %struct.bConstraint, ptr %458, i64 0, i32 2
  %468 = load ptr, ptr %467, align 8, !tbaa !47
  %469 = getelementptr inbounds %struct.bKinematicConstraint, ptr %468, i64 0, i32 2
  %470 = load i16, ptr %469, align 2, !tbaa !61
  %471 = and i16 %470, 8
  %472 = icmp eq i16 %471, 0
  br i1 %472, label %477, label %473

473:                                              ; preds = %466
  %474 = getelementptr inbounds %struct.bKinematicConstraint, ptr %468, i64 0, i32 4
  %475 = load i16, ptr %474, align 2, !tbaa !62
  %476 = getelementptr inbounds %struct.bKinematicConstraint, ptr %468, i64 0, i32 3
  store i16 %475, ptr %476, align 4, !tbaa !63
  br label %477

477:                                              ; preds = %473, %466, %462, %457
  %478 = load ptr, ptr %458, align 8, !tbaa !33
  %479 = icmp eq ptr %478, null
  br i1 %479, label %504, label %457, !llvm.loop !64

480:                                              ; preds = %455, %501
  %481 = phi ptr [ %502, %501 ], [ %453, %455 ]
  %482 = getelementptr inbounds %struct.bConstraint, ptr %481, i64 0, i32 3
  %483 = load i16, ptr %482, align 8, !tbaa !44
  %484 = icmp eq i16 %483, 3
  br i1 %484, label %485, label %501

485:                                              ; preds = %480
  %486 = getelementptr inbounds %struct.bConstraint, ptr %481, i64 0, i32 9
  %487 = load float, ptr %486, align 8, !tbaa !46
  %488 = fcmp fast une float %487, 0.000000e+00
  br i1 %488, label %489, label %501

489:                                              ; preds = %485
  %490 = getelementptr inbounds %struct.bConstraint, ptr %481, i64 0, i32 2
  %491 = load ptr, ptr %490, align 8, !tbaa !47
  %492 = getelementptr inbounds %struct.bKinematicConstraint, ptr %491, i64 0, i32 2
  %493 = load i16, ptr %492, align 2, !tbaa !61
  %494 = and i16 %493, 8
  %495 = icmp eq i16 %494, 0
  br i1 %495, label %501, label %496

496:                                              ; preds = %489
  %497 = getelementptr inbounds %struct.bKinematicConstraint, ptr %491, i64 0, i32 4
  %498 = load i16, ptr %497, align 2, !tbaa !62
  %499 = getelementptr inbounds %struct.bKinematicConstraint, ptr %491, i64 0, i32 3
  %500 = call i16 @llvm.smin.i16(i16 %498, i16 %446)
  store i16 %500, ptr %499, align 4, !tbaa !63
  br label %501

501:                                              ; preds = %496, %489, %485, %480
  %502 = load ptr, ptr %481, align 8, !tbaa !33
  %503 = icmp eq ptr %502, null
  br i1 %503, label %504, label %480, !llvm.loop !64

504:                                              ; preds = %501, %477, %451, %444
  %505 = load ptr, ptr %445, align 8, !tbaa !33
  %506 = icmp eq ptr %505, null
  br i1 %506, label %507, label %444, !llvm.loop !65

507:                                              ; preds = %504, %441, %437, %431, %430, %108, %2, %13, %24
  ret void
}

declare ptr @modifiers_isDeformedByArmature(ptr noundef) local_unnamed_addr #7

declare ptr @BKE_scene_base_find(ptr noundef, ptr noundef) local_unnamed_addr #7

declare i32 @PE_start_edit(ptr noundef) local_unnamed_addr #7

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @createTransParticleVerts(ptr noundef %0, ptr nocapture noundef %1) unnamed_addr #6 {
  %3 = alloca [4 x [4 x float]], align 16
  %4 = tail call ptr @CTX_data_active_base(ptr noundef %0) #18
  %5 = tail call ptr @CTX_data_active_object(ptr noundef %0) #18
  %6 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 56
  %7 = load ptr, ptr %6, align 8, !tbaa !89
  %8 = tail call ptr @PE_settings(ptr noundef %7) #18
  %9 = load ptr, ptr %6, align 8, !tbaa !89
  %10 = tail call ptr @PE_get_current(ptr noundef %9, ptr noundef %5) #18
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %3) #18
  %11 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 1
  %12 = load i32, ptr %11, align 4, !tbaa !24
  %13 = freeze i32 %12
  %14 = and i32 %13, 2048
  %15 = icmp eq ptr %10, null
  br i1 %15, label %454, label %16

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 57
  %18 = load ptr, ptr %17, align 8, !tbaa !57
  %19 = getelementptr inbounds %struct.ToolSettings, ptr %18, i64 0, i32 18, i32 8
  %20 = load i32, ptr %19, align 8, !tbaa !654
  %21 = icmp eq i32 %20, 1
  br i1 %21, label %454, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %struct.PTCacheEdit, ptr %10, i64 0, i32 4
  %24 = load ptr, ptr %23, align 8, !tbaa !111
  %25 = icmp eq ptr %24, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %22
  %27 = tail call ptr @psys_get_modifier(ptr noundef %5, ptr noundef nonnull %24) #18
  br label %28

28:                                               ; preds = %26, %22
  %29 = phi ptr [ %27, %26 ], [ null, %22 ]
  %30 = getelementptr inbounds %struct.Base, ptr %4, i64 0, i32 4
  %31 = load i32, ptr %30, align 8, !tbaa !338
  %32 = or i32 %31, 8
  store i32 %32, ptr %30, align 8, !tbaa !338
  %33 = getelementptr inbounds %struct.PTCacheEdit, ptr %10, i64 0, i32 2
  %34 = getelementptr inbounds %struct.PTCacheEdit, ptr %10, i64 0, i32 11
  %35 = load i32, ptr %34, align 8, !tbaa !115
  %36 = icmp sgt i32 %35, 0
  br i1 %36, label %37, label %454

37:                                               ; preds = %28
  %38 = load ptr, ptr %33, align 8, !tbaa !114
  %39 = icmp eq i32 %14, 0
  br i1 %39, label %40, label %122

40:                                               ; preds = %37, %86
  %41 = phi i32 [ %87, %86 ], [ 0, %37 ]
  %42 = phi i32 [ %88, %86 ], [ 0, %37 ]
  %43 = phi i32 [ %89, %86 ], [ 0, %37 ]
  %44 = phi ptr [ %90, %86 ], [ %38, %37 ]
  %45 = getelementptr inbounds %struct.PTCacheEditPoint, ptr %44, i64 0, i32 2
  %46 = load i16, ptr %45, align 4, !tbaa !116
  %47 = and i16 %46, -5
  store i16 %47, ptr %45, align 4, !tbaa !116
  %48 = and i16 %46, 8
  %49 = icmp eq i16 %48, 0
  br i1 %49, label %50, label %86

50:                                               ; preds = %40
  %51 = getelementptr inbounds %struct.PTCacheEditPoint, ptr %44, i64 0, i32 1
  %52 = load i32, ptr %51, align 8, !tbaa !132
  %53 = icmp sgt i32 %52, 0
  br i1 %53, label %54, label %86

54:                                               ; preds = %50
  %55 = load ptr, ptr %44, align 8, !tbaa !133
  %56 = and i32 %52, 1
  %57 = icmp eq i32 %52, 1
  br i1 %57, label %60, label %58

58:                                               ; preds = %54
  %59 = and i32 %52, -2
  br label %92

60:                                               ; preds = %92, %54
  %61 = phi i32 [ undef, %54 ], [ %117, %92 ]
  %62 = phi i32 [ undef, %54 ], [ %118, %92 ]
  %63 = phi i32 [ %41, %54 ], [ %118, %92 ]
  %64 = phi i32 [ 0, %54 ], [ %117, %92 ]
  %65 = phi ptr [ %55, %54 ], [ %119, %92 ]
  %66 = icmp eq i32 %56, 0
  br i1 %66, label %79, label %67

67:                                               ; preds = %60
  %68 = getelementptr inbounds %struct.PTCacheEditKey, ptr %65, i64 0, i32 7
  %69 = load i16, ptr %68, align 4, !tbaa !655
  %70 = zext i16 %69 to i32
  %71 = and i32 %70, 4
  %72 = icmp eq i32 %71, 0
  %73 = and i32 %70, 1
  %74 = icmp eq i32 %73, 0
  %75 = select i1 %74, i32 %64, i32 1
  %76 = select i1 %74, i32 %63, i32 1
  %77 = select i1 %72, i32 %75, i32 %64
  %78 = select i1 %72, i32 %76, i32 %63
  br label %79

79:                                               ; preds = %60, %67
  %80 = phi i32 [ %61, %60 ], [ %77, %67 ]
  %81 = phi i32 [ %62, %60 ], [ %78, %67 ]
  %82 = icmp eq i32 %80, 0
  br i1 %82, label %86, label %83

83:                                               ; preds = %79
  %84 = add nsw i32 %52, %42
  %85 = or i16 %46, 4
  store i16 %85, ptr %45, align 4, !tbaa !116
  br label %86

86:                                               ; preds = %50, %83, %79, %40
  %87 = phi i32 [ %81, %83 ], [ %81, %79 ], [ %41, %40 ], [ %41, %50 ]
  %88 = phi i32 [ %84, %83 ], [ %42, %79 ], [ %42, %40 ], [ %42, %50 ]
  %89 = add nuw nsw i32 %43, 1
  %90 = getelementptr inbounds %struct.PTCacheEditPoint, ptr %44, i64 1
  %91 = icmp eq i32 %89, %35
  br i1 %91, label %201, label %40, !llvm.loop !656

92:                                               ; preds = %92, %58
  %93 = phi i32 [ %41, %58 ], [ %118, %92 ]
  %94 = phi i32 [ 0, %58 ], [ %117, %92 ]
  %95 = phi ptr [ %55, %58 ], [ %119, %92 ]
  %96 = phi i32 [ 0, %58 ], [ %120, %92 ]
  %97 = getelementptr inbounds %struct.PTCacheEditKey, ptr %95, i64 0, i32 7
  %98 = load i16, ptr %97, align 4, !tbaa !655
  %99 = zext i16 %98 to i32
  %100 = and i32 %99, 4
  %101 = icmp eq i32 %100, 0
  %102 = and i32 %99, 1
  %103 = icmp eq i32 %102, 0
  %104 = select i1 %103, i32 %94, i32 1
  %105 = select i1 %103, i32 %93, i32 1
  %106 = select i1 %101, i32 %104, i32 %94
  %107 = select i1 %101, i32 %105, i32 %93
  %108 = getelementptr inbounds %struct.PTCacheEditKey, ptr %95, i64 1, i32 7
  %109 = load i16, ptr %108, align 4, !tbaa !655
  %110 = zext i16 %109 to i32
  %111 = and i32 %110, 4
  %112 = icmp eq i32 %111, 0
  %113 = and i32 %110, 1
  %114 = icmp eq i32 %113, 0
  %115 = select i1 %114, i32 %106, i32 1
  %116 = select i1 %114, i32 %107, i32 1
  %117 = select i1 %112, i32 %115, i32 %106
  %118 = select i1 %112, i32 %116, i32 %107
  %119 = getelementptr inbounds %struct.PTCacheEditKey, ptr %95, i64 2
  %120 = add i32 %96, 2
  %121 = icmp eq i32 %120, %59
  br i1 %121, label %60, label %92, !llvm.loop !657

122:                                              ; preds = %37, %195
  %123 = phi i32 [ %196, %195 ], [ 0, %37 ]
  %124 = phi i32 [ %197, %195 ], [ 0, %37 ]
  %125 = phi i32 [ %198, %195 ], [ 0, %37 ]
  %126 = phi ptr [ %199, %195 ], [ %38, %37 ]
  %127 = getelementptr inbounds %struct.PTCacheEditPoint, ptr %126, i64 0, i32 2
  %128 = load i16, ptr %127, align 4, !tbaa !116
  %129 = and i16 %128, -5
  store i16 %129, ptr %127, align 4, !tbaa !116
  %130 = and i16 %128, 8
  %131 = icmp eq i16 %130, 0
  br i1 %131, label %132, label %195

132:                                              ; preds = %122
  %133 = getelementptr inbounds %struct.PTCacheEditPoint, ptr %126, i64 0, i32 1
  %134 = load i32, ptr %133, align 8, !tbaa !132
  %135 = icmp sgt i32 %134, 0
  br i1 %135, label %136, label %195

136:                                              ; preds = %132
  %137 = load ptr, ptr %126, align 8, !tbaa !133
  %138 = and i32 %134, 1
  %139 = icmp eq i32 %134, 1
  br i1 %139, label %170, label %140

140:                                              ; preds = %136
  %141 = and i32 %134, -2
  br label %142

142:                                              ; preds = %142, %140
  %143 = phi i32 [ %123, %140 ], [ %166, %142 ]
  %144 = phi i32 [ 0, %140 ], [ %165, %142 ]
  %145 = phi ptr [ %137, %140 ], [ %167, %142 ]
  %146 = phi i32 [ 0, %140 ], [ %168, %142 ]
  %147 = getelementptr inbounds %struct.PTCacheEditKey, ptr %145, i64 0, i32 7
  %148 = load i16, ptr %147, align 4, !tbaa !655
  %149 = zext i16 %148 to i32
  %150 = and i32 %149, 4
  %151 = icmp eq i32 %150, 0
  %152 = and i32 %149, 1
  %153 = icmp eq i32 %152, 0
  %154 = select i1 %153, i32 %143, i32 1
  %155 = select i1 %151, i32 %154, i32 %143
  %156 = getelementptr inbounds %struct.PTCacheEditKey, ptr %145, i64 1, i32 7
  %157 = load i16, ptr %156, align 4, !tbaa !655
  %158 = zext i16 %157 to i32
  %159 = and i32 %158, 4
  %160 = icmp eq i32 %159, 0
  %161 = and i32 %158, 1
  %162 = icmp eq i32 %161, 0
  %163 = select i1 %162, i32 %155, i32 1
  %164 = select i1 %160, i1 true, i1 %151
  %165 = select i1 %164, i32 1, i32 %144
  %166 = select i1 %160, i32 %163, i32 %155
  %167 = getelementptr inbounds %struct.PTCacheEditKey, ptr %145, i64 2
  %168 = add i32 %146, 2
  %169 = icmp eq i32 %168, %141
  br i1 %169, label %170, label %142, !llvm.loop !657

170:                                              ; preds = %142, %136
  %171 = phi i32 [ undef, %136 ], [ %165, %142 ]
  %172 = phi i32 [ undef, %136 ], [ %166, %142 ]
  %173 = phi i32 [ %123, %136 ], [ %166, %142 ]
  %174 = phi i32 [ 0, %136 ], [ %165, %142 ]
  %175 = phi ptr [ %137, %136 ], [ %167, %142 ]
  %176 = icmp eq i32 %138, 0
  br i1 %176, label %188, label %177

177:                                              ; preds = %170
  %178 = getelementptr inbounds %struct.PTCacheEditKey, ptr %175, i64 0, i32 7
  %179 = load i16, ptr %178, align 4, !tbaa !655
  %180 = zext i16 %179 to i32
  %181 = and i32 %180, 4
  %182 = icmp eq i32 %181, 0
  %183 = and i32 %180, 1
  %184 = icmp eq i32 %183, 0
  %185 = select i1 %184, i32 %173, i32 1
  %186 = select i1 %182, i32 1, i32 %174
  %187 = select i1 %182, i32 %185, i32 %173
  br label %188

188:                                              ; preds = %170, %177
  %189 = phi i32 [ %171, %170 ], [ %186, %177 ]
  %190 = phi i32 [ %172, %170 ], [ %187, %177 ]
  %191 = icmp eq i32 %189, 0
  br i1 %191, label %195, label %192

192:                                              ; preds = %188
  %193 = add nsw i32 %134, %124
  %194 = or i16 %128, 4
  store i16 %194, ptr %127, align 4, !tbaa !116
  br label %195

195:                                              ; preds = %132, %122, %188, %192
  %196 = phi i32 [ %190, %192 ], [ %190, %188 ], [ %123, %122 ], [ %123, %132 ]
  %197 = phi i32 [ %193, %192 ], [ %124, %188 ], [ %124, %122 ], [ %124, %132 ]
  %198 = add nuw nsw i32 %125, 1
  %199 = getelementptr inbounds %struct.PTCacheEditPoint, ptr %126, i64 1
  %200 = icmp eq i32 %198, %35
  br i1 %200, label %201, label %122, !llvm.loop !656

201:                                              ; preds = %195, %86
  %202 = phi i32 [ %88, %86 ], [ %197, %195 ]
  %203 = phi i32 [ %87, %86 ], [ %196, %195 ]
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %454, label %205

205:                                              ; preds = %201
  %206 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 9
  store i32 %202, ptr %206, align 8, !tbaa !5
  %207 = load ptr, ptr @MEM_callocN, align 8, !tbaa !33
  %208 = sext i32 %202 to i64
  %209 = mul nsw i64 %208, 224
  %210 = tail call ptr %207(i64 noundef %209, ptr noundef nonnull @.str.58) #18
  %211 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 10
  store ptr %210, ptr %211, align 8, !tbaa !19
  %212 = load i32, ptr %1, align 8, !tbaa !161
  %213 = icmp eq i32 %212, 24
  br i1 %213, label %214, label %220

214:                                              ; preds = %205
  %215 = load ptr, ptr @MEM_callocN, align 8, !tbaa !33
  %216 = load i32, ptr %206, align 8, !tbaa !5
  %217 = sext i32 %216 to i64
  %218 = mul nsw i64 %217, 384
  %219 = tail call ptr %215(i64 noundef %218, ptr noundef nonnull @.str.59) #18
  br label %220

220:                                              ; preds = %205, %214
  %221 = phi ptr [ %219, %214 ], [ null, %205 ]
  %222 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 11
  store ptr %221, ptr %222, align 8
  call void @unit_m4(ptr noundef nonnull %3) #18
  %223 = getelementptr inbounds %struct.Object, ptr %5, i64 0, i32 50
  %224 = getelementptr inbounds %struct.Object, ptr %5, i64 0, i32 47
  %225 = call zeroext i8 @invert_m4_m4(ptr noundef nonnull %223, ptr noundef nonnull %224) #18
  %226 = load i32, ptr %34, align 8, !tbaa !115
  %227 = icmp sgt i32 %226, 0
  br i1 %227, label %228, label %454

228:                                              ; preds = %220
  %229 = load ptr, ptr %33, align 8, !tbaa !114
  %230 = getelementptr inbounds %struct.ParticleSystem, ptr %24, i64 0, i32 25
  %231 = getelementptr inbounds %struct.ParticleSystemModifierData, ptr %29, i64 0, i32 2
  %232 = getelementptr inbounds %struct.ParticleSystem, ptr %24, i64 0, i32 2
  %233 = getelementptr inbounds %struct.ParticleSystem, ptr %24, i64 0, i32 3
  %234 = icmp eq i32 %14, 0
  br label %235

235:                                              ; preds = %228, %446
  %236 = phi i64 [ 0, %228 ], [ %449, %446 ]
  %237 = phi ptr [ %210, %228 ], [ %448, %446 ]
  %238 = phi ptr [ %221, %228 ], [ %447, %446 ]
  %239 = phi ptr [ %229, %228 ], [ %450, %446 ]
  %240 = getelementptr inbounds %struct.PTCacheEditPoint, ptr %239, i64 0, i32 2
  %241 = load i16, ptr %240, align 4, !tbaa !116
  %242 = and i16 %241, 4
  %243 = icmp eq i16 %242, 0
  br i1 %243, label %446, label %244

244:                                              ; preds = %235
  br i1 %25, label %256, label %245

245:                                              ; preds = %244
  %246 = load i32, ptr %230, align 4, !tbaa !123
  %247 = and i32 %246, 2
  %248 = icmp eq i32 %247, 0
  br i1 %248, label %249, label %256

249:                                              ; preds = %245
  %250 = load ptr, ptr %231, align 8, !tbaa !125
  %251 = load ptr, ptr %232, align 8, !tbaa !128
  %252 = getelementptr inbounds %struct.ParticleSettings, ptr %251, i64 0, i32 8
  %253 = load i16, ptr %252, align 2, !tbaa !129
  %254 = load ptr, ptr %233, align 8, !tbaa !131
  %255 = getelementptr inbounds %struct.ParticleData, ptr %254, i64 %236
  call void @psys_mat_hair_to_global(ptr noundef %5, ptr noundef %250, i16 noundef signext %253, ptr noundef %255, ptr noundef nonnull %3) #18
  br label %256

256:                                              ; preds = %249, %245, %244
  %257 = load ptr, ptr %239, align 8, !tbaa !133
  %258 = getelementptr inbounds %struct.PTCacheEditPoint, ptr %239, i64 0, i32 1
  %259 = load i32, ptr %258, align 8, !tbaa !132
  %260 = icmp sgt i32 %259, 0
  br i1 %260, label %261, label %439

261:                                              ; preds = %256
  %262 = getelementptr inbounds %struct.PTCacheEditKey, ptr %257, i64 0, i32 7
  %263 = load i16, ptr %262, align 4, !tbaa !655
  %264 = and i16 %263, 8
  %265 = icmp eq i16 %264, 0
  br i1 %265, label %276, label %266

266:                                              ; preds = %261
  %267 = getelementptr inbounds %struct.PTCacheEditKey, ptr %257, i64 0, i32 4
  %268 = load ptr, ptr %257, align 8, !tbaa !135
  %269 = load float, ptr %268, align 4, !tbaa !82
  store float %269, ptr %267, align 4, !tbaa !82
  %270 = getelementptr inbounds float, ptr %268, i64 1
  %271 = load float, ptr %270, align 4, !tbaa !82
  %272 = getelementptr inbounds %struct.PTCacheEditKey, ptr %257, i64 0, i32 4, i64 1
  store float %271, ptr %272, align 4, !tbaa !82
  %273 = getelementptr inbounds float, ptr %268, i64 2
  %274 = load float, ptr %273, align 4, !tbaa !82
  %275 = getelementptr inbounds %struct.PTCacheEditKey, ptr %257, i64 0, i32 4, i64 2
  store float %274, ptr %275, align 4, !tbaa !82
  call void @mul_m4_v3(ptr noundef nonnull %3, ptr noundef nonnull %267) #18
  br label %278

276:                                              ; preds = %261
  %277 = load ptr, ptr %257, align 8, !tbaa !135
  br label %278

278:                                              ; preds = %276, %266
  %279 = phi ptr [ %277, %276 ], [ %267, %266 ]
  %280 = getelementptr inbounds %struct.TransData, ptr %237, i64 0, i32 3
  store ptr %279, ptr %280, align 8
  %281 = getelementptr inbounds %struct.TransData, ptr %237, i64 0, i32 4
  %282 = load float, ptr %279, align 4, !tbaa !82
  store float %282, ptr %281, align 4, !tbaa !82
  %283 = getelementptr inbounds float, ptr %279, i64 1
  %284 = load float, ptr %283, align 4, !tbaa !82
  %285 = getelementptr inbounds %struct.TransData, ptr %237, i64 0, i32 4, i64 1
  store float %284, ptr %285, align 4, !tbaa !82
  %286 = getelementptr inbounds float, ptr %279, i64 2
  %287 = load float, ptr %286, align 4, !tbaa !82
  %288 = getelementptr inbounds %struct.TransData, ptr %237, i64 0, i32 4, i64 2
  store float %287, ptr %288, align 4, !tbaa !82
  %289 = getelementptr inbounds %struct.TransData, ptr %237, i64 0, i32 7
  %290 = load float, ptr %279, align 4, !tbaa !82
  store float %290, ptr %289, align 4, !tbaa !82
  %291 = load float, ptr %283, align 4, !tbaa !82
  %292 = getelementptr inbounds %struct.TransData, ptr %237, i64 0, i32 7, i64 1
  store float %291, ptr %292, align 4, !tbaa !82
  %293 = load float, ptr %286, align 4, !tbaa !82
  %294 = getelementptr inbounds %struct.TransData, ptr %237, i64 0, i32 7, i64 2
  store float %293, ptr %294, align 4, !tbaa !82
  %295 = load i16, ptr %262, align 4, !tbaa !655
  %296 = and i16 %295, 1
  %297 = icmp ne i16 %296, 0
  %298 = or i1 %297, %234
  br i1 %298, label %299, label %304

299:                                              ; preds = %278
  %300 = select i1 %297, i32 1, i32 2048
  %301 = getelementptr inbounds %struct.TransData, ptr %237, i64 0, i32 16
  %302 = load i32, ptr %301, align 8, !tbaa !20
  %303 = or i32 %302, %300
  store i32 %303, ptr %301, align 8, !tbaa !20
  br label %304

304:                                              ; preds = %278, %299
  %305 = getelementptr inbounds %struct.TransData, ptr %237, i64 0, i32 8
  call void @unit_m3(ptr noundef nonnull %305) #18
  %306 = getelementptr inbounds %struct.TransData, ptr %237, i64 0, i32 9
  call void @unit_m3(ptr noundef nonnull %306) #18
  %307 = load i16, ptr %8, align 8, !tbaa !658
  %308 = and i16 %307, 2
  %309 = icmp eq i16 %308, 0
  br i1 %309, label %319, label %310

310:                                              ; preds = %304
  br i1 %25, label %315, label %311

311:                                              ; preds = %310
  %312 = load i32, ptr %230, align 4, !tbaa !123
  %313 = and i32 %312, 2
  %314 = icmp eq i32 %313, 0
  br i1 %314, label %315, label %319

315:                                              ; preds = %311, %310
  %316 = getelementptr inbounds %struct.TransData, ptr %237, i64 0, i32 17
  %317 = load i16, ptr %316, align 4, !tbaa !638
  %318 = or i16 %317, 7
  store i16 %318, ptr %316, align 4, !tbaa !638
  br label %319

319:                                              ; preds = %315, %311, %304
  %320 = getelementptr inbounds %struct.TransData, ptr %237, i64 0, i32 11
  store ptr %5, ptr %320, align 8, !tbaa !326
  %321 = getelementptr inbounds %struct.TransData, ptr %237, i64 0, i32 13
  store ptr %238, ptr %321, align 8, !tbaa !334
  %322 = load i32, ptr %1, align 8, !tbaa !161
  %323 = icmp eq i32 %322, 24
  br i1 %323, label %326, label %324

324:                                              ; preds = %319
  %325 = load i32, ptr %258, align 8, !tbaa !132
  br label %346

326:                                              ; preds = %319
  %327 = getelementptr inbounds %struct.PTCacheEditKey, ptr %257, i64 0, i32 3
  %328 = load ptr, ptr %327, align 8, !tbaa !659
  %329 = getelementptr inbounds %struct.TransData, ptr %237, i64 0, i32 5
  store ptr %328, ptr %329, align 8, !tbaa !423
  %330 = load float, ptr %328, align 4, !tbaa !82
  %331 = getelementptr inbounds %struct.TransData, ptr %237, i64 0, i32 6
  store float %330, ptr %331, align 8, !tbaa !424
  %332 = getelementptr inbounds %struct.TransData, ptr %237, i64 0, i32 16
  %333 = load i32, ptr %332, align 8, !tbaa !20
  %334 = or i32 %333, 1024
  store i32 %334, ptr %332, align 8, !tbaa !20
  %335 = getelementptr inbounds %struct.TransDataExtension, ptr %238, i64 0, i32 11
  store ptr null, ptr %335, align 8
  %336 = load i32, ptr %258, align 8, !tbaa !132
  %337 = icmp eq i32 %336, 1
  br i1 %337, label %342, label %338

338:                                              ; preds = %326
  %339 = getelementptr inbounds %struct.PTCacheEditKey, ptr %257, i64 1, i32 3
  %340 = load ptr, ptr %339, align 8, !tbaa !659
  %341 = getelementptr inbounds %struct.TransDataExtension, ptr %238, i64 0, i32 5
  store ptr %340, ptr %341, align 8, !tbaa !631
  br label %346

342:                                              ; preds = %326
  %343 = getelementptr inbounds %struct.TransDataExtension, ptr %238, i64 0, i32 5
  store ptr null, ptr %343, align 8, !tbaa !631
  %344 = getelementptr %struct.TransData, ptr %237, i64 1
  %345 = getelementptr inbounds %struct.TransDataExtension, ptr %238, i64 1
  br label %439

346:                                              ; preds = %324, %338
  %347 = phi i32 [ %325, %324 ], [ %336, %338 ]
  %348 = getelementptr %struct.TransData, ptr %237, i64 1
  %349 = icmp eq ptr %238, null
  %350 = getelementptr inbounds %struct.TransDataExtension, ptr %238, i64 1
  %351 = select i1 %349, ptr null, ptr %350
  %352 = icmp sgt i32 %347, 1
  br i1 %352, label %353, label %439

353:                                              ; preds = %346, %431
  %354 = phi ptr [ %433, %431 ], [ %348, %346 ]
  %355 = phi ptr [ %436, %431 ], [ %351, %346 ]
  %356 = phi i32 [ %437, %431 ], [ 1, %346 ]
  %357 = phi ptr [ %358, %431 ], [ %257, %346 ]
  %358 = getelementptr inbounds %struct.PTCacheEditKey, ptr %357, i64 1
  %359 = getelementptr inbounds %struct.PTCacheEditKey, ptr %357, i64 1, i32 7
  %360 = load i16, ptr %359, align 4, !tbaa !655
  %361 = and i16 %360, 8
  %362 = icmp eq i16 %361, 0
  br i1 %362, label %373, label %363

363:                                              ; preds = %353
  %364 = getelementptr inbounds %struct.PTCacheEditKey, ptr %357, i64 1, i32 4
  %365 = load ptr, ptr %358, align 8, !tbaa !135
  %366 = load float, ptr %365, align 4, !tbaa !82
  store float %366, ptr %364, align 4, !tbaa !82
  %367 = getelementptr inbounds float, ptr %365, i64 1
  %368 = load float, ptr %367, align 4, !tbaa !82
  %369 = getelementptr inbounds %struct.PTCacheEditKey, ptr %357, i64 1, i32 4, i64 1
  store float %368, ptr %369, align 4, !tbaa !82
  %370 = getelementptr inbounds float, ptr %365, i64 2
  %371 = load float, ptr %370, align 4, !tbaa !82
  %372 = getelementptr inbounds %struct.PTCacheEditKey, ptr %357, i64 1, i32 4, i64 2
  store float %371, ptr %372, align 4, !tbaa !82
  call void @mul_m4_v3(ptr noundef nonnull %3, ptr noundef nonnull %364) #18
  br label %375

373:                                              ; preds = %353
  %374 = load ptr, ptr %358, align 8, !tbaa !135
  br label %375

375:                                              ; preds = %373, %363
  %376 = phi ptr [ %374, %373 ], [ %364, %363 ]
  %377 = getelementptr inbounds %struct.TransData, ptr %354, i64 0, i32 3
  store ptr %376, ptr %377, align 8
  %378 = getelementptr inbounds %struct.TransData, ptr %354, i64 0, i32 4
  %379 = load float, ptr %376, align 4, !tbaa !82
  store float %379, ptr %378, align 4, !tbaa !82
  %380 = getelementptr inbounds float, ptr %376, i64 1
  %381 = load float, ptr %380, align 4, !tbaa !82
  %382 = getelementptr inbounds %struct.TransData, ptr %354, i64 0, i32 4, i64 1
  store float %381, ptr %382, align 4, !tbaa !82
  %383 = getelementptr inbounds float, ptr %376, i64 2
  %384 = load float, ptr %383, align 4, !tbaa !82
  %385 = getelementptr inbounds %struct.TransData, ptr %354, i64 0, i32 4, i64 2
  store float %384, ptr %385, align 4, !tbaa !82
  %386 = getelementptr inbounds %struct.TransData, ptr %354, i64 0, i32 7
  %387 = load float, ptr %376, align 4, !tbaa !82
  store float %387, ptr %386, align 4, !tbaa !82
  %388 = load float, ptr %380, align 4, !tbaa !82
  %389 = getelementptr inbounds %struct.TransData, ptr %354, i64 0, i32 7, i64 1
  store float %388, ptr %389, align 4, !tbaa !82
  %390 = load float, ptr %383, align 4, !tbaa !82
  %391 = getelementptr inbounds %struct.TransData, ptr %354, i64 0, i32 7, i64 2
  store float %390, ptr %391, align 4, !tbaa !82
  %392 = load i16, ptr %359, align 4, !tbaa !655
  %393 = and i16 %392, 1
  %394 = icmp ne i16 %393, 0
  %395 = or i1 %394, %234
  br i1 %395, label %396, label %401

396:                                              ; preds = %375
  %397 = select i1 %394, i32 1, i32 2048
  %398 = getelementptr inbounds %struct.TransData, ptr %354, i64 0, i32 16
  %399 = load i32, ptr %398, align 8, !tbaa !20
  %400 = or i32 %399, %397
  store i32 %400, ptr %398, align 8, !tbaa !20
  br label %401

401:                                              ; preds = %375, %396
  %402 = getelementptr inbounds %struct.TransData, ptr %354, i64 0, i32 8
  call void @unit_m3(ptr noundef nonnull %402) #18
  %403 = getelementptr inbounds %struct.TransData, ptr %354, i64 0, i32 9
  call void @unit_m3(ptr noundef nonnull %403) #18
  %404 = getelementptr inbounds %struct.TransData, ptr %354, i64 0, i32 11
  store ptr %5, ptr %404, align 8, !tbaa !326
  %405 = getelementptr inbounds %struct.TransData, ptr %354, i64 0, i32 13
  store ptr %355, ptr %405, align 8, !tbaa !334
  %406 = load i32, ptr %1, align 8, !tbaa !161
  %407 = icmp eq i32 %406, 24
  br i1 %407, label %410, label %408

408:                                              ; preds = %401
  %409 = load i32, ptr %258, align 8, !tbaa !132
  br label %431

410:                                              ; preds = %401
  %411 = getelementptr inbounds %struct.PTCacheEditKey, ptr %357, i64 1, i32 3
  %412 = load ptr, ptr %411, align 8, !tbaa !659
  %413 = getelementptr inbounds %struct.TransData, ptr %354, i64 0, i32 5
  store ptr %412, ptr %413, align 8, !tbaa !423
  %414 = load float, ptr %412, align 4, !tbaa !82
  %415 = getelementptr inbounds %struct.TransData, ptr %354, i64 0, i32 6
  store float %414, ptr %415, align 8, !tbaa !424
  %416 = getelementptr inbounds %struct.TransData, ptr %354, i64 0, i32 16
  %417 = load i32, ptr %416, align 8, !tbaa !20
  %418 = or i32 %417, 1024
  store i32 %418, ptr %416, align 8, !tbaa !20
  %419 = getelementptr %struct.PTCacheEditKey, ptr %357, i64 0, i32 3
  %420 = load ptr, ptr %419, align 8, !tbaa !659
  %421 = getelementptr inbounds %struct.TransDataExtension, ptr %355, i64 0, i32 11
  store ptr %420, ptr %421, align 8
  %422 = load i32, ptr %258, align 8, !tbaa !132
  %423 = add nsw i32 %422, -1
  %424 = icmp eq i32 %356, %423
  br i1 %424, label %425, label %427

425:                                              ; preds = %410
  %426 = getelementptr inbounds %struct.TransDataExtension, ptr %355, i64 0, i32 5
  store ptr null, ptr %426, align 8, !tbaa !631
  br label %431

427:                                              ; preds = %410
  %428 = getelementptr inbounds %struct.PTCacheEditKey, ptr %357, i64 2, i32 3
  %429 = load ptr, ptr %428, align 8, !tbaa !659
  %430 = getelementptr inbounds %struct.TransDataExtension, ptr %355, i64 0, i32 5
  store ptr %429, ptr %430, align 8, !tbaa !631
  br label %431

431:                                              ; preds = %408, %425, %427
  %432 = phi i32 [ %409, %408 ], [ %422, %425 ], [ %422, %427 ]
  %433 = getelementptr %struct.TransData, ptr %354, i64 1
  %434 = icmp eq ptr %355, null
  %435 = getelementptr inbounds %struct.TransDataExtension, ptr %355, i64 1
  %436 = select i1 %434, ptr null, ptr %435
  %437 = add nuw nsw i32 %356, 1
  %438 = icmp slt i32 %437, %432
  br i1 %438, label %353, label %439, !llvm.loop !660

439:                                              ; preds = %431, %346, %342, %256
  %440 = phi ptr [ %238, %256 ], [ %351, %346 ], [ %345, %342 ], [ %436, %431 ]
  %441 = phi ptr [ %237, %256 ], [ %348, %346 ], [ %344, %342 ], [ %433, %431 ]
  %442 = icmp eq ptr %237, %441
  %443 = select i1 %234, i1 true, i1 %442
  br i1 %443, label %446, label %444

444:                                              ; preds = %439
  %445 = getelementptr inbounds %struct.TransData, ptr %441, i64 -1
  call fastcc void @calc_distanceCurveVerts(ptr noundef %237, ptr noundef nonnull %445)
  br label %446

446:                                              ; preds = %439, %444, %235
  %447 = phi ptr [ %238, %235 ], [ %440, %444 ], [ %440, %439 ]
  %448 = phi ptr [ %237, %235 ], [ %441, %444 ], [ %441, %439 ]
  %449 = add nuw nsw i64 %236, 1
  %450 = getelementptr inbounds %struct.PTCacheEditPoint, ptr %239, i64 1
  %451 = load i32, ptr %34, align 8, !tbaa !115
  %452 = sext i32 %451 to i64
  %453 = icmp slt i64 %449, %452
  br i1 %453, label %235, label %454, !llvm.loop !662

454:                                              ; preds = %446, %28, %220, %201, %2, %16
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %3) #18
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @createTransObject(ptr noundef %0, ptr nocapture noundef %1) unnamed_addr #6 {
  %3 = alloca %struct.ListBase, align 8
  %4 = getelementptr %struct.TransInfo, ptr %1, i64 0, i32 56
  %5 = load ptr, ptr %4, align 8, !tbaa !89
  %6 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 1
  %7 = load i32, ptr %6, align 4, !tbaa !24
  %8 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 52
  %9 = load ptr, ptr %8, align 8, !tbaa !323
  %10 = load i32, ptr %1, align 8, !tbaa !161
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %151, label %12

12:                                               ; preds = %2
  tail call void @BKE_scene_base_flag_to_objects(ptr noundef %5) #18
  %13 = load ptr, ptr @G, align 8, !tbaa !299
  %14 = load ptr, ptr %4, align 8, !tbaa !89
  tail call void @DAG_scene_relations_update(ptr noundef %13, ptr noundef %14) #18
  %15 = getelementptr inbounds %struct.Scene, ptr %5, i64 0, i32 5
  %16 = load ptr, ptr %15, align 8, !tbaa !33
  %17 = icmp eq ptr %16, null
  br i1 %17, label %124, label %27

18:                                               ; preds = %40
  %19 = load ptr, ptr %15, align 8, !tbaa !33
  %20 = icmp eq ptr %19, null
  br i1 %20, label %124, label %21

21:                                               ; preds = %18
  %22 = icmp eq ptr %9, null
  %23 = getelementptr inbounds %struct.View3D, ptr %9, i64 0, i32 22
  %24 = getelementptr inbounds %struct.Scene, ptr %5, i64 0, i32 12
  %25 = select i1 %22, ptr %24, ptr %23
  %26 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 32
  br label %43

27:                                               ; preds = %12, %40
  %28 = phi ptr [ %41, %40 ], [ %16, %12 ]
  %29 = getelementptr inbounds %struct.Base, ptr %28, i64 0, i32 7
  %30 = load ptr, ptr %29, align 8, !tbaa !109
  %31 = getelementptr inbounds %struct.Object, ptr %30, i64 0, i32 103
  %32 = load i8, ptr %31, align 1, !tbaa !324
  %33 = and i8 %32, 7
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %40, label %35

35:                                               ; preds = %27
  %36 = load ptr, ptr @G, align 8, !tbaa !299
  %37 = getelementptr inbounds %struct.Main, ptr %36, i64 0, i32 46
  %38 = load ptr, ptr %37, align 8, !tbaa !663
  %39 = load ptr, ptr %4, align 8, !tbaa !89
  tail call void @BKE_object_handle_update(ptr noundef %38, ptr noundef %39, ptr noundef nonnull %30) #18
  br label %40

40:                                               ; preds = %35, %27
  %41 = load ptr, ptr %28, align 8, !tbaa !33
  %42 = icmp eq ptr %41, null
  br i1 %42, label %18, label %27, !llvm.loop !665

43:                                               ; preds = %121, %21
  %44 = phi ptr [ %19, %21 ], [ %122, %121 ]
  %45 = getelementptr inbounds %struct.Base, ptr %44, i64 0, i32 4
  %46 = load i32, ptr %45, align 8, !tbaa !338
  %47 = and i32 %46, -3
  store i32 %47, ptr %45, align 8, !tbaa !338
  %48 = and i32 %46, 1
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %121, label %50

50:                                               ; preds = %43
  %51 = getelementptr inbounds %struct.Base, ptr %44, i64 0, i32 2
  %52 = load i32, ptr %51, align 8, !tbaa !489
  %53 = load i32, ptr %25, align 8, !tbaa !27
  %54 = and i32 %53, %52
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %121, label %56

56:                                               ; preds = %50
  %57 = getelementptr inbounds %struct.Base, ptr %44, i64 0, i32 7
  %58 = load ptr, ptr %57, align 8, !tbaa !109
  %59 = getelementptr inbounds %struct.ID, ptr %58, i64 0, i32 3
  %60 = load ptr, ptr %59, align 8, !tbaa !666
  %61 = icmp eq ptr %60, null
  br i1 %61, label %62, label %121

62:                                               ; preds = %56
  %63 = getelementptr inbounds %struct.Object, ptr %58, i64 0, i32 102
  %64 = load i8, ptr %63, align 8, !tbaa !491
  %65 = and i8 %64, 1
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %67, label %121

67:                                               ; preds = %62
  %68 = getelementptr inbounds %struct.Object, ptr %58, i64 0, i32 9
  %69 = load ptr, ptr %68, align 8, !tbaa !667
  %70 = icmp eq ptr %69, null
  br i1 %70, label %120, label %71

71:                                               ; preds = %67, %102
  %72 = phi ptr [ %104, %102 ], [ %69, %67 ]
  %73 = getelementptr inbounds %struct.Object, ptr %72, i64 0, i32 53
  %74 = load i16, ptr %73, align 4, !tbaa !668
  %75 = and i16 %74, 1
  %76 = icmp eq i16 %75, 0
  br i1 %76, label %102, label %77

77:                                               ; preds = %71
  %78 = tail call ptr @BKE_scene_base_find(ptr noundef %5, ptr noundef nonnull %72) #18
  %79 = icmp eq ptr %78, null
  br i1 %79, label %102, label %80

80:                                               ; preds = %77
  %81 = getelementptr inbounds %struct.Base, ptr %78, i64 0, i32 4
  %82 = load i32, ptr %81, align 8, !tbaa !338
  %83 = and i32 %82, 1
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %102, label %85

85:                                               ; preds = %80
  %86 = getelementptr inbounds %struct.Base, ptr %78, i64 0, i32 2
  %87 = load i32, ptr %86, align 8, !tbaa !489
  %88 = load i32, ptr %25, align 8, !tbaa !27
  %89 = and i32 %88, %87
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %102, label %91

91:                                               ; preds = %85
  %92 = getelementptr inbounds %struct.Base, ptr %78, i64 0, i32 7
  %93 = load ptr, ptr %92, align 8, !tbaa !109
  %94 = getelementptr inbounds %struct.ID, ptr %93, i64 0, i32 3
  %95 = load ptr, ptr %94, align 8, !tbaa !666
  %96 = icmp eq ptr %95, null
  br i1 %96, label %97, label %102

97:                                               ; preds = %91
  %98 = getelementptr inbounds %struct.Object, ptr %93, i64 0, i32 102
  %99 = load i8, ptr %98, align 8, !tbaa !491
  %100 = and i8 %99, 1
  %101 = icmp eq i8 %100, 0
  br i1 %101, label %106, label %102

102:                                              ; preds = %97, %91, %85, %80, %77, %71
  %103 = getelementptr inbounds %struct.Object, ptr %72, i64 0, i32 9
  %104 = load ptr, ptr %103, align 8, !tbaa !667
  %105 = icmp eq ptr %104, null
  br i1 %105, label %120, label %71, !llvm.loop !669

106:                                              ; preds = %97
  %107 = load i32, ptr %1, align 8, !tbaa !161
  switch i32 %107, label %114 [
    i32 2, label %108
    i32 10, label %108
  ]

108:                                              ; preds = %106, %106
  %109 = load i16, ptr %26, align 2, !tbaa !321
  %110 = icmp eq i16 %109, 2
  br i1 %110, label %111, label %114

111:                                              ; preds = %108
  %112 = load i32, ptr %45, align 8, !tbaa !338
  %113 = or i32 %112, 256
  br label %118

114:                                              ; preds = %108, %106
  %115 = load i32, ptr %45, align 8, !tbaa !338
  %116 = and i32 %115, -4
  %117 = or i32 %116, 2
  br label %118

118:                                              ; preds = %114, %111
  %119 = phi i32 [ %113, %111 ], [ %117, %114 ]
  store i32 %119, ptr %45, align 8, !tbaa !338
  br label %120

120:                                              ; preds = %102, %118, %67
  tail call void @DAG_id_tag_update(ptr noundef %58, i16 noundef signext 1) #18
  br label %121

121:                                              ; preds = %120, %62, %56, %50, %43
  %122 = load ptr, ptr %44, align 8, !tbaa !33
  %123 = icmp eq ptr %122, null
  br i1 %123, label %124, label %43, !llvm.loop !670

124:                                              ; preds = %121, %18, %12
  %125 = load ptr, ptr @G, align 8, !tbaa !299
  %126 = load ptr, ptr %4, align 8, !tbaa !89
  tail call void @DAG_scene_flush_update(ptr noundef %125, ptr noundef %126, i32 noundef -1, i16 noundef signext 0) #18
  %127 = load ptr, ptr %15, align 8, !tbaa !33
  %128 = icmp eq ptr %127, null
  br i1 %128, label %151, label %129

129:                                              ; preds = %124, %148
  %130 = phi ptr [ %149, %148 ], [ %127, %124 ]
  %131 = getelementptr inbounds %struct.Base, ptr %130, i64 0, i32 7
  %132 = load ptr, ptr %131, align 8, !tbaa !109
  %133 = getelementptr inbounds %struct.Object, ptr %132, i64 0, i32 103
  %134 = load i8, ptr %133, align 1, !tbaa !324
  %135 = and i8 %134, 1
  %136 = icmp eq i8 %135, 0
  br i1 %136, label %141, label %137

137:                                              ; preds = %129
  %138 = getelementptr inbounds %struct.Base, ptr %130, i64 0, i32 4
  %139 = load i32, ptr %138, align 8, !tbaa !338
  %140 = or i32 %139, 4
  store i32 %140, ptr %138, align 8, !tbaa !338
  br label %141

141:                                              ; preds = %137, %129
  %142 = and i8 %134, 2
  %143 = icmp eq i8 %142, 0
  br i1 %143, label %148, label %144

144:                                              ; preds = %141
  %145 = getelementptr inbounds %struct.Base, ptr %130, i64 0, i32 4
  %146 = load i32, ptr %145, align 8, !tbaa !338
  %147 = or i32 %146, 8
  store i32 %147, ptr %145, align 8, !tbaa !338
  br label %148

148:                                              ; preds = %144, %141
  %149 = load ptr, ptr %130, align 8, !tbaa !33
  %150 = icmp eq ptr %149, null
  br i1 %150, label %151, label %129, !llvm.loop !671

151:                                              ; preds = %148, %2, %124
  %152 = tail call i32 @ctx_data_list_count(ptr noundef %0, ptr noundef nonnull @CTX_data_selected_objects) #18
  %153 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 9
  store i32 %152, ptr %153, align 8, !tbaa !5
  %154 = icmp eq i32 %152, 0
  br i1 %154, label %155, label %170

155:                                              ; preds = %151
  %156 = load ptr, ptr %4, align 8, !tbaa !89
  %157 = getelementptr inbounds %struct.Scene, ptr %156, i64 0, i32 5
  %158 = load ptr, ptr %157, align 8, !tbaa !33
  %159 = icmp eq ptr %158, null
  br i1 %159, label %433, label %160

160:                                              ; preds = %155, %160
  %161 = phi ptr [ %168, %160 ], [ %158, %155 ]
  %162 = getelementptr inbounds %struct.Base, ptr %161, i64 0, i32 4
  %163 = load i32, ptr %162, align 8, !tbaa !338
  %164 = lshr i32 %163, 1
  %165 = and i32 %164, 1
  %166 = and i32 %163, -8495
  %167 = or i32 %165, %166
  store i32 %167, ptr %162, align 8, !tbaa !338
  %168 = load ptr, ptr %161, align 8, !tbaa !33
  %169 = icmp eq ptr %168, null
  br i1 %169, label %433, label %160, !llvm.loop !339

170:                                              ; preds = %151
  %171 = and i32 %7, 2048
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %328, label %173

173:                                              ; preds = %170
  %174 = load ptr, ptr %4, align 8, !tbaa !89
  %175 = load ptr, ptr %8, align 8, !tbaa !323
  %176 = load i32, ptr %1, align 8, !tbaa !161
  switch i32 %176, label %181 [
    i32 2, label %177
    i32 10, label %177
  ]

177:                                              ; preds = %173, %173
  %178 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 32
  %179 = load i16, ptr %178, align 2, !tbaa !321
  %180 = icmp eq i16 %179, 2
  br i1 %180, label %256, label %181

181:                                              ; preds = %177, %173
  %182 = getelementptr inbounds %struct.Scene, ptr %174, i64 0, i32 5
  %183 = load ptr, ptr %182, align 8, !tbaa !33
  %184 = icmp eq ptr %183, null
  br i1 %184, label %256, label %185

185:                                              ; preds = %181
  %186 = icmp eq ptr %175, null
  %187 = getelementptr inbounds %struct.View3D, ptr %175, i64 0, i32 22
  %188 = getelementptr inbounds %struct.Scene, ptr %174, i64 0, i32 12
  %189 = select i1 %186, ptr %188, ptr %187
  br label %190

190:                                              ; preds = %225, %185
  %191 = phi ptr [ %183, %185 ], [ %226, %225 ]
  %192 = getelementptr inbounds %struct.Base, ptr %191, i64 0, i32 4
  %193 = load i32, ptr %192, align 8, !tbaa !338
  %194 = and i32 %193, 1
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %225, label %196

196:                                              ; preds = %190
  %197 = getelementptr inbounds %struct.Base, ptr %191, i64 0, i32 2
  %198 = load i32, ptr %197, align 8, !tbaa !489
  %199 = load i32, ptr %189, align 8, !tbaa !27
  %200 = and i32 %199, %198
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %225, label %202

202:                                              ; preds = %196
  %203 = getelementptr inbounds %struct.Base, ptr %191, i64 0, i32 7
  %204 = load ptr, ptr %203, align 8, !tbaa !109
  %205 = getelementptr inbounds %struct.ID, ptr %204, i64 0, i32 3
  %206 = load ptr, ptr %205, align 8, !tbaa !666
  %207 = icmp eq ptr %206, null
  br i1 %207, label %208, label %225

208:                                              ; preds = %202
  %209 = getelementptr inbounds %struct.Object, ptr %204, i64 0, i32 102
  %210 = load i8, ptr %209, align 8, !tbaa !491
  %211 = and i8 %210, 1
  %212 = icmp eq i8 %211, 0
  br i1 %212, label %213, label %225

213:                                              ; preds = %208
  %214 = getelementptr inbounds %struct.Object, ptr %204, i64 0, i32 9
  %215 = load ptr, ptr %214, align 8, !tbaa !667
  %216 = icmp eq ptr %215, null
  br i1 %216, label %225, label %217

217:                                              ; preds = %213, %217
  %218 = phi ptr [ %223, %217 ], [ %215, %213 ]
  %219 = getelementptr inbounds %struct.Object, ptr %218, i64 0, i32 53
  %220 = load i16, ptr %219, align 4, !tbaa !668
  %221 = or i16 %220, 8192
  store i16 %221, ptr %219, align 4, !tbaa !668
  %222 = getelementptr inbounds %struct.Object, ptr %218, i64 0, i32 9
  %223 = load ptr, ptr %222, align 8, !tbaa !667
  %224 = icmp eq ptr %223, null
  br i1 %224, label %225, label %217, !llvm.loop !672

225:                                              ; preds = %217, %213, %208, %202, %196, %190
  %226 = load ptr, ptr %191, align 8, !tbaa !33
  %227 = icmp eq ptr %226, null
  br i1 %227, label %228, label %190, !llvm.loop !673

228:                                              ; preds = %225, %253
  %229 = phi ptr [ %254, %253 ], [ %183, %225 ]
  %230 = getelementptr inbounds %struct.Base, ptr %229, i64 0, i32 7
  %231 = load ptr, ptr %230, align 8, !tbaa !109
  %232 = getelementptr inbounds %struct.Object, ptr %231, i64 0, i32 53
  %233 = load i16, ptr %232, align 4, !tbaa !668
  %234 = and i16 %233, 8449
  %235 = icmp eq i16 %234, 0
  br i1 %235, label %236, label %253

236:                                              ; preds = %228
  %237 = getelementptr inbounds %struct.Base, ptr %229, i64 0, i32 2
  %238 = load i32, ptr %237, align 8, !tbaa !489
  %239 = load i32, ptr %189, align 8, !tbaa !27
  %240 = and i32 %239, %238
  %241 = icmp eq i32 %240, 0
  br i1 %241, label %253, label %242

242:                                              ; preds = %236
  %243 = getelementptr inbounds %struct.ID, ptr %231, i64 0, i32 3
  %244 = load ptr, ptr %243, align 8, !tbaa !666
  %245 = icmp eq ptr %244, null
  br i1 %245, label %246, label %253

246:                                              ; preds = %242
  %247 = getelementptr inbounds %struct.Object, ptr %231, i64 0, i32 102
  %248 = load i8, ptr %247, align 8, !tbaa !491
  %249 = and i8 %248, 1
  %250 = icmp eq i8 %249, 0
  br i1 %250, label %251, label %253

251:                                              ; preds = %246
  %252 = tail call fastcc zeroext i8 @mark_children(ptr noundef nonnull %231), !range !674
  br label %253

253:                                              ; preds = %251, %246, %242, %236, %228
  %254 = load ptr, ptr %229, align 8, !tbaa !33
  %255 = icmp eq ptr %254, null
  br i1 %255, label %256, label %228, !llvm.loop !675

256:                                              ; preds = %253, %181, %177
  %257 = getelementptr inbounds %struct.Scene, ptr %174, i64 0, i32 5
  %258 = load ptr, ptr %257, align 8, !tbaa !33
  %259 = icmp eq ptr %258, null
  br i1 %259, label %295, label %260

260:                                              ; preds = %256
  %261 = icmp eq ptr %175, null
  %262 = getelementptr inbounds %struct.View3D, ptr %175, i64 0, i32 22
  %263 = getelementptr inbounds %struct.Scene, ptr %174, i64 0, i32 12
  %264 = select i1 %261, ptr %263, ptr %262
  br label %265

265:                                              ; preds = %291, %260
  %266 = phi ptr [ %258, %260 ], [ %293, %291 ]
  %267 = phi i32 [ 0, %260 ], [ %292, %291 ]
  %268 = getelementptr inbounds %struct.Base, ptr %266, i64 0, i32 7
  %269 = load ptr, ptr %268, align 8, !tbaa !109
  %270 = getelementptr inbounds %struct.Object, ptr %269, i64 0, i32 53
  %271 = load i16, ptr %270, align 4, !tbaa !668
  %272 = and i16 %271, 8449
  %273 = icmp eq i16 %272, 0
  br i1 %273, label %274, label %291

274:                                              ; preds = %265
  %275 = getelementptr inbounds %struct.Base, ptr %266, i64 0, i32 2
  %276 = load i32, ptr %275, align 8, !tbaa !489
  %277 = load i32, ptr %264, align 8, !tbaa !27
  %278 = and i32 %277, %276
  %279 = icmp eq i32 %278, 0
  br i1 %279, label %291, label %280

280:                                              ; preds = %274
  %281 = getelementptr inbounds %struct.ID, ptr %269, i64 0, i32 3
  %282 = load ptr, ptr %281, align 8, !tbaa !666
  %283 = icmp eq ptr %282, null
  br i1 %283, label %284, label %291

284:                                              ; preds = %280
  %285 = getelementptr inbounds %struct.Object, ptr %269, i64 0, i32 102
  %286 = load i8, ptr %285, align 8, !tbaa !491
  %287 = and i8 %286, 1
  %288 = icmp eq i8 %287, 0
  br i1 %288, label %289, label %291

289:                                              ; preds = %284
  tail call void @DAG_id_tag_update(ptr noundef nonnull %269, i16 noundef signext 1) #18
  %290 = add nsw i32 %267, 1
  br label %291

291:                                              ; preds = %289, %284, %280, %274, %265
  %292 = phi i32 [ %290, %289 ], [ %267, %284 ], [ %267, %280 ], [ %267, %274 ], [ %267, %265 ]
  %293 = load ptr, ptr %266, align 8, !tbaa !33
  %294 = icmp eq ptr %293, null
  br i1 %294, label %295, label %265, !llvm.loop !676

295:                                              ; preds = %291, %256
  %296 = phi i32 [ 0, %256 ], [ %292, %291 ]
  %297 = load ptr, ptr @G, align 8, !tbaa !299
  %298 = load ptr, ptr %4, align 8, !tbaa !89
  tail call void @DAG_scene_relations_update(ptr noundef %297, ptr noundef %298) #18
  %299 = load ptr, ptr @G, align 8, !tbaa !299
  %300 = load ptr, ptr %4, align 8, !tbaa !89
  tail call void @DAG_scene_flush_update(ptr noundef %299, ptr noundef %300, i32 noundef -1, i16 noundef signext 0) #18
  %301 = load ptr, ptr %257, align 8, !tbaa !33
  %302 = icmp eq ptr %301, null
  br i1 %302, label %325, label %303

303:                                              ; preds = %295, %322
  %304 = phi ptr [ %323, %322 ], [ %301, %295 ]
  %305 = getelementptr inbounds %struct.Base, ptr %304, i64 0, i32 7
  %306 = load ptr, ptr %305, align 8, !tbaa !109
  %307 = getelementptr inbounds %struct.Object, ptr %306, i64 0, i32 103
  %308 = load i8, ptr %307, align 1, !tbaa !324
  %309 = and i8 %308, 1
  %310 = icmp eq i8 %309, 0
  br i1 %310, label %315, label %311

311:                                              ; preds = %303
  %312 = getelementptr inbounds %struct.Base, ptr %304, i64 0, i32 4
  %313 = load i32, ptr %312, align 8, !tbaa !338
  %314 = or i32 %313, 4
  store i32 %314, ptr %312, align 8, !tbaa !338
  br label %315

315:                                              ; preds = %311, %303
  %316 = and i8 %308, 2
  %317 = icmp eq i8 %316, 0
  br i1 %317, label %322, label %318

318:                                              ; preds = %315
  %319 = getelementptr inbounds %struct.Base, ptr %304, i64 0, i32 4
  %320 = load i32, ptr %319, align 8, !tbaa !338
  %321 = or i32 %320, 8
  store i32 %321, ptr %319, align 8, !tbaa !338
  br label %322

322:                                              ; preds = %318, %315
  %323 = load ptr, ptr %304, align 8, !tbaa !33
  %324 = icmp eq ptr %323, null
  br i1 %324, label %325, label %303, !llvm.loop !677

325:                                              ; preds = %322, %295
  %326 = load i32, ptr %153, align 8, !tbaa !5
  %327 = add nsw i32 %326, %296
  store i32 %327, ptr %153, align 8, !tbaa !5
  br label %328

328:                                              ; preds = %325, %170
  %329 = phi i32 [ %327, %325 ], [ %152, %170 ]
  %330 = load ptr, ptr @MEM_callocN, align 8, !tbaa !33
  %331 = sext i32 %329 to i64
  %332 = mul nsw i64 %331, 224
  %333 = tail call ptr %330(i64 noundef %332, ptr noundef nonnull @.str.60) #18
  %334 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 10
  store ptr %333, ptr %334, align 8, !tbaa !19
  %335 = load ptr, ptr @MEM_callocN, align 8, !tbaa !33
  %336 = load i32, ptr %153, align 8, !tbaa !5
  %337 = sext i32 %336 to i64
  %338 = mul nsw i64 %337, 384
  %339 = tail call ptr %335(i64 noundef %338, ptr noundef nonnull @.str.61) #18
  %340 = getelementptr inbounds %struct.TransInfo, ptr %1, i64 0, i32 11
  store ptr %339, ptr %340, align 8, !tbaa !406
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %3) #18
  %341 = call i32 @CTX_data_selected_bases(ptr noundef %0, ptr noundef nonnull %3) #18
  %342 = load ptr, ptr %3, align 8, !tbaa !33
  %343 = icmp eq ptr %342, null
  br i1 %343, label %378, label %344

344:                                              ; preds = %328, %372
  %345 = phi ptr [ %376, %372 ], [ %342, %328 ]
  %346 = phi ptr [ %374, %372 ], [ %333, %328 ]
  %347 = phi ptr [ %375, %372 ], [ %339, %328 ]
  %348 = getelementptr inbounds %struct.CollectionPointerLink, ptr %345, i64 0, i32 2, i32 2
  %349 = load ptr, ptr %348, align 8, !tbaa !678
  %350 = getelementptr inbounds %struct.Base, ptr %349, i64 0, i32 7
  %351 = load ptr, ptr %350, align 8, !tbaa !109
  %352 = getelementptr inbounds %struct.TransData, ptr %346, i64 0, i32 16
  store i32 1, ptr %352, align 8, !tbaa !20
  %353 = getelementptr inbounds %struct.Object, ptr %351, i64 0, i32 56
  %354 = load i16, ptr %353, align 2, !tbaa !682
  %355 = getelementptr inbounds %struct.TransData, ptr %346, i64 0, i32 17
  store i16 %354, ptr %355, align 4, !tbaa !638
  %356 = getelementptr inbounds %struct.TransData, ptr %346, i64 0, i32 13
  store ptr %347, ptr %356, align 8, !tbaa !334
  %357 = getelementptr inbounds %struct.Object, ptr %351, i64 0, i32 83
  %358 = load i16, ptr %357, align 8, !tbaa !683
  %359 = sext i16 %358 to i32
  %360 = getelementptr inbounds %struct.TransDataExtension, ptr %347, i64 0, i32 17
  store i32 %359, ptr %360, align 8, !tbaa !650
  %361 = getelementptr inbounds %struct.Base, ptr %349, i64 0, i32 4
  %362 = load i32, ptr %361, align 8, !tbaa !338
  %363 = and i32 %362, 256
  %364 = icmp eq i32 %363, 0
  br i1 %364, label %366, label %365

365:                                              ; preds = %344
  store i32 8705, ptr %352, align 8, !tbaa !20
  br label %366

366:                                              ; preds = %365, %344
  %367 = phi i32 [ 10753, %365 ], [ 2049, %344 ]
  %368 = getelementptr inbounds %struct.ID, ptr %351, i64 0, i32 3
  %369 = load ptr, ptr %368, align 8, !tbaa !666
  %370 = icmp eq ptr %369, null
  br i1 %370, label %372, label %371

371:                                              ; preds = %366
  store i32 %367, ptr %352, align 8, !tbaa !20
  br label %372

372:                                              ; preds = %371, %366
  call fastcc void @ObjectToTransData(ptr noundef nonnull %1, ptr noundef nonnull %346, ptr noundef nonnull %351)
  %373 = getelementptr inbounds %struct.TransData, ptr %346, i64 0, i32 5
  store ptr null, ptr %373, align 8, !tbaa !423
  %374 = getelementptr inbounds %struct.TransData, ptr %346, i64 1
  %375 = getelementptr inbounds %struct.TransDataExtension, ptr %347, i64 1
  %376 = load ptr, ptr %345, align 8, !tbaa !33
  %377 = icmp eq ptr %376, null
  br i1 %377, label %378, label %344, !llvm.loop !684

378:                                              ; preds = %372, %328
  %379 = phi ptr [ %339, %328 ], [ %375, %372 ]
  %380 = phi ptr [ %333, %328 ], [ %374, %372 ]
  call void @BLI_freelistN(ptr noundef nonnull %3) #18
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %3) #18
  br i1 %172, label %433, label %381

381:                                              ; preds = %378
  %382 = getelementptr inbounds %struct.Scene, ptr %5, i64 0, i32 5
  %383 = load ptr, ptr %382, align 8, !tbaa !33
  %384 = icmp eq ptr %383, null
  br i1 %384, label %433, label %385

385:                                              ; preds = %381
  %386 = load ptr, ptr %8, align 8, !tbaa !323
  %387 = icmp eq ptr %386, null
  %388 = getelementptr inbounds %struct.View3D, ptr %386, i64 0, i32 22
  %389 = getelementptr inbounds %struct.Scene, ptr %5, i64 0, i32 12
  %390 = select i1 %387, ptr %389, ptr %388
  br label %391

391:                                              ; preds = %385, %428
  %392 = phi ptr [ %383, %385 ], [ %431, %428 ]
  %393 = phi ptr [ %380, %385 ], [ %430, %428 ]
  %394 = phi ptr [ %379, %385 ], [ %429, %428 ]
  %395 = getelementptr inbounds %struct.Base, ptr %392, i64 0, i32 7
  %396 = load ptr, ptr %395, align 8, !tbaa !109
  %397 = getelementptr inbounds %struct.Object, ptr %396, i64 0, i32 53
  %398 = load i16, ptr %397, align 4, !tbaa !668
  %399 = and i16 %398, 8449
  %400 = icmp eq i16 %399, 0
  br i1 %400, label %401, label %428

401:                                              ; preds = %391
  %402 = getelementptr inbounds %struct.Base, ptr %392, i64 0, i32 2
  %403 = load i32, ptr %402, align 8, !tbaa !489
  %404 = load i32, ptr %390, align 8, !tbaa !27
  %405 = and i32 %404, %403
  %406 = icmp eq i32 %405, 0
  br i1 %406, label %428, label %407

407:                                              ; preds = %401
  %408 = getelementptr inbounds %struct.ID, ptr %396, i64 0, i32 3
  %409 = load ptr, ptr %408, align 8, !tbaa !666
  %410 = icmp eq ptr %409, null
  br i1 %410, label %411, label %428

411:                                              ; preds = %407
  %412 = getelementptr inbounds %struct.Object, ptr %396, i64 0, i32 102
  %413 = load i8, ptr %412, align 8, !tbaa !491
  %414 = and i8 %413, 1
  %415 = icmp eq i8 %414, 0
  br i1 %415, label %416, label %428

416:                                              ; preds = %411
  %417 = getelementptr inbounds %struct.Object, ptr %396, i64 0, i32 56
  %418 = load i16, ptr %417, align 2, !tbaa !682
  %419 = getelementptr inbounds %struct.TransData, ptr %393, i64 0, i32 17
  store i16 %418, ptr %419, align 4, !tbaa !638
  %420 = getelementptr inbounds %struct.TransData, ptr %393, i64 0, i32 13
  store ptr %394, ptr %420, align 8, !tbaa !334
  %421 = getelementptr inbounds %struct.Object, ptr %396, i64 0, i32 83
  %422 = load i16, ptr %421, align 8, !tbaa !683
  %423 = sext i16 %422 to i32
  %424 = getelementptr inbounds %struct.TransDataExtension, ptr %394, i64 0, i32 17
  store i32 %423, ptr %424, align 8, !tbaa !650
  call fastcc void @ObjectToTransData(ptr noundef nonnull %1, ptr noundef %393, ptr noundef nonnull %396)
  %425 = getelementptr inbounds %struct.TransData, ptr %393, i64 0, i32 5
  store ptr null, ptr %425, align 8, !tbaa !423
  %426 = getelementptr inbounds %struct.TransData, ptr %393, i64 1
  %427 = getelementptr inbounds %struct.TransDataExtension, ptr %394, i64 1
  br label %428

428:                                              ; preds = %416, %411, %407, %401, %391
  %429 = phi ptr [ %427, %416 ], [ %394, %411 ], [ %394, %407 ], [ %394, %401 ], [ %394, %391 ]
  %430 = phi ptr [ %426, %416 ], [ %393, %411 ], [ %393, %407 ], [ %393, %401 ], [ %393, %391 ]
  %431 = load ptr, ptr %392, align 8, !tbaa !33
  %432 = icmp eq ptr %431, null
  br i1 %432, label %433, label %391, !llvm.loop !685

433:                                              ; preds = %428, %160, %381, %155, %378
  ret void
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.fabs.f32(float) #8

declare void @BKE_sequence_calc_disp(ptr noundef, ptr noundef) local_unnamed_addr #7

declare void @BKE_sequencer_offset_animdata(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #7

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #11

declare void @BM_mesh_elem_hflag_disable_all(ptr noundef, i8 noundef zeroext, i8 noundef zeroext, i8 noundef zeroext) local_unnamed_addr #7

declare void @EDBM_automerge(ptr noundef, ptr noundef, i8 noundef zeroext, i8 noundef zeroext) local_unnamed_addr #7

declare ptr @ED_space_clip_get_mask(ptr noundef) local_unnamed_addr #7

declare ptr @ED_space_image_get_mask(ptr noundef) local_unnamed_addr #7

declare void @WM_event_add_notifier(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #7

declare zeroext i8 @ED_mask_layer_shape_auto_key_select(ptr noundef, i32 noundef) local_unnamed_addr #7

declare void @nodeFreeNode(ptr noundef, ptr noundef) local_unnamed_addr #7

declare ptr @ED_space_clip_get_clip(ptr noundef) local_unnamed_addr #7

declare ptr @BKE_tracking_get_active_plane_tracks(ptr noundef) local_unnamed_addr #7

declare i32 @ED_space_clip_get_clip_frame_number(ptr noundef) local_unnamed_addr #7

declare void @BKE_tracking_track_plane_from_existing_motion(ptr noundef, i32 noundef) local_unnamed_addr #7

declare zeroext i8 @nodeUpdateID(ptr noundef, ptr noundef) local_unnamed_addr #7

declare void @delete_fcurve_key(ptr noundef, i32 noundef, i8 noundef zeroext) local_unnamed_addr #7

declare void @BLI_sortlist_r(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #7

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: readwrite) uwtable
define internal i32 @gpf_cmp_frame(ptr nocapture noundef writeonly %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readonly %2) #12 {
  %4 = getelementptr inbounds %struct.bGPDframe, ptr %1, i64 0, i32 3
  %5 = load i32, ptr %4, align 8, !tbaa !307
  %6 = getelementptr inbounds %struct.bGPDframe, ptr %2, i64 0, i32 3
  %7 = load i32, ptr %6, align 8, !tbaa !307
  %8 = icmp slt i32 %5, %7
  br i1 %8, label %22, label %9

9:                                                ; preds = %3
  %10 = icmp sgt i32 %5, %7
  br i1 %10, label %22, label %11

11:                                               ; preds = %9
  store i8 1, ptr %0, align 1, !tbaa !51
  %12 = getelementptr inbounds %struct.bGPDframe, ptr %1, i64 0, i32 4
  %13 = load i32, ptr %12, align 4, !tbaa !435
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %21, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.bGPDframe, ptr %2, i64 0, i32 4
  %18 = load i32, ptr %17, align 4, !tbaa !435
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %22, label %21

21:                                               ; preds = %16, %11
  br label %22

22:                                               ; preds = %16, %9, %3, %21
  %23 = phi i32 [ 0, %21 ], [ -1, %3 ], [ 1, %9 ], [ 1, %16 ]
  ret i32 %23
}

declare zeroext i8 @gpencil_layer_delframe(ptr noundef, ptr noundef) local_unnamed_addr #7

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: readwrite) uwtable
define internal i32 @masklay_shape_cmp_frame(ptr nocapture noundef writeonly %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readonly %2) #12 {
  %4 = getelementptr inbounds %struct.MaskLayerShape, ptr %1, i64 0, i32 4
  %5 = load i32, ptr %4, align 4, !tbaa !314
  %6 = getelementptr inbounds %struct.MaskLayerShape, ptr %2, i64 0, i32 4
  %7 = load i32, ptr %6, align 4, !tbaa !314
  %8 = icmp slt i32 %5, %7
  br i1 %8, label %22, label %9

9:                                                ; preds = %3
  %10 = icmp sgt i32 %5, %7
  br i1 %10, label %22, label %11

11:                                               ; preds = %9
  store i8 1, ptr %0, align 1, !tbaa !51
  %12 = getelementptr inbounds %struct.MaskLayerShape, ptr %1, i64 0, i32 5
  %13 = load i8, ptr %12, align 8, !tbaa !437
  %14 = and i8 %13, 1
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %21, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.MaskLayerShape, ptr %2, i64 0, i32 5
  %18 = load i8, ptr %17, align 8, !tbaa !437
  %19 = and i8 %18, 1
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %22, label %21

21:                                               ; preds = %16, %11
  br label %22

22:                                               ; preds = %16, %9, %3, %21
  %23 = phi i32 [ 0, %21 ], [ -1, %3 ], [ 1, %9 ], [ 1, %16 ]
  ret i32 %23
}

declare void @BKE_mask_layer_shape_unlink(ptr noundef, ptr noundef) local_unnamed_addr #7

declare void @BKE_armature_mat_pose_to_bone(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #7

declare void @copy_m3_m4(ptr noundef, ptr noundef) local_unnamed_addr #7

declare void @mat3_to_eulO(ptr noundef, i16 noundef signext, ptr noundef) local_unnamed_addr #7

declare void @mat3_to_axis_angle(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #7

declare void @mat3_to_quat(ptr noundef, ptr noundef) local_unnamed_addr #7

declare void @eulO_to_mat3(ptr noundef, ptr noundef, i16 noundef signext) local_unnamed_addr #7

declare void @axis_angle_to_mat3(ptr noundef, ptr noundef, float noundef nofpclass(nan inf)) local_unnamed_addr #7

declare void @quat_to_mat3(ptr noundef, ptr noundef) local_unnamed_addr #7

declare zeroext i8 @invert_m3_m3(ptr noundef, ptr noundef) local_unnamed_addr #7

declare void @mul_m3_m3m3(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #7

declare void @mat3_to_size(ptr noundef, ptr noundef) local_unnamed_addr #7

declare void @BIK_clear_data(ptr noundef) local_unnamed_addr #7

declare void @BLI_remlink(ptr noundef, ptr noundef) local_unnamed_addr #7

declare ptr @BKE_tracking_marker_get(ptr noundef, i32 noundef) local_unnamed_addr #7

declare ptr @BKE_tracking_plane_marker_get(ptr noundef, i32 noundef) local_unnamed_addr #7

declare void @BKE_report(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #7

declare zeroext i8 @BKE_object_obdata_is_libdata(ptr noundef) local_unnamed_addr #7

declare void @normalize_m3(ptr noundef) local_unnamed_addr #7

declare void @pseudoinverse_m3_m3(ptr noundef, ptr noundef, float noundef nofpclass(nan inf)) local_unnamed_addr #7

declare i32 @BKE_object_obdata_texspace_get(ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #7

declare void @BM_mesh_cd_flag_ensure(ptr noundef, ptr noundef, i8 noundef zeroext) local_unnamed_addr #7

declare ptr @BKE_mesh_from_object(ptr noundef) local_unnamed_addr #7

declare i32 @CustomData_get_offset(ptr noundef, i32 noundef) local_unnamed_addr #7

declare void @mid_v3_v3v3(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #7

declare void @copy_m3_m3(ptr noundef, ptr noundef) local_unnamed_addr #7

declare void @bmiter__elem_of_mesh_begin(ptr noundef) #7

declare ptr @bmiter__elem_of_mesh_step(ptr noundef) #7

declare void @bmiter__edge_of_vert_begin(ptr noundef) #7

declare ptr @bmiter__edge_of_vert_step(ptr noundef) #7

declare void @bmiter__loop_of_vert_begin(ptr noundef) #7

declare ptr @bmiter__loop_of_vert_step(ptr noundef) #7

declare void @bmiter__vert_of_edge_begin(ptr noundef) #7

declare ptr @bmiter__vert_of_edge_step(ptr noundef) #7

declare void @bmiter__vert_of_face_begin(ptr noundef) #7

declare ptr @bmiter__vert_of_face_step(ptr noundef) #7

declare void @bmiter__loop_of_face_begin(ptr noundef) #7

declare ptr @bmiter__loop_of_face_step(ptr noundef) #7

declare void @mul_m3_v3(ptr noundef, ptr noundef) local_unnamed_addr #7

declare void @project_v3_v3v3(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #7

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.sqrt.f32(float) #8

declare ptr @CTX_data_scene(ptr noundef) local_unnamed_addr #7

declare ptr @CTX_data_edit_mask(ptr noundef) local_unnamed_addr #7

declare i32 @BKE_mask_point_handles_mode_get(ptr noundef) local_unnamed_addr #7

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @MaskPointToTransData(i32 %0, ptr noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4, i32 noundef %5, ptr nocapture noundef readonly %6) unnamed_addr #6 {
  %8 = alloca [3 x [3 x float]], align 16
  %9 = alloca [3 x [3 x float]], align 16
  %10 = getelementptr inbounds %struct.BezTriple, ptr %1, i64 0, i32 8
  %11 = load i8, ptr %10, align 4, !tbaa !507
  %12 = and i8 %11, 1
  %13 = getelementptr inbounds %struct.BezTriple, ptr %1, i64 0, i32 7
  %14 = load i8, ptr %13, align 1, !tbaa !506
  %15 = getelementptr inbounds %struct.BezTriple, ptr %1, i64 0, i32 9
  %16 = load i8, ptr %15, align 1, !tbaa !508
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %8) #18
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %9) #18
  %17 = sitofp i32 %0 to float
  call void @BKE_mask_point_parent_matrix_get(ptr noundef %1, float noundef nofpclass(nan inf) %17, ptr noundef nonnull %8) #18
  %18 = call zeroext i8 @invert_m3_m3(ptr noundef nonnull %9, ptr noundef nonnull %8) #18
  %19 = icmp ne i32 %5, 0
  %20 = icmp ne i8 %12, 0
  %21 = select i1 %19, i1 true, i1 %20
  br i1 %21, label %22, label %165

22:                                               ; preds = %7
  %23 = or i8 %14, %16
  %24 = or i8 %23, %11
  %25 = and i8 %24, 1
  %26 = getelementptr inbounds %struct.TransDataMasking, ptr %4, i64 0, i32 4
  store ptr %1, ptr %26, align 8, !tbaa !393
  %27 = getelementptr inbounds %struct.TransDataMasking, ptr %4, i64 0, i32 3
  call void @copy_m3_m3(ptr noundef nonnull %27, ptr noundef nonnull %1) #18
  %28 = getelementptr inbounds float, ptr %6, i64 1
  %29 = getelementptr inbounds [3 x [3 x float]], ptr %1, i64 0, i64 1
  %30 = getelementptr inbounds %struct.BezTriple, ptr %1, i64 0, i32 2
  %31 = icmp eq i8 %25, 0
  %32 = getelementptr inbounds %struct.BezTriple, ptr %1, i64 0, i32 6
  %33 = getelementptr inbounds %struct.BezTriple, ptr %1, i64 0, i32 5
  %34 = getelementptr inbounds %struct.TransDataMasking, ptr %4, i64 0, i32 5
  call void @copy_m3_m3(ptr noundef nonnull %34, ptr noundef nonnull %8) #18
  %35 = getelementptr inbounds %struct.TransDataMasking, ptr %4, i64 0, i32 6
  call void @copy_m3_m3(ptr noundef nonnull %35, ptr noundef nonnull %9) #18
  call void @mul_v2_m3v2(ptr noundef %3, ptr noundef nonnull %8, ptr noundef nonnull %1) #18
  %36 = load float, ptr %6, align 4, !tbaa !82
  %37 = load float, ptr %3, align 8, !tbaa !82
  %38 = fmul fast float %37, %36
  store float %38, ptr %3, align 8, !tbaa !82
  %39 = load float, ptr %28, align 4, !tbaa !82
  %40 = getelementptr inbounds [3 x float], ptr %3, i64 0, i64 1
  %41 = load float, ptr %40, align 4, !tbaa !82
  %42 = fmul fast float %41, %39
  store float %42, ptr %40, align 4, !tbaa !82
  %43 = getelementptr inbounds [3 x float], ptr %3, i64 0, i64 2
  store float 0.000000e+00, ptr %43, align 8, !tbaa !82
  %44 = getelementptr inbounds %struct.TransData2D, ptr %3, i64 0, i32 1
  store ptr %1, ptr %44, align 8, !tbaa !178
  %45 = getelementptr inbounds %struct.TransData, ptr %2, i64 0, i32 16
  store i32 0, ptr %45, align 8, !tbaa !20
  %46 = getelementptr inbounds %struct.TransData, ptr %2, i64 0, i32 3
  store ptr %3, ptr %46, align 8, !tbaa !182
  %47 = getelementptr inbounds %struct.TransData, ptr %2, i64 0, i32 7
  call void @mul_v2_m3v2(ptr noundef nonnull %47, ptr noundef nonnull %8, ptr noundef nonnull %29) #18
  %48 = load float, ptr %6, align 4, !tbaa !82
  %49 = load float, ptr %47, align 4, !tbaa !82
  %50 = fmul fast float %49, %48
  store float %50, ptr %47, align 4, !tbaa !82
  %51 = load float, ptr %28, align 4, !tbaa !82
  %52 = getelementptr inbounds %struct.TransData, ptr %2, i64 0, i32 7, i64 1
  %53 = load float, ptr %52, align 4, !tbaa !82
  %54 = fmul fast float %53, %51
  store float %54, ptr %52, align 4, !tbaa !82
  %55 = getelementptr inbounds %struct.TransData, ptr %2, i64 0, i32 4
  %56 = load ptr, ptr %46, align 8, !tbaa !182
  %57 = load float, ptr %56, align 4, !tbaa !82
  store float %57, ptr %55, align 4, !tbaa !82
  %58 = getelementptr inbounds float, ptr %56, i64 1
  %59 = load float, ptr %58, align 4, !tbaa !82
  %60 = getelementptr inbounds %struct.TransData, ptr %2, i64 0, i32 4, i64 1
  store float %59, ptr %60, align 4, !tbaa !82
  %61 = getelementptr inbounds float, ptr %56, i64 2
  %62 = load float, ptr %61, align 4, !tbaa !82
  %63 = getelementptr inbounds %struct.TransData, ptr %2, i64 0, i32 4, i64 2
  store float %62, ptr %63, align 4, !tbaa !82
  %64 = getelementptr inbounds %struct.TransData, ptr %2, i64 0, i32 10
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(36) %64, i8 0, i64 32, i1 false)
  %65 = getelementptr inbounds %struct.TransData, ptr %2, i64 0, i32 10, i64 2, i64 2
  store float 1.000000e+00, ptr %65, align 8, !tbaa !82
  %66 = getelementptr inbounds %struct.TransData, ptr %2, i64 0, i32 13
  store ptr null, ptr %66, align 8, !tbaa !334
  %67 = getelementptr inbounds %struct.TransData, ptr %2, i64 0, i32 5
  store ptr null, ptr %67, align 8
  br i1 %31, label %71, label %68

68:                                               ; preds = %22
  %69 = load i32, ptr %45, align 8, !tbaa !20
  %70 = or i32 %69, 1
  store i32 %70, ptr %45, align 8, !tbaa !20
  br label %71

71:                                               ; preds = %68, %22
  store float 0.000000e+00, ptr %2, align 8, !tbaa !25
  %72 = getelementptr inbounds %struct.TransData, ptr %2, i64 0, i32 8
  call void @unit_m3(ptr noundef nonnull %72) #18
  %73 = getelementptr inbounds %struct.TransData, ptr %2, i64 0, i32 9
  call void @unit_m3(ptr noundef nonnull %73) #18
  %74 = load i8, ptr %33, align 1, !tbaa !477
  %75 = getelementptr inbounds %struct.TransDataMasking, ptr %4, i64 0, i32 7
  store i8 %74, ptr %75, align 8, !tbaa !395
  %76 = getelementptr inbounds %struct.TransData, ptr %2, i64 1
  %77 = getelementptr inbounds %struct.TransData2D, ptr %3, i64 1
  %78 = getelementptr inbounds %struct.TransDataMasking, ptr %4, i64 1, i32 5
  call void @copy_m3_m3(ptr noundef nonnull %78, ptr noundef nonnull %8) #18
  %79 = getelementptr inbounds %struct.TransDataMasking, ptr %4, i64 1, i32 6
  call void @copy_m3_m3(ptr noundef nonnull %79, ptr noundef nonnull %9) #18
  call void @mul_v2_m3v2(ptr noundef nonnull %77, ptr noundef nonnull %8, ptr noundef nonnull %29) #18
  %80 = load float, ptr %6, align 4, !tbaa !82
  %81 = load float, ptr %77, align 8, !tbaa !82
  %82 = fmul fast float %81, %80
  store float %82, ptr %77, align 8, !tbaa !82
  %83 = load float, ptr %28, align 4, !tbaa !82
  %84 = getelementptr inbounds %struct.TransData2D, ptr %3, i64 1, i32 0, i64 1
  %85 = load float, ptr %84, align 4, !tbaa !82
  %86 = fmul fast float %85, %83
  store float %86, ptr %84, align 4, !tbaa !82
  %87 = getelementptr inbounds %struct.TransData2D, ptr %3, i64 1, i32 0, i64 2
  store float 0.000000e+00, ptr %87, align 8, !tbaa !82
  %88 = getelementptr inbounds %struct.TransData2D, ptr %3, i64 1, i32 1
  store ptr %29, ptr %88, align 8, !tbaa !178
  %89 = getelementptr inbounds %struct.TransData, ptr %2, i64 1, i32 16
  store i32 0, ptr %89, align 8, !tbaa !20
  %90 = getelementptr inbounds %struct.TransData, ptr %2, i64 1, i32 3
  store ptr %77, ptr %90, align 8, !tbaa !182
  %91 = getelementptr inbounds %struct.TransData, ptr %2, i64 1, i32 7
  call void @mul_v2_m3v2(ptr noundef nonnull %91, ptr noundef nonnull %8, ptr noundef nonnull %29) #18
  %92 = load float, ptr %6, align 4, !tbaa !82
  %93 = load float, ptr %91, align 4, !tbaa !82
  %94 = fmul fast float %93, %92
  store float %94, ptr %91, align 4, !tbaa !82
  %95 = load float, ptr %28, align 4, !tbaa !82
  %96 = getelementptr inbounds %struct.TransData, ptr %2, i64 1, i32 7, i64 1
  %97 = load float, ptr %96, align 4, !tbaa !82
  %98 = fmul fast float %97, %95
  store float %98, ptr %96, align 4, !tbaa !82
  %99 = getelementptr inbounds %struct.TransData, ptr %2, i64 1, i32 4
  %100 = load ptr, ptr %90, align 8, !tbaa !182
  %101 = load float, ptr %100, align 4, !tbaa !82
  store float %101, ptr %99, align 4, !tbaa !82
  %102 = getelementptr inbounds float, ptr %100, i64 1
  %103 = load float, ptr %102, align 4, !tbaa !82
  %104 = getelementptr inbounds %struct.TransData, ptr %2, i64 1, i32 4, i64 1
  store float %103, ptr %104, align 4, !tbaa !82
  %105 = getelementptr inbounds float, ptr %100, i64 2
  %106 = load float, ptr %105, align 4, !tbaa !82
  %107 = getelementptr inbounds %struct.TransData, ptr %2, i64 1, i32 4, i64 2
  store float %106, ptr %107, align 4, !tbaa !82
  %108 = getelementptr inbounds %struct.TransData, ptr %2, i64 1, i32 10
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(36) %108, i8 0, i64 32, i1 false)
  %109 = getelementptr inbounds %struct.TransData, ptr %2, i64 1, i32 10, i64 2, i64 2
  store float 1.000000e+00, ptr %109, align 8, !tbaa !82
  %110 = getelementptr inbounds %struct.TransData, ptr %2, i64 1, i32 13
  store ptr null, ptr %110, align 8, !tbaa !334
  %111 = load float, ptr %30, align 4, !tbaa !82
  %112 = getelementptr inbounds %struct.TransData, ptr %2, i64 1, i32 6
  store float %111, ptr %112, align 8, !tbaa !424
  %113 = getelementptr inbounds %struct.TransData, ptr %2, i64 1, i32 5
  store ptr %30, ptr %113, align 8
  br i1 %31, label %117, label %114

114:                                              ; preds = %71
  %115 = load i32, ptr %89, align 8, !tbaa !20
  %116 = or i32 %115, 1
  store i32 %116, ptr %89, align 8, !tbaa !20
  br label %117

117:                                              ; preds = %71, %114
  store float 0.000000e+00, ptr %76, align 8, !tbaa !25
  %118 = getelementptr inbounds %struct.TransData, ptr %2, i64 1, i32 8
  call void @unit_m3(ptr noundef nonnull %118) #18
  %119 = getelementptr inbounds %struct.TransData, ptr %2, i64 1, i32 9
  call void @unit_m3(ptr noundef nonnull %119) #18
  %120 = getelementptr inbounds %struct.TransData, ptr %2, i64 2
  %121 = getelementptr inbounds %struct.TransData2D, ptr %3, i64 2
  %122 = getelementptr inbounds %struct.TransDataMasking, ptr %4, i64 2, i32 5
  call void @copy_m3_m3(ptr noundef nonnull %122, ptr noundef nonnull %8) #18
  %123 = getelementptr inbounds %struct.TransDataMasking, ptr %4, i64 2, i32 6
  call void @copy_m3_m3(ptr noundef nonnull %123, ptr noundef nonnull %9) #18
  %124 = getelementptr inbounds [3 x [3 x float]], ptr %1, i64 0, i64 2
  call void @mul_v2_m3v2(ptr noundef nonnull %121, ptr noundef nonnull %8, ptr noundef nonnull %124) #18
  %125 = load float, ptr %6, align 4, !tbaa !82
  %126 = load float, ptr %121, align 8, !tbaa !82
  %127 = fmul fast float %126, %125
  store float %127, ptr %121, align 8, !tbaa !82
  %128 = load float, ptr %28, align 4, !tbaa !82
  %129 = getelementptr inbounds %struct.TransData2D, ptr %3, i64 2, i32 0, i64 1
  %130 = load float, ptr %129, align 4, !tbaa !82
  %131 = fmul fast float %130, %128
  store float %131, ptr %129, align 4, !tbaa !82
  %132 = getelementptr inbounds %struct.TransData2D, ptr %3, i64 2, i32 0, i64 2
  store float 0.000000e+00, ptr %132, align 8, !tbaa !82
  %133 = getelementptr inbounds %struct.TransData2D, ptr %3, i64 2, i32 1
  store ptr %124, ptr %133, align 8, !tbaa !178
  %134 = getelementptr inbounds %struct.TransData, ptr %2, i64 2, i32 16
  store i32 0, ptr %134, align 8, !tbaa !20
  %135 = getelementptr inbounds %struct.TransData, ptr %2, i64 2, i32 3
  store ptr %121, ptr %135, align 8, !tbaa !182
  %136 = getelementptr inbounds %struct.TransData, ptr %2, i64 2, i32 7
  call void @mul_v2_m3v2(ptr noundef nonnull %136, ptr noundef nonnull %8, ptr noundef nonnull %29) #18
  %137 = load float, ptr %6, align 4, !tbaa !82
  %138 = load float, ptr %136, align 4, !tbaa !82
  %139 = fmul fast float %138, %137
  store float %139, ptr %136, align 4, !tbaa !82
  %140 = load float, ptr %28, align 4, !tbaa !82
  %141 = getelementptr inbounds %struct.TransData, ptr %2, i64 2, i32 7, i64 1
  %142 = load float, ptr %141, align 4, !tbaa !82
  %143 = fmul fast float %142, %140
  store float %143, ptr %141, align 4, !tbaa !82
  %144 = getelementptr inbounds %struct.TransData, ptr %2, i64 2, i32 4
  %145 = load ptr, ptr %135, align 8, !tbaa !182
  %146 = load float, ptr %145, align 4, !tbaa !82
  store float %146, ptr %144, align 4, !tbaa !82
  %147 = getelementptr inbounds float, ptr %145, i64 1
  %148 = load float, ptr %147, align 4, !tbaa !82
  %149 = getelementptr inbounds %struct.TransData, ptr %2, i64 2, i32 4, i64 1
  store float %148, ptr %149, align 4, !tbaa !82
  %150 = getelementptr inbounds float, ptr %145, i64 2
  %151 = load float, ptr %150, align 4, !tbaa !82
  %152 = getelementptr inbounds %struct.TransData, ptr %2, i64 2, i32 4, i64 2
  store float %151, ptr %152, align 4, !tbaa !82
  %153 = getelementptr inbounds %struct.TransData, ptr %2, i64 2, i32 10
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(36) %153, i8 0, i64 32, i1 false)
  %154 = getelementptr inbounds %struct.TransData, ptr %2, i64 2, i32 10, i64 2, i64 2
  store float 1.000000e+00, ptr %154, align 8, !tbaa !82
  %155 = getelementptr inbounds %struct.TransData, ptr %2, i64 2, i32 13
  store ptr null, ptr %155, align 8, !tbaa !334
  %156 = getelementptr inbounds %struct.TransData, ptr %2, i64 2, i32 5
  store ptr null, ptr %156, align 8
  br i1 %31, label %160, label %157

157:                                              ; preds = %117
  %158 = load i32, ptr %134, align 8, !tbaa !20
  %159 = or i32 %158, 1
  store i32 %159, ptr %134, align 8, !tbaa !20
  br label %160

160:                                              ; preds = %157, %117
  store float 0.000000e+00, ptr %120, align 8, !tbaa !25
  %161 = getelementptr inbounds %struct.TransData, ptr %2, i64 2, i32 8
  call void @unit_m3(ptr noundef nonnull %161) #18
  %162 = getelementptr inbounds %struct.TransData, ptr %2, i64 2, i32 9
  call void @unit_m3(ptr noundef nonnull %162) #18
  %163 = load i8, ptr %32, align 2, !tbaa !480
  %164 = getelementptr inbounds %struct.TransDataMasking, ptr %4, i64 2, i32 7
  store i8 %163, ptr %164, align 8, !tbaa !395
  br label %196

165:                                              ; preds = %7
  %166 = call i32 @BKE_mask_point_handles_mode_get(ptr noundef nonnull %1) #18
  %167 = icmp eq i32 %166, 1
  br i1 %167, label %168, label %169

168:                                              ; preds = %165
  call fastcc void @MaskHandleToTransData(ptr noundef nonnull %1, i32 noundef 1, ptr noundef %2, ptr noundef %3, ptr noundef %4, ptr noundef %6, ptr noundef nonnull %8, ptr noundef nonnull %9)
  br label %196

169:                                              ; preds = %165
  %170 = load i8, ptr %13, align 1, !tbaa !341
  %171 = and i8 %170, 1
  %172 = icmp eq i8 %171, 0
  br i1 %172, label %183, label %173

173:                                              ; preds = %169
  call fastcc void @MaskHandleToTransData(ptr noundef nonnull %1, i32 noundef 2, ptr noundef %2, ptr noundef %3, ptr noundef %4, ptr noundef %6, ptr noundef nonnull %8, ptr noundef nonnull %9)
  %174 = getelementptr inbounds %struct.BezTriple, ptr %1, i64 0, i32 5
  %175 = load i8, ptr %174, align 1, !tbaa !477
  switch i8 %175, label %179 [
    i8 2, label %176
    i8 1, label %177
  ]

176:                                              ; preds = %173
  store i8 0, ptr %174, align 1, !tbaa !477
  br label %179

177:                                              ; preds = %173
  store i8 5, ptr %174, align 1, !tbaa !477
  %178 = getelementptr inbounds %struct.BezTriple, ptr %1, i64 0, i32 6
  store i8 5, ptr %178, align 2, !tbaa !480
  br label %179

179:                                              ; preds = %173, %177, %176
  %180 = getelementptr inbounds %struct.TransData, ptr %2, i64 1
  %181 = getelementptr inbounds %struct.TransData2D, ptr %3, i64 1
  %182 = getelementptr inbounds %struct.TransDataMasking, ptr %4, i64 1
  br label %183

183:                                              ; preds = %179, %169
  %184 = phi ptr [ %182, %179 ], [ %4, %169 ]
  %185 = phi ptr [ %181, %179 ], [ %3, %169 ]
  %186 = phi ptr [ %180, %179 ], [ %2, %169 ]
  %187 = load i8, ptr %15, align 1, !tbaa !342
  %188 = and i8 %187, 1
  %189 = icmp eq i8 %188, 0
  br i1 %189, label %196, label %190

190:                                              ; preds = %183
  call fastcc void @MaskHandleToTransData(ptr noundef nonnull %1, i32 noundef 3, ptr noundef %186, ptr noundef %185, ptr noundef %184, ptr noundef %6, ptr noundef nonnull %8, ptr noundef nonnull %9)
  %191 = getelementptr inbounds %struct.BezTriple, ptr %1, i64 0, i32 6
  %192 = load i8, ptr %191, align 2, !tbaa !480
  switch i8 %192, label %196 [
    i8 2, label %193
    i8 1, label %194
  ]

193:                                              ; preds = %190
  store i8 0, ptr %191, align 2, !tbaa !480
  br label %196

194:                                              ; preds = %190
  %195 = getelementptr inbounds %struct.BezTriple, ptr %1, i64 0, i32 5
  store i8 5, ptr %195, align 1, !tbaa !477
  store i8 5, ptr %191, align 2, !tbaa !480
  br label %196

196:                                              ; preds = %160, %193, %194, %190, %168, %183
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %9) #18
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %8) #18
  ret void
}

declare void @BKE_mask_point_parent_matrix_get(ptr noundef, float noundef nofpclass(nan inf), ptr noundef) local_unnamed_addr #7

declare void @mul_v2_m3v2(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #7

declare void @unit_m3(ptr noundef) local_unnamed_addr #7

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @MaskHandleToTransData(ptr noundef %0, i32 noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4, ptr nocapture noundef readonly %5, ptr noundef %6, ptr noundef %7) unnamed_addr #6 {
  %9 = getelementptr inbounds %struct.BezTriple, ptr %0, i64 0, i32 7
  %10 = load i8, ptr %9, align 1, !tbaa !506
  %11 = getelementptr inbounds %struct.BezTriple, ptr %0, i64 0, i32 8
  %12 = load i8, ptr %11, align 4, !tbaa !507
  %13 = or i8 %12, %10
  %14 = getelementptr inbounds %struct.BezTriple, ptr %0, i64 0, i32 9
  %15 = load i8, ptr %14, align 1, !tbaa !508
  %16 = or i8 %13, %15
  %17 = and i8 %16, 1
  %18 = getelementptr inbounds %struct.TransDataMasking, ptr %4, i64 0, i32 4
  store ptr %0, ptr %18, align 8, !tbaa !393
  %19 = getelementptr inbounds %struct.TransDataMasking, ptr %4, i64 0, i32 3
  tail call void @copy_m3_m3(ptr noundef nonnull %19, ptr noundef %0) #18
  store i8 1, ptr %4, align 8, !tbaa !391
  %20 = getelementptr inbounds %struct.TransDataMasking, ptr %4, i64 0, i32 5
  tail call void @copy_m3_m3(ptr noundef nonnull %20, ptr noundef %6) #18
  %21 = getelementptr inbounds %struct.TransDataMasking, ptr %4, i64 0, i32 6
  tail call void @copy_m3_m3(ptr noundef nonnull %21, ptr noundef %7) #18
  %22 = getelementptr inbounds %struct.TransDataMasking, ptr %4, i64 0, i32 1
  tail call void @BKE_mask_point_handle(ptr noundef %0, i32 noundef %1, ptr noundef nonnull %22) #18
  %23 = getelementptr inbounds %struct.TransDataMasking, ptr %4, i64 0, i32 8
  store i32 %1, ptr %23, align 4, !tbaa !394
  %24 = getelementptr inbounds %struct.TransDataMasking, ptr %4, i64 0, i32 2
  %25 = load <2 x float>, ptr %22, align 4, !tbaa !82
  store <2 x float> %25, ptr %24, align 4, !tbaa !82
  tail call void @mul_v2_m3v2(ptr noundef %3, ptr noundef %6, ptr noundef nonnull %22) #18
  %26 = load float, ptr %5, align 4, !tbaa !82
  %27 = load float, ptr %3, align 8, !tbaa !82
  %28 = fmul fast float %27, %26
  store float %28, ptr %3, align 8, !tbaa !82
  %29 = getelementptr inbounds float, ptr %5, i64 1
  %30 = load float, ptr %29, align 4, !tbaa !82
  %31 = getelementptr inbounds [3 x float], ptr %3, i64 0, i64 1
  %32 = load float, ptr %31, align 4, !tbaa !82
  %33 = fmul fast float %32, %30
  store float %33, ptr %31, align 4, !tbaa !82
  %34 = getelementptr inbounds [3 x float], ptr %3, i64 0, i64 2
  store float 0.000000e+00, ptr %34, align 8, !tbaa !82
  %35 = getelementptr inbounds %struct.TransData2D, ptr %3, i64 0, i32 1
  store ptr %22, ptr %35, align 8, !tbaa !178
  %36 = getelementptr inbounds %struct.TransData, ptr %2, i64 0, i32 16
  store i32 0, ptr %36, align 8, !tbaa !20
  %37 = getelementptr inbounds %struct.TransData, ptr %2, i64 0, i32 3
  store ptr %3, ptr %37, align 8, !tbaa !182
  %38 = getelementptr inbounds %struct.TransData, ptr %2, i64 0, i32 7
  %39 = getelementptr inbounds [3 x [3 x float]], ptr %0, i64 0, i64 1
  tail call void @mul_v2_m3v2(ptr noundef nonnull %38, ptr noundef %6, ptr noundef nonnull %39) #18
  %40 = load float, ptr %5, align 4, !tbaa !82
  %41 = load float, ptr %38, align 4, !tbaa !82
  %42 = fmul fast float %41, %40
  store float %42, ptr %38, align 4, !tbaa !82
  %43 = load float, ptr %29, align 4, !tbaa !82
  %44 = getelementptr inbounds %struct.TransData, ptr %2, i64 0, i32 7, i64 1
  %45 = load float, ptr %44, align 4, !tbaa !82
  %46 = fmul fast float %45, %43
  store float %46, ptr %44, align 4, !tbaa !82
  %47 = getelementptr inbounds %struct.TransData, ptr %2, i64 0, i32 4
  %48 = load ptr, ptr %37, align 8, !tbaa !182
  %49 = load float, ptr %48, align 4, !tbaa !82
  store float %49, ptr %47, align 4, !tbaa !82
  %50 = getelementptr inbounds float, ptr %48, i64 1
  %51 = load float, ptr %50, align 4, !tbaa !82
  %52 = getelementptr inbounds %struct.TransData, ptr %2, i64 0, i32 4, i64 1
  store float %51, ptr %52, align 4, !tbaa !82
  %53 = getelementptr inbounds float, ptr %48, i64 2
  %54 = load float, ptr %53, align 4, !tbaa !82
  %55 = getelementptr inbounds %struct.TransData, ptr %2, i64 0, i32 4, i64 2
  store float %54, ptr %55, align 4, !tbaa !82
  %56 = getelementptr inbounds %struct.TransData, ptr %2, i64 0, i32 10
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(36) %56, i8 0, i64 32, i1 false)
  %57 = getelementptr inbounds %struct.TransData, ptr %2, i64 0, i32 10, i64 2, i64 2
  store float 1.000000e+00, ptr %57, align 8, !tbaa !82
  %58 = getelementptr inbounds %struct.TransData, ptr %2, i64 0, i32 13
  store ptr null, ptr %58, align 8, !tbaa !334
  %59 = getelementptr inbounds %struct.TransData, ptr %2, i64 0, i32 5
  store ptr null, ptr %59, align 8, !tbaa !423
  %60 = icmp eq i8 %17, 0
  br i1 %60, label %64, label %61

61:                                               ; preds = %8
  %62 = load i32, ptr %36, align 8, !tbaa !20
  %63 = or i32 %62, 1
  store i32 %63, ptr %36, align 8, !tbaa !20
  br label %64

64:                                               ; preds = %61, %8
  store float 0.000000e+00, ptr %2, align 8, !tbaa !25
  %65 = getelementptr inbounds %struct.TransData, ptr %2, i64 0, i32 8
  tail call void @unit_m3(ptr noundef nonnull %65) #18
  %66 = getelementptr inbounds %struct.TransData, ptr %2, i64 0, i32 9
  tail call void @unit_m3(ptr noundef nonnull %66) #18
  switch i32 %1, label %75 [
    i32 2, label %67
    i32 3, label %69
  ]

67:                                               ; preds = %64
  %68 = getelementptr inbounds %struct.BezTriple, ptr %0, i64 0, i32 5
  br label %71

69:                                               ; preds = %64
  %70 = getelementptr inbounds %struct.BezTriple, ptr %0, i64 0, i32 6
  br label %71

71:                                               ; preds = %67, %69
  %72 = phi ptr [ %70, %69 ], [ %68, %67 ]
  %73 = load i8, ptr %72, align 1, !tbaa !51
  %74 = getelementptr inbounds %struct.TransDataMasking, ptr %4, i64 0, i32 7
  store i8 %73, ptr %74, align 8, !tbaa !395
  br label %75

75:                                               ; preds = %71, %64
  ret void
}

declare void @BKE_mask_point_handle(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #7

declare ptr @BKE_paint_get_active_from_context(ptr noundef) local_unnamed_addr #7

declare ptr @CTX_wm_space_image(ptr noundef) local_unnamed_addr #7

declare ptr @CTX_data_edit_image(ptr noundef) local_unnamed_addr #7

declare ptr @CTX_data_tool_settings(ptr noundef) local_unnamed_addr #7

declare zeroext i8 @ED_space_image_show_uvedit(ptr noundef, ptr noundef) local_unnamed_addr #7

declare ptr @BM_uv_element_map_create(ptr noundef, i8 noundef zeroext, i8 noundef zeroext) local_unnamed_addr #7

declare ptr @CustomData_bmesh_get(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #7

declare zeroext i8 @uvedit_face_visible_test(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #7

declare zeroext i8 @uvedit_uv_select_test(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #7

declare ptr @BM_uv_element_get(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #7

declare void @BM_uv_element_map_free(ptr noundef) local_unnamed_addr #7

declare void @ED_uvedit_live_unwrap_begin(ptr noundef, ptr noundef) local_unnamed_addr #7

declare void @UI_view2d_region_to_view(ptr noundef, float noundef nofpclass(nan inf), float noundef nofpclass(nan inf), ptr noundef, ptr noundef) local_unnamed_addr #7

declare void @BKE_nlastrips_make_metas(ptr noundef, i8 noundef zeroext) local_unnamed_addr #7

declare i32 @BLI_findindex(ptr noundef, ptr noundef) local_unnamed_addr #7

declare ptr @UI_view2d_fromcontext(ptr noundef) local_unnamed_addr #7

; Function Attrs: nounwind sspstrong uwtable
define internal void @freeSeqData(ptr nocapture noundef %0) #6 {
  %2 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 56
  %3 = load ptr, ptr %2, align 8, !tbaa !89
  %4 = tail call ptr @BKE_sequencer_editing_get(ptr noundef %3, i8 noundef zeroext 0) #18
  %5 = icmp eq ptr %4, null
  br i1 %5, label %298, label %6

6:                                                ; preds = %1
  %7 = load ptr, ptr %4, align 8, !tbaa !149
  %8 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 10
  %9 = load ptr, ptr %8, align 8, !tbaa !19
  %10 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 3
  %11 = load i16, ptr %10, align 4, !tbaa !181
  %12 = icmp eq i16 %11, 3
  %13 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 9
  %14 = load i32, ptr %13, align 8, !tbaa !5
  %15 = icmp sgt i32 %14, 0
  br i1 %12, label %17, label %16

16:                                               ; preds = %6
  br i1 %15, label %18, label %226

17:                                               ; preds = %6
  br i1 %15, label %269, label %298

18:                                               ; preds = %16, %38
  %19 = phi ptr [ %24, %38 ], [ null, %16 ]
  %20 = phi i32 [ %39, %38 ], [ 0, %16 ]
  %21 = phi ptr [ %40, %38 ], [ %9, %16 ]
  %22 = getelementptr inbounds %struct.TransData, ptr %21, i64 0, i32 15
  %23 = load ptr, ptr %22, align 8, !tbaa !144
  %24 = load ptr, ptr %23, align 8, !tbaa !151
  %25 = icmp eq ptr %24, %19
  br i1 %25, label %38, label %26

26:                                               ; preds = %18
  %27 = getelementptr inbounds %struct.Sequence, ptr %24, i64 0, i32 14
  %28 = load i32, ptr %27, align 4, !tbaa !156
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %38

30:                                               ; preds = %26
  %31 = getelementptr inbounds %struct.Sequence, ptr %24, i64 0, i32 5
  %32 = load i32, ptr %31, align 8, !tbaa !163
  %33 = and i32 %32, 8
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %38, label %35

35:                                               ; preds = %30
  %36 = load ptr, ptr %7, align 8, !tbaa !33
  %37 = icmp eq ptr %36, null
  br i1 %37, label %47, label %42

38:                                               ; preds = %30, %26, %18
  %39 = add nuw nsw i32 %20, 1
  %40 = getelementptr inbounds %struct.TransData, ptr %21, i64 1
  %41 = icmp eq i32 %39, %14
  br i1 %41, label %226, label %18, !llvm.loop !686

42:                                               ; preds = %35, %42
  %43 = phi ptr [ %45, %42 ], [ %36, %35 ]
  %44 = getelementptr inbounds %struct.Sequence, ptr %43, i64 0, i32 2
  store ptr null, ptr %44, align 8, !tbaa !687
  %45 = load ptr, ptr %43, align 8, !tbaa !33
  %46 = icmp eq ptr %45, null
  br i1 %46, label %47, label %42, !llvm.loop !688

47:                                               ; preds = %42, %35
  br label %48

48:                                               ; preds = %47, %67
  %49 = phi i8 [ %68, %67 ], [ 0, %47 ]
  %50 = phi i32 [ %69, %67 ], [ 0, %47 ]
  %51 = phi ptr [ %70, %67 ], [ %9, %47 ]
  %52 = getelementptr inbounds %struct.TransData, ptr %51, i64 0, i32 15
  %53 = load ptr, ptr %52, align 8, !tbaa !144
  %54 = load ptr, ptr %53, align 8, !tbaa !151
  %55 = icmp eq ptr %54, null
  br i1 %55, label %67, label %56

56:                                               ; preds = %48
  %57 = getelementptr inbounds %struct.Sequence, ptr %54, i64 0, i32 6
  %58 = load i32, ptr %57, align 4, !tbaa !162
  %59 = and i32 %58, 8
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %65, label %61

61:                                               ; preds = %56
  %62 = getelementptr inbounds %struct.Sequence, ptr %54, i64 0, i32 33
  %63 = load ptr, ptr %62, align 8, !tbaa !165
  %64 = icmp eq ptr %63, null
  br i1 %64, label %65, label %67

65:                                               ; preds = %61, %56
  %66 = getelementptr inbounds %struct.Sequence, ptr %54, i64 0, i32 2
  store ptr inttoptr (i64 1 to ptr), ptr %66, align 8, !tbaa !687
  br label %67

67:                                               ; preds = %61, %48, %65
  %68 = phi i8 [ %49, %65 ], [ %49, %48 ], [ 1, %61 ]
  %69 = add nuw nsw i32 %50, 1
  %70 = getelementptr inbounds %struct.TransData, ptr %51, i64 1
  %71 = icmp eq i32 %69, %14
  br i1 %71, label %72, label %48, !llvm.loop !689

72:                                               ; preds = %67
  %73 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 1
  %74 = load i32, ptr %73, align 4, !tbaa !24
  %75 = and i32 %74, 16777216
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %161, label %77

77:                                               ; preds = %72
  %78 = and i32 %14, 1
  %79 = icmp eq i32 %14, 1
  br i1 %79, label %82, label %80

80:                                               ; preds = %77
  %81 = and i32 %14, -2
  br label %100

82:                                               ; preds = %122, %77
  %83 = phi i32 [ undef, %77 ], [ %123, %122 ]
  %84 = phi i32 [ 300000, %77 ], [ %123, %122 ]
  %85 = phi ptr [ %9, %77 ], [ %124, %122 ]
  %86 = icmp eq i32 %78, 0
  br i1 %86, label %96, label %87

87:                                               ; preds = %82
  %88 = getelementptr inbounds %struct.TransData, ptr %85, i64 0, i32 15
  %89 = load ptr, ptr %88, align 8, !tbaa !144
  %90 = load ptr, ptr %89, align 8, !tbaa !151
  %91 = icmp eq ptr %90, null
  br i1 %91, label %96, label %92

92:                                               ; preds = %87
  %93 = getelementptr inbounds %struct.Sequence, ptr %90, i64 0, i32 15
  %94 = load i32, ptr %93, align 8, !tbaa !690
  %95 = tail call i32 @llvm.smin.i32(i32 %84, i32 %94)
  br label %96

96:                                               ; preds = %87, %92, %82
  %97 = phi i32 [ %83, %82 ], [ %95, %92 ], [ %84, %87 ]
  %98 = load ptr, ptr %7, align 8, !tbaa !33
  %99 = icmp eq ptr %98, null
  br i1 %99, label %144, label %127

100:                                              ; preds = %122, %80
  %101 = phi i32 [ 300000, %80 ], [ %123, %122 ]
  %102 = phi ptr [ %9, %80 ], [ %124, %122 ]
  %103 = phi i32 [ 0, %80 ], [ %125, %122 ]
  %104 = getelementptr inbounds %struct.TransData, ptr %102, i64 0, i32 15
  %105 = load ptr, ptr %104, align 8, !tbaa !144
  %106 = load ptr, ptr %105, align 8, !tbaa !151
  %107 = icmp eq ptr %106, null
  br i1 %107, label %112, label %108

108:                                              ; preds = %100
  %109 = getelementptr inbounds %struct.Sequence, ptr %106, i64 0, i32 15
  %110 = load i32, ptr %109, align 8, !tbaa !690
  %111 = tail call i32 @llvm.smin.i32(i32 %101, i32 %110)
  br label %112

112:                                              ; preds = %100, %108
  %113 = phi i32 [ %111, %108 ], [ %101, %100 ]
  %114 = getelementptr inbounds %struct.TransData, ptr %102, i64 1, i32 15
  %115 = load ptr, ptr %114, align 8, !tbaa !144
  %116 = load ptr, ptr %115, align 8, !tbaa !151
  %117 = icmp eq ptr %116, null
  br i1 %117, label %122, label %118

118:                                              ; preds = %112
  %119 = getelementptr inbounds %struct.Sequence, ptr %116, i64 0, i32 15
  %120 = load i32, ptr %119, align 8, !tbaa !690
  %121 = tail call i32 @llvm.smin.i32(i32 %113, i32 %120)
  br label %122

122:                                              ; preds = %118, %112
  %123 = phi i32 [ %121, %118 ], [ %113, %112 ]
  %124 = getelementptr inbounds %struct.TransData, ptr %102, i64 2
  %125 = add i32 %103, 2
  %126 = icmp eq i32 %125, %81
  br i1 %126, label %82, label %100, !llvm.loop !691

127:                                              ; preds = %96, %141
  %128 = phi ptr [ %142, %141 ], [ %98, %96 ]
  %129 = getelementptr inbounds %struct.Sequence, ptr %128, i64 0, i32 5
  %130 = load i32, ptr %129, align 8, !tbaa !163
  %131 = and i32 %130, 1
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %133, label %141

133:                                              ; preds = %127
  %134 = getelementptr inbounds %struct.Sequence, ptr %128, i64 0, i32 15
  %135 = load i32, ptr %134, align 8, !tbaa !690
  %136 = icmp slt i32 %135, %97
  br i1 %136, label %141, label %137

137:                                              ; preds = %133
  %138 = getelementptr inbounds %struct.Sequence, ptr %128, i64 0, i32 13
  %139 = load i32, ptr %138, align 8, !tbaa !158
  %140 = add nsw i32 %139, 64
  store i32 %140, ptr %138, align 8, !tbaa !158
  br label %141

141:                                              ; preds = %127, %137, %133
  %142 = load ptr, ptr %128, align 8, !tbaa !33
  %143 = icmp eq ptr %142, null
  br i1 %143, label %144, label %127, !llvm.loop !692

144:                                              ; preds = %141, %96
  %145 = load ptr, ptr %2, align 8, !tbaa !89
  %146 = tail call zeroext i8 @BKE_sequence_base_shuffle_time(ptr noundef nonnull %7, ptr noundef %145) #18
  %147 = load ptr, ptr %7, align 8, !tbaa !33
  %148 = icmp eq ptr %147, null
  br i1 %148, label %161, label %149

149:                                              ; preds = %144, %156
  %150 = phi ptr [ %159, %156 ], [ %147, %144 ]
  %151 = getelementptr inbounds %struct.Sequence, ptr %150, i64 0, i32 13
  %152 = load i32, ptr %151, align 8, !tbaa !158
  %153 = icmp sgt i32 %152, 63
  br i1 %153, label %154, label %156

154:                                              ; preds = %149
  %155 = add nsw i32 %152, -64
  store i32 %155, ptr %151, align 8, !tbaa !158
  br label %156

156:                                              ; preds = %149, %154
  %157 = phi ptr [ inttoptr (i64 1 to ptr), %154 ], [ null, %149 ]
  %158 = getelementptr inbounds %struct.Sequence, ptr %150, i64 0, i32 2
  store ptr %157, ptr %158, align 8
  %159 = load ptr, ptr %150, align 8, !tbaa !33
  %160 = icmp eq ptr %159, null
  br i1 %160, label %161, label %149, !llvm.loop !693

161:                                              ; preds = %156, %72, %144
  %162 = load ptr, ptr %2, align 8, !tbaa !89
  %163 = tail call zeroext i8 @BKE_sequence_base_shuffle_time(ptr noundef nonnull %7, ptr noundef %162) #18
  %164 = icmp eq i8 %68, 0
  br i1 %164, label %226, label %165

165:                                              ; preds = %161
  %166 = load i32, ptr %13, align 8, !tbaa !5
  %167 = icmp sgt i32 %166, 0
  br i1 %167, label %168, label %226

168:                                              ; preds = %165
  %169 = load ptr, ptr %8, align 8, !tbaa !19
  br label %170

170:                                              ; preds = %168, %190
  %171 = phi i32 [ %191, %190 ], [ %166, %168 ]
  %172 = phi i32 [ %192, %190 ], [ 0, %168 ]
  %173 = phi ptr [ %193, %190 ], [ %169, %168 ]
  %174 = getelementptr inbounds %struct.TransData, ptr %173, i64 0, i32 15
  %175 = load ptr, ptr %174, align 8, !tbaa !144
  %176 = load ptr, ptr %175, align 8, !tbaa !151
  %177 = icmp eq ptr %176, null
  br i1 %177, label %190, label %178

178:                                              ; preds = %170
  %179 = getelementptr inbounds %struct.Sequence, ptr %176, i64 0, i32 6
  %180 = load i32, ptr %179, align 4, !tbaa !162
  %181 = and i32 %180, 8
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %190, label %183

183:                                              ; preds = %178
  %184 = getelementptr inbounds %struct.Sequence, ptr %176, i64 0, i32 33
  %185 = load ptr, ptr %184, align 8, !tbaa !165
  %186 = icmp eq ptr %185, null
  br i1 %186, label %190, label %187

187:                                              ; preds = %183
  %188 = load ptr, ptr %2, align 8, !tbaa !89
  tail call void @BKE_sequence_calc(ptr noundef %188, ptr noundef nonnull %176) #18
  %189 = load i32, ptr %13, align 8, !tbaa !5
  br label %190

190:                                              ; preds = %170, %187, %183, %178
  %191 = phi i32 [ %171, %170 ], [ %189, %187 ], [ %171, %183 ], [ %171, %178 ]
  %192 = add nuw nsw i32 %172, 1
  %193 = getelementptr inbounds %struct.TransData, ptr %173, i64 1
  %194 = icmp slt i32 %192, %191
  br i1 %194, label %170, label %195, !llvm.loop !694

195:                                              ; preds = %190
  %196 = icmp sgt i32 %191, 0
  br i1 %196, label %197, label %226

197:                                              ; preds = %195
  %198 = load ptr, ptr %8, align 8, !tbaa !19
  br label %199

199:                                              ; preds = %197, %221
  %200 = phi i32 [ %222, %221 ], [ 0, %197 ]
  %201 = phi ptr [ %223, %221 ], [ %198, %197 ]
  %202 = getelementptr inbounds %struct.TransData, ptr %201, i64 0, i32 15
  %203 = load ptr, ptr %202, align 8, !tbaa !144
  %204 = load ptr, ptr %203, align 8, !tbaa !151
  %205 = icmp eq ptr %204, null
  br i1 %205, label %221, label %206

206:                                              ; preds = %199
  %207 = getelementptr inbounds %struct.Sequence, ptr %204, i64 0, i32 6
  %208 = load i32, ptr %207, align 4, !tbaa !162
  %209 = and i32 %208, 8
  %210 = icmp eq i32 %209, 0
  br i1 %210, label %221, label %211

211:                                              ; preds = %206
  %212 = getelementptr inbounds %struct.Sequence, ptr %204, i64 0, i32 33
  %213 = load ptr, ptr %212, align 8, !tbaa !165
  %214 = icmp eq ptr %213, null
  br i1 %214, label %221, label %215

215:                                              ; preds = %211
  %216 = tail call zeroext i8 @BKE_sequence_test_overlap(ptr noundef nonnull %7, ptr noundef nonnull %204) #18
  %217 = icmp eq i8 %216, 0
  br i1 %217, label %221, label %218

218:                                              ; preds = %215
  %219 = load ptr, ptr %2, align 8, !tbaa !89
  %220 = tail call zeroext i8 @BKE_sequence_base_shuffle(ptr noundef nonnull %7, ptr noundef nonnull %204, ptr noundef %219) #18
  br label %221

221:                                              ; preds = %199, %215, %218, %211, %206
  %222 = add nuw nsw i32 %200, 1
  %223 = getelementptr inbounds %struct.TransData, ptr %201, i64 1
  %224 = load i32, ptr %13, align 8, !tbaa !5
  %225 = icmp slt i32 %222, %224
  br i1 %225, label %199, label %226, !llvm.loop !695

226:                                              ; preds = %38, %221, %165, %16, %195, %161
  %227 = load ptr, ptr %7, align 8, !tbaa !33
  %228 = icmp eq ptr %227, null
  br i1 %228, label %267, label %229

229:                                              ; preds = %226, %264
  %230 = phi ptr [ %265, %264 ], [ %227, %226 ]
  %231 = getelementptr inbounds %struct.Sequence, ptr %230, i64 0, i32 6
  %232 = load i32, ptr %231, align 4, !tbaa !162
  %233 = and i32 %232, 8
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %264, label %235

235:                                              ; preds = %229
  %236 = getelementptr inbounds %struct.Sequence, ptr %230, i64 0, i32 33
  %237 = load ptr, ptr %236, align 8, !tbaa !165
  %238 = icmp eq ptr %237, null
  br i1 %238, label %244, label %239

239:                                              ; preds = %235
  %240 = getelementptr inbounds %struct.Sequence, ptr %237, i64 0, i32 5
  %241 = load i32, ptr %240, align 8, !tbaa !163
  %242 = and i32 %241, 1
  %243 = icmp eq i32 %242, 0
  br i1 %243, label %244, label %262

244:                                              ; preds = %239, %235
  %245 = getelementptr inbounds %struct.Sequence, ptr %230, i64 0, i32 34
  %246 = load ptr, ptr %245, align 8, !tbaa !166
  %247 = icmp eq ptr %246, null
  br i1 %247, label %253, label %248

248:                                              ; preds = %244
  %249 = getelementptr inbounds %struct.Sequence, ptr %246, i64 0, i32 5
  %250 = load i32, ptr %249, align 8, !tbaa !163
  %251 = and i32 %250, 1
  %252 = icmp eq i32 %251, 0
  br i1 %252, label %253, label %262

253:                                              ; preds = %248, %244
  %254 = getelementptr inbounds %struct.Sequence, ptr %230, i64 0, i32 35
  %255 = load ptr, ptr %254, align 8, !tbaa !167
  %256 = icmp eq ptr %255, null
  br i1 %256, label %264, label %257

257:                                              ; preds = %253
  %258 = getelementptr inbounds %struct.Sequence, ptr %255, i64 0, i32 5
  %259 = load i32, ptr %258, align 8, !tbaa !163
  %260 = and i32 %259, 1
  %261 = icmp eq i32 %260, 0
  br i1 %261, label %264, label %262

262:                                              ; preds = %257, %248, %239
  %263 = load ptr, ptr %2, align 8, !tbaa !89
  tail call void @BKE_sequence_calc(ptr noundef %263, ptr noundef nonnull %230) #18
  br label %264

264:                                              ; preds = %262, %229, %257, %253
  %265 = load ptr, ptr %230, align 8, !tbaa !33
  %266 = icmp eq ptr %265, null
  br i1 %266, label %267, label %229, !llvm.loop !696

267:                                              ; preds = %264, %226
  %268 = load ptr, ptr %2, align 8, !tbaa !89
  tail call void @BKE_sequencer_sort(ptr noundef %268) #18
  br label %298

269:                                              ; preds = %17, %293
  %270 = phi i32 [ %294, %293 ], [ %14, %17 ]
  %271 = phi ptr [ %276, %293 ], [ null, %17 ]
  %272 = phi i32 [ %295, %293 ], [ 0, %17 ]
  %273 = phi ptr [ %296, %293 ], [ %9, %17 ]
  %274 = getelementptr inbounds %struct.TransData, ptr %273, i64 0, i32 15
  %275 = load ptr, ptr %274, align 8, !tbaa !144
  %276 = load ptr, ptr %275, align 8, !tbaa !151
  %277 = icmp eq ptr %276, %271
  br i1 %277, label %293, label %278

278:                                              ; preds = %269
  %279 = getelementptr inbounds %struct.Sequence, ptr %276, i64 0, i32 14
  %280 = load i32, ptr %279, align 4, !tbaa !156
  %281 = icmp eq i32 %280, 0
  br i1 %281, label %282, label %293

282:                                              ; preds = %278
  %283 = getelementptr inbounds %struct.Sequence, ptr %276, i64 0, i32 5
  %284 = load i32, ptr %283, align 8, !tbaa !163
  %285 = and i32 %284, 8
  %286 = icmp eq i32 %285, 0
  br i1 %286, label %290, label %287

287:                                              ; preds = %282
  %288 = load ptr, ptr %2, align 8, !tbaa !89
  %289 = tail call zeroext i8 @BKE_sequence_base_shuffle(ptr noundef %7, ptr noundef nonnull %276, ptr noundef %288) #18
  br label %290

290:                                              ; preds = %287, %282
  %291 = load ptr, ptr %2, align 8, !tbaa !89
  tail call void @BKE_sequence_calc_disp(ptr noundef %291, ptr noundef nonnull %276) #18
  %292 = load i32, ptr %13, align 8, !tbaa !5
  br label %293

293:                                              ; preds = %290, %278, %269
  %294 = phi i32 [ %292, %290 ], [ %270, %278 ], [ %270, %269 ]
  %295 = add nuw nsw i32 %272, 1
  %296 = getelementptr inbounds %struct.TransData, ptr %273, i64 1
  %297 = icmp slt i32 %295, %294
  br i1 %297, label %269, label %298, !llvm.loop !697

298:                                              ; preds = %293, %17, %267, %1
  %299 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 40
  %300 = load ptr, ptr %299, align 8, !tbaa !66
  %301 = icmp eq ptr %300, null
  br i1 %301, label %309, label %302

302:                                              ; preds = %298
  %303 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 1
  %304 = load i32, ptr %303, align 4, !tbaa !24
  %305 = and i32 %304, 131072
  %306 = icmp eq i32 %305, 0
  br i1 %306, label %309, label %307

307:                                              ; preds = %302
  %308 = load ptr, ptr @MEM_freeN, align 8, !tbaa !33
  tail call void %308(ptr noundef nonnull %300) #18
  store ptr null, ptr %299, align 8, !tbaa !66
  br label %309

309:                                              ; preds = %307, %302, %298
  %310 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 10
  %311 = load ptr, ptr %310, align 8, !tbaa !19
  %312 = icmp eq ptr %311, null
  br i1 %312, label %315, label %313

313:                                              ; preds = %309
  %314 = load ptr, ptr @MEM_freeN, align 8, !tbaa !33
  tail call void %314(ptr noundef nonnull %311) #18
  store ptr null, ptr %310, align 8, !tbaa !19
  br label %315

315:                                              ; preds = %313, %309
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc i32 @SeqTransCount(ptr nocapture noundef %0, ptr noundef %1, ptr nocapture noundef readonly %2, i32 noundef %3) unnamed_addr #6 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %5) #18
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #18
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #18
  %8 = load ptr, ptr %2, align 8, !tbaa !33
  %9 = icmp eq ptr %8, null
  br i1 %9, label %29, label %10

10:                                               ; preds = %4
  %11 = add nsw i32 %3, 1
  br label %12

12:                                               ; preds = %10, %25
  %13 = phi ptr [ %8, %10 ], [ %27, %25 ]
  %14 = phi i32 [ 0, %10 ], [ %26, %25 ]
  %15 = getelementptr inbounds %struct.Sequence, ptr %13, i64 0, i32 14
  store i32 %3, ptr %15, align 4, !tbaa !156
  %16 = getelementptr inbounds %struct.Sequence, ptr %13, i64 0, i32 2
  store ptr %1, ptr %16, align 8, !tbaa !687
  call fastcc void @SeqTransInfo(ptr noundef %0, ptr noundef nonnull %13, ptr noundef nonnull %5, ptr noundef nonnull %6, ptr noundef nonnull %7)
  %17 = load i32, ptr %6, align 4, !tbaa !27
  %18 = add nsw i32 %17, %14
  %19 = load i32, ptr %5, align 4, !tbaa !27
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %25, label %21

21:                                               ; preds = %12
  %22 = getelementptr inbounds %struct.Sequence, ptr %13, i64 0, i32 36
  %23 = tail call fastcc i32 @SeqTransCount(ptr noundef %0, ptr noundef nonnull %13, ptr noundef nonnull %22, i32 noundef %11)
  %24 = add nsw i32 %23, %18
  br label %25

25:                                               ; preds = %12, %21
  %26 = phi i32 [ %24, %21 ], [ %18, %12 ]
  %27 = load ptr, ptr %13, align 8, !tbaa !33
  %28 = icmp eq ptr %27, null
  br i1 %28, label %29, label %12, !llvm.loop !698

29:                                               ; preds = %25, %4
  %30 = phi i32 [ 0, %4 ], [ %26, %25 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #18
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #18
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %5) #18
  ret i32 %30
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc i32 @SeqToTransData_Recursive(ptr nocapture noundef %0, ptr nocapture noundef readonly %1, ptr noundef %2, ptr noundef %3, ptr noundef %4) unnamed_addr #6 {
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %6) #18
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %7) #18
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #18
  %9 = load ptr, ptr %1, align 8, !tbaa !33
  %10 = icmp eq ptr %9, null
  br i1 %10, label %169, label %11

11:                                               ; preds = %5, %162
  %12 = phi ptr [ %167, %162 ], [ %9, %5 ]
  %13 = phi ptr [ %166, %162 ], [ %2, %5 ]
  %14 = phi i32 [ %165, %162 ], [ 0, %5 ]
  %15 = phi ptr [ %164, %162 ], [ %4, %5 ]
  %16 = phi ptr [ %163, %162 ], [ %3, %5 ]
  call fastcc void @SeqTransInfo(ptr noundef %0, ptr noundef nonnull %12, ptr noundef nonnull %6, ptr noundef nonnull %7, ptr noundef nonnull %8)
  %17 = load i32, ptr %6, align 4, !tbaa !27
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %27, label %19

19:                                               ; preds = %11
  %20 = getelementptr inbounds %struct.Sequence, ptr %12, i64 0, i32 36
  %21 = tail call fastcc i32 @SeqToTransData_Recursive(ptr noundef %0, ptr noundef nonnull %20, ptr noundef %13, ptr noundef %16, ptr noundef %15)
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds %struct.TransData, ptr %13, i64 %22
  %24 = getelementptr inbounds %struct.TransData2D, ptr %16, i64 %22
  %25 = getelementptr inbounds %struct.TransDataSeq, ptr %15, i64 %22
  %26 = add nsw i32 %21, %14
  br label %27

27:                                               ; preds = %19, %11
  %28 = phi ptr [ %24, %19 ], [ %16, %11 ]
  %29 = phi ptr [ %25, %19 ], [ %15, %11 ]
  %30 = phi i32 [ %26, %19 ], [ %14, %11 ]
  %31 = phi ptr [ %23, %19 ], [ %13, %11 ]
  %32 = load i32, ptr %8, align 4, !tbaa !27
  %33 = and i32 %32, 1
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %162, label %35

35:                                               ; preds = %27
  %36 = and i32 %32, 6
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %116, label %38

38:                                               ; preds = %35
  %39 = and i32 %32, 2
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %78, label %41

41:                                               ; preds = %38
  %42 = getelementptr inbounds %struct.TransData, ptr %31, i64 1
  %43 = getelementptr inbounds %struct.TransData2D, ptr %28, i64 1
  %44 = getelementptr inbounds %struct.TransDataSeq, ptr %29, i64 1
  %45 = tail call i32 @BKE_sequence_tx_get_final_left(ptr noundef nonnull %12, i8 noundef zeroext 0) #18
  %46 = sitofp i32 %45 to float
  store float %46, ptr %28, align 8, !tbaa !82
  %47 = getelementptr inbounds %struct.Sequence, ptr %12, i64 0, i32 13
  %48 = load i32, ptr %47, align 8, !tbaa !158
  %49 = sitofp i32 %48 to float
  %50 = getelementptr inbounds [3 x float], ptr %28, i64 0, i64 1
  store float %49, ptr %50, align 4, !tbaa !82
  %51 = getelementptr inbounds [3 x float], ptr %28, i64 0, i64 2
  store float 0.000000e+00, ptr %51, align 8, !tbaa !82
  %52 = getelementptr inbounds %struct.TransData2D, ptr %28, i64 0, i32 1
  store ptr null, ptr %52, align 8, !tbaa !178
  store ptr %12, ptr %29, align 8, !tbaa !151
  %53 = getelementptr inbounds %struct.TransDataSeq, ptr %29, i64 0, i32 1
  store i32 %32, ptr %53, align 8, !tbaa !159
  %54 = getelementptr inbounds %struct.TransDataSeq, ptr %29, i64 0, i32 3
  store i16 2, ptr %54, align 8, !tbaa !155
  %55 = getelementptr inbounds %struct.TransData, ptr %31, i64 0, i32 15
  store ptr %29, ptr %55, align 8, !tbaa !144
  %56 = getelementptr inbounds %struct.TransData, ptr %31, i64 0, i32 16
  %57 = getelementptr inbounds %struct.TransData, ptr %31, i64 0, i32 3
  store ptr %28, ptr %57, align 8, !tbaa !182
  %58 = getelementptr inbounds %struct.TransData, ptr %31, i64 0, i32 7
  store float %46, ptr %58, align 4, !tbaa !82
  %59 = load float, ptr %50, align 4, !tbaa !82
  %60 = getelementptr inbounds %struct.TransData, ptr %31, i64 0, i32 7, i64 1
  store float %59, ptr %60, align 4, !tbaa !82
  %61 = load float, ptr %51, align 4, !tbaa !82
  %62 = getelementptr inbounds %struct.TransData, ptr %31, i64 0, i32 7, i64 2
  store float %61, ptr %62, align 4, !tbaa !82
  %63 = getelementptr inbounds %struct.TransData, ptr %31, i64 0, i32 4
  %64 = load float, ptr %28, align 4, !tbaa !82
  store float %64, ptr %63, align 4, !tbaa !82
  %65 = load float, ptr %50, align 4, !tbaa !82
  %66 = getelementptr inbounds %struct.TransData, ptr %31, i64 0, i32 4, i64 1
  store float %65, ptr %66, align 4, !tbaa !82
  %67 = load float, ptr %51, align 4, !tbaa !82
  %68 = getelementptr inbounds %struct.TransData, ptr %31, i64 0, i32 4, i64 2
  store float %67, ptr %68, align 4, !tbaa !82
  %69 = getelementptr inbounds %struct.TransData, ptr %31, i64 0, i32 10
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(36) %69, i8 0, i64 32, i1 false)
  %70 = getelementptr inbounds %struct.TransData, ptr %31, i64 0, i32 10, i64 2, i64 2
  store float 1.000000e+00, ptr %70, align 8, !tbaa !82
  %71 = getelementptr inbounds %struct.TransData, ptr %31, i64 0, i32 13
  store ptr null, ptr %71, align 8, !tbaa !334
  %72 = getelementptr inbounds %struct.TransData, ptr %31, i64 0, i32 5
  store ptr null, ptr %72, align 8, !tbaa !423
  store i32 1, ptr %56, align 8, !tbaa !20
  store float 0.000000e+00, ptr %31, align 8, !tbaa !25
  %73 = getelementptr inbounds %struct.TransData, ptr %31, i64 0, i32 8
  tail call void @unit_m3(ptr noundef nonnull %73) #18
  %74 = getelementptr inbounds %struct.TransData, ptr %31, i64 0, i32 9
  tail call void @unit_m3(ptr noundef nonnull %74) #18
  store ptr %28, ptr %72, align 8, !tbaa !423
  %75 = load float, ptr %28, align 8, !tbaa !82
  %76 = getelementptr inbounds %struct.TransData, ptr %31, i64 0, i32 6
  store float %75, ptr %76, align 8, !tbaa !424
  %77 = add nsw i32 %30, 1
  br label %78

78:                                               ; preds = %41, %38
  %79 = phi ptr [ %43, %41 ], [ %28, %38 ]
  %80 = phi ptr [ %44, %41 ], [ %29, %38 ]
  %81 = phi i32 [ %77, %41 ], [ %30, %38 ]
  %82 = phi ptr [ %42, %41 ], [ %31, %38 ]
  %83 = and i32 %32, 4
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %162, label %85

85:                                               ; preds = %78
  %86 = tail call i32 @BKE_sequence_tx_get_final_right(ptr noundef nonnull %12, i8 noundef zeroext 0) #18
  %87 = sitofp i32 %86 to float
  store float %87, ptr %79, align 8, !tbaa !82
  %88 = getelementptr inbounds %struct.Sequence, ptr %12, i64 0, i32 13
  %89 = load i32, ptr %88, align 8, !tbaa !158
  %90 = sitofp i32 %89 to float
  %91 = getelementptr inbounds [3 x float], ptr %79, i64 0, i64 1
  store float %90, ptr %91, align 4, !tbaa !82
  %92 = getelementptr inbounds [3 x float], ptr %79, i64 0, i64 2
  store float 0.000000e+00, ptr %92, align 8, !tbaa !82
  %93 = getelementptr inbounds %struct.TransData2D, ptr %79, i64 0, i32 1
  store ptr null, ptr %93, align 8, !tbaa !178
  store ptr %12, ptr %80, align 8, !tbaa !151
  %94 = getelementptr inbounds %struct.TransDataSeq, ptr %80, i64 0, i32 1
  store i32 %32, ptr %94, align 8, !tbaa !159
  %95 = getelementptr inbounds %struct.TransDataSeq, ptr %80, i64 0, i32 3
  store i16 4, ptr %95, align 8, !tbaa !155
  %96 = getelementptr inbounds %struct.TransData, ptr %82, i64 0, i32 15
  store ptr %80, ptr %96, align 8, !tbaa !144
  %97 = getelementptr inbounds %struct.TransData, ptr %82, i64 0, i32 16
  %98 = getelementptr inbounds %struct.TransData, ptr %82, i64 0, i32 3
  store ptr %79, ptr %98, align 8, !tbaa !182
  %99 = getelementptr inbounds %struct.TransData, ptr %82, i64 0, i32 7
  store float %87, ptr %99, align 4, !tbaa !82
  %100 = load float, ptr %91, align 4, !tbaa !82
  %101 = getelementptr inbounds %struct.TransData, ptr %82, i64 0, i32 7, i64 1
  store float %100, ptr %101, align 4, !tbaa !82
  %102 = load float, ptr %92, align 4, !tbaa !82
  %103 = getelementptr inbounds %struct.TransData, ptr %82, i64 0, i32 7, i64 2
  store float %102, ptr %103, align 4, !tbaa !82
  %104 = getelementptr inbounds %struct.TransData, ptr %82, i64 0, i32 4
  %105 = load float, ptr %79, align 4, !tbaa !82
  store float %105, ptr %104, align 4, !tbaa !82
  %106 = load float, ptr %91, align 4, !tbaa !82
  %107 = getelementptr inbounds %struct.TransData, ptr %82, i64 0, i32 4, i64 1
  store float %106, ptr %107, align 4, !tbaa !82
  %108 = load float, ptr %92, align 4, !tbaa !82
  %109 = getelementptr inbounds %struct.TransData, ptr %82, i64 0, i32 4, i64 2
  store float %108, ptr %109, align 4, !tbaa !82
  %110 = getelementptr inbounds %struct.TransData, ptr %82, i64 0, i32 10
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(36) %110, i8 0, i64 32, i1 false)
  %111 = getelementptr inbounds %struct.TransData, ptr %82, i64 0, i32 10, i64 2, i64 2
  store float 1.000000e+00, ptr %111, align 8, !tbaa !82
  %112 = getelementptr inbounds %struct.TransData, ptr %82, i64 0, i32 13
  store ptr null, ptr %112, align 8, !tbaa !334
  %113 = getelementptr inbounds %struct.TransData, ptr %82, i64 0, i32 5
  store ptr null, ptr %113, align 8, !tbaa !423
  store i32 1, ptr %97, align 8, !tbaa !20
  store float 0.000000e+00, ptr %82, align 8, !tbaa !25
  %114 = getelementptr inbounds %struct.TransData, ptr %82, i64 0, i32 8
  tail call void @unit_m3(ptr noundef nonnull %114) #18
  %115 = getelementptr inbounds %struct.TransData, ptr %82, i64 0, i32 9
  tail call void @unit_m3(ptr noundef nonnull %115) #18
  store ptr %79, ptr %113, align 8, !tbaa !423
  br label %151

116:                                              ; preds = %35
  %117 = tail call i32 @BKE_sequence_tx_get_final_left(ptr noundef nonnull %12, i8 noundef zeroext 0) #18
  %118 = sitofp i32 %117 to float
  store float %118, ptr %28, align 8, !tbaa !82
  %119 = getelementptr inbounds %struct.Sequence, ptr %12, i64 0, i32 8
  %120 = load i32, ptr %119, align 4, !tbaa !153
  %121 = sub nsw i32 %117, %120
  %122 = getelementptr inbounds %struct.TransDataSeq, ptr %29, i64 0, i32 2
  store i32 %121, ptr %122, align 4, !tbaa !157
  %123 = getelementptr inbounds %struct.Sequence, ptr %12, i64 0, i32 13
  %124 = load i32, ptr %123, align 8, !tbaa !158
  %125 = sitofp i32 %124 to float
  %126 = getelementptr inbounds [3 x float], ptr %28, i64 0, i64 1
  store float %125, ptr %126, align 4, !tbaa !82
  %127 = getelementptr inbounds [3 x float], ptr %28, i64 0, i64 2
  store float 0.000000e+00, ptr %127, align 8, !tbaa !82
  %128 = getelementptr inbounds %struct.TransData2D, ptr %28, i64 0, i32 1
  store ptr null, ptr %128, align 8, !tbaa !178
  store ptr %12, ptr %29, align 8, !tbaa !151
  %129 = getelementptr inbounds %struct.TransDataSeq, ptr %29, i64 0, i32 1
  store i32 %32, ptr %129, align 8, !tbaa !159
  %130 = getelementptr inbounds %struct.TransDataSeq, ptr %29, i64 0, i32 3
  store i16 1, ptr %130, align 8, !tbaa !155
  %131 = getelementptr inbounds %struct.TransData, ptr %31, i64 0, i32 15
  store ptr %29, ptr %131, align 8, !tbaa !144
  %132 = getelementptr inbounds %struct.TransData, ptr %31, i64 0, i32 16
  %133 = getelementptr inbounds %struct.TransData, ptr %31, i64 0, i32 3
  store ptr %28, ptr %133, align 8, !tbaa !182
  %134 = getelementptr inbounds %struct.TransData, ptr %31, i64 0, i32 7
  store float %118, ptr %134, align 4, !tbaa !82
  %135 = load float, ptr %126, align 4, !tbaa !82
  %136 = getelementptr inbounds %struct.TransData, ptr %31, i64 0, i32 7, i64 1
  store float %135, ptr %136, align 4, !tbaa !82
  %137 = load float, ptr %127, align 4, !tbaa !82
  %138 = getelementptr inbounds %struct.TransData, ptr %31, i64 0, i32 7, i64 2
  store float %137, ptr %138, align 4, !tbaa !82
  %139 = getelementptr inbounds %struct.TransData, ptr %31, i64 0, i32 4
  %140 = load float, ptr %28, align 4, !tbaa !82
  store float %140, ptr %139, align 4, !tbaa !82
  %141 = load float, ptr %126, align 4, !tbaa !82
  %142 = getelementptr inbounds %struct.TransData, ptr %31, i64 0, i32 4, i64 1
  store float %141, ptr %142, align 4, !tbaa !82
  %143 = load float, ptr %127, align 4, !tbaa !82
  %144 = getelementptr inbounds %struct.TransData, ptr %31, i64 0, i32 4, i64 2
  store float %143, ptr %144, align 4, !tbaa !82
  %145 = getelementptr inbounds %struct.TransData, ptr %31, i64 0, i32 10
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(36) %145, i8 0, i64 32, i1 false)
  %146 = getelementptr inbounds %struct.TransData, ptr %31, i64 0, i32 10, i64 2, i64 2
  store float 1.000000e+00, ptr %146, align 8, !tbaa !82
  %147 = getelementptr inbounds %struct.TransData, ptr %31, i64 0, i32 13
  store ptr null, ptr %147, align 8, !tbaa !334
  %148 = getelementptr inbounds %struct.TransData, ptr %31, i64 0, i32 5
  store ptr null, ptr %148, align 8, !tbaa !423
  store i32 1, ptr %132, align 8, !tbaa !20
  store float 0.000000e+00, ptr %31, align 8, !tbaa !25
  %149 = getelementptr inbounds %struct.TransData, ptr %31, i64 0, i32 8
  tail call void @unit_m3(ptr noundef nonnull %149) #18
  %150 = getelementptr inbounds %struct.TransData, ptr %31, i64 0, i32 9
  tail call void @unit_m3(ptr noundef nonnull %150) #18
  store ptr %28, ptr %148, align 8, !tbaa !423
  br label %151

151:                                              ; preds = %116, %85
  %152 = phi ptr [ %79, %85 ], [ %28, %116 ]
  %153 = phi ptr [ %82, %85 ], [ %31, %116 ]
  %154 = phi i32 [ %81, %85 ], [ %30, %116 ]
  %155 = phi ptr [ %80, %85 ], [ %29, %116 ]
  %156 = getelementptr inbounds %struct.TransData, ptr %153, i64 1
  %157 = getelementptr inbounds %struct.TransDataSeq, ptr %155, i64 1
  %158 = getelementptr inbounds %struct.TransData2D, ptr %152, i64 1
  %159 = load float, ptr %152, align 8, !tbaa !82
  %160 = getelementptr inbounds %struct.TransData, ptr %153, i64 0, i32 6
  store float %159, ptr %160, align 8, !tbaa !424
  %161 = add nsw i32 %154, 1
  br label %162

162:                                              ; preds = %151, %27, %78
  %163 = phi ptr [ %79, %78 ], [ %28, %27 ], [ %158, %151 ]
  %164 = phi ptr [ %80, %78 ], [ %29, %27 ], [ %157, %151 ]
  %165 = phi i32 [ %81, %78 ], [ %30, %27 ], [ %161, %151 ]
  %166 = phi ptr [ %82, %78 ], [ %31, %27 ], [ %156, %151 ]
  %167 = load ptr, ptr %12, align 8, !tbaa !33
  %168 = icmp eq ptr %167, null
  br i1 %168, label %169, label %11, !llvm.loop !699

169:                                              ; preds = %162, %5
  %170 = phi i32 [ 0, %5 ], [ %165, %162 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #18
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %7) #18
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %6) #18
  ret i32 %170
}

declare zeroext i8 @BKE_sequence_base_shuffle_time(ptr noundef, ptr noundef) local_unnamed_addr #7

declare zeroext i8 @BKE_sequence_base_shuffle(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #7

declare void @BKE_sequencer_sort(ptr noundef) local_unnamed_addr #7

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @SeqTransInfo(ptr nocapture noundef %0, ptr noundef %1, ptr nocapture noundef writeonly %2, ptr nocapture noundef writeonly %3, ptr nocapture noundef writeonly %4) unnamed_addr #6 {
  %6 = load i32, ptr %0, align 8, !tbaa !161
  %7 = icmp eq i32 %6, 22
  br i1 %7, label %8, label %65

8:                                                ; preds = %5
  %9 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 56
  %10 = load ptr, ptr %9, align 8, !tbaa !89
  %11 = getelementptr inbounds %struct.Scene, ptr %10, i64 0, i32 22, i32 5
  %12 = load i32, ptr %11, align 8, !tbaa !224
  %13 = tail call i32 @BKE_sequence_tx_get_final_left(ptr noundef %1, i8 noundef zeroext 1) #18
  %14 = tail call i32 @BKE_sequence_tx_get_final_right(ptr noundef %1, i8 noundef zeroext 1) #18
  %15 = getelementptr inbounds %struct.Sequence, ptr %1, i64 0, i32 14
  %16 = load i32, ptr %15, align 4, !tbaa !156
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %24

18:                                               ; preds = %8
  %19 = getelementptr inbounds %struct.Sequence, ptr %1, i64 0, i32 5
  %20 = load i32, ptr %19, align 8, !tbaa !163
  %21 = and i32 %20, 16385
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %24, label %23

23:                                               ; preds = %18
  store i32 0, ptr %2, align 4, !tbaa !27
  store i32 0, ptr %3, align 4, !tbaa !27
  store i32 0, ptr %4, align 4, !tbaa !27
  br label %96

24:                                               ; preds = %18, %8
  %25 = getelementptr inbounds %struct.Sequence, ptr %1, i64 0, i32 6
  %26 = load i32, ptr %25, align 4, !tbaa !162
  %27 = icmp eq i32 %26, 1
  br i1 %27, label %28, label %43

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 26
  %30 = load i8, ptr %29, align 8, !tbaa !263
  %31 = icmp ne i8 %30, 82
  %32 = icmp sgt i32 %14, %12
  %33 = select i1 %31, i1 true, i1 %32
  %34 = icmp ne i8 %30, 76
  %35 = icmp slt i32 %13, %12
  %36 = select i1 %34, i1 true, i1 %35
  %37 = select i1 %33, i1 %36, i1 false
  %38 = zext i1 %37 to i32
  store i32 %38, ptr %2, align 4, !tbaa !27
  store i32 1, ptr %3, align 4, !tbaa !27
  %39 = getelementptr inbounds %struct.Sequence, ptr %1, i64 0, i32 5
  %40 = load i32, ptr %39, align 8, !tbaa !163
  %41 = and i32 %40, -8
  %42 = or i32 %41, 1
  store i32 %42, ptr %4, align 4, !tbaa !27
  br label %96

43:                                               ; preds = %24
  store i32 0, ptr %2, align 4, !tbaa !27
  store i32 1, ptr %3, align 4, !tbaa !27
  %44 = getelementptr inbounds %struct.Sequence, ptr %1, i64 0, i32 5
  %45 = load i32, ptr %44, align 8, !tbaa !163
  %46 = and i32 %45, -8
  %47 = or i32 %46, 1
  store i32 %47, ptr %4, align 4, !tbaa !27
  %48 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 26
  %49 = load i8, ptr %48, align 8, !tbaa !263
  %50 = icmp eq i8 %49, 82
  br i1 %50, label %51, label %58

51:                                               ; preds = %43
  %52 = icmp sgt i32 %14, %12
  br i1 %52, label %54, label %53

53:                                               ; preds = %51
  store i32 0, ptr %4, align 4, !tbaa !27
  store i32 0, ptr %3, align 4, !tbaa !27
  br label %96

54:                                               ; preds = %51
  %55 = icmp sgt i32 %13, %12
  br i1 %55, label %96, label %56

56:                                               ; preds = %54
  %57 = or i32 %46, 5
  store i32 %57, ptr %4, align 4, !tbaa !27
  br label %96

58:                                               ; preds = %43
  %59 = icmp slt i32 %13, %12
  br i1 %59, label %61, label %60

60:                                               ; preds = %58
  store i32 0, ptr %4, align 4, !tbaa !27
  store i32 0, ptr %3, align 4, !tbaa !27
  br label %96

61:                                               ; preds = %58
  %62 = icmp slt i32 %14, %12
  br i1 %62, label %96, label %63

63:                                               ; preds = %61
  %64 = or i32 %46, 3
  store i32 %64, ptr %4, align 4, !tbaa !27
  br label %96

65:                                               ; preds = %5
  %66 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 26
  store i8 66, ptr %66, align 8, !tbaa !263
  %67 = getelementptr inbounds %struct.Sequence, ptr %1, i64 0, i32 14
  %68 = load i32, ptr %67, align 4, !tbaa !156
  %69 = icmp eq i32 %68, 0
  %70 = getelementptr inbounds %struct.Sequence, ptr %1, i64 0, i32 5
  %71 = load i32, ptr %70, align 8, !tbaa !163
  br i1 %69, label %72, label %89

72:                                               ; preds = %65
  %73 = and i32 %71, 16385
  %74 = icmp eq i32 %73, 1
  br i1 %74, label %76, label %75

75:                                               ; preds = %72
  store i32 0, ptr %2, align 4, !tbaa !27
  store i32 0, ptr %3, align 4, !tbaa !27
  store i32 0, ptr %4, align 4, !tbaa !27
  br label %96

76:                                               ; preds = %72
  %77 = and i32 %71, 6
  %78 = icmp eq i32 %77, 6
  %79 = select i1 %78, i32 2, i32 1
  store i32 %71, ptr %4, align 4, !tbaa !27
  store i32 %79, ptr %3, align 4, !tbaa !27
  %80 = getelementptr inbounds %struct.Sequence, ptr %1, i64 0, i32 6
  %81 = load i32, ptr %80, align 4, !tbaa !162
  %82 = icmp eq i32 %81, 1
  br i1 %82, label %83, label %88

83:                                               ; preds = %76
  %84 = load i32, ptr %70, align 8, !tbaa !163
  %85 = and i32 %84, 6
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %83
  store i32 1, ptr %2, align 4, !tbaa !27
  br label %96

88:                                               ; preds = %83, %76
  store i32 0, ptr %2, align 4, !tbaa !27
  br label %96

89:                                               ; preds = %65
  %90 = and i32 %71, -8
  %91 = or i32 %90, 1
  store i32 %91, ptr %4, align 4, !tbaa !27
  store i32 1, ptr %3, align 4, !tbaa !27
  %92 = getelementptr inbounds %struct.Sequence, ptr %1, i64 0, i32 6
  %93 = load i32, ptr %92, align 4, !tbaa !162
  %94 = icmp eq i32 %93, 1
  %95 = zext i1 %94 to i32
  store i32 %95, ptr %2, align 4, !tbaa !27
  br label %96

96:                                               ; preds = %23, %56, %54, %53, %63, %61, %60, %28, %89, %87, %88, %75
  ret void
}

declare i32 @BKE_sequence_tx_get_final_left(ptr noundef, i8 noundef zeroext) local_unnamed_addr #7

declare i32 @BKE_sequence_tx_get_final_right(ptr noundef, i8 noundef zeroext) local_unnamed_addr #7

declare signext i16 @ANIM_get_normalization_flags(ptr noundef) local_unnamed_addr #7

declare void @UI_view2d_scale_get(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #7

declare nofpclass(nan inf) float @ANIM_unit_mapping_get_factor(ptr noundef, ptr noundef, ptr noundef, i16 noundef signext) local_unnamed_addr #7

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @bezt_to_transdata(ptr noundef %0, ptr noundef %1, ptr nocapture noundef writeonly %2, ptr noundef %3, ptr noundef %4, i32 noundef %5, i8 noundef zeroext %6, i8 noundef zeroext %7, i8 noundef zeroext %8, ptr noundef %9, ptr noundef %10, float noundef nofpclass(nan inf) %11) unnamed_addr #6 {
  %13 = zext i32 %5 to i64
  %14 = getelementptr inbounds [3 x [3 x float]], ptr %4, i64 0, i64 %13
  %15 = getelementptr inbounds [3 x [3 x float]], ptr %4, i64 0, i64 1
  %16 = icmp eq ptr %3, null
  %17 = load float, ptr %14, align 4, !tbaa !82
  br i1 %16, label %42, label %18

18:                                               ; preds = %12
  %19 = tail call fast nofpclass(nan inf) float @BKE_nla_tweakedit_remap(ptr noundef nonnull %3, float noundef nofpclass(nan inf) %17, i16 noundef signext 2) #18
  store float %19, ptr %1, align 8, !tbaa !82
  %20 = getelementptr inbounds float, ptr %14, i64 1
  %21 = load float, ptr %20, align 4, !tbaa !82
  %22 = fmul fast float %21, %11
  %23 = getelementptr inbounds [3 x float], ptr %1, i64 0, i64 1
  store float %22, ptr %23, align 4, !tbaa !82
  %24 = getelementptr inbounds [3 x float], ptr %1, i64 0, i64 2
  store float 0.000000e+00, ptr %24, align 8, !tbaa !82
  %25 = getelementptr inbounds %struct.TransData2D, ptr %1, i64 0, i32 1
  store ptr %14, ptr %25, align 8, !tbaa !178
  %26 = getelementptr inbounds %struct.TransData, ptr %0, i64 0, i32 3
  store ptr %1, ptr %26, align 8, !tbaa !182
  %27 = load float, ptr %15, align 4, !tbaa !82
  %28 = tail call fast nofpclass(nan inf) float @BKE_nla_tweakedit_remap(ptr noundef nonnull %3, float noundef nofpclass(nan inf) %27, i16 noundef signext 2) #18
  %29 = getelementptr inbounds %struct.TransData, ptr %0, i64 0, i32 7
  store float %28, ptr %29, align 4, !tbaa !82
  %30 = getelementptr inbounds [3 x [3 x float]], ptr %4, i64 0, i64 1, i64 1
  %31 = load float, ptr %30, align 4, !tbaa !82
  %32 = fmul fast float %31, %11
  %33 = getelementptr inbounds %struct.TransData, ptr %0, i64 0, i32 7, i64 1
  store float %32, ptr %33, align 4, !tbaa !82
  %34 = getelementptr inbounds %struct.TransData, ptr %0, i64 0, i32 7, i64 2
  store float 0.000000e+00, ptr %34, align 4, !tbaa !82
  %35 = getelementptr inbounds %struct.TransData, ptr %0, i64 0, i32 4
  %36 = load ptr, ptr %26, align 8, !tbaa !182
  %37 = load float, ptr %36, align 4, !tbaa !82
  store float %37, ptr %35, align 4, !tbaa !82
  %38 = getelementptr inbounds float, ptr %36, i64 1
  %39 = load float, ptr %38, align 4, !tbaa !82
  %40 = getelementptr inbounds %struct.TransData, ptr %0, i64 0, i32 4, i64 1
  store float %39, ptr %40, align 4, !tbaa !82
  %41 = getelementptr inbounds float, ptr %36, i64 2
  br label %63

42:                                               ; preds = %12
  store float %17, ptr %1, align 8, !tbaa !82
  %43 = getelementptr inbounds float, ptr %14, i64 1
  %44 = load float, ptr %43, align 4, !tbaa !82
  %45 = fmul fast float %44, %11
  %46 = getelementptr inbounds [3 x float], ptr %1, i64 0, i64 1
  store float %45, ptr %46, align 4, !tbaa !82
  %47 = getelementptr inbounds [3 x float], ptr %1, i64 0, i64 2
  store float 0.000000e+00, ptr %47, align 8, !tbaa !82
  %48 = getelementptr inbounds %struct.TransData2D, ptr %1, i64 0, i32 1
  store ptr %14, ptr %48, align 8, !tbaa !178
  %49 = getelementptr inbounds %struct.TransData, ptr %0, i64 0, i32 3
  store ptr %1, ptr %49, align 8, !tbaa !182
  %50 = getelementptr inbounds %struct.TransData, ptr %0, i64 0, i32 7
  %51 = load float, ptr %15, align 4, !tbaa !82
  store float %51, ptr %50, align 4, !tbaa !82
  %52 = getelementptr inbounds [3 x [3 x float]], ptr %4, i64 0, i64 1, i64 1
  %53 = load float, ptr %52, align 4, !tbaa !82
  %54 = getelementptr inbounds %struct.TransData, ptr %0, i64 0, i32 7, i64 1
  store float %53, ptr %54, align 4, !tbaa !82
  %55 = getelementptr inbounds [3 x [3 x float]], ptr %4, i64 0, i64 1, i64 2
  %56 = load float, ptr %55, align 4, !tbaa !82
  %57 = getelementptr inbounds %struct.TransData, ptr %0, i64 0, i32 7, i64 2
  store float %56, ptr %57, align 4, !tbaa !82
  %58 = fmul fast float %53, %11
  store float %58, ptr %54, align 4, !tbaa !82
  %59 = getelementptr inbounds %struct.TransData, ptr %0, i64 0, i32 4
  %60 = load float, ptr %1, align 4, !tbaa !82
  store float %60, ptr %59, align 4, !tbaa !82
  %61 = load float, ptr %46, align 4, !tbaa !82
  %62 = getelementptr inbounds %struct.TransData, ptr %0, i64 0, i32 4, i64 1
  store float %61, ptr %62, align 4, !tbaa !82
  br label %63

63:                                               ; preds = %42, %18
  %64 = phi ptr [ %47, %42 ], [ %41, %18 ]
  %65 = load float, ptr %64, align 4, !tbaa !82
  %66 = getelementptr inbounds %struct.TransData, ptr %0, i64 0, i32 4, i64 2
  store float %65, ptr %66, align 4
  %67 = icmp eq i8 %7, 0
  br i1 %67, label %68, label %80

68:                                               ; preds = %63
  %69 = getelementptr inbounds [3 x [3 x float]], ptr %4, i64 0, i64 2
  %70 = getelementptr inbounds %struct.TransData2D, ptr %1, i64 0, i32 4
  %71 = load float, ptr %4, align 4, !tbaa !82
  store float %71, ptr %70, align 4, !tbaa !82
  %72 = getelementptr inbounds float, ptr %4, i64 1
  %73 = load float, ptr %72, align 4, !tbaa !82
  %74 = getelementptr inbounds %struct.TransData2D, ptr %1, i64 0, i32 4, i64 1
  store float %73, ptr %74, align 4, !tbaa !82
  %75 = getelementptr inbounds %struct.TransData2D, ptr %1, i64 0, i32 5
  %76 = load float, ptr %69, align 4, !tbaa !82
  store float %76, ptr %75, align 4, !tbaa !82
  %77 = getelementptr inbounds [3 x [3 x float]], ptr %4, i64 0, i64 2, i64 1
  %78 = load float, ptr %77, align 4, !tbaa !82
  %79 = getelementptr inbounds %struct.TransData2D, ptr %1, i64 0, i32 5, i64 1
  store float %78, ptr %79, align 4, !tbaa !82
  br label %80

80:                                               ; preds = %63, %68
  %81 = phi ptr [ %4, %68 ], [ null, %63 ]
  %82 = phi ptr [ %69, %68 ], [ null, %63 ]
  %83 = getelementptr inbounds %struct.TransData2D, ptr %1, i64 0, i32 2
  store ptr %81, ptr %83, align 8
  %84 = getelementptr inbounds %struct.TransData2D, ptr %1, i64 0, i32 3
  store ptr %82, ptr %84, align 8
  %85 = getelementptr inbounds %struct.TransData, ptr %0, i64 0, i32 10
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(36) %85, i8 0, i64 32, i1 false)
  %86 = getelementptr inbounds %struct.TransData, ptr %0, i64 0, i32 10, i64 2, i64 2
  store float 1.000000e+00, ptr %86, align 8, !tbaa !82
  %87 = getelementptr inbounds %struct.TransData, ptr %0, i64 0, i32 13
  store ptr null, ptr %87, align 8, !tbaa !334
  %88 = getelementptr inbounds %struct.TransData, ptr %0, i64 0, i32 5
  store ptr null, ptr %88, align 8, !tbaa !423
  %89 = getelementptr inbounds %struct.TransData, ptr %0, i64 0, i32 15
  store ptr %3, ptr %89, align 8, !tbaa !144
  %90 = icmp eq i8 %6, 0
  br i1 %90, label %95, label %91

91:                                               ; preds = %80
  %92 = getelementptr inbounds %struct.TransData, ptr %0, i64 0, i32 16
  %93 = load i32, ptr %92, align 8, !tbaa !20
  %94 = or i32 %93, 1
  store i32 %94, ptr %92, align 8, !tbaa !20
  br label %95

95:                                               ; preds = %80, %91
  %96 = phi float [ 0.000000e+00, %91 ], [ 0x47EFFFFFE0000000, %80 ]
  store float %96, ptr %0, align 8, !tbaa !25
  br i1 %67, label %101, label %97

97:                                               ; preds = %95
  %98 = getelementptr inbounds %struct.TransData, ptr %0, i64 0, i32 16
  %99 = load i32, ptr %98, align 8, !tbaa !20
  %100 = or i32 %99, 16384
  store i32 %100, ptr %98, align 8, !tbaa !20
  br label %101

101:                                              ; preds = %97, %95
  %102 = icmp eq i8 %8, 0
  br i1 %102, label %107, label %103

103:                                              ; preds = %101
  %104 = getelementptr inbounds %struct.TransData, ptr %0, i64 0, i32 16
  %105 = load i32, ptr %104, align 8, !tbaa !20
  %106 = or i32 %105, 32768
  store i32 %106, ptr %104, align 8, !tbaa !20
  br label %107

107:                                              ; preds = %103, %101
  %108 = getelementptr inbounds %struct.TransData, ptr %0, i64 0, i32 8
  tail call void @copy_m3_m3(ptr noundef nonnull %108, ptr noundef %9) #18
  %109 = getelementptr inbounds %struct.TransData, ptr %0, i64 0, i32 9
  tail call void @copy_m3_m3(ptr noundef nonnull %109, ptr noundef %10) #18
  store float %11, ptr %2, align 4, !tbaa !220
  ret void
}

declare void @nodeToView(ptr noundef, float noundef nofpclass(nan inf), float noundef nofpclass(nan inf), ptr noundef, ptr noundef) local_unnamed_addr #7

declare ptr @CTX_wm_region(ptr noundef) local_unnamed_addr #7

declare ptr @CTX_wm_space_clip(ptr noundef) local_unnamed_addr #7

declare void @BKE_movieclip_get_size(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #7

declare ptr @BKE_tracking_get_active_tracks(ptr noundef) local_unnamed_addr #7

; Function Attrs: nounwind sspstrong uwtable
define internal void @transDataTrackingFree(ptr nocapture noundef %0) #6 {
  %2 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 40
  %3 = load ptr, ptr %2, align 8, !tbaa !66
  %4 = icmp eq ptr %3, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.TransDataTracking, ptr %3, i64 0, i32 8
  %7 = load ptr, ptr %6, align 8, !tbaa !371
  %8 = icmp eq ptr %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %5
  %10 = load ptr, ptr @MEM_freeN, align 8, !tbaa !33
  tail call void %10(ptr noundef nonnull %7) #18
  br label %11

11:                                               ; preds = %9, %5
  %12 = load ptr, ptr @MEM_freeN, align 8, !tbaa !33
  tail call void %12(ptr noundef nonnull %3) #18
  store ptr null, ptr %2, align 8, !tbaa !66
  br label %13

13:                                               ; preds = %11, %1
  ret void
}

declare ptr @BKE_tracking_marker_ensure(ptr noundef, i32 noundef) local_unnamed_addr #7

declare ptr @BKE_tracking_plane_marker_ensure(ptr noundef, i32 noundef) local_unnamed_addr #7

declare void @EDBM_verts_mirror_cache_begin(ptr noundef, i32 noundef, i8 noundef zeroext, i8 noundef zeroext, i8 noundef zeroext) local_unnamed_addr #7

declare i32 @modifiers_getCageIndex(ptr noundef, ptr noundef, ptr noundef, i8 noundef zeroext) local_unnamed_addr #7

declare zeroext i8 @modifiers_isCorrectableDeformed(ptr noundef, ptr noundef) local_unnamed_addr #7

declare i32 @editbmesh_get_first_deform_matrices(ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #7

declare ptr @BKE_crazyspace_get_mapped_editverts(ptr noundef, ptr noundef) local_unnamed_addr #7

declare void @BKE_crazyspace_set_quats_editmesh(ptr noundef, ptr noundef, ptr noundef, ptr noundef, i8 noundef zeroext) local_unnamed_addr #7

declare void @_va_mul_m3_series_4(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #7

declare ptr @EDBM_verts_mirror_get(ptr noundef, ptr noundef) local_unnamed_addr #7

declare void @EDBM_verts_mirror_cache_end(ptr noundef) local_unnamed_addr #7

declare ptr @BLI_mempool_create(i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #7

declare void @BLI_linklist_prepend_pool(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #7

declare ptr @BLI_linklist_pop_pool(ptr noundef, ptr noundef) local_unnamed_addr #7

declare i32 @BLI_mempool_count(ptr noundef) local_unnamed_addr #7

declare void @BLI_mempool_destroy(ptr noundef) local_unnamed_addr #7

declare i32 @BM_mesh_calc_edge_groups(ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, i8 noundef zeroext) local_unnamed_addr #7

declare i32 @BM_mesh_calc_face_groups(ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, i8 noundef zeroext, i8 noundef zeroext) local_unnamed_addr #7

declare void @fill_vn_i(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #7

declare void @BM_mesh_elem_table_ensure(ptr noundef, i8 noundef zeroext) local_unnamed_addr #7

declare void @BM_mesh_elem_index_ensure(ptr noundef, i8 noundef zeroext) local_unnamed_addr #7

declare void @BM_editselection_center(ptr noundef, ptr noundef) local_unnamed_addr #7

declare void @BM_editselection_normal(ptr noundef, ptr noundef) local_unnamed_addr #7

declare void @BM_editselection_plane(ptr noundef, ptr noundef) local_unnamed_addr #7

declare zeroext i8 @createSpaceNormalTangent(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #7

declare void @axis_dominant_v3_to_m3(ptr noundef, ptr noundef) local_unnamed_addr #7

declare zeroext i8 @invert_m3(ptr noundef) local_unnamed_addr #7

declare zeroext i8 @createSpaceNormal(ptr noundef, ptr noundef) local_unnamed_addr #7

declare nofpclass(nan inf) float @BM_vert_calc_shell_factor_ex(ptr noundef, i8 noundef zeroext) local_unnamed_addr #7

declare ptr @BKE_curve_editNurbs_get(ptr noundef) local_unnamed_addr #7

declare void @BKE_nurb_bezt_calc_normal(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #7

declare void @BKE_nurb_bezt_calc_plane(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #7

; Function Attrs: nofree nosync nounwind sspstrong memory(readwrite, inaccessiblemem: none) uwtable
define internal fastcc void @calc_distanceCurveVerts(ptr noundef %0, ptr noundef %1) unnamed_addr #4 {
  %3 = icmp ugt ptr %0, %1
  br i1 %3, label %96, label %5

4:                                                ; preds = %39
  br i1 %3, label %96, label %43

5:                                                ; preds = %2, %39
  %6 = phi ptr [ %41, %39 ], [ %0, %2 ]
  %7 = phi ptr [ %40, %39 ], [ null, %2 ]
  %8 = getelementptr inbounds %struct.TransData, ptr %6, i64 0, i32 16
  %9 = load i32, ptr %8, align 8, !tbaa !20
  %10 = and i32 %9, 1
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %13, label %12

12:                                               ; preds = %5
  store float 0.000000e+00, ptr %6, align 8, !tbaa !25
  br label %39

13:                                               ; preds = %5
  %14 = icmp eq ptr %7, null
  br i1 %14, label %37, label %15

15:                                               ; preds = %13
  %16 = getelementptr inbounds %struct.TransData, ptr %7, i64 0, i32 7
  %17 = getelementptr inbounds %struct.TransData, ptr %6, i64 0, i32 7
  %18 = load float, ptr %17, align 4, !tbaa !82
  %19 = load float, ptr %16, align 4, !tbaa !82
  %20 = fsub fast float %18, %19
  %21 = getelementptr inbounds %struct.TransData, ptr %6, i64 0, i32 7, i64 1
  %22 = getelementptr inbounds %struct.TransData, ptr %7, i64 0, i32 7, i64 1
  %23 = fmul fast float %20, %20
  %24 = load <2 x float>, ptr %21, align 4, !tbaa !82
  %25 = load <2 x float>, ptr %22, align 4, !tbaa !82
  %26 = fsub fast <2 x float> %24, %25
  %27 = fmul fast <2 x float> %26, %26
  %28 = extractelement <2 x float> %27, i64 0
  %29 = fadd fast float %28, %23
  %30 = extractelement <2 x float> %27, i64 1
  %31 = fadd fast float %29, %30
  %32 = tail call fast float @llvm.sqrt.f32(float %31)
  %33 = getelementptr inbounds %struct.TransData, ptr %6, i64 -1
  %34 = load float, ptr %33, align 8, !tbaa !25
  %35 = fcmp fast olt float %32, %34
  %36 = select i1 %35, float %34, float %32
  store float %36, ptr %6, align 8, !tbaa !25
  br label %39

37:                                               ; preds = %13
  store float 0x47EFFFFFE0000000, ptr %6, align 8, !tbaa !25
  %38 = or i32 %9, 16
  store i32 %38, ptr %8, align 8, !tbaa !20
  br label %39

39:                                               ; preds = %12, %37, %15
  %40 = phi ptr [ %6, %12 ], [ %7, %15 ], [ null, %37 ]
  %41 = getelementptr inbounds %struct.TransData, ptr %6, i64 1
  %42 = icmp ugt ptr %41, %1
  br i1 %42, label %4, label %5, !llvm.loop !608

43:                                               ; preds = %4, %92
  %44 = phi ptr [ %94, %92 ], [ %1, %4 ]
  %45 = phi ptr [ %93, %92 ], [ null, %4 ]
  %46 = getelementptr inbounds %struct.TransData, ptr %44, i64 0, i32 16
  %47 = load i32, ptr %46, align 8, !tbaa !20
  %48 = and i32 %47, 1
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %89

50:                                               ; preds = %43
  %51 = icmp eq ptr %45, null
  br i1 %51, label %92, label %52

52:                                               ; preds = %50
  %53 = getelementptr inbounds %struct.TransData, ptr %45, i64 0, i32 7
  %54 = getelementptr inbounds %struct.TransData, ptr %44, i64 0, i32 7
  %55 = load float, ptr %54, align 4, !tbaa !82
  %56 = load float, ptr %53, align 4, !tbaa !82
  %57 = fsub fast float %55, %56
  %58 = getelementptr inbounds %struct.TransData, ptr %44, i64 0, i32 7, i64 1
  %59 = load float, ptr %58, align 4, !tbaa !82
  %60 = getelementptr inbounds %struct.TransData, ptr %45, i64 0, i32 7, i64 1
  %61 = load float, ptr %60, align 4, !tbaa !82
  %62 = fsub fast float %59, %61
  %63 = getelementptr inbounds %struct.TransData, ptr %44, i64 0, i32 7, i64 2
  %64 = load float, ptr %63, align 4, !tbaa !82
  %65 = getelementptr inbounds %struct.TransData, ptr %45, i64 0, i32 7, i64 2
  %66 = load float, ptr %65, align 4, !tbaa !82
  %67 = fsub fast float %64, %66
  %68 = fmul fast float %57, %57
  %69 = fmul fast float %62, %62
  %70 = fadd fast float %69, %68
  %71 = fmul fast float %67, %67
  %72 = fadd fast float %70, %71
  %73 = tail call fast float @llvm.sqrt.f32(float %72)
  %74 = and i32 %47, 16
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %83

76:                                               ; preds = %52
  %77 = load float, ptr %44, align 8, !tbaa !25
  %78 = fcmp fast olt float %73, %77
  br i1 %78, label %83, label %79

79:                                               ; preds = %76
  %80 = getelementptr inbounds %struct.TransData, ptr %44, i64 1
  %81 = load float, ptr %80, align 8, !tbaa !25
  %82 = fcmp fast olt float %81, %77
  br i1 %82, label %83, label %92

83:                                               ; preds = %79, %76, %52
  %84 = and i32 %47, -17
  store i32 %84, ptr %46, align 8, !tbaa !20
  %85 = getelementptr inbounds %struct.TransData, ptr %44, i64 1
  %86 = load float, ptr %85, align 8, !tbaa !25
  %87 = fcmp fast olt float %73, %86
  %88 = select i1 %87, float %86, float %73
  br label %89

89:                                               ; preds = %83, %43
  %90 = phi float [ 0.000000e+00, %43 ], [ %88, %83 ]
  %91 = phi ptr [ %44, %43 ], [ %45, %83 ]
  store float %90, ptr %44, align 8, !tbaa !25
  br label %92

92:                                               ; preds = %89, %79, %50
  %93 = phi ptr [ null, %50 ], [ %45, %79 ], [ %91, %89 ]
  %94 = getelementptr inbounds %struct.TransData, ptr %44, i64 -1
  %95 = icmp ult ptr %94, %0
  br i1 %95, label %96, label %43, !llvm.loop !609

96:                                               ; preds = %92, %2, %4
  ret void
}

declare void @BKE_nurb_handles_test(ptr noundef, i8 noundef zeroext) local_unnamed_addr #7

declare void @copy_qt_qt(ptr noundef, ptr noundef) local_unnamed_addr #7

declare ptr @ED_armature_bone_get_mirrored(ptr noundef, ptr noundef) local_unnamed_addr #7

declare void @ED_armature_ebone_to_mat3(ptr noundef, ptr noundef) local_unnamed_addr #7

declare ptr @BKE_armature_from_object(ptr noundef) local_unnamed_addr #7

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc signext i16 @pose_grab_with_ik_add(ptr noundef %0) unnamed_addr #6 {
  %2 = getelementptr inbounds %struct.bPoseChannel, ptr %0, i64 0, i32 3
  %3 = load ptr, ptr %2, align 8, !tbaa !33
  %4 = icmp eq ptr %3, null
  br i1 %4, label %77, label %5

5:                                                ; preds = %1, %73
  %6 = phi ptr [ %75, %73 ], [ %3, %1 ]
  %7 = phi ptr [ %74, %73 ], [ null, %1 ]
  %8 = getelementptr inbounds %struct.bConstraint, ptr %6, i64 0, i32 3
  %9 = load i16, ptr %8, align 8, !tbaa !44
  %10 = icmp eq i16 %9, 3
  br i1 %10, label %11, label %73

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct.bConstraint, ptr %6, i64 0, i32 2
  %13 = load ptr, ptr %12, align 8, !tbaa !47
  %14 = load ptr, ptr %13, align 8, !tbaa !48
  %15 = icmp eq ptr %14, null
  br i1 %15, label %24, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.Object, ptr %14, i64 0, i32 3
  %18 = load i16, ptr %17, align 8, !tbaa !50
  %19 = icmp eq i16 %18, 25
  br i1 %19, label %20, label %63

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.bKinematicConstraint, ptr %13, i64 0, i32 5
  %22 = load i8, ptr %21, align 8, !tbaa !51
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %24, label %63

24:                                               ; preds = %20, %11
  %25 = getelementptr inbounds %struct.bConstraint, ptr %6, i64 0, i32 9
  %26 = load float, ptr %25, align 8, !tbaa !46
  %27 = fcmp fast une float %26, 0.000000e+00
  br i1 %27, label %28, label %63

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.bKinematicConstraint, ptr %13, i64 0, i32 2
  %30 = load i16, ptr %29, align 2, !tbaa !61
  %31 = or i16 %30, 4
  store i16 %31, ptr %29, align 2, !tbaa !61
  %32 = getelementptr inbounds %struct.bKinematicConstraint, ptr %13, i64 0, i32 3
  %33 = load i16, ptr %32, align 4, !tbaa !63
  %34 = icmp eq i16 %33, 0
  br i1 %34, label %35, label %142

35:                                               ; preds = %28, %59
  %36 = phi ptr [ %61, %59 ], [ %0, %28 ]
  %37 = getelementptr inbounds %struct.bPoseChannel, ptr %36, i64 0, i32 7
  %38 = load i16, ptr %37, align 4, !tbaa !54
  %39 = and i16 %38, 8
  %40 = icmp eq i16 %39, 0
  br i1 %40, label %45, label %41

41:                                               ; preds = %35
  %42 = getelementptr inbounds %struct.bPoseChannel, ptr %36, i64 0, i32 6
  %43 = load i16, ptr %42, align 2, !tbaa !353
  %44 = or i16 %43, 1024
  store i16 %44, ptr %42, align 2, !tbaa !353
  br label %45

45:                                               ; preds = %41, %35
  %46 = and i16 %38, 16
  %47 = icmp eq i16 %46, 0
  br i1 %47, label %52, label %48

48:                                               ; preds = %45
  %49 = getelementptr inbounds %struct.bPoseChannel, ptr %36, i64 0, i32 6
  %50 = load i16, ptr %49, align 2, !tbaa !353
  %51 = or i16 %50, 2048
  store i16 %51, ptr %49, align 2, !tbaa !353
  br label %52

52:                                               ; preds = %48, %45
  %53 = and i16 %38, 32
  %54 = icmp eq i16 %53, 0
  br i1 %54, label %59, label %55

55:                                               ; preds = %52
  %56 = getelementptr inbounds %struct.bPoseChannel, ptr %36, i64 0, i32 6
  %57 = load i16, ptr %56, align 2, !tbaa !353
  %58 = or i16 %57, 4096
  store i16 %58, ptr %56, align 2, !tbaa !353
  br label %59

59:                                               ; preds = %52, %55
  %60 = getelementptr inbounds %struct.bPoseChannel, ptr %36, i64 0, i32 13
  %61 = load ptr, ptr %60, align 8, !tbaa !53
  %62 = icmp eq ptr %61, null
  br i1 %62, label %142, label %35

63:                                               ; preds = %24, %20, %16
  %64 = phi ptr [ %13, %24 ], [ %7, %20 ], [ %7, %16 ]
  %65 = getelementptr inbounds %struct.bConstraint, ptr %6, i64 0, i32 4
  %66 = load i16, ptr %65, align 2, !tbaa !700
  %67 = and i16 %66, 4
  %68 = icmp eq i16 %67, 0
  br i1 %68, label %69, label %73

69:                                               ; preds = %63
  %70 = getelementptr inbounds %struct.bConstraint, ptr %6, i64 0, i32 9
  %71 = load float, ptr %70, align 8, !tbaa !46
  %72 = fcmp fast une float %71, 0.000000e+00
  br i1 %72, label %142, label %73

73:                                               ; preds = %5, %69, %63
  %74 = phi ptr [ %64, %69 ], [ %64, %63 ], [ %7, %5 ]
  %75 = load ptr, ptr %6, align 8, !tbaa !33
  %76 = icmp eq ptr %75, null
  br i1 %76, label %77, label %5, !llvm.loop !701

77:                                               ; preds = %73, %1
  %78 = phi ptr [ null, %1 ], [ %74, %73 ]
  %79 = tail call ptr @BKE_constraint_add_for_pose(ptr noundef null, ptr noundef %0, ptr noundef nonnull @.str.57, i16 noundef signext 3) #18
  %80 = getelementptr inbounds %struct.bPoseChannel, ptr %0, i64 0, i32 9
  %81 = load i8, ptr %80, align 8, !tbaa !60
  %82 = or i8 %81, 9
  store i8 %82, ptr %80, align 8, !tbaa !60
  %83 = getelementptr inbounds %struct.bConstraint, ptr %79, i64 0, i32 2
  %84 = load ptr, ptr %83, align 8, !tbaa !47
  %85 = icmp eq ptr %78, null
  br i1 %85, label %90, label %86

86:                                               ; preds = %77
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(184) %84, ptr noundef nonnull align 8 dereferenceable(184) %78, i64 184, i1 false), !tbaa.struct !702
  %87 = getelementptr inbounds %struct.bKinematicConstraint, ptr %84, i64 0, i32 2
  %88 = load i16, ptr %87, align 2, !tbaa !61
  %89 = or i16 %88, 44
  br label %90

90:                                               ; preds = %77, %86
  %91 = phi i16 [ %89, %86 ], [ 45, %77 ]
  %92 = getelementptr inbounds %struct.bKinematicConstraint, ptr %84, i64 0, i32 2
  store i16 %91, ptr %92, align 2, !tbaa !61
  %93 = getelementptr inbounds %struct.bKinematicConstraint, ptr %84, i64 0, i32 11
  %94 = getelementptr inbounds %struct.bPoseChannel, ptr %0, i64 0, i32 32
  %95 = load float, ptr %94, align 4, !tbaa !82
  store float %95, ptr %93, align 4, !tbaa !82
  %96 = getelementptr inbounds %struct.bPoseChannel, ptr %0, i64 0, i32 32, i64 1
  %97 = load float, ptr %96, align 4, !tbaa !82
  %98 = getelementptr inbounds %struct.bKinematicConstraint, ptr %84, i64 0, i32 11, i64 1
  store float %97, ptr %98, align 4, !tbaa !82
  %99 = getelementptr inbounds %struct.bPoseChannel, ptr %0, i64 0, i32 32, i64 2
  %100 = load float, ptr %99, align 4, !tbaa !82
  %101 = getelementptr inbounds %struct.bKinematicConstraint, ptr %84, i64 0, i32 11, i64 2
  store float %100, ptr %101, align 4, !tbaa !82
  %102 = getelementptr inbounds %struct.bKinematicConstraint, ptr %84, i64 0, i32 3
  br label %103

103:                                              ; preds = %136, %90
  %104 = phi i16 [ 0, %90 ], [ %129, %136 ]
  %105 = phi ptr [ %0, %90 ], [ %138, %136 ]
  %106 = getelementptr inbounds %struct.bPoseChannel, ptr %105, i64 0, i32 7
  %107 = load i16, ptr %106, align 4, !tbaa !54
  %108 = and i16 %107, 8
  %109 = icmp eq i16 %108, 0
  br i1 %109, label %114, label %110

110:                                              ; preds = %103
  %111 = getelementptr inbounds %struct.bPoseChannel, ptr %105, i64 0, i32 6
  %112 = load i16, ptr %111, align 2, !tbaa !353
  %113 = or i16 %112, 1024
  store i16 %113, ptr %111, align 2, !tbaa !353
  br label %114

114:                                              ; preds = %110, %103
  %115 = and i16 %107, 16
  %116 = icmp eq i16 %115, 0
  br i1 %116, label %121, label %117

117:                                              ; preds = %114
  %118 = getelementptr inbounds %struct.bPoseChannel, ptr %105, i64 0, i32 6
  %119 = load i16, ptr %118, align 2, !tbaa !353
  %120 = or i16 %119, 2048
  store i16 %120, ptr %118, align 2, !tbaa !353
  br label %121

121:                                              ; preds = %117, %114
  %122 = and i16 %107, 32
  %123 = icmp eq i16 %122, 0
  br i1 %123, label %128, label %124

124:                                              ; preds = %121
  %125 = getelementptr inbounds %struct.bPoseChannel, ptr %105, i64 0, i32 6
  %126 = load i16, ptr %125, align 2, !tbaa !353
  %127 = or i16 %126, 4096
  store i16 %127, ptr %125, align 2, !tbaa !353
  br label %128

128:                                              ; preds = %124, %121
  %129 = add i16 %104, 1
  %130 = getelementptr inbounds %struct.bPoseChannel, ptr %105, i64 0, i32 12
  %131 = load ptr, ptr %130, align 8, !tbaa !37
  %132 = getelementptr inbounds %struct.Bone, ptr %131, i64 0, i32 10
  %133 = load i32, ptr %132, align 8, !tbaa !41
  %134 = and i32 %133, 16
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %140, label %136

136:                                              ; preds = %128
  %137 = getelementptr inbounds %struct.bPoseChannel, ptr %105, i64 0, i32 13
  %138 = load ptr, ptr %137, align 8, !tbaa !53
  %139 = icmp eq ptr %138, null
  br i1 %139, label %140, label %103, !llvm.loop !703

140:                                              ; preds = %128, %136
  store i16 %129, ptr %102, align 4, !tbaa !63
  %141 = getelementptr inbounds %struct.bKinematicConstraint, ptr %84, i64 0, i32 4
  store i16 %129, ptr %141, align 2, !tbaa !62
  br label %142

142:                                              ; preds = %69, %59, %28, %140
  %143 = phi i16 [ 1, %140 ], [ 0, %28 ], [ 0, %59 ], [ 0, %69 ]
  ret i16 %143
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc signext i16 @pose_grab_with_ik_children(ptr noundef %0, ptr noundef %1) unnamed_addr #6 {
  %3 = getelementptr inbounds %struct.Bone, ptr %1, i64 0, i32 4
  %4 = load ptr, ptr %3, align 8, !tbaa !33
  %5 = icmp eq ptr %4, null
  br i1 %5, label %24, label %6

6:                                                ; preds = %2, %17
  %7 = phi ptr [ %20, %17 ], [ %4, %2 ]
  %8 = phi i16 [ %19, %17 ], [ 0, %2 ]
  %9 = phi i16 [ %18, %17 ], [ 0, %2 ]
  %10 = getelementptr inbounds %struct.Bone, ptr %7, i64 0, i32 10
  %11 = load i32, ptr %10, align 8, !tbaa !41
  %12 = and i32 %11, 16
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %17, label %14

14:                                               ; preds = %6
  %15 = tail call fastcc signext i16 @pose_grab_with_ik_children(ptr noundef %0, ptr noundef nonnull %7)
  %16 = add i16 %15, %8
  br label %17

17:                                               ; preds = %6, %14
  %18 = phi i16 [ 1, %14 ], [ %9, %6 ]
  %19 = phi i16 [ %16, %14 ], [ %8, %6 ]
  %20 = load ptr, ptr %7, align 8, !tbaa !33
  %21 = icmp eq ptr %20, null
  br i1 %21, label %22, label %6, !llvm.loop !704

22:                                               ; preds = %17
  %23 = icmp eq i16 %18, 0
  br i1 %23, label %24, label %32

24:                                               ; preds = %2, %22
  %25 = phi i16 [ %19, %22 ], [ 0, %2 ]
  %26 = getelementptr inbounds %struct.Bone, ptr %1, i64 0, i32 5
  %27 = tail call ptr @BKE_pose_channel_find_name(ptr noundef %0, ptr noundef nonnull %26) #18
  %28 = icmp eq ptr %27, null
  br i1 %28, label %32, label %29

29:                                               ; preds = %24
  %30 = tail call fastcc signext i16 @pose_grab_with_ik_add(ptr noundef nonnull %27), !range !642
  %31 = add i16 %30, %25
  br label %32

32:                                               ; preds = %24, %29, %22
  %33 = phi i16 [ %19, %22 ], [ %31, %29 ], [ %25, %24 ]
  ret i16 %33
}

declare ptr @BKE_constraint_add_for_pose(ptr noundef, ptr noundef, ptr noundef, i16 noundef signext) local_unnamed_addr #7

declare ptr @BKE_pose_channel_find_name(ptr noundef, ptr noundef) local_unnamed_addr #7

declare void @BKE_pchan_to_pose_mat(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #7

; Function Attrs: nofree norecurse nosync nounwind sspstrong memory(read, inaccessiblemem: none) uwtable
define internal fastcc zeroext i8 @constraints_list_needinv(ptr nocapture noundef readonly %0, ptr noundef readonly %1) unnamed_addr #13 {
  %3 = icmp eq ptr %1, null
  br i1 %3, label %43, label %4

4:                                                ; preds = %2
  %5 = load ptr, ptr %1, align 8, !tbaa !33
  %6 = icmp eq ptr %5, null
  br i1 %6, label %43, label %7

7:                                                ; preds = %4, %40
  %8 = phi ptr [ %41, %40 ], [ %5, %4 ]
  %9 = getelementptr inbounds %struct.bConstraint, ptr %8, i64 0, i32 4
  %10 = load i16, ptr %9, align 2, !tbaa !700
  %11 = and i16 %10, 4
  %12 = icmp eq i16 %11, 0
  br i1 %12, label %13, label %40

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct.bConstraint, ptr %8, i64 0, i32 9
  %15 = load float, ptr %14, align 8, !tbaa !46
  %16 = fcmp fast une float %15, 0.000000e+00
  br i1 %16, label %17, label %40

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.bConstraint, ptr %8, i64 0, i32 3
  %19 = load i16, ptr %18, align 8, !tbaa !44
  switch i16 %19, label %40 [
    i16 4, label %43
    i16 18, label %43
    i16 28, label %43
    i16 26, label %43
    i16 1, label %20
    i16 8, label %27
    i16 19, label %37
  ]

20:                                               ; preds = %17
  %21 = getelementptr inbounds %struct.bConstraint, ptr %8, i64 0, i32 2
  %22 = load ptr, ptr %21, align 8, !tbaa !47
  %23 = getelementptr inbounds %struct.bChildOfConstraint, ptr %22, i64 0, i32 1
  %24 = load i32, ptr %23, align 8, !tbaa !705
  %25 = and i32 %24, 7
  %26 = icmp eq i32 %25, 7
  br i1 %26, label %43, label %40

27:                                               ; preds = %17
  %28 = getelementptr inbounds %struct.bConstraint, ptr %8, i64 0, i32 2
  %29 = load ptr, ptr %28, align 8, !tbaa !47
  %30 = getelementptr inbounds %struct.bRotateLikeConstraint, ptr %29, i64 0, i32 1
  %31 = load i32, ptr %30, align 8, !tbaa !707
  %32 = and i32 %31, 128
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %40, label %34

34:                                               ; preds = %27
  %35 = load i32, ptr %0, align 8, !tbaa !161
  %36 = icmp eq i32 %35, 2
  br i1 %36, label %43, label %40

37:                                               ; preds = %17
  %38 = load i32, ptr %0, align 8, !tbaa !161
  %39 = icmp eq i32 %38, 2
  br i1 %39, label %43, label %40

40:                                               ; preds = %27, %34, %20, %17, %7, %13, %37
  %41 = load ptr, ptr %8, align 8, !tbaa !33
  %42 = icmp eq ptr %41, null
  br i1 %42, label %43, label %7, !llvm.loop !709

43:                                               ; preds = %20, %34, %17, %17, %17, %17, %37, %40, %4, %2
  %44 = phi i8 [ 0, %2 ], [ 0, %4 ], [ 1, %20 ], [ 1, %34 ], [ 1, %17 ], [ 1, %17 ], [ 1, %17 ], [ 1, %17 ], [ 1, %37 ], [ 0, %40 ]
  ret i8 %44
}

declare void @_va_mul_m3_series_3(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #7

declare ptr @CTX_data_active_base(ptr noundef) local_unnamed_addr #7

declare ptr @CTX_data_active_object(ptr noundef) local_unnamed_addr #7

declare ptr @PE_settings(ptr noundef) local_unnamed_addr #7

declare void @unit_m4(ptr noundef) local_unnamed_addr #7

declare i32 @ctx_data_list_count(ptr noundef, ptr noundef) local_unnamed_addr #7

declare i32 @CTX_data_selected_objects(ptr noundef, ptr noundef) #7

declare i32 @CTX_data_selected_bases(ptr noundef, ptr noundef) local_unnamed_addr #7

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @ObjectToTransData(ptr nocapture noundef readonly %0, ptr noundef %1, ptr noundef %2) unnamed_addr #6 {
  %4 = alloca [3 x [3 x float]], align 16
  %5 = alloca [3 x float], align 4
  %6 = alloca [3 x [3 x float]], align 16
  %7 = alloca [3 x [3 x float]], align 16
  %8 = alloca [3 x [3 x float]], align 16
  %9 = getelementptr inbounds %struct.TransInfo, ptr %0, i64 0, i32 56
  %10 = load ptr, ptr %9, align 8, !tbaa !89
  %11 = load i32, ptr %0, align 8, !tbaa !161
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %69, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %struct.Object, ptr %2, i64 0, i32 128
  %15 = load ptr, ptr %14, align 8, !tbaa !332
  %16 = icmp eq ptr %15, null
  br i1 %16, label %69, label %17

17:                                               ; preds = %13
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %4) #18
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %5) #18
  %18 = tail call fast nofpclass(nan inf) float @BKE_scene_frame_get(ptr noundef %10) #18
  %19 = getelementptr inbounds %struct.Scene, ptr %10, i64 0, i32 47
  %20 = load ptr, ptr %19, align 8, !tbaa !333
  %21 = tail call zeroext i8 @BKE_rigidbody_check_sim_running(ptr noundef %20, float noundef nofpclass(nan inf) %18) #18
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %68, label %23

23:                                               ; preds = %17
  %24 = getelementptr inbounds %struct.TransData, ptr %1, i64 0, i32 13
  %25 = load ptr, ptr %24, align 8, !tbaa !334
  %26 = getelementptr inbounds %struct.TransDataExtension, ptr %25, i64 0, i32 18
  %27 = getelementptr inbounds %struct.Object, ptr %2, i64 0, i32 33
  %28 = load float, ptr %27, align 4, !tbaa !82
  store float %28, ptr %26, align 4, !tbaa !82
  %29 = getelementptr inbounds %struct.Object, ptr %2, i64 0, i32 33, i64 1
  %30 = load float, ptr %29, align 4, !tbaa !82
  %31 = getelementptr inbounds %struct.TransDataExtension, ptr %25, i64 0, i32 18, i64 1
  store float %30, ptr %31, align 4, !tbaa !82
  %32 = getelementptr inbounds %struct.Object, ptr %2, i64 0, i32 33, i64 2
  %33 = load float, ptr %32, align 4, !tbaa !82
  %34 = getelementptr inbounds %struct.TransDataExtension, ptr %25, i64 0, i32 18, i64 2
  store float %33, ptr %34, align 4, !tbaa !82
  %35 = getelementptr inbounds %struct.Object, ptr %2, i64 0, i32 83
  %36 = load i16, ptr %35, align 8, !tbaa !683
  %37 = icmp sgt i16 %36, 0
  br i1 %37, label %38, label %48

38:                                               ; preds = %23
  %39 = getelementptr inbounds %struct.TransDataExtension, ptr %25, i64 0, i32 19
  %40 = getelementptr inbounds %struct.Object, ptr %2, i64 0, i32 39
  %41 = load float, ptr %40, align 4, !tbaa !82
  store float %41, ptr %39, align 4, !tbaa !82
  %42 = getelementptr inbounds %struct.Object, ptr %2, i64 0, i32 39, i64 1
  %43 = load float, ptr %42, align 4, !tbaa !82
  %44 = getelementptr inbounds %struct.TransDataExtension, ptr %25, i64 0, i32 19, i64 1
  store float %43, ptr %44, align 4, !tbaa !82
  %45 = getelementptr inbounds %struct.Object, ptr %2, i64 0, i32 39, i64 2
  %46 = load float, ptr %45, align 4, !tbaa !82
  %47 = getelementptr inbounds %struct.TransDataExtension, ptr %25, i64 0, i32 19, i64 2
  store float %46, ptr %47, align 4, !tbaa !82
  br label %66

48:                                               ; preds = %23
  %49 = icmp eq i16 %36, -1
  br i1 %49, label %50, label %63

50:                                               ; preds = %48
  %51 = getelementptr inbounds %struct.Object, ptr %2, i64 0, i32 45
  %52 = load float, ptr %51, align 8, !tbaa !710
  %53 = getelementptr inbounds %struct.TransDataExtension, ptr %25, i64 0, i32 22
  store float %52, ptr %53, align 8, !tbaa !335
  %54 = getelementptr inbounds %struct.TransDataExtension, ptr %25, i64 0, i32 21
  %55 = getelementptr inbounds %struct.Object, ptr %2, i64 0, i32 43
  %56 = load float, ptr %55, align 4, !tbaa !82
  store float %56, ptr %54, align 4, !tbaa !82
  %57 = getelementptr inbounds %struct.Object, ptr %2, i64 0, i32 43, i64 1
  %58 = load float, ptr %57, align 4, !tbaa !82
  %59 = getelementptr inbounds %struct.TransDataExtension, ptr %25, i64 0, i32 21, i64 1
  store float %58, ptr %59, align 4, !tbaa !82
  %60 = getelementptr inbounds %struct.Object, ptr %2, i64 0, i32 43, i64 2
  %61 = load float, ptr %60, align 4, !tbaa !82
  %62 = getelementptr inbounds %struct.TransDataExtension, ptr %25, i64 0, i32 21, i64 2
  store float %61, ptr %62, align 4, !tbaa !82
  br label %66

63:                                               ; preds = %48
  %64 = getelementptr inbounds %struct.TransDataExtension, ptr %25, i64 0, i32 20
  %65 = getelementptr inbounds %struct.Object, ptr %2, i64 0, i32 41
  tail call void @copy_qt_qt(ptr noundef nonnull %64, ptr noundef nonnull %65) #18
  br label %66

66:                                               ; preds = %50, %63, %38
  %67 = getelementptr inbounds %struct.Object, ptr %2, i64 0, i32 47
  call void @mat4_to_loc_rot_size(ptr noundef nonnull %27, ptr noundef nonnull %4, ptr noundef nonnull %5, ptr noundef nonnull %67) #18
  call void @BKE_object_mat3_to_rot(ptr noundef nonnull %2, ptr noundef nonnull %4, i8 noundef zeroext 0) #18
  br label %68

68:                                               ; preds = %66, %17
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %5) #18
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %4) #18
  br label %69

69:                                               ; preds = %68, %13, %3
  %70 = getelementptr inbounds %struct.TransData, ptr %1, i64 0, i32 10
  %71 = getelementptr inbounds %struct.Object, ptr %2, i64 0, i32 47
  call void @copy_m3_m4(ptr noundef nonnull %70, ptr noundef nonnull %71) #18
  call void @normalize_m3(ptr noundef nonnull %70) #18
  %72 = getelementptr inbounds %struct.Object, ptr %2, i64 0, i32 106
  %73 = load ptr, ptr %72, align 8, !tbaa !711
  %74 = getelementptr inbounds %struct.TransData, ptr %1, i64 0, i32 12
  store ptr %73, ptr %74, align 8, !tbaa !652
  %75 = call fastcc zeroext i8 @constraints_list_needinv(ptr noundef nonnull %0, ptr noundef nonnull %72)
  %76 = load i32, ptr %0, align 8, !tbaa !161
  %77 = icmp ne i32 %76, 0
  %78 = icmp eq i8 %75, 0
  %79 = select i1 %77, i1 %78, i1 false
  br i1 %79, label %80, label %87

80:                                               ; preds = %69
  %81 = getelementptr inbounds %struct.Object, ptr %2, i64 0, i32 55
  %82 = load i16, ptr %81, align 8, !tbaa !712
  %83 = or i16 %82, 8192
  store i16 %83, ptr %81, align 8, !tbaa !712
  %84 = load ptr, ptr %9, align 8, !tbaa !89
  call void @BKE_object_where_is_calc(ptr noundef %84, ptr noundef nonnull %2) #18
  %85 = load i16, ptr %81, align 8, !tbaa !712
  %86 = and i16 %85, -8193
  store i16 %86, ptr %81, align 8, !tbaa !712
  br label %89

87:                                               ; preds = %69
  %88 = load ptr, ptr %9, align 8, !tbaa !89
  call void @BKE_object_where_is_calc(ptr noundef %88, ptr noundef nonnull %2) #18
  br label %89

89:                                               ; preds = %80, %87
  %90 = getelementptr inbounds %struct.TransData, ptr %1, i64 0, i32 11
  store ptr %2, ptr %90, align 8, !tbaa !326
  %91 = getelementptr inbounds %struct.Object, ptr %2, i64 0, i32 33
  %92 = getelementptr inbounds %struct.TransData, ptr %1, i64 0, i32 3
  store ptr %91, ptr %92, align 8, !tbaa !182
  %93 = getelementptr inbounds %struct.TransData, ptr %1, i64 0, i32 4
  %94 = load float, ptr %91, align 4, !tbaa !82
  store float %94, ptr %93, align 4, !tbaa !82
  %95 = getelementptr inbounds %struct.Object, ptr %2, i64 0, i32 33, i64 1
  %96 = load float, ptr %95, align 4, !tbaa !82
  %97 = getelementptr inbounds %struct.TransData, ptr %1, i64 0, i32 4, i64 1
  store float %96, ptr %97, align 4, !tbaa !82
  %98 = getelementptr inbounds %struct.Object, ptr %2, i64 0, i32 33, i64 2
  %99 = load float, ptr %98, align 4, !tbaa !82
  %100 = getelementptr inbounds %struct.TransData, ptr %1, i64 0, i32 4, i64 2
  store float %99, ptr %100, align 4, !tbaa !82
  %101 = getelementptr inbounds %struct.Object, ptr %2, i64 0, i32 83
  %102 = load i16, ptr %101, align 8, !tbaa !683
  %103 = icmp sgt i16 %102, 0
  %104 = getelementptr inbounds %struct.TransData, ptr %1, i64 0, i32 13
  %105 = load ptr, ptr %104, align 8, !tbaa !334
  %106 = getelementptr inbounds %struct.TransDataExtension, ptr %105, i64 0, i32 3
  br i1 %103, label %107, label %128

107:                                              ; preds = %89
  %108 = getelementptr inbounds %struct.Object, ptr %2, i64 0, i32 39
  store ptr %108, ptr %106, align 8, !tbaa !408
  %109 = getelementptr inbounds %struct.TransDataExtension, ptr %105, i64 0, i32 9
  store ptr null, ptr %109, align 8, !tbaa !647
  %110 = getelementptr inbounds %struct.TransDataExtension, ptr %105, i64 0, i32 7
  store ptr null, ptr %110, align 8, !tbaa !648
  %111 = getelementptr inbounds %struct.TransDataExtension, ptr %105, i64 0, i32 5
  store ptr null, ptr %111, align 8, !tbaa !631
  %112 = getelementptr inbounds %struct.TransDataExtension, ptr %105, i64 0, i32 4
  %113 = load float, ptr %108, align 4, !tbaa !82
  store float %113, ptr %112, align 4, !tbaa !82
  %114 = getelementptr inbounds %struct.Object, ptr %2, i64 0, i32 39, i64 1
  %115 = load float, ptr %114, align 4, !tbaa !82
  %116 = getelementptr inbounds %struct.TransDataExtension, ptr %105, i64 0, i32 4, i64 1
  store float %115, ptr %116, align 4, !tbaa !82
  %117 = getelementptr inbounds %struct.Object, ptr %2, i64 0, i32 39, i64 2
  %118 = load float, ptr %117, align 4, !tbaa !82
  %119 = getelementptr inbounds %struct.TransDataExtension, ptr %105, i64 0, i32 4, i64 2
  store float %118, ptr %119, align 4, !tbaa !82
  %120 = getelementptr inbounds %struct.Object, ptr %2, i64 0, i32 40
  %121 = load float, ptr %120, align 4, !tbaa !82
  store float %121, ptr %105, align 4, !tbaa !82
  %122 = getelementptr inbounds %struct.Object, ptr %2, i64 0, i32 40, i64 1
  %123 = load float, ptr %122, align 4, !tbaa !82
  %124 = getelementptr inbounds float, ptr %105, i64 1
  store float %123, ptr %124, align 4, !tbaa !82
  %125 = getelementptr inbounds %struct.Object, ptr %2, i64 0, i32 40, i64 2
  %126 = load float, ptr %125, align 4, !tbaa !82
  %127 = getelementptr inbounds float, ptr %105, i64 2
  store float %126, ptr %127, align 4, !tbaa !82
  br label %157

128:                                              ; preds = %89
  %129 = icmp eq i16 %102, -1
  store ptr null, ptr %106, align 8, !tbaa !408
  br i1 %129, label %130, label %146

130:                                              ; preds = %128
  %131 = getelementptr inbounds %struct.Object, ptr %2, i64 0, i32 43
  %132 = getelementptr inbounds %struct.TransDataExtension, ptr %105, i64 0, i32 9
  store ptr %131, ptr %132, align 8, !tbaa !647
  %133 = getelementptr inbounds %struct.Object, ptr %2, i64 0, i32 45
  %134 = getelementptr inbounds %struct.TransDataExtension, ptr %105, i64 0, i32 7
  store ptr %133, ptr %134, align 8, !tbaa !648
  %135 = getelementptr inbounds %struct.TransDataExtension, ptr %105, i64 0, i32 5
  store ptr null, ptr %135, align 8, !tbaa !631
  %136 = load float, ptr %133, align 8, !tbaa !710
  %137 = getelementptr inbounds %struct.TransDataExtension, ptr %105, i64 0, i32 8
  store float %136, ptr %137, align 8, !tbaa !649
  %138 = getelementptr inbounds %struct.TransDataExtension, ptr %105, i64 0, i32 10
  %139 = load float, ptr %131, align 4, !tbaa !82
  store float %139, ptr %138, align 4, !tbaa !82
  %140 = getelementptr inbounds %struct.Object, ptr %2, i64 0, i32 43, i64 1
  %141 = load float, ptr %140, align 4, !tbaa !82
  %142 = getelementptr inbounds %struct.TransDataExtension, ptr %105, i64 0, i32 10, i64 1
  store float %141, ptr %142, align 4, !tbaa !82
  %143 = getelementptr inbounds %struct.Object, ptr %2, i64 0, i32 43, i64 2
  %144 = load float, ptr %143, align 4, !tbaa !82
  %145 = getelementptr inbounds %struct.TransDataExtension, ptr %105, i64 0, i32 10, i64 2
  store float %144, ptr %145, align 4, !tbaa !82
  br label %157

146:                                              ; preds = %128
  %147 = getelementptr inbounds %struct.TransDataExtension, ptr %105, i64 0, i32 9
  store ptr null, ptr %147, align 8, !tbaa !647
  %148 = getelementptr inbounds %struct.TransDataExtension, ptr %105, i64 0, i32 7
  store ptr null, ptr %148, align 8, !tbaa !648
  %149 = getelementptr inbounds %struct.Object, ptr %2, i64 0, i32 41
  %150 = getelementptr inbounds %struct.TransDataExtension, ptr %105, i64 0, i32 5
  store ptr %149, ptr %150, align 8, !tbaa !631
  %151 = getelementptr inbounds %struct.TransDataExtension, ptr %105, i64 0, i32 6
  call void @copy_qt_qt(ptr noundef nonnull %151, ptr noundef nonnull %149) #18
  %152 = load ptr, ptr %104, align 8, !tbaa !334
  %153 = getelementptr inbounds %struct.TransDataExtension, ptr %152, i64 0, i32 1
  %154 = getelementptr inbounds %struct.Object, ptr %2, i64 0, i32 42
  call void @copy_qt_qt(ptr noundef nonnull %153, ptr noundef nonnull %154) #18
  %155 = load i16, ptr %101, align 8, !tbaa !683
  %156 = load ptr, ptr %104, align 8, !tbaa !334
  br label %157

157:                                              ; preds = %130, %146, %107
  %158 = phi ptr [ %105, %130 ], [ %156, %146 ], [ %105, %107 ]
  %159 = phi i16 [ -1, %130 ], [ %155, %146 ], [ %102, %107 ]
  %160 = sext i16 %159 to i32
  %161 = getelementptr inbounds %struct.TransDataExtension, ptr %158, i64 0, i32 17
  store i32 %160, ptr %161, align 8, !tbaa !650
  %162 = getelementptr inbounds %struct.Object, ptr %2, i64 0, i32 36
  %163 = getelementptr inbounds %struct.TransDataExtension, ptr %158, i64 0, i32 11
  store ptr %162, ptr %163, align 8, !tbaa !409
  %164 = getelementptr inbounds %struct.TransDataExtension, ptr %158, i64 0, i32 12
  %165 = load float, ptr %162, align 4, !tbaa !82
  store float %165, ptr %164, align 4, !tbaa !82
  %166 = getelementptr inbounds %struct.Object, ptr %2, i64 0, i32 36, i64 1
  %167 = load float, ptr %166, align 4, !tbaa !82
  %168 = getelementptr inbounds %struct.TransDataExtension, ptr %158, i64 0, i32 12, i64 1
  store float %167, ptr %168, align 4, !tbaa !82
  %169 = getelementptr inbounds %struct.Object, ptr %2, i64 0, i32 36, i64 2
  %170 = load float, ptr %169, align 4, !tbaa !82
  %171 = getelementptr inbounds %struct.TransDataExtension, ptr %158, i64 0, i32 12, i64 2
  store float %170, ptr %171, align 4, !tbaa !82
  %172 = getelementptr inbounds %struct.TransDataExtension, ptr %158, i64 0, i32 2
  %173 = getelementptr inbounds %struct.Object, ptr %2, i64 0, i32 38
  %174 = load float, ptr %173, align 4, !tbaa !82
  store float %174, ptr %172, align 4, !tbaa !82
  %175 = getelementptr inbounds %struct.Object, ptr %2, i64 0, i32 38, i64 1
  %176 = load float, ptr %175, align 4, !tbaa !82
  %177 = getelementptr inbounds %struct.TransDataExtension, ptr %158, i64 0, i32 2, i64 1
  store float %176, ptr %177, align 4, !tbaa !82
  %178 = getelementptr inbounds %struct.Object, ptr %2, i64 0, i32 38, i64 2
  %179 = load float, ptr %178, align 4, !tbaa !82
  %180 = getelementptr inbounds %struct.TransDataExtension, ptr %158, i64 0, i32 2, i64 2
  store float %179, ptr %180, align 4, !tbaa !82
  %181 = getelementptr inbounds %struct.TransData, ptr %1, i64 0, i32 7
  %182 = getelementptr inbounds %struct.Object, ptr %2, i64 0, i32 47, i64 3
  %183 = load float, ptr %182, align 4, !tbaa !82
  store float %183, ptr %181, align 4, !tbaa !82
  %184 = getelementptr inbounds %struct.Object, ptr %2, i64 0, i32 47, i64 3, i64 1
  %185 = load float, ptr %184, align 4, !tbaa !82
  %186 = getelementptr inbounds %struct.TransData, ptr %1, i64 0, i32 7, i64 1
  store float %185, ptr %186, align 4, !tbaa !82
  %187 = getelementptr inbounds %struct.Object, ptr %2, i64 0, i32 47, i64 3, i64 2
  %188 = load float, ptr %187, align 4, !tbaa !82
  %189 = getelementptr inbounds %struct.TransData, ptr %1, i64 0, i32 7, i64 2
  store float %188, ptr %189, align 4, !tbaa !82
  %190 = getelementptr inbounds %struct.TransDataExtension, ptr %158, i64 0, i32 13
  call void @copy_m4_m4(ptr noundef nonnull %190, ptr noundef nonnull %71) #18
  %191 = getelementptr inbounds %struct.Object, ptr %2, i64 0, i32 9
  %192 = load ptr, ptr %191, align 8, !tbaa !667
  %193 = icmp ne ptr %192, null
  %194 = icmp ne i8 %75, 0
  %195 = select i1 %193, i1 true, i1 %194
  br i1 %195, label %196, label %201

196:                                              ; preds = %157
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %6) #18
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %7) #18
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %8) #18
  call void @BKE_object_to_mat3(ptr noundef nonnull %2, ptr noundef nonnull %6) #18
  call void @copy_m3_m4(ptr noundef nonnull %7, ptr noundef nonnull %71) #18
  %197 = call zeroext i8 @invert_m3_m3(ptr noundef nonnull %8, ptr noundef nonnull %7) #18
  %198 = getelementptr inbounds %struct.TransData, ptr %1, i64 0, i32 9
  call void @mul_m3_m3m3(ptr noundef nonnull %198, ptr noundef nonnull %6, ptr noundef nonnull %8) #18
  %199 = getelementptr inbounds %struct.TransData, ptr %1, i64 0, i32 8
  %200 = call zeroext i8 @invert_m3_m3(ptr noundef nonnull %199, ptr noundef nonnull %198) #18
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %8) #18
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %7) #18
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %6) #18
  br label %204

201:                                              ; preds = %157
  %202 = getelementptr inbounds %struct.TransData, ptr %1, i64 0, i32 9
  call void @unit_m3(ptr noundef nonnull %202) #18
  %203 = getelementptr inbounds %struct.TransData, ptr %1, i64 0, i32 8
  call void @unit_m3(ptr noundef nonnull %203) #18
  br label %204

204:                                              ; preds = %201, %196
  ret void
}

declare void @BKE_scene_base_flag_to_objects(ptr noundef) local_unnamed_addr #7

declare void @DAG_scene_relations_update(ptr noundef, ptr noundef) local_unnamed_addr #7

declare void @BKE_object_handle_update(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #7

declare void @DAG_scene_flush_update(ptr noundef, ptr noundef, i32 noundef, i16 noundef signext) local_unnamed_addr #7

; Function Attrs: nofree nosync nounwind sspstrong memory(argmem: readwrite) uwtable
define internal fastcc zeroext i8 @mark_children(ptr nocapture noundef %0) unnamed_addr #14 {
  %2 = getelementptr inbounds %struct.Object, ptr %0, i64 0, i32 53
  %3 = load i16, ptr %2, align 4, !tbaa !668
  %4 = and i16 %3, 257
  %5 = icmp eq i16 %4, 0
  br i1 %5, label %6, label %16

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.Object, ptr %0, i64 0, i32 9
  %8 = load ptr, ptr %7, align 8, !tbaa !667
  %9 = icmp eq ptr %8, null
  br i1 %9, label %16, label %10

10:                                               ; preds = %6
  %11 = tail call fastcc zeroext i8 @mark_children(ptr noundef nonnull %8), !range !674
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %16, label %13

13:                                               ; preds = %10
  %14 = load i16, ptr %2, align 4, !tbaa !668
  %15 = or i16 %14, 256
  store i16 %15, ptr %2, align 4, !tbaa !668
  br label %16

16:                                               ; preds = %6, %10, %1, %13
  %17 = phi i8 [ 1, %13 ], [ 1, %1 ], [ 0, %10 ], [ 0, %6 ]
  ret i8 %17
}

declare void @mat4_to_loc_rot_size(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #7

declare void @BKE_object_mat3_to_rot(ptr noundef, ptr noundef, i8 noundef zeroext) local_unnamed_addr #7

declare void @BKE_object_where_is_calc(ptr noundef, ptr noundef) local_unnamed_addr #7

declare void @copy_m4_m4(ptr noundef, ptr noundef) local_unnamed_addr #7

declare void @BKE_object_to_mat3(ptr noundef, ptr noundef) local_unnamed_addr #7

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.minnum.f32(float, float) #15

; Function Attrs: nofree nounwind
declare noundef i32 @puts(ptr nocapture noundef readonly) local_unnamed_addr #16

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smin.i32(i32, i32) #15

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i16 @llvm.smin.i16(i16, i16) #15

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: readwrite)
declare void @llvm.assume(i1 noundef) #17

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.umin.i32(i32, i32) #15

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <2 x float> @llvm.floor.v2f32(<2 x float>) #15

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.vector.reduce.add.v4i32(<4 x i32>) #15

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.vector.reduce.add.v8i32(<8 x i32>) #15

attributes #0 = { nofree nounwind sspstrong uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #1 = { mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #2 = { nofree "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #3 = { mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #4 = { nofree nosync nounwind sspstrong memory(readwrite, inaccessiblemem: none) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #5 = { nofree norecurse nosync nounwind sspstrong memory(readwrite, inaccessiblemem: none) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #6 = { nounwind sspstrong uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #7 = { "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #8 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #9 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #10 = { mustprogress nofree nounwind willreturn memory(argmem: read) "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #11 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #12 = { mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: readwrite) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #13 = { nofree norecurse nosync nounwind sspstrong memory(read, inaccessiblemem: none) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #14 = { nofree nosync nounwind sspstrong memory(argmem: readwrite) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #15 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #16 = { nofree nounwind }
attributes #17 = { nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: readwrite) }
attributes #18 = { nounwind }
attributes #19 = { nounwind willreturn memory(read) }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{!"clang version 17.0.6"}
!5 = !{!6, !7, i64 48}
!6 = !{!"TransInfo", !7, i64 0, !7, i64 4, !7, i64 8, !10, i64 12, !7, i64 16, !11, i64 20, !11, i64 24, !12, i64 32, !12, i64 40, !7, i64 48, !12, i64 56, !12, i64 64, !12, i64 72, !13, i64 80, !14, i64 296, !17, i64 440, !18, i64 584, !8, i64 640, !11, i64 644, !8, i64 648, !8, i64 668, !8, i64 680, !8, i64 688, !10, i64 696, !10, i64 698, !8, i64 700, !8, i64 712, !8, i64 716, !8, i64 780, !8, i64 844, !8, i64 908, !10, i64 972, !10, i64 974, !8, i64 976, !8, i64 977, !8, i64 980, !8, i64 992, !8, i64 1028, !8, i64 1064, !12, i64 1128, !12, i64 1136, !12, i64 1144, !10, i64 1152, !10, i64 1154, !10, i64 1156, !10, i64 1158, !10, i64 1160, !8, i64 1164, !8, i64 1180, !8, i64 1196, !8, i64 1208, !8, i64 1220, !12, i64 1224, !12, i64 1232, !12, i64 1240, !12, i64 1248, !12, i64 1256, !12, i64 1264, !12, i64 1272, !12, i64 1280, !12, i64 1288, !8, i64 1296, !11, i64 1304, !12, i64 1312, !8, i64 1320, !12, i64 1360, !12, i64 1368, !12, i64 1376, !12, i64 1384}
!7 = !{!"int", !8, i64 0}
!8 = !{!"omnipotent char", !9, i64 0}
!9 = !{!"Simple C/C++ TBAA"}
!10 = !{!"short", !8, i64 0}
!11 = !{!"float", !8, i64 0}
!12 = !{!"any pointer", !8, i64 0}
!13 = !{!"TransCon", !10, i64 0, !8, i64 2, !8, i64 52, !8, i64 88, !8, i64 124, !8, i64 160, !8, i64 172, !7, i64 180, !12, i64 184, !12, i64 192, !12, i64 200, !12, i64 208}
!14 = !{!"TransSnap", !10, i64 0, !10, i64 2, !10, i64 4, !10, i64 6, !8, i64 8, !8, i64 9, !8, i64 10, !8, i64 11, !10, i64 12, !8, i64 16, !8, i64 28, !8, i64 40, !8, i64 52, !8, i64 64, !15, i64 72, !12, i64 88, !11, i64 96, !16, i64 104, !12, i64 112, !12, i64 120, !12, i64 128, !12, i64 136}
!15 = !{!"ListBase", !12, i64 0, !12, i64 8}
!16 = !{!"double", !8, i64 0}
!17 = !{!"NumInput", !10, i64 0, !7, i64 4, !8, i64 8, !8, i64 20, !10, i64 22, !8, i64 24, !8, i64 32, !8, i64 44, !8, i64 56, !10, i64 68, !8, i64 70, !7, i64 136}
!18 = !{!"MouseInput", !12, i64 0, !12, i64 8, !8, i64 16, !8, i64 24, !8, i64 28, !8, i64 36, !11, i64 44, !12, i64 48}
!19 = !{!6, !12, i64 56}
!20 = !{!21, !7, i64 216}
!21 = !{!"TransData", !11, i64 0, !11, i64 4, !11, i64 8, !12, i64 16, !8, i64 24, !12, i64 40, !11, i64 48, !8, i64 52, !8, i64 64, !8, i64 100, !8, i64 136, !12, i64 176, !12, i64 184, !12, i64 192, !12, i64 200, !12, i64 208, !7, i64 216, !10, i64 220}
!22 = distinct !{!22, !23}
!23 = !{!"llvm.loop.mustprogress"}
!24 = !{!6, !7, i64 4}
!25 = !{!21, !11, i64 0}
!26 = !{!21, !11, i64 4}
!27 = !{!7, !7, i64 0}
!28 = !{!29, !12, i64 288}
!29 = !{!"Object", !30, i64 0, !12, i64 120, !12, i64 128, !10, i64 136, !10, i64 138, !7, i64 140, !7, i64 144, !7, i64 148, !8, i64 152, !12, i64 216, !12, i64 224, !12, i64 232, !12, i64 240, !12, i64 248, !12, i64 256, !12, i64 264, !12, i64 272, !12, i64 280, !12, i64 288, !12, i64 296, !12, i64 304, !31, i64 312, !12, i64 360, !15, i64 368, !15, i64 384, !15, i64 400, !15, i64 416, !7, i64 432, !7, i64 436, !12, i64 440, !12, i64 448, !7, i64 456, !7, i64 460, !8, i64 464, !8, i64 476, !8, i64 488, !8, i64 500, !8, i64 512, !8, i64 524, !8, i64 536, !8, i64 548, !8, i64 560, !8, i64 576, !8, i64 592, !8, i64 604, !11, i64 616, !11, i64 620, !8, i64 624, !8, i64 688, !8, i64 752, !8, i64 816, !8, i64 880, !7, i64 944, !10, i64 948, !10, i64 950, !10, i64 952, !10, i64 954, !10, i64 956, !10, i64 958, !10, i64 960, !10, i64 962, !10, i64 964, !8, i64 966, !8, i64 967, !7, i64 968, !7, i64 972, !7, i64 976, !7, i64 980, !7, i64 984, !11, i64 988, !11, i64 992, !11, i64 996, !11, i64 1000, !11, i64 1004, !11, i64 1008, !11, i64 1012, !11, i64 1016, !11, i64 1020, !11, i64 1024, !11, i64 1028, !11, i64 1032, !10, i64 1036, !10, i64 1038, !10, i64 1040, !8, i64 1042, !8, i64 1043, !10, i64 1044, !8, i64 1046, !8, i64 1047, !11, i64 1048, !11, i64 1052, !15, i64 1056, !15, i64 1072, !15, i64 1088, !15, i64 1104, !11, i64 1120, !10, i64 1124, !10, i64 1126, !8, i64 1128, !7, i64 1144, !7, i64 1148, !12, i64 1152, !8, i64 1160, !8, i64 1161, !10, i64 1162, !8, i64 1164, !15, i64 1176, !15, i64 1192, !15, i64 1208, !15, i64 1224, !12, i64 1240, !12, i64 1248, !12, i64 1256, !8, i64 1264, !8, i64 1265, !10, i64 1266, !11, i64 1268, !12, i64 1272, !12, i64 1280, !12, i64 1288, !12, i64 1296, !32, i64 1304, !32, i64 1312, !7, i64 1320, !7, i64 1324, !15, i64 1328, !15, i64 1344, !12, i64 1360, !12, i64 1368, !12, i64 1376, !8, i64 1384, !12, i64 1392, !15, i64 1400, !12, i64 1416}
!30 = !{!"ID", !12, i64 0, !12, i64 8, !12, i64 16, !12, i64 24, !8, i64 32, !10, i64 98, !7, i64 100, !7, i64 104, !7, i64 108, !12, i64 112}
!31 = !{!"bAnimVizSettings", !7, i64 0, !7, i64 4, !7, i64 8, !7, i64 12, !10, i64 16, !10, i64 18, !10, i64 20, !10, i64 22, !10, i64 24, !10, i64 26, !10, i64 28, !10, i64 30, !7, i64 32, !7, i64 36, !7, i64 40, !7, i64 44}
!32 = !{!"long", !8, i64 0}
!33 = !{!12, !12, i64 0}
!34 = !{!29, !12, i64 296}
!35 = !{!36, !7, i64 216}
!36 = !{!"bArmature", !30, i64 0, !12, i64 120, !15, i64 128, !15, i64 144, !12, i64 160, !12, i64 168, !12, i64 176, !12, i64 184, !7, i64 192, !7, i64 196, !7, i64 200, !7, i64 204, !10, i64 208, !10, i64 210, !7, i64 212, !7, i64 216, !7, i64 220, !10, i64 224, !10, i64 226, !10, i64 228, !10, i64 230, !7, i64 232, !7, i64 236, !7, i64 240, !7, i64 244, !7, i64 248, !7, i64 252}
!37 = !{!38, !12, i64 120}
!38 = !{!"bPoseChannel", !12, i64 0, !12, i64 8, !12, i64 16, !15, i64 24, !8, i64 40, !10, i64 104, !10, i64 106, !10, i64 108, !10, i64 110, !8, i64 112, !8, i64 113, !8, i64 114, !12, i64 120, !12, i64 128, !12, i64 136, !15, i64 144, !15, i64 160, !12, i64 176, !12, i64 184, !12, i64 192, !8, i64 200, !8, i64 212, !8, i64 224, !8, i64 236, !8, i64 252, !11, i64 264, !10, i64 268, !10, i64 270, !8, i64 272, !8, i64 336, !8, i64 400, !8, i64 464, !8, i64 476, !8, i64 488, !8, i64 500, !8, i64 512, !11, i64 524, !11, i64 528, !11, i64 532, !12, i64 536}
!39 = !{!40, !7, i64 320}
!40 = !{!"Bone", !12, i64 0, !12, i64 8, !12, i64 16, !12, i64 24, !15, i64 32, !8, i64 48, !11, i64 112, !8, i64 116, !8, i64 128, !8, i64 140, !7, i64 176, !8, i64 180, !8, i64 192, !8, i64 204, !11, i64 268, !11, i64 272, !11, i64 276, !11, i64 280, !11, i64 284, !11, i64 288, !11, i64 292, !11, i64 296, !11, i64 300, !11, i64 304, !8, i64 308, !7, i64 320, !10, i64 324, !8, i64 326}
!41 = !{!40, !7, i64 176}
!42 = distinct !{!42, !23}
!43 = distinct !{!43, !23}
!44 = !{!45, !10, i64 24}
!45 = !{!"bConstraint", !12, i64 0, !12, i64 8, !12, i64 16, !10, i64 24, !10, i64 26, !8, i64 28, !8, i64 29, !8, i64 30, !10, i64 94, !11, i64 96, !11, i64 100, !12, i64 104, !11, i64 112, !11, i64 116}
!46 = !{!45, !11, i64 96}
!47 = !{!45, !12, i64 16}
!48 = !{!49, !12, i64 0}
!49 = !{!"bKinematicConstraint", !12, i64 0, !10, i64 8, !10, i64 10, !10, i64 12, !10, i64 14, !8, i64 16, !12, i64 80, !8, i64 88, !11, i64 152, !11, i64 156, !11, i64 160, !8, i64 164, !10, i64 176, !10, i64 178, !11, i64 180}
!50 = !{!29, !10, i64 136}
!51 = !{!8, !8, i64 0}
!52 = distinct !{!52, !23}
!53 = !{!38, !12, i64 128}
!54 = !{!38, !10, i64 108}
!55 = distinct !{!55, !23}
!56 = distinct !{!56, !23}
!57 = !{!6, !12, i64 1264}
!58 = !{!10, !10, i64 0}
!59 = !{!6, !12, i64 1128}
!60 = !{!38, !8, i64 112}
!61 = !{!49, !10, i64 10}
!62 = !{!49, !10, i64 14}
!63 = !{!49, !10, i64 12}
!64 = distinct !{!64, !23}
!65 = distinct !{!65, !23}
!66 = !{!6, !12, i64 1136}
!67 = !{!68, !12, i64 0}
!68 = !{!"BoneInitData", !12, i64 0, !8, i64 8, !11, i64 20, !11, i64 24, !8, i64 28, !11, i64 40, !11, i64 44, !11, i64 48}
!69 = !{!6, !12, i64 1312}
!70 = !{!36, !7, i64 192}
!71 = !{!68, !11, i64 40}
!72 = !{!73, !11, i64 140}
!73 = !{!"EditBone", !12, i64 0, !12, i64 8, !12, i64 16, !12, i64 24, !12, i64 32, !8, i64 40, !11, i64 104, !8, i64 108, !8, i64 120, !7, i64 132, !7, i64 136, !11, i64 140, !11, i64 144, !11, i64 148, !11, i64 152, !11, i64 156, !11, i64 160, !11, i64 164, !11, i64 168, !11, i64 172, !11, i64 176, !10, i64 180}
!74 = !{!68, !11, i64 20}
!75 = !{!73, !11, i64 172}
!76 = !{!68, !11, i64 24}
!77 = !{!73, !11, i64 104}
!78 = !{!68, !11, i64 44}
!79 = !{!73, !11, i64 148}
!80 = !{!68, !11, i64 48}
!81 = !{!73, !11, i64 156}
!82 = !{!11, !11, i64 0}
!83 = distinct !{!83, !23}
!84 = !{!36, !12, i64 160}
!85 = !{!73, !7, i64 132}
!86 = !{!73, !12, i64 24}
!87 = !{!73, !11, i64 168}
!88 = distinct !{!88, !23}
!89 = !{!6, !12, i64 1256}
!90 = !{!91, !12, i64 168}
!91 = !{!"Scene", !30, i64 0, !12, i64 120, !12, i64 128, !12, i64 136, !12, i64 144, !15, i64 152, !12, i64 168, !12, i64 176, !8, i64 184, !8, i64 196, !8, i64 208, !8, i64 220, !7, i64 232, !7, i64 236, !7, i64 240, !10, i64 244, !8, i64 246, !8, i64 247, !12, i64 248, !12, i64 256, !12, i64 264, !12, i64 272, !92, i64 280, !101, i64 4264, !15, i64 4296, !15, i64 4312, !12, i64 4328, !12, i64 4336, !12, i64 4344, !12, i64 4352, !12, i64 4360, !12, i64 4368, !10, i64 4376, !10, i64 4378, !7, i64 4380, !15, i64 4384, !102, i64 4400, !103, i64 4416, !106, i64 4600, !12, i64 4608, !107, i64 4616, !12, i64 4640, !32, i64 4648, !32, i64 4656, !94, i64 4664, !95, i64 4824, !108, i64 4888, !12, i64 4952}
!92 = !{!"RenderData", !93, i64 0, !12, i64 248, !12, i64 256, !96, i64 264, !97, i64 328, !7, i64 400, !7, i64 404, !7, i64 408, !11, i64 412, !7, i64 416, !7, i64 420, !7, i64 424, !7, i64 428, !10, i64 432, !10, i64 434, !11, i64 436, !11, i64 440, !11, i64 444, !11, i64 448, !11, i64 452, !10, i64 456, !10, i64 458, !10, i64 460, !10, i64 462, !10, i64 464, !10, i64 466, !7, i64 468, !10, i64 472, !10, i64 474, !10, i64 476, !10, i64 478, !10, i64 480, !10, i64 482, !7, i64 484, !7, i64 488, !10, i64 492, !10, i64 494, !7, i64 496, !7, i64 500, !10, i64 504, !10, i64 506, !10, i64 508, !10, i64 510, !10, i64 512, !8, i64 514, !8, i64 515, !7, i64 516, !7, i64 520, !7, i64 524, !10, i64 528, !10, i64 530, !10, i64 532, !10, i64 534, !10, i64 536, !10, i64 538, !10, i64 540, !10, i64 542, !98, i64 544, !98, i64 560, !99, i64 576, !15, i64 592, !10, i64 608, !10, i64 610, !11, i64 612, !11, i64 616, !11, i64 620, !11, i64 624, !7, i64 628, !11, i64 632, !11, i64 636, !11, i64 640, !11, i64 644, !10, i64 648, !10, i64 650, !10, i64 652, !10, i64 654, !10, i64 656, !10, i64 658, !11, i64 660, !11, i64 664, !10, i64 668, !10, i64 670, !11, i64 672, !11, i64 676, !8, i64 680, !7, i64 1704, !10, i64 1708, !10, i64 1710, !8, i64 1712, !8, i64 2480, !8, i64 2496, !8, i64 2512, !8, i64 2513, !8, i64 2514, !8, i64 2515, !7, i64 2520, !10, i64 2524, !10, i64 2526, !11, i64 2528, !11, i64 2532, !10, i64 2536, !10, i64 2538, !11, i64 2540, !10, i64 2544, !10, i64 2546, !7, i64 2548, !10, i64 2552, !10, i64 2554, !10, i64 2556, !10, i64 2558, !11, i64 2560, !11, i64 2564, !12, i64 2568, !7, i64 2576, !11, i64 2580, !8, i64 2584, !100, i64 2616, !7, i64 3976, !7, i64 3980}
!93 = !{!"ImageFormatData", !8, i64 0, !8, i64 1, !8, i64 2, !8, i64 3, !8, i64 4, !8, i64 5, !8, i64 6, !8, i64 7, !10, i64 8, !10, i64 10, !11, i64 12, !8, i64 16, !8, i64 17, !8, i64 18, !94, i64 24, !95, i64 184}
!94 = !{!"ColorManagedViewSettings", !7, i64 0, !7, i64 4, !8, i64 8, !8, i64 72, !11, i64 136, !11, i64 140, !12, i64 144, !12, i64 152}
!95 = !{!"ColorManagedDisplaySettings", !8, i64 0}
!96 = !{!"QuicktimeCodecSettings", !7, i64 0, !7, i64 4, !7, i64 8, !7, i64 12, !7, i64 16, !7, i64 20, !7, i64 24, !7, i64 28, !7, i64 32, !7, i64 36, !7, i64 40, !7, i64 44, !10, i64 48, !10, i64 50, !7, i64 52, !7, i64 56, !7, i64 60}
!97 = !{!"FFMpegCodecData", !7, i64 0, !7, i64 4, !7, i64 8, !7, i64 12, !7, i64 16, !7, i64 20, !7, i64 24, !7, i64 28, !11, i64 32, !7, i64 36, !7, i64 40, !7, i64 44, !7, i64 48, !7, i64 52, !7, i64 56, !7, i64 60, !12, i64 64}
!98 = !{!"rctf", !11, i64 0, !11, i64 4, !11, i64 8, !11, i64 12}
!99 = !{!"rcti", !7, i64 0, !7, i64 4, !7, i64 8, !7, i64 12}
!100 = !{!"BakeData", !93, i64 0, !8, i64 248, !10, i64 1272, !10, i64 1274, !10, i64 1276, !10, i64 1278, !11, i64 1280, !11, i64 1284, !8, i64 1288, !8, i64 1291, !8, i64 1292, !8, i64 1293, !8, i64 1296}
!101 = !{!"AudioData", !7, i64 0, !11, i64 4, !11, i64 8, !11, i64 12, !7, i64 16, !10, i64 20, !10, i64 22, !11, i64 24, !11, i64 28}
!102 = !{!"GameFraming", !8, i64 0, !8, i64 12, !8, i64 13, !8, i64 14, !8, i64 15}
!103 = !{!"GameData", !102, i64 0, !10, i64 16, !10, i64 18, !10, i64 20, !10, i64 22, !10, i64 24, !10, i64 26, !10, i64 28, !10, i64 30, !10, i64 32, !8, i64 34, !104, i64 40, !10, i64 64, !10, i64 66, !11, i64 68, !105, i64 72, !11, i64 128, !11, i64 132, !7, i64 136, !10, i64 140, !10, i64 142, !10, i64 144, !10, i64 146, !10, i64 148, !10, i64 150, !10, i64 152, !10, i64 154, !10, i64 156, !10, i64 158, !10, i64 160, !10, i64 162, !11, i64 164, !11, i64 168, !11, i64 172, !11, i64 176, !11, i64 180}
!104 = !{!"GameDome", !10, i64 0, !10, i64 2, !10, i64 4, !10, i64 6, !11, i64 8, !11, i64 12, !12, i64 16}
!105 = !{!"RecastData", !11, i64 0, !11, i64 4, !11, i64 8, !11, i64 12, !11, i64 16, !11, i64 20, !11, i64 24, !11, i64 28, !11, i64 32, !11, i64 36, !7, i64 40, !11, i64 44, !11, i64 48, !10, i64 52, !10, i64 54}
!106 = !{!"UnitSettings", !11, i64 0, !8, i64 4, !8, i64 5, !10, i64 6}
!107 = !{!"PhysicsSettings", !8, i64 0, !7, i64 12, !7, i64 16, !7, i64 20}
!108 = !{!"ColorManagedColorspaceSettings", !8, i64 0}
!109 = !{!110, !12, i64 32}
!110 = !{!"Base", !12, i64 0, !12, i64 8, !7, i64 16, !7, i64 20, !7, i64 24, !10, i64 28, !10, i64 30, !12, i64 32}
!111 = !{!112, !12, i64 232}
!112 = !{!"PTCacheEdit", !15, i64 0, !12, i64 16, !12, i64 24, !113, i64 32, !12, i64 232, !12, i64 240, !12, i64 248, !12, i64 256, !12, i64 264, !12, i64 272, !15, i64 280, !7, i64 296, !7, i64 300, !7, i64 304, !7, i64 308, !8, i64 312, !8, i64 315}
!113 = !{!"PTCacheID", !12, i64 0, !12, i64 8, !12, i64 16, !12, i64 24, !12, i64 32, !7, i64 40, !7, i64 44, !7, i64 48, !7, i64 52, !7, i64 56, !7, i64 60, !7, i64 64, !12, i64 72, !12, i64 80, !12, i64 88, !12, i64 96, !12, i64 104, !12, i64 112, !12, i64 120, !12, i64 128, !12, i64 136, !12, i64 144, !12, i64 152, !12, i64 160, !12, i64 168, !12, i64 176, !12, i64 184, !12, i64 192}
!114 = !{!112, !12, i64 24}
!115 = !{!112, !7, i64 296}
!116 = !{!117, !10, i64 12}
!117 = !{!"PTCacheEditPoint", !12, i64 0, !7, i64 8, !10, i64 12}
!118 = distinct !{!118, !23, !119, !120}
!119 = !{!"llvm.loop.isvectorized", i32 1}
!120 = !{!"llvm.loop.unroll.runtime.disable"}
!121 = distinct !{!121, !23, !119, !120}
!122 = distinct !{!122, !23, !120, !119}
!123 = !{!124, !7, i64 316}
!124 = !{!"ParticleSystem", !12, i64 0, !12, i64 8, !12, i64 16, !12, i64 24, !12, i64 32, !12, i64 40, !12, i64 48, !12, i64 56, !12, i64 64, !15, i64 72, !15, i64 88, !12, i64 104, !12, i64 112, !12, i64 120, !12, i64 128, !12, i64 136, !12, i64 144, !15, i64 152, !8, i64 168, !8, i64 232, !11, i64 296, !11, i64 300, !11, i64 304, !7, i64 308, !7, i64 312, !7, i64 316, !7, i64 320, !7, i64 324, !7, i64 328, !7, i64 332, !7, i64 336, !10, i64 340, !10, i64 342, !10, i64 344, !10, i64 346, !8, i64 348, !8, i64 540, !10, i64 564, !10, i64 566, !12, i64 568, !12, i64 576, !15, i64 584, !12, i64 600, !12, i64 608, !7, i64 616, !7, i64 620, !12, i64 624, !12, i64 632, !12, i64 640, !11, i64 648, !11, i64 652}
!125 = !{!126, !12, i64 120}
!126 = !{!"ParticleSystemModifierData", !127, i64 0, !12, i64 112, !12, i64 120, !7, i64 128, !7, i64 132, !7, i64 136, !10, i64 140, !10, i64 142}
!127 = !{!"ModifierData", !12, i64 0, !12, i64 8, !7, i64 16, !7, i64 20, !7, i64 24, !7, i64 28, !8, i64 32, !12, i64 96, !12, i64 104}
!128 = !{!124, !12, i64 16}
!129 = !{!130, !10, i64 162}
!130 = !{!"ParticleSettings", !30, i64 0, !12, i64 120, !12, i64 128, !12, i64 136, !12, i64 144, !7, i64 152, !7, i64 156, !10, i64 160, !10, i64 162, !10, i64 164, !10, i64 166, !10, i64 168, !10, i64 170, !10, i64 172, !10, i64 174, !7, i64 176, !7, i64 180, !10, i64 184, !10, i64 186, !10, i64 188, !10, i64 190, !10, i64 192, !10, i64 194, !10, i64 196, !10, i64 198, !10, i64 200, !10, i64 202, !10, i64 204, !10, i64 206, !10, i64 208, !10, i64 210, !10, i64 212, !10, i64 214, !10, i64 216, !10, i64 218, !10, i64 220, !10, i64 222, !10, i64 224, !10, i64 226, !10, i64 228, !10, i64 230, !11, i64 232, !11, i64 236, !8, i64 240, !8, i64 248, !11, i64 256, !11, i64 260, !11, i64 264, !10, i64 268, !10, i64 270, !11, i64 272, !11, i64 276, !11, i64 280, !11, i64 284, !11, i64 288, !11, i64 292, !11, i64 296, !11, i64 300, !11, i64 304, !11, i64 308, !11, i64 312, !11, i64 316, !8, i64 320, !7, i64 324, !7, i64 328, !7, i64 332, !7, i64 336, !10, i64 340, !8, i64 342, !11, i64 348, !11, i64 352, !11, i64 356, !11, i64 360, !11, i64 364, !11, i64 368, !11, i64 372, !8, i64 376, !11, i64 388, !11, i64 392, !11, i64 396, !11, i64 400, !11, i64 404, !11, i64 408, !11, i64 412, !8, i64 416, !11, i64 428, !11, i64 432, !11, i64 436, !11, i64 440, !7, i64 444, !7, i64 448, !11, i64 452, !11, i64 456, !11, i64 460, !11, i64 464, !11, i64 468, !11, i64 472, !11, i64 476, !11, i64 480, !11, i64 484, !11, i64 488, !11, i64 492, !11, i64 496, !11, i64 500, !11, i64 504, !11, i64 508, !11, i64 512, !11, i64 516, !11, i64 520, !11, i64 524, !11, i64 528, !11, i64 532, !11, i64 536, !11, i64 540, !11, i64 544, !11, i64 548, !8, i64 552, !11, i64 560, !11, i64 564, !7, i64 568, !7, i64 572, !8, i64 576, !12, i64 720, !15, i64 728, !12, i64 744, !12, i64 752, !12, i64 760, !12, i64 768, !12, i64 776, !12, i64 784, !10, i64 792, !8, i64 794}
!131 = !{!124, !12, i64 24}
!132 = !{!117, !7, i64 8}
!133 = !{!117, !12, i64 0}
!134 = distinct !{!134, !23}
!135 = !{!136, !12, i64 0}
!136 = !{!"PTCacheEditKey", !12, i64 0, !12, i64 8, !12, i64 16, !12, i64 24, !8, i64 32, !11, i64 44, !11, i64 48, !10, i64 52}
!137 = distinct !{!137, !23}
!138 = !{!139, !11, i64 10908}
!139 = !{!"UserDef", !7, i64 0, !7, i64 4, !7, i64 8, !7, i64 12, !7, i64 16, !8, i64 20, !8, i64 788, !8, i64 1556, !8, i64 2580, !8, i64 3348, !8, i64 4116, !8, i64 4884, !8, i64 5652, !8, i64 6420, !8, i64 7444, !7, i64 8468, !10, i64 8472, !10, i64 8474, !10, i64 8476, !10, i64 8478, !10, i64 8480, !10, i64 8482, !7, i64 8484, !7, i64 8488, !7, i64 8492, !10, i64 8496, !10, i64 8498, !7, i64 8500, !7, i64 8504, !7, i64 8508, !7, i64 8512, !7, i64 8516, !7, i64 8520, !7, i64 8524, !10, i64 8528, !10, i64 8530, !10, i64 8532, !10, i64 8534, !15, i64 8536, !15, i64 8552, !15, i64 8568, !15, i64 8584, !15, i64 8600, !15, i64 8616, !15, i64 8632, !8, i64 8648, !10, i64 8712, !10, i64 8714, !10, i64 8716, !10, i64 8718, !10, i64 8720, !10, i64 8722, !10, i64 8724, !10, i64 8726, !8, i64 8728, !10, i64 8896, !10, i64 8898, !10, i64 8900, !10, i64 8902, !10, i64 8904, !10, i64 8906, !10, i64 8908, !10, i64 8910, !7, i64 8912, !7, i64 8916, !10, i64 8920, !10, i64 8922, !10, i64 8924, !10, i64 8926, !10, i64 8928, !10, i64 8930, !10, i64 8932, !10, i64 8934, !10, i64 8936, !10, i64 8938, !8, i64 8940, !8, i64 8941, !8, i64 8942, !8, i64 8943, !10, i64 8944, !10, i64 8946, !10, i64 8948, !10, i64 8950, !10, i64 8952, !10, i64 8954, !11, i64 8956, !11, i64 8960, !7, i64 8964, !10, i64 8968, !10, i64 8970, !11, i64 8972, !10, i64 8976, !10, i64 8978, !10, i64 8980, !10, i64 8982, !140, i64 8984, !8, i64 9760, !8, i64 9772, !10, i64 9788, !8, i64 9790, !8, i64 9791, !8, i64 9792, !8, i64 9872, !7, i64 10896, !7, i64 10900, !11, i64 10904, !11, i64 10908, !7, i64 10912, !10, i64 10916, !10, i64 10918, !10, i64 10920, !10, i64 10922, !10, i64 10924, !10, i64 10926, !141, i64 10928}
!140 = !{!"ColorBand", !10, i64 0, !10, i64 2, !8, i64 4, !8, i64 5, !8, i64 6, !8, i64 7, !8, i64 8}
!141 = !{!"WalkNavigation", !11, i64 0, !11, i64 4, !11, i64 8, !11, i64 12, !11, i64 16, !11, i64 20, !10, i64 24, !8, i64 26}
!142 = !{!139, !7, i64 8524}
!143 = !{!6, !12, i64 72}
!144 = !{!21, !12, i64 208}
!145 = !{!146, !12, i64 232}
!146 = !{!"bNode", !12, i64 0, !12, i64 8, !12, i64 16, !12, i64 24, !12, i64 32, !8, i64 40, !8, i64 104, !7, i64 168, !10, i64 172, !10, i64 174, !10, i64 176, !10, i64 178, !10, i64 180, !10, i64 182, !10, i64 184, !10, i64 186, !8, i64 188, !15, i64 200, !15, i64 216, !12, i64 232, !12, i64 240, !12, i64 248, !12, i64 256, !15, i64 264, !11, i64 280, !11, i64 284, !11, i64 288, !11, i64 292, !11, i64 296, !11, i64 300, !11, i64 304, !7, i64 308, !8, i64 312, !10, i64 376, !10, i64 378, !11, i64 380, !11, i64 384, !10, i64 388, !10, i64 390, !12, i64 392, !98, i64 400, !98, i64 416, !98, i64 432, !10, i64 448, !10, i64 450, !7, i64 452, !12, i64 456}
!147 = distinct !{!147, !23}
!148 = !{!6, !12, i64 1240}
!149 = !{!150, !12, i64 0}
!150 = !{!"Editing", !12, i64 0, !15, i64 8, !15, i64 24, !12, i64 40, !8, i64 48, !8, i64 1072, !7, i64 2096, !7, i64 2100, !7, i64 2104, !7, i64 2108, !98, i64 2112}
!151 = !{!152, !12, i64 0}
!152 = !{!"TransDataSeq", !12, i64 0, !7, i64 8, !7, i64 12, !10, i64 16}
!153 = !{!154, !7, i64 108}
!154 = !{!"Sequence", !12, i64 0, !12, i64 8, !12, i64 16, !12, i64 24, !8, i64 32, !7, i64 96, !7, i64 100, !7, i64 104, !7, i64 108, !7, i64 112, !7, i64 116, !7, i64 120, !7, i64 124, !7, i64 128, !7, i64 132, !7, i64 136, !7, i64 140, !11, i64 144, !11, i64 148, !11, i64 152, !10, i64 156, !10, i64 158, !7, i64 160, !7, i64 164, !12, i64 168, !12, i64 176, !12, i64 184, !12, i64 192, !12, i64 200, !12, i64 208, !12, i64 216, !11, i64 224, !11, i64 228, !12, i64 232, !12, i64 240, !12, i64 248, !15, i64 256, !12, i64 272, !12, i64 280, !11, i64 288, !11, i64 292, !11, i64 296, !11, i64 300, !12, i64 304, !7, i64 312, !7, i64 316, !7, i64 320, !11, i64 324, !7, i64 328, !8, i64 332, !8, i64 333, !15, i64 336}
!155 = !{!152, !10, i64 16}
!156 = !{!154, !7, i64 132}
!157 = !{!152, !7, i64 12}
!158 = !{!154, !7, i64 128}
!159 = !{!152, !7, i64 8}
!160 = distinct !{!160, !23}
!161 = !{!6, !7, i64 0}
!162 = !{!154, !7, i64 100}
!163 = !{!154, !7, i64 96}
!164 = distinct !{!164, !23}
!165 = !{!154, !12, i64 232}
!166 = !{!154, !12, i64 240}
!167 = !{!154, !12, i64 248}
!168 = distinct !{!168, !23}
!169 = distinct !{!169, !23}
!170 = !{!171, !12, i64 96}
!171 = !{!"ScrArea", !12, i64 0, !12, i64 8, !12, i64 16, !12, i64 24, !12, i64 32, !12, i64 40, !12, i64 48, !99, i64 56, !8, i64 72, !8, i64 73, !10, i64 74, !10, i64 76, !10, i64 78, !10, i64 80, !10, i64 82, !10, i64 84, !8, i64 86, !8, i64 87, !12, i64 88, !15, i64 96, !15, i64 112, !15, i64 128, !15, i64 144}
!172 = !{!173, !7, i64 36}
!173 = !{!"SpaceImage", !12, i64 0, !12, i64 8, !15, i64 16, !7, i64 32, !7, i64 36, !12, i64 40, !174, i64 48, !12, i64 88, !175, i64 96, !176, i64 5360, !12, i64 10520, !8, i64 10528, !11, i64 10536, !11, i64 10540, !11, i64 10544, !11, i64 10548, !11, i64 10552, !8, i64 10556, !8, i64 10557, !10, i64 10558, !10, i64 10560, !10, i64 10562, !8, i64 10564, !8, i64 10565, !8, i64 10566, !8, i64 10567, !177, i64 10568}
!174 = !{!"ImageUser", !12, i64 0, !7, i64 8, !7, i64 12, !7, i64 16, !7, i64 20, !8, i64 24, !8, i64 25, !8, i64 26, !8, i64 27, !10, i64 28, !10, i64 30, !10, i64 32, !10, i64 34, !7, i64 36}
!175 = !{!"Scopes", !7, i64 0, !7, i64 4, !7, i64 8, !11, i64 12, !7, i64 16, !11, i64 20, !11, i64 24, !7, i64 28, !11, i64 32, !7, i64 36, !8, i64 40, !176, i64 64, !12, i64 5224, !12, i64 5232, !12, i64 5240, !12, i64 5248, !7, i64 5256, !7, i64 5260}
!176 = !{!"Histogram", !7, i64 0, !7, i64 4, !8, i64 8, !8, i64 1032, !8, i64 2056, !8, i64 3080, !8, i64 4104, !11, i64 5128, !11, i64 5132, !10, i64 5136, !10, i64 5138, !7, i64 5140, !8, i64 5144}
!177 = !{!"MaskSpaceInfo", !12, i64 0, !8, i64 8, !8, i64 9, !8, i64 10, !8, i64 11}
!178 = !{!179, !12, i64 16}
!179 = !{!"TransData2D", !8, i64 0, !12, i64 16, !12, i64 24, !12, i64 32, !8, i64 40, !8, i64 48}
!180 = distinct !{!180, !23}
!181 = !{!6, !10, i64 12}
!182 = !{!21, !12, i64 16}
!183 = distinct !{!183, !23}
!184 = distinct !{!184, !23}
!185 = !{!186, !11, i64 0}
!186 = !{!"tGPFtransdata", !11, i64 0, !12, i64 8}
!187 = !{!186, !12, i64 8}
!188 = distinct !{!188, !23}
!189 = !{!190, !7, i64 244}
!190 = !{!"SpaceIpo", !12, i64 0, !12, i64 8, !15, i64 16, !7, i64 32, !11, i64 36, !8, i64 40, !191, i64 56, !12, i64 216, !15, i64 224, !10, i64 240, !10, i64 242, !7, i64 244, !11, i64 248, !7, i64 252}
!191 = !{!"View2D", !98, i64 0, !98, i64 16, !99, i64 32, !99, i64 48, !99, i64 64, !8, i64 80, !8, i64 88, !11, i64 96, !11, i64 100, !10, i64 104, !10, i64 106, !10, i64 108, !10, i64 110, !10, i64 112, !10, i64 114, !10, i64 116, !10, i64 118, !10, i64 120, !10, i64 122, !10, i64 124, !10, i64 126, !12, i64 128, !7, i64 136, !7, i64 140, !12, i64 144, !12, i64 152}
!192 = !{!193, !12, i64 40}
!193 = !{!"bAnimListElem", !12, i64 0, !12, i64 8, !12, i64 16, !7, i64 24, !7, i64 28, !7, i64 32, !10, i64 36, !10, i64 38, !12, i64 40, !12, i64 48, !12, i64 56}
!194 = !{!195, !12, i64 48}
!195 = !{!"FCurve", !12, i64 0, !12, i64 8, !12, i64 16, !12, i64 24, !15, i64 32, !12, i64 48, !12, i64 56, !7, i64 64, !11, i64 68, !10, i64 72, !10, i64 74, !7, i64 76, !12, i64 80, !7, i64 88, !8, i64 92, !11, i64 104, !11, i64 108}
!196 = !{!195, !7, i64 64}
!197 = !{!198, !12, i64 0}
!198 = !{!"BeztMap", !12, i64 0, !7, i64 8, !7, i64 12, !10, i64 16, !8, i64 18, !8, i64 19}
!199 = !{!198, !7, i64 8}
!200 = !{!198, !7, i64 12}
!201 = !{!202, !8, i64 48}
!202 = !{!"BezTriple", !8, i64 0, !11, i64 36, !11, i64 40, !11, i64 44, !8, i64 48, !8, i64 49, !8, i64 50, !8, i64 51, !8, i64 52, !8, i64 53, !8, i64 54, !8, i64 55, !11, i64 56, !11, i64 60, !11, i64 64, !8, i64 68}
!203 = !{!198, !8, i64 18}
!204 = !{!198, !8, i64 19}
!205 = distinct !{!205, !23}
!206 = !{i64 0, i64 8, !33, i64 8, i64 4, !27, i64 12, i64 4, !27, i64 16, i64 2, !58, i64 18, i64 1, !51, i64 19, i64 1, !51}
!207 = !{!198, !10, i64 16}
!208 = distinct !{!208, !23}
!209 = !{!179, !12, i64 24}
!210 = !{!179, !12, i64 32}
!211 = !{!21, !12, i64 200}
!212 = !{!213, !12, i64 16}
!213 = !{!"TransDataCurveHandleFlags", !8, i64 0, !8, i64 1, !12, i64 8, !12, i64 16}
!214 = distinct !{!214, !23}
!215 = distinct !{!215, !23, !216}
!216 = !{!"llvm.loop.unswitch.partial.disable"}
!217 = distinct !{!217, !23}
!218 = !{!91, !10, i64 820}
!219 = !{!91, !11, i64 900}
!220 = !{!221, !11, i64 0}
!221 = !{!"TransDataGraph", !11, i64 0}
!222 = !{!190, !10, i64 242}
!223 = distinct !{!223, !23}
!224 = !{!91, !7, i64 680}
!225 = !{!91, !12, i64 264}
!226 = !{!227, !10, i64 346}
!227 = !{!"ToolSettings", !12, i64 0, !12, i64 8, !12, i64 16, !12, i64 24, !11, i64 32, !11, i64 36, !11, i64 40, !10, i64 44, !10, i64 46, !8, i64 48, !8, i64 49, !8, i64 50, !8, i64 51, !11, i64 52, !10, i64 56, !8, i64 58, !8, i64 59, !228, i64 64, !230, i64 168, !11, i64 336, !11, i64 340, !10, i64 344, !10, i64 346, !8, i64 348, !8, i64 349, !10, i64 350, !11, i64 352, !11, i64 356, !11, i64 360, !11, i64 364, !11, i64 368, !11, i64 372, !11, i64 376, !11, i64 380, !11, i64 384, !11, i64 388, !10, i64 392, !8, i64 394, !8, i64 395, !8, i64 396, !8, i64 399, !12, i64 400, !8, i64 408, !8, i64 409, !8, i64 410, !8, i64 411, !8, i64 412, !8, i64 413, !8, i64 421, !8, i64 429, !8, i64 430, !8, i64 431, !8, i64 432, !8, i64 433, !10, i64 434, !10, i64 436, !10, i64 438, !10, i64 440, !8, i64 442, !8, i64 443, !8, i64 444, !8, i64 445, !8, i64 446, !8, i64 447, !7, i64 448, !7, i64 452, !7, i64 456, !7, i64 460, !10, i64 464, !10, i64 466, !7, i64 468, !11, i64 472, !11, i64 476, !231, i64 480, !232, i64 608}
!228 = !{!"ImagePaintSettings", !229, i64 0, !10, i64 40, !10, i64 42, !10, i64 44, !10, i64 46, !8, i64 48, !7, i64 52, !12, i64 56, !12, i64 64, !12, i64 72, !12, i64 80, !8, i64 88, !11, i64 100}
!229 = !{!"Paint", !12, i64 0, !12, i64 8, !12, i64 16, !8, i64 24, !7, i64 28, !7, i64 32, !7, i64 36}
!230 = !{!"ParticleEditSettings", !10, i64 0, !10, i64 2, !10, i64 4, !10, i64 6, !8, i64 8, !12, i64 120, !11, i64 128, !11, i64 132, !7, i64 136, !7, i64 140, !7, i64 144, !7, i64 148, !12, i64 152, !12, i64 160}
!231 = !{!"UnifiedPaintSettings", !7, i64 0, !11, i64 4, !11, i64 8, !11, i64 12, !8, i64 16, !8, i64 28, !7, i64 40, !8, i64 44, !11, i64 52, !7, i64 56, !7, i64 60, !8, i64 64, !8, i64 65, !11, i64 72, !8, i64 76, !7, i64 84, !11, i64 88, !8, i64 92, !8, i64 100, !7, i64 108, !12, i64 112, !11, i64 120, !7, i64 124}
!232 = !{!"MeshStatVis", !8, i64 0, !8, i64 1, !8, i64 3, !11, i64 4, !11, i64 8, !11, i64 12, !11, i64 16, !8, i64 20, !8, i64 21, !11, i64 24, !11, i64 28, !11, i64 32, !11, i64 36}
!233 = !{!139, !10, i64 8978}
!234 = !{!29, !12, i64 120}
!235 = !{!236, !12, i64 0}
!236 = !{!"AnimData", !12, i64 0, !12, i64 8, !12, i64 16, !15, i64 24, !12, i64 40, !15, i64 48, !15, i64 64, !7, i64 80, !7, i64 84, !10, i64 88, !10, i64 90, !11, i64 92}
!237 = !{!195, !10, i64 72}
!238 = !{!195, !12, i64 16}
!239 = !{!195, !12, i64 80}
!240 = !{!195, !7, i64 76}
!241 = distinct !{!241, !23}
!242 = !{!243, !10, i64 238}
!243 = !{!"View3D", !12, i64 0, !12, i64 8, !15, i64 16, !7, i64 32, !11, i64 36, !8, i64 40, !8, i64 56, !11, i64 72, !11, i64 76, !8, i64 80, !8, i64 81, !7, i64 84, !7, i64 88, !10, i64 92, !10, i64 94, !12, i64 96, !12, i64 104, !98, i64 112, !15, i64 128, !12, i64 144, !12, i64 152, !8, i64 160, !7, i64 224, !7, i64 228, !10, i64 232, !10, i64 234, !10, i64 236, !10, i64 238, !10, i64 240, !10, i64 242, !11, i64 244, !11, i64 248, !11, i64 252, !11, i64 256, !8, i64 260, !8, i64 272, !10, i64 284, !10, i64 286, !10, i64 288, !8, i64 290, !8, i64 291, !8, i64 292, !8, i64 293, !8, i64 294, !15, i64 296, !15, i64 312, !15, i64 328, !8, i64 344, !8, i64 345, !8, i64 346, !8, i64 347, !12, i64 352, !12, i64 360, !12, i64 368}
!244 = !{!243, !10, i64 240}
!245 = !{!29, !10, i64 342}
!246 = distinct !{!246, !23}
!247 = distinct !{!247, !23}
!248 = !{!249, !10, i64 134}
!249 = !{!"bPose", !15, i64 0, !12, i64 16, !10, i64 24, !10, i64 26, !7, i64 28, !7, i64 32, !11, i64 36, !8, i64 40, !8, i64 52, !15, i64 64, !7, i64 80, !7, i64 84, !12, i64 88, !12, i64 96, !31, i64 104, !8, i64 152}
!250 = distinct !{!250, !23}
!251 = !{!6, !8, i64 976}
!252 = !{!227, !10, i64 44}
!253 = !{!254, !12, i64 0}
!254 = !{!"BMEditMesh", !12, i64 0, !12, i64 8, !7, i64 16, !12, i64 24, !7, i64 32, !12, i64 40, !12, i64 48, !32, i64 56, !12, i64 64, !7, i64 72, !12, i64 80, !7, i64 88, !10, i64 92, !10, i64 94, !12, i64 96, !7, i64 104}
!255 = !{!256, !8, i64 13}
!256 = !{!"BMHeader", !12, i64 0, !7, i64 8, !8, i64 12, !8, i64 13, !8, i64 14}
!257 = distinct !{!257, !23}
!258 = !{!259, !11, i64 64}
!259 = !{!"EdgeSlideData", !12, i64 0, !7, i64 8, !12, i64 16, !8, i64 24, !8, i64 32, !12, i64 40, !8, i64 48, !12, i64 56, !11, i64 64, !8, i64 68, !8, i64 69, !7, i64 72}
!260 = !{!261, !7, i64 232}
!261 = !{!"SpaceSeq", !12, i64 0, !12, i64 8, !15, i64 16, !7, i64 32, !11, i64 36, !8, i64 40, !191, i64 56, !11, i64 216, !11, i64 220, !10, i64 224, !10, i64 226, !10, i64 228, !10, i64 230, !7, i64 232, !11, i64 236, !7, i64 240, !7, i64 244, !12, i64 248, !262, i64 256}
!262 = !{!"SequencerScopes", !12, i64 0, !12, i64 8, !12, i64 16, !12, i64 24, !12, i64 32, !12, i64 40}
!263 = !{!6, !8, i64 712}
!264 = !{!6, !7, i64 16}
!265 = !{!91, !12, i64 248}
!266 = !{!227, !10, i64 344}
!267 = !{!139, !10, i64 8976}
!268 = !{!6, !8, i64 1220}
!269 = !{!270, !12, i64 288}
!270 = !{!"SpaceNode", !12, i64 0, !12, i64 8, !15, i64 16, !7, i64 32, !11, i64 36, !8, i64 40, !191, i64 56, !12, i64 216, !12, i64 224, !10, i64 232, !10, i64 234, !11, i64 236, !11, i64 240, !11, i64 244, !11, i64 248, !11, i64 252, !8, i64 256, !15, i64 264, !12, i64 280, !12, i64 288, !8, i64 296, !7, i64 360, !7, i64 364, !10, i64 368, !10, i64 370, !10, i64 372, !10, i64 374, !15, i64 376, !12, i64 392}
!271 = !{!272, !12, i64 224}
!272 = !{!"bNodeTree", !30, i64 0, !12, i64 120, !12, i64 128, !8, i64 136, !12, i64 200, !12, i64 208, !8, i64 216, !15, i64 224, !15, i64 240, !7, i64 256, !7, i64 260, !7, i64 264, !7, i64 268, !7, i64 272, !10, i64 276, !10, i64 278, !7, i64 280, !7, i64 284, !10, i64 288, !10, i64 290, !7, i64 292, !98, i64 296, !15, i64 312, !15, i64 328, !12, i64 344, !273, i64 352, !7, i64 356, !12, i64 360, !12, i64 368, !12, i64 376, !12, i64 384, !12, i64 392, !12, i64 400, !12, i64 408, !12, i64 416, !12, i64 424}
!273 = !{!"bNodeInstanceKey", !7, i64 0}
!274 = !{!146, !12, i64 0}
!275 = !{!146, !7, i64 168}
!276 = distinct !{!276, !23}
!277 = !{!278, !7, i64 108}
!278 = !{!"MovieTrackingPlaneTrack", !12, i64 0, !12, i64 8, !8, i64 16, !12, i64 80, !7, i64 88, !7, i64 92, !12, i64 96, !7, i64 104, !7, i64 108, !12, i64 112, !11, i64 120, !7, i64 124}
!279 = !{!278, !7, i64 88}
!280 = !{!278, !12, i64 80}
!281 = !{!282, !7, i64 152}
!282 = !{!"MovieTrackingTrack", !12, i64 0, !12, i64 8, !8, i64 16, !8, i64 80, !8, i64 88, !8, i64 96, !8, i64 104, !8, i64 112, !7, i64 120, !7, i64 124, !12, i64 128, !8, i64 136, !11, i64 148, !7, i64 152, !7, i64 156, !7, i64 160, !8, i64 164, !10, i64 176, !10, i64 178, !10, i64 180, !10, i64 182, !7, i64 184, !11, i64 188, !12, i64 192, !11, i64 200, !11, i64 204}
!283 = !{!284, !7, i64 208}
!284 = !{!"SpaceClip", !12, i64 0, !12, i64 8, !15, i64 16, !7, i64 32, !11, i64 36, !11, i64 40, !11, i64 44, !11, i64 48, !11, i64 52, !285, i64 56, !12, i64 64, !286, i64 72, !7, i64 208, !10, i64 212, !10, i64 214, !7, i64 216, !8, i64 220, !11, i64 228, !11, i64 232, !7, i64 236, !8, i64 240, !8, i64 304, !7, i64 368, !10, i64 372, !10, i64 374, !7, i64 376, !7, i64 380, !8, i64 384, !177, i64 392}
!285 = !{!"MovieClipUser", !7, i64 0, !10, i64 4, !10, i64 6}
!286 = !{!"MovieClipScopes", !10, i64 0, !10, i64 2, !7, i64 4, !7, i64 8, !7, i64 12, !287, i64 16, !12, i64 80, !12, i64 88, !8, i64 96, !10, i64 104, !10, i64 106, !7, i64 108, !12, i64 112, !12, i64 120, !8, i64 128}
!287 = !{!"MovieTrackingMarker", !8, i64 0, !8, i64 8, !8, i64 40, !8, i64 48, !7, i64 56, !7, i64 60}
!288 = !{!282, !7, i64 156}
!289 = !{!282, !7, i64 160}
!290 = distinct !{!290, !23}
!291 = distinct !{!291, !23}
!292 = !{!293, !12, i64 56}
!293 = !{!"bAnimContext", !12, i64 0, !10, i64 8, !10, i64 10, !10, i64 12, !10, i64 14, !12, i64 16, !12, i64 24, !12, i64 32, !12, i64 40, !12, i64 48, !12, i64 56, !12, i64 64, !12, i64 72}
!294 = !{!293, !12, i64 0}
!295 = !{!296, !10, i64 338}
!296 = !{!"SpaceAction", !12, i64 0, !12, i64 8, !15, i64 16, !7, i64 32, !11, i64 36, !8, i64 40, !191, i64 56, !12, i64 216, !297, i64 224, !8, i64 336, !8, i64 337, !10, i64 338, !11, i64 340}
!297 = !{!"bDopeSheet", !12, i64 0, !15, i64 8, !12, i64 24, !8, i64 32, !7, i64 96, !7, i64 100, !7, i64 104, !7, i64 108}
!298 = distinct !{!298, !23}
!299 = !{!300, !12, i64 0}
!300 = !{!"Global", !12, i64 0, !8, i64 8, !8, i64 1032, !8, i64 2056, !8, i64 2057, !8, i64 2058, !15, i64 2064, !8, i64 2080, !8, i64 2081, !8, i64 2082, !10, i64 2084, !10, i64 2086, !10, i64 2088, !8, i64 2090, !10, i64 2092, !7, i64 2096, !7, i64 2100, !8, i64 2104, !7, i64 2108, !7, i64 2112, !8, i64 2116}
!301 = !{!30, !7, i64 100}
!302 = !{!30, !10, i64 98}
!303 = !{!304, !12, i64 16}
!304 = !{!"bGPDlayer", !12, i64 0, !12, i64 8, !15, i64 16, !12, i64 32, !7, i64 40, !10, i64 44, !10, i64 46, !8, i64 48, !8, i64 64}
!305 = !{!306, !12, i64 0}
!306 = !{!"bGPDframe", !12, i64 0, !12, i64 8, !15, i64 16, !7, i64 32, !7, i64 36}
!307 = !{!306, !7, i64 32}
!308 = distinct !{!308, !23}
!309 = distinct !{!309, !23}
!310 = !{!311, !12, i64 96}
!311 = !{!"MaskLayer", !12, i64 0, !12, i64 8, !8, i64 16, !15, i64 80, !15, i64 96, !12, i64 112, !12, i64 120, !11, i64 128, !8, i64 132, !8, i64 133, !8, i64 134, !8, i64 135, !8, i64 142, !8, i64 143}
!312 = !{!313, !12, i64 0}
!313 = !{!"MaskLayerShape", !12, i64 0, !12, i64 8, !12, i64 16, !7, i64 24, !7, i64 28, !8, i64 32, !8, i64 33}
!314 = !{!313, !7, i64 28}
!315 = distinct !{!315, !23}
!316 = distinct !{!316, !23}
!317 = !{!293, !10, i64 8}
!318 = distinct !{!318, !23}
!319 = !{!193, !12, i64 16}
!320 = distinct !{!320, !23}
!321 = !{!6, !10, i64 974}
!322 = distinct !{!322, !23}
!323 = !{!6, !12, i64 1224}
!324 = !{!29, !8, i64 1161}
!325 = !{!29, !7, i64 432}
!326 = !{!21, !12, i64 176}
!327 = !{!113, !7, i64 40}
!328 = !{!113, !12, i64 176}
!329 = !{!330, !7, i64 16}
!330 = !{!"PointCache", !12, i64 0, !12, i64 8, !7, i64 16, !7, i64 20, !7, i64 24, !7, i64 28, !7, i64 32, !7, i64 36, !7, i64 40, !7, i64 44, !7, i64 48, !7, i64 52, !7, i64 56, !10, i64 60, !10, i64 62, !8, i64 64, !8, i64 128, !8, i64 192, !8, i64 256, !12, i64 1280, !15, i64 1288, !12, i64 1304, !12, i64 1312}
!331 = distinct !{!331, !23}
!332 = !{!29, !12, i64 1368}
!333 = !{!91, !12, i64 4952}
!334 = !{!21, !12, i64 192}
!335 = !{!336, !11, i64 376}
!336 = !{!"TransDataExtension", !8, i64 0, !8, i64 12, !8, i64 28, !12, i64 40, !8, i64 48, !12, i64 64, !8, i64 72, !12, i64 88, !11, i64 96, !12, i64 104, !8, i64 112, !12, i64 128, !8, i64 136, !8, i64 148, !8, i64 212, !8, i64 248, !8, i64 284, !7, i64 320, !8, i64 324, !8, i64 336, !8, i64 348, !8, i64 364, !11, i64 376}
!337 = distinct !{!337, !23}
!338 = !{!110, !7, i64 24}
!339 = distinct !{!339, !23}
!340 = !{!202, !8, i64 52}
!341 = !{!202, !8, i64 51}
!342 = !{!202, !8, i64 53}
!343 = distinct !{!343, !23}
!344 = distinct !{!344, !23}
!345 = distinct !{!345, !23}
!346 = distinct !{!346, !23}
!347 = distinct !{!347, !23}
!348 = !{!38, !10, i64 268}
!349 = !{!38, !11, i64 264}
!350 = distinct !{!350, !23}
!351 = distinct !{!351, !23}
!352 = distinct !{!352, !23}
!353 = !{!38, !10, i64 106}
!354 = !{!38, !12, i64 24}
!355 = !{!45, !12, i64 0}
!356 = distinct !{!356, !23}
!357 = !{!358, !7, i64 0}
!358 = !{!"TransDataTracking", !7, i64 0, !7, i64 4, !7, i64 8, !12, i64 16, !12, i64 24, !8, i64 32, !8, i64 40, !8, i64 48, !12, i64 56, !7, i64 64, !12, i64 72, !12, i64 80, !11, i64 88, !10, i64 92, !12, i64 96, !12, i64 104}
!359 = !{!358, !12, i64 96}
!360 = !{!358, !7, i64 4}
!361 = !{!287, !7, i64 60}
!362 = !{!282, !7, i64 120}
!363 = !{!282, !12, i64 128}
!364 = distinct !{!364, !23}
!365 = !{!358, !12, i64 104}
!366 = !{!367, !7, i64 36}
!367 = !{!"MovieTrackingPlaneMarker", !8, i64 0, !7, i64 32, !7, i64 36}
!368 = distinct !{!368, !23}
!369 = !{!358, !7, i64 8}
!370 = !{!358, !12, i64 16}
!371 = !{!358, !12, i64 56}
!372 = !{!358, !7, i64 64}
!373 = !{!358, !12, i64 72}
!374 = !{!375}
!375 = distinct !{!375, !376}
!376 = distinct !{!376, !"LVerDomain"}
!377 = distinct !{!377, !23, !119, !120}
!378 = distinct !{!378, !23, !119}
!379 = !{!380}
!380 = distinct !{!380, !381}
!381 = distinct !{!381, !"LVerDomain"}
!382 = !{!383}
!383 = distinct !{!383, !381}
!384 = distinct !{!384, !23, !119, !120}
!385 = distinct !{!385, !23, !119}
!386 = !{!358, !12, i64 80}
!387 = !{!358, !10, i64 92}
!388 = !{!358, !11, i64 88}
!389 = distinct !{!389, !23}
!390 = !{!6, !12, i64 1248}
!391 = !{!392, !8, i64 0}
!392 = !{!"TransDataMasking", !8, i64 0, !8, i64 4, !8, i64 12, !8, i64 20, !12, i64 56, !8, i64 64, !8, i64 100, !8, i64 136, !8, i64 140}
!393 = !{!392, !12, i64 56}
!394 = !{!392, !8, i64 140}
!395 = !{!392, !8, i64 136}
!396 = !{!397, !8, i64 49}
!397 = !{!"MaskSplinePoint", !202, i64 0, !7, i64 72, !7, i64 76, !12, i64 80, !398, i64 88}
!398 = !{!"MaskParent", !7, i64 0, !7, i64 4, !12, i64 8, !8, i64 16, !8, i64 80, !8, i64 144, !8, i64 152}
!399 = !{!397, !8, i64 50}
!400 = distinct !{!400, !23}
!401 = !{!402, !12, i64 0}
!402 = !{!"TransDataPaintCurve", !12, i64 0, !8, i64 8}
!403 = !{!402, !8, i64 8}
!404 = distinct !{!404, !23}
!405 = !{!6, !12, i64 1288}
!406 = !{!6, !12, i64 64}
!407 = !{!29, !10, i64 1044}
!408 = !{!336, !12, i64 40}
!409 = !{!336, !12, i64 128}
!410 = !{!411, !8, i64 60}
!411 = !{!"BMIter", !8, i64 0, !12, i64 40, !12, i64 48, !7, i64 56, !8, i64 60}
!412 = !{!411, !12, i64 40}
!413 = !{!411, !12, i64 48}
!414 = !{!415, !12, i64 40}
!415 = !{!"BMesh", !7, i64 0, !7, i64 4, !7, i64 8, !7, i64 12, !7, i64 16, !7, i64 20, !7, i64 24, !8, i64 28, !8, i64 29, !12, i64 32, !12, i64 40, !12, i64 48, !12, i64 56, !12, i64 64, !12, i64 72, !12, i64 80, !7, i64 88, !7, i64 92, !7, i64 96, !12, i64 104, !12, i64 112, !12, i64 120, !7, i64 128, !12, i64 136, !416, i64 144, !416, i64 344, !416, i64 544, !416, i64 744, !10, i64 944, !7, i64 948, !7, i64 952, !7, i64 956, !15, i64 960, !12, i64 976, !15, i64 984, !12, i64 1000}
!416 = !{!"CustomData", !12, i64 0, !8, i64 8, !7, i64 172, !7, i64 176, !7, i64 180, !12, i64 184, !12, i64 192}
!417 = distinct !{!417, !23}
!418 = !{!419, !12, i64 24}
!419 = !{!"BMEdge", !256, i64 0, !12, i64 16, !12, i64 24, !12, i64 32, !12, i64 40, !420, i64 48, !420, i64 64}
!420 = !{!"BMDiskLink", !12, i64 0, !12, i64 8}
!421 = !{!419, !12, i64 32}
!422 = !{!419, !12, i64 0}
!423 = !{!21, !12, i64 40}
!424 = !{!21, !11, i64 48}
!425 = distinct !{!425, !23}
!426 = distinct !{!426, !23}
!427 = distinct !{!427, !23}
!428 = !{i64 0, i64 4, !82, i64 4, i64 4, !82, i64 8, i64 4, !82, i64 16, i64 8, !33, i64 24, i64 12, !51, i64 40, i64 8, !33, i64 48, i64 4, !82, i64 52, i64 12, !51, i64 64, i64 36, !51, i64 100, i64 36, !51, i64 136, i64 36, !51, i64 176, i64 8, !33, i64 184, i64 8, !33, i64 192, i64 8, !33, i64 200, i64 8, !33, i64 208, i64 8, !33, i64 216, i64 4, !27, i64 220, i64 2, !58}
!429 = distinct !{!429, !23}
!430 = !{!293, !12, i64 32}
!431 = !{!193, !7, i64 24}
!432 = distinct !{!432, !23, !119, !120}
!433 = distinct !{!433, !23, !120, !119}
!434 = distinct !{!434, !23}
!435 = !{!306, !7, i64 36}
!436 = distinct !{!436, !23}
!437 = !{!313, !8, i64 32}
!438 = distinct !{!438, !23}
!439 = distinct !{!439, !23}
!440 = distinct !{!440, !23}
!441 = distinct !{!441, !23}
!442 = distinct !{!442, !23}
!443 = distinct !{!443, !23}
!444 = distinct !{!444, !23}
!445 = !{!91, !10, i64 712}
!446 = !{!293, !12, i64 24}
!447 = distinct !{!447, !23}
!448 = !{!449, !10, i64 190}
!449 = !{!"NlaStrip", !12, i64 0, !12, i64 8, !15, i64 16, !12, i64 32, !12, i64 40, !15, i64 48, !15, i64 64, !8, i64 80, !11, i64 144, !11, i64 148, !11, i64 152, !11, i64 156, !11, i64 160, !11, i64 164, !11, i64 168, !11, i64 172, !11, i64 176, !11, i64 180, !10, i64 184, !10, i64 186, !10, i64 188, !10, i64 190, !12, i64 192, !7, i64 200, !7, i64 204}
!450 = !{!449, !7, i64 200}
!451 = !{!449, !11, i64 152}
!452 = !{!449, !11, i64 156}
!453 = distinct !{!453, !23}
!454 = distinct !{!454, !23}
!455 = !{!193, !12, i64 56}
!456 = !{!193, !12, i64 48}
!457 = !{!458, !12, i64 0}
!458 = !{!"TransDataNla", !12, i64 0, !12, i64 8, !12, i64 16, !12, i64 24, !8, i64 32, !8, i64 44, !7, i64 56, !7, i64 60}
!459 = !{!458, !12, i64 16}
!460 = !{!458, !12, i64 8}
!461 = !{!458, !12, i64 24}
!462 = !{!458, !7, i64 56}
!463 = !{!464, !10, i64 58}
!464 = !{!"SpaceNla", !12, i64 0, !12, i64 8, !15, i64 16, !7, i64 32, !11, i64 36, !8, i64 40, !10, i64 56, !10, i64 58, !7, i64 60, !12, i64 64, !191, i64 72}
!465 = !{!139, !10, i64 8948}
!466 = !{!458, !7, i64 60}
!467 = distinct !{!467, !23}
!468 = distinct !{!468, !23}
!469 = !{!6, !10, i64 462}
!470 = !{!6, !12, i64 1144}
!471 = distinct !{!471, !23}
!472 = distinct !{!472, !23}
!473 = distinct !{!473, !23}
!474 = distinct !{!474, !23, !119, !120}
!475 = distinct !{!475, !23, !120, !119}
!476 = !{!293, !12, i64 48}
!477 = !{!202, !8, i64 49}
!478 = !{!213, !8, i64 0}
!479 = !{!213, !12, i64 8}
!480 = !{!202, !8, i64 50}
!481 = !{!213, !8, i64 1}
!482 = distinct !{!482, !23}
!483 = distinct !{!483, !23}
!484 = distinct !{!484, !23}
!485 = distinct !{!485, !23}
!486 = !{!146, !11, i64 280}
!487 = !{!146, !11, i64 284}
!488 = distinct !{!488, !23}
!489 = !{!110, !7, i64 16}
!490 = !{!243, !7, i64 224}
!491 = !{!29, !8, i64 1160}
!492 = !{!493, !10, i64 214}
!493 = !{!"ARegion", !12, i64 0, !12, i64 8, !191, i64 16, !99, i64 176, !99, i64 192, !10, i64 208, !10, i64 210, !10, i64 212, !10, i64 214, !10, i64 216, !10, i64 218, !11, i64 220, !10, i64 224, !10, i64 226, !10, i64 228, !10, i64 230, !10, i64 232, !10, i64 234, !10, i64 236, !10, i64 238, !12, i64 240, !15, i64 248, !15, i64 264, !15, i64 280, !15, i64 296, !15, i64 312, !15, i64 328, !15, i64 344, !12, i64 360, !12, i64 368, !12, i64 376}
!494 = !{!493, !12, i64 376}
!495 = !{!496, !8, i64 809}
!496 = !{!"RegionView3D", !8, i64 0, !8, i64 64, !8, i64 128, !8, i64 192, !8, i64 256, !8, i64 320, !8, i64 384, !8, i64 448, !8, i64 544, !12, i64 640, !12, i64 648, !12, i64 656, !12, i64 664, !12, i64 672, !12, i64 680, !12, i64 688, !8, i64 696, !8, i64 760, !11, i64 776, !11, i64 780, !11, i64 784, !11, i64 788, !8, i64 792, !11, i64 804, !8, i64 808, !8, i64 809, !8, i64 810, !8, i64 811, !8, i64 812, !8, i64 813, !8, i64 816, !10, i64 824, !10, i64 826, !8, i64 828, !10, i64 844, !10, i64 846, !11, i64 848, !8, i64 852, !11, i64 864, !8, i64 868}
!497 = !{!243, !12, i64 96}
!498 = distinct !{!498, !23}
!499 = distinct !{!499, !23}
!500 = !{!311, !8, i64 143}
!501 = distinct !{!501, !23}
!502 = !{!503, !7, i64 20}
!503 = !{!"MaskSpline", !12, i64 0, !12, i64 8, !10, i64 16, !8, i64 18, !8, i64 19, !7, i64 20, !12, i64 24, !398, i64 32, !12, i64 216}
!504 = distinct !{!504, !23}
!505 = !{!503, !12, i64 24}
!506 = !{!397, !8, i64 51}
!507 = !{!397, !8, i64 52}
!508 = !{!397, !8, i64 53}
!509 = distinct !{!509, !23}
!510 = distinct !{!510, !23}
!511 = distinct !{!511, !23}
!512 = distinct !{!512, !23}
!513 = !{!229, !12, i64 0}
!514 = !{!515, !12, i64 808}
!515 = !{!"Brush", !30, i64 0, !516, i64 120, !12, i64 144, !517, i64 152, !517, i64 464, !12, i64 776, !12, i64 784, !12, i64 792, !12, i64 800, !12, i64 808, !8, i64 816, !11, i64 1840, !10, i64 1844, !10, i64 1846, !11, i64 1848, !7, i64 1852, !7, i64 1856, !7, i64 1860, !11, i64 1864, !7, i64 1868, !7, i64 1872, !7, i64 1876, !7, i64 1880, !11, i64 1884, !11, i64 1888, !8, i64 1892, !11, i64 1904, !8, i64 1908, !7, i64 1920, !11, i64 1924, !11, i64 1928, !7, i64 1932, !7, i64 1936, !7, i64 1940, !8, i64 1944, !8, i64 1945, !8, i64 1946, !8, i64 1947, !11, i64 1948, !11, i64 1952, !11, i64 1956, !11, i64 1960, !11, i64 1964, !7, i64 1968, !7, i64 1972, !7, i64 1976, !11, i64 1980, !11, i64 1984, !7, i64 1988, !7, i64 1992, !11, i64 1996, !8, i64 2000, !8, i64 2012, !8, i64 2024, !8, i64 2032, !8, i64 2040, !8, i64 2048}
!516 = !{!"BrushClone", !12, i64 0, !8, i64 8, !11, i64 16, !11, i64 20}
!517 = !{!"MTex", !10, i64 0, !10, i64 2, !10, i64 4, !10, i64 6, !12, i64 8, !12, i64 16, !8, i64 24, !8, i64 88, !8, i64 89, !8, i64 90, !8, i64 91, !8, i64 92, !8, i64 104, !11, i64 116, !10, i64 120, !10, i64 122, !10, i64 124, !10, i64 126, !10, i64 128, !10, i64 130, !8, i64 132, !8, i64 133, !11, i64 140, !11, i64 144, !11, i64 148, !11, i64 152, !11, i64 156, !11, i64 160, !11, i64 164, !11, i64 168, !11, i64 172, !11, i64 176, !11, i64 180, !11, i64 184, !11, i64 188, !11, i64 192, !11, i64 196, !11, i64 200, !11, i64 204, !11, i64 208, !11, i64 212, !11, i64 216, !11, i64 220, !11, i64 224, !11, i64 228, !11, i64 232, !11, i64 236, !11, i64 240, !11, i64 244, !11, i64 248, !11, i64 252, !11, i64 256, !11, i64 260, !11, i64 264, !11, i64 268, !11, i64 272, !11, i64 276, !11, i64 280, !11, i64 284, !11, i64 288, !11, i64 292, !11, i64 296, !11, i64 300, !11, i64 304, !11, i64 308}
!518 = !{!519, !7, i64 128}
!519 = !{!"PaintCurve", !30, i64 0, !12, i64 120, !7, i64 128, !7, i64 132}
!520 = !{!519, !12, i64 120}
!521 = !{!522, !8, i64 51}
!522 = !{!"PaintCurvePoint", !202, i64 0, !11, i64 72}
!523 = !{!522, !8, i64 52}
!524 = !{!522, !8, i64 53}
!525 = distinct !{!525, !23, !119, !120}
!526 = distinct !{!526, !23, !120, !119}
!527 = distinct !{!527, !23}
!528 = !{!227, !8, i64 50}
!529 = !{!530, !7, i64 20}
!530 = !{!"UvElementMap", !12, i64 0, !12, i64 8, !7, i64 16, !7, i64 20, !12, i64 24}
!531 = !{!415, !12, i64 56}
!532 = !{!533, !12, i64 0}
!533 = !{!"BMFace", !256, i64 0, !12, i64 16, !12, i64 24, !7, i64 32, !8, i64 36, !10, i64 48}
!534 = distinct !{!534, !23}
!535 = distinct !{!535, !23}
!536 = !{!537, !10, i64 20}
!537 = !{!"UvElement", !12, i64 0, !12, i64 8, !10, i64 16, !8, i64 18, !8, i64 19, !10, i64 20}
!538 = !{!539, !12, i64 0}
!539 = !{!"BMLoop", !256, i64 0, !12, i64 16, !12, i64 24, !12, i64 32, !12, i64 40, !12, i64 48, !12, i64 56, !12, i64 64}
!540 = distinct !{!540, !23}
!541 = distinct !{!541, !23}
!542 = distinct !{!542, !23}
!543 = distinct !{!543, !23}
!544 = !{!287, !7, i64 56}
!545 = distinct !{!545, !23}
!546 = distinct !{!546, !23}
!547 = distinct !{!547, !23}
!548 = distinct !{!548, !23}
!549 = !{!358, !12, i64 24}
!550 = distinct !{!550, !23}
!551 = distinct !{!551, !23}
!552 = !{!553, !8, i64 1365}
!553 = !{!"Mesh", !30, i64 0, !12, i64 120, !12, i64 128, !12, i64 136, !12, i64 144, !12, i64 152, !12, i64 160, !12, i64 168, !12, i64 176, !12, i64 184, !12, i64 192, !12, i64 200, !12, i64 208, !12, i64 216, !12, i64 224, !12, i64 232, !12, i64 240, !12, i64 248, !12, i64 256, !12, i64 264, !12, i64 272, !416, i64 280, !416, i64 480, !416, i64 680, !416, i64 880, !416, i64 1080, !7, i64 1280, !7, i64 1284, !7, i64 1288, !7, i64 1292, !7, i64 1296, !7, i64 1300, !7, i64 1304, !8, i64 1308, !8, i64 1320, !8, i64 1332, !7, i64 1344, !10, i64 1348, !10, i64 1350, !11, i64 1352, !7, i64 1356, !8, i64 1360, !8, i64 1361, !8, i64 1362, !8, i64 1363, !8, i64 1364, !8, i64 1365, !10, i64 1366, !12, i64 1368}
!554 = !{!254, !10, i64 92}
!555 = !{!415, !7, i64 16}
!556 = !{!415, !7, i64 20}
!557 = !{!415, !7, i64 24}
!558 = !{!415, !12, i64 32}
!559 = distinct !{!559, !23}
!560 = !{!415, !7, i64 0}
!561 = !{!256, !7, i64 8}
!562 = distinct !{!562, !23}
!563 = !{!415, !8, i64 28}
!564 = !{!565, !12, i64 48}
!565 = !{!"BMVert", !256, i64 0, !12, i64 16, !8, i64 24, !8, i64 36, !12, i64 48}
!566 = !{!419, !12, i64 40}
!567 = distinct !{!567, !23}
!568 = !{!539, !12, i64 32}
!569 = !{!533, !7, i64 32}
!570 = !{!539, !12, i64 56}
!571 = !{!539, !12, i64 16}
!572 = distinct !{!572, !23}
!573 = distinct !{!573, !23}
!574 = !{!575, !12, i64 8}
!575 = !{!"LinkNode", !12, i64 0, !12, i64 8}
!576 = distinct !{!576, !23}
!577 = distinct !{!577, !23}
!578 = !{!579, !8, i64 24}
!579 = !{!"BMEditSelection", !12, i64 0, !12, i64 8, !12, i64 16, !8, i64 24}
!580 = !{!579, !12, i64 16}
!581 = distinct !{!581, !23}
!582 = distinct !{!582, !23}
!583 = distinct !{!583, !23}
!584 = !{!6, !10, i64 1160}
!585 = distinct !{!585, !23}
!586 = !{!565, !12, i64 0}
!587 = distinct !{!587, !23}
!588 = distinct !{!588, !23}
!589 = !{!590, !10, i64 248}
!590 = !{!"Curve", !30, i64 0, !12, i64 120, !12, i64 128, !15, i64 136, !12, i64 152, !12, i64 160, !12, i64 168, !12, i64 176, !12, i64 184, !12, i64 192, !12, i64 200, !8, i64 208, !8, i64 220, !8, i64 232, !10, i64 244, !10, i64 246, !10, i64 248, !10, i64 250, !11, i64 252, !11, i64 256, !7, i64 260, !10, i64 264, !10, i64 266, !7, i64 268, !11, i64 272, !11, i64 276, !11, i64 280, !10, i64 284, !10, i64 286, !10, i64 288, !10, i64 290, !7, i64 292, !7, i64 296, !8, i64 300, !10, i64 304, !8, i64 306, !8, i64 307, !11, i64 308, !11, i64 312, !11, i64 316, !11, i64 320, !11, i64 324, !11, i64 328, !11, i64 332, !11, i64 336, !11, i64 340, !11, i64 344, !7, i64 348, !7, i64 352, !7, i64 356, !7, i64 360, !7, i64 364, !12, i64 368, !12, i64 376, !8, i64 384, !12, i64 448, !12, i64 456, !12, i64 464, !12, i64 472, !12, i64 480, !7, i64 488, !7, i64 492, !12, i64 496, !591, i64 504, !11, i64 512, !11, i64 516, !11, i64 520, !8, i64 524, !8, i64 525, !8, i64 526}
!591 = !{!"CharInfo", !10, i64 0, !10, i64 2, !8, i64 4, !8, i64 5, !10, i64 6}
!592 = !{!590, !12, i64 152}
!593 = !{!594, !10, i64 16}
!594 = !{!"Nurb", !12, i64 0, !12, i64 8, !10, i64 16, !10, i64 18, !10, i64 20, !10, i64 22, !7, i64 24, !7, i64 28, !8, i64 32, !10, i64 36, !10, i64 38, !10, i64 40, !10, i64 42, !10, i64 44, !10, i64 46, !12, i64 48, !12, i64 56, !12, i64 64, !12, i64 72, !10, i64 80, !10, i64 82, !7, i64 84}
!595 = !{!594, !7, i64 24}
!596 = !{!594, !7, i64 28}
!597 = !{!594, !12, i64 64}
!598 = !{!599, !10, i64 26}
!599 = !{!"BPoint", !8, i64 0, !11, i64 16, !11, i64 20, !10, i64 24, !10, i64 26, !11, i64 28, !11, i64 32}
!600 = !{!599, !10, i64 24}
!601 = distinct !{!601, !23}
!602 = distinct !{!602, !23}
!603 = !{!594, !12, i64 72}
!604 = !{!202, !8, i64 54}
!605 = distinct !{!605, !23}
!606 = !{!202, !11, i64 44}
!607 = !{!202, !11, i64 36}
!608 = distinct !{!608, !23}
!609 = distinct !{!609, !23}
!610 = distinct !{!610, !23}
!611 = distinct !{!611, !23}
!612 = distinct !{!612, !23}
!613 = !{!614, !12, i64 272}
!614 = !{!"Lattice", !30, i64 0, !12, i64 120, !10, i64 128, !10, i64 130, !10, i64 132, !10, i64 134, !10, i64 136, !10, i64 138, !10, i64 140, !10, i64 142, !8, i64 144, !8, i64 145, !8, i64 146, !8, i64 147, !7, i64 148, !11, i64 152, !11, i64 156, !11, i64 160, !11, i64 164, !11, i64 168, !11, i64 172, !12, i64 176, !12, i64 184, !12, i64 192, !12, i64 200, !8, i64 208, !12, i64 272}
!615 = !{!616, !12, i64 0}
!616 = !{!"EditLatt", !12, i64 0, !7, i64 8, !8, i64 12}
!617 = !{!614, !10, i64 128}
!618 = !{!614, !10, i64 130}
!619 = !{!614, !10, i64 132}
!620 = !{!614, !12, i64 176}
!621 = distinct !{!621, !23}
!622 = distinct !{!622, !23}
!623 = !{!624, !12, i64 160}
!624 = !{!"MetaBall", !30, i64 0, !12, i64 120, !15, i64 128, !15, i64 144, !12, i64 160, !12, i64 168, !12, i64 176, !8, i64 184, !8, i64 185, !10, i64 186, !10, i64 188, !10, i64 190, !8, i64 192, !8, i64 204, !8, i64 216, !11, i64 228, !11, i64 232, !11, i64 236, !12, i64 240}
!625 = !{!626, !10, i64 26}
!626 = !{!"MetaElem", !12, i64 0, !12, i64 8, !12, i64 16, !10, i64 24, !10, i64 26, !10, i64 28, !10, i64 30, !11, i64 32, !11, i64 36, !11, i64 40, !8, i64 44, !11, i64 60, !11, i64 64, !11, i64 68, !11, i64 72, !11, i64 76, !11, i64 80, !11, i64 84, !12, i64 88, !12, i64 96}
!627 = distinct !{!627, !23}
!628 = !{!626, !11, i64 60}
!629 = !{!626, !11, i64 64}
!630 = !{!626, !11, i64 68}
!631 = !{!336, !12, i64 64}
!632 = distinct !{!632, !23}
!633 = !{!73, !7, i64 136}
!634 = distinct !{!634, !23}
!635 = !{!73, !11, i64 152}
!636 = !{!73, !11, i64 176}
!637 = !{!36, !7, i64 196}
!638 = !{!21, !10, i64 220}
!639 = distinct !{!639, !23}
!640 = distinct !{!640, !23}
!641 = distinct !{!641, !23}
!642 = !{i16 0, i16 2}
!643 = distinct !{!643, !23}
!644 = distinct !{!644, !23}
!645 = distinct !{!645, !646}
!646 = !{!"llvm.loop.unroll.disable"}
!647 = !{!336, !12, i64 104}
!648 = !{!336, !12, i64 88}
!649 = !{!336, !11, i64 96}
!650 = !{!336, !7, i64 320}
!651 = !{!40, !11, i64 272}
!652 = !{!21, !12, i64 184}
!653 = distinct !{!653, !23}
!654 = !{!227, !7, i64 304}
!655 = !{!136, !10, i64 52}
!656 = distinct !{!656, !23}
!657 = distinct !{!657, !23}
!658 = !{!230, !10, i64 0}
!659 = !{!136, !12, i64 24}
!660 = distinct !{!660, !23, !661}
!661 = !{!"llvm.loop.peeled.count", i32 1}
!662 = distinct !{!662, !23}
!663 = !{!664, !12, i64 1888}
!664 = !{!"Main", !12, i64 0, !12, i64 8, !8, i64 16, !10, i64 1040, !10, i64 1042, !10, i64 1044, !10, i64 1046, !32, i64 1048, !8, i64 1056, !10, i64 1072, !12, i64 1080, !15, i64 1088, !15, i64 1104, !15, i64 1120, !15, i64 1136, !15, i64 1152, !15, i64 1168, !15, i64 1184, !15, i64 1200, !15, i64 1216, !15, i64 1232, !15, i64 1248, !15, i64 1264, !15, i64 1280, !15, i64 1296, !15, i64 1312, !15, i64 1328, !15, i64 1344, !15, i64 1360, !15, i64 1376, !15, i64 1392, !15, i64 1408, !15, i64 1424, !15, i64 1440, !15, i64 1456, !15, i64 1472, !15, i64 1488, !15, i64 1504, !15, i64 1520, !15, i64 1536, !15, i64 1552, !15, i64 1568, !15, i64 1584, !15, i64 1600, !15, i64 1616, !8, i64 1632, !12, i64 1888, !12, i64 1896}
!665 = distinct !{!665, !23}
!666 = !{!29, !12, i64 24}
!667 = !{!29, !12, i64 216}
!668 = !{!29, !10, i64 948}
!669 = distinct !{!669, !23}
!670 = distinct !{!670, !23}
!671 = distinct !{!671, !23}
!672 = distinct !{!672, !23}
!673 = distinct !{!673, !23}
!674 = !{i8 0, i8 2}
!675 = distinct !{!675, !23}
!676 = distinct !{!676, !23}
!677 = distinct !{!677, !23}
!678 = !{!679, !12, i64 32}
!679 = !{!"CollectionPointerLink", !12, i64 0, !12, i64 8, !680, i64 16}
!680 = !{!"PointerRNA", !681, i64 0, !12, i64 8, !12, i64 16}
!681 = !{!"", !12, i64 0}
!682 = !{!29, !10, i64 954}
!683 = !{!29, !10, i64 1040}
!684 = distinct !{!684, !23}
!685 = distinct !{!685, !23}
!686 = distinct !{!686, !23}
!687 = !{!154, !12, i64 16}
!688 = distinct !{!688, !23}
!689 = distinct !{!689, !23}
!690 = !{!154, !7, i64 136}
!691 = distinct !{!691, !23}
!692 = distinct !{!692, !23}
!693 = distinct !{!693, !23}
!694 = distinct !{!694, !23}
!695 = distinct !{!695, !23}
!696 = distinct !{!696, !23}
!697 = distinct !{!697, !23}
!698 = distinct !{!698, !23}
!699 = distinct !{!699, !23}
!700 = !{!45, !10, i64 26}
!701 = distinct !{!701, !23}
!702 = !{i64 0, i64 8, !33, i64 8, i64 2, !58, i64 10, i64 2, !58, i64 12, i64 2, !58, i64 14, i64 2, !58, i64 16, i64 64, !51, i64 80, i64 8, !33, i64 88, i64 64, !51, i64 152, i64 4, !82, i64 156, i64 4, !82, i64 160, i64 4, !82, i64 164, i64 12, !51, i64 176, i64 2, !58, i64 178, i64 2, !58, i64 180, i64 4, !82}
!703 = distinct !{!703, !23}
!704 = distinct !{!704, !23}
!705 = !{!706, !7, i64 8}
!706 = !{!"bChildOfConstraint", !12, i64 0, !7, i64 8, !7, i64 12, !8, i64 16, !8, i64 80}
!707 = !{!708, !7, i64 8}
!708 = !{!"bRotateLikeConstraint", !12, i64 0, !7, i64 8, !7, i64 12, !8, i64 16}
!709 = distinct !{!709, !23}
!710 = !{!29, !11, i64 616}
!711 = !{!29, !12, i64 1176}
!712 = !{!29, !10, i64 952}
