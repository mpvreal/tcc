; ModuleID = 'magick/quantum-export.c'
source_filename = "magick/quantum-export.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct._Image = type { i32, i32, i32, i64, i32, i32, i32, i64, i64, i64, i64, ptr, %struct._PixelPacket, %struct._PixelPacket, %struct._PixelPacket, double, %struct._ChromaticityInfo, i32, ptr, i32, ptr, ptr, ptr, i64, double, double, %struct._RectangleInfo, %struct._RectangleInfo, %struct._RectangleInfo, double, double, double, i32, i32, i32, i32, i32, i32, ptr, i64, i64, i64, i64, i64, i64, %struct._ErrorInfo, %struct._TimerInfo, ptr, ptr, ptr, ptr, ptr, ptr, [4096 x i8], [4096 x i8], [4096 x i8], i64, i64, %struct._ExceptionInfo, i32, i64, ptr, %struct._ProfileInfo, %struct._ProfileInfo, ptr, i64, i64, ptr, ptr, ptr, i32, i32, %struct._PixelPacket, ptr, %struct._RectangleInfo, ptr, ptr, i32, i32, i64, i32, i64, i64, i32, i64 }
%struct._ChromaticityInfo = type { %struct._PrimaryInfo, %struct._PrimaryInfo, %struct._PrimaryInfo, %struct._PrimaryInfo }
%struct._PrimaryInfo = type { double, double, double }
%struct._ErrorInfo = type { double, double, double }
%struct._TimerInfo = type { %struct._Timer, %struct._Timer, i32, i64 }
%struct._Timer = type { double, double, double }
%struct._ExceptionInfo = type { i32, i32, ptr, ptr, ptr, i32, ptr, i64 }
%struct._ProfileInfo = type { ptr, i64, ptr, i64 }
%struct._PixelPacket = type { i16, i16, i16, i16 }
%struct._RectangleInfo = type { i64, i64, i64, i64 }
%struct._QuantumInfo = type { i64, i64, i32, double, double, double, i64, i32, i32, i32, i64, ptr, i64, i32, %struct._QuantumState, ptr, i64 }
%struct._QuantumState = type { double, i32, i64, ptr }

@.str = private unnamed_addr constant [24 x i8] c"magick/quantum-export.c\00", align 1
@.str.1 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.2 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.3 = private unnamed_addr constant [28 x i8] c"ColorSeparatedImageRequired\00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"`%s'\00", align 1
@.str.5 = private unnamed_addr constant [25 x i8] c"ColormappedImageRequired\00", align 1

; Function Attrs: nounwind sspstrong uwtable
define dso_local i64 @ExportQuantumPixels(ptr noundef %0, ptr noundef %1, ptr noundef %2, i32 noundef %3, ptr noalias noundef %4, ptr noundef %5) local_unnamed_addr #0 {
  %7 = alloca [8 x i8], align 8
  %8 = alloca [8 x i8], align 8
  %9 = alloca [8 x i8], align 8
  %10 = alloca [8 x i8], align 8
  %11 = alloca [4 x i8], align 4
  %12 = alloca [4 x i8], align 4
  %13 = alloca [4 x i8], align 4
  %14 = alloca [4 x i8], align 4
  %15 = alloca [8 x i8], align 8
  %16 = alloca [8 x i8], align 8
  %17 = alloca [8 x i8], align 8
  %18 = alloca [4 x i8], align 4
  %19 = alloca [4 x i8], align 4
  %20 = alloca [4 x i8], align 4
  %21 = alloca [8 x i8], align 8
  %22 = alloca [4 x i8], align 4
  %23 = alloca [8 x i8], align 8
  %24 = alloca [4 x i8], align 4
  %25 = alloca [8 x i8], align 8
  %26 = alloca [8 x i8], align 8
  %27 = alloca [4 x i8], align 4
  %28 = alloca [4 x i8], align 4
  %29 = alloca [8 x i8], align 8
  %30 = alloca [4 x i8], align 4
  %31 = alloca [8 x i8], align 8
  %32 = alloca [4 x i8], align 4
  %33 = alloca [8 x i8], align 8
  %34 = alloca [8 x i8], align 8
  %35 = alloca [4 x i8], align 4
  %36 = alloca [4 x i8], align 4
  %37 = alloca [8 x i8], align 8
  %38 = alloca [4 x i8], align 4
  %39 = alloca [8 x i8], align 8
  %40 = alloca [8 x i8], align 8
  %41 = alloca [8 x i8], align 8
  %42 = alloca [8 x i8], align 8
  %43 = alloca [8 x i8], align 8
  %44 = alloca [4 x i8], align 4
  %45 = alloca [4 x i8], align 4
  %46 = alloca [4 x i8], align 4
  %47 = alloca [4 x i8], align 4
  %48 = alloca [4 x i8], align 4
  %49 = alloca [8 x i8], align 8
  %50 = alloca [8 x i8], align 8
  %51 = alloca [8 x i8], align 8
  %52 = alloca [8 x i8], align 8
  %53 = alloca [4 x i8], align 4
  %54 = alloca [4 x i8], align 4
  %55 = alloca [4 x i8], align 4
  %56 = alloca [4 x i8], align 4
  %57 = alloca [8 x i8], align 8
  %58 = alloca [4 x i8], align 4
  %59 = alloca [8 x i8], align 8
  %60 = alloca [4 x i8], align 4
  %61 = alloca [8 x i8], align 8
  %62 = alloca [8 x i8], align 8
  %63 = alloca [8 x i8], align 8
  %64 = alloca [8 x i8], align 8
  %65 = alloca [4 x i8], align 4
  %66 = alloca [4 x i8], align 4
  %67 = alloca [4 x i8], align 4
  %68 = alloca [4 x i8], align 4
  %69 = alloca [8 x i8], align 8
  %70 = alloca [8 x i8], align 8
  %71 = alloca [8 x i8], align 8
  %72 = alloca [4 x i8], align 4
  %73 = alloca [4 x i8], align 4
  %74 = alloca [4 x i8], align 4
  %75 = alloca [8 x i8], align 8
  %76 = alloca [4 x i8], align 4
  %77 = getelementptr inbounds %struct._Image, ptr %0, i64 0, i32 59
  %78 = load i32, ptr %77, align 8, !tbaa !5
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %83, label %80

80:                                               ; preds = %6
  %81 = getelementptr inbounds %struct._Image, ptr %0, i64 0, i32 53
  %82 = tail call i32 (i32, ptr, ptr, i64, ptr, ...) @LogMagickEvent(i32 noundef 1, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, i64 noundef 3194, ptr noundef nonnull @.str.2, ptr noundef nonnull %81) #6
  br label %83

83:                                               ; preds = %80, %6
  %84 = icmp eq ptr %4, null
  br i1 %84, label %85, label %87

85:                                               ; preds = %83
  %86 = tail call ptr @GetQuantumPixels(ptr noundef %2) #6
  br label %87

87:                                               ; preds = %85, %83
  %88 = phi ptr [ %86, %85 ], [ %4, %83 ]
  %89 = icmp eq ptr %1, null
  %90 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 9
  br i1 %89, label %91, label %97

91:                                               ; preds = %87
  %92 = tail call i64 @GetImageExtent(ptr noundef nonnull %0) #6
  %93 = tail call ptr @GetVirtualPixelQueue(ptr noundef nonnull %0) #6
  %94 = tail call ptr @GetVirtualIndexQueue(ptr noundef nonnull %0) #6
  %95 = load i32, ptr %90, align 8, !tbaa !24
  %96 = icmp eq i32 %95, 1
  br i1 %96, label %103, label %163

97:                                               ; preds = %87
  %98 = tail call i64 @GetCacheViewExtent(ptr noundef nonnull %1) #6
  %99 = tail call ptr @GetCacheViewVirtualPixelQueue(ptr noundef nonnull %1) #7
  %100 = tail call ptr @GetCacheViewVirtualIndexQueue(ptr noundef nonnull %1) #6
  %101 = load i32, ptr %90, align 8, !tbaa !24
  %102 = icmp eq i32 %101, 1
  br i1 %102, label %105, label %163

103:                                              ; preds = %91
  %104 = tail call ptr @GetAuthenticPixelQueue(ptr noundef nonnull %0) #6
  br label %108

105:                                              ; preds = %97
  %106 = tail call ptr @GetAuthenticPixelQueue(ptr noundef nonnull %0) #6
  %107 = tail call ptr @GetCacheViewVirtualPixelQueue(ptr noundef nonnull %1) #7
  br label %108

108:                                              ; preds = %103, %105
  %109 = phi ptr [ %99, %105 ], [ %93, %103 ]
  %110 = phi ptr [ %100, %105 ], [ %94, %103 ]
  %111 = phi i64 [ %98, %105 ], [ %92, %103 ]
  %112 = phi ptr [ %107, %105 ], [ %104, %103 ]
  %113 = getelementptr inbounds %struct._Image, ptr %0, i64 0, i32 7
  %114 = load i64, ptr %113, align 8, !tbaa !27
  %115 = icmp sgt i64 %114, 0
  br i1 %115, label %116, label %163

116:                                              ; preds = %108, %158
  %117 = phi ptr [ %160, %158 ], [ %112, %108 ]
  %118 = phi i64 [ %161, %158 ], [ 0, %108 ]
  %119 = getelementptr inbounds %struct._PixelPacket, ptr %117, i64 0, i32 3
  %120 = load i16, ptr %119, align 2, !tbaa !28
  %121 = xor i16 %120, -1
  %122 = uitofp i16 %121 to double
  %123 = fmul fast double %122, 0x3EF0001000100010
  %124 = fptrunc double %123 to float
  %125 = getelementptr inbounds %struct._PixelPacket, ptr %117, i64 0, i32 2
  %126 = load i16, ptr %125, align 2, !tbaa !29
  %127 = uitofp i16 %126 to float
  %128 = fmul fast float %124, %127
  %129 = fcmp fast ugt float %128, 0.000000e+00
  br i1 %129, label %130, label %135

130:                                              ; preds = %116
  %131 = fcmp fast ult float %128, 6.553500e+04
  br i1 %131, label %132, label %135

132:                                              ; preds = %130
  %133 = fadd fast float %128, 5.000000e-01
  %134 = fptoui float %133 to i16
  br label %135

135:                                              ; preds = %116, %130, %132
  %136 = phi i16 [ %134, %132 ], [ 0, %116 ], [ -1, %130 ]
  store i16 %136, ptr %125, align 2, !tbaa !29
  %137 = getelementptr inbounds %struct._PixelPacket, ptr %117, i64 0, i32 1
  %138 = load i16, ptr %137, align 2, !tbaa !30
  %139 = uitofp i16 %138 to float
  %140 = fmul fast float %139, %124
  %141 = fcmp fast ugt float %140, 0.000000e+00
  br i1 %141, label %142, label %147

142:                                              ; preds = %135
  %143 = fcmp fast ult float %140, 6.553500e+04
  br i1 %143, label %144, label %147

144:                                              ; preds = %142
  %145 = fadd fast float %140, 5.000000e-01
  %146 = fptoui float %145 to i16
  br label %147

147:                                              ; preds = %135, %142, %144
  %148 = phi i16 [ %146, %144 ], [ 0, %135 ], [ -1, %142 ]
  store i16 %148, ptr %137, align 2, !tbaa !30
  %149 = load i16, ptr %117, align 2, !tbaa !31
  %150 = uitofp i16 %149 to float
  %151 = fmul fast float %150, %124
  %152 = fcmp fast ugt float %151, 0.000000e+00
  br i1 %152, label %153, label %158

153:                                              ; preds = %147
  %154 = fcmp fast ult float %151, 6.553500e+04
  br i1 %154, label %155, label %158

155:                                              ; preds = %153
  %156 = fadd fast float %151, 5.000000e-01
  %157 = fptoui float %156 to i16
  br label %158

158:                                              ; preds = %147, %153, %155
  %159 = phi i16 [ %157, %155 ], [ 0, %147 ], [ -1, %153 ]
  store i16 %159, ptr %117, align 2, !tbaa !31
  %160 = getelementptr inbounds %struct._PixelPacket, ptr %117, i64 1
  %161 = add nuw nsw i64 %118, 1
  %162 = icmp eq i64 %161, %114
  br i1 %162, label %163, label %116, !llvm.loop !32

163:                                              ; preds = %158, %108, %97, %91
  %164 = phi i64 [ %98, %97 ], [ %92, %91 ], [ %111, %108 ], [ %111, %158 ]
  %165 = phi ptr [ %100, %97 ], [ %94, %91 ], [ %110, %108 ], [ %110, %158 ]
  %166 = phi ptr [ %99, %97 ], [ %93, %91 ], [ %109, %108 ], [ %109, %158 ]
  switch i32 %3, label %210 [
    i32 27, label %167
    i32 25, label %167
    i32 17, label %167
  ]

167:                                              ; preds = %163, %163, %163
  %168 = tail call ptr @GetAuthenticPixelQueue(ptr noundef nonnull %0) #6
  br i1 %89, label %171, label %169

169:                                              ; preds = %167
  %170 = tail call ptr @GetCacheViewVirtualPixelQueue(ptr noundef nonnull %1) #7
  br label %171

171:                                              ; preds = %169, %167
  %172 = phi ptr [ %170, %169 ], [ %168, %167 ]
  %173 = icmp sgt i64 %164, 0
  br i1 %173, label %174, label %210

174:                                              ; preds = %171
  %175 = add i64 %164, -1
  %176 = and i64 %164, 3
  %177 = icmp ult i64 %175, 3
  br i1 %177, label %198, label %178

178:                                              ; preds = %174
  %179 = and i64 %164, -4
  br label %180

180:                                              ; preds = %180, %178
  %181 = phi ptr [ %172, %178 ], [ %195, %180 ]
  %182 = phi i64 [ 0, %178 ], [ %196, %180 ]
  %183 = getelementptr inbounds %struct._PixelPacket, ptr %181, i64 0, i32 3
  %184 = load i16, ptr %183, align 2, !tbaa !28
  %185 = xor i16 %184, -1
  store i16 %185, ptr %183, align 2, !tbaa !28
  %186 = getelementptr inbounds %struct._PixelPacket, ptr %181, i64 1, i32 3
  %187 = load i16, ptr %186, align 2, !tbaa !28
  %188 = xor i16 %187, -1
  store i16 %188, ptr %186, align 2, !tbaa !28
  %189 = getelementptr inbounds %struct._PixelPacket, ptr %181, i64 2, i32 3
  %190 = load i16, ptr %189, align 2, !tbaa !28
  %191 = xor i16 %190, -1
  store i16 %191, ptr %189, align 2, !tbaa !28
  %192 = getelementptr inbounds %struct._PixelPacket, ptr %181, i64 3, i32 3
  %193 = load i16, ptr %192, align 2, !tbaa !28
  %194 = xor i16 %193, -1
  store i16 %194, ptr %192, align 2, !tbaa !28
  %195 = getelementptr inbounds %struct._PixelPacket, ptr %181, i64 4
  %196 = add i64 %182, 4
  %197 = icmp eq i64 %196, %179
  br i1 %197, label %198, label %180, !llvm.loop !34

198:                                              ; preds = %180, %174
  %199 = phi ptr [ %172, %174 ], [ %195, %180 ]
  %200 = icmp eq i64 %176, 0
  br i1 %200, label %210, label %201

201:                                              ; preds = %198, %201
  %202 = phi ptr [ %207, %201 ], [ %199, %198 ]
  %203 = phi i64 [ %208, %201 ], [ 0, %198 ]
  %204 = getelementptr inbounds %struct._PixelPacket, ptr %202, i64 0, i32 3
  %205 = load i16, ptr %204, align 2, !tbaa !28
  %206 = xor i16 %205, -1
  store i16 %206, ptr %204, align 2, !tbaa !28
  %207 = getelementptr inbounds %struct._PixelPacket, ptr %202, i64 1
  %208 = add i64 %203, 1
  %209 = icmp eq i64 %208, %176
  br i1 %209, label %210, label %201, !llvm.loop !35

210:                                              ; preds = %198, %201, %171, %163
  %211 = add i32 %3, -23
  %212 = icmp ult i32 %211, 2
  br i1 %212, label %213, label %256

213:                                              ; preds = %210
  %214 = tail call ptr @GetAuthenticPixelQueue(ptr noundef %0) #6
  br i1 %89, label %217, label %215

215:                                              ; preds = %213
  %216 = tail call ptr @GetAuthenticPixelQueue(ptr noundef %0) #6
  br label %217

217:                                              ; preds = %215, %213
  %218 = phi ptr [ %216, %215 ], [ %214, %213 ]
  %219 = icmp sgt i64 %164, 0
  br i1 %219, label %220, label %256

220:                                              ; preds = %217
  %221 = add i64 %164, -1
  %222 = and i64 %164, 3
  %223 = icmp ult i64 %221, 3
  br i1 %223, label %244, label %224

224:                                              ; preds = %220
  %225 = and i64 %164, -4
  br label %226

226:                                              ; preds = %226, %224
  %227 = phi ptr [ %218, %224 ], [ %241, %226 ]
  %228 = phi i64 [ 0, %224 ], [ %242, %226 ]
  %229 = getelementptr inbounds %struct._PixelPacket, ptr %227, i64 0, i32 1
  %230 = load <2 x i16>, ptr %229, align 2, !tbaa !37
  %231 = shufflevector <2 x i16> %230, <2 x i16> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i16> %231, ptr %229, align 2, !tbaa !37
  %232 = getelementptr inbounds %struct._PixelPacket, ptr %227, i64 1, i32 1
  %233 = load <2 x i16>, ptr %232, align 2, !tbaa !37
  %234 = shufflevector <2 x i16> %233, <2 x i16> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i16> %234, ptr %232, align 2, !tbaa !37
  %235 = getelementptr inbounds %struct._PixelPacket, ptr %227, i64 2, i32 1
  %236 = load <2 x i16>, ptr %235, align 2, !tbaa !37
  %237 = shufflevector <2 x i16> %236, <2 x i16> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i16> %237, ptr %235, align 2, !tbaa !37
  %238 = getelementptr inbounds %struct._PixelPacket, ptr %227, i64 3, i32 1
  %239 = load <2 x i16>, ptr %238, align 2, !tbaa !37
  %240 = shufflevector <2 x i16> %239, <2 x i16> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i16> %240, ptr %238, align 2, !tbaa !37
  %241 = getelementptr inbounds %struct._PixelPacket, ptr %227, i64 4
  %242 = add i64 %228, 4
  %243 = icmp eq i64 %242, %225
  br i1 %243, label %244, label %226, !llvm.loop !38

244:                                              ; preds = %226, %220
  %245 = phi ptr [ %218, %220 ], [ %241, %226 ]
  %246 = icmp eq i64 %222, 0
  br i1 %246, label %256, label %247

247:                                              ; preds = %244, %247
  %248 = phi ptr [ %253, %247 ], [ %245, %244 ]
  %249 = phi i64 [ %254, %247 ], [ 0, %244 ]
  %250 = getelementptr inbounds %struct._PixelPacket, ptr %248, i64 0, i32 1
  %251 = load <2 x i16>, ptr %250, align 2, !tbaa !37
  %252 = shufflevector <2 x i16> %251, <2 x i16> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i16> %252, ptr %250, align 2, !tbaa !37
  %253 = getelementptr inbounds %struct._PixelPacket, ptr %248, i64 1
  %254 = add i64 %249, 1
  %255 = icmp eq i64 %254, %222
  br i1 %255, label %256, label %247, !llvm.loop !39

256:                                              ; preds = %244, %247, %217, %210
  tail call void @ResetQuantumState(ptr noundef %2) #6
  %257 = tail call i64 @GetQuantumExtent(ptr noundef %0, ptr noundef %2, i32 noundef %3) #6
  switch i32 %3, label %17787 [
    i32 1, label %258
    i32 26, label %774
    i32 16, label %2391
    i32 27, label %2391
    i32 2, label %4094
    i32 3, label %4720
    i32 19, label %4720
    i32 22, label %5209
    i32 5, label %5579
    i32 4, label %6641
    i32 25, label %6641
    i32 8, label %7932
    i32 7, label %9329
    i32 9, label %10281
    i32 12, label %10281
    i32 11, label %10779
    i32 10, label %11622
    i32 13, label %12803
    i32 14, label %13301
    i32 6, label %13301
    i32 18, label %13799
    i32 23, label %13799
    i32 15, label %15411
    i32 17, label %15411
    i32 24, label %15411
  ]

258:                                              ; preds = %256
  tail call void @llvm.experimental.noalias.scope.decl(metadata !40)
  tail call void @llvm.experimental.noalias.scope.decl(metadata !43)
  %259 = load i64, ptr %2, align 8, !tbaa !45, !noalias !46
  %260 = add i64 %259, -8
  %261 = tail call i64 @llvm.fshl.i64(i64 %259, i64 %260, i64 61)
  switch i64 %261, label %711 [
    i64 0, label %262
    i64 1, label %300
    i64 3, label %501
    i64 7, label %646
  ]

262:                                              ; preds = %258
  %263 = icmp sgt i64 %164, 0
  br i1 %263, label %264, label %17875

264:                                              ; preds = %262
  %265 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %266 = load i64, ptr %265, align 8, !tbaa !47, !noalias !46
  %267 = and i64 %164, 1
  %268 = icmp eq i64 %164, 1
  br i1 %268, label %17113, label %269

269:                                              ; preds = %264
  %270 = and i64 %164, -2
  br label %271

271:                                              ; preds = %271, %269
  %272 = phi ptr [ %166, %269 ], [ %296, %271 ]
  %273 = phi ptr [ %88, %269 ], [ %297, %271 ]
  %274 = phi i64 [ 0, %269 ], [ %298, %271 ]
  %275 = getelementptr inbounds %struct._PixelPacket, ptr %272, i64 0, i32 3
  %276 = load i16, ptr %275, align 2, !tbaa !28, !alias.scope !40, !noalias !43
  %277 = xor i16 %276, -1
  %278 = zext i16 %277 to i64
  %279 = add nuw nsw i64 %278, 128
  %280 = lshr i64 %279, 8
  %281 = sub nsw i64 %279, %280
  %282 = lshr i64 %281, 8
  %283 = trunc i64 %282 to i8
  %284 = getelementptr inbounds i8, ptr %273, i64 1
  store i8 %283, ptr %273, align 1, !tbaa !48, !alias.scope !43, !noalias !40
  %285 = getelementptr inbounds i8, ptr %284, i64 %266
  %286 = getelementptr inbounds %struct._PixelPacket, ptr %272, i64 1, i32 3
  %287 = load i16, ptr %286, align 2, !tbaa !28, !alias.scope !40, !noalias !43
  %288 = xor i16 %287, -1
  %289 = zext i16 %288 to i64
  %290 = add nuw nsw i64 %289, 128
  %291 = lshr i64 %290, 8
  %292 = sub nsw i64 %290, %291
  %293 = lshr i64 %292, 8
  %294 = trunc i64 %293 to i8
  %295 = getelementptr inbounds i8, ptr %285, i64 1
  store i8 %294, ptr %285, align 1, !tbaa !48, !alias.scope !43, !noalias !40
  %296 = getelementptr inbounds %struct._PixelPacket, ptr %272, i64 2
  %297 = getelementptr inbounds i8, ptr %295, i64 %266
  %298 = add i64 %274, 2
  %299 = icmp eq i64 %298, %270
  br i1 %299, label %17113, label %271, !llvm.loop !49

300:                                              ; preds = %258
  %301 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 2
  %302 = load i32, ptr %301, align 8, !tbaa !50, !noalias !46
  %303 = icmp eq i32 %302, 1
  %304 = icmp sgt i64 %164, 0
  br i1 %303, label %368, label %305

305:                                              ; preds = %300
  br i1 %304, label %306, label %17875

306:                                              ; preds = %305
  %307 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %308 = load i32, ptr %307, align 8, !tbaa !51, !noalias !46
  %309 = freeze i32 %308
  %310 = icmp eq i32 %309, 1
  %311 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %312 = load i64, ptr %311, align 8, !tbaa !47, !noalias !46
  br i1 %310, label %319, label %313

313:                                              ; preds = %306
  %314 = add i64 %164, -1
  %315 = and i64 %164, 3
  %316 = icmp ult i64 %314, 3
  br i1 %316, label %17147, label %317

317:                                              ; preds = %313
  %318 = and i64 %164, -4
  br label %458

319:                                              ; preds = %306
  %320 = add i64 %164, -1
  %321 = and i64 %164, 3
  %322 = icmp ult i64 %320, 3
  br i1 %322, label %17127, label %323

323:                                              ; preds = %319
  %324 = and i64 %164, -4
  br label %325

325:                                              ; preds = %325, %323
  %326 = phi ptr [ %166, %323 ], [ %364, %325 ]
  %327 = phi ptr [ %88, %323 ], [ %365, %325 ]
  %328 = phi i64 [ 0, %323 ], [ %366, %325 ]
  %329 = getelementptr inbounds %struct._PixelPacket, ptr %326, i64 0, i32 3
  %330 = load i16, ptr %329, align 2, !tbaa !28, !alias.scope !40, !noalias !43
  %331 = xor i16 %330, -1
  %332 = lshr i16 %331, 8
  %333 = trunc i16 %332 to i8
  %334 = trunc i16 %331 to i8
  store i8 %334, ptr %327, align 1, !alias.scope !43, !noalias !40
  %335 = getelementptr inbounds i8, ptr %327, i64 1
  store i8 %333, ptr %335, align 1, !alias.scope !43, !noalias !40
  %336 = getelementptr inbounds i8, ptr %327, i64 2
  %337 = getelementptr inbounds i8, ptr %336, i64 %312
  %338 = getelementptr inbounds %struct._PixelPacket, ptr %326, i64 1, i32 3
  %339 = load i16, ptr %338, align 2, !tbaa !28, !alias.scope !40, !noalias !43
  %340 = xor i16 %339, -1
  %341 = lshr i16 %340, 8
  %342 = trunc i16 %341 to i8
  %343 = trunc i16 %340 to i8
  store i8 %343, ptr %337, align 1, !alias.scope !43, !noalias !40
  %344 = getelementptr inbounds i8, ptr %337, i64 1
  store i8 %342, ptr %344, align 1, !alias.scope !43, !noalias !40
  %345 = getelementptr inbounds i8, ptr %337, i64 2
  %346 = getelementptr inbounds i8, ptr %345, i64 %312
  %347 = getelementptr inbounds %struct._PixelPacket, ptr %326, i64 2, i32 3
  %348 = load i16, ptr %347, align 2, !tbaa !28, !alias.scope !40, !noalias !43
  %349 = xor i16 %348, -1
  %350 = lshr i16 %349, 8
  %351 = trunc i16 %350 to i8
  %352 = trunc i16 %349 to i8
  store i8 %352, ptr %346, align 1, !alias.scope !43, !noalias !40
  %353 = getelementptr inbounds i8, ptr %346, i64 1
  store i8 %351, ptr %353, align 1, !alias.scope !43, !noalias !40
  %354 = getelementptr inbounds i8, ptr %346, i64 2
  %355 = getelementptr inbounds i8, ptr %354, i64 %312
  %356 = getelementptr inbounds %struct._PixelPacket, ptr %326, i64 3, i32 3
  %357 = load i16, ptr %356, align 2, !tbaa !28, !alias.scope !40, !noalias !43
  %358 = xor i16 %357, -1
  %359 = lshr i16 %358, 8
  %360 = trunc i16 %359 to i8
  %361 = trunc i16 %358 to i8
  store i8 %361, ptr %355, align 1, !alias.scope !43, !noalias !40
  %362 = getelementptr inbounds i8, ptr %355, i64 1
  store i8 %360, ptr %362, align 1, !alias.scope !43, !noalias !40
  %363 = getelementptr inbounds i8, ptr %355, i64 2
  %364 = getelementptr inbounds %struct._PixelPacket, ptr %326, i64 4
  %365 = getelementptr inbounds i8, ptr %363, i64 %312
  %366 = add i64 %328, 4
  %367 = icmp eq i64 %366, %324
  br i1 %367, label %17127, label %325, !llvm.loop !52

368:                                              ; preds = %300
  br i1 %304, label %369, label %17875

369:                                              ; preds = %368
  %370 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %371 = load i32, ptr %370, align 8, !tbaa !51, !noalias !46
  %372 = icmp eq i32 %371, 1
  %373 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %374 = load i64, ptr %373, align 8, !tbaa !47, !noalias !46
  br label %375

375:                                              ; preds = %445, %369
  %376 = phi ptr [ %166, %369 ], [ %454, %445 ]
  %377 = phi ptr [ %88, %369 ], [ %455, %445 ]
  %378 = phi i64 [ 0, %369 ], [ %456, %445 ]
  %379 = getelementptr inbounds %struct._PixelPacket, ptr %376, i64 0, i32 3
  %380 = load i16, ptr %379, align 2, !tbaa !28, !alias.scope !40, !noalias !43
  %381 = xor i16 %380, -1
  %382 = uitofp i16 %381 to double
  %383 = fmul fast double %382, 0x3EF0001000100010
  %384 = fptrunc double %383 to float
  %385 = bitcast float %384 to i32
  %386 = lshr i32 %385, 16
  %387 = and i32 %386, 32768
  %388 = lshr i32 %385, 23
  %389 = and i32 %388, 255
  %390 = add nsw i32 %389, -112
  %391 = and i32 %385, 8388607
  %392 = icmp ult i32 %389, 113
  br i1 %392, label %393, label %410

393:                                              ; preds = %375
  %394 = icmp ult i32 %389, 102
  br i1 %394, label %407, label %395

395:                                              ; preds = %393
  %396 = or i32 %391, 8388608
  %397 = sub nuw nsw i32 126, %389
  %398 = sub nuw nsw i32 125, %389
  %399 = shl nsw i32 -1, %398
  %400 = xor i32 %399, -1
  %401 = add nuw nsw i32 %396, %400
  %402 = lshr i32 %396, %397
  %403 = and i32 %402, 1
  %404 = add nuw nsw i32 %401, %403
  %405 = lshr i32 %404, %397
  %406 = or i32 %405, %387
  br label %407

407:                                              ; preds = %395, %393
  %408 = phi i32 [ %406, %395 ], [ %387, %393 ]
  %409 = trunc i32 %408 to i16
  br label %445

410:                                              ; preds = %375
  %411 = icmp eq i32 %390, 143
  br i1 %411, label %412, label %425

412:                                              ; preds = %410
  %413 = icmp eq i32 %391, 0
  br i1 %413, label %414, label %417

414:                                              ; preds = %412
  %415 = trunc i32 %387 to i16
  %416 = or i16 %415, 31744
  br label %445

417:                                              ; preds = %412
  %418 = lshr i32 %391, 13
  %419 = icmp ult i32 %391, 8192
  %420 = zext i1 %419 to i32
  %421 = or i32 %418, %420
  %422 = or i32 %421, %387
  %423 = trunc i32 %422 to i16
  %424 = or i16 %423, 31744
  br label %445

425:                                              ; preds = %410
  %426 = lshr i32 %385, 13
  %427 = and i32 %426, 1
  %428 = add nuw nsw i32 %391, 4095
  %429 = add nuw nsw i32 %428, %427
  %430 = and i32 %429, 8388608
  %431 = icmp eq i32 %430, 0
  %432 = add nsw i32 %389, -111
  %433 = select i1 %431, i32 %390, i32 %432
  %434 = icmp ugt i32 %433, 30
  br i1 %434, label %435, label %438

435:                                              ; preds = %425
  %436 = trunc i32 %387 to i16
  %437 = or i16 %436, 31744
  br label %445

438:                                              ; preds = %425
  %439 = lshr i32 %429, 13
  %440 = shl nuw nsw i32 %433, 10
  %441 = select i1 %431, i32 %439, i32 0
  %442 = or i32 %441, %440
  %443 = or i32 %442, %387
  %444 = trunc i32 %443 to i16
  br label %445

445:                                              ; preds = %438, %435, %417, %414, %407
  %446 = phi i16 [ %409, %407 ], [ %416, %414 ], [ %424, %417 ], [ %437, %435 ], [ %444, %438 ]
  %447 = lshr i16 %446, 8
  %448 = select i1 %372, i16 %446, i16 %447
  %449 = select i1 %372, i16 %447, i16 %446
  %450 = trunc i16 %449 to i8
  %451 = trunc i16 %448 to i8
  store i8 %451, ptr %377, align 1, !alias.scope !43, !noalias !40
  %452 = getelementptr inbounds i8, ptr %377, i64 1
  store i8 %450, ptr %452, align 1, !alias.scope !43, !noalias !40
  %453 = getelementptr inbounds i8, ptr %377, i64 2
  %454 = getelementptr inbounds %struct._PixelPacket, ptr %376, i64 1
  %455 = getelementptr inbounds i8, ptr %453, i64 %374
  %456 = add nuw nsw i64 %378, 1
  %457 = icmp eq i64 %456, %164
  br i1 %457, label %17787, label %375, !llvm.loop !53

458:                                              ; preds = %458, %317
  %459 = phi ptr [ %166, %317 ], [ %497, %458 ]
  %460 = phi ptr [ %88, %317 ], [ %498, %458 ]
  %461 = phi i64 [ 0, %317 ], [ %499, %458 ]
  %462 = getelementptr inbounds %struct._PixelPacket, ptr %459, i64 0, i32 3
  %463 = load i16, ptr %462, align 2, !tbaa !28, !alias.scope !40, !noalias !43
  %464 = xor i16 %463, -1
  %465 = lshr i16 %464, 8
  %466 = trunc i16 %464 to i8
  %467 = trunc i16 %465 to i8
  store i8 %467, ptr %460, align 1, !alias.scope !43, !noalias !40
  %468 = getelementptr inbounds i8, ptr %460, i64 1
  store i8 %466, ptr %468, align 1, !alias.scope !43, !noalias !40
  %469 = getelementptr inbounds i8, ptr %460, i64 2
  %470 = getelementptr inbounds i8, ptr %469, i64 %312
  %471 = getelementptr inbounds %struct._PixelPacket, ptr %459, i64 1, i32 3
  %472 = load i16, ptr %471, align 2, !tbaa !28, !alias.scope !40, !noalias !43
  %473 = xor i16 %472, -1
  %474 = lshr i16 %473, 8
  %475 = trunc i16 %473 to i8
  %476 = trunc i16 %474 to i8
  store i8 %476, ptr %470, align 1, !alias.scope !43, !noalias !40
  %477 = getelementptr inbounds i8, ptr %470, i64 1
  store i8 %475, ptr %477, align 1, !alias.scope !43, !noalias !40
  %478 = getelementptr inbounds i8, ptr %470, i64 2
  %479 = getelementptr inbounds i8, ptr %478, i64 %312
  %480 = getelementptr inbounds %struct._PixelPacket, ptr %459, i64 2, i32 3
  %481 = load i16, ptr %480, align 2, !tbaa !28, !alias.scope !40, !noalias !43
  %482 = xor i16 %481, -1
  %483 = lshr i16 %482, 8
  %484 = trunc i16 %482 to i8
  %485 = trunc i16 %483 to i8
  store i8 %485, ptr %479, align 1, !alias.scope !43, !noalias !40
  %486 = getelementptr inbounds i8, ptr %479, i64 1
  store i8 %484, ptr %486, align 1, !alias.scope !43, !noalias !40
  %487 = getelementptr inbounds i8, ptr %479, i64 2
  %488 = getelementptr inbounds i8, ptr %487, i64 %312
  %489 = getelementptr inbounds %struct._PixelPacket, ptr %459, i64 3, i32 3
  %490 = load i16, ptr %489, align 2, !tbaa !28, !alias.scope !40, !noalias !43
  %491 = xor i16 %490, -1
  %492 = lshr i16 %491, 8
  %493 = trunc i16 %491 to i8
  %494 = trunc i16 %492 to i8
  store i8 %494, ptr %488, align 1, !alias.scope !43, !noalias !40
  %495 = getelementptr inbounds i8, ptr %488, i64 1
  store i8 %493, ptr %495, align 1, !alias.scope !43, !noalias !40
  %496 = getelementptr inbounds i8, ptr %488, i64 2
  %497 = getelementptr inbounds %struct._PixelPacket, ptr %459, i64 4
  %498 = getelementptr inbounds i8, ptr %496, i64 %312
  %499 = add i64 %461, 4
  %500 = icmp eq i64 %499, %318
  br i1 %500, label %17147, label %458, !llvm.loop !52

501:                                              ; preds = %258
  %502 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 2
  %503 = load i32, ptr %502, align 8, !tbaa !50, !noalias !46
  %504 = icmp eq i32 %503, 1
  %505 = icmp sgt i64 %164, 0
  br i1 %504, label %562, label %506

506:                                              ; preds = %501
  br i1 %505, label %507, label %17875

507:                                              ; preds = %506
  %508 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %509 = load i32, ptr %508, align 8, !tbaa !51, !noalias !46
  %510 = icmp eq i32 %509, 1
  %511 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %512 = load i64, ptr %511, align 8, !tbaa !47, !noalias !46
  br i1 %510, label %518, label %513

513:                                              ; preds = %507
  %514 = and i64 %164, 1
  %515 = icmp eq i64 %164, 1
  br i1 %515, label %17186, label %516

516:                                              ; preds = %513
  %517 = and i64 %164, -2
  br label %607

518:                                              ; preds = %507
  %519 = and i64 %164, 1
  %520 = icmp eq i64 %164, 1
  br i1 %520, label %17167, label %521

521:                                              ; preds = %518
  %522 = and i64 %164, -2
  br label %523

523:                                              ; preds = %523, %521
  %524 = phi ptr [ %166, %521 ], [ %558, %523 ]
  %525 = phi ptr [ %88, %521 ], [ %559, %523 ]
  %526 = phi i64 [ 0, %521 ], [ %560, %523 ]
  %527 = getelementptr inbounds %struct._PixelPacket, ptr %524, i64 0, i32 3
  %528 = load i16, ptr %527, align 2, !tbaa !28, !alias.scope !40, !noalias !43
  %529 = xor i16 %528, -1
  %530 = zext i16 %529 to i32
  %531 = mul nuw i32 %530, 65537
  %532 = lshr i32 %531, 8
  %533 = lshr i32 %531, 24
  %534 = trunc i32 %533 to i8
  %535 = trunc i16 %529 to i8
  %536 = trunc i32 %532 to i8
  %537 = trunc i32 %531 to i8
  store i8 %537, ptr %525, align 1, !alias.scope !43, !noalias !40
  %538 = getelementptr inbounds i8, ptr %525, i64 1
  store i8 %536, ptr %538, align 1, !alias.scope !43, !noalias !40
  %539 = getelementptr inbounds i8, ptr %525, i64 2
  store i8 %535, ptr %539, align 1, !alias.scope !43, !noalias !40
  %540 = getelementptr inbounds i8, ptr %525, i64 3
  store i8 %534, ptr %540, align 1, !alias.scope !43, !noalias !40
  %541 = getelementptr inbounds i8, ptr %525, i64 4
  %542 = getelementptr inbounds i8, ptr %541, i64 %512
  %543 = getelementptr inbounds %struct._PixelPacket, ptr %524, i64 1, i32 3
  %544 = load i16, ptr %543, align 2, !tbaa !28, !alias.scope !40, !noalias !43
  %545 = xor i16 %544, -1
  %546 = zext i16 %545 to i32
  %547 = mul nuw i32 %546, 65537
  %548 = lshr i32 %547, 8
  %549 = lshr i32 %547, 24
  %550 = trunc i32 %549 to i8
  %551 = trunc i16 %545 to i8
  %552 = trunc i32 %548 to i8
  %553 = trunc i32 %547 to i8
  store i8 %553, ptr %542, align 1, !alias.scope !43, !noalias !40
  %554 = getelementptr inbounds i8, ptr %542, i64 1
  store i8 %552, ptr %554, align 1, !alias.scope !43, !noalias !40
  %555 = getelementptr inbounds i8, ptr %542, i64 2
  store i8 %551, ptr %555, align 1, !alias.scope !43, !noalias !40
  %556 = getelementptr inbounds i8, ptr %542, i64 3
  store i8 %550, ptr %556, align 1, !alias.scope !43, !noalias !40
  %557 = getelementptr inbounds i8, ptr %542, i64 4
  %558 = getelementptr inbounds %struct._PixelPacket, ptr %524, i64 2
  %559 = getelementptr inbounds i8, ptr %557, i64 %512
  %560 = add i64 %526, 2
  %561 = icmp eq i64 %560, %522
  br i1 %561, label %17167, label %523, !llvm.loop !54

562:                                              ; preds = %501
  br i1 %505, label %563, label %17875

563:                                              ; preds = %562
  %564 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 14
  %565 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 3
  %566 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %567 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  br label %568

568:                                              ; preds = %593, %563
  %569 = phi ptr [ %166, %563 ], [ %602, %593 ]
  %570 = phi ptr [ %88, %563 ], [ %604, %593 ]
  %571 = phi i64 [ 0, %563 ], [ %605, %593 ]
  %572 = getelementptr inbounds %struct._PixelPacket, ptr %569, i64 0, i32 3
  %573 = load i16, ptr %572, align 2, !tbaa !28, !alias.scope !40, !noalias !43
  %574 = xor i16 %573, -1
  call void @llvm.experimental.noalias.scope.decl(metadata !55)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %76) #6, !noalias !58
  %575 = call ptr @ResetMagickMemory(ptr noundef nonnull %76, i32 noundef 0, i64 noundef 4) #6, !noalias !58
  %576 = uitofp i16 %574 to double
  %577 = load double, ptr %564, align 8, !tbaa !59, !noalias !58
  %578 = fmul fast double %577, %576
  %579 = load double, ptr %565, align 8, !tbaa !60, !noalias !58
  %580 = fadd fast double %578, %579
  %581 = fptrunc double %580 to float
  %582 = load i32, ptr %566, align 8, !tbaa !51, !noalias !58
  %583 = icmp eq i32 %582, 1
  %584 = bitcast float %581 to i32
  %585 = lshr i32 %584, 24
  %586 = trunc i32 %585 to i8
  %587 = lshr i32 %584, 16
  %588 = trunc i32 %587 to i8
  %589 = lshr i32 %584, 8
  %590 = trunc i32 %589 to i8
  %591 = trunc i32 %584 to i8
  br i1 %583, label %593, label %592

592:                                              ; preds = %568
  br label %593

593:                                              ; preds = %592, %568
  %594 = phi i8 [ %586, %592 ], [ %591, %568 ]
  %595 = phi i8 [ %588, %592 ], [ %590, %568 ]
  %596 = phi i8 [ %590, %592 ], [ %588, %568 ]
  %597 = phi i8 [ %591, %592 ], [ %586, %568 ]
  store i8 %594, ptr %570, align 1, !alias.scope !61, !noalias !40
  %598 = getelementptr inbounds i8, ptr %570, i64 1
  store i8 %595, ptr %598, align 1, !alias.scope !61, !noalias !40
  %599 = getelementptr inbounds i8, ptr %570, i64 2
  store i8 %596, ptr %599, align 1, !alias.scope !61, !noalias !40
  %600 = getelementptr inbounds i8, ptr %570, i64 3
  store i8 %597, ptr %600, align 1, !alias.scope !61, !noalias !40
  %601 = getelementptr inbounds i8, ptr %570, i64 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %76) #6, !noalias !58
  %602 = getelementptr inbounds %struct._PixelPacket, ptr %569, i64 1
  %603 = load i64, ptr %567, align 8, !tbaa !47, !noalias !46
  %604 = getelementptr inbounds i8, ptr %601, i64 %603
  %605 = add nuw nsw i64 %571, 1
  %606 = icmp eq i64 %605, %164
  br i1 %606, label %17787, label %568, !llvm.loop !62

607:                                              ; preds = %607, %516
  %608 = phi ptr [ %166, %516 ], [ %642, %607 ]
  %609 = phi ptr [ %88, %516 ], [ %643, %607 ]
  %610 = phi i64 [ 0, %516 ], [ %644, %607 ]
  %611 = getelementptr inbounds %struct._PixelPacket, ptr %608, i64 0, i32 3
  %612 = load i16, ptr %611, align 2, !tbaa !28, !alias.scope !40, !noalias !43
  %613 = xor i16 %612, -1
  %614 = zext i16 %613 to i32
  %615 = mul nuw i32 %614, 65537
  %616 = lshr i32 %615, 24
  %617 = lshr i32 %615, 8
  %618 = trunc i32 %615 to i8
  %619 = trunc i32 %617 to i8
  %620 = trunc i16 %613 to i8
  %621 = trunc i32 %616 to i8
  store i8 %621, ptr %609, align 1, !alias.scope !43, !noalias !40
  %622 = getelementptr inbounds i8, ptr %609, i64 1
  store i8 %620, ptr %622, align 1, !alias.scope !43, !noalias !40
  %623 = getelementptr inbounds i8, ptr %609, i64 2
  store i8 %619, ptr %623, align 1, !alias.scope !43, !noalias !40
  %624 = getelementptr inbounds i8, ptr %609, i64 3
  store i8 %618, ptr %624, align 1, !alias.scope !43, !noalias !40
  %625 = getelementptr inbounds i8, ptr %609, i64 4
  %626 = getelementptr inbounds i8, ptr %625, i64 %512
  %627 = getelementptr inbounds %struct._PixelPacket, ptr %608, i64 1, i32 3
  %628 = load i16, ptr %627, align 2, !tbaa !28, !alias.scope !40, !noalias !43
  %629 = xor i16 %628, -1
  %630 = zext i16 %629 to i32
  %631 = mul nuw i32 %630, 65537
  %632 = lshr i32 %631, 24
  %633 = lshr i32 %631, 8
  %634 = trunc i32 %631 to i8
  %635 = trunc i32 %633 to i8
  %636 = trunc i16 %629 to i8
  %637 = trunc i32 %632 to i8
  store i8 %637, ptr %626, align 1, !alias.scope !43, !noalias !40
  %638 = getelementptr inbounds i8, ptr %626, i64 1
  store i8 %636, ptr %638, align 1, !alias.scope !43, !noalias !40
  %639 = getelementptr inbounds i8, ptr %626, i64 2
  store i8 %635, ptr %639, align 1, !alias.scope !43, !noalias !40
  %640 = getelementptr inbounds i8, ptr %626, i64 3
  store i8 %634, ptr %640, align 1, !alias.scope !43, !noalias !40
  %641 = getelementptr inbounds i8, ptr %626, i64 4
  %642 = getelementptr inbounds %struct._PixelPacket, ptr %608, i64 2
  %643 = getelementptr inbounds i8, ptr %641, i64 %512
  %644 = add i64 %610, 2
  %645 = icmp eq i64 %644, %517
  br i1 %645, label %17186, label %607, !llvm.loop !54

646:                                              ; preds = %258
  %647 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 2
  %648 = load i32, ptr %647, align 8, !tbaa !50, !noalias !46
  %649 = icmp eq i32 %648, 1
  br i1 %649, label %650, label %711

650:                                              ; preds = %646
  %651 = icmp sgt i64 %164, 0
  br i1 %651, label %652, label %17875

652:                                              ; preds = %650
  %653 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 14
  %654 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 3
  %655 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %656 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  br label %657

657:                                              ; preds = %689, %652
  %658 = phi ptr [ %166, %652 ], [ %706, %689 ]
  %659 = phi ptr [ %88, %652 ], [ %708, %689 ]
  %660 = phi i64 [ 0, %652 ], [ %709, %689 ]
  %661 = getelementptr inbounds %struct._PixelPacket, ptr %658, i64 0, i32 3
  %662 = load i16, ptr %661, align 2, !tbaa !28, !alias.scope !40, !noalias !43
  %663 = xor i16 %662, -1
  %664 = uitofp i16 %663 to double
  call void @llvm.experimental.noalias.scope.decl(metadata !63)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %75) #6, !noalias !66
  %665 = call ptr @ResetMagickMemory(ptr noundef nonnull %75, i32 noundef 0, i64 noundef 8) #6, !noalias !66
  %666 = load double, ptr %653, align 8, !tbaa !59, !noalias !66
  %667 = fmul fast double %666, %664
  %668 = load double, ptr %654, align 8, !tbaa !60, !noalias !66
  %669 = fadd fast double %667, %668
  %670 = load i32, ptr %655, align 8, !tbaa !51, !noalias !66
  %671 = icmp eq i32 %670, 1
  %672 = bitcast double %669 to i64
  %673 = lshr i64 %672, 56
  %674 = trunc i64 %673 to i8
  %675 = lshr i64 %672, 48
  %676 = trunc i64 %675 to i8
  %677 = lshr i64 %672, 40
  %678 = trunc i64 %677 to i8
  %679 = lshr i64 %672, 32
  %680 = trunc i64 %679 to i8
  %681 = lshr i64 %672, 24
  %682 = trunc i64 %681 to i8
  %683 = lshr i64 %672, 16
  %684 = trunc i64 %683 to i8
  %685 = lshr i64 %672, 8
  %686 = trunc i64 %685 to i8
  %687 = trunc i64 %672 to i8
  br i1 %671, label %689, label %688

688:                                              ; preds = %657
  br label %689

689:                                              ; preds = %688, %657
  %690 = phi i8 [ %674, %688 ], [ %687, %657 ]
  %691 = phi i8 [ %676, %688 ], [ %686, %657 ]
  %692 = phi i8 [ %678, %688 ], [ %684, %657 ]
  %693 = phi i8 [ %680, %688 ], [ %682, %657 ]
  %694 = phi i8 [ %682, %688 ], [ %680, %657 ]
  %695 = phi i8 [ %684, %688 ], [ %678, %657 ]
  %696 = phi i8 [ %686, %688 ], [ %676, %657 ]
  %697 = phi i8 [ %687, %688 ], [ %674, %657 ]
  store i8 %690, ptr %659, align 1, !alias.scope !67, !noalias !40
  %698 = getelementptr inbounds i8, ptr %659, i64 1
  store i8 %691, ptr %698, align 1, !alias.scope !67, !noalias !40
  %699 = getelementptr inbounds i8, ptr %659, i64 2
  store i8 %692, ptr %699, align 1, !alias.scope !67, !noalias !40
  %700 = getelementptr inbounds i8, ptr %659, i64 3
  store i8 %693, ptr %700, align 1, !alias.scope !67, !noalias !40
  %701 = getelementptr inbounds i8, ptr %659, i64 4
  store i8 %694, ptr %701, align 1, !alias.scope !67, !noalias !40
  %702 = getelementptr inbounds i8, ptr %659, i64 5
  store i8 %695, ptr %702, align 1, !alias.scope !67, !noalias !40
  %703 = getelementptr inbounds i8, ptr %659, i64 6
  store i8 %696, ptr %703, align 1, !alias.scope !67, !noalias !40
  %704 = getelementptr inbounds i8, ptr %659, i64 7
  store i8 %697, ptr %704, align 1, !alias.scope !67, !noalias !40
  %705 = getelementptr inbounds i8, ptr %659, i64 8
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %75) #6, !noalias !66
  %706 = getelementptr inbounds %struct._PixelPacket, ptr %658, i64 1
  %707 = load i64, ptr %656, align 8, !tbaa !47, !noalias !46
  %708 = getelementptr inbounds i8, ptr %705, i64 %707
  %709 = add nuw nsw i64 %660, 1
  %710 = icmp eq i64 %709, %164
  br i1 %710, label %17787, label %657, !llvm.loop !68

711:                                              ; preds = %646, %258
  %712 = icmp sgt i64 %164, 0
  br i1 %712, label %713, label %17875

713:                                              ; preds = %711
  %714 = add i64 %259, -1
  %715 = shl i64 2, %714
  %716 = add i64 %715, -1
  %717 = uitofp i64 %716 to float
  %718 = fmul fast float %717, 0x3EF0001000000000
  %719 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 14, i32 2
  %720 = icmp sgt i64 %259, 0
  %721 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %722 = load i64, ptr %719, align 8, !tbaa !69, !noalias !70
  %723 = load i64, ptr %721, align 8, !tbaa !47, !noalias !46
  br label %724

724:                                              ; preds = %767, %713
  %725 = phi i64 [ %722, %713 ], [ %768, %767 ]
  %726 = phi ptr [ %166, %713 ], [ %770, %767 ]
  %727 = phi ptr [ %88, %713 ], [ %771, %767 ]
  %728 = phi i64 [ 0, %713 ], [ %772, %767 ]
  %729 = getelementptr inbounds %struct._PixelPacket, ptr %726, i64 0, i32 3
  %730 = load i16, ptr %729, align 2, !tbaa !28, !alias.scope !40, !noalias !43
  %731 = xor i16 %730, -1
  %732 = uitofp i16 %731 to float
  %733 = fmul fast float %718, %732
  %734 = fpext float %733 to double
  %735 = fadd fast double %734, 5.000000e-01
  %736 = fptoui double %735 to i64
  tail call void @llvm.experimental.noalias.scope.decl(metadata !73)
  %737 = icmp eq i64 %725, 0
  br i1 %737, label %738, label %739

738:                                              ; preds = %724
  store i64 8, ptr %719, align 8, !tbaa !69, !noalias !70
  br label %739

739:                                              ; preds = %738, %724
  %740 = phi i64 [ 8, %738 ], [ %725, %724 ]
  br i1 %720, label %741, label %767

741:                                              ; preds = %739, %751
  %742 = phi i64 [ %762, %751 ], [ %740, %739 ]
  %743 = phi i64 [ %747, %751 ], [ %259, %739 ]
  %744 = phi ptr [ %764, %751 ], [ %727, %739 ]
  %745 = tail call i64 @llvm.umin.i64(i64 %743, i64 %742)
  %746 = sub nsw i64 %743, %745
  %747 = tail call i64 @llvm.smax.i64(i64 %746, i64 0)
  %748 = icmp eq i64 %742, 8
  br i1 %748, label %751, label %749

749:                                              ; preds = %741
  %750 = load i8, ptr %744, align 1, !tbaa !48, !alias.scope !74, !noalias !40
  br label %751

751:                                              ; preds = %749, %741
  %752 = phi i8 [ %750, %749 ], [ 0, %741 ]
  %753 = sub i64 %742, %745
  %754 = lshr i64 %736, %747
  %755 = shl nsw i64 -1, %745
  %756 = xor i64 %755, -1
  %757 = and i64 %754, %756
  %758 = shl i64 %757, %753
  %759 = trunc i64 %758 to i8
  %760 = or i8 %752, %759
  store i8 %760, ptr %744, align 1, !tbaa !48, !alias.scope !74, !noalias !40
  %761 = icmp ule i64 %742, %743
  %762 = select i1 %761, i64 8, i64 %753
  %763 = zext i1 %761 to i64
  %764 = getelementptr inbounds i8, ptr %744, i64 %763
  %765 = icmp slt i64 %746, 1
  br i1 %765, label %766, label %741, !llvm.loop !75

766:                                              ; preds = %751
  store i64 %762, ptr %719, align 8, !tbaa !69, !noalias !70
  br label %767

767:                                              ; preds = %766, %739
  %768 = phi i64 [ %740, %739 ], [ %762, %766 ]
  %769 = phi ptr [ %727, %739 ], [ %764, %766 ]
  %770 = getelementptr inbounds %struct._PixelPacket, ptr %726, i64 1
  %771 = getelementptr inbounds i8, ptr %769, i64 %723
  %772 = add nuw nsw i64 %728, 1
  %773 = icmp eq i64 %772, %164
  br i1 %773, label %17787, label %724, !llvm.loop !76

774:                                              ; preds = %256
  tail call void @llvm.experimental.noalias.scope.decl(metadata !77)
  tail call void @llvm.experimental.noalias.scope.decl(metadata !80)
  %775 = load i64, ptr %2, align 8, !tbaa !45, !noalias !82
  switch i64 %775, label %2250 [
    i64 8, label %776
    i64 10, label %806
    i64 12, label %1196
    i64 16, label %1624
    i64 32, label %1906
    i64 64, label %2099
  ]

776:                                              ; preds = %774
  %777 = icmp sgt i64 %164, 0
  br i1 %777, label %778, label %17875

778:                                              ; preds = %776
  %779 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %780 = load i64, ptr %779, align 8, !tbaa !47, !noalias !82
  br label %781

781:                                              ; preds = %781, %778
  %782 = phi ptr [ %166, %778 ], [ %802, %781 ]
  %783 = phi i64 [ 0, %778 ], [ %804, %781 ]
  %784 = phi ptr [ %88, %778 ], [ %803, %781 ]
  %785 = getelementptr inbounds i8, ptr %784, i64 2
  %786 = load <2 x i16>, ptr %782, align 2, !tbaa !37, !alias.scope !77, !noalias !80
  %787 = zext <2 x i16> %786 to <2 x i64>
  %788 = add nuw nsw <2 x i64> %787, <i64 128, i64 128>
  %789 = lshr <2 x i64> %788, <i64 8, i64 8>
  %790 = sub nsw <2 x i64> %788, %789
  %791 = lshr <2 x i64> %790, <i64 8, i64 8>
  %792 = trunc <2 x i64> %791 to <2 x i8>
  store <2 x i8> %792, ptr %784, align 1, !tbaa !48, !alias.scope !80, !noalias !77
  %793 = getelementptr inbounds %struct._PixelPacket, ptr %782, i64 0, i32 2
  %794 = load i16, ptr %793, align 2, !tbaa !29, !alias.scope !77, !noalias !80
  %795 = zext i16 %794 to i64
  %796 = add nuw nsw i64 %795, 128
  %797 = lshr i64 %796, 8
  %798 = sub nsw i64 %796, %797
  %799 = lshr i64 %798, 8
  %800 = trunc i64 %799 to i8
  %801 = getelementptr inbounds i8, ptr %784, i64 3
  store i8 %800, ptr %785, align 1, !tbaa !48, !alias.scope !80, !noalias !77
  %802 = getelementptr inbounds %struct._PixelPacket, ptr %782, i64 1
  %803 = getelementptr inbounds i8, ptr %801, i64 %780
  %804 = add nuw nsw i64 %783, 1
  %805 = icmp eq i64 %804, %164
  br i1 %805, label %17787, label %781, !llvm.loop !83

806:                                              ; preds = %774
  %807 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 8
  %808 = load i32, ptr %807, align 4, !tbaa !84, !noalias !82
  %809 = icmp eq i32 %808, 0
  br i1 %809, label %810, label %872

810:                                              ; preds = %806
  %811 = icmp sgt i64 %164, 0
  br i1 %811, label %812, label %17875

812:                                              ; preds = %810
  %813 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %814 = load i32, ptr %813, align 8, !tbaa !51, !noalias !82
  %815 = icmp eq i32 %814, 1
  %816 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %817 = load i64, ptr %816, align 8, !tbaa !47, !noalias !82
  br label %818

818:                                              ; preds = %855, %812
  %819 = phi ptr [ %166, %812 ], [ %868, %855 ]
  %820 = phi i64 [ 0, %812 ], [ %870, %855 ]
  %821 = phi ptr [ %88, %812 ], [ %869, %855 ]
  %822 = getelementptr inbounds %struct._PixelPacket, ptr %819, i64 0, i32 2
  %823 = load i16, ptr %822, align 2, !tbaa !29, !alias.scope !77, !noalias !80
  %824 = uitofp i16 %823 to float
  %825 = fmul fast float %824, 0x3F8FF82000000000
  %826 = fpext float %825 to double
  %827 = fadd fast double %826, 5.000000e-01
  %828 = fptoui double %827 to i64
  %829 = shl i64 %828, 22
  %830 = getelementptr inbounds %struct._PixelPacket, ptr %819, i64 0, i32 1
  %831 = load i16, ptr %830, align 2, !tbaa !30, !alias.scope !77, !noalias !80
  %832 = uitofp i16 %831 to float
  %833 = fmul fast float %832, 0x3F8FF82000000000
  %834 = fpext float %833 to double
  %835 = fadd fast double %834, 5.000000e-01
  %836 = fptoui double %835 to i64
  %837 = shl i64 %836, 12
  %838 = or i64 %837, %829
  %839 = load i16, ptr %819, align 2, !tbaa !31, !alias.scope !77, !noalias !80
  %840 = uitofp i16 %839 to float
  %841 = fmul fast float %840, 0x3F8FF82000000000
  %842 = fpext float %841 to double
  %843 = fadd fast double %842, 5.000000e-01
  %844 = fptoui double %843 to i64
  %845 = shl i64 %844, 2
  %846 = or i64 %838, %845
  %847 = trunc i64 %846 to i32
  %848 = lshr i32 %847, 16
  br i1 %815, label %849, label %852

849:                                              ; preds = %818
  %850 = lshr i32 %847, 8
  %851 = lshr i32 %847, 24
  br label %855

852:                                              ; preds = %818
  %853 = lshr i32 %847, 24
  %854 = lshr i32 %847, 8
  br label %855

855:                                              ; preds = %852, %849
  %856 = phi i32 [ %847, %849 ], [ %853, %852 ]
  %857 = phi i32 [ %850, %849 ], [ %848, %852 ]
  %858 = phi i32 [ %848, %849 ], [ %854, %852 ]
  %859 = phi i32 [ %851, %849 ], [ %847, %852 ]
  %860 = trunc i32 %859 to i8
  %861 = trunc i32 %858 to i8
  %862 = trunc i32 %857 to i8
  %863 = trunc i32 %856 to i8
  store i8 %863, ptr %821, align 1, !alias.scope !80, !noalias !77
  %864 = getelementptr inbounds i8, ptr %821, i64 1
  store i8 %862, ptr %864, align 1, !alias.scope !80, !noalias !77
  %865 = getelementptr inbounds i8, ptr %821, i64 2
  store i8 %861, ptr %865, align 1, !alias.scope !80, !noalias !77
  %866 = getelementptr inbounds i8, ptr %821, i64 3
  store i8 %860, ptr %866, align 1, !alias.scope !80, !noalias !77
  %867 = getelementptr inbounds i8, ptr %821, i64 4
  %868 = getelementptr inbounds %struct._PixelPacket, ptr %819, i64 1
  %869 = getelementptr inbounds i8, ptr %867, i64 %817
  %870 = add nuw nsw i64 %820, 1
  %871 = icmp eq i64 %870, %164
  br i1 %871, label %17787, label %818, !llvm.loop !85

872:                                              ; preds = %806
  %873 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 1
  %874 = load i64, ptr %873, align 8, !tbaa !86, !noalias !82
  %875 = icmp eq i64 %874, 32
  %876 = icmp sgt i64 %164, 0
  br i1 %875, label %883, label %877

877:                                              ; preds = %872
  br i1 %876, label %878, label %17875

878:                                              ; preds = %877
  %879 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 14, i32 2
  %880 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %881 = load i64, ptr %879, align 8, !tbaa !69, !noalias !82
  %882 = load i64, ptr %880, align 8, !tbaa !47, !noalias !82
  br label %1080

883:                                              ; preds = %872
  br i1 %876, label %884, label %17875

884:                                              ; preds = %883
  %885 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 14, i32 2
  %886 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 14, i32 3
  %887 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 14, i32 1
  %888 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %889 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %890 = load i64, ptr %885, align 8, !tbaa !69, !noalias !82
  %891 = load i64, ptr %889, align 8, !tbaa !47, !noalias !82
  %892 = load ptr, ptr %886, align 8, !tbaa !87, !noalias !82
  br label %893

893:                                              ; preds = %1075, %884
  %894 = phi i64 [ %890, %884 ], [ %1072, %1075 ]
  %895 = phi ptr [ %166, %884 ], [ %1076, %1075 ]
  %896 = phi i64 [ 0, %884 ], [ %1078, %1075 ]
  %897 = phi ptr [ %88, %884 ], [ %1077, %1075 ]
  %898 = getelementptr inbounds %struct._PixelPacket, ptr %895, i64 0, i32 2
  %899 = load i16, ptr %898, align 2, !tbaa !29, !alias.scope !77, !noalias !80
  %900 = uitofp i16 %899 to float
  %901 = fmul fast float %900, 0x3F8FF82000000000
  %902 = fpext float %901 to double
  %903 = fadd fast double %902, 5.000000e-01
  %904 = fptoui double %903 to i64
  %905 = and i64 %904, 4294967295
  tail call void @llvm.experimental.noalias.scope.decl(metadata !88)
  %906 = icmp eq i64 %894, 0
  %907 = select i1 %906, i64 32, i64 %894
  %908 = load i32, ptr %887, align 8, !tbaa !91, !noalias !92
  br label %909

909:                                              ; preds = %951, %893
  %910 = phi i32 [ %908, %893 ], [ %952, %951 ]
  %911 = phi i64 [ %907, %893 ], [ %953, %951 ]
  %912 = phi i64 [ 10, %893 ], [ %925, %951 ]
  %913 = phi ptr [ %897, %893 ], [ %954, %951 ]
  %914 = tail call i64 @llvm.umin.i64(i64 %912, i64 %911)
  %915 = sub nsw i64 10, %912
  %916 = lshr i64 %905, %915
  %917 = getelementptr inbounds i32, ptr %892, i64 %914
  %918 = load i32, ptr %917, align 4, !tbaa !93, !noalias !88
  %919 = zext i32 %918 to i64
  %920 = and i64 %916, %919
  %921 = sub i64 32, %911
  %922 = shl i64 %920, %921
  %923 = trunc i64 %922 to i32
  %924 = or i32 %910, %923
  store i32 %924, ptr %887, align 8, !tbaa !91, !noalias !92
  %925 = sub nsw i64 %912, %914
  %926 = sub i64 %911, %914
  %927 = icmp ugt i64 %911, %912
  br i1 %927, label %951, label %928

928:                                              ; preds = %909
  %929 = load i32, ptr %888, align 8, !tbaa !51, !noalias !92
  %930 = icmp eq i32 %929, 1
  %931 = lshr i32 %924, 16
  br i1 %930, label %932, label %935

932:                                              ; preds = %928
  %933 = lshr i32 %924, 8
  %934 = lshr i32 %924, 24
  br label %938

935:                                              ; preds = %928
  %936 = lshr i32 %924, 24
  %937 = lshr i32 %924, 8
  br label %938

938:                                              ; preds = %935, %932
  %939 = phi i32 [ %924, %932 ], [ %936, %935 ]
  %940 = phi i32 [ %933, %932 ], [ %931, %935 ]
  %941 = phi i32 [ %931, %932 ], [ %937, %935 ]
  %942 = phi i32 [ %934, %932 ], [ %924, %935 ]
  %943 = trunc i32 %942 to i8
  %944 = trunc i32 %941 to i8
  %945 = trunc i32 %940 to i8
  %946 = trunc i32 %939 to i8
  store i8 %946, ptr %913, align 1, !alias.scope !94, !noalias !77
  %947 = getelementptr inbounds i8, ptr %913, i64 1
  store i8 %945, ptr %947, align 1, !alias.scope !94, !noalias !77
  %948 = getelementptr inbounds i8, ptr %913, i64 2
  store i8 %944, ptr %948, align 1, !alias.scope !94, !noalias !77
  %949 = getelementptr inbounds i8, ptr %913, i64 3
  store i8 %943, ptr %949, align 1, !alias.scope !94, !noalias !77
  %950 = getelementptr inbounds i8, ptr %913, i64 4
  store i32 0, ptr %887, align 8, !tbaa !91, !noalias !92
  br label %951

951:                                              ; preds = %938, %909
  %952 = phi i32 [ 0, %938 ], [ %924, %909 ]
  %953 = phi i64 [ 32, %938 ], [ %926, %909 ]
  %954 = phi ptr [ %950, %938 ], [ %913, %909 ]
  %955 = icmp sgt i64 %925, 0
  br i1 %955, label %909, label %956, !llvm.loop !95

956:                                              ; preds = %951
  %957 = getelementptr inbounds %struct._PixelPacket, ptr %895, i64 0, i32 1
  %958 = load i16, ptr %957, align 2, !tbaa !30, !alias.scope !77, !noalias !80
  %959 = uitofp i16 %958 to float
  %960 = fmul fast float %959, 0x3F8FF82000000000
  %961 = fpext float %960 to double
  %962 = fadd fast double %961, 5.000000e-01
  %963 = fptoui double %962 to i64
  %964 = and i64 %963, 4294967295
  tail call void @llvm.experimental.noalias.scope.decl(metadata !96)
  %965 = icmp eq i64 %953, 0
  br i1 %965, label %966, label %967

966:                                              ; preds = %956
  store i64 32, ptr %885, align 8, !tbaa !69, !noalias !99
  br label %967

967:                                              ; preds = %956, %966
  %968 = phi i64 [ 32, %966 ], [ %953, %956 ]
  %969 = load i32, ptr %887, align 8, !tbaa !91, !noalias !99
  br label %970

970:                                              ; preds = %1012, %967
  %971 = phi i32 [ %969, %967 ], [ %1013, %1012 ]
  %972 = phi i64 [ %968, %967 ], [ %1014, %1012 ]
  %973 = phi i64 [ 10, %967 ], [ %986, %1012 ]
  %974 = phi ptr [ %954, %967 ], [ %1015, %1012 ]
  %975 = tail call i64 @llvm.umin.i64(i64 %973, i64 %972)
  %976 = sub nsw i64 10, %973
  %977 = lshr i64 %964, %976
  %978 = getelementptr inbounds i32, ptr %892, i64 %975
  %979 = load i32, ptr %978, align 4, !tbaa !93, !noalias !96
  %980 = zext i32 %979 to i64
  %981 = and i64 %977, %980
  %982 = sub i64 32, %972
  %983 = shl i64 %981, %982
  %984 = trunc i64 %983 to i32
  %985 = or i32 %971, %984
  store i32 %985, ptr %887, align 8, !tbaa !91, !noalias !99
  %986 = sub nsw i64 %973, %975
  %987 = sub i64 %972, %975
  %988 = icmp ugt i64 %972, %973
  br i1 %988, label %1012, label %989

989:                                              ; preds = %970
  %990 = load i32, ptr %888, align 8, !tbaa !51, !noalias !99
  %991 = icmp eq i32 %990, 1
  %992 = lshr i32 %985, 16
  br i1 %991, label %993, label %996

993:                                              ; preds = %989
  %994 = lshr i32 %985, 8
  %995 = lshr i32 %985, 24
  br label %999

996:                                              ; preds = %989
  %997 = lshr i32 %985, 24
  %998 = lshr i32 %985, 8
  br label %999

999:                                              ; preds = %996, %993
  %1000 = phi i32 [ %985, %993 ], [ %997, %996 ]
  %1001 = phi i32 [ %994, %993 ], [ %992, %996 ]
  %1002 = phi i32 [ %992, %993 ], [ %998, %996 ]
  %1003 = phi i32 [ %995, %993 ], [ %985, %996 ]
  %1004 = trunc i32 %1003 to i8
  %1005 = trunc i32 %1002 to i8
  %1006 = trunc i32 %1001 to i8
  %1007 = trunc i32 %1000 to i8
  store i8 %1007, ptr %974, align 1, !alias.scope !100, !noalias !77
  %1008 = getelementptr inbounds i8, ptr %974, i64 1
  store i8 %1006, ptr %1008, align 1, !alias.scope !100, !noalias !77
  %1009 = getelementptr inbounds i8, ptr %974, i64 2
  store i8 %1005, ptr %1009, align 1, !alias.scope !100, !noalias !77
  %1010 = getelementptr inbounds i8, ptr %974, i64 3
  store i8 %1004, ptr %1010, align 1, !alias.scope !100, !noalias !77
  %1011 = getelementptr inbounds i8, ptr %974, i64 4
  store i32 0, ptr %887, align 8, !tbaa !91, !noalias !99
  br label %1012

1012:                                             ; preds = %999, %970
  %1013 = phi i32 [ 0, %999 ], [ %985, %970 ]
  %1014 = phi i64 [ 32, %999 ], [ %987, %970 ]
  %1015 = phi ptr [ %1011, %999 ], [ %974, %970 ]
  %1016 = icmp sgt i64 %986, 0
  br i1 %1016, label %970, label %1017, !llvm.loop !95

1017:                                             ; preds = %1012
  %1018 = load i16, ptr %895, align 2, !tbaa !31, !alias.scope !77, !noalias !80
  %1019 = uitofp i16 %1018 to float
  %1020 = fmul fast float %1019, 0x3F8FF82000000000
  %1021 = fpext float %1020 to double
  %1022 = fadd fast double %1021, 5.000000e-01
  %1023 = fptoui double %1022 to i64
  %1024 = and i64 %1023, 4294967295
  tail call void @llvm.experimental.noalias.scope.decl(metadata !101)
  %1025 = icmp eq i64 %1014, 0
  %1026 = select i1 %1025, i64 32, i64 %1014
  %1027 = load i32, ptr %887, align 8, !tbaa !91, !noalias !104
  br label %1028

1028:                                             ; preds = %1070, %1017
  %1029 = phi i32 [ %1027, %1017 ], [ %1071, %1070 ]
  %1030 = phi i64 [ %1026, %1017 ], [ %1072, %1070 ]
  %1031 = phi i64 [ 10, %1017 ], [ %1044, %1070 ]
  %1032 = phi ptr [ %1015, %1017 ], [ %1073, %1070 ]
  %1033 = tail call i64 @llvm.umin.i64(i64 %1031, i64 %1030)
  %1034 = sub nsw i64 10, %1031
  %1035 = lshr i64 %1024, %1034
  %1036 = getelementptr inbounds i32, ptr %892, i64 %1033
  %1037 = load i32, ptr %1036, align 4, !tbaa !93, !noalias !101
  %1038 = zext i32 %1037 to i64
  %1039 = and i64 %1035, %1038
  %1040 = sub i64 32, %1030
  %1041 = shl i64 %1039, %1040
  %1042 = trunc i64 %1041 to i32
  %1043 = or i32 %1029, %1042
  store i32 %1043, ptr %887, align 8, !tbaa !91, !noalias !104
  %1044 = sub nsw i64 %1031, %1033
  %1045 = sub i64 %1030, %1033
  %1046 = icmp ugt i64 %1030, %1031
  br i1 %1046, label %1070, label %1047

1047:                                             ; preds = %1028
  %1048 = load i32, ptr %888, align 8, !tbaa !51, !noalias !104
  %1049 = icmp eq i32 %1048, 1
  %1050 = lshr i32 %1043, 16
  br i1 %1049, label %1051, label %1054

1051:                                             ; preds = %1047
  %1052 = lshr i32 %1043, 8
  %1053 = lshr i32 %1043, 24
  br label %1057

1054:                                             ; preds = %1047
  %1055 = lshr i32 %1043, 24
  %1056 = lshr i32 %1043, 8
  br label %1057

1057:                                             ; preds = %1054, %1051
  %1058 = phi i32 [ %1043, %1051 ], [ %1055, %1054 ]
  %1059 = phi i32 [ %1052, %1051 ], [ %1050, %1054 ]
  %1060 = phi i32 [ %1050, %1051 ], [ %1056, %1054 ]
  %1061 = phi i32 [ %1053, %1051 ], [ %1043, %1054 ]
  %1062 = trunc i32 %1061 to i8
  %1063 = trunc i32 %1060 to i8
  %1064 = trunc i32 %1059 to i8
  %1065 = trunc i32 %1058 to i8
  store i8 %1065, ptr %1032, align 1, !alias.scope !105, !noalias !77
  %1066 = getelementptr inbounds i8, ptr %1032, i64 1
  store i8 %1064, ptr %1066, align 1, !alias.scope !105, !noalias !77
  %1067 = getelementptr inbounds i8, ptr %1032, i64 2
  store i8 %1063, ptr %1067, align 1, !alias.scope !105, !noalias !77
  %1068 = getelementptr inbounds i8, ptr %1032, i64 3
  store i8 %1062, ptr %1068, align 1, !alias.scope !105, !noalias !77
  %1069 = getelementptr inbounds i8, ptr %1032, i64 4
  store i32 0, ptr %887, align 8, !tbaa !91, !noalias !104
  br label %1070

1070:                                             ; preds = %1057, %1028
  %1071 = phi i32 [ 0, %1057 ], [ %1043, %1028 ]
  %1072 = phi i64 [ 32, %1057 ], [ %1045, %1028 ]
  %1073 = phi ptr [ %1069, %1057 ], [ %1032, %1028 ]
  %1074 = icmp sgt i64 %1044, 0
  br i1 %1074, label %1028, label %1075, !llvm.loop !95

1075:                                             ; preds = %1070
  store i64 %1072, ptr %885, align 8, !tbaa !69, !noalias !104
  %1076 = getelementptr inbounds %struct._PixelPacket, ptr %895, i64 1
  %1077 = getelementptr inbounds i8, ptr %1073, i64 %891
  %1078 = add nuw nsw i64 %896, 1
  %1079 = icmp eq i64 %1078, %164
  br i1 %1079, label %17787, label %893, !llvm.loop !106

1080:                                             ; preds = %1191, %878
  %1081 = phi i64 [ %881, %878 ], [ %1187, %1191 ]
  %1082 = phi ptr [ %166, %878 ], [ %1192, %1191 ]
  %1083 = phi i64 [ 0, %878 ], [ %1194, %1191 ]
  %1084 = phi ptr [ %88, %878 ], [ %1193, %1191 ]
  %1085 = getelementptr inbounds %struct._PixelPacket, ptr %1082, i64 0, i32 2
  %1086 = load i16, ptr %1085, align 2, !tbaa !29, !alias.scope !77, !noalias !80
  %1087 = uitofp i16 %1086 to float
  %1088 = fmul fast float %1087, 0x3F8FF82000000000
  %1089 = fpext float %1088 to double
  %1090 = fadd fast double %1089, 5.000000e-01
  %1091 = fptoui double %1090 to i64
  %1092 = and i64 %1091, 4294967295
  %1093 = icmp eq i64 %1081, 0
  %1094 = select i1 %1093, i64 8, i64 %1081
  br label %1095

1095:                                             ; preds = %1080, %1105
  %1096 = phi i64 [ %1116, %1105 ], [ %1094, %1080 ]
  %1097 = phi i64 [ %1101, %1105 ], [ 10, %1080 ]
  %1098 = phi ptr [ %1118, %1105 ], [ %1084, %1080 ]
  %1099 = tail call i64 @llvm.umin.i64(i64 %1097, i64 %1096)
  %1100 = sub nsw i64 %1097, %1099
  %1101 = tail call i64 @llvm.smax.i64(i64 %1100, i64 0)
  %1102 = icmp eq i64 %1096, 8
  br i1 %1102, label %1105, label %1103

1103:                                             ; preds = %1095
  %1104 = load i8, ptr %1098, align 1, !tbaa !48, !alias.scope !107, !noalias !77
  br label %1105

1105:                                             ; preds = %1103, %1095
  %1106 = phi i8 [ %1104, %1103 ], [ 0, %1095 ]
  %1107 = sub i64 %1096, %1099
  %1108 = lshr i64 %1092, %1101
  %1109 = shl nsw i64 -1, %1099
  %1110 = xor i64 %1109, -1
  %1111 = and i64 %1108, %1110
  %1112 = shl i64 %1111, %1107
  %1113 = trunc i64 %1112 to i8
  %1114 = or i8 %1106, %1113
  store i8 %1114, ptr %1098, align 1, !tbaa !48, !alias.scope !107, !noalias !77
  %1115 = icmp ule i64 %1096, %1097
  %1116 = select i1 %1115, i64 8, i64 %1107
  %1117 = zext i1 %1115 to i64
  %1118 = getelementptr inbounds i8, ptr %1098, i64 %1117
  %1119 = icmp slt i64 %1100, 1
  br i1 %1119, label %1120, label %1095, !llvm.loop !75

1120:                                             ; preds = %1105
  %1121 = getelementptr inbounds %struct._PixelPacket, ptr %1082, i64 0, i32 1
  %1122 = load i16, ptr %1121, align 2, !tbaa !30, !alias.scope !77, !noalias !80
  %1123 = uitofp i16 %1122 to float
  %1124 = fmul fast float %1123, 0x3F8FF82000000000
  %1125 = fpext float %1124 to double
  %1126 = fadd fast double %1125, 5.000000e-01
  %1127 = fptoui double %1126 to i64
  %1128 = and i64 %1127, 4294967295
  %1129 = icmp eq i64 %1116, 0
  %1130 = select i1 %1129, i64 8, i64 %1116
  br label %1131

1131:                                             ; preds = %1120, %1141
  %1132 = phi i64 [ %1152, %1141 ], [ %1130, %1120 ]
  %1133 = phi i64 [ %1137, %1141 ], [ 10, %1120 ]
  %1134 = phi ptr [ %1154, %1141 ], [ %1118, %1120 ]
  %1135 = tail call i64 @llvm.umin.i64(i64 %1133, i64 %1132)
  %1136 = sub nsw i64 %1133, %1135
  %1137 = tail call i64 @llvm.smax.i64(i64 %1136, i64 0)
  %1138 = icmp eq i64 %1132, 8
  br i1 %1138, label %1141, label %1139

1139:                                             ; preds = %1131
  %1140 = load i8, ptr %1134, align 1, !tbaa !48, !alias.scope !110, !noalias !77
  br label %1141

1141:                                             ; preds = %1139, %1131
  %1142 = phi i8 [ %1140, %1139 ], [ 0, %1131 ]
  %1143 = sub i64 %1132, %1135
  %1144 = lshr i64 %1128, %1137
  %1145 = shl nsw i64 -1, %1135
  %1146 = xor i64 %1145, -1
  %1147 = and i64 %1144, %1146
  %1148 = shl i64 %1147, %1143
  %1149 = trunc i64 %1148 to i8
  %1150 = or i8 %1142, %1149
  store i8 %1150, ptr %1134, align 1, !tbaa !48, !alias.scope !110, !noalias !77
  %1151 = icmp ule i64 %1132, %1133
  %1152 = select i1 %1151, i64 8, i64 %1143
  %1153 = zext i1 %1151 to i64
  %1154 = getelementptr inbounds i8, ptr %1134, i64 %1153
  %1155 = icmp slt i64 %1136, 1
  br i1 %1155, label %1156, label %1131, !llvm.loop !75

1156:                                             ; preds = %1141
  %1157 = load i16, ptr %1082, align 2, !tbaa !31, !alias.scope !77, !noalias !80
  %1158 = uitofp i16 %1157 to float
  %1159 = fmul fast float %1158, 0x3F8FF82000000000
  %1160 = fpext float %1159 to double
  %1161 = fadd fast double %1160, 5.000000e-01
  %1162 = fptoui double %1161 to i64
  %1163 = and i64 %1162, 4294967295
  tail call void @llvm.experimental.noalias.scope.decl(metadata !113)
  %1164 = icmp eq i64 %1152, 0
  %1165 = select i1 %1164, i64 8, i64 %1152
  br label %1166

1166:                                             ; preds = %1156, %1176
  %1167 = phi i64 [ %1187, %1176 ], [ %1165, %1156 ]
  %1168 = phi i64 [ %1172, %1176 ], [ 10, %1156 ]
  %1169 = phi ptr [ %1189, %1176 ], [ %1154, %1156 ]
  %1170 = tail call i64 @llvm.umin.i64(i64 %1168, i64 %1167)
  %1171 = sub nsw i64 %1168, %1170
  %1172 = tail call i64 @llvm.smax.i64(i64 %1171, i64 0)
  %1173 = icmp eq i64 %1167, 8
  br i1 %1173, label %1176, label %1174

1174:                                             ; preds = %1166
  %1175 = load i8, ptr %1169, align 1, !tbaa !48, !alias.scope !116, !noalias !77
  br label %1176

1176:                                             ; preds = %1174, %1166
  %1177 = phi i8 [ %1175, %1174 ], [ 0, %1166 ]
  %1178 = sub i64 %1167, %1170
  %1179 = lshr i64 %1163, %1172
  %1180 = shl nsw i64 -1, %1170
  %1181 = xor i64 %1180, -1
  %1182 = and i64 %1179, %1181
  %1183 = shl i64 %1182, %1178
  %1184 = trunc i64 %1183 to i8
  %1185 = or i8 %1177, %1184
  store i8 %1185, ptr %1169, align 1, !tbaa !48, !alias.scope !116, !noalias !77
  %1186 = icmp ule i64 %1167, %1168
  %1187 = select i1 %1186, i64 8, i64 %1178
  %1188 = zext i1 %1186 to i64
  %1189 = getelementptr inbounds i8, ptr %1169, i64 %1188
  %1190 = icmp slt i64 %1171, 1
  br i1 %1190, label %1191, label %1166, !llvm.loop !75

1191:                                             ; preds = %1176
  %1192 = getelementptr inbounds %struct._PixelPacket, ptr %1082, i64 1
  %1193 = getelementptr inbounds i8, ptr %1189, i64 %882
  %1194 = add nuw nsw i64 %1083, 1
  %1195 = icmp eq i64 %1194, %164
  br i1 %1195, label %17109, label %1080, !llvm.loop !117

1196:                                             ; preds = %774
  %1197 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 8
  %1198 = load i32, ptr %1197, align 4, !tbaa !84, !noalias !82
  %1199 = icmp eq i32 %1198, 0
  br i1 %1199, label %1200, label %1300

1200:                                             ; preds = %1196
  %1201 = mul i64 %164, 3
  %1202 = add i64 %1201, -1
  %1203 = icmp sgt i64 %1202, 0
  br i1 %1203, label %1204, label %1212

1204:                                             ; preds = %1200
  %1205 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %1206 = load i32, ptr %1205, align 8, !tbaa !51, !noalias !82
  %1207 = icmp eq i32 %1206, 1
  %1208 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %1209 = load i64, ptr %1208, align 8, !tbaa !47, !noalias !82
  br label %1218

1210:                                             ; preds = %1255
  %1211 = urem i64 %1274, 3
  br label %1212

1212:                                             ; preds = %1210, %1200
  %1213 = phi ptr [ %88, %1200 ], [ %1273, %1210 ]
  %1214 = phi i64 [ 0, %1200 ], [ %1211, %1210 ]
  %1215 = phi ptr [ %166, %1200 ], [ %1257, %1210 ]
  %1216 = and i64 %1201, 1
  %1217 = icmp eq i64 %1216, 0
  br i1 %1217, label %17787, label %1276

1218:                                             ; preds = %1255, %1204
  %1219 = phi ptr [ %166, %1204 ], [ %1257, %1255 ]
  %1220 = phi i64 [ 0, %1204 ], [ %1274, %1255 ]
  %1221 = phi ptr [ %88, %1204 ], [ %1273, %1255 ]
  %1222 = urem i64 %1220, 3
  switch i64 %1222, label %1223 [
    i64 2, label %1227
    i64 1, label %1225
  ]

1223:                                             ; preds = %1218
  %1224 = getelementptr inbounds %struct._PixelPacket, ptr %1219, i64 0, i32 2
  br label %1229

1225:                                             ; preds = %1218
  %1226 = getelementptr inbounds %struct._PixelPacket, ptr %1219, i64 0, i32 1
  br label %1229

1227:                                             ; preds = %1218
  %1228 = getelementptr inbounds %struct._PixelPacket, ptr %1219, i64 1
  br label %1229

1229:                                             ; preds = %1227, %1225, %1223
  %1230 = phi ptr [ %1224, %1223 ], [ %1226, %1225 ], [ %1219, %1227 ]
  %1231 = phi ptr [ %1219, %1223 ], [ %1219, %1225 ], [ %1228, %1227 ]
  %1232 = load i16, ptr %1230, align 2, !tbaa !37, !alias.scope !77, !noalias !80
  %1233 = uitofp i16 %1232 to float
  %1234 = fmul fast float %1233, 0x3FAFFE2000000000
  %1235 = fpext float %1234 to double
  %1236 = fadd fast double %1235, 5.000000e-01
  %1237 = fptoui double %1236 to i64
  %1238 = trunc i64 %1237 to i16
  %1239 = shl i16 %1238, 4
  %1240 = lshr i16 %1239, 8
  %1241 = select i1 %1207, i16 %1239, i16 %1240
  %1242 = select i1 %1207, i16 %1240, i16 %1239
  %1243 = trunc i16 %1242 to i8
  %1244 = trunc i16 %1241 to i8
  store i8 %1244, ptr %1221, align 1, !alias.scope !80, !noalias !77
  %1245 = getelementptr inbounds i8, ptr %1221, i64 1
  store i8 %1243, ptr %1245, align 1, !alias.scope !80, !noalias !77
  %1246 = getelementptr inbounds i8, ptr %1221, i64 2
  %1247 = or i64 %1220, 1
  %1248 = urem i64 %1247, 3
  switch i64 %1248, label %1249 [
    i64 2, label %1253
    i64 1, label %1251
  ]

1249:                                             ; preds = %1229
  %1250 = getelementptr inbounds %struct._PixelPacket, ptr %1231, i64 0, i32 2
  br label %1255

1251:                                             ; preds = %1229
  %1252 = getelementptr inbounds %struct._PixelPacket, ptr %1231, i64 0, i32 1
  br label %1255

1253:                                             ; preds = %1229
  %1254 = getelementptr inbounds %struct._PixelPacket, ptr %1231, i64 1
  br label %1255

1255:                                             ; preds = %1253, %1251, %1249
  %1256 = phi ptr [ %1250, %1249 ], [ %1252, %1251 ], [ %1231, %1253 ]
  %1257 = phi ptr [ %1231, %1249 ], [ %1231, %1251 ], [ %1254, %1253 ]
  %1258 = load i16, ptr %1256, align 2, !tbaa !37, !alias.scope !77, !noalias !80
  %1259 = uitofp i16 %1258 to float
  %1260 = fmul fast float %1259, 0x3FAFFE2000000000
  %1261 = fpext float %1260 to double
  %1262 = fadd fast double %1261, 5.000000e-01
  %1263 = fptoui double %1262 to i64
  %1264 = trunc i64 %1263 to i16
  %1265 = shl i16 %1264, 4
  %1266 = lshr i16 %1265, 8
  %1267 = select i1 %1207, i16 %1265, i16 %1266
  %1268 = select i1 %1207, i16 %1266, i16 %1265
  %1269 = trunc i16 %1268 to i8
  %1270 = trunc i16 %1267 to i8
  store i8 %1270, ptr %1246, align 1, !alias.scope !80, !noalias !77
  %1271 = getelementptr inbounds i8, ptr %1221, i64 3
  store i8 %1269, ptr %1271, align 1, !alias.scope !80, !noalias !77
  %1272 = getelementptr inbounds i8, ptr %1221, i64 4
  %1273 = getelementptr inbounds i8, ptr %1272, i64 %1209
  %1274 = add nuw nsw i64 %1220, 2
  %1275 = icmp slt i64 %1274, %1202
  br i1 %1275, label %1218, label %1210, !llvm.loop !118

1276:                                             ; preds = %1212
  %1277 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  switch i64 %1214, label %1278 [
    i64 2, label %1282
    i64 1, label %1280
  ]

1278:                                             ; preds = %1276
  %1279 = getelementptr inbounds %struct._PixelPacket, ptr %1215, i64 0, i32 2
  br label %1282

1280:                                             ; preds = %1276
  %1281 = getelementptr inbounds %struct._PixelPacket, ptr %1215, i64 0, i32 1
  br label %1282

1282:                                             ; preds = %1280, %1278, %1276
  %1283 = phi ptr [ %1279, %1278 ], [ %1281, %1280 ], [ %1215, %1276 ]
  %1284 = load i16, ptr %1283, align 2, !tbaa !37, !alias.scope !77, !noalias !80
  %1285 = uitofp i16 %1284 to float
  %1286 = fmul fast float %1285, 0x3FAFFE2000000000
  %1287 = fpext float %1286 to double
  %1288 = fadd fast double %1287, 5.000000e-01
  %1289 = fptoui double %1288 to i64
  %1290 = trunc i64 %1289 to i16
  %1291 = load i32, ptr %1277, align 8, !tbaa !51, !noalias !82
  %1292 = shl i16 %1290, 4
  %1293 = icmp eq i32 %1291, 1
  %1294 = lshr i16 %1292, 8
  %1295 = select i1 %1293, i16 %1292, i16 %1294
  %1296 = select i1 %1293, i16 %1294, i16 %1292
  %1297 = trunc i16 %1296 to i8
  %1298 = trunc i16 %1295 to i8
  store i8 %1298, ptr %1213, align 1, !alias.scope !80, !noalias !77
  %1299 = getelementptr inbounds i8, ptr %1213, i64 1
  store i8 %1297, ptr %1299, align 1, !alias.scope !80, !noalias !77
  br label %17787

1300:                                             ; preds = %1196
  %1301 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 1
  %1302 = load i64, ptr %1301, align 8, !tbaa !86, !noalias !82
  %1303 = icmp eq i64 %1302, 32
  %1304 = icmp sgt i64 %164, 0
  br i1 %1303, label %1311, label %1305

1305:                                             ; preds = %1300
  br i1 %1304, label %1306, label %17875

1306:                                             ; preds = %1305
  %1307 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 14, i32 2
  %1308 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %1309 = load i64, ptr %1307, align 8, !tbaa !69, !noalias !82
  %1310 = load i64, ptr %1308, align 8, !tbaa !47, !noalias !82
  br label %1508

1311:                                             ; preds = %1300
  br i1 %1304, label %1312, label %17875

1312:                                             ; preds = %1311
  %1313 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 14, i32 2
  %1314 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 14, i32 3
  %1315 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 14, i32 1
  %1316 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %1317 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %1318 = load i64, ptr %1313, align 8, !tbaa !69, !noalias !82
  %1319 = load i64, ptr %1317, align 8, !tbaa !47, !noalias !82
  %1320 = load ptr, ptr %1314, align 8, !tbaa !87, !noalias !82
  br label %1321

1321:                                             ; preds = %1503, %1312
  %1322 = phi i64 [ %1318, %1312 ], [ %1500, %1503 ]
  %1323 = phi ptr [ %166, %1312 ], [ %1504, %1503 ]
  %1324 = phi i64 [ 0, %1312 ], [ %1506, %1503 ]
  %1325 = phi ptr [ %88, %1312 ], [ %1505, %1503 ]
  %1326 = getelementptr inbounds %struct._PixelPacket, ptr %1323, i64 0, i32 2
  %1327 = load i16, ptr %1326, align 2, !tbaa !29, !alias.scope !77, !noalias !80
  %1328 = uitofp i16 %1327 to float
  %1329 = fmul fast float %1328, 0x3FAFFE2000000000
  %1330 = fpext float %1329 to double
  %1331 = fadd fast double %1330, 5.000000e-01
  %1332 = fptoui double %1331 to i64
  %1333 = and i64 %1332, 4294967295
  tail call void @llvm.experimental.noalias.scope.decl(metadata !119)
  %1334 = icmp eq i64 %1322, 0
  %1335 = select i1 %1334, i64 32, i64 %1322
  %1336 = load i32, ptr %1315, align 8, !tbaa !91, !noalias !122
  br label %1337

1337:                                             ; preds = %1379, %1321
  %1338 = phi i32 [ %1336, %1321 ], [ %1380, %1379 ]
  %1339 = phi i64 [ %1335, %1321 ], [ %1381, %1379 ]
  %1340 = phi i64 [ 12, %1321 ], [ %1353, %1379 ]
  %1341 = phi ptr [ %1325, %1321 ], [ %1382, %1379 ]
  %1342 = tail call i64 @llvm.umin.i64(i64 %1340, i64 %1339)
  %1343 = sub nsw i64 12, %1340
  %1344 = lshr i64 %1333, %1343
  %1345 = getelementptr inbounds i32, ptr %1320, i64 %1342
  %1346 = load i32, ptr %1345, align 4, !tbaa !93, !noalias !119
  %1347 = zext i32 %1346 to i64
  %1348 = and i64 %1344, %1347
  %1349 = sub i64 32, %1339
  %1350 = shl i64 %1348, %1349
  %1351 = trunc i64 %1350 to i32
  %1352 = or i32 %1338, %1351
  store i32 %1352, ptr %1315, align 8, !tbaa !91, !noalias !122
  %1353 = sub nsw i64 %1340, %1342
  %1354 = sub i64 %1339, %1342
  %1355 = icmp ugt i64 %1339, %1340
  br i1 %1355, label %1379, label %1356

1356:                                             ; preds = %1337
  %1357 = load i32, ptr %1316, align 8, !tbaa !51, !noalias !122
  %1358 = icmp eq i32 %1357, 1
  %1359 = lshr i32 %1352, 16
  br i1 %1358, label %1360, label %1363

1360:                                             ; preds = %1356
  %1361 = lshr i32 %1352, 8
  %1362 = lshr i32 %1352, 24
  br label %1366

1363:                                             ; preds = %1356
  %1364 = lshr i32 %1352, 24
  %1365 = lshr i32 %1352, 8
  br label %1366

1366:                                             ; preds = %1363, %1360
  %1367 = phi i32 [ %1352, %1360 ], [ %1364, %1363 ]
  %1368 = phi i32 [ %1361, %1360 ], [ %1359, %1363 ]
  %1369 = phi i32 [ %1359, %1360 ], [ %1365, %1363 ]
  %1370 = phi i32 [ %1362, %1360 ], [ %1352, %1363 ]
  %1371 = trunc i32 %1370 to i8
  %1372 = trunc i32 %1369 to i8
  %1373 = trunc i32 %1368 to i8
  %1374 = trunc i32 %1367 to i8
  store i8 %1374, ptr %1341, align 1, !alias.scope !123, !noalias !77
  %1375 = getelementptr inbounds i8, ptr %1341, i64 1
  store i8 %1373, ptr %1375, align 1, !alias.scope !123, !noalias !77
  %1376 = getelementptr inbounds i8, ptr %1341, i64 2
  store i8 %1372, ptr %1376, align 1, !alias.scope !123, !noalias !77
  %1377 = getelementptr inbounds i8, ptr %1341, i64 3
  store i8 %1371, ptr %1377, align 1, !alias.scope !123, !noalias !77
  %1378 = getelementptr inbounds i8, ptr %1341, i64 4
  store i32 0, ptr %1315, align 8, !tbaa !91, !noalias !122
  br label %1379

1379:                                             ; preds = %1366, %1337
  %1380 = phi i32 [ 0, %1366 ], [ %1352, %1337 ]
  %1381 = phi i64 [ 32, %1366 ], [ %1354, %1337 ]
  %1382 = phi ptr [ %1378, %1366 ], [ %1341, %1337 ]
  %1383 = icmp sgt i64 %1353, 0
  br i1 %1383, label %1337, label %1384, !llvm.loop !95

1384:                                             ; preds = %1379
  %1385 = getelementptr inbounds %struct._PixelPacket, ptr %1323, i64 0, i32 1
  %1386 = load i16, ptr %1385, align 2, !tbaa !30, !alias.scope !77, !noalias !80
  %1387 = uitofp i16 %1386 to float
  %1388 = fmul fast float %1387, 0x3FAFFE2000000000
  %1389 = fpext float %1388 to double
  %1390 = fadd fast double %1389, 5.000000e-01
  %1391 = fptoui double %1390 to i64
  %1392 = and i64 %1391, 4294967295
  tail call void @llvm.experimental.noalias.scope.decl(metadata !124)
  %1393 = icmp eq i64 %1381, 0
  br i1 %1393, label %1394, label %1395

1394:                                             ; preds = %1384
  store i64 32, ptr %1313, align 8, !tbaa !69, !noalias !127
  br label %1395

1395:                                             ; preds = %1384, %1394
  %1396 = phi i64 [ 32, %1394 ], [ %1381, %1384 ]
  %1397 = load i32, ptr %1315, align 8, !tbaa !91, !noalias !127
  br label %1398

1398:                                             ; preds = %1440, %1395
  %1399 = phi i32 [ %1397, %1395 ], [ %1441, %1440 ]
  %1400 = phi i64 [ %1396, %1395 ], [ %1442, %1440 ]
  %1401 = phi i64 [ 12, %1395 ], [ %1414, %1440 ]
  %1402 = phi ptr [ %1382, %1395 ], [ %1443, %1440 ]
  %1403 = tail call i64 @llvm.umin.i64(i64 %1401, i64 %1400)
  %1404 = sub nsw i64 12, %1401
  %1405 = lshr i64 %1392, %1404
  %1406 = getelementptr inbounds i32, ptr %1320, i64 %1403
  %1407 = load i32, ptr %1406, align 4, !tbaa !93, !noalias !124
  %1408 = zext i32 %1407 to i64
  %1409 = and i64 %1405, %1408
  %1410 = sub i64 32, %1400
  %1411 = shl i64 %1409, %1410
  %1412 = trunc i64 %1411 to i32
  %1413 = or i32 %1399, %1412
  store i32 %1413, ptr %1315, align 8, !tbaa !91, !noalias !127
  %1414 = sub nsw i64 %1401, %1403
  %1415 = sub i64 %1400, %1403
  %1416 = icmp ugt i64 %1400, %1401
  br i1 %1416, label %1440, label %1417

1417:                                             ; preds = %1398
  %1418 = load i32, ptr %1316, align 8, !tbaa !51, !noalias !127
  %1419 = icmp eq i32 %1418, 1
  %1420 = lshr i32 %1413, 16
  br i1 %1419, label %1421, label %1424

1421:                                             ; preds = %1417
  %1422 = lshr i32 %1413, 8
  %1423 = lshr i32 %1413, 24
  br label %1427

1424:                                             ; preds = %1417
  %1425 = lshr i32 %1413, 24
  %1426 = lshr i32 %1413, 8
  br label %1427

1427:                                             ; preds = %1424, %1421
  %1428 = phi i32 [ %1413, %1421 ], [ %1425, %1424 ]
  %1429 = phi i32 [ %1422, %1421 ], [ %1420, %1424 ]
  %1430 = phi i32 [ %1420, %1421 ], [ %1426, %1424 ]
  %1431 = phi i32 [ %1423, %1421 ], [ %1413, %1424 ]
  %1432 = trunc i32 %1431 to i8
  %1433 = trunc i32 %1430 to i8
  %1434 = trunc i32 %1429 to i8
  %1435 = trunc i32 %1428 to i8
  store i8 %1435, ptr %1402, align 1, !alias.scope !128, !noalias !77
  %1436 = getelementptr inbounds i8, ptr %1402, i64 1
  store i8 %1434, ptr %1436, align 1, !alias.scope !128, !noalias !77
  %1437 = getelementptr inbounds i8, ptr %1402, i64 2
  store i8 %1433, ptr %1437, align 1, !alias.scope !128, !noalias !77
  %1438 = getelementptr inbounds i8, ptr %1402, i64 3
  store i8 %1432, ptr %1438, align 1, !alias.scope !128, !noalias !77
  %1439 = getelementptr inbounds i8, ptr %1402, i64 4
  store i32 0, ptr %1315, align 8, !tbaa !91, !noalias !127
  br label %1440

1440:                                             ; preds = %1427, %1398
  %1441 = phi i32 [ 0, %1427 ], [ %1413, %1398 ]
  %1442 = phi i64 [ 32, %1427 ], [ %1415, %1398 ]
  %1443 = phi ptr [ %1439, %1427 ], [ %1402, %1398 ]
  %1444 = icmp sgt i64 %1414, 0
  br i1 %1444, label %1398, label %1445, !llvm.loop !95

1445:                                             ; preds = %1440
  %1446 = load i16, ptr %1323, align 2, !tbaa !31, !alias.scope !77, !noalias !80
  %1447 = uitofp i16 %1446 to float
  %1448 = fmul fast float %1447, 0x3FAFFE2000000000
  %1449 = fpext float %1448 to double
  %1450 = fadd fast double %1449, 5.000000e-01
  %1451 = fptoui double %1450 to i64
  %1452 = and i64 %1451, 4294967295
  tail call void @llvm.experimental.noalias.scope.decl(metadata !129)
  %1453 = icmp eq i64 %1442, 0
  %1454 = select i1 %1453, i64 32, i64 %1442
  %1455 = load i32, ptr %1315, align 8, !tbaa !91, !noalias !132
  br label %1456

1456:                                             ; preds = %1498, %1445
  %1457 = phi i32 [ %1455, %1445 ], [ %1499, %1498 ]
  %1458 = phi i64 [ %1454, %1445 ], [ %1500, %1498 ]
  %1459 = phi i64 [ 12, %1445 ], [ %1472, %1498 ]
  %1460 = phi ptr [ %1443, %1445 ], [ %1501, %1498 ]
  %1461 = tail call i64 @llvm.umin.i64(i64 %1459, i64 %1458)
  %1462 = sub nsw i64 12, %1459
  %1463 = lshr i64 %1452, %1462
  %1464 = getelementptr inbounds i32, ptr %1320, i64 %1461
  %1465 = load i32, ptr %1464, align 4, !tbaa !93, !noalias !129
  %1466 = zext i32 %1465 to i64
  %1467 = and i64 %1463, %1466
  %1468 = sub i64 32, %1458
  %1469 = shl i64 %1467, %1468
  %1470 = trunc i64 %1469 to i32
  %1471 = or i32 %1457, %1470
  store i32 %1471, ptr %1315, align 8, !tbaa !91, !noalias !132
  %1472 = sub nsw i64 %1459, %1461
  %1473 = sub i64 %1458, %1461
  %1474 = icmp ugt i64 %1458, %1459
  br i1 %1474, label %1498, label %1475

1475:                                             ; preds = %1456
  %1476 = load i32, ptr %1316, align 8, !tbaa !51, !noalias !132
  %1477 = icmp eq i32 %1476, 1
  %1478 = lshr i32 %1471, 16
  br i1 %1477, label %1479, label %1482

1479:                                             ; preds = %1475
  %1480 = lshr i32 %1471, 8
  %1481 = lshr i32 %1471, 24
  br label %1485

1482:                                             ; preds = %1475
  %1483 = lshr i32 %1471, 24
  %1484 = lshr i32 %1471, 8
  br label %1485

1485:                                             ; preds = %1482, %1479
  %1486 = phi i32 [ %1471, %1479 ], [ %1483, %1482 ]
  %1487 = phi i32 [ %1480, %1479 ], [ %1478, %1482 ]
  %1488 = phi i32 [ %1478, %1479 ], [ %1484, %1482 ]
  %1489 = phi i32 [ %1481, %1479 ], [ %1471, %1482 ]
  %1490 = trunc i32 %1489 to i8
  %1491 = trunc i32 %1488 to i8
  %1492 = trunc i32 %1487 to i8
  %1493 = trunc i32 %1486 to i8
  store i8 %1493, ptr %1460, align 1, !alias.scope !133, !noalias !77
  %1494 = getelementptr inbounds i8, ptr %1460, i64 1
  store i8 %1492, ptr %1494, align 1, !alias.scope !133, !noalias !77
  %1495 = getelementptr inbounds i8, ptr %1460, i64 2
  store i8 %1491, ptr %1495, align 1, !alias.scope !133, !noalias !77
  %1496 = getelementptr inbounds i8, ptr %1460, i64 3
  store i8 %1490, ptr %1496, align 1, !alias.scope !133, !noalias !77
  %1497 = getelementptr inbounds i8, ptr %1460, i64 4
  store i32 0, ptr %1315, align 8, !tbaa !91, !noalias !132
  br label %1498

1498:                                             ; preds = %1485, %1456
  %1499 = phi i32 [ 0, %1485 ], [ %1471, %1456 ]
  %1500 = phi i64 [ 32, %1485 ], [ %1473, %1456 ]
  %1501 = phi ptr [ %1497, %1485 ], [ %1460, %1456 ]
  %1502 = icmp sgt i64 %1472, 0
  br i1 %1502, label %1456, label %1503, !llvm.loop !95

1503:                                             ; preds = %1498
  store i64 %1500, ptr %1313, align 8, !tbaa !69, !noalias !132
  %1504 = getelementptr inbounds %struct._PixelPacket, ptr %1323, i64 1
  %1505 = getelementptr inbounds i8, ptr %1501, i64 %1319
  %1506 = add nuw nsw i64 %1324, 1
  %1507 = icmp eq i64 %1506, %164
  br i1 %1507, label %17787, label %1321, !llvm.loop !134

1508:                                             ; preds = %1619, %1306
  %1509 = phi i64 [ %1309, %1306 ], [ %1615, %1619 ]
  %1510 = phi ptr [ %166, %1306 ], [ %1620, %1619 ]
  %1511 = phi i64 [ 0, %1306 ], [ %1622, %1619 ]
  %1512 = phi ptr [ %88, %1306 ], [ %1621, %1619 ]
  %1513 = getelementptr inbounds %struct._PixelPacket, ptr %1510, i64 0, i32 2
  %1514 = load i16, ptr %1513, align 2, !tbaa !29, !alias.scope !77, !noalias !80
  %1515 = uitofp i16 %1514 to float
  %1516 = fmul fast float %1515, 0x3FAFFE2000000000
  %1517 = fpext float %1516 to double
  %1518 = fadd fast double %1517, 5.000000e-01
  %1519 = fptoui double %1518 to i64
  %1520 = and i64 %1519, 4294967295
  %1521 = icmp eq i64 %1509, 0
  %1522 = select i1 %1521, i64 8, i64 %1509
  br label %1523

1523:                                             ; preds = %1508, %1533
  %1524 = phi i64 [ %1544, %1533 ], [ %1522, %1508 ]
  %1525 = phi i64 [ %1529, %1533 ], [ 12, %1508 ]
  %1526 = phi ptr [ %1546, %1533 ], [ %1512, %1508 ]
  %1527 = tail call i64 @llvm.umin.i64(i64 %1525, i64 %1524)
  %1528 = sub nsw i64 %1525, %1527
  %1529 = tail call i64 @llvm.smax.i64(i64 %1528, i64 0)
  %1530 = icmp eq i64 %1524, 8
  br i1 %1530, label %1533, label %1531

1531:                                             ; preds = %1523
  %1532 = load i8, ptr %1526, align 1, !tbaa !48, !alias.scope !135, !noalias !77
  br label %1533

1533:                                             ; preds = %1531, %1523
  %1534 = phi i8 [ %1532, %1531 ], [ 0, %1523 ]
  %1535 = sub i64 %1524, %1527
  %1536 = lshr i64 %1520, %1529
  %1537 = shl nsw i64 -1, %1527
  %1538 = xor i64 %1537, -1
  %1539 = and i64 %1536, %1538
  %1540 = shl i64 %1539, %1535
  %1541 = trunc i64 %1540 to i8
  %1542 = or i8 %1534, %1541
  store i8 %1542, ptr %1526, align 1, !tbaa !48, !alias.scope !135, !noalias !77
  %1543 = icmp ule i64 %1524, %1525
  %1544 = select i1 %1543, i64 8, i64 %1535
  %1545 = zext i1 %1543 to i64
  %1546 = getelementptr inbounds i8, ptr %1526, i64 %1545
  %1547 = icmp slt i64 %1528, 1
  br i1 %1547, label %1548, label %1523, !llvm.loop !75

1548:                                             ; preds = %1533
  %1549 = getelementptr inbounds %struct._PixelPacket, ptr %1510, i64 0, i32 1
  %1550 = load i16, ptr %1549, align 2, !tbaa !30, !alias.scope !77, !noalias !80
  %1551 = uitofp i16 %1550 to float
  %1552 = fmul fast float %1551, 0x3FAFFE2000000000
  %1553 = fpext float %1552 to double
  %1554 = fadd fast double %1553, 5.000000e-01
  %1555 = fptoui double %1554 to i64
  %1556 = and i64 %1555, 4294967295
  %1557 = icmp eq i64 %1544, 0
  %1558 = select i1 %1557, i64 8, i64 %1544
  br label %1559

1559:                                             ; preds = %1548, %1569
  %1560 = phi i64 [ %1580, %1569 ], [ %1558, %1548 ]
  %1561 = phi i64 [ %1565, %1569 ], [ 12, %1548 ]
  %1562 = phi ptr [ %1582, %1569 ], [ %1546, %1548 ]
  %1563 = tail call i64 @llvm.umin.i64(i64 %1561, i64 %1560)
  %1564 = sub nsw i64 %1561, %1563
  %1565 = tail call i64 @llvm.smax.i64(i64 %1564, i64 0)
  %1566 = icmp eq i64 %1560, 8
  br i1 %1566, label %1569, label %1567

1567:                                             ; preds = %1559
  %1568 = load i8, ptr %1562, align 1, !tbaa !48, !alias.scope !138, !noalias !77
  br label %1569

1569:                                             ; preds = %1567, %1559
  %1570 = phi i8 [ %1568, %1567 ], [ 0, %1559 ]
  %1571 = sub i64 %1560, %1563
  %1572 = lshr i64 %1556, %1565
  %1573 = shl nsw i64 -1, %1563
  %1574 = xor i64 %1573, -1
  %1575 = and i64 %1572, %1574
  %1576 = shl i64 %1575, %1571
  %1577 = trunc i64 %1576 to i8
  %1578 = or i8 %1570, %1577
  store i8 %1578, ptr %1562, align 1, !tbaa !48, !alias.scope !138, !noalias !77
  %1579 = icmp ule i64 %1560, %1561
  %1580 = select i1 %1579, i64 8, i64 %1571
  %1581 = zext i1 %1579 to i64
  %1582 = getelementptr inbounds i8, ptr %1562, i64 %1581
  %1583 = icmp slt i64 %1564, 1
  br i1 %1583, label %1584, label %1559, !llvm.loop !75

1584:                                             ; preds = %1569
  %1585 = load i16, ptr %1510, align 2, !tbaa !31, !alias.scope !77, !noalias !80
  %1586 = uitofp i16 %1585 to float
  %1587 = fmul fast float %1586, 0x3FAFFE2000000000
  %1588 = fpext float %1587 to double
  %1589 = fadd fast double %1588, 5.000000e-01
  %1590 = fptoui double %1589 to i64
  %1591 = and i64 %1590, 4294967295
  tail call void @llvm.experimental.noalias.scope.decl(metadata !141)
  %1592 = icmp eq i64 %1580, 0
  %1593 = select i1 %1592, i64 8, i64 %1580
  br label %1594

1594:                                             ; preds = %1584, %1604
  %1595 = phi i64 [ %1615, %1604 ], [ %1593, %1584 ]
  %1596 = phi i64 [ %1600, %1604 ], [ 12, %1584 ]
  %1597 = phi ptr [ %1617, %1604 ], [ %1582, %1584 ]
  %1598 = tail call i64 @llvm.umin.i64(i64 %1596, i64 %1595)
  %1599 = sub nsw i64 %1596, %1598
  %1600 = tail call i64 @llvm.smax.i64(i64 %1599, i64 0)
  %1601 = icmp eq i64 %1595, 8
  br i1 %1601, label %1604, label %1602

1602:                                             ; preds = %1594
  %1603 = load i8, ptr %1597, align 1, !tbaa !48, !alias.scope !144, !noalias !77
  br label %1604

1604:                                             ; preds = %1602, %1594
  %1605 = phi i8 [ %1603, %1602 ], [ 0, %1594 ]
  %1606 = sub i64 %1595, %1598
  %1607 = lshr i64 %1591, %1600
  %1608 = shl nsw i64 -1, %1598
  %1609 = xor i64 %1608, -1
  %1610 = and i64 %1607, %1609
  %1611 = shl i64 %1610, %1606
  %1612 = trunc i64 %1611 to i8
  %1613 = or i8 %1605, %1612
  store i8 %1613, ptr %1597, align 1, !tbaa !48, !alias.scope !144, !noalias !77
  %1614 = icmp ule i64 %1595, %1596
  %1615 = select i1 %1614, i64 8, i64 %1606
  %1616 = zext i1 %1614 to i64
  %1617 = getelementptr inbounds i8, ptr %1597, i64 %1616
  %1618 = icmp slt i64 %1599, 1
  br i1 %1618, label %1619, label %1594, !llvm.loop !75

1619:                                             ; preds = %1604
  %1620 = getelementptr inbounds %struct._PixelPacket, ptr %1510, i64 1
  %1621 = getelementptr inbounds i8, ptr %1617, i64 %1310
  %1622 = add nuw nsw i64 %1511, 1
  %1623 = icmp eq i64 %1622, %164
  br i1 %1623, label %17110, label %1508, !llvm.loop !145

1624:                                             ; preds = %774
  %1625 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 2
  %1626 = load i32, ptr %1625, align 8, !tbaa !50, !noalias !82
  %1627 = icmp eq i32 %1626, 1
  %1628 = icmp sgt i64 %164, 0
  br i1 %1627, label %1636, label %1629

1629:                                             ; preds = %1624
  br i1 %1628, label %1630, label %17875

1630:                                             ; preds = %1629
  %1631 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %1632 = load i32, ptr %1631, align 8, !tbaa !51, !noalias !82
  %1633 = icmp eq i32 %1632, 1
  %1634 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %1635 = load i64, ptr %1634, align 8, !tbaa !47, !noalias !82
  br label %1872

1636:                                             ; preds = %1624
  br i1 %1628, label %1637, label %17875

1637:                                             ; preds = %1636
  %1638 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %1639 = load i32, ptr %1638, align 8, !tbaa !51, !noalias !82
  %1640 = icmp eq i32 %1639, 1
  %1641 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %1642 = load i64, ptr %1641, align 8, !tbaa !47, !noalias !82
  br label %1643

1643:                                             ; preds = %1859, %1637
  %1644 = phi ptr [ %166, %1637 ], [ %1868, %1859 ]
  %1645 = phi i64 [ 0, %1637 ], [ %1870, %1859 ]
  %1646 = phi ptr [ %88, %1637 ], [ %1869, %1859 ]
  %1647 = load i16, ptr %1644, align 2, !tbaa !31, !alias.scope !77, !noalias !80
  %1648 = uitofp i16 %1647 to double
  %1649 = fmul fast double %1648, 0x3EF0001000100010
  %1650 = fptrunc double %1649 to float
  %1651 = bitcast float %1650 to i32
  %1652 = lshr i32 %1651, 16
  %1653 = and i32 %1652, 32768
  %1654 = lshr i32 %1651, 23
  %1655 = and i32 %1654, 255
  %1656 = add nsw i32 %1655, -112
  %1657 = and i32 %1651, 8388607
  %1658 = icmp ult i32 %1655, 113
  br i1 %1658, label %1659, label %1676

1659:                                             ; preds = %1643
  %1660 = icmp ult i32 %1655, 102
  br i1 %1660, label %1673, label %1661

1661:                                             ; preds = %1659
  %1662 = or i32 %1657, 8388608
  %1663 = sub nuw nsw i32 126, %1655
  %1664 = sub nuw nsw i32 125, %1655
  %1665 = shl nsw i32 -1, %1664
  %1666 = xor i32 %1665, -1
  %1667 = add nuw nsw i32 %1662, %1666
  %1668 = lshr i32 %1662, %1663
  %1669 = and i32 %1668, 1
  %1670 = add nuw nsw i32 %1667, %1669
  %1671 = lshr i32 %1670, %1663
  %1672 = or i32 %1671, %1653
  br label %1673

1673:                                             ; preds = %1661, %1659
  %1674 = phi i32 [ %1672, %1661 ], [ %1653, %1659 ]
  %1675 = trunc i32 %1674 to i16
  br label %1711

1676:                                             ; preds = %1643
  %1677 = icmp eq i32 %1656, 143
  br i1 %1677, label %1678, label %1691

1678:                                             ; preds = %1676
  %1679 = icmp eq i32 %1657, 0
  br i1 %1679, label %1680, label %1683

1680:                                             ; preds = %1678
  %1681 = trunc i32 %1653 to i16
  %1682 = or i16 %1681, 31744
  br label %1711

1683:                                             ; preds = %1678
  %1684 = lshr i32 %1657, 13
  %1685 = icmp ult i32 %1657, 8192
  %1686 = zext i1 %1685 to i32
  %1687 = or i32 %1684, %1686
  %1688 = or i32 %1687, %1653
  %1689 = trunc i32 %1688 to i16
  %1690 = or i16 %1689, 31744
  br label %1711

1691:                                             ; preds = %1676
  %1692 = lshr i32 %1651, 13
  %1693 = and i32 %1692, 1
  %1694 = add nuw nsw i32 %1657, 4095
  %1695 = add nuw nsw i32 %1694, %1693
  %1696 = and i32 %1695, 8388608
  %1697 = icmp eq i32 %1696, 0
  %1698 = add nsw i32 %1655, -111
  %1699 = select i1 %1697, i32 %1656, i32 %1698
  %1700 = icmp ugt i32 %1699, 30
  br i1 %1700, label %1701, label %1704

1701:                                             ; preds = %1691
  %1702 = trunc i32 %1653 to i16
  %1703 = or i16 %1702, 31744
  br label %1711

1704:                                             ; preds = %1691
  %1705 = lshr i32 %1695, 13
  %1706 = shl nuw nsw i32 %1699, 10
  %1707 = select i1 %1697, i32 %1705, i32 0
  %1708 = or i32 %1707, %1706
  %1709 = or i32 %1708, %1653
  %1710 = trunc i32 %1709 to i16
  br label %1711

1711:                                             ; preds = %1704, %1701, %1683, %1680, %1673
  %1712 = phi i16 [ %1675, %1673 ], [ %1682, %1680 ], [ %1690, %1683 ], [ %1703, %1701 ], [ %1710, %1704 ]
  %1713 = lshr i16 %1712, 8
  %1714 = select i1 %1640, i16 %1712, i16 %1713
  %1715 = select i1 %1640, i16 %1713, i16 %1712
  %1716 = trunc i16 %1715 to i8
  %1717 = trunc i16 %1714 to i8
  store i8 %1717, ptr %1646, align 1, !alias.scope !80, !noalias !77
  %1718 = getelementptr inbounds i8, ptr %1646, i64 1
  store i8 %1716, ptr %1718, align 1, !alias.scope !80, !noalias !77
  %1719 = getelementptr inbounds i8, ptr %1646, i64 2
  %1720 = getelementptr inbounds %struct._PixelPacket, ptr %1644, i64 0, i32 1
  %1721 = load i16, ptr %1720, align 2, !tbaa !30, !alias.scope !77, !noalias !80
  %1722 = uitofp i16 %1721 to double
  %1723 = fmul fast double %1722, 0x3EF0001000100010
  %1724 = fptrunc double %1723 to float
  %1725 = bitcast float %1724 to i32
  %1726 = lshr i32 %1725, 16
  %1727 = and i32 %1726, 32768
  %1728 = lshr i32 %1725, 23
  %1729 = and i32 %1728, 255
  %1730 = add nsw i32 %1729, -112
  %1731 = and i32 %1725, 8388607
  %1732 = icmp ult i32 %1729, 113
  br i1 %1732, label %1733, label %1750

1733:                                             ; preds = %1711
  %1734 = icmp ult i32 %1729, 102
  br i1 %1734, label %1747, label %1735

1735:                                             ; preds = %1733
  %1736 = or i32 %1731, 8388608
  %1737 = sub nuw nsw i32 126, %1729
  %1738 = sub nuw nsw i32 125, %1729
  %1739 = shl nsw i32 -1, %1738
  %1740 = xor i32 %1739, -1
  %1741 = add nuw nsw i32 %1736, %1740
  %1742 = lshr i32 %1736, %1737
  %1743 = and i32 %1742, 1
  %1744 = add nuw nsw i32 %1741, %1743
  %1745 = lshr i32 %1744, %1737
  %1746 = or i32 %1745, %1727
  br label %1747

1747:                                             ; preds = %1735, %1733
  %1748 = phi i32 [ %1746, %1735 ], [ %1727, %1733 ]
  %1749 = trunc i32 %1748 to i16
  br label %1785

1750:                                             ; preds = %1711
  %1751 = icmp eq i32 %1730, 143
  br i1 %1751, label %1752, label %1765

1752:                                             ; preds = %1750
  %1753 = icmp eq i32 %1731, 0
  br i1 %1753, label %1754, label %1757

1754:                                             ; preds = %1752
  %1755 = trunc i32 %1727 to i16
  %1756 = or i16 %1755, 31744
  br label %1785

1757:                                             ; preds = %1752
  %1758 = lshr i32 %1731, 13
  %1759 = icmp ult i32 %1731, 8192
  %1760 = zext i1 %1759 to i32
  %1761 = or i32 %1758, %1760
  %1762 = or i32 %1761, %1727
  %1763 = trunc i32 %1762 to i16
  %1764 = or i16 %1763, 31744
  br label %1785

1765:                                             ; preds = %1750
  %1766 = lshr i32 %1725, 13
  %1767 = and i32 %1766, 1
  %1768 = add nuw nsw i32 %1731, 4095
  %1769 = add nuw nsw i32 %1768, %1767
  %1770 = and i32 %1769, 8388608
  %1771 = icmp eq i32 %1770, 0
  %1772 = add nsw i32 %1729, -111
  %1773 = select i1 %1771, i32 %1730, i32 %1772
  %1774 = icmp ugt i32 %1773, 30
  br i1 %1774, label %1775, label %1778

1775:                                             ; preds = %1765
  %1776 = trunc i32 %1727 to i16
  %1777 = or i16 %1776, 31744
  br label %1785

1778:                                             ; preds = %1765
  %1779 = lshr i32 %1769, 13
  %1780 = shl nuw nsw i32 %1773, 10
  %1781 = select i1 %1771, i32 %1779, i32 0
  %1782 = or i32 %1781, %1780
  %1783 = or i32 %1782, %1727
  %1784 = trunc i32 %1783 to i16
  br label %1785

1785:                                             ; preds = %1778, %1775, %1757, %1754, %1747
  %1786 = phi i16 [ %1749, %1747 ], [ %1756, %1754 ], [ %1764, %1757 ], [ %1777, %1775 ], [ %1784, %1778 ]
  %1787 = lshr i16 %1786, 8
  %1788 = select i1 %1640, i16 %1786, i16 %1787
  %1789 = select i1 %1640, i16 %1787, i16 %1786
  %1790 = trunc i16 %1789 to i8
  %1791 = trunc i16 %1788 to i8
  store i8 %1791, ptr %1719, align 1, !alias.scope !80, !noalias !77
  %1792 = getelementptr inbounds i8, ptr %1646, i64 3
  store i8 %1790, ptr %1792, align 1, !alias.scope !80, !noalias !77
  %1793 = getelementptr inbounds i8, ptr %1646, i64 4
  %1794 = getelementptr inbounds %struct._PixelPacket, ptr %1644, i64 0, i32 2
  %1795 = load i16, ptr %1794, align 2, !tbaa !29, !alias.scope !77, !noalias !80
  %1796 = uitofp i16 %1795 to double
  %1797 = fmul fast double %1796, 0x3EF0001000100010
  %1798 = fptrunc double %1797 to float
  %1799 = bitcast float %1798 to i32
  %1800 = lshr i32 %1799, 16
  %1801 = and i32 %1800, 32768
  %1802 = lshr i32 %1799, 23
  %1803 = and i32 %1802, 255
  %1804 = add nsw i32 %1803, -112
  %1805 = and i32 %1799, 8388607
  %1806 = icmp ult i32 %1803, 113
  br i1 %1806, label %1807, label %1824

1807:                                             ; preds = %1785
  %1808 = icmp ult i32 %1803, 102
  br i1 %1808, label %1821, label %1809

1809:                                             ; preds = %1807
  %1810 = or i32 %1805, 8388608
  %1811 = sub nuw nsw i32 126, %1803
  %1812 = sub nuw nsw i32 125, %1803
  %1813 = shl nsw i32 -1, %1812
  %1814 = xor i32 %1813, -1
  %1815 = add nuw nsw i32 %1810, %1814
  %1816 = lshr i32 %1810, %1811
  %1817 = and i32 %1816, 1
  %1818 = add nuw nsw i32 %1815, %1817
  %1819 = lshr i32 %1818, %1811
  %1820 = or i32 %1819, %1801
  br label %1821

1821:                                             ; preds = %1809, %1807
  %1822 = phi i32 [ %1820, %1809 ], [ %1801, %1807 ]
  %1823 = trunc i32 %1822 to i16
  br label %1859

1824:                                             ; preds = %1785
  %1825 = icmp eq i32 %1804, 143
  br i1 %1825, label %1826, label %1839

1826:                                             ; preds = %1824
  %1827 = icmp eq i32 %1805, 0
  br i1 %1827, label %1828, label %1831

1828:                                             ; preds = %1826
  %1829 = trunc i32 %1801 to i16
  %1830 = or i16 %1829, 31744
  br label %1859

1831:                                             ; preds = %1826
  %1832 = lshr i32 %1805, 13
  %1833 = icmp ult i32 %1805, 8192
  %1834 = zext i1 %1833 to i32
  %1835 = or i32 %1832, %1834
  %1836 = or i32 %1835, %1801
  %1837 = trunc i32 %1836 to i16
  %1838 = or i16 %1837, 31744
  br label %1859

1839:                                             ; preds = %1824
  %1840 = lshr i32 %1799, 13
  %1841 = and i32 %1840, 1
  %1842 = add nuw nsw i32 %1805, 4095
  %1843 = add nuw nsw i32 %1842, %1841
  %1844 = and i32 %1843, 8388608
  %1845 = icmp eq i32 %1844, 0
  %1846 = add nsw i32 %1803, -111
  %1847 = select i1 %1845, i32 %1804, i32 %1846
  %1848 = icmp ugt i32 %1847, 30
  br i1 %1848, label %1849, label %1852

1849:                                             ; preds = %1839
  %1850 = trunc i32 %1801 to i16
  %1851 = or i16 %1850, 31744
  br label %1859

1852:                                             ; preds = %1839
  %1853 = lshr i32 %1843, 13
  %1854 = shl nuw nsw i32 %1847, 10
  %1855 = select i1 %1845, i32 %1853, i32 0
  %1856 = or i32 %1855, %1854
  %1857 = or i32 %1856, %1801
  %1858 = trunc i32 %1857 to i16
  br label %1859

1859:                                             ; preds = %1852, %1849, %1831, %1828, %1821
  %1860 = phi i16 [ %1823, %1821 ], [ %1830, %1828 ], [ %1838, %1831 ], [ %1851, %1849 ], [ %1858, %1852 ]
  %1861 = lshr i16 %1860, 8
  %1862 = select i1 %1640, i16 %1860, i16 %1861
  %1863 = select i1 %1640, i16 %1861, i16 %1860
  %1864 = trunc i16 %1863 to i8
  %1865 = trunc i16 %1862 to i8
  store i8 %1865, ptr %1793, align 1, !alias.scope !80, !noalias !77
  %1866 = getelementptr inbounds i8, ptr %1646, i64 5
  store i8 %1864, ptr %1866, align 1, !alias.scope !80, !noalias !77
  %1867 = getelementptr inbounds i8, ptr %1646, i64 6
  %1868 = getelementptr inbounds %struct._PixelPacket, ptr %1644, i64 1
  %1869 = getelementptr inbounds i8, ptr %1867, i64 %1642
  %1870 = add nuw nsw i64 %1645, 1
  %1871 = icmp eq i64 %1870, %164
  br i1 %1871, label %17787, label %1643, !llvm.loop !146

1872:                                             ; preds = %1872, %1630
  %1873 = phi ptr [ %166, %1630 ], [ %1902, %1872 ]
  %1874 = phi i64 [ 0, %1630 ], [ %1904, %1872 ]
  %1875 = phi ptr [ %88, %1630 ], [ %1903, %1872 ]
  %1876 = load i16, ptr %1873, align 2, !tbaa !31, !alias.scope !77, !noalias !80
  %1877 = lshr i16 %1876, 8
  %1878 = select i1 %1633, i16 %1876, i16 %1877
  %1879 = select i1 %1633, i16 %1877, i16 %1876
  %1880 = trunc i16 %1879 to i8
  %1881 = trunc i16 %1878 to i8
  store i8 %1881, ptr %1875, align 1, !alias.scope !80, !noalias !77
  %1882 = getelementptr inbounds i8, ptr %1875, i64 1
  store i8 %1880, ptr %1882, align 1, !alias.scope !80, !noalias !77
  %1883 = getelementptr inbounds i8, ptr %1875, i64 2
  %1884 = getelementptr inbounds %struct._PixelPacket, ptr %1873, i64 0, i32 1
  %1885 = load i16, ptr %1884, align 2, !tbaa !30, !alias.scope !77, !noalias !80
  %1886 = lshr i16 %1885, 8
  %1887 = select i1 %1633, i16 %1885, i16 %1886
  %1888 = select i1 %1633, i16 %1886, i16 %1885
  %1889 = trunc i16 %1888 to i8
  %1890 = trunc i16 %1887 to i8
  store i8 %1890, ptr %1883, align 1, !alias.scope !80, !noalias !77
  %1891 = getelementptr inbounds i8, ptr %1875, i64 3
  store i8 %1889, ptr %1891, align 1, !alias.scope !80, !noalias !77
  %1892 = getelementptr inbounds i8, ptr %1875, i64 4
  %1893 = getelementptr inbounds %struct._PixelPacket, ptr %1873, i64 0, i32 2
  %1894 = load i16, ptr %1893, align 2, !tbaa !29, !alias.scope !77, !noalias !80
  %1895 = lshr i16 %1894, 8
  %1896 = select i1 %1633, i16 %1894, i16 %1895
  %1897 = select i1 %1633, i16 %1895, i16 %1894
  %1898 = trunc i16 %1897 to i8
  %1899 = trunc i16 %1896 to i8
  store i8 %1899, ptr %1892, align 1, !alias.scope !80, !noalias !77
  %1900 = getelementptr inbounds i8, ptr %1875, i64 5
  store i8 %1898, ptr %1900, align 1, !alias.scope !80, !noalias !77
  %1901 = getelementptr inbounds i8, ptr %1875, i64 6
  %1902 = getelementptr inbounds %struct._PixelPacket, ptr %1873, i64 1
  %1903 = getelementptr inbounds i8, ptr %1901, i64 %1635
  %1904 = add nuw nsw i64 %1874, 1
  %1905 = icmp eq i64 %1904, %164
  br i1 %1905, label %17787, label %1872, !llvm.loop !147

1906:                                             ; preds = %774
  %1907 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 2
  %1908 = load i32, ptr %1907, align 8, !tbaa !50, !noalias !82
  %1909 = icmp eq i32 %1908, 1
  %1910 = icmp sgt i64 %164, 0
  br i1 %1909, label %1918, label %1911

1911:                                             ; preds = %1906
  br i1 %1910, label %1912, label %17875

1912:                                             ; preds = %1911
  %1913 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %1914 = load i32, ptr %1913, align 8, !tbaa !51, !noalias !82
  %1915 = icmp eq i32 %1914, 1
  %1916 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %1917 = load i64, ptr %1916, align 8, !tbaa !47, !noalias !82
  br label %2019

1918:                                             ; preds = %1906
  br i1 %1910, label %1919, label %17875

1919:                                             ; preds = %1918
  %1920 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 14
  %1921 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 3
  %1922 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %1923 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  br label %1924

1924:                                             ; preds = %2005, %1919
  %1925 = phi ptr [ %166, %1919 ], [ %2014, %2005 ]
  %1926 = phi i64 [ 0, %1919 ], [ %2017, %2005 ]
  %1927 = phi ptr [ %88, %1919 ], [ %2016, %2005 ]
  %1928 = getelementptr inbounds %struct._PixelPacket, ptr %1925, i64 0, i32 2
  %1929 = load i16, ptr %1928, align 2, !tbaa !29, !alias.scope !77, !noalias !80
  call void @llvm.experimental.noalias.scope.decl(metadata !148)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %74) #6, !noalias !151
  %1930 = call ptr @ResetMagickMemory(ptr noundef nonnull %74, i32 noundef 0, i64 noundef 4) #6, !noalias !148
  %1931 = uitofp i16 %1929 to double
  %1932 = load double, ptr %1920, align 8, !tbaa !59, !noalias !151
  %1933 = fmul fast double %1932, %1931
  %1934 = load double, ptr %1921, align 8, !tbaa !60, !noalias !151
  %1935 = fadd fast double %1933, %1934
  %1936 = fptrunc double %1935 to float
  %1937 = load i32, ptr %1922, align 8, !tbaa !51, !noalias !151
  %1938 = icmp eq i32 %1937, 1
  %1939 = bitcast float %1936 to i32
  %1940 = lshr i32 %1939, 24
  %1941 = trunc i32 %1940 to i8
  %1942 = lshr i32 %1939, 16
  %1943 = trunc i32 %1942 to i8
  %1944 = lshr i32 %1939, 8
  %1945 = trunc i32 %1944 to i8
  %1946 = trunc i32 %1939 to i8
  br i1 %1938, label %1948, label %1947

1947:                                             ; preds = %1924
  br label %1948

1948:                                             ; preds = %1947, %1924
  %1949 = phi i8 [ %1941, %1947 ], [ %1946, %1924 ]
  %1950 = phi i8 [ %1943, %1947 ], [ %1945, %1924 ]
  %1951 = phi i8 [ %1945, %1947 ], [ %1943, %1924 ]
  %1952 = phi i8 [ %1946, %1947 ], [ %1941, %1924 ]
  store i8 %1949, ptr %1927, align 1, !alias.scope !152, !noalias !77
  %1953 = getelementptr inbounds i8, ptr %1927, i64 1
  store i8 %1950, ptr %1953, align 1, !alias.scope !152, !noalias !77
  %1954 = getelementptr inbounds i8, ptr %1927, i64 2
  store i8 %1951, ptr %1954, align 1, !alias.scope !152, !noalias !77
  %1955 = getelementptr inbounds i8, ptr %1927, i64 3
  store i8 %1952, ptr %1955, align 1, !alias.scope !152, !noalias !77
  %1956 = getelementptr inbounds i8, ptr %1927, i64 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %74) #6, !noalias !151
  %1957 = getelementptr inbounds %struct._PixelPacket, ptr %1925, i64 0, i32 1
  %1958 = load i16, ptr %1957, align 2, !tbaa !30, !alias.scope !77, !noalias !80
  call void @llvm.experimental.noalias.scope.decl(metadata !153)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %73) #6, !noalias !156
  %1959 = call ptr @ResetMagickMemory(ptr noundef nonnull %73, i32 noundef 0, i64 noundef 4) #6, !noalias !153
  %1960 = uitofp i16 %1958 to double
  %1961 = load double, ptr %1920, align 8, !tbaa !59, !noalias !156
  %1962 = fmul fast double %1961, %1960
  %1963 = load double, ptr %1921, align 8, !tbaa !60, !noalias !156
  %1964 = fadd fast double %1962, %1963
  %1965 = fptrunc double %1964 to float
  %1966 = load i32, ptr %1922, align 8, !tbaa !51, !noalias !156
  %1967 = icmp eq i32 %1966, 1
  %1968 = bitcast float %1965 to i32
  %1969 = lshr i32 %1968, 24
  %1970 = trunc i32 %1969 to i8
  %1971 = lshr i32 %1968, 16
  %1972 = trunc i32 %1971 to i8
  %1973 = lshr i32 %1968, 8
  %1974 = trunc i32 %1973 to i8
  %1975 = trunc i32 %1968 to i8
  br i1 %1967, label %1977, label %1976

1976:                                             ; preds = %1948
  br label %1977

1977:                                             ; preds = %1976, %1948
  %1978 = phi i8 [ %1970, %1976 ], [ %1975, %1948 ]
  %1979 = phi i8 [ %1972, %1976 ], [ %1974, %1948 ]
  %1980 = phi i8 [ %1974, %1976 ], [ %1972, %1948 ]
  %1981 = phi i8 [ %1975, %1976 ], [ %1970, %1948 ]
  store i8 %1978, ptr %1956, align 1, !alias.scope !157, !noalias !77
  %1982 = getelementptr inbounds i8, ptr %1927, i64 5
  store i8 %1979, ptr %1982, align 1, !alias.scope !157, !noalias !77
  %1983 = getelementptr inbounds i8, ptr %1927, i64 6
  store i8 %1980, ptr %1983, align 1, !alias.scope !157, !noalias !77
  %1984 = getelementptr inbounds i8, ptr %1927, i64 7
  store i8 %1981, ptr %1984, align 1, !alias.scope !157, !noalias !77
  %1985 = getelementptr inbounds i8, ptr %1927, i64 8
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %73) #6, !noalias !156
  %1986 = load i16, ptr %1925, align 2, !tbaa !31, !alias.scope !77, !noalias !80
  call void @llvm.experimental.noalias.scope.decl(metadata !158)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %72) #6, !noalias !161
  %1987 = call ptr @ResetMagickMemory(ptr noundef nonnull %72, i32 noundef 0, i64 noundef 4) #6, !noalias !158
  %1988 = uitofp i16 %1986 to double
  %1989 = load double, ptr %1920, align 8, !tbaa !59, !noalias !161
  %1990 = fmul fast double %1989, %1988
  %1991 = load double, ptr %1921, align 8, !tbaa !60, !noalias !161
  %1992 = fadd fast double %1990, %1991
  %1993 = fptrunc double %1992 to float
  %1994 = load i32, ptr %1922, align 8, !tbaa !51, !noalias !161
  %1995 = icmp eq i32 %1994, 1
  %1996 = bitcast float %1993 to i32
  %1997 = lshr i32 %1996, 24
  %1998 = trunc i32 %1997 to i8
  %1999 = lshr i32 %1996, 16
  %2000 = trunc i32 %1999 to i8
  %2001 = lshr i32 %1996, 8
  %2002 = trunc i32 %2001 to i8
  %2003 = trunc i32 %1996 to i8
  br i1 %1995, label %2005, label %2004

2004:                                             ; preds = %1977
  br label %2005

2005:                                             ; preds = %2004, %1977
  %2006 = phi i8 [ %1998, %2004 ], [ %2003, %1977 ]
  %2007 = phi i8 [ %2000, %2004 ], [ %2002, %1977 ]
  %2008 = phi i8 [ %2002, %2004 ], [ %2000, %1977 ]
  %2009 = phi i8 [ %2003, %2004 ], [ %1998, %1977 ]
  store i8 %2006, ptr %1985, align 1, !alias.scope !162, !noalias !77
  %2010 = getelementptr inbounds i8, ptr %1927, i64 9
  store i8 %2007, ptr %2010, align 1, !alias.scope !162, !noalias !77
  %2011 = getelementptr inbounds i8, ptr %1927, i64 10
  store i8 %2008, ptr %2011, align 1, !alias.scope !162, !noalias !77
  %2012 = getelementptr inbounds i8, ptr %1927, i64 11
  store i8 %2009, ptr %2012, align 1, !alias.scope !162, !noalias !77
  %2013 = getelementptr inbounds i8, ptr %1927, i64 12
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %72) #6, !noalias !161
  %2014 = getelementptr inbounds %struct._PixelPacket, ptr %1925, i64 1
  %2015 = load i64, ptr %1923, align 8, !tbaa !47, !noalias !82
  %2016 = getelementptr inbounds i8, ptr %2013, i64 %2015
  %2017 = add nuw nsw i64 %1926, 1
  %2018 = icmp eq i64 %2017, %164
  br i1 %2018, label %17787, label %1924, !llvm.loop !163

2019:                                             ; preds = %2069, %1912
  %2020 = phi ptr [ %166, %1912 ], [ %2095, %2069 ]
  %2021 = phi i64 [ 0, %1912 ], [ %2097, %2069 ]
  %2022 = phi ptr [ %88, %1912 ], [ %2096, %2069 ]
  %2023 = load i16, ptr %2020, align 2, !tbaa !31, !alias.scope !77, !noalias !80
  %2024 = zext i16 %2023 to i32
  %2025 = mul nuw i32 %2024, 65537
  %2026 = getelementptr inbounds i8, ptr %2022, i64 1
  %2027 = getelementptr inbounds i8, ptr %2022, i64 2
  %2028 = getelementptr inbounds i8, ptr %2022, i64 3
  %2029 = getelementptr inbounds i8, ptr %2022, i64 4
  %2030 = getelementptr inbounds %struct._PixelPacket, ptr %2020, i64 0, i32 1
  %2031 = getelementptr inbounds i8, ptr %2022, i64 5
  %2032 = getelementptr inbounds %struct._PixelPacket, ptr %2020, i64 0, i32 2
  br i1 %1915, label %2033, label %2051

2033:                                             ; preds = %2019
  %2034 = lshr i32 %2025, 8
  %2035 = lshr i32 %2025, 24
  %2036 = trunc i16 %2023 to i8
  %2037 = trunc i32 %2034 to i8
  %2038 = trunc i32 %2025 to i8
  store i8 %2038, ptr %2022, align 1, !alias.scope !80, !noalias !77
  %2039 = load i16, ptr %2030, align 2, !tbaa !30, !alias.scope !77, !noalias !80
  %2040 = zext i16 %2039 to i32
  %2041 = mul nuw i32 %2040, 65537
  %2042 = lshr i32 %2041, 8
  %2043 = lshr i32 %2041, 24
  %2044 = trunc i16 %2039 to i8
  %2045 = trunc i32 %2042 to i8
  %2046 = load i16, ptr %2032, align 2, !tbaa !29, !alias.scope !77, !noalias !80
  %2047 = zext i16 %2046 to i32
  %2048 = mul nuw i32 %2047, 65537
  %2049 = lshr i32 %2048, 8
  %2050 = lshr i32 %2048, 24
  br label %2069

2051:                                             ; preds = %2019
  %2052 = lshr i32 %2025, 24
  %2053 = lshr i32 %2025, 8
  %2054 = trunc i32 %2053 to i8
  %2055 = trunc i16 %2023 to i8
  %2056 = trunc i32 %2052 to i8
  store i8 %2056, ptr %2022, align 1, !alias.scope !80, !noalias !77
  %2057 = load i16, ptr %2030, align 2, !tbaa !30, !alias.scope !77, !noalias !80
  %2058 = zext i16 %2057 to i32
  %2059 = mul nuw i32 %2058, 65537
  %2060 = lshr i32 %2059, 24
  %2061 = lshr i32 %2059, 8
  %2062 = trunc i32 %2061 to i8
  %2063 = trunc i16 %2057 to i8
  %2064 = load i16, ptr %2032, align 2, !tbaa !29, !alias.scope !77, !noalias !80
  %2065 = zext i16 %2064 to i32
  %2066 = mul nuw i32 %2065, 65537
  %2067 = lshr i32 %2066, 24
  %2068 = lshr i32 %2066, 8
  br label %2069

2069:                                             ; preds = %2051, %2033
  %2070 = phi i8 [ %2037, %2033 ], [ %2055, %2051 ]
  %2071 = phi i8 [ %2036, %2033 ], [ %2054, %2051 ]
  %2072 = phi i32 [ %2035, %2033 ], [ %2025, %2051 ]
  %2073 = phi i32 [ %2041, %2033 ], [ %2060, %2051 ]
  %2074 = phi i8 [ %2045, %2033 ], [ %2063, %2051 ]
  %2075 = phi i8 [ %2044, %2033 ], [ %2062, %2051 ]
  %2076 = phi i32 [ %2043, %2033 ], [ %2059, %2051 ]
  %2077 = phi i32 [ %2048, %2033 ], [ %2067, %2051 ]
  %2078 = phi i32 [ %2049, %2033 ], [ %2065, %2051 ]
  %2079 = phi i32 [ %2047, %2033 ], [ %2068, %2051 ]
  %2080 = phi i32 [ %2050, %2033 ], [ %2066, %2051 ]
  %2081 = trunc i32 %2076 to i8
  %2082 = trunc i32 %2073 to i8
  %2083 = trunc i32 %2072 to i8
  store i8 %2070, ptr %2026, align 1
  store i8 %2071, ptr %2027, align 1
  store i8 %2083, ptr %2028, align 1
  store i8 %2082, ptr %2029, align 1
  store i8 %2074, ptr %2031, align 1
  %2084 = getelementptr inbounds i8, ptr %2022, i64 6
  store i8 %2075, ptr %2084, align 1
  %2085 = getelementptr inbounds i8, ptr %2022, i64 7
  store i8 %2081, ptr %2085, align 1
  %2086 = getelementptr inbounds i8, ptr %2022, i64 8
  %2087 = trunc i32 %2080 to i8
  %2088 = trunc i32 %2079 to i8
  %2089 = trunc i32 %2078 to i8
  %2090 = trunc i32 %2077 to i8
  store i8 %2090, ptr %2086, align 1, !alias.scope !80, !noalias !77
  %2091 = getelementptr inbounds i8, ptr %2022, i64 9
  store i8 %2089, ptr %2091, align 1, !alias.scope !80, !noalias !77
  %2092 = getelementptr inbounds i8, ptr %2022, i64 10
  store i8 %2088, ptr %2092, align 1, !alias.scope !80, !noalias !77
  %2093 = getelementptr inbounds i8, ptr %2022, i64 11
  store i8 %2087, ptr %2093, align 1, !alias.scope !80, !noalias !77
  %2094 = getelementptr inbounds i8, ptr %2022, i64 12
  %2095 = getelementptr inbounds %struct._PixelPacket, ptr %2020, i64 1
  %2096 = getelementptr inbounds i8, ptr %2094, i64 %1917
  %2097 = add nuw nsw i64 %2021, 1
  %2098 = icmp eq i64 %2097, %164
  br i1 %2098, label %17787, label %2019, !llvm.loop !164

2099:                                             ; preds = %774
  %2100 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 2
  %2101 = load i32, ptr %2100, align 8, !tbaa !50, !noalias !82
  %2102 = icmp eq i32 %2101, 1
  br i1 %2102, label %2103, label %2250

2103:                                             ; preds = %2099
  %2104 = icmp sgt i64 %164, 0
  br i1 %2104, label %2105, label %17875

2105:                                             ; preds = %2103
  %2106 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 14
  %2107 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 3
  %2108 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %2109 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  br label %2110

2110:                                             ; preds = %2228, %2105
  %2111 = phi ptr [ %166, %2105 ], [ %2245, %2228 ]
  %2112 = phi i64 [ 0, %2105 ], [ %2248, %2228 ]
  %2113 = phi ptr [ %88, %2105 ], [ %2247, %2228 ]
  %2114 = getelementptr inbounds %struct._PixelPacket, ptr %2111, i64 0, i32 2
  %2115 = load i16, ptr %2114, align 2, !tbaa !29, !alias.scope !77, !noalias !80
  %2116 = uitofp i16 %2115 to double
  call void @llvm.experimental.noalias.scope.decl(metadata !165)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %71) #6, !noalias !168
  %2117 = call ptr @ResetMagickMemory(ptr noundef nonnull %71, i32 noundef 0, i64 noundef 8) #6, !noalias !165
  %2118 = load double, ptr %2106, align 8, !tbaa !59, !noalias !168
  %2119 = fmul fast double %2118, %2116
  %2120 = load double, ptr %2107, align 8, !tbaa !60, !noalias !168
  %2121 = fadd fast double %2119, %2120
  %2122 = load i32, ptr %2108, align 8, !tbaa !51, !noalias !168
  %2123 = icmp eq i32 %2122, 1
  %2124 = bitcast double %2121 to i64
  %2125 = lshr i64 %2124, 56
  %2126 = trunc i64 %2125 to i8
  %2127 = lshr i64 %2124, 48
  %2128 = trunc i64 %2127 to i8
  %2129 = lshr i64 %2124, 40
  %2130 = trunc i64 %2129 to i8
  %2131 = lshr i64 %2124, 32
  %2132 = trunc i64 %2131 to i8
  %2133 = lshr i64 %2124, 24
  %2134 = trunc i64 %2133 to i8
  %2135 = lshr i64 %2124, 16
  %2136 = trunc i64 %2135 to i8
  %2137 = lshr i64 %2124, 8
  %2138 = trunc i64 %2137 to i8
  %2139 = trunc i64 %2124 to i8
  br i1 %2123, label %2141, label %2140

2140:                                             ; preds = %2110
  br label %2141

2141:                                             ; preds = %2140, %2110
  %2142 = phi i8 [ %2126, %2140 ], [ %2139, %2110 ]
  %2143 = phi i8 [ %2128, %2140 ], [ %2138, %2110 ]
  %2144 = phi i8 [ %2130, %2140 ], [ %2136, %2110 ]
  %2145 = phi i8 [ %2132, %2140 ], [ %2134, %2110 ]
  %2146 = phi i8 [ %2134, %2140 ], [ %2132, %2110 ]
  %2147 = phi i8 [ %2136, %2140 ], [ %2130, %2110 ]
  %2148 = phi i8 [ %2138, %2140 ], [ %2128, %2110 ]
  %2149 = phi i8 [ %2139, %2140 ], [ %2126, %2110 ]
  store i8 %2142, ptr %2113, align 1, !alias.scope !169, !noalias !77
  %2150 = getelementptr inbounds i8, ptr %2113, i64 1
  store i8 %2143, ptr %2150, align 1, !alias.scope !169, !noalias !77
  %2151 = getelementptr inbounds i8, ptr %2113, i64 2
  store i8 %2144, ptr %2151, align 1, !alias.scope !169, !noalias !77
  %2152 = getelementptr inbounds i8, ptr %2113, i64 3
  store i8 %2145, ptr %2152, align 1, !alias.scope !169, !noalias !77
  %2153 = getelementptr inbounds i8, ptr %2113, i64 4
  store i8 %2146, ptr %2153, align 1, !alias.scope !169, !noalias !77
  %2154 = getelementptr inbounds i8, ptr %2113, i64 5
  store i8 %2147, ptr %2154, align 1, !alias.scope !169, !noalias !77
  %2155 = getelementptr inbounds i8, ptr %2113, i64 6
  store i8 %2148, ptr %2155, align 1, !alias.scope !169, !noalias !77
  %2156 = getelementptr inbounds i8, ptr %2113, i64 7
  store i8 %2149, ptr %2156, align 1, !alias.scope !169, !noalias !77
  %2157 = getelementptr inbounds i8, ptr %2113, i64 8
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %71) #6, !noalias !168
  %2158 = getelementptr inbounds %struct._PixelPacket, ptr %2111, i64 0, i32 1
  %2159 = load i16, ptr %2158, align 2, !tbaa !30, !alias.scope !77, !noalias !80
  %2160 = uitofp i16 %2159 to double
  call void @llvm.experimental.noalias.scope.decl(metadata !170)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %70) #6, !noalias !173
  %2161 = call ptr @ResetMagickMemory(ptr noundef nonnull %70, i32 noundef 0, i64 noundef 8) #6, !noalias !170
  %2162 = load double, ptr %2106, align 8, !tbaa !59, !noalias !173
  %2163 = fmul fast double %2162, %2160
  %2164 = load double, ptr %2107, align 8, !tbaa !60, !noalias !173
  %2165 = fadd fast double %2163, %2164
  %2166 = load i32, ptr %2108, align 8, !tbaa !51, !noalias !173
  %2167 = icmp eq i32 %2166, 1
  %2168 = bitcast double %2165 to i64
  %2169 = lshr i64 %2168, 56
  %2170 = trunc i64 %2169 to i8
  %2171 = lshr i64 %2168, 48
  %2172 = trunc i64 %2171 to i8
  %2173 = lshr i64 %2168, 40
  %2174 = trunc i64 %2173 to i8
  %2175 = lshr i64 %2168, 32
  %2176 = trunc i64 %2175 to i8
  %2177 = lshr i64 %2168, 24
  %2178 = trunc i64 %2177 to i8
  %2179 = lshr i64 %2168, 16
  %2180 = trunc i64 %2179 to i8
  %2181 = lshr i64 %2168, 8
  %2182 = trunc i64 %2181 to i8
  %2183 = trunc i64 %2168 to i8
  br i1 %2167, label %2185, label %2184

2184:                                             ; preds = %2141
  br label %2185

2185:                                             ; preds = %2184, %2141
  %2186 = phi i8 [ %2170, %2184 ], [ %2183, %2141 ]
  %2187 = phi i8 [ %2172, %2184 ], [ %2182, %2141 ]
  %2188 = phi i8 [ %2174, %2184 ], [ %2180, %2141 ]
  %2189 = phi i8 [ %2176, %2184 ], [ %2178, %2141 ]
  %2190 = phi i8 [ %2178, %2184 ], [ %2176, %2141 ]
  %2191 = phi i8 [ %2180, %2184 ], [ %2174, %2141 ]
  %2192 = phi i8 [ %2182, %2184 ], [ %2172, %2141 ]
  %2193 = phi i8 [ %2183, %2184 ], [ %2170, %2141 ]
  store i8 %2186, ptr %2157, align 1, !alias.scope !174, !noalias !77
  %2194 = getelementptr inbounds i8, ptr %2113, i64 9
  store i8 %2187, ptr %2194, align 1, !alias.scope !174, !noalias !77
  %2195 = getelementptr inbounds i8, ptr %2113, i64 10
  store i8 %2188, ptr %2195, align 1, !alias.scope !174, !noalias !77
  %2196 = getelementptr inbounds i8, ptr %2113, i64 11
  store i8 %2189, ptr %2196, align 1, !alias.scope !174, !noalias !77
  %2197 = getelementptr inbounds i8, ptr %2113, i64 12
  store i8 %2190, ptr %2197, align 1, !alias.scope !174, !noalias !77
  %2198 = getelementptr inbounds i8, ptr %2113, i64 13
  store i8 %2191, ptr %2198, align 1, !alias.scope !174, !noalias !77
  %2199 = getelementptr inbounds i8, ptr %2113, i64 14
  store i8 %2192, ptr %2199, align 1, !alias.scope !174, !noalias !77
  %2200 = getelementptr inbounds i8, ptr %2113, i64 15
  store i8 %2193, ptr %2200, align 1, !alias.scope !174, !noalias !77
  %2201 = getelementptr inbounds i8, ptr %2113, i64 16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %70) #6, !noalias !173
  %2202 = load i16, ptr %2111, align 2, !tbaa !31, !alias.scope !77, !noalias !80
  %2203 = uitofp i16 %2202 to double
  call void @llvm.experimental.noalias.scope.decl(metadata !175)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %69) #6, !noalias !178
  %2204 = call ptr @ResetMagickMemory(ptr noundef nonnull %69, i32 noundef 0, i64 noundef 8) #6, !noalias !175
  %2205 = load double, ptr %2106, align 8, !tbaa !59, !noalias !178
  %2206 = fmul fast double %2205, %2203
  %2207 = load double, ptr %2107, align 8, !tbaa !60, !noalias !178
  %2208 = fadd fast double %2206, %2207
  %2209 = load i32, ptr %2108, align 8, !tbaa !51, !noalias !178
  %2210 = icmp eq i32 %2209, 1
  %2211 = bitcast double %2208 to i64
  %2212 = lshr i64 %2211, 56
  %2213 = trunc i64 %2212 to i8
  %2214 = lshr i64 %2211, 48
  %2215 = trunc i64 %2214 to i8
  %2216 = lshr i64 %2211, 40
  %2217 = trunc i64 %2216 to i8
  %2218 = lshr i64 %2211, 32
  %2219 = trunc i64 %2218 to i8
  %2220 = lshr i64 %2211, 24
  %2221 = trunc i64 %2220 to i8
  %2222 = lshr i64 %2211, 16
  %2223 = trunc i64 %2222 to i8
  %2224 = lshr i64 %2211, 8
  %2225 = trunc i64 %2224 to i8
  %2226 = trunc i64 %2211 to i8
  br i1 %2210, label %2228, label %2227

2227:                                             ; preds = %2185
  br label %2228

2228:                                             ; preds = %2227, %2185
  %2229 = phi i8 [ %2213, %2227 ], [ %2226, %2185 ]
  %2230 = phi i8 [ %2215, %2227 ], [ %2225, %2185 ]
  %2231 = phi i8 [ %2217, %2227 ], [ %2223, %2185 ]
  %2232 = phi i8 [ %2219, %2227 ], [ %2221, %2185 ]
  %2233 = phi i8 [ %2221, %2227 ], [ %2219, %2185 ]
  %2234 = phi i8 [ %2223, %2227 ], [ %2217, %2185 ]
  %2235 = phi i8 [ %2225, %2227 ], [ %2215, %2185 ]
  %2236 = phi i8 [ %2226, %2227 ], [ %2213, %2185 ]
  store i8 %2229, ptr %2201, align 1, !alias.scope !179, !noalias !77
  %2237 = getelementptr inbounds i8, ptr %2113, i64 17
  store i8 %2230, ptr %2237, align 1, !alias.scope !179, !noalias !77
  %2238 = getelementptr inbounds i8, ptr %2113, i64 18
  store i8 %2231, ptr %2238, align 1, !alias.scope !179, !noalias !77
  %2239 = getelementptr inbounds i8, ptr %2113, i64 19
  store i8 %2232, ptr %2239, align 1, !alias.scope !179, !noalias !77
  %2240 = getelementptr inbounds i8, ptr %2113, i64 20
  store i8 %2233, ptr %2240, align 1, !alias.scope !179, !noalias !77
  %2241 = getelementptr inbounds i8, ptr %2113, i64 21
  store i8 %2234, ptr %2241, align 1, !alias.scope !179, !noalias !77
  %2242 = getelementptr inbounds i8, ptr %2113, i64 22
  store i8 %2235, ptr %2242, align 1, !alias.scope !179, !noalias !77
  %2243 = getelementptr inbounds i8, ptr %2113, i64 23
  store i8 %2236, ptr %2243, align 1, !alias.scope !179, !noalias !77
  %2244 = getelementptr inbounds i8, ptr %2113, i64 24
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %69) #6, !noalias !178
  %2245 = getelementptr inbounds %struct._PixelPacket, ptr %2111, i64 1
  %2246 = load i64, ptr %2109, align 8, !tbaa !47, !noalias !82
  %2247 = getelementptr inbounds i8, ptr %2244, i64 %2246
  %2248 = add nuw nsw i64 %2112, 1
  %2249 = icmp eq i64 %2248, %164
  br i1 %2249, label %17787, label %2110, !llvm.loop !180

2250:                                             ; preds = %2099, %774
  %2251 = icmp sgt i64 %164, 0
  br i1 %2251, label %2252, label %17875

2252:                                             ; preds = %2250
  %2253 = add i64 %775, -1
  %2254 = shl i64 2, %2253
  %2255 = add i64 %2254, -1
  %2256 = uitofp i64 %2255 to float
  %2257 = fmul fast float %2256, 0x3EF0001000000000
  %2258 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 14, i32 2
  %2259 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %2260 = load i64, ptr %2258, align 8, !tbaa !69, !noalias !82
  %2261 = icmp sgt i64 %775, 0
  %2262 = load i64, ptr %2259, align 8, !tbaa !47, !noalias !82
  br label %2263

2263:                                             ; preds = %2384, %2252
  %2264 = phi i64 [ %2260, %2252 ], [ %2385, %2384 ]
  %2265 = phi ptr [ %166, %2252 ], [ %2387, %2384 ]
  %2266 = phi i64 [ 0, %2252 ], [ %2389, %2384 ]
  %2267 = phi ptr [ %88, %2252 ], [ %2388, %2384 ]
  %2268 = getelementptr inbounds %struct._PixelPacket, ptr %2265, i64 0, i32 2
  %2269 = load i16, ptr %2268, align 2, !tbaa !29, !alias.scope !77, !noalias !80
  %2270 = uitofp i16 %2269 to float
  %2271 = fmul fast float %2257, %2270
  %2272 = fpext float %2271 to double
  %2273 = fadd fast double %2272, 5.000000e-01
  %2274 = fptoui double %2273 to i64
  tail call void @llvm.experimental.noalias.scope.decl(metadata !181)
  %2275 = icmp eq i64 %2264, 0
  br i1 %2275, label %2276, label %2277

2276:                                             ; preds = %2263
  store i64 8, ptr %2258, align 8, !tbaa !69, !noalias !184
  br label %2277

2277:                                             ; preds = %2276, %2263
  %2278 = phi i64 [ 8, %2276 ], [ %2264, %2263 ]
  br i1 %2261, label %2279, label %2305

2279:                                             ; preds = %2277, %2289
  %2280 = phi i64 [ %2300, %2289 ], [ %2278, %2277 ]
  %2281 = phi i64 [ %2285, %2289 ], [ %775, %2277 ]
  %2282 = phi ptr [ %2302, %2289 ], [ %2267, %2277 ]
  %2283 = tail call i64 @llvm.umin.i64(i64 %2281, i64 %2280)
  %2284 = sub nsw i64 %2281, %2283
  %2285 = tail call i64 @llvm.smax.i64(i64 %2284, i64 0)
  %2286 = icmp eq i64 %2280, 8
  br i1 %2286, label %2289, label %2287

2287:                                             ; preds = %2279
  %2288 = load i8, ptr %2282, align 1, !tbaa !48, !alias.scope !185, !noalias !77
  br label %2289

2289:                                             ; preds = %2287, %2279
  %2290 = phi i8 [ %2288, %2287 ], [ 0, %2279 ]
  %2291 = sub i64 %2280, %2283
  %2292 = lshr i64 %2274, %2285
  %2293 = shl nsw i64 -1, %2283
  %2294 = xor i64 %2293, -1
  %2295 = and i64 %2292, %2294
  %2296 = shl i64 %2295, %2291
  %2297 = trunc i64 %2296 to i8
  %2298 = or i8 %2290, %2297
  store i8 %2298, ptr %2282, align 1, !tbaa !48, !alias.scope !185, !noalias !77
  %2299 = icmp ule i64 %2280, %2281
  %2300 = select i1 %2299, i64 8, i64 %2291
  %2301 = zext i1 %2299 to i64
  %2302 = getelementptr inbounds i8, ptr %2282, i64 %2301
  %2303 = icmp slt i64 %2284, 1
  br i1 %2303, label %2304, label %2279, !llvm.loop !75

2304:                                             ; preds = %2289
  store i64 %2300, ptr %2258, align 8, !tbaa !69, !noalias !184
  br label %2305

2305:                                             ; preds = %2304, %2277
  %2306 = phi i64 [ %2278, %2277 ], [ %2300, %2304 ]
  %2307 = phi ptr [ %2267, %2277 ], [ %2302, %2304 ]
  %2308 = getelementptr inbounds %struct._PixelPacket, ptr %2265, i64 0, i32 1
  %2309 = load i16, ptr %2308, align 2, !tbaa !30, !alias.scope !77, !noalias !80
  %2310 = uitofp i16 %2309 to float
  %2311 = fmul fast float %2257, %2310
  %2312 = fpext float %2311 to double
  %2313 = fadd fast double %2312, 5.000000e-01
  %2314 = fptoui double %2313 to i64
  tail call void @llvm.experimental.noalias.scope.decl(metadata !186)
  %2315 = icmp eq i64 %2306, 0
  br i1 %2315, label %2316, label %2317

2316:                                             ; preds = %2305
  store i64 8, ptr %2258, align 8, !tbaa !69, !noalias !189
  br label %2317

2317:                                             ; preds = %2316, %2305
  %2318 = phi i64 [ 8, %2316 ], [ %2306, %2305 ]
  br i1 %2261, label %2319, label %2345

2319:                                             ; preds = %2317, %2329
  %2320 = phi i64 [ %2340, %2329 ], [ %2318, %2317 ]
  %2321 = phi i64 [ %2325, %2329 ], [ %775, %2317 ]
  %2322 = phi ptr [ %2342, %2329 ], [ %2307, %2317 ]
  %2323 = tail call i64 @llvm.umin.i64(i64 %2321, i64 %2320)
  %2324 = sub nsw i64 %2321, %2323
  %2325 = tail call i64 @llvm.smax.i64(i64 %2324, i64 0)
  %2326 = icmp eq i64 %2320, 8
  br i1 %2326, label %2329, label %2327

2327:                                             ; preds = %2319
  %2328 = load i8, ptr %2322, align 1, !tbaa !48, !alias.scope !190, !noalias !77
  br label %2329

2329:                                             ; preds = %2327, %2319
  %2330 = phi i8 [ %2328, %2327 ], [ 0, %2319 ]
  %2331 = sub i64 %2320, %2323
  %2332 = lshr i64 %2314, %2325
  %2333 = shl nsw i64 -1, %2323
  %2334 = xor i64 %2333, -1
  %2335 = and i64 %2332, %2334
  %2336 = shl i64 %2335, %2331
  %2337 = trunc i64 %2336 to i8
  %2338 = or i8 %2330, %2337
  store i8 %2338, ptr %2322, align 1, !tbaa !48, !alias.scope !190, !noalias !77
  %2339 = icmp ule i64 %2320, %2321
  %2340 = select i1 %2339, i64 8, i64 %2331
  %2341 = zext i1 %2339 to i64
  %2342 = getelementptr inbounds i8, ptr %2322, i64 %2341
  %2343 = icmp slt i64 %2324, 1
  br i1 %2343, label %2344, label %2319, !llvm.loop !75

2344:                                             ; preds = %2329
  store i64 %2340, ptr %2258, align 8, !tbaa !69, !noalias !189
  br label %2345

2345:                                             ; preds = %2344, %2317
  %2346 = phi i64 [ %2318, %2317 ], [ %2340, %2344 ]
  %2347 = phi ptr [ %2307, %2317 ], [ %2342, %2344 ]
  %2348 = load i16, ptr %2265, align 2, !tbaa !31, !alias.scope !77, !noalias !80
  %2349 = uitofp i16 %2348 to float
  %2350 = fmul fast float %2257, %2349
  %2351 = fpext float %2350 to double
  %2352 = fadd fast double %2351, 5.000000e-01
  %2353 = fptoui double %2352 to i64
  tail call void @llvm.experimental.noalias.scope.decl(metadata !191)
  %2354 = icmp eq i64 %2346, 0
  br i1 %2354, label %2355, label %2356

2355:                                             ; preds = %2345
  store i64 8, ptr %2258, align 8, !tbaa !69, !noalias !194
  br label %2356

2356:                                             ; preds = %2355, %2345
  %2357 = phi i64 [ 8, %2355 ], [ %2346, %2345 ]
  br i1 %2261, label %2358, label %2384

2358:                                             ; preds = %2356, %2368
  %2359 = phi i64 [ %2379, %2368 ], [ %2357, %2356 ]
  %2360 = phi i64 [ %2364, %2368 ], [ %775, %2356 ]
  %2361 = phi ptr [ %2381, %2368 ], [ %2347, %2356 ]
  %2362 = tail call i64 @llvm.umin.i64(i64 %2360, i64 %2359)
  %2363 = sub nsw i64 %2360, %2362
  %2364 = tail call i64 @llvm.smax.i64(i64 %2363, i64 0)
  %2365 = icmp eq i64 %2359, 8
  br i1 %2365, label %2368, label %2366

2366:                                             ; preds = %2358
  %2367 = load i8, ptr %2361, align 1, !tbaa !48, !alias.scope !195, !noalias !77
  br label %2368

2368:                                             ; preds = %2366, %2358
  %2369 = phi i8 [ %2367, %2366 ], [ 0, %2358 ]
  %2370 = sub i64 %2359, %2362
  %2371 = lshr i64 %2353, %2364
  %2372 = shl nsw i64 -1, %2362
  %2373 = xor i64 %2372, -1
  %2374 = and i64 %2371, %2373
  %2375 = shl i64 %2374, %2370
  %2376 = trunc i64 %2375 to i8
  %2377 = or i8 %2369, %2376
  store i8 %2377, ptr %2361, align 1, !tbaa !48, !alias.scope !195, !noalias !77
  %2378 = icmp ule i64 %2359, %2360
  %2379 = select i1 %2378, i64 8, i64 %2370
  %2380 = zext i1 %2378 to i64
  %2381 = getelementptr inbounds i8, ptr %2361, i64 %2380
  %2382 = icmp slt i64 %2363, 1
  br i1 %2382, label %2383, label %2358, !llvm.loop !75

2383:                                             ; preds = %2368
  store i64 %2379, ptr %2258, align 8, !tbaa !69, !noalias !194
  br label %2384

2384:                                             ; preds = %2383, %2356
  %2385 = phi i64 [ %2357, %2356 ], [ %2379, %2383 ]
  %2386 = phi ptr [ %2347, %2356 ], [ %2381, %2383 ]
  %2387 = getelementptr inbounds %struct._PixelPacket, ptr %2265, i64 1
  %2388 = getelementptr inbounds i8, ptr %2386, i64 %2262
  %2389 = add nuw nsw i64 %2266, 1
  %2390 = icmp eq i64 %2389, %164
  br i1 %2390, label %17787, label %2263, !llvm.loop !196

2391:                                             ; preds = %256, %256
  tail call void @llvm.experimental.noalias.scope.decl(metadata !197)
  tail call void @llvm.experimental.noalias.scope.decl(metadata !200)
  %2392 = load i64, ptr %2, align 8, !tbaa !45, !noalias !202
  switch i64 %2392, label %3912 [
    i64 8, label %2393
    i64 10, label %2433
    i64 16, label %3102
    i64 32, label %3469
    i64 64, label %3716
  ]

2393:                                             ; preds = %2391
  %2394 = icmp sgt i64 %164, 0
  br i1 %2394, label %2395, label %17787

2395:                                             ; preds = %2393
  %2396 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %2397 = load i64, ptr %2396, align 8, !tbaa !47, !noalias !202
  br label %2398

2398:                                             ; preds = %2398, %2395
  %2399 = phi ptr [ %166, %2395 ], [ %2429, %2398 ]
  %2400 = phi ptr [ %88, %2395 ], [ %2430, %2398 ]
  %2401 = phi i64 [ 0, %2395 ], [ %2431, %2398 ]
  %2402 = getelementptr inbounds i8, ptr %2400, i64 2
  %2403 = load <2 x i16>, ptr %2399, align 2, !tbaa !37, !alias.scope !197, !noalias !200
  %2404 = zext <2 x i16> %2403 to <2 x i64>
  %2405 = add nuw nsw <2 x i64> %2404, <i64 128, i64 128>
  %2406 = lshr <2 x i64> %2405, <i64 8, i64 8>
  %2407 = sub nsw <2 x i64> %2405, %2406
  %2408 = lshr <2 x i64> %2407, <i64 8, i64 8>
  %2409 = trunc <2 x i64> %2408 to <2 x i8>
  store <2 x i8> %2409, ptr %2400, align 1, !tbaa !48, !alias.scope !200, !noalias !197
  %2410 = getelementptr inbounds %struct._PixelPacket, ptr %2399, i64 0, i32 2
  %2411 = load i16, ptr %2410, align 2, !tbaa !29, !alias.scope !197, !noalias !200
  %2412 = zext i16 %2411 to i64
  %2413 = add nuw nsw i64 %2412, 128
  %2414 = lshr i64 %2413, 8
  %2415 = sub nsw i64 %2413, %2414
  %2416 = lshr i64 %2415, 8
  %2417 = trunc i64 %2416 to i8
  %2418 = getelementptr inbounds i8, ptr %2400, i64 3
  store i8 %2417, ptr %2402, align 1, !tbaa !48, !alias.scope !200, !noalias !197
  %2419 = getelementptr inbounds %struct._PixelPacket, ptr %2399, i64 0, i32 3
  %2420 = load i16, ptr %2419, align 2, !tbaa !28, !alias.scope !197, !noalias !200
  %2421 = xor i16 %2420, -1
  %2422 = zext i16 %2421 to i64
  %2423 = add nuw nsw i64 %2422, 128
  %2424 = lshr i64 %2423, 8
  %2425 = sub nsw i64 %2423, %2424
  %2426 = lshr i64 %2425, 8
  %2427 = trunc i64 %2426 to i8
  %2428 = getelementptr inbounds i8, ptr %2400, i64 4
  store i8 %2427, ptr %2418, align 1, !tbaa !48, !alias.scope !200, !noalias !197
  %2429 = getelementptr inbounds %struct._PixelPacket, ptr %2399, i64 1
  %2430 = getelementptr inbounds i8, ptr %2428, i64 %2397
  %2431 = add nuw nsw i64 %2401, 1
  %2432 = icmp eq i64 %2431, %164
  br i1 %2432, label %17787, label %2398, !llvm.loop !203

2433:                                             ; preds = %2391
  %2434 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 8
  %2435 = load i32, ptr %2434, align 4, !tbaa !84, !noalias !202
  %2436 = icmp eq i32 %2435, 0
  br i1 %2436, label %2437, label %2677

2437:                                             ; preds = %2433
  %2438 = icmp sgt i64 %164, 0
  br i1 %2438, label %2439, label %17787

2439:                                             ; preds = %2437
  %2440 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %2441 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %2442 = load i64, ptr %2441, align 8, !tbaa !47, !noalias !202
  br label %2443

2443:                                             ; preds = %2669, %2439
  %2444 = phi ptr [ %166, %2439 ], [ %2673, %2669 ]
  %2445 = phi ptr [ %88, %2439 ], [ %2674, %2669 ]
  %2446 = phi i64 [ 0, %2439 ], [ %2672, %2669 ]
  %2447 = phi i32 [ 0, %2439 ], [ %2670, %2669 ]
  %2448 = phi i64 [ 0, %2439 ], [ %2675, %2669 ]
  %2449 = getelementptr inbounds %struct._PixelPacket, ptr %2444, i64 0, i32 3
  %2450 = getelementptr inbounds %struct._PixelPacket, ptr %2444, i64 0, i32 1
  %2451 = getelementptr inbounds %struct._PixelPacket, ptr %2444, i64 0, i32 2
  %2452 = load i16, ptr %2451, align 2, !tbaa !29, !alias.scope !197, !noalias !200
  %2453 = srem i64 %2446, 3
  switch i64 %2453, label %2503 [
    i64 0, label %2454
    i64 1, label %2463
    i64 2, label %2472
  ]

2454:                                             ; preds = %2443
  %2455 = uitofp i16 %2452 to float
  %2456 = fmul fast float %2455, 0x3F8FF82000000000
  %2457 = fpext float %2456 to double
  %2458 = fadd fast double %2457, 5.000000e-01
  %2459 = fptoui double %2458 to i64
  %2460 = trunc i64 %2459 to i32
  %2461 = shl i32 %2460, 22
  %2462 = or i32 %2461, %2447
  br label %2503

2463:                                             ; preds = %2443
  %2464 = uitofp i16 %2452 to float
  %2465 = fmul fast float %2464, 0x3F8FF82000000000
  %2466 = fpext float %2465 to double
  %2467 = fadd fast double %2466, 5.000000e-01
  %2468 = fptoui double %2467 to i64
  %2469 = trunc i64 %2468 to i32
  %2470 = shl i32 %2469, 12
  %2471 = or i32 %2470, %2447
  br label %2503

2472:                                             ; preds = %2443
  %2473 = uitofp i16 %2452 to float
  %2474 = fmul fast float %2473, 0x3F8FF82000000000
  %2475 = fpext float %2474 to double
  %2476 = fadd fast double %2475, 5.000000e-01
  %2477 = fptoui double %2476 to i64
  %2478 = trunc i64 %2477 to i32
  %2479 = shl i32 %2478, 2
  %2480 = or i32 %2479, %2447
  %2481 = load i32, ptr %2440, align 8, !tbaa !51, !noalias !202
  %2482 = icmp eq i32 %2481, 1
  %2483 = lshr i32 %2480, 16
  br i1 %2482, label %2484, label %2487

2484:                                             ; preds = %2472
  %2485 = lshr i32 %2480, 8
  %2486 = lshr i32 %2480, 24
  br label %2490

2487:                                             ; preds = %2472
  %2488 = lshr i32 %2480, 24
  %2489 = lshr i32 %2480, 8
  br label %2490

2490:                                             ; preds = %2487, %2484
  %2491 = phi i32 [ %2480, %2484 ], [ %2488, %2487 ]
  %2492 = phi i32 [ %2485, %2484 ], [ %2483, %2487 ]
  %2493 = phi i32 [ %2483, %2484 ], [ %2489, %2487 ]
  %2494 = phi i32 [ %2486, %2484 ], [ %2480, %2487 ]
  %2495 = trunc i32 %2494 to i8
  %2496 = trunc i32 %2493 to i8
  %2497 = trunc i32 %2492 to i8
  %2498 = trunc i32 %2491 to i8
  store i8 %2498, ptr %2445, align 1, !alias.scope !200, !noalias !197
  %2499 = getelementptr inbounds i8, ptr %2445, i64 1
  store i8 %2497, ptr %2499, align 1, !alias.scope !200, !noalias !197
  %2500 = getelementptr inbounds i8, ptr %2445, i64 2
  store i8 %2496, ptr %2500, align 1, !alias.scope !200, !noalias !197
  %2501 = getelementptr inbounds i8, ptr %2445, i64 3
  store i8 %2495, ptr %2501, align 1, !alias.scope !200, !noalias !197
  %2502 = getelementptr inbounds i8, ptr %2445, i64 4
  br label %2503

2503:                                             ; preds = %2490, %2463, %2454, %2443
  %2504 = phi i32 [ %2447, %2443 ], [ 0, %2490 ], [ %2471, %2463 ], [ %2462, %2454 ]
  %2505 = phi ptr [ %2445, %2443 ], [ %2502, %2490 ], [ %2445, %2463 ], [ %2445, %2454 ]
  %2506 = or i64 %2446, 1
  %2507 = load i16, ptr %2450, align 2, !tbaa !30, !alias.scope !197, !noalias !200
  %2508 = srem i64 %2506, 3
  switch i64 %2508, label %2558 [
    i64 0, label %2549
    i64 1, label %2540
    i64 2, label %2509
  ]

2509:                                             ; preds = %2503
  %2510 = uitofp i16 %2507 to float
  %2511 = fmul fast float %2510, 0x3F8FF82000000000
  %2512 = fpext float %2511 to double
  %2513 = fadd fast double %2512, 5.000000e-01
  %2514 = fptoui double %2513 to i64
  %2515 = trunc i64 %2514 to i32
  %2516 = shl i32 %2515, 2
  %2517 = or i32 %2516, %2504
  %2518 = load i32, ptr %2440, align 8, !tbaa !51, !noalias !202
  %2519 = icmp eq i32 %2518, 1
  %2520 = lshr i32 %2517, 16
  br i1 %2519, label %2524, label %2521

2521:                                             ; preds = %2509
  %2522 = lshr i32 %2517, 24
  %2523 = lshr i32 %2517, 8
  br label %2527

2524:                                             ; preds = %2509
  %2525 = lshr i32 %2517, 8
  %2526 = lshr i32 %2517, 24
  br label %2527

2527:                                             ; preds = %2524, %2521
  %2528 = phi i32 [ %2517, %2524 ], [ %2522, %2521 ]
  %2529 = phi i32 [ %2525, %2524 ], [ %2520, %2521 ]
  %2530 = phi i32 [ %2520, %2524 ], [ %2523, %2521 ]
  %2531 = phi i32 [ %2526, %2524 ], [ %2517, %2521 ]
  %2532 = trunc i32 %2531 to i8
  %2533 = trunc i32 %2530 to i8
  %2534 = trunc i32 %2529 to i8
  %2535 = trunc i32 %2528 to i8
  store i8 %2535, ptr %2505, align 1, !alias.scope !200, !noalias !197
  %2536 = getelementptr inbounds i8, ptr %2505, i64 1
  store i8 %2534, ptr %2536, align 1, !alias.scope !200, !noalias !197
  %2537 = getelementptr inbounds i8, ptr %2505, i64 2
  store i8 %2533, ptr %2537, align 1, !alias.scope !200, !noalias !197
  %2538 = getelementptr inbounds i8, ptr %2505, i64 3
  store i8 %2532, ptr %2538, align 1, !alias.scope !200, !noalias !197
  %2539 = getelementptr inbounds i8, ptr %2505, i64 4
  br label %2558

2540:                                             ; preds = %2503
  %2541 = uitofp i16 %2507 to float
  %2542 = fmul fast float %2541, 0x3F8FF82000000000
  %2543 = fpext float %2542 to double
  %2544 = fadd fast double %2543, 5.000000e-01
  %2545 = fptoui double %2544 to i64
  %2546 = trunc i64 %2545 to i32
  %2547 = shl i32 %2546, 12
  %2548 = or i32 %2547, %2504
  br label %2558

2549:                                             ; preds = %2503
  %2550 = uitofp i16 %2507 to float
  %2551 = fmul fast float %2550, 0x3F8FF82000000000
  %2552 = fpext float %2551 to double
  %2553 = fadd fast double %2552, 5.000000e-01
  %2554 = fptoui double %2553 to i64
  %2555 = trunc i64 %2554 to i32
  %2556 = shl i32 %2555, 22
  %2557 = or i32 %2556, %2504
  br label %2558

2558:                                             ; preds = %2549, %2540, %2527, %2503
  %2559 = phi i32 [ %2504, %2503 ], [ 0, %2527 ], [ %2548, %2540 ], [ %2557, %2549 ]
  %2560 = phi ptr [ %2505, %2503 ], [ %2539, %2527 ], [ %2505, %2540 ], [ %2505, %2549 ]
  %2561 = or i64 %2446, 2
  %2562 = load i16, ptr %2444, align 2, !tbaa !31, !alias.scope !197, !noalias !200
  %2563 = srem i64 %2561, 3
  switch i64 %2563, label %2613 [
    i64 0, label %2604
    i64 1, label %2595
    i64 2, label %2564
  ]

2564:                                             ; preds = %2558
  %2565 = uitofp i16 %2562 to float
  %2566 = fmul fast float %2565, 0x3F8FF82000000000
  %2567 = fpext float %2566 to double
  %2568 = fadd fast double %2567, 5.000000e-01
  %2569 = fptoui double %2568 to i64
  %2570 = trunc i64 %2569 to i32
  %2571 = shl i32 %2570, 2
  %2572 = or i32 %2571, %2559
  %2573 = load i32, ptr %2440, align 8, !tbaa !51, !noalias !202
  %2574 = icmp eq i32 %2573, 1
  %2575 = lshr i32 %2572, 16
  br i1 %2574, label %2579, label %2576

2576:                                             ; preds = %2564
  %2577 = lshr i32 %2572, 24
  %2578 = lshr i32 %2572, 8
  br label %2582

2579:                                             ; preds = %2564
  %2580 = lshr i32 %2572, 8
  %2581 = lshr i32 %2572, 24
  br label %2582

2582:                                             ; preds = %2579, %2576
  %2583 = phi i32 [ %2572, %2579 ], [ %2577, %2576 ]
  %2584 = phi i32 [ %2580, %2579 ], [ %2575, %2576 ]
  %2585 = phi i32 [ %2575, %2579 ], [ %2578, %2576 ]
  %2586 = phi i32 [ %2581, %2579 ], [ %2572, %2576 ]
  %2587 = trunc i32 %2586 to i8
  %2588 = trunc i32 %2585 to i8
  %2589 = trunc i32 %2584 to i8
  %2590 = trunc i32 %2583 to i8
  store i8 %2590, ptr %2560, align 1, !alias.scope !200, !noalias !197
  %2591 = getelementptr inbounds i8, ptr %2560, i64 1
  store i8 %2589, ptr %2591, align 1, !alias.scope !200, !noalias !197
  %2592 = getelementptr inbounds i8, ptr %2560, i64 2
  store i8 %2588, ptr %2592, align 1, !alias.scope !200, !noalias !197
  %2593 = getelementptr inbounds i8, ptr %2560, i64 3
  store i8 %2587, ptr %2593, align 1, !alias.scope !200, !noalias !197
  %2594 = getelementptr inbounds i8, ptr %2560, i64 4
  br label %2613

2595:                                             ; preds = %2558
  %2596 = uitofp i16 %2562 to float
  %2597 = fmul fast float %2596, 0x3F8FF82000000000
  %2598 = fpext float %2597 to double
  %2599 = fadd fast double %2598, 5.000000e-01
  %2600 = fptoui double %2599 to i64
  %2601 = trunc i64 %2600 to i32
  %2602 = shl i32 %2601, 12
  %2603 = or i32 %2602, %2559
  br label %2613

2604:                                             ; preds = %2558
  %2605 = uitofp i16 %2562 to float
  %2606 = fmul fast float %2605, 0x3F8FF82000000000
  %2607 = fpext float %2606 to double
  %2608 = fadd fast double %2607, 5.000000e-01
  %2609 = fptoui double %2608 to i64
  %2610 = trunc i64 %2609 to i32
  %2611 = shl i32 %2610, 22
  %2612 = or i32 %2611, %2559
  br label %2613

2613:                                             ; preds = %2604, %2595, %2582, %2558
  %2614 = phi i32 [ %2559, %2558 ], [ 0, %2582 ], [ %2603, %2595 ], [ %2612, %2604 ]
  %2615 = phi ptr [ %2560, %2558 ], [ %2594, %2582 ], [ %2560, %2595 ], [ %2560, %2604 ]
  %2616 = or i64 %2446, 3
  %2617 = load i16, ptr %2449, align 2, !tbaa !28, !alias.scope !197, !noalias !200
  %2618 = xor i16 %2617, -1
  %2619 = srem i64 %2616, 3
  switch i64 %2619, label %2669 [
    i64 0, label %2660
    i64 1, label %2651
    i64 2, label %2620
  ]

2620:                                             ; preds = %2613
  %2621 = uitofp i16 %2618 to float
  %2622 = fmul fast float %2621, 0x3F8FF82000000000
  %2623 = fpext float %2622 to double
  %2624 = fadd fast double %2623, 5.000000e-01
  %2625 = fptoui double %2624 to i64
  %2626 = trunc i64 %2625 to i32
  %2627 = shl i32 %2626, 2
  %2628 = or i32 %2627, %2614
  %2629 = load i32, ptr %2440, align 8, !tbaa !51, !noalias !202
  %2630 = icmp eq i32 %2629, 1
  %2631 = lshr i32 %2628, 16
  br i1 %2630, label %2635, label %2632

2632:                                             ; preds = %2620
  %2633 = lshr i32 %2628, 24
  %2634 = lshr i32 %2628, 8
  br label %2638

2635:                                             ; preds = %2620
  %2636 = lshr i32 %2628, 8
  %2637 = lshr i32 %2628, 24
  br label %2638

2638:                                             ; preds = %2635, %2632
  %2639 = phi i32 [ %2628, %2635 ], [ %2633, %2632 ]
  %2640 = phi i32 [ %2636, %2635 ], [ %2631, %2632 ]
  %2641 = phi i32 [ %2631, %2635 ], [ %2634, %2632 ]
  %2642 = phi i32 [ %2637, %2635 ], [ %2628, %2632 ]
  %2643 = trunc i32 %2642 to i8
  %2644 = trunc i32 %2641 to i8
  %2645 = trunc i32 %2640 to i8
  %2646 = trunc i32 %2639 to i8
  store i8 %2646, ptr %2615, align 1, !alias.scope !200, !noalias !197
  %2647 = getelementptr inbounds i8, ptr %2615, i64 1
  store i8 %2645, ptr %2647, align 1, !alias.scope !200, !noalias !197
  %2648 = getelementptr inbounds i8, ptr %2615, i64 2
  store i8 %2644, ptr %2648, align 1, !alias.scope !200, !noalias !197
  %2649 = getelementptr inbounds i8, ptr %2615, i64 3
  store i8 %2643, ptr %2649, align 1, !alias.scope !200, !noalias !197
  %2650 = getelementptr inbounds i8, ptr %2615, i64 4
  br label %2669

2651:                                             ; preds = %2613
  %2652 = uitofp i16 %2618 to float
  %2653 = fmul fast float %2652, 0x3F8FF82000000000
  %2654 = fpext float %2653 to double
  %2655 = fadd fast double %2654, 5.000000e-01
  %2656 = fptoui double %2655 to i64
  %2657 = trunc i64 %2656 to i32
  %2658 = shl i32 %2657, 12
  %2659 = or i32 %2658, %2614
  br label %2669

2660:                                             ; preds = %2613
  %2661 = uitofp i16 %2618 to float
  %2662 = fmul fast float %2661, 0x3F8FF82000000000
  %2663 = fpext float %2662 to double
  %2664 = fadd fast double %2663, 5.000000e-01
  %2665 = fptoui double %2664 to i64
  %2666 = trunc i64 %2665 to i32
  %2667 = shl i32 %2666, 22
  %2668 = or i32 %2667, %2614
  br label %2669

2669:                                             ; preds = %2660, %2651, %2638, %2613
  %2670 = phi i32 [ %2614, %2613 ], [ 0, %2638 ], [ %2659, %2651 ], [ %2668, %2660 ]
  %2671 = phi ptr [ %2615, %2613 ], [ %2650, %2638 ], [ %2615, %2651 ], [ %2615, %2660 ]
  %2672 = add i64 %2446, 4
  %2673 = getelementptr inbounds %struct._PixelPacket, ptr %2444, i64 1
  %2674 = getelementptr inbounds i8, ptr %2671, i64 %2442
  %2675 = add nuw nsw i64 %2448, 1
  %2676 = icmp eq i64 %2675, %164
  br i1 %2676, label %17787, label %2443, !llvm.loop !204

2677:                                             ; preds = %2433
  %2678 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 1
  %2679 = load i64, ptr %2678, align 8, !tbaa !86, !noalias !202
  %2680 = icmp eq i64 %2679, 32
  %2681 = icmp sgt i64 %164, 0
  br i1 %2680, label %2688, label %2682

2682:                                             ; preds = %2677
  br i1 %2681, label %2683, label %17787

2683:                                             ; preds = %2682
  %2684 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 14, i32 2
  %2685 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %2686 = load i64, ptr %2684, align 8, !tbaa !69, !noalias !202
  %2687 = load i64, ptr %2685, align 8, !tbaa !47, !noalias !202
  br label %2947

2688:                                             ; preds = %2677
  br i1 %2681, label %2689, label %17787

2689:                                             ; preds = %2688
  %2690 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 14, i32 2
  %2691 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 14, i32 3
  %2692 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 14, i32 1
  %2693 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %2694 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %2695 = load i64, ptr %2690, align 8, !tbaa !69, !noalias !202
  %2696 = load i64, ptr %2694, align 8, !tbaa !47, !noalias !202
  %2697 = load ptr, ptr %2691, align 8, !tbaa !87, !noalias !202
  br label %2698

2698:                                             ; preds = %2942, %2689
  %2699 = phi i64 [ %2695, %2689 ], [ %2939, %2942 ]
  %2700 = phi ptr [ %166, %2689 ], [ %2943, %2942 ]
  %2701 = phi ptr [ %88, %2689 ], [ %2944, %2942 ]
  %2702 = phi i64 [ 0, %2689 ], [ %2945, %2942 ]
  %2703 = getelementptr inbounds %struct._PixelPacket, ptr %2700, i64 0, i32 2
  %2704 = load i16, ptr %2703, align 2, !tbaa !29, !alias.scope !197, !noalias !200
  %2705 = uitofp i16 %2704 to float
  %2706 = fmul fast float %2705, 0x3F8FF82000000000
  %2707 = fpext float %2706 to double
  %2708 = fadd fast double %2707, 5.000000e-01
  %2709 = fptoui double %2708 to i64
  %2710 = and i64 %2709, 4294967295
  tail call void @llvm.experimental.noalias.scope.decl(metadata !205)
  %2711 = icmp eq i64 %2699, 0
  br i1 %2711, label %2712, label %2713

2712:                                             ; preds = %2698
  store i64 32, ptr %2690, align 8, !tbaa !69, !noalias !208
  br label %2713

2713:                                             ; preds = %2698, %2712
  %2714 = phi i64 [ 32, %2712 ], [ %2699, %2698 ]
  %2715 = load i32, ptr %2692, align 8, !tbaa !91, !noalias !208
  br label %2716

2716:                                             ; preds = %2758, %2713
  %2717 = phi i32 [ %2715, %2713 ], [ %2759, %2758 ]
  %2718 = phi i64 [ %2714, %2713 ], [ %2760, %2758 ]
  %2719 = phi i64 [ 10, %2713 ], [ %2732, %2758 ]
  %2720 = phi ptr [ %2701, %2713 ], [ %2761, %2758 ]
  %2721 = tail call i64 @llvm.umin.i64(i64 %2719, i64 %2718)
  %2722 = sub nsw i64 10, %2719
  %2723 = lshr i64 %2710, %2722
  %2724 = getelementptr inbounds i32, ptr %2697, i64 %2721
  %2725 = load i32, ptr %2724, align 4, !tbaa !93, !noalias !205
  %2726 = zext i32 %2725 to i64
  %2727 = and i64 %2723, %2726
  %2728 = sub i64 32, %2718
  %2729 = shl i64 %2727, %2728
  %2730 = trunc i64 %2729 to i32
  %2731 = or i32 %2717, %2730
  store i32 %2731, ptr %2692, align 8, !tbaa !91, !noalias !208
  %2732 = sub nsw i64 %2719, %2721
  %2733 = sub i64 %2718, %2721
  %2734 = icmp ugt i64 %2718, %2719
  br i1 %2734, label %2758, label %2735

2735:                                             ; preds = %2716
  %2736 = load i32, ptr %2693, align 8, !tbaa !51, !noalias !208
  %2737 = icmp eq i32 %2736, 1
  %2738 = lshr i32 %2731, 16
  br i1 %2737, label %2739, label %2742

2739:                                             ; preds = %2735
  %2740 = lshr i32 %2731, 8
  %2741 = lshr i32 %2731, 24
  br label %2745

2742:                                             ; preds = %2735
  %2743 = lshr i32 %2731, 24
  %2744 = lshr i32 %2731, 8
  br label %2745

2745:                                             ; preds = %2742, %2739
  %2746 = phi i32 [ %2731, %2739 ], [ %2743, %2742 ]
  %2747 = phi i32 [ %2740, %2739 ], [ %2738, %2742 ]
  %2748 = phi i32 [ %2738, %2739 ], [ %2744, %2742 ]
  %2749 = phi i32 [ %2741, %2739 ], [ %2731, %2742 ]
  %2750 = trunc i32 %2749 to i8
  %2751 = trunc i32 %2748 to i8
  %2752 = trunc i32 %2747 to i8
  %2753 = trunc i32 %2746 to i8
  store i8 %2753, ptr %2720, align 1, !alias.scope !209, !noalias !197
  %2754 = getelementptr inbounds i8, ptr %2720, i64 1
  store i8 %2752, ptr %2754, align 1, !alias.scope !209, !noalias !197
  %2755 = getelementptr inbounds i8, ptr %2720, i64 2
  store i8 %2751, ptr %2755, align 1, !alias.scope !209, !noalias !197
  %2756 = getelementptr inbounds i8, ptr %2720, i64 3
  store i8 %2750, ptr %2756, align 1, !alias.scope !209, !noalias !197
  %2757 = getelementptr inbounds i8, ptr %2720, i64 4
  store i32 0, ptr %2692, align 8, !tbaa !91, !noalias !208
  br label %2758

2758:                                             ; preds = %2745, %2716
  %2759 = phi i32 [ 0, %2745 ], [ %2731, %2716 ]
  %2760 = phi i64 [ 32, %2745 ], [ %2733, %2716 ]
  %2761 = phi ptr [ %2757, %2745 ], [ %2720, %2716 ]
  %2762 = icmp sgt i64 %2732, 0
  br i1 %2762, label %2716, label %2763, !llvm.loop !95

2763:                                             ; preds = %2758
  %2764 = getelementptr inbounds %struct._PixelPacket, ptr %2700, i64 0, i32 1
  %2765 = load i16, ptr %2764, align 2, !tbaa !30, !alias.scope !197, !noalias !200
  %2766 = uitofp i16 %2765 to float
  %2767 = fmul fast float %2766, 0x3F8FF82000000000
  %2768 = fpext float %2767 to double
  %2769 = fadd fast double %2768, 5.000000e-01
  %2770 = fptoui double %2769 to i64
  %2771 = and i64 %2770, 4294967295
  tail call void @llvm.experimental.noalias.scope.decl(metadata !210)
  %2772 = icmp eq i64 %2760, 0
  %2773 = select i1 %2772, i64 32, i64 %2760
  %2774 = load i32, ptr %2692, align 8, !tbaa !91, !noalias !213
  br label %2775

2775:                                             ; preds = %2817, %2763
  %2776 = phi i32 [ %2774, %2763 ], [ %2818, %2817 ]
  %2777 = phi i64 [ %2773, %2763 ], [ %2819, %2817 ]
  %2778 = phi i64 [ 10, %2763 ], [ %2791, %2817 ]
  %2779 = phi ptr [ %2761, %2763 ], [ %2820, %2817 ]
  %2780 = tail call i64 @llvm.umin.i64(i64 %2778, i64 %2777)
  %2781 = sub nsw i64 10, %2778
  %2782 = lshr i64 %2771, %2781
  %2783 = getelementptr inbounds i32, ptr %2697, i64 %2780
  %2784 = load i32, ptr %2783, align 4, !tbaa !93, !noalias !210
  %2785 = zext i32 %2784 to i64
  %2786 = and i64 %2782, %2785
  %2787 = sub i64 32, %2777
  %2788 = shl i64 %2786, %2787
  %2789 = trunc i64 %2788 to i32
  %2790 = or i32 %2776, %2789
  store i32 %2790, ptr %2692, align 8, !tbaa !91, !noalias !213
  %2791 = sub nsw i64 %2778, %2780
  %2792 = sub i64 %2777, %2780
  %2793 = icmp ugt i64 %2777, %2778
  br i1 %2793, label %2817, label %2794

2794:                                             ; preds = %2775
  %2795 = load i32, ptr %2693, align 8, !tbaa !51, !noalias !213
  %2796 = icmp eq i32 %2795, 1
  %2797 = lshr i32 %2790, 16
  br i1 %2796, label %2798, label %2801

2798:                                             ; preds = %2794
  %2799 = lshr i32 %2790, 8
  %2800 = lshr i32 %2790, 24
  br label %2804

2801:                                             ; preds = %2794
  %2802 = lshr i32 %2790, 24
  %2803 = lshr i32 %2790, 8
  br label %2804

2804:                                             ; preds = %2801, %2798
  %2805 = phi i32 [ %2790, %2798 ], [ %2802, %2801 ]
  %2806 = phi i32 [ %2799, %2798 ], [ %2797, %2801 ]
  %2807 = phi i32 [ %2797, %2798 ], [ %2803, %2801 ]
  %2808 = phi i32 [ %2800, %2798 ], [ %2790, %2801 ]
  %2809 = trunc i32 %2808 to i8
  %2810 = trunc i32 %2807 to i8
  %2811 = trunc i32 %2806 to i8
  %2812 = trunc i32 %2805 to i8
  store i8 %2812, ptr %2779, align 1, !alias.scope !214, !noalias !197
  %2813 = getelementptr inbounds i8, ptr %2779, i64 1
  store i8 %2811, ptr %2813, align 1, !alias.scope !214, !noalias !197
  %2814 = getelementptr inbounds i8, ptr %2779, i64 2
  store i8 %2810, ptr %2814, align 1, !alias.scope !214, !noalias !197
  %2815 = getelementptr inbounds i8, ptr %2779, i64 3
  store i8 %2809, ptr %2815, align 1, !alias.scope !214, !noalias !197
  %2816 = getelementptr inbounds i8, ptr %2779, i64 4
  store i32 0, ptr %2692, align 8, !tbaa !91, !noalias !213
  br label %2817

2817:                                             ; preds = %2804, %2775
  %2818 = phi i32 [ 0, %2804 ], [ %2790, %2775 ]
  %2819 = phi i64 [ 32, %2804 ], [ %2792, %2775 ]
  %2820 = phi ptr [ %2816, %2804 ], [ %2779, %2775 ]
  %2821 = icmp sgt i64 %2791, 0
  br i1 %2821, label %2775, label %2822, !llvm.loop !95

2822:                                             ; preds = %2817
  %2823 = load i16, ptr %2700, align 2, !tbaa !31, !alias.scope !197, !noalias !200
  %2824 = uitofp i16 %2823 to float
  %2825 = fmul fast float %2824, 0x3F8FF82000000000
  %2826 = fpext float %2825 to double
  %2827 = fadd fast double %2826, 5.000000e-01
  %2828 = fptoui double %2827 to i64
  %2829 = and i64 %2828, 4294967295
  tail call void @llvm.experimental.noalias.scope.decl(metadata !215)
  %2830 = icmp eq i64 %2819, 0
  br i1 %2830, label %2831, label %2832

2831:                                             ; preds = %2822
  store i64 32, ptr %2690, align 8, !tbaa !69, !noalias !218
  br label %2832

2832:                                             ; preds = %2822, %2831
  %2833 = phi i64 [ 32, %2831 ], [ %2819, %2822 ]
  %2834 = load i32, ptr %2692, align 8, !tbaa !91, !noalias !218
  br label %2835

2835:                                             ; preds = %2877, %2832
  %2836 = phi i32 [ %2834, %2832 ], [ %2878, %2877 ]
  %2837 = phi i64 [ %2833, %2832 ], [ %2879, %2877 ]
  %2838 = phi i64 [ 10, %2832 ], [ %2851, %2877 ]
  %2839 = phi ptr [ %2820, %2832 ], [ %2880, %2877 ]
  %2840 = tail call i64 @llvm.umin.i64(i64 %2838, i64 %2837)
  %2841 = sub nsw i64 10, %2838
  %2842 = lshr i64 %2829, %2841
  %2843 = getelementptr inbounds i32, ptr %2697, i64 %2840
  %2844 = load i32, ptr %2843, align 4, !tbaa !93, !noalias !215
  %2845 = zext i32 %2844 to i64
  %2846 = and i64 %2842, %2845
  %2847 = sub i64 32, %2837
  %2848 = shl i64 %2846, %2847
  %2849 = trunc i64 %2848 to i32
  %2850 = or i32 %2836, %2849
  store i32 %2850, ptr %2692, align 8, !tbaa !91, !noalias !218
  %2851 = sub nsw i64 %2838, %2840
  %2852 = sub i64 %2837, %2840
  %2853 = icmp ugt i64 %2837, %2838
  br i1 %2853, label %2877, label %2854

2854:                                             ; preds = %2835
  %2855 = load i32, ptr %2693, align 8, !tbaa !51, !noalias !218
  %2856 = icmp eq i32 %2855, 1
  %2857 = lshr i32 %2850, 16
  br i1 %2856, label %2858, label %2861

2858:                                             ; preds = %2854
  %2859 = lshr i32 %2850, 8
  %2860 = lshr i32 %2850, 24
  br label %2864

2861:                                             ; preds = %2854
  %2862 = lshr i32 %2850, 24
  %2863 = lshr i32 %2850, 8
  br label %2864

2864:                                             ; preds = %2861, %2858
  %2865 = phi i32 [ %2850, %2858 ], [ %2862, %2861 ]
  %2866 = phi i32 [ %2859, %2858 ], [ %2857, %2861 ]
  %2867 = phi i32 [ %2857, %2858 ], [ %2863, %2861 ]
  %2868 = phi i32 [ %2860, %2858 ], [ %2850, %2861 ]
  %2869 = trunc i32 %2868 to i8
  %2870 = trunc i32 %2867 to i8
  %2871 = trunc i32 %2866 to i8
  %2872 = trunc i32 %2865 to i8
  store i8 %2872, ptr %2839, align 1, !alias.scope !219, !noalias !197
  %2873 = getelementptr inbounds i8, ptr %2839, i64 1
  store i8 %2871, ptr %2873, align 1, !alias.scope !219, !noalias !197
  %2874 = getelementptr inbounds i8, ptr %2839, i64 2
  store i8 %2870, ptr %2874, align 1, !alias.scope !219, !noalias !197
  %2875 = getelementptr inbounds i8, ptr %2839, i64 3
  store i8 %2869, ptr %2875, align 1, !alias.scope !219, !noalias !197
  %2876 = getelementptr inbounds i8, ptr %2839, i64 4
  store i32 0, ptr %2692, align 8, !tbaa !91, !noalias !218
  br label %2877

2877:                                             ; preds = %2864, %2835
  %2878 = phi i32 [ 0, %2864 ], [ %2850, %2835 ]
  %2879 = phi i64 [ 32, %2864 ], [ %2852, %2835 ]
  %2880 = phi ptr [ %2876, %2864 ], [ %2839, %2835 ]
  %2881 = icmp sgt i64 %2851, 0
  br i1 %2881, label %2835, label %2882, !llvm.loop !95

2882:                                             ; preds = %2877
  %2883 = getelementptr inbounds %struct._PixelPacket, ptr %2700, i64 0, i32 3
  %2884 = load i16, ptr %2883, align 2, !tbaa !28, !alias.scope !197, !noalias !200
  %2885 = xor i16 %2884, -1
  %2886 = uitofp i16 %2885 to float
  %2887 = fmul fast float %2886, 0x3F8FF82000000000
  %2888 = fpext float %2887 to double
  %2889 = fadd fast double %2888, 5.000000e-01
  %2890 = fptoui double %2889 to i64
  %2891 = and i64 %2890, 4294967295
  tail call void @llvm.experimental.noalias.scope.decl(metadata !220)
  %2892 = icmp eq i64 %2879, 0
  %2893 = select i1 %2892, i64 32, i64 %2879
  %2894 = load i32, ptr %2692, align 8, !tbaa !91, !noalias !223
  br label %2895

2895:                                             ; preds = %2937, %2882
  %2896 = phi i32 [ %2894, %2882 ], [ %2938, %2937 ]
  %2897 = phi i64 [ %2893, %2882 ], [ %2939, %2937 ]
  %2898 = phi i64 [ 10, %2882 ], [ %2911, %2937 ]
  %2899 = phi ptr [ %2880, %2882 ], [ %2940, %2937 ]
  %2900 = tail call i64 @llvm.umin.i64(i64 %2898, i64 %2897)
  %2901 = sub nsw i64 10, %2898
  %2902 = lshr i64 %2891, %2901
  %2903 = getelementptr inbounds i32, ptr %2697, i64 %2900
  %2904 = load i32, ptr %2903, align 4, !tbaa !93, !noalias !220
  %2905 = zext i32 %2904 to i64
  %2906 = and i64 %2902, %2905
  %2907 = sub i64 32, %2897
  %2908 = shl i64 %2906, %2907
  %2909 = trunc i64 %2908 to i32
  %2910 = or i32 %2896, %2909
  store i32 %2910, ptr %2692, align 8, !tbaa !91, !noalias !223
  %2911 = sub nsw i64 %2898, %2900
  %2912 = sub i64 %2897, %2900
  %2913 = icmp ugt i64 %2897, %2898
  br i1 %2913, label %2937, label %2914

2914:                                             ; preds = %2895
  %2915 = load i32, ptr %2693, align 8, !tbaa !51, !noalias !223
  %2916 = icmp eq i32 %2915, 1
  %2917 = lshr i32 %2910, 16
  br i1 %2916, label %2918, label %2921

2918:                                             ; preds = %2914
  %2919 = lshr i32 %2910, 8
  %2920 = lshr i32 %2910, 24
  br label %2924

2921:                                             ; preds = %2914
  %2922 = lshr i32 %2910, 24
  %2923 = lshr i32 %2910, 8
  br label %2924

2924:                                             ; preds = %2921, %2918
  %2925 = phi i32 [ %2910, %2918 ], [ %2922, %2921 ]
  %2926 = phi i32 [ %2919, %2918 ], [ %2917, %2921 ]
  %2927 = phi i32 [ %2917, %2918 ], [ %2923, %2921 ]
  %2928 = phi i32 [ %2920, %2918 ], [ %2910, %2921 ]
  %2929 = trunc i32 %2928 to i8
  %2930 = trunc i32 %2927 to i8
  %2931 = trunc i32 %2926 to i8
  %2932 = trunc i32 %2925 to i8
  store i8 %2932, ptr %2899, align 1, !alias.scope !224, !noalias !197
  %2933 = getelementptr inbounds i8, ptr %2899, i64 1
  store i8 %2931, ptr %2933, align 1, !alias.scope !224, !noalias !197
  %2934 = getelementptr inbounds i8, ptr %2899, i64 2
  store i8 %2930, ptr %2934, align 1, !alias.scope !224, !noalias !197
  %2935 = getelementptr inbounds i8, ptr %2899, i64 3
  store i8 %2929, ptr %2935, align 1, !alias.scope !224, !noalias !197
  %2936 = getelementptr inbounds i8, ptr %2899, i64 4
  store i32 0, ptr %2692, align 8, !tbaa !91, !noalias !223
  br label %2937

2937:                                             ; preds = %2924, %2895
  %2938 = phi i32 [ 0, %2924 ], [ %2910, %2895 ]
  %2939 = phi i64 [ 32, %2924 ], [ %2912, %2895 ]
  %2940 = phi ptr [ %2936, %2924 ], [ %2899, %2895 ]
  %2941 = icmp sgt i64 %2911, 0
  br i1 %2941, label %2895, label %2942, !llvm.loop !95

2942:                                             ; preds = %2937
  store i64 %2939, ptr %2690, align 8, !tbaa !69, !noalias !223
  %2943 = getelementptr inbounds %struct._PixelPacket, ptr %2700, i64 1
  %2944 = getelementptr inbounds i8, ptr %2940, i64 %2696
  %2945 = add nuw nsw i64 %2702, 1
  %2946 = icmp eq i64 %2945, %164
  br i1 %2946, label %17787, label %2698, !llvm.loop !225

2947:                                             ; preds = %3097, %2683
  %2948 = phi i64 [ %2686, %2683 ], [ %3093, %3097 ]
  %2949 = phi ptr [ %166, %2683 ], [ %3098, %3097 ]
  %2950 = phi ptr [ %88, %2683 ], [ %3099, %3097 ]
  %2951 = phi i64 [ 0, %2683 ], [ %3100, %3097 ]
  %2952 = getelementptr inbounds %struct._PixelPacket, ptr %2949, i64 0, i32 2
  %2953 = load i16, ptr %2952, align 2, !tbaa !29, !alias.scope !197, !noalias !200
  %2954 = uitofp i16 %2953 to float
  %2955 = fmul fast float %2954, 0x3F8FF82000000000
  %2956 = fpext float %2955 to double
  %2957 = fadd fast double %2956, 5.000000e-01
  %2958 = fptoui double %2957 to i64
  %2959 = and i64 %2958, 4294967295
  tail call void @llvm.experimental.noalias.scope.decl(metadata !226)
  %2960 = icmp eq i64 %2948, 0
  br i1 %2960, label %2961, label %2962

2961:                                             ; preds = %2947
  store i64 8, ptr %2684, align 8, !tbaa !69, !noalias !229
  br label %2962

2962:                                             ; preds = %2947, %2961
  %2963 = phi i64 [ %2948, %2947 ], [ 8, %2961 ]
  br label %2964

2964:                                             ; preds = %2962, %2974
  %2965 = phi i64 [ %2985, %2974 ], [ %2963, %2962 ]
  %2966 = phi i64 [ %2970, %2974 ], [ 10, %2962 ]
  %2967 = phi ptr [ %2987, %2974 ], [ %2950, %2962 ]
  %2968 = tail call i64 @llvm.umin.i64(i64 %2966, i64 %2965)
  %2969 = sub nsw i64 %2966, %2968
  %2970 = tail call i64 @llvm.smax.i64(i64 %2969, i64 0)
  %2971 = icmp eq i64 %2965, 8
  br i1 %2971, label %2974, label %2972

2972:                                             ; preds = %2964
  %2973 = load i8, ptr %2967, align 1, !tbaa !48, !alias.scope !230, !noalias !197
  br label %2974

2974:                                             ; preds = %2972, %2964
  %2975 = phi i8 [ %2973, %2972 ], [ 0, %2964 ]
  %2976 = sub i64 %2965, %2968
  %2977 = lshr i64 %2959, %2970
  %2978 = shl nsw i64 -1, %2968
  %2979 = xor i64 %2978, -1
  %2980 = and i64 %2977, %2979
  %2981 = shl i64 %2980, %2976
  %2982 = trunc i64 %2981 to i8
  %2983 = or i8 %2975, %2982
  store i8 %2983, ptr %2967, align 1, !tbaa !48, !alias.scope !230, !noalias !197
  %2984 = icmp ule i64 %2965, %2966
  %2985 = select i1 %2984, i64 8, i64 %2976
  %2986 = zext i1 %2984 to i64
  %2987 = getelementptr inbounds i8, ptr %2967, i64 %2986
  %2988 = icmp slt i64 %2969, 1
  br i1 %2988, label %2989, label %2964, !llvm.loop !75

2989:                                             ; preds = %2974
  %2990 = getelementptr inbounds %struct._PixelPacket, ptr %2949, i64 0, i32 1
  %2991 = load i16, ptr %2990, align 2, !tbaa !30, !alias.scope !197, !noalias !200
  %2992 = uitofp i16 %2991 to float
  %2993 = fmul fast float %2992, 0x3F8FF82000000000
  %2994 = fpext float %2993 to double
  %2995 = fadd fast double %2994, 5.000000e-01
  %2996 = fptoui double %2995 to i64
  %2997 = and i64 %2996, 4294967295
  %2998 = icmp eq i64 %2985, 0
  %2999 = select i1 %2998, i64 8, i64 %2985
  br label %3000

3000:                                             ; preds = %2989, %3010
  %3001 = phi i64 [ %3021, %3010 ], [ %2999, %2989 ]
  %3002 = phi i64 [ %3006, %3010 ], [ 10, %2989 ]
  %3003 = phi ptr [ %3023, %3010 ], [ %2987, %2989 ]
  %3004 = tail call i64 @llvm.umin.i64(i64 %3002, i64 %3001)
  %3005 = sub nsw i64 %3002, %3004
  %3006 = tail call i64 @llvm.smax.i64(i64 %3005, i64 0)
  %3007 = icmp eq i64 %3001, 8
  br i1 %3007, label %3010, label %3008

3008:                                             ; preds = %3000
  %3009 = load i8, ptr %3003, align 1, !tbaa !48, !alias.scope !231, !noalias !197
  br label %3010

3010:                                             ; preds = %3008, %3000
  %3011 = phi i8 [ %3009, %3008 ], [ 0, %3000 ]
  %3012 = sub i64 %3001, %3004
  %3013 = lshr i64 %2997, %3006
  %3014 = shl nsw i64 -1, %3004
  %3015 = xor i64 %3014, -1
  %3016 = and i64 %3013, %3015
  %3017 = shl i64 %3016, %3012
  %3018 = trunc i64 %3017 to i8
  %3019 = or i8 %3011, %3018
  store i8 %3019, ptr %3003, align 1, !tbaa !48, !alias.scope !231, !noalias !197
  %3020 = icmp ule i64 %3001, %3002
  %3021 = select i1 %3020, i64 8, i64 %3012
  %3022 = zext i1 %3020 to i64
  %3023 = getelementptr inbounds i8, ptr %3003, i64 %3022
  %3024 = icmp slt i64 %3005, 1
  br i1 %3024, label %3025, label %3000, !llvm.loop !75

3025:                                             ; preds = %3010
  %3026 = load i16, ptr %2949, align 2, !tbaa !31, !alias.scope !197, !noalias !200
  %3027 = uitofp i16 %3026 to float
  %3028 = fmul fast float %3027, 0x3F8FF82000000000
  %3029 = fpext float %3028 to double
  %3030 = fadd fast double %3029, 5.000000e-01
  %3031 = fptoui double %3030 to i64
  %3032 = and i64 %3031, 4294967295
  %3033 = icmp eq i64 %3021, 0
  %3034 = select i1 %3033, i64 8, i64 %3021
  br label %3035

3035:                                             ; preds = %3025, %3045
  %3036 = phi i64 [ %3056, %3045 ], [ %3034, %3025 ]
  %3037 = phi i64 [ %3041, %3045 ], [ 10, %3025 ]
  %3038 = phi ptr [ %3058, %3045 ], [ %3023, %3025 ]
  %3039 = tail call i64 @llvm.umin.i64(i64 %3037, i64 %3036)
  %3040 = sub nsw i64 %3037, %3039
  %3041 = tail call i64 @llvm.smax.i64(i64 %3040, i64 0)
  %3042 = icmp eq i64 %3036, 8
  br i1 %3042, label %3045, label %3043

3043:                                             ; preds = %3035
  %3044 = load i8, ptr %3038, align 1, !tbaa !48, !alias.scope !234, !noalias !197
  br label %3045

3045:                                             ; preds = %3043, %3035
  %3046 = phi i8 [ %3044, %3043 ], [ 0, %3035 ]
  %3047 = sub i64 %3036, %3039
  %3048 = lshr i64 %3032, %3041
  %3049 = shl nsw i64 -1, %3039
  %3050 = xor i64 %3049, -1
  %3051 = and i64 %3048, %3050
  %3052 = shl i64 %3051, %3047
  %3053 = trunc i64 %3052 to i8
  %3054 = or i8 %3046, %3053
  store i8 %3054, ptr %3038, align 1, !tbaa !48, !alias.scope !234, !noalias !197
  %3055 = icmp ule i64 %3036, %3037
  %3056 = select i1 %3055, i64 8, i64 %3047
  %3057 = zext i1 %3055 to i64
  %3058 = getelementptr inbounds i8, ptr %3038, i64 %3057
  %3059 = icmp slt i64 %3040, 1
  br i1 %3059, label %3060, label %3035, !llvm.loop !75

3060:                                             ; preds = %3045
  %3061 = getelementptr inbounds %struct._PixelPacket, ptr %2949, i64 0, i32 3
  %3062 = load i16, ptr %3061, align 2, !tbaa !28, !alias.scope !197, !noalias !200
  %3063 = xor i16 %3062, -1
  %3064 = uitofp i16 %3063 to float
  %3065 = fmul fast float %3064, 0x3F8FF82000000000
  %3066 = fpext float %3065 to double
  %3067 = fadd fast double %3066, 5.000000e-01
  %3068 = fptoui double %3067 to i64
  %3069 = and i64 %3068, 4294967295
  tail call void @llvm.experimental.noalias.scope.decl(metadata !237)
  %3070 = icmp eq i64 %3056, 0
  %3071 = select i1 %3070, i64 8, i64 %3056
  br label %3072

3072:                                             ; preds = %3060, %3082
  %3073 = phi i64 [ %3093, %3082 ], [ %3071, %3060 ]
  %3074 = phi i64 [ %3078, %3082 ], [ 10, %3060 ]
  %3075 = phi ptr [ %3095, %3082 ], [ %3058, %3060 ]
  %3076 = tail call i64 @llvm.umin.i64(i64 %3074, i64 %3073)
  %3077 = sub nsw i64 %3074, %3076
  %3078 = tail call i64 @llvm.smax.i64(i64 %3077, i64 0)
  %3079 = icmp eq i64 %3073, 8
  br i1 %3079, label %3082, label %3080

3080:                                             ; preds = %3072
  %3081 = load i8, ptr %3075, align 1, !tbaa !48, !alias.scope !240, !noalias !197
  br label %3082

3082:                                             ; preds = %3080, %3072
  %3083 = phi i8 [ %3081, %3080 ], [ 0, %3072 ]
  %3084 = sub i64 %3073, %3076
  %3085 = lshr i64 %3069, %3078
  %3086 = shl nsw i64 -1, %3076
  %3087 = xor i64 %3086, -1
  %3088 = and i64 %3085, %3087
  %3089 = shl i64 %3088, %3084
  %3090 = trunc i64 %3089 to i8
  %3091 = or i8 %3083, %3090
  store i8 %3091, ptr %3075, align 1, !tbaa !48, !alias.scope !240, !noalias !197
  %3092 = icmp ule i64 %3073, %3074
  %3093 = select i1 %3092, i64 8, i64 %3084
  %3094 = zext i1 %3092 to i64
  %3095 = getelementptr inbounds i8, ptr %3075, i64 %3094
  %3096 = icmp slt i64 %3077, 1
  br i1 %3096, label %3097, label %3072, !llvm.loop !75

3097:                                             ; preds = %3082
  store i64 %3093, ptr %2684, align 8, !tbaa !69, !noalias !241
  %3098 = getelementptr inbounds %struct._PixelPacket, ptr %2949, i64 1
  %3099 = getelementptr inbounds i8, ptr %3095, i64 %2687
  %3100 = add nuw nsw i64 %2951, 1
  %3101 = icmp eq i64 %3100, %164
  br i1 %3101, label %17787, label %2947, !llvm.loop !242

3102:                                             ; preds = %2391
  %3103 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 2
  %3104 = load i32, ptr %3103, align 8, !tbaa !50, !noalias !202
  %3105 = icmp eq i32 %3104, 1
  %3106 = icmp sgt i64 %164, 0
  br i1 %3105, label %3114, label %3107

3107:                                             ; preds = %3102
  br i1 %3106, label %3108, label %17787

3108:                                             ; preds = %3107
  %3109 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %3110 = load i32, ptr %3109, align 8, !tbaa !51, !noalias !202
  %3111 = icmp eq i32 %3110, 1
  %3112 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %3113 = load i64, ptr %3112, align 8, !tbaa !47, !noalias !202
  br label %3425

3114:                                             ; preds = %3102
  br i1 %3106, label %3115, label %17787

3115:                                             ; preds = %3114
  %3116 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %3117 = load i32, ptr %3116, align 8, !tbaa !51, !noalias !202
  %3118 = icmp eq i32 %3117, 1
  %3119 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %3120 = load i64, ptr %3119, align 8, !tbaa !47, !noalias !202
  br label %3121

3121:                                             ; preds = %3412, %3115
  %3122 = phi ptr [ %166, %3115 ], [ %3421, %3412 ]
  %3123 = phi ptr [ %88, %3115 ], [ %3422, %3412 ]
  %3124 = phi i64 [ 0, %3115 ], [ %3423, %3412 ]
  %3125 = load i16, ptr %3122, align 2, !tbaa !31, !alias.scope !197, !noalias !200
  %3126 = uitofp i16 %3125 to double
  %3127 = fmul fast double %3126, 0x3EF0001000100010
  %3128 = fptrunc double %3127 to float
  %3129 = bitcast float %3128 to i32
  %3130 = lshr i32 %3129, 16
  %3131 = and i32 %3130, 32768
  %3132 = lshr i32 %3129, 23
  %3133 = and i32 %3132, 255
  %3134 = add nsw i32 %3133, -112
  %3135 = and i32 %3129, 8388607
  %3136 = icmp ult i32 %3133, 113
  br i1 %3136, label %3137, label %3154

3137:                                             ; preds = %3121
  %3138 = icmp ult i32 %3133, 102
  br i1 %3138, label %3151, label %3139

3139:                                             ; preds = %3137
  %3140 = or i32 %3135, 8388608
  %3141 = sub nuw nsw i32 126, %3133
  %3142 = sub nuw nsw i32 125, %3133
  %3143 = shl nsw i32 -1, %3142
  %3144 = xor i32 %3143, -1
  %3145 = add nuw nsw i32 %3140, %3144
  %3146 = lshr i32 %3140, %3141
  %3147 = and i32 %3146, 1
  %3148 = add nuw nsw i32 %3145, %3147
  %3149 = lshr i32 %3148, %3141
  %3150 = or i32 %3149, %3131
  br label %3151

3151:                                             ; preds = %3139, %3137
  %3152 = phi i32 [ %3150, %3139 ], [ %3131, %3137 ]
  %3153 = trunc i32 %3152 to i16
  br label %3189

3154:                                             ; preds = %3121
  %3155 = icmp eq i32 %3134, 143
  br i1 %3155, label %3156, label %3169

3156:                                             ; preds = %3154
  %3157 = icmp eq i32 %3135, 0
  br i1 %3157, label %3158, label %3161

3158:                                             ; preds = %3156
  %3159 = trunc i32 %3131 to i16
  %3160 = or i16 %3159, 31744
  br label %3189

3161:                                             ; preds = %3156
  %3162 = lshr i32 %3135, 13
  %3163 = icmp ult i32 %3135, 8192
  %3164 = zext i1 %3163 to i32
  %3165 = or i32 %3162, %3164
  %3166 = or i32 %3165, %3131
  %3167 = trunc i32 %3166 to i16
  %3168 = or i16 %3167, 31744
  br label %3189

3169:                                             ; preds = %3154
  %3170 = lshr i32 %3129, 13
  %3171 = and i32 %3170, 1
  %3172 = add nuw nsw i32 %3135, 4095
  %3173 = add nuw nsw i32 %3172, %3171
  %3174 = and i32 %3173, 8388608
  %3175 = icmp eq i32 %3174, 0
  %3176 = add nsw i32 %3133, -111
  %3177 = select i1 %3175, i32 %3134, i32 %3176
  %3178 = icmp ugt i32 %3177, 30
  br i1 %3178, label %3179, label %3182

3179:                                             ; preds = %3169
  %3180 = trunc i32 %3131 to i16
  %3181 = or i16 %3180, 31744
  br label %3189

3182:                                             ; preds = %3169
  %3183 = lshr i32 %3173, 13
  %3184 = shl nuw nsw i32 %3177, 10
  %3185 = select i1 %3175, i32 %3183, i32 0
  %3186 = or i32 %3185, %3184
  %3187 = or i32 %3186, %3131
  %3188 = trunc i32 %3187 to i16
  br label %3189

3189:                                             ; preds = %3182, %3179, %3161, %3158, %3151
  %3190 = phi i16 [ %3153, %3151 ], [ %3160, %3158 ], [ %3168, %3161 ], [ %3181, %3179 ], [ %3188, %3182 ]
  %3191 = lshr i16 %3190, 8
  %3192 = select i1 %3118, i16 %3190, i16 %3191
  %3193 = select i1 %3118, i16 %3191, i16 %3190
  %3194 = trunc i16 %3193 to i8
  %3195 = trunc i16 %3192 to i8
  store i8 %3195, ptr %3123, align 1, !alias.scope !200, !noalias !197
  %3196 = getelementptr inbounds i8, ptr %3123, i64 1
  store i8 %3194, ptr %3196, align 1, !alias.scope !200, !noalias !197
  %3197 = getelementptr inbounds i8, ptr %3123, i64 2
  %3198 = getelementptr inbounds %struct._PixelPacket, ptr %3122, i64 0, i32 1
  %3199 = load i16, ptr %3198, align 2, !tbaa !30, !alias.scope !197, !noalias !200
  %3200 = uitofp i16 %3199 to double
  %3201 = fmul fast double %3200, 0x3EF0001000100010
  %3202 = fptrunc double %3201 to float
  %3203 = bitcast float %3202 to i32
  %3204 = lshr i32 %3203, 16
  %3205 = and i32 %3204, 32768
  %3206 = lshr i32 %3203, 23
  %3207 = and i32 %3206, 255
  %3208 = add nsw i32 %3207, -112
  %3209 = and i32 %3203, 8388607
  %3210 = icmp ult i32 %3207, 113
  br i1 %3210, label %3211, label %3228

3211:                                             ; preds = %3189
  %3212 = icmp ult i32 %3207, 102
  br i1 %3212, label %3225, label %3213

3213:                                             ; preds = %3211
  %3214 = or i32 %3209, 8388608
  %3215 = sub nuw nsw i32 126, %3207
  %3216 = sub nuw nsw i32 125, %3207
  %3217 = shl nsw i32 -1, %3216
  %3218 = xor i32 %3217, -1
  %3219 = add nuw nsw i32 %3214, %3218
  %3220 = lshr i32 %3214, %3215
  %3221 = and i32 %3220, 1
  %3222 = add nuw nsw i32 %3219, %3221
  %3223 = lshr i32 %3222, %3215
  %3224 = or i32 %3223, %3205
  br label %3225

3225:                                             ; preds = %3213, %3211
  %3226 = phi i32 [ %3224, %3213 ], [ %3205, %3211 ]
  %3227 = trunc i32 %3226 to i16
  br label %3263

3228:                                             ; preds = %3189
  %3229 = icmp eq i32 %3208, 143
  br i1 %3229, label %3230, label %3243

3230:                                             ; preds = %3228
  %3231 = icmp eq i32 %3209, 0
  br i1 %3231, label %3232, label %3235

3232:                                             ; preds = %3230
  %3233 = trunc i32 %3205 to i16
  %3234 = or i16 %3233, 31744
  br label %3263

3235:                                             ; preds = %3230
  %3236 = lshr i32 %3209, 13
  %3237 = icmp ult i32 %3209, 8192
  %3238 = zext i1 %3237 to i32
  %3239 = or i32 %3236, %3238
  %3240 = or i32 %3239, %3205
  %3241 = trunc i32 %3240 to i16
  %3242 = or i16 %3241, 31744
  br label %3263

3243:                                             ; preds = %3228
  %3244 = lshr i32 %3203, 13
  %3245 = and i32 %3244, 1
  %3246 = add nuw nsw i32 %3209, 4095
  %3247 = add nuw nsw i32 %3246, %3245
  %3248 = and i32 %3247, 8388608
  %3249 = icmp eq i32 %3248, 0
  %3250 = add nsw i32 %3207, -111
  %3251 = select i1 %3249, i32 %3208, i32 %3250
  %3252 = icmp ugt i32 %3251, 30
  br i1 %3252, label %3253, label %3256

3253:                                             ; preds = %3243
  %3254 = trunc i32 %3205 to i16
  %3255 = or i16 %3254, 31744
  br label %3263

3256:                                             ; preds = %3243
  %3257 = lshr i32 %3247, 13
  %3258 = shl nuw nsw i32 %3251, 10
  %3259 = select i1 %3249, i32 %3257, i32 0
  %3260 = or i32 %3259, %3258
  %3261 = or i32 %3260, %3205
  %3262 = trunc i32 %3261 to i16
  br label %3263

3263:                                             ; preds = %3256, %3253, %3235, %3232, %3225
  %3264 = phi i16 [ %3227, %3225 ], [ %3234, %3232 ], [ %3242, %3235 ], [ %3255, %3253 ], [ %3262, %3256 ]
  %3265 = lshr i16 %3264, 8
  %3266 = select i1 %3118, i16 %3264, i16 %3265
  %3267 = select i1 %3118, i16 %3265, i16 %3264
  %3268 = trunc i16 %3267 to i8
  %3269 = trunc i16 %3266 to i8
  store i8 %3269, ptr %3197, align 1, !alias.scope !200, !noalias !197
  %3270 = getelementptr inbounds i8, ptr %3123, i64 3
  store i8 %3268, ptr %3270, align 1, !alias.scope !200, !noalias !197
  %3271 = getelementptr inbounds i8, ptr %3123, i64 4
  %3272 = getelementptr inbounds %struct._PixelPacket, ptr %3122, i64 0, i32 2
  %3273 = load i16, ptr %3272, align 2, !tbaa !29, !alias.scope !197, !noalias !200
  %3274 = uitofp i16 %3273 to double
  %3275 = fmul fast double %3274, 0x3EF0001000100010
  %3276 = fptrunc double %3275 to float
  %3277 = bitcast float %3276 to i32
  %3278 = lshr i32 %3277, 16
  %3279 = and i32 %3278, 32768
  %3280 = lshr i32 %3277, 23
  %3281 = and i32 %3280, 255
  %3282 = add nsw i32 %3281, -112
  %3283 = and i32 %3277, 8388607
  %3284 = icmp ult i32 %3281, 113
  br i1 %3284, label %3285, label %3302

3285:                                             ; preds = %3263
  %3286 = icmp ult i32 %3281, 102
  br i1 %3286, label %3299, label %3287

3287:                                             ; preds = %3285
  %3288 = or i32 %3283, 8388608
  %3289 = sub nuw nsw i32 126, %3281
  %3290 = sub nuw nsw i32 125, %3281
  %3291 = shl nsw i32 -1, %3290
  %3292 = xor i32 %3291, -1
  %3293 = add nuw nsw i32 %3288, %3292
  %3294 = lshr i32 %3288, %3289
  %3295 = and i32 %3294, 1
  %3296 = add nuw nsw i32 %3293, %3295
  %3297 = lshr i32 %3296, %3289
  %3298 = or i32 %3297, %3279
  br label %3299

3299:                                             ; preds = %3287, %3285
  %3300 = phi i32 [ %3298, %3287 ], [ %3279, %3285 ]
  %3301 = trunc i32 %3300 to i16
  br label %3337

3302:                                             ; preds = %3263
  %3303 = icmp eq i32 %3282, 143
  br i1 %3303, label %3304, label %3317

3304:                                             ; preds = %3302
  %3305 = icmp eq i32 %3283, 0
  br i1 %3305, label %3306, label %3309

3306:                                             ; preds = %3304
  %3307 = trunc i32 %3279 to i16
  %3308 = or i16 %3307, 31744
  br label %3337

3309:                                             ; preds = %3304
  %3310 = lshr i32 %3283, 13
  %3311 = icmp ult i32 %3283, 8192
  %3312 = zext i1 %3311 to i32
  %3313 = or i32 %3310, %3312
  %3314 = or i32 %3313, %3279
  %3315 = trunc i32 %3314 to i16
  %3316 = or i16 %3315, 31744
  br label %3337

3317:                                             ; preds = %3302
  %3318 = lshr i32 %3277, 13
  %3319 = and i32 %3318, 1
  %3320 = add nuw nsw i32 %3283, 4095
  %3321 = add nuw nsw i32 %3320, %3319
  %3322 = and i32 %3321, 8388608
  %3323 = icmp eq i32 %3322, 0
  %3324 = add nsw i32 %3281, -111
  %3325 = select i1 %3323, i32 %3282, i32 %3324
  %3326 = icmp ugt i32 %3325, 30
  br i1 %3326, label %3327, label %3330

3327:                                             ; preds = %3317
  %3328 = trunc i32 %3279 to i16
  %3329 = or i16 %3328, 31744
  br label %3337

3330:                                             ; preds = %3317
  %3331 = lshr i32 %3321, 13
  %3332 = shl nuw nsw i32 %3325, 10
  %3333 = select i1 %3323, i32 %3331, i32 0
  %3334 = or i32 %3333, %3332
  %3335 = or i32 %3334, %3279
  %3336 = trunc i32 %3335 to i16
  br label %3337

3337:                                             ; preds = %3330, %3327, %3309, %3306, %3299
  %3338 = phi i16 [ %3301, %3299 ], [ %3308, %3306 ], [ %3316, %3309 ], [ %3329, %3327 ], [ %3336, %3330 ]
  %3339 = lshr i16 %3338, 8
  %3340 = select i1 %3118, i16 %3338, i16 %3339
  %3341 = select i1 %3118, i16 %3339, i16 %3338
  %3342 = trunc i16 %3341 to i8
  %3343 = trunc i16 %3340 to i8
  store i8 %3343, ptr %3271, align 1, !alias.scope !200, !noalias !197
  %3344 = getelementptr inbounds i8, ptr %3123, i64 5
  store i8 %3342, ptr %3344, align 1, !alias.scope !200, !noalias !197
  %3345 = getelementptr inbounds i8, ptr %3123, i64 6
  %3346 = getelementptr inbounds %struct._PixelPacket, ptr %3122, i64 0, i32 3
  %3347 = load i16, ptr %3346, align 2, !tbaa !28, !alias.scope !197, !noalias !200
  %3348 = xor i16 %3347, -1
  %3349 = uitofp i16 %3348 to double
  %3350 = fmul fast double %3349, 0x3EF0001000100010
  %3351 = fptrunc double %3350 to float
  %3352 = bitcast float %3351 to i32
  %3353 = lshr i32 %3352, 16
  %3354 = and i32 %3353, 32768
  %3355 = lshr i32 %3352, 23
  %3356 = and i32 %3355, 255
  %3357 = add nsw i32 %3356, -112
  %3358 = and i32 %3352, 8388607
  %3359 = icmp ult i32 %3356, 113
  br i1 %3359, label %3360, label %3377

3360:                                             ; preds = %3337
  %3361 = icmp ult i32 %3356, 102
  br i1 %3361, label %3374, label %3362

3362:                                             ; preds = %3360
  %3363 = or i32 %3358, 8388608
  %3364 = sub nuw nsw i32 126, %3356
  %3365 = sub nuw nsw i32 125, %3356
  %3366 = shl nsw i32 -1, %3365
  %3367 = xor i32 %3366, -1
  %3368 = add nuw nsw i32 %3363, %3367
  %3369 = lshr i32 %3363, %3364
  %3370 = and i32 %3369, 1
  %3371 = add nuw nsw i32 %3368, %3370
  %3372 = lshr i32 %3371, %3364
  %3373 = or i32 %3372, %3354
  br label %3374

3374:                                             ; preds = %3362, %3360
  %3375 = phi i32 [ %3373, %3362 ], [ %3354, %3360 ]
  %3376 = trunc i32 %3375 to i16
  br label %3412

3377:                                             ; preds = %3337
  %3378 = icmp eq i32 %3357, 143
  br i1 %3378, label %3379, label %3392

3379:                                             ; preds = %3377
  %3380 = icmp eq i32 %3358, 0
  br i1 %3380, label %3381, label %3384

3381:                                             ; preds = %3379
  %3382 = trunc i32 %3354 to i16
  %3383 = or i16 %3382, 31744
  br label %3412

3384:                                             ; preds = %3379
  %3385 = lshr i32 %3358, 13
  %3386 = icmp ult i32 %3358, 8192
  %3387 = zext i1 %3386 to i32
  %3388 = or i32 %3385, %3387
  %3389 = or i32 %3388, %3354
  %3390 = trunc i32 %3389 to i16
  %3391 = or i16 %3390, 31744
  br label %3412

3392:                                             ; preds = %3377
  %3393 = lshr i32 %3352, 13
  %3394 = and i32 %3393, 1
  %3395 = add nuw nsw i32 %3358, 4095
  %3396 = add nuw nsw i32 %3395, %3394
  %3397 = and i32 %3396, 8388608
  %3398 = icmp eq i32 %3397, 0
  %3399 = add nsw i32 %3356, -111
  %3400 = select i1 %3398, i32 %3357, i32 %3399
  %3401 = icmp ugt i32 %3400, 30
  br i1 %3401, label %3402, label %3405

3402:                                             ; preds = %3392
  %3403 = trunc i32 %3354 to i16
  %3404 = or i16 %3403, 31744
  br label %3412

3405:                                             ; preds = %3392
  %3406 = lshr i32 %3396, 13
  %3407 = shl nuw nsw i32 %3400, 10
  %3408 = select i1 %3398, i32 %3406, i32 0
  %3409 = or i32 %3408, %3407
  %3410 = or i32 %3409, %3354
  %3411 = trunc i32 %3410 to i16
  br label %3412

3412:                                             ; preds = %3405, %3402, %3384, %3381, %3374
  %3413 = phi i16 [ %3376, %3374 ], [ %3383, %3381 ], [ %3391, %3384 ], [ %3404, %3402 ], [ %3411, %3405 ]
  %3414 = lshr i16 %3413, 8
  %3415 = select i1 %3118, i16 %3413, i16 %3414
  %3416 = select i1 %3118, i16 %3414, i16 %3413
  %3417 = trunc i16 %3416 to i8
  %3418 = trunc i16 %3415 to i8
  store i8 %3418, ptr %3345, align 1, !alias.scope !200, !noalias !197
  %3419 = getelementptr inbounds i8, ptr %3123, i64 7
  store i8 %3417, ptr %3419, align 1, !alias.scope !200, !noalias !197
  %3420 = getelementptr inbounds i8, ptr %3123, i64 8
  %3421 = getelementptr inbounds %struct._PixelPacket, ptr %3122, i64 1
  %3422 = getelementptr inbounds i8, ptr %3420, i64 %3120
  %3423 = add nuw nsw i64 %3124, 1
  %3424 = icmp eq i64 %3423, %164
  br i1 %3424, label %17787, label %3121, !llvm.loop !243

3425:                                             ; preds = %3425, %3108
  %3426 = phi ptr [ %166, %3108 ], [ %3465, %3425 ]
  %3427 = phi ptr [ %88, %3108 ], [ %3466, %3425 ]
  %3428 = phi i64 [ 0, %3108 ], [ %3467, %3425 ]
  %3429 = load i16, ptr %3426, align 2, !tbaa !31, !alias.scope !197, !noalias !200
  %3430 = lshr i16 %3429, 8
  %3431 = select i1 %3111, i16 %3429, i16 %3430
  %3432 = select i1 %3111, i16 %3430, i16 %3429
  %3433 = trunc i16 %3432 to i8
  %3434 = trunc i16 %3431 to i8
  store i8 %3434, ptr %3427, align 1, !alias.scope !200, !noalias !197
  %3435 = getelementptr inbounds i8, ptr %3427, i64 1
  store i8 %3433, ptr %3435, align 1, !alias.scope !200, !noalias !197
  %3436 = getelementptr inbounds i8, ptr %3427, i64 2
  %3437 = getelementptr inbounds %struct._PixelPacket, ptr %3426, i64 0, i32 1
  %3438 = load i16, ptr %3437, align 2, !tbaa !30, !alias.scope !197, !noalias !200
  %3439 = lshr i16 %3438, 8
  %3440 = select i1 %3111, i16 %3438, i16 %3439
  %3441 = select i1 %3111, i16 %3439, i16 %3438
  %3442 = trunc i16 %3441 to i8
  %3443 = trunc i16 %3440 to i8
  store i8 %3443, ptr %3436, align 1, !alias.scope !200, !noalias !197
  %3444 = getelementptr inbounds i8, ptr %3427, i64 3
  store i8 %3442, ptr %3444, align 1, !alias.scope !200, !noalias !197
  %3445 = getelementptr inbounds i8, ptr %3427, i64 4
  %3446 = getelementptr inbounds %struct._PixelPacket, ptr %3426, i64 0, i32 2
  %3447 = load i16, ptr %3446, align 2, !tbaa !29, !alias.scope !197, !noalias !200
  %3448 = lshr i16 %3447, 8
  %3449 = select i1 %3111, i16 %3447, i16 %3448
  %3450 = select i1 %3111, i16 %3448, i16 %3447
  %3451 = trunc i16 %3450 to i8
  %3452 = trunc i16 %3449 to i8
  store i8 %3452, ptr %3445, align 1, !alias.scope !200, !noalias !197
  %3453 = getelementptr inbounds i8, ptr %3427, i64 5
  store i8 %3451, ptr %3453, align 1, !alias.scope !200, !noalias !197
  %3454 = getelementptr inbounds i8, ptr %3427, i64 6
  %3455 = getelementptr inbounds %struct._PixelPacket, ptr %3426, i64 0, i32 3
  %3456 = load i16, ptr %3455, align 2, !tbaa !28, !alias.scope !197, !noalias !200
  %3457 = xor i16 %3456, -1
  %3458 = lshr i16 %3457, 8
  %3459 = select i1 %3111, i16 %3457, i16 %3458
  %3460 = select i1 %3111, i16 %3458, i16 %3457
  %3461 = trunc i16 %3460 to i8
  %3462 = trunc i16 %3459 to i8
  store i8 %3462, ptr %3454, align 1, !alias.scope !200, !noalias !197
  %3463 = getelementptr inbounds i8, ptr %3427, i64 7
  store i8 %3461, ptr %3463, align 1, !alias.scope !200, !noalias !197
  %3464 = getelementptr inbounds i8, ptr %3427, i64 8
  %3465 = getelementptr inbounds %struct._PixelPacket, ptr %3426, i64 1
  %3466 = getelementptr inbounds i8, ptr %3464, i64 %3113
  %3467 = add nuw nsw i64 %3428, 1
  %3468 = icmp eq i64 %3467, %164
  br i1 %3468, label %17787, label %3425, !llvm.loop !244

3469:                                             ; preds = %2391
  %3470 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 2
  %3471 = load i32, ptr %3470, align 8, !tbaa !50, !noalias !202
  %3472 = icmp eq i32 %3471, 1
  %3473 = icmp sgt i64 %164, 0
  br i1 %3472, label %3481, label %3474

3474:                                             ; preds = %3469
  br i1 %3473, label %3475, label %17787

3475:                                             ; preds = %3474
  %3476 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %3477 = load i32, ptr %3476, align 8, !tbaa !51, !noalias !202
  %3478 = icmp eq i32 %3477, 1
  %3479 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %3480 = load i64, ptr %3479, align 8, !tbaa !47, !noalias !202
  br label %3612

3481:                                             ; preds = %3469
  br i1 %3473, label %3482, label %17787

3482:                                             ; preds = %3481
  %3483 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 14
  %3484 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 3
  %3485 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %3486 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  br label %3487

3487:                                             ; preds = %3598, %3482
  %3488 = phi ptr [ %166, %3482 ], [ %3607, %3598 ]
  %3489 = phi ptr [ %88, %3482 ], [ %3609, %3598 ]
  %3490 = phi i64 [ 0, %3482 ], [ %3610, %3598 ]
  %3491 = getelementptr inbounds %struct._PixelPacket, ptr %3488, i64 0, i32 2
  %3492 = load i16, ptr %3491, align 2, !tbaa !29, !alias.scope !197, !noalias !200
  call void @llvm.experimental.noalias.scope.decl(metadata !245)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %68) #6, !noalias !248
  %3493 = call ptr @ResetMagickMemory(ptr noundef nonnull %68, i32 noundef 0, i64 noundef 4) #6, !noalias !245
  %3494 = uitofp i16 %3492 to double
  %3495 = load double, ptr %3483, align 8, !tbaa !59, !noalias !248
  %3496 = fmul fast double %3495, %3494
  %3497 = load double, ptr %3484, align 8, !tbaa !60, !noalias !248
  %3498 = fadd fast double %3496, %3497
  %3499 = fptrunc double %3498 to float
  %3500 = load i32, ptr %3485, align 8, !tbaa !51, !noalias !248
  %3501 = icmp eq i32 %3500, 1
  %3502 = bitcast float %3499 to i32
  %3503 = lshr i32 %3502, 24
  %3504 = trunc i32 %3503 to i8
  %3505 = lshr i32 %3502, 16
  %3506 = trunc i32 %3505 to i8
  %3507 = lshr i32 %3502, 8
  %3508 = trunc i32 %3507 to i8
  %3509 = trunc i32 %3502 to i8
  br i1 %3501, label %3511, label %3510

3510:                                             ; preds = %3487
  br label %3511

3511:                                             ; preds = %3510, %3487
  %3512 = phi i8 [ %3504, %3510 ], [ %3509, %3487 ]
  %3513 = phi i8 [ %3506, %3510 ], [ %3508, %3487 ]
  %3514 = phi i8 [ %3508, %3510 ], [ %3506, %3487 ]
  %3515 = phi i8 [ %3509, %3510 ], [ %3504, %3487 ]
  store i8 %3512, ptr %3489, align 1, !alias.scope !249, !noalias !197
  %3516 = getelementptr inbounds i8, ptr %3489, i64 1
  store i8 %3513, ptr %3516, align 1, !alias.scope !249, !noalias !197
  %3517 = getelementptr inbounds i8, ptr %3489, i64 2
  store i8 %3514, ptr %3517, align 1, !alias.scope !249, !noalias !197
  %3518 = getelementptr inbounds i8, ptr %3489, i64 3
  store i8 %3515, ptr %3518, align 1, !alias.scope !249, !noalias !197
  %3519 = getelementptr inbounds i8, ptr %3489, i64 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %68) #6, !noalias !248
  %3520 = getelementptr inbounds %struct._PixelPacket, ptr %3488, i64 0, i32 1
  %3521 = load i16, ptr %3520, align 2, !tbaa !30, !alias.scope !197, !noalias !200
  call void @llvm.experimental.noalias.scope.decl(metadata !250)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %67) #6, !noalias !253
  %3522 = call ptr @ResetMagickMemory(ptr noundef nonnull %67, i32 noundef 0, i64 noundef 4) #6, !noalias !250
  %3523 = uitofp i16 %3521 to double
  %3524 = load double, ptr %3483, align 8, !tbaa !59, !noalias !253
  %3525 = fmul fast double %3524, %3523
  %3526 = load double, ptr %3484, align 8, !tbaa !60, !noalias !253
  %3527 = fadd fast double %3525, %3526
  %3528 = fptrunc double %3527 to float
  %3529 = load i32, ptr %3485, align 8, !tbaa !51, !noalias !253
  %3530 = icmp eq i32 %3529, 1
  %3531 = bitcast float %3528 to i32
  %3532 = lshr i32 %3531, 24
  %3533 = trunc i32 %3532 to i8
  %3534 = lshr i32 %3531, 16
  %3535 = trunc i32 %3534 to i8
  %3536 = lshr i32 %3531, 8
  %3537 = trunc i32 %3536 to i8
  %3538 = trunc i32 %3531 to i8
  br i1 %3530, label %3540, label %3539

3539:                                             ; preds = %3511
  br label %3540

3540:                                             ; preds = %3539, %3511
  %3541 = phi i8 [ %3533, %3539 ], [ %3538, %3511 ]
  %3542 = phi i8 [ %3535, %3539 ], [ %3537, %3511 ]
  %3543 = phi i8 [ %3537, %3539 ], [ %3535, %3511 ]
  %3544 = phi i8 [ %3538, %3539 ], [ %3533, %3511 ]
  store i8 %3541, ptr %3519, align 1, !alias.scope !254, !noalias !197
  %3545 = getelementptr inbounds i8, ptr %3489, i64 5
  store i8 %3542, ptr %3545, align 1, !alias.scope !254, !noalias !197
  %3546 = getelementptr inbounds i8, ptr %3489, i64 6
  store i8 %3543, ptr %3546, align 1, !alias.scope !254, !noalias !197
  %3547 = getelementptr inbounds i8, ptr %3489, i64 7
  store i8 %3544, ptr %3547, align 1, !alias.scope !254, !noalias !197
  %3548 = getelementptr inbounds i8, ptr %3489, i64 8
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %67) #6, !noalias !253
  %3549 = load i16, ptr %3488, align 2, !tbaa !31, !alias.scope !197, !noalias !200
  call void @llvm.experimental.noalias.scope.decl(metadata !255)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %66) #6, !noalias !258
  %3550 = call ptr @ResetMagickMemory(ptr noundef nonnull %66, i32 noundef 0, i64 noundef 4) #6, !noalias !255
  %3551 = uitofp i16 %3549 to double
  %3552 = load double, ptr %3483, align 8, !tbaa !59, !noalias !258
  %3553 = fmul fast double %3552, %3551
  %3554 = load double, ptr %3484, align 8, !tbaa !60, !noalias !258
  %3555 = fadd fast double %3553, %3554
  %3556 = fptrunc double %3555 to float
  %3557 = load i32, ptr %3485, align 8, !tbaa !51, !noalias !258
  %3558 = icmp eq i32 %3557, 1
  %3559 = bitcast float %3556 to i32
  %3560 = lshr i32 %3559, 24
  %3561 = trunc i32 %3560 to i8
  %3562 = lshr i32 %3559, 16
  %3563 = trunc i32 %3562 to i8
  %3564 = lshr i32 %3559, 8
  %3565 = trunc i32 %3564 to i8
  %3566 = trunc i32 %3559 to i8
  br i1 %3558, label %3568, label %3567

3567:                                             ; preds = %3540
  br label %3568

3568:                                             ; preds = %3567, %3540
  %3569 = phi i8 [ %3561, %3567 ], [ %3566, %3540 ]
  %3570 = phi i8 [ %3563, %3567 ], [ %3565, %3540 ]
  %3571 = phi i8 [ %3565, %3567 ], [ %3563, %3540 ]
  %3572 = phi i8 [ %3566, %3567 ], [ %3561, %3540 ]
  store i8 %3569, ptr %3548, align 1, !alias.scope !259, !noalias !197
  %3573 = getelementptr inbounds i8, ptr %3489, i64 9
  store i8 %3570, ptr %3573, align 1, !alias.scope !259, !noalias !197
  %3574 = getelementptr inbounds i8, ptr %3489, i64 10
  store i8 %3571, ptr %3574, align 1, !alias.scope !259, !noalias !197
  %3575 = getelementptr inbounds i8, ptr %3489, i64 11
  store i8 %3572, ptr %3575, align 1, !alias.scope !259, !noalias !197
  %3576 = getelementptr inbounds i8, ptr %3489, i64 12
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %66) #6, !noalias !258
  %3577 = getelementptr inbounds %struct._PixelPacket, ptr %3488, i64 0, i32 3
  %3578 = load i16, ptr %3577, align 2, !tbaa !28, !alias.scope !197, !noalias !200
  %3579 = xor i16 %3578, -1
  call void @llvm.experimental.noalias.scope.decl(metadata !260)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %65) #6, !noalias !263
  %3580 = call ptr @ResetMagickMemory(ptr noundef nonnull %65, i32 noundef 0, i64 noundef 4) #6, !noalias !260
  %3581 = uitofp i16 %3579 to double
  %3582 = load double, ptr %3483, align 8, !tbaa !59, !noalias !263
  %3583 = fmul fast double %3582, %3581
  %3584 = load double, ptr %3484, align 8, !tbaa !60, !noalias !263
  %3585 = fadd fast double %3583, %3584
  %3586 = fptrunc double %3585 to float
  %3587 = load i32, ptr %3485, align 8, !tbaa !51, !noalias !263
  %3588 = icmp eq i32 %3587, 1
  %3589 = bitcast float %3586 to i32
  %3590 = lshr i32 %3589, 24
  %3591 = trunc i32 %3590 to i8
  %3592 = lshr i32 %3589, 16
  %3593 = trunc i32 %3592 to i8
  %3594 = lshr i32 %3589, 8
  %3595 = trunc i32 %3594 to i8
  %3596 = trunc i32 %3589 to i8
  br i1 %3588, label %3598, label %3597

3597:                                             ; preds = %3568
  br label %3598

3598:                                             ; preds = %3597, %3568
  %3599 = phi i8 [ %3591, %3597 ], [ %3596, %3568 ]
  %3600 = phi i8 [ %3593, %3597 ], [ %3595, %3568 ]
  %3601 = phi i8 [ %3595, %3597 ], [ %3593, %3568 ]
  %3602 = phi i8 [ %3596, %3597 ], [ %3591, %3568 ]
  store i8 %3599, ptr %3576, align 1, !alias.scope !264, !noalias !197
  %3603 = getelementptr inbounds i8, ptr %3489, i64 13
  store i8 %3600, ptr %3603, align 1, !alias.scope !264, !noalias !197
  %3604 = getelementptr inbounds i8, ptr %3489, i64 14
  store i8 %3601, ptr %3604, align 1, !alias.scope !264, !noalias !197
  %3605 = getelementptr inbounds i8, ptr %3489, i64 15
  store i8 %3602, ptr %3605, align 1, !alias.scope !264, !noalias !197
  %3606 = getelementptr inbounds i8, ptr %3489, i64 16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %65) #6, !noalias !263
  %3607 = getelementptr inbounds %struct._PixelPacket, ptr %3488, i64 1
  %3608 = load i64, ptr %3486, align 8, !tbaa !47, !noalias !202
  %3609 = getelementptr inbounds i8, ptr %3606, i64 %3608
  %3610 = add nuw nsw i64 %3490, 1
  %3611 = icmp eq i64 %3610, %164
  br i1 %3611, label %17787, label %3487, !llvm.loop !265

3612:                                             ; preds = %3699, %3475
  %3613 = phi ptr [ %166, %3475 ], [ %3712, %3699 ]
  %3614 = phi ptr [ %88, %3475 ], [ %3713, %3699 ]
  %3615 = phi i64 [ 0, %3475 ], [ %3714, %3699 ]
  %3616 = load i16, ptr %3613, align 2, !tbaa !31, !alias.scope !197, !noalias !200
  %3617 = zext i16 %3616 to i32
  %3618 = mul nuw i32 %3617, 65537
  %3619 = getelementptr inbounds i8, ptr %3614, i64 1
  %3620 = getelementptr inbounds i8, ptr %3614, i64 2
  %3621 = getelementptr inbounds i8, ptr %3614, i64 3
  %3622 = getelementptr inbounds i8, ptr %3614, i64 4
  %3623 = getelementptr inbounds %struct._PixelPacket, ptr %3613, i64 0, i32 1
  %3624 = getelementptr inbounds i8, ptr %3614, i64 5
  %3625 = getelementptr inbounds %struct._PixelPacket, ptr %3613, i64 0, i32 2
  br i1 %3478, label %3626, label %3644

3626:                                             ; preds = %3612
  %3627 = lshr i32 %3618, 8
  %3628 = lshr i32 %3618, 24
  %3629 = trunc i16 %3616 to i8
  %3630 = trunc i32 %3627 to i8
  %3631 = trunc i32 %3618 to i8
  store i8 %3631, ptr %3614, align 1, !alias.scope !200, !noalias !197
  %3632 = load i16, ptr %3623, align 2, !tbaa !30, !alias.scope !197, !noalias !200
  %3633 = zext i16 %3632 to i32
  %3634 = mul nuw i32 %3633, 65537
  %3635 = lshr i32 %3634, 8
  %3636 = lshr i32 %3634, 24
  %3637 = trunc i16 %3632 to i8
  %3638 = trunc i32 %3635 to i8
  %3639 = load i16, ptr %3625, align 2, !tbaa !29, !alias.scope !197, !noalias !200
  %3640 = zext i16 %3639 to i32
  %3641 = mul nuw i32 %3640, 65537
  %3642 = lshr i32 %3641, 8
  %3643 = lshr i32 %3641, 24
  br label %3662

3644:                                             ; preds = %3612
  %3645 = lshr i32 %3618, 24
  %3646 = lshr i32 %3618, 8
  %3647 = trunc i32 %3646 to i8
  %3648 = trunc i16 %3616 to i8
  %3649 = trunc i32 %3645 to i8
  store i8 %3649, ptr %3614, align 1, !alias.scope !200, !noalias !197
  %3650 = load i16, ptr %3623, align 2, !tbaa !30, !alias.scope !197, !noalias !200
  %3651 = zext i16 %3650 to i32
  %3652 = mul nuw i32 %3651, 65537
  %3653 = lshr i32 %3652, 24
  %3654 = lshr i32 %3652, 8
  %3655 = trunc i32 %3654 to i8
  %3656 = trunc i16 %3650 to i8
  %3657 = load i16, ptr %3625, align 2, !tbaa !29, !alias.scope !197, !noalias !200
  %3658 = zext i16 %3657 to i32
  %3659 = mul nuw i32 %3658, 65537
  %3660 = lshr i32 %3659, 24
  %3661 = lshr i32 %3659, 8
  br label %3662

3662:                                             ; preds = %3644, %3626
  %3663 = phi i8 [ %3630, %3626 ], [ %3648, %3644 ]
  %3664 = phi i8 [ %3629, %3626 ], [ %3647, %3644 ]
  %3665 = phi i32 [ %3628, %3626 ], [ %3618, %3644 ]
  %3666 = phi i32 [ %3634, %3626 ], [ %3653, %3644 ]
  %3667 = phi i8 [ %3638, %3626 ], [ %3656, %3644 ]
  %3668 = phi i8 [ %3637, %3626 ], [ %3655, %3644 ]
  %3669 = phi i32 [ %3636, %3626 ], [ %3652, %3644 ]
  %3670 = phi i32 [ %3641, %3626 ], [ %3660, %3644 ]
  %3671 = phi i32 [ %3642, %3626 ], [ %3658, %3644 ]
  %3672 = phi i32 [ %3640, %3626 ], [ %3661, %3644 ]
  %3673 = phi i32 [ %3643, %3626 ], [ %3659, %3644 ]
  %3674 = trunc i32 %3669 to i8
  %3675 = trunc i32 %3666 to i8
  %3676 = trunc i32 %3665 to i8
  store i8 %3663, ptr %3619, align 1
  store i8 %3664, ptr %3620, align 1
  store i8 %3676, ptr %3621, align 1
  store i8 %3675, ptr %3622, align 1
  store i8 %3667, ptr %3624, align 1
  %3677 = getelementptr inbounds i8, ptr %3614, i64 6
  store i8 %3668, ptr %3677, align 1
  %3678 = getelementptr inbounds i8, ptr %3614, i64 7
  store i8 %3674, ptr %3678, align 1
  %3679 = getelementptr inbounds i8, ptr %3614, i64 8
  %3680 = trunc i32 %3673 to i8
  %3681 = trunc i32 %3672 to i8
  %3682 = trunc i32 %3671 to i8
  %3683 = trunc i32 %3670 to i8
  store i8 %3683, ptr %3679, align 1, !alias.scope !200, !noalias !197
  %3684 = getelementptr inbounds i8, ptr %3614, i64 9
  store i8 %3682, ptr %3684, align 1, !alias.scope !200, !noalias !197
  %3685 = getelementptr inbounds i8, ptr %3614, i64 10
  store i8 %3681, ptr %3685, align 1, !alias.scope !200, !noalias !197
  %3686 = getelementptr inbounds i8, ptr %3614, i64 11
  store i8 %3680, ptr %3686, align 1, !alias.scope !200, !noalias !197
  %3687 = getelementptr inbounds i8, ptr %3614, i64 12
  %3688 = getelementptr inbounds %struct._PixelPacket, ptr %3613, i64 0, i32 3
  %3689 = load i16, ptr %3688, align 2, !tbaa !28, !alias.scope !197, !noalias !200
  %3690 = xor i16 %3689, -1
  %3691 = zext i16 %3690 to i32
  %3692 = mul nuw i32 %3691, 65537
  br i1 %3478, label %3693, label %3696

3693:                                             ; preds = %3662
  %3694 = lshr i32 %3692, 8
  %3695 = lshr i32 %3692, 24
  br label %3699

3696:                                             ; preds = %3662
  %3697 = lshr i32 %3692, 24
  %3698 = lshr i32 %3692, 8
  br label %3699

3699:                                             ; preds = %3696, %3693
  %3700 = phi i32 [ %3692, %3693 ], [ %3697, %3696 ]
  %3701 = phi i32 [ %3694, %3693 ], [ %3691, %3696 ]
  %3702 = phi i32 [ %3691, %3693 ], [ %3698, %3696 ]
  %3703 = phi i32 [ %3695, %3693 ], [ %3692, %3696 ]
  %3704 = trunc i32 %3703 to i8
  %3705 = trunc i32 %3702 to i8
  %3706 = trunc i32 %3701 to i8
  %3707 = trunc i32 %3700 to i8
  store i8 %3707, ptr %3687, align 1, !alias.scope !200, !noalias !197
  %3708 = getelementptr inbounds i8, ptr %3614, i64 13
  store i8 %3706, ptr %3708, align 1, !alias.scope !200, !noalias !197
  %3709 = getelementptr inbounds i8, ptr %3614, i64 14
  store i8 %3705, ptr %3709, align 1, !alias.scope !200, !noalias !197
  %3710 = getelementptr inbounds i8, ptr %3614, i64 15
  store i8 %3704, ptr %3710, align 1, !alias.scope !200, !noalias !197
  %3711 = getelementptr inbounds i8, ptr %3614, i64 16
  %3712 = getelementptr inbounds %struct._PixelPacket, ptr %3613, i64 1
  %3713 = getelementptr inbounds i8, ptr %3711, i64 %3480
  %3714 = add nuw nsw i64 %3615, 1
  %3715 = icmp eq i64 %3714, %164
  br i1 %3715, label %17787, label %3612, !llvm.loop !266

3716:                                             ; preds = %2391
  %3717 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 2
  %3718 = load i32, ptr %3717, align 8, !tbaa !50, !noalias !202
  %3719 = icmp eq i32 %3718, 1
  br i1 %3719, label %3720, label %3912

3720:                                             ; preds = %3716
  %3721 = icmp sgt i64 %164, 0
  br i1 %3721, label %3722, label %17787

3722:                                             ; preds = %3720
  %3723 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 14
  %3724 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 3
  %3725 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %3726 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  br label %3727

3727:                                             ; preds = %3890, %3722
  %3728 = phi ptr [ %166, %3722 ], [ %3907, %3890 ]
  %3729 = phi ptr [ %88, %3722 ], [ %3909, %3890 ]
  %3730 = phi i64 [ 0, %3722 ], [ %3910, %3890 ]
  %3731 = getelementptr inbounds %struct._PixelPacket, ptr %3728, i64 0, i32 2
  %3732 = load i16, ptr %3731, align 2, !tbaa !29, !alias.scope !197, !noalias !200
  %3733 = uitofp i16 %3732 to double
  call void @llvm.experimental.noalias.scope.decl(metadata !267)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %64) #6, !noalias !270
  %3734 = call ptr @ResetMagickMemory(ptr noundef nonnull %64, i32 noundef 0, i64 noundef 8) #6, !noalias !267
  %3735 = load double, ptr %3723, align 8, !tbaa !59, !noalias !270
  %3736 = fmul fast double %3735, %3733
  %3737 = load double, ptr %3724, align 8, !tbaa !60, !noalias !270
  %3738 = fadd fast double %3736, %3737
  %3739 = load i32, ptr %3725, align 8, !tbaa !51, !noalias !270
  %3740 = icmp eq i32 %3739, 1
  %3741 = bitcast double %3738 to i64
  %3742 = lshr i64 %3741, 56
  %3743 = trunc i64 %3742 to i8
  %3744 = lshr i64 %3741, 48
  %3745 = trunc i64 %3744 to i8
  %3746 = lshr i64 %3741, 40
  %3747 = trunc i64 %3746 to i8
  %3748 = lshr i64 %3741, 32
  %3749 = trunc i64 %3748 to i8
  %3750 = lshr i64 %3741, 24
  %3751 = trunc i64 %3750 to i8
  %3752 = lshr i64 %3741, 16
  %3753 = trunc i64 %3752 to i8
  %3754 = lshr i64 %3741, 8
  %3755 = trunc i64 %3754 to i8
  %3756 = trunc i64 %3741 to i8
  br i1 %3740, label %3758, label %3757

3757:                                             ; preds = %3727
  br label %3758

3758:                                             ; preds = %3757, %3727
  %3759 = phi i8 [ %3743, %3757 ], [ %3756, %3727 ]
  %3760 = phi i8 [ %3745, %3757 ], [ %3755, %3727 ]
  %3761 = phi i8 [ %3747, %3757 ], [ %3753, %3727 ]
  %3762 = phi i8 [ %3749, %3757 ], [ %3751, %3727 ]
  %3763 = phi i8 [ %3751, %3757 ], [ %3749, %3727 ]
  %3764 = phi i8 [ %3753, %3757 ], [ %3747, %3727 ]
  %3765 = phi i8 [ %3755, %3757 ], [ %3745, %3727 ]
  %3766 = phi i8 [ %3756, %3757 ], [ %3743, %3727 ]
  store i8 %3759, ptr %3729, align 1, !alias.scope !271, !noalias !197
  %3767 = getelementptr inbounds i8, ptr %3729, i64 1
  store i8 %3760, ptr %3767, align 1, !alias.scope !271, !noalias !197
  %3768 = getelementptr inbounds i8, ptr %3729, i64 2
  store i8 %3761, ptr %3768, align 1, !alias.scope !271, !noalias !197
  %3769 = getelementptr inbounds i8, ptr %3729, i64 3
  store i8 %3762, ptr %3769, align 1, !alias.scope !271, !noalias !197
  %3770 = getelementptr inbounds i8, ptr %3729, i64 4
  store i8 %3763, ptr %3770, align 1, !alias.scope !271, !noalias !197
  %3771 = getelementptr inbounds i8, ptr %3729, i64 5
  store i8 %3764, ptr %3771, align 1, !alias.scope !271, !noalias !197
  %3772 = getelementptr inbounds i8, ptr %3729, i64 6
  store i8 %3765, ptr %3772, align 1, !alias.scope !271, !noalias !197
  %3773 = getelementptr inbounds i8, ptr %3729, i64 7
  store i8 %3766, ptr %3773, align 1, !alias.scope !271, !noalias !197
  %3774 = getelementptr inbounds i8, ptr %3729, i64 8
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %64) #6, !noalias !270
  %3775 = getelementptr inbounds %struct._PixelPacket, ptr %3728, i64 0, i32 1
  %3776 = load i16, ptr %3775, align 2, !tbaa !30, !alias.scope !197, !noalias !200
  %3777 = uitofp i16 %3776 to double
  call void @llvm.experimental.noalias.scope.decl(metadata !272)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %63) #6, !noalias !275
  %3778 = call ptr @ResetMagickMemory(ptr noundef nonnull %63, i32 noundef 0, i64 noundef 8) #6, !noalias !272
  %3779 = load double, ptr %3723, align 8, !tbaa !59, !noalias !275
  %3780 = fmul fast double %3779, %3777
  %3781 = load double, ptr %3724, align 8, !tbaa !60, !noalias !275
  %3782 = fadd fast double %3780, %3781
  %3783 = load i32, ptr %3725, align 8, !tbaa !51, !noalias !275
  %3784 = icmp eq i32 %3783, 1
  %3785 = bitcast double %3782 to i64
  %3786 = lshr i64 %3785, 56
  %3787 = trunc i64 %3786 to i8
  %3788 = lshr i64 %3785, 48
  %3789 = trunc i64 %3788 to i8
  %3790 = lshr i64 %3785, 40
  %3791 = trunc i64 %3790 to i8
  %3792 = lshr i64 %3785, 32
  %3793 = trunc i64 %3792 to i8
  %3794 = lshr i64 %3785, 24
  %3795 = trunc i64 %3794 to i8
  %3796 = lshr i64 %3785, 16
  %3797 = trunc i64 %3796 to i8
  %3798 = lshr i64 %3785, 8
  %3799 = trunc i64 %3798 to i8
  %3800 = trunc i64 %3785 to i8
  br i1 %3784, label %3802, label %3801

3801:                                             ; preds = %3758
  br label %3802

3802:                                             ; preds = %3801, %3758
  %3803 = phi i8 [ %3787, %3801 ], [ %3800, %3758 ]
  %3804 = phi i8 [ %3789, %3801 ], [ %3799, %3758 ]
  %3805 = phi i8 [ %3791, %3801 ], [ %3797, %3758 ]
  %3806 = phi i8 [ %3793, %3801 ], [ %3795, %3758 ]
  %3807 = phi i8 [ %3795, %3801 ], [ %3793, %3758 ]
  %3808 = phi i8 [ %3797, %3801 ], [ %3791, %3758 ]
  %3809 = phi i8 [ %3799, %3801 ], [ %3789, %3758 ]
  %3810 = phi i8 [ %3800, %3801 ], [ %3787, %3758 ]
  store i8 %3803, ptr %3774, align 1, !alias.scope !276, !noalias !197
  %3811 = getelementptr inbounds i8, ptr %3729, i64 9
  store i8 %3804, ptr %3811, align 1, !alias.scope !276, !noalias !197
  %3812 = getelementptr inbounds i8, ptr %3729, i64 10
  store i8 %3805, ptr %3812, align 1, !alias.scope !276, !noalias !197
  %3813 = getelementptr inbounds i8, ptr %3729, i64 11
  store i8 %3806, ptr %3813, align 1, !alias.scope !276, !noalias !197
  %3814 = getelementptr inbounds i8, ptr %3729, i64 12
  store i8 %3807, ptr %3814, align 1, !alias.scope !276, !noalias !197
  %3815 = getelementptr inbounds i8, ptr %3729, i64 13
  store i8 %3808, ptr %3815, align 1, !alias.scope !276, !noalias !197
  %3816 = getelementptr inbounds i8, ptr %3729, i64 14
  store i8 %3809, ptr %3816, align 1, !alias.scope !276, !noalias !197
  %3817 = getelementptr inbounds i8, ptr %3729, i64 15
  store i8 %3810, ptr %3817, align 1, !alias.scope !276, !noalias !197
  %3818 = getelementptr inbounds i8, ptr %3729, i64 16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %63) #6, !noalias !275
  %3819 = load i16, ptr %3728, align 2, !tbaa !31, !alias.scope !197, !noalias !200
  %3820 = uitofp i16 %3819 to double
  call void @llvm.experimental.noalias.scope.decl(metadata !277)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %62) #6, !noalias !280
  %3821 = call ptr @ResetMagickMemory(ptr noundef nonnull %62, i32 noundef 0, i64 noundef 8) #6, !noalias !277
  %3822 = load double, ptr %3723, align 8, !tbaa !59, !noalias !280
  %3823 = fmul fast double %3822, %3820
  %3824 = load double, ptr %3724, align 8, !tbaa !60, !noalias !280
  %3825 = fadd fast double %3823, %3824
  %3826 = load i32, ptr %3725, align 8, !tbaa !51, !noalias !280
  %3827 = icmp eq i32 %3826, 1
  %3828 = bitcast double %3825 to i64
  %3829 = lshr i64 %3828, 56
  %3830 = trunc i64 %3829 to i8
  %3831 = lshr i64 %3828, 48
  %3832 = trunc i64 %3831 to i8
  %3833 = lshr i64 %3828, 40
  %3834 = trunc i64 %3833 to i8
  %3835 = lshr i64 %3828, 32
  %3836 = trunc i64 %3835 to i8
  %3837 = lshr i64 %3828, 24
  %3838 = trunc i64 %3837 to i8
  %3839 = lshr i64 %3828, 16
  %3840 = trunc i64 %3839 to i8
  %3841 = lshr i64 %3828, 8
  %3842 = trunc i64 %3841 to i8
  %3843 = trunc i64 %3828 to i8
  br i1 %3827, label %3845, label %3844

3844:                                             ; preds = %3802
  br label %3845

3845:                                             ; preds = %3844, %3802
  %3846 = phi i8 [ %3830, %3844 ], [ %3843, %3802 ]
  %3847 = phi i8 [ %3832, %3844 ], [ %3842, %3802 ]
  %3848 = phi i8 [ %3834, %3844 ], [ %3840, %3802 ]
  %3849 = phi i8 [ %3836, %3844 ], [ %3838, %3802 ]
  %3850 = phi i8 [ %3838, %3844 ], [ %3836, %3802 ]
  %3851 = phi i8 [ %3840, %3844 ], [ %3834, %3802 ]
  %3852 = phi i8 [ %3842, %3844 ], [ %3832, %3802 ]
  %3853 = phi i8 [ %3843, %3844 ], [ %3830, %3802 ]
  store i8 %3846, ptr %3818, align 1, !alias.scope !281, !noalias !197
  %3854 = getelementptr inbounds i8, ptr %3729, i64 17
  store i8 %3847, ptr %3854, align 1, !alias.scope !281, !noalias !197
  %3855 = getelementptr inbounds i8, ptr %3729, i64 18
  store i8 %3848, ptr %3855, align 1, !alias.scope !281, !noalias !197
  %3856 = getelementptr inbounds i8, ptr %3729, i64 19
  store i8 %3849, ptr %3856, align 1, !alias.scope !281, !noalias !197
  %3857 = getelementptr inbounds i8, ptr %3729, i64 20
  store i8 %3850, ptr %3857, align 1, !alias.scope !281, !noalias !197
  %3858 = getelementptr inbounds i8, ptr %3729, i64 21
  store i8 %3851, ptr %3858, align 1, !alias.scope !281, !noalias !197
  %3859 = getelementptr inbounds i8, ptr %3729, i64 22
  store i8 %3852, ptr %3859, align 1, !alias.scope !281, !noalias !197
  %3860 = getelementptr inbounds i8, ptr %3729, i64 23
  store i8 %3853, ptr %3860, align 1, !alias.scope !281, !noalias !197
  %3861 = getelementptr inbounds i8, ptr %3729, i64 24
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %62) #6, !noalias !280
  %3862 = getelementptr inbounds %struct._PixelPacket, ptr %3728, i64 0, i32 3
  %3863 = load i16, ptr %3862, align 2, !tbaa !28, !alias.scope !197, !noalias !200
  %3864 = xor i16 %3863, -1
  %3865 = uitofp i16 %3864 to double
  call void @llvm.experimental.noalias.scope.decl(metadata !282)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %61) #6, !noalias !285
  %3866 = call ptr @ResetMagickMemory(ptr noundef nonnull %61, i32 noundef 0, i64 noundef 8) #6, !noalias !282
  %3867 = load double, ptr %3723, align 8, !tbaa !59, !noalias !285
  %3868 = fmul fast double %3867, %3865
  %3869 = load double, ptr %3724, align 8, !tbaa !60, !noalias !285
  %3870 = fadd fast double %3868, %3869
  %3871 = load i32, ptr %3725, align 8, !tbaa !51, !noalias !285
  %3872 = icmp eq i32 %3871, 1
  %3873 = bitcast double %3870 to i64
  %3874 = lshr i64 %3873, 56
  %3875 = trunc i64 %3874 to i8
  %3876 = lshr i64 %3873, 48
  %3877 = trunc i64 %3876 to i8
  %3878 = lshr i64 %3873, 40
  %3879 = trunc i64 %3878 to i8
  %3880 = lshr i64 %3873, 32
  %3881 = trunc i64 %3880 to i8
  %3882 = lshr i64 %3873, 24
  %3883 = trunc i64 %3882 to i8
  %3884 = lshr i64 %3873, 16
  %3885 = trunc i64 %3884 to i8
  %3886 = lshr i64 %3873, 8
  %3887 = trunc i64 %3886 to i8
  %3888 = trunc i64 %3873 to i8
  br i1 %3872, label %3890, label %3889

3889:                                             ; preds = %3845
  br label %3890

3890:                                             ; preds = %3889, %3845
  %3891 = phi i8 [ %3875, %3889 ], [ %3888, %3845 ]
  %3892 = phi i8 [ %3877, %3889 ], [ %3887, %3845 ]
  %3893 = phi i8 [ %3879, %3889 ], [ %3885, %3845 ]
  %3894 = phi i8 [ %3881, %3889 ], [ %3883, %3845 ]
  %3895 = phi i8 [ %3883, %3889 ], [ %3881, %3845 ]
  %3896 = phi i8 [ %3885, %3889 ], [ %3879, %3845 ]
  %3897 = phi i8 [ %3887, %3889 ], [ %3877, %3845 ]
  %3898 = phi i8 [ %3888, %3889 ], [ %3875, %3845 ]
  store i8 %3891, ptr %3861, align 1, !alias.scope !286, !noalias !197
  %3899 = getelementptr inbounds i8, ptr %3729, i64 25
  store i8 %3892, ptr %3899, align 1, !alias.scope !286, !noalias !197
  %3900 = getelementptr inbounds i8, ptr %3729, i64 26
  store i8 %3893, ptr %3900, align 1, !alias.scope !286, !noalias !197
  %3901 = getelementptr inbounds i8, ptr %3729, i64 27
  store i8 %3894, ptr %3901, align 1, !alias.scope !286, !noalias !197
  %3902 = getelementptr inbounds i8, ptr %3729, i64 28
  store i8 %3895, ptr %3902, align 1, !alias.scope !286, !noalias !197
  %3903 = getelementptr inbounds i8, ptr %3729, i64 29
  store i8 %3896, ptr %3903, align 1, !alias.scope !286, !noalias !197
  %3904 = getelementptr inbounds i8, ptr %3729, i64 30
  store i8 %3897, ptr %3904, align 1, !alias.scope !286, !noalias !197
  %3905 = getelementptr inbounds i8, ptr %3729, i64 31
  store i8 %3898, ptr %3905, align 1, !alias.scope !286, !noalias !197
  %3906 = getelementptr inbounds i8, ptr %3729, i64 32
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %61) #6, !noalias !285
  %3907 = getelementptr inbounds %struct._PixelPacket, ptr %3728, i64 1
  %3908 = load i64, ptr %3726, align 8, !tbaa !47, !noalias !202
  %3909 = getelementptr inbounds i8, ptr %3906, i64 %3908
  %3910 = add nuw nsw i64 %3730, 1
  %3911 = icmp eq i64 %3910, %164
  br i1 %3911, label %17787, label %3727, !llvm.loop !287

3912:                                             ; preds = %3716, %2391
  %3913 = icmp sgt i64 %164, 0
  br i1 %3913, label %3914, label %17787

3914:                                             ; preds = %3912
  %3915 = add i64 %2392, -1
  %3916 = shl i64 2, %3915
  %3917 = add i64 %3916, -1
  %3918 = uitofp i64 %3917 to float
  %3919 = fmul fast float %3918, 0x3EF0001000000000
  %3920 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 14, i32 2
  %3921 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %3922 = load i64, ptr %3920, align 8, !tbaa !69, !noalias !202
  %3923 = icmp sgt i64 %2392, 0
  %3924 = load i64, ptr %3921, align 8, !tbaa !47, !noalias !202
  br label %3925

3925:                                             ; preds = %4087, %3914
  %3926 = phi i64 [ %3922, %3914 ], [ %4088, %4087 ]
  %3927 = phi ptr [ %166, %3914 ], [ %4090, %4087 ]
  %3928 = phi ptr [ %88, %3914 ], [ %4091, %4087 ]
  %3929 = phi i64 [ 0, %3914 ], [ %4092, %4087 ]
  %3930 = load i16, ptr %3927, align 2, !tbaa !31, !alias.scope !197, !noalias !200
  %3931 = uitofp i16 %3930 to float
  %3932 = fmul fast float %3919, %3931
  %3933 = fpext float %3932 to double
  %3934 = fadd fast double %3933, 5.000000e-01
  %3935 = fptoui double %3934 to i64
  tail call void @llvm.experimental.noalias.scope.decl(metadata !288)
  %3936 = icmp eq i64 %3926, 0
  br i1 %3936, label %3937, label %3938

3937:                                             ; preds = %3925
  store i64 8, ptr %3920, align 8, !tbaa !69, !noalias !291
  br label %3938

3938:                                             ; preds = %3937, %3925
  %3939 = phi i64 [ 8, %3937 ], [ %3926, %3925 ]
  br i1 %3923, label %3940, label %3966

3940:                                             ; preds = %3938, %3950
  %3941 = phi i64 [ %3961, %3950 ], [ %3939, %3938 ]
  %3942 = phi i64 [ %3946, %3950 ], [ %2392, %3938 ]
  %3943 = phi ptr [ %3963, %3950 ], [ %3928, %3938 ]
  %3944 = tail call i64 @llvm.umin.i64(i64 %3942, i64 %3941)
  %3945 = sub nsw i64 %3942, %3944
  %3946 = tail call i64 @llvm.smax.i64(i64 %3945, i64 0)
  %3947 = icmp eq i64 %3941, 8
  br i1 %3947, label %3950, label %3948

3948:                                             ; preds = %3940
  %3949 = load i8, ptr %3943, align 1, !tbaa !48, !alias.scope !292, !noalias !197
  br label %3950

3950:                                             ; preds = %3948, %3940
  %3951 = phi i8 [ %3949, %3948 ], [ 0, %3940 ]
  %3952 = sub i64 %3941, %3944
  %3953 = lshr i64 %3935, %3946
  %3954 = shl nsw i64 -1, %3944
  %3955 = xor i64 %3954, -1
  %3956 = and i64 %3953, %3955
  %3957 = shl i64 %3956, %3952
  %3958 = trunc i64 %3957 to i8
  %3959 = or i8 %3951, %3958
  store i8 %3959, ptr %3943, align 1, !tbaa !48, !alias.scope !292, !noalias !197
  %3960 = icmp ule i64 %3941, %3942
  %3961 = select i1 %3960, i64 8, i64 %3952
  %3962 = zext i1 %3960 to i64
  %3963 = getelementptr inbounds i8, ptr %3943, i64 %3962
  %3964 = icmp slt i64 %3945, 1
  br i1 %3964, label %3965, label %3940, !llvm.loop !75

3965:                                             ; preds = %3950
  store i64 %3961, ptr %3920, align 8, !tbaa !69, !noalias !291
  br label %3966

3966:                                             ; preds = %3965, %3938
  %3967 = phi i64 [ %3939, %3938 ], [ %3961, %3965 ]
  %3968 = phi ptr [ %3928, %3938 ], [ %3963, %3965 ]
  %3969 = getelementptr inbounds %struct._PixelPacket, ptr %3927, i64 0, i32 1
  %3970 = load i16, ptr %3969, align 2, !tbaa !30, !alias.scope !197, !noalias !200
  %3971 = uitofp i16 %3970 to float
  %3972 = fmul fast float %3919, %3971
  %3973 = fpext float %3972 to double
  %3974 = fadd fast double %3973, 5.000000e-01
  %3975 = fptoui double %3974 to i64
  tail call void @llvm.experimental.noalias.scope.decl(metadata !293)
  %3976 = icmp eq i64 %3967, 0
  br i1 %3976, label %3977, label %3978

3977:                                             ; preds = %3966
  store i64 8, ptr %3920, align 8, !tbaa !69, !noalias !296
  br label %3978

3978:                                             ; preds = %3977, %3966
  %3979 = phi i64 [ 8, %3977 ], [ %3967, %3966 ]
  br i1 %3923, label %3980, label %4006

3980:                                             ; preds = %3978, %3990
  %3981 = phi i64 [ %4001, %3990 ], [ %3979, %3978 ]
  %3982 = phi i64 [ %3986, %3990 ], [ %2392, %3978 ]
  %3983 = phi ptr [ %4003, %3990 ], [ %3968, %3978 ]
  %3984 = tail call i64 @llvm.umin.i64(i64 %3982, i64 %3981)
  %3985 = sub nsw i64 %3982, %3984
  %3986 = tail call i64 @llvm.smax.i64(i64 %3985, i64 0)
  %3987 = icmp eq i64 %3981, 8
  br i1 %3987, label %3990, label %3988

3988:                                             ; preds = %3980
  %3989 = load i8, ptr %3983, align 1, !tbaa !48, !alias.scope !297, !noalias !197
  br label %3990

3990:                                             ; preds = %3988, %3980
  %3991 = phi i8 [ %3989, %3988 ], [ 0, %3980 ]
  %3992 = sub i64 %3981, %3984
  %3993 = lshr i64 %3975, %3986
  %3994 = shl nsw i64 -1, %3984
  %3995 = xor i64 %3994, -1
  %3996 = and i64 %3993, %3995
  %3997 = shl i64 %3996, %3992
  %3998 = trunc i64 %3997 to i8
  %3999 = or i8 %3991, %3998
  store i8 %3999, ptr %3983, align 1, !tbaa !48, !alias.scope !297, !noalias !197
  %4000 = icmp ule i64 %3981, %3982
  %4001 = select i1 %4000, i64 8, i64 %3992
  %4002 = zext i1 %4000 to i64
  %4003 = getelementptr inbounds i8, ptr %3983, i64 %4002
  %4004 = icmp slt i64 %3985, 1
  br i1 %4004, label %4005, label %3980, !llvm.loop !75

4005:                                             ; preds = %3990
  store i64 %4001, ptr %3920, align 8, !tbaa !69, !noalias !296
  br label %4006

4006:                                             ; preds = %4005, %3978
  %4007 = phi i64 [ %3979, %3978 ], [ %4001, %4005 ]
  %4008 = phi ptr [ %3968, %3978 ], [ %4003, %4005 ]
  %4009 = getelementptr inbounds %struct._PixelPacket, ptr %3927, i64 0, i32 2
  %4010 = load i16, ptr %4009, align 2, !tbaa !29, !alias.scope !197, !noalias !200
  %4011 = uitofp i16 %4010 to float
  %4012 = fmul fast float %3919, %4011
  %4013 = fpext float %4012 to double
  %4014 = fadd fast double %4013, 5.000000e-01
  %4015 = fptoui double %4014 to i64
  tail call void @llvm.experimental.noalias.scope.decl(metadata !298)
  %4016 = icmp eq i64 %4007, 0
  br i1 %4016, label %4017, label %4018

4017:                                             ; preds = %4006
  store i64 8, ptr %3920, align 8, !tbaa !69, !noalias !301
  br label %4018

4018:                                             ; preds = %4017, %4006
  %4019 = phi i64 [ 8, %4017 ], [ %4007, %4006 ]
  br i1 %3923, label %4020, label %4046

4020:                                             ; preds = %4018, %4030
  %4021 = phi i64 [ %4041, %4030 ], [ %4019, %4018 ]
  %4022 = phi i64 [ %4026, %4030 ], [ %2392, %4018 ]
  %4023 = phi ptr [ %4043, %4030 ], [ %4008, %4018 ]
  %4024 = tail call i64 @llvm.umin.i64(i64 %4022, i64 %4021)
  %4025 = sub nsw i64 %4022, %4024
  %4026 = tail call i64 @llvm.smax.i64(i64 %4025, i64 0)
  %4027 = icmp eq i64 %4021, 8
  br i1 %4027, label %4030, label %4028

4028:                                             ; preds = %4020
  %4029 = load i8, ptr %4023, align 1, !tbaa !48, !alias.scope !302, !noalias !197
  br label %4030

4030:                                             ; preds = %4028, %4020
  %4031 = phi i8 [ %4029, %4028 ], [ 0, %4020 ]
  %4032 = sub i64 %4021, %4024
  %4033 = lshr i64 %4015, %4026
  %4034 = shl nsw i64 -1, %4024
  %4035 = xor i64 %4034, -1
  %4036 = and i64 %4033, %4035
  %4037 = shl i64 %4036, %4032
  %4038 = trunc i64 %4037 to i8
  %4039 = or i8 %4031, %4038
  store i8 %4039, ptr %4023, align 1, !tbaa !48, !alias.scope !302, !noalias !197
  %4040 = icmp ule i64 %4021, %4022
  %4041 = select i1 %4040, i64 8, i64 %4032
  %4042 = zext i1 %4040 to i64
  %4043 = getelementptr inbounds i8, ptr %4023, i64 %4042
  %4044 = icmp slt i64 %4025, 1
  br i1 %4044, label %4045, label %4020, !llvm.loop !75

4045:                                             ; preds = %4030
  store i64 %4041, ptr %3920, align 8, !tbaa !69, !noalias !301
  br label %4046

4046:                                             ; preds = %4045, %4018
  %4047 = phi i64 [ %4019, %4018 ], [ %4041, %4045 ]
  %4048 = phi ptr [ %4008, %4018 ], [ %4043, %4045 ]
  %4049 = getelementptr inbounds %struct._PixelPacket, ptr %3927, i64 0, i32 3
  %4050 = load i16, ptr %4049, align 2, !tbaa !28, !alias.scope !197, !noalias !200
  %4051 = xor i16 %4050, -1
  %4052 = uitofp i16 %4051 to float
  %4053 = fmul fast float %3919, %4052
  %4054 = fpext float %4053 to double
  %4055 = fadd fast double %4054, 5.000000e-01
  %4056 = fptoui double %4055 to i64
  tail call void @llvm.experimental.noalias.scope.decl(metadata !303)
  %4057 = icmp eq i64 %4047, 0
  br i1 %4057, label %4058, label %4059

4058:                                             ; preds = %4046
  store i64 8, ptr %3920, align 8, !tbaa !69, !noalias !306
  br label %4059

4059:                                             ; preds = %4058, %4046
  %4060 = phi i64 [ 8, %4058 ], [ %4047, %4046 ]
  br i1 %3923, label %4061, label %4087

4061:                                             ; preds = %4059, %4071
  %4062 = phi i64 [ %4082, %4071 ], [ %4060, %4059 ]
  %4063 = phi i64 [ %4067, %4071 ], [ %2392, %4059 ]
  %4064 = phi ptr [ %4084, %4071 ], [ %4048, %4059 ]
  %4065 = tail call i64 @llvm.umin.i64(i64 %4063, i64 %4062)
  %4066 = sub nsw i64 %4063, %4065
  %4067 = tail call i64 @llvm.smax.i64(i64 %4066, i64 0)
  %4068 = icmp eq i64 %4062, 8
  br i1 %4068, label %4071, label %4069

4069:                                             ; preds = %4061
  %4070 = load i8, ptr %4064, align 1, !tbaa !48, !alias.scope !307, !noalias !197
  br label %4071

4071:                                             ; preds = %4069, %4061
  %4072 = phi i8 [ %4070, %4069 ], [ 0, %4061 ]
  %4073 = sub i64 %4062, %4065
  %4074 = lshr i64 %4056, %4067
  %4075 = shl nsw i64 -1, %4065
  %4076 = xor i64 %4075, -1
  %4077 = and i64 %4074, %4076
  %4078 = shl i64 %4077, %4073
  %4079 = trunc i64 %4078 to i8
  %4080 = or i8 %4072, %4079
  store i8 %4080, ptr %4064, align 1, !tbaa !48, !alias.scope !307, !noalias !197
  %4081 = icmp ule i64 %4062, %4063
  %4082 = select i1 %4081, i64 8, i64 %4073
  %4083 = zext i1 %4081 to i64
  %4084 = getelementptr inbounds i8, ptr %4064, i64 %4083
  %4085 = icmp slt i64 %4066, 1
  br i1 %4085, label %4086, label %4061, !llvm.loop !75

4086:                                             ; preds = %4071
  store i64 %4082, ptr %3920, align 8, !tbaa !69, !noalias !306
  br label %4087

4087:                                             ; preds = %4086, %4059
  %4088 = phi i64 [ %4060, %4059 ], [ %4082, %4086 ]
  %4089 = phi ptr [ %4048, %4059 ], [ %4084, %4086 ]
  %4090 = getelementptr inbounds %struct._PixelPacket, ptr %3927, i64 1
  %4091 = getelementptr inbounds i8, ptr %4089, i64 %3924
  %4092 = add nuw nsw i64 %3929, 1
  %4093 = icmp eq i64 %4092, %164
  br i1 %4093, label %17787, label %3925, !llvm.loop !308

4094:                                             ; preds = %256
  tail call void @llvm.experimental.noalias.scope.decl(metadata !309)
  tail call void @llvm.experimental.noalias.scope.decl(metadata !312)
  %4095 = getelementptr inbounds %struct._Image, ptr %0, i64 0, i32 1
  %4096 = load i32, ptr %4095, align 4, !tbaa !314, !noalias !315
  %4097 = icmp eq i32 %4096, 12
  br i1 %4097, label %4101, label %4098

4098:                                             ; preds = %4094
  %4099 = getelementptr inbounds %struct._Image, ptr %0, i64 0, i32 53
  %4100 = tail call i32 (ptr, ptr, ptr, i64, i32, ptr, ptr, ...) @ThrowMagickException(ptr noundef %5, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, i64 noundef 888, i32 noundef 465, ptr noundef nonnull @.str.3, ptr noundef nonnull @.str.4, ptr noundef nonnull %4099) #6, !noalias !309
  br label %17875

4101:                                             ; preds = %4094
  %4102 = load i64, ptr %2, align 8, !tbaa !45, !noalias !315
  %4103 = add i64 %4102, -8
  %4104 = tail call i64 @llvm.fshl.i64(i64 %4102, i64 %4103, i64 61)
  switch i64 %4104, label %4656 [
    i64 0, label %4105
    i64 1, label %4149
    i64 3, label %4387
    i64 7, label %4589
  ]

4105:                                             ; preds = %4101
  %4106 = icmp sgt i64 %164, 0
  br i1 %4106, label %4107, label %17875

4107:                                             ; preds = %4105
  %4108 = icmp eq ptr %165, null
  %4109 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %4110 = load i64, ptr %4109, align 8, !tbaa !47, !noalias !315
  %4111 = and i64 %164, 1
  %4112 = icmp eq i64 %164, 1
  br i1 %4112, label %17205, label %4113

4113:                                             ; preds = %4107
  %4114 = and i64 %164, -2
  br label %4115

4115:                                             ; preds = %4136, %4113
  %4116 = phi ptr [ %88, %4113 ], [ %4145, %4136 ]
  %4117 = phi i64 [ 0, %4113 ], [ %4146, %4136 ]
  %4118 = phi i64 [ 0, %4113 ], [ %4147, %4136 ]
  br i1 %4108, label %4122, label %4119

4119:                                             ; preds = %4115
  %4120 = getelementptr inbounds i16, ptr %165, i64 %4117
  %4121 = load i16, ptr %4120, align 2, !tbaa !37, !alias.scope !309, !noalias !312
  br label %4122

4122:                                             ; preds = %4119, %4115
  %4123 = phi i16 [ %4121, %4119 ], [ 0, %4115 ]
  %4124 = zext i16 %4123 to i64
  %4125 = add nuw nsw i64 %4124, 128
  %4126 = lshr i64 %4125, 8
  %4127 = sub nsw i64 %4125, %4126
  %4128 = lshr i64 %4127, 8
  %4129 = trunc i64 %4128 to i8
  %4130 = getelementptr inbounds i8, ptr %4116, i64 1
  store i8 %4129, ptr %4116, align 1, !tbaa !48, !alias.scope !312, !noalias !309
  %4131 = getelementptr inbounds i8, ptr %4130, i64 %4110
  br i1 %4108, label %4136, label %4132

4132:                                             ; preds = %4122
  %4133 = or i64 %4117, 1
  %4134 = getelementptr inbounds i16, ptr %165, i64 %4133
  %4135 = load i16, ptr %4134, align 2, !tbaa !37, !alias.scope !309, !noalias !312
  br label %4136

4136:                                             ; preds = %4132, %4122
  %4137 = phi i16 [ %4135, %4132 ], [ 0, %4122 ]
  %4138 = zext i16 %4137 to i64
  %4139 = add nuw nsw i64 %4138, 128
  %4140 = lshr i64 %4139, 8
  %4141 = sub nsw i64 %4139, %4140
  %4142 = lshr i64 %4141, 8
  %4143 = trunc i64 %4142 to i8
  %4144 = getelementptr inbounds i8, ptr %4131, i64 1
  store i8 %4143, ptr %4131, align 1, !tbaa !48, !alias.scope !312, !noalias !309
  %4145 = getelementptr inbounds i8, ptr %4144, i64 %4110
  %4146 = add nuw nsw i64 %4117, 2
  %4147 = add i64 %4118, 2
  %4148 = icmp eq i64 %4147, %4114
  br i1 %4148, label %17205, label %4115, !llvm.loop !316

4149:                                             ; preds = %4101
  %4150 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 2
  %4151 = load i32, ptr %4150, align 8, !tbaa !50, !noalias !315
  %4152 = icmp eq i32 %4151, 1
  %4153 = icmp sgt i64 %164, 0
  br i1 %4152, label %4253, label %4154

4154:                                             ; preds = %4149
  br i1 %4153, label %4155, label %17875

4155:                                             ; preds = %4154
  %4156 = icmp eq ptr %165, null
  %4157 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %4158 = load i64, ptr %4157, align 8, !tbaa !47, !noalias !315
  br i1 %4156, label %4159, label %4194

4159:                                             ; preds = %4155
  %4160 = add i64 %164, -1
  %4161 = and i64 %164, 7
  %4162 = icmp ult i64 %4160, 7
  br i1 %4162, label %17221, label %4163

4163:                                             ; preds = %4159
  %4164 = and i64 %164, -8
  br label %4165

4165:                                             ; preds = %4165, %4163
  %4166 = phi ptr [ %88, %4163 ], [ %4191, %4165 ]
  %4167 = phi i64 [ 0, %4163 ], [ %4192, %4165 ]
  store i8 0, ptr %4166, align 1, !alias.scope !312, !noalias !309
  %4168 = getelementptr inbounds i8, ptr %4166, i64 1
  store i8 0, ptr %4168, align 1, !alias.scope !312, !noalias !309
  %4169 = getelementptr inbounds i8, ptr %4166, i64 2
  %4170 = getelementptr inbounds i8, ptr %4169, i64 %4158
  store i8 0, ptr %4170, align 1, !alias.scope !312, !noalias !309
  %4171 = getelementptr inbounds i8, ptr %4170, i64 1
  store i8 0, ptr %4171, align 1, !alias.scope !312, !noalias !309
  %4172 = getelementptr inbounds i8, ptr %4170, i64 2
  %4173 = getelementptr inbounds i8, ptr %4172, i64 %4158
  store i8 0, ptr %4173, align 1, !alias.scope !312, !noalias !309
  %4174 = getelementptr inbounds i8, ptr %4173, i64 1
  store i8 0, ptr %4174, align 1, !alias.scope !312, !noalias !309
  %4175 = getelementptr inbounds i8, ptr %4173, i64 2
  %4176 = getelementptr inbounds i8, ptr %4175, i64 %4158
  store i8 0, ptr %4176, align 1, !alias.scope !312, !noalias !309
  %4177 = getelementptr inbounds i8, ptr %4176, i64 1
  store i8 0, ptr %4177, align 1, !alias.scope !312, !noalias !309
  %4178 = getelementptr inbounds i8, ptr %4176, i64 2
  %4179 = getelementptr inbounds i8, ptr %4178, i64 %4158
  store i8 0, ptr %4179, align 1, !alias.scope !312, !noalias !309
  %4180 = getelementptr inbounds i8, ptr %4179, i64 1
  store i8 0, ptr %4180, align 1, !alias.scope !312, !noalias !309
  %4181 = getelementptr inbounds i8, ptr %4179, i64 2
  %4182 = getelementptr inbounds i8, ptr %4181, i64 %4158
  store i8 0, ptr %4182, align 1, !alias.scope !312, !noalias !309
  %4183 = getelementptr inbounds i8, ptr %4182, i64 1
  store i8 0, ptr %4183, align 1, !alias.scope !312, !noalias !309
  %4184 = getelementptr inbounds i8, ptr %4182, i64 2
  %4185 = getelementptr inbounds i8, ptr %4184, i64 %4158
  store i8 0, ptr %4185, align 1, !alias.scope !312, !noalias !309
  %4186 = getelementptr inbounds i8, ptr %4185, i64 1
  store i8 0, ptr %4186, align 1, !alias.scope !312, !noalias !309
  %4187 = getelementptr inbounds i8, ptr %4185, i64 2
  %4188 = getelementptr inbounds i8, ptr %4187, i64 %4158
  store i8 0, ptr %4188, align 1, !alias.scope !312, !noalias !309
  %4189 = getelementptr inbounds i8, ptr %4188, i64 1
  store i8 0, ptr %4189, align 1, !alias.scope !312, !noalias !309
  %4190 = getelementptr inbounds i8, ptr %4188, i64 2
  %4191 = getelementptr inbounds i8, ptr %4190, i64 %4158
  %4192 = add i64 %4167, 8
  %4193 = icmp eq i64 %4192, %4164
  br i1 %4193, label %17221, label %4165, !llvm.loop !317

4194:                                             ; preds = %4155
  %4195 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %4196 = load i32, ptr %4195, align 8, !tbaa !51, !noalias !315
  %4197 = freeze i32 %4196
  %4198 = icmp eq i32 %4197, 1
  br i1 %4198, label %4205, label %4199

4199:                                             ; preds = %4194
  %4200 = add i64 %164, -1
  %4201 = and i64 %164, 3
  %4202 = icmp ult i64 %4200, 3
  br i1 %4202, label %17251, label %4203

4203:                                             ; preds = %4199
  %4204 = and i64 %164, -4
  br label %4345

4205:                                             ; preds = %4194
  %4206 = add i64 %164, -1
  %4207 = and i64 %164, 3
  %4208 = icmp ult i64 %4206, 3
  br i1 %4208, label %17232, label %4209

4209:                                             ; preds = %4205
  %4210 = and i64 %164, -4
  br label %4211

4211:                                             ; preds = %4211, %4209
  %4212 = phi ptr [ %88, %4209 ], [ %4249, %4211 ]
  %4213 = phi i64 [ 0, %4209 ], [ %4250, %4211 ]
  %4214 = phi i64 [ 0, %4209 ], [ %4251, %4211 ]
  %4215 = getelementptr inbounds i16, ptr %165, i64 %4213
  %4216 = load i16, ptr %4215, align 2, !tbaa !37, !alias.scope !309, !noalias !312
  %4217 = lshr i16 %4216, 8
  %4218 = trunc i16 %4217 to i8
  %4219 = trunc i16 %4216 to i8
  store i8 %4219, ptr %4212, align 1, !alias.scope !312, !noalias !309
  %4220 = getelementptr inbounds i8, ptr %4212, i64 1
  store i8 %4218, ptr %4220, align 1, !alias.scope !312, !noalias !309
  %4221 = getelementptr inbounds i8, ptr %4212, i64 2
  %4222 = getelementptr inbounds i8, ptr %4221, i64 %4158
  %4223 = or i64 %4213, 1
  %4224 = getelementptr inbounds i16, ptr %165, i64 %4223
  %4225 = load i16, ptr %4224, align 2, !tbaa !37, !alias.scope !309, !noalias !312
  %4226 = lshr i16 %4225, 8
  %4227 = trunc i16 %4226 to i8
  %4228 = trunc i16 %4225 to i8
  store i8 %4228, ptr %4222, align 1, !alias.scope !312, !noalias !309
  %4229 = getelementptr inbounds i8, ptr %4222, i64 1
  store i8 %4227, ptr %4229, align 1, !alias.scope !312, !noalias !309
  %4230 = getelementptr inbounds i8, ptr %4222, i64 2
  %4231 = getelementptr inbounds i8, ptr %4230, i64 %4158
  %4232 = or i64 %4213, 2
  %4233 = getelementptr inbounds i16, ptr %165, i64 %4232
  %4234 = load i16, ptr %4233, align 2, !tbaa !37, !alias.scope !309, !noalias !312
  %4235 = lshr i16 %4234, 8
  %4236 = trunc i16 %4235 to i8
  %4237 = trunc i16 %4234 to i8
  store i8 %4237, ptr %4231, align 1, !alias.scope !312, !noalias !309
  %4238 = getelementptr inbounds i8, ptr %4231, i64 1
  store i8 %4236, ptr %4238, align 1, !alias.scope !312, !noalias !309
  %4239 = getelementptr inbounds i8, ptr %4231, i64 2
  %4240 = getelementptr inbounds i8, ptr %4239, i64 %4158
  %4241 = or i64 %4213, 3
  %4242 = getelementptr inbounds i16, ptr %165, i64 %4241
  %4243 = load i16, ptr %4242, align 2, !tbaa !37, !alias.scope !309, !noalias !312
  %4244 = lshr i16 %4243, 8
  %4245 = trunc i16 %4244 to i8
  %4246 = trunc i16 %4243 to i8
  store i8 %4246, ptr %4240, align 1, !alias.scope !312, !noalias !309
  %4247 = getelementptr inbounds i8, ptr %4240, i64 1
  store i8 %4245, ptr %4247, align 1, !alias.scope !312, !noalias !309
  %4248 = getelementptr inbounds i8, ptr %4240, i64 2
  %4249 = getelementptr inbounds i8, ptr %4248, i64 %4158
  %4250 = add nuw nsw i64 %4213, 4
  %4251 = add i64 %4214, 4
  %4252 = icmp eq i64 %4251, %4210
  br i1 %4252, label %17232, label %4211, !llvm.loop !317

4253:                                             ; preds = %4149
  br i1 %4153, label %4254, label %17875

4254:                                             ; preds = %4253
  %4255 = icmp eq ptr %165, null
  %4256 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %4257 = load i32, ptr %4256, align 8, !tbaa !51, !noalias !315
  %4258 = icmp eq i32 %4257, 1
  %4259 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %4260 = load i64, ptr %4259, align 8, !tbaa !47, !noalias !315
  br label %4261

4261:                                             ; preds = %4333, %4254
  %4262 = phi ptr [ %88, %4254 ], [ %4342, %4333 ]
  %4263 = phi i64 [ 0, %4254 ], [ %4343, %4333 ]
  br i1 %4255, label %4268, label %4264

4264:                                             ; preds = %4261
  %4265 = getelementptr inbounds i16, ptr %165, i64 %4263
  %4266 = load i16, ptr %4265, align 2, !tbaa !37, !alias.scope !309, !noalias !312
  %4267 = zext i16 %4266 to i32
  br label %4268

4268:                                             ; preds = %4264, %4261
  %4269 = phi i32 [ %4267, %4264 ], [ 0, %4261 ]
  %4270 = sitofp i32 %4269 to double
  %4271 = fmul fast double %4270, 0x3EF0001000100010
  %4272 = fptrunc double %4271 to float
  %4273 = bitcast float %4272 to i32
  %4274 = lshr i32 %4273, 16
  %4275 = and i32 %4274, 32768
  %4276 = lshr i32 %4273, 23
  %4277 = and i32 %4276, 255
  %4278 = add nsw i32 %4277, -112
  %4279 = and i32 %4273, 8388607
  %4280 = icmp ult i32 %4277, 113
  br i1 %4280, label %4281, label %4298

4281:                                             ; preds = %4268
  %4282 = icmp ult i32 %4277, 102
  br i1 %4282, label %4295, label %4283

4283:                                             ; preds = %4281
  %4284 = or i32 %4279, 8388608
  %4285 = sub nuw nsw i32 126, %4277
  %4286 = sub nuw nsw i32 125, %4277
  %4287 = shl nsw i32 -1, %4286
  %4288 = xor i32 %4287, -1
  %4289 = add nuw nsw i32 %4284, %4288
  %4290 = lshr i32 %4284, %4285
  %4291 = and i32 %4290, 1
  %4292 = add nuw nsw i32 %4289, %4291
  %4293 = lshr i32 %4292, %4285
  %4294 = or i32 %4293, %4275
  br label %4295

4295:                                             ; preds = %4283, %4281
  %4296 = phi i32 [ %4294, %4283 ], [ %4275, %4281 ]
  %4297 = trunc i32 %4296 to i16
  br label %4333

4298:                                             ; preds = %4268
  %4299 = icmp eq i32 %4278, 143
  br i1 %4299, label %4300, label %4313

4300:                                             ; preds = %4298
  %4301 = icmp eq i32 %4279, 0
  br i1 %4301, label %4302, label %4305

4302:                                             ; preds = %4300
  %4303 = trunc i32 %4275 to i16
  %4304 = or i16 %4303, 31744
  br label %4333

4305:                                             ; preds = %4300
  %4306 = lshr i32 %4279, 13
  %4307 = icmp ult i32 %4279, 8192
  %4308 = zext i1 %4307 to i32
  %4309 = or i32 %4306, %4308
  %4310 = or i32 %4309, %4275
  %4311 = trunc i32 %4310 to i16
  %4312 = or i16 %4311, 31744
  br label %4333

4313:                                             ; preds = %4298
  %4314 = lshr i32 %4273, 13
  %4315 = and i32 %4314, 1
  %4316 = add nuw nsw i32 %4279, 4095
  %4317 = add nuw nsw i32 %4316, %4315
  %4318 = and i32 %4317, 8388608
  %4319 = icmp eq i32 %4318, 0
  %4320 = add nsw i32 %4277, -111
  %4321 = select i1 %4319, i32 %4278, i32 %4320
  %4322 = icmp ugt i32 %4321, 30
  br i1 %4322, label %4323, label %4326

4323:                                             ; preds = %4313
  %4324 = trunc i32 %4275 to i16
  %4325 = or i16 %4324, 31744
  br label %4333

4326:                                             ; preds = %4313
  %4327 = lshr i32 %4317, 13
  %4328 = shl nuw nsw i32 %4321, 10
  %4329 = select i1 %4319, i32 %4327, i32 0
  %4330 = or i32 %4329, %4328
  %4331 = or i32 %4330, %4275
  %4332 = trunc i32 %4331 to i16
  br label %4333

4333:                                             ; preds = %4326, %4323, %4305, %4302, %4295
  %4334 = phi i16 [ %4297, %4295 ], [ %4304, %4302 ], [ %4312, %4305 ], [ %4325, %4323 ], [ %4332, %4326 ]
  %4335 = lshr i16 %4334, 8
  %4336 = select i1 %4258, i16 %4334, i16 %4335
  %4337 = select i1 %4258, i16 %4335, i16 %4334
  %4338 = trunc i16 %4337 to i8
  %4339 = trunc i16 %4336 to i8
  store i8 %4339, ptr %4262, align 1, !alias.scope !312, !noalias !309
  %4340 = getelementptr inbounds i8, ptr %4262, i64 1
  store i8 %4338, ptr %4340, align 1, !alias.scope !312, !noalias !309
  %4341 = getelementptr inbounds i8, ptr %4262, i64 2
  %4342 = getelementptr inbounds i8, ptr %4341, i64 %4260
  %4343 = add nuw nsw i64 %4263, 1
  %4344 = icmp eq i64 %4343, %164
  br i1 %4344, label %17787, label %4261, !llvm.loop !318

4345:                                             ; preds = %4345, %4203
  %4346 = phi ptr [ %88, %4203 ], [ %4383, %4345 ]
  %4347 = phi i64 [ 0, %4203 ], [ %4384, %4345 ]
  %4348 = phi i64 [ 0, %4203 ], [ %4385, %4345 ]
  %4349 = getelementptr inbounds i16, ptr %165, i64 %4347
  %4350 = load i16, ptr %4349, align 2, !tbaa !37, !alias.scope !309, !noalias !312
  %4351 = lshr i16 %4350, 8
  %4352 = trunc i16 %4350 to i8
  %4353 = trunc i16 %4351 to i8
  store i8 %4353, ptr %4346, align 1, !alias.scope !312, !noalias !309
  %4354 = getelementptr inbounds i8, ptr %4346, i64 1
  store i8 %4352, ptr %4354, align 1, !alias.scope !312, !noalias !309
  %4355 = getelementptr inbounds i8, ptr %4346, i64 2
  %4356 = getelementptr inbounds i8, ptr %4355, i64 %4158
  %4357 = or i64 %4347, 1
  %4358 = getelementptr inbounds i16, ptr %165, i64 %4357
  %4359 = load i16, ptr %4358, align 2, !tbaa !37, !alias.scope !309, !noalias !312
  %4360 = lshr i16 %4359, 8
  %4361 = trunc i16 %4359 to i8
  %4362 = trunc i16 %4360 to i8
  store i8 %4362, ptr %4356, align 1, !alias.scope !312, !noalias !309
  %4363 = getelementptr inbounds i8, ptr %4356, i64 1
  store i8 %4361, ptr %4363, align 1, !alias.scope !312, !noalias !309
  %4364 = getelementptr inbounds i8, ptr %4356, i64 2
  %4365 = getelementptr inbounds i8, ptr %4364, i64 %4158
  %4366 = or i64 %4347, 2
  %4367 = getelementptr inbounds i16, ptr %165, i64 %4366
  %4368 = load i16, ptr %4367, align 2, !tbaa !37, !alias.scope !309, !noalias !312
  %4369 = lshr i16 %4368, 8
  %4370 = trunc i16 %4368 to i8
  %4371 = trunc i16 %4369 to i8
  store i8 %4371, ptr %4365, align 1, !alias.scope !312, !noalias !309
  %4372 = getelementptr inbounds i8, ptr %4365, i64 1
  store i8 %4370, ptr %4372, align 1, !alias.scope !312, !noalias !309
  %4373 = getelementptr inbounds i8, ptr %4365, i64 2
  %4374 = getelementptr inbounds i8, ptr %4373, i64 %4158
  %4375 = or i64 %4347, 3
  %4376 = getelementptr inbounds i16, ptr %165, i64 %4375
  %4377 = load i16, ptr %4376, align 2, !tbaa !37, !alias.scope !309, !noalias !312
  %4378 = lshr i16 %4377, 8
  %4379 = trunc i16 %4377 to i8
  %4380 = trunc i16 %4378 to i8
  store i8 %4380, ptr %4374, align 1, !alias.scope !312, !noalias !309
  %4381 = getelementptr inbounds i8, ptr %4374, i64 1
  store i8 %4379, ptr %4381, align 1, !alias.scope !312, !noalias !309
  %4382 = getelementptr inbounds i8, ptr %4374, i64 2
  %4383 = getelementptr inbounds i8, ptr %4382, i64 %4158
  %4384 = add nuw nsw i64 %4347, 4
  %4385 = add i64 %4348, 4
  %4386 = icmp eq i64 %4385, %4204
  br i1 %4386, label %17251, label %4345, !llvm.loop !317

4387:                                             ; preds = %4101
  %4388 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 2
  %4389 = load i32, ptr %4388, align 8, !tbaa !50, !noalias !315
  %4390 = icmp eq i32 %4389, 1
  %4391 = icmp sgt i64 %164, 0
  br i1 %4390, label %4504, label %4392

4392:                                             ; preds = %4387
  br i1 %4391, label %4393, label %17875

4393:                                             ; preds = %4392
  %4394 = icmp eq ptr %165, null
  %4395 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %4396 = load i32, ptr %4395, align 8, !tbaa !51, !noalias !315
  %4397 = icmp eq i32 %4396, 1
  %4398 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %4399 = load i64, ptr %4398, align 8, !tbaa !47, !noalias !315
  br i1 %4397, label %4400, label %4471

4400:                                             ; preds = %4393
  br i1 %4394, label %4406, label %4401

4401:                                             ; preds = %4400
  %4402 = and i64 %164, 1
  %4403 = icmp eq i64 %164, 1
  br i1 %4403, label %17280, label %4404

4404:                                             ; preds = %4401
  %4405 = and i64 %164, -2
  br label %4433

4406:                                             ; preds = %4400
  %4407 = add i64 %164, -1
  %4408 = and i64 %164, 7
  %4409 = icmp ult i64 %4407, 7
  br i1 %4409, label %17270, label %4410

4410:                                             ; preds = %4406
  %4411 = and i64 %164, -8
  br label %4412

4412:                                             ; preds = %4412, %4410
  %4413 = phi ptr [ %88, %4410 ], [ %4430, %4412 ]
  %4414 = phi i64 [ 0, %4410 ], [ %4431, %4412 ]
  %4415 = getelementptr inbounds i8, ptr %4413, i64 4
  %4416 = getelementptr inbounds i8, ptr %4415, i64 %4399
  store i32 0, ptr %4413, align 1, !alias.scope !312, !noalias !309
  %4417 = getelementptr inbounds i8, ptr %4416, i64 4
  %4418 = getelementptr inbounds i8, ptr %4417, i64 %4399
  store i32 0, ptr %4416, align 1, !alias.scope !312, !noalias !309
  %4419 = getelementptr inbounds i8, ptr %4418, i64 4
  %4420 = getelementptr inbounds i8, ptr %4419, i64 %4399
  store i32 0, ptr %4418, align 1, !alias.scope !312, !noalias !309
  %4421 = getelementptr inbounds i8, ptr %4420, i64 4
  %4422 = getelementptr inbounds i8, ptr %4421, i64 %4399
  store i32 0, ptr %4420, align 1, !alias.scope !312, !noalias !309
  %4423 = getelementptr inbounds i8, ptr %4422, i64 4
  %4424 = getelementptr inbounds i8, ptr %4423, i64 %4399
  store i32 0, ptr %4422, align 1, !alias.scope !312, !noalias !309
  %4425 = getelementptr inbounds i8, ptr %4424, i64 4
  %4426 = getelementptr inbounds i8, ptr %4425, i64 %4399
  store i32 0, ptr %4424, align 1, !alias.scope !312, !noalias !309
  %4427 = getelementptr inbounds i8, ptr %4426, i64 4
  %4428 = getelementptr inbounds i8, ptr %4427, i64 %4399
  store i32 0, ptr %4426, align 1, !alias.scope !312, !noalias !309
  %4429 = getelementptr inbounds i8, ptr %4428, i64 4
  %4430 = getelementptr inbounds i8, ptr %4429, i64 %4399
  store i32 0, ptr %4428, align 1, !alias.scope !312, !noalias !309
  %4431 = add i64 %4414, 8
  %4432 = icmp eq i64 %4431, %4411
  br i1 %4432, label %17270, label %4412, !llvm.loop !319

4433:                                             ; preds = %4433, %4404
  %4434 = phi ptr [ %88, %4404 ], [ %4467, %4433 ]
  %4435 = phi i64 [ 0, %4404 ], [ %4468, %4433 ]
  %4436 = phi i64 [ 0, %4404 ], [ %4469, %4433 ]
  %4437 = getelementptr inbounds i16, ptr %165, i64 %4435
  %4438 = load i16, ptr %4437, align 2, !tbaa !37, !alias.scope !309, !noalias !312
  %4439 = zext i16 %4438 to i32
  %4440 = mul nuw i32 %4439, 65537
  %4441 = lshr i32 %4440, 8
  %4442 = lshr i32 %4440, 24
  %4443 = trunc i32 %4442 to i8
  %4444 = trunc i16 %4438 to i8
  %4445 = trunc i32 %4441 to i8
  %4446 = trunc i32 %4440 to i8
  store i8 %4446, ptr %4434, align 1, !alias.scope !312, !noalias !309
  %4447 = getelementptr inbounds i8, ptr %4434, i64 1
  store i8 %4445, ptr %4447, align 1, !alias.scope !312, !noalias !309
  %4448 = getelementptr inbounds i8, ptr %4434, i64 2
  store i8 %4444, ptr %4448, align 1, !alias.scope !312, !noalias !309
  %4449 = getelementptr inbounds i8, ptr %4434, i64 3
  store i8 %4443, ptr %4449, align 1, !alias.scope !312, !noalias !309
  %4450 = getelementptr inbounds i8, ptr %4434, i64 4
  %4451 = getelementptr inbounds i8, ptr %4450, i64 %4399
  %4452 = or i64 %4435, 1
  %4453 = getelementptr inbounds i16, ptr %165, i64 %4452
  %4454 = load i16, ptr %4453, align 2, !tbaa !37, !alias.scope !309, !noalias !312
  %4455 = zext i16 %4454 to i32
  %4456 = mul nuw i32 %4455, 65537
  %4457 = lshr i32 %4456, 8
  %4458 = lshr i32 %4456, 24
  %4459 = trunc i32 %4458 to i8
  %4460 = trunc i16 %4454 to i8
  %4461 = trunc i32 %4457 to i8
  %4462 = trunc i32 %4456 to i8
  store i8 %4462, ptr %4451, align 1, !alias.scope !312, !noalias !309
  %4463 = getelementptr inbounds i8, ptr %4451, i64 1
  store i8 %4461, ptr %4463, align 1, !alias.scope !312, !noalias !309
  %4464 = getelementptr inbounds i8, ptr %4451, i64 2
  store i8 %4460, ptr %4464, align 1, !alias.scope !312, !noalias !309
  %4465 = getelementptr inbounds i8, ptr %4451, i64 3
  store i8 %4459, ptr %4465, align 1, !alias.scope !312, !noalias !309
  %4466 = getelementptr inbounds i8, ptr %4451, i64 4
  %4467 = getelementptr inbounds i8, ptr %4466, i64 %4399
  %4468 = add nuw nsw i64 %4435, 2
  %4469 = add i64 %4436, 2
  %4470 = icmp eq i64 %4469, %4405
  br i1 %4470, label %17280, label %4433, !llvm.loop !319

4471:                                             ; preds = %4393
  br i1 %4394, label %4477, label %4472

4472:                                             ; preds = %4471
  %4473 = and i64 %164, 1
  %4474 = icmp eq i64 %164, 1
  br i1 %4474, label %17308, label %4475

4475:                                             ; preds = %4472
  %4476 = and i64 %164, -2
  br label %4551

4477:                                             ; preds = %4471
  %4478 = add i64 %164, -1
  %4479 = and i64 %164, 7
  %4480 = icmp ult i64 %4478, 7
  br i1 %4480, label %17298, label %4481

4481:                                             ; preds = %4477
  %4482 = and i64 %164, -8
  br label %4483

4483:                                             ; preds = %4483, %4481
  %4484 = phi ptr [ %88, %4481 ], [ %4501, %4483 ]
  %4485 = phi i64 [ 0, %4481 ], [ %4502, %4483 ]
  %4486 = getelementptr inbounds i8, ptr %4484, i64 4
  %4487 = getelementptr inbounds i8, ptr %4486, i64 %4399
  store i32 0, ptr %4484, align 1, !alias.scope !312, !noalias !309
  %4488 = getelementptr inbounds i8, ptr %4487, i64 4
  %4489 = getelementptr inbounds i8, ptr %4488, i64 %4399
  store i32 0, ptr %4487, align 1, !alias.scope !312, !noalias !309
  %4490 = getelementptr inbounds i8, ptr %4489, i64 4
  %4491 = getelementptr inbounds i8, ptr %4490, i64 %4399
  store i32 0, ptr %4489, align 1, !alias.scope !312, !noalias !309
  %4492 = getelementptr inbounds i8, ptr %4491, i64 4
  %4493 = getelementptr inbounds i8, ptr %4492, i64 %4399
  store i32 0, ptr %4491, align 1, !alias.scope !312, !noalias !309
  %4494 = getelementptr inbounds i8, ptr %4493, i64 4
  %4495 = getelementptr inbounds i8, ptr %4494, i64 %4399
  store i32 0, ptr %4493, align 1, !alias.scope !312, !noalias !309
  %4496 = getelementptr inbounds i8, ptr %4495, i64 4
  %4497 = getelementptr inbounds i8, ptr %4496, i64 %4399
  store i32 0, ptr %4495, align 1, !alias.scope !312, !noalias !309
  %4498 = getelementptr inbounds i8, ptr %4497, i64 4
  %4499 = getelementptr inbounds i8, ptr %4498, i64 %4399
  store i32 0, ptr %4497, align 1, !alias.scope !312, !noalias !309
  %4500 = getelementptr inbounds i8, ptr %4499, i64 4
  %4501 = getelementptr inbounds i8, ptr %4500, i64 %4399
  store i32 0, ptr %4499, align 1, !alias.scope !312, !noalias !309
  %4502 = add i64 %4485, 8
  %4503 = icmp eq i64 %4502, %4482
  br i1 %4503, label %17298, label %4483, !llvm.loop !319

4504:                                             ; preds = %4387
  br i1 %4391, label %4505, label %17875

4505:                                             ; preds = %4504
  %4506 = icmp eq ptr %165, null
  %4507 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 14
  %4508 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 3
  %4509 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %4510 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  br label %4511

4511:                                             ; preds = %4538, %4505
  %4512 = phi ptr [ %88, %4505 ], [ %4548, %4538 ]
  %4513 = phi i64 [ 0, %4505 ], [ %4549, %4538 ]
  br i1 %4506, label %4518, label %4514

4514:                                             ; preds = %4511
  %4515 = getelementptr inbounds i16, ptr %165, i64 %4513
  %4516 = load i16, ptr %4515, align 2, !tbaa !37, !alias.scope !309, !noalias !312
  %4517 = zext i16 %4516 to i32
  br label %4518

4518:                                             ; preds = %4514, %4511
  %4519 = phi i32 [ %4517, %4514 ], [ 0, %4511 ]
  call void @llvm.experimental.noalias.scope.decl(metadata !320)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %60) #6, !noalias !323
  %4520 = call ptr @ResetMagickMemory(ptr noundef nonnull %60, i32 noundef 0, i64 noundef 4) #6, !noalias !320
  %4521 = sitofp i32 %4519 to double
  %4522 = load double, ptr %4507, align 8, !tbaa !59, !noalias !323
  %4523 = fmul fast double %4522, %4521
  %4524 = load double, ptr %4508, align 8, !tbaa !60, !noalias !323
  %4525 = fadd fast double %4523, %4524
  %4526 = fptrunc double %4525 to float
  %4527 = load i32, ptr %4509, align 8, !tbaa !51, !noalias !323
  %4528 = icmp eq i32 %4527, 1
  %4529 = bitcast float %4526 to i32
  %4530 = lshr i32 %4529, 24
  %4531 = trunc i32 %4530 to i8
  %4532 = lshr i32 %4529, 16
  %4533 = trunc i32 %4532 to i8
  %4534 = lshr i32 %4529, 8
  %4535 = trunc i32 %4534 to i8
  %4536 = trunc i32 %4529 to i8
  br i1 %4528, label %4538, label %4537

4537:                                             ; preds = %4518
  br label %4538

4538:                                             ; preds = %4537, %4518
  %4539 = phi i8 [ %4531, %4537 ], [ %4536, %4518 ]
  %4540 = phi i8 [ %4533, %4537 ], [ %4535, %4518 ]
  %4541 = phi i8 [ %4535, %4537 ], [ %4533, %4518 ]
  %4542 = phi i8 [ %4536, %4537 ], [ %4531, %4518 ]
  store i8 %4539, ptr %4512, align 1, !alias.scope !324, !noalias !309
  %4543 = getelementptr inbounds i8, ptr %4512, i64 1
  store i8 %4540, ptr %4543, align 1, !alias.scope !324, !noalias !309
  %4544 = getelementptr inbounds i8, ptr %4512, i64 2
  store i8 %4541, ptr %4544, align 1, !alias.scope !324, !noalias !309
  %4545 = getelementptr inbounds i8, ptr %4512, i64 3
  store i8 %4542, ptr %4545, align 1, !alias.scope !324, !noalias !309
  %4546 = getelementptr inbounds i8, ptr %4512, i64 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %60) #6, !noalias !323
  %4547 = load i64, ptr %4510, align 8, !tbaa !47, !noalias !315
  %4548 = getelementptr inbounds i8, ptr %4546, i64 %4547
  %4549 = add nuw nsw i64 %4513, 1
  %4550 = icmp eq i64 %4549, %164
  br i1 %4550, label %17787, label %4511, !llvm.loop !325

4551:                                             ; preds = %4551, %4475
  %4552 = phi ptr [ %88, %4475 ], [ %4585, %4551 ]
  %4553 = phi i64 [ 0, %4475 ], [ %4586, %4551 ]
  %4554 = phi i64 [ 0, %4475 ], [ %4587, %4551 ]
  %4555 = getelementptr inbounds i16, ptr %165, i64 %4553
  %4556 = load i16, ptr %4555, align 2, !tbaa !37, !alias.scope !309, !noalias !312
  %4557 = zext i16 %4556 to i32
  %4558 = mul nuw i32 %4557, 65537
  %4559 = lshr i32 %4558, 24
  %4560 = lshr i32 %4558, 8
  %4561 = trunc i32 %4558 to i8
  %4562 = trunc i32 %4560 to i8
  %4563 = trunc i16 %4556 to i8
  %4564 = trunc i32 %4559 to i8
  store i8 %4564, ptr %4552, align 1, !alias.scope !312, !noalias !309
  %4565 = getelementptr inbounds i8, ptr %4552, i64 1
  store i8 %4563, ptr %4565, align 1, !alias.scope !312, !noalias !309
  %4566 = getelementptr inbounds i8, ptr %4552, i64 2
  store i8 %4562, ptr %4566, align 1, !alias.scope !312, !noalias !309
  %4567 = getelementptr inbounds i8, ptr %4552, i64 3
  store i8 %4561, ptr %4567, align 1, !alias.scope !312, !noalias !309
  %4568 = getelementptr inbounds i8, ptr %4552, i64 4
  %4569 = getelementptr inbounds i8, ptr %4568, i64 %4399
  %4570 = or i64 %4553, 1
  %4571 = getelementptr inbounds i16, ptr %165, i64 %4570
  %4572 = load i16, ptr %4571, align 2, !tbaa !37, !alias.scope !309, !noalias !312
  %4573 = zext i16 %4572 to i32
  %4574 = mul nuw i32 %4573, 65537
  %4575 = lshr i32 %4574, 24
  %4576 = lshr i32 %4574, 8
  %4577 = trunc i32 %4574 to i8
  %4578 = trunc i32 %4576 to i8
  %4579 = trunc i16 %4572 to i8
  %4580 = trunc i32 %4575 to i8
  store i8 %4580, ptr %4569, align 1, !alias.scope !312, !noalias !309
  %4581 = getelementptr inbounds i8, ptr %4569, i64 1
  store i8 %4579, ptr %4581, align 1, !alias.scope !312, !noalias !309
  %4582 = getelementptr inbounds i8, ptr %4569, i64 2
  store i8 %4578, ptr %4582, align 1, !alias.scope !312, !noalias !309
  %4583 = getelementptr inbounds i8, ptr %4569, i64 3
  store i8 %4577, ptr %4583, align 1, !alias.scope !312, !noalias !309
  %4584 = getelementptr inbounds i8, ptr %4569, i64 4
  %4585 = getelementptr inbounds i8, ptr %4584, i64 %4399
  %4586 = add nuw nsw i64 %4553, 2
  %4587 = add i64 %4554, 2
  %4588 = icmp eq i64 %4587, %4476
  br i1 %4588, label %17308, label %4551, !llvm.loop !319

4589:                                             ; preds = %4101
  %4590 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 2
  %4591 = load i32, ptr %4590, align 8, !tbaa !50, !noalias !315
  %4592 = icmp eq i32 %4591, 1
  br i1 %4592, label %4593, label %4656

4593:                                             ; preds = %4589
  %4594 = icmp sgt i64 %164, 0
  br i1 %4594, label %4595, label %17875

4595:                                             ; preds = %4593
  %4596 = icmp eq ptr %165, null
  %4597 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 14
  %4598 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 3
  %4599 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %4600 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  br label %4601

4601:                                             ; preds = %4635, %4595
  %4602 = phi ptr [ %88, %4595 ], [ %4653, %4635 ]
  %4603 = phi i64 [ 0, %4595 ], [ %4654, %4635 ]
  br i1 %4596, label %4608, label %4604

4604:                                             ; preds = %4601
  %4605 = getelementptr inbounds i16, ptr %165, i64 %4603
  %4606 = load i16, ptr %4605, align 2, !tbaa !37, !alias.scope !309, !noalias !312
  %4607 = zext i16 %4606 to i32
  br label %4608

4608:                                             ; preds = %4604, %4601
  %4609 = phi i32 [ %4607, %4604 ], [ 0, %4601 ]
  %4610 = sitofp i32 %4609 to double
  call void @llvm.experimental.noalias.scope.decl(metadata !326)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %59) #6, !noalias !329
  %4611 = call ptr @ResetMagickMemory(ptr noundef nonnull %59, i32 noundef 0, i64 noundef 8) #6, !noalias !326
  %4612 = load double, ptr %4597, align 8, !tbaa !59, !noalias !329
  %4613 = fmul fast double %4612, %4610
  %4614 = load double, ptr %4598, align 8, !tbaa !60, !noalias !329
  %4615 = fadd fast double %4613, %4614
  %4616 = load i32, ptr %4599, align 8, !tbaa !51, !noalias !329
  %4617 = icmp eq i32 %4616, 1
  %4618 = bitcast double %4615 to i64
  %4619 = lshr i64 %4618, 56
  %4620 = trunc i64 %4619 to i8
  %4621 = lshr i64 %4618, 48
  %4622 = trunc i64 %4621 to i8
  %4623 = lshr i64 %4618, 40
  %4624 = trunc i64 %4623 to i8
  %4625 = lshr i64 %4618, 32
  %4626 = trunc i64 %4625 to i8
  %4627 = lshr i64 %4618, 24
  %4628 = trunc i64 %4627 to i8
  %4629 = lshr i64 %4618, 16
  %4630 = trunc i64 %4629 to i8
  %4631 = lshr i64 %4618, 8
  %4632 = trunc i64 %4631 to i8
  %4633 = trunc i64 %4618 to i8
  br i1 %4617, label %4635, label %4634

4634:                                             ; preds = %4608
  br label %4635

4635:                                             ; preds = %4634, %4608
  %4636 = phi i8 [ %4620, %4634 ], [ %4633, %4608 ]
  %4637 = phi i8 [ %4622, %4634 ], [ %4632, %4608 ]
  %4638 = phi i8 [ %4624, %4634 ], [ %4630, %4608 ]
  %4639 = phi i8 [ %4626, %4634 ], [ %4628, %4608 ]
  %4640 = phi i8 [ %4628, %4634 ], [ %4626, %4608 ]
  %4641 = phi i8 [ %4630, %4634 ], [ %4624, %4608 ]
  %4642 = phi i8 [ %4632, %4634 ], [ %4622, %4608 ]
  %4643 = phi i8 [ %4633, %4634 ], [ %4620, %4608 ]
  store i8 %4636, ptr %4602, align 1, !alias.scope !330, !noalias !309
  %4644 = getelementptr inbounds i8, ptr %4602, i64 1
  store i8 %4637, ptr %4644, align 1, !alias.scope !330, !noalias !309
  %4645 = getelementptr inbounds i8, ptr %4602, i64 2
  store i8 %4638, ptr %4645, align 1, !alias.scope !330, !noalias !309
  %4646 = getelementptr inbounds i8, ptr %4602, i64 3
  store i8 %4639, ptr %4646, align 1, !alias.scope !330, !noalias !309
  %4647 = getelementptr inbounds i8, ptr %4602, i64 4
  store i8 %4640, ptr %4647, align 1, !alias.scope !330, !noalias !309
  %4648 = getelementptr inbounds i8, ptr %4602, i64 5
  store i8 %4641, ptr %4648, align 1, !alias.scope !330, !noalias !309
  %4649 = getelementptr inbounds i8, ptr %4602, i64 6
  store i8 %4642, ptr %4649, align 1, !alias.scope !330, !noalias !309
  %4650 = getelementptr inbounds i8, ptr %4602, i64 7
  store i8 %4643, ptr %4650, align 1, !alias.scope !330, !noalias !309
  %4651 = getelementptr inbounds i8, ptr %4602, i64 8
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %59) #6, !noalias !329
  %4652 = load i64, ptr %4600, align 8, !tbaa !47, !noalias !315
  %4653 = getelementptr inbounds i8, ptr %4651, i64 %4652
  %4654 = add nuw nsw i64 %4603, 1
  %4655 = icmp eq i64 %4654, %164
  br i1 %4655, label %17787, label %4601, !llvm.loop !331

4656:                                             ; preds = %4589, %4101
  %4657 = icmp sgt i64 %164, 0
  br i1 %4657, label %4658, label %17875

4658:                                             ; preds = %4656
  %4659 = add i64 %4102, -1
  %4660 = shl i64 2, %4659
  %4661 = add i64 %4660, -1
  %4662 = icmp eq ptr %165, null
  %4663 = uitofp i64 %4661 to float
  %4664 = fmul fast float %4663, 0x3EF0001000000000
  %4665 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 14, i32 2
  %4666 = icmp sgt i64 %4102, 0
  %4667 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %4668 = load i64, ptr %4665, align 8, !tbaa !69, !noalias !332
  %4669 = load i64, ptr %4667, align 8, !tbaa !47, !noalias !315
  br label %4670

4670:                                             ; preds = %4714, %4658
  %4671 = phi i64 [ %4668, %4658 ], [ %4715, %4714 ]
  %4672 = phi ptr [ %88, %4658 ], [ %4717, %4714 ]
  %4673 = phi i64 [ 0, %4658 ], [ %4718, %4714 ]
  br i1 %4662, label %4677, label %4674

4674:                                             ; preds = %4670
  %4675 = getelementptr inbounds i16, ptr %165, i64 %4673
  %4676 = load i16, ptr %4675, align 2, !tbaa !37, !alias.scope !309, !noalias !312
  br label %4677

4677:                                             ; preds = %4674, %4670
  %4678 = phi i16 [ %4676, %4674 ], [ 0, %4670 ]
  %4679 = uitofp i16 %4678 to float
  %4680 = fmul fast float %4664, %4679
  %4681 = fpext float %4680 to double
  %4682 = fadd fast double %4681, 5.000000e-01
  %4683 = fptoui double %4682 to i64
  tail call void @llvm.experimental.noalias.scope.decl(metadata !335)
  %4684 = icmp eq i64 %4671, 0
  br i1 %4684, label %4685, label %4686

4685:                                             ; preds = %4677
  store i64 8, ptr %4665, align 8, !tbaa !69, !noalias !332
  br label %4686

4686:                                             ; preds = %4685, %4677
  %4687 = phi i64 [ 8, %4685 ], [ %4671, %4677 ]
  br i1 %4666, label %4688, label %4714

4688:                                             ; preds = %4686, %4698
  %4689 = phi i64 [ %4709, %4698 ], [ %4687, %4686 ]
  %4690 = phi i64 [ %4694, %4698 ], [ %4102, %4686 ]
  %4691 = phi ptr [ %4711, %4698 ], [ %4672, %4686 ]
  %4692 = tail call i64 @llvm.umin.i64(i64 %4690, i64 %4689)
  %4693 = sub nsw i64 %4690, %4692
  %4694 = tail call i64 @llvm.smax.i64(i64 %4693, i64 0)
  %4695 = icmp eq i64 %4689, 8
  br i1 %4695, label %4698, label %4696

4696:                                             ; preds = %4688
  %4697 = load i8, ptr %4691, align 1, !tbaa !48, !alias.scope !336, !noalias !309
  br label %4698

4698:                                             ; preds = %4696, %4688
  %4699 = phi i8 [ %4697, %4696 ], [ 0, %4688 ]
  %4700 = sub i64 %4689, %4692
  %4701 = lshr i64 %4683, %4694
  %4702 = shl nsw i64 -1, %4692
  %4703 = xor i64 %4702, -1
  %4704 = and i64 %4701, %4703
  %4705 = shl i64 %4704, %4700
  %4706 = trunc i64 %4705 to i8
  %4707 = or i8 %4699, %4706
  store i8 %4707, ptr %4691, align 1, !tbaa !48, !alias.scope !336, !noalias !309
  %4708 = icmp ule i64 %4689, %4690
  %4709 = select i1 %4708, i64 8, i64 %4700
  %4710 = zext i1 %4708 to i64
  %4711 = getelementptr inbounds i8, ptr %4691, i64 %4710
  %4712 = icmp slt i64 %4693, 1
  br i1 %4712, label %4713, label %4688, !llvm.loop !75

4713:                                             ; preds = %4698
  store i64 %4709, ptr %4665, align 8, !tbaa !69, !noalias !332
  br label %4714

4714:                                             ; preds = %4713, %4686
  %4715 = phi i64 [ %4687, %4686 ], [ %4709, %4713 ]
  %4716 = phi ptr [ %4672, %4686 ], [ %4711, %4713 ]
  %4717 = getelementptr inbounds i8, ptr %4716, i64 %4669
  %4718 = add nuw nsw i64 %4673, 1
  %4719 = icmp eq i64 %4718, %164
  br i1 %4719, label %17787, label %4670, !llvm.loop !337

4720:                                             ; preds = %256, %256
  tail call void @llvm.experimental.noalias.scope.decl(metadata !338)
  tail call void @llvm.experimental.noalias.scope.decl(metadata !341)
  %4721 = load i64, ptr %2, align 8, !tbaa !45, !noalias !343
  %4722 = add i64 %4721, -8
  %4723 = tail call i64 @llvm.fshl.i64(i64 %4721, i64 %4722, i64 61)
  switch i64 %4723, label %5148 [
    i64 0, label %4724
    i64 1, label %4759
    i64 3, label %4948
    i64 7, label %5085
  ]

4724:                                             ; preds = %4720
  %4725 = icmp sgt i64 %164, 0
  br i1 %4725, label %4726, label %17831

4726:                                             ; preds = %4724
  %4727 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %4728 = load i64, ptr %4727, align 8, !tbaa !47, !noalias !343
  %4729 = and i64 %164, 1
  %4730 = icmp eq i64 %164, 1
  br i1 %4730, label %17326, label %4731

4731:                                             ; preds = %4726
  %4732 = and i64 %164, -2
  br label %4733

4733:                                             ; preds = %4733, %4731
  %4734 = phi ptr [ %166, %4731 ], [ %4755, %4733 ]
  %4735 = phi ptr [ %88, %4731 ], [ %4756, %4733 ]
  %4736 = phi i64 [ 0, %4731 ], [ %4757, %4733 ]
  %4737 = load i16, ptr %4734, align 2, !tbaa !31, !alias.scope !338, !noalias !341
  %4738 = zext i16 %4737 to i64
  %4739 = add nuw nsw i64 %4738, 128
  %4740 = lshr i64 %4739, 8
  %4741 = sub nsw i64 %4739, %4740
  %4742 = lshr i64 %4741, 8
  %4743 = trunc i64 %4742 to i8
  %4744 = getelementptr inbounds i8, ptr %4735, i64 1
  store i8 %4743, ptr %4735, align 1, !tbaa !48, !alias.scope !341, !noalias !338
  %4745 = getelementptr inbounds %struct._PixelPacket, ptr %4734, i64 1
  %4746 = getelementptr inbounds i8, ptr %4744, i64 %4728
  %4747 = load i16, ptr %4745, align 2, !tbaa !31, !alias.scope !338, !noalias !341
  %4748 = zext i16 %4747 to i64
  %4749 = add nuw nsw i64 %4748, 128
  %4750 = lshr i64 %4749, 8
  %4751 = sub nsw i64 %4749, %4750
  %4752 = lshr i64 %4751, 8
  %4753 = trunc i64 %4752 to i8
  %4754 = getelementptr inbounds i8, ptr %4746, i64 1
  store i8 %4753, ptr %4746, align 1, !tbaa !48, !alias.scope !341, !noalias !338
  %4755 = getelementptr inbounds %struct._PixelPacket, ptr %4734, i64 2
  %4756 = getelementptr inbounds i8, ptr %4754, i64 %4728
  %4757 = add i64 %4736, 2
  %4758 = icmp eq i64 %4757, %4732
  br i1 %4758, label %17326, label %4733, !llvm.loop !344

4759:                                             ; preds = %4720
  %4760 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 2
  %4761 = load i32, ptr %4760, align 8, !tbaa !50, !noalias !343
  %4762 = icmp eq i32 %4761, 1
  %4763 = icmp sgt i64 %164, 0
  br i1 %4762, label %4822, label %4764

4764:                                             ; preds = %4759
  br i1 %4763, label %4765, label %17831

4765:                                             ; preds = %4764
  %4766 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %4767 = load i32, ptr %4766, align 8, !tbaa !51, !noalias !343
  %4768 = freeze i32 %4767
  %4769 = icmp eq i32 %4768, 1
  %4770 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %4771 = load i64, ptr %4770, align 8, !tbaa !47, !noalias !343
  br i1 %4769, label %4778, label %4772

4772:                                             ; preds = %4765
  %4773 = add i64 %164, -1
  %4774 = and i64 %164, 3
  %4775 = icmp ult i64 %4773, 3
  br i1 %4775, label %17356, label %4776

4776:                                             ; preds = %4772
  %4777 = and i64 %164, -4
  br label %4910

4778:                                             ; preds = %4765
  %4779 = add i64 %164, -1
  %4780 = and i64 %164, 3
  %4781 = icmp ult i64 %4779, 3
  br i1 %4781, label %17338, label %4782

4782:                                             ; preds = %4778
  %4783 = and i64 %164, -4
  br label %4784

4784:                                             ; preds = %4784, %4782
  %4785 = phi ptr [ %166, %4782 ], [ %4818, %4784 ]
  %4786 = phi ptr [ %88, %4782 ], [ %4819, %4784 ]
  %4787 = phi i64 [ 0, %4782 ], [ %4820, %4784 ]
  %4788 = load i16, ptr %4785, align 2, !tbaa !31, !alias.scope !338, !noalias !341
  %4789 = lshr i16 %4788, 8
  %4790 = trunc i16 %4789 to i8
  %4791 = trunc i16 %4788 to i8
  store i8 %4791, ptr %4786, align 1, !alias.scope !341, !noalias !338
  %4792 = getelementptr inbounds i8, ptr %4786, i64 1
  store i8 %4790, ptr %4792, align 1, !alias.scope !341, !noalias !338
  %4793 = getelementptr inbounds i8, ptr %4786, i64 2
  %4794 = getelementptr inbounds %struct._PixelPacket, ptr %4785, i64 1
  %4795 = getelementptr inbounds i8, ptr %4793, i64 %4771
  %4796 = load i16, ptr %4794, align 2, !tbaa !31, !alias.scope !338, !noalias !341
  %4797 = lshr i16 %4796, 8
  %4798 = trunc i16 %4797 to i8
  %4799 = trunc i16 %4796 to i8
  store i8 %4799, ptr %4795, align 1, !alias.scope !341, !noalias !338
  %4800 = getelementptr inbounds i8, ptr %4795, i64 1
  store i8 %4798, ptr %4800, align 1, !alias.scope !341, !noalias !338
  %4801 = getelementptr inbounds i8, ptr %4795, i64 2
  %4802 = getelementptr inbounds %struct._PixelPacket, ptr %4785, i64 2
  %4803 = getelementptr inbounds i8, ptr %4801, i64 %4771
  %4804 = load i16, ptr %4802, align 2, !tbaa !31, !alias.scope !338, !noalias !341
  %4805 = lshr i16 %4804, 8
  %4806 = trunc i16 %4805 to i8
  %4807 = trunc i16 %4804 to i8
  store i8 %4807, ptr %4803, align 1, !alias.scope !341, !noalias !338
  %4808 = getelementptr inbounds i8, ptr %4803, i64 1
  store i8 %4806, ptr %4808, align 1, !alias.scope !341, !noalias !338
  %4809 = getelementptr inbounds i8, ptr %4803, i64 2
  %4810 = getelementptr inbounds %struct._PixelPacket, ptr %4785, i64 3
  %4811 = getelementptr inbounds i8, ptr %4809, i64 %4771
  %4812 = load i16, ptr %4810, align 2, !tbaa !31, !alias.scope !338, !noalias !341
  %4813 = lshr i16 %4812, 8
  %4814 = trunc i16 %4813 to i8
  %4815 = trunc i16 %4812 to i8
  store i8 %4815, ptr %4811, align 1, !alias.scope !341, !noalias !338
  %4816 = getelementptr inbounds i8, ptr %4811, i64 1
  store i8 %4814, ptr %4816, align 1, !alias.scope !341, !noalias !338
  %4817 = getelementptr inbounds i8, ptr %4811, i64 2
  %4818 = getelementptr inbounds %struct._PixelPacket, ptr %4785, i64 4
  %4819 = getelementptr inbounds i8, ptr %4817, i64 %4771
  %4820 = add i64 %4787, 4
  %4821 = icmp eq i64 %4820, %4783
  br i1 %4821, label %17338, label %4784, !llvm.loop !345

4822:                                             ; preds = %4759
  br i1 %4763, label %4823, label %17831

4823:                                             ; preds = %4822
  %4824 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %4825 = load i32, ptr %4824, align 8, !tbaa !51, !noalias !343
  %4826 = icmp eq i32 %4825, 1
  %4827 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %4828 = load i64, ptr %4827, align 8, !tbaa !47, !noalias !343
  br label %4829

4829:                                             ; preds = %4897, %4823
  %4830 = phi ptr [ %166, %4823 ], [ %4906, %4897 ]
  %4831 = phi ptr [ %88, %4823 ], [ %4907, %4897 ]
  %4832 = phi i64 [ 0, %4823 ], [ %4908, %4897 ]
  %4833 = load i16, ptr %4830, align 2, !tbaa !31, !alias.scope !338, !noalias !341
  %4834 = uitofp i16 %4833 to double
  %4835 = fmul fast double %4834, 0x3EF0001000100010
  %4836 = fptrunc double %4835 to float
  %4837 = bitcast float %4836 to i32
  %4838 = lshr i32 %4837, 16
  %4839 = and i32 %4838, 32768
  %4840 = lshr i32 %4837, 23
  %4841 = and i32 %4840, 255
  %4842 = add nsw i32 %4841, -112
  %4843 = and i32 %4837, 8388607
  %4844 = icmp ult i32 %4841, 113
  br i1 %4844, label %4845, label %4862

4845:                                             ; preds = %4829
  %4846 = icmp ult i32 %4841, 102
  br i1 %4846, label %4859, label %4847

4847:                                             ; preds = %4845
  %4848 = or i32 %4843, 8388608
  %4849 = sub nuw nsw i32 126, %4841
  %4850 = sub nuw nsw i32 125, %4841
  %4851 = shl nsw i32 -1, %4850
  %4852 = xor i32 %4851, -1
  %4853 = add nuw nsw i32 %4848, %4852
  %4854 = lshr i32 %4848, %4849
  %4855 = and i32 %4854, 1
  %4856 = add nuw nsw i32 %4853, %4855
  %4857 = lshr i32 %4856, %4849
  %4858 = or i32 %4857, %4839
  br label %4859

4859:                                             ; preds = %4847, %4845
  %4860 = phi i32 [ %4858, %4847 ], [ %4839, %4845 ]
  %4861 = trunc i32 %4860 to i16
  br label %4897

4862:                                             ; preds = %4829
  %4863 = icmp eq i32 %4842, 143
  br i1 %4863, label %4864, label %4877

4864:                                             ; preds = %4862
  %4865 = icmp eq i32 %4843, 0
  br i1 %4865, label %4866, label %4869

4866:                                             ; preds = %4864
  %4867 = trunc i32 %4839 to i16
  %4868 = or i16 %4867, 31744
  br label %4897

4869:                                             ; preds = %4864
  %4870 = lshr i32 %4843, 13
  %4871 = icmp ult i32 %4843, 8192
  %4872 = zext i1 %4871 to i32
  %4873 = or i32 %4870, %4872
  %4874 = or i32 %4873, %4839
  %4875 = trunc i32 %4874 to i16
  %4876 = or i16 %4875, 31744
  br label %4897

4877:                                             ; preds = %4862
  %4878 = lshr i32 %4837, 13
  %4879 = and i32 %4878, 1
  %4880 = add nuw nsw i32 %4843, 4095
  %4881 = add nuw nsw i32 %4880, %4879
  %4882 = and i32 %4881, 8388608
  %4883 = icmp eq i32 %4882, 0
  %4884 = add nsw i32 %4841, -111
  %4885 = select i1 %4883, i32 %4842, i32 %4884
  %4886 = icmp ugt i32 %4885, 30
  br i1 %4886, label %4887, label %4890

4887:                                             ; preds = %4877
  %4888 = trunc i32 %4839 to i16
  %4889 = or i16 %4888, 31744
  br label %4897

4890:                                             ; preds = %4877
  %4891 = lshr i32 %4881, 13
  %4892 = shl nuw nsw i32 %4885, 10
  %4893 = select i1 %4883, i32 %4891, i32 0
  %4894 = or i32 %4893, %4892
  %4895 = or i32 %4894, %4839
  %4896 = trunc i32 %4895 to i16
  br label %4897

4897:                                             ; preds = %4890, %4887, %4869, %4866, %4859
  %4898 = phi i16 [ %4861, %4859 ], [ %4868, %4866 ], [ %4876, %4869 ], [ %4889, %4887 ], [ %4896, %4890 ]
  %4899 = lshr i16 %4898, 8
  %4900 = select i1 %4826, i16 %4898, i16 %4899
  %4901 = select i1 %4826, i16 %4899, i16 %4898
  %4902 = trunc i16 %4901 to i8
  %4903 = trunc i16 %4900 to i8
  store i8 %4903, ptr %4831, align 1, !alias.scope !341, !noalias !338
  %4904 = getelementptr inbounds i8, ptr %4831, i64 1
  store i8 %4902, ptr %4904, align 1, !alias.scope !341, !noalias !338
  %4905 = getelementptr inbounds i8, ptr %4831, i64 2
  %4906 = getelementptr inbounds %struct._PixelPacket, ptr %4830, i64 1
  %4907 = getelementptr inbounds i8, ptr %4905, i64 %4828
  %4908 = add nuw nsw i64 %4832, 1
  %4909 = icmp eq i64 %4908, %164
  br i1 %4909, label %17787, label %4829, !llvm.loop !346

4910:                                             ; preds = %4910, %4776
  %4911 = phi ptr [ %166, %4776 ], [ %4944, %4910 ]
  %4912 = phi ptr [ %88, %4776 ], [ %4945, %4910 ]
  %4913 = phi i64 [ 0, %4776 ], [ %4946, %4910 ]
  %4914 = load i16, ptr %4911, align 2, !tbaa !31, !alias.scope !338, !noalias !341
  %4915 = lshr i16 %4914, 8
  %4916 = trunc i16 %4914 to i8
  %4917 = trunc i16 %4915 to i8
  store i8 %4917, ptr %4912, align 1, !alias.scope !341, !noalias !338
  %4918 = getelementptr inbounds i8, ptr %4912, i64 1
  store i8 %4916, ptr %4918, align 1, !alias.scope !341, !noalias !338
  %4919 = getelementptr inbounds i8, ptr %4912, i64 2
  %4920 = getelementptr inbounds %struct._PixelPacket, ptr %4911, i64 1
  %4921 = getelementptr inbounds i8, ptr %4919, i64 %4771
  %4922 = load i16, ptr %4920, align 2, !tbaa !31, !alias.scope !338, !noalias !341
  %4923 = lshr i16 %4922, 8
  %4924 = trunc i16 %4922 to i8
  %4925 = trunc i16 %4923 to i8
  store i8 %4925, ptr %4921, align 1, !alias.scope !341, !noalias !338
  %4926 = getelementptr inbounds i8, ptr %4921, i64 1
  store i8 %4924, ptr %4926, align 1, !alias.scope !341, !noalias !338
  %4927 = getelementptr inbounds i8, ptr %4921, i64 2
  %4928 = getelementptr inbounds %struct._PixelPacket, ptr %4911, i64 2
  %4929 = getelementptr inbounds i8, ptr %4927, i64 %4771
  %4930 = load i16, ptr %4928, align 2, !tbaa !31, !alias.scope !338, !noalias !341
  %4931 = lshr i16 %4930, 8
  %4932 = trunc i16 %4930 to i8
  %4933 = trunc i16 %4931 to i8
  store i8 %4933, ptr %4929, align 1, !alias.scope !341, !noalias !338
  %4934 = getelementptr inbounds i8, ptr %4929, i64 1
  store i8 %4932, ptr %4934, align 1, !alias.scope !341, !noalias !338
  %4935 = getelementptr inbounds i8, ptr %4929, i64 2
  %4936 = getelementptr inbounds %struct._PixelPacket, ptr %4911, i64 3
  %4937 = getelementptr inbounds i8, ptr %4935, i64 %4771
  %4938 = load i16, ptr %4936, align 2, !tbaa !31, !alias.scope !338, !noalias !341
  %4939 = lshr i16 %4938, 8
  %4940 = trunc i16 %4938 to i8
  %4941 = trunc i16 %4939 to i8
  store i8 %4941, ptr %4937, align 1, !alias.scope !341, !noalias !338
  %4942 = getelementptr inbounds i8, ptr %4937, i64 1
  store i8 %4940, ptr %4942, align 1, !alias.scope !341, !noalias !338
  %4943 = getelementptr inbounds i8, ptr %4937, i64 2
  %4944 = getelementptr inbounds %struct._PixelPacket, ptr %4911, i64 4
  %4945 = getelementptr inbounds i8, ptr %4943, i64 %4771
  %4946 = add i64 %4913, 4
  %4947 = icmp eq i64 %4946, %4777
  br i1 %4947, label %17356, label %4910, !llvm.loop !345

4948:                                             ; preds = %4720
  %4949 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 2
  %4950 = load i32, ptr %4949, align 8, !tbaa !50, !noalias !343
  %4951 = icmp eq i32 %4950, 1
  %4952 = icmp sgt i64 %164, 0
  br i1 %4951, label %5006, label %4953

4953:                                             ; preds = %4948
  br i1 %4952, label %4954, label %17831

4954:                                             ; preds = %4953
  %4955 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %4956 = load i32, ptr %4955, align 8, !tbaa !51, !noalias !343
  %4957 = icmp eq i32 %4956, 1
  %4958 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %4959 = load i64, ptr %4958, align 8, !tbaa !47, !noalias !343
  br i1 %4957, label %4965, label %4960

4960:                                             ; preds = %4954
  %4961 = and i64 %164, 1
  %4962 = icmp eq i64 %164, 1
  br i1 %4962, label %17391, label %4963

4963:                                             ; preds = %4960
  %4964 = and i64 %164, -2
  br label %5049

4965:                                             ; preds = %4954
  %4966 = and i64 %164, 1
  %4967 = icmp eq i64 %164, 1
  br i1 %4967, label %17374, label %4968

4968:                                             ; preds = %4965
  %4969 = and i64 %164, -2
  br label %4970

4970:                                             ; preds = %4970, %4968
  %4971 = phi ptr [ %166, %4968 ], [ %5002, %4970 ]
  %4972 = phi ptr [ %88, %4968 ], [ %5003, %4970 ]
  %4973 = phi i64 [ 0, %4968 ], [ %5004, %4970 ]
  %4974 = load i16, ptr %4971, align 2, !tbaa !31, !alias.scope !338, !noalias !341
  %4975 = zext i16 %4974 to i32
  %4976 = mul nuw i32 %4975, 65537
  %4977 = lshr i32 %4976, 8
  %4978 = lshr i32 %4976, 24
  %4979 = trunc i32 %4978 to i8
  %4980 = trunc i16 %4974 to i8
  %4981 = trunc i32 %4977 to i8
  %4982 = trunc i32 %4976 to i8
  store i8 %4982, ptr %4972, align 1, !alias.scope !341, !noalias !338
  %4983 = getelementptr inbounds i8, ptr %4972, i64 1
  store i8 %4981, ptr %4983, align 1, !alias.scope !341, !noalias !338
  %4984 = getelementptr inbounds i8, ptr %4972, i64 2
  store i8 %4980, ptr %4984, align 1, !alias.scope !341, !noalias !338
  %4985 = getelementptr inbounds i8, ptr %4972, i64 3
  store i8 %4979, ptr %4985, align 1, !alias.scope !341, !noalias !338
  %4986 = getelementptr inbounds i8, ptr %4972, i64 4
  %4987 = getelementptr inbounds %struct._PixelPacket, ptr %4971, i64 1
  %4988 = getelementptr inbounds i8, ptr %4986, i64 %4959
  %4989 = load i16, ptr %4987, align 2, !tbaa !31, !alias.scope !338, !noalias !341
  %4990 = zext i16 %4989 to i32
  %4991 = mul nuw i32 %4990, 65537
  %4992 = lshr i32 %4991, 8
  %4993 = lshr i32 %4991, 24
  %4994 = trunc i32 %4993 to i8
  %4995 = trunc i16 %4989 to i8
  %4996 = trunc i32 %4992 to i8
  %4997 = trunc i32 %4991 to i8
  store i8 %4997, ptr %4988, align 1, !alias.scope !341, !noalias !338
  %4998 = getelementptr inbounds i8, ptr %4988, i64 1
  store i8 %4996, ptr %4998, align 1, !alias.scope !341, !noalias !338
  %4999 = getelementptr inbounds i8, ptr %4988, i64 2
  store i8 %4995, ptr %4999, align 1, !alias.scope !341, !noalias !338
  %5000 = getelementptr inbounds i8, ptr %4988, i64 3
  store i8 %4994, ptr %5000, align 1, !alias.scope !341, !noalias !338
  %5001 = getelementptr inbounds i8, ptr %4988, i64 4
  %5002 = getelementptr inbounds %struct._PixelPacket, ptr %4971, i64 2
  %5003 = getelementptr inbounds i8, ptr %5001, i64 %4959
  %5004 = add i64 %4973, 2
  %5005 = icmp eq i64 %5004, %4969
  br i1 %5005, label %17374, label %4970, !llvm.loop !347

5006:                                             ; preds = %4948
  br i1 %4952, label %5007, label %17831

5007:                                             ; preds = %5006
  %5008 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 14
  %5009 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 3
  %5010 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %5011 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  br label %5012

5012:                                             ; preds = %5035, %5007
  %5013 = phi ptr [ %166, %5007 ], [ %5044, %5035 ]
  %5014 = phi ptr [ %88, %5007 ], [ %5046, %5035 ]
  %5015 = phi i64 [ 0, %5007 ], [ %5047, %5035 ]
  %5016 = load i16, ptr %5013, align 2, !tbaa !31, !alias.scope !338, !noalias !341
  call void @llvm.experimental.noalias.scope.decl(metadata !348)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %58) #6, !noalias !351
  %5017 = call ptr @ResetMagickMemory(ptr noundef nonnull %58, i32 noundef 0, i64 noundef 4) #6, !noalias !351
  %5018 = uitofp i16 %5016 to double
  %5019 = load double, ptr %5008, align 8, !tbaa !59, !noalias !351
  %5020 = fmul fast double %5019, %5018
  %5021 = load double, ptr %5009, align 8, !tbaa !60, !noalias !351
  %5022 = fadd fast double %5020, %5021
  %5023 = fptrunc double %5022 to float
  %5024 = load i32, ptr %5010, align 8, !tbaa !51, !noalias !351
  %5025 = icmp eq i32 %5024, 1
  %5026 = bitcast float %5023 to i32
  %5027 = lshr i32 %5026, 24
  %5028 = trunc i32 %5027 to i8
  %5029 = lshr i32 %5026, 16
  %5030 = trunc i32 %5029 to i8
  %5031 = lshr i32 %5026, 8
  %5032 = trunc i32 %5031 to i8
  %5033 = trunc i32 %5026 to i8
  br i1 %5025, label %5035, label %5034

5034:                                             ; preds = %5012
  br label %5035

5035:                                             ; preds = %5034, %5012
  %5036 = phi i8 [ %5028, %5034 ], [ %5033, %5012 ]
  %5037 = phi i8 [ %5030, %5034 ], [ %5032, %5012 ]
  %5038 = phi i8 [ %5032, %5034 ], [ %5030, %5012 ]
  %5039 = phi i8 [ %5033, %5034 ], [ %5028, %5012 ]
  store i8 %5036, ptr %5014, align 1, !alias.scope !352, !noalias !338
  %5040 = getelementptr inbounds i8, ptr %5014, i64 1
  store i8 %5037, ptr %5040, align 1, !alias.scope !352, !noalias !338
  %5041 = getelementptr inbounds i8, ptr %5014, i64 2
  store i8 %5038, ptr %5041, align 1, !alias.scope !352, !noalias !338
  %5042 = getelementptr inbounds i8, ptr %5014, i64 3
  store i8 %5039, ptr %5042, align 1, !alias.scope !352, !noalias !338
  %5043 = getelementptr inbounds i8, ptr %5014, i64 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %58) #6, !noalias !351
  %5044 = getelementptr inbounds %struct._PixelPacket, ptr %5013, i64 1
  %5045 = load i64, ptr %5011, align 8, !tbaa !47, !noalias !343
  %5046 = getelementptr inbounds i8, ptr %5043, i64 %5045
  %5047 = add nuw nsw i64 %5015, 1
  %5048 = icmp eq i64 %5047, %164
  br i1 %5048, label %17787, label %5012, !llvm.loop !353

5049:                                             ; preds = %5049, %4963
  %5050 = phi ptr [ %166, %4963 ], [ %5081, %5049 ]
  %5051 = phi ptr [ %88, %4963 ], [ %5082, %5049 ]
  %5052 = phi i64 [ 0, %4963 ], [ %5083, %5049 ]
  %5053 = load i16, ptr %5050, align 2, !tbaa !31, !alias.scope !338, !noalias !341
  %5054 = zext i16 %5053 to i32
  %5055 = mul nuw i32 %5054, 65537
  %5056 = lshr i32 %5055, 24
  %5057 = lshr i32 %5055, 8
  %5058 = trunc i32 %5055 to i8
  %5059 = trunc i32 %5057 to i8
  %5060 = trunc i16 %5053 to i8
  %5061 = trunc i32 %5056 to i8
  store i8 %5061, ptr %5051, align 1, !alias.scope !341, !noalias !338
  %5062 = getelementptr inbounds i8, ptr %5051, i64 1
  store i8 %5060, ptr %5062, align 1, !alias.scope !341, !noalias !338
  %5063 = getelementptr inbounds i8, ptr %5051, i64 2
  store i8 %5059, ptr %5063, align 1, !alias.scope !341, !noalias !338
  %5064 = getelementptr inbounds i8, ptr %5051, i64 3
  store i8 %5058, ptr %5064, align 1, !alias.scope !341, !noalias !338
  %5065 = getelementptr inbounds i8, ptr %5051, i64 4
  %5066 = getelementptr inbounds %struct._PixelPacket, ptr %5050, i64 1
  %5067 = getelementptr inbounds i8, ptr %5065, i64 %4959
  %5068 = load i16, ptr %5066, align 2, !tbaa !31, !alias.scope !338, !noalias !341
  %5069 = zext i16 %5068 to i32
  %5070 = mul nuw i32 %5069, 65537
  %5071 = lshr i32 %5070, 24
  %5072 = lshr i32 %5070, 8
  %5073 = trunc i32 %5070 to i8
  %5074 = trunc i32 %5072 to i8
  %5075 = trunc i16 %5068 to i8
  %5076 = trunc i32 %5071 to i8
  store i8 %5076, ptr %5067, align 1, !alias.scope !341, !noalias !338
  %5077 = getelementptr inbounds i8, ptr %5067, i64 1
  store i8 %5075, ptr %5077, align 1, !alias.scope !341, !noalias !338
  %5078 = getelementptr inbounds i8, ptr %5067, i64 2
  store i8 %5074, ptr %5078, align 1, !alias.scope !341, !noalias !338
  %5079 = getelementptr inbounds i8, ptr %5067, i64 3
  store i8 %5073, ptr %5079, align 1, !alias.scope !341, !noalias !338
  %5080 = getelementptr inbounds i8, ptr %5067, i64 4
  %5081 = getelementptr inbounds %struct._PixelPacket, ptr %5050, i64 2
  %5082 = getelementptr inbounds i8, ptr %5080, i64 %4959
  %5083 = add i64 %5052, 2
  %5084 = icmp eq i64 %5083, %4964
  br i1 %5084, label %17391, label %5049, !llvm.loop !347

5085:                                             ; preds = %4720
  %5086 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 2
  %5087 = load i32, ptr %5086, align 8, !tbaa !50, !noalias !343
  %5088 = icmp eq i32 %5087, 1
  br i1 %5088, label %5089, label %5148

5089:                                             ; preds = %5085
  %5090 = icmp sgt i64 %164, 0
  br i1 %5090, label %5091, label %17831

5091:                                             ; preds = %5089
  %5092 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 14
  %5093 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 3
  %5094 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %5095 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  br label %5096

5096:                                             ; preds = %5126, %5091
  %5097 = phi ptr [ %166, %5091 ], [ %5143, %5126 ]
  %5098 = phi ptr [ %88, %5091 ], [ %5145, %5126 ]
  %5099 = phi i64 [ 0, %5091 ], [ %5146, %5126 ]
  %5100 = load i16, ptr %5097, align 2, !tbaa !31, !alias.scope !338, !noalias !341
  %5101 = uitofp i16 %5100 to double
  call void @llvm.experimental.noalias.scope.decl(metadata !354)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %57) #6, !noalias !357
  %5102 = call ptr @ResetMagickMemory(ptr noundef nonnull %57, i32 noundef 0, i64 noundef 8) #6, !noalias !357
  %5103 = load double, ptr %5092, align 8, !tbaa !59, !noalias !357
  %5104 = fmul fast double %5103, %5101
  %5105 = load double, ptr %5093, align 8, !tbaa !60, !noalias !357
  %5106 = fadd fast double %5104, %5105
  %5107 = load i32, ptr %5094, align 8, !tbaa !51, !noalias !357
  %5108 = icmp eq i32 %5107, 1
  %5109 = bitcast double %5106 to i64
  %5110 = lshr i64 %5109, 56
  %5111 = trunc i64 %5110 to i8
  %5112 = lshr i64 %5109, 48
  %5113 = trunc i64 %5112 to i8
  %5114 = lshr i64 %5109, 40
  %5115 = trunc i64 %5114 to i8
  %5116 = lshr i64 %5109, 32
  %5117 = trunc i64 %5116 to i8
  %5118 = lshr i64 %5109, 24
  %5119 = trunc i64 %5118 to i8
  %5120 = lshr i64 %5109, 16
  %5121 = trunc i64 %5120 to i8
  %5122 = lshr i64 %5109, 8
  %5123 = trunc i64 %5122 to i8
  %5124 = trunc i64 %5109 to i8
  br i1 %5108, label %5126, label %5125

5125:                                             ; preds = %5096
  br label %5126

5126:                                             ; preds = %5125, %5096
  %5127 = phi i8 [ %5111, %5125 ], [ %5124, %5096 ]
  %5128 = phi i8 [ %5113, %5125 ], [ %5123, %5096 ]
  %5129 = phi i8 [ %5115, %5125 ], [ %5121, %5096 ]
  %5130 = phi i8 [ %5117, %5125 ], [ %5119, %5096 ]
  %5131 = phi i8 [ %5119, %5125 ], [ %5117, %5096 ]
  %5132 = phi i8 [ %5121, %5125 ], [ %5115, %5096 ]
  %5133 = phi i8 [ %5123, %5125 ], [ %5113, %5096 ]
  %5134 = phi i8 [ %5124, %5125 ], [ %5111, %5096 ]
  store i8 %5127, ptr %5098, align 1, !alias.scope !358, !noalias !338
  %5135 = getelementptr inbounds i8, ptr %5098, i64 1
  store i8 %5128, ptr %5135, align 1, !alias.scope !358, !noalias !338
  %5136 = getelementptr inbounds i8, ptr %5098, i64 2
  store i8 %5129, ptr %5136, align 1, !alias.scope !358, !noalias !338
  %5137 = getelementptr inbounds i8, ptr %5098, i64 3
  store i8 %5130, ptr %5137, align 1, !alias.scope !358, !noalias !338
  %5138 = getelementptr inbounds i8, ptr %5098, i64 4
  store i8 %5131, ptr %5138, align 1, !alias.scope !358, !noalias !338
  %5139 = getelementptr inbounds i8, ptr %5098, i64 5
  store i8 %5132, ptr %5139, align 1, !alias.scope !358, !noalias !338
  %5140 = getelementptr inbounds i8, ptr %5098, i64 6
  store i8 %5133, ptr %5140, align 1, !alias.scope !358, !noalias !338
  %5141 = getelementptr inbounds i8, ptr %5098, i64 7
  store i8 %5134, ptr %5141, align 1, !alias.scope !358, !noalias !338
  %5142 = getelementptr inbounds i8, ptr %5098, i64 8
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %57) #6, !noalias !357
  %5143 = getelementptr inbounds %struct._PixelPacket, ptr %5097, i64 1
  %5144 = load i64, ptr %5095, align 8, !tbaa !47, !noalias !343
  %5145 = getelementptr inbounds i8, ptr %5142, i64 %5144
  %5146 = add nuw nsw i64 %5099, 1
  %5147 = icmp eq i64 %5146, %164
  br i1 %5147, label %17787, label %5096, !llvm.loop !359

5148:                                             ; preds = %5085, %4720
  %5149 = icmp sgt i64 %164, 0
  br i1 %5149, label %5150, label %17831

5150:                                             ; preds = %5148
  %5151 = add i64 %4721, -1
  %5152 = shl i64 2, %5151
  %5153 = add i64 %5152, -1
  %5154 = uitofp i64 %5153 to float
  %5155 = fmul fast float %5154, 0x3EF0001000000000
  %5156 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 14, i32 2
  %5157 = icmp sgt i64 %4721, 0
  %5158 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %5159 = load i64, ptr %5156, align 8, !tbaa !69, !noalias !360
  %5160 = load i64, ptr %5158, align 8, !tbaa !47, !noalias !343
  br label %5161

5161:                                             ; preds = %5202, %5150
  %5162 = phi i64 [ %5159, %5150 ], [ %5203, %5202 ]
  %5163 = phi ptr [ %166, %5150 ], [ %5205, %5202 ]
  %5164 = phi ptr [ %88, %5150 ], [ %5206, %5202 ]
  %5165 = phi i64 [ 0, %5150 ], [ %5207, %5202 ]
  %5166 = load i16, ptr %5163, align 2, !tbaa !31, !alias.scope !338, !noalias !341
  %5167 = uitofp i16 %5166 to float
  %5168 = fmul fast float %5155, %5167
  %5169 = fpext float %5168 to double
  %5170 = fadd fast double %5169, 5.000000e-01
  %5171 = fptoui double %5170 to i64
  tail call void @llvm.experimental.noalias.scope.decl(metadata !363)
  %5172 = icmp eq i64 %5162, 0
  br i1 %5172, label %5173, label %5174

5173:                                             ; preds = %5161
  store i64 8, ptr %5156, align 8, !tbaa !69, !noalias !360
  br label %5174

5174:                                             ; preds = %5173, %5161
  %5175 = phi i64 [ 8, %5173 ], [ %5162, %5161 ]
  br i1 %5157, label %5176, label %5202

5176:                                             ; preds = %5174, %5186
  %5177 = phi i64 [ %5197, %5186 ], [ %5175, %5174 ]
  %5178 = phi i64 [ %5182, %5186 ], [ %4721, %5174 ]
  %5179 = phi ptr [ %5199, %5186 ], [ %5164, %5174 ]
  %5180 = tail call i64 @llvm.umin.i64(i64 %5178, i64 %5177)
  %5181 = sub nsw i64 %5178, %5180
  %5182 = tail call i64 @llvm.smax.i64(i64 %5181, i64 0)
  %5183 = icmp eq i64 %5177, 8
  br i1 %5183, label %5186, label %5184

5184:                                             ; preds = %5176
  %5185 = load i8, ptr %5179, align 1, !tbaa !48, !alias.scope !364, !noalias !338
  br label %5186

5186:                                             ; preds = %5184, %5176
  %5187 = phi i8 [ %5185, %5184 ], [ 0, %5176 ]
  %5188 = sub i64 %5177, %5180
  %5189 = lshr i64 %5171, %5182
  %5190 = shl nsw i64 -1, %5180
  %5191 = xor i64 %5190, -1
  %5192 = and i64 %5189, %5191
  %5193 = shl i64 %5192, %5188
  %5194 = trunc i64 %5193 to i8
  %5195 = or i8 %5187, %5194
  store i8 %5195, ptr %5179, align 1, !tbaa !48, !alias.scope !364, !noalias !338
  %5196 = icmp ule i64 %5177, %5178
  %5197 = select i1 %5196, i64 8, i64 %5188
  %5198 = zext i1 %5196 to i64
  %5199 = getelementptr inbounds i8, ptr %5179, i64 %5198
  %5200 = icmp slt i64 %5181, 1
  br i1 %5200, label %5201, label %5176, !llvm.loop !75

5201:                                             ; preds = %5186
  store i64 %5197, ptr %5156, align 8, !tbaa !69, !noalias !360
  br label %5202

5202:                                             ; preds = %5201, %5174
  %5203 = phi i64 [ %5175, %5174 ], [ %5197, %5201 ]
  %5204 = phi ptr [ %5164, %5174 ], [ %5199, %5201 ]
  %5205 = getelementptr inbounds %struct._PixelPacket, ptr %5163, i64 1
  %5206 = getelementptr inbounds i8, ptr %5204, i64 %5160
  %5207 = add nuw nsw i64 %5165, 1
  %5208 = icmp eq i64 %5207, %164
  br i1 %5208, label %17787, label %5161, !llvm.loop !365

5209:                                             ; preds = %256
  tail call void @llvm.experimental.noalias.scope.decl(metadata !366)
  tail call void @llvm.experimental.noalias.scope.decl(metadata !369)
  %5210 = load i64, ptr %2, align 8, !tbaa !45, !noalias !371
  %5211 = add i64 %5210, -1
  %5212 = shl i64 2, %5211
  %5213 = add i64 %5212, -1
  %5214 = icmp eq i64 %5210, 10
  br i1 %5214, label %5224, label %5215

5215:                                             ; preds = %5209
  %5216 = icmp sgt i64 %164, 0
  br i1 %5216, label %5217, label %17875

5217:                                             ; preds = %5215
  %5218 = uitofp i64 %5213 to float
  %5219 = fmul fast float %5218, 0x3EF0001000000000
  %5220 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 14, i32 2
  %5221 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %5222 = icmp sgt i64 %5210, 0
  %5223 = load i64, ptr %5221, align 8, !tbaa !47, !noalias !371
  br label %5336

5224:                                             ; preds = %5209
  %5225 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 8
  %5226 = load i32, ptr %5225, align 4, !tbaa !84, !noalias !371
  %5227 = icmp eq i32 %5226, 0
  %5228 = icmp sgt i64 %164, 0
  %5229 = and i1 %5228, %5227
  br i1 %5229, label %5230, label %17875

5230:                                             ; preds = %5224
  %5231 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %5232 = load i32, ptr %5231, align 8, !tbaa !51, !noalias !371
  %5233 = icmp eq i32 %5232, 1
  %5234 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %5235 = load i64, ptr %5234, align 8, !tbaa !47, !noalias !371
  br label %5236

5236:                                             ; preds = %5319, %5230
  %5237 = phi i64 [ 0, %5230 ], [ %5279, %5319 ]
  %5238 = phi i16 [ 0, %5230 ], [ %5278, %5319 ]
  %5239 = phi ptr [ %166, %5230 ], [ %5332, %5319 ]
  %5240 = phi i64 [ 0, %5230 ], [ %5334, %5319 ]
  %5241 = phi ptr [ %88, %5230 ], [ %5333, %5319 ]
  %5242 = getelementptr inbounds %struct._PixelPacket, ptr %5239, i64 0, i32 1
  %5243 = getelementptr inbounds %struct._PixelPacket, ptr %5239, i64 0, i32 2
  %5244 = srem i64 %5237, 3
  switch i64 %5244, label %5250 [
    i64 0, label %5247
    i64 1, label %5245
    i64 2, label %5246
  ]

5245:                                             ; preds = %5236
  br label %5247

5246:                                             ; preds = %5236
  br label %5247

5247:                                             ; preds = %5246, %5245, %5236
  %5248 = phi ptr [ %5239, %5246 ], [ %5242, %5245 ], [ %5243, %5236 ]
  %5249 = load i16, ptr %5248, align 2, !tbaa !37, !alias.scope !366, !noalias !369
  br label %5250

5250:                                             ; preds = %5247, %5236
  %5251 = phi i16 [ %5238, %5236 ], [ %5249, %5247 ]
  %5252 = or i64 %5237, 1
  %5253 = srem i64 %5252, 3
  switch i64 %5253, label %5259 [
    i64 0, label %5255
    i64 1, label %5254
    i64 2, label %5256
  ]

5254:                                             ; preds = %5250
  br label %5256

5255:                                             ; preds = %5250
  br label %5256

5256:                                             ; preds = %5255, %5254, %5250
  %5257 = phi ptr [ %5243, %5255 ], [ %5242, %5254 ], [ %5239, %5250 ]
  %5258 = load i16, ptr %5257, align 2, !tbaa !37, !alias.scope !366, !noalias !369
  br label %5259

5259:                                             ; preds = %5256, %5250
  %5260 = phi i16 [ %5251, %5250 ], [ %5258, %5256 ]
  %5261 = or i64 %5237, 2
  %5262 = srem i64 %5261, 3
  switch i64 %5262, label %5268 [
    i64 0, label %5264
    i64 1, label %5263
    i64 2, label %5265
  ]

5263:                                             ; preds = %5259
  br label %5265

5264:                                             ; preds = %5259
  br label %5265

5265:                                             ; preds = %5264, %5263, %5259
  %5266 = phi ptr [ %5243, %5264 ], [ %5242, %5263 ], [ %5239, %5259 ]
  %5267 = load i16, ptr %5266, align 2, !tbaa !37, !alias.scope !366, !noalias !369
  br label %5268

5268:                                             ; preds = %5265, %5259
  %5269 = phi i16 [ %5260, %5259 ], [ %5267, %5265 ]
  %5270 = or i64 %5237, 3
  %5271 = srem i64 %5270, 3
  switch i64 %5271, label %5277 [
    i64 0, label %5273
    i64 1, label %5272
    i64 2, label %5274
  ]

5272:                                             ; preds = %5268
  br label %5274

5273:                                             ; preds = %5268
  br label %5274

5274:                                             ; preds = %5273, %5272, %5268
  %5275 = phi ptr [ %5243, %5273 ], [ %5242, %5272 ], [ %5239, %5268 ]
  %5276 = load i16, ptr %5275, align 2, !tbaa !37, !alias.scope !366, !noalias !369
  br label %5277

5277:                                             ; preds = %5274, %5268
  %5278 = phi i16 [ %5269, %5268 ], [ %5276, %5274 ]
  %5279 = add nuw i64 %5237, 4
  %5280 = zext i16 %5260 to i32
  %5281 = shl i32 %5280, 22
  %5282 = zext i16 %5251 to i32
  %5283 = shl nuw nsw i32 %5282, 12
  %5284 = or i32 %5281, %5283
  %5285 = zext i16 %5269 to i32
  %5286 = shl nuw nsw i32 %5285, 2
  %5287 = or i32 %5286, %5284
  %5288 = lshr i32 %5287, 16
  br i1 %5233, label %5289, label %5292

5289:                                             ; preds = %5277
  %5290 = lshr i32 %5287, 8
  %5291 = lshr i32 %5284, 24
  br label %5295

5292:                                             ; preds = %5277
  %5293 = lshr i32 %5284, 24
  %5294 = lshr i32 %5287, 8
  br label %5295

5295:                                             ; preds = %5292, %5289
  %5296 = phi i32 [ %5287, %5289 ], [ %5293, %5292 ]
  %5297 = phi i32 [ %5290, %5289 ], [ %5288, %5292 ]
  %5298 = phi i32 [ %5288, %5289 ], [ %5294, %5292 ]
  %5299 = phi i32 [ %5291, %5289 ], [ %5287, %5292 ]
  %5300 = trunc i32 %5299 to i8
  %5301 = trunc i32 %5298 to i8
  %5302 = trunc i32 %5297 to i8
  %5303 = trunc i32 %5296 to i8
  store i8 %5303, ptr %5241, align 1, !alias.scope !369, !noalias !366
  %5304 = getelementptr inbounds i8, ptr %5241, i64 1
  store i8 %5302, ptr %5304, align 1, !alias.scope !369, !noalias !366
  %5305 = getelementptr inbounds i8, ptr %5241, i64 2
  store i8 %5301, ptr %5305, align 1, !alias.scope !369, !noalias !366
  %5306 = getelementptr inbounds i8, ptr %5241, i64 3
  store i8 %5300, ptr %5306, align 1, !alias.scope !369, !noalias !366
  %5307 = getelementptr inbounds i8, ptr %5241, i64 4
  %5308 = zext i16 %5278 to i32
  %5309 = shl i32 %5308, 22
  %5310 = or i32 %5309, %5283
  %5311 = or i32 %5310, %5286
  %5312 = lshr i32 %5311, 16
  br i1 %5233, label %5313, label %5316

5313:                                             ; preds = %5295
  %5314 = lshr i32 %5311, 8
  %5315 = lshr i32 %5310, 24
  br label %5319

5316:                                             ; preds = %5295
  %5317 = lshr i32 %5310, 24
  %5318 = lshr i32 %5311, 8
  br label %5319

5319:                                             ; preds = %5316, %5313
  %5320 = phi i32 [ %5311, %5313 ], [ %5317, %5316 ]
  %5321 = phi i32 [ %5314, %5313 ], [ %5312, %5316 ]
  %5322 = phi i32 [ %5312, %5313 ], [ %5318, %5316 ]
  %5323 = phi i32 [ %5315, %5313 ], [ %5311, %5316 ]
  %5324 = trunc i32 %5323 to i8
  %5325 = trunc i32 %5322 to i8
  %5326 = trunc i32 %5321 to i8
  %5327 = trunc i32 %5320 to i8
  store i8 %5327, ptr %5307, align 1, !alias.scope !369, !noalias !366
  %5328 = getelementptr inbounds i8, ptr %5241, i64 5
  store i8 %5326, ptr %5328, align 1, !alias.scope !369, !noalias !366
  %5329 = getelementptr inbounds i8, ptr %5241, i64 6
  store i8 %5325, ptr %5329, align 1, !alias.scope !369, !noalias !366
  %5330 = getelementptr inbounds i8, ptr %5241, i64 7
  store i8 %5324, ptr %5330, align 1, !alias.scope !369, !noalias !366
  %5331 = getelementptr inbounds i8, ptr %5241, i64 8
  %5332 = getelementptr inbounds %struct._PixelPacket, ptr %5239, i64 2
  %5333 = getelementptr inbounds i8, ptr %5331, i64 %5235
  %5334 = add nuw nsw i64 %5240, 2
  %5335 = icmp slt i64 %5334, %164
  br i1 %5335, label %5236, label %17787, !llvm.loop !372

5336:                                             ; preds = %5573, %5217
  %5337 = phi i64 [ 0, %5217 ], [ %5379, %5573 ]
  %5338 = phi i16 [ 0, %5217 ], [ %5378, %5573 ]
  %5339 = phi ptr [ %166, %5217 ], [ %5575, %5573 ]
  %5340 = phi i64 [ 0, %5217 ], [ %5577, %5573 ]
  %5341 = phi ptr [ %88, %5217 ], [ %5576, %5573 ]
  %5342 = getelementptr inbounds %struct._PixelPacket, ptr %5339, i64 0, i32 1
  %5343 = getelementptr inbounds %struct._PixelPacket, ptr %5339, i64 0, i32 2
  %5344 = srem i64 %5337, 3
  switch i64 %5344, label %5350 [
    i64 0, label %5347
    i64 1, label %5345
    i64 2, label %5346
  ]

5345:                                             ; preds = %5336
  br label %5347

5346:                                             ; preds = %5336
  br label %5347

5347:                                             ; preds = %5346, %5345, %5336
  %5348 = phi ptr [ %5339, %5346 ], [ %5342, %5345 ], [ %5343, %5336 ]
  %5349 = load i16, ptr %5348, align 2, !tbaa !37, !alias.scope !366, !noalias !369
  br label %5350

5350:                                             ; preds = %5347, %5336
  %5351 = phi i16 [ %5338, %5336 ], [ %5349, %5347 ]
  %5352 = or i64 %5337, 1
  %5353 = srem i64 %5352, 3
  switch i64 %5353, label %5359 [
    i64 0, label %5355
    i64 1, label %5354
    i64 2, label %5356
  ]

5354:                                             ; preds = %5350
  br label %5356

5355:                                             ; preds = %5350
  br label %5356

5356:                                             ; preds = %5355, %5354, %5350
  %5357 = phi ptr [ %5343, %5355 ], [ %5342, %5354 ], [ %5339, %5350 ]
  %5358 = load i16, ptr %5357, align 2, !tbaa !37, !alias.scope !366, !noalias !369
  br label %5359

5359:                                             ; preds = %5356, %5350
  %5360 = phi i16 [ %5351, %5350 ], [ %5358, %5356 ]
  %5361 = or i64 %5337, 2
  %5362 = srem i64 %5361, 3
  switch i64 %5362, label %5368 [
    i64 0, label %5364
    i64 1, label %5363
    i64 2, label %5365
  ]

5363:                                             ; preds = %5359
  br label %5365

5364:                                             ; preds = %5359
  br label %5365

5365:                                             ; preds = %5364, %5363, %5359
  %5366 = phi ptr [ %5343, %5364 ], [ %5342, %5363 ], [ %5339, %5359 ]
  %5367 = load i16, ptr %5366, align 2, !tbaa !37, !alias.scope !366, !noalias !369
  br label %5368

5368:                                             ; preds = %5365, %5359
  %5369 = phi i16 [ %5360, %5359 ], [ %5367, %5365 ]
  %5370 = or i64 %5337, 3
  %5371 = srem i64 %5370, 3
  switch i64 %5371, label %5377 [
    i64 0, label %5373
    i64 1, label %5372
    i64 2, label %5374
  ]

5372:                                             ; preds = %5368
  br label %5374

5373:                                             ; preds = %5368
  br label %5374

5374:                                             ; preds = %5373, %5372, %5368
  %5375 = phi ptr [ %5343, %5373 ], [ %5342, %5372 ], [ %5339, %5368 ]
  %5376 = load i16, ptr %5375, align 2, !tbaa !37, !alias.scope !366, !noalias !369
  br label %5377

5377:                                             ; preds = %5374, %5368
  %5378 = phi i16 [ %5369, %5368 ], [ %5376, %5374 ]
  %5379 = add nuw i64 %5337, 4
  %5380 = uitofp i16 %5360 to float
  %5381 = fmul fast float %5219, %5380
  %5382 = fpext float %5381 to double
  %5383 = fadd fast double %5382, 5.000000e-01
  %5384 = fptoui double %5383 to i64
  tail call void @llvm.experimental.noalias.scope.decl(metadata !373)
  %5385 = load i64, ptr %5220, align 8, !tbaa !69, !noalias !371
  %5386 = icmp eq i64 %5385, 0
  br i1 %5386, label %5387, label %5388

5387:                                             ; preds = %5377
  store i64 8, ptr %5220, align 8, !tbaa !69, !noalias !376
  br label %5388

5388:                                             ; preds = %5387, %5377
  %5389 = phi i64 [ 8, %5387 ], [ %5385, %5377 ]
  br i1 %5222, label %5390, label %5573

5390:                                             ; preds = %5388, %5400
  %5391 = phi i64 [ %5411, %5400 ], [ %5389, %5388 ]
  %5392 = phi i64 [ %5396, %5400 ], [ %5210, %5388 ]
  %5393 = phi ptr [ %5413, %5400 ], [ %5341, %5388 ]
  %5394 = tail call i64 @llvm.umin.i64(i64 %5392, i64 %5391)
  %5395 = sub nsw i64 %5392, %5394
  %5396 = tail call i64 @llvm.smax.i64(i64 %5395, i64 0)
  %5397 = icmp eq i64 %5391, 8
  br i1 %5397, label %5400, label %5398

5398:                                             ; preds = %5390
  %5399 = load i8, ptr %5393, align 1, !tbaa !48, !alias.scope !377, !noalias !366
  br label %5400

5400:                                             ; preds = %5398, %5390
  %5401 = phi i8 [ %5399, %5398 ], [ 0, %5390 ]
  %5402 = sub i64 %5391, %5394
  %5403 = lshr i64 %5384, %5396
  %5404 = shl nsw i64 -1, %5394
  %5405 = xor i64 %5404, -1
  %5406 = and i64 %5403, %5405
  %5407 = shl i64 %5406, %5402
  %5408 = trunc i64 %5407 to i8
  %5409 = or i8 %5401, %5408
  store i8 %5409, ptr %5393, align 1, !tbaa !48, !alias.scope !377, !noalias !366
  %5410 = icmp ule i64 %5391, %5392
  %5411 = select i1 %5410, i64 8, i64 %5402
  %5412 = zext i1 %5410 to i64
  %5413 = getelementptr inbounds i8, ptr %5393, i64 %5412
  %5414 = icmp slt i64 %5395, 1
  br i1 %5414, label %5415, label %5390, !llvm.loop !75

5415:                                             ; preds = %5400
  %5416 = icmp eq i64 %5411, 0
  %5417 = select i1 %5416, i64 8, i64 %5411
  %5418 = uitofp i16 %5351 to float
  %5419 = fmul fast float %5219, %5418
  %5420 = fpext float %5419 to double
  %5421 = fadd fast double %5420, 5.000000e-01
  %5422 = fptoui double %5421 to i64
  br label %5423

5423:                                             ; preds = %5415, %5433
  %5424 = phi i64 [ %5444, %5433 ], [ %5417, %5415 ]
  %5425 = phi i64 [ %5429, %5433 ], [ %5210, %5415 ]
  %5426 = phi ptr [ %5446, %5433 ], [ %5413, %5415 ]
  %5427 = tail call i64 @llvm.umin.i64(i64 %5425, i64 %5424)
  %5428 = sub nsw i64 %5425, %5427
  %5429 = tail call i64 @llvm.smax.i64(i64 %5428, i64 0)
  %5430 = icmp eq i64 %5424, 8
  br i1 %5430, label %5433, label %5431

5431:                                             ; preds = %5423
  %5432 = load i8, ptr %5426, align 1, !tbaa !48, !alias.scope !378, !noalias !366
  br label %5433

5433:                                             ; preds = %5431, %5423
  %5434 = phi i8 [ %5432, %5431 ], [ 0, %5423 ]
  %5435 = sub i64 %5424, %5427
  %5436 = lshr i64 %5422, %5429
  %5437 = shl nsw i64 -1, %5427
  %5438 = xor i64 %5437, -1
  %5439 = and i64 %5436, %5438
  %5440 = shl i64 %5439, %5435
  %5441 = trunc i64 %5440 to i8
  %5442 = or i8 %5434, %5441
  store i8 %5442, ptr %5426, align 1, !tbaa !48, !alias.scope !378, !noalias !366
  %5443 = icmp ule i64 %5424, %5425
  %5444 = select i1 %5443, i64 8, i64 %5435
  %5445 = zext i1 %5443 to i64
  %5446 = getelementptr inbounds i8, ptr %5426, i64 %5445
  %5447 = icmp slt i64 %5428, 1
  br i1 %5447, label %5448, label %5423, !llvm.loop !75

5448:                                             ; preds = %5433
  tail call void @llvm.experimental.noalias.scope.decl(metadata !381)
  %5449 = icmp eq i64 %5444, 0
  br i1 %5449, label %5450, label %5451

5450:                                             ; preds = %5448
  store i64 8, ptr %5220, align 8, !tbaa !69, !noalias !384
  br label %5451

5451:                                             ; preds = %5450, %5448
  %5452 = phi i64 [ 8, %5450 ], [ %5444, %5448 ]
  %5453 = uitofp i16 %5369 to float
  %5454 = fmul fast float %5219, %5453
  %5455 = fpext float %5454 to double
  %5456 = fadd fast double %5455, 5.000000e-01
  %5457 = fptoui double %5456 to i64
  br label %5458

5458:                                             ; preds = %5451, %5468
  %5459 = phi i64 [ %5479, %5468 ], [ %5452, %5451 ]
  %5460 = phi i64 [ %5464, %5468 ], [ %5210, %5451 ]
  %5461 = phi ptr [ %5481, %5468 ], [ %5446, %5451 ]
  %5462 = tail call i64 @llvm.umin.i64(i64 %5460, i64 %5459)
  %5463 = sub nsw i64 %5460, %5462
  %5464 = tail call i64 @llvm.smax.i64(i64 %5463, i64 0)
  %5465 = icmp eq i64 %5459, 8
  br i1 %5465, label %5468, label %5466

5466:                                             ; preds = %5458
  %5467 = load i8, ptr %5461, align 1, !tbaa !48, !alias.scope !385, !noalias !366
  br label %5468

5468:                                             ; preds = %5466, %5458
  %5469 = phi i8 [ %5467, %5466 ], [ 0, %5458 ]
  %5470 = sub i64 %5459, %5462
  %5471 = lshr i64 %5457, %5464
  %5472 = shl nsw i64 -1, %5462
  %5473 = xor i64 %5472, -1
  %5474 = and i64 %5471, %5473
  %5475 = shl i64 %5474, %5470
  %5476 = trunc i64 %5475 to i8
  %5477 = or i8 %5469, %5476
  store i8 %5477, ptr %5461, align 1, !tbaa !48, !alias.scope !385, !noalias !366
  %5478 = icmp ule i64 %5459, %5460
  %5479 = select i1 %5478, i64 8, i64 %5470
  %5480 = zext i1 %5478 to i64
  %5481 = getelementptr inbounds i8, ptr %5461, i64 %5480
  %5482 = icmp slt i64 %5463, 1
  br i1 %5482, label %5483, label %5458, !llvm.loop !75

5483:                                             ; preds = %5468
  %5484 = icmp eq i64 %5479, 0
  %5485 = select i1 %5484, i64 8, i64 %5479
  %5486 = uitofp i16 %5378 to float
  %5487 = fmul fast float %5219, %5486
  %5488 = fpext float %5487 to double
  %5489 = fadd fast double %5488, 5.000000e-01
  %5490 = fptoui double %5489 to i64
  br label %5491

5491:                                             ; preds = %5483, %5501
  %5492 = phi i64 [ %5512, %5501 ], [ %5485, %5483 ]
  %5493 = phi i64 [ %5497, %5501 ], [ %5210, %5483 ]
  %5494 = phi ptr [ %5514, %5501 ], [ %5481, %5483 ]
  %5495 = tail call i64 @llvm.umin.i64(i64 %5493, i64 %5492)
  %5496 = sub nsw i64 %5493, %5495
  %5497 = tail call i64 @llvm.smax.i64(i64 %5496, i64 0)
  %5498 = icmp eq i64 %5492, 8
  br i1 %5498, label %5501, label %5499

5499:                                             ; preds = %5491
  %5500 = load i8, ptr %5494, align 1, !tbaa !48, !alias.scope !386, !noalias !366
  br label %5501

5501:                                             ; preds = %5499, %5491
  %5502 = phi i8 [ %5500, %5499 ], [ 0, %5491 ]
  %5503 = sub i64 %5492, %5495
  %5504 = lshr i64 %5490, %5497
  %5505 = shl nsw i64 -1, %5495
  %5506 = xor i64 %5505, -1
  %5507 = and i64 %5504, %5506
  %5508 = shl i64 %5507, %5503
  %5509 = trunc i64 %5508 to i8
  %5510 = or i8 %5502, %5509
  store i8 %5510, ptr %5494, align 1, !tbaa !48, !alias.scope !386, !noalias !366
  %5511 = icmp ule i64 %5492, %5493
  %5512 = select i1 %5511, i64 8, i64 %5503
  %5513 = zext i1 %5511 to i64
  %5514 = getelementptr inbounds i8, ptr %5494, i64 %5513
  %5515 = icmp slt i64 %5496, 1
  br i1 %5515, label %5516, label %5491, !llvm.loop !75

5516:                                             ; preds = %5501
  %5517 = icmp eq i64 %5512, 0
  %5518 = select i1 %5517, i64 8, i64 %5512
  br label %5519

5519:                                             ; preds = %5516, %5529
  %5520 = phi i64 [ %5540, %5529 ], [ %5518, %5516 ]
  %5521 = phi i64 [ %5525, %5529 ], [ %5210, %5516 ]
  %5522 = phi ptr [ %5542, %5529 ], [ %5514, %5516 ]
  %5523 = tail call i64 @llvm.umin.i64(i64 %5521, i64 %5520)
  %5524 = sub nsw i64 %5521, %5523
  %5525 = tail call i64 @llvm.smax.i64(i64 %5524, i64 0)
  %5526 = icmp eq i64 %5520, 8
  br i1 %5526, label %5529, label %5527

5527:                                             ; preds = %5519
  %5528 = load i8, ptr %5522, align 1, !tbaa !48, !alias.scope !389, !noalias !366
  br label %5529

5529:                                             ; preds = %5527, %5519
  %5530 = phi i8 [ %5528, %5527 ], [ 0, %5519 ]
  %5531 = sub i64 %5520, %5523
  %5532 = lshr i64 %5422, %5525
  %5533 = shl nsw i64 -1, %5523
  %5534 = xor i64 %5533, -1
  %5535 = and i64 %5532, %5534
  %5536 = shl i64 %5535, %5531
  %5537 = trunc i64 %5536 to i8
  %5538 = or i8 %5530, %5537
  store i8 %5538, ptr %5522, align 1, !tbaa !48, !alias.scope !389, !noalias !366
  %5539 = icmp ule i64 %5520, %5521
  %5540 = select i1 %5539, i64 8, i64 %5531
  %5541 = zext i1 %5539 to i64
  %5542 = getelementptr inbounds i8, ptr %5522, i64 %5541
  %5543 = icmp slt i64 %5524, 1
  br i1 %5543, label %5544, label %5519, !llvm.loop !75

5544:                                             ; preds = %5529
  tail call void @llvm.experimental.noalias.scope.decl(metadata !392)
  %5545 = icmp eq i64 %5540, 0
  %5546 = select i1 %5545, i64 8, i64 %5540
  br label %5547

5547:                                             ; preds = %5544, %5557
  %5548 = phi i64 [ %5568, %5557 ], [ %5546, %5544 ]
  %5549 = phi i64 [ %5553, %5557 ], [ %5210, %5544 ]
  %5550 = phi ptr [ %5570, %5557 ], [ %5542, %5544 ]
  %5551 = tail call i64 @llvm.umin.i64(i64 %5549, i64 %5548)
  %5552 = sub nsw i64 %5549, %5551
  %5553 = tail call i64 @llvm.smax.i64(i64 %5552, i64 0)
  %5554 = icmp eq i64 %5548, 8
  br i1 %5554, label %5557, label %5555

5555:                                             ; preds = %5547
  %5556 = load i8, ptr %5550, align 1, !tbaa !48, !alias.scope !395, !noalias !366
  br label %5557

5557:                                             ; preds = %5555, %5547
  %5558 = phi i8 [ %5556, %5555 ], [ 0, %5547 ]
  %5559 = sub i64 %5548, %5551
  %5560 = lshr i64 %5457, %5553
  %5561 = shl nsw i64 -1, %5551
  %5562 = xor i64 %5561, -1
  %5563 = and i64 %5560, %5562
  %5564 = shl i64 %5563, %5559
  %5565 = trunc i64 %5564 to i8
  %5566 = or i8 %5558, %5565
  store i8 %5566, ptr %5550, align 1, !tbaa !48, !alias.scope !395, !noalias !366
  %5567 = icmp ule i64 %5548, %5549
  %5568 = select i1 %5567, i64 8, i64 %5559
  %5569 = zext i1 %5567 to i64
  %5570 = getelementptr inbounds i8, ptr %5550, i64 %5569
  %5571 = icmp slt i64 %5552, 1
  br i1 %5571, label %5572, label %5547, !llvm.loop !75

5572:                                             ; preds = %5557
  store i64 %5568, ptr %5220, align 8, !tbaa !69, !noalias !396
  br label %5573

5573:                                             ; preds = %5388, %5572
  %5574 = phi ptr [ %5570, %5572 ], [ %5341, %5388 ]
  %5575 = getelementptr inbounds %struct._PixelPacket, ptr %5339, i64 2
  %5576 = getelementptr inbounds i8, ptr %5574, i64 %5223
  %5577 = add nuw nsw i64 %5340, 2
  %5578 = icmp slt i64 %5577, %164
  br i1 %5578, label %5336, label %17787, !llvm.loop !397

5579:                                             ; preds = %256
  tail call void @llvm.experimental.noalias.scope.decl(metadata !398)
  tail call void @llvm.experimental.noalias.scope.decl(metadata !401)
  tail call void @llvm.experimental.noalias.scope.decl(metadata !403)
  %5580 = getelementptr inbounds %struct._Image, ptr %0, i64 0, i32 1
  %5581 = load i32, ptr %5580, align 4, !tbaa !314, !noalias !405
  %5582 = icmp eq i32 %5581, 12
  br i1 %5582, label %5586, label %5583

5583:                                             ; preds = %5579
  %5584 = getelementptr inbounds %struct._Image, ptr %0, i64 0, i32 53
  %5585 = tail call i32 (ptr, ptr, ptr, i64, i32, ptr, ptr, ...) @ThrowMagickException(ptr noundef %5, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, i64 noundef 1224, i32 noundef 465, ptr noundef nonnull @.str.3, ptr noundef nonnull @.str.4, ptr noundef nonnull %5584) #6, !noalias !398
  br label %17875

5586:                                             ; preds = %5579
  %5587 = load i64, ptr %2, align 8, !tbaa !45, !noalias !405
  %5588 = add i64 %5587, -8
  %5589 = tail call i64 @llvm.fshl.i64(i64 %5587, i64 %5588, i64 61)
  switch i64 %5589, label %6456 [
    i64 0, label %5590
    i64 1, label %5634
    i64 3, label %6008
    i64 7, label %6256
  ]

5590:                                             ; preds = %5586
  %5591 = icmp sgt i64 %164, 0
  br i1 %5591, label %5592, label %17875

5592:                                             ; preds = %5590
  %5593 = icmp eq ptr %165, null
  %5594 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %5595 = load i64, ptr %5594, align 8, !tbaa !47, !noalias !405
  br label %5596

5596:                                             ; preds = %5621, %5592
  %5597 = phi i64 [ 0, %5592 ], [ %5632, %5621 ]
  %5598 = phi ptr [ %166, %5592 ], [ %5630, %5621 ]
  %5599 = phi ptr [ %88, %5592 ], [ %5631, %5621 ]
  %5600 = getelementptr inbounds %struct._PixelPacket, ptr %5598, i64 0, i32 1
  %5601 = getelementptr inbounds i8, ptr %5599, i64 2
  %5602 = load <2 x i16>, ptr %5600, align 2, !tbaa !37, !alias.scope !398, !noalias !406
  %5603 = zext <2 x i16> %5602 to <2 x i64>
  %5604 = add nuw nsw <2 x i64> %5603, <i64 128, i64 128>
  %5605 = shufflevector <2 x i64> %5604, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  %5606 = lshr <2 x i64> %5605, <i64 8, i64 8>
  %5607 = sub nsw <2 x i64> %5605, %5606
  %5608 = lshr <2 x i64> %5607, <i64 8, i64 8>
  %5609 = trunc <2 x i64> %5608 to <2 x i8>
  store <2 x i8> %5609, ptr %5599, align 1, !tbaa !48, !alias.scope !403, !noalias !407
  %5610 = load i16, ptr %5598, align 2, !tbaa !31, !alias.scope !398, !noalias !406
  %5611 = zext i16 %5610 to i64
  %5612 = add nuw nsw i64 %5611, 128
  %5613 = lshr i64 %5612, 8
  %5614 = sub nsw i64 %5612, %5613
  %5615 = lshr i64 %5614, 8
  %5616 = trunc i64 %5615 to i8
  %5617 = getelementptr inbounds i8, ptr %5599, i64 3
  store i8 %5616, ptr %5601, align 1, !tbaa !48, !alias.scope !403, !noalias !407
  br i1 %5593, label %5621, label %5618

5618:                                             ; preds = %5596
  %5619 = getelementptr inbounds i16, ptr %165, i64 %5597
  %5620 = load i16, ptr %5619, align 2, !tbaa !37, !alias.scope !401, !noalias !408
  br label %5621

5621:                                             ; preds = %5618, %5596
  %5622 = phi i16 [ %5620, %5618 ], [ 0, %5596 ]
  %5623 = zext i16 %5622 to i64
  %5624 = add nuw nsw i64 %5623, 128
  %5625 = lshr i64 %5624, 8
  %5626 = sub nsw i64 %5624, %5625
  %5627 = lshr i64 %5626, 8
  %5628 = trunc i64 %5627 to i8
  %5629 = getelementptr inbounds i8, ptr %5599, i64 4
  store i8 %5628, ptr %5617, align 1, !tbaa !48, !alias.scope !403, !noalias !407
  %5630 = getelementptr inbounds %struct._PixelPacket, ptr %5598, i64 1
  %5631 = getelementptr inbounds i8, ptr %5629, i64 %5595
  %5632 = add nuw nsw i64 %5597, 1
  %5633 = icmp eq i64 %5632, %164
  br i1 %5633, label %17787, label %5596, !llvm.loop !409

5634:                                             ; preds = %5586
  %5635 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 2
  %5636 = load i32, ptr %5635, align 8, !tbaa !50, !noalias !405
  %5637 = icmp eq i32 %5636, 1
  %5638 = icmp sgt i64 %164, 0
  br i1 %5637, label %5647, label %5639

5639:                                             ; preds = %5634
  br i1 %5638, label %5640, label %17875

5640:                                             ; preds = %5639
  %5641 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %5642 = load i32, ptr %5641, align 8, !tbaa !51, !noalias !405
  %5643 = icmp eq i32 %5642, 1
  %5644 = icmp eq ptr %165, null
  %5645 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %5646 = load i64, ptr %5645, align 8, !tbaa !47, !noalias !405
  br label %5962

5647:                                             ; preds = %5634
  br i1 %5638, label %5648, label %17875

5648:                                             ; preds = %5647
  %5649 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %5650 = load i32, ptr %5649, align 8, !tbaa !51, !noalias !405
  %5651 = icmp eq i32 %5650, 1
  %5652 = icmp eq ptr %165, null
  %5653 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %5654 = load i64, ptr %5653, align 8, !tbaa !47, !noalias !405
  br label %5655

5655:                                             ; preds = %5949, %5648
  %5656 = phi i64 [ 0, %5648 ], [ %5960, %5949 ]
  %5657 = phi ptr [ %166, %5648 ], [ %5958, %5949 ]
  %5658 = phi ptr [ %88, %5648 ], [ %5959, %5949 ]
  %5659 = getelementptr inbounds %struct._PixelPacket, ptr %5657, i64 0, i32 2
  %5660 = load i16, ptr %5659, align 2, !tbaa !29, !alias.scope !398, !noalias !406
  %5661 = uitofp i16 %5660 to double
  %5662 = fmul fast double %5661, 0x3EF0001000100010
  %5663 = fptrunc double %5662 to float
  %5664 = bitcast float %5663 to i32
  %5665 = lshr i32 %5664, 16
  %5666 = and i32 %5665, 32768
  %5667 = lshr i32 %5664, 23
  %5668 = and i32 %5667, 255
  %5669 = add nsw i32 %5668, -112
  %5670 = and i32 %5664, 8388607
  %5671 = icmp ult i32 %5668, 113
  br i1 %5671, label %5672, label %5689

5672:                                             ; preds = %5655
  %5673 = icmp ult i32 %5668, 102
  br i1 %5673, label %5686, label %5674

5674:                                             ; preds = %5672
  %5675 = or i32 %5670, 8388608
  %5676 = sub nuw nsw i32 126, %5668
  %5677 = sub nuw nsw i32 125, %5668
  %5678 = shl nsw i32 -1, %5677
  %5679 = xor i32 %5678, -1
  %5680 = add nuw nsw i32 %5675, %5679
  %5681 = lshr i32 %5675, %5676
  %5682 = and i32 %5681, 1
  %5683 = add nuw nsw i32 %5680, %5682
  %5684 = lshr i32 %5683, %5676
  %5685 = or i32 %5684, %5666
  br label %5686

5686:                                             ; preds = %5674, %5672
  %5687 = phi i32 [ %5685, %5674 ], [ %5666, %5672 ]
  %5688 = trunc i32 %5687 to i16
  br label %5724

5689:                                             ; preds = %5655
  %5690 = icmp eq i32 %5669, 143
  br i1 %5690, label %5691, label %5704

5691:                                             ; preds = %5689
  %5692 = icmp eq i32 %5670, 0
  br i1 %5692, label %5693, label %5696

5693:                                             ; preds = %5691
  %5694 = trunc i32 %5666 to i16
  %5695 = or i16 %5694, 31744
  br label %5724

5696:                                             ; preds = %5691
  %5697 = lshr i32 %5670, 13
  %5698 = icmp ult i32 %5670, 8192
  %5699 = zext i1 %5698 to i32
  %5700 = or i32 %5697, %5699
  %5701 = or i32 %5700, %5666
  %5702 = trunc i32 %5701 to i16
  %5703 = or i16 %5702, 31744
  br label %5724

5704:                                             ; preds = %5689
  %5705 = lshr i32 %5664, 13
  %5706 = and i32 %5705, 1
  %5707 = add nuw nsw i32 %5670, 4095
  %5708 = add nuw nsw i32 %5707, %5706
  %5709 = and i32 %5708, 8388608
  %5710 = icmp eq i32 %5709, 0
  %5711 = add nsw i32 %5668, -111
  %5712 = select i1 %5710, i32 %5669, i32 %5711
  %5713 = icmp ugt i32 %5712, 30
  br i1 %5713, label %5714, label %5717

5714:                                             ; preds = %5704
  %5715 = trunc i32 %5666 to i16
  %5716 = or i16 %5715, 31744
  br label %5724

5717:                                             ; preds = %5704
  %5718 = lshr i32 %5708, 13
  %5719 = shl nuw nsw i32 %5712, 10
  %5720 = select i1 %5710, i32 %5718, i32 0
  %5721 = or i32 %5720, %5719
  %5722 = or i32 %5721, %5666
  %5723 = trunc i32 %5722 to i16
  br label %5724

5724:                                             ; preds = %5717, %5714, %5696, %5693, %5686
  %5725 = phi i16 [ %5688, %5686 ], [ %5695, %5693 ], [ %5703, %5696 ], [ %5716, %5714 ], [ %5723, %5717 ]
  %5726 = lshr i16 %5725, 8
  %5727 = select i1 %5651, i16 %5725, i16 %5726
  %5728 = select i1 %5651, i16 %5726, i16 %5725
  %5729 = trunc i16 %5728 to i8
  %5730 = trunc i16 %5727 to i8
  store i8 %5730, ptr %5658, align 1, !alias.scope !403, !noalias !407
  %5731 = getelementptr inbounds i8, ptr %5658, i64 1
  store i8 %5729, ptr %5731, align 1, !alias.scope !403, !noalias !407
  %5732 = getelementptr inbounds i8, ptr %5658, i64 2
  %5733 = getelementptr inbounds %struct._PixelPacket, ptr %5657, i64 0, i32 1
  %5734 = load i16, ptr %5733, align 2, !tbaa !30, !alias.scope !398, !noalias !406
  %5735 = uitofp i16 %5734 to double
  %5736 = fmul fast double %5735, 0x3EF0001000100010
  %5737 = fptrunc double %5736 to float
  %5738 = bitcast float %5737 to i32
  %5739 = lshr i32 %5738, 16
  %5740 = and i32 %5739, 32768
  %5741 = lshr i32 %5738, 23
  %5742 = and i32 %5741, 255
  %5743 = add nsw i32 %5742, -112
  %5744 = and i32 %5738, 8388607
  %5745 = icmp ult i32 %5742, 113
  br i1 %5745, label %5746, label %5763

5746:                                             ; preds = %5724
  %5747 = icmp ult i32 %5742, 102
  br i1 %5747, label %5760, label %5748

5748:                                             ; preds = %5746
  %5749 = or i32 %5744, 8388608
  %5750 = sub nuw nsw i32 126, %5742
  %5751 = sub nuw nsw i32 125, %5742
  %5752 = shl nsw i32 -1, %5751
  %5753 = xor i32 %5752, -1
  %5754 = add nuw nsw i32 %5749, %5753
  %5755 = lshr i32 %5749, %5750
  %5756 = and i32 %5755, 1
  %5757 = add nuw nsw i32 %5754, %5756
  %5758 = lshr i32 %5757, %5750
  %5759 = or i32 %5758, %5740
  br label %5760

5760:                                             ; preds = %5748, %5746
  %5761 = phi i32 [ %5759, %5748 ], [ %5740, %5746 ]
  %5762 = trunc i32 %5761 to i16
  br label %5798

5763:                                             ; preds = %5724
  %5764 = icmp eq i32 %5743, 143
  br i1 %5764, label %5765, label %5778

5765:                                             ; preds = %5763
  %5766 = icmp eq i32 %5744, 0
  br i1 %5766, label %5767, label %5770

5767:                                             ; preds = %5765
  %5768 = trunc i32 %5740 to i16
  %5769 = or i16 %5768, 31744
  br label %5798

5770:                                             ; preds = %5765
  %5771 = lshr i32 %5744, 13
  %5772 = icmp ult i32 %5744, 8192
  %5773 = zext i1 %5772 to i32
  %5774 = or i32 %5771, %5773
  %5775 = or i32 %5774, %5740
  %5776 = trunc i32 %5775 to i16
  %5777 = or i16 %5776, 31744
  br label %5798

5778:                                             ; preds = %5763
  %5779 = lshr i32 %5738, 13
  %5780 = and i32 %5779, 1
  %5781 = add nuw nsw i32 %5744, 4095
  %5782 = add nuw nsw i32 %5781, %5780
  %5783 = and i32 %5782, 8388608
  %5784 = icmp eq i32 %5783, 0
  %5785 = add nsw i32 %5742, -111
  %5786 = select i1 %5784, i32 %5743, i32 %5785
  %5787 = icmp ugt i32 %5786, 30
  br i1 %5787, label %5788, label %5791

5788:                                             ; preds = %5778
  %5789 = trunc i32 %5740 to i16
  %5790 = or i16 %5789, 31744
  br label %5798

5791:                                             ; preds = %5778
  %5792 = lshr i32 %5782, 13
  %5793 = shl nuw nsw i32 %5786, 10
  %5794 = select i1 %5784, i32 %5792, i32 0
  %5795 = or i32 %5794, %5793
  %5796 = or i32 %5795, %5740
  %5797 = trunc i32 %5796 to i16
  br label %5798

5798:                                             ; preds = %5791, %5788, %5770, %5767, %5760
  %5799 = phi i16 [ %5762, %5760 ], [ %5769, %5767 ], [ %5777, %5770 ], [ %5790, %5788 ], [ %5797, %5791 ]
  %5800 = lshr i16 %5799, 8
  %5801 = select i1 %5651, i16 %5799, i16 %5800
  %5802 = select i1 %5651, i16 %5800, i16 %5799
  %5803 = trunc i16 %5802 to i8
  %5804 = trunc i16 %5801 to i8
  store i8 %5804, ptr %5732, align 1, !alias.scope !403, !noalias !407
  %5805 = getelementptr inbounds i8, ptr %5658, i64 3
  store i8 %5803, ptr %5805, align 1, !alias.scope !403, !noalias !407
  %5806 = getelementptr inbounds i8, ptr %5658, i64 4
  %5807 = load i16, ptr %5657, align 2, !tbaa !31, !alias.scope !398, !noalias !406
  %5808 = uitofp i16 %5807 to double
  %5809 = fmul fast double %5808, 0x3EF0001000100010
  %5810 = fptrunc double %5809 to float
  %5811 = bitcast float %5810 to i32
  %5812 = lshr i32 %5811, 16
  %5813 = and i32 %5812, 32768
  %5814 = lshr i32 %5811, 23
  %5815 = and i32 %5814, 255
  %5816 = add nsw i32 %5815, -112
  %5817 = and i32 %5811, 8388607
  %5818 = icmp ult i32 %5815, 113
  br i1 %5818, label %5819, label %5836

5819:                                             ; preds = %5798
  %5820 = icmp ult i32 %5815, 102
  br i1 %5820, label %5833, label %5821

5821:                                             ; preds = %5819
  %5822 = or i32 %5817, 8388608
  %5823 = sub nuw nsw i32 126, %5815
  %5824 = sub nuw nsw i32 125, %5815
  %5825 = shl nsw i32 -1, %5824
  %5826 = xor i32 %5825, -1
  %5827 = add nuw nsw i32 %5822, %5826
  %5828 = lshr i32 %5822, %5823
  %5829 = and i32 %5828, 1
  %5830 = add nuw nsw i32 %5827, %5829
  %5831 = lshr i32 %5830, %5823
  %5832 = or i32 %5831, %5813
  br label %5833

5833:                                             ; preds = %5821, %5819
  %5834 = phi i32 [ %5832, %5821 ], [ %5813, %5819 ]
  %5835 = trunc i32 %5834 to i16
  br label %5871

5836:                                             ; preds = %5798
  %5837 = icmp eq i32 %5816, 143
  br i1 %5837, label %5838, label %5851

5838:                                             ; preds = %5836
  %5839 = icmp eq i32 %5817, 0
  br i1 %5839, label %5840, label %5843

5840:                                             ; preds = %5838
  %5841 = trunc i32 %5813 to i16
  %5842 = or i16 %5841, 31744
  br label %5871

5843:                                             ; preds = %5838
  %5844 = lshr i32 %5817, 13
  %5845 = icmp ult i32 %5817, 8192
  %5846 = zext i1 %5845 to i32
  %5847 = or i32 %5844, %5846
  %5848 = or i32 %5847, %5813
  %5849 = trunc i32 %5848 to i16
  %5850 = or i16 %5849, 31744
  br label %5871

5851:                                             ; preds = %5836
  %5852 = lshr i32 %5811, 13
  %5853 = and i32 %5852, 1
  %5854 = add nuw nsw i32 %5817, 4095
  %5855 = add nuw nsw i32 %5854, %5853
  %5856 = and i32 %5855, 8388608
  %5857 = icmp eq i32 %5856, 0
  %5858 = add nsw i32 %5815, -111
  %5859 = select i1 %5857, i32 %5816, i32 %5858
  %5860 = icmp ugt i32 %5859, 30
  br i1 %5860, label %5861, label %5864

5861:                                             ; preds = %5851
  %5862 = trunc i32 %5813 to i16
  %5863 = or i16 %5862, 31744
  br label %5871

5864:                                             ; preds = %5851
  %5865 = lshr i32 %5855, 13
  %5866 = shl nuw nsw i32 %5859, 10
  %5867 = select i1 %5857, i32 %5865, i32 0
  %5868 = or i32 %5867, %5866
  %5869 = or i32 %5868, %5813
  %5870 = trunc i32 %5869 to i16
  br label %5871

5871:                                             ; preds = %5864, %5861, %5843, %5840, %5833
  %5872 = phi i16 [ %5835, %5833 ], [ %5842, %5840 ], [ %5850, %5843 ], [ %5863, %5861 ], [ %5870, %5864 ]
  %5873 = lshr i16 %5872, 8
  %5874 = select i1 %5651, i16 %5872, i16 %5873
  %5875 = select i1 %5651, i16 %5873, i16 %5872
  %5876 = trunc i16 %5875 to i8
  %5877 = trunc i16 %5874 to i8
  store i8 %5877, ptr %5806, align 1, !alias.scope !403, !noalias !407
  %5878 = getelementptr inbounds i8, ptr %5658, i64 5
  store i8 %5876, ptr %5878, align 1, !alias.scope !403, !noalias !407
  %5879 = getelementptr inbounds i8, ptr %5658, i64 6
  br i1 %5652, label %5884, label %5880

5880:                                             ; preds = %5871
  %5881 = getelementptr inbounds i16, ptr %165, i64 %5656
  %5882 = load i16, ptr %5881, align 2, !tbaa !37, !alias.scope !401, !noalias !408
  %5883 = zext i16 %5882 to i32
  br label %5884

5884:                                             ; preds = %5880, %5871
  %5885 = phi i32 [ %5883, %5880 ], [ 0, %5871 ]
  %5886 = sitofp i32 %5885 to double
  %5887 = fmul fast double %5886, 0x3EF0001000100010
  %5888 = fptrunc double %5887 to float
  %5889 = bitcast float %5888 to i32
  %5890 = lshr i32 %5889, 16
  %5891 = and i32 %5890, 32768
  %5892 = lshr i32 %5889, 23
  %5893 = and i32 %5892, 255
  %5894 = add nsw i32 %5893, -112
  %5895 = and i32 %5889, 8388607
  %5896 = icmp ult i32 %5893, 113
  br i1 %5896, label %5897, label %5914

5897:                                             ; preds = %5884
  %5898 = icmp ult i32 %5893, 102
  br i1 %5898, label %5911, label %5899

5899:                                             ; preds = %5897
  %5900 = or i32 %5895, 8388608
  %5901 = sub nuw nsw i32 126, %5893
  %5902 = sub nuw nsw i32 125, %5893
  %5903 = shl nsw i32 -1, %5902
  %5904 = xor i32 %5903, -1
  %5905 = add nuw nsw i32 %5900, %5904
  %5906 = lshr i32 %5900, %5901
  %5907 = and i32 %5906, 1
  %5908 = add nuw nsw i32 %5905, %5907
  %5909 = lshr i32 %5908, %5901
  %5910 = or i32 %5909, %5891
  br label %5911

5911:                                             ; preds = %5899, %5897
  %5912 = phi i32 [ %5910, %5899 ], [ %5891, %5897 ]
  %5913 = trunc i32 %5912 to i16
  br label %5949

5914:                                             ; preds = %5884
  %5915 = icmp eq i32 %5894, 143
  br i1 %5915, label %5916, label %5929

5916:                                             ; preds = %5914
  %5917 = icmp eq i32 %5895, 0
  br i1 %5917, label %5918, label %5921

5918:                                             ; preds = %5916
  %5919 = trunc i32 %5891 to i16
  %5920 = or i16 %5919, 31744
  br label %5949

5921:                                             ; preds = %5916
  %5922 = lshr i32 %5895, 13
  %5923 = icmp ult i32 %5895, 8192
  %5924 = zext i1 %5923 to i32
  %5925 = or i32 %5922, %5924
  %5926 = or i32 %5925, %5891
  %5927 = trunc i32 %5926 to i16
  %5928 = or i16 %5927, 31744
  br label %5949

5929:                                             ; preds = %5914
  %5930 = lshr i32 %5889, 13
  %5931 = and i32 %5930, 1
  %5932 = add nuw nsw i32 %5895, 4095
  %5933 = add nuw nsw i32 %5932, %5931
  %5934 = and i32 %5933, 8388608
  %5935 = icmp eq i32 %5934, 0
  %5936 = add nsw i32 %5893, -111
  %5937 = select i1 %5935, i32 %5894, i32 %5936
  %5938 = icmp ugt i32 %5937, 30
  br i1 %5938, label %5939, label %5942

5939:                                             ; preds = %5929
  %5940 = trunc i32 %5891 to i16
  %5941 = or i16 %5940, 31744
  br label %5949

5942:                                             ; preds = %5929
  %5943 = lshr i32 %5933, 13
  %5944 = shl nuw nsw i32 %5937, 10
  %5945 = select i1 %5935, i32 %5943, i32 0
  %5946 = or i32 %5945, %5944
  %5947 = or i32 %5946, %5891
  %5948 = trunc i32 %5947 to i16
  br label %5949

5949:                                             ; preds = %5942, %5939, %5921, %5918, %5911
  %5950 = phi i16 [ %5913, %5911 ], [ %5920, %5918 ], [ %5928, %5921 ], [ %5941, %5939 ], [ %5948, %5942 ]
  %5951 = lshr i16 %5950, 8
  %5952 = select i1 %5651, i16 %5950, i16 %5951
  %5953 = select i1 %5651, i16 %5951, i16 %5950
  %5954 = trunc i16 %5953 to i8
  %5955 = trunc i16 %5952 to i8
  store i8 %5955, ptr %5879, align 1, !alias.scope !403, !noalias !407
  %5956 = getelementptr inbounds i8, ptr %5658, i64 7
  store i8 %5954, ptr %5956, align 1, !alias.scope !403, !noalias !407
  %5957 = getelementptr inbounds i8, ptr %5658, i64 8
  %5958 = getelementptr inbounds %struct._PixelPacket, ptr %5657, i64 1
  %5959 = getelementptr inbounds i8, ptr %5957, i64 %5654
  %5960 = add nuw nsw i64 %5656, 1
  %5961 = icmp eq i64 %5960, %164
  br i1 %5961, label %17787, label %5655, !llvm.loop !410

5962:                                             ; preds = %5995, %5640
  %5963 = phi i64 [ 0, %5640 ], [ %6006, %5995 ]
  %5964 = phi ptr [ %166, %5640 ], [ %6004, %5995 ]
  %5965 = phi ptr [ %88, %5640 ], [ %6005, %5995 ]
  %5966 = getelementptr inbounds %struct._PixelPacket, ptr %5964, i64 0, i32 2
  %5967 = load i16, ptr %5966, align 2, !tbaa !29, !alias.scope !398, !noalias !406
  %5968 = lshr i16 %5967, 8
  %5969 = select i1 %5643, i16 %5967, i16 %5968
  %5970 = select i1 %5643, i16 %5968, i16 %5967
  %5971 = trunc i16 %5970 to i8
  %5972 = trunc i16 %5969 to i8
  store i8 %5972, ptr %5965, align 1, !alias.scope !403, !noalias !407
  %5973 = getelementptr inbounds i8, ptr %5965, i64 1
  store i8 %5971, ptr %5973, align 1, !alias.scope !403, !noalias !407
  %5974 = getelementptr inbounds i8, ptr %5965, i64 2
  %5975 = getelementptr inbounds %struct._PixelPacket, ptr %5964, i64 0, i32 1
  %5976 = load i16, ptr %5975, align 2, !tbaa !30, !alias.scope !398, !noalias !406
  %5977 = lshr i16 %5976, 8
  %5978 = select i1 %5643, i16 %5976, i16 %5977
  %5979 = select i1 %5643, i16 %5977, i16 %5976
  %5980 = trunc i16 %5979 to i8
  %5981 = trunc i16 %5978 to i8
  store i8 %5981, ptr %5974, align 1, !alias.scope !403, !noalias !407
  %5982 = getelementptr inbounds i8, ptr %5965, i64 3
  store i8 %5980, ptr %5982, align 1, !alias.scope !403, !noalias !407
  %5983 = getelementptr inbounds i8, ptr %5965, i64 4
  %5984 = load i16, ptr %5964, align 2, !tbaa !31, !alias.scope !398, !noalias !406
  %5985 = lshr i16 %5984, 8
  %5986 = select i1 %5643, i16 %5984, i16 %5985
  %5987 = select i1 %5643, i16 %5985, i16 %5984
  %5988 = trunc i16 %5987 to i8
  %5989 = trunc i16 %5986 to i8
  store i8 %5989, ptr %5983, align 1, !alias.scope !403, !noalias !407
  %5990 = getelementptr inbounds i8, ptr %5965, i64 5
  store i8 %5988, ptr %5990, align 1, !alias.scope !403, !noalias !407
  %5991 = getelementptr inbounds i8, ptr %5965, i64 6
  br i1 %5644, label %5995, label %5992

5992:                                             ; preds = %5962
  %5993 = getelementptr inbounds i16, ptr %165, i64 %5963
  %5994 = load i16, ptr %5993, align 2, !tbaa !37, !alias.scope !401, !noalias !408
  br label %5995

5995:                                             ; preds = %5992, %5962
  %5996 = phi i16 [ %5994, %5992 ], [ 0, %5962 ]
  %5997 = lshr i16 %5996, 8
  %5998 = select i1 %5643, i16 %5996, i16 %5997
  %5999 = select i1 %5643, i16 %5997, i16 %5996
  %6000 = trunc i16 %5999 to i8
  %6001 = trunc i16 %5998 to i8
  store i8 %6001, ptr %5991, align 1, !alias.scope !403, !noalias !407
  %6002 = getelementptr inbounds i8, ptr %5965, i64 7
  store i8 %6000, ptr %6002, align 1, !alias.scope !403, !noalias !407
  %6003 = getelementptr inbounds i8, ptr %5965, i64 8
  %6004 = getelementptr inbounds %struct._PixelPacket, ptr %5964, i64 1
  %6005 = getelementptr inbounds i8, ptr %6003, i64 %5646
  %6006 = add nuw nsw i64 %5963, 1
  %6007 = icmp eq i64 %6006, %164
  br i1 %6007, label %17787, label %5962, !llvm.loop !411

6008:                                             ; preds = %5586
  %6009 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 2
  %6010 = load i32, ptr %6009, align 8, !tbaa !50, !noalias !405
  %6011 = icmp eq i32 %6010, 1
  %6012 = icmp sgt i64 %164, 0
  br i1 %6011, label %6021, label %6013

6013:                                             ; preds = %6008
  br i1 %6012, label %6014, label %17875

6014:                                             ; preds = %6013
  %6015 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %6016 = load i32, ptr %6015, align 8, !tbaa !51, !noalias !405
  %6017 = icmp eq i32 %6016, 1
  %6018 = icmp eq ptr %165, null
  %6019 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %6020 = load i64, ptr %6019, align 8, !tbaa !47, !noalias !405
  br label %6156

6021:                                             ; preds = %6008
  br i1 %6012, label %6022, label %17875

6022:                                             ; preds = %6021
  %6023 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 14
  %6024 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 3
  %6025 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %6026 = icmp eq ptr %165, null
  %6027 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  br label %6028

6028:                                             ; preds = %6142, %6022
  %6029 = phi i64 [ 0, %6022 ], [ %6154, %6142 ]
  %6030 = phi ptr [ %166, %6022 ], [ %6151, %6142 ]
  %6031 = phi ptr [ %88, %6022 ], [ %6153, %6142 ]
  %6032 = getelementptr inbounds %struct._PixelPacket, ptr %6030, i64 0, i32 2
  %6033 = load i16, ptr %6032, align 2, !tbaa !29, !alias.scope !398, !noalias !406
  call void @llvm.experimental.noalias.scope.decl(metadata !412)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %56) #6, !noalias !415
  %6034 = call ptr @ResetMagickMemory(ptr noundef nonnull %56, i32 noundef 0, i64 noundef 4) #6, !noalias !416
  %6035 = uitofp i16 %6033 to double
  %6036 = load double, ptr %6023, align 8, !tbaa !59, !noalias !415
  %6037 = fmul fast double %6036, %6035
  %6038 = load double, ptr %6024, align 8, !tbaa !60, !noalias !415
  %6039 = fadd fast double %6037, %6038
  %6040 = fptrunc double %6039 to float
  %6041 = load i32, ptr %6025, align 8, !tbaa !51, !noalias !415
  %6042 = icmp eq i32 %6041, 1
  %6043 = bitcast float %6040 to i32
  %6044 = lshr i32 %6043, 24
  %6045 = trunc i32 %6044 to i8
  %6046 = lshr i32 %6043, 16
  %6047 = trunc i32 %6046 to i8
  %6048 = lshr i32 %6043, 8
  %6049 = trunc i32 %6048 to i8
  %6050 = trunc i32 %6043 to i8
  br i1 %6042, label %6052, label %6051

6051:                                             ; preds = %6028
  br label %6052

6052:                                             ; preds = %6051, %6028
  %6053 = phi i8 [ %6045, %6051 ], [ %6050, %6028 ]
  %6054 = phi i8 [ %6047, %6051 ], [ %6049, %6028 ]
  %6055 = phi i8 [ %6049, %6051 ], [ %6047, %6028 ]
  %6056 = phi i8 [ %6050, %6051 ], [ %6045, %6028 ]
  store i8 %6053, ptr %6031, align 1, !alias.scope !417, !noalias !407
  %6057 = getelementptr inbounds i8, ptr %6031, i64 1
  store i8 %6054, ptr %6057, align 1, !alias.scope !417, !noalias !407
  %6058 = getelementptr inbounds i8, ptr %6031, i64 2
  store i8 %6055, ptr %6058, align 1, !alias.scope !417, !noalias !407
  %6059 = getelementptr inbounds i8, ptr %6031, i64 3
  store i8 %6056, ptr %6059, align 1, !alias.scope !417, !noalias !407
  %6060 = getelementptr inbounds i8, ptr %6031, i64 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %56) #6, !noalias !415
  %6061 = getelementptr inbounds %struct._PixelPacket, ptr %6030, i64 0, i32 1
  %6062 = load i16, ptr %6061, align 2, !tbaa !30, !alias.scope !398, !noalias !406
  call void @llvm.experimental.noalias.scope.decl(metadata !418)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %55) #6, !noalias !421
  %6063 = call ptr @ResetMagickMemory(ptr noundef nonnull %55, i32 noundef 0, i64 noundef 4) #6, !noalias !422
  %6064 = uitofp i16 %6062 to double
  %6065 = load double, ptr %6023, align 8, !tbaa !59, !noalias !421
  %6066 = fmul fast double %6065, %6064
  %6067 = load double, ptr %6024, align 8, !tbaa !60, !noalias !421
  %6068 = fadd fast double %6066, %6067
  %6069 = fptrunc double %6068 to float
  %6070 = load i32, ptr %6025, align 8, !tbaa !51, !noalias !421
  %6071 = icmp eq i32 %6070, 1
  %6072 = bitcast float %6069 to i32
  %6073 = lshr i32 %6072, 24
  %6074 = trunc i32 %6073 to i8
  %6075 = lshr i32 %6072, 16
  %6076 = trunc i32 %6075 to i8
  %6077 = lshr i32 %6072, 8
  %6078 = trunc i32 %6077 to i8
  %6079 = trunc i32 %6072 to i8
  br i1 %6071, label %6081, label %6080

6080:                                             ; preds = %6052
  br label %6081

6081:                                             ; preds = %6080, %6052
  %6082 = phi i8 [ %6074, %6080 ], [ %6079, %6052 ]
  %6083 = phi i8 [ %6076, %6080 ], [ %6078, %6052 ]
  %6084 = phi i8 [ %6078, %6080 ], [ %6076, %6052 ]
  %6085 = phi i8 [ %6079, %6080 ], [ %6074, %6052 ]
  store i8 %6082, ptr %6060, align 1, !alias.scope !423, !noalias !407
  %6086 = getelementptr inbounds i8, ptr %6031, i64 5
  store i8 %6083, ptr %6086, align 1, !alias.scope !423, !noalias !407
  %6087 = getelementptr inbounds i8, ptr %6031, i64 6
  store i8 %6084, ptr %6087, align 1, !alias.scope !423, !noalias !407
  %6088 = getelementptr inbounds i8, ptr %6031, i64 7
  store i8 %6085, ptr %6088, align 1, !alias.scope !423, !noalias !407
  %6089 = getelementptr inbounds i8, ptr %6031, i64 8
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %55) #6, !noalias !421
  %6090 = load i16, ptr %6030, align 2, !tbaa !31, !alias.scope !398, !noalias !406
  call void @llvm.experimental.noalias.scope.decl(metadata !424)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %54) #6, !noalias !427
  %6091 = call ptr @ResetMagickMemory(ptr noundef nonnull %54, i32 noundef 0, i64 noundef 4) #6, !noalias !428
  %6092 = uitofp i16 %6090 to double
  %6093 = load double, ptr %6023, align 8, !tbaa !59, !noalias !427
  %6094 = fmul fast double %6093, %6092
  %6095 = load double, ptr %6024, align 8, !tbaa !60, !noalias !427
  %6096 = fadd fast double %6094, %6095
  %6097 = fptrunc double %6096 to float
  %6098 = load i32, ptr %6025, align 8, !tbaa !51, !noalias !427
  %6099 = icmp eq i32 %6098, 1
  %6100 = bitcast float %6097 to i32
  %6101 = lshr i32 %6100, 24
  %6102 = trunc i32 %6101 to i8
  %6103 = lshr i32 %6100, 16
  %6104 = trunc i32 %6103 to i8
  %6105 = lshr i32 %6100, 8
  %6106 = trunc i32 %6105 to i8
  %6107 = trunc i32 %6100 to i8
  br i1 %6099, label %6109, label %6108

6108:                                             ; preds = %6081
  br label %6109

6109:                                             ; preds = %6108, %6081
  %6110 = phi i8 [ %6102, %6108 ], [ %6107, %6081 ]
  %6111 = phi i8 [ %6104, %6108 ], [ %6106, %6081 ]
  %6112 = phi i8 [ %6106, %6108 ], [ %6104, %6081 ]
  %6113 = phi i8 [ %6107, %6108 ], [ %6102, %6081 ]
  store i8 %6110, ptr %6089, align 1, !alias.scope !429, !noalias !407
  %6114 = getelementptr inbounds i8, ptr %6031, i64 9
  store i8 %6111, ptr %6114, align 1, !alias.scope !429, !noalias !407
  %6115 = getelementptr inbounds i8, ptr %6031, i64 10
  store i8 %6112, ptr %6115, align 1, !alias.scope !429, !noalias !407
  %6116 = getelementptr inbounds i8, ptr %6031, i64 11
  store i8 %6113, ptr %6116, align 1, !alias.scope !429, !noalias !407
  %6117 = getelementptr inbounds i8, ptr %6031, i64 12
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %54) #6, !noalias !427
  br i1 %6026, label %6122, label %6118

6118:                                             ; preds = %6109
  %6119 = getelementptr inbounds i16, ptr %165, i64 %6029
  %6120 = load i16, ptr %6119, align 2, !tbaa !37, !alias.scope !401, !noalias !408
  %6121 = zext i16 %6120 to i32
  br label %6122

6122:                                             ; preds = %6118, %6109
  %6123 = phi i32 [ %6121, %6118 ], [ 0, %6109 ]
  call void @llvm.experimental.noalias.scope.decl(metadata !430)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %53) #6, !noalias !433
  %6124 = call ptr @ResetMagickMemory(ptr noundef nonnull %53, i32 noundef 0, i64 noundef 4) #6, !noalias !434
  %6125 = sitofp i32 %6123 to double
  %6126 = load double, ptr %6023, align 8, !tbaa !59, !noalias !433
  %6127 = fmul fast double %6126, %6125
  %6128 = load double, ptr %6024, align 8, !tbaa !60, !noalias !433
  %6129 = fadd fast double %6127, %6128
  %6130 = fptrunc double %6129 to float
  %6131 = load i32, ptr %6025, align 8, !tbaa !51, !noalias !433
  %6132 = icmp eq i32 %6131, 1
  %6133 = bitcast float %6130 to i32
  %6134 = lshr i32 %6133, 24
  %6135 = trunc i32 %6134 to i8
  %6136 = lshr i32 %6133, 16
  %6137 = trunc i32 %6136 to i8
  %6138 = lshr i32 %6133, 8
  %6139 = trunc i32 %6138 to i8
  %6140 = trunc i32 %6133 to i8
  br i1 %6132, label %6142, label %6141

6141:                                             ; preds = %6122
  br label %6142

6142:                                             ; preds = %6141, %6122
  %6143 = phi i8 [ %6135, %6141 ], [ %6140, %6122 ]
  %6144 = phi i8 [ %6137, %6141 ], [ %6139, %6122 ]
  %6145 = phi i8 [ %6139, %6141 ], [ %6137, %6122 ]
  %6146 = phi i8 [ %6140, %6141 ], [ %6135, %6122 ]
  store i8 %6143, ptr %6117, align 1, !alias.scope !435, !noalias !407
  %6147 = getelementptr inbounds i8, ptr %6031, i64 13
  store i8 %6144, ptr %6147, align 1, !alias.scope !435, !noalias !407
  %6148 = getelementptr inbounds i8, ptr %6031, i64 14
  store i8 %6145, ptr %6148, align 1, !alias.scope !435, !noalias !407
  %6149 = getelementptr inbounds i8, ptr %6031, i64 15
  store i8 %6146, ptr %6149, align 1, !alias.scope !435, !noalias !407
  %6150 = getelementptr inbounds i8, ptr %6031, i64 16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %53) #6, !noalias !433
  %6151 = getelementptr inbounds %struct._PixelPacket, ptr %6030, i64 1
  %6152 = load i64, ptr %6027, align 8, !tbaa !47, !noalias !405
  %6153 = getelementptr inbounds i8, ptr %6150, i64 %6152
  %6154 = add nuw nsw i64 %6029, 1
  %6155 = icmp eq i64 %6154, %164
  br i1 %6155, label %17787, label %6028, !llvm.loop !436

6156:                                             ; preds = %6239, %6014
  %6157 = phi i64 [ 0, %6014 ], [ %6254, %6239 ]
  %6158 = phi ptr [ %166, %6014 ], [ %6252, %6239 ]
  %6159 = phi ptr [ %88, %6014 ], [ %6253, %6239 ]
  %6160 = getelementptr inbounds %struct._PixelPacket, ptr %6158, i64 0, i32 2
  %6161 = load i16, ptr %6160, align 2, !tbaa !29, !alias.scope !398, !noalias !406
  %6162 = zext i16 %6161 to i32
  %6163 = mul nuw i32 %6162, 65537
  %6164 = getelementptr inbounds i8, ptr %6159, i64 1
  %6165 = getelementptr inbounds i8, ptr %6159, i64 2
  %6166 = getelementptr inbounds i8, ptr %6159, i64 3
  %6167 = getelementptr inbounds i8, ptr %6159, i64 4
  %6168 = getelementptr inbounds %struct._PixelPacket, ptr %6158, i64 0, i32 1
  %6169 = getelementptr inbounds i8, ptr %6159, i64 5
  %6170 = load i16, ptr %6168, align 2, !tbaa !30, !alias.scope !398, !noalias !406
  %6171 = zext i16 %6170 to i32
  %6172 = mul nuw i32 %6171, 65537
  %6173 = load i16, ptr %6158, align 2, !tbaa !31, !alias.scope !398, !noalias !406
  %6174 = zext i16 %6173 to i32
  %6175 = mul nuw i32 %6174, 65537
  br i1 %6017, label %6176, label %6187

6176:                                             ; preds = %6156
  %6177 = lshr i32 %6163, 8
  %6178 = lshr i32 %6163, 24
  %6179 = trunc i16 %6161 to i8
  %6180 = trunc i32 %6177 to i8
  %6181 = lshr i32 %6172, 8
  %6182 = lshr i32 %6172, 24
  %6183 = trunc i16 %6170 to i8
  %6184 = trunc i32 %6181 to i8
  %6185 = lshr i32 %6175, 8
  %6186 = lshr i32 %6175, 24
  br label %6198

6187:                                             ; preds = %6156
  %6188 = lshr i32 %6163, 24
  %6189 = lshr i32 %6163, 8
  %6190 = trunc i32 %6189 to i8
  %6191 = trunc i16 %6161 to i8
  %6192 = lshr i32 %6172, 24
  %6193 = lshr i32 %6172, 8
  %6194 = trunc i32 %6193 to i8
  %6195 = trunc i16 %6170 to i8
  %6196 = lshr i32 %6175, 24
  %6197 = lshr i32 %6175, 8
  br label %6198

6198:                                             ; preds = %6187, %6176
  %6199 = phi i32 [ %6163, %6176 ], [ %6188, %6187 ]
  %6200 = phi i8 [ %6180, %6176 ], [ %6191, %6187 ]
  %6201 = phi i8 [ %6179, %6176 ], [ %6190, %6187 ]
  %6202 = phi i32 [ %6178, %6176 ], [ %6163, %6187 ]
  %6203 = phi i32 [ %6172, %6176 ], [ %6192, %6187 ]
  %6204 = phi i8 [ %6184, %6176 ], [ %6195, %6187 ]
  %6205 = phi i8 [ %6183, %6176 ], [ %6194, %6187 ]
  %6206 = phi i32 [ %6182, %6176 ], [ %6172, %6187 ]
  %6207 = phi i32 [ %6175, %6176 ], [ %6196, %6187 ]
  %6208 = phi i32 [ %6185, %6176 ], [ %6174, %6187 ]
  %6209 = phi i32 [ %6174, %6176 ], [ %6197, %6187 ]
  %6210 = phi i32 [ %6186, %6176 ], [ %6175, %6187 ]
  %6211 = trunc i32 %6206 to i8
  %6212 = trunc i32 %6203 to i8
  %6213 = trunc i32 %6202 to i8
  %6214 = trunc i32 %6199 to i8
  store i8 %6214, ptr %6159, align 1
  store i8 %6200, ptr %6164, align 1
  store i8 %6201, ptr %6165, align 1
  store i8 %6213, ptr %6166, align 1
  store i8 %6212, ptr %6167, align 1
  store i8 %6204, ptr %6169, align 1
  %6215 = getelementptr inbounds i8, ptr %6159, i64 6
  store i8 %6205, ptr %6215, align 1
  %6216 = getelementptr inbounds i8, ptr %6159, i64 7
  store i8 %6211, ptr %6216, align 1
  %6217 = getelementptr inbounds i8, ptr %6159, i64 8
  %6218 = trunc i32 %6210 to i8
  %6219 = trunc i32 %6209 to i8
  %6220 = trunc i32 %6208 to i8
  %6221 = trunc i32 %6207 to i8
  store i8 %6221, ptr %6217, align 1, !alias.scope !403, !noalias !407
  %6222 = getelementptr inbounds i8, ptr %6159, i64 9
  store i8 %6220, ptr %6222, align 1, !alias.scope !403, !noalias !407
  %6223 = getelementptr inbounds i8, ptr %6159, i64 10
  store i8 %6219, ptr %6223, align 1, !alias.scope !403, !noalias !407
  %6224 = getelementptr inbounds i8, ptr %6159, i64 11
  store i8 %6218, ptr %6224, align 1, !alias.scope !403, !noalias !407
  %6225 = getelementptr inbounds i8, ptr %6159, i64 12
  br i1 %6018, label %6229, label %6226

6226:                                             ; preds = %6198
  %6227 = getelementptr inbounds i16, ptr %165, i64 %6157
  %6228 = load i16, ptr %6227, align 2, !tbaa !37, !alias.scope !401, !noalias !408
  br label %6229

6229:                                             ; preds = %6226, %6198
  %6230 = phi i16 [ %6228, %6226 ], [ 0, %6198 ]
  %6231 = zext i16 %6230 to i32
  %6232 = mul nuw i32 %6231, 65537
  br i1 %6017, label %6233, label %6236

6233:                                             ; preds = %6229
  %6234 = lshr i32 %6232, 8
  %6235 = lshr i32 %6232, 24
  br label %6239

6236:                                             ; preds = %6229
  %6237 = lshr i32 %6232, 24
  %6238 = lshr i32 %6232, 8
  br label %6239

6239:                                             ; preds = %6236, %6233
  %6240 = phi i32 [ %6232, %6233 ], [ %6237, %6236 ]
  %6241 = phi i32 [ %6234, %6233 ], [ %6231, %6236 ]
  %6242 = phi i32 [ %6231, %6233 ], [ %6238, %6236 ]
  %6243 = phi i32 [ %6235, %6233 ], [ %6232, %6236 ]
  %6244 = trunc i32 %6243 to i8
  %6245 = trunc i32 %6242 to i8
  %6246 = trunc i32 %6241 to i8
  %6247 = trunc i32 %6240 to i8
  store i8 %6247, ptr %6225, align 1, !alias.scope !403, !noalias !407
  %6248 = getelementptr inbounds i8, ptr %6159, i64 13
  store i8 %6246, ptr %6248, align 1, !alias.scope !403, !noalias !407
  %6249 = getelementptr inbounds i8, ptr %6159, i64 14
  store i8 %6245, ptr %6249, align 1, !alias.scope !403, !noalias !407
  %6250 = getelementptr inbounds i8, ptr %6159, i64 15
  store i8 %6244, ptr %6250, align 1, !alias.scope !403, !noalias !407
  %6251 = getelementptr inbounds i8, ptr %6159, i64 16
  %6252 = getelementptr inbounds %struct._PixelPacket, ptr %6158, i64 1
  %6253 = getelementptr inbounds i8, ptr %6251, i64 %6020
  %6254 = add nuw nsw i64 %6157, 1
  %6255 = icmp eq i64 %6254, %164
  br i1 %6255, label %17787, label %6156, !llvm.loop !437

6256:                                             ; preds = %5586
  %6257 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 2
  %6258 = load i32, ptr %6257, align 8, !tbaa !50, !noalias !405
  %6259 = icmp eq i32 %6258, 1
  br i1 %6259, label %6260, label %6456

6260:                                             ; preds = %6256
  %6261 = icmp sgt i64 %164, 0
  br i1 %6261, label %6262, label %17875

6262:                                             ; preds = %6260
  %6263 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 14
  %6264 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 3
  %6265 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %6266 = icmp eq ptr %165, null
  %6267 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  br label %6268

6268:                                             ; preds = %6434, %6262
  %6269 = phi i64 [ 0, %6262 ], [ %6454, %6434 ]
  %6270 = phi ptr [ %166, %6262 ], [ %6451, %6434 ]
  %6271 = phi ptr [ %88, %6262 ], [ %6453, %6434 ]
  %6272 = getelementptr inbounds %struct._PixelPacket, ptr %6270, i64 0, i32 2
  %6273 = load i16, ptr %6272, align 2, !tbaa !29, !alias.scope !398, !noalias !406
  %6274 = uitofp i16 %6273 to double
  call void @llvm.experimental.noalias.scope.decl(metadata !438)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %52) #6, !noalias !441
  %6275 = call ptr @ResetMagickMemory(ptr noundef nonnull %52, i32 noundef 0, i64 noundef 8) #6, !noalias !442
  %6276 = load double, ptr %6263, align 8, !tbaa !59, !noalias !441
  %6277 = fmul fast double %6276, %6274
  %6278 = load double, ptr %6264, align 8, !tbaa !60, !noalias !441
  %6279 = fadd fast double %6277, %6278
  %6280 = load i32, ptr %6265, align 8, !tbaa !51, !noalias !441
  %6281 = icmp eq i32 %6280, 1
  %6282 = bitcast double %6279 to i64
  %6283 = lshr i64 %6282, 56
  %6284 = trunc i64 %6283 to i8
  %6285 = lshr i64 %6282, 48
  %6286 = trunc i64 %6285 to i8
  %6287 = lshr i64 %6282, 40
  %6288 = trunc i64 %6287 to i8
  %6289 = lshr i64 %6282, 32
  %6290 = trunc i64 %6289 to i8
  %6291 = lshr i64 %6282, 24
  %6292 = trunc i64 %6291 to i8
  %6293 = lshr i64 %6282, 16
  %6294 = trunc i64 %6293 to i8
  %6295 = lshr i64 %6282, 8
  %6296 = trunc i64 %6295 to i8
  %6297 = trunc i64 %6282 to i8
  br i1 %6281, label %6299, label %6298

6298:                                             ; preds = %6268
  br label %6299

6299:                                             ; preds = %6298, %6268
  %6300 = phi i8 [ %6284, %6298 ], [ %6297, %6268 ]
  %6301 = phi i8 [ %6286, %6298 ], [ %6296, %6268 ]
  %6302 = phi i8 [ %6288, %6298 ], [ %6294, %6268 ]
  %6303 = phi i8 [ %6290, %6298 ], [ %6292, %6268 ]
  %6304 = phi i8 [ %6292, %6298 ], [ %6290, %6268 ]
  %6305 = phi i8 [ %6294, %6298 ], [ %6288, %6268 ]
  %6306 = phi i8 [ %6296, %6298 ], [ %6286, %6268 ]
  %6307 = phi i8 [ %6297, %6298 ], [ %6284, %6268 ]
  store i8 %6300, ptr %6271, align 1, !alias.scope !443, !noalias !407
  %6308 = getelementptr inbounds i8, ptr %6271, i64 1
  store i8 %6301, ptr %6308, align 1, !alias.scope !443, !noalias !407
  %6309 = getelementptr inbounds i8, ptr %6271, i64 2
  store i8 %6302, ptr %6309, align 1, !alias.scope !443, !noalias !407
  %6310 = getelementptr inbounds i8, ptr %6271, i64 3
  store i8 %6303, ptr %6310, align 1, !alias.scope !443, !noalias !407
  %6311 = getelementptr inbounds i8, ptr %6271, i64 4
  store i8 %6304, ptr %6311, align 1, !alias.scope !443, !noalias !407
  %6312 = getelementptr inbounds i8, ptr %6271, i64 5
  store i8 %6305, ptr %6312, align 1, !alias.scope !443, !noalias !407
  %6313 = getelementptr inbounds i8, ptr %6271, i64 6
  store i8 %6306, ptr %6313, align 1, !alias.scope !443, !noalias !407
  %6314 = getelementptr inbounds i8, ptr %6271, i64 7
  store i8 %6307, ptr %6314, align 1, !alias.scope !443, !noalias !407
  %6315 = getelementptr inbounds i8, ptr %6271, i64 8
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %52) #6, !noalias !441
  %6316 = getelementptr inbounds %struct._PixelPacket, ptr %6270, i64 0, i32 1
  %6317 = load i16, ptr %6316, align 2, !tbaa !30, !alias.scope !398, !noalias !406
  %6318 = uitofp i16 %6317 to double
  call void @llvm.experimental.noalias.scope.decl(metadata !444)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %51) #6, !noalias !447
  %6319 = call ptr @ResetMagickMemory(ptr noundef nonnull %51, i32 noundef 0, i64 noundef 8) #6, !noalias !448
  %6320 = load double, ptr %6263, align 8, !tbaa !59, !noalias !447
  %6321 = fmul fast double %6320, %6318
  %6322 = load double, ptr %6264, align 8, !tbaa !60, !noalias !447
  %6323 = fadd fast double %6321, %6322
  %6324 = load i32, ptr %6265, align 8, !tbaa !51, !noalias !447
  %6325 = icmp eq i32 %6324, 1
  %6326 = bitcast double %6323 to i64
  %6327 = lshr i64 %6326, 56
  %6328 = trunc i64 %6327 to i8
  %6329 = lshr i64 %6326, 48
  %6330 = trunc i64 %6329 to i8
  %6331 = lshr i64 %6326, 40
  %6332 = trunc i64 %6331 to i8
  %6333 = lshr i64 %6326, 32
  %6334 = trunc i64 %6333 to i8
  %6335 = lshr i64 %6326, 24
  %6336 = trunc i64 %6335 to i8
  %6337 = lshr i64 %6326, 16
  %6338 = trunc i64 %6337 to i8
  %6339 = lshr i64 %6326, 8
  %6340 = trunc i64 %6339 to i8
  %6341 = trunc i64 %6326 to i8
  br i1 %6325, label %6343, label %6342

6342:                                             ; preds = %6299
  br label %6343

6343:                                             ; preds = %6342, %6299
  %6344 = phi i8 [ %6328, %6342 ], [ %6341, %6299 ]
  %6345 = phi i8 [ %6330, %6342 ], [ %6340, %6299 ]
  %6346 = phi i8 [ %6332, %6342 ], [ %6338, %6299 ]
  %6347 = phi i8 [ %6334, %6342 ], [ %6336, %6299 ]
  %6348 = phi i8 [ %6336, %6342 ], [ %6334, %6299 ]
  %6349 = phi i8 [ %6338, %6342 ], [ %6332, %6299 ]
  %6350 = phi i8 [ %6340, %6342 ], [ %6330, %6299 ]
  %6351 = phi i8 [ %6341, %6342 ], [ %6328, %6299 ]
  store i8 %6344, ptr %6315, align 1, !alias.scope !449, !noalias !407
  %6352 = getelementptr inbounds i8, ptr %6271, i64 9
  store i8 %6345, ptr %6352, align 1, !alias.scope !449, !noalias !407
  %6353 = getelementptr inbounds i8, ptr %6271, i64 10
  store i8 %6346, ptr %6353, align 1, !alias.scope !449, !noalias !407
  %6354 = getelementptr inbounds i8, ptr %6271, i64 11
  store i8 %6347, ptr %6354, align 1, !alias.scope !449, !noalias !407
  %6355 = getelementptr inbounds i8, ptr %6271, i64 12
  store i8 %6348, ptr %6355, align 1, !alias.scope !449, !noalias !407
  %6356 = getelementptr inbounds i8, ptr %6271, i64 13
  store i8 %6349, ptr %6356, align 1, !alias.scope !449, !noalias !407
  %6357 = getelementptr inbounds i8, ptr %6271, i64 14
  store i8 %6350, ptr %6357, align 1, !alias.scope !449, !noalias !407
  %6358 = getelementptr inbounds i8, ptr %6271, i64 15
  store i8 %6351, ptr %6358, align 1, !alias.scope !449, !noalias !407
  %6359 = getelementptr inbounds i8, ptr %6271, i64 16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %51) #6, !noalias !447
  %6360 = load i16, ptr %6270, align 2, !tbaa !31, !alias.scope !398, !noalias !406
  %6361 = uitofp i16 %6360 to double
  call void @llvm.experimental.noalias.scope.decl(metadata !450)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %50) #6, !noalias !453
  %6362 = call ptr @ResetMagickMemory(ptr noundef nonnull %50, i32 noundef 0, i64 noundef 8) #6, !noalias !454
  %6363 = load double, ptr %6263, align 8, !tbaa !59, !noalias !453
  %6364 = fmul fast double %6363, %6361
  %6365 = load double, ptr %6264, align 8, !tbaa !60, !noalias !453
  %6366 = fadd fast double %6364, %6365
  %6367 = load i32, ptr %6265, align 8, !tbaa !51, !noalias !453
  %6368 = icmp eq i32 %6367, 1
  %6369 = bitcast double %6366 to i64
  %6370 = lshr i64 %6369, 56
  %6371 = trunc i64 %6370 to i8
  %6372 = lshr i64 %6369, 48
  %6373 = trunc i64 %6372 to i8
  %6374 = lshr i64 %6369, 40
  %6375 = trunc i64 %6374 to i8
  %6376 = lshr i64 %6369, 32
  %6377 = trunc i64 %6376 to i8
  %6378 = lshr i64 %6369, 24
  %6379 = trunc i64 %6378 to i8
  %6380 = lshr i64 %6369, 16
  %6381 = trunc i64 %6380 to i8
  %6382 = lshr i64 %6369, 8
  %6383 = trunc i64 %6382 to i8
  %6384 = trunc i64 %6369 to i8
  br i1 %6368, label %6386, label %6385

6385:                                             ; preds = %6343
  br label %6386

6386:                                             ; preds = %6385, %6343
  %6387 = phi i8 [ %6371, %6385 ], [ %6384, %6343 ]
  %6388 = phi i8 [ %6373, %6385 ], [ %6383, %6343 ]
  %6389 = phi i8 [ %6375, %6385 ], [ %6381, %6343 ]
  %6390 = phi i8 [ %6377, %6385 ], [ %6379, %6343 ]
  %6391 = phi i8 [ %6379, %6385 ], [ %6377, %6343 ]
  %6392 = phi i8 [ %6381, %6385 ], [ %6375, %6343 ]
  %6393 = phi i8 [ %6383, %6385 ], [ %6373, %6343 ]
  %6394 = phi i8 [ %6384, %6385 ], [ %6371, %6343 ]
  store i8 %6387, ptr %6359, align 1, !alias.scope !455, !noalias !407
  %6395 = getelementptr inbounds i8, ptr %6271, i64 17
  store i8 %6388, ptr %6395, align 1, !alias.scope !455, !noalias !407
  %6396 = getelementptr inbounds i8, ptr %6271, i64 18
  store i8 %6389, ptr %6396, align 1, !alias.scope !455, !noalias !407
  %6397 = getelementptr inbounds i8, ptr %6271, i64 19
  store i8 %6390, ptr %6397, align 1, !alias.scope !455, !noalias !407
  %6398 = getelementptr inbounds i8, ptr %6271, i64 20
  store i8 %6391, ptr %6398, align 1, !alias.scope !455, !noalias !407
  %6399 = getelementptr inbounds i8, ptr %6271, i64 21
  store i8 %6392, ptr %6399, align 1, !alias.scope !455, !noalias !407
  %6400 = getelementptr inbounds i8, ptr %6271, i64 22
  store i8 %6393, ptr %6400, align 1, !alias.scope !455, !noalias !407
  %6401 = getelementptr inbounds i8, ptr %6271, i64 23
  store i8 %6394, ptr %6401, align 1, !alias.scope !455, !noalias !407
  %6402 = getelementptr inbounds i8, ptr %6271, i64 24
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %50) #6, !noalias !453
  br i1 %6266, label %6407, label %6403

6403:                                             ; preds = %6386
  %6404 = getelementptr inbounds i16, ptr %165, i64 %6269
  %6405 = load i16, ptr %6404, align 2, !tbaa !37, !alias.scope !401, !noalias !408
  %6406 = zext i16 %6405 to i32
  br label %6407

6407:                                             ; preds = %6403, %6386
  %6408 = phi i32 [ %6406, %6403 ], [ 0, %6386 ]
  %6409 = sitofp i32 %6408 to double
  call void @llvm.experimental.noalias.scope.decl(metadata !456)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %49) #6, !noalias !459
  %6410 = call ptr @ResetMagickMemory(ptr noundef nonnull %49, i32 noundef 0, i64 noundef 8) #6, !noalias !460
  %6411 = load double, ptr %6263, align 8, !tbaa !59, !noalias !459
  %6412 = fmul fast double %6411, %6409
  %6413 = load double, ptr %6264, align 8, !tbaa !60, !noalias !459
  %6414 = fadd fast double %6412, %6413
  %6415 = load i32, ptr %6265, align 8, !tbaa !51, !noalias !459
  %6416 = icmp eq i32 %6415, 1
  %6417 = bitcast double %6414 to i64
  %6418 = lshr i64 %6417, 56
  %6419 = trunc i64 %6418 to i8
  %6420 = lshr i64 %6417, 48
  %6421 = trunc i64 %6420 to i8
  %6422 = lshr i64 %6417, 40
  %6423 = trunc i64 %6422 to i8
  %6424 = lshr i64 %6417, 32
  %6425 = trunc i64 %6424 to i8
  %6426 = lshr i64 %6417, 24
  %6427 = trunc i64 %6426 to i8
  %6428 = lshr i64 %6417, 16
  %6429 = trunc i64 %6428 to i8
  %6430 = lshr i64 %6417, 8
  %6431 = trunc i64 %6430 to i8
  %6432 = trunc i64 %6417 to i8
  br i1 %6416, label %6434, label %6433

6433:                                             ; preds = %6407
  br label %6434

6434:                                             ; preds = %6433, %6407
  %6435 = phi i8 [ %6419, %6433 ], [ %6432, %6407 ]
  %6436 = phi i8 [ %6421, %6433 ], [ %6431, %6407 ]
  %6437 = phi i8 [ %6423, %6433 ], [ %6429, %6407 ]
  %6438 = phi i8 [ %6425, %6433 ], [ %6427, %6407 ]
  %6439 = phi i8 [ %6427, %6433 ], [ %6425, %6407 ]
  %6440 = phi i8 [ %6429, %6433 ], [ %6423, %6407 ]
  %6441 = phi i8 [ %6431, %6433 ], [ %6421, %6407 ]
  %6442 = phi i8 [ %6432, %6433 ], [ %6419, %6407 ]
  store i8 %6435, ptr %6402, align 1, !alias.scope !461, !noalias !407
  %6443 = getelementptr inbounds i8, ptr %6271, i64 25
  store i8 %6436, ptr %6443, align 1, !alias.scope !461, !noalias !407
  %6444 = getelementptr inbounds i8, ptr %6271, i64 26
  store i8 %6437, ptr %6444, align 1, !alias.scope !461, !noalias !407
  %6445 = getelementptr inbounds i8, ptr %6271, i64 27
  store i8 %6438, ptr %6445, align 1, !alias.scope !461, !noalias !407
  %6446 = getelementptr inbounds i8, ptr %6271, i64 28
  store i8 %6439, ptr %6446, align 1, !alias.scope !461, !noalias !407
  %6447 = getelementptr inbounds i8, ptr %6271, i64 29
  store i8 %6440, ptr %6447, align 1, !alias.scope !461, !noalias !407
  %6448 = getelementptr inbounds i8, ptr %6271, i64 30
  store i8 %6441, ptr %6448, align 1, !alias.scope !461, !noalias !407
  %6449 = getelementptr inbounds i8, ptr %6271, i64 31
  store i8 %6442, ptr %6449, align 1, !alias.scope !461, !noalias !407
  %6450 = getelementptr inbounds i8, ptr %6271, i64 32
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %49) #6, !noalias !459
  %6451 = getelementptr inbounds %struct._PixelPacket, ptr %6270, i64 1
  %6452 = load i64, ptr %6267, align 8, !tbaa !47, !noalias !405
  %6453 = getelementptr inbounds i8, ptr %6450, i64 %6452
  %6454 = add nuw nsw i64 %6269, 1
  %6455 = icmp eq i64 %6454, %164
  br i1 %6455, label %17787, label %6268, !llvm.loop !462

6456:                                             ; preds = %6256, %5586
  %6457 = icmp sgt i64 %164, 0
  br i1 %6457, label %6458, label %17875

6458:                                             ; preds = %6456
  %6459 = add i64 %5587, -1
  %6460 = shl i64 2, %6459
  %6461 = add i64 %6460, -1
  %6462 = uitofp i64 %6461 to float
  %6463 = fmul fast float %6462, 0x3EF0001000000000
  %6464 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 14, i32 2
  %6465 = icmp eq ptr %165, null
  %6466 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %6467 = load i64, ptr %6464, align 8, !tbaa !69, !noalias !405
  %6468 = icmp sgt i64 %5587, 0
  %6469 = load i64, ptr %6466, align 8, !tbaa !47, !noalias !405
  br label %6470

6470:                                             ; preds = %6634, %6458
  %6471 = phi i64 [ %6467, %6458 ], [ %6635, %6634 ]
  %6472 = phi i64 [ 0, %6458 ], [ %6639, %6634 ]
  %6473 = phi ptr [ %166, %6458 ], [ %6637, %6634 ]
  %6474 = phi ptr [ %88, %6458 ], [ %6638, %6634 ]
  %6475 = getelementptr inbounds %struct._PixelPacket, ptr %6473, i64 0, i32 2
  %6476 = load i16, ptr %6475, align 2, !tbaa !29, !alias.scope !398, !noalias !406
  %6477 = uitofp i16 %6476 to float
  %6478 = fmul fast float %6463, %6477
  %6479 = fpext float %6478 to double
  %6480 = fadd fast double %6479, 5.000000e-01
  %6481 = fptoui double %6480 to i64
  tail call void @llvm.experimental.noalias.scope.decl(metadata !463)
  %6482 = icmp eq i64 %6471, 0
  br i1 %6482, label %6483, label %6484

6483:                                             ; preds = %6470
  store i64 8, ptr %6464, align 8, !tbaa !69, !noalias !466
  br label %6484

6484:                                             ; preds = %6483, %6470
  %6485 = phi i64 [ 8, %6483 ], [ %6471, %6470 ]
  br i1 %6468, label %6486, label %6512

6486:                                             ; preds = %6484, %6496
  %6487 = phi i64 [ %6507, %6496 ], [ %6485, %6484 ]
  %6488 = phi i64 [ %6492, %6496 ], [ %5587, %6484 ]
  %6489 = phi ptr [ %6509, %6496 ], [ %6474, %6484 ]
  %6490 = tail call i64 @llvm.umin.i64(i64 %6488, i64 %6487)
  %6491 = sub nsw i64 %6488, %6490
  %6492 = tail call i64 @llvm.smax.i64(i64 %6491, i64 0)
  %6493 = icmp eq i64 %6487, 8
  br i1 %6493, label %6496, label %6494

6494:                                             ; preds = %6486
  %6495 = load i8, ptr %6489, align 1, !tbaa !48, !alias.scope !467, !noalias !407
  br label %6496

6496:                                             ; preds = %6494, %6486
  %6497 = phi i8 [ %6495, %6494 ], [ 0, %6486 ]
  %6498 = sub i64 %6487, %6490
  %6499 = lshr i64 %6481, %6492
  %6500 = shl nsw i64 -1, %6490
  %6501 = xor i64 %6500, -1
  %6502 = and i64 %6499, %6501
  %6503 = shl i64 %6502, %6498
  %6504 = trunc i64 %6503 to i8
  %6505 = or i8 %6497, %6504
  store i8 %6505, ptr %6489, align 1, !tbaa !48, !alias.scope !467, !noalias !407
  %6506 = icmp ule i64 %6487, %6488
  %6507 = select i1 %6506, i64 8, i64 %6498
  %6508 = zext i1 %6506 to i64
  %6509 = getelementptr inbounds i8, ptr %6489, i64 %6508
  %6510 = icmp slt i64 %6491, 1
  br i1 %6510, label %6511, label %6486, !llvm.loop !75

6511:                                             ; preds = %6496
  store i64 %6507, ptr %6464, align 8, !tbaa !69, !noalias !466
  br label %6512

6512:                                             ; preds = %6511, %6484
  %6513 = phi i64 [ %6485, %6484 ], [ %6507, %6511 ]
  %6514 = phi ptr [ %6474, %6484 ], [ %6509, %6511 ]
  %6515 = getelementptr inbounds %struct._PixelPacket, ptr %6473, i64 0, i32 1
  %6516 = load i16, ptr %6515, align 2, !tbaa !30, !alias.scope !398, !noalias !406
  %6517 = uitofp i16 %6516 to float
  %6518 = fmul fast float %6463, %6517
  %6519 = fpext float %6518 to double
  %6520 = fadd fast double %6519, 5.000000e-01
  %6521 = fptoui double %6520 to i64
  tail call void @llvm.experimental.noalias.scope.decl(metadata !468)
  %6522 = icmp eq i64 %6513, 0
  br i1 %6522, label %6523, label %6524

6523:                                             ; preds = %6512
  store i64 8, ptr %6464, align 8, !tbaa !69, !noalias !471
  br label %6524

6524:                                             ; preds = %6523, %6512
  %6525 = phi i64 [ 8, %6523 ], [ %6513, %6512 ]
  br i1 %6468, label %6526, label %6552

6526:                                             ; preds = %6524, %6536
  %6527 = phi i64 [ %6547, %6536 ], [ %6525, %6524 ]
  %6528 = phi i64 [ %6532, %6536 ], [ %5587, %6524 ]
  %6529 = phi ptr [ %6549, %6536 ], [ %6514, %6524 ]
  %6530 = tail call i64 @llvm.umin.i64(i64 %6528, i64 %6527)
  %6531 = sub nsw i64 %6528, %6530
  %6532 = tail call i64 @llvm.smax.i64(i64 %6531, i64 0)
  %6533 = icmp eq i64 %6527, 8
  br i1 %6533, label %6536, label %6534

6534:                                             ; preds = %6526
  %6535 = load i8, ptr %6529, align 1, !tbaa !48, !alias.scope !472, !noalias !407
  br label %6536

6536:                                             ; preds = %6534, %6526
  %6537 = phi i8 [ %6535, %6534 ], [ 0, %6526 ]
  %6538 = sub i64 %6527, %6530
  %6539 = lshr i64 %6521, %6532
  %6540 = shl nsw i64 -1, %6530
  %6541 = xor i64 %6540, -1
  %6542 = and i64 %6539, %6541
  %6543 = shl i64 %6542, %6538
  %6544 = trunc i64 %6543 to i8
  %6545 = or i8 %6537, %6544
  store i8 %6545, ptr %6529, align 1, !tbaa !48, !alias.scope !472, !noalias !407
  %6546 = icmp ule i64 %6527, %6528
  %6547 = select i1 %6546, i64 8, i64 %6538
  %6548 = zext i1 %6546 to i64
  %6549 = getelementptr inbounds i8, ptr %6529, i64 %6548
  %6550 = icmp slt i64 %6531, 1
  br i1 %6550, label %6551, label %6526, !llvm.loop !75

6551:                                             ; preds = %6536
  store i64 %6547, ptr %6464, align 8, !tbaa !69, !noalias !471
  br label %6552

6552:                                             ; preds = %6551, %6524
  %6553 = phi i64 [ %6525, %6524 ], [ %6547, %6551 ]
  %6554 = phi ptr [ %6514, %6524 ], [ %6549, %6551 ]
  %6555 = load i16, ptr %6473, align 2, !tbaa !31, !alias.scope !398, !noalias !406
  %6556 = uitofp i16 %6555 to float
  %6557 = fmul fast float %6463, %6556
  %6558 = fpext float %6557 to double
  %6559 = fadd fast double %6558, 5.000000e-01
  %6560 = fptoui double %6559 to i64
  tail call void @llvm.experimental.noalias.scope.decl(metadata !473)
  %6561 = icmp eq i64 %6553, 0
  br i1 %6561, label %6562, label %6563

6562:                                             ; preds = %6552
  store i64 8, ptr %6464, align 8, !tbaa !69, !noalias !476
  br label %6563

6563:                                             ; preds = %6562, %6552
  %6564 = phi i64 [ 8, %6562 ], [ %6553, %6552 ]
  br i1 %6468, label %6565, label %6591

6565:                                             ; preds = %6563, %6575
  %6566 = phi i64 [ %6586, %6575 ], [ %6564, %6563 ]
  %6567 = phi i64 [ %6571, %6575 ], [ %5587, %6563 ]
  %6568 = phi ptr [ %6588, %6575 ], [ %6554, %6563 ]
  %6569 = tail call i64 @llvm.umin.i64(i64 %6567, i64 %6566)
  %6570 = sub nsw i64 %6567, %6569
  %6571 = tail call i64 @llvm.smax.i64(i64 %6570, i64 0)
  %6572 = icmp eq i64 %6566, 8
  br i1 %6572, label %6575, label %6573

6573:                                             ; preds = %6565
  %6574 = load i8, ptr %6568, align 1, !tbaa !48, !alias.scope !477, !noalias !407
  br label %6575

6575:                                             ; preds = %6573, %6565
  %6576 = phi i8 [ %6574, %6573 ], [ 0, %6565 ]
  %6577 = sub i64 %6566, %6569
  %6578 = lshr i64 %6560, %6571
  %6579 = shl nsw i64 -1, %6569
  %6580 = xor i64 %6579, -1
  %6581 = and i64 %6578, %6580
  %6582 = shl i64 %6581, %6577
  %6583 = trunc i64 %6582 to i8
  %6584 = or i8 %6576, %6583
  store i8 %6584, ptr %6568, align 1, !tbaa !48, !alias.scope !477, !noalias !407
  %6585 = icmp ule i64 %6566, %6567
  %6586 = select i1 %6585, i64 8, i64 %6577
  %6587 = zext i1 %6585 to i64
  %6588 = getelementptr inbounds i8, ptr %6568, i64 %6587
  %6589 = icmp slt i64 %6570, 1
  br i1 %6589, label %6590, label %6565, !llvm.loop !75

6590:                                             ; preds = %6575
  store i64 %6586, ptr %6464, align 8, !tbaa !69, !noalias !476
  br label %6591

6591:                                             ; preds = %6590, %6563
  %6592 = phi i64 [ %6564, %6563 ], [ %6586, %6590 ]
  %6593 = phi ptr [ %6554, %6563 ], [ %6588, %6590 ]
  br i1 %6465, label %6597, label %6594

6594:                                             ; preds = %6591
  %6595 = getelementptr inbounds i16, ptr %165, i64 %6472
  %6596 = load i16, ptr %6595, align 2, !tbaa !37, !alias.scope !401, !noalias !408
  br label %6597

6597:                                             ; preds = %6594, %6591
  %6598 = phi i16 [ %6596, %6594 ], [ 0, %6591 ]
  %6599 = uitofp i16 %6598 to float
  %6600 = fmul fast float %6463, %6599
  %6601 = fpext float %6600 to double
  %6602 = fadd fast double %6601, 5.000000e-01
  %6603 = fptoui double %6602 to i64
  tail call void @llvm.experimental.noalias.scope.decl(metadata !478)
  %6604 = icmp eq i64 %6592, 0
  br i1 %6604, label %6605, label %6606

6605:                                             ; preds = %6597
  store i64 8, ptr %6464, align 8, !tbaa !69, !noalias !481
  br label %6606

6606:                                             ; preds = %6605, %6597
  %6607 = phi i64 [ 8, %6605 ], [ %6592, %6597 ]
  br i1 %6468, label %6608, label %6634

6608:                                             ; preds = %6606, %6618
  %6609 = phi i64 [ %6629, %6618 ], [ %6607, %6606 ]
  %6610 = phi i64 [ %6614, %6618 ], [ %5587, %6606 ]
  %6611 = phi ptr [ %6631, %6618 ], [ %6593, %6606 ]
  %6612 = tail call i64 @llvm.umin.i64(i64 %6610, i64 %6609)
  %6613 = sub nsw i64 %6610, %6612
  %6614 = tail call i64 @llvm.smax.i64(i64 %6613, i64 0)
  %6615 = icmp eq i64 %6609, 8
  br i1 %6615, label %6618, label %6616

6616:                                             ; preds = %6608
  %6617 = load i8, ptr %6611, align 1, !tbaa !48, !alias.scope !482, !noalias !407
  br label %6618

6618:                                             ; preds = %6616, %6608
  %6619 = phi i8 [ %6617, %6616 ], [ 0, %6608 ]
  %6620 = sub i64 %6609, %6612
  %6621 = lshr i64 %6603, %6614
  %6622 = shl nsw i64 -1, %6612
  %6623 = xor i64 %6622, -1
  %6624 = and i64 %6621, %6623
  %6625 = shl i64 %6624, %6620
  %6626 = trunc i64 %6625 to i8
  %6627 = or i8 %6619, %6626
  store i8 %6627, ptr %6611, align 1, !tbaa !48, !alias.scope !482, !noalias !407
  %6628 = icmp ule i64 %6609, %6610
  %6629 = select i1 %6628, i64 8, i64 %6620
  %6630 = zext i1 %6628 to i64
  %6631 = getelementptr inbounds i8, ptr %6611, i64 %6630
  %6632 = icmp slt i64 %6613, 1
  br i1 %6632, label %6633, label %6608, !llvm.loop !75

6633:                                             ; preds = %6618
  store i64 %6629, ptr %6464, align 8, !tbaa !69, !noalias !481
  br label %6634

6634:                                             ; preds = %6633, %6606
  %6635 = phi i64 [ %6607, %6606 ], [ %6629, %6633 ]
  %6636 = phi ptr [ %6593, %6606 ], [ %6631, %6633 ]
  %6637 = getelementptr inbounds %struct._PixelPacket, ptr %6473, i64 1
  %6638 = getelementptr inbounds i8, ptr %6636, i64 %6469
  %6639 = add nuw nsw i64 %6472, 1
  %6640 = icmp eq i64 %6639, %164
  br i1 %6640, label %17787, label %6470, !llvm.loop !483

6641:                                             ; preds = %256, %256
  tail call void @llvm.experimental.noalias.scope.decl(metadata !484)
  tail call void @llvm.experimental.noalias.scope.decl(metadata !487)
  tail call void @llvm.experimental.noalias.scope.decl(metadata !489)
  %6642 = getelementptr inbounds %struct._Image, ptr %0, i64 0, i32 1
  %6643 = load i32, ptr %6642, align 4, !tbaa !314, !noalias !491
  %6644 = icmp eq i32 %6643, 12
  br i1 %6644, label %6648, label %6645

6645:                                             ; preds = %6641
  %6646 = getelementptr inbounds %struct._Image, ptr %0, i64 0, i32 53
  %6647 = tail call i32 (ptr, ptr, ptr, i64, i32, ptr, ptr, ...) @ThrowMagickException(ptr noundef %5, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, i64 noundef 1371, i32 noundef 465, ptr noundef nonnull @.str.3, ptr noundef nonnull @.str.4, ptr noundef nonnull %6646) #6, !noalias !484
  br label %17787

6648:                                             ; preds = %6641
  %6649 = load i64, ptr %2, align 8, !tbaa !45, !noalias !491
  %6650 = add i64 %6649, -8
  %6651 = tail call i64 @llvm.fshl.i64(i64 %6649, i64 %6650, i64 61)
  switch i64 %6651, label %7707 [
    i64 0, label %6652
    i64 1, label %6701
    i64 3, label %7160
    i64 7, label %7462
  ]

6652:                                             ; preds = %6648
  %6653 = icmp sgt i64 %164, 0
  br i1 %6653, label %6654, label %17787

6654:                                             ; preds = %6652
  %6655 = icmp eq ptr %165, null
  %6656 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %6657 = load i64, ptr %6656, align 8, !tbaa !47, !noalias !491
  br label %6658

6658:                                             ; preds = %6683, %6654
  %6659 = phi ptr [ %166, %6654 ], [ %6697, %6683 ]
  %6660 = phi ptr [ %88, %6654 ], [ %6698, %6683 ]
  %6661 = phi i64 [ 0, %6654 ], [ %6699, %6683 ]
  %6662 = getelementptr inbounds %struct._PixelPacket, ptr %6659, i64 0, i32 1
  %6663 = getelementptr inbounds i8, ptr %6660, i64 2
  %6664 = load <2 x i16>, ptr %6662, align 2, !tbaa !37, !alias.scope !484, !noalias !492
  %6665 = zext <2 x i16> %6664 to <2 x i64>
  %6666 = add nuw nsw <2 x i64> %6665, <i64 128, i64 128>
  %6667 = shufflevector <2 x i64> %6666, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  %6668 = lshr <2 x i64> %6667, <i64 8, i64 8>
  %6669 = sub nsw <2 x i64> %6667, %6668
  %6670 = lshr <2 x i64> %6669, <i64 8, i64 8>
  %6671 = trunc <2 x i64> %6670 to <2 x i8>
  store <2 x i8> %6671, ptr %6660, align 1, !tbaa !48, !alias.scope !489, !noalias !493
  %6672 = load i16, ptr %6659, align 2, !tbaa !31, !alias.scope !484, !noalias !492
  %6673 = zext i16 %6672 to i64
  %6674 = add nuw nsw i64 %6673, 128
  %6675 = lshr i64 %6674, 8
  %6676 = sub nsw i64 %6674, %6675
  %6677 = lshr i64 %6676, 8
  %6678 = trunc i64 %6677 to i8
  %6679 = getelementptr inbounds i8, ptr %6660, i64 3
  store i8 %6678, ptr %6663, align 1, !tbaa !48, !alias.scope !489, !noalias !493
  br i1 %6655, label %6683, label %6680

6680:                                             ; preds = %6658
  %6681 = getelementptr inbounds i16, ptr %165, i64 %6661
  %6682 = load i16, ptr %6681, align 2, !tbaa !37, !alias.scope !487, !noalias !494
  br label %6683

6683:                                             ; preds = %6680, %6658
  %6684 = phi i16 [ %6682, %6680 ], [ 0, %6658 ]
  %6685 = getelementptr inbounds %struct._PixelPacket, ptr %6659, i64 0, i32 3
  %6686 = load i16, ptr %6685, align 2, !tbaa !28, !alias.scope !484, !noalias !492
  %6687 = xor i16 %6686, -1
  %6688 = getelementptr inbounds i8, ptr %6660, i64 5
  %6689 = insertelement <2 x i16> poison, i16 %6684, i64 0
  %6690 = insertelement <2 x i16> %6689, i16 %6687, i64 1
  %6691 = zext <2 x i16> %6690 to <2 x i64>
  %6692 = add nuw nsw <2 x i64> %6691, <i64 128, i64 128>
  %6693 = lshr <2 x i64> %6692, <i64 8, i64 8>
  %6694 = sub nsw <2 x i64> %6692, %6693
  %6695 = lshr <2 x i64> %6694, <i64 8, i64 8>
  %6696 = trunc <2 x i64> %6695 to <2 x i8>
  store <2 x i8> %6696, ptr %6679, align 1, !tbaa !48, !alias.scope !489, !noalias !493
  %6697 = getelementptr inbounds %struct._PixelPacket, ptr %6659, i64 1
  %6698 = getelementptr inbounds i8, ptr %6688, i64 %6657
  %6699 = add nuw nsw i64 %6661, 1
  %6700 = icmp eq i64 %6699, %164
  br i1 %6700, label %17787, label %6658, !llvm.loop !495

6701:                                             ; preds = %6648
  %6702 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 2
  %6703 = load i32, ptr %6702, align 8, !tbaa !50, !noalias !491
  %6704 = icmp eq i32 %6703, 1
  %6705 = icmp sgt i64 %164, 0
  br i1 %6704, label %6714, label %6706

6706:                                             ; preds = %6701
  br i1 %6705, label %6707, label %17787

6707:                                             ; preds = %6706
  %6708 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %6709 = load i32, ptr %6708, align 8, !tbaa !51, !noalias !491
  %6710 = icmp eq i32 %6709, 1
  %6711 = icmp eq ptr %165, null
  %6712 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %6713 = load i64, ptr %6712, align 8, !tbaa !47, !noalias !491
  br label %7104

6714:                                             ; preds = %6701
  br i1 %6705, label %6715, label %17787

6715:                                             ; preds = %6714
  %6716 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %6717 = load i32, ptr %6716, align 8, !tbaa !51, !noalias !491
  %6718 = icmp eq i32 %6717, 1
  %6719 = icmp eq ptr %165, null
  %6720 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %6721 = load i64, ptr %6720, align 8, !tbaa !47, !noalias !491
  br label %6722

6722:                                             ; preds = %7091, %6715
  %6723 = phi ptr [ %166, %6715 ], [ %7100, %7091 ]
  %6724 = phi ptr [ %88, %6715 ], [ %7101, %7091 ]
  %6725 = phi i64 [ 0, %6715 ], [ %7102, %7091 ]
  %6726 = getelementptr inbounds %struct._PixelPacket, ptr %6723, i64 0, i32 2
  %6727 = load i16, ptr %6726, align 2, !tbaa !29, !alias.scope !484, !noalias !492
  %6728 = uitofp i16 %6727 to double
  %6729 = fmul fast double %6728, 0x3EF0001000100010
  %6730 = fptrunc double %6729 to float
  %6731 = bitcast float %6730 to i32
  %6732 = lshr i32 %6731, 16
  %6733 = and i32 %6732, 32768
  %6734 = lshr i32 %6731, 23
  %6735 = and i32 %6734, 255
  %6736 = add nsw i32 %6735, -112
  %6737 = and i32 %6731, 8388607
  %6738 = icmp ult i32 %6735, 113
  br i1 %6738, label %6739, label %6756

6739:                                             ; preds = %6722
  %6740 = icmp ult i32 %6735, 102
  br i1 %6740, label %6753, label %6741

6741:                                             ; preds = %6739
  %6742 = or i32 %6737, 8388608
  %6743 = sub nuw nsw i32 126, %6735
  %6744 = sub nuw nsw i32 125, %6735
  %6745 = shl nsw i32 -1, %6744
  %6746 = xor i32 %6745, -1
  %6747 = add nuw nsw i32 %6742, %6746
  %6748 = lshr i32 %6742, %6743
  %6749 = and i32 %6748, 1
  %6750 = add nuw nsw i32 %6747, %6749
  %6751 = lshr i32 %6750, %6743
  %6752 = or i32 %6751, %6733
  br label %6753

6753:                                             ; preds = %6741, %6739
  %6754 = phi i32 [ %6752, %6741 ], [ %6733, %6739 ]
  %6755 = trunc i32 %6754 to i16
  br label %6791

6756:                                             ; preds = %6722
  %6757 = icmp eq i32 %6736, 143
  br i1 %6757, label %6758, label %6771

6758:                                             ; preds = %6756
  %6759 = icmp eq i32 %6737, 0
  br i1 %6759, label %6760, label %6763

6760:                                             ; preds = %6758
  %6761 = trunc i32 %6733 to i16
  %6762 = or i16 %6761, 31744
  br label %6791

6763:                                             ; preds = %6758
  %6764 = lshr i32 %6737, 13
  %6765 = icmp ult i32 %6737, 8192
  %6766 = zext i1 %6765 to i32
  %6767 = or i32 %6764, %6766
  %6768 = or i32 %6767, %6733
  %6769 = trunc i32 %6768 to i16
  %6770 = or i16 %6769, 31744
  br label %6791

6771:                                             ; preds = %6756
  %6772 = lshr i32 %6731, 13
  %6773 = and i32 %6772, 1
  %6774 = add nuw nsw i32 %6737, 4095
  %6775 = add nuw nsw i32 %6774, %6773
  %6776 = and i32 %6775, 8388608
  %6777 = icmp eq i32 %6776, 0
  %6778 = add nsw i32 %6735, -111
  %6779 = select i1 %6777, i32 %6736, i32 %6778
  %6780 = icmp ugt i32 %6779, 30
  br i1 %6780, label %6781, label %6784

6781:                                             ; preds = %6771
  %6782 = trunc i32 %6733 to i16
  %6783 = or i16 %6782, 31744
  br label %6791

6784:                                             ; preds = %6771
  %6785 = lshr i32 %6775, 13
  %6786 = shl nuw nsw i32 %6779, 10
  %6787 = select i1 %6777, i32 %6785, i32 0
  %6788 = or i32 %6787, %6786
  %6789 = or i32 %6788, %6733
  %6790 = trunc i32 %6789 to i16
  br label %6791

6791:                                             ; preds = %6784, %6781, %6763, %6760, %6753
  %6792 = phi i16 [ %6755, %6753 ], [ %6762, %6760 ], [ %6770, %6763 ], [ %6783, %6781 ], [ %6790, %6784 ]
  %6793 = lshr i16 %6792, 8
  %6794 = select i1 %6718, i16 %6792, i16 %6793
  %6795 = select i1 %6718, i16 %6793, i16 %6792
  %6796 = trunc i16 %6795 to i8
  %6797 = trunc i16 %6794 to i8
  store i8 %6797, ptr %6724, align 1, !alias.scope !489, !noalias !493
  %6798 = getelementptr inbounds i8, ptr %6724, i64 1
  store i8 %6796, ptr %6798, align 1, !alias.scope !489, !noalias !493
  %6799 = getelementptr inbounds i8, ptr %6724, i64 2
  %6800 = getelementptr inbounds %struct._PixelPacket, ptr %6723, i64 0, i32 1
  %6801 = load i16, ptr %6800, align 2, !tbaa !30, !alias.scope !484, !noalias !492
  %6802 = uitofp i16 %6801 to double
  %6803 = fmul fast double %6802, 0x3EF0001000100010
  %6804 = fptrunc double %6803 to float
  %6805 = bitcast float %6804 to i32
  %6806 = lshr i32 %6805, 16
  %6807 = and i32 %6806, 32768
  %6808 = lshr i32 %6805, 23
  %6809 = and i32 %6808, 255
  %6810 = add nsw i32 %6809, -112
  %6811 = and i32 %6805, 8388607
  %6812 = icmp ult i32 %6809, 113
  br i1 %6812, label %6813, label %6830

6813:                                             ; preds = %6791
  %6814 = icmp ult i32 %6809, 102
  br i1 %6814, label %6827, label %6815

6815:                                             ; preds = %6813
  %6816 = or i32 %6811, 8388608
  %6817 = sub nuw nsw i32 126, %6809
  %6818 = sub nuw nsw i32 125, %6809
  %6819 = shl nsw i32 -1, %6818
  %6820 = xor i32 %6819, -1
  %6821 = add nuw nsw i32 %6816, %6820
  %6822 = lshr i32 %6816, %6817
  %6823 = and i32 %6822, 1
  %6824 = add nuw nsw i32 %6821, %6823
  %6825 = lshr i32 %6824, %6817
  %6826 = or i32 %6825, %6807
  br label %6827

6827:                                             ; preds = %6815, %6813
  %6828 = phi i32 [ %6826, %6815 ], [ %6807, %6813 ]
  %6829 = trunc i32 %6828 to i16
  br label %6865

6830:                                             ; preds = %6791
  %6831 = icmp eq i32 %6810, 143
  br i1 %6831, label %6832, label %6845

6832:                                             ; preds = %6830
  %6833 = icmp eq i32 %6811, 0
  br i1 %6833, label %6834, label %6837

6834:                                             ; preds = %6832
  %6835 = trunc i32 %6807 to i16
  %6836 = or i16 %6835, 31744
  br label %6865

6837:                                             ; preds = %6832
  %6838 = lshr i32 %6811, 13
  %6839 = icmp ult i32 %6811, 8192
  %6840 = zext i1 %6839 to i32
  %6841 = or i32 %6838, %6840
  %6842 = or i32 %6841, %6807
  %6843 = trunc i32 %6842 to i16
  %6844 = or i16 %6843, 31744
  br label %6865

6845:                                             ; preds = %6830
  %6846 = lshr i32 %6805, 13
  %6847 = and i32 %6846, 1
  %6848 = add nuw nsw i32 %6811, 4095
  %6849 = add nuw nsw i32 %6848, %6847
  %6850 = and i32 %6849, 8388608
  %6851 = icmp eq i32 %6850, 0
  %6852 = add nsw i32 %6809, -111
  %6853 = select i1 %6851, i32 %6810, i32 %6852
  %6854 = icmp ugt i32 %6853, 30
  br i1 %6854, label %6855, label %6858

6855:                                             ; preds = %6845
  %6856 = trunc i32 %6807 to i16
  %6857 = or i16 %6856, 31744
  br label %6865

6858:                                             ; preds = %6845
  %6859 = lshr i32 %6849, 13
  %6860 = shl nuw nsw i32 %6853, 10
  %6861 = select i1 %6851, i32 %6859, i32 0
  %6862 = or i32 %6861, %6860
  %6863 = or i32 %6862, %6807
  %6864 = trunc i32 %6863 to i16
  br label %6865

6865:                                             ; preds = %6858, %6855, %6837, %6834, %6827
  %6866 = phi i16 [ %6829, %6827 ], [ %6836, %6834 ], [ %6844, %6837 ], [ %6857, %6855 ], [ %6864, %6858 ]
  %6867 = lshr i16 %6866, 8
  %6868 = select i1 %6718, i16 %6866, i16 %6867
  %6869 = select i1 %6718, i16 %6867, i16 %6866
  %6870 = trunc i16 %6869 to i8
  %6871 = trunc i16 %6868 to i8
  store i8 %6871, ptr %6799, align 1, !alias.scope !489, !noalias !493
  %6872 = getelementptr inbounds i8, ptr %6724, i64 3
  store i8 %6870, ptr %6872, align 1, !alias.scope !489, !noalias !493
  %6873 = getelementptr inbounds i8, ptr %6724, i64 4
  %6874 = load i16, ptr %6723, align 2, !tbaa !31, !alias.scope !484, !noalias !492
  %6875 = uitofp i16 %6874 to double
  %6876 = fmul fast double %6875, 0x3EF0001000100010
  %6877 = fptrunc double %6876 to float
  %6878 = bitcast float %6877 to i32
  %6879 = lshr i32 %6878, 16
  %6880 = and i32 %6879, 32768
  %6881 = lshr i32 %6878, 23
  %6882 = and i32 %6881, 255
  %6883 = add nsw i32 %6882, -112
  %6884 = and i32 %6878, 8388607
  %6885 = icmp ult i32 %6882, 113
  br i1 %6885, label %6886, label %6903

6886:                                             ; preds = %6865
  %6887 = icmp ult i32 %6882, 102
  br i1 %6887, label %6900, label %6888

6888:                                             ; preds = %6886
  %6889 = or i32 %6884, 8388608
  %6890 = sub nuw nsw i32 126, %6882
  %6891 = sub nuw nsw i32 125, %6882
  %6892 = shl nsw i32 -1, %6891
  %6893 = xor i32 %6892, -1
  %6894 = add nuw nsw i32 %6889, %6893
  %6895 = lshr i32 %6889, %6890
  %6896 = and i32 %6895, 1
  %6897 = add nuw nsw i32 %6894, %6896
  %6898 = lshr i32 %6897, %6890
  %6899 = or i32 %6898, %6880
  br label %6900

6900:                                             ; preds = %6888, %6886
  %6901 = phi i32 [ %6899, %6888 ], [ %6880, %6886 ]
  %6902 = trunc i32 %6901 to i16
  br label %6938

6903:                                             ; preds = %6865
  %6904 = icmp eq i32 %6883, 143
  br i1 %6904, label %6905, label %6918

6905:                                             ; preds = %6903
  %6906 = icmp eq i32 %6884, 0
  br i1 %6906, label %6907, label %6910

6907:                                             ; preds = %6905
  %6908 = trunc i32 %6880 to i16
  %6909 = or i16 %6908, 31744
  br label %6938

6910:                                             ; preds = %6905
  %6911 = lshr i32 %6884, 13
  %6912 = icmp ult i32 %6884, 8192
  %6913 = zext i1 %6912 to i32
  %6914 = or i32 %6911, %6913
  %6915 = or i32 %6914, %6880
  %6916 = trunc i32 %6915 to i16
  %6917 = or i16 %6916, 31744
  br label %6938

6918:                                             ; preds = %6903
  %6919 = lshr i32 %6878, 13
  %6920 = and i32 %6919, 1
  %6921 = add nuw nsw i32 %6884, 4095
  %6922 = add nuw nsw i32 %6921, %6920
  %6923 = and i32 %6922, 8388608
  %6924 = icmp eq i32 %6923, 0
  %6925 = add nsw i32 %6882, -111
  %6926 = select i1 %6924, i32 %6883, i32 %6925
  %6927 = icmp ugt i32 %6926, 30
  br i1 %6927, label %6928, label %6931

6928:                                             ; preds = %6918
  %6929 = trunc i32 %6880 to i16
  %6930 = or i16 %6929, 31744
  br label %6938

6931:                                             ; preds = %6918
  %6932 = lshr i32 %6922, 13
  %6933 = shl nuw nsw i32 %6926, 10
  %6934 = select i1 %6924, i32 %6932, i32 0
  %6935 = or i32 %6934, %6933
  %6936 = or i32 %6935, %6880
  %6937 = trunc i32 %6936 to i16
  br label %6938

6938:                                             ; preds = %6931, %6928, %6910, %6907, %6900
  %6939 = phi i16 [ %6902, %6900 ], [ %6909, %6907 ], [ %6917, %6910 ], [ %6930, %6928 ], [ %6937, %6931 ]
  %6940 = lshr i16 %6939, 8
  %6941 = select i1 %6718, i16 %6939, i16 %6940
  %6942 = select i1 %6718, i16 %6940, i16 %6939
  %6943 = trunc i16 %6942 to i8
  %6944 = trunc i16 %6941 to i8
  store i8 %6944, ptr %6873, align 1, !alias.scope !489, !noalias !493
  %6945 = getelementptr inbounds i8, ptr %6724, i64 5
  store i8 %6943, ptr %6945, align 1, !alias.scope !489, !noalias !493
  %6946 = getelementptr inbounds i8, ptr %6724, i64 6
  br i1 %6719, label %6951, label %6947

6947:                                             ; preds = %6938
  %6948 = getelementptr inbounds i16, ptr %165, i64 %6725
  %6949 = load i16, ptr %6948, align 2, !tbaa !37, !alias.scope !487, !noalias !494
  %6950 = zext i16 %6949 to i32
  br label %6951

6951:                                             ; preds = %6947, %6938
  %6952 = phi i32 [ %6950, %6947 ], [ 0, %6938 ]
  %6953 = sitofp i32 %6952 to double
  %6954 = fmul fast double %6953, 0x3EF0001000100010
  %6955 = fptrunc double %6954 to float
  %6956 = bitcast float %6955 to i32
  %6957 = lshr i32 %6956, 16
  %6958 = and i32 %6957, 32768
  %6959 = lshr i32 %6956, 23
  %6960 = and i32 %6959, 255
  %6961 = add nsw i32 %6960, -112
  %6962 = and i32 %6956, 8388607
  %6963 = icmp ult i32 %6960, 113
  br i1 %6963, label %6964, label %6981

6964:                                             ; preds = %6951
  %6965 = icmp ult i32 %6960, 102
  br i1 %6965, label %6978, label %6966

6966:                                             ; preds = %6964
  %6967 = or i32 %6962, 8388608
  %6968 = sub nuw nsw i32 126, %6960
  %6969 = sub nuw nsw i32 125, %6960
  %6970 = shl nsw i32 -1, %6969
  %6971 = xor i32 %6970, -1
  %6972 = add nuw nsw i32 %6967, %6971
  %6973 = lshr i32 %6967, %6968
  %6974 = and i32 %6973, 1
  %6975 = add nuw nsw i32 %6972, %6974
  %6976 = lshr i32 %6975, %6968
  %6977 = or i32 %6976, %6958
  br label %6978

6978:                                             ; preds = %6966, %6964
  %6979 = phi i32 [ %6977, %6966 ], [ %6958, %6964 ]
  %6980 = trunc i32 %6979 to i16
  br label %7016

6981:                                             ; preds = %6951
  %6982 = icmp eq i32 %6961, 143
  br i1 %6982, label %6983, label %6996

6983:                                             ; preds = %6981
  %6984 = icmp eq i32 %6962, 0
  br i1 %6984, label %6985, label %6988

6985:                                             ; preds = %6983
  %6986 = trunc i32 %6958 to i16
  %6987 = or i16 %6986, 31744
  br label %7016

6988:                                             ; preds = %6983
  %6989 = lshr i32 %6962, 13
  %6990 = icmp ult i32 %6962, 8192
  %6991 = zext i1 %6990 to i32
  %6992 = or i32 %6989, %6991
  %6993 = or i32 %6992, %6958
  %6994 = trunc i32 %6993 to i16
  %6995 = or i16 %6994, 31744
  br label %7016

6996:                                             ; preds = %6981
  %6997 = lshr i32 %6956, 13
  %6998 = and i32 %6997, 1
  %6999 = add nuw nsw i32 %6962, 4095
  %7000 = add nuw nsw i32 %6999, %6998
  %7001 = and i32 %7000, 8388608
  %7002 = icmp eq i32 %7001, 0
  %7003 = add nsw i32 %6960, -111
  %7004 = select i1 %7002, i32 %6961, i32 %7003
  %7005 = icmp ugt i32 %7004, 30
  br i1 %7005, label %7006, label %7009

7006:                                             ; preds = %6996
  %7007 = trunc i32 %6958 to i16
  %7008 = or i16 %7007, 31744
  br label %7016

7009:                                             ; preds = %6996
  %7010 = lshr i32 %7000, 13
  %7011 = shl nuw nsw i32 %7004, 10
  %7012 = select i1 %7002, i32 %7010, i32 0
  %7013 = or i32 %7012, %7011
  %7014 = or i32 %7013, %6958
  %7015 = trunc i32 %7014 to i16
  br label %7016

7016:                                             ; preds = %7009, %7006, %6988, %6985, %6978
  %7017 = phi i16 [ %6980, %6978 ], [ %6987, %6985 ], [ %6995, %6988 ], [ %7008, %7006 ], [ %7015, %7009 ]
  %7018 = lshr i16 %7017, 8
  %7019 = select i1 %6718, i16 %7017, i16 %7018
  %7020 = select i1 %6718, i16 %7018, i16 %7017
  %7021 = trunc i16 %7020 to i8
  %7022 = trunc i16 %7019 to i8
  store i8 %7022, ptr %6946, align 1, !alias.scope !489, !noalias !493
  %7023 = getelementptr inbounds i8, ptr %6724, i64 7
  store i8 %7021, ptr %7023, align 1, !alias.scope !489, !noalias !493
  %7024 = getelementptr inbounds i8, ptr %6724, i64 8
  %7025 = getelementptr inbounds %struct._PixelPacket, ptr %6723, i64 0, i32 3
  %7026 = load i16, ptr %7025, align 2, !tbaa !28, !alias.scope !484, !noalias !492
  %7027 = xor i16 %7026, -1
  %7028 = uitofp i16 %7027 to double
  %7029 = fmul fast double %7028, 0x3EF0001000100010
  %7030 = fptrunc double %7029 to float
  %7031 = bitcast float %7030 to i32
  %7032 = lshr i32 %7031, 16
  %7033 = and i32 %7032, 32768
  %7034 = lshr i32 %7031, 23
  %7035 = and i32 %7034, 255
  %7036 = add nsw i32 %7035, -112
  %7037 = and i32 %7031, 8388607
  %7038 = icmp ult i32 %7035, 113
  br i1 %7038, label %7039, label %7056

7039:                                             ; preds = %7016
  %7040 = icmp ult i32 %7035, 102
  br i1 %7040, label %7053, label %7041

7041:                                             ; preds = %7039
  %7042 = or i32 %7037, 8388608
  %7043 = sub nuw nsw i32 126, %7035
  %7044 = sub nuw nsw i32 125, %7035
  %7045 = shl nsw i32 -1, %7044
  %7046 = xor i32 %7045, -1
  %7047 = add nuw nsw i32 %7042, %7046
  %7048 = lshr i32 %7042, %7043
  %7049 = and i32 %7048, 1
  %7050 = add nuw nsw i32 %7047, %7049
  %7051 = lshr i32 %7050, %7043
  %7052 = or i32 %7051, %7033
  br label %7053

7053:                                             ; preds = %7041, %7039
  %7054 = phi i32 [ %7052, %7041 ], [ %7033, %7039 ]
  %7055 = trunc i32 %7054 to i16
  br label %7091

7056:                                             ; preds = %7016
  %7057 = icmp eq i32 %7036, 143
  br i1 %7057, label %7058, label %7071

7058:                                             ; preds = %7056
  %7059 = icmp eq i32 %7037, 0
  br i1 %7059, label %7060, label %7063

7060:                                             ; preds = %7058
  %7061 = trunc i32 %7033 to i16
  %7062 = or i16 %7061, 31744
  br label %7091

7063:                                             ; preds = %7058
  %7064 = lshr i32 %7037, 13
  %7065 = icmp ult i32 %7037, 8192
  %7066 = zext i1 %7065 to i32
  %7067 = or i32 %7064, %7066
  %7068 = or i32 %7067, %7033
  %7069 = trunc i32 %7068 to i16
  %7070 = or i16 %7069, 31744
  br label %7091

7071:                                             ; preds = %7056
  %7072 = lshr i32 %7031, 13
  %7073 = and i32 %7072, 1
  %7074 = add nuw nsw i32 %7037, 4095
  %7075 = add nuw nsw i32 %7074, %7073
  %7076 = and i32 %7075, 8388608
  %7077 = icmp eq i32 %7076, 0
  %7078 = add nsw i32 %7035, -111
  %7079 = select i1 %7077, i32 %7036, i32 %7078
  %7080 = icmp ugt i32 %7079, 30
  br i1 %7080, label %7081, label %7084

7081:                                             ; preds = %7071
  %7082 = trunc i32 %7033 to i16
  %7083 = or i16 %7082, 31744
  br label %7091

7084:                                             ; preds = %7071
  %7085 = lshr i32 %7075, 13
  %7086 = shl nuw nsw i32 %7079, 10
  %7087 = select i1 %7077, i32 %7085, i32 0
  %7088 = or i32 %7087, %7086
  %7089 = or i32 %7088, %7033
  %7090 = trunc i32 %7089 to i16
  br label %7091

7091:                                             ; preds = %7084, %7081, %7063, %7060, %7053
  %7092 = phi i16 [ %7055, %7053 ], [ %7062, %7060 ], [ %7070, %7063 ], [ %7083, %7081 ], [ %7090, %7084 ]
  %7093 = lshr i16 %7092, 8
  %7094 = select i1 %6718, i16 %7092, i16 %7093
  %7095 = select i1 %6718, i16 %7093, i16 %7092
  %7096 = trunc i16 %7095 to i8
  %7097 = trunc i16 %7094 to i8
  store i8 %7097, ptr %7024, align 1, !alias.scope !489, !noalias !493
  %7098 = getelementptr inbounds i8, ptr %6724, i64 9
  store i8 %7096, ptr %7098, align 1, !alias.scope !489, !noalias !493
  %7099 = getelementptr inbounds i8, ptr %6724, i64 10
  %7100 = getelementptr inbounds %struct._PixelPacket, ptr %6723, i64 1
  %7101 = getelementptr inbounds i8, ptr %7099, i64 %6721
  %7102 = add nuw nsw i64 %6725, 1
  %7103 = icmp eq i64 %7102, %164
  br i1 %7103, label %17787, label %6722, !llvm.loop !496

7104:                                             ; preds = %7137, %6707
  %7105 = phi ptr [ %166, %6707 ], [ %7156, %7137 ]
  %7106 = phi ptr [ %88, %6707 ], [ %7157, %7137 ]
  %7107 = phi i64 [ 0, %6707 ], [ %7158, %7137 ]
  %7108 = getelementptr inbounds %struct._PixelPacket, ptr %7105, i64 0, i32 2
  %7109 = load i16, ptr %7108, align 2, !tbaa !29, !alias.scope !484, !noalias !492
  %7110 = lshr i16 %7109, 8
  %7111 = select i1 %6710, i16 %7109, i16 %7110
  %7112 = select i1 %6710, i16 %7110, i16 %7109
  %7113 = trunc i16 %7112 to i8
  %7114 = trunc i16 %7111 to i8
  store i8 %7114, ptr %7106, align 1, !alias.scope !489, !noalias !493
  %7115 = getelementptr inbounds i8, ptr %7106, i64 1
  store i8 %7113, ptr %7115, align 1, !alias.scope !489, !noalias !493
  %7116 = getelementptr inbounds i8, ptr %7106, i64 2
  %7117 = getelementptr inbounds %struct._PixelPacket, ptr %7105, i64 0, i32 1
  %7118 = load i16, ptr %7117, align 2, !tbaa !30, !alias.scope !484, !noalias !492
  %7119 = lshr i16 %7118, 8
  %7120 = select i1 %6710, i16 %7118, i16 %7119
  %7121 = select i1 %6710, i16 %7119, i16 %7118
  %7122 = trunc i16 %7121 to i8
  %7123 = trunc i16 %7120 to i8
  store i8 %7123, ptr %7116, align 1, !alias.scope !489, !noalias !493
  %7124 = getelementptr inbounds i8, ptr %7106, i64 3
  store i8 %7122, ptr %7124, align 1, !alias.scope !489, !noalias !493
  %7125 = getelementptr inbounds i8, ptr %7106, i64 4
  %7126 = load i16, ptr %7105, align 2, !tbaa !31, !alias.scope !484, !noalias !492
  %7127 = lshr i16 %7126, 8
  %7128 = select i1 %6710, i16 %7126, i16 %7127
  %7129 = select i1 %6710, i16 %7127, i16 %7126
  %7130 = trunc i16 %7129 to i8
  %7131 = trunc i16 %7128 to i8
  store i8 %7131, ptr %7125, align 1, !alias.scope !489, !noalias !493
  %7132 = getelementptr inbounds i8, ptr %7106, i64 5
  store i8 %7130, ptr %7132, align 1, !alias.scope !489, !noalias !493
  %7133 = getelementptr inbounds i8, ptr %7106, i64 6
  br i1 %6711, label %7137, label %7134

7134:                                             ; preds = %7104
  %7135 = getelementptr inbounds i16, ptr %165, i64 %7107
  %7136 = load i16, ptr %7135, align 2, !tbaa !37, !alias.scope !487, !noalias !494
  br label %7137

7137:                                             ; preds = %7134, %7104
  %7138 = phi i16 [ %7136, %7134 ], [ 0, %7104 ]
  %7139 = lshr i16 %7138, 8
  %7140 = select i1 %6710, i16 %7138, i16 %7139
  %7141 = select i1 %6710, i16 %7139, i16 %7138
  %7142 = trunc i16 %7141 to i8
  %7143 = trunc i16 %7140 to i8
  store i8 %7143, ptr %7133, align 1, !alias.scope !489, !noalias !493
  %7144 = getelementptr inbounds i8, ptr %7106, i64 7
  store i8 %7142, ptr %7144, align 1, !alias.scope !489, !noalias !493
  %7145 = getelementptr inbounds i8, ptr %7106, i64 8
  %7146 = getelementptr inbounds %struct._PixelPacket, ptr %7105, i64 0, i32 3
  %7147 = load i16, ptr %7146, align 2, !tbaa !28, !alias.scope !484, !noalias !492
  %7148 = xor i16 %7147, -1
  %7149 = lshr i16 %7148, 8
  %7150 = select i1 %6710, i16 %7148, i16 %7149
  %7151 = select i1 %6710, i16 %7149, i16 %7148
  %7152 = trunc i16 %7151 to i8
  %7153 = trunc i16 %7150 to i8
  store i8 %7153, ptr %7145, align 1, !alias.scope !489, !noalias !493
  %7154 = getelementptr inbounds i8, ptr %7106, i64 9
  store i8 %7152, ptr %7154, align 1, !alias.scope !489, !noalias !493
  %7155 = getelementptr inbounds i8, ptr %7106, i64 10
  %7156 = getelementptr inbounds %struct._PixelPacket, ptr %7105, i64 1
  %7157 = getelementptr inbounds i8, ptr %7155, i64 %6713
  %7158 = add nuw nsw i64 %7107, 1
  %7159 = icmp eq i64 %7158, %164
  br i1 %7159, label %17787, label %7104, !llvm.loop !497

7160:                                             ; preds = %6648
  %7161 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 2
  %7162 = load i32, ptr %7161, align 8, !tbaa !50, !noalias !491
  %7163 = icmp eq i32 %7162, 1
  %7164 = icmp sgt i64 %164, 0
  br i1 %7163, label %7173, label %7165

7165:                                             ; preds = %7160
  br i1 %7164, label %7166, label %17787

7166:                                             ; preds = %7165
  %7167 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %7168 = load i32, ptr %7167, align 8, !tbaa !51, !noalias !491
  %7169 = icmp eq i32 %7168, 1
  %7170 = icmp eq ptr %165, null
  %7171 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %7172 = load i64, ptr %7171, align 8, !tbaa !47, !noalias !491
  br label %7338

7173:                                             ; preds = %7160
  br i1 %7164, label %7174, label %17787

7174:                                             ; preds = %7173
  %7175 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 14
  %7176 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 3
  %7177 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %7178 = icmp eq ptr %165, null
  %7179 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  br label %7180

7180:                                             ; preds = %7324, %7174
  %7181 = phi ptr [ %166, %7174 ], [ %7333, %7324 ]
  %7182 = phi ptr [ %88, %7174 ], [ %7335, %7324 ]
  %7183 = phi i64 [ 0, %7174 ], [ %7336, %7324 ]
  %7184 = getelementptr inbounds %struct._PixelPacket, ptr %7181, i64 0, i32 2
  %7185 = load i16, ptr %7184, align 2, !tbaa !29, !alias.scope !484, !noalias !492
  call void @llvm.experimental.noalias.scope.decl(metadata !498)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %48) #6, !noalias !501
  %7186 = call ptr @ResetMagickMemory(ptr noundef nonnull %48, i32 noundef 0, i64 noundef 4) #6, !noalias !502
  %7187 = uitofp i16 %7185 to double
  %7188 = load double, ptr %7175, align 8, !tbaa !59, !noalias !501
  %7189 = fmul fast double %7188, %7187
  %7190 = load double, ptr %7176, align 8, !tbaa !60, !noalias !501
  %7191 = fadd fast double %7189, %7190
  %7192 = fptrunc double %7191 to float
  %7193 = load i32, ptr %7177, align 8, !tbaa !51, !noalias !501
  %7194 = icmp eq i32 %7193, 1
  %7195 = bitcast float %7192 to i32
  %7196 = lshr i32 %7195, 24
  %7197 = trunc i32 %7196 to i8
  %7198 = lshr i32 %7195, 16
  %7199 = trunc i32 %7198 to i8
  %7200 = lshr i32 %7195, 8
  %7201 = trunc i32 %7200 to i8
  %7202 = trunc i32 %7195 to i8
  br i1 %7194, label %7204, label %7203

7203:                                             ; preds = %7180
  br label %7204

7204:                                             ; preds = %7203, %7180
  %7205 = phi i8 [ %7197, %7203 ], [ %7202, %7180 ]
  %7206 = phi i8 [ %7199, %7203 ], [ %7201, %7180 ]
  %7207 = phi i8 [ %7201, %7203 ], [ %7199, %7180 ]
  %7208 = phi i8 [ %7202, %7203 ], [ %7197, %7180 ]
  store i8 %7205, ptr %7182, align 1, !alias.scope !503, !noalias !493
  %7209 = getelementptr inbounds i8, ptr %7182, i64 1
  store i8 %7206, ptr %7209, align 1, !alias.scope !503, !noalias !493
  %7210 = getelementptr inbounds i8, ptr %7182, i64 2
  store i8 %7207, ptr %7210, align 1, !alias.scope !503, !noalias !493
  %7211 = getelementptr inbounds i8, ptr %7182, i64 3
  store i8 %7208, ptr %7211, align 1, !alias.scope !503, !noalias !493
  %7212 = getelementptr inbounds i8, ptr %7182, i64 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %48) #6, !noalias !501
  %7213 = getelementptr inbounds %struct._PixelPacket, ptr %7181, i64 0, i32 1
  %7214 = load i16, ptr %7213, align 2, !tbaa !30, !alias.scope !484, !noalias !492
  call void @llvm.experimental.noalias.scope.decl(metadata !504)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %47) #6, !noalias !507
  %7215 = call ptr @ResetMagickMemory(ptr noundef nonnull %47, i32 noundef 0, i64 noundef 4) #6, !noalias !508
  %7216 = uitofp i16 %7214 to double
  %7217 = load double, ptr %7175, align 8, !tbaa !59, !noalias !507
  %7218 = fmul fast double %7217, %7216
  %7219 = load double, ptr %7176, align 8, !tbaa !60, !noalias !507
  %7220 = fadd fast double %7218, %7219
  %7221 = fptrunc double %7220 to float
  %7222 = load i32, ptr %7177, align 8, !tbaa !51, !noalias !507
  %7223 = icmp eq i32 %7222, 1
  %7224 = bitcast float %7221 to i32
  %7225 = lshr i32 %7224, 24
  %7226 = trunc i32 %7225 to i8
  %7227 = lshr i32 %7224, 16
  %7228 = trunc i32 %7227 to i8
  %7229 = lshr i32 %7224, 8
  %7230 = trunc i32 %7229 to i8
  %7231 = trunc i32 %7224 to i8
  br i1 %7223, label %7233, label %7232

7232:                                             ; preds = %7204
  br label %7233

7233:                                             ; preds = %7232, %7204
  %7234 = phi i8 [ %7226, %7232 ], [ %7231, %7204 ]
  %7235 = phi i8 [ %7228, %7232 ], [ %7230, %7204 ]
  %7236 = phi i8 [ %7230, %7232 ], [ %7228, %7204 ]
  %7237 = phi i8 [ %7231, %7232 ], [ %7226, %7204 ]
  store i8 %7234, ptr %7212, align 1, !alias.scope !509, !noalias !493
  %7238 = getelementptr inbounds i8, ptr %7182, i64 5
  store i8 %7235, ptr %7238, align 1, !alias.scope !509, !noalias !493
  %7239 = getelementptr inbounds i8, ptr %7182, i64 6
  store i8 %7236, ptr %7239, align 1, !alias.scope !509, !noalias !493
  %7240 = getelementptr inbounds i8, ptr %7182, i64 7
  store i8 %7237, ptr %7240, align 1, !alias.scope !509, !noalias !493
  %7241 = getelementptr inbounds i8, ptr %7182, i64 8
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %47) #6, !noalias !507
  %7242 = load i16, ptr %7181, align 2, !tbaa !31, !alias.scope !484, !noalias !492
  call void @llvm.experimental.noalias.scope.decl(metadata !510)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %46) #6, !noalias !513
  %7243 = call ptr @ResetMagickMemory(ptr noundef nonnull %46, i32 noundef 0, i64 noundef 4) #6, !noalias !514
  %7244 = uitofp i16 %7242 to double
  %7245 = load double, ptr %7175, align 8, !tbaa !59, !noalias !513
  %7246 = fmul fast double %7245, %7244
  %7247 = load double, ptr %7176, align 8, !tbaa !60, !noalias !513
  %7248 = fadd fast double %7246, %7247
  %7249 = fptrunc double %7248 to float
  %7250 = load i32, ptr %7177, align 8, !tbaa !51, !noalias !513
  %7251 = icmp eq i32 %7250, 1
  %7252 = bitcast float %7249 to i32
  %7253 = lshr i32 %7252, 24
  %7254 = trunc i32 %7253 to i8
  %7255 = lshr i32 %7252, 16
  %7256 = trunc i32 %7255 to i8
  %7257 = lshr i32 %7252, 8
  %7258 = trunc i32 %7257 to i8
  %7259 = trunc i32 %7252 to i8
  br i1 %7251, label %7261, label %7260

7260:                                             ; preds = %7233
  br label %7261

7261:                                             ; preds = %7260, %7233
  %7262 = phi i8 [ %7254, %7260 ], [ %7259, %7233 ]
  %7263 = phi i8 [ %7256, %7260 ], [ %7258, %7233 ]
  %7264 = phi i8 [ %7258, %7260 ], [ %7256, %7233 ]
  %7265 = phi i8 [ %7259, %7260 ], [ %7254, %7233 ]
  store i8 %7262, ptr %7241, align 1, !alias.scope !515, !noalias !493
  %7266 = getelementptr inbounds i8, ptr %7182, i64 9
  store i8 %7263, ptr %7266, align 1, !alias.scope !515, !noalias !493
  %7267 = getelementptr inbounds i8, ptr %7182, i64 10
  store i8 %7264, ptr %7267, align 1, !alias.scope !515, !noalias !493
  %7268 = getelementptr inbounds i8, ptr %7182, i64 11
  store i8 %7265, ptr %7268, align 1, !alias.scope !515, !noalias !493
  %7269 = getelementptr inbounds i8, ptr %7182, i64 12
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %46) #6, !noalias !513
  br i1 %7178, label %7274, label %7270

7270:                                             ; preds = %7261
  %7271 = getelementptr inbounds i16, ptr %165, i64 %7183
  %7272 = load i16, ptr %7271, align 2, !tbaa !37, !alias.scope !487, !noalias !494
  %7273 = zext i16 %7272 to i32
  br label %7274

7274:                                             ; preds = %7270, %7261
  %7275 = phi i32 [ %7273, %7270 ], [ 0, %7261 ]
  call void @llvm.experimental.noalias.scope.decl(metadata !516)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %45) #6, !noalias !519
  %7276 = call ptr @ResetMagickMemory(ptr noundef nonnull %45, i32 noundef 0, i64 noundef 4) #6, !noalias !520
  %7277 = sitofp i32 %7275 to double
  %7278 = load double, ptr %7175, align 8, !tbaa !59, !noalias !519
  %7279 = fmul fast double %7278, %7277
  %7280 = load double, ptr %7176, align 8, !tbaa !60, !noalias !519
  %7281 = fadd fast double %7279, %7280
  %7282 = fptrunc double %7281 to float
  %7283 = load i32, ptr %7177, align 8, !tbaa !51, !noalias !519
  %7284 = icmp eq i32 %7283, 1
  %7285 = bitcast float %7282 to i32
  %7286 = lshr i32 %7285, 24
  %7287 = trunc i32 %7286 to i8
  %7288 = lshr i32 %7285, 16
  %7289 = trunc i32 %7288 to i8
  %7290 = lshr i32 %7285, 8
  %7291 = trunc i32 %7290 to i8
  %7292 = trunc i32 %7285 to i8
  br i1 %7284, label %7294, label %7293

7293:                                             ; preds = %7274
  br label %7294

7294:                                             ; preds = %7293, %7274
  %7295 = phi i8 [ %7287, %7293 ], [ %7292, %7274 ]
  %7296 = phi i8 [ %7289, %7293 ], [ %7291, %7274 ]
  %7297 = phi i8 [ %7291, %7293 ], [ %7289, %7274 ]
  %7298 = phi i8 [ %7292, %7293 ], [ %7287, %7274 ]
  store i8 %7295, ptr %7269, align 1, !alias.scope !521, !noalias !493
  %7299 = getelementptr inbounds i8, ptr %7182, i64 13
  store i8 %7296, ptr %7299, align 1, !alias.scope !521, !noalias !493
  %7300 = getelementptr inbounds i8, ptr %7182, i64 14
  store i8 %7297, ptr %7300, align 1, !alias.scope !521, !noalias !493
  %7301 = getelementptr inbounds i8, ptr %7182, i64 15
  store i8 %7298, ptr %7301, align 1, !alias.scope !521, !noalias !493
  %7302 = getelementptr inbounds i8, ptr %7182, i64 16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %45) #6, !noalias !519
  %7303 = getelementptr inbounds %struct._PixelPacket, ptr %7181, i64 0, i32 3
  %7304 = load i16, ptr %7303, align 2, !tbaa !28, !alias.scope !484, !noalias !492
  %7305 = xor i16 %7304, -1
  call void @llvm.experimental.noalias.scope.decl(metadata !522)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %44) #6, !noalias !525
  %7306 = call ptr @ResetMagickMemory(ptr noundef nonnull %44, i32 noundef 0, i64 noundef 4) #6, !noalias !526
  %7307 = uitofp i16 %7305 to double
  %7308 = load double, ptr %7175, align 8, !tbaa !59, !noalias !525
  %7309 = fmul fast double %7308, %7307
  %7310 = load double, ptr %7176, align 8, !tbaa !60, !noalias !525
  %7311 = fadd fast double %7309, %7310
  %7312 = fptrunc double %7311 to float
  %7313 = load i32, ptr %7177, align 8, !tbaa !51, !noalias !525
  %7314 = icmp eq i32 %7313, 1
  %7315 = bitcast float %7312 to i32
  %7316 = lshr i32 %7315, 24
  %7317 = trunc i32 %7316 to i8
  %7318 = lshr i32 %7315, 16
  %7319 = trunc i32 %7318 to i8
  %7320 = lshr i32 %7315, 8
  %7321 = trunc i32 %7320 to i8
  %7322 = trunc i32 %7315 to i8
  br i1 %7314, label %7324, label %7323

7323:                                             ; preds = %7294
  br label %7324

7324:                                             ; preds = %7323, %7294
  %7325 = phi i8 [ %7317, %7323 ], [ %7322, %7294 ]
  %7326 = phi i8 [ %7319, %7323 ], [ %7321, %7294 ]
  %7327 = phi i8 [ %7321, %7323 ], [ %7319, %7294 ]
  %7328 = phi i8 [ %7322, %7323 ], [ %7317, %7294 ]
  store i8 %7325, ptr %7302, align 1, !alias.scope !527, !noalias !493
  %7329 = getelementptr inbounds i8, ptr %7182, i64 17
  store i8 %7326, ptr %7329, align 1, !alias.scope !527, !noalias !493
  %7330 = getelementptr inbounds i8, ptr %7182, i64 18
  store i8 %7327, ptr %7330, align 1, !alias.scope !527, !noalias !493
  %7331 = getelementptr inbounds i8, ptr %7182, i64 19
  store i8 %7328, ptr %7331, align 1, !alias.scope !527, !noalias !493
  %7332 = getelementptr inbounds i8, ptr %7182, i64 20
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %44) #6, !noalias !525
  %7333 = getelementptr inbounds %struct._PixelPacket, ptr %7181, i64 1
  %7334 = load i64, ptr %7179, align 8, !tbaa !47, !noalias !491
  %7335 = getelementptr inbounds i8, ptr %7332, i64 %7334
  %7336 = add nuw nsw i64 %7183, 1
  %7337 = icmp eq i64 %7336, %164
  br i1 %7337, label %17787, label %7180, !llvm.loop !528

7338:                                             ; preds = %7445, %7166
  %7339 = phi ptr [ %166, %7166 ], [ %7458, %7445 ]
  %7340 = phi ptr [ %88, %7166 ], [ %7459, %7445 ]
  %7341 = phi i64 [ 0, %7166 ], [ %7460, %7445 ]
  %7342 = getelementptr inbounds %struct._PixelPacket, ptr %7339, i64 0, i32 2
  %7343 = load i16, ptr %7342, align 2, !tbaa !29, !alias.scope !484, !noalias !492
  %7344 = zext i16 %7343 to i32
  %7345 = mul nuw i32 %7344, 65537
  %7346 = getelementptr inbounds i8, ptr %7340, i64 1
  %7347 = getelementptr inbounds i8, ptr %7340, i64 2
  %7348 = getelementptr inbounds i8, ptr %7340, i64 3
  %7349 = getelementptr inbounds i8, ptr %7340, i64 4
  %7350 = getelementptr inbounds %struct._PixelPacket, ptr %7339, i64 0, i32 1
  %7351 = getelementptr inbounds i8, ptr %7340, i64 5
  %7352 = load i16, ptr %7350, align 2, !tbaa !30, !alias.scope !484, !noalias !492
  %7353 = zext i16 %7352 to i32
  %7354 = mul nuw i32 %7353, 65537
  %7355 = load i16, ptr %7339, align 2, !tbaa !31, !alias.scope !484, !noalias !492
  %7356 = zext i16 %7355 to i32
  %7357 = mul nuw i32 %7356, 65537
  br i1 %7169, label %7358, label %7369

7358:                                             ; preds = %7338
  %7359 = lshr i32 %7345, 8
  %7360 = lshr i32 %7345, 24
  %7361 = trunc i16 %7343 to i8
  %7362 = trunc i32 %7359 to i8
  %7363 = lshr i32 %7354, 8
  %7364 = lshr i32 %7354, 24
  %7365 = trunc i16 %7352 to i8
  %7366 = trunc i32 %7363 to i8
  %7367 = lshr i32 %7357, 8
  %7368 = lshr i32 %7357, 24
  br label %7380

7369:                                             ; preds = %7338
  %7370 = lshr i32 %7345, 24
  %7371 = lshr i32 %7345, 8
  %7372 = trunc i32 %7371 to i8
  %7373 = trunc i16 %7343 to i8
  %7374 = lshr i32 %7354, 24
  %7375 = lshr i32 %7354, 8
  %7376 = trunc i32 %7375 to i8
  %7377 = trunc i16 %7352 to i8
  %7378 = lshr i32 %7357, 24
  %7379 = lshr i32 %7357, 8
  br label %7380

7380:                                             ; preds = %7369, %7358
  %7381 = phi i32 [ %7345, %7358 ], [ %7370, %7369 ]
  %7382 = phi i8 [ %7362, %7358 ], [ %7373, %7369 ]
  %7383 = phi i8 [ %7361, %7358 ], [ %7372, %7369 ]
  %7384 = phi i32 [ %7360, %7358 ], [ %7345, %7369 ]
  %7385 = phi i32 [ %7354, %7358 ], [ %7374, %7369 ]
  %7386 = phi i8 [ %7366, %7358 ], [ %7377, %7369 ]
  %7387 = phi i8 [ %7365, %7358 ], [ %7376, %7369 ]
  %7388 = phi i32 [ %7364, %7358 ], [ %7354, %7369 ]
  %7389 = phi i32 [ %7357, %7358 ], [ %7378, %7369 ]
  %7390 = phi i32 [ %7367, %7358 ], [ %7356, %7369 ]
  %7391 = phi i32 [ %7356, %7358 ], [ %7379, %7369 ]
  %7392 = phi i32 [ %7368, %7358 ], [ %7357, %7369 ]
  %7393 = trunc i32 %7388 to i8
  %7394 = trunc i32 %7385 to i8
  %7395 = trunc i32 %7384 to i8
  %7396 = trunc i32 %7381 to i8
  store i8 %7396, ptr %7340, align 1
  store i8 %7382, ptr %7346, align 1
  store i8 %7383, ptr %7347, align 1
  store i8 %7395, ptr %7348, align 1
  store i8 %7394, ptr %7349, align 1
  store i8 %7386, ptr %7351, align 1
  %7397 = getelementptr inbounds i8, ptr %7340, i64 6
  store i8 %7387, ptr %7397, align 1
  %7398 = getelementptr inbounds i8, ptr %7340, i64 7
  store i8 %7393, ptr %7398, align 1
  %7399 = getelementptr inbounds i8, ptr %7340, i64 8
  %7400 = trunc i32 %7392 to i8
  %7401 = trunc i32 %7391 to i8
  %7402 = trunc i32 %7390 to i8
  %7403 = trunc i32 %7389 to i8
  store i8 %7403, ptr %7399, align 1, !alias.scope !489, !noalias !493
  %7404 = getelementptr inbounds i8, ptr %7340, i64 9
  store i8 %7402, ptr %7404, align 1, !alias.scope !489, !noalias !493
  %7405 = getelementptr inbounds i8, ptr %7340, i64 10
  store i8 %7401, ptr %7405, align 1, !alias.scope !489, !noalias !493
  %7406 = getelementptr inbounds i8, ptr %7340, i64 11
  store i8 %7400, ptr %7406, align 1, !alias.scope !489, !noalias !493
  %7407 = getelementptr inbounds i8, ptr %7340, i64 12
  br i1 %7170, label %7411, label %7408

7408:                                             ; preds = %7380
  %7409 = getelementptr inbounds i16, ptr %165, i64 %7341
  %7410 = load i16, ptr %7409, align 2, !tbaa !37, !alias.scope !487, !noalias !494
  br label %7411

7411:                                             ; preds = %7408, %7380
  %7412 = phi i16 [ %7410, %7408 ], [ 0, %7380 ]
  %7413 = zext i16 %7412 to i32
  %7414 = mul nuw i32 %7413, 65537
  br i1 %7169, label %7415, label %7418

7415:                                             ; preds = %7411
  %7416 = lshr i32 %7414, 8
  %7417 = lshr i32 %7414, 24
  br label %7421

7418:                                             ; preds = %7411
  %7419 = lshr i32 %7414, 24
  %7420 = lshr i32 %7414, 8
  br label %7421

7421:                                             ; preds = %7418, %7415
  %7422 = phi i32 [ %7414, %7415 ], [ %7419, %7418 ]
  %7423 = phi i32 [ %7416, %7415 ], [ %7413, %7418 ]
  %7424 = phi i32 [ %7413, %7415 ], [ %7420, %7418 ]
  %7425 = phi i32 [ %7417, %7415 ], [ %7414, %7418 ]
  %7426 = trunc i32 %7425 to i8
  %7427 = trunc i32 %7424 to i8
  %7428 = trunc i32 %7423 to i8
  %7429 = trunc i32 %7422 to i8
  store i8 %7429, ptr %7407, align 1, !alias.scope !489, !noalias !493
  %7430 = getelementptr inbounds i8, ptr %7340, i64 13
  store i8 %7428, ptr %7430, align 1, !alias.scope !489, !noalias !493
  %7431 = getelementptr inbounds i8, ptr %7340, i64 14
  store i8 %7427, ptr %7431, align 1, !alias.scope !489, !noalias !493
  %7432 = getelementptr inbounds i8, ptr %7340, i64 15
  store i8 %7426, ptr %7432, align 1, !alias.scope !489, !noalias !493
  %7433 = getelementptr inbounds i8, ptr %7340, i64 16
  %7434 = getelementptr inbounds %struct._PixelPacket, ptr %7339, i64 0, i32 3
  %7435 = load i16, ptr %7434, align 2, !tbaa !28, !alias.scope !484, !noalias !492
  %7436 = xor i16 %7435, -1
  %7437 = zext i16 %7436 to i32
  %7438 = mul nuw i32 %7437, 65537
  br i1 %7169, label %7439, label %7442

7439:                                             ; preds = %7421
  %7440 = lshr i32 %7438, 8
  %7441 = lshr i32 %7438, 24
  br label %7445

7442:                                             ; preds = %7421
  %7443 = lshr i32 %7438, 24
  %7444 = lshr i32 %7438, 8
  br label %7445

7445:                                             ; preds = %7442, %7439
  %7446 = phi i32 [ %7438, %7439 ], [ %7443, %7442 ]
  %7447 = phi i32 [ %7440, %7439 ], [ %7437, %7442 ]
  %7448 = phi i32 [ %7437, %7439 ], [ %7444, %7442 ]
  %7449 = phi i32 [ %7441, %7439 ], [ %7438, %7442 ]
  %7450 = trunc i32 %7449 to i8
  %7451 = trunc i32 %7448 to i8
  %7452 = trunc i32 %7447 to i8
  %7453 = trunc i32 %7446 to i8
  store i8 %7453, ptr %7433, align 1, !alias.scope !489, !noalias !493
  %7454 = getelementptr inbounds i8, ptr %7340, i64 17
  store i8 %7452, ptr %7454, align 1, !alias.scope !489, !noalias !493
  %7455 = getelementptr inbounds i8, ptr %7340, i64 18
  store i8 %7451, ptr %7455, align 1, !alias.scope !489, !noalias !493
  %7456 = getelementptr inbounds i8, ptr %7340, i64 19
  store i8 %7450, ptr %7456, align 1, !alias.scope !489, !noalias !493
  %7457 = getelementptr inbounds i8, ptr %7340, i64 20
  %7458 = getelementptr inbounds %struct._PixelPacket, ptr %7339, i64 1
  %7459 = getelementptr inbounds i8, ptr %7457, i64 %7172
  %7460 = add nuw nsw i64 %7341, 1
  %7461 = icmp eq i64 %7460, %164
  br i1 %7461, label %17787, label %7338, !llvm.loop !529

7462:                                             ; preds = %6648
  %7463 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 2
  %7464 = load i32, ptr %7463, align 8, !tbaa !50, !noalias !491
  %7465 = icmp eq i32 %7464, 1
  br i1 %7465, label %7466, label %7707

7466:                                             ; preds = %7462
  %7467 = icmp sgt i64 %164, 0
  br i1 %7467, label %7468, label %17787

7468:                                             ; preds = %7466
  %7469 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 14
  %7470 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 3
  %7471 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %7472 = icmp eq ptr %165, null
  %7473 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  br label %7474

7474:                                             ; preds = %7685, %7468
  %7475 = phi ptr [ %166, %7468 ], [ %7702, %7685 ]
  %7476 = phi ptr [ %88, %7468 ], [ %7704, %7685 ]
  %7477 = phi i64 [ 0, %7468 ], [ %7705, %7685 ]
  %7478 = getelementptr inbounds %struct._PixelPacket, ptr %7475, i64 0, i32 2
  %7479 = load i16, ptr %7478, align 2, !tbaa !29, !alias.scope !484, !noalias !492
  %7480 = uitofp i16 %7479 to double
  call void @llvm.experimental.noalias.scope.decl(metadata !530)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %43) #6, !noalias !533
  %7481 = call ptr @ResetMagickMemory(ptr noundef nonnull %43, i32 noundef 0, i64 noundef 8) #6, !noalias !534
  %7482 = load double, ptr %7469, align 8, !tbaa !59, !noalias !533
  %7483 = fmul fast double %7482, %7480
  %7484 = load double, ptr %7470, align 8, !tbaa !60, !noalias !533
  %7485 = fadd fast double %7483, %7484
  %7486 = load i32, ptr %7471, align 8, !tbaa !51, !noalias !533
  %7487 = icmp eq i32 %7486, 1
  %7488 = bitcast double %7485 to i64
  %7489 = lshr i64 %7488, 56
  %7490 = trunc i64 %7489 to i8
  %7491 = lshr i64 %7488, 48
  %7492 = trunc i64 %7491 to i8
  %7493 = lshr i64 %7488, 40
  %7494 = trunc i64 %7493 to i8
  %7495 = lshr i64 %7488, 32
  %7496 = trunc i64 %7495 to i8
  %7497 = lshr i64 %7488, 24
  %7498 = trunc i64 %7497 to i8
  %7499 = lshr i64 %7488, 16
  %7500 = trunc i64 %7499 to i8
  %7501 = lshr i64 %7488, 8
  %7502 = trunc i64 %7501 to i8
  %7503 = trunc i64 %7488 to i8
  br i1 %7487, label %7505, label %7504

7504:                                             ; preds = %7474
  br label %7505

7505:                                             ; preds = %7504, %7474
  %7506 = phi i8 [ %7490, %7504 ], [ %7503, %7474 ]
  %7507 = phi i8 [ %7492, %7504 ], [ %7502, %7474 ]
  %7508 = phi i8 [ %7494, %7504 ], [ %7500, %7474 ]
  %7509 = phi i8 [ %7496, %7504 ], [ %7498, %7474 ]
  %7510 = phi i8 [ %7498, %7504 ], [ %7496, %7474 ]
  %7511 = phi i8 [ %7500, %7504 ], [ %7494, %7474 ]
  %7512 = phi i8 [ %7502, %7504 ], [ %7492, %7474 ]
  %7513 = phi i8 [ %7503, %7504 ], [ %7490, %7474 ]
  store i8 %7506, ptr %7476, align 1, !alias.scope !535, !noalias !493
  %7514 = getelementptr inbounds i8, ptr %7476, i64 1
  store i8 %7507, ptr %7514, align 1, !alias.scope !535, !noalias !493
  %7515 = getelementptr inbounds i8, ptr %7476, i64 2
  store i8 %7508, ptr %7515, align 1, !alias.scope !535, !noalias !493
  %7516 = getelementptr inbounds i8, ptr %7476, i64 3
  store i8 %7509, ptr %7516, align 1, !alias.scope !535, !noalias !493
  %7517 = getelementptr inbounds i8, ptr %7476, i64 4
  store i8 %7510, ptr %7517, align 1, !alias.scope !535, !noalias !493
  %7518 = getelementptr inbounds i8, ptr %7476, i64 5
  store i8 %7511, ptr %7518, align 1, !alias.scope !535, !noalias !493
  %7519 = getelementptr inbounds i8, ptr %7476, i64 6
  store i8 %7512, ptr %7519, align 1, !alias.scope !535, !noalias !493
  %7520 = getelementptr inbounds i8, ptr %7476, i64 7
  store i8 %7513, ptr %7520, align 1, !alias.scope !535, !noalias !493
  %7521 = getelementptr inbounds i8, ptr %7476, i64 8
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %43) #6, !noalias !533
  %7522 = getelementptr inbounds %struct._PixelPacket, ptr %7475, i64 0, i32 1
  %7523 = load i16, ptr %7522, align 2, !tbaa !30, !alias.scope !484, !noalias !492
  %7524 = uitofp i16 %7523 to double
  call void @llvm.experimental.noalias.scope.decl(metadata !536)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %42) #6, !noalias !539
  %7525 = call ptr @ResetMagickMemory(ptr noundef nonnull %42, i32 noundef 0, i64 noundef 8) #6, !noalias !540
  %7526 = load double, ptr %7469, align 8, !tbaa !59, !noalias !539
  %7527 = fmul fast double %7526, %7524
  %7528 = load double, ptr %7470, align 8, !tbaa !60, !noalias !539
  %7529 = fadd fast double %7527, %7528
  %7530 = load i32, ptr %7471, align 8, !tbaa !51, !noalias !539
  %7531 = icmp eq i32 %7530, 1
  %7532 = bitcast double %7529 to i64
  %7533 = lshr i64 %7532, 56
  %7534 = trunc i64 %7533 to i8
  %7535 = lshr i64 %7532, 48
  %7536 = trunc i64 %7535 to i8
  %7537 = lshr i64 %7532, 40
  %7538 = trunc i64 %7537 to i8
  %7539 = lshr i64 %7532, 32
  %7540 = trunc i64 %7539 to i8
  %7541 = lshr i64 %7532, 24
  %7542 = trunc i64 %7541 to i8
  %7543 = lshr i64 %7532, 16
  %7544 = trunc i64 %7543 to i8
  %7545 = lshr i64 %7532, 8
  %7546 = trunc i64 %7545 to i8
  %7547 = trunc i64 %7532 to i8
  br i1 %7531, label %7549, label %7548

7548:                                             ; preds = %7505
  br label %7549

7549:                                             ; preds = %7548, %7505
  %7550 = phi i8 [ %7534, %7548 ], [ %7547, %7505 ]
  %7551 = phi i8 [ %7536, %7548 ], [ %7546, %7505 ]
  %7552 = phi i8 [ %7538, %7548 ], [ %7544, %7505 ]
  %7553 = phi i8 [ %7540, %7548 ], [ %7542, %7505 ]
  %7554 = phi i8 [ %7542, %7548 ], [ %7540, %7505 ]
  %7555 = phi i8 [ %7544, %7548 ], [ %7538, %7505 ]
  %7556 = phi i8 [ %7546, %7548 ], [ %7536, %7505 ]
  %7557 = phi i8 [ %7547, %7548 ], [ %7534, %7505 ]
  store i8 %7550, ptr %7521, align 1, !alias.scope !541, !noalias !493
  %7558 = getelementptr inbounds i8, ptr %7476, i64 9
  store i8 %7551, ptr %7558, align 1, !alias.scope !541, !noalias !493
  %7559 = getelementptr inbounds i8, ptr %7476, i64 10
  store i8 %7552, ptr %7559, align 1, !alias.scope !541, !noalias !493
  %7560 = getelementptr inbounds i8, ptr %7476, i64 11
  store i8 %7553, ptr %7560, align 1, !alias.scope !541, !noalias !493
  %7561 = getelementptr inbounds i8, ptr %7476, i64 12
  store i8 %7554, ptr %7561, align 1, !alias.scope !541, !noalias !493
  %7562 = getelementptr inbounds i8, ptr %7476, i64 13
  store i8 %7555, ptr %7562, align 1, !alias.scope !541, !noalias !493
  %7563 = getelementptr inbounds i8, ptr %7476, i64 14
  store i8 %7556, ptr %7563, align 1, !alias.scope !541, !noalias !493
  %7564 = getelementptr inbounds i8, ptr %7476, i64 15
  store i8 %7557, ptr %7564, align 1, !alias.scope !541, !noalias !493
  %7565 = getelementptr inbounds i8, ptr %7476, i64 16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %42) #6, !noalias !539
  %7566 = load i16, ptr %7475, align 2, !tbaa !31, !alias.scope !484, !noalias !492
  %7567 = uitofp i16 %7566 to double
  call void @llvm.experimental.noalias.scope.decl(metadata !542)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %41) #6, !noalias !545
  %7568 = call ptr @ResetMagickMemory(ptr noundef nonnull %41, i32 noundef 0, i64 noundef 8) #6, !noalias !546
  %7569 = load double, ptr %7469, align 8, !tbaa !59, !noalias !545
  %7570 = fmul fast double %7569, %7567
  %7571 = load double, ptr %7470, align 8, !tbaa !60, !noalias !545
  %7572 = fadd fast double %7570, %7571
  %7573 = load i32, ptr %7471, align 8, !tbaa !51, !noalias !545
  %7574 = icmp eq i32 %7573, 1
  %7575 = bitcast double %7572 to i64
  %7576 = lshr i64 %7575, 56
  %7577 = trunc i64 %7576 to i8
  %7578 = lshr i64 %7575, 48
  %7579 = trunc i64 %7578 to i8
  %7580 = lshr i64 %7575, 40
  %7581 = trunc i64 %7580 to i8
  %7582 = lshr i64 %7575, 32
  %7583 = trunc i64 %7582 to i8
  %7584 = lshr i64 %7575, 24
  %7585 = trunc i64 %7584 to i8
  %7586 = lshr i64 %7575, 16
  %7587 = trunc i64 %7586 to i8
  %7588 = lshr i64 %7575, 8
  %7589 = trunc i64 %7588 to i8
  %7590 = trunc i64 %7575 to i8
  br i1 %7574, label %7592, label %7591

7591:                                             ; preds = %7549
  br label %7592

7592:                                             ; preds = %7591, %7549
  %7593 = phi i8 [ %7577, %7591 ], [ %7590, %7549 ]
  %7594 = phi i8 [ %7579, %7591 ], [ %7589, %7549 ]
  %7595 = phi i8 [ %7581, %7591 ], [ %7587, %7549 ]
  %7596 = phi i8 [ %7583, %7591 ], [ %7585, %7549 ]
  %7597 = phi i8 [ %7585, %7591 ], [ %7583, %7549 ]
  %7598 = phi i8 [ %7587, %7591 ], [ %7581, %7549 ]
  %7599 = phi i8 [ %7589, %7591 ], [ %7579, %7549 ]
  %7600 = phi i8 [ %7590, %7591 ], [ %7577, %7549 ]
  store i8 %7593, ptr %7565, align 1, !alias.scope !547, !noalias !493
  %7601 = getelementptr inbounds i8, ptr %7476, i64 17
  store i8 %7594, ptr %7601, align 1, !alias.scope !547, !noalias !493
  %7602 = getelementptr inbounds i8, ptr %7476, i64 18
  store i8 %7595, ptr %7602, align 1, !alias.scope !547, !noalias !493
  %7603 = getelementptr inbounds i8, ptr %7476, i64 19
  store i8 %7596, ptr %7603, align 1, !alias.scope !547, !noalias !493
  %7604 = getelementptr inbounds i8, ptr %7476, i64 20
  store i8 %7597, ptr %7604, align 1, !alias.scope !547, !noalias !493
  %7605 = getelementptr inbounds i8, ptr %7476, i64 21
  store i8 %7598, ptr %7605, align 1, !alias.scope !547, !noalias !493
  %7606 = getelementptr inbounds i8, ptr %7476, i64 22
  store i8 %7599, ptr %7606, align 1, !alias.scope !547, !noalias !493
  %7607 = getelementptr inbounds i8, ptr %7476, i64 23
  store i8 %7600, ptr %7607, align 1, !alias.scope !547, !noalias !493
  %7608 = getelementptr inbounds i8, ptr %7476, i64 24
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %41) #6, !noalias !545
  br i1 %7472, label %7613, label %7609

7609:                                             ; preds = %7592
  %7610 = getelementptr inbounds i16, ptr %165, i64 %7477
  %7611 = load i16, ptr %7610, align 2, !tbaa !37, !alias.scope !487, !noalias !494
  %7612 = zext i16 %7611 to i32
  br label %7613

7613:                                             ; preds = %7609, %7592
  %7614 = phi i32 [ %7612, %7609 ], [ 0, %7592 ]
  %7615 = sitofp i32 %7614 to double
  call void @llvm.experimental.noalias.scope.decl(metadata !548)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %40) #6, !noalias !551
  %7616 = call ptr @ResetMagickMemory(ptr noundef nonnull %40, i32 noundef 0, i64 noundef 8) #6, !noalias !552
  %7617 = load double, ptr %7469, align 8, !tbaa !59, !noalias !551
  %7618 = fmul fast double %7617, %7615
  %7619 = load double, ptr %7470, align 8, !tbaa !60, !noalias !551
  %7620 = fadd fast double %7618, %7619
  %7621 = load i32, ptr %7471, align 8, !tbaa !51, !noalias !551
  %7622 = icmp eq i32 %7621, 1
  %7623 = bitcast double %7620 to i64
  %7624 = lshr i64 %7623, 56
  %7625 = trunc i64 %7624 to i8
  %7626 = lshr i64 %7623, 48
  %7627 = trunc i64 %7626 to i8
  %7628 = lshr i64 %7623, 40
  %7629 = trunc i64 %7628 to i8
  %7630 = lshr i64 %7623, 32
  %7631 = trunc i64 %7630 to i8
  %7632 = lshr i64 %7623, 24
  %7633 = trunc i64 %7632 to i8
  %7634 = lshr i64 %7623, 16
  %7635 = trunc i64 %7634 to i8
  %7636 = lshr i64 %7623, 8
  %7637 = trunc i64 %7636 to i8
  %7638 = trunc i64 %7623 to i8
  br i1 %7622, label %7640, label %7639

7639:                                             ; preds = %7613
  br label %7640

7640:                                             ; preds = %7639, %7613
  %7641 = phi i8 [ %7625, %7639 ], [ %7638, %7613 ]
  %7642 = phi i8 [ %7627, %7639 ], [ %7637, %7613 ]
  %7643 = phi i8 [ %7629, %7639 ], [ %7635, %7613 ]
  %7644 = phi i8 [ %7631, %7639 ], [ %7633, %7613 ]
  %7645 = phi i8 [ %7633, %7639 ], [ %7631, %7613 ]
  %7646 = phi i8 [ %7635, %7639 ], [ %7629, %7613 ]
  %7647 = phi i8 [ %7637, %7639 ], [ %7627, %7613 ]
  %7648 = phi i8 [ %7638, %7639 ], [ %7625, %7613 ]
  store i8 %7641, ptr %7608, align 1, !alias.scope !553, !noalias !493
  %7649 = getelementptr inbounds i8, ptr %7476, i64 25
  store i8 %7642, ptr %7649, align 1, !alias.scope !553, !noalias !493
  %7650 = getelementptr inbounds i8, ptr %7476, i64 26
  store i8 %7643, ptr %7650, align 1, !alias.scope !553, !noalias !493
  %7651 = getelementptr inbounds i8, ptr %7476, i64 27
  store i8 %7644, ptr %7651, align 1, !alias.scope !553, !noalias !493
  %7652 = getelementptr inbounds i8, ptr %7476, i64 28
  store i8 %7645, ptr %7652, align 1, !alias.scope !553, !noalias !493
  %7653 = getelementptr inbounds i8, ptr %7476, i64 29
  store i8 %7646, ptr %7653, align 1, !alias.scope !553, !noalias !493
  %7654 = getelementptr inbounds i8, ptr %7476, i64 30
  store i8 %7647, ptr %7654, align 1, !alias.scope !553, !noalias !493
  %7655 = getelementptr inbounds i8, ptr %7476, i64 31
  store i8 %7648, ptr %7655, align 1, !alias.scope !553, !noalias !493
  %7656 = getelementptr inbounds i8, ptr %7476, i64 32
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %40) #6, !noalias !551
  %7657 = getelementptr inbounds %struct._PixelPacket, ptr %7475, i64 0, i32 3
  %7658 = load i16, ptr %7657, align 2, !tbaa !28, !alias.scope !484, !noalias !492
  %7659 = xor i16 %7658, -1
  %7660 = uitofp i16 %7659 to double
  call void @llvm.experimental.noalias.scope.decl(metadata !554)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %39) #6, !noalias !557
  %7661 = call ptr @ResetMagickMemory(ptr noundef nonnull %39, i32 noundef 0, i64 noundef 8) #6, !noalias !558
  %7662 = load double, ptr %7469, align 8, !tbaa !59, !noalias !557
  %7663 = fmul fast double %7662, %7660
  %7664 = load double, ptr %7470, align 8, !tbaa !60, !noalias !557
  %7665 = fadd fast double %7663, %7664
  %7666 = load i32, ptr %7471, align 8, !tbaa !51, !noalias !557
  %7667 = icmp eq i32 %7666, 1
  %7668 = bitcast double %7665 to i64
  %7669 = lshr i64 %7668, 56
  %7670 = trunc i64 %7669 to i8
  %7671 = lshr i64 %7668, 48
  %7672 = trunc i64 %7671 to i8
  %7673 = lshr i64 %7668, 40
  %7674 = trunc i64 %7673 to i8
  %7675 = lshr i64 %7668, 32
  %7676 = trunc i64 %7675 to i8
  %7677 = lshr i64 %7668, 24
  %7678 = trunc i64 %7677 to i8
  %7679 = lshr i64 %7668, 16
  %7680 = trunc i64 %7679 to i8
  %7681 = lshr i64 %7668, 8
  %7682 = trunc i64 %7681 to i8
  %7683 = trunc i64 %7668 to i8
  br i1 %7667, label %7685, label %7684

7684:                                             ; preds = %7640
  br label %7685

7685:                                             ; preds = %7684, %7640
  %7686 = phi i8 [ %7670, %7684 ], [ %7683, %7640 ]
  %7687 = phi i8 [ %7672, %7684 ], [ %7682, %7640 ]
  %7688 = phi i8 [ %7674, %7684 ], [ %7680, %7640 ]
  %7689 = phi i8 [ %7676, %7684 ], [ %7678, %7640 ]
  %7690 = phi i8 [ %7678, %7684 ], [ %7676, %7640 ]
  %7691 = phi i8 [ %7680, %7684 ], [ %7674, %7640 ]
  %7692 = phi i8 [ %7682, %7684 ], [ %7672, %7640 ]
  %7693 = phi i8 [ %7683, %7684 ], [ %7670, %7640 ]
  store i8 %7686, ptr %7656, align 1, !alias.scope !559, !noalias !493
  %7694 = getelementptr inbounds i8, ptr %7476, i64 33
  store i8 %7687, ptr %7694, align 1, !alias.scope !559, !noalias !493
  %7695 = getelementptr inbounds i8, ptr %7476, i64 34
  store i8 %7688, ptr %7695, align 1, !alias.scope !559, !noalias !493
  %7696 = getelementptr inbounds i8, ptr %7476, i64 35
  store i8 %7689, ptr %7696, align 1, !alias.scope !559, !noalias !493
  %7697 = getelementptr inbounds i8, ptr %7476, i64 36
  store i8 %7690, ptr %7697, align 1, !alias.scope !559, !noalias !493
  %7698 = getelementptr inbounds i8, ptr %7476, i64 37
  store i8 %7691, ptr %7698, align 1, !alias.scope !559, !noalias !493
  %7699 = getelementptr inbounds i8, ptr %7476, i64 38
  store i8 %7692, ptr %7699, align 1, !alias.scope !559, !noalias !493
  %7700 = getelementptr inbounds i8, ptr %7476, i64 39
  store i8 %7693, ptr %7700, align 1, !alias.scope !559, !noalias !493
  %7701 = getelementptr inbounds i8, ptr %7476, i64 40
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %39) #6, !noalias !557
  %7702 = getelementptr inbounds %struct._PixelPacket, ptr %7475, i64 1
  %7703 = load i64, ptr %7473, align 8, !tbaa !47, !noalias !491
  %7704 = getelementptr inbounds i8, ptr %7701, i64 %7703
  %7705 = add nuw nsw i64 %7477, 1
  %7706 = icmp eq i64 %7705, %164
  br i1 %7706, label %17787, label %7474, !llvm.loop !560

7707:                                             ; preds = %7462, %6648
  %7708 = icmp sgt i64 %164, 0
  br i1 %7708, label %7709, label %17787

7709:                                             ; preds = %7707
  %7710 = add i64 %6649, -1
  %7711 = shl i64 2, %7710
  %7712 = add i64 %7711, -1
  %7713 = uitofp i64 %7712 to float
  %7714 = fmul fast float %7713, 0x3EF0001000000000
  %7715 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 14, i32 2
  %7716 = icmp eq ptr %165, null
  %7717 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %7718 = load i64, ptr %7715, align 8, !tbaa !69, !noalias !491
  %7719 = icmp sgt i64 %6649, 0
  %7720 = load i64, ptr %7717, align 8, !tbaa !47, !noalias !491
  br label %7721

7721:                                             ; preds = %7925, %7709
  %7722 = phi i64 [ %7718, %7709 ], [ %7926, %7925 ]
  %7723 = phi ptr [ %166, %7709 ], [ %7928, %7925 ]
  %7724 = phi ptr [ %88, %7709 ], [ %7929, %7925 ]
  %7725 = phi i64 [ 0, %7709 ], [ %7930, %7925 ]
  %7726 = getelementptr inbounds %struct._PixelPacket, ptr %7723, i64 0, i32 2
  %7727 = load i16, ptr %7726, align 2, !tbaa !29, !alias.scope !484, !noalias !492
  %7728 = uitofp i16 %7727 to float
  %7729 = fmul fast float %7714, %7728
  %7730 = fpext float %7729 to double
  %7731 = fadd fast double %7730, 5.000000e-01
  %7732 = fptoui double %7731 to i64
  tail call void @llvm.experimental.noalias.scope.decl(metadata !561)
  %7733 = icmp eq i64 %7722, 0
  br i1 %7733, label %7734, label %7735

7734:                                             ; preds = %7721
  store i64 8, ptr %7715, align 8, !tbaa !69, !noalias !564
  br label %7735

7735:                                             ; preds = %7734, %7721
  %7736 = phi i64 [ 8, %7734 ], [ %7722, %7721 ]
  br i1 %7719, label %7737, label %7763

7737:                                             ; preds = %7735, %7747
  %7738 = phi i64 [ %7758, %7747 ], [ %7736, %7735 ]
  %7739 = phi i64 [ %7743, %7747 ], [ %6649, %7735 ]
  %7740 = phi ptr [ %7760, %7747 ], [ %7724, %7735 ]
  %7741 = tail call i64 @llvm.umin.i64(i64 %7739, i64 %7738)
  %7742 = sub nsw i64 %7739, %7741
  %7743 = tail call i64 @llvm.smax.i64(i64 %7742, i64 0)
  %7744 = icmp eq i64 %7738, 8
  br i1 %7744, label %7747, label %7745

7745:                                             ; preds = %7737
  %7746 = load i8, ptr %7740, align 1, !tbaa !48, !alias.scope !565, !noalias !493
  br label %7747

7747:                                             ; preds = %7745, %7737
  %7748 = phi i8 [ %7746, %7745 ], [ 0, %7737 ]
  %7749 = sub i64 %7738, %7741
  %7750 = lshr i64 %7732, %7743
  %7751 = shl nsw i64 -1, %7741
  %7752 = xor i64 %7751, -1
  %7753 = and i64 %7750, %7752
  %7754 = shl i64 %7753, %7749
  %7755 = trunc i64 %7754 to i8
  %7756 = or i8 %7748, %7755
  store i8 %7756, ptr %7740, align 1, !tbaa !48, !alias.scope !565, !noalias !493
  %7757 = icmp ule i64 %7738, %7739
  %7758 = select i1 %7757, i64 8, i64 %7749
  %7759 = zext i1 %7757 to i64
  %7760 = getelementptr inbounds i8, ptr %7740, i64 %7759
  %7761 = icmp slt i64 %7742, 1
  br i1 %7761, label %7762, label %7737, !llvm.loop !75

7762:                                             ; preds = %7747
  store i64 %7758, ptr %7715, align 8, !tbaa !69, !noalias !564
  br label %7763

7763:                                             ; preds = %7762, %7735
  %7764 = phi i64 [ %7736, %7735 ], [ %7758, %7762 ]
  %7765 = phi ptr [ %7724, %7735 ], [ %7760, %7762 ]
  %7766 = getelementptr inbounds %struct._PixelPacket, ptr %7723, i64 0, i32 1
  %7767 = load i16, ptr %7766, align 2, !tbaa !30, !alias.scope !484, !noalias !492
  %7768 = uitofp i16 %7767 to float
  %7769 = fmul fast float %7714, %7768
  %7770 = fpext float %7769 to double
  %7771 = fadd fast double %7770, 5.000000e-01
  %7772 = fptoui double %7771 to i64
  tail call void @llvm.experimental.noalias.scope.decl(metadata !566)
  %7773 = icmp eq i64 %7764, 0
  br i1 %7773, label %7774, label %7775

7774:                                             ; preds = %7763
  store i64 8, ptr %7715, align 8, !tbaa !69, !noalias !569
  br label %7775

7775:                                             ; preds = %7774, %7763
  %7776 = phi i64 [ 8, %7774 ], [ %7764, %7763 ]
  br i1 %7719, label %7777, label %7803

7777:                                             ; preds = %7775, %7787
  %7778 = phi i64 [ %7798, %7787 ], [ %7776, %7775 ]
  %7779 = phi i64 [ %7783, %7787 ], [ %6649, %7775 ]
  %7780 = phi ptr [ %7800, %7787 ], [ %7765, %7775 ]
  %7781 = tail call i64 @llvm.umin.i64(i64 %7779, i64 %7778)
  %7782 = sub nsw i64 %7779, %7781
  %7783 = tail call i64 @llvm.smax.i64(i64 %7782, i64 0)
  %7784 = icmp eq i64 %7778, 8
  br i1 %7784, label %7787, label %7785

7785:                                             ; preds = %7777
  %7786 = load i8, ptr %7780, align 1, !tbaa !48, !alias.scope !570, !noalias !493
  br label %7787

7787:                                             ; preds = %7785, %7777
  %7788 = phi i8 [ %7786, %7785 ], [ 0, %7777 ]
  %7789 = sub i64 %7778, %7781
  %7790 = lshr i64 %7772, %7783
  %7791 = shl nsw i64 -1, %7781
  %7792 = xor i64 %7791, -1
  %7793 = and i64 %7790, %7792
  %7794 = shl i64 %7793, %7789
  %7795 = trunc i64 %7794 to i8
  %7796 = or i8 %7788, %7795
  store i8 %7796, ptr %7780, align 1, !tbaa !48, !alias.scope !570, !noalias !493
  %7797 = icmp ule i64 %7778, %7779
  %7798 = select i1 %7797, i64 8, i64 %7789
  %7799 = zext i1 %7797 to i64
  %7800 = getelementptr inbounds i8, ptr %7780, i64 %7799
  %7801 = icmp slt i64 %7782, 1
  br i1 %7801, label %7802, label %7777, !llvm.loop !75

7802:                                             ; preds = %7787
  store i64 %7798, ptr %7715, align 8, !tbaa !69, !noalias !569
  br label %7803

7803:                                             ; preds = %7802, %7775
  %7804 = phi i64 [ %7776, %7775 ], [ %7798, %7802 ]
  %7805 = phi ptr [ %7765, %7775 ], [ %7800, %7802 ]
  %7806 = load i16, ptr %7723, align 2, !tbaa !31, !alias.scope !484, !noalias !492
  %7807 = uitofp i16 %7806 to float
  %7808 = fmul fast float %7714, %7807
  %7809 = fpext float %7808 to double
  %7810 = fadd fast double %7809, 5.000000e-01
  %7811 = fptoui double %7810 to i64
  tail call void @llvm.experimental.noalias.scope.decl(metadata !571)
  %7812 = icmp eq i64 %7804, 0
  br i1 %7812, label %7813, label %7814

7813:                                             ; preds = %7803
  store i64 8, ptr %7715, align 8, !tbaa !69, !noalias !574
  br label %7814

7814:                                             ; preds = %7813, %7803
  %7815 = phi i64 [ 8, %7813 ], [ %7804, %7803 ]
  br i1 %7719, label %7816, label %7842

7816:                                             ; preds = %7814, %7826
  %7817 = phi i64 [ %7837, %7826 ], [ %7815, %7814 ]
  %7818 = phi i64 [ %7822, %7826 ], [ %6649, %7814 ]
  %7819 = phi ptr [ %7839, %7826 ], [ %7805, %7814 ]
  %7820 = tail call i64 @llvm.umin.i64(i64 %7818, i64 %7817)
  %7821 = sub nsw i64 %7818, %7820
  %7822 = tail call i64 @llvm.smax.i64(i64 %7821, i64 0)
  %7823 = icmp eq i64 %7817, 8
  br i1 %7823, label %7826, label %7824

7824:                                             ; preds = %7816
  %7825 = load i8, ptr %7819, align 1, !tbaa !48, !alias.scope !575, !noalias !493
  br label %7826

7826:                                             ; preds = %7824, %7816
  %7827 = phi i8 [ %7825, %7824 ], [ 0, %7816 ]
  %7828 = sub i64 %7817, %7820
  %7829 = lshr i64 %7811, %7822
  %7830 = shl nsw i64 -1, %7820
  %7831 = xor i64 %7830, -1
  %7832 = and i64 %7829, %7831
  %7833 = shl i64 %7832, %7828
  %7834 = trunc i64 %7833 to i8
  %7835 = or i8 %7827, %7834
  store i8 %7835, ptr %7819, align 1, !tbaa !48, !alias.scope !575, !noalias !493
  %7836 = icmp ule i64 %7817, %7818
  %7837 = select i1 %7836, i64 8, i64 %7828
  %7838 = zext i1 %7836 to i64
  %7839 = getelementptr inbounds i8, ptr %7819, i64 %7838
  %7840 = icmp slt i64 %7821, 1
  br i1 %7840, label %7841, label %7816, !llvm.loop !75

7841:                                             ; preds = %7826
  store i64 %7837, ptr %7715, align 8, !tbaa !69, !noalias !574
  br label %7842

7842:                                             ; preds = %7841, %7814
  %7843 = phi i64 [ %7815, %7814 ], [ %7837, %7841 ]
  %7844 = phi ptr [ %7805, %7814 ], [ %7839, %7841 ]
  br i1 %7716, label %7848, label %7845

7845:                                             ; preds = %7842
  %7846 = getelementptr inbounds i16, ptr %165, i64 %7725
  %7847 = load i16, ptr %7846, align 2, !tbaa !37, !alias.scope !487, !noalias !494
  br label %7848

7848:                                             ; preds = %7845, %7842
  %7849 = phi i16 [ %7847, %7845 ], [ 0, %7842 ]
  %7850 = uitofp i16 %7849 to float
  %7851 = fmul fast float %7714, %7850
  %7852 = fpext float %7851 to double
  %7853 = fadd fast double %7852, 5.000000e-01
  %7854 = fptoui double %7853 to i64
  tail call void @llvm.experimental.noalias.scope.decl(metadata !576)
  %7855 = icmp eq i64 %7843, 0
  br i1 %7855, label %7856, label %7857

7856:                                             ; preds = %7848
  store i64 8, ptr %7715, align 8, !tbaa !69, !noalias !579
  br label %7857

7857:                                             ; preds = %7856, %7848
  %7858 = phi i64 [ 8, %7856 ], [ %7843, %7848 ]
  br i1 %7719, label %7859, label %7885

7859:                                             ; preds = %7857, %7869
  %7860 = phi i64 [ %7880, %7869 ], [ %7858, %7857 ]
  %7861 = phi i64 [ %7865, %7869 ], [ %6649, %7857 ]
  %7862 = phi ptr [ %7882, %7869 ], [ %7844, %7857 ]
  %7863 = tail call i64 @llvm.umin.i64(i64 %7861, i64 %7860)
  %7864 = sub nsw i64 %7861, %7863
  %7865 = tail call i64 @llvm.smax.i64(i64 %7864, i64 0)
  %7866 = icmp eq i64 %7860, 8
  br i1 %7866, label %7869, label %7867

7867:                                             ; preds = %7859
  %7868 = load i8, ptr %7862, align 1, !tbaa !48, !alias.scope !580, !noalias !493
  br label %7869

7869:                                             ; preds = %7867, %7859
  %7870 = phi i8 [ %7868, %7867 ], [ 0, %7859 ]
  %7871 = sub i64 %7860, %7863
  %7872 = lshr i64 %7854, %7865
  %7873 = shl nsw i64 -1, %7863
  %7874 = xor i64 %7873, -1
  %7875 = and i64 %7872, %7874
  %7876 = shl i64 %7875, %7871
  %7877 = trunc i64 %7876 to i8
  %7878 = or i8 %7870, %7877
  store i8 %7878, ptr %7862, align 1, !tbaa !48, !alias.scope !580, !noalias !493
  %7879 = icmp ule i64 %7860, %7861
  %7880 = select i1 %7879, i64 8, i64 %7871
  %7881 = zext i1 %7879 to i64
  %7882 = getelementptr inbounds i8, ptr %7862, i64 %7881
  %7883 = icmp slt i64 %7864, 1
  br i1 %7883, label %7884, label %7859, !llvm.loop !75

7884:                                             ; preds = %7869
  store i64 %7880, ptr %7715, align 8, !tbaa !69, !noalias !579
  br label %7885

7885:                                             ; preds = %7884, %7857
  %7886 = phi i64 [ %7858, %7857 ], [ %7880, %7884 ]
  %7887 = phi ptr [ %7844, %7857 ], [ %7882, %7884 ]
  %7888 = getelementptr inbounds %struct._PixelPacket, ptr %7723, i64 0, i32 3
  %7889 = load i16, ptr %7888, align 2, !tbaa !28, !alias.scope !484, !noalias !492
  %7890 = uitofp i16 %7889 to float
  %7891 = fmul fast float %7714, %7890
  %7892 = fpext float %7891 to double
  %7893 = fadd fast double %7892, 5.000000e-01
  %7894 = fptoui double %7893 to i64
  tail call void @llvm.experimental.noalias.scope.decl(metadata !581)
  %7895 = icmp eq i64 %7886, 0
  br i1 %7895, label %7896, label %7897

7896:                                             ; preds = %7885
  store i64 8, ptr %7715, align 8, !tbaa !69, !noalias !584
  br label %7897

7897:                                             ; preds = %7896, %7885
  %7898 = phi i64 [ 8, %7896 ], [ %7886, %7885 ]
  br i1 %7719, label %7899, label %7925

7899:                                             ; preds = %7897, %7909
  %7900 = phi i64 [ %7920, %7909 ], [ %7898, %7897 ]
  %7901 = phi i64 [ %7905, %7909 ], [ %6649, %7897 ]
  %7902 = phi ptr [ %7922, %7909 ], [ %7887, %7897 ]
  %7903 = tail call i64 @llvm.umin.i64(i64 %7901, i64 %7900)
  %7904 = sub nsw i64 %7901, %7903
  %7905 = tail call i64 @llvm.smax.i64(i64 %7904, i64 0)
  %7906 = icmp eq i64 %7900, 8
  br i1 %7906, label %7909, label %7907

7907:                                             ; preds = %7899
  %7908 = load i8, ptr %7902, align 1, !tbaa !48, !alias.scope !585, !noalias !493
  br label %7909

7909:                                             ; preds = %7907, %7899
  %7910 = phi i8 [ %7908, %7907 ], [ 0, %7899 ]
  %7911 = sub i64 %7900, %7903
  %7912 = lshr i64 %7894, %7905
  %7913 = shl nsw i64 -1, %7903
  %7914 = xor i64 %7913, -1
  %7915 = and i64 %7912, %7914
  %7916 = shl i64 %7915, %7911
  %7917 = trunc i64 %7916 to i8
  %7918 = or i8 %7910, %7917
  store i8 %7918, ptr %7902, align 1, !tbaa !48, !alias.scope !585, !noalias !493
  %7919 = icmp ule i64 %7900, %7901
  %7920 = select i1 %7919, i64 8, i64 %7911
  %7921 = zext i1 %7919 to i64
  %7922 = getelementptr inbounds i8, ptr %7902, i64 %7921
  %7923 = icmp slt i64 %7904, 1
  br i1 %7923, label %7924, label %7899, !llvm.loop !75

7924:                                             ; preds = %7909
  store i64 %7920, ptr %7715, align 8, !tbaa !69, !noalias !584
  br label %7925

7925:                                             ; preds = %7924, %7897
  %7926 = phi i64 [ %7898, %7897 ], [ %7920, %7924 ]
  %7927 = phi ptr [ %7887, %7897 ], [ %7922, %7924 ]
  %7928 = getelementptr inbounds %struct._PixelPacket, ptr %7723, i64 1
  %7929 = getelementptr inbounds i8, ptr %7927, i64 %7720
  %7930 = add nuw nsw i64 %7725, 1
  %7931 = icmp eq i64 %7930, %164
  br i1 %7931, label %17787, label %7721, !llvm.loop !586

7932:                                             ; preds = %256
  tail call void @llvm.experimental.noalias.scope.decl(metadata !587)
  tail call void @llvm.experimental.noalias.scope.decl(metadata !590)
  %7933 = load i64, ptr %2, align 8, !tbaa !45, !noalias !592
  switch i64 %7933, label %9240 [
    i64 1, label %7949
    i64 4, label %7942
    i64 8, label %7934
    i64 10, label %8445
    i64 12, label %8754
    i64 16, label %8880
    i64 32, label %9036
    i64 64, label %9161
  ]

7934:                                             ; preds = %7932
  %7935 = icmp sgt i64 %164, 0
  br i1 %7935, label %7936, label %17875

7936:                                             ; preds = %7934
  %7937 = getelementptr i8, ptr %0, i64 4
  %7938 = load i32, ptr %7937, align 4, !tbaa !314, !noalias !592
  %7939 = icmp eq i32 %7938, 2
  %7940 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %7941 = load i64, ptr %7940, align 8, !tbaa !47, !noalias !592
  br label %8408

7942:                                             ; preds = %7932
  %7943 = add i64 %164, -1
  %7944 = icmp sgt i64 %7943, 0
  br i1 %7944, label %7945, label %8370

7945:                                             ; preds = %7942
  %7946 = getelementptr i8, ptr %0, i64 4
  %7947 = load i32, ptr %7946, align 4, !tbaa !314, !noalias !592
  %7948 = icmp eq i32 %7947, 2
  br label %8302

7949:                                             ; preds = %7932
  %7950 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 7
  %7951 = load i32, ptr %7950, align 8, !tbaa !593, !noalias !592
  %7952 = icmp ne i32 %7951, 0
  %7953 = zext i1 %7952 to i32
  %7954 = xor i1 %7952, true
  %7955 = zext i1 %7954 to i32
  %7956 = icmp sgt i64 %164, 7
  br i1 %7956, label %7957, label %8143

7957:                                             ; preds = %7949
  %7958 = add nsw i64 %164, -7
  %7959 = getelementptr i8, ptr %0, i64 4
  %7960 = load i32, ptr %7959, align 4, !tbaa !314, !noalias !592
  %7961 = icmp eq i32 %7960, 2
  %7962 = insertelement <4 x i32> poison, i32 %7953, i64 0
  %7963 = shufflevector <4 x i32> %7962, <4 x i32> poison, <4 x i32> zeroinitializer
  %7964 = insertelement <4 x i32> poison, i32 %7955, i64 0
  %7965 = shufflevector <4 x i32> %7964, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %7966

7966:                                             ; preds = %8130, %7957
  %7967 = phi ptr [ %166, %7957 ], [ %8139, %8130 ]
  %7968 = phi ptr [ %88, %7957 ], [ %8140, %8130 ]
  %7969 = phi i64 [ %7958, %7957 ], [ %8141, %8130 ]
  %7970 = getelementptr inbounds %struct._PixelPacket, ptr %7967, i64 0, i32 2
  %7971 = load i16, ptr %7970, align 2, !tbaa !29, !alias.scope !594, !noalias !590
  br i1 %7961, label %7972, label %8021

7972:                                             ; preds = %7966
  %7973 = icmp slt i16 %7971, 0
  %7974 = select i1 %7973, i32 %7955, i32 %7953
  %7975 = getelementptr inbounds %struct._PixelPacket, ptr %7967, i64 1, i32 2
  %7976 = load i16, ptr %7975, align 2, !tbaa !29, !alias.scope !597, !noalias !590
  %7977 = trunc i32 %7974 to i8
  %7978 = shl nuw i8 %7977, 7
  %7979 = icmp slt i16 %7976, 0
  %7980 = select i1 %7979, i32 %7955, i32 %7953
  %7981 = trunc i32 %7980 to i8
  %7982 = shl nuw nsw i8 %7981, 6
  %7983 = or i8 %7982, %7978
  %7984 = getelementptr inbounds %struct._PixelPacket, ptr %7967, i64 2, i32 2
  %7985 = load i16, ptr %7984, align 2, !tbaa !29, !alias.scope !600, !noalias !590
  %7986 = icmp slt i16 %7985, 0
  %7987 = select i1 %7986, i32 %7955, i32 %7953
  %7988 = trunc i32 %7987 to i8
  %7989 = shl nuw nsw i8 %7988, 5
  %7990 = getelementptr inbounds %struct._PixelPacket, ptr %7967, i64 3, i32 2
  %7991 = load i16, ptr %7990, align 2, !tbaa !29, !alias.scope !603, !noalias !590
  %7992 = icmp slt i16 %7991, 0
  %7993 = select i1 %7992, i32 %7955, i32 %7953
  %7994 = trunc i32 %7993 to i8
  %7995 = shl nuw nsw i8 %7994, 4
  %7996 = or i8 %7995, %7989
  %7997 = getelementptr inbounds %struct._PixelPacket, ptr %7967, i64 4, i32 2
  %7998 = load i16, ptr %7997, align 2, !tbaa !29, !alias.scope !606, !noalias !590
  %7999 = icmp slt i16 %7998, 0
  %8000 = select i1 %7999, i32 %7955, i32 %7953
  %8001 = trunc i32 %8000 to i8
  %8002 = shl nuw nsw i8 %8001, 3
  %8003 = or i8 %7996, %8002
  %8004 = getelementptr inbounds %struct._PixelPacket, ptr %7967, i64 5, i32 2
  %8005 = load i16, ptr %8004, align 2, !tbaa !29, !alias.scope !609, !noalias !590
  %8006 = icmp slt i16 %8005, 0
  %8007 = select i1 %8006, i32 %7955, i32 %7953
  %8008 = trunc i32 %8007 to i8
  %8009 = shl nuw nsw i8 %8008, 2
  %8010 = or i8 %8003, %8009
  %8011 = getelementptr inbounds %struct._PixelPacket, ptr %7967, i64 6, i32 2
  %8012 = load i16, ptr %8011, align 2, !tbaa !29, !alias.scope !612, !noalias !590
  %8013 = icmp slt i16 %8012, 0
  %8014 = select i1 %8013, i32 %7955, i32 %7953
  %8015 = trunc i32 %8014 to i8
  %8016 = shl nuw nsw i8 %8015, 1
  %8017 = or i8 %8010, %8016
  %8018 = getelementptr inbounds %struct._PixelPacket, ptr %7967, i64 7, i32 2
  %8019 = load i16, ptr %8018, align 2, !tbaa !29, !alias.scope !615, !noalias !590
  %8020 = uitofp i16 %8019 to float
  br label %8130

8021:                                             ; preds = %7966
  %8022 = uitofp i16 %7971 to float
  %8023 = fmul fast float %8022, 0x3FCB384FE0000000
  %8024 = load <2 x i16>, ptr %7967, align 2, !tbaa !37, !alias.scope !594, !noalias !590
  %8025 = uitofp <2 x i16> %8024 to <2 x float>
  %8026 = fmul fast <2 x float> %8025, <float 0x3FB27AC820000000, float 0x3FE6E29300000000>
  %8027 = extractelement <2 x float> %8026, i64 1
  %8028 = fadd fast float %8027, %8023
  %8029 = extractelement <2 x float> %8026, i64 0
  %8030 = fadd fast float %8028, %8029
  %8031 = fcmp fast olt float %8030, 3.276750e+04
  %8032 = select i1 %8031, i32 %7953, i32 %7955
  %8033 = getelementptr inbounds %struct._PixelPacket, ptr %7967, i64 1
  %8034 = getelementptr inbounds %struct._PixelPacket, ptr %7967, i64 1, i32 2
  %8035 = load i16, ptr %8034, align 2, !tbaa !29, !alias.scope !618, !noalias !590
  %8036 = uitofp i16 %8035 to float
  %8037 = fmul fast float %8036, 0x3FCB384FE0000000
  %8038 = load <2 x i16>, ptr %8033, align 2, !tbaa !37, !alias.scope !618, !noalias !590
  %8039 = uitofp <2 x i16> %8038 to <2 x float>
  %8040 = fmul fast <2 x float> %8039, <float 0x3FB27AC820000000, float 0x3FE6E29300000000>
  %8041 = extractelement <2 x float> %8040, i64 1
  %8042 = fadd fast float %8041, %8037
  %8043 = extractelement <2 x float> %8040, i64 0
  %8044 = fadd fast float %8042, %8043
  %8045 = trunc i32 %8032 to i8
  %8046 = shl nuw i8 %8045, 7
  %8047 = fcmp fast olt float %8044, 3.276750e+04
  %8048 = select i1 %8047, i32 %7953, i32 %7955
  %8049 = trunc i32 %8048 to i8
  %8050 = shl nuw nsw i8 %8049, 6
  %8051 = or i8 %8050, %8046
  %8052 = getelementptr inbounds %struct._PixelPacket, ptr %7967, i64 2, i32 2
  %8053 = load i16, ptr %8052, align 2, !tbaa !29, !alias.scope !600, !noalias !590
  %8054 = getelementptr inbounds %struct._PixelPacket, ptr %7967, i64 2
  %8055 = getelementptr inbounds %struct._PixelPacket, ptr %7967, i64 2, i32 1
  %8056 = load i16, ptr %8055, align 2, !tbaa !30, !alias.scope !600, !noalias !590
  %8057 = load i16, ptr %8054, align 2, !tbaa !31, !alias.scope !600, !noalias !590
  %8058 = getelementptr inbounds %struct._PixelPacket, ptr %7967, i64 3, i32 2
  %8059 = load i16, ptr %8058, align 2, !tbaa !29, !alias.scope !603, !noalias !590
  %8060 = getelementptr inbounds %struct._PixelPacket, ptr %7967, i64 3
  %8061 = getelementptr inbounds %struct._PixelPacket, ptr %7967, i64 3, i32 1
  %8062 = load i16, ptr %8061, align 2, !tbaa !30, !alias.scope !603, !noalias !590
  %8063 = load i16, ptr %8060, align 2, !tbaa !31, !alias.scope !603, !noalias !590
  %8064 = getelementptr inbounds %struct._PixelPacket, ptr %7967, i64 4, i32 2
  %8065 = load i16, ptr %8064, align 2, !tbaa !29, !alias.scope !606, !noalias !590
  %8066 = getelementptr inbounds %struct._PixelPacket, ptr %7967, i64 4
  %8067 = getelementptr inbounds %struct._PixelPacket, ptr %7967, i64 4, i32 1
  %8068 = load i16, ptr %8067, align 2, !tbaa !30, !alias.scope !606, !noalias !590
  %8069 = load i16, ptr %8066, align 2, !tbaa !31, !alias.scope !606, !noalias !590
  %8070 = getelementptr inbounds %struct._PixelPacket, ptr %7967, i64 5, i32 2
  %8071 = load i16, ptr %8070, align 2, !tbaa !29, !alias.scope !609, !noalias !590
  %8072 = getelementptr inbounds %struct._PixelPacket, ptr %7967, i64 5
  %8073 = getelementptr inbounds %struct._PixelPacket, ptr %7967, i64 5, i32 1
  %8074 = load i16, ptr %8073, align 2, !tbaa !30, !alias.scope !609, !noalias !590
  %8075 = load i16, ptr %8072, align 2, !tbaa !31, !alias.scope !609, !noalias !590
  %8076 = insertelement <4 x i16> poison, i16 %8056, i64 0
  %8077 = insertelement <4 x i16> %8076, i16 %8059, i64 1
  %8078 = insertelement <4 x i16> %8077, i16 %8068, i64 2
  %8079 = insertelement <4 x i16> %8078, i16 %8071, i64 3
  %8080 = uitofp <4 x i16> %8079 to <4 x float>
  %8081 = fmul fast <4 x float> %8080, <float 0x3FE6E29300000000, float 0x3FCB384FE0000000, float 0x3FE6E29300000000, float 0x3FCB384FE0000000>
  %8082 = insertelement <4 x i16> poison, i16 %8053, i64 0
  %8083 = insertelement <4 x i16> %8082, i16 %8062, i64 1
  %8084 = insertelement <4 x i16> %8083, i16 %8065, i64 2
  %8085 = insertelement <4 x i16> %8084, i16 %8074, i64 3
  %8086 = uitofp <4 x i16> %8085 to <4 x float>
  %8087 = fmul fast <4 x float> %8086, <float 0x3FCB384FE0000000, float 0x3FE6E29300000000, float 0x3FCB384FE0000000, float 0x3FE6E29300000000>
  %8088 = fadd fast <4 x float> %8087, %8081
  %8089 = insertelement <4 x i16> poison, i16 %8057, i64 0
  %8090 = insertelement <4 x i16> %8089, i16 %8063, i64 1
  %8091 = insertelement <4 x i16> %8090, i16 %8069, i64 2
  %8092 = insertelement <4 x i16> %8091, i16 %8075, i64 3
  %8093 = uitofp <4 x i16> %8092 to <4 x float>
  %8094 = fmul fast <4 x float> %8093, <float 0x3FB27AC820000000, float 0x3FB27AC820000000, float 0x3FB27AC820000000, float 0x3FB27AC820000000>
  %8095 = fadd fast <4 x float> %8088, %8094
  %8096 = fcmp fast olt <4 x float> %8095, <float 3.276750e+04, float 3.276750e+04, float 3.276750e+04, float 3.276750e+04>
  %8097 = select <4 x i1> %8096, <4 x i32> %7963, <4 x i32> %7965
  %8098 = trunc <4 x i32> %8097 to <4 x i8>
  %8099 = shl nuw nsw <4 x i8> %8098, <i8 5, i8 4, i8 3, i8 2>
  %8100 = getelementptr inbounds %struct._PixelPacket, ptr %7967, i64 6, i32 2
  %8101 = load i16, ptr %8100, align 2, !tbaa !29, !alias.scope !612, !noalias !590
  %8102 = uitofp i16 %8101 to float
  %8103 = getelementptr inbounds %struct._PixelPacket, ptr %7967, i64 6
  %8104 = fmul fast float %8102, 0x3FCB384FE0000000
  %8105 = load <2 x i16>, ptr %8103, align 2, !tbaa !37, !alias.scope !612, !noalias !590
  %8106 = uitofp <2 x i16> %8105 to <2 x float>
  %8107 = fmul fast <2 x float> %8106, <float 0x3FB27AC820000000, float 0x3FE6E29300000000>
  %8108 = extractelement <2 x float> %8107, i64 1
  %8109 = fadd fast float %8108, %8104
  %8110 = extractelement <2 x float> %8107, i64 0
  %8111 = fadd fast float %8109, %8110
  %8112 = fcmp fast olt float %8111, 3.276750e+04
  %8113 = select i1 %8112, i32 %7953, i32 %7955
  %8114 = trunc i32 %8113 to i8
  %8115 = shl nuw nsw i8 %8114, 1
  %8116 = tail call i8 @llvm.vector.reduce.or.v4i8(<4 x i8> %8099)
  %8117 = or i8 %8116, %8115
  %8118 = getelementptr inbounds %struct._PixelPacket, ptr %7967, i64 7, i32 2
  %8119 = load i16, ptr %8118, align 2, !tbaa !29, !alias.scope !615, !noalias !590
  %8120 = uitofp i16 %8119 to float
  %8121 = getelementptr inbounds %struct._PixelPacket, ptr %7967, i64 7
  %8122 = fmul fast float %8120, 0x3FCB384FE0000000
  %8123 = load <2 x i16>, ptr %8121, align 2, !tbaa !37, !alias.scope !615, !noalias !590
  %8124 = uitofp <2 x i16> %8123 to <2 x float>
  %8125 = fmul fast <2 x float> %8124, <float 0x3FB27AC820000000, float 0x3FE6E29300000000>
  %8126 = extractelement <2 x float> %8125, i64 1
  %8127 = fadd fast float %8126, %8122
  %8128 = extractelement <2 x float> %8125, i64 0
  %8129 = fadd fast float %8127, %8128
  br label %8130

8130:                                             ; preds = %7972, %8021
  %8131 = phi i8 [ %8051, %8021 ], [ %7983, %7972 ]
  %8132 = phi i8 [ %8117, %8021 ], [ %8017, %7972 ]
  %8133 = phi float [ %8129, %8021 ], [ %8020, %7972 ]
  %8134 = or i8 %8132, %8131
  %8135 = fcmp fast olt float %8133, 3.276750e+04
  %8136 = select i1 %8135, i32 %7953, i32 %7955
  %8137 = trunc i32 %8136 to i8
  %8138 = or i8 %8134, %8137
  store i8 %8138, ptr %7968, align 1, !tbaa !48, !alias.scope !590, !noalias !587
  %8139 = getelementptr inbounds %struct._PixelPacket, ptr %7967, i64 8
  %8140 = getelementptr inbounds i8, ptr %7968, i64 1
  %8141 = add nsw i64 %7969, -8
  %8142 = icmp sgt i64 %7969, 8
  br i1 %8142, label %7966, label %8143, !llvm.loop !620

8143:                                             ; preds = %8130, %7949
  %8144 = phi ptr [ %88, %7949 ], [ %8140, %8130 ]
  %8145 = phi ptr [ %166, %7949 ], [ %8139, %8130 ]
  %8146 = and i64 %164, 7
  %8147 = icmp eq i64 %8146, 0
  br i1 %8147, label %17787, label %8148

8148:                                             ; preds = %8143
  %8149 = getelementptr i8, ptr %0, i64 4
  %8150 = load i32, ptr %8149, align 4, !tbaa !314, !noalias !592
  %8151 = icmp eq i32 %8150, 2
  %8152 = getelementptr inbounds %struct._PixelPacket, ptr %8145, i64 0, i32 2
  %8153 = load i16, ptr %8152, align 2, !tbaa !29, !alias.scope !621, !noalias !590
  %8154 = uitofp i16 %8153 to float
  br i1 %8151, label %8164, label %8155

8155:                                             ; preds = %8148
  %8156 = fmul fast float %8154, 0x3FCB384FE0000000
  %8157 = load <2 x i16>, ptr %8145, align 2, !tbaa !37, !alias.scope !621, !noalias !590
  %8158 = uitofp <2 x i16> %8157 to <2 x float>
  %8159 = fmul fast <2 x float> %8158, <float 0x3FB27AC820000000, float 0x3FE6E29300000000>
  %8160 = extractelement <2 x float> %8159, i64 1
  %8161 = fadd fast float %8160, %8156
  %8162 = extractelement <2 x float> %8159, i64 0
  %8163 = fadd fast float %8161, %8162
  br label %8164

8164:                                             ; preds = %8155, %8148
  %8165 = phi float [ %8163, %8155 ], [ %8154, %8148 ]
  %8166 = fcmp fast olt float %8165, 3.276750e+04
  %8167 = select i1 %8166, i32 %7953, i32 %7955
  %8168 = trunc i32 %8167 to i8
  %8169 = shl nuw i8 %8168, 7
  %8170 = getelementptr inbounds %struct._PixelPacket, ptr %8145, i64 1
  %8171 = icmp ugt i64 %8146, 1
  br i1 %8171, label %8172, label %9325, !llvm.loop !624

8172:                                             ; preds = %8164
  %8173 = getelementptr inbounds %struct._PixelPacket, ptr %8145, i64 1, i32 2
  %8174 = load i16, ptr %8173, align 2, !tbaa !29, !alias.scope !621, !noalias !590
  %8175 = uitofp i16 %8174 to float
  br i1 %8151, label %8185, label %8176

8176:                                             ; preds = %8172
  %8177 = fmul fast float %8175, 0x3FCB384FE0000000
  %8178 = load <2 x i16>, ptr %8170, align 2, !tbaa !37, !alias.scope !621, !noalias !590
  %8179 = uitofp <2 x i16> %8178 to <2 x float>
  %8180 = fmul fast <2 x float> %8179, <float 0x3FB27AC820000000, float 0x3FE6E29300000000>
  %8181 = extractelement <2 x float> %8180, i64 1
  %8182 = fadd fast float %8181, %8177
  %8183 = extractelement <2 x float> %8180, i64 0
  %8184 = fadd fast float %8182, %8183
  br label %8185

8185:                                             ; preds = %8176, %8172
  %8186 = phi float [ %8184, %8176 ], [ %8175, %8172 ]
  %8187 = fcmp fast olt float %8186, 3.276750e+04
  %8188 = select i1 %8187, i32 %7953, i32 %7955
  %8189 = trunc i32 %8188 to i8
  %8190 = shl nuw nsw i8 %8189, 6
  %8191 = or i8 %8169, %8190
  %8192 = getelementptr inbounds %struct._PixelPacket, ptr %8145, i64 2
  %8193 = icmp ugt i64 %8146, 2
  br i1 %8193, label %8194, label %9325, !llvm.loop !624

8194:                                             ; preds = %8185
  %8195 = getelementptr inbounds %struct._PixelPacket, ptr %8145, i64 2, i32 2
  %8196 = load i16, ptr %8195, align 2, !tbaa !29, !alias.scope !621, !noalias !590
  %8197 = uitofp i16 %8196 to float
  br i1 %8151, label %8207, label %8198

8198:                                             ; preds = %8194
  %8199 = fmul fast float %8197, 0x3FCB384FE0000000
  %8200 = load <2 x i16>, ptr %8192, align 2, !tbaa !37, !alias.scope !621, !noalias !590
  %8201 = uitofp <2 x i16> %8200 to <2 x float>
  %8202 = fmul fast <2 x float> %8201, <float 0x3FB27AC820000000, float 0x3FE6E29300000000>
  %8203 = extractelement <2 x float> %8202, i64 1
  %8204 = fadd fast float %8203, %8199
  %8205 = extractelement <2 x float> %8202, i64 0
  %8206 = fadd fast float %8204, %8205
  br label %8207

8207:                                             ; preds = %8198, %8194
  %8208 = phi float [ %8206, %8198 ], [ %8197, %8194 ]
  %8209 = fcmp fast olt float %8208, 3.276750e+04
  %8210 = select i1 %8209, i32 %7953, i32 %7955
  %8211 = trunc i32 %8210 to i8
  %8212 = shl nuw nsw i8 %8211, 5
  %8213 = or i8 %8191, %8212
  %8214 = getelementptr inbounds %struct._PixelPacket, ptr %8145, i64 3
  %8215 = icmp ugt i64 %8146, 3
  br i1 %8215, label %8216, label %9325, !llvm.loop !624

8216:                                             ; preds = %8207
  %8217 = getelementptr inbounds %struct._PixelPacket, ptr %8145, i64 3, i32 2
  %8218 = load i16, ptr %8217, align 2, !tbaa !29, !alias.scope !621, !noalias !590
  %8219 = uitofp i16 %8218 to float
  br i1 %8151, label %8229, label %8220

8220:                                             ; preds = %8216
  %8221 = fmul fast float %8219, 0x3FCB384FE0000000
  %8222 = load <2 x i16>, ptr %8214, align 2, !tbaa !37, !alias.scope !621, !noalias !590
  %8223 = uitofp <2 x i16> %8222 to <2 x float>
  %8224 = fmul fast <2 x float> %8223, <float 0x3FB27AC820000000, float 0x3FE6E29300000000>
  %8225 = extractelement <2 x float> %8224, i64 1
  %8226 = fadd fast float %8225, %8221
  %8227 = extractelement <2 x float> %8224, i64 0
  %8228 = fadd fast float %8226, %8227
  br label %8229

8229:                                             ; preds = %8220, %8216
  %8230 = phi float [ %8228, %8220 ], [ %8219, %8216 ]
  %8231 = fcmp fast olt float %8230, 3.276750e+04
  %8232 = select i1 %8231, i32 %7953, i32 %7955
  %8233 = trunc i32 %8232 to i8
  %8234 = shl nuw nsw i8 %8233, 4
  %8235 = or i8 %8213, %8234
  %8236 = getelementptr inbounds %struct._PixelPacket, ptr %8145, i64 4
  %8237 = icmp ugt i64 %8146, 4
  br i1 %8237, label %8238, label %9325, !llvm.loop !624

8238:                                             ; preds = %8229
  %8239 = getelementptr inbounds %struct._PixelPacket, ptr %8145, i64 4, i32 2
  %8240 = load i16, ptr %8239, align 2, !tbaa !29, !alias.scope !621, !noalias !590
  %8241 = uitofp i16 %8240 to float
  br i1 %8151, label %8251, label %8242

8242:                                             ; preds = %8238
  %8243 = fmul fast float %8241, 0x3FCB384FE0000000
  %8244 = load <2 x i16>, ptr %8236, align 2, !tbaa !37, !alias.scope !621, !noalias !590
  %8245 = uitofp <2 x i16> %8244 to <2 x float>
  %8246 = fmul fast <2 x float> %8245, <float 0x3FB27AC820000000, float 0x3FE6E29300000000>
  %8247 = extractelement <2 x float> %8246, i64 1
  %8248 = fadd fast float %8247, %8243
  %8249 = extractelement <2 x float> %8246, i64 0
  %8250 = fadd fast float %8248, %8249
  br label %8251

8251:                                             ; preds = %8242, %8238
  %8252 = phi float [ %8250, %8242 ], [ %8241, %8238 ]
  %8253 = fcmp fast olt float %8252, 3.276750e+04
  %8254 = select i1 %8253, i32 %7953, i32 %7955
  %8255 = trunc i32 %8254 to i8
  %8256 = shl nuw nsw i8 %8255, 3
  %8257 = or i8 %8235, %8256
  %8258 = getelementptr inbounds %struct._PixelPacket, ptr %8145, i64 5
  %8259 = icmp ugt i64 %8146, 5
  br i1 %8259, label %8260, label %9325, !llvm.loop !624

8260:                                             ; preds = %8251
  %8261 = getelementptr inbounds %struct._PixelPacket, ptr %8145, i64 5, i32 2
  %8262 = load i16, ptr %8261, align 2, !tbaa !29, !alias.scope !621, !noalias !590
  %8263 = uitofp i16 %8262 to float
  br i1 %8151, label %8273, label %8264

8264:                                             ; preds = %8260
  %8265 = fmul fast float %8263, 0x3FCB384FE0000000
  %8266 = load <2 x i16>, ptr %8258, align 2, !tbaa !37, !alias.scope !621, !noalias !590
  %8267 = uitofp <2 x i16> %8266 to <2 x float>
  %8268 = fmul fast <2 x float> %8267, <float 0x3FB27AC820000000, float 0x3FE6E29300000000>
  %8269 = extractelement <2 x float> %8268, i64 1
  %8270 = fadd fast float %8269, %8265
  %8271 = extractelement <2 x float> %8268, i64 0
  %8272 = fadd fast float %8270, %8271
  br label %8273

8273:                                             ; preds = %8264, %8260
  %8274 = phi float [ %8272, %8264 ], [ %8263, %8260 ]
  %8275 = fcmp fast olt float %8274, 3.276750e+04
  %8276 = select i1 %8275, i32 %7953, i32 %7955
  %8277 = trunc i32 %8276 to i8
  %8278 = shl nuw nsw i8 %8277, 2
  %8279 = or i8 %8257, %8278
  %8280 = getelementptr inbounds %struct._PixelPacket, ptr %8145, i64 6
  %8281 = icmp eq i64 %8146, 7
  br i1 %8281, label %8282, label %9325, !llvm.loop !624

8282:                                             ; preds = %8273
  %8283 = getelementptr inbounds %struct._PixelPacket, ptr %8145, i64 6, i32 2
  %8284 = load i16, ptr %8283, align 2, !tbaa !29, !alias.scope !621, !noalias !590
  %8285 = uitofp i16 %8284 to float
  br i1 %8151, label %8295, label %8286

8286:                                             ; preds = %8282
  %8287 = fmul fast float %8285, 0x3FCB384FE0000000
  %8288 = load <2 x i16>, ptr %8280, align 2, !tbaa !37, !alias.scope !621, !noalias !590
  %8289 = uitofp <2 x i16> %8288 to <2 x float>
  %8290 = fmul fast <2 x float> %8289, <float 0x3FB27AC820000000, float 0x3FE6E29300000000>
  %8291 = extractelement <2 x float> %8290, i64 1
  %8292 = fadd fast float %8291, %8287
  %8293 = extractelement <2 x float> %8290, i64 0
  %8294 = fadd fast float %8292, %8293
  br label %8295

8295:                                             ; preds = %8286, %8282
  %8296 = phi float [ %8294, %8286 ], [ %8285, %8282 ]
  %8297 = fcmp fast olt float %8296, 3.276750e+04
  %8298 = select i1 %8297, i32 %7953, i32 %7955
  %8299 = trunc i32 %8298 to i8
  %8300 = shl nuw nsw i8 %8299, 1
  %8301 = or i8 %8279, %8300
  br label %9325

8302:                                             ; preds = %8356, %7945
  %8303 = phi ptr [ %166, %7945 ], [ %8366, %8356 ]
  %8304 = phi ptr [ %88, %7945 ], [ %8367, %8356 ]
  %8305 = phi i64 [ 0, %7945 ], [ %8368, %8356 ]
  %8306 = getelementptr inbounds %struct._PixelPacket, ptr %8303, i64 0, i32 2
  %8307 = load i16, ptr %8306, align 2, !tbaa !29, !alias.scope !625, !noalias !590
  %8308 = uitofp i16 %8307 to float
  br i1 %7948, label %8318, label %8309

8309:                                             ; preds = %8302
  %8310 = fmul fast float %8308, 0x3FCB384FE0000000
  %8311 = load <2 x i16>, ptr %8303, align 2, !tbaa !37, !alias.scope !625, !noalias !590
  %8312 = uitofp <2 x i16> %8311 to <2 x float>
  %8313 = fmul fast <2 x float> %8312, <float 0x3FB27AC820000000, float 0x3FE6E29300000000>
  %8314 = extractelement <2 x float> %8313, i64 1
  %8315 = fadd fast float %8314, %8310
  %8316 = extractelement <2 x float> %8313, i64 0
  %8317 = fadd fast float %8315, %8316
  br label %8318

8318:                                             ; preds = %8309, %8302
  %8319 = phi float [ %8317, %8309 ], [ %8308, %8302 ]
  %8320 = fcmp fast ugt float %8319, 0.000000e+00
  br i1 %8320, label %8321, label %8326

8321:                                             ; preds = %8318
  %8322 = fcmp fast ult float %8319, 6.553500e+04
  br i1 %8322, label %8323, label %8326

8323:                                             ; preds = %8321
  %8324 = fadd fast float %8319, 5.000000e-01
  %8325 = fptoui float %8324 to i16
  br label %8326

8326:                                             ; preds = %8323, %8321, %8318
  %8327 = phi i16 [ %8325, %8323 ], [ 0, %8318 ], [ -1, %8321 ]
  %8328 = zext i16 %8327 to i64
  %8329 = add nuw nsw i64 %8328, 128
  %8330 = lshr i64 %8329, 8
  %8331 = sub nsw i64 %8329, %8330
  %8332 = lshr i64 %8331, 8
  %8333 = trunc i64 %8332 to i8
  %8334 = and i8 %8333, -16
  %8335 = getelementptr inbounds %struct._PixelPacket, ptr %8303, i64 1, i32 2
  %8336 = load i16, ptr %8335, align 2, !tbaa !29, !alias.scope !628, !noalias !590
  %8337 = uitofp i16 %8336 to float
  br i1 %7948, label %8348, label %8338

8338:                                             ; preds = %8326
  %8339 = getelementptr inbounds %struct._PixelPacket, ptr %8303, i64 1
  %8340 = fmul fast float %8337, 0x3FCB384FE0000000
  %8341 = load <2 x i16>, ptr %8339, align 2, !tbaa !37, !alias.scope !628, !noalias !590
  %8342 = uitofp <2 x i16> %8341 to <2 x float>
  %8343 = fmul fast <2 x float> %8342, <float 0x3FB27AC820000000, float 0x3FE6E29300000000>
  %8344 = extractelement <2 x float> %8343, i64 1
  %8345 = fadd fast float %8344, %8340
  %8346 = extractelement <2 x float> %8343, i64 0
  %8347 = fadd fast float %8345, %8346
  br label %8348

8348:                                             ; preds = %8338, %8326
  %8349 = phi float [ %8347, %8338 ], [ %8337, %8326 ]
  %8350 = fcmp fast ugt float %8349, 0.000000e+00
  br i1 %8350, label %8351, label %8356

8351:                                             ; preds = %8348
  %8352 = fcmp fast ult float %8349, 6.553500e+04
  br i1 %8352, label %8353, label %8356

8353:                                             ; preds = %8351
  %8354 = fadd fast float %8349, 5.000000e-01
  %8355 = fptoui float %8354 to i16
  br label %8356

8356:                                             ; preds = %8353, %8351, %8348
  %8357 = phi i16 [ %8355, %8353 ], [ 0, %8348 ], [ -1, %8351 ]
  %8358 = zext i16 %8357 to i64
  %8359 = add nuw nsw i64 %8358, 128
  %8360 = lshr i64 %8359, 8
  %8361 = sub nsw i64 %8359, %8360
  %8362 = lshr i64 %8361, 12
  %8363 = trunc i64 %8362 to i8
  %8364 = and i8 %8363, 15
  %8365 = or i8 %8364, %8334
  store i8 %8365, ptr %8304, align 1, !tbaa !48, !alias.scope !590, !noalias !587
  %8366 = getelementptr inbounds %struct._PixelPacket, ptr %8303, i64 2
  %8367 = getelementptr inbounds i8, ptr %8304, i64 1
  %8368 = add nuw nsw i64 %8305, 2
  %8369 = icmp slt i64 %8368, %7943
  br i1 %8369, label %8302, label %8370, !llvm.loop !631

8370:                                             ; preds = %8356, %7942
  %8371 = phi ptr [ %88, %7942 ], [ %8367, %8356 ]
  %8372 = phi ptr [ %166, %7942 ], [ %8366, %8356 ]
  %8373 = and i64 %164, 1
  %8374 = icmp eq i64 %8373, 0
  br i1 %8374, label %17787, label %8375

8375:                                             ; preds = %8370
  %8376 = getelementptr i8, ptr %0, i64 4
  %8377 = load i32, ptr %8376, align 4, !tbaa !314, !noalias !592
  %8378 = icmp eq i32 %8377, 2
  %8379 = getelementptr inbounds %struct._PixelPacket, ptr %8372, i64 0, i32 2
  %8380 = load i16, ptr %8379, align 2, !tbaa !29, !alias.scope !632, !noalias !590
  %8381 = uitofp i16 %8380 to float
  br i1 %8378, label %8391, label %8382

8382:                                             ; preds = %8375
  %8383 = fmul fast float %8381, 0x3FCB384FE0000000
  %8384 = load <2 x i16>, ptr %8372, align 2, !tbaa !37, !alias.scope !632, !noalias !590
  %8385 = uitofp <2 x i16> %8384 to <2 x float>
  %8386 = fmul fast <2 x float> %8385, <float 0x3FB27AC820000000, float 0x3FE6E29300000000>
  %8387 = extractelement <2 x float> %8386, i64 1
  %8388 = fadd fast float %8387, %8383
  %8389 = extractelement <2 x float> %8386, i64 0
  %8390 = fadd fast float %8388, %8389
  br label %8391

8391:                                             ; preds = %8382, %8375
  %8392 = phi float [ %8390, %8382 ], [ %8381, %8375 ]
  %8393 = fcmp fast ugt float %8392, 0.000000e+00
  br i1 %8393, label %8394, label %8401

8394:                                             ; preds = %8391
  %8395 = fcmp fast ult float %8392, 6.553500e+04
  br i1 %8395, label %8396, label %8401

8396:                                             ; preds = %8394
  %8397 = fadd fast float %8392, 5.000000e-01
  %8398 = fptoui float %8397 to i16
  %8399 = zext i16 %8398 to i64
  %8400 = add nuw nsw i64 %8399, 128
  br label %8401

8401:                                             ; preds = %8396, %8394, %8391
  %8402 = phi i64 [ %8400, %8396 ], [ 128, %8391 ], [ 65663, %8394 ]
  %8403 = lshr i64 %8402, 8
  %8404 = sub nsw i64 %8402, %8403
  %8405 = lshr i64 %8404, 8
  %8406 = trunc i64 %8405 to i8
  %8407 = and i8 %8406, -16
  store i8 %8407, ptr %8371, align 1, !tbaa !48, !alias.scope !590, !noalias !587
  br label %17787

8408:                                             ; preds = %8432, %7936
  %8409 = phi ptr [ %166, %7936 ], [ %8441, %8432 ]
  %8410 = phi ptr [ %88, %7936 ], [ %8442, %8432 ]
  %8411 = phi i64 [ 0, %7936 ], [ %8443, %8432 ]
  %8412 = getelementptr inbounds %struct._PixelPacket, ptr %8409, i64 0, i32 2
  %8413 = load i16, ptr %8412, align 2, !tbaa !29, !alias.scope !635, !noalias !590
  %8414 = uitofp i16 %8413 to float
  br i1 %7939, label %8424, label %8415

8415:                                             ; preds = %8408
  %8416 = fmul fast float %8414, 0x3FCB384FE0000000
  %8417 = load <2 x i16>, ptr %8409, align 2, !tbaa !37, !alias.scope !635, !noalias !590
  %8418 = uitofp <2 x i16> %8417 to <2 x float>
  %8419 = fmul fast <2 x float> %8418, <float 0x3FB27AC820000000, float 0x3FE6E29300000000>
  %8420 = extractelement <2 x float> %8419, i64 1
  %8421 = fadd fast float %8420, %8416
  %8422 = extractelement <2 x float> %8419, i64 0
  %8423 = fadd fast float %8421, %8422
  br label %8424

8424:                                             ; preds = %8415, %8408
  %8425 = phi float [ %8423, %8415 ], [ %8414, %8408 ]
  %8426 = fcmp fast ugt float %8425, 0.000000e+00
  br i1 %8426, label %8427, label %8432

8427:                                             ; preds = %8424
  %8428 = fcmp fast ult float %8425, 6.553500e+04
  br i1 %8428, label %8429, label %8432

8429:                                             ; preds = %8427
  %8430 = fadd fast float %8425, 5.000000e-01
  %8431 = fptoui float %8430 to i16
  br label %8432

8432:                                             ; preds = %8429, %8427, %8424
  %8433 = phi i16 [ %8431, %8429 ], [ 0, %8424 ], [ -1, %8427 ]
  %8434 = zext i16 %8433 to i64
  %8435 = add nuw nsw i64 %8434, 128
  %8436 = lshr i64 %8435, 8
  %8437 = sub nsw i64 %8435, %8436
  %8438 = lshr i64 %8437, 8
  %8439 = trunc i64 %8438 to i8
  %8440 = getelementptr inbounds i8, ptr %8410, i64 1
  store i8 %8439, ptr %8410, align 1, !tbaa !48, !alias.scope !590, !noalias !587
  %8441 = getelementptr inbounds %struct._PixelPacket, ptr %8409, i64 1
  %8442 = getelementptr inbounds i8, ptr %8440, i64 %7941
  %8443 = add nuw nsw i64 %8411, 1
  %8444 = icmp eq i64 %8443, %164
  br i1 %8444, label %17787, label %8408, !llvm.loop !638

8445:                                             ; preds = %7932
  %8446 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 8
  %8447 = load i32, ptr %8446, align 4, !tbaa !84, !noalias !592
  %8448 = icmp eq i32 %8447, 0
  br i1 %8448, label %8459, label %8449

8449:                                             ; preds = %8445
  %8450 = icmp sgt i64 %164, 0
  br i1 %8450, label %8451, label %17875

8451:                                             ; preds = %8449
  %8452 = getelementptr i8, ptr %0, i64 4
  %8453 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 14, i32 2
  %8454 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %8455 = load i64, ptr %8453, align 8, !tbaa !69, !noalias !639
  %8456 = load i32, ptr %8452, align 4, !tbaa !314, !noalias !592
  %8457 = icmp eq i32 %8456, 2
  %8458 = load i64, ptr %8454, align 8, !tbaa !47, !noalias !592
  br label %8690

8459:                                             ; preds = %8445
  %8460 = add i64 %164, -2
  %8461 = icmp sgt i64 %8460, 0
  br i1 %8461, label %8462, label %8588

8462:                                             ; preds = %8459
  %8463 = getelementptr i8, ptr %0, i64 4
  %8464 = load i32, ptr %8463, align 4, !tbaa !314, !noalias !592
  %8465 = icmp eq i32 %8464, 2
  %8466 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %8467 = load i32, ptr %8466, align 8, !tbaa !51, !noalias !592
  %8468 = icmp eq i32 %8467, 1
  %8469 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %8470 = load i64, ptr %8469, align 8, !tbaa !47, !noalias !592
  br label %8471

8471:                                             ; preds = %8571, %8462
  %8472 = phi ptr [ %166, %8462 ], [ %8584, %8571 ]
  %8473 = phi ptr [ %88, %8462 ], [ %8585, %8571 ]
  %8474 = phi i64 [ 0, %8462 ], [ %8586, %8571 ]
  %8475 = getelementptr inbounds %struct._PixelPacket, ptr %8472, i64 2, i32 2
  %8476 = load i16, ptr %8475, align 2, !tbaa !29, !alias.scope !642, !noalias !590
  %8477 = uitofp i16 %8476 to float
  br i1 %8465, label %8488, label %8478

8478:                                             ; preds = %8471
  %8479 = getelementptr inbounds %struct._PixelPacket, ptr %8472, i64 2
  %8480 = fmul fast float %8477, 0x3FCB384FE0000000
  %8481 = load <2 x i16>, ptr %8479, align 2, !tbaa !37, !alias.scope !642, !noalias !590
  %8482 = uitofp <2 x i16> %8481 to <2 x float>
  %8483 = fmul fast <2 x float> %8482, <float 0x3FB27AC820000000, float 0x3FE6E29300000000>
  %8484 = extractelement <2 x float> %8483, i64 1
  %8485 = fadd fast float %8484, %8480
  %8486 = extractelement <2 x float> %8483, i64 0
  %8487 = fadd fast float %8485, %8486
  br label %8488

8488:                                             ; preds = %8478, %8471
  %8489 = phi float [ %8487, %8478 ], [ %8477, %8471 ]
  %8490 = fcmp fast ugt float %8489, 0.000000e+00
  br i1 %8490, label %8491, label %8496

8491:                                             ; preds = %8488
  %8492 = fcmp fast ult float %8489, 6.553500e+04
  br i1 %8492, label %8493, label %8496

8493:                                             ; preds = %8491
  %8494 = fadd fast float %8489, 5.000000e-01
  %8495 = fptoui float %8494 to i16
  br label %8496

8496:                                             ; preds = %8493, %8491, %8488
  %8497 = phi i16 [ %8495, %8493 ], [ 0, %8488 ], [ -1, %8491 ]
  %8498 = uitofp i16 %8497 to float
  %8499 = fmul fast float %8498, 0x3F8FF82000000000
  %8500 = fpext float %8499 to double
  %8501 = fadd fast double %8500, 5.000000e-01
  %8502 = fptoui double %8501 to i64
  %8503 = shl i64 %8502, 22
  %8504 = getelementptr inbounds %struct._PixelPacket, ptr %8472, i64 1, i32 2
  %8505 = load i16, ptr %8504, align 2, !tbaa !29, !alias.scope !645, !noalias !590
  %8506 = uitofp i16 %8505 to float
  br i1 %8465, label %8517, label %8507

8507:                                             ; preds = %8496
  %8508 = getelementptr inbounds %struct._PixelPacket, ptr %8472, i64 1
  %8509 = fmul fast float %8506, 0x3FCB384FE0000000
  %8510 = load <2 x i16>, ptr %8508, align 2, !tbaa !37, !alias.scope !645, !noalias !590
  %8511 = uitofp <2 x i16> %8510 to <2 x float>
  %8512 = fmul fast <2 x float> %8511, <float 0x3FB27AC820000000, float 0x3FE6E29300000000>
  %8513 = extractelement <2 x float> %8512, i64 1
  %8514 = fadd fast float %8513, %8509
  %8515 = extractelement <2 x float> %8512, i64 0
  %8516 = fadd fast float %8514, %8515
  br label %8517

8517:                                             ; preds = %8507, %8496
  %8518 = phi float [ %8516, %8507 ], [ %8506, %8496 ]
  %8519 = fcmp fast ugt float %8518, 0.000000e+00
  br i1 %8519, label %8520, label %8525

8520:                                             ; preds = %8517
  %8521 = fcmp fast ult float %8518, 6.553500e+04
  br i1 %8521, label %8522, label %8525

8522:                                             ; preds = %8520
  %8523 = fadd fast float %8518, 5.000000e-01
  %8524 = fptoui float %8523 to i16
  br label %8525

8525:                                             ; preds = %8522, %8520, %8517
  %8526 = phi i16 [ %8524, %8522 ], [ 0, %8517 ], [ -1, %8520 ]
  %8527 = uitofp i16 %8526 to float
  %8528 = fmul fast float %8527, 0x3F8FF82000000000
  %8529 = fpext float %8528 to double
  %8530 = fadd fast double %8529, 5.000000e-01
  %8531 = fptoui double %8530 to i64
  %8532 = shl i64 %8531, 12
  %8533 = or i64 %8532, %8503
  %8534 = getelementptr inbounds %struct._PixelPacket, ptr %8472, i64 0, i32 2
  %8535 = load i16, ptr %8534, align 2, !tbaa !29, !alias.scope !648, !noalias !590
  %8536 = uitofp i16 %8535 to float
  br i1 %8465, label %8546, label %8537

8537:                                             ; preds = %8525
  %8538 = fmul fast float %8536, 0x3FCB384FE0000000
  %8539 = load <2 x i16>, ptr %8472, align 2, !tbaa !37, !alias.scope !648, !noalias !590
  %8540 = uitofp <2 x i16> %8539 to <2 x float>
  %8541 = fmul fast <2 x float> %8540, <float 0x3FB27AC820000000, float 0x3FE6E29300000000>
  %8542 = extractelement <2 x float> %8541, i64 1
  %8543 = fadd fast float %8542, %8538
  %8544 = extractelement <2 x float> %8541, i64 0
  %8545 = fadd fast float %8543, %8544
  br label %8546

8546:                                             ; preds = %8537, %8525
  %8547 = phi float [ %8545, %8537 ], [ %8536, %8525 ]
  %8548 = fcmp fast ugt float %8547, 0.000000e+00
  br i1 %8548, label %8549, label %8554

8549:                                             ; preds = %8546
  %8550 = fcmp fast ult float %8547, 6.553500e+04
  br i1 %8550, label %8551, label %8554

8551:                                             ; preds = %8549
  %8552 = fadd fast float %8547, 5.000000e-01
  %8553 = fptoui float %8552 to i16
  br label %8554

8554:                                             ; preds = %8551, %8549, %8546
  %8555 = phi i16 [ %8553, %8551 ], [ 0, %8546 ], [ -1, %8549 ]
  %8556 = uitofp i16 %8555 to float
  %8557 = fmul fast float %8556, 0x3F8FF82000000000
  %8558 = fpext float %8557 to double
  %8559 = fadd fast double %8558, 5.000000e-01
  %8560 = fptoui double %8559 to i64
  %8561 = shl i64 %8560, 2
  %8562 = or i64 %8533, %8561
  %8563 = trunc i64 %8562 to i32
  %8564 = lshr i32 %8563, 16
  br i1 %8468, label %8565, label %8568

8565:                                             ; preds = %8554
  %8566 = lshr i32 %8563, 8
  %8567 = lshr i32 %8563, 24
  br label %8571

8568:                                             ; preds = %8554
  %8569 = lshr i32 %8563, 24
  %8570 = lshr i32 %8563, 8
  br label %8571

8571:                                             ; preds = %8568, %8565
  %8572 = phi i32 [ %8563, %8565 ], [ %8569, %8568 ]
  %8573 = phi i32 [ %8566, %8565 ], [ %8564, %8568 ]
  %8574 = phi i32 [ %8564, %8565 ], [ %8570, %8568 ]
  %8575 = phi i32 [ %8567, %8565 ], [ %8563, %8568 ]
  %8576 = trunc i32 %8575 to i8
  %8577 = trunc i32 %8574 to i8
  %8578 = trunc i32 %8573 to i8
  %8579 = trunc i32 %8572 to i8
  store i8 %8579, ptr %8473, align 1, !alias.scope !590, !noalias !587
  %8580 = getelementptr inbounds i8, ptr %8473, i64 1
  store i8 %8578, ptr %8580, align 1, !alias.scope !590, !noalias !587
  %8581 = getelementptr inbounds i8, ptr %8473, i64 2
  store i8 %8577, ptr %8581, align 1, !alias.scope !590, !noalias !587
  %8582 = getelementptr inbounds i8, ptr %8473, i64 3
  store i8 %8576, ptr %8582, align 1, !alias.scope !590, !noalias !587
  %8583 = getelementptr inbounds i8, ptr %8473, i64 4
  %8584 = getelementptr inbounds %struct._PixelPacket, ptr %8472, i64 3
  %8585 = getelementptr inbounds i8, ptr %8583, i64 %8470
  %8586 = add nuw nsw i64 %8474, 3
  %8587 = icmp slt i64 %8586, %8460
  br i1 %8587, label %8471, label %8588, !llvm.loop !651

8588:                                             ; preds = %8571, %8459
  %8589 = phi i64 [ 0, %8459 ], [ %8586, %8571 ]
  %8590 = phi ptr [ %88, %8459 ], [ %8585, %8571 ]
  %8591 = phi ptr [ %166, %8459 ], [ %8584, %8571 ]
  %8592 = icmp slt i64 %8589, %164
  br i1 %8592, label %8593, label %17787

8593:                                             ; preds = %8588
  %8594 = add nuw nsw i64 %8589, 1
  %8595 = add nsw i64 %164, -1
  %8596 = icmp slt i64 %8589, %8595
  br i1 %8596, label %8597, label %8629

8597:                                             ; preds = %8593
  %8598 = getelementptr i8, ptr %0, i64 4
  %8599 = load i32, ptr %8598, align 4, !tbaa !314, !noalias !592
  %8600 = icmp eq i32 %8599, 2
  %8601 = getelementptr inbounds %struct._PixelPacket, ptr %8591, i64 1, i32 2
  %8602 = load i16, ptr %8601, align 2, !tbaa !29, !alias.scope !652, !noalias !590
  %8603 = uitofp i16 %8602 to float
  br i1 %8600, label %8614, label %8604

8604:                                             ; preds = %8597
  %8605 = getelementptr inbounds %struct._PixelPacket, ptr %8591, i64 1
  %8606 = fmul fast float %8603, 0x3FCB384FE0000000
  %8607 = load <2 x i16>, ptr %8605, align 2, !tbaa !37, !alias.scope !652, !noalias !590
  %8608 = uitofp <2 x i16> %8607 to <2 x float>
  %8609 = fmul fast <2 x float> %8608, <float 0x3FB27AC820000000, float 0x3FE6E29300000000>
  %8610 = extractelement <2 x float> %8609, i64 1
  %8611 = fadd fast float %8610, %8606
  %8612 = extractelement <2 x float> %8609, i64 0
  %8613 = fadd fast float %8611, %8612
  br label %8614

8614:                                             ; preds = %8604, %8597
  %8615 = phi float [ %8613, %8604 ], [ %8603, %8597 ]
  %8616 = fcmp fast ugt float %8615, 0.000000e+00
  br i1 %8616, label %8617, label %8629

8617:                                             ; preds = %8614
  %8618 = fcmp fast ult float %8615, 6.553500e+04
  br i1 %8618, label %8619, label %8629

8619:                                             ; preds = %8617
  %8620 = fadd fast float %8615, 5.000000e-01
  %8621 = fptoui float %8620 to i16
  %8622 = uitofp i16 %8621 to float
  %8623 = fmul fast float %8622, 0x3F8FF82000000000
  %8624 = fpext float %8623 to double
  %8625 = fadd fast double %8624, 5.000000e-01
  %8626 = fptoui double %8625 to i64
  %8627 = trunc i64 %8626 to i32
  %8628 = shl i32 %8627, 12
  br label %8629

8629:                                             ; preds = %8619, %8617, %8614, %8593
  %8630 = phi i32 [ 0, %8593 ], [ %8628, %8619 ], [ 0, %8614 ], [ 4190208, %8617 ]
  %8631 = icmp slt i64 %8594, %164
  br i1 %8631, label %8632, label %8666

8632:                                             ; preds = %8629
  %8633 = getelementptr i8, ptr %0, i64 4
  %8634 = load i32, ptr %8633, align 4, !tbaa !314, !noalias !592
  %8635 = icmp eq i32 %8634, 2
  %8636 = getelementptr inbounds %struct._PixelPacket, ptr %8591, i64 0, i32 2
  %8637 = load i16, ptr %8636, align 2, !tbaa !29, !alias.scope !655, !noalias !590
  %8638 = uitofp i16 %8637 to float
  br i1 %8635, label %8648, label %8639

8639:                                             ; preds = %8632
  %8640 = fmul fast float %8638, 0x3FCB384FE0000000
  %8641 = load <2 x i16>, ptr %8591, align 2, !tbaa !37, !alias.scope !655, !noalias !590
  %8642 = uitofp <2 x i16> %8641 to <2 x float>
  %8643 = fmul fast <2 x float> %8642, <float 0x3FB27AC820000000, float 0x3FE6E29300000000>
  %8644 = extractelement <2 x float> %8643, i64 1
  %8645 = fadd fast float %8644, %8640
  %8646 = extractelement <2 x float> %8643, i64 0
  %8647 = fadd fast float %8645, %8646
  br label %8648

8648:                                             ; preds = %8639, %8632
  %8649 = phi float [ %8647, %8639 ], [ %8638, %8632 ]
  %8650 = fcmp fast ugt float %8649, 0.000000e+00
  br i1 %8650, label %8651, label %8663

8651:                                             ; preds = %8648
  %8652 = fcmp fast ult float %8649, 6.553500e+04
  br i1 %8652, label %8653, label %8663

8653:                                             ; preds = %8651
  %8654 = fadd fast float %8649, 5.000000e-01
  %8655 = fptoui float %8654 to i16
  %8656 = uitofp i16 %8655 to float
  %8657 = fmul fast float %8656, 0x3F8FF82000000000
  %8658 = fpext float %8657 to double
  %8659 = fadd fast double %8658, 5.000000e-01
  %8660 = fptoui double %8659 to i64
  %8661 = trunc i64 %8660 to i32
  %8662 = shl i32 %8661, 2
  br label %8663

8663:                                             ; preds = %8653, %8651, %8648
  %8664 = phi i32 [ %8662, %8653 ], [ 0, %8648 ], [ 4092, %8651 ]
  %8665 = or i32 %8664, %8630
  br label %8666

8666:                                             ; preds = %8663, %8629
  %8667 = phi i32 [ %8665, %8663 ], [ %8630, %8629 ]
  %8668 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %8669 = load i32, ptr %8668, align 8, !tbaa !51, !noalias !592
  %8670 = icmp eq i32 %8669, 1
  %8671 = lshr i32 %8667, 16
  br i1 %8670, label %8672, label %8675

8672:                                             ; preds = %8666
  %8673 = lshr i32 %8667, 8
  %8674 = lshr i32 %8667, 24
  br label %8678

8675:                                             ; preds = %8666
  %8676 = lshr i32 %8667, 24
  %8677 = lshr i32 %8667, 8
  br label %8678

8678:                                             ; preds = %8675, %8672
  %8679 = phi i32 [ %8667, %8672 ], [ %8676, %8675 ]
  %8680 = phi i32 [ %8673, %8672 ], [ %8671, %8675 ]
  %8681 = phi i32 [ %8671, %8672 ], [ %8677, %8675 ]
  %8682 = phi i32 [ %8674, %8672 ], [ %8667, %8675 ]
  %8683 = trunc i32 %8682 to i8
  %8684 = trunc i32 %8681 to i8
  %8685 = trunc i32 %8680 to i8
  %8686 = trunc i32 %8679 to i8
  store i8 %8686, ptr %8590, align 1, !alias.scope !590, !noalias !587
  %8687 = getelementptr inbounds i8, ptr %8590, i64 1
  store i8 %8685, ptr %8687, align 1, !alias.scope !590, !noalias !587
  %8688 = getelementptr inbounds i8, ptr %8590, i64 2
  store i8 %8684, ptr %8688, align 1, !alias.scope !590, !noalias !587
  %8689 = getelementptr inbounds i8, ptr %8590, i64 3
  store i8 %8683, ptr %8689, align 1, !alias.scope !590, !noalias !587
  br label %17787

8690:                                             ; preds = %8749, %8451
  %8691 = phi i64 [ %8455, %8451 ], [ %8745, %8749 ]
  %8692 = phi ptr [ %166, %8451 ], [ %8750, %8749 ]
  %8693 = phi ptr [ %88, %8451 ], [ %8751, %8749 ]
  %8694 = phi i64 [ 0, %8451 ], [ %8752, %8749 ]
  %8695 = getelementptr inbounds %struct._PixelPacket, ptr %8692, i64 0, i32 2
  %8696 = load i16, ptr %8695, align 2, !tbaa !29, !alias.scope !658, !noalias !590
  %8697 = uitofp i16 %8696 to float
  br i1 %8457, label %8707, label %8698

8698:                                             ; preds = %8690
  %8699 = fmul fast float %8697, 0x3FCB384FE0000000
  %8700 = load <2 x i16>, ptr %8692, align 2, !tbaa !37, !alias.scope !658, !noalias !590
  %8701 = uitofp <2 x i16> %8700 to <2 x float>
  %8702 = fmul fast <2 x float> %8701, <float 0x3FB27AC820000000, float 0x3FE6E29300000000>
  %8703 = extractelement <2 x float> %8702, i64 1
  %8704 = fadd fast float %8703, %8699
  %8705 = extractelement <2 x float> %8702, i64 0
  %8706 = fadd fast float %8704, %8705
  br label %8707

8707:                                             ; preds = %8698, %8690
  %8708 = phi float [ %8706, %8698 ], [ %8697, %8690 ]
  %8709 = fcmp fast ugt float %8708, 0.000000e+00
  br i1 %8709, label %8710, label %8715

8710:                                             ; preds = %8707
  %8711 = fcmp fast ult float %8708, 6.553500e+04
  br i1 %8711, label %8712, label %8715

8712:                                             ; preds = %8710
  %8713 = fadd fast float %8708, 5.000000e-01
  %8714 = fptoui float %8713 to i16
  br label %8715

8715:                                             ; preds = %8712, %8710, %8707
  %8716 = phi i16 [ %8714, %8712 ], [ 0, %8707 ], [ -1, %8710 ]
  %8717 = uitofp i16 %8716 to float
  %8718 = fmul fast float %8717, 0x3F8FF82000000000
  %8719 = fpext float %8718 to double
  %8720 = fadd fast double %8719, 5.000000e-01
  %8721 = fptoui double %8720 to i64
  tail call void @llvm.experimental.noalias.scope.decl(metadata !661)
  %8722 = icmp eq i64 %8691, 0
  %8723 = select i1 %8722, i64 8, i64 %8691
  br label %8724

8724:                                             ; preds = %8715, %8734
  %8725 = phi i64 [ %8745, %8734 ], [ %8723, %8715 ]
  %8726 = phi i64 [ %8730, %8734 ], [ 10, %8715 ]
  %8727 = phi ptr [ %8747, %8734 ], [ %8693, %8715 ]
  %8728 = tail call i64 @llvm.umin.i64(i64 %8726, i64 %8725)
  %8729 = sub nsw i64 %8726, %8728
  %8730 = tail call i64 @llvm.smax.i64(i64 %8729, i64 0)
  %8731 = icmp eq i64 %8725, 8
  br i1 %8731, label %8734, label %8732

8732:                                             ; preds = %8724
  %8733 = load i8, ptr %8727, align 1, !tbaa !48, !alias.scope !662, !noalias !587
  br label %8734

8734:                                             ; preds = %8732, %8724
  %8735 = phi i8 [ %8733, %8732 ], [ 0, %8724 ]
  %8736 = sub i64 %8725, %8728
  %8737 = lshr i64 %8721, %8730
  %8738 = shl nsw i64 -1, %8728
  %8739 = xor i64 %8738, -1
  %8740 = and i64 %8737, %8739
  %8741 = shl i64 %8740, %8736
  %8742 = trunc i64 %8741 to i8
  %8743 = or i8 %8735, %8742
  store i8 %8743, ptr %8727, align 1, !tbaa !48, !alias.scope !662, !noalias !587
  %8744 = icmp ule i64 %8725, %8726
  %8745 = select i1 %8744, i64 8, i64 %8736
  %8746 = zext i1 %8744 to i64
  %8747 = getelementptr inbounds i8, ptr %8727, i64 %8746
  %8748 = icmp slt i64 %8729, 1
  br i1 %8748, label %8749, label %8724, !llvm.loop !75

8749:                                             ; preds = %8734
  %8750 = getelementptr inbounds %struct._PixelPacket, ptr %8692, i64 1
  %8751 = getelementptr inbounds i8, ptr %8747, i64 %8458
  %8752 = add nuw nsw i64 %8694, 1
  %8753 = icmp eq i64 %8752, %164
  br i1 %8753, label %9327, label %8690, !llvm.loop !663

8754:                                             ; preds = %7932
  %8755 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 8
  %8756 = load i32, ptr %8755, align 4, !tbaa !84, !noalias !592
  %8757 = icmp eq i32 %8756, 0
  %8758 = icmp sgt i64 %164, 0
  br i1 %8757, label %8768, label %8759

8759:                                             ; preds = %8754
  br i1 %8758, label %8760, label %17875

8760:                                             ; preds = %8759
  %8761 = getelementptr i8, ptr %0, i64 4
  %8762 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 14, i32 2
  %8763 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %8764 = load i64, ptr %8762, align 8, !tbaa !69, !noalias !664
  %8765 = load i32, ptr %8761, align 4, !tbaa !314, !noalias !592
  %8766 = icmp eq i32 %8765, 2
  %8767 = load i64, ptr %8763, align 8, !tbaa !47, !noalias !592
  br label %8816

8768:                                             ; preds = %8754
  br i1 %8758, label %8769, label %17875

8769:                                             ; preds = %8768
  %8770 = getelementptr i8, ptr %0, i64 4
  %8771 = load i32, ptr %8770, align 4, !tbaa !314, !noalias !592
  %8772 = icmp eq i32 %8771, 2
  %8773 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %8774 = load i32, ptr %8773, align 8, !tbaa !51, !noalias !592
  %8775 = icmp eq i32 %8774, 1
  %8776 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %8777 = load i64, ptr %8776, align 8, !tbaa !47, !noalias !592
  br label %8778

8778:                                             ; preds = %8802, %8769
  %8779 = phi ptr [ %166, %8769 ], [ %8812, %8802 ]
  %8780 = phi ptr [ %88, %8769 ], [ %8813, %8802 ]
  %8781 = phi i64 [ 0, %8769 ], [ %8814, %8802 ]
  %8782 = getelementptr inbounds %struct._PixelPacket, ptr %8779, i64 0, i32 2
  %8783 = load i16, ptr %8782, align 2, !tbaa !29, !alias.scope !667, !noalias !590
  %8784 = uitofp i16 %8783 to float
  br i1 %8772, label %8794, label %8785

8785:                                             ; preds = %8778
  %8786 = fmul fast float %8784, 0x3FCB384FE0000000
  %8787 = load <2 x i16>, ptr %8779, align 2, !tbaa !37, !alias.scope !667, !noalias !590
  %8788 = uitofp <2 x i16> %8787 to <2 x float>
  %8789 = fmul fast <2 x float> %8788, <float 0x3FB27AC820000000, float 0x3FE6E29300000000>
  %8790 = extractelement <2 x float> %8789, i64 1
  %8791 = fadd fast float %8790, %8786
  %8792 = extractelement <2 x float> %8789, i64 0
  %8793 = fadd fast float %8791, %8792
  br label %8794

8794:                                             ; preds = %8785, %8778
  %8795 = phi float [ %8793, %8785 ], [ %8784, %8778 ]
  %8796 = fcmp fast ugt float %8795, 0.000000e+00
  br i1 %8796, label %8797, label %8802

8797:                                             ; preds = %8794
  %8798 = fcmp fast ult float %8795, 6.553500e+04
  br i1 %8798, label %8799, label %8802

8799:                                             ; preds = %8797
  %8800 = fadd fast float %8795, 5.000000e-01
  %8801 = fptoui float %8800 to i16
  br label %8802

8802:                                             ; preds = %8799, %8797, %8794
  %8803 = phi i16 [ %8801, %8799 ], [ 0, %8794 ], [ -1, %8797 ]
  %8804 = lshr i16 %8803, 4
  %8805 = lshr i16 %8803, 12
  %8806 = select i1 %8775, i16 %8804, i16 %8805
  %8807 = select i1 %8775, i16 %8805, i16 %8804
  %8808 = trunc i16 %8807 to i8
  %8809 = trunc i16 %8806 to i8
  store i8 %8809, ptr %8780, align 1, !alias.scope !590, !noalias !587
  %8810 = getelementptr inbounds i8, ptr %8780, i64 1
  store i8 %8808, ptr %8810, align 1, !alias.scope !590, !noalias !587
  %8811 = getelementptr inbounds i8, ptr %8780, i64 2
  %8812 = getelementptr inbounds %struct._PixelPacket, ptr %8779, i64 1
  %8813 = getelementptr inbounds i8, ptr %8811, i64 %8777
  %8814 = add nuw nsw i64 %8781, 1
  %8815 = icmp eq i64 %8814, %164
  br i1 %8815, label %17787, label %8778, !llvm.loop !670

8816:                                             ; preds = %8875, %8760
  %8817 = phi i64 [ %8764, %8760 ], [ %8871, %8875 ]
  %8818 = phi ptr [ %166, %8760 ], [ %8876, %8875 ]
  %8819 = phi ptr [ %88, %8760 ], [ %8877, %8875 ]
  %8820 = phi i64 [ 0, %8760 ], [ %8878, %8875 ]
  %8821 = getelementptr inbounds %struct._PixelPacket, ptr %8818, i64 0, i32 2
  %8822 = load i16, ptr %8821, align 2, !tbaa !29, !alias.scope !671, !noalias !590
  %8823 = uitofp i16 %8822 to float
  br i1 %8766, label %8833, label %8824

8824:                                             ; preds = %8816
  %8825 = fmul fast float %8823, 0x3FCB384FE0000000
  %8826 = load <2 x i16>, ptr %8818, align 2, !tbaa !37, !alias.scope !671, !noalias !590
  %8827 = uitofp <2 x i16> %8826 to <2 x float>
  %8828 = fmul fast <2 x float> %8827, <float 0x3FB27AC820000000, float 0x3FE6E29300000000>
  %8829 = extractelement <2 x float> %8828, i64 1
  %8830 = fadd fast float %8829, %8825
  %8831 = extractelement <2 x float> %8828, i64 0
  %8832 = fadd fast float %8830, %8831
  br label %8833

8833:                                             ; preds = %8824, %8816
  %8834 = phi float [ %8832, %8824 ], [ %8823, %8816 ]
  %8835 = fcmp fast ugt float %8834, 0.000000e+00
  br i1 %8835, label %8836, label %8841

8836:                                             ; preds = %8833
  %8837 = fcmp fast ult float %8834, 6.553500e+04
  br i1 %8837, label %8838, label %8841

8838:                                             ; preds = %8836
  %8839 = fadd fast float %8834, 5.000000e-01
  %8840 = fptoui float %8839 to i16
  br label %8841

8841:                                             ; preds = %8838, %8836, %8833
  %8842 = phi i16 [ %8840, %8838 ], [ 0, %8833 ], [ -1, %8836 ]
  %8843 = uitofp i16 %8842 to float
  %8844 = fmul fast float %8843, 0x3FAFFE2000000000
  %8845 = fpext float %8844 to double
  %8846 = fadd fast double %8845, 5.000000e-01
  %8847 = fptoui double %8846 to i64
  tail call void @llvm.experimental.noalias.scope.decl(metadata !674)
  %8848 = icmp eq i64 %8817, 0
  %8849 = select i1 %8848, i64 8, i64 %8817
  br label %8850

8850:                                             ; preds = %8841, %8860
  %8851 = phi i64 [ %8871, %8860 ], [ %8849, %8841 ]
  %8852 = phi i64 [ %8856, %8860 ], [ 12, %8841 ]
  %8853 = phi ptr [ %8873, %8860 ], [ %8819, %8841 ]
  %8854 = tail call i64 @llvm.umin.i64(i64 %8852, i64 %8851)
  %8855 = sub nsw i64 %8852, %8854
  %8856 = tail call i64 @llvm.smax.i64(i64 %8855, i64 0)
  %8857 = icmp eq i64 %8851, 8
  br i1 %8857, label %8860, label %8858

8858:                                             ; preds = %8850
  %8859 = load i8, ptr %8853, align 1, !tbaa !48, !alias.scope !675, !noalias !587
  br label %8860

8860:                                             ; preds = %8858, %8850
  %8861 = phi i8 [ %8859, %8858 ], [ 0, %8850 ]
  %8862 = sub i64 %8851, %8854
  %8863 = lshr i64 %8847, %8856
  %8864 = shl nsw i64 -1, %8854
  %8865 = xor i64 %8864, -1
  %8866 = and i64 %8863, %8865
  %8867 = shl i64 %8866, %8862
  %8868 = trunc i64 %8867 to i8
  %8869 = or i8 %8861, %8868
  store i8 %8869, ptr %8853, align 1, !tbaa !48, !alias.scope !675, !noalias !587
  %8870 = icmp ule i64 %8851, %8852
  %8871 = select i1 %8870, i64 8, i64 %8862
  %8872 = zext i1 %8870 to i64
  %8873 = getelementptr inbounds i8, ptr %8853, i64 %8872
  %8874 = icmp slt i64 %8855, 1
  br i1 %8874, label %8875, label %8850, !llvm.loop !75

8875:                                             ; preds = %8860
  %8876 = getelementptr inbounds %struct._PixelPacket, ptr %8818, i64 1
  %8877 = getelementptr inbounds i8, ptr %8873, i64 %8767
  %8878 = add nuw nsw i64 %8820, 1
  %8879 = icmp eq i64 %8878, %164
  br i1 %8879, label %9328, label %8816, !llvm.loop !676

8880:                                             ; preds = %7932
  %8881 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 2
  %8882 = load i32, ptr %8881, align 8, !tbaa !50, !noalias !592
  %8883 = icmp eq i32 %8882, 1
  %8884 = icmp sgt i64 %164, 0
  br i1 %8883, label %8895, label %8885

8885:                                             ; preds = %8880
  br i1 %8884, label %8886, label %17875

8886:                                             ; preds = %8885
  %8887 = getelementptr i8, ptr %0, i64 4
  %8888 = load i32, ptr %8887, align 4, !tbaa !314, !noalias !592
  %8889 = icmp eq i32 %8888, 2
  %8890 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %8891 = load i32, ptr %8890, align 8, !tbaa !51, !noalias !592
  %8892 = icmp eq i32 %8891, 1
  %8893 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %8894 = load i64, ptr %8893, align 8, !tbaa !47, !noalias !592
  br label %8999

8895:                                             ; preds = %8880
  br i1 %8884, label %8896, label %17875

8896:                                             ; preds = %8895
  %8897 = getelementptr i8, ptr %0, i64 4
  %8898 = load i32, ptr %8897, align 4, !tbaa !314, !noalias !592
  %8899 = icmp eq i32 %8898, 2
  %8900 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %8901 = load i32, ptr %8900, align 8, !tbaa !51, !noalias !592
  %8902 = icmp eq i32 %8901, 1
  %8903 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %8904 = load i64, ptr %8903, align 8, !tbaa !47, !noalias !592
  br label %8905

8905:                                             ; preds = %8986, %8896
  %8906 = phi ptr [ %166, %8896 ], [ %8995, %8986 ]
  %8907 = phi ptr [ %88, %8896 ], [ %8996, %8986 ]
  %8908 = phi i64 [ 0, %8896 ], [ %8997, %8986 ]
  %8909 = getelementptr inbounds %struct._PixelPacket, ptr %8906, i64 0, i32 2
  %8910 = load i16, ptr %8909, align 2, !tbaa !29, !alias.scope !677, !noalias !590
  %8911 = uitofp i16 %8910 to float
  br i1 %8899, label %8921, label %8912

8912:                                             ; preds = %8905
  %8913 = fmul fast float %8911, 0x3FCB384FE0000000
  %8914 = load <2 x i16>, ptr %8906, align 2, !tbaa !37, !alias.scope !677, !noalias !590
  %8915 = uitofp <2 x i16> %8914 to <2 x float>
  %8916 = fmul fast <2 x float> %8915, <float 0x3FB27AC820000000, float 0x3FE6E29300000000>
  %8917 = extractelement <2 x float> %8916, i64 1
  %8918 = fadd fast float %8917, %8913
  %8919 = extractelement <2 x float> %8916, i64 0
  %8920 = fadd fast float %8918, %8919
  br label %8921

8921:                                             ; preds = %8912, %8905
  %8922 = phi float [ %8920, %8912 ], [ %8911, %8905 ]
  %8923 = fpext float %8922 to double
  %8924 = fmul fast double %8923, 0x3EF0001000100010
  %8925 = fptrunc double %8924 to float
  %8926 = bitcast float %8925 to i32
  %8927 = lshr i32 %8926, 16
  %8928 = and i32 %8927, 32768
  %8929 = lshr i32 %8926, 23
  %8930 = and i32 %8929, 255
  %8931 = add nsw i32 %8930, -112
  %8932 = and i32 %8926, 8388607
  %8933 = icmp ult i32 %8930, 113
  br i1 %8933, label %8934, label %8951

8934:                                             ; preds = %8921
  %8935 = icmp ult i32 %8930, 102
  br i1 %8935, label %8948, label %8936

8936:                                             ; preds = %8934
  %8937 = or i32 %8932, 8388608
  %8938 = sub nuw nsw i32 126, %8930
  %8939 = sub nuw nsw i32 125, %8930
  %8940 = shl nsw i32 -1, %8939
  %8941 = xor i32 %8940, -1
  %8942 = add nuw nsw i32 %8937, %8941
  %8943 = lshr i32 %8937, %8938
  %8944 = and i32 %8943, 1
  %8945 = add nuw nsw i32 %8942, %8944
  %8946 = lshr i32 %8945, %8938
  %8947 = or i32 %8946, %8928
  br label %8948

8948:                                             ; preds = %8936, %8934
  %8949 = phi i32 [ %8947, %8936 ], [ %8928, %8934 ]
  %8950 = trunc i32 %8949 to i16
  br label %8986

8951:                                             ; preds = %8921
  %8952 = icmp eq i32 %8931, 143
  br i1 %8952, label %8953, label %8966

8953:                                             ; preds = %8951
  %8954 = icmp eq i32 %8932, 0
  br i1 %8954, label %8955, label %8958

8955:                                             ; preds = %8953
  %8956 = trunc i32 %8928 to i16
  %8957 = or i16 %8956, 31744
  br label %8986

8958:                                             ; preds = %8953
  %8959 = lshr i32 %8932, 13
  %8960 = icmp ult i32 %8932, 8192
  %8961 = zext i1 %8960 to i32
  %8962 = or i32 %8959, %8961
  %8963 = or i32 %8962, %8928
  %8964 = trunc i32 %8963 to i16
  %8965 = or i16 %8964, 31744
  br label %8986

8966:                                             ; preds = %8951
  %8967 = lshr i32 %8926, 13
  %8968 = and i32 %8967, 1
  %8969 = add nuw nsw i32 %8932, 4095
  %8970 = add nuw nsw i32 %8969, %8968
  %8971 = and i32 %8970, 8388608
  %8972 = icmp eq i32 %8971, 0
  %8973 = add nsw i32 %8930, -111
  %8974 = select i1 %8972, i32 %8931, i32 %8973
  %8975 = icmp ugt i32 %8974, 30
  br i1 %8975, label %8976, label %8979

8976:                                             ; preds = %8966
  %8977 = trunc i32 %8928 to i16
  %8978 = or i16 %8977, 31744
  br label %8986

8979:                                             ; preds = %8966
  %8980 = lshr i32 %8970, 13
  %8981 = shl nuw nsw i32 %8974, 10
  %8982 = select i1 %8972, i32 %8980, i32 0
  %8983 = or i32 %8982, %8981
  %8984 = or i32 %8983, %8928
  %8985 = trunc i32 %8984 to i16
  br label %8986

8986:                                             ; preds = %8979, %8976, %8958, %8955, %8948
  %8987 = phi i16 [ %8950, %8948 ], [ %8957, %8955 ], [ %8965, %8958 ], [ %8978, %8976 ], [ %8985, %8979 ]
  %8988 = lshr i16 %8987, 8
  %8989 = select i1 %8902, i16 %8987, i16 %8988
  %8990 = select i1 %8902, i16 %8988, i16 %8987
  %8991 = trunc i16 %8990 to i8
  %8992 = trunc i16 %8989 to i8
  store i8 %8992, ptr %8907, align 1, !alias.scope !590, !noalias !587
  %8993 = getelementptr inbounds i8, ptr %8907, i64 1
  store i8 %8991, ptr %8993, align 1, !alias.scope !590, !noalias !587
  %8994 = getelementptr inbounds i8, ptr %8907, i64 2
  %8995 = getelementptr inbounds %struct._PixelPacket, ptr %8906, i64 1
  %8996 = getelementptr inbounds i8, ptr %8994, i64 %8904
  %8997 = add nuw nsw i64 %8908, 1
  %8998 = icmp eq i64 %8997, %164
  br i1 %8998, label %17787, label %8905, !llvm.loop !680

8999:                                             ; preds = %9023, %8886
  %9000 = phi ptr [ %166, %8886 ], [ %9032, %9023 ]
  %9001 = phi ptr [ %88, %8886 ], [ %9033, %9023 ]
  %9002 = phi i64 [ 0, %8886 ], [ %9034, %9023 ]
  %9003 = getelementptr inbounds %struct._PixelPacket, ptr %9000, i64 0, i32 2
  %9004 = load i16, ptr %9003, align 2, !tbaa !29, !alias.scope !681, !noalias !590
  %9005 = uitofp i16 %9004 to float
  br i1 %8889, label %9015, label %9006

9006:                                             ; preds = %8999
  %9007 = fmul fast float %9005, 0x3FCB384FE0000000
  %9008 = load <2 x i16>, ptr %9000, align 2, !tbaa !37, !alias.scope !681, !noalias !590
  %9009 = uitofp <2 x i16> %9008 to <2 x float>
  %9010 = fmul fast <2 x float> %9009, <float 0x3FB27AC820000000, float 0x3FE6E29300000000>
  %9011 = extractelement <2 x float> %9010, i64 1
  %9012 = fadd fast float %9011, %9007
  %9013 = extractelement <2 x float> %9010, i64 0
  %9014 = fadd fast float %9012, %9013
  br label %9015

9015:                                             ; preds = %9006, %8999
  %9016 = phi float [ %9014, %9006 ], [ %9005, %8999 ]
  %9017 = fcmp fast ugt float %9016, 0.000000e+00
  br i1 %9017, label %9018, label %9023

9018:                                             ; preds = %9015
  %9019 = fcmp fast ult float %9016, 6.553500e+04
  br i1 %9019, label %9020, label %9023

9020:                                             ; preds = %9018
  %9021 = fadd fast float %9016, 5.000000e-01
  %9022 = fptoui float %9021 to i16
  br label %9023

9023:                                             ; preds = %9020, %9018, %9015
  %9024 = phi i16 [ %9022, %9020 ], [ 0, %9015 ], [ -1, %9018 ]
  %9025 = lshr i16 %9024, 8
  %9026 = select i1 %8892, i16 %9024, i16 %9025
  %9027 = select i1 %8892, i16 %9025, i16 %9024
  %9028 = trunc i16 %9027 to i8
  %9029 = trunc i16 %9026 to i8
  store i8 %9029, ptr %9001, align 1, !alias.scope !590, !noalias !587
  %9030 = getelementptr inbounds i8, ptr %9001, i64 1
  store i8 %9028, ptr %9030, align 1, !alias.scope !590, !noalias !587
  %9031 = getelementptr inbounds i8, ptr %9001, i64 2
  %9032 = getelementptr inbounds %struct._PixelPacket, ptr %9000, i64 1
  %9033 = getelementptr inbounds i8, ptr %9031, i64 %8894
  %9034 = add nuw nsw i64 %9002, 1
  %9035 = icmp eq i64 %9034, %164
  br i1 %9035, label %17787, label %8999, !llvm.loop !684

9036:                                             ; preds = %7932
  %9037 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 2
  %9038 = load i32, ptr %9037, align 8, !tbaa !50, !noalias !592
  %9039 = icmp eq i32 %9038, 1
  %9040 = icmp sgt i64 %164, 0
  br i1 %9039, label %9051, label %9041

9041:                                             ; preds = %9036
  br i1 %9040, label %9042, label %17875

9042:                                             ; preds = %9041
  %9043 = getelementptr i8, ptr %0, i64 4
  %9044 = load i32, ptr %9043, align 4, !tbaa !314, !noalias !592
  %9045 = icmp eq i32 %9044, 2
  %9046 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %9047 = load i32, ptr %9046, align 8, !tbaa !51, !noalias !592
  %9048 = icmp eq i32 %9047, 1
  %9049 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %9050 = load i64, ptr %9049, align 8, !tbaa !47, !noalias !592
  br label %9110

9051:                                             ; preds = %9036
  br i1 %9040, label %9052, label %17875

9052:                                             ; preds = %9051
  %9053 = getelementptr i8, ptr %0, i64 4
  %9054 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 14
  %9055 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 3
  %9056 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %9057 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  br label %9058

9058:                                             ; preds = %9096, %9052
  %9059 = phi ptr [ %166, %9052 ], [ %9105, %9096 ]
  %9060 = phi ptr [ %88, %9052 ], [ %9107, %9096 ]
  %9061 = phi i64 [ 0, %9052 ], [ %9108, %9096 ]
  %9062 = load i32, ptr %9053, align 4, !tbaa !314, !noalias !592
  %9063 = icmp eq i32 %9062, 2
  %9064 = getelementptr inbounds %struct._PixelPacket, ptr %9059, i64 0, i32 2
  %9065 = load i16, ptr %9064, align 2, !tbaa !29, !alias.scope !685, !noalias !590
  %9066 = uitofp i16 %9065 to float
  br i1 %9063, label %9076, label %9067

9067:                                             ; preds = %9058
  %9068 = fmul fast float %9066, 0x3FCB384FE0000000
  %9069 = load <2 x i16>, ptr %9059, align 2, !tbaa !37, !alias.scope !685, !noalias !590
  %9070 = uitofp <2 x i16> %9069 to <2 x float>
  %9071 = fmul fast <2 x float> %9070, <float 0x3FB27AC820000000, float 0x3FE6E29300000000>
  %9072 = extractelement <2 x float> %9071, i64 1
  %9073 = fadd fast float %9072, %9068
  %9074 = extractelement <2 x float> %9071, i64 0
  %9075 = fadd fast float %9073, %9074
  br label %9076

9076:                                             ; preds = %9067, %9058
  %9077 = phi float [ %9075, %9067 ], [ %9066, %9058 ]
  call void @llvm.experimental.noalias.scope.decl(metadata !688)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %38) #6, !noalias !691
  %9078 = call ptr @ResetMagickMemory(ptr noundef nonnull %38, i32 noundef 0, i64 noundef 4) #6, !noalias !688
  %9079 = fpext float %9077 to double
  %9080 = load double, ptr %9054, align 8, !tbaa !59, !noalias !691
  %9081 = fmul fast double %9080, %9079
  %9082 = load double, ptr %9055, align 8, !tbaa !60, !noalias !691
  %9083 = fadd fast double %9081, %9082
  %9084 = fptrunc double %9083 to float
  %9085 = load i32, ptr %9056, align 8, !tbaa !51, !noalias !691
  %9086 = icmp eq i32 %9085, 1
  %9087 = bitcast float %9084 to i32
  %9088 = lshr i32 %9087, 24
  %9089 = trunc i32 %9088 to i8
  %9090 = lshr i32 %9087, 16
  %9091 = trunc i32 %9090 to i8
  %9092 = lshr i32 %9087, 8
  %9093 = trunc i32 %9092 to i8
  %9094 = trunc i32 %9087 to i8
  br i1 %9086, label %9096, label %9095

9095:                                             ; preds = %9076
  br label %9096

9096:                                             ; preds = %9095, %9076
  %9097 = phi i8 [ %9089, %9095 ], [ %9094, %9076 ]
  %9098 = phi i8 [ %9091, %9095 ], [ %9093, %9076 ]
  %9099 = phi i8 [ %9093, %9095 ], [ %9091, %9076 ]
  %9100 = phi i8 [ %9094, %9095 ], [ %9089, %9076 ]
  store i8 %9097, ptr %9060, align 1, !alias.scope !692, !noalias !587
  %9101 = getelementptr inbounds i8, ptr %9060, i64 1
  store i8 %9098, ptr %9101, align 1, !alias.scope !692, !noalias !587
  %9102 = getelementptr inbounds i8, ptr %9060, i64 2
  store i8 %9099, ptr %9102, align 1, !alias.scope !692, !noalias !587
  %9103 = getelementptr inbounds i8, ptr %9060, i64 3
  store i8 %9100, ptr %9103, align 1, !alias.scope !692, !noalias !587
  %9104 = getelementptr inbounds i8, ptr %9060, i64 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %38) #6, !noalias !691
  %9105 = getelementptr inbounds %struct._PixelPacket, ptr %9059, i64 1
  %9106 = load i64, ptr %9057, align 8, !tbaa !47, !noalias !592
  %9107 = getelementptr inbounds i8, ptr %9104, i64 %9106
  %9108 = add nuw nsw i64 %9061, 1
  %9109 = icmp eq i64 %9108, %164
  br i1 %9109, label %17787, label %9058, !llvm.loop !693

9110:                                             ; preds = %9144, %9042
  %9111 = phi ptr [ %166, %9042 ], [ %9157, %9144 ]
  %9112 = phi ptr [ %88, %9042 ], [ %9158, %9144 ]
  %9113 = phi i64 [ 0, %9042 ], [ %9159, %9144 ]
  %9114 = getelementptr inbounds %struct._PixelPacket, ptr %9111, i64 0, i32 2
  %9115 = load i16, ptr %9114, align 2, !tbaa !29, !alias.scope !694, !noalias !590
  %9116 = uitofp i16 %9115 to float
  br i1 %9045, label %9126, label %9117

9117:                                             ; preds = %9110
  %9118 = fmul fast float %9116, 0x3FCB384FE0000000
  %9119 = load <2 x i16>, ptr %9111, align 2, !tbaa !37, !alias.scope !694, !noalias !590
  %9120 = uitofp <2 x i16> %9119 to <2 x float>
  %9121 = fmul fast <2 x float> %9120, <float 0x3FB27AC820000000, float 0x3FE6E29300000000>
  %9122 = extractelement <2 x float> %9121, i64 1
  %9123 = fadd fast float %9122, %9118
  %9124 = extractelement <2 x float> %9121, i64 0
  %9125 = fadd fast float %9123, %9124
  br label %9126

9126:                                             ; preds = %9117, %9110
  %9127 = phi float [ %9125, %9117 ], [ %9116, %9110 ]
  %9128 = fcmp fast ugt float %9127, 0.000000e+00
  br i1 %9128, label %9129, label %9134

9129:                                             ; preds = %9126
  %9130 = fcmp fast ult float %9127, 6.553500e+04
  br i1 %9130, label %9131, label %9134

9131:                                             ; preds = %9129
  %9132 = fadd fast float %9127, 5.000000e-01
  %9133 = fptoui float %9132 to i16
  br label %9134

9134:                                             ; preds = %9131, %9129, %9126
  %9135 = phi i16 [ %9133, %9131 ], [ 0, %9126 ], [ -1, %9129 ]
  %9136 = zext i16 %9135 to i32
  %9137 = mul nuw i32 %9136, 65537
  br i1 %9048, label %9138, label %9141

9138:                                             ; preds = %9134
  %9139 = lshr i32 %9137, 8
  %9140 = lshr i32 %9137, 24
  br label %9144

9141:                                             ; preds = %9134
  %9142 = lshr i32 %9137, 24
  %9143 = lshr i32 %9137, 8
  br label %9144

9144:                                             ; preds = %9141, %9138
  %9145 = phi i32 [ %9137, %9138 ], [ %9142, %9141 ]
  %9146 = phi i32 [ %9139, %9138 ], [ %9136, %9141 ]
  %9147 = phi i32 [ %9136, %9138 ], [ %9143, %9141 ]
  %9148 = phi i32 [ %9140, %9138 ], [ %9137, %9141 ]
  %9149 = trunc i32 %9148 to i8
  %9150 = trunc i32 %9147 to i8
  %9151 = trunc i32 %9146 to i8
  %9152 = trunc i32 %9145 to i8
  store i8 %9152, ptr %9112, align 1, !alias.scope !590, !noalias !587
  %9153 = getelementptr inbounds i8, ptr %9112, i64 1
  store i8 %9151, ptr %9153, align 1, !alias.scope !590, !noalias !587
  %9154 = getelementptr inbounds i8, ptr %9112, i64 2
  store i8 %9150, ptr %9154, align 1, !alias.scope !590, !noalias !587
  %9155 = getelementptr inbounds i8, ptr %9112, i64 3
  store i8 %9149, ptr %9155, align 1, !alias.scope !590, !noalias !587
  %9156 = getelementptr inbounds i8, ptr %9112, i64 4
  %9157 = getelementptr inbounds %struct._PixelPacket, ptr %9111, i64 1
  %9158 = getelementptr inbounds i8, ptr %9156, i64 %9050
  %9159 = add nuw nsw i64 %9113, 1
  %9160 = icmp eq i64 %9159, %164
  br i1 %9160, label %17787, label %9110, !llvm.loop !697

9161:                                             ; preds = %7932
  %9162 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 2
  %9163 = load i32, ptr %9162, align 8, !tbaa !50, !noalias !592
  %9164 = icmp eq i32 %9163, 1
  br i1 %9164, label %9165, label %9240

9165:                                             ; preds = %9161
  %9166 = icmp sgt i64 %164, 0
  br i1 %9166, label %9167, label %17875

9167:                                             ; preds = %9165
  %9168 = getelementptr i8, ptr %0, i64 4
  %9169 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 14
  %9170 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 3
  %9171 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %9172 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  br label %9173

9173:                                             ; preds = %9218, %9167
  %9174 = phi ptr [ %166, %9167 ], [ %9235, %9218 ]
  %9175 = phi ptr [ %88, %9167 ], [ %9237, %9218 ]
  %9176 = phi i64 [ 0, %9167 ], [ %9238, %9218 ]
  %9177 = load i32, ptr %9168, align 4, !tbaa !314, !noalias !592
  %9178 = icmp eq i32 %9177, 2
  %9179 = getelementptr inbounds %struct._PixelPacket, ptr %9174, i64 0, i32 2
  %9180 = load i16, ptr %9179, align 2, !tbaa !29, !alias.scope !698, !noalias !590
  %9181 = uitofp i16 %9180 to float
  br i1 %9178, label %9191, label %9182

9182:                                             ; preds = %9173
  %9183 = fmul fast float %9181, 0x3FCB384FE0000000
  %9184 = load <2 x i16>, ptr %9174, align 2, !tbaa !37, !alias.scope !698, !noalias !590
  %9185 = uitofp <2 x i16> %9184 to <2 x float>
  %9186 = fmul fast <2 x float> %9185, <float 0x3FB27AC820000000, float 0x3FE6E29300000000>
  %9187 = extractelement <2 x float> %9186, i64 1
  %9188 = fadd fast float %9187, %9183
  %9189 = extractelement <2 x float> %9186, i64 0
  %9190 = fadd fast float %9188, %9189
  br label %9191

9191:                                             ; preds = %9182, %9173
  %9192 = phi float [ %9190, %9182 ], [ %9181, %9173 ]
  %9193 = fpext float %9192 to double
  call void @llvm.experimental.noalias.scope.decl(metadata !701)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %37) #6, !noalias !704
  %9194 = call ptr @ResetMagickMemory(ptr noundef nonnull %37, i32 noundef 0, i64 noundef 8) #6, !noalias !701
  %9195 = load double, ptr %9169, align 8, !tbaa !59, !noalias !704
  %9196 = fmul fast double %9195, %9193
  %9197 = load double, ptr %9170, align 8, !tbaa !60, !noalias !704
  %9198 = fadd fast double %9196, %9197
  %9199 = load i32, ptr %9171, align 8, !tbaa !51, !noalias !704
  %9200 = icmp eq i32 %9199, 1
  %9201 = bitcast double %9198 to i64
  %9202 = lshr i64 %9201, 56
  %9203 = trunc i64 %9202 to i8
  %9204 = lshr i64 %9201, 48
  %9205 = trunc i64 %9204 to i8
  %9206 = lshr i64 %9201, 40
  %9207 = trunc i64 %9206 to i8
  %9208 = lshr i64 %9201, 32
  %9209 = trunc i64 %9208 to i8
  %9210 = lshr i64 %9201, 24
  %9211 = trunc i64 %9210 to i8
  %9212 = lshr i64 %9201, 16
  %9213 = trunc i64 %9212 to i8
  %9214 = lshr i64 %9201, 8
  %9215 = trunc i64 %9214 to i8
  %9216 = trunc i64 %9201 to i8
  br i1 %9200, label %9218, label %9217

9217:                                             ; preds = %9191
  br label %9218

9218:                                             ; preds = %9217, %9191
  %9219 = phi i8 [ %9203, %9217 ], [ %9216, %9191 ]
  %9220 = phi i8 [ %9205, %9217 ], [ %9215, %9191 ]
  %9221 = phi i8 [ %9207, %9217 ], [ %9213, %9191 ]
  %9222 = phi i8 [ %9209, %9217 ], [ %9211, %9191 ]
  %9223 = phi i8 [ %9211, %9217 ], [ %9209, %9191 ]
  %9224 = phi i8 [ %9213, %9217 ], [ %9207, %9191 ]
  %9225 = phi i8 [ %9215, %9217 ], [ %9205, %9191 ]
  %9226 = phi i8 [ %9216, %9217 ], [ %9203, %9191 ]
  store i8 %9219, ptr %9175, align 1, !alias.scope !705, !noalias !587
  %9227 = getelementptr inbounds i8, ptr %9175, i64 1
  store i8 %9220, ptr %9227, align 1, !alias.scope !705, !noalias !587
  %9228 = getelementptr inbounds i8, ptr %9175, i64 2
  store i8 %9221, ptr %9228, align 1, !alias.scope !705, !noalias !587
  %9229 = getelementptr inbounds i8, ptr %9175, i64 3
  store i8 %9222, ptr %9229, align 1, !alias.scope !705, !noalias !587
  %9230 = getelementptr inbounds i8, ptr %9175, i64 4
  store i8 %9223, ptr %9230, align 1, !alias.scope !705, !noalias !587
  %9231 = getelementptr inbounds i8, ptr %9175, i64 5
  store i8 %9224, ptr %9231, align 1, !alias.scope !705, !noalias !587
  %9232 = getelementptr inbounds i8, ptr %9175, i64 6
  store i8 %9225, ptr %9232, align 1, !alias.scope !705, !noalias !587
  %9233 = getelementptr inbounds i8, ptr %9175, i64 7
  store i8 %9226, ptr %9233, align 1, !alias.scope !705, !noalias !587
  %9234 = getelementptr inbounds i8, ptr %9175, i64 8
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %37) #6, !noalias !704
  %9235 = getelementptr inbounds %struct._PixelPacket, ptr %9174, i64 1
  %9236 = load i64, ptr %9172, align 8, !tbaa !47, !noalias !592
  %9237 = getelementptr inbounds i8, ptr %9234, i64 %9236
  %9238 = add nuw nsw i64 %9176, 1
  %9239 = icmp eq i64 %9238, %164
  br i1 %9239, label %17787, label %9173, !llvm.loop !706

9240:                                             ; preds = %9161, %7932
  %9241 = icmp sgt i64 %164, 0
  br i1 %9241, label %9242, label %17875

9242:                                             ; preds = %9240
  %9243 = add i64 %7933, -1
  %9244 = shl i64 2, %9243
  %9245 = add i64 %9244, -1
  %9246 = getelementptr i8, ptr %0, i64 4
  %9247 = uitofp i64 %9245 to float
  %9248 = fmul fast float %9247, 0x3EF0001000000000
  %9249 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 14, i32 2
  %9250 = icmp sgt i64 %7933, 0
  %9251 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %9252 = load i64, ptr %9249, align 8, !tbaa !69, !noalias !707
  %9253 = load i32, ptr %9246, align 4, !tbaa !314, !noalias !592
  %9254 = icmp eq i32 %9253, 2
  %9255 = load i64, ptr %9251, align 8, !tbaa !47, !noalias !592
  br label %9256

9256:                                             ; preds = %9318, %9242
  %9257 = phi i64 [ %9252, %9242 ], [ %9319, %9318 ]
  %9258 = phi ptr [ %166, %9242 ], [ %9321, %9318 ]
  %9259 = phi ptr [ %88, %9242 ], [ %9322, %9318 ]
  %9260 = phi i64 [ 0, %9242 ], [ %9323, %9318 ]
  %9261 = getelementptr inbounds %struct._PixelPacket, ptr %9258, i64 0, i32 2
  %9262 = load i16, ptr %9261, align 2, !tbaa !29, !alias.scope !710, !noalias !590
  %9263 = uitofp i16 %9262 to float
  br i1 %9254, label %9273, label %9264

9264:                                             ; preds = %9256
  %9265 = fmul fast float %9263, 0x3FCB384FE0000000
  %9266 = load <2 x i16>, ptr %9258, align 2, !tbaa !37, !alias.scope !710, !noalias !590
  %9267 = uitofp <2 x i16> %9266 to <2 x float>
  %9268 = fmul fast <2 x float> %9267, <float 0x3FB27AC820000000, float 0x3FE6E29300000000>
  %9269 = extractelement <2 x float> %9268, i64 1
  %9270 = fadd fast float %9269, %9265
  %9271 = extractelement <2 x float> %9268, i64 0
  %9272 = fadd fast float %9270, %9271
  br label %9273

9273:                                             ; preds = %9264, %9256
  %9274 = phi float [ %9272, %9264 ], [ %9263, %9256 ]
  %9275 = fcmp fast ugt float %9274, 0.000000e+00
  br i1 %9275, label %9276, label %9281

9276:                                             ; preds = %9273
  %9277 = fcmp fast ult float %9274, 6.553500e+04
  br i1 %9277, label %9278, label %9281

9278:                                             ; preds = %9276
  %9279 = fadd fast float %9274, 5.000000e-01
  %9280 = fptoui float %9279 to i16
  br label %9281

9281:                                             ; preds = %9278, %9276, %9273
  %9282 = phi i16 [ %9280, %9278 ], [ 0, %9273 ], [ -1, %9276 ]
  %9283 = uitofp i16 %9282 to float
  %9284 = fmul fast float %9248, %9283
  %9285 = fpext float %9284 to double
  %9286 = fadd fast double %9285, 5.000000e-01
  %9287 = fptoui double %9286 to i64
  tail call void @llvm.experimental.noalias.scope.decl(metadata !713)
  %9288 = icmp eq i64 %9257, 0
  br i1 %9288, label %9289, label %9290

9289:                                             ; preds = %9281
  store i64 8, ptr %9249, align 8, !tbaa !69, !noalias !707
  br label %9290

9290:                                             ; preds = %9289, %9281
  %9291 = phi i64 [ 8, %9289 ], [ %9257, %9281 ]
  br i1 %9250, label %9292, label %9318

9292:                                             ; preds = %9290, %9302
  %9293 = phi i64 [ %9313, %9302 ], [ %9291, %9290 ]
  %9294 = phi i64 [ %9298, %9302 ], [ %7933, %9290 ]
  %9295 = phi ptr [ %9315, %9302 ], [ %9259, %9290 ]
  %9296 = tail call i64 @llvm.umin.i64(i64 %9294, i64 %9293)
  %9297 = sub nsw i64 %9294, %9296
  %9298 = tail call i64 @llvm.smax.i64(i64 %9297, i64 0)
  %9299 = icmp eq i64 %9293, 8
  br i1 %9299, label %9302, label %9300

9300:                                             ; preds = %9292
  %9301 = load i8, ptr %9295, align 1, !tbaa !48, !alias.scope !714, !noalias !587
  br label %9302

9302:                                             ; preds = %9300, %9292
  %9303 = phi i8 [ %9301, %9300 ], [ 0, %9292 ]
  %9304 = sub i64 %9293, %9296
  %9305 = lshr i64 %9287, %9298
  %9306 = shl nsw i64 -1, %9296
  %9307 = xor i64 %9306, -1
  %9308 = and i64 %9305, %9307
  %9309 = shl i64 %9308, %9304
  %9310 = trunc i64 %9309 to i8
  %9311 = or i8 %9303, %9310
  store i8 %9311, ptr %9295, align 1, !tbaa !48, !alias.scope !714, !noalias !587
  %9312 = icmp ule i64 %9293, %9294
  %9313 = select i1 %9312, i64 8, i64 %9304
  %9314 = zext i1 %9312 to i64
  %9315 = getelementptr inbounds i8, ptr %9295, i64 %9314
  %9316 = icmp slt i64 %9297, 1
  br i1 %9316, label %9317, label %9292, !llvm.loop !75

9317:                                             ; preds = %9302
  store i64 %9313, ptr %9249, align 8, !tbaa !69, !noalias !707
  br label %9318

9318:                                             ; preds = %9317, %9290
  %9319 = phi i64 [ %9291, %9290 ], [ %9313, %9317 ]
  %9320 = phi ptr [ %9259, %9290 ], [ %9315, %9317 ]
  %9321 = getelementptr inbounds %struct._PixelPacket, ptr %9258, i64 1
  %9322 = getelementptr inbounds i8, ptr %9320, i64 %9255
  %9323 = add nuw nsw i64 %9260, 1
  %9324 = icmp eq i64 %9323, %164
  br i1 %9324, label %17787, label %9256, !llvm.loop !715

9325:                                             ; preds = %8295, %8273, %8251, %8229, %8207, %8185, %8164
  %9326 = phi i8 [ %8169, %8164 ], [ %8191, %8185 ], [ %8213, %8207 ], [ %8235, %8229 ], [ %8257, %8251 ], [ %8279, %8273 ], [ %8301, %8295 ]
  store i8 %9326, ptr %8144, align 1, !tbaa !48, !alias.scope !590, !noalias !587
  br label %17787

9327:                                             ; preds = %8749
  store i64 %8745, ptr %8453, align 8, !tbaa !69, !noalias !639
  br label %17787

9328:                                             ; preds = %8875
  store i64 %8871, ptr %8762, align 8, !tbaa !69, !noalias !664
  br label %17787

9329:                                             ; preds = %256
  tail call void @llvm.experimental.noalias.scope.decl(metadata !716)
  tail call void @llvm.experimental.noalias.scope.decl(metadata !719)
  %9330 = load i64, ptr %2, align 8, !tbaa !45, !noalias !721
  switch i64 %9330, label %10155 [
    i64 1, label %9345
    i64 4, label %9339
    i64 8, label %9331
    i64 16, label %9611
    i64 32, label %9852
    i64 64, label %10031
  ]

9331:                                             ; preds = %9329
  %9332 = icmp sgt i64 %164, 0
  br i1 %9332, label %9333, label %17875

9333:                                             ; preds = %9331
  %9334 = getelementptr i8, ptr %0, i64 4
  %9335 = load i32, ptr %9334, align 4, !tbaa !314, !noalias !721
  %9336 = icmp eq i32 %9335, 2
  %9337 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %9338 = load i64, ptr %9337, align 8, !tbaa !47, !noalias !721
  br label %9569

9339:                                             ; preds = %9329
  %9340 = icmp sgt i64 %164, 0
  br i1 %9340, label %9341, label %17875

9341:                                             ; preds = %9339
  %9342 = getelementptr i8, ptr %0, i64 4
  %9343 = load i32, ptr %9342, align 4, !tbaa !314, !noalias !721
  %9344 = icmp eq i32 %9343, 2
  br label %9523

9345:                                             ; preds = %9329
  %9346 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 7
  %9347 = load i32, ptr %9346, align 8, !tbaa !593, !noalias !721
  %9348 = icmp ne i32 %9347, 0
  %9349 = zext i1 %9348 to i32
  %9350 = xor i1 %9348, true
  %9351 = zext i1 %9350 to i32
  %9352 = icmp sgt i64 %164, 3
  br i1 %9352, label %9353, label %9464

9353:                                             ; preds = %9345
  %9354 = add nsw i64 %164, -3
  %9355 = getelementptr i8, ptr %0, i64 4
  %9356 = load i32, ptr %9355, align 4, !tbaa !314, !noalias !721
  %9357 = icmp eq i32 %9356, 2
  br label %9358

9358:                                             ; preds = %9448, %9353
  %9359 = phi ptr [ %166, %9353 ], [ %9460, %9448 ]
  %9360 = phi ptr [ %88, %9353 ], [ %9461, %9448 ]
  %9361 = phi i64 [ %9354, %9353 ], [ %9462, %9448 ]
  %9362 = getelementptr inbounds %struct._PixelPacket, ptr %9359, i64 0, i32 2
  %9363 = load i16, ptr %9362, align 2, !tbaa !29, !alias.scope !722, !noalias !719
  %9364 = uitofp i16 %9363 to float
  br i1 %9357, label %9374, label %9365

9365:                                             ; preds = %9358
  %9366 = fmul fast float %9364, 0x3FCB384FE0000000
  %9367 = load <2 x i16>, ptr %9359, align 2, !tbaa !37, !alias.scope !722, !noalias !719
  %9368 = uitofp <2 x i16> %9367 to <2 x float>
  %9369 = fmul fast <2 x float> %9368, <float 0x3FB27AC820000000, float 0x3FE6E29300000000>
  %9370 = extractelement <2 x float> %9369, i64 1
  %9371 = fadd fast float %9370, %9366
  %9372 = extractelement <2 x float> %9369, i64 0
  %9373 = fadd fast float %9371, %9372
  br label %9374

9374:                                             ; preds = %9365, %9358
  %9375 = phi float [ %9373, %9365 ], [ %9364, %9358 ]
  %9376 = fcmp fast ogt float %9375, 3.276750e+04
  %9377 = select i1 %9376, i32 %9351, i32 %9349
  %9378 = trunc i32 %9377 to i8
  %9379 = shl nuw i8 %9378, 7
  %9380 = getelementptr inbounds %struct._PixelPacket, ptr %9359, i64 0, i32 3
  %9381 = load i16, ptr %9380, align 2, !tbaa !28, !alias.scope !716, !noalias !719
  %9382 = icmp eq i16 %9381, 0
  %9383 = select i1 %9382, i8 64, i8 0
  %9384 = or i8 %9379, %9383
  %9385 = getelementptr inbounds %struct._PixelPacket, ptr %9359, i64 1, i32 2
  %9386 = load i16, ptr %9385, align 2, !tbaa !29, !alias.scope !725, !noalias !719
  %9387 = uitofp i16 %9386 to float
  br i1 %9357, label %9398, label %9388

9388:                                             ; preds = %9374
  %9389 = getelementptr inbounds %struct._PixelPacket, ptr %9359, i64 1
  %9390 = fmul fast float %9387, 0x3FCB384FE0000000
  %9391 = load <2 x i16>, ptr %9389, align 2, !tbaa !37, !alias.scope !725, !noalias !719
  %9392 = uitofp <2 x i16> %9391 to <2 x float>
  %9393 = fmul fast <2 x float> %9392, <float 0x3FB27AC820000000, float 0x3FE6E29300000000>
  %9394 = extractelement <2 x float> %9393, i64 1
  %9395 = fadd fast float %9394, %9390
  %9396 = extractelement <2 x float> %9393, i64 0
  %9397 = fadd fast float %9395, %9396
  br label %9398

9398:                                             ; preds = %9388, %9374
  %9399 = phi float [ %9397, %9388 ], [ %9387, %9374 ]
  %9400 = fcmp fast ogt float %9399, 3.276750e+04
  %9401 = select i1 %9400, i32 %9351, i32 %9349
  %9402 = trunc i32 %9401 to i8
  %9403 = shl nuw nsw i8 %9402, 5
  %9404 = or i8 %9403, %9384
  %9405 = getelementptr inbounds %struct._PixelPacket, ptr %9359, i64 1, i32 3
  %9406 = load i16, ptr %9405, align 2, !tbaa !28, !alias.scope !716, !noalias !719
  %9407 = icmp eq i16 %9406, 0
  %9408 = select i1 %9407, i8 16, i8 0
  %9409 = or i8 %9404, %9408
  %9410 = getelementptr inbounds %struct._PixelPacket, ptr %9359, i64 2, i32 2
  %9411 = load i16, ptr %9410, align 2, !tbaa !29, !alias.scope !728, !noalias !719
  %9412 = uitofp i16 %9411 to float
  br i1 %9357, label %9423, label %9413

9413:                                             ; preds = %9398
  %9414 = getelementptr inbounds %struct._PixelPacket, ptr %9359, i64 2
  %9415 = fmul fast float %9412, 0x3FCB384FE0000000
  %9416 = load <2 x i16>, ptr %9414, align 2, !tbaa !37, !alias.scope !728, !noalias !719
  %9417 = uitofp <2 x i16> %9416 to <2 x float>
  %9418 = fmul fast <2 x float> %9417, <float 0x3FB27AC820000000, float 0x3FE6E29300000000>
  %9419 = extractelement <2 x float> %9418, i64 1
  %9420 = fadd fast float %9419, %9415
  %9421 = extractelement <2 x float> %9418, i64 0
  %9422 = fadd fast float %9420, %9421
  br label %9423

9423:                                             ; preds = %9413, %9398
  %9424 = phi float [ %9422, %9413 ], [ %9412, %9398 ]
  %9425 = fcmp fast ogt float %9424, 3.276750e+04
  %9426 = select i1 %9425, i32 %9351, i32 %9349
  %9427 = trunc i32 %9426 to i8
  %9428 = shl nuw nsw i8 %9427, 3
  %9429 = or i8 %9428, %9409
  %9430 = getelementptr inbounds %struct._PixelPacket, ptr %9359, i64 2, i32 3
  %9431 = load i16, ptr %9430, align 2, !tbaa !28, !alias.scope !716, !noalias !719
  %9432 = icmp eq i16 %9431, 0
  %9433 = select i1 %9432, i8 4, i8 0
  %9434 = or i8 %9429, %9433
  %9435 = getelementptr inbounds %struct._PixelPacket, ptr %9359, i64 3, i32 2
  %9436 = load i16, ptr %9435, align 2, !tbaa !29, !alias.scope !731, !noalias !719
  %9437 = uitofp i16 %9436 to float
  br i1 %9357, label %9448, label %9438

9438:                                             ; preds = %9423
  %9439 = getelementptr inbounds %struct._PixelPacket, ptr %9359, i64 3
  %9440 = fmul fast float %9437, 0x3FCB384FE0000000
  %9441 = load <2 x i16>, ptr %9439, align 2, !tbaa !37, !alias.scope !731, !noalias !719
  %9442 = uitofp <2 x i16> %9441 to <2 x float>
  %9443 = fmul fast <2 x float> %9442, <float 0x3FB27AC820000000, float 0x3FE6E29300000000>
  %9444 = extractelement <2 x float> %9443, i64 1
  %9445 = fadd fast float %9444, %9440
  %9446 = extractelement <2 x float> %9443, i64 0
  %9447 = fadd fast float %9445, %9446
  br label %9448

9448:                                             ; preds = %9438, %9423
  %9449 = phi float [ %9447, %9438 ], [ %9437, %9423 ]
  %9450 = fcmp fast ogt float %9449, 3.276750e+04
  %9451 = select i1 %9450, i32 %9351, i32 %9349
  %9452 = trunc i32 %9451 to i8
  %9453 = shl nuw nsw i8 %9452, 1
  %9454 = or i8 %9453, %9434
  %9455 = getelementptr inbounds %struct._PixelPacket, ptr %9359, i64 3, i32 3
  %9456 = load i16, ptr %9455, align 2, !tbaa !28, !alias.scope !716, !noalias !719
  %9457 = icmp eq i16 %9456, 0
  %9458 = zext i1 %9457 to i8
  %9459 = or i8 %9454, %9458
  store i8 %9459, ptr %9360, align 1, !tbaa !48, !alias.scope !719, !noalias !716
  %9460 = getelementptr inbounds %struct._PixelPacket, ptr %9359, i64 4
  %9461 = getelementptr inbounds i8, ptr %9360, i64 1
  %9462 = add nsw i64 %9361, -4
  %9463 = icmp sgt i64 %9361, 4
  br i1 %9463, label %9358, label %9464, !llvm.loop !734

9464:                                             ; preds = %9448, %9345
  %9465 = phi ptr [ %88, %9345 ], [ %9461, %9448 ]
  %9466 = phi ptr [ %166, %9345 ], [ %9460, %9448 ]
  %9467 = and i64 %164, 3
  %9468 = icmp eq i64 %9467, 0
  br i1 %9468, label %17787, label %9469

9469:                                             ; preds = %9464
  %9470 = getelementptr i8, ptr %0, i64 4
  %9471 = load i32, ptr %9470, align 4, !tbaa !314, !noalias !721
  %9472 = icmp eq i32 %9471, 2
  %9473 = getelementptr inbounds %struct._PixelPacket, ptr %9466, i64 0, i32 2
  %9474 = load i16, ptr %9473, align 2, !tbaa !29, !alias.scope !735, !noalias !719
  %9475 = uitofp i16 %9474 to float
  br i1 %9472, label %9485, label %9476

9476:                                             ; preds = %9469
  %9477 = fmul fast float %9475, 0x3FCB384FE0000000
  %9478 = load <2 x i16>, ptr %9466, align 2, !tbaa !37, !alias.scope !735, !noalias !719
  %9479 = uitofp <2 x i16> %9478 to <2 x float>
  %9480 = fmul fast <2 x float> %9479, <float 0x3FB27AC820000000, float 0x3FE6E29300000000>
  %9481 = extractelement <2 x float> %9480, i64 1
  %9482 = fadd fast float %9481, %9477
  %9483 = extractelement <2 x float> %9480, i64 0
  %9484 = fadd fast float %9482, %9483
  br label %9485

9485:                                             ; preds = %9476, %9469
  %9486 = phi float [ %9484, %9476 ], [ %9475, %9469 ]
  %9487 = fcmp fast ogt float %9486, 3.276750e+04
  %9488 = select i1 %9487, i32 %9351, i32 %9349
  %9489 = trunc i32 %9488 to i8
  %9490 = shl nuw i8 %9489, 7
  %9491 = getelementptr inbounds %struct._PixelPacket, ptr %9466, i64 0, i32 3
  %9492 = load i16, ptr %9491, align 2, !tbaa !28, !alias.scope !716, !noalias !719
  %9493 = icmp eq i16 %9492, 0
  %9494 = select i1 %9493, i8 64, i8 0
  %9495 = or i8 %9490, %9494
  %9496 = getelementptr inbounds %struct._PixelPacket, ptr %9466, i64 1
  %9497 = icmp ult i64 %9467, 2
  br i1 %9497, label %10279, label %9498, !llvm.loop !738

9498:                                             ; preds = %9485
  %9499 = getelementptr inbounds %struct._PixelPacket, ptr %9466, i64 1, i32 2
  %9500 = load i16, ptr %9499, align 2, !tbaa !29, !alias.scope !735, !noalias !719
  %9501 = uitofp i16 %9500 to float
  br i1 %9472, label %9511, label %9502

9502:                                             ; preds = %9498
  %9503 = fmul fast float %9501, 0x3FCB384FE0000000
  %9504 = load <2 x i16>, ptr %9496, align 2, !tbaa !37, !alias.scope !735, !noalias !719
  %9505 = uitofp <2 x i16> %9504 to <2 x float>
  %9506 = fmul fast <2 x float> %9505, <float 0x3FB27AC820000000, float 0x3FE6E29300000000>
  %9507 = extractelement <2 x float> %9506, i64 1
  %9508 = fadd fast float %9507, %9503
  %9509 = extractelement <2 x float> %9506, i64 0
  %9510 = fadd fast float %9508, %9509
  br label %9511

9511:                                             ; preds = %9502, %9498
  %9512 = phi float [ %9510, %9502 ], [ %9501, %9498 ]
  %9513 = fcmp fast ogt float %9512, 3.276750e+04
  %9514 = select i1 %9513, i32 %9351, i32 %9349
  %9515 = trunc i32 %9514 to i8
  %9516 = shl nuw nsw i8 %9515, 5
  %9517 = getelementptr inbounds %struct._PixelPacket, ptr %9466, i64 1, i32 3
  %9518 = load i16, ptr %9517, align 2, !tbaa !28, !alias.scope !716, !noalias !719
  %9519 = icmp eq i16 %9518, 0
  %9520 = select i1 %9519, i8 16, i8 0
  %9521 = or i8 %9516, %9520
  %9522 = or i8 %9521, %9495
  br label %10279

9523:                                             ; preds = %9547, %9341
  %9524 = phi ptr [ %166, %9341 ], [ %9565, %9547 ]
  %9525 = phi ptr [ %88, %9341 ], [ %9566, %9547 ]
  %9526 = phi i64 [ 0, %9341 ], [ %9567, %9547 ]
  %9527 = getelementptr inbounds %struct._PixelPacket, ptr %9524, i64 0, i32 2
  %9528 = load i16, ptr %9527, align 2, !tbaa !29, !alias.scope !739, !noalias !719
  %9529 = uitofp i16 %9528 to float
  br i1 %9344, label %9539, label %9530

9530:                                             ; preds = %9523
  %9531 = fmul fast float %9529, 0x3FCB384FE0000000
  %9532 = load <2 x i16>, ptr %9524, align 2, !tbaa !37, !alias.scope !739, !noalias !719
  %9533 = uitofp <2 x i16> %9532 to <2 x float>
  %9534 = fmul fast <2 x float> %9533, <float 0x3FB27AC820000000, float 0x3FE6E29300000000>
  %9535 = extractelement <2 x float> %9534, i64 1
  %9536 = fadd fast float %9535, %9531
  %9537 = extractelement <2 x float> %9534, i64 0
  %9538 = fadd fast float %9536, %9537
  br label %9539

9539:                                             ; preds = %9530, %9523
  %9540 = phi float [ %9538, %9530 ], [ %9529, %9523 ]
  %9541 = fcmp fast ugt float %9540, 0.000000e+00
  br i1 %9541, label %9542, label %9547

9542:                                             ; preds = %9539
  %9543 = fcmp fast ult float %9540, 6.553500e+04
  br i1 %9543, label %9544, label %9547

9544:                                             ; preds = %9542
  %9545 = fadd fast float %9540, 5.000000e-01
  %9546 = fptoui float %9545 to i16
  br label %9547

9547:                                             ; preds = %9544, %9542, %9539
  %9548 = phi i16 [ %9546, %9544 ], [ 0, %9539 ], [ -1, %9542 ]
  %9549 = zext i16 %9548 to i64
  %9550 = add nuw nsw i64 %9549, 128
  %9551 = lshr i64 %9550, 8
  %9552 = sub nsw i64 %9550, %9551
  %9553 = lshr i64 %9552, 8
  %9554 = trunc i64 %9553 to i8
  %9555 = and i8 %9554, -16
  %9556 = getelementptr inbounds %struct._PixelPacket, ptr %9524, i64 0, i32 3
  %9557 = load i16, ptr %9556, align 2, !tbaa !28, !alias.scope !716, !noalias !719
  %9558 = xor i16 %9557, -1
  %9559 = uitofp i16 %9558 to double
  %9560 = fmul fast double %9559, 0x3F30001000100010
  %9561 = fadd fast double %9560, 5.000000e-01
  %9562 = fptoui double %9561 to i8
  %9563 = and i8 %9562, 15
  %9564 = or i8 %9555, %9563
  store i8 %9564, ptr %9525, align 1, !tbaa !48, !alias.scope !719, !noalias !716
  %9565 = getelementptr inbounds %struct._PixelPacket, ptr %9524, i64 1
  %9566 = getelementptr inbounds i8, ptr %9525, i64 1
  %9567 = add nuw nsw i64 %9526, 1
  %9568 = icmp eq i64 %9567, %164
  br i1 %9568, label %17787, label %9523, !llvm.loop !742

9569:                                             ; preds = %9593, %9333
  %9570 = phi ptr [ %166, %9333 ], [ %9607, %9593 ]
  %9571 = phi ptr [ %88, %9333 ], [ %9608, %9593 ]
  %9572 = phi i64 [ 0, %9333 ], [ %9609, %9593 ]
  %9573 = getelementptr inbounds %struct._PixelPacket, ptr %9570, i64 0, i32 2
  %9574 = load i16, ptr %9573, align 2, !tbaa !29, !alias.scope !743, !noalias !719
  %9575 = uitofp i16 %9574 to float
  br i1 %9336, label %9585, label %9576

9576:                                             ; preds = %9569
  %9577 = fmul fast float %9575, 0x3FCB384FE0000000
  %9578 = load <2 x i16>, ptr %9570, align 2, !tbaa !37, !alias.scope !743, !noalias !719
  %9579 = uitofp <2 x i16> %9578 to <2 x float>
  %9580 = fmul fast <2 x float> %9579, <float 0x3FB27AC820000000, float 0x3FE6E29300000000>
  %9581 = extractelement <2 x float> %9580, i64 1
  %9582 = fadd fast float %9581, %9577
  %9583 = extractelement <2 x float> %9580, i64 0
  %9584 = fadd fast float %9582, %9583
  br label %9585

9585:                                             ; preds = %9576, %9569
  %9586 = phi float [ %9584, %9576 ], [ %9575, %9569 ]
  %9587 = fcmp fast ugt float %9586, 0.000000e+00
  br i1 %9587, label %9588, label %9593

9588:                                             ; preds = %9585
  %9589 = fcmp fast ult float %9586, 6.553500e+04
  br i1 %9589, label %9590, label %9593

9590:                                             ; preds = %9588
  %9591 = fadd fast float %9586, 5.000000e-01
  %9592 = fptoui float %9591 to i16
  br label %9593

9593:                                             ; preds = %9590, %9588, %9585
  %9594 = phi i16 [ %9592, %9590 ], [ 0, %9585 ], [ -1, %9588 ]
  %9595 = getelementptr inbounds %struct._PixelPacket, ptr %9570, i64 0, i32 3
  %9596 = load i16, ptr %9595, align 2, !tbaa !28, !alias.scope !716, !noalias !719
  %9597 = xor i16 %9596, -1
  %9598 = getelementptr inbounds i8, ptr %9571, i64 2
  %9599 = insertelement <2 x i16> poison, i16 %9594, i64 0
  %9600 = insertelement <2 x i16> %9599, i16 %9597, i64 1
  %9601 = zext <2 x i16> %9600 to <2 x i64>
  %9602 = add nuw nsw <2 x i64> %9601, <i64 128, i64 128>
  %9603 = lshr <2 x i64> %9602, <i64 8, i64 8>
  %9604 = sub nsw <2 x i64> %9602, %9603
  %9605 = lshr <2 x i64> %9604, <i64 8, i64 8>
  %9606 = trunc <2 x i64> %9605 to <2 x i8>
  store <2 x i8> %9606, ptr %9571, align 1, !tbaa !48, !alias.scope !719, !noalias !716
  %9607 = getelementptr inbounds %struct._PixelPacket, ptr %9570, i64 1
  %9608 = getelementptr inbounds i8, ptr %9598, i64 %9338
  %9609 = add nuw nsw i64 %9572, 1
  %9610 = icmp eq i64 %9609, %164
  br i1 %9610, label %17787, label %9569, !llvm.loop !746

9611:                                             ; preds = %9329
  %9612 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 2
  %9613 = load i32, ptr %9612, align 8, !tbaa !50, !noalias !721
  %9614 = icmp eq i32 %9613, 1
  %9615 = icmp sgt i64 %164, 0
  br i1 %9614, label %9626, label %9616

9616:                                             ; preds = %9611
  br i1 %9615, label %9617, label %17875

9617:                                             ; preds = %9616
  %9618 = getelementptr i8, ptr %0, i64 4
  %9619 = load i32, ptr %9618, align 4, !tbaa !314, !noalias !721
  %9620 = icmp eq i32 %9619, 2
  %9621 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %9622 = load i32, ptr %9621, align 8, !tbaa !51, !noalias !721
  %9623 = icmp eq i32 %9622, 1
  %9624 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %9625 = load i64, ptr %9624, align 8, !tbaa !47, !noalias !721
  br label %9805

9626:                                             ; preds = %9611
  br i1 %9615, label %9627, label %17875

9627:                                             ; preds = %9626
  %9628 = getelementptr i8, ptr %0, i64 4
  %9629 = load i32, ptr %9628, align 4, !tbaa !314, !noalias !721
  %9630 = icmp eq i32 %9629, 2
  %9631 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %9632 = load i32, ptr %9631, align 8, !tbaa !51, !noalias !721
  %9633 = icmp eq i32 %9632, 1
  %9634 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %9635 = load i64, ptr %9634, align 8, !tbaa !47, !noalias !721
  br label %9636

9636:                                             ; preds = %9792, %9627
  %9637 = phi ptr [ %166, %9627 ], [ %9801, %9792 ]
  %9638 = phi ptr [ %88, %9627 ], [ %9802, %9792 ]
  %9639 = phi i64 [ 0, %9627 ], [ %9803, %9792 ]
  %9640 = getelementptr inbounds %struct._PixelPacket, ptr %9637, i64 0, i32 2
  %9641 = load i16, ptr %9640, align 2, !tbaa !29, !alias.scope !747, !noalias !719
  %9642 = uitofp i16 %9641 to float
  br i1 %9630, label %9652, label %9643

9643:                                             ; preds = %9636
  %9644 = fmul fast float %9642, 0x3FCB384FE0000000
  %9645 = load <2 x i16>, ptr %9637, align 2, !tbaa !37, !alias.scope !747, !noalias !719
  %9646 = uitofp <2 x i16> %9645 to <2 x float>
  %9647 = fmul fast <2 x float> %9646, <float 0x3FB27AC820000000, float 0x3FE6E29300000000>
  %9648 = extractelement <2 x float> %9647, i64 1
  %9649 = fadd fast float %9648, %9644
  %9650 = extractelement <2 x float> %9647, i64 0
  %9651 = fadd fast float %9649, %9650
  br label %9652

9652:                                             ; preds = %9643, %9636
  %9653 = phi float [ %9651, %9643 ], [ %9642, %9636 ]
  %9654 = fpext float %9653 to double
  %9655 = fmul fast double %9654, 0x3EF0001000100010
  %9656 = fptrunc double %9655 to float
  %9657 = bitcast float %9656 to i32
  %9658 = lshr i32 %9657, 16
  %9659 = and i32 %9658, 32768
  %9660 = lshr i32 %9657, 23
  %9661 = and i32 %9660, 255
  %9662 = add nsw i32 %9661, -112
  %9663 = and i32 %9657, 8388607
  %9664 = icmp ult i32 %9661, 113
  br i1 %9664, label %9665, label %9682

9665:                                             ; preds = %9652
  %9666 = icmp ult i32 %9661, 102
  br i1 %9666, label %9679, label %9667

9667:                                             ; preds = %9665
  %9668 = or i32 %9663, 8388608
  %9669 = sub nuw nsw i32 126, %9661
  %9670 = sub nuw nsw i32 125, %9661
  %9671 = shl nsw i32 -1, %9670
  %9672 = xor i32 %9671, -1
  %9673 = add nuw nsw i32 %9668, %9672
  %9674 = lshr i32 %9668, %9669
  %9675 = and i32 %9674, 1
  %9676 = add nuw nsw i32 %9673, %9675
  %9677 = lshr i32 %9676, %9669
  %9678 = or i32 %9677, %9659
  br label %9679

9679:                                             ; preds = %9667, %9665
  %9680 = phi i32 [ %9678, %9667 ], [ %9659, %9665 ]
  %9681 = trunc i32 %9680 to i16
  br label %9717

9682:                                             ; preds = %9652
  %9683 = icmp eq i32 %9662, 143
  br i1 %9683, label %9684, label %9697

9684:                                             ; preds = %9682
  %9685 = icmp eq i32 %9663, 0
  br i1 %9685, label %9686, label %9689

9686:                                             ; preds = %9684
  %9687 = trunc i32 %9659 to i16
  %9688 = or i16 %9687, 31744
  br label %9717

9689:                                             ; preds = %9684
  %9690 = lshr i32 %9663, 13
  %9691 = icmp ult i32 %9663, 8192
  %9692 = zext i1 %9691 to i32
  %9693 = or i32 %9690, %9692
  %9694 = or i32 %9693, %9659
  %9695 = trunc i32 %9694 to i16
  %9696 = or i16 %9695, 31744
  br label %9717

9697:                                             ; preds = %9682
  %9698 = lshr i32 %9657, 13
  %9699 = and i32 %9698, 1
  %9700 = add nuw nsw i32 %9663, 4095
  %9701 = add nuw nsw i32 %9700, %9699
  %9702 = and i32 %9701, 8388608
  %9703 = icmp eq i32 %9702, 0
  %9704 = add nsw i32 %9661, -111
  %9705 = select i1 %9703, i32 %9662, i32 %9704
  %9706 = icmp ugt i32 %9705, 30
  br i1 %9706, label %9707, label %9710

9707:                                             ; preds = %9697
  %9708 = trunc i32 %9659 to i16
  %9709 = or i16 %9708, 31744
  br label %9717

9710:                                             ; preds = %9697
  %9711 = lshr i32 %9701, 13
  %9712 = shl nuw nsw i32 %9705, 10
  %9713 = select i1 %9703, i32 %9711, i32 0
  %9714 = or i32 %9713, %9712
  %9715 = or i32 %9714, %9659
  %9716 = trunc i32 %9715 to i16
  br label %9717

9717:                                             ; preds = %9710, %9707, %9689, %9686, %9679
  %9718 = phi i16 [ %9681, %9679 ], [ %9688, %9686 ], [ %9696, %9689 ], [ %9709, %9707 ], [ %9716, %9710 ]
  %9719 = lshr i16 %9718, 8
  %9720 = select i1 %9633, i16 %9718, i16 %9719
  %9721 = select i1 %9633, i16 %9719, i16 %9718
  %9722 = trunc i16 %9721 to i8
  %9723 = trunc i16 %9720 to i8
  store i8 %9723, ptr %9638, align 1, !alias.scope !719, !noalias !716
  %9724 = getelementptr inbounds i8, ptr %9638, i64 1
  store i8 %9722, ptr %9724, align 1, !alias.scope !719, !noalias !716
  %9725 = getelementptr inbounds i8, ptr %9638, i64 2
  %9726 = getelementptr inbounds %struct._PixelPacket, ptr %9637, i64 0, i32 3
  %9727 = load i16, ptr %9726, align 2, !tbaa !28, !alias.scope !716, !noalias !719
  %9728 = xor i16 %9727, -1
  %9729 = uitofp i16 %9728 to double
  %9730 = fmul fast double %9729, 0x3EF0001000100010
  %9731 = fptrunc double %9730 to float
  %9732 = bitcast float %9731 to i32
  %9733 = lshr i32 %9732, 16
  %9734 = and i32 %9733, 32768
  %9735 = lshr i32 %9732, 23
  %9736 = and i32 %9735, 255
  %9737 = add nsw i32 %9736, -112
  %9738 = and i32 %9732, 8388607
  %9739 = icmp ult i32 %9736, 113
  br i1 %9739, label %9740, label %9757

9740:                                             ; preds = %9717
  %9741 = icmp ult i32 %9736, 102
  br i1 %9741, label %9754, label %9742

9742:                                             ; preds = %9740
  %9743 = or i32 %9738, 8388608
  %9744 = sub nuw nsw i32 126, %9736
  %9745 = sub nuw nsw i32 125, %9736
  %9746 = shl nsw i32 -1, %9745
  %9747 = xor i32 %9746, -1
  %9748 = add nuw nsw i32 %9743, %9747
  %9749 = lshr i32 %9743, %9744
  %9750 = and i32 %9749, 1
  %9751 = add nuw nsw i32 %9748, %9750
  %9752 = lshr i32 %9751, %9744
  %9753 = or i32 %9752, %9734
  br label %9754

9754:                                             ; preds = %9742, %9740
  %9755 = phi i32 [ %9753, %9742 ], [ %9734, %9740 ]
  %9756 = trunc i32 %9755 to i16
  br label %9792

9757:                                             ; preds = %9717
  %9758 = icmp eq i32 %9737, 143
  br i1 %9758, label %9759, label %9772

9759:                                             ; preds = %9757
  %9760 = icmp eq i32 %9738, 0
  br i1 %9760, label %9761, label %9764

9761:                                             ; preds = %9759
  %9762 = trunc i32 %9734 to i16
  %9763 = or i16 %9762, 31744
  br label %9792

9764:                                             ; preds = %9759
  %9765 = lshr i32 %9738, 13
  %9766 = icmp ult i32 %9738, 8192
  %9767 = zext i1 %9766 to i32
  %9768 = or i32 %9765, %9767
  %9769 = or i32 %9768, %9734
  %9770 = trunc i32 %9769 to i16
  %9771 = or i16 %9770, 31744
  br label %9792

9772:                                             ; preds = %9757
  %9773 = lshr i32 %9732, 13
  %9774 = and i32 %9773, 1
  %9775 = add nuw nsw i32 %9738, 4095
  %9776 = add nuw nsw i32 %9775, %9774
  %9777 = and i32 %9776, 8388608
  %9778 = icmp eq i32 %9777, 0
  %9779 = add nsw i32 %9736, -111
  %9780 = select i1 %9778, i32 %9737, i32 %9779
  %9781 = icmp ugt i32 %9780, 30
  br i1 %9781, label %9782, label %9785

9782:                                             ; preds = %9772
  %9783 = trunc i32 %9734 to i16
  %9784 = or i16 %9783, 31744
  br label %9792

9785:                                             ; preds = %9772
  %9786 = lshr i32 %9776, 13
  %9787 = shl nuw nsw i32 %9780, 10
  %9788 = select i1 %9778, i32 %9786, i32 0
  %9789 = or i32 %9788, %9787
  %9790 = or i32 %9789, %9734
  %9791 = trunc i32 %9790 to i16
  br label %9792

9792:                                             ; preds = %9785, %9782, %9764, %9761, %9754
  %9793 = phi i16 [ %9756, %9754 ], [ %9763, %9761 ], [ %9771, %9764 ], [ %9784, %9782 ], [ %9791, %9785 ]
  %9794 = lshr i16 %9793, 8
  %9795 = select i1 %9633, i16 %9793, i16 %9794
  %9796 = select i1 %9633, i16 %9794, i16 %9793
  %9797 = trunc i16 %9796 to i8
  %9798 = trunc i16 %9795 to i8
  store i8 %9798, ptr %9725, align 1, !alias.scope !719, !noalias !716
  %9799 = getelementptr inbounds i8, ptr %9638, i64 3
  store i8 %9797, ptr %9799, align 1, !alias.scope !719, !noalias !716
  %9800 = getelementptr inbounds i8, ptr %9638, i64 4
  %9801 = getelementptr inbounds %struct._PixelPacket, ptr %9637, i64 1
  %9802 = getelementptr inbounds i8, ptr %9800, i64 %9635
  %9803 = add nuw nsw i64 %9639, 1
  %9804 = icmp eq i64 %9803, %164
  br i1 %9804, label %17787, label %9636, !llvm.loop !750

9805:                                             ; preds = %9829, %9617
  %9806 = phi ptr [ %166, %9617 ], [ %9848, %9829 ]
  %9807 = phi ptr [ %88, %9617 ], [ %9849, %9829 ]
  %9808 = phi i64 [ 0, %9617 ], [ %9850, %9829 ]
  %9809 = getelementptr inbounds %struct._PixelPacket, ptr %9806, i64 0, i32 2
  %9810 = load i16, ptr %9809, align 2, !tbaa !29, !alias.scope !751, !noalias !719
  %9811 = uitofp i16 %9810 to float
  br i1 %9620, label %9821, label %9812

9812:                                             ; preds = %9805
  %9813 = fmul fast float %9811, 0x3FCB384FE0000000
  %9814 = load <2 x i16>, ptr %9806, align 2, !tbaa !37, !alias.scope !751, !noalias !719
  %9815 = uitofp <2 x i16> %9814 to <2 x float>
  %9816 = fmul fast <2 x float> %9815, <float 0x3FB27AC820000000, float 0x3FE6E29300000000>
  %9817 = extractelement <2 x float> %9816, i64 1
  %9818 = fadd fast float %9817, %9813
  %9819 = extractelement <2 x float> %9816, i64 0
  %9820 = fadd fast float %9818, %9819
  br label %9821

9821:                                             ; preds = %9812, %9805
  %9822 = phi float [ %9820, %9812 ], [ %9811, %9805 ]
  %9823 = fcmp fast ugt float %9822, 0.000000e+00
  br i1 %9823, label %9824, label %9829

9824:                                             ; preds = %9821
  %9825 = fcmp fast ult float %9822, 6.553500e+04
  br i1 %9825, label %9826, label %9829

9826:                                             ; preds = %9824
  %9827 = fadd fast float %9822, 5.000000e-01
  %9828 = fptoui float %9827 to i16
  br label %9829

9829:                                             ; preds = %9826, %9824, %9821
  %9830 = phi i16 [ %9828, %9826 ], [ 0, %9821 ], [ -1, %9824 ]
  %9831 = lshr i16 %9830, 8
  %9832 = select i1 %9623, i16 %9830, i16 %9831
  %9833 = select i1 %9623, i16 %9831, i16 %9830
  %9834 = trunc i16 %9833 to i8
  %9835 = trunc i16 %9832 to i8
  store i8 %9835, ptr %9807, align 1, !alias.scope !719, !noalias !716
  %9836 = getelementptr inbounds i8, ptr %9807, i64 1
  store i8 %9834, ptr %9836, align 1, !alias.scope !719, !noalias !716
  %9837 = getelementptr inbounds i8, ptr %9807, i64 2
  %9838 = getelementptr inbounds %struct._PixelPacket, ptr %9806, i64 0, i32 3
  %9839 = load i16, ptr %9838, align 2, !tbaa !28, !alias.scope !716, !noalias !719
  %9840 = xor i16 %9839, -1
  %9841 = lshr i16 %9840, 8
  %9842 = select i1 %9623, i16 %9840, i16 %9841
  %9843 = select i1 %9623, i16 %9841, i16 %9840
  %9844 = trunc i16 %9843 to i8
  %9845 = trunc i16 %9842 to i8
  store i8 %9845, ptr %9837, align 1, !alias.scope !719, !noalias !716
  %9846 = getelementptr inbounds i8, ptr %9807, i64 3
  store i8 %9844, ptr %9846, align 1, !alias.scope !719, !noalias !716
  %9847 = getelementptr inbounds i8, ptr %9807, i64 4
  %9848 = getelementptr inbounds %struct._PixelPacket, ptr %9806, i64 1
  %9849 = getelementptr inbounds i8, ptr %9847, i64 %9625
  %9850 = add nuw nsw i64 %9808, 1
  %9851 = icmp eq i64 %9850, %164
  br i1 %9851, label %17787, label %9805, !llvm.loop !754

9852:                                             ; preds = %9329
  %9853 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 2
  %9854 = load i32, ptr %9853, align 8, !tbaa !50, !noalias !721
  %9855 = icmp eq i32 %9854, 1
  %9856 = icmp sgt i64 %164, 0
  br i1 %9855, label %9867, label %9857

9857:                                             ; preds = %9852
  br i1 %9856, label %9858, label %17875

9858:                                             ; preds = %9857
  %9859 = getelementptr i8, ptr %0, i64 4
  %9860 = load i32, ptr %9859, align 4, !tbaa !314, !noalias !721
  %9861 = icmp eq i32 %9860, 2
  %9862 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %9863 = load i32, ptr %9862, align 8, !tbaa !51, !noalias !721
  %9864 = icmp eq i32 %9863, 1
  %9865 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %9866 = load i64, ptr %9865, align 8, !tbaa !47, !noalias !721
  br label %9956

9867:                                             ; preds = %9852
  br i1 %9856, label %9868, label %17875

9868:                                             ; preds = %9867
  %9869 = getelementptr i8, ptr %0, i64 4
  %9870 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 14
  %9871 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 3
  %9872 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %9873 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  br label %9874

9874:                                             ; preds = %9942, %9868
  %9875 = phi ptr [ %166, %9868 ], [ %9951, %9942 ]
  %9876 = phi ptr [ %88, %9868 ], [ %9953, %9942 ]
  %9877 = phi i64 [ 0, %9868 ], [ %9954, %9942 ]
  %9878 = load i32, ptr %9869, align 4, !tbaa !314, !noalias !721
  %9879 = icmp eq i32 %9878, 2
  %9880 = getelementptr inbounds %struct._PixelPacket, ptr %9875, i64 0, i32 2
  %9881 = load i16, ptr %9880, align 2, !tbaa !29, !alias.scope !755, !noalias !719
  %9882 = uitofp i16 %9881 to float
  br i1 %9879, label %9892, label %9883

9883:                                             ; preds = %9874
  %9884 = fmul fast float %9882, 0x3FCB384FE0000000
  %9885 = load <2 x i16>, ptr %9875, align 2, !tbaa !37, !alias.scope !755, !noalias !719
  %9886 = uitofp <2 x i16> %9885 to <2 x float>
  %9887 = fmul fast <2 x float> %9886, <float 0x3FB27AC820000000, float 0x3FE6E29300000000>
  %9888 = extractelement <2 x float> %9887, i64 1
  %9889 = fadd fast float %9888, %9884
  %9890 = extractelement <2 x float> %9887, i64 0
  %9891 = fadd fast float %9889, %9890
  br label %9892

9892:                                             ; preds = %9883, %9874
  %9893 = phi float [ %9891, %9883 ], [ %9882, %9874 ]
  call void @llvm.experimental.noalias.scope.decl(metadata !758)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %36) #6, !noalias !761
  %9894 = call ptr @ResetMagickMemory(ptr noundef nonnull %36, i32 noundef 0, i64 noundef 4) #6, !noalias !758
  %9895 = fpext float %9893 to double
  %9896 = load double, ptr %9870, align 8, !tbaa !59, !noalias !761
  %9897 = fmul fast double %9896, %9895
  %9898 = load double, ptr %9871, align 8, !tbaa !60, !noalias !761
  %9899 = fadd fast double %9897, %9898
  %9900 = fptrunc double %9899 to float
  %9901 = load i32, ptr %9872, align 8, !tbaa !51, !noalias !761
  %9902 = icmp eq i32 %9901, 1
  %9903 = bitcast float %9900 to i32
  %9904 = lshr i32 %9903, 24
  %9905 = trunc i32 %9904 to i8
  %9906 = lshr i32 %9903, 16
  %9907 = trunc i32 %9906 to i8
  %9908 = lshr i32 %9903, 8
  %9909 = trunc i32 %9908 to i8
  %9910 = trunc i32 %9903 to i8
  br i1 %9902, label %9912, label %9911

9911:                                             ; preds = %9892
  br label %9912

9912:                                             ; preds = %9911, %9892
  %9913 = phi i8 [ %9905, %9911 ], [ %9910, %9892 ]
  %9914 = phi i8 [ %9907, %9911 ], [ %9909, %9892 ]
  %9915 = phi i8 [ %9909, %9911 ], [ %9907, %9892 ]
  %9916 = phi i8 [ %9910, %9911 ], [ %9905, %9892 ]
  store i8 %9913, ptr %9876, align 1, !alias.scope !762, !noalias !716
  %9917 = getelementptr inbounds i8, ptr %9876, i64 1
  store i8 %9914, ptr %9917, align 1, !alias.scope !762, !noalias !716
  %9918 = getelementptr inbounds i8, ptr %9876, i64 2
  store i8 %9915, ptr %9918, align 1, !alias.scope !762, !noalias !716
  %9919 = getelementptr inbounds i8, ptr %9876, i64 3
  store i8 %9916, ptr %9919, align 1, !alias.scope !762, !noalias !716
  %9920 = getelementptr inbounds i8, ptr %9876, i64 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %36) #6, !noalias !761
  %9921 = getelementptr inbounds %struct._PixelPacket, ptr %9875, i64 0, i32 3
  %9922 = load i16, ptr %9921, align 2, !tbaa !28, !alias.scope !716, !noalias !719
  %9923 = xor i16 %9922, -1
  call void @llvm.experimental.noalias.scope.decl(metadata !763)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %35) #6, !noalias !766
  %9924 = call ptr @ResetMagickMemory(ptr noundef nonnull %35, i32 noundef 0, i64 noundef 4) #6, !noalias !763
  %9925 = uitofp i16 %9923 to double
  %9926 = load double, ptr %9870, align 8, !tbaa !59, !noalias !766
  %9927 = fmul fast double %9926, %9925
  %9928 = load double, ptr %9871, align 8, !tbaa !60, !noalias !766
  %9929 = fadd fast double %9927, %9928
  %9930 = fptrunc double %9929 to float
  %9931 = load i32, ptr %9872, align 8, !tbaa !51, !noalias !766
  %9932 = icmp eq i32 %9931, 1
  %9933 = bitcast float %9930 to i32
  %9934 = lshr i32 %9933, 24
  %9935 = trunc i32 %9934 to i8
  %9936 = lshr i32 %9933, 16
  %9937 = trunc i32 %9936 to i8
  %9938 = lshr i32 %9933, 8
  %9939 = trunc i32 %9938 to i8
  %9940 = trunc i32 %9933 to i8
  br i1 %9932, label %9942, label %9941

9941:                                             ; preds = %9912
  br label %9942

9942:                                             ; preds = %9941, %9912
  %9943 = phi i8 [ %9935, %9941 ], [ %9940, %9912 ]
  %9944 = phi i8 [ %9937, %9941 ], [ %9939, %9912 ]
  %9945 = phi i8 [ %9939, %9941 ], [ %9937, %9912 ]
  %9946 = phi i8 [ %9940, %9941 ], [ %9935, %9912 ]
  store i8 %9943, ptr %9920, align 1, !alias.scope !767, !noalias !716
  %9947 = getelementptr inbounds i8, ptr %9876, i64 5
  store i8 %9944, ptr %9947, align 1, !alias.scope !767, !noalias !716
  %9948 = getelementptr inbounds i8, ptr %9876, i64 6
  store i8 %9945, ptr %9948, align 1, !alias.scope !767, !noalias !716
  %9949 = getelementptr inbounds i8, ptr %9876, i64 7
  store i8 %9946, ptr %9949, align 1, !alias.scope !767, !noalias !716
  %9950 = getelementptr inbounds i8, ptr %9876, i64 8
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %35) #6, !noalias !766
  %9951 = getelementptr inbounds %struct._PixelPacket, ptr %9875, i64 1
  %9952 = load i64, ptr %9873, align 8, !tbaa !47, !noalias !721
  %9953 = getelementptr inbounds i8, ptr %9950, i64 %9952
  %9954 = add nuw nsw i64 %9877, 1
  %9955 = icmp eq i64 %9954, %164
  br i1 %9955, label %17787, label %9874, !llvm.loop !768

9956:                                             ; preds = %10014, %9858
  %9957 = phi ptr [ %166, %9858 ], [ %10027, %10014 ]
  %9958 = phi ptr [ %88, %9858 ], [ %10028, %10014 ]
  %9959 = phi i64 [ 0, %9858 ], [ %10029, %10014 ]
  %9960 = getelementptr inbounds %struct._PixelPacket, ptr %9957, i64 0, i32 2
  %9961 = load i16, ptr %9960, align 2, !tbaa !29, !alias.scope !769, !noalias !719
  %9962 = uitofp i16 %9961 to float
  br i1 %9861, label %9972, label %9963

9963:                                             ; preds = %9956
  %9964 = fmul fast float %9962, 0x3FCB384FE0000000
  %9965 = load <2 x i16>, ptr %9957, align 2, !tbaa !37, !alias.scope !769, !noalias !719
  %9966 = uitofp <2 x i16> %9965 to <2 x float>
  %9967 = fmul fast <2 x float> %9966, <float 0x3FB27AC820000000, float 0x3FE6E29300000000>
  %9968 = extractelement <2 x float> %9967, i64 1
  %9969 = fadd fast float %9968, %9964
  %9970 = extractelement <2 x float> %9967, i64 0
  %9971 = fadd fast float %9969, %9970
  br label %9972

9972:                                             ; preds = %9963, %9956
  %9973 = phi float [ %9971, %9963 ], [ %9962, %9956 ]
  %9974 = fcmp fast ugt float %9973, 0.000000e+00
  br i1 %9974, label %9975, label %9980

9975:                                             ; preds = %9972
  %9976 = fcmp fast ult float %9973, 6.553500e+04
  br i1 %9976, label %9977, label %9980

9977:                                             ; preds = %9975
  %9978 = fadd fast float %9973, 5.000000e-01
  %9979 = fptoui float %9978 to i16
  br label %9980

9980:                                             ; preds = %9977, %9975, %9972
  %9981 = phi i16 [ %9979, %9977 ], [ 0, %9972 ], [ -1, %9975 ]
  %9982 = zext i16 %9981 to i32
  %9983 = mul nuw i32 %9982, 65537
  br i1 %9864, label %9984, label %9987

9984:                                             ; preds = %9980
  %9985 = lshr i32 %9983, 8
  %9986 = lshr i32 %9983, 24
  br label %9990

9987:                                             ; preds = %9980
  %9988 = lshr i32 %9983, 24
  %9989 = lshr i32 %9983, 8
  br label %9990

9990:                                             ; preds = %9987, %9984
  %9991 = phi i32 [ %9983, %9984 ], [ %9988, %9987 ]
  %9992 = phi i32 [ %9985, %9984 ], [ %9982, %9987 ]
  %9993 = phi i32 [ %9982, %9984 ], [ %9989, %9987 ]
  %9994 = phi i32 [ %9986, %9984 ], [ %9983, %9987 ]
  %9995 = trunc i32 %9994 to i8
  %9996 = trunc i32 %9993 to i8
  %9997 = trunc i32 %9992 to i8
  %9998 = trunc i32 %9991 to i8
  store i8 %9998, ptr %9958, align 1, !alias.scope !719, !noalias !716
  %9999 = getelementptr inbounds i8, ptr %9958, i64 1
  store i8 %9997, ptr %9999, align 1, !alias.scope !719, !noalias !716
  %10000 = getelementptr inbounds i8, ptr %9958, i64 2
  store i8 %9996, ptr %10000, align 1, !alias.scope !719, !noalias !716
  %10001 = getelementptr inbounds i8, ptr %9958, i64 3
  store i8 %9995, ptr %10001, align 1, !alias.scope !719, !noalias !716
  %10002 = getelementptr inbounds i8, ptr %9958, i64 4
  %10003 = getelementptr inbounds %struct._PixelPacket, ptr %9957, i64 0, i32 3
  %10004 = load i16, ptr %10003, align 2, !tbaa !28, !alias.scope !716, !noalias !719
  %10005 = xor i16 %10004, -1
  %10006 = zext i16 %10005 to i32
  %10007 = mul nuw i32 %10006, 65537
  br i1 %9864, label %10008, label %10011

10008:                                            ; preds = %9990
  %10009 = lshr i32 %10007, 8
  %10010 = lshr i32 %10007, 24
  br label %10014

10011:                                            ; preds = %9990
  %10012 = lshr i32 %10007, 24
  %10013 = lshr i32 %10007, 8
  br label %10014

10014:                                            ; preds = %10011, %10008
  %10015 = phi i32 [ %10007, %10008 ], [ %10012, %10011 ]
  %10016 = phi i32 [ %10009, %10008 ], [ %10006, %10011 ]
  %10017 = phi i32 [ %10006, %10008 ], [ %10013, %10011 ]
  %10018 = phi i32 [ %10010, %10008 ], [ %10007, %10011 ]
  %10019 = trunc i32 %10018 to i8
  %10020 = trunc i32 %10017 to i8
  %10021 = trunc i32 %10016 to i8
  %10022 = trunc i32 %10015 to i8
  store i8 %10022, ptr %10002, align 1, !alias.scope !719, !noalias !716
  %10023 = getelementptr inbounds i8, ptr %9958, i64 5
  store i8 %10021, ptr %10023, align 1, !alias.scope !719, !noalias !716
  %10024 = getelementptr inbounds i8, ptr %9958, i64 6
  store i8 %10020, ptr %10024, align 1, !alias.scope !719, !noalias !716
  %10025 = getelementptr inbounds i8, ptr %9958, i64 7
  store i8 %10019, ptr %10025, align 1, !alias.scope !719, !noalias !716
  %10026 = getelementptr inbounds i8, ptr %9958, i64 8
  %10027 = getelementptr inbounds %struct._PixelPacket, ptr %9957, i64 1
  %10028 = getelementptr inbounds i8, ptr %10026, i64 %9866
  %10029 = add nuw nsw i64 %9959, 1
  %10030 = icmp eq i64 %10029, %164
  br i1 %10030, label %17787, label %9956, !llvm.loop !772

10031:                                            ; preds = %9329
  %10032 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 2
  %10033 = load i32, ptr %10032, align 8, !tbaa !50, !noalias !721
  %10034 = icmp eq i32 %10033, 1
  br i1 %10034, label %10035, label %10155

10035:                                            ; preds = %10031
  %10036 = icmp sgt i64 %164, 0
  br i1 %10036, label %10037, label %17875

10037:                                            ; preds = %10035
  %10038 = getelementptr i8, ptr %0, i64 4
  %10039 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 14
  %10040 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 3
  %10041 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %10042 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  br label %10043

10043:                                            ; preds = %10133, %10037
  %10044 = phi ptr [ %166, %10037 ], [ %10150, %10133 ]
  %10045 = phi ptr [ %88, %10037 ], [ %10152, %10133 ]
  %10046 = phi i64 [ 0, %10037 ], [ %10153, %10133 ]
  %10047 = load i32, ptr %10038, align 4, !tbaa !314, !noalias !721
  %10048 = icmp eq i32 %10047, 2
  %10049 = getelementptr inbounds %struct._PixelPacket, ptr %10044, i64 0, i32 2
  %10050 = load i16, ptr %10049, align 2, !tbaa !29, !alias.scope !773, !noalias !719
  %10051 = uitofp i16 %10050 to float
  br i1 %10048, label %10061, label %10052

10052:                                            ; preds = %10043
  %10053 = fmul fast float %10051, 0x3FCB384FE0000000
  %10054 = load <2 x i16>, ptr %10044, align 2, !tbaa !37, !alias.scope !773, !noalias !719
  %10055 = uitofp <2 x i16> %10054 to <2 x float>
  %10056 = fmul fast <2 x float> %10055, <float 0x3FB27AC820000000, float 0x3FE6E29300000000>
  %10057 = extractelement <2 x float> %10056, i64 1
  %10058 = fadd fast float %10057, %10053
  %10059 = extractelement <2 x float> %10056, i64 0
  %10060 = fadd fast float %10058, %10059
  br label %10061

10061:                                            ; preds = %10052, %10043
  %10062 = phi float [ %10060, %10052 ], [ %10051, %10043 ]
  %10063 = fpext float %10062 to double
  call void @llvm.experimental.noalias.scope.decl(metadata !776)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %34) #6, !noalias !779
  %10064 = call ptr @ResetMagickMemory(ptr noundef nonnull %34, i32 noundef 0, i64 noundef 8) #6, !noalias !776
  %10065 = load double, ptr %10039, align 8, !tbaa !59, !noalias !779
  %10066 = fmul fast double %10065, %10063
  %10067 = load double, ptr %10040, align 8, !tbaa !60, !noalias !779
  %10068 = fadd fast double %10066, %10067
  %10069 = load i32, ptr %10041, align 8, !tbaa !51, !noalias !779
  %10070 = icmp eq i32 %10069, 1
  %10071 = bitcast double %10068 to i64
  %10072 = lshr i64 %10071, 56
  %10073 = trunc i64 %10072 to i8
  %10074 = lshr i64 %10071, 48
  %10075 = trunc i64 %10074 to i8
  %10076 = lshr i64 %10071, 40
  %10077 = trunc i64 %10076 to i8
  %10078 = lshr i64 %10071, 32
  %10079 = trunc i64 %10078 to i8
  %10080 = lshr i64 %10071, 24
  %10081 = trunc i64 %10080 to i8
  %10082 = lshr i64 %10071, 16
  %10083 = trunc i64 %10082 to i8
  %10084 = lshr i64 %10071, 8
  %10085 = trunc i64 %10084 to i8
  %10086 = trunc i64 %10071 to i8
  br i1 %10070, label %10088, label %10087

10087:                                            ; preds = %10061
  br label %10088

10088:                                            ; preds = %10087, %10061
  %10089 = phi i8 [ %10073, %10087 ], [ %10086, %10061 ]
  %10090 = phi i8 [ %10075, %10087 ], [ %10085, %10061 ]
  %10091 = phi i8 [ %10077, %10087 ], [ %10083, %10061 ]
  %10092 = phi i8 [ %10079, %10087 ], [ %10081, %10061 ]
  %10093 = phi i8 [ %10081, %10087 ], [ %10079, %10061 ]
  %10094 = phi i8 [ %10083, %10087 ], [ %10077, %10061 ]
  %10095 = phi i8 [ %10085, %10087 ], [ %10075, %10061 ]
  %10096 = phi i8 [ %10086, %10087 ], [ %10073, %10061 ]
  store i8 %10089, ptr %10045, align 1, !alias.scope !780, !noalias !716
  %10097 = getelementptr inbounds i8, ptr %10045, i64 1
  store i8 %10090, ptr %10097, align 1, !alias.scope !780, !noalias !716
  %10098 = getelementptr inbounds i8, ptr %10045, i64 2
  store i8 %10091, ptr %10098, align 1, !alias.scope !780, !noalias !716
  %10099 = getelementptr inbounds i8, ptr %10045, i64 3
  store i8 %10092, ptr %10099, align 1, !alias.scope !780, !noalias !716
  %10100 = getelementptr inbounds i8, ptr %10045, i64 4
  store i8 %10093, ptr %10100, align 1, !alias.scope !780, !noalias !716
  %10101 = getelementptr inbounds i8, ptr %10045, i64 5
  store i8 %10094, ptr %10101, align 1, !alias.scope !780, !noalias !716
  %10102 = getelementptr inbounds i8, ptr %10045, i64 6
  store i8 %10095, ptr %10102, align 1, !alias.scope !780, !noalias !716
  %10103 = getelementptr inbounds i8, ptr %10045, i64 7
  store i8 %10096, ptr %10103, align 1, !alias.scope !780, !noalias !716
  %10104 = getelementptr inbounds i8, ptr %10045, i64 8
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %34) #6, !noalias !779
  %10105 = getelementptr inbounds %struct._PixelPacket, ptr %10044, i64 0, i32 3
  %10106 = load i16, ptr %10105, align 2, !tbaa !28, !alias.scope !716, !noalias !719
  %10107 = xor i16 %10106, -1
  %10108 = uitofp i16 %10107 to double
  call void @llvm.experimental.noalias.scope.decl(metadata !781)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %33) #6, !noalias !784
  %10109 = call ptr @ResetMagickMemory(ptr noundef nonnull %33, i32 noundef 0, i64 noundef 8) #6, !noalias !781
  %10110 = load double, ptr %10039, align 8, !tbaa !59, !noalias !784
  %10111 = fmul fast double %10110, %10108
  %10112 = load double, ptr %10040, align 8, !tbaa !60, !noalias !784
  %10113 = fadd fast double %10111, %10112
  %10114 = load i32, ptr %10041, align 8, !tbaa !51, !noalias !784
  %10115 = icmp eq i32 %10114, 1
  %10116 = bitcast double %10113 to i64
  %10117 = lshr i64 %10116, 56
  %10118 = trunc i64 %10117 to i8
  %10119 = lshr i64 %10116, 48
  %10120 = trunc i64 %10119 to i8
  %10121 = lshr i64 %10116, 40
  %10122 = trunc i64 %10121 to i8
  %10123 = lshr i64 %10116, 32
  %10124 = trunc i64 %10123 to i8
  %10125 = lshr i64 %10116, 24
  %10126 = trunc i64 %10125 to i8
  %10127 = lshr i64 %10116, 16
  %10128 = trunc i64 %10127 to i8
  %10129 = lshr i64 %10116, 8
  %10130 = trunc i64 %10129 to i8
  %10131 = trunc i64 %10116 to i8
  br i1 %10115, label %10133, label %10132

10132:                                            ; preds = %10088
  br label %10133

10133:                                            ; preds = %10132, %10088
  %10134 = phi i8 [ %10118, %10132 ], [ %10131, %10088 ]
  %10135 = phi i8 [ %10120, %10132 ], [ %10130, %10088 ]
  %10136 = phi i8 [ %10122, %10132 ], [ %10128, %10088 ]
  %10137 = phi i8 [ %10124, %10132 ], [ %10126, %10088 ]
  %10138 = phi i8 [ %10126, %10132 ], [ %10124, %10088 ]
  %10139 = phi i8 [ %10128, %10132 ], [ %10122, %10088 ]
  %10140 = phi i8 [ %10130, %10132 ], [ %10120, %10088 ]
  %10141 = phi i8 [ %10131, %10132 ], [ %10118, %10088 ]
  store i8 %10134, ptr %10104, align 1, !alias.scope !785, !noalias !716
  %10142 = getelementptr inbounds i8, ptr %10045, i64 9
  store i8 %10135, ptr %10142, align 1, !alias.scope !785, !noalias !716
  %10143 = getelementptr inbounds i8, ptr %10045, i64 10
  store i8 %10136, ptr %10143, align 1, !alias.scope !785, !noalias !716
  %10144 = getelementptr inbounds i8, ptr %10045, i64 11
  store i8 %10137, ptr %10144, align 1, !alias.scope !785, !noalias !716
  %10145 = getelementptr inbounds i8, ptr %10045, i64 12
  store i8 %10138, ptr %10145, align 1, !alias.scope !785, !noalias !716
  %10146 = getelementptr inbounds i8, ptr %10045, i64 13
  store i8 %10139, ptr %10146, align 1, !alias.scope !785, !noalias !716
  %10147 = getelementptr inbounds i8, ptr %10045, i64 14
  store i8 %10140, ptr %10147, align 1, !alias.scope !785, !noalias !716
  %10148 = getelementptr inbounds i8, ptr %10045, i64 15
  store i8 %10141, ptr %10148, align 1, !alias.scope !785, !noalias !716
  %10149 = getelementptr inbounds i8, ptr %10045, i64 16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %33) #6, !noalias !784
  %10150 = getelementptr inbounds %struct._PixelPacket, ptr %10044, i64 1
  %10151 = load i64, ptr %10042, align 8, !tbaa !47, !noalias !721
  %10152 = getelementptr inbounds i8, ptr %10149, i64 %10151
  %10153 = add nuw nsw i64 %10046, 1
  %10154 = icmp eq i64 %10153, %164
  br i1 %10154, label %17787, label %10043, !llvm.loop !786

10155:                                            ; preds = %10031, %9329
  %10156 = icmp sgt i64 %164, 0
  br i1 %10156, label %10157, label %17875

10157:                                            ; preds = %10155
  %10158 = add i64 %9330, -1
  %10159 = shl i64 2, %10158
  %10160 = add i64 %10159, -1
  %10161 = getelementptr i8, ptr %0, i64 4
  %10162 = uitofp i64 %10160 to float
  %10163 = fmul fast float %10162, 0x3EF0001000000000
  %10164 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 14, i32 2
  %10165 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %10166 = load i32, ptr %10161, align 4, !tbaa !314, !noalias !721
  %10167 = icmp eq i32 %10166, 2
  %10168 = icmp sgt i64 %9330, 0
  %10169 = load i64, ptr %10165, align 8, !tbaa !47, !noalias !721
  br label %10170

10170:                                            ; preds = %10273, %10157
  %10171 = phi ptr [ %166, %10157 ], [ %10275, %10273 ]
  %10172 = phi ptr [ %88, %10157 ], [ %10276, %10273 ]
  %10173 = phi i64 [ 0, %10157 ], [ %10277, %10273 ]
  %10174 = getelementptr inbounds %struct._PixelPacket, ptr %10171, i64 0, i32 2
  %10175 = load i16, ptr %10174, align 2, !tbaa !29, !alias.scope !787, !noalias !719
  %10176 = uitofp i16 %10175 to float
  br i1 %10167, label %10186, label %10177

10177:                                            ; preds = %10170
  %10178 = fmul fast float %10176, 0x3FCB384FE0000000
  %10179 = load <2 x i16>, ptr %10171, align 2, !tbaa !37, !alias.scope !787, !noalias !719
  %10180 = uitofp <2 x i16> %10179 to <2 x float>
  %10181 = fmul fast <2 x float> %10180, <float 0x3FB27AC820000000, float 0x3FE6E29300000000>
  %10182 = extractelement <2 x float> %10181, i64 1
  %10183 = fadd fast float %10182, %10178
  %10184 = extractelement <2 x float> %10181, i64 0
  %10185 = fadd fast float %10183, %10184
  br label %10186

10186:                                            ; preds = %10177, %10170
  %10187 = phi float [ %10185, %10177 ], [ %10176, %10170 ]
  %10188 = fcmp fast ugt float %10187, 0.000000e+00
  br i1 %10188, label %10189, label %10194

10189:                                            ; preds = %10186
  %10190 = fcmp fast ult float %10187, 6.553500e+04
  br i1 %10190, label %10191, label %10194

10191:                                            ; preds = %10189
  %10192 = fadd fast float %10187, 5.000000e-01
  %10193 = fptoui float %10192 to i16
  br label %10194

10194:                                            ; preds = %10191, %10189, %10186
  %10195 = phi i16 [ %10193, %10191 ], [ 0, %10186 ], [ -1, %10189 ]
  %10196 = uitofp i16 %10195 to float
  %10197 = fmul fast float %10163, %10196
  %10198 = fpext float %10197 to double
  %10199 = fadd fast double %10198, 5.000000e-01
  %10200 = fptoui double %10199 to i64
  tail call void @llvm.experimental.noalias.scope.decl(metadata !790)
  %10201 = load i64, ptr %10164, align 8, !tbaa !69, !noalias !721
  %10202 = icmp eq i64 %10201, 0
  br i1 %10202, label %10203, label %10204

10203:                                            ; preds = %10194
  store i64 8, ptr %10164, align 8, !tbaa !69, !noalias !793
  br label %10204

10204:                                            ; preds = %10203, %10194
  %10205 = phi i64 [ 8, %10203 ], [ %10201, %10194 ]
  br i1 %10168, label %10206, label %10232

10206:                                            ; preds = %10204, %10216
  %10207 = phi i64 [ %10227, %10216 ], [ %10205, %10204 ]
  %10208 = phi i64 [ %10212, %10216 ], [ %9330, %10204 ]
  %10209 = phi ptr [ %10229, %10216 ], [ %10172, %10204 ]
  %10210 = tail call i64 @llvm.umin.i64(i64 %10208, i64 %10207)
  %10211 = sub nsw i64 %10208, %10210
  %10212 = tail call i64 @llvm.smax.i64(i64 %10211, i64 0)
  %10213 = icmp eq i64 %10207, 8
  br i1 %10213, label %10216, label %10214

10214:                                            ; preds = %10206
  %10215 = load i8, ptr %10209, align 1, !tbaa !48, !alias.scope !794, !noalias !716
  br label %10216

10216:                                            ; preds = %10214, %10206
  %10217 = phi i8 [ %10215, %10214 ], [ 0, %10206 ]
  %10218 = sub i64 %10207, %10210
  %10219 = lshr i64 %10200, %10212
  %10220 = shl nsw i64 -1, %10210
  %10221 = xor i64 %10220, -1
  %10222 = and i64 %10219, %10221
  %10223 = shl i64 %10222, %10218
  %10224 = trunc i64 %10223 to i8
  %10225 = or i8 %10217, %10224
  store i8 %10225, ptr %10209, align 1, !tbaa !48, !alias.scope !794, !noalias !716
  %10226 = icmp ule i64 %10207, %10208
  %10227 = select i1 %10226, i64 8, i64 %10218
  %10228 = zext i1 %10226 to i64
  %10229 = getelementptr inbounds i8, ptr %10209, i64 %10228
  %10230 = icmp slt i64 %10211, 1
  br i1 %10230, label %10231, label %10206, !llvm.loop !75

10231:                                            ; preds = %10216
  store i64 %10227, ptr %10164, align 8, !tbaa !69, !noalias !793
  br label %10232

10232:                                            ; preds = %10231, %10204
  %10233 = phi i64 [ %10205, %10204 ], [ %10227, %10231 ]
  %10234 = phi ptr [ %10172, %10204 ], [ %10229, %10231 ]
  %10235 = getelementptr inbounds %struct._PixelPacket, ptr %10171, i64 0, i32 3
  %10236 = load i16, ptr %10235, align 2, !tbaa !28, !alias.scope !716, !noalias !719
  %10237 = xor i16 %10236, -1
  %10238 = uitofp i16 %10237 to float
  %10239 = fmul fast float %10163, %10238
  %10240 = fpext float %10239 to double
  %10241 = fadd fast double %10240, 5.000000e-01
  %10242 = fptoui double %10241 to i64
  tail call void @llvm.experimental.noalias.scope.decl(metadata !795)
  %10243 = icmp eq i64 %10233, 0
  br i1 %10243, label %10244, label %10245

10244:                                            ; preds = %10232
  store i64 8, ptr %10164, align 8, !tbaa !69, !noalias !798
  br label %10245

10245:                                            ; preds = %10244, %10232
  %10246 = phi i64 [ 8, %10244 ], [ %10233, %10232 ]
  br i1 %10168, label %10247, label %10273

10247:                                            ; preds = %10245, %10257
  %10248 = phi i64 [ %10268, %10257 ], [ %10246, %10245 ]
  %10249 = phi i64 [ %10253, %10257 ], [ %9330, %10245 ]
  %10250 = phi ptr [ %10270, %10257 ], [ %10234, %10245 ]
  %10251 = tail call i64 @llvm.umin.i64(i64 %10249, i64 %10248)
  %10252 = sub nsw i64 %10249, %10251
  %10253 = tail call i64 @llvm.smax.i64(i64 %10252, i64 0)
  %10254 = icmp eq i64 %10248, 8
  br i1 %10254, label %10257, label %10255

10255:                                            ; preds = %10247
  %10256 = load i8, ptr %10250, align 1, !tbaa !48, !alias.scope !799, !noalias !716
  br label %10257

10257:                                            ; preds = %10255, %10247
  %10258 = phi i8 [ %10256, %10255 ], [ 0, %10247 ]
  %10259 = sub i64 %10248, %10251
  %10260 = lshr i64 %10242, %10253
  %10261 = shl nsw i64 -1, %10251
  %10262 = xor i64 %10261, -1
  %10263 = and i64 %10260, %10262
  %10264 = shl i64 %10263, %10259
  %10265 = trunc i64 %10264 to i8
  %10266 = or i8 %10258, %10265
  store i8 %10266, ptr %10250, align 1, !tbaa !48, !alias.scope !799, !noalias !716
  %10267 = icmp ule i64 %10248, %10249
  %10268 = select i1 %10267, i64 8, i64 %10259
  %10269 = zext i1 %10267 to i64
  %10270 = getelementptr inbounds i8, ptr %10250, i64 %10269
  %10271 = icmp slt i64 %10252, 1
  br i1 %10271, label %10272, label %10247, !llvm.loop !75

10272:                                            ; preds = %10257
  store i64 %10268, ptr %10164, align 8, !tbaa !69, !noalias !798
  br label %10273

10273:                                            ; preds = %10272, %10245
  %10274 = phi ptr [ %10234, %10245 ], [ %10270, %10272 ]
  %10275 = getelementptr inbounds %struct._PixelPacket, ptr %10171, i64 1
  %10276 = getelementptr inbounds i8, ptr %10274, i64 %10169
  %10277 = add nuw nsw i64 %10173, 1
  %10278 = icmp eq i64 %10277, %164
  br i1 %10278, label %17787, label %10170, !llvm.loop !800

10279:                                            ; preds = %9511, %9485
  %10280 = phi i8 [ %9495, %9485 ], [ %9522, %9511 ]
  store i8 %10280, ptr %9465, align 1, !tbaa !48, !alias.scope !719, !noalias !716
  br label %17787

10281:                                            ; preds = %256, %256
  tail call void @llvm.experimental.noalias.scope.decl(metadata !801)
  tail call void @llvm.experimental.noalias.scope.decl(metadata !804)
  %10282 = load i64, ptr %2, align 8, !tbaa !45, !noalias !806
  %10283 = add i64 %10282, -8
  %10284 = tail call i64 @llvm.fshl.i64(i64 %10282, i64 %10283, i64 61)
  switch i64 %10284, label %10717 [
    i64 0, label %10285
    i64 1, label %10321
    i64 3, label %10513
    i64 7, label %10653
  ]

10285:                                            ; preds = %10281
  %10286 = icmp sgt i64 %164, 0
  br i1 %10286, label %10287, label %17831

10287:                                            ; preds = %10285
  %10288 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %10289 = load i64, ptr %10288, align 8, !tbaa !47, !noalias !806
  %10290 = and i64 %164, 1
  %10291 = icmp eq i64 %164, 1
  br i1 %10291, label %17408, label %10292

10292:                                            ; preds = %10287
  %10293 = and i64 %164, -2
  br label %10294

10294:                                            ; preds = %10294, %10292
  %10295 = phi ptr [ %166, %10292 ], [ %10317, %10294 ]
  %10296 = phi ptr [ %88, %10292 ], [ %10318, %10294 ]
  %10297 = phi i64 [ 0, %10292 ], [ %10319, %10294 ]
  %10298 = getelementptr inbounds %struct._PixelPacket, ptr %10295, i64 0, i32 1
  %10299 = load i16, ptr %10298, align 2, !tbaa !30, !alias.scope !801, !noalias !804
  %10300 = zext i16 %10299 to i64
  %10301 = add nuw nsw i64 %10300, 128
  %10302 = lshr i64 %10301, 8
  %10303 = sub nsw i64 %10301, %10302
  %10304 = lshr i64 %10303, 8
  %10305 = trunc i64 %10304 to i8
  %10306 = getelementptr inbounds i8, ptr %10296, i64 1
  store i8 %10305, ptr %10296, align 1, !tbaa !48, !alias.scope !804, !noalias !801
  %10307 = getelementptr inbounds i8, ptr %10306, i64 %10289
  %10308 = getelementptr inbounds %struct._PixelPacket, ptr %10295, i64 1, i32 1
  %10309 = load i16, ptr %10308, align 2, !tbaa !30, !alias.scope !801, !noalias !804
  %10310 = zext i16 %10309 to i64
  %10311 = add nuw nsw i64 %10310, 128
  %10312 = lshr i64 %10311, 8
  %10313 = sub nsw i64 %10311, %10312
  %10314 = lshr i64 %10313, 8
  %10315 = trunc i64 %10314 to i8
  %10316 = getelementptr inbounds i8, ptr %10307, i64 1
  store i8 %10315, ptr %10307, align 1, !tbaa !48, !alias.scope !804, !noalias !801
  %10317 = getelementptr inbounds %struct._PixelPacket, ptr %10295, i64 2
  %10318 = getelementptr inbounds i8, ptr %10316, i64 %10289
  %10319 = add i64 %10297, 2
  %10320 = icmp eq i64 %10319, %10293
  br i1 %10320, label %17408, label %10294, !llvm.loop !807

10321:                                            ; preds = %10281
  %10322 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 2
  %10323 = load i32, ptr %10322, align 8, !tbaa !50, !noalias !806
  %10324 = icmp eq i32 %10323, 1
  %10325 = icmp sgt i64 %164, 0
  br i1 %10324, label %10385, label %10326

10326:                                            ; preds = %10321
  br i1 %10325, label %10327, label %17831

10327:                                            ; preds = %10326
  %10328 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %10329 = load i32, ptr %10328, align 8, !tbaa !51, !noalias !806
  %10330 = freeze i32 %10329
  %10331 = icmp eq i32 %10330, 1
  %10332 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %10333 = load i64, ptr %10332, align 8, !tbaa !47, !noalias !806
  br i1 %10331, label %10340, label %10334

10334:                                            ; preds = %10327
  %10335 = add i64 %164, -1
  %10336 = and i64 %164, 3
  %10337 = icmp ult i64 %10335, 3
  br i1 %10337, label %17440, label %10338

10338:                                            ; preds = %10334
  %10339 = and i64 %164, -4
  br label %10474

10340:                                            ; preds = %10327
  %10341 = add i64 %164, -1
  %10342 = and i64 %164, 3
  %10343 = icmp ult i64 %10341, 3
  br i1 %10343, label %17421, label %10344

10344:                                            ; preds = %10340
  %10345 = and i64 %164, -4
  br label %10346

10346:                                            ; preds = %10346, %10344
  %10347 = phi ptr [ %166, %10344 ], [ %10381, %10346 ]
  %10348 = phi ptr [ %88, %10344 ], [ %10382, %10346 ]
  %10349 = phi i64 [ 0, %10344 ], [ %10383, %10346 ]
  %10350 = getelementptr inbounds %struct._PixelPacket, ptr %10347, i64 0, i32 1
  %10351 = load i16, ptr %10350, align 2, !tbaa !30, !alias.scope !801, !noalias !804
  %10352 = lshr i16 %10351, 8
  %10353 = trunc i16 %10352 to i8
  %10354 = trunc i16 %10351 to i8
  store i8 %10354, ptr %10348, align 1, !alias.scope !804, !noalias !801
  %10355 = getelementptr inbounds i8, ptr %10348, i64 1
  store i8 %10353, ptr %10355, align 1, !alias.scope !804, !noalias !801
  %10356 = getelementptr inbounds i8, ptr %10348, i64 2
  %10357 = getelementptr inbounds i8, ptr %10356, i64 %10333
  %10358 = getelementptr inbounds %struct._PixelPacket, ptr %10347, i64 1, i32 1
  %10359 = load i16, ptr %10358, align 2, !tbaa !30, !alias.scope !801, !noalias !804
  %10360 = lshr i16 %10359, 8
  %10361 = trunc i16 %10360 to i8
  %10362 = trunc i16 %10359 to i8
  store i8 %10362, ptr %10357, align 1, !alias.scope !804, !noalias !801
  %10363 = getelementptr inbounds i8, ptr %10357, i64 1
  store i8 %10361, ptr %10363, align 1, !alias.scope !804, !noalias !801
  %10364 = getelementptr inbounds i8, ptr %10357, i64 2
  %10365 = getelementptr inbounds i8, ptr %10364, i64 %10333
  %10366 = getelementptr inbounds %struct._PixelPacket, ptr %10347, i64 2, i32 1
  %10367 = load i16, ptr %10366, align 2, !tbaa !30, !alias.scope !801, !noalias !804
  %10368 = lshr i16 %10367, 8
  %10369 = trunc i16 %10368 to i8
  %10370 = trunc i16 %10367 to i8
  store i8 %10370, ptr %10365, align 1, !alias.scope !804, !noalias !801
  %10371 = getelementptr inbounds i8, ptr %10365, i64 1
  store i8 %10369, ptr %10371, align 1, !alias.scope !804, !noalias !801
  %10372 = getelementptr inbounds i8, ptr %10365, i64 2
  %10373 = getelementptr inbounds i8, ptr %10372, i64 %10333
  %10374 = getelementptr inbounds %struct._PixelPacket, ptr %10347, i64 3, i32 1
  %10375 = load i16, ptr %10374, align 2, !tbaa !30, !alias.scope !801, !noalias !804
  %10376 = lshr i16 %10375, 8
  %10377 = trunc i16 %10376 to i8
  %10378 = trunc i16 %10375 to i8
  store i8 %10378, ptr %10373, align 1, !alias.scope !804, !noalias !801
  %10379 = getelementptr inbounds i8, ptr %10373, i64 1
  store i8 %10377, ptr %10379, align 1, !alias.scope !804, !noalias !801
  %10380 = getelementptr inbounds i8, ptr %10373, i64 2
  %10381 = getelementptr inbounds %struct._PixelPacket, ptr %10347, i64 4
  %10382 = getelementptr inbounds i8, ptr %10380, i64 %10333
  %10383 = add i64 %10349, 4
  %10384 = icmp eq i64 %10383, %10345
  br i1 %10384, label %17421, label %10346, !llvm.loop !808

10385:                                            ; preds = %10321
  br i1 %10325, label %10386, label %17831

10386:                                            ; preds = %10385
  %10387 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %10388 = load i32, ptr %10387, align 8, !tbaa !51, !noalias !806
  %10389 = icmp eq i32 %10388, 1
  %10390 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %10391 = load i64, ptr %10390, align 8, !tbaa !47, !noalias !806
  br label %10392

10392:                                            ; preds = %10461, %10386
  %10393 = phi ptr [ %166, %10386 ], [ %10470, %10461 ]
  %10394 = phi ptr [ %88, %10386 ], [ %10471, %10461 ]
  %10395 = phi i64 [ 0, %10386 ], [ %10472, %10461 ]
  %10396 = getelementptr inbounds %struct._PixelPacket, ptr %10393, i64 0, i32 1
  %10397 = load i16, ptr %10396, align 2, !tbaa !30, !alias.scope !801, !noalias !804
  %10398 = uitofp i16 %10397 to double
  %10399 = fmul fast double %10398, 0x3EF0001000100010
  %10400 = fptrunc double %10399 to float
  %10401 = bitcast float %10400 to i32
  %10402 = lshr i32 %10401, 16
  %10403 = and i32 %10402, 32768
  %10404 = lshr i32 %10401, 23
  %10405 = and i32 %10404, 255
  %10406 = add nsw i32 %10405, -112
  %10407 = and i32 %10401, 8388607
  %10408 = icmp ult i32 %10405, 113
  br i1 %10408, label %10409, label %10426

10409:                                            ; preds = %10392
  %10410 = icmp ult i32 %10405, 102
  br i1 %10410, label %10423, label %10411

10411:                                            ; preds = %10409
  %10412 = or i32 %10407, 8388608
  %10413 = sub nuw nsw i32 126, %10405
  %10414 = sub nuw nsw i32 125, %10405
  %10415 = shl nsw i32 -1, %10414
  %10416 = xor i32 %10415, -1
  %10417 = add nuw nsw i32 %10412, %10416
  %10418 = lshr i32 %10412, %10413
  %10419 = and i32 %10418, 1
  %10420 = add nuw nsw i32 %10417, %10419
  %10421 = lshr i32 %10420, %10413
  %10422 = or i32 %10421, %10403
  br label %10423

10423:                                            ; preds = %10411, %10409
  %10424 = phi i32 [ %10422, %10411 ], [ %10403, %10409 ]
  %10425 = trunc i32 %10424 to i16
  br label %10461

10426:                                            ; preds = %10392
  %10427 = icmp eq i32 %10406, 143
  br i1 %10427, label %10428, label %10441

10428:                                            ; preds = %10426
  %10429 = icmp eq i32 %10407, 0
  br i1 %10429, label %10430, label %10433

10430:                                            ; preds = %10428
  %10431 = trunc i32 %10403 to i16
  %10432 = or i16 %10431, 31744
  br label %10461

10433:                                            ; preds = %10428
  %10434 = lshr i32 %10407, 13
  %10435 = icmp ult i32 %10407, 8192
  %10436 = zext i1 %10435 to i32
  %10437 = or i32 %10434, %10436
  %10438 = or i32 %10437, %10403
  %10439 = trunc i32 %10438 to i16
  %10440 = or i16 %10439, 31744
  br label %10461

10441:                                            ; preds = %10426
  %10442 = lshr i32 %10401, 13
  %10443 = and i32 %10442, 1
  %10444 = add nuw nsw i32 %10407, 4095
  %10445 = add nuw nsw i32 %10444, %10443
  %10446 = and i32 %10445, 8388608
  %10447 = icmp eq i32 %10446, 0
  %10448 = add nsw i32 %10405, -111
  %10449 = select i1 %10447, i32 %10406, i32 %10448
  %10450 = icmp ugt i32 %10449, 30
  br i1 %10450, label %10451, label %10454

10451:                                            ; preds = %10441
  %10452 = trunc i32 %10403 to i16
  %10453 = or i16 %10452, 31744
  br label %10461

10454:                                            ; preds = %10441
  %10455 = lshr i32 %10445, 13
  %10456 = shl nuw nsw i32 %10449, 10
  %10457 = select i1 %10447, i32 %10455, i32 0
  %10458 = or i32 %10457, %10456
  %10459 = or i32 %10458, %10403
  %10460 = trunc i32 %10459 to i16
  br label %10461

10461:                                            ; preds = %10454, %10451, %10433, %10430, %10423
  %10462 = phi i16 [ %10425, %10423 ], [ %10432, %10430 ], [ %10440, %10433 ], [ %10453, %10451 ], [ %10460, %10454 ]
  %10463 = lshr i16 %10462, 8
  %10464 = select i1 %10389, i16 %10462, i16 %10463
  %10465 = select i1 %10389, i16 %10463, i16 %10462
  %10466 = trunc i16 %10465 to i8
  %10467 = trunc i16 %10464 to i8
  store i8 %10467, ptr %10394, align 1, !alias.scope !804, !noalias !801
  %10468 = getelementptr inbounds i8, ptr %10394, i64 1
  store i8 %10466, ptr %10468, align 1, !alias.scope !804, !noalias !801
  %10469 = getelementptr inbounds i8, ptr %10394, i64 2
  %10470 = getelementptr inbounds %struct._PixelPacket, ptr %10393, i64 1
  %10471 = getelementptr inbounds i8, ptr %10469, i64 %10391
  %10472 = add nuw nsw i64 %10395, 1
  %10473 = icmp eq i64 %10472, %164
  br i1 %10473, label %17787, label %10392, !llvm.loop !809

10474:                                            ; preds = %10474, %10338
  %10475 = phi ptr [ %166, %10338 ], [ %10509, %10474 ]
  %10476 = phi ptr [ %88, %10338 ], [ %10510, %10474 ]
  %10477 = phi i64 [ 0, %10338 ], [ %10511, %10474 ]
  %10478 = getelementptr inbounds %struct._PixelPacket, ptr %10475, i64 0, i32 1
  %10479 = load i16, ptr %10478, align 2, !tbaa !30, !alias.scope !801, !noalias !804
  %10480 = lshr i16 %10479, 8
  %10481 = trunc i16 %10479 to i8
  %10482 = trunc i16 %10480 to i8
  store i8 %10482, ptr %10476, align 1, !alias.scope !804, !noalias !801
  %10483 = getelementptr inbounds i8, ptr %10476, i64 1
  store i8 %10481, ptr %10483, align 1, !alias.scope !804, !noalias !801
  %10484 = getelementptr inbounds i8, ptr %10476, i64 2
  %10485 = getelementptr inbounds i8, ptr %10484, i64 %10333
  %10486 = getelementptr inbounds %struct._PixelPacket, ptr %10475, i64 1, i32 1
  %10487 = load i16, ptr %10486, align 2, !tbaa !30, !alias.scope !801, !noalias !804
  %10488 = lshr i16 %10487, 8
  %10489 = trunc i16 %10487 to i8
  %10490 = trunc i16 %10488 to i8
  store i8 %10490, ptr %10485, align 1, !alias.scope !804, !noalias !801
  %10491 = getelementptr inbounds i8, ptr %10485, i64 1
  store i8 %10489, ptr %10491, align 1, !alias.scope !804, !noalias !801
  %10492 = getelementptr inbounds i8, ptr %10485, i64 2
  %10493 = getelementptr inbounds i8, ptr %10492, i64 %10333
  %10494 = getelementptr inbounds %struct._PixelPacket, ptr %10475, i64 2, i32 1
  %10495 = load i16, ptr %10494, align 2, !tbaa !30, !alias.scope !801, !noalias !804
  %10496 = lshr i16 %10495, 8
  %10497 = trunc i16 %10495 to i8
  %10498 = trunc i16 %10496 to i8
  store i8 %10498, ptr %10493, align 1, !alias.scope !804, !noalias !801
  %10499 = getelementptr inbounds i8, ptr %10493, i64 1
  store i8 %10497, ptr %10499, align 1, !alias.scope !804, !noalias !801
  %10500 = getelementptr inbounds i8, ptr %10493, i64 2
  %10501 = getelementptr inbounds i8, ptr %10500, i64 %10333
  %10502 = getelementptr inbounds %struct._PixelPacket, ptr %10475, i64 3, i32 1
  %10503 = load i16, ptr %10502, align 2, !tbaa !30, !alias.scope !801, !noalias !804
  %10504 = lshr i16 %10503, 8
  %10505 = trunc i16 %10503 to i8
  %10506 = trunc i16 %10504 to i8
  store i8 %10506, ptr %10501, align 1, !alias.scope !804, !noalias !801
  %10507 = getelementptr inbounds i8, ptr %10501, i64 1
  store i8 %10505, ptr %10507, align 1, !alias.scope !804, !noalias !801
  %10508 = getelementptr inbounds i8, ptr %10501, i64 2
  %10509 = getelementptr inbounds %struct._PixelPacket, ptr %10475, i64 4
  %10510 = getelementptr inbounds i8, ptr %10508, i64 %10333
  %10511 = add i64 %10477, 4
  %10512 = icmp eq i64 %10511, %10339
  br i1 %10512, label %17440, label %10474, !llvm.loop !808

10513:                                            ; preds = %10281
  %10514 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 2
  %10515 = load i32, ptr %10514, align 8, !tbaa !50, !noalias !806
  %10516 = icmp eq i32 %10515, 1
  %10517 = icmp sgt i64 %164, 0
  br i1 %10516, label %10572, label %10518

10518:                                            ; preds = %10513
  br i1 %10517, label %10519, label %17831

10519:                                            ; preds = %10518
  %10520 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %10521 = load i32, ptr %10520, align 8, !tbaa !51, !noalias !806
  %10522 = icmp eq i32 %10521, 1
  %10523 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %10524 = load i64, ptr %10523, align 8, !tbaa !47, !noalias !806
  br i1 %10522, label %10530, label %10525

10525:                                            ; preds = %10519
  %10526 = and i64 %164, 1
  %10527 = icmp eq i64 %164, 1
  br i1 %10527, label %17477, label %10528

10528:                                            ; preds = %10525
  %10529 = and i64 %164, -2
  br label %10616

10530:                                            ; preds = %10519
  %10531 = and i64 %164, 1
  %10532 = icmp eq i64 %164, 1
  br i1 %10532, label %17459, label %10533

10533:                                            ; preds = %10530
  %10534 = and i64 %164, -2
  br label %10535

10535:                                            ; preds = %10535, %10533
  %10536 = phi ptr [ %166, %10533 ], [ %10568, %10535 ]
  %10537 = phi ptr [ %88, %10533 ], [ %10569, %10535 ]
  %10538 = phi i64 [ 0, %10533 ], [ %10570, %10535 ]
  %10539 = getelementptr inbounds %struct._PixelPacket, ptr %10536, i64 0, i32 1
  %10540 = load i16, ptr %10539, align 2, !tbaa !30, !alias.scope !801, !noalias !804
  %10541 = zext i16 %10540 to i32
  %10542 = mul nuw i32 %10541, 65537
  %10543 = lshr i32 %10542, 8
  %10544 = lshr i32 %10542, 24
  %10545 = trunc i32 %10544 to i8
  %10546 = trunc i16 %10540 to i8
  %10547 = trunc i32 %10543 to i8
  %10548 = trunc i32 %10542 to i8
  store i8 %10548, ptr %10537, align 1, !alias.scope !804, !noalias !801
  %10549 = getelementptr inbounds i8, ptr %10537, i64 1
  store i8 %10547, ptr %10549, align 1, !alias.scope !804, !noalias !801
  %10550 = getelementptr inbounds i8, ptr %10537, i64 2
  store i8 %10546, ptr %10550, align 1, !alias.scope !804, !noalias !801
  %10551 = getelementptr inbounds i8, ptr %10537, i64 3
  store i8 %10545, ptr %10551, align 1, !alias.scope !804, !noalias !801
  %10552 = getelementptr inbounds i8, ptr %10537, i64 4
  %10553 = getelementptr inbounds i8, ptr %10552, i64 %10524
  %10554 = getelementptr inbounds %struct._PixelPacket, ptr %10536, i64 1, i32 1
  %10555 = load i16, ptr %10554, align 2, !tbaa !30, !alias.scope !801, !noalias !804
  %10556 = zext i16 %10555 to i32
  %10557 = mul nuw i32 %10556, 65537
  %10558 = lshr i32 %10557, 8
  %10559 = lshr i32 %10557, 24
  %10560 = trunc i32 %10559 to i8
  %10561 = trunc i16 %10555 to i8
  %10562 = trunc i32 %10558 to i8
  %10563 = trunc i32 %10557 to i8
  store i8 %10563, ptr %10553, align 1, !alias.scope !804, !noalias !801
  %10564 = getelementptr inbounds i8, ptr %10553, i64 1
  store i8 %10562, ptr %10564, align 1, !alias.scope !804, !noalias !801
  %10565 = getelementptr inbounds i8, ptr %10553, i64 2
  store i8 %10561, ptr %10565, align 1, !alias.scope !804, !noalias !801
  %10566 = getelementptr inbounds i8, ptr %10553, i64 3
  store i8 %10560, ptr %10566, align 1, !alias.scope !804, !noalias !801
  %10567 = getelementptr inbounds i8, ptr %10553, i64 4
  %10568 = getelementptr inbounds %struct._PixelPacket, ptr %10536, i64 2
  %10569 = getelementptr inbounds i8, ptr %10567, i64 %10524
  %10570 = add i64 %10538, 2
  %10571 = icmp eq i64 %10570, %10534
  br i1 %10571, label %17459, label %10535, !llvm.loop !810

10572:                                            ; preds = %10513
  br i1 %10517, label %10573, label %17831

10573:                                            ; preds = %10572
  %10574 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 14
  %10575 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 3
  %10576 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %10577 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  br label %10578

10578:                                            ; preds = %10602, %10573
  %10579 = phi ptr [ %166, %10573 ], [ %10611, %10602 ]
  %10580 = phi ptr [ %88, %10573 ], [ %10613, %10602 ]
  %10581 = phi i64 [ 0, %10573 ], [ %10614, %10602 ]
  %10582 = getelementptr inbounds %struct._PixelPacket, ptr %10579, i64 0, i32 1
  %10583 = load i16, ptr %10582, align 2, !tbaa !30, !alias.scope !801, !noalias !804
  call void @llvm.experimental.noalias.scope.decl(metadata !811)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %32) #6, !noalias !814
  %10584 = call ptr @ResetMagickMemory(ptr noundef nonnull %32, i32 noundef 0, i64 noundef 4) #6, !noalias !814
  %10585 = uitofp i16 %10583 to double
  %10586 = load double, ptr %10574, align 8, !tbaa !59, !noalias !814
  %10587 = fmul fast double %10586, %10585
  %10588 = load double, ptr %10575, align 8, !tbaa !60, !noalias !814
  %10589 = fadd fast double %10587, %10588
  %10590 = fptrunc double %10589 to float
  %10591 = load i32, ptr %10576, align 8, !tbaa !51, !noalias !814
  %10592 = icmp eq i32 %10591, 1
  %10593 = bitcast float %10590 to i32
  %10594 = lshr i32 %10593, 24
  %10595 = trunc i32 %10594 to i8
  %10596 = lshr i32 %10593, 16
  %10597 = trunc i32 %10596 to i8
  %10598 = lshr i32 %10593, 8
  %10599 = trunc i32 %10598 to i8
  %10600 = trunc i32 %10593 to i8
  br i1 %10592, label %10602, label %10601

10601:                                            ; preds = %10578
  br label %10602

10602:                                            ; preds = %10601, %10578
  %10603 = phi i8 [ %10595, %10601 ], [ %10600, %10578 ]
  %10604 = phi i8 [ %10597, %10601 ], [ %10599, %10578 ]
  %10605 = phi i8 [ %10599, %10601 ], [ %10597, %10578 ]
  %10606 = phi i8 [ %10600, %10601 ], [ %10595, %10578 ]
  store i8 %10603, ptr %10580, align 1, !alias.scope !815, !noalias !801
  %10607 = getelementptr inbounds i8, ptr %10580, i64 1
  store i8 %10604, ptr %10607, align 1, !alias.scope !815, !noalias !801
  %10608 = getelementptr inbounds i8, ptr %10580, i64 2
  store i8 %10605, ptr %10608, align 1, !alias.scope !815, !noalias !801
  %10609 = getelementptr inbounds i8, ptr %10580, i64 3
  store i8 %10606, ptr %10609, align 1, !alias.scope !815, !noalias !801
  %10610 = getelementptr inbounds i8, ptr %10580, i64 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %32) #6, !noalias !814
  %10611 = getelementptr inbounds %struct._PixelPacket, ptr %10579, i64 1
  %10612 = load i64, ptr %10577, align 8, !tbaa !47, !noalias !806
  %10613 = getelementptr inbounds i8, ptr %10610, i64 %10612
  %10614 = add nuw nsw i64 %10581, 1
  %10615 = icmp eq i64 %10614, %164
  br i1 %10615, label %17787, label %10578, !llvm.loop !816

10616:                                            ; preds = %10616, %10528
  %10617 = phi ptr [ %166, %10528 ], [ %10649, %10616 ]
  %10618 = phi ptr [ %88, %10528 ], [ %10650, %10616 ]
  %10619 = phi i64 [ 0, %10528 ], [ %10651, %10616 ]
  %10620 = getelementptr inbounds %struct._PixelPacket, ptr %10617, i64 0, i32 1
  %10621 = load i16, ptr %10620, align 2, !tbaa !30, !alias.scope !801, !noalias !804
  %10622 = zext i16 %10621 to i32
  %10623 = mul nuw i32 %10622, 65537
  %10624 = lshr i32 %10623, 24
  %10625 = lshr i32 %10623, 8
  %10626 = trunc i32 %10623 to i8
  %10627 = trunc i32 %10625 to i8
  %10628 = trunc i16 %10621 to i8
  %10629 = trunc i32 %10624 to i8
  store i8 %10629, ptr %10618, align 1, !alias.scope !804, !noalias !801
  %10630 = getelementptr inbounds i8, ptr %10618, i64 1
  store i8 %10628, ptr %10630, align 1, !alias.scope !804, !noalias !801
  %10631 = getelementptr inbounds i8, ptr %10618, i64 2
  store i8 %10627, ptr %10631, align 1, !alias.scope !804, !noalias !801
  %10632 = getelementptr inbounds i8, ptr %10618, i64 3
  store i8 %10626, ptr %10632, align 1, !alias.scope !804, !noalias !801
  %10633 = getelementptr inbounds i8, ptr %10618, i64 4
  %10634 = getelementptr inbounds i8, ptr %10633, i64 %10524
  %10635 = getelementptr inbounds %struct._PixelPacket, ptr %10617, i64 1, i32 1
  %10636 = load i16, ptr %10635, align 2, !tbaa !30, !alias.scope !801, !noalias !804
  %10637 = zext i16 %10636 to i32
  %10638 = mul nuw i32 %10637, 65537
  %10639 = lshr i32 %10638, 24
  %10640 = lshr i32 %10638, 8
  %10641 = trunc i32 %10638 to i8
  %10642 = trunc i32 %10640 to i8
  %10643 = trunc i16 %10636 to i8
  %10644 = trunc i32 %10639 to i8
  store i8 %10644, ptr %10634, align 1, !alias.scope !804, !noalias !801
  %10645 = getelementptr inbounds i8, ptr %10634, i64 1
  store i8 %10643, ptr %10645, align 1, !alias.scope !804, !noalias !801
  %10646 = getelementptr inbounds i8, ptr %10634, i64 2
  store i8 %10642, ptr %10646, align 1, !alias.scope !804, !noalias !801
  %10647 = getelementptr inbounds i8, ptr %10634, i64 3
  store i8 %10641, ptr %10647, align 1, !alias.scope !804, !noalias !801
  %10648 = getelementptr inbounds i8, ptr %10634, i64 4
  %10649 = getelementptr inbounds %struct._PixelPacket, ptr %10617, i64 2
  %10650 = getelementptr inbounds i8, ptr %10648, i64 %10524
  %10651 = add i64 %10619, 2
  %10652 = icmp eq i64 %10651, %10529
  br i1 %10652, label %17477, label %10616, !llvm.loop !810

10653:                                            ; preds = %10281
  %10654 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 2
  %10655 = load i32, ptr %10654, align 8, !tbaa !50, !noalias !806
  %10656 = icmp eq i32 %10655, 1
  br i1 %10656, label %10657, label %10717

10657:                                            ; preds = %10653
  %10658 = icmp sgt i64 %164, 0
  br i1 %10658, label %10659, label %17831

10659:                                            ; preds = %10657
  %10660 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 14
  %10661 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 3
  %10662 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %10663 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  br label %10664

10664:                                            ; preds = %10695, %10659
  %10665 = phi ptr [ %166, %10659 ], [ %10712, %10695 ]
  %10666 = phi ptr [ %88, %10659 ], [ %10714, %10695 ]
  %10667 = phi i64 [ 0, %10659 ], [ %10715, %10695 ]
  %10668 = getelementptr inbounds %struct._PixelPacket, ptr %10665, i64 0, i32 1
  %10669 = load i16, ptr %10668, align 2, !tbaa !30, !alias.scope !801, !noalias !804
  %10670 = uitofp i16 %10669 to double
  call void @llvm.experimental.noalias.scope.decl(metadata !817)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %31) #6, !noalias !820
  %10671 = call ptr @ResetMagickMemory(ptr noundef nonnull %31, i32 noundef 0, i64 noundef 8) #6, !noalias !820
  %10672 = load double, ptr %10660, align 8, !tbaa !59, !noalias !820
  %10673 = fmul fast double %10672, %10670
  %10674 = load double, ptr %10661, align 8, !tbaa !60, !noalias !820
  %10675 = fadd fast double %10673, %10674
  %10676 = load i32, ptr %10662, align 8, !tbaa !51, !noalias !820
  %10677 = icmp eq i32 %10676, 1
  %10678 = bitcast double %10675 to i64
  %10679 = lshr i64 %10678, 56
  %10680 = trunc i64 %10679 to i8
  %10681 = lshr i64 %10678, 48
  %10682 = trunc i64 %10681 to i8
  %10683 = lshr i64 %10678, 40
  %10684 = trunc i64 %10683 to i8
  %10685 = lshr i64 %10678, 32
  %10686 = trunc i64 %10685 to i8
  %10687 = lshr i64 %10678, 24
  %10688 = trunc i64 %10687 to i8
  %10689 = lshr i64 %10678, 16
  %10690 = trunc i64 %10689 to i8
  %10691 = lshr i64 %10678, 8
  %10692 = trunc i64 %10691 to i8
  %10693 = trunc i64 %10678 to i8
  br i1 %10677, label %10695, label %10694

10694:                                            ; preds = %10664
  br label %10695

10695:                                            ; preds = %10694, %10664
  %10696 = phi i8 [ %10680, %10694 ], [ %10693, %10664 ]
  %10697 = phi i8 [ %10682, %10694 ], [ %10692, %10664 ]
  %10698 = phi i8 [ %10684, %10694 ], [ %10690, %10664 ]
  %10699 = phi i8 [ %10686, %10694 ], [ %10688, %10664 ]
  %10700 = phi i8 [ %10688, %10694 ], [ %10686, %10664 ]
  %10701 = phi i8 [ %10690, %10694 ], [ %10684, %10664 ]
  %10702 = phi i8 [ %10692, %10694 ], [ %10682, %10664 ]
  %10703 = phi i8 [ %10693, %10694 ], [ %10680, %10664 ]
  store i8 %10696, ptr %10666, align 1, !alias.scope !821, !noalias !801
  %10704 = getelementptr inbounds i8, ptr %10666, i64 1
  store i8 %10697, ptr %10704, align 1, !alias.scope !821, !noalias !801
  %10705 = getelementptr inbounds i8, ptr %10666, i64 2
  store i8 %10698, ptr %10705, align 1, !alias.scope !821, !noalias !801
  %10706 = getelementptr inbounds i8, ptr %10666, i64 3
  store i8 %10699, ptr %10706, align 1, !alias.scope !821, !noalias !801
  %10707 = getelementptr inbounds i8, ptr %10666, i64 4
  store i8 %10700, ptr %10707, align 1, !alias.scope !821, !noalias !801
  %10708 = getelementptr inbounds i8, ptr %10666, i64 5
  store i8 %10701, ptr %10708, align 1, !alias.scope !821, !noalias !801
  %10709 = getelementptr inbounds i8, ptr %10666, i64 6
  store i8 %10702, ptr %10709, align 1, !alias.scope !821, !noalias !801
  %10710 = getelementptr inbounds i8, ptr %10666, i64 7
  store i8 %10703, ptr %10710, align 1, !alias.scope !821, !noalias !801
  %10711 = getelementptr inbounds i8, ptr %10666, i64 8
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %31) #6, !noalias !820
  %10712 = getelementptr inbounds %struct._PixelPacket, ptr %10665, i64 1
  %10713 = load i64, ptr %10663, align 8, !tbaa !47, !noalias !806
  %10714 = getelementptr inbounds i8, ptr %10711, i64 %10713
  %10715 = add nuw nsw i64 %10667, 1
  %10716 = icmp eq i64 %10715, %164
  br i1 %10716, label %17787, label %10664, !llvm.loop !822

10717:                                            ; preds = %10653, %10281
  %10718 = icmp sgt i64 %164, 0
  br i1 %10718, label %10719, label %17831

10719:                                            ; preds = %10717
  %10720 = add i64 %10282, -1
  %10721 = shl i64 2, %10720
  %10722 = add i64 %10721, -1
  %10723 = uitofp i64 %10722 to float
  %10724 = fmul fast float %10723, 0x3EF0001000000000
  %10725 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 14, i32 2
  %10726 = icmp sgt i64 %10282, 0
  %10727 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %10728 = load i64, ptr %10725, align 8, !tbaa !69, !noalias !823
  %10729 = load i64, ptr %10727, align 8, !tbaa !47, !noalias !806
  br label %10730

10730:                                            ; preds = %10772, %10719
  %10731 = phi i64 [ %10728, %10719 ], [ %10773, %10772 ]
  %10732 = phi ptr [ %166, %10719 ], [ %10775, %10772 ]
  %10733 = phi ptr [ %88, %10719 ], [ %10776, %10772 ]
  %10734 = phi i64 [ 0, %10719 ], [ %10777, %10772 ]
  %10735 = getelementptr inbounds %struct._PixelPacket, ptr %10732, i64 0, i32 1
  %10736 = load i16, ptr %10735, align 2, !tbaa !30, !alias.scope !801, !noalias !804
  %10737 = uitofp i16 %10736 to float
  %10738 = fmul fast float %10724, %10737
  %10739 = fpext float %10738 to double
  %10740 = fadd fast double %10739, 5.000000e-01
  %10741 = fptoui double %10740 to i64
  tail call void @llvm.experimental.noalias.scope.decl(metadata !826)
  %10742 = icmp eq i64 %10731, 0
  br i1 %10742, label %10743, label %10744

10743:                                            ; preds = %10730
  store i64 8, ptr %10725, align 8, !tbaa !69, !noalias !823
  br label %10744

10744:                                            ; preds = %10743, %10730
  %10745 = phi i64 [ 8, %10743 ], [ %10731, %10730 ]
  br i1 %10726, label %10746, label %10772

10746:                                            ; preds = %10744, %10756
  %10747 = phi i64 [ %10767, %10756 ], [ %10745, %10744 ]
  %10748 = phi i64 [ %10752, %10756 ], [ %10282, %10744 ]
  %10749 = phi ptr [ %10769, %10756 ], [ %10733, %10744 ]
  %10750 = tail call i64 @llvm.umin.i64(i64 %10748, i64 %10747)
  %10751 = sub nsw i64 %10748, %10750
  %10752 = tail call i64 @llvm.smax.i64(i64 %10751, i64 0)
  %10753 = icmp eq i64 %10747, 8
  br i1 %10753, label %10756, label %10754

10754:                                            ; preds = %10746
  %10755 = load i8, ptr %10749, align 1, !tbaa !48, !alias.scope !827, !noalias !801
  br label %10756

10756:                                            ; preds = %10754, %10746
  %10757 = phi i8 [ %10755, %10754 ], [ 0, %10746 ]
  %10758 = sub i64 %10747, %10750
  %10759 = lshr i64 %10741, %10752
  %10760 = shl nsw i64 -1, %10750
  %10761 = xor i64 %10760, -1
  %10762 = and i64 %10759, %10761
  %10763 = shl i64 %10762, %10758
  %10764 = trunc i64 %10763 to i8
  %10765 = or i8 %10757, %10764
  store i8 %10765, ptr %10749, align 1, !tbaa !48, !alias.scope !827, !noalias !801
  %10766 = icmp ule i64 %10747, %10748
  %10767 = select i1 %10766, i64 8, i64 %10758
  %10768 = zext i1 %10766 to i64
  %10769 = getelementptr inbounds i8, ptr %10749, i64 %10768
  %10770 = icmp slt i64 %10751, 1
  br i1 %10770, label %10771, label %10746, !llvm.loop !75

10771:                                            ; preds = %10756
  store i64 %10767, ptr %10725, align 8, !tbaa !69, !noalias !823
  br label %10772

10772:                                            ; preds = %10771, %10744
  %10773 = phi i64 [ %10745, %10744 ], [ %10767, %10771 ]
  %10774 = phi ptr [ %10733, %10744 ], [ %10769, %10771 ]
  %10775 = getelementptr inbounds %struct._PixelPacket, ptr %10732, i64 1
  %10776 = getelementptr inbounds i8, ptr %10774, i64 %10729
  %10777 = add nuw nsw i64 %10734, 1
  %10778 = icmp eq i64 %10777, %164
  br i1 %10778, label %17787, label %10730, !llvm.loop !828

10779:                                            ; preds = %256
  tail call void @llvm.experimental.noalias.scope.decl(metadata !829)
  tail call void @llvm.experimental.noalias.scope.decl(metadata !832)
  %10780 = load i32, ptr %0, align 8, !tbaa !834, !noalias !835
  %10781 = icmp eq i32 %10780, 2
  br i1 %10781, label %10785, label %10782

10782:                                            ; preds = %10779
  %10783 = getelementptr inbounds %struct._Image, ptr %0, i64 0, i32 53
  %10784 = tail call i32 (ptr, ptr, ptr, i64, i32, ptr, ptr, ...) @ThrowMagickException(ptr noundef %5, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, i64 noundef 2099, i32 noundef 465, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.4, ptr noundef nonnull %10783) #6, !noalias !829
  br label %17875

10785:                                            ; preds = %10779
  %10786 = load i64, ptr %2, align 8, !tbaa !45, !noalias !835
  switch i64 %10786, label %11565 [
    i64 1, label %10897
    i64 4, label %10826
    i64 8, label %10787
    i64 16, label %11152
    i64 32, label %11390
    i64 64, label %11498
  ]

10787:                                            ; preds = %10785
  %10788 = icmp sgt i64 %164, 0
  br i1 %10788, label %10789, label %17875

10789:                                            ; preds = %10787
  %10790 = icmp eq ptr %165, null
  %10791 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %10792 = load i64, ptr %10791, align 8, !tbaa !47, !noalias !835
  br i1 %10790, label %10799, label %10793

10793:                                            ; preds = %10789
  %10794 = add i64 %164, -1
  %10795 = and i64 %164, 7
  %10796 = icmp ult i64 %10794, 7
  br i1 %10796, label %17505, label %10797

10797:                                            ; preds = %10793
  %10798 = and i64 %164, -8
  br label %11098

10799:                                            ; preds = %10789
  %10800 = add i64 %164, -1
  %10801 = and i64 %164, 7
  %10802 = icmp ult i64 %10800, 7
  br i1 %10802, label %17495, label %10803

10803:                                            ; preds = %10799
  %10804 = and i64 %164, -8
  br label %10805

10805:                                            ; preds = %10805, %10803
  %10806 = phi ptr [ %88, %10803 ], [ %10823, %10805 ]
  %10807 = phi i64 [ 0, %10803 ], [ %10824, %10805 ]
  %10808 = getelementptr inbounds i8, ptr %10806, i64 1
  store i8 0, ptr %10806, align 1, !tbaa !48, !alias.scope !832, !noalias !829
  %10809 = getelementptr inbounds i8, ptr %10808, i64 %10792
  %10810 = getelementptr inbounds i8, ptr %10809, i64 1
  store i8 0, ptr %10809, align 1, !tbaa !48, !alias.scope !832, !noalias !829
  %10811 = getelementptr inbounds i8, ptr %10810, i64 %10792
  %10812 = getelementptr inbounds i8, ptr %10811, i64 1
  store i8 0, ptr %10811, align 1, !tbaa !48, !alias.scope !832, !noalias !829
  %10813 = getelementptr inbounds i8, ptr %10812, i64 %10792
  %10814 = getelementptr inbounds i8, ptr %10813, i64 1
  store i8 0, ptr %10813, align 1, !tbaa !48, !alias.scope !832, !noalias !829
  %10815 = getelementptr inbounds i8, ptr %10814, i64 %10792
  %10816 = getelementptr inbounds i8, ptr %10815, i64 1
  store i8 0, ptr %10815, align 1, !tbaa !48, !alias.scope !832, !noalias !829
  %10817 = getelementptr inbounds i8, ptr %10816, i64 %10792
  %10818 = getelementptr inbounds i8, ptr %10817, i64 1
  store i8 0, ptr %10817, align 1, !tbaa !48, !alias.scope !832, !noalias !829
  %10819 = getelementptr inbounds i8, ptr %10818, i64 %10792
  %10820 = getelementptr inbounds i8, ptr %10819, i64 1
  store i8 0, ptr %10819, align 1, !tbaa !48, !alias.scope !832, !noalias !829
  %10821 = getelementptr inbounds i8, ptr %10820, i64 %10792
  %10822 = getelementptr inbounds i8, ptr %10821, i64 1
  store i8 0, ptr %10821, align 1, !tbaa !48, !alias.scope !832, !noalias !829
  %10823 = getelementptr inbounds i8, ptr %10822, i64 %10792
  %10824 = add i64 %10807, 8
  %10825 = icmp eq i64 %10824, %10804
  br i1 %10825, label %17495, label %10805, !llvm.loop !836

10826:                                            ; preds = %10785
  %10827 = add i64 %164, -1
  %10828 = icmp sgt i64 %10827, 0
  br i1 %10828, label %10829, label %11089

10829:                                            ; preds = %10826
  %10830 = add i64 %164, -2
  %10831 = lshr i64 %10830, 1
  %10832 = add nuw i64 %10831, 1
  %10833 = icmp ult i64 %10830, 30
  br i1 %10833, label %10893, label %10834

10834:                                            ; preds = %10829
  %10835 = and i64 %10832, -16
  %10836 = shl i64 %10835, 1
  %10837 = getelementptr i8, ptr %88, i64 %10835
  %10838 = shl i64 %10835, 2
  %10839 = getelementptr i8, ptr %165, i64 %10838
  br label %10840

10840:                                            ; preds = %10840, %10834
  %10841 = phi i64 [ 0, %10834 ], [ %10889, %10840 ]
  %10842 = getelementptr i8, ptr %88, i64 %10841
  %10843 = shl i64 %10841, 2
  %10844 = getelementptr i8, ptr %165, i64 %10843
  %10845 = shl i64 %10841, 2
  %10846 = or i64 %10845, 16
  %10847 = getelementptr i8, ptr %165, i64 %10846
  %10848 = shl i64 %10841, 2
  %10849 = or i64 %10848, 32
  %10850 = getelementptr i8, ptr %165, i64 %10849
  %10851 = shl i64 %10841, 2
  %10852 = or i64 %10851, 48
  %10853 = getelementptr i8, ptr %165, i64 %10852
  %10854 = load <8 x i16>, ptr %10844, align 2, !tbaa !37, !alias.scope !829, !noalias !832
  %10855 = load <8 x i16>, ptr %10847, align 2, !tbaa !37, !alias.scope !829, !noalias !832
  %10856 = load <8 x i16>, ptr %10850, align 2, !tbaa !37, !alias.scope !829, !noalias !832
  %10857 = load <8 x i16>, ptr %10853, align 2, !tbaa !37, !alias.scope !829, !noalias !832
  %10858 = shufflevector <8 x i16> %10854, <8 x i16> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %10859 = shufflevector <8 x i16> %10855, <8 x i16> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %10860 = shufflevector <8 x i16> %10856, <8 x i16> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %10861 = shufflevector <8 x i16> %10857, <8 x i16> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %10862 = shufflevector <8 x i16> %10854, <8 x i16> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>
  %10863 = shufflevector <8 x i16> %10855, <8 x i16> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>
  %10864 = shufflevector <8 x i16> %10856, <8 x i16> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>
  %10865 = shufflevector <8 x i16> %10857, <8 x i16> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>
  %10866 = trunc <4 x i16> %10858 to <4 x i8>
  %10867 = trunc <4 x i16> %10859 to <4 x i8>
  %10868 = trunc <4 x i16> %10860 to <4 x i8>
  %10869 = trunc <4 x i16> %10861 to <4 x i8>
  %10870 = shl <4 x i8> %10866, <i8 4, i8 4, i8 4, i8 4>
  %10871 = shl <4 x i8> %10867, <i8 4, i8 4, i8 4, i8 4>
  %10872 = shl <4 x i8> %10868, <i8 4, i8 4, i8 4, i8 4>
  %10873 = shl <4 x i8> %10869, <i8 4, i8 4, i8 4, i8 4>
  %10874 = trunc <4 x i16> %10862 to <4 x i8>
  %10875 = trunc <4 x i16> %10863 to <4 x i8>
  %10876 = trunc <4 x i16> %10864 to <4 x i8>
  %10877 = trunc <4 x i16> %10865 to <4 x i8>
  %10878 = and <4 x i8> %10874, <i8 15, i8 15, i8 15, i8 15>
  %10879 = and <4 x i8> %10875, <i8 15, i8 15, i8 15, i8 15>
  %10880 = and <4 x i8> %10876, <i8 15, i8 15, i8 15, i8 15>
  %10881 = and <4 x i8> %10877, <i8 15, i8 15, i8 15, i8 15>
  %10882 = or <4 x i8> %10878, %10870
  %10883 = or <4 x i8> %10879, %10871
  %10884 = or <4 x i8> %10880, %10872
  %10885 = or <4 x i8> %10881, %10873
  store <4 x i8> %10882, ptr %10842, align 1, !tbaa !48, !alias.scope !832, !noalias !829
  %10886 = getelementptr i8, ptr %10842, i64 4
  store <4 x i8> %10883, ptr %10886, align 1, !tbaa !48, !alias.scope !832, !noalias !829
  %10887 = getelementptr i8, ptr %10842, i64 8
  store <4 x i8> %10884, ptr %10887, align 1, !tbaa !48, !alias.scope !832, !noalias !829
  %10888 = getelementptr i8, ptr %10842, i64 12
  store <4 x i8> %10885, ptr %10888, align 1, !tbaa !48, !alias.scope !832, !noalias !829
  %10889 = add nuw i64 %10841, 16
  %10890 = icmp eq i64 %10889, %10835
  br i1 %10890, label %10891, label %10840, !llvm.loop !837

10891:                                            ; preds = %10840
  %10892 = icmp eq i64 %10832, %10835
  br i1 %10892, label %11089, label %10893

10893:                                            ; preds = %10829, %10891
  %10894 = phi i64 [ 0, %10829 ], [ %10836, %10891 ]
  %10895 = phi ptr [ %88, %10829 ], [ %10837, %10891 ]
  %10896 = phi ptr [ %165, %10829 ], [ %10839, %10891 ]
  br label %11073

10897:                                            ; preds = %10785
  %10898 = icmp sgt i64 %164, 7
  br i1 %10898, label %10899, label %11016

10899:                                            ; preds = %10897
  %10900 = add i64 %164, -7
  %10901 = tail call i64 @llvm.umin.i64(i64 %10900, i64 8)
  %10902 = sub i64 %164, %10901
  %10903 = lshr i64 %10902, 3
  %10904 = add nuw nsw i64 %10903, 1
  %10905 = icmp ult i64 %10902, 120
  br i1 %10905, label %10960, label %10906

10906:                                            ; preds = %10899
  %10907 = and i64 %10904, 4611686018427387888
  %10908 = shl i64 %10907, 3
  %10909 = sub i64 %10900, %10908
  %10910 = getelementptr i8, ptr %88, i64 %10907
  %10911 = shl i64 %10907, 4
  %10912 = getelementptr i8, ptr %165, i64 %10911
  br label %10913

10913:                                            ; preds = %10913, %10906
  %10914 = phi i64 [ 0, %10906 ], [ %10956, %10913 ]
  %10915 = getelementptr i8, ptr %88, i64 %10914
  %10916 = shl i64 %10914, 4
  %10917 = getelementptr i8, ptr %165, i64 %10916
  %10918 = load <128 x i16>, ptr %10917, align 2, !tbaa !37, !alias.scope !829, !noalias !832
  %10919 = shufflevector <128 x i16> %10918, <128 x i16> poison, <16 x i32> <i32 0, i32 8, i32 16, i32 24, i32 32, i32 40, i32 48, i32 56, i32 64, i32 72, i32 80, i32 88, i32 96, i32 104, i32 112, i32 120>
  %10920 = shufflevector <128 x i16> %10918, <128 x i16> poison, <16 x i32> <i32 1, i32 9, i32 17, i32 25, i32 33, i32 41, i32 49, i32 57, i32 65, i32 73, i32 81, i32 89, i32 97, i32 105, i32 113, i32 121>
  %10921 = shufflevector <128 x i16> %10918, <128 x i16> poison, <16 x i32> <i32 2, i32 10, i32 18, i32 26, i32 34, i32 42, i32 50, i32 58, i32 66, i32 74, i32 82, i32 90, i32 98, i32 106, i32 114, i32 122>
  %10922 = shufflevector <128 x i16> %10918, <128 x i16> poison, <16 x i32> <i32 3, i32 11, i32 19, i32 27, i32 35, i32 43, i32 51, i32 59, i32 67, i32 75, i32 83, i32 91, i32 99, i32 107, i32 115, i32 123>
  %10923 = shufflevector <128 x i16> %10918, <128 x i16> poison, <16 x i32> <i32 4, i32 12, i32 20, i32 28, i32 36, i32 44, i32 52, i32 60, i32 68, i32 76, i32 84, i32 92, i32 100, i32 108, i32 116, i32 124>
  %10924 = shufflevector <128 x i16> %10918, <128 x i16> poison, <16 x i32> <i32 5, i32 13, i32 21, i32 29, i32 37, i32 45, i32 53, i32 61, i32 69, i32 77, i32 85, i32 93, i32 101, i32 109, i32 117, i32 125>
  %10925 = shufflevector <128 x i16> %10918, <128 x i16> poison, <16 x i32> <i32 6, i32 14, i32 22, i32 30, i32 38, i32 46, i32 54, i32 62, i32 70, i32 78, i32 86, i32 94, i32 102, i32 110, i32 118, i32 126>
  %10926 = shufflevector <128 x i16> %10918, <128 x i16> poison, <16 x i32> <i32 7, i32 15, i32 23, i32 31, i32 39, i32 47, i32 55, i32 63, i32 71, i32 79, i32 87, i32 95, i32 103, i32 111, i32 119, i32 127>
  %10927 = trunc <16 x i16> %10919 to <16 x i8>
  %10928 = shl <16 x i8> %10927, <i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7>
  %10929 = trunc <16 x i16> %10920 to <16 x i8>
  %10930 = shl <16 x i8> %10929, <i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6, i8 6>
  %10931 = and <16 x i8> %10930, <i8 64, i8 64, i8 64, i8 64, i8 64, i8 64, i8 64, i8 64, i8 64, i8 64, i8 64, i8 64, i8 64, i8 64, i8 64, i8 64>
  %10932 = or <16 x i8> %10931, %10928
  %10933 = trunc <16 x i16> %10921 to <16 x i8>
  %10934 = shl <16 x i8> %10933, <i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5>
  %10935 = and <16 x i8> %10934, <i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32>
  %10936 = or <16 x i8> %10935, %10932
  %10937 = trunc <16 x i16> %10922 to <16 x i8>
  %10938 = shl <16 x i8> %10937, <i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4>
  %10939 = and <16 x i8> %10938, <i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16>
  %10940 = or <16 x i8> %10939, %10936
  %10941 = trunc <16 x i16> %10923 to <16 x i8>
  %10942 = shl <16 x i8> %10941, <i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3>
  %10943 = and <16 x i8> %10942, <i8 8, i8 8, i8 8, i8 8, i8 8, i8 8, i8 8, i8 8, i8 8, i8 8, i8 8, i8 8, i8 8, i8 8, i8 8, i8 8>
  %10944 = or <16 x i8> %10943, %10940
  %10945 = trunc <16 x i16> %10924 to <16 x i8>
  %10946 = shl <16 x i8> %10945, <i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2>
  %10947 = and <16 x i8> %10946, <i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4>
  %10948 = or <16 x i8> %10947, %10944
  %10949 = trunc <16 x i16> %10925 to <16 x i8>
  %10950 = shl <16 x i8> %10949, <i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1>
  %10951 = and <16 x i8> %10950, <i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2>
  %10952 = or <16 x i8> %10951, %10948
  %10953 = trunc <16 x i16> %10926 to <16 x i8>
  %10954 = and <16 x i8> %10953, <i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1>
  %10955 = or <16 x i8> %10952, %10954
  store <16 x i8> %10955, ptr %10915, align 1, !tbaa !48, !alias.scope !832, !noalias !829
  %10956 = add nuw i64 %10914, 16
  %10957 = icmp eq i64 %10956, %10907
  br i1 %10957, label %10958, label %10913, !llvm.loop !840

10958:                                            ; preds = %10913
  %10959 = icmp eq i64 %10904, %10907
  br i1 %10959, label %11016, label %10960

10960:                                            ; preds = %10899, %10958
  %10961 = phi i64 [ %10900, %10899 ], [ %10909, %10958 ]
  %10962 = phi ptr [ %88, %10899 ], [ %10910, %10958 ]
  %10963 = phi ptr [ %165, %10899 ], [ %10912, %10958 ]
  br label %10964

10964:                                            ; preds = %10960, %10964
  %10965 = phi i64 [ %11014, %10964 ], [ %10961, %10960 ]
  %10966 = phi ptr [ %11013, %10964 ], [ %10962, %10960 ]
  %10967 = phi ptr [ %11008, %10964 ], [ %10963, %10960 ]
  %10968 = getelementptr inbounds i16, ptr %10967, i64 1
  %10969 = load i16, ptr %10967, align 2, !tbaa !37, !alias.scope !829, !noalias !832
  %10970 = trunc i16 %10969 to i8
  %10971 = shl i8 %10970, 7
  %10972 = getelementptr inbounds i16, ptr %10967, i64 2
  %10973 = load i16, ptr %10968, align 2, !tbaa !37, !alias.scope !829, !noalias !832
  %10974 = trunc i16 %10973 to i8
  %10975 = shl i8 %10974, 6
  %10976 = and i8 %10975, 64
  %10977 = or i8 %10976, %10971
  %10978 = getelementptr inbounds i16, ptr %10967, i64 3
  %10979 = load i16, ptr %10972, align 2, !tbaa !37, !alias.scope !829, !noalias !832
  %10980 = trunc i16 %10979 to i8
  %10981 = shl i8 %10980, 5
  %10982 = and i8 %10981, 32
  %10983 = or i8 %10982, %10977
  %10984 = getelementptr inbounds i16, ptr %10967, i64 4
  %10985 = load i16, ptr %10978, align 2, !tbaa !37, !alias.scope !829, !noalias !832
  %10986 = trunc i16 %10985 to i8
  %10987 = shl i8 %10986, 4
  %10988 = and i8 %10987, 16
  %10989 = or i8 %10988, %10983
  %10990 = getelementptr inbounds i16, ptr %10967, i64 5
  %10991 = load i16, ptr %10984, align 2, !tbaa !37, !alias.scope !829, !noalias !832
  %10992 = trunc i16 %10991 to i8
  %10993 = shl i8 %10992, 3
  %10994 = and i8 %10993, 8
  %10995 = or i8 %10994, %10989
  %10996 = getelementptr inbounds i16, ptr %10967, i64 6
  %10997 = load i16, ptr %10990, align 2, !tbaa !37, !alias.scope !829, !noalias !832
  %10998 = trunc i16 %10997 to i8
  %10999 = shl i8 %10998, 2
  %11000 = and i8 %10999, 4
  %11001 = or i8 %11000, %10995
  %11002 = getelementptr inbounds i16, ptr %10967, i64 7
  %11003 = load i16, ptr %10996, align 2, !tbaa !37, !alias.scope !829, !noalias !832
  %11004 = trunc i16 %11003 to i8
  %11005 = shl i8 %11004, 1
  %11006 = and i8 %11005, 2
  %11007 = or i8 %11006, %11001
  %11008 = getelementptr inbounds i16, ptr %10967, i64 8
  %11009 = load i16, ptr %11002, align 2, !tbaa !37, !alias.scope !829, !noalias !832
  %11010 = trunc i16 %11009 to i8
  %11011 = and i8 %11010, 1
  %11012 = or i8 %11007, %11011
  store i8 %11012, ptr %10966, align 1, !tbaa !48, !alias.scope !832, !noalias !829
  %11013 = getelementptr inbounds i8, ptr %10966, i64 1
  %11014 = add nsw i64 %10965, -8
  %11015 = icmp ugt i64 %10965, 8
  br i1 %11015, label %10964, label %11016, !llvm.loop !841

11016:                                            ; preds = %10964, %10958, %10897
  %11017 = phi ptr [ %165, %10897 ], [ %10912, %10958 ], [ %11008, %10964 ]
  %11018 = phi ptr [ %88, %10897 ], [ %10910, %10958 ], [ %11013, %10964 ]
  %11019 = and i64 %164, 7
  %11020 = icmp eq i64 %11019, 0
  br i1 %11020, label %17787, label %11021

11021:                                            ; preds = %11016
  %11022 = load i16, ptr %11017, align 2, !tbaa !37, !alias.scope !829, !noalias !832
  %11023 = trunc i16 %11022 to i8
  %11024 = shl i8 %11023, 7
  %11025 = icmp ugt i64 %11019, 1
  br i1 %11025, label %11026, label %11620, !llvm.loop !842

11026:                                            ; preds = %11021
  %11027 = getelementptr inbounds i16, ptr %11017, i64 1
  %11028 = load i16, ptr %11027, align 2, !tbaa !37, !alias.scope !829, !noalias !832
  %11029 = trunc i16 %11028 to i8
  %11030 = shl i8 %11029, 6
  %11031 = and i8 %11030, 64
  %11032 = or i8 %11024, %11031
  %11033 = icmp eq i64 %11019, 2
  br i1 %11033, label %11620, label %11034, !llvm.loop !842

11034:                                            ; preds = %11026
  %11035 = getelementptr inbounds i16, ptr %11017, i64 2
  %11036 = load i16, ptr %11035, align 2, !tbaa !37, !alias.scope !829, !noalias !832
  %11037 = trunc i16 %11036 to i8
  %11038 = shl i8 %11037, 5
  %11039 = and i8 %11038, 32
  %11040 = or i8 %11032, %11039
  %11041 = icmp ugt i64 %11019, 3
  br i1 %11041, label %11042, label %11620, !llvm.loop !842

11042:                                            ; preds = %11034
  %11043 = getelementptr inbounds i16, ptr %11017, i64 3
  %11044 = load i16, ptr %11043, align 2, !tbaa !37, !alias.scope !829, !noalias !832
  %11045 = trunc i16 %11044 to i8
  %11046 = shl i8 %11045, 4
  %11047 = and i8 %11046, 16
  %11048 = or i8 %11040, %11047
  %11049 = icmp eq i64 %11019, 4
  br i1 %11049, label %11620, label %11050, !llvm.loop !842

11050:                                            ; preds = %11042
  %11051 = getelementptr inbounds i16, ptr %11017, i64 4
  %11052 = load i16, ptr %11051, align 2, !tbaa !37, !alias.scope !829, !noalias !832
  %11053 = trunc i16 %11052 to i8
  %11054 = shl i8 %11053, 3
  %11055 = and i8 %11054, 8
  %11056 = or i8 %11048, %11055
  %11057 = icmp ugt i64 %11019, 5
  br i1 %11057, label %11058, label %11620, !llvm.loop !842

11058:                                            ; preds = %11050
  %11059 = getelementptr inbounds i16, ptr %11017, i64 5
  %11060 = load i16, ptr %11059, align 2, !tbaa !37, !alias.scope !829, !noalias !832
  %11061 = trunc i16 %11060 to i8
  %11062 = shl i8 %11061, 2
  %11063 = and i8 %11062, 4
  %11064 = or i8 %11056, %11063
  %11065 = icmp eq i64 %11019, 6
  br i1 %11065, label %11620, label %11066, !llvm.loop !842

11066:                                            ; preds = %11058
  %11067 = getelementptr inbounds i16, ptr %11017, i64 6
  %11068 = load i16, ptr %11067, align 2, !tbaa !37, !alias.scope !829, !noalias !832
  %11069 = trunc i16 %11068 to i8
  %11070 = shl i8 %11069, 1
  %11071 = and i8 %11070, 2
  %11072 = or i8 %11064, %11071
  br label %11620

11073:                                            ; preds = %10893, %11073
  %11074 = phi i64 [ %11087, %11073 ], [ %10894, %10893 ]
  %11075 = phi ptr [ %11086, %11073 ], [ %10895, %10893 ]
  %11076 = phi ptr [ %11081, %11073 ], [ %10896, %10893 ]
  %11077 = getelementptr inbounds i16, ptr %11076, i64 1
  %11078 = load i16, ptr %11076, align 2, !tbaa !37, !alias.scope !829, !noalias !832
  %11079 = trunc i16 %11078 to i8
  %11080 = shl i8 %11079, 4
  %11081 = getelementptr inbounds i16, ptr %11076, i64 2
  %11082 = load i16, ptr %11077, align 2, !tbaa !37, !alias.scope !829, !noalias !832
  %11083 = trunc i16 %11082 to i8
  %11084 = and i8 %11083, 15
  %11085 = or i8 %11084, %11080
  store i8 %11085, ptr %11075, align 1, !tbaa !48, !alias.scope !832, !noalias !829
  %11086 = getelementptr inbounds i8, ptr %11075, i64 1
  %11087 = add nuw nsw i64 %11074, 2
  %11088 = icmp slt i64 %11087, %10827
  br i1 %11088, label %11073, label %11089, !llvm.loop !843

11089:                                            ; preds = %11073, %10891, %10826
  %11090 = phi ptr [ %165, %10826 ], [ %10839, %10891 ], [ %11081, %11073 ]
  %11091 = phi ptr [ %88, %10826 ], [ %10837, %10891 ], [ %11086, %11073 ]
  %11092 = and i64 %164, 1
  %11093 = icmp eq i64 %11092, 0
  br i1 %11093, label %17787, label %11094

11094:                                            ; preds = %11089
  %11095 = load i16, ptr %11090, align 2, !tbaa !37, !alias.scope !829, !noalias !832
  %11096 = trunc i16 %11095 to i8
  %11097 = shl i8 %11096, 4
  store i8 %11097, ptr %11091, align 1, !tbaa !48, !alias.scope !832, !noalias !829
  br label %17787

11098:                                            ; preds = %11098, %10797
  %11099 = phi i64 [ 0, %10797 ], [ %11149, %11098 ]
  %11100 = phi ptr [ %88, %10797 ], [ %11148, %11098 ]
  %11101 = phi i64 [ 0, %10797 ], [ %11150, %11098 ]
  %11102 = getelementptr inbounds i16, ptr %165, i64 %11099
  %11103 = load i16, ptr %11102, align 2, !tbaa !37, !alias.scope !829, !noalias !832
  %11104 = trunc i16 %11103 to i8
  %11105 = getelementptr inbounds i8, ptr %11100, i64 1
  store i8 %11104, ptr %11100, align 1, !tbaa !48, !alias.scope !832, !noalias !829
  %11106 = getelementptr inbounds i8, ptr %11105, i64 %10792
  %11107 = or i64 %11099, 1
  %11108 = getelementptr inbounds i16, ptr %165, i64 %11107
  %11109 = load i16, ptr %11108, align 2, !tbaa !37, !alias.scope !829, !noalias !832
  %11110 = trunc i16 %11109 to i8
  %11111 = getelementptr inbounds i8, ptr %11106, i64 1
  store i8 %11110, ptr %11106, align 1, !tbaa !48, !alias.scope !832, !noalias !829
  %11112 = getelementptr inbounds i8, ptr %11111, i64 %10792
  %11113 = or i64 %11099, 2
  %11114 = getelementptr inbounds i16, ptr %165, i64 %11113
  %11115 = load i16, ptr %11114, align 2, !tbaa !37, !alias.scope !829, !noalias !832
  %11116 = trunc i16 %11115 to i8
  %11117 = getelementptr inbounds i8, ptr %11112, i64 1
  store i8 %11116, ptr %11112, align 1, !tbaa !48, !alias.scope !832, !noalias !829
  %11118 = getelementptr inbounds i8, ptr %11117, i64 %10792
  %11119 = or i64 %11099, 3
  %11120 = getelementptr inbounds i16, ptr %165, i64 %11119
  %11121 = load i16, ptr %11120, align 2, !tbaa !37, !alias.scope !829, !noalias !832
  %11122 = trunc i16 %11121 to i8
  %11123 = getelementptr inbounds i8, ptr %11118, i64 1
  store i8 %11122, ptr %11118, align 1, !tbaa !48, !alias.scope !832, !noalias !829
  %11124 = getelementptr inbounds i8, ptr %11123, i64 %10792
  %11125 = or i64 %11099, 4
  %11126 = getelementptr inbounds i16, ptr %165, i64 %11125
  %11127 = load i16, ptr %11126, align 2, !tbaa !37, !alias.scope !829, !noalias !832
  %11128 = trunc i16 %11127 to i8
  %11129 = getelementptr inbounds i8, ptr %11124, i64 1
  store i8 %11128, ptr %11124, align 1, !tbaa !48, !alias.scope !832, !noalias !829
  %11130 = getelementptr inbounds i8, ptr %11129, i64 %10792
  %11131 = or i64 %11099, 5
  %11132 = getelementptr inbounds i16, ptr %165, i64 %11131
  %11133 = load i16, ptr %11132, align 2, !tbaa !37, !alias.scope !829, !noalias !832
  %11134 = trunc i16 %11133 to i8
  %11135 = getelementptr inbounds i8, ptr %11130, i64 1
  store i8 %11134, ptr %11130, align 1, !tbaa !48, !alias.scope !832, !noalias !829
  %11136 = getelementptr inbounds i8, ptr %11135, i64 %10792
  %11137 = or i64 %11099, 6
  %11138 = getelementptr inbounds i16, ptr %165, i64 %11137
  %11139 = load i16, ptr %11138, align 2, !tbaa !37, !alias.scope !829, !noalias !832
  %11140 = trunc i16 %11139 to i8
  %11141 = getelementptr inbounds i8, ptr %11136, i64 1
  store i8 %11140, ptr %11136, align 1, !tbaa !48, !alias.scope !832, !noalias !829
  %11142 = getelementptr inbounds i8, ptr %11141, i64 %10792
  %11143 = or i64 %11099, 7
  %11144 = getelementptr inbounds i16, ptr %165, i64 %11143
  %11145 = load i16, ptr %11144, align 2, !tbaa !37, !alias.scope !829, !noalias !832
  %11146 = trunc i16 %11145 to i8
  %11147 = getelementptr inbounds i8, ptr %11142, i64 1
  store i8 %11146, ptr %11142, align 1, !tbaa !48, !alias.scope !832, !noalias !829
  %11148 = getelementptr inbounds i8, ptr %11147, i64 %10792
  %11149 = add nuw nsw i64 %11099, 8
  %11150 = add i64 %11101, 8
  %11151 = icmp eq i64 %11150, %10798
  br i1 %11151, label %17505, label %11098, !llvm.loop !836

11152:                                            ; preds = %10785
  %11153 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 2
  %11154 = load i32, ptr %11153, align 8, !tbaa !50, !noalias !835
  %11155 = icmp eq i32 %11154, 1
  %11156 = icmp sgt i64 %164, 0
  br i1 %11155, label %11256, label %11157

11157:                                            ; preds = %11152
  br i1 %11156, label %11158, label %17875

11158:                                            ; preds = %11157
  %11159 = icmp eq ptr %165, null
  %11160 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %11161 = load i64, ptr %11160, align 8, !tbaa !47, !noalias !835
  br i1 %11159, label %11162, label %11197

11162:                                            ; preds = %11158
  %11163 = add i64 %164, -1
  %11164 = and i64 %164, 7
  %11165 = icmp ult i64 %11163, 7
  br i1 %11165, label %17521, label %11166

11166:                                            ; preds = %11162
  %11167 = and i64 %164, -8
  br label %11168

11168:                                            ; preds = %11168, %11166
  %11169 = phi ptr [ %88, %11166 ], [ %11194, %11168 ]
  %11170 = phi i64 [ 0, %11166 ], [ %11195, %11168 ]
  store i8 0, ptr %11169, align 1, !alias.scope !832, !noalias !829
  %11171 = getelementptr inbounds i8, ptr %11169, i64 1
  store i8 0, ptr %11171, align 1, !alias.scope !832, !noalias !829
  %11172 = getelementptr inbounds i8, ptr %11169, i64 2
  %11173 = getelementptr inbounds i8, ptr %11172, i64 %11161
  store i8 0, ptr %11173, align 1, !alias.scope !832, !noalias !829
  %11174 = getelementptr inbounds i8, ptr %11173, i64 1
  store i8 0, ptr %11174, align 1, !alias.scope !832, !noalias !829
  %11175 = getelementptr inbounds i8, ptr %11173, i64 2
  %11176 = getelementptr inbounds i8, ptr %11175, i64 %11161
  store i8 0, ptr %11176, align 1, !alias.scope !832, !noalias !829
  %11177 = getelementptr inbounds i8, ptr %11176, i64 1
  store i8 0, ptr %11177, align 1, !alias.scope !832, !noalias !829
  %11178 = getelementptr inbounds i8, ptr %11176, i64 2
  %11179 = getelementptr inbounds i8, ptr %11178, i64 %11161
  store i8 0, ptr %11179, align 1, !alias.scope !832, !noalias !829
  %11180 = getelementptr inbounds i8, ptr %11179, i64 1
  store i8 0, ptr %11180, align 1, !alias.scope !832, !noalias !829
  %11181 = getelementptr inbounds i8, ptr %11179, i64 2
  %11182 = getelementptr inbounds i8, ptr %11181, i64 %11161
  store i8 0, ptr %11182, align 1, !alias.scope !832, !noalias !829
  %11183 = getelementptr inbounds i8, ptr %11182, i64 1
  store i8 0, ptr %11183, align 1, !alias.scope !832, !noalias !829
  %11184 = getelementptr inbounds i8, ptr %11182, i64 2
  %11185 = getelementptr inbounds i8, ptr %11184, i64 %11161
  store i8 0, ptr %11185, align 1, !alias.scope !832, !noalias !829
  %11186 = getelementptr inbounds i8, ptr %11185, i64 1
  store i8 0, ptr %11186, align 1, !alias.scope !832, !noalias !829
  %11187 = getelementptr inbounds i8, ptr %11185, i64 2
  %11188 = getelementptr inbounds i8, ptr %11187, i64 %11161
  store i8 0, ptr %11188, align 1, !alias.scope !832, !noalias !829
  %11189 = getelementptr inbounds i8, ptr %11188, i64 1
  store i8 0, ptr %11189, align 1, !alias.scope !832, !noalias !829
  %11190 = getelementptr inbounds i8, ptr %11188, i64 2
  %11191 = getelementptr inbounds i8, ptr %11190, i64 %11161
  store i8 0, ptr %11191, align 1, !alias.scope !832, !noalias !829
  %11192 = getelementptr inbounds i8, ptr %11191, i64 1
  store i8 0, ptr %11192, align 1, !alias.scope !832, !noalias !829
  %11193 = getelementptr inbounds i8, ptr %11191, i64 2
  %11194 = getelementptr inbounds i8, ptr %11193, i64 %11161
  %11195 = add i64 %11170, 8
  %11196 = icmp eq i64 %11195, %11167
  br i1 %11196, label %17521, label %11168, !llvm.loop !844

11197:                                            ; preds = %11158
  %11198 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %11199 = load i32, ptr %11198, align 8, !tbaa !51, !noalias !835
  %11200 = freeze i32 %11199
  %11201 = icmp eq i32 %11200, 1
  br i1 %11201, label %11208, label %11202

11202:                                            ; preds = %11197
  %11203 = add i64 %164, -1
  %11204 = and i64 %164, 3
  %11205 = icmp ult i64 %11203, 3
  br i1 %11205, label %17551, label %11206

11206:                                            ; preds = %11202
  %11207 = and i64 %164, -4
  br label %11348

11208:                                            ; preds = %11197
  %11209 = add i64 %164, -1
  %11210 = and i64 %164, 3
  %11211 = icmp ult i64 %11209, 3
  br i1 %11211, label %17532, label %11212

11212:                                            ; preds = %11208
  %11213 = and i64 %164, -4
  br label %11214

11214:                                            ; preds = %11214, %11212
  %11215 = phi i64 [ 0, %11212 ], [ %11253, %11214 ]
  %11216 = phi ptr [ %88, %11212 ], [ %11252, %11214 ]
  %11217 = phi i64 [ 0, %11212 ], [ %11254, %11214 ]
  %11218 = getelementptr inbounds i16, ptr %165, i64 %11215
  %11219 = load i16, ptr %11218, align 2, !tbaa !37, !alias.scope !829, !noalias !832
  %11220 = lshr i16 %11219, 8
  %11221 = trunc i16 %11220 to i8
  %11222 = trunc i16 %11219 to i8
  store i8 %11222, ptr %11216, align 1, !alias.scope !832, !noalias !829
  %11223 = getelementptr inbounds i8, ptr %11216, i64 1
  store i8 %11221, ptr %11223, align 1, !alias.scope !832, !noalias !829
  %11224 = getelementptr inbounds i8, ptr %11216, i64 2
  %11225 = getelementptr inbounds i8, ptr %11224, i64 %11161
  %11226 = or i64 %11215, 1
  %11227 = getelementptr inbounds i16, ptr %165, i64 %11226
  %11228 = load i16, ptr %11227, align 2, !tbaa !37, !alias.scope !829, !noalias !832
  %11229 = lshr i16 %11228, 8
  %11230 = trunc i16 %11229 to i8
  %11231 = trunc i16 %11228 to i8
  store i8 %11231, ptr %11225, align 1, !alias.scope !832, !noalias !829
  %11232 = getelementptr inbounds i8, ptr %11225, i64 1
  store i8 %11230, ptr %11232, align 1, !alias.scope !832, !noalias !829
  %11233 = getelementptr inbounds i8, ptr %11225, i64 2
  %11234 = getelementptr inbounds i8, ptr %11233, i64 %11161
  %11235 = or i64 %11215, 2
  %11236 = getelementptr inbounds i16, ptr %165, i64 %11235
  %11237 = load i16, ptr %11236, align 2, !tbaa !37, !alias.scope !829, !noalias !832
  %11238 = lshr i16 %11237, 8
  %11239 = trunc i16 %11238 to i8
  %11240 = trunc i16 %11237 to i8
  store i8 %11240, ptr %11234, align 1, !alias.scope !832, !noalias !829
  %11241 = getelementptr inbounds i8, ptr %11234, i64 1
  store i8 %11239, ptr %11241, align 1, !alias.scope !832, !noalias !829
  %11242 = getelementptr inbounds i8, ptr %11234, i64 2
  %11243 = getelementptr inbounds i8, ptr %11242, i64 %11161
  %11244 = or i64 %11215, 3
  %11245 = getelementptr inbounds i16, ptr %165, i64 %11244
  %11246 = load i16, ptr %11245, align 2, !tbaa !37, !alias.scope !829, !noalias !832
  %11247 = lshr i16 %11246, 8
  %11248 = trunc i16 %11247 to i8
  %11249 = trunc i16 %11246 to i8
  store i8 %11249, ptr %11243, align 1, !alias.scope !832, !noalias !829
  %11250 = getelementptr inbounds i8, ptr %11243, i64 1
  store i8 %11248, ptr %11250, align 1, !alias.scope !832, !noalias !829
  %11251 = getelementptr inbounds i8, ptr %11243, i64 2
  %11252 = getelementptr inbounds i8, ptr %11251, i64 %11161
  %11253 = add nuw nsw i64 %11215, 4
  %11254 = add i64 %11217, 4
  %11255 = icmp eq i64 %11254, %11213
  br i1 %11255, label %17532, label %11214, !llvm.loop !844

11256:                                            ; preds = %11152
  br i1 %11156, label %11257, label %17875

11257:                                            ; preds = %11256
  %11258 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %11259 = load i32, ptr %11258, align 8, !tbaa !51, !noalias !835
  %11260 = icmp eq ptr %165, null
  %11261 = icmp eq i32 %11259, 1
  %11262 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %11263 = load i64, ptr %11262, align 8, !tbaa !47, !noalias !835
  br label %11264

11264:                                            ; preds = %11336, %11257
  %11265 = phi i64 [ 0, %11257 ], [ %11346, %11336 ]
  %11266 = phi ptr [ %88, %11257 ], [ %11345, %11336 ]
  br i1 %11260, label %11271, label %11267

11267:                                            ; preds = %11264
  %11268 = getelementptr inbounds i16, ptr %165, i64 %11265
  %11269 = load i16, ptr %11268, align 2, !tbaa !37, !alias.scope !829, !noalias !832
  %11270 = zext i16 %11269 to i32
  br label %11271

11271:                                            ; preds = %11267, %11264
  %11272 = phi i32 [ %11270, %11267 ], [ 0, %11264 ]
  %11273 = sitofp i32 %11272 to double
  %11274 = fmul fast double %11273, 0x3EF0001000100010
  %11275 = fptrunc double %11274 to float
  %11276 = bitcast float %11275 to i32
  %11277 = lshr i32 %11276, 16
  %11278 = and i32 %11277, 32768
  %11279 = lshr i32 %11276, 23
  %11280 = and i32 %11279, 255
  %11281 = add nsw i32 %11280, -112
  %11282 = and i32 %11276, 8388607
  %11283 = icmp ult i32 %11280, 113
  br i1 %11283, label %11284, label %11301

11284:                                            ; preds = %11271
  %11285 = icmp ult i32 %11280, 102
  br i1 %11285, label %11298, label %11286

11286:                                            ; preds = %11284
  %11287 = or i32 %11282, 8388608
  %11288 = sub nuw nsw i32 126, %11280
  %11289 = sub nuw nsw i32 125, %11280
  %11290 = shl nsw i32 -1, %11289
  %11291 = xor i32 %11290, -1
  %11292 = add nuw nsw i32 %11287, %11291
  %11293 = lshr i32 %11287, %11288
  %11294 = and i32 %11293, 1
  %11295 = add nuw nsw i32 %11292, %11294
  %11296 = lshr i32 %11295, %11288
  %11297 = or i32 %11296, %11278
  br label %11298

11298:                                            ; preds = %11286, %11284
  %11299 = phi i32 [ %11297, %11286 ], [ %11278, %11284 ]
  %11300 = trunc i32 %11299 to i16
  br label %11336

11301:                                            ; preds = %11271
  %11302 = icmp eq i32 %11281, 143
  br i1 %11302, label %11303, label %11316

11303:                                            ; preds = %11301
  %11304 = icmp eq i32 %11282, 0
  br i1 %11304, label %11305, label %11308

11305:                                            ; preds = %11303
  %11306 = trunc i32 %11278 to i16
  %11307 = or i16 %11306, 31744
  br label %11336

11308:                                            ; preds = %11303
  %11309 = lshr i32 %11282, 13
  %11310 = icmp ult i32 %11282, 8192
  %11311 = zext i1 %11310 to i32
  %11312 = or i32 %11309, %11311
  %11313 = or i32 %11312, %11278
  %11314 = trunc i32 %11313 to i16
  %11315 = or i16 %11314, 31744
  br label %11336

11316:                                            ; preds = %11301
  %11317 = lshr i32 %11276, 13
  %11318 = and i32 %11317, 1
  %11319 = add nuw nsw i32 %11282, 4095
  %11320 = add nuw nsw i32 %11319, %11318
  %11321 = and i32 %11320, 8388608
  %11322 = icmp eq i32 %11321, 0
  %11323 = add nsw i32 %11280, -111
  %11324 = select i1 %11322, i32 %11281, i32 %11323
  %11325 = icmp ugt i32 %11324, 30
  br i1 %11325, label %11326, label %11329

11326:                                            ; preds = %11316
  %11327 = trunc i32 %11278 to i16
  %11328 = or i16 %11327, 31744
  br label %11336

11329:                                            ; preds = %11316
  %11330 = lshr i32 %11320, 13
  %11331 = shl nuw nsw i32 %11324, 10
  %11332 = select i1 %11322, i32 %11330, i32 0
  %11333 = or i32 %11332, %11331
  %11334 = or i32 %11333, %11278
  %11335 = trunc i32 %11334 to i16
  br label %11336

11336:                                            ; preds = %11329, %11326, %11308, %11305, %11298
  %11337 = phi i16 [ %11300, %11298 ], [ %11307, %11305 ], [ %11315, %11308 ], [ %11328, %11326 ], [ %11335, %11329 ]
  %11338 = lshr i16 %11337, 8
  %11339 = select i1 %11261, i16 %11337, i16 %11338
  %11340 = select i1 %11261, i16 %11338, i16 %11337
  %11341 = trunc i16 %11340 to i8
  %11342 = trunc i16 %11339 to i8
  store i8 %11342, ptr %11266, align 1, !alias.scope !832, !noalias !829
  %11343 = getelementptr inbounds i8, ptr %11266, i64 1
  store i8 %11341, ptr %11343, align 1, !alias.scope !832, !noalias !829
  %11344 = getelementptr inbounds i8, ptr %11266, i64 2
  %11345 = getelementptr inbounds i8, ptr %11344, i64 %11263
  %11346 = add nuw nsw i64 %11265, 1
  %11347 = icmp eq i64 %11346, %164
  br i1 %11347, label %17787, label %11264, !llvm.loop !845

11348:                                            ; preds = %11348, %11206
  %11349 = phi i64 [ 0, %11206 ], [ %11387, %11348 ]
  %11350 = phi ptr [ %88, %11206 ], [ %11386, %11348 ]
  %11351 = phi i64 [ 0, %11206 ], [ %11388, %11348 ]
  %11352 = getelementptr inbounds i16, ptr %165, i64 %11349
  %11353 = load i16, ptr %11352, align 2, !tbaa !37, !alias.scope !829, !noalias !832
  %11354 = lshr i16 %11353, 8
  %11355 = trunc i16 %11353 to i8
  %11356 = trunc i16 %11354 to i8
  store i8 %11356, ptr %11350, align 1, !alias.scope !832, !noalias !829
  %11357 = getelementptr inbounds i8, ptr %11350, i64 1
  store i8 %11355, ptr %11357, align 1, !alias.scope !832, !noalias !829
  %11358 = getelementptr inbounds i8, ptr %11350, i64 2
  %11359 = getelementptr inbounds i8, ptr %11358, i64 %11161
  %11360 = or i64 %11349, 1
  %11361 = getelementptr inbounds i16, ptr %165, i64 %11360
  %11362 = load i16, ptr %11361, align 2, !tbaa !37, !alias.scope !829, !noalias !832
  %11363 = lshr i16 %11362, 8
  %11364 = trunc i16 %11362 to i8
  %11365 = trunc i16 %11363 to i8
  store i8 %11365, ptr %11359, align 1, !alias.scope !832, !noalias !829
  %11366 = getelementptr inbounds i8, ptr %11359, i64 1
  store i8 %11364, ptr %11366, align 1, !alias.scope !832, !noalias !829
  %11367 = getelementptr inbounds i8, ptr %11359, i64 2
  %11368 = getelementptr inbounds i8, ptr %11367, i64 %11161
  %11369 = or i64 %11349, 2
  %11370 = getelementptr inbounds i16, ptr %165, i64 %11369
  %11371 = load i16, ptr %11370, align 2, !tbaa !37, !alias.scope !829, !noalias !832
  %11372 = lshr i16 %11371, 8
  %11373 = trunc i16 %11371 to i8
  %11374 = trunc i16 %11372 to i8
  store i8 %11374, ptr %11368, align 1, !alias.scope !832, !noalias !829
  %11375 = getelementptr inbounds i8, ptr %11368, i64 1
  store i8 %11373, ptr %11375, align 1, !alias.scope !832, !noalias !829
  %11376 = getelementptr inbounds i8, ptr %11368, i64 2
  %11377 = getelementptr inbounds i8, ptr %11376, i64 %11161
  %11378 = or i64 %11349, 3
  %11379 = getelementptr inbounds i16, ptr %165, i64 %11378
  %11380 = load i16, ptr %11379, align 2, !tbaa !37, !alias.scope !829, !noalias !832
  %11381 = lshr i16 %11380, 8
  %11382 = trunc i16 %11380 to i8
  %11383 = trunc i16 %11381 to i8
  store i8 %11383, ptr %11377, align 1, !alias.scope !832, !noalias !829
  %11384 = getelementptr inbounds i8, ptr %11377, i64 1
  store i8 %11382, ptr %11384, align 1, !alias.scope !832, !noalias !829
  %11385 = getelementptr inbounds i8, ptr %11377, i64 2
  %11386 = getelementptr inbounds i8, ptr %11385, i64 %11161
  %11387 = add nuw nsw i64 %11349, 4
  %11388 = add i64 %11351, 4
  %11389 = icmp eq i64 %11388, %11207
  br i1 %11389, label %17551, label %11348, !llvm.loop !844

11390:                                            ; preds = %10785
  %11391 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 2
  %11392 = load i32, ptr %11391, align 8, !tbaa !50, !noalias !835
  %11393 = icmp eq i32 %11392, 1
  %11394 = icmp sgt i64 %164, 0
  br i1 %11393, label %11407, label %11395

11395:                                            ; preds = %11390
  br i1 %11394, label %11396, label %17875

11396:                                            ; preds = %11395
  %11397 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %11398 = load i32, ptr %11397, align 8, !tbaa !51, !noalias !835
  %11399 = icmp eq ptr %165, null
  %11400 = icmp eq i32 %11398, 1
  %11401 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %11402 = load i64, ptr %11401, align 8, !tbaa !47, !noalias !835
  %11403 = and i64 %164, 1
  %11404 = icmp eq i64 %164, 1
  br i1 %11404, label %17570, label %11405

11405:                                            ; preds = %11396
  %11406 = and i64 %164, -2
  br label %11454

11407:                                            ; preds = %11390
  br i1 %11394, label %11408, label %17875

11408:                                            ; preds = %11407
  %11409 = icmp eq ptr %165, null
  %11410 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 14
  %11411 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 3
  %11412 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %11413 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  br label %11414

11414:                                            ; preds = %11441, %11408
  %11415 = phi i64 [ 0, %11408 ], [ %11452, %11441 ]
  %11416 = phi ptr [ %88, %11408 ], [ %11451, %11441 ]
  br i1 %11409, label %11421, label %11417

11417:                                            ; preds = %11414
  %11418 = getelementptr inbounds i16, ptr %165, i64 %11415
  %11419 = load i16, ptr %11418, align 2, !tbaa !37, !alias.scope !829, !noalias !832
  %11420 = zext i16 %11419 to i32
  br label %11421

11421:                                            ; preds = %11417, %11414
  %11422 = phi i32 [ %11420, %11417 ], [ 0, %11414 ]
  call void @llvm.experimental.noalias.scope.decl(metadata !846)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %30) #6, !noalias !849
  %11423 = call ptr @ResetMagickMemory(ptr noundef nonnull %30, i32 noundef 0, i64 noundef 4) #6, !noalias !846
  %11424 = sitofp i32 %11422 to double
  %11425 = load double, ptr %11410, align 8, !tbaa !59, !noalias !849
  %11426 = fmul fast double %11425, %11424
  %11427 = load double, ptr %11411, align 8, !tbaa !60, !noalias !849
  %11428 = fadd fast double %11426, %11427
  %11429 = fptrunc double %11428 to float
  %11430 = load i32, ptr %11412, align 8, !tbaa !51, !noalias !849
  %11431 = icmp eq i32 %11430, 1
  %11432 = bitcast float %11429 to i32
  %11433 = lshr i32 %11432, 24
  %11434 = trunc i32 %11433 to i8
  %11435 = lshr i32 %11432, 16
  %11436 = trunc i32 %11435 to i8
  %11437 = lshr i32 %11432, 8
  %11438 = trunc i32 %11437 to i8
  %11439 = trunc i32 %11432 to i8
  br i1 %11431, label %11441, label %11440

11440:                                            ; preds = %11421
  br label %11441

11441:                                            ; preds = %11440, %11421
  %11442 = phi i8 [ %11434, %11440 ], [ %11439, %11421 ]
  %11443 = phi i8 [ %11436, %11440 ], [ %11438, %11421 ]
  %11444 = phi i8 [ %11438, %11440 ], [ %11436, %11421 ]
  %11445 = phi i8 [ %11439, %11440 ], [ %11434, %11421 ]
  store i8 %11442, ptr %11416, align 1, !alias.scope !850, !noalias !829
  %11446 = getelementptr inbounds i8, ptr %11416, i64 1
  store i8 %11443, ptr %11446, align 1, !alias.scope !850, !noalias !829
  %11447 = getelementptr inbounds i8, ptr %11416, i64 2
  store i8 %11444, ptr %11447, align 1, !alias.scope !850, !noalias !829
  %11448 = getelementptr inbounds i8, ptr %11416, i64 3
  store i8 %11445, ptr %11448, align 1, !alias.scope !850, !noalias !829
  %11449 = getelementptr inbounds i8, ptr %11416, i64 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %30) #6, !noalias !849
  %11450 = load i64, ptr %11413, align 8, !tbaa !47, !noalias !835
  %11451 = getelementptr inbounds i8, ptr %11449, i64 %11450
  %11452 = add nuw nsw i64 %11415, 1
  %11453 = icmp eq i64 %11452, %164
  br i1 %11453, label %17787, label %11414, !llvm.loop !851

11454:                                            ; preds = %11481, %11405
  %11455 = phi i64 [ 0, %11405 ], [ %11495, %11481 ]
  %11456 = phi ptr [ %88, %11405 ], [ %11494, %11481 ]
  %11457 = phi i64 [ 0, %11405 ], [ %11496, %11481 ]
  br i1 %11399, label %11462, label %11458

11458:                                            ; preds = %11454
  %11459 = getelementptr inbounds i16, ptr %165, i64 %11455
  %11460 = load i16, ptr %11459, align 2, !tbaa !37, !alias.scope !829, !noalias !832
  %11461 = zext i16 %11460 to i32
  br label %11462

11462:                                            ; preds = %11458, %11454
  %11463 = phi i32 [ %11461, %11458 ], [ 0, %11454 ]
  %11464 = lshr i32 %11463, 8
  %11465 = trunc i32 %11463 to i8
  %11466 = trunc i32 %11464 to i8
  %11467 = select i1 %11400, i8 0, i8 %11465
  %11468 = select i1 %11400, i8 0, i8 %11466
  %11469 = select i1 %11400, i8 %11466, i8 0
  %11470 = select i1 %11400, i8 %11465, i8 0
  store i8 %11470, ptr %11456, align 1, !alias.scope !832, !noalias !829
  %11471 = getelementptr inbounds i8, ptr %11456, i64 1
  store i8 %11469, ptr %11471, align 1, !alias.scope !832, !noalias !829
  %11472 = getelementptr inbounds i8, ptr %11456, i64 2
  store i8 %11468, ptr %11472, align 1, !alias.scope !832, !noalias !829
  %11473 = getelementptr inbounds i8, ptr %11456, i64 3
  store i8 %11467, ptr %11473, align 1, !alias.scope !832, !noalias !829
  %11474 = getelementptr inbounds i8, ptr %11456, i64 4
  %11475 = getelementptr inbounds i8, ptr %11474, i64 %11402
  br i1 %11399, label %11481, label %11476

11476:                                            ; preds = %11462
  %11477 = or i64 %11455, 1
  %11478 = getelementptr inbounds i16, ptr %165, i64 %11477
  %11479 = load i16, ptr %11478, align 2, !tbaa !37, !alias.scope !829, !noalias !832
  %11480 = zext i16 %11479 to i32
  br label %11481

11481:                                            ; preds = %11476, %11462
  %11482 = phi i32 [ %11480, %11476 ], [ 0, %11462 ]
  %11483 = lshr i32 %11482, 8
  %11484 = trunc i32 %11482 to i8
  %11485 = trunc i32 %11483 to i8
  %11486 = select i1 %11400, i8 0, i8 %11484
  %11487 = select i1 %11400, i8 0, i8 %11485
  %11488 = select i1 %11400, i8 %11485, i8 0
  %11489 = select i1 %11400, i8 %11484, i8 0
  store i8 %11489, ptr %11475, align 1, !alias.scope !832, !noalias !829
  %11490 = getelementptr inbounds i8, ptr %11475, i64 1
  store i8 %11488, ptr %11490, align 1, !alias.scope !832, !noalias !829
  %11491 = getelementptr inbounds i8, ptr %11475, i64 2
  store i8 %11487, ptr %11491, align 1, !alias.scope !832, !noalias !829
  %11492 = getelementptr inbounds i8, ptr %11475, i64 3
  store i8 %11486, ptr %11492, align 1, !alias.scope !832, !noalias !829
  %11493 = getelementptr inbounds i8, ptr %11475, i64 4
  %11494 = getelementptr inbounds i8, ptr %11493, i64 %11402
  %11495 = add nuw nsw i64 %11455, 2
  %11496 = add i64 %11457, 2
  %11497 = icmp eq i64 %11496, %11406
  br i1 %11497, label %17570, label %11454, !llvm.loop !852

11498:                                            ; preds = %10785
  %11499 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 2
  %11500 = load i32, ptr %11499, align 8, !tbaa !50, !noalias !835
  %11501 = icmp eq i32 %11500, 1
  br i1 %11501, label %11502, label %11565

11502:                                            ; preds = %11498
  %11503 = icmp sgt i64 %164, 0
  br i1 %11503, label %11504, label %17875

11504:                                            ; preds = %11502
  %11505 = icmp eq ptr %165, null
  %11506 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 14
  %11507 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 3
  %11508 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %11509 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  br label %11510

11510:                                            ; preds = %11544, %11504
  %11511 = phi i64 [ 0, %11504 ], [ %11563, %11544 ]
  %11512 = phi ptr [ %88, %11504 ], [ %11562, %11544 ]
  br i1 %11505, label %11517, label %11513

11513:                                            ; preds = %11510
  %11514 = getelementptr inbounds i16, ptr %165, i64 %11511
  %11515 = load i16, ptr %11514, align 2, !tbaa !37, !alias.scope !829, !noalias !832
  %11516 = zext i16 %11515 to i32
  br label %11517

11517:                                            ; preds = %11513, %11510
  %11518 = phi i32 [ %11516, %11513 ], [ 0, %11510 ]
  %11519 = sitofp i32 %11518 to double
  call void @llvm.experimental.noalias.scope.decl(metadata !853)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %29) #6, !noalias !856
  %11520 = call ptr @ResetMagickMemory(ptr noundef nonnull %29, i32 noundef 0, i64 noundef 8) #6, !noalias !853
  %11521 = load double, ptr %11506, align 8, !tbaa !59, !noalias !856
  %11522 = fmul fast double %11521, %11519
  %11523 = load double, ptr %11507, align 8, !tbaa !60, !noalias !856
  %11524 = fadd fast double %11522, %11523
  %11525 = load i32, ptr %11508, align 8, !tbaa !51, !noalias !856
  %11526 = icmp eq i32 %11525, 1
  %11527 = bitcast double %11524 to i64
  %11528 = lshr i64 %11527, 56
  %11529 = trunc i64 %11528 to i8
  %11530 = lshr i64 %11527, 48
  %11531 = trunc i64 %11530 to i8
  %11532 = lshr i64 %11527, 40
  %11533 = trunc i64 %11532 to i8
  %11534 = lshr i64 %11527, 32
  %11535 = trunc i64 %11534 to i8
  %11536 = lshr i64 %11527, 24
  %11537 = trunc i64 %11536 to i8
  %11538 = lshr i64 %11527, 16
  %11539 = trunc i64 %11538 to i8
  %11540 = lshr i64 %11527, 8
  %11541 = trunc i64 %11540 to i8
  %11542 = trunc i64 %11527 to i8
  br i1 %11526, label %11544, label %11543

11543:                                            ; preds = %11517
  br label %11544

11544:                                            ; preds = %11543, %11517
  %11545 = phi i8 [ %11529, %11543 ], [ %11542, %11517 ]
  %11546 = phi i8 [ %11531, %11543 ], [ %11541, %11517 ]
  %11547 = phi i8 [ %11533, %11543 ], [ %11539, %11517 ]
  %11548 = phi i8 [ %11535, %11543 ], [ %11537, %11517 ]
  %11549 = phi i8 [ %11537, %11543 ], [ %11535, %11517 ]
  %11550 = phi i8 [ %11539, %11543 ], [ %11533, %11517 ]
  %11551 = phi i8 [ %11541, %11543 ], [ %11531, %11517 ]
  %11552 = phi i8 [ %11542, %11543 ], [ %11529, %11517 ]
  store i8 %11545, ptr %11512, align 1, !alias.scope !857, !noalias !829
  %11553 = getelementptr inbounds i8, ptr %11512, i64 1
  store i8 %11546, ptr %11553, align 1, !alias.scope !857, !noalias !829
  %11554 = getelementptr inbounds i8, ptr %11512, i64 2
  store i8 %11547, ptr %11554, align 1, !alias.scope !857, !noalias !829
  %11555 = getelementptr inbounds i8, ptr %11512, i64 3
  store i8 %11548, ptr %11555, align 1, !alias.scope !857, !noalias !829
  %11556 = getelementptr inbounds i8, ptr %11512, i64 4
  store i8 %11549, ptr %11556, align 1, !alias.scope !857, !noalias !829
  %11557 = getelementptr inbounds i8, ptr %11512, i64 5
  store i8 %11550, ptr %11557, align 1, !alias.scope !857, !noalias !829
  %11558 = getelementptr inbounds i8, ptr %11512, i64 6
  store i8 %11551, ptr %11558, align 1, !alias.scope !857, !noalias !829
  %11559 = getelementptr inbounds i8, ptr %11512, i64 7
  store i8 %11552, ptr %11559, align 1, !alias.scope !857, !noalias !829
  %11560 = getelementptr inbounds i8, ptr %11512, i64 8
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %29) #6, !noalias !856
  %11561 = load i64, ptr %11509, align 8, !tbaa !47, !noalias !835
  %11562 = getelementptr inbounds i8, ptr %11560, i64 %11561
  %11563 = add nuw nsw i64 %11511, 1
  %11564 = icmp eq i64 %11563, %164
  br i1 %11564, label %17787, label %11510, !llvm.loop !858

11565:                                            ; preds = %11498, %10785
  %11566 = icmp sgt i64 %164, 0
  br i1 %11566, label %11567, label %17875

11567:                                            ; preds = %11565
  %11568 = icmp eq ptr %165, null
  %11569 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 14, i32 2
  %11570 = icmp sgt i64 %10786, 0
  %11571 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %11572 = load i64, ptr %11569, align 8, !tbaa !69, !noalias !859
  %11573 = load i64, ptr %11571, align 8, !tbaa !47, !noalias !835
  br label %11574

11574:                                            ; preds = %11614, %11567
  %11575 = phi i64 [ %11572, %11567 ], [ %11615, %11614 ]
  %11576 = phi i64 [ 0, %11567 ], [ %11618, %11614 ]
  %11577 = phi ptr [ %88, %11567 ], [ %11617, %11614 ]
  br i1 %11568, label %11582, label %11578

11578:                                            ; preds = %11574
  %11579 = getelementptr inbounds i16, ptr %165, i64 %11576
  %11580 = load i16, ptr %11579, align 2, !tbaa !37, !alias.scope !829, !noalias !832
  %11581 = zext i16 %11580 to i64
  br label %11582

11582:                                            ; preds = %11578, %11574
  %11583 = phi i64 [ %11581, %11578 ], [ 0, %11574 ]
  tail call void @llvm.experimental.noalias.scope.decl(metadata !862)
  %11584 = icmp eq i64 %11575, 0
  br i1 %11584, label %11585, label %11586

11585:                                            ; preds = %11582
  store i64 8, ptr %11569, align 8, !tbaa !69, !noalias !859
  br label %11586

11586:                                            ; preds = %11585, %11582
  %11587 = phi i64 [ 8, %11585 ], [ %11575, %11582 ]
  br i1 %11570, label %11588, label %11614

11588:                                            ; preds = %11586, %11598
  %11589 = phi i64 [ %11609, %11598 ], [ %11587, %11586 ]
  %11590 = phi i64 [ %11594, %11598 ], [ %10786, %11586 ]
  %11591 = phi ptr [ %11611, %11598 ], [ %11577, %11586 ]
  %11592 = tail call i64 @llvm.umin.i64(i64 %11590, i64 %11589)
  %11593 = sub nsw i64 %11590, %11592
  %11594 = tail call i64 @llvm.smax.i64(i64 %11593, i64 0)
  %11595 = icmp eq i64 %11589, 8
  br i1 %11595, label %11598, label %11596

11596:                                            ; preds = %11588
  %11597 = load i8, ptr %11591, align 1, !tbaa !48, !alias.scope !863, !noalias !829
  br label %11598

11598:                                            ; preds = %11596, %11588
  %11599 = phi i8 [ %11597, %11596 ], [ 0, %11588 ]
  %11600 = sub i64 %11589, %11592
  %11601 = lshr i64 %11583, %11594
  %11602 = shl nsw i64 -1, %11592
  %11603 = xor i64 %11602, -1
  %11604 = and i64 %11601, %11603
  %11605 = shl i64 %11604, %11600
  %11606 = trunc i64 %11605 to i8
  %11607 = or i8 %11599, %11606
  store i8 %11607, ptr %11591, align 1, !tbaa !48, !alias.scope !863, !noalias !829
  %11608 = icmp ule i64 %11589, %11590
  %11609 = select i1 %11608, i64 8, i64 %11600
  %11610 = zext i1 %11608 to i64
  %11611 = getelementptr inbounds i8, ptr %11591, i64 %11610
  %11612 = icmp slt i64 %11593, 1
  br i1 %11612, label %11613, label %11588, !llvm.loop !75

11613:                                            ; preds = %11598
  store i64 %11609, ptr %11569, align 8, !tbaa !69, !noalias !859
  br label %11614

11614:                                            ; preds = %11613, %11586
  %11615 = phi i64 [ %11587, %11586 ], [ %11609, %11613 ]
  %11616 = phi ptr [ %11577, %11586 ], [ %11611, %11613 ]
  %11617 = getelementptr inbounds i8, ptr %11616, i64 %11573
  %11618 = add nuw nsw i64 %11576, 1
  %11619 = icmp eq i64 %11618, %164
  br i1 %11619, label %17787, label %11574, !llvm.loop !864

11620:                                            ; preds = %11066, %11058, %11050, %11042, %11034, %11026, %11021
  %11621 = phi i8 [ %11024, %11021 ], [ %11032, %11026 ], [ %11040, %11034 ], [ %11048, %11042 ], [ %11056, %11050 ], [ %11064, %11058 ], [ %11072, %11066 ]
  store i8 %11621, ptr %11018, align 1, !tbaa !48, !alias.scope !832, !noalias !829
  br label %17787

11622:                                            ; preds = %256
  tail call void @llvm.experimental.noalias.scope.decl(metadata !865)
  tail call void @llvm.experimental.noalias.scope.decl(metadata !868)
  tail call void @llvm.experimental.noalias.scope.decl(metadata !870)
  %11623 = load i32, ptr %0, align 8, !tbaa !834, !noalias !872
  %11624 = icmp eq i32 %11623, 2
  br i1 %11624, label %11628, label %11625

11625:                                            ; preds = %11622
  %11626 = getelementptr inbounds %struct._Image, ptr %0, i64 0, i32 53
  %11627 = tail call i32 (ptr, ptr, ptr, i64, i32, ptr, ptr, ...) @ThrowMagickException(ptr noundef %5, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, i64 noundef 2251, i32 noundef 465, ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.4, ptr noundef nonnull %11626) #6, !noalias !873
  br label %17875

11628:                                            ; preds = %11622
  %11629 = load i64, ptr %2, align 8, !tbaa !45, !noalias !872
  switch i64 %11629, label %12700 [
    i64 1, label %11850
    i64 4, label %11640
    i64 8, label %11630
    i64 16, label %12299
    i64 32, label %12445
    i64 64, label %12586
  ]

11630:                                            ; preds = %11628
  %11631 = icmp sgt i64 %164, 0
  br i1 %11631, label %11632, label %17875

11632:                                            ; preds = %11630
  %11633 = icmp eq ptr %165, null
  %11634 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %11635 = load i64, ptr %11634, align 8, !tbaa !47, !noalias !872
  %11636 = and i64 %164, 1
  %11637 = icmp eq i64 %164, 1
  br i1 %11637, label %17591, label %11638

11638:                                            ; preds = %11632
  %11639 = and i64 %164, -2
  br label %12253

11640:                                            ; preds = %11628
  %11641 = icmp sgt i64 %164, 0
  br i1 %11641, label %11642, label %17875

11642:                                            ; preds = %11640
  %11643 = icmp ult i64 %164, 9
  br i1 %11643, label %11770, label %11644

11644:                                            ; preds = %11642
  %11645 = icmp ult i64 %164, 17
  br i1 %11645, label %11775, label %11646

11646:                                            ; preds = %11644
  %11647 = and i64 %164, 15
  %11648 = icmp eq i64 %11647, 0
  %11649 = select i1 %11648, i64 16, i64 %11647
  %11650 = sub i64 %164, %11649
  %11651 = getelementptr %struct._PixelPacket, ptr %166, i64 0, i32 3
  %11652 = getelementptr %struct._PixelPacket, ptr %166, i64 0, i32 3
  %11653 = getelementptr %struct._PixelPacket, ptr %166, i64 0, i32 3
  %11654 = getelementptr %struct._PixelPacket, ptr %166, i64 0, i32 3
  %11655 = getelementptr %struct._PixelPacket, ptr %166, i64 0, i32 3
  %11656 = getelementptr %struct._PixelPacket, ptr %166, i64 0, i32 3
  %11657 = getelementptr %struct._PixelPacket, ptr %166, i64 0, i32 3
  %11658 = getelementptr %struct._PixelPacket, ptr %166, i64 0, i32 3
  %11659 = getelementptr %struct._PixelPacket, ptr %166, i64 0, i32 3
  %11660 = getelementptr %struct._PixelPacket, ptr %166, i64 0, i32 3
  %11661 = getelementptr %struct._PixelPacket, ptr %166, i64 0, i32 3
  %11662 = getelementptr %struct._PixelPacket, ptr %166, i64 0, i32 3
  %11663 = getelementptr %struct._PixelPacket, ptr %166, i64 0, i32 3
  %11664 = getelementptr %struct._PixelPacket, ptr %166, i64 0, i32 3
  %11665 = getelementptr %struct._PixelPacket, ptr %166, i64 0, i32 3
  %11666 = getelementptr %struct._PixelPacket, ptr %166, i64 0, i32 3
  br label %11667

11667:                                            ; preds = %11667, %11646
  %11668 = phi i64 [ 0, %11646 ], [ %11761, %11667 ]
  %11669 = shl i64 %11668, 3
  %11670 = shl i64 %11668, 3
  %11671 = or i64 %11670, 8
  %11672 = shl i64 %11668, 3
  %11673 = or i64 %11672, 16
  %11674 = shl i64 %11668, 3
  %11675 = or i64 %11674, 24
  %11676 = shl i64 %11668, 3
  %11677 = or i64 %11676, 32
  %11678 = shl i64 %11668, 3
  %11679 = or i64 %11678, 40
  %11680 = shl i64 %11668, 3
  %11681 = or i64 %11680, 48
  %11682 = shl i64 %11668, 3
  %11683 = or i64 %11682, 56
  %11684 = shl i64 %11668, 3
  %11685 = or i64 %11684, 64
  %11686 = shl i64 %11668, 3
  %11687 = or i64 %11686, 72
  %11688 = shl i64 %11668, 3
  %11689 = or i64 %11688, 80
  %11690 = shl i64 %11668, 3
  %11691 = or i64 %11690, 88
  %11692 = shl i64 %11668, 3
  %11693 = or i64 %11692, 96
  %11694 = shl i64 %11668, 3
  %11695 = or i64 %11694, 104
  %11696 = shl i64 %11668, 3
  %11697 = or i64 %11696, 112
  %11698 = shl i64 %11668, 3
  %11699 = or i64 %11698, 120
  %11700 = shl i64 %11668, 1
  %11701 = getelementptr i8, ptr %165, i64 %11700
  %11702 = getelementptr i8, ptr %88, i64 %11668
  %11703 = load <16 x i16>, ptr %11701, align 2, !tbaa !37, !alias.scope !868, !noalias !874
  %11704 = trunc <16 x i16> %11703 to <16 x i8>
  %11705 = shl <16 x i8> %11704, <i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4>
  %11706 = getelementptr i8, ptr %11651, i64 %11669
  %11707 = getelementptr i8, ptr %11652, i64 %11671
  %11708 = getelementptr i8, ptr %11653, i64 %11673
  %11709 = getelementptr i8, ptr %11654, i64 %11675
  %11710 = getelementptr i8, ptr %11655, i64 %11677
  %11711 = getelementptr i8, ptr %11656, i64 %11679
  %11712 = getelementptr i8, ptr %11657, i64 %11681
  %11713 = getelementptr i8, ptr %11658, i64 %11683
  %11714 = getelementptr i8, ptr %11659, i64 %11685
  %11715 = getelementptr i8, ptr %11660, i64 %11687
  %11716 = getelementptr i8, ptr %11661, i64 %11689
  %11717 = getelementptr i8, ptr %11662, i64 %11691
  %11718 = getelementptr i8, ptr %11663, i64 %11693
  %11719 = getelementptr i8, ptr %11664, i64 %11695
  %11720 = getelementptr i8, ptr %11665, i64 %11697
  %11721 = getelementptr i8, ptr %11666, i64 %11699
  %11722 = load i16, ptr %11706, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %11723 = load i16, ptr %11707, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %11724 = load i16, ptr %11708, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %11725 = load i16, ptr %11709, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %11726 = load i16, ptr %11710, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %11727 = load i16, ptr %11711, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %11728 = load i16, ptr %11712, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %11729 = load i16, ptr %11713, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %11730 = load i16, ptr %11714, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %11731 = load i16, ptr %11715, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %11732 = load i16, ptr %11716, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %11733 = load i16, ptr %11717, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %11734 = load i16, ptr %11718, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %11735 = load i16, ptr %11719, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %11736 = load i16, ptr %11720, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %11737 = load i16, ptr %11721, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %11738 = insertelement <16 x i16> poison, i16 %11722, i64 0
  %11739 = insertelement <16 x i16> %11738, i16 %11723, i64 1
  %11740 = insertelement <16 x i16> %11739, i16 %11724, i64 2
  %11741 = insertelement <16 x i16> %11740, i16 %11725, i64 3
  %11742 = insertelement <16 x i16> %11741, i16 %11726, i64 4
  %11743 = insertelement <16 x i16> %11742, i16 %11727, i64 5
  %11744 = insertelement <16 x i16> %11743, i16 %11728, i64 6
  %11745 = insertelement <16 x i16> %11744, i16 %11729, i64 7
  %11746 = insertelement <16 x i16> %11745, i16 %11730, i64 8
  %11747 = insertelement <16 x i16> %11746, i16 %11731, i64 9
  %11748 = insertelement <16 x i16> %11747, i16 %11732, i64 10
  %11749 = insertelement <16 x i16> %11748, i16 %11733, i64 11
  %11750 = insertelement <16 x i16> %11749, i16 %11734, i64 12
  %11751 = insertelement <16 x i16> %11750, i16 %11735, i64 13
  %11752 = insertelement <16 x i16> %11751, i16 %11736, i64 14
  %11753 = insertelement <16 x i16> %11752, i16 %11737, i64 15
  %11754 = xor <16 x i16> %11753, <i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1>
  %11755 = uitofp <16 x i16> %11754 to <16 x double>
  %11756 = fmul fast <16 x double> %11755, <double 0x3F30001000100010, double 0x3F30001000100010, double 0x3F30001000100010, double 0x3F30001000100010, double 0x3F30001000100010, double 0x3F30001000100010, double 0x3F30001000100010, double 0x3F30001000100010, double 0x3F30001000100010, double 0x3F30001000100010, double 0x3F30001000100010, double 0x3F30001000100010, double 0x3F30001000100010, double 0x3F30001000100010, double 0x3F30001000100010, double 0x3F30001000100010>
  %11757 = fadd fast <16 x double> %11756, <double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01>
  %11758 = fptoui <16 x double> %11757 to <16 x i8>
  %11759 = and <16 x i8> %11758, <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>
  %11760 = or <16 x i8> %11759, %11705
  store <16 x i8> %11760, ptr %11702, align 1, !tbaa !48, !alias.scope !870, !noalias !873
  %11761 = add nuw i64 %11668, 16
  %11762 = icmp eq i64 %11761, %11650
  br i1 %11762, label %11763, label %11667, !llvm.loop !876

11763:                                            ; preds = %11667
  %11764 = getelementptr i8, ptr %88, i64 %11650
  %11765 = shl i64 %11650, 1
  %11766 = getelementptr i8, ptr %165, i64 %11765
  %11767 = shl i64 %11650, 3
  %11768 = getelementptr i8, ptr %166, i64 %11767
  %11769 = icmp ult i64 %11649, 9
  br i1 %11769, label %11770, label %11775

11770:                                            ; preds = %11794, %11642, %11763
  %11771 = phi ptr [ %166, %11642 ], [ %11768, %11763 ], [ %11782, %11794 ]
  %11772 = phi ptr [ %165, %11642 ], [ %11766, %11763 ], [ %11784, %11794 ]
  %11773 = phi ptr [ %88, %11642 ], [ %11764, %11763 ], [ %11785, %11794 ]
  %11774 = phi i64 [ 0, %11642 ], [ %11650, %11763 ], [ %11780, %11794 ]
  br label %12231

11775:                                            ; preds = %11644, %11763
  %11776 = phi i64 [ %11650, %11763 ], [ 0, %11644 ]
  %11777 = and i64 %164, 7
  %11778 = icmp eq i64 %11777, 0
  %11779 = select i1 %11778, i64 8, i64 %11777
  %11780 = sub i64 %164, %11779
  %11781 = shl i64 %11780, 3
  %11782 = getelementptr i8, ptr %166, i64 %11781
  %11783 = shl i64 %11780, 1
  %11784 = getelementptr i8, ptr %165, i64 %11783
  %11785 = getelementptr i8, ptr %88, i64 %11780
  %11786 = getelementptr %struct._PixelPacket, ptr %166, i64 0, i32 3
  %11787 = getelementptr %struct._PixelPacket, ptr %166, i64 0, i32 3
  %11788 = getelementptr %struct._PixelPacket, ptr %166, i64 0, i32 3
  %11789 = getelementptr %struct._PixelPacket, ptr %166, i64 0, i32 3
  %11790 = getelementptr %struct._PixelPacket, ptr %166, i64 0, i32 3
  %11791 = getelementptr %struct._PixelPacket, ptr %166, i64 0, i32 3
  %11792 = getelementptr %struct._PixelPacket, ptr %166, i64 0, i32 3
  %11793 = getelementptr %struct._PixelPacket, ptr %166, i64 0, i32 3
  br label %11794

11794:                                            ; preds = %11794, %11775
  %11795 = phi i64 [ %11776, %11775 ], [ %11848, %11794 ]
  %11796 = shl i64 %11795, 3
  %11797 = shl i64 %11795, 3
  %11798 = add i64 %11797, 8
  %11799 = shl i64 %11795, 3
  %11800 = add i64 %11799, 16
  %11801 = shl i64 %11795, 3
  %11802 = add i64 %11801, 24
  %11803 = shl i64 %11795, 3
  %11804 = add i64 %11803, 32
  %11805 = shl i64 %11795, 3
  %11806 = add i64 %11805, 40
  %11807 = shl i64 %11795, 3
  %11808 = add i64 %11807, 48
  %11809 = shl i64 %11795, 3
  %11810 = add i64 %11809, 56
  %11811 = shl i64 %11795, 1
  %11812 = getelementptr i8, ptr %165, i64 %11811
  %11813 = getelementptr i8, ptr %88, i64 %11795
  %11814 = load <8 x i16>, ptr %11812, align 2, !tbaa !37, !alias.scope !868, !noalias !874
  %11815 = trunc <8 x i16> %11814 to <8 x i8>
  %11816 = shl <8 x i8> %11815, <i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4>
  %11817 = getelementptr i8, ptr %11786, i64 %11796
  %11818 = getelementptr i8, ptr %11787, i64 %11798
  %11819 = getelementptr i8, ptr %11788, i64 %11800
  %11820 = getelementptr i8, ptr %11789, i64 %11802
  %11821 = getelementptr i8, ptr %11790, i64 %11804
  %11822 = getelementptr i8, ptr %11791, i64 %11806
  %11823 = getelementptr i8, ptr %11792, i64 %11808
  %11824 = getelementptr i8, ptr %11793, i64 %11810
  %11825 = load i16, ptr %11817, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %11826 = load i16, ptr %11818, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %11827 = load i16, ptr %11819, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %11828 = load i16, ptr %11820, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %11829 = load i16, ptr %11821, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %11830 = load i16, ptr %11822, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %11831 = load i16, ptr %11823, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %11832 = load i16, ptr %11824, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %11833 = insertelement <8 x i16> poison, i16 %11825, i64 0
  %11834 = insertelement <8 x i16> %11833, i16 %11826, i64 1
  %11835 = insertelement <8 x i16> %11834, i16 %11827, i64 2
  %11836 = insertelement <8 x i16> %11835, i16 %11828, i64 3
  %11837 = insertelement <8 x i16> %11836, i16 %11829, i64 4
  %11838 = insertelement <8 x i16> %11837, i16 %11830, i64 5
  %11839 = insertelement <8 x i16> %11838, i16 %11831, i64 6
  %11840 = insertelement <8 x i16> %11839, i16 %11832, i64 7
  %11841 = xor <8 x i16> %11840, <i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1>
  %11842 = uitofp <8 x i16> %11841 to <8 x double>
  %11843 = fmul fast <8 x double> %11842, <double 0x3F30001000100010, double 0x3F30001000100010, double 0x3F30001000100010, double 0x3F30001000100010, double 0x3F30001000100010, double 0x3F30001000100010, double 0x3F30001000100010, double 0x3F30001000100010>
  %11844 = fadd fast <8 x double> %11843, <double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01, double 5.000000e-01>
  %11845 = fptoui <8 x double> %11844 to <8 x i8>
  %11846 = and <8 x i8> %11845, <i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15, i8 15>
  %11847 = or <8 x i8> %11846, %11816
  store <8 x i8> %11847, ptr %11813, align 1, !tbaa !48, !alias.scope !870, !noalias !873
  %11848 = add nuw i64 %11795, 8
  %11849 = icmp eq i64 %11848, %11780
  br i1 %11849, label %11770, label %11794, !llvm.loop !877

11850:                                            ; preds = %11628
  %11851 = icmp sgt i64 %164, 3
  br i1 %11851, label %11852, label %12203

11852:                                            ; preds = %11850
  %11853 = add i64 %164, -3
  %11854 = tail call i64 @llvm.umin.i64(i64 %11853, i64 4)
  %11855 = sub i64 %164, %11854
  %11856 = lshr i64 %11855, 2
  %11857 = add nuw nsw i64 %11856, 1
  %11858 = icmp ult i64 %11855, 60
  br i1 %11858, label %12147, label %11859

11859:                                            ; preds = %11852
  %11860 = and i64 %11857, 9223372036854775792
  %11861 = shl i64 %11860, 5
  %11862 = getelementptr i8, ptr %166, i64 %11861
  %11863 = shl i64 %11860, 3
  %11864 = getelementptr i8, ptr %165, i64 %11863
  %11865 = getelementptr i8, ptr %88, i64 %11860
  %11866 = shl i64 %11860, 2
  %11867 = sub i64 %11853, %11866
  br label %11868

11868:                                            ; preds = %11868, %11859
  %11869 = phi i64 [ 0, %11859 ], [ %12143, %11868 ]
  %11870 = shl i64 %11869, 5
  %11871 = getelementptr i8, ptr %166, i64 %11870
  %11872 = shl i64 %11869, 5
  %11873 = or i64 %11872, 32
  %11874 = getelementptr i8, ptr %166, i64 %11873
  %11875 = shl i64 %11869, 5
  %11876 = or i64 %11875, 64
  %11877 = getelementptr i8, ptr %166, i64 %11876
  %11878 = shl i64 %11869, 5
  %11879 = or i64 %11878, 96
  %11880 = getelementptr i8, ptr %166, i64 %11879
  %11881 = shl i64 %11869, 5
  %11882 = or i64 %11881, 128
  %11883 = getelementptr i8, ptr %166, i64 %11882
  %11884 = shl i64 %11869, 5
  %11885 = or i64 %11884, 160
  %11886 = getelementptr i8, ptr %166, i64 %11885
  %11887 = shl i64 %11869, 5
  %11888 = or i64 %11887, 192
  %11889 = getelementptr i8, ptr %166, i64 %11888
  %11890 = shl i64 %11869, 5
  %11891 = or i64 %11890, 224
  %11892 = getelementptr i8, ptr %166, i64 %11891
  %11893 = shl i64 %11869, 5
  %11894 = or i64 %11893, 256
  %11895 = getelementptr i8, ptr %166, i64 %11894
  %11896 = shl i64 %11869, 5
  %11897 = or i64 %11896, 288
  %11898 = getelementptr i8, ptr %166, i64 %11897
  %11899 = shl i64 %11869, 5
  %11900 = or i64 %11899, 320
  %11901 = getelementptr i8, ptr %166, i64 %11900
  %11902 = shl i64 %11869, 5
  %11903 = or i64 %11902, 352
  %11904 = getelementptr i8, ptr %166, i64 %11903
  %11905 = shl i64 %11869, 5
  %11906 = or i64 %11905, 384
  %11907 = getelementptr i8, ptr %166, i64 %11906
  %11908 = shl i64 %11869, 5
  %11909 = or i64 %11908, 416
  %11910 = getelementptr i8, ptr %166, i64 %11909
  %11911 = shl i64 %11869, 5
  %11912 = or i64 %11911, 448
  %11913 = getelementptr i8, ptr %166, i64 %11912
  %11914 = shl i64 %11869, 5
  %11915 = or i64 %11914, 480
  %11916 = getelementptr i8, ptr %166, i64 %11915
  %11917 = shl i64 %11869, 3
  %11918 = getelementptr i8, ptr %165, i64 %11917
  %11919 = getelementptr i8, ptr %88, i64 %11869
  %11920 = load <64 x i16>, ptr %11918, align 2, !tbaa !37, !alias.scope !868, !noalias !874
  %11921 = shufflevector <64 x i16> %11920, <64 x i16> poison, <16 x i32> <i32 0, i32 4, i32 8, i32 12, i32 16, i32 20, i32 24, i32 28, i32 32, i32 36, i32 40, i32 44, i32 48, i32 52, i32 56, i32 60>
  %11922 = shufflevector <64 x i16> %11920, <64 x i16> poison, <16 x i32> <i32 1, i32 5, i32 9, i32 13, i32 17, i32 21, i32 25, i32 29, i32 33, i32 37, i32 41, i32 45, i32 49, i32 53, i32 57, i32 61>
  %11923 = shufflevector <64 x i16> %11920, <64 x i16> poison, <16 x i32> <i32 2, i32 6, i32 10, i32 14, i32 18, i32 22, i32 26, i32 30, i32 34, i32 38, i32 42, i32 46, i32 50, i32 54, i32 58, i32 62>
  %11924 = shufflevector <64 x i16> %11920, <64 x i16> poison, <16 x i32> <i32 3, i32 7, i32 11, i32 15, i32 19, i32 23, i32 27, i32 31, i32 35, i32 39, i32 43, i32 47, i32 51, i32 55, i32 59, i32 63>
  %11925 = trunc <16 x i16> %11921 to <16 x i8>
  %11926 = shl <16 x i8> %11925, <i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7>
  %11927 = getelementptr inbounds %struct._PixelPacket, ptr %11871, i64 0, i32 3
  %11928 = getelementptr inbounds %struct._PixelPacket, ptr %11874, i64 0, i32 3
  %11929 = getelementptr inbounds %struct._PixelPacket, ptr %11877, i64 0, i32 3
  %11930 = getelementptr inbounds %struct._PixelPacket, ptr %11880, i64 0, i32 3
  %11931 = getelementptr inbounds %struct._PixelPacket, ptr %11883, i64 0, i32 3
  %11932 = getelementptr inbounds %struct._PixelPacket, ptr %11886, i64 0, i32 3
  %11933 = getelementptr inbounds %struct._PixelPacket, ptr %11889, i64 0, i32 3
  %11934 = getelementptr inbounds %struct._PixelPacket, ptr %11892, i64 0, i32 3
  %11935 = getelementptr inbounds %struct._PixelPacket, ptr %11895, i64 0, i32 3
  %11936 = getelementptr inbounds %struct._PixelPacket, ptr %11898, i64 0, i32 3
  %11937 = getelementptr inbounds %struct._PixelPacket, ptr %11901, i64 0, i32 3
  %11938 = getelementptr inbounds %struct._PixelPacket, ptr %11904, i64 0, i32 3
  %11939 = getelementptr inbounds %struct._PixelPacket, ptr %11907, i64 0, i32 3
  %11940 = getelementptr inbounds %struct._PixelPacket, ptr %11910, i64 0, i32 3
  %11941 = getelementptr inbounds %struct._PixelPacket, ptr %11913, i64 0, i32 3
  %11942 = getelementptr inbounds %struct._PixelPacket, ptr %11916, i64 0, i32 3
  %11943 = load i16, ptr %11927, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %11944 = load i16, ptr %11928, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %11945 = load i16, ptr %11929, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %11946 = load i16, ptr %11930, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %11947 = load i16, ptr %11931, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %11948 = load i16, ptr %11932, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %11949 = load i16, ptr %11933, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %11950 = load i16, ptr %11934, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %11951 = load i16, ptr %11935, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %11952 = load i16, ptr %11936, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %11953 = load i16, ptr %11937, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %11954 = load i16, ptr %11938, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %11955 = load i16, ptr %11939, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %11956 = load i16, ptr %11940, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %11957 = load i16, ptr %11941, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %11958 = load i16, ptr %11942, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %11959 = insertelement <16 x i16> poison, i16 %11943, i64 0
  %11960 = insertelement <16 x i16> %11959, i16 %11944, i64 1
  %11961 = insertelement <16 x i16> %11960, i16 %11945, i64 2
  %11962 = insertelement <16 x i16> %11961, i16 %11946, i64 3
  %11963 = insertelement <16 x i16> %11962, i16 %11947, i64 4
  %11964 = insertelement <16 x i16> %11963, i16 %11948, i64 5
  %11965 = insertelement <16 x i16> %11964, i16 %11949, i64 6
  %11966 = insertelement <16 x i16> %11965, i16 %11950, i64 7
  %11967 = insertelement <16 x i16> %11966, i16 %11951, i64 8
  %11968 = insertelement <16 x i16> %11967, i16 %11952, i64 9
  %11969 = insertelement <16 x i16> %11968, i16 %11953, i64 10
  %11970 = insertelement <16 x i16> %11969, i16 %11954, i64 11
  %11971 = insertelement <16 x i16> %11970, i16 %11955, i64 12
  %11972 = insertelement <16 x i16> %11971, i16 %11956, i64 13
  %11973 = insertelement <16 x i16> %11972, i16 %11957, i64 14
  %11974 = insertelement <16 x i16> %11973, i16 %11958, i64 15
  %11975 = icmp eq <16 x i16> %11974, <i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1>
  %11976 = select <16 x i1> %11975, <16 x i8> <i8 64, i8 64, i8 64, i8 64, i8 64, i8 64, i8 64, i8 64, i8 64, i8 64, i8 64, i8 64, i8 64, i8 64, i8 64, i8 64>, <16 x i8> zeroinitializer
  %11977 = or <16 x i8> %11976, %11926
  %11978 = trunc <16 x i16> %11922 to <16 x i8>
  %11979 = shl <16 x i8> %11978, <i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5, i8 5>
  %11980 = and <16 x i8> %11979, <i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32, i8 32>
  %11981 = or <16 x i8> %11980, %11977
  %11982 = getelementptr inbounds %struct._PixelPacket, ptr %11871, i64 1, i32 3
  %11983 = getelementptr inbounds %struct._PixelPacket, ptr %11874, i64 1, i32 3
  %11984 = getelementptr inbounds %struct._PixelPacket, ptr %11877, i64 1, i32 3
  %11985 = getelementptr inbounds %struct._PixelPacket, ptr %11880, i64 1, i32 3
  %11986 = getelementptr inbounds %struct._PixelPacket, ptr %11883, i64 1, i32 3
  %11987 = getelementptr inbounds %struct._PixelPacket, ptr %11886, i64 1, i32 3
  %11988 = getelementptr inbounds %struct._PixelPacket, ptr %11889, i64 1, i32 3
  %11989 = getelementptr inbounds %struct._PixelPacket, ptr %11892, i64 1, i32 3
  %11990 = getelementptr inbounds %struct._PixelPacket, ptr %11895, i64 1, i32 3
  %11991 = getelementptr inbounds %struct._PixelPacket, ptr %11898, i64 1, i32 3
  %11992 = getelementptr inbounds %struct._PixelPacket, ptr %11901, i64 1, i32 3
  %11993 = getelementptr inbounds %struct._PixelPacket, ptr %11904, i64 1, i32 3
  %11994 = getelementptr inbounds %struct._PixelPacket, ptr %11907, i64 1, i32 3
  %11995 = getelementptr inbounds %struct._PixelPacket, ptr %11910, i64 1, i32 3
  %11996 = getelementptr inbounds %struct._PixelPacket, ptr %11913, i64 1, i32 3
  %11997 = getelementptr inbounds %struct._PixelPacket, ptr %11916, i64 1, i32 3
  %11998 = load i16, ptr %11982, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %11999 = load i16, ptr %11983, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %12000 = load i16, ptr %11984, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %12001 = load i16, ptr %11985, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %12002 = load i16, ptr %11986, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %12003 = load i16, ptr %11987, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %12004 = load i16, ptr %11988, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %12005 = load i16, ptr %11989, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %12006 = load i16, ptr %11990, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %12007 = load i16, ptr %11991, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %12008 = load i16, ptr %11992, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %12009 = load i16, ptr %11993, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %12010 = load i16, ptr %11994, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %12011 = load i16, ptr %11995, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %12012 = load i16, ptr %11996, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %12013 = load i16, ptr %11997, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %12014 = insertelement <16 x i16> poison, i16 %11998, i64 0
  %12015 = insertelement <16 x i16> %12014, i16 %11999, i64 1
  %12016 = insertelement <16 x i16> %12015, i16 %12000, i64 2
  %12017 = insertelement <16 x i16> %12016, i16 %12001, i64 3
  %12018 = insertelement <16 x i16> %12017, i16 %12002, i64 4
  %12019 = insertelement <16 x i16> %12018, i16 %12003, i64 5
  %12020 = insertelement <16 x i16> %12019, i16 %12004, i64 6
  %12021 = insertelement <16 x i16> %12020, i16 %12005, i64 7
  %12022 = insertelement <16 x i16> %12021, i16 %12006, i64 8
  %12023 = insertelement <16 x i16> %12022, i16 %12007, i64 9
  %12024 = insertelement <16 x i16> %12023, i16 %12008, i64 10
  %12025 = insertelement <16 x i16> %12024, i16 %12009, i64 11
  %12026 = insertelement <16 x i16> %12025, i16 %12010, i64 12
  %12027 = insertelement <16 x i16> %12026, i16 %12011, i64 13
  %12028 = insertelement <16 x i16> %12027, i16 %12012, i64 14
  %12029 = insertelement <16 x i16> %12028, i16 %12013, i64 15
  %12030 = icmp eq <16 x i16> %12029, <i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1>
  %12031 = select <16 x i1> %12030, <16 x i8> <i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16, i8 16>, <16 x i8> zeroinitializer
  %12032 = or <16 x i8> %11981, %12031
  %12033 = trunc <16 x i16> %11923 to <16 x i8>
  %12034 = shl <16 x i8> %12033, <i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3, i8 3>
  %12035 = and <16 x i8> %12034, <i8 8, i8 8, i8 8, i8 8, i8 8, i8 8, i8 8, i8 8, i8 8, i8 8, i8 8, i8 8, i8 8, i8 8, i8 8, i8 8>
  %12036 = or <16 x i8> %12035, %12032
  %12037 = getelementptr inbounds %struct._PixelPacket, ptr %11871, i64 2, i32 3
  %12038 = getelementptr inbounds %struct._PixelPacket, ptr %11874, i64 2, i32 3
  %12039 = getelementptr inbounds %struct._PixelPacket, ptr %11877, i64 2, i32 3
  %12040 = getelementptr inbounds %struct._PixelPacket, ptr %11880, i64 2, i32 3
  %12041 = getelementptr inbounds %struct._PixelPacket, ptr %11883, i64 2, i32 3
  %12042 = getelementptr inbounds %struct._PixelPacket, ptr %11886, i64 2, i32 3
  %12043 = getelementptr inbounds %struct._PixelPacket, ptr %11889, i64 2, i32 3
  %12044 = getelementptr inbounds %struct._PixelPacket, ptr %11892, i64 2, i32 3
  %12045 = getelementptr inbounds %struct._PixelPacket, ptr %11895, i64 2, i32 3
  %12046 = getelementptr inbounds %struct._PixelPacket, ptr %11898, i64 2, i32 3
  %12047 = getelementptr inbounds %struct._PixelPacket, ptr %11901, i64 2, i32 3
  %12048 = getelementptr inbounds %struct._PixelPacket, ptr %11904, i64 2, i32 3
  %12049 = getelementptr inbounds %struct._PixelPacket, ptr %11907, i64 2, i32 3
  %12050 = getelementptr inbounds %struct._PixelPacket, ptr %11910, i64 2, i32 3
  %12051 = getelementptr inbounds %struct._PixelPacket, ptr %11913, i64 2, i32 3
  %12052 = getelementptr inbounds %struct._PixelPacket, ptr %11916, i64 2, i32 3
  %12053 = load i16, ptr %12037, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %12054 = load i16, ptr %12038, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %12055 = load i16, ptr %12039, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %12056 = load i16, ptr %12040, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %12057 = load i16, ptr %12041, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %12058 = load i16, ptr %12042, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %12059 = load i16, ptr %12043, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %12060 = load i16, ptr %12044, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %12061 = load i16, ptr %12045, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %12062 = load i16, ptr %12046, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %12063 = load i16, ptr %12047, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %12064 = load i16, ptr %12048, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %12065 = load i16, ptr %12049, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %12066 = load i16, ptr %12050, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %12067 = load i16, ptr %12051, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %12068 = load i16, ptr %12052, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %12069 = insertelement <16 x i16> poison, i16 %12053, i64 0
  %12070 = insertelement <16 x i16> %12069, i16 %12054, i64 1
  %12071 = insertelement <16 x i16> %12070, i16 %12055, i64 2
  %12072 = insertelement <16 x i16> %12071, i16 %12056, i64 3
  %12073 = insertelement <16 x i16> %12072, i16 %12057, i64 4
  %12074 = insertelement <16 x i16> %12073, i16 %12058, i64 5
  %12075 = insertelement <16 x i16> %12074, i16 %12059, i64 6
  %12076 = insertelement <16 x i16> %12075, i16 %12060, i64 7
  %12077 = insertelement <16 x i16> %12076, i16 %12061, i64 8
  %12078 = insertelement <16 x i16> %12077, i16 %12062, i64 9
  %12079 = insertelement <16 x i16> %12078, i16 %12063, i64 10
  %12080 = insertelement <16 x i16> %12079, i16 %12064, i64 11
  %12081 = insertelement <16 x i16> %12080, i16 %12065, i64 12
  %12082 = insertelement <16 x i16> %12081, i16 %12066, i64 13
  %12083 = insertelement <16 x i16> %12082, i16 %12067, i64 14
  %12084 = insertelement <16 x i16> %12083, i16 %12068, i64 15
  %12085 = icmp eq <16 x i16> %12084, <i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1>
  %12086 = select <16 x i1> %12085, <16 x i8> <i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4, i8 4>, <16 x i8> zeroinitializer
  %12087 = or <16 x i8> %12036, %12086
  %12088 = trunc <16 x i16> %11924 to <16 x i8>
  %12089 = shl <16 x i8> %12088, <i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1>
  %12090 = and <16 x i8> %12089, <i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2, i8 2>
  %12091 = or <16 x i8> %12090, %12087
  %12092 = getelementptr inbounds %struct._PixelPacket, ptr %11871, i64 3, i32 3
  %12093 = getelementptr inbounds %struct._PixelPacket, ptr %11874, i64 3, i32 3
  %12094 = getelementptr inbounds %struct._PixelPacket, ptr %11877, i64 3, i32 3
  %12095 = getelementptr inbounds %struct._PixelPacket, ptr %11880, i64 3, i32 3
  %12096 = getelementptr inbounds %struct._PixelPacket, ptr %11883, i64 3, i32 3
  %12097 = getelementptr inbounds %struct._PixelPacket, ptr %11886, i64 3, i32 3
  %12098 = getelementptr inbounds %struct._PixelPacket, ptr %11889, i64 3, i32 3
  %12099 = getelementptr inbounds %struct._PixelPacket, ptr %11892, i64 3, i32 3
  %12100 = getelementptr inbounds %struct._PixelPacket, ptr %11895, i64 3, i32 3
  %12101 = getelementptr inbounds %struct._PixelPacket, ptr %11898, i64 3, i32 3
  %12102 = getelementptr inbounds %struct._PixelPacket, ptr %11901, i64 3, i32 3
  %12103 = getelementptr inbounds %struct._PixelPacket, ptr %11904, i64 3, i32 3
  %12104 = getelementptr inbounds %struct._PixelPacket, ptr %11907, i64 3, i32 3
  %12105 = getelementptr inbounds %struct._PixelPacket, ptr %11910, i64 3, i32 3
  %12106 = getelementptr inbounds %struct._PixelPacket, ptr %11913, i64 3, i32 3
  %12107 = getelementptr inbounds %struct._PixelPacket, ptr %11916, i64 3, i32 3
  %12108 = load i16, ptr %12092, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %12109 = load i16, ptr %12093, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %12110 = load i16, ptr %12094, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %12111 = load i16, ptr %12095, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %12112 = load i16, ptr %12096, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %12113 = load i16, ptr %12097, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %12114 = load i16, ptr %12098, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %12115 = load i16, ptr %12099, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %12116 = load i16, ptr %12100, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %12117 = load i16, ptr %12101, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %12118 = load i16, ptr %12102, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %12119 = load i16, ptr %12103, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %12120 = load i16, ptr %12104, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %12121 = load i16, ptr %12105, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %12122 = load i16, ptr %12106, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %12123 = load i16, ptr %12107, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %12124 = insertelement <16 x i16> poison, i16 %12108, i64 0
  %12125 = insertelement <16 x i16> %12124, i16 %12109, i64 1
  %12126 = insertelement <16 x i16> %12125, i16 %12110, i64 2
  %12127 = insertelement <16 x i16> %12126, i16 %12111, i64 3
  %12128 = insertelement <16 x i16> %12127, i16 %12112, i64 4
  %12129 = insertelement <16 x i16> %12128, i16 %12113, i64 5
  %12130 = insertelement <16 x i16> %12129, i16 %12114, i64 6
  %12131 = insertelement <16 x i16> %12130, i16 %12115, i64 7
  %12132 = insertelement <16 x i16> %12131, i16 %12116, i64 8
  %12133 = insertelement <16 x i16> %12132, i16 %12117, i64 9
  %12134 = insertelement <16 x i16> %12133, i16 %12118, i64 10
  %12135 = insertelement <16 x i16> %12134, i16 %12119, i64 11
  %12136 = insertelement <16 x i16> %12135, i16 %12120, i64 12
  %12137 = insertelement <16 x i16> %12136, i16 %12121, i64 13
  %12138 = insertelement <16 x i16> %12137, i16 %12122, i64 14
  %12139 = insertelement <16 x i16> %12138, i16 %12123, i64 15
  %12140 = icmp eq <16 x i16> %12139, <i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1>
  %12141 = zext <16 x i1> %12140 to <16 x i8>
  %12142 = or <16 x i8> %12091, %12141
  store <16 x i8> %12142, ptr %11919, align 1, !tbaa !48, !alias.scope !870, !noalias !873
  %12143 = add nuw i64 %11869, 16
  %12144 = icmp eq i64 %12143, %11860
  br i1 %12144, label %12145, label %11868, !llvm.loop !878

12145:                                            ; preds = %11868
  %12146 = icmp eq i64 %11857, %11860
  br i1 %12146, label %12203, label %12147

12147:                                            ; preds = %11852, %12145
  %12148 = phi ptr [ %166, %11852 ], [ %11862, %12145 ]
  %12149 = phi ptr [ %165, %11852 ], [ %11864, %12145 ]
  %12150 = phi ptr [ %88, %11852 ], [ %11865, %12145 ]
  %12151 = phi i64 [ %11853, %11852 ], [ %11867, %12145 ]
  br label %12152

12152:                                            ; preds = %12147, %12152
  %12153 = phi ptr [ %12199, %12152 ], [ %12148, %12147 ]
  %12154 = phi ptr [ %12188, %12152 ], [ %12149, %12147 ]
  %12155 = phi ptr [ %12200, %12152 ], [ %12150, %12147 ]
  %12156 = phi i64 [ %12201, %12152 ], [ %12151, %12147 ]
  %12157 = getelementptr inbounds i16, ptr %12154, i64 1
  %12158 = load i16, ptr %12154, align 2, !tbaa !37, !alias.scope !868, !noalias !874
  %12159 = trunc i16 %12158 to i8
  %12160 = shl i8 %12159, 7
  %12161 = getelementptr inbounds %struct._PixelPacket, ptr %12153, i64 0, i32 3
  %12162 = load i16, ptr %12161, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %12163 = icmp eq i16 %12162, -1
  %12164 = select i1 %12163, i8 64, i8 0
  %12165 = or i8 %12164, %12160
  %12166 = getelementptr inbounds i16, ptr %12154, i64 2
  %12167 = load i16, ptr %12157, align 2, !tbaa !37, !alias.scope !868, !noalias !874
  %12168 = trunc i16 %12167 to i8
  %12169 = shl i8 %12168, 5
  %12170 = and i8 %12169, 32
  %12171 = or i8 %12170, %12165
  %12172 = getelementptr inbounds %struct._PixelPacket, ptr %12153, i64 1, i32 3
  %12173 = load i16, ptr %12172, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %12174 = icmp eq i16 %12173, -1
  %12175 = select i1 %12174, i8 16, i8 0
  %12176 = or i8 %12171, %12175
  %12177 = getelementptr inbounds i16, ptr %12154, i64 3
  %12178 = load i16, ptr %12166, align 2, !tbaa !37, !alias.scope !868, !noalias !874
  %12179 = trunc i16 %12178 to i8
  %12180 = shl i8 %12179, 3
  %12181 = and i8 %12180, 8
  %12182 = or i8 %12181, %12176
  %12183 = getelementptr inbounds %struct._PixelPacket, ptr %12153, i64 2, i32 3
  %12184 = load i16, ptr %12183, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %12185 = icmp eq i16 %12184, -1
  %12186 = select i1 %12185, i8 4, i8 0
  %12187 = or i8 %12182, %12186
  %12188 = getelementptr inbounds i16, ptr %12154, i64 4
  %12189 = load i16, ptr %12177, align 2, !tbaa !37, !alias.scope !868, !noalias !874
  %12190 = trunc i16 %12189 to i8
  %12191 = shl i8 %12190, 1
  %12192 = and i8 %12191, 2
  %12193 = or i8 %12192, %12187
  %12194 = getelementptr inbounds %struct._PixelPacket, ptr %12153, i64 3, i32 3
  %12195 = load i16, ptr %12194, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %12196 = icmp eq i16 %12195, -1
  %12197 = zext i1 %12196 to i8
  %12198 = or i8 %12193, %12197
  store i8 %12198, ptr %12155, align 1, !tbaa !48, !alias.scope !870, !noalias !873
  %12199 = getelementptr inbounds %struct._PixelPacket, ptr %12153, i64 4
  %12200 = getelementptr inbounds i8, ptr %12155, i64 1
  %12201 = add nsw i64 %12156, -4
  %12202 = icmp ugt i64 %12156, 4
  br i1 %12202, label %12152, label %12203, !llvm.loop !879

12203:                                            ; preds = %12152, %12145, %11850
  %12204 = phi ptr [ %88, %11850 ], [ %11865, %12145 ], [ %12200, %12152 ]
  %12205 = phi ptr [ %165, %11850 ], [ %11864, %12145 ], [ %12188, %12152 ]
  %12206 = phi ptr [ %166, %11850 ], [ %11862, %12145 ], [ %12199, %12152 ]
  %12207 = and i64 %164, 3
  %12208 = icmp eq i64 %12207, 0
  br i1 %12208, label %17787, label %12209

12209:                                            ; preds = %12203
  %12210 = load i16, ptr %12205, align 2, !tbaa !37, !alias.scope !868, !noalias !874
  %12211 = trunc i16 %12210 to i8
  %12212 = shl i8 %12211, 7
  %12213 = getelementptr inbounds %struct._PixelPacket, ptr %12206, i64 0, i32 3
  %12214 = load i16, ptr %12213, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %12215 = icmp eq i16 %12214, -1
  %12216 = select i1 %12215, i8 64, i8 0
  %12217 = or i8 %12212, %12216
  %12218 = icmp eq i64 %12207, 3
  br i1 %12218, label %12219, label %12801, !llvm.loop !880

12219:                                            ; preds = %12209
  %12220 = getelementptr inbounds i16, ptr %12205, i64 1
  %12221 = load i16, ptr %12220, align 2, !tbaa !37, !alias.scope !868, !noalias !874
  %12222 = trunc i16 %12221 to i8
  %12223 = shl i8 %12222, 5
  %12224 = and i8 %12223, 32
  %12225 = getelementptr inbounds %struct._PixelPacket, ptr %12206, i64 1, i32 3
  %12226 = load i16, ptr %12225, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %12227 = icmp eq i16 %12226, -1
  %12228 = select i1 %12227, i8 16, i8 0
  %12229 = or i8 %12224, %12228
  %12230 = or i8 %12229, %12217
  br label %12801

12231:                                            ; preds = %11770, %12231
  %12232 = phi ptr [ %12249, %12231 ], [ %11771, %11770 ]
  %12233 = phi ptr [ %12236, %12231 ], [ %11772, %11770 ]
  %12234 = phi ptr [ %12250, %12231 ], [ %11773, %11770 ]
  %12235 = phi i64 [ %12251, %12231 ], [ %11774, %11770 ]
  %12236 = getelementptr inbounds i16, ptr %12233, i64 1
  %12237 = load i16, ptr %12233, align 2, !tbaa !37, !alias.scope !868, !noalias !874
  %12238 = trunc i16 %12237 to i8
  %12239 = shl i8 %12238, 4
  %12240 = getelementptr inbounds %struct._PixelPacket, ptr %12232, i64 0, i32 3
  %12241 = load i16, ptr %12240, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %12242 = xor i16 %12241, -1
  %12243 = uitofp i16 %12242 to double
  %12244 = fmul fast double %12243, 0x3F30001000100010
  %12245 = fadd fast double %12244, 5.000000e-01
  %12246 = fptoui double %12245 to i8
  %12247 = and i8 %12246, 15
  %12248 = or i8 %12247, %12239
  store i8 %12248, ptr %12234, align 1, !tbaa !48, !alias.scope !870, !noalias !873
  %12249 = getelementptr inbounds %struct._PixelPacket, ptr %12232, i64 1
  %12250 = getelementptr inbounds i8, ptr %12234, i64 1
  %12251 = add nuw nsw i64 %12235, 1
  %12252 = icmp eq i64 %12251, %164
  br i1 %12252, label %17787, label %12231, !llvm.loop !881

12253:                                            ; preds = %12281, %11638
  %12254 = phi ptr [ %166, %11638 ], [ %12294, %12281 ]
  %12255 = phi ptr [ %88, %11638 ], [ %12295, %12281 ]
  %12256 = phi i64 [ 0, %11638 ], [ %12296, %12281 ]
  %12257 = phi i64 [ 0, %11638 ], [ %12297, %12281 ]
  br i1 %11633, label %12262, label %12258

12258:                                            ; preds = %12253
  %12259 = getelementptr inbounds i16, ptr %165, i64 %12256
  %12260 = load i16, ptr %12259, align 2, !tbaa !37, !alias.scope !868, !noalias !874
  %12261 = trunc i16 %12260 to i8
  br label %12262

12262:                                            ; preds = %12258, %12253
  %12263 = phi i8 [ %12261, %12258 ], [ 0, %12253 ]
  %12264 = getelementptr inbounds i8, ptr %12255, i64 1
  store i8 %12263, ptr %12255, align 1, !tbaa !48, !alias.scope !870, !noalias !873
  %12265 = getelementptr inbounds %struct._PixelPacket, ptr %12254, i64 0, i32 3
  %12266 = load i16, ptr %12265, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %12267 = xor i16 %12266, -1
  %12268 = zext i16 %12267 to i64
  %12269 = add nuw nsw i64 %12268, 128
  %12270 = lshr i64 %12269, 8
  %12271 = sub nsw i64 %12269, %12270
  %12272 = lshr i64 %12271, 8
  %12273 = trunc i64 %12272 to i8
  %12274 = getelementptr inbounds i8, ptr %12255, i64 2
  store i8 %12273, ptr %12264, align 1, !tbaa !48, !alias.scope !870, !noalias !873
  %12275 = getelementptr inbounds i8, ptr %12274, i64 %11635
  br i1 %11633, label %12281, label %12276

12276:                                            ; preds = %12262
  %12277 = or i64 %12256, 1
  %12278 = getelementptr inbounds i16, ptr %165, i64 %12277
  %12279 = load i16, ptr %12278, align 2, !tbaa !37, !alias.scope !868, !noalias !874
  %12280 = trunc i16 %12279 to i8
  br label %12281

12281:                                            ; preds = %12276, %12262
  %12282 = phi i8 [ %12280, %12276 ], [ 0, %12262 ]
  %12283 = getelementptr inbounds i8, ptr %12275, i64 1
  store i8 %12282, ptr %12275, align 1, !tbaa !48, !alias.scope !870, !noalias !873
  %12284 = getelementptr inbounds %struct._PixelPacket, ptr %12254, i64 1, i32 3
  %12285 = load i16, ptr %12284, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %12286 = xor i16 %12285, -1
  %12287 = zext i16 %12286 to i64
  %12288 = add nuw nsw i64 %12287, 128
  %12289 = lshr i64 %12288, 8
  %12290 = sub nsw i64 %12288, %12289
  %12291 = lshr i64 %12290, 8
  %12292 = trunc i64 %12291 to i8
  %12293 = getelementptr inbounds i8, ptr %12275, i64 2
  store i8 %12292, ptr %12283, align 1, !tbaa !48, !alias.scope !870, !noalias !873
  %12294 = getelementptr inbounds %struct._PixelPacket, ptr %12254, i64 2
  %12295 = getelementptr inbounds i8, ptr %12293, i64 %11635
  %12296 = add nuw nsw i64 %12256, 2
  %12297 = add i64 %12257, 2
  %12298 = icmp eq i64 %12297, %11639
  br i1 %12298, label %17591, label %12253, !llvm.loop !882

12299:                                            ; preds = %11628
  %12300 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 2
  %12301 = load i32, ptr %12300, align 8, !tbaa !50, !noalias !872
  %12302 = icmp eq i32 %12301, 1
  %12303 = icmp sgt i64 %164, 0
  br i1 %12302, label %12312, label %12304

12304:                                            ; preds = %12299
  br i1 %12303, label %12305, label %17875

12305:                                            ; preds = %12304
  %12306 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %12307 = load i32, ptr %12306, align 8, !tbaa !51, !noalias !872
  %12308 = icmp eq ptr %165, null
  %12309 = icmp eq i32 %12307, 1
  %12310 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %12311 = load i64, ptr %12310, align 8, !tbaa !47, !noalias !872
  br label %12415

12312:                                            ; preds = %12299
  br i1 %12303, label %12313, label %17875

12313:                                            ; preds = %12312
  %12314 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %12315 = load i32, ptr %12314, align 8, !tbaa !51, !noalias !872
  %12316 = icmp eq ptr %165, null
  %12317 = icmp eq i32 %12315, 1
  %12318 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %12319 = load i64, ptr %12318, align 8, !tbaa !47, !noalias !872
  br label %12320

12320:                                            ; preds = %12402, %12313
  %12321 = phi ptr [ %166, %12313 ], [ %12411, %12402 ]
  %12322 = phi ptr [ %88, %12313 ], [ %12412, %12402 ]
  %12323 = phi i64 [ 0, %12313 ], [ %12413, %12402 ]
  br i1 %12316, label %12327, label %12324

12324:                                            ; preds = %12320
  %12325 = getelementptr inbounds i16, ptr %165, i64 %12323
  %12326 = load i16, ptr %12325, align 2, !tbaa !37, !alias.scope !868, !noalias !874
  br label %12327

12327:                                            ; preds = %12324, %12320
  %12328 = phi i16 [ %12326, %12324 ], [ 0, %12320 ]
  %12329 = lshr i16 %12328, 8
  %12330 = select i1 %12317, i16 %12328, i16 %12329
  %12331 = select i1 %12317, i16 %12329, i16 %12328
  %12332 = trunc i16 %12331 to i8
  %12333 = trunc i16 %12330 to i8
  store i8 %12333, ptr %12322, align 1, !alias.scope !870, !noalias !873
  %12334 = getelementptr inbounds i8, ptr %12322, i64 1
  store i8 %12332, ptr %12334, align 1, !alias.scope !870, !noalias !873
  %12335 = getelementptr inbounds i8, ptr %12322, i64 2
  %12336 = getelementptr inbounds %struct._PixelPacket, ptr %12321, i64 0, i32 3
  %12337 = load i16, ptr %12336, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %12338 = xor i16 %12337, -1
  %12339 = uitofp i16 %12338 to double
  %12340 = fmul fast double %12339, 0x3EF0001000100010
  %12341 = fptrunc double %12340 to float
  %12342 = bitcast float %12341 to i32
  %12343 = lshr i32 %12342, 16
  %12344 = and i32 %12343, 32768
  %12345 = lshr i32 %12342, 23
  %12346 = and i32 %12345, 255
  %12347 = add nsw i32 %12346, -112
  %12348 = and i32 %12342, 8388607
  %12349 = icmp ult i32 %12346, 113
  br i1 %12349, label %12350, label %12367

12350:                                            ; preds = %12327
  %12351 = icmp ult i32 %12346, 102
  br i1 %12351, label %12364, label %12352

12352:                                            ; preds = %12350
  %12353 = or i32 %12348, 8388608
  %12354 = sub nuw nsw i32 126, %12346
  %12355 = sub nuw nsw i32 125, %12346
  %12356 = shl nsw i32 -1, %12355
  %12357 = xor i32 %12356, -1
  %12358 = add nuw nsw i32 %12353, %12357
  %12359 = lshr i32 %12353, %12354
  %12360 = and i32 %12359, 1
  %12361 = add nuw nsw i32 %12358, %12360
  %12362 = lshr i32 %12361, %12354
  %12363 = or i32 %12362, %12344
  br label %12364

12364:                                            ; preds = %12352, %12350
  %12365 = phi i32 [ %12363, %12352 ], [ %12344, %12350 ]
  %12366 = trunc i32 %12365 to i16
  br label %12402

12367:                                            ; preds = %12327
  %12368 = icmp eq i32 %12347, 143
  br i1 %12368, label %12369, label %12382

12369:                                            ; preds = %12367
  %12370 = icmp eq i32 %12348, 0
  br i1 %12370, label %12371, label %12374

12371:                                            ; preds = %12369
  %12372 = trunc i32 %12344 to i16
  %12373 = or i16 %12372, 31744
  br label %12402

12374:                                            ; preds = %12369
  %12375 = lshr i32 %12348, 13
  %12376 = icmp ult i32 %12348, 8192
  %12377 = zext i1 %12376 to i32
  %12378 = or i32 %12375, %12377
  %12379 = or i32 %12378, %12344
  %12380 = trunc i32 %12379 to i16
  %12381 = or i16 %12380, 31744
  br label %12402

12382:                                            ; preds = %12367
  %12383 = lshr i32 %12342, 13
  %12384 = and i32 %12383, 1
  %12385 = add nuw nsw i32 %12348, 4095
  %12386 = add nuw nsw i32 %12385, %12384
  %12387 = and i32 %12386, 8388608
  %12388 = icmp eq i32 %12387, 0
  %12389 = add nsw i32 %12346, -111
  %12390 = select i1 %12388, i32 %12347, i32 %12389
  %12391 = icmp ugt i32 %12390, 30
  br i1 %12391, label %12392, label %12395

12392:                                            ; preds = %12382
  %12393 = trunc i32 %12344 to i16
  %12394 = or i16 %12393, 31744
  br label %12402

12395:                                            ; preds = %12382
  %12396 = lshr i32 %12386, 13
  %12397 = shl nuw nsw i32 %12390, 10
  %12398 = select i1 %12388, i32 %12396, i32 0
  %12399 = or i32 %12398, %12397
  %12400 = or i32 %12399, %12344
  %12401 = trunc i32 %12400 to i16
  br label %12402

12402:                                            ; preds = %12395, %12392, %12374, %12371, %12364
  %12403 = phi i16 [ %12366, %12364 ], [ %12373, %12371 ], [ %12381, %12374 ], [ %12394, %12392 ], [ %12401, %12395 ]
  %12404 = lshr i16 %12403, 8
  %12405 = select i1 %12317, i16 %12403, i16 %12404
  %12406 = select i1 %12317, i16 %12404, i16 %12403
  %12407 = trunc i16 %12406 to i8
  %12408 = trunc i16 %12405 to i8
  store i8 %12408, ptr %12335, align 1, !alias.scope !870, !noalias !873
  %12409 = getelementptr inbounds i8, ptr %12322, i64 3
  store i8 %12407, ptr %12409, align 1, !alias.scope !870, !noalias !873
  %12410 = getelementptr inbounds i8, ptr %12322, i64 4
  %12411 = getelementptr inbounds %struct._PixelPacket, ptr %12321, i64 1
  %12412 = getelementptr inbounds i8, ptr %12410, i64 %12319
  %12413 = add nuw nsw i64 %12323, 1
  %12414 = icmp eq i64 %12413, %164
  br i1 %12414, label %17787, label %12320, !llvm.loop !883

12415:                                            ; preds = %12422, %12305
  %12416 = phi ptr [ %166, %12305 ], [ %12441, %12422 ]
  %12417 = phi ptr [ %88, %12305 ], [ %12442, %12422 ]
  %12418 = phi i64 [ 0, %12305 ], [ %12443, %12422 ]
  br i1 %12308, label %12422, label %12419

12419:                                            ; preds = %12415
  %12420 = getelementptr inbounds i16, ptr %165, i64 %12418
  %12421 = load i16, ptr %12420, align 2, !tbaa !37, !alias.scope !868, !noalias !874
  br label %12422

12422:                                            ; preds = %12419, %12415
  %12423 = phi i16 [ %12421, %12419 ], [ 0, %12415 ]
  %12424 = lshr i16 %12423, 8
  %12425 = select i1 %12309, i16 %12423, i16 %12424
  %12426 = select i1 %12309, i16 %12424, i16 %12423
  %12427 = trunc i16 %12426 to i8
  %12428 = trunc i16 %12425 to i8
  store i8 %12428, ptr %12417, align 1, !alias.scope !870, !noalias !873
  %12429 = getelementptr inbounds i8, ptr %12417, i64 1
  store i8 %12427, ptr %12429, align 1, !alias.scope !870, !noalias !873
  %12430 = getelementptr inbounds i8, ptr %12417, i64 2
  %12431 = getelementptr inbounds %struct._PixelPacket, ptr %12416, i64 0, i32 3
  %12432 = load i16, ptr %12431, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %12433 = xor i16 %12432, -1
  %12434 = lshr i16 %12433, 8
  %12435 = select i1 %12309, i16 %12433, i16 %12434
  %12436 = select i1 %12309, i16 %12434, i16 %12433
  %12437 = trunc i16 %12436 to i8
  %12438 = trunc i16 %12435 to i8
  store i8 %12438, ptr %12430, align 1, !alias.scope !870, !noalias !873
  %12439 = getelementptr inbounds i8, ptr %12417, i64 3
  store i8 %12437, ptr %12439, align 1, !alias.scope !870, !noalias !873
  %12440 = getelementptr inbounds i8, ptr %12417, i64 4
  %12441 = getelementptr inbounds %struct._PixelPacket, ptr %12416, i64 1
  %12442 = getelementptr inbounds i8, ptr %12440, i64 %12311
  %12443 = add nuw nsw i64 %12418, 1
  %12444 = icmp eq i64 %12443, %164
  br i1 %12444, label %17787, label %12415, !llvm.loop !884

12445:                                            ; preds = %11628
  %12446 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 2
  %12447 = load i32, ptr %12446, align 8, !tbaa !50, !noalias !872
  %12448 = icmp eq i32 %12447, 1
  %12449 = icmp sgt i64 %164, 0
  br i1 %12448, label %12458, label %12450

12450:                                            ; preds = %12445
  br i1 %12449, label %12451, label %17875

12451:                                            ; preds = %12450
  %12452 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %12453 = load i32, ptr %12452, align 8, !tbaa !51, !noalias !872
  %12454 = icmp eq ptr %165, null
  %12455 = icmp eq i32 %12453, 1
  %12456 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %12457 = load i64, ptr %12456, align 8, !tbaa !47, !noalias !872
  br label %12537

12458:                                            ; preds = %12445
  br i1 %12449, label %12459, label %17875

12459:                                            ; preds = %12458
  %12460 = icmp eq ptr %165, null
  %12461 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 14
  %12462 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 3
  %12463 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %12464 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  br label %12465

12465:                                            ; preds = %12523, %12459
  %12466 = phi ptr [ %166, %12459 ], [ %12532, %12523 ]
  %12467 = phi ptr [ %88, %12459 ], [ %12534, %12523 ]
  %12468 = phi i64 [ 0, %12459 ], [ %12535, %12523 ]
  br i1 %12460, label %12473, label %12469

12469:                                            ; preds = %12465
  %12470 = getelementptr inbounds i16, ptr %165, i64 %12468
  %12471 = load i16, ptr %12470, align 2, !tbaa !37, !alias.scope !868, !noalias !874
  %12472 = zext i16 %12471 to i32
  br label %12473

12473:                                            ; preds = %12469, %12465
  %12474 = phi i32 [ %12472, %12469 ], [ 0, %12465 ]
  call void @llvm.experimental.noalias.scope.decl(metadata !885)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %28) #6, !noalias !888
  %12475 = call ptr @ResetMagickMemory(ptr noundef nonnull %28, i32 noundef 0, i64 noundef 4) #6, !noalias !889
  %12476 = sitofp i32 %12474 to double
  %12477 = load double, ptr %12461, align 8, !tbaa !59, !noalias !888
  %12478 = fmul fast double %12477, %12476
  %12479 = load double, ptr %12462, align 8, !tbaa !60, !noalias !888
  %12480 = fadd fast double %12478, %12479
  %12481 = fptrunc double %12480 to float
  %12482 = load i32, ptr %12463, align 8, !tbaa !51, !noalias !888
  %12483 = icmp eq i32 %12482, 1
  %12484 = bitcast float %12481 to i32
  %12485 = lshr i32 %12484, 24
  %12486 = trunc i32 %12485 to i8
  %12487 = lshr i32 %12484, 16
  %12488 = trunc i32 %12487 to i8
  %12489 = lshr i32 %12484, 8
  %12490 = trunc i32 %12489 to i8
  %12491 = trunc i32 %12484 to i8
  br i1 %12483, label %12493, label %12492

12492:                                            ; preds = %12473
  br label %12493

12493:                                            ; preds = %12492, %12473
  %12494 = phi i8 [ %12486, %12492 ], [ %12491, %12473 ]
  %12495 = phi i8 [ %12488, %12492 ], [ %12490, %12473 ]
  %12496 = phi i8 [ %12490, %12492 ], [ %12488, %12473 ]
  %12497 = phi i8 [ %12491, %12492 ], [ %12486, %12473 ]
  store i8 %12494, ptr %12467, align 1, !alias.scope !890, !noalias !873
  %12498 = getelementptr inbounds i8, ptr %12467, i64 1
  store i8 %12495, ptr %12498, align 1, !alias.scope !890, !noalias !873
  %12499 = getelementptr inbounds i8, ptr %12467, i64 2
  store i8 %12496, ptr %12499, align 1, !alias.scope !890, !noalias !873
  %12500 = getelementptr inbounds i8, ptr %12467, i64 3
  store i8 %12497, ptr %12500, align 1, !alias.scope !890, !noalias !873
  %12501 = getelementptr inbounds i8, ptr %12467, i64 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %28) #6, !noalias !888
  %12502 = getelementptr inbounds %struct._PixelPacket, ptr %12466, i64 0, i32 3
  %12503 = load i16, ptr %12502, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %12504 = xor i16 %12503, -1
  call void @llvm.experimental.noalias.scope.decl(metadata !891)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %27) #6, !noalias !894
  %12505 = call ptr @ResetMagickMemory(ptr noundef nonnull %27, i32 noundef 0, i64 noundef 4) #6, !noalias !895
  %12506 = uitofp i16 %12504 to double
  %12507 = load double, ptr %12461, align 8, !tbaa !59, !noalias !894
  %12508 = fmul fast double %12507, %12506
  %12509 = load double, ptr %12462, align 8, !tbaa !60, !noalias !894
  %12510 = fadd fast double %12508, %12509
  %12511 = fptrunc double %12510 to float
  %12512 = load i32, ptr %12463, align 8, !tbaa !51, !noalias !894
  %12513 = icmp eq i32 %12512, 1
  %12514 = bitcast float %12511 to i32
  %12515 = lshr i32 %12514, 24
  %12516 = trunc i32 %12515 to i8
  %12517 = lshr i32 %12514, 16
  %12518 = trunc i32 %12517 to i8
  %12519 = lshr i32 %12514, 8
  %12520 = trunc i32 %12519 to i8
  %12521 = trunc i32 %12514 to i8
  br i1 %12513, label %12523, label %12522

12522:                                            ; preds = %12493
  br label %12523

12523:                                            ; preds = %12522, %12493
  %12524 = phi i8 [ %12516, %12522 ], [ %12521, %12493 ]
  %12525 = phi i8 [ %12518, %12522 ], [ %12520, %12493 ]
  %12526 = phi i8 [ %12520, %12522 ], [ %12518, %12493 ]
  %12527 = phi i8 [ %12521, %12522 ], [ %12516, %12493 ]
  store i8 %12524, ptr %12501, align 1, !alias.scope !896, !noalias !873
  %12528 = getelementptr inbounds i8, ptr %12467, i64 5
  store i8 %12525, ptr %12528, align 1, !alias.scope !896, !noalias !873
  %12529 = getelementptr inbounds i8, ptr %12467, i64 6
  store i8 %12526, ptr %12529, align 1, !alias.scope !896, !noalias !873
  %12530 = getelementptr inbounds i8, ptr %12467, i64 7
  store i8 %12527, ptr %12530, align 1, !alias.scope !896, !noalias !873
  %12531 = getelementptr inbounds i8, ptr %12467, i64 8
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %27) #6, !noalias !894
  %12532 = getelementptr inbounds %struct._PixelPacket, ptr %12466, i64 1
  %12533 = load i64, ptr %12464, align 8, !tbaa !47, !noalias !872
  %12534 = getelementptr inbounds i8, ptr %12531, i64 %12533
  %12535 = add nuw nsw i64 %12468, 1
  %12536 = icmp eq i64 %12535, %164
  br i1 %12536, label %17787, label %12465, !llvm.loop !897

12537:                                            ; preds = %12569, %12451
  %12538 = phi ptr [ %166, %12451 ], [ %12582, %12569 ]
  %12539 = phi ptr [ %88, %12451 ], [ %12583, %12569 ]
  %12540 = phi i64 [ 0, %12451 ], [ %12584, %12569 ]
  br i1 %12454, label %12545, label %12541

12541:                                            ; preds = %12537
  %12542 = getelementptr inbounds i16, ptr %165, i64 %12540
  %12543 = load i16, ptr %12542, align 2, !tbaa !37, !alias.scope !868, !noalias !874
  %12544 = zext i16 %12543 to i32
  br label %12545

12545:                                            ; preds = %12541, %12537
  %12546 = phi i32 [ %12544, %12541 ], [ 0, %12537 ]
  %12547 = lshr i32 %12546, 8
  %12548 = trunc i32 %12546 to i8
  %12549 = trunc i32 %12547 to i8
  %12550 = select i1 %12455, i8 0, i8 %12548
  %12551 = select i1 %12455, i8 0, i8 %12549
  %12552 = select i1 %12455, i8 %12549, i8 0
  %12553 = select i1 %12455, i8 %12548, i8 0
  store i8 %12553, ptr %12539, align 1, !alias.scope !870, !noalias !873
  %12554 = getelementptr inbounds i8, ptr %12539, i64 1
  store i8 %12552, ptr %12554, align 1, !alias.scope !870, !noalias !873
  %12555 = getelementptr inbounds i8, ptr %12539, i64 2
  store i8 %12551, ptr %12555, align 1, !alias.scope !870, !noalias !873
  %12556 = getelementptr inbounds i8, ptr %12539, i64 3
  store i8 %12550, ptr %12556, align 1, !alias.scope !870, !noalias !873
  %12557 = getelementptr inbounds i8, ptr %12539, i64 4
  %12558 = getelementptr inbounds %struct._PixelPacket, ptr %12538, i64 0, i32 3
  %12559 = load i16, ptr %12558, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %12560 = xor i16 %12559, -1
  %12561 = zext i16 %12560 to i32
  %12562 = mul nuw i32 %12561, 65537
  br i1 %12455, label %12563, label %12566

12563:                                            ; preds = %12545
  %12564 = lshr i32 %12562, 8
  %12565 = lshr i32 %12562, 24
  br label %12569

12566:                                            ; preds = %12545
  %12567 = lshr i32 %12562, 24
  %12568 = lshr i32 %12562, 8
  br label %12569

12569:                                            ; preds = %12566, %12563
  %12570 = phi i32 [ %12562, %12563 ], [ %12567, %12566 ]
  %12571 = phi i32 [ %12564, %12563 ], [ %12561, %12566 ]
  %12572 = phi i32 [ %12561, %12563 ], [ %12568, %12566 ]
  %12573 = phi i32 [ %12565, %12563 ], [ %12562, %12566 ]
  %12574 = trunc i32 %12573 to i8
  %12575 = trunc i32 %12572 to i8
  %12576 = trunc i32 %12571 to i8
  %12577 = trunc i32 %12570 to i8
  store i8 %12577, ptr %12557, align 1, !alias.scope !870, !noalias !873
  %12578 = getelementptr inbounds i8, ptr %12539, i64 5
  store i8 %12576, ptr %12578, align 1, !alias.scope !870, !noalias !873
  %12579 = getelementptr inbounds i8, ptr %12539, i64 6
  store i8 %12575, ptr %12579, align 1, !alias.scope !870, !noalias !873
  %12580 = getelementptr inbounds i8, ptr %12539, i64 7
  store i8 %12574, ptr %12580, align 1, !alias.scope !870, !noalias !873
  %12581 = getelementptr inbounds i8, ptr %12539, i64 8
  %12582 = getelementptr inbounds %struct._PixelPacket, ptr %12538, i64 1
  %12583 = getelementptr inbounds i8, ptr %12581, i64 %12457
  %12584 = add nuw nsw i64 %12540, 1
  %12585 = icmp eq i64 %12584, %164
  br i1 %12585, label %17787, label %12537, !llvm.loop !898

12586:                                            ; preds = %11628
  %12587 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 2
  %12588 = load i32, ptr %12587, align 8, !tbaa !50, !noalias !872
  %12589 = icmp eq i32 %12588, 1
  br i1 %12589, label %12590, label %12700

12590:                                            ; preds = %12586
  %12591 = icmp sgt i64 %164, 0
  br i1 %12591, label %12592, label %17875

12592:                                            ; preds = %12590
  %12593 = icmp eq ptr %165, null
  %12594 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 14
  %12595 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 3
  %12596 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %12597 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  br label %12598

12598:                                            ; preds = %12678, %12592
  %12599 = phi ptr [ %166, %12592 ], [ %12695, %12678 ]
  %12600 = phi ptr [ %88, %12592 ], [ %12697, %12678 ]
  %12601 = phi i64 [ 0, %12592 ], [ %12698, %12678 ]
  br i1 %12593, label %12606, label %12602

12602:                                            ; preds = %12598
  %12603 = getelementptr inbounds i16, ptr %165, i64 %12601
  %12604 = load i16, ptr %12603, align 2, !tbaa !37, !alias.scope !868, !noalias !874
  %12605 = zext i16 %12604 to i32
  br label %12606

12606:                                            ; preds = %12602, %12598
  %12607 = phi i32 [ %12605, %12602 ], [ 0, %12598 ]
  %12608 = sitofp i32 %12607 to double
  call void @llvm.experimental.noalias.scope.decl(metadata !899)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %26) #6, !noalias !902
  %12609 = call ptr @ResetMagickMemory(ptr noundef nonnull %26, i32 noundef 0, i64 noundef 8) #6, !noalias !903
  %12610 = load double, ptr %12594, align 8, !tbaa !59, !noalias !902
  %12611 = fmul fast double %12610, %12608
  %12612 = load double, ptr %12595, align 8, !tbaa !60, !noalias !902
  %12613 = fadd fast double %12611, %12612
  %12614 = load i32, ptr %12596, align 8, !tbaa !51, !noalias !902
  %12615 = icmp eq i32 %12614, 1
  %12616 = bitcast double %12613 to i64
  %12617 = lshr i64 %12616, 56
  %12618 = trunc i64 %12617 to i8
  %12619 = lshr i64 %12616, 48
  %12620 = trunc i64 %12619 to i8
  %12621 = lshr i64 %12616, 40
  %12622 = trunc i64 %12621 to i8
  %12623 = lshr i64 %12616, 32
  %12624 = trunc i64 %12623 to i8
  %12625 = lshr i64 %12616, 24
  %12626 = trunc i64 %12625 to i8
  %12627 = lshr i64 %12616, 16
  %12628 = trunc i64 %12627 to i8
  %12629 = lshr i64 %12616, 8
  %12630 = trunc i64 %12629 to i8
  %12631 = trunc i64 %12616 to i8
  br i1 %12615, label %12633, label %12632

12632:                                            ; preds = %12606
  br label %12633

12633:                                            ; preds = %12632, %12606
  %12634 = phi i8 [ %12618, %12632 ], [ %12631, %12606 ]
  %12635 = phi i8 [ %12620, %12632 ], [ %12630, %12606 ]
  %12636 = phi i8 [ %12622, %12632 ], [ %12628, %12606 ]
  %12637 = phi i8 [ %12624, %12632 ], [ %12626, %12606 ]
  %12638 = phi i8 [ %12626, %12632 ], [ %12624, %12606 ]
  %12639 = phi i8 [ %12628, %12632 ], [ %12622, %12606 ]
  %12640 = phi i8 [ %12630, %12632 ], [ %12620, %12606 ]
  %12641 = phi i8 [ %12631, %12632 ], [ %12618, %12606 ]
  store i8 %12634, ptr %12600, align 1, !alias.scope !904, !noalias !873
  %12642 = getelementptr inbounds i8, ptr %12600, i64 1
  store i8 %12635, ptr %12642, align 1, !alias.scope !904, !noalias !873
  %12643 = getelementptr inbounds i8, ptr %12600, i64 2
  store i8 %12636, ptr %12643, align 1, !alias.scope !904, !noalias !873
  %12644 = getelementptr inbounds i8, ptr %12600, i64 3
  store i8 %12637, ptr %12644, align 1, !alias.scope !904, !noalias !873
  %12645 = getelementptr inbounds i8, ptr %12600, i64 4
  store i8 %12638, ptr %12645, align 1, !alias.scope !904, !noalias !873
  %12646 = getelementptr inbounds i8, ptr %12600, i64 5
  store i8 %12639, ptr %12646, align 1, !alias.scope !904, !noalias !873
  %12647 = getelementptr inbounds i8, ptr %12600, i64 6
  store i8 %12640, ptr %12647, align 1, !alias.scope !904, !noalias !873
  %12648 = getelementptr inbounds i8, ptr %12600, i64 7
  store i8 %12641, ptr %12648, align 1, !alias.scope !904, !noalias !873
  %12649 = getelementptr inbounds i8, ptr %12600, i64 8
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %26) #6, !noalias !902
  %12650 = getelementptr inbounds %struct._PixelPacket, ptr %12599, i64 0, i32 3
  %12651 = load i16, ptr %12650, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %12652 = xor i16 %12651, -1
  %12653 = uitofp i16 %12652 to double
  call void @llvm.experimental.noalias.scope.decl(metadata !905)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %25) #6, !noalias !908
  %12654 = call ptr @ResetMagickMemory(ptr noundef nonnull %25, i32 noundef 0, i64 noundef 8) #6, !noalias !909
  %12655 = load double, ptr %12594, align 8, !tbaa !59, !noalias !908
  %12656 = fmul fast double %12655, %12653
  %12657 = load double, ptr %12595, align 8, !tbaa !60, !noalias !908
  %12658 = fadd fast double %12656, %12657
  %12659 = load i32, ptr %12596, align 8, !tbaa !51, !noalias !908
  %12660 = icmp eq i32 %12659, 1
  %12661 = bitcast double %12658 to i64
  %12662 = lshr i64 %12661, 56
  %12663 = trunc i64 %12662 to i8
  %12664 = lshr i64 %12661, 48
  %12665 = trunc i64 %12664 to i8
  %12666 = lshr i64 %12661, 40
  %12667 = trunc i64 %12666 to i8
  %12668 = lshr i64 %12661, 32
  %12669 = trunc i64 %12668 to i8
  %12670 = lshr i64 %12661, 24
  %12671 = trunc i64 %12670 to i8
  %12672 = lshr i64 %12661, 16
  %12673 = trunc i64 %12672 to i8
  %12674 = lshr i64 %12661, 8
  %12675 = trunc i64 %12674 to i8
  %12676 = trunc i64 %12661 to i8
  br i1 %12660, label %12678, label %12677

12677:                                            ; preds = %12633
  br label %12678

12678:                                            ; preds = %12677, %12633
  %12679 = phi i8 [ %12663, %12677 ], [ %12676, %12633 ]
  %12680 = phi i8 [ %12665, %12677 ], [ %12675, %12633 ]
  %12681 = phi i8 [ %12667, %12677 ], [ %12673, %12633 ]
  %12682 = phi i8 [ %12669, %12677 ], [ %12671, %12633 ]
  %12683 = phi i8 [ %12671, %12677 ], [ %12669, %12633 ]
  %12684 = phi i8 [ %12673, %12677 ], [ %12667, %12633 ]
  %12685 = phi i8 [ %12675, %12677 ], [ %12665, %12633 ]
  %12686 = phi i8 [ %12676, %12677 ], [ %12663, %12633 ]
  store i8 %12679, ptr %12649, align 1, !alias.scope !910, !noalias !873
  %12687 = getelementptr inbounds i8, ptr %12600, i64 9
  store i8 %12680, ptr %12687, align 1, !alias.scope !910, !noalias !873
  %12688 = getelementptr inbounds i8, ptr %12600, i64 10
  store i8 %12681, ptr %12688, align 1, !alias.scope !910, !noalias !873
  %12689 = getelementptr inbounds i8, ptr %12600, i64 11
  store i8 %12682, ptr %12689, align 1, !alias.scope !910, !noalias !873
  %12690 = getelementptr inbounds i8, ptr %12600, i64 12
  store i8 %12683, ptr %12690, align 1, !alias.scope !910, !noalias !873
  %12691 = getelementptr inbounds i8, ptr %12600, i64 13
  store i8 %12684, ptr %12691, align 1, !alias.scope !910, !noalias !873
  %12692 = getelementptr inbounds i8, ptr %12600, i64 14
  store i8 %12685, ptr %12692, align 1, !alias.scope !910, !noalias !873
  %12693 = getelementptr inbounds i8, ptr %12600, i64 15
  store i8 %12686, ptr %12693, align 1, !alias.scope !910, !noalias !873
  %12694 = getelementptr inbounds i8, ptr %12600, i64 16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %25) #6, !noalias !908
  %12695 = getelementptr inbounds %struct._PixelPacket, ptr %12599, i64 1
  %12696 = load i64, ptr %12597, align 8, !tbaa !47, !noalias !872
  %12697 = getelementptr inbounds i8, ptr %12694, i64 %12696
  %12698 = add nuw nsw i64 %12601, 1
  %12699 = icmp eq i64 %12698, %164
  br i1 %12699, label %17787, label %12598, !llvm.loop !911

12700:                                            ; preds = %12586, %11628
  %12701 = icmp sgt i64 %164, 0
  br i1 %12701, label %12702, label %17875

12702:                                            ; preds = %12700
  %12703 = add i64 %11629, -1
  %12704 = shl i64 2, %12703
  %12705 = add i64 %12704, -1
  %12706 = icmp eq ptr %165, null
  %12707 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 14, i32 2
  %12708 = uitofp i64 %12705 to float
  %12709 = fmul fast float %12708, 0x3EF0001000000000
  %12710 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %12711 = icmp sgt i64 %11629, 0
  %12712 = load i64, ptr %12710, align 8, !tbaa !47, !noalias !872
  br label %12713

12713:                                            ; preds = %12795, %12702
  %12714 = phi ptr [ %166, %12702 ], [ %12797, %12795 ]
  %12715 = phi ptr [ %88, %12702 ], [ %12798, %12795 ]
  %12716 = phi i64 [ 0, %12702 ], [ %12799, %12795 ]
  br i1 %12706, label %12721, label %12717

12717:                                            ; preds = %12713
  %12718 = getelementptr inbounds i16, ptr %165, i64 %12716
  %12719 = load i16, ptr %12718, align 2, !tbaa !37, !alias.scope !868, !noalias !874
  %12720 = zext i16 %12719 to i64
  br label %12721

12721:                                            ; preds = %12717, %12713
  %12722 = phi i64 [ %12720, %12717 ], [ 0, %12713 ]
  tail call void @llvm.experimental.noalias.scope.decl(metadata !912)
  %12723 = load i64, ptr %12707, align 8, !tbaa !69, !noalias !872
  %12724 = icmp eq i64 %12723, 0
  br i1 %12724, label %12725, label %12726

12725:                                            ; preds = %12721
  store i64 8, ptr %12707, align 8, !tbaa !69, !noalias !915
  br label %12726

12726:                                            ; preds = %12725, %12721
  %12727 = phi i64 [ 8, %12725 ], [ %12723, %12721 ]
  br i1 %12711, label %12728, label %12754

12728:                                            ; preds = %12726, %12738
  %12729 = phi i64 [ %12749, %12738 ], [ %12727, %12726 ]
  %12730 = phi i64 [ %12734, %12738 ], [ %11629, %12726 ]
  %12731 = phi ptr [ %12751, %12738 ], [ %12715, %12726 ]
  %12732 = tail call i64 @llvm.umin.i64(i64 %12730, i64 %12729)
  %12733 = sub nsw i64 %12730, %12732
  %12734 = tail call i64 @llvm.smax.i64(i64 %12733, i64 0)
  %12735 = icmp eq i64 %12729, 8
  br i1 %12735, label %12738, label %12736

12736:                                            ; preds = %12728
  %12737 = load i8, ptr %12731, align 1, !tbaa !48, !alias.scope !916, !noalias !873
  br label %12738

12738:                                            ; preds = %12736, %12728
  %12739 = phi i8 [ %12737, %12736 ], [ 0, %12728 ]
  %12740 = sub i64 %12729, %12732
  %12741 = lshr i64 %12722, %12734
  %12742 = shl nsw i64 -1, %12732
  %12743 = xor i64 %12742, -1
  %12744 = and i64 %12741, %12743
  %12745 = shl i64 %12744, %12740
  %12746 = trunc i64 %12745 to i8
  %12747 = or i8 %12739, %12746
  store i8 %12747, ptr %12731, align 1, !tbaa !48, !alias.scope !916, !noalias !873
  %12748 = icmp ule i64 %12729, %12730
  %12749 = select i1 %12748, i64 8, i64 %12740
  %12750 = zext i1 %12748 to i64
  %12751 = getelementptr inbounds i8, ptr %12731, i64 %12750
  %12752 = icmp slt i64 %12733, 1
  br i1 %12752, label %12753, label %12728, !llvm.loop !75

12753:                                            ; preds = %12738
  store i64 %12749, ptr %12707, align 8, !tbaa !69, !noalias !915
  br label %12754

12754:                                            ; preds = %12753, %12726
  %12755 = phi i64 [ %12727, %12726 ], [ %12749, %12753 ]
  %12756 = phi ptr [ %12715, %12726 ], [ %12751, %12753 ]
  %12757 = getelementptr inbounds %struct._PixelPacket, ptr %12714, i64 0, i32 3
  %12758 = load i16, ptr %12757, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %12759 = xor i16 %12758, -1
  %12760 = uitofp i16 %12759 to float
  %12761 = fmul fast float %12709, %12760
  %12762 = fpext float %12761 to double
  %12763 = fadd fast double %12762, 5.000000e-01
  %12764 = fptoui double %12763 to i64
  tail call void @llvm.experimental.noalias.scope.decl(metadata !917)
  %12765 = icmp eq i64 %12755, 0
  br i1 %12765, label %12766, label %12767

12766:                                            ; preds = %12754
  store i64 8, ptr %12707, align 8, !tbaa !69, !noalias !920
  br label %12767

12767:                                            ; preds = %12766, %12754
  %12768 = phi i64 [ 8, %12766 ], [ %12755, %12754 ]
  br i1 %12711, label %12769, label %12795

12769:                                            ; preds = %12767, %12779
  %12770 = phi i64 [ %12790, %12779 ], [ %12768, %12767 ]
  %12771 = phi i64 [ %12775, %12779 ], [ %11629, %12767 ]
  %12772 = phi ptr [ %12792, %12779 ], [ %12756, %12767 ]
  %12773 = tail call i64 @llvm.umin.i64(i64 %12771, i64 %12770)
  %12774 = sub nsw i64 %12771, %12773
  %12775 = tail call i64 @llvm.smax.i64(i64 %12774, i64 0)
  %12776 = icmp eq i64 %12770, 8
  br i1 %12776, label %12779, label %12777

12777:                                            ; preds = %12769
  %12778 = load i8, ptr %12772, align 1, !tbaa !48, !alias.scope !921, !noalias !873
  br label %12779

12779:                                            ; preds = %12777, %12769
  %12780 = phi i8 [ %12778, %12777 ], [ 0, %12769 ]
  %12781 = sub i64 %12770, %12773
  %12782 = lshr i64 %12764, %12775
  %12783 = shl nsw i64 -1, %12773
  %12784 = xor i64 %12783, -1
  %12785 = and i64 %12782, %12784
  %12786 = shl i64 %12785, %12781
  %12787 = trunc i64 %12786 to i8
  %12788 = or i8 %12780, %12787
  store i8 %12788, ptr %12772, align 1, !tbaa !48, !alias.scope !921, !noalias !873
  %12789 = icmp ule i64 %12770, %12771
  %12790 = select i1 %12789, i64 8, i64 %12781
  %12791 = zext i1 %12789 to i64
  %12792 = getelementptr inbounds i8, ptr %12772, i64 %12791
  %12793 = icmp slt i64 %12774, 1
  br i1 %12793, label %12794, label %12769, !llvm.loop !75

12794:                                            ; preds = %12779
  store i64 %12790, ptr %12707, align 8, !tbaa !69, !noalias !920
  br label %12795

12795:                                            ; preds = %12794, %12767
  %12796 = phi ptr [ %12756, %12767 ], [ %12792, %12794 ]
  %12797 = getelementptr inbounds %struct._PixelPacket, ptr %12714, i64 1
  %12798 = getelementptr inbounds i8, ptr %12796, i64 %12712
  %12799 = add nuw nsw i64 %12716, 1
  %12800 = icmp eq i64 %12799, %164
  br i1 %12800, label %17787, label %12713, !llvm.loop !922

12801:                                            ; preds = %12219, %12209
  %12802 = phi i8 [ %12217, %12209 ], [ %12230, %12219 ]
  store i8 %12802, ptr %12204, align 1, !tbaa !48, !alias.scope !870, !noalias !873
  br label %17787

12803:                                            ; preds = %256
  tail call void @llvm.experimental.noalias.scope.decl(metadata !923)
  tail call void @llvm.experimental.noalias.scope.decl(metadata !926)
  %12804 = load i64, ptr %2, align 8, !tbaa !45, !noalias !928
  %12805 = add i64 %12804, -8
  %12806 = tail call i64 @llvm.fshl.i64(i64 %12804, i64 %12805, i64 61)
  switch i64 %12806, label %13239 [
    i64 0, label %12807
    i64 1, label %12843
    i64 3, label %13035
    i64 7, label %13175
  ]

12807:                                            ; preds = %12803
  %12808 = icmp sgt i64 %164, 0
  br i1 %12808, label %12809, label %17875

12809:                                            ; preds = %12807
  %12810 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %12811 = load i64, ptr %12810, align 8, !tbaa !47, !noalias !928
  %12812 = and i64 %164, 1
  %12813 = icmp eq i64 %164, 1
  br i1 %12813, label %17613, label %12814

12814:                                            ; preds = %12809
  %12815 = and i64 %164, -2
  br label %12816

12816:                                            ; preds = %12816, %12814
  %12817 = phi ptr [ %166, %12814 ], [ %12839, %12816 ]
  %12818 = phi ptr [ %88, %12814 ], [ %12840, %12816 ]
  %12819 = phi i64 [ 0, %12814 ], [ %12841, %12816 ]
  %12820 = getelementptr inbounds %struct._PixelPacket, ptr %12817, i64 0, i32 3
  %12821 = load i16, ptr %12820, align 2, !tbaa !28, !alias.scope !923, !noalias !926
  %12822 = zext i16 %12821 to i64
  %12823 = add nuw nsw i64 %12822, 128
  %12824 = lshr i64 %12823, 8
  %12825 = sub nsw i64 %12823, %12824
  %12826 = lshr i64 %12825, 8
  %12827 = trunc i64 %12826 to i8
  %12828 = getelementptr inbounds i8, ptr %12818, i64 1
  store i8 %12827, ptr %12818, align 1, !tbaa !48, !alias.scope !926, !noalias !923
  %12829 = getelementptr inbounds i8, ptr %12828, i64 %12811
  %12830 = getelementptr inbounds %struct._PixelPacket, ptr %12817, i64 1, i32 3
  %12831 = load i16, ptr %12830, align 2, !tbaa !28, !alias.scope !923, !noalias !926
  %12832 = zext i16 %12831 to i64
  %12833 = add nuw nsw i64 %12832, 128
  %12834 = lshr i64 %12833, 8
  %12835 = sub nsw i64 %12833, %12834
  %12836 = lshr i64 %12835, 8
  %12837 = trunc i64 %12836 to i8
  %12838 = getelementptr inbounds i8, ptr %12829, i64 1
  store i8 %12837, ptr %12829, align 1, !tbaa !48, !alias.scope !926, !noalias !923
  %12839 = getelementptr inbounds %struct._PixelPacket, ptr %12817, i64 2
  %12840 = getelementptr inbounds i8, ptr %12838, i64 %12811
  %12841 = add i64 %12819, 2
  %12842 = icmp eq i64 %12841, %12815
  br i1 %12842, label %17613, label %12816, !llvm.loop !929

12843:                                            ; preds = %12803
  %12844 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 2
  %12845 = load i32, ptr %12844, align 8, !tbaa !50, !noalias !928
  %12846 = icmp eq i32 %12845, 1
  %12847 = icmp sgt i64 %164, 0
  br i1 %12846, label %12907, label %12848

12848:                                            ; preds = %12843
  br i1 %12847, label %12849, label %17875

12849:                                            ; preds = %12848
  %12850 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %12851 = load i32, ptr %12850, align 8, !tbaa !51, !noalias !928
  %12852 = freeze i32 %12851
  %12853 = icmp eq i32 %12852, 1
  %12854 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %12855 = load i64, ptr %12854, align 8, !tbaa !47, !noalias !928
  br i1 %12853, label %12862, label %12856

12856:                                            ; preds = %12849
  %12857 = add i64 %164, -1
  %12858 = and i64 %164, 3
  %12859 = icmp ult i64 %12857, 3
  br i1 %12859, label %17645, label %12860

12860:                                            ; preds = %12856
  %12861 = and i64 %164, -4
  br label %12996

12862:                                            ; preds = %12849
  %12863 = add i64 %164, -1
  %12864 = and i64 %164, 3
  %12865 = icmp ult i64 %12863, 3
  br i1 %12865, label %17626, label %12866

12866:                                            ; preds = %12862
  %12867 = and i64 %164, -4
  br label %12868

12868:                                            ; preds = %12868, %12866
  %12869 = phi ptr [ %166, %12866 ], [ %12903, %12868 ]
  %12870 = phi ptr [ %88, %12866 ], [ %12904, %12868 ]
  %12871 = phi i64 [ 0, %12866 ], [ %12905, %12868 ]
  %12872 = getelementptr inbounds %struct._PixelPacket, ptr %12869, i64 0, i32 3
  %12873 = load i16, ptr %12872, align 2, !tbaa !28, !alias.scope !923, !noalias !926
  %12874 = lshr i16 %12873, 8
  %12875 = trunc i16 %12874 to i8
  %12876 = trunc i16 %12873 to i8
  store i8 %12876, ptr %12870, align 1, !alias.scope !926, !noalias !923
  %12877 = getelementptr inbounds i8, ptr %12870, i64 1
  store i8 %12875, ptr %12877, align 1, !alias.scope !926, !noalias !923
  %12878 = getelementptr inbounds i8, ptr %12870, i64 2
  %12879 = getelementptr inbounds i8, ptr %12878, i64 %12855
  %12880 = getelementptr inbounds %struct._PixelPacket, ptr %12869, i64 1, i32 3
  %12881 = load i16, ptr %12880, align 2, !tbaa !28, !alias.scope !923, !noalias !926
  %12882 = lshr i16 %12881, 8
  %12883 = trunc i16 %12882 to i8
  %12884 = trunc i16 %12881 to i8
  store i8 %12884, ptr %12879, align 1, !alias.scope !926, !noalias !923
  %12885 = getelementptr inbounds i8, ptr %12879, i64 1
  store i8 %12883, ptr %12885, align 1, !alias.scope !926, !noalias !923
  %12886 = getelementptr inbounds i8, ptr %12879, i64 2
  %12887 = getelementptr inbounds i8, ptr %12886, i64 %12855
  %12888 = getelementptr inbounds %struct._PixelPacket, ptr %12869, i64 2, i32 3
  %12889 = load i16, ptr %12888, align 2, !tbaa !28, !alias.scope !923, !noalias !926
  %12890 = lshr i16 %12889, 8
  %12891 = trunc i16 %12890 to i8
  %12892 = trunc i16 %12889 to i8
  store i8 %12892, ptr %12887, align 1, !alias.scope !926, !noalias !923
  %12893 = getelementptr inbounds i8, ptr %12887, i64 1
  store i8 %12891, ptr %12893, align 1, !alias.scope !926, !noalias !923
  %12894 = getelementptr inbounds i8, ptr %12887, i64 2
  %12895 = getelementptr inbounds i8, ptr %12894, i64 %12855
  %12896 = getelementptr inbounds %struct._PixelPacket, ptr %12869, i64 3, i32 3
  %12897 = load i16, ptr %12896, align 2, !tbaa !28, !alias.scope !923, !noalias !926
  %12898 = lshr i16 %12897, 8
  %12899 = trunc i16 %12898 to i8
  %12900 = trunc i16 %12897 to i8
  store i8 %12900, ptr %12895, align 1, !alias.scope !926, !noalias !923
  %12901 = getelementptr inbounds i8, ptr %12895, i64 1
  store i8 %12899, ptr %12901, align 1, !alias.scope !926, !noalias !923
  %12902 = getelementptr inbounds i8, ptr %12895, i64 2
  %12903 = getelementptr inbounds %struct._PixelPacket, ptr %12869, i64 4
  %12904 = getelementptr inbounds i8, ptr %12902, i64 %12855
  %12905 = add i64 %12871, 4
  %12906 = icmp eq i64 %12905, %12867
  br i1 %12906, label %17626, label %12868, !llvm.loop !930

12907:                                            ; preds = %12843
  br i1 %12847, label %12908, label %17875

12908:                                            ; preds = %12907
  %12909 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %12910 = load i32, ptr %12909, align 8, !tbaa !51, !noalias !928
  %12911 = icmp eq i32 %12910, 1
  %12912 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %12913 = load i64, ptr %12912, align 8, !tbaa !47, !noalias !928
  br label %12914

12914:                                            ; preds = %12983, %12908
  %12915 = phi ptr [ %166, %12908 ], [ %12992, %12983 ]
  %12916 = phi ptr [ %88, %12908 ], [ %12993, %12983 ]
  %12917 = phi i64 [ 0, %12908 ], [ %12994, %12983 ]
  %12918 = getelementptr inbounds %struct._PixelPacket, ptr %12915, i64 0, i32 3
  %12919 = load i16, ptr %12918, align 2, !tbaa !28, !alias.scope !923, !noalias !926
  %12920 = uitofp i16 %12919 to double
  %12921 = fmul fast double %12920, 0x3EF0001000100010
  %12922 = fptrunc double %12921 to float
  %12923 = bitcast float %12922 to i32
  %12924 = lshr i32 %12923, 16
  %12925 = and i32 %12924, 32768
  %12926 = lshr i32 %12923, 23
  %12927 = and i32 %12926, 255
  %12928 = add nsw i32 %12927, -112
  %12929 = and i32 %12923, 8388607
  %12930 = icmp ult i32 %12927, 113
  br i1 %12930, label %12931, label %12948

12931:                                            ; preds = %12914
  %12932 = icmp ult i32 %12927, 102
  br i1 %12932, label %12945, label %12933

12933:                                            ; preds = %12931
  %12934 = or i32 %12929, 8388608
  %12935 = sub nuw nsw i32 126, %12927
  %12936 = sub nuw nsw i32 125, %12927
  %12937 = shl nsw i32 -1, %12936
  %12938 = xor i32 %12937, -1
  %12939 = add nuw nsw i32 %12934, %12938
  %12940 = lshr i32 %12934, %12935
  %12941 = and i32 %12940, 1
  %12942 = add nuw nsw i32 %12939, %12941
  %12943 = lshr i32 %12942, %12935
  %12944 = or i32 %12943, %12925
  br label %12945

12945:                                            ; preds = %12933, %12931
  %12946 = phi i32 [ %12944, %12933 ], [ %12925, %12931 ]
  %12947 = trunc i32 %12946 to i16
  br label %12983

12948:                                            ; preds = %12914
  %12949 = icmp eq i32 %12928, 143
  br i1 %12949, label %12950, label %12963

12950:                                            ; preds = %12948
  %12951 = icmp eq i32 %12929, 0
  br i1 %12951, label %12952, label %12955

12952:                                            ; preds = %12950
  %12953 = trunc i32 %12925 to i16
  %12954 = or i16 %12953, 31744
  br label %12983

12955:                                            ; preds = %12950
  %12956 = lshr i32 %12929, 13
  %12957 = icmp ult i32 %12929, 8192
  %12958 = zext i1 %12957 to i32
  %12959 = or i32 %12956, %12958
  %12960 = or i32 %12959, %12925
  %12961 = trunc i32 %12960 to i16
  %12962 = or i16 %12961, 31744
  br label %12983

12963:                                            ; preds = %12948
  %12964 = lshr i32 %12923, 13
  %12965 = and i32 %12964, 1
  %12966 = add nuw nsw i32 %12929, 4095
  %12967 = add nuw nsw i32 %12966, %12965
  %12968 = and i32 %12967, 8388608
  %12969 = icmp eq i32 %12968, 0
  %12970 = add nsw i32 %12927, -111
  %12971 = select i1 %12969, i32 %12928, i32 %12970
  %12972 = icmp ugt i32 %12971, 30
  br i1 %12972, label %12973, label %12976

12973:                                            ; preds = %12963
  %12974 = trunc i32 %12925 to i16
  %12975 = or i16 %12974, 31744
  br label %12983

12976:                                            ; preds = %12963
  %12977 = lshr i32 %12967, 13
  %12978 = shl nuw nsw i32 %12971, 10
  %12979 = select i1 %12969, i32 %12977, i32 0
  %12980 = or i32 %12979, %12978
  %12981 = or i32 %12980, %12925
  %12982 = trunc i32 %12981 to i16
  br label %12983

12983:                                            ; preds = %12976, %12973, %12955, %12952, %12945
  %12984 = phi i16 [ %12947, %12945 ], [ %12954, %12952 ], [ %12962, %12955 ], [ %12975, %12973 ], [ %12982, %12976 ]
  %12985 = lshr i16 %12984, 8
  %12986 = select i1 %12911, i16 %12984, i16 %12985
  %12987 = select i1 %12911, i16 %12985, i16 %12984
  %12988 = trunc i16 %12987 to i8
  %12989 = trunc i16 %12986 to i8
  store i8 %12989, ptr %12916, align 1, !alias.scope !926, !noalias !923
  %12990 = getelementptr inbounds i8, ptr %12916, i64 1
  store i8 %12988, ptr %12990, align 1, !alias.scope !926, !noalias !923
  %12991 = getelementptr inbounds i8, ptr %12916, i64 2
  %12992 = getelementptr inbounds %struct._PixelPacket, ptr %12915, i64 1
  %12993 = getelementptr inbounds i8, ptr %12991, i64 %12913
  %12994 = add nuw nsw i64 %12917, 1
  %12995 = icmp eq i64 %12994, %164
  br i1 %12995, label %17787, label %12914, !llvm.loop !931

12996:                                            ; preds = %12996, %12860
  %12997 = phi ptr [ %166, %12860 ], [ %13031, %12996 ]
  %12998 = phi ptr [ %88, %12860 ], [ %13032, %12996 ]
  %12999 = phi i64 [ 0, %12860 ], [ %13033, %12996 ]
  %13000 = getelementptr inbounds %struct._PixelPacket, ptr %12997, i64 0, i32 3
  %13001 = load i16, ptr %13000, align 2, !tbaa !28, !alias.scope !923, !noalias !926
  %13002 = lshr i16 %13001, 8
  %13003 = trunc i16 %13001 to i8
  %13004 = trunc i16 %13002 to i8
  store i8 %13004, ptr %12998, align 1, !alias.scope !926, !noalias !923
  %13005 = getelementptr inbounds i8, ptr %12998, i64 1
  store i8 %13003, ptr %13005, align 1, !alias.scope !926, !noalias !923
  %13006 = getelementptr inbounds i8, ptr %12998, i64 2
  %13007 = getelementptr inbounds i8, ptr %13006, i64 %12855
  %13008 = getelementptr inbounds %struct._PixelPacket, ptr %12997, i64 1, i32 3
  %13009 = load i16, ptr %13008, align 2, !tbaa !28, !alias.scope !923, !noalias !926
  %13010 = lshr i16 %13009, 8
  %13011 = trunc i16 %13009 to i8
  %13012 = trunc i16 %13010 to i8
  store i8 %13012, ptr %13007, align 1, !alias.scope !926, !noalias !923
  %13013 = getelementptr inbounds i8, ptr %13007, i64 1
  store i8 %13011, ptr %13013, align 1, !alias.scope !926, !noalias !923
  %13014 = getelementptr inbounds i8, ptr %13007, i64 2
  %13015 = getelementptr inbounds i8, ptr %13014, i64 %12855
  %13016 = getelementptr inbounds %struct._PixelPacket, ptr %12997, i64 2, i32 3
  %13017 = load i16, ptr %13016, align 2, !tbaa !28, !alias.scope !923, !noalias !926
  %13018 = lshr i16 %13017, 8
  %13019 = trunc i16 %13017 to i8
  %13020 = trunc i16 %13018 to i8
  store i8 %13020, ptr %13015, align 1, !alias.scope !926, !noalias !923
  %13021 = getelementptr inbounds i8, ptr %13015, i64 1
  store i8 %13019, ptr %13021, align 1, !alias.scope !926, !noalias !923
  %13022 = getelementptr inbounds i8, ptr %13015, i64 2
  %13023 = getelementptr inbounds i8, ptr %13022, i64 %12855
  %13024 = getelementptr inbounds %struct._PixelPacket, ptr %12997, i64 3, i32 3
  %13025 = load i16, ptr %13024, align 2, !tbaa !28, !alias.scope !923, !noalias !926
  %13026 = lshr i16 %13025, 8
  %13027 = trunc i16 %13025 to i8
  %13028 = trunc i16 %13026 to i8
  store i8 %13028, ptr %13023, align 1, !alias.scope !926, !noalias !923
  %13029 = getelementptr inbounds i8, ptr %13023, i64 1
  store i8 %13027, ptr %13029, align 1, !alias.scope !926, !noalias !923
  %13030 = getelementptr inbounds i8, ptr %13023, i64 2
  %13031 = getelementptr inbounds %struct._PixelPacket, ptr %12997, i64 4
  %13032 = getelementptr inbounds i8, ptr %13030, i64 %12855
  %13033 = add i64 %12999, 4
  %13034 = icmp eq i64 %13033, %12861
  br i1 %13034, label %17645, label %12996, !llvm.loop !930

13035:                                            ; preds = %12803
  %13036 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 2
  %13037 = load i32, ptr %13036, align 8, !tbaa !50, !noalias !928
  %13038 = icmp eq i32 %13037, 1
  %13039 = icmp sgt i64 %164, 0
  br i1 %13038, label %13094, label %13040

13040:                                            ; preds = %13035
  br i1 %13039, label %13041, label %17875

13041:                                            ; preds = %13040
  %13042 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %13043 = load i32, ptr %13042, align 8, !tbaa !51, !noalias !928
  %13044 = icmp eq i32 %13043, 1
  %13045 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %13046 = load i64, ptr %13045, align 8, !tbaa !47, !noalias !928
  br i1 %13044, label %13052, label %13047

13047:                                            ; preds = %13041
  %13048 = and i64 %164, 1
  %13049 = icmp eq i64 %164, 1
  br i1 %13049, label %17682, label %13050

13050:                                            ; preds = %13047
  %13051 = and i64 %164, -2
  br label %13138

13052:                                            ; preds = %13041
  %13053 = and i64 %164, 1
  %13054 = icmp eq i64 %164, 1
  br i1 %13054, label %17664, label %13055

13055:                                            ; preds = %13052
  %13056 = and i64 %164, -2
  br label %13057

13057:                                            ; preds = %13057, %13055
  %13058 = phi ptr [ %166, %13055 ], [ %13090, %13057 ]
  %13059 = phi ptr [ %88, %13055 ], [ %13091, %13057 ]
  %13060 = phi i64 [ 0, %13055 ], [ %13092, %13057 ]
  %13061 = getelementptr inbounds %struct._PixelPacket, ptr %13058, i64 0, i32 3
  %13062 = load i16, ptr %13061, align 2, !tbaa !28, !alias.scope !923, !noalias !926
  %13063 = zext i16 %13062 to i32
  %13064 = mul nuw i32 %13063, 65537
  %13065 = lshr i32 %13064, 8
  %13066 = lshr i32 %13064, 24
  %13067 = trunc i32 %13066 to i8
  %13068 = trunc i16 %13062 to i8
  %13069 = trunc i32 %13065 to i8
  %13070 = trunc i32 %13064 to i8
  store i8 %13070, ptr %13059, align 1, !alias.scope !926, !noalias !923
  %13071 = getelementptr inbounds i8, ptr %13059, i64 1
  store i8 %13069, ptr %13071, align 1, !alias.scope !926, !noalias !923
  %13072 = getelementptr inbounds i8, ptr %13059, i64 2
  store i8 %13068, ptr %13072, align 1, !alias.scope !926, !noalias !923
  %13073 = getelementptr inbounds i8, ptr %13059, i64 3
  store i8 %13067, ptr %13073, align 1, !alias.scope !926, !noalias !923
  %13074 = getelementptr inbounds i8, ptr %13059, i64 4
  %13075 = getelementptr inbounds i8, ptr %13074, i64 %13046
  %13076 = getelementptr inbounds %struct._PixelPacket, ptr %13058, i64 1, i32 3
  %13077 = load i16, ptr %13076, align 2, !tbaa !28, !alias.scope !923, !noalias !926
  %13078 = zext i16 %13077 to i32
  %13079 = mul nuw i32 %13078, 65537
  %13080 = lshr i32 %13079, 8
  %13081 = lshr i32 %13079, 24
  %13082 = trunc i32 %13081 to i8
  %13083 = trunc i16 %13077 to i8
  %13084 = trunc i32 %13080 to i8
  %13085 = trunc i32 %13079 to i8
  store i8 %13085, ptr %13075, align 1, !alias.scope !926, !noalias !923
  %13086 = getelementptr inbounds i8, ptr %13075, i64 1
  store i8 %13084, ptr %13086, align 1, !alias.scope !926, !noalias !923
  %13087 = getelementptr inbounds i8, ptr %13075, i64 2
  store i8 %13083, ptr %13087, align 1, !alias.scope !926, !noalias !923
  %13088 = getelementptr inbounds i8, ptr %13075, i64 3
  store i8 %13082, ptr %13088, align 1, !alias.scope !926, !noalias !923
  %13089 = getelementptr inbounds i8, ptr %13075, i64 4
  %13090 = getelementptr inbounds %struct._PixelPacket, ptr %13058, i64 2
  %13091 = getelementptr inbounds i8, ptr %13089, i64 %13046
  %13092 = add i64 %13060, 2
  %13093 = icmp eq i64 %13092, %13056
  br i1 %13093, label %17664, label %13057, !llvm.loop !932

13094:                                            ; preds = %13035
  br i1 %13039, label %13095, label %17875

13095:                                            ; preds = %13094
  %13096 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 14
  %13097 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 3
  %13098 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %13099 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  br label %13100

13100:                                            ; preds = %13124, %13095
  %13101 = phi ptr [ %166, %13095 ], [ %13133, %13124 ]
  %13102 = phi ptr [ %88, %13095 ], [ %13135, %13124 ]
  %13103 = phi i64 [ 0, %13095 ], [ %13136, %13124 ]
  %13104 = getelementptr inbounds %struct._PixelPacket, ptr %13101, i64 0, i32 3
  %13105 = load i16, ptr %13104, align 2, !tbaa !28, !alias.scope !923, !noalias !926
  call void @llvm.experimental.noalias.scope.decl(metadata !933)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %24) #6, !noalias !936
  %13106 = call ptr @ResetMagickMemory(ptr noundef nonnull %24, i32 noundef 0, i64 noundef 4) #6, !noalias !936
  %13107 = uitofp i16 %13105 to double
  %13108 = load double, ptr %13096, align 8, !tbaa !59, !noalias !936
  %13109 = fmul fast double %13108, %13107
  %13110 = load double, ptr %13097, align 8, !tbaa !60, !noalias !936
  %13111 = fadd fast double %13109, %13110
  %13112 = fptrunc double %13111 to float
  %13113 = load i32, ptr %13098, align 8, !tbaa !51, !noalias !936
  %13114 = icmp eq i32 %13113, 1
  %13115 = bitcast float %13112 to i32
  %13116 = lshr i32 %13115, 24
  %13117 = trunc i32 %13116 to i8
  %13118 = lshr i32 %13115, 16
  %13119 = trunc i32 %13118 to i8
  %13120 = lshr i32 %13115, 8
  %13121 = trunc i32 %13120 to i8
  %13122 = trunc i32 %13115 to i8
  br i1 %13114, label %13124, label %13123

13123:                                            ; preds = %13100
  br label %13124

13124:                                            ; preds = %13123, %13100
  %13125 = phi i8 [ %13117, %13123 ], [ %13122, %13100 ]
  %13126 = phi i8 [ %13119, %13123 ], [ %13121, %13100 ]
  %13127 = phi i8 [ %13121, %13123 ], [ %13119, %13100 ]
  %13128 = phi i8 [ %13122, %13123 ], [ %13117, %13100 ]
  store i8 %13125, ptr %13102, align 1, !alias.scope !937, !noalias !923
  %13129 = getelementptr inbounds i8, ptr %13102, i64 1
  store i8 %13126, ptr %13129, align 1, !alias.scope !937, !noalias !923
  %13130 = getelementptr inbounds i8, ptr %13102, i64 2
  store i8 %13127, ptr %13130, align 1, !alias.scope !937, !noalias !923
  %13131 = getelementptr inbounds i8, ptr %13102, i64 3
  store i8 %13128, ptr %13131, align 1, !alias.scope !937, !noalias !923
  %13132 = getelementptr inbounds i8, ptr %13102, i64 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %24) #6, !noalias !936
  %13133 = getelementptr inbounds %struct._PixelPacket, ptr %13101, i64 1
  %13134 = load i64, ptr %13099, align 8, !tbaa !47, !noalias !928
  %13135 = getelementptr inbounds i8, ptr %13132, i64 %13134
  %13136 = add nuw nsw i64 %13103, 1
  %13137 = icmp eq i64 %13136, %164
  br i1 %13137, label %17787, label %13100, !llvm.loop !938

13138:                                            ; preds = %13138, %13050
  %13139 = phi ptr [ %166, %13050 ], [ %13171, %13138 ]
  %13140 = phi ptr [ %88, %13050 ], [ %13172, %13138 ]
  %13141 = phi i64 [ 0, %13050 ], [ %13173, %13138 ]
  %13142 = getelementptr inbounds %struct._PixelPacket, ptr %13139, i64 0, i32 3
  %13143 = load i16, ptr %13142, align 2, !tbaa !28, !alias.scope !923, !noalias !926
  %13144 = zext i16 %13143 to i32
  %13145 = mul nuw i32 %13144, 65537
  %13146 = lshr i32 %13145, 24
  %13147 = lshr i32 %13145, 8
  %13148 = trunc i32 %13145 to i8
  %13149 = trunc i32 %13147 to i8
  %13150 = trunc i16 %13143 to i8
  %13151 = trunc i32 %13146 to i8
  store i8 %13151, ptr %13140, align 1, !alias.scope !926, !noalias !923
  %13152 = getelementptr inbounds i8, ptr %13140, i64 1
  store i8 %13150, ptr %13152, align 1, !alias.scope !926, !noalias !923
  %13153 = getelementptr inbounds i8, ptr %13140, i64 2
  store i8 %13149, ptr %13153, align 1, !alias.scope !926, !noalias !923
  %13154 = getelementptr inbounds i8, ptr %13140, i64 3
  store i8 %13148, ptr %13154, align 1, !alias.scope !926, !noalias !923
  %13155 = getelementptr inbounds i8, ptr %13140, i64 4
  %13156 = getelementptr inbounds i8, ptr %13155, i64 %13046
  %13157 = getelementptr inbounds %struct._PixelPacket, ptr %13139, i64 1, i32 3
  %13158 = load i16, ptr %13157, align 2, !tbaa !28, !alias.scope !923, !noalias !926
  %13159 = zext i16 %13158 to i32
  %13160 = mul nuw i32 %13159, 65537
  %13161 = lshr i32 %13160, 24
  %13162 = lshr i32 %13160, 8
  %13163 = trunc i32 %13160 to i8
  %13164 = trunc i32 %13162 to i8
  %13165 = trunc i16 %13158 to i8
  %13166 = trunc i32 %13161 to i8
  store i8 %13166, ptr %13156, align 1, !alias.scope !926, !noalias !923
  %13167 = getelementptr inbounds i8, ptr %13156, i64 1
  store i8 %13165, ptr %13167, align 1, !alias.scope !926, !noalias !923
  %13168 = getelementptr inbounds i8, ptr %13156, i64 2
  store i8 %13164, ptr %13168, align 1, !alias.scope !926, !noalias !923
  %13169 = getelementptr inbounds i8, ptr %13156, i64 3
  store i8 %13163, ptr %13169, align 1, !alias.scope !926, !noalias !923
  %13170 = getelementptr inbounds i8, ptr %13156, i64 4
  %13171 = getelementptr inbounds %struct._PixelPacket, ptr %13139, i64 2
  %13172 = getelementptr inbounds i8, ptr %13170, i64 %13046
  %13173 = add i64 %13141, 2
  %13174 = icmp eq i64 %13173, %13051
  br i1 %13174, label %17682, label %13138, !llvm.loop !932

13175:                                            ; preds = %12803
  %13176 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 2
  %13177 = load i32, ptr %13176, align 8, !tbaa !50, !noalias !928
  %13178 = icmp eq i32 %13177, 1
  br i1 %13178, label %13179, label %13239

13179:                                            ; preds = %13175
  %13180 = icmp sgt i64 %164, 0
  br i1 %13180, label %13181, label %17875

13181:                                            ; preds = %13179
  %13182 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 14
  %13183 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 3
  %13184 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %13185 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  br label %13186

13186:                                            ; preds = %13217, %13181
  %13187 = phi ptr [ %166, %13181 ], [ %13234, %13217 ]
  %13188 = phi ptr [ %88, %13181 ], [ %13236, %13217 ]
  %13189 = phi i64 [ 0, %13181 ], [ %13237, %13217 ]
  %13190 = getelementptr inbounds %struct._PixelPacket, ptr %13187, i64 0, i32 3
  %13191 = load i16, ptr %13190, align 2, !tbaa !28, !alias.scope !923, !noalias !926
  %13192 = uitofp i16 %13191 to double
  call void @llvm.experimental.noalias.scope.decl(metadata !939)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %23) #6, !noalias !942
  %13193 = call ptr @ResetMagickMemory(ptr noundef nonnull %23, i32 noundef 0, i64 noundef 8) #6, !noalias !942
  %13194 = load double, ptr %13182, align 8, !tbaa !59, !noalias !942
  %13195 = fmul fast double %13194, %13192
  %13196 = load double, ptr %13183, align 8, !tbaa !60, !noalias !942
  %13197 = fadd fast double %13195, %13196
  %13198 = load i32, ptr %13184, align 8, !tbaa !51, !noalias !942
  %13199 = icmp eq i32 %13198, 1
  %13200 = bitcast double %13197 to i64
  %13201 = lshr i64 %13200, 56
  %13202 = trunc i64 %13201 to i8
  %13203 = lshr i64 %13200, 48
  %13204 = trunc i64 %13203 to i8
  %13205 = lshr i64 %13200, 40
  %13206 = trunc i64 %13205 to i8
  %13207 = lshr i64 %13200, 32
  %13208 = trunc i64 %13207 to i8
  %13209 = lshr i64 %13200, 24
  %13210 = trunc i64 %13209 to i8
  %13211 = lshr i64 %13200, 16
  %13212 = trunc i64 %13211 to i8
  %13213 = lshr i64 %13200, 8
  %13214 = trunc i64 %13213 to i8
  %13215 = trunc i64 %13200 to i8
  br i1 %13199, label %13217, label %13216

13216:                                            ; preds = %13186
  br label %13217

13217:                                            ; preds = %13216, %13186
  %13218 = phi i8 [ %13202, %13216 ], [ %13215, %13186 ]
  %13219 = phi i8 [ %13204, %13216 ], [ %13214, %13186 ]
  %13220 = phi i8 [ %13206, %13216 ], [ %13212, %13186 ]
  %13221 = phi i8 [ %13208, %13216 ], [ %13210, %13186 ]
  %13222 = phi i8 [ %13210, %13216 ], [ %13208, %13186 ]
  %13223 = phi i8 [ %13212, %13216 ], [ %13206, %13186 ]
  %13224 = phi i8 [ %13214, %13216 ], [ %13204, %13186 ]
  %13225 = phi i8 [ %13215, %13216 ], [ %13202, %13186 ]
  store i8 %13218, ptr %13188, align 1, !alias.scope !943, !noalias !923
  %13226 = getelementptr inbounds i8, ptr %13188, i64 1
  store i8 %13219, ptr %13226, align 1, !alias.scope !943, !noalias !923
  %13227 = getelementptr inbounds i8, ptr %13188, i64 2
  store i8 %13220, ptr %13227, align 1, !alias.scope !943, !noalias !923
  %13228 = getelementptr inbounds i8, ptr %13188, i64 3
  store i8 %13221, ptr %13228, align 1, !alias.scope !943, !noalias !923
  %13229 = getelementptr inbounds i8, ptr %13188, i64 4
  store i8 %13222, ptr %13229, align 1, !alias.scope !943, !noalias !923
  %13230 = getelementptr inbounds i8, ptr %13188, i64 5
  store i8 %13223, ptr %13230, align 1, !alias.scope !943, !noalias !923
  %13231 = getelementptr inbounds i8, ptr %13188, i64 6
  store i8 %13224, ptr %13231, align 1, !alias.scope !943, !noalias !923
  %13232 = getelementptr inbounds i8, ptr %13188, i64 7
  store i8 %13225, ptr %13232, align 1, !alias.scope !943, !noalias !923
  %13233 = getelementptr inbounds i8, ptr %13188, i64 8
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %23) #6, !noalias !942
  %13234 = getelementptr inbounds %struct._PixelPacket, ptr %13187, i64 1
  %13235 = load i64, ptr %13185, align 8, !tbaa !47, !noalias !928
  %13236 = getelementptr inbounds i8, ptr %13233, i64 %13235
  %13237 = add nuw nsw i64 %13189, 1
  %13238 = icmp eq i64 %13237, %164
  br i1 %13238, label %17787, label %13186, !llvm.loop !944

13239:                                            ; preds = %13175, %12803
  %13240 = icmp sgt i64 %164, 0
  br i1 %13240, label %13241, label %17875

13241:                                            ; preds = %13239
  %13242 = add i64 %12804, -1
  %13243 = shl i64 2, %13242
  %13244 = add i64 %13243, -1
  %13245 = uitofp i64 %13244 to float
  %13246 = fmul fast float %13245, 0x3EF0001000000000
  %13247 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 14, i32 2
  %13248 = icmp sgt i64 %12804, 0
  %13249 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %13250 = load i64, ptr %13247, align 8, !tbaa !69, !noalias !945
  %13251 = load i64, ptr %13249, align 8, !tbaa !47, !noalias !928
  br label %13252

13252:                                            ; preds = %13294, %13241
  %13253 = phi i64 [ %13250, %13241 ], [ %13295, %13294 ]
  %13254 = phi ptr [ %166, %13241 ], [ %13297, %13294 ]
  %13255 = phi ptr [ %88, %13241 ], [ %13298, %13294 ]
  %13256 = phi i64 [ 0, %13241 ], [ %13299, %13294 ]
  %13257 = getelementptr inbounds %struct._PixelPacket, ptr %13254, i64 0, i32 3
  %13258 = load i16, ptr %13257, align 2, !tbaa !28, !alias.scope !923, !noalias !926
  %13259 = uitofp i16 %13258 to float
  %13260 = fmul fast float %13246, %13259
  %13261 = fpext float %13260 to double
  %13262 = fadd fast double %13261, 5.000000e-01
  %13263 = fptoui double %13262 to i64
  tail call void @llvm.experimental.noalias.scope.decl(metadata !948)
  %13264 = icmp eq i64 %13253, 0
  br i1 %13264, label %13265, label %13266

13265:                                            ; preds = %13252
  store i64 8, ptr %13247, align 8, !tbaa !69, !noalias !945
  br label %13266

13266:                                            ; preds = %13265, %13252
  %13267 = phi i64 [ 8, %13265 ], [ %13253, %13252 ]
  br i1 %13248, label %13268, label %13294

13268:                                            ; preds = %13266, %13278
  %13269 = phi i64 [ %13289, %13278 ], [ %13267, %13266 ]
  %13270 = phi i64 [ %13274, %13278 ], [ %12804, %13266 ]
  %13271 = phi ptr [ %13291, %13278 ], [ %13255, %13266 ]
  %13272 = tail call i64 @llvm.umin.i64(i64 %13270, i64 %13269)
  %13273 = sub nsw i64 %13270, %13272
  %13274 = tail call i64 @llvm.smax.i64(i64 %13273, i64 0)
  %13275 = icmp eq i64 %13269, 8
  br i1 %13275, label %13278, label %13276

13276:                                            ; preds = %13268
  %13277 = load i8, ptr %13271, align 1, !tbaa !48, !alias.scope !949, !noalias !923
  br label %13278

13278:                                            ; preds = %13276, %13268
  %13279 = phi i8 [ %13277, %13276 ], [ 0, %13268 ]
  %13280 = sub i64 %13269, %13272
  %13281 = lshr i64 %13263, %13274
  %13282 = shl nsw i64 -1, %13272
  %13283 = xor i64 %13282, -1
  %13284 = and i64 %13281, %13283
  %13285 = shl i64 %13284, %13280
  %13286 = trunc i64 %13285 to i8
  %13287 = or i8 %13279, %13286
  store i8 %13287, ptr %13271, align 1, !tbaa !48, !alias.scope !949, !noalias !923
  %13288 = icmp ule i64 %13269, %13270
  %13289 = select i1 %13288, i64 8, i64 %13280
  %13290 = zext i1 %13288 to i64
  %13291 = getelementptr inbounds i8, ptr %13271, i64 %13290
  %13292 = icmp slt i64 %13273, 1
  br i1 %13292, label %13293, label %13268, !llvm.loop !75

13293:                                            ; preds = %13278
  store i64 %13289, ptr %13247, align 8, !tbaa !69, !noalias !945
  br label %13294

13294:                                            ; preds = %13293, %13266
  %13295 = phi i64 [ %13267, %13266 ], [ %13289, %13293 ]
  %13296 = phi ptr [ %13255, %13266 ], [ %13291, %13293 ]
  %13297 = getelementptr inbounds %struct._PixelPacket, ptr %13254, i64 1
  %13298 = getelementptr inbounds i8, ptr %13296, i64 %13251
  %13299 = add nuw nsw i64 %13256, 1
  %13300 = icmp eq i64 %13299, %164
  br i1 %13300, label %17787, label %13252, !llvm.loop !950

13301:                                            ; preds = %256, %256
  tail call void @llvm.experimental.noalias.scope.decl(metadata !951)
  tail call void @llvm.experimental.noalias.scope.decl(metadata !954)
  %13302 = load i64, ptr %2, align 8, !tbaa !45, !noalias !956
  %13303 = add i64 %13302, -8
  %13304 = tail call i64 @llvm.fshl.i64(i64 %13302, i64 %13303, i64 61)
  switch i64 %13304, label %13737 [
    i64 0, label %13305
    i64 1, label %13341
    i64 3, label %13533
    i64 7, label %13673
  ]

13305:                                            ; preds = %13301
  %13306 = icmp sgt i64 %164, 0
  br i1 %13306, label %13307, label %17831

13307:                                            ; preds = %13305
  %13308 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %13309 = load i64, ptr %13308, align 8, !tbaa !47, !noalias !956
  %13310 = and i64 %164, 1
  %13311 = icmp eq i64 %164, 1
  br i1 %13311, label %17700, label %13312

13312:                                            ; preds = %13307
  %13313 = and i64 %164, -2
  br label %13314

13314:                                            ; preds = %13314, %13312
  %13315 = phi ptr [ %166, %13312 ], [ %13337, %13314 ]
  %13316 = phi ptr [ %88, %13312 ], [ %13338, %13314 ]
  %13317 = phi i64 [ 0, %13312 ], [ %13339, %13314 ]
  %13318 = getelementptr inbounds %struct._PixelPacket, ptr %13315, i64 0, i32 2
  %13319 = load i16, ptr %13318, align 2, !tbaa !29, !alias.scope !951, !noalias !954
  %13320 = zext i16 %13319 to i64
  %13321 = add nuw nsw i64 %13320, 128
  %13322 = lshr i64 %13321, 8
  %13323 = sub nsw i64 %13321, %13322
  %13324 = lshr i64 %13323, 8
  %13325 = trunc i64 %13324 to i8
  %13326 = getelementptr inbounds i8, ptr %13316, i64 1
  store i8 %13325, ptr %13316, align 1, !tbaa !48, !alias.scope !954, !noalias !951
  %13327 = getelementptr inbounds i8, ptr %13326, i64 %13309
  %13328 = getelementptr inbounds %struct._PixelPacket, ptr %13315, i64 1, i32 2
  %13329 = load i16, ptr %13328, align 2, !tbaa !29, !alias.scope !951, !noalias !954
  %13330 = zext i16 %13329 to i64
  %13331 = add nuw nsw i64 %13330, 128
  %13332 = lshr i64 %13331, 8
  %13333 = sub nsw i64 %13331, %13332
  %13334 = lshr i64 %13333, 8
  %13335 = trunc i64 %13334 to i8
  %13336 = getelementptr inbounds i8, ptr %13327, i64 1
  store i8 %13335, ptr %13327, align 1, !tbaa !48, !alias.scope !954, !noalias !951
  %13337 = getelementptr inbounds %struct._PixelPacket, ptr %13315, i64 2
  %13338 = getelementptr inbounds i8, ptr %13336, i64 %13309
  %13339 = add i64 %13317, 2
  %13340 = icmp eq i64 %13339, %13313
  br i1 %13340, label %17700, label %13314, !llvm.loop !957

13341:                                            ; preds = %13301
  %13342 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 2
  %13343 = load i32, ptr %13342, align 8, !tbaa !50, !noalias !956
  %13344 = icmp eq i32 %13343, 1
  %13345 = icmp sgt i64 %164, 0
  br i1 %13344, label %13405, label %13346

13346:                                            ; preds = %13341
  br i1 %13345, label %13347, label %17831

13347:                                            ; preds = %13346
  %13348 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %13349 = load i32, ptr %13348, align 8, !tbaa !51, !noalias !956
  %13350 = freeze i32 %13349
  %13351 = icmp eq i32 %13350, 1
  %13352 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %13353 = load i64, ptr %13352, align 8, !tbaa !47, !noalias !956
  br i1 %13351, label %13360, label %13354

13354:                                            ; preds = %13347
  %13355 = add i64 %164, -1
  %13356 = and i64 %164, 3
  %13357 = icmp ult i64 %13355, 3
  br i1 %13357, label %17732, label %13358

13358:                                            ; preds = %13354
  %13359 = and i64 %164, -4
  br label %13494

13360:                                            ; preds = %13347
  %13361 = add i64 %164, -1
  %13362 = and i64 %164, 3
  %13363 = icmp ult i64 %13361, 3
  br i1 %13363, label %17713, label %13364

13364:                                            ; preds = %13360
  %13365 = and i64 %164, -4
  br label %13366

13366:                                            ; preds = %13366, %13364
  %13367 = phi ptr [ %166, %13364 ], [ %13401, %13366 ]
  %13368 = phi ptr [ %88, %13364 ], [ %13402, %13366 ]
  %13369 = phi i64 [ 0, %13364 ], [ %13403, %13366 ]
  %13370 = getelementptr inbounds %struct._PixelPacket, ptr %13367, i64 0, i32 2
  %13371 = load i16, ptr %13370, align 2, !tbaa !29, !alias.scope !951, !noalias !954
  %13372 = lshr i16 %13371, 8
  %13373 = trunc i16 %13372 to i8
  %13374 = trunc i16 %13371 to i8
  store i8 %13374, ptr %13368, align 1, !alias.scope !954, !noalias !951
  %13375 = getelementptr inbounds i8, ptr %13368, i64 1
  store i8 %13373, ptr %13375, align 1, !alias.scope !954, !noalias !951
  %13376 = getelementptr inbounds i8, ptr %13368, i64 2
  %13377 = getelementptr inbounds i8, ptr %13376, i64 %13353
  %13378 = getelementptr inbounds %struct._PixelPacket, ptr %13367, i64 1, i32 2
  %13379 = load i16, ptr %13378, align 2, !tbaa !29, !alias.scope !951, !noalias !954
  %13380 = lshr i16 %13379, 8
  %13381 = trunc i16 %13380 to i8
  %13382 = trunc i16 %13379 to i8
  store i8 %13382, ptr %13377, align 1, !alias.scope !954, !noalias !951
  %13383 = getelementptr inbounds i8, ptr %13377, i64 1
  store i8 %13381, ptr %13383, align 1, !alias.scope !954, !noalias !951
  %13384 = getelementptr inbounds i8, ptr %13377, i64 2
  %13385 = getelementptr inbounds i8, ptr %13384, i64 %13353
  %13386 = getelementptr inbounds %struct._PixelPacket, ptr %13367, i64 2, i32 2
  %13387 = load i16, ptr %13386, align 2, !tbaa !29, !alias.scope !951, !noalias !954
  %13388 = lshr i16 %13387, 8
  %13389 = trunc i16 %13388 to i8
  %13390 = trunc i16 %13387 to i8
  store i8 %13390, ptr %13385, align 1, !alias.scope !954, !noalias !951
  %13391 = getelementptr inbounds i8, ptr %13385, i64 1
  store i8 %13389, ptr %13391, align 1, !alias.scope !954, !noalias !951
  %13392 = getelementptr inbounds i8, ptr %13385, i64 2
  %13393 = getelementptr inbounds i8, ptr %13392, i64 %13353
  %13394 = getelementptr inbounds %struct._PixelPacket, ptr %13367, i64 3, i32 2
  %13395 = load i16, ptr %13394, align 2, !tbaa !29, !alias.scope !951, !noalias !954
  %13396 = lshr i16 %13395, 8
  %13397 = trunc i16 %13396 to i8
  %13398 = trunc i16 %13395 to i8
  store i8 %13398, ptr %13393, align 1, !alias.scope !954, !noalias !951
  %13399 = getelementptr inbounds i8, ptr %13393, i64 1
  store i8 %13397, ptr %13399, align 1, !alias.scope !954, !noalias !951
  %13400 = getelementptr inbounds i8, ptr %13393, i64 2
  %13401 = getelementptr inbounds %struct._PixelPacket, ptr %13367, i64 4
  %13402 = getelementptr inbounds i8, ptr %13400, i64 %13353
  %13403 = add i64 %13369, 4
  %13404 = icmp eq i64 %13403, %13365
  br i1 %13404, label %17713, label %13366, !llvm.loop !958

13405:                                            ; preds = %13341
  br i1 %13345, label %13406, label %17831

13406:                                            ; preds = %13405
  %13407 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %13408 = load i32, ptr %13407, align 8, !tbaa !51, !noalias !956
  %13409 = icmp eq i32 %13408, 1
  %13410 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %13411 = load i64, ptr %13410, align 8, !tbaa !47, !noalias !956
  br label %13412

13412:                                            ; preds = %13481, %13406
  %13413 = phi ptr [ %166, %13406 ], [ %13490, %13481 ]
  %13414 = phi ptr [ %88, %13406 ], [ %13491, %13481 ]
  %13415 = phi i64 [ 0, %13406 ], [ %13492, %13481 ]
  %13416 = getelementptr inbounds %struct._PixelPacket, ptr %13413, i64 0, i32 2
  %13417 = load i16, ptr %13416, align 2, !tbaa !29, !alias.scope !951, !noalias !954
  %13418 = uitofp i16 %13417 to double
  %13419 = fmul fast double %13418, 0x3EF0001000100010
  %13420 = fptrunc double %13419 to float
  %13421 = bitcast float %13420 to i32
  %13422 = lshr i32 %13421, 16
  %13423 = and i32 %13422, 32768
  %13424 = lshr i32 %13421, 23
  %13425 = and i32 %13424, 255
  %13426 = add nsw i32 %13425, -112
  %13427 = and i32 %13421, 8388607
  %13428 = icmp ult i32 %13425, 113
  br i1 %13428, label %13429, label %13446

13429:                                            ; preds = %13412
  %13430 = icmp ult i32 %13425, 102
  br i1 %13430, label %13443, label %13431

13431:                                            ; preds = %13429
  %13432 = or i32 %13427, 8388608
  %13433 = sub nuw nsw i32 126, %13425
  %13434 = sub nuw nsw i32 125, %13425
  %13435 = shl nsw i32 -1, %13434
  %13436 = xor i32 %13435, -1
  %13437 = add nuw nsw i32 %13432, %13436
  %13438 = lshr i32 %13432, %13433
  %13439 = and i32 %13438, 1
  %13440 = add nuw nsw i32 %13437, %13439
  %13441 = lshr i32 %13440, %13433
  %13442 = or i32 %13441, %13423
  br label %13443

13443:                                            ; preds = %13431, %13429
  %13444 = phi i32 [ %13442, %13431 ], [ %13423, %13429 ]
  %13445 = trunc i32 %13444 to i16
  br label %13481

13446:                                            ; preds = %13412
  %13447 = icmp eq i32 %13426, 143
  br i1 %13447, label %13448, label %13461

13448:                                            ; preds = %13446
  %13449 = icmp eq i32 %13427, 0
  br i1 %13449, label %13450, label %13453

13450:                                            ; preds = %13448
  %13451 = trunc i32 %13423 to i16
  %13452 = or i16 %13451, 31744
  br label %13481

13453:                                            ; preds = %13448
  %13454 = lshr i32 %13427, 13
  %13455 = icmp ult i32 %13427, 8192
  %13456 = zext i1 %13455 to i32
  %13457 = or i32 %13454, %13456
  %13458 = or i32 %13457, %13423
  %13459 = trunc i32 %13458 to i16
  %13460 = or i16 %13459, 31744
  br label %13481

13461:                                            ; preds = %13446
  %13462 = lshr i32 %13421, 13
  %13463 = and i32 %13462, 1
  %13464 = add nuw nsw i32 %13427, 4095
  %13465 = add nuw nsw i32 %13464, %13463
  %13466 = and i32 %13465, 8388608
  %13467 = icmp eq i32 %13466, 0
  %13468 = add nsw i32 %13425, -111
  %13469 = select i1 %13467, i32 %13426, i32 %13468
  %13470 = icmp ugt i32 %13469, 30
  br i1 %13470, label %13471, label %13474

13471:                                            ; preds = %13461
  %13472 = trunc i32 %13423 to i16
  %13473 = or i16 %13472, 31744
  br label %13481

13474:                                            ; preds = %13461
  %13475 = lshr i32 %13465, 13
  %13476 = shl nuw nsw i32 %13469, 10
  %13477 = select i1 %13467, i32 %13475, i32 0
  %13478 = or i32 %13477, %13476
  %13479 = or i32 %13478, %13423
  %13480 = trunc i32 %13479 to i16
  br label %13481

13481:                                            ; preds = %13474, %13471, %13453, %13450, %13443
  %13482 = phi i16 [ %13445, %13443 ], [ %13452, %13450 ], [ %13460, %13453 ], [ %13473, %13471 ], [ %13480, %13474 ]
  %13483 = lshr i16 %13482, 8
  %13484 = select i1 %13409, i16 %13482, i16 %13483
  %13485 = select i1 %13409, i16 %13483, i16 %13482
  %13486 = trunc i16 %13485 to i8
  %13487 = trunc i16 %13484 to i8
  store i8 %13487, ptr %13414, align 1, !alias.scope !954, !noalias !951
  %13488 = getelementptr inbounds i8, ptr %13414, i64 1
  store i8 %13486, ptr %13488, align 1, !alias.scope !954, !noalias !951
  %13489 = getelementptr inbounds i8, ptr %13414, i64 2
  %13490 = getelementptr inbounds %struct._PixelPacket, ptr %13413, i64 1
  %13491 = getelementptr inbounds i8, ptr %13489, i64 %13411
  %13492 = add nuw nsw i64 %13415, 1
  %13493 = icmp eq i64 %13492, %164
  br i1 %13493, label %17787, label %13412, !llvm.loop !959

13494:                                            ; preds = %13494, %13358
  %13495 = phi ptr [ %166, %13358 ], [ %13529, %13494 ]
  %13496 = phi ptr [ %88, %13358 ], [ %13530, %13494 ]
  %13497 = phi i64 [ 0, %13358 ], [ %13531, %13494 ]
  %13498 = getelementptr inbounds %struct._PixelPacket, ptr %13495, i64 0, i32 2
  %13499 = load i16, ptr %13498, align 2, !tbaa !29, !alias.scope !951, !noalias !954
  %13500 = lshr i16 %13499, 8
  %13501 = trunc i16 %13499 to i8
  %13502 = trunc i16 %13500 to i8
  store i8 %13502, ptr %13496, align 1, !alias.scope !954, !noalias !951
  %13503 = getelementptr inbounds i8, ptr %13496, i64 1
  store i8 %13501, ptr %13503, align 1, !alias.scope !954, !noalias !951
  %13504 = getelementptr inbounds i8, ptr %13496, i64 2
  %13505 = getelementptr inbounds i8, ptr %13504, i64 %13353
  %13506 = getelementptr inbounds %struct._PixelPacket, ptr %13495, i64 1, i32 2
  %13507 = load i16, ptr %13506, align 2, !tbaa !29, !alias.scope !951, !noalias !954
  %13508 = lshr i16 %13507, 8
  %13509 = trunc i16 %13507 to i8
  %13510 = trunc i16 %13508 to i8
  store i8 %13510, ptr %13505, align 1, !alias.scope !954, !noalias !951
  %13511 = getelementptr inbounds i8, ptr %13505, i64 1
  store i8 %13509, ptr %13511, align 1, !alias.scope !954, !noalias !951
  %13512 = getelementptr inbounds i8, ptr %13505, i64 2
  %13513 = getelementptr inbounds i8, ptr %13512, i64 %13353
  %13514 = getelementptr inbounds %struct._PixelPacket, ptr %13495, i64 2, i32 2
  %13515 = load i16, ptr %13514, align 2, !tbaa !29, !alias.scope !951, !noalias !954
  %13516 = lshr i16 %13515, 8
  %13517 = trunc i16 %13515 to i8
  %13518 = trunc i16 %13516 to i8
  store i8 %13518, ptr %13513, align 1, !alias.scope !954, !noalias !951
  %13519 = getelementptr inbounds i8, ptr %13513, i64 1
  store i8 %13517, ptr %13519, align 1, !alias.scope !954, !noalias !951
  %13520 = getelementptr inbounds i8, ptr %13513, i64 2
  %13521 = getelementptr inbounds i8, ptr %13520, i64 %13353
  %13522 = getelementptr inbounds %struct._PixelPacket, ptr %13495, i64 3, i32 2
  %13523 = load i16, ptr %13522, align 2, !tbaa !29, !alias.scope !951, !noalias !954
  %13524 = lshr i16 %13523, 8
  %13525 = trunc i16 %13523 to i8
  %13526 = trunc i16 %13524 to i8
  store i8 %13526, ptr %13521, align 1, !alias.scope !954, !noalias !951
  %13527 = getelementptr inbounds i8, ptr %13521, i64 1
  store i8 %13525, ptr %13527, align 1, !alias.scope !954, !noalias !951
  %13528 = getelementptr inbounds i8, ptr %13521, i64 2
  %13529 = getelementptr inbounds %struct._PixelPacket, ptr %13495, i64 4
  %13530 = getelementptr inbounds i8, ptr %13528, i64 %13353
  %13531 = add i64 %13497, 4
  %13532 = icmp eq i64 %13531, %13359
  br i1 %13532, label %17732, label %13494, !llvm.loop !958

13533:                                            ; preds = %13301
  %13534 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 2
  %13535 = load i32, ptr %13534, align 8, !tbaa !50, !noalias !956
  %13536 = icmp eq i32 %13535, 1
  %13537 = icmp sgt i64 %164, 0
  br i1 %13536, label %13592, label %13538

13538:                                            ; preds = %13533
  br i1 %13537, label %13539, label %17831

13539:                                            ; preds = %13538
  %13540 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %13541 = load i32, ptr %13540, align 8, !tbaa !51, !noalias !956
  %13542 = icmp eq i32 %13541, 1
  %13543 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %13544 = load i64, ptr %13543, align 8, !tbaa !47, !noalias !956
  br i1 %13542, label %13550, label %13545

13545:                                            ; preds = %13539
  %13546 = and i64 %164, 1
  %13547 = icmp eq i64 %164, 1
  br i1 %13547, label %17769, label %13548

13548:                                            ; preds = %13545
  %13549 = and i64 %164, -2
  br label %13636

13550:                                            ; preds = %13539
  %13551 = and i64 %164, 1
  %13552 = icmp eq i64 %164, 1
  br i1 %13552, label %17751, label %13553

13553:                                            ; preds = %13550
  %13554 = and i64 %164, -2
  br label %13555

13555:                                            ; preds = %13555, %13553
  %13556 = phi ptr [ %166, %13553 ], [ %13588, %13555 ]
  %13557 = phi ptr [ %88, %13553 ], [ %13589, %13555 ]
  %13558 = phi i64 [ 0, %13553 ], [ %13590, %13555 ]
  %13559 = getelementptr inbounds %struct._PixelPacket, ptr %13556, i64 0, i32 2
  %13560 = load i16, ptr %13559, align 2, !tbaa !29, !alias.scope !951, !noalias !954
  %13561 = zext i16 %13560 to i32
  %13562 = mul nuw i32 %13561, 65537
  %13563 = lshr i32 %13562, 8
  %13564 = lshr i32 %13562, 24
  %13565 = trunc i32 %13564 to i8
  %13566 = trunc i16 %13560 to i8
  %13567 = trunc i32 %13563 to i8
  %13568 = trunc i32 %13562 to i8
  store i8 %13568, ptr %13557, align 1, !alias.scope !954, !noalias !951
  %13569 = getelementptr inbounds i8, ptr %13557, i64 1
  store i8 %13567, ptr %13569, align 1, !alias.scope !954, !noalias !951
  %13570 = getelementptr inbounds i8, ptr %13557, i64 2
  store i8 %13566, ptr %13570, align 1, !alias.scope !954, !noalias !951
  %13571 = getelementptr inbounds i8, ptr %13557, i64 3
  store i8 %13565, ptr %13571, align 1, !alias.scope !954, !noalias !951
  %13572 = getelementptr inbounds i8, ptr %13557, i64 4
  %13573 = getelementptr inbounds i8, ptr %13572, i64 %13544
  %13574 = getelementptr inbounds %struct._PixelPacket, ptr %13556, i64 1, i32 2
  %13575 = load i16, ptr %13574, align 2, !tbaa !29, !alias.scope !951, !noalias !954
  %13576 = zext i16 %13575 to i32
  %13577 = mul nuw i32 %13576, 65537
  %13578 = lshr i32 %13577, 8
  %13579 = lshr i32 %13577, 24
  %13580 = trunc i32 %13579 to i8
  %13581 = trunc i16 %13575 to i8
  %13582 = trunc i32 %13578 to i8
  %13583 = trunc i32 %13577 to i8
  store i8 %13583, ptr %13573, align 1, !alias.scope !954, !noalias !951
  %13584 = getelementptr inbounds i8, ptr %13573, i64 1
  store i8 %13582, ptr %13584, align 1, !alias.scope !954, !noalias !951
  %13585 = getelementptr inbounds i8, ptr %13573, i64 2
  store i8 %13581, ptr %13585, align 1, !alias.scope !954, !noalias !951
  %13586 = getelementptr inbounds i8, ptr %13573, i64 3
  store i8 %13580, ptr %13586, align 1, !alias.scope !954, !noalias !951
  %13587 = getelementptr inbounds i8, ptr %13573, i64 4
  %13588 = getelementptr inbounds %struct._PixelPacket, ptr %13556, i64 2
  %13589 = getelementptr inbounds i8, ptr %13587, i64 %13544
  %13590 = add i64 %13558, 2
  %13591 = icmp eq i64 %13590, %13554
  br i1 %13591, label %17751, label %13555, !llvm.loop !960

13592:                                            ; preds = %13533
  br i1 %13537, label %13593, label %17831

13593:                                            ; preds = %13592
  %13594 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 14
  %13595 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 3
  %13596 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %13597 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  br label %13598

13598:                                            ; preds = %13622, %13593
  %13599 = phi ptr [ %166, %13593 ], [ %13631, %13622 ]
  %13600 = phi ptr [ %88, %13593 ], [ %13633, %13622 ]
  %13601 = phi i64 [ 0, %13593 ], [ %13634, %13622 ]
  %13602 = getelementptr inbounds %struct._PixelPacket, ptr %13599, i64 0, i32 2
  %13603 = load i16, ptr %13602, align 2, !tbaa !29, !alias.scope !951, !noalias !954
  call void @llvm.experimental.noalias.scope.decl(metadata !961)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %22) #6, !noalias !964
  %13604 = call ptr @ResetMagickMemory(ptr noundef nonnull %22, i32 noundef 0, i64 noundef 4) #6, !noalias !964
  %13605 = uitofp i16 %13603 to double
  %13606 = load double, ptr %13594, align 8, !tbaa !59, !noalias !964
  %13607 = fmul fast double %13606, %13605
  %13608 = load double, ptr %13595, align 8, !tbaa !60, !noalias !964
  %13609 = fadd fast double %13607, %13608
  %13610 = fptrunc double %13609 to float
  %13611 = load i32, ptr %13596, align 8, !tbaa !51, !noalias !964
  %13612 = icmp eq i32 %13611, 1
  %13613 = bitcast float %13610 to i32
  %13614 = lshr i32 %13613, 24
  %13615 = trunc i32 %13614 to i8
  %13616 = lshr i32 %13613, 16
  %13617 = trunc i32 %13616 to i8
  %13618 = lshr i32 %13613, 8
  %13619 = trunc i32 %13618 to i8
  %13620 = trunc i32 %13613 to i8
  br i1 %13612, label %13622, label %13621

13621:                                            ; preds = %13598
  br label %13622

13622:                                            ; preds = %13621, %13598
  %13623 = phi i8 [ %13615, %13621 ], [ %13620, %13598 ]
  %13624 = phi i8 [ %13617, %13621 ], [ %13619, %13598 ]
  %13625 = phi i8 [ %13619, %13621 ], [ %13617, %13598 ]
  %13626 = phi i8 [ %13620, %13621 ], [ %13615, %13598 ]
  store i8 %13623, ptr %13600, align 1, !alias.scope !965, !noalias !951
  %13627 = getelementptr inbounds i8, ptr %13600, i64 1
  store i8 %13624, ptr %13627, align 1, !alias.scope !965, !noalias !951
  %13628 = getelementptr inbounds i8, ptr %13600, i64 2
  store i8 %13625, ptr %13628, align 1, !alias.scope !965, !noalias !951
  %13629 = getelementptr inbounds i8, ptr %13600, i64 3
  store i8 %13626, ptr %13629, align 1, !alias.scope !965, !noalias !951
  %13630 = getelementptr inbounds i8, ptr %13600, i64 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %22) #6, !noalias !964
  %13631 = getelementptr inbounds %struct._PixelPacket, ptr %13599, i64 1
  %13632 = load i64, ptr %13597, align 8, !tbaa !47, !noalias !956
  %13633 = getelementptr inbounds i8, ptr %13630, i64 %13632
  %13634 = add nuw nsw i64 %13601, 1
  %13635 = icmp eq i64 %13634, %164
  br i1 %13635, label %17787, label %13598, !llvm.loop !966

13636:                                            ; preds = %13636, %13548
  %13637 = phi ptr [ %166, %13548 ], [ %13669, %13636 ]
  %13638 = phi ptr [ %88, %13548 ], [ %13670, %13636 ]
  %13639 = phi i64 [ 0, %13548 ], [ %13671, %13636 ]
  %13640 = getelementptr inbounds %struct._PixelPacket, ptr %13637, i64 0, i32 2
  %13641 = load i16, ptr %13640, align 2, !tbaa !29, !alias.scope !951, !noalias !954
  %13642 = zext i16 %13641 to i32
  %13643 = mul nuw i32 %13642, 65537
  %13644 = lshr i32 %13643, 24
  %13645 = lshr i32 %13643, 8
  %13646 = trunc i32 %13643 to i8
  %13647 = trunc i32 %13645 to i8
  %13648 = trunc i16 %13641 to i8
  %13649 = trunc i32 %13644 to i8
  store i8 %13649, ptr %13638, align 1, !alias.scope !954, !noalias !951
  %13650 = getelementptr inbounds i8, ptr %13638, i64 1
  store i8 %13648, ptr %13650, align 1, !alias.scope !954, !noalias !951
  %13651 = getelementptr inbounds i8, ptr %13638, i64 2
  store i8 %13647, ptr %13651, align 1, !alias.scope !954, !noalias !951
  %13652 = getelementptr inbounds i8, ptr %13638, i64 3
  store i8 %13646, ptr %13652, align 1, !alias.scope !954, !noalias !951
  %13653 = getelementptr inbounds i8, ptr %13638, i64 4
  %13654 = getelementptr inbounds i8, ptr %13653, i64 %13544
  %13655 = getelementptr inbounds %struct._PixelPacket, ptr %13637, i64 1, i32 2
  %13656 = load i16, ptr %13655, align 2, !tbaa !29, !alias.scope !951, !noalias !954
  %13657 = zext i16 %13656 to i32
  %13658 = mul nuw i32 %13657, 65537
  %13659 = lshr i32 %13658, 24
  %13660 = lshr i32 %13658, 8
  %13661 = trunc i32 %13658 to i8
  %13662 = trunc i32 %13660 to i8
  %13663 = trunc i16 %13656 to i8
  %13664 = trunc i32 %13659 to i8
  store i8 %13664, ptr %13654, align 1, !alias.scope !954, !noalias !951
  %13665 = getelementptr inbounds i8, ptr %13654, i64 1
  store i8 %13663, ptr %13665, align 1, !alias.scope !954, !noalias !951
  %13666 = getelementptr inbounds i8, ptr %13654, i64 2
  store i8 %13662, ptr %13666, align 1, !alias.scope !954, !noalias !951
  %13667 = getelementptr inbounds i8, ptr %13654, i64 3
  store i8 %13661, ptr %13667, align 1, !alias.scope !954, !noalias !951
  %13668 = getelementptr inbounds i8, ptr %13654, i64 4
  %13669 = getelementptr inbounds %struct._PixelPacket, ptr %13637, i64 2
  %13670 = getelementptr inbounds i8, ptr %13668, i64 %13544
  %13671 = add i64 %13639, 2
  %13672 = icmp eq i64 %13671, %13549
  br i1 %13672, label %17769, label %13636, !llvm.loop !960

13673:                                            ; preds = %13301
  %13674 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 2
  %13675 = load i32, ptr %13674, align 8, !tbaa !50, !noalias !956
  %13676 = icmp eq i32 %13675, 1
  br i1 %13676, label %13677, label %13737

13677:                                            ; preds = %13673
  %13678 = icmp sgt i64 %164, 0
  br i1 %13678, label %13679, label %17831

13679:                                            ; preds = %13677
  %13680 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 14
  %13681 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 3
  %13682 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %13683 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  br label %13684

13684:                                            ; preds = %13715, %13679
  %13685 = phi ptr [ %166, %13679 ], [ %13732, %13715 ]
  %13686 = phi ptr [ %88, %13679 ], [ %13734, %13715 ]
  %13687 = phi i64 [ 0, %13679 ], [ %13735, %13715 ]
  %13688 = getelementptr inbounds %struct._PixelPacket, ptr %13685, i64 0, i32 2
  %13689 = load i16, ptr %13688, align 2, !tbaa !29, !alias.scope !951, !noalias !954
  %13690 = uitofp i16 %13689 to double
  call void @llvm.experimental.noalias.scope.decl(metadata !967)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %21) #6, !noalias !970
  %13691 = call ptr @ResetMagickMemory(ptr noundef nonnull %21, i32 noundef 0, i64 noundef 8) #6, !noalias !970
  %13692 = load double, ptr %13680, align 8, !tbaa !59, !noalias !970
  %13693 = fmul fast double %13692, %13690
  %13694 = load double, ptr %13681, align 8, !tbaa !60, !noalias !970
  %13695 = fadd fast double %13693, %13694
  %13696 = load i32, ptr %13682, align 8, !tbaa !51, !noalias !970
  %13697 = icmp eq i32 %13696, 1
  %13698 = bitcast double %13695 to i64
  %13699 = lshr i64 %13698, 56
  %13700 = trunc i64 %13699 to i8
  %13701 = lshr i64 %13698, 48
  %13702 = trunc i64 %13701 to i8
  %13703 = lshr i64 %13698, 40
  %13704 = trunc i64 %13703 to i8
  %13705 = lshr i64 %13698, 32
  %13706 = trunc i64 %13705 to i8
  %13707 = lshr i64 %13698, 24
  %13708 = trunc i64 %13707 to i8
  %13709 = lshr i64 %13698, 16
  %13710 = trunc i64 %13709 to i8
  %13711 = lshr i64 %13698, 8
  %13712 = trunc i64 %13711 to i8
  %13713 = trunc i64 %13698 to i8
  br i1 %13697, label %13715, label %13714

13714:                                            ; preds = %13684
  br label %13715

13715:                                            ; preds = %13714, %13684
  %13716 = phi i8 [ %13700, %13714 ], [ %13713, %13684 ]
  %13717 = phi i8 [ %13702, %13714 ], [ %13712, %13684 ]
  %13718 = phi i8 [ %13704, %13714 ], [ %13710, %13684 ]
  %13719 = phi i8 [ %13706, %13714 ], [ %13708, %13684 ]
  %13720 = phi i8 [ %13708, %13714 ], [ %13706, %13684 ]
  %13721 = phi i8 [ %13710, %13714 ], [ %13704, %13684 ]
  %13722 = phi i8 [ %13712, %13714 ], [ %13702, %13684 ]
  %13723 = phi i8 [ %13713, %13714 ], [ %13700, %13684 ]
  store i8 %13716, ptr %13686, align 1, !alias.scope !971, !noalias !951
  %13724 = getelementptr inbounds i8, ptr %13686, i64 1
  store i8 %13717, ptr %13724, align 1, !alias.scope !971, !noalias !951
  %13725 = getelementptr inbounds i8, ptr %13686, i64 2
  store i8 %13718, ptr %13725, align 1, !alias.scope !971, !noalias !951
  %13726 = getelementptr inbounds i8, ptr %13686, i64 3
  store i8 %13719, ptr %13726, align 1, !alias.scope !971, !noalias !951
  %13727 = getelementptr inbounds i8, ptr %13686, i64 4
  store i8 %13720, ptr %13727, align 1, !alias.scope !971, !noalias !951
  %13728 = getelementptr inbounds i8, ptr %13686, i64 5
  store i8 %13721, ptr %13728, align 1, !alias.scope !971, !noalias !951
  %13729 = getelementptr inbounds i8, ptr %13686, i64 6
  store i8 %13722, ptr %13729, align 1, !alias.scope !971, !noalias !951
  %13730 = getelementptr inbounds i8, ptr %13686, i64 7
  store i8 %13723, ptr %13730, align 1, !alias.scope !971, !noalias !951
  %13731 = getelementptr inbounds i8, ptr %13686, i64 8
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %21) #6, !noalias !970
  %13732 = getelementptr inbounds %struct._PixelPacket, ptr %13685, i64 1
  %13733 = load i64, ptr %13683, align 8, !tbaa !47, !noalias !956
  %13734 = getelementptr inbounds i8, ptr %13731, i64 %13733
  %13735 = add nuw nsw i64 %13687, 1
  %13736 = icmp eq i64 %13735, %164
  br i1 %13736, label %17787, label %13684, !llvm.loop !972

13737:                                            ; preds = %13673, %13301
  %13738 = icmp sgt i64 %164, 0
  br i1 %13738, label %13739, label %17831

13739:                                            ; preds = %13737
  %13740 = add i64 %13302, -1
  %13741 = shl i64 2, %13740
  %13742 = add i64 %13741, -1
  %13743 = uitofp i64 %13742 to float
  %13744 = fmul fast float %13743, 0x3EF0001000000000
  %13745 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 14, i32 2
  %13746 = icmp sgt i64 %13302, 0
  %13747 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %13748 = load i64, ptr %13745, align 8, !tbaa !69, !noalias !973
  %13749 = load i64, ptr %13747, align 8, !tbaa !47, !noalias !956
  br label %13750

13750:                                            ; preds = %13792, %13739
  %13751 = phi i64 [ %13748, %13739 ], [ %13793, %13792 ]
  %13752 = phi ptr [ %166, %13739 ], [ %13795, %13792 ]
  %13753 = phi ptr [ %88, %13739 ], [ %13796, %13792 ]
  %13754 = phi i64 [ 0, %13739 ], [ %13797, %13792 ]
  %13755 = getelementptr inbounds %struct._PixelPacket, ptr %13752, i64 0, i32 2
  %13756 = load i16, ptr %13755, align 2, !tbaa !29, !alias.scope !951, !noalias !954
  %13757 = uitofp i16 %13756 to float
  %13758 = fmul fast float %13744, %13757
  %13759 = fpext float %13758 to double
  %13760 = fadd fast double %13759, 5.000000e-01
  %13761 = fptoui double %13760 to i64
  tail call void @llvm.experimental.noalias.scope.decl(metadata !976)
  %13762 = icmp eq i64 %13751, 0
  br i1 %13762, label %13763, label %13764

13763:                                            ; preds = %13750
  store i64 8, ptr %13745, align 8, !tbaa !69, !noalias !973
  br label %13764

13764:                                            ; preds = %13763, %13750
  %13765 = phi i64 [ 8, %13763 ], [ %13751, %13750 ]
  br i1 %13746, label %13766, label %13792

13766:                                            ; preds = %13764, %13776
  %13767 = phi i64 [ %13787, %13776 ], [ %13765, %13764 ]
  %13768 = phi i64 [ %13772, %13776 ], [ %13302, %13764 ]
  %13769 = phi ptr [ %13789, %13776 ], [ %13753, %13764 ]
  %13770 = tail call i64 @llvm.umin.i64(i64 %13768, i64 %13767)
  %13771 = sub nsw i64 %13768, %13770
  %13772 = tail call i64 @llvm.smax.i64(i64 %13771, i64 0)
  %13773 = icmp eq i64 %13767, 8
  br i1 %13773, label %13776, label %13774

13774:                                            ; preds = %13766
  %13775 = load i8, ptr %13769, align 1, !tbaa !48, !alias.scope !977, !noalias !951
  br label %13776

13776:                                            ; preds = %13774, %13766
  %13777 = phi i8 [ %13775, %13774 ], [ 0, %13766 ]
  %13778 = sub i64 %13767, %13770
  %13779 = lshr i64 %13761, %13772
  %13780 = shl nsw i64 -1, %13770
  %13781 = xor i64 %13780, -1
  %13782 = and i64 %13779, %13781
  %13783 = shl i64 %13782, %13778
  %13784 = trunc i64 %13783 to i8
  %13785 = or i8 %13777, %13784
  store i8 %13785, ptr %13769, align 1, !tbaa !48, !alias.scope !977, !noalias !951
  %13786 = icmp ule i64 %13767, %13768
  %13787 = select i1 %13786, i64 8, i64 %13778
  %13788 = zext i1 %13786 to i64
  %13789 = getelementptr inbounds i8, ptr %13769, i64 %13788
  %13790 = icmp slt i64 %13771, 1
  br i1 %13790, label %13791, label %13766, !llvm.loop !75

13791:                                            ; preds = %13776
  store i64 %13787, ptr %13745, align 8, !tbaa !69, !noalias !973
  br label %13792

13792:                                            ; preds = %13791, %13764
  %13793 = phi i64 [ %13765, %13764 ], [ %13787, %13791 ]
  %13794 = phi ptr [ %13753, %13764 ], [ %13789, %13791 ]
  %13795 = getelementptr inbounds %struct._PixelPacket, ptr %13752, i64 1
  %13796 = getelementptr inbounds i8, ptr %13794, i64 %13749
  %13797 = add nuw nsw i64 %13754, 1
  %13798 = icmp eq i64 %13797, %164
  br i1 %13798, label %17787, label %13750, !llvm.loop !978

13799:                                            ; preds = %256, %256
  tail call void @llvm.experimental.noalias.scope.decl(metadata !979)
  tail call void @llvm.experimental.noalias.scope.decl(metadata !982)
  %13800 = load i64, ptr %2, align 8, !tbaa !45, !noalias !984
  switch i64 %13800, label %15270 [
    i64 8, label %13801
    i64 10, label %13832
    i64 12, label %14222
    i64 16, label %14650
    i64 32, label %14932
    i64 64, label %15119
  ]

13801:                                            ; preds = %13799
  %13802 = icmp sgt i64 %164, 0
  br i1 %13802, label %13803, label %17787

13803:                                            ; preds = %13801
  %13804 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %13805 = load i64, ptr %13804, align 8, !tbaa !47, !noalias !984
  br label %13806

13806:                                            ; preds = %13806, %13803
  %13807 = phi ptr [ %166, %13803 ], [ %13828, %13806 ]
  %13808 = phi i64 [ 0, %13803 ], [ %13830, %13806 ]
  %13809 = phi ptr [ %88, %13803 ], [ %13829, %13806 ]
  %13810 = getelementptr inbounds %struct._PixelPacket, ptr %13807, i64 0, i32 1
  %13811 = getelementptr inbounds i8, ptr %13809, i64 2
  %13812 = load <2 x i16>, ptr %13810, align 2, !tbaa !37, !alias.scope !979, !noalias !982
  %13813 = zext <2 x i16> %13812 to <2 x i64>
  %13814 = add nuw nsw <2 x i64> %13813, <i64 128, i64 128>
  %13815 = shufflevector <2 x i64> %13814, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  %13816 = lshr <2 x i64> %13815, <i64 8, i64 8>
  %13817 = sub nsw <2 x i64> %13815, %13816
  %13818 = lshr <2 x i64> %13817, <i64 8, i64 8>
  %13819 = trunc <2 x i64> %13818 to <2 x i8>
  store <2 x i8> %13819, ptr %13809, align 1, !tbaa !48, !alias.scope !982, !noalias !979
  %13820 = load i16, ptr %13807, align 2, !tbaa !31, !alias.scope !979, !noalias !982
  %13821 = zext i16 %13820 to i64
  %13822 = add nuw nsw i64 %13821, 128
  %13823 = lshr i64 %13822, 8
  %13824 = sub nsw i64 %13822, %13823
  %13825 = lshr i64 %13824, 8
  %13826 = trunc i64 %13825 to i8
  %13827 = getelementptr inbounds i8, ptr %13809, i64 3
  store i8 %13826, ptr %13811, align 1, !tbaa !48, !alias.scope !982, !noalias !979
  %13828 = getelementptr inbounds %struct._PixelPacket, ptr %13807, i64 1
  %13829 = getelementptr inbounds i8, ptr %13827, i64 %13805
  %13830 = add nuw nsw i64 %13808, 1
  %13831 = icmp eq i64 %13830, %164
  br i1 %13831, label %17787, label %13806, !llvm.loop !985

13832:                                            ; preds = %13799
  %13833 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 8
  %13834 = load i32, ptr %13833, align 4, !tbaa !84, !noalias !984
  %13835 = icmp eq i32 %13834, 0
  br i1 %13835, label %13836, label %13898

13836:                                            ; preds = %13832
  %13837 = icmp sgt i64 %164, 0
  br i1 %13837, label %13838, label %17787

13838:                                            ; preds = %13836
  %13839 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %13840 = load i32, ptr %13839, align 8, !tbaa !51, !noalias !984
  %13841 = icmp eq i32 %13840, 1
  %13842 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %13843 = load i64, ptr %13842, align 8, !tbaa !47, !noalias !984
  br label %13844

13844:                                            ; preds = %13881, %13838
  %13845 = phi ptr [ %166, %13838 ], [ %13894, %13881 ]
  %13846 = phi i64 [ 0, %13838 ], [ %13896, %13881 ]
  %13847 = phi ptr [ %88, %13838 ], [ %13895, %13881 ]
  %13848 = getelementptr inbounds %struct._PixelPacket, ptr %13845, i64 0, i32 2
  %13849 = load i16, ptr %13848, align 2, !tbaa !29, !alias.scope !979, !noalias !982
  %13850 = uitofp i16 %13849 to float
  %13851 = fmul fast float %13850, 0x3F8FF82000000000
  %13852 = fpext float %13851 to double
  %13853 = fadd fast double %13852, 5.000000e-01
  %13854 = fptoui double %13853 to i64
  %13855 = shl i64 %13854, 22
  %13856 = getelementptr inbounds %struct._PixelPacket, ptr %13845, i64 0, i32 1
  %13857 = load i16, ptr %13856, align 2, !tbaa !30, !alias.scope !979, !noalias !982
  %13858 = uitofp i16 %13857 to float
  %13859 = fmul fast float %13858, 0x3F8FF82000000000
  %13860 = fpext float %13859 to double
  %13861 = fadd fast double %13860, 5.000000e-01
  %13862 = fptoui double %13861 to i64
  %13863 = shl i64 %13862, 12
  %13864 = or i64 %13863, %13855
  %13865 = load i16, ptr %13845, align 2, !tbaa !31, !alias.scope !979, !noalias !982
  %13866 = uitofp i16 %13865 to float
  %13867 = fmul fast float %13866, 0x3F8FF82000000000
  %13868 = fpext float %13867 to double
  %13869 = fadd fast double %13868, 5.000000e-01
  %13870 = fptoui double %13869 to i64
  %13871 = shl i64 %13870, 2
  %13872 = or i64 %13864, %13871
  %13873 = trunc i64 %13872 to i32
  %13874 = lshr i32 %13873, 16
  br i1 %13841, label %13875, label %13878

13875:                                            ; preds = %13844
  %13876 = lshr i32 %13873, 8
  %13877 = lshr i32 %13873, 24
  br label %13881

13878:                                            ; preds = %13844
  %13879 = lshr i32 %13873, 24
  %13880 = lshr i32 %13873, 8
  br label %13881

13881:                                            ; preds = %13878, %13875
  %13882 = phi i32 [ %13873, %13875 ], [ %13879, %13878 ]
  %13883 = phi i32 [ %13876, %13875 ], [ %13874, %13878 ]
  %13884 = phi i32 [ %13874, %13875 ], [ %13880, %13878 ]
  %13885 = phi i32 [ %13877, %13875 ], [ %13873, %13878 ]
  %13886 = trunc i32 %13885 to i8
  %13887 = trunc i32 %13884 to i8
  %13888 = trunc i32 %13883 to i8
  %13889 = trunc i32 %13882 to i8
  store i8 %13889, ptr %13847, align 1, !alias.scope !982, !noalias !979
  %13890 = getelementptr inbounds i8, ptr %13847, i64 1
  store i8 %13888, ptr %13890, align 1, !alias.scope !982, !noalias !979
  %13891 = getelementptr inbounds i8, ptr %13847, i64 2
  store i8 %13887, ptr %13891, align 1, !alias.scope !982, !noalias !979
  %13892 = getelementptr inbounds i8, ptr %13847, i64 3
  store i8 %13886, ptr %13892, align 1, !alias.scope !982, !noalias !979
  %13893 = getelementptr inbounds i8, ptr %13847, i64 4
  %13894 = getelementptr inbounds %struct._PixelPacket, ptr %13845, i64 1
  %13895 = getelementptr inbounds i8, ptr %13893, i64 %13843
  %13896 = add nuw nsw i64 %13846, 1
  %13897 = icmp eq i64 %13896, %164
  br i1 %13897, label %17787, label %13844, !llvm.loop !986

13898:                                            ; preds = %13832
  %13899 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 1
  %13900 = load i64, ptr %13899, align 8, !tbaa !86, !noalias !984
  %13901 = icmp eq i64 %13900, 32
  %13902 = icmp sgt i64 %164, 0
  br i1 %13901, label %13909, label %13903

13903:                                            ; preds = %13898
  br i1 %13902, label %13904, label %17787

13904:                                            ; preds = %13903
  %13905 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 14, i32 2
  %13906 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %13907 = load i64, ptr %13905, align 8, !tbaa !69, !noalias !984
  %13908 = load i64, ptr %13906, align 8, !tbaa !47, !noalias !984
  br label %14106

13909:                                            ; preds = %13898
  br i1 %13902, label %13910, label %17787

13910:                                            ; preds = %13909
  %13911 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 14, i32 2
  %13912 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 14, i32 3
  %13913 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 14, i32 1
  %13914 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %13915 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %13916 = load i64, ptr %13911, align 8, !tbaa !69, !noalias !984
  %13917 = load i64, ptr %13915, align 8, !tbaa !47, !noalias !984
  %13918 = load ptr, ptr %13912, align 8, !tbaa !87, !noalias !984
  br label %13919

13919:                                            ; preds = %14101, %13910
  %13920 = phi i64 [ %13916, %13910 ], [ %14098, %14101 ]
  %13921 = phi ptr [ %166, %13910 ], [ %14102, %14101 ]
  %13922 = phi i64 [ 0, %13910 ], [ %14104, %14101 ]
  %13923 = phi ptr [ %88, %13910 ], [ %14103, %14101 ]
  %13924 = getelementptr inbounds %struct._PixelPacket, ptr %13921, i64 0, i32 2
  %13925 = load i16, ptr %13924, align 2, !tbaa !29, !alias.scope !979, !noalias !982
  %13926 = uitofp i16 %13925 to float
  %13927 = fmul fast float %13926, 0x3F8FF82000000000
  %13928 = fpext float %13927 to double
  %13929 = fadd fast double %13928, 5.000000e-01
  %13930 = fptoui double %13929 to i64
  %13931 = and i64 %13930, 4294967295
  tail call void @llvm.experimental.noalias.scope.decl(metadata !987)
  %13932 = icmp eq i64 %13920, 0
  %13933 = select i1 %13932, i64 32, i64 %13920
  %13934 = load i32, ptr %13913, align 8, !tbaa !91, !noalias !990
  br label %13935

13935:                                            ; preds = %13977, %13919
  %13936 = phi i32 [ %13934, %13919 ], [ %13978, %13977 ]
  %13937 = phi i64 [ %13933, %13919 ], [ %13979, %13977 ]
  %13938 = phi i64 [ 10, %13919 ], [ %13951, %13977 ]
  %13939 = phi ptr [ %13923, %13919 ], [ %13980, %13977 ]
  %13940 = tail call i64 @llvm.umin.i64(i64 %13938, i64 %13937)
  %13941 = sub nsw i64 10, %13938
  %13942 = lshr i64 %13931, %13941
  %13943 = getelementptr inbounds i32, ptr %13918, i64 %13940
  %13944 = load i32, ptr %13943, align 4, !tbaa !93, !noalias !987
  %13945 = zext i32 %13944 to i64
  %13946 = and i64 %13942, %13945
  %13947 = sub i64 32, %13937
  %13948 = shl i64 %13946, %13947
  %13949 = trunc i64 %13948 to i32
  %13950 = or i32 %13936, %13949
  store i32 %13950, ptr %13913, align 8, !tbaa !91, !noalias !990
  %13951 = sub nsw i64 %13938, %13940
  %13952 = sub i64 %13937, %13940
  %13953 = icmp ugt i64 %13937, %13938
  br i1 %13953, label %13977, label %13954

13954:                                            ; preds = %13935
  %13955 = load i32, ptr %13914, align 8, !tbaa !51, !noalias !990
  %13956 = icmp eq i32 %13955, 1
  %13957 = lshr i32 %13950, 16
  br i1 %13956, label %13958, label %13961

13958:                                            ; preds = %13954
  %13959 = lshr i32 %13950, 8
  %13960 = lshr i32 %13950, 24
  br label %13964

13961:                                            ; preds = %13954
  %13962 = lshr i32 %13950, 24
  %13963 = lshr i32 %13950, 8
  br label %13964

13964:                                            ; preds = %13961, %13958
  %13965 = phi i32 [ %13950, %13958 ], [ %13962, %13961 ]
  %13966 = phi i32 [ %13959, %13958 ], [ %13957, %13961 ]
  %13967 = phi i32 [ %13957, %13958 ], [ %13963, %13961 ]
  %13968 = phi i32 [ %13960, %13958 ], [ %13950, %13961 ]
  %13969 = trunc i32 %13968 to i8
  %13970 = trunc i32 %13967 to i8
  %13971 = trunc i32 %13966 to i8
  %13972 = trunc i32 %13965 to i8
  store i8 %13972, ptr %13939, align 1, !alias.scope !991, !noalias !979
  %13973 = getelementptr inbounds i8, ptr %13939, i64 1
  store i8 %13971, ptr %13973, align 1, !alias.scope !991, !noalias !979
  %13974 = getelementptr inbounds i8, ptr %13939, i64 2
  store i8 %13970, ptr %13974, align 1, !alias.scope !991, !noalias !979
  %13975 = getelementptr inbounds i8, ptr %13939, i64 3
  store i8 %13969, ptr %13975, align 1, !alias.scope !991, !noalias !979
  %13976 = getelementptr inbounds i8, ptr %13939, i64 4
  store i32 0, ptr %13913, align 8, !tbaa !91, !noalias !990
  br label %13977

13977:                                            ; preds = %13964, %13935
  %13978 = phi i32 [ 0, %13964 ], [ %13950, %13935 ]
  %13979 = phi i64 [ 32, %13964 ], [ %13952, %13935 ]
  %13980 = phi ptr [ %13976, %13964 ], [ %13939, %13935 ]
  %13981 = icmp sgt i64 %13951, 0
  br i1 %13981, label %13935, label %13982, !llvm.loop !95

13982:                                            ; preds = %13977
  %13983 = getelementptr inbounds %struct._PixelPacket, ptr %13921, i64 0, i32 1
  %13984 = load i16, ptr %13983, align 2, !tbaa !30, !alias.scope !979, !noalias !982
  %13985 = uitofp i16 %13984 to float
  %13986 = fmul fast float %13985, 0x3F8FF82000000000
  %13987 = fpext float %13986 to double
  %13988 = fadd fast double %13987, 5.000000e-01
  %13989 = fptoui double %13988 to i64
  %13990 = and i64 %13989, 4294967295
  tail call void @llvm.experimental.noalias.scope.decl(metadata !992)
  %13991 = icmp eq i64 %13979, 0
  br i1 %13991, label %13992, label %13993

13992:                                            ; preds = %13982
  store i64 32, ptr %13911, align 8, !tbaa !69, !noalias !995
  br label %13993

13993:                                            ; preds = %13982, %13992
  %13994 = phi i64 [ 32, %13992 ], [ %13979, %13982 ]
  %13995 = load i32, ptr %13913, align 8, !tbaa !91, !noalias !995
  br label %13996

13996:                                            ; preds = %14038, %13993
  %13997 = phi i32 [ %13995, %13993 ], [ %14039, %14038 ]
  %13998 = phi i64 [ %13994, %13993 ], [ %14040, %14038 ]
  %13999 = phi i64 [ 10, %13993 ], [ %14012, %14038 ]
  %14000 = phi ptr [ %13980, %13993 ], [ %14041, %14038 ]
  %14001 = tail call i64 @llvm.umin.i64(i64 %13999, i64 %13998)
  %14002 = sub nsw i64 10, %13999
  %14003 = lshr i64 %13990, %14002
  %14004 = getelementptr inbounds i32, ptr %13918, i64 %14001
  %14005 = load i32, ptr %14004, align 4, !tbaa !93, !noalias !992
  %14006 = zext i32 %14005 to i64
  %14007 = and i64 %14003, %14006
  %14008 = sub i64 32, %13998
  %14009 = shl i64 %14007, %14008
  %14010 = trunc i64 %14009 to i32
  %14011 = or i32 %13997, %14010
  store i32 %14011, ptr %13913, align 8, !tbaa !91, !noalias !995
  %14012 = sub nsw i64 %13999, %14001
  %14013 = sub i64 %13998, %14001
  %14014 = icmp ugt i64 %13998, %13999
  br i1 %14014, label %14038, label %14015

14015:                                            ; preds = %13996
  %14016 = load i32, ptr %13914, align 8, !tbaa !51, !noalias !995
  %14017 = icmp eq i32 %14016, 1
  %14018 = lshr i32 %14011, 16
  br i1 %14017, label %14019, label %14022

14019:                                            ; preds = %14015
  %14020 = lshr i32 %14011, 8
  %14021 = lshr i32 %14011, 24
  br label %14025

14022:                                            ; preds = %14015
  %14023 = lshr i32 %14011, 24
  %14024 = lshr i32 %14011, 8
  br label %14025

14025:                                            ; preds = %14022, %14019
  %14026 = phi i32 [ %14011, %14019 ], [ %14023, %14022 ]
  %14027 = phi i32 [ %14020, %14019 ], [ %14018, %14022 ]
  %14028 = phi i32 [ %14018, %14019 ], [ %14024, %14022 ]
  %14029 = phi i32 [ %14021, %14019 ], [ %14011, %14022 ]
  %14030 = trunc i32 %14029 to i8
  %14031 = trunc i32 %14028 to i8
  %14032 = trunc i32 %14027 to i8
  %14033 = trunc i32 %14026 to i8
  store i8 %14033, ptr %14000, align 1, !alias.scope !996, !noalias !979
  %14034 = getelementptr inbounds i8, ptr %14000, i64 1
  store i8 %14032, ptr %14034, align 1, !alias.scope !996, !noalias !979
  %14035 = getelementptr inbounds i8, ptr %14000, i64 2
  store i8 %14031, ptr %14035, align 1, !alias.scope !996, !noalias !979
  %14036 = getelementptr inbounds i8, ptr %14000, i64 3
  store i8 %14030, ptr %14036, align 1, !alias.scope !996, !noalias !979
  %14037 = getelementptr inbounds i8, ptr %14000, i64 4
  store i32 0, ptr %13913, align 8, !tbaa !91, !noalias !995
  br label %14038

14038:                                            ; preds = %14025, %13996
  %14039 = phi i32 [ 0, %14025 ], [ %14011, %13996 ]
  %14040 = phi i64 [ 32, %14025 ], [ %14013, %13996 ]
  %14041 = phi ptr [ %14037, %14025 ], [ %14000, %13996 ]
  %14042 = icmp sgt i64 %14012, 0
  br i1 %14042, label %13996, label %14043, !llvm.loop !95

14043:                                            ; preds = %14038
  %14044 = load i16, ptr %13921, align 2, !tbaa !31, !alias.scope !979, !noalias !982
  %14045 = uitofp i16 %14044 to float
  %14046 = fmul fast float %14045, 0x3F8FF82000000000
  %14047 = fpext float %14046 to double
  %14048 = fadd fast double %14047, 5.000000e-01
  %14049 = fptoui double %14048 to i64
  %14050 = and i64 %14049, 4294967295
  tail call void @llvm.experimental.noalias.scope.decl(metadata !997)
  %14051 = icmp eq i64 %14040, 0
  %14052 = select i1 %14051, i64 32, i64 %14040
  %14053 = load i32, ptr %13913, align 8, !tbaa !91, !noalias !1000
  br label %14054

14054:                                            ; preds = %14096, %14043
  %14055 = phi i32 [ %14053, %14043 ], [ %14097, %14096 ]
  %14056 = phi i64 [ %14052, %14043 ], [ %14098, %14096 ]
  %14057 = phi i64 [ 10, %14043 ], [ %14070, %14096 ]
  %14058 = phi ptr [ %14041, %14043 ], [ %14099, %14096 ]
  %14059 = tail call i64 @llvm.umin.i64(i64 %14057, i64 %14056)
  %14060 = sub nsw i64 10, %14057
  %14061 = lshr i64 %14050, %14060
  %14062 = getelementptr inbounds i32, ptr %13918, i64 %14059
  %14063 = load i32, ptr %14062, align 4, !tbaa !93, !noalias !997
  %14064 = zext i32 %14063 to i64
  %14065 = and i64 %14061, %14064
  %14066 = sub i64 32, %14056
  %14067 = shl i64 %14065, %14066
  %14068 = trunc i64 %14067 to i32
  %14069 = or i32 %14055, %14068
  store i32 %14069, ptr %13913, align 8, !tbaa !91, !noalias !1000
  %14070 = sub nsw i64 %14057, %14059
  %14071 = sub i64 %14056, %14059
  %14072 = icmp ugt i64 %14056, %14057
  br i1 %14072, label %14096, label %14073

14073:                                            ; preds = %14054
  %14074 = load i32, ptr %13914, align 8, !tbaa !51, !noalias !1000
  %14075 = icmp eq i32 %14074, 1
  %14076 = lshr i32 %14069, 16
  br i1 %14075, label %14077, label %14080

14077:                                            ; preds = %14073
  %14078 = lshr i32 %14069, 8
  %14079 = lshr i32 %14069, 24
  br label %14083

14080:                                            ; preds = %14073
  %14081 = lshr i32 %14069, 24
  %14082 = lshr i32 %14069, 8
  br label %14083

14083:                                            ; preds = %14080, %14077
  %14084 = phi i32 [ %14069, %14077 ], [ %14081, %14080 ]
  %14085 = phi i32 [ %14078, %14077 ], [ %14076, %14080 ]
  %14086 = phi i32 [ %14076, %14077 ], [ %14082, %14080 ]
  %14087 = phi i32 [ %14079, %14077 ], [ %14069, %14080 ]
  %14088 = trunc i32 %14087 to i8
  %14089 = trunc i32 %14086 to i8
  %14090 = trunc i32 %14085 to i8
  %14091 = trunc i32 %14084 to i8
  store i8 %14091, ptr %14058, align 1, !alias.scope !1001, !noalias !979
  %14092 = getelementptr inbounds i8, ptr %14058, i64 1
  store i8 %14090, ptr %14092, align 1, !alias.scope !1001, !noalias !979
  %14093 = getelementptr inbounds i8, ptr %14058, i64 2
  store i8 %14089, ptr %14093, align 1, !alias.scope !1001, !noalias !979
  %14094 = getelementptr inbounds i8, ptr %14058, i64 3
  store i8 %14088, ptr %14094, align 1, !alias.scope !1001, !noalias !979
  %14095 = getelementptr inbounds i8, ptr %14058, i64 4
  store i32 0, ptr %13913, align 8, !tbaa !91, !noalias !1000
  br label %14096

14096:                                            ; preds = %14083, %14054
  %14097 = phi i32 [ 0, %14083 ], [ %14069, %14054 ]
  %14098 = phi i64 [ 32, %14083 ], [ %14071, %14054 ]
  %14099 = phi ptr [ %14095, %14083 ], [ %14058, %14054 ]
  %14100 = icmp sgt i64 %14070, 0
  br i1 %14100, label %14054, label %14101, !llvm.loop !95

14101:                                            ; preds = %14096
  store i64 %14098, ptr %13911, align 8, !tbaa !69, !noalias !1000
  %14102 = getelementptr inbounds %struct._PixelPacket, ptr %13921, i64 1
  %14103 = getelementptr inbounds i8, ptr %14099, i64 %13917
  %14104 = add nuw nsw i64 %13922, 1
  %14105 = icmp eq i64 %14104, %164
  br i1 %14105, label %17787, label %13919, !llvm.loop !1002

14106:                                            ; preds = %14217, %13904
  %14107 = phi i64 [ %13907, %13904 ], [ %14213, %14217 ]
  %14108 = phi ptr [ %166, %13904 ], [ %14218, %14217 ]
  %14109 = phi i64 [ 0, %13904 ], [ %14220, %14217 ]
  %14110 = phi ptr [ %88, %13904 ], [ %14219, %14217 ]
  %14111 = getelementptr inbounds %struct._PixelPacket, ptr %14108, i64 0, i32 2
  %14112 = load i16, ptr %14111, align 2, !tbaa !29, !alias.scope !979, !noalias !982
  %14113 = uitofp i16 %14112 to float
  %14114 = fmul fast float %14113, 0x3F8FF82000000000
  %14115 = fpext float %14114 to double
  %14116 = fadd fast double %14115, 5.000000e-01
  %14117 = fptoui double %14116 to i64
  %14118 = and i64 %14117, 4294967295
  %14119 = icmp eq i64 %14107, 0
  %14120 = select i1 %14119, i64 8, i64 %14107
  br label %14121

14121:                                            ; preds = %14106, %14131
  %14122 = phi i64 [ %14142, %14131 ], [ %14120, %14106 ]
  %14123 = phi i64 [ %14127, %14131 ], [ 10, %14106 ]
  %14124 = phi ptr [ %14144, %14131 ], [ %14110, %14106 ]
  %14125 = tail call i64 @llvm.umin.i64(i64 %14123, i64 %14122)
  %14126 = sub nsw i64 %14123, %14125
  %14127 = tail call i64 @llvm.smax.i64(i64 %14126, i64 0)
  %14128 = icmp eq i64 %14122, 8
  br i1 %14128, label %14131, label %14129

14129:                                            ; preds = %14121
  %14130 = load i8, ptr %14124, align 1, !tbaa !48, !alias.scope !1003, !noalias !979
  br label %14131

14131:                                            ; preds = %14129, %14121
  %14132 = phi i8 [ %14130, %14129 ], [ 0, %14121 ]
  %14133 = sub i64 %14122, %14125
  %14134 = lshr i64 %14118, %14127
  %14135 = shl nsw i64 -1, %14125
  %14136 = xor i64 %14135, -1
  %14137 = and i64 %14134, %14136
  %14138 = shl i64 %14137, %14133
  %14139 = trunc i64 %14138 to i8
  %14140 = or i8 %14132, %14139
  store i8 %14140, ptr %14124, align 1, !tbaa !48, !alias.scope !1003, !noalias !979
  %14141 = icmp ule i64 %14122, %14123
  %14142 = select i1 %14141, i64 8, i64 %14133
  %14143 = zext i1 %14141 to i64
  %14144 = getelementptr inbounds i8, ptr %14124, i64 %14143
  %14145 = icmp slt i64 %14126, 1
  br i1 %14145, label %14146, label %14121, !llvm.loop !75

14146:                                            ; preds = %14131
  %14147 = getelementptr inbounds %struct._PixelPacket, ptr %14108, i64 0, i32 1
  %14148 = load i16, ptr %14147, align 2, !tbaa !30, !alias.scope !979, !noalias !982
  %14149 = uitofp i16 %14148 to float
  %14150 = fmul fast float %14149, 0x3F8FF82000000000
  %14151 = fpext float %14150 to double
  %14152 = fadd fast double %14151, 5.000000e-01
  %14153 = fptoui double %14152 to i64
  %14154 = and i64 %14153, 4294967295
  %14155 = icmp eq i64 %14142, 0
  %14156 = select i1 %14155, i64 8, i64 %14142
  br label %14157

14157:                                            ; preds = %14146, %14167
  %14158 = phi i64 [ %14178, %14167 ], [ %14156, %14146 ]
  %14159 = phi i64 [ %14163, %14167 ], [ 10, %14146 ]
  %14160 = phi ptr [ %14180, %14167 ], [ %14144, %14146 ]
  %14161 = tail call i64 @llvm.umin.i64(i64 %14159, i64 %14158)
  %14162 = sub nsw i64 %14159, %14161
  %14163 = tail call i64 @llvm.smax.i64(i64 %14162, i64 0)
  %14164 = icmp eq i64 %14158, 8
  br i1 %14164, label %14167, label %14165

14165:                                            ; preds = %14157
  %14166 = load i8, ptr %14160, align 1, !tbaa !48, !alias.scope !1006, !noalias !979
  br label %14167

14167:                                            ; preds = %14165, %14157
  %14168 = phi i8 [ %14166, %14165 ], [ 0, %14157 ]
  %14169 = sub i64 %14158, %14161
  %14170 = lshr i64 %14154, %14163
  %14171 = shl nsw i64 -1, %14161
  %14172 = xor i64 %14171, -1
  %14173 = and i64 %14170, %14172
  %14174 = shl i64 %14173, %14169
  %14175 = trunc i64 %14174 to i8
  %14176 = or i8 %14168, %14175
  store i8 %14176, ptr %14160, align 1, !tbaa !48, !alias.scope !1006, !noalias !979
  %14177 = icmp ule i64 %14158, %14159
  %14178 = select i1 %14177, i64 8, i64 %14169
  %14179 = zext i1 %14177 to i64
  %14180 = getelementptr inbounds i8, ptr %14160, i64 %14179
  %14181 = icmp slt i64 %14162, 1
  br i1 %14181, label %14182, label %14157, !llvm.loop !75

14182:                                            ; preds = %14167
  %14183 = load i16, ptr %14108, align 2, !tbaa !31, !alias.scope !979, !noalias !982
  %14184 = uitofp i16 %14183 to float
  %14185 = fmul fast float %14184, 0x3F8FF82000000000
  %14186 = fpext float %14185 to double
  %14187 = fadd fast double %14186, 5.000000e-01
  %14188 = fptoui double %14187 to i64
  %14189 = and i64 %14188, 4294967295
  tail call void @llvm.experimental.noalias.scope.decl(metadata !1009)
  %14190 = icmp eq i64 %14178, 0
  %14191 = select i1 %14190, i64 8, i64 %14178
  br label %14192

14192:                                            ; preds = %14182, %14202
  %14193 = phi i64 [ %14213, %14202 ], [ %14191, %14182 ]
  %14194 = phi i64 [ %14198, %14202 ], [ 10, %14182 ]
  %14195 = phi ptr [ %14215, %14202 ], [ %14180, %14182 ]
  %14196 = tail call i64 @llvm.umin.i64(i64 %14194, i64 %14193)
  %14197 = sub nsw i64 %14194, %14196
  %14198 = tail call i64 @llvm.smax.i64(i64 %14197, i64 0)
  %14199 = icmp eq i64 %14193, 8
  br i1 %14199, label %14202, label %14200

14200:                                            ; preds = %14192
  %14201 = load i8, ptr %14195, align 1, !tbaa !48, !alias.scope !1012, !noalias !979
  br label %14202

14202:                                            ; preds = %14200, %14192
  %14203 = phi i8 [ %14201, %14200 ], [ 0, %14192 ]
  %14204 = sub i64 %14193, %14196
  %14205 = lshr i64 %14189, %14198
  %14206 = shl nsw i64 -1, %14196
  %14207 = xor i64 %14206, -1
  %14208 = and i64 %14205, %14207
  %14209 = shl i64 %14208, %14204
  %14210 = trunc i64 %14209 to i8
  %14211 = or i8 %14203, %14210
  store i8 %14211, ptr %14195, align 1, !tbaa !48, !alias.scope !1012, !noalias !979
  %14212 = icmp ule i64 %14193, %14194
  %14213 = select i1 %14212, i64 8, i64 %14204
  %14214 = zext i1 %14212 to i64
  %14215 = getelementptr inbounds i8, ptr %14195, i64 %14214
  %14216 = icmp slt i64 %14197, 1
  br i1 %14216, label %14217, label %14192, !llvm.loop !75

14217:                                            ; preds = %14202
  %14218 = getelementptr inbounds %struct._PixelPacket, ptr %14108, i64 1
  %14219 = getelementptr inbounds i8, ptr %14215, i64 %13908
  %14220 = add nuw nsw i64 %14109, 1
  %14221 = icmp eq i64 %14220, %164
  br i1 %14221, label %17111, label %14106, !llvm.loop !1013

14222:                                            ; preds = %13799
  %14223 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 8
  %14224 = load i32, ptr %14223, align 4, !tbaa !84, !noalias !984
  %14225 = icmp eq i32 %14224, 0
  br i1 %14225, label %14226, label %14326

14226:                                            ; preds = %14222
  %14227 = mul i64 %164, 3
  %14228 = add i64 %14227, -1
  %14229 = icmp sgt i64 %14228, 0
  br i1 %14229, label %14230, label %14238

14230:                                            ; preds = %14226
  %14231 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %14232 = load i32, ptr %14231, align 8, !tbaa !51, !noalias !984
  %14233 = icmp eq i32 %14232, 1
  %14234 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %14235 = load i64, ptr %14234, align 8, !tbaa !47, !noalias !984
  br label %14244

14236:                                            ; preds = %14281
  %14237 = urem i64 %14300, 3
  br label %14238

14238:                                            ; preds = %14236, %14226
  %14239 = phi ptr [ %88, %14226 ], [ %14299, %14236 ]
  %14240 = phi i64 [ 0, %14226 ], [ %14237, %14236 ]
  %14241 = phi ptr [ %166, %14226 ], [ %14283, %14236 ]
  %14242 = and i64 %14227, 1
  %14243 = icmp eq i64 %14242, 0
  br i1 %14243, label %17787, label %14302

14244:                                            ; preds = %14281, %14230
  %14245 = phi ptr [ %166, %14230 ], [ %14283, %14281 ]
  %14246 = phi i64 [ 0, %14230 ], [ %14300, %14281 ]
  %14247 = phi ptr [ %88, %14230 ], [ %14299, %14281 ]
  %14248 = urem i64 %14246, 3
  switch i64 %14248, label %14249 [
    i64 2, label %14253
    i64 1, label %14251
  ]

14249:                                            ; preds = %14244
  %14250 = getelementptr inbounds %struct._PixelPacket, ptr %14245, i64 0, i32 2
  br label %14255

14251:                                            ; preds = %14244
  %14252 = getelementptr inbounds %struct._PixelPacket, ptr %14245, i64 0, i32 1
  br label %14255

14253:                                            ; preds = %14244
  %14254 = getelementptr inbounds %struct._PixelPacket, ptr %14245, i64 1
  br label %14255

14255:                                            ; preds = %14253, %14251, %14249
  %14256 = phi ptr [ %14250, %14249 ], [ %14252, %14251 ], [ %14245, %14253 ]
  %14257 = phi ptr [ %14245, %14249 ], [ %14245, %14251 ], [ %14254, %14253 ]
  %14258 = load i16, ptr %14256, align 2, !tbaa !37, !alias.scope !979, !noalias !982
  %14259 = uitofp i16 %14258 to float
  %14260 = fmul fast float %14259, 0x3FAFFE2000000000
  %14261 = fpext float %14260 to double
  %14262 = fadd fast double %14261, 5.000000e-01
  %14263 = fptoui double %14262 to i64
  %14264 = trunc i64 %14263 to i16
  %14265 = shl i16 %14264, 4
  %14266 = lshr i16 %14265, 8
  %14267 = select i1 %14233, i16 %14265, i16 %14266
  %14268 = select i1 %14233, i16 %14266, i16 %14265
  %14269 = trunc i16 %14268 to i8
  %14270 = trunc i16 %14267 to i8
  store i8 %14270, ptr %14247, align 1, !alias.scope !982, !noalias !979
  %14271 = getelementptr inbounds i8, ptr %14247, i64 1
  store i8 %14269, ptr %14271, align 1, !alias.scope !982, !noalias !979
  %14272 = getelementptr inbounds i8, ptr %14247, i64 2
  %14273 = or i64 %14246, 1
  %14274 = urem i64 %14273, 3
  switch i64 %14274, label %14275 [
    i64 2, label %14279
    i64 1, label %14277
  ]

14275:                                            ; preds = %14255
  %14276 = getelementptr inbounds %struct._PixelPacket, ptr %14257, i64 0, i32 2
  br label %14281

14277:                                            ; preds = %14255
  %14278 = getelementptr inbounds %struct._PixelPacket, ptr %14257, i64 0, i32 1
  br label %14281

14279:                                            ; preds = %14255
  %14280 = getelementptr inbounds %struct._PixelPacket, ptr %14257, i64 1
  br label %14281

14281:                                            ; preds = %14279, %14277, %14275
  %14282 = phi ptr [ %14276, %14275 ], [ %14278, %14277 ], [ %14257, %14279 ]
  %14283 = phi ptr [ %14257, %14275 ], [ %14257, %14277 ], [ %14280, %14279 ]
  %14284 = load i16, ptr %14282, align 2, !tbaa !37, !alias.scope !979, !noalias !982
  %14285 = uitofp i16 %14284 to float
  %14286 = fmul fast float %14285, 0x3FAFFE2000000000
  %14287 = fpext float %14286 to double
  %14288 = fadd fast double %14287, 5.000000e-01
  %14289 = fptoui double %14288 to i64
  %14290 = trunc i64 %14289 to i16
  %14291 = shl i16 %14290, 4
  %14292 = lshr i16 %14291, 8
  %14293 = select i1 %14233, i16 %14291, i16 %14292
  %14294 = select i1 %14233, i16 %14292, i16 %14291
  %14295 = trunc i16 %14294 to i8
  %14296 = trunc i16 %14293 to i8
  store i8 %14296, ptr %14272, align 1, !alias.scope !982, !noalias !979
  %14297 = getelementptr inbounds i8, ptr %14247, i64 3
  store i8 %14295, ptr %14297, align 1, !alias.scope !982, !noalias !979
  %14298 = getelementptr inbounds i8, ptr %14247, i64 4
  %14299 = getelementptr inbounds i8, ptr %14298, i64 %14235
  %14300 = add nuw nsw i64 %14246, 2
  %14301 = icmp slt i64 %14300, %14228
  br i1 %14301, label %14244, label %14236, !llvm.loop !1014

14302:                                            ; preds = %14238
  %14303 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  switch i64 %14240, label %14304 [
    i64 2, label %14308
    i64 1, label %14306
  ]

14304:                                            ; preds = %14302
  %14305 = getelementptr inbounds %struct._PixelPacket, ptr %14241, i64 0, i32 2
  br label %14308

14306:                                            ; preds = %14302
  %14307 = getelementptr inbounds %struct._PixelPacket, ptr %14241, i64 0, i32 1
  br label %14308

14308:                                            ; preds = %14306, %14304, %14302
  %14309 = phi ptr [ %14305, %14304 ], [ %14307, %14306 ], [ %14241, %14302 ]
  %14310 = load i16, ptr %14309, align 2, !tbaa !37, !alias.scope !979, !noalias !982
  %14311 = uitofp i16 %14310 to float
  %14312 = fmul fast float %14311, 0x3FAFFE2000000000
  %14313 = fpext float %14312 to double
  %14314 = fadd fast double %14313, 5.000000e-01
  %14315 = fptoui double %14314 to i64
  %14316 = trunc i64 %14315 to i16
  %14317 = load i32, ptr %14303, align 8, !tbaa !51, !noalias !984
  %14318 = shl i16 %14316, 4
  %14319 = icmp eq i32 %14317, 1
  %14320 = lshr i16 %14318, 8
  %14321 = select i1 %14319, i16 %14318, i16 %14320
  %14322 = select i1 %14319, i16 %14320, i16 %14318
  %14323 = trunc i16 %14322 to i8
  %14324 = trunc i16 %14321 to i8
  store i8 %14324, ptr %14239, align 1, !alias.scope !982, !noalias !979
  %14325 = getelementptr inbounds i8, ptr %14239, i64 1
  store i8 %14323, ptr %14325, align 1, !alias.scope !982, !noalias !979
  br label %17787

14326:                                            ; preds = %14222
  %14327 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 1
  %14328 = load i64, ptr %14327, align 8, !tbaa !86, !noalias !984
  %14329 = icmp eq i64 %14328, 32
  %14330 = icmp sgt i64 %164, 0
  br i1 %14329, label %14337, label %14331

14331:                                            ; preds = %14326
  br i1 %14330, label %14332, label %17787

14332:                                            ; preds = %14331
  %14333 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 14, i32 2
  %14334 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %14335 = load i64, ptr %14333, align 8, !tbaa !69, !noalias !984
  %14336 = load i64, ptr %14334, align 8, !tbaa !47, !noalias !984
  br label %14534

14337:                                            ; preds = %14326
  br i1 %14330, label %14338, label %17787

14338:                                            ; preds = %14337
  %14339 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 14, i32 2
  %14340 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 14, i32 3
  %14341 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 14, i32 1
  %14342 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %14343 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %14344 = load i64, ptr %14339, align 8, !tbaa !69, !noalias !984
  %14345 = load i64, ptr %14343, align 8, !tbaa !47, !noalias !984
  %14346 = load ptr, ptr %14340, align 8, !tbaa !87, !noalias !984
  br label %14347

14347:                                            ; preds = %14529, %14338
  %14348 = phi i64 [ %14344, %14338 ], [ %14526, %14529 ]
  %14349 = phi ptr [ %166, %14338 ], [ %14530, %14529 ]
  %14350 = phi i64 [ 0, %14338 ], [ %14532, %14529 ]
  %14351 = phi ptr [ %88, %14338 ], [ %14531, %14529 ]
  %14352 = getelementptr inbounds %struct._PixelPacket, ptr %14349, i64 0, i32 2
  %14353 = load i16, ptr %14352, align 2, !tbaa !29, !alias.scope !979, !noalias !982
  %14354 = uitofp i16 %14353 to float
  %14355 = fmul fast float %14354, 0x3FAFFE2000000000
  %14356 = fpext float %14355 to double
  %14357 = fadd fast double %14356, 5.000000e-01
  %14358 = fptoui double %14357 to i64
  %14359 = and i64 %14358, 4294967295
  tail call void @llvm.experimental.noalias.scope.decl(metadata !1015)
  %14360 = icmp eq i64 %14348, 0
  %14361 = select i1 %14360, i64 32, i64 %14348
  %14362 = load i32, ptr %14341, align 8, !tbaa !91, !noalias !1018
  br label %14363

14363:                                            ; preds = %14405, %14347
  %14364 = phi i32 [ %14362, %14347 ], [ %14406, %14405 ]
  %14365 = phi i64 [ %14361, %14347 ], [ %14407, %14405 ]
  %14366 = phi i64 [ 12, %14347 ], [ %14379, %14405 ]
  %14367 = phi ptr [ %14351, %14347 ], [ %14408, %14405 ]
  %14368 = tail call i64 @llvm.umin.i64(i64 %14366, i64 %14365)
  %14369 = sub nsw i64 12, %14366
  %14370 = lshr i64 %14359, %14369
  %14371 = getelementptr inbounds i32, ptr %14346, i64 %14368
  %14372 = load i32, ptr %14371, align 4, !tbaa !93, !noalias !1015
  %14373 = zext i32 %14372 to i64
  %14374 = and i64 %14370, %14373
  %14375 = sub i64 32, %14365
  %14376 = shl i64 %14374, %14375
  %14377 = trunc i64 %14376 to i32
  %14378 = or i32 %14364, %14377
  store i32 %14378, ptr %14341, align 8, !tbaa !91, !noalias !1018
  %14379 = sub nsw i64 %14366, %14368
  %14380 = sub i64 %14365, %14368
  %14381 = icmp ugt i64 %14365, %14366
  br i1 %14381, label %14405, label %14382

14382:                                            ; preds = %14363
  %14383 = load i32, ptr %14342, align 8, !tbaa !51, !noalias !1018
  %14384 = icmp eq i32 %14383, 1
  %14385 = lshr i32 %14378, 16
  br i1 %14384, label %14386, label %14389

14386:                                            ; preds = %14382
  %14387 = lshr i32 %14378, 8
  %14388 = lshr i32 %14378, 24
  br label %14392

14389:                                            ; preds = %14382
  %14390 = lshr i32 %14378, 24
  %14391 = lshr i32 %14378, 8
  br label %14392

14392:                                            ; preds = %14389, %14386
  %14393 = phi i32 [ %14378, %14386 ], [ %14390, %14389 ]
  %14394 = phi i32 [ %14387, %14386 ], [ %14385, %14389 ]
  %14395 = phi i32 [ %14385, %14386 ], [ %14391, %14389 ]
  %14396 = phi i32 [ %14388, %14386 ], [ %14378, %14389 ]
  %14397 = trunc i32 %14396 to i8
  %14398 = trunc i32 %14395 to i8
  %14399 = trunc i32 %14394 to i8
  %14400 = trunc i32 %14393 to i8
  store i8 %14400, ptr %14367, align 1, !alias.scope !1019, !noalias !979
  %14401 = getelementptr inbounds i8, ptr %14367, i64 1
  store i8 %14399, ptr %14401, align 1, !alias.scope !1019, !noalias !979
  %14402 = getelementptr inbounds i8, ptr %14367, i64 2
  store i8 %14398, ptr %14402, align 1, !alias.scope !1019, !noalias !979
  %14403 = getelementptr inbounds i8, ptr %14367, i64 3
  store i8 %14397, ptr %14403, align 1, !alias.scope !1019, !noalias !979
  %14404 = getelementptr inbounds i8, ptr %14367, i64 4
  store i32 0, ptr %14341, align 8, !tbaa !91, !noalias !1018
  br label %14405

14405:                                            ; preds = %14392, %14363
  %14406 = phi i32 [ 0, %14392 ], [ %14378, %14363 ]
  %14407 = phi i64 [ 32, %14392 ], [ %14380, %14363 ]
  %14408 = phi ptr [ %14404, %14392 ], [ %14367, %14363 ]
  %14409 = icmp sgt i64 %14379, 0
  br i1 %14409, label %14363, label %14410, !llvm.loop !95

14410:                                            ; preds = %14405
  %14411 = getelementptr inbounds %struct._PixelPacket, ptr %14349, i64 0, i32 1
  %14412 = load i16, ptr %14411, align 2, !tbaa !30, !alias.scope !979, !noalias !982
  %14413 = uitofp i16 %14412 to float
  %14414 = fmul fast float %14413, 0x3FAFFE2000000000
  %14415 = fpext float %14414 to double
  %14416 = fadd fast double %14415, 5.000000e-01
  %14417 = fptoui double %14416 to i64
  %14418 = and i64 %14417, 4294967295
  tail call void @llvm.experimental.noalias.scope.decl(metadata !1020)
  %14419 = icmp eq i64 %14407, 0
  br i1 %14419, label %14420, label %14421

14420:                                            ; preds = %14410
  store i64 32, ptr %14339, align 8, !tbaa !69, !noalias !1023
  br label %14421

14421:                                            ; preds = %14410, %14420
  %14422 = phi i64 [ 32, %14420 ], [ %14407, %14410 ]
  %14423 = load i32, ptr %14341, align 8, !tbaa !91, !noalias !1023
  br label %14424

14424:                                            ; preds = %14466, %14421
  %14425 = phi i32 [ %14423, %14421 ], [ %14467, %14466 ]
  %14426 = phi i64 [ %14422, %14421 ], [ %14468, %14466 ]
  %14427 = phi i64 [ 12, %14421 ], [ %14440, %14466 ]
  %14428 = phi ptr [ %14408, %14421 ], [ %14469, %14466 ]
  %14429 = tail call i64 @llvm.umin.i64(i64 %14427, i64 %14426)
  %14430 = sub nsw i64 12, %14427
  %14431 = lshr i64 %14418, %14430
  %14432 = getelementptr inbounds i32, ptr %14346, i64 %14429
  %14433 = load i32, ptr %14432, align 4, !tbaa !93, !noalias !1020
  %14434 = zext i32 %14433 to i64
  %14435 = and i64 %14431, %14434
  %14436 = sub i64 32, %14426
  %14437 = shl i64 %14435, %14436
  %14438 = trunc i64 %14437 to i32
  %14439 = or i32 %14425, %14438
  store i32 %14439, ptr %14341, align 8, !tbaa !91, !noalias !1023
  %14440 = sub nsw i64 %14427, %14429
  %14441 = sub i64 %14426, %14429
  %14442 = icmp ugt i64 %14426, %14427
  br i1 %14442, label %14466, label %14443

14443:                                            ; preds = %14424
  %14444 = load i32, ptr %14342, align 8, !tbaa !51, !noalias !1023
  %14445 = icmp eq i32 %14444, 1
  %14446 = lshr i32 %14439, 16
  br i1 %14445, label %14447, label %14450

14447:                                            ; preds = %14443
  %14448 = lshr i32 %14439, 8
  %14449 = lshr i32 %14439, 24
  br label %14453

14450:                                            ; preds = %14443
  %14451 = lshr i32 %14439, 24
  %14452 = lshr i32 %14439, 8
  br label %14453

14453:                                            ; preds = %14450, %14447
  %14454 = phi i32 [ %14439, %14447 ], [ %14451, %14450 ]
  %14455 = phi i32 [ %14448, %14447 ], [ %14446, %14450 ]
  %14456 = phi i32 [ %14446, %14447 ], [ %14452, %14450 ]
  %14457 = phi i32 [ %14449, %14447 ], [ %14439, %14450 ]
  %14458 = trunc i32 %14457 to i8
  %14459 = trunc i32 %14456 to i8
  %14460 = trunc i32 %14455 to i8
  %14461 = trunc i32 %14454 to i8
  store i8 %14461, ptr %14428, align 1, !alias.scope !1024, !noalias !979
  %14462 = getelementptr inbounds i8, ptr %14428, i64 1
  store i8 %14460, ptr %14462, align 1, !alias.scope !1024, !noalias !979
  %14463 = getelementptr inbounds i8, ptr %14428, i64 2
  store i8 %14459, ptr %14463, align 1, !alias.scope !1024, !noalias !979
  %14464 = getelementptr inbounds i8, ptr %14428, i64 3
  store i8 %14458, ptr %14464, align 1, !alias.scope !1024, !noalias !979
  %14465 = getelementptr inbounds i8, ptr %14428, i64 4
  store i32 0, ptr %14341, align 8, !tbaa !91, !noalias !1023
  br label %14466

14466:                                            ; preds = %14453, %14424
  %14467 = phi i32 [ 0, %14453 ], [ %14439, %14424 ]
  %14468 = phi i64 [ 32, %14453 ], [ %14441, %14424 ]
  %14469 = phi ptr [ %14465, %14453 ], [ %14428, %14424 ]
  %14470 = icmp sgt i64 %14440, 0
  br i1 %14470, label %14424, label %14471, !llvm.loop !95

14471:                                            ; preds = %14466
  %14472 = load i16, ptr %14349, align 2, !tbaa !31, !alias.scope !979, !noalias !982
  %14473 = uitofp i16 %14472 to float
  %14474 = fmul fast float %14473, 0x3FAFFE2000000000
  %14475 = fpext float %14474 to double
  %14476 = fadd fast double %14475, 5.000000e-01
  %14477 = fptoui double %14476 to i64
  %14478 = and i64 %14477, 4294967295
  tail call void @llvm.experimental.noalias.scope.decl(metadata !1025)
  %14479 = icmp eq i64 %14468, 0
  %14480 = select i1 %14479, i64 32, i64 %14468
  %14481 = load i32, ptr %14341, align 8, !tbaa !91, !noalias !1028
  br label %14482

14482:                                            ; preds = %14524, %14471
  %14483 = phi i32 [ %14481, %14471 ], [ %14525, %14524 ]
  %14484 = phi i64 [ %14480, %14471 ], [ %14526, %14524 ]
  %14485 = phi i64 [ 12, %14471 ], [ %14498, %14524 ]
  %14486 = phi ptr [ %14469, %14471 ], [ %14527, %14524 ]
  %14487 = tail call i64 @llvm.umin.i64(i64 %14485, i64 %14484)
  %14488 = sub nsw i64 12, %14485
  %14489 = lshr i64 %14478, %14488
  %14490 = getelementptr inbounds i32, ptr %14346, i64 %14487
  %14491 = load i32, ptr %14490, align 4, !tbaa !93, !noalias !1025
  %14492 = zext i32 %14491 to i64
  %14493 = and i64 %14489, %14492
  %14494 = sub i64 32, %14484
  %14495 = shl i64 %14493, %14494
  %14496 = trunc i64 %14495 to i32
  %14497 = or i32 %14483, %14496
  store i32 %14497, ptr %14341, align 8, !tbaa !91, !noalias !1028
  %14498 = sub nsw i64 %14485, %14487
  %14499 = sub i64 %14484, %14487
  %14500 = icmp ugt i64 %14484, %14485
  br i1 %14500, label %14524, label %14501

14501:                                            ; preds = %14482
  %14502 = load i32, ptr %14342, align 8, !tbaa !51, !noalias !1028
  %14503 = icmp eq i32 %14502, 1
  %14504 = lshr i32 %14497, 16
  br i1 %14503, label %14505, label %14508

14505:                                            ; preds = %14501
  %14506 = lshr i32 %14497, 8
  %14507 = lshr i32 %14497, 24
  br label %14511

14508:                                            ; preds = %14501
  %14509 = lshr i32 %14497, 24
  %14510 = lshr i32 %14497, 8
  br label %14511

14511:                                            ; preds = %14508, %14505
  %14512 = phi i32 [ %14497, %14505 ], [ %14509, %14508 ]
  %14513 = phi i32 [ %14506, %14505 ], [ %14504, %14508 ]
  %14514 = phi i32 [ %14504, %14505 ], [ %14510, %14508 ]
  %14515 = phi i32 [ %14507, %14505 ], [ %14497, %14508 ]
  %14516 = trunc i32 %14515 to i8
  %14517 = trunc i32 %14514 to i8
  %14518 = trunc i32 %14513 to i8
  %14519 = trunc i32 %14512 to i8
  store i8 %14519, ptr %14486, align 1, !alias.scope !1029, !noalias !979
  %14520 = getelementptr inbounds i8, ptr %14486, i64 1
  store i8 %14518, ptr %14520, align 1, !alias.scope !1029, !noalias !979
  %14521 = getelementptr inbounds i8, ptr %14486, i64 2
  store i8 %14517, ptr %14521, align 1, !alias.scope !1029, !noalias !979
  %14522 = getelementptr inbounds i8, ptr %14486, i64 3
  store i8 %14516, ptr %14522, align 1, !alias.scope !1029, !noalias !979
  %14523 = getelementptr inbounds i8, ptr %14486, i64 4
  store i32 0, ptr %14341, align 8, !tbaa !91, !noalias !1028
  br label %14524

14524:                                            ; preds = %14511, %14482
  %14525 = phi i32 [ 0, %14511 ], [ %14497, %14482 ]
  %14526 = phi i64 [ 32, %14511 ], [ %14499, %14482 ]
  %14527 = phi ptr [ %14523, %14511 ], [ %14486, %14482 ]
  %14528 = icmp sgt i64 %14498, 0
  br i1 %14528, label %14482, label %14529, !llvm.loop !95

14529:                                            ; preds = %14524
  store i64 %14526, ptr %14339, align 8, !tbaa !69, !noalias !1028
  %14530 = getelementptr inbounds %struct._PixelPacket, ptr %14349, i64 1
  %14531 = getelementptr inbounds i8, ptr %14527, i64 %14345
  %14532 = add nuw nsw i64 %14350, 1
  %14533 = icmp eq i64 %14532, %164
  br i1 %14533, label %17787, label %14347, !llvm.loop !1030

14534:                                            ; preds = %14645, %14332
  %14535 = phi i64 [ %14335, %14332 ], [ %14641, %14645 ]
  %14536 = phi ptr [ %166, %14332 ], [ %14646, %14645 ]
  %14537 = phi i64 [ 0, %14332 ], [ %14648, %14645 ]
  %14538 = phi ptr [ %88, %14332 ], [ %14647, %14645 ]
  %14539 = getelementptr inbounds %struct._PixelPacket, ptr %14536, i64 0, i32 2
  %14540 = load i16, ptr %14539, align 2, !tbaa !29, !alias.scope !979, !noalias !982
  %14541 = uitofp i16 %14540 to float
  %14542 = fmul fast float %14541, 0x3FAFFE2000000000
  %14543 = fpext float %14542 to double
  %14544 = fadd fast double %14543, 5.000000e-01
  %14545 = fptoui double %14544 to i64
  %14546 = and i64 %14545, 4294967295
  %14547 = icmp eq i64 %14535, 0
  %14548 = select i1 %14547, i64 8, i64 %14535
  br label %14549

14549:                                            ; preds = %14534, %14559
  %14550 = phi i64 [ %14570, %14559 ], [ %14548, %14534 ]
  %14551 = phi i64 [ %14555, %14559 ], [ 12, %14534 ]
  %14552 = phi ptr [ %14572, %14559 ], [ %14538, %14534 ]
  %14553 = tail call i64 @llvm.umin.i64(i64 %14551, i64 %14550)
  %14554 = sub nsw i64 %14551, %14553
  %14555 = tail call i64 @llvm.smax.i64(i64 %14554, i64 0)
  %14556 = icmp eq i64 %14550, 8
  br i1 %14556, label %14559, label %14557

14557:                                            ; preds = %14549
  %14558 = load i8, ptr %14552, align 1, !tbaa !48, !alias.scope !1031, !noalias !979
  br label %14559

14559:                                            ; preds = %14557, %14549
  %14560 = phi i8 [ %14558, %14557 ], [ 0, %14549 ]
  %14561 = sub i64 %14550, %14553
  %14562 = lshr i64 %14546, %14555
  %14563 = shl nsw i64 -1, %14553
  %14564 = xor i64 %14563, -1
  %14565 = and i64 %14562, %14564
  %14566 = shl i64 %14565, %14561
  %14567 = trunc i64 %14566 to i8
  %14568 = or i8 %14560, %14567
  store i8 %14568, ptr %14552, align 1, !tbaa !48, !alias.scope !1031, !noalias !979
  %14569 = icmp ule i64 %14550, %14551
  %14570 = select i1 %14569, i64 8, i64 %14561
  %14571 = zext i1 %14569 to i64
  %14572 = getelementptr inbounds i8, ptr %14552, i64 %14571
  %14573 = icmp slt i64 %14554, 1
  br i1 %14573, label %14574, label %14549, !llvm.loop !75

14574:                                            ; preds = %14559
  %14575 = getelementptr inbounds %struct._PixelPacket, ptr %14536, i64 0, i32 1
  %14576 = load i16, ptr %14575, align 2, !tbaa !30, !alias.scope !979, !noalias !982
  %14577 = uitofp i16 %14576 to float
  %14578 = fmul fast float %14577, 0x3FAFFE2000000000
  %14579 = fpext float %14578 to double
  %14580 = fadd fast double %14579, 5.000000e-01
  %14581 = fptoui double %14580 to i64
  %14582 = and i64 %14581, 4294967295
  %14583 = icmp eq i64 %14570, 0
  %14584 = select i1 %14583, i64 8, i64 %14570
  br label %14585

14585:                                            ; preds = %14574, %14595
  %14586 = phi i64 [ %14606, %14595 ], [ %14584, %14574 ]
  %14587 = phi i64 [ %14591, %14595 ], [ 12, %14574 ]
  %14588 = phi ptr [ %14608, %14595 ], [ %14572, %14574 ]
  %14589 = tail call i64 @llvm.umin.i64(i64 %14587, i64 %14586)
  %14590 = sub nsw i64 %14587, %14589
  %14591 = tail call i64 @llvm.smax.i64(i64 %14590, i64 0)
  %14592 = icmp eq i64 %14586, 8
  br i1 %14592, label %14595, label %14593

14593:                                            ; preds = %14585
  %14594 = load i8, ptr %14588, align 1, !tbaa !48, !alias.scope !1034, !noalias !979
  br label %14595

14595:                                            ; preds = %14593, %14585
  %14596 = phi i8 [ %14594, %14593 ], [ 0, %14585 ]
  %14597 = sub i64 %14586, %14589
  %14598 = lshr i64 %14582, %14591
  %14599 = shl nsw i64 -1, %14589
  %14600 = xor i64 %14599, -1
  %14601 = and i64 %14598, %14600
  %14602 = shl i64 %14601, %14597
  %14603 = trunc i64 %14602 to i8
  %14604 = or i8 %14596, %14603
  store i8 %14604, ptr %14588, align 1, !tbaa !48, !alias.scope !1034, !noalias !979
  %14605 = icmp ule i64 %14586, %14587
  %14606 = select i1 %14605, i64 8, i64 %14597
  %14607 = zext i1 %14605 to i64
  %14608 = getelementptr inbounds i8, ptr %14588, i64 %14607
  %14609 = icmp slt i64 %14590, 1
  br i1 %14609, label %14610, label %14585, !llvm.loop !75

14610:                                            ; preds = %14595
  %14611 = load i16, ptr %14536, align 2, !tbaa !31, !alias.scope !979, !noalias !982
  %14612 = uitofp i16 %14611 to float
  %14613 = fmul fast float %14612, 0x3FAFFE2000000000
  %14614 = fpext float %14613 to double
  %14615 = fadd fast double %14614, 5.000000e-01
  %14616 = fptoui double %14615 to i64
  %14617 = and i64 %14616, 4294967295
  tail call void @llvm.experimental.noalias.scope.decl(metadata !1037)
  %14618 = icmp eq i64 %14606, 0
  %14619 = select i1 %14618, i64 8, i64 %14606
  br label %14620

14620:                                            ; preds = %14610, %14630
  %14621 = phi i64 [ %14641, %14630 ], [ %14619, %14610 ]
  %14622 = phi i64 [ %14626, %14630 ], [ 12, %14610 ]
  %14623 = phi ptr [ %14643, %14630 ], [ %14608, %14610 ]
  %14624 = tail call i64 @llvm.umin.i64(i64 %14622, i64 %14621)
  %14625 = sub nsw i64 %14622, %14624
  %14626 = tail call i64 @llvm.smax.i64(i64 %14625, i64 0)
  %14627 = icmp eq i64 %14621, 8
  br i1 %14627, label %14630, label %14628

14628:                                            ; preds = %14620
  %14629 = load i8, ptr %14623, align 1, !tbaa !48, !alias.scope !1040, !noalias !979
  br label %14630

14630:                                            ; preds = %14628, %14620
  %14631 = phi i8 [ %14629, %14628 ], [ 0, %14620 ]
  %14632 = sub i64 %14621, %14624
  %14633 = lshr i64 %14617, %14626
  %14634 = shl nsw i64 -1, %14624
  %14635 = xor i64 %14634, -1
  %14636 = and i64 %14633, %14635
  %14637 = shl i64 %14636, %14632
  %14638 = trunc i64 %14637 to i8
  %14639 = or i8 %14631, %14638
  store i8 %14639, ptr %14623, align 1, !tbaa !48, !alias.scope !1040, !noalias !979
  %14640 = icmp ule i64 %14621, %14622
  %14641 = select i1 %14640, i64 8, i64 %14632
  %14642 = zext i1 %14640 to i64
  %14643 = getelementptr inbounds i8, ptr %14623, i64 %14642
  %14644 = icmp slt i64 %14625, 1
  br i1 %14644, label %14645, label %14620, !llvm.loop !75

14645:                                            ; preds = %14630
  %14646 = getelementptr inbounds %struct._PixelPacket, ptr %14536, i64 1
  %14647 = getelementptr inbounds i8, ptr %14643, i64 %14336
  %14648 = add nuw nsw i64 %14537, 1
  %14649 = icmp eq i64 %14648, %164
  br i1 %14649, label %17112, label %14534, !llvm.loop !1041

14650:                                            ; preds = %13799
  %14651 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 2
  %14652 = load i32, ptr %14651, align 8, !tbaa !50, !noalias !984
  %14653 = icmp eq i32 %14652, 1
  %14654 = icmp sgt i64 %164, 0
  br i1 %14653, label %14662, label %14655

14655:                                            ; preds = %14650
  br i1 %14654, label %14656, label %17787

14656:                                            ; preds = %14655
  %14657 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %14658 = load i32, ptr %14657, align 8, !tbaa !51, !noalias !984
  %14659 = icmp eq i32 %14658, 1
  %14660 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %14661 = load i64, ptr %14660, align 8, !tbaa !47, !noalias !984
  br label %14898

14662:                                            ; preds = %14650
  br i1 %14654, label %14663, label %17787

14663:                                            ; preds = %14662
  %14664 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %14665 = load i32, ptr %14664, align 8, !tbaa !51, !noalias !984
  %14666 = icmp eq i32 %14665, 1
  %14667 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %14668 = load i64, ptr %14667, align 8, !tbaa !47, !noalias !984
  br label %14669

14669:                                            ; preds = %14885, %14663
  %14670 = phi ptr [ %166, %14663 ], [ %14894, %14885 ]
  %14671 = phi i64 [ 0, %14663 ], [ %14896, %14885 ]
  %14672 = phi ptr [ %88, %14663 ], [ %14895, %14885 ]
  %14673 = getelementptr inbounds %struct._PixelPacket, ptr %14670, i64 0, i32 2
  %14674 = load i16, ptr %14673, align 2, !tbaa !29, !alias.scope !979, !noalias !982
  %14675 = uitofp i16 %14674 to double
  %14676 = fmul fast double %14675, 0x3EF0001000100010
  %14677 = fptrunc double %14676 to float
  %14678 = bitcast float %14677 to i32
  %14679 = lshr i32 %14678, 16
  %14680 = and i32 %14679, 32768
  %14681 = lshr i32 %14678, 23
  %14682 = and i32 %14681, 255
  %14683 = add nsw i32 %14682, -112
  %14684 = and i32 %14678, 8388607
  %14685 = icmp ult i32 %14682, 113
  br i1 %14685, label %14686, label %14703

14686:                                            ; preds = %14669
  %14687 = icmp ult i32 %14682, 102
  br i1 %14687, label %14700, label %14688

14688:                                            ; preds = %14686
  %14689 = or i32 %14684, 8388608
  %14690 = sub nuw nsw i32 126, %14682
  %14691 = sub nuw nsw i32 125, %14682
  %14692 = shl nsw i32 -1, %14691
  %14693 = xor i32 %14692, -1
  %14694 = add nuw nsw i32 %14689, %14693
  %14695 = lshr i32 %14689, %14690
  %14696 = and i32 %14695, 1
  %14697 = add nuw nsw i32 %14694, %14696
  %14698 = lshr i32 %14697, %14690
  %14699 = or i32 %14698, %14680
  br label %14700

14700:                                            ; preds = %14688, %14686
  %14701 = phi i32 [ %14699, %14688 ], [ %14680, %14686 ]
  %14702 = trunc i32 %14701 to i16
  br label %14738

14703:                                            ; preds = %14669
  %14704 = icmp eq i32 %14683, 143
  br i1 %14704, label %14705, label %14718

14705:                                            ; preds = %14703
  %14706 = icmp eq i32 %14684, 0
  br i1 %14706, label %14707, label %14710

14707:                                            ; preds = %14705
  %14708 = trunc i32 %14680 to i16
  %14709 = or i16 %14708, 31744
  br label %14738

14710:                                            ; preds = %14705
  %14711 = lshr i32 %14684, 13
  %14712 = icmp ult i32 %14684, 8192
  %14713 = zext i1 %14712 to i32
  %14714 = or i32 %14711, %14713
  %14715 = or i32 %14714, %14680
  %14716 = trunc i32 %14715 to i16
  %14717 = or i16 %14716, 31744
  br label %14738

14718:                                            ; preds = %14703
  %14719 = lshr i32 %14678, 13
  %14720 = and i32 %14719, 1
  %14721 = add nuw nsw i32 %14684, 4095
  %14722 = add nuw nsw i32 %14721, %14720
  %14723 = and i32 %14722, 8388608
  %14724 = icmp eq i32 %14723, 0
  %14725 = add nsw i32 %14682, -111
  %14726 = select i1 %14724, i32 %14683, i32 %14725
  %14727 = icmp ugt i32 %14726, 30
  br i1 %14727, label %14728, label %14731

14728:                                            ; preds = %14718
  %14729 = trunc i32 %14680 to i16
  %14730 = or i16 %14729, 31744
  br label %14738

14731:                                            ; preds = %14718
  %14732 = lshr i32 %14722, 13
  %14733 = shl nuw nsw i32 %14726, 10
  %14734 = select i1 %14724, i32 %14732, i32 0
  %14735 = or i32 %14734, %14733
  %14736 = or i32 %14735, %14680
  %14737 = trunc i32 %14736 to i16
  br label %14738

14738:                                            ; preds = %14731, %14728, %14710, %14707, %14700
  %14739 = phi i16 [ %14702, %14700 ], [ %14709, %14707 ], [ %14717, %14710 ], [ %14730, %14728 ], [ %14737, %14731 ]
  %14740 = lshr i16 %14739, 8
  %14741 = select i1 %14666, i16 %14739, i16 %14740
  %14742 = select i1 %14666, i16 %14740, i16 %14739
  %14743 = trunc i16 %14742 to i8
  %14744 = trunc i16 %14741 to i8
  store i8 %14744, ptr %14672, align 1, !alias.scope !982, !noalias !979
  %14745 = getelementptr inbounds i8, ptr %14672, i64 1
  store i8 %14743, ptr %14745, align 1, !alias.scope !982, !noalias !979
  %14746 = getelementptr inbounds i8, ptr %14672, i64 2
  %14747 = getelementptr inbounds %struct._PixelPacket, ptr %14670, i64 0, i32 1
  %14748 = load i16, ptr %14747, align 2, !tbaa !30, !alias.scope !979, !noalias !982
  %14749 = uitofp i16 %14748 to double
  %14750 = fmul fast double %14749, 0x3EF0001000100010
  %14751 = fptrunc double %14750 to float
  %14752 = bitcast float %14751 to i32
  %14753 = lshr i32 %14752, 16
  %14754 = and i32 %14753, 32768
  %14755 = lshr i32 %14752, 23
  %14756 = and i32 %14755, 255
  %14757 = add nsw i32 %14756, -112
  %14758 = and i32 %14752, 8388607
  %14759 = icmp ult i32 %14756, 113
  br i1 %14759, label %14760, label %14777

14760:                                            ; preds = %14738
  %14761 = icmp ult i32 %14756, 102
  br i1 %14761, label %14774, label %14762

14762:                                            ; preds = %14760
  %14763 = or i32 %14758, 8388608
  %14764 = sub nuw nsw i32 126, %14756
  %14765 = sub nuw nsw i32 125, %14756
  %14766 = shl nsw i32 -1, %14765
  %14767 = xor i32 %14766, -1
  %14768 = add nuw nsw i32 %14763, %14767
  %14769 = lshr i32 %14763, %14764
  %14770 = and i32 %14769, 1
  %14771 = add nuw nsw i32 %14768, %14770
  %14772 = lshr i32 %14771, %14764
  %14773 = or i32 %14772, %14754
  br label %14774

14774:                                            ; preds = %14762, %14760
  %14775 = phi i32 [ %14773, %14762 ], [ %14754, %14760 ]
  %14776 = trunc i32 %14775 to i16
  br label %14812

14777:                                            ; preds = %14738
  %14778 = icmp eq i32 %14757, 143
  br i1 %14778, label %14779, label %14792

14779:                                            ; preds = %14777
  %14780 = icmp eq i32 %14758, 0
  br i1 %14780, label %14781, label %14784

14781:                                            ; preds = %14779
  %14782 = trunc i32 %14754 to i16
  %14783 = or i16 %14782, 31744
  br label %14812

14784:                                            ; preds = %14779
  %14785 = lshr i32 %14758, 13
  %14786 = icmp ult i32 %14758, 8192
  %14787 = zext i1 %14786 to i32
  %14788 = or i32 %14785, %14787
  %14789 = or i32 %14788, %14754
  %14790 = trunc i32 %14789 to i16
  %14791 = or i16 %14790, 31744
  br label %14812

14792:                                            ; preds = %14777
  %14793 = lshr i32 %14752, 13
  %14794 = and i32 %14793, 1
  %14795 = add nuw nsw i32 %14758, 4095
  %14796 = add nuw nsw i32 %14795, %14794
  %14797 = and i32 %14796, 8388608
  %14798 = icmp eq i32 %14797, 0
  %14799 = add nsw i32 %14756, -111
  %14800 = select i1 %14798, i32 %14757, i32 %14799
  %14801 = icmp ugt i32 %14800, 30
  br i1 %14801, label %14802, label %14805

14802:                                            ; preds = %14792
  %14803 = trunc i32 %14754 to i16
  %14804 = or i16 %14803, 31744
  br label %14812

14805:                                            ; preds = %14792
  %14806 = lshr i32 %14796, 13
  %14807 = shl nuw nsw i32 %14800, 10
  %14808 = select i1 %14798, i32 %14806, i32 0
  %14809 = or i32 %14808, %14807
  %14810 = or i32 %14809, %14754
  %14811 = trunc i32 %14810 to i16
  br label %14812

14812:                                            ; preds = %14805, %14802, %14784, %14781, %14774
  %14813 = phi i16 [ %14776, %14774 ], [ %14783, %14781 ], [ %14791, %14784 ], [ %14804, %14802 ], [ %14811, %14805 ]
  %14814 = lshr i16 %14813, 8
  %14815 = select i1 %14666, i16 %14813, i16 %14814
  %14816 = select i1 %14666, i16 %14814, i16 %14813
  %14817 = trunc i16 %14816 to i8
  %14818 = trunc i16 %14815 to i8
  store i8 %14818, ptr %14746, align 1, !alias.scope !982, !noalias !979
  %14819 = getelementptr inbounds i8, ptr %14672, i64 3
  store i8 %14817, ptr %14819, align 1, !alias.scope !982, !noalias !979
  %14820 = getelementptr inbounds i8, ptr %14672, i64 4
  %14821 = load i16, ptr %14670, align 2, !tbaa !31, !alias.scope !979, !noalias !982
  %14822 = uitofp i16 %14821 to double
  %14823 = fmul fast double %14822, 0x3EF0001000100010
  %14824 = fptrunc double %14823 to float
  %14825 = bitcast float %14824 to i32
  %14826 = lshr i32 %14825, 16
  %14827 = and i32 %14826, 32768
  %14828 = lshr i32 %14825, 23
  %14829 = and i32 %14828, 255
  %14830 = add nsw i32 %14829, -112
  %14831 = and i32 %14825, 8388607
  %14832 = icmp ult i32 %14829, 113
  br i1 %14832, label %14833, label %14850

14833:                                            ; preds = %14812
  %14834 = icmp ult i32 %14829, 102
  br i1 %14834, label %14847, label %14835

14835:                                            ; preds = %14833
  %14836 = or i32 %14831, 8388608
  %14837 = sub nuw nsw i32 126, %14829
  %14838 = sub nuw nsw i32 125, %14829
  %14839 = shl nsw i32 -1, %14838
  %14840 = xor i32 %14839, -1
  %14841 = add nuw nsw i32 %14836, %14840
  %14842 = lshr i32 %14836, %14837
  %14843 = and i32 %14842, 1
  %14844 = add nuw nsw i32 %14841, %14843
  %14845 = lshr i32 %14844, %14837
  %14846 = or i32 %14845, %14827
  br label %14847

14847:                                            ; preds = %14835, %14833
  %14848 = phi i32 [ %14846, %14835 ], [ %14827, %14833 ]
  %14849 = trunc i32 %14848 to i16
  br label %14885

14850:                                            ; preds = %14812
  %14851 = icmp eq i32 %14830, 143
  br i1 %14851, label %14852, label %14865

14852:                                            ; preds = %14850
  %14853 = icmp eq i32 %14831, 0
  br i1 %14853, label %14854, label %14857

14854:                                            ; preds = %14852
  %14855 = trunc i32 %14827 to i16
  %14856 = or i16 %14855, 31744
  br label %14885

14857:                                            ; preds = %14852
  %14858 = lshr i32 %14831, 13
  %14859 = icmp ult i32 %14831, 8192
  %14860 = zext i1 %14859 to i32
  %14861 = or i32 %14858, %14860
  %14862 = or i32 %14861, %14827
  %14863 = trunc i32 %14862 to i16
  %14864 = or i16 %14863, 31744
  br label %14885

14865:                                            ; preds = %14850
  %14866 = lshr i32 %14825, 13
  %14867 = and i32 %14866, 1
  %14868 = add nuw nsw i32 %14831, 4095
  %14869 = add nuw nsw i32 %14868, %14867
  %14870 = and i32 %14869, 8388608
  %14871 = icmp eq i32 %14870, 0
  %14872 = add nsw i32 %14829, -111
  %14873 = select i1 %14871, i32 %14830, i32 %14872
  %14874 = icmp ugt i32 %14873, 30
  br i1 %14874, label %14875, label %14878

14875:                                            ; preds = %14865
  %14876 = trunc i32 %14827 to i16
  %14877 = or i16 %14876, 31744
  br label %14885

14878:                                            ; preds = %14865
  %14879 = lshr i32 %14869, 13
  %14880 = shl nuw nsw i32 %14873, 10
  %14881 = select i1 %14871, i32 %14879, i32 0
  %14882 = or i32 %14881, %14880
  %14883 = or i32 %14882, %14827
  %14884 = trunc i32 %14883 to i16
  br label %14885

14885:                                            ; preds = %14878, %14875, %14857, %14854, %14847
  %14886 = phi i16 [ %14849, %14847 ], [ %14856, %14854 ], [ %14864, %14857 ], [ %14877, %14875 ], [ %14884, %14878 ]
  %14887 = lshr i16 %14886, 8
  %14888 = select i1 %14666, i16 %14886, i16 %14887
  %14889 = select i1 %14666, i16 %14887, i16 %14886
  %14890 = trunc i16 %14889 to i8
  %14891 = trunc i16 %14888 to i8
  store i8 %14891, ptr %14820, align 1, !alias.scope !982, !noalias !979
  %14892 = getelementptr inbounds i8, ptr %14672, i64 5
  store i8 %14890, ptr %14892, align 1, !alias.scope !982, !noalias !979
  %14893 = getelementptr inbounds i8, ptr %14672, i64 6
  %14894 = getelementptr inbounds %struct._PixelPacket, ptr %14670, i64 1
  %14895 = getelementptr inbounds i8, ptr %14893, i64 %14668
  %14896 = add nuw nsw i64 %14671, 1
  %14897 = icmp eq i64 %14896, %164
  br i1 %14897, label %17787, label %14669, !llvm.loop !1042

14898:                                            ; preds = %14898, %14656
  %14899 = phi ptr [ %166, %14656 ], [ %14928, %14898 ]
  %14900 = phi i64 [ 0, %14656 ], [ %14930, %14898 ]
  %14901 = phi ptr [ %88, %14656 ], [ %14929, %14898 ]
  %14902 = getelementptr inbounds %struct._PixelPacket, ptr %14899, i64 0, i32 2
  %14903 = load i16, ptr %14902, align 2, !tbaa !29, !alias.scope !979, !noalias !982
  %14904 = lshr i16 %14903, 8
  %14905 = select i1 %14659, i16 %14903, i16 %14904
  %14906 = select i1 %14659, i16 %14904, i16 %14903
  %14907 = trunc i16 %14906 to i8
  %14908 = trunc i16 %14905 to i8
  store i8 %14908, ptr %14901, align 1, !alias.scope !982, !noalias !979
  %14909 = getelementptr inbounds i8, ptr %14901, i64 1
  store i8 %14907, ptr %14909, align 1, !alias.scope !982, !noalias !979
  %14910 = getelementptr inbounds i8, ptr %14901, i64 2
  %14911 = getelementptr inbounds %struct._PixelPacket, ptr %14899, i64 0, i32 1
  %14912 = load i16, ptr %14911, align 2, !tbaa !30, !alias.scope !979, !noalias !982
  %14913 = lshr i16 %14912, 8
  %14914 = select i1 %14659, i16 %14912, i16 %14913
  %14915 = select i1 %14659, i16 %14913, i16 %14912
  %14916 = trunc i16 %14915 to i8
  %14917 = trunc i16 %14914 to i8
  store i8 %14917, ptr %14910, align 1, !alias.scope !982, !noalias !979
  %14918 = getelementptr inbounds i8, ptr %14901, i64 3
  store i8 %14916, ptr %14918, align 1, !alias.scope !982, !noalias !979
  %14919 = getelementptr inbounds i8, ptr %14901, i64 4
  %14920 = load i16, ptr %14899, align 2, !tbaa !31, !alias.scope !979, !noalias !982
  %14921 = lshr i16 %14920, 8
  %14922 = select i1 %14659, i16 %14920, i16 %14921
  %14923 = select i1 %14659, i16 %14921, i16 %14920
  %14924 = trunc i16 %14923 to i8
  %14925 = trunc i16 %14922 to i8
  store i8 %14925, ptr %14919, align 1, !alias.scope !982, !noalias !979
  %14926 = getelementptr inbounds i8, ptr %14901, i64 5
  store i8 %14924, ptr %14926, align 1, !alias.scope !982, !noalias !979
  %14927 = getelementptr inbounds i8, ptr %14901, i64 6
  %14928 = getelementptr inbounds %struct._PixelPacket, ptr %14899, i64 1
  %14929 = getelementptr inbounds i8, ptr %14927, i64 %14661
  %14930 = add nuw nsw i64 %14900, 1
  %14931 = icmp eq i64 %14930, %164
  br i1 %14931, label %17787, label %14898, !llvm.loop !1043

14932:                                            ; preds = %13799
  %14933 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 2
  %14934 = load i32, ptr %14933, align 8, !tbaa !50, !noalias !984
  %14935 = icmp eq i32 %14934, 1
  %14936 = icmp sgt i64 %164, 0
  br i1 %14935, label %14944, label %14937

14937:                                            ; preds = %14932
  br i1 %14936, label %14938, label %17787

14938:                                            ; preds = %14937
  %14939 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %14940 = load i32, ptr %14939, align 8, !tbaa !51, !noalias !984
  %14941 = icmp eq i32 %14940, 1
  %14942 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %14943 = load i64, ptr %14942, align 8, !tbaa !47, !noalias !984
  br label %15045

14944:                                            ; preds = %14932
  br i1 %14936, label %14945, label %17787

14945:                                            ; preds = %14944
  %14946 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 14
  %14947 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 3
  %14948 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %14949 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  br label %14950

14950:                                            ; preds = %15031, %14945
  %14951 = phi ptr [ %166, %14945 ], [ %15040, %15031 ]
  %14952 = phi i64 [ 0, %14945 ], [ %15043, %15031 ]
  %14953 = phi ptr [ %88, %14945 ], [ %15042, %15031 ]
  %14954 = getelementptr inbounds %struct._PixelPacket, ptr %14951, i64 0, i32 2
  %14955 = load i16, ptr %14954, align 2, !tbaa !29, !alias.scope !979, !noalias !982
  call void @llvm.experimental.noalias.scope.decl(metadata !1044)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %20) #6, !noalias !1047
  %14956 = call ptr @ResetMagickMemory(ptr noundef nonnull %20, i32 noundef 0, i64 noundef 4) #6, !noalias !1044
  %14957 = uitofp i16 %14955 to double
  %14958 = load double, ptr %14946, align 8, !tbaa !59, !noalias !1047
  %14959 = fmul fast double %14958, %14957
  %14960 = load double, ptr %14947, align 8, !tbaa !60, !noalias !1047
  %14961 = fadd fast double %14959, %14960
  %14962 = fptrunc double %14961 to float
  %14963 = load i32, ptr %14948, align 8, !tbaa !51, !noalias !1047
  %14964 = icmp eq i32 %14963, 1
  %14965 = bitcast float %14962 to i32
  %14966 = lshr i32 %14965, 24
  %14967 = trunc i32 %14966 to i8
  %14968 = lshr i32 %14965, 16
  %14969 = trunc i32 %14968 to i8
  %14970 = lshr i32 %14965, 8
  %14971 = trunc i32 %14970 to i8
  %14972 = trunc i32 %14965 to i8
  br i1 %14964, label %14974, label %14973

14973:                                            ; preds = %14950
  br label %14974

14974:                                            ; preds = %14973, %14950
  %14975 = phi i8 [ %14967, %14973 ], [ %14972, %14950 ]
  %14976 = phi i8 [ %14969, %14973 ], [ %14971, %14950 ]
  %14977 = phi i8 [ %14971, %14973 ], [ %14969, %14950 ]
  %14978 = phi i8 [ %14972, %14973 ], [ %14967, %14950 ]
  store i8 %14975, ptr %14953, align 1, !alias.scope !1048, !noalias !979
  %14979 = getelementptr inbounds i8, ptr %14953, i64 1
  store i8 %14976, ptr %14979, align 1, !alias.scope !1048, !noalias !979
  %14980 = getelementptr inbounds i8, ptr %14953, i64 2
  store i8 %14977, ptr %14980, align 1, !alias.scope !1048, !noalias !979
  %14981 = getelementptr inbounds i8, ptr %14953, i64 3
  store i8 %14978, ptr %14981, align 1, !alias.scope !1048, !noalias !979
  %14982 = getelementptr inbounds i8, ptr %14953, i64 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %20) #6, !noalias !1047
  %14983 = getelementptr inbounds %struct._PixelPacket, ptr %14951, i64 0, i32 1
  %14984 = load i16, ptr %14983, align 2, !tbaa !30, !alias.scope !979, !noalias !982
  call void @llvm.experimental.noalias.scope.decl(metadata !1049)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %19) #6, !noalias !1052
  %14985 = call ptr @ResetMagickMemory(ptr noundef nonnull %19, i32 noundef 0, i64 noundef 4) #6, !noalias !1049
  %14986 = uitofp i16 %14984 to double
  %14987 = load double, ptr %14946, align 8, !tbaa !59, !noalias !1052
  %14988 = fmul fast double %14987, %14986
  %14989 = load double, ptr %14947, align 8, !tbaa !60, !noalias !1052
  %14990 = fadd fast double %14988, %14989
  %14991 = fptrunc double %14990 to float
  %14992 = load i32, ptr %14948, align 8, !tbaa !51, !noalias !1052
  %14993 = icmp eq i32 %14992, 1
  %14994 = bitcast float %14991 to i32
  %14995 = lshr i32 %14994, 24
  %14996 = trunc i32 %14995 to i8
  %14997 = lshr i32 %14994, 16
  %14998 = trunc i32 %14997 to i8
  %14999 = lshr i32 %14994, 8
  %15000 = trunc i32 %14999 to i8
  %15001 = trunc i32 %14994 to i8
  br i1 %14993, label %15003, label %15002

15002:                                            ; preds = %14974
  br label %15003

15003:                                            ; preds = %15002, %14974
  %15004 = phi i8 [ %14996, %15002 ], [ %15001, %14974 ]
  %15005 = phi i8 [ %14998, %15002 ], [ %15000, %14974 ]
  %15006 = phi i8 [ %15000, %15002 ], [ %14998, %14974 ]
  %15007 = phi i8 [ %15001, %15002 ], [ %14996, %14974 ]
  store i8 %15004, ptr %14982, align 1, !alias.scope !1053, !noalias !979
  %15008 = getelementptr inbounds i8, ptr %14953, i64 5
  store i8 %15005, ptr %15008, align 1, !alias.scope !1053, !noalias !979
  %15009 = getelementptr inbounds i8, ptr %14953, i64 6
  store i8 %15006, ptr %15009, align 1, !alias.scope !1053, !noalias !979
  %15010 = getelementptr inbounds i8, ptr %14953, i64 7
  store i8 %15007, ptr %15010, align 1, !alias.scope !1053, !noalias !979
  %15011 = getelementptr inbounds i8, ptr %14953, i64 8
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %19) #6, !noalias !1052
  %15012 = load i16, ptr %14951, align 2, !tbaa !31, !alias.scope !979, !noalias !982
  call void @llvm.experimental.noalias.scope.decl(metadata !1054)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %18) #6, !noalias !1057
  %15013 = call ptr @ResetMagickMemory(ptr noundef nonnull %18, i32 noundef 0, i64 noundef 4) #6, !noalias !1054
  %15014 = uitofp i16 %15012 to double
  %15015 = load double, ptr %14946, align 8, !tbaa !59, !noalias !1057
  %15016 = fmul fast double %15015, %15014
  %15017 = load double, ptr %14947, align 8, !tbaa !60, !noalias !1057
  %15018 = fadd fast double %15016, %15017
  %15019 = fptrunc double %15018 to float
  %15020 = load i32, ptr %14948, align 8, !tbaa !51, !noalias !1057
  %15021 = icmp eq i32 %15020, 1
  %15022 = bitcast float %15019 to i32
  %15023 = lshr i32 %15022, 24
  %15024 = trunc i32 %15023 to i8
  %15025 = lshr i32 %15022, 16
  %15026 = trunc i32 %15025 to i8
  %15027 = lshr i32 %15022, 8
  %15028 = trunc i32 %15027 to i8
  %15029 = trunc i32 %15022 to i8
  br i1 %15021, label %15031, label %15030

15030:                                            ; preds = %15003
  br label %15031

15031:                                            ; preds = %15030, %15003
  %15032 = phi i8 [ %15024, %15030 ], [ %15029, %15003 ]
  %15033 = phi i8 [ %15026, %15030 ], [ %15028, %15003 ]
  %15034 = phi i8 [ %15028, %15030 ], [ %15026, %15003 ]
  %15035 = phi i8 [ %15029, %15030 ], [ %15024, %15003 ]
  store i8 %15032, ptr %15011, align 1, !alias.scope !1058, !noalias !979
  %15036 = getelementptr inbounds i8, ptr %14953, i64 9
  store i8 %15033, ptr %15036, align 1, !alias.scope !1058, !noalias !979
  %15037 = getelementptr inbounds i8, ptr %14953, i64 10
  store i8 %15034, ptr %15037, align 1, !alias.scope !1058, !noalias !979
  %15038 = getelementptr inbounds i8, ptr %14953, i64 11
  store i8 %15035, ptr %15038, align 1, !alias.scope !1058, !noalias !979
  %15039 = getelementptr inbounds i8, ptr %14953, i64 12
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %18) #6, !noalias !1057
  %15040 = getelementptr inbounds %struct._PixelPacket, ptr %14951, i64 1
  %15041 = load i64, ptr %14949, align 8, !tbaa !47, !noalias !984
  %15042 = getelementptr inbounds i8, ptr %15039, i64 %15041
  %15043 = add nuw nsw i64 %14952, 1
  %15044 = icmp eq i64 %15043, %164
  br i1 %15044, label %17787, label %14950, !llvm.loop !1059

15045:                                            ; preds = %15087, %14938
  %15046 = phi ptr [ %166, %14938 ], [ %15115, %15087 ]
  %15047 = phi i64 [ 0, %14938 ], [ %15117, %15087 ]
  %15048 = phi ptr [ %88, %14938 ], [ %15116, %15087 ]
  %15049 = getelementptr inbounds %struct._PixelPacket, ptr %15046, i64 0, i32 2
  %15050 = load i16, ptr %15049, align 2, !tbaa !29, !alias.scope !979, !noalias !982
  %15051 = zext i16 %15050 to i32
  %15052 = mul nuw i32 %15051, 65537
  %15053 = getelementptr inbounds i8, ptr %15048, i64 1
  %15054 = getelementptr inbounds i8, ptr %15048, i64 2
  %15055 = getelementptr inbounds i8, ptr %15048, i64 3
  %15056 = getelementptr inbounds i8, ptr %15048, i64 4
  %15057 = getelementptr inbounds %struct._PixelPacket, ptr %15046, i64 0, i32 1
  %15058 = getelementptr inbounds i8, ptr %15048, i64 5
  %15059 = load i16, ptr %15057, align 2, !tbaa !30, !alias.scope !979, !noalias !982
  %15060 = zext i16 %15059 to i32
  %15061 = mul nuw i32 %15060, 65537
  %15062 = load i16, ptr %15046, align 2, !tbaa !31, !alias.scope !979, !noalias !982
  %15063 = zext i16 %15062 to i32
  %15064 = mul nuw i32 %15063, 65537
  br i1 %14941, label %15065, label %15076

15065:                                            ; preds = %15045
  %15066 = lshr i32 %15052, 8
  %15067 = lshr i32 %15052, 24
  %15068 = trunc i16 %15050 to i8
  %15069 = trunc i32 %15066 to i8
  %15070 = lshr i32 %15061, 8
  %15071 = lshr i32 %15061, 24
  %15072 = trunc i16 %15059 to i8
  %15073 = trunc i32 %15070 to i8
  %15074 = lshr i32 %15064, 8
  %15075 = lshr i32 %15064, 24
  br label %15087

15076:                                            ; preds = %15045
  %15077 = lshr i32 %15052, 24
  %15078 = lshr i32 %15052, 8
  %15079 = trunc i32 %15078 to i8
  %15080 = trunc i16 %15050 to i8
  %15081 = lshr i32 %15061, 24
  %15082 = lshr i32 %15061, 8
  %15083 = trunc i32 %15082 to i8
  %15084 = trunc i16 %15059 to i8
  %15085 = lshr i32 %15064, 24
  %15086 = lshr i32 %15064, 8
  br label %15087

15087:                                            ; preds = %15076, %15065
  %15088 = phi i32 [ %15052, %15065 ], [ %15077, %15076 ]
  %15089 = phi i8 [ %15069, %15065 ], [ %15080, %15076 ]
  %15090 = phi i8 [ %15068, %15065 ], [ %15079, %15076 ]
  %15091 = phi i32 [ %15067, %15065 ], [ %15052, %15076 ]
  %15092 = phi i32 [ %15061, %15065 ], [ %15081, %15076 ]
  %15093 = phi i8 [ %15073, %15065 ], [ %15084, %15076 ]
  %15094 = phi i8 [ %15072, %15065 ], [ %15083, %15076 ]
  %15095 = phi i32 [ %15071, %15065 ], [ %15061, %15076 ]
  %15096 = phi i32 [ %15064, %15065 ], [ %15085, %15076 ]
  %15097 = phi i32 [ %15074, %15065 ], [ %15063, %15076 ]
  %15098 = phi i32 [ %15063, %15065 ], [ %15086, %15076 ]
  %15099 = phi i32 [ %15075, %15065 ], [ %15064, %15076 ]
  %15100 = trunc i32 %15095 to i8
  %15101 = trunc i32 %15092 to i8
  %15102 = trunc i32 %15091 to i8
  %15103 = trunc i32 %15088 to i8
  store i8 %15103, ptr %15048, align 1
  store i8 %15089, ptr %15053, align 1
  store i8 %15090, ptr %15054, align 1
  store i8 %15102, ptr %15055, align 1
  store i8 %15101, ptr %15056, align 1
  store i8 %15093, ptr %15058, align 1
  %15104 = getelementptr inbounds i8, ptr %15048, i64 6
  store i8 %15094, ptr %15104, align 1
  %15105 = getelementptr inbounds i8, ptr %15048, i64 7
  store i8 %15100, ptr %15105, align 1
  %15106 = getelementptr inbounds i8, ptr %15048, i64 8
  %15107 = trunc i32 %15099 to i8
  %15108 = trunc i32 %15098 to i8
  %15109 = trunc i32 %15097 to i8
  %15110 = trunc i32 %15096 to i8
  store i8 %15110, ptr %15106, align 1, !alias.scope !982, !noalias !979
  %15111 = getelementptr inbounds i8, ptr %15048, i64 9
  store i8 %15109, ptr %15111, align 1, !alias.scope !982, !noalias !979
  %15112 = getelementptr inbounds i8, ptr %15048, i64 10
  store i8 %15108, ptr %15112, align 1, !alias.scope !982, !noalias !979
  %15113 = getelementptr inbounds i8, ptr %15048, i64 11
  store i8 %15107, ptr %15113, align 1, !alias.scope !982, !noalias !979
  %15114 = getelementptr inbounds i8, ptr %15048, i64 12
  %15115 = getelementptr inbounds %struct._PixelPacket, ptr %15046, i64 1
  %15116 = getelementptr inbounds i8, ptr %15114, i64 %14943
  %15117 = add nuw nsw i64 %15047, 1
  %15118 = icmp eq i64 %15117, %164
  br i1 %15118, label %17787, label %15045, !llvm.loop !1060

15119:                                            ; preds = %13799
  %15120 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 2
  %15121 = load i32, ptr %15120, align 8, !tbaa !50, !noalias !984
  %15122 = icmp eq i32 %15121, 1
  br i1 %15122, label %15123, label %15270

15123:                                            ; preds = %15119
  %15124 = icmp sgt i64 %164, 0
  br i1 %15124, label %15125, label %17787

15125:                                            ; preds = %15123
  %15126 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 14
  %15127 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 3
  %15128 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %15129 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  br label %15130

15130:                                            ; preds = %15248, %15125
  %15131 = phi ptr [ %166, %15125 ], [ %15265, %15248 ]
  %15132 = phi i64 [ 0, %15125 ], [ %15268, %15248 ]
  %15133 = phi ptr [ %88, %15125 ], [ %15267, %15248 ]
  %15134 = getelementptr inbounds %struct._PixelPacket, ptr %15131, i64 0, i32 2
  %15135 = load i16, ptr %15134, align 2, !tbaa !29, !alias.scope !979, !noalias !982
  %15136 = uitofp i16 %15135 to double
  call void @llvm.experimental.noalias.scope.decl(metadata !1061)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %17) #6, !noalias !1064
  %15137 = call ptr @ResetMagickMemory(ptr noundef nonnull %17, i32 noundef 0, i64 noundef 8) #6, !noalias !1061
  %15138 = load double, ptr %15126, align 8, !tbaa !59, !noalias !1064
  %15139 = fmul fast double %15138, %15136
  %15140 = load double, ptr %15127, align 8, !tbaa !60, !noalias !1064
  %15141 = fadd fast double %15139, %15140
  %15142 = load i32, ptr %15128, align 8, !tbaa !51, !noalias !1064
  %15143 = icmp eq i32 %15142, 1
  %15144 = bitcast double %15141 to i64
  %15145 = lshr i64 %15144, 56
  %15146 = trunc i64 %15145 to i8
  %15147 = lshr i64 %15144, 48
  %15148 = trunc i64 %15147 to i8
  %15149 = lshr i64 %15144, 40
  %15150 = trunc i64 %15149 to i8
  %15151 = lshr i64 %15144, 32
  %15152 = trunc i64 %15151 to i8
  %15153 = lshr i64 %15144, 24
  %15154 = trunc i64 %15153 to i8
  %15155 = lshr i64 %15144, 16
  %15156 = trunc i64 %15155 to i8
  %15157 = lshr i64 %15144, 8
  %15158 = trunc i64 %15157 to i8
  %15159 = trunc i64 %15144 to i8
  br i1 %15143, label %15161, label %15160

15160:                                            ; preds = %15130
  br label %15161

15161:                                            ; preds = %15160, %15130
  %15162 = phi i8 [ %15146, %15160 ], [ %15159, %15130 ]
  %15163 = phi i8 [ %15148, %15160 ], [ %15158, %15130 ]
  %15164 = phi i8 [ %15150, %15160 ], [ %15156, %15130 ]
  %15165 = phi i8 [ %15152, %15160 ], [ %15154, %15130 ]
  %15166 = phi i8 [ %15154, %15160 ], [ %15152, %15130 ]
  %15167 = phi i8 [ %15156, %15160 ], [ %15150, %15130 ]
  %15168 = phi i8 [ %15158, %15160 ], [ %15148, %15130 ]
  %15169 = phi i8 [ %15159, %15160 ], [ %15146, %15130 ]
  store i8 %15162, ptr %15133, align 1, !alias.scope !1065, !noalias !979
  %15170 = getelementptr inbounds i8, ptr %15133, i64 1
  store i8 %15163, ptr %15170, align 1, !alias.scope !1065, !noalias !979
  %15171 = getelementptr inbounds i8, ptr %15133, i64 2
  store i8 %15164, ptr %15171, align 1, !alias.scope !1065, !noalias !979
  %15172 = getelementptr inbounds i8, ptr %15133, i64 3
  store i8 %15165, ptr %15172, align 1, !alias.scope !1065, !noalias !979
  %15173 = getelementptr inbounds i8, ptr %15133, i64 4
  store i8 %15166, ptr %15173, align 1, !alias.scope !1065, !noalias !979
  %15174 = getelementptr inbounds i8, ptr %15133, i64 5
  store i8 %15167, ptr %15174, align 1, !alias.scope !1065, !noalias !979
  %15175 = getelementptr inbounds i8, ptr %15133, i64 6
  store i8 %15168, ptr %15175, align 1, !alias.scope !1065, !noalias !979
  %15176 = getelementptr inbounds i8, ptr %15133, i64 7
  store i8 %15169, ptr %15176, align 1, !alias.scope !1065, !noalias !979
  %15177 = getelementptr inbounds i8, ptr %15133, i64 8
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %17) #6, !noalias !1064
  %15178 = getelementptr inbounds %struct._PixelPacket, ptr %15131, i64 0, i32 1
  %15179 = load i16, ptr %15178, align 2, !tbaa !30, !alias.scope !979, !noalias !982
  %15180 = uitofp i16 %15179 to double
  call void @llvm.experimental.noalias.scope.decl(metadata !1066)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %16) #6, !noalias !1069
  %15181 = call ptr @ResetMagickMemory(ptr noundef nonnull %16, i32 noundef 0, i64 noundef 8) #6, !noalias !1066
  %15182 = load double, ptr %15126, align 8, !tbaa !59, !noalias !1069
  %15183 = fmul fast double %15182, %15180
  %15184 = load double, ptr %15127, align 8, !tbaa !60, !noalias !1069
  %15185 = fadd fast double %15183, %15184
  %15186 = load i32, ptr %15128, align 8, !tbaa !51, !noalias !1069
  %15187 = icmp eq i32 %15186, 1
  %15188 = bitcast double %15185 to i64
  %15189 = lshr i64 %15188, 56
  %15190 = trunc i64 %15189 to i8
  %15191 = lshr i64 %15188, 48
  %15192 = trunc i64 %15191 to i8
  %15193 = lshr i64 %15188, 40
  %15194 = trunc i64 %15193 to i8
  %15195 = lshr i64 %15188, 32
  %15196 = trunc i64 %15195 to i8
  %15197 = lshr i64 %15188, 24
  %15198 = trunc i64 %15197 to i8
  %15199 = lshr i64 %15188, 16
  %15200 = trunc i64 %15199 to i8
  %15201 = lshr i64 %15188, 8
  %15202 = trunc i64 %15201 to i8
  %15203 = trunc i64 %15188 to i8
  br i1 %15187, label %15205, label %15204

15204:                                            ; preds = %15161
  br label %15205

15205:                                            ; preds = %15204, %15161
  %15206 = phi i8 [ %15190, %15204 ], [ %15203, %15161 ]
  %15207 = phi i8 [ %15192, %15204 ], [ %15202, %15161 ]
  %15208 = phi i8 [ %15194, %15204 ], [ %15200, %15161 ]
  %15209 = phi i8 [ %15196, %15204 ], [ %15198, %15161 ]
  %15210 = phi i8 [ %15198, %15204 ], [ %15196, %15161 ]
  %15211 = phi i8 [ %15200, %15204 ], [ %15194, %15161 ]
  %15212 = phi i8 [ %15202, %15204 ], [ %15192, %15161 ]
  %15213 = phi i8 [ %15203, %15204 ], [ %15190, %15161 ]
  store i8 %15206, ptr %15177, align 1, !alias.scope !1070, !noalias !979
  %15214 = getelementptr inbounds i8, ptr %15133, i64 9
  store i8 %15207, ptr %15214, align 1, !alias.scope !1070, !noalias !979
  %15215 = getelementptr inbounds i8, ptr %15133, i64 10
  store i8 %15208, ptr %15215, align 1, !alias.scope !1070, !noalias !979
  %15216 = getelementptr inbounds i8, ptr %15133, i64 11
  store i8 %15209, ptr %15216, align 1, !alias.scope !1070, !noalias !979
  %15217 = getelementptr inbounds i8, ptr %15133, i64 12
  store i8 %15210, ptr %15217, align 1, !alias.scope !1070, !noalias !979
  %15218 = getelementptr inbounds i8, ptr %15133, i64 13
  store i8 %15211, ptr %15218, align 1, !alias.scope !1070, !noalias !979
  %15219 = getelementptr inbounds i8, ptr %15133, i64 14
  store i8 %15212, ptr %15219, align 1, !alias.scope !1070, !noalias !979
  %15220 = getelementptr inbounds i8, ptr %15133, i64 15
  store i8 %15213, ptr %15220, align 1, !alias.scope !1070, !noalias !979
  %15221 = getelementptr inbounds i8, ptr %15133, i64 16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %16) #6, !noalias !1069
  %15222 = load i16, ptr %15131, align 2, !tbaa !31, !alias.scope !979, !noalias !982
  %15223 = uitofp i16 %15222 to double
  call void @llvm.experimental.noalias.scope.decl(metadata !1071)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %15) #6, !noalias !1074
  %15224 = call ptr @ResetMagickMemory(ptr noundef nonnull %15, i32 noundef 0, i64 noundef 8) #6, !noalias !1071
  %15225 = load double, ptr %15126, align 8, !tbaa !59, !noalias !1074
  %15226 = fmul fast double %15225, %15223
  %15227 = load double, ptr %15127, align 8, !tbaa !60, !noalias !1074
  %15228 = fadd fast double %15226, %15227
  %15229 = load i32, ptr %15128, align 8, !tbaa !51, !noalias !1074
  %15230 = icmp eq i32 %15229, 1
  %15231 = bitcast double %15228 to i64
  %15232 = lshr i64 %15231, 56
  %15233 = trunc i64 %15232 to i8
  %15234 = lshr i64 %15231, 48
  %15235 = trunc i64 %15234 to i8
  %15236 = lshr i64 %15231, 40
  %15237 = trunc i64 %15236 to i8
  %15238 = lshr i64 %15231, 32
  %15239 = trunc i64 %15238 to i8
  %15240 = lshr i64 %15231, 24
  %15241 = trunc i64 %15240 to i8
  %15242 = lshr i64 %15231, 16
  %15243 = trunc i64 %15242 to i8
  %15244 = lshr i64 %15231, 8
  %15245 = trunc i64 %15244 to i8
  %15246 = trunc i64 %15231 to i8
  br i1 %15230, label %15248, label %15247

15247:                                            ; preds = %15205
  br label %15248

15248:                                            ; preds = %15247, %15205
  %15249 = phi i8 [ %15233, %15247 ], [ %15246, %15205 ]
  %15250 = phi i8 [ %15235, %15247 ], [ %15245, %15205 ]
  %15251 = phi i8 [ %15237, %15247 ], [ %15243, %15205 ]
  %15252 = phi i8 [ %15239, %15247 ], [ %15241, %15205 ]
  %15253 = phi i8 [ %15241, %15247 ], [ %15239, %15205 ]
  %15254 = phi i8 [ %15243, %15247 ], [ %15237, %15205 ]
  %15255 = phi i8 [ %15245, %15247 ], [ %15235, %15205 ]
  %15256 = phi i8 [ %15246, %15247 ], [ %15233, %15205 ]
  store i8 %15249, ptr %15221, align 1, !alias.scope !1075, !noalias !979
  %15257 = getelementptr inbounds i8, ptr %15133, i64 17
  store i8 %15250, ptr %15257, align 1, !alias.scope !1075, !noalias !979
  %15258 = getelementptr inbounds i8, ptr %15133, i64 18
  store i8 %15251, ptr %15258, align 1, !alias.scope !1075, !noalias !979
  %15259 = getelementptr inbounds i8, ptr %15133, i64 19
  store i8 %15252, ptr %15259, align 1, !alias.scope !1075, !noalias !979
  %15260 = getelementptr inbounds i8, ptr %15133, i64 20
  store i8 %15253, ptr %15260, align 1, !alias.scope !1075, !noalias !979
  %15261 = getelementptr inbounds i8, ptr %15133, i64 21
  store i8 %15254, ptr %15261, align 1, !alias.scope !1075, !noalias !979
  %15262 = getelementptr inbounds i8, ptr %15133, i64 22
  store i8 %15255, ptr %15262, align 1, !alias.scope !1075, !noalias !979
  %15263 = getelementptr inbounds i8, ptr %15133, i64 23
  store i8 %15256, ptr %15263, align 1, !alias.scope !1075, !noalias !979
  %15264 = getelementptr inbounds i8, ptr %15133, i64 24
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %15) #6, !noalias !1074
  %15265 = getelementptr inbounds %struct._PixelPacket, ptr %15131, i64 1
  %15266 = load i64, ptr %15129, align 8, !tbaa !47, !noalias !984
  %15267 = getelementptr inbounds i8, ptr %15264, i64 %15266
  %15268 = add nuw nsw i64 %15132, 1
  %15269 = icmp eq i64 %15268, %164
  br i1 %15269, label %17787, label %15130, !llvm.loop !1076

15270:                                            ; preds = %15119, %13799
  %15271 = icmp sgt i64 %164, 0
  br i1 %15271, label %15272, label %17787

15272:                                            ; preds = %15270
  %15273 = add i64 %13800, -1
  %15274 = shl i64 2, %15273
  %15275 = add i64 %15274, -1
  %15276 = uitofp i64 %15275 to float
  %15277 = fmul fast float %15276, 0x3EF0001000000000
  %15278 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 14, i32 2
  %15279 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %15280 = load i64, ptr %15278, align 8, !tbaa !69, !noalias !984
  %15281 = icmp sgt i64 %13800, 0
  %15282 = load i64, ptr %15279, align 8, !tbaa !47, !noalias !984
  br label %15283

15283:                                            ; preds = %15404, %15272
  %15284 = phi i64 [ %15280, %15272 ], [ %15405, %15404 ]
  %15285 = phi ptr [ %166, %15272 ], [ %15407, %15404 ]
  %15286 = phi i64 [ 0, %15272 ], [ %15409, %15404 ]
  %15287 = phi ptr [ %88, %15272 ], [ %15408, %15404 ]
  %15288 = getelementptr inbounds %struct._PixelPacket, ptr %15285, i64 0, i32 2
  %15289 = load i16, ptr %15288, align 2, !tbaa !29, !alias.scope !979, !noalias !982
  %15290 = uitofp i16 %15289 to float
  %15291 = fmul fast float %15277, %15290
  %15292 = fpext float %15291 to double
  %15293 = fadd fast double %15292, 5.000000e-01
  %15294 = fptoui double %15293 to i64
  tail call void @llvm.experimental.noalias.scope.decl(metadata !1077)
  %15295 = icmp eq i64 %15284, 0
  br i1 %15295, label %15296, label %15297

15296:                                            ; preds = %15283
  store i64 8, ptr %15278, align 8, !tbaa !69, !noalias !1080
  br label %15297

15297:                                            ; preds = %15296, %15283
  %15298 = phi i64 [ 8, %15296 ], [ %15284, %15283 ]
  br i1 %15281, label %15299, label %15325

15299:                                            ; preds = %15297, %15309
  %15300 = phi i64 [ %15320, %15309 ], [ %15298, %15297 ]
  %15301 = phi i64 [ %15305, %15309 ], [ %13800, %15297 ]
  %15302 = phi ptr [ %15322, %15309 ], [ %15287, %15297 ]
  %15303 = tail call i64 @llvm.umin.i64(i64 %15301, i64 %15300)
  %15304 = sub nsw i64 %15301, %15303
  %15305 = tail call i64 @llvm.smax.i64(i64 %15304, i64 0)
  %15306 = icmp eq i64 %15300, 8
  br i1 %15306, label %15309, label %15307

15307:                                            ; preds = %15299
  %15308 = load i8, ptr %15302, align 1, !tbaa !48, !alias.scope !1081, !noalias !979
  br label %15309

15309:                                            ; preds = %15307, %15299
  %15310 = phi i8 [ %15308, %15307 ], [ 0, %15299 ]
  %15311 = sub i64 %15300, %15303
  %15312 = lshr i64 %15294, %15305
  %15313 = shl nsw i64 -1, %15303
  %15314 = xor i64 %15313, -1
  %15315 = and i64 %15312, %15314
  %15316 = shl i64 %15315, %15311
  %15317 = trunc i64 %15316 to i8
  %15318 = or i8 %15310, %15317
  store i8 %15318, ptr %15302, align 1, !tbaa !48, !alias.scope !1081, !noalias !979
  %15319 = icmp ule i64 %15300, %15301
  %15320 = select i1 %15319, i64 8, i64 %15311
  %15321 = zext i1 %15319 to i64
  %15322 = getelementptr inbounds i8, ptr %15302, i64 %15321
  %15323 = icmp slt i64 %15304, 1
  br i1 %15323, label %15324, label %15299, !llvm.loop !75

15324:                                            ; preds = %15309
  store i64 %15320, ptr %15278, align 8, !tbaa !69, !noalias !1080
  br label %15325

15325:                                            ; preds = %15324, %15297
  %15326 = phi i64 [ %15298, %15297 ], [ %15320, %15324 ]
  %15327 = phi ptr [ %15287, %15297 ], [ %15322, %15324 ]
  %15328 = getelementptr inbounds %struct._PixelPacket, ptr %15285, i64 0, i32 1
  %15329 = load i16, ptr %15328, align 2, !tbaa !30, !alias.scope !979, !noalias !982
  %15330 = uitofp i16 %15329 to float
  %15331 = fmul fast float %15277, %15330
  %15332 = fpext float %15331 to double
  %15333 = fadd fast double %15332, 5.000000e-01
  %15334 = fptoui double %15333 to i64
  tail call void @llvm.experimental.noalias.scope.decl(metadata !1082)
  %15335 = icmp eq i64 %15326, 0
  br i1 %15335, label %15336, label %15337

15336:                                            ; preds = %15325
  store i64 8, ptr %15278, align 8, !tbaa !69, !noalias !1085
  br label %15337

15337:                                            ; preds = %15336, %15325
  %15338 = phi i64 [ 8, %15336 ], [ %15326, %15325 ]
  br i1 %15281, label %15339, label %15365

15339:                                            ; preds = %15337, %15349
  %15340 = phi i64 [ %15360, %15349 ], [ %15338, %15337 ]
  %15341 = phi i64 [ %15345, %15349 ], [ %13800, %15337 ]
  %15342 = phi ptr [ %15362, %15349 ], [ %15327, %15337 ]
  %15343 = tail call i64 @llvm.umin.i64(i64 %15341, i64 %15340)
  %15344 = sub nsw i64 %15341, %15343
  %15345 = tail call i64 @llvm.smax.i64(i64 %15344, i64 0)
  %15346 = icmp eq i64 %15340, 8
  br i1 %15346, label %15349, label %15347

15347:                                            ; preds = %15339
  %15348 = load i8, ptr %15342, align 1, !tbaa !48, !alias.scope !1086, !noalias !979
  br label %15349

15349:                                            ; preds = %15347, %15339
  %15350 = phi i8 [ %15348, %15347 ], [ 0, %15339 ]
  %15351 = sub i64 %15340, %15343
  %15352 = lshr i64 %15334, %15345
  %15353 = shl nsw i64 -1, %15343
  %15354 = xor i64 %15353, -1
  %15355 = and i64 %15352, %15354
  %15356 = shl i64 %15355, %15351
  %15357 = trunc i64 %15356 to i8
  %15358 = or i8 %15350, %15357
  store i8 %15358, ptr %15342, align 1, !tbaa !48, !alias.scope !1086, !noalias !979
  %15359 = icmp ule i64 %15340, %15341
  %15360 = select i1 %15359, i64 8, i64 %15351
  %15361 = zext i1 %15359 to i64
  %15362 = getelementptr inbounds i8, ptr %15342, i64 %15361
  %15363 = icmp slt i64 %15344, 1
  br i1 %15363, label %15364, label %15339, !llvm.loop !75

15364:                                            ; preds = %15349
  store i64 %15360, ptr %15278, align 8, !tbaa !69, !noalias !1085
  br label %15365

15365:                                            ; preds = %15364, %15337
  %15366 = phi i64 [ %15338, %15337 ], [ %15360, %15364 ]
  %15367 = phi ptr [ %15327, %15337 ], [ %15362, %15364 ]
  %15368 = load i16, ptr %15285, align 2, !tbaa !31, !alias.scope !979, !noalias !982
  %15369 = uitofp i16 %15368 to float
  %15370 = fmul fast float %15277, %15369
  %15371 = fpext float %15370 to double
  %15372 = fadd fast double %15371, 5.000000e-01
  %15373 = fptoui double %15372 to i64
  tail call void @llvm.experimental.noalias.scope.decl(metadata !1087)
  %15374 = icmp eq i64 %15366, 0
  br i1 %15374, label %15375, label %15376

15375:                                            ; preds = %15365
  store i64 8, ptr %15278, align 8, !tbaa !69, !noalias !1090
  br label %15376

15376:                                            ; preds = %15375, %15365
  %15377 = phi i64 [ 8, %15375 ], [ %15366, %15365 ]
  br i1 %15281, label %15378, label %15404

15378:                                            ; preds = %15376, %15388
  %15379 = phi i64 [ %15399, %15388 ], [ %15377, %15376 ]
  %15380 = phi i64 [ %15384, %15388 ], [ %13800, %15376 ]
  %15381 = phi ptr [ %15401, %15388 ], [ %15367, %15376 ]
  %15382 = tail call i64 @llvm.umin.i64(i64 %15380, i64 %15379)
  %15383 = sub nsw i64 %15380, %15382
  %15384 = tail call i64 @llvm.smax.i64(i64 %15383, i64 0)
  %15385 = icmp eq i64 %15379, 8
  br i1 %15385, label %15388, label %15386

15386:                                            ; preds = %15378
  %15387 = load i8, ptr %15381, align 1, !tbaa !48, !alias.scope !1091, !noalias !979
  br label %15388

15388:                                            ; preds = %15386, %15378
  %15389 = phi i8 [ %15387, %15386 ], [ 0, %15378 ]
  %15390 = sub i64 %15379, %15382
  %15391 = lshr i64 %15373, %15384
  %15392 = shl nsw i64 -1, %15382
  %15393 = xor i64 %15392, -1
  %15394 = and i64 %15391, %15393
  %15395 = shl i64 %15394, %15390
  %15396 = trunc i64 %15395 to i8
  %15397 = or i8 %15389, %15396
  store i8 %15397, ptr %15381, align 1, !tbaa !48, !alias.scope !1091, !noalias !979
  %15398 = icmp ule i64 %15379, %15380
  %15399 = select i1 %15398, i64 8, i64 %15390
  %15400 = zext i1 %15398 to i64
  %15401 = getelementptr inbounds i8, ptr %15381, i64 %15400
  %15402 = icmp slt i64 %15383, 1
  br i1 %15402, label %15403, label %15378, !llvm.loop !75

15403:                                            ; preds = %15388
  store i64 %15399, ptr %15278, align 8, !tbaa !69, !noalias !1090
  br label %15404

15404:                                            ; preds = %15403, %15376
  %15405 = phi i64 [ %15377, %15376 ], [ %15399, %15403 ]
  %15406 = phi ptr [ %15367, %15376 ], [ %15401, %15403 ]
  %15407 = getelementptr inbounds %struct._PixelPacket, ptr %15285, i64 1
  %15408 = getelementptr inbounds i8, ptr %15406, i64 %15282
  %15409 = add nuw nsw i64 %15286, 1
  %15410 = icmp eq i64 %15409, %164
  br i1 %15410, label %17787, label %15283, !llvm.loop !1092

15411:                                            ; preds = %256, %256, %256
  tail call void @llvm.experimental.noalias.scope.decl(metadata !1093)
  tail call void @llvm.experimental.noalias.scope.decl(metadata !1096)
  %15412 = load i64, ptr %2, align 8, !tbaa !45, !noalias !1098
  switch i64 %15412, label %16927 [
    i64 8, label %15413
    i64 10, label %15454
    i64 16, label %16123
    i64 32, label %16490
    i64 64, label %16731
  ]

15413:                                            ; preds = %15411
  %15414 = icmp sgt i64 %164, 0
  br i1 %15414, label %15415, label %17787

15415:                                            ; preds = %15413
  %15416 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %15417 = load i64, ptr %15416, align 8, !tbaa !47, !noalias !1098
  br label %15418

15418:                                            ; preds = %15418, %15415
  %15419 = phi ptr [ %166, %15415 ], [ %15450, %15418 ]
  %15420 = phi ptr [ %88, %15415 ], [ %15451, %15418 ]
  %15421 = phi i64 [ 0, %15415 ], [ %15452, %15418 ]
  %15422 = getelementptr inbounds %struct._PixelPacket, ptr %15419, i64 0, i32 1
  %15423 = getelementptr inbounds i8, ptr %15420, i64 2
  %15424 = load <2 x i16>, ptr %15422, align 2, !tbaa !37, !alias.scope !1093, !noalias !1096
  %15425 = zext <2 x i16> %15424 to <2 x i64>
  %15426 = add nuw nsw <2 x i64> %15425, <i64 128, i64 128>
  %15427 = shufflevector <2 x i64> %15426, <2 x i64> poison, <2 x i32> <i32 1, i32 0>
  %15428 = lshr <2 x i64> %15427, <i64 8, i64 8>
  %15429 = sub nsw <2 x i64> %15427, %15428
  %15430 = lshr <2 x i64> %15429, <i64 8, i64 8>
  %15431 = trunc <2 x i64> %15430 to <2 x i8>
  store <2 x i8> %15431, ptr %15420, align 1, !tbaa !48, !alias.scope !1096, !noalias !1093
  %15432 = load i16, ptr %15419, align 2, !tbaa !31, !alias.scope !1093, !noalias !1096
  %15433 = zext i16 %15432 to i64
  %15434 = add nuw nsw i64 %15433, 128
  %15435 = lshr i64 %15434, 8
  %15436 = sub nsw i64 %15434, %15435
  %15437 = lshr i64 %15436, 8
  %15438 = trunc i64 %15437 to i8
  %15439 = getelementptr inbounds i8, ptr %15420, i64 3
  store i8 %15438, ptr %15423, align 1, !tbaa !48, !alias.scope !1096, !noalias !1093
  %15440 = getelementptr inbounds %struct._PixelPacket, ptr %15419, i64 0, i32 3
  %15441 = load i16, ptr %15440, align 2, !tbaa !28, !alias.scope !1093, !noalias !1096
  %15442 = xor i16 %15441, -1
  %15443 = zext i16 %15442 to i64
  %15444 = add nuw nsw i64 %15443, 128
  %15445 = lshr i64 %15444, 8
  %15446 = sub nsw i64 %15444, %15445
  %15447 = lshr i64 %15446, 8
  %15448 = trunc i64 %15447 to i8
  %15449 = getelementptr inbounds i8, ptr %15420, i64 4
  store i8 %15448, ptr %15439, align 1, !tbaa !48, !alias.scope !1096, !noalias !1093
  %15450 = getelementptr inbounds %struct._PixelPacket, ptr %15419, i64 1
  %15451 = getelementptr inbounds i8, ptr %15449, i64 %15417
  %15452 = add nuw nsw i64 %15421, 1
  %15453 = icmp eq i64 %15452, %164
  br i1 %15453, label %17787, label %15418, !llvm.loop !1099

15454:                                            ; preds = %15411
  %15455 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 8
  %15456 = load i32, ptr %15455, align 4, !tbaa !84, !noalias !1098
  %15457 = icmp eq i32 %15456, 0
  br i1 %15457, label %15458, label %15698

15458:                                            ; preds = %15454
  %15459 = icmp sgt i64 %164, 0
  br i1 %15459, label %15460, label %17787

15460:                                            ; preds = %15458
  %15461 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %15462 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %15463 = load i64, ptr %15462, align 8, !tbaa !47, !noalias !1098
  br label %15464

15464:                                            ; preds = %15690, %15460
  %15465 = phi ptr [ %166, %15460 ], [ %15694, %15690 ]
  %15466 = phi ptr [ %88, %15460 ], [ %15695, %15690 ]
  %15467 = phi i64 [ 0, %15460 ], [ %15693, %15690 ]
  %15468 = phi i32 [ 0, %15460 ], [ %15691, %15690 ]
  %15469 = phi i64 [ 0, %15460 ], [ %15696, %15690 ]
  %15470 = getelementptr inbounds %struct._PixelPacket, ptr %15465, i64 0, i32 3
  %15471 = getelementptr inbounds %struct._PixelPacket, ptr %15465, i64 0, i32 1
  %15472 = getelementptr inbounds %struct._PixelPacket, ptr %15465, i64 0, i32 2
  %15473 = load i16, ptr %15472, align 2, !tbaa !29, !alias.scope !1093, !noalias !1096
  %15474 = srem i64 %15467, 3
  switch i64 %15474, label %15524 [
    i64 0, label %15475
    i64 1, label %15484
    i64 2, label %15493
  ]

15475:                                            ; preds = %15464
  %15476 = uitofp i16 %15473 to float
  %15477 = fmul fast float %15476, 0x3F8FF82000000000
  %15478 = fpext float %15477 to double
  %15479 = fadd fast double %15478, 5.000000e-01
  %15480 = fptoui double %15479 to i64
  %15481 = trunc i64 %15480 to i32
  %15482 = shl i32 %15481, 22
  %15483 = or i32 %15482, %15468
  br label %15524

15484:                                            ; preds = %15464
  %15485 = uitofp i16 %15473 to float
  %15486 = fmul fast float %15485, 0x3F8FF82000000000
  %15487 = fpext float %15486 to double
  %15488 = fadd fast double %15487, 5.000000e-01
  %15489 = fptoui double %15488 to i64
  %15490 = trunc i64 %15489 to i32
  %15491 = shl i32 %15490, 12
  %15492 = or i32 %15491, %15468
  br label %15524

15493:                                            ; preds = %15464
  %15494 = uitofp i16 %15473 to float
  %15495 = fmul fast float %15494, 0x3F8FF82000000000
  %15496 = fpext float %15495 to double
  %15497 = fadd fast double %15496, 5.000000e-01
  %15498 = fptoui double %15497 to i64
  %15499 = trunc i64 %15498 to i32
  %15500 = shl i32 %15499, 2
  %15501 = or i32 %15500, %15468
  %15502 = load i32, ptr %15461, align 8, !tbaa !51, !noalias !1098
  %15503 = icmp eq i32 %15502, 1
  %15504 = lshr i32 %15501, 16
  br i1 %15503, label %15505, label %15508

15505:                                            ; preds = %15493
  %15506 = lshr i32 %15501, 8
  %15507 = lshr i32 %15501, 24
  br label %15511

15508:                                            ; preds = %15493
  %15509 = lshr i32 %15501, 24
  %15510 = lshr i32 %15501, 8
  br label %15511

15511:                                            ; preds = %15508, %15505
  %15512 = phi i32 [ %15501, %15505 ], [ %15509, %15508 ]
  %15513 = phi i32 [ %15506, %15505 ], [ %15504, %15508 ]
  %15514 = phi i32 [ %15504, %15505 ], [ %15510, %15508 ]
  %15515 = phi i32 [ %15507, %15505 ], [ %15501, %15508 ]
  %15516 = trunc i32 %15515 to i8
  %15517 = trunc i32 %15514 to i8
  %15518 = trunc i32 %15513 to i8
  %15519 = trunc i32 %15512 to i8
  store i8 %15519, ptr %15466, align 1, !alias.scope !1096, !noalias !1093
  %15520 = getelementptr inbounds i8, ptr %15466, i64 1
  store i8 %15518, ptr %15520, align 1, !alias.scope !1096, !noalias !1093
  %15521 = getelementptr inbounds i8, ptr %15466, i64 2
  store i8 %15517, ptr %15521, align 1, !alias.scope !1096, !noalias !1093
  %15522 = getelementptr inbounds i8, ptr %15466, i64 3
  store i8 %15516, ptr %15522, align 1, !alias.scope !1096, !noalias !1093
  %15523 = getelementptr inbounds i8, ptr %15466, i64 4
  br label %15524

15524:                                            ; preds = %15511, %15484, %15475, %15464
  %15525 = phi i32 [ %15468, %15464 ], [ 0, %15511 ], [ %15492, %15484 ], [ %15483, %15475 ]
  %15526 = phi ptr [ %15466, %15464 ], [ %15523, %15511 ], [ %15466, %15484 ], [ %15466, %15475 ]
  %15527 = or i64 %15467, 1
  %15528 = load i16, ptr %15471, align 2, !tbaa !30, !alias.scope !1093, !noalias !1096
  %15529 = srem i64 %15527, 3
  switch i64 %15529, label %15579 [
    i64 0, label %15570
    i64 1, label %15561
    i64 2, label %15530
  ]

15530:                                            ; preds = %15524
  %15531 = uitofp i16 %15528 to float
  %15532 = fmul fast float %15531, 0x3F8FF82000000000
  %15533 = fpext float %15532 to double
  %15534 = fadd fast double %15533, 5.000000e-01
  %15535 = fptoui double %15534 to i64
  %15536 = trunc i64 %15535 to i32
  %15537 = shl i32 %15536, 2
  %15538 = or i32 %15537, %15525
  %15539 = load i32, ptr %15461, align 8, !tbaa !51, !noalias !1098
  %15540 = icmp eq i32 %15539, 1
  %15541 = lshr i32 %15538, 16
  br i1 %15540, label %15545, label %15542

15542:                                            ; preds = %15530
  %15543 = lshr i32 %15538, 24
  %15544 = lshr i32 %15538, 8
  br label %15548

15545:                                            ; preds = %15530
  %15546 = lshr i32 %15538, 8
  %15547 = lshr i32 %15538, 24
  br label %15548

15548:                                            ; preds = %15545, %15542
  %15549 = phi i32 [ %15538, %15545 ], [ %15543, %15542 ]
  %15550 = phi i32 [ %15546, %15545 ], [ %15541, %15542 ]
  %15551 = phi i32 [ %15541, %15545 ], [ %15544, %15542 ]
  %15552 = phi i32 [ %15547, %15545 ], [ %15538, %15542 ]
  %15553 = trunc i32 %15552 to i8
  %15554 = trunc i32 %15551 to i8
  %15555 = trunc i32 %15550 to i8
  %15556 = trunc i32 %15549 to i8
  store i8 %15556, ptr %15526, align 1, !alias.scope !1096, !noalias !1093
  %15557 = getelementptr inbounds i8, ptr %15526, i64 1
  store i8 %15555, ptr %15557, align 1, !alias.scope !1096, !noalias !1093
  %15558 = getelementptr inbounds i8, ptr %15526, i64 2
  store i8 %15554, ptr %15558, align 1, !alias.scope !1096, !noalias !1093
  %15559 = getelementptr inbounds i8, ptr %15526, i64 3
  store i8 %15553, ptr %15559, align 1, !alias.scope !1096, !noalias !1093
  %15560 = getelementptr inbounds i8, ptr %15526, i64 4
  br label %15579

15561:                                            ; preds = %15524
  %15562 = uitofp i16 %15528 to float
  %15563 = fmul fast float %15562, 0x3F8FF82000000000
  %15564 = fpext float %15563 to double
  %15565 = fadd fast double %15564, 5.000000e-01
  %15566 = fptoui double %15565 to i64
  %15567 = trunc i64 %15566 to i32
  %15568 = shl i32 %15567, 12
  %15569 = or i32 %15568, %15525
  br label %15579

15570:                                            ; preds = %15524
  %15571 = uitofp i16 %15528 to float
  %15572 = fmul fast float %15571, 0x3F8FF82000000000
  %15573 = fpext float %15572 to double
  %15574 = fadd fast double %15573, 5.000000e-01
  %15575 = fptoui double %15574 to i64
  %15576 = trunc i64 %15575 to i32
  %15577 = shl i32 %15576, 22
  %15578 = or i32 %15577, %15525
  br label %15579

15579:                                            ; preds = %15570, %15561, %15548, %15524
  %15580 = phi i32 [ %15525, %15524 ], [ 0, %15548 ], [ %15569, %15561 ], [ %15578, %15570 ]
  %15581 = phi ptr [ %15526, %15524 ], [ %15560, %15548 ], [ %15526, %15561 ], [ %15526, %15570 ]
  %15582 = or i64 %15467, 2
  %15583 = load i16, ptr %15465, align 2, !tbaa !31, !alias.scope !1093, !noalias !1096
  %15584 = srem i64 %15582, 3
  switch i64 %15584, label %15634 [
    i64 0, label %15625
    i64 1, label %15616
    i64 2, label %15585
  ]

15585:                                            ; preds = %15579
  %15586 = uitofp i16 %15583 to float
  %15587 = fmul fast float %15586, 0x3F8FF82000000000
  %15588 = fpext float %15587 to double
  %15589 = fadd fast double %15588, 5.000000e-01
  %15590 = fptoui double %15589 to i64
  %15591 = trunc i64 %15590 to i32
  %15592 = shl i32 %15591, 2
  %15593 = or i32 %15592, %15580
  %15594 = load i32, ptr %15461, align 8, !tbaa !51, !noalias !1098
  %15595 = icmp eq i32 %15594, 1
  %15596 = lshr i32 %15593, 16
  br i1 %15595, label %15600, label %15597

15597:                                            ; preds = %15585
  %15598 = lshr i32 %15593, 24
  %15599 = lshr i32 %15593, 8
  br label %15603

15600:                                            ; preds = %15585
  %15601 = lshr i32 %15593, 8
  %15602 = lshr i32 %15593, 24
  br label %15603

15603:                                            ; preds = %15600, %15597
  %15604 = phi i32 [ %15593, %15600 ], [ %15598, %15597 ]
  %15605 = phi i32 [ %15601, %15600 ], [ %15596, %15597 ]
  %15606 = phi i32 [ %15596, %15600 ], [ %15599, %15597 ]
  %15607 = phi i32 [ %15602, %15600 ], [ %15593, %15597 ]
  %15608 = trunc i32 %15607 to i8
  %15609 = trunc i32 %15606 to i8
  %15610 = trunc i32 %15605 to i8
  %15611 = trunc i32 %15604 to i8
  store i8 %15611, ptr %15581, align 1, !alias.scope !1096, !noalias !1093
  %15612 = getelementptr inbounds i8, ptr %15581, i64 1
  store i8 %15610, ptr %15612, align 1, !alias.scope !1096, !noalias !1093
  %15613 = getelementptr inbounds i8, ptr %15581, i64 2
  store i8 %15609, ptr %15613, align 1, !alias.scope !1096, !noalias !1093
  %15614 = getelementptr inbounds i8, ptr %15581, i64 3
  store i8 %15608, ptr %15614, align 1, !alias.scope !1096, !noalias !1093
  %15615 = getelementptr inbounds i8, ptr %15581, i64 4
  br label %15634

15616:                                            ; preds = %15579
  %15617 = uitofp i16 %15583 to float
  %15618 = fmul fast float %15617, 0x3F8FF82000000000
  %15619 = fpext float %15618 to double
  %15620 = fadd fast double %15619, 5.000000e-01
  %15621 = fptoui double %15620 to i64
  %15622 = trunc i64 %15621 to i32
  %15623 = shl i32 %15622, 12
  %15624 = or i32 %15623, %15580
  br label %15634

15625:                                            ; preds = %15579
  %15626 = uitofp i16 %15583 to float
  %15627 = fmul fast float %15626, 0x3F8FF82000000000
  %15628 = fpext float %15627 to double
  %15629 = fadd fast double %15628, 5.000000e-01
  %15630 = fptoui double %15629 to i64
  %15631 = trunc i64 %15630 to i32
  %15632 = shl i32 %15631, 22
  %15633 = or i32 %15632, %15580
  br label %15634

15634:                                            ; preds = %15625, %15616, %15603, %15579
  %15635 = phi i32 [ %15580, %15579 ], [ 0, %15603 ], [ %15624, %15616 ], [ %15633, %15625 ]
  %15636 = phi ptr [ %15581, %15579 ], [ %15615, %15603 ], [ %15581, %15616 ], [ %15581, %15625 ]
  %15637 = or i64 %15467, 3
  %15638 = load i16, ptr %15470, align 2, !tbaa !28, !alias.scope !1093, !noalias !1096
  %15639 = xor i16 %15638, -1
  %15640 = srem i64 %15637, 3
  switch i64 %15640, label %15690 [
    i64 0, label %15681
    i64 1, label %15672
    i64 2, label %15641
  ]

15641:                                            ; preds = %15634
  %15642 = uitofp i16 %15639 to float
  %15643 = fmul fast float %15642, 0x3F8FF82000000000
  %15644 = fpext float %15643 to double
  %15645 = fadd fast double %15644, 5.000000e-01
  %15646 = fptoui double %15645 to i64
  %15647 = trunc i64 %15646 to i32
  %15648 = shl i32 %15647, 2
  %15649 = or i32 %15648, %15635
  %15650 = load i32, ptr %15461, align 8, !tbaa !51, !noalias !1098
  %15651 = icmp eq i32 %15650, 1
  %15652 = lshr i32 %15649, 16
  br i1 %15651, label %15656, label %15653

15653:                                            ; preds = %15641
  %15654 = lshr i32 %15649, 24
  %15655 = lshr i32 %15649, 8
  br label %15659

15656:                                            ; preds = %15641
  %15657 = lshr i32 %15649, 8
  %15658 = lshr i32 %15649, 24
  br label %15659

15659:                                            ; preds = %15656, %15653
  %15660 = phi i32 [ %15649, %15656 ], [ %15654, %15653 ]
  %15661 = phi i32 [ %15657, %15656 ], [ %15652, %15653 ]
  %15662 = phi i32 [ %15652, %15656 ], [ %15655, %15653 ]
  %15663 = phi i32 [ %15658, %15656 ], [ %15649, %15653 ]
  %15664 = trunc i32 %15663 to i8
  %15665 = trunc i32 %15662 to i8
  %15666 = trunc i32 %15661 to i8
  %15667 = trunc i32 %15660 to i8
  store i8 %15667, ptr %15636, align 1, !alias.scope !1096, !noalias !1093
  %15668 = getelementptr inbounds i8, ptr %15636, i64 1
  store i8 %15666, ptr %15668, align 1, !alias.scope !1096, !noalias !1093
  %15669 = getelementptr inbounds i8, ptr %15636, i64 2
  store i8 %15665, ptr %15669, align 1, !alias.scope !1096, !noalias !1093
  %15670 = getelementptr inbounds i8, ptr %15636, i64 3
  store i8 %15664, ptr %15670, align 1, !alias.scope !1096, !noalias !1093
  %15671 = getelementptr inbounds i8, ptr %15636, i64 4
  br label %15690

15672:                                            ; preds = %15634
  %15673 = uitofp i16 %15639 to float
  %15674 = fmul fast float %15673, 0x3F8FF82000000000
  %15675 = fpext float %15674 to double
  %15676 = fadd fast double %15675, 5.000000e-01
  %15677 = fptoui double %15676 to i64
  %15678 = trunc i64 %15677 to i32
  %15679 = shl i32 %15678, 12
  %15680 = or i32 %15679, %15635
  br label %15690

15681:                                            ; preds = %15634
  %15682 = uitofp i16 %15639 to float
  %15683 = fmul fast float %15682, 0x3F8FF82000000000
  %15684 = fpext float %15683 to double
  %15685 = fadd fast double %15684, 5.000000e-01
  %15686 = fptoui double %15685 to i64
  %15687 = trunc i64 %15686 to i32
  %15688 = shl i32 %15687, 22
  %15689 = or i32 %15688, %15635
  br label %15690

15690:                                            ; preds = %15681, %15672, %15659, %15634
  %15691 = phi i32 [ %15635, %15634 ], [ 0, %15659 ], [ %15680, %15672 ], [ %15689, %15681 ]
  %15692 = phi ptr [ %15636, %15634 ], [ %15671, %15659 ], [ %15636, %15672 ], [ %15636, %15681 ]
  %15693 = add i64 %15467, 4
  %15694 = getelementptr inbounds %struct._PixelPacket, ptr %15465, i64 1
  %15695 = getelementptr inbounds i8, ptr %15692, i64 %15463
  %15696 = add nuw nsw i64 %15469, 1
  %15697 = icmp eq i64 %15696, %164
  br i1 %15697, label %17787, label %15464, !llvm.loop !1100

15698:                                            ; preds = %15454
  %15699 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 1
  %15700 = load i64, ptr %15699, align 8, !tbaa !86, !noalias !1098
  %15701 = icmp eq i64 %15700, 32
  %15702 = icmp sgt i64 %164, 0
  br i1 %15701, label %15709, label %15703

15703:                                            ; preds = %15698
  br i1 %15702, label %15704, label %17787

15704:                                            ; preds = %15703
  %15705 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 14, i32 2
  %15706 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %15707 = load i64, ptr %15705, align 8, !tbaa !69, !noalias !1098
  %15708 = load i64, ptr %15706, align 8, !tbaa !47, !noalias !1098
  br label %15968

15709:                                            ; preds = %15698
  br i1 %15702, label %15710, label %17787

15710:                                            ; preds = %15709
  %15711 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 14, i32 2
  %15712 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 14, i32 3
  %15713 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 14, i32 1
  %15714 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %15715 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %15716 = load i64, ptr %15711, align 8, !tbaa !69, !noalias !1098
  %15717 = load i64, ptr %15715, align 8, !tbaa !47, !noalias !1098
  %15718 = load ptr, ptr %15712, align 8, !tbaa !87, !noalias !1098
  br label %15719

15719:                                            ; preds = %15963, %15710
  %15720 = phi i64 [ %15716, %15710 ], [ %15960, %15963 ]
  %15721 = phi ptr [ %166, %15710 ], [ %15964, %15963 ]
  %15722 = phi ptr [ %88, %15710 ], [ %15965, %15963 ]
  %15723 = phi i64 [ 0, %15710 ], [ %15966, %15963 ]
  %15724 = getelementptr inbounds %struct._PixelPacket, ptr %15721, i64 0, i32 2
  %15725 = load i16, ptr %15724, align 2, !tbaa !29, !alias.scope !1093, !noalias !1096
  %15726 = uitofp i16 %15725 to float
  %15727 = fmul fast float %15726, 0x3F8FF82000000000
  %15728 = fpext float %15727 to double
  %15729 = fadd fast double %15728, 5.000000e-01
  %15730 = fptoui double %15729 to i64
  %15731 = and i64 %15730, 4294967295
  tail call void @llvm.experimental.noalias.scope.decl(metadata !1101)
  %15732 = icmp eq i64 %15720, 0
  br i1 %15732, label %15733, label %15734

15733:                                            ; preds = %15719
  store i64 32, ptr %15711, align 8, !tbaa !69, !noalias !1104
  br label %15734

15734:                                            ; preds = %15719, %15733
  %15735 = phi i64 [ 32, %15733 ], [ %15720, %15719 ]
  %15736 = load i32, ptr %15713, align 8, !tbaa !91, !noalias !1104
  br label %15737

15737:                                            ; preds = %15779, %15734
  %15738 = phi i32 [ %15736, %15734 ], [ %15780, %15779 ]
  %15739 = phi i64 [ %15735, %15734 ], [ %15781, %15779 ]
  %15740 = phi i64 [ 10, %15734 ], [ %15753, %15779 ]
  %15741 = phi ptr [ %15722, %15734 ], [ %15782, %15779 ]
  %15742 = tail call i64 @llvm.umin.i64(i64 %15740, i64 %15739)
  %15743 = sub nsw i64 10, %15740
  %15744 = lshr i64 %15731, %15743
  %15745 = getelementptr inbounds i32, ptr %15718, i64 %15742
  %15746 = load i32, ptr %15745, align 4, !tbaa !93, !noalias !1101
  %15747 = zext i32 %15746 to i64
  %15748 = and i64 %15744, %15747
  %15749 = sub i64 32, %15739
  %15750 = shl i64 %15748, %15749
  %15751 = trunc i64 %15750 to i32
  %15752 = or i32 %15738, %15751
  store i32 %15752, ptr %15713, align 8, !tbaa !91, !noalias !1104
  %15753 = sub nsw i64 %15740, %15742
  %15754 = sub i64 %15739, %15742
  %15755 = icmp ugt i64 %15739, %15740
  br i1 %15755, label %15779, label %15756

15756:                                            ; preds = %15737
  %15757 = load i32, ptr %15714, align 8, !tbaa !51, !noalias !1104
  %15758 = icmp eq i32 %15757, 1
  %15759 = lshr i32 %15752, 16
  br i1 %15758, label %15760, label %15763

15760:                                            ; preds = %15756
  %15761 = lshr i32 %15752, 8
  %15762 = lshr i32 %15752, 24
  br label %15766

15763:                                            ; preds = %15756
  %15764 = lshr i32 %15752, 24
  %15765 = lshr i32 %15752, 8
  br label %15766

15766:                                            ; preds = %15763, %15760
  %15767 = phi i32 [ %15752, %15760 ], [ %15764, %15763 ]
  %15768 = phi i32 [ %15761, %15760 ], [ %15759, %15763 ]
  %15769 = phi i32 [ %15759, %15760 ], [ %15765, %15763 ]
  %15770 = phi i32 [ %15762, %15760 ], [ %15752, %15763 ]
  %15771 = trunc i32 %15770 to i8
  %15772 = trunc i32 %15769 to i8
  %15773 = trunc i32 %15768 to i8
  %15774 = trunc i32 %15767 to i8
  store i8 %15774, ptr %15741, align 1, !alias.scope !1105, !noalias !1093
  %15775 = getelementptr inbounds i8, ptr %15741, i64 1
  store i8 %15773, ptr %15775, align 1, !alias.scope !1105, !noalias !1093
  %15776 = getelementptr inbounds i8, ptr %15741, i64 2
  store i8 %15772, ptr %15776, align 1, !alias.scope !1105, !noalias !1093
  %15777 = getelementptr inbounds i8, ptr %15741, i64 3
  store i8 %15771, ptr %15777, align 1, !alias.scope !1105, !noalias !1093
  %15778 = getelementptr inbounds i8, ptr %15741, i64 4
  store i32 0, ptr %15713, align 8, !tbaa !91, !noalias !1104
  br label %15779

15779:                                            ; preds = %15766, %15737
  %15780 = phi i32 [ 0, %15766 ], [ %15752, %15737 ]
  %15781 = phi i64 [ 32, %15766 ], [ %15754, %15737 ]
  %15782 = phi ptr [ %15778, %15766 ], [ %15741, %15737 ]
  %15783 = icmp sgt i64 %15753, 0
  br i1 %15783, label %15737, label %15784, !llvm.loop !95

15784:                                            ; preds = %15779
  %15785 = getelementptr inbounds %struct._PixelPacket, ptr %15721, i64 0, i32 1
  %15786 = load i16, ptr %15785, align 2, !tbaa !30, !alias.scope !1093, !noalias !1096
  %15787 = uitofp i16 %15786 to float
  %15788 = fmul fast float %15787, 0x3F8FF82000000000
  %15789 = fpext float %15788 to double
  %15790 = fadd fast double %15789, 5.000000e-01
  %15791 = fptoui double %15790 to i64
  %15792 = and i64 %15791, 4294967295
  tail call void @llvm.experimental.noalias.scope.decl(metadata !1106)
  %15793 = icmp eq i64 %15781, 0
  %15794 = select i1 %15793, i64 32, i64 %15781
  %15795 = load i32, ptr %15713, align 8, !tbaa !91, !noalias !1109
  br label %15796

15796:                                            ; preds = %15838, %15784
  %15797 = phi i32 [ %15795, %15784 ], [ %15839, %15838 ]
  %15798 = phi i64 [ %15794, %15784 ], [ %15840, %15838 ]
  %15799 = phi i64 [ 10, %15784 ], [ %15812, %15838 ]
  %15800 = phi ptr [ %15782, %15784 ], [ %15841, %15838 ]
  %15801 = tail call i64 @llvm.umin.i64(i64 %15799, i64 %15798)
  %15802 = sub nsw i64 10, %15799
  %15803 = lshr i64 %15792, %15802
  %15804 = getelementptr inbounds i32, ptr %15718, i64 %15801
  %15805 = load i32, ptr %15804, align 4, !tbaa !93, !noalias !1106
  %15806 = zext i32 %15805 to i64
  %15807 = and i64 %15803, %15806
  %15808 = sub i64 32, %15798
  %15809 = shl i64 %15807, %15808
  %15810 = trunc i64 %15809 to i32
  %15811 = or i32 %15797, %15810
  store i32 %15811, ptr %15713, align 8, !tbaa !91, !noalias !1109
  %15812 = sub nsw i64 %15799, %15801
  %15813 = sub i64 %15798, %15801
  %15814 = icmp ugt i64 %15798, %15799
  br i1 %15814, label %15838, label %15815

15815:                                            ; preds = %15796
  %15816 = load i32, ptr %15714, align 8, !tbaa !51, !noalias !1109
  %15817 = icmp eq i32 %15816, 1
  %15818 = lshr i32 %15811, 16
  br i1 %15817, label %15819, label %15822

15819:                                            ; preds = %15815
  %15820 = lshr i32 %15811, 8
  %15821 = lshr i32 %15811, 24
  br label %15825

15822:                                            ; preds = %15815
  %15823 = lshr i32 %15811, 24
  %15824 = lshr i32 %15811, 8
  br label %15825

15825:                                            ; preds = %15822, %15819
  %15826 = phi i32 [ %15811, %15819 ], [ %15823, %15822 ]
  %15827 = phi i32 [ %15820, %15819 ], [ %15818, %15822 ]
  %15828 = phi i32 [ %15818, %15819 ], [ %15824, %15822 ]
  %15829 = phi i32 [ %15821, %15819 ], [ %15811, %15822 ]
  %15830 = trunc i32 %15829 to i8
  %15831 = trunc i32 %15828 to i8
  %15832 = trunc i32 %15827 to i8
  %15833 = trunc i32 %15826 to i8
  store i8 %15833, ptr %15800, align 1, !alias.scope !1110, !noalias !1093
  %15834 = getelementptr inbounds i8, ptr %15800, i64 1
  store i8 %15832, ptr %15834, align 1, !alias.scope !1110, !noalias !1093
  %15835 = getelementptr inbounds i8, ptr %15800, i64 2
  store i8 %15831, ptr %15835, align 1, !alias.scope !1110, !noalias !1093
  %15836 = getelementptr inbounds i8, ptr %15800, i64 3
  store i8 %15830, ptr %15836, align 1, !alias.scope !1110, !noalias !1093
  %15837 = getelementptr inbounds i8, ptr %15800, i64 4
  store i32 0, ptr %15713, align 8, !tbaa !91, !noalias !1109
  br label %15838

15838:                                            ; preds = %15825, %15796
  %15839 = phi i32 [ 0, %15825 ], [ %15811, %15796 ]
  %15840 = phi i64 [ 32, %15825 ], [ %15813, %15796 ]
  %15841 = phi ptr [ %15837, %15825 ], [ %15800, %15796 ]
  %15842 = icmp sgt i64 %15812, 0
  br i1 %15842, label %15796, label %15843, !llvm.loop !95

15843:                                            ; preds = %15838
  %15844 = load i16, ptr %15721, align 2, !tbaa !31, !alias.scope !1093, !noalias !1096
  %15845 = uitofp i16 %15844 to float
  %15846 = fmul fast float %15845, 0x3F8FF82000000000
  %15847 = fpext float %15846 to double
  %15848 = fadd fast double %15847, 5.000000e-01
  %15849 = fptoui double %15848 to i64
  %15850 = and i64 %15849, 4294967295
  tail call void @llvm.experimental.noalias.scope.decl(metadata !1111)
  %15851 = icmp eq i64 %15840, 0
  br i1 %15851, label %15852, label %15853

15852:                                            ; preds = %15843
  store i64 32, ptr %15711, align 8, !tbaa !69, !noalias !1114
  br label %15853

15853:                                            ; preds = %15843, %15852
  %15854 = phi i64 [ 32, %15852 ], [ %15840, %15843 ]
  %15855 = load i32, ptr %15713, align 8, !tbaa !91, !noalias !1114
  br label %15856

15856:                                            ; preds = %15898, %15853
  %15857 = phi i32 [ %15855, %15853 ], [ %15899, %15898 ]
  %15858 = phi i64 [ %15854, %15853 ], [ %15900, %15898 ]
  %15859 = phi i64 [ 10, %15853 ], [ %15872, %15898 ]
  %15860 = phi ptr [ %15841, %15853 ], [ %15901, %15898 ]
  %15861 = tail call i64 @llvm.umin.i64(i64 %15859, i64 %15858)
  %15862 = sub nsw i64 10, %15859
  %15863 = lshr i64 %15850, %15862
  %15864 = getelementptr inbounds i32, ptr %15718, i64 %15861
  %15865 = load i32, ptr %15864, align 4, !tbaa !93, !noalias !1111
  %15866 = zext i32 %15865 to i64
  %15867 = and i64 %15863, %15866
  %15868 = sub i64 32, %15858
  %15869 = shl i64 %15867, %15868
  %15870 = trunc i64 %15869 to i32
  %15871 = or i32 %15857, %15870
  store i32 %15871, ptr %15713, align 8, !tbaa !91, !noalias !1114
  %15872 = sub nsw i64 %15859, %15861
  %15873 = sub i64 %15858, %15861
  %15874 = icmp ugt i64 %15858, %15859
  br i1 %15874, label %15898, label %15875

15875:                                            ; preds = %15856
  %15876 = load i32, ptr %15714, align 8, !tbaa !51, !noalias !1114
  %15877 = icmp eq i32 %15876, 1
  %15878 = lshr i32 %15871, 16
  br i1 %15877, label %15879, label %15882

15879:                                            ; preds = %15875
  %15880 = lshr i32 %15871, 8
  %15881 = lshr i32 %15871, 24
  br label %15885

15882:                                            ; preds = %15875
  %15883 = lshr i32 %15871, 24
  %15884 = lshr i32 %15871, 8
  br label %15885

15885:                                            ; preds = %15882, %15879
  %15886 = phi i32 [ %15871, %15879 ], [ %15883, %15882 ]
  %15887 = phi i32 [ %15880, %15879 ], [ %15878, %15882 ]
  %15888 = phi i32 [ %15878, %15879 ], [ %15884, %15882 ]
  %15889 = phi i32 [ %15881, %15879 ], [ %15871, %15882 ]
  %15890 = trunc i32 %15889 to i8
  %15891 = trunc i32 %15888 to i8
  %15892 = trunc i32 %15887 to i8
  %15893 = trunc i32 %15886 to i8
  store i8 %15893, ptr %15860, align 1, !alias.scope !1115, !noalias !1093
  %15894 = getelementptr inbounds i8, ptr %15860, i64 1
  store i8 %15892, ptr %15894, align 1, !alias.scope !1115, !noalias !1093
  %15895 = getelementptr inbounds i8, ptr %15860, i64 2
  store i8 %15891, ptr %15895, align 1, !alias.scope !1115, !noalias !1093
  %15896 = getelementptr inbounds i8, ptr %15860, i64 3
  store i8 %15890, ptr %15896, align 1, !alias.scope !1115, !noalias !1093
  %15897 = getelementptr inbounds i8, ptr %15860, i64 4
  store i32 0, ptr %15713, align 8, !tbaa !91, !noalias !1114
  br label %15898

15898:                                            ; preds = %15885, %15856
  %15899 = phi i32 [ 0, %15885 ], [ %15871, %15856 ]
  %15900 = phi i64 [ 32, %15885 ], [ %15873, %15856 ]
  %15901 = phi ptr [ %15897, %15885 ], [ %15860, %15856 ]
  %15902 = icmp sgt i64 %15872, 0
  br i1 %15902, label %15856, label %15903, !llvm.loop !95

15903:                                            ; preds = %15898
  %15904 = getelementptr inbounds %struct._PixelPacket, ptr %15721, i64 0, i32 3
  %15905 = load i16, ptr %15904, align 2, !tbaa !28, !alias.scope !1093, !noalias !1096
  %15906 = xor i16 %15905, -1
  %15907 = uitofp i16 %15906 to float
  %15908 = fmul fast float %15907, 0x3F8FF82000000000
  %15909 = fpext float %15908 to double
  %15910 = fadd fast double %15909, 5.000000e-01
  %15911 = fptoui double %15910 to i64
  %15912 = and i64 %15911, 4294967295
  tail call void @llvm.experimental.noalias.scope.decl(metadata !1116)
  %15913 = icmp eq i64 %15900, 0
  %15914 = select i1 %15913, i64 32, i64 %15900
  %15915 = load i32, ptr %15713, align 8, !tbaa !91, !noalias !1119
  br label %15916

15916:                                            ; preds = %15958, %15903
  %15917 = phi i32 [ %15915, %15903 ], [ %15959, %15958 ]
  %15918 = phi i64 [ %15914, %15903 ], [ %15960, %15958 ]
  %15919 = phi i64 [ 10, %15903 ], [ %15932, %15958 ]
  %15920 = phi ptr [ %15901, %15903 ], [ %15961, %15958 ]
  %15921 = tail call i64 @llvm.umin.i64(i64 %15919, i64 %15918)
  %15922 = sub nsw i64 10, %15919
  %15923 = lshr i64 %15912, %15922
  %15924 = getelementptr inbounds i32, ptr %15718, i64 %15921
  %15925 = load i32, ptr %15924, align 4, !tbaa !93, !noalias !1116
  %15926 = zext i32 %15925 to i64
  %15927 = and i64 %15923, %15926
  %15928 = sub i64 32, %15918
  %15929 = shl i64 %15927, %15928
  %15930 = trunc i64 %15929 to i32
  %15931 = or i32 %15917, %15930
  store i32 %15931, ptr %15713, align 8, !tbaa !91, !noalias !1119
  %15932 = sub nsw i64 %15919, %15921
  %15933 = sub i64 %15918, %15921
  %15934 = icmp ugt i64 %15918, %15919
  br i1 %15934, label %15958, label %15935

15935:                                            ; preds = %15916
  %15936 = load i32, ptr %15714, align 8, !tbaa !51, !noalias !1119
  %15937 = icmp eq i32 %15936, 1
  %15938 = lshr i32 %15931, 16
  br i1 %15937, label %15939, label %15942

15939:                                            ; preds = %15935
  %15940 = lshr i32 %15931, 8
  %15941 = lshr i32 %15931, 24
  br label %15945

15942:                                            ; preds = %15935
  %15943 = lshr i32 %15931, 24
  %15944 = lshr i32 %15931, 8
  br label %15945

15945:                                            ; preds = %15942, %15939
  %15946 = phi i32 [ %15931, %15939 ], [ %15943, %15942 ]
  %15947 = phi i32 [ %15940, %15939 ], [ %15938, %15942 ]
  %15948 = phi i32 [ %15938, %15939 ], [ %15944, %15942 ]
  %15949 = phi i32 [ %15941, %15939 ], [ %15931, %15942 ]
  %15950 = trunc i32 %15949 to i8
  %15951 = trunc i32 %15948 to i8
  %15952 = trunc i32 %15947 to i8
  %15953 = trunc i32 %15946 to i8
  store i8 %15953, ptr %15920, align 1, !alias.scope !1120, !noalias !1093
  %15954 = getelementptr inbounds i8, ptr %15920, i64 1
  store i8 %15952, ptr %15954, align 1, !alias.scope !1120, !noalias !1093
  %15955 = getelementptr inbounds i8, ptr %15920, i64 2
  store i8 %15951, ptr %15955, align 1, !alias.scope !1120, !noalias !1093
  %15956 = getelementptr inbounds i8, ptr %15920, i64 3
  store i8 %15950, ptr %15956, align 1, !alias.scope !1120, !noalias !1093
  %15957 = getelementptr inbounds i8, ptr %15920, i64 4
  store i32 0, ptr %15713, align 8, !tbaa !91, !noalias !1119
  br label %15958

15958:                                            ; preds = %15945, %15916
  %15959 = phi i32 [ 0, %15945 ], [ %15931, %15916 ]
  %15960 = phi i64 [ 32, %15945 ], [ %15933, %15916 ]
  %15961 = phi ptr [ %15957, %15945 ], [ %15920, %15916 ]
  %15962 = icmp sgt i64 %15932, 0
  br i1 %15962, label %15916, label %15963, !llvm.loop !95

15963:                                            ; preds = %15958
  store i64 %15960, ptr %15711, align 8, !tbaa !69, !noalias !1119
  %15964 = getelementptr inbounds %struct._PixelPacket, ptr %15721, i64 1
  %15965 = getelementptr inbounds i8, ptr %15961, i64 %15717
  %15966 = add nuw nsw i64 %15723, 1
  %15967 = icmp eq i64 %15966, %164
  br i1 %15967, label %17787, label %15719, !llvm.loop !1121

15968:                                            ; preds = %16118, %15704
  %15969 = phi i64 [ %15707, %15704 ], [ %16114, %16118 ]
  %15970 = phi ptr [ %166, %15704 ], [ %16119, %16118 ]
  %15971 = phi ptr [ %88, %15704 ], [ %16120, %16118 ]
  %15972 = phi i64 [ 0, %15704 ], [ %16121, %16118 ]
  %15973 = getelementptr inbounds %struct._PixelPacket, ptr %15970, i64 0, i32 2
  %15974 = load i16, ptr %15973, align 2, !tbaa !29, !alias.scope !1093, !noalias !1096
  %15975 = uitofp i16 %15974 to float
  %15976 = fmul fast float %15975, 0x3F8FF82000000000
  %15977 = fpext float %15976 to double
  %15978 = fadd fast double %15977, 5.000000e-01
  %15979 = fptoui double %15978 to i64
  %15980 = and i64 %15979, 4294967295
  tail call void @llvm.experimental.noalias.scope.decl(metadata !1122)
  %15981 = icmp eq i64 %15969, 0
  br i1 %15981, label %15982, label %15983

15982:                                            ; preds = %15968
  store i64 8, ptr %15705, align 8, !tbaa !69, !noalias !1125
  br label %15983

15983:                                            ; preds = %15968, %15982
  %15984 = phi i64 [ %15969, %15968 ], [ 8, %15982 ]
  br label %15985

15985:                                            ; preds = %15983, %15995
  %15986 = phi i64 [ %16006, %15995 ], [ %15984, %15983 ]
  %15987 = phi i64 [ %15991, %15995 ], [ 10, %15983 ]
  %15988 = phi ptr [ %16008, %15995 ], [ %15971, %15983 ]
  %15989 = tail call i64 @llvm.umin.i64(i64 %15987, i64 %15986)
  %15990 = sub nsw i64 %15987, %15989
  %15991 = tail call i64 @llvm.smax.i64(i64 %15990, i64 0)
  %15992 = icmp eq i64 %15986, 8
  br i1 %15992, label %15995, label %15993

15993:                                            ; preds = %15985
  %15994 = load i8, ptr %15988, align 1, !tbaa !48, !alias.scope !1126, !noalias !1093
  br label %15995

15995:                                            ; preds = %15993, %15985
  %15996 = phi i8 [ %15994, %15993 ], [ 0, %15985 ]
  %15997 = sub i64 %15986, %15989
  %15998 = lshr i64 %15980, %15991
  %15999 = shl nsw i64 -1, %15989
  %16000 = xor i64 %15999, -1
  %16001 = and i64 %15998, %16000
  %16002 = shl i64 %16001, %15997
  %16003 = trunc i64 %16002 to i8
  %16004 = or i8 %15996, %16003
  store i8 %16004, ptr %15988, align 1, !tbaa !48, !alias.scope !1126, !noalias !1093
  %16005 = icmp ule i64 %15986, %15987
  %16006 = select i1 %16005, i64 8, i64 %15997
  %16007 = zext i1 %16005 to i64
  %16008 = getelementptr inbounds i8, ptr %15988, i64 %16007
  %16009 = icmp slt i64 %15990, 1
  br i1 %16009, label %16010, label %15985, !llvm.loop !75

16010:                                            ; preds = %15995
  %16011 = getelementptr inbounds %struct._PixelPacket, ptr %15970, i64 0, i32 1
  %16012 = load i16, ptr %16011, align 2, !tbaa !30, !alias.scope !1093, !noalias !1096
  %16013 = uitofp i16 %16012 to float
  %16014 = fmul fast float %16013, 0x3F8FF82000000000
  %16015 = fpext float %16014 to double
  %16016 = fadd fast double %16015, 5.000000e-01
  %16017 = fptoui double %16016 to i64
  %16018 = and i64 %16017, 4294967295
  %16019 = icmp eq i64 %16006, 0
  %16020 = select i1 %16019, i64 8, i64 %16006
  br label %16021

16021:                                            ; preds = %16010, %16031
  %16022 = phi i64 [ %16042, %16031 ], [ %16020, %16010 ]
  %16023 = phi i64 [ %16027, %16031 ], [ 10, %16010 ]
  %16024 = phi ptr [ %16044, %16031 ], [ %16008, %16010 ]
  %16025 = tail call i64 @llvm.umin.i64(i64 %16023, i64 %16022)
  %16026 = sub nsw i64 %16023, %16025
  %16027 = tail call i64 @llvm.smax.i64(i64 %16026, i64 0)
  %16028 = icmp eq i64 %16022, 8
  br i1 %16028, label %16031, label %16029

16029:                                            ; preds = %16021
  %16030 = load i8, ptr %16024, align 1, !tbaa !48, !alias.scope !1127, !noalias !1093
  br label %16031

16031:                                            ; preds = %16029, %16021
  %16032 = phi i8 [ %16030, %16029 ], [ 0, %16021 ]
  %16033 = sub i64 %16022, %16025
  %16034 = lshr i64 %16018, %16027
  %16035 = shl nsw i64 -1, %16025
  %16036 = xor i64 %16035, -1
  %16037 = and i64 %16034, %16036
  %16038 = shl i64 %16037, %16033
  %16039 = trunc i64 %16038 to i8
  %16040 = or i8 %16032, %16039
  store i8 %16040, ptr %16024, align 1, !tbaa !48, !alias.scope !1127, !noalias !1093
  %16041 = icmp ule i64 %16022, %16023
  %16042 = select i1 %16041, i64 8, i64 %16033
  %16043 = zext i1 %16041 to i64
  %16044 = getelementptr inbounds i8, ptr %16024, i64 %16043
  %16045 = icmp slt i64 %16026, 1
  br i1 %16045, label %16046, label %16021, !llvm.loop !75

16046:                                            ; preds = %16031
  %16047 = load i16, ptr %15970, align 2, !tbaa !31, !alias.scope !1093, !noalias !1096
  %16048 = uitofp i16 %16047 to float
  %16049 = fmul fast float %16048, 0x3F8FF82000000000
  %16050 = fpext float %16049 to double
  %16051 = fadd fast double %16050, 5.000000e-01
  %16052 = fptoui double %16051 to i64
  %16053 = and i64 %16052, 4294967295
  %16054 = icmp eq i64 %16042, 0
  %16055 = select i1 %16054, i64 8, i64 %16042
  br label %16056

16056:                                            ; preds = %16046, %16066
  %16057 = phi i64 [ %16077, %16066 ], [ %16055, %16046 ]
  %16058 = phi i64 [ %16062, %16066 ], [ 10, %16046 ]
  %16059 = phi ptr [ %16079, %16066 ], [ %16044, %16046 ]
  %16060 = tail call i64 @llvm.umin.i64(i64 %16058, i64 %16057)
  %16061 = sub nsw i64 %16058, %16060
  %16062 = tail call i64 @llvm.smax.i64(i64 %16061, i64 0)
  %16063 = icmp eq i64 %16057, 8
  br i1 %16063, label %16066, label %16064

16064:                                            ; preds = %16056
  %16065 = load i8, ptr %16059, align 1, !tbaa !48, !alias.scope !1130, !noalias !1093
  br label %16066

16066:                                            ; preds = %16064, %16056
  %16067 = phi i8 [ %16065, %16064 ], [ 0, %16056 ]
  %16068 = sub i64 %16057, %16060
  %16069 = lshr i64 %16053, %16062
  %16070 = shl nsw i64 -1, %16060
  %16071 = xor i64 %16070, -1
  %16072 = and i64 %16069, %16071
  %16073 = shl i64 %16072, %16068
  %16074 = trunc i64 %16073 to i8
  %16075 = or i8 %16067, %16074
  store i8 %16075, ptr %16059, align 1, !tbaa !48, !alias.scope !1130, !noalias !1093
  %16076 = icmp ule i64 %16057, %16058
  %16077 = select i1 %16076, i64 8, i64 %16068
  %16078 = zext i1 %16076 to i64
  %16079 = getelementptr inbounds i8, ptr %16059, i64 %16078
  %16080 = icmp slt i64 %16061, 1
  br i1 %16080, label %16081, label %16056, !llvm.loop !75

16081:                                            ; preds = %16066
  %16082 = getelementptr inbounds %struct._PixelPacket, ptr %15970, i64 0, i32 3
  %16083 = load i16, ptr %16082, align 2, !tbaa !28, !alias.scope !1093, !noalias !1096
  %16084 = xor i16 %16083, -1
  %16085 = uitofp i16 %16084 to float
  %16086 = fmul fast float %16085, 0x3F8FF82000000000
  %16087 = fpext float %16086 to double
  %16088 = fadd fast double %16087, 5.000000e-01
  %16089 = fptoui double %16088 to i64
  %16090 = and i64 %16089, 4294967295
  tail call void @llvm.experimental.noalias.scope.decl(metadata !1133)
  %16091 = icmp eq i64 %16077, 0
  %16092 = select i1 %16091, i64 8, i64 %16077
  br label %16093

16093:                                            ; preds = %16081, %16103
  %16094 = phi i64 [ %16114, %16103 ], [ %16092, %16081 ]
  %16095 = phi i64 [ %16099, %16103 ], [ 10, %16081 ]
  %16096 = phi ptr [ %16116, %16103 ], [ %16079, %16081 ]
  %16097 = tail call i64 @llvm.umin.i64(i64 %16095, i64 %16094)
  %16098 = sub nsw i64 %16095, %16097
  %16099 = tail call i64 @llvm.smax.i64(i64 %16098, i64 0)
  %16100 = icmp eq i64 %16094, 8
  br i1 %16100, label %16103, label %16101

16101:                                            ; preds = %16093
  %16102 = load i8, ptr %16096, align 1, !tbaa !48, !alias.scope !1136, !noalias !1093
  br label %16103

16103:                                            ; preds = %16101, %16093
  %16104 = phi i8 [ %16102, %16101 ], [ 0, %16093 ]
  %16105 = sub i64 %16094, %16097
  %16106 = lshr i64 %16090, %16099
  %16107 = shl nsw i64 -1, %16097
  %16108 = xor i64 %16107, -1
  %16109 = and i64 %16106, %16108
  %16110 = shl i64 %16109, %16105
  %16111 = trunc i64 %16110 to i8
  %16112 = or i8 %16104, %16111
  store i8 %16112, ptr %16096, align 1, !tbaa !48, !alias.scope !1136, !noalias !1093
  %16113 = icmp ule i64 %16094, %16095
  %16114 = select i1 %16113, i64 8, i64 %16105
  %16115 = zext i1 %16113 to i64
  %16116 = getelementptr inbounds i8, ptr %16096, i64 %16115
  %16117 = icmp slt i64 %16098, 1
  br i1 %16117, label %16118, label %16093, !llvm.loop !75

16118:                                            ; preds = %16103
  store i64 %16114, ptr %15705, align 8, !tbaa !69, !noalias !1137
  %16119 = getelementptr inbounds %struct._PixelPacket, ptr %15970, i64 1
  %16120 = getelementptr inbounds i8, ptr %16116, i64 %15708
  %16121 = add nuw nsw i64 %15972, 1
  %16122 = icmp eq i64 %16121, %164
  br i1 %16122, label %17787, label %15968, !llvm.loop !1138

16123:                                            ; preds = %15411
  %16124 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 2
  %16125 = load i32, ptr %16124, align 8, !tbaa !50, !noalias !1098
  %16126 = icmp eq i32 %16125, 1
  %16127 = icmp sgt i64 %164, 0
  br i1 %16126, label %16135, label %16128

16128:                                            ; preds = %16123
  br i1 %16127, label %16129, label %17787

16129:                                            ; preds = %16128
  %16130 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %16131 = load i32, ptr %16130, align 8, !tbaa !51, !noalias !1098
  %16132 = icmp eq i32 %16131, 1
  %16133 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %16134 = load i64, ptr %16133, align 8, !tbaa !47, !noalias !1098
  br label %16446

16135:                                            ; preds = %16123
  br i1 %16127, label %16136, label %17787

16136:                                            ; preds = %16135
  %16137 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %16138 = load i32, ptr %16137, align 8, !tbaa !51, !noalias !1098
  %16139 = icmp eq i32 %16138, 1
  %16140 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %16141 = load i64, ptr %16140, align 8, !tbaa !47, !noalias !1098
  br label %16142

16142:                                            ; preds = %16433, %16136
  %16143 = phi ptr [ %166, %16136 ], [ %16442, %16433 ]
  %16144 = phi ptr [ %88, %16136 ], [ %16443, %16433 ]
  %16145 = phi i64 [ 0, %16136 ], [ %16444, %16433 ]
  %16146 = getelementptr inbounds %struct._PixelPacket, ptr %16143, i64 0, i32 2
  %16147 = load i16, ptr %16146, align 2, !tbaa !29, !alias.scope !1093, !noalias !1096
  %16148 = uitofp i16 %16147 to double
  %16149 = fmul fast double %16148, 0x3EF0001000100010
  %16150 = fptrunc double %16149 to float
  %16151 = bitcast float %16150 to i32
  %16152 = lshr i32 %16151, 16
  %16153 = and i32 %16152, 32768
  %16154 = lshr i32 %16151, 23
  %16155 = and i32 %16154, 255
  %16156 = add nsw i32 %16155, -112
  %16157 = and i32 %16151, 8388607
  %16158 = icmp ult i32 %16155, 113
  br i1 %16158, label %16159, label %16176

16159:                                            ; preds = %16142
  %16160 = icmp ult i32 %16155, 102
  br i1 %16160, label %16173, label %16161

16161:                                            ; preds = %16159
  %16162 = or i32 %16157, 8388608
  %16163 = sub nuw nsw i32 126, %16155
  %16164 = sub nuw nsw i32 125, %16155
  %16165 = shl nsw i32 -1, %16164
  %16166 = xor i32 %16165, -1
  %16167 = add nuw nsw i32 %16162, %16166
  %16168 = lshr i32 %16162, %16163
  %16169 = and i32 %16168, 1
  %16170 = add nuw nsw i32 %16167, %16169
  %16171 = lshr i32 %16170, %16163
  %16172 = or i32 %16171, %16153
  br label %16173

16173:                                            ; preds = %16161, %16159
  %16174 = phi i32 [ %16172, %16161 ], [ %16153, %16159 ]
  %16175 = trunc i32 %16174 to i16
  br label %16211

16176:                                            ; preds = %16142
  %16177 = icmp eq i32 %16156, 143
  br i1 %16177, label %16178, label %16191

16178:                                            ; preds = %16176
  %16179 = icmp eq i32 %16157, 0
  br i1 %16179, label %16180, label %16183

16180:                                            ; preds = %16178
  %16181 = trunc i32 %16153 to i16
  %16182 = or i16 %16181, 31744
  br label %16211

16183:                                            ; preds = %16178
  %16184 = lshr i32 %16157, 13
  %16185 = icmp ult i32 %16157, 8192
  %16186 = zext i1 %16185 to i32
  %16187 = or i32 %16184, %16186
  %16188 = or i32 %16187, %16153
  %16189 = trunc i32 %16188 to i16
  %16190 = or i16 %16189, 31744
  br label %16211

16191:                                            ; preds = %16176
  %16192 = lshr i32 %16151, 13
  %16193 = and i32 %16192, 1
  %16194 = add nuw nsw i32 %16157, 4095
  %16195 = add nuw nsw i32 %16194, %16193
  %16196 = and i32 %16195, 8388608
  %16197 = icmp eq i32 %16196, 0
  %16198 = add nsw i32 %16155, -111
  %16199 = select i1 %16197, i32 %16156, i32 %16198
  %16200 = icmp ugt i32 %16199, 30
  br i1 %16200, label %16201, label %16204

16201:                                            ; preds = %16191
  %16202 = trunc i32 %16153 to i16
  %16203 = or i16 %16202, 31744
  br label %16211

16204:                                            ; preds = %16191
  %16205 = lshr i32 %16195, 13
  %16206 = shl nuw nsw i32 %16199, 10
  %16207 = select i1 %16197, i32 %16205, i32 0
  %16208 = or i32 %16207, %16206
  %16209 = or i32 %16208, %16153
  %16210 = trunc i32 %16209 to i16
  br label %16211

16211:                                            ; preds = %16204, %16201, %16183, %16180, %16173
  %16212 = phi i16 [ %16175, %16173 ], [ %16182, %16180 ], [ %16190, %16183 ], [ %16203, %16201 ], [ %16210, %16204 ]
  %16213 = lshr i16 %16212, 8
  %16214 = select i1 %16139, i16 %16212, i16 %16213
  %16215 = select i1 %16139, i16 %16213, i16 %16212
  %16216 = trunc i16 %16215 to i8
  %16217 = trunc i16 %16214 to i8
  store i8 %16217, ptr %16144, align 1, !alias.scope !1096, !noalias !1093
  %16218 = getelementptr inbounds i8, ptr %16144, i64 1
  store i8 %16216, ptr %16218, align 1, !alias.scope !1096, !noalias !1093
  %16219 = getelementptr inbounds i8, ptr %16144, i64 2
  %16220 = getelementptr inbounds %struct._PixelPacket, ptr %16143, i64 0, i32 1
  %16221 = load i16, ptr %16220, align 2, !tbaa !30, !alias.scope !1093, !noalias !1096
  %16222 = uitofp i16 %16221 to double
  %16223 = fmul fast double %16222, 0x3EF0001000100010
  %16224 = fptrunc double %16223 to float
  %16225 = bitcast float %16224 to i32
  %16226 = lshr i32 %16225, 16
  %16227 = and i32 %16226, 32768
  %16228 = lshr i32 %16225, 23
  %16229 = and i32 %16228, 255
  %16230 = add nsw i32 %16229, -112
  %16231 = and i32 %16225, 8388607
  %16232 = icmp ult i32 %16229, 113
  br i1 %16232, label %16233, label %16250

16233:                                            ; preds = %16211
  %16234 = icmp ult i32 %16229, 102
  br i1 %16234, label %16247, label %16235

16235:                                            ; preds = %16233
  %16236 = or i32 %16231, 8388608
  %16237 = sub nuw nsw i32 126, %16229
  %16238 = sub nuw nsw i32 125, %16229
  %16239 = shl nsw i32 -1, %16238
  %16240 = xor i32 %16239, -1
  %16241 = add nuw nsw i32 %16236, %16240
  %16242 = lshr i32 %16236, %16237
  %16243 = and i32 %16242, 1
  %16244 = add nuw nsw i32 %16241, %16243
  %16245 = lshr i32 %16244, %16237
  %16246 = or i32 %16245, %16227
  br label %16247

16247:                                            ; preds = %16235, %16233
  %16248 = phi i32 [ %16246, %16235 ], [ %16227, %16233 ]
  %16249 = trunc i32 %16248 to i16
  br label %16285

16250:                                            ; preds = %16211
  %16251 = icmp eq i32 %16230, 143
  br i1 %16251, label %16252, label %16265

16252:                                            ; preds = %16250
  %16253 = icmp eq i32 %16231, 0
  br i1 %16253, label %16254, label %16257

16254:                                            ; preds = %16252
  %16255 = trunc i32 %16227 to i16
  %16256 = or i16 %16255, 31744
  br label %16285

16257:                                            ; preds = %16252
  %16258 = lshr i32 %16231, 13
  %16259 = icmp ult i32 %16231, 8192
  %16260 = zext i1 %16259 to i32
  %16261 = or i32 %16258, %16260
  %16262 = or i32 %16261, %16227
  %16263 = trunc i32 %16262 to i16
  %16264 = or i16 %16263, 31744
  br label %16285

16265:                                            ; preds = %16250
  %16266 = lshr i32 %16225, 13
  %16267 = and i32 %16266, 1
  %16268 = add nuw nsw i32 %16231, 4095
  %16269 = add nuw nsw i32 %16268, %16267
  %16270 = and i32 %16269, 8388608
  %16271 = icmp eq i32 %16270, 0
  %16272 = add nsw i32 %16229, -111
  %16273 = select i1 %16271, i32 %16230, i32 %16272
  %16274 = icmp ugt i32 %16273, 30
  br i1 %16274, label %16275, label %16278

16275:                                            ; preds = %16265
  %16276 = trunc i32 %16227 to i16
  %16277 = or i16 %16276, 31744
  br label %16285

16278:                                            ; preds = %16265
  %16279 = lshr i32 %16269, 13
  %16280 = shl nuw nsw i32 %16273, 10
  %16281 = select i1 %16271, i32 %16279, i32 0
  %16282 = or i32 %16281, %16280
  %16283 = or i32 %16282, %16227
  %16284 = trunc i32 %16283 to i16
  br label %16285

16285:                                            ; preds = %16278, %16275, %16257, %16254, %16247
  %16286 = phi i16 [ %16249, %16247 ], [ %16256, %16254 ], [ %16264, %16257 ], [ %16277, %16275 ], [ %16284, %16278 ]
  %16287 = lshr i16 %16286, 8
  %16288 = select i1 %16139, i16 %16286, i16 %16287
  %16289 = select i1 %16139, i16 %16287, i16 %16286
  %16290 = trunc i16 %16289 to i8
  %16291 = trunc i16 %16288 to i8
  store i8 %16291, ptr %16219, align 1, !alias.scope !1096, !noalias !1093
  %16292 = getelementptr inbounds i8, ptr %16144, i64 3
  store i8 %16290, ptr %16292, align 1, !alias.scope !1096, !noalias !1093
  %16293 = getelementptr inbounds i8, ptr %16144, i64 4
  %16294 = load i16, ptr %16143, align 2, !tbaa !31, !alias.scope !1093, !noalias !1096
  %16295 = uitofp i16 %16294 to double
  %16296 = fmul fast double %16295, 0x3EF0001000100010
  %16297 = fptrunc double %16296 to float
  %16298 = bitcast float %16297 to i32
  %16299 = lshr i32 %16298, 16
  %16300 = and i32 %16299, 32768
  %16301 = lshr i32 %16298, 23
  %16302 = and i32 %16301, 255
  %16303 = add nsw i32 %16302, -112
  %16304 = and i32 %16298, 8388607
  %16305 = icmp ult i32 %16302, 113
  br i1 %16305, label %16306, label %16323

16306:                                            ; preds = %16285
  %16307 = icmp ult i32 %16302, 102
  br i1 %16307, label %16320, label %16308

16308:                                            ; preds = %16306
  %16309 = or i32 %16304, 8388608
  %16310 = sub nuw nsw i32 126, %16302
  %16311 = sub nuw nsw i32 125, %16302
  %16312 = shl nsw i32 -1, %16311
  %16313 = xor i32 %16312, -1
  %16314 = add nuw nsw i32 %16309, %16313
  %16315 = lshr i32 %16309, %16310
  %16316 = and i32 %16315, 1
  %16317 = add nuw nsw i32 %16314, %16316
  %16318 = lshr i32 %16317, %16310
  %16319 = or i32 %16318, %16300
  br label %16320

16320:                                            ; preds = %16308, %16306
  %16321 = phi i32 [ %16319, %16308 ], [ %16300, %16306 ]
  %16322 = trunc i32 %16321 to i16
  br label %16358

16323:                                            ; preds = %16285
  %16324 = icmp eq i32 %16303, 143
  br i1 %16324, label %16325, label %16338

16325:                                            ; preds = %16323
  %16326 = icmp eq i32 %16304, 0
  br i1 %16326, label %16327, label %16330

16327:                                            ; preds = %16325
  %16328 = trunc i32 %16300 to i16
  %16329 = or i16 %16328, 31744
  br label %16358

16330:                                            ; preds = %16325
  %16331 = lshr i32 %16304, 13
  %16332 = icmp ult i32 %16304, 8192
  %16333 = zext i1 %16332 to i32
  %16334 = or i32 %16331, %16333
  %16335 = or i32 %16334, %16300
  %16336 = trunc i32 %16335 to i16
  %16337 = or i16 %16336, 31744
  br label %16358

16338:                                            ; preds = %16323
  %16339 = lshr i32 %16298, 13
  %16340 = and i32 %16339, 1
  %16341 = add nuw nsw i32 %16304, 4095
  %16342 = add nuw nsw i32 %16341, %16340
  %16343 = and i32 %16342, 8388608
  %16344 = icmp eq i32 %16343, 0
  %16345 = add nsw i32 %16302, -111
  %16346 = select i1 %16344, i32 %16303, i32 %16345
  %16347 = icmp ugt i32 %16346, 30
  br i1 %16347, label %16348, label %16351

16348:                                            ; preds = %16338
  %16349 = trunc i32 %16300 to i16
  %16350 = or i16 %16349, 31744
  br label %16358

16351:                                            ; preds = %16338
  %16352 = lshr i32 %16342, 13
  %16353 = shl nuw nsw i32 %16346, 10
  %16354 = select i1 %16344, i32 %16352, i32 0
  %16355 = or i32 %16354, %16353
  %16356 = or i32 %16355, %16300
  %16357 = trunc i32 %16356 to i16
  br label %16358

16358:                                            ; preds = %16351, %16348, %16330, %16327, %16320
  %16359 = phi i16 [ %16322, %16320 ], [ %16329, %16327 ], [ %16337, %16330 ], [ %16350, %16348 ], [ %16357, %16351 ]
  %16360 = lshr i16 %16359, 8
  %16361 = select i1 %16139, i16 %16359, i16 %16360
  %16362 = select i1 %16139, i16 %16360, i16 %16359
  %16363 = trunc i16 %16362 to i8
  %16364 = trunc i16 %16361 to i8
  store i8 %16364, ptr %16293, align 1, !alias.scope !1096, !noalias !1093
  %16365 = getelementptr inbounds i8, ptr %16144, i64 5
  store i8 %16363, ptr %16365, align 1, !alias.scope !1096, !noalias !1093
  %16366 = getelementptr inbounds i8, ptr %16144, i64 6
  %16367 = getelementptr inbounds %struct._PixelPacket, ptr %16143, i64 0, i32 3
  %16368 = load i16, ptr %16367, align 2, !tbaa !28, !alias.scope !1093, !noalias !1096
  %16369 = xor i16 %16368, -1
  %16370 = uitofp i16 %16369 to double
  %16371 = fmul fast double %16370, 0x3EF0001000100010
  %16372 = fptrunc double %16371 to float
  %16373 = bitcast float %16372 to i32
  %16374 = lshr i32 %16373, 16
  %16375 = and i32 %16374, 32768
  %16376 = lshr i32 %16373, 23
  %16377 = and i32 %16376, 255
  %16378 = add nsw i32 %16377, -112
  %16379 = and i32 %16373, 8388607
  %16380 = icmp ult i32 %16377, 113
  br i1 %16380, label %16381, label %16398

16381:                                            ; preds = %16358
  %16382 = icmp ult i32 %16377, 102
  br i1 %16382, label %16395, label %16383

16383:                                            ; preds = %16381
  %16384 = or i32 %16379, 8388608
  %16385 = sub nuw nsw i32 126, %16377
  %16386 = sub nuw nsw i32 125, %16377
  %16387 = shl nsw i32 -1, %16386
  %16388 = xor i32 %16387, -1
  %16389 = add nuw nsw i32 %16384, %16388
  %16390 = lshr i32 %16384, %16385
  %16391 = and i32 %16390, 1
  %16392 = add nuw nsw i32 %16389, %16391
  %16393 = lshr i32 %16392, %16385
  %16394 = or i32 %16393, %16375
  br label %16395

16395:                                            ; preds = %16383, %16381
  %16396 = phi i32 [ %16394, %16383 ], [ %16375, %16381 ]
  %16397 = trunc i32 %16396 to i16
  br label %16433

16398:                                            ; preds = %16358
  %16399 = icmp eq i32 %16378, 143
  br i1 %16399, label %16400, label %16413

16400:                                            ; preds = %16398
  %16401 = icmp eq i32 %16379, 0
  br i1 %16401, label %16402, label %16405

16402:                                            ; preds = %16400
  %16403 = trunc i32 %16375 to i16
  %16404 = or i16 %16403, 31744
  br label %16433

16405:                                            ; preds = %16400
  %16406 = lshr i32 %16379, 13
  %16407 = icmp ult i32 %16379, 8192
  %16408 = zext i1 %16407 to i32
  %16409 = or i32 %16406, %16408
  %16410 = or i32 %16409, %16375
  %16411 = trunc i32 %16410 to i16
  %16412 = or i16 %16411, 31744
  br label %16433

16413:                                            ; preds = %16398
  %16414 = lshr i32 %16373, 13
  %16415 = and i32 %16414, 1
  %16416 = add nuw nsw i32 %16379, 4095
  %16417 = add nuw nsw i32 %16416, %16415
  %16418 = and i32 %16417, 8388608
  %16419 = icmp eq i32 %16418, 0
  %16420 = add nsw i32 %16377, -111
  %16421 = select i1 %16419, i32 %16378, i32 %16420
  %16422 = icmp ugt i32 %16421, 30
  br i1 %16422, label %16423, label %16426

16423:                                            ; preds = %16413
  %16424 = trunc i32 %16375 to i16
  %16425 = or i16 %16424, 31744
  br label %16433

16426:                                            ; preds = %16413
  %16427 = lshr i32 %16417, 13
  %16428 = shl nuw nsw i32 %16421, 10
  %16429 = select i1 %16419, i32 %16427, i32 0
  %16430 = or i32 %16429, %16428
  %16431 = or i32 %16430, %16375
  %16432 = trunc i32 %16431 to i16
  br label %16433

16433:                                            ; preds = %16426, %16423, %16405, %16402, %16395
  %16434 = phi i16 [ %16397, %16395 ], [ %16404, %16402 ], [ %16412, %16405 ], [ %16425, %16423 ], [ %16432, %16426 ]
  %16435 = lshr i16 %16434, 8
  %16436 = select i1 %16139, i16 %16434, i16 %16435
  %16437 = select i1 %16139, i16 %16435, i16 %16434
  %16438 = trunc i16 %16437 to i8
  %16439 = trunc i16 %16436 to i8
  store i8 %16439, ptr %16366, align 1, !alias.scope !1096, !noalias !1093
  %16440 = getelementptr inbounds i8, ptr %16144, i64 7
  store i8 %16438, ptr %16440, align 1, !alias.scope !1096, !noalias !1093
  %16441 = getelementptr inbounds i8, ptr %16144, i64 8
  %16442 = getelementptr inbounds %struct._PixelPacket, ptr %16143, i64 1
  %16443 = getelementptr inbounds i8, ptr %16441, i64 %16141
  %16444 = add nuw nsw i64 %16145, 1
  %16445 = icmp eq i64 %16444, %164
  br i1 %16445, label %17787, label %16142, !llvm.loop !1139

16446:                                            ; preds = %16446, %16129
  %16447 = phi ptr [ %166, %16129 ], [ %16486, %16446 ]
  %16448 = phi ptr [ %88, %16129 ], [ %16487, %16446 ]
  %16449 = phi i64 [ 0, %16129 ], [ %16488, %16446 ]
  %16450 = getelementptr inbounds %struct._PixelPacket, ptr %16447, i64 0, i32 2
  %16451 = load i16, ptr %16450, align 2, !tbaa !29, !alias.scope !1093, !noalias !1096
  %16452 = lshr i16 %16451, 8
  %16453 = select i1 %16132, i16 %16451, i16 %16452
  %16454 = select i1 %16132, i16 %16452, i16 %16451
  %16455 = trunc i16 %16454 to i8
  %16456 = trunc i16 %16453 to i8
  store i8 %16456, ptr %16448, align 1, !alias.scope !1096, !noalias !1093
  %16457 = getelementptr inbounds i8, ptr %16448, i64 1
  store i8 %16455, ptr %16457, align 1, !alias.scope !1096, !noalias !1093
  %16458 = getelementptr inbounds i8, ptr %16448, i64 2
  %16459 = getelementptr inbounds %struct._PixelPacket, ptr %16447, i64 0, i32 1
  %16460 = load i16, ptr %16459, align 2, !tbaa !30, !alias.scope !1093, !noalias !1096
  %16461 = lshr i16 %16460, 8
  %16462 = select i1 %16132, i16 %16460, i16 %16461
  %16463 = select i1 %16132, i16 %16461, i16 %16460
  %16464 = trunc i16 %16463 to i8
  %16465 = trunc i16 %16462 to i8
  store i8 %16465, ptr %16458, align 1, !alias.scope !1096, !noalias !1093
  %16466 = getelementptr inbounds i8, ptr %16448, i64 3
  store i8 %16464, ptr %16466, align 1, !alias.scope !1096, !noalias !1093
  %16467 = getelementptr inbounds i8, ptr %16448, i64 4
  %16468 = load i16, ptr %16447, align 2, !tbaa !31, !alias.scope !1093, !noalias !1096
  %16469 = lshr i16 %16468, 8
  %16470 = select i1 %16132, i16 %16468, i16 %16469
  %16471 = select i1 %16132, i16 %16469, i16 %16468
  %16472 = trunc i16 %16471 to i8
  %16473 = trunc i16 %16470 to i8
  store i8 %16473, ptr %16467, align 1, !alias.scope !1096, !noalias !1093
  %16474 = getelementptr inbounds i8, ptr %16448, i64 5
  store i8 %16472, ptr %16474, align 1, !alias.scope !1096, !noalias !1093
  %16475 = getelementptr inbounds i8, ptr %16448, i64 6
  %16476 = getelementptr inbounds %struct._PixelPacket, ptr %16447, i64 0, i32 3
  %16477 = load i16, ptr %16476, align 2, !tbaa !28, !alias.scope !1093, !noalias !1096
  %16478 = xor i16 %16477, -1
  %16479 = lshr i16 %16478, 8
  %16480 = select i1 %16132, i16 %16478, i16 %16479
  %16481 = select i1 %16132, i16 %16479, i16 %16478
  %16482 = trunc i16 %16481 to i8
  %16483 = trunc i16 %16480 to i8
  store i8 %16483, ptr %16475, align 1, !alias.scope !1096, !noalias !1093
  %16484 = getelementptr inbounds i8, ptr %16448, i64 7
  store i8 %16482, ptr %16484, align 1, !alias.scope !1096, !noalias !1093
  %16485 = getelementptr inbounds i8, ptr %16448, i64 8
  %16486 = getelementptr inbounds %struct._PixelPacket, ptr %16447, i64 1
  %16487 = getelementptr inbounds i8, ptr %16485, i64 %16134
  %16488 = add nuw nsw i64 %16449, 1
  %16489 = icmp eq i64 %16488, %164
  br i1 %16489, label %17787, label %16446, !llvm.loop !1140

16490:                                            ; preds = %15411
  %16491 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 2
  %16492 = load i32, ptr %16491, align 8, !tbaa !50, !noalias !1098
  %16493 = icmp eq i32 %16492, 1
  %16494 = icmp sgt i64 %164, 0
  br i1 %16493, label %16502, label %16495

16495:                                            ; preds = %16490
  br i1 %16494, label %16496, label %17787

16496:                                            ; preds = %16495
  %16497 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %16498 = load i32, ptr %16497, align 8, !tbaa !51, !noalias !1098
  %16499 = icmp eq i32 %16498, 1
  %16500 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %16501 = load i64, ptr %16500, align 8, !tbaa !47, !noalias !1098
  br label %16633

16502:                                            ; preds = %16490
  br i1 %16494, label %16503, label %17787

16503:                                            ; preds = %16502
  %16504 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 14
  %16505 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 3
  %16506 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %16507 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  br label %16508

16508:                                            ; preds = %16619, %16503
  %16509 = phi ptr [ %166, %16503 ], [ %16628, %16619 ]
  %16510 = phi ptr [ %88, %16503 ], [ %16630, %16619 ]
  %16511 = phi i64 [ 0, %16503 ], [ %16631, %16619 ]
  %16512 = getelementptr inbounds %struct._PixelPacket, ptr %16509, i64 0, i32 2
  %16513 = load i16, ptr %16512, align 2, !tbaa !29, !alias.scope !1093, !noalias !1096
  call void @llvm.experimental.noalias.scope.decl(metadata !1141)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %14) #6, !noalias !1144
  %16514 = call ptr @ResetMagickMemory(ptr noundef nonnull %14, i32 noundef 0, i64 noundef 4) #6, !noalias !1141
  %16515 = uitofp i16 %16513 to double
  %16516 = load double, ptr %16504, align 8, !tbaa !59, !noalias !1144
  %16517 = fmul fast double %16516, %16515
  %16518 = load double, ptr %16505, align 8, !tbaa !60, !noalias !1144
  %16519 = fadd fast double %16517, %16518
  %16520 = fptrunc double %16519 to float
  %16521 = load i32, ptr %16506, align 8, !tbaa !51, !noalias !1144
  %16522 = icmp eq i32 %16521, 1
  %16523 = bitcast float %16520 to i32
  %16524 = lshr i32 %16523, 24
  %16525 = trunc i32 %16524 to i8
  %16526 = lshr i32 %16523, 16
  %16527 = trunc i32 %16526 to i8
  %16528 = lshr i32 %16523, 8
  %16529 = trunc i32 %16528 to i8
  %16530 = trunc i32 %16523 to i8
  br i1 %16522, label %16532, label %16531

16531:                                            ; preds = %16508
  br label %16532

16532:                                            ; preds = %16531, %16508
  %16533 = phi i8 [ %16525, %16531 ], [ %16530, %16508 ]
  %16534 = phi i8 [ %16527, %16531 ], [ %16529, %16508 ]
  %16535 = phi i8 [ %16529, %16531 ], [ %16527, %16508 ]
  %16536 = phi i8 [ %16530, %16531 ], [ %16525, %16508 ]
  store i8 %16533, ptr %16510, align 1, !alias.scope !1145, !noalias !1093
  %16537 = getelementptr inbounds i8, ptr %16510, i64 1
  store i8 %16534, ptr %16537, align 1, !alias.scope !1145, !noalias !1093
  %16538 = getelementptr inbounds i8, ptr %16510, i64 2
  store i8 %16535, ptr %16538, align 1, !alias.scope !1145, !noalias !1093
  %16539 = getelementptr inbounds i8, ptr %16510, i64 3
  store i8 %16536, ptr %16539, align 1, !alias.scope !1145, !noalias !1093
  %16540 = getelementptr inbounds i8, ptr %16510, i64 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %14) #6, !noalias !1144
  %16541 = getelementptr inbounds %struct._PixelPacket, ptr %16509, i64 0, i32 1
  %16542 = load i16, ptr %16541, align 2, !tbaa !30, !alias.scope !1093, !noalias !1096
  call void @llvm.experimental.noalias.scope.decl(metadata !1146)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %13) #6, !noalias !1149
  %16543 = call ptr @ResetMagickMemory(ptr noundef nonnull %13, i32 noundef 0, i64 noundef 4) #6, !noalias !1146
  %16544 = uitofp i16 %16542 to double
  %16545 = load double, ptr %16504, align 8, !tbaa !59, !noalias !1149
  %16546 = fmul fast double %16545, %16544
  %16547 = load double, ptr %16505, align 8, !tbaa !60, !noalias !1149
  %16548 = fadd fast double %16546, %16547
  %16549 = fptrunc double %16548 to float
  %16550 = load i32, ptr %16506, align 8, !tbaa !51, !noalias !1149
  %16551 = icmp eq i32 %16550, 1
  %16552 = bitcast float %16549 to i32
  %16553 = lshr i32 %16552, 24
  %16554 = trunc i32 %16553 to i8
  %16555 = lshr i32 %16552, 16
  %16556 = trunc i32 %16555 to i8
  %16557 = lshr i32 %16552, 8
  %16558 = trunc i32 %16557 to i8
  %16559 = trunc i32 %16552 to i8
  br i1 %16551, label %16561, label %16560

16560:                                            ; preds = %16532
  br label %16561

16561:                                            ; preds = %16560, %16532
  %16562 = phi i8 [ %16554, %16560 ], [ %16559, %16532 ]
  %16563 = phi i8 [ %16556, %16560 ], [ %16558, %16532 ]
  %16564 = phi i8 [ %16558, %16560 ], [ %16556, %16532 ]
  %16565 = phi i8 [ %16559, %16560 ], [ %16554, %16532 ]
  store i8 %16562, ptr %16540, align 1, !alias.scope !1150, !noalias !1093
  %16566 = getelementptr inbounds i8, ptr %16510, i64 5
  store i8 %16563, ptr %16566, align 1, !alias.scope !1150, !noalias !1093
  %16567 = getelementptr inbounds i8, ptr %16510, i64 6
  store i8 %16564, ptr %16567, align 1, !alias.scope !1150, !noalias !1093
  %16568 = getelementptr inbounds i8, ptr %16510, i64 7
  store i8 %16565, ptr %16568, align 1, !alias.scope !1150, !noalias !1093
  %16569 = getelementptr inbounds i8, ptr %16510, i64 8
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %13) #6, !noalias !1149
  %16570 = load i16, ptr %16509, align 2, !tbaa !31, !alias.scope !1093, !noalias !1096
  call void @llvm.experimental.noalias.scope.decl(metadata !1151)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %12) #6, !noalias !1154
  %16571 = call ptr @ResetMagickMemory(ptr noundef nonnull %12, i32 noundef 0, i64 noundef 4) #6, !noalias !1151
  %16572 = uitofp i16 %16570 to double
  %16573 = load double, ptr %16504, align 8, !tbaa !59, !noalias !1154
  %16574 = fmul fast double %16573, %16572
  %16575 = load double, ptr %16505, align 8, !tbaa !60, !noalias !1154
  %16576 = fadd fast double %16574, %16575
  %16577 = fptrunc double %16576 to float
  %16578 = load i32, ptr %16506, align 8, !tbaa !51, !noalias !1154
  %16579 = icmp eq i32 %16578, 1
  %16580 = bitcast float %16577 to i32
  %16581 = lshr i32 %16580, 24
  %16582 = trunc i32 %16581 to i8
  %16583 = lshr i32 %16580, 16
  %16584 = trunc i32 %16583 to i8
  %16585 = lshr i32 %16580, 8
  %16586 = trunc i32 %16585 to i8
  %16587 = trunc i32 %16580 to i8
  br i1 %16579, label %16589, label %16588

16588:                                            ; preds = %16561
  br label %16589

16589:                                            ; preds = %16588, %16561
  %16590 = phi i8 [ %16582, %16588 ], [ %16587, %16561 ]
  %16591 = phi i8 [ %16584, %16588 ], [ %16586, %16561 ]
  %16592 = phi i8 [ %16586, %16588 ], [ %16584, %16561 ]
  %16593 = phi i8 [ %16587, %16588 ], [ %16582, %16561 ]
  store i8 %16590, ptr %16569, align 1, !alias.scope !1155, !noalias !1093
  %16594 = getelementptr inbounds i8, ptr %16510, i64 9
  store i8 %16591, ptr %16594, align 1, !alias.scope !1155, !noalias !1093
  %16595 = getelementptr inbounds i8, ptr %16510, i64 10
  store i8 %16592, ptr %16595, align 1, !alias.scope !1155, !noalias !1093
  %16596 = getelementptr inbounds i8, ptr %16510, i64 11
  store i8 %16593, ptr %16596, align 1, !alias.scope !1155, !noalias !1093
  %16597 = getelementptr inbounds i8, ptr %16510, i64 12
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %12) #6, !noalias !1154
  %16598 = getelementptr inbounds %struct._PixelPacket, ptr %16509, i64 0, i32 3
  %16599 = load i16, ptr %16598, align 2, !tbaa !28, !alias.scope !1093, !noalias !1096
  %16600 = xor i16 %16599, -1
  call void @llvm.experimental.noalias.scope.decl(metadata !1156)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %11) #6, !noalias !1159
  %16601 = call ptr @ResetMagickMemory(ptr noundef nonnull %11, i32 noundef 0, i64 noundef 4) #6, !noalias !1156
  %16602 = uitofp i16 %16600 to double
  %16603 = load double, ptr %16504, align 8, !tbaa !59, !noalias !1159
  %16604 = fmul fast double %16603, %16602
  %16605 = load double, ptr %16505, align 8, !tbaa !60, !noalias !1159
  %16606 = fadd fast double %16604, %16605
  %16607 = fptrunc double %16606 to float
  %16608 = load i32, ptr %16506, align 8, !tbaa !51, !noalias !1159
  %16609 = icmp eq i32 %16608, 1
  %16610 = bitcast float %16607 to i32
  %16611 = lshr i32 %16610, 24
  %16612 = trunc i32 %16611 to i8
  %16613 = lshr i32 %16610, 16
  %16614 = trunc i32 %16613 to i8
  %16615 = lshr i32 %16610, 8
  %16616 = trunc i32 %16615 to i8
  %16617 = trunc i32 %16610 to i8
  br i1 %16609, label %16619, label %16618

16618:                                            ; preds = %16589
  br label %16619

16619:                                            ; preds = %16618, %16589
  %16620 = phi i8 [ %16612, %16618 ], [ %16617, %16589 ]
  %16621 = phi i8 [ %16614, %16618 ], [ %16616, %16589 ]
  %16622 = phi i8 [ %16616, %16618 ], [ %16614, %16589 ]
  %16623 = phi i8 [ %16617, %16618 ], [ %16612, %16589 ]
  store i8 %16620, ptr %16597, align 1, !alias.scope !1160, !noalias !1093
  %16624 = getelementptr inbounds i8, ptr %16510, i64 13
  store i8 %16621, ptr %16624, align 1, !alias.scope !1160, !noalias !1093
  %16625 = getelementptr inbounds i8, ptr %16510, i64 14
  store i8 %16622, ptr %16625, align 1, !alias.scope !1160, !noalias !1093
  %16626 = getelementptr inbounds i8, ptr %16510, i64 15
  store i8 %16623, ptr %16626, align 1, !alias.scope !1160, !noalias !1093
  %16627 = getelementptr inbounds i8, ptr %16510, i64 16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %11) #6, !noalias !1159
  %16628 = getelementptr inbounds %struct._PixelPacket, ptr %16509, i64 1
  %16629 = load i64, ptr %16507, align 8, !tbaa !47, !noalias !1098
  %16630 = getelementptr inbounds i8, ptr %16627, i64 %16629
  %16631 = add nuw nsw i64 %16511, 1
  %16632 = icmp eq i64 %16631, %164
  br i1 %16632, label %17787, label %16508, !llvm.loop !1161

16633:                                            ; preds = %16714, %16496
  %16634 = phi ptr [ %166, %16496 ], [ %16727, %16714 ]
  %16635 = phi ptr [ %88, %16496 ], [ %16728, %16714 ]
  %16636 = phi i64 [ 0, %16496 ], [ %16729, %16714 ]
  %16637 = getelementptr inbounds %struct._PixelPacket, ptr %16634, i64 0, i32 2
  %16638 = load i16, ptr %16637, align 2, !tbaa !29, !alias.scope !1093, !noalias !1096
  %16639 = zext i16 %16638 to i32
  %16640 = mul nuw i32 %16639, 65537
  %16641 = getelementptr inbounds i8, ptr %16635, i64 1
  %16642 = getelementptr inbounds i8, ptr %16635, i64 2
  %16643 = getelementptr inbounds i8, ptr %16635, i64 3
  %16644 = getelementptr inbounds i8, ptr %16635, i64 4
  %16645 = getelementptr inbounds %struct._PixelPacket, ptr %16634, i64 0, i32 1
  %16646 = getelementptr inbounds i8, ptr %16635, i64 5
  %16647 = load i16, ptr %16645, align 2, !tbaa !30, !alias.scope !1093, !noalias !1096
  %16648 = zext i16 %16647 to i32
  %16649 = mul nuw i32 %16648, 65537
  %16650 = load i16, ptr %16634, align 2, !tbaa !31, !alias.scope !1093, !noalias !1096
  %16651 = zext i16 %16650 to i32
  %16652 = mul nuw i32 %16651, 65537
  br i1 %16499, label %16653, label %16664

16653:                                            ; preds = %16633
  %16654 = lshr i32 %16640, 8
  %16655 = lshr i32 %16640, 24
  %16656 = trunc i16 %16638 to i8
  %16657 = trunc i32 %16654 to i8
  %16658 = lshr i32 %16649, 8
  %16659 = lshr i32 %16649, 24
  %16660 = trunc i16 %16647 to i8
  %16661 = trunc i32 %16658 to i8
  %16662 = lshr i32 %16652, 8
  %16663 = lshr i32 %16652, 24
  br label %16675

16664:                                            ; preds = %16633
  %16665 = lshr i32 %16640, 24
  %16666 = lshr i32 %16640, 8
  %16667 = trunc i32 %16666 to i8
  %16668 = trunc i16 %16638 to i8
  %16669 = lshr i32 %16649, 24
  %16670 = lshr i32 %16649, 8
  %16671 = trunc i32 %16670 to i8
  %16672 = trunc i16 %16647 to i8
  %16673 = lshr i32 %16652, 24
  %16674 = lshr i32 %16652, 8
  br label %16675

16675:                                            ; preds = %16664, %16653
  %16676 = phi i32 [ %16640, %16653 ], [ %16665, %16664 ]
  %16677 = phi i8 [ %16657, %16653 ], [ %16668, %16664 ]
  %16678 = phi i8 [ %16656, %16653 ], [ %16667, %16664 ]
  %16679 = phi i32 [ %16655, %16653 ], [ %16640, %16664 ]
  %16680 = phi i32 [ %16649, %16653 ], [ %16669, %16664 ]
  %16681 = phi i8 [ %16661, %16653 ], [ %16672, %16664 ]
  %16682 = phi i8 [ %16660, %16653 ], [ %16671, %16664 ]
  %16683 = phi i32 [ %16659, %16653 ], [ %16649, %16664 ]
  %16684 = phi i32 [ %16652, %16653 ], [ %16673, %16664 ]
  %16685 = phi i32 [ %16662, %16653 ], [ %16651, %16664 ]
  %16686 = phi i32 [ %16651, %16653 ], [ %16674, %16664 ]
  %16687 = phi i32 [ %16663, %16653 ], [ %16652, %16664 ]
  %16688 = trunc i32 %16683 to i8
  %16689 = trunc i32 %16680 to i8
  %16690 = trunc i32 %16679 to i8
  %16691 = trunc i32 %16676 to i8
  store i8 %16691, ptr %16635, align 1
  store i8 %16677, ptr %16641, align 1
  store i8 %16678, ptr %16642, align 1
  store i8 %16690, ptr %16643, align 1
  store i8 %16689, ptr %16644, align 1
  store i8 %16681, ptr %16646, align 1
  %16692 = getelementptr inbounds i8, ptr %16635, i64 6
  store i8 %16682, ptr %16692, align 1
  %16693 = getelementptr inbounds i8, ptr %16635, i64 7
  store i8 %16688, ptr %16693, align 1
  %16694 = getelementptr inbounds i8, ptr %16635, i64 8
  %16695 = trunc i32 %16687 to i8
  %16696 = trunc i32 %16686 to i8
  %16697 = trunc i32 %16685 to i8
  %16698 = trunc i32 %16684 to i8
  store i8 %16698, ptr %16694, align 1, !alias.scope !1096, !noalias !1093
  %16699 = getelementptr inbounds i8, ptr %16635, i64 9
  store i8 %16697, ptr %16699, align 1, !alias.scope !1096, !noalias !1093
  %16700 = getelementptr inbounds i8, ptr %16635, i64 10
  store i8 %16696, ptr %16700, align 1, !alias.scope !1096, !noalias !1093
  %16701 = getelementptr inbounds i8, ptr %16635, i64 11
  store i8 %16695, ptr %16701, align 1, !alias.scope !1096, !noalias !1093
  %16702 = getelementptr inbounds i8, ptr %16635, i64 12
  %16703 = getelementptr inbounds %struct._PixelPacket, ptr %16634, i64 0, i32 3
  %16704 = load i16, ptr %16703, align 2, !tbaa !28, !alias.scope !1093, !noalias !1096
  %16705 = xor i16 %16704, -1
  %16706 = zext i16 %16705 to i32
  %16707 = mul nuw i32 %16706, 65537
  br i1 %16499, label %16708, label %16711

16708:                                            ; preds = %16675
  %16709 = lshr i32 %16707, 8
  %16710 = lshr i32 %16707, 24
  br label %16714

16711:                                            ; preds = %16675
  %16712 = lshr i32 %16707, 24
  %16713 = lshr i32 %16707, 8
  br label %16714

16714:                                            ; preds = %16711, %16708
  %16715 = phi i32 [ %16707, %16708 ], [ %16712, %16711 ]
  %16716 = phi i32 [ %16709, %16708 ], [ %16706, %16711 ]
  %16717 = phi i32 [ %16706, %16708 ], [ %16713, %16711 ]
  %16718 = phi i32 [ %16710, %16708 ], [ %16707, %16711 ]
  %16719 = trunc i32 %16718 to i8
  %16720 = trunc i32 %16717 to i8
  %16721 = trunc i32 %16716 to i8
  %16722 = trunc i32 %16715 to i8
  store i8 %16722, ptr %16702, align 1, !alias.scope !1096, !noalias !1093
  %16723 = getelementptr inbounds i8, ptr %16635, i64 13
  store i8 %16721, ptr %16723, align 1, !alias.scope !1096, !noalias !1093
  %16724 = getelementptr inbounds i8, ptr %16635, i64 14
  store i8 %16720, ptr %16724, align 1, !alias.scope !1096, !noalias !1093
  %16725 = getelementptr inbounds i8, ptr %16635, i64 15
  store i8 %16719, ptr %16725, align 1, !alias.scope !1096, !noalias !1093
  %16726 = getelementptr inbounds i8, ptr %16635, i64 16
  %16727 = getelementptr inbounds %struct._PixelPacket, ptr %16634, i64 1
  %16728 = getelementptr inbounds i8, ptr %16726, i64 %16501
  %16729 = add nuw nsw i64 %16636, 1
  %16730 = icmp eq i64 %16729, %164
  br i1 %16730, label %17787, label %16633, !llvm.loop !1162

16731:                                            ; preds = %15411
  %16732 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 2
  %16733 = load i32, ptr %16732, align 8, !tbaa !50, !noalias !1098
  %16734 = icmp eq i32 %16733, 1
  br i1 %16734, label %16735, label %16927

16735:                                            ; preds = %16731
  %16736 = icmp sgt i64 %164, 0
  br i1 %16736, label %16737, label %17787

16737:                                            ; preds = %16735
  %16738 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 14
  %16739 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 3
  %16740 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 13
  %16741 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  br label %16742

16742:                                            ; preds = %16905, %16737
  %16743 = phi ptr [ %166, %16737 ], [ %16922, %16905 ]
  %16744 = phi ptr [ %88, %16737 ], [ %16924, %16905 ]
  %16745 = phi i64 [ 0, %16737 ], [ %16925, %16905 ]
  %16746 = getelementptr inbounds %struct._PixelPacket, ptr %16743, i64 0, i32 2
  %16747 = load i16, ptr %16746, align 2, !tbaa !29, !alias.scope !1093, !noalias !1096
  %16748 = uitofp i16 %16747 to double
  call void @llvm.experimental.noalias.scope.decl(metadata !1163)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %10) #6, !noalias !1166
  %16749 = call ptr @ResetMagickMemory(ptr noundef nonnull %10, i32 noundef 0, i64 noundef 8) #6, !noalias !1163
  %16750 = load double, ptr %16738, align 8, !tbaa !59, !noalias !1166
  %16751 = fmul fast double %16750, %16748
  %16752 = load double, ptr %16739, align 8, !tbaa !60, !noalias !1166
  %16753 = fadd fast double %16751, %16752
  %16754 = load i32, ptr %16740, align 8, !tbaa !51, !noalias !1166
  %16755 = icmp eq i32 %16754, 1
  %16756 = bitcast double %16753 to i64
  %16757 = lshr i64 %16756, 56
  %16758 = trunc i64 %16757 to i8
  %16759 = lshr i64 %16756, 48
  %16760 = trunc i64 %16759 to i8
  %16761 = lshr i64 %16756, 40
  %16762 = trunc i64 %16761 to i8
  %16763 = lshr i64 %16756, 32
  %16764 = trunc i64 %16763 to i8
  %16765 = lshr i64 %16756, 24
  %16766 = trunc i64 %16765 to i8
  %16767 = lshr i64 %16756, 16
  %16768 = trunc i64 %16767 to i8
  %16769 = lshr i64 %16756, 8
  %16770 = trunc i64 %16769 to i8
  %16771 = trunc i64 %16756 to i8
  br i1 %16755, label %16773, label %16772

16772:                                            ; preds = %16742
  br label %16773

16773:                                            ; preds = %16772, %16742
  %16774 = phi i8 [ %16758, %16772 ], [ %16771, %16742 ]
  %16775 = phi i8 [ %16760, %16772 ], [ %16770, %16742 ]
  %16776 = phi i8 [ %16762, %16772 ], [ %16768, %16742 ]
  %16777 = phi i8 [ %16764, %16772 ], [ %16766, %16742 ]
  %16778 = phi i8 [ %16766, %16772 ], [ %16764, %16742 ]
  %16779 = phi i8 [ %16768, %16772 ], [ %16762, %16742 ]
  %16780 = phi i8 [ %16770, %16772 ], [ %16760, %16742 ]
  %16781 = phi i8 [ %16771, %16772 ], [ %16758, %16742 ]
  store i8 %16774, ptr %16744, align 1, !alias.scope !1167, !noalias !1093
  %16782 = getelementptr inbounds i8, ptr %16744, i64 1
  store i8 %16775, ptr %16782, align 1, !alias.scope !1167, !noalias !1093
  %16783 = getelementptr inbounds i8, ptr %16744, i64 2
  store i8 %16776, ptr %16783, align 1, !alias.scope !1167, !noalias !1093
  %16784 = getelementptr inbounds i8, ptr %16744, i64 3
  store i8 %16777, ptr %16784, align 1, !alias.scope !1167, !noalias !1093
  %16785 = getelementptr inbounds i8, ptr %16744, i64 4
  store i8 %16778, ptr %16785, align 1, !alias.scope !1167, !noalias !1093
  %16786 = getelementptr inbounds i8, ptr %16744, i64 5
  store i8 %16779, ptr %16786, align 1, !alias.scope !1167, !noalias !1093
  %16787 = getelementptr inbounds i8, ptr %16744, i64 6
  store i8 %16780, ptr %16787, align 1, !alias.scope !1167, !noalias !1093
  %16788 = getelementptr inbounds i8, ptr %16744, i64 7
  store i8 %16781, ptr %16788, align 1, !alias.scope !1167, !noalias !1093
  %16789 = getelementptr inbounds i8, ptr %16744, i64 8
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %10) #6, !noalias !1166
  %16790 = getelementptr inbounds %struct._PixelPacket, ptr %16743, i64 0, i32 1
  %16791 = load i16, ptr %16790, align 2, !tbaa !30, !alias.scope !1093, !noalias !1096
  %16792 = uitofp i16 %16791 to double
  call void @llvm.experimental.noalias.scope.decl(metadata !1168)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %9) #6, !noalias !1171
  %16793 = call ptr @ResetMagickMemory(ptr noundef nonnull %9, i32 noundef 0, i64 noundef 8) #6, !noalias !1168
  %16794 = load double, ptr %16738, align 8, !tbaa !59, !noalias !1171
  %16795 = fmul fast double %16794, %16792
  %16796 = load double, ptr %16739, align 8, !tbaa !60, !noalias !1171
  %16797 = fadd fast double %16795, %16796
  %16798 = load i32, ptr %16740, align 8, !tbaa !51, !noalias !1171
  %16799 = icmp eq i32 %16798, 1
  %16800 = bitcast double %16797 to i64
  %16801 = lshr i64 %16800, 56
  %16802 = trunc i64 %16801 to i8
  %16803 = lshr i64 %16800, 48
  %16804 = trunc i64 %16803 to i8
  %16805 = lshr i64 %16800, 40
  %16806 = trunc i64 %16805 to i8
  %16807 = lshr i64 %16800, 32
  %16808 = trunc i64 %16807 to i8
  %16809 = lshr i64 %16800, 24
  %16810 = trunc i64 %16809 to i8
  %16811 = lshr i64 %16800, 16
  %16812 = trunc i64 %16811 to i8
  %16813 = lshr i64 %16800, 8
  %16814 = trunc i64 %16813 to i8
  %16815 = trunc i64 %16800 to i8
  br i1 %16799, label %16817, label %16816

16816:                                            ; preds = %16773
  br label %16817

16817:                                            ; preds = %16816, %16773
  %16818 = phi i8 [ %16802, %16816 ], [ %16815, %16773 ]
  %16819 = phi i8 [ %16804, %16816 ], [ %16814, %16773 ]
  %16820 = phi i8 [ %16806, %16816 ], [ %16812, %16773 ]
  %16821 = phi i8 [ %16808, %16816 ], [ %16810, %16773 ]
  %16822 = phi i8 [ %16810, %16816 ], [ %16808, %16773 ]
  %16823 = phi i8 [ %16812, %16816 ], [ %16806, %16773 ]
  %16824 = phi i8 [ %16814, %16816 ], [ %16804, %16773 ]
  %16825 = phi i8 [ %16815, %16816 ], [ %16802, %16773 ]
  store i8 %16818, ptr %16789, align 1, !alias.scope !1172, !noalias !1093
  %16826 = getelementptr inbounds i8, ptr %16744, i64 9
  store i8 %16819, ptr %16826, align 1, !alias.scope !1172, !noalias !1093
  %16827 = getelementptr inbounds i8, ptr %16744, i64 10
  store i8 %16820, ptr %16827, align 1, !alias.scope !1172, !noalias !1093
  %16828 = getelementptr inbounds i8, ptr %16744, i64 11
  store i8 %16821, ptr %16828, align 1, !alias.scope !1172, !noalias !1093
  %16829 = getelementptr inbounds i8, ptr %16744, i64 12
  store i8 %16822, ptr %16829, align 1, !alias.scope !1172, !noalias !1093
  %16830 = getelementptr inbounds i8, ptr %16744, i64 13
  store i8 %16823, ptr %16830, align 1, !alias.scope !1172, !noalias !1093
  %16831 = getelementptr inbounds i8, ptr %16744, i64 14
  store i8 %16824, ptr %16831, align 1, !alias.scope !1172, !noalias !1093
  %16832 = getelementptr inbounds i8, ptr %16744, i64 15
  store i8 %16825, ptr %16832, align 1, !alias.scope !1172, !noalias !1093
  %16833 = getelementptr inbounds i8, ptr %16744, i64 16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %9) #6, !noalias !1171
  %16834 = load i16, ptr %16743, align 2, !tbaa !31, !alias.scope !1093, !noalias !1096
  %16835 = uitofp i16 %16834 to double
  call void @llvm.experimental.noalias.scope.decl(metadata !1173)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %8) #6, !noalias !1176
  %16836 = call ptr @ResetMagickMemory(ptr noundef nonnull %8, i32 noundef 0, i64 noundef 8) #6, !noalias !1173
  %16837 = load double, ptr %16738, align 8, !tbaa !59, !noalias !1176
  %16838 = fmul fast double %16837, %16835
  %16839 = load double, ptr %16739, align 8, !tbaa !60, !noalias !1176
  %16840 = fadd fast double %16838, %16839
  %16841 = load i32, ptr %16740, align 8, !tbaa !51, !noalias !1176
  %16842 = icmp eq i32 %16841, 1
  %16843 = bitcast double %16840 to i64
  %16844 = lshr i64 %16843, 56
  %16845 = trunc i64 %16844 to i8
  %16846 = lshr i64 %16843, 48
  %16847 = trunc i64 %16846 to i8
  %16848 = lshr i64 %16843, 40
  %16849 = trunc i64 %16848 to i8
  %16850 = lshr i64 %16843, 32
  %16851 = trunc i64 %16850 to i8
  %16852 = lshr i64 %16843, 24
  %16853 = trunc i64 %16852 to i8
  %16854 = lshr i64 %16843, 16
  %16855 = trunc i64 %16854 to i8
  %16856 = lshr i64 %16843, 8
  %16857 = trunc i64 %16856 to i8
  %16858 = trunc i64 %16843 to i8
  br i1 %16842, label %16860, label %16859

16859:                                            ; preds = %16817
  br label %16860

16860:                                            ; preds = %16859, %16817
  %16861 = phi i8 [ %16845, %16859 ], [ %16858, %16817 ]
  %16862 = phi i8 [ %16847, %16859 ], [ %16857, %16817 ]
  %16863 = phi i8 [ %16849, %16859 ], [ %16855, %16817 ]
  %16864 = phi i8 [ %16851, %16859 ], [ %16853, %16817 ]
  %16865 = phi i8 [ %16853, %16859 ], [ %16851, %16817 ]
  %16866 = phi i8 [ %16855, %16859 ], [ %16849, %16817 ]
  %16867 = phi i8 [ %16857, %16859 ], [ %16847, %16817 ]
  %16868 = phi i8 [ %16858, %16859 ], [ %16845, %16817 ]
  store i8 %16861, ptr %16833, align 1, !alias.scope !1177, !noalias !1093
  %16869 = getelementptr inbounds i8, ptr %16744, i64 17
  store i8 %16862, ptr %16869, align 1, !alias.scope !1177, !noalias !1093
  %16870 = getelementptr inbounds i8, ptr %16744, i64 18
  store i8 %16863, ptr %16870, align 1, !alias.scope !1177, !noalias !1093
  %16871 = getelementptr inbounds i8, ptr %16744, i64 19
  store i8 %16864, ptr %16871, align 1, !alias.scope !1177, !noalias !1093
  %16872 = getelementptr inbounds i8, ptr %16744, i64 20
  store i8 %16865, ptr %16872, align 1, !alias.scope !1177, !noalias !1093
  %16873 = getelementptr inbounds i8, ptr %16744, i64 21
  store i8 %16866, ptr %16873, align 1, !alias.scope !1177, !noalias !1093
  %16874 = getelementptr inbounds i8, ptr %16744, i64 22
  store i8 %16867, ptr %16874, align 1, !alias.scope !1177, !noalias !1093
  %16875 = getelementptr inbounds i8, ptr %16744, i64 23
  store i8 %16868, ptr %16875, align 1, !alias.scope !1177, !noalias !1093
  %16876 = getelementptr inbounds i8, ptr %16744, i64 24
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %8) #6, !noalias !1176
  %16877 = getelementptr inbounds %struct._PixelPacket, ptr %16743, i64 0, i32 3
  %16878 = load i16, ptr %16877, align 2, !tbaa !28, !alias.scope !1093, !noalias !1096
  %16879 = xor i16 %16878, -1
  %16880 = uitofp i16 %16879 to double
  call void @llvm.experimental.noalias.scope.decl(metadata !1178)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %7) #6, !noalias !1181
  %16881 = call ptr @ResetMagickMemory(ptr noundef nonnull %7, i32 noundef 0, i64 noundef 8) #6, !noalias !1178
  %16882 = load double, ptr %16738, align 8, !tbaa !59, !noalias !1181
  %16883 = fmul fast double %16882, %16880
  %16884 = load double, ptr %16739, align 8, !tbaa !60, !noalias !1181
  %16885 = fadd fast double %16883, %16884
  %16886 = load i32, ptr %16740, align 8, !tbaa !51, !noalias !1181
  %16887 = icmp eq i32 %16886, 1
  %16888 = bitcast double %16885 to i64
  %16889 = lshr i64 %16888, 56
  %16890 = trunc i64 %16889 to i8
  %16891 = lshr i64 %16888, 48
  %16892 = trunc i64 %16891 to i8
  %16893 = lshr i64 %16888, 40
  %16894 = trunc i64 %16893 to i8
  %16895 = lshr i64 %16888, 32
  %16896 = trunc i64 %16895 to i8
  %16897 = lshr i64 %16888, 24
  %16898 = trunc i64 %16897 to i8
  %16899 = lshr i64 %16888, 16
  %16900 = trunc i64 %16899 to i8
  %16901 = lshr i64 %16888, 8
  %16902 = trunc i64 %16901 to i8
  %16903 = trunc i64 %16888 to i8
  br i1 %16887, label %16905, label %16904

16904:                                            ; preds = %16860
  br label %16905

16905:                                            ; preds = %16904, %16860
  %16906 = phi i8 [ %16890, %16904 ], [ %16903, %16860 ]
  %16907 = phi i8 [ %16892, %16904 ], [ %16902, %16860 ]
  %16908 = phi i8 [ %16894, %16904 ], [ %16900, %16860 ]
  %16909 = phi i8 [ %16896, %16904 ], [ %16898, %16860 ]
  %16910 = phi i8 [ %16898, %16904 ], [ %16896, %16860 ]
  %16911 = phi i8 [ %16900, %16904 ], [ %16894, %16860 ]
  %16912 = phi i8 [ %16902, %16904 ], [ %16892, %16860 ]
  %16913 = phi i8 [ %16903, %16904 ], [ %16890, %16860 ]
  store i8 %16906, ptr %16876, align 1, !alias.scope !1182, !noalias !1093
  %16914 = getelementptr inbounds i8, ptr %16744, i64 25
  store i8 %16907, ptr %16914, align 1, !alias.scope !1182, !noalias !1093
  %16915 = getelementptr inbounds i8, ptr %16744, i64 26
  store i8 %16908, ptr %16915, align 1, !alias.scope !1182, !noalias !1093
  %16916 = getelementptr inbounds i8, ptr %16744, i64 27
  store i8 %16909, ptr %16916, align 1, !alias.scope !1182, !noalias !1093
  %16917 = getelementptr inbounds i8, ptr %16744, i64 28
  store i8 %16910, ptr %16917, align 1, !alias.scope !1182, !noalias !1093
  %16918 = getelementptr inbounds i8, ptr %16744, i64 29
  store i8 %16911, ptr %16918, align 1, !alias.scope !1182, !noalias !1093
  %16919 = getelementptr inbounds i8, ptr %16744, i64 30
  store i8 %16912, ptr %16919, align 1, !alias.scope !1182, !noalias !1093
  %16920 = getelementptr inbounds i8, ptr %16744, i64 31
  store i8 %16913, ptr %16920, align 1, !alias.scope !1182, !noalias !1093
  %16921 = getelementptr inbounds i8, ptr %16744, i64 32
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7) #6, !noalias !1181
  %16922 = getelementptr inbounds %struct._PixelPacket, ptr %16743, i64 1
  %16923 = load i64, ptr %16741, align 8, !tbaa !47, !noalias !1098
  %16924 = getelementptr inbounds i8, ptr %16921, i64 %16923
  %16925 = add nuw nsw i64 %16745, 1
  %16926 = icmp eq i64 %16925, %164
  br i1 %16926, label %17787, label %16742, !llvm.loop !1183

16927:                                            ; preds = %16731, %15411
  %16928 = icmp sgt i64 %164, 0
  br i1 %16928, label %16929, label %17787

16929:                                            ; preds = %16927
  %16930 = add i64 %15412, -1
  %16931 = shl i64 2, %16930
  %16932 = add i64 %16931, -1
  %16933 = uitofp i64 %16932 to float
  %16934 = fmul fast float %16933, 0x3EF0001000000000
  %16935 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 14, i32 2
  %16936 = getelementptr inbounds %struct._QuantumInfo, ptr %2, i64 0, i32 6
  %16937 = load i64, ptr %16935, align 8, !tbaa !69, !noalias !1098
  %16938 = icmp sgt i64 %15412, 0
  %16939 = load i64, ptr %16936, align 8, !tbaa !47, !noalias !1098
  br label %16940

16940:                                            ; preds = %17102, %16929
  %16941 = phi i64 [ %16937, %16929 ], [ %17103, %17102 ]
  %16942 = phi ptr [ %166, %16929 ], [ %17105, %17102 ]
  %16943 = phi ptr [ %88, %16929 ], [ %17106, %17102 ]
  %16944 = phi i64 [ 0, %16929 ], [ %17107, %17102 ]
  %16945 = getelementptr inbounds %struct._PixelPacket, ptr %16942, i64 0, i32 2
  %16946 = load i16, ptr %16945, align 2, !tbaa !29, !alias.scope !1093, !noalias !1096
  %16947 = uitofp i16 %16946 to float
  %16948 = fmul fast float %16934, %16947
  %16949 = fpext float %16948 to double
  %16950 = fadd fast double %16949, 5.000000e-01
  %16951 = fptoui double %16950 to i64
  tail call void @llvm.experimental.noalias.scope.decl(metadata !1184)
  %16952 = icmp eq i64 %16941, 0
  br i1 %16952, label %16953, label %16954

16953:                                            ; preds = %16940
  store i64 8, ptr %16935, align 8, !tbaa !69, !noalias !1187
  br label %16954

16954:                                            ; preds = %16953, %16940
  %16955 = phi i64 [ 8, %16953 ], [ %16941, %16940 ]
  br i1 %16938, label %16956, label %16982

16956:                                            ; preds = %16954, %16966
  %16957 = phi i64 [ %16977, %16966 ], [ %16955, %16954 ]
  %16958 = phi i64 [ %16962, %16966 ], [ %15412, %16954 ]
  %16959 = phi ptr [ %16979, %16966 ], [ %16943, %16954 ]
  %16960 = tail call i64 @llvm.umin.i64(i64 %16958, i64 %16957)
  %16961 = sub nsw i64 %16958, %16960
  %16962 = tail call i64 @llvm.smax.i64(i64 %16961, i64 0)
  %16963 = icmp eq i64 %16957, 8
  br i1 %16963, label %16966, label %16964

16964:                                            ; preds = %16956
  %16965 = load i8, ptr %16959, align 1, !tbaa !48, !alias.scope !1188, !noalias !1093
  br label %16966

16966:                                            ; preds = %16964, %16956
  %16967 = phi i8 [ %16965, %16964 ], [ 0, %16956 ]
  %16968 = sub i64 %16957, %16960
  %16969 = lshr i64 %16951, %16962
  %16970 = shl nsw i64 -1, %16960
  %16971 = xor i64 %16970, -1
  %16972 = and i64 %16969, %16971
  %16973 = shl i64 %16972, %16968
  %16974 = trunc i64 %16973 to i8
  %16975 = or i8 %16967, %16974
  store i8 %16975, ptr %16959, align 1, !tbaa !48, !alias.scope !1188, !noalias !1093
  %16976 = icmp ule i64 %16957, %16958
  %16977 = select i1 %16976, i64 8, i64 %16968
  %16978 = zext i1 %16976 to i64
  %16979 = getelementptr inbounds i8, ptr %16959, i64 %16978
  %16980 = icmp slt i64 %16961, 1
  br i1 %16980, label %16981, label %16956, !llvm.loop !75

16981:                                            ; preds = %16966
  store i64 %16977, ptr %16935, align 8, !tbaa !69, !noalias !1187
  br label %16982

16982:                                            ; preds = %16981, %16954
  %16983 = phi i64 [ %16955, %16954 ], [ %16977, %16981 ]
  %16984 = phi ptr [ %16943, %16954 ], [ %16979, %16981 ]
  %16985 = getelementptr inbounds %struct._PixelPacket, ptr %16942, i64 0, i32 1
  %16986 = load i16, ptr %16985, align 2, !tbaa !30, !alias.scope !1093, !noalias !1096
  %16987 = uitofp i16 %16986 to float
  %16988 = fmul fast float %16934, %16987
  %16989 = fpext float %16988 to double
  %16990 = fadd fast double %16989, 5.000000e-01
  %16991 = fptoui double %16990 to i64
  tail call void @llvm.experimental.noalias.scope.decl(metadata !1189)
  %16992 = icmp eq i64 %16983, 0
  br i1 %16992, label %16993, label %16994

16993:                                            ; preds = %16982
  store i64 8, ptr %16935, align 8, !tbaa !69, !noalias !1192
  br label %16994

16994:                                            ; preds = %16993, %16982
  %16995 = phi i64 [ 8, %16993 ], [ %16983, %16982 ]
  br i1 %16938, label %16996, label %17022

16996:                                            ; preds = %16994, %17006
  %16997 = phi i64 [ %17017, %17006 ], [ %16995, %16994 ]
  %16998 = phi i64 [ %17002, %17006 ], [ %15412, %16994 ]
  %16999 = phi ptr [ %17019, %17006 ], [ %16984, %16994 ]
  %17000 = tail call i64 @llvm.umin.i64(i64 %16998, i64 %16997)
  %17001 = sub nsw i64 %16998, %17000
  %17002 = tail call i64 @llvm.smax.i64(i64 %17001, i64 0)
  %17003 = icmp eq i64 %16997, 8
  br i1 %17003, label %17006, label %17004

17004:                                            ; preds = %16996
  %17005 = load i8, ptr %16999, align 1, !tbaa !48, !alias.scope !1193, !noalias !1093
  br label %17006

17006:                                            ; preds = %17004, %16996
  %17007 = phi i8 [ %17005, %17004 ], [ 0, %16996 ]
  %17008 = sub i64 %16997, %17000
  %17009 = lshr i64 %16991, %17002
  %17010 = shl nsw i64 -1, %17000
  %17011 = xor i64 %17010, -1
  %17012 = and i64 %17009, %17011
  %17013 = shl i64 %17012, %17008
  %17014 = trunc i64 %17013 to i8
  %17015 = or i8 %17007, %17014
  store i8 %17015, ptr %16999, align 1, !tbaa !48, !alias.scope !1193, !noalias !1093
  %17016 = icmp ule i64 %16997, %16998
  %17017 = select i1 %17016, i64 8, i64 %17008
  %17018 = zext i1 %17016 to i64
  %17019 = getelementptr inbounds i8, ptr %16999, i64 %17018
  %17020 = icmp slt i64 %17001, 1
  br i1 %17020, label %17021, label %16996, !llvm.loop !75

17021:                                            ; preds = %17006
  store i64 %17017, ptr %16935, align 8, !tbaa !69, !noalias !1192
  br label %17022

17022:                                            ; preds = %17021, %16994
  %17023 = phi i64 [ %16995, %16994 ], [ %17017, %17021 ]
  %17024 = phi ptr [ %16984, %16994 ], [ %17019, %17021 ]
  %17025 = load i16, ptr %16942, align 2, !tbaa !31, !alias.scope !1093, !noalias !1096
  %17026 = uitofp i16 %17025 to float
  %17027 = fmul fast float %16934, %17026
  %17028 = fpext float %17027 to double
  %17029 = fadd fast double %17028, 5.000000e-01
  %17030 = fptoui double %17029 to i64
  tail call void @llvm.experimental.noalias.scope.decl(metadata !1194)
  %17031 = icmp eq i64 %17023, 0
  br i1 %17031, label %17032, label %17033

17032:                                            ; preds = %17022
  store i64 8, ptr %16935, align 8, !tbaa !69, !noalias !1197
  br label %17033

17033:                                            ; preds = %17032, %17022
  %17034 = phi i64 [ 8, %17032 ], [ %17023, %17022 ]
  br i1 %16938, label %17035, label %17061

17035:                                            ; preds = %17033, %17045
  %17036 = phi i64 [ %17056, %17045 ], [ %17034, %17033 ]
  %17037 = phi i64 [ %17041, %17045 ], [ %15412, %17033 ]
  %17038 = phi ptr [ %17058, %17045 ], [ %17024, %17033 ]
  %17039 = tail call i64 @llvm.umin.i64(i64 %17037, i64 %17036)
  %17040 = sub nsw i64 %17037, %17039
  %17041 = tail call i64 @llvm.smax.i64(i64 %17040, i64 0)
  %17042 = icmp eq i64 %17036, 8
  br i1 %17042, label %17045, label %17043

17043:                                            ; preds = %17035
  %17044 = load i8, ptr %17038, align 1, !tbaa !48, !alias.scope !1198, !noalias !1093
  br label %17045

17045:                                            ; preds = %17043, %17035
  %17046 = phi i8 [ %17044, %17043 ], [ 0, %17035 ]
  %17047 = sub i64 %17036, %17039
  %17048 = lshr i64 %17030, %17041
  %17049 = shl nsw i64 -1, %17039
  %17050 = xor i64 %17049, -1
  %17051 = and i64 %17048, %17050
  %17052 = shl i64 %17051, %17047
  %17053 = trunc i64 %17052 to i8
  %17054 = or i8 %17046, %17053
  store i8 %17054, ptr %17038, align 1, !tbaa !48, !alias.scope !1198, !noalias !1093
  %17055 = icmp ule i64 %17036, %17037
  %17056 = select i1 %17055, i64 8, i64 %17047
  %17057 = zext i1 %17055 to i64
  %17058 = getelementptr inbounds i8, ptr %17038, i64 %17057
  %17059 = icmp slt i64 %17040, 1
  br i1 %17059, label %17060, label %17035, !llvm.loop !75

17060:                                            ; preds = %17045
  store i64 %17056, ptr %16935, align 8, !tbaa !69, !noalias !1197
  br label %17061

17061:                                            ; preds = %17060, %17033
  %17062 = phi i64 [ %17034, %17033 ], [ %17056, %17060 ]
  %17063 = phi ptr [ %17024, %17033 ], [ %17058, %17060 ]
  %17064 = getelementptr inbounds %struct._PixelPacket, ptr %16942, i64 0, i32 3
  %17065 = load i16, ptr %17064, align 2, !tbaa !28, !alias.scope !1093, !noalias !1096
  %17066 = xor i16 %17065, -1
  %17067 = uitofp i16 %17066 to float
  %17068 = fmul fast float %16934, %17067
  %17069 = fpext float %17068 to double
  %17070 = fadd fast double %17069, 5.000000e-01
  %17071 = fptoui double %17070 to i64
  tail call void @llvm.experimental.noalias.scope.decl(metadata !1199)
  %17072 = icmp eq i64 %17062, 0
  br i1 %17072, label %17073, label %17074

17073:                                            ; preds = %17061
  store i64 8, ptr %16935, align 8, !tbaa !69, !noalias !1202
  br label %17074

17074:                                            ; preds = %17073, %17061
  %17075 = phi i64 [ 8, %17073 ], [ %17062, %17061 ]
  br i1 %16938, label %17076, label %17102

17076:                                            ; preds = %17074, %17086
  %17077 = phi i64 [ %17097, %17086 ], [ %17075, %17074 ]
  %17078 = phi i64 [ %17082, %17086 ], [ %15412, %17074 ]
  %17079 = phi ptr [ %17099, %17086 ], [ %17063, %17074 ]
  %17080 = tail call i64 @llvm.umin.i64(i64 %17078, i64 %17077)
  %17081 = sub nsw i64 %17078, %17080
  %17082 = tail call i64 @llvm.smax.i64(i64 %17081, i64 0)
  %17083 = icmp eq i64 %17077, 8
  br i1 %17083, label %17086, label %17084

17084:                                            ; preds = %17076
  %17085 = load i8, ptr %17079, align 1, !tbaa !48, !alias.scope !1203, !noalias !1093
  br label %17086

17086:                                            ; preds = %17084, %17076
  %17087 = phi i8 [ %17085, %17084 ], [ 0, %17076 ]
  %17088 = sub i64 %17077, %17080
  %17089 = lshr i64 %17071, %17082
  %17090 = shl nsw i64 -1, %17080
  %17091 = xor i64 %17090, -1
  %17092 = and i64 %17089, %17091
  %17093 = shl i64 %17092, %17088
  %17094 = trunc i64 %17093 to i8
  %17095 = or i8 %17087, %17094
  store i8 %17095, ptr %17079, align 1, !tbaa !48, !alias.scope !1203, !noalias !1093
  %17096 = icmp ule i64 %17077, %17078
  %17097 = select i1 %17096, i64 8, i64 %17088
  %17098 = zext i1 %17096 to i64
  %17099 = getelementptr inbounds i8, ptr %17079, i64 %17098
  %17100 = icmp slt i64 %17081, 1
  br i1 %17100, label %17101, label %17076, !llvm.loop !75

17101:                                            ; preds = %17086
  store i64 %17097, ptr %16935, align 8, !tbaa !69, !noalias !1202
  br label %17102

17102:                                            ; preds = %17101, %17074
  %17103 = phi i64 [ %17075, %17074 ], [ %17097, %17101 ]
  %17104 = phi ptr [ %17063, %17074 ], [ %17099, %17101 ]
  %17105 = getelementptr inbounds %struct._PixelPacket, ptr %16942, i64 1
  %17106 = getelementptr inbounds i8, ptr %17104, i64 %16939
  %17107 = add nuw nsw i64 %16944, 1
  %17108 = icmp eq i64 %17107, %164
  br i1 %17108, label %17787, label %16940, !llvm.loop !1204

17109:                                            ; preds = %1191
  store i64 %1187, ptr %879, align 8, !tbaa !69, !noalias !1205
  br label %17787

17110:                                            ; preds = %1619
  store i64 %1615, ptr %1307, align 8, !tbaa !69, !noalias !1206
  br label %17787

17111:                                            ; preds = %14217
  store i64 %14213, ptr %13905, align 8, !tbaa !69, !noalias !1207
  br label %17787

17112:                                            ; preds = %14645
  store i64 %14641, ptr %14333, align 8, !tbaa !69, !noalias !1208
  br label %17787

17113:                                            ; preds = %271, %264
  %17114 = phi ptr [ %166, %264 ], [ %296, %271 ]
  %17115 = phi ptr [ %88, %264 ], [ %297, %271 ]
  %17116 = icmp eq i64 %267, 0
  br i1 %17116, label %17787, label %17117

17117:                                            ; preds = %17113
  %17118 = getelementptr inbounds %struct._PixelPacket, ptr %17114, i64 0, i32 3
  %17119 = load i16, ptr %17118, align 2, !tbaa !28, !alias.scope !40, !noalias !43
  %17120 = xor i16 %17119, -1
  %17121 = zext i16 %17120 to i64
  %17122 = add nuw nsw i64 %17121, 128
  %17123 = lshr i64 %17122, 8
  %17124 = sub nsw i64 %17122, %17123
  %17125 = lshr i64 %17124, 8
  %17126 = trunc i64 %17125 to i8
  store i8 %17126, ptr %17115, align 1, !tbaa !48, !alias.scope !43, !noalias !40
  br label %17787

17127:                                            ; preds = %325, %319
  %17128 = phi ptr [ %166, %319 ], [ %364, %325 ]
  %17129 = phi ptr [ %88, %319 ], [ %365, %325 ]
  %17130 = icmp eq i64 %321, 0
  br i1 %17130, label %17787, label %17131

17131:                                            ; preds = %17127, %17131
  %17132 = phi ptr [ %17143, %17131 ], [ %17128, %17127 ]
  %17133 = phi ptr [ %17144, %17131 ], [ %17129, %17127 ]
  %17134 = phi i64 [ %17145, %17131 ], [ 0, %17127 ]
  %17135 = getelementptr inbounds %struct._PixelPacket, ptr %17132, i64 0, i32 3
  %17136 = load i16, ptr %17135, align 2, !tbaa !28, !alias.scope !40, !noalias !43
  %17137 = xor i16 %17136, -1
  %17138 = lshr i16 %17137, 8
  %17139 = trunc i16 %17138 to i8
  %17140 = trunc i16 %17137 to i8
  store i8 %17140, ptr %17133, align 1, !alias.scope !43, !noalias !40
  %17141 = getelementptr inbounds i8, ptr %17133, i64 1
  store i8 %17139, ptr %17141, align 1, !alias.scope !43, !noalias !40
  %17142 = getelementptr inbounds i8, ptr %17133, i64 2
  %17143 = getelementptr inbounds %struct._PixelPacket, ptr %17132, i64 1
  %17144 = getelementptr inbounds i8, ptr %17142, i64 %312
  %17145 = add i64 %17134, 1
  %17146 = icmp eq i64 %17145, %321
  br i1 %17146, label %17787, label %17131, !llvm.loop !1209

17147:                                            ; preds = %458, %313
  %17148 = phi ptr [ %166, %313 ], [ %497, %458 ]
  %17149 = phi ptr [ %88, %313 ], [ %498, %458 ]
  %17150 = icmp eq i64 %315, 0
  br i1 %17150, label %17787, label %17151

17151:                                            ; preds = %17147, %17151
  %17152 = phi ptr [ %17163, %17151 ], [ %17148, %17147 ]
  %17153 = phi ptr [ %17164, %17151 ], [ %17149, %17147 ]
  %17154 = phi i64 [ %17165, %17151 ], [ 0, %17147 ]
  %17155 = getelementptr inbounds %struct._PixelPacket, ptr %17152, i64 0, i32 3
  %17156 = load i16, ptr %17155, align 2, !tbaa !28, !alias.scope !40, !noalias !43
  %17157 = xor i16 %17156, -1
  %17158 = lshr i16 %17157, 8
  %17159 = trunc i16 %17157 to i8
  %17160 = trunc i16 %17158 to i8
  store i8 %17160, ptr %17153, align 1, !alias.scope !43, !noalias !40
  %17161 = getelementptr inbounds i8, ptr %17153, i64 1
  store i8 %17159, ptr %17161, align 1, !alias.scope !43, !noalias !40
  %17162 = getelementptr inbounds i8, ptr %17153, i64 2
  %17163 = getelementptr inbounds %struct._PixelPacket, ptr %17152, i64 1
  %17164 = getelementptr inbounds i8, ptr %17162, i64 %312
  %17165 = add i64 %17154, 1
  %17166 = icmp eq i64 %17165, %315
  br i1 %17166, label %17787, label %17151, !llvm.loop !1210

17167:                                            ; preds = %523, %518
  %17168 = phi ptr [ %166, %518 ], [ %558, %523 ]
  %17169 = phi ptr [ %88, %518 ], [ %559, %523 ]
  %17170 = icmp eq i64 %519, 0
  br i1 %17170, label %17787, label %17171

17171:                                            ; preds = %17167
  %17172 = getelementptr inbounds %struct._PixelPacket, ptr %17168, i64 0, i32 3
  %17173 = load i16, ptr %17172, align 2, !tbaa !28, !alias.scope !40, !noalias !43
  %17174 = xor i16 %17173, -1
  %17175 = zext i16 %17174 to i32
  %17176 = mul nuw i32 %17175, 65537
  %17177 = lshr i32 %17176, 8
  %17178 = lshr i32 %17176, 24
  %17179 = trunc i32 %17178 to i8
  %17180 = trunc i16 %17174 to i8
  %17181 = trunc i32 %17177 to i8
  %17182 = trunc i32 %17176 to i8
  store i8 %17182, ptr %17169, align 1, !alias.scope !43, !noalias !40
  %17183 = getelementptr inbounds i8, ptr %17169, i64 1
  store i8 %17181, ptr %17183, align 1, !alias.scope !43, !noalias !40
  %17184 = getelementptr inbounds i8, ptr %17169, i64 2
  store i8 %17180, ptr %17184, align 1, !alias.scope !43, !noalias !40
  %17185 = getelementptr inbounds i8, ptr %17169, i64 3
  store i8 %17179, ptr %17185, align 1, !alias.scope !43, !noalias !40
  br label %17787

17186:                                            ; preds = %607, %513
  %17187 = phi ptr [ %166, %513 ], [ %642, %607 ]
  %17188 = phi ptr [ %88, %513 ], [ %643, %607 ]
  %17189 = icmp eq i64 %514, 0
  br i1 %17189, label %17787, label %17190

17190:                                            ; preds = %17186
  %17191 = getelementptr inbounds %struct._PixelPacket, ptr %17187, i64 0, i32 3
  %17192 = load i16, ptr %17191, align 2, !tbaa !28, !alias.scope !40, !noalias !43
  %17193 = xor i16 %17192, -1
  %17194 = zext i16 %17193 to i32
  %17195 = mul nuw i32 %17194, 65537
  %17196 = lshr i32 %17195, 24
  %17197 = lshr i32 %17195, 8
  %17198 = trunc i32 %17195 to i8
  %17199 = trunc i32 %17197 to i8
  %17200 = trunc i16 %17193 to i8
  %17201 = trunc i32 %17196 to i8
  store i8 %17201, ptr %17188, align 1, !alias.scope !43, !noalias !40
  %17202 = getelementptr inbounds i8, ptr %17188, i64 1
  store i8 %17200, ptr %17202, align 1, !alias.scope !43, !noalias !40
  %17203 = getelementptr inbounds i8, ptr %17188, i64 2
  store i8 %17199, ptr %17203, align 1, !alias.scope !43, !noalias !40
  %17204 = getelementptr inbounds i8, ptr %17188, i64 3
  store i8 %17198, ptr %17204, align 1, !alias.scope !43, !noalias !40
  br label %17787

17205:                                            ; preds = %4136, %4107
  %17206 = phi ptr [ %88, %4107 ], [ %4145, %4136 ]
  %17207 = phi i64 [ 0, %4107 ], [ %4146, %4136 ]
  %17208 = icmp eq i64 %4111, 0
  br i1 %17208, label %17787, label %17209

17209:                                            ; preds = %17205
  br i1 %4108, label %17215, label %17210

17210:                                            ; preds = %17209
  %17211 = getelementptr inbounds i16, ptr %165, i64 %17207
  %17212 = load i16, ptr %17211, align 2, !tbaa !37, !alias.scope !309, !noalias !312
  %17213 = zext i16 %17212 to i64
  %17214 = add nuw nsw i64 %17213, 128
  br label %17215

17215:                                            ; preds = %17210, %17209
  %17216 = phi i64 [ %17214, %17210 ], [ 128, %17209 ]
  %17217 = lshr i64 %17216, 8
  %17218 = sub nsw i64 %17216, %17217
  %17219 = lshr i64 %17218, 8
  %17220 = trunc i64 %17219 to i8
  store i8 %17220, ptr %17206, align 1, !tbaa !48, !alias.scope !312, !noalias !309
  br label %17787

17221:                                            ; preds = %4165, %4159
  %17222 = phi ptr [ %88, %4159 ], [ %4191, %4165 ]
  %17223 = icmp eq i64 %4161, 0
  br i1 %17223, label %17787, label %17224

17224:                                            ; preds = %17221, %17224
  %17225 = phi ptr [ %17229, %17224 ], [ %17222, %17221 ]
  %17226 = phi i64 [ %17230, %17224 ], [ 0, %17221 ]
  store i8 0, ptr %17225, align 1, !alias.scope !312, !noalias !309
  %17227 = getelementptr inbounds i8, ptr %17225, i64 1
  store i8 0, ptr %17227, align 1, !alias.scope !312, !noalias !309
  %17228 = getelementptr inbounds i8, ptr %17225, i64 2
  %17229 = getelementptr inbounds i8, ptr %17228, i64 %4158
  %17230 = add i64 %17226, 1
  %17231 = icmp eq i64 %17230, %4161
  br i1 %17231, label %17787, label %17224, !llvm.loop !1211

17232:                                            ; preds = %4211, %4205
  %17233 = phi ptr [ %88, %4205 ], [ %4249, %4211 ]
  %17234 = phi i64 [ 0, %4205 ], [ %4250, %4211 ]
  %17235 = icmp eq i64 %4207, 0
  br i1 %17235, label %17787, label %17236

17236:                                            ; preds = %17232, %17236
  %17237 = phi ptr [ %17247, %17236 ], [ %17233, %17232 ]
  %17238 = phi i64 [ %17248, %17236 ], [ %17234, %17232 ]
  %17239 = phi i64 [ %17249, %17236 ], [ 0, %17232 ]
  %17240 = getelementptr inbounds i16, ptr %165, i64 %17238
  %17241 = load i16, ptr %17240, align 2, !tbaa !37, !alias.scope !309, !noalias !312
  %17242 = lshr i16 %17241, 8
  %17243 = trunc i16 %17242 to i8
  %17244 = trunc i16 %17241 to i8
  store i8 %17244, ptr %17237, align 1, !alias.scope !312, !noalias !309
  %17245 = getelementptr inbounds i8, ptr %17237, i64 1
  store i8 %17243, ptr %17245, align 1, !alias.scope !312, !noalias !309
  %17246 = getelementptr inbounds i8, ptr %17237, i64 2
  %17247 = getelementptr inbounds i8, ptr %17246, i64 %4158
  %17248 = add nuw nsw i64 %17238, 1
  %17249 = add i64 %17239, 1
  %17250 = icmp eq i64 %17249, %4207
  br i1 %17250, label %17787, label %17236, !llvm.loop !1212

17251:                                            ; preds = %4345, %4199
  %17252 = phi ptr [ %88, %4199 ], [ %4383, %4345 ]
  %17253 = phi i64 [ 0, %4199 ], [ %4384, %4345 ]
  %17254 = icmp eq i64 %4201, 0
  br i1 %17254, label %17787, label %17255

17255:                                            ; preds = %17251, %17255
  %17256 = phi ptr [ %17266, %17255 ], [ %17252, %17251 ]
  %17257 = phi i64 [ %17267, %17255 ], [ %17253, %17251 ]
  %17258 = phi i64 [ %17268, %17255 ], [ 0, %17251 ]
  %17259 = getelementptr inbounds i16, ptr %165, i64 %17257
  %17260 = load i16, ptr %17259, align 2, !tbaa !37, !alias.scope !309, !noalias !312
  %17261 = lshr i16 %17260, 8
  %17262 = trunc i16 %17260 to i8
  %17263 = trunc i16 %17261 to i8
  store i8 %17263, ptr %17256, align 1, !alias.scope !312, !noalias !309
  %17264 = getelementptr inbounds i8, ptr %17256, i64 1
  store i8 %17262, ptr %17264, align 1, !alias.scope !312, !noalias !309
  %17265 = getelementptr inbounds i8, ptr %17256, i64 2
  %17266 = getelementptr inbounds i8, ptr %17265, i64 %4158
  %17267 = add nuw nsw i64 %17257, 1
  %17268 = add i64 %17258, 1
  %17269 = icmp eq i64 %17268, %4201
  br i1 %17269, label %17787, label %17255, !llvm.loop !1213

17270:                                            ; preds = %4412, %4406
  %17271 = phi ptr [ %88, %4406 ], [ %4430, %4412 ]
  %17272 = icmp eq i64 %4408, 0
  br i1 %17272, label %17787, label %17273

17273:                                            ; preds = %17270, %17273
  %17274 = phi ptr [ %17277, %17273 ], [ %17271, %17270 ]
  %17275 = phi i64 [ %17278, %17273 ], [ 0, %17270 ]
  %17276 = getelementptr inbounds i8, ptr %17274, i64 4
  %17277 = getelementptr inbounds i8, ptr %17276, i64 %4399
  store i32 0, ptr %17274, align 1, !alias.scope !312, !noalias !309
  %17278 = add i64 %17275, 1
  %17279 = icmp eq i64 %17278, %4408
  br i1 %17279, label %17787, label %17273, !llvm.loop !1214

17280:                                            ; preds = %4433, %4401
  %17281 = phi ptr [ %88, %4401 ], [ %4467, %4433 ]
  %17282 = phi i64 [ 0, %4401 ], [ %4468, %4433 ]
  %17283 = icmp eq i64 %4402, 0
  br i1 %17283, label %17787, label %17284

17284:                                            ; preds = %17280
  %17285 = getelementptr inbounds i16, ptr %165, i64 %17282
  %17286 = load i16, ptr %17285, align 2, !tbaa !37, !alias.scope !309, !noalias !312
  %17287 = zext i16 %17286 to i32
  %17288 = mul nuw i32 %17287, 65537
  %17289 = lshr i32 %17288, 8
  %17290 = lshr i32 %17288, 24
  %17291 = trunc i32 %17290 to i8
  %17292 = trunc i16 %17286 to i8
  %17293 = trunc i32 %17289 to i8
  %17294 = trunc i32 %17288 to i8
  store i8 %17294, ptr %17281, align 1, !alias.scope !312, !noalias !309
  %17295 = getelementptr inbounds i8, ptr %17281, i64 1
  store i8 %17293, ptr %17295, align 1, !alias.scope !312, !noalias !309
  %17296 = getelementptr inbounds i8, ptr %17281, i64 2
  store i8 %17292, ptr %17296, align 1, !alias.scope !312, !noalias !309
  %17297 = getelementptr inbounds i8, ptr %17281, i64 3
  store i8 %17291, ptr %17297, align 1, !alias.scope !312, !noalias !309
  br label %17787

17298:                                            ; preds = %4483, %4477
  %17299 = phi ptr [ %88, %4477 ], [ %4501, %4483 ]
  %17300 = icmp eq i64 %4479, 0
  br i1 %17300, label %17787, label %17301

17301:                                            ; preds = %17298, %17301
  %17302 = phi ptr [ %17305, %17301 ], [ %17299, %17298 ]
  %17303 = phi i64 [ %17306, %17301 ], [ 0, %17298 ]
  %17304 = getelementptr inbounds i8, ptr %17302, i64 4
  %17305 = getelementptr inbounds i8, ptr %17304, i64 %4399
  store i32 0, ptr %17302, align 1, !alias.scope !312, !noalias !309
  %17306 = add i64 %17303, 1
  %17307 = icmp eq i64 %17306, %4479
  br i1 %17307, label %17787, label %17301, !llvm.loop !1215

17308:                                            ; preds = %4551, %4472
  %17309 = phi ptr [ %88, %4472 ], [ %4585, %4551 ]
  %17310 = phi i64 [ 0, %4472 ], [ %4586, %4551 ]
  %17311 = icmp eq i64 %4473, 0
  br i1 %17311, label %17787, label %17312

17312:                                            ; preds = %17308
  %17313 = getelementptr inbounds i16, ptr %165, i64 %17310
  %17314 = load i16, ptr %17313, align 2, !tbaa !37, !alias.scope !309, !noalias !312
  %17315 = zext i16 %17314 to i32
  %17316 = mul nuw i32 %17315, 65537
  %17317 = lshr i32 %17316, 24
  %17318 = lshr i32 %17316, 8
  %17319 = trunc i32 %17316 to i8
  %17320 = trunc i32 %17318 to i8
  %17321 = trunc i16 %17314 to i8
  %17322 = trunc i32 %17317 to i8
  store i8 %17322, ptr %17309, align 1, !alias.scope !312, !noalias !309
  %17323 = getelementptr inbounds i8, ptr %17309, i64 1
  store i8 %17321, ptr %17323, align 1, !alias.scope !312, !noalias !309
  %17324 = getelementptr inbounds i8, ptr %17309, i64 2
  store i8 %17320, ptr %17324, align 1, !alias.scope !312, !noalias !309
  %17325 = getelementptr inbounds i8, ptr %17309, i64 3
  store i8 %17319, ptr %17325, align 1, !alias.scope !312, !noalias !309
  br label %17787

17326:                                            ; preds = %4733, %4726
  %17327 = phi ptr [ %166, %4726 ], [ %4755, %4733 ]
  %17328 = phi ptr [ %88, %4726 ], [ %4756, %4733 ]
  %17329 = icmp eq i64 %4729, 0
  br i1 %17329, label %17787, label %17330

17330:                                            ; preds = %17326
  %17331 = load i16, ptr %17327, align 2, !tbaa !31, !alias.scope !338, !noalias !341
  %17332 = zext i16 %17331 to i64
  %17333 = add nuw nsw i64 %17332, 128
  %17334 = lshr i64 %17333, 8
  %17335 = sub nsw i64 %17333, %17334
  %17336 = lshr i64 %17335, 8
  %17337 = trunc i64 %17336 to i8
  store i8 %17337, ptr %17328, align 1, !tbaa !48, !alias.scope !341, !noalias !338
  br label %17787

17338:                                            ; preds = %4784, %4778
  %17339 = phi ptr [ %166, %4778 ], [ %4818, %4784 ]
  %17340 = phi ptr [ %88, %4778 ], [ %4819, %4784 ]
  %17341 = icmp eq i64 %4780, 0
  br i1 %17341, label %17787, label %17342

17342:                                            ; preds = %17338, %17342
  %17343 = phi ptr [ %17352, %17342 ], [ %17339, %17338 ]
  %17344 = phi ptr [ %17353, %17342 ], [ %17340, %17338 ]
  %17345 = phi i64 [ %17354, %17342 ], [ 0, %17338 ]
  %17346 = load i16, ptr %17343, align 2, !tbaa !31, !alias.scope !338, !noalias !341
  %17347 = lshr i16 %17346, 8
  %17348 = trunc i16 %17347 to i8
  %17349 = trunc i16 %17346 to i8
  store i8 %17349, ptr %17344, align 1, !alias.scope !341, !noalias !338
  %17350 = getelementptr inbounds i8, ptr %17344, i64 1
  store i8 %17348, ptr %17350, align 1, !alias.scope !341, !noalias !338
  %17351 = getelementptr inbounds i8, ptr %17344, i64 2
  %17352 = getelementptr inbounds %struct._PixelPacket, ptr %17343, i64 1
  %17353 = getelementptr inbounds i8, ptr %17351, i64 %4771
  %17354 = add i64 %17345, 1
  %17355 = icmp eq i64 %17354, %4780
  br i1 %17355, label %17787, label %17342, !llvm.loop !1216

17356:                                            ; preds = %4910, %4772
  %17357 = phi ptr [ %166, %4772 ], [ %4944, %4910 ]
  %17358 = phi ptr [ %88, %4772 ], [ %4945, %4910 ]
  %17359 = icmp eq i64 %4774, 0
  br i1 %17359, label %17787, label %17360

17360:                                            ; preds = %17356, %17360
  %17361 = phi ptr [ %17370, %17360 ], [ %17357, %17356 ]
  %17362 = phi ptr [ %17371, %17360 ], [ %17358, %17356 ]
  %17363 = phi i64 [ %17372, %17360 ], [ 0, %17356 ]
  %17364 = load i16, ptr %17361, align 2, !tbaa !31, !alias.scope !338, !noalias !341
  %17365 = lshr i16 %17364, 8
  %17366 = trunc i16 %17364 to i8
  %17367 = trunc i16 %17365 to i8
  store i8 %17367, ptr %17362, align 1, !alias.scope !341, !noalias !338
  %17368 = getelementptr inbounds i8, ptr %17362, i64 1
  store i8 %17366, ptr %17368, align 1, !alias.scope !341, !noalias !338
  %17369 = getelementptr inbounds i8, ptr %17362, i64 2
  %17370 = getelementptr inbounds %struct._PixelPacket, ptr %17361, i64 1
  %17371 = getelementptr inbounds i8, ptr %17369, i64 %4771
  %17372 = add i64 %17363, 1
  %17373 = icmp eq i64 %17372, %4774
  br i1 %17373, label %17787, label %17360, !llvm.loop !1217

17374:                                            ; preds = %4970, %4965
  %17375 = phi ptr [ %166, %4965 ], [ %5002, %4970 ]
  %17376 = phi ptr [ %88, %4965 ], [ %5003, %4970 ]
  %17377 = icmp eq i64 %4966, 0
  br i1 %17377, label %17787, label %17378

17378:                                            ; preds = %17374
  %17379 = load i16, ptr %17375, align 2, !tbaa !31, !alias.scope !338, !noalias !341
  %17380 = zext i16 %17379 to i32
  %17381 = mul nuw i32 %17380, 65537
  %17382 = lshr i32 %17381, 8
  %17383 = lshr i32 %17381, 24
  %17384 = trunc i32 %17383 to i8
  %17385 = trunc i16 %17379 to i8
  %17386 = trunc i32 %17382 to i8
  %17387 = trunc i32 %17381 to i8
  store i8 %17387, ptr %17376, align 1, !alias.scope !341, !noalias !338
  %17388 = getelementptr inbounds i8, ptr %17376, i64 1
  store i8 %17386, ptr %17388, align 1, !alias.scope !341, !noalias !338
  %17389 = getelementptr inbounds i8, ptr %17376, i64 2
  store i8 %17385, ptr %17389, align 1, !alias.scope !341, !noalias !338
  %17390 = getelementptr inbounds i8, ptr %17376, i64 3
  store i8 %17384, ptr %17390, align 1, !alias.scope !341, !noalias !338
  br label %17787

17391:                                            ; preds = %5049, %4960
  %17392 = phi ptr [ %166, %4960 ], [ %5081, %5049 ]
  %17393 = phi ptr [ %88, %4960 ], [ %5082, %5049 ]
  %17394 = icmp eq i64 %4961, 0
  br i1 %17394, label %17787, label %17395

17395:                                            ; preds = %17391
  %17396 = load i16, ptr %17392, align 2, !tbaa !31, !alias.scope !338, !noalias !341
  %17397 = zext i16 %17396 to i32
  %17398 = mul nuw i32 %17397, 65537
  %17399 = lshr i32 %17398, 24
  %17400 = lshr i32 %17398, 8
  %17401 = trunc i32 %17398 to i8
  %17402 = trunc i32 %17400 to i8
  %17403 = trunc i16 %17396 to i8
  %17404 = trunc i32 %17399 to i8
  store i8 %17404, ptr %17393, align 1, !alias.scope !341, !noalias !338
  %17405 = getelementptr inbounds i8, ptr %17393, i64 1
  store i8 %17403, ptr %17405, align 1, !alias.scope !341, !noalias !338
  %17406 = getelementptr inbounds i8, ptr %17393, i64 2
  store i8 %17402, ptr %17406, align 1, !alias.scope !341, !noalias !338
  %17407 = getelementptr inbounds i8, ptr %17393, i64 3
  store i8 %17401, ptr %17407, align 1, !alias.scope !341, !noalias !338
  br label %17787

17408:                                            ; preds = %10294, %10287
  %17409 = phi ptr [ %166, %10287 ], [ %10317, %10294 ]
  %17410 = phi ptr [ %88, %10287 ], [ %10318, %10294 ]
  %17411 = icmp eq i64 %10290, 0
  br i1 %17411, label %17787, label %17412

17412:                                            ; preds = %17408
  %17413 = getelementptr inbounds %struct._PixelPacket, ptr %17409, i64 0, i32 1
  %17414 = load i16, ptr %17413, align 2, !tbaa !30, !alias.scope !801, !noalias !804
  %17415 = zext i16 %17414 to i64
  %17416 = add nuw nsw i64 %17415, 128
  %17417 = lshr i64 %17416, 8
  %17418 = sub nsw i64 %17416, %17417
  %17419 = lshr i64 %17418, 8
  %17420 = trunc i64 %17419 to i8
  store i8 %17420, ptr %17410, align 1, !tbaa !48, !alias.scope !804, !noalias !801
  br label %17787

17421:                                            ; preds = %10346, %10340
  %17422 = phi ptr [ %166, %10340 ], [ %10381, %10346 ]
  %17423 = phi ptr [ %88, %10340 ], [ %10382, %10346 ]
  %17424 = icmp eq i64 %10342, 0
  br i1 %17424, label %17787, label %17425

17425:                                            ; preds = %17421, %17425
  %17426 = phi ptr [ %17436, %17425 ], [ %17422, %17421 ]
  %17427 = phi ptr [ %17437, %17425 ], [ %17423, %17421 ]
  %17428 = phi i64 [ %17438, %17425 ], [ 0, %17421 ]
  %17429 = getelementptr inbounds %struct._PixelPacket, ptr %17426, i64 0, i32 1
  %17430 = load i16, ptr %17429, align 2, !tbaa !30, !alias.scope !801, !noalias !804
  %17431 = lshr i16 %17430, 8
  %17432 = trunc i16 %17431 to i8
  %17433 = trunc i16 %17430 to i8
  store i8 %17433, ptr %17427, align 1, !alias.scope !804, !noalias !801
  %17434 = getelementptr inbounds i8, ptr %17427, i64 1
  store i8 %17432, ptr %17434, align 1, !alias.scope !804, !noalias !801
  %17435 = getelementptr inbounds i8, ptr %17427, i64 2
  %17436 = getelementptr inbounds %struct._PixelPacket, ptr %17426, i64 1
  %17437 = getelementptr inbounds i8, ptr %17435, i64 %10333
  %17438 = add i64 %17428, 1
  %17439 = icmp eq i64 %17438, %10342
  br i1 %17439, label %17787, label %17425, !llvm.loop !1218

17440:                                            ; preds = %10474, %10334
  %17441 = phi ptr [ %166, %10334 ], [ %10509, %10474 ]
  %17442 = phi ptr [ %88, %10334 ], [ %10510, %10474 ]
  %17443 = icmp eq i64 %10336, 0
  br i1 %17443, label %17787, label %17444

17444:                                            ; preds = %17440, %17444
  %17445 = phi ptr [ %17455, %17444 ], [ %17441, %17440 ]
  %17446 = phi ptr [ %17456, %17444 ], [ %17442, %17440 ]
  %17447 = phi i64 [ %17457, %17444 ], [ 0, %17440 ]
  %17448 = getelementptr inbounds %struct._PixelPacket, ptr %17445, i64 0, i32 1
  %17449 = load i16, ptr %17448, align 2, !tbaa !30, !alias.scope !801, !noalias !804
  %17450 = lshr i16 %17449, 8
  %17451 = trunc i16 %17449 to i8
  %17452 = trunc i16 %17450 to i8
  store i8 %17452, ptr %17446, align 1, !alias.scope !804, !noalias !801
  %17453 = getelementptr inbounds i8, ptr %17446, i64 1
  store i8 %17451, ptr %17453, align 1, !alias.scope !804, !noalias !801
  %17454 = getelementptr inbounds i8, ptr %17446, i64 2
  %17455 = getelementptr inbounds %struct._PixelPacket, ptr %17445, i64 1
  %17456 = getelementptr inbounds i8, ptr %17454, i64 %10333
  %17457 = add i64 %17447, 1
  %17458 = icmp eq i64 %17457, %10336
  br i1 %17458, label %17787, label %17444, !llvm.loop !1219

17459:                                            ; preds = %10535, %10530
  %17460 = phi ptr [ %166, %10530 ], [ %10568, %10535 ]
  %17461 = phi ptr [ %88, %10530 ], [ %10569, %10535 ]
  %17462 = icmp eq i64 %10531, 0
  br i1 %17462, label %17787, label %17463

17463:                                            ; preds = %17459
  %17464 = getelementptr inbounds %struct._PixelPacket, ptr %17460, i64 0, i32 1
  %17465 = load i16, ptr %17464, align 2, !tbaa !30, !alias.scope !801, !noalias !804
  %17466 = zext i16 %17465 to i32
  %17467 = mul nuw i32 %17466, 65537
  %17468 = lshr i32 %17467, 8
  %17469 = lshr i32 %17467, 24
  %17470 = trunc i32 %17469 to i8
  %17471 = trunc i16 %17465 to i8
  %17472 = trunc i32 %17468 to i8
  %17473 = trunc i32 %17467 to i8
  store i8 %17473, ptr %17461, align 1, !alias.scope !804, !noalias !801
  %17474 = getelementptr inbounds i8, ptr %17461, i64 1
  store i8 %17472, ptr %17474, align 1, !alias.scope !804, !noalias !801
  %17475 = getelementptr inbounds i8, ptr %17461, i64 2
  store i8 %17471, ptr %17475, align 1, !alias.scope !804, !noalias !801
  %17476 = getelementptr inbounds i8, ptr %17461, i64 3
  store i8 %17470, ptr %17476, align 1, !alias.scope !804, !noalias !801
  br label %17787

17477:                                            ; preds = %10616, %10525
  %17478 = phi ptr [ %166, %10525 ], [ %10649, %10616 ]
  %17479 = phi ptr [ %88, %10525 ], [ %10650, %10616 ]
  %17480 = icmp eq i64 %10526, 0
  br i1 %17480, label %17787, label %17481

17481:                                            ; preds = %17477
  %17482 = getelementptr inbounds %struct._PixelPacket, ptr %17478, i64 0, i32 1
  %17483 = load i16, ptr %17482, align 2, !tbaa !30, !alias.scope !801, !noalias !804
  %17484 = zext i16 %17483 to i32
  %17485 = mul nuw i32 %17484, 65537
  %17486 = lshr i32 %17485, 24
  %17487 = lshr i32 %17485, 8
  %17488 = trunc i32 %17485 to i8
  %17489 = trunc i32 %17487 to i8
  %17490 = trunc i16 %17483 to i8
  %17491 = trunc i32 %17486 to i8
  store i8 %17491, ptr %17479, align 1, !alias.scope !804, !noalias !801
  %17492 = getelementptr inbounds i8, ptr %17479, i64 1
  store i8 %17490, ptr %17492, align 1, !alias.scope !804, !noalias !801
  %17493 = getelementptr inbounds i8, ptr %17479, i64 2
  store i8 %17489, ptr %17493, align 1, !alias.scope !804, !noalias !801
  %17494 = getelementptr inbounds i8, ptr %17479, i64 3
  store i8 %17488, ptr %17494, align 1, !alias.scope !804, !noalias !801
  br label %17787

17495:                                            ; preds = %10805, %10799
  %17496 = phi ptr [ %88, %10799 ], [ %10823, %10805 ]
  %17497 = icmp eq i64 %10801, 0
  br i1 %17497, label %17787, label %17498

17498:                                            ; preds = %17495, %17498
  %17499 = phi ptr [ %17502, %17498 ], [ %17496, %17495 ]
  %17500 = phi i64 [ %17503, %17498 ], [ 0, %17495 ]
  %17501 = getelementptr inbounds i8, ptr %17499, i64 1
  store i8 0, ptr %17499, align 1, !tbaa !48, !alias.scope !832, !noalias !829
  %17502 = getelementptr inbounds i8, ptr %17501, i64 %10792
  %17503 = add i64 %17500, 1
  %17504 = icmp eq i64 %17503, %10801
  br i1 %17504, label %17787, label %17498, !llvm.loop !1220

17505:                                            ; preds = %11098, %10793
  %17506 = phi i64 [ 0, %10793 ], [ %11149, %11098 ]
  %17507 = phi ptr [ %88, %10793 ], [ %11148, %11098 ]
  %17508 = icmp eq i64 %10795, 0
  br i1 %17508, label %17787, label %17509

17509:                                            ; preds = %17505, %17509
  %17510 = phi i64 [ %17518, %17509 ], [ %17506, %17505 ]
  %17511 = phi ptr [ %17517, %17509 ], [ %17507, %17505 ]
  %17512 = phi i64 [ %17519, %17509 ], [ 0, %17505 ]
  %17513 = getelementptr inbounds i16, ptr %165, i64 %17510
  %17514 = load i16, ptr %17513, align 2, !tbaa !37, !alias.scope !829, !noalias !832
  %17515 = trunc i16 %17514 to i8
  %17516 = getelementptr inbounds i8, ptr %17511, i64 1
  store i8 %17515, ptr %17511, align 1, !tbaa !48, !alias.scope !832, !noalias !829
  %17517 = getelementptr inbounds i8, ptr %17516, i64 %10792
  %17518 = add nuw nsw i64 %17510, 1
  %17519 = add i64 %17512, 1
  %17520 = icmp eq i64 %17519, %10795
  br i1 %17520, label %17787, label %17509, !llvm.loop !1221

17521:                                            ; preds = %11168, %11162
  %17522 = phi ptr [ %88, %11162 ], [ %11194, %11168 ]
  %17523 = icmp eq i64 %11164, 0
  br i1 %17523, label %17787, label %17524

17524:                                            ; preds = %17521, %17524
  %17525 = phi ptr [ %17529, %17524 ], [ %17522, %17521 ]
  %17526 = phi i64 [ %17530, %17524 ], [ 0, %17521 ]
  store i8 0, ptr %17525, align 1, !alias.scope !832, !noalias !829
  %17527 = getelementptr inbounds i8, ptr %17525, i64 1
  store i8 0, ptr %17527, align 1, !alias.scope !832, !noalias !829
  %17528 = getelementptr inbounds i8, ptr %17525, i64 2
  %17529 = getelementptr inbounds i8, ptr %17528, i64 %11161
  %17530 = add i64 %17526, 1
  %17531 = icmp eq i64 %17530, %11164
  br i1 %17531, label %17787, label %17524, !llvm.loop !1222

17532:                                            ; preds = %11214, %11208
  %17533 = phi i64 [ 0, %11208 ], [ %11253, %11214 ]
  %17534 = phi ptr [ %88, %11208 ], [ %11252, %11214 ]
  %17535 = icmp eq i64 %11210, 0
  br i1 %17535, label %17787, label %17536

17536:                                            ; preds = %17532, %17536
  %17537 = phi i64 [ %17548, %17536 ], [ %17533, %17532 ]
  %17538 = phi ptr [ %17547, %17536 ], [ %17534, %17532 ]
  %17539 = phi i64 [ %17549, %17536 ], [ 0, %17532 ]
  %17540 = getelementptr inbounds i16, ptr %165, i64 %17537
  %17541 = load i16, ptr %17540, align 2, !tbaa !37, !alias.scope !829, !noalias !832
  %17542 = lshr i16 %17541, 8
  %17543 = trunc i16 %17542 to i8
  %17544 = trunc i16 %17541 to i8
  store i8 %17544, ptr %17538, align 1, !alias.scope !832, !noalias !829
  %17545 = getelementptr inbounds i8, ptr %17538, i64 1
  store i8 %17543, ptr %17545, align 1, !alias.scope !832, !noalias !829
  %17546 = getelementptr inbounds i8, ptr %17538, i64 2
  %17547 = getelementptr inbounds i8, ptr %17546, i64 %11161
  %17548 = add nuw nsw i64 %17537, 1
  %17549 = add i64 %17539, 1
  %17550 = icmp eq i64 %17549, %11210
  br i1 %17550, label %17787, label %17536, !llvm.loop !1223

17551:                                            ; preds = %11348, %11202
  %17552 = phi i64 [ 0, %11202 ], [ %11387, %11348 ]
  %17553 = phi ptr [ %88, %11202 ], [ %11386, %11348 ]
  %17554 = icmp eq i64 %11204, 0
  br i1 %17554, label %17787, label %17555

17555:                                            ; preds = %17551, %17555
  %17556 = phi i64 [ %17567, %17555 ], [ %17552, %17551 ]
  %17557 = phi ptr [ %17566, %17555 ], [ %17553, %17551 ]
  %17558 = phi i64 [ %17568, %17555 ], [ 0, %17551 ]
  %17559 = getelementptr inbounds i16, ptr %165, i64 %17556
  %17560 = load i16, ptr %17559, align 2, !tbaa !37, !alias.scope !829, !noalias !832
  %17561 = lshr i16 %17560, 8
  %17562 = trunc i16 %17560 to i8
  %17563 = trunc i16 %17561 to i8
  store i8 %17563, ptr %17557, align 1, !alias.scope !832, !noalias !829
  %17564 = getelementptr inbounds i8, ptr %17557, i64 1
  store i8 %17562, ptr %17564, align 1, !alias.scope !832, !noalias !829
  %17565 = getelementptr inbounds i8, ptr %17557, i64 2
  %17566 = getelementptr inbounds i8, ptr %17565, i64 %11161
  %17567 = add nuw nsw i64 %17556, 1
  %17568 = add i64 %17558, 1
  %17569 = icmp eq i64 %17568, %11204
  br i1 %17569, label %17787, label %17555, !llvm.loop !1224

17570:                                            ; preds = %11481, %11396
  %17571 = phi i64 [ 0, %11396 ], [ %11495, %11481 ]
  %17572 = phi ptr [ %88, %11396 ], [ %11494, %11481 ]
  %17573 = icmp eq i64 %11403, 0
  br i1 %17573, label %17787, label %17574

17574:                                            ; preds = %17570
  br i1 %11399, label %17579, label %17575

17575:                                            ; preds = %17574
  %17576 = getelementptr inbounds i16, ptr %165, i64 %17571
  %17577 = load i16, ptr %17576, align 2, !tbaa !37, !alias.scope !829, !noalias !832
  %17578 = zext i16 %17577 to i32
  br label %17579

17579:                                            ; preds = %17575, %17574
  %17580 = phi i32 [ %17578, %17575 ], [ 0, %17574 ]
  %17581 = lshr i32 %17580, 8
  %17582 = trunc i32 %17580 to i8
  %17583 = trunc i32 %17581 to i8
  %17584 = select i1 %11400, i8 0, i8 %17582
  %17585 = select i1 %11400, i8 0, i8 %17583
  %17586 = select i1 %11400, i8 %17583, i8 0
  %17587 = select i1 %11400, i8 %17582, i8 0
  store i8 %17587, ptr %17572, align 1, !alias.scope !832, !noalias !829
  %17588 = getelementptr inbounds i8, ptr %17572, i64 1
  store i8 %17586, ptr %17588, align 1, !alias.scope !832, !noalias !829
  %17589 = getelementptr inbounds i8, ptr %17572, i64 2
  store i8 %17585, ptr %17589, align 1, !alias.scope !832, !noalias !829
  %17590 = getelementptr inbounds i8, ptr %17572, i64 3
  store i8 %17584, ptr %17590, align 1, !alias.scope !832, !noalias !829
  br label %17787

17591:                                            ; preds = %12281, %11632
  %17592 = phi ptr [ %166, %11632 ], [ %12294, %12281 ]
  %17593 = phi ptr [ %88, %11632 ], [ %12295, %12281 ]
  %17594 = phi i64 [ 0, %11632 ], [ %12296, %12281 ]
  %17595 = icmp eq i64 %11636, 0
  br i1 %17595, label %17787, label %17596

17596:                                            ; preds = %17591
  br i1 %11633, label %17601, label %17597

17597:                                            ; preds = %17596
  %17598 = getelementptr inbounds i16, ptr %165, i64 %17594
  %17599 = load i16, ptr %17598, align 2, !tbaa !37, !alias.scope !868, !noalias !874
  %17600 = trunc i16 %17599 to i8
  br label %17601

17601:                                            ; preds = %17597, %17596
  %17602 = phi i8 [ %17600, %17597 ], [ 0, %17596 ]
  %17603 = getelementptr inbounds i8, ptr %17593, i64 1
  store i8 %17602, ptr %17593, align 1, !tbaa !48, !alias.scope !870, !noalias !873
  %17604 = getelementptr inbounds %struct._PixelPacket, ptr %17592, i64 0, i32 3
  %17605 = load i16, ptr %17604, align 2, !tbaa !28, !alias.scope !865, !noalias !875
  %17606 = xor i16 %17605, -1
  %17607 = zext i16 %17606 to i64
  %17608 = add nuw nsw i64 %17607, 128
  %17609 = lshr i64 %17608, 8
  %17610 = sub nsw i64 %17608, %17609
  %17611 = lshr i64 %17610, 8
  %17612 = trunc i64 %17611 to i8
  store i8 %17612, ptr %17603, align 1, !tbaa !48, !alias.scope !870, !noalias !873
  br label %17787

17613:                                            ; preds = %12816, %12809
  %17614 = phi ptr [ %166, %12809 ], [ %12839, %12816 ]
  %17615 = phi ptr [ %88, %12809 ], [ %12840, %12816 ]
  %17616 = icmp eq i64 %12812, 0
  br i1 %17616, label %17787, label %17617

17617:                                            ; preds = %17613
  %17618 = getelementptr inbounds %struct._PixelPacket, ptr %17614, i64 0, i32 3
  %17619 = load i16, ptr %17618, align 2, !tbaa !28, !alias.scope !923, !noalias !926
  %17620 = zext i16 %17619 to i64
  %17621 = add nuw nsw i64 %17620, 128
  %17622 = lshr i64 %17621, 8
  %17623 = sub nsw i64 %17621, %17622
  %17624 = lshr i64 %17623, 8
  %17625 = trunc i64 %17624 to i8
  store i8 %17625, ptr %17615, align 1, !tbaa !48, !alias.scope !926, !noalias !923
  br label %17787

17626:                                            ; preds = %12868, %12862
  %17627 = phi ptr [ %166, %12862 ], [ %12903, %12868 ]
  %17628 = phi ptr [ %88, %12862 ], [ %12904, %12868 ]
  %17629 = icmp eq i64 %12864, 0
  br i1 %17629, label %17787, label %17630

17630:                                            ; preds = %17626, %17630
  %17631 = phi ptr [ %17641, %17630 ], [ %17627, %17626 ]
  %17632 = phi ptr [ %17642, %17630 ], [ %17628, %17626 ]
  %17633 = phi i64 [ %17643, %17630 ], [ 0, %17626 ]
  %17634 = getelementptr inbounds %struct._PixelPacket, ptr %17631, i64 0, i32 3
  %17635 = load i16, ptr %17634, align 2, !tbaa !28, !alias.scope !923, !noalias !926
  %17636 = lshr i16 %17635, 8
  %17637 = trunc i16 %17636 to i8
  %17638 = trunc i16 %17635 to i8
  store i8 %17638, ptr %17632, align 1, !alias.scope !926, !noalias !923
  %17639 = getelementptr inbounds i8, ptr %17632, i64 1
  store i8 %17637, ptr %17639, align 1, !alias.scope !926, !noalias !923
  %17640 = getelementptr inbounds i8, ptr %17632, i64 2
  %17641 = getelementptr inbounds %struct._PixelPacket, ptr %17631, i64 1
  %17642 = getelementptr inbounds i8, ptr %17640, i64 %12855
  %17643 = add i64 %17633, 1
  %17644 = icmp eq i64 %17643, %12864
  br i1 %17644, label %17787, label %17630, !llvm.loop !1225

17645:                                            ; preds = %12996, %12856
  %17646 = phi ptr [ %166, %12856 ], [ %13031, %12996 ]
  %17647 = phi ptr [ %88, %12856 ], [ %13032, %12996 ]
  %17648 = icmp eq i64 %12858, 0
  br i1 %17648, label %17787, label %17649

17649:                                            ; preds = %17645, %17649
  %17650 = phi ptr [ %17660, %17649 ], [ %17646, %17645 ]
  %17651 = phi ptr [ %17661, %17649 ], [ %17647, %17645 ]
  %17652 = phi i64 [ %17662, %17649 ], [ 0, %17645 ]
  %17653 = getelementptr inbounds %struct._PixelPacket, ptr %17650, i64 0, i32 3
  %17654 = load i16, ptr %17653, align 2, !tbaa !28, !alias.scope !923, !noalias !926
  %17655 = lshr i16 %17654, 8
  %17656 = trunc i16 %17654 to i8
  %17657 = trunc i16 %17655 to i8
  store i8 %17657, ptr %17651, align 1, !alias.scope !926, !noalias !923
  %17658 = getelementptr inbounds i8, ptr %17651, i64 1
  store i8 %17656, ptr %17658, align 1, !alias.scope !926, !noalias !923
  %17659 = getelementptr inbounds i8, ptr %17651, i64 2
  %17660 = getelementptr inbounds %struct._PixelPacket, ptr %17650, i64 1
  %17661 = getelementptr inbounds i8, ptr %17659, i64 %12855
  %17662 = add i64 %17652, 1
  %17663 = icmp eq i64 %17662, %12858
  br i1 %17663, label %17787, label %17649, !llvm.loop !1226

17664:                                            ; preds = %13057, %13052
  %17665 = phi ptr [ %166, %13052 ], [ %13090, %13057 ]
  %17666 = phi ptr [ %88, %13052 ], [ %13091, %13057 ]
  %17667 = icmp eq i64 %13053, 0
  br i1 %17667, label %17787, label %17668

17668:                                            ; preds = %17664
  %17669 = getelementptr inbounds %struct._PixelPacket, ptr %17665, i64 0, i32 3
  %17670 = load i16, ptr %17669, align 2, !tbaa !28, !alias.scope !923, !noalias !926
  %17671 = zext i16 %17670 to i32
  %17672 = mul nuw i32 %17671, 65537
  %17673 = lshr i32 %17672, 8
  %17674 = lshr i32 %17672, 24
  %17675 = trunc i32 %17674 to i8
  %17676 = trunc i16 %17670 to i8
  %17677 = trunc i32 %17673 to i8
  %17678 = trunc i32 %17672 to i8
  store i8 %17678, ptr %17666, align 1, !alias.scope !926, !noalias !923
  %17679 = getelementptr inbounds i8, ptr %17666, i64 1
  store i8 %17677, ptr %17679, align 1, !alias.scope !926, !noalias !923
  %17680 = getelementptr inbounds i8, ptr %17666, i64 2
  store i8 %17676, ptr %17680, align 1, !alias.scope !926, !noalias !923
  %17681 = getelementptr inbounds i8, ptr %17666, i64 3
  store i8 %17675, ptr %17681, align 1, !alias.scope !926, !noalias !923
  br label %17787

17682:                                            ; preds = %13138, %13047
  %17683 = phi ptr [ %166, %13047 ], [ %13171, %13138 ]
  %17684 = phi ptr [ %88, %13047 ], [ %13172, %13138 ]
  %17685 = icmp eq i64 %13048, 0
  br i1 %17685, label %17787, label %17686

17686:                                            ; preds = %17682
  %17687 = getelementptr inbounds %struct._PixelPacket, ptr %17683, i64 0, i32 3
  %17688 = load i16, ptr %17687, align 2, !tbaa !28, !alias.scope !923, !noalias !926
  %17689 = zext i16 %17688 to i32
  %17690 = mul nuw i32 %17689, 65537
  %17691 = lshr i32 %17690, 24
  %17692 = lshr i32 %17690, 8
  %17693 = trunc i32 %17690 to i8
  %17694 = trunc i32 %17692 to i8
  %17695 = trunc i16 %17688 to i8
  %17696 = trunc i32 %17691 to i8
  store i8 %17696, ptr %17684, align 1, !alias.scope !926, !noalias !923
  %17697 = getelementptr inbounds i8, ptr %17684, i64 1
  store i8 %17695, ptr %17697, align 1, !alias.scope !926, !noalias !923
  %17698 = getelementptr inbounds i8, ptr %17684, i64 2
  store i8 %17694, ptr %17698, align 1, !alias.scope !926, !noalias !923
  %17699 = getelementptr inbounds i8, ptr %17684, i64 3
  store i8 %17693, ptr %17699, align 1, !alias.scope !926, !noalias !923
  br label %17787

17700:                                            ; preds = %13314, %13307
  %17701 = phi ptr [ %166, %13307 ], [ %13337, %13314 ]
  %17702 = phi ptr [ %88, %13307 ], [ %13338, %13314 ]
  %17703 = icmp eq i64 %13310, 0
  br i1 %17703, label %17787, label %17704

17704:                                            ; preds = %17700
  %17705 = getelementptr inbounds %struct._PixelPacket, ptr %17701, i64 0, i32 2
  %17706 = load i16, ptr %17705, align 2, !tbaa !29, !alias.scope !951, !noalias !954
  %17707 = zext i16 %17706 to i64
  %17708 = add nuw nsw i64 %17707, 128
  %17709 = lshr i64 %17708, 8
  %17710 = sub nsw i64 %17708, %17709
  %17711 = lshr i64 %17710, 8
  %17712 = trunc i64 %17711 to i8
  store i8 %17712, ptr %17702, align 1, !tbaa !48, !alias.scope !954, !noalias !951
  br label %17787

17713:                                            ; preds = %13366, %13360
  %17714 = phi ptr [ %166, %13360 ], [ %13401, %13366 ]
  %17715 = phi ptr [ %88, %13360 ], [ %13402, %13366 ]
  %17716 = icmp eq i64 %13362, 0
  br i1 %17716, label %17787, label %17717

17717:                                            ; preds = %17713, %17717
  %17718 = phi ptr [ %17728, %17717 ], [ %17714, %17713 ]
  %17719 = phi ptr [ %17729, %17717 ], [ %17715, %17713 ]
  %17720 = phi i64 [ %17730, %17717 ], [ 0, %17713 ]
  %17721 = getelementptr inbounds %struct._PixelPacket, ptr %17718, i64 0, i32 2
  %17722 = load i16, ptr %17721, align 2, !tbaa !29, !alias.scope !951, !noalias !954
  %17723 = lshr i16 %17722, 8
  %17724 = trunc i16 %17723 to i8
  %17725 = trunc i16 %17722 to i8
  store i8 %17725, ptr %17719, align 1, !alias.scope !954, !noalias !951
  %17726 = getelementptr inbounds i8, ptr %17719, i64 1
  store i8 %17724, ptr %17726, align 1, !alias.scope !954, !noalias !951
  %17727 = getelementptr inbounds i8, ptr %17719, i64 2
  %17728 = getelementptr inbounds %struct._PixelPacket, ptr %17718, i64 1
  %17729 = getelementptr inbounds i8, ptr %17727, i64 %13353
  %17730 = add i64 %17720, 1
  %17731 = icmp eq i64 %17730, %13362
  br i1 %17731, label %17787, label %17717, !llvm.loop !1227

17732:                                            ; preds = %13494, %13354
  %17733 = phi ptr [ %166, %13354 ], [ %13529, %13494 ]
  %17734 = phi ptr [ %88, %13354 ], [ %13530, %13494 ]
  %17735 = icmp eq i64 %13356, 0
  br i1 %17735, label %17787, label %17736

17736:                                            ; preds = %17732, %17736
  %17737 = phi ptr [ %17747, %17736 ], [ %17733, %17732 ]
  %17738 = phi ptr [ %17748, %17736 ], [ %17734, %17732 ]
  %17739 = phi i64 [ %17749, %17736 ], [ 0, %17732 ]
  %17740 = getelementptr inbounds %struct._PixelPacket, ptr %17737, i64 0, i32 2
  %17741 = load i16, ptr %17740, align 2, !tbaa !29, !alias.scope !951, !noalias !954
  %17742 = lshr i16 %17741, 8
  %17743 = trunc i16 %17741 to i8
  %17744 = trunc i16 %17742 to i8
  store i8 %17744, ptr %17738, align 1, !alias.scope !954, !noalias !951
  %17745 = getelementptr inbounds i8, ptr %17738, i64 1
  store i8 %17743, ptr %17745, align 1, !alias.scope !954, !noalias !951
  %17746 = getelementptr inbounds i8, ptr %17738, i64 2
  %17747 = getelementptr inbounds %struct._PixelPacket, ptr %17737, i64 1
  %17748 = getelementptr inbounds i8, ptr %17746, i64 %13353
  %17749 = add i64 %17739, 1
  %17750 = icmp eq i64 %17749, %13356
  br i1 %17750, label %17787, label %17736, !llvm.loop !1228

17751:                                            ; preds = %13555, %13550
  %17752 = phi ptr [ %166, %13550 ], [ %13588, %13555 ]
  %17753 = phi ptr [ %88, %13550 ], [ %13589, %13555 ]
  %17754 = icmp eq i64 %13551, 0
  br i1 %17754, label %17787, label %17755

17755:                                            ; preds = %17751
  %17756 = getelementptr inbounds %struct._PixelPacket, ptr %17752, i64 0, i32 2
  %17757 = load i16, ptr %17756, align 2, !tbaa !29, !alias.scope !951, !noalias !954
  %17758 = zext i16 %17757 to i32
  %17759 = mul nuw i32 %17758, 65537
  %17760 = lshr i32 %17759, 8
  %17761 = lshr i32 %17759, 24
  %17762 = trunc i32 %17761 to i8
  %17763 = trunc i16 %17757 to i8
  %17764 = trunc i32 %17760 to i8
  %17765 = trunc i32 %17759 to i8
  store i8 %17765, ptr %17753, align 1, !alias.scope !954, !noalias !951
  %17766 = getelementptr inbounds i8, ptr %17753, i64 1
  store i8 %17764, ptr %17766, align 1, !alias.scope !954, !noalias !951
  %17767 = getelementptr inbounds i8, ptr %17753, i64 2
  store i8 %17763, ptr %17767, align 1, !alias.scope !954, !noalias !951
  %17768 = getelementptr inbounds i8, ptr %17753, i64 3
  store i8 %17762, ptr %17768, align 1, !alias.scope !954, !noalias !951
  br label %17787

17769:                                            ; preds = %13636, %13545
  %17770 = phi ptr [ %166, %13545 ], [ %13669, %13636 ]
  %17771 = phi ptr [ %88, %13545 ], [ %13670, %13636 ]
  %17772 = icmp eq i64 %13546, 0
  br i1 %17772, label %17787, label %17773

17773:                                            ; preds = %17769
  %17774 = getelementptr inbounds %struct._PixelPacket, ptr %17770, i64 0, i32 2
  %17775 = load i16, ptr %17774, align 2, !tbaa !29, !alias.scope !951, !noalias !954
  %17776 = zext i16 %17775 to i32
  %17777 = mul nuw i32 %17776, 65537
  %17778 = lshr i32 %17777, 24
  %17779 = lshr i32 %17777, 8
  %17780 = trunc i32 %17777 to i8
  %17781 = trunc i32 %17779 to i8
  %17782 = trunc i16 %17775 to i8
  %17783 = trunc i32 %17778 to i8
  store i8 %17783, ptr %17771, align 1, !alias.scope !954, !noalias !951
  %17784 = getelementptr inbounds i8, ptr %17771, i64 1
  store i8 %17782, ptr %17784, align 1, !alias.scope !954, !noalias !951
  %17785 = getelementptr inbounds i8, ptr %17771, i64 2
  store i8 %17781, ptr %17785, align 1, !alias.scope !954, !noalias !951
  %17786 = getelementptr inbounds i8, ptr %17771, i64 3
  store i8 %17780, ptr %17786, align 1, !alias.scope !954, !noalias !951
  br label %17787

17787:                                            ; preds = %16905, %16714, %16619, %16446, %16433, %16118, %15963, %15690, %15418, %17102, %15248, %15087, %15031, %14898, %14885, %14529, %14101, %13881, %13806, %15404, %13715, %17773, %17769, %17755, %17751, %13622, %17732, %17736, %17713, %17717, %13481, %17704, %17700, %13792, %13217, %17686, %17682, %17668, %17664, %13124, %17645, %17649, %17626, %17630, %12983, %17617, %17613, %13294, %12678, %12569, %12523, %12422, %12402, %17601, %17591, %12231, %12795, %11544, %17579, %17570, %11441, %17551, %17555, %17532, %17536, %17521, %17524, %11336, %17505, %17509, %17495, %17498, %11614, %10695, %17481, %17477, %17463, %17459, %10602, %17440, %17444, %17421, %17425, %10461, %17412, %17408, %10772, %10133, %10014, %9942, %9829, %9792, %9593, %9547, %10273, %9218, %9144, %9096, %9023, %8986, %8802, %8432, %9318, %7685, %7445, %7324, %7137, %7091, %6683, %7925, %6434, %6239, %6142, %5995, %5949, %5621, %6634, %5573, %5319, %5126, %17395, %17391, %17378, %17374, %5035, %17356, %17360, %17338, %17342, %4897, %17330, %17326, %5202, %4635, %17312, %17308, %17298, %17301, %17284, %17280, %17270, %17273, %4538, %17251, %17255, %17232, %17236, %17221, %17224, %4333, %17215, %17205, %4714, %3890, %3699, %3598, %3425, %3412, %3097, %2942, %2669, %2398, %4087, %2228, %2069, %2005, %1872, %1859, %1503, %1075, %855, %781, %2384, %689, %17190, %17186, %17171, %17167, %593, %17147, %17151, %17127, %17131, %445, %17117, %17113, %767, %17112, %17111, %17110, %17109, %16927, %16735, %16502, %16495, %16135, %16128, %15709, %15703, %15458, %15413, %15270, %15123, %14944, %14937, %14662, %14655, %14337, %14331, %14308, %14238, %13909, %13903, %13836, %13801, %12801, %12203, %11620, %11094, %11089, %11016, %10279, %9464, %9328, %9327, %9325, %8678, %8588, %8401, %8370, %8143, %7707, %7466, %7173, %7165, %6714, %6706, %6652, %6645, %3912, %3720, %3481, %3474, %3114, %3107, %2688, %2682, %2437, %2393, %1282, %1212, %256
  br i1 %212, label %17788, label %17831

17788:                                            ; preds = %17787
  %17789 = call ptr @GetAuthenticPixelQueue(ptr noundef %0) #6
  br i1 %89, label %17792, label %17790

17790:                                            ; preds = %17788
  %17791 = call ptr @GetCacheViewVirtualPixelQueue(ptr noundef nonnull %1) #7
  br label %17792

17792:                                            ; preds = %17790, %17788
  %17793 = phi ptr [ %17791, %17790 ], [ %17789, %17788 ]
  %17794 = icmp sgt i64 %164, 0
  br i1 %17794, label %17795, label %17831

17795:                                            ; preds = %17792
  %17796 = add i64 %164, -1
  %17797 = and i64 %164, 3
  %17798 = icmp ult i64 %17796, 3
  br i1 %17798, label %17819, label %17799

17799:                                            ; preds = %17795
  %17800 = and i64 %164, -4
  br label %17801

17801:                                            ; preds = %17801, %17799
  %17802 = phi ptr [ %17793, %17799 ], [ %17816, %17801 ]
  %17803 = phi i64 [ 0, %17799 ], [ %17817, %17801 ]
  %17804 = getelementptr inbounds %struct._PixelPacket, ptr %17802, i64 0, i32 1
  %17805 = load <2 x i16>, ptr %17804, align 2, !tbaa !37
  %17806 = shufflevector <2 x i16> %17805, <2 x i16> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i16> %17806, ptr %17804, align 2, !tbaa !37
  %17807 = getelementptr inbounds %struct._PixelPacket, ptr %17802, i64 1, i32 1
  %17808 = load <2 x i16>, ptr %17807, align 2, !tbaa !37
  %17809 = shufflevector <2 x i16> %17808, <2 x i16> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i16> %17809, ptr %17807, align 2, !tbaa !37
  %17810 = getelementptr inbounds %struct._PixelPacket, ptr %17802, i64 2, i32 1
  %17811 = load <2 x i16>, ptr %17810, align 2, !tbaa !37
  %17812 = shufflevector <2 x i16> %17811, <2 x i16> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i16> %17812, ptr %17810, align 2, !tbaa !37
  %17813 = getelementptr inbounds %struct._PixelPacket, ptr %17802, i64 3, i32 1
  %17814 = load <2 x i16>, ptr %17813, align 2, !tbaa !37
  %17815 = shufflevector <2 x i16> %17814, <2 x i16> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i16> %17815, ptr %17813, align 2, !tbaa !37
  %17816 = getelementptr inbounds %struct._PixelPacket, ptr %17802, i64 4
  %17817 = add i64 %17803, 4
  %17818 = icmp eq i64 %17817, %17800
  br i1 %17818, label %17819, label %17801, !llvm.loop !1229

17819:                                            ; preds = %17801, %17795
  %17820 = phi ptr [ %17793, %17795 ], [ %17816, %17801 ]
  %17821 = icmp eq i64 %17797, 0
  br i1 %17821, label %17831, label %17822

17822:                                            ; preds = %17819, %17822
  %17823 = phi ptr [ %17828, %17822 ], [ %17820, %17819 ]
  %17824 = phi i64 [ %17829, %17822 ], [ 0, %17819 ]
  %17825 = getelementptr inbounds %struct._PixelPacket, ptr %17823, i64 0, i32 1
  %17826 = load <2 x i16>, ptr %17825, align 2, !tbaa !37
  %17827 = shufflevector <2 x i16> %17826, <2 x i16> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i16> %17827, ptr %17825, align 2, !tbaa !37
  %17828 = getelementptr inbounds %struct._PixelPacket, ptr %17823, i64 1
  %17829 = add i64 %17824, 1
  %17830 = icmp eq i64 %17829, %17797
  br i1 %17830, label %17831, label %17822, !llvm.loop !1230

17831:                                            ; preds = %17819, %17822, %17792, %4724, %4764, %4822, %4953, %5006, %5089, %5148, %10285, %10326, %10385, %10518, %10572, %10657, %10717, %13305, %13346, %13405, %13538, %13592, %13677, %13737, %17787
  switch i32 %3, label %17875 [
    i32 27, label %17832
    i32 25, label %17832
    i32 17, label %17832
  ]

17832:                                            ; preds = %17831, %17831, %17831
  %17833 = call ptr @GetAuthenticPixelQueue(ptr noundef %0) #6
  br i1 %89, label %17836, label %17834

17834:                                            ; preds = %17832
  %17835 = call ptr @GetCacheViewVirtualPixelQueue(ptr noundef nonnull %1) #7
  br label %17836

17836:                                            ; preds = %17834, %17832
  %17837 = phi ptr [ %17835, %17834 ], [ %17833, %17832 ]
  %17838 = icmp sgt i64 %164, 0
  br i1 %17838, label %17839, label %17875

17839:                                            ; preds = %17836
  %17840 = add i64 %164, -1
  %17841 = and i64 %164, 3
  %17842 = icmp ult i64 %17840, 3
  br i1 %17842, label %17863, label %17843

17843:                                            ; preds = %17839
  %17844 = and i64 %164, -4
  br label %17845

17845:                                            ; preds = %17845, %17843
  %17846 = phi ptr [ %17837, %17843 ], [ %17860, %17845 ]
  %17847 = phi i64 [ 0, %17843 ], [ %17861, %17845 ]
  %17848 = getelementptr inbounds %struct._PixelPacket, ptr %17846, i64 0, i32 3
  %17849 = load i16, ptr %17848, align 2, !tbaa !28
  %17850 = xor i16 %17849, -1
  store i16 %17850, ptr %17848, align 2, !tbaa !28
  %17851 = getelementptr inbounds %struct._PixelPacket, ptr %17846, i64 1, i32 3
  %17852 = load i16, ptr %17851, align 2, !tbaa !28
  %17853 = xor i16 %17852, -1
  store i16 %17853, ptr %17851, align 2, !tbaa !28
  %17854 = getelementptr inbounds %struct._PixelPacket, ptr %17846, i64 2, i32 3
  %17855 = load i16, ptr %17854, align 2, !tbaa !28
  %17856 = xor i16 %17855, -1
  store i16 %17856, ptr %17854, align 2, !tbaa !28
  %17857 = getelementptr inbounds %struct._PixelPacket, ptr %17846, i64 3, i32 3
  %17858 = load i16, ptr %17857, align 2, !tbaa !28
  %17859 = xor i16 %17858, -1
  store i16 %17859, ptr %17857, align 2, !tbaa !28
  %17860 = getelementptr inbounds %struct._PixelPacket, ptr %17846, i64 4
  %17861 = add i64 %17847, 4
  %17862 = icmp eq i64 %17861, %17844
  br i1 %17862, label %17863, label %17845, !llvm.loop !1231

17863:                                            ; preds = %17845, %17839
  %17864 = phi ptr [ %17837, %17839 ], [ %17860, %17845 ]
  %17865 = icmp eq i64 %17841, 0
  br i1 %17865, label %17875, label %17866

17866:                                            ; preds = %17863, %17866
  %17867 = phi ptr [ %17872, %17866 ], [ %17864, %17863 ]
  %17868 = phi i64 [ %17873, %17866 ], [ 0, %17863 ]
  %17869 = getelementptr inbounds %struct._PixelPacket, ptr %17867, i64 0, i32 3
  %17870 = load i16, ptr %17869, align 2, !tbaa !28
  %17871 = xor i16 %17870, -1
  store i16 %17871, ptr %17869, align 2, !tbaa !28
  %17872 = getelementptr inbounds %struct._PixelPacket, ptr %17867, i64 1
  %17873 = add i64 %17868, 1
  %17874 = icmp eq i64 %17873, %17841
  br i1 %17874, label %17875, label %17866, !llvm.loop !1232

17875:                                            ; preds = %17863, %17866, %17836, %13239, %13179, %13094, %13040, %12907, %12848, %12807, %12700, %12590, %12458, %12450, %12312, %12304, %11640, %11630, %11625, %11565, %11502, %11407, %11395, %11256, %11157, %10787, %10782, %10155, %10035, %9867, %9857, %9626, %9616, %9339, %9331, %9240, %9165, %9051, %9041, %8895, %8885, %8768, %8759, %8449, %7934, %6456, %6260, %6021, %6013, %5647, %5639, %5590, %5583, %5224, %5215, %4656, %4593, %4504, %4392, %4253, %4154, %4105, %4098, %2250, %2103, %1918, %1911, %1636, %1629, %1311, %1305, %883, %877, %810, %776, %711, %650, %562, %506, %368, %305, %262, %17831
  ret i64 %257
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

declare i32 @LogMagickEvent(i32 noundef, ptr noundef, ptr noundef, i64 noundef, ptr noundef, ...) local_unnamed_addr #2

declare ptr @GetQuantumPixels(ptr noundef) local_unnamed_addr #2

declare i64 @GetImageExtent(ptr noundef) local_unnamed_addr #2

declare ptr @GetVirtualPixelQueue(ptr noundef) local_unnamed_addr #2

declare ptr @GetVirtualIndexQueue(ptr noundef) local_unnamed_addr #2

declare i64 @GetCacheViewExtent(ptr noundef) local_unnamed_addr #2

; Function Attrs: hot
declare ptr @GetCacheViewVirtualPixelQueue(ptr noundef) local_unnamed_addr #3

declare ptr @GetCacheViewVirtualIndexQueue(ptr noundef) local_unnamed_addr #2

declare ptr @GetAuthenticPixelQueue(ptr noundef) local_unnamed_addr #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

declare hidden void @ResetQuantumState(ptr noundef) local_unnamed_addr #2

declare i64 @GetQuantumExtent(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

declare ptr @ResetMagickMemory(ptr noundef, i32 noundef, i64 noundef) local_unnamed_addr #2

declare i32 @ThrowMagickException(ptr noundef, ptr noundef, ptr noundef, i64 noundef, i32 noundef, ptr noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.fshl.i64(i64, i64, i64) #4

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.smax.i64(i64, i64) #4

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.umin.i64(i64, i64) #4

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: readwrite)
declare void @llvm.experimental.noalias.scope.decl(metadata) #5

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i8 @llvm.vector.reduce.or.v4i8(<4 x i8>) #4

attributes #0 = { nounwind sspstrong uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #1 = { mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #2 = { "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #3 = { hot "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #4 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #5 = { nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: readwrite) }
attributes #6 = { nounwind }
attributes #7 = { hot nounwind }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{!"clang version 17.0.6"}
!5 = !{!6, !7, i64 12976}
!6 = !{!"_Image", !7, i64 0, !7, i64 4, !7, i64 8, !9, i64 16, !7, i64 24, !7, i64 28, !7, i64 32, !9, i64 40, !9, i64 48, !9, i64 56, !9, i64 64, !10, i64 72, !11, i64 80, !11, i64 88, !11, i64 96, !13, i64 104, !14, i64 112, !7, i64 208, !10, i64 216, !7, i64 224, !10, i64 232, !10, i64 240, !10, i64 248, !9, i64 256, !13, i64 264, !13, i64 272, !16, i64 280, !16, i64 312, !16, i64 344, !13, i64 376, !13, i64 384, !13, i64 392, !7, i64 400, !7, i64 404, !7, i64 408, !7, i64 412, !7, i64 416, !7, i64 420, !10, i64 424, !9, i64 432, !9, i64 440, !9, i64 448, !9, i64 456, !9, i64 464, !9, i64 472, !17, i64 480, !18, i64 504, !10, i64 568, !10, i64 576, !10, i64 584, !10, i64 592, !10, i64 600, !10, i64 608, !7, i64 616, !7, i64 4712, !7, i64 8808, !9, i64 12904, !9, i64 12912, !20, i64 12920, !7, i64 12976, !9, i64 12984, !10, i64 12992, !22, i64 13000, !22, i64 13032, !10, i64 13064, !9, i64 13072, !9, i64 13080, !10, i64 13088, !10, i64 13096, !10, i64 13104, !7, i64 13112, !7, i64 13116, !11, i64 13120, !10, i64 13128, !16, i64 13136, !10, i64 13168, !10, i64 13176, !7, i64 13184, !7, i64 13188, !23, i64 13192, !7, i64 13200, !9, i64 13208, !9, i64 13216, !7, i64 13224, !9, i64 13232}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C/C++ TBAA"}
!9 = !{!"long", !7, i64 0}
!10 = !{!"any pointer", !7, i64 0}
!11 = !{!"_PixelPacket", !12, i64 0, !12, i64 2, !12, i64 4, !12, i64 6}
!12 = !{!"short", !7, i64 0}
!13 = !{!"double", !7, i64 0}
!14 = !{!"_ChromaticityInfo", !15, i64 0, !15, i64 24, !15, i64 48, !15, i64 72}
!15 = !{!"_PrimaryInfo", !13, i64 0, !13, i64 8, !13, i64 16}
!16 = !{!"_RectangleInfo", !9, i64 0, !9, i64 8, !9, i64 16, !9, i64 24}
!17 = !{!"_ErrorInfo", !13, i64 0, !13, i64 8, !13, i64 16}
!18 = !{!"_TimerInfo", !19, i64 0, !19, i64 24, !7, i64 48, !9, i64 56}
!19 = !{!"_Timer", !13, i64 0, !13, i64 8, !13, i64 16}
!20 = !{!"_ExceptionInfo", !7, i64 0, !21, i64 4, !10, i64 8, !10, i64 16, !10, i64 24, !7, i64 32, !10, i64 40, !9, i64 48}
!21 = !{!"int", !7, i64 0}
!22 = !{!"_ProfileInfo", !10, i64 0, !9, i64 8, !10, i64 16, !9, i64 24}
!23 = !{!"long long", !7, i64 0}
!24 = !{!25, !7, i64 64}
!25 = !{!"_QuantumInfo", !9, i64 0, !9, i64 8, !7, i64 16, !13, i64 24, !13, i64 32, !13, i64 40, !9, i64 48, !7, i64 56, !7, i64 60, !7, i64 64, !9, i64 72, !10, i64 80, !9, i64 88, !7, i64 96, !26, i64 104, !10, i64 136, !9, i64 144}
!26 = !{!"_QuantumState", !13, i64 0, !21, i64 8, !9, i64 16, !10, i64 24}
!27 = !{!6, !9, i64 40}
!28 = !{!11, !12, i64 6}
!29 = !{!11, !12, i64 4}
!30 = !{!11, !12, i64 2}
!31 = !{!11, !12, i64 0}
!32 = distinct !{!32, !33}
!33 = !{!"llvm.loop.mustprogress"}
!34 = distinct !{!34, !33}
!35 = distinct !{!35, !36}
!36 = !{!"llvm.loop.unroll.disable"}
!37 = !{!12, !12, i64 0}
!38 = distinct !{!38, !33}
!39 = distinct !{!39, !36}
!40 = !{!41}
!41 = distinct !{!41, !42, !"ExportAlphaQuantum: argument 0"}
!42 = distinct !{!42, !"ExportAlphaQuantum"}
!43 = !{!44}
!44 = distinct !{!44, !42, !"ExportAlphaQuantum: argument 1"}
!45 = !{!25, !9, i64 0}
!46 = !{!41, !44}
!47 = !{!25, !9, i64 48}
!48 = !{!7, !7, i64 0}
!49 = distinct !{!49, !33}
!50 = !{!25, !7, i64 16}
!51 = !{!25, !7, i64 96}
!52 = distinct !{!52, !33}
!53 = distinct !{!53, !33}
!54 = distinct !{!54, !33}
!55 = !{!56}
!56 = distinct !{!56, !57, !"PopFloatPixel: argument 0"}
!57 = distinct !{!57, !"PopFloatPixel"}
!58 = !{!56, !41, !44}
!59 = !{!25, !13, i64 104}
!60 = !{!25, !13, i64 24}
!61 = !{!56, !44}
!62 = distinct !{!62, !33}
!63 = !{!64}
!64 = distinct !{!64, !65, !"PopDoublePixel: argument 0"}
!65 = distinct !{!65, !"PopDoublePixel"}
!66 = !{!64, !41, !44}
!67 = !{!64, !44}
!68 = distinct !{!68, !33}
!69 = !{!25, !9, i64 120}
!70 = !{!71, !41, !44}
!71 = distinct !{!71, !72, !"PopQuantumPixel: argument 0"}
!72 = distinct !{!72, !"PopQuantumPixel"}
!73 = !{!71}
!74 = !{!71, !44}
!75 = distinct !{!75, !33}
!76 = distinct !{!76, !33}
!77 = !{!78}
!78 = distinct !{!78, !79, !"ExportBGRQuantum: argument 0"}
!79 = distinct !{!79, !"ExportBGRQuantum"}
!80 = !{!81}
!81 = distinct !{!81, !79, !"ExportBGRQuantum: argument 1"}
!82 = !{!78, !81}
!83 = distinct !{!83, !33}
!84 = !{!25, !7, i64 60}
!85 = distinct !{!85, !33}
!86 = !{!25, !9, i64 8}
!87 = !{!25, !10, i64 128}
!88 = !{!89}
!89 = distinct !{!89, !90, !"PopQuantumLongPixel: argument 0"}
!90 = distinct !{!90, !"PopQuantumLongPixel"}
!91 = !{!25, !21, i64 112}
!92 = !{!89, !78, !81}
!93 = !{!21, !21, i64 0}
!94 = !{!89, !81}
!95 = distinct !{!95, !33}
!96 = !{!97}
!97 = distinct !{!97, !98, !"PopQuantumLongPixel: argument 0"}
!98 = distinct !{!98, !"PopQuantumLongPixel"}
!99 = !{!97, !78, !81}
!100 = !{!97, !81}
!101 = !{!102}
!102 = distinct !{!102, !103, !"PopQuantumLongPixel: argument 0"}
!103 = distinct !{!103, !"PopQuantumLongPixel"}
!104 = !{!102, !78, !81}
!105 = !{!102, !81}
!106 = distinct !{!106, !33}
!107 = !{!108, !81}
!108 = distinct !{!108, !109, !"PopQuantumPixel: argument 0"}
!109 = distinct !{!109, !"PopQuantumPixel"}
!110 = !{!111, !81}
!111 = distinct !{!111, !112, !"PopQuantumPixel: argument 0"}
!112 = distinct !{!112, !"PopQuantumPixel"}
!113 = !{!114}
!114 = distinct !{!114, !115, !"PopQuantumPixel: argument 0"}
!115 = distinct !{!115, !"PopQuantumPixel"}
!116 = !{!114, !81}
!117 = distinct !{!117, !33}
!118 = distinct !{!118, !33}
!119 = !{!120}
!120 = distinct !{!120, !121, !"PopQuantumLongPixel: argument 0"}
!121 = distinct !{!121, !"PopQuantumLongPixel"}
!122 = !{!120, !78, !81}
!123 = !{!120, !81}
!124 = !{!125}
!125 = distinct !{!125, !126, !"PopQuantumLongPixel: argument 0"}
!126 = distinct !{!126, !"PopQuantumLongPixel"}
!127 = !{!125, !78, !81}
!128 = !{!125, !81}
!129 = !{!130}
!130 = distinct !{!130, !131, !"PopQuantumLongPixel: argument 0"}
!131 = distinct !{!131, !"PopQuantumLongPixel"}
!132 = !{!130, !78, !81}
!133 = !{!130, !81}
!134 = distinct !{!134, !33}
!135 = !{!136, !81}
!136 = distinct !{!136, !137, !"PopQuantumPixel: argument 0"}
!137 = distinct !{!137, !"PopQuantumPixel"}
!138 = !{!139, !81}
!139 = distinct !{!139, !140, !"PopQuantumPixel: argument 0"}
!140 = distinct !{!140, !"PopQuantumPixel"}
!141 = !{!142}
!142 = distinct !{!142, !143, !"PopQuantumPixel: argument 0"}
!143 = distinct !{!143, !"PopQuantumPixel"}
!144 = !{!142, !81}
!145 = distinct !{!145, !33}
!146 = distinct !{!146, !33}
!147 = distinct !{!147, !33}
!148 = !{!149}
!149 = distinct !{!149, !150, !"PopFloatPixel: argument 0"}
!150 = distinct !{!150, !"PopFloatPixel"}
!151 = !{!149, !78, !81}
!152 = !{!149, !81}
!153 = !{!154}
!154 = distinct !{!154, !155, !"PopFloatPixel: argument 0"}
!155 = distinct !{!155, !"PopFloatPixel"}
!156 = !{!154, !78, !81}
!157 = !{!154, !81}
!158 = !{!159}
!159 = distinct !{!159, !160, !"PopFloatPixel: argument 0"}
!160 = distinct !{!160, !"PopFloatPixel"}
!161 = !{!159, !78, !81}
!162 = !{!159, !81}
!163 = distinct !{!163, !33}
!164 = distinct !{!164, !33}
!165 = !{!166}
!166 = distinct !{!166, !167, !"PopDoublePixel: argument 0"}
!167 = distinct !{!167, !"PopDoublePixel"}
!168 = !{!166, !78, !81}
!169 = !{!166, !81}
!170 = !{!171}
!171 = distinct !{!171, !172, !"PopDoublePixel: argument 0"}
!172 = distinct !{!172, !"PopDoublePixel"}
!173 = !{!171, !78, !81}
!174 = !{!171, !81}
!175 = !{!176}
!176 = distinct !{!176, !177, !"PopDoublePixel: argument 0"}
!177 = distinct !{!177, !"PopDoublePixel"}
!178 = !{!176, !78, !81}
!179 = !{!176, !81}
!180 = distinct !{!180, !33}
!181 = !{!182}
!182 = distinct !{!182, !183, !"PopQuantumPixel: argument 0"}
!183 = distinct !{!183, !"PopQuantumPixel"}
!184 = !{!182, !78, !81}
!185 = !{!182, !81}
!186 = !{!187}
!187 = distinct !{!187, !188, !"PopQuantumPixel: argument 0"}
!188 = distinct !{!188, !"PopQuantumPixel"}
!189 = !{!187, !78, !81}
!190 = !{!187, !81}
!191 = !{!192}
!192 = distinct !{!192, !193, !"PopQuantumPixel: argument 0"}
!193 = distinct !{!193, !"PopQuantumPixel"}
!194 = !{!192, !78, !81}
!195 = !{!192, !81}
!196 = distinct !{!196, !33}
!197 = !{!198}
!198 = distinct !{!198, !199, !"ExportBGRAQuantum: argument 0"}
!199 = distinct !{!199, !"ExportBGRAQuantum"}
!200 = !{!201}
!201 = distinct !{!201, !199, !"ExportBGRAQuantum: argument 1"}
!202 = !{!198, !201}
!203 = distinct !{!203, !33}
!204 = distinct !{!204, !33}
!205 = !{!206}
!206 = distinct !{!206, !207, !"PopQuantumLongPixel: argument 0"}
!207 = distinct !{!207, !"PopQuantumLongPixel"}
!208 = !{!206, !198, !201}
!209 = !{!206, !201}
!210 = !{!211}
!211 = distinct !{!211, !212, !"PopQuantumLongPixel: argument 0"}
!212 = distinct !{!212, !"PopQuantumLongPixel"}
!213 = !{!211, !198, !201}
!214 = !{!211, !201}
!215 = !{!216}
!216 = distinct !{!216, !217, !"PopQuantumLongPixel: argument 0"}
!217 = distinct !{!217, !"PopQuantumLongPixel"}
!218 = !{!216, !198, !201}
!219 = !{!216, !201}
!220 = !{!221}
!221 = distinct !{!221, !222, !"PopQuantumLongPixel: argument 0"}
!222 = distinct !{!222, !"PopQuantumLongPixel"}
!223 = !{!221, !198, !201}
!224 = !{!221, !201}
!225 = distinct !{!225, !33}
!226 = !{!227}
!227 = distinct !{!227, !228, !"PopQuantumPixel: argument 0"}
!228 = distinct !{!228, !"PopQuantumPixel"}
!229 = !{!227, !198, !201}
!230 = !{!227, !201}
!231 = !{!232, !201}
!232 = distinct !{!232, !233, !"PopQuantumPixel: argument 0"}
!233 = distinct !{!233, !"PopQuantumPixel"}
!234 = !{!235, !201}
!235 = distinct !{!235, !236, !"PopQuantumPixel: argument 0"}
!236 = distinct !{!236, !"PopQuantumPixel"}
!237 = !{!238}
!238 = distinct !{!238, !239, !"PopQuantumPixel: argument 0"}
!239 = distinct !{!239, !"PopQuantumPixel"}
!240 = !{!238, !201}
!241 = !{!238, !198, !201}
!242 = distinct !{!242, !33}
!243 = distinct !{!243, !33}
!244 = distinct !{!244, !33}
!245 = !{!246}
!246 = distinct !{!246, !247, !"PopFloatPixel: argument 0"}
!247 = distinct !{!247, !"PopFloatPixel"}
!248 = !{!246, !198, !201}
!249 = !{!246, !201}
!250 = !{!251}
!251 = distinct !{!251, !252, !"PopFloatPixel: argument 0"}
!252 = distinct !{!252, !"PopFloatPixel"}
!253 = !{!251, !198, !201}
!254 = !{!251, !201}
!255 = !{!256}
!256 = distinct !{!256, !257, !"PopFloatPixel: argument 0"}
!257 = distinct !{!257, !"PopFloatPixel"}
!258 = !{!256, !198, !201}
!259 = !{!256, !201}
!260 = !{!261}
!261 = distinct !{!261, !262, !"PopFloatPixel: argument 0"}
!262 = distinct !{!262, !"PopFloatPixel"}
!263 = !{!261, !198, !201}
!264 = !{!261, !201}
!265 = distinct !{!265, !33}
!266 = distinct !{!266, !33}
!267 = !{!268}
!268 = distinct !{!268, !269, !"PopDoublePixel: argument 0"}
!269 = distinct !{!269, !"PopDoublePixel"}
!270 = !{!268, !198, !201}
!271 = !{!268, !201}
!272 = !{!273}
!273 = distinct !{!273, !274, !"PopDoublePixel: argument 0"}
!274 = distinct !{!274, !"PopDoublePixel"}
!275 = !{!273, !198, !201}
!276 = !{!273, !201}
!277 = !{!278}
!278 = distinct !{!278, !279, !"PopDoublePixel: argument 0"}
!279 = distinct !{!279, !"PopDoublePixel"}
!280 = !{!278, !198, !201}
!281 = !{!278, !201}
!282 = !{!283}
!283 = distinct !{!283, !284, !"PopDoublePixel: argument 0"}
!284 = distinct !{!284, !"PopDoublePixel"}
!285 = !{!283, !198, !201}
!286 = !{!283, !201}
!287 = distinct !{!287, !33}
!288 = !{!289}
!289 = distinct !{!289, !290, !"PopQuantumPixel: argument 0"}
!290 = distinct !{!290, !"PopQuantumPixel"}
!291 = !{!289, !198, !201}
!292 = !{!289, !201}
!293 = !{!294}
!294 = distinct !{!294, !295, !"PopQuantumPixel: argument 0"}
!295 = distinct !{!295, !"PopQuantumPixel"}
!296 = !{!294, !198, !201}
!297 = !{!294, !201}
!298 = !{!299}
!299 = distinct !{!299, !300, !"PopQuantumPixel: argument 0"}
!300 = distinct !{!300, !"PopQuantumPixel"}
!301 = !{!299, !198, !201}
!302 = !{!299, !201}
!303 = !{!304}
!304 = distinct !{!304, !305, !"PopQuantumPixel: argument 0"}
!305 = distinct !{!305, !"PopQuantumPixel"}
!306 = !{!304, !198, !201}
!307 = !{!304, !201}
!308 = distinct !{!308, !33}
!309 = !{!310}
!310 = distinct !{!310, !311, !"ExportBlackQuantum: argument 0"}
!311 = distinct !{!311, !"ExportBlackQuantum"}
!312 = !{!313}
!313 = distinct !{!313, !311, !"ExportBlackQuantum: argument 1"}
!314 = !{!6, !7, i64 4}
!315 = !{!310, !313}
!316 = distinct !{!316, !33}
!317 = distinct !{!317, !33}
!318 = distinct !{!318, !33}
!319 = distinct !{!319, !33}
!320 = !{!321}
!321 = distinct !{!321, !322, !"PopFloatPixel: argument 0"}
!322 = distinct !{!322, !"PopFloatPixel"}
!323 = !{!321, !310, !313}
!324 = !{!321, !313}
!325 = distinct !{!325, !33}
!326 = !{!327}
!327 = distinct !{!327, !328, !"PopDoublePixel: argument 0"}
!328 = distinct !{!328, !"PopDoublePixel"}
!329 = !{!327, !310, !313}
!330 = !{!327, !313}
!331 = distinct !{!331, !33}
!332 = !{!333, !310, !313}
!333 = distinct !{!333, !334, !"PopQuantumPixel: argument 0"}
!334 = distinct !{!334, !"PopQuantumPixel"}
!335 = !{!333}
!336 = !{!333, !313}
!337 = distinct !{!337, !33}
!338 = !{!339}
!339 = distinct !{!339, !340, !"ExportBlueQuantum: argument 0"}
!340 = distinct !{!340, !"ExportBlueQuantum"}
!341 = !{!342}
!342 = distinct !{!342, !340, !"ExportBlueQuantum: argument 1"}
!343 = !{!339, !342}
!344 = distinct !{!344, !33}
!345 = distinct !{!345, !33}
!346 = distinct !{!346, !33}
!347 = distinct !{!347, !33}
!348 = !{!349}
!349 = distinct !{!349, !350, !"PopFloatPixel: argument 0"}
!350 = distinct !{!350, !"PopFloatPixel"}
!351 = !{!349, !339, !342}
!352 = !{!349, !342}
!353 = distinct !{!353, !33}
!354 = !{!355}
!355 = distinct !{!355, !356, !"PopDoublePixel: argument 0"}
!356 = distinct !{!356, !"PopDoublePixel"}
!357 = !{!355, !339, !342}
!358 = !{!355, !342}
!359 = distinct !{!359, !33}
!360 = !{!361, !339, !342}
!361 = distinct !{!361, !362, !"PopQuantumPixel: argument 0"}
!362 = distinct !{!362, !"PopQuantumPixel"}
!363 = !{!361}
!364 = !{!361, !342}
!365 = distinct !{!365, !33}
!366 = !{!367}
!367 = distinct !{!367, !368, !"ExportCbYCrYQuantum: argument 0"}
!368 = distinct !{!368, !"ExportCbYCrYQuantum"}
!369 = !{!370}
!370 = distinct !{!370, !368, !"ExportCbYCrYQuantum: argument 1"}
!371 = !{!367, !370}
!372 = distinct !{!372, !33}
!373 = !{!374}
!374 = distinct !{!374, !375, !"PopQuantumPixel: argument 0"}
!375 = distinct !{!375, !"PopQuantumPixel"}
!376 = !{!374, !367, !370}
!377 = !{!374, !370}
!378 = !{!379, !370}
!379 = distinct !{!379, !380, !"PopQuantumPixel: argument 0"}
!380 = distinct !{!380, !"PopQuantumPixel"}
!381 = !{!382}
!382 = distinct !{!382, !383, !"PopQuantumPixel: argument 0"}
!383 = distinct !{!383, !"PopQuantumPixel"}
!384 = !{!382, !367, !370}
!385 = !{!382, !370}
!386 = !{!387, !370}
!387 = distinct !{!387, !388, !"PopQuantumPixel: argument 0"}
!388 = distinct !{!388, !"PopQuantumPixel"}
!389 = !{!390, !370}
!390 = distinct !{!390, !391, !"PopQuantumPixel: argument 0"}
!391 = distinct !{!391, !"PopQuantumPixel"}
!392 = !{!393}
!393 = distinct !{!393, !394, !"PopQuantumPixel: argument 0"}
!394 = distinct !{!394, !"PopQuantumPixel"}
!395 = !{!393, !370}
!396 = !{!393, !367, !370}
!397 = distinct !{!397, !33}
!398 = !{!399}
!399 = distinct !{!399, !400, !"ExportCMYKQuantum: argument 0"}
!400 = distinct !{!400, !"ExportCMYKQuantum"}
!401 = !{!402}
!402 = distinct !{!402, !400, !"ExportCMYKQuantum: argument 1"}
!403 = !{!404}
!404 = distinct !{!404, !400, !"ExportCMYKQuantum: argument 2"}
!405 = !{!399, !402, !404}
!406 = !{!402, !404}
!407 = !{!399, !402}
!408 = !{!399, !404}
!409 = distinct !{!409, !33}
!410 = distinct !{!410, !33}
!411 = distinct !{!411, !33}
!412 = !{!413}
!413 = distinct !{!413, !414, !"PopFloatPixel: argument 0"}
!414 = distinct !{!414, !"PopFloatPixel"}
!415 = !{!413, !399, !402, !404}
!416 = !{!413, !399}
!417 = !{!413, !404}
!418 = !{!419}
!419 = distinct !{!419, !420, !"PopFloatPixel: argument 0"}
!420 = distinct !{!420, !"PopFloatPixel"}
!421 = !{!419, !399, !402, !404}
!422 = !{!419, !399}
!423 = !{!419, !404}
!424 = !{!425}
!425 = distinct !{!425, !426, !"PopFloatPixel: argument 0"}
!426 = distinct !{!426, !"PopFloatPixel"}
!427 = !{!425, !399, !402, !404}
!428 = !{!425, !399}
!429 = !{!425, !404}
!430 = !{!431}
!431 = distinct !{!431, !432, !"PopFloatPixel: argument 0"}
!432 = distinct !{!432, !"PopFloatPixel"}
!433 = !{!431, !399, !402, !404}
!434 = !{!431, !399}
!435 = !{!431, !404}
!436 = distinct !{!436, !33}
!437 = distinct !{!437, !33}
!438 = !{!439}
!439 = distinct !{!439, !440, !"PopDoublePixel: argument 0"}
!440 = distinct !{!440, !"PopDoublePixel"}
!441 = !{!439, !399, !402, !404}
!442 = !{!439, !399}
!443 = !{!439, !404}
!444 = !{!445}
!445 = distinct !{!445, !446, !"PopDoublePixel: argument 0"}
!446 = distinct !{!446, !"PopDoublePixel"}
!447 = !{!445, !399, !402, !404}
!448 = !{!445, !399}
!449 = !{!445, !404}
!450 = !{!451}
!451 = distinct !{!451, !452, !"PopDoublePixel: argument 0"}
!452 = distinct !{!452, !"PopDoublePixel"}
!453 = !{!451, !399, !402, !404}
!454 = !{!451, !399}
!455 = !{!451, !404}
!456 = !{!457}
!457 = distinct !{!457, !458, !"PopDoublePixel: argument 0"}
!458 = distinct !{!458, !"PopDoublePixel"}
!459 = !{!457, !399, !402, !404}
!460 = !{!457, !399}
!461 = !{!457, !404}
!462 = distinct !{!462, !33}
!463 = !{!464}
!464 = distinct !{!464, !465, !"PopQuantumPixel: argument 0"}
!465 = distinct !{!465, !"PopQuantumPixel"}
!466 = !{!464, !399, !402, !404}
!467 = !{!464, !404}
!468 = !{!469}
!469 = distinct !{!469, !470, !"PopQuantumPixel: argument 0"}
!470 = distinct !{!470, !"PopQuantumPixel"}
!471 = !{!469, !399, !402, !404}
!472 = !{!469, !404}
!473 = !{!474}
!474 = distinct !{!474, !475, !"PopQuantumPixel: argument 0"}
!475 = distinct !{!475, !"PopQuantumPixel"}
!476 = !{!474, !399, !402, !404}
!477 = !{!474, !404}
!478 = !{!479}
!479 = distinct !{!479, !480, !"PopQuantumPixel: argument 0"}
!480 = distinct !{!480, !"PopQuantumPixel"}
!481 = !{!479, !399, !402, !404}
!482 = !{!479, !404}
!483 = distinct !{!483, !33}
!484 = !{!485}
!485 = distinct !{!485, !486, !"ExportCMYKAQuantum: argument 0"}
!486 = distinct !{!486, !"ExportCMYKAQuantum"}
!487 = !{!488}
!488 = distinct !{!488, !486, !"ExportCMYKAQuantum: argument 1"}
!489 = !{!490}
!490 = distinct !{!490, !486, !"ExportCMYKAQuantum: argument 2"}
!491 = !{!485, !488, !490}
!492 = !{!488, !490}
!493 = !{!485, !488}
!494 = !{!485, !490}
!495 = distinct !{!495, !33}
!496 = distinct !{!496, !33}
!497 = distinct !{!497, !33}
!498 = !{!499}
!499 = distinct !{!499, !500, !"PopFloatPixel: argument 0"}
!500 = distinct !{!500, !"PopFloatPixel"}
!501 = !{!499, !485, !488, !490}
!502 = !{!499, !485}
!503 = !{!499, !490}
!504 = !{!505}
!505 = distinct !{!505, !506, !"PopFloatPixel: argument 0"}
!506 = distinct !{!506, !"PopFloatPixel"}
!507 = !{!505, !485, !488, !490}
!508 = !{!505, !485}
!509 = !{!505, !490}
!510 = !{!511}
!511 = distinct !{!511, !512, !"PopFloatPixel: argument 0"}
!512 = distinct !{!512, !"PopFloatPixel"}
!513 = !{!511, !485, !488, !490}
!514 = !{!511, !485}
!515 = !{!511, !490}
!516 = !{!517}
!517 = distinct !{!517, !518, !"PopFloatPixel: argument 0"}
!518 = distinct !{!518, !"PopFloatPixel"}
!519 = !{!517, !485, !488, !490}
!520 = !{!517, !485}
!521 = !{!517, !490}
!522 = !{!523}
!523 = distinct !{!523, !524, !"PopFloatPixel: argument 0"}
!524 = distinct !{!524, !"PopFloatPixel"}
!525 = !{!523, !485, !488, !490}
!526 = !{!523, !485}
!527 = !{!523, !490}
!528 = distinct !{!528, !33}
!529 = distinct !{!529, !33}
!530 = !{!531}
!531 = distinct !{!531, !532, !"PopDoublePixel: argument 0"}
!532 = distinct !{!532, !"PopDoublePixel"}
!533 = !{!531, !485, !488, !490}
!534 = !{!531, !485}
!535 = !{!531, !490}
!536 = !{!537}
!537 = distinct !{!537, !538, !"PopDoublePixel: argument 0"}
!538 = distinct !{!538, !"PopDoublePixel"}
!539 = !{!537, !485, !488, !490}
!540 = !{!537, !485}
!541 = !{!537, !490}
!542 = !{!543}
!543 = distinct !{!543, !544, !"PopDoublePixel: argument 0"}
!544 = distinct !{!544, !"PopDoublePixel"}
!545 = !{!543, !485, !488, !490}
!546 = !{!543, !485}
!547 = !{!543, !490}
!548 = !{!549}
!549 = distinct !{!549, !550, !"PopDoublePixel: argument 0"}
!550 = distinct !{!550, !"PopDoublePixel"}
!551 = !{!549, !485, !488, !490}
!552 = !{!549, !485}
!553 = !{!549, !490}
!554 = !{!555}
!555 = distinct !{!555, !556, !"PopDoublePixel: argument 0"}
!556 = distinct !{!556, !"PopDoublePixel"}
!557 = !{!555, !485, !488, !490}
!558 = !{!555, !485}
!559 = !{!555, !490}
!560 = distinct !{!560, !33}
!561 = !{!562}
!562 = distinct !{!562, !563, !"PopQuantumPixel: argument 0"}
!563 = distinct !{!563, !"PopQuantumPixel"}
!564 = !{!562, !485, !488, !490}
!565 = !{!562, !490}
!566 = !{!567}
!567 = distinct !{!567, !568, !"PopQuantumPixel: argument 0"}
!568 = distinct !{!568, !"PopQuantumPixel"}
!569 = !{!567, !485, !488, !490}
!570 = !{!567, !490}
!571 = !{!572}
!572 = distinct !{!572, !573, !"PopQuantumPixel: argument 0"}
!573 = distinct !{!573, !"PopQuantumPixel"}
!574 = !{!572, !485, !488, !490}
!575 = !{!572, !490}
!576 = !{!577}
!577 = distinct !{!577, !578, !"PopQuantumPixel: argument 0"}
!578 = distinct !{!578, !"PopQuantumPixel"}
!579 = !{!577, !485, !488, !490}
!580 = !{!577, !490}
!581 = !{!582}
!582 = distinct !{!582, !583, !"PopQuantumPixel: argument 0"}
!583 = distinct !{!583, !"PopQuantumPixel"}
!584 = !{!582, !485, !488, !490}
!585 = !{!582, !490}
!586 = distinct !{!586, !33}
!587 = !{!588}
!588 = distinct !{!588, !589, !"ExportGrayQuantum: argument 0"}
!589 = distinct !{!589, !"ExportGrayQuantum"}
!590 = !{!591}
!591 = distinct !{!591, !589, !"ExportGrayQuantum: argument 1"}
!592 = !{!588, !591}
!593 = !{!25, !7, i64 56}
!594 = !{!595, !588}
!595 = distinct !{!595, !596, !"GetPixelLuma: argument 0"}
!596 = distinct !{!596, !"GetPixelLuma"}
!597 = !{!598, !588}
!598 = distinct !{!598, !599, !"GetPixelLuma: argument 0:thread"}
!599 = distinct !{!599, !"GetPixelLuma"}
!600 = !{!601, !588}
!601 = distinct !{!601, !602, !"GetPixelLuma: argument 0"}
!602 = distinct !{!602, !"GetPixelLuma"}
!603 = !{!604, !588}
!604 = distinct !{!604, !605, !"GetPixelLuma: argument 0"}
!605 = distinct !{!605, !"GetPixelLuma"}
!606 = !{!607, !588}
!607 = distinct !{!607, !608, !"GetPixelLuma: argument 0"}
!608 = distinct !{!608, !"GetPixelLuma"}
!609 = !{!610, !588}
!610 = distinct !{!610, !611, !"GetPixelLuma: argument 0"}
!611 = distinct !{!611, !"GetPixelLuma"}
!612 = !{!613, !588}
!613 = distinct !{!613, !614, !"GetPixelLuma: argument 0"}
!614 = distinct !{!614, !"GetPixelLuma"}
!615 = !{!616, !588}
!616 = distinct !{!616, !617, !"GetPixelLuma: argument 0"}
!617 = distinct !{!617, !"GetPixelLuma"}
!618 = !{!619, !588}
!619 = distinct !{!619, !599, !"GetPixelLuma: argument 0"}
!620 = distinct !{!620, !33}
!621 = !{!622, !588}
!622 = distinct !{!622, !623, !"GetPixelLuma: argument 0"}
!623 = distinct !{!623, !"GetPixelLuma"}
!624 = distinct !{!624, !33}
!625 = !{!626, !588}
!626 = distinct !{!626, !627, !"GetPixelLuma: argument 0"}
!627 = distinct !{!627, !"GetPixelLuma"}
!628 = !{!629, !588}
!629 = distinct !{!629, !630, !"GetPixelLuma: argument 0"}
!630 = distinct !{!630, !"GetPixelLuma"}
!631 = distinct !{!631, !33}
!632 = !{!633, !588}
!633 = distinct !{!633, !634, !"GetPixelLuma: argument 0"}
!634 = distinct !{!634, !"GetPixelLuma"}
!635 = !{!636, !588}
!636 = distinct !{!636, !637, !"GetPixelLuma: argument 0"}
!637 = distinct !{!637, !"GetPixelLuma"}
!638 = distinct !{!638, !33}
!639 = !{!640, !588, !591}
!640 = distinct !{!640, !641, !"PopQuantumPixel: argument 0"}
!641 = distinct !{!641, !"PopQuantumPixel"}
!642 = !{!643, !588}
!643 = distinct !{!643, !644, !"GetPixelLuma: argument 0"}
!644 = distinct !{!644, !"GetPixelLuma"}
!645 = !{!646, !588}
!646 = distinct !{!646, !647, !"GetPixelLuma: argument 0"}
!647 = distinct !{!647, !"GetPixelLuma"}
!648 = !{!649, !588}
!649 = distinct !{!649, !650, !"GetPixelLuma: argument 0"}
!650 = distinct !{!650, !"GetPixelLuma"}
!651 = distinct !{!651, !33}
!652 = !{!653, !588}
!653 = distinct !{!653, !654, !"GetPixelLuma: argument 0"}
!654 = distinct !{!654, !"GetPixelLuma"}
!655 = !{!656, !588}
!656 = distinct !{!656, !657, !"GetPixelLuma: argument 0"}
!657 = distinct !{!657, !"GetPixelLuma"}
!658 = !{!659, !588}
!659 = distinct !{!659, !660, !"GetPixelLuma: argument 0"}
!660 = distinct !{!660, !"GetPixelLuma"}
!661 = !{!640}
!662 = !{!640, !591}
!663 = distinct !{!663, !33}
!664 = !{!665, !588, !591}
!665 = distinct !{!665, !666, !"PopQuantumPixel: argument 0"}
!666 = distinct !{!666, !"PopQuantumPixel"}
!667 = !{!668, !588}
!668 = distinct !{!668, !669, !"GetPixelLuma: argument 0"}
!669 = distinct !{!669, !"GetPixelLuma"}
!670 = distinct !{!670, !33}
!671 = !{!672, !588}
!672 = distinct !{!672, !673, !"GetPixelLuma: argument 0"}
!673 = distinct !{!673, !"GetPixelLuma"}
!674 = !{!665}
!675 = !{!665, !591}
!676 = distinct !{!676, !33}
!677 = !{!678, !588}
!678 = distinct !{!678, !679, !"GetPixelLuma: argument 0"}
!679 = distinct !{!679, !"GetPixelLuma"}
!680 = distinct !{!680, !33}
!681 = !{!682, !588}
!682 = distinct !{!682, !683, !"GetPixelLuma: argument 0"}
!683 = distinct !{!683, !"GetPixelLuma"}
!684 = distinct !{!684, !33}
!685 = !{!686, !588}
!686 = distinct !{!686, !687, !"GetPixelLuma: argument 0"}
!687 = distinct !{!687, !"GetPixelLuma"}
!688 = !{!689}
!689 = distinct !{!689, !690, !"PopFloatPixel: argument 0"}
!690 = distinct !{!690, !"PopFloatPixel"}
!691 = !{!689, !588, !591}
!692 = !{!689, !591}
!693 = distinct !{!693, !33}
!694 = !{!695, !588}
!695 = distinct !{!695, !696, !"GetPixelLuma: argument 0"}
!696 = distinct !{!696, !"GetPixelLuma"}
!697 = distinct !{!697, !33}
!698 = !{!699, !588}
!699 = distinct !{!699, !700, !"GetPixelLuma: argument 0"}
!700 = distinct !{!700, !"GetPixelLuma"}
!701 = !{!702}
!702 = distinct !{!702, !703, !"PopDoublePixel: argument 0"}
!703 = distinct !{!703, !"PopDoublePixel"}
!704 = !{!702, !588, !591}
!705 = !{!702, !591}
!706 = distinct !{!706, !33}
!707 = !{!708, !588, !591}
!708 = distinct !{!708, !709, !"PopQuantumPixel: argument 0"}
!709 = distinct !{!709, !"PopQuantumPixel"}
!710 = !{!711, !588}
!711 = distinct !{!711, !712, !"GetPixelLuma: argument 0"}
!712 = distinct !{!712, !"GetPixelLuma"}
!713 = !{!708}
!714 = !{!708, !591}
!715 = distinct !{!715, !33}
!716 = !{!717}
!717 = distinct !{!717, !718, !"ExportGrayAlphaQuantum: argument 0"}
!718 = distinct !{!718, !"ExportGrayAlphaQuantum"}
!719 = !{!720}
!720 = distinct !{!720, !718, !"ExportGrayAlphaQuantum: argument 1"}
!721 = !{!717, !720}
!722 = !{!723, !717}
!723 = distinct !{!723, !724, !"GetPixelLuma: argument 0"}
!724 = distinct !{!724, !"GetPixelLuma"}
!725 = !{!726, !717}
!726 = distinct !{!726, !727, !"GetPixelLuma: argument 0"}
!727 = distinct !{!727, !"GetPixelLuma"}
!728 = !{!729, !717}
!729 = distinct !{!729, !730, !"GetPixelLuma: argument 0"}
!730 = distinct !{!730, !"GetPixelLuma"}
!731 = !{!732, !717}
!732 = distinct !{!732, !733, !"GetPixelLuma: argument 0"}
!733 = distinct !{!733, !"GetPixelLuma"}
!734 = distinct !{!734, !33}
!735 = !{!736, !717}
!736 = distinct !{!736, !737, !"GetPixelLuma: argument 0"}
!737 = distinct !{!737, !"GetPixelLuma"}
!738 = distinct !{!738, !33}
!739 = !{!740, !717}
!740 = distinct !{!740, !741, !"GetPixelLuma: argument 0"}
!741 = distinct !{!741, !"GetPixelLuma"}
!742 = distinct !{!742, !33}
!743 = !{!744, !717}
!744 = distinct !{!744, !745, !"GetPixelLuma: argument 0"}
!745 = distinct !{!745, !"GetPixelLuma"}
!746 = distinct !{!746, !33}
!747 = !{!748, !717}
!748 = distinct !{!748, !749, !"GetPixelLuma: argument 0"}
!749 = distinct !{!749, !"GetPixelLuma"}
!750 = distinct !{!750, !33}
!751 = !{!752, !717}
!752 = distinct !{!752, !753, !"GetPixelLuma: argument 0"}
!753 = distinct !{!753, !"GetPixelLuma"}
!754 = distinct !{!754, !33}
!755 = !{!756, !717}
!756 = distinct !{!756, !757, !"GetPixelLuma: argument 0"}
!757 = distinct !{!757, !"GetPixelLuma"}
!758 = !{!759}
!759 = distinct !{!759, !760, !"PopFloatPixel: argument 0"}
!760 = distinct !{!760, !"PopFloatPixel"}
!761 = !{!759, !717, !720}
!762 = !{!759, !720}
!763 = !{!764}
!764 = distinct !{!764, !765, !"PopFloatPixel: argument 0"}
!765 = distinct !{!765, !"PopFloatPixel"}
!766 = !{!764, !717, !720}
!767 = !{!764, !720}
!768 = distinct !{!768, !33}
!769 = !{!770, !717}
!770 = distinct !{!770, !771, !"GetPixelLuma: argument 0"}
!771 = distinct !{!771, !"GetPixelLuma"}
!772 = distinct !{!772, !33}
!773 = !{!774, !717}
!774 = distinct !{!774, !775, !"GetPixelLuma: argument 0"}
!775 = distinct !{!775, !"GetPixelLuma"}
!776 = !{!777}
!777 = distinct !{!777, !778, !"PopDoublePixel: argument 0"}
!778 = distinct !{!778, !"PopDoublePixel"}
!779 = !{!777, !717, !720}
!780 = !{!777, !720}
!781 = !{!782}
!782 = distinct !{!782, !783, !"PopDoublePixel: argument 0"}
!783 = distinct !{!783, !"PopDoublePixel"}
!784 = !{!782, !717, !720}
!785 = !{!782, !720}
!786 = distinct !{!786, !33}
!787 = !{!788, !717}
!788 = distinct !{!788, !789, !"GetPixelLuma: argument 0"}
!789 = distinct !{!789, !"GetPixelLuma"}
!790 = !{!791}
!791 = distinct !{!791, !792, !"PopQuantumPixel: argument 0"}
!792 = distinct !{!792, !"PopQuantumPixel"}
!793 = !{!791, !717, !720}
!794 = !{!791, !720}
!795 = !{!796}
!796 = distinct !{!796, !797, !"PopQuantumPixel: argument 0"}
!797 = distinct !{!797, !"PopQuantumPixel"}
!798 = !{!796, !717, !720}
!799 = !{!796, !720}
!800 = distinct !{!800, !33}
!801 = !{!802}
!802 = distinct !{!802, !803, !"ExportGreenQuantum: argument 0"}
!803 = distinct !{!803, !"ExportGreenQuantum"}
!804 = !{!805}
!805 = distinct !{!805, !803, !"ExportGreenQuantum: argument 1"}
!806 = !{!802, !805}
!807 = distinct !{!807, !33}
!808 = distinct !{!808, !33}
!809 = distinct !{!809, !33}
!810 = distinct !{!810, !33}
!811 = !{!812}
!812 = distinct !{!812, !813, !"PopFloatPixel: argument 0"}
!813 = distinct !{!813, !"PopFloatPixel"}
!814 = !{!812, !802, !805}
!815 = !{!812, !805}
!816 = distinct !{!816, !33}
!817 = !{!818}
!818 = distinct !{!818, !819, !"PopDoublePixel: argument 0"}
!819 = distinct !{!819, !"PopDoublePixel"}
!820 = !{!818, !802, !805}
!821 = !{!818, !805}
!822 = distinct !{!822, !33}
!823 = !{!824, !802, !805}
!824 = distinct !{!824, !825, !"PopQuantumPixel: argument 0"}
!825 = distinct !{!825, !"PopQuantumPixel"}
!826 = !{!824}
!827 = !{!824, !805}
!828 = distinct !{!828, !33}
!829 = !{!830}
!830 = distinct !{!830, !831, !"ExportIndexQuantum: argument 0"}
!831 = distinct !{!831, !"ExportIndexQuantum"}
!832 = !{!833}
!833 = distinct !{!833, !831, !"ExportIndexQuantum: argument 1"}
!834 = !{!6, !7, i64 0}
!835 = !{!830, !833}
!836 = distinct !{!836, !33}
!837 = distinct !{!837, !33, !838, !839}
!838 = !{!"llvm.loop.isvectorized", i32 1}
!839 = !{!"llvm.loop.unroll.runtime.disable"}
!840 = distinct !{!840, !33, !838, !839}
!841 = distinct !{!841, !33, !839, !838}
!842 = distinct !{!842, !33}
!843 = distinct !{!843, !33, !839, !838}
!844 = distinct !{!844, !33}
!845 = distinct !{!845, !33}
!846 = !{!847}
!847 = distinct !{!847, !848, !"PopFloatPixel: argument 0"}
!848 = distinct !{!848, !"PopFloatPixel"}
!849 = !{!847, !830, !833}
!850 = !{!847, !833}
!851 = distinct !{!851, !33}
!852 = distinct !{!852, !33}
!853 = !{!854}
!854 = distinct !{!854, !855, !"PopDoublePixel: argument 0"}
!855 = distinct !{!855, !"PopDoublePixel"}
!856 = !{!854, !830, !833}
!857 = !{!854, !833}
!858 = distinct !{!858, !33}
!859 = !{!860, !830, !833}
!860 = distinct !{!860, !861, !"PopQuantumPixel: argument 0"}
!861 = distinct !{!861, !"PopQuantumPixel"}
!862 = !{!860}
!863 = !{!860, !833}
!864 = distinct !{!864, !33}
!865 = !{!866}
!866 = distinct !{!866, !867, !"ExportIndexAlphaQuantum: argument 0"}
!867 = distinct !{!867, !"ExportIndexAlphaQuantum"}
!868 = !{!869}
!869 = distinct !{!869, !867, !"ExportIndexAlphaQuantum: argument 1"}
!870 = !{!871}
!871 = distinct !{!871, !867, !"ExportIndexAlphaQuantum: argument 2"}
!872 = !{!866, !869, !871}
!873 = !{!866, !869}
!874 = !{!866, !871}
!875 = !{!869, !871}
!876 = distinct !{!876, !33, !838, !839}
!877 = distinct !{!877, !33, !838, !839}
!878 = distinct !{!878, !33, !838, !839}
!879 = distinct !{!879, !33, !839, !838}
!880 = distinct !{!880, !33}
!881 = distinct !{!881, !33, !839, !838}
!882 = distinct !{!882, !33}
!883 = distinct !{!883, !33}
!884 = distinct !{!884, !33}
!885 = !{!886}
!886 = distinct !{!886, !887, !"PopFloatPixel: argument 0"}
!887 = distinct !{!887, !"PopFloatPixel"}
!888 = !{!886, !866, !869, !871}
!889 = !{!886, !866}
!890 = !{!886, !871}
!891 = !{!892}
!892 = distinct !{!892, !893, !"PopFloatPixel: argument 0"}
!893 = distinct !{!893, !"PopFloatPixel"}
!894 = !{!892, !866, !869, !871}
!895 = !{!892, !866}
!896 = !{!892, !871}
!897 = distinct !{!897, !33}
!898 = distinct !{!898, !33}
!899 = !{!900}
!900 = distinct !{!900, !901, !"PopDoublePixel: argument 0"}
!901 = distinct !{!901, !"PopDoublePixel"}
!902 = !{!900, !866, !869, !871}
!903 = !{!900, !866}
!904 = !{!900, !871}
!905 = !{!906}
!906 = distinct !{!906, !907, !"PopDoublePixel: argument 0"}
!907 = distinct !{!907, !"PopDoublePixel"}
!908 = !{!906, !866, !869, !871}
!909 = !{!906, !866}
!910 = !{!906, !871}
!911 = distinct !{!911, !33}
!912 = !{!913}
!913 = distinct !{!913, !914, !"PopQuantumPixel: argument 0"}
!914 = distinct !{!914, !"PopQuantumPixel"}
!915 = !{!913, !866, !869, !871}
!916 = !{!913, !871}
!917 = !{!918}
!918 = distinct !{!918, !919, !"PopQuantumPixel: argument 0"}
!919 = distinct !{!919, !"PopQuantumPixel"}
!920 = !{!918, !866, !869, !871}
!921 = !{!918, !871}
!922 = distinct !{!922, !33}
!923 = !{!924}
!924 = distinct !{!924, !925, !"ExportOpacityQuantum: argument 0"}
!925 = distinct !{!925, !"ExportOpacityQuantum"}
!926 = !{!927}
!927 = distinct !{!927, !925, !"ExportOpacityQuantum: argument 1"}
!928 = !{!924, !927}
!929 = distinct !{!929, !33}
!930 = distinct !{!930, !33}
!931 = distinct !{!931, !33}
!932 = distinct !{!932, !33}
!933 = !{!934}
!934 = distinct !{!934, !935, !"PopFloatPixel: argument 0"}
!935 = distinct !{!935, !"PopFloatPixel"}
!936 = !{!934, !924, !927}
!937 = !{!934, !927}
!938 = distinct !{!938, !33}
!939 = !{!940}
!940 = distinct !{!940, !941, !"PopDoublePixel: argument 0"}
!941 = distinct !{!941, !"PopDoublePixel"}
!942 = !{!940, !924, !927}
!943 = !{!940, !927}
!944 = distinct !{!944, !33}
!945 = !{!946, !924, !927}
!946 = distinct !{!946, !947, !"PopQuantumPixel: argument 0"}
!947 = distinct !{!947, !"PopQuantumPixel"}
!948 = !{!946}
!949 = !{!946, !927}
!950 = distinct !{!950, !33}
!951 = !{!952}
!952 = distinct !{!952, !953, !"ExportRedQuantum: argument 0"}
!953 = distinct !{!953, !"ExportRedQuantum"}
!954 = !{!955}
!955 = distinct !{!955, !953, !"ExportRedQuantum: argument 1"}
!956 = !{!952, !955}
!957 = distinct !{!957, !33}
!958 = distinct !{!958, !33}
!959 = distinct !{!959, !33}
!960 = distinct !{!960, !33}
!961 = !{!962}
!962 = distinct !{!962, !963, !"PopFloatPixel: argument 0"}
!963 = distinct !{!963, !"PopFloatPixel"}
!964 = !{!962, !952, !955}
!965 = !{!962, !955}
!966 = distinct !{!966, !33}
!967 = !{!968}
!968 = distinct !{!968, !969, !"PopDoublePixel: argument 0"}
!969 = distinct !{!969, !"PopDoublePixel"}
!970 = !{!968, !952, !955}
!971 = !{!968, !955}
!972 = distinct !{!972, !33}
!973 = !{!974, !952, !955}
!974 = distinct !{!974, !975, !"PopQuantumPixel: argument 0"}
!975 = distinct !{!975, !"PopQuantumPixel"}
!976 = !{!974}
!977 = !{!974, !955}
!978 = distinct !{!978, !33}
!979 = !{!980}
!980 = distinct !{!980, !981, !"ExportRGBQuantum: argument 0"}
!981 = distinct !{!981, !"ExportRGBQuantum"}
!982 = !{!983}
!983 = distinct !{!983, !981, !"ExportRGBQuantum: argument 1"}
!984 = !{!980, !983}
!985 = distinct !{!985, !33}
!986 = distinct !{!986, !33}
!987 = !{!988}
!988 = distinct !{!988, !989, !"PopQuantumLongPixel: argument 0"}
!989 = distinct !{!989, !"PopQuantumLongPixel"}
!990 = !{!988, !980, !983}
!991 = !{!988, !983}
!992 = !{!993}
!993 = distinct !{!993, !994, !"PopQuantumLongPixel: argument 0"}
!994 = distinct !{!994, !"PopQuantumLongPixel"}
!995 = !{!993, !980, !983}
!996 = !{!993, !983}
!997 = !{!998}
!998 = distinct !{!998, !999, !"PopQuantumLongPixel: argument 0"}
!999 = distinct !{!999, !"PopQuantumLongPixel"}
!1000 = !{!998, !980, !983}
!1001 = !{!998, !983}
!1002 = distinct !{!1002, !33}
!1003 = !{!1004, !983}
!1004 = distinct !{!1004, !1005, !"PopQuantumPixel: argument 0"}
!1005 = distinct !{!1005, !"PopQuantumPixel"}
!1006 = !{!1007, !983}
!1007 = distinct !{!1007, !1008, !"PopQuantumPixel: argument 0"}
!1008 = distinct !{!1008, !"PopQuantumPixel"}
!1009 = !{!1010}
!1010 = distinct !{!1010, !1011, !"PopQuantumPixel: argument 0"}
!1011 = distinct !{!1011, !"PopQuantumPixel"}
!1012 = !{!1010, !983}
!1013 = distinct !{!1013, !33}
!1014 = distinct !{!1014, !33}
!1015 = !{!1016}
!1016 = distinct !{!1016, !1017, !"PopQuantumLongPixel: argument 0"}
!1017 = distinct !{!1017, !"PopQuantumLongPixel"}
!1018 = !{!1016, !980, !983}
!1019 = !{!1016, !983}
!1020 = !{!1021}
!1021 = distinct !{!1021, !1022, !"PopQuantumLongPixel: argument 0"}
!1022 = distinct !{!1022, !"PopQuantumLongPixel"}
!1023 = !{!1021, !980, !983}
!1024 = !{!1021, !983}
!1025 = !{!1026}
!1026 = distinct !{!1026, !1027, !"PopQuantumLongPixel: argument 0"}
!1027 = distinct !{!1027, !"PopQuantumLongPixel"}
!1028 = !{!1026, !980, !983}
!1029 = !{!1026, !983}
!1030 = distinct !{!1030, !33}
!1031 = !{!1032, !983}
!1032 = distinct !{!1032, !1033, !"PopQuantumPixel: argument 0"}
!1033 = distinct !{!1033, !"PopQuantumPixel"}
!1034 = !{!1035, !983}
!1035 = distinct !{!1035, !1036, !"PopQuantumPixel: argument 0"}
!1036 = distinct !{!1036, !"PopQuantumPixel"}
!1037 = !{!1038}
!1038 = distinct !{!1038, !1039, !"PopQuantumPixel: argument 0"}
!1039 = distinct !{!1039, !"PopQuantumPixel"}
!1040 = !{!1038, !983}
!1041 = distinct !{!1041, !33}
!1042 = distinct !{!1042, !33}
!1043 = distinct !{!1043, !33}
!1044 = !{!1045}
!1045 = distinct !{!1045, !1046, !"PopFloatPixel: argument 0"}
!1046 = distinct !{!1046, !"PopFloatPixel"}
!1047 = !{!1045, !980, !983}
!1048 = !{!1045, !983}
!1049 = !{!1050}
!1050 = distinct !{!1050, !1051, !"PopFloatPixel: argument 0"}
!1051 = distinct !{!1051, !"PopFloatPixel"}
!1052 = !{!1050, !980, !983}
!1053 = !{!1050, !983}
!1054 = !{!1055}
!1055 = distinct !{!1055, !1056, !"PopFloatPixel: argument 0"}
!1056 = distinct !{!1056, !"PopFloatPixel"}
!1057 = !{!1055, !980, !983}
!1058 = !{!1055, !983}
!1059 = distinct !{!1059, !33}
!1060 = distinct !{!1060, !33}
!1061 = !{!1062}
!1062 = distinct !{!1062, !1063, !"PopDoublePixel: argument 0"}
!1063 = distinct !{!1063, !"PopDoublePixel"}
!1064 = !{!1062, !980, !983}
!1065 = !{!1062, !983}
!1066 = !{!1067}
!1067 = distinct !{!1067, !1068, !"PopDoublePixel: argument 0"}
!1068 = distinct !{!1068, !"PopDoublePixel"}
!1069 = !{!1067, !980, !983}
!1070 = !{!1067, !983}
!1071 = !{!1072}
!1072 = distinct !{!1072, !1073, !"PopDoublePixel: argument 0"}
!1073 = distinct !{!1073, !"PopDoublePixel"}
!1074 = !{!1072, !980, !983}
!1075 = !{!1072, !983}
!1076 = distinct !{!1076, !33}
!1077 = !{!1078}
!1078 = distinct !{!1078, !1079, !"PopQuantumPixel: argument 0"}
!1079 = distinct !{!1079, !"PopQuantumPixel"}
!1080 = !{!1078, !980, !983}
!1081 = !{!1078, !983}
!1082 = !{!1083}
!1083 = distinct !{!1083, !1084, !"PopQuantumPixel: argument 0"}
!1084 = distinct !{!1084, !"PopQuantumPixel"}
!1085 = !{!1083, !980, !983}
!1086 = !{!1083, !983}
!1087 = !{!1088}
!1088 = distinct !{!1088, !1089, !"PopQuantumPixel: argument 0"}
!1089 = distinct !{!1089, !"PopQuantumPixel"}
!1090 = !{!1088, !980, !983}
!1091 = !{!1088, !983}
!1092 = distinct !{!1092, !33}
!1093 = !{!1094}
!1094 = distinct !{!1094, !1095, !"ExportRGBAQuantum: argument 0"}
!1095 = distinct !{!1095, !"ExportRGBAQuantum"}
!1096 = !{!1097}
!1097 = distinct !{!1097, !1095, !"ExportRGBAQuantum: argument 1"}
!1098 = !{!1094, !1097}
!1099 = distinct !{!1099, !33}
!1100 = distinct !{!1100, !33}
!1101 = !{!1102}
!1102 = distinct !{!1102, !1103, !"PopQuantumLongPixel: argument 0"}
!1103 = distinct !{!1103, !"PopQuantumLongPixel"}
!1104 = !{!1102, !1094, !1097}
!1105 = !{!1102, !1097}
!1106 = !{!1107}
!1107 = distinct !{!1107, !1108, !"PopQuantumLongPixel: argument 0"}
!1108 = distinct !{!1108, !"PopQuantumLongPixel"}
!1109 = !{!1107, !1094, !1097}
!1110 = !{!1107, !1097}
!1111 = !{!1112}
!1112 = distinct !{!1112, !1113, !"PopQuantumLongPixel: argument 0"}
!1113 = distinct !{!1113, !"PopQuantumLongPixel"}
!1114 = !{!1112, !1094, !1097}
!1115 = !{!1112, !1097}
!1116 = !{!1117}
!1117 = distinct !{!1117, !1118, !"PopQuantumLongPixel: argument 0"}
!1118 = distinct !{!1118, !"PopQuantumLongPixel"}
!1119 = !{!1117, !1094, !1097}
!1120 = !{!1117, !1097}
!1121 = distinct !{!1121, !33}
!1122 = !{!1123}
!1123 = distinct !{!1123, !1124, !"PopQuantumPixel: argument 0"}
!1124 = distinct !{!1124, !"PopQuantumPixel"}
!1125 = !{!1123, !1094, !1097}
!1126 = !{!1123, !1097}
!1127 = !{!1128, !1097}
!1128 = distinct !{!1128, !1129, !"PopQuantumPixel: argument 0"}
!1129 = distinct !{!1129, !"PopQuantumPixel"}
!1130 = !{!1131, !1097}
!1131 = distinct !{!1131, !1132, !"PopQuantumPixel: argument 0"}
!1132 = distinct !{!1132, !"PopQuantumPixel"}
!1133 = !{!1134}
!1134 = distinct !{!1134, !1135, !"PopQuantumPixel: argument 0"}
!1135 = distinct !{!1135, !"PopQuantumPixel"}
!1136 = !{!1134, !1097}
!1137 = !{!1134, !1094, !1097}
!1138 = distinct !{!1138, !33}
!1139 = distinct !{!1139, !33}
!1140 = distinct !{!1140, !33}
!1141 = !{!1142}
!1142 = distinct !{!1142, !1143, !"PopFloatPixel: argument 0"}
!1143 = distinct !{!1143, !"PopFloatPixel"}
!1144 = !{!1142, !1094, !1097}
!1145 = !{!1142, !1097}
!1146 = !{!1147}
!1147 = distinct !{!1147, !1148, !"PopFloatPixel: argument 0"}
!1148 = distinct !{!1148, !"PopFloatPixel"}
!1149 = !{!1147, !1094, !1097}
!1150 = !{!1147, !1097}
!1151 = !{!1152}
!1152 = distinct !{!1152, !1153, !"PopFloatPixel: argument 0"}
!1153 = distinct !{!1153, !"PopFloatPixel"}
!1154 = !{!1152, !1094, !1097}
!1155 = !{!1152, !1097}
!1156 = !{!1157}
!1157 = distinct !{!1157, !1158, !"PopFloatPixel: argument 0"}
!1158 = distinct !{!1158, !"PopFloatPixel"}
!1159 = !{!1157, !1094, !1097}
!1160 = !{!1157, !1097}
!1161 = distinct !{!1161, !33}
!1162 = distinct !{!1162, !33}
!1163 = !{!1164}
!1164 = distinct !{!1164, !1165, !"PopDoublePixel: argument 0"}
!1165 = distinct !{!1165, !"PopDoublePixel"}
!1166 = !{!1164, !1094, !1097}
!1167 = !{!1164, !1097}
!1168 = !{!1169}
!1169 = distinct !{!1169, !1170, !"PopDoublePixel: argument 0"}
!1170 = distinct !{!1170, !"PopDoublePixel"}
!1171 = !{!1169, !1094, !1097}
!1172 = !{!1169, !1097}
!1173 = !{!1174}
!1174 = distinct !{!1174, !1175, !"PopDoublePixel: argument 0"}
!1175 = distinct !{!1175, !"PopDoublePixel"}
!1176 = !{!1174, !1094, !1097}
!1177 = !{!1174, !1097}
!1178 = !{!1179}
!1179 = distinct !{!1179, !1180, !"PopDoublePixel: argument 0"}
!1180 = distinct !{!1180, !"PopDoublePixel"}
!1181 = !{!1179, !1094, !1097}
!1182 = !{!1179, !1097}
!1183 = distinct !{!1183, !33}
!1184 = !{!1185}
!1185 = distinct !{!1185, !1186, !"PopQuantumPixel: argument 0"}
!1186 = distinct !{!1186, !"PopQuantumPixel"}
!1187 = !{!1185, !1094, !1097}
!1188 = !{!1185, !1097}
!1189 = !{!1190}
!1190 = distinct !{!1190, !1191, !"PopQuantumPixel: argument 0"}
!1191 = distinct !{!1191, !"PopQuantumPixel"}
!1192 = !{!1190, !1094, !1097}
!1193 = !{!1190, !1097}
!1194 = !{!1195}
!1195 = distinct !{!1195, !1196, !"PopQuantumPixel: argument 0"}
!1196 = distinct !{!1196, !"PopQuantumPixel"}
!1197 = !{!1195, !1094, !1097}
!1198 = !{!1195, !1097}
!1199 = !{!1200}
!1200 = distinct !{!1200, !1201, !"PopQuantumPixel: argument 0"}
!1201 = distinct !{!1201, !"PopQuantumPixel"}
!1202 = !{!1200, !1094, !1097}
!1203 = !{!1200, !1097}
!1204 = distinct !{!1204, !33}
!1205 = !{!114, !78, !81}
!1206 = !{!142, !78, !81}
!1207 = !{!1010, !980, !983}
!1208 = !{!1038, !980, !983}
!1209 = distinct !{!1209, !36}
!1210 = distinct !{!1210, !36}
!1211 = distinct !{!1211, !36}
!1212 = distinct !{!1212, !36}
!1213 = distinct !{!1213, !36}
!1214 = distinct !{!1214, !36}
!1215 = distinct !{!1215, !36}
!1216 = distinct !{!1216, !36}
!1217 = distinct !{!1217, !36}
!1218 = distinct !{!1218, !36}
!1219 = distinct !{!1219, !36}
!1220 = distinct !{!1220, !36}
!1221 = distinct !{!1221, !36}
!1222 = distinct !{!1222, !36}
!1223 = distinct !{!1223, !36}
!1224 = distinct !{!1224, !36}
!1225 = distinct !{!1225, !36}
!1226 = distinct !{!1226, !36}
!1227 = distinct !{!1227, !36}
!1228 = distinct !{!1228, !36}
!1229 = distinct !{!1229, !33}
!1230 = distinct !{!1230, !36}
!1231 = distinct !{!1231, !33}
!1232 = distinct !{!1232, !36}
