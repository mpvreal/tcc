; ModuleID = 'op.c'
source_filename = "op.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.cop = type { ptr, ptr, ptr, i64, i16, i8, i8, i32, ptr, ptr, i32, i32, ptr, ptr }
%struct.sv = type { ptr, i32, i32, %union.anon.8 }
%union.anon.8 = type { ptr }
%struct.custom_op = type { i32, ptr, ptr, i32, ptr }
%struct.xpvcv = type { ptr, %union._xmgu, i64, %union.anon, ptr, %union.anon.0, %union.anon.1, %union.anon.2, ptr, %union.anon.3, ptr, i32, i32, i32 }
%union._xmgu = type { ptr }
%union.anon = type { i64 }
%union.anon.0 = type { ptr }
%union.anon.1 = type { ptr }
%union.anon.2 = type { ptr }
%union.anon.3 = type { ptr }
%struct.opslab = type { ptr, ptr, ptr, i64, %struct.opslot }
%struct.opslot = type { ptr, ptr, %struct.op }
%struct.op = type { ptr, ptr, ptr, i64, i16, i8, i8 }
%struct.unop = type { ptr, ptr, ptr, i64, i16, i8, i8, ptr }
%struct.yy_parser = type { ptr, %union.YYSTYPE, i32, i32, i32, i32, ptr, ptr, i32, i32, ptr, ptr, i8, i8, i8, i8, i32, ptr, ptr, ptr, i16, i16, i32, ptr, i32, i32, i8, i8, i8, i8, i32, %struct._sublex_info, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i16, i8, i8, ptr, ptr, ptr, i8, [5 x %union.YYSTYPE], [5 x i32], i32, ptr, [256 x i8], i32, i32, i8, i8, i8 }
%union.YYSTYPE = type { ptr }
%struct._sublex_info = type { i8, i16, ptr, ptr }
%struct.pmop = type { ptr, ptr, ptr, i64, i16, i8, i8, ptr, ptr, ptr, i32, %union.anon.5, %union.anon.6, ptr }
%union.anon.5 = type { ptr }
%union.anon.6 = type { ptr }
%struct.hv = type { ptr, i32, i32, %union.anon.7 }
%union.anon.7 = type { ptr }
%struct.magic = type { ptr, ptr, i16, i8, i8, i64, ptr, ptr }
%struct.svop = type { ptr, ptr, ptr, i64, i16, i8, i8, ptr }
%struct.methop = type { ptr, ptr, ptr, i64, i16, i8, i8, %union.anon.10, ptr }
%union.anon.10 = type { ptr }
%struct.pvop = type { ptr, ptr, ptr, i64, i16, i8, i8, ptr }
%struct.unop_aux = type { ptr, ptr, ptr, i64, i16, i8, i8, ptr, ptr }
%union.UNOP_AUX_item = type { i64 }
%struct.gv = type { ptr, i32, i32, %union.anon.9 }
%union.anon.9 = type { ptr }
%struct.listop = type { ptr, ptr, ptr, i64, i16, i8, i8, ptr, ptr }
%struct.he = type { ptr, ptr, %union.anon.27 }
%union.anon.27 = type { ptr }
%struct.xpv = type { ptr, %union._xmgu, i64, %union.anon.11 }
%union.anon.11 = type { i64 }
%struct.xpviv = type { ptr, %union._xmgu, i64, %union.anon.13, %union._xivu }
%union.anon.13 = type { i64 }
%union._xivu = type { i64 }
%struct.logop = type { ptr, ptr, ptr, i64, i16, i8, i8, ptr, ptr }
%struct.binop = type { ptr, ptr, ptr, i64, i16, i8, i8, ptr, ptr }
%struct.xpvnv = type { ptr, %union._xmgu, i64, %union.anon.12, %union._xivu, %union._xnvu }
%union.anon.12 = type { i64 }
%union._xnvu = type { double }
%struct.xpvav = type { ptr, %union._xmgu, i64, i64, ptr }
%struct.av = type { ptr, i32, i32, %union.anon.14 }
%union.anon.14 = type { ptr }
%struct.padname = type { ptr, ptr, %union.anon.15, i32, i32, i32, i32, i8, i8 }
%union.anon.15 = type { ptr }
%struct.gp = type { ptr, ptr, ptr, i32, i32, ptr, ptr, ptr, ptr, i32, ptr }
%struct.xpvhv = type { ptr, %union._xmgu, i64, i64 }
%struct.xpvhv_aux = type { %union._xhvnameu, ptr, ptr, i32, i32, ptr, i32, i32, i32, i32 }
%union._xhvnameu = type { ptr }
%struct.cv = type { ptr, i32, i32, %union.anon.4 }
%union.anon.4 = type { ptr }
%struct.padnamelist = type { i64, ptr, i64, i64, i32 }
%struct.padlist = type { i64, ptr, i32, i32 }
%struct.__va_list_tag = type { i32, i32, ptr, ptr }
%struct.xpvgv = type { ptr, %union._xmgu, i64, %union.anon.16, %union._xivu, %union._xnvu }
%union.anon.16 = type { i64 }
%struct.regexp_engine = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.regexp = type { ptr, %union._xmgu, i64, %union.anon.25, ptr, ptr, ptr, i32, i64, i64, i64, ptr, i32, i32, ptr, i32, i32, ptr, ptr, ptr, i64, i64, i64, i64, i16, ptr }
%union.anon.25 = type { i64 }
%struct.xpvuv = type { ptr, %union._xmgu, i64, %union.anon.17, %union._xivu }
%union.anon.17 = type { i64 }
%struct.block_hooks = type { i32, ptr, ptr, ptr, ptr }
%struct.stackinfo = type { ptr, ptr, ptr, ptr, i32, i32, i32, i32 }
%struct.context = type { %union.anon.18 }
%union.anon.18 = type { %struct.subst }
%struct.subst = type { i8, i8, i16, i32, i64, i64, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.jmpenv = type { [1 x %struct.__jmp_buf_tag], ptr, i32, i8 }
%struct.__jmp_buf_tag = type { [8 x i64], i32, %struct.__sigset_t }
%struct.__sigset_t = type { [16 x i64] }
%struct.hek = type { i32, i32, [1 x i8] }
%struct.loop = type { ptr, ptr, ptr, i64, i16, i8, i8, ptr, ptr, ptr, ptr, ptr }
%struct.p5rx = type { ptr, i32, i32, %union.anon.26 }
%union.anon.26 = type { ptr }

@PL_compcv = external local_unnamed_addr global ptr, align 8
@PL_comppad = external local_unnamed_addr global ptr, align 8
@PL_curpad = external local_unnamed_addr global ptr, align 8
@PL_parser = external local_unnamed_addr global ptr, align 8
@.str = private unnamed_addr constant [39 x i8] c"panic: allocmy illegal flag bits 0x%lx\00", align 1
@PL_charclass = external local_unnamed_addr constant [0 x i32], align 4
@.str.2 = private unnamed_addr constant [35 x i8] c"Can't use global %c^%c%.*s in \22%s\22\00", align 1
@.str.3 = private unnamed_addr constant [6 x i8] c"state\00", align 1
@.str.4 = private unnamed_addr constant [3 x i8] c"my\00", align 1
@.str.5 = private unnamed_addr constant [30 x i8] c"Can't use global %.*s in \22%s\22\00", align 1
@.str.6 = private unnamed_addr constant [29 x i8] c"Use of %s $_ is experimental\00", align 1
@PL_curstash = external global ptr, align 8
@.str.7 = private unnamed_addr constant [3 x i8] c"$_\00", align 1
@PL_defstash = external local_unnamed_addr global ptr, align 8
@PL_ppaddr = external local_unnamed_addr global [0 x ptr], align 8
@PL_opfreehook = external local_unnamed_addr global ptr, align 8
@PL_curpm = external local_unnamed_addr global ptr, align 8
@PL_curcop = external global ptr, align 8
@PL_check = external local_unnamed_addr global [0 x ptr], align 8
@PL_opargs = external local_unnamed_addr constant [0 x i32], align 4
@.str.8 = private unnamed_addr constant [40 x i8] c"panic: op_sibling_splice(): NULL parent\00", align 1
@.str.9 = private unnamed_addr constant [40 x i8] c"panic: op_contextualize bad context %ld\00", align 1
@PL_compiling = external global %struct.cop, align 8
@.str.10 = private unnamed_addr constant [38 x i8] c"Useless use of sort in scalar context\00", align 1
@.str.11 = private unnamed_addr constant [59 x i8] c"%%%-p%c%s%c in scalar context better written as $%-p%c%s%c\00", align 1
@.str.12 = private unnamed_addr constant [61 x i8] c"%%%-p%c%-p%c in scalar context better written as $%-p%c%-p%c\00", align 1
@.str.13 = private unnamed_addr constant [6 x i8] c"undef\00", align 1
@.str.14 = private unnamed_addr constant [4 x i8] c"...\00", align 1
@PL_op_desc = external local_unnamed_addr constant [0 x ptr], align 8
@.str.15 = private unnamed_addr constant [30 x i8] c"negative pattern binding (!~)\00", align 1
@.str.16 = private unnamed_addr constant [37 x i8] c"non-destructive substitution (s///r)\00", align 1
@.str.17 = private unnamed_addr constant [41 x i8] c"non-destructive transliteration (tr///r)\00", align 1
@.str.18 = private unnamed_addr constant [11 x i8] c"a variable\00", align 1
@.str.19 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.20 = private unnamed_addr constant [16 x i8] c"a constant (%s)\00", align 1
@.str.21 = private unnamed_addr constant [17 x i8] c"a constant (%-p)\00", align 1
@.str.22 = private unnamed_addr constant [19 x i8] c"a constant (undef)\00", align 1
@.str.23 = private unnamed_addr constant [35 x i8] c"Useless use of %-p in void context\00", align 1
@.str.24 = private unnamed_addr constant [34 x i8] c"Useless use of %s in void context\00", align 1
@.str.25 = private unnamed_addr constant [54 x i8] c"Bareword \22%-p\22 not allowed while \22strict subs\22 in use\00", align 1
@PL_tmps_floor = external local_unnamed_addr global i64, align 8
@PL_peepp = external local_unnamed_addr global ptr, align 8
@PL_op = external local_unnamed_addr global ptr, align 8
@PL_runops = external local_unnamed_addr global ptr, align 8
@PL_stack_sp = external global ptr, align 8
@PL_comppad_name = external local_unnamed_addr global ptr, align 8
@.str.26 = private unnamed_addr constant [7 x i8] c"FIELDS\00", align 1
@.str.27 = private unnamed_addr constant [59 x i8] c"No such class field \22%-p\22 in variable %d%lu%4p of type %2p\00", align 1
@.str.28 = private unnamed_addr constant [33 x i8] c"Statement unlikely to be reached\00", align 1
@.str.29 = private unnamed_addr constant [51 x i8] c"\09(Maybe you meant system() when you said exec()?)\0A\00", align 1
@.str.30 = private unnamed_addr constant [42 x i8] c"%-p() called too early to check prototype\00", align 1
@.str.31 = private unnamed_addr constant [53 x i8] c"Scalar value @%-p%c%s%c better written as $%-p%c%s%c\00", align 1
@.str.32 = private unnamed_addr constant [55 x i8] c"Scalar value @%-p%c%-p%c better written as $%-p%c%-p%c\00", align 1
@PL_modcount = external local_unnamed_addr global i32, align 4
@.str.33 = private unnamed_addr constant [58 x i8] c"panic: unexpected lvalue entersub args: type/targ %ld:%lu\00", align 1
@.str.34 = private unnamed_addr constant [64 x i8] c"Unexpected constant lvalue entersub entry via type/targ %ld:%lu\00", align 1
@.str.35 = private unnamed_addr constant [22 x i8] c"Can't modify %s in %s\00", align 1
@.str.36 = private unnamed_addr constant [9 x i8] c"do block\00", align 1
@.str.37 = private unnamed_addr constant [27 x i8] c"non-lvalue subroutine call\00", align 1
@.str.38 = private unnamed_addr constant [6 x i8] c"local\00", align 1
@.str.39 = private unnamed_addr constant [41 x i8] c"Can't localize lexical variable %d%lu%4p\00", align 1
@.str.40 = private unnamed_addr constant [12 x i8] c"refaliasing\00", align 1
@.str.41 = private unnamed_addr constant [48 x i8] c"Experimental aliasing via reference not enabled\00", align 1
@.str.42 = private unnamed_addr constant [39 x i8] c"Aliasing via reference is experimental\00", align 1
@.str.43 = private unnamed_addr constant [27 x i8] c"Useless localization of %s\00", align 1
@.str.44 = private unnamed_addr constant [75 x i8] c"Can't modify reference to localized parenthesized array in list assignment\00", align 1
@.str.45 = private unnamed_addr constant [64 x i8] c"Can't modify reference to parenthesized hash in list assignment\00", align 1
@.str.46 = private unnamed_addr constant [35 x i8] c"Can't modify reference to %s in %s\00", align 1
@.str.47 = private unnamed_addr constant [11 x i8] c"attributes\00", align 1
@.str.48 = private unnamed_addr constant [25 x i8] c"Can't declare %s in \22%s\22\00", align 1
@.str.49 = private unnamed_addr constant [4 x i8] c"our\00", align 1
@PL_sv_no = external global %struct.sv, align 8
@PL_incgv = external local_unnamed_addr global ptr, align 8
@.str.50 = private unnamed_addr constant [14 x i8] c"attributes.pm\00", align 1
@PL_sv_undef = external global %struct.sv, align 8
@.str.51 = private unnamed_addr constant [7 x i8] c"import\00", align 1
@.str.52 = private unnamed_addr constant [43 x i8] c"Applying %s to %-p will act on scalar(%-p)\00", align 1
@.str.53 = private unnamed_addr constant [7 x i8] c"@array\00", align 1
@.str.54 = private unnamed_addr constant [6 x i8] c"%hash\00", align 1
@.str.55 = private unnamed_addr constant [41 x i8] c"Applying %s to %s will act on scalar(%s)\00", align 1
@.str.56 = private unnamed_addr constant [39 x i8] c"Using !~ with s///r doesn't make sense\00", align 1
@.str.57 = private unnamed_addr constant [40 x i8] c"Using !~ with tr///r doesn't make sense\00", align 1
@PL_perldb = external local_unnamed_addr global i32, align 4
@PL_tainting = external local_unnamed_addr global i8, align 1
@PL_savestack_ix = external local_unnamed_addr global i32, align 4
@PL_cop_seqmax = external local_unnamed_addr global i32, align 4
@PL_blockhooks = external global ptr, align 8
@PL_in_eval = external local_unnamed_addr global i8, align 1
@PL_eval_root = external local_unnamed_addr global ptr, align 8
@PL_curstackinfo = external local_unnamed_addr global ptr, align 8
@PL_eval_start = external local_unnamed_addr global ptr, align 8
@PL_main_root = external local_unnamed_addr global ptr, align 8
@PL_main_start = external local_unnamed_addr global ptr, align 8
@.str.58 = private unnamed_addr constant [14 x i8] c"DB::postponed\00", align 1
@PL_markstack_ptr = external local_unnamed_addr global ptr, align 8
@PL_markstack_max = external local_unnamed_addr global ptr, align 8
@PL_stack_base = external local_unnamed_addr global ptr, align 8
@PL_stack_max = external local_unnamed_addr global ptr, align 8
@.str.60 = private unnamed_addr constant [5 x i8] c"@$%*\00", align 1
@.str.61 = private unnamed_addr constant [37 x i8] c"Parentheses missing around \22%s\22 list\00", align 1
@.str.62 = private unnamed_addr constant [2 x i8] c";\00", align 1
@PL_op_mask = external local_unnamed_addr global ptr, align 8
@.str.63 = private unnamed_addr constant [31 x i8] c"'%s' trapped by operation mask\00", align 1
@PL_warnhook = external local_unnamed_addr global ptr, align 8
@PL_diehook = external local_unnamed_addr global ptr, align 8
@PL_dowarn = external local_unnamed_addr global i8, align 1
@PL_scopestack_ix = external local_unnamed_addr global i32, align 4
@PL_sv_placeholder = external global %struct.sv, align 8
@PL_top_env = external local_unnamed_addr global ptr, align 8
@PL_errgv = external local_unnamed_addr global ptr, align 8
@.str.64 = private unnamed_addr constant [46 x i8] c"panic: fold_constants JMPENV_PUSH returned %d\00", align 1
@PL_sv_yes = external global %struct.sv, align 8
@.str.65 = private unnamed_addr constant [8 x i8] c"reflags\00", align 1
@.str.66 = private unnamed_addr constant [16 x i8] c"reflags_charset\00", align 1
@.str.67 = private unnamed_addr constant [11 x i8] c"# comment\0A\00", align 1
@.str.68 = private unnamed_addr constant [18 x i8] c"%04lx\09%04lx\09XXXX\0A\00", align 1
@.str.69 = private unnamed_addr constant [13 x i8] c"%04lx\09\09XXXX\0A\00", align 1
@.str.70 = private unnamed_addr constant [19 x i8] c"%04lx\09%04lx\09%04lx\0A\00", align 1
@.str.71 = private unnamed_addr constant [14 x i8] c"%04lx\09\09%04lx\0A\00", align 1
@.str.72 = private unnamed_addr constant [5 x i8] c"utf8\00", align 1
@.str.73 = private unnamed_addr constant [6 x i8] c"FINAL\00", align 1
@.str.74 = private unnamed_addr constant [55 x i8] c"Useless use of /d modifier in transliteration operator\00", align 1
@.str.75 = private unnamed_addr constant [44 x i8] c"Replacement list is longer than search list\00", align 1
@PL_cv_has_eval = external local_unnamed_addr global i8, align 1
@PL_defgv = external local_unnamed_addr global ptr, align 8
@PL_curstname = external local_unnamed_addr global ptr, align 8
@.str.76 = private unnamed_addr constant [8 x i8] c"VERSION\00", align 1
@.str.77 = private unnamed_addr constant [29 x i8] c"Module name must be constant\00", align 1
@.str.78 = private unnamed_addr constant [41 x i8] c"Version number must be a constant number\00", align 1
@.str.79 = private unnamed_addr constant [9 x i8] c"unimport\00", align 1
@.str.80 = private unnamed_addr constant [6 x i8] c"BEGIN\00", align 1
@.str.81 = private unnamed_addr constant [8 x i8] c"unicode\00", align 1
@.str.82 = private unnamed_addr constant [3 x i8] c"do\00", align 1
@Perl_newASSIGNOP.no_list_state = internal constant [70 x i8] c"Initialization of state variables in list context currently forbidden\00", align 16
@.str.83 = private unnamed_addr constant [39 x i8] c"Assignment to both a list and a scalar\00", align 1
@PL_debstash = external local_unnamed_addr global ptr, align 8
@.str.84 = private unnamed_addr constant [53 x i8] c"Possible precedence issue with control flow operator\00", align 1
@.str.85 = private unnamed_addr constant [30 x i8] c"Bareword found in conditional\00", align 1
@.str.86 = private unnamed_addr constant [44 x i8] c"Deprecated use of my() in false conditional\00", align 1
@.str.87 = private unnamed_addr constant [46 x i8] c"Value of %s%s can be \220\22; test with defined()\00", align 1
@.str.88 = private unnamed_addr constant [11 x i8] c" construct\00", align 1
@.str.89 = private unnamed_addr constant [12 x i8] c"() operator\00", align 1
@.str.90 = private unnamed_addr constant [37 x i8] c"Found = in conditional, should be ==\00", align 1
@.str.91 = private unnamed_addr constant [2 x i8] c"$\00", align 1
@.str.92 = private unnamed_addr constant [31 x i8] c"Can't use %s for loop variable\00", align 1
@.str.93 = private unnamed_addr constant [3 x i8] c"::\00", align 1
@.str.94 = private unnamed_addr constant [20 x i8] c"Prototype mismatch:\00", align 1
@.str.95 = private unnamed_addr constant [9 x i8] c" sub %-p\00", align 1
@.str.96 = private unnamed_addr constant [12 x i8] c" (%d%lu%4p)\00", align 1
@.str.97 = private unnamed_addr constant [7 x i8] c": none\00", align 1
@.str.98 = private unnamed_addr constant [5 x i8] c" vs \00", align 1
@.str.99 = private unnamed_addr constant [11 x i8] c"(%d%lu%4p)\00", align 1
@.str.100 = private unnamed_addr constant [5 x i8] c"none\00", align 1
@.str.101 = private unnamed_addr constant [4 x i8] c"%-p\00", align 1
@PL_sub_generation = external local_unnamed_addr global i32, align 4
@PL_breakable_sub_gen = external local_unnamed_addr global i32, align 4
@.str.103 = private unnamed_addr constant [11 x i8] c"%s:%ld-%ld\00", align 1
@PL_subline = external local_unnamed_addr global i32, align 4
@.str.104 = private unnamed_addr constant [11 x i8] c"__ANON__::\00", align 1
@PL_DBsub = external local_unnamed_addr global ptr, align 8
@.str.105 = private unnamed_addr constant [11 x i8] c"prototype(\00", align 1
@.str.106 = private unnamed_addr constant [79 x i8] c"Attribute prototype(%d%lu%4p) discards earlier prototype attribute in same sub\00", align 1
@.str.107 = private unnamed_addr constant [74 x i8] c"Prototype '%d%lu%4p' overridden by attribute 'prototype(%d%lu%4p)' in %-p\00", align 1
@.str.108 = private unnamed_addr constant [63 x i8] c"lvalue attribute ignored after the subroutine has been defined\00", align 1
@.str.109 = private unnamed_addr constant [11 x i8] c"%s[%s:%ld]\00", align 1
@.str.110 = private unnamed_addr constant [9 x i8] c"__ANON__\00", align 1
@.str.111 = private unnamed_addr constant [19 x i8] c"__ANON__::__ANON__\00", align 1
@.str.112 = private unnamed_addr constant [49 x i8] c"BEGIN not safe after errors--compilation aborted\00", align 1
@.str.113 = private unnamed_addr constant [34 x i8] c"Constant subroutine %-p redefined\00", align 1
@.str.114 = private unnamed_addr constant [4 x i8] c"END\00", align 1
@.str.115 = private unnamed_addr constant [10 x i8] c"UNITCHECK\00", align 1
@.str.116 = private unnamed_addr constant [6 x i8] c"CHECK\00", align 1
@.str.117 = private unnamed_addr constant [5 x i8] c"INIT\00", align 1
@PL_curstack = external local_unnamed_addr global ptr, align 8
@PL_beginav = external global ptr, align 8
@PL_savebegin = external local_unnamed_addr global i8, align 1
@PL_endav = external global ptr, align 8
@PL_unitcheckav = external global ptr, align 8
@.str.118 = private unnamed_addr constant [28 x i8] c"Too late to run CHECK block\00", align 1
@PL_checkav = external global ptr, align 8
@.str.119 = private unnamed_addr constant [27 x i8] c"Too late to run INIT block\00", align 1
@PL_initav = external global ptr, align 8
@.str.120 = private unnamed_addr constant [41 x i8] c"Magical list constants are not supported\00", align 1
@PL_xsubfilename = external local_unnamed_addr global ptr, align 8
@.str.121 = private unnamed_addr constant [7 x i8] c"STDOUT\00", align 1
@.str.122 = private unnamed_addr constant [21 x i8] c"Format %-p redefined\00", align 1
@.str.123 = private unnamed_addr constant [24 x i8] c"Format STDOUT redefined\00", align 1
@.str.124 = private unnamed_addr constant [13 x i8] c"oops: oopsAV\00", align 1
@.str.125 = private unnamed_addr constant [13 x i8] c"oops: oopsHV\00", align 1
@.str.126 = private unnamed_addr constant [34 x i8] c"Can't use an array as a reference\00", align 1
@.str.127 = private unnamed_addr constant [32 x i8] c"Can't use a hash as a reference\00", align 1
@.str.128 = private unnamed_addr constant [9 x i8] c"readpipe\00", align 1
@.str.129 = private unnamed_addr constant [36 x i8] c"The bitwise feature is experimental\00", align 1
@.str.130 = private unnamed_addr constant [51 x i8] c"Possible precedence problem on bitwise %s operator\00", align 1
@.str.131 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.132 = private unnamed_addr constant [2 x i8] c"&\00", align 1
@.str.133 = private unnamed_addr constant [2 x i8] c"^\00", align 1
@.str.134 = private unnamed_addr constant [3 x i8] c"|.\00", align 1
@.str.135 = private unnamed_addr constant [3 x i8] c"&.\00", align 1
@.str.136 = private unnamed_addr constant [3 x i8] c"^.\00", align 1
@.str.137 = private unnamed_addr constant [34 x i8] c"$[ used in %s (did you mean $] ?)\00", align 1
@.str.138 = private unnamed_addr constant [2 x i8] c"[\00", align 1
@.str.139 = private unnamed_addr constant [60 x i8] c"delete argument is index/value array slice, use array slice\00", align 1
@.str.140 = private unnamed_addr constant [56 x i8] c"delete argument is key/value hash slice, use hash slice\00", align 1
@.str.141 = private unnamed_addr constant [56 x i8] c"delete argument is not a HASH or ARRAY element or slice\00", align 1
@PL_argvgv = external local_unnamed_addr global ptr, align 8
@PL_hintgv = external local_unnamed_addr global ptr, align 8
@.str.142 = private unnamed_addr constant [8 x i8] c"unieval\00", align 1
@.str.143 = private unnamed_addr constant [41 x i8] c"exists argument is not a subroutine name\00", align 1
@.str.144 = private unnamed_addr constant [63 x i8] c"exists argument is not a HASH or ARRAY element or a subroutine\00", align 1
@.str.145 = private unnamed_addr constant [9 x i8] c"a SCALAR\00", align 1
@.str.146 = private unnamed_addr constant [9 x i8] c"an ARRAY\00", align 1
@.str.147 = private unnamed_addr constant [7 x i8] c"a HASH\00", align 1
@.str.148 = private unnamed_addr constant [64 x i8] c"Can't use bareword (\22%-p\22) as %s ref while \22strict refs\22 in use\00", align 1
@PL_stdingv = external local_unnamed_addr global ptr, align 8
@.str.149 = private unnamed_addr constant [33 x i8] c"Useless use of %s with no values\00", align 1
@.str.150 = private unnamed_addr constant [6 x i8] c"array\00", align 1
@.str.151 = private unnamed_addr constant [32 x i8] c"%s on reference is experimental\00", align 1
@.str.152 = private unnamed_addr constant [5 x i8] c"hash\00", align 1
@.str.153 = private unnamed_addr constant [7 x i8] c"HANDLE\00", align 1
@.str.156 = private unnamed_addr constant [10 x i8] c"%s%c...%c\00", align 1
@.str.157 = private unnamed_addr constant [11 x i8] c"__ANONIO__\00", align 1
@.str.158 = private unnamed_addr constant [50 x i8] c"Missing comma after first argument to %s function\00", align 1
@.str.159 = private unnamed_addr constant [26 x i8] c"Too many arguments for %s\00", align 1
@.str.160 = private unnamed_addr constant [41 x i8] c"Type of arg %d to %s must be %s (not %s)\00", align 1
@.str.161 = private unnamed_addr constant [28 x i8] c"Not enough arguments for %s\00", align 1
@.str.162 = private unnamed_addr constant [5 x i8] c"glob\00", align 1
@PL_globhook = external local_unnamed_addr global ptr, align 8
@.str.163 = private unnamed_addr constant [11 x i8] c"File::Glob\00", align 1
@.str.164 = private unnamed_addr constant [24 x i8] c"panic: ck_grep, type=%u\00", align 1
@PL_tainted = external local_unnamed_addr global i8, align 1
@.str.165 = private unnamed_addr constant [72 x i8] c"Can't use 'defined(@array)' (Maybe you should just omit the defined()?)\00", align 1
@.str.166 = private unnamed_addr constant [72 x i8] c"Can't use 'defined(%%hash)' (Maybe you should just omit the defined()?)\00", align 1
@.str.167 = private unnamed_addr constant [2 x i8] c":\00", align 1
@.str.168 = private unnamed_addr constant [8 x i8] c"SUPER::\00", align 1
@.str.169 = private unnamed_addr constant [10 x i8] c"::SUPER::\00", align 1
@.str.170 = private unnamed_addr constant [50 x i8] c"Can't modify reference to %s in scalar assignment\00", align 1
@.str.171 = private unnamed_addr constant [4 x i8] c".pm\00", align 1
@.str.172 = private unnamed_addr constant [8 x i8] c"require\00", align 1
@.str.173 = private unnamed_addr constant [5 x i8] c"sort\00", align 1
@.str.174 = private unnamed_addr constant [32 x i8] c"\22%s %s\22 used in sort comparison\00", align 1
@.str.175 = private unnamed_addr constant [25 x i8] c"panic: ck_split, type=%u\00", align 1
@.str.176 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.177 = private unnamed_addr constant [43 x i8] c"Use of /g modifier is meaningless in split\00", align 1
@.str.178 = private unnamed_addr constant [7 x i8] c"STRING\00", align 1
@.str.179 = private unnamed_addr constant [42 x i8] c"/%-p/ should probably be written as \22%-p\22\00", align 1
@.str.180 = private unnamed_addr constant [32 x i8] c"panic: rv2cv_op_cv bad flags %x\00", align 1
@.str.181 = private unnamed_addr constant [58 x i8] c"panic: ck_entersub_args_proto CV with no proto, flags=%lx\00", align 1
@.str.182 = private unnamed_addr constant [27 x i8] c"Too many arguments for %-p\00", align 1
@.str.183 = private unnamed_addr constant [4 x i8] c";@%\00", align 1
@.str.184 = private unnamed_addr constant [16 x i8] c"block or sub {}\00", align 1
@.str.185 = private unnamed_addr constant [7 x i8] c"sub {}\00", align 1
@.str.186 = private unnamed_addr constant [12 x i8] c"one of %.*s\00", align 1
@.str.187 = private unnamed_addr constant [7 x i8] c"symbol\00", align 1
@.str.188 = private unnamed_addr constant [11 x i8] c"subroutine\00", align 1
@.str.189 = private unnamed_addr constant [7 x i8] c"scalar\00", align 1
@.str.190 = private unnamed_addr constant [33 x i8] c"Malformed prototype for %-p: %-p\00", align 1
@.str.191 = private unnamed_addr constant [29 x i8] c"Not enough arguments for %-p\00", align 1
@.str.192 = private unnamed_addr constant [42 x i8] c"Type of arg %d to %-p must be %s (not %s)\00", align 1
@.str.193 = private unnamed_addr constant [4 x i8] c"%ld\00", align 1
@.str.194 = private unnamed_addr constant [10 x i8] c"evalbytes\00", align 1
@.str.195 = private unnamed_addr constant [19 x i8] c"%s is experimental\00", align 1
@.str.196 = private unnamed_addr constant [53 x i8] c"length() used on %-p (did you mean \22scalar(%s%-p)\22?)\00", align 1
@.str.197 = private unnamed_addr constant [6 x i8] c"keys \00", align 1
@.str.198 = private unnamed_addr constant [62 x i8] c"length() used on %%hash (did you mean \22scalar(keys %%hash)\22?)\00", align 1
@.str.199 = private unnamed_addr constant [57 x i8] c"length() used on @array (did you mean \22scalar(@array)\22?)\00", align 1
@PL_rpeepp = external local_unnamed_addr global ptr, align 8
@PL_generation = external local_unnamed_addr global i32, align 4
@Perl_custom_op_get_field.xop_null = internal constant %struct.custom_op zeroinitializer, align 8
@PL_custom_ops = external local_unnamed_addr global ptr, align 8
@PL_custom_op_names = external local_unnamed_addr global ptr, align 8
@PL_custom_op_descs = external local_unnamed_addr global ptr, align 8
@PL_op_name = external local_unnamed_addr constant [0 x ptr], align 8
@.str.200 = private unnamed_addr constant [35 x i8] c"panic: can't register custom OP %s\00", align 1
@.str.201 = private unnamed_addr constant [3 x i8] c"_;\00", align 1
@.str.202 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.203 = private unnamed_addr constant [3 x i8] c"+@\00", align 1
@.str.204 = private unnamed_addr constant [3 x i8] c";+\00", align 1
@.str.205 = private unnamed_addr constant [7 x i8] c";\\[$*]\00", align 1
@.str.206 = private unnamed_addr constant [6 x i8] c"+;$$@\00", align 1
@.str.207 = private unnamed_addr constant [10 x i8] c"entereval\00", align 1
@.str.208 = private unnamed_addr constant [9 x i8] c"backtick\00", align 1
@.str.209 = private unnamed_addr constant [9 x i8] c"?$@@%&*$\00", align 1
@.str.210 = private unnamed_addr constant [8 x i8] c"autouse\00", align 1
@.str.211 = private unnamed_addr constant [25 x i8] c"Subroutine %-p redefined\00", align 1
@reltable.Perl_ck_bitop = private unnamed_addr constant [9 x i32] [i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.132 to i64), i64 ptrtoint (ptr @reltable.Perl_ck_bitop to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.133 to i64), i64 ptrtoint (ptr @reltable.Perl_ck_bitop to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.131 to i64), i64 ptrtoint (ptr @reltable.Perl_ck_bitop to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.132 to i64), i64 ptrtoint (ptr @reltable.Perl_ck_bitop to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.133 to i64), i64 ptrtoint (ptr @reltable.Perl_ck_bitop to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.131 to i64), i64 ptrtoint (ptr @reltable.Perl_ck_bitop to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.131 to i64), i64 ptrtoint (ptr @reltable.Perl_ck_bitop to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.131 to i64), i64 ptrtoint (ptr @reltable.Perl_ck_bitop to i64)) to i32), i32 trunc (i64 sub (i64 ptrtoint (ptr @.str.134 to i64), i64 ptrtoint (ptr @reltable.Perl_ck_bitop to i64)) to i32)], align 4

; Function Attrs: nofree nounwind sspstrong uwtable
define dso_local ptr @Perl_Slab_Alloc(i64 noundef %0) local_unnamed_addr #0 {
  %2 = load ptr, ptr @PL_compcv, align 8, !tbaa !6
  %3 = icmp eq ptr %2, null
  br i1 %3, label %18, label %4

4:                                                ; preds = %1
  %5 = load ptr, ptr %2, align 8, !tbaa !10
  %6 = getelementptr inbounds %struct.xpvcv, ptr %5, i64 0, i32 6
  %7 = load ptr, ptr %6, align 8, !tbaa !13
  %8 = icmp eq ptr %7, null
  br i1 %8, label %9, label %18

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.xpvcv, ptr %5, i64 0, i32 5
  %11 = load ptr, ptr %10, align 8, !tbaa !13
  %12 = icmp eq ptr %11, null
  br i1 %12, label %20, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.xpvcv, ptr %5, i64 0, i32 12
  %15 = load i32, ptr %14, align 4, !tbaa !14
  %16 = and i32 %15, 2048
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %28

18:                                               ; preds = %13, %4, %1
  %19 = tail call noalias ptr @calloc(i64 noundef 1, i64 noundef %0) #28
  br label %124

20:                                               ; preds = %9
  %21 = tail call noalias dereferenceable_or_null(512) ptr @calloc(i64 noundef 64, i64 noundef 8) #28
  %22 = getelementptr inbounds ptr, ptr %21, i64 63
  store ptr %22, ptr %21, align 8, !tbaa !17
  store ptr %21, ptr %10, align 8, !tbaa !13
  %23 = load ptr, ptr %2, align 8, !tbaa !10
  %24 = getelementptr inbounds %struct.xpvcv, ptr %23, i64 0, i32 12
  %25 = load i32, ptr %24, align 4, !tbaa !14
  %26 = or i32 %25, 2048
  store i32 %26, ptr %24, align 4, !tbaa !14
  %27 = getelementptr inbounds %struct.opslab, ptr %21, i64 0, i32 3
  store i64 2, ptr %27, align 8, !tbaa !21
  br label %32

28:                                               ; preds = %13
  %29 = getelementptr inbounds %struct.opslab, ptr %11, i64 0, i32 3
  %30 = load i64, ptr %29, align 8, !tbaa !21
  %31 = add i64 %30, 1
  store i64 %31, ptr %29, align 8, !tbaa !21
  br label %32

32:                                               ; preds = %28, %20
  %33 = phi ptr [ %11, %28 ], [ %21, %20 ]
  %34 = add i64 %0, 7
  %35 = lshr i64 %34, 3
  %36 = add nuw nsw i64 %35, 2
  %37 = getelementptr inbounds %struct.opslab, ptr %33, i64 0, i32 2
  %38 = load ptr, ptr %37, align 8, !tbaa !6
  %39 = icmp eq ptr %38, null
  br i1 %39, label %68, label %40

40:                                               ; preds = %32
  %41 = getelementptr inbounds i8, ptr %38, i64 -16
  %42 = load ptr, ptr %41, align 8, !tbaa !22
  %43 = ptrtoint ptr %42 to i64
  %44 = ptrtoint ptr %41 to i64
  %45 = sub i64 %43, %44
  %46 = ashr exact i64 %45, 3
  %47 = icmp ult i64 %46, %36
  br i1 %47, label %56, label %60

48:                                               ; preds = %56
  %49 = getelementptr inbounds i8, ptr %58, i64 -16
  %50 = load ptr, ptr %49, align 8, !tbaa !22
  %51 = ptrtoint ptr %50 to i64
  %52 = ptrtoint ptr %49 to i64
  %53 = sub i64 %51, %52
  %54 = ashr exact i64 %53, 3
  %55 = icmp ult i64 %54, %36
  br i1 %55, label %56, label %60, !llvm.loop !23

56:                                               ; preds = %40, %48
  %57 = phi ptr [ %58, %48 ], [ %38, %40 ]
  %58 = load ptr, ptr %57, align 8, !tbaa !6
  %59 = icmp eq ptr %58, null
  br i1 %59, label %68, label %48, !llvm.loop !23

60:                                               ; preds = %48, %40
  %61 = phi ptr [ %37, %40 ], [ %57, %48 ]
  %62 = phi ptr [ %38, %40 ], [ %58, %48 ]
  %63 = load ptr, ptr %62, align 8, !tbaa !25
  store ptr %63, ptr %61, align 8, !tbaa !6
  %64 = and i64 %34, -8
  tail call void @llvm.memset.p0.i64(ptr nonnull align 1 %62, i8 0, i64 %64, i1 false)
  %65 = getelementptr inbounds %struct.op, ptr %62, i64 0, i32 4
  %66 = load i16, ptr %65, align 8
  %67 = or i16 %66, 1024
  store i16 %67, ptr %65, align 8
  br label %124

68:                                               ; preds = %56, %32
  %69 = getelementptr inbounds %struct.opslab, ptr %33, i64 0, i32 1
  %70 = load ptr, ptr %69, align 8, !tbaa !26
  %71 = icmp eq ptr %70, null
  %72 = select i1 %71, ptr %33, ptr %70
  %73 = load ptr, ptr %72, align 8, !tbaa !17
  %74 = getelementptr inbounds %struct.opslab, ptr %72, i64 0, i32 4
  %75 = ptrtoint ptr %73 to i64
  %76 = ptrtoint ptr %74 to i64
  %77 = sub i64 %75, %76
  %78 = ashr exact i64 %77, 3
  %79 = icmp ult i64 %78, %36
  br i1 %79, label %80, label %108

80:                                               ; preds = %68
  %81 = icmp ugt i64 %77, 48
  br i1 %81, label %82, label %90

82:                                               ; preds = %80
  %83 = getelementptr inbounds %struct.opslab, ptr %72, i64 0, i32 4, i32 1
  store ptr %33, ptr %83, align 8, !tbaa !27
  store ptr %73, ptr %74, align 8, !tbaa !22
  store ptr %74, ptr %72, align 8, !tbaa !17
  %84 = getelementptr inbounds %struct.opslab, ptr %72, i64 0, i32 4, i32 2
  %85 = getelementptr inbounds %struct.opslab, ptr %72, i64 0, i32 4, i32 2, i32 4
  %86 = load i16, ptr %85, align 8
  %87 = and i16 %86, -1536
  %88 = or i16 %87, 1420
  store i16 %88, ptr %85, align 8
  %89 = load ptr, ptr %37, align 8, !tbaa !28
  store ptr %89, ptr %84, align 8, !tbaa !25
  store ptr %84, ptr %37, align 8, !tbaa !28
  br label %90

90:                                               ; preds = %82, %80
  %91 = phi ptr [ %73, %80 ], [ %74, %82 ]
  br label %92

92:                                               ; preds = %90, %92
  %93 = phi ptr [ %94, %92 ], [ %91, %90 ]
  %94 = load ptr, ptr %93, align 8, !tbaa !22
  %95 = icmp eq ptr %94, null
  br i1 %95, label %96, label %92, !llvm.loop !29

96:                                               ; preds = %92
  %97 = ptrtoint ptr %93 to i64
  %98 = ptrtoint ptr %72 to i64
  %99 = sub i64 %97, %98
  %100 = ashr exact i64 %99, 2
  %101 = add nsw i64 %100, 2
  %102 = tail call i64 @llvm.umin.i64(i64 %101, i64 2048)
  %103 = tail call noalias ptr @calloc(i64 noundef %102, i64 noundef 8) #28
  %104 = getelementptr inbounds ptr, ptr %103, i64 %102
  %105 = getelementptr inbounds ptr, ptr %104, i64 -1
  store ptr %105, ptr %103, align 8, !tbaa !17
  %106 = load ptr, ptr %69, align 8, !tbaa !26
  %107 = getelementptr inbounds %struct.opslab, ptr %103, i64 0, i32 1
  store ptr %106, ptr %107, align 8, !tbaa !26
  store ptr %103, ptr %69, align 8, !tbaa !26
  br label %108

108:                                              ; preds = %96, %68
  %109 = phi ptr [ %105, %96 ], [ %73, %68 ]
  %110 = phi ptr [ %103, %96 ], [ %72, %68 ]
  %111 = sub nuw nsw i64 -2, %35
  %112 = getelementptr inbounds ptr, ptr %109, i64 %111
  %113 = getelementptr inbounds %struct.opslab, ptr %110, i64 0, i32 4
  %114 = ptrtoint ptr %112 to i64
  %115 = ptrtoint ptr %113 to i64
  %116 = sub i64 %114, %115
  %117 = icmp ult i64 %116, 56
  %118 = select i1 %117, ptr %113, ptr %112
  %119 = getelementptr inbounds %struct.opslot, ptr %118, i64 0, i32 1
  store ptr %33, ptr %119, align 8, !tbaa !27
  store ptr %109, ptr %118, align 8, !tbaa !22
  store ptr %118, ptr %110, align 8, !tbaa !17
  %120 = getelementptr inbounds %struct.opslot, ptr %118, i64 0, i32 2
  %121 = getelementptr inbounds %struct.opslot, ptr %118, i64 0, i32 2, i32 4
  %122 = load i16, ptr %121, align 8
  %123 = or i16 %122, 1024
  store i16 %123, ptr %121, align 8
  br label %124

124:                                              ; preds = %60, %18, %108
  %125 = phi ptr [ %19, %18 ], [ %62, %60 ], [ %120, %108 ]
  ret ptr %125
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: mustprogress nofree nounwind willreturn allockind("alloc,zeroed") allocsize(0,1) memory(inaccessiblemem: readwrite)
declare noalias noundef ptr @calloc(i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_Slab_Free(ptr noundef %0) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 4
  %3 = load i16, ptr %2, align 8
  %4 = and i16 %3, 1024
  %5 = icmp eq i16 %4, 0
  br i1 %5, label %6, label %10

6:                                                ; preds = %1
  %7 = and i16 %3, 4096
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %27

9:                                                ; preds = %6
  tail call void @free(ptr noundef nonnull %0) #29
  br label %27

10:                                               ; preds = %1
  %11 = getelementptr inbounds i8, ptr %0, i64 -8
  %12 = load ptr, ptr %11, align 8, !tbaa !27
  %13 = and i16 %3, -512
  %14 = or i16 %13, 396
  store i16 %14, ptr %2, align 8
  %15 = getelementptr inbounds %struct.opslab, ptr %12, i64 0, i32 2
  %16 = load ptr, ptr %15, align 8, !tbaa !28
  store ptr %16, ptr %0, align 8, !tbaa !25
  store ptr %0, ptr %15, align 8, !tbaa !28
  %17 = getelementptr inbounds %struct.opslab, ptr %12, i64 0, i32 3
  %18 = load i64, ptr %17, align 8, !tbaa !21
  %19 = icmp eq i64 %18, 1
  br i1 %19, label %20, label %25

20:                                               ; preds = %10, %20
  %21 = phi ptr [ %23, %20 ], [ %12, %10 ]
  %22 = getelementptr inbounds %struct.opslab, ptr %21, i64 0, i32 1
  %23 = load ptr, ptr %22, align 8, !tbaa !26
  tail call void @free(ptr noundef nonnull %21) #29
  %24 = icmp eq ptr %23, null
  br i1 %24, label %27, label %20, !llvm.loop !30

25:                                               ; preds = %10
  %26 = add i64 %18, -1
  store i64 %26, ptr %17, align 8, !tbaa !21
  br label %27

27:                                               ; preds = %20, %25, %6, %9
  ret void
}

; Function Attrs: mustprogress nounwind willreturn allockind("free") memory(argmem: readwrite, inaccessiblemem: readwrite)
declare void @free(ptr allocptr nocapture noundef) local_unnamed_addr #5

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_opslab_free(ptr nocapture noundef %0) local_unnamed_addr #4 {
  br label %2

2:                                                ; preds = %2, %1
  %3 = phi ptr [ %0, %1 ], [ %5, %2 ]
  %4 = getelementptr inbounds %struct.opslab, ptr %3, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !26
  tail call void @free(ptr noundef %3) #29
  %6 = icmp eq ptr %5, null
  br i1 %6, label %7, label %2, !llvm.loop !30

7:                                                ; preds = %2
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_opslab_free_nopad(ptr nocapture noundef %0) local_unnamed_addr #4 {
  %2 = load ptr, ptr @PL_comppad, align 8, !tbaa !6
  %3 = icmp eq ptr %2, null
  br i1 %3, label %12, label %4

4:                                                ; preds = %1
  tail call void @Perl_push_scope() #29
  %5 = load ptr, ptr @PL_comppad, align 8, !tbaa !6
  tail call void @Perl_save_pushptr(ptr noundef %5, i32 noundef 7) #29
  store ptr null, ptr @PL_comppad, align 8, !tbaa !6
  store ptr null, ptr @PL_curpad, align 8, !tbaa !6
  br label %6

6:                                                ; preds = %6, %4
  %7 = phi ptr [ %0, %4 ], [ %9, %6 ]
  %8 = getelementptr inbounds %struct.opslab, ptr %7, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !26
  tail call void @free(ptr noundef %7) #29
  %10 = icmp eq ptr %9, null
  br i1 %10, label %11, label %6, !llvm.loop !30

11:                                               ; preds = %6
  tail call void @Perl_pop_scope() #29
  br label %17

12:                                               ; preds = %1, %12
  %13 = phi ptr [ %15, %12 ], [ %0, %1 ]
  %14 = getelementptr inbounds %struct.opslab, ptr %13, i64 0, i32 1
  %15 = load ptr, ptr %14, align 8, !tbaa !26
  tail call void @free(ptr noundef %13) #29
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %12, !llvm.loop !30

17:                                               ; preds = %12, %11
  ret void
}

declare void @Perl_push_scope() local_unnamed_addr #6

declare void @Perl_save_pushptr(ptr noundef, i32 noundef) local_unnamed_addr #6

declare void @Perl_pop_scope() local_unnamed_addr #6

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_opslab_force_free(ptr nocapture noundef %0) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.opslab, ptr %0, i64 0, i32 3
  br label %3

3:                                                ; preds = %28, %1
  %4 = phi ptr [ %0, %1 ], [ %30, %28 ]
  %5 = load ptr, ptr %4, align 8, !tbaa !6
  %6 = load ptr, ptr %5, align 8, !tbaa !6
  %7 = icmp eq ptr %6, null
  br i1 %7, label %28, label %8

8:                                                ; preds = %3, %24
  %9 = phi ptr [ %26, %24 ], [ %6, %3 ]
  %10 = phi ptr [ %25, %24 ], [ %5, %3 ]
  %11 = getelementptr inbounds %struct.opslot, ptr %10, i64 0, i32 2, i32 4
  %12 = load i16, ptr %11, align 8
  %13 = and i16 %12, 511
  %14 = icmp ne i16 %13, 396
  %15 = and i16 %12, 2048
  %16 = icmp eq i16 %15, 0
  %17 = and i1 %14, %16
  br i1 %17, label %18, label %24

18:                                               ; preds = %8
  %19 = getelementptr inbounds %struct.opslot, ptr %10, i64 0, i32 2
  tail call void @Perl_op_free(ptr noundef nonnull %19)
  %20 = load i64, ptr %2, align 8, !tbaa !21
  %21 = icmp eq i64 %20, 1
  br i1 %21, label %35, label %22

22:                                               ; preds = %18
  %23 = load ptr, ptr %10, align 8, !tbaa !6
  br label %24

24:                                               ; preds = %22, %8
  %25 = phi ptr [ %23, %22 ], [ %9, %8 ]
  %26 = load ptr, ptr %25, align 8, !tbaa !6
  %27 = icmp eq ptr %26, null
  br i1 %27, label %28, label %8, !llvm.loop !31

28:                                               ; preds = %24, %3
  %29 = getelementptr inbounds %struct.opslab, ptr %4, i64 0, i32 1
  %30 = load ptr, ptr %29, align 8, !tbaa !26
  %31 = icmp eq ptr %30, null
  br i1 %31, label %32, label %3, !llvm.loop !32

32:                                               ; preds = %28
  %33 = load i64, ptr %2, align 8, !tbaa !21
  %34 = icmp ugt i64 %33, 1
  br i1 %34, label %36, label %35

35:                                               ; preds = %18, %32
  br label %38

36:                                               ; preds = %32
  %37 = add i64 %33, -1
  store i64 %37, ptr %2, align 8, !tbaa !21
  br label %43

38:                                               ; preds = %35, %38
  %39 = phi ptr [ %41, %38 ], [ %0, %35 ]
  %40 = getelementptr inbounds %struct.opslab, ptr %39, i64 0, i32 1
  %41 = load ptr, ptr %40, align 8, !tbaa !26
  tail call void @free(ptr noundef nonnull %39) #29
  %42 = icmp eq ptr %41, null
  br i1 %42, label %43, label %38, !llvm.loop !30

43:                                               ; preds = %38, %36
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_op_free(ptr noundef %0) local_unnamed_addr #4 {
  br label %2

2:                                                ; preds = %138, %1
  %3 = phi i64 [ -1, %1 ], [ %139, %138 ]
  %4 = phi i64 [ 0, %1 ], [ %135, %138 ]
  %5 = phi ptr [ null, %1 ], [ %136, %138 ]
  %6 = phi ptr [ %0, %1 ], [ %141, %138 ]
  %7 = icmp eq ptr %6, null
  br i1 %7, label %133, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.op, ptr %6, i64 0, i32 4
  %10 = load i16, ptr %9, align 8
  %11 = and i16 %10, 511
  %12 = zext i16 %11 to i32
  %13 = icmp eq i16 %11, 396
  br i1 %13, label %133, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %struct.op, ptr %6, i64 0, i32 6
  %16 = load i8, ptr %15, align 1, !tbaa !33
  %17 = and i8 %16, 64
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %14
  switch i32 %12, label %26 [
    i32 186, label %20
    i32 187, label %20
    i32 343, label %20
    i32 197, label %20
    i32 198, label %20
    i32 236, label %20
  ]

20:                                               ; preds = %19, %19, %19, %19, %19, %19
  %21 = getelementptr inbounds %struct.op, ptr %6, i64 0, i32 3
  %22 = load i64, ptr %21, align 8, !tbaa !34
  %23 = add i64 %22, -1
  store i64 %23, ptr %21, align 8, !tbaa !34
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %26, label %25

25:                                               ; preds = %20
  tail call fastcc void @S_find_and_forget_pmops(ptr noundef nonnull %6)
  br label %133

26:                                               ; preds = %20, %19, %14
  %27 = load ptr, ptr @PL_opfreehook, align 8, !tbaa !6
  %28 = icmp eq ptr %27, null
  br i1 %28, label %30, label %29

29:                                               ; preds = %26
  tail call void %27(ptr noundef nonnull %6) #29
  br label %30

30:                                               ; preds = %29, %26
  %31 = getelementptr inbounds %struct.op, ptr %6, i64 0, i32 5
  %32 = load i8, ptr %31, align 2, !tbaa !35
  %33 = and i8 %32, 4
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %73, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct.unop, ptr %6, i64 0, i32 7
  %37 = load ptr, ptr %36, align 8, !tbaa !36
  %38 = icmp eq ptr %37, null
  br i1 %38, label %73, label %39

39:                                               ; preds = %35, %68
  %40 = phi ptr [ %45, %68 ], [ %37, %35 ]
  %41 = phi ptr [ %71, %68 ], [ %5, %35 ]
  %42 = phi i64 [ %70, %68 ], [ %4, %35 ]
  %43 = phi i64 [ %69, %68 ], [ %3, %35 ]
  %44 = getelementptr inbounds %struct.op, ptr %40, i64 0, i32 1
  %45 = load ptr, ptr %44, align 8, !tbaa !38
  %46 = getelementptr inbounds %struct.op, ptr %40, i64 0, i32 4
  %47 = load i16, ptr %46, align 8
  %48 = and i16 %47, 511
  %49 = icmp eq i16 %48, 396
  br i1 %49, label %68, label %50

50:                                               ; preds = %39
  %51 = getelementptr inbounds %struct.op, ptr %40, i64 0, i32 5
  %52 = load i8, ptr %51, align 2, !tbaa !35
  %53 = and i8 %52, 4
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %50
  tail call void @Perl_op_free(ptr noundef nonnull %40)
  br label %68

56:                                               ; preds = %50
  %57 = add nsw i64 %42, -1
  %58 = icmp eq i64 %43, %57
  br i1 %58, label %59, label %63

59:                                               ; preds = %56
  %60 = add nsw i64 %42, 100
  %61 = shl i64 %60, 3
  %62 = tail call ptr @Perl_safesysrealloc(ptr noundef %41, i64 noundef %61) #29
  br label %63

63:                                               ; preds = %56, %59
  %64 = phi i64 [ %60, %59 ], [ %42, %56 ]
  %65 = phi ptr [ %62, %59 ], [ %41, %56 ]
  %66 = add nsw i64 %43, 1
  %67 = getelementptr inbounds ptr, ptr %65, i64 %66
  store ptr %40, ptr %67, align 8, !tbaa !6
  br label %68

68:                                               ; preds = %55, %63, %39
  %69 = phi i64 [ %43, %39 ], [ %66, %63 ], [ %43, %55 ]
  %70 = phi i64 [ %42, %39 ], [ %64, %63 ], [ %42, %55 ]
  %71 = phi ptr [ %41, %39 ], [ %65, %63 ], [ %41, %55 ]
  %72 = icmp eq ptr %45, null
  br i1 %72, label %73, label %39, !llvm.loop !39

73:                                               ; preds = %68, %35, %30
  %74 = phi i64 [ %3, %30 ], [ %3, %35 ], [ %69, %68 ]
  %75 = phi i64 [ %4, %30 ], [ %4, %35 ], [ %70, %68 ]
  %76 = phi ptr [ %5, %30 ], [ %5, %35 ], [ %71, %68 ]
  %77 = icmp eq i16 %11, 0
  br i1 %77, label %78, label %82

78:                                               ; preds = %73
  %79 = getelementptr inbounds %struct.op, ptr %6, i64 0, i32 3
  %80 = load i64, ptr %79, align 8, !tbaa !34
  %81 = trunc i64 %80 to i16
  br label %82

82:                                               ; preds = %78, %73
  %83 = phi i16 [ %81, %78 ], [ %11, %73 ]
  %84 = add i16 %83, -193
  %85 = icmp ult i16 %84, 2
  br i1 %85, label %86, label %108

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.cop, ptr %6, i64 0, i32 9
  %88 = load ptr, ptr %87, align 8, !tbaa !40
  %89 = icmp eq ptr %88, null
  br i1 %89, label %97, label %90

90:                                               ; preds = %86
  %91 = getelementptr inbounds %struct.sv, ptr %88, i64 0, i32 1
  %92 = load i32, ptr %91, align 8, !tbaa !42
  %93 = icmp ugt i32 %92, 1
  br i1 %93, label %94, label %96

94:                                               ; preds = %90
  %95 = add i32 %92, -1
  store i32 %95, ptr %91, align 8, !tbaa !42
  br label %97

96:                                               ; preds = %90
  tail call void @Perl_sv_free2(ptr noundef nonnull %88, i32 noundef %92) #29
  br label %97

97:                                               ; preds = %96, %94, %86
  store ptr null, ptr %87, align 8, !tbaa !40
  %98 = getelementptr inbounds %struct.cop, ptr %6, i64 0, i32 12
  %99 = load ptr, ptr %98, align 8, !tbaa !44
  %100 = ptrtoint ptr %99 to i64
  switch i64 %100, label %101 [
    i64 0, label %102
    i64 8, label %102
    i64 16, label %102
  ]

101:                                              ; preds = %97
  tail call void @free(ptr noundef %99) #29
  br label %102

102:                                              ; preds = %101, %97, %97, %97
  %103 = getelementptr inbounds %struct.cop, ptr %6, i64 0, i32 13
  %104 = load ptr, ptr %103, align 8, !tbaa !45
  tail call void @Perl_refcounted_he_free(ptr noundef %104) #29
  %105 = load ptr, ptr @PL_curcop, align 8, !tbaa !6
  %106 = icmp eq ptr %105, %6
  br i1 %106, label %107, label %108

107:                                              ; preds = %102
  store ptr null, ptr @PL_curcop, align 8, !tbaa !6
  br label %108

108:                                              ; preds = %107, %102, %82
  tail call void @Perl_op_clear(ptr noundef nonnull %6)
  %109 = load i16, ptr %9, align 8
  %110 = and i16 %109, 1024
  %111 = icmp eq i16 %110, 0
  br i1 %111, label %112, label %116

112:                                              ; preds = %108
  %113 = and i16 %109, 4096
  %114 = icmp eq i16 %113, 0
  br i1 %114, label %115, label %133

115:                                              ; preds = %112
  tail call void @free(ptr noundef nonnull %6) #29
  br label %133

116:                                              ; preds = %108
  %117 = getelementptr inbounds i8, ptr %6, i64 -8
  %118 = load ptr, ptr %117, align 8, !tbaa !27
  %119 = and i16 %109, -512
  %120 = or i16 %119, 396
  store i16 %120, ptr %9, align 8
  %121 = getelementptr inbounds %struct.opslab, ptr %118, i64 0, i32 2
  %122 = load ptr, ptr %121, align 8, !tbaa !28
  store ptr %122, ptr %6, align 8, !tbaa !25
  store ptr %6, ptr %121, align 8, !tbaa !28
  %123 = getelementptr inbounds %struct.opslab, ptr %118, i64 0, i32 3
  %124 = load i64, ptr %123, align 8, !tbaa !21
  %125 = icmp eq i64 %124, 1
  br i1 %125, label %126, label %131

126:                                              ; preds = %116, %126
  %127 = phi ptr [ %129, %126 ], [ %118, %116 ]
  %128 = getelementptr inbounds %struct.opslab, ptr %127, i64 0, i32 1
  %129 = load ptr, ptr %128, align 8, !tbaa !26
  tail call void @free(ptr noundef nonnull %127) #29
  %130 = icmp eq ptr %129, null
  br i1 %130, label %133, label %126, !llvm.loop !30

131:                                              ; preds = %116
  %132 = add i64 %124, -1
  store i64 %132, ptr %123, align 8, !tbaa !21
  br label %133

133:                                              ; preds = %126, %131, %115, %112, %25, %2, %8
  %134 = phi i64 [ %3, %8 ], [ %3, %25 ], [ %3, %2 ], [ %74, %112 ], [ %74, %115 ], [ %74, %131 ], [ %74, %126 ]
  %135 = phi i64 [ %4, %8 ], [ %4, %25 ], [ %4, %2 ], [ %75, %112 ], [ %75, %115 ], [ %75, %131 ], [ %75, %126 ]
  %136 = phi ptr [ %5, %8 ], [ %5, %25 ], [ %5, %2 ], [ %76, %112 ], [ %76, %115 ], [ %76, %131 ], [ %76, %126 ]
  %137 = icmp sgt i64 %134, -1
  br i1 %137, label %138, label %143

138:                                              ; preds = %133
  %139 = add nsw i64 %134, -1
  %140 = getelementptr inbounds ptr, ptr %136, i64 %134
  %141 = load ptr, ptr %140, align 8, !tbaa !6
  %142 = icmp eq ptr %141, null
  br i1 %142, label %143, label %2, !llvm.loop !46

143:                                              ; preds = %133, %138
  tail call void @Perl_safesysfree(ptr noundef %136) #29
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i64 @Perl_allocmy(ptr noundef %0, i64 noundef %1, i32 noundef %2) local_unnamed_addr #4 {
  %4 = load ptr, ptr @PL_parser, align 8, !tbaa !6
  %5 = getelementptr inbounds %struct.yy_parser, ptr %4, i64 0, i32 42
  %6 = load i16, ptr %5, align 4, !tbaa !47
  %7 = icmp eq i16 %6, 143
  %8 = and i32 %2, -536870913
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %3
  %11 = zext i32 %2 to i64
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str, i64 noundef %11) #29
  br label %12

12:                                               ; preds = %10, %3
  %13 = icmp eq i64 %1, 0
  %14 = select i1 %13, i1 true, i1 %7
  br i1 %14, label %116, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds i8, ptr %0, i64 1
  %17 = load i8, ptr %16, align 1, !tbaa !13
  %18 = zext i8 %17 to i64
  %19 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %18
  %20 = load i32, ptr %19, align 4, !tbaa !52
  %21 = and i32 %20, 16388
  %22 = icmp eq i32 %21, 16388
  br i1 %22, label %116, label %23

23:                                               ; preds = %15
  %24 = and i32 %2, 536870912
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %56, label %26

26:                                               ; preds = %23
  %27 = icmp sgt i8 %17, -1
  br i1 %27, label %28, label %31

28:                                               ; preds = %26
  %29 = and i32 %20, 65536
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %53, label %116

31:                                               ; preds = %26
  %32 = zext i8 %17 to i32
  %33 = and i32 %32, 254
  %34 = icmp eq i32 %33, 194
  br i1 %34, label %35, label %49

35:                                               ; preds = %31
  %36 = and i32 %32, 28
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %68

38:                                               ; preds = %35
  %39 = shl i8 %17, 6
  %40 = getelementptr inbounds i8, ptr %0, i64 2
  %41 = load i8, ptr %40, align 1, !tbaa !13
  %42 = and i8 %41, 63
  %43 = or i8 %42, %39
  %44 = zext i8 %43 to i64
  %45 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %44
  %46 = load i32, ptr %45, align 4, !tbaa !52
  %47 = and i32 %46, 65536
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %68, label %116

49:                                               ; preds = %31
  %50 = tail call zeroext i1 @Perl__is_utf8_perl_idstart(ptr noundef nonnull %16) #29
  br i1 %50, label %116, label %51

51:                                               ; preds = %49
  %52 = load i8, ptr %16, align 1, !tbaa !13
  br label %53

53:                                               ; preds = %51, %28
  %54 = phi i8 [ %52, %51 ], [ %17, %28 ]
  %55 = icmp eq i8 %54, 95
  br i1 %55, label %58, label %68

56:                                               ; preds = %23
  %57 = icmp eq i8 %17, 95
  br i1 %57, label %63, label %71

58:                                               ; preds = %53
  %59 = load i8, ptr %0, align 1, !tbaa !13
  %60 = icmp eq i8 %59, 36
  %61 = icmp ugt i64 %1, 2
  %62 = or i1 %61, %60
  br i1 %62, label %116, label %74

63:                                               ; preds = %56
  %64 = load i8, ptr %0, align 1, !tbaa !13
  %65 = icmp eq i8 %64, 36
  %66 = icmp ugt i64 %1, 2
  %67 = or i1 %66, %65
  br i1 %67, label %116, label %74

68:                                               ; preds = %38, %35, %53
  %69 = phi i8 [ %54, %53 ], [ %17, %35 ], [ %17, %38 ]
  %70 = icmp ugt i8 %69, -63
  br i1 %70, label %107, label %71

71:                                               ; preds = %56, %68
  %72 = phi i8 [ %69, %68 ], [ %17, %56 ]
  %73 = icmp sgt i8 %72, -1
  br i1 %73, label %74, label %107

74:                                               ; preds = %58, %63, %71
  %75 = phi i8 [ %72, %71 ], [ 95, %63 ], [ 95, %58 ]
  %76 = zext i8 %75 to i64
  %77 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %76
  %78 = load i32, ptr %77, align 4, !tbaa !52
  %79 = and i32 %78, 16448
  %80 = icmp eq i32 %79, 16448
  br i1 %80, label %81, label %88

81:                                               ; preds = %74
  %82 = zext i8 %75 to i16
  %83 = icmp ugt i8 %75, 15
  %84 = shl nuw i16 1, %82
  %85 = and i16 %84, 13825
  %86 = icmp eq i16 %85, 0
  %87 = select i1 %83, i1 true, i1 %86
  br i1 %87, label %107, label %88

88:                                               ; preds = %81, %74
  %89 = load i8, ptr %0, align 1, !tbaa !13
  %90 = sext i8 %89 to i32
  %91 = and i32 %78, 16392
  %92 = icmp eq i32 %91, 16392
  %93 = add nsw i8 %75, -32
  %94 = select i1 %92, i8 %93, i8 %75
  %95 = xor i8 %94, 64
  %96 = zext i8 %95 to i32
  %97 = trunc i64 %1 to i32
  %98 = add i32 %97, -2
  %99 = getelementptr inbounds i8, ptr %0, i64 2
  %100 = load ptr, ptr @PL_parser, align 8, !tbaa !6
  %101 = getelementptr inbounds %struct.yy_parser, ptr %100, i64 0, i32 42
  %102 = load i16, ptr %101, align 4, !tbaa !47
  %103 = icmp eq i16 %102, 212
  %104 = select i1 %103, ptr @.str.3, ptr @.str.4
  %105 = tail call ptr (ptr, ...) @Perl_form(ptr noundef nonnull @.str.2, i32 noundef %90, i32 noundef %96, i32 noundef %98, ptr noundef nonnull %99, ptr noundef nonnull %104) #29
  %106 = tail call i32 @Perl_yyerror(ptr noundef %105) #29
  br label %130

107:                                              ; preds = %68, %81, %71
  %108 = trunc i64 %1 to i32
  %109 = load ptr, ptr @PL_parser, align 8, !tbaa !6
  %110 = getelementptr inbounds %struct.yy_parser, ptr %109, i64 0, i32 42
  %111 = load i16, ptr %110, align 4, !tbaa !47
  %112 = icmp eq i16 %111, 212
  %113 = select i1 %112, ptr @.str.3, ptr @.str.4
  %114 = tail call ptr (ptr, ...) @Perl_form(ptr noundef nonnull @.str.5, i32 noundef %108, ptr noundef nonnull %0, ptr noundef nonnull %113) #29
  %115 = tail call i32 @Perl_yyerror_pv(ptr noundef %114, i32 noundef %24) #29
  br label %130

116:                                              ; preds = %63, %12, %38, %28, %58, %49, %15
  %117 = icmp eq i64 %1, 2
  br i1 %117, label %118, label %129

118:                                              ; preds = %116
  %119 = getelementptr inbounds i8, ptr %0, i64 1
  %120 = load i8, ptr %119, align 1, !tbaa !13
  %121 = icmp ne i8 %120, 95
  %122 = select i1 %121, i1 true, i1 %7
  br i1 %122, label %129, label %123

123:                                              ; preds = %118
  %124 = load ptr, ptr @PL_parser, align 8, !tbaa !6
  %125 = getelementptr inbounds %struct.yy_parser, ptr %124, i64 0, i32 42
  %126 = load i16, ptr %125, align 4, !tbaa !47
  %127 = icmp eq i16 %126, 212
  %128 = select i1 %127, ptr @.str.3, ptr @.str.4
  tail call void (i32, ptr, ...) @Perl_ck_warner_d(i32 noundef 53, ptr noundef nonnull @.str.6, ptr noundef nonnull %128) #29
  br label %130

129:                                              ; preds = %118, %116
  br i1 %7, label %138, label %130

130:                                              ; preds = %107, %88, %123, %129
  %131 = load ptr, ptr @PL_parser, align 8, !tbaa !6
  %132 = getelementptr inbounds %struct.yy_parser, ptr %131, i64 0, i32 42
  %133 = load i16, ptr %132, align 4, !tbaa !47
  %134 = icmp eq i16 %133, 212
  %135 = select i1 %134, i32 2, i32 0
  %136 = getelementptr inbounds %struct.yy_parser, ptr %131, i64 0, i32 45
  %137 = load ptr, ptr %136, align 8, !tbaa !53
  br label %150

138:                                              ; preds = %129
  %139 = load ptr, ptr @PL_parser, align 8, !tbaa !6
  %140 = getelementptr inbounds %struct.yy_parser, ptr %139, i64 0, i32 45
  %141 = load ptr, ptr %140, align 8, !tbaa !53
  %142 = load ptr, ptr @PL_curstash, align 8, !tbaa !6
  %143 = icmp eq ptr %142, null
  br i1 %143, label %148, label %144

144:                                              ; preds = %138
  br i1 %117, label %145, label %150

145:                                              ; preds = %144
  %146 = tail call i32 @bcmp(ptr noundef nonnull dereferenceable(2) %0, ptr noundef nonnull dereferenceable(2) @.str.7, i64 2)
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %148, label %150

148:                                              ; preds = %145, %138
  %149 = load ptr, ptr @PL_defstash, align 8, !tbaa !6
  br label %150

150:                                              ; preds = %144, %145, %130, %148
  %151 = phi ptr [ %141, %148 ], [ %137, %130 ], [ %141, %145 ], [ %141, %144 ]
  %152 = phi i32 [ 1, %148 ], [ %135, %130 ], [ 1, %145 ], [ 1, %144 ]
  %153 = phi ptr [ %149, %148 ], [ null, %130 ], [ %142, %145 ], [ %142, %144 ]
  %154 = tail call i64 @Perl_pad_add_name_pvn(ptr noundef %0, i64 noundef %1, i32 noundef %152, ptr noundef %151, ptr noundef %153) #29
  %155 = load ptr, ptr @PL_parser, align 8, !tbaa !6
  %156 = getelementptr inbounds %struct.yy_parser, ptr %155, i64 0, i32 42
  %157 = load i16, ptr %156, align 4, !tbaa !47
  %158 = icmp eq i16 %157, 212
  br i1 %158, label %159, label %168

159:                                              ; preds = %150
  %160 = load ptr, ptr @PL_compcv, align 8, !tbaa !6
  %161 = load ptr, ptr %160, align 8, !tbaa !10
  %162 = getelementptr inbounds %struct.xpvcv, ptr %161, i64 0, i32 12
  %163 = load i32, ptr %162, align 4, !tbaa !14
  %164 = and i32 %163, 128
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %168, label %166

166:                                              ; preds = %159
  %167 = or i32 %163, 32
  store i32 %167, ptr %162, align 4, !tbaa !14
  br label %168

168:                                              ; preds = %166, %159, %150
  ret i64 %154
}

declare void @Perl_croak(ptr noundef, ...) local_unnamed_addr #6

declare zeroext i1 @Perl__is_utf8_perl_idstart(ptr noundef) local_unnamed_addr #6

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare ptr @strchr(ptr noundef, i32 noundef) local_unnamed_addr #7

declare i32 @Perl_yyerror(ptr noundef) local_unnamed_addr #6

declare ptr @Perl_form(ptr noundef, ...) local_unnamed_addr #6

declare i32 @Perl_yyerror_pv(ptr noundef, i32 noundef) local_unnamed_addr #6

declare void @Perl_ck_warner_d(i32 noundef, ptr noundef, ...) local_unnamed_addr #6

declare i64 @Perl_pad_add_name_pvn(ptr noundef, i64 noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #6

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @S_find_and_forget_pmops(ptr nocapture noundef readonly %0) unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 5
  %3 = load i8, ptr %2, align 2, !tbaa !35
  %4 = and i8 %3, 4
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %67, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.unop, ptr %0, i64 0, i32 7
  %8 = load ptr, ptr %7, align 8, !tbaa !6
  %9 = icmp eq ptr %8, null
  br i1 %9, label %67, label %10

10:                                               ; preds = %6, %63
  %11 = phi ptr [ %65, %63 ], [ %8, %6 ]
  %12 = getelementptr inbounds %struct.op, ptr %11, i64 0, i32 4
  %13 = load i16, ptr %12, align 8
  %14 = and i16 %13, 511
  %15 = zext i16 %14 to i32
  switch i32 %15, label %63 [
    i32 33, label %16
    i32 13, label %16
    i32 31, label %16
    i32 32, label %16
  ]

16:                                               ; preds = %10, %10, %10, %10
  %17 = getelementptr inbounds %struct.pmop, ptr %11, i64 0, i32 10
  %18 = load i32, ptr %17, align 8, !tbaa !54
  %19 = and i32 %18, 1048576
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.pmop, ptr %11, i64 0, i32 12
  %23 = load ptr, ptr %22, align 8, !tbaa !13
  %24 = icmp eq ptr %23, null
  br i1 %24, label %59, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.hv, ptr %23, i64 0, i32 2
  %27 = load i32, ptr %26, align 4, !tbaa !56
  %28 = and i32 %27, 14680064
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %59, label %30

30:                                               ; preds = %25
  %31 = tail call ptr @Perl_mg_find(ptr noundef nonnull %23, i32 noundef 58) #29
  %32 = icmp eq ptr %31, null
  br i1 %32, label %59, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %struct.magic, ptr %31, i64 0, i32 7
  %35 = load ptr, ptr %34, align 8, !tbaa !58
  %36 = getelementptr inbounds %struct.magic, ptr %31, i64 0, i32 5
  %37 = load i64, ptr %36, align 8, !tbaa !60
  %38 = lshr i64 %37, 3
  %39 = trunc i64 %38 to i32
  %40 = and i64 %38, 4294967295
  br label %41

41:                                               ; preds = %44, %33
  %42 = phi i64 [ %45, %44 ], [ %40, %33 ]
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %59, label %44

44:                                               ; preds = %41
  %45 = add nsw i64 %42, -1
  %46 = getelementptr inbounds ptr, ptr %35, i64 %45
  %47 = load ptr, ptr %46, align 8, !tbaa !6
  %48 = icmp eq ptr %47, %11
  br i1 %48, label %49, label %41, !llvm.loop !61

49:                                               ; preds = %44
  %50 = getelementptr inbounds ptr, ptr %35, i64 %45
  %51 = add i32 %39, -1
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds ptr, ptr %35, i64 %52
  %54 = load ptr, ptr %53, align 8, !tbaa !6
  store ptr %54, ptr %50, align 8, !tbaa !6
  %55 = shl nuw nsw i64 %52, 3
  store i64 %55, ptr %36, align 8, !tbaa !60
  %56 = icmp eq i32 %51, 0
  br i1 %56, label %57, label %59

57:                                               ; preds = %49
  %58 = load ptr, ptr %34, align 8, !tbaa !58
  tail call void @Perl_safesysfree(ptr noundef %58) #29
  store ptr null, ptr %34, align 8, !tbaa !58
  br label %59

59:                                               ; preds = %41, %57, %49, %30, %25, %21, %16
  %60 = load ptr, ptr @PL_curpm, align 8, !tbaa !6
  %61 = icmp eq ptr %60, %11
  br i1 %61, label %62, label %63

62:                                               ; preds = %59
  store ptr null, ptr @PL_curpm, align 8, !tbaa !6
  br label %63

63:                                               ; preds = %62, %59, %10
  tail call fastcc void @S_find_and_forget_pmops(ptr noundef nonnull %11)
  %64 = getelementptr inbounds %struct.op, ptr %11, i64 0, i32 1
  %65 = load ptr, ptr %64, align 8, !tbaa !6
  %66 = icmp eq ptr %65, null
  br i1 %66, label %67, label %10, !llvm.loop !62

67:                                               ; preds = %63, %6, %1
  ret void
}

declare ptr @Perl_safesysrealloc(ptr noundef, i64 noundef) local_unnamed_addr #6

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_op_clear(ptr noundef %0) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 4
  %3 = load i16, ptr %2, align 8
  %4 = and i16 %3, 511
  %5 = zext i16 %4 to i32
  switch i32 %5, label %8 [
    i32 0, label %6
    i32 344, label %6
    i32 342, label %6
    i32 6, label %18
    i32 7, label %18
    i32 136, label %18
    i32 212, label %20
    i32 213, label %20
    i32 210, label %32
    i32 211, label %32
    i32 5, label %44
    i32 341, label %44
    i32 207, label %56
    i32 208, label %56
    i32 205, label %56
    i32 204, label %56
    i32 206, label %56
    i32 35, label %61
    i32 36, label %61
    i32 33, label %81
    i32 13, label %84
    i32 31, label %95
    i32 32, label %95
    i32 153, label %164
  ]

6:                                                ; preds = %1, %1, %1
  %7 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 3
  store i64 0, ptr %7, align 8, !tbaa !34
  br label %233

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 5
  %10 = load i8, ptr %9, align 2, !tbaa !35
  %11 = and i8 %10, 16
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %233, label %13

13:                                               ; preds = %8
  %14 = zext i16 %4 to i64
  %15 = getelementptr inbounds [0 x ptr], ptr @PL_check, i64 0, i64 %14
  %16 = load ptr, ptr %15, align 8, !tbaa !6
  %17 = icmp eq ptr %16, @Perl_ck_ftst
  br i1 %17, label %18, label %233

18:                                               ; preds = %13, %1, %1, %1
  %19 = getelementptr inbounds %struct.svop, ptr %0, i64 0, i32 7
  tail call void @S_op_clear_gv(ptr noundef nonnull %0, ptr noundef nonnull %19)
  br label %233

20:                                               ; preds = %1, %1
  %21 = getelementptr inbounds %struct.methop, ptr %0, i64 0, i32 8
  %22 = load ptr, ptr %21, align 8, !tbaa !63
  %23 = icmp eq ptr %22, null
  br i1 %23, label %31, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.sv, ptr %22, i64 0, i32 1
  %26 = load i32, ptr %25, align 8, !tbaa !42
  %27 = icmp ugt i32 %26, 1
  br i1 %27, label %28, label %30

28:                                               ; preds = %24
  %29 = add i32 %26, -1
  store i32 %29, ptr %25, align 8, !tbaa !42
  br label %31

30:                                               ; preds = %24
  tail call void @Perl_sv_free2(ptr noundef nonnull %22, i32 noundef %26) #29
  br label %31

31:                                               ; preds = %20, %28, %30
  store ptr null, ptr %21, align 8, !tbaa !63
  br label %32

32:                                               ; preds = %1, %1, %31
  %33 = getelementptr inbounds %struct.methop, ptr %0, i64 0, i32 7
  %34 = load ptr, ptr %33, align 8, !tbaa !13
  %35 = icmp eq ptr %34, null
  br i1 %35, label %43, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %struct.sv, ptr %34, i64 0, i32 1
  %38 = load i32, ptr %37, align 8, !tbaa !42
  %39 = icmp ugt i32 %38, 1
  br i1 %39, label %40, label %42

40:                                               ; preds = %36
  %41 = add i32 %38, -1
  store i32 %41, ptr %37, align 8, !tbaa !42
  br label %43

42:                                               ; preds = %36
  tail call void @Perl_sv_free2(ptr noundef nonnull %34, i32 noundef %38) #29
  br label %43

43:                                               ; preds = %32, %40, %42
  store ptr null, ptr %33, align 8, !tbaa !13
  br label %233

44:                                               ; preds = %1, %1
  %45 = getelementptr inbounds %struct.svop, ptr %0, i64 0, i32 7
  %46 = load ptr, ptr %45, align 8, !tbaa !65
  %47 = icmp eq ptr %46, null
  br i1 %47, label %55, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %struct.sv, ptr %46, i64 0, i32 1
  %50 = load i32, ptr %49, align 8, !tbaa !42
  %51 = icmp ugt i32 %50, 1
  br i1 %51, label %52, label %54

52:                                               ; preds = %48
  %53 = add i32 %50, -1
  store i32 %53, ptr %49, align 8, !tbaa !42
  br label %55

54:                                               ; preds = %48
  tail call void @Perl_sv_free2(ptr noundef nonnull %46, i32 noundef %50) #29
  br label %55

55:                                               ; preds = %44, %52, %54
  store ptr null, ptr %45, align 8, !tbaa !65
  br label %233

56:                                               ; preds = %1, %1, %1, %1, %1
  %57 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 5
  %58 = load i8, ptr %57, align 2, !tbaa !35
  %59 = and i8 %58, -60
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %61, label %233

61:                                               ; preds = %56, %1, %1
  %62 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 6
  %63 = load i8, ptr %62, align 1, !tbaa !33
  %64 = and i8 %63, 3
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %78, label %66

66:                                               ; preds = %61
  %67 = getelementptr inbounds %struct.svop, ptr %0, i64 0, i32 7
  %68 = load ptr, ptr %67, align 8, !tbaa !65
  %69 = icmp eq ptr %68, null
  br i1 %69, label %77, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds %struct.sv, ptr %68, i64 0, i32 1
  %72 = load i32, ptr %71, align 8, !tbaa !42
  %73 = icmp ugt i32 %72, 1
  br i1 %73, label %74, label %76

74:                                               ; preds = %70
  %75 = add i32 %72, -1
  store i32 %75, ptr %71, align 8, !tbaa !42
  br label %77

76:                                               ; preds = %70
  tail call void @Perl_sv_free2(ptr noundef nonnull %68, i32 noundef %72) #29
  br label %77

77:                                               ; preds = %66, %74, %76
  store ptr null, ptr %67, align 8, !tbaa !65
  br label %233

78:                                               ; preds = %61
  %79 = getelementptr inbounds %struct.pvop, ptr %0, i64 0, i32 7
  %80 = load ptr, ptr %79, align 8, !tbaa !67
  tail call void @free(ptr noundef %80) #29
  store ptr null, ptr %79, align 8, !tbaa !67
  br label %233

81:                                               ; preds = %1
  %82 = getelementptr inbounds %struct.pmop, ptr %0, i64 0, i32 11
  %83 = load ptr, ptr %82, align 8, !tbaa !13
  tail call void @Perl_op_free(ptr noundef %83)
  br label %95

84:                                               ; preds = %1
  %85 = getelementptr inbounds %struct.pmop, ptr %0, i64 0, i32 11
  %86 = load ptr, ptr %85, align 8, !tbaa !13
  %87 = icmp eq ptr %86, null
  br i1 %87, label %95, label %88

88:                                               ; preds = %84
  %89 = getelementptr inbounds %struct.sv, ptr %86, i64 0, i32 1
  %90 = load i32, ptr %89, align 8, !tbaa !42
  %91 = icmp ugt i32 %90, 1
  br i1 %91, label %92, label %94

92:                                               ; preds = %88
  %93 = add i32 %90, -1
  store i32 %93, ptr %89, align 8, !tbaa !42
  br label %95

94:                                               ; preds = %88
  tail call void @Perl_sv_free2(ptr noundef nonnull %86, i32 noundef %90) #29
  br label %95

95:                                               ; preds = %94, %92, %84, %1, %1, %81
  %96 = getelementptr inbounds %struct.pmop, ptr %0, i64 0, i32 10
  %97 = load i32, ptr %96, align 8, !tbaa !54
  %98 = and i32 %97, 536870912
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %104

100:                                              ; preds = %95
  %101 = getelementptr inbounds %struct.pmop, ptr %0, i64 0, i32 13
  %102 = load ptr, ptr %101, align 8, !tbaa !69
  tail call void @Perl_op_free(ptr noundef %102)
  %103 = load i32, ptr %96, align 8, !tbaa !54
  br label %104

104:                                              ; preds = %100, %95
  %105 = phi i32 [ %103, %100 ], [ %97, %95 ]
  %106 = getelementptr inbounds %struct.pmop, ptr %0, i64 0, i32 13
  store ptr null, ptr %106, align 8, !tbaa !69
  %107 = and i32 %105, 1048576
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %147, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %struct.pmop, ptr %0, i64 0, i32 12
  %111 = load ptr, ptr %110, align 8, !tbaa !13
  %112 = icmp eq ptr %111, null
  br i1 %112, label %147, label %113

113:                                              ; preds = %109
  %114 = getelementptr inbounds %struct.hv, ptr %111, i64 0, i32 2
  %115 = load i32, ptr %114, align 4, !tbaa !56
  %116 = and i32 %115, 14680064
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %147, label %118

118:                                              ; preds = %113
  %119 = tail call ptr @Perl_mg_find(ptr noundef nonnull %111, i32 noundef 58) #29
  %120 = icmp eq ptr %119, null
  br i1 %120, label %147, label %121

121:                                              ; preds = %118
  %122 = getelementptr inbounds %struct.magic, ptr %119, i64 0, i32 7
  %123 = load ptr, ptr %122, align 8, !tbaa !58
  %124 = getelementptr inbounds %struct.magic, ptr %119, i64 0, i32 5
  %125 = load i64, ptr %124, align 8, !tbaa !60
  %126 = lshr i64 %125, 3
  %127 = trunc i64 %126 to i32
  %128 = and i64 %126, 4294967295
  br label %129

129:                                              ; preds = %132, %121
  %130 = phi i64 [ %133, %132 ], [ %128, %121 ]
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %147, label %132

132:                                              ; preds = %129
  %133 = add nsw i64 %130, -1
  %134 = getelementptr inbounds ptr, ptr %123, i64 %133
  %135 = load ptr, ptr %134, align 8, !tbaa !6
  %136 = icmp eq ptr %135, %0
  br i1 %136, label %137, label %129, !llvm.loop !61

137:                                              ; preds = %132
  %138 = getelementptr inbounds ptr, ptr %123, i64 %133
  %139 = add i32 %127, -1
  %140 = zext i32 %139 to i64
  %141 = getelementptr inbounds ptr, ptr %123, i64 %140
  %142 = load ptr, ptr %141, align 8, !tbaa !6
  store ptr %142, ptr %138, align 8, !tbaa !6
  %143 = shl nuw nsw i64 %140, 3
  store i64 %143, ptr %124, align 8, !tbaa !60
  %144 = icmp eq i32 %139, 0
  br i1 %144, label %145, label %147

145:                                              ; preds = %137
  %146 = load ptr, ptr %122, align 8, !tbaa !58
  tail call void @Perl_safesysfree(ptr noundef %146) #29
  store ptr null, ptr %122, align 8, !tbaa !58
  br label %147

147:                                              ; preds = %129, %145, %137, %118, %113, %109, %104
  %148 = load ptr, ptr @PL_curpm, align 8, !tbaa !6
  %149 = icmp eq ptr %148, %0
  br i1 %149, label %150, label %151

150:                                              ; preds = %147
  store ptr null, ptr @PL_curpm, align 8, !tbaa !6
  br label %151

151:                                              ; preds = %147, %150
  %152 = getelementptr inbounds %struct.pmop, ptr %0, i64 0, i32 11
  store ptr null, ptr %152, align 8, !tbaa !13
  %153 = getelementptr inbounds %struct.pmop, ptr %0, i64 0, i32 9
  %154 = load ptr, ptr %153, align 8, !tbaa !70
  %155 = icmp eq ptr %154, null
  br i1 %155, label %163, label %156

156:                                              ; preds = %151
  %157 = getelementptr inbounds %struct.sv, ptr %154, i64 0, i32 1
  %158 = load i32, ptr %157, align 8, !tbaa !42
  %159 = icmp ugt i32 %158, 1
  br i1 %159, label %160, label %162

160:                                              ; preds = %156
  %161 = add i32 %158, -1
  store i32 %161, ptr %157, align 8, !tbaa !42
  br label %163

162:                                              ; preds = %156
  tail call void @Perl_sv_free2(ptr noundef nonnull %154, i32 noundef %158) #29
  br label %163

163:                                              ; preds = %151, %160, %162
  store ptr null, ptr %153, align 8, !tbaa !70
  br label %233

164:                                              ; preds = %1
  %165 = getelementptr inbounds %struct.unop_aux, ptr %0, i64 0, i32 8
  %166 = load ptr, ptr %165, align 8, !tbaa !71
  %167 = load i64, ptr %166, align 8, !tbaa !13
  br label %168

168:                                              ; preds = %221, %164
  %169 = phi i8 [ 0, %164 ], [ %226, %221 ]
  %170 = phi i64 [ %167, %164 ], [ %227, %221 ]
  %171 = phi ptr [ %166, %164 ], [ %222, %221 ]
  br label %172

172:                                              ; preds = %168, %176
  %173 = phi i64 [ %178, %176 ], [ %170, %168 ]
  %174 = phi ptr [ %177, %176 ], [ %171, %168 ]
  %175 = and i64 %173, 15
  switch i64 %175, label %230 [
    i64 0, label %176
    i64 12, label %180
    i64 5, label %179
    i64 13, label %185
    i64 6, label %184
    i64 9, label %189
    i64 2, label %188
    i64 10, label %193
    i64 3, label %192
    i64 8, label %198
    i64 11, label %198
    i64 1, label %197
    i64 4, label %197
  ]

176:                                              ; preds = %172
  %177 = getelementptr inbounds %union.UNOP_AUX_item, ptr %174, i64 1
  %178 = load i64, ptr %177, align 8, !tbaa !13
  br label %172

179:                                              ; preds = %172
  br label %180

180:                                              ; preds = %172, %179
  %181 = phi i1 [ false, %179 ], [ true, %172 ]
  %182 = getelementptr inbounds %union.UNOP_AUX_item, ptr %174, i64 1
  %183 = load i64, ptr %182, align 8, !tbaa !13
  tail call void @Perl_pad_free(i64 noundef %183) #29
  br label %198

184:                                              ; preds = %172
  br label %185

185:                                              ; preds = %172, %184
  %186 = phi i1 [ false, %184 ], [ true, %172 ]
  %187 = getelementptr inbounds %union.UNOP_AUX_item, ptr %174, i64 1
  tail call void @S_op_clear_gv(ptr noundef %0, ptr noundef nonnull %187)
  br label %198

188:                                              ; preds = %172
  br label %189

189:                                              ; preds = %172, %188
  %190 = phi i1 [ false, %188 ], [ true, %172 ]
  %191 = getelementptr inbounds %union.UNOP_AUX_item, ptr %174, i64 1
  tail call void @S_op_clear_gv(ptr noundef %0, ptr noundef nonnull %191)
  br label %198

192:                                              ; preds = %172
  br label %193

193:                                              ; preds = %172, %192
  %194 = phi i1 [ false, %192 ], [ true, %172 ]
  %195 = getelementptr inbounds %union.UNOP_AUX_item, ptr %174, i64 1
  %196 = load i64, ptr %195, align 8, !tbaa !13
  tail call void @Perl_pad_free(i64 noundef %196) #29
  br label %198

197:                                              ; preds = %172, %172
  br label %198

198:                                              ; preds = %172, %172, %197, %193, %189, %185, %180
  %199 = phi ptr [ %195, %193 ], [ %191, %189 ], [ %187, %185 ], [ %182, %180 ], [ %174, %197 ], [ %174, %172 ], [ %174, %172 ]
  %200 = phi i1 [ %194, %193 ], [ %190, %189 ], [ %186, %185 ], [ %181, %180 ], [ false, %197 ], [ true, %172 ], [ true, %172 ]
  %201 = lshr i64 %173, 4
  %202 = and i64 %201, 3
  switch i64 %202, label %220 [
    i64 0, label %221
    i64 1, label %203
    i64 2, label %215
    i64 3, label %218
  ]

203:                                              ; preds = %198
  %204 = getelementptr inbounds %union.UNOP_AUX_item, ptr %199, i64 1
  br i1 %200, label %205, label %221

205:                                              ; preds = %203
  %206 = load ptr, ptr %204, align 8, !tbaa !13
  %207 = icmp eq ptr %206, null
  br i1 %207, label %221, label %208

208:                                              ; preds = %205
  %209 = getelementptr inbounds %struct.sv, ptr %206, i64 0, i32 1
  %210 = load i32, ptr %209, align 8, !tbaa !42
  %211 = icmp ugt i32 %210, 1
  br i1 %211, label %212, label %214

212:                                              ; preds = %208
  %213 = add i32 %210, -1
  store i32 %213, ptr %209, align 8, !tbaa !42
  br label %221

214:                                              ; preds = %208
  tail call void @Perl_sv_free2(ptr noundef nonnull %206, i32 noundef %210) #29
  br label %221

215:                                              ; preds = %198
  %216 = getelementptr inbounds %union.UNOP_AUX_item, ptr %199, i64 1
  %217 = load i64, ptr %216, align 8, !tbaa !13
  tail call void @Perl_pad_free(i64 noundef %217) #29
  br label %221

218:                                              ; preds = %198
  %219 = getelementptr inbounds %union.UNOP_AUX_item, ptr %199, i64 1
  tail call void @S_op_clear_gv(ptr noundef %0, ptr noundef nonnull %219)
  br label %221

220:                                              ; preds = %198
  unreachable

221:                                              ; preds = %203, %215, %218, %198, %205, %212, %214
  %222 = phi ptr [ %219, %218 ], [ %216, %215 ], [ %199, %198 ], [ %204, %205 ], [ %204, %212 ], [ %204, %214 ], [ %204, %203 ]
  %223 = phi i8 [ %169, %218 ], [ %169, %215 ], [ 1, %198 ], [ %169, %205 ], [ %169, %212 ], [ %169, %214 ], [ %169, %203 ]
  %224 = and i64 %173, 64
  %225 = icmp eq i64 %224, 0
  %226 = select i1 %225, i8 %223, i8 1
  %227 = lshr i64 %173, 7
  %228 = and i8 %226, 1
  %229 = icmp eq i8 %228, 0
  br i1 %229, label %168, label %230, !llvm.loop !73

230:                                              ; preds = %221, %172
  %231 = load ptr, ptr %165, align 8, !tbaa !71
  %232 = getelementptr inbounds %union.UNOP_AUX_item, ptr %231, i64 -1
  tail call void @free(ptr noundef nonnull %232) #29
  br label %233

233:                                              ; preds = %77, %78, %56, %8, %13, %230, %163, %55, %43, %18, %6
  %234 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 3
  %235 = load i64, ptr %234, align 8, !tbaa !34
  %236 = icmp eq i64 %235, 0
  br i1 %236, label %238, label %237

237:                                              ; preds = %233
  tail call void @Perl_pad_free(i64 noundef %235) #29
  store i64 0, ptr %234, align 8, !tbaa !34
  br label %238

238:                                              ; preds = %237, %233
  ret void
}

declare void @Perl_safesysfree(ptr noundef) local_unnamed_addr #6

declare ptr @Perl_mg_find(ptr noundef, i32 noundef) local_unnamed_addr #6

declare void @Perl_refcounted_he_free(ptr noundef) local_unnamed_addr #6

declare void @Perl_sv_free2(ptr noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @S_op_clear_gv(ptr nocapture noundef readonly %0, ptr nocapture noundef %1) local_unnamed_addr #4 {
  %3 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 4
  %4 = load i16, ptr %3, align 8
  %5 = and i16 %4, 511
  switch i16 %5, label %16 [
    i16 7, label %6
    i16 6, label %6
    i16 153, label %6
  ]

6:                                                ; preds = %2, %2, %2
  %7 = load ptr, ptr %1, align 8, !tbaa !6
  %8 = icmp eq ptr %7, null
  br i1 %8, label %9, label %10

9:                                                ; preds = %6
  store ptr null, ptr %1, align 8, !tbaa !6
  br label %43

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.gv, ptr %7, i64 0, i32 1
  %12 = load i32, ptr %11, align 8, !tbaa !74
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = add i32 %12, 1
  store i32 %15, ptr %11, align 8, !tbaa !74
  br label %19

16:                                               ; preds = %2
  %17 = load ptr, ptr %1, align 8, !tbaa !6
  %18 = icmp eq ptr %17, null
  br i1 %18, label %33, label %23

19:                                               ; preds = %14, %10
  %20 = getelementptr inbounds %struct.sv, ptr %7, i64 0, i32 1
  %21 = load i32, ptr %20, align 8, !tbaa !42
  %22 = icmp ugt i32 %21, 1
  br i1 %22, label %30, label %32

23:                                               ; preds = %16
  %24 = getelementptr inbounds %struct.sv, ptr %17, i64 0, i32 1
  %25 = load i32, ptr %24, align 8, !tbaa !42
  %26 = icmp ugt i32 %25, 1
  br i1 %26, label %28, label %27

27:                                               ; preds = %23
  tail call void @Perl_sv_free2(ptr noundef nonnull %17, i32 noundef %25) #29
  store ptr null, ptr %1, align 8, !tbaa !6
  br label %43

28:                                               ; preds = %23
  %29 = add i32 %25, -1
  store i32 %29, ptr %24, align 8, !tbaa !42
  store ptr null, ptr %1, align 8, !tbaa !6
  br label %43

30:                                               ; preds = %19
  %31 = add i32 %21, -1
  store i32 %31, ptr %20, align 8, !tbaa !42
  store ptr null, ptr %1, align 8, !tbaa !6
  br i1 %13, label %43, label %34

32:                                               ; preds = %19
  tail call void @Perl_sv_free2(ptr noundef nonnull %7, i32 noundef %21) #29
  store ptr null, ptr %1, align 8, !tbaa !6
  br i1 %13, label %43, label %34

33:                                               ; preds = %16
  store ptr null, ptr %1, align 8, !tbaa !6
  br label %43

34:                                               ; preds = %32, %30
  %35 = getelementptr inbounds %struct.gv, ptr %7, i64 0, i32 1
  %36 = load i32, ptr %35, align 8, !tbaa !52
  %37 = icmp ugt i32 %36, 1
  br i1 %37, label %39, label %38

38:                                               ; preds = %34
  tail call void @Perl_sv_free2(ptr noundef nonnull %7, i32 noundef %36) #29
  br label %43

39:                                               ; preds = %34
  %40 = icmp eq i32 %36, 2
  %41 = add i32 %36, -1
  store i32 %41, ptr %35, align 8, !tbaa !42
  br i1 %40, label %42, label %43

42:                                               ; preds = %39
  tail call void @Perl_gv_try_downgrade(ptr noundef nonnull %7) #29
  br label %43

43:                                               ; preds = %38, %33, %27, %28, %32, %30, %9, %39, %42
  ret void
}

declare void @Perl_gv_try_downgrade(ptr noundef) local_unnamed_addr #6

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_ck_ftst(ptr noundef %0) #4 {
  %2 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 4
  %3 = load i16, ptr %2, align 8
  %4 = and i16 %3, 511
  %5 = zext i16 %4 to i32
  %6 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 5
  %7 = load i8, ptr %6, align 2, !tbaa !35
  %8 = zext i8 %7 to i32
  %9 = and i32 %8, 16
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %81

11:                                               ; preds = %1
  %12 = and i32 %8, 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %70, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds %struct.unop, ptr %0, i64 0, i32 7
  %16 = load ptr, ptr %15, align 8, !tbaa !36
  %17 = getelementptr inbounds %struct.op, ptr %16, i64 0, i32 4
  %18 = load i16, ptr %17, align 8
  %19 = and i16 %18, 511
  switch i16 %19, label %28 [
    i16 1, label %70
    i16 5, label %20
  ]

20:                                               ; preds = %14
  %21 = getelementptr inbounds %struct.svop, ptr %16, i64 0, i32 6
  %22 = load i8, ptr %21, align 1, !tbaa !76
  %23 = and i8 %22, 64
  %24 = icmp ne i8 %23, 0
  %25 = and i16 %18, 8192
  %26 = icmp eq i16 %25, 0
  %27 = and i1 %26, %24
  br i1 %27, label %62, label %28

28:                                               ; preds = %14, %20
  %29 = load i32, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 10), align 8, !tbaa !77
  %30 = and i32 %29, 4194304
  %31 = icmp ne i32 %30, 0
  %32 = add nsw i16 %4, -266
  %33 = icmp ult i16 %32, 6
  %34 = select i1 %31, i1 %33, i1 false
  br i1 %34, label %35, label %39

35:                                               ; preds = %28
  %36 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 6
  %37 = load i8, ptr %36, align 1, !tbaa !33
  %38 = or i8 %37, 2
  store i8 %38, ptr %36, align 1, !tbaa !33
  br label %41

39:                                               ; preds = %28
  %40 = icmp ult i16 %32, -2
  br i1 %40, label %41, label %81

41:                                               ; preds = %35, %39
  %42 = zext i16 %19 to i64
  %43 = getelementptr inbounds [0 x ptr], ptr @PL_check, i64 0, i64 %42
  %44 = load ptr, ptr %43, align 8, !tbaa !6
  %45 = icmp eq ptr %44, @Perl_ck_ftst
  %46 = add nsw i16 %19, -266
  %47 = icmp ult i16 %46, -2
  %48 = and i1 %47, %45
  br i1 %48, label %49, label %81

49:                                               ; preds = %41
  %50 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 6
  %51 = load i8, ptr %50, align 1, !tbaa !33
  %52 = or i8 %51, 4
  store i8 %52, ptr %50, align 1, !tbaa !33
  %53 = getelementptr inbounds %struct.svop, ptr %16, i64 0, i32 6
  %54 = load i8, ptr %53, align 1, !tbaa !76
  %55 = or i8 %54, 8
  store i8 %55, ptr %53, align 1, !tbaa !76
  %56 = icmp ne i16 %19, 290
  %57 = and i8 %54, 20
  %58 = icmp eq i8 %57, 4
  %59 = select i1 %56, i1 true, i1 %58
  br i1 %59, label %81, label %60

60:                                               ; preds = %49
  %61 = or i8 %51, 20
  store i8 %61, ptr %50, align 1, !tbaa !33
  br label %81

62:                                               ; preds = %20
  %63 = getelementptr inbounds %struct.svop, ptr %16, i64 0, i32 7
  %64 = load ptr, ptr %63, align 8, !tbaa !65
  %65 = tail call ptr @Perl_gv_fetchsv(ptr noundef %64, i32 noundef 1, i32 noundef 15) #29
  %66 = getelementptr inbounds %struct.gv, ptr %65, i64 0, i32 1
  %67 = load i32, ptr %66, align 8, !tbaa !74
  %68 = add i32 %67, 1
  store i32 %68, ptr %66, align 8, !tbaa !74
  %69 = tail call ptr @Perl_newSVOP(i32 noundef %5, i32 noundef 16, ptr noundef %65)
  tail call void @Perl_op_free(ptr noundef nonnull %0)
  br label %81

70:                                               ; preds = %14, %11
  tail call void @Perl_op_free(ptr noundef nonnull %0)
  %71 = icmp eq i16 %4, 290
  br i1 %71, label %72, label %78

72:                                               ; preds = %70
  %73 = load ptr, ptr @PL_stdingv, align 8, !tbaa !6
  %74 = getelementptr inbounds %struct.gv, ptr %73, i64 0, i32 1
  %75 = load i32, ptr %74, align 8, !tbaa !74
  %76 = add i32 %75, 1
  store i32 %76, ptr %74, align 8, !tbaa !74
  %77 = tail call ptr @Perl_newSVOP(i32 noundef 290, i32 noundef 16, ptr noundef %73)
  br label %81

78:                                               ; preds = %70
  %79 = tail call ptr @Perl_newDEFSVOP()
  %80 = tail call ptr @Perl_newUNOP(i32 noundef %5, i32 noundef 0, ptr noundef %79)
  br label %81

81:                                               ; preds = %39, %41, %60, %49, %1, %72, %78, %62
  %82 = phi ptr [ %69, %62 ], [ %0, %1 ], [ %77, %72 ], [ %80, %78 ], [ %0, %49 ], [ %0, %60 ], [ %0, %41 ], [ %0, %39 ]
  ret ptr %82
}

declare void @Perl_pad_free(i64 noundef) local_unnamed_addr #6

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_op_null(ptr noundef %0) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 4
  %3 = load i16, ptr %2, align 8
  %4 = and i16 %3, 511
  %5 = icmp eq i16 %4, 0
  br i1 %5, label %14, label %6

6:                                                ; preds = %1
  tail call void @Perl_op_clear(ptr noundef nonnull %0)
  %7 = load i16, ptr %2, align 8
  %8 = and i16 %7, 511
  %9 = zext i16 %8 to i64
  %10 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 3
  store i64 %9, ptr %10, align 8, !tbaa !34
  %11 = and i16 %7, -512
  store i16 %11, ptr %2, align 8
  %12 = load ptr, ptr @PL_ppaddr, align 8, !tbaa !6
  %13 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 2
  store ptr %12, ptr %13, align 8, !tbaa !78
  br label %14

14:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(none) uwtable
define dso_local void @Perl_op_refcnt_lock() local_unnamed_addr #8 {
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(none) uwtable
define dso_local void @Perl_op_refcnt_unlock() local_unnamed_addr #8 {
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_op_sibling_splice(ptr noundef %0, ptr noundef %1, i32 noundef %2, ptr noundef %3) local_unnamed_addr #4 {
  %5 = icmp eq ptr %1, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.op, ptr %1, i64 0, i32 1
  br label %12

8:                                                ; preds = %4
  %9 = icmp eq ptr %0, null
  br i1 %9, label %115, label %10

10:                                               ; preds = %8
  %11 = getelementptr inbounds %struct.listop, ptr %0, i64 0, i32 7
  br label %12

12:                                               ; preds = %10, %6
  %13 = phi ptr [ %7, %6 ], [ %11, %10 ]
  %14 = load ptr, ptr %13, align 8, !tbaa !6
  %15 = icmp ne i32 %2, 0
  %16 = icmp ne ptr %14, null
  %17 = select i1 %15, i1 %16, i1 false
  br i1 %17, label %18, label %33

18:                                               ; preds = %12, %25
  %19 = phi ptr [ %24, %25 ], [ %14, %12 ]
  %20 = phi i32 [ %21, %25 ], [ %2, %12 ]
  %21 = add nsw i32 %20, -1
  %22 = icmp eq i32 %21, 0
  %23 = getelementptr inbounds %struct.op, ptr %19, i64 0, i32 1
  %24 = load ptr, ptr %23, align 8, !tbaa !38
  br i1 %22, label %27, label %25

25:                                               ; preds = %18
  %26 = icmp eq ptr %24, null
  br i1 %26, label %27, label %18, !llvm.loop !79

27:                                               ; preds = %25, %18
  %28 = phi ptr [ %24, %18 ], [ null, %25 ]
  %29 = getelementptr inbounds %struct.op, ptr %19, i64 0, i32 1
  %30 = getelementptr inbounds %struct.op, ptr %19, i64 0, i32 4
  %31 = load i16, ptr %30, align 8
  %32 = and i16 %31, -16385
  store i16 %32, ptr %30, align 8
  store ptr null, ptr %29, align 8, !tbaa !38
  br label %33

33:                                               ; preds = %12, %27
  %34 = phi ptr [ %28, %27 ], [ %14, %12 ]
  %35 = phi ptr [ %19, %27 ], [ null, %12 ]
  %36 = icmp eq ptr %3, null
  br i1 %36, label %50, label %37

37:                                               ; preds = %33, %37
  %38 = phi ptr [ %40, %37 ], [ %3, %33 ]
  %39 = getelementptr inbounds %struct.op, ptr %38, i64 0, i32 1
  %40 = load ptr, ptr %39, align 8, !tbaa !38
  %41 = icmp eq ptr %40, null
  br i1 %41, label %42, label %37, !llvm.loop !80

42:                                               ; preds = %37
  %43 = getelementptr inbounds %struct.op, ptr %38, i64 0, i32 1
  %44 = icmp eq ptr %34, null
  %45 = getelementptr inbounds %struct.op, ptr %38, i64 0, i32 4
  %46 = load i16, ptr %45, align 8
  %47 = select i1 %44, i16 0, i16 16384
  %48 = and i16 %46, -16385
  %49 = or i16 %48, %47
  store i16 %49, ptr %45, align 8
  store ptr %34, ptr %43, align 8, !tbaa !38
  br label %50

50:                                               ; preds = %33, %42
  %51 = phi ptr [ %3, %42 ], [ %34, %33 ]
  %52 = phi ptr [ %38, %42 ], [ null, %33 ]
  br i1 %5, label %61, label %53

53:                                               ; preds = %50
  %54 = icmp eq ptr %51, null
  %55 = getelementptr inbounds %struct.op, ptr %1, i64 0, i32 4
  %56 = load i16, ptr %55, align 8
  %57 = select i1 %54, i16 0, i16 16384
  %58 = and i16 %56, -16385
  %59 = or i16 %58, %57
  store i16 %59, ptr %55, align 8
  %60 = getelementptr inbounds %struct.op, ptr %1, i64 0, i32 1
  store ptr %51, ptr %60, align 8, !tbaa !38
  br label %72

61:                                               ; preds = %50
  %62 = icmp eq ptr %0, null
  br i1 %62, label %115, label %63

63:                                               ; preds = %61
  %64 = getelementptr inbounds %struct.listop, ptr %0, i64 0, i32 7
  store ptr %51, ptr %64, align 8, !tbaa !81
  %65 = icmp eq ptr %51, null
  %66 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 5
  %67 = load i8, ptr %66, align 2, !tbaa !35
  br i1 %65, label %70, label %68

68:                                               ; preds = %63
  %69 = or i8 %67, 4
  store i8 %69, ptr %66, align 2, !tbaa !35
  br label %72

70:                                               ; preds = %63
  %71 = and i8 %67, -5
  store i8 %71, ptr %66, align 2, !tbaa !35
  br label %72

72:                                               ; preds = %68, %70, %53
  %73 = icmp eq ptr %34, null
  br i1 %73, label %74, label %112

74:                                               ; preds = %72
  %75 = icmp eq ptr %0, null
  br i1 %75, label %115, label %76

76:                                               ; preds = %74
  %77 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 4
  %78 = load i16, ptr %77, align 8
  %79 = and i16 %78, 511
  %80 = icmp eq i16 %79, 380
  br i1 %80, label %81, label %85

81:                                               ; preds = %76
  %82 = tail call ptr @Perl_custom_op_get_field(ptr noundef nonnull %0, i32 noundef 4)
  %83 = ptrtoint ptr %82 to i64
  %84 = trunc i64 %83 to i32
  br label %97

85:                                               ; preds = %76
  %86 = zext i16 %79 to i64
  %87 = icmp eq i16 %79, 0
  br i1 %87, label %88, label %91

88:                                               ; preds = %85
  %89 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 3
  %90 = load i64, ptr %89, align 8, !tbaa !34
  br label %91

91:                                               ; preds = %88, %85
  %92 = phi i64 [ %90, %88 ], [ %86, %85 ]
  %93 = and i64 %92, 4294967295
  %94 = getelementptr inbounds [0 x i32], ptr @PL_opargs, i64 0, i64 %93
  %95 = load i32, ptr %94, align 4, !tbaa !52
  %96 = and i32 %95, 3840
  br label %97

97:                                               ; preds = %91, %81
  %98 = phi i32 [ %84, %81 ], [ %96, %91 ]
  %99 = icmp eq ptr %52, null
  %100 = select i1 %99, ptr %1, ptr %52
  %101 = add i32 %98, -512
  %102 = tail call i32 @llvm.fshl.i32(i32 %98, i32 %101, i32 24)
  switch i32 %102, label %105 [
    i32 7, label %103
    i32 3, label %103
    i32 2, label %103
    i32 0, label %103
  ]

103:                                              ; preds = %97, %97, %97, %97
  %104 = getelementptr inbounds %struct.listop, ptr %0, i64 0, i32 8
  store ptr %100, ptr %104, align 8, !tbaa !83
  br label %105

105:                                              ; preds = %97, %103
  %106 = icmp eq ptr %100, null
  br i1 %106, label %112, label %107

107:                                              ; preds = %105
  %108 = getelementptr inbounds %struct.op, ptr %100, i64 0, i32 4
  %109 = load i16, ptr %108, align 8
  %110 = and i16 %109, -16385
  store i16 %110, ptr %108, align 8
  %111 = getelementptr inbounds %struct.op, ptr %100, i64 0, i32 1
  store ptr null, ptr %111, align 8, !tbaa !38
  br label %112

112:                                              ; preds = %105, %107, %72
  %113 = icmp eq ptr %35, null
  %114 = select i1 %113, ptr null, ptr %14
  br label %116

115:                                              ; preds = %74, %61, %8
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.8) #29
  br label %116

116:                                              ; preds = %115, %112
  %117 = phi ptr [ %114, %112 ], [ null, %115 ]
  ret ptr %117
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_custom_op_get_field(ptr nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #4 {
  %3 = alloca i64, align 8
  %4 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 2
  %5 = load ptr, ptr %4, align 8, !tbaa !78
  %6 = ptrtoint ptr %5 to i64
  %7 = tail call ptr @Perl_newSViv(i64 noundef %6) #29
  %8 = tail call ptr @Perl_sv_2mortal(ptr noundef %7) #29
  %9 = load ptr, ptr @PL_custom_ops, align 8, !tbaa !6
  %10 = icmp eq ptr %9, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %2
  %12 = tail call ptr @Perl_hv_common(ptr noundef nonnull %9, ptr noundef %8, ptr noundef null, i64 noundef 0, i32 noundef 0, i32 noundef 0, ptr noundef null, i32 noundef 0) #29
  br label %13

13:                                               ; preds = %11, %2
  %14 = phi ptr [ %12, %11 ], [ null, %2 ]
  %15 = icmp eq ptr %14, null
  %16 = load ptr, ptr @PL_custom_op_names, align 8
  %17 = icmp ne ptr %16, null
  %18 = select i1 %15, i1 %17, i1 false
  br i1 %18, label %19, label %94

19:                                               ; preds = %13
  %20 = tail call ptr @Perl_hv_common(ptr noundef nonnull %16, ptr noundef %8, ptr noundef null, i64 noundef 0, i32 noundef 0, i32 noundef 0, ptr noundef null, i32 noundef 0) #29
  %21 = icmp eq ptr %20, null
  br i1 %21, label %111, label %22

22:                                               ; preds = %19
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #29
  %23 = tail call ptr @Perl_safesyscalloc(i64 noundef 1, i64 noundef 40) #29
  %24 = getelementptr inbounds %struct.he, ptr %20, i64 0, i32 2
  %25 = load ptr, ptr %24, align 8, !tbaa !13
  %26 = getelementptr inbounds %struct.sv, ptr %25, i64 0, i32 2
  %27 = load i32, ptr %26, align 4, !tbaa !84
  %28 = and i32 %27, 2098176
  %29 = icmp eq i32 %28, 1024
  br i1 %29, label %30, label %36

30:                                               ; preds = %22
  %31 = load ptr, ptr %25, align 8, !tbaa !85
  %32 = getelementptr inbounds %struct.xpv, ptr %31, i64 0, i32 2
  %33 = load i64, ptr %32, align 8, !tbaa !86
  store i64 %33, ptr %3, align 8, !tbaa !88
  %34 = getelementptr inbounds %struct.sv, ptr %25, i64 0, i32 3
  %35 = load ptr, ptr %34, align 8, !tbaa !13
  br label %39

36:                                               ; preds = %22
  %37 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %25, ptr noundef nonnull %3, i32 noundef 2) #29
  %38 = load i64, ptr %3, align 8, !tbaa !88
  br label %39

39:                                               ; preds = %36, %30
  %40 = phi i64 [ %33, %30 ], [ %38, %36 ]
  %41 = phi ptr [ %35, %30 ], [ %37, %36 ]
  %42 = trunc i64 %40 to i32
  %43 = call ptr @Perl_savepvn(ptr noundef %41, i32 noundef %42) #29
  %44 = getelementptr inbounds %struct.custom_op, ptr %23, i64 0, i32 1
  store ptr %43, ptr %44, align 8, !tbaa !89
  %45 = load i32, ptr %23, align 8, !tbaa !91
  %46 = or i32 %45, 1
  store i32 %46, ptr %23, align 8, !tbaa !91
  %47 = load ptr, ptr @PL_custom_op_descs, align 8, !tbaa !6
  %48 = icmp eq ptr %47, null
  br i1 %48, label %76, label %49

49:                                               ; preds = %39
  %50 = call ptr @Perl_hv_common(ptr noundef nonnull %47, ptr noundef %8, ptr noundef null, i64 noundef 0, i32 noundef 0, i32 noundef 0, ptr noundef null, i32 noundef 0) #29
  %51 = icmp eq ptr %50, null
  br i1 %51, label %76, label %52

52:                                               ; preds = %49
  %53 = getelementptr inbounds %struct.he, ptr %50, i64 0, i32 2
  %54 = load ptr, ptr %53, align 8, !tbaa !13
  %55 = getelementptr inbounds %struct.sv, ptr %54, i64 0, i32 2
  %56 = load i32, ptr %55, align 4, !tbaa !84
  %57 = and i32 %56, 2098176
  %58 = icmp eq i32 %57, 1024
  br i1 %58, label %59, label %65

59:                                               ; preds = %52
  %60 = load ptr, ptr %54, align 8, !tbaa !85
  %61 = getelementptr inbounds %struct.xpv, ptr %60, i64 0, i32 2
  %62 = load i64, ptr %61, align 8, !tbaa !86
  store i64 %62, ptr %3, align 8, !tbaa !88
  %63 = getelementptr inbounds %struct.sv, ptr %54, i64 0, i32 3
  %64 = load ptr, ptr %63, align 8, !tbaa !13
  br label %68

65:                                               ; preds = %52
  %66 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %54, ptr noundef nonnull %3, i32 noundef 2) #29
  %67 = load i64, ptr %3, align 8, !tbaa !88
  br label %68

68:                                               ; preds = %65, %59
  %69 = phi i64 [ %62, %59 ], [ %67, %65 ]
  %70 = phi ptr [ %64, %59 ], [ %66, %65 ]
  %71 = trunc i64 %69 to i32
  %72 = call ptr @Perl_savepvn(ptr noundef %70, i32 noundef %71) #29
  %73 = getelementptr inbounds %struct.custom_op, ptr %23, i64 0, i32 2
  store ptr %72, ptr %73, align 8, !tbaa !92
  %74 = load i32, ptr %23, align 8, !tbaa !91
  %75 = or i32 %74, 2
  store i32 %75, ptr %23, align 8, !tbaa !91
  br label %76

76:                                               ; preds = %68, %49, %39
  %77 = load ptr, ptr %4, align 8, !tbaa !78
  %78 = ptrtoint ptr %77 to i64
  %79 = call ptr @Perl_newSViv(i64 noundef %78) #29
  %80 = call ptr @Perl_sv_2mortal(ptr noundef %79) #29
  %81 = load ptr, ptr @PL_custom_ops, align 8, !tbaa !6
  %82 = icmp eq ptr %81, null
  br i1 %82, label %83, label %85

83:                                               ; preds = %76
  %84 = call ptr @Perl_newSV_type(i32 noundef 12) #29
  store ptr %84, ptr @PL_custom_ops, align 8, !tbaa !6
  br label %85

85:                                               ; preds = %83, %76
  %86 = phi ptr [ %84, %83 ], [ %81, %76 ]
  %87 = ptrtoint ptr %23 to i64
  %88 = call ptr @Perl_newSViv(i64 noundef %87) #29
  %89 = call ptr @Perl_hv_common(ptr noundef %86, ptr noundef %80, ptr noundef null, i64 noundef 0, i32 noundef 0, i32 noundef 4, ptr noundef %88, i32 noundef 0) #29
  %90 = icmp eq ptr %89, null
  br i1 %90, label %91, label %93

91:                                               ; preds = %85
  %92 = load ptr, ptr %44, align 8, !tbaa !89
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.200, ptr noundef %92) #29
  br label %93

93:                                               ; preds = %85, %91
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #29
  br label %111

94:                                               ; preds = %13
  br i1 %15, label %111, label %95

95:                                               ; preds = %94
  %96 = getelementptr inbounds %struct.he, ptr %14, i64 0, i32 2
  %97 = load ptr, ptr %96, align 8, !tbaa !13
  %98 = getelementptr inbounds %struct.sv, ptr %97, i64 0, i32 2
  %99 = load i32, ptr %98, align 4, !tbaa !84
  %100 = and i32 %99, 2097408
  %101 = icmp eq i32 %100, 256
  br i1 %101, label %102, label %106

102:                                              ; preds = %95
  %103 = load ptr, ptr %97, align 8, !tbaa !85
  %104 = getelementptr inbounds %struct.xpviv, ptr %103, i64 0, i32 4
  %105 = load i64, ptr %104, align 8, !tbaa !13
  br label %108

106:                                              ; preds = %95
  %107 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %97, i32 noundef 2) #29
  br label %108

108:                                              ; preds = %106, %102
  %109 = phi i64 [ %105, %102 ], [ %107, %106 ]
  %110 = inttoptr i64 %109 to ptr
  br label %111

111:                                              ; preds = %19, %94, %108, %93
  %112 = phi ptr [ %23, %93 ], [ %110, %108 ], [ @Perl_custom_op_get_field.xop_null, %94 ], [ @Perl_custom_op_get_field.xop_null, %19 ]
  %113 = icmp eq i32 %1, 0
  br i1 %113, label %138, label %114

114:                                              ; preds = %111
  %115 = load i32, ptr %112, align 8, !tbaa !91
  %116 = and i32 %115, %1
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %133, label %118

118:                                              ; preds = %114
  switch i32 %1, label %138 [
    i32 1, label %119
    i32 2, label %122
    i32 4, label %125
    i32 8, label %130
  ]

119:                                              ; preds = %118
  %120 = getelementptr inbounds %struct.custom_op, ptr %112, i64 0, i32 1
  %121 = load ptr, ptr %120, align 8, !tbaa !89
  br label %138

122:                                              ; preds = %118
  %123 = getelementptr inbounds %struct.custom_op, ptr %112, i64 0, i32 2
  %124 = load ptr, ptr %123, align 8, !tbaa !92
  br label %138

125:                                              ; preds = %118
  %126 = getelementptr inbounds %struct.custom_op, ptr %112, i64 0, i32 3
  %127 = load i32, ptr %126, align 8, !tbaa !93
  %128 = zext i32 %127 to i64
  %129 = inttoptr i64 %128 to ptr
  br label %138

130:                                              ; preds = %118
  %131 = getelementptr inbounds %struct.custom_op, ptr %112, i64 0, i32 4
  %132 = load ptr, ptr %131, align 8, !tbaa !94
  br label %138

133:                                              ; preds = %114
  switch i32 %1, label %138 [
    i32 1, label %134
    i32 2, label %136
  ]

134:                                              ; preds = %133
  %135 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_op_name, i64 0, i64 380), align 8, !tbaa !6
  br label %138

136:                                              ; preds = %133
  %137 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_op_desc, i64 0, i64 380), align 8, !tbaa !6
  br label %138

138:                                              ; preds = %118, %130, %125, %122, %119, %133, %136, %134, %111
  %139 = phi ptr [ %112, %111 ], [ undef, %118 ], [ %132, %130 ], [ %129, %125 ], [ %124, %122 ], [ %121, %119 ], [ %137, %136 ], [ %135, %134 ], [ null, %133 ]
  ret ptr %139
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @S_op_sibling_newUNOP(ptr noundef %0, ptr noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #4 {
  %5 = tail call ptr @Perl_op_sibling_splice(ptr noundef %0, ptr noundef %1, i32 noundef 1, ptr noundef null)
  %6 = tail call ptr @Perl_newUNOP(i32 noundef %2, i32 noundef %3, ptr noundef %5)
  %7 = tail call ptr @Perl_op_sibling_splice(ptr noundef %0, ptr noundef %1, i32 noundef 0, ptr noundef %6)
  ret ptr %6
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_newUNOP(i32 noundef %0, i32 noundef %1, ptr noundef %2) local_unnamed_addr #4 {
  %4 = icmp eq i32 %0, -342
  %5 = or i32 %1, 2048
  %6 = select i1 %4, i32 342, i32 %0
  %7 = select i1 %4, i32 %5, i32 %1
  %8 = icmp eq ptr %2, null
  br i1 %8, label %9, label %11

9:                                                ; preds = %3
  %10 = tail call ptr @Perl_newOP(i32 noundef 1, i32 noundef 0)
  br label %11

11:                                               ; preds = %9, %3
  %12 = phi ptr [ %2, %3 ], [ %10, %9 ]
  %13 = sext i32 %6 to i64
  %14 = getelementptr inbounds [0 x i32], ptr @PL_opargs, i64 0, i64 %13
  %15 = load i32, ptr %14, align 4, !tbaa !52
  %16 = and i32 %15, 1
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %11
  %19 = tail call fastcc ptr @S_force_list(ptr noundef %12, i1 noundef zeroext true)
  br label %20

20:                                               ; preds = %18, %11
  %21 = phi ptr [ %19, %18 ], [ %12, %11 ]
  %22 = tail call ptr @Perl_Slab_Alloc(i64 noundef 48)
  %23 = trunc i32 %6 to i16
  %24 = getelementptr inbounds %struct.unop, ptr %22, i64 0, i32 4
  %25 = load i16, ptr %24, align 8
  %26 = and i16 %23, 511
  %27 = and i16 %25, -512
  %28 = or i16 %27, %26
  store i16 %28, ptr %24, align 8
  %29 = getelementptr inbounds [0 x ptr], ptr @PL_ppaddr, i64 0, i64 %13
  %30 = load ptr, ptr %29, align 8, !tbaa !6
  %31 = getelementptr inbounds %struct.unop, ptr %22, i64 0, i32 2
  store ptr %30, ptr %31, align 8, !tbaa !95
  %32 = getelementptr inbounds %struct.unop, ptr %22, i64 0, i32 7
  store ptr %21, ptr %32, align 8, !tbaa !36
  %33 = trunc i32 %7 to i8
  %34 = or i8 %33, 4
  %35 = getelementptr inbounds %struct.unop, ptr %22, i64 0, i32 5
  store i8 %34, ptr %35, align 2, !tbaa !96
  %36 = lshr i32 %7, 8
  %37 = trunc i32 %36 to i8
  %38 = or i8 %37, 1
  %39 = getelementptr inbounds %struct.unop, ptr %22, i64 0, i32 6
  store i8 %38, ptr %39, align 1, !tbaa !97
  %40 = getelementptr inbounds %struct.op, ptr %21, i64 0, i32 1
  %41 = load ptr, ptr %40, align 8, !tbaa !38
  %42 = icmp eq ptr %41, null
  br i1 %42, label %43, label %47

43:                                               ; preds = %20
  %44 = getelementptr inbounds %struct.op, ptr %21, i64 0, i32 4
  %45 = load i16, ptr %44, align 8
  %46 = and i16 %45, -16385
  store i16 %46, ptr %44, align 8
  store ptr null, ptr %40, align 8, !tbaa !38
  br label %47

47:                                               ; preds = %20, %43
  %48 = load ptr, ptr @PL_op_mask, align 8, !tbaa !6
  %49 = icmp eq ptr %48, null
  br i1 %49, label %57, label %50

50:                                               ; preds = %47
  %51 = getelementptr inbounds i8, ptr %48, i64 %13
  %52 = load i8, ptr %51, align 1, !tbaa !13
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %57, label %54

54:                                               ; preds = %50
  tail call void @Perl_op_free(ptr noundef nonnull %22)
  %55 = getelementptr inbounds [0 x ptr], ptr @PL_op_desc, i64 0, i64 %13
  %56 = load ptr, ptr %55, align 8, !tbaa !6
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.63, ptr noundef %56) #29
  unreachable

57:                                               ; preds = %50, %47
  %58 = getelementptr inbounds [0 x ptr], ptr @PL_check, i64 0, i64 %13
  %59 = load ptr, ptr %58, align 8, !tbaa !6
  %60 = tail call ptr %59(ptr noundef nonnull %22) #29
  %61 = load ptr, ptr %60, align 8, !tbaa !98
  %62 = icmp eq ptr %61, null
  br i1 %62, label %63, label %115

63:                                               ; preds = %57
  %64 = getelementptr inbounds %struct.op, ptr %60, i64 0, i32 4
  %65 = load i16, ptr %64, align 8
  %66 = and i16 %65, 511
  %67 = zext i16 %66 to i32
  %68 = zext i16 %66 to i64
  %69 = getelementptr inbounds [0 x i32], ptr @PL_opargs, i64 0, i64 %68
  %70 = load i32, ptr %69, align 4, !tbaa !52
  %71 = and i32 %70, 4
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %75, label %73

73:                                               ; preds = %63
  %74 = tail call ptr @Perl_scalar(ptr noundef nonnull %60)
  br label %75

75:                                               ; preds = %73, %63
  %76 = and i32 %70, 8
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %84, label %78

78:                                               ; preds = %75
  %79 = getelementptr inbounds %struct.op, ptr %60, i64 0, i32 3
  %80 = load i64, ptr %79, align 8, !tbaa !34
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %84

82:                                               ; preds = %78
  %83 = tail call i64 @Perl_pad_alloc(i32 noundef %67, i32 noundef 131072) #29
  store i64 %83, ptr %79, align 8, !tbaa !34
  br label %84

84:                                               ; preds = %75, %78, %82
  %85 = load i16, ptr %64, align 8
  %86 = and i16 %85, 511
  %87 = zext i16 %86 to i64
  %88 = getelementptr inbounds [0 x i32], ptr @PL_opargs, i64 0, i64 %87
  %89 = load i32, ptr %88, align 4, !tbaa !52
  %90 = and i32 %89, 32
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %105, label %92

92:                                               ; preds = %84
  %93 = load i32, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 10), align 8, !tbaa !77
  %94 = and i32 %93, 1
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %105, label %96

96:                                               ; preds = %92
  %97 = add i16 %85, 1
  %98 = and i16 %97, 511
  %99 = and i16 %85, -512
  %100 = or i16 %98, %99
  store i16 %100, ptr %64, align 8
  %101 = zext i16 %98 to i64
  %102 = getelementptr inbounds [0 x ptr], ptr @PL_ppaddr, i64 0, i64 %101
  %103 = load ptr, ptr %102, align 8, !tbaa !6
  %104 = getelementptr inbounds %struct.op, ptr %60, i64 0, i32 2
  store ptr %103, ptr %104, align 8, !tbaa !78
  br label %105

105:                                              ; preds = %96, %92, %84
  %106 = icmp eq i16 %86, 101
  br i1 %106, label %107, label %113

107:                                              ; preds = %105
  %108 = getelementptr inbounds %struct.unop, ptr %60, i64 0, i32 7
  %109 = load ptr, ptr %108, align 8, !tbaa !36
  %110 = getelementptr inbounds %struct.op, ptr %109, i64 0, i32 6
  %111 = load i8, ptr %110, align 1, !tbaa !33
  %112 = and i8 %111, -9
  store i8 %112, ptr %110, align 1, !tbaa !33
  br label %113

113:                                              ; preds = %105, %107
  %114 = tail call fastcc ptr @S_fold_constants(ptr noundef nonnull %60)
  br label %115

115:                                              ; preds = %57, %113
  %116 = phi ptr [ %114, %113 ], [ %60, %57 ]
  ret ptr %116
}

; Function Attrs: nofree nounwind sspstrong uwtable
define dso_local ptr @S_alloc_LOGOP(i32 noundef %0, ptr noundef %1, ptr noundef %2) local_unnamed_addr #0 {
  %4 = tail call ptr @Perl_Slab_Alloc(i64 noundef 56)
  %5 = trunc i32 %0 to i16
  %6 = getelementptr inbounds %struct.logop, ptr %4, i64 0, i32 4
  %7 = load i16, ptr %6, align 8
  %8 = and i16 %5, 511
  %9 = and i16 %7, -512
  %10 = or i16 %9, %8
  store i16 %10, ptr %6, align 8
  %11 = sext i32 %0 to i64
  %12 = getelementptr inbounds [0 x ptr], ptr @PL_ppaddr, i64 0, i64 %11
  %13 = load ptr, ptr %12, align 8, !tbaa !6
  %14 = getelementptr inbounds %struct.logop, ptr %4, i64 0, i32 2
  store ptr %13, ptr %14, align 8, !tbaa !99
  %15 = getelementptr inbounds %struct.logop, ptr %4, i64 0, i32 7
  store ptr %1, ptr %15, align 8, !tbaa !101
  %16 = getelementptr inbounds %struct.logop, ptr %4, i64 0, i32 8
  store ptr %2, ptr %16, align 8, !tbaa !102
  %17 = getelementptr inbounds %struct.logop, ptr %4, i64 0, i32 5
  store i8 4, ptr %17, align 2, !tbaa !103
  br label %18

18:                                               ; preds = %21, %3
  %19 = phi ptr [ %1, %3 ], [ %23, %21 ]
  %20 = icmp eq ptr %19, null
  br i1 %20, label %30, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.op, ptr %19, i64 0, i32 1
  %23 = load ptr, ptr %22, align 8, !tbaa !38
  %24 = icmp eq ptr %23, null
  br i1 %24, label %25, label %18, !llvm.loop !104

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.op, ptr %19, i64 0, i32 1
  %27 = getelementptr inbounds %struct.op, ptr %19, i64 0, i32 4
  %28 = load i16, ptr %27, align 8
  %29 = and i16 %28, -16385
  store i16 %29, ptr %27, align 8
  store ptr null, ptr %26, align 8, !tbaa !38
  br label %30

30:                                               ; preds = %18, %25
  ret ptr %4
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_op_contextualize(ptr noundef %0, i32 noundef %1) local_unnamed_addr #4 {
  switch i32 %1, label %9 [
    i32 2, label %3
    i32 3, label %5
    i32 1, label %7
  ]

3:                                                ; preds = %2
  %4 = tail call ptr @Perl_scalar(ptr noundef %0)
  br label %11

5:                                                ; preds = %2
  %6 = tail call ptr @Perl_list(ptr noundef %0)
  br label %11

7:                                                ; preds = %2
  %8 = tail call ptr @Perl_scalarvoid(ptr noundef %0)
  br label %11

9:                                                ; preds = %2
  %10 = sext i32 %1 to i64
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.9, i64 noundef %10) #29
  br label %11

11:                                               ; preds = %9, %7, %5, %3
  %12 = phi ptr [ null, %9 ], [ %0, %7 ], [ %6, %5 ], [ %0, %3 ]
  ret ptr %12
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_scalar(ptr noundef returned %0) local_unnamed_addr #4 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  %4 = icmp eq ptr %0, null
  br i1 %4, label %146, label %5

5:                                                ; preds = %1
  %6 = load ptr, ptr @PL_parser, align 8, !tbaa !6
  %7 = icmp eq ptr %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %5
  %9 = getelementptr inbounds %struct.yy_parser, ptr %6, i64 0, i32 44
  %10 = load i8, ptr %9, align 1, !tbaa !105
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %146

12:                                               ; preds = %8, %5
  %13 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 5
  %14 = load i8, ptr %13, align 2, !tbaa !35
  %15 = and i8 %14, 3
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %146

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 4
  %19 = load i16, ptr %18, align 8
  %20 = and i16 %19, 511
  %21 = icmp eq i16 %20, 203
  br i1 %21, label %146, label %22

22:                                               ; preds = %17
  %23 = and i8 %14, -4
  %24 = or i8 %23, 2
  store i8 %24, ptr %13, align 2, !tbaa !35
  %25 = zext i16 %20 to i32
  switch i32 %25, label %60 [
    i32 62, label %26
    i32 177, label %48
    i32 176, label %48
    i32 180, label %48
    i32 140, label %115
    i32 152, label %115
    i32 167, label %114
    i32 158, label %112
    i32 192, label %112
    i32 197, label %73
    i32 345, label %73
    i32 198, label %112
  ]

26:                                               ; preds = %22
  %27 = getelementptr inbounds %struct.binop, ptr %0, i64 0, i32 7
  %28 = load ptr, ptr %27, align 8, !tbaa !106
  %29 = tail call ptr @Perl_scalar(ptr noundef %28)
  %30 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 6
  %31 = load i8, ptr %30, align 1, !tbaa !33
  %32 = and i8 %31, 64
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %146, label %34

34:                                               ; preds = %26
  %35 = load ptr, ptr %27, align 8, !tbaa !36
  %36 = getelementptr inbounds %struct.listop, ptr %35, i64 0, i32 7
  %37 = load ptr, ptr %36, align 8, !tbaa !81
  %38 = getelementptr inbounds %struct.op, ptr %37, i64 0, i32 1
  %39 = load ptr, ptr %38, align 8, !tbaa !38
  %40 = icmp eq ptr %39, null
  br i1 %40, label %146, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %struct.op, ptr %39, i64 0, i32 1
  %43 = load ptr, ptr %42, align 8, !tbaa !38
  %44 = icmp eq ptr %43, null
  br i1 %44, label %45, label %146

45:                                               ; preds = %41
  tail call void @Perl_op_null(ptr noundef nonnull %37)
  %46 = load i8, ptr %30, align 1, !tbaa !33
  %47 = and i8 %46, -65
  store i8 %47, ptr %30, align 1, !tbaa !33
  br label %146

48:                                               ; preds = %22, %22, %22
  %49 = getelementptr inbounds %struct.unop, ptr %0, i64 0, i32 7
  %50 = load ptr, ptr %49, align 8, !tbaa !36
  %51 = getelementptr inbounds %struct.op, ptr %50, i64 0, i32 1
  %52 = load ptr, ptr %51, align 8, !tbaa !38
  %53 = icmp eq ptr %52, null
  br i1 %53, label %146, label %54

54:                                               ; preds = %48, %54
  %55 = phi ptr [ %58, %54 ], [ %52, %48 ]
  %56 = tail call ptr @Perl_scalar(ptr noundef nonnull %55)
  %57 = getelementptr inbounds %struct.op, ptr %55, i64 0, i32 1
  %58 = load ptr, ptr %57, align 8, !tbaa !38
  %59 = icmp eq ptr %58, null
  br i1 %59, label %146, label %54, !llvm.loop !108

60:                                               ; preds = %22
  %61 = and i8 %14, 4
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %146, label %63

63:                                               ; preds = %60
  %64 = getelementptr inbounds %struct.unop, ptr %0, i64 0, i32 7
  %65 = load ptr, ptr %64, align 8, !tbaa !6
  %66 = icmp eq ptr %65, null
  br i1 %66, label %146, label %67

67:                                               ; preds = %63, %67
  %68 = phi ptr [ %71, %67 ], [ %65, %63 ]
  %69 = tail call ptr @Perl_scalar(ptr noundef nonnull %68)
  %70 = getelementptr inbounds %struct.op, ptr %68, i64 0, i32 1
  %71 = load ptr, ptr %70, align 8, !tbaa !6
  %72 = icmp eq ptr %71, null
  br i1 %72, label %146, label %67, !llvm.loop !109

73:                                               ; preds = %22, %22
  %74 = getelementptr inbounds %struct.listop, ptr %0, i64 0, i32 7
  %75 = load ptr, ptr %74, align 8, !tbaa !81
  %76 = tail call ptr @Perl_scalar(ptr noundef %75)
  %77 = getelementptr inbounds %struct.op, ptr %75, i64 0, i32 1
  br label %78

78:                                               ; preds = %112, %73
  %79 = phi ptr [ %77, %73 ], [ %113, %112 ]
  %80 = load ptr, ptr %79, align 8, !tbaa !6
  %81 = icmp eq ptr %80, null
  br i1 %81, label %111, label %82

82:                                               ; preds = %78, %110
  %83 = phi ptr [ %85, %110 ], [ %80, %78 ]
  %84 = getelementptr inbounds %struct.op, ptr %83, i64 0, i32 1
  %85 = load ptr, ptr %84, align 8, !tbaa !38
  %86 = icmp eq ptr %85, null
  br i1 %86, label %108, label %87

87:                                               ; preds = %82
  %88 = getelementptr inbounds %struct.op, ptr %83, i64 0, i32 4
  %89 = load i16, ptr %88, align 8
  %90 = and i16 %89, 511
  %91 = icmp eq i16 %90, 217
  br i1 %91, label %108, label %92

92:                                               ; preds = %87
  %93 = getelementptr inbounds %struct.op, ptr %85, i64 0, i32 1
  %94 = load ptr, ptr %93, align 8, !tbaa !38
  %95 = icmp eq ptr %94, null
  br i1 %95, label %96, label %106

96:                                               ; preds = %92
  %97 = getelementptr inbounds %struct.op, ptr %85, i64 0, i32 4
  %98 = load i16, ptr %97, align 8
  %99 = and i16 %98, 511
  %100 = icmp eq i16 %99, 0
  br i1 %100, label %101, label %106

101:                                              ; preds = %96
  %102 = getelementptr inbounds %struct.op, ptr %85, i64 0, i32 3
  %103 = load i64, ptr %102, align 8, !tbaa !34
  %104 = add i64 %103, -193
  %105 = icmp ult i64 %104, 2
  br i1 %105, label %108, label %106

106:                                              ; preds = %101, %92, %96
  %107 = tail call ptr @Perl_scalarvoid(ptr noundef nonnull %83)
  br label %110

108:                                              ; preds = %101, %87, %82
  %109 = tail call ptr @Perl_scalar(ptr noundef nonnull %83)
  br label %110

110:                                              ; preds = %108, %106
  br i1 %86, label %111, label %82, !llvm.loop !110

111:                                              ; preds = %110, %78
  store ptr @PL_compiling, ptr @PL_curcop, align 8, !tbaa !6
  br label %146

112:                                              ; preds = %22, %22, %22
  %113 = getelementptr inbounds %struct.listop, ptr %0, i64 0, i32 7
  br label %78

114:                                              ; preds = %22
  tail call void (i32, ptr, ...) @Perl_ck_warner(i32 noundef 45, ptr noundef nonnull @.str.10) #29
  br label %146

115:                                              ; preds = %22, %22
  %116 = icmp eq i16 %20, 152
  %117 = select i1 %116, i8 125, i8 93
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #29
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #29
  store ptr null, ptr %3, align 8, !tbaa !6
  br i1 %7, label %122, label %118

118:                                              ; preds = %115
  %119 = getelementptr inbounds %struct.yy_parser, ptr %6, i64 0, i32 44
  %120 = load i8, ptr %119, align 1, !tbaa !105
  %121 = icmp eq i8 %120, 0
  br i1 %121, label %122, label %145

122:                                              ; preds = %118, %115
  %123 = tail call zeroext i1 @Perl_ckwarn(i32 noundef 28) #29
  br i1 %123, label %124, label %145

124:                                              ; preds = %122
  %125 = getelementptr inbounds %struct.listop, ptr %0, i64 0, i32 7
  %126 = load ptr, ptr %125, align 8, !tbaa !81
  %127 = getelementptr inbounds %struct.op, ptr %126, i64 0, i32 1
  %128 = load ptr, ptr %127, align 8, !tbaa !38
  %129 = getelementptr inbounds %struct.op, ptr %128, i64 0, i32 1
  %130 = load ptr, ptr %129, align 8, !tbaa !38
  %131 = tail call fastcc ptr @S_op_varname(ptr noundef %130)
  %132 = icmp eq ptr %131, null
  br i1 %132, label %145, label %133

133:                                              ; preds = %124
  call fastcc void @S_op_pretty(ptr noundef nonnull %128, ptr noundef nonnull %2, ptr noundef nonnull %3)
  %134 = getelementptr inbounds %struct.sv, ptr %131, i64 0, i32 3
  %135 = load ptr, ptr %134, align 8, !tbaa !13
  %136 = getelementptr inbounds i8, ptr %135, i64 1
  tail call void @Perl_sv_chop(ptr noundef nonnull %131, ptr noundef nonnull %136) #29
  %137 = load ptr, ptr %3, align 8, !tbaa !6
  %138 = icmp eq ptr %137, null
  %139 = select i1 %116, i32 123, i32 91
  br i1 %138, label %142, label %140

140:                                              ; preds = %133
  %141 = zext i8 %117 to i32
  tail call void (i32, ptr, ...) @Perl_warner(i32 noundef 28, ptr noundef nonnull @.str.11, ptr noundef nonnull %131, i32 noundef %139, ptr noundef nonnull %137, i32 noundef %141, ptr noundef nonnull %131, i32 noundef %139, ptr noundef nonnull %137, i32 noundef %141) #29
  br label %145

142:                                              ; preds = %133
  %143 = load ptr, ptr %2, align 8, !tbaa !6
  %144 = zext i8 %117 to i32
  tail call void (i32, ptr, ...) @Perl_warner(i32 noundef 28, ptr noundef nonnull @.str.12, ptr noundef nonnull %131, i32 noundef %139, ptr noundef %143, i32 noundef %144, ptr noundef nonnull %131, i32 noundef %139, ptr noundef %143, i32 noundef %144) #29
  br label %145

145:                                              ; preds = %140, %142, %124, %122, %118
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #29
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #29
  br label %146

146:                                              ; preds = %54, %67, %48, %63, %111, %114, %45, %34, %41, %26, %60, %145, %1, %8, %12, %17
  ret ptr %0
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_list(ptr noundef %0) local_unnamed_addr #4 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %139, label %3

3:                                                ; preds = %1
  %4 = load ptr, ptr @PL_parser, align 8
  %5 = icmp eq ptr %4, null
  %6 = getelementptr inbounds %struct.yy_parser, ptr %4, i64 0, i32 44
  %7 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 5
  %8 = load i8, ptr %7, align 2, !tbaa !35
  %9 = and i8 %8, 3
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %139

11:                                               ; preds = %3
  br i1 %5, label %15, label %12

12:                                               ; preds = %11
  %13 = load i8, ptr %6, align 1, !tbaa !105
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %139

15:                                               ; preds = %12, %11
  %16 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 4
  %17 = load i16, ptr %16, align 8
  %18 = and i16 %17, 511
  %19 = icmp eq i16 %18, 203
  br i1 %19, label %139, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 6
  %22 = load i8, ptr %21, align 1, !tbaa !33
  %23 = and i8 %22, 16
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %31, label %25

25:                                               ; preds = %20
  %26 = zext i16 %18 to i64
  %27 = getelementptr inbounds [0 x i32], ptr @PL_opargs, i64 0, i64 %26
  %28 = load i32, ptr %27, align 4, !tbaa !52
  %29 = and i32 %28, 16
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %139

31:                                               ; preds = %25, %20
  %32 = or i8 %8, 3
  store i8 %32, ptr %7, align 2, !tbaa !35
  %33 = zext i16 %18 to i32
  switch i32 %33, label %123 [
    i32 175, label %34
    i32 62, label %71
    i32 177, label %109
    i32 176, label %109
    i32 180, label %109
    i32 192, label %195
    i32 198, label %195
    i32 345, label %166
    i32 197, label %166
    i32 158, label %155
  ]

34:                                               ; preds = %31
  %35 = getelementptr inbounds %struct.binop, ptr %0, i64 0, i32 7
  %36 = load ptr, ptr %35, align 8, !tbaa !106
  %37 = icmp eq ptr %36, null
  br i1 %37, label %202, label %38

38:                                               ; preds = %34, %67
  %39 = phi ptr [ %69, %67 ], [ %36, %34 ]
  %40 = getelementptr inbounds %struct.op, ptr %39, i64 0, i32 5
  %41 = load i8, ptr %40, align 2, !tbaa !35
  %42 = and i8 %41, 3
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %44, label %202

44:                                               ; preds = %38
  br i1 %5, label %48, label %45

45:                                               ; preds = %44
  %46 = load i8, ptr %6, align 1, !tbaa !105
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %48, label %202

48:                                               ; preds = %45, %44
  %49 = getelementptr inbounds %struct.op, ptr %39, i64 0, i32 4
  %50 = load i16, ptr %49, align 8
  %51 = and i16 %50, 511
  %52 = icmp eq i16 %51, 203
  br i1 %52, label %202, label %53

53:                                               ; preds = %48
  %54 = getelementptr inbounds %struct.op, ptr %39, i64 0, i32 6
  %55 = load i8, ptr %54, align 1, !tbaa !33
  %56 = and i8 %55, 16
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %64, label %58

58:                                               ; preds = %53
  %59 = zext i16 %51 to i64
  %60 = getelementptr inbounds [0 x i32], ptr @PL_opargs, i64 0, i64 %59
  %61 = load i32, ptr %60, align 4, !tbaa !52
  %62 = and i32 %61, 16
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %202

64:                                               ; preds = %58, %53
  %65 = or i8 %41, 3
  store i8 %65, ptr %40, align 2, !tbaa !35
  %66 = zext i16 %51 to i32
  switch i32 %66, label %123 [
    i32 175, label %67
    i32 62, label %71
    i32 177, label %109
    i32 176, label %109
    i32 180, label %109
    i32 192, label %195
    i32 198, label %195
    i32 345, label %166
    i32 197, label %166
    i32 158, label %155
  ]

67:                                               ; preds = %64
  %68 = getelementptr inbounds %struct.binop, ptr %39, i64 0, i32 7
  %69 = load ptr, ptr %68, align 8, !tbaa !106
  %70 = icmp eq ptr %69, null
  br i1 %70, label %202, label %38, !llvm.loop !111

71:                                               ; preds = %64, %31
  %72 = phi i1 [ false, %31 ], [ true, %64 ]
  %73 = phi ptr [ %0, %31 ], [ %39, %64 ]
  %74 = phi i8 [ %8, %31 ], [ %41, %64 ]
  %75 = phi i8 [ %22, %31 ], [ %55, %64 ]
  %76 = and i8 %75, 64
  %77 = icmp ne i8 %76, 0
  %78 = and i8 %74, 64
  %79 = icmp eq i8 %78, 0
  %80 = and i1 %79, %77
  br i1 %80, label %81, label %199

81:                                               ; preds = %71
  %82 = getelementptr inbounds %struct.binop, ptr %73, i64 0, i32 7
  %83 = load ptr, ptr %82, align 8, !tbaa !106
  %84 = tail call ptr @Perl_list(ptr noundef %83)
  %85 = getelementptr inbounds %struct.binop, ptr %73, i64 0, i32 8
  %86 = load ptr, ptr %85, align 8, !tbaa !113
  %87 = getelementptr inbounds %struct.op, ptr %86, i64 0, i32 4
  %88 = load i16, ptr %87, align 8
  %89 = and i16 %88, 511
  %90 = icmp eq i16 %89, 5
  br i1 %90, label %91, label %199

91:                                               ; preds = %81
  %92 = getelementptr inbounds %struct.svop, ptr %86, i64 0, i32 7
  %93 = load ptr, ptr %92, align 8, !tbaa !65
  %94 = getelementptr inbounds %struct.sv, ptr %93, i64 0, i32 2
  %95 = load i32, ptr %94, align 4, !tbaa !84
  %96 = and i32 %95, 256
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %199, label %98

98:                                               ; preds = %91
  %99 = load ptr, ptr %93, align 8, !tbaa !85
  %100 = getelementptr inbounds %struct.xpviv, ptr %99, i64 0, i32 4
  %101 = load i64, ptr %100, align 8, !tbaa !13
  %102 = icmp eq i64 %101, 1
  br i1 %102, label %103, label %199

103:                                              ; preds = %98
  tail call void @Perl_op_null(ptr noundef nonnull %73)
  %104 = load ptr, ptr %82, align 8, !tbaa !106
  %105 = getelementptr inbounds %struct.unop, ptr %104, i64 0, i32 7
  %106 = load ptr, ptr %105, align 8, !tbaa !36
  tail call void @Perl_op_null(ptr noundef %106)
  %107 = load ptr, ptr %82, align 8, !tbaa !106
  %108 = tail call ptr @Perl_op_sibling_splice(ptr noundef nonnull %73, ptr noundef %107, i32 noundef 1, ptr noundef null)
  tail call void @Perl_op_free(ptr noundef %108)
  br i1 %72, label %202, label %139

109:                                              ; preds = %64, %64, %64, %31, %31, %31
  %110 = phi i1 [ false, %31 ], [ false, %31 ], [ false, %31 ], [ true, %64 ], [ true, %64 ], [ true, %64 ]
  %111 = phi ptr [ %0, %31 ], [ %0, %31 ], [ %0, %31 ], [ %39, %64 ], [ %39, %64 ], [ %39, %64 ]
  %112 = getelementptr inbounds %struct.unop, ptr %111, i64 0, i32 7
  %113 = load ptr, ptr %112, align 8, !tbaa !36
  %114 = getelementptr inbounds %struct.op, ptr %113, i64 0, i32 1
  %115 = load ptr, ptr %114, align 8, !tbaa !38
  %116 = icmp eq ptr %115, null
  br i1 %116, label %199, label %117

117:                                              ; preds = %109, %117
  %118 = phi ptr [ %121, %117 ], [ %115, %109 ]
  %119 = tail call ptr @Perl_list(ptr noundef nonnull %118)
  %120 = getelementptr inbounds %struct.op, ptr %118, i64 0, i32 1
  %121 = load ptr, ptr %120, align 8, !tbaa !38
  %122 = icmp eq ptr %121, null
  br i1 %122, label %199, label %117, !llvm.loop !114

123:                                              ; preds = %64, %31
  %124 = phi i1 [ false, %31 ], [ true, %64 ]
  %125 = phi ptr [ %0, %31 ], [ %39, %64 ]
  %126 = phi i8 [ %8, %31 ], [ %41, %64 ]
  %127 = and i8 %126, 4
  %128 = icmp eq i8 %127, 0
  br i1 %128, label %199, label %129

129:                                              ; preds = %123
  %130 = load ptr, ptr %125, align 8, !tbaa !25
  %131 = icmp eq ptr %130, null
  br i1 %131, label %132, label %145

132:                                              ; preds = %129
  %133 = getelementptr inbounds %struct.unop, ptr %125, i64 0, i32 7
  %134 = load ptr, ptr %133, align 8, !tbaa !6
  %135 = getelementptr inbounds %struct.op, ptr %134, i64 0, i32 4
  %136 = load i16, ptr %135, align 8
  %137 = and i16 %136, 511
  %138 = icmp eq i16 %137, 175
  br i1 %138, label %141, label %145

139:                                              ; preds = %194, %103, %165, %199, %202, %1, %3, %12, %15, %25, %141
  %140 = phi ptr [ %144, %141 ], [ %0, %202 ], [ %201, %199 ], [ %157, %165 ], [ %73, %103 ], [ %175, %194 ], [ %0, %25 ], [ %0, %15 ], [ %0, %12 ], [ %0, %3 ], [ null, %1 ]
  ret ptr %140

141:                                              ; preds = %132
  %142 = tail call ptr @Perl_list(ptr noundef nonnull %134)
  %143 = tail call fastcc ptr @S_gen_constant_list(ptr noundef nonnull %125)
  %144 = select i1 %124, ptr %0, ptr %143
  br label %139

145:                                              ; preds = %132, %129
  %146 = getelementptr inbounds %struct.listop, ptr %125, i64 0, i32 7
  %147 = load ptr, ptr %146, align 8, !tbaa !6
  %148 = icmp eq ptr %147, null
  br i1 %148, label %199, label %149

149:                                              ; preds = %145, %149
  %150 = phi ptr [ %153, %149 ], [ %147, %145 ]
  %151 = tail call ptr @Perl_list(ptr noundef nonnull %150)
  %152 = getelementptr inbounds %struct.op, ptr %150, i64 0, i32 1
  %153 = load ptr, ptr %152, align 8, !tbaa !6
  %154 = icmp eq ptr %153, null
  br i1 %154, label %199, label %149, !llvm.loop !115

155:                                              ; preds = %64, %31
  %156 = phi i1 [ false, %31 ], [ true, %64 ]
  %157 = phi ptr [ %0, %31 ], [ %39, %64 ]
  %158 = tail call fastcc ptr @S_listkids(ptr noundef nonnull %157)
  %159 = getelementptr inbounds %struct.listop, ptr %157, i64 0, i32 7
  %160 = load ptr, ptr %159, align 8, !tbaa !6
  %161 = getelementptr inbounds %struct.op, ptr %160, i64 0, i32 4
  %162 = load i16, ptr %161, align 8
  %163 = and i16 %162, 511
  %164 = icmp eq i16 %163, 3
  br i1 %164, label %165, label %199

165:                                              ; preds = %155
  tail call void @Perl_op_null(ptr noundef nonnull %160)
  tail call void @Perl_op_null(ptr noundef nonnull %157)
  br i1 %156, label %202, label %139

166:                                              ; preds = %64, %64, %31, %31
  %167 = phi i1 [ false, %31 ], [ false, %31 ], [ true, %64 ], [ true, %64 ]
  %168 = phi ptr [ %0, %31 ], [ %0, %31 ], [ %39, %64 ], [ %39, %64 ]
  %169 = getelementptr inbounds %struct.listop, ptr %168, i64 0, i32 7
  %170 = load ptr, ptr %169, align 8, !tbaa !81
  %171 = tail call ptr @Perl_list(ptr noundef %170)
  %172 = getelementptr inbounds %struct.op, ptr %170, i64 0, i32 1
  br label %173

173:                                              ; preds = %195, %166
  %174 = phi i1 [ %167, %166 ], [ %196, %195 ]
  %175 = phi ptr [ %168, %166 ], [ %197, %195 ]
  %176 = phi ptr [ %172, %166 ], [ %198, %195 ]
  %177 = load ptr, ptr %176, align 8, !tbaa !6
  %178 = icmp eq ptr %177, null
  br i1 %178, label %194, label %179

179:                                              ; preds = %173, %193
  %180 = phi ptr [ %182, %193 ], [ %177, %173 ]
  %181 = getelementptr inbounds %struct.op, ptr %180, i64 0, i32 1
  %182 = load ptr, ptr %181, align 8, !tbaa !38
  %183 = icmp eq ptr %182, null
  br i1 %183, label %191, label %184

184:                                              ; preds = %179
  %185 = getelementptr inbounds %struct.op, ptr %180, i64 0, i32 4
  %186 = load i16, ptr %185, align 8
  %187 = and i16 %186, 511
  %188 = icmp eq i16 %187, 217
  br i1 %188, label %191, label %189

189:                                              ; preds = %184
  %190 = tail call ptr @Perl_scalarvoid(ptr noundef nonnull %180)
  br label %193

191:                                              ; preds = %184, %179
  %192 = tail call ptr @Perl_list(ptr noundef nonnull %180)
  br label %193

193:                                              ; preds = %191, %189
  br i1 %183, label %194, label %179, !llvm.loop !116

194:                                              ; preds = %193, %173
  store ptr @PL_compiling, ptr @PL_curcop, align 8, !tbaa !6
  br i1 %174, label %202, label %139

195:                                              ; preds = %64, %64, %31, %31
  %196 = phi i1 [ false, %31 ], [ false, %31 ], [ true, %64 ], [ true, %64 ]
  %197 = phi ptr [ %0, %31 ], [ %0, %31 ], [ %39, %64 ], [ %39, %64 ]
  %198 = getelementptr inbounds %struct.listop, ptr %197, i64 0, i32 7
  br label %173

199:                                              ; preds = %117, %149, %109, %145, %81, %91, %98, %71, %123, %155
  %200 = phi i1 [ %156, %155 ], [ %124, %123 ], [ %72, %71 ], [ %72, %98 ], [ %72, %91 ], [ %72, %81 ], [ %124, %145 ], [ %110, %109 ], [ %124, %149 ], [ %110, %117 ]
  %201 = phi ptr [ %157, %155 ], [ %125, %123 ], [ %73, %71 ], [ %73, %98 ], [ %73, %91 ], [ %73, %81 ], [ %125, %145 ], [ %111, %109 ], [ %125, %149 ], [ %111, %117 ]
  br i1 %200, label %202, label %139

202:                                              ; preds = %58, %67, %38, %45, %48, %34, %194, %103, %165, %199
  br label %139
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_scalarvoid(ptr noundef returned %0) local_unnamed_addr #4 {
  br label %2

2:                                                ; preds = %434, %1
  %3 = phi ptr [ %0, %1 ], [ %437, %434 ]
  %4 = phi ptr [ null, %1 ], [ %430, %434 ]
  %5 = phi i64 [ -1, %1 ], [ %435, %434 ]
  %6 = phi i64 [ 0, %1 ], [ %432, %434 ]
  %7 = getelementptr inbounds %struct.op, ptr %3, i64 0, i32 4
  %8 = load i16, ptr %7, align 8
  %9 = and i16 %8, 511
  switch i16 %9, label %16 [
    i16 193, label %15
    i16 194, label %15
    i16 0, label %10
  ]

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.op, ptr %3, i64 0, i32 3
  %12 = load i64, ptr %11, align 8, !tbaa !34
  %13 = add i64 %12, -193
  %14 = icmp ult i64 %13, 2
  br i1 %14, label %15, label %16

15:                                               ; preds = %10, %2, %2
  store ptr %3, ptr @PL_curcop, align 8, !tbaa !6
  br label %16

16:                                               ; preds = %10, %2, %15
  %17 = getelementptr inbounds %struct.op, ptr %3, i64 0, i32 5
  %18 = load i8, ptr %17, align 2, !tbaa !35
  %19 = and i8 %18, 1
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %429

21:                                               ; preds = %16
  %22 = load ptr, ptr @PL_parser, align 8, !tbaa !6
  %23 = icmp eq ptr %22, null
  br i1 %23, label %28, label %24

24:                                               ; preds = %21
  %25 = getelementptr inbounds %struct.yy_parser, ptr %22, i64 0, i32 44
  %26 = load i8, ptr %25, align 1, !tbaa !105
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %28, label %429

28:                                               ; preds = %24, %21
  switch i16 %9, label %29 [
    i16 203, label %429
    i16 339, label %429
    i16 217, label %429
  ]

29:                                               ; preds = %28
  %30 = getelementptr inbounds %struct.op, ptr %3, i64 0, i32 6
  %31 = load i8, ptr %30, align 1, !tbaa !13
  %32 = and i8 %31, 16
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %40, label %34

34:                                               ; preds = %29
  %35 = zext i16 %9 to i64
  %36 = getelementptr inbounds [0 x i32], ptr @PL_opargs, i64 0, i64 %35
  %37 = load i32, ptr %36, align 4, !tbaa !52
  %38 = and i32 %37, 16
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %429

40:                                               ; preds = %34, %29
  %41 = and i8 %18, -4
  %42 = or i8 %41, 1
  store i8 %42, ptr %17, align 2, !tbaa !35
  %43 = zext i16 %9 to i32
  switch i32 %43, label %44 [
    i32 62, label %53
    i32 121, label %63
    i32 4, label %65
    i32 7, label %65
    i32 107, label %65
    i32 16, label %65
    i32 22, label %65
    i32 20, label %65
    i32 21, label %65
    i32 43, label %65
    i32 117, label %65
    i32 118, label %65
    i32 120, label %65
    i32 122, label %65
    i32 123, label %65
    i32 124, label %65
    i32 125, label %65
    i32 140, label %65
    i32 152, label %65
    i32 154, label %65
    i32 155, label %65
    i32 157, label %65
    i32 159, label %65
    i32 160, label %65
    i32 161, label %65
    i32 167, label %65
    i32 168, label %65
    i32 173, label %65
    i32 174, label %65
    i32 175, label %65
    i32 188, label %65
    i32 223, label %65
    i32 244, label %65
    i32 245, label %65
    i32 262, label %65
    i32 263, label %65
    i32 302, label %65
    i32 307, label %65
    i32 317, label %65
    i32 318, label %65
    i32 320, label %65
    i32 322, label %65
    i32 323, label %65
    i32 324, label %65
    i32 325, label %65
    i32 346, label %65
    i32 347, label %65
    i32 348, label %65
    i32 349, label %65
    i32 350, label %65
    i32 351, label %65
    i32 352, label %65
    i32 353, label %65
    i32 354, label %65
    i32 355, label %65
    i32 356, label %65
    i32 357, label %65
    i32 366, label %65
    i32 367, label %65
    i32 371, label %65
    i32 372, label %65
    i32 376, label %65
    i32 19, label %65
    i32 385, label %65
    i32 6, label %75
    i32 9, label %75
    i32 10, label %75
    i32 11, label %75
    i32 12, label %75
    i32 138, label %75
    i32 136, label %75
    i32 137, label %75
    i32 139, label %75
    i32 150, label %75
    i32 151, label %75
    i32 156, label %85
    i32 103, label %107
    i32 33, label %115
    i32 36, label %427
    i32 14, label %120
    i32 15, label %120
    i32 135, label %120
    i32 149, label %120
    i32 5, label %131
    i32 51, label %194
    i32 53, label %199
    i32 52, label %204
    i32 54, label %209
    i32 37, label %214
    i32 38, label %273
    i32 177, label %274
    i32 176, label %274
    i32 179, label %294
    i32 180, label %294
    i32 214, label %294
    i32 216, label %294
    i32 0, label %330
    i32 193, label %333
    i32 194, label %333
    i32 344, label %333
    i32 196, label %333
    i32 198, label %336
    i32 197, label %336
    i32 345, label %336
    i32 202, label %336
    i32 192, label %336
    i32 215, label %336
    i32 217, label %336
    i32 158, label %370
    i32 342, label %408
    i32 2, label %410
  ]

44:                                               ; preds = %40
  %45 = zext i16 %9 to i64
  %46 = getelementptr inbounds [0 x i32], ptr @PL_opargs, i64 0, i64 %45
  %47 = load i32, ptr %46, align 4, !tbaa !52
  %48 = and i32 %47, 2
  %49 = icmp ne i32 %48, 0
  %50 = and i8 %18, 64
  %51 = icmp eq i8 %50, 0
  %52 = and i1 %51, %49
  br i1 %52, label %56, label %429

53:                                               ; preds = %40
  %54 = and i8 %18, 64
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %56, label %429

56:                                               ; preds = %44, %53
  %57 = icmp eq i16 %9, 62
  br i1 %57, label %58, label %65

58:                                               ; preds = %56
  %59 = getelementptr inbounds %struct.binop, ptr %3, i64 0, i32 7
  %60 = load ptr, ptr %59, align 8, !tbaa !106
  %61 = tail call ptr @Perl_scalar(ptr noundef %60)
  %62 = load i16, ptr %7, align 8
  br label %65

63:                                               ; preds = %40
  %64 = icmp eq i8 %31, 4
  br i1 %64, label %429, label %65

65:                                               ; preds = %422, %107, %40, %40, %40, %40, %40, %40, %40, %40, %40, %40, %40, %40, %40, %40, %40, %40, %40, %40, %40, %40, %40, %40, %40, %40, %40, %40, %40, %40, %40, %40, %40, %40, %40, %40, %40, %40, %40, %40, %40, %40, %40, %40, %40, %40, %40, %40, %40, %40, %40, %40, %40, %40, %40, %40, %40, %40, %40, %40, %40, %40, %40, %40, %63, %56, %58
  %66 = phi i
  %67 = and i16 %66, 511
  %68 = icmp eq i16 %67, 380
  br i1 %68, label %69, label %71

69:                                               ; preds = %65
  %70 = tail call ptr @Perl_custom_op_get_field(ptr noundef nonnull %3, i32 noundef 2)
  br label %419

71:                                               ; preds = %65
  %72 = zext i16 %67 to i64
  %73 = getelementptr inbounds [0 x ptr], ptr @PL_op_desc, i64 0, i64 %72
  %74 = load ptr, ptr %73, align 8, !tbaa !6
  br label %419

75:                                               ; preds = %40, %40, %40, %40, %40, %40, %40, %40, %40, %40, %40
  %76 = icmp ult i8 %31, 64
  br i1 %76, label %77, label %429

77:                                               ; preds = %75
  %78 = icmp eq i16 %9, 380
  br i1 %78, label %79, label %81

79:                                               ; preds = %77
  %80 = tail call ptr @Perl_custom_op_get_field(ptr noundef nonnull %3, i32 noundef 2)
  br label %419

81:                                               ; preds = %77
  %82 = zext i16 %9 to i64
  %83 = getelementptr inbounds [0 x ptr], ptr @PL_op_desc, i64 0, i64 %82
  %84 = load ptr, ptr %83, align 8, !tbaa !6
  br label %419

85:                                               ; preds = %40
  %86 = getelementptr inbounds %struct.listop, ptr %3, i64 0, i32 7
  %87 = load ptr, ptr %86, align 8, !tbaa !81
  %88 = icmp eq ptr %87, null
  br i1 %88, label %429, label %89

89:                                               ; preds = %85
  %90 = getelementptr inbounds %struct.op, ptr %87, i64 0, i32 4
  %91 = load i16, ptr %90, align 8
  %92 = and i16 %91, 511
  %93 = icmp eq i16 %92, 13
  br i1 %93, label %94, label %429

94:                                               ; preds = %89
  %95 = getelementptr inbounds %struct.op, ptr %87, i64 0, i32 3
  %96 = load i64, ptr %95, align 8, !tbaa !34
  %97 = icmp eq i64 %96, 0
  %98 = and i8 %18, 64
  %99 = icmp eq i8 %98, 0
  %100 = and i1 %99, %97
  br i1 %100, label %101, label %429

101:                                              ; preds = %94
  %102 = getelementptr inbounds %struct.pmop, ptr %87, i64 0, i32 11
  %103 = load ptr, ptr %102, align 8, !tbaa !13
  %104 = icmp eq ptr %103, null
  br i1 %104, label %105, label %429

105:                                              ; preds = %101
  %106 = load ptr, ptr getelementptr ([0 x ptr], ptr @PL_op_desc, i64 0, i64 156), align 8, !tbaa !6
  br label %419

107:                                              ; preds = %40
  %108 = getelementptr inbounds %struct.unop, ptr %3, i64 0, i32 7
  %109 = load ptr, ptr %108, align 8, !tbaa !36
  %110 = getelementptr inbounds %struct.op, ptr %109, i64 0, i32 4
  %111 = load i16, ptr %110, align 8
  %112 = and i16 %111, 511
  %113 = add nsw i16 %112, -31
  %114 = icmp ult i16 %113, 6
  br i1 %114, label %422, label %65

115:                                              ; preds = %40
  %116 = getelementptr inbounds %struct.pmop, ptr %3, i64 0, i32 10
  %117 = load i32, ptr %116, align 8, !tbaa !54
  %118 = and i32 %117, 134217728
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %429, label %427

120:                                              ; preds = %40, %40, %40, %40
  %121 = icmp ult i8 %31, 64
  br i1 %121, label %122, label %429

122:                                              ; preds = %120
  %123 = getelementptr inbounds %struct.op, ptr %3, i64 0, i32 1
  %124 = load ptr, ptr %123, align 8, !tbaa !38
  %125 = icmp eq ptr %124, null
  br i1 %125, label %427, label %126

126:                                              ; preds = %122
  %127 = getelementptr inbounds %struct.op, ptr %124, i64 0, i32 4
  %128 = load i16, ptr %127, align 8
  %129 = and i16 %128, 511
  %130 = icmp eq i16 %129, 26
  br i1 %130, label %429, label %427

131:                                              ; preds = %40
  %132 = getelementptr inbounds %struct.svop, ptr %3, i64 0, i32 7
  %133 = load ptr, ptr %132, align 8, !tbaa !65
  %134 = and i8 %31, 8
  %135 = icmp eq i8 %134, 0
  br i1 %135, label %137, label %136

136:                                              ; preds = %131
  tail call fastcc void @S_no_bareword_allowed(ptr noundef nonnull %3)
  br label %412

137:                                              ; preds = %131
  %138 = tail call zeroext i1 @Perl_ckwarn(i32 noundef 45) #29
  br i1 %138, label %139, label %412

139:                                              ; preds = %137
  %140 = load i8, ptr %30, align 1, !tbaa !76
  %141 = and i8 %140, 4
  %142 = icmp eq i8 %141, 0
  br i1 %142, label %143, label %412

143:                                              ; preds = %139
  %144 = getelementptr inbounds %struct.sv, ptr %133, i64 0, i32 2
  %145 = load i32, ptr %144, align 4, !tbaa !84
  %146 = and i32 %145, 768
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %164, label %148

148:                                              ; preds = %143
  %149 = and i32 %145, 2097664
  %150 = icmp eq i32 %149, 512
  br i1 %150, label %151, label %155

151:                                              ; preds = %148
  %152 = load ptr, ptr %133, align 8, !tbaa !85
  %153 = getelementptr inbounds %struct.xpvnv, ptr %152, i64 0, i32 5
  %154 = load double, ptr %153, align 8, !tbaa !13
  br label %157

155:                                              ; preds = %148
  %156 = tail call fast nofpclass(nan inf) double @Perl_sv_2nv_flags(ptr noundef nonnull %133, i32 noundef 2) #29
  br label %157

157:                                              ; preds = %155, %151
  %158 = phi fast double [ %154, %151 ], [ %156, %155 ]
  %159 = fcmp fast oeq double %158, 0.000000e+00
  %160 = fcmp fast oeq double %158, 1.000000e+00
  %161 = select i1 %159, i1 true, i1 %160
  br i1 %161, label %412, label %162

162:                                              ; preds = %157
  %163 = load i32, ptr %144, align 4, !tbaa !84
  br label %164

164:                                              ; preds = %162, %143
  %165 = phi i32 [ %163, %162 ], [ %145, %143 ]
  %166 = and i32 %165, 1024
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %183, label %168

168:                                              ; preds = %164
  %169 = tail call ptr @Perl_newSVpvn(ptr noundef nonnull @.str.19, i64 noundef 0) #29
  %170 = getelementptr inbounds %struct.sv, ptr %133, i64 0, i32 3
  %171 = load ptr, ptr %170, align 8, !tbaa !13
  %172 = load ptr, ptr %133, align 8, !tbaa !85
  %173 = getelementptr inbounds %struct.xpv, ptr %172, i64 0, i32 2
  %174 = load i64, ptr %173, align 8, !tbaa !86
  %175 = tail call ptr @Perl_pv_pretty(ptr noundef %169, ptr noundef %171, i64 noundef %174, i64 noundef 32, ptr noundef null, ptr noundef null, i32 noundef 16899) #29
  %176 = tail call ptr (ptr, ...) @Perl_newSVpvf(ptr noundef nonnull @.str.20, ptr noundef %175) #29
  %177 = getelementptr inbounds %struct.sv, ptr %169, i64 0, i32 1
  %178 = load i32, ptr %177, align 8, !tbaa !42
  %179 = icmp ugt i32 %178, 1
  br i1 %179, label %180, label %182

180:                                              ; preds = %168
  %181 = add i32 %178, -1
  store i32 %181, ptr %177, align 8, !tbaa !42
  br label %414

182:                                              ; preds = %168
  tail call void @Perl_sv_free2(ptr noundef nonnull %169, i32 noundef %178) #29
  br label %414

183:                                              ; preds = %164
  %184 = and i32 %165, 65280
  %185 = icmp ne i32 %184, 0
  %186 = and i32 %165, 255
  %187 = icmp eq i32 %186, 8
  %188 = or i1 %185, %187
  %189 = and i32 %165, 16826623
  %190 = icmp eq i32 %189, 16777226
  %191 = or i1 %190, %188
  br i1 %191, label %192, label %412

192:                                              ; preds = %183
  %193 = tail call ptr (ptr, ...) @Perl_newSVpvf(ptr noundef nonnull @.str.21, ptr noundef nonnull %133) #29
  br label %414

194:                                              ; preds = %40
  %195 = and i16 %8, -512
  %196 = or i16 %195, 47
  store i16 %196, ptr %7, align 8
  %197 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_ppaddr, i64 0, i64 47), align 8, !tbaa !6
  %198 = getelementptr inbounds %struct.op, ptr %3, i64 0, i32 2
  store ptr %197, ptr %198, align 8, !tbaa !78
  br label %429

199:                                              ; preds = %40
  %200 = and i16 %8, -512
  %201 = or i16 %200, 49
  store i16 %201, ptr %7, align 8
  %202 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_ppaddr, i64 0, i64 49), align 8, !tbaa !6
  %203 = getelementptr inbounds %struct.op, ptr %3, i64 0, i32 2
  store ptr %202, ptr %203, align 8, !tbaa !78
  br label %429

204:                                              ; preds = %40
  %205 = and i16 %8, -512
  %206 = or i16 %205, 48
  store i16 %206, ptr %7, align 8
  %207 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_ppaddr, i64 0, i64 48), align 8, !tbaa !6
  %208 = getelementptr inbounds %struct.op, ptr %3, i64 0, i32 2
  store ptr %207, ptr %208, align 8, !tbaa !78
  br label %429

209:                                              ; preds = %40
  %210 = and i16 %8, -512
  %211 = or i16 %210, 50
  store i16 %211, ptr %7, align 8
  %212 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_ppaddr, i64 0, i64 50), align 8, !tbaa !6
  %213 = getelementptr inbounds %struct.op, ptr %3, i64 0, i32 2
  store ptr %212, ptr %213, align 8, !tbaa !78
  br label %429

214:                                              ; preds = %40
  %215 = and i8 %31, -65
  %216 = icmp eq i8 %215, 2
  br i1 %216, label %217, label %429

217:                                              ; preds = %214
  %218 = getelementptr inbounds %struct.binop, ptr %3, i64 0, i32 8
  %219 = load ptr, ptr %218, align 8, !tbaa !113
  %220 = icmp eq ptr %219, null
  br i1 %220, label %429, label %221

221:                                              ; preds = %217
  %222 = getelementptr inbounds %struct.op, ptr %219, i64 0, i32 4
  %223 = load i16, ptr %222, align 8
  %224 = and i16 %223, 511
  %225 = icmp eq i16 %224, 14
  br i1 %225, label %226, label %429

226:                                              ; preds = %221
  %227 = getelementptr inbounds %struct.binop, ptr %3, i64 0, i32 7
  %228 = load ptr, ptr %227, align 8, !tbaa !106
  %229 = icmp eq ptr %228, null
  br i1 %229, label %429, label %230

230:                                              ; preds = %226
  %231 = getelementptr inbounds %struct.unop, ptr %228, i64 0, i32 4
  %232 = load i16, ptr %231, align 8
  %233 = and i16 %232, 510
  %234 = icmp eq i16 %233, 20
  br i1 %234, label %235, label %429

235:                                              ; preds = %230
  %236 = getelementptr inbounds %struct.unop, ptr %228, i64 0, i32 7
  %237 = load ptr, ptr %236, align 8, !tbaa !36
  %238 = icmp eq ptr %237, null
  br i1 %238, label %429, label %239

239:                                              ; preds = %235
  %240 = getelementptr inbounds %struct.listop, ptr %237, i64 0, i32 4
  %241 = load i16, ptr %240, align 8
  %242 = and i16 %241, 511
  %243 = icmp eq i16 %242, 0
  br i1 %243, label %244, label %429

244:                                              ; preds = %239
  %245 = getelementptr inbounds %struct.listop, ptr %237, i64 0, i32 3
  %246 = load i64, ptr %245, align 8, !tbaa !117
  %247 = icmp eq i64 %246, 158
  br i1 %247, label %248, label %429

248:                                              ; preds = %244
  %249 = getelementptr inbounds %struct.listop, ptr %237, i64 0, i32 7
  %250 = load ptr, ptr %249, align 8, !tbaa !81
  %251 = getelementptr inbounds %struct.op, ptr %250, i64 0, i32 4
  %252 = load i16, ptr %251, align 8
  %253 = and i16 %252, 511
  %254 = icmp eq i16 %253, 3
  %255 = getelementptr inbounds %struct.listop, ptr %237, i64 0, i32 8
  %256 = load ptr, ptr %255, align 8, !tbaa !83
  br i1 %254, label %259, label %257

257:                                              ; preds = %248
  %258 = icmp eq ptr %250, %256
  br i1 %258, label %259, label %429

259:                                              ; preds = %248, %257
  %260 = phi ptr [ %250, %257 ], [ %256, %248 ]
  %261 = getelementptr inbounds %struct.unop, ptr %260, i64 0, i32 4
  %262 = load i16, ptr %261, align 8
  %263 = and i16 %262, 511
  %264 = icmp eq i16 %263, 17
  br i1 %264, label %265, label %429

265:                                              ; preds = %259
  %266 = or i8 %31, -128
  store i8 %266, ptr %30, align 1, !tbaa !33
  %267 = getelementptr inbounds %struct.op, ptr %219, i64 0, i32 6
  %268 = load i8, ptr %267, align 1, !tbaa !33
  %269 = or i8 %268, 4
  store i8 %269, ptr %267, align 1, !tbaa !33
  %270 = getelementptr inbounds %struct.unop, ptr %260, i64 0, i32 6
  %271 = load i8, ptr %270, align 1, !tbaa !97
  %272 = or i8 %271, 32
  store i8 %272, ptr %270, align 1, !tbaa !97
  br label %429

273:                                              ; preds = %40
  tail call fastcc void @S_inplace_aassign(ptr noundef nonnull %3)
  br label %429

274:                                              ; preds = %40, %40
  %275 = getelementptr inbounds %struct.logop, ptr %3, i64 0, i32 7
  %276 = load ptr, ptr %275, align 8, !tbaa !101
  %277 = getelementptr inbounds %struct.op, ptr %276, i64 0, i32 4
  %278 = load i16, ptr %277, align 8
  %279 = and i16 %278, 511
  %280 = icmp eq i16 %279, 103
  br i1 %280, label %281, label %294

281:                                              ; preds = %274
  %282 = getelementptr inbounds %struct.op, ptr %276, i64 0, i32 5
  %283 = load i8, ptr %282, align 2, !tbaa !35
  %284 = and i8 %283, 4
  %285 = icmp eq i8 %284, 0
  br i1 %285, label %294, label %286

286:                                              ; preds = %281
  %287 = icmp eq i16 %9, 176
  %288 = and i16 %8, -512
  %289 = select i1 %287, i16 177, i16 176
  %290 = select i1 %287, ptr getelementptr inbounds ([0 x ptr], ptr @PL_ppaddr, i64 0, i64 177), ptr getelementptr inbounds ([0 x ptr], ptr @PL_ppaddr, i64 0, i64 176)
  %291 = or i16 %288, %289
  store i16 %291, ptr %7, align 8
  %292 = load ptr, ptr %290, align 8, !tbaa !6
  %293 = getelementptr inbounds %struct.op, ptr %3, i64 0, i32 2
  store ptr %292, ptr %293, align 8
  tail call void @Perl_op_null(ptr noundef nonnull %276)
  br label %294

294:                                              ; preds = %274, %281, %286, %40, %40, %40, %40
  %295 = getelementptr inbounds %struct.unop, ptr %3, i64 0, i32 7
  %296 = load ptr, ptr %295, align 8, !tbaa !36
  %297 = getelementptr inbounds %struct.op, ptr %296, i64 0, i32 1
  %298 = load ptr, ptr %297, align 8, !tbaa !38
  %299 = icmp eq ptr %298, null
  br i1 %299, label %429, label %300

300:                                              ; preds = %294, %323
  %301 = phi ptr [ %328, %323 ], [ %298, %294 ]
  %302 = phi i64 [ %326, %323 ], [ %6, %294 ]
  %303 = phi i64 [ %325, %323 ], [ %5, %294 ]
  %304 = phi ptr [ %324, %323 ], [ %4, %294 ]
  %305 = getelementptr inbounds %struct.op, ptr %301, i64 0, i32 5
  %306 = load i8, ptr %305, align 2, !tbaa !35
  %307 = and i8 %306, 4
  %308 = icmp eq i8 %307, 0
  br i1 %308, label %309, label %311

309:                                              ; preds = %300
  %310 = tail call ptr @Perl_scalarvoid(ptr noundef nonnull %301)
  br label %323

311:                                              ; preds = %300
  %312 = add nsw i64 %302, -1
  %313 = icmp eq i64 %303, %312
  br i1 %313, label %314, label %318

314:                                              ; preds = %311
  %315 = add nsw i64 %302, 100
  %316 = shl i64 %315, 3
  %317 = tail call ptr @Perl_safesysrealloc(ptr noundef %304, i64 noundef %316) #29
  br label %318

318:                                              ; preds = %311, %314
  %319 = phi ptr [ %317, %314 ], [ %304, %311 ]
  %320 = phi i64 [ %315, %314 ], [ %302, %311 ]
  %321 = add nsw i64 %303, 1
  %322 = getelementptr inbounds ptr, ptr %319, i64 %321
  store ptr %301, ptr %322, align 8, !tbaa !6
  br label %323

323:                                              ; preds = %309, %318
  %324 = phi ptr [ %319, %318 ], [ %304, %309 ]
  %325 = phi i64 [ %321, %318 ], [ %303, %309 ]
  %326 = phi i64 [ %320, %318 ], [ %302, %309 ]
  %327 = getelementptr inbounds %struct.op, ptr %301, i64 0, i32 1
  %328 = load ptr, ptr %327, align 8, !tbaa !38
  %329 = icmp eq ptr %328, null
  br i1 %329, label %429, label %300, !llvm.loop !118

330:                                              ; preds = %40
  %331 = and i8 %18, 68
  %332 = icmp eq i8 %331, 4
  br i1 %332, label %336, label %429

333:                                              ; preds = %40, %40, %40, %40
  %334 = and i8 %18, 4
  %335 = icmp eq i8 %334, 0
  br i1 %335, label %429, label %336

336:                                              ; preds = %330, %370, %402, %407, %40, %40, %40, %40, %40, %40, %40, %333
  %337 = getelementptr inbounds %struct.listop, ptr %3, i64 0, i32 7
  %338 = load ptr, ptr %337, align 8, !tbaa !6
  %339 = icmp eq ptr %338, null
  br i1 %339, label %429, label %340

340:                                              ; preds = %336, %363
  %341 = phi ptr [ %368, %363 ], [ %338, %336 ]
  %342 = phi i64 [ %366, %363 ], [ %6, %336 ]
  %343 = phi i64 [ %365, %363 ], [ %5, %336 ]
  %344 = phi ptr [ %364, %363 ], [ %4, %336 ]
  %345 = getelementptr inbounds %struct.op, ptr %341, i64 0, i32 5
  %346 = load i8, ptr %345, align 2, !tbaa !35
  %347 = and i8 %346, 4
  %348 = icmp eq i8 %347, 0
  br i1 %348, label %349, label %351

349:                                              ; preds = %340
  %350 = tail call ptr @Perl_scalarvoid(ptr noundef nonnull %341)
  br label %363

351:                                              ; preds = %340
  %352 = add nsw i64 %342, -1
  %353 = icmp eq i64 %343, %352
  br i1 %353, label %354, label %358

354:                                              ; preds = %351
  %355 = add nsw i64 %342, 100
  %356 = shl i64 %355, 3
  %357 = tail call ptr @Perl_safesysrealloc(ptr noundef %344, i64 noundef %356) #29
  br label %358

358:                                              ; preds = %351, %354
  %359 = phi ptr [ %357, %354 ], [ %344, %351 ]
  %360 = phi i64 [ %355, %354 ], [ %342, %351 ]
  %361 = add nsw i64 %343, 1
  %362 = getelementptr inbounds ptr, ptr %359, i64 %361
  store ptr %341, ptr %362, align 8, !tbaa !6
  br label %363

363:                                              ; preds = %349, %358
  %364 = phi ptr [ %359, %358 ], [ %344, %349 ]
  %365 = phi i64 [ %361, %358 ], [ %343, %349 ]
  %366 = phi i64 [ %360, %358 ], [ %342, %349 ]
  %367 = getelementptr inbounds %struct.op, ptr %341, i64 0, i32 1
  %368 = load ptr, ptr %367, align 8, !tbaa !6
  %369 = icmp eq ptr %368, null
  br i1 %369, label %429, label %340, !llvm.loop !119

370:                                              ; preds = %40
  %371 = getelementptr inbounds %struct.listop, ptr %3, i64 0, i32 7
  %372 = load ptr, ptr %371, align 8, !tbaa !6
  %373 = getelementptr inbounds %struct.op, ptr %372, i64 0, i32 4
  %374 = load i16, ptr %373, align 8
  %375 = and i16 %374, 511
  %376 = icmp eq i16 %375, 3
  br i1 %376, label %377, label %336

377:                                              ; preds = %370
  %378 = getelementptr inbounds %struct.op, ptr %372, i64 0, i32 1
  %379 = load ptr, ptr %378, align 8, !tbaa !38
  %380 = icmp eq ptr %379, null
  br i1 %380, label %407, label %381

381:                                              ; preds = %377
  %382 = getelementptr inbounds %struct.op, ptr %379, i64 0, i32 4
  %383 = load i16, ptr %382, align 8
  %384 = and i16 %383, 511
  %385 = add nsw i16 %384, -9
  %386 = icmp ult i16 %385, 3
  br i1 %386, label %387, label %407

387:                                              ; preds = %381
  %388 = getelementptr inbounds %struct.op, ptr %379, i64 0, i32 6
  %389 = load i8, ptr %388, align 1, !tbaa !33
  %390 = and i8 %389, 127
  %391 = icmp eq i8 %390, 0
  br i1 %391, label %392, label %407

392:                                              ; preds = %387
  %393 = getelementptr inbounds %struct.op, ptr %379, i64 0, i32 1
  %394 = load ptr, ptr %393, align 8, !tbaa !38
  %395 = icmp eq ptr %394, null
  br i1 %395, label %407, label %396

396:                                              ; preds = %392
  %397 = getelementptr inbounds %struct.op, ptr %394, i64 0, i32 4
  %398 = load i16, ptr %397, align 8
  %399 = and i16 %398, 511
  %400 = add nsw i16 %399, -9
  %401 = icmp ult i16 %400, 3
  br i1 %401, label %402, label %407

402:                                              ; preds = %396
  %403 = getelementptr inbounds %struct.op, ptr %394, i64 0, i32 6
  %404 = load i8, ptr %403, align 1, !tbaa !33
  %405 = and i8 %404, 127
  %406 = icmp eq i8 %405, 0
  br i1 %406, label %336, label %407

407:                                              ; preds = %396, %381, %402, %392, %387, %377
  tail call void @Perl_op_null(ptr noundef nonnull %372)
  tail call void @Perl_op_null(ptr noundef nonnull %3)
  br label %336

408:                                              ; preds = %40
  %409 = tail call fastcc ptr @S_scalarkids(ptr noundef nonnull %3)
  br label %429

410:                                              ; preds = %40
  %411 = tail call ptr @Perl_scalar(ptr noundef nonnull %3)
  br label %429

412:                                              ; preds = %136, %137, %139, %157, %183
  %413 = phi ptr [ @.str.22, %183 ], [ null, %157 ], [ null, %139 ], [ null, %137 ], [ null, %136 ]
  tail call void @Perl_op_null(ptr noundef nonnull %3)
  br label %419

414:                                              ; preds = %192, %180, %182
  %415 = phi ptr [ %193, %192 ], [ %176, %180 ], [ %176, %182 ]
  tail call void @Perl_op_null(ptr noundef nonnull %3)
  %416 = icmp eq ptr %415, null
  br i1 %416, label %429, label %417

417:                                              ; preds = %414
  %418 = tail call ptr @Perl_sv_2mortal(ptr noundef nonnull %415) #29
  tail call void (i32, ptr, ...) @Perl_ck_warner(i32 noundef 45, ptr noundef nonnull @.str.23, ptr noundef %418) #29
  br label %429

419:                                              ; preds = %79, %81, %69, %71, %105, %412
  %420 = phi ptr [ %413, %412 ], [ %84, %81 ], [ %80, %79 ], [ %74, %71 ], [ %70, %69 ], [ %106, %105 ]
  %421 = icmp eq ptr %420, null
  br i1 %421, label %429, label %427

422:                                              ; preds = %107
  %423 = trunc i16 %113 to i8
  %424 = lshr i8 53, %423
  %425 = and i8 %424, 1
  %426 = icmp eq i8 %425, 0
  br i1 %426, label %65, label %427

427:                                              ; preds = %422, %126, %122, %115, %40, %419
  %428 = phi ptr [ %420, %419 ], [ @.str.16, %115 ], [ @.str.17, %40 ], [ @.str.18, %122 ], [ @.str.18, %126 ], [ @.str.15, %422 ]
  tail call void (i32, ptr, ...) @Perl_ck_warner(i32 noundef 45, ptr noundef nonnull @.str.24, ptr noundef nonnull %428) #29
  br label %429

429:                                              ; preds = %363, %323, %336, %294, %115, %53, %44, %410, %408, %333, %330, %273, %209, %204, %199, %194, %120, %126, %94, %101, %89, %85, %75, %63, %259, %257, %235, %239, %244, %226, %230, %217, %221, %214, %265, %414, %417, %427, %419, %34, %24, %16, %28, %28, %28
  %430 = phi ptr [ %4, %28 ], [ %4, %28 ], [ %4, %28 ], [ %4, %16 ], [ %4, %24 ], [ %4, %34 ], [ %4, %419 ], [ %4, %427 ], [ %4, %417 ], [ %4, %414 ], [ %4, %53 ], [ %4, %44 ], [ %4, %410 ], [ %4, %408 ], [ %4, %333 ], [ %4, %330 ], [ %4, %273 ], [ %4, %209 ], [ %4, %204 ], [ %4, %199 ], [ %4, %194 ], [ %4, %120 ], [ %4, %126 ], [ %4, %94 ], [ %4, %101 ], [ %4, %89 ], [ %4, %85 ], [ %4, %75 ], [ %4, %63 ], [ %4, %259 ], [ %4, %257 ], [ %4, %235 ], [ %4, %239 ], [ %4, %244 ], [ %4, %226 ], [ %4, %230 ], [ %4, %217 ], [ %4, %221 ], [ %4, %214 ], [ %4, %265 ], [ %4, %115 ], [ %4, %294 ], [ %4, %336 ], [ %324, %323 ], [ %364, %363 ]
  %431 = phi i64 [ %5, %28 ], [ %5, %28 ], [ %5, %28 ], [ %5, %16 ], [ %5, %24 ], [ %5, %34 ], [ %5, %419 ], [ %5, %427 ], [ %5, %417 ], [ %5, %414 ], [ %5, %53 ], [ %5, %44 ], [ %5, %410 ], [ %5, %408 ], [ %5, %333 ], [ %5, %330 ], [ %5, %273 ], [ %5, %209 ], [ %5, %204 ], [ %5, %199 ], [ %5, %194 ], [ %5, %120 ], [ %5, %126 ], [ %5, %94 ], [ %5, %101 ], [ %5, %89 ], [ %5, %85 ], [ %5, %75 ], [ %5, %63 ], [ %5, %259 ], [ %5, %257 ], [ %5, %235 ], [ %5, %239 ], [ %5, %244 ], [ %5, %226 ], [ %5, %230 ], [ %5, %217 ], [ %5, %221 ], [ %5, %214 ], [ %5, %265 ], [ %5, %115 ], [ %5, %294 ], [ %5, %336 ], [ %325, %323 ], [ %365, %363 ]
  %432 = phi i64 [ %6, %28 ], [ %6, %28 ], [ %6, %28 ], [ %6, %16 ], [ %6, %24 ], [ %6, %34 ], [ %6, %419 ], [ %6, %427 ], [ %6, %417 ], [ %6, %414 ], [ %6, %53 ], [ %6, %44 ], [ %6, %410 ], [ %6, %408 ], [ %6, %333 ], [ %6, %330 ], [ %6, %273 ], [ %6, %209 ], [ %6, %204 ], [ %6, %199 ], [ %6, %194 ], [ %6, %120 ], [ %6, %126 ], [ %6, %94 ], [ %6, %101 ], [ %6, %89 ], [ %6, %85 ], [ %6, %75 ], [ %6, %63 ], [ %6, %259 ], [ %6, %257 ], [ %6, %235 ], [ %6, %239 ], [ %6, %244 ], [ %6, %226 ], [ %6, %230 ], [ %6, %217 ], [ %6, %221 ], [ %6, %214 ], [ %6, %265 ], [ %6, %115 ], [ %6, %294 ], [ %6, %336 ], [ %326, %323 ], [ %366, %363 ]
  %433 = icmp sgt i64 %431, -1
  br i1 %433, label %434, label %439

434:                                              ; preds = %429
  %435 = add nsw i64 %431, -1
  %436 = getelementptr inbounds ptr, ptr %430, i64 %431
  %437 = load ptr, ptr %436, align 8, !tbaa !6
  %438 = icmp eq ptr %437, null
  br i1 %438, label %439, label %2, !llvm.loop !120

439:                                              ; preds = %429, %434
  tail call void @Perl_safesysfree(ptr noundef %430) #29
  ret ptr %0
}

; Function Attrs: nofree nosync nounwind sspstrong memory(readwrite, inaccessiblemem: none) uwtable
define dso_local ptr @Perl_op_linklist(ptr noundef %0) local_unnamed_addr #9 {
  %2 = load ptr, ptr %0, align 8, !tbaa !25
  %3 = icmp eq ptr %2, null
  br i1 %3, label %4, label %34

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.unop, ptr %0, i64 0, i32 7
  %6 = load ptr, ptr %5, align 8, !tbaa !36
  %7 = icmp eq ptr %6, null
  br i1 %7, label %33, label %8

8:                                                ; preds = %4
  %9 = load ptr, ptr %6, align 8, !tbaa !25
  %10 = icmp eq ptr %9, null
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = tail call ptr @Perl_op_linklist(ptr noundef nonnull %6)
  br label %13

13:                                               ; preds = %8, %11
  %14 = phi ptr [ %12, %11 ], [ %9, %8 ]
  store ptr %14, ptr %0, align 8, !tbaa !25
  %15 = getelementptr inbounds %struct.op, ptr %6, i64 0, i32 1
  %16 = load ptr, ptr %15, align 8, !tbaa !38
  %17 = icmp eq ptr %16, null
  br i1 %17, label %18, label %21

18:                                               ; preds = %28, %13
  %19 = phi ptr [ %6, %13 ], [ %22, %28 ]
  store ptr %0, ptr %19, align 8, !tbaa !25
  %20 = load ptr, ptr %0, align 8, !tbaa !25
  br label %34

21:                                               ; preds = %13, %28
  %22 = phi ptr [ %31, %28 ], [ %16, %13 ]
  %23 = phi ptr [ %22, %28 ], [ %6, %13 ]
  %24 = load ptr, ptr %22, align 8, !tbaa !25
  %25 = icmp eq ptr %24, null
  br i1 %25, label %26, label %28

26:                                               ; preds = %21
  %27 = tail call ptr @Perl_op_linklist(ptr noundef nonnull %22)
  br label %28

28:                                               ; preds = %26, %21
  %29 = phi ptr [ %27, %26 ], [ %24, %21 ]
  store ptr %29, ptr %23, align 8, !tbaa !25
  %30 = getelementptr inbounds %struct.op, ptr %22, i64 0, i32 1
  %31 = load ptr, ptr %30, align 8, !tbaa !38
  %32 = icmp eq ptr %31, null
  br i1 %32, label %18, label %21

33:                                               ; preds = %4
  store ptr %0, ptr %0, align 8, !tbaa !25
  br label %34

34:                                               ; preds = %33, %18, %1
  %35 = phi ptr [ %2, %1 ], [ %20, %18 ], [ %0, %33 ]
  ret ptr %35
}

declare void @Perl_ck_warner(i32 noundef, ptr noundef, ...) local_unnamed_addr #6

declare zeroext i1 @Perl_ckwarn(i32 noundef) local_unnamed_addr #6

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @S_op_varname(ptr nocapture noundef readonly %0) unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 4
  %3 = load i16, ptr %2, align 8
  %4 = and i16 %3, 511
  %5 = icmp eq i16 %4, 10
  %6 = icmp eq i16 %4, 135
  %7 = or i1 %5, %6
  %8 = select i1 %7, i8 64, i8 37
  switch i16 %4, label %22 [
    i16 135, label %9
    i16 149, label %9
  ]

9:                                                ; preds = %1, %1
  %10 = getelementptr inbounds %struct.unop, ptr %0, i64 0, i32 7
  %11 = load ptr, ptr %10, align 8, !tbaa !36
  %12 = getelementptr inbounds %struct.op, ptr %11, i64 0, i32 4
  %13 = load i16, ptr %12, align 8
  %14 = and i16 %13, 511
  %15 = icmp eq i16 %14, 7
  br i1 %15, label %16, label %27

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct.svop, ptr %11, i64 0, i32 7
  %18 = load ptr, ptr %17, align 8, !tbaa !65
  %19 = icmp eq ptr %18, null
  br i1 %19, label %27, label %20

20:                                               ; preds = %16
  %21 = tail call ptr @Perl_varname(ptr noundef nonnull %18, i8 noundef signext %8, i64 noundef 0, ptr noundef null, i32 noundef 0, i32 noundef 1) #29
  br label %27

22:                                               ; preds = %1
  %23 = load ptr, ptr @PL_compcv, align 8, !tbaa !6
  %24 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 3
  %25 = load i64, ptr %24, align 8, !tbaa !34
  %26 = tail call ptr @Perl_varname(ptr noundef %23, i8 noundef signext %8, i64 noundef %25, ptr noundef null, i32 noundef 0, i32 noundef 1) #29
  br label %27

27:                                               ; preds = %20, %16, %9, %22
  %28 = phi ptr [ %26, %22 ], [ %21, %20 ], [ null, %16 ], [ null, %9 ]
  ret ptr %28
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @S_op_pretty(ptr nocapture noundef readonly %0, ptr nocapture noundef writeonly %1, ptr nocapture noundef writeonly %2) unnamed_addr #4 {
  %4 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 4
  %5 = load i16, ptr %4, align 8
  %6 = and i16 %5, 511
  %7 = icmp eq i16 %6, 5
  br i1 %7, label %8, label %33

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.svop, ptr %0, i64 0, i32 7
  %10 = load ptr, ptr %9, align 8, !tbaa !65
  store ptr %10, ptr %1, align 8, !tbaa !6
  %11 = getelementptr inbounds %struct.sv, ptr %10, i64 0, i32 2
  %12 = load i32, ptr %11, align 4, !tbaa !84
  %13 = and i32 %12, 1024
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %23, label %15

15:                                               ; preds = %8
  %16 = tail call ptr @Perl_sv_newmortal() #29
  store ptr %16, ptr %1, align 8, !tbaa !6
  %17 = getelementptr inbounds %struct.sv, ptr %10, i64 0, i32 3
  %18 = load ptr, ptr %17, align 8, !tbaa !13
  %19 = load ptr, ptr %10, align 8, !tbaa !85
  %20 = getelementptr inbounds %struct.xpv, ptr %19, i64 0, i32 2
  %21 = load i64, ptr %20, align 8, !tbaa !86
  %22 = tail call ptr @Perl_pv_pretty(ptr noundef %16, ptr noundef %18, i64 noundef %21, i64 noundef 32, ptr noundef null, ptr noundef null, i32 noundef 515) #29
  br label %34

23:                                               ; preds = %8
  %24 = and i32 %12, 65280
  %25 = icmp ne i32 %24, 0
  %26 = and i32 %12, 255
  %27 = icmp eq i32 %26, 8
  %28 = or i1 %25, %27
  %29 = and i32 %12, 16826623
  %30 = icmp eq i32 %29, 16777226
  %31 = or i1 %30, %28
  br i1 %31, label %34, label %32

32:                                               ; preds = %23
  store ptr @.str.13, ptr %2, align 8, !tbaa !6
  br label %34

33:                                               ; preds = %3
  store ptr @.str.14, ptr %2, align 8, !tbaa !6
  br label %34

34:                                               ; preds = %15, %32, %23, %33
  ret void
}

declare void @Perl_sv_chop(ptr noundef, ptr noundef) local_unnamed_addr #6

declare void @Perl_warner(i32 noundef, ptr noundef, ...) local_unnamed_addr #6

declare ptr @Perl_varname(ptr noundef, i8 noundef signext, i64 noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #6

declare ptr @Perl_sv_newmortal() local_unnamed_addr #6

declare ptr @Perl_pv_pretty(ptr noundef, ptr noundef, i64 noundef, i64 noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @S_no_bareword_allowed(ptr nocapture noundef %0) unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.svop, ptr %0, i64 0, i32 7
  %3 = load ptr, ptr %2, align 8, !tbaa !65
  %4 = tail call ptr (ptr, ...) @Perl_mess(ptr noundef nonnull @.str.25, ptr noundef %3) #29
  tail call void @Perl_qerror(ptr noundef %4) #29
  %5 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 6
  %6 = load i8, ptr %5, align 1, !tbaa !33
  %7 = and i8 %6, -9
  store i8 %7, ptr %5, align 1, !tbaa !33
  ret void
}

declare nofpclass(nan inf) double @Perl_sv_2nv_flags(ptr noundef, i32 noundef) local_unnamed_addr #6

declare ptr @Perl_newSVpvn(ptr noundef, i64 noundef) local_unnamed_addr #6

declare ptr @Perl_newSVpvf(ptr noundef, ...) local_unnamed_addr #6

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @S_inplace_aassign(ptr noundef %0) unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.unop, ptr %0, i64 0, i32 7
  %3 = load ptr, ptr %2, align 8, !tbaa !36
  %4 = getelementptr inbounds %struct.unop, ptr %3, i64 0, i32 7
  %5 = load ptr, ptr %4, align 8, !tbaa !36
  %6 = getelementptr inbounds %struct.op, ptr %5, i64 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !38
  %8 = getelementptr inbounds %struct.op, ptr %7, i64 0, i32 4
  %9 = load i16, ptr %8, align 8
  %10 = and i16 %9, 511
  %11 = add nsw i16 %10, -167
  %12 = icmp ult i16 %11, 2
  br i1 %12, label %13, label %109

13:                                               ; preds = %1
  %14 = getelementptr inbounds %struct.op, ptr %7, i64 0, i32 1
  %15 = load ptr, ptr %14, align 8, !tbaa !38
  %16 = icmp eq ptr %15, null
  br i1 %16, label %17, label %109

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.unop, ptr %7, i64 0, i32 7
  %19 = load ptr, ptr %18, align 8, !tbaa !36
  %20 = getelementptr inbounds %struct.op, ptr %19, i64 0, i32 1
  %21 = load ptr, ptr %20, align 8, !tbaa !38
  %22 = icmp eq ptr %21, null
  br i1 %22, label %109, label %23

23:                                               ; preds = %17
  %24 = getelementptr inbounds %struct.op, ptr %7, i64 0, i32 5
  %25 = load i8, ptr %24, align 2, !tbaa !35
  %26 = and i8 %25, 64
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %struct.op, ptr %21, i64 0, i32 1
  %30 = load ptr, ptr %29, align 8, !tbaa !38
  br label %31

31:                                               ; preds = %28, %23
  %32 = phi ptr [ %30, %28 ], [ %21, %23 ]
  %33 = getelementptr inbounds %struct.op, ptr %3, i64 0, i32 1
  %34 = load ptr, ptr %33, align 8, !tbaa !38
  %35 = getelementptr inbounds %struct.unop, ptr %34, i64 0, i32 7
  %36 = load ptr, ptr %35, align 8, !tbaa !36
  %37 = getelementptr inbounds %struct.op, ptr %36, i64 0, i32 1
  %38 = load ptr, ptr %37, align 8, !tbaa !38
  %39 = icmp eq ptr %38, null
  br i1 %39, label %109, label %40

40:                                               ; preds = %31
  %41 = getelementptr inbounds %struct.op, ptr %38, i64 0, i32 4
  %42 = load i16, ptr %41, align 8
  %43 = and i16 %42, 511
  switch i16 %43, label %109 [
    i16 135, label %44
    i16 10, label %44
  ]

44:                                               ; preds = %40, %40
  %45 = getelementptr inbounds %struct.op, ptr %38, i64 0, i32 1
  %46 = load ptr, ptr %45, align 8, !tbaa !38
  %47 = icmp eq ptr %46, null
  br i1 %47, label %48, label %109

48:                                               ; preds = %44
  %49 = getelementptr inbounds %struct.op, ptr %38, i64 0, i32 6
  %50 = load i8, ptr %49, align 1, !tbaa !33
  %51 = icmp sgt i8 %50, -1
  br i1 %51, label %52, label %109

52:                                               ; preds = %48
  %53 = getelementptr inbounds %struct.op, ptr %32, i64 0, i32 1
  %54 = load ptr, ptr %53, align 8, !tbaa !38
  %55 = icmp eq ptr %54, null
  br i1 %55, label %56, label %109

56:                                               ; preds = %52
  %57 = icmp eq i16 %43, 135
  %58 = getelementptr inbounds %struct.op, ptr %32, i64 0, i32 4
  %59 = load i16, ptr %58, align 8
  %60 = and i16 %59, 511
  br i1 %57, label %61, label %85

61:                                               ; preds = %56
  %62 = icmp eq i16 %60, 135
  br i1 %62, label %63, label %109

63:                                               ; preds = %61
  %64 = getelementptr inbounds %struct.unop, ptr %32, i64 0, i32 7
  %65 = load ptr, ptr %64, align 8, !tbaa !36
  %66 = icmp eq ptr %65, null
  br i1 %66, label %109, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %struct.op, ptr %65, i64 0, i32 4
  %69 = load i16, ptr %68, align 8
  %70 = and i16 %69, 511
  %71 = icmp eq i16 %70, 7
  br i1 %71, label %72, label %109

72:                                               ; preds = %67
  %73 = getelementptr inbounds %struct.unop, ptr %38, i64 0, i32 7
  %74 = load ptr, ptr %73, align 8, !tbaa !36
  %75 = getelementptr inbounds %struct.op, ptr %74, i64 0, i32 4
  %76 = load i16, ptr %75, align 8
  %77 = and i16 %76, 511
  %78 = icmp eq i16 %77, 7
  br i1 %78, label %79, label %109

79:                                               ; preds = %72
  %80 = getelementptr inbounds %struct.svop, ptr %74, i64 0, i32 7
  %81 = load ptr, ptr %80, align 8, !tbaa !65
  %82 = getelementptr inbounds %struct.svop, ptr %65, i64 0, i32 7
  %83 = load ptr, ptr %82, align 8, !tbaa !65
  %84 = icmp eq ptr %81, %83
  br i1 %84, label %93, label %109

85:                                               ; preds = %56
  %86 = icmp eq i16 %60, 10
  br i1 %86, label %87, label %109

87:                                               ; preds = %85
  %88 = getelementptr inbounds %struct.op, ptr %32, i64 0, i32 3
  %89 = load i64, ptr %88, align 8, !tbaa !34
  %90 = getelementptr inbounds %struct.op, ptr %38, i64 0, i32 3
  %91 = load i64, ptr %90, align 8, !tbaa !34
  %92 = icmp eq i64 %89, %91
  br i1 %92, label %93, label %109

93:                                               ; preds = %87, %79
  %94 = getelementptr inbounds %struct.op, ptr %7, i64 0, i32 6
  %95 = load i8, ptr %94, align 1, !tbaa !33
  %96 = or i8 %95, 8
  store i8 %96, ptr %94, align 1, !tbaa !33
  %97 = getelementptr inbounds %struct.op, ptr %38, i64 0, i32 5
  %98 = load i8, ptr %97, align 2, !tbaa !35
  %99 = getelementptr inbounds %struct.op, ptr %32, i64 0, i32 5
  store i8 %98, ptr %99, align 2, !tbaa !35
  tail call void @Perl_op_null(ptr noundef nonnull %0)
  tail call void @Perl_op_null(ptr noundef nonnull %36)
  %100 = load i16, ptr %41, align 8
  %101 = and i16 %100, 511
  %102 = icmp eq i16 %101, 135
  br i1 %102, label %103, label %108

103:                                              ; preds = %93
  %104 = getelementptr inbounds %struct.unop, ptr %38, i64 0, i32 7
  %105 = load ptr, ptr %104, align 8, !tbaa !36
  %106 = icmp eq ptr %105, null
  br i1 %106, label %108, label %107

107:                                              ; preds = %103
  tail call void @Perl_op_null(ptr noundef nonnull %105)
  br label %108

108:                                              ; preds = %107, %103, %93
  tail call void @Perl_op_null(ptr noundef nonnull %38)
  br label %109

109:                                              ; preds = %1, %85, %87, %61, %63, %67, %72, %79, %52, %31, %48, %44, %40, %17, %13, %108
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @S_scalarkids(ptr noundef readonly returned %0) unnamed_addr #4 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %18, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 5
  %5 = load i8, ptr %4, align 2, !tbaa !35
  %6 = and i8 %5, 4
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %18, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.listop, ptr %0, i64 0, i32 7
  %10 = load ptr, ptr %9, align 8, !tbaa !6
  %11 = icmp eq ptr %10, null
  br i1 %11, label %18, label %12

12:                                               ; preds = %8, %12
  %13 = phi ptr [ %16, %12 ], [ %10, %8 ]
  %14 = tail call ptr @Perl_scalar(ptr noundef nonnull %13)
  %15 = getelementptr inbounds %struct.op, ptr %13, i64 0, i32 1
  %16 = load ptr, ptr %15, align 8, !tbaa !6
  %17 = icmp eq ptr %16, null
  br i1 %17, label %18, label %12, !llvm.loop !121

18:                                               ; preds = %12, %8, %3, %1
  ret ptr %0
}

declare ptr @Perl_sv_2mortal(ptr noundef) local_unnamed_addr #6

declare void @Perl_qerror(ptr noundef) local_unnamed_addr #6

declare ptr @Perl_mess(ptr noundef, ...) local_unnamed_addr #6

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @S_gen_constant_list(ptr noundef %0) unnamed_addr #4 {
  %2 = load i64, ptr @PL_tmps_floor, align 8, !tbaa !88
  %3 = tail call ptr @Perl_list(ptr noundef %0)
  %4 = load ptr, ptr @PL_parser, align 8, !tbaa !6
  %5 = icmp eq ptr %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.yy_parser, ptr %4, i64 0, i32 44
  %8 = load i8, ptr %7, align 1, !tbaa !105
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %80

10:                                               ; preds = %6, %1
  %11 = load ptr, ptr %0, align 8, !tbaa !25
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %15

13:                                               ; preds = %10
  %14 = tail call ptr @Perl_op_linklist(ptr noundef nonnull %0)
  br label %15

15:                                               ; preds = %10, %13
  %16 = phi ptr [ %14, %13 ], [ %11, %10 ]
  store ptr null, ptr %0, align 8, !tbaa !25
  %17 = load ptr, ptr @PL_peepp, align 8, !tbaa !6
  tail call void %17(ptr noundef %16) #29
  %18 = icmp eq ptr %16, null
  br i1 %18, label %27, label %19

19:                                               ; preds = %15, %24
  %20 = phi ptr [ %25, %24 ], [ %16, %15 ]
  %21 = getelementptr inbounds %struct.op, ptr %20, i64 0, i32 4
  %22 = load i16, ptr %21, align 8
  %23 = and i16 %22, 511
  switch i16 %23, label %27 [
    i16 0, label %24
    i16 198, label %24
    i16 2, label %24
    i16 192, label %24
  ]

24:                                               ; preds = %19, %19, %19, %19
  %25 = load ptr, ptr %20, align 8, !tbaa !25
  %26 = icmp eq ptr %25, null
  br i1 %26, label %27, label %19, !llvm.loop !122

27:                                               ; preds = %19, %24, %15
  %28 = phi ptr [ null, %15 ], [ null, %24 ], [ %20, %19 ]
  store ptr %28, ptr @PL_op, align 8, !tbaa !6
  %29 = tail call ptr @Perl_pp_pushmark() #29
  %30 = load ptr, ptr @PL_runops, align 8, !tbaa !6
  %31 = tail call i32 %30() #29
  store ptr %28, ptr @PL_op, align 8, !tbaa !6
  %32 = tail call ptr @Perl_pp_anonlist() #29
  store i64 %2, ptr @PL_tmps_floor, align 8, !tbaa !88
  %33 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 4
  %34 = load i16, ptr %33, align 8
  %35 = and i16 %34, -512
  %36 = or i16 %35, 135
  store i16 %36, ptr %33, align 8
  %37 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_ppaddr, i64 0, i64 135), align 8, !tbaa !6
  %38 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 2
  store ptr %37, ptr %38, align 8, !tbaa !78
  %39 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 5
  %40 = load i8, ptr %39, align 2, !tbaa !35
  %41 = and i8 %40, -25
  %42 = or i8 %41, 8
  store i8 %42, ptr %39, align 2, !tbaa !35
  %43 = and i16 %36, -889
  store i16 %43, ptr %33, align 8
  %44 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !6
  %45 = getelementptr inbounds ptr, ptr %44, i64 -1
  store ptr %45, ptr @PL_stack_sp, align 8, !tbaa !6
  %46 = load ptr, ptr %44, align 8, !tbaa !6
  %47 = getelementptr inbounds %struct.sv, ptr %46, i64 0, i32 1
  %48 = load i32, ptr %47, align 8, !tbaa !42
  %49 = add i32 %48, 1
  store i32 %49, ptr %47, align 8, !tbaa !42
  %50 = getelementptr inbounds %struct.unop, ptr %0, i64 0, i32 7
  %51 = load ptr, ptr %50, align 8, !tbaa !36
  %52 = tail call ptr @Perl_newSVOP(i32 noundef 5, i32 noundef 0, ptr noundef %46)
  %53 = tail call ptr @Perl_op_sibling_splice(ptr noundef nonnull %0, ptr noundef null, i32 noundef -1, ptr noundef %52)
  tail call void @Perl_op_free(ptr noundef %51)
  %54 = load ptr, ptr %46, align 8, !tbaa !123
  %55 = getelementptr inbounds %struct.xpvav, ptr %54, i64 0, i32 2
  %56 = load i64, ptr %55, align 8, !tbaa !125
  %57 = icmp eq i64 %56, -1
  br i1 %57, label %73, label %58

58:                                               ; preds = %27
  %59 = getelementptr inbounds %struct.av, ptr %46, i64 0, i32 3
  %60 = icmp slt i64 %56, 0
  br i1 %60, label %73, label %61

61:                                               ; preds = %58
  %62 = load ptr, ptr %59, align 8, !tbaa !13
  %63 = getelementptr inbounds ptr, ptr %62, i64 %56
  br label %64

64:                                               ; preds = %61, %64
  %65 = phi ptr [ %70, %64 ], [ %63, %61 ]
  %66 = load ptr, ptr %65, align 8, !tbaa !6
  %67 = getelementptr inbounds %struct.sv, ptr %66, i64 0, i32 2
  %68 = load i32, ptr %67, align 4, !tbaa !84
  %69 = or i32 %68, 134414336
  store i32 %69, ptr %67, align 4, !tbaa !84
  %70 = getelementptr inbounds ptr, ptr %65, i64 -1
  %71 = load ptr, ptr %59, align 8, !tbaa !13
  %72 = icmp ult ptr %70, %71
  br i1 %72, label %73, label %64, !llvm.loop !127

73:                                               ; preds = %64, %58, %27
  %74 = load ptr, ptr %0, align 8, !tbaa !25
  %75 = icmp eq ptr %74, null
  br i1 %75, label %76, label %78

76:                                               ; preds = %73
  %77 = tail call ptr @Perl_op_linklist(ptr noundef nonnull %0)
  br label %78

78:                                               ; preds = %73, %76
  %79 = tail call ptr @Perl_list(ptr noundef nonnull %0)
  br label %80

80:                                               ; preds = %6, %78
  %81 = phi ptr [ %79, %78 ], [ %0, %6 ]
  ret ptr %81
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @S_listkids(ptr noundef readonly returned %0) unnamed_addr #4 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %18, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 5
  %5 = load i8, ptr %4, align 2, !tbaa !35
  %6 = and i8 %5, 4
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %18, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.listop, ptr %0, i64 0, i32 7
  %10 = load ptr, ptr %9, align 8, !tbaa !6
  %11 = icmp eq ptr %10, null
  br i1 %11, label %18, label %12

12:                                               ; preds = %8, %12
  %13 = phi ptr [ %16, %12 ], [ %10, %8 ]
  %14 = tail call ptr @Perl_list(ptr noundef nonnull %13)
  %15 = getelementptr inbounds %struct.op, ptr %13, i64 0, i32 1
  %16 = load ptr, ptr %15, align 8, !tbaa !6
  %17 = icmp eq ptr %16, null
  br i1 %17, label %18, label %12, !llvm.loop !115

18:                                               ; preds = %12, %8, %3, %1
  ret ptr %0
}

declare ptr @Perl_pp_pushmark() local_unnamed_addr #6

declare ptr @Perl_pp_anonlist() local_unnamed_addr #6

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_newSVOP(i32 noundef %0, i32 noundef %1, ptr noundef %2) local_unnamed_addr #4 {
  %4 = tail call ptr @Perl_Slab_Alloc(i64 noundef 48)
  %5 = trunc i32 %0 to i16
  %6 = getelementptr inbounds %struct.svop, ptr %4, i64 0, i32 4
  %7 = load i16, ptr %6, align 8
  %8 = and i16 %5, 511
  %9 = and i16 %7, -512
  %10 = or i16 %9, %8
  store i16 %10, ptr %6, align 8
  %11 = sext i32 %0 to i64
  %12 = getelementptr inbounds [0 x ptr], ptr @PL_ppaddr, i64 0, i64 %11
  %13 = load ptr, ptr %12, align 8, !tbaa !6
  %14 = getelementptr inbounds %struct.svop, ptr %4, i64 0, i32 2
  store ptr %13, ptr %14, align 8, !tbaa !128
  %15 = getelementptr inbounds %struct.svop, ptr %4, i64 0, i32 7
  store ptr %2, ptr %15, align 8, !tbaa !65
  store ptr %4, ptr %4, align 8, !tbaa !129
  %16 = trunc i32 %1 to i8
  %17 = getelementptr inbounds %struct.svop, ptr %4, i64 0, i32 5
  store i8 %16, ptr %17, align 2, !tbaa !130
  %18 = lshr i32 %1, 8
  %19 = trunc i32 %18 to i8
  %20 = getelementptr inbounds %struct.svop, ptr %4, i64 0, i32 6
  store i8 %19, ptr %20, align 1, !tbaa !76
  %21 = getelementptr inbounds [0 x i32], ptr @PL_opargs, i64 0, i64 %11
  %22 = load i32, ptr %21, align 4, !tbaa !52
  %23 = and i32 %22, 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %3
  %26 = tail call ptr @Perl_scalar(ptr noundef nonnull %4)
  br label %27

27:                                               ; preds = %25, %3
  %28 = and i32 %22, 8
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %27
  %31 = tail call i64 @Perl_pad_alloc(i32 noundef %0, i32 noundef 131072) #29
  %32 = getelementptr inbounds %struct.svop, ptr %4, i64 0, i32 3
  store i64 %31, ptr %32, align 8, !tbaa !131
  br label %33

33:                                               ; preds = %30, %27
  %34 = load ptr, ptr @PL_op_mask, align 8, !tbaa !6
  %35 = icmp eq ptr %34, null
  br i1 %35, label %43, label %36

36:                                               ; preds = %33
  %37 = getelementptr inbounds i8, ptr %34, i64 %11
  %38 = load i8, ptr %37, align 1, !tbaa !13
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %43, label %40

40:                                               ; preds = %36
  tail call void @Perl_op_free(ptr noundef nonnull %4)
  %41 = getelementptr inbounds [0 x ptr], ptr @PL_op_desc, i64 0, i64 %11
  %42 = load ptr, ptr %41, align 8, !tbaa !6
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.63, ptr noundef %42) #29
  br label %47

43:                                               ; preds = %36, %33
  %44 = getelementptr inbounds [0 x ptr], ptr @PL_check, i64 0, i64 %11
  %45 = load ptr, ptr %44, align 8, !tbaa !6
  %46 = tail call ptr %45(ptr noundef nonnull %4) #29
  br label %47

47:                                               ; preds = %43, %40
  %48 = phi ptr [ null, %40 ], [ %46, %43 ]
  ret ptr %48
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @S_check_hash_fields_and_hekify(ptr noundef readonly %0, ptr noundef %1) local_unnamed_addr #4 {
  %3 = alloca i64, align 8
  %4 = icmp eq ptr %0, null
  br i1 %4, label %42, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.unop, ptr %0, i64 0, i32 7
  %7 = load ptr, ptr %6, align 8, !tbaa !36
  %8 = getelementptr inbounds %struct.op, ptr %7, i64 0, i32 4
  %9 = load i16, ptr %8, align 8
  %10 = and i16 %9, 511
  switch i16 %10, label %42 [
    i16 9, label %18
    i16 198, label %11
  ]

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct.listop, ptr %7, i64 0, i32 8
  %13 = load ptr, ptr %12, align 8, !tbaa !83
  %14 = getelementptr inbounds %struct.op, ptr %13, i64 0, i32 4
  %15 = load i16, ptr %14, align 8
  %16 = and i16 %15, 511
  %17 = icmp eq i16 %16, 9
  br i1 %17, label %18, label %42

18:                                               ; preds = %5, %11
  %19 = phi ptr [ %7, %5 ], [ %13, %11 ]
  %20 = load ptr, ptr @PL_comppad_name, align 8, !tbaa !6
  %21 = getelementptr inbounds %struct.unop, ptr %19, i64 0, i32 3
  %22 = load i64, ptr %21, align 8, !tbaa !132
  %23 = tail call ptr @Perl_padnamelist_fetch(ptr noundef %20, i64 noundef %22) #29
  %24 = getelementptr inbounds %struct.padname, ptr %23, i64 0, i32 2
  %25 = load ptr, ptr %24, align 8, !tbaa !13
  %26 = icmp eq ptr %25, null
  br i1 %26, label %42, label %27

27:                                               ; preds = %18
  %28 = tail call ptr @Perl_hv_common(ptr noundef nonnull %25, ptr noundef null, ptr noundef nonnull @.str.26, i64 noundef 6, i32 noundef 0, i32 noundef 32, ptr noundef null, i32 noundef 0) #29
  %29 = icmp eq ptr %28, null
  br i1 %29, label %42, label %30

30:                                               ; preds = %27
  %31 = load ptr, ptr %28, align 8, !tbaa !6
  %32 = getelementptr inbounds %struct.gv, ptr %31, i64 0, i32 2
  %33 = load i32, ptr %32, align 4, !tbaa !133
  %34 = and i32 %33, 255
  %35 = icmp eq i32 %34, 9
  br i1 %35, label %36, label %42

36:                                               ; preds = %30
  %37 = getelementptr inbounds %struct.gv, ptr %31, i64 0, i32 3
  %38 = load ptr, ptr %37, align 8, !tbaa !13
  %39 = getelementptr inbounds %struct.gp, ptr %38, i64 0, i32 5
  %40 = load ptr, ptr %39, align 8, !tbaa !134
  %41 = icmp ne ptr %40, null
  br label %42

42:                                               ; preds = %11, %5, %2, %36, %30, %27, %18
  %43 = phi ptr [ %28, %36 ], [ %28, %30 ], [ null, %27 ], [ null, %18 ], [ null, %2 ], [ null, %5 ], [ null, %11 ]
  %44 = phi ptr [ %23, %36 ], [ %23, %30 ], [ %23, %27 ], [ %23, %18 ], [ null, %2 ], [ null, %5 ], [ null, %11 ]
  %45 = phi i1 [ %41, %36 ], [ false, %30 ], [ false, %27 ], [ false, %18 ], [ false, %2 ], [ false, %5 ], [ false, %11 ]
  %46 = icmp eq ptr %1, null
  br i1 %46, label %155, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %struct.padname, ptr %44, i64 0, i32 7
  %49 = getelementptr inbounds %struct.padname, ptr %44, i64 0, i32 2
  br label %50

50:                                               ; preds = %47, %151
  %51 = phi ptr [ %1, %47 ], [ %153, %151 ]
  %52 = getelementptr inbounds %struct.svop, ptr %51, i64 0, i32 4
  %53 = load i16, ptr %52, align 8
  %54 = and i16 %53, 511
  %55 = icmp eq i16 %54, 5
  br i1 %55, label %56, label %151

56:                                               ; preds = %50
  %57 = getelementptr inbounds %struct.svop, ptr %51, i64 0, i32 7
  %58 = load ptr, ptr %57, align 8, !tbaa !6
  %59 = getelementptr inbounds %struct.sv, ptr %58, i64 0, i32 2
  %60 = load i32, ptr %59, align 4, !tbaa !84
  %61 = and i32 %60, 268435456
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %71, label %63

63:                                               ; preds = %56
  %64 = load ptr, ptr %58, align 8, !tbaa !85
  %65 = getelementptr inbounds %struct.xpv, ptr %64, i64 0, i32 3
  %66 = load i64, ptr %65, align 8, !tbaa !13
  %67 = icmp ne i64 %66, 0
  %68 = and i32 %60, 255
  %69 = icmp ult i32 %68, 7
  %70 = and i1 %69, %67
  br i1 %70, label %74, label %113

71:                                               ; preds = %56
  %72 = and i32 %60, 255
  %73 = icmp ult i32 %72, 7
  br i1 %73, label %74, label %113

74:                                               ; preds = %63, %71
  %75 = and i32 %60, 65280
  %76 = icmp ne i32 %75, 0
  %77 = and i32 %60, 16826623
  %78 = icmp eq i32 %77, 16777226
  %79 = or i1 %76, %78
  %80 = and i32 %60, 2048
  %81 = icmp eq i32 %80, 0
  %82 = and i1 %81, %79
  br i1 %82, label %83, label %113

83:                                               ; preds = %74
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #29
  %84 = and i32 %60, 2098176
  %85 = icmp eq i32 %84, 1024
  br i1 %85, label %86, label %92

86:                                               ; preds = %83
  %87 = load ptr, ptr %58, align 8, !tbaa !85
  %88 = getelementptr inbounds %struct.xpv, ptr %87, i64 0, i32 2
  %89 = load i64, ptr %88, align 8, !tbaa !86
  store i64 %89, ptr %3, align 8, !tbaa !88
  %90 = getelementptr inbounds %struct.sv, ptr %58, i64 0, i32 3
  %91 = load ptr, ptr %90, align 8, !tbaa !13
  br label %96

92:                                               ; preds = %83
  %93 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %58, ptr noundef nonnull %3, i32 noundef 34) #29
  %94 = load i32, ptr %59, align 4, !tbaa !84
  %95 = load i64, ptr %3, align 8
  br label %96

96:                                               ; preds = %92, %86
  %97 = phi i64 [ %89, %86 ], [ %95, %92 ]
  %98 = phi i32 [ %60, %86 ], [ %94, %92 ]
  %99 = phi ptr [ %91, %86 ], [ %93, %92 ]
  %100 = and i32 %98, 536870912
  %101 = icmp eq i32 %100, 0
  %102 = sub nsw i64 0, %97
  %103 = select i1 %101, i64 %97, i64 %102
  %104 = trunc i64 %103 to i32
  %105 = call ptr @Perl_newSVpvn_share(ptr noundef %99, i32 noundef %104, i32 noundef 0) #29
  %106 = getelementptr inbounds %struct.sv, ptr %58, i64 0, i32 1
  %107 = load i32, ptr %106, align 8, !tbaa !42
  %108 = icmp ugt i32 %107, 1
  br i1 %108, label %109, label %111

109:                                              ; preds = %96
  %110 = add i32 %107, -1
  store i32 %110, ptr %106, align 8, !tbaa !42
  br label %112

111:                                              ; preds = %96
  call void @Perl_sv_free2(ptr noundef nonnull %58, i32 noundef %107) #29
  br label %112

112:                                              ; preds = %109, %111
  store ptr %105, ptr %57, align 8, !tbaa !6
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #29
  br label %113

113:                                              ; preds = %74, %112, %71, %63
  %114 = phi ptr [ %58, %74 ], [ %105, %112 ], [ %58, %71 ], [ %58, %63 ]
  br i1 %45, label %115, label %151

115:                                              ; preds = %113
  %116 = load ptr, ptr %43, align 8, !tbaa !6
  %117 = getelementptr inbounds %struct.gv, ptr %116, i64 0, i32 3
  %118 = load ptr, ptr %117, align 8, !tbaa !13
  %119 = getelementptr inbounds %struct.gp, ptr %118, i64 0, i32 5
  %120 = load ptr, ptr %119, align 8, !tbaa !134
  %121 = call ptr @Perl_hv_common(ptr noundef %120, ptr noundef %114, ptr noundef null, i64 noundef 0, i32 noundef 0, i32 noundef 0, ptr noundef null, i32 noundef 0) #29
  %122 = icmp eq ptr %121, null
  br i1 %122, label %123, label %151

123:                                              ; preds = %115
  %124 = load ptr, ptr %57, align 8, !tbaa !6
  %125 = load i8, ptr %48, align 8, !tbaa !136
  %126 = zext i8 %125 to i64
  %127 = load ptr, ptr %44, align 8, !tbaa !138
  %128 = load ptr, ptr %49, align 8, !tbaa !13
  %129 = getelementptr inbounds %struct.hv, ptr %128, i64 0, i32 2
  %130 = load i32, ptr %129, align 4, !tbaa !56
  %131 = and i32 %130, 33554432
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %149, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %struct.hv, ptr %128, i64 0, i32 3
  %135 = load ptr, ptr %134, align 8, !tbaa !13
  %136 = load ptr, ptr %128, align 8, !tbaa !139
  %137 = getelementptr inbounds %struct.xpvhv, ptr %136, i64 0, i32 3
  %138 = load i64, ptr %137, align 8, !tbaa !140
  %139 = add i64 %138, 1
  %140 = getelementptr inbounds ptr, ptr %135, i64 %139
  %141 = load ptr, ptr %140, align 8, !tbaa !13
  %142 = icmp eq ptr %141, null
  br i1 %142, label %149, label %143

143:                                              ; preds = %133
  %144 = getelementptr inbounds %struct.xpvhv_aux, ptr %140, i64 0, i32 4
  %145 = load i32, ptr %144, align 4, !tbaa !142
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %149, label %147

147:                                              ; preds = %143
  %148 = load ptr, ptr %141, align 8, !tbaa !6
  br label %149

149:                                              ; preds = %143, %123, %133, %147
  %150 = phi ptr [ %148, %147 ], [ null, %133 ], [ null, %123 ], [ %141, %143 ]
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.27, ptr noundef %124, i32 noundef 1, i64 noundef %126, ptr noundef %127, ptr noundef %150) #29
  br label %151

151:                                              ; preds = %113, %115, %149, %50
  %152 = getelementptr inbounds %struct.svop, ptr %51, i64 0, i32 1
  %153 = load ptr, ptr %152, align 8, !tbaa !144
  %154 = icmp eq ptr %153, null
  br i1 %154, label %155, label %50, !llvm.loop !145

155:                                              ; preds = %151, %42
  ret void
}

declare ptr @Perl_padnamelist_fetch(ptr noundef, i64 noundef) local_unnamed_addr #6

declare ptr @Perl_hv_common(ptr noundef, ptr noundef, ptr noundef, i64 noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #6

declare ptr @Perl_sv_2pv_flags(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #6

declare ptr @Perl_newSVpvn_share(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_finalize_optree(ptr noundef %0) local_unnamed_addr #4 {
  tail call void @Perl_push_scope() #29
  tail call void @Perl_save_vptr(ptr noundef nonnull @PL_curcop) #29
  tail call fastcc void @S_finalize_op(ptr noundef %0)
  tail call void @Perl_pop_scope() #29
  ret void
}

declare void @Perl_save_vptr(ptr noundef) local_unnamed_addr #6

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @S_finalize_op(ptr noundef %0) unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 4
  %3 = load i16, ptr %2, align 8
  %4 = and i16 %3, 511
  %5 = zext i16 %4 to i32
  switch i32 %5, label %123 [
    i32 193, label %6
    i32 194, label %6
    i32 315, label %7
    i32 7, label %35
    i32 5, label %61
    i32 150, label %72
    i32 151, label %81
    i32 152, label %82
    i32 139, label %117
    i32 33, label %118
  ]

6:                                                ; preds = %1, %1
  store ptr %0, ptr @PL_curcop, align 8, !tbaa !6
  br label %123

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !38
  %10 = icmp eq ptr %9, null
  br i1 %10, label %123, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.op, ptr %9, i64 0, i32 4
  %13 = load i16, ptr %12, align 8
  %14 = and i16 %13, 511
  %15 = add nsw i16 %14, -193
  %16 = icmp ult i16 %15, 2
  br i1 %16, label %17, label %123

17:                                               ; preds = %11
  %18 = tail call zeroext i1 @Perl_ckwarn(i32 noundef 7) #29
  br i1 %18, label %19, label %123

19:                                               ; preds = %17
  %20 = getelementptr inbounds %struct.op, ptr %9, i64 0, i32 1
  %21 = load ptr, ptr %20, align 8, !tbaa !38
  %22 = icmp eq ptr %21, null
  br i1 %22, label %123, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %struct.op, ptr %21, i64 0, i32 4
  %25 = load i16, ptr %24, align 8
  %26 = and i16 %25, 511
  switch i16 %26, label %27 [
    i16 209, label %123
    i16 190, label %123
    i16 189, label %123
  ]

27:                                               ; preds = %23
  %28 = load ptr, ptr @PL_curcop, align 8, !tbaa !6
  %29 = getelementptr inbounds %struct.cop, ptr %28, i64 0, i32 7
  %30 = load i32, ptr %29, align 4, !tbaa !146
  %31 = getelementptr inbounds %struct.cop, ptr %9, i64 0, i32 7
  %32 = load i32, ptr %31, align 4, !tbaa !146
  store i32 %32, ptr %29, align 4, !tbaa !146
  tail call void (i32, ptr, ...) @Perl_warner(i32 noundef 7, ptr noundef nonnull @.str.28) #29
  tail call void (i32, ptr, ...) @Perl_warner(i32 noundef 7, ptr noundef nonnull @.str.29) #29
  %33 = load ptr, ptr @PL_curcop, align 8, !tbaa !6
  %34 = getelementptr inbounds %struct.cop, ptr %33, i64 0, i32 7
  store i32 %30, ptr %34, align 4, !tbaa !146
  br label %123

35:                                               ; preds = %1
  %36 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 6
  %37 = load i8, ptr %36, align 1, !tbaa !33
  %38 = and i8 %37, 32
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %123, label %40

40:                                               ; preds = %35
  %41 = tail call zeroext i1 @Perl_ckwarn(i32 noundef 35) #29
  br i1 %41, label %42, label %123

42:                                               ; preds = %40
  %43 = getelementptr inbounds %struct.svop, ptr %0, i64 0, i32 7
  %44 = load ptr, ptr %43, align 8, !tbaa !65
  %45 = getelementptr inbounds %struct.gv, ptr %44, i64 0, i32 2
  %46 = load i32, ptr %45, align 4, !tbaa !133
  %47 = and i32 %46, 255
  %48 = icmp eq i32 %47, 9
  br i1 %48, label %49, label %123

49:                                               ; preds = %42
  %50 = getelementptr inbounds %struct.gv, ptr %44, i64 0, i32 3
  %51 = load ptr, ptr %50, align 8, !tbaa !13
  %52 = getelementptr inbounds %struct.gp, ptr %51, i64 0, i32 2
  %53 = load ptr, ptr %52, align 8, !tbaa !147
  %54 = icmp eq ptr %53, null
  br i1 %54, label %123, label %55

55:                                               ; preds = %49
  %56 = getelementptr inbounds %struct.cv, ptr %53, i64 0, i32 3
  %57 = load ptr, ptr %56, align 8, !tbaa !13
  %58 = icmp eq ptr %57, null
  br i1 %58, label %123, label %59

59:                                               ; preds = %55
  %60 = tail call ptr @Perl_sv_newmortal() #29
  tail call void @Perl_gv_efullname4(ptr noundef %60, ptr noundef nonnull %44, ptr noundef null, i1 noundef zeroext true) #29
  tail call void (i32, ptr, ...) @Perl_warner(i32 noundef 35, ptr noundef nonnull @.str.30, ptr noundef %60) #29
  br label %123

61:                                               ; preds = %1
  %62 = getelementptr inbounds %struct.svop, ptr %0, i64 0, i32 6
  %63 = load i8, ptr %62, align 1, !tbaa !76
  %64 = and i8 %63, 8
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %123, label %66

66:                                               ; preds = %61
  %67 = getelementptr inbounds %struct.svop, ptr %0, i64 0, i32 7
  %68 = load ptr, ptr %67, align 8, !tbaa !65
  %69 = tail call ptr (ptr, ...) @Perl_mess(ptr noundef nonnull @.str.25, ptr noundef %68) #29
  tail call void @Perl_qerror(ptr noundef %69) #29
  %70 = load i8, ptr %62, align 1, !tbaa !33
  %71 = and i8 %70, -9
  store i8 %71, ptr %62, align 1, !tbaa !33
  br label %123

72:                                               ; preds = %1
  %73 = getelementptr inbounds %struct.binop, ptr %0, i64 0, i32 8
  %74 = load ptr, ptr %73, align 8, !tbaa !113
  %75 = getelementptr inbounds %struct.svop, ptr %74, i64 0, i32 4
  %76 = load i16, ptr %75, align 8
  %77 = and i16 %76, 511
  %78 = icmp eq i16 %77, 5
  br i1 %78, label %79, label %123

79:                                               ; preds = %72
  %80 = getelementptr inbounds %struct.binop, ptr %0, i64 0, i32 7
  br label %102

81:                                               ; preds = %1
  tail call fastcc void @S_scalar_slice_warning(ptr noundef nonnull %0)
  br label %82

82:                                               ; preds = %1, %81
  %83 = getelementptr inbounds %struct.listop, ptr %0, i64 0, i32 7
  %84 = load ptr, ptr %83, align 8, !tbaa !81
  %85 = getelementptr inbounds %struct.op, ptr %84, i64 0, i32 1
  %86 = load ptr, ptr %85, align 8, !tbaa !38
  %87 = getelementptr inbounds %struct.op, ptr %86, i64 0, i32 4
  %88 = load i16, ptr %87, align 8
  %89 = and i16 %88, 511
  switch i16 %89, label %123 [
    i16 0, label %90
    i16 158, label %94
    i16 5, label %99
  ]

90:                                               ; preds = %82
  %91 = getelementptr inbounds %struct.op, ptr %86, i64 0, i32 3
  %92 = load i64, ptr %91, align 8, !tbaa !34
  %93 = icmp eq i64 %92, 158
  br i1 %93, label %94, label %123

94:                                               ; preds = %82, %90
  %95 = getelementptr inbounds %struct.listop, ptr %86, i64 0, i32 7
  %96 = load ptr, ptr %95, align 8, !tbaa !81
  %97 = getelementptr inbounds %struct.op, ptr %96, i64 0, i32 1
  %98 = load ptr, ptr %97, align 8, !tbaa !38
  br label %99

99:                                               ; preds = %82, %94
  %100 = phi ptr [ %98, %94 ], [ %86, %82 ]
  %101 = getelementptr inbounds %struct.listop, ptr %0, i64 0, i32 8
  br label %102

102:                                              ; preds = %99, %79
  %103 = phi ptr [ %100, %99 ], [ %74, %79 ]
  %104 = phi ptr [ %101, %99 ], [ %80, %79 ]
  %105 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 6
  %106 = load i8, ptr %105, align 1, !tbaa !33
  %107 = icmp sgt i8 %106, -1
  br i1 %107, label %108, label %114

108:                                              ; preds = %102
  %109 = load ptr, ptr %104, align 8, !tbaa !6
  %110 = getelementptr inbounds %struct.unop, ptr %109, i64 0, i32 4
  %111 = load i16, ptr %110, align 8
  %112 = and i16 %111, 511
  %113 = icmp eq i16 %112, 149
  br i1 %113, label %115, label %114

114:                                              ; preds = %108, %102
  br label %115

115:                                              ; preds = %114, %108
  %116 = phi ptr [ null, %114 ], [ %109, %108 ]
  tail call void @S_check_hash_fields_and_hekify(ptr noundef %116, ptr noundef %103)
  br label %123

117:                                              ; preds = %1
  tail call fastcc void @S_scalar_slice_warning(ptr noundef nonnull %0)
  br label %123

118:                                              ; preds = %1
  %119 = getelementptr inbounds %struct.pmop, ptr %0, i64 0, i32 11
  %120 = load ptr, ptr %119, align 8, !tbaa !13
  %121 = icmp eq ptr %120, null
  br i1 %121, label %123, label %122

122:                                              ; preds = %118
  tail call fastcc void @S_finalize_op(ptr noundef nonnull %120)
  br label %123

123:                                              ; preds = %82, %90, %11, %42, %49, %55, %59, %17, %19, %23, %23, %23, %27, %1, %118, %122, %72, %61, %66, %35, %40, %7, %117, %115, %6
  %124 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 5
  %125 = load i8, ptr %124, align 2, !tbaa !35
  %126 = and i8 %125, 4
  %127 = icmp eq i8 %126, 0
  br i1 %127, label %137, label %128

128:                                              ; preds = %123
  %129 = getelementptr inbounds %struct.unop, ptr %0, i64 0, i32 7
  %130 = load ptr, ptr %129, align 8, !tbaa !6
  %131 = icmp eq ptr %130, null
  br i1 %131, label %137, label %132

132:                                              ; preds = %128, %132
  %133 = phi ptr [ %135, %132 ], [ %130, %128 ]
  tail call fastcc void @S_finalize_op(ptr noundef nonnull %133)
  %134 = getelementptr inbounds %struct.op, ptr %133, i64 0, i32 1
  %135 = load ptr, ptr %134, align 8, !tbaa !6
  %136 = icmp eq ptr %135, null
  br i1 %136, label %137, label %132, !llvm.loop !148

137:                                              ; preds = %132, %128, %123
  ret void
}

declare void @Perl_gv_efullname4(ptr noundef, ptr noundef, ptr noundef, i1 noundef zeroext) local_unnamed_addr #6

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @S_scalar_slice_warning(ptr nocapture noundef readonly %0) unnamed_addr #4 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  %4 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 4
  %5 = load i16, ptr %4, align 8
  %6 = and i16 %5, 511
  %7 = icmp eq i16 %6, 151
  %8 = select i1 %7, i8 125, i8 93
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #29
  store ptr null, ptr %2, align 8, !tbaa !6
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #29
  store ptr null, ptr %3, align 8, !tbaa !6
  %9 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 6
  %10 = load i8, ptr %9, align 1, !tbaa !33
  %11 = and i8 %10, 4
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %52, label %13

13:                                               ; preds = %1
  %14 = load ptr, ptr @PL_parser, align 8, !tbaa !6
  %15 = icmp eq ptr %14, null
  br i1 %15, label %20, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %struct.yy_parser, ptr %14, i64 0, i32 44
  %18 = load i8, ptr %17, align 1, !tbaa !105
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %52

20:                                               ; preds = %16, %13
  %21 = getelementptr inbounds %struct.listop, ptr %0, i64 0, i32 7
  %22 = load ptr, ptr %21, align 8, !tbaa !81
  %23 = getelementptr inbounds %struct.op, ptr %22, i64 0, i32 1
  %24 = load ptr, ptr %23, align 8, !tbaa !38
  %25 = getelementptr inbounds %struct.op, ptr %24, i64 0, i32 4
  %26 = load i16, ptr %25, align 8
  %27 = and i16 %26, 511
  %28 = zext i16 %27 to i32
  switch i32 %28, label %29 [
    i32 24, label %52
    i32 25, label %52
    i32 26, label %52
    i32 31, label %52
    i32 135, label %52
    i32 144, label %52
    i32 145, label %52
    i32 146, label %52
    i32 156, label %52
    i32 158, label %52
    i32 167, label %52
    i32 168, label %52
    i32 185, label %52
    i32 188, label %52
    i32 264, label %52
    i32 265, label %52
    i32 306, label %52
    i32 314, label %52
    i32 323, label %52
    i32 324, label %52
    i32 325, label %52
    i32 342, label %52
    i32 381, label %52
    i32 382, label %52
    i32 383, label %52
  ]

29:                                               ; preds = %20
  %30 = icmp eq i16 %27, 0
  br i1 %30, label %31, label %35

31:                                               ; preds = %29
  %32 = getelementptr inbounds %struct.op, ptr %24, i64 0, i32 3
  %33 = load i64, ptr %32, align 8, !tbaa !34
  %34 = icmp eq i64 %33, 158
  br i1 %34, label %52, label %35

35:                                               ; preds = %31, %29
  %36 = getelementptr inbounds %struct.op, ptr %24, i64 0, i32 1
  %37 = load ptr, ptr %36, align 8, !tbaa !38
  %38 = tail call fastcc ptr @S_op_varname(ptr noundef %37)
  %39 = icmp eq ptr %38, null
  br i1 %39, label %52, label %40

40:                                               ; preds = %35
  call fastcc void @S_op_pretty(ptr noundef nonnull %24, ptr noundef nonnull %2, ptr noundef nonnull %3)
  %41 = getelementptr inbounds %struct.sv, ptr %38, i64 0, i32 3
  %42 = load ptr, ptr %41, align 8, !tbaa !13
  %43 = getelementptr inbounds i8, ptr %42, i64 1
  tail call void @Perl_sv_chop(ptr noundef nonnull %38, ptr noundef nonnull %43) #29
  %44 = load ptr, ptr %3, align 8, !tbaa !6
  %45 = icmp eq ptr %44, null
  %46 = select i1 %7, i32 123, i32 91
  br i1 %45, label %49, label %47

47:                                               ; preds = %40
  %48 = zext i8 %8 to i32
  tail call void (i32, ptr, ...) @Perl_warner(i32 noundef 28, ptr noundef nonnull @.str.31, ptr noundef nonnull %38, i32 noundef %46, ptr noundef nonnull %44, i32 noundef %48, ptr noundef nonnull %38, i32 noundef %46, ptr noundef nonnull %44, i32 noundef %48) #29
  br label %52

49:                                               ; preds = %40
  %50 = load ptr, ptr %2, align 8, !tbaa !6
  %51 = zext i8 %8 to i32
  tail call void (i32, ptr, ...) @Perl_warner(i32 noundef 28, ptr noundef nonnull @.str.32, ptr noundef nonnull %38, i32 noundef %46, ptr noundef %50, i32 noundef %51, ptr noundef nonnull %38, i32 noundef %46, ptr noundef %50, i32 noundef %51) #29
  br label %52

52:                                               ; preds = %47, %49, %35, %31, %20, %20, %20, %20, %20, %20, %20, %20, %20, %20, %20, %20, %20, %20, %20, %20, %20, %20, %20, %20, %20, %20, %20, %20, %20, %16, %1
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #29
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #29
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_op_lvalue_flags(ptr noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #4 {
  %4 = icmp eq ptr %0, null
  br i1 %4, label %608, label %5

5:                                                ; preds = %3
  %6 = load ptr, ptr @PL_parser, align 8, !tbaa !6
  %7 = icmp eq ptr %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %5
  %9 = getelementptr inbounds %struct.yy_parser, ptr %6, i64 0, i32 44
  %10 = load i8, ptr %9, align 1, !tbaa !105
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %608

12:                                               ; preds = %8, %5
  %13 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 6
  %14 = load i8, ptr %13, align 1, !tbaa !33
  %15 = and i8 %14, 16
  %16 = icmp eq i8 %15, 0
  %17 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 4
  %18 = load i16, ptr %17, align 8
  %19 = and i16 %18, 511
  br i1 %16, label %26, label %20

20:                                               ; preds = %12
  %21 = zext i16 %19 to i64
  %22 = getelementptr inbounds [0 x i32], ptr @PL_opargs, i64 0, i64 %21
  %23 = load i32, ptr %22, align 4, !tbaa !52
  %24 = and i32 %23, 16
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %608

26:                                               ; preds = %12, %20
  %27 = icmp eq i32 %1, 237
  %28 = icmp eq i32 %1, 125
  %29 = or i1 %27, %28
  %30 = select i1 %29, i32 185, i32 %1
  %31 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 4
  %32 = zext i16 %19 to i32
  switch i32 %32, label %158 [
    i32 44, label %36
    i32 1, label %39
    i32 185, label %44
    i32 47, label %187
    i32 49, label %187
    i32 55, label %187
    i32 56, label %187
    i32 58, label %187
    i32 60, label %187
    i32 63, label %187
    i32 65, label %187
    i32 67, label %187
    i32 69, label %187
    i32 70, label %187
    i32 92, label %187
    i32 93, label %187
    i32 94, label %187
    i32 57, label %187
    i32 59, label %187
    i32 61, label %187
    i32 64, label %187
    i32 66, label %187
    i32 62, label %195
    i32 180, label %250
    i32 135, label %262
    i32 149, label %262
    i32 14, label %270
    i32 139, label %276
    i32 151, label %276
    i32 38, label %277
    i32 193, label %291
    i32 194, label %291
    i32 152, label %293
    i32 140, label %293
    i32 16, label %297
    i32 15, label %306
    i32 7, label %310
    i32 37, label %314
    i32 181, label %314
    i32 182, label %314
    i32 183, label %314
    i32 136, label %318
    i32 137, label %318
    i32 10, label %321
    i32 11, label %321
    i32 9, label %33
    i32 3, label %561
    i32 146, label %385
    i32 382, label %385
    i32 121, label %386
    i32 46, label %388
    i32 122, label %388
    i32 138, label %403
    i32 150, label %403
    i32 197, label %421
    i32 202, label %421
    i32 198, label %423
    i32 196, label %423
    i32 192, label %423
    i32 0, label %432
    i32 158, label %447
    i32 384, label %608
    i32 176, label %463
    i32 177, label %463
    i32 21, label %491
    i32 20, label %495
    i32 156, label %534
    i32 2, label %557
  ]

33:                                               ; preds = %26
  %34 = load i32, ptr @PL_modcount, align 4, !tbaa !52
  %35 = add nsw i32 %34, 1
  br label %341

36:                                               ; preds = %26
  %37 = load i32, ptr @PL_modcount, align 4, !tbaa !52
  %38 = add nsw i32 %37, 1
  store i32 %38, ptr @PL_modcount, align 4, !tbaa !52
  br label %608

39:                                               ; preds = %26
  %40 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 5
  %41 = load i8, ptr %40, align 2, !tbaa !35
  %42 = and i8 %41, 8
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %158, label %561

44:                                               ; preds = %26
  switch i32 %30, label %59 [
    i32 378, label %45
    i32 44, label %45
    i32 20, label %45
  ]

45:                                               ; preds = %44, %44, %44
  %46 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 5
  %47 = load i8, ptr %46, align 2, !tbaa !35
  %48 = and i8 %47, 64
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %50, label %59

50:                                               ; preds = %45
  %51 = and i16 %18, -512
  %52 = or i16 %51, 17
  store i16 %52, ptr %31, align 8
  %53 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_ppaddr, i64 0, i64 17), align 8, !tbaa !6
  %54 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 2
  store ptr %53, ptr %54, align 8, !tbaa !78
  %55 = getelementptr inbounds %struct.unop, ptr %0, i64 0, i32 7
  %56 = load ptr, ptr %55, align 8, !tbaa !36
  %57 = getelementptr inbounds %struct.listop, ptr %56, i64 0, i32 7
  %58 = load ptr, ptr %57, align 8, !tbaa !81
  tail call void @Perl_op_null(ptr noundef %58)
  br label %561

59:                                               ; preds = %44, %45
  %60 = or i8 %14, -128
  store i8 %60, ptr %13, align 1, !tbaa !33
  store i32 1073741823, ptr @PL_modcount, align 4, !tbaa !52
  switch i32 %30, label %63 [
    i32 187, label %61
    i32 185, label %61
    i32 169, label %61
    i32 20, label %61
  ]

61:                                               ; preds = %59, %59, %59, %59
  %62 = or i8 %14, -127
  store i8 %62, ptr %13, align 1, !tbaa !33
  br label %561

63:                                               ; preds = %59
  %64 = getelementptr inbounds %struct.unop, ptr %0, i64 0, i32 7
  %65 = load ptr, ptr %64, align 8, !tbaa !36
  %66 = getelementptr inbounds %struct.op, ptr %65, i64 0, i32 4
  %67 = load i16, ptr %66, align 8
  %68 = and i16 %67, 511
  switch i16 %68, label %69 [
    i16 3, label %82
    i16 0, label %72
  ]

69:                                               ; preds = %63
  %70 = getelementptr inbounds %struct.op, ptr %65, i64 0, i32 3
  %71 = load i64, ptr %70, align 8, !tbaa !34
  br label %76

72:                                               ; preds = %63
  %73 = getelementptr inbounds %struct.op, ptr %65, i64 0, i32 3
  %74 = load i64, ptr %73, align 8, !tbaa !34
  %75 = icmp eq i64 %74, 158
  br i1 %75, label %79, label %76

76:                                               ; preds = %69, %72
  %77 = phi i64 [ %71, %69 ], [ %74, %72 ]
  %78 = zext i16 %68 to i64
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.33, i64 noundef %78, i64 noundef %77) #29
  br label %79

79:                                               ; preds = %76, %72
  %80 = getelementptr inbounds %struct.listop, ptr %65, i64 0, i32 7
  %81 = load ptr, ptr %80, align 8, !tbaa !81
  br label %82

82:                                               ; preds = %63, %79
  %83 = phi ptr [ %65, %63 ], [ %81, %79 ]
  br label %84

84:                                               ; preds = %82, %84
  %85 = phi ptr [ %87, %84 ], [ %83, %82 ]
  %86 = getelementptr inbounds %struct.op, ptr %85, i64 0, i32 1
  %87 = load ptr, ptr %86, align 8, !tbaa !38
  %88 = icmp eq ptr %87, null
  br i1 %88, label %89, label %84, !llvm.loop !149

89:                                               ; preds = %84
  %90 = getelementptr inbounds %struct.op, ptr %85, i64 0, i32 4
  %91 = load i16, ptr %90, align 8
  %92 = and i16 %91, 511
  %93 = icmp eq i16 %92, 0
  br i1 %93, label %94, label %561

94:                                               ; preds = %89
  %95 = getelementptr inbounds %struct.op, ptr %85, i64 0, i32 3
  %96 = load i64, ptr %95, align 8, !tbaa !34
  %97 = icmp eq i64 %96, 17
  br i1 %97, label %98, label %561

98:                                               ; preds = %94
  %99 = getelementptr inbounds %struct.unop, ptr %85, i64 0, i32 7
  %100 = load ptr, ptr %99, align 8, !tbaa !36
  %101 = getelementptr inbounds %struct.op, ptr %100, i64 0, i32 4
  %102 = load i16, ptr %101, align 8
  %103 = and i16 %102, 511
  %104 = icmp eq i16 %103, 0
  br i1 %104, label %105, label %114

105:                                              ; preds = %98
  %106 = getelementptr inbounds %struct.op, ptr %100, i64 0, i32 3
  %107 = load i64, ptr %106, align 8, !tbaa !34
  %108 = icmp eq i64 %107, 15
  br i1 %108, label %109, label %114

109:                                              ; preds = %105
  %110 = getelementptr inbounds %struct.unop, ptr %100, i64 0, i32 7
  %111 = load ptr, ptr %110, align 8, !tbaa !36
  %112 = getelementptr inbounds %struct.op, ptr %111, i64 0, i32 4
  %113 = load i16, ptr %112, align 8
  br label %114

114:                                              ; preds = %109, %105, %98
  %115 = phi i16 [ %113, %109 ], [ %102, %105 ], [ %102, %98 ]
  %116 = phi ptr [ %111, %109 ], [ %100, %105 ], [ %100, %98 ]
  %117 = and i16 %115, 511
  %118 = icmp eq i16 %117, 0
  br i1 %118, label %119, label %124

119:                                              ; preds = %114
  %120 = getelementptr inbounds %struct.op, ptr %116, i64 0, i32 4
  %121 = getelementptr inbounds %struct.op, ptr %116, i64 0, i32 3
  %122 = load i64, ptr %121, align 8, !tbaa !34
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.34, i64 noundef 0, i64 noundef %122) #29
  %123 = load i16, ptr %120, align 8
  br label %124

124:                                              ; preds = %119, %114
  %125 = phi i16 [ %123, %119 ], [ %115, %114 ]
  %126 = and i16 %125, 511
  %127 = icmp eq i16 %126, 7
  br i1 %127, label %128, label %561

128:                                              ; preds = %124
  %129 = getelementptr inbounds %struct.svop, ptr %116, i64 0, i32 7
  %130 = load ptr, ptr %129, align 8, !tbaa !65
  %131 = getelementptr inbounds %struct.gv, ptr %130, i64 0, i32 2
  %132 = load i32, ptr %131, align 4, !tbaa !133
  %133 = and i32 %132, 255
  %134 = icmp eq i32 %133, 9
  br i1 %134, label %145, label %135

135:                                              ; preds = %128
  %136 = and i32 %132, 2048
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %561, label %138

138:                                              ; preds = %135
  %139 = getelementptr inbounds %struct.gv, ptr %130, i64 0, i32 3
  %140 = load ptr, ptr %139, align 8, !tbaa !13
  %141 = getelementptr inbounds %struct.sv, ptr %140, i64 0, i32 2
  %142 = load i32, ptr %141, align 4, !tbaa !84
  %143 = and i32 %142, 255
  %144 = icmp eq i32 %143, 13
  br i1 %144, label %151, label %561

145:                                              ; preds = %128
  %146 = getelementptr inbounds %struct.gv, ptr %130, i64 0, i32 3
  %147 = load ptr, ptr %146, align 8, !tbaa !13
  %148 = getelementptr inbounds %struct.gp, ptr %147, i64 0, i32 2
  %149 = load ptr, ptr %148, align 8, !tbaa !147
  %150 = icmp eq ptr %149, null
  br i1 %150, label %561, label %151

151:                                              ; preds = %138, %145
  %152 = phi ptr [ %149, %145 ], [ %140, %138 ]
  %153 = load ptr, ptr %152, align 8, !tbaa !10
  %154 = getelementptr inbounds %struct.xpvcv, ptr %153, i64 0, i32 12
  %155 = load i32, ptr %154, align 4, !tbaa !14
  %156 = and i32 %155, 2
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %158, label %561

158:                                              ; preds = %206, %151, %491, %475, %489, %385, %534, %538, %552, %495, %481, %432, %386, %328, %293, %295, %270, %203, %187, %26, %39, %557
  %159 = phi i32 [ -1, %26 ], [ -1, %557 ], [ -1, %552 ], [ -1, %538 ], [ -1, %534 ], [ -1, %495 ], [ -1, %491 ], [ -1, %481 ], [ 0, %432 ], [ -1, %386 ], [ -1, %385 ], [ -1, %328 ], [ -1, %295 ], [ -1, %293 ], [ -1, %270 ], [ -1, %203 ], [ -1, %187 ], [ -1, %39 ], [ -1, %489 ], [ -1, %475 ], [ -1, %151 ], [ -1, %206 ]
  %160 = and i32 %2, 1
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %608

162:                                              ; preds = %158
  switch i32 %30, label %163 [
    i32 187, label %561
    i32 185, label %561
    i32 169, label %561
    i32 20, label %561
  ]

163:                                              ; preds = %162
  %164 = load i16, ptr %31, align 8
  %165 = and i16 %164, 511
  switch i16 %165, label %172 [
    i16 0, label %166
    i16 185, label %176
    i16 380, label %170
  ]

166:                                              ; preds = %163
  %167 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 5
  %168 = load i8, ptr %167, align 2, !tbaa !35
  %169 = icmp sgt i8 %168, -1
  br i1 %169, label %172, label %176

170:                                              ; preds = %163
  %171 = tail call ptr @Perl_custom_op_get_field(ptr noundef nonnull %0, i32 noundef 2)
  br label %176

172:                                              ; preds = %163, %166
  %173 = zext i16 %165 to i64
  %174 = getelementptr inbounds [0 x ptr], ptr @PL_op_desc, i64 0, i64 %173
  %175 = load ptr, ptr %174, align 8, !tbaa !6
  br label %176

176:                                              ; preds = %163, %172, %170, %166
  %177 = phi ptr [ @.str.36, %166 ], [ %171, %170 ], [ %175, %172 ], [ @.str.37, %163 ]
  %178 = icmp eq i32 %30, 0
  br i1 %178, label %183, label %179

179:                                              ; preds = %176
  %180 = sext i32 %30 to i64
  %181 = getelementptr inbounds [0 x ptr], ptr @PL_op_desc, i64 0, i64 %180
  %182 = load ptr, ptr %181, align 8, !tbaa !6
  br label %183

183:                                              ; preds = %176, %179
  %184 = phi ptr [ %182, %179 ], [ @.str.38, %176 ]
  %185 = tail call ptr (ptr, ...) @Perl_form(ptr noundef nonnull @.str.35, ptr noundef %177, ptr noundef %184) #29
  %186 = tail call i32 @Perl_yyerror(ptr noundef %185) #29
  br label %608

187:                                              ; preds = %26, %26, %26, %26, %26, %26, %26, %26, %26, %26, %26, %26, %26, %26, %26, %26, %26, %26, %26
  %188 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 5
  %189 = load i8, ptr %188, align 2, !tbaa !35
  %190 = and i8 %189, 64
  %191 = icmp eq i8 %190, 0
  br i1 %191, label %158, label %192

192:                                              ; preds = %187
  %193 = load i32, ptr @PL_modcount, align 4, !tbaa !52
  %194 = add nsw i32 %193, 1
  store i32 %194, ptr @PL_modcount, align 4, !tbaa !52
  br label %561

195:                                              ; preds = %26
  %196 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 5
  %197 = load i8, ptr %196, align 2, !tbaa !35
  %198 = and i8 %197, 64
  %199 = icmp eq i8 %198, 0
  br i1 %199, label %203, label %200

200:                                              ; preds = %195
  %201 = load i32, ptr @PL_modcount, align 4, !tbaa !52
  %202 = add nsw i32 %201, 1
  store i32 %202, ptr @PL_modcount, align 4, !tbaa !52
  br label %561

203:                                              ; preds = %195
  %204 = and i8 %14, 64
  %205 = icmp eq i8 %204, 0
  br i1 %205, label %158, label %206

206:                                              ; preds = %203
  %207 = load i32, ptr @PL_modcount, align 4, !tbaa !52
  %208 = getelementptr inbounds %struct.binop, ptr %0, i64 0, i32 7
  %209 = load ptr, ptr %208, align 8, !tbaa !106
  %210 = tail call fastcc ptr @S_modkids(ptr noundef %209, i32 noundef %30)
  %211 = icmp eq i32 %30, 38
  br i1 %211, label %212, label %158

212:                                              ; preds = %206
  %213 = getelementptr inbounds %struct.binop, ptr %0, i64 0, i32 8
  %214 = load ptr, ptr %213, align 8, !tbaa !113
  %215 = getelementptr inbounds %struct.op, ptr %214, i64 0, i32 4
  %216 = load i16, ptr %215, align 8
  %217 = and i16 %216, 511
  %218 = icmp eq i16 %217, 5
  br i1 %218, label %219, label %245

219:                                              ; preds = %212
  %220 = getelementptr inbounds %struct.svop, ptr %214, i64 0, i32 7
  %221 = load ptr, ptr %220, align 8, !tbaa !65
  %222 = getelementptr inbounds %struct.sv, ptr %221, i64 0, i32 2
  %223 = load i32, ptr %222, align 4, !tbaa !84
  %224 = and i32 %223, 256
  %225 = icmp eq i32 %224, 0
  br i1 %225, label %245, label %226

226:                                              ; preds = %219
  %227 = and i32 %223, 2097408
  %228 = icmp eq i32 %227, 256
  br i1 %228, label %229, label %233

229:                                              ; preds = %226
  %230 = load ptr, ptr %221, align 8, !tbaa !85
  %231 = getelementptr inbounds %struct.xpviv, ptr %230, i64 0, i32 4
  %232 = load i64, ptr %231, align 8, !tbaa !13
  br label %235

233:                                              ; preds = %226
  %234 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %221, i32 noundef 2) #29
  br label %235

235:                                              ; preds = %233, %229
  %236 = phi i64 [ %232, %229 ], [ %234, %233 ]
  %237 = load i32, ptr @PL_modcount, align 4, !tbaa !52
  %238 = icmp eq i32 %237, 1073741823
  br i1 %238, label %247, label %239

239:                                              ; preds = %235
  %240 = sub nsw i32 %237, %207
  %241 = tail call i64 @llvm.smax.i64(i64 %236, i64 0)
  %242 = trunc i64 %241 to i32
  %243 = mul i32 %240, %242
  %244 = add i32 %243, %207
  br label %245

245:                                              ; preds = %212, %219, %239
  %246 = phi i32 [ %244, %239 ], [ 1073741823, %219 ], [ 1073741823, %212 ]
  store i32 %246, ptr @PL_modcount, align 4, !tbaa !52
  br label %247

247:                                              ; preds = %245, %235
  %248 = load i8, ptr %196, align 2, !tbaa !35
  %249 = or i8 %248, 32
  br label %580

250:                                              ; preds = %26
  %251 = getelementptr inbounds %struct.unop, ptr %0, i64 0, i32 7
  %252 = load ptr, ptr %251, align 8, !tbaa !36
  %253 = getelementptr inbounds %struct.op, ptr %252, i64 0, i32 1
  %254 = load ptr, ptr %253, align 8, !tbaa !38
  %255 = icmp eq ptr %254, null
  br i1 %255, label %561, label %256

256:                                              ; preds = %250, %256
  %257 = phi ptr [ %260, %256 ], [ %254, %250 ]
  %258 = tail call ptr @Perl_op_lvalue_flags(ptr noundef nonnull %257, i32 noundef %30, i32 noundef 0)
  %259 = getelementptr inbounds %struct.op, ptr %257, i64 0, i32 1
  %260 = load ptr, ptr %259, align 8, !tbaa !38
  %261 = icmp eq ptr %260, null
  br i1 %261, label %561, label %256, !llvm.loop !150

262:                                              ; preds = %26, %26
  %263 = icmp eq i32 %30, 20
  br i1 %263, label %264, label %270

264:                                              ; preds = %262
  %265 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 5
  %266 = load i8, ptr %265, align 2, !tbaa !35
  %267 = and i8 %266, 8
  %268 = icmp eq i8 %267, 0
  br i1 %268, label %270, label %269

269:                                              ; preds = %264
  store i32 1073741823, ptr @PL_modcount, align 4, !tbaa !52
  br label %608

270:                                              ; preds = %262, %264, %26
  %271 = tail call fastcc zeroext i1 @S_scalar_mod_type(ptr noundef nonnull %0, i32 noundef %30)
  br i1 %271, label %158, label %272

272:                                              ; preds = %270
  %273 = getelementptr inbounds %struct.unop, ptr %0, i64 0, i32 7
  %274 = load ptr, ptr %273, align 8, !tbaa !36
  %275 = tail call ptr @Perl_doref(ptr noundef %274, i32 noundef %32, i1 noundef zeroext true)
  br label %276

276:                                              ; preds = %26, %26, %272
  br label %277

277:                                              ; preds = %26, %276
  %278 = phi i32 [ -1, %26 ], [ 1, %276 ]
  %279 = icmp eq i32 %30, 187
  br i1 %279, label %280, label %291

280:                                              ; preds = %277
  %281 = load i16, ptr %31, align 8
  %282 = and i16 %281, 511
  switch i16 %282, label %288 [
    i16 135, label %283
    i16 149, label %283
  ]

283:                                              ; preds = %280, %280
  %284 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 5
  %285 = load i8, ptr %284, align 2, !tbaa !35
  %286 = and i8 %285, 3
  %287 = icmp eq i8 %286, 2
  br i1 %287, label %291, label %288

288:                                              ; preds = %280, %283
  %289 = load i8, ptr %13, align 1, !tbaa !33
  %290 = or i8 %289, 8
  store i8 %290, ptr %13, align 1, !tbaa !33
  br label %291

291:                                              ; preds = %277, %283, %288, %26, %26
  %292 = phi i32 [ -1, %26 ], [ -1, %26 ], [ %278, %288 ], [ %278, %283 ], [ %278, %277 ]
  store i32 1073741823, ptr @PL_modcount, align 4, !tbaa !52
  br label %561

293:                                              ; preds = %26, %26
  %294 = icmp eq i32 %30, 187
  br i1 %294, label %295, label %158

295:                                              ; preds = %293
  %296 = or i8 %14, 8
  store i8 %296, ptr %13, align 1, !tbaa !33
  br label %158

297:                                              ; preds = %26
  %298 = load i32, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 10), align 8, !tbaa !77
  %299 = or i32 %298, 256
  store i32 %299, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 10), align 8, !tbaa !77
  %300 = icmp eq i32 %30, 187
  br i1 %300, label %301, label %303

301:                                              ; preds = %297
  %302 = or i8 %14, 8
  store i8 %302, ptr %13, align 1, !tbaa !33
  br label %303

303:                                              ; preds = %301, %297
  %304 = load i32, ptr @PL_modcount, align 4, !tbaa !52
  %305 = add nsw i32 %304, 1
  store i32 %305, ptr @PL_modcount, align 4, !tbaa !52
  br label %561

306:                                              ; preds = %26
  %307 = getelementptr inbounds %struct.unop, ptr %0, i64 0, i32 7
  %308 = load ptr, ptr %307, align 8, !tbaa !36
  %309 = tail call ptr @Perl_doref(ptr noundef %308, i32 noundef 15, i1 noundef zeroext true)
  br label %310

310:                                              ; preds = %26, %306
  %311 = phi i32 [ -1, %26 ], [ 1, %306 ]
  %312 = load i32, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 10), align 8, !tbaa !77
  %313 = or i32 %312, 256
  store i32 %313, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 10), align 8, !tbaa !77
  br label %314

314:                                              ; preds = %26, %26, %26, %26, %310
  %315 = phi i32 [ -1, %26 ], [ -1, %26 ], [ -1, %26 ], [ -1, %26 ], [ %311, %310 ]
  %316 = load i32, ptr @PL_modcount, align 4, !tbaa !52
  %317 = add nsw i32 %316, 1
  store i32 %317, ptr @PL_modcount, align 4, !tbaa !52
  br label %561

318:                                              ; preds = %26, %26
  %319 = load i32, ptr @PL_modcount, align 4, !tbaa !52
  %320 = add nsw i32 %319, 1
  store i32 %320, ptr @PL_modcount, align 4, !tbaa !52
  br label %561

321:                                              ; preds = %26, %26
  store i32 1073741823, ptr @PL_modcount, align 4, !tbaa !52
  %322 = icmp eq i32 %30, 20
  br i1 %322, label %323, label %328

323:                                              ; preds = %321
  %324 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 5
  %325 = load i8, ptr %324, align 2, !tbaa !35
  %326 = and i8 %325, 8
  %327 = icmp eq i8 %326, 0
  br i1 %327, label %339, label %608

328:                                              ; preds = %321
  %329 = tail call fastcc zeroext i1 @S_scalar_mod_type(ptr noundef nonnull %0, i32 noundef %30)
  br i1 %329, label %158, label %330

330:                                              ; preds = %328
  %331 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 5
  %332 = load i8, ptr %331, align 2, !tbaa !35
  %333 = and i8 %332, 3
  %334 = icmp ne i8 %333, 2
  %335 = icmp eq i32 %30, 187
  %336 = and i1 %335, %334
  br i1 %336, label %337, label %341

337:                                              ; preds = %330
  %338 = or i8 %14, 8
  store i8 %338, ptr %13, align 1, !tbaa !33
  br label %339

339:                                              ; preds = %337, %323
  %340 = phi i8 [ %338, %337 ], [ %14, %323 ]
  store i32 1073741824, ptr @PL_modcount, align 4, !tbaa !52
  br label %357

341:                                              ; preds = %33, %330
  %342 = phi i32 [ %35, %33 ], [ 1073741824, %330 ]
  store i32 %342, ptr @PL_modcount, align 4, !tbaa !52
  %343 = icmp eq i32 %30, 0
  br i1 %343, label %344, label %357

344:                                              ; preds = %341
  %345 = load ptr, ptr @PL_comppad_name, align 8, !tbaa !6
  %346 = getelementptr inbounds %struct.padnamelist, ptr %345, i64 0, i32 1
  %347 = load ptr, ptr %346, align 8, !tbaa !151
  %348 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 3
  %349 = load i64, ptr %348, align 8, !tbaa !34
  %350 = getelementptr inbounds ptr, ptr %347, i64 %349
  %351 = load ptr, ptr %350, align 8, !tbaa !6
  %352 = getelementptr inbounds %struct.padname, ptr %351, i64 0, i32 7
  %353 = load i8, ptr %352, align 8, !tbaa !136
  %354 = zext i8 %353 to i64
  %355 = load ptr, ptr %351, align 8, !tbaa !138
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.39, i32 noundef 1, i64 noundef %354, ptr noundef %355) #29
  %356 = load i8, ptr %13, align 1, !tbaa !33
  br label %357

357:                                              ; preds = %339, %344, %341
  %358 = phi i8 [ %340, %339 ], [ %356, %344 ], [ %14, %341 ]
  %359 = icmp sgt i8 %358, -1
  br i1 %359, label %360, label %368

360:                                              ; preds = %357
  %361 = load ptr, ptr @PL_comppad_name, align 8, !tbaa !6
  %362 = getelementptr inbounds %struct.padnamelist, ptr %361, i64 0, i32 1
  %363 = load ptr, ptr %362, align 8, !tbaa !151
  %364 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 3
  %365 = load i64, ptr %364, align 8, !tbaa !34
  %366 = getelementptr inbounds ptr, ptr %363, i64 %365
  %367 = load ptr, ptr %366, align 8, !tbaa !6
  br label %383

368:                                              ; preds = %357
  %369 = add i32 %30, -39
  %370 = icmp ult i32 %369, -2
  br i1 %370, label %371, label %561

371:                                              ; preds = %368
  %372 = load ptr, ptr @PL_comppad_name, align 8, !tbaa !6
  %373 = getelementptr inbounds %struct.padnamelist, ptr %372, i64 0, i32 1
  %374 = load ptr, ptr %373, align 8, !tbaa !151
  %375 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 3
  %376 = load i64, ptr %375, align 8, !tbaa !34
  %377 = getelementptr inbounds ptr, ptr %374, i64 %376
  %378 = load ptr, ptr %377, align 8, !tbaa !6
  %379 = getelementptr inbounds %struct.padname, ptr %378, i64 0, i32 8
  %380 = load i8, ptr %379, align 1, !tbaa !153
  %381 = and i8 %380, 2
  %382 = icmp eq i8 %381, 0
  br i1 %382, label %561, label %383

383:                                              ; preds = %360, %371
  %384 = phi ptr [ %367, %360 ], [ %378, %371 ]
  tail call fastcc void @S_mark_padname_lvalue(ptr noundef %384)
  br label %561

385:                                              ; preds = %26, %26
  switch i32 %30, label %158 [
    i32 187, label %390
    i32 37, label %392
  ]

386:                                              ; preds = %26
  %387 = icmp eq i8 %14, 4
  br i1 %387, label %158, label %388

388:                                              ; preds = %26, %26, %386
  %389 = icmp eq i32 %30, 187
  br i1 %389, label %390, label %392

390:                                              ; preds = %385, %388
  %391 = or i8 %14, 8
  store i8 %391, ptr %13, align 1, !tbaa !33
  br label %392

392:                                              ; preds = %385, %390, %388
  %393 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 5
  %394 = load i8, ptr %393, align 2, !tbaa !35
  %395 = and i8 %394, 4
  %396 = icmp eq i8 %395, 0
  br i1 %396, label %561, label %397

397:                                              ; preds = %392
  %398 = getelementptr inbounds %struct.binop, ptr %0, i64 0, i32 7
  %399 = load ptr, ptr %398, align 8, !tbaa !106
  %400 = getelementptr inbounds %struct.op, ptr %399, i64 0, i32 1
  %401 = load ptr, ptr %400, align 8, !tbaa !38
  %402 = tail call ptr @Perl_op_lvalue_flags(ptr noundef %401, i32 noundef %30, i32 noundef 0)
  br label %561

403:                                              ; preds = %26, %26
  %404 = getelementptr inbounds %struct.binop, ptr %0, i64 0, i32 7
  %405 = load ptr, ptr %404, align 8, !tbaa !106
  %406 = tail call ptr @Perl_doref(ptr noundef %405, i32 noundef %32, i1 noundef zeroext true)
  switch i32 %30, label %418 [
    i32 185, label %407
    i32 187, label %413
  ]

407:                                              ; preds = %403
  %408 = load i8, ptr %13, align 1, !tbaa !33
  %409 = and i8 %408, -80
  %410 = icmp eq i8 %409, 0
  br i1 %410, label %411, label %418

411:                                              ; preds = %407
  %412 = or i8 %408, 64
  br label %416

413:                                              ; preds = %403
  %414 = load i8, ptr %13, align 1, !tbaa !33
  %415 = or i8 %414, 8
  br label %416

416:                                              ; preds = %413, %411
  %417 = phi i8 [ %412, %411 ], [ %415, %413 ]
  store i8 %417, ptr %13, align 1, !tbaa !33
  br label %418

418:                                              ; preds = %416, %407, %403
  %419 = load i32, ptr @PL_modcount, align 4, !tbaa !52
  %420 = add nsw i32 %419, 1
  store i32 %420, ptr @PL_modcount, align 4, !tbaa !52
  br label %561

421:                                              ; preds = %26, %26
  %422 = or i8 %14, -128
  store i8 %422, ptr %13, align 1, !tbaa !33
  br label %423

423:                                              ; preds = %26, %26, %26, %421
  %424 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 5
  %425 = load i8, ptr %424, align 2, !tbaa !35
  %426 = and i8 %425, 4
  %427 = icmp eq i8 %426, 0
  br i1 %427, label %561, label %428

428:                                              ; preds = %423
  %429 = getelementptr inbounds %struct.listop, ptr %0, i64 0, i32 8
  %430 = load ptr, ptr %429, align 8, !tbaa !83
  %431 = tail call ptr @Perl_op_lvalue_flags(ptr noundef %430, i32 noundef %30, i32 noundef 0)
  br label %561

432:                                              ; preds = %26
  %433 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 5
  %434 = load i8, ptr %433, align 2, !tbaa !35
  %435 = icmp sgt i8 %434, -1
  br i1 %435, label %436, label %158

436:                                              ; preds = %432
  %437 = and i8 %434, 4
  %438 = icmp eq i8 %437, 0
  br i1 %438, label %561, label %439

439:                                              ; preds = %436
  %440 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 3
  %441 = load i64, ptr %440, align 8, !tbaa !34
  %442 = icmp eq i64 %441, 158
  br i1 %442, label %447, label %443

443:                                              ; preds = %439
  %444 = getelementptr inbounds %struct.binop, ptr %0, i64 0, i32 7
  %445 = load ptr, ptr %444, align 8, !tbaa !106
  %446 = tail call ptr @Perl_op_lvalue_flags(ptr noundef %445, i32 noundef %30, i32 noundef 0)
  br label %561

447:                                              ; preds = %439, %26
  %448 = getelementptr inbounds %struct.listop, ptr %0, i64 0, i32 7
  %449 = load ptr, ptr %448, align 8, !tbaa !6
  %450 = icmp eq ptr %449, null
  br i1 %450, label %561, label %451

451:                                              ; preds = %447, %459
  %452 = phi ptr [ %461, %459 ], [ %449, %447 ]
  %453 = getelementptr inbounds %struct.op, ptr %452, i64 0, i32 5
  %454 = load i8, ptr %453, align 2, !tbaa !35
  %455 = and i8 %454, 3
  %456 = icmp eq i8 %455, 1
  br i1 %456, label %459, label %457

457:                                              ; preds = %451
  %458 = tail call ptr @Perl_op_lvalue_flags(ptr noundef nonnull %452, i32 noundef %30, i32 noundef 0)
  br label %459

459:                                              ; preds = %451, %457
  %460 = getelementptr inbounds %struct.op, ptr %452, i64 0, i32 1
  %461 = load ptr, ptr %460, align 8, !tbaa !6
  %462 = icmp eq ptr %461, null
  br i1 %462, label %561, label %451, !llvm.loop !154

463:                                              ; preds = %26, %26
  %464 = icmp eq i32 %30, 187
  %465 = getelementptr inbounds %struct.logop, ptr %0, i64 0, i32 7
  %466 = load ptr, ptr %465, align 8, !tbaa !101
  br i1 %464, label %475, label %467

467:                                              ; preds = %463
  %468 = getelementptr inbounds %struct.op, ptr %466, i64 0, i32 4
  %469 = load i16, ptr %468, align 8
  %470 = and i16 %469, 511
  %471 = tail call fastcc zeroext i1 @S_vivifies(i16 noundef zeroext %470)
  br i1 %471, label %481, label %472

472:                                              ; preds = %467
  %473 = tail call ptr @Perl_op_lvalue_flags(ptr noundef nonnull %466, i32 noundef %30, i32 noundef 0)
  %474 = load ptr, ptr %465, align 8, !tbaa !101
  br label %481

475:                                              ; preds = %463
  %476 = tail call ptr @Perl_op_lvalue_flags(ptr noundef %466, i32 noundef 187, i32 noundef 0)
  %477 = load ptr, ptr %465, align 8, !tbaa !101
  %478 = getelementptr inbounds %struct.op, ptr %477, i64 0, i32 1
  %479 = load ptr, ptr %478, align 8, !tbaa !38
  %480 = tail call ptr @Perl_op_lvalue_flags(ptr noundef %479, i32 noundef 187, i32 noundef 0)
  br label %158

481:                                              ; preds = %472, %467
  %482 = phi ptr [ %474, %472 ], [ %466, %467 ]
  %483 = getelementptr inbounds %struct.op, ptr %482, i64 0, i32 1
  %484 = load ptr, ptr %483, align 8, !tbaa !38
  %485 = getelementptr inbounds %struct.op, ptr %484, i64 0, i32 4
  %486 = load i16, ptr %485, align 8
  %487 = and i16 %486, 511
  %488 = tail call fastcc zeroext i1 @S_vivifies(i16 noundef zeroext %487)
  br i1 %488, label %158, label %489

489:                                              ; preds = %481
  %490 = tail call ptr @Perl_op_lvalue_flags(ptr noundef nonnull %484, i32 noundef %30, i32 noundef 0)
  br label %158

491:                                              ; preds = %26
  switch i32 %30, label %158 [
    i32 201, label %492
    i32 38, label %492
    i32 37, label %492
  ]

492:                                              ; preds = %491, %491, %491
  %493 = getelementptr inbounds %struct.unop, ptr %0, i64 0, i32 7
  %494 = load ptr, ptr %493, align 8, !tbaa !36
  br label %497

495:                                              ; preds = %26
  %496 = icmp eq i32 %30, 38
  br i1 %496, label %497, label %158

497:                                              ; preds = %495, %492
  %498 = phi ptr [ %494, %492 ], [ %0, %495 ]
  %499 = getelementptr inbounds %struct.unop, ptr %498, i64 0, i32 7
  %500 = load ptr, ptr %499, align 8, !tbaa !36
  br i1 %7, label %505, label %501

501:                                              ; preds = %497
  %502 = getelementptr inbounds %struct.yy_parser, ptr %6, i64 0, i32 44
  %503 = load i8, ptr %502, align 1, !tbaa !105
  %504 = zext i8 %503 to i32
  br label %505

505:                                              ; preds = %497, %501
  %506 = phi i32 [ %504, %501 ], [ 0, %497 ]
  tail call fastcc void @S_lvref(ptr noundef %500, i32 noundef %30)
  %507 = load ptr, ptr @PL_parser, align 8, !tbaa !6
  %508 = icmp eq ptr %507, null
  br i1 %508, label %514, label %509

509:                                              ; preds = %505
  %510 = getelementptr inbounds %struct.yy_parser, ptr %507, i64 0, i32 44
  %511 = load i8, ptr %510, align 1, !tbaa !105
  %512 = zext i8 %511 to i32
  %513 = icmp eq i32 %506, %512
  br i1 %513, label %514, label %524

514:                                              ; preds = %509, %505
  %515 = load ptr, ptr @PL_curcop, align 8, !tbaa !6
  %516 = getelementptr %struct.cop, ptr %515, i64 0, i32 10
  %517 = load i32, ptr %516, align 8, !tbaa !77
  %518 = and i32 %517, 469893120
  %519 = icmp eq i32 %518, 469893120
  br i1 %519, label %520, label %522

520:                                              ; preds = %514
  %521 = tail call zeroext i1 @Perl_feature_is_enabled(ptr noundef nonnull @.str.40, i64 noundef 11) #29
  br i1 %521, label %523, label %522

522:                                              ; preds = %520, %514
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.41) #29
  br label %523

523:                                              ; preds = %522, %520
  tail call void (i32, ptr, ...) @Perl_ck_warner_d(i32 noundef 63, ptr noundef nonnull @.str.42) #29
  br label %524

524:                                              ; preds = %523, %509
  %525 = load i16, ptr %31, align 8
  %526 = and i16 %525, 511
  %527 = icmp eq i16 %526, 20
  br i1 %527, label %528, label %533

528:                                              ; preds = %524
  %529 = getelementptr inbounds %struct.unop, ptr %0, i64 0, i32 7
  %530 = load ptr, ptr %529, align 8, !tbaa !36
  %531 = getelementptr inbounds %struct.unop, ptr %530, i64 0, i32 7
  %532 = load ptr, ptr %531, align 8, !tbaa !36
  tail call void @Perl_op_null(ptr noundef %532)
  br label %533

533:                                              ; preds = %528, %524
  tail call void @Perl_op_null(ptr noundef nonnull %0)
  br label %608

534:                                              ; preds = %26
  %535 = getelementptr inbounds %struct.listop, ptr %0, i64 0, i32 7
  %536 = load ptr, ptr %535, align 8, !tbaa !81
  %537 = icmp eq ptr %536, null
  br i1 %537, label %158, label %538

538:                                              ; preds = %534
  %539 = getelementptr inbounds %struct.op, ptr %536, i64 0, i32 4
  %540 = load i16, ptr %539, align 8
  %541 = and i16 %540, 511
  %542 = icmp eq i16 %541, 13
  br i1 %542, label %543, label %158

543:                                              ; preds = %538
  %544 = getelementptr inbounds %struct.op, ptr %536, i64 0, i32 3
  %545 = load i64, ptr %544, align 8, !tbaa !34
  %546 = icmp eq i64 %545, 0
  br i1 %546, label %547, label %556

547:                                              ; preds = %543
  %548 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 5
  %549 = load i8, ptr %548, align 2, !tbaa !35
  %550 = and i8 %549, 64
  %551 = icmp eq i8 %550, 0
  br i1 %551, label %552, label %556

552:                                              ; preds = %547
  %553 = getelementptr inbounds %struct.pmop, ptr %536, i64 0, i32 11
  %554 = load ptr, ptr %553, align 8, !tbaa !13
  %555 = icmp eq ptr %554, null
  br i1 %555, label %158, label %556

556:                                              ; preds = %552, %547, %543
  store i32 1073741823, ptr @PL_modcount, align 4, !tbaa !52
  br label %561

557:                                              ; preds = %26
  %558 = getelementptr inbounds %struct.unop, ptr %0, i64 0, i32 7
  %559 = load ptr, ptr %558, align 8, !tbaa !36
  %560 = tail call ptr @Perl_op_lvalue_flags(ptr noundef %559, i32 noundef 185, i32 noundef 0)
  br label %158

561:                                              ; preds = %459, %256, %447, %250, %138, %135, %151, %145, %124, %89, %94, %26, %162, %162, %162, %162, %436, %423, %428, %392, %397, %368, %371, %383, %39, %556, %443, %418, %318, %314, %303, %291, %200, %192, %61, %50
  %562 = phi i32 [ %159, %162 ], [ -1, %556 ], [ 0, %443 ], [ 0, %436 ], [ 0, %428 ], [ 0, %423 ], [ 1, %418 ], [ -1, %397 ], [ -1, %392 ], [ -1, %383 ], [ -1, %371 ], [ -1, %368 ], [ -1, %318 ], [ %315, %314 ], [ -1, %303 ], [ %292, %291 ], [ -1, %200 ], [ -1, %192 ], [ -1, %61 ], [ -1, %50 ], [ -1, %39 ], [ %159, %162 ], [ %159, %162 ], [ %159, %162 ], [ 0, %26 ], [ -1, %94 ], [ -1, %89 ], [ -1, %124 ], [ -1, %145 ], [ -1, %151 ], [ -1, %135 ], [ -1, %138 ], [ 1, %250 ], [ 0, %447 ], [ 1, %256 ], [ 0, %459 ]
  switch i32 %30, label %574 [
    i32 20, label %563
    i32 187, label %608
  ]

563:                                              ; preds = %561
  %564 = load i16, ptr %31, align 8
  %565 = and i16 %564, 511
  %566 = zext i16 %565 to i64
  %567 = getelementptr inbounds [0 x ptr], ptr @PL_check, i64 0, i64 %566
  %568 = load ptr, ptr %567, align 8, !tbaa !6
  %569 = icmp eq ptr %568, @Perl_ck_ftst
  br i1 %569, label %608, label %570

570:                                              ; preds = %563
  %571 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 5
  %572 = load i8, ptr %571, align 2, !tbaa !35
  %573 = or i8 %572, 32
  br label %604

574:                                              ; preds = %561
  %575 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 5
  %576 = load i8, ptr %575, align 2, !tbaa !35
  %577 = or i8 %576, 32
  store i8 %577, ptr %575, align 2, !tbaa !35
  %578 = add i32 %30, -37
  %579 = icmp ult i32 %578, 2
  br i1 %579, label %580, label %584

580:                                              ; preds = %247, %574
  %581 = phi i8 [ %249, %247 ], [ %577, %574 ]
  %582 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 5
  %583 = or i8 %581, -112
  store i8 %583, ptr %582, align 2, !tbaa !35
  br label %608

584:                                              ; preds = %574
  switch i32 %30, label %604 [
    i32 0, label %585
    i32 187, label %608
    i32 185, label %608
    i32 169, label %608
  ]

585:                                              ; preds = %584
  switch i32 %562, label %608 [
    i32 1, label %586
    i32 -1, label %592
  ]

586:                                              ; preds = %585
  %587 = load i8, ptr %13, align 1, !tbaa !33
  %588 = or i8 %587, -128
  store i8 %588, ptr %13, align 1, !tbaa !33
  %589 = and i8 %577, 127
  store i8 %589, ptr %575, align 2, !tbaa !35
  %590 = load i32, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 10), align 8, !tbaa !77
  %591 = or i32 %590, 256
  store i32 %591, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 10), align 8, !tbaa !77
  br label %608

592:                                              ; preds = %585
  %593 = load i16, ptr %31, align 8
  %594 = and i16 %593, 511
  %595 = icmp eq i16 %594, 380
  br i1 %595, label %596, label %598

596:                                              ; preds = %592
  %597 = tail call ptr @Perl_custom_op_get_field(ptr noundef nonnull %0, i32 noundef 2)
  br label %602

598:                                              ; preds = %592
  %599 = zext i16 %594 to i64
  %600 = getelementptr inbounds [0 x ptr], ptr @PL_op_desc, i64 0, i64 %599
  %601 = load ptr, ptr %600, align 8, !tbaa !6
  br label %602

602:                                              ; preds = %598, %596
  %603 = phi ptr [ %597, %596 ], [ %601, %598 ]
  tail call void (i32, ptr, ...) @Perl_ck_warner(i32 noundef 28, ptr noundef nonnull @.str.43, ptr noundef %603) #29
  br label %608

604:                                              ; preds = %570, %584
  %605 = phi i8 [ %573, %570 ], [ %577, %584 ]
  %606 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 5
  %607 = or i8 %605, 16
  store i8 %607, ptr %606, align 2, !tbaa !35
  br label %608

608:                                              ; preds = %561, %584, %584, %584, %580, %604, %586, %585, %602, %563, %26, %323, %158, %20, %3, %8, %533, %269, %183, %36
  %609 = phi ptr [ %0, %183 ], [ %0, %533 ], [ %0, %269 ], [ %0, %36 ], [ %0, %8 ], [ null, %3 ], [ %0, %20 ], [ null, %158 ], [ %0, %323 ], [ %0, %26 ], [ %0, %563 ], [ %0, %602 ], [ %0, %585 ], [ %0, %586 ], [ %0, %604 ], [ %0, %580 ], [ %0, %584 ], [ %0, %584 ], [ %0, %584 ], [ %0, %561 ]
  ret ptr %609
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @S_modkids(ptr noundef readonly returned %0, i32 noundef %1) unnamed_addr #4 {
  %3 = icmp eq ptr %0, null
  br i1 %3, label %19, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 5
  %6 = load i8, ptr %5, align 2, !tbaa !35
  %7 = and i8 %6, 4
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %19, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.listop, ptr %0, i64 0, i32 7
  %11 = load ptr, ptr %10, align 8, !tbaa !6
  %12 = icmp eq ptr %11, null
  br i1 %12, label %19, label %13

13:                                               ; preds = %9, %13
  %14 = phi ptr [ %17, %13 ], [ %11, %9 ]
  %15 = tail call ptr @Perl_op_lvalue_flags(ptr noundef nonnull %14, i32 noundef %1, i32 noundef 0)
  %16 = getelementptr inbounds %struct.op, ptr %14, i64 0, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !6
  %18 = icmp eq ptr %17, null
  br i1 %18, label %19, label %13, !llvm.loop !155

19:                                               ; preds = %13, %9, %4, %2
  ret ptr %0
}

declare i64 @Perl_sv_2iv_flags(ptr noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable
define internal fastcc zeroext i1 @S_scalar_mod_type(ptr noundef readonly %0, i32 noundef %1) unnamed_addr #10 {
  switch i32 %1, label %11 [
    i32 46, label %3
    i32 37, label %3
    i32 47, label %10
    i32 49, label %10
    i32 51, label %10
    i32 53, label %10
    i32 48, label %10
    i32 50, label %10
    i32 52, label %10
    i32 54, label %10
    i32 55, label %10
    i32 56, label %10
    i32 58, label %10
    i32 60, label %10
    i32 62, label %10
    i32 63, label %10
    i32 65, label %10
    i32 57, label %10
    i32 59, label %10
    i32 61, label %10
    i32 64, label %10
    i32 66, label %10
    i32 69, label %10
    i32 70, label %10
    i32 92, label %10
    i32 93, label %10
    i32 94, label %10
    i32 67, label %10
    i32 33, label %10
    i32 35, label %10
    i32 36, label %10
    i32 234, label %10
    i32 242, label %10
    i32 252, label %10
    i32 181, label %10
    i32 182, label %10
    i32 183, label %10
  ]

3:                                                ; preds = %2, %2
  %4 = icmp eq ptr %0, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 4
  %7 = load i16, ptr %6, align 8
  %8 = and i16 %7, 511
  %9 = icmp eq i16 %8, 14
  br i1 %9, label %11, label %10

10:                                               ; preds = %3, %5, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2
  br label %11

11:                                               ; preds = %2, %5, %10
  %12 = phi i1 [ true, %10 ], [ false, %5 ], [ false, %2 ]
  ret i1 %12
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_doref(ptr noundef returned %0, i32 noundef %1, i1 noundef zeroext %2) local_unnamed_addr #4 {
  %4 = load ptr, ptr @PL_parser, align 8, !tbaa !6
  %5 = icmp eq ptr %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.yy_parser, ptr %4, i64 0, i32 44
  %8 = load i8, ptr %7, align 1, !tbaa !105
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %138

10:                                               ; preds = %6, %3
  %11 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 4
  %12 = load i16, ptr %11, align 8
  %13 = and i16 %12, 511
  %14 = zext i16 %13 to i32
  switch i32 %14, label %136 [
    i32 185, label %15
    i32 180, label %45
    i32 15, label %57
    i32 9, label %67
    i32 135, label %79
    i32 149, label %79
    i32 14, label %84
    i32 10, label %94
    i32 11, label %94
    i32 2, label %99
    i32 0, label %99
    i32 138, label %110
    i32 150, label %110
    i32 198, label %125
    i32 197, label %125
    i32 196, label %126
    i32 158, label %126
  ]

15:                                               ; preds = %10
  switch i32 %1, label %136 [
    i32 148, label %16
    i32 43, label %16
    i32 135, label %37
    i32 15, label %34
    i32 149, label %34
  ]

16:                                               ; preds = %15, %15
  %17 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 5
  %18 = load i8, ptr %17, align 2, !tbaa !35
  %19 = and i8 %18, 64
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %32

21:                                               ; preds = %16
  %22 = and i16 %12, -512
  %23 = or i16 %22, 17
  store i16 %23, ptr %11, align 8
  %24 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_ppaddr, i64 0, i64 17), align 8, !tbaa !6
  %25 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 2
  store ptr %24, ptr %25, align 8, !tbaa !78
  %26 = getelementptr inbounds %struct.unop, ptr %0, i64 0, i32 7
  %27 = load ptr, ptr %26, align 8, !tbaa !36
  %28 = getelementptr inbounds %struct.listop, ptr %27, i64 0, i32 7
  %29 = load ptr, ptr %28, align 8, !tbaa !81
  tail call void @Perl_op_null(ptr noundef %29)
  %30 = load i8, ptr %17, align 2, !tbaa !35
  %31 = or i8 %30, -128
  store i8 %31, ptr %17, align 2, !tbaa !35
  br label %136

32:                                               ; preds = %16
  %33 = icmp eq i32 %1, 135
  br i1 %33, label %37, label %136

34:                                               ; preds = %15, %15
  %35 = icmp eq i32 %1, 149
  %36 = select i1 %35, i8 32, i8 48
  br label %37

37:                                               ; preds = %32, %15, %34
  %38 = phi i8 [ %36, %34 ], [ 16, %32 ], [ 16, %15 ]
  %39 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 6
  %40 = load i8, ptr %39, align 1, !tbaa !33
  %41 = or i8 %40, %38
  store i8 %41, ptr %39, align 1, !tbaa !33
  %42 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 5
  %43 = load i8, ptr %42, align 2, !tbaa !35
  %44 = or i8 %43, 32
  store i8 %44, ptr %42, align 2, !tbaa !35
  br label %136

45:                                               ; preds = %10
  %46 = getelementptr inbounds %struct.unop, ptr %0, i64 0, i32 7
  %47 = load ptr, ptr %46, align 8, !tbaa !36
  %48 = getelementptr inbounds %struct.op, ptr %47, i64 0, i32 1
  %49 = load ptr, ptr %48, align 8, !tbaa !38
  %50 = icmp eq ptr %49, null
  br i1 %50, label %136, label %51

51:                                               ; preds = %45, %51
  %52 = phi ptr [ %55, %51 ], [ %49, %45 ]
  %53 = tail call ptr @Perl_doref(ptr noundef nonnull %52, i32 noundef %1, i1 noundef zeroext %2)
  %54 = getelementptr inbounds %struct.op, ptr %52, i64 0, i32 1
  %55 = load ptr, ptr %54, align 8, !tbaa !38
  %56 = icmp eq ptr %55, null
  br i1 %56, label %136, label %51, !llvm.loop !156

57:                                               ; preds = %10
  %58 = icmp eq i32 %1, 43
  br i1 %58, label %59, label %63

59:                                               ; preds = %57
  %60 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 5
  %61 = load i8, ptr %60, align 2, !tbaa !35
  %62 = or i8 %61, -128
  store i8 %62, ptr %60, align 2, !tbaa !35
  br label %63

63:                                               ; preds = %59, %57
  %64 = getelementptr inbounds %struct.unop, ptr %0, i64 0, i32 7
  %65 = load ptr, ptr %64, align 8, !tbaa !36
  %66 = tail call ptr @Perl_doref(ptr noundef %65, i32 noundef 15, i1 noundef zeroext %2)
  br label %67

67:                                               ; preds = %10, %63
  switch i32 %1, label %136 [
    i32 135, label %71
    i32 15, label %68
    i32 149, label %68
  ]

68:                                               ; preds = %67, %67
  %69 = icmp eq i32 %1, 149
  %70 = select i1 %69, i8 32, i8 48
  br label %71

71:                                               ; preds = %67, %68
  %72 = phi i8 [ %70, %68 ], [ 16, %67 ]
  %73 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 6
  %74 = load i8, ptr %73, align 1, !tbaa !33
  %75 = or i8 %74, %72
  store i8 %75, ptr %73, align 1, !tbaa !33
  %76 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 5
  %77 = load i8, ptr %76, align 2, !tbaa !35
  %78 = or i8 %77, 32
  store i8 %78, ptr %76, align 2, !tbaa !35
  br label %136

79:                                               ; preds = %10, %10
  br i1 %2, label %80, label %84

80:                                               ; preds = %79
  %81 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 5
  %82 = load i8, ptr %81, align 2, !tbaa !35
  %83 = or i8 %82, 16
  store i8 %83, ptr %81, align 2, !tbaa !35
  br label %84

84:                                               ; preds = %79, %80, %10
  %85 = icmp eq i32 %1, 43
  br i1 %85, label %86, label %90

86:                                               ; preds = %84
  %87 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 5
  %88 = load i8, ptr %87, align 2, !tbaa !35
  %89 = or i8 %88, -128
  store i8 %89, ptr %87, align 2, !tbaa !35
  br label %90

90:                                               ; preds = %86, %84
  %91 = getelementptr inbounds %struct.unop, ptr %0, i64 0, i32 7
  %92 = load ptr, ptr %91, align 8, !tbaa !36
  %93 = tail call ptr @Perl_doref(ptr noundef %92, i32 noundef %14, i1 noundef zeroext %2)
  br label %136

94:                                               ; preds = %10, %10
  br i1 %2, label %95, label %136

95:                                               ; preds = %94
  %96 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 5
  %97 = load i8, ptr %96, align 2, !tbaa !35
  %98 = or i8 %97, 16
  store i8 %98, ptr %96, align 2, !tbaa !35
  br label %136

99:                                               ; preds = %10, %10
  %100 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 5
  %101 = load i8, ptr %100, align 2, !tbaa !35
  %102 = and i8 %101, 4
  %103 = icmp eq i8 %102, 0
  %104 = icmp eq i32 %1, 43
  %105 = or i1 %104, %103
  br i1 %105, label %136, label %106

106:                                              ; preds = %99
  %107 = getelementptr inbounds %struct.binop, ptr %0, i64 0, i32 7
  %108 = load ptr, ptr %107, align 8, !tbaa !106
  %109 = tail call ptr @Perl_doref(ptr noundef %108, i32 noundef %1, i1 noundef zeroext %2)
  br label %136

110:                                              ; preds = %10, %10
  %111 = getelementptr inbounds %struct.binop, ptr %0, i64 0, i32 7
  %112 = load ptr, ptr %111, align 8, !tbaa !106
  %113 = tail call ptr @Perl_doref(ptr noundef %112, i32 noundef %14, i1 noundef zeroext %2)
  switch i32 %1, label %136 [
    i32 135, label %117
    i32 15, label %114
    i32 149, label %114
  ]

114:                                              ; preds = %110, %110
  %115 = icmp eq i32 %1, 149
  %116 = select i1 %115, i8 32, i8 48
  br label %117

117:                                              ; preds = %110, %114
  %118 = phi i8 [ %116, %114 ], [ 16, %110 ]
  %119 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 6
  %120 = load i8, ptr %119, align 1, !tbaa !33
  %121 = or i8 %120, %118
  store i8 %121, ptr %119, align 1, !tbaa !33
  %122 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 5
  %123 = load i8, ptr %122, align 2, !tbaa !35
  %124 = or i8 %123, 32
  store i8 %124, ptr %122, align 2, !tbaa !35
  br label %136

125:                                              ; preds = %10, %10
  br label %126

126:                                              ; preds = %10, %10, %125
  %127 = phi i1 [ %2, %10 ], [ %2, %10 ], [ false, %125 ]
  %128 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 5
  %129 = load i8, ptr %128, align 2, !tbaa !35
  %130 = and i8 %129, 4
  %131 = icmp eq i8 %130, 0
  br i1 %131, label %136, label %132

132:                                              ; preds = %126
  %133 = getelementptr inbounds %struct.listop, ptr %0, i64 0, i32 8
  %134 = load ptr, ptr %133, align 8, !tbaa !83
  %135 = tail call ptr @Perl_doref(ptr noundef %134, i32 noundef %1, i1 noundef zeroext %127)
  br label %136

136:                                              ; preds = %51, %32, %45, %15, %110, %67, %10, %126, %117, %99, %94, %95, %71, %21, %37, %132, %106, %90
  %137 = tail call ptr @Perl_scalar(ptr noundef %0)
  br label %138

138:                                              ; preds = %6, %136
  ret ptr %0
}

; Function Attrs: nofree norecurse nosync nounwind sspstrong memory(readwrite, inaccessiblemem: none) uwtable
define internal fastcc void @S_mark_padname_lvalue(ptr nocapture noundef %0) unnamed_addr #11 {
  %2 = load ptr, ptr @PL_compcv, align 8, !tbaa !6
  %3 = getelementptr inbounds %struct.padname, ptr %0, i64 0, i32 8
  %4 = load i8, ptr %3, align 1, !tbaa !153
  %5 = or i8 %4, 4
  store i8 %5, ptr %3, align 1, !tbaa !153
  %6 = and i8 %4, 1
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %34, label %8

8:                                                ; preds = %1, %14
  %9 = phi ptr [ %17, %14 ], [ %2, %1 ]
  %10 = phi ptr [ %28, %14 ], [ %0, %1 ]
  %11 = getelementptr inbounds %struct.padname, ptr %10, i64 0, i32 3
  %12 = load i32, ptr %11, align 8, !tbaa !157
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %34, label %14

14:                                               ; preds = %8
  %15 = load ptr, ptr %9, align 8, !tbaa !10
  %16 = getelementptr inbounds %struct.xpvcv, ptr %15, i64 0, i32 10
  %17 = load ptr, ptr %16, align 8, !tbaa !158
  %18 = load ptr, ptr %17, align 8, !tbaa !10
  %19 = getelementptr inbounds %struct.xpvcv, ptr %18, i64 0, i32 9
  %20 = load ptr, ptr %19, align 8, !tbaa !13
  %21 = getelementptr inbounds %struct.padlist, ptr %20, i64 0, i32 1
  %22 = load ptr, ptr %21, align 8, !tbaa !159
  %23 = load ptr, ptr %22, align 8, !tbaa !6
  %24 = getelementptr inbounds %struct.padnamelist, ptr %23, i64 0, i32 1
  %25 = load ptr, ptr %24, align 8, !tbaa !151
  %26 = zext i32 %12 to i64
  %27 = getelementptr inbounds ptr, ptr %25, i64 %26
  %28 = load ptr, ptr %27, align 8, !tbaa !6
  %29 = getelementptr inbounds %struct.padname, ptr %28, i64 0, i32 8
  %30 = load i8, ptr %29, align 1, !tbaa !153
  %31 = or i8 %30, 4
  store i8 %31, ptr %29, align 1, !tbaa !153
  %32 = and i8 %30, 1
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %34, label %8, !llvm.loop !161

34:                                               ; preds = %8, %14, %1
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(none) uwtable
define internal fastcc zeroext i1 @S_vivifies(i16 noundef zeroext %0) unnamed_addr #8 {
  switch i16 %0, label %2 [
    i16 135, label %3
    i16 139, label %3
    i16 149, label %3
    i16 140, label %3
    i16 15, label %3
    i16 151, label %3
    i16 136, label %3
    i16 152, label %3
    i16 150, label %3
    i16 138, label %3
  ]

2:                                                ; preds = %1
  br label %3

3:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %2
  %4 = phi i1 [ false, %2 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ]
  ret i1 %4
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @S_lvref(ptr nocapture noundef %0, i32 noundef %1) unnamed_addr #4 {
  br label %3

3:                                                ; preds = %184, %2
  %4 = phi ptr [ %0, %2 ], [ %186, %184 ]
  %5 = getelementptr inbounds %struct.op, ptr %4, i64 0, i32 4
  %6 = load i16, ptr %5, align 8
  %7 = and i16 %6, 511
  %8 = zext i16 %7 to i32
  switch i32 %8, label %202 [
    i32 180, label %9
    i32 3, label %236
    i32 135, label %20
    i32 17, label %56
    i32 149, label %88
    i32 15, label %101
    i32 11, label %115
    i32 9, label %124
    i32 10, label %134
    i32 138, label %156
    i32 150, label %156
    i32 139, label %164
    i32 151, label %164
    i32 0, label %173
    i32 158, label %187
    i32 1, label %196
  ]

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.unop, ptr %4, i64 0, i32 7
  %11 = load ptr, ptr %10, align 8, !tbaa !36
  %12 = getelementptr inbounds %struct.op, ptr %11, i64 0, i32 1
  %13 = load ptr, ptr %12, align 8, !tbaa !38
  %14 = icmp eq ptr %13, null
  br i1 %14, label %236, label %15

15:                                               ; preds = %9, %15
  %16 = phi ptr [ %18, %15 ], [ %13, %9 ]
  tail call fastcc void @S_lvref(ptr noundef nonnull %16, i32 noundef %1)
  %17 = getelementptr inbounds %struct.op, ptr %16, i64 0, i32 1
  %18 = load ptr, ptr %17, align 8, !tbaa !38
  %19 = icmp eq ptr %18, null
  br i1 %19, label %236, label %15, !llvm.loop !162

20:                                               ; preds = %3
  %21 = getelementptr inbounds %struct.op, ptr %4, i64 0, i32 4
  %22 = getelementptr inbounds %struct.unop, ptr %4, i64 0, i32 7
  %23 = load ptr, ptr %22, align 8, !tbaa !36
  %24 = getelementptr inbounds %struct.op, ptr %23, i64 0, i32 4
  %25 = load i16, ptr %24, align 8
  %26 = and i16 %25, 511
  %27 = icmp eq i16 %26, 7
  br i1 %27, label %28, label %204

28:                                               ; preds = %20
  %29 = getelementptr inbounds %struct.op, ptr %4, i64 0, i32 5
  %30 = load i8, ptr %29, align 2, !tbaa !35
  %31 = or i8 %30, 64
  store i8 %31, ptr %29, align 2, !tbaa !35
  %32 = and i8 %30, 8
  %33 = icmp eq i8 %32, 0
  %34 = getelementptr inbounds %struct.op, ptr %4, i64 0, i32 6
  %35 = load i8, ptr %34, align 1, !tbaa !33
  br i1 %33, label %54, label %36

36:                                               ; preds = %28
  %37 = icmp sgt i8 %35, -1
  br i1 %37, label %41, label %38

38:                                               ; preds = %36
  %39 = tail call ptr (ptr, ...) @Perl_form(ptr noundef nonnull @.str.44) #29
  %40 = tail call i32 @Perl_yyerror(ptr noundef %39) #29
  br label %236

41:                                               ; preds = %148, %36
  %42 = phi ptr [ %135, %148 ], [ %21, %36 ]
  %43 = phi i8 [ %145, %148 ], [ %31, %36 ]
  %44 = phi i8 [ %151, %148 ], [ %35, %36 ]
  %45 = phi i16 [ %149, %148 ], [ %6, %36 ]
  %46 = and i16 %45, -512
  %47 = or i16 %46, 394
  store i16 %47, ptr %42, align 8
  %48 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_ppaddr, i64 0, i64 394), align 8, !tbaa !6
  %49 = getelementptr inbounds %struct.op, ptr %4, i64 0, i32 2
  store ptr %48, ptr %49, align 8, !tbaa !78
  %50 = getelementptr inbounds %struct.op, ptr %4, i64 0, i32 6
  %51 = and i8 %44, -64
  store i8 %51, ptr %50, align 1, !tbaa !33
  %52 = getelementptr inbounds %struct.op, ptr %4, i64 0, i32 5
  %53 = or i8 %43, 48
  store i8 %53, ptr %52, align 2, !tbaa !35
  br label %236

54:                                               ; preds = %28
  %55 = or i8 %35, 16
  store i8 %55, ptr %34, align 1, !tbaa !33
  br label %103

56:                                               ; preds = %3
  %57 = getelementptr inbounds %struct.op, ptr %4, i64 0, i32 4
  %58 = getelementptr inbounds %struct.unop, ptr %4, i64 0, i32 7
  %59 = load ptr, ptr %58, align 8, !tbaa !36
  %60 = getelementptr inbounds %struct.op, ptr %59, i64 0, i32 4
  %61 = load i16, ptr %60, align 8
  %62 = and i16 %61, 511
  %63 = icmp eq i16 %62, 0
  br i1 %63, label %64, label %71

64:                                               ; preds = %56
  %65 = getelementptr inbounds %struct.unop, ptr %59, i64 0, i32 7
  %66 = load ptr, ptr %65, align 8, !tbaa !36
  %67 = getelementptr inbounds %struct.op, ptr %66, i64 0, i32 1
  %68 = load ptr, ptr %67, align 8, !tbaa !38
  %69 = getelementptr inbounds %struct.unop, ptr %68, i64 0, i32 7
  %70 = load ptr, ptr %69, align 8, !tbaa !36
  br label %71

71:                                               ; preds = %64, %56
  %72 = phi ptr [ %70, %64 ], [ %59, %56 ]
  %73 = getelementptr inbounds %struct.op, ptr %4, i64 0, i32 6
  store i8 48, ptr %73, align 1, !tbaa !33
  %74 = getelementptr inbounds %struct.op, ptr %72, i64 0, i32 4
  %75 = load i16, ptr %74, align 8
  %76 = and i16 %75, 511
  switch i16 %76, label %204 [
    i16 7, label %77
    i16 387, label %81
  ]

77:                                               ; preds = %71
  %78 = getelementptr inbounds %struct.op, ptr %4, i64 0, i32 5
  %79 = load i8, ptr %78, align 2, !tbaa !35
  %80 = or i8 %79, 64
  store i8 %80, ptr %78, align 2, !tbaa !35
  br label %223

81:                                               ; preds = %71
  %82 = getelementptr inbounds %struct.op, ptr %72, i64 0, i32 3
  %83 = load i64, ptr %82, align 8, !tbaa !34
  %84 = getelementptr inbounds %struct.op, ptr %4, i64 0, i32 3
  store i64 %83, ptr %84, align 8, !tbaa !34
  store i64 0, ptr %82, align 8, !tbaa !34
  tail call void @Perl_op_free(ptr noundef nonnull %59)
  store ptr null, ptr %58, align 8, !tbaa !36
  %85 = getelementptr inbounds %struct.op, ptr %4, i64 0, i32 5
  %86 = load i8, ptr %85, align 2, !tbaa !35
  %87 = and i8 %86, -5
  store i8 %87, ptr %85, align 2, !tbaa !35
  br label %223

88:                                               ; preds = %3
  %89 = getelementptr inbounds %struct.op, ptr %4, i64 0, i32 5
  %90 = load i8, ptr %89, align 2, !tbaa !35
  %91 = and i8 %90, 8
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %96, label %93

93:                                               ; preds = %115, %88
  %94 = tail call ptr (ptr, ...) @Perl_form(ptr noundef nonnull @.str.45) #29
  %95 = tail call i32 @Perl_yyerror(ptr noundef %94) #29
  br label %236

96:                                               ; preds = %88
  %97 = getelementptr inbounds %struct.op, ptr %4, i64 0, i32 4
  %98 = getelementptr inbounds %struct.op, ptr %4, i64 0, i32 6
  %99 = load i8, ptr %98, align 1, !tbaa !33
  %100 = or i8 %99, 32
  store i8 %100, ptr %98, align 1, !tbaa !33
  br label %103

101:                                              ; preds = %3
  %102 = getelementptr inbounds %struct.op, ptr %4, i64 0, i32 4
  br label %103

103:                                              ; preds = %101, %96, %54
  %104 = phi ptr [ %102, %101 ], [ %97, %96 ], [ %21, %54 ]
  %105 = getelementptr inbounds %struct.unop, ptr %4, i64 0, i32 7
  %106 = load ptr, ptr %105, align 8, !tbaa !36
  %107 = getelementptr inbounds %struct.op, ptr %106, i64 0, i32 4
  %108 = load i16, ptr %107, align 8
  %109 = and i16 %108, 511
  %110 = icmp eq i16 %109, 7
  br i1 %110, label %111, label %204

111:                                              ; preds = %103
  %112 = getelementptr inbounds %struct.op, ptr %4, i64 0, i32 5
  %113 = load i8, ptr %112, align 2, !tbaa !35
  %114 = or i8 %113, 64
  store i8 %114, ptr %112, align 2, !tbaa !35
  br label %223

115:                                              ; preds = %3
  %116 = getelementptr inbounds %struct.op, ptr %4, i64 0, i32 5
  %117 = load i8, ptr %116, align 2, !tbaa !35
  %118 = and i8 %117, 8
  %119 = icmp eq i8 %118, 0
  br i1 %119, label %120, label %93

120:                                              ; preds = %115
  %121 = getelementptr inbounds %struct.op, ptr %4, i64 0, i32 6
  %122 = load i8, ptr %121, align 1, !tbaa !33
  %123 = or i8 %122, 32
  store i8 %123, ptr %121, align 1, !tbaa !33
  br label %124

124:                                              ; preds = %3, %120
  %125 = getelementptr inbounds %struct.op, ptr %4, i64 0, i32 4
  %126 = load ptr, ptr @PL_comppad_name, align 8, !tbaa !6
  %127 = getelementptr inbounds %struct.padnamelist, ptr %126, i64 0, i32 1
  %128 = load ptr, ptr %127, align 8, !tbaa !151
  %129 = getelementptr inbounds %struct.op, ptr %4, i64 0, i32 3
  %130 = load i64, ptr %129, align 8, !tbaa !34
  %131 = getelementptr inbounds ptr, ptr %128, i64 %130
  %132 = load ptr, ptr %131, align 8, !tbaa !6
  %133 = getelementptr inbounds %struct.padname, ptr %132, i64 0, i32 6
  store i32 2147483647, ptr %133, align 4, !tbaa !163
  br label %223

134:                                              ; preds = %3
  %135 = getelementptr inbounds %struct.op, ptr %4, i64 0, i32 4
  %136 = load ptr, ptr @PL_comppad_name, align 8, !tbaa !6
  %137 = getelementptr inbounds %struct.padnamelist, ptr %136, i64 0, i32 1
  %138 = load ptr, ptr %137, align 8, !tbaa !151
  %139 = getelementptr inbounds %struct.op, ptr %4, i64 0, i32 3
  %140 = load i64, ptr %139, align 8, !tbaa !34
  %141 = getelementptr inbounds ptr, ptr %138, i64 %140
  %142 = load ptr, ptr %141, align 8, !tbaa !6
  %143 = getelementptr inbounds %struct.padname, ptr %142, i64 0, i32 6
  store i32 2147483647, ptr %143, align 4, !tbaa !163
  %144 = getelementptr inbounds %struct.op, ptr %4, i64 0, i32 5
  %145 = load i8, ptr %144, align 2, !tbaa !35
  %146 = and i8 %145, 8
  %147 = icmp eq i8 %146, 0
  br i1 %147, label %152, label %148

148:                                              ; preds = %134
  %149 = load i16, ptr %135, align 8
  %150 = getelementptr inbounds %struct.op, ptr %4, i64 0, i32 6
  %151 = load i8, ptr %150, align 1, !tbaa !33
  br label %41

152:                                              ; preds = %134
  %153 = getelementptr inbounds %struct.op, ptr %4, i64 0, i32 6
  %154 = load i8, ptr %153, align 1, !tbaa !33
  %155 = or i8 %154, 16
  store i8 %155, ptr %153, align 1, !tbaa !33
  br label %223

156:                                              ; preds = %3, %3
  %157 = getelementptr inbounds %struct.op, ptr %4, i64 0, i32 4
  %158 = getelementptr inbounds %struct.op, ptr %4, i64 0, i32 6
  %159 = load i8, ptr %158, align 1, !tbaa !33
  %160 = or i8 %159, 4
  store i8 %160, ptr %158, align 1, !tbaa !33
  %161 = getelementptr inbounds %struct.op, ptr %4, i64 0, i32 5
  %162 = load i8, ptr %161, align 2, !tbaa !35
  %163 = or i8 %162, 64
  store i8 %163, ptr %161, align 2, !tbaa !35
  br label %223

164:                                              ; preds = %3, %3
  %165 = getelementptr inbounds %struct.op, ptr %4, i64 0, i32 4
  %166 = and i16 %6, -512
  %167 = or i16 %166, 393
  store i16 %167, ptr %165, align 8
  %168 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_ppaddr, i64 0, i64 393), align 8, !tbaa !6
  %169 = getelementptr inbounds %struct.op, ptr %4, i64 0, i32 2
  store ptr %168, ptr %169, align 8, !tbaa !78
  %170 = getelementptr inbounds %struct.op, ptr %4, i64 0, i32 6
  %171 = load i8, ptr %170, align 1, !tbaa !33
  %172 = and i8 %171, -124
  store i8 %172, ptr %170, align 1, !tbaa !33
  br label %236

173:                                              ; preds = %3
  %174 = getelementptr inbounds %struct.op, ptr %4, i64 0, i32 5
  %175 = load i8, ptr %174, align 2, !tbaa !35
  %176 = icmp sgt i8 %175, -1
  br i1 %176, label %177, label %202

177:                                              ; preds = %173
  %178 = and i8 %175, 4
  %179 = icmp eq i8 %178, 0
  br i1 %179, label %236, label %180

180:                                              ; preds = %177
  %181 = getelementptr inbounds %struct.op, ptr %4, i64 0, i32 3
  %182 = load i64, ptr %181, align 8, !tbaa !34
  %183 = icmp eq i64 %182, 158
  br i1 %183, label %187, label %184

184:                                              ; preds = %180
  %185 = getelementptr inbounds %struct.binop, ptr %4, i64 0, i32 7
  %186 = load ptr, ptr %185, align 8, !tbaa !106
  br label %3

187:                                              ; preds = %180, %3
  %188 = getelementptr inbounds %struct.listop, ptr %4, i64 0, i32 7
  %189 = load ptr, ptr %188, align 8, !tbaa !6
  %190 = icmp eq ptr %189, null
  br i1 %190, label %236, label %191

191:                                              ; preds = %187, %191
  %192 = phi ptr [ %194, %191 ], [ %189, %187 ]
  tail call fastcc void @S_lvref(ptr noundef nonnull %192, i32 noundef %1)
  %193 = getelementptr inbounds %struct.op, ptr %192, i64 0, i32 1
  %194 = load ptr, ptr %193, align 8, !tbaa !6
  %195 = icmp eq ptr %194, null
  br i1 %195, label %236, label %191, !llvm.loop !164

196:                                              ; preds = %3
  %197 = getelementptr inbounds %struct.op, ptr %4, i64 0, i32 4
  %198 = getelementptr inbounds %struct.op, ptr %4, i64 0, i32 5
  %199 = load i8, ptr %198, align 2, !tbaa !35
  %200 = and i8 %199, 8
  %201 = icmp eq i8 %200, 0
  br i1 %201, label %204, label %236

202:                                              ; preds = %173, %3
  %203 = getelementptr inbounds %struct.op, ptr %4, i64 0, i32 4
  br label %204

204:                                              ; preds = %202, %71, %196, %103, %20
  %205 = phi ptr [ %203, %202 ], [ %57, %71 ], [ %197, %196 ], [ %104, %103 ], [ %21, %20 ]
  switch i16 %7, label %212 [
    i16 0, label %206
    i16 380, label %210
  ]

206:                                              ; preds = %204
  %207 = getelementptr inbounds %struct.op, ptr %4, i64 0, i32 5
  %208 = load i8, ptr %207, align 2, !tbaa !35
  %209 = icmp sgt i8 %208, -1
  br i1 %209, label %212, label %216

210:                                              ; preds = %204
  %211 = tail call ptr @Perl_custom_op_get_field(ptr noundef nonnull %4, i32 noundef 2)
  br label %216

212:                                              ; preds = %204, %206
  %213 = zext i16 %7 to i64
  %214 = getelementptr inbounds [0 x ptr], ptr @PL_op_desc, i64 0, i64 %213
  %215 = load ptr, ptr %214, align 8, !tbaa !6
  br label %216

216:                                              ; preds = %210, %212, %206
  %217 = phi ptr [ @.str.36, %206 ], [ %211, %210 ], [ %215, %212 ]
  %218 = sext i32 %1 to i64
  %219 = getelementptr inbounds [0 x ptr], ptr @PL_op_desc, i64 0, i64 %218
  %220 = load ptr, ptr %219, align 8, !tbaa !6
  %221 = tail call ptr (ptr, ...) @Perl_form(ptr noundef nonnull @.str.46, ptr noundef %217, ptr noundef %220) #29
  %222 = tail call i32 @Perl_yyerror(ptr noundef %221) #29
  br label %223

223:                                              ; preds = %111, %124, %152, %156, %216, %81, %77
  %224 = phi ptr [ %104, %111 ], [ %125, %124 ], [ %135, %152 ], [ %157, %156 ], [ %205, %216 ], [ %57, %81 ], [ %57, %77 ]
  %225 = load i16, ptr %224, align 8
  %226 = and i16 %225, -512
  %227 = or i16 %226, 392
  store i16 %227, ptr %224, align 8
  %228 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_ppaddr, i64 0, i64 392), align 8, !tbaa !6
  %229 = getelementptr inbounds %struct.op, ptr %4, i64 0, i32 2
  store ptr %228, ptr %229, align 8, !tbaa !78
  %230 = getelementptr inbounds %struct.op, ptr %4, i64 0, i32 6
  %231 = load i8, ptr %230, align 1, !tbaa !33
  %232 = and i8 %231, -12
  %233 = icmp eq i32 %1, 201
  %234 = or i8 %232, 8
  %235 = select i1 %233, i8 %234, i8 %232
  store i8 %235, ptr %230, align 1, !tbaa !33
  br label %236

236:                                              ; preds = %177, %3, %191, %15, %187, %9, %196, %223, %164, %93, %41, %38
  ret void
}

declare zeroext i1 @Perl_feature_is_enabled(ptr noundef, i64 noundef) local_unnamed_addr #6

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_apply_attrs_string(ptr noundef %0, ptr noundef %1, ptr noundef %2, i64 noundef %3) local_unnamed_addr #4 {
  %5 = icmp eq i64 %3, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %4
  %7 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %2) #30
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %88, label %9

9:                                                ; preds = %4, %6
  %10 = phi i64 [ %7, %6 ], [ %3, %4 ]
  br label %11

11:                                               ; preds = %9, %85
  %12 = phi ptr [ %56, %85 ], [ %2, %9 ]
  %13 = phi ptr [ %86, %85 ], [ null, %9 ]
  %14 = phi i64 [ %55, %85 ], [ %10, %9 ]
  %15 = load i8, ptr %12, align 1, !tbaa !13
  %16 = zext i8 %15 to i64
  %17 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %16
  %18 = load i32, ptr %17, align 4, !tbaa !52
  %19 = and i32 %18, 17408
  %20 = icmp eq i32 %19, 17408
  br i1 %20, label %21, label %35

21:                                               ; preds = %11, %21
  %22 = phi ptr [ %25, %21 ], [ %12, %11 ]
  %23 = phi i64 [ %24, %21 ], [ %14, %11 ]
  %24 = add i64 %23, -1
  %25 = getelementptr inbounds i8, ptr %22, i64 1
  %26 = load i8, ptr %25, align 1, !tbaa !13
  %27 = zext i8 %26 to i64
  %28 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %27
  %29 = load i32, ptr %28, align 4, !tbaa !52
  %30 = and i32 %29, 17408
  %31 = icmp eq i32 %30, 17408
  %32 = icmp ne i64 %24, 0
  %33 = select i1 %31, i1 %32, i1 false
  br i1 %33, label %21, label %34, !llvm.loop !165

34:                                               ; preds = %21
  br i1 %32, label %35, label %88

35:                                               ; preds = %11, %34
  %36 = phi ptr [ %25, %34 ], [ %12, %11 ]
  %37 = phi i64 [ %24, %34 ], [ %14, %11 ]
  %38 = phi i32 [ %29, %34 ], [ %18, %11 ]
  %39 = and i32 %38, 17408
  %40 = icmp eq i32 %39, 17408
  br i1 %40, label %54, label %41

41:                                               ; preds = %35, %41
  %42 = phi ptr [ %45, %41 ], [ %36, %35 ]
  %43 = phi i64 [ %44, %41 ], [ %37, %35 ]
  %44 = add i64 %43, -1
  %45 = getelementptr inbounds i8, ptr %42, i64 1
  %46 = load i8, ptr %45, align 1, !tbaa !13
  %47 = zext i8 %46 to i64
  %48 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %47
  %49 = load i32, ptr %48, align 4, !tbaa !52
  %50 = and i32 %49, 17408
  %51 = icmp ne i32 %50, 17408
  %52 = icmp ne i64 %44, 0
  %53 = select i1 %51, i1 %52, i1 false
  br i1 %53, label %41, label %54, !llvm.loop !166

54:                                               ; preds = %41, %35
  %55 = phi i64 [ %37, %35 ], [ %44, %41 ]
  %56 = phi ptr [ %36, %35 ], [ %45, %41 ]
  %57 = ptrtoint ptr %56 to i64
  %58 = ptrtoint ptr %36 to i64
  %59 = sub i64 %57, %58
  %60 = tail call ptr @Perl_newSVpvn(ptr noundef nonnull %36, i64 noundef %59) #29
  %61 = tail call ptr @Perl_newSVOP(i32 noundef 5, i32 noundef 0, ptr noundef %60)
  %62 = icmp eq ptr %13, null
  br i1 %62, label %85, label %63

63:                                               ; preds = %54
  %64 = icmp eq ptr %61, null
  br i1 %64, label %85, label %65

65:                                               ; preds = %63
  %66 = getelementptr inbounds %struct.op, ptr %13, i64 0, i32 4
  %67 = load i16, ptr %66, align 8
  %68 = and i16 %67, 511
  %69 = icmp eq i16 %68, 158
  br i1 %69, label %72, label %70

70:                                               ; preds = %65
  %71 = tail call ptr @Perl_newLISTOP(i32 noundef 158, i32 noundef 0, ptr noundef nonnull %13, ptr noundef nonnull %61)
  br label %85

72:                                               ; preds = %65
  %73 = getelementptr inbounds %struct.op, ptr %13, i64 0, i32 5
  %74 = load i8, ptr %73, align 2, !tbaa !35
  %75 = and i8 %74, 8
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %79, label %77

77:                                               ; preds = %72
  %78 = tail call ptr @Perl_newLISTOP(i32 noundef 158, i32 noundef 0, ptr noundef nonnull %13, ptr noundef nonnull %61)
  br label %85

79:                                               ; preds = %72
  %80 = getelementptr inbounds %struct.listop, ptr %13, i64 0, i32 8
  %81 = load ptr, ptr %80, align 8, !tbaa !83
  %82 = tail call ptr @Perl_op_sibling_splice(ptr noundef nonnull %13, ptr noundef %81, i32 noundef 0, ptr noundef nonnull %61)
  %83 = load i8, ptr %73, align 2, !tbaa !35
  %84 = or i8 %83, 4
  store i8 %84, ptr %73, align 2, !tbaa !35
  br label %85

85:                                               ; preds = %79, %77, %70, %63, %54
  %86 = phi ptr [ %61, %54 ], [ %13, %63 ], [ %71, %70 ], [ %78, %77 ], [ %13, %79 ]
  %87 = icmp eq i64 %55, 0
  br i1 %87, label %88, label %11, !llvm.loop !167

88:                                               ; preds = %34, %85, %6
  %89 = phi ptr [ null, %6 ], [ %13, %34 ], [ %86, %85 ]
  %90 = tail call ptr @Perl_newSVpvn(ptr noundef nonnull @.str.47, i64 noundef 10) #29
  %91 = tail call ptr @Perl_newSVpv(ptr noundef %0, i64 noundef 0) #29
  %92 = tail call ptr @Perl_newSVOP(i32 noundef 5, i32 noundef 0, ptr noundef %91)
  %93 = tail call ptr @Perl_newRV(ptr noundef %1) #29
  %94 = tail call ptr @Perl_newSVOP(i32 noundef 5, i32 noundef 0, ptr noundef %93)
  %95 = icmp eq ptr %94, null
  br i1 %95, label %119, label %96

96:                                               ; preds = %88
  %97 = icmp eq ptr %89, null
  br i1 %97, label %119, label %98

98:                                               ; preds = %96
  %99 = getelementptr inbounds %struct.op, ptr %89, i64 0, i32 4
  %100 = load i16, ptr %99, align 8
  %101 = and i16 %100, 511
  %102 = icmp eq i16 %101, 158
  br i1 %102, label %103, label %117

103:                                              ; preds = %98
  %104 = getelementptr inbounds %struct.listop, ptr %89, i64 0, i32 7
  %105 = load ptr, ptr %104, align 8, !tbaa !6
  %106 = tail call ptr @Perl_op_sibling_splice(ptr noundef nonnull %89, ptr noundef %105, i32 noundef 0, ptr noundef nonnull %94)
  %107 = getelementptr inbounds %struct.op, ptr %94, i64 0, i32 5
  %108 = load i8, ptr %107, align 2, !tbaa !35
  %109 = and i8 %108, 8
  %110 = icmp eq i8 %109, 0
  %111 = getelementptr inbounds %struct.op, ptr %89, i64 0, i32 5
  %112 = load i8, ptr %111, align 2, !tbaa !35
  %113 = and i8 %112, -13
  %114 = select i1 %110, i8 %113, i8 %112
  %115 = getelementptr inbounds %struct.op, ptr %89, i64 0, i32 5
  %116 = or i8 %114, 4
  store i8 %116, ptr %115, align 2, !tbaa !35
  br label %119

117:                                              ; preds = %98
  %118 = tail call ptr @Perl_newLISTOP(i32 noundef 158, i32 noundef 0, ptr noundef nonnull %94, ptr noundef nonnull %89)
  br label %119

119:                                              ; preds = %88, %96, %103, %117
  %120 = phi ptr [ %89, %103 ], [ %118, %117 ], [ %89, %88 ], [ %94, %96 ]
  %121 = icmp eq ptr %92, null
  br i1 %121, label %145, label %122

122:                                              ; preds = %119
  %123 = icmp eq ptr %120, null
  br i1 %123, label %145, label %124

124:                                              ; preds = %122
  %125 = getelementptr inbounds %struct.op, ptr %120, i64 0, i32 4
  %126 = load i16, ptr %125, align 8
  %127 = and i16 %126, 511
  %128 = icmp eq i16 %127, 158
  br i1 %128, label %129, label %143

129:                                              ; preds = %124
  %130 = getelementptr inbounds %struct.listop, ptr %120, i64 0, i32 7
  %131 = load ptr, ptr %130, align 8, !tbaa !6
  %132 = tail call ptr @Perl_op_sibling_splice(ptr noundef nonnull %120, ptr noundef %131, i32 noundef 0, ptr noundef nonnull %92)
  %133 = getelementptr inbounds %struct.op, ptr %92, i64 0, i32 5
  %134 = load i8, ptr %133, align 2, !tbaa !35
  %135 = and i8 %134, 8
  %136 = icmp eq i8 %135, 0
  %137 = getelementptr inbounds %struct.op, ptr %120, i64 0, i32 5
  %138 = load i8, ptr %137, align 2, !tbaa !35
  %139 = and i8 %138, -13
  %140 = select i1 %136, i8 %139, i8 %138
  %141 = getelementptr inbounds %struct.op, ptr %120, i64 0, i32 5
  %142 = or i8 %140, 4
  store i8 %142, ptr %141, align 2, !tbaa !35
  br label %145

143:                                              ; preds = %124
  %144 = tail call ptr @Perl_newLISTOP(i32 noundef 158, i32 noundef 0, ptr noundef nonnull %92, ptr noundef nonnull %120)
  br label %145

145:                                              ; preds = %119, %122, %129, %143
  %146 = phi ptr [ %120, %129 ], [ %144, %143 ], [ %120, %119 ], [ %92, %122 ]
  tail call void (i32, ptr, ptr, ...) @Perl_load_module(i32 noundef 4, ptr noundef %90, ptr noundef null, ptr noundef %146)
  ret void
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare i64 @strlen(ptr nocapture noundef) local_unnamed_addr #7

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_op_append_elem(i32 noundef %0, ptr noundef %1, ptr noundef %2) local_unnamed_addr #4 {
  %4 = icmp eq ptr %1, null
  br i1 %4, label %31, label %5

5:                                                ; preds = %3
  %6 = icmp eq ptr %2, null
  br i1 %6, label %31, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds %struct.op, ptr %1, i64 0, i32 4
  %9 = load i16, ptr %8, align 8
  %10 = and i16 %9, 511
  %11 = zext i16 %10 to i32
  %12 = icmp eq i32 %11, %0
  br i1 %12, label %15, label %13

13:                                               ; preds = %7
  %14 = tail call ptr @Perl_newLISTOP(i32 noundef %0, i32 noundef 0, ptr noundef nonnull %1, ptr noundef nonnull %2)
  br label %31

15:                                               ; preds = %7
  %16 = icmp eq i32 %0, 158
  br i1 %16, label %17, label %24

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.op, ptr %1, i64 0, i32 5
  %19 = load i8, ptr %18, align 2, !tbaa !35
  %20 = and i8 %19, 8
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = tail call ptr @Perl_newLISTOP(i32 noundef 158, i32 noundef 0, ptr noundef nonnull %1, ptr noundef nonnull %2)
  br label %31

24:                                               ; preds = %17, %15
  %25 = getelementptr inbounds %struct.listop, ptr %1, i64 0, i32 8
  %26 = load ptr, ptr %25, align 8, !tbaa !83
  %27 = tail call ptr @Perl_op_sibling_splice(ptr noundef nonnull %1, ptr noundef %26, i32 noundef 0, ptr noundef nonnull %2)
  %28 = getelementptr inbounds %struct.op, ptr %1, i64 0, i32 5
  %29 = load i8, ptr %28, align 2, !tbaa !35
  %30 = or i8 %29, 4
  store i8 %30, ptr %28, align 2, !tbaa !35
  br label %31

31:                                               ; preds = %13, %22, %5, %3, %24
  %32 = phi ptr [ %1, %24 ], [ %2, %3 ], [ %1, %5 ], [ %14, %13 ], [ %23, %22 ]
  ret ptr %32
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_load_module(i32 noundef %0, ptr noundef %1, ptr noundef %2, ...) local_unnamed_addr #4 {
  %4 = alloca [1 x %struct.__va_list_tag], align 16
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #29
  call void @llvm.va_start(ptr nonnull %4)
  call void @Perl_vload_module(i32 noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef nonnull %4)
  call void @llvm.va_end(ptr nonnull %4)
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #29
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_op_prepend_elem(i32 noundef %0, ptr noundef %1, ptr noundef %2) local_unnamed_addr #4 {
  %4 = icmp eq ptr %1, null
  br i1 %4, label %78, label %5

5:                                                ; preds = %3
  %6 = icmp eq ptr %2, null
  br i1 %6, label %78, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 4
  %9 = load i16, ptr %8, align 8
  %10 = and i16 %9, 511
  %11 = zext i16 %10 to i32
  %12 = icmp eq i32 %11, %0
  br i1 %12, label %13, label %76

13:                                               ; preds = %7
  %14 = icmp eq i32 %0, 158
  %15 = getelementptr inbounds %struct.listop, ptr %2, i64 0, i32 7
  %16 = load ptr, ptr %15, align 8, !tbaa !6
  br i1 %14, label %17, label %27

17:                                               ; preds = %13
  %18 = tail call ptr @Perl_op_sibling_splice(ptr noundef nonnull %2, ptr noundef %16, i32 noundef 0, ptr noundef nonnull %1)
  %19 = getelementptr inbounds %struct.op, ptr %1, i64 0, i32 5
  %20 = load i8, ptr %19, align 2, !tbaa !35
  %21 = and i8 %20, 8
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %72

23:                                               ; preds = %17
  %24 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 5
  %25 = load i8, ptr %24, align 2, !tbaa !35
  %26 = and i8 %25, -9
  store i8 %26, ptr %24, align 2, !tbaa !35
  br label %72

27:                                               ; preds = %13, %27
  %28 = phi ptr [ %30, %27 ], [ %1, %13 ]
  %29 = getelementptr inbounds %struct.op, ptr %28, i64 0, i32 1
  %30 = load ptr, ptr %29, align 8, !tbaa !38
  %31 = icmp eq ptr %30, null
  br i1 %31, label %32, label %27, !llvm.loop !80

32:                                               ; preds = %27
  %33 = getelementptr inbounds %struct.op, ptr %28, i64 0, i32 1
  %34 = icmp eq ptr %16, null
  %35 = getelementptr inbounds %struct.op, ptr %28, i64 0, i32 4
  %36 = load i16, ptr %35, align 8
  %37 = select i1 %34, i16 0, i16 16384
  %38 = and i16 %36, -16385
  %39 = or i16 %38, %37
  store i16 %39, ptr %35, align 8
  store ptr %16, ptr %33, align 8, !tbaa !38
  store ptr %1, ptr %15, align 8, !tbaa !81
  %40 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 5
  %41 = load i8, ptr %40, align 2, !tbaa !35
  %42 = or i8 %41, 4
  store i8 %42, ptr %40, align 2, !tbaa !35
  br i1 %34, label %43, label %72

43:                                               ; preds = %32
  %44 = load i16, ptr %8, align 8
  %45 = and i16 %44, 511
  %46 = icmp eq i16 %45, 380
  br i1 %46, label %47, label %51

47:                                               ; preds = %43
  %48 = tail call ptr @Perl_custom_op_get_field(ptr noundef nonnull %2, i32 noundef 4)
  %49 = ptrtoint ptr %48 to i64
  %50 = trunc i64 %49 to i32
  br label %63

51:                                               ; preds = %43
  %52 = zext i16 %45 to i64
  %53 = icmp eq i16 %45, 0
  br i1 %53, label %54, label %57

54:                                               ; preds = %51
  %55 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 3
  %56 = load i64, ptr %55, align 8, !tbaa !34
  br label %57

57:                                               ; preds = %54, %51
  %58 = phi i64 [ %56, %54 ], [ %52, %51 ]
  %59 = and i64 %58, 4294967295
  %60 = getelementptr inbounds [0 x i32], ptr @PL_opargs, i64 0, i64 %59
  %61 = load i32, ptr %60, align 4, !tbaa !52
  %62 = and i32 %61, 3840
  br label %63

63:                                               ; preds = %57, %47
  %64 = phi i32 [ %50, %47 ], [ %62, %57 ]
  %65 = add i32 %64, -512
  %66 = tail call i32 @llvm.fshl.i32(i32 %64, i32 %65, i32 24)
  switch i32 %66, label %69 [
    i32 7, label %67
    i32 3, label %67
    i32 2, label %67
    i32 0, label %67
  ]

67:                                               ; preds = %63, %63, %63, %63
  %68 = getelementptr inbounds %struct.listop, ptr %2, i64 0, i32 8
  store ptr %28, ptr %68, align 8, !tbaa !83
  br label %69

69:                                               ; preds = %63, %67
  %70 = load i16, ptr %35, align 8
  %71 = and i16 %70, -16385
  store i16 %71, ptr %35, align 8
  store ptr null, ptr %33, align 8, !tbaa !38
  br label %72

72:                                               ; preds = %69, %32, %17, %23
  %73 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 5
  %74 = load i8, ptr %73, align 2, !tbaa !35
  %75 = or i8 %74, 4
  store i8 %75, ptr %73, align 2, !tbaa !35
  br label %78

76:                                               ; preds = %7
  %77 = tail call ptr @Perl_newLISTOP(i32 noundef %0, i32 noundef 0, ptr noundef nonnull %1, ptr noundef nonnull %2)
  br label %78

78:                                               ; preds = %5, %3, %76, %72
  %79 = phi ptr [ %2, %72 ], [ %77, %76 ], [ %2, %3 ], [ %1, %5 ]
  ret ptr %79
}

declare ptr @Perl_newSVpv(ptr noundef, i64 noundef) local_unnamed_addr #6

declare ptr @Perl_newRV(ptr noundef) local_unnamed_addr #6

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_my_attrs(ptr noundef %0, ptr noundef %1) local_unnamed_addr #4 {
  %3 = alloca ptr, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #29
  %4 = icmp eq ptr %1, null
  br i1 %4, label %5, label %7

5:                                                ; preds = %2
  store ptr null, ptr %3, align 8, !tbaa !6
  %6 = call fastcc ptr @S_my_kid(ptr noundef %0, ptr noundef null, ptr noundef nonnull %3)
  br label %12

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.op, ptr %1, i64 0, i32 4
  %9 = load i16, ptr %8, align 8
  %10 = or i16 %9, 2048
  store i16 %10, ptr %8, align 8
  tail call void @Perl_save_pushptr(ptr noundef nonnull %1, i32 noundef 9) #29
  store ptr null, ptr %3, align 8, !tbaa !6
  %11 = call fastcc ptr @S_my_kid(ptr noundef %0, ptr noundef nonnull %1, ptr noundef nonnull %3)
  br label %12

12:                                               ; preds = %5, %7
  %13 = load ptr, ptr %3, align 8, !tbaa !6
  %14 = icmp eq ptr %13, null
  br i1 %14, label %44, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 4
  %17 = load i16, ptr %16, align 8
  %18 = and i16 %17, 511
  %19 = icmp eq i16 %18, 9
  br i1 %19, label %20, label %26

20:                                               ; preds = %15
  %21 = tail call ptr @Perl_op_append_list(i32 noundef 158, ptr noundef nonnull %13, ptr noundef nonnull %0)
  %22 = tail call ptr @Perl_scalar(ptr noundef %21)
  %23 = getelementptr inbounds %struct.op, ptr %21, i64 0, i32 6
  %24 = load i8, ptr %23, align 1, !tbaa !33
  %25 = or i8 %24, -128
  store i8 %25, ptr %23, align 1, !tbaa !33
  br label %44

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.op, ptr %13, i64 0, i32 4
  %28 = load i16, ptr %27, align 8
  %29 = and i16 %28, 511
  %30 = icmp eq i16 %29, 158
  br i1 %30, label %31, label %42

31:                                               ; preds = %26
  %32 = getelementptr inbounds %struct.listop, ptr %13, i64 0, i32 7
  %33 = load ptr, ptr %32, align 8, !tbaa !81
  %34 = icmp eq ptr %33, null
  br i1 %34, label %42, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %struct.op, ptr %33, i64 0, i32 4
  %37 = load i16, ptr %36, align 8
  %38 = and i16 %37, 511
  %39 = icmp eq i16 %38, 3
  br i1 %39, label %40, label %42

40:                                               ; preds = %35
  %41 = tail call ptr @Perl_op_sibling_splice(ptr noundef nonnull %13, ptr noundef null, i32 noundef 1, ptr noundef null)
  tail call void @Perl_op_free(ptr noundef nonnull %33)
  br label %42

42:                                               ; preds = %40, %35, %31, %26
  %43 = tail call ptr @Perl_op_append_list(i32 noundef 158, ptr noundef nonnull %0, ptr noundef nonnull %13)
  br label %44

44:                                               ; preds = %20, %42, %12
  %45 = phi ptr [ %21, %20 ], [ %43, %42 ], [ %0, %12 ]
  %46 = load ptr, ptr @PL_parser, align 8, !tbaa !6
  %47 = getelementptr inbounds %struct.yy_parser, ptr %46, i64 0, i32 42
  store i16 0, ptr %47, align 4, !tbaa !47
  %48 = getelementptr inbounds %struct.yy_parser, ptr %46, i64 0, i32 45
  store ptr null, ptr %48, align 8, !tbaa !53
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #29
  ret ptr %45
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @S_my_kid(ptr noundef returned %0, ptr noundef %1, ptr nocapture noundef %2) unnamed_addr #4 {
  %4 = load ptr, ptr @PL_parser, align 8, !tbaa !6
  %5 = icmp eq ptr %4, null
  %6 = icmp eq ptr %0, null
  br i1 %5, label %7, label %8

7:                                                ; preds = %3
  br i1 %6, label %108, label %16

8:                                                ; preds = %3
  br i1 %6, label %108, label %9

9:                                                ; preds = %8
  %10 = getelementptr inbounds %struct.yy_parser, ptr %4, i64 0, i32 42
  %11 = load i16, ptr %10, align 4, !tbaa !47
  %12 = icmp eq i16 %11, 212
  %13 = getelementptr inbounds %struct.yy_parser, ptr %4, i64 0, i32 44
  %14 = load i8, ptr %13, align 1, !tbaa !105
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %108

16:                                               ; preds = %7, %9
  %17 = phi i1 [ %12, %9 ], [ false, %7 ]
  %18 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 4
  %19 = load i16, ptr %18, align 8
  %20 = and i16 %19, 511
  switch i16 %20, label %80 [
    i16 158, label %21
    i16 44, label %108
    i16 1, label %108
    i16 149, label %31
    i16 135, label %31
    i16 15, label %31
    i16 11, label %81
    i16 10, label %81
    i16 9, label %81
    i16 3, label %81
  ]

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.listop, ptr %0, i64 0, i32 7
  %23 = load ptr, ptr %22, align 8, !tbaa !6
  %24 = icmp eq ptr %23, null
  br i1 %24, label %108, label %25

25:                                               ; preds = %21, %25
  %26 = phi ptr [ %29, %25 ], [ %23, %21 ]
  %27 = tail call fastcc ptr @S_my_kid(ptr noundef nonnull %26, ptr noundef %1, ptr noundef %2)
  %28 = getelementptr inbounds %struct.op, ptr %26, i64 0, i32 1
  %29 = load ptr, ptr %28, align 8, !tbaa !6
  %30 = icmp eq ptr %29, null
  br i1 %30, label %108, label %25, !llvm.loop !168

31:                                               ; preds = %16, %16, %16
  %32 = getelementptr inbounds %struct.unop, ptr %0, i64 0, i32 7
  %33 = load ptr, ptr %32, align 8, !tbaa !36
  %34 = getelementptr inbounds %struct.op, ptr %33, i64 0, i32 4
  %35 = load i16, ptr %34, align 8
  %36 = and i16 %35, 511
  %37 = icmp eq i16 %36, 7
  br i1 %37, label %50, label %38

38:                                               ; preds = %31
  %39 = zext i16 %20 to i64
  %40 = getelementptr inbounds [0 x ptr], ptr @PL_op_desc, i64 0, i64 %39
  %41 = load ptr, ptr %40, align 8, !tbaa !6
  %42 = getelementptr inbounds %struct.yy_parser, ptr %4, i64 0, i32 42
  %43 = load i16, ptr %42, align 4, !tbaa !47
  %44 = icmp eq i16 %43, 143
  %45 = icmp eq i16 %43, 212
  %46 = select i1 %45, ptr @.str.3, ptr @.str.4
  %47 = select i1 %44, ptr @.str.49, ptr %46
  %48 = tail call ptr (ptr, ...) @Perl_form(ptr noundef nonnull @.str.48, ptr noundef %41, ptr noundef nonnull %47) #29
  %49 = tail call i32 @Perl_yyerror(ptr noundef %48) #29
  br label %76

50:                                               ; preds = %31
  %51 = icmp eq ptr %1, null
  br i1 %51, label %76, label %52

52:                                               ; preds = %50
  %53 = getelementptr inbounds %struct.svop, ptr %33, i64 0, i32 7
  %54 = load ptr, ptr %53, align 8, !tbaa !65
  %55 = getelementptr inbounds %struct.yy_parser, ptr %4, i64 0, i32 42
  store i16 0, ptr %55, align 4, !tbaa !47
  %56 = getelementptr inbounds %struct.yy_parser, ptr %4, i64 0, i32 45
  store ptr null, ptr %56, align 8, !tbaa !53
  %57 = load ptr, ptr %54, align 8, !tbaa !169
  %58 = getelementptr inbounds %struct.xpvgv, ptr %57, i64 0, i32 5
  %59 = load ptr, ptr %58, align 8, !tbaa !13
  switch i16 %20, label %74 [
    i16 15, label %60
    i16 135, label %63
    i16 149, label %67
  ]

60:                                               ; preds = %52
  %61 = getelementptr inbounds %struct.gv, ptr %54, i64 0, i32 3
  %62 = load ptr, ptr %61, align 8, !tbaa !13
  br label %71

63:                                               ; preds = %52
  %64 = getelementptr inbounds %struct.gv, ptr %54, i64 0, i32 3
  %65 = load ptr, ptr %64, align 8, !tbaa !13
  %66 = getelementptr inbounds %struct.gp, ptr %65, i64 0, i32 6
  br label %71

67:                                               ; preds = %52
  %68 = getelementptr inbounds %struct.gv, ptr %54, i64 0, i32 3
  %69 = load ptr, ptr %68, align 8, !tbaa !13
  %70 = getelementptr inbounds %struct.gp, ptr %69, i64 0, i32 5
  br label %71

71:                                               ; preds = %60, %67, %63
  %72 = phi ptr [ %66, %63 ], [ %70, %67 ], [ %62, %60 ]
  %73 = load ptr, ptr %72, align 8, !tbaa !6
  br label %74

74:                                               ; preds = %71, %52
  %75 = phi ptr [ %54, %52 ], [ %73, %71 ]
  tail call fastcc void @S_apply_attrs(ptr noundef %59, ptr noundef %75, ptr noundef nonnull %1)
  br label %76

76:                                               ; preds = %50, %74, %38
  %77 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 6
  %78 = load i8, ptr %77, align 1, !tbaa !33
  %79 = or i8 %78, 64
  store i8 %79, ptr %77, align 1, !tbaa !33
  br label %108

80:                                               ; preds = %16
  tail call fastcc void @S_cant_declare(ptr noundef nonnull %0)
  br label %108

81:                                               ; preds = %16, %16, %16, %16
  %82 = icmp ne i16 %20, 3
  %83 = icmp ne ptr %1, null
  %84 = and i1 %83, %82
  br i1 %84, label %85, label %100

85:                                               ; preds = %81
  %86 = getelementptr inbounds %struct.yy_parser, ptr %4, i64 0, i32 42
  store i16 0, ptr %86, align 4, !tbaa !47
  %87 = getelementptr inbounds %struct.yy_parser, ptr %4, i64 0, i32 45
  store ptr null, ptr %87, align 8, !tbaa !53
  %88 = load ptr, ptr @PL_comppad_name, align 8, !tbaa !6
  %89 = getelementptr inbounds %struct.padnamelist, ptr %88, i64 0, i32 1
  %90 = load ptr, ptr %89, align 8, !tbaa !151
  %91 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 3
  %92 = load i64, ptr %91, align 8, !tbaa !34
  %93 = getelementptr inbounds ptr, ptr %90, i64 %92
  %94 = load ptr, ptr %93, align 8, !tbaa !6
  %95 = getelementptr inbounds %struct.padname, ptr %94, i64 0, i32 2
  %96 = load ptr, ptr %95, align 8, !tbaa !13
  %97 = icmp eq ptr %96, null
  %98 = load ptr, ptr @PL_curstash, align 8
  %99 = select i1 %97, ptr %98, ptr %96
  tail call fastcc void @S_apply_attrs_my(ptr noundef %99, ptr noundef nonnull %0, ptr noundef nonnull %1, ptr noundef %2)
  br label %100

100:                                              ; preds = %85, %81
  %101 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 5
  %102 = load i8, ptr %101, align 2, !tbaa !35
  %103 = or i8 %102, 32
  store i8 %103, ptr %101, align 2, !tbaa !35
  %104 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 6
  %105 = load i8, ptr %104, align 1, !tbaa !33
  %106 = select i1 %17, i8 -64, i8 -128
  %107 = or i8 %105, %106
  store i8 %107, ptr %104, align 1, !tbaa !33
  br label %108

108:                                              ; preds = %25, %21, %16, %16, %8, %7, %9, %100, %80, %76
  ret ptr %0
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_op_append_list(i32 noundef %0, ptr noundef %1, ptr noundef %2) local_unnamed_addr #4 {
  %4 = icmp eq ptr %1, null
  br i1 %4, label %84, label %5

5:                                                ; preds = %3
  %6 = icmp eq ptr %2, null
  br i1 %6, label %84, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds %struct.op, ptr %1, i64 0, i32 4
  %9 = load i16, ptr %8, align 8
  %10 = and i16 %9, 511
  %11 = zext i16 %10 to i32
  %12 = icmp eq i32 %11, %0
  br i1 %12, label %15, label %13

13:                                               ; preds = %7
  %14 = tail call ptr @Perl_op_prepend_elem(i32 noundef %0, ptr noundef nonnull %1, ptr noundef nonnull %2)
  br label %84

15:                                               ; preds = %7
  %16 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 4
  %17 = load i16, ptr %16, align 8
  %18 = and i16 %17, 511
  %19 = zext i16 %18 to i32
  %20 = icmp eq i32 %19, %0
  br i1 %20, label %37, label %21

21:                                               ; preds = %15
  %22 = icmp eq i32 %0, 158
  br i1 %22, label %23, label %30

23:                                               ; preds = %21
  %24 = getelementptr inbounds %struct.op, ptr %1, i64 0, i32 5
  %25 = load i8, ptr %24, align 2, !tbaa !35
  %26 = and i8 %25, 8
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %30, label %28

28:                                               ; preds = %23
  %29 = tail call ptr @Perl_newLISTOP(i32 noundef 158, i32 noundef 0, ptr noundef nonnull %1, ptr noundef nonnull %2)
  br label %84

30:                                               ; preds = %23, %21
  %31 = getelementptr inbounds %struct.listop, ptr %1, i64 0, i32 8
  %32 = load ptr, ptr %31, align 8, !tbaa !83
  %33 = tail call ptr @Perl_op_sibling_splice(ptr noundef nonnull %1, ptr noundef %32, i32 noundef 0, ptr noundef nonnull %2)
  %34 = getelementptr inbounds %struct.op, ptr %1, i64 0, i32 5
  %35 = load i8, ptr %34, align 2, !tbaa !35
  %36 = or i8 %35, 4
  store i8 %36, ptr %34, align 2, !tbaa !35
  br label %84

37:                                               ; preds = %15
  %38 = getelementptr inbounds %struct.listop, ptr %1, i64 0, i32 8
  %39 = load ptr, ptr %38, align 8, !tbaa !83
  %40 = getelementptr inbounds %struct.op, ptr %39, i64 0, i32 4
  %41 = load i16, ptr %40, align 8
  %42 = or i16 %41, 16384
  store i16 %42, ptr %40, align 8
  %43 = getelementptr inbounds %struct.listop, ptr %2, i64 0, i32 7
  %44 = load ptr, ptr %43, align 8, !tbaa !81
  %45 = load ptr, ptr %38, align 8, !tbaa !83
  %46 = getelementptr inbounds %struct.op, ptr %45, i64 0, i32 1
  store ptr %44, ptr %46, align 8, !tbaa !38
  %47 = getelementptr inbounds %struct.listop, ptr %2, i64 0, i32 8
  %48 = load ptr, ptr %47, align 8, !tbaa !83
  store ptr %48, ptr %38, align 8, !tbaa !83
  %49 = getelementptr inbounds %struct.op, ptr %48, i64 0, i32 4
  %50 = load i16, ptr %49, align 8
  %51 = and i16 %50, -16385
  store i16 %51, ptr %49, align 8
  %52 = load ptr, ptr %38, align 8, !tbaa !83
  %53 = getelementptr inbounds %struct.op, ptr %52, i64 0, i32 1
  store ptr null, ptr %53, align 8, !tbaa !38
  %54 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 5
  %55 = load i8, ptr %54, align 2, !tbaa !35
  %56 = and i8 %55, 4
  %57 = getelementptr inbounds %struct.op, ptr %1, i64 0, i32 5
  %58 = load i8, ptr %57, align 2, !tbaa !35
  %59 = or i8 %58, %56
  store i8 %59, ptr %57, align 2, !tbaa !35
  %60 = load i16, ptr %16, align 8
  %61 = and i16 %60, 1024
  %62 = icmp eq i16 %61, 0
  br i1 %62, label %63, label %67

63:                                               ; preds = %37
  %64 = and i16 %60, 4096
  %65 = icmp eq i16 %64, 0
  br i1 %65, label %66, label %84

66:                                               ; preds = %63
  tail call void @free(ptr noundef nonnull %2) #29
  br label %84

67:                                               ; preds = %37
  %68 = getelementptr inbounds i8, ptr %2, i64 -8
  %69 = load ptr, ptr %68, align 8, !tbaa !27
  %70 = and i16 %60, -512
  %71 = or i16 %70, 396
  store i16 %71, ptr %16, align 8
  %72 = getelementptr inbounds %struct.opslab, ptr %69, i64 0, i32 2
  %73 = load ptr, ptr %72, align 8, !tbaa !28
  store ptr %73, ptr %2, align 8, !tbaa !25
  store ptr %2, ptr %72, align 8, !tbaa !28
  %74 = getelementptr inbounds %struct.opslab, ptr %69, i64 0, i32 3
  %75 = load i64, ptr %74, align 8, !tbaa !21
  %76 = icmp eq i64 %75, 1
  br i1 %76, label %77, label %82

77:                                               ; preds = %67, %77
  %78 = phi ptr [ %80, %77 ], [ %69, %67 ]
  %79 = getelementptr inbounds %struct.opslab, ptr %78, i64 0, i32 1
  %80 = load ptr, ptr %79, align 8, !tbaa !26
  tail call void @free(ptr noundef nonnull %78) #29
  %81 = icmp eq ptr %80, null
  br i1 %81, label %84, label %77, !llvm.loop !30

82:                                               ; preds = %67
  %83 = add i64 %75, -1
  store i64 %83, ptr %74, align 8, !tbaa !21
  br label %84

84:                                               ; preds = %77, %82, %66, %63, %30, %28, %5, %3, %13
  %85 = phi ptr [ %14, %13 ], [ %2, %3 ], [ %1, %5 ], [ %1, %30 ], [ %29, %28 ], [ %1, %63 ], [ %1, %66 ], [ %1, %82 ], [ %1, %77 ]
  ret ptr %85
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @S_cant_declare(ptr nocapture noundef readonly %0) unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 4
  %3 = load i16, ptr %2, align 8
  %4 = and i16 %3, 511
  %5 = icmp eq i16 %4, 0
  br i1 %5, label %6, label %16

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 5
  %8 = load i8, ptr %7, align 2, !tbaa !35
  %9 = and i8 %8, -124
  %10 = icmp eq i8 %9, 4
  br i1 %10, label %11, label %16

11:                                               ; preds = %6
  %12 = getelementptr inbounds %struct.unop, ptr %0, i64 0, i32 7
  %13 = load ptr, ptr %12, align 8, !tbaa !36
  %14 = getelementptr inbounds %struct.op, ptr %13, i64 0, i32 4
  %15 = load i16, ptr %14, align 8
  br label %16

16:                                               ; preds = %11, %6, %1
  %17 = phi i16 [ %15, %11 ], [ %3, %6 ], [ %3, %1 ]
  %18 = phi ptr [ %13, %11 ], [ %0, %6 ], [ %0, %1 ]
  %19 = and i16 %17, 511
  switch i16 %19, label %26 [
    i16 0, label %20
    i16 380, label %24
  ]

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.op, ptr %18, i64 0, i32 5
  %22 = load i8, ptr %21, align 2, !tbaa !35
  %23 = icmp sgt i8 %22, -1
  br i1 %23, label %26, label %30

24:                                               ; preds = %16
  %25 = tail call ptr @Perl_custom_op_get_field(ptr noundef nonnull %18, i32 noundef 2)
  br label %30

26:                                               ; preds = %16, %20
  %27 = zext i16 %19 to i64
  %28 = getelementptr inbounds [0 x ptr], ptr @PL_op_desc, i64 0, i64 %27
  %29 = load ptr, ptr %28, align 8, !tbaa !6
  br label %30

30:                                               ; preds = %24, %26, %20
  %31 = phi ptr [ @.str.36, %20 ], [ %25, %24 ], [ %29, %26 ]
  %32 = load ptr, ptr @PL_parser, align 8, !tbaa !6
  %33 = getelementptr inbounds %struct.yy_parser, ptr %32, i64 0, i32 42
  %34 = load i16, ptr %33, align 4, !tbaa !47
  %35 = icmp eq i16 %34, 143
  %36 = icmp eq i16 %34, 212
  %37 = select i1 %36, ptr @.str.3, ptr @.str.4
  %38 = select i1 %35, ptr @.str.49, ptr %37
  %39 = tail call ptr (ptr, ...) @Perl_form(ptr noundef nonnull @.str.48, ptr noundef %31, ptr noundef nonnull %38) #29
  %40 = tail call i32 @Perl_yyerror(ptr noundef %39) #29
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @S_apply_attrs(ptr noundef readonly %0, ptr noundef %1, ptr nocapture noundef readonly %2) unnamed_addr #4 {
  %4 = icmp eq ptr %0, null
  br i1 %4, label %29, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.hv, ptr %0, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !56
  %8 = and i32 %7, 33554432
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %26, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.hv, ptr %0, i64 0, i32 3
  %12 = load ptr, ptr %11, align 8, !tbaa !13
  %13 = load ptr, ptr %0, align 8, !tbaa !139
  %14 = getelementptr inbounds %struct.xpvhv, ptr %13, i64 0, i32 3
  %15 = load i64, ptr %14, align 8, !tbaa !140
  %16 = add i64 %15, 1
  %17 = getelementptr inbounds ptr, ptr %12, i64 %16
  %18 = load ptr, ptr %17, align 8, !tbaa !13
  %19 = icmp eq ptr %18, null
  br i1 %19, label %26, label %20

20:                                               ; preds = %10
  %21 = getelementptr inbounds %struct.xpvhv_aux, ptr %17, i64 0, i32 4
  %22 = load i32, ptr %21, align 4, !tbaa !142
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %26, label %24

24:                                               ; preds = %20
  %25 = load ptr, ptr %18, align 8, !tbaa !6
  br label %26

26:                                               ; preds = %20, %5, %10, %24
  %27 = phi ptr [ %25, %24 ], [ null, %10 ], [ null, %5 ], [ %18, %20 ]
  %28 = tail call ptr @Perl_newSVhek(ptr noundef %27) #29
  br label %29

29:                                               ; preds = %3, %26
  %30 = phi ptr [ %28, %26 ], [ @PL_sv_no, %3 ]
  %31 = tail call ptr @Perl_newSVpvn(ptr noundef nonnull @.str.47, i64 noundef 10) #29
  %32 = tail call ptr @Perl_newSVOP(i32 noundef 5, i32 noundef 0, ptr noundef %30)
  %33 = tail call ptr @Perl_newRV(ptr noundef %1) #29
  %34 = tail call ptr @Perl_newSVOP(i32 noundef 5, i32 noundef 0, ptr noundef %33)
  %35 = tail call fastcc ptr @S_dup_attrlist(ptr noundef %2)
  %36 = icmp eq ptr %34, null
  br i1 %36, label %60, label %37

37:                                               ; preds = %29
  %38 = icmp eq ptr %35, null
  br i1 %38, label %60, label %39

39:                                               ; preds = %37
  %40 = getelementptr inbounds %struct.op, ptr %35, i64 0, i32 4
  %41 = load i16, ptr %40, align 8
  %42 = and i16 %41, 511
  %43 = icmp eq i16 %42, 158
  br i1 %43, label %44, label %58

44:                                               ; preds = %39
  %45 = getelementptr inbounds %struct.listop, ptr %35, i64 0, i32 7
  %46 = load ptr, ptr %45, align 8, !tbaa !6
  %47 = tail call ptr @Perl_op_sibling_splice(ptr noundef nonnull %35, ptr noundef %46, i32 noundef 0, ptr noundef nonnull %34)
  %48 = getelementptr inbounds %struct.op, ptr %34, i64 0, i32 5
  %49 = load i8, ptr %48, align 2, !tbaa !35
  %50 = and i8 %49, 8
  %51 = icmp eq i8 %50, 0
  %52 = getelementptr inbounds %struct.op, ptr %35, i64 0, i32 5
  %53 = load i8, ptr %52, align 2, !tbaa !35
  %54 = and i8 %53, -13
  %55 = select i1 %51, i8 %54, i8 %53
  %56 = getelementptr inbounds %struct.op, ptr %35, i64 0, i32 5
  %57 = or i8 %55, 4
  store i8 %57, ptr %56, align 2, !tbaa !35
  br label %60

58:                                               ; preds = %39
  %59 = tail call ptr @Perl_newLISTOP(i32 noundef 158, i32 noundef 0, ptr noundef nonnull %34, ptr noundef nonnull %35)
  br label %60

60:                                               ; preds = %29, %37, %44, %58
  %61 = phi ptr [ %35, %44 ], [ %59, %58 ], [ %35, %29 ], [ %34, %37 ]
  %62 = icmp eq ptr %32, null
  br i1 %62, label %86, label %63

63:                                               ; preds = %60
  %64 = icmp eq ptr %61, null
  br i1 %64, label %86, label %65

65:                                               ; preds = %63
  %66 = getelementptr inbounds %struct.op, ptr %61, i64 0, i32 4
  %67 = load i16, ptr %66, align 8
  %68 = and i16 %67, 511
  %69 = icmp eq i16 %68, 158
  br i1 %69, label %70, label %84

70:                                               ; preds = %65
  %71 = getelementptr inbounds %struct.listop, ptr %61, i64 0, i32 7
  %72 = load ptr, ptr %71, align 8, !tbaa !6
  %73 = tail call ptr @Perl_op_sibling_splice(ptr noundef nonnull %61, ptr noundef %72, i32 noundef 0, ptr noundef nonnull %32)
  %74 = getelementptr inbounds %struct.op, ptr %32, i64 0, i32 5
  %75 = load i8, ptr %74, align 2, !tbaa !35
  %76 = and i8 %75, 8
  %77 = icmp eq i8 %76, 0
  %78 = getelementptr inbounds %struct.op, ptr %61, i64 0, i32 5
  %79 = load i8, ptr %78, align 2, !tbaa !35
  %80 = and i8 %79, -13
  %81 = select i1 %77, i8 %80, i8 %79
  %82 = getelementptr inbounds %struct.op, ptr %61, i64 0, i32 5
  %83 = or i8 %81, 4
  store i8 %83, ptr %82, align 2, !tbaa !35
  br label %86

84:                                               ; preds = %65
  %85 = tail call ptr @Perl_newLISTOP(i32 noundef 158, i32 noundef 0, ptr noundef nonnull %32, ptr noundef nonnull %61)
  br label %86

86:                                               ; preds = %60, %63, %70, %84
  %87 = phi ptr [ %61, %70 ], [ %85, %84 ], [ %61, %60 ], [ %32, %63 ]
  tail call void (i32, ptr, ptr, ...) @Perl_load_module(i32 noundef 4, ptr noundef %31, ptr noundef null, ptr noundef %87)
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @S_apply_attrs_my(ptr noundef readonly %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readonly %2, ptr nocapture noundef %3) unnamed_addr #4 {
  %5 = load ptr, ptr @PL_incgv, align 8, !tbaa !6
  %6 = getelementptr inbounds %struct.gv, ptr %5, i64 0, i32 3
  %7 = load ptr, ptr %6, align 8, !tbaa !13
  %8 = getelementptr inbounds %struct.gp, ptr %7, i64 0, i32 5
  %9 = load ptr, ptr %8, align 8, !tbaa !134
  %10 = icmp eq ptr %9, null
  br i1 %10, label %11, label %17

11:                                               ; preds = %4
  %12 = tail call ptr @Perl_gv_add_by_type(ptr noundef nonnull %5, i32 noundef 12) #29
  %13 = getelementptr inbounds %struct.gv, ptr %12, i64 0, i32 3
  %14 = load ptr, ptr %13, align 8, !tbaa !13
  %15 = getelementptr inbounds %struct.gp, ptr %14, i64 0, i32 5
  %16 = load ptr, ptr %15, align 8, !tbaa !134
  br label %17

17:                                               ; preds = %4, %11
  %18 = phi ptr [ %16, %11 ], [ %9, %4 ]
  %19 = tail call ptr @Perl_hv_common(ptr noundef %18, ptr noundef null, ptr noundef nonnull @.str.50, i64 noundef 13, i32 noundef 0, i32 noundef 32, ptr noundef null, i32 noundef 0) #29
  %20 = icmp eq ptr %19, null
  br i1 %20, label %24, label %21

21:                                               ; preds = %17
  %22 = load ptr, ptr %19, align 8, !tbaa !6
  %23 = icmp eq ptr %22, @PL_sv_undef
  br i1 %23, label %24, label %26

24:                                               ; preds = %21, %17
  %25 = tail call ptr @Perl_newSVpvn(ptr noundef nonnull @.str.47, i64 noundef 10) #29
  tail call void (i32, ptr, ptr, ...) @Perl_load_module(i32 noundef 2, ptr noundef %25, ptr noundef null)
  br label %26

26:                                               ; preds = %21, %24
  %27 = tail call ptr @Perl_newSVpvn(ptr noundef nonnull @.str.47, i64 noundef 10) #29
  %28 = tail call ptr @Perl_newSVOP(i32 noundef 5, i32 noundef 0, ptr noundef %27)
  %29 = icmp eq ptr %0, null
  br i1 %29, label %54, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %struct.hv, ptr %0, i64 0, i32 2
  %32 = load i32, ptr %31, align 4, !tbaa !56
  %33 = and i32 %32, 33554432
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %51, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct.hv, ptr %0, i64 0, i32 3
  %37 = load ptr, ptr %36, align 8, !tbaa !13
  %38 = load ptr, ptr %0, align 8, !tbaa !139
  %39 = getelementptr inbounds %struct.xpvhv, ptr %38, i64 0, i32 3
  %40 = load i64, ptr %39, align 8, !tbaa !140
  %41 = add i64 %40, 1
  %42 = getelementptr inbounds ptr, ptr %37, i64 %41
  %43 = load ptr, ptr %42, align 8, !tbaa !13
  %44 = icmp eq ptr %43, null
  br i1 %44, label %51, label %45

45:                                               ; preds = %35
  %46 = getelementptr inbounds %struct.xpvhv_aux, ptr %42, i64 0, i32 4
  %47 = load i32, ptr %46, align 4, !tbaa !142
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %51, label %49

49:                                               ; preds = %45
  %50 = load ptr, ptr %43, align 8, !tbaa !6
  br label %51

51:                                               ; preds = %45, %30, %35, %49
  %52 = phi ptr [ %50, %49 ], [ null, %35 ], [ null, %30 ], [ %43, %45 ]
  %53 = tail call ptr @Perl_newSVhek(ptr noundef %52) #29
  br label %54

54:                                               ; preds = %26, %51
  %55 = phi ptr [ %53, %51 ], [ @PL_sv_no, %26 ]
  %56 = tail call ptr @Perl_newOP(i32 noundef 9, i32 noundef 0)
  %57 = getelementptr inbounds %struct.op, ptr %1, i64 0, i32 3
  %58 = load i64, ptr %57, align 8, !tbaa !34
  %59 = getelementptr inbounds %struct.op, ptr %56, i64 0, i32 3
  store i64 %58, ptr %59, align 8, !tbaa !34
  %60 = tail call ptr @Perl_newSVOP(i32 noundef 5, i32 noundef 0, ptr noundef %55)
  %61 = tail call ptr @Perl_newUNOP(i32 noundef 20, i32 noundef 0, ptr noundef %56)
  %62 = tail call fastcc ptr @S_dup_attrlist(ptr noundef %2)
  %63 = icmp eq ptr %61, null
  br i1 %63, label %87, label %64

64:                                               ; preds = %54
  %65 = icmp eq ptr %62, null
  br i1 %65, label %87, label %66

66:                                               ; preds = %64
  %67 = getelementptr inbounds %struct.op, ptr %62, i64 0, i32 4
  %68 = load i16, ptr %67, align 8
  %69 = and i16 %68, 511
  %70 = icmp eq i16 %69, 158
  br i1 %70, label %71, label %85

71:                                               ; preds = %66
  %72 = getelementptr inbounds %struct.listop, ptr %62, i64 0, i32 7
  %73 = load ptr, ptr %72, align 8, !tbaa !6
  %74 = tail call ptr @Perl_op_sibling_splice(ptr noundef nonnull %62, ptr noundef %73, i32 noundef 0, ptr noundef nonnull %61)
  %75 = getelementptr inbounds %struct.op, ptr %61, i64 0, i32 5
  %76 = load i8, ptr %75, align 2, !tbaa !35
  %77 = and i8 %76, 8
  %78 = icmp eq i8 %77, 0
  %79 = getelementptr inbounds %struct.op, ptr %62, i64 0, i32 5
  %80 = load i8, ptr %79, align 2, !tbaa !35
  %81 = and i8 %80, -13
  %82 = select i1 %78, i8 %81, i8 %80
  %83 = getelementptr inbounds %struct.op, ptr %62, i64 0, i32 5
  %84 = or i8 %82, 4
  store i8 %84, ptr %83, align 2, !tbaa !35
  br label %87

85:                                               ; preds = %66
  %86 = tail call ptr @Perl_newLISTOP(i32 noundef 158, i32 noundef 0, ptr noundef nonnull %61, ptr noundef nonnull %62)
  br label %87

87:                                               ; preds = %54, %64, %71, %85
  %88 = phi ptr [ %62, %71 ], [ %86, %85 ], [ %62, %54 ], [ %61, %64 ]
  %89 = icmp eq ptr %60, null
  br i1 %89, label %113, label %90

90:                                               ; preds = %87
  %91 = icmp eq ptr %88, null
  br i1 %91, label %113, label %92

92:                                               ; preds = %90
  %93 = getelementptr inbounds %struct.op, ptr %88, i64 0, i32 4
  %94 = load i16, ptr %93, align 8
  %95 = and i16 %94, 511
  %96 = icmp eq i16 %95, 158
  br i1 %96, label %97, label %111

97:                                               ; preds = %92
  %98 = getelementptr inbounds %struct.listop, ptr %88, i64 0, i32 7
  %99 = load ptr, ptr %98, align 8, !tbaa !6
  %100 = tail call ptr @Perl_op_sibling_splice(ptr noundef nonnull %88, ptr noundef %99, i32 noundef 0, ptr noundef nonnull %60)
  %101 = getelementptr inbounds %struct.op, ptr %60, i64 0, i32 5
  %102 = load i8, ptr %101, align 2, !tbaa !35
  %103 = and i8 %102, 8
  %104 = icmp eq i8 %103, 0
  %105 = getelementptr inbounds %struct.op, ptr %88, i64 0, i32 5
  %106 = load i8, ptr %105, align 2, !tbaa !35
  %107 = and i8 %106, -13
  %108 = select i1 %104, i8 %107, i8 %106
  %109 = getelementptr inbounds %struct.op, ptr %88, i64 0, i32 5
  %110 = or i8 %108, 4
  store i8 %110, ptr %109, align 2, !tbaa !35
  br label %113

111:                                              ; preds = %92
  %112 = tail call ptr @Perl_newLISTOP(i32 noundef 158, i32 noundef 0, ptr noundef nonnull %60, ptr noundef nonnull %88)
  br label %113

113:                                              ; preds = %87, %90, %97, %111
  %114 = phi ptr [ %88, %97 ], [ %112, %111 ], [ %88, %87 ], [ %60, %90 ]
  %115 = tail call ptr @Perl_newSVpvn_share(ptr noundef nonnull @.str.51, i32 noundef 6, i32 noundef 0) #29
  %116 = icmp eq ptr %28, null
  br i1 %116, label %140, label %117

117:                                              ; preds = %113
  %118 = icmp eq ptr %114, null
  br i1 %118, label %140, label %119

119:                                              ; preds = %117
  %120 = getelementptr inbounds %struct.op, ptr %114, i64 0, i32 4
  %121 = load i16, ptr %120, align 8
  %122 = and i16 %121, 511
  %123 = icmp eq i16 %122, 158
  br i1 %123, label %124, label %138

124:                                              ; preds = %119
  %125 = getelementptr inbounds %struct.listop, ptr %114, i64 0, i32 7
  %126 = load ptr, ptr %125, align 8, !tbaa !6
  %127 = tail call ptr @Perl_op_sibling_splice(ptr noundef nonnull %114, ptr noundef %126, i32 noundef 0, ptr noundef nonnull %28)
  %128 = getelementptr inbounds %struct.op, ptr %28, i64 0, i32 5
  %129 = load i8, ptr %128, align 2, !tbaa !35
  %130 = and i8 %129, 8
  %131 = icmp eq i8 %130, 0
  %132 = getelementptr inbounds %struct.op, ptr %114, i64 0, i32 5
  %133 = load i8, ptr %132, align 2, !tbaa !35
  %134 = and i8 %133, -13
  %135 = select i1 %131, i8 %134, i8 %133
  %136 = getelementptr inbounds %struct.op, ptr %114, i64 0, i32 5
  %137 = or i8 %135, 4
  store i8 %137, ptr %136, align 2, !tbaa !35
  br label %140

138:                                              ; preds = %119
  %139 = tail call ptr @Perl_newLISTOP(i32 noundef 158, i32 noundef 0, ptr noundef nonnull %28, ptr noundef nonnull %114)
  br label %140

140:                                              ; preds = %113, %117, %124, %138
  %141 = phi ptr [ %114, %124 ], [ %139, %138 ], [ %114, %113 ], [ %28, %117 ]
  %142 = tail call ptr @Perl_Slab_Alloc(i64 noundef 56)
  %143 = getelementptr inbounds %struct.methop, ptr %142, i64 0, i32 5
  store i8 0, ptr %143, align 2, !tbaa !170
  %144 = getelementptr inbounds %struct.methop, ptr %142, i64 0, i32 7
  store ptr %115, ptr %144, align 8, !tbaa !13
  %145 = getelementptr inbounds %struct.methop, ptr %142, i64 0, i32 6
  store i8 0, ptr %145, align 1, !tbaa !171
  store ptr %142, ptr %142, align 8, !tbaa !172
  %146 = getelementptr inbounds %struct.methop, ptr %142, i64 0, i32 8
  store ptr null, ptr %146, align 8, !tbaa !63
  %147 = getelementptr inbounds %struct.methop, ptr %142, i64 0, i32 4
  %148 = load i16, ptr %147, align 8
  %149 = and i16 %148, -512
  %150 = or i16 %149, 210
  store i16 %150, ptr %147, align 8
  %151 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_ppaddr, i64 0, i64 210), align 8, !tbaa !6
  %152 = getelementptr inbounds %struct.methop, ptr %142, i64 0, i32 2
  store ptr %151, ptr %152, align 8, !tbaa !173
  %153 = load ptr, ptr @PL_op_mask, align 8, !tbaa !6
  %154 = icmp eq ptr %153, null
  br i1 %154, label %159, label %155

155:                                              ; preds = %140
  %156 = getelementptr inbounds i8, ptr %153, i64 210
  %157 = load i8, ptr %156, align 1, !tbaa !13
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %159, label %163

159:                                              ; preds = %140, %155
  %160 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_check, i64 0, i64 210), align 8, !tbaa !6
  %161 = tail call ptr %160(ptr noundef nonnull %142) #29
  %162 = icmp eq ptr %141, null
  br i1 %162, label %187, label %165

163:                                              ; preds = %155
  tail call void @Perl_op_free(ptr noundef nonnull %142)
  %164 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_op_desc, i64 0, i64 210), align 8, !tbaa !6
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.63, ptr noundef %164) #29
  br label %187

165:                                              ; preds = %159
  %166 = icmp eq ptr %161, null
  br i1 %166, label %187, label %167

167:                                              ; preds = %165
  %168 = getelementptr inbounds %struct.op, ptr %141, i64 0, i32 4
  %169 = load i16, ptr %168, align 8
  %170 = and i16 %169, 511
  %171 = icmp eq i16 %170, 158
  br i1 %171, label %174, label %172

172:                                              ; preds = %167
  %173 = tail call ptr @Perl_newLISTOP(i32 noundef 158, i32 noundef 0, ptr noundef nonnull %141, ptr noundef nonnull %161)
  br label %187

174:                                              ; preds = %167
  %175 = getelementptr inbounds %struct.op, ptr %141, i64 0, i32 5
  %176 = load i8, ptr %175, align 2, !tbaa !35
  %177 = and i8 %176, 8
  %178 = icmp eq i8 %177, 0
  br i1 %178, label %181, label %179

179:                                              ; preds = %174
  %180 = tail call ptr @Perl_newLISTOP(i32 noundef 158, i32 noundef 0, ptr noundef nonnull %141, ptr noundef nonnull %161)
  br label %187

181:                                              ; preds = %174
  %182 = getelementptr inbounds %struct.listop, ptr %141, i64 0, i32 8
  %183 = load ptr, ptr %182, align 8, !tbaa !83
  %184 = tail call ptr @Perl_op_sibling_splice(ptr noundef nonnull %141, ptr noundef %183, i32 noundef 0, ptr noundef nonnull %161)
  %185 = load i8, ptr %175, align 2, !tbaa !35
  %186 = or i8 %185, 4
  store i8 %186, ptr %175, align 2, !tbaa !35
  br label %187

187:                                              ; preds = %163, %159, %165, %172, %179, %181
  %188 = phi ptr [ %141, %181 ], [ %161, %159 ], [ %141, %165 ], [ %173, %172 ], [ %180, %179 ], [ %141, %163 ]
  %189 = tail call ptr @Perl_op_convert_list(i32 noundef 185, i32 noundef 193, ptr noundef %188)
  %190 = load ptr, ptr %3, align 8, !tbaa !6
  %191 = icmp eq ptr %190, null
  br i1 %191, label %214, label %192

192:                                              ; preds = %187
  %193 = icmp eq ptr %189, null
  br i1 %193, label %214, label %194

194:                                              ; preds = %192
  %195 = getelementptr inbounds %struct.op, ptr %190, i64 0, i32 4
  %196 = load i16, ptr %195, align 8
  %197 = and i16 %196, 511
  %198 = icmp eq i16 %197, 158
  br i1 %198, label %201, label %199

199:                                              ; preds = %194
  %200 = tail call ptr @Perl_newLISTOP(i32 noundef 158, i32 noundef 0, ptr noundef nonnull %190, ptr noundef nonnull %189)
  br label %214

201:                                              ; preds = %194
  %202 = getelementptr inbounds %struct.op, ptr %190, i64 0, i32 5
  %203 = load i8, ptr %202, align 2, !tbaa !35
  %204 = and i8 %203, 8
  %205 = icmp eq i8 %204, 0
  br i1 %205, label %208, label %206

206:                                              ; preds = %201
  %207 = tail call ptr @Perl_newLISTOP(i32 noundef 158, i32 noundef 0, ptr noundef nonnull %190, ptr noundef nonnull %189)
  br label %214

208:                                              ; preds = %201
  %209 = getelementptr inbounds %struct.listop, ptr %190, i64 0, i32 8
  %210 = load ptr, ptr %209, align 8, !tbaa !83
  %211 = tail call ptr @Perl_op_sibling_splice(ptr noundef nonnull %190, ptr noundef %210, i32 noundef 0, ptr noundef nonnull %189)
  %212 = load i8, ptr %202, align 2, !tbaa !35
  %213 = or i8 %212, 4
  store i8 %213, ptr %202, align 2, !tbaa !35
  br label %214

214:                                              ; preds = %187, %192, %199, %206, %208
  %215 = phi ptr [ %190, %208 ], [ %189, %187 ], [ %190, %192 ], [ %200, %199 ], [ %207, %206 ]
  store ptr %215, ptr %3, align 8, !tbaa !6
  ret void
}

declare ptr @Perl_newSVhek(ptr noundef) local_unnamed_addr #6

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @S_dup_attrlist(ptr nocapture noundef readonly %0) unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 4
  %3 = load i16, ptr %2, align 8
  %4 = and i16 %3, 511
  %5 = icmp eq i16 %4, 5
  br i1 %5, label %6, label %16

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 5
  %8 = load i8, ptr %7, align 2, !tbaa !35
  %9 = zext i8 %8 to i32
  %10 = getelementptr inbounds %struct.svop, ptr %0, i64 0, i32 7
  %11 = load ptr, ptr %10, align 8, !tbaa !65
  %12 = getelementptr inbounds %struct.sv, ptr %11, i64 0, i32 1
  %13 = load i32, ptr %12, align 8, !tbaa !42
  %14 = add i32 %13, 1
  store i32 %14, ptr %12, align 8, !tbaa !42
  %15 = tail call ptr @Perl_newSVOP(i32 noundef 5, i32 noundef %9, ptr noundef %11)
  br label %65

16:                                               ; preds = %1
  %17 = getelementptr inbounds %struct.listop, ptr %0, i64 0, i32 7
  %18 = load ptr, ptr %17, align 8, !tbaa !6
  %19 = icmp eq ptr %18, null
  br i1 %19, label %65, label %20

20:                                               ; preds = %16, %60
  %21 = phi ptr [ %63, %60 ], [ %18, %16 ]
  %22 = phi ptr [ %61, %60 ], [ null, %16 ]
  %23 = getelementptr inbounds %struct.op, ptr %21, i64 0, i32 4
  %24 = load i16, ptr %23, align 8
  %25 = and i16 %24, 511
  %26 = icmp eq i16 %25, 5
  br i1 %26, label %27, label %60

27:                                               ; preds = %20
  %28 = getelementptr inbounds %struct.op, ptr %21, i64 0, i32 5
  %29 = load i8, ptr %28, align 2, !tbaa !35
  %30 = zext i8 %29 to i32
  %31 = getelementptr inbounds %struct.svop, ptr %21, i64 0, i32 7
  %32 = load ptr, ptr %31, align 8, !tbaa !65
  %33 = getelementptr inbounds %struct.sv, ptr %32, i64 0, i32 1
  %34 = load i32, ptr %33, align 8, !tbaa !42
  %35 = add i32 %34, 1
  store i32 %35, ptr %33, align 8, !tbaa !42
  %36 = tail call ptr @Perl_newSVOP(i32 noundef 5, i32 noundef %30, ptr noundef %32)
  %37 = icmp eq ptr %22, null
  br i1 %37, label %60, label %38

38:                                               ; preds = %27
  %39 = icmp eq ptr %36, null
  br i1 %39, label %60, label %40

40:                                               ; preds = %38
  %41 = getelementptr inbounds %struct.op, ptr %22, i64 0, i32 4
  %42 = load i16, ptr %41, align 8
  %43 = and i16 %42, 511
  %44 = icmp eq i16 %43, 158
  br i1 %44, label %47, label %45

45:                                               ; preds = %40
  %46 = tail call ptr @Perl_newLISTOP(i32 noundef 158, i32 noundef 0, ptr noundef nonnull %22, ptr noundef nonnull %36)
  br label %60

47:                                               ; preds = %40
  %48 = getelementptr inbounds %struct.op, ptr %22, i64 0, i32 5
  %49 = load i8, ptr %48, align 2, !tbaa !35
  %50 = and i8 %49, 8
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %54, label %52

52:                                               ; preds = %47
  %53 = tail call ptr @Perl_newLISTOP(i32 noundef 158, i32 noundef 0, ptr noundef nonnull %22, ptr noundef nonnull %36)
  br label %60

54:                                               ; preds = %47
  %55 = getelementptr inbounds %struct.listop, ptr %22, i64 0, i32 8
  %56 = load ptr, ptr %55, align 8, !tbaa !83
  %57 = tail call ptr @Perl_op_sibling_splice(ptr noundef nonnull %22, ptr noundef %56, i32 noundef 0, ptr noundef nonnull %36)
  %58 = load i8, ptr %48, align 2, !tbaa !35
  %59 = or i8 %58, 4
  store i8 %59, ptr %48, align 2, !tbaa !35
  br label %60

60:                                               ; preds = %54, %52, %45, %38, %27, %20
  %61 = phi ptr [ %22, %20 ], [ %22, %54 ], [ %36, %27 ], [ %22, %38 ], [ %46, %45 ], [ %53, %52 ]
  %62 = getelementptr inbounds %struct.op, ptr %21, i64 0, i32 1
  %63 = load ptr, ptr %62, align 8, !tbaa !6
  %64 = icmp eq ptr %63, null
  br i1 %64, label %65, label %20, !llvm.loop !174

65:                                               ; preds = %60, %16, %6
  %66 = phi ptr [ %15, %6 ], [ null, %16 ], [ %61, %60 ]
  ret ptr %66
}

declare ptr @Perl_gv_add_by_type(ptr noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_newOP(i32 noundef %0, i32 noundef %1) local_unnamed_addr #4 {
  %3 = icmp eq i32 %0, -342
  %4 = or i32 %1, 2048
  %5 = select i1 %3, i32 %4, i32 %1
  %6 = select i1 %3, i32 342, i32 %0
  %7 = tail call ptr @Perl_Slab_Alloc(i64 noundef 40)
  %8 = trunc i32 %6 to i16
  %9 = getelementptr inbounds %struct.op, ptr %7, i64 0, i32 4
  %10 = load i16, ptr %9, align 8
  %11 = and i16 %8, 511
  %12 = and i16 %10, -512
  %13 = or i16 %12, %11
  store i16 %13, ptr %9, align 8
  %14 = sext i32 %6 to i64
  %15 = getelementptr inbounds [0 x ptr], ptr @PL_ppaddr, i64 0, i64 %14
  %16 = load ptr, ptr %15, align 8, !tbaa !6
  %17 = getelementptr inbounds %struct.op, ptr %7, i64 0, i32 2
  store ptr %16, ptr %17, align 8, !tbaa !78
  %18 = trunc i32 %5 to i8
  %19 = getelementptr inbounds %struct.op, ptr %7, i64 0, i32 5
  store i8 %18, ptr %19, align 2, !tbaa !35
  store ptr %7, ptr %7, align 8, !tbaa !25
  %20 = lshr i32 %5, 8
  %21 = trunc i32 %20 to i8
  %22 = getelementptr inbounds %struct.op, ptr %7, i64 0, i32 6
  store i8 %21, ptr %22, align 1, !tbaa !33
  %23 = getelementptr inbounds [0 x i32], ptr @PL_opargs, i64 0, i64 %14
  %24 = load i32, ptr %23, align 4, !tbaa !52
  %25 = and i32 %24, 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %29, label %27

27:                                               ; preds = %2
  %28 = tail call ptr @Perl_scalar(ptr noundef nonnull %7)
  br label %29

29:                                               ; preds = %27, %2
  %30 = and i32 %24, 8
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %35, label %32

32:                                               ; preds = %29
  %33 = tail call i64 @Perl_pad_alloc(i32 noundef %6, i32 noundef 131072) #29
  %34 = getelementptr inbounds %struct.op, ptr %7, i64 0, i32 3
  store i64 %33, ptr %34, align 8, !tbaa !34
  br label %35

35:                                               ; preds = %32, %29
  %36 = load ptr, ptr @PL_op_mask, align 8, !tbaa !6
  %37 = icmp eq ptr %36, null
  br i1 %37, label %45, label %38

38:                                               ; preds = %35
  %39 = getelementptr inbounds i8, ptr %36, i64 %14
  %40 = load i8, ptr %39, align 1, !tbaa !13
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %45, label %42

42:                                               ; preds = %38
  tail call void @Perl_op_free(ptr noundef nonnull %7)
  %43 = getelementptr inbounds [0 x ptr], ptr @PL_op_desc, i64 0, i64 %14
  %44 = load ptr, ptr %43, align 8, !tbaa !6
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.63, ptr noundef %44) #29
  br label %49

45:                                               ; preds = %38, %35
  %46 = getelementptr inbounds [0 x ptr], ptr @PL_check, i64 0, i64 %14
  %47 = load ptr, ptr %46, align 8, !tbaa !6
  %48 = tail call ptr %47(ptr noundef nonnull %7) #29
  br label %49

49:                                               ; preds = %45, %42
  %50 = phi ptr [ null, %42 ], [ %48, %45 ]
  ret ptr %50
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_op_convert_list(i32 noundef %0, i32 noundef %1, ptr noundef %2) local_unnamed_addr #4 {
  %4 = icmp slt i32 %0, 0
  %5 = or i32 %1, 128
  %6 = tail call i32 @llvm.abs.i32(i32 %0, i1 true)
  %7 = select i1 %4, i32 %5, i32 %1
  %8 = icmp eq ptr %2, null
  br i1 %8, label %9, label %11

9:                                                ; preds = %3
  %10 = tail call ptr @Perl_newLISTOP(i32 noundef 158, i32 noundef 0, ptr noundef null, ptr noundef null)
  br label %33

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 4
  %13 = load i16, ptr %12, align 8
  %14 = and i16 %13, 511
  %15 = icmp eq i16 %14, 158
  br i1 %15, label %26, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 1
  %18 = load ptr, ptr %17, align 8, !tbaa !38
  %19 = and i16 %13, -16385
  store i16 %19, ptr %12, align 8
  store ptr null, ptr %17, align 8, !tbaa !38
  %20 = tail call ptr @Perl_newLISTOP(i32 noundef 158, i32 noundef 0, ptr noundef nonnull %2, ptr noundef null)
  %21 = icmp eq ptr %18, null
  br i1 %21, label %33, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %struct.listop, ptr %20, i64 0, i32 8
  %24 = load ptr, ptr %23, align 8, !tbaa !83
  %25 = tail call ptr @Perl_op_sibling_splice(ptr noundef %20, ptr noundef %24, i32 noundef 0, ptr noundef nonnull %18)
  br label %33

26:                                               ; preds = %11
  %27 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 5
  %28 = load i8, ptr %27, align 2, !tbaa !35
  %29 = and i8 %28, -4
  store i8 %29, ptr %27, align 2, !tbaa !35
  %30 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 6
  %31 = load i8, ptr %30, align 1, !tbaa !33
  %32 = and i8 %31, 127
  store i8 %32, ptr %30, align 1, !tbaa !33
  br label %33

33:                                               ; preds = %22, %16, %9, %26
  %34 = phi ptr [ %2, %26 ], [ %10, %9 ], [ %20, %16 ], [ %20, %22 ]
  %35 = zext i32 %6 to i64
  %36 = getelementptr inbounds [0 x i32], ptr @PL_opargs, i64 0, i64 %35
  %37 = load i32, ptr %36, align 4, !tbaa !52
  %38 = and i32 %37, 1
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %struct.listop, ptr %34, i64 0, i32 7
  %41 = load ptr, ptr %40, align 8, !tbaa !81
  br i1 %39, label %42, label %55

42:                                               ; preds = %33
  %43 = getelementptr inbounds %struct.op, ptr %41, i64 0, i32 4
  %44 = load i16, ptr %43, align 8
  %45 = and i16 %44, 511
  %46 = icmp eq i16 %45, 0
  br i1 %46, label %81, label %47

47:                                               ; preds = %42
  tail call void @Perl_op_clear(ptr noundef nonnull %41)
  %48 = load i16, ptr %43, align 8
  %49 = and i16 %48, 511
  %50 = zext i16 %49 to i64
  %51 = getelementptr inbounds %struct.op, ptr %41, i64 0, i32 3
  store i64 %50, ptr %51, align 8, !tbaa !34
  %52 = and i16 %48, -512
  store i16 %52, ptr %43, align 8
  %53 = load ptr, ptr @PL_ppaddr, align 8, !tbaa !6
  %54 = getelementptr inbounds %struct.op, ptr %41, i64 0, i32 2
  store ptr %53, ptr %54, align 8, !tbaa !78
  br label %81

55:                                               ; preds = %33
  %56 = getelementptr inbounds %struct.op, ptr %41, i64 0, i32 1
  %57 = load ptr, ptr %56, align 8, !tbaa !38
  %58 = icmp eq ptr %57, null
  br i1 %58, label %81, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %struct.op, ptr %57, i64 0, i32 4
  %61 = load i16, ptr %60, align 8
  %62 = and i16 %61, 511
  %63 = icmp eq i16 %62, 384
  br i1 %63, label %64, label %81

64:                                               ; preds = %59
  %65 = getelementptr inbounds %struct.op, ptr %41, i64 0, i32 4
  %66 = load i16, ptr %65, align 8
  %67 = and i16 %66, 511
  %68 = icmp eq i16 %67, 0
  br i1 %68, label %77, label %69

69:                                               ; preds = %64
  tail call void @Perl_op_clear(ptr noundef nonnull %41)
  %70 = load i16, ptr %65, align 8
  %71 = and i16 %70, 511
  %72 = zext i16 %71 to i64
  %73 = getelementptr inbounds %struct.op, ptr %41, i64 0, i32 3
  store i64 %72, ptr %73, align 8, !tbaa !34
  %74 = and i16 %70, -512
  store i16 %74, ptr %65, align 8
  %75 = load ptr, ptr @PL_ppaddr, align 8, !tbaa !6
  %76 = getelementptr inbounds %struct.op, ptr %41, i64 0, i32 2
  store ptr %75, ptr %76, align 8, !tbaa !78
  br label %77

77:                                               ; preds = %64, %69
  %78 = getelementptr inbounds %struct.op, ptr %57, i64 0, i32 6
  %79 = load i8, ptr %78, align 1, !tbaa !33
  %80 = or i8 %79, -128
  store i8 %80, ptr %78, align 1, !tbaa !33
  br label %81

81:                                               ; preds = %47, %42, %55, %59, %77
  %82 = trunc i32 %6 to i16
  %83 = getelementptr inbounds %struct.op, ptr %34, i64 0, i32 4
  %84 = load i16, ptr %83, align 8
  %85 = and i16 %82, 511
  %86 = and i16 %84, -512
  %87 = or i16 %86, %85
  store i16 %87, ptr %83, align 8
  %88 = getelementptr inbounds [0 x ptr], ptr @PL_ppaddr, i64 0, i64 %35
  %89 = load ptr, ptr %88, align 8, !tbaa !6
  %90 = getelementptr inbounds %struct.op, ptr %34, i64 0, i32 2
  store ptr %89, ptr %90, align 8, !tbaa !78
  %91 = getelementptr inbounds %struct.op, ptr %34, i64 0, i32 5
  %92 = load i8, ptr %91, align 2, !tbaa !35
  %93 = trunc i32 %7 to i8
  %94 = or i8 %92, %93
  store i8 %94, ptr %91, align 2, !tbaa !35
  %95 = and i32 %7, 65536
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %99, label %97

97:                                               ; preds = %81
  %98 = or i16 %87, 8192
  store i16 %98, ptr %83, align 8
  br label %99

99:                                               ; preds = %97, %81
  %100 = load ptr, ptr @PL_op_mask, align 8, !tbaa !6
  %101 = icmp eq ptr %100, null
  br i1 %101, label %109, label %102

102:                                              ; preds = %99
  %103 = getelementptr inbounds i8, ptr %100, i64 %35
  %104 = load i8, ptr %103, align 1, !tbaa !13
  %105 = icmp eq i8 %104, 0
  br i1 %105, label %109, label %106

106:                                              ; preds = %102
  tail call void @Perl_op_free(ptr noundef nonnull %34)
  %107 = getelementptr inbounds [0 x ptr], ptr @PL_op_desc, i64 0, i64 %35
  %108 = load ptr, ptr %107, align 8, !tbaa !6
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.63, ptr noundef %108) #29
  br label %113

109:                                              ; preds = %102, %99
  %110 = getelementptr inbounds [0 x ptr], ptr @PL_check, i64 0, i64 %35
  %111 = load ptr, ptr %110, align 8, !tbaa !6
  %112 = tail call ptr %111(ptr noundef nonnull %34) #29
  br label %113

113:                                              ; preds = %109, %106
  %114 = phi ptr [ null, %106 ], [ %112, %109 ]
  %115 = getelementptr inbounds %struct.op, ptr %114, i64 0, i32 4
  %116 = load i16, ptr %115, align 8
  %117 = and i16 %116, 511
  %118 = zext i16 %117 to i32
  %119 = icmp eq i32 %6, %118
  br i1 %119, label %120, label %168

120:                                              ; preds = %113
  %121 = zext i16 %117 to i64
  %122 = getelementptr inbounds [0 x i32], ptr @PL_opargs, i64 0, i64 %121
  %123 = load i32, ptr %122, align 4, !tbaa !52
  %124 = and i32 %123, 4
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %128, label %126

126:                                              ; preds = %120
  %127 = tail call ptr @Perl_scalar(ptr noundef nonnull %114)
  br label %128

128:                                              ; preds = %126, %120
  %129 = and i32 %123, 8
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %137, label %131

131:                                              ; preds = %128
  %132 = getelementptr inbounds %struct.op, ptr %114, i64 0, i32 3
  %133 = load i64, ptr %132, align 8, !tbaa !34
  %134 = icmp eq i64 %133, 0
  br i1 %134, label %135, label %137

135:                                              ; preds = %131
  %136 = tail call i64 @Perl_pad_alloc(i32 noundef %6, i32 noundef 131072) #29
  store i64 %136, ptr %132, align 8, !tbaa !34
  br label %137

137:                                              ; preds = %128, %131, %135
  %138 = load i16, ptr %115, align 8
  %139 = and i16 %138, 511
  %140 = zext i16 %139 to i64
  %141 = getelementptr inbounds [0 x i32], ptr @PL_opargs, i64 0, i64 %140
  %142 = load i32, ptr %141, align 4, !tbaa !52
  %143 = and i32 %142, 32
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %158, label %145

145:                                              ; preds = %137
  %146 = load i32, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 10), align 8, !tbaa !77
  %147 = and i32 %146, 1
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %158, label %149

149:                                              ; preds = %145
  %150 = add i16 %138, 1
  %151 = and i16 %150, 511
  %152 = and i16 %138, -512
  %153 = or i16 %151, %152
  store i16 %153, ptr %115, align 8
  %154 = zext i16 %151 to i64
  %155 = getelementptr inbounds [0 x ptr], ptr @PL_ppaddr, i64 0, i64 %154
  %156 = load ptr, ptr %155, align 8, !tbaa !6
  %157 = getelementptr inbounds %struct.op, ptr %114, i64 0, i32 2
  store ptr %156, ptr %157, align 8, !tbaa !78
  br label %158

158:                                              ; preds = %149, %145, %137
  %159 = icmp eq i16 %139, 101
  br i1 %159, label %160, label %166

160:                                              ; preds = %158
  %161 = getelementptr inbounds %struct.unop, ptr %114, i64 0, i32 7
  %162 = load ptr, ptr %161, align 8, !tbaa !36
  %163 = getelementptr inbounds %struct.op, ptr %162, i64 0, i32 6
  %164 = load i8, ptr %163, align 1, !tbaa !33
  %165 = and i8 %164, -9
  store i8 %165, ptr %163, align 1, !tbaa !33
  br label %166

166:                                              ; preds = %158, %160
  %167 = tail call fastcc ptr @S_fold_constants(ptr noundef nonnull %114)
  br label %168

168:                                              ; preds = %113, %166
  %169 = phi ptr [ %167, %166 ], [ %114, %113 ]
  ret ptr %169
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_newMETHOP_named(i32 noundef %0, i32 noundef %1, ptr noundef %2) local_unnamed_addr #4 {
  %4 = tail call ptr @Perl_Slab_Alloc(i64 noundef 56)
  %5 = trunc i32 %1 to i8
  %6 = and i8 %5, -5
  %7 = getelementptr inbounds %struct.methop, ptr %4, i64 0, i32 5
  store i8 %6, ptr %7, align 2, !tbaa !170
  %8 = getelementptr inbounds %struct.methop, ptr %4, i64 0, i32 7
  store ptr %2, ptr %8, align 8, !tbaa !13
  %9 = lshr i32 %1, 8
  %10 = trunc i32 %9 to i8
  %11 = getelementptr inbounds %struct.methop, ptr %4, i64 0, i32 6
  store i8 %10, ptr %11, align 1, !tbaa !171
  store ptr %4, ptr %4, align 8, !tbaa !172
  %12 = sext i32 %0 to i64
  %13 = getelementptr inbounds %struct.methop, ptr %4, i64 0, i32 8
  store ptr null, ptr %13, align 8, !tbaa !63
  %14 = trunc i32 %0 to i16
  %15 = getelementptr inbounds %struct.methop, ptr %4, i64 0, i32 4
  %16 = load i16, ptr %15, align 8
  %17 = and i16 %14, 511
  %18 = and i16 %16, -512
  %19 = or i16 %18, %17
  store i16 %19, ptr %15, align 8
  %20 = getelementptr inbounds [0 x ptr], ptr @PL_ppaddr, i64 0, i64 %12
  %21 = load ptr, ptr %20, align 8, !tbaa !6
  %22 = getelementptr inbounds %struct.methop, ptr %4, i64 0, i32 2
  store ptr %21, ptr %22, align 8, !tbaa !173
  %23 = load ptr, ptr @PL_op_mask, align 8, !tbaa !6
  %24 = icmp eq ptr %23, null
  br i1 %24, label %32, label %25

25:                                               ; preds = %3
  %26 = getelementptr inbounds i8, ptr %23, i64 %12
  %27 = load i8, ptr %26, align 1, !tbaa !13
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %25
  tail call void @Perl_op_free(ptr noundef nonnull %4)
  %30 = getelementptr inbounds [0 x ptr], ptr @PL_op_desc, i64 0, i64 %12
  %31 = load ptr, ptr %30, align 8, !tbaa !6
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.63, ptr noundef %31) #29
  br label %36

32:                                               ; preds = %25, %3
  %33 = getelementptr inbounds [0 x ptr], ptr @PL_check, i64 0, i64 %12
  %34 = load ptr, ptr %33, align 8, !tbaa !6
  %35 = tail call ptr %34(ptr noundef nonnull %4) #29
  br label %36

36:                                               ; preds = %29, %32
  %37 = phi ptr [ null, %29 ], [ %35, %32 ]
  ret ptr %37
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: readwrite) uwtable
define dso_local ptr @Perl_sawparens(ptr noundef returned %0) local_unnamed_addr #12 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 5
  %5 = load i8, ptr %4, align 2, !tbaa !35
  %6 = or i8 %5, 8
  store i8 %6, ptr %4, align 2, !tbaa !35
  br label %7

7:                                                ; preds = %3, %1
  ret ptr %0
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_bind_match(i32 noundef %0, ptr noundef %1, ptr noundef %2) local_unnamed_addr #4 {
  %4 = getelementptr inbounds %struct.op, ptr %1, i64 0, i32 4
  %5 = getelementptr inbounds %struct.unop, ptr %1, i64 0, i32 7
  %6 = getelementptr inbounds %struct.op, ptr %1, i64 0, i32 3
  %7 = icmp eq i32 %0, 103
  br label %8

8:                                                ; preds = %162, %3
  %9 = phi ptr [ %2, %3 ], [ %163, %162 ]
  %10 = load i16, ptr %4, align 8
  %11 = freeze i16 %10
  %12 = and i16 %11, 511
  %13 = getelementptr inbounds %struct.op, ptr %9, i64 0, i32 4
  %14 = load i16, ptr %13, align 8
  %15 = and i16 %14, 511
  %16 = icmp eq i16 %12, 135
  %17 = icmp eq i16 %12, 10
  %18 = and i16 %11, 510
  %19 = icmp eq i16 %18, 10
  br i1 %19, label %21, label %20

20:                                               ; preds = %8
  switch i16 %12, label %61 [
    i16 149, label %21
    i16 135, label %21
  ]

21:                                               ; preds = %20, %20, %8
  %22 = tail call zeroext i1 @Perl_ckwarn(i32 noundef 12) #29
  br i1 %22, label %23, label %61

23:                                               ; preds = %21
  %24 = and i16 %14, 509
  %25 = icmp eq i16 %24, 33
  %26 = icmp eq i16 %15, 36
  %27 = or i1 %25, %26
  %28 = zext i16 %15 to i64
  %29 = select i1 %27, i64 %28, i64 31
  %30 = getelementptr inbounds [0 x ptr], ptr @PL_op_desc, i64 0, i64 %29
  %31 = load ptr, ptr %30, align 8, !tbaa !6
  %32 = load i16, ptr %4, align 8
  %33 = and i16 %32, 511
  %34 = icmp eq i16 %33, 10
  %35 = icmp eq i16 %33, 135
  %36 = or i1 %34, %35
  %37 = select i1 %36, i8 64, i8 37
  switch i16 %33, label %50 [
    i16 135, label %38
    i16 149, label %38
  ]

38:                                               ; preds = %23, %23
  %39 = load ptr, ptr %5, align 8, !tbaa !36
  %40 = getelementptr inbounds %struct.op, ptr %39, i64 0, i32 4
  %41 = load i16, ptr %40, align 8
  %42 = and i16 %41, 511
  %43 = icmp eq i16 %42, 7
  br i1 %43, label %44, label %58

44:                                               ; preds = %38
  %45 = getelementptr inbounds %struct.svop, ptr %39, i64 0, i32 7
  %46 = load ptr, ptr %45, align 8, !tbaa !65
  %47 = icmp eq ptr %46, null
  br i1 %47, label %58, label %48

48:                                               ; preds = %44
  %49 = tail call ptr @Perl_varname(ptr noundef nonnull %46, i8 noundef signext %37, i64 noundef 0, ptr noundef null, i32 noundef 0, i32 noundef 1) #29
  br label %54

50:                                               ; preds = %23
  %51 = load ptr, ptr @PL_compcv, align 8, !tbaa !6
  %52 = load i64, ptr %6, align 8, !tbaa !34
  %53 = tail call ptr @Perl_varname(ptr noundef %51, i8 noundef signext %37, i64 noundef %52, ptr noundef null, i32 noundef 0, i32 noundef 1) #29
  br label %54

54:                                               ; preds = %48, %50
  %55 = phi ptr [ %53, %50 ], [ %49, %48 ]
  %56 = icmp eq ptr %55, null
  br i1 %56, label %58, label %57

57:                                               ; preds = %54
  tail call void (i32, ptr, ...) @Perl_warner(i32 noundef 12, ptr noundef nonnull @.str.52, ptr noundef %31, ptr noundef nonnull %55, ptr noundef nonnull %55) #29
  br label %61

58:                                               ; preds = %38, %44, %54
  %59 = or i1 %16, %17
  %60 = select i1 %59, ptr @.str.53, ptr @.str.54
  tail call void (i32, ptr, ...) @Perl_warner(i32 noundef 12, ptr noundef nonnull @.str.55, ptr noundef %31, ptr noundef nonnull %60, ptr noundef nonnull %60) #29
  br label %61

61:                                               ; preds = %57, %58, %20, %21
  switch i16 %15, label %79 [
    i16 5, label %62
    i16 33, label %73
  ]

62:                                               ; preds = %61
  %63 = getelementptr inbounds %struct.svop, ptr %9, i64 0, i32 6
  %64 = load i8, ptr %63, align 1, !tbaa !76
  %65 = and i8 %64, 72
  %66 = icmp eq i8 %65, 72
  br i1 %66, label %67, label %83

67:                                               ; preds = %62
  %68 = getelementptr inbounds %struct.svop, ptr %9, i64 0, i32 7
  %69 = load ptr, ptr %68, align 8, !tbaa !65
  %70 = tail call ptr (ptr, ...) @Perl_mess(ptr noundef nonnull @.str.25, ptr noundef %69) #29
  tail call void @Perl_qerror(ptr noundef %70) #29
  %71 = load i8, ptr %63, align 1, !tbaa !33
  %72 = and i8 %71, -9
  store i8 %72, ptr %63, align 1, !tbaa !33
  br label %83

73:                                               ; preds = %61
  %74 = getelementptr inbounds %struct.pmop, ptr %9, i64 0, i32 10
  %75 = load i32, ptr %74, align 8, !tbaa !54
  %76 = and i32 %75, 134217728
  %77 = icmp ne i32 %76, 0
  %78 = and i1 %7, %77
  br i1 %78, label %86, label %90

79:                                               ; preds = %61
  %80 = icmp eq i16 %15, 36
  %81 = and i1 %7, %80
  br i1 %81, label %86, label %82

82:                                               ; preds = %79
  switch i16 %15, label %83 [
    i16 36, label %90
    i16 35, label %90
    i16 33, label %90
    i16 31, label %90
  ]

83:                                               ; preds = %62, %67, %82
  %84 = getelementptr inbounds %struct.op, ptr %9, i64 0, i32 5
  %85 = load i8, ptr %84, align 2, !tbaa !35
  br label %104

86:                                               ; preds = %79, %73
  %87 = phi ptr [ @.str.56, %73 ], [ @.str.57, %79 ]
  %88 = phi i1 [ true, %73 ], [ false, %79 ]
  %89 = tail call i32 @Perl_yyerror(ptr noundef nonnull %87) #29
  br label %90

90:                                               ; preds = %86, %73, %82, %82, %82, %82
  %91 = phi i1 [ false, %82 ], [ false, %82 ], [ false, %82 ], [ false, %82 ], [ true, %73 ], [ %88, %86 ]
  %92 = phi i1 [ %7, %82 ], [ %7, %82 ], [ %7, %82 ], [ %7, %82 ], [ %7, %73 ], [ true, %86 ]
  %93 = getelementptr inbounds %struct.op, ptr %9, i64 0, i32 5
  %94 = load i8, ptr %93, align 2, !tbaa !35
  %95 = icmp sgt i8 %94, -1
  br i1 %95, label %96, label %104

96:                                               ; preds = %90
  %97 = getelementptr inbounds %struct.op, ptr %9, i64 0, i32 6
  %98 = load i8, ptr %97, align 1, !tbaa !33
  %99 = and i8 %98, 16
  %100 = icmp eq i8 %99, 0
  br i1 %100, label %104, label %101

101:                                              ; preds = %96
  %102 = getelementptr inbounds %struct.op, ptr %9, i64 0, i32 3
  store i64 0, ptr %102, align 8, !tbaa !34
  %103 = and i8 %98, -17
  store i8 %103, ptr %97, align 1, !tbaa !33
  br label %104

104:                                              ; preds = %83, %101, %96, %90
  %105 = phi i8 [ %94, %101 ], [ %94, %96 ], [ %94, %90 ], [ %85, %83 ]
  %106 = phi i1 [ false, %101 ], [ false, %96 ], [ true, %90 ], [ true, %83 ]
  %107 = phi i1 [ %92, %101 ], [ %92, %96 ], [ %92, %90 ], [ %7, %83 ]
  %108 = phi i1 [ %91, %101 ], [ %91, %96 ], [ %91, %90 ], [ false, %83 ]
  %109 = and i8 %105, 64
  %110 = icmp eq i8 %109, 0
  br i1 %110, label %111, label %162

111:                                              ; preds = %104
  %112 = getelementptr inbounds %struct.op, ptr %9, i64 0, i32 3
  %113 = load i64, ptr %112, align 8, !tbaa !34
  %114 = icmp ne i64 %113, 0
  %115 = or i1 %106, %114
  br i1 %115, label %162, label %116

116:                                              ; preds = %111
  %117 = getelementptr inbounds %struct.op, ptr %9, i64 0, i32 4
  %118 = getelementptr inbounds %struct.op, ptr %9, i64 0, i32 5
  %119 = getelementptr inbounds %struct.op, ptr %9, i64 0, i32 3
  %120 = zext i16 %15 to i32
  %121 = load i16, ptr %4, align 8
  %122 = and i16 %121, 511
  %123 = icmp eq i16 %122, 9
  br i1 %123, label %124, label %130

124:                                              ; preds = %116
  %125 = getelementptr inbounds %struct.op, ptr %1, i64 0, i32 6
  %126 = load i8, ptr %125, align 1, !tbaa !33
  %127 = icmp sgt i8 %126, -1
  br i1 %127, label %128, label %130

128:                                              ; preds = %124
  %129 = load i64, ptr %6, align 8, !tbaa !34
  store i64 %129, ptr %119, align 8, !tbaa !34
  tail call void @Perl_op_free(ptr noundef nonnull %1)
  br label %157

130:                                              ; preds = %124, %116
  %131 = or i8 %105, 64
  store i8 %131, ptr %118, align 2, !tbaa !35
  switch i16 %15, label %137 [
    i16 36, label %146
    i16 31, label %146
    i16 35, label %132
  ]

132:                                              ; preds = %130
  %133 = getelementptr inbounds %struct.op, ptr %9, i64 0, i32 6
  %134 = load i8, ptr %133, align 1, !tbaa !33
  %135 = and i8 %134, 4
  %136 = icmp eq i8 %135, 0
  br i1 %136, label %137, label %146

137:                                              ; preds = %130, %132
  br i1 %108, label %138, label %143

138:                                              ; preds = %137
  %139 = getelementptr inbounds %struct.pmop, ptr %9, i64 0, i32 10
  %140 = load i32, ptr %139, align 8, !tbaa !54
  %141 = and i32 %140, 134217728
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %143, label %146

143:                                              ; preds = %138, %137
  %144 = phi i32 [ %120, %137 ], [ 33, %138 ]
  %145 = tail call ptr @Perl_op_lvalue_flags(ptr noundef nonnull %1, i32 noundef %144, i32 noundef 0)
  br label %146

146:                                              ; preds = %143, %130, %130, %138, %132
  %147 = phi ptr [ %1, %132 ], [ %1, %138 ], [ %1, %130 ], [ %1, %130 ], [ %145, %143 ]
  %148 = load i16, ptr %117, align 8
  %149 = and i16 %148, 511
  %150 = add nsw i16 %149, -35
  %151 = icmp ult i16 %150, 2
  %152 = tail call ptr @Perl_scalar(ptr noundef %147)
  br i1 %151, label %153, label %155

153:                                              ; preds = %146
  %154 = tail call ptr @Perl_newBINOP(i32 noundef 0, i32 noundef 64, ptr noundef %147, ptr noundef nonnull %9)
  br label %157

155:                                              ; preds = %146
  %156 = tail call ptr @Perl_op_prepend_elem(i32 noundef %120, ptr noundef %147, ptr noundef nonnull %9)
  br label %157

157:                                              ; preds = %153, %155, %128
  %158 = phi ptr [ %154, %153 ], [ %156, %155 ], [ %9, %128 ]
  br i1 %107, label %159, label %165

159:                                              ; preds = %157
  %160 = tail call ptr @Perl_scalar(ptr noundef %158)
  %161 = tail call ptr @Perl_newUNOP(i32 noundef 103, i32 noundef 0, ptr noundef %158)
  br label %165

162:                                              ; preds = %111, %104
  %163 = tail call ptr @Perl_newPMOP(i32 noundef 31, i32 noundef 0)
  %164 = tail call ptr @Perl_pmruntime(ptr noundef %163, ptr noundef nonnull %9, ptr noundef null, i1 noundef zeroext false, i32 noundef 0)
  br label %8

165:                                              ; preds = %157, %159
  %166 = phi ptr [ %161, %159 ], [ %158, %157 ]
  ret ptr %166
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_newBINOP(i32 noundef %0, i32 noundef %1, ptr noundef %2, ptr noundef %3) local_unnamed_addr #4 {
  %5 = tail call ptr @Perl_Slab_Alloc(i64 noundef 56)
  %6 = icmp eq ptr %2, null
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call ptr @Perl_newOP(i32 noundef 0, i32 noundef 0)
  br label %9

9:                                                ; preds = %4, %7
  %10 = phi ptr [ %2, %4 ], [ %8, %7 ]
  %11 = trunc i32 %0 to i16
  %12 = getelementptr inbounds %struct.binop, ptr %5, i64 0, i32 4
  %13 = load i16, ptr %12, align 8
  %14 = and i16 %11, 511
  %15 = and i16 %13, -512
  %16 = or i16 %15, %14
  store i16 %16, ptr %12, align 8
  %17 = sext i32 %0 to i64
  %18 = getelementptr inbounds [0 x ptr], ptr @PL_ppaddr, i64 0, i64 %17
  %19 = load ptr, ptr %18, align 8, !tbaa !6
  %20 = getelementptr inbounds %struct.binop, ptr %5, i64 0, i32 2
  store ptr %19, ptr %20, align 8, !tbaa !175
  %21 = getelementptr inbounds %struct.binop, ptr %5, i64 0, i32 7
  store ptr %10, ptr %21, align 8, !tbaa !106
  %22 = trunc i32 %1 to i8
  %23 = or i8 %22, 4
  %24 = getelementptr inbounds %struct.binop, ptr %5, i64 0, i32 5
  store i8 %23, ptr %24, align 2, !tbaa !176
  %25 = icmp eq ptr %3, null
  %26 = lshr i32 %1, 8
  %27 = trunc i32 %26 to i8
  %28 = getelementptr inbounds %struct.binop, ptr %5, i64 0, i32 6
  br i1 %25, label %29, label %31

29:                                               ; preds = %9
  %30 = or i8 %27, 1
  store i8 %30, ptr %28, align 1, !tbaa !177
  br label %37

31:                                               ; preds = %9
  %32 = or i8 %27, 2
  store i8 %32, ptr %28, align 1, !tbaa !177
  %33 = getelementptr inbounds %struct.op, ptr %10, i64 0, i32 4
  %34 = load i16, ptr %33, align 8
  %35 = or i16 %34, 16384
  store i16 %35, ptr %33, align 8
  %36 = getelementptr inbounds %struct.op, ptr %10, i64 0, i32 1
  store ptr %3, ptr %36, align 8, !tbaa !38
  br label %37

37:                                               ; preds = %31, %29
  %38 = phi ptr [ %3, %31 ], [ %10, %29 ]
  %39 = getelementptr inbounds %struct.op, ptr %38, i64 0, i32 1
  %40 = load ptr, ptr %39, align 8, !tbaa !38
  %41 = icmp eq ptr %40, null
  br i1 %41, label %42, label %46

42:                                               ; preds = %37
  %43 = getelementptr inbounds %struct.op, ptr %38, i64 0, i32 4
  %44 = load i16, ptr %43, align 8
  %45 = and i16 %44, -16385
  store i16 %45, ptr %43, align 8
  store ptr null, ptr %39, align 8, !tbaa !38
  br label %46

46:                                               ; preds = %37, %42
  %47 = load ptr, ptr %21, align 8, !tbaa !106
  %48 = getelementptr inbounds %struct.op, ptr %47, i64 0, i32 1
  %49 = load ptr, ptr %48, align 8, !tbaa !38
  %50 = getelementptr inbounds %struct.binop, ptr %5, i64 0, i32 8
  store ptr %49, ptr %50, align 8, !tbaa !113
  %51 = icmp eq ptr %49, null
  br i1 %51, label %58, label %52

52:                                               ; preds = %46
  %53 = getelementptr inbounds %struct.op, ptr %49, i64 0, i32 4
  %54 = load i16, ptr %53, align 8
  %55 = and i16 %54, -16385
  store i16 %55, ptr %53, align 8
  %56 = load ptr, ptr %50, align 8, !tbaa !113
  %57 = getelementptr inbounds %struct.op, ptr %56, i64 0, i32 1
  store ptr null, ptr %57, align 8, !tbaa !38
  br label %58

58:                                               ; preds = %52, %46
  %59 = load ptr, ptr @PL_op_mask, align 8, !tbaa !6
  %60 = icmp eq ptr %59, null
  br i1 %60, label %68, label %61

61:                                               ; preds = %58
  %62 = getelementptr inbounds i8, ptr %59, i64 %17
  %63 = load i8, ptr %62, align 1, !tbaa !13
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %68, label %65

65:                                               ; preds = %61
  tail call void @Perl_op_free(ptr noundef nonnull %5)
  %66 = getelementptr inbounds [0 x ptr], ptr @PL_op_desc, i64 0, i64 %17
  %67 = load ptr, ptr %66, align 8, !tbaa !6
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.63, ptr noundef %67) #29
  unreachable

68:                                               ; preds = %61, %58
  %69 = getelementptr inbounds [0 x ptr], ptr @PL_check, i64 0, i64 %17
  %70 = load ptr, ptr %69, align 8, !tbaa !6
  %71 = tail call ptr %70(ptr noundef nonnull %5) #29
  %72 = load ptr, ptr %71, align 8, !tbaa !178
  %73 = icmp eq ptr %72, null
  br i1 %73, label %74, label %129

74:                                               ; preds = %68
  %75 = getelementptr inbounds %struct.binop, ptr %71, i64 0, i32 4
  %76 = load i16, ptr %75, align 8
  %77 = and i16 %76, 511
  %78 = icmp eq i16 %77, %11
  br i1 %78, label %79, label %129

79:                                               ; preds = %74
  %80 = and i32 %0, 65535
  %81 = and i32 %0, 65535
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds [0 x i32], ptr @PL_opargs, i64 0, i64 %82
  %84 = load i32, ptr %83, align 4, !tbaa !52
  %85 = and i32 %84, 4
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %89, label %87

87:                                               ; preds = %79
  %88 = tail call ptr @Perl_scalar(ptr noundef nonnull %71)
  br label %89

89:                                               ; preds = %87, %79
  %90 = and i32 %84, 8
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %98, label %92

92:                                               ; preds = %89
  %93 = getelementptr inbounds %struct.op, ptr %71, i64 0, i32 3
  %94 = load i64, ptr %93, align 8, !tbaa !34
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %96, label %98

96:                                               ; preds = %92
  %97 = tail call i64 @Perl_pad_alloc(i32 noundef %80, i32 noundef 131072) #29
  store i64 %97, ptr %93, align 8, !tbaa !34
  br label %98

98:                                               ; preds = %89, %92, %96
  %99 = load i16, ptr %75, align 8
  %100 = and i16 %99, 511
  %101 = zext i16 %100 to i64
  %102 = getelementptr inbounds [0 x i32], ptr @PL_opargs, i64 0, i64 %101
  %103 = load i32, ptr %102, align 4, !tbaa !52
  %104 = and i32 %103, 32
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %119, label %106

106:                                              ; preds = %98
  %107 = load i32, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 10), align 8, !tbaa !77
  %108 = and i32 %107, 1
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %119, label %110

110:                                              ; preds = %106
  %111 = add i16 %99, 1
  %112 = and i16 %111, 511
  %113 = and i16 %99, -512
  %114 = or i16 %112, %113
  store i16 %114, ptr %75, align 8
  %115 = zext i16 %112 to i64
  %116 = getelementptr inbounds [0 x ptr], ptr @PL_ppaddr, i64 0, i64 %115
  %117 = load ptr, ptr %116, align 8, !tbaa !6
  %118 = getelementptr inbounds %struct.op, ptr %71, i64 0, i32 2
  store ptr %117, ptr %118, align 8, !tbaa !78
  br label %119

119:                                              ; preds = %110, %106, %98
  %120 = icmp eq i16 %100, 101
  br i1 %120, label %121, label %127

121:                                              ; preds = %119
  %122 = getelementptr inbounds %struct.unop, ptr %71, i64 0, i32 7
  %123 = load ptr, ptr %122, align 8, !tbaa !36
  %124 = getelementptr inbounds %struct.op, ptr %123, i64 0, i32 6
  %125 = load i8, ptr %124, align 1, !tbaa !33
  %126 = and i8 %125, -9
  store i8 %126, ptr %124, align 1, !tbaa !33
  br label %127

127:                                              ; preds = %119, %121
  %128 = tail call fastcc ptr @S_fold_constants(ptr noundef nonnull %71)
  br label %129

129:                                              ; preds = %68, %74, %127
  %130 = phi ptr [ %128, %127 ], [ %71, %74 ], [ %71, %68 ]
  ret ptr %130
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pmruntime(ptr noundef returned %0, ptr noundef %1, ptr noundef %2, i1 noundef zeroext %3, i32 noundef %4) local_unnamed_addr #4 {
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca [14 x i8], align 1
  %12 = alloca i8, align 1
  %13 = alloca i8, align 1
  %14 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 4
  %15 = load i16, ptr %14, align 8
  %16 = and i16 %15, 511
  %17 = add nsw i16 %16, -35
  %18 = icmp ult i16 %17, 2
  br i1 %18, label %19, label %791

19:                                               ; preds = %5
  %20 = getelementptr inbounds %struct.svop, ptr %1, i64 0, i32 7
  %21 = load ptr, ptr %20, align 8, !tbaa !65
  %22 = getelementptr inbounds %struct.svop, ptr %2, i64 0, i32 7
  %23 = load ptr, ptr %22, align 8, !tbaa !65
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6) #29
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %7) #29
  %24 = getelementptr inbounds %struct.sv, ptr %21, i64 0, i32 2
  %25 = load i32, ptr %24, align 4, !tbaa !84
  %26 = and i32 %25, 2098176
  %27 = icmp eq i32 %26, 1024
  br i1 %27, label %28, label %34

28:                                               ; preds = %19
  %29 = load ptr, ptr %21, align 8, !tbaa !85
  %30 = getelementptr inbounds %struct.xpv, ptr %29, i64 0, i32 2
  %31 = load i64, ptr %30, align 8, !tbaa !86
  store i64 %31, ptr %6, align 8, !tbaa !88
  %32 = getelementptr inbounds %struct.sv, ptr %21, i64 0, i32 3
  %33 = load ptr, ptr %32, align 8, !tbaa !13
  br label %36

34:                                               ; preds = %19
  %35 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %21, ptr noundef nonnull %6, i32 noundef 34) #29
  br label %36

36:                                               ; preds = %34, %28
  %37 = phi ptr [ %33, %28 ], [ %35, %34 ]
  %38 = getelementptr inbounds %struct.sv, ptr %23, i64 0, i32 2
  %39 = load i32, ptr %38, align 4, !tbaa !84
  %40 = and i32 %39, 2098176
  %41 = icmp eq i32 %40, 1024
  br i1 %41, label %42, label %48

42:                                               ; preds = %36
  %43 = load ptr, ptr %23, align 8, !tbaa !85
  %44 = getelementptr inbounds %struct.xpv, ptr %43, i64 0, i32 2
  %45 = load i64, ptr %44, align 8, !tbaa !86
  store i64 %45, ptr %7, align 8, !tbaa !88
  %46 = getelementptr inbounds %struct.sv, ptr %23, i64 0, i32 3
  %47 = load ptr, ptr %46, align 8, !tbaa !13
  br label %50

48:                                               ; preds = %36
  %49 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %23, ptr noundef nonnull %7, i32 noundef 34) #29
  br label %50

50:                                               ; preds = %48, %42
  %51 = phi ptr [ %47, %42 ], [ %49, %48 ]
  %52 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 6
  %53 = load i8, ptr %52, align 1, !tbaa !33
  %54 = freeze i8 %53
  %55 = zext i8 %54 to i32
  %56 = and i32 %55, 32
  %57 = and i32 %55, 8
  %58 = and i32 %55, 128
  %59 = load i32, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 10), align 8, !tbaa !77
  %60 = or i32 %59, 256
  store i32 %60, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 10), align 8, !tbaa !77
  %61 = load i32, ptr %24, align 4, !tbaa !84
  %62 = and i32 %61, 536870912
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %66, label %64

64:                                               ; preds = %50
  %65 = or i8 %54, 1
  store i8 %65, ptr %52, align 1, !tbaa !33
  br label %66

66:                                               ; preds = %64, %50
  %67 = phi i8 [ %65, %64 ], [ %54, %50 ]
  %68 = load i32, ptr %38, align 4, !tbaa !84
  %69 = and i32 %68, 536870912
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %73, label %71

71:                                               ; preds = %66
  %72 = or i8 %67, 2
  store i8 %72, ptr %52, align 1, !tbaa !33
  br label %73

73:                                               ; preds = %71, %66
  %74 = phi i8 [ %72, %71 ], [ %67, %66 ]
  %75 = zext i8 %74 to i32
  %76 = and i32 %75, 3
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %446, label %78

78:                                               ; preds = %73
  %79 = call ptr @Perl_newSVpvn(ptr noundef nonnull @.str.67, i64 noundef 10) #29
  %80 = load i64, ptr %6, align 8, !tbaa !88
  %81 = getelementptr inbounds i8, ptr %37, i64 %80
  %82 = load i64, ptr %7, align 8, !tbaa !88
  %83 = getelementptr inbounds i8, ptr %51, i64 %82
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %8) #29
  %84 = load i8, ptr %52, align 1, !tbaa !33
  %85 = zext i8 %84 to i32
  %86 = and i32 %85, 1
  %87 = and i32 %85, 2
  %88 = call zeroext i1 @Perl_ckwarn(i32 noundef 44) #29
  %89 = xor i1 %88, true
  %90 = zext i1 %89 to i32
  %91 = icmp eq i32 %86, 0
  br i1 %91, label %92, label %97

92:                                               ; preds = %78
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %9) #29
  %93 = load i64, ptr %6, align 8, !tbaa !88
  store i64 %93, ptr %9, align 8, !tbaa !88
  %94 = call ptr @Perl_bytes_to_utf8(ptr noundef %37, ptr noundef nonnull %9) #29
  %95 = load i64, ptr %9, align 8, !tbaa !88
  %96 = getelementptr inbounds i8, ptr %94, i64 %95
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %9) #29
  br label %97

97:                                               ; preds = %92, %78
  %98 = phi ptr [ %81, %78 ], [ %96, %92 ]
  %99 = phi ptr [ null, %78 ], [ %94, %92 ]
  %100 = phi ptr [ %37, %78 ], [ %94, %92 ]
  %101 = icmp eq i32 %87, 0
  %102 = load i64, ptr %7, align 8
  %103 = icmp ne i64 %102, 0
  %104 = select i1 %101, i1 %103, i1 false
  br i1 %104, label %105, label %109

105:                                              ; preds = %97
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %10) #29
  store i64 %102, ptr %10, align 8, !tbaa !88
  %106 = call ptr @Perl_bytes_to_utf8(ptr noundef %51, ptr noundef nonnull %10) #29
  %107 = load i64, ptr %10, align 8, !tbaa !88
  %108 = getelementptr inbounds i8, ptr %106, i64 %107
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %10) #29
  br label %109

109:                                              ; preds = %105, %97
  %110 = phi ptr [ %108, %105 ], [ %83, %97 ]
  %111 = phi ptr [ %106, %105 ], [ %51, %97 ]
  %112 = phi ptr [ %106, %105 ], [ null, %97 ]
  %113 = icmp eq i32 %56, 0
  br i1 %113, label %202, label %114

114:                                              ; preds = %109
  call void @llvm.lifetime.start.p0(i64 14, ptr nonnull %11) #29
  %115 = load i64, ptr %6, align 8, !tbaa !88
  %116 = shl i64 %115, 4
  %117 = call ptr @Perl_safesysmalloc(i64 noundef %116) #29
  %118 = call ptr @Perl_newSVpvn(ptr noundef nonnull @.str.19, i64 noundef 0) #29
  %119 = icmp ult ptr %100, %98
  br i1 %119, label %121, label %120

120:                                              ; preds = %114
  call void @qsort(ptr noundef %117, i64 noundef 0, i64 noundef 16, ptr noundef nonnull @uvcompare) #29
  br label %156

121:                                              ; preds = %114
  %122 = ptrtoint ptr %98 to i64
  br label %123

123:                                              ; preds = %149, %121
  %124 = phi i64 [ 0, %121 ], [ %151, %149 ]
  %125 = phi ptr [ %100, %121 ], [ %150, %149 ]
  %126 = ptrtoint ptr %125 to i64
  %127 = sub i64 %122, %126
  %128 = call i64 @Perl_utf8n_to_uvchr(ptr noundef %125, i64 noundef %127, ptr noundef nonnull %8, i32 noundef %90) #29
  %129 = shl nuw nsw i64 %124, 1
  %130 = getelementptr inbounds i64, ptr %117, i64 %129
  store i64 %128, ptr %130, align 8, !tbaa !88
  %131 = load i64, ptr %8, align 8, !tbaa !88
  %132 = getelementptr inbounds i8, ptr %125, i64 %131
  %133 = icmp ult ptr %132, %98
  br i1 %133, label %134, label %146

134:                                              ; preds = %123
  %135 = load i8, ptr %132, align 1, !tbaa !13
  %136 = icmp eq i8 %135, -63
  br i1 %136, label %137, label %146

137:                                              ; preds = %134
  %138 = getelementptr inbounds i8, ptr %132, i64 1
  %139 = ptrtoint ptr %138 to i64
  %140 = sub i64 %122, %139
  %141 = call i64 @Perl_utf8n_to_uvchr(ptr noundef nonnull %138, i64 noundef %140, ptr noundef nonnull %8, i32 noundef %90) #29
  %142 = or i64 %129, 1
  %143 = getelementptr inbounds i64, ptr %117, i64 %142
  store i64 %141, ptr %143, align 8, !tbaa !88
  %144 = load i64, ptr %8, align 8, !tbaa !88
  %145 = getelementptr inbounds i8, ptr %138, i64 %144
  br label %149

146:                                              ; preds = %134, %123
  %147 = or i64 %129, 1
  %148 = getelementptr inbounds i64, ptr %117, i64 %147
  store i64 %128, ptr %148, align 8, !tbaa !88
  br label %149

149:                                              ; preds = %146, %137
  %150 = phi ptr [ %145, %137 ], [ %132, %146 ]
  %151 = add nuw i64 %124, 1
  %152 = icmp ult ptr %150, %98
  br i1 %152, label %123, label %153, !llvm.loop !179

153:                                              ; preds = %149
  %154 = and i64 %151, 4294967295
  call void @qsort(ptr noundef nonnull %117, i64 noundef %154, i64 noundef 16, ptr noundef nonnull @uvcompare) #29
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %156, label %158

156:                                              ; preds = %153, %120
  %157 = ptrtoint ptr %11 to i64
  br label %187

158:                                              ; preds = %153
  %159 = ptrtoint ptr %11 to i64
  br label %160

160:                                              ; preds = %178, %158
  %161 = phi i64 [ 0, %158 ], [ %185, %178 ]
  %162 = phi i64 [ 0, %158 ], [ %184, %178 ]
  %163 = shl nuw nsw i64 %161, 1
  %164 = getelementptr inbounds i64, ptr %117, i64 %163
  %165 = load i64, ptr %164, align 8, !tbaa !88
  %166 = sub i64 %165, %162
  %167 = icmp sgt i64 %166, 0
  br i1 %167, label %168, label %178

168:                                              ; preds = %160
  %169 = call ptr @Perl_uvoffuni_to_utf8_flags(ptr noundef nonnull %11, i64 noundef %162, i64 noundef 0) #29
  %170 = ptrtoint ptr %169 to i64
  %171 = sub i64 %170, %159
  call void @Perl_sv_catpvn_flags(ptr noundef %118, ptr noundef nonnull %11, i64 noundef %171, i32 noundef 2) #29
  %172 = icmp eq i64 %166, 1
  br i1 %172, label %178, label %173

173:                                              ; preds = %168
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %12) #29
  store i8 -63, ptr %12, align 1, !tbaa !13
  %174 = add i64 %165, -1
  %175 = call ptr @Perl_uvoffuni_to_utf8_flags(ptr noundef nonnull %11, i64 noundef %174, i64 noundef 0) #29
  call void @Perl_sv_catpvn_flags(ptr noundef %118, ptr noundef nonnull %12, i64 noundef 1, i32 noundef 2) #29
  %176 = ptrtoint ptr %175 to i64
  %177 = sub i64 %176, %159
  call void @Perl_sv_catpvn_flags(ptr noundef %118, ptr noundef nonnull %11, i64 noundef %177, i32 noundef 2) #29
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %12) #29
  br label %178

178:                                              ; preds = %173, %168, %160
  %179 = or i64 %163, 1
  %180 = getelementptr inbounds i64, ptr %117, i64 %179
  %181 = load i64, ptr %180, align 8, !tbaa !88
  %182 = icmp ult i64 %181, %162
  %183 = add i64 %181, 1
  %184 = select i1 %182, i64 %162, i64 %183
  %185 = add nuw nsw i64 %161, 1
  %186 = icmp eq i64 %185, %154
  br i1 %186, label %187, label %160, !llvm.loop !180

187:                                              ; preds = %178, %156
  %188 = phi i64 [ %157, %156 ], [ %159, %178 ]
  %189 = phi i64 [ 0, %156 ], [ %184, %178 ]
  %190 = call ptr @Perl_uvoffuni_to_utf8_flags(ptr noundef nonnull %11, i64 noundef %189, i64 noundef 0) #29
  %191 = ptrtoint ptr %190 to i64
  %192 = sub i64 %191, %188
  call void @Perl_sv_catpvn_flags(ptr noundef %118, ptr noundef nonnull %11, i64 noundef %192, i32 noundef 2) #29
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %13) #29
  store i8 -63, ptr %13, align 1, !tbaa !13
  call void @Perl_sv_catpvn_flags(ptr noundef %118, ptr noundef nonnull %13, i64 noundef 1, i32 noundef 2) #29
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %13) #29
  %193 = call ptr @Perl_uvoffuni_to_utf8_flags(ptr noundef nonnull %11, i64 noundef 2147483647, i64 noundef 0) #29
  %194 = ptrtoint ptr %193 to i64
  %195 = sub i64 %194, %188
  call void @Perl_sv_catpvn_flags(ptr noundef %118, ptr noundef nonnull %11, i64 noundef %195, i32 noundef 2) #29
  %196 = getelementptr inbounds %struct.sv, ptr %118, i64 0, i32 3
  %197 = load ptr, ptr %196, align 8, !tbaa !13
  %198 = load ptr, ptr %118, align 8, !tbaa !85
  %199 = getelementptr inbounds %struct.xpv, ptr %198, i64 0, i32 2
  %200 = load i64, ptr %199, align 8, !tbaa !86
  store i64 %200, ptr %6, align 8, !tbaa !88
  %201 = getelementptr inbounds i8, ptr %197, i64 %200
  call void @Perl_safesysfree(ptr noundef %117) #29
  call void @llvm.lifetime.end.p0(i64 14, ptr nonnull %11) #29
  br label %209

202:                                              ; preds = %109
  %203 = load i64, ptr %7, align 8, !tbaa !88
  %204 = icmp ne i64 %203, 0
  %205 = icmp ne i32 %58, 0
  %206 = or i1 %204, %205
  br i1 %206, label %209, label %207

207:                                              ; preds = %202
  %208 = load i64, ptr %6, align 8, !tbaa !88
  store i64 %208, ptr %7, align 8, !tbaa !88
  br label %209

209:                                              ; preds = %207, %202, %187
  %210 = phi ptr [ %118, %187 ], [ null, %202 ], [ null, %207 ]
  %211 = phi ptr [ %201, %187 ], [ %98, %202 ], [ %98, %207 ]
  %212 = phi ptr [ %110, %187 ], [ %110, %202 ], [ %98, %207 ]
  %213 = phi ptr [ %111, %187 ], [ %111, %202 ], [ %100, %207 ]
  %214 = phi ptr [ %197, %187 ], [ %100, %202 ], [ %100, %207 ]
  %215 = icmp eq i32 %57, 0
  br i1 %215, label %216, label %232

216:                                              ; preds = %209
  %217 = load i64, ptr %7, align 8, !tbaa !88
  %218 = icmp eq i64 %217, 0
  %219 = icmp eq i32 %58, 0
  %220 = and i1 %218, %219
  %221 = icmp eq ptr %214, %213
  %222 = select i1 %220, i1 true, i1 %221
  br i1 %222, label %229, label %223

223:                                              ; preds = %216
  %224 = load i64, ptr %6, align 8, !tbaa !88
  %225 = icmp eq i64 %224, %217
  br i1 %225, label %226, label %232

226:                                              ; preds = %223
  %227 = call i32 @bcmp(ptr %214, ptr %213, i64 %217)
  %228 = icmp eq i32 %227, 0
  br i1 %228, label %229, label %232

229:                                              ; preds = %226, %216
  %230 = load i8, ptr %52, align 1, !tbaa !33
  %231 = or i8 %230, 4
  store i8 %231, ptr %52, align 1, !tbaa !33
  br label %232

232:                                              ; preds = %229, %226, %223, %209
  %233 = icmp ult ptr %214, %211
  br i1 %233, label %234, label %387

234:                                              ; preds = %232
  %235 = ptrtoint ptr %211 to i64
  %236 = ptrtoint ptr %212 to i64
  br label %237

237:                                              ; preds = %377, %234
  %238 = phi ptr [ %214, %234 ], [ %275, %377 ]
  %239 = phi ptr [ %213, %234 ], [ %310, %377 ]
  %240 = phi i32 [ 0, %234 ], [ %309, %377 ]
  %241 = phi i32 [ 0, %234 ], [ %308, %377 ]
  %242 = phi i32 [ 0, %234 ], [ %381, %377 ]
  %243 = phi i64 [ 0, %234 ], [ %316, %377 ]
  %244 = phi i64 [ 0, %234 ], [ %307, %377 ]
  %245 = phi i64 [ 1, %234 ], [ %379, %377 ]
  %246 = phi i64 [ 0, %234 ], [ %314, %377 ]
  %247 = phi i32 [ 0, %234 ], [ %378, %377 ]
  %248 = phi i64 [ 0, %234 ], [ %274, %377 ]
  %249 = phi i64 [ 1, %234 ], [ %383, %377 ]
  %250 = icmp ugt i64 %249, %248
  br i1 %250, label %251, label %272

251:                                              ; preds = %237
  %252 = ptrtoint ptr %238 to i64
  %253 = sub i64 %235, %252
  %254 = call i64 @Perl_utf8n_to_uvchr(ptr noundef %238, i64 noundef %253, ptr noundef nonnull %8, i32 noundef %90) #29
  %255 = shl i64 %254, 32
  %256 = ashr exact i64 %255, 32
  %257 = load i64, ptr %8, align 8, !tbaa !88
  %258 = getelementptr inbounds i8, ptr %238, i64 %257
  %259 = icmp ult ptr %258, %211
  br i1 %259, label %260, label %272

260:                                              ; preds = %251
  %261 = load i8, ptr %258, align 1, !tbaa !13
  %262 = icmp eq i8 %261, -63
  br i1 %262, label %263, label %272

263:                                              ; preds = %260
  %264 = getelementptr inbounds i8, ptr %258, i64 1
  %265 = ptrtoint ptr %264 to i64
  %266 = sub i64 %235, %265
  %267 = call i64 @Perl_utf8n_to_uvchr(ptr noundef nonnull %264, i64 noundef %266, ptr noundef nonnull %8, i32 noundef %90) #29
  %268 = shl i64 %267, 32
  %269 = ashr exact i64 %268, 32
  %270 = load i64, ptr %8, align 8, !tbaa !88
  %271 = getelementptr inbounds i8, ptr %264, i64 %270
  br label %272

272:                                              ; preds = %263, %260, %251, %237
  %273 = phi i64 [ %256, %263 ], [ %249, %237 ], [ %256, %260 ], [ %256, %251 ]
  %274 = phi i64 [ %269, %263 ], [ %248, %237 ], [ %256, %260 ], [ %256, %251 ]
  %275 = phi ptr [ %271, %263 ], [ %238, %237 ], [ %258, %260 ], [ %258, %251 ]
  %276 = icmp ugt i64 %245, %244
  br i1 %276, label %277, label %305

277:                                              ; preds = %272
  %278 = icmp ult ptr %239, %212
  br i1 %278, label %279, label %300

279:                                              ; preds = %277
  %280 = ptrtoint ptr %239 to i64
  %281 = sub i64 %236, %280
  %282 = call i64 @Perl_utf8n_to_uvchr(ptr noundef %239, i64 noundef %281, ptr noundef nonnull %8, i32 noundef %90) #29
  %283 = shl i64 %282, 32
  %284 = ashr exact i64 %283, 32
  %285 = load i64, ptr %8, align 8, !tbaa !88
  %286 = getelementptr inbounds i8, ptr %239, i64 %285
  %287 = icmp ult ptr %286, %212
  br i1 %287, label %288, label %305

288:                                              ; preds = %279
  %289 = load i8, ptr %286, align 1, !tbaa !13
  %290 = icmp eq i8 %289, -63
  br i1 %290, label %291, label %305

291:                                              ; preds = %288
  %292 = getelementptr inbounds i8, ptr %286, i64 1
  %293 = ptrtoint ptr %292 to i64
  %294 = sub i64 %236, %293
  %295 = call i64 @Perl_utf8n_to_uvchr(ptr noundef nonnull %292, i64 noundef %294, ptr noundef nonnull %8, i32 noundef %90) #29
  %296 = shl i64 %295, 32
  %297 = ashr exact i64 %296, 32
  %298 = load i64, ptr %8, align 8, !tbaa !88
  %299 = getelementptr inbounds i8, ptr %292, i64 %298
  br label %305

300:                                              ; preds = %277
  %301 = add nsw i32 %241, 1
  %302 = icmp eq i32 %241, 0
  %303 = trunc i64 %244 to i32
  %304 = select i1 %302, i32 %303, i32 %240
  br label %305

305:                                              ; preds = %300, %291, %288, %279, %272
  %306 = phi i64 [ %284, %291 ], [ 4294967295, %300 ], [ %245, %272 ], [ %284, %288 ], [ %284, %279 ]
  %307 = phi i64 [ %297, %291 ], [ 4294967295, %300 ], [ %244, %272 ], [ %284, %288 ], [ %284, %279 ]
  %308 = phi i32 [ %241, %291 ], [ %301, %300 ], [ %241, %272 ], [ %241, %288 ], [ %241, %279 ]
  %309 = phi i32 [ %240, %291 ], [ %304, %300 ], [ %240, %272 ], [ %240, %288 ], [ %240, %279 ]
  %310 = phi ptr [ %299, %291 ], [ %239, %300 ], [ %239, %272 ], [ %286, %288 ], [ %286, %279 ]
  %311 = sub i64 %274, %273
  %312 = sub i64 %307, %306
  %313 = add i64 %246, 1
  %314 = add i64 %313, %311
  %315 = add i64 %243, 1
  %316 = add i64 %315, %312
  %317 = call i64 @llvm.smin.i64(i64 %311, i64 %312)
  %318 = icmp eq i64 %306, 4294967295
  br i1 %318, label %319, label %323

319:                                              ; preds = %305
  %320 = icmp sgt i64 %311, 0
  br i1 %320, label %321, label %322

321:                                              ; preds = %319
  call void (ptr, ptr, ...) @Perl_sv_catpvf(ptr noundef %79, ptr noundef nonnull @.str.68, i64 noundef %273, i64 noundef %274) #29
  br label %377

322:                                              ; preds = %319
  call void (ptr, ptr, ...) @Perl_sv_catpvf(ptr noundef %79, ptr noundef nonnull @.str.69, i64 noundef %273) #29
  br label %377

323:                                              ; preds = %305
  %324 = icmp sgt i64 %317, 0
  br i1 %324, label %325, label %327

325:                                              ; preds = %323
  %326 = add i64 %317, %273
  call void (ptr, ptr, ...) @Perl_sv_catpvf(ptr noundef %79, ptr noundef nonnull @.str.70, i64 noundef %273, i64 noundef %326, i64 noundef %306) #29
  br label %328

327:                                              ; preds = %323
  call void (ptr, ptr, ...) @Perl_sv_catpvf(ptr noundef %79, ptr noundef nonnull @.str.71, i64 noundef %273, i64 noundef %306) #29
  br label %328

328:                                              ; preds = %327, %325
  %329 = add i64 %317, %306
  %330 = zext i32 %242 to i64
  %331 = icmp ugt i64 %329, %330
  %332 = trunc i64 %329 to i32
  %333 = select i1 %331, i32 %332, i32 %242
  %334 = icmp eq i32 %247, 0
  br i1 %334, label %335, label %374

335:                                              ; preds = %328
  %336 = icmp ult i64 %273, %306
  br i1 %336, label %337, label %371

337:                                              ; preds = %335
  %338 = icmp ult i64 %273, 128
  br i1 %338, label %352, label %339

339:                                              ; preds = %337
  %340 = icmp ult i64 %273, 2048
  br i1 %340, label %352, label %341

341:                                              ; preds = %339
  %342 = icmp ult i64 %273, 65536
  br i1 %342, label %352, label %343

343:                                              ; preds = %341
  %344 = icmp ult i64 %273, 2097152
  br i1 %344, label %352, label %345

345:                                              ; preds = %343
  %346 = icmp ult i64 %273, 67108864
  br i1 %346, label %352, label %347

347:                                              ; preds = %345
  %348 = icmp ult i64 %273, 2147483648
  br i1 %348, label %352, label %349

349:                                              ; preds = %347
  %350 = icmp ult i64 %273, 68719476736
  %351 = select i1 %350, i32 7, i32 13
  br label %352

352:                                              ; preds = %349, %347, %345, %343, %341, %339, %337
  %353 = phi i32 [ 1, %337 ], [ 2, %339 ], [ 3, %341 ], [ 4, %343 ], [ 5, %345 ], [ %351, %349 ], [ 6, %347 ]
  %354 = icmp ult i64 %329, 128
  br i1 %354, label %368, label %355

355:                                              ; preds = %352
  %356 = icmp ult i64 %329, 2048
  br i1 %356, label %368, label %357

357:                                              ; preds = %355
  %358 = icmp ult i64 %329, 65536
  br i1 %358, label %368, label %359

359:                                              ; preds = %357
  %360 = icmp ult i64 %329, 2097152
  br i1 %360, label %368, label %361

361:                                              ; preds = %359
  %362 = icmp ult i64 %329, 67108864
  br i1 %362, label %368, label %363

363:                                              ; preds = %361
  %364 = icmp ult i64 %329, 2147483648
  br i1 %364, label %368, label %365

365:                                              ; preds = %363
  %366 = icmp ult i64 %329, 68719476736
  %367 = select i1 %366, i32 7, i32 13
  br label %368

368:                                              ; preds = %365, %363, %361, %359, %357, %355, %352
  %369 = phi i32 [ 1, %352 ], [ 2, %355 ], [ 3, %357 ], [ 4, %359 ], [ 5, %361 ], [ %367, %365 ], [ 6, %363 ]
  %370 = icmp ult i32 %353, %369
  br label %371

371:                                              ; preds = %368, %335
  %372 = phi i1 [ false, %335 ], [ %370, %368 ]
  %373 = zext i1 %372 to i32
  br label %374

374:                                              ; preds = %371, %328
  %375 = phi i32 [ 1, %328 ], [ %373, %371 ]
  %376 = add i64 %329, 1
  br label %377

377:                                              ; preds = %374, %322, %321
  %378 = phi i32 [ %247, %321 ], [ %247, %322 ], [ %375, %374 ]
  %379 = phi i64 [ 4294967295, %321 ], [ 4294967295, %322 ], [ %376, %374 ]
  %380 = phi i64 [ %311, %321 ], [ %311, %322 ], [ %317, %374 ]
  %381 = phi i32 [ %242, %321 ], [ %242, %322 ], [ %333, %374 ]
  %382 = add i64 %273, 1
  %383 = add i64 %382, %380
  %384 = icmp ult ptr %275, %211
  %385 = icmp ule i64 %383, %274
  %386 = select i1 %384, i1 true, i1 %385
  br i1 %386, label %237, label %387, !llvm.loop !181

387:                                              ; preds = %377, %232
  %388 = phi i32 [ 0, %232 ], [ %378, %377 ]
  %389 = phi i64 [ 0, %232 ], [ %314, %377 ]
  %390 = phi i64 [ 0, %232 ], [ %307, %377 ]
  %391 = phi i64 [ 0, %232 ], [ %316, %377 ]
  %392 = phi i32 [ 0, %232 ], [ %381, %377 ]
  %393 = phi i32 [ 0, %232 ], [ %308, %377 ]
  %394 = phi i32 [ 0, %232 ], [ %309, %377 ]
  %395 = phi ptr [ %213, %232 ], [ %310, %377 ]
  %396 = add i32 %392, 1
  %397 = icmp eq i32 %58, 0
  %398 = add i32 %392, 2
  %399 = select i1 %397, i32 0, i32 %398
  %400 = select i1 %397, i32 %396, i32 %398
  %401 = icmp ugt i32 %400, 65535
  %402 = icmp ugt i32 %400, 255
  %403 = select i1 %402, i32 16, i32 8
  %404 = select i1 %401, i32 32, i32 %403
  %405 = call ptr @Perl_swash_init(ptr noundef nonnull @.str.72, ptr noundef nonnull @.str.19, ptr noundef %79, i32 noundef %404, i32 noundef %396) #29
  %406 = getelementptr inbounds %struct.svop, ptr %0, i64 0, i32 7
  store ptr %405, ptr %406, align 8, !tbaa !65
  %407 = icmp eq ptr %79, null
  br i1 %407, label %415, label %408

408:                                              ; preds = %387
  %409 = getelementptr inbounds %struct.sv, ptr %79, i64 0, i32 1
  %410 = load i32, ptr %409, align 8, !tbaa !42
  %411 = icmp ugt i32 %410, 1
  br i1 %411, label %412, label %414

412:                                              ; preds = %408
  %413 = add i32 %410, -1
  store i32 %413, ptr %409, align 8, !tbaa !42
  br label %415

414:                                              ; preds = %408
  call void @Perl_sv_free2(ptr noundef nonnull %79, i32 noundef %410) #29
  br label %415

415:                                              ; preds = %414, %412, %387
  %416 = icmp eq ptr %210, null
  br i1 %416, label %424, label %417

417:                                              ; preds = %415
  %418 = getelementptr inbounds %struct.sv, ptr %210, i64 0, i32 1
  %419 = load i32, ptr %418, align 8, !tbaa !42
  %420 = icmp ugt i32 %419, 1
  br i1 %420, label %421, label %423

421:                                              ; preds = %417
  %422 = add i32 %419, -1
  store i32 %422, ptr %418, align 8, !tbaa !42
  br label %424

423:                                              ; preds = %417
  call void @Perl_sv_free2(ptr noundef nonnull %210, i32 noundef %419) #29
  br label %424

424:                                              ; preds = %423, %421, %415
  %425 = icmp eq i32 %399, 0
  %426 = icmp ne i32 %393, 0
  %427 = select i1 %425, i1 %426, i1 false
  %428 = load i64, ptr %7, align 8
  %429 = icmp ne i64 %428, 0
  %430 = select i1 %427, i1 %429, i1 false
  br i1 %430, label %431, label %437

431:                                              ; preds = %424
  %432 = getelementptr inbounds %struct.sv, ptr %405, i64 0, i32 3
  %433 = load ptr, ptr %432, align 8, !tbaa !13
  %434 = zext i32 %394 to i64
  %435 = call ptr @Perl_newSVuv(i64 noundef %434) #29
  %436 = call ptr @Perl_hv_common_key_len(ptr noundef %433, ptr noundef nonnull @.str.73, i32 noundef 5, i32 noundef 36, ptr noundef %435, i32 noundef 0) #29
  br label %437

437:                                              ; preds = %431, %424
  call void @Perl_safesysfree(ptr noundef %99) #29
  call void @Perl_safesysfree(ptr noundef %112) #29
  store i64 %389, ptr %6, align 8, !tbaa !88
  store i64 %391, ptr %7, align 8, !tbaa !88
  %438 = icmp ult ptr %395, %212
  br i1 %438, label %439, label %441

439:                                              ; preds = %437
  %440 = add i64 %391, 1
  store i64 %440, ptr %7, align 8, !tbaa !88
  br label %444

441:                                              ; preds = %437
  %442 = icmp eq i64 %390, 4294967295
  br i1 %442, label %443, label %444

443:                                              ; preds = %441
  store i64 0, ptr %7, align 8, !tbaa !88
  br label %444

444:                                              ; preds = %443, %441, %439
  %445 = phi i64 [ %391, %441 ], [ 0, %443 ], [ %440, %439 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %8) #29
  br label %763

446:                                              ; preds = %73
  %447 = and i32 %75, 32
  %448 = icmp ne i32 %447, 0
  %449 = icmp sgt i8 %74, -1
  %450 = and i1 %449, %448
  %451 = select i1 %450, i64 258, i64 256
  %452 = call noalias ptr @calloc(i64 noundef %451, i64 noundef 2) #28
  %453 = getelementptr inbounds %struct.pvop, ptr %0, i64 0, i32 7
  store ptr %452, ptr %453, align 8, !tbaa !67
  %454 = icmp eq i32 %56, 0
  br i1 %454, label %695, label %455

455:                                              ; preds = %446
  %456 = load i64, ptr %6, align 8, !tbaa !88
  %457 = trunc i64 %456 to i32
  %458 = icmp sgt i32 %457, 0
  br i1 %458, label %459, label %479

459:                                              ; preds = %455
  %460 = and i64 %456, 4294967295
  %461 = add nsw i64 %460, -1
  %462 = and i64 %456, 3
  %463 = icmp ult i64 %461, 3
  br i1 %463, label %466, label %464

464:                                              ; preds = %459
  %465 = sub nsw i64 %460, %462
  br label %484

466:                                              ; preds = %484, %459
  %467 = phi i64 [ 0, %459 ], [ %506, %484 ]
  %468 = icmp eq i64 %462, 0
  br i1 %468, label %479, label %469

469:                                              ; preds = %466, %469
  %470 = phi i64 [ %476, %469 ], [ %467, %466 ]
  %471 = phi i64 [ %477, %469 ], [ 0, %466 ]
  %472 = getelementptr inbounds i8, ptr %37, i64 %470
  %473 = load i8, ptr %472, align 1, !tbaa !13
  %474 = zext i8 %473 to i64
  %475 = getelementptr inbounds i16, ptr %452, i64 %474
  store i16 -1, ptr %475, align 2, !tbaa !182
  %476 = add nuw nsw i64 %470, 1
  %477 = add i64 %471, 1
  %478 = icmp eq i64 %477, %462
  br i1 %478, label %479, label %469, !llvm.loop !183

479:                                              ; preds = %466, %469, %455
  %480 = load i64, ptr %7, align 8
  %481 = trunc i64 %480 to i32
  %482 = icmp eq i32 %58, 0
  %483 = icmp eq i64 %480, 0
  br label %531

484:                                              ; preds = %484, %464
  %485 = phi i64 [ 0, %464 ], [ %506, %484 ]
  %486 = phi i64 [ 0, %464 ], [ %507, %484 ]
  %487 = getelementptr inbounds i8, ptr %37, i64 %485
  %488 = load i8, ptr %487, align 1, !tbaa !13
  %489 = zext i8 %488 to i64
  %490 = getelementptr inbounds i16, ptr %452, i64 %489
  store i16 -1, ptr %490, align 2, !tbaa !182
  %491 = or i64 %485, 1
  %492 = getelementptr inbounds i8, ptr %37, i64 %491
  %493 = load i8, ptr %492, align 1, !tbaa !13
  %494 = zext i8 %493 to i64
  %495 = getelementptr inbounds i16, ptr %452, i64 %494
  store i16 -1, ptr %495, align 2, !tbaa !182
  %496 = or i64 %485, 2
  %497 = getelementptr inbounds i8, ptr %37, i64 %496
  %498 = load i8, ptr %497, align 1, !tbaa !13
  %499 = zext i8 %498 to i64
  %500 = getelementptr inbounds i16, ptr %452, i64 %499
  store i16 -1, ptr %500, align 2, !tbaa !182
  %501 = or i64 %485, 3
  %502 = getelementptr inbounds i8, ptr %37, i64 %501
  %503 = load i8, ptr %502, align 1, !tbaa !13
  %504 = zext i8 %503 to i64
  %505 = getelementptr inbounds i16, ptr %452, i64 %504
  store i16 -1, ptr %505, align 2, !tbaa !182
  %506 = add nuw nsw i64 %485, 4
  %507 = add i64 %486, 4
  %508 = icmp eq i64 %507, %465
  br i1 %508, label %466, label %484, !llvm.loop !185

509:                                              ; preds = %551, %514
  %510 = phi i64 [ %515, %514 ], [ %532, %551 ]
  %511 = getelementptr inbounds i16, ptr %452, i64 %510
  %512 = load i16, ptr %511, align 2, !tbaa !182
  %513 = icmp eq i16 %512, 0
  br i1 %513, label %514, label %525

514:                                              ; preds = %509
  store i16 -2, ptr %511, align 2, !tbaa !182
  %515 = add nuw nsw i64 %510, 1
  %516 = icmp eq i64 %515, 256
  br i1 %516, label %769, label %509, !llvm.loop !186

517:                                              ; preds = %556
  %518 = add nsw i32 %533, -1
  %519 = sext i32 %518 to i64
  %520 = getelementptr inbounds i8, ptr %51, i64 %519
  %521 = load i8, ptr %520, align 1, !tbaa !13
  %522 = zext i8 %521 to i16
  store i16 %522, ptr %553, align 2, !tbaa !182
  br label %525

523:                                              ; preds = %556
  %524 = trunc i64 %532 to i16
  store i16 %524, ptr %553, align 2, !tbaa !182
  br label %525

525:                                              ; preds = %509, %552, %537, %541, %523, %517
  %526 = phi i64 [ %532, %517 ], [ %532, %523 ], [ %532, %541 ], [ %532, %537 ], [ %532, %552 ], [ %510, %509 ]
  %527 = phi i32 [ %534, %517 ], [ %534, %523 ], [ %548, %541 ], [ %534, %537 ], [ %534, %552 ], [ %534, %509 ]
  %528 = phi i32 [ %533, %517 ], [ %533, %523 ], [ %549, %541 ], [ %533, %537 ], [ %533, %552 ], [ %533, %509 ]
  %529 = add nuw nsw i64 %526, 1
  %530 = icmp eq i64 %529, 256
  br i1 %530, label %557, label %531, !llvm.loop !186

531:                                              ; preds = %525, %479
  %532 = phi i64 [ %529, %525 ], [ 0, %479 ]
  %533 = phi i32 [ %528, %525 ], [ 0, %479 ]
  %534 = phi i32 [ %527, %525 ], [ 0, %479 ]
  %535 = icmp slt i32 %533, %481
  %536 = freeze i1 %535
  br i1 %536, label %537, label %551

537:                                              ; preds = %531
  %538 = getelementptr inbounds i16, ptr %452, i64 %532
  %539 = load i16, ptr %538, align 2, !tbaa !182
  %540 = icmp eq i16 %539, 0
  br i1 %540, label %541, label %525

541:                                              ; preds = %537
  %542 = icmp ult i64 %532, 128
  %543 = sext i32 %533 to i64
  %544 = getelementptr inbounds i8, ptr %51, i64 %543
  %545 = load i8, ptr %544, align 1, !tbaa !13
  %546 = icmp slt i8 %545, 0
  %547 = select i1 %542, i1 %546, i1 false
  %548 = select i1 %547, i32 1, i32 %534
  %549 = add nsw i32 %533, 1
  %550 = zext i8 %545 to i16
  store i16 %550, ptr %538, align 2, !tbaa !182
  br label %525

551:                                              ; preds = %531
  br i1 %482, label %552, label %509

552:                                              ; preds = %551
  %553 = getelementptr inbounds i16, ptr %452, i64 %532
  %554 = load i16, ptr %553, align 2, !tbaa !182
  %555 = icmp eq i16 %554, 0
  br i1 %555, label %556, label %525

556:                                              ; preds = %552
  br i1 %483, label %523, label %517

557:                                              ; preds = %525
  br i1 %482, label %558, label %769

558:                                              ; preds = %557
  br i1 %483, label %559, label %563

559:                                              ; preds = %558
  %560 = icmp eq i32 %57, 0
  br i1 %560, label %561, label %573

561:                                              ; preds = %559
  %562 = or i8 %74, 4
  store i8 %562, ptr %52, align 1, !tbaa !33
  br label %573

563:                                              ; preds = %558
  %564 = icmp slt i32 %528, %481
  br i1 %564, label %567, label %565

565:                                              ; preds = %563
  %566 = add i32 %481, -1
  br label %573

567:                                              ; preds = %563
  %568 = sext i32 %528 to i64
  %569 = sub i64 %480, %568
  %570 = shl i64 %569, 1
  %571 = add i64 %570, 514
  %572 = call ptr @realloc(ptr noundef nonnull %452, i64 noundef %571) #31
  store ptr %572, ptr %453, align 8, !tbaa !67
  br label %573

573:                                              ; preds = %567, %565, %561, %559
  %574 = phi ptr [ %452, %565 ], [ %572, %567 ], [ %452, %559 ], [ %452, %561 ]
  %575 = phi i32 [ %566, %565 ], [ %528, %567 ], [ 0, %559 ], [ 0, %561 ]
  %576 = zext i32 %575 to i64
  %577 = sub i64 %480, %576
  %578 = trunc i64 %577 to i16
  %579 = getelementptr inbounds i16, ptr %574, i64 256
  store i16 %578, ptr %579, align 2, !tbaa !182
  %580 = sub nsw i32 %481, %575
  %581 = icmp sgt i32 %580, 0
  br i1 %581, label %582, label %774

582:                                              ; preds = %573
  %583 = sext i32 %575 to i64
  %584 = zext i32 %580 to i64
  %585 = icmp ult i32 %580, 8
  br i1 %585, label %643, label %586

586:                                              ; preds = %582
  %587 = getelementptr i8, ptr %574, i64 514
  %588 = shl nuw nsw i64 %584, 1
  %589 = add nuw nsw i64 %588, 514
  %590 = getelementptr i8, ptr %574, i64 %589
  %591 = getelementptr i8, ptr %51, i64 %583
  %592 = add nsw i64 %583, %584
  %593 = getelementptr i8, ptr %51, i64 %592
  %594 = icmp ult ptr %587, %593
  %595 = icmp ult ptr %591, %590
  %596 = and i1 %594, %595
  br i1 %596, label %643, label %597

597:                                              ; preds = %586
  %598 = icmp ult i32 %580, 64
  br i1 %598, label %628, label %599

599:                                              ; preds = %597
  %600 = and i64 %584, 4294967232
  br label %601

601:                                              ; preds = %601, %599
  %602 = phi i64 [ 0, %599 ], [ %621, %601 ]
  %603 = add nsw i64 %602, %583
  %604 = getelementptr inbounds i8, ptr %51, i64 %603
  %605 = load <16 x i8>, ptr %604, align 1, !tbaa !13, !alias.scope !187
  %606 = getelementptr inbounds i8, ptr %604, i64 16
  %607 = load <16 x i8>, ptr %606, align 1, !tbaa !13, !alias.scope !187
  %608 = getelementptr inbounds i8, ptr %604, i64 32
  %609 = load <16 x i8>, ptr %608, align 1, !tbaa !13, !alias.scope !187
  %610 = getelementptr inbounds i8, ptr %604, i64 48
  %611 = load <16 x i8>, ptr %610, align 1, !tbaa !13, !alias.scope !187
  %612 = zext <16 x i8> %605 to <16 x i16>
  %613 = zext <16 x i8> %607 to <16 x i16>
  %614 = zext <16 x i8> %609 to <16 x i16>
  %615 = zext <16 x i8> %611 to <16 x i16>
  %616 = add nuw nsw i64 %602, 257
  %617 = getelementptr inbounds i16, ptr %574, i64 %616
  store <16 x i16> %612, ptr %617, align 2, !tbaa !182, !alias.scope !190, !noalias !187
  %618 = getelementptr inbounds i16, ptr %617, i64 16
  store <16 x i16> %613, ptr %618, align 2, !tbaa !182, !alias.scope !190, !noalias !187
  %619 = getelementptr inbounds i16, ptr %617, i64 32
  store <16 x i16> %614, ptr %619, align 2, !tbaa !182, !alias.scope !190, !noalias !187
  %620 = getelementptr inbounds i16, ptr %617, i64 48
  store <16 x i16> %615, ptr %620, align 2, !tbaa !182, !alias.scope !190, !noalias !187
  %621 = add nuw i64 %602, 64
  %622 = icmp eq i64 %621, %600
  br i1 %622, label %623, label %601, !llvm.loop !192

623:                                              ; preds = %601
  %624 = icmp eq i64 %600, %584
  br i1 %624, label %774, label %625

625:                                              ; preds = %623
  %626 = and i64 %584, 56
  %627 = icmp eq i64 %626, 0
  br i1 %627, label %643, label %628

628:                                              ; preds = %597, %625
  %629 = phi i64 [ %600, %625 ], [ 0, %597 ]
  %630 = and i64 %584, 4294967288
  br label %631

631:                                              ; preds = %631, %628
  %632 = phi i64 [ %629, %628 ], [ %639, %631 ]
  %633 = add nsw i64 %632, %583
  %634 = getelementptr inbounds i8, ptr %51, i64 %633
  %635 = load <8 x i8>, ptr %634, align 1, !tbaa !13, !alias.scope !195
  %636 = zext <8 x i8> %635 to <8 x i16>
  %637 = add nuw nsw i64 %632, 257
  %638 = getelementptr inbounds i16, ptr %574, i64 %637
  store <8 x i16> %636, ptr %638, align 2, !tbaa !182, !alias.scope !198, !noalias !195
  %639 = add nuw i64 %632, 8
  %640 = icmp eq i64 %639, %630
  br i1 %640, label %641, label %631, !llvm.loop !200

641:                                              ; preds = %631
  %642 = icmp eq i64 %630, %584
  br i1 %642, label %774, label %643

643:                                              ; preds = %586, %582, %625, %641
  %644 = phi i64 [ 0, %582 ], [ 0, %586 ], [ %600, %625 ], [ %630, %641 ]
  %645 = xor i64 %644, -1
  %646 = add nsw i64 %645, %584
  %647 = and i64 %584, 3
  %648 = icmp eq i64 %647, 0
  br i1 %648, label %661, label %649

649:                                              ; preds = %643, %649
  %650 = phi i64 [ %658, %649 ], [ %644, %643 ]
  %651 = phi i64 [ %659, %649 ], [ 0, %643 ]
  %652 = add nsw i64 %650, %583
  %653 = getelementptr inbounds i8, ptr %51, i64 %652
  %654 = load i8, ptr %653, align 1, !tbaa !13
  %655 = zext i8 %654 to i16
  %656 = add nuw nsw i64 %650, 257
  %657 = getelementptr inbounds i16, ptr %574, i64 %656
  store i16 %655, ptr %657, align 2, !tbaa !182
  %658 = add nuw nsw i64 %650, 1
  %659 = add i64 %651, 1
  %660 = icmp eq i64 %659, %647
  br i1 %660, label %661, label %649, !llvm.loop !201

661:                                              ; preds = %649, %643
  %662 = phi i64 [ %644, %643 ], [ %658, %649 ]
  %663 = icmp ult i64 %646, 3
  br i1 %663, label %774, label %664

664:                                              ; preds = %661, %664
  %665 = phi i64 [ %693, %664 ], [ %662, %661 ]
  %666 = add nsw i64 %665, %583
  %667 = getelementptr inbounds i8, ptr %51, i64 %666
  %668 = load i8, ptr %667, align 1, !tbaa !13
  %669 = zext i8 %668 to i16
  %670 = add nuw nsw i64 %665, 257
  %671 = getelementptr inbounds i16, ptr %574, i64 %670
  store i16 %669, ptr %671, align 2, !tbaa !182
  %672 = add nuw nsw i64 %665, 1
  %673 = add nsw i64 %672, %583
  %674 = getelementptr inbounds i8, ptr %51, i64 %673
  %675 = load i8, ptr %674, align 1, !tbaa !13
  %676 = zext i8 %675 to i16
  %677 = add nuw nsw i64 %665, 258
  %678 = getelementptr inbounds i16, ptr %574, i64 %677
  store i16 %676, ptr %678, align 2, !tbaa !182
  %679 = add nuw nsw i64 %665, 2
  %680 = add nsw i64 %679, %583
  %681 = getelementptr inbounds i8, ptr %51, i64 %680
  %682 = load i8, ptr %681, align 1, !tbaa !13
  %683 = zext i8 %682 to i16
  %684 = add nuw nsw i64 %665, 259
  %685 = getelementptr inbounds i16, ptr %574, i64 %684
  store i16 %683, ptr %685, align 2, !tbaa !182
  %686 = add nuw nsw i64 %665, 3
  %687 = add nsw i64 %686, %583
  %688 = getelementptr inbounds i8, ptr %51, i64 %687
  %689 = load i8, ptr %688, align 1, !tbaa !13
  %690 = zext i8 %689 to i16
  %691 = add nuw nsw i64 %665, 260
  %692 = getelementptr inbounds i16, ptr %574, i64 %691
  store i16 %690, ptr %692, align 2, !tbaa !182
  %693 = add nuw nsw i64 %665, 4
  %694 = icmp eq i64 %693, %584
  br i1 %694, label %774, label %664, !llvm.loop !202

695:                                              ; preds = %446
  %696 = load i64, ptr %7, align 8, !tbaa !88
  %697 = icmp ne i64 %696, 0
  %698 = icmp ne i32 %58, 0
  %699 = or i1 %697, %698
  br i1 %699, label %703, label %700

700:                                              ; preds = %695
  %701 = load i64, ptr %6, align 8, !tbaa !88
  store i64 %701, ptr %7, align 8, !tbaa !88
  %702 = icmp eq i32 %57, 0
  br i1 %702, label %711, label %715

703:                                              ; preds = %695
  %704 = icmp eq i32 %57, 0
  %705 = load i64, ptr %6, align 8, !tbaa !88
  %706 = icmp eq i64 %696, %705
  %707 = select i1 %704, i1 %706, i1 false
  br i1 %707, label %708, label %715

708:                                              ; preds = %703
  %709 = call i32 @bcmp(ptr %37, ptr %51, i64 %696)
  %710 = icmp eq i32 %709, 0
  br i1 %710, label %711, label %715

711:                                              ; preds = %708, %700
  %712 = phi i64 [ %701, %700 ], [ %696, %708 ]
  %713 = phi ptr [ %37, %700 ], [ %51, %708 ]
  %714 = or i8 %74, 4
  store i8 %714, ptr %52, align 1, !tbaa !33
  br label %715

715:                                              ; preds = %711, %708, %703, %700
  %716 = phi i64 [ %696, %703 ], [ %696, %708 ], [ %701, %700 ], [ %712, %711 ]
  %717 = phi i64 [ %705, %703 ], [ %696, %708 ], [ %701, %700 ], [ %712, %711 ]
  %718 = phi ptr [ %51, %703 ], [ %51, %708 ], [ %37, %700 ], [ %713, %711 ]
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 2 dereferenceable(512) %452, i8 -1, i64 512, i1 false), !tbaa !182
  %719 = trunc i64 %717 to i32
  %720 = icmp sgt i32 %719, 0
  br i1 %720, label %721, label %763

721:                                              ; preds = %715
  %722 = trunc i64 %716 to i32
  %723 = and i64 %717, 4294967295
  br label %724

724:                                              ; preds = %757, %721
  %725 = phi i64 [ 0, %721 ], [ %760, %757 ]
  %726 = phi i32 [ 0, %721 ], [ %761, %757 ]
  %727 = phi i32 [ 0, %721 ], [ %758, %757 ]
  %728 = icmp slt i32 %726, %722
  br i1 %728, label %740, label %729

729:                                              ; preds = %724
  br i1 %698, label %730, label %738

730:                                              ; preds = %729
  %731 = getelementptr inbounds i8, ptr %37, i64 %725
  %732 = load i8, ptr %731, align 1, !tbaa !13
  %733 = zext i8 %732 to i64
  %734 = getelementptr inbounds i16, ptr %452, i64 %733
  %735 = load i16, ptr %734, align 2, !tbaa !182
  %736 = icmp eq i16 %735, -1
  br i1 %736, label %737, label %757

737:                                              ; preds = %730
  store i16 -2, ptr %734, align 2, !tbaa !182
  br label %757

738:                                              ; preds = %729
  %739 = add nsw i32 %726, -1
  br label %740

740:                                              ; preds = %738, %724
  %741 = phi i32 [ %739, %738 ], [ %726, %724 ]
  %742 = getelementptr inbounds i8, ptr %37, i64 %725
  %743 = load i8, ptr %742, align 1, !tbaa !13
  %744 = zext i8 %743 to i64
  %745 = getelementptr inbounds i16, ptr %452, i64 %744
  %746 = load i16, ptr %745, align 2, !tbaa !182
  %747 = icmp eq i16 %746, -1
  br i1 %747, label %748, label %757

748:                                              ; preds = %740
  %749 = sext i32 %741 to i64
  %750 = getelementptr inbounds i8, ptr %718, i64 %749
  %751 = load i8, ptr %750, align 1, !tbaa !13
  %752 = icmp slt i8 %751, 0
  %753 = select i1 %752, i32 1, i32 %727
  %754 = icmp slt i8 %743, 0
  %755 = select i1 %754, i32 %727, i32 %753
  %756 = zext i8 %751 to i16
  store i16 %756, ptr %745, align 2, !tbaa !182
  br label %757

757:                                              ; preds = %748, %740, %737, %730
  %758 = phi i32 [ %727, %737 ], [ %727, %730 ], [ %755, %748 ], [ %727, %740 ]
  %759 = phi i32 [ %726, %737 ], [ %726, %730 ], [ %741, %748 ], [ %741, %740 ]
  %760 = add nuw nsw i64 %725, 1
  %761 = add nsw i32 %759, 1
  %762 = icmp eq i64 %760, %723
  br i1 %762, label %763, label %724, !llvm.loop !203

763:                                              ; preds = %757, %715, %444
  %764 = phi i64 [ %389, %444 ], [ %717, %715 ], [ %717, %757 ]
  %765 = phi i64 [ %445, %444 ], [ %716, %715 ], [ %716, %757 ]
  %766 = phi i32 [ %399, %444 ], [ %58, %715 ], [ %58, %757 ]
  %767 = phi i32 [ %388, %444 ], [ 0, %715 ], [ %758, %757 ]
  %768 = icmp eq i32 %766, 0
  br i1 %768, label %774, label %769

769:                                              ; preds = %514, %763, %557
  %770 = phi i64 [ %764, %763 ], [ %456, %557 ], [ %456, %514 ]
  %771 = phi i64 [ %765, %763 ], [ %480, %557 ], [ %480, %514 ]
  %772 = phi i32 [ %767, %763 ], [ %527, %557 ], [ %534, %514 ]
  %773 = icmp eq i64 %771, %770
  br i1 %773, label %781, label %774

774:                                              ; preds = %661, %664, %623, %641, %769, %763, %573
  %775 = phi i64 [ %770, %769 ], [ %764, %763 ], [ %456, %573 ], [ %456, %641 ], [ %456, %623 ], [ %456, %664 ], [ %456, %661 ]
  %776 = phi i64 [ %771, %769 ], [ %765, %763 ], [ %480, %573 ], [ %480, %641 ], [ %480, %623 ], [ %480, %664 ], [ %480, %661 ]
  %777 = phi i32 [ %772, %769 ], [ %767, %763 ], [ %527, %573 ], [ %527, %641 ], [ %527, %623 ], [ %527, %664 ], [ %527, %661 ]
  %778 = icmp ule i64 %776, %775
  %779 = icmp ne i32 %56, 0
  %780 = or i1 %778, %779
  br i1 %780, label %784, label %781

781:                                              ; preds = %774, %769
  %782 = phi ptr [ @.str.74, %769 ], [ @.str.75, %774 ]
  %783 = phi i32 [ %772, %769 ], [ %777, %774 ]
  call void (i32, ptr, ...) @Perl_ck_warner(i32 noundef 12, ptr noundef nonnull %782) #29
  br label %784

784:                                              ; preds = %781, %774
  %785 = phi i32 [ %777, %774 ], [ %783, %781 ]
  %786 = icmp eq i32 %785, 0
  br i1 %786, label %790, label %787

787:                                              ; preds = %784
  %788 = load i8, ptr %52, align 1, !tbaa !33
  %789 = or i8 %788, 64
  store i8 %789, ptr %52, align 1, !tbaa !33
  br label %790

790:                                              ; preds = %784, %787
  call void @Perl_op_free(ptr noundef %1)
  call void @Perl_op_free(ptr noundef %2)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7) #29
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #29
  br label %1250

791:                                              ; preds = %5
  %792 = getelementptr inbounds %struct.op, ptr %1, i64 0, i32 4
  %793 = load i16, ptr %792, align 8
  %794 = and i16 %793, 511
  switch i16 %794, label %827 [
    i16 158, label %795
    i16 5, label %828
  ]

795:                                              ; preds = %791
  %796 = getelementptr inbounds %struct.listop, ptr %1, i64 0, i32 7
  %797 = load ptr, ptr %796, align 8, !tbaa !6
  %798 = icmp eq ptr %797, null
  br i1 %798, label %828, label %799

799:                                              ; preds = %795, %821
  %800 = phi ptr [ %825, %821 ], [ %797, %795 ]
  %801 = phi i8 [ %823, %821 ], [ 1, %795 ]
  %802 = phi i8 [ %822, %821 ], [ 0, %795 ]
  %803 = getelementptr inbounds %struct.op, ptr %800, i64 0, i32 4
  %804 = load i16, ptr %803, align 8
  %805 = and i16 %804, 511
  switch i16 %805, label %820 [
    i16 0, label %806
    i16 5, label %821
    i16 3, label %821
  ]

806:                                              ; preds = %799
  %807 = getelementptr inbounds %struct.op, ptr %800, i64 0, i32 5
  %808 = load i8, ptr %807, align 2, !tbaa !35
  %809 = icmp sgt i8 %808, -1
  br i1 %809, label %820, label %810

810:                                              ; preds = %806
  %811 = getelementptr inbounds %struct.op, ptr %800, i64 0, i32 1
  %812 = load ptr, ptr %811, align 8, !tbaa !38
  %813 = icmp eq ptr %812, null
  br i1 %813, label %814, label %818

814:                                              ; preds = %810
  %815 = tail call ptr @Perl_newSVOP(i32 noundef 5, i32 noundef 0, ptr noundef nonnull @PL_sv_no)
  %816 = tail call ptr @Perl_op_sibling_splice(ptr noundef %1, ptr noundef nonnull %800, i32 noundef 0, ptr noundef %815)
  %817 = load ptr, ptr %811, align 8, !tbaa !38
  br label %818

818:                                              ; preds = %810, %814
  %819 = phi ptr [ %812, %810 ], [ %817, %814 ]
  store ptr %819, ptr %800, align 8, !tbaa !25
  br label %821

820:                                              ; preds = %799, %806
  br label %821

821:                                              ; preds = %799, %799, %818, %820
  %822 = phi i8 [ 1, %818 ], [ %802, %820 ], [ %802, %799 ], [ %802, %799 ]
  %823 = phi i8 [ %801, %818 ], [ 0, %820 ], [ %801, %799 ], [ %801, %799 ]
  %824 = getelementptr inbounds %struct.op, ptr %800, i64 0, i32 1
  %825 = load ptr, ptr %824, align 8, !tbaa !6
  %826 = icmp eq ptr %825, null
  br i1 %826, label %828, label %799, !llvm.loop !204

827:                                              ; preds = %791
  br label %828

828:                                              ; preds = %821, %795, %791, %827
  %829 = phi i8 [ 0, %827 ], [ 0, %791 ], [ 0, %795 ], [ %822, %821 ]
  %830 = phi i8 [ 0, %827 ], [ 1, %791 ], [ 1, %795 ], [ %823, %821 ]
  %831 = load ptr, ptr %1, align 8, !tbaa !25
  %832 = icmp eq ptr %831, null
  br i1 %832, label %833, label %835

833:                                              ; preds = %828
  %834 = tail call ptr @Perl_op_linklist(ptr noundef nonnull %1)
  br label %835

835:                                              ; preds = %828, %833
  %836 = load i16, ptr %792, align 8
  %837 = and i16 %836, 511
  switch i16 %837, label %911 [
    i16 158, label %838
    i16 10, label %907
    i16 135, label %907
  ]

838:                                              ; preds = %835
  %839 = getelementptr inbounds %struct.listop, ptr %1, i64 0, i32 7
  %840 = load ptr, ptr %839, align 8, !tbaa !6
  %841 = icmp eq ptr %840, null
  br i1 %841, label %911, label %842

842:                                              ; preds = %838
  %843 = and i8 %830, 1
  %844 = icmp eq i8 %843, 0
  br label %845

845:                                              ; preds = %842, %903
  %846 = phi ptr [ %840, %842 ], [ %905, %903 ]
  %847 = getelementptr inbounds %struct.op, ptr %846, i64 0, i32 4
  %848 = load i16, ptr %847, align 8
  %849 = and i16 %848, 511
  switch i16 %849, label %903 [
    i16 10, label %850
    i16 135, label %850
    i16 0, label %854
  ]

850:                                              ; preds = %845, %845
  %851 = getelementptr inbounds %struct.op, ptr %846, i64 0, i32 5
  %852 = load i8, ptr %851, align 2, !tbaa !35
  %853 = or i8 %852, 19
  store i8 %853, ptr %851, align 2, !tbaa !35
  br label %903

854:                                              ; preds = %845
  %855 = getelementptr inbounds %struct.op, ptr %846, i64 0, i32 5
  %856 = load i8, ptr %855, align 2, !tbaa !35
  %857 = icmp sgt i8 %856, -1
  br i1 %857, label %903, label %858

858:                                              ; preds = %854
  store ptr null, ptr %846, align 8, !tbaa !25
  %859 = tail call ptr @Perl_scalar(ptr noundef nonnull %846)
  %860 = load ptr, ptr %846, align 8, !tbaa !25
  %861 = icmp eq ptr %860, null
  br i1 %861, label %862, label %864

862:                                              ; preds = %858
  %863 = tail call ptr @Perl_op_linklist(ptr noundef nonnull %846)
  br label %864

864:                                              ; preds = %858, %862
  %865 = getelementptr inbounds %struct.listop, ptr %846, i64 0, i32 7
  %866 = load ptr, ptr %865, align 8, !tbaa !81
  %867 = getelementptr inbounds %struct.op, ptr %866, i64 0, i32 4
  %868 = load i16, ptr %867, align 8
  %869 = and i16 %868, 511
  %870 = icmp eq i16 %869, 197
  br i1 %870, label %871, label %879

871:                                              ; preds = %864
  %872 = getelementptr inbounds %struct.listop, ptr %866, i64 0, i32 7
  %873 = load ptr, ptr %872, align 8, !tbaa !81
  %874 = getelementptr inbounds %struct.op, ptr %873, i64 0, i32 1
  %875 = load ptr, ptr %874, align 8, !tbaa !38
  store ptr %875, ptr %846, align 8, !tbaa !25
  store ptr null, ptr %866, align 8, !tbaa !205
  %876 = load i16, ptr %867, align 8
  %877 = and i16 %876, 511
  %878 = icmp eq i16 %877, 0
  br i1 %878, label %889, label %881

879:                                              ; preds = %864
  store ptr null, ptr %866, align 8, !tbaa !25
  %880 = icmp eq i16 %869, 0
  br i1 %880, label %889, label %881

881:                                              ; preds = %879, %871
  tail call void @Perl_op_clear(ptr noundef nonnull %866)
  %882 = load i16, ptr %867, align 8
  %883 = and i16 %882, 511
  %884 = zext i16 %883 to i64
  %885 = getelementptr inbounds %struct.op, ptr %866, i64 0, i32 3
  store i64 %884, ptr %885, align 8, !tbaa !34
  %886 = and i16 %882, -512
  store i16 %886, ptr %867, align 8
  %887 = load ptr, ptr @PL_ppaddr, align 8, !tbaa !6
  %888 = getelementptr inbounds %struct.op, ptr %866, i64 0, i32 2
  store ptr %887, ptr %888, align 8, !tbaa !78
  br label %889

889:                                              ; preds = %881, %879, %871
  %890 = load ptr, ptr @PL_peepp, align 8, !tbaa !6
  tail call void %890(ptr noundef nonnull %846) #29
  %891 = load ptr, ptr %846, align 8, !tbaa !6
  %892 = icmp eq ptr %891, null
  br i1 %892, label %901, label %893

893:                                              ; preds = %889, %898
  %894 = phi ptr [ %899, %898 ], [ %891, %889 ]
  %895 = getelementptr inbounds %struct.op, ptr %894, i64 0, i32 4
  %896 = load i16, ptr %895, align 8
  %897 = and i16 %896, 511
  switch i16 %897, label %901 [
    i16 0, label %898
    i16 198, label %898
    i16 2, label %898
    i16 192, label %898
  ]

898:                                              ; preds = %893, %893, %893, %893
  %899 = load ptr, ptr %894, align 8, !tbaa !25
  store ptr %899, ptr %846, align 8, !tbaa !6
  %900 = icmp eq ptr %899, null
  br i1 %900, label %901, label %893, !llvm.loop !122

901:                                              ; preds = %893, %898, %889
  br i1 %844, label %903, label %902

902:                                              ; preds = %901
  tail call void @Perl_push_scope() #29
  tail call void @Perl_save_vptr(ptr noundef nonnull @PL_curcop) #29
  tail call fastcc void @S_finalize_op(ptr noundef nonnull %846)
  tail call void @Perl_pop_scope() #29
  br label %903

903:                                              ; preds = %845, %901, %902, %854, %850
  %904 = getelementptr inbounds %struct.op, ptr %846, i64 0, i32 1
  %905 = load ptr, ptr %904, align 8, !tbaa !6
  %906 = icmp eq ptr %905, null
  br i1 %906, label %911, label %845, !llvm.loop !206

907:                                              ; preds = %835, %835
  %908 = getelementptr inbounds %struct.op, ptr %1, i64 0, i32 5
  %909 = load i8, ptr %908, align 2, !tbaa !35
  %910 = or i8 %909, 19
  store i8 %910, ptr %908, align 2, !tbaa !35
  br label %911

911:                                              ; preds = %903, %838, %835, %907
  %912 = load i32, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 10), align 8, !tbaa !77
  %913 = or i32 %912, 256
  store i32 %913, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 10), align 8, !tbaa !77
  %914 = and i8 %830, 1
  %915 = icmp eq i8 %914, 0
  br i1 %915, label %992, label %916

916:                                              ; preds = %911
  %917 = getelementptr inbounds %struct.pmop, ptr %0, i64 0, i32 10
  %918 = load i32, ptr %917, align 8, !tbaa !54
  %919 = and i32 %918, 2047
  %920 = tail call ptr @Perl_current_re_engine() #29
  %921 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 5
  %922 = load i8, ptr %921, align 2, !tbaa !35
  %923 = or i32 %919, 2048
  %924 = icmp slt i8 %922, 0
  %925 = select i1 %924, i32 %923, i32 %919
  %926 = and i8 %829, 1
  %927 = icmp eq i8 %926, 0
  br i1 %927, label %932, label %928

928:                                              ; preds = %916
  %929 = getelementptr inbounds %struct.regexp_engine, ptr %920, i64 0, i32 11
  %930 = load ptr, ptr %929, align 8, !tbaa !207
  %931 = icmp eq ptr %930, null
  br i1 %931, label %944, label %956

932:                                              ; preds = %916
  %933 = load i32, ptr %917, align 8, !tbaa !54
  %934 = and i32 %933, 268435456
  %935 = icmp eq i32 %934, 0
  br i1 %935, label %944, label %936

936:                                              ; preds = %932
  %937 = load ptr, ptr @PL_compcv, align 8, !tbaa !6
  tail call void @Perl_cv_forget_slab(ptr noundef %937) #29
  %938 = load i32, ptr @PL_savestack_ix, align 4, !tbaa !52
  %939 = icmp sgt i32 %938, %4
  br i1 %939, label %940, label %941

940:                                              ; preds = %936
  tail call void @Perl_leave_scope(i32 noundef %4) #29
  br label %941

941:                                              ; preds = %940, %936
  %942 = load i32, ptr %917, align 8, !tbaa !54
  %943 = and i32 %942, -268435457
  store i32 %943, ptr %917, align 8, !tbaa !54
  br label %944

944:                                              ; preds = %928, %932, %941
  %945 = getelementptr inbounds %struct.regexp_engine, ptr %920, i64 0, i32 11
  %946 = load ptr, ptr %945, align 8, !tbaa !207
  %947 = icmp eq ptr %946, null
  %948 = load i32, ptr %917, align 8, !tbaa !54
  br i1 %947, label %951, label %949

949:                                              ; preds = %944
  %950 = tail call ptr %946(ptr noundef null, i32 noundef 0, ptr noundef nonnull %1, ptr noundef nonnull %920, ptr noundef null, ptr noundef null, i32 noundef %925, i32 noundef %948) #29
  br label %953

951:                                              ; preds = %944
  %952 = tail call ptr @Perl_re_op_compile(ptr noundef null, i32 noundef 0, ptr noundef nonnull %1, ptr noundef nonnull %920, ptr noundef null, ptr noundef null, i32 noundef %925, i32 noundef %948) #29
  br label %953

953:                                              ; preds = %951, %949
  %954 = phi ptr [ %950, %949 ], [ %952, %951 ]
  %955 = getelementptr inbounds %struct.pmop, ptr %0, i64 0, i32 9
  store ptr %954, ptr %955, align 8, !tbaa !70
  tail call void @Perl_op_free(ptr noundef nonnull %1)
  br label %1124

956:                                              ; preds = %928
  %957 = load i32, ptr %917, align 8, !tbaa !54
  %958 = load i32, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 10), align 8, !tbaa !77
  %959 = shl i32 %958, 10
  %960 = and i32 %959, -2147483648
  %961 = or i32 %960, %957
  %962 = tail call ptr %930(ptr noundef null, i32 noundef 0, ptr noundef nonnull %1, ptr noundef nonnull %920, ptr noundef null, ptr noundef null, i32 noundef %925, i32 noundef %961) #29
  %963 = getelementptr inbounds %struct.pmop, ptr %0, i64 0, i32 9
  store ptr %962, ptr %963, align 8, !tbaa !70
  %964 = load i32, ptr %917, align 8, !tbaa !54
  %965 = and i32 %964, 268435456
  %966 = icmp eq i32 %965, 0
  br i1 %966, label %990, label %967

967:                                              ; preds = %956
  %968 = tail call ptr @Perl_newPMOP(i32 noundef 32, i32 noundef 0)
  %969 = getelementptr inbounds %struct.pmop, ptr %968, i64 0, i32 13
  store ptr %1, ptr %969, align 8, !tbaa !69
  %970 = load ptr, ptr @PL_compcv, align 8, !tbaa !6
  %971 = icmp eq ptr %970, null
  br i1 %971, label %976, label %972

972:                                              ; preds = %967
  %973 = getelementptr inbounds %struct.cv, ptr %970, i64 0, i32 1
  %974 = load i32, ptr %973, align 8, !tbaa !209
  %975 = add i32 %974, 1
  store i32 %975, ptr %973, align 8, !tbaa !209
  br label %976

976:                                              ; preds = %972, %967
  %977 = tail call ptr @Perl_newATTRSUB_x(i32 noundef %4, ptr noundef null, ptr noundef null, ptr noundef null, ptr noundef nonnull %968, i1 noundef zeroext false)
  %978 = getelementptr i8, ptr %962, i64 16
  %979 = load ptr, ptr %978, align 8, !tbaa !13
  %980 = getelementptr inbounds %struct.regexp, ptr %979, i64 0, i32 25
  store ptr %977, ptr %980, align 8, !tbaa !210
  %981 = load i16, ptr %14, align 8
  %982 = and i16 %981, 511
  %983 = zext i16 %982 to i32
  %984 = tail call i64 @Perl_pad_add_anon(ptr noundef %977, i32 noundef %983) #29
  %985 = icmp eq ptr %977, null
  br i1 %985, label %1124, label %986

986:                                              ; preds = %976
  %987 = getelementptr inbounds %struct.cv, ptr %977, i64 0, i32 1
  %988 = load i32, ptr %987, align 8, !tbaa !209
  %989 = add i32 %988, 1
  store i32 %989, ptr %987, align 8, !tbaa !209
  br label %1124

990:                                              ; preds = %956
  %991 = getelementptr inbounds %struct.pmop, ptr %0, i64 0, i32 13
  store ptr %1, ptr %991, align 8, !tbaa !69
  br label %1124

992:                                              ; preds = %911
  br i1 %3, label %993, label %1005

993:                                              ; preds = %992
  %994 = load i16, ptr %792, align 8
  %995 = and i16 %994, 511
  %996 = icmp eq i16 %995, 158
  br i1 %996, label %997, label %1005

997:                                              ; preds = %993
  tail call void @Perl_op_clear(ptr noundef nonnull %1)
  %998 = load i16, ptr %792, align 8
  %999 = and i16 %998, 511
  %1000 = zext i16 %999 to i64
  %1001 = getelementptr inbounds %struct.op, ptr %1, i64 0, i32 3
  store i64 %1000, ptr %1001, align 8, !tbaa !34
  %1002 = and i16 %998, -512
  store i16 %1002, ptr %792, align 8
  %1003 = load ptr, ptr @PL_ppaddr, align 8, !tbaa !6
  %1004 = getelementptr inbounds %struct.op, ptr %1, i64 0, i32 2
  store ptr %1003, ptr %1004, align 8, !tbaa !78
  br label %1005

1005:                                             ; preds = %992, %997, %993
  %1006 = phi i32 [ 0, %993 ], [ 64, %997 ], [ 0, %992 ]
  %1007 = and i8 %829, 1
  %1008 = icmp eq i8 %1007, 0
  br i1 %1008, label %1014, label %1009

1009:                                             ; preds = %1005
  %1010 = getelementptr inbounds %struct.pmop, ptr %0, i64 0, i32 13
  store ptr %1, ptr %1010, align 8, !tbaa !69
  %1011 = getelementptr inbounds %struct.pmop, ptr %0, i64 0, i32 10
  %1012 = load i32, ptr %1011, align 8, !tbaa !54
  %1013 = or i32 %1012, 536870912
  store i32 %1013, ptr %1011, align 8, !tbaa !54
  br label %1014

1014:                                             ; preds = %1009, %1005
  %1015 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 5
  %1016 = load i8, ptr %1015, align 2, !tbaa !35
  %1017 = icmp sgt i8 %1016, -1
  %1018 = getelementptr inbounds %struct.pmop, ptr %0, i64 0, i32 10
  %1019 = load i32, ptr %1018, align 8, !tbaa !54
  br i1 %1017, label %1022, label %1020

1020:                                             ; preds = %1014
  %1021 = or i32 %1019, 2048
  store i32 %1021, ptr %1018, align 8, !tbaa !54
  br label %1022

1022:                                             ; preds = %1014, %1020
  %1023 = phi i32 [ %1021, %1020 ], [ %1019, %1014 ]
  %1024 = and i32 %1023, 8388608
  %1025 = icmp eq i32 %1024, 0
  %1026 = load i8, ptr @PL_tainting, align 1, !range !212
  %1027 = icmp eq i8 %1026, 0
  %1028 = select i1 %1025, i1 %1027, i1 false
  br i1 %1028, label %1034, label %1029

1029:                                             ; preds = %1022
  %1030 = getelementptr inbounds %struct.pmop, ptr %0, i64 0, i32 10
  %1031 = select i1 %1027, i32 28, i32 29
  %1032 = tail call ptr @Perl_newUNOP(i32 noundef %1031, i32 noundef 0, ptr noundef nonnull %1)
  %1033 = load i32, ptr %1030, align 8, !tbaa !54
  br label %1034

1034:                                             ; preds = %1022, %1029
  %1035 = phi i32 [ %1033, %1029 ], [ %1023, %1022 ]
  %1036 = phi ptr [ %1032, %1029 ], [ %1, %1022 ]
  %1037 = and i32 %1035, 268435456
  %1038 = icmp eq i32 %1037, 0
  br i1 %1038, label %1060, label %1039

1039:                                             ; preds = %1034
  %1040 = load ptr, ptr @PL_compcv, align 8, !tbaa !6
  %1041 = icmp eq ptr %1040, null
  br i1 %1041, label %1046, label %1042

1042:                                             ; preds = %1039
  %1043 = getelementptr inbounds %struct.cv, ptr %1040, i64 0, i32 1
  %1044 = load i32, ptr %1043, align 8, !tbaa !209
  %1045 = add i32 %1044, 1
  store i32 %1045, ptr %1043, align 8, !tbaa !209
  br label %1046

1046:                                             ; preds = %1042, %1039
  %1047 = load ptr, ptr %1040, align 8, !tbaa !10
  %1048 = getelementptr inbounds %struct.xpvcv, ptr %1047, i64 0, i32 12
  %1049 = load i32, ptr %1048, align 4, !tbaa !14
  %1050 = or i32 %1049, 2
  store i32 %1050, ptr %1048, align 4, !tbaa !14
  %1051 = tail call ptr @Perl_newATTRSUB_x(i32 noundef %4, ptr noundef null, ptr noundef null, ptr noundef null, ptr noundef %1036, i1 noundef zeroext false)
  %1052 = tail call ptr @Perl_newSVOP(i32 noundef 18, i32 noundef 0, ptr noundef %1051)
  %1053 = getelementptr inbounds %struct.op, ptr %1052, i64 0, i32 3
  %1054 = load i64, ptr %1053, align 8, !tbaa !34
  %1055 = tail call ptr @Perl_newUNOP(i32 noundef 20, i32 noundef 0, ptr noundef %1052)
  %1056 = tail call ptr @Perl_scalar(ptr noundef %1055)
  %1057 = tail call ptr @Perl_newUNOP(i32 noundef 185, i32 noundef 0, ptr noundef %1055)
  %1058 = tail call fastcc ptr @S_force_list(ptr noundef %1057, i1 noundef zeroext true)
  %1059 = tail call ptr @Perl_list(ptr noundef %1058)
  br label %1060

1060:                                             ; preds = %1046, %1034
  %1061 = phi i64 [ %1054, %1046 ], [ 0, %1034 ]
  %1062 = phi ptr [ %1059, %1046 ], [ %1036, %1034 ]
  %1063 = tail call ptr @Perl_scalar(ptr noundef %1062)
  %1064 = tail call ptr @Perl_Slab_Alloc(i64 noundef 56)
  %1065 = getelementptr inbounds %struct.logop, ptr %1064, i64 0, i32 4
  %1066 = load i16, ptr %1065, align 8
  %1067 = and i16 %1066, -512
  %1068 = or i16 %1067, 30
  store i16 %1068, ptr %1065, align 8
  %1069 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_ppaddr, i64 0, i64 30), align 8, !tbaa !6
  %1070 = getelementptr inbounds %struct.logop, ptr %1064, i64 0, i32 2
  store ptr %1069, ptr %1070, align 8, !tbaa !99
  %1071 = getelementptr inbounds %struct.logop, ptr %1064, i64 0, i32 7
  store ptr %1062, ptr %1071, align 8, !tbaa !101
  %1072 = getelementptr inbounds %struct.logop, ptr %1064, i64 0, i32 8
  store ptr %0, ptr %1072, align 8, !tbaa !102
  %1073 = getelementptr inbounds %struct.logop, ptr %1064, i64 0, i32 5
  store i8 4, ptr %1073, align 2, !tbaa !103
  br label %1074

1074:                                             ; preds = %1077, %1060
  %1075 = phi ptr [ %1062, %1060 ], [ %1079, %1077 ]
  %1076 = icmp eq ptr %1075, null
  br i1 %1076, label %1087, label %1077

1077:                                             ; preds = %1074
  %1078 = getelementptr inbounds %struct.op, ptr %1075, i64 0, i32 1
  %1079 = load ptr, ptr %1078, align 8, !tbaa !38
  %1080 = icmp eq ptr %1079, null
  br i1 %1080, label %1081, label %1074, !llvm.loop !104

1081:                                             ; preds = %1077
  %1082 = getelementptr inbounds %struct.op, ptr %1075, i64 0, i32 1
  %1083 = getelementptr inbounds %struct.op, ptr %1075, i64 0, i32 4
  %1084 = load i16, ptr %1083, align 8
  %1085 = and i16 %1084, -16385
  store i16 %1085, ptr %1083, align 8
  store ptr null, ptr %1082, align 8, !tbaa !38
  %1086 = load i8, ptr %1073, align 2, !tbaa !103
  br label %1087

1087:                                             ; preds = %1074, %1081
  %1088 = phi i8 [ %1086, %1081 ], [ 4, %1074 ]
  %1089 = load i32, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 10), align 8, !tbaa !77
  %1090 = lshr i32 %1089, 14
  %1091 = and i32 %1090, 128
  %1092 = or i32 %1091, %1006
  %1093 = trunc i32 %1092 to i8
  %1094 = or i8 %1088, %1093
  store i8 %1094, ptr %1073, align 2, !tbaa !103
  %1095 = getelementptr inbounds %struct.logop, ptr %1064, i64 0, i32 3
  store i64 %1061, ptr %1095, align 8, !tbaa !213
  %1096 = and i32 %1089, 2097152
  %1097 = icmp eq i32 %1096, 0
  br i1 %1097, label %1099, label %1098

1098:                                             ; preds = %1087
  tail call fastcc void @S_set_haseval()
  br label %1099

1099:                                             ; preds = %1098, %1087
  %1100 = getelementptr inbounds %struct.op, ptr %1062, i64 0, i32 4
  %1101 = load i16, ptr %1100, align 8
  %1102 = and i16 %1101, 510
  %1103 = icmp eq i16 %1102, 28
  %1104 = load ptr, ptr %1062, align 8, !tbaa !25
  %1105 = icmp eq ptr %1104, null
  br i1 %1103, label %1106, label %1112

1106:                                             ; preds = %1099
  br i1 %1105, label %1107, label %1109

1107:                                             ; preds = %1106
  %1108 = tail call ptr @Perl_op_linklist(ptr noundef nonnull %1062)
  br label %1109

1109:                                             ; preds = %1106, %1107
  store ptr %1062, ptr %1064, align 8, !tbaa !214
  %1110 = getelementptr inbounds %struct.unop, ptr %1062, i64 0, i32 7
  %1111 = load ptr, ptr %1110, align 8, !tbaa !36
  br label %1117

1112:                                             ; preds = %1099
  br i1 %1105, label %1113, label %1115

1113:                                             ; preds = %1112
  %1114 = tail call ptr @Perl_op_linklist(ptr noundef nonnull %1062)
  br label %1115

1115:                                             ; preds = %1112, %1113
  %1116 = phi ptr [ %1114, %1113 ], [ %1104, %1112 ]
  store ptr %1116, ptr %1064, align 8, !tbaa !214
  br label %1117

1117:                                             ; preds = %1115, %1109
  %1118 = phi ptr [ %1062, %1115 ], [ %1111, %1109 ]
  store ptr %1064, ptr %1118, align 8, !tbaa !25
  %1119 = load i16, ptr %14, align 8
  %1120 = and i16 %1119, 511
  %1121 = zext i16 %1120 to i32
  %1122 = tail call ptr @Perl_scalar(ptr noundef nonnull %1064)
  %1123 = tail call ptr @Perl_op_prepend_elem(i32 noundef %1121, ptr noundef nonnull %1064, ptr noundef %0)
  br label %1124

1124:                                             ; preds = %953, %976, %986, %990, %1117
  %1125 = icmp eq ptr %2, null
  br i1 %1125, label %1250, label %1126

1126:                                             ; preds = %1124
  %1127 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 4
  %1128 = load i16, ptr %1127, align 8
  %1129 = and i16 %1128, 511
  %1130 = icmp eq i16 %1129, 0
  br i1 %1130, label %1131, label %1167

1131:                                             ; preds = %1126
  %1132 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 5
  %1133 = load i8, ptr %1132, align 2, !tbaa !35
  %1134 = and i8 %1133, 4
  %1135 = icmp eq i8 %1134, 0
  br i1 %1135, label %1212, label %1136

1136:                                             ; preds = %1131
  %1137 = getelementptr inbounds %struct.unop, ptr %2, i64 0, i32 7
  %1138 = load ptr, ptr %1137, align 8, !tbaa !36
  %1139 = getelementptr inbounds %struct.op, ptr %1138, i64 0, i32 4
  %1140 = load i16, ptr %1139, align 8
  %1141 = and i16 %1140, 511
  %1142 = icmp eq i16 %1141, 198
  br i1 %1142, label %1143, label %1212

1143:                                             ; preds = %1136
  %1144 = getelementptr inbounds %struct.op, ptr %1138, i64 0, i32 5
  %1145 = load i8, ptr %1144, align 2, !tbaa !35
  %1146 = and i8 %1145, 4
  %1147 = icmp eq i8 %1146, 0
  br i1 %1147, label %1212, label %1148

1148:                                             ; preds = %1143
  %1149 = getelementptr inbounds %struct.unop, ptr %1138, i64 0, i32 7
  %1150 = load ptr, ptr %1149, align 8, !tbaa !36
  %1151 = getelementptr inbounds %struct.op, ptr %1150, i64 0, i32 4
  %1152 = load i16, ptr %1151, align 8
  %1153 = and i16 %1152, 511
  %1154 = icmp eq i16 %1153, 0
  br i1 %1154, label %1155, label %1212

1155:                                             ; preds = %1148
  %1156 = getelementptr inbounds %struct.op, ptr %1150, i64 0, i32 1
  %1157 = load ptr, ptr %1156, align 8, !tbaa !38
  %1158 = icmp eq ptr %1157, null
  br i1 %1158, label %1212, label %1159

1159:                                             ; preds = %1155
  %1160 = getelementptr inbounds %struct.op, ptr %1157, i64 0, i32 1
  %1161 = load ptr, ptr %1160, align 8, !tbaa !38
  %1162 = icmp eq ptr %1161, null
  %1163 = select i1 %1162, ptr %1157, ptr %2
  %1164 = getelementptr inbounds %struct.op, ptr %1163, i64 0, i32 4
  %1165 = load i16, ptr %1164, align 8
  %1166 = and i16 %1165, 511
  br label %1167

1167:                                             ; preds = %1159, %1126
  %1168 = phi i16 [ %1166, %1159 ], [ %1129, %1126 ]
  %1169 = phi ptr [ %1163, %1159 ], [ %2, %1126 ]
  switch i16 %1168, label %1179 [
    i16 5, label %1203
    i16 15, label %1170
    i16 135, label %1170
    i16 149, label %1170
    i16 14, label %1170
  ]

1170:                                             ; preds = %1167, %1167, %1167, %1167
  %1171 = getelementptr inbounds %struct.unop, ptr %1169, i64 0, i32 7
  %1172 = load ptr, ptr %1171, align 8, !tbaa !36
  %1173 = icmp eq ptr %1172, null
  br i1 %1173, label %1212, label %1174

1174:                                             ; preds = %1170
  %1175 = getelementptr inbounds %struct.op, ptr %1172, i64 0, i32 4
  %1176 = load i16, ptr %1175, align 8
  %1177 = and i16 %1176, 511
  %1178 = icmp eq i16 %1177, 7
  br i1 %1178, label %1182, label %1212

1179:                                             ; preds = %1167
  %1180 = add nsw i16 %1168, -9
  %1181 = icmp ult i16 %1180, 4
  br i1 %1181, label %1182, label %1212

1182:                                             ; preds = %1179, %1174
  %1183 = getelementptr inbounds %struct.pmop, ptr %0, i64 0, i32 9
  %1184 = load ptr, ptr %1183, align 8, !tbaa !70
  %1185 = icmp eq ptr %1184, null
  br i1 %1185, label %1212, label %1186

1186:                                             ; preds = %1182
  %1187 = load ptr, ptr %1184, align 8, !tbaa !215
  %1188 = getelementptr inbounds %struct.xpv, ptr %1187, i64 0, i32 2
  %1189 = load i64, ptr %1188, align 8, !tbaa !86
  %1190 = getelementptr i8, ptr %1184, i64 16
  %1191 = load ptr, ptr %1190, align 8, !tbaa !13
  %1192 = getelementptr inbounds %struct.regexp, ptr %1191, i64 0, i32 24
  %1193 = load i16, ptr %1192, align 8
  %1194 = and i16 %1193, 15
  %1195 = add nuw nsw i16 %1194, 1
  %1196 = zext i16 %1195 to i64
  %1197 = icmp eq i64 %1189, %1196
  br i1 %1197, label %1212, label %1198

1198:                                             ; preds = %1186
  %1199 = getelementptr inbounds %struct.regexp, ptr %1191, i64 0, i32 7
  %1200 = load i32, ptr %1199, align 8, !tbaa !217
  %1201 = and i32 %1200, 131072
  %1202 = icmp eq i32 %1201, 0
  br i1 %1202, label %1203, label %1212

1203:                                             ; preds = %1167, %1198
  %1204 = getelementptr inbounds %struct.pmop, ptr %0, i64 0, i32 10
  %1205 = load i32, ptr %1204, align 8, !tbaa !54
  %1206 = or i32 %1205, 4194304
  store i32 %1206, ptr %1204, align 8, !tbaa !54
  %1207 = load i16, ptr %14, align 8
  %1208 = and i16 %1207, 511
  %1209 = zext i16 %1208 to i32
  %1210 = tail call ptr @Perl_scalar(ptr noundef nonnull %2)
  %1211 = tail call ptr @Perl_op_prepend_elem(i32 noundef %1209, ptr noundef nonnull %2, ptr noundef nonnull %0)
  br label %1250

1212:                                             ; preds = %1148, %1155, %1143, %1136, %1131, %1174, %1170, %1198, %1186, %1182, %1179
  %1213 = tail call ptr @Perl_scalar(ptr noundef nonnull %2)
  %1214 = tail call ptr @Perl_Slab_Alloc(i64 noundef 56)
  %1215 = getelementptr inbounds %struct.logop, ptr %1214, i64 0, i32 4
  %1216 = load i16, ptr %1215, align 8
  %1217 = and i16 %1216, -512
  %1218 = or i16 %1217, 34
  store i16 %1218, ptr %1215, align 8
  %1219 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_ppaddr, i64 0, i64 34), align 8, !tbaa !6
  %1220 = getelementptr inbounds %struct.logop, ptr %1214, i64 0, i32 2
  store ptr %1219, ptr %1220, align 8, !tbaa !99
  %1221 = getelementptr inbounds %struct.logop, ptr %1214, i64 0, i32 7
  store ptr %2, ptr %1221, align 8, !tbaa !101
  %1222 = getelementptr inbounds %struct.logop, ptr %1214, i64 0, i32 8
  store ptr %0, ptr %1222, align 8, !tbaa !102
  %1223 = getelementptr inbounds %struct.logop, ptr %1214, i64 0, i32 5
  store i8 4, ptr %1223, align 2, !tbaa !103
  br label %1224

1224:                                             ; preds = %1212, %1224
  %1225 = phi ptr [ %2, %1212 ], [ %1227, %1224 ]
  %1226 = getelementptr inbounds %struct.op, ptr %1225, i64 0, i32 1
  %1227 = load ptr, ptr %1226, align 8, !tbaa !38
  %1228 = icmp eq ptr %1227, null
  br i1 %1228, label %1229, label %1224, !llvm.loop !104

1229:                                             ; preds = %1224
  %1230 = getelementptr inbounds %struct.op, ptr %1225, i64 0, i32 1
  %1231 = getelementptr inbounds %struct.op, ptr %1225, i64 0, i32 4
  %1232 = load i16, ptr %1231, align 8
  %1233 = and i16 %1232, -16385
  store i16 %1233, ptr %1231, align 8
  store ptr null, ptr %1230, align 8, !tbaa !38
  %1234 = getelementptr inbounds %struct.logop, ptr %1214, i64 0, i32 6
  store i8 1, ptr %1234, align 1, !tbaa !218
  %1235 = load ptr, ptr %2, align 8, !tbaa !25
  %1236 = icmp eq ptr %1235, null
  br i1 %1236, label %1237, label %1239

1237:                                             ; preds = %1229
  %1238 = tail call ptr @Perl_op_linklist(ptr noundef nonnull %2)
  br label %1239

1239:                                             ; preds = %1229, %1237
  %1240 = phi ptr [ %1238, %1237 ], [ %1235, %1229 ]
  store ptr %1240, ptr %1214, align 8, !tbaa !214
  store ptr %1214, ptr %2, align 8, !tbaa !25
  %1241 = tail call ptr @Perl_scalar(ptr noundef nonnull %1214)
  %1242 = getelementptr inbounds %struct.pmop, ptr %0, i64 0, i32 11
  store ptr %1214, ptr %1242, align 8, !tbaa !13
  %1243 = load ptr, ptr %1214, align 8, !tbaa !214
  %1244 = icmp eq ptr %1243, null
  br i1 %1244, label %1245, label %1247

1245:                                             ; preds = %1239
  %1246 = tail call ptr @Perl_op_linklist(ptr noundef nonnull %1214)
  br label %1247

1247:                                             ; preds = %1239, %1245
  %1248 = phi ptr [ %1246, %1245 ], [ %1243, %1239 ]
  %1249 = getelementptr inbounds %struct.pmop, ptr %0, i64 0, i32 12
  store ptr %1248, ptr %1249, align 8, !tbaa !13
  store ptr null, ptr %1214, align 8, !tbaa !214
  br label %1250

1250:                                             ; preds = %1124, %1247, %1203, %790
  ret ptr %0
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_newPMOP(i32 noundef %0, i32 noundef %1) local_unnamed_addr #4 {
  %3 = tail call ptr @Perl_Slab_Alloc(i64 noundef 96)
  %4 = trunc i32 %0 to i16
  %5 = getelementptr inbounds %struct.pmop, ptr %3, i64 0, i32 4
  %6 = load i16, ptr %5, align 8
  %7 = and i16 %4, 511
  %8 = and i16 %6, -512
  %9 = or i16 %8, %7
  store i16 %9, ptr %5, align 8
  %10 = sext i32 %0 to i64
  %11 = getelementptr inbounds [0 x ptr], ptr @PL_ppaddr, i64 0, i64 %10
  %12 = load ptr, ptr %11, align 8, !tbaa !6
  %13 = getelementptr inbounds %struct.pmop, ptr %3, i64 0, i32 2
  store ptr %12, ptr %13, align 8, !tbaa !219
  %14 = trunc i32 %1 to i8
  %15 = getelementptr inbounds %struct.pmop, ptr %3, i64 0, i32 5
  store i8 %14, ptr %15, align 2, !tbaa !220
  %16 = lshr i32 %1, 8
  %17 = trunc i32 %16 to i8
  %18 = getelementptr inbounds %struct.pmop, ptr %3, i64 0, i32 6
  store i8 %17, ptr %18, align 1, !tbaa !221
  %19 = getelementptr inbounds [0 x i32], ptr @PL_opargs, i64 0, i64 %10
  %20 = load i32, ptr %19, align 4, !tbaa !52
  %21 = and i32 %20, 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %25, label %23

23:                                               ; preds = %2
  %24 = tail call ptr @Perl_scalar(ptr noundef nonnull %3)
  br label %25

25:                                               ; preds = %23, %2
  %26 = load i32, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 10), align 8, !tbaa !77
  %27 = and i32 %26, 1048576
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %33, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %struct.pmop, ptr %3, i64 0, i32 10
  %31 = load i32, ptr %30, align 8, !tbaa !54
  %32 = or i32 %31, 524288
  store i32 %32, ptr %30, align 8, !tbaa !54
  br label %33

33:                                               ; preds = %29, %25
  %34 = load ptr, ptr @PL_curcop, align 8, !tbaa !6
  %35 = getelementptr inbounds %struct.cop, ptr %34, i64 0, i32 10
  %36 = load i32, ptr %35, align 8, !tbaa !77
  %37 = and i32 %36, 2048
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %48

39:                                               ; preds = %33
  %40 = and i32 %36, 16
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %57, label %42

42:                                               ; preds = %39
  %43 = tail call zeroext i1 @Perl__is_in_locale_category(i1 noundef zeroext false, i32 noundef -1) #29
  br i1 %43, label %44, label %57

44:                                               ; preds = %42
  %45 = load ptr, ptr @PL_curcop, align 8, !tbaa !6
  %46 = getelementptr inbounds %struct.cop, ptr %45, i64 0, i32 10
  %47 = load i32, ptr %46, align 8, !tbaa !77
  br label %48

48:                                               ; preds = %44, %33
  %49 = phi i32 [ %47, %44 ], [ %36, %33 ]
  %50 = and i32 %49, 8
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %57

52:                                               ; preds = %48
  %53 = getelementptr inbounds %struct.pmop, ptr %3, i64 0, i32 10
  %54 = load i32, ptr %53, align 4, !tbaa !52
  %55 = and i32 %54, -897
  %56 = or i32 %55, 256
  store i32 %56, ptr %53, align 4, !tbaa !52
  br label %57

57:                                               ; preds = %52, %48, %42, %39
  %58 = load i32, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 10), align 8, !tbaa !77
  %59 = and i32 %58, 33554432
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %123, label %61

61:                                               ; preds = %57
  %62 = load ptr, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 13), align 8, !tbaa !45
  %63 = tail call ptr @Perl_refcounted_he_fetch_pvn(ptr noundef %62, ptr noundef nonnull @.str.65, i64 noundef 7, i32 noundef 0, i32 noundef 0) #29
  %64 = icmp eq ptr %63, null
  br i1 %64, label %91, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %struct.sv, ptr %63, i64 0, i32 2
  %67 = load i32, ptr %66, align 4, !tbaa !84
  %68 = and i32 %67, 65280
  %69 = icmp ne i32 %68, 0
  %70 = and i32 %67, 255
  %71 = icmp eq i32 %70, 8
  %72 = or i1 %69, %71
  %73 = and i32 %67, 16826623
  %74 = icmp eq i32 %73, 16777226
  %75 = or i1 %74, %72
  br i1 %75, label %76, label %91

76:                                               ; preds = %65
  %77 = and i32 %67, 2097408
  %78 = icmp eq i32 %77, 256
  br i1 %78, label %79, label %83

79:                                               ; preds = %76
  %80 = load ptr, ptr %63, align 8, !tbaa !85
  %81 = getelementptr inbounds %struct.xpviv, ptr %80, i64 0, i32 4
  %82 = load i64, ptr %81, align 8, !tbaa !13
  br label %85

83:                                               ; preds = %76
  %84 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %63, i32 noundef 2) #29
  br label %85

85:                                               ; preds = %83, %79
  %86 = phi i64 [ %82, %79 ], [ %84, %83 ]
  %87 = getelementptr inbounds %struct.pmop, ptr %3, i64 0, i32 10
  %88 = load i32, ptr %87, align 8, !tbaa !54
  %89 = trunc i64 %86 to i32
  %90 = or i32 %88, %89
  store i32 %90, ptr %87, align 8, !tbaa !54
  br label %91

91:                                               ; preds = %65, %85, %61
  %92 = load ptr, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 13), align 8, !tbaa !45
  %93 = tail call ptr @Perl_refcounted_he_fetch_pvn(ptr noundef %92, ptr noundef nonnull @.str.66, i64 noundef 15, i32 noundef 0, i32 noundef 0) #29
  %94 = icmp eq ptr %93, null
  br i1 %94, label %123, label %95

95:                                               ; preds = %91
  %96 = getelementptr inbounds %struct.sv, ptr %93, i64 0, i32 2
  %97 = load i32, ptr %96, align 4, !tbaa !84
  %98 = and i32 %97, 65280
  %99 = icmp ne i32 %98, 0
  %100 = and i32 %97, 255
  %101 = icmp eq i32 %100, 8
  %102 = or i1 %99, %101
  %103 = and i32 %97, 16826623
  %104 = icmp eq i32 %103, 16777226
  %105 = or i1 %104, %102
  br i1 %105, label %106, label %123

106:                                              ; preds = %95
  %107 = getelementptr inbounds %struct.pmop, ptr %3, i64 0, i32 10
  %108 = and i32 %97, 2097408
  %109 = icmp eq i32 %108, 256
  br i1 %109, label %110, label %114

110:                                              ; preds = %106
  %111 = load ptr, ptr %93, align 8, !tbaa !85
  %112 = getelementptr inbounds %struct.xpviv, ptr %111, i64 0, i32 4
  %113 = load i64, ptr %112, align 8, !tbaa !13
  br label %116

114:                                              ; preds = %106
  %115 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %93, i32 noundef 2) #29
  br label %116

116:                                              ; preds = %114, %110
  %117 = phi i64 [ %113, %110 ], [ %115, %114 ]
  %118 = trunc i64 %117 to i32
  %119 = load i32, ptr %107, align 4, !tbaa !52
  %120 = and i32 %119, -897
  %121 = shl i32 %118, 7
  %122 = or i32 %120, %121
  store i32 %122, ptr %107, align 4, !tbaa !52
  br label %123

123:                                              ; preds = %91, %116, %95, %57
  %124 = load ptr, ptr @PL_op_mask, align 8, !tbaa !6
  %125 = icmp eq ptr %124, null
  br i1 %125, label %133, label %126

126:                                              ; preds = %123
  %127 = getelementptr inbounds i8, ptr %124, i64 %10
  %128 = load i8, ptr %127, align 1, !tbaa !13
  %129 = icmp eq i8 %128, 0
  br i1 %129, label %133, label %130

130:                                              ; preds = %126
  tail call void @Perl_op_free(ptr noundef nonnull %3)
  %131 = getelementptr inbounds [0 x ptr], ptr @PL_op_desc, i64 0, i64 %10
  %132 = load ptr, ptr %131, align 8, !tbaa !6
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.63, ptr noundef %132) #29
  br label %137

133:                                              ; preds = %126, %123
  %134 = getelementptr inbounds [0 x ptr], ptr @PL_check, i64 0, i64 %10
  %135 = load ptr, ptr %134, align 8, !tbaa !6
  %136 = tail call ptr %135(ptr noundef nonnull %3) #29
  br label %137

137:                                              ; preds = %133, %130
  %138 = phi ptr [ null, %130 ], [ %136, %133 ]
  ret ptr %138
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_invert(ptr noundef %0) local_unnamed_addr #4 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %6, label %3

3:                                                ; preds = %1
  %4 = tail call ptr @Perl_scalar(ptr noundef nonnull %0)
  %5 = tail call ptr @Perl_newUNOP(i32 noundef 103, i32 noundef 128, ptr noundef nonnull %0)
  br label %6

6:                                                ; preds = %1, %3
  %7 = phi ptr [ %5, %3 ], [ null, %1 ]
  ret ptr %7
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_op_scope(ptr noundef %0) local_unnamed_addr #4 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %85, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 5
  %5 = load i8, ptr %4, align 2, !tbaa !35
  %6 = and i8 %5, 8
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %15

8:                                                ; preds = %3
  %9 = load i32, ptr @PL_perldb, align 4, !tbaa !52
  %10 = and i32 %9, 4
  %11 = icmp eq i32 %10, 0
  %12 = load i8, ptr @PL_tainting, align 1, !range !212
  %13 = icmp eq i8 %12, 0
  %14 = select i1 %11, i1 %13, i1 false
  br i1 %14, label %24, label %15

15:                                               ; preds = %8, %3
  %16 = tail call ptr @Perl_newOP(i32 noundef 196, i32 noundef 0)
  %17 = tail call ptr @Perl_op_prepend_elem(i32 noundef 192, ptr noundef %16, ptr noundef nonnull %0)
  %18 = getelementptr inbounds %struct.op, ptr %17, i64 0, i32 4
  %19 = load i16, ptr %18, align 8
  %20 = and i16 %19, -512
  %21 = or i16 %20, 197
  store i16 %21, ptr %18, align 8
  %22 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_ppaddr, i64 0, i64 197), align 8, !tbaa !6
  %23 = getelementptr inbounds %struct.op, ptr %17, i64 0, i32 2
  store ptr %22, ptr %23, align 8, !tbaa !78
  br label %85

24:                                               ; preds = %8
  %25 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 4
  %26 = load i16, ptr %25, align 8
  %27 = and i16 %26, 511
  %28 = icmp eq i16 %27, 192
  br i1 %28, label %29, label %59

29:                                               ; preds = %24
  %30 = and i16 %26, -512
  %31 = or i16 %30, 198
  store i16 %31, ptr %25, align 8
  %32 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_ppaddr, i64 0, i64 198), align 8, !tbaa !6
  %33 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 2
  store ptr %32, ptr %33, align 8, !tbaa !78
  %34 = getelementptr inbounds %struct.listop, ptr %0, i64 0, i32 7
  %35 = load ptr, ptr %34, align 8, !tbaa !81
  %36 = getelementptr inbounds %struct.op, ptr %35, i64 0, i32 4
  %37 = load i16, ptr %36, align 8
  %38 = and i16 %37, 511
  %39 = add nsw i16 %38, -193
  %40 = icmp ult i16 %39, 2
  br i1 %40, label %41, label %85

41:                                               ; preds = %29
  tail call void @Perl_op_clear(ptr noundef nonnull %35)
  %42 = load i16, ptr %36, align 8
  %43 = and i16 %42, 511
  %44 = zext i16 %43 to i64
  %45 = getelementptr inbounds %struct.op, ptr %35, i64 0, i32 3
  store i64 %44, ptr %45, align 8, !tbaa !34
  %46 = and i16 %42, -512
  store i16 %46, ptr %36, align 8
  %47 = load ptr, ptr @PL_ppaddr, align 8, !tbaa !6
  %48 = getelementptr inbounds %struct.op, ptr %35, i64 0, i32 2
  store ptr %47, ptr %48, align 8, !tbaa !78
  %49 = getelementptr inbounds %struct.op, ptr %35, i64 0, i32 1
  %50 = load ptr, ptr %49, align 8, !tbaa !38
  %51 = icmp eq ptr %50, null
  br i1 %51, label %85, label %52

52:                                               ; preds = %41
  %53 = getelementptr inbounds %struct.op, ptr %50, i64 0, i32 4
  %54 = load i16, ptr %53, align 8
  %55 = and i16 %54, 511
  %56 = add nsw i16 %55, -193
  %57 = icmp ult i16 %56, 2
  br i1 %57, label %58, label %85

58:                                               ; preds = %52
  tail call void @Perl_op_null(ptr noundef nonnull %50)
  br label %85

59:                                               ; preds = %24
  %60 = tail call ptr @Perl_Slab_Alloc(i64 noundef 56)
  %61 = getelementptr inbounds %struct.listop, ptr %60, i64 0, i32 4
  %62 = load i16, ptr %61, align 8
  %63 = and i16 %62, -512
  %64 = or i16 %63, 198
  store i16 %64, ptr %61, align 8
  %65 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_ppaddr, i64 0, i64 198), align 8, !tbaa !6
  %66 = getelementptr inbounds %struct.listop, ptr %60, i64 0, i32 2
  store ptr %65, ptr %66, align 8, !tbaa !222
  %67 = getelementptr inbounds %struct.listop, ptr %60, i64 0, i32 5
  store i8 4, ptr %67, align 2, !tbaa !223
  %68 = getelementptr inbounds %struct.listop, ptr %60, i64 0, i32 7
  store ptr %0, ptr %68, align 8, !tbaa !81
  %69 = getelementptr inbounds %struct.listop, ptr %60, i64 0, i32 8
  store ptr %0, ptr %69, align 8, !tbaa !83
  %70 = load i16, ptr %25, align 8
  %71 = and i16 %70, -16385
  store i16 %71, ptr %25, align 8
  %72 = load ptr, ptr %69, align 8, !tbaa !83
  %73 = getelementptr inbounds %struct.op, ptr %72, i64 0, i32 1
  store ptr null, ptr %73, align 8, !tbaa !38
  %74 = load ptr, ptr @PL_op_mask, align 8, !tbaa !6
  %75 = icmp eq ptr %74, null
  br i1 %75, label %82, label %76

76:                                               ; preds = %59
  %77 = getelementptr inbounds i8, ptr %74, i64 198
  %78 = load i8, ptr %77, align 1, !tbaa !13
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %82, label %80

80:                                               ; preds = %76
  tail call void @Perl_op_free(ptr noundef nonnull %60)
  %81 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_op_desc, i64 0, i64 198), align 8, !tbaa !6
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.63, ptr noundef %81) #29
  br label %85

82:                                               ; preds = %76, %59
  %83 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_check, i64 0, i64 198), align 8, !tbaa !6
  %84 = tail call ptr %83(ptr noundef nonnull %60) #29
  br label %85

85:                                               ; preds = %82, %80, %52, %29, %58, %41, %15, %1
  %86 = phi ptr [ %17, %15 ], [ null, %1 ], [ %0, %52 ], [ %0, %29 ], [ %0, %41 ], [ %0, %58 ], [ null, %80 ], [ %84, %82 ]
  ret ptr %86
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_newLISTOP(i32 noundef %0, i32 noundef %1, ptr noundef %2, ptr noundef %3) local_unnamed_addr #4 {
  %5 = tail call ptr @Perl_Slab_Alloc(i64 noundef 56)
  %6 = trunc i32 %0 to i16
  %7 = getelementptr inbounds %struct.listop, ptr %5, i64 0, i32 4
  %8 = load i16, ptr %7, align 8
  %9 = and i16 %6, 511
  %10 = and i16 %8, -512
  %11 = or i16 %10, %9
  store i16 %11, ptr %7, align 8
  %12 = sext i32 %0 to i64
  %13 = getelementptr inbounds [0 x ptr], ptr @PL_ppaddr, i64 0, i64 %12
  %14 = load ptr, ptr %13, align 8, !tbaa !6
  %15 = getelementptr inbounds %struct.listop, ptr %5, i64 0, i32 2
  store ptr %14, ptr %15, align 8, !tbaa !222
  %16 = icmp ne ptr %2, null
  %17 = icmp ne ptr %3, null
  %18 = or i1 %16, %17
  %19 = or i32 %1, 4
  %20 = select i1 %18, i32 %19, i32 %1
  %21 = trunc i32 %20 to i8
  %22 = getelementptr inbounds %struct.listop, ptr %5, i64 0, i32 5
  store i8 %21, ptr %22, align 2, !tbaa !223
  %23 = icmp eq ptr %3, null
  %24 = and i1 %16, %23
  br i1 %24, label %36, label %25

25:                                               ; preds = %4
  %26 = icmp eq ptr %2, null
  %27 = and i1 %26, %17
  %28 = xor i1 %16, true
  %29 = or i1 %27, %28
  %30 = select i1 %27, ptr %3, ptr null
  br i1 %29, label %36, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 4
  %33 = load i16, ptr %32, align 8
  %34 = or i16 %33, 16384
  store i16 %34, ptr %32, align 8
  %35 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 1
  store ptr %3, ptr %35, align 8, !tbaa !38
  br label %36

36:                                               ; preds = %25, %4, %31
  %37 = phi ptr [ %3, %31 ], [ %2, %4 ], [ %3, %25 ]
  %38 = phi ptr [ %2, %31 ], [ %2, %4 ], [ %30, %25 ]
  %39 = getelementptr inbounds %struct.listop, ptr %5, i64 0, i32 7
  store ptr %38, ptr %39, align 8, !tbaa !81
  %40 = getelementptr inbounds %struct.listop, ptr %5, i64 0, i32 8
  store ptr %37, ptr %40, align 8, !tbaa !83
  %41 = icmp eq i32 %0, 158
  br i1 %41, label %42, label %54

42:                                               ; preds = %36
  %43 = tail call ptr @Perl_newOP(i32 noundef 3, i32 noundef 0)
  %44 = getelementptr inbounds %struct.op, ptr %43, i64 0, i32 4
  %45 = load i16, ptr %44, align 8
  %46 = or i16 %45, 16384
  store i16 %46, ptr %44, align 8
  %47 = getelementptr inbounds %struct.op, ptr %43, i64 0, i32 1
  store ptr %38, ptr %47, align 8, !tbaa !38
  store ptr %43, ptr %39, align 8, !tbaa !81
  %48 = load i8, ptr %22, align 2, !tbaa !223
  %49 = or i8 %48, 4
  store i8 %49, ptr %22, align 2, !tbaa !223
  %50 = icmp eq ptr %37, null
  br i1 %50, label %51, label %52

51:                                               ; preds = %42
  store ptr %43, ptr %40, align 8, !tbaa !83
  br label %57

52:                                               ; preds = %42
  %53 = load ptr, ptr %40, align 8, !tbaa !83
  br label %54

54:                                               ; preds = %52, %36
  %55 = phi ptr [ %53, %52 ], [ %37, %36 ]
  %56 = icmp eq ptr %55, null
  br i1 %56, label %64, label %57

57:                                               ; preds = %51, %54
  %58 = phi ptr [ %43, %51 ], [ %55, %54 ]
  %59 = getelementptr inbounds %struct.op, ptr %58, i64 0, i32 4
  %60 = load i16, ptr %59, align 8
  %61 = and i16 %60, -16385
  store i16 %61, ptr %59, align 8
  %62 = load ptr, ptr %40, align 8, !tbaa !83
  %63 = getelementptr inbounds %struct.op, ptr %62, i64 0, i32 1
  store ptr null, ptr %63, align 8, !tbaa !38
  br label %64

64:                                               ; preds = %57, %54
  %65 = load ptr, ptr @PL_op_mask, align 8, !tbaa !6
  %66 = icmp eq ptr %65, null
  br i1 %66, label %74, label %67

67:                                               ; preds = %64
  %68 = getelementptr inbounds i8, ptr %65, i64 %12
  %69 = load i8, ptr %68, align 1, !tbaa !13
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %74, label %71

71:                                               ; preds = %67
  tail call void @Perl_op_free(ptr noundef nonnull %5)
  %72 = getelementptr inbounds [0 x ptr], ptr @PL_op_desc, i64 0, i64 %12
  %73 = load ptr, ptr %72, align 8, !tbaa !6
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.63, ptr noundef %73) #29
  br label %78

74:                                               ; preds = %67, %64
  %75 = getelementptr inbounds [0 x ptr], ptr @PL_check, i64 0, i64 %12
  %76 = load ptr, ptr %75, align 8, !tbaa !6
  %77 = tail call ptr %76(ptr noundef nonnull %5) #29
  br label %78

78:                                               ; preds = %74, %71
  %79 = phi ptr [ null, %71 ], [ %77, %74 ]
  ret ptr %79
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_op_unscope(ptr noundef readonly returned %0) local_unnamed_addr #4 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %31, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 4
  %5 = load i16, ptr %4, align 8
  %6 = and i16 %5, 511
  %7 = icmp eq i16 %6, 192
  br i1 %7, label %8, label %31

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.listop, ptr %0, i64 0, i32 7
  %10 = load ptr, ptr %9, align 8, !tbaa !6
  %11 = icmp eq ptr %10, null
  br i1 %11, label %31, label %12

12:                                               ; preds = %8, %27
  %13 = phi ptr [ %29, %27 ], [ %10, %8 ]
  %14 = getelementptr inbounds %struct.op, ptr %13, i64 0, i32 4
  %15 = load i16, ptr %14, align 8
  %16 = and i16 %15, 511
  %17 = add nsw i16 %16, -193
  %18 = icmp ult i16 %17, 2
  br i1 %18, label %19, label %27

19:                                               ; preds = %12
  tail call void @Perl_op_clear(ptr noundef nonnull %13)
  %20 = load i16, ptr %14, align 8
  %21 = and i16 %20, 511
  %22 = zext i16 %21 to i64
  %23 = getelementptr inbounds %struct.op, ptr %13, i64 0, i32 3
  store i64 %22, ptr %23, align 8, !tbaa !34
  %24 = and i16 %20, -512
  store i16 %24, ptr %14, align 8
  %25 = load ptr, ptr @PL_ppaddr, align 8, !tbaa !6
  %26 = getelementptr inbounds %struct.op, ptr %13, i64 0, i32 2
  store ptr %25, ptr %26, align 8, !tbaa !78
  br label %27

27:                                               ; preds = %12, %19
  %28 = getelementptr inbounds %struct.op, ptr %13, i64 0, i32 1
  %29 = load ptr, ptr %28, align 8, !tbaa !6
  %30 = icmp eq ptr %29, null
  br i1 %30, label %31, label %12, !llvm.loop !224

31:                                               ; preds = %27, %8, %3, %1
  ret ptr %0
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @Perl_block_start(i32 noundef %0) local_unnamed_addr #4 {
  %2 = load i32, ptr @PL_savestack_ix, align 4, !tbaa !52
  %3 = load i32, ptr @PL_cop_seqmax, align 4, !tbaa !52
  store i32 %3, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 11), align 4, !tbaa !225
  %4 = add i32 %3, 1
  %5 = icmp eq i32 %4, -1
  %6 = select i1 %5, i32 0, i32 %4
  store i32 %6, ptr @PL_cop_seqmax, align 4, !tbaa !52
  tail call void @Perl_pad_block_start(i32 noundef %0) #29
  tail call void @Perl_save_hints() #29
  %7 = load i32, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 10), align 8, !tbaa !77
  %8 = and i32 %7, -257
  store i32 %8, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 10), align 8, !tbaa !77
  %9 = load ptr, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 12), align 8, !tbaa !44
  tail call void @Perl_save_pushptr(ptr noundef %9, i32 noundef 6) #29
  %10 = load ptr, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 12), align 8
  %11 = ptrtoint ptr %10 to i64
  switch i64 %11, label %12 [
    i64 16, label %16
    i64 8, label %16
    i64 0, label %16
  ]

12:                                               ; preds = %1
  %13 = load i64, ptr %10, align 8, !tbaa !88
  %14 = add i64 %13, 8
  %15 = tail call noalias ptr @malloc(i64 noundef %14) #32
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %15, ptr nonnull align 1 %10, i64 %14, i1 false)
  br label %16

16:                                               ; preds = %1, %1, %1, %12
  %17 = phi ptr [ %15, %12 ], [ %10, %1 ], [ %10, %1 ], [ %10, %1 ]
  store ptr %17, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 12), align 8, !tbaa !44
  tail call void @Perl_save_I32(ptr noundef nonnull getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 11)) #29
  store i32 0, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 11), align 4, !tbaa !225
  %18 = load ptr, ptr @PL_blockhooks, align 8, !tbaa !6
  %19 = icmp eq ptr %18, null
  br i1 %19, label %67, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.sv, ptr %18, i64 0, i32 2
  %22 = load i32, ptr %21, align 4, !tbaa !84
  %23 = and i32 %22, 8388608
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %20
  %26 = tail call i32 @Perl_mg_size(ptr noundef nonnull %18) #29
  %27 = sext i32 %26 to i64
  br label %32

28:                                               ; preds = %20
  %29 = load ptr, ptr %18, align 8, !tbaa !123
  %30 = getelementptr inbounds %struct.xpvav, ptr %29, i64 0, i32 2
  %31 = load i64, ptr %30, align 8, !tbaa !125
  br label %32

32:                                               ; preds = %25, %28
  %33 = phi i64 [ %27, %25 ], [ %31, %28 ]
  %34 = icmp sgt i64 %33, -1
  br i1 %34, label %35, label %67

35:                                               ; preds = %32
  %36 = load ptr, ptr @PL_blockhooks, align 8, !tbaa !6
  br label %37

37:                                               ; preds = %35, %63
  %38 = phi ptr [ %64, %63 ], [ %36, %35 ]
  %39 = phi i64 [ %65, %63 ], [ %33, %35 ]
  %40 = getelementptr inbounds %struct.av, ptr %38, i64 0, i32 3
  %41 = load ptr, ptr %40, align 8, !tbaa !13
  %42 = getelementptr inbounds ptr, ptr %41, i64 %39
  %43 = load ptr, ptr %42, align 8, !tbaa !6
  %44 = getelementptr inbounds %struct.sv, ptr %43, i64 0, i32 2
  %45 = load i32, ptr %44, align 4, !tbaa !84
  %46 = and i32 %45, -2147483392
  %47 = icmp eq i32 %46, -2147483392
  %48 = load ptr, ptr %43, align 8, !tbaa !85
  %49 = getelementptr inbounds %struct.xpvuv, ptr %48, i64 0, i32 4
  %50 = getelementptr inbounds %struct.xpviv, ptr %48, i64 0, i32 4
  %51 = select i1 %47, ptr %49, ptr %50
  %52 = load i64, ptr %51, align 8, !tbaa !13
  %53 = inttoptr i64 %52 to ptr
  %54 = load i32, ptr %53, align 8, !tbaa !226
  %55 = and i32 %54, 1
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %63, label %57

57:                                               ; preds = %37
  %58 = getelementptr inbounds %struct.block_hooks, ptr %53, i64 0, i32 1
  %59 = load ptr, ptr %58, align 8, !tbaa !228
  %60 = icmp eq ptr %59, null
  br i1 %60, label %63, label %61

61:                                               ; preds = %57
  tail call void %59(i32 noundef %0) #29
  %62 = load ptr, ptr @PL_blockhooks, align 8, !tbaa !6
  br label %63

63:                                               ; preds = %37, %61, %57
  %64 = phi ptr [ %38, %37 ], [ %62, %61 ], [ %38, %57 ]
  %65 = add nsw i64 %39, -1
  %66 = icmp sgt i64 %39, 0
  br i1 %66, label %37, label %67, !llvm.loop !229

67:                                               ; preds = %63, %32, %16
  ret i32 %2
}

declare void @Perl_pad_block_start(i32 noundef) local_unnamed_addr #6

declare void @Perl_save_hints() local_unnamed_addr #6

; Function Attrs: mustprogress nofree nounwind willreturn allockind("alloc,uninitialized") allocsize(0) memory(inaccessiblemem: readwrite)
declare noalias noundef ptr @malloc(i64 noundef) local_unnamed_addr #13

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #14

declare void @Perl_save_I32(ptr noundef) local_unnamed_addr #6

declare i32 @Perl_mg_size(ptr noundef) local_unnamed_addr #6

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_block_end(i32 noundef %0, ptr noundef %1) local_unnamed_addr #4 {
  %3 = alloca ptr, align 8
  %4 = load i32, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 10), align 8, !tbaa !77
  %5 = and i32 %4, 256
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #29
  %6 = tail call fastcc ptr @S_scalarseq(ptr noundef %1)
  store ptr %6, ptr %3, align 8, !tbaa !6
  %7 = load ptr, ptr @PL_parser, align 8, !tbaa !6
  %8 = icmp eq ptr %7, null
  br i1 %8, label %73, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.yy_parser, ptr %7, i64 0, i32 58
  %11 = load i8, ptr %10, align 2
  %12 = and i8 %11, 8
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %73, label %14

14:                                               ; preds = %9
  %15 = tail call ptr @Perl_newSTATEOP(i32 noundef 0, ptr noundef null, ptr noundef null)
  %16 = getelementptr inbounds %struct.op, ptr %15, i64 0, i32 4
  %17 = load i16, ptr %16, align 8
  %18 = and i16 %17, 511
  %19 = icmp eq i16 %18, 0
  br i1 %19, label %28, label %20

20:                                               ; preds = %14
  tail call void @Perl_op_clear(ptr noundef nonnull %15)
  %21 = load i16, ptr %16, align 8
  %22 = and i16 %21, 511
  %23 = zext i16 %22 to i64
  %24 = getelementptr inbounds %struct.op, ptr %15, i64 0, i32 3
  store i64 %23, ptr %24, align 8, !tbaa !34
  %25 = and i16 %21, -512
  store i16 %25, ptr %16, align 8
  %26 = load ptr, ptr @PL_ppaddr, align 8, !tbaa !6
  %27 = getelementptr inbounds %struct.op, ptr %15, i64 0, i32 2
  store ptr %26, ptr %27, align 8, !tbaa !78
  br label %28

28:                                               ; preds = %14, %20
  %29 = icmp eq ptr %6, null
  br i1 %29, label %71, label %30

30:                                               ; preds = %28
  %31 = getelementptr inbounds %struct.op, ptr %6, i64 0, i32 4
  %32 = load i16, ptr %31, align 8
  %33 = and i16 %32, 511
  %34 = icmp eq i16 %33, 192
  br i1 %34, label %64, label %35

35:                                               ; preds = %30
  %36 = tail call ptr @Perl_Slab_Alloc(i64 noundef 56)
  %37 = getelementptr inbounds %struct.listop, ptr %36, i64 0, i32 4
  %38 = load i16, ptr %37, align 8
  %39 = and i16 %38, -512
  %40 = or i16 %39, 192
  store i16 %40, ptr %37, align 8
  %41 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_ppaddr, i64 0, i64 192), align 8, !tbaa !6
  %42 = getelementptr inbounds %struct.listop, ptr %36, i64 0, i32 2
  store ptr %41, ptr %42, align 8, !tbaa !222
  %43 = getelementptr inbounds %struct.listop, ptr %36, i64 0, i32 5
  store i8 4, ptr %43, align 2, !tbaa !223
  %44 = load i16, ptr %31, align 8
  %45 = or i16 %44, 16384
  store i16 %45, ptr %31, align 8
  %46 = getelementptr inbounds %struct.op, ptr %6, i64 0, i32 1
  store ptr %15, ptr %46, align 8, !tbaa !38
  %47 = getelementptr inbounds %struct.listop, ptr %36, i64 0, i32 7
  store ptr %6, ptr %47, align 8, !tbaa !81
  %48 = getelementptr inbounds %struct.listop, ptr %36, i64 0, i32 8
  store ptr %15, ptr %48, align 8, !tbaa !83
  %49 = load i16, ptr %16, align 8
  %50 = and i16 %49, -16385
  store i16 %50, ptr %16, align 8
  %51 = load ptr, ptr %48, align 8, !tbaa !83
  %52 = getelementptr inbounds %struct.op, ptr %51, i64 0, i32 1
  store ptr null, ptr %52, align 8, !tbaa !38
  %53 = load ptr, ptr @PL_op_mask, align 8, !tbaa !6
  %54 = icmp eq ptr %53, null
  br i1 %54, label %61, label %55

55:                                               ; preds = %35
  %56 = getelementptr inbounds i8, ptr %53, i64 192
  %57 = load i8, ptr %56, align 1, !tbaa !13
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %61, label %59

59:                                               ; preds = %55
  tail call void @Perl_op_free(ptr noundef nonnull %36)
  %60 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_op_desc, i64 0, i64 192), align 8, !tbaa !6
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.63, ptr noundef %60) #29
  br label %71

61:                                               ; preds = %55, %35
  %62 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_check, i64 0, i64 192), align 8, !tbaa !6
  %63 = tail call ptr %62(ptr noundef nonnull %36) #29
  br label %71

64:                                               ; preds = %30
  %65 = getelementptr inbounds %struct.listop, ptr %6, i64 0, i32 8
  %66 = load ptr, ptr %65, align 8, !tbaa !83
  %67 = tail call ptr @Perl_op_sibling_splice(ptr noundef nonnull %6, ptr noundef %66, i32 noundef 0, ptr noundef nonnull %15)
  %68 = getelementptr inbounds %struct.op, ptr %6, i64 0, i32 5
  %69 = load i8, ptr %68, align 2, !tbaa !35
  %70 = or i8 %69, 4
  store i8 %70, ptr %68, align 2, !tbaa !35
  br label %71

71:                                               ; preds = %61, %59, %28, %64
  %72 = phi ptr [ %6, %64 ], [ %15, %28 ], [ null, %59 ], [ %63, %61 ]
  store ptr %72, ptr %3, align 8, !tbaa !6
  br label %73

73:                                               ; preds = %2, %9, %71
  %74 = load ptr, ptr @PL_blockhooks, align 8, !tbaa !6
  %75 = icmp eq ptr %74, null
  br i1 %75, label %123, label %76

76:                                               ; preds = %73
  %77 = getelementptr inbounds %struct.sv, ptr %74, i64 0, i32 2
  %78 = load i32, ptr %77, align 4, !tbaa !84
  %79 = and i32 %78, 8388608
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %84, label %81

81:                                               ; preds = %76
  %82 = tail call i32 @Perl_mg_size(ptr noundef nonnull %74) #29
  %83 = sext i32 %82 to i64
  br label %88

84:                                               ; preds = %76
  %85 = load ptr, ptr %74, align 8, !tbaa !123
  %86 = getelementptr inbounds %struct.xpvav, ptr %85, i64 0, i32 2
  %87 = load i64, ptr %86, align 8, !tbaa !125
  br label %88

88:                                               ; preds = %81, %84
  %89 = phi i64 [ %83, %81 ], [ %87, %84 ]
  %90 = icmp sgt i64 %89, -1
  br i1 %90, label %91, label %123

91:                                               ; preds = %88
  %92 = load ptr, ptr @PL_blockhooks, align 8, !tbaa !6
  br label %93

93:                                               ; preds = %91, %119
  %94 = phi ptr [ %120, %119 ], [ %92, %91 ]
  %95 = phi i64 [ %121, %119 ], [ %89, %91 ]
  %96 = getelementptr inbounds %struct.av, ptr %94, i64 0, i32 3
  %97 = load ptr, ptr %96, align 8, !tbaa !13
  %98 = getelementptr inbounds ptr, ptr %97, i64 %95
  %99 = load ptr, ptr %98, align 8, !tbaa !6
  %100 = getelementptr inbounds %struct.sv, ptr %99, i64 0, i32 2
  %101 = load i32, ptr %100, align 4, !tbaa !84
  %102 = and i32 %101, -2147483392
  %103 = icmp eq i32 %102, -2147483392
  %104 = load ptr, ptr %99, align 8, !tbaa !85
  %105 = getelementptr inbounds %struct.xpvuv, ptr %104, i64 0, i32 4
  %106 = getelementptr inbounds %struct.xpviv, ptr %104, i64 0, i32 4
  %107 = select i1 %103, ptr %105, ptr %106
  %108 = load i64, ptr %107, align 8, !tbaa !13
  %109 = inttoptr i64 %108 to ptr
  %110 = load i32, ptr %109, align 8, !tbaa !226
  %111 = and i32 %110, 2
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %119, label %113

113:                                              ; preds = %93
  %114 = getelementptr inbounds %struct.block_hooks, ptr %109, i64 0, i32 2
  %115 = load ptr, ptr %114, align 8, !tbaa !230
  %116 = icmp eq ptr %115, null
  br i1 %116, label %119, label %117

117:                                              ; preds = %113
  call void %115(ptr noundef nonnull %3) #29
  %118 = load ptr, ptr @PL_blockhooks, align 8, !tbaa !6
  br label %119

119:                                              ; preds = %93, %117, %113
  %120 = phi ptr [ %94, %93 ], [ %118, %117 ], [ %94, %113 ]
  %121 = add nsw i64 %95, -1
  %122 = icmp sgt i64 %95, 0
  br i1 %122, label %93, label %123, !llvm.loop !231

123:                                              ; preds = %119, %88, %73
  %124 = load i32, ptr @PL_savestack_ix, align 4, !tbaa !52
  %125 = icmp sgt i32 %124, %0
  br i1 %125, label %126, label %127

126:                                              ; preds = %123
  call void @Perl_leave_scope(i32 noundef %0) #29
  br label %127

127:                                              ; preds = %126, %123
  %128 = icmp eq i32 %5, 0
  br i1 %128, label %132, label %129

129:                                              ; preds = %127
  %130 = load i32, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 10), align 8, !tbaa !77
  %131 = or i32 %130, 256
  store i32 %131, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 10), align 8, !tbaa !77
  br label %132

132:                                              ; preds = %129, %127
  %133 = call ptr @Perl_pad_leavemy() #29
  %134 = icmp eq ptr %133, null
  br i1 %134, label %207, label %135

135:                                              ; preds = %132
  %136 = getelementptr inbounds %struct.op, ptr %133, i64 0, i32 5
  %137 = load i8, ptr %136, align 2, !tbaa !35
  %138 = and i8 %137, 4
  %139 = icmp eq i8 %138, 0
  br i1 %139, label %145, label %140

140:                                              ; preds = %135
  %141 = getelementptr inbounds %struct.listop, ptr %133, i64 0, i32 7
  %142 = load ptr, ptr %141, align 8, !tbaa !81
  %143 = getelementptr inbounds %struct.listop, ptr %133, i64 0, i32 8
  %144 = load ptr, ptr %143, align 8, !tbaa !83
  br label %145

145:                                              ; preds = %135, %140
  %146 = phi ptr [ %142, %140 ], [ %133, %135 ]
  %147 = phi ptr [ %144, %140 ], [ %133, %135 ]
  br label %148

148:                                              ; preds = %201, %145
  %149 = phi ptr [ %146, %145 ], [ %203, %201 ]
  %150 = phi ptr [ %133, %145 ], [ %199, %201 ]
  %151 = call ptr @Perl_newOP(i32 noundef 389, i32 noundef 0)
  %152 = getelementptr inbounds %struct.op, ptr %149, i64 0, i32 3
  %153 = load i64, ptr %152, align 8, !tbaa !34
  %154 = getelementptr inbounds %struct.op, ptr %151, i64 0, i32 3
  store i64 %153, ptr %154, align 8, !tbaa !34
  %155 = icmp eq ptr %150, null
  br i1 %155, label %198, label %156

156:                                              ; preds = %148
  %157 = getelementptr inbounds %struct.op, ptr %150, i64 0, i32 4
  %158 = load i16, ptr %157, align 8
  %159 = and i16 %158, 511
  %160 = icmp eq i16 %159, 192
  br i1 %160, label %191, label %161

161:                                              ; preds = %156
  %162 = call ptr @Perl_Slab_Alloc(i64 noundef 56)
  %163 = getelementptr inbounds %struct.listop, ptr %162, i64 0, i32 4
  %164 = load i16, ptr %163, align 8
  %165 = and i16 %164, -512
  %166 = or i16 %165, 192
  store i16 %166, ptr %163, align 8
  %167 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_ppaddr, i64 0, i64 192), align 8, !tbaa !6
  %168 = getelementptr inbounds %struct.listop, ptr %162, i64 0, i32 2
  store ptr %167, ptr %168, align 8, !tbaa !222
  %169 = getelementptr inbounds %struct.listop, ptr %162, i64 0, i32 5
  store i8 4, ptr %169, align 2, !tbaa !223
  %170 = load i16, ptr %157, align 8
  %171 = or i16 %170, 16384
  store i16 %171, ptr %157, align 8
  %172 = getelementptr inbounds %struct.op, ptr %150, i64 0, i32 1
  store ptr %151, ptr %172, align 8, !tbaa !38
  %173 = getelementptr inbounds %struct.listop, ptr %162, i64 0, i32 7
  store ptr %150, ptr %173, align 8, !tbaa !81
  %174 = getelementptr inbounds %struct.listop, ptr %162, i64 0, i32 8
  store ptr %151, ptr %174, align 8, !tbaa !83
  %175 = getelementptr inbounds %struct.op, ptr %151, i64 0, i32 4
  %176 = load i16, ptr %175, align 8
  %177 = and i16 %176, -16385
  store i16 %177, ptr %175, align 8
  %178 = load ptr, ptr %174, align 8, !tbaa !83
  %179 = getelementptr inbounds %struct.op, ptr %178, i64 0, i32 1
  store ptr null, ptr %179, align 8, !tbaa !38
  %180 = load ptr, ptr @PL_op_mask, align 8, !tbaa !6
  %181 = icmp eq ptr %180, null
  br i1 %181, label %188, label %182

182:                                              ; preds = %161
  %183 = getelementptr inbounds i8, ptr %180, i64 192
  %184 = load i8, ptr %183, align 1, !tbaa !13
  %185 = icmp eq i8 %184, 0
  br i1 %185, label %188, label %186

186:                                              ; preds = %182
  call void @Perl_op_free(ptr noundef nonnull %162)
  %187 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_op_desc, i64 0, i64 192), align 8, !tbaa !6
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.63, ptr noundef %187) #29
  br label %198

188:                                              ; preds = %182, %161
  %189 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_check, i64 0, i64 192), align 8, !tbaa !6
  %190 = call ptr %189(ptr noundef nonnull %162) #29
  br label %198

191:                                              ; preds = %156
  %192 = getelementptr inbounds %struct.listop, ptr %150, i64 0, i32 8
  %193 = load ptr, ptr %192, align 8, !tbaa !83
  %194 = call ptr @Perl_op_sibling_splice(ptr noundef nonnull %150, ptr noundef %193, i32 noundef 0, ptr noundef nonnull %151)
  %195 = getelementptr inbounds %struct.op, ptr %150, i64 0, i32 5
  %196 = load i8, ptr %195, align 2, !tbaa !35
  %197 = or i8 %196, 4
  store i8 %197, ptr %195, align 2, !tbaa !35
  br label %198

198:                                              ; preds = %188, %186, %148, %191
  %199 = phi ptr [ %150, %191 ], [ %151, %148 ], [ null, %186 ], [ %190, %188 ]
  %200 = icmp eq ptr %149, %147
  br i1 %200, label %204, label %201

201:                                              ; preds = %198
  %202 = getelementptr inbounds %struct.op, ptr %149, i64 0, i32 1
  %203 = load ptr, ptr %202, align 8, !tbaa !38
  br label %148

204:                                              ; preds = %198
  %205 = load ptr, ptr %3, align 8, !tbaa !6
  %206 = call ptr @Perl_op_prepend_elem(i32 noundef 192, ptr noundef %199, ptr noundef %205)
  store ptr %206, ptr %3, align 8, !tbaa !6
  br label %207

207:                                              ; preds = %132, %204
  %208 = load ptr, ptr @PL_blockhooks, align 8, !tbaa !6
  %209 = icmp eq ptr %208, null
  br i1 %209, label %257, label %210

210:                                              ; preds = %207
  %211 = getelementptr inbounds %struct.sv, ptr %208, i64 0, i32 2
  %212 = load i32, ptr %211, align 4, !tbaa !84
  %213 = and i32 %212, 8388608
  %214 = icmp eq i32 %213, 0
  br i1 %214, label %218, label %215

215:                                              ; preds = %210
  %216 = call i32 @Perl_mg_size(ptr noundef nonnull %208) #29
  %217 = sext i32 %216 to i64
  br label %222

218:                                              ; preds = %210
  %219 = load ptr, ptr %208, align 8, !tbaa !123
  %220 = getelementptr inbounds %struct.xpvav, ptr %219, i64 0, i32 2
  %221 = load i64, ptr %220, align 8, !tbaa !125
  br label %222

222:                                              ; preds = %215, %218
  %223 = phi i64 [ %217, %215 ], [ %221, %218 ]
  %224 = icmp sgt i64 %223, -1
  br i1 %224, label %225, label %257

225:                                              ; preds = %222
  %226 = load ptr, ptr @PL_blockhooks, align 8, !tbaa !6
  br label %227

227:                                              ; preds = %225, %253
  %228 = phi ptr [ %254, %253 ], [ %226, %225 ]
  %229 = phi i64 [ %255, %253 ], [ %223, %225 ]
  %230 = getelementptr inbounds %struct.av, ptr %228, i64 0, i32 3
  %231 = load ptr, ptr %230, align 8, !tbaa !13
  %232 = getelementptr inbounds ptr, ptr %231, i64 %229
  %233 = load ptr, ptr %232, align 8, !tbaa !6
  %234 = getelementptr inbounds %struct.sv, ptr %233, i64 0, i32 2
  %235 = load i32, ptr %234, align 4, !tbaa !84
  %236 = and i32 %235, -2147483392
  %237 = icmp eq i32 %236, -2147483392
  %238 = load ptr, ptr %233, align 8, !tbaa !85
  %239 = getelementptr inbounds %struct.xpvuv, ptr %238, i64 0, i32 4
  %240 = getelementptr inbounds %struct.xpviv, ptr %238, i64 0, i32 4
  %241 = select i1 %237, ptr %239, ptr %240
  %242 = load i64, ptr %241, align 8, !tbaa !13
  %243 = inttoptr i64 %242 to ptr
  %244 = load i32, ptr %243, align 8, !tbaa !226
  %245 = and i32 %244, 4
  %246 = icmp eq i32 %245, 0
  br i1 %246, label %253, label %247

247:                                              ; preds = %227
  %248 = getelementptr inbounds %struct.block_hooks, ptr %243, i64 0, i32 3
  %249 = load ptr, ptr %248, align 8, !tbaa !232
  %250 = icmp eq ptr %249, null
  br i1 %250, label %253, label %251

251:                                              ; preds = %247
  call void %249(ptr noundef nonnull %3) #29
  %252 = load ptr, ptr @PL_blockhooks, align 8, !tbaa !6
  br label %253

253:                                              ; preds = %227, %251, %247
  %254 = phi ptr [ %228, %227 ], [ %252, %251 ], [ %228, %247 ]
  %255 = add nsw i64 %229, -1
  %256 = icmp sgt i64 %229, 0
  br i1 %256, label %227, label %257, !llvm.loop !233

257:                                              ; preds = %253, %222, %207
  %258 = load ptr, ptr %3, align 8, !tbaa !6
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #29
  ret ptr %258
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @S_scalarseq(ptr noundef %0) unnamed_addr #4 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %47, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 4
  %5 = load i16, ptr %4, align 8
  %6 = and i16 %5, 511
  switch i16 %6, label %38 [
    i16 345, label %7
    i16 198, label %7
    i16 197, label %7
    i16 192, label %7
  ]

7:                                                ; preds = %3, %3, %3, %3
  %8 = getelementptr inbounds %struct.listop, ptr %0, i64 0, i32 7
  %9 = load ptr, ptr %8, align 8, !tbaa !81
  %10 = icmp eq ptr %9, null
  br i1 %10, label %37, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.op, ptr %9, i64 0, i32 1
  %13 = load ptr, ptr %12, align 8, !tbaa !38
  %14 = icmp eq ptr %13, null
  br i1 %14, label %37, label %15

15:                                               ; preds = %11, %33
  %16 = phi ptr [ %35, %33 ], [ %13, %11 ]
  %17 = phi ptr [ %16, %33 ], [ %9, %11 ]
  %18 = getelementptr inbounds %struct.op, ptr %16, i64 0, i32 1
  %19 = load ptr, ptr %18, align 8, !tbaa !38
  %20 = icmp eq ptr %19, null
  br i1 %20, label %21, label %31

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.op, ptr %16, i64 0, i32 4
  %23 = load i16, ptr %22, align 8
  %24 = and i16 %23, 511
  %25 = icmp eq i16 %24, 0
  br i1 %25, label %26, label %31

26:                                               ; preds = %21
  %27 = getelementptr inbounds %struct.op, ptr %16, i64 0, i32 3
  %28 = load i64, ptr %27, align 8, !tbaa !34
  %29 = add i64 %28, -193
  %30 = icmp ult i64 %29, 2
  br i1 %30, label %33, label %31

31:                                               ; preds = %26, %15, %21
  %32 = tail call ptr @Perl_scalarvoid(ptr noundef nonnull %17)
  br label %33

33:                                               ; preds = %26, %31
  %34 = getelementptr inbounds %struct.op, ptr %16, i64 0, i32 1
  %35 = load ptr, ptr %34, align 8, !tbaa !38
  %36 = icmp eq ptr %35, null
  br i1 %36, label %37, label %15

37:                                               ; preds = %33, %11, %7
  store ptr @PL_compiling, ptr @PL_curcop, align 8, !tbaa !6
  br label %38

38:                                               ; preds = %3, %37
  %39 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 5
  %40 = load i8, ptr %39, align 2, !tbaa !35
  %41 = and i8 %40, -9
  store i8 %41, ptr %39, align 2, !tbaa !35
  %42 = load i32, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 10), align 8, !tbaa !77
  %43 = and i32 %42, 256
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %49, label %45

45:                                               ; preds = %38
  %46 = or i8 %40, 8
  store i8 %46, ptr %39, align 2, !tbaa !35
  br label %49

47:                                               ; preds = %1
  %48 = tail call ptr @Perl_newOP(i32 noundef 1, i32 noundef 0)
  br label %49

49:                                               ; preds = %38, %45, %47
  %50 = phi ptr [ %48, %47 ], [ %0, %45 ], [ %0, %38 ]
  ret ptr %50
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_newSTATEOP(i32 noundef %0, ptr noundef %1, ptr noundef %2) local_unnamed_addr #4 {
  %4 = tail call i32 @Perl_intro_my() #29
  %5 = and i32 %0, 536870912
  %6 = load ptr, ptr @PL_parser, align 8, !tbaa !6
  %7 = getelementptr inbounds %struct.yy_parser, ptr %6, i64 0, i32 58
  %8 = load i8, ptr %7, align 2
  %9 = and i8 %8, -9
  store i8 %9, ptr %7, align 2
  %10 = tail call ptr @Perl_Slab_Alloc(i64 noundef 80)
  %11 = load i32, ptr @PL_perldb, align 4, !tbaa !52
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %23, label %14

14:                                               ; preds = %3
  %15 = load ptr, ptr @PL_curcop, align 8, !tbaa !6
  %16 = getelementptr inbounds %struct.cop, ptr %15, i64 0, i32 7
  %17 = load i32, ptr %16, align 4, !tbaa !146
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %14
  %20 = load ptr, ptr @PL_curstash, align 8, !tbaa !6
  %21 = load ptr, ptr @PL_debstash, align 8, !tbaa !6
  %22 = icmp eq ptr %20, %21
  br i1 %22, label %23, label %24

23:                                               ; preds = %3, %14, %19
  br label %24

24:                                               ; preds = %19, %23
  %25 = phi i16 [ 193, %23 ], [ 194, %19 ]
  %26 = phi ptr [ getelementptr inbounds ([0 x ptr], ptr @PL_ppaddr, i64 0, i64 193), %23 ], [ getelementptr inbounds ([0 x ptr], ptr @PL_ppaddr, i64 0, i64 194), %19 ]
  %27 = getelementptr inbounds %struct.cop, ptr %10, i64 0, i32 4
  %28 = load i16, ptr %27, align 8
  %29 = and i16 %28, -512
  %30 = or i16 %29, %25
  store i16 %30, ptr %27, align 8
  %31 = load ptr, ptr %26, align 8, !tbaa !6
  %32 = getelementptr inbounds %struct.cop, ptr %10, i64 0, i32 2
  store ptr %31, ptr %32, align 8, !tbaa !234
  %33 = trunc i32 %0 to i8
  %34 = getelementptr inbounds %struct.cop, ptr %10, i64 0, i32 5
  store i8 %33, ptr %34, align 2, !tbaa !235
  %35 = load i32, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 10), align 8, !tbaa !77
  %36 = getelementptr inbounds %struct.cop, ptr %10, i64 0, i32 10
  store i32 %35, ptr %36, align 8, !tbaa !77
  store ptr %10, ptr %10, align 8, !tbaa !236
  %37 = getelementptr inbounds %struct.cop, ptr %10, i64 0, i32 11
  store i32 %4, ptr %37, align 4, !tbaa !225
  %38 = load ptr, ptr @PL_curcop, align 8, !tbaa !6
  %39 = getelementptr inbounds %struct.cop, ptr %38, i64 0, i32 12
  %40 = load ptr, ptr %39, align 8, !tbaa !44
  %41 = ptrtoint ptr %40 to i64
  switch i64 %41, label %42 [
    i64 0, label %46
    i64 8, label %46
    i64 16, label %46
  ]

42:                                               ; preds = %24
  %43 = load i64, ptr %40, align 8, !tbaa !88
  %44 = add i64 %43, 8
  %45 = tail call noalias ptr @malloc(i64 noundef %44) #32
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %45, ptr nonnull align 1 %40, i64 %44, i1 false)
  br label %46

46:                                               ; preds = %24, %24, %24, %42
  %47 = phi ptr [ %45, %42 ], [ %40, %24 ], [ %40, %24 ], [ %40, %24 ]
  %48 = getelementptr inbounds %struct.cop, ptr %10, i64 0, i32 12
  store ptr %47, ptr %48, align 8, !tbaa !44
  %49 = getelementptr inbounds %struct.cop, ptr %38, i64 0, i32 13
  %50 = load ptr, ptr %49, align 8, !tbaa !45
  %51 = tail call ptr @Perl_refcounted_he_inc(ptr noundef %50) #29
  %52 = getelementptr inbounds %struct.cop, ptr %10, i64 0, i32 13
  store ptr %51, ptr %52, align 8, !tbaa !45
  %53 = icmp eq ptr %1, null
  br i1 %53, label %58, label %54

54:                                               ; preds = %46
  %55 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %1) #30
  tail call void @Perl_cop_store_label(ptr noundef nonnull %10, ptr noundef nonnull %1, i64 noundef %55, i32 noundef %5) #29
  %56 = load i32, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 10), align 8, !tbaa !77
  %57 = or i32 %56, 256
  store i32 %57, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 10), align 8, !tbaa !77
  tail call void @Perl_save_pushptr(ptr noundef nonnull %1, i32 noundef 10) #29
  br label %58

58:                                               ; preds = %54, %46
  %59 = load ptr, ptr @PL_parser, align 8, !tbaa !6
  %60 = getelementptr inbounds %struct.yy_parser, ptr %59, i64 0, i32 55
  %61 = load i32, ptr %60, align 4, !tbaa !237
  %62 = icmp eq i32 %61, -1
  br i1 %62, label %66, label %63

63:                                               ; preds = %58
  %64 = getelementptr inbounds %struct.cop, ptr %10, i64 0, i32 7
  store i32 %61, ptr %64, align 4, !tbaa !146
  %65 = getelementptr inbounds %struct.yy_parser, ptr %59, i64 0, i32 41
  store i32 -1, ptr %65, align 8, !tbaa !238
  br label %77

66:                                               ; preds = %58
  %67 = getelementptr inbounds %struct.yy_parser, ptr %59, i64 0, i32 41
  %68 = load i32, ptr %67, align 8, !tbaa !238
  %69 = icmp eq i32 %68, -1
  br i1 %69, label %70, label %75

70:                                               ; preds = %66
  %71 = load ptr, ptr @PL_curcop, align 8, !tbaa !6
  %72 = getelementptr inbounds %struct.cop, ptr %71, i64 0, i32 7
  %73 = load i32, ptr %72, align 4, !tbaa !146
  %74 = getelementptr inbounds %struct.cop, ptr %10, i64 0, i32 7
  store i32 %73, ptr %74, align 4, !tbaa !146
  br label %77

75:                                               ; preds = %66
  %76 = getelementptr inbounds %struct.cop, ptr %10, i64 0, i32 7
  store i32 %68, ptr %76, align 4, !tbaa !146
  store i32 -1, ptr %67, align 8, !tbaa !238
  br label %77

77:                                               ; preds = %70, %75, %63
  %78 = phi i32 [ %73, %70 ], [ %68, %75 ], [ %61, %63 ]
  %79 = load ptr, ptr @PL_curcop, align 8, !tbaa !6
  %80 = getelementptr inbounds %struct.cop, ptr %79, i64 0, i32 9
  %81 = load ptr, ptr %80, align 8, !tbaa !40
  %82 = icmp eq ptr %81, null
  br i1 %82, label %87, label %83

83:                                               ; preds = %77
  %84 = getelementptr inbounds %struct.sv, ptr %81, i64 0, i32 1
  %85 = load i32, ptr %84, align 8, !tbaa !42
  %86 = add i32 %85, 1
  store i32 %86, ptr %84, align 8, !tbaa !42
  br label %87

87:                                               ; preds = %77, %83
  %88 = getelementptr inbounds %struct.cop, ptr %10, i64 0, i32 9
  store ptr %81, ptr %88, align 8, !tbaa !40
  %89 = load ptr, ptr @PL_curstash, align 8, !tbaa !6
  %90 = getelementptr inbounds %struct.cop, ptr %10, i64 0, i32 8
  store ptr %89, ptr %90, align 8, !tbaa !239
  %91 = getelementptr inbounds %struct.cop, ptr %10, i64 0, i32 4
  %92 = load i16, ptr %91, align 8
  %93 = and i16 %92, 511
  %94 = icmp eq i16 %93, 194
  br i1 %94, label %95, label %116

95:                                               ; preds = %87
  %96 = load ptr, ptr %80, align 8, !tbaa !40
  %97 = getelementptr inbounds %struct.gv, ptr %96, i64 0, i32 3
  %98 = load ptr, ptr %97, align 8, !tbaa !13
  %99 = getelementptr inbounds %struct.gp, ptr %98, i64 0, i32 6
  %100 = load ptr, ptr %99, align 8, !tbaa !240
  %101 = icmp eq ptr %100, null
  br i1 %101, label %116, label %102

102:                                              ; preds = %95
  %103 = zext i32 %78 to i64
  %104 = tail call ptr @Perl_av_fetch(ptr noundef nonnull %100, i64 noundef %103, i32 noundef 0) #29
  %105 = icmp eq ptr %104, null
  br i1 %105, label %116, label %106

106:                                              ; preds = %102
  %107 = load ptr, ptr %104, align 8, !tbaa !6
  %108 = icmp eq ptr %107, @PL_sv_undef
  br i1 %108, label %116, label %109

109:                                              ; preds = %106
  %110 = getelementptr inbounds %struct.sv, ptr %107, i64 0, i32 2
  %111 = load i32, ptr %110, align 4, !tbaa !84
  %112 = or i32 %111, 4352
  store i32 %112, ptr %110, align 4, !tbaa !84
  %113 = ptrtoint ptr %10 to i64
  %114 = load ptr, ptr %107, align 8, !tbaa !85
  %115 = getelementptr inbounds %struct.xpviv, ptr %114, i64 0, i32 4
  store i64 %113, ptr %115, align 8, !tbaa !13
  br label %116

116:                                              ; preds = %95, %109, %106, %102, %87
  %117 = and i32 %0, 128
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %131, label %119

119:                                              ; preds = %116
  %120 = load i16, ptr %91, align 8
  %121 = and i16 %120, 511
  %122 = icmp eq i16 %121, 0
  br i1 %122, label %131, label %123

123:                                              ; preds = %119
  tail call void @Perl_op_clear(ptr noundef nonnull %10)
  %124 = load i16, ptr %91, align 8
  %125 = and i16 %124, 511
  %126 = zext i16 %125 to i64
  %127 = getelementptr inbounds %struct.op, ptr %10, i64 0, i32 3
  store i64 %126, ptr %127, align 8, !tbaa !34
  %128 = and i16 %124, -512
  store i16 %128, ptr %91, align 8
  %129 = load ptr, ptr @PL_ppaddr, align 8, !tbaa !6
  %130 = getelementptr inbounds %struct.op, ptr %10, i64 0, i32 2
  store ptr %129, ptr %130, align 8, !tbaa !78
  br label %131

131:                                              ; preds = %123, %119, %116
  %132 = tail call ptr @Perl_op_prepend_elem(i32 noundef 192, ptr noundef nonnull %10, ptr noundef %2)
  ret ptr %132
}

declare void @Perl_leave_scope(i32 noundef) local_unnamed_addr #6

declare ptr @Perl_pad_leavemy() local_unnamed_addr #6

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_blockhook_register(ptr noundef %0) local_unnamed_addr #4 {
  %2 = ptrtoint ptr %0 to i64
  %3 = tail call ptr @Perl_newSViv(i64 noundef %2) #29
  tail call void @Perl_av_create_and_push(ptr noundef nonnull @PL_blockhooks, ptr noundef %3) #29
  ret void
}

declare void @Perl_av_create_and_push(ptr noundef, ptr noundef) local_unnamed_addr #6

declare ptr @Perl_newSViv(i64 noundef) local_unnamed_addr #6

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_newPROG(ptr noundef %0) local_unnamed_addr #4 {
  %2 = load i8, ptr @PL_in_eval, align 1, !tbaa !13
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %53, label %4

4:                                                ; preds = %1
  %5 = load ptr, ptr @PL_eval_root, align 8, !tbaa !6
  %6 = icmp eq ptr %5, null
  br i1 %6, label %7, label %148

7:                                                ; preds = %4
  %8 = shl i8 %2, 5
  %9 = and i8 %8, -128
  %10 = zext i8 %9 to i32
  %11 = tail call ptr @Perl_newUNOP(i32 noundef 343, i32 noundef %10, ptr noundef %0)
  store ptr %11, ptr @PL_eval_root, align 8, !tbaa !6
  %12 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %13 = getelementptr inbounds %struct.stackinfo, ptr %12, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !241
  %15 = getelementptr inbounds %struct.stackinfo, ptr %12, i64 0, i32 4
  %16 = load i32, ptr %15, align 8, !tbaa !243
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds %struct.context, ptr %14, i64 %17, i32 0, i32 0, i32 1
  %19 = load i8, ptr %18, align 1, !tbaa !13
  %20 = and i8 %19, 3
  switch i8 %20, label %25 [
    i8 1, label %21
    i8 3, label %23
  ]

21:                                               ; preds = %7
  %22 = tail call ptr @Perl_scalarvoid(ptr noundef %11)
  br label %27

23:                                               ; preds = %7
  %24 = tail call ptr @Perl_list(ptr noundef %11)
  br label %27

25:                                               ; preds = %7
  %26 = tail call ptr @Perl_scalar(ptr noundef %11)
  br label %27

27:                                               ; preds = %23, %25, %21
  %28 = load ptr, ptr @PL_eval_root, align 8, !tbaa !6
  %29 = tail call ptr @Perl_op_linklist(ptr noundef %28)
  store ptr %29, ptr @PL_eval_start, align 8, !tbaa !6
  %30 = load ptr, ptr @PL_eval_root, align 8, !tbaa !6
  %31 = getelementptr inbounds %struct.op, ptr %30, i64 0, i32 6
  %32 = load i8, ptr %31, align 1, !tbaa !33
  %33 = or i8 %32, 64
  store i8 %33, ptr %31, align 1, !tbaa !33
  %34 = getelementptr inbounds %struct.op, ptr %30, i64 0, i32 3
  store i64 1, ptr %34, align 8, !tbaa !34
  store ptr null, ptr %30, align 8, !tbaa !25
  %35 = load i32, ptr @PL_savestack_ix, align 4, !tbaa !52
  %36 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 4
  %37 = load i16, ptr %36, align 8
  %38 = or i16 %37, 2048
  store i16 %38, ptr %36, align 8
  tail call void @Perl_save_pushptr(ptr noundef %0, i32 noundef 9) #29
  tail call void @Perl_push_scope() #29
  %39 = load ptr, ptr @PL_peepp, align 8, !tbaa !6
  %40 = load ptr, ptr @PL_eval_start, align 8, !tbaa !6
  tail call void %39(ptr noundef %40) #29
  %41 = load ptr, ptr @PL_eval_root, align 8, !tbaa !6
  tail call void @Perl_push_scope() #29
  tail call void @Perl_save_vptr(ptr noundef nonnull @PL_curcop) #29
  tail call fastcc void @S_finalize_op(ptr noundef %41)
  tail call void @Perl_pop_scope() #29
  %42 = load ptr, ptr @PL_eval_start, align 8, !tbaa !6
  %43 = icmp eq ptr %42, null
  br i1 %43, label %52, label %44

44:                                               ; preds = %27, %49
  %45 = phi ptr [ %50, %49 ], [ %42, %27 ]
  %46 = getelementptr inbounds %struct.op, ptr %45, i64 0, i32 4
  %47 = load i16, ptr %46, align 8
  %48 = and i16 %47, 511
  switch i16 %48, label %52 [
    i16 0, label %49
    i16 198, label %49
    i16 2, label %49
    i16 192, label %49
  ]

49:                                               ; preds = %44, %44, %44, %44
  %50 = load ptr, ptr %45, align 8, !tbaa !25
  store ptr %50, ptr @PL_eval_start, align 8, !tbaa !6
  %51 = icmp eq ptr %50, null
  br i1 %51, label %52, label %44, !llvm.loop !122

52:                                               ; preds = %44, %49, %27
  tail call void @Perl_pop_scope() #29
  store i32 %35, ptr @PL_savestack_ix, align 4, !tbaa !52
  br label %148

53:                                               ; preds = %1
  %54 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 4
  %55 = load i16, ptr %54, align 8
  %56 = and i16 %55, 511
  %57 = icmp eq i16 %56, 1
  br i1 %57, label %58, label %82

58:                                               ; preds = %53
  store ptr null, ptr @PL_comppad_name, align 8, !tbaa !6
  store ptr null, ptr @PL_compcv, align 8, !tbaa !6
  %59 = and i16 %55, 1024
  %60 = icmp eq i16 %59, 0
  br i1 %60, label %61, label %65

61:                                               ; preds = %58
  %62 = and i16 %55, 4096
  %63 = icmp eq i16 %62, 0
  br i1 %63, label %64, label %148

64:                                               ; preds = %61
  tail call void @free(ptr noundef nonnull %0) #29
  br label %148

65:                                               ; preds = %58
  %66 = getelementptr inbounds i8, ptr %0, i64 -8
  %67 = load ptr, ptr %66, align 8, !tbaa !27
  %68 = and i16 %55, -512
  %69 = or i16 %68, 396
  store i16 %69, ptr %54, align 8
  %70 = getelementptr inbounds %struct.opslab, ptr %67, i64 0, i32 2
  %71 = load ptr, ptr %70, align 8, !tbaa !28
  store ptr %71, ptr %0, align 8, !tbaa !25
  store ptr %0, ptr %70, align 8, !tbaa !28
  %72 = getelementptr inbounds %struct.opslab, ptr %67, i64 0, i32 3
  %73 = load i64, ptr %72, align 8, !tbaa !21
  %74 = icmp eq i64 %73, 1
  br i1 %74, label %75, label %80

75:                                               ; preds = %65, %75
  %76 = phi ptr [ %78, %75 ], [ %67, %65 ]
  %77 = getelementptr inbounds %struct.opslab, ptr %76, i64 0, i32 1
  %78 = load ptr, ptr %77, align 8, !tbaa !26
  tail call void @free(ptr noundef nonnull %76) #29
  %79 = icmp eq ptr %78, null
  br i1 %79, label %148, label %75, !llvm.loop !30

80:                                               ; preds = %65
  %81 = add i64 %73, -1
  store i64 %81, ptr %72, align 8, !tbaa !21
  br label %148

82:                                               ; preds = %53
  %83 = tail call ptr @Perl_scalarvoid(ptr noundef nonnull %0)
  %84 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 5
  %85 = load i8, ptr %84, align 2, !tbaa !35
  %86 = or i8 %85, 8
  store i8 %86, ptr %84, align 2, !tbaa !35
  %87 = tail call ptr @Perl_op_scope(ptr noundef nonnull %0)
  store ptr %87, ptr @PL_main_root, align 8, !tbaa !6
  store ptr @PL_compiling, ptr @PL_curcop, align 8, !tbaa !6
  %88 = load ptr, ptr %87, align 8, !tbaa !25
  %89 = icmp eq ptr %88, null
  br i1 %89, label %90, label %93

90:                                               ; preds = %82
  %91 = tail call ptr @Perl_op_linklist(ptr noundef nonnull %87)
  %92 = load ptr, ptr @PL_main_root, align 8, !tbaa !6
  br label %93

93:                                               ; preds = %82, %90
  %94 = phi ptr [ %92, %90 ], [ %87, %82 ]
  %95 = phi ptr [ %91, %90 ], [ %88, %82 ]
  store ptr %95, ptr @PL_main_start, align 8, !tbaa !6
  %96 = getelementptr inbounds %struct.op, ptr %94, i64 0, i32 6
  %97 = load i8, ptr %96, align 1, !tbaa !33
  %98 = or i8 %97, 64
  store i8 %98, ptr %96, align 1, !tbaa !33
  %99 = getelementptr inbounds %struct.op, ptr %94, i64 0, i32 3
  store i64 1, ptr %99, align 8, !tbaa !34
  store ptr null, ptr %94, align 8, !tbaa !25
  %100 = load ptr, ptr @PL_peepp, align 8, !tbaa !6
  %101 = load ptr, ptr @PL_main_start, align 8, !tbaa !6
  tail call void %100(ptr noundef %101) #29
  %102 = load ptr, ptr @PL_main_root, align 8, !tbaa !6
  tail call void @Perl_push_scope() #29
  tail call void @Perl_save_vptr(ptr noundef nonnull @PL_curcop) #29
  tail call fastcc void @S_finalize_op(ptr noundef %102)
  tail call void @Perl_pop_scope() #29
  %103 = load ptr, ptr @PL_main_start, align 8, !tbaa !6
  %104 = icmp eq ptr %103, null
  br i1 %104, label %113, label %105

105:                                              ; preds = %93, %110
  %106 = phi ptr [ %111, %110 ], [ %103, %93 ]
  %107 = getelementptr inbounds %struct.op, ptr %106, i64 0, i32 4
  %108 = load i16, ptr %107, align 8
  %109 = and i16 %108, 511
  switch i16 %109, label %113 [
    i16 0, label %110
    i16 198, label %110
    i16 2, label %110
    i16 192, label %110
  ]

110:                                              ; preds = %105, %105, %105, %105
  %111 = load ptr, ptr %106, align 8, !tbaa !25
  store ptr %111, ptr @PL_main_start, align 8, !tbaa !6
  %112 = icmp eq ptr %111, null
  br i1 %112, label %113, label %105, !llvm.loop !122

113:                                              ; preds = %105, %110, %93
  %114 = load ptr, ptr @PL_compcv, align 8, !tbaa !6
  tail call void @Perl_cv_forget_slab(ptr noundef %114) #29
  store ptr null, ptr @PL_compcv, align 8, !tbaa !6
  %115 = load i32, ptr @PL_perldb, align 4, !tbaa !52
  %116 = and i32 %115, 8
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %148, label %118

118:                                              ; preds = %113
  %119 = tail call ptr @Perl_get_cvn_flags(ptr noundef nonnull @.str.58, i64 noundef 13, i32 noundef 0) #29
  %120 = icmp eq ptr %119, null
  br i1 %120, label %148, label %121

121:                                              ; preds = %118
  %122 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !6
  %123 = load ptr, ptr @PL_markstack_ptr, align 8, !tbaa !6
  %124 = getelementptr inbounds i32, ptr %123, i64 1
  store ptr %124, ptr @PL_markstack_ptr, align 8, !tbaa !6
  %125 = load ptr, ptr @PL_markstack_max, align 8, !tbaa !6
  %126 = icmp eq ptr %124, %125
  br i1 %126, label %127, label %129

127:                                              ; preds = %121
  %128 = tail call ptr @Perl_markstack_grow() #29
  br label %129

129:                                              ; preds = %121, %127
  %130 = phi ptr [ %128, %127 ], [ %124, %121 ]
  %131 = load ptr, ptr @PL_stack_base, align 8, !tbaa !6
  %132 = ptrtoint ptr %122 to i64
  %133 = ptrtoint ptr %131 to i64
  %134 = sub i64 %132, %133
  %135 = lshr exact i64 %134, 3
  %136 = trunc i64 %135 to i32
  store i32 %136, ptr %130, align 4, !tbaa !52
  %137 = load ptr, ptr @PL_stack_max, align 8, !tbaa !6
  %138 = ptrtoint ptr %137 to i64
  %139 = sub i64 %138, %132
  %140 = icmp slt i64 %139, 8
  br i1 %140, label %141, label %143

141:                                              ; preds = %129
  %142 = tail call ptr @Perl_stack_grow(ptr noundef %122, ptr noundef %122, i64 noundef 1) #29
  br label %143

143:                                              ; preds = %129, %141
  %144 = phi ptr [ %142, %141 ], [ %122, %129 ]
  %145 = load ptr, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 9), align 8, !tbaa !40
  %146 = getelementptr inbounds ptr, ptr %144, i64 1
  store ptr %145, ptr %146, align 8, !tbaa !6
  store ptr %146, ptr @PL_stack_sp, align 8, !tbaa !6
  %147 = tail call i32 @Perl_call_sv(ptr noundef nonnull %119, i32 noundef 4) #29
  br label %148

148:                                              ; preds = %75, %80, %64, %61, %118, %143, %52, %4, %113
  ret void
}

declare void @Perl_cv_forget_slab(ptr noundef) local_unnamed_addr #6

declare ptr @Perl_get_cvn_flags(ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #6

declare ptr @Perl_markstack_grow() local_unnamed_addr #6

declare ptr @Perl_stack_grow(ptr noundef, ptr noundef, i64 noundef) local_unnamed_addr #6

declare i32 @Perl_call_sv(ptr noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_localize(ptr noundef %0, i32 noundef %1) local_unnamed_addr #4 {
  %3 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 5
  %4 = load i8, ptr %3, align 2, !tbaa !35
  %5 = and i8 %4, 8
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %107

7:                                                ; preds = %2
  %8 = load ptr, ptr @PL_parser, align 8, !tbaa !6
  %9 = getelementptr inbounds %struct.yy_parser, ptr %8, i64 0, i32 34
  %10 = load ptr, ptr %9, align 8, !tbaa !244
  %11 = getelementptr inbounds %struct.yy_parser, ptr %8, i64 0, i32 35
  %12 = load ptr, ptr %11, align 8, !tbaa !245
  %13 = icmp ugt ptr %10, %12
  br i1 %13, label %14, label %107

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, ptr %10, i64 -1
  %16 = load i8, ptr %15, align 1, !tbaa !13
  %17 = icmp eq i8 %16, 44
  br i1 %17, label %18, label %107

18:                                               ; preds = %14
  %19 = tail call zeroext i1 @Perl_ckwarn(i32 noundef 32) #29
  br i1 %19, label %20, label %107

20:                                               ; preds = %18
  %21 = load ptr, ptr @PL_parser, align 8, !tbaa !6
  %22 = getelementptr inbounds %struct.yy_parser, ptr %21, i64 0, i32 34
  %23 = load ptr, ptr %22, align 8, !tbaa !244
  %24 = load i8, ptr %23, align 1, !tbaa !13
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %107, label %26

26:                                               ; preds = %20, %39
  %27 = phi i8 [ %41, %39 ], [ %24, %20 ]
  %28 = phi ptr [ %40, %39 ], [ %23, %20 ]
  %29 = zext i8 %27 to i64
  %30 = icmp ugt i8 %27, 63
  %31 = shl nuw i64 1, %29
  %32 = and i64 %31, 17596481013249
  %33 = icmp eq i64 %32, 0
  %34 = select i1 %30, i1 true, i1 %33
  br i1 %34, label %35, label %39

35:                                               ; preds = %26
  %36 = sext i8 %27 to i32
  %37 = tail call ptr @memchr(ptr nonnull dereferenceable(1) @.str.60, i32 %36, i64 5)
  %38 = icmp eq ptr %37, null
  br i1 %38, label %92, label %47

39:                                               ; preds = %26
  %40 = getelementptr inbounds i8, ptr %28, i64 1
  %41 = load i8, ptr %40, align 1, !tbaa !13
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %107, label %26, !llvm.loop !246

43:                                               ; preds = %79
  %44 = sext i8 %80 to i32
  %45 = tail call ptr @memchr(ptr nonnull dereferenceable(1) @.str.60, i32 %44, i64 5)
  %46 = icmp eq ptr %45, null
  br i1 %46, label %92, label %47

47:                                               ; preds = %35, %43
  %48 = phi ptr [ %81, %43 ], [ %28, %35 ]
  %49 = phi i1 [ true, %43 ], [ false, %35 ]
  %50 = getelementptr inbounds i8, ptr %48, i64 1
  %51 = load i8, ptr %50, align 1, !tbaa !13
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %92, label %53

53:                                               ; preds = %47
  %54 = zext i8 %51 to i64
  %55 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %54
  %56 = load i32, ptr %55, align 4, !tbaa !52
  %57 = and i32 %56, 16385
  %58 = icmp ne i32 %57, 16385
  %59 = icmp sgt i8 %51, -1
  %60 = and i1 %59, %58
  br i1 %60, label %92, label %61

61:                                               ; preds = %53
  %62 = getelementptr inbounds i8, ptr %48, i64 2
  %63 = load i8, ptr %62, align 1, !tbaa !13
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %107, label %65

65:                                               ; preds = %61, %75
  %66 = phi i8 [ %77, %75 ], [ %63, %61 ]
  %67 = phi ptr [ %76, %75 ], [ %62, %61 ]
  %68 = zext i8 %66 to i64
  %69 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %68
  %70 = load i32, ptr %69, align 4, !tbaa !52
  %71 = and i32 %70, 16385
  %72 = icmp ne i32 %71, 16385
  %73 = icmp sgt i8 %66, -1
  %74 = and i1 %73, %72
  br i1 %74, label %79, label %75

75:                                               ; preds = %65
  %76 = getelementptr inbounds i8, ptr %67, i64 1
  %77 = load i8, ptr %76, align 1, !tbaa !13
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %107, label %65, !llvm.loop !247

79:                                               ; preds = %65, %88
  %80 = phi i8 [ %90, %88 ], [ %66, %65 ]
  %81 = phi ptr [ %89, %88 ], [ %67, %65 ]
  %82 = zext i8 %80 to i64
  %83 = icmp ugt i8 %80, 63
  %84 = shl nuw i64 1, %82
  %85 = and i64 %84, 17596481013249
  %86 = icmp eq i64 %85, 0
  %87 = select i1 %83, i1 true, i1 %86
  br i1 %87, label %43, label %88

88:                                               ; preds = %79
  %89 = getelementptr inbounds i8, ptr %81, i64 1
  %90 = load i8, ptr %89, align 1, !tbaa !13
  %91 = icmp eq i8 %90, 0
  br i1 %91, label %107, label %79, !llvm.loop !248

92:                                               ; preds = %53, %47, %43, %35
  %93 = phi i1 [ false, %35 ], [ %49, %53 ], [ %49, %47 ], [ true, %43 ]
  %94 = phi i8 [ %27, %35 ], [ %51, %53 ], [ 0, %47 ], [ %80, %43 ]
  br i1 %93, label %95, label %107

95:                                               ; preds = %92
  switch i8 %94, label %107 [
    i8 59, label %96
    i8 61, label %96
  ]

96:                                               ; preds = %95, %95
  %97 = icmp eq i32 %1, 0
  br i1 %97, label %105, label %98

98:                                               ; preds = %96
  %99 = getelementptr inbounds %struct.yy_parser, ptr %21, i64 0, i32 42
  %100 = load i16, ptr %99, align 4, !tbaa !47
  %101 = icmp eq i16 %100, 143
  br i1 %101, label %105, label %102

102:                                              ; preds = %98
  %103 = icmp eq i16 %100, 212
  %104 = select i1 %103, ptr @.str.3, ptr @.str.4
  br label %105

105:                                              ; preds = %96, %102, %98
  %106 = phi ptr [ %104, %102 ], [ @.str.49, %98 ], [ @.str.38, %96 ]
  tail call void (i32, ptr, ...) @Perl_warner(i32 noundef 32, ptr noundef nonnull @.str.61, ptr noundef nonnull %106) #29
  br label %107

107:                                              ; preds = %39, %61, %75, %88, %20, %92, %105, %95, %7, %14, %18, %2
  %108 = icmp eq i32 %1, 0
  br i1 %108, label %111, label %109

109:                                              ; preds = %107
  %110 = tail call ptr @Perl_my_attrs(ptr noundef %0, ptr noundef null)
  br label %113

111:                                              ; preds = %107
  %112 = tail call ptr @Perl_op_lvalue_flags(ptr noundef %0, i32 noundef 0, i32 noundef 0)
  br label %113

113:                                              ; preds = %111, %109
  %114 = phi ptr [ %110, %109 ], [ %112, %111 ]
  %115 = load ptr, ptr @PL_parser, align 8, !tbaa !6
  %116 = getelementptr inbounds %struct.yy_parser, ptr %115, i64 0, i32 42
  store i16 0, ptr %116, align 4, !tbaa !47
  %117 = getelementptr inbounds %struct.yy_parser, ptr %115, i64 0, i32 45
  store ptr null, ptr %117, align 8, !tbaa !53
  ret ptr %114
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_jmaybe(ptr noundef %0) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 4
  %3 = load i16, ptr %2, align 8
  %4 = and i16 %3, 511
  %5 = icmp eq i16 %4, 158
  br i1 %5, label %6, label %50

6:                                                ; preds = %1
  %7 = tail call ptr @Perl_gv_fetchpvn_flags(ptr noundef nonnull @.str.62, i64 noundef 1, i32 noundef 129, i32 noundef 3) #29
  %8 = getelementptr inbounds %struct.gv, ptr %7, i64 0, i32 1
  %9 = load i32, ptr %8, align 8, !tbaa !74
  %10 = add i32 %9, 1
  store i32 %10, ptr %8, align 8, !tbaa !74
  %11 = tail call ptr @Perl_newSVOP(i32 noundef 7, i32 noundef 0, ptr noundef %7)
  %12 = getelementptr inbounds %struct.op, ptr %11, i64 0, i32 4
  %13 = load i16, ptr %12, align 8
  %14 = and i16 %13, 511
  %15 = icmp eq i16 %14, 12
  br i1 %15, label %16, label %22

16:                                               ; preds = %6
  %17 = and i16 %13, -512
  %18 = or i16 %17, 9
  store i16 %18, ptr %12, align 8
  %19 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_ppaddr, i64 0, i64 9), align 8, !tbaa !6
  %20 = getelementptr inbounds %struct.op, ptr %11, i64 0, i32 2
  store ptr %19, ptr %20, align 8, !tbaa !78
  %21 = tail call ptr @Perl_scalar(ptr noundef nonnull %11)
  br label %26

22:                                               ; preds = %6
  %23 = tail call ptr @Perl_scalar(ptr noundef nonnull %11)
  %24 = tail call ptr @Perl_newUNOP(i32 noundef 15, i32 noundef 0, ptr noundef nonnull %11)
  %25 = icmp eq ptr %24, null
  br i1 %25, label %47, label %26

26:                                               ; preds = %22, %16
  %27 = phi ptr [ %11, %16 ], [ %24, %22 ]
  %28 = load i16, ptr %2, align 8
  %29 = and i16 %28, 511
  %30 = icmp eq i16 %29, 158
  br i1 %30, label %31, label %45

31:                                               ; preds = %26
  %32 = getelementptr inbounds %struct.listop, ptr %0, i64 0, i32 7
  %33 = load ptr, ptr %32, align 8, !tbaa !6
  %34 = tail call ptr @Perl_op_sibling_splice(ptr noundef nonnull %0, ptr noundef %33, i32 noundef 0, ptr noundef nonnull %27)
  %35 = getelementptr inbounds %struct.op, ptr %27, i64 0, i32 5
  %36 = load i8, ptr %35, align 2, !tbaa !35
  %37 = and i8 %36, 8
  %38 = icmp eq i8 %37, 0
  %39 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 5
  %40 = load i8, ptr %39, align 2, !tbaa !35
  %41 = and i8 %40, -13
  %42 = select i1 %38, i8 %41, i8 %40
  %43 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 5
  %44 = or i8 %42, 4
  store i8 %44, ptr %43, align 2, !tbaa !35
  br label %47

45:                                               ; preds = %26
  %46 = tail call ptr @Perl_newLISTOP(i32 noundef 158, i32 noundef 0, ptr noundef nonnull %27, ptr noundef nonnull %0)
  br label %47

47:                                               ; preds = %22, %31, %45
  %48 = phi ptr [ %0, %31 ], [ %46, %45 ], [ %0, %22 ]
  %49 = tail call ptr @Perl_op_convert_list(i32 noundef 157, i32 noundef 0, ptr noundef %48)
  br label %50

50:                                               ; preds = %47, %1
  %51 = phi ptr [ %49, %47 ], [ %0, %1 ]
  ret ptr %51
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_newSVREF(ptr noundef %0) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 4
  %3 = load i16, ptr %2, align 8
  %4 = and i16 %3, 511
  %5 = icmp eq i16 %4, 12
  br i1 %5, label %6, label %12

6:                                                ; preds = %1
  %7 = and i16 %3, -512
  %8 = or i16 %7, 9
  store i16 %8, ptr %2, align 8
  %9 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_ppaddr, i64 0, i64 9), align 8, !tbaa !6
  %10 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 2
  store ptr %9, ptr %10, align 8, !tbaa !78
  %11 = tail call ptr @Perl_scalar(ptr noundef nonnull %0)
  br label %15

12:                                               ; preds = %1
  %13 = tail call ptr @Perl_scalar(ptr noundef nonnull %0)
  %14 = tail call ptr @Perl_newUNOP(i32 noundef 15, i32 noundef 0, ptr noundef nonnull %0)
  br label %15

15:                                               ; preds = %12, %6
  %16 = phi ptr [ %0, %6 ], [ %14, %12 ]
  ret ptr %16
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_newGVOP(i32 noundef %0, i32 noundef %1, ptr noundef %2) local_unnamed_addr #4 {
  %4 = getelementptr inbounds %struct.gv, ptr %2, i64 0, i32 1
  %5 = load i32, ptr %4, align 8, !tbaa !74
  %6 = add i32 %5, 1
  store i32 %6, ptr %4, align 8, !tbaa !74
  %7 = tail call ptr @Perl_newSVOP(i32 noundef %0, i32 noundef %1, ptr noundef %2)
  ret ptr %7
}

declare ptr @Perl_gv_fetchpvn_flags(ptr noundef, i64 noundef, i32 noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @S_force_list(ptr noundef %0, i1 noundef zeroext %1) unnamed_addr #4 {
  %3 = icmp eq ptr %0, null
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 4
  %6 = load i16, ptr %5, align 8
  %7 = and i16 %6, 511
  %8 = icmp eq i16 %7, 158
  br i1 %8, label %21, label %11

9:                                                ; preds = %2
  %10 = tail call ptr @Perl_newLISTOP(i32 noundef 158, i32 noundef 0, ptr noundef null, ptr noundef null)
  br label %21

11:                                               ; preds = %4
  %12 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 1
  %13 = load ptr, ptr %12, align 8, !tbaa !38
  %14 = and i16 %6, -16385
  store i16 %14, ptr %5, align 8
  store ptr null, ptr %12, align 8, !tbaa !38
  %15 = tail call ptr @Perl_newLISTOP(i32 noundef 158, i32 noundef 0, ptr noundef nonnull %0, ptr noundef null)
  %16 = icmp eq ptr %13, null
  br i1 %16, label %21, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %struct.listop, ptr %15, i64 0, i32 8
  %19 = load ptr, ptr %18, align 8, !tbaa !83
  %20 = tail call ptr @Perl_op_sibling_splice(ptr noundef %15, ptr noundef %19, i32 noundef 0, ptr noundef nonnull %13)
  br label %21

21:                                               ; preds = %9, %11, %17, %4
  %22 = phi ptr [ %0, %4 ], [ %15, %17 ], [ %15, %11 ], [ %10, %9 ]
  br i1 %1, label %23, label %36

23:                                               ; preds = %21
  %24 = getelementptr inbounds %struct.op, ptr %22, i64 0, i32 4
  %25 = load i16, ptr %24, align 8
  %26 = and i16 %25, 511
  %27 = icmp eq i16 %26, 0
  br i1 %27, label %36, label %28

28:                                               ; preds = %23
  tail call void @Perl_op_clear(ptr noundef nonnull %22)
  %29 = load i16, ptr %24, align 8
  %30 = and i16 %29, 511
  %31 = zext i16 %30 to i64
  %32 = getelementptr inbounds %struct.op, ptr %22, i64 0, i32 3
  store i64 %31, ptr %32, align 8, !tbaa !34
  %33 = and i16 %29, -512
  store i16 %33, ptr %24, align 8
  %34 = load ptr, ptr @PL_ppaddr, align 8, !tbaa !6
  %35 = getelementptr inbounds %struct.op, ptr %22, i64 0, i32 2
  store ptr %34, ptr %35, align 8, !tbaa !78
  br label %36

36:                                               ; preds = %28, %23, %21
  ret ptr %22
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @S_fold_constants(ptr noundef %0) unnamed_addr #4 {
  %2 = alloca ptr, align 8
  %3 = alloca i32, align 4
  %4 = alloca ptr, align 8
  %5 = alloca %struct.cop, align 8
  %6 = alloca %struct.jmpenv, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3)
  %7 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 4
  %8 = load i16, ptr %7, align 8
  %9 = and i16 %8, 511
  %10 = zext i16 %9 to i32
  store volatile i32 %10, ptr %3, align 4, !tbaa !52
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4)
  store volatile ptr null, ptr %4, align 8, !tbaa !6
  %11 = load ptr, ptr @PL_warnhook, align 8, !tbaa !6
  %12 = load ptr, ptr @PL_diehook, align 8, !tbaa !6
  call void @llvm.lifetime.start.p0(i64 80, ptr nonnull %5) #29
  %13 = load i8, ptr @PL_dowarn, align 1, !tbaa !13
  call void @llvm.lifetime.start.p0(i64 216, ptr nonnull %6) #29
  %14 = load volatile i32, ptr %3, align 4, !tbaa !52
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds [0 x i32], ptr @PL_opargs, i64 0, i64 %15
  %17 = load i32, ptr %16, align 4, !tbaa !52
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %265, label %20

20:                                               ; preds = %1
  %21 = load volatile i32, ptr %3, align 4, !tbaa !52
  switch i32 %21, label %77 [
    i32 62, label %56
    i32 155, label %22
    i32 21, label %61
  ]

22:                                               ; preds = %20
  %23 = getelementptr inbounds %struct.listop, ptr %0, i64 0, i32 7
  %24 = load ptr, ptr %23, align 8, !tbaa !81
  %25 = getelementptr inbounds %struct.op, ptr %24, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8, !tbaa !38
  %27 = icmp eq ptr %26, null
  br i1 %27, label %265, label %28

28:                                               ; preds = %22
  %29 = getelementptr inbounds %struct.op, ptr %26, i64 0, i32 4
  %30 = load i16, ptr %29, align 8
  %31 = and i16 %30, 511
  %32 = icmp eq i16 %31, 5
  br i1 %32, label %33, label %265

33:                                               ; preds = %28
  %34 = getelementptr inbounds %struct.svop, ptr %26, i64 0, i32 7
  %35 = load ptr, ptr %34, align 8, !tbaa !65
  %36 = getelementptr inbounds %struct.sv, ptr %35, i64 0, i32 2
  %37 = load i32, ptr %36, align 4, !tbaa !84
  %38 = and i32 %37, 2098176
  %39 = icmp eq i32 %38, 1024
  br i1 %39, label %40, label %265

40:                                               ; preds = %33
  %41 = getelementptr inbounds %struct.sv, ptr %35, i64 0, i32 3
  %42 = load ptr, ptr %41, align 8, !tbaa !13
  %43 = load ptr, ptr %35, align 8, !tbaa !85
  %44 = getelementptr inbounds %struct.xpv, ptr %43, i64 0, i32 2
  %45 = load i64, ptr %44, align 8, !tbaa !86
  %46 = getelementptr inbounds i8, ptr %42, i64 %45
  %47 = icmp sgt i64 %45, 0
  br i1 %47, label %51, label %77

48:                                               ; preds = %51
  %49 = getelementptr inbounds i8, ptr %52, i64 1
  %50 = icmp ult ptr %49, %46
  br i1 %50, label %51, label %77, !llvm.loop !249

51:                                               ; preds = %40, %48
  %52 = phi ptr [ %49, %48 ], [ %42, %40 ]
  %53 = load i8, ptr %52, align 1, !tbaa !13
  %54 = and i8 %53, -33
  %55 = icmp eq i8 %54, 80
  br i1 %55, label %265, label %48

56:                                               ; preds = %20
  %57 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 6
  %58 = load i8, ptr %57, align 1, !tbaa !33
  %59 = and i8 %58, 64
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %77, label %265

61:                                               ; preds = %20
  %62 = getelementptr inbounds %struct.unop, ptr %0, i64 0, i32 7
  %63 = load ptr, ptr %62, align 8, !tbaa !36
  %64 = getelementptr inbounds %struct.unop, ptr %63, i64 0, i32 7
  %65 = load ptr, ptr %64, align 8, !tbaa !36
  %66 = getelementptr inbounds %struct.op, ptr %65, i64 0, i32 4
  %67 = load i16, ptr %66, align 8
  %68 = and i16 %67, 511
  %69 = icmp eq i16 %68, 5
  br i1 %69, label %70, label %265

70:                                               ; preds = %61
  %71 = getelementptr inbounds %struct.svop, ptr %65, i64 0, i32 7
  %72 = load ptr, ptr %71, align 8, !tbaa !65
  %73 = getelementptr inbounds %struct.sv, ptr %72, i64 0, i32 2
  %74 = load i32, ptr %73, align 4, !tbaa !84
  %75 = and i32 %74, 131072
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %265

77:                                               ; preds = %48, %40, %70, %56, %20
  %78 = load ptr, ptr @PL_parser, align 8, !tbaa !6
  %79 = icmp eq ptr %78, null
  br i1 %79, label %84, label %80

80:                                               ; preds = %77
  %81 = getelementptr inbounds %struct.yy_parser, ptr %78, i64 0, i32 44
  %82 = load i8, ptr %81, align 1, !tbaa !105
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %84, label %265

84:                                               ; preds = %80, %77
  %85 = load ptr, ptr %0, align 8, !tbaa !25
  %86 = icmp eq ptr %85, null
  br i1 %86, label %87, label %89

87:                                               ; preds = %84
  %88 = call ptr @Perl_op_linklist(ptr noundef nonnull %0)
  br label %89

89:                                               ; preds = %84, %87
  %90 = phi ptr [ %88, %87 ], [ %85, %84 ]
  store volatile ptr %90, ptr %2, align 8, !tbaa !6
  %91 = load volatile ptr, ptr %2, align 8, !tbaa !6
  %92 = icmp eq ptr %91, %0
  br i1 %92, label %122, label %93

93:                                               ; preds = %89, %118
  %94 = load volatile ptr, ptr %2, align 8, !tbaa !6
  %95 = getelementptr inbounds %struct.op, ptr %94, i64 0, i32 4
  %96 = load i16, ptr %95, align 8
  %97 = and i16 %96, 511
  switch i16 %97, label %104 [
    i16 5, label %98
    i16 158, label %109
  ]

98:                                               ; preds = %93
  %99 = load volatile ptr, ptr %2, align 8, !tbaa !6
  %100 = getelementptr inbounds %struct.op, ptr %99, i64 0, i32 6
  %101 = load i8, ptr %100, align 1, !tbaa !33
  %102 = and i8 %101, 64
  %103 = icmp eq i8 %102, 0
  br i1 %103, label %109, label %104

104:                                              ; preds = %93, %98
  %105 = and i16 %96, 509
  %106 = icmp ne i16 %105, 0
  %107 = icmp ne i16 %97, 3
  %108 = and i1 %106, %107
  br i1 %108, label %265, label %109

109:                                              ; preds = %98, %104, %93
  %110 = load volatile ptr, ptr %2, align 8, !tbaa !6
  %111 = load ptr, ptr %110, align 8, !tbaa !25
  %112 = icmp eq ptr %111, null
  %113 = load volatile ptr, ptr %2, align 8, !tbaa !6
  br i1 %112, label %116, label %114

114:                                              ; preds = %109
  %115 = load ptr, ptr %113, align 8, !tbaa !25
  br label %118

116:                                              ; preds = %109
  %117 = call ptr @Perl_op_linklist(ptr noundef %113)
  br label %118

118:                                              ; preds = %116, %114
  %119 = phi ptr [ %115, %114 ], [ %117, %116 ]
  store volatile ptr %119, ptr %2, align 8, !tbaa !6
  %120 = load volatile ptr, ptr %2, align 8, !tbaa !6
  %121 = icmp eq ptr %120, %0
  br i1 %121, label %122, label %93, !llvm.loop !250

122:                                              ; preds = %118, %89
  %123 = load ptr, ptr %0, align 8, !tbaa !25
  %124 = icmp eq ptr %123, null
  br i1 %124, label %125, label %127

125:                                              ; preds = %122
  %126 = call ptr @Perl_op_linklist(ptr noundef nonnull %0)
  br label %127

127:                                              ; preds = %122, %125
  %128 = phi ptr [ %126, %125 ], [ %123, %122 ]
  store volatile ptr %128, ptr %2, align 8, !tbaa !6
  %129 = load ptr, ptr %0, align 8, !tbaa !25
  store ptr null, ptr %0, align 8, !tbaa !25
  %130 = load volatile ptr, ptr %2, align 8, !tbaa !6
  store ptr %130, ptr @PL_op, align 8, !tbaa !6
  %131 = load i32, ptr @PL_scopestack_ix, align 4, !tbaa !52
  %132 = call ptr @Perl_create_eval_scope(i32 noundef 256) #29
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(80) %5, ptr noundef nonnull align 8 dereferenceable(80) @PL_compiling, i64 80, i1 false), !tbaa.struct !251
  store ptr %5, ptr @PL_curcop, align 8, !tbaa !6
  store ptr @PL_sv_placeholder, ptr @PL_warnhook, align 8, !tbaa !6
  store ptr null, ptr @PL_diehook, align 8, !tbaa !6
  %133 = load ptr, ptr @PL_top_env, align 8, !tbaa !6
  %134 = getelementptr inbounds %struct.jmpenv, ptr %6, i64 0, i32 1
  store ptr %133, ptr %134, align 8, !tbaa !252
  %135 = call i32 @__sigsetjmp(ptr noundef nonnull %6, i32 noundef 0) #33
  %136 = getelementptr inbounds %struct.jmpenv, ptr %6, i64 0, i32 2
  store i32 %135, ptr %136, align 8, !tbaa !254
  store ptr %6, ptr @PL_top_env, align 8, !tbaa !6
  %137 = getelementptr inbounds %struct.jmpenv, ptr %6, i64 0, i32 3
  store i8 0, ptr %137, align 4, !tbaa !255
  %138 = load i8, ptr @PL_dowarn, align 1, !tbaa !13
  %139 = and i8 %138, 6
  %140 = icmp eq i8 %139, 0
  br i1 %140, label %141, label %143

141:                                              ; preds = %127
  %142 = or i8 %138, 1
  store i8 %142, ptr @PL_dowarn, align 1, !tbaa !13
  br label %143

143:                                              ; preds = %141, %127
  switch i32 %135, label %208 [
    i32 0, label %144
    i32 3, label %179
  ]

144:                                              ; preds = %143
  %145 = load ptr, ptr @PL_runops, align 8, !tbaa !6
  %146 = call i32 %145() #29
  %147 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !6
  %148 = getelementptr inbounds ptr, ptr %147, i64 -1
  store ptr %148, ptr @PL_stack_sp, align 8, !tbaa !6
  %149 = load ptr, ptr %147, align 8, !tbaa !6
  store volatile ptr %149, ptr %4, align 8, !tbaa !6
  %150 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 3
  %151 = load i64, ptr %150, align 8, !tbaa !34
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %160, label %153

153:                                              ; preds = %144
  %154 = load volatile ptr, ptr %4, align 8, !tbaa !6
  %155 = load ptr, ptr @PL_curpad, align 8, !tbaa !6
  %156 = getelementptr inbounds ptr, ptr %155, i64 %151
  %157 = load ptr, ptr %156, align 8, !tbaa !6
  %158 = icmp eq ptr %154, %157
  br i1 %158, label %159, label %160

159:                                              ; preds = %153
  call void @Perl_pad_swipe(i64 noundef %151, i1 noundef zeroext false) #29
  br label %210

160:                                              ; preds = %153, %144
  %161 = load volatile ptr, ptr %4, align 8, !tbaa !6
  %162 = getelementptr inbounds %struct.sv, ptr %161, i64 0, i32 2
  %163 = load i32, ptr %162, align 4, !tbaa !84
  %164 = and i32 %163, 524288
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %210, label %166

166:                                              ; preds = %160
  %167 = load volatile ptr, ptr %4, align 8, !tbaa !6
  %168 = icmp eq ptr %167, null
  br i1 %168, label %174, label %169

169:                                              ; preds = %166
  %170 = load volatile ptr, ptr %4, align 8, !tbaa !6
  %171 = getelementptr inbounds %struct.sv, ptr %170, i64 0, i32 1
  %172 = load i32, ptr %171, align 8, !tbaa !42
  %173 = add i32 %172, 1
  store i32 %173, ptr %171, align 8, !tbaa !42
  br label %174

174:                                              ; preds = %169, %166
  %175 = load volatile ptr, ptr %4, align 8, !tbaa !6
  %176 = getelementptr inbounds %struct.sv, ptr %175, i64 0, i32 2
  %177 = load i32, ptr %176, align 4, !tbaa !84
  %178 = and i32 %177, -524289
  store i32 %178, ptr %176, align 4, !tbaa !84
  br label %210

179:                                              ; preds = %143
  %180 = load ptr, ptr @PL_errgv, align 8, !tbaa !6
  %181 = getelementptr inbounds %struct.gv, ptr %180, i64 0, i32 3
  %182 = load ptr, ptr %181, align 8, !tbaa !13
  %183 = load ptr, ptr %182, align 8, !tbaa !6
  %184 = icmp eq ptr %183, null
  br i1 %184, label %197, label %185

185:                                              ; preds = %179
  %186 = getelementptr inbounds %struct.sv, ptr %183, i64 0, i32 2
  %187 = load i32, ptr %186, align 4, !tbaa !84
  %188 = and i32 %187, 134283264
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %199, label %190

190:                                              ; preds = %185
  %191 = getelementptr inbounds %struct.sv, ptr %183, i64 0, i32 1
  %192 = load i32, ptr %191, align 8, !tbaa !42
  %193 = icmp ugt i32 %192, 1
  br i1 %193, label %194, label %196

194:                                              ; preds = %190
  %195 = add i32 %192, -1
  store i32 %195, ptr %191, align 8, !tbaa !42
  br label %197

196:                                              ; preds = %190
  call void @Perl_sv_free2(ptr noundef nonnull %183, i32 noundef %192) #29
  br label %197

197:                                              ; preds = %196, %194, %179
  %198 = call ptr @Perl_newSVpvn(ptr noundef nonnull @.str.19, i64 noundef 0) #29
  store ptr %198, ptr %182, align 8, !tbaa !6
  br label %207

199:                                              ; preds = %185
  call void @Perl_sv_setpvn(ptr noundef nonnull %183, ptr noundef nonnull @.str.19, i64 noundef 0) #29
  %200 = load i32, ptr %186, align 4, !tbaa !84
  %201 = and i32 %200, 1610547455
  %202 = or i32 %201, 17408
  store i32 %202, ptr %186, align 4, !tbaa !84
  %203 = and i32 %200, 14680064
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %207, label %205

205:                                              ; preds = %199
  %206 = call i32 @Perl_mg_free(ptr noundef nonnull %183) #29
  br label %207

207:                                              ; preds = %199, %205, %197
  store ptr %129, ptr %0, align 8, !tbaa !25
  br label %210

208:                                              ; preds = %143
  %209 = load ptr, ptr %134, align 8, !tbaa !252
  store ptr %209, ptr @PL_top_env, align 8, !tbaa !6
  store ptr %11, ptr @PL_warnhook, align 8, !tbaa !6
  store ptr %12, ptr @PL_diehook, align 8, !tbaa !6
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.64, i32 noundef %135) #29
  br label %210

210:                                              ; preds = %207, %208, %174, %160, %159
  %211 = load ptr, ptr %134, align 8, !tbaa !252
  store ptr %211, ptr @PL_top_env, align 8, !tbaa !6
  store i8 %13, ptr @PL_dowarn, align 1, !tbaa !13
  store ptr %11, ptr @PL_warnhook, align 8, !tbaa !6
  store ptr %12, ptr @PL_diehook, align 8, !tbaa !6
  store ptr @PL_compiling, ptr @PL_curcop, align 8, !tbaa !6
  %212 = load i32, ptr @PL_scopestack_ix, align 4, !tbaa !52
  %213 = icmp sgt i32 %212, %131
  br i1 %213, label %214, label %215

214:                                              ; preds = %210
  call void @Perl_delete_eval_scope() #29
  br label %215

215:                                              ; preds = %214, %210
  %216 = icmp eq i32 %135, 0
  br i1 %216, label %217, label %265

217:                                              ; preds = %215
  %218 = load volatile i32, ptr %3, align 4, !tbaa !52
  %219 = icmp eq i32 %218, 68
  br i1 %219, label %221, label %220

220:                                              ; preds = %217
  call void @Perl_op_free(ptr noundef nonnull %0)
  br label %225

221:                                              ; preds = %217
  %222 = load i16, ptr %7, align 8
  %223 = and i16 %222, 8192
  %224 = icmp eq i16 %223, 0
  call void @Perl_op_free(ptr noundef nonnull %0)
  br i1 %224, label %252, label %225

225:                                              ; preds = %220, %221
  %226 = load volatile ptr, ptr %4, align 8, !tbaa !6
  %227 = getelementptr inbounds %struct.sv, ptr %226, i64 0, i32 2
  %228 = load i32, ptr %227, align 4, !tbaa !84
  %229 = and i32 %228, 134283264
  %230 = icmp eq i32 %229, 0
  br i1 %230, label %243, label %231

231:                                              ; preds = %225
  %232 = load volatile ptr, ptr %4, align 8, !tbaa !6
  %233 = icmp eq ptr %232, @PL_sv_undef
  br i1 %233, label %259, label %234

234:                                              ; preds = %231
  %235 = load volatile ptr, ptr %4, align 8, !tbaa !6
  %236 = icmp eq ptr %235, @PL_sv_yes
  br i1 %236, label %259, label %237

237:                                              ; preds = %234
  %238 = load volatile ptr, ptr %4, align 8, !tbaa !6
  %239 = icmp eq ptr %238, @PL_sv_no
  br i1 %239, label %259, label %240

240:                                              ; preds = %237
  %241 = load volatile ptr, ptr %4, align 8, !tbaa !6
  %242 = icmp eq ptr %241, @PL_sv_placeholder
  br i1 %242, label %259, label %243

243:                                              ; preds = %240, %225
  %244 = load volatile ptr, ptr %4, align 8, !tbaa !6
  %245 = getelementptr inbounds %struct.sv, ptr %244, i64 0, i32 2
  %246 = load i32, ptr %245, align 4, !tbaa !84
  %247 = or i32 %246, 131072
  store i32 %247, ptr %245, align 4, !tbaa !84
  %248 = load volatile ptr, ptr %4, align 8, !tbaa !6
  %249 = getelementptr inbounds %struct.sv, ptr %248, i64 0, i32 2
  %250 = load i32, ptr %249, align 4, !tbaa !84
  %251 = or i32 %250, 134283264
  store i32 %251, ptr %249, align 4, !tbaa !84
  br label %259

252:                                              ; preds = %221
  %253 = load volatile ptr, ptr %4, align 8, !tbaa !6
  %254 = getelementptr inbounds %struct.sv, ptr %253, i64 0, i32 2
  %255 = load i32, ptr %254, align 4, !tbaa !84
  %256 = and i32 %255, -131073
  store i32 %256, ptr %254, align 4, !tbaa !84
  %257 = load volatile ptr, ptr %4, align 8, !tbaa !6
  %258 = call ptr @Perl_newSVOP(i32 noundef 5, i32 noundef 0, ptr noundef %257)
  br label %265

259:                                              ; preds = %231, %234, %237, %240, %243
  %260 = load volatile ptr, ptr %4, align 8, !tbaa !6
  %261 = call ptr @Perl_newSVOP(i32 noundef 5, i32 noundef 0, ptr noundef %260)
  %262 = getelementptr inbounds %struct.op, ptr %261, i64 0, i32 4
  %263 = load i16, ptr %262, align 8
  %264 = or i16 %263, 8192
  store i16 %264, ptr %262, align 8
  br label %265

265:                                              ; preds = %51, %104, %33, %252, %1, %22, %28, %56, %70, %61, %80, %215, %259
  %266 = phi ptr [ %261, %259 ], [ %258, %252 ], [ %0, %215 ], [ %0, %80 ], [ %0, %61 ], [ %0, %70 ], [ %0, %56 ], [ %0, %28 ], [ %0, %22 ], [ %0, %1 ], [ %0, %33 ], [ %0, %104 ], [ %0, %51 ]
  call void @llvm.lifetime.end.p0(i64 216, ptr nonnull %6) #29
  call void @llvm.lifetime.end.p0(i64 80, ptr nonnull %5) #29
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4)
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2)
  ret ptr %266
}

declare ptr @Perl_create_eval_scope(i32 noundef) local_unnamed_addr #6

; Function Attrs: nounwind returns_twice
declare i32 @__sigsetjmp(ptr noundef, i32 noundef) local_unnamed_addr #15

declare void @Perl_pad_swipe(i64 noundef, i1 noundef zeroext) local_unnamed_addr #6

declare void @Perl_sv_setpvn(ptr noundef, ptr noundef, i64 noundef) local_unnamed_addr #6

declare i32 @Perl_mg_free(ptr noundef) local_unnamed_addr #6

declare void @Perl_delete_eval_scope() local_unnamed_addr #6

declare i64 @Perl_pad_alloc(i32 noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_newNULLLIST() local_unnamed_addr #4 {
  %1 = tail call ptr @Perl_newOP(i32 noundef 1, i32 noundef 0)
  ret ptr %1
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_newUNOP_AUX(i32 noundef %0, i32 noundef %1, ptr noundef %2, ptr noundef %3) local_unnamed_addr #4 {
  %5 = tail call ptr @Perl_Slab_Alloc(i64 noundef 56)
  %6 = trunc i32 %0 to i16
  %7 = getelementptr inbounds %struct.unop_aux, ptr %5, i64 0, i32 4
  %8 = load i16, ptr %7, align 8
  %9 = and i16 %6, 511
  %10 = and i16 %8, -512
  %11 = or i16 %10, %9
  store i16 %11, ptr %7, align 8
  %12 = sext i32 %0 to i64
  %13 = getelementptr inbounds [0 x ptr], ptr @PL_ppaddr, i64 0, i64 %12
  %14 = load ptr, ptr %13, align 8, !tbaa !6
  %15 = getelementptr inbounds %struct.unop_aux, ptr %5, i64 0, i32 2
  store ptr %14, ptr %15, align 8, !tbaa !256
  %16 = getelementptr inbounds %struct.unop_aux, ptr %5, i64 0, i32 7
  store ptr %2, ptr %16, align 8, !tbaa !257
  %17 = icmp ne ptr %2, null
  %18 = select i1 %17, i32 4, i32 0
  %19 = or i32 %18, %1
  %20 = trunc i32 %19 to i8
  %21 = getelementptr inbounds %struct.unop_aux, ptr %5, i64 0, i32 5
  store i8 %20, ptr %21, align 2, !tbaa !258
  %22 = zext i1 %17 to i32
  %23 = lshr i32 %1, 8
  %24 = or i32 %23, %22
  %25 = trunc i32 %24 to i8
  %26 = getelementptr inbounds %struct.unop_aux, ptr %5, i64 0, i32 6
  store i8 %25, ptr %26, align 1, !tbaa !259
  %27 = getelementptr inbounds %struct.unop_aux, ptr %5, i64 0, i32 8
  store ptr %3, ptr %27, align 8, !tbaa !71
  br i1 %17, label %28, label %36

28:                                               ; preds = %4
  %29 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 1
  %30 = load ptr, ptr %29, align 8, !tbaa !38
  %31 = icmp eq ptr %30, null
  br i1 %31, label %32, label %36

32:                                               ; preds = %28
  %33 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 4
  %34 = load i16, ptr %33, align 8
  %35 = and i16 %34, -16385
  store i16 %35, ptr %33, align 8
  store ptr null, ptr %29, align 8, !tbaa !38
  br label %36

36:                                               ; preds = %28, %32, %4
  %37 = load ptr, ptr @PL_op_mask, align 8, !tbaa !6
  %38 = icmp eq ptr %37, null
  br i1 %38, label %46, label %39

39:                                               ; preds = %36
  %40 = getelementptr inbounds i8, ptr %37, i64 %12
  %41 = load i8, ptr %40, align 1, !tbaa !13
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %46, label %43

43:                                               ; preds = %39
  tail call void @Perl_op_free(ptr noundef nonnull %5)
  %44 = getelementptr inbounds [0 x ptr], ptr @PL_op_desc, i64 0, i64 %12
  %45 = load ptr, ptr %44, align 8, !tbaa !6
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.63, ptr noundef %45) #29
  br label %50

46:                                               ; preds = %39, %36
  %47 = getelementptr inbounds [0 x ptr], ptr @PL_check, i64 0, i64 %12
  %48 = load ptr, ptr %47, align 8, !tbaa !6
  %49 = tail call ptr %48(ptr noundef nonnull %5) #29
  br label %50

50:                                               ; preds = %46, %43
  %51 = phi ptr [ null, %43 ], [ %49, %46 ]
  %52 = getelementptr inbounds %struct.op, ptr %51, i64 0, i32 4
  %53 = load i16, ptr %52, align 8
  %54 = and i16 %53, 511
  %55 = zext i16 %54 to i32
  %56 = zext i16 %54 to i64
  %57 = getelementptr inbounds [0 x i32], ptr @PL_opargs, i64 0, i64 %56
  %58 = load i32, ptr %57, align 4, !tbaa !52
  %59 = and i32 %58, 4
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %63, label %61

61:                                               ; preds = %50
  %62 = tail call ptr @Perl_scalar(ptr noundef nonnull %51)
  br label %63

63:                                               ; preds = %61, %50
  %64 = and i32 %58, 8
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %63
  %67 = getelementptr inbounds %struct.op, ptr %51, i64 0, i32 3
  %68 = load i64, ptr %67, align 8, !tbaa !34
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %70, label %72

70:                                               ; preds = %66
  %71 = tail call i64 @Perl_pad_alloc(i32 noundef %55, i32 noundef 131072) #29
  store i64 %71, ptr %67, align 8, !tbaa !34
  br label %72

72:                                               ; preds = %63, %66, %70
  ret ptr %51
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_newMETHOP(i32 noundef %0, i32 noundef %1, ptr noundef %2) local_unnamed_addr #4 {
  %4 = tail call ptr @Perl_Slab_Alloc(i64 noundef 56)
  %5 = icmp eq ptr %2, null
  br i1 %5, label %58, label %6

6:                                                ; preds = %3
  %7 = sext i32 %0 to i64
  %8 = getelementptr inbounds [0 x i32], ptr @PL_opargs, i64 0, i64 %7
  %9 = load i32, ptr %8, align 4, !tbaa !52
  %10 = and i32 %9, 1
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %41, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 4
  %14 = load i16, ptr %13, align 8
  %15 = and i16 %14, 511
  %16 = icmp eq i16 %15, 158
  br i1 %16, label %27, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 1
  %19 = load ptr, ptr %18, align 8, !tbaa !38
  %20 = and i16 %14, -16385
  store i16 %20, ptr %13, align 8
  store ptr null, ptr %18, align 8, !tbaa !38
  %21 = tail call ptr @Perl_newLISTOP(i32 noundef 158, i32 noundef 0, ptr noundef nonnull %2, ptr noundef null)
  %22 = icmp eq ptr %19, null
  br i1 %22, label %27, label %23

23:                                               ; preds = %17
  %24 = getelementptr inbounds %struct.listop, ptr %21, i64 0, i32 8
  %25 = load ptr, ptr %24, align 8, !tbaa !83
  %26 = tail call ptr @Perl_op_sibling_splice(ptr noundef %21, ptr noundef %25, i32 noundef 0, ptr noundef nonnull %19)
  br label %27

27:                                               ; preds = %23, %17, %12
  %28 = phi ptr [ %2, %12 ], [ %21, %23 ], [ %21, %17 ]
  %29 = getelementptr inbounds %struct.op, ptr %28, i64 0, i32 4
  %30 = load i16, ptr %29, align 8
  %31 = and i16 %30, 511
  %32 = icmp eq i16 %31, 0
  br i1 %32, label %41, label %33

33:                                               ; preds = %27
  tail call void @Perl_op_clear(ptr noundef nonnull %28)
  %34 = load i16, ptr %29, align 8
  %35 = and i16 %34, 511
  %36 = zext i16 %35 to i64
  %37 = getelementptr inbounds %struct.op, ptr %28, i64 0, i32 3
  store i64 %36, ptr %37, align 8, !tbaa !34
  %38 = and i16 %34, -512
  store i16 %38, ptr %29, align 8
  %39 = load ptr, ptr @PL_ppaddr, align 8, !tbaa !6
  %40 = getelementptr inbounds %struct.op, ptr %28, i64 0, i32 2
  store ptr %39, ptr %40, align 8, !tbaa !78
  br label %41

41:                                               ; preds = %33, %27, %6
  %42 = phi ptr [ %2, %6 ], [ %28, %27 ], [ %28, %33 ]
  %43 = trunc i32 %1 to i8
  %44 = or i8 %43, 4
  %45 = getelementptr inbounds %struct.methop, ptr %4, i64 0, i32 5
  store i8 %44, ptr %45, align 2, !tbaa !170
  %46 = getelementptr inbounds %struct.methop, ptr %4, i64 0, i32 7
  store ptr %42, ptr %46, align 8, !tbaa !13
  %47 = lshr i32 %1, 8
  %48 = trunc i32 %47 to i8
  %49 = or i8 %48, 1
  %50 = getelementptr inbounds %struct.methop, ptr %4, i64 0, i32 6
  store i8 %49, ptr %50, align 1, !tbaa !171
  %51 = getelementptr inbounds %struct.op, ptr %42, i64 0, i32 1
  %52 = load ptr, ptr %51, align 8, !tbaa !38
  %53 = icmp eq ptr %52, null
  br i1 %53, label %54, label %67

54:                                               ; preds = %41
  %55 = getelementptr inbounds %struct.op, ptr %42, i64 0, i32 4
  %56 = load i16, ptr %55, align 8
  %57 = and i16 %56, -16385
  store i16 %57, ptr %55, align 8
  store ptr null, ptr %51, align 8, !tbaa !38
  br label %67

58:                                               ; preds = %3
  %59 = trunc i32 %1 to i8
  %60 = and i8 %59, -5
  %61 = getelementptr inbounds %struct.methop, ptr %4, i64 0, i32 5
  store i8 %60, ptr %61, align 2, !tbaa !170
  %62 = getelementptr inbounds %struct.methop, ptr %4, i64 0, i32 7
  store ptr null, ptr %62, align 8, !tbaa !13
  %63 = lshr i32 %1, 8
  %64 = trunc i32 %63 to i8
  %65 = getelementptr inbounds %struct.methop, ptr %4, i64 0, i32 6
  store i8 %64, ptr %65, align 1, !tbaa !171
  store ptr %4, ptr %4, align 8, !tbaa !172
  %66 = sext i32 %0 to i64
  br label %67

67:                                               ; preds = %58, %54, %41
  %68 = phi i64 [ %7, %54 ], [ %7, %41 ], [ %66, %58 ]
  %69 = getelementptr inbounds %struct.methop, ptr %4, i64 0, i32 8
  store ptr null, ptr %69, align 8, !tbaa !63
  %70 = trunc i32 %0 to i16
  %71 = getelementptr inbounds %struct.methop, ptr %4, i64 0, i32 4
  %72 = load i16, ptr %71, align 8
  %73 = and i16 %70, 511
  %74 = and i16 %72, -512
  %75 = or i16 %74, %73
  store i16 %75, ptr %71, align 8
  %76 = getelementptr inbounds [0 x ptr], ptr @PL_ppaddr, i64 0, i64 %68
  %77 = load ptr, ptr %76, align 8, !tbaa !6
  %78 = getelementptr inbounds %struct.methop, ptr %4, i64 0, i32 2
  store ptr %77, ptr %78, align 8, !tbaa !173
  %79 = load ptr, ptr @PL_op_mask, align 8, !tbaa !6
  %80 = icmp eq ptr %79, null
  br i1 %80, label %88, label %81

81:                                               ; preds = %67
  %82 = getelementptr inbounds i8, ptr %79, i64 %68
  %83 = load i8, ptr %82, align 1, !tbaa !13
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %88, label %85

85:                                               ; preds = %81
  tail call void @Perl_op_free(ptr noundef nonnull %4)
  %86 = getelementptr inbounds [0 x ptr], ptr @PL_op_desc, i64 0, i64 %68
  %87 = load ptr, ptr %86, align 8, !tbaa !6
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.63, ptr noundef %87) #29
  br label %92

88:                                               ; preds = %81, %67
  %89 = getelementptr inbounds [0 x ptr], ptr @PL_check, i64 0, i64 %68
  %90 = load ptr, ptr %89, align 8, !tbaa !6
  %91 = tail call ptr %90(ptr noundef nonnull %4) #29
  br label %92

92:                                               ; preds = %85, %88
  %93 = phi ptr [ null, %85 ], [ %91, %88 ]
  ret ptr %93
}

declare zeroext i1 @Perl__is_in_locale_category(i1 noundef zeroext, i32 noundef) local_unnamed_addr #6

declare ptr @Perl_refcounted_he_fetch_pvn(ptr noundef, ptr noundef, i64 noundef, i32 noundef, i32 noundef) local_unnamed_addr #6

declare ptr @Perl_current_re_engine() local_unnamed_addr #6

declare ptr @Perl_re_op_compile(ptr noundef, i32 noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_newATTRSUB_x(i32 noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4, i1 noundef zeroext %5) local_unnamed_addr #4 {
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca i64, align 8
  %10 = alloca ptr, align 8
  %11 = alloca i64, align 8
  store ptr %2, ptr %7, align 8, !tbaa !6
  store ptr %3, ptr %8, align 8, !tbaa !6
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %9) #29
  store i64 0, ptr %9, align 8, !tbaa !88
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %10) #29
  %12 = load ptr, ptr @PL_parser, align 8, !tbaa !6
  %13 = icmp eq ptr %12, null
  br i1 %13, label %18, label %14

14:                                               ; preds = %6
  %15 = getelementptr inbounds %struct.yy_parser, ptr %12, i64 0, i32 44
  %16 = load i8, ptr %15, align 1, !tbaa !105
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %31

18:                                               ; preds = %6, %14
  %19 = icmp ne ptr %4, null
  %20 = icmp ne ptr %3, null
  %21 = or i1 %20, %19
  br i1 %21, label %30, label %22

22:                                               ; preds = %18
  %23 = load ptr, ptr @PL_compcv, align 8, !tbaa !6
  %24 = load ptr, ptr %23, align 8, !tbaa !10
  %25 = getelementptr inbounds %struct.xpvcv, ptr %24, i64 0, i32 12
  %26 = load i32, ptr %25, align 4, !tbaa !14
  %27 = freeze i32 %26
  %28 = and i32 %27, 131075
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %31, label %30

30:                                               ; preds = %18, %22
  br label %31

31:                                               ; preds = %30, %22, %14
  %32 = phi i1 [ true, %14 ], [ false, %22 ], [ false, %30 ]
  %33 = phi i32 [ 32, %14 ], [ 18, %22 ], [ 2, %30 ]
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %11) #29
  store i64 0, ptr %11, align 8, !tbaa !88
  %34 = icmp eq ptr %1, null
  br i1 %34, label %60, label %35

35:                                               ; preds = %31
  br i1 %5, label %36, label %41

36:                                               ; preds = %35
  %37 = getelementptr inbounds %struct.sv, ptr %1, i64 0, i32 2
  %38 = load i32, ptr %37, align 4, !tbaa !84
  %39 = and i32 %38, 2098176
  %40 = icmp eq i32 %39, 1024
  br i1 %40, label %48, label %55

41:                                               ; preds = %35
  %42 = getelementptr inbounds %struct.svop, ptr %1, i64 0, i32 7
  %43 = load ptr, ptr %42, align 8, !tbaa !65
  %44 = getelementptr inbounds %struct.sv, ptr %43, i64 0, i32 2
  %45 = load i32, ptr %44, align 4, !tbaa !84
  %46 = and i32 %45, 2098176
  %47 = icmp eq i32 %46, 1024
  br i1 %47, label %48, label %55

48:                                               ; preds = %41, %36
  %49 = phi ptr [ %1, %36 ], [ %43, %41 ]
  %50 = load ptr, ptr %49, align 8, !tbaa !85
  %51 = getelementptr inbounds %struct.xpv, ptr %50, i64 0, i32 2
  %52 = load i64, ptr %51, align 8, !tbaa !86
  store i64 %52, ptr %11, align 8, !tbaa !88
  %53 = getelementptr inbounds %struct.sv, ptr %49, i64 0, i32 3
  %54 = load ptr, ptr %53, align 8, !tbaa !13
  br label %58

55:                                               ; preds = %41, %36
  %56 = phi ptr [ %1, %36 ], [ %43, %41 ]
  %57 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %56, ptr noundef nonnull %11, i32 noundef 34) #29
  br label %58

58:                                               ; preds = %48, %55
  %59 = phi ptr [ %54, %48 ], [ %57, %55 ]
  br i1 %5, label %126, label %61

60:                                               ; preds = %31
  br i1 %5, label %126, label %89

61:                                               ; preds = %58
  %62 = getelementptr inbounds %struct.svop, ptr %1, i64 0, i32 7
  %63 = load ptr, ptr %62, align 8, !tbaa !65
  %64 = getelementptr inbounds %struct.sv, ptr %63, i64 0, i32 2
  %65 = load i32, ptr %64, align 4, !tbaa !84
  %66 = and i32 %65, 536870912
  %67 = icmp ne i32 %66, 0
  %68 = icmp eq ptr %59, null
  br i1 %68, label %89, label %69

69:                                               ; preds = %61
  br i1 %32, label %84, label %70

70:                                               ; preds = %69
  %71 = load ptr, ptr @PL_curstash, align 8, !tbaa !6
  %72 = load ptr, ptr @PL_curcop, align 8, !tbaa !6
  %73 = getelementptr inbounds %struct.cop, ptr %72, i64 0, i32 8
  %74 = load ptr, ptr %73, align 8, !tbaa !239
  %75 = icmp eq ptr %71, %74
  br i1 %75, label %76, label %83

76:                                               ; preds = %70
  %77 = load i64, ptr %11, align 8, !tbaa !88
  %78 = call ptr @memchr(ptr noundef nonnull %59, i32 noundef 58, i64 noundef %77) #30
  %79 = icmp eq ptr %78, null
  br i1 %79, label %80, label %83

80:                                               ; preds = %76
  %81 = call ptr @memchr(ptr noundef nonnull %59, i32 noundef 39, i64 noundef %77) #30
  %82 = icmp eq ptr %81, null
  br i1 %82, label %84, label %83

83:                                               ; preds = %80, %76, %70
  br label %84

84:                                               ; preds = %83, %80, %69
  %85 = phi i32 [ 32, %69 ], [ %33, %83 ], [ 146, %80 ]
  %86 = getelementptr inbounds %struct.svop, ptr %1, i64 0, i32 7
  %87 = load ptr, ptr %86, align 8, !tbaa !65
  %88 = call ptr @Perl_gv_fetchsv(ptr noundef %87, i32 noundef %85, i32 noundef 13) #29
  br label %126

89:                                               ; preds = %60, %61
  %90 = phi i1 [ %67, %61 ], [ false, %60 ]
  %91 = load i32, ptr @PL_perldb, align 4, !tbaa !52
  %92 = and i32 %91, 512
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %119, label %94

94:                                               ; preds = %89
  %95 = load ptr, ptr @PL_curcop, align 8, !tbaa !6
  %96 = getelementptr inbounds %struct.cop, ptr %95, i64 0, i32 7
  %97 = load i32, ptr %96, align 4, !tbaa !146
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %119, label %99

99:                                               ; preds = %94
  %100 = call ptr @Perl_sv_newmortal() #29
  %101 = load ptr, ptr @PL_curstash, align 8, !tbaa !6
  %102 = icmp eq ptr %101, null
  %103 = select i1 %102, ptr @.str.111, ptr @.str.110
  %104 = load ptr, ptr @PL_curcop, align 8, !tbaa !6
  %105 = getelementptr inbounds %struct.cop, ptr %104, i64 0, i32 9
  %106 = load ptr, ptr %105, align 8, !tbaa !40
  %107 = icmp eq ptr %106, null
  br i1 %107, label %113, label %108

108:                                              ; preds = %99
  %109 = load ptr, ptr %106, align 8, !tbaa !169
  %110 = getelementptr inbounds %struct.xpvgv, ptr %109, i64 0, i32 4
  %111 = load ptr, ptr %110, align 8, !tbaa !13
  %112 = getelementptr inbounds %struct.hek, ptr %111, i64 0, i32 2, i64 2
  br label %113

113:                                              ; preds = %99, %108
  %114 = phi ptr [ %112, %108 ], [ null, %99 ]
  %115 = getelementptr inbounds %struct.cop, ptr %104, i64 0, i32 7
  %116 = load i32, ptr %115, align 4, !tbaa !146
  %117 = zext i32 %116 to i64
  call void (ptr, ptr, ...) @Perl_sv_setpvf(ptr noundef %100, ptr noundef nonnull @.str.109, ptr noundef nonnull %103, ptr noundef %114, i64 noundef %117) #29
  %118 = call ptr @Perl_gv_fetchsv(ptr noundef %100, i32 noundef %33, i32 noundef 13) #29
  br label %126

119:                                              ; preds = %94, %89
  %120 = load ptr, ptr @PL_curstash, align 8, !tbaa !6
  %121 = icmp eq ptr %120, null
  br i1 %121, label %124, label %122

122:                                              ; preds = %119
  %123 = call ptr @Perl_gv_fetchpvn_flags(ptr noundef nonnull @.str.110, i64 noundef 8, i32 noundef %33, i32 noundef 13) #29
  br label %126

124:                                              ; preds = %119
  %125 = call ptr @Perl_gv_fetchpvn_flags(ptr noundef nonnull @.str.111, i64 noundef 18, i32 noundef %33, i32 noundef 13) #29
  br label %126

126:                                              ; preds = %58, %60, %84, %122, %124, %113
  %127 = phi i1 [ %67, %84 ], [ %90, %113 ], [ %90, %122 ], [ %90, %124 ], [ false, %60 ], [ false, %58 ]
  %128 = phi ptr [ %59, %84 ], [ null, %113 ], [ null, %122 ], [ null, %124 ], [ null, %60 ], [ %59, %58 ]
  %129 = phi i1 [ false, %84 ], [ false, %113 ], [ true, %122 ], [ true, %124 ], [ false, %60 ], [ false, %58 ]
  %130 = phi ptr [ %88, %84 ], [ %118, %113 ], [ %123, %122 ], [ %125, %124 ], [ null, %60 ], [ %1, %58 ]
  %131 = phi ptr [ %1, %84 ], [ %1, %113 ], [ %1, %122 ], [ %1, %124 ], [ null, %60 ], [ null, %58 ]
  br i1 %32, label %143, label %132

132:                                              ; preds = %126
  %133 = getelementptr inbounds %struct.gv, ptr %130, i64 0, i32 2
  %134 = load i32, ptr %133, align 4, !tbaa !133
  %135 = and i32 %134, 255
  %136 = icmp eq i32 %135, 9
  br i1 %136, label %140, label %137

137:                                              ; preds = %132
  %138 = getelementptr inbounds %struct.svop, ptr %131, i64 0, i32 7
  %139 = load ptr, ptr %138, align 8, !tbaa !65
  br label %140

140:                                              ; preds = %132, %137
  %141 = phi ptr [ %139, %137 ], [ %130, %132 ]
  call fastcc void @S_move_proto_attr(ptr noundef nonnull %7, ptr noundef nonnull %8, ptr noundef %141)
  %142 = load ptr, ptr %7, align 8, !tbaa !6
  br label %143

143:                                              ; preds = %140, %126
  %144 = phi ptr [ %142, %140 ], [ %2, %126 ]
  %145 = icmp eq ptr %144, null
  br i1 %145, label %168, label %146

146:                                              ; preds = %143
  %147 = getelementptr inbounds %struct.svop, ptr %144, i64 0, i32 7
  %148 = load ptr, ptr %147, align 8, !tbaa !65
  %149 = getelementptr inbounds %struct.sv, ptr %148, i64 0, i32 2
  %150 = load i32, ptr %149, align 4, !tbaa !84
  %151 = and i32 %150, 2098176
  %152 = icmp eq i32 %151, 1024
  br i1 %152, label %153, label %159

153:                                              ; preds = %146
  %154 = load ptr, ptr %148, align 8, !tbaa !85
  %155 = getelementptr inbounds %struct.xpv, ptr %154, i64 0, i32 2
  %156 = load i64, ptr %155, align 8, !tbaa !86
  store i64 %156, ptr %9, align 8, !tbaa !88
  %157 = getelementptr inbounds %struct.sv, ptr %148, i64 0, i32 3
  %158 = load ptr, ptr %157, align 8, !tbaa !13
  br label %164

159:                                              ; preds = %146
  %160 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %148, ptr noundef nonnull %9, i32 noundef 34) #29
  %161 = load ptr, ptr %147, align 8, !tbaa !65
  %162 = getelementptr inbounds %struct.sv, ptr %161, i64 0, i32 2
  %163 = load i32, ptr %162, align 4, !tbaa !84
  br label %164

164:                                              ; preds = %159, %153
  %165 = phi i32 [ %150, %153 ], [ %163, %159 ]
  %166 = phi ptr [ %158, %153 ], [ %160, %159 ]
  %167 = and i32 %165, 536870912
  br label %168

168:                                              ; preds = %143, %164
  %169 = phi i32 [ %167, %164 ], [ 0, %143 ]
  %170 = phi ptr [ %166, %164 ], [ null, %143 ]
  %171 = icmp eq ptr %131, null
  br i1 %171, label %176, label %172

172:                                              ; preds = %168
  %173 = getelementptr inbounds %struct.op, ptr %131, i64 0, i32 4
  %174 = load i16, ptr %173, align 8
  %175 = or i16 %174, 2048
  store i16 %175, ptr %173, align 8
  call void @Perl_save_pushptr(ptr noundef nonnull %131, i32 noundef 9) #29
  br label %176

176:                                              ; preds = %172, %168
  br i1 %145, label %181, label %177

177:                                              ; preds = %176
  %178 = getelementptr inbounds %struct.op, ptr %144, i64 0, i32 4
  %179 = load i16, ptr %178, align 8
  %180 = or i16 %179, 2048
  store i16 %180, ptr %178, align 8
  call void @Perl_save_pushptr(ptr noundef nonnull %144, i32 noundef 9) #29
  br label %181

181:                                              ; preds = %177, %176
  %182 = load ptr, ptr %8, align 8
  %183 = icmp eq ptr %182, null
  br i1 %183, label %188, label %184

184:                                              ; preds = %181
  %185 = getelementptr inbounds %struct.op, ptr %182, i64 0, i32 4
  %186 = load i16, ptr %185, align 8
  %187 = or i16 %186, 2048
  store i16 %187, ptr %185, align 8
  call void @Perl_save_pushptr(ptr noundef nonnull %182, i32 noundef 9) #29
  br label %188

188:                                              ; preds = %184, %181
  br i1 %32, label %189, label %229

189:                                              ; preds = %188
  call void @Perl_op_free(ptr noundef %4)
  %190 = icmp eq ptr %128, null
  %191 = load ptr, ptr @PL_compcv, align 8, !tbaa !6
  br i1 %190, label %201, label %192

192:                                              ; preds = %189
  %193 = icmp eq ptr %191, null
  br i1 %193, label %202, label %194

194:                                              ; preds = %192
  %195 = getelementptr inbounds %struct.sv, ptr %191, i64 0, i32 1
  %196 = load i32, ptr %195, align 8, !tbaa !42
  %197 = icmp ugt i32 %196, 1
  br i1 %197, label %198, label %200

198:                                              ; preds = %194
  %199 = add i32 %196, -1
  store i32 %199, ptr %195, align 8, !tbaa !42
  br label %202

200:                                              ; preds = %194
  call void @Perl_sv_free2(ptr noundef nonnull %191, i32 noundef %196) #29
  br label %202

201:                                              ; preds = %189
  store ptr null, ptr @PL_compcv, align 8, !tbaa !6
  br label %1190

202:                                              ; preds = %200, %198, %192
  store ptr null, ptr @PL_compcv, align 8, !tbaa !6
  %203 = icmp eq ptr %4, null
  br i1 %203, label %1190, label %204

204:                                              ; preds = %202
  %205 = call ptr @strrchr(ptr noundef nonnull dereferenceable(1) %128, i32 noundef 58) #30
  %206 = icmp eq ptr %205, null
  %207 = getelementptr inbounds i8, ptr %205, i64 1
  %208 = select i1 %206, ptr %128, ptr %207
  %209 = call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %208, ptr noundef nonnull dereferenceable(6) @.str.80) #30
  %210 = icmp eq i32 %209, 0
  br i1 %210, label %211, label %1190

211:                                              ; preds = %204
  %212 = load i8, ptr @PL_in_eval, align 1, !tbaa !13
  %213 = and i8 %212, 4
  %214 = icmp eq i8 %213, 0
  br i1 %214, label %216, label %215

215:                                              ; preds = %211
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.112) #29
  br label %1190

216:                                              ; preds = %211
  %217 = load ptr, ptr @PL_errgv, align 8, !tbaa !6
  %218 = getelementptr inbounds %struct.gv, ptr %217, i64 0, i32 3
  %219 = load ptr, ptr %218, align 8, !tbaa !13
  %220 = load ptr, ptr %219, align 8, !tbaa !6
  %221 = icmp eq ptr %220, null
  br i1 %221, label %222, label %227

222:                                              ; preds = %216
  %223 = call ptr @Perl_gv_add_by_type(ptr noundef nonnull %217, i32 noundef 0) #29
  %224 = getelementptr inbounds %struct.gv, ptr %223, i64 0, i32 3
  %225 = load ptr, ptr %224, align 8, !tbaa !13
  %226 = load ptr, ptr %225, align 8, !tbaa !6
  br label %227

227:                                              ; preds = %216, %222
  %228 = phi ptr [ %226, %222 ], [ %220, %216 ]
  call void @Perl_sv_catpvn_flags(ptr noundef %228, ptr noundef nonnull @.str.112, i64 noundef 48, i32 noundef 2) #29
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.101, ptr noundef %228) #29
  br label %1190

229:                                              ; preds = %188
  %230 = icmp eq ptr %4, null
  br i1 %230, label %231, label %292

231:                                              ; preds = %229
  %232 = getelementptr inbounds %struct.gv, ptr %130, i64 0, i32 2
  %233 = load i32, ptr %232, align 4, !tbaa !133
  %234 = and i32 %233, 255
  %235 = icmp eq i32 %234, 9
  br i1 %235, label %292, label %236

236:                                              ; preds = %231
  br i1 %183, label %237, label %244

237:                                              ; preds = %236
  %238 = load ptr, ptr @PL_compcv, align 8, !tbaa !6
  %239 = load ptr, ptr %238, align 8, !tbaa !10
  %240 = getelementptr inbounds %struct.xpvcv, ptr %239, i64 0, i32 12
  %241 = load i32, ptr %240, align 4, !tbaa !14
  %242 = and i32 %241, 131075
  %243 = icmp eq i32 %242, 0
  br i1 %243, label %258, label %244

244:                                              ; preds = %237, %236
  %245 = and i32 %233, 2048
  %246 = icmp eq i32 %245, 0
  br i1 %246, label %292, label %247

247:                                              ; preds = %244
  %248 = getelementptr inbounds %struct.gv, ptr %130, i64 0, i32 3
  %249 = load ptr, ptr %248, align 8, !tbaa !13
  %250 = getelementptr inbounds %struct.sv, ptr %249, i64 0, i32 2
  %251 = load i32, ptr %250, align 4, !tbaa !84
  %252 = and i32 %251, 255
  %253 = icmp eq i32 %252, 13
  br i1 %253, label %292, label %254

254:                                              ; preds = %247
  %255 = load ptr, ptr @PL_curstash, align 8, !tbaa !6
  %256 = load i64, ptr %11, align 8, !tbaa !88
  %257 = select i1 %127, i32 536870912, i32 0
  call void @Perl_gv_init_pvn(ptr noundef nonnull %130, ptr noundef %255, ptr noundef %128, i64 noundef %256, i32 noundef %257) #29
  br label %292

258:                                              ; preds = %237
  %259 = icmp eq i32 %234, 0
  br i1 %259, label %268, label %260

260:                                              ; preds = %258
  br i1 %171, label %264, label %261

261:                                              ; preds = %260
  %262 = getelementptr inbounds %struct.svop, ptr %131, i64 0, i32 7
  %263 = load ptr, ptr %262, align 8, !tbaa !65
  br label %264

264:                                              ; preds = %260, %261
  %265 = phi ptr [ %263, %261 ], [ null, %260 ]
  %266 = load i64, ptr %9, align 8, !tbaa !88
  call void @Perl_cv_ckproto_len_flags(ptr noundef nonnull %130, ptr noundef %265, ptr noundef %170, i64 noundef %266, i32 noundef %169)
  %267 = load i32, ptr %232, align 4, !tbaa !133
  br label %268

268:                                              ; preds = %264, %258
  %269 = phi i32 [ %267, %264 ], [ %233, %258 ]
  %270 = and i32 %269, 2048
  %271 = icmp eq i32 %270, 0
  br i1 %271, label %272, label %281

272:                                              ; preds = %268
  %273 = icmp eq ptr %170, null
  br i1 %273, label %280, label %274

274:                                              ; preds = %272
  %275 = load i64, ptr %9, align 8, !tbaa !88
  call void @Perl_sv_setpvn(ptr noundef nonnull %130, ptr noundef nonnull %170, i64 noundef %275) #29
  %276 = icmp eq i32 %169, 0
  br i1 %276, label %281, label %277

277:                                              ; preds = %274
  %278 = load i32, ptr %232, align 4, !tbaa !84
  %279 = or i32 %278, 536870912
  store i32 %279, ptr %232, align 4, !tbaa !84
  br label %281

280:                                              ; preds = %272
  call void @Perl_sv_setiv(ptr noundef nonnull %130, i64 noundef -1) #29
  br label %281

281:                                              ; preds = %280, %277, %274, %268
  %282 = load ptr, ptr @PL_compcv, align 8, !tbaa !6
  %283 = icmp eq ptr %282, null
  br i1 %283, label %291, label %284

284:                                              ; preds = %281
  %285 = getelementptr inbounds %struct.sv, ptr %282, i64 0, i32 1
  %286 = load i32, ptr %285, align 8, !tbaa !42
  %287 = icmp ugt i32 %286, 1
  br i1 %287, label %288, label %290

288:                                              ; preds = %284
  %289 = add i32 %286, -1
  store i32 %289, ptr %285, align 8, !tbaa !42
  br label %291

290:                                              ; preds = %284
  call void @Perl_sv_free2(ptr noundef nonnull %282, i32 noundef %286) #29
  br label %291

291:                                              ; preds = %281, %288, %290
  store ptr null, ptr @PL_compcv, align 8, !tbaa !6
  br label %1190

292:                                              ; preds = %254, %247, %244, %231, %229
  %293 = icmp eq ptr %128, null
  br i1 %293, label %319, label %294

294:                                              ; preds = %292
  %295 = getelementptr inbounds %struct.gv, ptr %130, i64 0, i32 2
  %296 = load i32, ptr %295, align 4, !tbaa !133
  %297 = and i32 %296, 255
  %298 = icmp eq i32 %297, 9
  br i1 %298, label %299, label %308

299:                                              ; preds = %294
  %300 = getelementptr inbounds %struct.gv, ptr %130, i64 0, i32 3
  %301 = load ptr, ptr %300, align 8, !tbaa !13
  %302 = getelementptr inbounds %struct.gp, ptr %301, i64 0, i32 3
  %303 = load i32, ptr %302, align 8, !tbaa !260
  %304 = icmp eq i32 %303, 0
  br i1 %304, label %305, label %319

305:                                              ; preds = %299
  %306 = getelementptr inbounds %struct.gp, ptr %301, i64 0, i32 2
  %307 = load ptr, ptr %306, align 8, !tbaa !147
  br label %319

308:                                              ; preds = %294
  %309 = and i32 %296, 2048
  %310 = icmp eq i32 %309, 0
  br i1 %310, label %319, label %311

311:                                              ; preds = %308
  %312 = getelementptr inbounds %struct.gv, ptr %130, i64 0, i32 3
  %313 = load ptr, ptr %312, align 8, !tbaa !13
  %314 = getelementptr inbounds %struct.sv, ptr %313, i64 0, i32 2
  %315 = load i32, ptr %314, align 4, !tbaa !84
  %316 = and i32 %315, 255
  %317 = icmp eq i32 %316, 13
  %318 = select i1 %317, ptr %313, ptr null
  br label %319

319:                                              ; preds = %311, %305, %308, %292, %299
  %320 = phi ptr [ null, %299 ], [ null, %292 ], [ %307, %305 ], [ null, %308 ], [ %318, %311 ]
  br i1 %230, label %321, label %323

321:                                              ; preds = %319
  %322 = icmp ne ptr %170, null
  br label %398

323:                                              ; preds = %319
  %324 = getelementptr inbounds %struct.op, ptr %4, i64 0, i32 4
  %325 = load i16, ptr %324, align 8
  %326 = and i16 %325, 511
  %327 = icmp eq i16 %326, 1
  br i1 %327, label %328, label %335

328:                                              ; preds = %323
  %329 = load ptr, ptr @PL_parser, align 8, !tbaa !6
  %330 = getelementptr inbounds %struct.yy_parser, ptr %329, i64 0, i32 41
  %331 = load i32, ptr %330, align 8, !tbaa !238
  call void @Perl_op_free(ptr noundef nonnull %4)
  %332 = call ptr @Perl_newSTATEOP(i32 noundef 0, ptr noundef null, ptr noundef null)
  %333 = load ptr, ptr @PL_parser, align 8, !tbaa !6
  %334 = getelementptr inbounds %struct.yy_parser, ptr %333, i64 0, i32 41
  store i32 %331, ptr %334, align 8, !tbaa !238
  br label %335

335:                                              ; preds = %328, %323
  %336 = phi ptr [ %332, %328 ], [ %4, %323 ]
  %337 = load ptr, ptr @PL_compcv, align 8, !tbaa !6
  %338 = load ptr, ptr %337, align 8, !tbaa !10
  %339 = getelementptr inbounds %struct.xpvcv, ptr %338, i64 0, i32 12
  %340 = load i32, ptr %339, align 4, !tbaa !14
  %341 = and i32 %340, 2
  %342 = icmp eq i32 %341, 0
  br i1 %342, label %343, label %366

343:                                              ; preds = %335
  %344 = icmp eq ptr %320, null
  br i1 %344, label %370, label %345

345:                                              ; preds = %343
  %346 = load ptr, ptr %320, align 8, !tbaa !10
  %347 = getelementptr inbounds %struct.xpvcv, ptr %346, i64 0, i32 12
  %348 = load i32, ptr %347, align 4, !tbaa !14
  %349 = and i32 %348, 2
  %350 = icmp eq i32 %349, 0
  br i1 %350, label %370, label %351

351:                                              ; preds = %345
  %352 = getelementptr inbounds %struct.xpvcv, ptr %346, i64 0, i32 6
  %353 = load ptr, ptr %352, align 8, !tbaa !13
  %354 = icmp eq ptr %353, null
  br i1 %354, label %355, label %370

355:                                              ; preds = %351
  %356 = getelementptr inbounds %struct.gv, ptr %130, i64 0, i32 2
  %357 = load i32, ptr %356, align 4, !tbaa !133
  %358 = and i32 %357, 255
  %359 = icmp eq i32 %358, 9
  br i1 %359, label %360, label %366

360:                                              ; preds = %355
  %361 = load ptr, ptr %130, align 8, !tbaa !169
  %362 = getelementptr inbounds %struct.xpvgv, ptr %361, i64 0, i32 2
  %363 = load i64, ptr %362, align 8, !tbaa !261
  %364 = and i64 %363, 4
  %365 = icmp eq i64 %364, 0
  br i1 %365, label %366, label %370

366:                                              ; preds = %360, %355, %335
  %367 = call fastcc ptr @S_scalarseq(ptr noundef %336)
  %368 = call ptr @Perl_op_lvalue_flags(ptr noundef %367, i32 noundef 187, i32 noundef 0)
  %369 = call ptr @Perl_newUNOP(i32 noundef 187, i32 noundef 0, ptr noundef %368)
  br label %373

370:                                              ; preds = %360, %351, %345, %343
  %371 = call fastcc ptr @S_scalarseq(ptr noundef %336)
  %372 = call ptr @Perl_newUNOP(i32 noundef 186, i32 noundef 0, ptr noundef %371)
  br label %373

373:                                              ; preds = %370, %366
  %374 = phi ptr [ %369, %366 ], [ %372, %370 ]
  %375 = load ptr, ptr %374, align 8, !tbaa !25
  %376 = icmp eq ptr %375, null
  br i1 %376, label %377, label %379

377:                                              ; preds = %373
  %378 = call ptr @Perl_op_linklist(ptr noundef nonnull %374)
  br label %379

379:                                              ; preds = %377, %373
  %380 = phi ptr [ %378, %377 ], [ %375, %373 ]
  store ptr null, ptr %374, align 8, !tbaa !25
  %381 = icmp eq ptr %170, null
  br i1 %381, label %398, label %382

382:                                              ; preds = %379
  %383 = load i8, ptr %170, align 1, !tbaa !13
  %384 = icmp ne i8 %383, 0
  %385 = icmp ne ptr %182, null
  %386 = or i1 %385, %384
  br i1 %386, label %398, label %387

387:                                              ; preds = %382
  %388 = load ptr, ptr @PL_compcv, align 8, !tbaa !6
  %389 = load ptr, ptr %388, align 8, !tbaa !10
  %390 = getelementptr inbounds %struct.xpvcv, ptr %389, i64 0, i32 12
  %391 = load i32, ptr %390, align 4, !tbaa !14
  %392 = and i32 %391, 2
  %393 = icmp eq i32 %392, 0
  br i1 %393, label %394, label %398

394:                                              ; preds = %387
  %395 = and i32 %391, 32
  %396 = icmp ne i32 %395, 0
  %397 = call fastcc ptr @S_op_const_sv(ptr noundef %380, ptr noundef nonnull %388, i1 noundef zeroext %396)
  br label %398

398:                                              ; preds = %321, %379, %382, %387, %394
  %399 = phi i1 [ true, %394 ], [ true, %387 ], [ true, %382 ], [ false, %379 ], [ %322, %321 ]
  %400 = phi ptr [ %374, %394 ], [ %374, %387 ], [ %374, %382 ], [ %374, %379 ], [ null, %321 ]
  %401 = phi ptr [ %380, %394 ], [ %380, %387 ], [ %380, %382 ], [ %380, %379 ], [ null, %321 ]
  %402 = phi ptr [ %397, %394 ], [ null, %387 ], [ null, %382 ], [ null, %379 ], [ null, %321 ]
  store ptr %402, ptr %10, align 8, !tbaa !6
  %403 = getelementptr inbounds %struct.gv, ptr %130, i64 0, i32 2
  %404 = load i32, ptr %403, align 4, !tbaa !133
  %405 = and i32 %404, 1024
  %406 = icmp eq i32 %405, 0
  br i1 %406, label %407, label %417

407:                                              ; preds = %398
  %408 = and i32 %404, 2048
  %409 = icmp eq i32 %408, 0
  br i1 %409, label %474, label %410

410:                                              ; preds = %407
  %411 = getelementptr inbounds %struct.gv, ptr %130, i64 0, i32 3
  %412 = load ptr, ptr %411, align 8, !tbaa !13
  %413 = getelementptr inbounds %struct.sv, ptr %412, i64 0, i32 2
  %414 = load i32, ptr %413, align 4, !tbaa !84
  %415 = and i32 %414, 255
  %416 = icmp eq i32 %415, 13
  br i1 %416, label %474, label %417

417:                                              ; preds = %410, %398
  br i1 %171, label %421, label %418

418:                                              ; preds = %417
  %419 = getelementptr inbounds %struct.svop, ptr %131, i64 0, i32 7
  %420 = load ptr, ptr %419, align 8, !tbaa !65
  br label %421

421:                                              ; preds = %417, %418
  %422 = phi ptr [ %420, %418 ], [ null, %417 ]
  %423 = load i64, ptr %9, align 8, !tbaa !88
  %424 = or i32 %169, 1
  call void @Perl_cv_ckproto_len_flags(ptr noundef nonnull %130, ptr noundef %422, ptr noundef %170, i64 noundef %423, i32 noundef %424)
  %425 = load i32, ptr %403, align 4, !tbaa !133
  %426 = and i32 %425, 2048
  %427 = icmp eq i32 %426, 0
  br i1 %427, label %474, label %428

428:                                              ; preds = %421
  %429 = load ptr, ptr @PL_curcop, align 8, !tbaa !6
  %430 = getelementptr inbounds %struct.cop, ptr %429, i64 0, i32 7
  %431 = load i32, ptr %430, align 4, !tbaa !146
  %432 = load ptr, ptr @PL_parser, align 8, !tbaa !6
  %433 = icmp eq ptr %432, null
  br i1 %433, label %439, label %434

434:                                              ; preds = %428
  %435 = getelementptr inbounds %struct.yy_parser, ptr %432, i64 0, i32 41
  %436 = load i32, ptr %435, align 8, !tbaa !238
  %437 = icmp eq i32 %436, -1
  br i1 %437, label %439, label %438

438:                                              ; preds = %434
  store i32 %436, ptr %430, align 4, !tbaa !146
  br label %439

439:                                              ; preds = %438, %434, %428
  %440 = load ptr, ptr @PL_compcv, align 8, !tbaa !6
  call void @Perl_save_pushptr(ptr noundef %440, i32 noundef 11) #29
  %441 = call zeroext i1 @Perl_ckwarn(i32 noundef 19) #29
  br i1 %441, label %454, label %442

442:                                              ; preds = %439
  %443 = call zeroext i1 @Perl_ckwarn_d(i32 noundef 19) #29
  br i1 %443, label %444, label %457

444:                                              ; preds = %442
  %445 = load ptr, ptr %10, align 8, !tbaa !6
  %446 = icmp eq ptr %445, null
  br i1 %446, label %454, label %447

447:                                              ; preds = %444
  %448 = getelementptr inbounds %struct.gv, ptr %130, i64 0, i32 3
  %449 = load ptr, ptr %448, align 8, !tbaa !13
  %450 = icmp eq ptr %449, %445
  br i1 %450, label %454, label %451

451:                                              ; preds = %447
  %452 = call i32 @Perl_sv_cmp_flags(ptr noundef %449, ptr noundef nonnull %445, i32 noundef 2) #29
  %453 = icmp eq i32 %452, 0
  br i1 %453, label %457, label %454

454:                                              ; preds = %451, %447, %444, %439
  %455 = getelementptr inbounds %struct.svop, ptr %131, i64 0, i32 7
  %456 = load ptr, ptr %455, align 8, !tbaa !65
  call void (i32, ptr, ...) @Perl_warner(i32 noundef 19, ptr noundef nonnull @.str.113, ptr noundef %456) #29
  br label %457

457:                                              ; preds = %454, %451, %442
  %458 = load ptr, ptr @PL_compcv, align 8, !tbaa !6
  %459 = getelementptr inbounds %struct.sv, ptr %458, i64 0, i32 1
  %460 = load i32, ptr %459, align 8, !tbaa !42
  %461 = add i32 %460, 1
  store i32 %461, ptr %459, align 8, !tbaa !42
  %462 = load ptr, ptr @PL_curcop, align 8, !tbaa !6
  %463 = getelementptr inbounds %struct.cop, ptr %462, i64 0, i32 7
  store i32 %431, ptr %463, align 4, !tbaa !146
  %464 = getelementptr inbounds %struct.gv, ptr %130, i64 0, i32 3
  %465 = load ptr, ptr %464, align 8, !tbaa !13
  %466 = icmp eq ptr %465, null
  br i1 %466, label %474, label %467

467:                                              ; preds = %457
  %468 = getelementptr inbounds %struct.sv, ptr %465, i64 0, i32 1
  %469 = load i32, ptr %468, align 8, !tbaa !42
  %470 = icmp ugt i32 %469, 1
  br i1 %470, label %471, label %473

471:                                              ; preds = %467
  %472 = add i32 %469, -1
  store i32 %472, ptr %468, align 8, !tbaa !42
  br label %474

473:                                              ; preds = %467
  call void @Perl_sv_free2(ptr noundef nonnull %465, i32 noundef %469) #29
  br label %474

474:                                              ; preds = %473, %471, %457, %421, %410, %407
  %475 = icmp eq ptr %320, null
  br i1 %475, label %511, label %476

476:                                              ; preds = %474
  %477 = load ptr, ptr %320, align 8, !tbaa !10
  %478 = getelementptr inbounds %struct.xpvcv, ptr %477, i64 0, i32 6
  %479 = load ptr, ptr %478, align 8, !tbaa !13
  %480 = icmp eq ptr %479, null
  br i1 %480, label %481, label %488

481:                                              ; preds = %476
  %482 = getelementptr inbounds %struct.cv, ptr %320, i64 0, i32 2
  %483 = load i32, ptr %482, align 4, !tbaa !263
  %484 = and i32 %483, 1024
  %485 = icmp eq i32 %484, 0
  br i1 %485, label %490, label %486

486:                                              ; preds = %481
  %487 = load i64, ptr %9, align 8, !tbaa !88
  call void @Perl_cv_ckproto_len_flags(ptr noundef nonnull %320, ptr noundef nonnull %130, ptr noundef %170, i64 noundef %487, i32 noundef %169)
  br label %490

488:                                              ; preds = %476
  %489 = load i64, ptr %9, align 8, !tbaa !88
  call void @Perl_cv_ckproto_len_flags(ptr noundef nonnull %320, ptr noundef nonnull %130, ptr noundef %170, i64 noundef %489, i32 noundef %169)
  br label %500

490:                                              ; preds = %481, %486
  %491 = load i32, ptr %403, align 4, !tbaa !133
  %492 = and i32 %491, 255
  %493 = icmp eq i32 %492, 9
  br i1 %493, label %494, label %505

494:                                              ; preds = %490
  %495 = load ptr, ptr %130, align 8, !tbaa !169
  %496 = getelementptr inbounds %struct.xpvgv, ptr %495, i64 0, i32 2
  %497 = load i64, ptr %496, align 8, !tbaa !261
  %498 = and i64 %497, 4
  %499 = icmp eq i64 %498, 0
  br i1 %499, label %505, label %500

500:                                              ; preds = %488, %494
  %501 = call fastcc zeroext i1 @S_already_defined(ptr noundef nonnull %320, ptr noundef %400, ptr noundef %131, ptr noundef null, ptr noundef nonnull %10)
  br i1 %501, label %508, label %502

502:                                              ; preds = %500
  br i1 %183, label %503, label %1003

503:                                              ; preds = %502
  %504 = load ptr, ptr @PL_compcv, align 8, !tbaa !6
  call void @Perl_save_pushptr(ptr noundef %504, i32 noundef 11) #29
  br label %1190

505:                                              ; preds = %490, %494
  %506 = load ptr, ptr %10, align 8, !tbaa !6
  %507 = icmp eq ptr %506, null
  br i1 %507, label %643, label %514

508:                                              ; preds = %500
  %509 = load ptr, ptr %10, align 8, !tbaa !6
  %510 = icmp eq ptr %509, null
  br i1 %510, label %780, label %514

511:                                              ; preds = %474
  %512 = load ptr, ptr %10, align 8, !tbaa !6
  %513 = icmp eq ptr %512, null
  br i1 %513, label %780, label %514

514:                                              ; preds = %508, %511, %505
  %515 = phi ptr [ %512, %511 ], [ %506, %505 ], [ %509, %508 ]
  %516 = phi ptr [ null, %511 ], [ %320, %505 ], [ null, %508 ]
  %517 = getelementptr inbounds %struct.sv, ptr %515, i64 0, i32 1
  %518 = load <2 x i32>, ptr %517, align 8, !tbaa !52
  %519 = add <2 x i32> %518, <i32 1, i32 poison>
  %520 = or <2 x i32> %518, <i32 poison, i32 131072>
  %521 = shufflevector <2 x i32> %519, <2 x i32> %520, <2 x i32> <i32 0, i32 3>
  store <2 x i32> %521, ptr %517, align 8, !tbaa !52
  %522 = icmp eq ptr %516, null
  br i1 %522, label %539, label %523

523:                                              ; preds = %514
  call void @Perl_cv_forget_slab(ptr noundef nonnull %516) #29
  call void @Perl_sv_setpvn(ptr noundef nonnull %516, ptr noundef nonnull @.str.19, i64 noundef 0) #29
  %524 = load ptr, ptr %10, align 8, !tbaa !6
  %525 = load ptr, ptr %516, align 8, !tbaa !10
  %526 = getelementptr inbounds %struct.xpvcv, ptr %525, i64 0, i32 5
  store ptr %524, ptr %526, align 8, !tbaa !13
  %527 = load ptr, ptr %516, align 8, !tbaa !10
  %528 = getelementptr inbounds %struct.xpvcv, ptr %527, i64 0, i32 6
  store ptr @const_sv_xsub, ptr %528, align 8, !tbaa !13
  %529 = load ptr, ptr %516, align 8, !tbaa !10
  %530 = getelementptr inbounds %struct.xpvcv, ptr %529, i64 0, i32 12
  %531 = load i32, ptr %530, align 4, !tbaa !14
  %532 = or i32 %531, 12
  store i32 %532, ptr %530, align 4, !tbaa !14
  %533 = load ptr, ptr @PL_compcv, align 8, !tbaa !6
  %534 = load ptr, ptr %533, align 8, !tbaa !10
  %535 = getelementptr inbounds %struct.xpvcv, ptr %534, i64 0, i32 12
  %536 = load i32, ptr %535, align 4, !tbaa !14
  %537 = and i32 %536, 1
  %538 = or i32 %537, %532
  store i32 %538, ptr %530, align 4, !tbaa !14
  br label %631

539:                                              ; preds = %514
  %540 = load i32, ptr %403, align 4, !tbaa !52
  %541 = and i32 %540, 255
  %542 = icmp eq i32 %541, 9
  br i1 %542, label %550, label %543

543:                                              ; preds = %539
  %544 = load ptr, ptr @PL_compcv, align 8, !tbaa !6
  %545 = load ptr, ptr %544, align 8, !tbaa !10
  %546 = getelementptr inbounds %struct.xpvcv, ptr %545, i64 0, i32 12
  %547 = load i32, ptr %546, align 4, !tbaa !14
  %548 = and i32 %547, 1
  %549 = icmp eq i32 %548, 0
  br i1 %549, label %568, label %555

550:                                              ; preds = %539
  br i1 %293, label %555, label %551

551:                                              ; preds = %550
  %552 = getelementptr inbounds %struct.gv, ptr %130, i64 0, i32 3
  %553 = load ptr, ptr %552, align 8, !tbaa !13
  %554 = getelementptr inbounds %struct.gp, ptr %553, i64 0, i32 2
  store ptr null, ptr %554, align 8, !tbaa !147
  br label %555

555:                                              ; preds = %543, %551, %550
  %556 = load i64, ptr %11, align 8, !tbaa !88
  %557 = select i1 %127, i32 536870912, i32 0
  %558 = call ptr @Perl_newCONSTSUB_flags(ptr noundef null, ptr noundef %128, i64 noundef %556, i32 noundef %557, ptr noundef nonnull %515)
  %559 = load ptr, ptr @PL_compcv, align 8, !tbaa !6
  %560 = load ptr, ptr %559, align 8, !tbaa !10
  %561 = getelementptr inbounds %struct.xpvcv, ptr %560, i64 0, i32 12
  %562 = load i32, ptr %561, align 4, !tbaa !14
  %563 = and i32 %562, 1
  %564 = load ptr, ptr %558, align 8, !tbaa !10
  %565 = getelementptr inbounds %struct.xpvcv, ptr %564, i64 0, i32 12
  %566 = load i32, ptr %565, align 4, !tbaa !14
  %567 = or i32 %566, %563
  store i32 %567, ptr %565, align 4, !tbaa !14
  br label %631

568:                                              ; preds = %543
  %569 = and i32 %540, 2048
  %570 = icmp eq i32 %569, 0
  br i1 %570, label %571, label %628

571:                                              ; preds = %568
  %572 = and i32 %540, 427886592
  %573 = icmp eq i32 %572, 0
  br i1 %573, label %577, label %574

574:                                              ; preds = %571
  call void @Perl_sv_force_normal_flags(ptr noundef nonnull %130, i32 noundef 4) #29
  %575 = load i32, ptr %403, align 4, !tbaa !84
  %576 = and i32 %575, 255
  br label %577

577:                                              ; preds = %571, %574
  %578 = phi i32 [ %541, %571 ], [ %576, %574 ]
  %579 = phi i32 [ %540, %571 ], [ %575, %574 ]
  %580 = icmp ugt i32 %578, 2
  %581 = icmp eq i32 %578, 1
  %582 = or i1 %580, %581
  br i1 %582, label %584, label %583

583:                                              ; preds = %577
  call void @Perl_sv_upgrade(ptr noundef nonnull %130, i32 noundef 1) #29
  br label %616

584:                                              ; preds = %577
  br i1 %580, label %585, label %616

585:                                              ; preds = %584
  %586 = load ptr, ptr %130, align 8, !tbaa !85
  %587 = getelementptr inbounds %struct.xpv, ptr %586, i64 0, i32 3
  %588 = load i64, ptr %587, align 8, !tbaa !13
  %589 = icmp eq i64 %588, 0
  br i1 %589, label %611, label %590

590:                                              ; preds = %585
  %591 = and i32 %579, 33554432
  %592 = icmp eq i32 %591, 0
  %593 = getelementptr inbounds %struct.sv, ptr %130, i64 0, i32 3
  %594 = load ptr, ptr %593, align 8, !tbaa !13
  br i1 %592, label %608, label %595

595:                                              ; preds = %590
  %596 = getelementptr inbounds i8, ptr %594, i64 -1
  %597 = load i8, ptr %596, align 1, !tbaa !13
  %598 = zext i8 %597 to i64
  %599 = icmp eq i8 %597, 0
  br i1 %599, label %600, label %603

600:                                              ; preds = %595
  %601 = getelementptr inbounds i8, ptr %594, i64 -9
  %602 = load i64, ptr %601, align 1
  br label %603

603:                                              ; preds = %600, %595
  %604 = phi i64 [ %598, %595 ], [ %602, %600 ]
  %605 = sub i64 0, %604
  %606 = getelementptr inbounds i8, ptr %594, i64 %605
  store ptr %606, ptr %593, align 8, !tbaa !13
  %607 = and i32 %579, -33554433
  store i32 %607, ptr %403, align 4, !tbaa !84
  br label %608

608:                                              ; preds = %590, %603
  %609 = phi ptr [ %606, %603 ], [ %594, %590 ]
  call void @Perl_safesysfree(ptr noundef %609) #29
  %610 = load ptr, ptr %130, align 8, !tbaa !85
  br label %611

611:                                              ; preds = %585, %608
  %612 = phi ptr [ %586, %585 ], [ %610, %608 ]
  %613 = getelementptr inbounds %struct.xpv, ptr %612, i64 0, i32 3
  store i64 0, ptr %613, align 8, !tbaa !13
  %614 = load ptr, ptr %130, align 8, !tbaa !85
  %615 = getelementptr inbounds %struct.xpv, ptr %614, i64 0, i32 2
  store i64 0, ptr %615, align 8, !tbaa !86
  br label %616

616:                                              ; preds = %584, %611, %583
  %617 = load i32, ptr %403, align 4, !tbaa !84
  %618 = and i32 %617, 1610547455
  store i32 %618, ptr %403, align 4, !tbaa !84
  %619 = and i32 %617, 33554432
  %620 = icmp eq i32 %619, 0
  br i1 %620, label %624, label %621

621:                                              ; preds = %616
  %622 = call i32 @Perl_sv_backoff(ptr noundef nonnull %130) #29
  %623 = load i32, ptr %403, align 4, !tbaa !133
  br label %624

624:                                              ; preds = %621, %616
  %625 = phi i32 [ %623, %621 ], [ %618, %616 ]
  %626 = or i32 %625, 2048
  store i32 %626, ptr %403, align 4, !tbaa !133
  %627 = load ptr, ptr %10, align 8, !tbaa !6
  br label %628

628:                                              ; preds = %568, %624
  %629 = phi ptr [ %515, %568 ], [ %627, %624 ]
  %630 = getelementptr inbounds %struct.gv, ptr %130, i64 0, i32 3
  store ptr %629, ptr %630, align 8, !tbaa !13
  br label %631

631:                                              ; preds = %555, %628, %523
  %632 = phi ptr [ %516, %523 ], [ %558, %555 ], [ null, %628 ]
  call void @Perl_op_free(ptr noundef %400)
  %633 = load ptr, ptr @PL_compcv, align 8, !tbaa !6
  %634 = icmp eq ptr %633, null
  br i1 %634, label %642, label %635

635:                                              ; preds = %631
  %636 = getelementptr inbounds %struct.sv, ptr %633, i64 0, i32 1
  %637 = load i32, ptr %636, align 8, !tbaa !42
  %638 = icmp ugt i32 %637, 1
  br i1 %638, label %639, label %641

639:                                              ; preds = %635
  %640 = add i32 %637, -1
  store i32 %640, ptr %636, align 8, !tbaa !42
  br label %642

641:                                              ; preds = %635
  call void @Perl_sv_free2(ptr noundef nonnull %633, i32 noundef %637) #29
  br label %642

642:                                              ; preds = %631, %639, %641
  store ptr null, ptr @PL_compcv, align 8, !tbaa !6
  br label %1190

643:                                              ; preds = %505
  br i1 %230, label %759, label %644

644:                                              ; preds = %643
  %645 = load ptr, ptr %320, align 8, !tbaa !10
  %646 = getelementptr inbounds %struct.xpvcv, ptr %645, i64 0, i32 12
  %647 = load i32, ptr %646, align 4, !tbaa !14
  %648 = and i32 %647, 131075
  %649 = getelementptr inbounds %struct.xpvcv, ptr %645, i64 0, i32 9
  %650 = load <2 x ptr>, ptr %649, align 8, !tbaa !13
  %651 = and i32 %647, 2064
  %652 = getelementptr inbounds %struct.xpvcv, ptr %645, i64 0, i32 5
  %653 = load ptr, ptr %652, align 8, !tbaa !13
  %654 = load i32, ptr %403, align 4, !tbaa !133
  %655 = and i32 %654, 255
  %656 = icmp eq i32 %655, 9
  br i1 %656, label %657, label %661

657:                                              ; preds = %644
  call void @Perl_cvgv_set(ptr noundef nonnull %320, ptr noundef nonnull %130) #29
  %658 = load ptr, ptr %320, align 8, !tbaa !10
  %659 = getelementptr inbounds %struct.xpvcv, ptr %658, i64 0, i32 12
  %660 = load i32, ptr %659, align 4, !tbaa !14
  br label %684

661:                                              ; preds = %644
  %662 = load i64, ptr %11, align 8
  %663 = call fastcc i32 @S_perl_hash_one_at_a_time_hard(ptr noundef %128, i64 noundef %662)
  %664 = and i32 %647, 32768
  %665 = icmp eq i32 %664, 0
  br i1 %665, label %672, label %666

666:                                              ; preds = %661
  %667 = getelementptr inbounds %struct.xpvcv, ptr %645, i64 0, i32 7
  %668 = load ptr, ptr %667, align 8, !tbaa !13
  %669 = icmp eq ptr %668, null
  br i1 %669, label %672, label %670

670:                                              ; preds = %666
  call void @Perl_unshare_hek(ptr noundef nonnull %668) #29
  %671 = load i64, ptr %11, align 8
  br label %672

672:                                              ; preds = %661, %666, %670
  %673 = phi i64 [ %662, %661 ], [ %662, %666 ], [ %671, %670 ]
  %674 = sub nsw i64 0, %673
  %675 = select i1 %127, i64 %674, i64 %673
  %676 = trunc i64 %675 to i32
  %677 = call ptr @Perl_share_hek(ptr noundef %128, i32 noundef %676, i32 noundef %663) #29
  %678 = load ptr, ptr %320, align 8, !tbaa !10
  %679 = getelementptr inbounds %struct.xpvcv, ptr %678, i64 0, i32 7
  store ptr %677, ptr %679, align 8, !tbaa !13
  %680 = load ptr, ptr %320, align 8, !tbaa !10
  %681 = getelementptr inbounds %struct.xpvcv, ptr %680, i64 0, i32 12
  %682 = load i32, ptr %681, align 4, !tbaa !14
  %683 = or i32 %682, 32768
  store i32 %683, ptr %681, align 4, !tbaa !14
  br label %684

684:                                              ; preds = %672, %657
  %685 = phi i32 [ %683, %672 ], [ %660, %657 ]
  %686 = phi ptr [ %680, %672 ], [ %658, %657 ]
  %687 = getelementptr inbounds %struct.cv, ptr %320, i64 0, i32 2
  %688 = load i32, ptr %687, align 4, !tbaa !263
  %689 = and i32 %688, -17409
  store i32 %689, ptr %687, align 4, !tbaa !263
  %690 = load ptr, ptr @PL_compcv, align 8, !tbaa !6
  %691 = load ptr, ptr %690, align 8, !tbaa !10
  %692 = getelementptr inbounds %struct.xpvcv, ptr %691, i64 0, i32 12
  %693 = load i32, ptr %692, align 4, !tbaa !14
  %694 = or i32 %693, %648
  %695 = getelementptr inbounds %struct.xpvcv, ptr %686, i64 0, i32 12
  %696 = and i32 %685, 32768
  %697 = or i32 %694, %696
  store i32 %697, ptr %695, align 4, !tbaa !14
  %698 = getelementptr inbounds %struct.xpvcv, ptr %691, i64 0, i32 10
  %699 = load ptr, ptr %698, align 8, !tbaa !158
  %700 = getelementptr inbounds %struct.xpvcv, ptr %686, i64 0, i32 10
  store ptr %699, ptr %700, align 8, !tbaa !158
  %701 = getelementptr inbounds %struct.xpvcv, ptr %691, i64 0, i32 11
  %702 = load i32, ptr %701, align 8, !tbaa !264
  %703 = getelementptr inbounds %struct.xpvcv, ptr %686, i64 0, i32 11
  store i32 %702, ptr %703, align 8, !tbaa !264
  %704 = getelementptr inbounds %struct.xpvcv, ptr %691, i64 0, i32 9
  %705 = load ptr, ptr %704, align 8, !tbaa !13
  %706 = getelementptr inbounds %struct.xpvcv, ptr %686, i64 0, i32 9
  store ptr %705, ptr %706, align 8, !tbaa !13
  %707 = load ptr, ptr %690, align 8, !tbaa !10
  %708 = getelementptr inbounds %struct.xpvcv, ptr %707, i64 0, i32 9
  store <2 x ptr> %650, ptr %708, align 8, !tbaa !13
  %709 = load ptr, ptr %690, align 8, !tbaa !10
  %710 = getelementptr inbounds %struct.xpvcv, ptr %709, i64 0, i32 5
  %711 = load ptr, ptr %710, align 8, !tbaa !13
  %712 = load ptr, ptr %320, align 8, !tbaa !10
  %713 = getelementptr inbounds %struct.xpvcv, ptr %712, i64 0, i32 5
  store ptr %711, ptr %713, align 8, !tbaa !13
  %714 = load ptr, ptr %690, align 8, !tbaa !10
  %715 = getelementptr inbounds %struct.xpvcv, ptr %714, i64 0, i32 5
  store ptr %653, ptr %715, align 8, !tbaa !13
  %716 = load ptr, ptr %690, align 8, !tbaa !10
  %717 = getelementptr inbounds %struct.xpvcv, ptr %716, i64 0, i32 12
  %718 = load i32, ptr %717, align 4, !tbaa !14
  %719 = and i32 %718, -2065
  %720 = or i32 %719, %651
  store i32 %720, ptr %717, align 4, !tbaa !14
  %721 = load ptr, ptr %320, align 8, !tbaa !10
  %722 = getelementptr inbounds %struct.xpvcv, ptr %721, i64 0, i32 8
  %723 = load ptr, ptr %722, align 8, !tbaa !265
  %724 = icmp eq ptr %723, null
  br i1 %724, label %731, label %725

725:                                              ; preds = %684
  %726 = getelementptr inbounds %struct.xpvcv, ptr %721, i64 0, i32 12
  %727 = load i32, ptr %726, align 4, !tbaa !14
  %728 = and i32 %727, 4096
  %729 = icmp eq i32 %728, 0
  br i1 %729, label %731, label %730

730:                                              ; preds = %725
  call void @Perl_safesysfree(ptr noundef nonnull %723) #29
  br label %731

731:                                              ; preds = %730, %725, %684
  %732 = load ptr, ptr @PL_curcop, align 8, !tbaa !6
  %733 = getelementptr inbounds %struct.cop, ptr %732, i64 0, i32 9
  %734 = load ptr, ptr %733, align 8, !tbaa !40
  %735 = icmp eq ptr %734, null
  br i1 %735, label %741, label %736

736:                                              ; preds = %731
  %737 = load ptr, ptr %734, align 8, !tbaa !169
  %738 = getelementptr inbounds %struct.xpvgv, ptr %737, i64 0, i32 4
  %739 = load ptr, ptr %738, align 8, !tbaa !13
  %740 = getelementptr inbounds %struct.hek, ptr %739, i64 0, i32 2, i64 2
  br label %741

741:                                              ; preds = %731, %736
  %742 = phi ptr [ %740, %736 ], [ null, %731 ]
  %743 = load ptr, ptr %320, align 8, !tbaa !10
  %744 = getelementptr inbounds %struct.xpvcv, ptr %743, i64 0, i32 8
  store ptr %742, ptr %744, align 8, !tbaa !265
  %745 = getelementptr inbounds %struct.xpvcv, ptr %743, i64 0, i32 12
  %746 = load i32, ptr %745, align 4, !tbaa !14
  %747 = and i32 %746, -4097
  store i32 %747, ptr %745, align 4, !tbaa !14
  %748 = load ptr, ptr @PL_curstash, align 8, !tbaa !6
  call void @Perl_cvstash_set(ptr noundef nonnull %320, ptr noundef %748) #29
  %749 = load ptr, ptr %320, align 8, !tbaa !10
  %750 = getelementptr inbounds %struct.xpvcv, ptr %749, i64 0, i32 9
  %751 = load ptr, ptr %750, align 8, !tbaa !13
  %752 = load ptr, ptr @PL_compcv, align 8, !tbaa !6
  call void @Perl_pad_fixup_inner_anons(ptr noundef %751, ptr noundef %752, ptr noundef nonnull %320) #29
  %753 = load i32, ptr @PL_perldb, align 4, !tbaa !52
  %754 = and i32 %753, 8
  %755 = icmp eq i32 %754, 0
  br i1 %755, label %769, label %756

756:                                              ; preds = %741
  %757 = load i32, ptr @PL_sub_generation, align 4, !tbaa !52
  %758 = add i32 %757, 1
  store i32 %758, ptr @PL_sub_generation, align 4, !tbaa !52
  br label %769

759:                                              ; preds = %643
  %760 = load ptr, ptr @PL_compcv, align 8, !tbaa !6
  %761 = load ptr, ptr %760, align 8, !tbaa !10
  %762 = getelementptr inbounds %struct.xpvcv, ptr %761, i64 0, i32 12
  %763 = load i32, ptr %762, align 4, !tbaa !14
  %764 = and i32 %763, 131075
  %765 = load ptr, ptr %320, align 8, !tbaa !10
  %766 = getelementptr inbounds %struct.xpvcv, ptr %765, i64 0, i32 12
  %767 = load i32, ptr %766, align 4, !tbaa !14
  %768 = or i32 %767, %764
  store i32 %768, ptr %766, align 4, !tbaa !14
  br label %769

769:                                              ; preds = %741, %756, %759
  %770 = load ptr, ptr @PL_compcv, align 8, !tbaa !6
  %771 = icmp eq ptr %770, null
  br i1 %771, label %779, label %772

772:                                              ; preds = %769
  %773 = getelementptr inbounds %struct.sv, ptr %770, i64 0, i32 1
  %774 = load i32, ptr %773, align 8, !tbaa !42
  %775 = icmp ugt i32 %774, 1
  br i1 %775, label %776, label %778

776:                                              ; preds = %772
  %777 = add i32 %774, -1
  store i32 %777, ptr %773, align 8, !tbaa !42
  br label %779

778:                                              ; preds = %772
  call void @Perl_sv_free2(ptr noundef nonnull %770, i32 noundef %774) #29
  br label %779

779:                                              ; preds = %769, %776, %778
  store ptr %320, ptr @PL_compcv, align 8, !tbaa !6
  br label %894

780:                                              ; preds = %508, %511
  %781 = load ptr, ptr @PL_compcv, align 8, !tbaa !6
  br i1 %293, label %894, label %782

782:                                              ; preds = %780
  %783 = load i32, ptr %403, align 4, !tbaa !52
  %784 = and i32 %783, 255
  %785 = icmp eq i32 %784, 9
  br i1 %785, label %786, label %833

786:                                              ; preds = %782
  %787 = getelementptr inbounds %struct.gv, ptr %130, i64 0, i32 3
  %788 = load ptr, ptr %787, align 8, !tbaa !13
  %789 = getelementptr inbounds %struct.gp, ptr %788, i64 0, i32 2
  store ptr %781, ptr %789, align 8, !tbaa !147
  %790 = load ptr, ptr %787, align 8, !tbaa !13
  %791 = getelementptr inbounds %struct.gp, ptr %790, i64 0, i32 3
  store i32 0, ptr %791, align 8, !tbaa !260
  %792 = load ptr, ptr %130, align 8, !tbaa !169
  %793 = getelementptr inbounds %struct.xpvgv, ptr %792, i64 0, i32 5
  %794 = load ptr, ptr %793, align 8, !tbaa !13
  %795 = getelementptr inbounds %struct.hv, ptr %794, i64 0, i32 2
  %796 = load i32, ptr %795, align 4, !tbaa !56
  %797 = and i32 %796, 33554432
  %798 = icmp eq i32 %797, 0
  br i1 %798, label %894, label %799

799:                                              ; preds = %786
  %800 = getelementptr inbounds %struct.hv, ptr %794, i64 0, i32 3
  %801 = load ptr, ptr %800, align 8, !tbaa !13
  %802 = load ptr, ptr %794, align 8, !tbaa !139
  %803 = getelementptr inbounds %struct.xpvhv, ptr %802, i64 0, i32 3
  %804 = load i64, ptr %803, align 8, !tbaa !140
  %805 = add i64 %804, 1
  %806 = getelementptr inbounds ptr, ptr %801, i64 %805
  %807 = load ptr, ptr %806, align 8, !tbaa !13
  %808 = icmp eq ptr %807, null
  br i1 %808, label %894, label %809

809:                                              ; preds = %799
  %810 = getelementptr inbounds %struct.xpvhv_aux, ptr %806, i64 0, i32 4
  %811 = load i32, ptr %810, align 4, !tbaa !142
  %812 = icmp sgt i32 %811, 0
  br i1 %812, label %813, label %816

813:                                              ; preds = %809
  %814 = load ptr, ptr %807, align 8, !tbaa !6
  %815 = icmp eq ptr %814, null
  br i1 %815, label %894, label %824

816:                                              ; preds = %809
  %817 = icmp slt i32 %811, -1
  br i1 %817, label %818, label %822

818:                                              ; preds = %816
  %819 = getelementptr inbounds ptr, ptr %807, i64 1
  %820 = load ptr, ptr %819, align 8, !tbaa !6
  %821 = icmp eq ptr %820, null
  br i1 %821, label %894, label %824

822:                                              ; preds = %816
  %823 = icmp eq i32 %811, -1
  br i1 %823, label %894, label %824

824:                                              ; preds = %822, %818, %813
  %825 = load ptr, ptr %787, align 8, !tbaa !13
  %826 = getelementptr inbounds %struct.gp, ptr %825, i64 0, i32 4
  %827 = load i32, ptr %826, align 4, !tbaa !266
  %828 = icmp ugt i32 %827, 1
  br i1 %828, label %829, label %832

829:                                              ; preds = %824
  %830 = load i32, ptr @PL_sub_generation, align 4, !tbaa !52
  %831 = add i32 %830, 1
  store i32 %831, ptr @PL_sub_generation, align 4, !tbaa !52
  br label %894

832:                                              ; preds = %824
  call void @Perl_mro_method_changed_in(ptr noundef nonnull %794) #29
  br label %894

833:                                              ; preds = %782
  %834 = and i32 %783, 2048
  %835 = icmp eq i32 %834, 0
  br i1 %835, label %836, label %892

836:                                              ; preds = %833
  %837 = and i32 %783, 427886592
  %838 = icmp eq i32 %837, 0
  br i1 %838, label %842, label %839

839:                                              ; preds = %836
  call void @Perl_sv_force_normal_flags(ptr noundef nonnull %130, i32 noundef 4) #29
  %840 = load i32, ptr %403, align 4, !tbaa !84
  %841 = and i32 %840, 255
  br label %842

842:                                              ; preds = %836, %839
  %843 = phi i32 [ %784, %836 ], [ %841, %839 ]
  %844 = phi i32 [ %783, %836 ], [ %840, %839 ]
  %845 = icmp ugt i32 %843, 2
  %846 = icmp eq i32 %843, 1
  %847 = or i1 %845, %846
  br i1 %847, label %849, label %848

848:                                              ; preds = %842
  call void @Perl_sv_upgrade(ptr noundef nonnull %130, i32 noundef 1) #29
  br label %881

849:                                              ; preds = %842
  br i1 %845, label %850, label %881

850:                                              ; preds = %849
  %851 = load ptr, ptr %130, align 8, !tbaa !85
  %852 = getelementptr inbounds %struct.xpv, ptr %851, i64 0, i32 3
  %853 = load i64, ptr %852, align 8, !tbaa !13
  %854 = icmp eq i64 %853, 0
  br i1 %854, label %876, label %855

855:                                              ; preds = %850
  %856 = and i32 %844, 33554432
  %857 = icmp eq i32 %856, 0
  %858 = getelementptr inbounds %struct.sv, ptr %130, i64 0, i32 3
  %859 = load ptr, ptr %858, align 8, !tbaa !13
  br i1 %857, label %873, label %860

860:                                              ; preds = %855
  %861 = getelementptr inbounds i8, ptr %859, i64 -1
  %862 = load i8, ptr %861, align 1, !tbaa !13
  %863 = zext i8 %862 to i64
  %864 = icmp eq i8 %862, 0
  br i1 %864, label %865, label %868

865:                                              ; preds = %860
  %866 = getelementptr inbounds i8, ptr %859, i64 -9
  %867 = load i64, ptr %866, align 1
  br label %868

868:                                              ; preds = %865, %860
  %869 = phi i64 [ %863, %860 ], [ %867, %865 ]
  %870 = sub i64 0, %869
  %871 = getelementptr inbounds i8, ptr %859, i64 %870
  store ptr %871, ptr %858, align 8, !tbaa !13
  %872 = and i32 %844, -33554433
  store i32 %872, ptr %403, align 4, !tbaa !84
  br label %873

873:                                              ; preds = %855, %868
  %874 = phi ptr [ %871, %868 ], [ %859, %855 ]
  call void @Perl_safesysfree(ptr noundef %874) #29
  %875 = load ptr, ptr %130, align 8, !tbaa !85
  br label %876

876:                                              ; preds = %850, %873
  %877 = phi ptr [ %851, %850 ], [ %875, %873 ]
  %878 = getelementptr inbounds %struct.xpv, ptr %877, i64 0, i32 3
  store i64 0, ptr %878, align 8, !tbaa !13
  %879 = load ptr, ptr %130, align 8, !tbaa !85
  %880 = getelementptr inbounds %struct.xpv, ptr %879, i64 0, i32 2
  store i64 0, ptr %880, align 8, !tbaa !86
  br label %881

881:                                              ; preds = %849, %876, %848
  %882 = load i32, ptr %403, align 4, !tbaa !84
  %883 = and i32 %882, 1610547455
  store i32 %883, ptr %403, align 4, !tbaa !84
  %884 = and i32 %882, 33554432
  %885 = icmp eq i32 %884, 0
  br i1 %885, label %889, label %886

886:                                              ; preds = %881
  %887 = call i32 @Perl_sv_backoff(ptr noundef nonnull %130) #29
  %888 = load i32, ptr %403, align 4, !tbaa !133
  br label %889

889:                                              ; preds = %886, %881
  %890 = phi i32 [ %888, %886 ], [ %883, %881 ]
  %891 = or i32 %890, 2048
  store i32 %891, ptr %403, align 4, !tbaa !133
  br label %892

892:                                              ; preds = %833, %889
  %893 = getelementptr inbounds %struct.gv, ptr %130, i64 0, i32 3
  store ptr %781, ptr %893, align 8, !tbaa !13
  br label %894

894:                                              ; preds = %780, %829, %832, %786, %799, %822, %818, %813, %892, %779
  %895 = phi ptr [ %320, %779 ], [ %781, %829 ], [ %781, %832 ], [ %781, %813 ], [ %781, %818 ], [ %781, %822 ], [ %781, %799 ], [ %781, %786 ], [ %781, %892 ], [ %781, %780 ]
  %896 = load ptr, ptr %895, align 8, !tbaa !10
  %897 = getelementptr inbounds %struct.xpvcv, ptr %896, i64 0, i32 7
  %898 = load ptr, ptr %897, align 8, !tbaa !13
  %899 = icmp eq ptr %898, null
  br i1 %899, label %900, label %936

900:                                              ; preds = %894
  %901 = load i32, ptr %403, align 4, !tbaa !133
  %902 = and i32 %901, 255
  %903 = icmp eq i32 %902, 9
  br i1 %903, label %904, label %905

904:                                              ; preds = %900
  call void @Perl_cvgv_set(ptr noundef nonnull %895, ptr noundef nonnull %130) #29
  br label %918

905:                                              ; preds = %900
  %906 = load i64, ptr %11, align 8
  %907 = call fastcc i32 @S_perl_hash_one_at_a_time_hard(ptr noundef %128, i64 noundef %906)
  %908 = sub nsw i64 0, %906
  %909 = select i1 %127, i64 %908, i64 %906
  %910 = trunc i64 %909 to i32
  %911 = call ptr @Perl_share_hek(ptr noundef %128, i32 noundef %910, i32 noundef %907) #29
  %912 = load ptr, ptr %895, align 8, !tbaa !10
  %913 = getelementptr inbounds %struct.xpvcv, ptr %912, i64 0, i32 7
  store ptr %911, ptr %913, align 8, !tbaa !13
  %914 = load ptr, ptr %895, align 8, !tbaa !10
  %915 = getelementptr inbounds %struct.xpvcv, ptr %914, i64 0, i32 12
  %916 = load i32, ptr %915, align 4, !tbaa !14
  %917 = or i32 %916, 32768
  store i32 %917, ptr %915, align 4, !tbaa !14
  br label %918

918:                                              ; preds = %905, %904
  %919 = load ptr, ptr @PL_curcop, align 8, !tbaa !6
  %920 = getelementptr inbounds %struct.cop, ptr %919, i64 0, i32 9
  %921 = load ptr, ptr %920, align 8, !tbaa !40
  %922 = icmp eq ptr %921, null
  br i1 %922, label %928, label %923

923:                                              ; preds = %918
  %924 = load ptr, ptr %921, align 8, !tbaa !169
  %925 = getelementptr inbounds %struct.xpvgv, ptr %924, i64 0, i32 4
  %926 = load ptr, ptr %925, align 8, !tbaa !13
  %927 = getelementptr inbounds %struct.hek, ptr %926, i64 0, i32 2, i64 2
  br label %928

928:                                              ; preds = %918, %923
  %929 = phi ptr [ %927, %923 ], [ null, %918 ]
  %930 = load ptr, ptr %895, align 8, !tbaa !10
  %931 = getelementptr inbounds %struct.xpvcv, ptr %930, i64 0, i32 8
  store ptr %929, ptr %931, align 8, !tbaa !265
  %932 = getelementptr inbounds %struct.xpvcv, ptr %930, i64 0, i32 12
  %933 = load i32, ptr %932, align 4, !tbaa !14
  %934 = and i32 %933, -4097
  store i32 %934, ptr %932, align 4, !tbaa !14
  %935 = load ptr, ptr @PL_curstash, align 8, !tbaa !6
  call void @Perl_cvstash_set(ptr noundef nonnull %895, ptr noundef %935) #29
  br label %936

936:                                              ; preds = %894, %928
  br i1 %399, label %937, label %944

937:                                              ; preds = %936
  %938 = load i64, ptr %9, align 8, !tbaa !88
  call void @Perl_sv_setpvn(ptr noundef nonnull %895, ptr noundef nonnull %170, i64 noundef %938) #29
  %939 = icmp eq i32 %169, 0
  br i1 %939, label %944, label %940

940:                                              ; preds = %937
  %941 = getelementptr inbounds %struct.sv, ptr %895, i64 0, i32 2
  %942 = load i32, ptr %941, align 4, !tbaa !84
  %943 = or i32 %942, 536870912
  store i32 %943, ptr %941, align 4, !tbaa !84
  br label %944

944:                                              ; preds = %937, %940, %936
  br i1 %230, label %1002, label %945

945:                                              ; preds = %944
  %946 = load i32, ptr @PL_breakable_sub_gen, align 4, !tbaa !52
  %947 = add i32 %946, 1
  store i32 %947, ptr @PL_breakable_sub_gen, align 4, !tbaa !52
  %948 = load ptr, ptr %895, align 8, !tbaa !10
  %949 = getelementptr inbounds %struct.xpvcv, ptr %948, i64 0, i32 6
  store ptr %400, ptr %949, align 8, !tbaa !13
  %950 = load ptr, ptr %895, align 8, !tbaa !10
  %951 = getelementptr inbounds %struct.xpvcv, ptr %950, i64 0, i32 6
  %952 = load ptr, ptr %951, align 8, !tbaa !13
  %953 = getelementptr inbounds %struct.op, ptr %952, i64 0, i32 6
  %954 = load i8, ptr %953, align 1, !tbaa !33
  %955 = or i8 %954, 64
  store i8 %955, ptr %953, align 1, !tbaa !33
  %956 = load ptr, ptr %951, align 8, !tbaa !13
  %957 = getelementptr inbounds %struct.op, ptr %956, i64 0, i32 3
  store i64 1, ptr %957, align 8, !tbaa !34
  %958 = getelementptr inbounds %struct.xpvcv, ptr %950, i64 0, i32 12
  %959 = load i32, ptr %958, align 4, !tbaa !14
  %960 = and i32 %959, -2049
  store i32 %960, ptr %958, align 4, !tbaa !14
  %961 = getelementptr inbounds %struct.xpvcv, ptr %950, i64 0, i32 5
  %962 = load ptr, ptr %961, align 8, !tbaa !13
  %963 = getelementptr inbounds %struct.opslab, ptr %962, i64 0, i32 3
  %964 = load i64, ptr %963, align 8, !tbaa !21
  %965 = icmp eq i64 %964, 1
  br i1 %965, label %966, label %971

966:                                              ; preds = %945, %966
  %967 = phi ptr [ %969, %966 ], [ %962, %945 ]
  %968 = getelementptr inbounds %struct.opslab, ptr %967, i64 0, i32 1
  %969 = load ptr, ptr %968, align 8, !tbaa !26
  call void @free(ptr noundef nonnull %967) #29
  %970 = icmp eq ptr %969, null
  br i1 %970, label %973, label %966, !llvm.loop !30

971:                                              ; preds = %945
  %972 = add i64 %964, -1
  store i64 %972, ptr %963, align 8, !tbaa !21
  br label %975

973:                                              ; preds = %966
  %974 = load ptr, ptr %895, align 8, !tbaa !10
  br label %975

975:                                              ; preds = %973, %971
  %976 = phi ptr [ %974, %973 ], [ %950, %971 ]
  %977 = getelementptr inbounds %struct.xpvcv, ptr %976, i64 0, i32 5
  store ptr %401, ptr %977, align 8, !tbaa !13
  %978 = load ptr, ptr @PL_peepp, align 8, !tbaa !6
  call void %978(ptr noundef %401) #29
  %979 = load ptr, ptr %895, align 8, !tbaa !10
  %980 = getelementptr inbounds %struct.xpvcv, ptr %979, i64 0, i32 6
  %981 = load ptr, ptr %980, align 8, !tbaa !13
  call void @Perl_push_scope() #29
  call void @Perl_save_vptr(ptr noundef nonnull @PL_curcop) #29
  call fastcc void @S_finalize_op(ptr noundef %981)
  call void @Perl_pop_scope() #29
  %982 = load ptr, ptr %895, align 8, !tbaa !10
  %983 = getelementptr inbounds %struct.xpvcv, ptr %982, i64 0, i32 5
  %984 = load ptr, ptr %983, align 8, !tbaa !6
  %985 = icmp eq ptr %984, null
  br i1 %985, label %996, label %986

986:                                              ; preds = %975, %991
  %987 = phi ptr [ %992, %991 ], [ %984, %975 ]
  %988 = getelementptr inbounds %struct.op, ptr %987, i64 0, i32 4
  %989 = load i16, ptr %988, align 8
  %990 = and i16 %989, 511
  switch i16 %990, label %994 [
    i16 0, label %991
    i16 198, label %991
    i16 2, label %991
    i16 192, label %991
  ]

991:                                              ; preds = %986, %986, %986, %986
  %992 = load ptr, ptr %987, align 8, !tbaa !25
  store ptr %992, ptr %983, align 8, !tbaa !6
  %993 = icmp eq ptr %992, null
  br i1 %993, label %994, label %986, !llvm.loop !122

994:                                              ; preds = %991, %986
  %995 = load ptr, ptr %895, align 8, !tbaa !10
  br label %996

996:                                              ; preds = %994, %975
  %997 = phi ptr [ %995, %994 ], [ %982, %975 ]
  %998 = getelementptr inbounds %struct.xpvcv, ptr %997, i64 0, i32 12
  %999 = load i32, ptr %998, align 4, !tbaa !14
  %1000 = lshr i32 %999, 5
  %1001 = and i32 %1000, 1
  call void @Perl_pad_tidy(i32 noundef %1001) #29
  br label %1002

1002:                                             ; preds = %944, %996
  br i1 %183, label %1027, label %1003

1003:                                             ; preds = %502, %1002
  %1004 = phi ptr [ %895, %1002 ], [ %320, %502 ]
  br i1 %293, label %1019, label %1005

1005:                                             ; preds = %1003
  %1006 = load ptr, ptr %1004, align 8, !tbaa !10
  %1007 = getelementptr inbounds %struct.xpvcv, ptr %1006, i64 0, i32 12
  %1008 = load i32, ptr %1007, align 4, !tbaa !14
  %1009 = and i32 %1008, 32768
  %1010 = icmp eq i32 %1009, 0
  br i1 %1010, label %1011, label %1024

1011:                                             ; preds = %1005
  %1012 = getelementptr inbounds %struct.xpvcv, ptr %1006, i64 0, i32 7
  %1013 = load ptr, ptr %1012, align 8, !tbaa !13
  %1014 = load ptr, ptr %1013, align 8, !tbaa !169
  %1015 = getelementptr inbounds %struct.xpvgv, ptr %1014, i64 0, i32 5
  %1016 = load ptr, ptr %1015, align 8, !tbaa !13
  %1017 = icmp eq ptr %1016, null
  %1018 = select i1 %1017, ptr @PL_curstash, ptr %1015
  br label %1024

1019:                                             ; preds = %1003
  %1020 = load ptr, ptr @PL_curstash, align 8, !tbaa !13
  call void @Perl_save_pushptr(ptr noundef nonnull %1004, i32 noundef 11) #29
  call fastcc void @S_apply_attrs(ptr noundef %1020, ptr noundef nonnull %1004, ptr noundef nonnull %182)
  %1021 = getelementptr inbounds %struct.sv, ptr %1004, i64 0, i32 1
  %1022 = load i32, ptr %1021, align 8, !tbaa !42
  %1023 = add i32 %1022, 1
  store i32 %1023, ptr %1021, align 8, !tbaa !42
  br label %1027

1024:                                             ; preds = %1011, %1005
  %1025 = phi ptr [ @PL_curstash, %1005 ], [ %1018, %1011 ]
  %1026 = load ptr, ptr %1025, align 8, !tbaa !13
  call fastcc void @S_apply_attrs(ptr noundef %1026, ptr noundef nonnull %1004, ptr noundef nonnull %182)
  br label %1027

1027:                                             ; preds = %1019, %1024, %1002
  %1028 = phi ptr [ %1004, %1019 ], [ %1004, %1024 ], [ %895, %1002 ]
  %1029 = or i1 %230, %129
  br i1 %1029, label %1190, label %1030

1030:                                             ; preds = %1027
  %1031 = load i32, ptr @PL_perldb, align 4, !tbaa !52
  %1032 = and i32 %1031, 16
  %1033 = icmp eq i32 %1032, 0
  br i1 %1033, label %1137, label %1034

1034:                                             ; preds = %1030
  %1035 = load ptr, ptr @PL_curstash, align 8, !tbaa !6
  %1036 = load ptr, ptr @PL_debstash, align 8, !tbaa !6
  %1037 = icmp eq ptr %1035, %1036
  br i1 %1037, label %1137, label %1038

1038:                                             ; preds = %1034
  %1039 = call ptr @Perl_cv_name(ptr noundef nonnull %1028, ptr noundef null, i32 noundef 0) #29
  %1040 = call ptr @Perl_gv_fetchpvn_flags(ptr noundef nonnull @.str.58, i64 noundef 13, i32 noundef 2, i32 noundef 12) #29
  %1041 = load ptr, ptr @PL_curcop, align 8, !tbaa !6
  %1042 = getelementptr inbounds %struct.cop, ptr %1041, i64 0, i32 9
  %1043 = load ptr, ptr %1042, align 8, !tbaa !40
  %1044 = icmp eq ptr %1043, null
  br i1 %1044, label %1050, label %1045

1045:                                             ; preds = %1038
  %1046 = load ptr, ptr %1043, align 8, !tbaa !169
  %1047 = getelementptr inbounds %struct.xpvgv, ptr %1046, i64 0, i32 4
  %1048 = load ptr, ptr %1047, align 8, !tbaa !13
  %1049 = getelementptr inbounds %struct.hek, ptr %1048, i64 0, i32 2, i64 2
  br label %1050

1050:                                             ; preds = %1038, %1045
  %1051 = phi ptr [ %1049, %1045 ], [ null, %1038 ]
  %1052 = load i32, ptr @PL_subline, align 4, !tbaa !52
  %1053 = sext i32 %1052 to i64
  %1054 = getelementptr inbounds %struct.cop, ptr %1041, i64 0, i32 7
  %1055 = load i32, ptr %1054, align 4, !tbaa !146
  %1056 = zext i32 %1055 to i64
  %1057 = call ptr (ptr, ...) @Perl_newSVpvf(ptr noundef nonnull @.str.103, ptr noundef %1051, i64 noundef %1053, i64 noundef %1056) #29
  %1058 = load ptr, ptr @PL_DBsub, align 8, !tbaa !6
  %1059 = getelementptr inbounds %struct.gv, ptr %1058, i64 0, i32 3
  %1060 = load ptr, ptr %1059, align 8, !tbaa !13
  %1061 = getelementptr inbounds %struct.gp, ptr %1060, i64 0, i32 5
  %1062 = load ptr, ptr %1061, align 8, !tbaa !134
  %1063 = getelementptr inbounds %struct.sv, ptr %1039, i64 0, i32 3
  %1064 = load ptr, ptr %1063, align 8, !tbaa !13
  %1065 = getelementptr inbounds %struct.sv, ptr %1039, i64 0, i32 2
  %1066 = load i32, ptr %1065, align 4, !tbaa !84
  %1067 = and i32 %1066, 536870912
  %1068 = icmp eq i32 %1067, 0
  %1069 = load ptr, ptr %1039, align 8, !tbaa !85
  %1070 = getelementptr inbounds %struct.xpv, ptr %1069, i64 0, i32 2
  %1071 = load i64, ptr %1070, align 8, !tbaa !86
  %1072 = trunc i64 %1071 to i32
  %1073 = sub nsw i32 0, %1072
  %1074 = select i1 %1068, i32 %1072, i32 %1073
  %1075 = call ptr @Perl_hv_common_key_len(ptr noundef %1062, ptr noundef %1064, i32 noundef %1074, i32 noundef 36, ptr noundef %1057, i32 noundef 0) #29
  %1076 = getelementptr inbounds %struct.gv, ptr %1040, i64 0, i32 3
  %1077 = load ptr, ptr %1076, align 8, !tbaa !13
  %1078 = getelementptr inbounds %struct.gp, ptr %1077, i64 0, i32 5
  %1079 = load ptr, ptr %1078, align 8, !tbaa !134
  %1080 = icmp eq ptr %1079, null
  br i1 %1080, label %1081, label %1087

1081:                                             ; preds = %1050
  %1082 = call ptr @Perl_gv_add_by_type(ptr noundef nonnull %1040, i32 noundef 12) #29
  %1083 = getelementptr inbounds %struct.gv, ptr %1082, i64 0, i32 3
  %1084 = load ptr, ptr %1083, align 8, !tbaa !13
  %1085 = getelementptr inbounds %struct.gp, ptr %1084, i64 0, i32 5
  %1086 = load ptr, ptr %1085, align 8, !tbaa !134
  br label %1087

1087:                                             ; preds = %1050, %1081
  %1088 = phi ptr [ %1086, %1081 ], [ %1079, %1050 ]
  %1089 = load ptr, ptr %1088, align 8, !tbaa !139
  %1090 = getelementptr inbounds %struct.xpvhv, ptr %1089, i64 0, i32 2
  %1091 = load i64, ptr %1090, align 8, !tbaa !267
  %1092 = icmp eq i64 %1091, 0
  br i1 %1092, label %1137, label %1093

1093:                                             ; preds = %1087
  %1094 = load ptr, ptr %1063, align 8, !tbaa !13
  %1095 = load i32, ptr %1065, align 4, !tbaa !84
  %1096 = and i32 %1095, 536870912
  %1097 = icmp eq i32 %1096, 0
  %1098 = load ptr, ptr %1039, align 8, !tbaa !85
  %1099 = getelementptr inbounds %struct.xpv, ptr %1098, i64 0, i32 2
  %1100 = load i64, ptr %1099, align 8, !tbaa !86
  %1101 = trunc i64 %1100 to i32
  %1102 = sub nsw i32 0, %1101
  %1103 = select i1 %1097, i32 %1101, i32 %1102
  %1104 = call ptr @Perl_hv_common_key_len(ptr noundef nonnull %1088, ptr noundef %1094, i32 noundef %1103, i32 noundef 8, ptr noundef null, i32 noundef 0) #29
  %1105 = icmp eq ptr %1104, null
  br i1 %1105, label %1137, label %1106

1106:                                             ; preds = %1093
  %1107 = load ptr, ptr %1076, align 8, !tbaa !13
  %1108 = getelementptr inbounds %struct.gp, ptr %1107, i64 0, i32 2
  %1109 = load ptr, ptr %1108, align 8, !tbaa !147
  %1110 = icmp eq ptr %1109, null
  br i1 %1110, label %1137, label %1111

1111:                                             ; preds = %1106
  %1112 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !6
  %1113 = load ptr, ptr @PL_markstack_ptr, align 8, !tbaa !6
  %1114 = getelementptr inbounds i32, ptr %1113, i64 1
  store ptr %1114, ptr @PL_markstack_ptr, align 8, !tbaa !6
  %1115 = load ptr, ptr @PL_markstack_max, align 8, !tbaa !6
  %1116 = icmp eq ptr %1114, %1115
  br i1 %1116, label %1117, label %1119

1117:                                             ; preds = %1111
  %1118 = call ptr @Perl_markstack_grow() #29
  br label %1119

1119:                                             ; preds = %1111, %1117
  %1120 = phi ptr [ %1118, %1117 ], [ %1114, %1111 ]
  %1121 = load ptr, ptr @PL_stack_base, align 8, !tbaa !6
  %1122 = ptrtoint ptr %1112 to i64
  %1123 = ptrtoint ptr %1121 to i64
  %1124 = sub i64 %1122, %1123
  %1125 = lshr exact i64 %1124, 3
  %1126 = trunc i64 %1125 to i32
  store i32 %1126, ptr %1120, align 4, !tbaa !52
  %1127 = load ptr, ptr @PL_stack_max, align 8, !tbaa !6
  %1128 = ptrtoint ptr %1127 to i64
  %1129 = sub i64 %1128, %1122
  %1130 = icmp slt i64 %1129, 8
  br i1 %1130, label %1131, label %1133

1131:                                             ; preds = %1119
  %1132 = call ptr @Perl_stack_grow(ptr noundef %1112, ptr noundef %1112, i64 noundef 1) #29
  br label %1133

1133:                                             ; preds = %1119, %1131
  %1134 = phi ptr [ %1132, %1131 ], [ %1112, %1119 ]
  %1135 = getelementptr inbounds ptr, ptr %1134, i64 1
  store ptr %1039, ptr %1135, align 8, !tbaa !6
  store ptr %1135, ptr @PL_stack_sp, align 8, !tbaa !6
  %1136 = call i32 @Perl_call_sv(ptr noundef nonnull %1109, i32 noundef 4) #29
  br label %1137

1137:                                             ; preds = %1087, %1093, %1133, %1106, %1034, %1030
  br i1 %293, label %1190, label %1138

1138:                                             ; preds = %1137
  %1139 = load ptr, ptr @PL_parser, align 8, !tbaa !6
  %1140 = icmp eq ptr %1139, null
  br i1 %1140, label %1188, label %1141

1141:                                             ; preds = %1138
  %1142 = getelementptr inbounds %struct.yy_parser, ptr %1139, i64 0, i32 44
  %1143 = load i8, ptr %1142, align 1, !tbaa !105
  %1144 = icmp eq i8 %1143, 0
  br i1 %1144, label %1188, label %1145

1145:                                             ; preds = %1141
  %1146 = call ptr @strrchr(ptr noundef nonnull dereferenceable(1) %128, i32 noundef 58) #30
  %1147 = icmp eq ptr %1146, null
  %1148 = getelementptr inbounds i8, ptr %1146, i64 1
  %1149 = select i1 %1147, ptr %128, ptr %1148
  %1150 = load i8, ptr %1149, align 1, !tbaa !13
  switch i8 %1150, label %1190 [
    i8 66, label %1151
    i8 69, label %1154
    i8 85, label %1157
    i8 67, label %1160
    i8 73, label %1163
  ]

1151:                                             ; preds = %1145
  %1152 = call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %1149, ptr noundef nonnull dereferenceable(6) @.str.80) #30
  %1153 = icmp eq i32 %1152, 0
  br i1 %1153, label %1166, label %1190

1154:                                             ; preds = %1145
  %1155 = call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %1149, ptr noundef nonnull dereferenceable(4) @.str.114) #30
  %1156 = icmp eq i32 %1155, 0
  br i1 %1156, label %1166, label %1190

1157:                                             ; preds = %1145
  %1158 = call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %1149, ptr noundef nonnull dereferenceable(10) @.str.115) #30
  %1159 = icmp eq i32 %1158, 0
  br i1 %1159, label %1166, label %1190

1160:                                             ; preds = %1145
  %1161 = call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %1149, ptr noundef nonnull dereferenceable(6) @.str.116) #30
  %1162 = icmp eq i32 %1161, 0
  br i1 %1162, label %1166, label %1190

1163:                                             ; preds = %1145
  %1164 = call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %1149, ptr noundef nonnull dereferenceable(5) @.str.117) #30
  %1165 = icmp eq i32 %1164, 0
  br i1 %1165, label %1166, label %1190

1166:                                             ; preds = %1163, %1160, %1157, %1154, %1151
  %1167 = load i32, ptr %403, align 4, !tbaa !133
  %1168 = and i32 %1167, 255
  %1169 = icmp eq i32 %1168, 9
  br i1 %1169, label %1178, label %1170

1170:                                             ; preds = %1166
  %1171 = load ptr, ptr %1028, align 8, !tbaa !10
  %1172 = getelementptr inbounds %struct.xpvcv, ptr %1171, i64 0, i32 12
  %1173 = load i32, ptr %1172, align 4, !tbaa !14
  %1174 = and i32 %1173, 32768
  %1175 = icmp eq i32 %1174, 0
  br i1 %1175, label %1178, label %1176

1176:                                             ; preds = %1170
  %1177 = call ptr @Perl_cvgv_from_hek(ptr noundef nonnull %1028) #29
  br label %1178

1178:                                             ; preds = %1176, %1170, %1166
  %1179 = getelementptr inbounds %struct.gv, ptr %130, i64 0, i32 3
  %1180 = load ptr, ptr %1179, align 8, !tbaa !13
  %1181 = getelementptr inbounds %struct.gp, ptr %1180, i64 0, i32 2
  store ptr null, ptr %1181, align 8, !tbaa !147
  %1182 = getelementptr inbounds %struct.sv, ptr %1028, i64 0, i32 1
  %1183 = load i32, ptr %1182, align 8, !tbaa !42
  %1184 = icmp ugt i32 %1183, 1
  br i1 %1184, label %1185, label %1187

1185:                                             ; preds = %1178
  %1186 = add i32 %1183, -1
  store i32 %1186, ptr %1182, align 8, !tbaa !42
  br label %1190

1187:                                             ; preds = %1178
  call void @Perl_sv_free2(ptr noundef nonnull %1028, i32 noundef %1183) #29
  br label %1190

1188:                                             ; preds = %1141, %1138
  %1189 = call fastcc zeroext i1 @S_process_special_blocks(i32 noundef %0, ptr noundef nonnull %128, ptr noundef %130, ptr noundef nonnull %1028)
  br label %1190

1190:                                             ; preds = %1187, %1185, %1163, %1160, %1157, %1154, %1151, %1145, %503, %201, %1027, %204, %227, %215, %1188, %1137, %202, %642, %291
  %1191 = phi i1 [ false, %202 ], [ false, %503 ], [ %1189, %1188 ], [ false, %1137 ], [ false, %1027 ], [ false, %642 ], [ false, %291 ], [ false, %215 ], [ false, %227 ], [ false, %204 ], [ false, %201 ], [ false, %1145 ], [ false, %1151 ], [ false, %1154 ], [ false, %1157 ], [ false, %1160 ], [ false, %1163 ], [ false, %1185 ], [ false, %1187 ]
  %1192 = phi ptr [ null, %202 ], [ %320, %503 ], [ %1028, %1188 ], [ %1028, %1137 ], [ %1028, %1027 ], [ %632, %642 ], [ null, %291 ], [ null, %215 ], [ null, %227 ], [ null, %204 ], [ %191, %201 ], [ %1028, %1145 ], [ %1028, %1151 ], [ %1028, %1154 ], [ %1028, %1157 ], [ %1028, %1160 ], [ %1028, %1163 ], [ %1028, %1185 ], [ %1028, %1187 ]
  %1193 = load ptr, ptr @PL_parser, align 8, !tbaa !6
  %1194 = icmp eq ptr %1193, null
  br i1 %1194, label %1197, label %1195

1195:                                             ; preds = %1190
  %1196 = getelementptr inbounds %struct.yy_parser, ptr %1193, i64 0, i32 41
  store i32 -1, ptr %1196, align 8, !tbaa !238
  br label %1197

1197:                                             ; preds = %1190, %1195
  %1198 = load i32, ptr @PL_savestack_ix, align 4, !tbaa !52
  %1199 = icmp sgt i32 %1198, %0
  br i1 %1199, label %1200, label %1201

1200:                                             ; preds = %1197
  call void @Perl_leave_scope(i32 noundef %0) #29
  br label %1201

1201:                                             ; preds = %1200, %1197
  br i1 %1191, label %1223, label %1202

1202:                                             ; preds = %1201
  %1203 = icmp ne ptr %1192, null
  %1204 = icmp ne ptr %128, null
  %1205 = select i1 %1203, i1 %1204, i1 false
  br i1 %1205, label %1206, label %1223

1206:                                             ; preds = %1202
  %1207 = load ptr, ptr %1192, align 8, !tbaa !10
  %1208 = getelementptr inbounds %struct.xpvcv, ptr %1207, i64 0, i32 10
  %1209 = load ptr, ptr %1208, align 8, !tbaa !158
  %1210 = icmp eq ptr %1209, null
  br i1 %1210, label %1223, label %1211

1211:                                             ; preds = %1206
  %1212 = load ptr, ptr %1209, align 8, !tbaa !10
  %1213 = getelementptr inbounds %struct.xpvcv, ptr %1212, i64 0, i32 12
  %1214 = load i32, ptr %1213, align 4, !tbaa !14
  %1215 = and i32 %1214, 256
  %1216 = icmp eq i32 %1215, 0
  br i1 %1216, label %1222, label %1217

1217:                                             ; preds = %1211
  %1218 = getelementptr inbounds %struct.cv, ptr %1209, i64 0, i32 2
  %1219 = load i32, ptr %1218, align 4, !tbaa !263
  %1220 = and i32 %1219, 16777216
  %1221 = icmp eq i32 %1220, 0
  br i1 %1221, label %1223, label %1222

1222:                                             ; preds = %1217, %1211
  call void @Perl_pad_add_weakref(ptr noundef nonnull %1192) #29
  br label %1223

1223:                                             ; preds = %1201, %1222, %1217, %1206, %1202
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %11) #29
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %10) #29
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %9) #29
  ret ptr %1192
}

declare i64 @Perl_pad_add_anon(ptr noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: nofree norecurse nosync nounwind sspstrong memory(readwrite, inaccessiblemem: none) uwtable
define internal fastcc void @S_set_haseval() unnamed_addr #11 {
  store i8 1, ptr @PL_cv_has_eval, align 1, !tbaa !268
  %1 = load ptr, ptr @PL_comppad_name, align 8, !tbaa !6
  %2 = getelementptr inbounds %struct.padnamelist, ptr %1, i64 0, i32 3
  %3 = load i64, ptr %2, align 8, !tbaa !269
  %4 = icmp ugt i64 %3, 1
  br i1 %4, label %5, label %81

5:                                                ; preds = %0
  %6 = getelementptr inbounds %struct.padnamelist, ptr %1, i64 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !151
  %8 = load ptr, ptr @PL_compcv, align 8
  %9 = load i32, ptr @PL_cop_seqmax, align 4
  br label %10

10:                                               ; preds = %5, %78
  %11 = phi i64 [ 1, %5 ], [ %79, %78 ]
  %12 = getelementptr inbounds ptr, ptr %7, i64 %11
  %13 = load ptr, ptr %12, align 8, !tbaa !6
  %14 = icmp eq ptr %13, null
  br i1 %14, label %78, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %struct.padname, ptr %13, i64 0, i32 7
  %17 = load i8, ptr %16, align 8, !tbaa !136
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %78, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.padname, ptr %13, i64 0, i32 8
  %21 = load i8, ptr %20, align 1, !tbaa !153
  %22 = and i8 %21, 1
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %24, label %50

24:                                               ; preds = %19
  %25 = getelementptr inbounds %struct.padname, ptr %13, i64 0, i32 3
  %26 = load i32, ptr %25, align 8, !tbaa !157
  %27 = icmp eq i32 %26, -1
  br i1 %27, label %78, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.padname, ptr %13, i64 0, i32 4
  %30 = load i32, ptr %29, align 4, !tbaa !270
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %40

32:                                               ; preds = %28
  %33 = icmp ult i32 %26, %9
  br i1 %33, label %34, label %37

34:                                               ; preds = %32
  %35 = sub i32 %9, %26
  %36 = icmp ult i32 %35, 2147483647
  br i1 %36, label %48, label %78

37:                                               ; preds = %32
  %38 = sub i32 %26, %9
  %39 = icmp slt i32 %38, 0
  br i1 %39, label %48, label %78

40:                                               ; preds = %28
  %41 = icmp ugt i32 %26, %30
  %42 = icmp uge i32 %26, %9
  %43 = icmp ult i32 %30, %9
  br i1 %41, label %44, label %46

44:                                               ; preds = %40
  %45 = and i1 %42, %43
  br i1 %45, label %78, label %48

46:                                               ; preds = %40
  %47 = or i1 %42, %43
  br i1 %47, label %78, label %48

48:                                               ; preds = %44, %46, %34, %37
  %49 = or i8 %21, 4
  store i8 %49, ptr %20, align 1, !tbaa !153
  br label %78

50:                                               ; preds = %19
  %51 = or i8 %21, 4
  store i8 %51, ptr %20, align 1, !tbaa !153
  br label %52

52:                                               ; preds = %50, %58
  %53 = phi ptr [ %61, %58 ], [ %8, %50 ]
  %54 = phi ptr [ %72, %58 ], [ %13, %50 ]
  %55 = getelementptr inbounds %struct.padname, ptr %54, i64 0, i32 3
  %56 = load i32, ptr %55, align 8, !tbaa !157
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %78, label %58

58:                                               ; preds = %52
  %59 = load ptr, ptr %53, align 8, !tbaa !10
  %60 = getelementptr inbounds %struct.xpvcv, ptr %59, i64 0, i32 10
  %61 = load ptr, ptr %60, align 8, !tbaa !158
  %62 = load ptr, ptr %61, align 8, !tbaa !10
  %63 = getelementptr inbounds %struct.xpvcv, ptr %62, i64 0, i32 9
  %64 = load ptr, ptr %63, align 8, !tbaa !13
  %65 = getelementptr inbounds %struct.padlist, ptr %64, i64 0, i32 1
  %66 = load ptr, ptr %65, align 8, !tbaa !159
  %67 = load ptr, ptr %66, align 8, !tbaa !6
  %68 = getelementptr inbounds %struct.padnamelist, ptr %67, i64 0, i32 1
  %69 = load ptr, ptr %68, align 8, !tbaa !151
  %70 = zext i32 %56 to i64
  %71 = getelementptr inbounds ptr, ptr %69, i64 %70
  %72 = load ptr, ptr %71, align 8, !tbaa !6
  %73 = getelementptr inbounds %struct.padname, ptr %72, i64 0, i32 8
  %74 = load i8, ptr %73, align 1, !tbaa !153
  %75 = or i8 %74, 4
  store i8 %75, ptr %73, align 1, !tbaa !153
  %76 = and i8 %74, 1
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %78, label %52, !llvm.loop !161

78:                                               ; preds = %58, %52, %34, %37, %44, %46, %48, %24, %10, %15
  %79 = add nuw i64 %11, 1
  %80 = icmp eq i64 %79, %3
  br i1 %80, label %81, label %10, !llvm.loop !271

81:                                               ; preds = %78, %0
  ret void
}

declare ptr @Perl_bytes_to_utf8(ptr noundef, ptr noundef) local_unnamed_addr #6

declare ptr @Perl_safesysmalloc(i64 noundef) local_unnamed_addr #6

declare i64 @Perl_utf8n_to_uvchr(ptr noundef, i64 noundef, ptr noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: nofree
declare void @qsort(ptr noundef, i64 noundef, i64 noundef, ptr nocapture noundef) local_unnamed_addr #16

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable
define internal i32 @uvcompare(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1) #10 {
  %3 = load i64, ptr %0, align 8, !tbaa !88
  %4 = load i64, ptr %1, align 8, !tbaa !88
  %5 = icmp ult i64 %3, %4
  br i1 %5, label %16, label %6

6:                                                ; preds = %2
  %7 = icmp ugt i64 %3, %4
  br i1 %7, label %16, label %8

8:                                                ; preds = %6
  %9 = getelementptr inbounds i64, ptr %0, i64 1
  %10 = load i64, ptr %9, align 8, !tbaa !88
  %11 = add i64 %4, 1
  %12 = icmp ult i64 %10, %11
  br i1 %12, label %16, label %13

13:                                               ; preds = %8
  %14 = icmp ugt i64 %10, %11
  %15 = zext i1 %14 to i32
  br label %16

16:                                               ; preds = %13, %8, %6, %2
  %17 = phi i32 [ -1, %2 ], [ 1, %6 ], [ -1, %8 ], [ %15, %13 ]
  ret i32 %17
}

declare ptr @Perl_uvoffuni_to_utf8_flags(ptr noundef, i64 noundef, i64 noundef) local_unnamed_addr #6

declare void @Perl_sv_catpvn_flags(ptr noundef, ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #6

declare void @Perl_sv_catpvf(ptr noundef, ptr noundef, ...) local_unnamed_addr #6

declare ptr @Perl_swash_init(ptr noundef, ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #6

declare ptr @Perl_hv_common_key_len(ptr noundef, ptr noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #6

declare ptr @Perl_newSVuv(i64 noundef) local_unnamed_addr #6

; Function Attrs: mustprogress nounwind willreturn allockind("realloc") allocsize(1) memory(argmem: readwrite, inaccessiblemem: readwrite)
declare noalias noundef ptr @realloc(ptr allocptr nocapture noundef, i64 noundef) local_unnamed_addr #17

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_newDEFSVOP() local_unnamed_addr #4 {
  %1 = tail call i64 @Perl_pad_findmy_pvn(ptr noundef nonnull @.str.7, i64 noundef 2, i32 noundef 0) #29
  %2 = icmp eq i64 %1, -1
  br i1 %2, label %12, label %3

3:                                                ; preds = %0
  %4 = load ptr, ptr @PL_comppad_name, align 8, !tbaa !6
  %5 = getelementptr inbounds %struct.padnamelist, ptr %4, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !151
  %7 = getelementptr inbounds ptr, ptr %6, i64 %1
  %8 = load ptr, ptr %7, align 8, !tbaa !6
  %9 = getelementptr inbounds %struct.padname, ptr %8, i64 0, i32 1
  %10 = load ptr, ptr %9, align 8, !tbaa !272
  %11 = icmp eq ptr %10, null
  br i1 %11, label %31, label %12

12:                                               ; preds = %3, %0
  %13 = load ptr, ptr @PL_defgv, align 8, !tbaa !6
  %14 = getelementptr inbounds %struct.gv, ptr %13, i64 0, i32 1
  %15 = load i32, ptr %14, align 8, !tbaa !74
  %16 = add i32 %15, 1
  store i32 %16, ptr %14, align 8, !tbaa !74
  %17 = tail call ptr @Perl_newSVOP(i32 noundef 7, i32 noundef 0, ptr noundef %13)
  %18 = getelementptr inbounds %struct.op, ptr %17, i64 0, i32 4
  %19 = load i16, ptr %18, align 8
  %20 = and i16 %19, 511
  %21 = icmp eq i16 %20, 12
  br i1 %21, label %22, label %28

22:                                               ; preds = %12
  %23 = and i16 %19, -512
  %24 = or i16 %23, 9
  store i16 %24, ptr %18, align 8
  %25 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_ppaddr, i64 0, i64 9), align 8, !tbaa !6
  %26 = getelementptr inbounds %struct.op, ptr %17, i64 0, i32 2
  store ptr %25, ptr %26, align 8, !tbaa !78
  %27 = tail call ptr @Perl_scalar(ptr noundef nonnull %17)
  br label %34

28:                                               ; preds = %12
  %29 = tail call ptr @Perl_scalar(ptr noundef nonnull %17)
  %30 = tail call ptr @Perl_newUNOP(i32 noundef 15, i32 noundef 0, ptr noundef nonnull %17)
  br label %34

31:                                               ; preds = %3
  %32 = tail call ptr @Perl_newOP(i32 noundef 9, i32 noundef 0)
  %33 = getelementptr inbounds %struct.op, ptr %32, i64 0, i32 3
  store i64 %1, ptr %33, align 8, !tbaa !34
  br label %34

34:                                               ; preds = %28, %22, %31
  %35 = phi ptr [ %32, %31 ], [ %17, %22 ], [ %30, %28 ]
  ret ptr %35
}

declare i64 @Perl_pad_findmy_pvn(ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_newPVOP(i32 noundef %0, i32 noundef %1, ptr noundef %2) local_unnamed_addr #4 {
  %4 = tail call ptr @Perl_Slab_Alloc(i64 noundef 48)
  %5 = trunc i32 %0 to i16
  %6 = getelementptr inbounds %struct.pvop, ptr %4, i64 0, i32 4
  %7 = load i16, ptr %6, align 8
  %8 = and i16 %5, 511
  %9 = and i16 %7, -512
  %10 = or i16 %9, %8
  store i16 %10, ptr %6, align 8
  %11 = sext i32 %0 to i64
  %12 = getelementptr inbounds [0 x ptr], ptr @PL_ppaddr, i64 0, i64 %11
  %13 = load ptr, ptr %12, align 8, !tbaa !6
  %14 = getelementptr inbounds %struct.pvop, ptr %4, i64 0, i32 2
  store ptr %13, ptr %14, align 8, !tbaa !273
  %15 = getelementptr inbounds %struct.pvop, ptr %4, i64 0, i32 7
  store ptr %2, ptr %15, align 8, !tbaa !67
  store ptr %4, ptr %4, align 8, !tbaa !274
  %16 = trunc i32 %1 to i8
  %17 = getelementptr inbounds %struct.pvop, ptr %4, i64 0, i32 5
  store i8 %16, ptr %17, align 2, !tbaa !275
  %18 = lshr i32 %1, 22
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, -128
  %21 = getelementptr inbounds %struct.pvop, ptr %4, i64 0, i32 6
  store i8 %20, ptr %21, align 1, !tbaa !276
  %22 = getelementptr inbounds [0 x i32], ptr @PL_opargs, i64 0, i64 %11
  %23 = load i32, ptr %22, align 4, !tbaa !52
  %24 = and i32 %23, 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %28, label %26

26:                                               ; preds = %3
  %27 = tail call ptr @Perl_scalar(ptr noundef nonnull %4)
  br label %28

28:                                               ; preds = %26, %3
  %29 = and i32 %23, 8
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %34, label %31

31:                                               ; preds = %28
  %32 = tail call i64 @Perl_pad_alloc(i32 noundef %0, i32 noundef 131072) #29
  %33 = getelementptr inbounds %struct.pvop, ptr %4, i64 0, i32 3
  store i64 %32, ptr %33, align 8, !tbaa !277
  br label %34

34:                                               ; preds = %31, %28
  %35 = load ptr, ptr @PL_op_mask, align 8, !tbaa !6
  %36 = icmp eq ptr %35, null
  br i1 %36, label %44, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds i8, ptr %35, i64 %11
  %39 = load i8, ptr %38, align 1, !tbaa !13
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %37
  tail call void @Perl_op_free(ptr noundef nonnull %4)
  %42 = getelementptr inbounds [0 x ptr], ptr @PL_op_desc, i64 0, i64 %11
  %43 = load ptr, ptr %42, align 8, !tbaa !6
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.63, ptr noundef %43) #29
  br label %48

44:                                               ; preds = %37, %34
  %45 = getelementptr inbounds [0 x ptr], ptr @PL_check, i64 0, i64 %11
  %46 = load ptr, ptr %45, align 8, !tbaa !6
  %47 = tail call ptr %46(ptr noundef nonnull %4) #29
  br label %48

48:                                               ; preds = %44, %41
  %49 = phi ptr [ null, %41 ], [ %47, %44 ]
  ret ptr %49
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_package(ptr noundef %0) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.svop, ptr %0, i64 0, i32 7
  %3 = load ptr, ptr %2, align 8, !tbaa !65
  tail call void @Perl_save_generic_svref(ptr noundef nonnull @PL_curstash) #29
  %4 = load ptr, ptr @PL_curstname, align 8, !tbaa !6
  tail call void @Perl_save_item(ptr noundef %4) #29
  %5 = tail call ptr @Perl_gv_stashsv(ptr noundef %3, i32 noundef 1) #29
  %6 = icmp eq ptr %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.sv, ptr %5, i64 0, i32 1
  %9 = load i32, ptr %8, align 8, !tbaa !42
  %10 = add i32 %9, 1
  store i32 %10, ptr %8, align 8, !tbaa !42
  br label %11

11:                                               ; preds = %1, %7
  store ptr %5, ptr @PL_curstash, align 8, !tbaa !6
  %12 = load ptr, ptr @PL_curstname, align 8, !tbaa !6
  tail call void @Perl_sv_setsv_flags(ptr noundef %12, ptr noundef %3, i32 noundef 1538) #29
  %13 = load i32, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 10), align 8, !tbaa !77
  %14 = or i32 %13, 256
  store i32 %14, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 10), align 8, !tbaa !77
  %15 = load ptr, ptr @PL_parser, align 8, !tbaa !6
  %16 = getelementptr inbounds %struct.yy_parser, ptr %15, i64 0, i32 41
  store i32 -1, ptr %16, align 8, !tbaa !238
  tail call void @Perl_op_free(ptr noundef nonnull %0)
  ret void
}

declare void @Perl_save_generic_svref(ptr noundef) local_unnamed_addr #6

declare void @Perl_save_item(ptr noundef) local_unnamed_addr #6

declare ptr @Perl_gv_stashsv(ptr noundef, i32 noundef) local_unnamed_addr #6

declare void @Perl_sv_setsv_flags(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_package_version(ptr noundef %0) local_unnamed_addr #4 {
  %2 = load i32, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 10), align 8, !tbaa !77
  %3 = and i32 %2, -1025
  store i32 %3, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 10), align 8, !tbaa !77
  %4 = tail call ptr @Perl_gv_fetchpvn_flags(ptr noundef nonnull @.str.76, i64 noundef 7, i32 noundef 2, i32 noundef 3) #29
  %5 = getelementptr inbounds %struct.gv, ptr %4, i64 0, i32 3
  %6 = load ptr, ptr %5, align 8, !tbaa !13
  %7 = load ptr, ptr %6, align 8, !tbaa !278
  %8 = getelementptr inbounds %struct.svop, ptr %0, i64 0, i32 7
  %9 = load ptr, ptr %8, align 8, !tbaa !65
  tail call void @Perl_sv_setsv_flags(ptr noundef %7, ptr noundef %9, i32 noundef 1538) #29
  store i32 %2, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 10), align 8, !tbaa !77
  tail call void @Perl_op_free(ptr noundef %0)
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_utilize(i32 noundef %0, i32 noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4) local_unnamed_addr #4 {
  %6 = getelementptr inbounds %struct.op, ptr %3, i64 0, i32 4
  %7 = load i16, ptr %6, align 8
  %8 = and i16 %7, 511
  %9 = icmp eq i16 %8, 5
  br i1 %9, label %11, label %10

10:                                               ; preds = %5
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.77) #29
  br label %11

11:                                               ; preds = %10, %5
  %12 = icmp eq ptr %2, null
  br i1 %12, label %109, label %13

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.svop, ptr %2, i64 0, i32 7
  %15 = load ptr, ptr %14, align 8, !tbaa !65
  %16 = icmp eq ptr %4, null
  br i1 %16, label %17, label %22

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.sv, ptr %15, i64 0, i32 2
  %19 = load i32, ptr %18, align 4, !tbaa !84
  %20 = and i32 %19, 12288
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %112, label %22

22:                                               ; preds = %17, %13
  %23 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 4
  %24 = load i16, ptr %23, align 8
  %25 = and i16 %24, 511
  %26 = icmp eq i16 %25, 5
  br i1 %26, label %27, label %32

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.sv, ptr %15, i64 0, i32 2
  %29 = load i32, ptr %28, align 4, !tbaa !84
  %30 = and i32 %29, 12288
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %27, %22
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.78) #29
  br label %33

33:                                               ; preds = %32, %27
  %34 = getelementptr inbounds %struct.svop, ptr %3, i64 0, i32 7
  %35 = load ptr, ptr %34, align 8, !tbaa !65
  %36 = tail call ptr @Perl_newSVsv(ptr noundef %35) #29
  %37 = tail call ptr @Perl_newSVOP(i32 noundef 5, i32 noundef 0, ptr noundef %36)
  %38 = tail call ptr @Perl_newSVpvn_share(ptr noundef nonnull @.str.76, i32 noundef 7, i32 noundef 0) #29
  %39 = icmp eq ptr %37, null
  br i1 %39, label %59, label %40

40:                                               ; preds = %33
  %41 = load i16, ptr %23, align 8
  %42 = and i16 %41, 511
  %43 = icmp eq i16 %42, 158
  br i1 %43, label %44, label %57

44:                                               ; preds = %40
  %45 = load ptr, ptr %14, align 8, !tbaa !6
  %46 = tail call ptr @Perl_op_sibling_splice(ptr noundef nonnull %2, ptr noundef %45, i32 noundef 0, ptr noundef nonnull %37)
  %47 = getelementptr inbounds %struct.op, ptr %37, i64 0, i32 5
  %48 = load i8, ptr %47, align 2, !tbaa !35
  %49 = and i8 %48, 8
  %50 = icmp eq i8 %49, 0
  %51 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 5
  %52 = load i8, ptr %51, align 2, !tbaa !35
  %53 = and i8 %52, -13
  %54 = select i1 %50, i8 %53, i8 %52
  %55 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 5
  %56 = or i8 %54, 4
  store i8 %56, ptr %55, align 2, !tbaa !35
  br label %59

57:                                               ; preds = %40
  %58 = tail call ptr @Perl_newLISTOP(i32 noundef 158, i32 noundef 0, ptr noundef nonnull %37, ptr noundef nonnull %2)
  br label %59

59:                                               ; preds = %33, %44, %57
  %60 = phi ptr [ %2, %44 ], [ %58, %57 ], [ %2, %33 ]
  %61 = tail call ptr @Perl_Slab_Alloc(i64 noundef 56)
  %62 = getelementptr inbounds %struct.methop, ptr %61, i64 0, i32 5
  store i8 0, ptr %62, align 2, !tbaa !170
  %63 = getelementptr inbounds %struct.methop, ptr %61, i64 0, i32 7
  store ptr %38, ptr %63, align 8, !tbaa !13
  %64 = getelementptr inbounds %struct.methop, ptr %61, i64 0, i32 6
  store i8 0, ptr %64, align 1, !tbaa !171
  store ptr %61, ptr %61, align 8, !tbaa !172
  %65 = getelementptr inbounds %struct.methop, ptr %61, i64 0, i32 8
  store ptr null, ptr %65, align 8, !tbaa !63
  %66 = getelementptr inbounds %struct.methop, ptr %61, i64 0, i32 4
  %67 = load i16, ptr %66, align 8
  %68 = and i16 %67, -512
  %69 = or i16 %68, 210
  store i16 %69, ptr %66, align 8
  %70 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_ppaddr, i64 0, i64 210), align 8, !tbaa !6
  %71 = getelementptr inbounds %struct.methop, ptr %61, i64 0, i32 2
  store ptr %70, ptr %71, align 8, !tbaa !173
  %72 = load ptr, ptr @PL_op_mask, align 8, !tbaa !6
  %73 = icmp eq ptr %72, null
  br i1 %73, label %78, label %74

74:                                               ; preds = %59
  %75 = getelementptr inbounds i8, ptr %72, i64 210
  %76 = load i8, ptr %75, align 1, !tbaa !13
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %78, label %82

78:                                               ; preds = %59, %74
  %79 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_check, i64 0, i64 210), align 8, !tbaa !6
  %80 = tail call ptr %79(ptr noundef nonnull %61) #29
  %81 = icmp eq ptr %60, null
  br i1 %81, label %106, label %84

82:                                               ; preds = %74
  tail call void @Perl_op_free(ptr noundef nonnull %61)
  %83 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_op_desc, i64 0, i64 210), align 8, !tbaa !6
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.63, ptr noundef %83) #29
  br label %106

84:                                               ; preds = %78
  %85 = icmp eq ptr %80, null
  br i1 %85, label %106, label %86

86:                                               ; preds = %84
  %87 = getelementptr inbounds %struct.op, ptr %60, i64 0, i32 4
  %88 = load i16, ptr %87, align 8
  %89 = and i16 %88, 511
  %90 = icmp eq i16 %89, 158
  br i1 %90, label %93, label %91

91:                                               ; preds = %86
  %92 = tail call ptr @Perl_newLISTOP(i32 noundef 158, i32 noundef 0, ptr noundef nonnull %60, ptr noundef nonnull %80)
  br label %106

93:                                               ; preds = %86
  %94 = getelementptr inbounds %struct.op, ptr %60, i64 0, i32 5
  %95 = load i8, ptr %94, align 2, !tbaa !35
  %96 = and i8 %95, 8
  %97 = icmp eq i8 %96, 0
  br i1 %97, label %100, label %98

98:                                               ; preds = %93
  %99 = tail call ptr @Perl_newLISTOP(i32 noundef 158, i32 noundef 0, ptr noundef nonnull %60, ptr noundef nonnull %80)
  br label %106

100:                                              ; preds = %93
  %101 = getelementptr inbounds %struct.listop, ptr %60, i64 0, i32 8
  %102 = load ptr, ptr %101, align 8, !tbaa !83
  %103 = tail call ptr @Perl_op_sibling_splice(ptr noundef nonnull %60, ptr noundef %102, i32 noundef 0, ptr noundef nonnull %80)
  %104 = load i8, ptr %94, align 2, !tbaa !35
  %105 = or i8 %104, 4
  store i8 %105, ptr %94, align 2, !tbaa !35
  br label %106

106:                                              ; preds = %82, %78, %84, %91, %98, %100
  %107 = phi ptr [ %60, %100 ], [ %80, %78 ], [ %60, %84 ], [ %92, %91 ], [ %99, %98 ], [ %60, %82 ]
  %108 = tail call ptr @Perl_op_convert_list(i32 noundef 185, i32 noundef 192, ptr noundef %107)
  br label %109

109:                                              ; preds = %106, %11
  %110 = phi ptr [ null, %11 ], [ %108, %106 ]
  %111 = icmp eq ptr %4, null
  br i1 %111, label %119, label %112

112:                                              ; preds = %17, %109
  %113 = phi ptr [ %4, %109 ], [ %2, %17 ]
  %114 = phi ptr [ %110, %109 ], [ null, %17 ]
  %115 = getelementptr inbounds %struct.op, ptr %113, i64 0, i32 4
  %116 = load i16, ptr %115, align 8
  %117 = and i16 %116, 511
  %118 = icmp eq i16 %117, 1
  br i1 %118, label %219, label %119

119:                                              ; preds = %112, %109
  %120 = phi i1 [ false, %112 ], [ true, %109 ]
  %121 = phi ptr [ %113, %112 ], [ null, %109 ]
  %122 = phi ptr [ %114, %112 ], [ %110, %109 ]
  %123 = getelementptr inbounds %struct.svop, ptr %3, i64 0, i32 7
  %124 = load ptr, ptr %123, align 8, !tbaa !65
  %125 = getelementptr inbounds %struct.sv, ptr %124, i64 0, i32 2
  %126 = load i32, ptr %125, align 4, !tbaa !84
  %127 = and i32 %126, 12288
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %135, label %129

129:                                              ; preds = %119
  %130 = icmp eq i32 %0, 0
  br i1 %130, label %131, label %219

131:                                              ; preds = %129
  %132 = getelementptr inbounds %struct.op, ptr %3, i64 0, i32 6
  %133 = load i8, ptr %132, align 1, !tbaa !33
  %134 = or i8 %133, 2
  store i8 %134, ptr %132, align 1, !tbaa !33
  br label %219

135:                                              ; preds = %119
  %136 = tail call ptr @Perl_newSVsv(ptr noundef nonnull %124) #29
  %137 = tail call ptr @Perl_newSVOP(i32 noundef 5, i32 noundef 0, ptr noundef %136)
  %138 = icmp eq i32 %0, 0
  br i1 %138, label %141, label %139

139:                                              ; preds = %135
  %140 = tail call ptr @Perl_newSVpvn_share(ptr noundef nonnull @.str.51, i32 noundef 6, i32 noundef 0) #29
  br label %143

141:                                              ; preds = %135
  %142 = tail call ptr @Perl_newSVpvn_share(ptr noundef nonnull @.str.79, i32 noundef 8, i32 noundef 0) #29
  br label %143

143:                                              ; preds = %141, %139
  %144 = phi ptr [ %140, %139 ], [ %142, %141 ]
  %145 = icmp eq ptr %137, null
  %146 = or i1 %120, %145
  %147 = select i1 %145, ptr %121, ptr %137
  br i1 %146, label %169, label %148

148:                                              ; preds = %143
  %149 = getelementptr inbounds %struct.op, ptr %121, i64 0, i32 4
  %150 = load i16, ptr %149, align 8
  %151 = and i16 %150, 511
  %152 = icmp eq i16 %151, 158
  br i1 %152, label %153, label %167

153:                                              ; preds = %148
  %154 = getelementptr inbounds %struct.listop, ptr %121, i64 0, i32 7
  %155 = load ptr, ptr %154, align 8, !tbaa !6
  %156 = tail call ptr @Perl_op_sibling_splice(ptr noundef nonnull %121, ptr noundef %155, i32 noundef 0, ptr noundef nonnull %137)
  %157 = getelementptr inbounds %struct.op, ptr %137, i64 0, i32 5
  %158 = load i8, ptr %157, align 2, !tbaa !35
  %159 = and i8 %158, 8
  %160 = icmp eq i8 %159, 0
  %161 = getelementptr inbounds %struct.op, ptr %121, i64 0, i32 5
  %162 = load i8, ptr %161, align 2, !tbaa !35
  %163 = and i8 %162, -13
  %164 = select i1 %160, i8 %163, i8 %162
  %165 = getelementptr inbounds %struct.op, ptr %121, i64 0, i32 5
  %166 = or i8 %164, 4
  store i8 %166, ptr %165, align 2, !tbaa !35
  br label %169

167:                                              ; preds = %148
  %168 = tail call ptr @Perl_newLISTOP(i32 noundef 158, i32 noundef 0, ptr noundef nonnull %137, ptr noundef nonnull %121)
  br label %169

169:                                              ; preds = %143, %153, %167
  %170 = phi ptr [ %121, %153 ], [ %168, %167 ], [ %147, %143 ]
  %171 = tail call ptr @Perl_Slab_Alloc(i64 noundef 56)
  %172 = getelementptr inbounds %struct.methop, ptr %171, i64 0, i32 5
  store i8 0, ptr %172, align 2, !tbaa !170
  %173 = getelementptr inbounds %struct.methop, ptr %171, i64 0, i32 7
  store ptr %144, ptr %173, align 8, !tbaa !13
  %174 = getelementptr inbounds %struct.methop, ptr %171, i64 0, i32 6
  store i8 0, ptr %174, align 1, !tbaa !171
  store ptr %171, ptr %171, align 8, !tbaa !172
  %175 = getelementptr inbounds %struct.methop, ptr %171, i64 0, i32 8
  store ptr null, ptr %175, align 8, !tbaa !63
  %176 = getelementptr inbounds %struct.methop, ptr %171, i64 0, i32 4
  %177 = load i16, ptr %176, align 8
  %178 = and i16 %177, -512
  %179 = or i16 %178, 210
  store i16 %179, ptr %176, align 8
  %180 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_ppaddr, i64 0, i64 210), align 8, !tbaa !6
  %181 = getelementptr inbounds %struct.methop, ptr %171, i64 0, i32 2
  store ptr %180, ptr %181, align 8, !tbaa !173
  %182 = load ptr, ptr @PL_op_mask, align 8, !tbaa !6
  %183 = icmp eq ptr %182, null
  br i1 %183, label %188, label %184

184:                                              ; preds = %169
  %185 = getelementptr inbounds i8, ptr %182, i64 210
  %186 = load i8, ptr %185, align 1, !tbaa !13
  %187 = icmp eq i8 %186, 0
  br i1 %187, label %188, label %192

188:                                              ; preds = %169, %184
  %189 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_check, i64 0, i64 210), align 8, !tbaa !6
  %190 = tail call ptr %189(ptr noundef nonnull %171) #29
  %191 = icmp eq ptr %170, null
  br i1 %191, label %216, label %194

192:                                              ; preds = %184
  tail call void @Perl_op_free(ptr noundef nonnull %171)
  %193 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_op_desc, i64 0, i64 210), align 8, !tbaa !6
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.63, ptr noundef %193) #29
  br label %216

194:                                              ; preds = %188
  %195 = icmp eq ptr %190, null
  br i1 %195, label %216, label %196

196:                                              ; preds = %194
  %197 = getelementptr inbounds %struct.op, ptr %170, i64 0, i32 4
  %198 = load i16, ptr %197, align 8
  %199 = and i16 %198, 511
  %200 = icmp eq i16 %199, 158
  br i1 %200, label %203, label %201

201:                                              ; preds = %196
  %202 = tail call ptr @Perl_newLISTOP(i32 noundef 158, i32 noundef 0, ptr noundef nonnull %170, ptr noundef nonnull %190)
  br label %216

203:                                              ; preds = %196
  %204 = getelementptr inbounds %struct.op, ptr %170, i64 0, i32 5
  %205 = load i8, ptr %204, align 2, !tbaa !35
  %206 = and i8 %205, 8
  %207 = icmp eq i8 %206, 0
  br i1 %207, label %210, label %208

208:                                              ; preds = %203
  %209 = tail call ptr @Perl_newLISTOP(i32 noundef 158, i32 noundef 0, ptr noundef nonnull %170, ptr noundef nonnull %190)
  br label %216

210:                                              ; preds = %203
  %211 = getelementptr inbounds %struct.listop, ptr %170, i64 0, i32 8
  %212 = load ptr, ptr %211, align 8, !tbaa !83
  %213 = tail call ptr @Perl_op_sibling_splice(ptr noundef nonnull %170, ptr noundef %212, i32 noundef 0, ptr noundef nonnull %190)
  %214 = load i8, ptr %204, align 2, !tbaa !35
  %215 = or i8 %214, 4
  store i8 %215, ptr %204, align 2, !tbaa !35
  br label %216

216:                                              ; preds = %192, %188, %194, %201, %208, %210
  %217 = phi ptr [ %170, %210 ], [ %190, %188 ], [ %170, %194 ], [ %202, %201 ], [ %209, %208 ], [ %170, %192 ]
  %218 = tail call ptr @Perl_op_convert_list(i32 noundef 185, i32 noundef 192, ptr noundef %217)
  br label %219

219:                                              ; preds = %129, %112, %216, %131
  %220 = phi ptr [ %122, %131 ], [ %122, %216 ], [ %114, %112 ], [ %122, %129 ]
  %221 = phi ptr [ null, %131 ], [ null, %216 ], [ null, %112 ], [ %124, %129 ]
  %222 = phi ptr [ null, %131 ], [ %218, %216 ], [ %113, %112 ], [ null, %129 ]
  %223 = tail call ptr @Perl_newSVpvn_share(ptr noundef nonnull @.str.80, i32 noundef 5, i32 noundef 0) #29
  %224 = tail call ptr @Perl_newSVOP(i32 noundef 5, i32 noundef 0, ptr noundef %223)
  %225 = tail call ptr @Perl_newUNOP(i32 noundef 339, i32 noundef 0, ptr noundef nonnull %3)
  %226 = tail call ptr @Perl_newSTATEOP(i32 noundef 0, ptr noundef null, ptr noundef %225)
  %227 = tail call ptr @Perl_newSTATEOP(i32 noundef 0, ptr noundef null, ptr noundef %220)
  %228 = icmp eq ptr %226, null
  br i1 %228, label %276, label %229

229:                                              ; preds = %219
  %230 = icmp eq ptr %227, null
  br i1 %230, label %274, label %231

231:                                              ; preds = %229
  %232 = getelementptr inbounds %struct.op, ptr %226, i64 0, i32 4
  %233 = load i16, ptr %232, align 8
  %234 = and i16 %233, 511
  %235 = icmp eq i16 %234, 192
  br i1 %235, label %267, label %236

236:                                              ; preds = %231
  %237 = tail call ptr @Perl_Slab_Alloc(i64 noundef 56)
  %238 = getelementptr inbounds %struct.listop, ptr %237, i64 0, i32 4
  %239 = load i16, ptr %238, align 8
  %240 = and i16 %239, -512
  %241 = or i16 %240, 192
  store i16 %241, ptr %238, align 8
  %242 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_ppaddr, i64 0, i64 192), align 8, !tbaa !6
  %243 = getelementptr inbounds %struct.listop, ptr %237, i64 0, i32 2
  store ptr %242, ptr %243, align 8, !tbaa !222
  %244 = getelementptr inbounds %struct.listop, ptr %237, i64 0, i32 5
  store i8 4, ptr %244, align 2, !tbaa !223
  %245 = load i16, ptr %232, align 8
  %246 = or i16 %245, 16384
  store i16 %246, ptr %232, align 8
  %247 = getelementptr inbounds %struct.op, ptr %226, i64 0, i32 1
  store ptr %227, ptr %247, align 8, !tbaa !38
  %248 = getelementptr inbounds %struct.listop, ptr %237, i64 0, i32 7
  store ptr %226, ptr %248, align 8, !tbaa !81
  %249 = getelementptr inbounds %struct.listop, ptr %237, i64 0, i32 8
  store ptr %227, ptr %249, align 8, !tbaa !83
  %250 = getelementptr inbounds %struct.op, ptr %227, i64 0, i32 4
  %251 = load i16, ptr %250, align 8
  %252 = and i16 %251, -16385
  store i16 %252, ptr %250, align 8
  %253 = load ptr, ptr %249, align 8, !tbaa !83
  %254 = getelementptr inbounds %struct.op, ptr %253, i64 0, i32 1
  store ptr null, ptr %254, align 8, !tbaa !38
  %255 = load ptr, ptr @PL_op_mask, align 8, !tbaa !6
  %256 = icmp eq ptr %255, null
  br i1 %256, label %264, label %257

257:                                              ; preds = %236
  %258 = getelementptr inbounds i8, ptr %255, i64 192
  %259 = load i8, ptr %258, align 1, !tbaa !13
  %260 = icmp eq i8 %259, 0
  br i1 %260, label %264, label %261

261:                                              ; preds = %257
  tail call void @Perl_op_free(ptr noundef nonnull %237)
  %262 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_op_desc, i64 0, i64 192), align 8, !tbaa !6
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.63, ptr noundef %262) #29
  %263 = tail call ptr @Perl_newSTATEOP(i32 noundef 0, ptr noundef null, ptr noundef %222)
  br label %326

264:                                              ; preds = %257, %236
  %265 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_check, i64 0, i64 192), align 8, !tbaa !6
  %266 = tail call ptr %265(ptr noundef nonnull %237) #29
  br label %276

267:                                              ; preds = %231
  %268 = getelementptr inbounds %struct.listop, ptr %226, i64 0, i32 8
  %269 = load ptr, ptr %268, align 8, !tbaa !83
  %270 = tail call ptr @Perl_op_sibling_splice(ptr noundef nonnull %226, ptr noundef %269, i32 noundef 0, ptr noundef nonnull %227)
  %271 = getelementptr inbounds %struct.op, ptr %226, i64 0, i32 5
  %272 = load i8, ptr %271, align 2, !tbaa !35
  %273 = or i8 %272, 4
  store i8 %273, ptr %271, align 2, !tbaa !35
  br label %274

274:                                              ; preds = %267, %229
  %275 = tail call ptr @Perl_newSTATEOP(i32 noundef 0, ptr noundef null, ptr noundef %222)
  br label %280

276:                                              ; preds = %264, %219
  %277 = phi ptr [ %227, %219 ], [ %266, %264 ]
  %278 = tail call ptr @Perl_newSTATEOP(i32 noundef 0, ptr noundef null, ptr noundef %222)
  %279 = icmp eq ptr %277, null
  br i1 %279, label %326, label %280

280:                                              ; preds = %274, %276
  %281 = phi ptr [ %275, %274 ], [ %278, %276 ]
  %282 = phi ptr [ %226, %274 ], [ %277, %276 ]
  %283 = icmp eq ptr %281, null
  br i1 %283, label %326, label %284

284:                                              ; preds = %280
  %285 = getelementptr inbounds %struct.op, ptr %282, i64 0, i32 4
  %286 = load i16, ptr %285, align 8
  %287 = and i16 %286, 511
  %288 = icmp eq i16 %287, 192
  br i1 %288, label %319, label %289

289:                                              ; preds = %284
  %290 = tail call ptr @Perl_Slab_Alloc(i64 noundef 56)
  %291 = getelementptr inbounds %struct.listop, ptr %290, i64 0, i32 4
  %292 = load i16, ptr %291, align 8
  %293 = and i16 %292, -512
  %294 = or i16 %293, 192
  store i16 %294, ptr %291, align 8
  %295 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_ppaddr, i64 0, i64 192), align 8, !tbaa !6
  %296 = getelementptr inbounds %struct.listop, ptr %290, i64 0, i32 2
  store ptr %295, ptr %296, align 8, !tbaa !222
  %297 = getelementptr inbounds %struct.listop, ptr %290, i64 0, i32 5
  store i8 4, ptr %297, align 2, !tbaa !223
  %298 = load i16, ptr %285, align 8
  %299 = or i16 %298, 16384
  store i16 %299, ptr %285, align 8
  %300 = getelementptr inbounds %struct.op, ptr %282, i64 0, i32 1
  store ptr %281, ptr %300, align 8, !tbaa !38
  %301 = getelementptr inbounds %struct.listop, ptr %290, i64 0, i32 7
  store ptr %282, ptr %301, align 8, !tbaa !81
  %302 = getelementptr inbounds %struct.listop, ptr %290, i64 0, i32 8
  store ptr %281, ptr %302, align 8, !tbaa !83
  %303 = getelementptr inbounds %struct.op, ptr %281, i64 0, i32 4
  %304 = load i16, ptr %303, align 8
  %305 = and i16 %304, -16385
  store i16 %305, ptr %303, align 8
  %306 = load ptr, ptr %302, align 8, !tbaa !83
  %307 = getelementptr inbounds %struct.op, ptr %306, i64 0, i32 1
  store ptr null, ptr %307, align 8, !tbaa !38
  %308 = load ptr, ptr @PL_op_mask, align 8, !tbaa !6
  %309 = icmp eq ptr %308, null
  br i1 %309, label %316, label %310

310:                                              ; preds = %289
  %311 = getelementptr inbounds i8, ptr %308, i64 192
  %312 = load i8, ptr %311, align 1, !tbaa !13
  %313 = icmp eq i8 %312, 0
  br i1 %313, label %316, label %314

314:                                              ; preds = %310
  tail call void @Perl_op_free(ptr noundef nonnull %290)
  %315 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_op_desc, i64 0, i64 192), align 8, !tbaa !6
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.63, ptr noundef %315) #29
  br label %326

316:                                              ; preds = %310, %289
  %317 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_check, i64 0, i64 192), align 8, !tbaa !6
  %318 = tail call ptr %317(ptr noundef nonnull %290) #29
  br label %326

319:                                              ; preds = %284
  %320 = getelementptr inbounds %struct.listop, ptr %282, i64 0, i32 8
  %321 = load ptr, ptr %320, align 8, !tbaa !83
  %322 = tail call ptr @Perl_op_sibling_splice(ptr noundef nonnull %282, ptr noundef %321, i32 noundef 0, ptr noundef nonnull %281)
  %323 = getelementptr inbounds %struct.op, ptr %282, i64 0, i32 5
  %324 = load i8, ptr %323, align 2, !tbaa !35
  %325 = or i8 %324, 4
  store i8 %325, ptr %323, align 2, !tbaa !35
  br label %326

326:                                              ; preds = %316, %314, %261, %276, %280, %319
  %327 = phi ptr [ %282, %319 ], [ %278, %276 ], [ %282, %280 ], [ %263, %261 ], [ null, %314 ], [ %318, %316 ]
  %328 = tail call ptr @Perl_newATTRSUB_x(i32 noundef %1, ptr noundef %224, ptr noundef null, ptr noundef null, ptr noundef %327, i1 noundef zeroext false)
  %329 = icmp eq ptr %221, null
  br i1 %329, label %330, label %332

330:                                              ; preds = %326
  %331 = load i32, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 10), align 8, !tbaa !77
  br label %409

332:                                              ; preds = %326
  %333 = tail call ptr @Perl_new_version(ptr noundef nonnull %221) #29
  %334 = tail call ptr @Perl_sv_2mortal(ptr noundef %333) #29
  %335 = tail call ptr @Perl_sv_newmortal() #29
  %336 = load i32, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 10), align 8, !tbaa !77
  %337 = and i32 %336, -469762049
  tail call void @Perl_sv_setnv(ptr noundef %335, double noundef nofpclass(nan inf) 5.015000e+00) #29
  %338 = tail call ptr @Perl_upg_version(ptr noundef %335, i1 noundef zeroext false) #29
  %339 = tail call i32 @Perl_vcmp(ptr noundef %334, ptr noundef %338) #29
  %340 = icmp sgt i32 %339, -1
  br i1 %340, label %351, label %341

341:                                              ; preds = %332
  tail call void @Perl_sv_setnv(ptr noundef %335, double noundef nofpclass(nan inf) 5.011000e+00) #29
  %342 = tail call ptr @Perl_upg_version(ptr noundef %335, i1 noundef zeroext false) #29
  %343 = tail call i32 @Perl_vcmp(ptr noundef %334, ptr noundef %342) #29
  %344 = icmp sgt i32 %343, -1
  br i1 %344, label %351, label %345

345:                                              ; preds = %341
  tail call void @Perl_sv_setnv(ptr noundef %335, double noundef nofpclass(nan inf) 0x401409389B52007E) #29
  %346 = tail call ptr @Perl_upg_version(ptr noundef %335, i1 noundef zeroext false) #29
  %347 = tail call i32 @Perl_vcmp(ptr noundef %334, ptr noundef %346) #29
  %348 = lshr i32 %347, 5
  %349 = and i32 %348, 67108864
  %350 = xor i32 %349, 67108864
  br label %351

351:                                              ; preds = %345, %341, %332
  %352 = phi i32 [ 201326592, %332 ], [ %350, %345 ], [ 134217728, %341 ]
  %353 = or i32 %352, %337
  store i32 %353, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 10), align 8, !tbaa !77
  %354 = load ptr, ptr @PL_curcop, align 8, !tbaa !6
  %355 = icmp eq ptr %354, @PL_compiling
  br i1 %355, label %359, label %356

356:                                              ; preds = %351
  %357 = getelementptr inbounds %struct.cop, ptr %354, i64 0, i32 10
  %358 = load i32, ptr %357, align 8, !tbaa !77
  br label %359

359:                                              ; preds = %351, %356
  %360 = phi i32 [ %358, %356 ], [ %353, %351 ]
  %361 = and i32 %360, 402653184
  %362 = icmp ne i32 %361, 0
  %363 = and i32 %360, 268435456
  %364 = icmp eq i32 %363, 0
  %365 = and i1 %362, %364
  br i1 %365, label %372, label %366

366:                                              ; preds = %359
  %367 = and i32 %360, 469893120
  %368 = icmp eq i32 %367, 469893120
  br i1 %368, label %369, label %375

369:                                              ; preds = %366
  %370 = tail call zeroext i1 @Perl_feature_is_enabled(ptr noundef nonnull @.str.81, i64 noundef 7) #29
  %371 = load i32, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 10), align 8, !tbaa !77
  br i1 %370, label %372, label %375

372:                                              ; preds = %369, %359
  %373 = phi i32 [ %371, %369 ], [ %353, %359 ]
  %374 = or i32 %373, 2048
  br label %378

375:                                              ; preds = %369, %366
  %376 = phi i32 [ %353, %366 ], [ %371, %369 ]
  %377 = and i32 %376, -2049
  br label %378

378:                                              ; preds = %372, %375
  %379 = phi i32 [ %377, %375 ], [ %374, %372 ]
  store i32 %379, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 10), align 8, !tbaa !77
  %380 = tail call ptr @Perl_newSVnv(double noundef nofpclass(nan inf) 5.011000e+00) #29
  %381 = tail call ptr @Perl_upg_version(ptr noundef %380, i1 noundef zeroext false) #29
  %382 = tail call ptr @Perl_sv_2mortal(ptr noundef %381) #29
  %383 = tail call i32 @Perl_vcmp(ptr noundef %334, ptr noundef %382) #29
  %384 = icmp sgt i32 %383, -1
  %385 = load i32, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 10), align 8, !tbaa !77
  %386 = and i32 %385, 32
  %387 = icmp eq i32 %386, 0
  br i1 %384, label %388, label %398

388:                                              ; preds = %378
  %389 = or i32 %385, 2
  %390 = select i1 %387, i32 %389, i32 %385
  %391 = shl i32 %390, 3
  %392 = and i32 %391, 512
  %393 = shl i32 %390, 3
  %394 = and i32 %393, 1024
  %395 = or i32 %394, %392
  %396 = xor i32 %395, 1536
  %397 = or i32 %396, %390
  br label %409

398:                                              ; preds = %378
  %399 = and i32 %385, -3
  %400 = select i1 %387, i32 %399, i32 %385
  %401 = and i32 %400, 64
  %402 = icmp eq i32 %401, 0
  %403 = and i32 %400, -513
  %404 = select i1 %402, i32 %403, i32 %400
  %405 = and i32 %404, 128
  %406 = icmp eq i32 %405, 0
  %407 = and i32 %404, -1025
  %408 = select i1 %406, i32 %407, i32 %404
  br label %409

409:                                              ; preds = %398, %388, %330
  %410 = phi i32 [ %331, %330 ], [ %397, %388 ], [ %408, %398 ]
  %411 = or i32 %410, 256
  store i32 %411, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 10), align 8, !tbaa !77
  %412 = load ptr, ptr @PL_parser, align 8, !tbaa !6
  %413 = getelementptr inbounds %struct.yy_parser, ptr %412, i64 0, i32 41
  store i32 -1, ptr %413, align 8, !tbaa !238
  %414 = load i32, ptr @PL_cop_seqmax, align 4, !tbaa !52
  %415 = add i32 %414, 1
  %416 = icmp eq i32 %415, -1
  %417 = select i1 %416, i32 0, i32 %415
  store i32 %417, ptr @PL_cop_seqmax, align 4, !tbaa !52
  ret void
}

declare ptr @Perl_newSVsv(ptr noundef) local_unnamed_addr #6

declare ptr @Perl_new_version(ptr noundef) local_unnamed_addr #6

declare i32 @Perl_vcmp(ptr noundef, ptr noundef) local_unnamed_addr #6

declare ptr @Perl_upg_version(ptr noundef, i1 noundef zeroext) local_unnamed_addr #6

declare ptr @Perl_newSVnv(double noundef nofpclass(nan inf)) local_unnamed_addr #6

declare void @Perl_sv_setnv(ptr noundef, double noundef nofpclass(nan inf)) local_unnamed_addr #6

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn
declare void @llvm.va_start(ptr) #18

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_vload_module(i32 noundef %0, ptr noundef %1, ptr noundef %2, ptr nocapture noundef %3) local_unnamed_addr #4 {
  %5 = tail call ptr @Perl_newSVOP(i32 noundef 5, i32 noundef 0, ptr noundef %1)
  %6 = getelementptr inbounds %struct.op, ptr %5, i64 0, i32 6
  %7 = load i8, ptr %6, align 1, !tbaa !33
  %8 = or i8 %7, 64
  store i8 %8, ptr %6, align 1, !tbaa !33
  %9 = icmp eq ptr %2, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %4
  %11 = tail call ptr @Perl_newSVOP(i32 noundef 5, i32 noundef 0, ptr noundef nonnull %2)
  br label %12

12:                                               ; preds = %4, %10
  %13 = phi ptr [ %11, %10 ], [ null, %4 ]
  %14 = and i32 %0, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %12
  %17 = tail call ptr @Perl_newOP(i32 noundef 1, i32 noundef 0)
  %18 = icmp eq ptr %17, null
  br i1 %18, label %103, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds %struct.op, ptr %17, i64 0, i32 5
  %21 = load i8, ptr %20, align 2, !tbaa !35
  %22 = or i8 %21, 8
  store i8 %22, ptr %20, align 2, !tbaa !35
  br label %103

23:                                               ; preds = %12
  %24 = and i32 %0, 4
  %25 = icmp eq i32 %24, 0
  %26 = load i32, ptr %3, align 8
  %27 = icmp ult i32 %26, 41
  br i1 %25, label %42, label %28

28:                                               ; preds = %23
  br i1 %27, label %29, label %35

29:                                               ; preds = %28
  %30 = getelementptr inbounds %struct.__va_list_tag, ptr %3, i64 0, i32 3
  %31 = load ptr, ptr %30, align 8
  %32 = zext i32 %26 to i64
  %33 = getelementptr i8, ptr %31, i64 %32
  %34 = add nuw nsw i32 %26, 8
  store i32 %34, ptr %3, align 8
  br label %39

35:                                               ; preds = %28
  %36 = getelementptr inbounds %struct.__va_list_tag, ptr %3, i64 0, i32 2
  %37 = load ptr, ptr %36, align 8
  %38 = getelementptr i8, ptr %37, i64 8
  store ptr %38, ptr %36, align 8
  br label %39

39:                                               ; preds = %35, %29
  %40 = phi ptr [ %33, %29 ], [ %37, %35 ]
  %41 = load ptr, ptr %40, align 8
  br label %103

42:                                               ; preds = %23
  br i1 %27, label %43, label %49

43:                                               ; preds = %42
  %44 = getelementptr inbounds %struct.__va_list_tag, ptr %3, i64 0, i32 3
  %45 = load ptr, ptr %44, align 8
  %46 = zext i32 %26 to i64
  %47 = getelementptr i8, ptr %45, i64 %46
  %48 = add nuw nsw i32 %26, 8
  store i32 %48, ptr %3, align 8
  br label %53

49:                                               ; preds = %42
  %50 = getelementptr inbounds %struct.__va_list_tag, ptr %3, i64 0, i32 2
  %51 = load ptr, ptr %50, align 8
  %52 = getelementptr i8, ptr %51, i64 8
  store ptr %52, ptr %50, align 8
  br label %53

53:                                               ; preds = %49, %43
  %54 = phi ptr [ %47, %43 ], [ %51, %49 ]
  %55 = load ptr, ptr %54, align 8
  %56 = icmp eq ptr %55, null
  br i1 %56, label %103, label %57

57:                                               ; preds = %53
  %58 = getelementptr inbounds %struct.__va_list_tag, ptr %3, i64 0, i32 2
  %59 = getelementptr inbounds %struct.__va_list_tag, ptr %3, i64 0, i32 3
  br label %60

60:                                               ; preds = %57, %99
  %61 = phi ptr [ %55, %57 ], [ %101, %99 ]
  %62 = phi ptr [ null, %57 ], [ %88, %99 ]
  %63 = tail call ptr @Perl_newSVOP(i32 noundef 5, i32 noundef 0, ptr noundef nonnull %61)
  %64 = icmp eq ptr %62, null
  br i1 %64, label %87, label %65

65:                                               ; preds = %60
  %66 = icmp eq ptr %63, null
  br i1 %66, label %87, label %67

67:                                               ; preds = %65
  %68 = getelementptr inbounds %struct.op, ptr %62, i64 0, i32 4
  %69 = load i16, ptr %68, align 8
  %70 = and i16 %69, 511
  %71 = icmp eq i16 %70, 158
  br i1 %71, label %74, label %72

72:                                               ; preds = %67
  %73 = tail call ptr @Perl_newLISTOP(i32 noundef 158, i32 noundef 0, ptr noundef nonnull %62, ptr noundef nonnull %63)
  br label %87

74:                                               ; preds = %67
  %75 = getelementptr inbounds %struct.op, ptr %62, i64 0, i32 5
  %76 = load i8, ptr %75, align 2, !tbaa !35
  %77 = and i8 %76, 8
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %81, label %79

79:                                               ; preds = %74
  %80 = tail call ptr @Perl_newLISTOP(i32 noundef 158, i32 noundef 0, ptr noundef nonnull %62, ptr noundef nonnull %63)
  br label %87

81:                                               ; preds = %74
  %82 = getelementptr inbounds %struct.listop, ptr %62, i64 0, i32 8
  %83 = load ptr, ptr %82, align 8, !tbaa !83
  %84 = tail call ptr @Perl_op_sibling_splice(ptr noundef nonnull %62, ptr noundef %83, i32 noundef 0, ptr noundef nonnull %63)
  %85 = load i8, ptr %75, align 2, !tbaa !35
  %86 = or i8 %85, 4
  store i8 %86, ptr %75, align 2, !tbaa !35
  br label %87

87:                                               ; preds = %60, %65, %72, %79, %81
  %88 = phi ptr [ %62, %81 ], [ %63, %60 ], [ %62, %65 ], [ %73, %72 ], [ %80, %79 ]
  %89 = load i32, ptr %3, align 8
  %90 = icmp ult i32 %89, 41
  br i1 %90, label %91, label %96

91:                                               ; preds = %87
  %92 = load ptr, ptr %59, align 8
  %93 = zext i32 %89 to i64
  %94 = getelementptr i8, ptr %92, i64 %93
  %95 = add nuw nsw i32 %89, 8
  store i32 %95, ptr %3, align 8
  br label %99

96:                                               ; preds = %87
  %97 = load ptr, ptr %58, align 8
  %98 = getelementptr i8, ptr %97, i64 8
  store ptr %98, ptr %58, align 8
  br label %99

99:                                               ; preds = %96, %91
  %100 = phi ptr [ %94, %91 ], [ %97, %96 ]
  %101 = load ptr, ptr %100, align 8
  %102 = icmp eq ptr %101, null
  br i1 %102, label %103, label %60, !llvm.loop !279

103:                                              ; preds = %99, %53, %19, %16, %39
  %104 = phi ptr [ %41, %39 ], [ null, %16 ], [ %17, %19 ], [ null, %53 ], [ %88, %99 ]
  tail call void @Perl_push_scope() #29
  tail call void @Perl_save_vptr(ptr noundef nonnull @PL_curcop) #29
  tail call void @Perl_lex_start(ptr noundef null, ptr noundef null, i32 noundef 1) #29
  %105 = and i32 %0, 1
  %106 = xor i32 %105, 1
  %107 = tail call i32 @Perl_start_subparse(i32 noundef 0, i32 noundef 0) #29
  tail call void @Perl_utilize(i32 noundef %106, i32 noundef %107, ptr noundef %13, ptr noundef %5, ptr noundef %104)
  tail call void @Perl_pop_scope() #29
  ret void
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn
declare void @llvm.va_end(ptr) #18

declare void @Perl_lex_start(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #6

declare i32 @Perl_start_subparse(i32 noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_dofile(ptr noundef %0, i32 noundef %1) local_unnamed_addr #4 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %15

4:                                                ; preds = %2
  %5 = tail call ptr @Perl_gv_override(ptr noundef nonnull @.str.82, i64 noundef 2) #29
  %6 = icmp eq ptr %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %struct.gv, ptr %5, i64 0, i32 1
  %9 = load i32, ptr %8, align 8, !tbaa !74
  %10 = add i32 %9, 1
  store i32 %10, ptr %8, align 8, !tbaa !74
  %11 = tail call ptr @Perl_newSVOP(i32 noundef 7, i32 noundef 0, ptr noundef nonnull %5)
  %12 = tail call ptr @Perl_newUNOP(i32 noundef 17, i32 noundef 0, ptr noundef %11)
  %13 = tail call ptr @Perl_newLISTOP(i32 noundef 158, i32 noundef 0, ptr noundef %0, ptr noundef %12)
  %14 = tail call ptr @Perl_newUNOP(i32 noundef 185, i32 noundef 64, ptr noundef %13)
  br label %18

15:                                               ; preds = %4, %2
  %16 = tail call ptr @Perl_scalar(ptr noundef %0)
  %17 = tail call ptr @Perl_newUNOP(i32 noundef 340, i32 noundef 0, ptr noundef %0)
  br label %18

18:                                               ; preds = %15, %7
  %19 = phi ptr [ %17, %15 ], [ %14, %7 ]
  ret ptr %19
}

declare ptr @Perl_gv_override(ptr noundef, i64 noundef) local_unnamed_addr #6

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_newSLICEOP(i32 noundef %0, ptr noundef %1, ptr noundef %2) local_unnamed_addr #4 {
  %4 = tail call fastcc ptr @S_force_list(ptr noundef %1, i1 noundef zeroext true)
  %5 = tail call ptr @Perl_list(ptr noundef %4)
  %6 = tail call fastcc ptr @S_force_list(ptr noundef %2, i1 noundef zeroext true)
  %7 = tail call ptr @Perl_list(ptr noundef %6)
  %8 = tail call ptr @Perl_newBINOP(i32 noundef 159, i32 noundef %0, ptr noundef %5, ptr noundef %7)
  ret ptr %8
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_newASSIGNOP(i32 noundef %0, ptr noundef %1, i32 noundef %2, ptr noundef %3) local_unnamed_addr #4 {
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = icmp eq i32 %2, 0
  br i1 %7, label %19, label %8

8:                                                ; preds = %4
  %9 = add i32 %2, -181
  %10 = icmp ult i32 %9, 3
  %11 = tail call ptr @Perl_scalar(ptr noundef %1)
  %12 = tail call ptr @Perl_op_lvalue_flags(ptr noundef %1, i32 noundef %2, i32 noundef 0)
  %13 = tail call ptr @Perl_scalar(ptr noundef %3)
  br i1 %10, label %14, label %17

14:                                               ; preds = %8
  %15 = tail call ptr @Perl_newUNOP(i32 noundef 37, i32 noundef 0, ptr noundef %3)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6)
  store ptr %12, ptr %5, align 8, !tbaa !6
  store ptr %15, ptr %6, align 8, !tbaa !6
  %16 = call fastcc ptr @S_new_logop(i32 noundef %2, i32 noundef 0, ptr noundef nonnull %5, ptr noundef nonnull %6)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6)
  br label %251

17:                                               ; preds = %8
  %18 = tail call ptr @Perl_newBINOP(i32 noundef %2, i32 noundef 64, ptr noundef %12, ptr noundef %3)
  br label %251

19:                                               ; preds = %4
  %20 = tail call fastcc i32 @S_assignment_type(ptr noundef %1), !range !280
  switch i32 %20, label %228 [
    i32 1, label %21
    i32 2, label %225
  ]

21:                                               ; preds = %19
  %22 = getelementptr inbounds %struct.op, ptr %1, i64 0, i32 4
  %23 = load i16, ptr %22, align 8
  %24 = and i16 %23, 511
  switch i16 %24, label %29 [
    i16 139, label %25
    i16 151, label %25
  ]

25:                                               ; preds = %21, %21
  %26 = getelementptr inbounds %struct.op, ptr %1, i64 0, i32 6
  %27 = load i8, ptr %26, align 1, !tbaa !33
  %28 = and i8 %27, -5
  store i8 %28, ptr %26, align 1, !tbaa !33
  br label %29

29:                                               ; preds = %21, %25
  store i32 0, ptr @PL_modcount, align 4, !tbaa !52
  %30 = tail call ptr @Perl_op_lvalue_flags(ptr noundef nonnull %1, i32 noundef 38, i32 noundef 0)
  %31 = tail call fastcc ptr @S_force_list(ptr noundef %30, i1 noundef zeroext true)
  %32 = tail call ptr @Perl_list(ptr noundef %31)
  %33 = tail call fastcc ptr @S_force_list(ptr noundef %3, i1 noundef zeroext true)
  %34 = tail call ptr @Perl_list(ptr noundef %33)
  %35 = tail call ptr @Perl_newBINOP(i32 noundef 38, i32 noundef %0, ptr noundef %34, ptr noundef %32)
  %36 = lshr i32 %0, 8
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.op, ptr %35, i64 0, i32 6
  store i8 %37, ptr %38, align 1, !tbaa !33
  %39 = icmp eq ptr %30, null
  br i1 %39, label %86, label %40

40:                                               ; preds = %29
  %41 = getelementptr inbounds %struct.op, ptr %30, i64 0, i32 4
  %42 = load i16, ptr %41, align 8
  %43 = and i16 %42, 511
  %44 = icmp eq i16 %43, 0
  br i1 %44, label %45, label %48

45:                                               ; preds = %40
  %46 = getelementptr inbounds %struct.op, ptr %30, i64 0, i32 3
  %47 = load i64, ptr %46, align 8, !tbaa !34
  br label %50

48:                                               ; preds = %40
  %49 = zext i16 %43 to i64
  br label %50

50:                                               ; preds = %48, %45
  %51 = phi i64 [ %47, %45 ], [ %49, %48 ]
  %52 = icmp eq i64 %51, 158
  br i1 %52, label %53, label %86

53:                                               ; preds = %50
  %54 = getelementptr inbounds %struct.listop, ptr %30, i64 0, i32 7
  %55 = load ptr, ptr %54, align 8, !tbaa !6
  %56 = icmp eq ptr %55, null
  br i1 %56, label %112, label %57

57:                                               ; preds = %53, %81
  %58 = phi ptr [ %84, %81 ], [ %55, %53 ]
  %59 = phi i8 [ %82, %81 ], [ 0, %53 ]
  %60 = getelementptr inbounds %struct.op, ptr %58, i64 0, i32 4
  %61 = load i16, ptr %60, align 8
  %62 = and i16 %61, 511
  switch i16 %62, label %75 [
    i16 9, label %63
    i16 10, label %63
    i16 11, label %63
    i16 12, label %63
    i16 44, label %81
    i16 0, label %72
  ]

63:                                               ; preds = %57, %57, %57, %57
  %64 = getelementptr inbounds %struct.op, ptr %58, i64 0, i32 6
  %65 = load i8, ptr %64, align 1, !tbaa !33
  %66 = icmp sgt i8 %65, -1
  %67 = select i1 %66, i8 1, i8 %59
  %68 = and i8 %65, 64
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %81, label %70

70:                                               ; preds = %63
  %71 = tail call i32 @Perl_yyerror(ptr noundef nonnull @Perl_newASSIGNOP.no_list_state) #29
  br label %81

72:                                               ; preds = %57
  %73 = getelementptr inbounds %struct.op, ptr %58, i64 0, i32 3
  %74 = load i64, ptr %73, align 8, !tbaa !34
  br label %77

75:                                               ; preds = %57
  %76 = zext i16 %62 to i64
  br label %77

77:                                               ; preds = %75, %72
  %78 = phi i64 [ %74, %72 ], [ %76, %75 ]
  %79 = icmp eq i64 %78, 3
  %80 = select i1 %79, i8 %59, i8 1
  br label %81

81:                                               ; preds = %77, %57, %70, %63
  %82 = phi i8 [ %67, %70 ], [ %67, %63 ], [ %59, %57 ], [ %80, %77 ]
  %83 = getelementptr inbounds %struct.op, ptr %58, i64 0, i32 1
  %84 = load ptr, ptr %83, align 8, !tbaa !6
  %85 = icmp eq ptr %84, null
  br i1 %85, label %103, label %57, !llvm.loop !281

86:                                               ; preds = %50, %29
  %87 = getelementptr inbounds %struct.op, ptr %30, i64 0, i32 6
  %88 = load i8, ptr %87, align 1, !tbaa !33
  %89 = icmp sgt i8 %88, -1
  br i1 %89, label %109, label %90

90:                                               ; preds = %86
  %91 = getelementptr inbounds %struct.op, ptr %30, i64 0, i32 4
  %92 = load i16, ptr %91, align 8
  %93 = and i16 %92, 511
  %94 = add nsw i16 %93, -9
  %95 = icmp ult i16 %94, 4
  br i1 %95, label %96, label %109

96:                                               ; preds = %90
  %97 = icmp ne i16 %93, 9
  %98 = zext i1 %97 to i8
  %99 = and i8 %88, 64
  %100 = icmp eq i8 %99, 0
  br i1 %100, label %103, label %101

101:                                              ; preds = %96
  %102 = tail call i32 @Perl_yyerror(ptr noundef nonnull @Perl_newASSIGNOP.no_list_state) #29
  br label %103

103:                                              ; preds = %81, %101, %96
  %104 = phi i8 [ %98, %101 ], [ %98, %96 ], [ %82, %81 ]
  %105 = and i8 %104, 1
  %106 = icmp eq i8 %105, 0
  br i1 %106, label %112, label %107

107:                                              ; preds = %103
  %108 = load i8, ptr %38, align 1, !tbaa !33
  br label %109

109:                                              ; preds = %107, %90, %86
  %110 = phi i8 [ %108, %107 ], [ %37, %90 ], [ %37, %86 ]
  %111 = or i8 %110, 64
  store i8 %111, ptr %38, align 1, !tbaa !33
  br label %112

112:                                              ; preds = %53, %109, %103
  %113 = icmp eq ptr %3, null
  br i1 %113, label %251, label %114

114:                                              ; preds = %112
  %115 = getelementptr inbounds %struct.op, ptr %3, i64 0, i32 4
  %116 = load i16, ptr %115, align 8
  %117 = and i16 %116, 511
  %118 = icmp eq i16 %117, 156
  br i1 %118, label %119, label %251

119:                                              ; preds = %114
  %120 = getelementptr inbounds %struct.op, ptr %3, i64 0, i32 5
  %121 = load i8, ptr %120, align 2, !tbaa !35
  %122 = and i8 %121, 64
  %123 = icmp eq i8 %122, 0
  br i1 %123, label %124, label %251

124:                                              ; preds = %119
  %125 = getelementptr inbounds %struct.listop, ptr %3, i64 0, i32 7
  %126 = load ptr, ptr %125, align 8, !tbaa !81
  %127 = getelementptr inbounds %struct.pmop, ptr %126, i64 0, i32 11
  %128 = load ptr, ptr %127, align 8, !tbaa !13
  %129 = icmp eq ptr %128, null
  br i1 %129, label %130, label %251

130:                                              ; preds = %124
  %131 = getelementptr inbounds %struct.pmop, ptr %126, i64 0, i32 3
  %132 = load i64, ptr %131, align 8, !tbaa !282
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %251

134:                                              ; preds = %130
  %135 = getelementptr inbounds %struct.op, ptr %30, i64 0, i32 6
  %136 = load i8, ptr %135, align 1, !tbaa !33
  %137 = icmp sgt i8 %136, -1
  %138 = getelementptr inbounds %struct.op, ptr %30, i64 0, i32 4
  %139 = load i16, ptr %138, align 8
  %140 = and i16 %139, 511
  br i1 %137, label %141, label %170

141:                                              ; preds = %134
  switch i16 %140, label %182 [
    i16 135, label %142
    i16 10, label %159
  ]

142:                                              ; preds = %141
  %143 = getelementptr inbounds %struct.unop, ptr %30, i64 0, i32 7
  %144 = load ptr, ptr %143, align 8, !tbaa !36
  %145 = getelementptr inbounds %struct.op, ptr %144, i64 0, i32 4
  %146 = load i16, ptr %145, align 8
  %147 = and i16 %146, 511
  %148 = icmp eq i16 %147, 7
  br i1 %148, label %149, label %171

149:                                              ; preds = %142
  %150 = icmp eq ptr %144, %126
  br i1 %150, label %159, label %151

151:                                              ; preds = %149
  %152 = getelementptr inbounds %struct.svop, ptr %144, i64 0, i32 7
  %153 = load ptr, ptr %152, align 8, !tbaa !65
  store ptr %153, ptr %127, align 8, !tbaa !13
  store ptr null, ptr %152, align 8, !tbaa !65
  %154 = load i8, ptr %135, align 1, !tbaa !33
  %155 = and i8 %154, 64
  %156 = getelementptr inbounds %struct.op, ptr %3, i64 0, i32 6
  %157 = load i8, ptr %156, align 1, !tbaa !33
  %158 = or i8 %157, %155
  store i8 %158, ptr %156, align 1, !tbaa !33
  br label %162

159:                                              ; preds = %141, %149
  %160 = getelementptr inbounds %struct.op, ptr %30, i64 0, i32 3
  %161 = load i64, ptr %160, align 8, !tbaa !34
  store i64 %161, ptr %131, align 8, !tbaa !282
  store i64 0, ptr %160, align 8, !tbaa !34
  br label %162

162:                                              ; preds = %151, %159, %171
  %163 = getelementptr inbounds %struct.unop, ptr %35, i64 0, i32 7
  %164 = load ptr, ptr %163, align 8, !tbaa !36
  %165 = getelementptr inbounds %struct.unop, ptr %164, i64 0, i32 7
  %166 = load ptr, ptr %165, align 8, !tbaa !36
  %167 = tail call ptr @Perl_op_sibling_splice(ptr noundef %164, ptr noundef %166, i32 noundef -1, ptr noundef null)
  tail call void @Perl_op_free(ptr noundef %35)
  %168 = load i8, ptr %120, align 2, !tbaa !35
  %169 = and i8 %168, -4
  store i8 %169, ptr %120, align 2, !tbaa !35
  br label %251

170:                                              ; preds = %134
  switch i16 %140, label %182 [
    i16 135, label %171
    i16 10, label %171
  ]

171:                                              ; preds = %142, %170, %170
  %172 = getelementptr inbounds %struct.binop, ptr %35, i64 0, i32 8
  %173 = load ptr, ptr %172, align 8, !tbaa !113
  %174 = getelementptr inbounds %struct.unop, ptr %173, i64 0, i32 7
  %175 = load ptr, ptr %174, align 8, !tbaa !36
  %176 = tail call ptr @Perl_op_sibling_splice(ptr noundef %173, ptr noundef %175, i32 noundef 1, ptr noundef null)
  %177 = getelementptr inbounds %struct.listop, ptr %3, i64 0, i32 8
  %178 = load ptr, ptr %177, align 8, !tbaa !83
  %179 = tail call ptr @Perl_op_sibling_splice(ptr noundef nonnull %3, ptr noundef %178, i32 noundef 0, ptr noundef nonnull %30)
  %180 = load i8, ptr %120, align 2, !tbaa !35
  %181 = or i8 %180, 64
  store i8 %181, ptr %120, align 2, !tbaa !35
  br label %162

182:                                              ; preds = %141, %170
  %183 = load i32, ptr @PL_modcount, align 4, !tbaa !52
  %184 = icmp slt i32 %183, 1073741823
  br i1 %184, label %185, label %251

185:                                              ; preds = %182
  %186 = getelementptr inbounds %struct.listop, ptr %3, i64 0, i32 8
  %187 = load ptr, ptr %186, align 8, !tbaa !83
  %188 = getelementptr inbounds %struct.op, ptr %187, i64 0, i32 4
  %189 = load i16, ptr %188, align 8
  %190 = and i16 %189, 511
  %191 = icmp eq i16 %190, 5
  br i1 %191, label %192, label %251

192:                                              ; preds = %185
  %193 = getelementptr inbounds %struct.svop, ptr %187, i64 0, i32 7
  %194 = load ptr, ptr %193, align 8, !tbaa !6
  %195 = getelementptr inbounds %struct.sv, ptr %194, i64 0, i32 2
  %196 = load i32, ptr %195, align 4, !tbaa !84
  %197 = and i32 %196, 256
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %251, label %199

199:                                              ; preds = %192
  %200 = load ptr, ptr %194, align 8, !tbaa !85
  %201 = getelementptr inbounds %struct.xpviv, ptr %200, i64 0, i32 4
  %202 = load i64, ptr %201, align 8, !tbaa !13
  %203 = icmp eq i64 %202, 0
  br i1 %203, label %204, label %251

204:                                              ; preds = %199
  %205 = getelementptr inbounds %struct.op, ptr %3, i64 0, i32 6
  %206 = load i8, ptr %205, align 1, !tbaa !33
  %207 = icmp sgt i8 %206, -1
  br i1 %207, label %212, label %208

208:                                              ; preds = %204
  %209 = and i32 %196, -134283265
  store i32 %209, ptr %195, align 4, !tbaa !84
  %210 = add nsw i32 %183, 1
  %211 = sext i32 %210 to i64
  tail call void @Perl_sv_setiv(ptr noundef nonnull %194, i64 noundef %211) #29
  br label %251

212:                                              ; preds = %204
  %213 = getelementptr inbounds %struct.sv, ptr %194, i64 0, i32 1
  %214 = load i32, ptr %213, align 8, !tbaa !42
  %215 = icmp ugt i32 %214, 1
  br i1 %215, label %216, label %218

216:                                              ; preds = %212
  %217 = add i32 %214, -1
  store i32 %217, ptr %213, align 8, !tbaa !42
  br label %220

218:                                              ; preds = %212
  tail call void @Perl_sv_free2(ptr noundef nonnull %194, i32 noundef %214) #29
  %219 = load i32, ptr @PL_modcount, align 4, !tbaa !52
  br label %220

220:                                              ; preds = %216, %218
  %221 = phi i32 [ %183, %216 ], [ %219, %218 ]
  %222 = add nsw i32 %221, 1
  %223 = sext i32 %222 to i64
  %224 = tail call ptr @Perl_newSViv(i64 noundef %223) #29
  store ptr %224, ptr %193, align 8, !tbaa !6
  br label %251

225:                                              ; preds = %19
  %226 = tail call ptr @Perl_scalar(ptr noundef %3)
  %227 = tail call ptr @Perl_newBINOP(i32 noundef 391, i32 noundef %0, ptr noundef %3, ptr noundef %1)
  br label %251

228:                                              ; preds = %19
  %229 = icmp eq ptr %3, null
  br i1 %229, label %230, label %232

230:                                              ; preds = %228
  %231 = tail call ptr @Perl_newOP(i32 noundef 44, i32 noundef 0)
  br label %232

232:                                              ; preds = %230, %228
  %233 = phi ptr [ %3, %228 ], [ %231, %230 ]
  %234 = getelementptr inbounds %struct.op, ptr %233, i64 0, i32 4
  %235 = load i16, ptr %234, align 8
  %236 = and i16 %235, 511
  %237 = icmp eq i16 %236, 26
  br i1 %237, label %238, label %246

238:                                              ; preds = %232
  %239 = getelementptr inbounds %struct.op, ptr %233, i64 0, i32 5
  %240 = load i8, ptr %239, align 2, !tbaa !35
  %241 = or i8 %240, 64
  store i8 %241, ptr %239, align 2, !tbaa !35
  %242 = tail call ptr @Perl_scalar(ptr noundef %1)
  %243 = tail call ptr @Perl_op_lvalue_flags(ptr noundef %1, i32 noundef 37, i32 noundef 0)
  %244 = tail call ptr @Perl_scalar(ptr noundef nonnull %233)
  %245 = tail call ptr @Perl_newBINOP(i32 noundef 0, i32 noundef %0, ptr noundef %243, ptr noundef nonnull %233)
  br label %251

246:                                              ; preds = %232
  %247 = tail call ptr @Perl_scalar(ptr noundef nonnull %233)
  %248 = tail call ptr @Perl_scalar(ptr noundef %1)
  %249 = tail call ptr @Perl_op_lvalue_flags(ptr noundef %1, i32 noundef 37, i32 noundef 0)
  %250 = tail call ptr @Perl_newBINOP(i32 noundef 37, i32 noundef %0, ptr noundef nonnull %233, ptr noundef %249)
  br label %251

251:                                              ; preds = %162, %192, %199, %220, %208, %182, %185, %130, %124, %119, %114, %112, %246, %238, %225, %17, %14
  %252 = phi ptr [ %16, %14 ], [ %18, %17 ], [ %227, %225 ], [ %245, %238 ], [ %250, %246 ], [ %3, %162 ], [ %35, %192 ], [ %35, %199 ], [ %35, %220 ], [ %35, %208 ], [ %35, %182 ], [ %35, %185 ], [ %35, %130 ], [ %35, %124 ], [ %35, %119 ], [ %35, %114 ], [ %35, %112 ]
  ret ptr %252
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_newLOGOP(i32 noundef %0, i32 noundef %1, ptr noundef %2, ptr noundef %3) local_unnamed_addr #4 {
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  store ptr %2, ptr %5, align 8, !tbaa !6
  store ptr %3, ptr %6, align 8, !tbaa !6
  %7 = call fastcc ptr @S_new_logop(i32 noundef %0, i32 noundef %1, ptr noundef nonnull %5, ptr noundef nonnull %6)
  ret ptr %7
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc i32 @S_assignment_type(ptr noundef readonly %0) unnamed_addr #4 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %77, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 4
  %5 = load i16, ptr %4, align 8
  %6 = and i16 %5, 511
  %7 = icmp eq i16 %6, 0
  br i1 %7, label %8, label %18

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 5
  %10 = load i8, ptr %9, align 2, !tbaa !35
  %11 = and i8 %10, 4
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %18, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %struct.unop, ptr %0, i64 0, i32 7
  %15 = load ptr, ptr %14, align 8, !tbaa !36
  %16 = getelementptr inbounds %struct.op, ptr %15, i64 0, i32 4
  %17 = load i16, ptr %16, align 8
  br label %18

18:                                               ; preds = %13, %8, %3
  %19 = phi i16 [ %17, %13 ], [ %5, %8 ], [ %5, %3 ]
  %20 = phi ptr [ %15, %13 ], [ %0, %8 ], [ %0, %3 ]
  %21 = getelementptr inbounds %struct.op, ptr %20, i64 0, i32 5
  %22 = load i8, ptr %21, align 2, !tbaa !35
  %23 = and i16 %19, 511
  switch i16 %23, label %54 [
    i16 180, label %24
    i16 21, label %40
  ]

24:                                               ; preds = %18
  %25 = getelementptr inbounds %struct.logop, ptr %20, i64 0, i32 7
  %26 = load ptr, ptr %25, align 8, !tbaa !101
  %27 = getelementptr inbounds %struct.op, ptr %26, i64 0, i32 1
  %28 = load ptr, ptr %27, align 8, !tbaa !38
  %29 = tail call fastcc i32 @S_assignment_type(ptr noundef %28), !range !280
  %30 = getelementptr inbounds %struct.op, ptr %28, i64 0, i32 1
  %31 = load ptr, ptr %30, align 8, !tbaa !38
  %32 = tail call fastcc i32 @S_assignment_type(ptr noundef %31), !range !280
  %33 = icmp eq i32 %29, 1
  %34 = icmp eq i32 %32, 1
  %35 = select i1 %33, i1 %34, i1 false
  br i1 %35, label %77, label %36

36:                                               ; preds = %24
  %37 = xor i1 %33, %34
  br i1 %37, label %38, label %77

38:                                               ; preds = %36
  %39 = tail call i32 @Perl_yyerror(ptr noundef nonnull @.str.83) #29
  br label %77

40:                                               ; preds = %18
  %41 = getelementptr inbounds %struct.unop, ptr %20, i64 0, i32 7
  %42 = load ptr, ptr %41, align 8, !tbaa !36
  %43 = getelementptr inbounds %struct.unop, ptr %42, i64 0, i32 7
  %44 = load ptr, ptr %43, align 8, !tbaa !36
  %45 = getelementptr inbounds %struct.op, ptr %44, i64 0, i32 4
  %46 = load i16, ptr %45, align 8
  %47 = and i16 %46, 511
  %48 = getelementptr inbounds %struct.op, ptr %44, i64 0, i32 5
  %49 = load i8, ptr %48, align 2, !tbaa !35
  %50 = or i8 %49, %22
  %51 = and i8 %50, 8
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %53, label %54

53:                                               ; preds = %40
  switch i16 %47, label %54 [
    i16 135, label %77
    i16 10, label %77
    i16 149, label %77
    i16 11, label %77
  ]

54:                                               ; preds = %40, %53, %18
  %55 = phi i32 [ 0, %18 ], [ 2, %53 ], [ 2, %40 ]
  %56 = phi i8 [ %22, %18 ], [ %50, %53 ], [ %50, %40 ]
  %57 = phi i16 [ %23, %18 ], [ %47, %53 ], [ %47, %40 ]
  %58 = freeze i8 %56
  %59 = icmp eq i16 %57, 158
  %60 = and i8 %58, 3
  %61 = icmp eq i8 %60, 2
  %62 = and i1 %59, %61
  br i1 %62, label %63, label %68

63:                                               ; preds = %54
  %64 = getelementptr inbounds %struct.op, ptr %20, i64 0, i32 6
  %65 = load i8, ptr %64, align 1, !tbaa !33
  %66 = icmp slt i8 %65, 0
  %67 = select i1 %66, i32 %55, i32 1
  br label %77

68:                                               ; preds = %54
  %69 = and i8 %58, 8
  %70 = icmp ne i8 %69, 0
  %71 = or i1 %70, %59
  br i1 %71, label %77, label %72

72:                                               ; preds = %68
  switch i16 %57, label %73 [
    i16 152, label %77
    i16 151, label %77
    i16 149, label %77
    i16 140, label %77
    i16 139, label %77
    i16 135, label %77
    i16 20, label %77
  ]

73:                                               ; preds = %72
  %74 = and i16 %57, 510
  %75 = icmp eq i16 %74, 10
  %76 = select i1 %75, i32 1, i32 %55
  br label %77

77:                                               ; preds = %73, %63, %68, %72, %72, %72, %72, %72, %72, %72, %53, %53, %53, %53, %24, %38, %36, %1
  %78 = phi i32 [ 1, %1 ], [ 1, %24 ], [ 0, %38 ], [ 0, %36 ], [ 2, %53 ], [ 2, %53 ], [ 2, %53 ], [ 2, %53 ], [ %67, %63 ], [ 1, %72 ], [ 1, %72 ], [ 1, %72 ], [ 1, %72 ], [ 1, %72 ], [ 1, %72 ], [ 1, %72 ], [ 1, %68 ], [ %76, %73 ]
  ret i32 %78
}

declare void @Perl_sv_setiv(ptr noundef, i64 noundef) local_unnamed_addr #6

declare i32 @Perl_intro_my() local_unnamed_addr #6

declare ptr @Perl_refcounted_he_inc(ptr noundef) local_unnamed_addr #6

declare void @Perl_cop_store_label(ptr noundef, ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #6

declare ptr @Perl_av_fetch(ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @S_new_logop(i32 noundef %0, i32 noundef %1, ptr nocapture noundef %2, ptr nocapture noundef %3) unnamed_addr #4 {
  %5 = load ptr, ptr %2, align 8, !tbaa !6
  %6 = load ptr, ptr %3, align 8, !tbaa !6
  %7 = getelementptr inbounds %struct.op, ptr %5, i64 0, i32 4
  %8 = load i16, ptr %7, align 8
  %9 = and i16 %8, 511
  %10 = zext i16 %9 to i32
  switch i32 %10, label %20 [
    i32 205, label %11
    i32 204, label %11
    i32 206, label %11
    i32 203, label %11
    i32 209, label %11
    i32 190, label %11
    i32 208, label %11
  ]

11:                                               ; preds = %4, %4, %4, %4, %4, %4, %4
  %12 = and i16 %8, 8192
  %13 = icmp eq i16 %12, 0
  br i1 %13, label %14, label %20

14:                                               ; preds = %11
  %15 = getelementptr inbounds %struct.op, ptr %5, i64 0, i32 5
  %16 = load i8, ptr %15, align 2, !tbaa !35
  %17 = and i8 %16, 8
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %20

19:                                               ; preds = %14
  tail call void (i32, ptr, ...) @Perl_ck_warner(i32 noundef 28, ptr noundef nonnull @.str.84) #29
  br label %20

20:                                               ; preds = %11, %14, %19, %4
  %21 = icmp eq i32 %0, 178
  br i1 %21, label %22, label %26

22:                                               ; preds = %20
  %23 = tail call ptr @Perl_scalar(ptr noundef nonnull %5)
  %24 = tail call ptr @Perl_scalar(ptr noundef %6)
  %25 = tail call ptr @Perl_newBINOP(i32 noundef 178, i32 noundef %1, ptr noundef nonnull %5, ptr noundef %6)
  br label %535

26:                                               ; preds = %20
  %27 = load i16, ptr %7, align 8
  %28 = and i16 %27, 511
  %29 = icmp eq i16 %28, 37
  br i1 %29, label %30, label %57

30:                                               ; preds = %26
  %31 = getelementptr inbounds %struct.binop, ptr %5, i64 0, i32 7
  %32 = load ptr, ptr %31, align 8, !tbaa !106
  %33 = getelementptr inbounds %struct.op, ptr %32, i64 0, i32 4
  %34 = load i16, ptr %33, align 8
  %35 = and i16 %34, 511
  %36 = icmp eq i16 %35, 5
  br i1 %36, label %37, label %57

37:                                               ; preds = %30
  %38 = getelementptr inbounds %struct.op, ptr %32, i64 0, i32 5
  %39 = load i8, ptr %38, align 2, !tbaa !35
  %40 = icmp sgt i8 %39, -1
  br i1 %40, label %41, label %57

41:                                               ; preds = %37
  %42 = tail call zeroext i1 @Perl_ckwarn(i32 noundef 28) #29
  br i1 %42, label %43, label %57

43:                                               ; preds = %41
  %44 = load ptr, ptr @PL_curcop, align 8, !tbaa !6
  %45 = getelementptr inbounds %struct.cop, ptr %44, i64 0, i32 7
  %46 = load i32, ptr %45, align 4, !tbaa !146
  %47 = load ptr, ptr @PL_parser, align 8, !tbaa !6
  %48 = icmp eq ptr %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %43
  %50 = getelementptr inbounds %struct.yy_parser, ptr %47, i64 0, i32 41
  %51 = load i32, ptr %50, align 8, !tbaa !238
  %52 = icmp eq i32 %51, -1
  br i1 %52, label %54, label %53

53:                                               ; preds = %49
  store i32 %51, ptr %45, align 4, !tbaa !146
  br label %54

54:                                               ; preds = %53, %49, %43
  tail call void (i32, ptr, ...) @Perl_warner(i32 noundef 28, ptr noundef nonnull @.str.90) #29
  %55 = load ptr, ptr @PL_curcop, align 8, !tbaa !6
  %56 = getelementptr inbounds %struct.cop, ptr %55, i64 0, i32 7
  store i32 %46, ptr %56, align 4, !tbaa !146
  br label %57

57:                                               ; preds = %26, %30, %37, %41, %54
  %58 = tail call ptr @Perl_scalar(ptr noundef nonnull %5)
  %59 = load i16, ptr %7, align 8
  %60 = and i16 %59, 511
  %61 = icmp eq i16 %60, 103
  br i1 %61, label %62, label %102

62:                                               ; preds = %57
  %63 = getelementptr inbounds %struct.op, ptr %5, i64 0, i32 5
  %64 = load i8, ptr %63, align 2, !tbaa !35
  %65 = and i8 %64, 4
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %102, label %67

67:                                               ; preds = %62
  %68 = icmp sgt i8 %64, -1
  br i1 %68, label %69, label %77

69:                                               ; preds = %67
  %70 = getelementptr inbounds %struct.op, ptr %6, i64 0, i32 4
  %71 = load i16, ptr %70, align 8
  %72 = and i16 %71, 511
  %73 = icmp eq i16 %72, 103
  %74 = and i32 %0, -2
  %75 = icmp eq i32 %74, 176
  %76 = and i1 %75, %73
  br i1 %76, label %80, label %102

77:                                               ; preds = %67
  %78 = and i32 %0, -2
  %79 = icmp eq i32 %78, 176
  br i1 %79, label %80, label %102

80:                                               ; preds = %69, %77
  %81 = icmp eq i32 %0, 176
  %82 = select i1 %81, i32 177, i32 176
  tail call void @Perl_op_clear(ptr noundef nonnull %5)
  %83 = load i16, ptr %7, align 8
  %84 = and i16 %83, 511
  %85 = zext i16 %84 to i64
  %86 = getelementptr inbounds %struct.op, ptr %5, i64 0, i32 3
  store i64 %85, ptr %86, align 8, !tbaa !34
  %87 = and i16 %83, -512
  store i16 %87, ptr %7, align 8
  %88 = load ptr, ptr @PL_ppaddr, align 8, !tbaa !6
  %89 = getelementptr inbounds %struct.op, ptr %5, i64 0, i32 2
  store ptr %88, ptr %89, align 8, !tbaa !78
  %90 = getelementptr inbounds %struct.op, ptr %6, i64 0, i32 4
  %91 = load i16, ptr %90, align 8
  %92 = and i16 %91, 511
  %93 = icmp eq i16 %92, 103
  br i1 %93, label %94, label %102

94:                                               ; preds = %80
  tail call void @Perl_op_clear(ptr noundef nonnull %6)
  %95 = load i16, ptr %90, align 8
  %96 = and i16 %95, 511
  %97 = zext i16 %96 to i64
  %98 = getelementptr inbounds %struct.op, ptr %6, i64 0, i32 3
  store i64 %97, ptr %98, align 8, !tbaa !34
  %99 = and i16 %95, -512
  store i16 %99, ptr %90, align 8
  %100 = load ptr, ptr @PL_ppaddr, align 8, !tbaa !6
  %101 = getelementptr inbounds %struct.op, ptr %6, i64 0, i32 2
  store ptr %100, ptr %101, align 8, !tbaa !78
  br label %102

102:                                              ; preds = %77, %94, %80, %69, %62, %57
  %103 = phi i32 [ 103, %94 ], [ 0, %80 ], [ 0, %77 ], [ 0, %69 ], [ 0, %62 ], [ 0, %57 ]
  %104 = phi i32 [ %82, %94 ], [ %82, %80 ], [ %0, %77 ], [ %0, %69 ], [ %0, %62 ], [ %0, %57 ]
  br label %105

105:                                              ; preds = %143, %102
  %106 = phi ptr [ %5, %102 ], [ %144, %143 ]
  %107 = getelementptr inbounds %struct.op, ptr %106, i64 0, i32 4
  %108 = load i16, ptr %107, align 8
  %109 = and i16 %108, 511
  %110 = zext i16 %109 to i32
  switch i32 %110, label %359 [
    i32 5, label %147
    i32 0, label %111
    i32 197, label %121
    i32 198, label %121
    i32 192, label %121
  ]

111:                                              ; preds = %105
  %112 = getelementptr inbounds %struct.op, ptr %106, i64 0, i32 5
  %113 = load i8, ptr %112, align 2, !tbaa !35
  %114 = and i8 %113, 4
  %115 = icmp eq i8 %114, 0
  br i1 %115, label %359, label %116

116:                                              ; preds = %111
  %117 = getelementptr inbounds %struct.unop, ptr %106, i64 0, i32 7
  br label %118

118:                                              ; preds = %145, %116
  %119 = phi ptr [ %146, %145 ], [ %117, %116 ]
  %120 = load ptr, ptr %119, align 8, !tbaa !6
  br label %143

121:                                              ; preds = %105, %105, %105
  %122 = getelementptr inbounds %struct.op, ptr %106, i64 0, i32 5
  %123 = load i8, ptr %122, align 2, !tbaa !35
  %124 = and i8 %123, 4
  %125 = icmp eq i8 %124, 0
  br i1 %125, label %359, label %126

126:                                              ; preds = %121
  %127 = getelementptr inbounds %struct.listop, ptr %106, i64 0, i32 7
  %128 = load ptr, ptr %127, align 8, !tbaa !81
  br label %129

129:                                              ; preds = %135, %126
  %130 = phi ptr [ %128, %126 ], [ %137, %135 ]
  %131 = getelementptr inbounds %struct.op, ptr %130, i64 0, i32 4
  %132 = load i16, ptr %131, align 8
  %133 = and i16 %132, 511
  %134 = zext i16 %133 to i32
  switch i32 %134, label %139 [
    i32 196, label %135
    i32 0, label %135
    i32 193, label %135
  ]

135:                                              ; preds = %129, %129, %129
  %136 = getelementptr inbounds %struct.op, ptr %130, i64 0, i32 1
  %137 = load ptr, ptr %136, align 8, !tbaa !38
  %138 = icmp eq ptr %137, null
  br i1 %138, label %145, label %129, !llvm.loop !283

139:                                              ; preds = %129
  %140 = getelementptr inbounds %struct.listop, ptr %106, i64 0, i32 8
  %141 = load ptr, ptr %140, align 8, !tbaa !83
  %142 = icmp eq ptr %130, %141
  br i1 %142, label %143, label %359

143:                                              ; preds = %139, %118
  %144 = phi ptr [ %130, %139 ], [ %120, %118 ]
  br label %105

145:                                              ; preds = %135
  %146 = getelementptr inbounds %struct.listop, ptr %106, i64 0, i32 8
  br label %118

147:                                              ; preds = %105
  %148 = getelementptr inbounds %struct.op, ptr %106, i64 0, i32 4
  %149 = getelementptr inbounds %struct.op, ptr %106, i64 0, i32 6
  %150 = load i8, ptr %149, align 1, !tbaa !33
  %151 = zext i8 %150 to i32
  %152 = and i32 %151, 8
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %160, label %154

154:                                              ; preds = %147
  %155 = getelementptr inbounds %struct.svop, ptr %106, i64 0, i32 7
  %156 = load ptr, ptr %155, align 8, !tbaa !65
  %157 = tail call ptr (ptr, ...) @Perl_mess(ptr noundef nonnull @.str.25, ptr noundef %156) #29
  tail call void @Perl_qerror(ptr noundef %157) #29
  %158 = load i8, ptr %149, align 1, !tbaa !33
  %159 = and i8 %158, -9
  store i8 %159, ptr %149, align 1, !tbaa !33
  br label %164

160:                                              ; preds = %147
  %161 = and i32 %151, 64
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %164, label %163

163:                                              ; preds = %160
  tail call void (i32, ptr, ...) @Perl_ck_warner(i32 noundef 30, ptr noundef nonnull @.str.85) #29
  br label %164

164:                                              ; preds = %160, %163, %154
  switch i32 %104, label %319 [
    i32 176, label %165
    i32 177, label %223
    i32 179, label %281
  ]

165:                                              ; preds = %164
  %166 = getelementptr inbounds %struct.svop, ptr %106, i64 0, i32 7
  %167 = load ptr, ptr %166, align 8, !tbaa !65
  %168 = icmp eq ptr %167, null
  br i1 %168, label %319, label %169

169:                                              ; preds = %165
  %170 = getelementptr inbounds %struct.sv, ptr %167, i64 0, i32 2
  %171 = load i32, ptr %170, align 4, !tbaa !84
  %172 = and i32 %171, 2097152
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %176, label %174

174:                                              ; preds = %169
  %175 = tail call zeroext i1 @Perl_sv_2bool_flags(ptr noundef nonnull %167, i32 noundef 2) #29
  br i1 %175, label %294, label %319

176:                                              ; preds = %169
  %177 = and i32 %171, 65280
  %178 = icmp ne i32 %177, 0
  %179 = and i32 %171, 255
  %180 = icmp eq i32 %179, 8
  %181 = or i1 %178, %180
  %182 = and i32 %171, 16826623
  %183 = icmp eq i32 %182, 16777226
  %184 = or i1 %183, %181
  br i1 %184, label %185, label %319

185:                                              ; preds = %176
  %186 = and i32 %171, 1024
  %187 = icmp eq i32 %186, 0
  br i1 %187, label %202, label %188

188:                                              ; preds = %185
  %189 = load ptr, ptr %167, align 8, !tbaa !85
  %190 = icmp eq ptr %189, null
  br i1 %190, label %319, label %191

191:                                              ; preds = %188
  %192 = getelementptr inbounds %struct.xpv, ptr %189, i64 0, i32 2
  %193 = load i64, ptr %192, align 8, !tbaa !86
  %194 = icmp ugt i64 %193, 1
  br i1 %194, label %294, label %195

195:                                              ; preds = %191
  %196 = icmp eq i64 %193, 0
  br i1 %196, label %319, label %197

197:                                              ; preds = %195
  %198 = getelementptr inbounds %struct.sv, ptr %167, i64 0, i32 3
  %199 = load ptr, ptr %198, align 8, !tbaa !13
  %200 = load i8, ptr %199, align 1, !tbaa !13
  %201 = icmp eq i8 %200, 48
  br i1 %201, label %319, label %294

202:                                              ; preds = %185
  %203 = and i32 %171, 768
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %221, label %205

205:                                              ; preds = %202
  %206 = and i32 %171, 256
  %207 = icmp eq i32 %206, 0
  br i1 %207, label %213, label %208

208:                                              ; preds = %205
  %209 = load ptr, ptr %167, align 8, !tbaa !85
  %210 = getelementptr inbounds %struct.xpviv, ptr %209, i64 0, i32 4
  %211 = load i64, ptr %210, align 8, !tbaa !13
  %212 = icmp eq i64 %211, 0
  br i1 %212, label %213, label %294

213:                                              ; preds = %208, %205
  %214 = and i32 %171, 512
  %215 = icmp eq i32 %214, 0
  br i1 %215, label %319, label %216

216:                                              ; preds = %213
  %217 = load ptr, ptr %167, align 8, !tbaa !85
  %218 = getelementptr inbounds %struct.xpvnv, ptr %217, i64 0, i32 5
  %219 = load double, ptr %218, align 8, !tbaa !13
  %220 = fcmp une double %219, 0.000000e+00
  br i1 %220, label %294, label %319

221:                                              ; preds = %202
  %222 = tail call zeroext i1 @Perl_sv_2bool_flags(ptr noundef nonnull %167, i32 noundef 0) #29
  br i1 %222, label %294, label %319

223:                                              ; preds = %164
  %224 = getelementptr inbounds %struct.svop, ptr %106, i64 0, i32 7
  %225 = load ptr, ptr %224, align 8, !tbaa !65
  %226 = icmp eq ptr %225, null
  br i1 %226, label %294, label %227

227:                                              ; preds = %223
  %228 = getelementptr inbounds %struct.sv, ptr %225, i64 0, i32 2
  %229 = load i32, ptr %228, align 4, !tbaa !84
  %230 = and i32 %229, 2097152
  %231 = icmp eq i32 %230, 0
  br i1 %231, label %234, label %232

232:                                              ; preds = %227
  %233 = tail call zeroext i1 @Perl_sv_2bool_flags(ptr noundef nonnull %225, i32 noundef 2) #29
  br i1 %233, label %319, label %294

234:                                              ; preds = %227
  %235 = and i32 %229, 65280
  %236 = icmp ne i32 %235, 0
  %237 = and i32 %229, 255
  %238 = icmp eq i32 %237, 8
  %239 = or i1 %236, %238
  %240 = and i32 %229, 16826623
  %241 = icmp eq i32 %240, 16777226
  %242 = or i1 %241, %239
  br i1 %242, label %243, label %294

243:                                              ; preds = %234
  %244 = and i32 %229, 1024
  %245 = icmp eq i32 %244, 0
  br i1 %245, label %260, label %246

246:                                              ; preds = %243
  %247 = load ptr, ptr %225, align 8, !tbaa !85
  %248 = icmp eq ptr %247, null
  br i1 %248, label %294, label %249

249:                                              ; preds = %246
  %250 = getelementptr inbounds %struct.xpv, ptr %247, i64 0, i32 2
  %251 = load i64, ptr %250, align 8, !tbaa !86
  %252 = icmp ugt i64 %251, 1
  br i1 %252, label %319, label %253

253:                                              ; preds = %249
  %254 = icmp eq i64 %251, 0
  br i1 %254, label %294, label %255

255:                                              ; preds = %253
  %256 = getelementptr inbounds %struct.sv, ptr %225, i64 0, i32 3
  %257 = load ptr, ptr %256, align 8, !tbaa !13
  %258 = load i8, ptr %257, align 1, !tbaa !13
  %259 = icmp eq i8 %258, 48
  br i1 %259, label %294, label %319

260:                                              ; preds = %243
  %261 = and i32 %229, 768
  %262 = icmp eq i32 %261, 0
  br i1 %262, label %279, label %263

263:                                              ; preds = %260
  %264 = and i32 %229, 256
  %265 = icmp eq i32 %264, 0
  br i1 %265, label %271, label %266

266:                                              ; preds = %263
  %267 = load ptr, ptr %225, align 8, !tbaa !85
  %268 = getelementptr inbounds %struct.xpviv, ptr %267, i64 0, i32 4
  %269 = load i64, ptr %268, align 8, !tbaa !13
  %270 = icmp eq i64 %269, 0
  br i1 %270, label %271, label %319

271:                                              ; preds = %266, %263
  %272 = and i32 %229, 512
  %273 = icmp eq i32 %272, 0
  br i1 %273, label %294, label %274

274:                                              ; preds = %271
  %275 = load ptr, ptr %225, align 8, !tbaa !85
  %276 = getelementptr inbounds %struct.xpvnv, ptr %275, i64 0, i32 5
  %277 = load double, ptr %276, align 8, !tbaa !13
  %278 = fcmp une double %277, 0.000000e+00
  br i1 %278, label %319, label %294

279:                                              ; preds = %260
  %280 = tail call zeroext i1 @Perl_sv_2bool_flags(ptr noundef nonnull %225, i32 noundef 0) #29
  br i1 %280, label %319, label %294

281:                                              ; preds = %164
  %282 = getelementptr inbounds %struct.svop, ptr %106, i64 0, i32 7
  %283 = load ptr, ptr %282, align 8, !tbaa !65
  %284 = getelementptr inbounds %struct.sv, ptr %283, i64 0, i32 2
  %285 = load i32, ptr %284, align 4, !tbaa !84
  %286 = and i32 %285, 65280
  %287 = icmp ne i32 %286, 0
  %288 = and i32 %285, 255
  %289 = icmp eq i32 %288, 8
  %290 = or i1 %287, %289
  %291 = and i32 %285, 16826623
  %292 = icmp eq i32 %291, 16777226
  %293 = or i1 %292, %290
  br i1 %293, label %319, label %294

294:                                              ; preds = %281, %274, %234, %223, %279, %271, %255, %253, %246, %232, %221, %216, %208, %197, %191, %174
  store ptr null, ptr %2, align 8, !tbaa !6
  %295 = getelementptr inbounds %struct.op, ptr %6, i64 0, i32 4
  %296 = load i16, ptr %295, align 8
  %297 = and i16 %296, 511
  %298 = icmp eq i16 %297, 5
  br i1 %298, label %299, label %303

299:                                              ; preds = %294
  %300 = getelementptr inbounds %struct.op, ptr %6, i64 0, i32 6
  %301 = load i8, ptr %300, align 1, !tbaa !33
  %302 = or i8 %301, 4
  store i8 %302, ptr %300, align 1, !tbaa !33
  br label %303

303:                                              ; preds = %299, %294
  tail call void @Perl_op_free(ptr noundef %5)
  %304 = load i16, ptr %295, align 8
  %305 = and i16 %304, 511
  switch i16 %305, label %314 [
    i16 197, label %306
    i16 31, label %310
    i16 33, label %310
    i16 36, label %310
    i16 35, label %310
  ]

306:                                              ; preds = %303
  %307 = tail call ptr @Perl_newUNOP(i32 noundef 0, i32 noundef 128, ptr noundef nonnull %6)
  %308 = getelementptr inbounds %struct.op, ptr %307, i64 0, i32 4
  %309 = load i16, ptr %308, align 8
  br label %314

310:                                              ; preds = %303, %303, %303, %303
  %311 = getelementptr inbounds %struct.op, ptr %6, i64 0, i32 5
  %312 = load i8, ptr %311, align 2, !tbaa !35
  %313 = or i8 %312, -128
  store i8 %313, ptr %311, align 2, !tbaa !35
  br label %314

314:                                              ; preds = %303, %310, %306
  %315 = phi i16 [ %309, %306 ], [ %304, %310 ], [ %304, %303 ]
  %316 = phi ptr [ %307, %306 ], [ %6, %310 ], [ %6, %303 ]
  %317 = getelementptr inbounds %struct.op, ptr %316, i64 0, i32 4
  %318 = or i16 %315, 8192
  store i16 %318, ptr %317, align 8
  br label %535

319:                                              ; preds = %232, %249, %255, %266, %274, %279, %174, %188, %195, %197, %213, %221, %165, %176, %216, %164, %281
  %320 = getelementptr inbounds %struct.op, ptr %6, i64 0, i32 4
  %321 = load i16, ptr %320, align 8
  %322 = and i16 %321, 511
  %323 = icmp eq i16 %322, 158
  br i1 %323, label %324, label %337

324:                                              ; preds = %319
  %325 = getelementptr inbounds %struct.unop, ptr %6, i64 0, i32 7
  %326 = load ptr, ptr %325, align 8, !tbaa !36
  %327 = icmp eq ptr %326, null
  br i1 %327, label %337, label %328

328:                                              ; preds = %324
  %329 = getelementptr inbounds %struct.op, ptr %326, i64 0, i32 4
  %330 = load i16, ptr %329, align 8
  %331 = and i16 %330, 511
  %332 = icmp eq i16 %331, 3
  br i1 %332, label %333, label %337

333:                                              ; preds = %328
  %334 = getelementptr inbounds %struct.op, ptr %326, i64 0, i32 1
  %335 = load ptr, ptr %334, align 8, !tbaa !38
  %336 = icmp eq ptr %335, null
  br i1 %336, label %337, label %338

337:                                              ; preds = %333, %328, %324, %319
  br label %338

338:                                              ; preds = %337, %333
  %339 = phi ptr [ %335, %333 ], [ %6, %337 ]
  %340 = getelementptr inbounds %struct.op, ptr %339, i64 0, i32 4
  %341 = load i16, ptr %340, align 8
  %342 = and i16 %341, 511
  %343 = add nsw i16 %342, -9
  %344 = icmp ult i16 %343, 3
  br i1 %344, label %345, label %351

345:                                              ; preds = %338
  %346 = getelementptr inbounds %struct.op, ptr %339, i64 0, i32 6
  %347 = load i8, ptr %346, align 1, !tbaa !33
  %348 = and i8 %347, -64
  %349 = icmp eq i8 %348, -128
  br i1 %349, label %350, label %351

350:                                              ; preds = %345
  tail call void (i32, ptr, ...) @Perl_ck_warner_d(i32 noundef 2, ptr noundef nonnull @.str.86) #29
  br label %351

351:                                              ; preds = %338, %350, %345
  store ptr null, ptr %3, align 8, !tbaa !6
  %352 = load i16, ptr %148, align 8
  %353 = and i16 %352, 511
  %354 = icmp eq i16 %353, 5
  br i1 %354, label %355, label %358

355:                                              ; preds = %351
  %356 = load i8, ptr %149, align 1, !tbaa !33
  %357 = or i8 %356, 4
  store i8 %357, ptr %149, align 1, !tbaa !33
  br label %358

358:                                              ; preds = %355, %351
  tail call void @Perl_op_free(ptr noundef nonnull %6)
  br label %535

359:                                              ; preds = %139, %121, %105, %111
  %360 = getelementptr inbounds %struct.op, ptr %5, i64 0, i32 5
  %361 = load i8, ptr %360, align 2, !tbaa !35
  %362 = and i8 %361, 4
  %363 = icmp ne i8 %362, 0
  %364 = icmp ne i32 %104, 179
  %365 = and i1 %364, %363
  br i1 %365, label %366, label %417

366:                                              ; preds = %359
  %367 = tail call zeroext i1 @Perl_ckwarn(i32 noundef 12) #29
  br i1 %367, label %368, label %417

368:                                              ; preds = %366
  %369 = getelementptr inbounds %struct.unop, ptr %5, i64 0, i32 7
  %370 = load ptr, ptr %369, align 8, !tbaa !36
  %371 = getelementptr inbounds %struct.op, ptr %370, i64 0, i32 1
  %372 = load ptr, ptr %371, align 8, !tbaa !38
  %373 = load i16, ptr %7, align 8
  %374 = and i16 %373, 511
  %375 = zext i16 %374 to i32
  switch i32 %375, label %417 [
    i32 0, label %376
    i32 37, label %393
  ]

376:                                              ; preds = %368
  %377 = icmp eq ptr %372, null
  br i1 %377, label %417, label %378

378:                                              ; preds = %376
  %379 = getelementptr inbounds %struct.op, ptr %372, i64 0, i32 4
  %380 = load i16, ptr %379, align 8
  %381 = and i16 %380, 511
  %382 = icmp eq i16 %381, 26
  br i1 %382, label %383, label %417

383:                                              ; preds = %378
  %384 = getelementptr inbounds %struct.op, ptr %372, i64 0, i32 5
  %385 = load i8, ptr %384, align 2, !tbaa !35
  %386 = and i8 %385, 64
  %387 = icmp eq i8 %386, 0
  br i1 %387, label %417, label %388

388:                                              ; preds = %383
  %389 = getelementptr inbounds %struct.op, ptr %370, i64 0, i32 5
  %390 = load i8, ptr %389, align 2, !tbaa !35
  %391 = and i8 %390, 3
  %392 = icmp eq i8 %391, 2
  br i1 %392, label %401, label %417

393:                                              ; preds = %368
  %394 = getelementptr inbounds %struct.op, ptr %370, i64 0, i32 4
  %395 = load i16, ptr %394, align 8
  %396 = and i16 %395, 511
  switch i16 %396, label %417 [
    i16 306, label %401
    i16 25, label %401
    i16 0, label %397
    i16 144, label %401
    i16 141, label %401
  ]

397:                                              ; preds = %393
  %398 = getelementptr inbounds %struct.op, ptr %370, i64 0, i32 3
  %399 = load i64, ptr %398, align 8, !tbaa !34
  %400 = icmp eq i64 %399, 25
  br i1 %400, label %401, label %417

401:                                              ; preds = %397, %393, %393, %393, %393, %388
  %402 = phi i16 [ %396, %393 ], [ %396, %393 ], [ 26, %388 ], [ %396, %393 ], [ %396, %393 ], [ 25, %397 ]
  %403 = load ptr, ptr @PL_curcop, align 8, !tbaa !6
  %404 = getelementptr inbounds %struct.cop, ptr %403, i64 0, i32 7
  %405 = load i32, ptr %404, align 4, !tbaa !146
  %406 = load ptr, ptr @PL_parser, align 8, !tbaa !6
  %407 = getelementptr inbounds %struct.yy_parser, ptr %406, i64 0, i32 41
  %408 = load i32, ptr %407, align 8, !tbaa !238
  store i32 %408, ptr %404, align 4, !tbaa !146
  %409 = zext i16 %402 to i64
  %410 = getelementptr inbounds [0 x ptr], ptr @PL_op_desc, i64 0, i64 %409
  %411 = load ptr, ptr %410, align 8, !tbaa !6
  %412 = add nsw i16 %402, -25
  %413 = icmp ult i16 %412, 2
  %414 = select i1 %413, ptr @.str.88, ptr @.str.89
  tail call void (i32, ptr, ...) @Perl_warner(i32 noundef 12, ptr noundef nonnull @.str.87, ptr noundef %411, ptr noundef nonnull %414) #29
  %415 = load ptr, ptr @PL_curcop, align 8, !tbaa !6
  %416 = getelementptr inbounds %struct.cop, ptr %415, i64 0, i32 7
  store i32 %405, ptr %416, align 4, !tbaa !146
  br label %417

417:                                              ; preds = %393, %397, %388, %376, %378, %383, %368, %401, %359, %366
  %418 = icmp eq ptr %6, null
  br i1 %418, label %535, label %419

419:                                              ; preds = %417
  %420 = add i32 %104, -181
  %421 = icmp ult i32 %420, 3
  br i1 %421, label %422, label %426

422:                                              ; preds = %419
  %423 = getelementptr inbounds %struct.op, ptr %6, i64 0, i32 6
  %424 = load i8, ptr %423, align 1, !tbaa !33
  %425 = or i8 %424, 64
  store i8 %425, ptr %423, align 1, !tbaa !33
  br label %426

426:                                              ; preds = %419, %422
  %427 = load ptr, ptr %6, align 8, !tbaa !25
  %428 = icmp eq ptr %427, null
  br i1 %428, label %429, label %431

429:                                              ; preds = %426
  %430 = tail call ptr @Perl_op_linklist(ptr noundef nonnull %6)
  br label %431

431:                                              ; preds = %426, %429
  %432 = phi ptr [ %430, %429 ], [ %427, %426 ]
  %433 = tail call ptr @Perl_Slab_Alloc(i64 noundef 56)
  %434 = trunc i32 %104 to i16
  %435 = getelementptr inbounds %struct.logop, ptr %433, i64 0, i32 4
  %436 = load i16, ptr %435, align 8
  %437 = and i16 %434, 511
  %438 = and i16 %436, -512
  %439 = or i16 %438, %437
  store i16 %439, ptr %435, align 8
  %440 = sext i32 %104 to i64
  %441 = getelementptr inbounds [0 x ptr], ptr @PL_ppaddr, i64 0, i64 %440
  %442 = load ptr, ptr %441, align 8, !tbaa !6
  %443 = getelementptr inbounds %struct.logop, ptr %433, i64 0, i32 2
  store ptr %442, ptr %443, align 8, !tbaa !99
  %444 = getelementptr inbounds %struct.logop, ptr %433, i64 0, i32 7
  store ptr %5, ptr %444, align 8, !tbaa !101
  %445 = getelementptr inbounds %struct.logop, ptr %433, i64 0, i32 8
  store ptr %432, ptr %445, align 8, !tbaa !102
  %446 = getelementptr inbounds %struct.logop, ptr %433, i64 0, i32 5
  store i8 4, ptr %446, align 2, !tbaa !103
  br label %447

447:                                              ; preds = %431, %447
  %448 = phi ptr [ %5, %431 ], [ %450, %447 ]
  %449 = getelementptr inbounds %struct.op, ptr %448, i64 0, i32 1
  %450 = load ptr, ptr %449, align 8, !tbaa !38
  %451 = icmp eq ptr %450, null
  br i1 %451, label %452, label %447, !llvm.loop !104

452:                                              ; preds = %447
  %453 = getelementptr inbounds %struct.op, ptr %448, i64 0, i32 1
  %454 = getelementptr inbounds %struct.op, ptr %448, i64 0, i32 4
  %455 = load i16, ptr %454, align 8
  %456 = and i16 %455, -16385
  store i16 %456, ptr %454, align 8
  store ptr null, ptr %453, align 8, !tbaa !38
  %457 = load i8, ptr %446, align 2, !tbaa !103
  %458 = trunc i32 %1 to i8
  %459 = or i8 %457, %458
  store i8 %459, ptr %446, align 2, !tbaa !103
  %460 = lshr i32 %1, 8
  %461 = trunc i32 %460 to i8
  %462 = or i8 %461, 1
  %463 = getelementptr inbounds %struct.logop, ptr %433, i64 0, i32 6
  store i8 %462, ptr %463, align 1, !tbaa !218
  %464 = load ptr, ptr %5, align 8, !tbaa !25
  %465 = icmp eq ptr %464, null
  br i1 %465, label %466, label %468

466:                                              ; preds = %452
  %467 = tail call ptr @Perl_op_linklist(ptr noundef nonnull %5)
  br label %468

468:                                              ; preds = %452, %466
  %469 = phi ptr [ %467, %466 ], [ %464, %452 ]
  store ptr %469, ptr %433, align 8, !tbaa !214
  store ptr %433, ptr %5, align 8, !tbaa !25
  %470 = getelementptr inbounds %struct.op, ptr %5, i64 0, i32 1
  %471 = load ptr, ptr %470, align 8, !tbaa !6
  br label %472

472:                                              ; preds = %468, %472
  %473 = phi ptr [ %475, %472 ], [ %6, %468 ]
  %474 = getelementptr inbounds %struct.op, ptr %473, i64 0, i32 1
  %475 = load ptr, ptr %474, align 8, !tbaa !38
  %476 = icmp eq ptr %475, null
  br i1 %476, label %477, label %472, !llvm.loop !80

477:                                              ; preds = %472
  %478 = getelementptr inbounds %struct.op, ptr %473, i64 0, i32 1
  %479 = icmp eq ptr %471, null
  %480 = getelementptr inbounds %struct.op, ptr %473, i64 0, i32 4
  %481 = load i16, ptr %480, align 8
  %482 = select i1 %479, i16 0, i16 16384
  %483 = and i16 %481, -16385
  %484 = or i16 %483, %482
  store i16 %484, ptr %480, align 8
  store ptr %471, ptr %478, align 8, !tbaa !38
  %485 = load i16, ptr %7, align 8
  %486 = or i16 %485, 16384
  store i16 %486, ptr %7, align 8
  store ptr %6, ptr %470, align 8, !tbaa !38
  br i1 %479, label %487, label %515

487:                                              ; preds = %477
  %488 = load i16, ptr %435, align 8
  %489 = and i16 %488, 511
  %490 = icmp eq i16 %489, 380
  br i1 %490, label %491, label %495

491:                                              ; preds = %487
  %492 = tail call ptr @Perl_custom_op_get_field(ptr noundef nonnull %433, i32 noundef 4)
  %493 = ptrtoint ptr %492 to i64
  %494 = trunc i64 %493 to i32
  br label %507

495:                                              ; preds = %487
  %496 = zext i16 %489 to i64
  %497 = icmp eq i16 %489, 0
  br i1 %497, label %498, label %501

498:                                              ; preds = %495
  %499 = getelementptr inbounds %struct.op, ptr %433, i64 0, i32 3
  %500 = load i64, ptr %499, align 8, !tbaa !34
  br label %501

501:                                              ; preds = %498, %495
  %502 = phi i64 [ %500, %498 ], [ %496, %495 ]
  %503 = and i64 %502, 4294967295
  %504 = getelementptr inbounds [0 x i32], ptr @PL_opargs, i64 0, i64 %503
  %505 = load i32, ptr %504, align 4, !tbaa !52
  %506 = and i32 %505, 3840
  br label %507

507:                                              ; preds = %501, %491
  %508 = phi i32 [ %494, %491 ], [ %506, %501 ]
  %509 = add i32 %508, -512
  %510 = tail call i32 @llvm.fshl.i32(i32 %508, i32 %509, i32 24)
  switch i32 %510, label %512 [
    i32 7, label %511
    i32 3, label %511
    i32 2, label %511
    i32 0, label %511
  ]

511:                                              ; preds = %507, %507, %507, %507
  store ptr %473, ptr %445, align 8, !tbaa !83
  br label %512

512:                                              ; preds = %507, %511
  %513 = load i16, ptr %480, align 8
  %514 = and i16 %513, -16385
  store i16 %514, ptr %480, align 8
  store ptr null, ptr %478, align 8, !tbaa !38
  br label %515

515:                                              ; preds = %477, %512
  %516 = load ptr, ptr @PL_op_mask, align 8, !tbaa !6
  %517 = icmp eq ptr %516, null
  br i1 %517, label %525, label %518

518:                                              ; preds = %515
  %519 = getelementptr inbounds i8, ptr %516, i64 %440
  %520 = load i8, ptr %519, align 1, !tbaa !13
  %521 = icmp eq i8 %520, 0
  br i1 %521, label %525, label %522

522:                                              ; preds = %518
  tail call void @Perl_op_free(ptr noundef nonnull %433)
  %523 = getelementptr inbounds [0 x ptr], ptr @PL_op_desc, i64 0, i64 %440
  %524 = load ptr, ptr %523, align 8, !tbaa !6
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.63, ptr noundef %524) #29
  br label %529

525:                                              ; preds = %518, %515
  %526 = getelementptr inbounds [0 x ptr], ptr @PL_check, i64 0, i64 %440
  %527 = load ptr, ptr %526, align 8, !tbaa !6
  %528 = tail call ptr %527(ptr noundef nonnull %433) #29
  br label %529

529:                                              ; preds = %525, %522
  %530 = getelementptr inbounds [0 x i32], ptr @PL_opargs, i64 0, i64 %440
  %531 = load i32, ptr %530, align 4, !tbaa !52
  %532 = lshr i32 %531, 1
  %533 = and i32 %532, 2
  %534 = tail call ptr @Perl_newUNOP(i32 noundef %103, i32 noundef %533, ptr noundef nonnull %433)
  store ptr %534, ptr %6, align 8, !tbaa !25
  br label %535

535:                                              ; preds = %417, %529, %358, %314, %22
  %536 = phi ptr [ %25, %22 ], [ %316, %314 ], [ %5, %358 ], [ %534, %529 ], [ %5, %417 ]
  ret ptr %536
}

declare zeroext i1 @Perl_sv_2bool_flags(ptr noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_newCONDOP(i32 noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3) local_unnamed_addr #4 {
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = icmp eq ptr %3, null
  br i1 %9, label %10, label %12

10:                                               ; preds = %4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %7)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %8)
  store ptr %1, ptr %7, align 8, !tbaa !6
  store ptr %2, ptr %8, align 8, !tbaa !6
  %11 = call fastcc ptr @S_new_logop(i32 noundef 176, i32 noundef 0, ptr noundef nonnull %7, ptr noundef nonnull %8)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %8)
  br label %340

12:                                               ; preds = %4
  %13 = icmp eq ptr %2, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %12
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6)
  store ptr %1, ptr %5, align 8, !tbaa !6
  store ptr %3, ptr %6, align 8, !tbaa !6
  %15 = call fastcc ptr @S_new_logop(i32 noundef 177, i32 noundef 0, ptr noundef nonnull %5, ptr noundef nonnull %6)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6)
  br label %340

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.op, ptr %1, i64 0, i32 4
  %18 = load i16, ptr %17, align 8
  %19 = and i16 %18, 511
  %20 = icmp eq i16 %19, 37
  br i1 %20, label %21, label %48

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.binop, ptr %1, i64 0, i32 7
  %23 = load ptr, ptr %22, align 8, !tbaa !106
  %24 = getelementptr inbounds %struct.op, ptr %23, i64 0, i32 4
  %25 = load i16, ptr %24, align 8
  %26 = and i16 %25, 511
  %27 = icmp eq i16 %26, 5
  br i1 %27, label %28, label %48

28:                                               ; preds = %21
  %29 = getelementptr inbounds %struct.op, ptr %23, i64 0, i32 5
  %30 = load i8, ptr %29, align 2, !tbaa !35
  %31 = icmp sgt i8 %30, -1
  br i1 %31, label %32, label %48

32:                                               ; preds = %28
  %33 = tail call zeroext i1 @Perl_ckwarn(i32 noundef 28) #29
  br i1 %33, label %34, label %48

34:                                               ; preds = %32
  %35 = load ptr, ptr @PL_curcop, align 8, !tbaa !6
  %36 = getelementptr inbounds %struct.cop, ptr %35, i64 0, i32 7
  %37 = load i32, ptr %36, align 4, !tbaa !146
  %38 = load ptr, ptr @PL_parser, align 8, !tbaa !6
  %39 = icmp eq ptr %38, null
  br i1 %39, label %45, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct.yy_parser, ptr %38, i64 0, i32 41
  %42 = load i32, ptr %41, align 8, !tbaa !238
  %43 = icmp eq i32 %42, -1
  br i1 %43, label %45, label %44

44:                                               ; preds = %40
  store i32 %42, ptr %36, align 4, !tbaa !146
  br label %45

45:                                               ; preds = %44, %40, %34
  tail call void (i32, ptr, ...) @Perl_warner(i32 noundef 28, ptr noundef nonnull @.str.90) #29
  %46 = load ptr, ptr @PL_curcop, align 8, !tbaa !6
  %47 = getelementptr inbounds %struct.cop, ptr %46, i64 0, i32 7
  store i32 %37, ptr %47, align 4, !tbaa !146
  br label %48

48:                                               ; preds = %16, %21, %28, %32, %45
  %49 = tail call ptr @Perl_scalar(ptr noundef nonnull %1)
  br label %50

50:                                               ; preds = %88, %48
  %51 = phi ptr [ %1, %48 ], [ %89, %88 ]
  %52 = getelementptr inbounds %struct.op, ptr %51, i64 0, i32 4
  %53 = load i16, ptr %52, align 8
  %54 = and i16 %53, 511
  %55 = zext i16 %54 to i32
  switch i32 %55, label %184 [
    i32 5, label %92
    i32 0, label %56
    i32 197, label %66
    i32 198, label %66
    i32 192, label %66
  ]

56:                                               ; preds = %50
  %57 = getelementptr inbounds %struct.op, ptr %51, i64 0, i32 5
  %58 = load i8, ptr %57, align 2, !tbaa !35
  %59 = and i8 %58, 4
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %184, label %61

61:                                               ; preds = %56
  %62 = getelementptr inbounds %struct.unop, ptr %51, i64 0, i32 7
  br label %63

63:                                               ; preds = %90, %61
  %64 = phi ptr [ %91, %90 ], [ %62, %61 ]
  %65 = load ptr, ptr %64, align 8, !tbaa !6
  br label %88

66:                                               ; preds = %50, %50, %50
  %67 = getelementptr inbounds %struct.op, ptr %51, i64 0, i32 5
  %68 = load i8, ptr %67, align 2, !tbaa !35
  %69 = and i8 %68, 4
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %184, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %struct.listop, ptr %51, i64 0, i32 7
  %73 = load ptr, ptr %72, align 8, !tbaa !81
  br label %74

74:                                               ; preds = %80, %71
  %75 = phi ptr [ %73, %71 ], [ %82, %80 ]
  %76 = getelementptr inbounds %struct.op, ptr %75, i64 0, i32 4
  %77 = load i16, ptr %76, align 8
  %78 = and i16 %77, 511
  %79 = zext i16 %78 to i32
  switch i32 %79, label %84 [
    i32 196, label %80
    i32 0, label %80
    i32 193, label %80
  ]

80:                                               ; preds = %74, %74, %74
  %81 = getelementptr inbounds %struct.op, ptr %75, i64 0, i32 1
  %82 = load ptr, ptr %81, align 8, !tbaa !38
  %83 = icmp eq ptr %82, null
  br i1 %83, label %90, label %74, !llvm.loop !283

84:                                               ; preds = %74
  %85 = getelementptr inbounds %struct.listop, ptr %51, i64 0, i32 8
  %86 = load ptr, ptr %85, align 8, !tbaa !83
  %87 = icmp eq ptr %75, %86
  br i1 %87, label %88, label %184

88:                                               ; preds = %84, %63
  %89 = phi ptr [ %75, %84 ], [ %65, %63 ]
  br label %50

90:                                               ; preds = %80
  %91 = getelementptr inbounds %struct.listop, ptr %51, i64 0, i32 8
  br label %63

92:                                               ; preds = %50
  %93 = getelementptr inbounds %struct.svop, ptr %51, i64 0, i32 7
  %94 = load ptr, ptr %93, align 8, !tbaa !65
  %95 = icmp eq ptr %94, null
  br i1 %95, label %155, label %96

96:                                               ; preds = %92
  %97 = getelementptr inbounds %struct.sv, ptr %94, i64 0, i32 2
  %98 = load i32, ptr %97, align 4, !tbaa !84
  %99 = and i32 %98, 2097152
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %104, label %101

101:                                              ; preds = %96
  %102 = tail call zeroext i1 @Perl_sv_2bool_flags(ptr noundef nonnull %94, i32 noundef 2) #29
  %103 = freeze i1 %102
  br i1 %103, label %154, label %155

104:                                              ; preds = %96
  %105 = and i32 %98, 65280
  %106 = icmp ne i32 %105, 0
  %107 = and i32 %98, 255
  %108 = icmp eq i32 %107, 8
  %109 = or i1 %106, %108
  %110 = and i32 %98, 16826623
  %111 = icmp eq i32 %110, 16777226
  %112 = or i1 %111, %109
  br i1 %112, label %113, label %155

113:                                              ; preds = %104
  %114 = and i32 %98, 1024
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %131, label %116

116:                                              ; preds = %113
  %117 = load ptr, ptr %94, align 8, !tbaa !85
  %118 = icmp eq ptr %117, null
  br i1 %118, label %155, label %119

119:                                              ; preds = %116
  %120 = getelementptr inbounds %struct.xpv, ptr %117, i64 0, i32 2
  %121 = load i64, ptr %120, align 8, !tbaa !86
  %122 = icmp ugt i64 %121, 1
  br i1 %122, label %154, label %123

123:                                              ; preds = %119
  %124 = icmp eq i64 %121, 0
  br i1 %124, label %155, label %125

125:                                              ; preds = %123
  %126 = getelementptr inbounds %struct.sv, ptr %94, i64 0, i32 3
  %127 = load ptr, ptr %126, align 8, !tbaa !13
  %128 = load i8, ptr %127, align 1, !tbaa !13
  %129 = freeze i8 %128
  %130 = icmp eq i8 %129, 48
  br i1 %130, label %155, label %154

131:                                              ; preds = %113
  %132 = and i32 %98, 768
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %151, label %134

134:                                              ; preds = %131
  %135 = and i32 %98, 256
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %142, label %137

137:                                              ; preds = %134
  %138 = load ptr, ptr %94, align 8, !tbaa !85
  %139 = getelementptr inbounds %struct.xpviv, ptr %138, i64 0, i32 4
  %140 = load i64, ptr %139, align 8, !tbaa !13
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %142, label %154

142:                                              ; preds = %137, %134
  %143 = and i32 %98, 512
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %155, label %145

145:                                              ; preds = %142
  %146 = load ptr, ptr %94, align 8, !tbaa !85
  %147 = getelementptr inbounds %struct.xpvnv, ptr %146, i64 0, i32 5
  %148 = load double, ptr %147, align 8, !tbaa !13
  %149 = freeze double %148
  %150 = fcmp une double %149, 0.000000e+00
  br i1 %150, label %154, label %155

151:                                              ; preds = %131
  %152 = tail call zeroext i1 @Perl_sv_2bool_flags(ptr noundef nonnull %94, i32 noundef 0) #29
  %153 = freeze i1 %152
  br i1 %153, label %154, label %155

154:                                              ; preds = %101, %151, %125, %145, %137, %119
  br label %155

155:                                              ; preds = %145, %101, %151, %125, %92, %104, %116, %123, %142, %154
  %156 = phi ptr [ %2, %154 ], [ %3, %142 ], [ %3, %123 ], [ %3, %116 ], [ %3, %104 ], [ %3, %92 ], [ %3, %125 ], [ %3, %151 ], [ %3, %101 ], [ %3, %145 ]
  %157 = phi ptr [ %3, %154 ], [ %2, %142 ], [ %2, %123 ], [ %2, %116 ], [ %2, %104 ], [ %2, %92 ], [ %2, %125 ], [ %2, %151 ], [ %2, %101 ], [ %2, %145 ]
  %158 = getelementptr inbounds %struct.op, ptr %51, i64 0, i32 6
  %159 = load i8, ptr %158, align 1, !tbaa !33
  %160 = and i8 %159, 72
  %161 = icmp eq i8 %160, 72
  br i1 %161, label %162, label %167

162:                                              ; preds = %155
  %163 = load ptr, ptr %93, align 8, !tbaa !65
  %164 = tail call ptr (ptr, ...) @Perl_mess(ptr noundef nonnull @.str.25, ptr noundef %163) #29
  tail call void @Perl_qerror(ptr noundef %164) #29
  %165 = load i8, ptr %158, align 1, !tbaa !33
  %166 = and i8 %165, -9
  store i8 %166, ptr %158, align 1, !tbaa !33
  br label %167

167:                                              ; preds = %162, %155
  tail call void @Perl_op_free(ptr noundef %1)
  tail call void @Perl_op_free(ptr noundef nonnull %157)
  %168 = getelementptr inbounds %struct.op, ptr %156, i64 0, i32 4
  %169 = load i16, ptr %168, align 8
  %170 = and i16 %169, 511
  switch i16 %170, label %179 [
    i16 197, label %171
    i16 31, label %175
    i16 33, label %175
    i16 35, label %175
    i16 36, label %175
  ]

171:                                              ; preds = %167
  %172 = tail call ptr @Perl_newUNOP(i32 noundef 0, i32 noundef 128, ptr noundef nonnull %156)
  %173 = getelementptr inbounds %struct.op, ptr %172, i64 0, i32 4
  %174 = load i16, ptr %173, align 8
  br label %179

175:                                              ; preds = %167, %167, %167, %167
  %176 = getelementptr inbounds %struct.op, ptr %156, i64 0, i32 5
  %177 = load i8, ptr %176, align 2, !tbaa !35
  %178 = or i8 %177, -128
  store i8 %178, ptr %176, align 2, !tbaa !35
  br label %179

179:                                              ; preds = %167, %175, %171
  %180 = phi i16 [ %174, %171 ], [ %169, %175 ], [ %169, %167 ]
  %181 = phi ptr [ %172, %171 ], [ %156, %175 ], [ %156, %167 ]
  %182 = getelementptr inbounds %struct.op, ptr %181, i64 0, i32 4
  %183 = or i16 %180, 8192
  store i16 %183, ptr %182, align 8
  br label %340

184:                                              ; preds = %84, %66, %50, %56
  %185 = load ptr, ptr %2, align 8, !tbaa !25
  %186 = icmp eq ptr %185, null
  br i1 %186, label %187, label %189

187:                                              ; preds = %184
  %188 = tail call ptr @Perl_op_linklist(ptr noundef nonnull %2)
  br label %189

189:                                              ; preds = %184, %187
  %190 = phi ptr [ %188, %187 ], [ %185, %184 ]
  %191 = tail call ptr @Perl_Slab_Alloc(i64 noundef 56)
  %192 = getelementptr inbounds %struct.logop, ptr %191, i64 0, i32 4
  %193 = load i16, ptr %192, align 8
  %194 = and i16 %193, -512
  %195 = or i16 %194, 180
  store i16 %195, ptr %192, align 8
  %196 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_ppaddr, i64 0, i64 180), align 8, !tbaa !6
  %197 = getelementptr inbounds %struct.logop, ptr %191, i64 0, i32 2
  store ptr %196, ptr %197, align 8, !tbaa !99
  %198 = getelementptr inbounds %struct.logop, ptr %191, i64 0, i32 7
  store ptr %1, ptr %198, align 8, !tbaa !101
  %199 = getelementptr inbounds %struct.logop, ptr %191, i64 0, i32 8
  store ptr %190, ptr %199, align 8, !tbaa !102
  %200 = getelementptr inbounds %struct.logop, ptr %191, i64 0, i32 5
  store i8 4, ptr %200, align 2, !tbaa !103
  br label %201

201:                                              ; preds = %204, %189
  %202 = phi ptr [ %1, %189 ], [ %206, %204 ]
  %203 = icmp eq ptr %202, null
  br i1 %203, label %214, label %204

204:                                              ; preds = %201
  %205 = getelementptr inbounds %struct.op, ptr %202, i64 0, i32 1
  %206 = load ptr, ptr %205, align 8, !tbaa !38
  %207 = icmp eq ptr %206, null
  br i1 %207, label %208, label %201, !llvm.loop !104

208:                                              ; preds = %204
  %209 = getelementptr inbounds %struct.op, ptr %202, i64 0, i32 1
  %210 = getelementptr inbounds %struct.op, ptr %202, i64 0, i32 4
  %211 = load i16, ptr %210, align 8
  %212 = and i16 %211, -16385
  store i16 %212, ptr %210, align 8
  store ptr null, ptr %209, align 8, !tbaa !38
  %213 = load i8, ptr %200, align 2, !tbaa !103
  br label %214

214:                                              ; preds = %201, %208
  %215 = phi i8 [ %213, %208 ], [ 4, %201 ]
  %216 = trunc i32 %0 to i8
  %217 = or i8 %215, %216
  store i8 %217, ptr %200, align 2, !tbaa !103
  %218 = lshr i32 %0, 8
  %219 = trunc i32 %218 to i8
  %220 = or i8 %219, 1
  %221 = getelementptr inbounds %struct.logop, ptr %191, i64 0, i32 6
  store i8 %220, ptr %221, align 1, !tbaa !218
  %222 = load ptr, ptr %3, align 8, !tbaa !25
  %223 = icmp eq ptr %222, null
  br i1 %223, label %224, label %226

224:                                              ; preds = %214
  %225 = tail call ptr @Perl_op_linklist(ptr noundef nonnull %3)
  br label %226

226:                                              ; preds = %214, %224
  %227 = phi ptr [ %225, %224 ], [ %222, %214 ]
  store ptr %227, ptr %191, align 8, !tbaa !214
  %228 = load ptr, ptr @PL_op_mask, align 8, !tbaa !6
  %229 = icmp eq ptr %228, null
  br i1 %229, label %236, label %230

230:                                              ; preds = %226
  %231 = getelementptr inbounds i8, ptr %228, i64 180
  %232 = load i8, ptr %231, align 1, !tbaa !13
  %233 = icmp eq i8 %232, 0
  br i1 %233, label %236, label %234

234:                                              ; preds = %230
  tail call void @Perl_op_free(ptr noundef nonnull %191)
  %235 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_op_desc, i64 0, i64 180), align 8, !tbaa !6
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.63, ptr noundef %235) #29
  br label %239

236:                                              ; preds = %230, %226
  %237 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_check, i64 0, i64 180), align 8, !tbaa !6
  %238 = tail call ptr %237(ptr noundef nonnull %191) #29
  br label %239

239:                                              ; preds = %236, %234
  %240 = load ptr, ptr %1, align 8, !tbaa !25
  %241 = icmp eq ptr %240, null
  br i1 %241, label %242, label %244

242:                                              ; preds = %239
  %243 = tail call ptr @Perl_op_linklist(ptr noundef nonnull %1)
  br label %244

244:                                              ; preds = %239, %242
  %245 = phi ptr [ %243, %242 ], [ %240, %239 ]
  store ptr %191, ptr %1, align 8, !tbaa !25
  %246 = getelementptr inbounds %struct.op, ptr %1, i64 0, i32 1
  %247 = load ptr, ptr %246, align 8, !tbaa !6
  br label %248

248:                                              ; preds = %244, %248
  %249 = phi ptr [ %251, %248 ], [ %2, %244 ]
  %250 = getelementptr inbounds %struct.op, ptr %249, i64 0, i32 1
  %251 = load ptr, ptr %250, align 8, !tbaa !38
  %252 = icmp eq ptr %251, null
  br i1 %252, label %253, label %248, !llvm.loop !80

253:                                              ; preds = %248
  %254 = getelementptr inbounds %struct.op, ptr %249, i64 0, i32 1
  %255 = icmp eq ptr %247, null
  %256 = getelementptr inbounds %struct.op, ptr %249, i64 0, i32 4
  %257 = load i16, ptr %256, align 8
  %258 = select i1 %255, i16 0, i16 16384
  %259 = and i16 %257, -16385
  %260 = or i16 %259, %258
  store i16 %260, ptr %256, align 8
  store ptr %247, ptr %254, align 8, !tbaa !38
  %261 = load i16, ptr %17, align 8
  %262 = or i16 %261, 16384
  store i16 %262, ptr %17, align 8
  store ptr %2, ptr %246, align 8, !tbaa !38
  br i1 %255, label %263, label %291

263:                                              ; preds = %253
  %264 = load i16, ptr %192, align 8
  %265 = and i16 %264, 511
  %266 = icmp eq i16 %265, 380
  br i1 %266, label %267, label %271

267:                                              ; preds = %263
  %268 = tail call ptr @Perl_custom_op_get_field(ptr noundef nonnull %191, i32 noundef 4)
  %269 = ptrtoint ptr %268 to i64
  %270 = trunc i64 %269 to i32
  br label %283

271:                                              ; preds = %263
  %272 = zext i16 %265 to i64
  %273 = icmp eq i16 %265, 0
  br i1 %273, label %274, label %277

274:                                              ; preds = %271
  %275 = getelementptr inbounds %struct.op, ptr %191, i64 0, i32 3
  %276 = load i64, ptr %275, align 8, !tbaa !34
  br label %277

277:                                              ; preds = %274, %271
  %278 = phi i64 [ %276, %274 ], [ %272, %271 ]
  %279 = and i64 %278, 4294967295
  %280 = getelementptr inbounds [0 x i32], ptr @PL_opargs, i64 0, i64 %279
  %281 = load i32, ptr %280, align 4, !tbaa !52
  %282 = and i32 %281, 3840
  br label %283

283:                                              ; preds = %277, %267
  %284 = phi i32 [ %270, %267 ], [ %282, %277 ]
  %285 = add i32 %284, -512
  %286 = tail call i32 @llvm.fshl.i32(i32 %284, i32 %285, i32 24)
  switch i32 %286, label %288 [
    i32 7, label %287
    i32 3, label %287
    i32 2, label %287
    i32 0, label %287
  ]

287:                                              ; preds = %283, %283, %283, %283
  store ptr %249, ptr %199, align 8, !tbaa !83
  br label %288

288:                                              ; preds = %283, %287
  %289 = load i16, ptr %256, align 8
  %290 = and i16 %289, -16385
  store i16 %290, ptr %256, align 8
  store ptr null, ptr %254, align 8, !tbaa !38
  br label %291

291:                                              ; preds = %253, %288
  %292 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 1
  %293 = load ptr, ptr %292, align 8, !tbaa !6
  br label %294

294:                                              ; preds = %291, %294
  %295 = phi ptr [ %297, %294 ], [ %3, %291 ]
  %296 = getelementptr inbounds %struct.op, ptr %295, i64 0, i32 1
  %297 = load ptr, ptr %296, align 8, !tbaa !38
  %298 = icmp eq ptr %297, null
  br i1 %298, label %299, label %294, !llvm.loop !80

299:                                              ; preds = %294
  %300 = getelementptr inbounds %struct.op, ptr %295, i64 0, i32 1
  %301 = icmp eq ptr %293, null
  %302 = getelementptr inbounds %struct.op, ptr %295, i64 0, i32 4
  %303 = load i16, ptr %302, align 8
  %304 = select i1 %301, i16 0, i16 16384
  %305 = and i16 %303, -16385
  %306 = or i16 %305, %304
  store i16 %306, ptr %302, align 8
  store ptr %293, ptr %300, align 8, !tbaa !38
  %307 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 4
  %308 = load i16, ptr %307, align 8
  %309 = or i16 %308, 16384
  store i16 %309, ptr %307, align 8
  store ptr %3, ptr %292, align 8, !tbaa !38
  br i1 %301, label %310, label %338

310:                                              ; preds = %299
  %311 = load i16, ptr %192, align 8
  %312 = and i16 %311, 511
  %313 = icmp eq i16 %312, 380
  br i1 %313, label %314, label %318

314:                                              ; preds = %310
  %315 = tail call ptr @Perl_custom_op_get_field(ptr noundef nonnull %191, i32 noundef 4)
  %316 = ptrtoint ptr %315 to i64
  %317 = trunc i64 %316 to i32
  br label %330

318:                                              ; preds = %310
  %319 = zext i16 %312 to i64
  %320 = icmp eq i16 %312, 0
  br i1 %320, label %321, label %324

321:                                              ; preds = %318
  %322 = getelementptr inbounds %struct.op, ptr %191, i64 0, i32 3
  %323 = load i64, ptr %322, align 8, !tbaa !34
  br label %324

324:                                              ; preds = %321, %318
  %325 = phi i64 [ %323, %321 ], [ %319, %318 ]
  %326 = and i64 %325, 4294967295
  %327 = getelementptr inbounds [0 x i32], ptr @PL_opargs, i64 0, i64 %326
  %328 = load i32, ptr %327, align 4, !tbaa !52
  %329 = and i32 %328, 3840
  br label %330

330:                                              ; preds = %324, %314
  %331 = phi i32 [ %317, %314 ], [ %329, %324 ]
  %332 = add i32 %331, -512
  %333 = tail call i32 @llvm.fshl.i32(i32 %331, i32 %332, i32 24)
  switch i32 %333, label %335 [
    i32 7, label %334
    i32 3, label %334
    i32 2, label %334
    i32 0, label %334
  ]

334:                                              ; preds = %330, %330, %330, %330
  store ptr %295, ptr %199, align 8, !tbaa !83
  br label %335

335:                                              ; preds = %330, %334
  %336 = load i16, ptr %302, align 8
  %337 = and i16 %336, -16385
  store i16 %337, ptr %302, align 8
  store ptr null, ptr %300, align 8, !tbaa !38
  br label %338

338:                                              ; preds = %299, %335
  %339 = tail call ptr @Perl_newUNOP(i32 noundef 0, i32 noundef 0, ptr noundef nonnull %191)
  store ptr %339, ptr %3, align 8, !tbaa !25
  store ptr %339, ptr %2, align 8, !tbaa !25
  store ptr %245, ptr %339, align 8, !tbaa !25
  br label %340

340:                                              ; preds = %338, %179, %14, %10
  %341 = phi ptr [ %181, %179 ], [ %339, %338 ], [ %15, %14 ], [ %11, %10 ]
  ret ptr %341
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_newRANGE(i32 noundef %0, ptr noundef %1, ptr noundef %2) local_unnamed_addr #4 {
  %4 = load ptr, ptr %2, align 8, !tbaa !25
  %5 = icmp eq ptr %4, null
  br i1 %5, label %6, label %8

6:                                                ; preds = %3
  %7 = tail call ptr @Perl_op_linklist(ptr noundef nonnull %2)
  br label %8

8:                                                ; preds = %3, %6
  %9 = phi ptr [ %7, %6 ], [ %4, %3 ]
  %10 = tail call ptr @Perl_Slab_Alloc(i64 noundef 56)
  %11 = getelementptr inbounds %struct.logop, ptr %10, i64 0, i32 4
  %12 = load i16, ptr %11, align 8
  %13 = and i16 %12, -512
  %14 = or i16 %13, 173
  store i16 %14, ptr %11, align 8
  %15 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_ppaddr, i64 0, i64 173), align 8, !tbaa !6
  %16 = getelementptr inbounds %struct.logop, ptr %10, i64 0, i32 2
  store ptr %15, ptr %16, align 8, !tbaa !99
  %17 = getelementptr inbounds %struct.logop, ptr %10, i64 0, i32 7
  store ptr %1, ptr %17, align 8, !tbaa !101
  %18 = getelementptr inbounds %struct.logop, ptr %10, i64 0, i32 8
  store ptr %9, ptr %18, align 8, !tbaa !102
  %19 = getelementptr inbounds %struct.logop, ptr %10, i64 0, i32 5
  store i8 4, ptr %19, align 2, !tbaa !103
  br label %20

20:                                               ; preds = %23, %8
  %21 = phi ptr [ %1, %8 ], [ %25, %23 ]
  %22 = icmp eq ptr %21, null
  br i1 %22, label %32, label %23

23:                                               ; preds = %20
  %24 = getelementptr inbounds %struct.op, ptr %21, i64 0, i32 1
  %25 = load ptr, ptr %24, align 8, !tbaa !38
  %26 = icmp eq ptr %25, null
  br i1 %26, label %27, label %20, !llvm.loop !104

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.op, ptr %21, i64 0, i32 1
  %29 = getelementptr inbounds %struct.op, ptr %21, i64 0, i32 4
  %30 = load i16, ptr %29, align 8
  %31 = and i16 %30, -16385
  store i16 %31, ptr %29, align 8
  store ptr null, ptr %28, align 8, !tbaa !38
  br label %32

32:                                               ; preds = %20, %27
  store i8 4, ptr %19, align 2, !tbaa !103
  %33 = load ptr, ptr %1, align 8, !tbaa !25
  %34 = icmp eq ptr %33, null
  br i1 %34, label %35, label %37

35:                                               ; preds = %32
  %36 = tail call ptr @Perl_op_linklist(ptr noundef nonnull %1)
  br label %37

37:                                               ; preds = %32, %35
  %38 = phi ptr [ %36, %35 ], [ %33, %32 ]
  %39 = lshr i32 %0, 8
  %40 = trunc i32 %39 to i8
  %41 = or i8 %40, 1
  %42 = getelementptr inbounds %struct.logop, ptr %10, i64 0, i32 6
  store i8 %41, ptr %42, align 1, !tbaa !218
  %43 = tail call ptr @Perl_op_sibling_splice(ptr noundef nonnull %10, ptr noundef nonnull %1, i32 noundef 0, ptr noundef nonnull %2)
  store ptr %10, ptr %10, align 8, !tbaa !214
  %44 = tail call ptr @Perl_newUNOP(i32 noundef 174, i32 noundef %0, ptr noundef nonnull %10)
  %45 = tail call ptr @Perl_newUNOP(i32 noundef 175, i32 noundef 0, ptr noundef %44)
  %46 = tail call ptr @Perl_newUNOP(i32 noundef 0, i32 noundef 0, ptr noundef %45)
  %47 = load ptr, ptr %45, align 8, !tbaa !25
  %48 = icmp eq ptr %47, null
  br i1 %48, label %49, label %51

49:                                               ; preds = %37
  %50 = tail call ptr @Perl_op_linklist(ptr noundef nonnull %45)
  br label %51

51:                                               ; preds = %37, %49
  store ptr %38, ptr %10, align 8, !tbaa !214
  store ptr %44, ptr %1, align 8, !tbaa !25
  store ptr %45, ptr %2, align 8, !tbaa !25
  %52 = tail call i64 @Perl_pad_add_name_pvn(ptr noundef nonnull @.str.91, i64 noundef 1, i32 noundef 6, ptr noundef null, ptr noundef null) #29
  %53 = getelementptr inbounds %struct.logop, ptr %10, i64 0, i32 3
  store i64 %52, ptr %53, align 8, !tbaa !213
  %54 = load ptr, ptr @PL_curpad, align 8, !tbaa !6
  %55 = getelementptr inbounds ptr, ptr %54, i64 %52
  %56 = load ptr, ptr %55, align 8, !tbaa !6
  tail call void @Perl_sv_upgrade(ptr noundef %56, i32 noundef 6) #29
  %57 = tail call i64 @Perl_pad_add_name_pvn(ptr noundef nonnull @.str.91, i64 noundef 1, i32 noundef 6, ptr noundef null, ptr noundef null) #29
  %58 = getelementptr inbounds %struct.op, ptr %44, i64 0, i32 3
  store i64 %57, ptr %58, align 8, !tbaa !34
  %59 = load ptr, ptr @PL_curpad, align 8, !tbaa !6
  %60 = getelementptr inbounds ptr, ptr %59, i64 %57
  %61 = load ptr, ptr %60, align 8, !tbaa !6
  tail call void @Perl_sv_upgrade(ptr noundef %61, i32 noundef 6) #29
  %62 = load ptr, ptr @PL_curpad, align 8, !tbaa !6
  %63 = load i64, ptr %58, align 8, !tbaa !34
  %64 = getelementptr inbounds ptr, ptr %62, i64 %63
  %65 = load ptr, ptr %64, align 8, !tbaa !6
  %66 = getelementptr inbounds %struct.sv, ptr %65, i64 0, i32 2
  %67 = load i32, ptr %66, align 4, !tbaa !84
  %68 = or i32 %67, 131072
  store i32 %68, ptr %66, align 4, !tbaa !84
  %69 = getelementptr inbounds %struct.op, ptr %1, i64 0, i32 4
  %70 = load i16, ptr %69, align 8
  %71 = and i16 %70, 511
  %72 = icmp eq i16 %71, 5
  %73 = select i1 %72, i8 64, i8 0
  %74 = getelementptr inbounds %struct.op, ptr %44, i64 0, i32 6
  store i8 %73, ptr %74, align 1, !tbaa !33
  %75 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 4
  %76 = load i16, ptr %75, align 8
  %77 = and i16 %76, 511
  %78 = icmp eq i16 %77, 5
  %79 = select i1 %78, i8 64, i8 0
  %80 = getelementptr inbounds %struct.op, ptr %45, i64 0, i32 6
  store i8 %79, ptr %80, align 1, !tbaa !33
  %81 = load i8, ptr %74, align 1, !tbaa !33
  %82 = icmp eq i8 %81, 0
  br i1 %82, label %95, label %83

83:                                               ; preds = %51
  %84 = getelementptr inbounds %struct.svop, ptr %1, i64 0, i32 6
  %85 = load i8, ptr %84, align 1, !tbaa !76
  %86 = and i8 %85, 8
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %95, label %88

88:                                               ; preds = %83
  %89 = getelementptr inbounds %struct.svop, ptr %1, i64 0, i32 7
  %90 = load ptr, ptr %89, align 8, !tbaa !65
  %91 = tail call ptr (ptr, ...) @Perl_mess(ptr noundef nonnull @.str.25, ptr noundef %90) #29
  tail call void @Perl_qerror(ptr noundef %91) #29
  %92 = load i8, ptr %84, align 1, !tbaa !33
  %93 = and i8 %92, -9
  store i8 %93, ptr %84, align 1, !tbaa !33
  %94 = load i8, ptr %80, align 1, !tbaa !33
  br label %95

95:                                               ; preds = %88, %83, %51
  %96 = phi i8 [ %79, %51 ], [ %79, %83 ], [ %94, %88 ]
  %97 = icmp eq i8 %96, 0
  br i1 %97, label %109, label %98

98:                                               ; preds = %95
  %99 = getelementptr inbounds %struct.svop, ptr %2, i64 0, i32 6
  %100 = load i8, ptr %99, align 1, !tbaa !76
  %101 = and i8 %100, 8
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %109, label %103

103:                                              ; preds = %98
  %104 = getelementptr inbounds %struct.svop, ptr %2, i64 0, i32 7
  %105 = load ptr, ptr %104, align 8, !tbaa !65
  %106 = tail call ptr (ptr, ...) @Perl_mess(ptr noundef nonnull @.str.25, ptr noundef %105) #29
  tail call void @Perl_qerror(ptr noundef %106) #29
  %107 = load i8, ptr %99, align 1, !tbaa !33
  %108 = and i8 %107, -9
  store i8 %108, ptr %99, align 1, !tbaa !33
  br label %109

109:                                              ; preds = %103, %98, %95
  store ptr %46, ptr %44, align 8, !tbaa !25
  %110 = load i8, ptr %74, align 1, !tbaa !33
  %111 = icmp eq i8 %110, 0
  br i1 %111, label %115, label %112

112:                                              ; preds = %109
  %113 = load i8, ptr %80, align 1, !tbaa !33
  %114 = icmp eq i8 %113, 0
  br i1 %114, label %115, label %120

115:                                              ; preds = %112, %109
  %116 = load ptr, ptr %46, align 8, !tbaa !25
  %117 = icmp eq ptr %116, null
  br i1 %117, label %118, label %120

118:                                              ; preds = %115
  %119 = tail call ptr @Perl_op_linklist(ptr noundef nonnull %46)
  br label %120

120:                                              ; preds = %115, %118, %112
  ret ptr %46
}

declare void @Perl_sv_upgrade(ptr noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_newLOOPOP(i32 noundef %0, i32 noundef %1, ptr noundef %2, ptr noundef %3) local_unnamed_addr #4 {
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  store ptr %2, ptr %5, align 8, !tbaa !6
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6) #29
  %7 = icmp eq ptr %3, null
  br i1 %7, label %17, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.op, ptr %3, i64 0, i32 5
  %10 = load i8, ptr %9, align 2, !tbaa !35
  %11 = icmp sgt i8 %10, -1
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.op, ptr %3, i64 0, i32 4
  %14 = load i16, ptr %13, align 8
  %15 = and i16 %14, 511
  %16 = icmp eq i16 %15, 0
  br label %17

17:                                               ; preds = %12, %8, %4
  %18 = phi i1 [ false, %8 ], [ false, %4 ], [ %16, %12 ]
  %19 = icmp eq ptr %2, null
  br i1 %19, label %209, label %20

20:                                               ; preds = %17
  br i1 %18, label %21, label %153

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 4
  %23 = load i16, ptr %22, align 8
  %24 = and i16 %23, 511
  %25 = icmp eq i16 %24, 5
  br i1 %25, label %26, label %84

26:                                               ; preds = %21
  %27 = getelementptr inbounds %struct.svop, ptr %2, i64 0, i32 7
  %28 = load ptr, ptr %27, align 8, !tbaa !65
  %29 = icmp eq ptr %28, null
  br i1 %29, label %297, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %struct.sv, ptr %28, i64 0, i32 2
  %32 = load i32, ptr %31, align 4, !tbaa !84
  %33 = and i32 %32, 2097152
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %37, label %35

35:                                               ; preds = %30
  %36 = tail call zeroext i1 @Perl_sv_2bool_flags(ptr noundef nonnull %28, i32 noundef 2) #29
  br i1 %36, label %84, label %297

37:                                               ; preds = %30
  %38 = and i32 %32, 65280
  %39 = icmp ne i32 %38, 0
  %40 = and i32 %32, 255
  %41 = icmp eq i32 %40, 8
  %42 = or i1 %39, %41
  %43 = and i32 %32, 16826623
  %44 = icmp eq i32 %43, 16777226
  %45 = or i1 %44, %42
  br i1 %45, label %46, label %297

46:                                               ; preds = %37
  %47 = and i32 %32, 1024
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %63, label %49

49:                                               ; preds = %46
  %50 = load ptr, ptr %28, align 8, !tbaa !85
  %51 = icmp eq ptr %50, null
  br i1 %51, label %297, label %52

52:                                               ; preds = %49
  %53 = getelementptr inbounds %struct.xpv, ptr %50, i64 0, i32 2
  %54 = load i64, ptr %53, align 8, !tbaa !86
  %55 = icmp ugt i64 %54, 1
  br i1 %55, label %84, label %56

56:                                               ; preds = %52
  %57 = icmp eq i64 %54, 0
  br i1 %57, label %297, label %58

58:                                               ; preds = %56
  %59 = getelementptr inbounds %struct.sv, ptr %28, i64 0, i32 3
  %60 = load ptr, ptr %59, align 8, !tbaa !13
  %61 = load i8, ptr %60, align 1, !tbaa !13
  %62 = icmp eq i8 %61, 48
  br i1 %62, label %297, label %84

63:                                               ; preds = %46
  %64 = and i32 %32, 768
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %82, label %66

66:                                               ; preds = %63
  %67 = and i32 %32, 256
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %74, label %69

69:                                               ; preds = %66
  %70 = load ptr, ptr %28, align 8, !tbaa !85
  %71 = getelementptr inbounds %struct.xpviv, ptr %70, i64 0, i32 4
  %72 = load i64, ptr %71, align 8, !tbaa !13
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %74, label %84

74:                                               ; preds = %69, %66
  %75 = and i32 %32, 512
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %297, label %77

77:                                               ; preds = %74
  %78 = load ptr, ptr %28, align 8, !tbaa !85
  %79 = getelementptr inbounds %struct.xpvnv, ptr %78, i64 0, i32 5
  %80 = load double, ptr %79, align 8, !tbaa !13
  %81 = fcmp une double %80, 0.000000e+00
  br i1 %81, label %84, label %297

82:                                               ; preds = %63
  %83 = tail call zeroext i1 @Perl_sv_2bool_flags(ptr noundef nonnull %28, i32 noundef 0) #29
  br i1 %83, label %84, label %297

84:                                               ; preds = %82, %77, %69, %58, %52, %35, %21
  %85 = load i16, ptr %22, align 8
  %86 = and i16 %85, 511
  %87 = icmp eq i16 %86, 103
  br i1 %87, label %88, label %153

88:                                               ; preds = %84
  %89 = getelementptr inbounds %struct.unop, ptr %2, i64 0, i32 7
  %90 = load ptr, ptr %89, align 8, !tbaa !36
  %91 = getelementptr inbounds %struct.op, ptr %90, i64 0, i32 4
  %92 = load i16, ptr %91, align 8
  %93 = and i16 %92, 511
  %94 = icmp eq i16 %93, 5
  br i1 %94, label %95, label %153

95:                                               ; preds = %88
  %96 = getelementptr inbounds %struct.svop, ptr %90, i64 0, i32 7
  %97 = load ptr, ptr %96, align 8, !tbaa !65
  %98 = icmp eq ptr %97, null
  br i1 %98, label %153, label %99

99:                                               ; preds = %95
  %100 = getelementptr inbounds %struct.sv, ptr %97, i64 0, i32 2
  %101 = load i32, ptr %100, align 4, !tbaa !84
  %102 = and i32 %101, 2097152
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %106, label %104

104:                                              ; preds = %99
  %105 = tail call zeroext i1 @Perl_sv_2bool_flags(ptr noundef nonnull %97, i32 noundef 2) #29
  br i1 %105, label %297, label %153

106:                                              ; preds = %99
  %107 = and i32 %101, 65280
  %108 = icmp ne i32 %107, 0
  %109 = and i32 %101, 255
  %110 = icmp eq i32 %109, 8
  %111 = or i1 %108, %110
  %112 = and i32 %101, 16826623
  %113 = icmp eq i32 %112, 16777226
  %114 = or i1 %113, %111
  br i1 %114, label %115, label %153

115:                                              ; preds = %106
  %116 = and i32 %101, 1024
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %132, label %118

118:                                              ; preds = %115
  %119 = load ptr, ptr %97, align 8, !tbaa !85
  %120 = icmp eq ptr %119, null
  br i1 %120, label %153, label %121

121:                                              ; preds = %118
  %122 = getelementptr inbounds %struct.xpv, ptr %119, i64 0, i32 2
  %123 = load i64, ptr %122, align 8, !tbaa !86
  %124 = icmp ugt i64 %123, 1
  br i1 %124, label %297, label %125

125:                                              ; preds = %121
  %126 = icmp eq i64 %123, 0
  br i1 %126, label %153, label %127

127:                                              ; preds = %125
  %128 = getelementptr inbounds %struct.sv, ptr %97, i64 0, i32 3
  %129 = load ptr, ptr %128, align 8, !tbaa !13
  %130 = load i8, ptr %129, align 1, !tbaa !13
  %131 = icmp eq i8 %130, 48
  br i1 %131, label %153, label %297

132:                                              ; preds = %115
  %133 = and i32 %101, 768
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %151, label %135

135:                                              ; preds = %132
  %136 = and i32 %101, 256
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %143, label %138

138:                                              ; preds = %135
  %139 = load ptr, ptr %97, align 8, !tbaa !85
  %140 = getelementptr inbounds %struct.xpviv, ptr %139, i64 0, i32 4
  %141 = load i64, ptr %140, align 8, !tbaa !13
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %143, label %297

143:                                              ; preds = %138, %135
  %144 = and i32 %101, 512
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %153, label %146

146:                                              ; preds = %143
  %147 = load ptr, ptr %97, align 8, !tbaa !85
  %148 = getelementptr inbounds %struct.xpvnv, ptr %147, i64 0, i32 5
  %149 = load double, ptr %148, align 8, !tbaa !13
  %150 = fcmp une double %149, 0.000000e+00
  br i1 %150, label %297, label %153

151:                                              ; preds = %132
  %152 = tail call zeroext i1 @Perl_sv_2bool_flags(ptr noundef nonnull %97, i32 noundef 0) #29
  br i1 %152, label %297, label %153

153:                                              ; preds = %146, %106, %95, %151, %143, %127, %125, %118, %104, %88, %84, %20
  %154 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 4
  %155 = load i16, ptr %154, align 8
  %156 = and i16 %155, 511
  switch i16 %156, label %165 [
    i16 26, label %161
    i16 306, label %161
    i16 25, label %161
    i16 144, label %161
    i16 141, label %161
    i16 0, label %157
  ]

157:                                              ; preds = %153
  %158 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 3
  %159 = load i64, ptr %158, align 8, !tbaa !34
  %160 = icmp eq i64 %159, 25
  br i1 %160, label %161, label %165

161:                                              ; preds = %153, %153, %153, %153, %153, %157
  %162 = tail call ptr @Perl_newDEFSVOP()
  %163 = tail call ptr @Perl_newASSIGNOP(i32 noundef 0, ptr noundef %162, i32 noundef 0, ptr noundef nonnull %2)
  %164 = tail call ptr @Perl_newUNOP(i32 noundef 43, i32 noundef 0, ptr noundef %163)
  store ptr %164, ptr %5, align 8, !tbaa !6
  br label %209

165:                                              ; preds = %153, %157
  %166 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 5
  %167 = load i8, ptr %166, align 2, !tbaa !35
  %168 = and i8 %167, 4
  %169 = icmp eq i8 %168, 0
  br i1 %169, label %209, label %170

170:                                              ; preds = %165
  %171 = getelementptr inbounds %struct.unop, ptr %2, i64 0, i32 7
  %172 = load ptr, ptr %171, align 8, !tbaa !36
  %173 = icmp eq ptr %172, null
  br i1 %173, label %177, label %174

174:                                              ; preds = %170
  %175 = getelementptr inbounds %struct.op, ptr %172, i64 0, i32 1
  %176 = load ptr, ptr %175, align 8, !tbaa !38
  br label %177

177:                                              ; preds = %170, %174
  %178 = phi ptr [ %176, %174 ], [ null, %170 ]
  %179 = zext i16 %156 to i32
  switch i32 %179, label %209 [
    i32 0, label %180
    i32 37, label %198
  ]

180:                                              ; preds = %177
  %181 = icmp eq ptr %178, null
  br i1 %181, label %209, label %182

182:                                              ; preds = %180
  %183 = getelementptr inbounds %struct.op, ptr %178, i64 0, i32 4
  %184 = load i16, ptr %183, align 8
  %185 = and i16 %184, 511
  switch i16 %185, label %209 [
    i16 26, label %186
    i16 306, label %186
  ]

186:                                              ; preds = %182, %182
  %187 = getelementptr inbounds %struct.op, ptr %178, i64 0, i32 5
  %188 = load i8, ptr %187, align 2, !tbaa !35
  %189 = and i8 %188, 64
  %190 = icmp eq i8 %189, 0
  br i1 %190, label %209, label %191

191:                                              ; preds = %186
  %192 = getelementptr inbounds %struct.op, ptr %172, i64 0, i32 5
  %193 = load i8, ptr %192, align 2, !tbaa !35
  %194 = and i8 %193, 3
  %195 = icmp eq i8 %194, 2
  br i1 %195, label %196, label %209

196:                                              ; preds = %191
  %197 = tail call ptr @Perl_newUNOP(i32 noundef 43, i32 noundef 0, ptr noundef nonnull %2)
  store ptr %197, ptr %5, align 8, !tbaa !6
  br label %209

198:                                              ; preds = %177
  br i1 %173, label %209, label %199

199:                                              ; preds = %198
  %200 = getelementptr inbounds %struct.op, ptr %172, i64 0, i32 4
  %201 = load i16, ptr %200, align 8
  %202 = and i16 %201, 511
  switch i16 %202, label %209 [
    i16 306, label %207
    i16 25, label %207
    i16 0, label %203
    i16 144, label %207
    i16 141, label %207
  ]

203:                                              ; preds = %199
  %204 = getelementptr inbounds %struct.op, ptr %172, i64 0, i32 3
  %205 = load i64, ptr %204, align 8, !tbaa !34
  %206 = icmp eq i64 %205, 25
  br i1 %206, label %207, label %209

207:                                              ; preds = %199, %199, %199, %199, %203
  %208 = tail call ptr @Perl_newUNOP(i32 noundef 43, i32 noundef 0, ptr noundef nonnull %2)
  store ptr %208, ptr %5, align 8, !tbaa !6
  br label %209

209:                                              ; preds = %199, %203, %177, %196, %191, %186, %180, %207, %198, %182, %161, %165, %17
  br i1 %7, label %212, label %210

210:                                              ; preds = %209
  %211 = tail call ptr @Perl_newOP(i32 noundef 195, i32 noundef 0)
  br label %216

212:                                              ; preds = %209
  %213 = tail call ptr @Perl_newOP(i32 noundef 0, i32 noundef 0)
  %214 = tail call ptr @Perl_newOP(i32 noundef 195, i32 noundef 0)
  %215 = icmp eq ptr %213, null
  br i1 %215, label %262, label %216

216:                                              ; preds = %210, %212
  %217 = phi ptr [ %211, %210 ], [ %214, %212 ]
  %218 = phi ptr [ %3, %210 ], [ %213, %212 ]
  %219 = icmp eq ptr %217, null
  br i1 %219, label %262, label %220

220:                                              ; preds = %216
  %221 = getelementptr inbounds %struct.op, ptr %218, i64 0, i32 4
  %222 = load i16, ptr %221, align 8
  %223 = and i16 %222, 511
  %224 = icmp eq i16 %223, 192
  br i1 %224, label %255, label %225

225:                                              ; preds = %220
  %226 = tail call ptr @Perl_Slab_Alloc(i64 noundef 56)
  %227 = getelementptr inbounds %struct.listop, ptr %226, i64 0, i32 4
  %228 = load i16, ptr %227, align 8
  %229 = and i16 %228, -512
  %230 = or i16 %229, 192
  store i16 %230, ptr %227, align 8
  %231 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_ppaddr, i64 0, i64 192), align 8, !tbaa !6
  %232 = getelementptr inbounds %struct.listop, ptr %226, i64 0, i32 2
  store ptr %231, ptr %232, align 8, !tbaa !222
  %233 = getelementptr inbounds %struct.listop, ptr %226, i64 0, i32 5
  store i8 4, ptr %233, align 2, !tbaa !223
  %234 = load i16, ptr %221, align 8
  %235 = or i16 %234, 16384
  store i16 %235, ptr %221, align 8
  %236 = getelementptr inbounds %struct.op, ptr %218, i64 0, i32 1
  store ptr %217, ptr %236, align 8, !tbaa !38
  %237 = getelementptr inbounds %struct.listop, ptr %226, i64 0, i32 7
  store ptr %218, ptr %237, align 8, !tbaa !81
  %238 = getelementptr inbounds %struct.listop, ptr %226, i64 0, i32 8
  store ptr %217, ptr %238, align 8, !tbaa !83
  %239 = getelementptr inbounds %struct.op, ptr %217, i64 0, i32 4
  %240 = load i16, ptr %239, align 8
  %241 = and i16 %240, -16385
  store i16 %241, ptr %239, align 8
  %242 = load ptr, ptr %238, align 8, !tbaa !83
  %243 = getelementptr inbounds %struct.op, ptr %242, i64 0, i32 1
  store ptr null, ptr %243, align 8, !tbaa !38
  %244 = load ptr, ptr @PL_op_mask, align 8, !tbaa !6
  %245 = icmp eq ptr %244, null
  br i1 %245, label %252, label %246

246:                                              ; preds = %225
  %247 = getelementptr inbounds i8, ptr %244, i64 192
  %248 = load i8, ptr %247, align 1, !tbaa !13
  %249 = icmp eq i8 %248, 0
  br i1 %249, label %252, label %250

250:                                              ; preds = %246
  tail call void @Perl_op_free(ptr noundef nonnull %226)
  %251 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_op_desc, i64 0, i64 192), align 8, !tbaa !6
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.63, ptr noundef %251) #29
  br label %262

252:                                              ; preds = %246, %225
  %253 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_check, i64 0, i64 192), align 8, !tbaa !6
  %254 = tail call ptr %253(ptr noundef nonnull %226) #29
  br label %262

255:                                              ; preds = %220
  %256 = getelementptr inbounds %struct.listop, ptr %218, i64 0, i32 8
  %257 = load ptr, ptr %256, align 8, !tbaa !83
  %258 = tail call ptr @Perl_op_sibling_splice(ptr noundef nonnull %218, ptr noundef %257, i32 noundef 0, ptr noundef nonnull %217)
  %259 = getelementptr inbounds %struct.op, ptr %218, i64 0, i32 5
  %260 = load i8, ptr %259, align 2, !tbaa !35
  %261 = or i8 %260, 4
  store i8 %261, ptr %259, align 2, !tbaa !35
  br label %262

262:                                              ; preds = %252, %250, %212, %216, %255
  %263 = phi ptr [ %218, %255 ], [ %214, %212 ], [ %218, %216 ], [ null, %250 ], [ %254, %252 ]
  store ptr %263, ptr %6, align 8, !tbaa !6
  %264 = call fastcc ptr @S_new_logop(i32 noundef 176, i32 noundef 0, ptr noundef nonnull %5, ptr noundef nonnull %6)
  %265 = load ptr, ptr %6, align 8
  %266 = icmp eq ptr %265, null
  br i1 %266, label %276, label %267

267:                                              ; preds = %262
  %268 = load ptr, ptr %264, align 8, !tbaa !25
  %269 = icmp eq ptr %268, null
  br i1 %269, label %270, label %272

270:                                              ; preds = %267
  %271 = tail call ptr @Perl_op_linklist(ptr noundef nonnull %264)
  br label %272

272:                                              ; preds = %267, %270
  %273 = phi ptr [ %271, %270 ], [ %268, %267 ]
  %274 = getelementptr inbounds %struct.listop, ptr %265, i64 0, i32 8
  %275 = load ptr, ptr %274, align 8, !tbaa !83
  store ptr %273, ptr %275, align 8, !tbaa !25
  br label %276

276:                                              ; preds = %272, %262
  %277 = icmp ne ptr %264, %265
  %278 = select i1 %18, i1 %277, i1 false
  br i1 %278, label %279, label %284

279:                                              ; preds = %276
  %280 = getelementptr inbounds %struct.unop, ptr %264, i64 0, i32 7
  %281 = load ptr, ptr %280, align 8, !tbaa !36
  %282 = getelementptr inbounds %struct.logop, ptr %281, i64 0, i32 8
  %283 = load ptr, ptr %282, align 8, !tbaa !102
  store ptr %283, ptr %264, align 8, !tbaa !25
  br label %284

284:                                              ; preds = %279, %276
  br i1 %277, label %287, label %285

285:                                              ; preds = %284
  %286 = tail call ptr @Perl_newUNOP(i32 noundef 0, i32 noundef 0, ptr noundef %264)
  br label %287

287:                                              ; preds = %285, %284
  %288 = phi ptr [ %286, %285 ], [ %264, %284 ]
  %289 = getelementptr inbounds %struct.op, ptr %288, i64 0, i32 5
  %290 = load i8, ptr %289, align 2, !tbaa !35
  %291 = trunc i32 %0 to i8
  %292 = or i8 %290, %291
  store i8 %292, ptr %289, align 2, !tbaa !35
  %293 = tail call ptr @Perl_op_scope(ptr noundef %288)
  %294 = getelementptr inbounds %struct.op, ptr %293, i64 0, i32 5
  %295 = load i8, ptr %294, align 2, !tbaa !35
  %296 = or i8 %295, -128
  store i8 %296, ptr %294, align 2, !tbaa !35
  br label %297

297:                                              ; preds = %35, %49, %56, %58, %74, %82, %104, %121, %127, %138, %146, %151, %26, %37, %77, %287
  %298 = phi ptr [ %293, %287 ], [ %3, %77 ], [ %3, %37 ], [ %3, %26 ], [ %3, %151 ], [ %3, %146 ], [ %3, %138 ], [ %3, %127 ], [ %3, %121 ], [ %3, %104 ], [ %3, %82 ], [ %3, %74 ], [ %3, %58 ], [ %3, %56 ], [ %3, %49 ], [ %3, %35 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #29
  ret ptr %298
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_newWHILEOP(i32 noundef %0, i32 %1, ptr noundef %2, ptr noundef %3, ptr noundef %4, ptr noundef %5, i32 noundef %6) local_unnamed_addr #4 {
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  store ptr %3, ptr %8, align 8, !tbaa !6
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %9) #29
  %10 = icmp eq ptr %3, null
  br i1 %10, label %67, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.op, ptr %3, i64 0, i32 4
  %13 = load i16, ptr %12, align 8
  %14 = and i16 %13, 511
  switch i16 %14, label %23 [
    i16 26, label %19
    i16 306, label %19
    i16 25, label %19
    i16 144, label %19
    i16 141, label %19
    i16 0, label %15
  ]

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.op, ptr %3, i64 0, i32 3
  %17 = load i64, ptr %16, align 8, !tbaa !34
  %18 = icmp eq i64 %17, 25
  br i1 %18, label %19, label %23

19:                                               ; preds = %11, %11, %11, %11, %11, %15
  %20 = tail call ptr @Perl_newDEFSVOP()
  %21 = tail call ptr @Perl_newASSIGNOP(i32 noundef 0, ptr noundef %20, i32 noundef 0, ptr noundef nonnull %3)
  %22 = tail call ptr @Perl_newUNOP(i32 noundef 43, i32 noundef 0, ptr noundef %21)
  store ptr %22, ptr %8, align 8, !tbaa !6
  br label %67

23:                                               ; preds = %11, %15
  %24 = getelementptr inbounds %struct.op, ptr %3, i64 0, i32 5
  %25 = load i8, ptr %24, align 2, !tbaa !35
  %26 = and i8 %25, 4
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %67, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %struct.unop, ptr %3, i64 0, i32 7
  %30 = load ptr, ptr %29, align 8, !tbaa !36
  %31 = icmp eq ptr %30, null
  br i1 %31, label %35, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %struct.op, ptr %30, i64 0, i32 1
  %34 = load ptr, ptr %33, align 8, !tbaa !38
  br label %35

35:                                               ; preds = %28, %32
  %36 = phi ptr [ %34, %32 ], [ null, %28 ]
  %37 = zext i16 %14 to i32
  switch i32 %37, label %67 [
    i32 0, label %38
    i32 37, label %56
  ]

38:                                               ; preds = %35
  %39 = icmp eq ptr %36, null
  br i1 %39, label %67, label %40

40:                                               ; preds = %38
  %41 = getelementptr inbounds %struct.op, ptr %36, i64 0, i32 4
  %42 = load i16, ptr %41, align 8
  %43 = and i16 %42, 511
  switch i16 %43, label %67 [
    i16 26, label %44
    i16 306, label %44
  ]

44:                                               ; preds = %40, %40
  %45 = getelementptr inbounds %struct.op, ptr %36, i64 0, i32 5
  %46 = load i8, ptr %45, align 2, !tbaa !35
  %47 = and i8 %46, 64
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %67, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %struct.op, ptr %30, i64 0, i32 5
  %51 = load i8, ptr %50, align 2, !tbaa !35
  %52 = and i8 %51, 3
  %53 = icmp eq i8 %52, 2
  br i1 %53, label %54, label %67

54:                                               ; preds = %49
  %55 = tail call ptr @Perl_newUNOP(i32 noundef 43, i32 noundef 0, ptr noundef nonnull %3)
  store ptr %55, ptr %8, align 8, !tbaa !6
  br label %67

56:                                               ; preds = %35
  br i1 %31, label %67, label %57

57:                                               ; preds = %56
  %58 = getelementptr inbounds %struct.op, ptr %30, i64 0, i32 4
  %59 = load i16, ptr %58, align 8
  %60 = and i16 %59, 511
  switch i16 %60, label %67 [
    i16 306, label %65
    i16 25, label %65
    i16 0, label %61
    i16 144, label %65
    i16 141, label %65
  ]

61:                                               ; preds = %57
  %62 = getelementptr inbounds %struct.op, ptr %30, i64 0, i32 3
  %63 = load i64, ptr %62, align 8, !tbaa !34
  %64 = icmp eq i64 %63, 25
  br i1 %64, label %65, label %67

65:                                               ; preds = %57, %57, %57, %57, %61
  %66 = tail call ptr @Perl_newUNOP(i32 noundef 43, i32 noundef 0, ptr noundef nonnull %3)
  store ptr %66, ptr %8, align 8, !tbaa !6
  br label %67

67:                                               ; preds = %57, %61, %35, %54, %49, %44, %38, %65, %56, %40, %19, %23, %7
  %68 = phi ptr [ %3, %57 ], [ %3, %61 ], [ %3, %35 ], [ %55, %54 ], [ %3, %49 ], [ %3, %44 ], [ %3, %38 ], [ %66, %65 ], [ %3, %56 ], [ %3, %40 ], [ %22, %19 ], [ %3, %23 ], [ null, %7 ]
  %69 = icmp eq ptr %4, null
  br i1 %69, label %70, label %72

70:                                               ; preds = %67
  %71 = tail call ptr @Perl_newOP(i32 noundef 0, i32 noundef 0)
  br label %78

72:                                               ; preds = %67
  %73 = icmp ne ptr %5, null
  %74 = icmp ne i32 %6, 0
  %75 = or i1 %73, %74
  br i1 %75, label %76, label %86

76:                                               ; preds = %72
  %77 = tail call ptr @Perl_op_scope(ptr noundef nonnull %4)
  br label %78

78:                                               ; preds = %76, %70
  %79 = phi ptr [ %77, %76 ], [ %71, %70 ]
  %80 = icmp eq ptr %5, null
  br i1 %80, label %86, label %81

81:                                               ; preds = %78
  %82 = load ptr, ptr %5, align 8, !tbaa !25
  %83 = icmp eq ptr %82, null
  br i1 %83, label %84, label %86

84:                                               ; preds = %81
  %85 = tail call ptr @Perl_op_linklist(ptr noundef nonnull %5)
  br label %86

86:                                               ; preds = %72, %84, %81, %78
  %87 = phi i1 [ true, %78 ], [ false, %84 ], [ false, %81 ], [ true, %72 ]
  %88 = phi ptr [ %79, %78 ], [ %79, %84 ], [ %79, %81 ], [ %4, %72 ]
  %89 = phi ptr [ null, %78 ], [ %85, %84 ], [ %82, %81 ], [ null, %72 ]
  %90 = icmp eq ptr %68, null
  br i1 %90, label %139, label %91

91:                                               ; preds = %86
  %92 = tail call ptr @Perl_newOP(i32 noundef 195, i32 noundef 0)
  %93 = icmp eq ptr %89, null
  %94 = select i1 %93, ptr %92, ptr %89
  br i1 %87, label %139, label %95

95:                                               ; preds = %91
  %96 = icmp eq ptr %92, null
  br i1 %96, label %139, label %97

97:                                               ; preds = %95
  %98 = getelementptr inbounds %struct.op, ptr %5, i64 0, i32 4
  %99 = load i16, ptr %98, align 8
  %100 = and i16 %99, 511
  %101 = icmp eq i16 %100, 192
  br i1 %101, label %132, label %102

102:                                              ; preds = %97
  %103 = tail call ptr @Perl_Slab_Alloc(i64 noundef 56)
  %104 = getelementptr inbounds %struct.listop, ptr %103, i64 0, i32 4
  %105 = load i16, ptr %104, align 8
  %106 = and i16 %105, -512
  %107 = or i16 %106, 192
  store i16 %107, ptr %104, align 8
  %108 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_ppaddr, i64 0, i64 192), align 8, !tbaa !6
  %109 = getelementptr inbounds %struct.listop, ptr %103, i64 0, i32 2
  store ptr %108, ptr %109, align 8, !tbaa !222
  %110 = getelementptr inbounds %struct.listop, ptr %103, i64 0, i32 5
  store i8 4, ptr %110, align 2, !tbaa !223
  %111 = load i16, ptr %98, align 8
  %112 = or i16 %111, 16384
  store i16 %112, ptr %98, align 8
  %113 = getelementptr inbounds %struct.op, ptr %5, i64 0, i32 1
  store ptr %92, ptr %113, align 8, !tbaa !38
  %114 = getelementptr inbounds %struct.listop, ptr %103, i64 0, i32 7
  store ptr %5, ptr %114, align 8, !tbaa !81
  %115 = getelementptr inbounds %struct.listop, ptr %103, i64 0, i32 8
  store ptr %92, ptr %115, align 8, !tbaa !83
  %116 = getelementptr inbounds %struct.op, ptr %92, i64 0, i32 4
  %117 = load i16, ptr %116, align 8
  %118 = and i16 %117, -16385
  store i16 %118, ptr %116, align 8
  %119 = load ptr, ptr %115, align 8, !tbaa !83
  %120 = getelementptr inbounds %struct.op, ptr %119, i64 0, i32 1
  store ptr null, ptr %120, align 8, !tbaa !38
  %121 = load ptr, ptr @PL_op_mask, align 8, !tbaa !6
  %122 = icmp eq ptr %121, null
  br i1 %122, label %129, label %123

123:                                              ; preds = %102
  %124 = getelementptr inbounds i8, ptr %121, i64 192
  %125 = load i8, ptr %124, align 1, !tbaa !13
  %126 = icmp eq i8 %125, 0
  br i1 %126, label %129, label %127

127:                                              ; preds = %123
  tail call void @Perl_op_free(ptr noundef nonnull %103)
  %128 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_op_desc, i64 0, i64 192), align 8, !tbaa !6
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.63, ptr noundef %128) #29
  br label %139

129:                                              ; preds = %123, %102
  %130 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_check, i64 0, i64 192), align 8, !tbaa !6
  %131 = tail call ptr %130(ptr noundef nonnull %103) #29
  br label %139

132:                                              ; preds = %97
  %133 = getelementptr inbounds %struct.listop, ptr %5, i64 0, i32 8
  %134 = load ptr, ptr %133, align 8, !tbaa !83
  %135 = tail call ptr @Perl_op_sibling_splice(ptr noundef nonnull %5, ptr noundef %134, i32 noundef 0, ptr noundef nonnull %92)
  %136 = getelementptr inbounds %struct.op, ptr %5, i64 0, i32 5
  %137 = load i8, ptr %136, align 2, !tbaa !35
  %138 = or i8 %137, 4
  store i8 %138, ptr %136, align 2, !tbaa !35
  br label %139

139:                                              ; preds = %132, %95, %91, %127, %129, %86
  %140 = phi ptr [ %89, %86 ], [ %94, %129 ], [ %94, %127 ], [ %94, %91 ], [ %94, %95 ], [ %94, %132 ]
  %141 = phi ptr [ %5, %86 ], [ %131, %129 ], [ null, %127 ], [ %92, %91 ], [ %5, %95 ], [ %5, %132 ]
  %142 = tail call ptr @Perl_op_append_list(i32 noundef 192, ptr noundef %88, ptr noundef %141)
  store ptr %142, ptr %9, align 8, !tbaa !6
  %143 = load ptr, ptr %142, align 8, !tbaa !25
  %144 = icmp eq ptr %143, null
  br i1 %144, label %145, label %147

145:                                              ; preds = %139
  %146 = tail call ptr @Perl_op_linklist(ptr noundef nonnull %142)
  br label %147

147:                                              ; preds = %139, %145
  %148 = phi ptr [ %146, %145 ], [ %143, %139 ]
  br i1 %90, label %232, label %149

149:                                              ; preds = %147
  %150 = tail call ptr @Perl_scalar(ptr noundef nonnull %142)
  %151 = call fastcc ptr @S_new_logop(i32 noundef 176, i32 noundef 0, ptr noundef nonnull %8, ptr noundef nonnull %9)
  %152 = load ptr, ptr %8, align 8, !tbaa !6
  %153 = icmp eq ptr %151, %152
  br i1 %153, label %154, label %218

154:                                              ; preds = %149
  %155 = getelementptr inbounds %struct.op, ptr %151, i64 0, i32 4
  %156 = load i16, ptr %155, align 8
  %157 = and i16 %156, 511
  %158 = icmp eq i16 %157, 5
  br i1 %158, label %159, label %218

159:                                              ; preds = %154
  %160 = getelementptr inbounds %struct.svop, ptr %151, i64 0, i32 7
  %161 = load ptr, ptr %160, align 8, !tbaa !65
  %162 = icmp eq ptr %161, null
  br i1 %162, label %217, label %163

163:                                              ; preds = %159
  %164 = getelementptr inbounds %struct.sv, ptr %161, i64 0, i32 2
  %165 = load i32, ptr %164, align 4, !tbaa !84
  %166 = and i32 %165, 2097152
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %170, label %168

168:                                              ; preds = %163
  %169 = tail call zeroext i1 @Perl_sv_2bool_flags(ptr noundef nonnull %161, i32 noundef 2) #29
  br i1 %169, label %218, label %217

170:                                              ; preds = %163
  %171 = and i32 %165, 65280
  %172 = icmp ne i32 %171, 0
  %173 = and i32 %165, 255
  %174 = icmp eq i32 %173, 8
  %175 = or i1 %172, %174
  %176 = and i32 %165, 16826623
  %177 = icmp eq i32 %176, 16777226
  %178 = or i1 %177, %175
  br i1 %178, label %179, label %217

179:                                              ; preds = %170
  %180 = and i32 %165, 1024
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %196, label %182

182:                                              ; preds = %179
  %183 = load ptr, ptr %161, align 8, !tbaa !85
  %184 = icmp eq ptr %183, null
  br i1 %184, label %217, label %185

185:                                              ; preds = %182
  %186 = getelementptr inbounds %struct.xpv, ptr %183, i64 0, i32 2
  %187 = load i64, ptr %186, align 8, !tbaa !86
  %188 = icmp ugt i64 %187, 1
  br i1 %188, label %218, label %189

189:                                              ; preds = %185
  %190 = icmp eq i64 %187, 0
  br i1 %190, label %217, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds %struct.sv, ptr %161, i64 0, i32 3
  %193 = load ptr, ptr %192, align 8, !tbaa !13
  %194 = load i8, ptr %193, align 1, !tbaa !13
  %195 = icmp eq i8 %194, 48
  br i1 %195, label %217, label %218

196:                                              ; preds = %179
  %197 = and i32 %165, 768
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %215, label %199

199:                                              ; preds = %196
  %200 = and i32 %165, 256
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %207, label %202

202:                                              ; preds = %199
  %203 = load ptr, ptr %161, align 8, !tbaa !85
  %204 = getelementptr inbounds %struct.xpviv, ptr %203, i64 0, i32 4
  %205 = load i64, ptr %204, align 8, !tbaa !13
  %206 = icmp eq i64 %205, 0
  br i1 %206, label %207, label %218

207:                                              ; preds = %202, %199
  %208 = and i32 %165, 512
  %209 = icmp eq i32 %208, 0
  br i1 %209, label %217, label %210

210:                                              ; preds = %207
  %211 = load ptr, ptr %161, align 8, !tbaa !85
  %212 = getelementptr inbounds %struct.xpvnv, ptr %211, i64 0, i32 5
  %213 = load double, ptr %212, align 8, !tbaa !13
  %214 = fcmp une double %213, 0.000000e+00
  br i1 %214, label %218, label %217

215:                                              ; preds = %196
  %216 = tail call zeroext i1 @Perl_sv_2bool_flags(ptr noundef nonnull %161, i32 noundef 0) #29
  br i1 %216, label %218, label %217

217:                                              ; preds = %210, %170, %159, %215, %207, %191, %189, %182, %168
  tail call void @Perl_op_free(ptr noundef %2)
  br label %261

218:                                              ; preds = %215, %210, %202, %191, %185, %168, %154, %149
  %219 = load ptr, ptr %9, align 8, !tbaa !6
  %220 = icmp eq ptr %219, null
  br i1 %220, label %232, label %221

221:                                              ; preds = %218
  %222 = icmp eq ptr %151, %219
  br i1 %222, label %228, label %223

223:                                              ; preds = %221
  %224 = load ptr, ptr %151, align 8, !tbaa !25
  %225 = icmp eq ptr %224, null
  br i1 %225, label %226, label %228

226:                                              ; preds = %223
  %227 = tail call ptr @Perl_op_linklist(ptr noundef nonnull %151)
  br label %228

228:                                              ; preds = %223, %221, %226
  %229 = phi ptr [ %227, %226 ], [ %148, %221 ], [ %224, %223 ]
  %230 = getelementptr inbounds %struct.listop, ptr %219, i64 0, i32 8
  %231 = load ptr, ptr %230, align 8, !tbaa !83
  store ptr %229, ptr %231, align 8, !tbaa !25
  br label %232

232:                                              ; preds = %147, %218, %228
  %233 = phi ptr [ %151, %228 ], [ %151, %218 ], [ %142, %147 ]
  %234 = icmp eq ptr %2, null
  br i1 %234, label %235, label %244

235:                                              ; preds = %232
  %236 = tail call ptr @Perl_Slab_Alloc(i64 noundef 80)
  %237 = getelementptr inbounds %struct.loop, ptr %236, i64 0, i32 4
  %238 = load i16, ptr %237, align 8
  %239 = and i16 %238, -512
  %240 = or i16 %239, 201
  store i16 %240, ptr %237, align 8
  %241 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_ppaddr, i64 0, i64 201), align 8, !tbaa !6
  %242 = getelementptr inbounds %struct.loop, ptr %236, i64 0, i32 2
  store ptr %241, ptr %242, align 8, !tbaa !284
  %243 = getelementptr inbounds %struct.loop, ptr %236, i64 0, i32 6
  store i8 0, ptr %243, align 1, !tbaa !286
  store ptr %236, ptr %236, align 8, !tbaa !287
  br label %244

244:                                              ; preds = %235, %232
  %245 = phi ptr [ %2, %232 ], [ %236, %235 ]
  %246 = tail call ptr @Perl_newBINOP(i32 noundef 202, i32 noundef 0, ptr noundef nonnull %245, ptr noundef %233)
  %247 = getelementptr inbounds %struct.loop, ptr %245, i64 0, i32 9
  store ptr %148, ptr %247, align 8, !tbaa !288
  %248 = getelementptr inbounds %struct.loop, ptr %245, i64 0, i32 11
  store ptr %246, ptr %248, align 8, !tbaa !289
  %249 = getelementptr inbounds %struct.op, ptr %246, i64 0, i32 6
  %250 = icmp eq ptr %140, null
  %251 = select i1 %250, ptr %246, ptr %140
  %252 = getelementptr inbounds %struct.loop, ptr %245, i64 0, i32 10
  store ptr %251, ptr %252, align 8
  %253 = getelementptr inbounds %struct.op, ptr %246, i64 0, i32 5
  %254 = load i8, ptr %253, align 2, !tbaa !35
  %255 = trunc i32 %0 to i8
  %256 = or i8 %254, %255
  store i8 %256, ptr %253, align 2, !tbaa !35
  %257 = lshr i32 %0, 8
  %258 = load i8, ptr %249, align 1, !tbaa !33
  %259 = trunc i32 %257 to i8
  %260 = or i8 %258, %259
  store i8 %260, ptr %249, align 1, !tbaa !33
  br label %261

261:                                              ; preds = %244, %217
  %262 = phi ptr [ %246, %244 ], [ %151, %217 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %9) #29
  ret ptr %262
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_newFOROP(i32 noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4) local_unnamed_addr #4 {
  %6 = icmp eq ptr %1, null
  br i1 %6, label %67, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds %struct.op, ptr %1, i64 0, i32 4
  %9 = load i16, ptr %8, align 8
  %10 = and i16 %9, 511
  switch i16 %10, label %36 [
    i16 15, label %11
    i16 9, label %40
    i16 0, label %32
  ]

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.op, ptr %1, i64 0, i32 6
  %13 = load i8, ptr %12, align 1, !tbaa !33
  %14 = and i8 %13, 64
  %15 = and i16 %9, -512
  %16 = or i16 %15, 14
  store i16 %16, ptr %8, align 8
  %17 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_ppaddr, i64 0, i64 14), align 8, !tbaa !6
  %18 = getelementptr inbounds %struct.op, ptr %1, i64 0, i32 2
  store ptr %17, ptr %18, align 8, !tbaa !78
  %19 = getelementptr inbounds %struct.unop, ptr %1, i64 0, i32 7
  %20 = load ptr, ptr %19, align 8, !tbaa !36
  %21 = getelementptr inbounds %struct.op, ptr %20, i64 0, i32 4
  %22 = load i16, ptr %21, align 8
  %23 = and i16 %22, 511
  %24 = icmp eq i16 %23, 7
  br i1 %24, label %25, label %85

25:                                               ; preds = %11
  %26 = getelementptr inbounds %struct.svop, ptr %20, i64 0, i32 7
  %27 = load ptr, ptr %26, align 8, !tbaa !65
  %28 = load ptr, ptr @PL_defgv, align 8, !tbaa !6
  %29 = icmp eq ptr %27, %28
  %30 = or i8 %14, 8
  %31 = select i1 %29, i8 %30, i8 %14
  br label %85

32:                                               ; preds = %7
  %33 = getelementptr inbounds %struct.op, ptr %1, i64 0, i32 3
  %34 = load i64, ptr %33, align 8, !tbaa !34
  %35 = icmp eq i64 %34, 21
  br i1 %35, label %85, label %36

36:                                               ; preds = %7, %32
  %37 = zext i16 %10 to i64
  %38 = getelementptr inbounds [0 x ptr], ptr @PL_op_desc, i64 0, i64 %37
  %39 = load ptr, ptr %38, align 8, !tbaa !6
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.92, ptr noundef %39) #29
  br label %85

40:                                               ; preds = %7
  %41 = getelementptr inbounds %struct.op, ptr %1, i64 0, i32 6
  %42 = load i8, ptr %41, align 1, !tbaa !33
  %43 = and i8 %42, -128
  %44 = getelementptr inbounds %struct.op, ptr %1, i64 0, i32 3
  %45 = load i64, ptr %44, align 8, !tbaa !34
  store i64 0, ptr %44, align 8, !tbaa !34
  tail call void @Perl_op_free(ptr noundef nonnull %1)
  %46 = load ptr, ptr @PL_comppad_name, align 8, !tbaa !6
  %47 = getelementptr inbounds %struct.padnamelist, ptr %46, i64 0, i32 1
  %48 = load ptr, ptr %47, align 8, !tbaa !151
  %49 = getelementptr inbounds ptr, ptr %48, i64 %45
  %50 = load ptr, ptr %49, align 8, !tbaa !6
  %51 = getelementptr inbounds %struct.padname, ptr %50, i64 0, i32 6
  store i32 2147483647, ptr %51, align 4, !tbaa !163
  %52 = icmp eq i64 %45, 0
  br i1 %52, label %85, label %53

53:                                               ; preds = %40
  %54 = load ptr, ptr %50, align 8, !tbaa !138
  %55 = getelementptr inbounds %struct.padname, ptr %50, i64 0, i32 7
  %56 = load i8, ptr %55, align 8, !tbaa !136
  %57 = icmp eq i8 %56, 2
  br i1 %57, label %58, label %85

58:                                               ; preds = %53
  %59 = load i8, ptr %54, align 1, !tbaa !13
  %60 = icmp eq i8 %59, 36
  br i1 %60, label %61, label %85

61:                                               ; preds = %58
  %62 = getelementptr inbounds i8, ptr %54, i64 1
  %63 = load i8, ptr %62, align 1, !tbaa !13
  %64 = icmp eq i8 %63, 95
  %65 = or i8 %43, 8
  %66 = select i1 %64, i8 %65, i8 %43
  br label %85

67:                                               ; preds = %5
  %68 = tail call i64 @Perl_pad_findmy_pvn(ptr noundef nonnull @.str.7, i64 noundef 2, i32 noundef 0) #29
  %69 = icmp eq i64 %68, -1
  br i1 %69, label %79, label %70

70:                                               ; preds = %67
  %71 = load ptr, ptr @PL_comppad_name, align 8, !tbaa !6
  %72 = getelementptr inbounds %struct.padnamelist, ptr %71, i64 0, i32 1
  %73 = load ptr, ptr %72, align 8, !tbaa !151
  %74 = getelementptr inbounds ptr, ptr %73, i64 %68
  %75 = load ptr, ptr %74, align 8, !tbaa !6
  %76 = getelementptr inbounds %struct.padname, ptr %75, i64 0, i32 1
  %77 = load ptr, ptr %76, align 8, !tbaa !272
  %78 = icmp eq ptr %77, null
  br i1 %78, label %85, label %79

79:                                               ; preds = %70, %67
  %80 = load ptr, ptr @PL_defgv, align 8, !tbaa !6
  %81 = getelementptr inbounds %struct.gv, ptr %80, i64 0, i32 1
  %82 = load i32, ptr %81, align 8, !tbaa !74
  %83 = add i32 %82, 1
  store i32 %83, ptr %81, align 8, !tbaa !74
  %84 = tail call ptr @Perl_newSVOP(i32 noundef 7, i32 noundef 0, ptr noundef %80)
  br label %85

85:                                               ; preds = %25, %36, %32, %11, %61, %79, %70, %53, %58, %40
  %86 = phi i8 [ %43, %40 ], [ %43, %58 ], [ %43, %53 ], [ %66, %61 ], [ 8, %70 ], [ 8, %79 ], [ %31, %25 ], [ 0, %36 ], [ 0, %32 ], [ %14, %11 ]
  %87 = phi i64 [ 0, %40 ], [ %45, %58 ], [ %45, %53 ], [ %45, %61 ], [ %68, %70 ], [ 0, %79 ], [ 0, %25 ], [ 0, %36 ], [ 0, %32 ], [ 0, %11 ]
  %88 = phi ptr [ null, %40 ], [ null, %58 ], [ null, %53 ], [ null, %61 ], [ null, %70 ], [ %84, %79 ], [ %1, %25 ], [ %1, %36 ], [ %1, %32 ], [ %1, %11 ]
  %89 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 4
  %90 = load i16, ptr %89, align 8
  %91 = and i16 %90, 511
  switch i16 %91, label %140 [
    i16 135, label %92
    i16 10, label %92
    i16 0, label %97
  ]

92:                                               ; preds = %85, %85
  %93 = tail call ptr @Perl_doref(ptr noundef nonnull %2, i32 noundef 200, i1 noundef zeroext true)
  %94 = tail call ptr @Perl_scalar(ptr noundef nonnull %2)
  %95 = tail call fastcc ptr @S_force_list(ptr noundef nonnull %2, i1 noundef zeroext true)
  %96 = tail call ptr @Perl_op_lvalue_flags(ptr noundef %95, i32 noundef 169, i32 noundef 0)
  br label %143

97:                                               ; preds = %85
  %98 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 5
  %99 = load i8, ptr %98, align 2, !tbaa !35
  %100 = and i8 %99, 4
  %101 = icmp eq i8 %100, 0
  br i1 %101, label %140, label %102

102:                                              ; preds = %97
  %103 = getelementptr inbounds %struct.binop, ptr %2, i64 0, i32 7
  %104 = load ptr, ptr %103, align 8, !tbaa !106
  %105 = getelementptr inbounds %struct.op, ptr %104, i64 0, i32 4
  %106 = load i16, ptr %105, align 8
  %107 = and i16 %106, 511
  %108 = icmp eq i16 %107, 175
  br i1 %108, label %109, label %140

109:                                              ; preds = %102
  %110 = getelementptr inbounds %struct.unop, ptr %104, i64 0, i32 7
  %111 = load ptr, ptr %110, align 8, !tbaa !36
  %112 = getelementptr inbounds %struct.unop, ptr %111, i64 0, i32 7
  %113 = load ptr, ptr %112, align 8, !tbaa !36
  %114 = getelementptr inbounds %struct.logop, ptr %113, i64 0, i32 7
  %115 = load ptr, ptr %114, align 8, !tbaa !101
  %116 = getelementptr inbounds %struct.op, ptr %115, i64 0, i32 1
  %117 = load ptr, ptr %116, align 8, !tbaa !38
  %118 = getelementptr inbounds %struct.logop, ptr %113, i64 0, i32 5
  %119 = load i8, ptr %118, align 2, !tbaa !103
  %120 = and i8 %119, -5
  store i8 %120, ptr %118, align 2, !tbaa !103
  %121 = tail call ptr @Perl_op_sibling_splice(ptr noundef %113, ptr noundef null, i32 noundef -1, ptr noundef null)
  %122 = tail call ptr @Perl_newLISTOP(i32 noundef 158, i32 noundef 0, ptr noundef %115, ptr noundef %117)
  %123 = load ptr, ptr %113, align 8, !tbaa !214
  %124 = getelementptr inbounds %struct.listop, ptr %122, i64 0, i32 7
  %125 = load ptr, ptr %124, align 8, !tbaa !81
  store ptr %123, ptr %125, align 8, !tbaa !25
  %126 = getelementptr inbounds %struct.logop, ptr %113, i64 0, i32 8
  %127 = load ptr, ptr %126, align 8, !tbaa !102
  store ptr %127, ptr %115, align 8, !tbaa !25
  store ptr %122, ptr %117, align 8, !tbaa !25
  store ptr %125, ptr %122, align 8, !tbaa !205
  tail call void @Perl_op_free(ptr noundef nonnull %2)
  %128 = getelementptr inbounds %struct.op, ptr %122, i64 0, i32 4
  %129 = load i16, ptr %128, align 8
  %130 = and i16 %129, 511
  %131 = icmp eq i16 %130, 0
  br i1 %131, label %143, label %132

132:                                              ; preds = %109
  tail call void @Perl_op_clear(ptr noundef nonnull %122)
  %133 = load i16, ptr %128, align 8
  %134 = and i16 %133, 511
  %135 = zext i16 %134 to i64
  %136 = getelementptr inbounds %struct.op, ptr %122, i64 0, i32 3
  store i64 %135, ptr %136, align 8, !tbaa !34
  %137 = and i16 %133, -512
  store i16 %137, ptr %128, align 8
  %138 = load ptr, ptr @PL_ppaddr, align 8, !tbaa !6
  %139 = getelementptr inbounds %struct.op, ptr %122, i64 0, i32 2
  store ptr %138, ptr %139, align 8, !tbaa !78
  br label %143

140:                                              ; preds = %85, %102, %97
  %141 = tail call fastcc ptr @S_force_list(ptr noundef nonnull %2, i1 noundef zeroext true)
  %142 = tail call ptr @Perl_op_lvalue_flags(ptr noundef %141, i32 noundef 169, i32 noundef 0)
  br label %143

143:                                              ; preds = %132, %109, %140, %92
  %144 = phi i32 [ 64, %92 ], [ 0, %140 ], [ 64, %109 ], [ 64, %132 ]
  %145 = phi ptr [ %96, %92 ], [ %142, %140 ], [ %122, %109 ], [ %122, %132 ]
  %146 = tail call ptr @Perl_list(ptr noundef %145)
  %147 = tail call ptr @Perl_scalar(ptr noundef %88)
  %148 = icmp eq ptr %146, null
  br i1 %148, label %171, label %149

149:                                              ; preds = %143
  %150 = icmp eq ptr %88, null
  br i1 %150, label %171, label %151

151:                                              ; preds = %149
  %152 = getelementptr inbounds %struct.op, ptr %146, i64 0, i32 4
  %153 = load i16, ptr %152, align 8
  %154 = and i16 %153, 511
  %155 = icmp eq i16 %154, 158
  br i1 %155, label %158, label %156

156:                                              ; preds = %151
  %157 = tail call ptr @Perl_newLISTOP(i32 noundef 158, i32 noundef 0, ptr noundef nonnull %146, ptr noundef nonnull %88)
  br label %171

158:                                              ; preds = %151
  %159 = getelementptr inbounds %struct.op, ptr %146, i64 0, i32 5
  %160 = load i8, ptr %159, align 2, !tbaa !35
  %161 = and i8 %160, 8
  %162 = icmp eq i8 %161, 0
  br i1 %162, label %165, label %163

163:                                              ; preds = %158
  %164 = tail call ptr @Perl_newLISTOP(i32 noundef 158, i32 noundef 0, ptr noundef nonnull %146, ptr noundef nonnull %88)
  br label %171

165:                                              ; preds = %158
  %166 = getelementptr inbounds %struct.listop, ptr %146, i64 0, i32 8
  %167 = load ptr, ptr %166, align 8, !tbaa !83
  %168 = tail call ptr @Perl_op_sibling_splice(ptr noundef nonnull %146, ptr noundef %167, i32 noundef 0, ptr noundef nonnull %88)
  %169 = load i8, ptr %159, align 2, !tbaa !35
  %170 = or i8 %169, 4
  store i8 %170, ptr %159, align 2, !tbaa !35
  br label %171

171:                                              ; preds = %143, %149, %156, %163, %165
  %172 = phi ptr [ %146, %165 ], [ %88, %143 ], [ %146, %149 ], [ %157, %156 ], [ %164, %163 ]
  %173 = tail call ptr @Perl_op_convert_list(i32 noundef 199, i32 noundef %144, ptr noundef %172)
  %174 = getelementptr inbounds %struct.loop, ptr %173, i64 0, i32 6
  store i8 %86, ptr %174, align 1, !tbaa !286
  %175 = getelementptr inbounds %struct.loop, ptr %173, i64 0, i32 4
  %176 = load i16, ptr %175, align 8
  %177 = and i16 %176, 1024
  %178 = icmp eq i16 %177, 0
  br i1 %178, label %212, label %179

179:                                              ; preds = %171
  %180 = getelementptr inbounds i8, ptr %173, i64 -16
  %181 = load ptr, ptr %180, align 8, !tbaa !22
  %182 = ptrtoint ptr %181 to i64
  %183 = ptrtoint ptr %173 to i64
  %184 = sub i64 %182, %183
  %185 = icmp ult i64 %184, 80
  br i1 %185, label %186, label %214

186:                                              ; preds = %179
  %187 = tail call ptr @Perl_Slab_Alloc(i64 noundef 80)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(56) %187, ptr noundef nonnull align 1 dereferenceable(56) %173, i64 56, i1 false)
  %188 = load i16, ptr %175, align 8
  %189 = and i16 %188, 1024
  %190 = icmp eq i16 %189, 0
  br i1 %190, label %191, label %195

191:                                              ; preds = %186
  %192 = and i16 %188, 4096
  %193 = icmp eq i16 %192, 0
  br i1 %193, label %194, label %214

194:                                              ; preds = %191
  tail call void @free(ptr noundef nonnull %173) #29
  br label %214

195:                                              ; preds = %186
  %196 = getelementptr inbounds i8, ptr %173, i64 -8
  %197 = load ptr, ptr %196, align 8, !tbaa !27
  %198 = and i16 %188, -512
  %199 = or i16 %198, 396
  store i16 %199, ptr %175, align 8
  %200 = getelementptr inbounds %struct.opslab, ptr %197, i64 0, i32 2
  %201 = load ptr, ptr %200, align 8, !tbaa !28
  store ptr %201, ptr %173, align 8, !tbaa !25
  store ptr %173, ptr %200, align 8, !tbaa !28
  %202 = getelementptr inbounds %struct.opslab, ptr %197, i64 0, i32 3
  %203 = load i64, ptr %202, align 8, !tbaa !21
  %204 = icmp eq i64 %203, 1
  br i1 %204, label %205, label %210

205:                                              ; preds = %195, %205
  %206 = phi ptr [ %208, %205 ], [ %197, %195 ]
  %207 = getelementptr inbounds %struct.opslab, ptr %206, i64 0, i32 1
  %208 = load ptr, ptr %207, align 8, !tbaa !26
  tail call void @free(ptr noundef nonnull %206) #29
  %209 = icmp eq ptr %208, null
  br i1 %209, label %214, label %205, !llvm.loop !30

210:                                              ; preds = %195
  %211 = add i64 %203, -1
  store i64 %211, ptr %202, align 8, !tbaa !21
  br label %214

212:                                              ; preds = %171
  %213 = tail call dereferenceable_or_null(80) ptr @realloc(ptr noundef nonnull %173, i64 noundef 80) #31
  br label %214

214:                                              ; preds = %205, %179, %210, %194, %191, %212
  %215 = phi ptr [ %213, %212 ], [ %187, %191 ], [ %187, %194 ], [ %187, %210 ], [ %173, %179 ], [ %187, %205 ]
  %216 = getelementptr inbounds %struct.loop, ptr %215, i64 0, i32 3
  store i64 %87, ptr %216, align 8, !tbaa !290
  %217 = tail call ptr @Perl_newOP(i32 noundef 200, i32 noundef 0)
  %218 = tail call ptr @Perl_newWHILEOP(i32 noundef %0, i32 poison, ptr noundef %215, ptr noundef %217, ptr noundef %3, ptr noundef %4, i32 noundef 0)
  ret ptr %218
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_newLOOPEX(i32 noundef %0, ptr noundef %1) local_unnamed_addr #4 {
  %3 = alloca i64, align 8
  %4 = icmp eq i32 %0, 208
  %5 = getelementptr inbounds %struct.op, ptr %1, i64 0, i32 4
  %6 = load i16, ptr %5, align 8
  %7 = and i16 %6, 511
  br i1 %4, label %17, label %8

8:                                                ; preds = %2
  %9 = icmp eq i16 %7, 1
  br i1 %9, label %10, label %27

10:                                               ; preds = %8
  %11 = getelementptr inbounds %struct.op, ptr %1, i64 0, i32 5
  %12 = load i8, ptr %11, align 2, !tbaa !35
  %13 = and i8 %12, 8
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %10
  %16 = tail call ptr @Perl_newOP(i32 noundef %0, i32 noundef 128)
  br label %27

17:                                               ; preds = %2
  %18 = icmp eq i16 %7, 185
  br i1 %18, label %19, label %27

19:                                               ; preds = %17
  %20 = getelementptr inbounds %struct.op, ptr %1, i64 0, i32 5
  %21 = load i8, ptr %20, align 2, !tbaa !35
  %22 = and i8 %21, 64
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = tail call ptr @Perl_op_lvalue_flags(ptr noundef nonnull %1, i32 noundef 20, i32 noundef 0)
  %26 = tail call ptr @Perl_newUNOP(i32 noundef 20, i32 noundef 0, ptr noundef %25)
  br label %27

27:                                               ; preds = %17, %19, %24, %8, %10, %15
  %28 = phi ptr [ %16, %15 ], [ null, %10 ], [ null, %8 ], [ null, %19 ], [ null, %24 ], [ null, %17 ]
  %29 = phi ptr [ %1, %15 ], [ %1, %10 ], [ %1, %8 ], [ %1, %19 ], [ %26, %24 ], [ %1, %17 ]
  %30 = getelementptr inbounds %struct.op, ptr %29, i64 0, i32 4
  %31 = load i16, ptr %30, align 8
  %32 = and i16 %31, 511
  %33 = icmp eq i16 %32, 5
  br i1 %33, label %34, label %73

34:                                               ; preds = %27
  %35 = getelementptr inbounds %struct.svop, ptr %29, i64 0, i32 7
  %36 = load ptr, ptr %35, align 8, !tbaa !65
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #29
  %37 = getelementptr inbounds %struct.sv, ptr %36, i64 0, i32 2
  %38 = load i32, ptr %37, align 4, !tbaa !84
  %39 = and i32 %38, 2098176
  %40 = icmp eq i32 %39, 1024
  br i1 %40, label %41, label %47

41:                                               ; preds = %34
  %42 = load ptr, ptr %36, align 8, !tbaa !85
  %43 = getelementptr inbounds %struct.xpv, ptr %42, i64 0, i32 2
  %44 = load i64, ptr %43, align 8, !tbaa !86
  store i64 %44, ptr %3, align 8, !tbaa !88
  %45 = getelementptr inbounds %struct.sv, ptr %36, i64 0, i32 3
  %46 = load ptr, ptr %45, align 8, !tbaa !13
  br label %50

47:                                               ; preds = %34
  %48 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %36, ptr noundef nonnull %3, i32 noundef 34) #29
  %49 = load i64, ptr %3, align 8, !tbaa !88
  br label %50

50:                                               ; preds = %47, %41
  %51 = phi i64 [ %44, %41 ], [ %49, %47 ]
  %52 = phi ptr [ %46, %41 ], [ %48, %47 ]
  %53 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %52) #30
  %54 = icmp eq i64 %51, %53
  br i1 %54, label %55, label %71

55:                                               ; preds = %50
  %56 = load ptr, ptr %35, align 8, !tbaa !65
  %57 = getelementptr inbounds %struct.sv, ptr %56, i64 0, i32 2
  %58 = load i32, ptr %57, align 4, !tbaa !84
  %59 = and i32 %58, 536870912
  %60 = and i32 %58, 2098176
  %61 = icmp eq i32 %60, 1024
  br i1 %61, label %62, label %65

62:                                               ; preds = %55
  %63 = getelementptr inbounds %struct.sv, ptr %56, i64 0, i32 3
  %64 = load ptr, ptr %63, align 8, !tbaa !13
  br label %67

65:                                               ; preds = %55
  %66 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %56, ptr noundef null, i32 noundef 34) #29
  br label %67

67:                                               ; preds = %65, %62
  %68 = phi ptr [ %64, %62 ], [ %66, %65 ]
  %69 = call ptr @Perl_savesharedpv(ptr noundef %68) #29
  %70 = call ptr @Perl_newPVOP(i32 noundef %0, i32 noundef %59, ptr noundef %69)
  br label %71

71:                                               ; preds = %67, %50
  %72 = phi ptr [ %70, %67 ], [ %28, %50 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #29
  br label %73

73:                                               ; preds = %71, %27
  %74 = phi ptr [ %72, %71 ], [ %28, %27 ]
  %75 = icmp eq ptr %74, null
  br i1 %75, label %77, label %76

76:                                               ; preds = %73
  call void @Perl_op_free(ptr noundef nonnull %29)
  br label %79

77:                                               ; preds = %73
  %78 = call ptr @Perl_newUNOP(i32 noundef %0, i32 noundef 64, ptr noundef nonnull %29)
  br label %79

79:                                               ; preds = %77, %76
  %80 = phi ptr [ %74, %76 ], [ %78, %77 ]
  %81 = load i32, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 10), align 8, !tbaa !77
  %82 = or i32 %81, 256
  store i32 %82, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 10), align 8, !tbaa !77
  ret ptr %80
}

declare ptr @Perl_savesharedpv(ptr noundef) local_unnamed_addr #6

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_newGIVENOP(ptr noundef %0, ptr noundef %1, i64 noundef %2) local_unnamed_addr #4 {
  %4 = tail call fastcc ptr @S_ref_array_or_hash(ptr noundef %0)
  %5 = tail call fastcc ptr @S_newGIVWHENOP(ptr noundef %4, ptr noundef %1, i32 noundef 214, i32 noundef 215, i64 noundef %2)
  ret ptr %5
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @S_newGIVWHENOP(ptr noundef %0, ptr noundef %1, i32 noundef %2, i32 noundef %3, i64 noundef %4) unnamed_addr #4 {
  %6 = tail call ptr @Perl_Slab_Alloc(i64 noundef 56)
  %7 = trunc i32 %2 to i16
  %8 = getelementptr inbounds %struct.logop, ptr %6, i64 0, i32 4
  %9 = load i16, ptr %8, align 8
  %10 = and i16 %7, 511
  %11 = and i16 %9, -512
  %12 = or i16 %11, %10
  store i16 %12, ptr %8, align 8
  %13 = sext i32 %2 to i64
  %14 = getelementptr inbounds [0 x ptr], ptr @PL_ppaddr, i64 0, i64 %13
  %15 = load ptr, ptr %14, align 8, !tbaa !6
  %16 = getelementptr inbounds %struct.logop, ptr %6, i64 0, i32 2
  store ptr %15, ptr %16, align 8, !tbaa !99
  %17 = getelementptr inbounds %struct.logop, ptr %6, i64 0, i32 7
  store ptr %1, ptr %17, align 8, !tbaa !101
  %18 = getelementptr inbounds %struct.logop, ptr %6, i64 0, i32 8
  store ptr null, ptr %18, align 8, !tbaa !102
  %19 = getelementptr inbounds %struct.logop, ptr %6, i64 0, i32 5
  store i8 4, ptr %19, align 2, !tbaa !103
  br label %20

20:                                               ; preds = %23, %5
  %21 = phi ptr [ %1, %5 ], [ %25, %23 ]
  %22 = icmp eq ptr %21, null
  br i1 %22, label %32, label %23

23:                                               ; preds = %20
  %24 = getelementptr inbounds %struct.op, ptr %21, i64 0, i32 1
  %25 = load ptr, ptr %24, align 8, !tbaa !38
  %26 = icmp eq ptr %25, null
  br i1 %26, label %27, label %20, !llvm.loop !104

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.op, ptr %21, i64 0, i32 1
  %29 = getelementptr inbounds %struct.op, ptr %21, i64 0, i32 4
  %30 = load i16, ptr %29, align 8
  %31 = and i16 %30, -16385
  store i16 %31, ptr %29, align 8
  store ptr null, ptr %28, align 8, !tbaa !38
  br label %32

32:                                               ; preds = %20, %27
  %33 = icmp eq i64 %4, -1
  %34 = select i1 %33, i64 0, i64 %4
  %35 = getelementptr inbounds %struct.logop, ptr %6, i64 0, i32 3
  store i64 %34, ptr %35, align 8, !tbaa !213
  %36 = getelementptr inbounds %struct.logop, ptr %6, i64 0, i32 6
  store i8 0, ptr %36, align 1, !tbaa !218
  %37 = tail call ptr @Perl_newUNOP(i32 noundef %3, i32 noundef 0, ptr noundef %6)
  %38 = icmp eq ptr %0, null
  br i1 %38, label %48, label %39

39:                                               ; preds = %32
  %40 = tail call ptr @Perl_scalar(ptr noundef nonnull %0)
  %41 = tail call ptr @Perl_op_sibling_splice(ptr noundef nonnull %6, ptr noundef null, i32 noundef 0, ptr noundef nonnull %0)
  %42 = load ptr, ptr %0, align 8, !tbaa !25
  %43 = icmp eq ptr %42, null
  br i1 %43, label %44, label %46

44:                                               ; preds = %39
  %45 = tail call ptr @Perl_op_linklist(ptr noundef nonnull %0)
  br label %46

46:                                               ; preds = %39, %44
  %47 = phi ptr [ %45, %44 ], [ %42, %39 ]
  store ptr %47, ptr %37, align 8, !tbaa !25
  br label %54

48:                                               ; preds = %32
  %49 = load i8, ptr %19, align 2, !tbaa !103
  %50 = or i8 %49, -128
  store i8 %50, ptr %19, align 2, !tbaa !103
  %51 = getelementptr inbounds %struct.op, ptr %37, i64 0, i32 5
  %52 = load i8, ptr %51, align 2, !tbaa !35
  %53 = or i8 %52, -128
  store i8 %53, ptr %51, align 2, !tbaa !35
  br label %54

54:                                               ; preds = %48, %46
  %55 = phi ptr [ %37, %48 ], [ %0, %46 ]
  store ptr %6, ptr %55, align 8, !tbaa !25
  %56 = load ptr, ptr @PL_op_mask, align 8, !tbaa !6
  %57 = icmp eq ptr %56, null
  %58 = zext i32 %2 to i64
  br i1 %57, label %66, label %59

59:                                               ; preds = %54
  %60 = getelementptr inbounds i8, ptr %56, i64 %58
  %61 = load i8, ptr %60, align 1, !tbaa !13
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %66, label %63

63:                                               ; preds = %59
  tail call void @Perl_op_free(ptr noundef nonnull %6)
  %64 = getelementptr inbounds [0 x ptr], ptr @PL_op_desc, i64 0, i64 %58
  %65 = load ptr, ptr %64, align 8, !tbaa !6
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.63, ptr noundef %65) #29
  br label %70

66:                                               ; preds = %54, %59
  %67 = getelementptr inbounds [0 x ptr], ptr @PL_check, i64 0, i64 %58
  %68 = load ptr, ptr %67, align 8, !tbaa !6
  %69 = tail call ptr %68(ptr noundef nonnull %6) #29
  br label %70

70:                                               ; preds = %66, %63
  %71 = load ptr, ptr %1, align 8, !tbaa !25
  %72 = icmp eq ptr %71, null
  br i1 %72, label %73, label %75

73:                                               ; preds = %70
  %74 = tail call ptr @Perl_op_linklist(ptr noundef nonnull %1)
  br label %75

75:                                               ; preds = %70, %73
  %76 = phi ptr [ %74, %73 ], [ %71, %70 ]
  store ptr %76, ptr %6, align 8, !tbaa !214
  store ptr %37, ptr %18, align 8, !tbaa !102
  store ptr %37, ptr %1, align 8, !tbaa !25
  ret ptr %37
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @S_ref_array_or_hash(ptr noundef %0) unnamed_addr #4 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %16, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 4
  %5 = load i16, ptr %4, align 8
  %6 = and i16 %5, 511
  switch i16 %6, label %16 [
    i16 135, label %7
    i16 10, label %7
    i16 149, label %7
    i16 11, label %7
    i16 139, label %10
    i16 140, label %10
    i16 151, label %10
    i16 152, label %10
  ]

7:                                                ; preds = %3, %3, %3, %3
  %8 = tail call ptr @Perl_op_lvalue_flags(ptr noundef nonnull %0, i32 noundef 20, i32 noundef 0)
  %9 = tail call ptr @Perl_newUNOP(i32 noundef 20, i32 noundef 0, ptr noundef %8)
  br label %16

10:                                               ; preds = %3, %3, %3, %3
  %11 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 5
  %12 = load i8, ptr %11, align 2, !tbaa !35
  %13 = or i8 %12, -17
  store i8 %13, ptr %11, align 2, !tbaa !35
  %14 = tail call ptr @Perl_op_lvalue_flags(ptr noundef nonnull %0, i32 noundef 160, i32 noundef 0)
  %15 = tail call ptr @Perl_op_convert_list(i32 noundef 160, i32 noundef 128, ptr noundef %14)
  br label %16

16:                                               ; preds = %3, %1, %10, %7
  %17 = phi ptr [ %9, %7 ], [ %15, %10 ], [ null, %1 ], [ %0, %3 ]
  ret ptr %17
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_newANONLIST(ptr noundef %0) local_unnamed_addr #4 {
  %2 = tail call ptr @Perl_op_convert_list(i32 noundef 160, i32 noundef 128, ptr noundef %0)
  ret ptr %2
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_newWHENOP(ptr noundef %0, ptr noundef %1) local_unnamed_addr #4 {
  %3 = icmp eq ptr %0, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i1 @S_looks_like_bool(ptr noundef nonnull %0)
  br i1 %5, label %11, label %6

6:                                                ; preds = %4
  %7 = tail call ptr @Perl_newDEFSVOP()
  %8 = tail call fastcc ptr @S_ref_array_or_hash(ptr noundef nonnull %0)
  %9 = tail call ptr @Perl_scalar(ptr noundef %8)
  %10 = tail call ptr @Perl_newBINOP(i32 noundef 107, i32 noundef 128, ptr noundef %7, ptr noundef %8)
  br label %11

11:                                               ; preds = %2, %4, %6
  %12 = phi ptr [ %10, %6 ], [ %0, %4 ], [ null, %2 ]
  %13 = tail call fastcc ptr @S_newGIVWHENOP(ptr noundef %12, ptr noundef %1, i32 noundef 216, i32 noundef 217, i64 noundef 0)
  ret ptr %13
}

; Function Attrs: nofree nosync nounwind sspstrong memory(read, inaccessiblemem: none) uwtable
define internal fastcc zeroext i1 @S_looks_like_bool(ptr nocapture noundef readonly %0) unnamed_addr #19 {
  br label %2

2:                                                ; preds = %10, %1
  %3 = phi ptr [ %0, %1 ], [ %12, %10 ]
  %4 = getelementptr inbounds %struct.op, ptr %3, i64 0, i32 4
  %5 = load i16, ptr %4, align 8
  %6 = and i16 %5, 511
  %7 = zext i16 %6 to i32
  switch i32 %7, label %34 [
    i32 177, label %8
    i32 179, label %8
    i32 176, label %13
    i32 0, label %19
    i32 2, label %19
    i32 185, label %32
    i32 103, label %32
    i32 178, label %32
    i32 79, label %32
    i32 81, label %32
    i32 71, label %32
    i32 73, label %32
    i32 75, label %32
    i32 77, label %32
    i32 80, label %32
    i32 82, label %32
    i32 72, label %32
    i32 74, label %32
    i32 76, label %32
    i32 78, label %32
    i32 89, label %32
    i32 90, label %32
    i32 85, label %32
    i32 86, label %32
    i32 87, label %32
    i32 88, label %32
    i32 107, label %32
    i32 266, label %32
    i32 267, label %32
    i32 268, label %32
    i32 269, label %32
    i32 270, label %32
    i32 271, label %32
    i32 272, label %32
    i32 278, label %32
    i32 277, label %32
    i32 279, label %32
    i32 280, label %32
    i32 281, label %32
    i32 282, label %32
    i32 283, label %32
    i32 284, label %32
    i32 285, label %32
    i32 289, label %32
    i32 286, label %32
    i32 287, label %32
    i32 288, label %32
    i32 290, label %32
    i32 291, label %32
    i32 292, label %32
    i32 43, label %32
    i32 148, label %32
    i32 31, label %32
    i32 244, label %32
    i32 175, label %32
    i32 5, label %26
  ]

8:                                                ; preds = %2, %2
  %9 = getelementptr inbounds %struct.logop, ptr %3, i64 0, i32 7
  br label %10

10:                                               ; preds = %8, %17, %24
  %11 = phi ptr [ %9, %8 ], [ %18, %17 ], [ %25, %24 ]
  %12 = load ptr, ptr %11, align 8, !tbaa !6
  br label %2

13:                                               ; preds = %2
  %14 = getelementptr inbounds %struct.logop, ptr %3, i64 0, i32 7
  %15 = load ptr, ptr %14, align 8, !tbaa !101
  %16 = tail call fastcc zeroext i1 @S_looks_like_bool(ptr noundef %15)
  br i1 %16, label %17, label %32

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.op, ptr %15, i64 0, i32 1
  br label %10

19:                                               ; preds = %2, %2
  %20 = getelementptr inbounds %struct.op, ptr %3, i64 0, i32 5
  %21 = load i8, ptr %20, align 2, !tbaa !35
  %22 = and i8 %21, 4
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %32, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %struct.unop, ptr %3, i64 0, i32 7
  br label %10

26:                                               ; preds = %2
  %27 = getelementptr inbounds %struct.svop, ptr %3, i64 0, i32 7
  %28 = load ptr, ptr %27, align 8, !tbaa !65
  %29 = icmp eq ptr %28, @PL_sv_yes
  %30 = icmp eq ptr %28, @PL_sv_no
  %31 = or i1 %29, %30
  br label %34

32:                                               ; preds = %13, %19, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2
  %33 = phi i1 [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ false, %19 ], [ false, %13 ]
  br label %34

34:                                               ; preds = %2, %32, %26
  %35 = phi i1 [ %31, %26 ], [ %33, %32 ], [ false, %2 ]
  ret i1 %35
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_cv_ckproto_len_flags(ptr nocapture noundef readonly %0, ptr noundef %1, ptr noundef %2, i64 noundef %3, i32 noundef %4) local_unnamed_addr #4 {
  %6 = getelementptr inbounds %struct.cv, ptr %0, i64 0, i32 2
  %7 = load i32, ptr %6, align 4, !tbaa !263
  %8 = and i32 %7, 2048
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %33, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.cv, ptr %0, i64 0, i32 3
  %12 = load ptr, ptr %11, align 8, !tbaa !13
  %13 = getelementptr inbounds %struct.sv, ptr %12, i64 0, i32 2
  %14 = load i32, ptr %13, align 4, !tbaa !52
  %15 = and i32 %14, 255
  %16 = icmp eq i32 %15, 13
  br i1 %16, label %17, label %55

17:                                               ; preds = %10
  %18 = and i32 %14, 1024
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %55, label %20

20:                                               ; preds = %17
  %21 = load ptr, ptr %12, align 8, !tbaa !10
  %22 = getelementptr inbounds %struct.xpvcv, ptr %21, i64 0, i32 12
  %23 = load i32, ptr %22, align 4, !tbaa !14
  %24 = and i32 %23, 8192
  %25 = icmp eq i32 %24, 0
  %26 = getelementptr inbounds %struct.cv, ptr %12, i64 0, i32 3
  %27 = load ptr, ptr %26, align 8, !tbaa !13
  br i1 %25, label %55, label %28

28:                                               ; preds = %20
  %29 = getelementptr inbounds %struct.xpv, ptr %21, i64 0, i32 2
  %30 = load i64, ptr %29, align 8, !tbaa !86
  %31 = getelementptr inbounds i8, ptr %27, i64 %30
  %32 = getelementptr inbounds i8, ptr %31, i64 1
  br label %55

33:                                               ; preds = %5
  %34 = and i32 %7, 1024
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %55, label %36

36:                                               ; preds = %33
  %37 = and i32 %7, 255
  %38 = icmp eq i32 %37, 13
  br i1 %38, label %39, label %52

39:                                               ; preds = %36
  %40 = load ptr, ptr %0, align 8, !tbaa !10
  %41 = getelementptr inbounds %struct.xpvcv, ptr %40, i64 0, i32 12
  %42 = load i32, ptr %41, align 4, !tbaa !14
  %43 = and i32 %42, 8192
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %52, label %45

45:                                               ; preds = %39
  %46 = getelementptr inbounds %struct.cv, ptr %0, i64 0, i32 3
  %47 = load ptr, ptr %46, align 8, !tbaa !13
  %48 = getelementptr inbounds %struct.xpv, ptr %40, i64 0, i32 2
  %49 = load i64, ptr %48, align 8, !tbaa !86
  %50 = getelementptr inbounds i8, ptr %47, i64 %49
  %51 = getelementptr inbounds i8, ptr %50, i64 1
  br label %55

52:                                               ; preds = %39, %36
  %53 = getelementptr inbounds %struct.cv, ptr %0, i64 0, i32 3
  %54 = load ptr, ptr %53, align 8, !tbaa !13
  br label %55

55:                                               ; preds = %20, %52, %45, %33, %17, %28, %10
  %56 = phi ptr [ %12, %28 ], [ %12, %17 ], [ %0, %10 ], [ %0, %45 ], [ %0, %52 ], [ %0, %33 ], [ %12, %20 ]
  %57 = phi ptr [ %32, %28 ], [ null, %17 ], [ @.str.19, %10 ], [ %51, %45 ], [ %54, %52 ], [ null, %33 ], [ %27, %20 ]
  %58 = getelementptr inbounds %struct.cv, ptr %56, i64 0, i32 2
  %59 = load i32, ptr %58, align 4, !tbaa !263
  %60 = and i32 %59, 1024
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %81, label %62

62:                                               ; preds = %55
  %63 = and i32 %59, 255
  %64 = icmp eq i32 %63, 13
  %65 = load ptr, ptr %56, align 8, !tbaa !10
  br i1 %64, label %66, label %78

66:                                               ; preds = %62
  %67 = getelementptr inbounds %struct.xpvcv, ptr %65, i64 0, i32 12
  %68 = load i32, ptr %67, align 4, !tbaa !14
  %69 = and i32 %68, 8192
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %78, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %struct.xpv, ptr %65, i64 0, i32 3
  %73 = load i64, ptr %72, align 8, !tbaa !13
  %74 = getelementptr inbounds %struct.xpv, ptr %65, i64 0, i32 2
  %75 = load i64, ptr %74, align 8, !tbaa !86
  %76 = add i64 %73, -2
  %77 = sub i64 %76, %75
  br label %81

78:                                               ; preds = %66, %62
  %79 = getelementptr inbounds %struct.xpv, ptr %65, i64 0, i32 2
  %80 = load i64, ptr %79, align 8, !tbaa !86
  br label %81

81:                                               ; preds = %55, %71, %78
  %82 = phi i64 [ %77, %71 ], [ %80, %78 ], [ 0, %55 ]
  %83 = icmp eq ptr %2, null
  %84 = icmp eq ptr %57, null
  %85 = select i1 %83, i1 %84, i1 false
  br i1 %85, label %336, label %86

86:                                               ; preds = %81
  %87 = tail call zeroext i1 @Perl_ckwarn_d(i32 noundef 35) #29
  br i1 %87, label %88, label %336

88:                                               ; preds = %86
  %89 = icmp ne ptr %2, null
  %90 = icmp ne ptr %57, null
  %91 = select i1 %89, i1 %90, i1 false
  br i1 %91, label %92, label %230

92:                                               ; preds = %88
  %93 = tail call ptr @Perl_newSVpvn_flags(ptr noundef nonnull %2, i64 noundef %3, i32 noundef 524288) #29
  %94 = getelementptr inbounds %struct.sv, ptr %93, i64 0, i32 3
  %95 = load ptr, ptr %94, align 8, !tbaa !13
  %96 = icmp eq i64 %3, 0
  br i1 %96, label %147, label %97

97:                                               ; preds = %92
  %98 = and i64 %3, 1
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %113, label %100

100:                                              ; preds = %97
  %101 = add i64 %3, -1
  %102 = load i8, ptr %2, align 1, !tbaa !13
  %103 = zext i8 %102 to i64
  %104 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %103
  %105 = load i32, ptr %104, align 4, !tbaa !52
  %106 = and i32 %105, 17408
  %107 = icmp eq i32 %106, 17408
  br i1 %107, label %110, label %108

108:                                              ; preds = %100
  %109 = getelementptr inbounds i8, ptr %95, i64 1
  store i8 %102, ptr %95, align 1, !tbaa !13
  br label %110

110:                                              ; preds = %108, %100
  %111 = phi ptr [ %95, %100 ], [ %109, %108 ]
  %112 = getelementptr inbounds i8, ptr %2, i64 1
  br label %113

113:                                              ; preds = %110, %97
  %114 = phi ptr [ undef, %97 ], [ %111, %110 ]
  %115 = phi i64 [ %3, %97 ], [ %101, %110 ]
  %116 = phi ptr [ %95, %97 ], [ %111, %110 ]
  %117 = phi ptr [ %2, %97 ], [ %112, %110 ]
  %118 = icmp eq i64 %3, 1
  br i1 %118, label %147, label %119

119:                                              ; preds = %113, %143
  %120 = phi i64 [ %134, %143 ], [ %115, %113 ]
  %121 = phi ptr [ %144, %143 ], [ %116, %113 ]
  %122 = phi ptr [ %145, %143 ], [ %117, %113 ]
  %123 = load i8, ptr %122, align 1, !tbaa !13
  %124 = zext i8 %123 to i64
  %125 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %124
  %126 = load i32, ptr %125, align 4, !tbaa !52
  %127 = and i32 %126, 17408
  %128 = icmp eq i32 %127, 17408
  br i1 %128, label %131, label %129

129:                                              ; preds = %119
  %130 = getelementptr inbounds i8, ptr %121, i64 1
  store i8 %123, ptr %121, align 1, !tbaa !13
  br label %131

131:                                              ; preds = %129, %119
  %132 = phi ptr [ %121, %119 ], [ %130, %129 ]
  %133 = getelementptr inbounds i8, ptr %122, i64 1
  %134 = add i64 %120, -2
  %135 = load i8, ptr %133, align 1, !tbaa !13
  %136 = zext i8 %135 to i64
  %137 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %136
  %138 = load i32, ptr %137, align 4, !tbaa !52
  %139 = and i32 %138, 17408
  %140 = icmp eq i32 %139, 17408
  br i1 %140, label %143, label %141

141:                                              ; preds = %131
  %142 = getelementptr inbounds i8, ptr %132, i64 1
  store i8 %135, ptr %132, align 1, !tbaa !13
  br label %143

143:                                              ; preds = %141, %131
  %144 = phi ptr [ %132, %131 ], [ %142, %141 ]
  %145 = getelementptr inbounds i8, ptr %122, i64 2
  %146 = icmp eq i64 %134, 0
  br i1 %146, label %147, label %119, !llvm.loop !291

147:                                              ; preds = %113, %143, %92
  %148 = phi ptr [ %95, %92 ], [ %114, %113 ], [ %144, %143 ]
  store i8 0, ptr %148, align 1, !tbaa !13
  %149 = load ptr, ptr %94, align 8, !tbaa !13
  %150 = ptrtoint ptr %148 to i64
  %151 = ptrtoint ptr %149 to i64
  %152 = sub i64 %150, %151
  %153 = tail call ptr @Perl_newSVpvn_flags(ptr noundef nonnull %57, i64 noundef %82, i32 noundef 524288) #29
  %154 = getelementptr inbounds %struct.sv, ptr %153, i64 0, i32 3
  %155 = load ptr, ptr %154, align 8, !tbaa !13
  %156 = icmp eq i64 %82, 0
  br i1 %156, label %207, label %157

157:                                              ; preds = %147
  %158 = and i64 %82, 1
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %173, label %160

160:                                              ; preds = %157
  %161 = add i64 %82, -1
  %162 = load i8, ptr %57, align 1, !tbaa !13
  %163 = zext i8 %162 to i64
  %164 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %163
  %165 = load i32, ptr %164, align 4, !tbaa !52
  %166 = and i32 %165, 17408
  %167 = icmp eq i32 %166, 17408
  br i1 %167, label %170, label %168

168:                                              ; preds = %160
  %169 = getelementptr inbounds i8, ptr %155, i64 1
  store i8 %162, ptr %155, align 1, !tbaa !13
  br label %170

170:                                              ; preds = %168, %160
  %171 = phi ptr [ %155, %160 ], [ %169, %168 ]
  %172 = getelementptr inbounds i8, ptr %57, i64 1
  br label %173

173:                                              ; preds = %170, %157
  %174 = phi ptr [ undef, %157 ], [ %171, %170 ]
  %175 = phi i64 [ %82, %157 ], [ %161, %170 ]
  %176 = phi ptr [ %155, %157 ], [ %171, %170 ]
  %177 = phi ptr [ %57, %157 ], [ %172, %170 ]
  %178 = icmp eq i64 %82, 1
  br i1 %178, label %207, label %179

179:                                              ; preds = %173, %203
  %180 = phi i64 [ %194, %203 ], [ %175, %173 ]
  %181 = phi ptr [ %204, %203 ], [ %176, %173 ]
  %182 = phi ptr [ %205, %203 ], [ %177, %173 ]
  %183 = load i8, ptr %182, align 1, !tbaa !13
  %184 = zext i8 %183 to i64
  %185 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %184
  %186 = load i32, ptr %185, align 4, !tbaa !52
  %187 = and i32 %186, 17408
  %188 = icmp eq i32 %187, 17408
  br i1 %188, label %191, label %189

189:                                              ; preds = %179
  %190 = getelementptr inbounds i8, ptr %181, i64 1
  store i8 %183, ptr %181, align 1, !tbaa !13
  br label %191

191:                                              ; preds = %189, %179
  %192 = phi ptr [ %181, %179 ], [ %190, %189 ]
  %193 = getelementptr inbounds i8, ptr %182, i64 1
  %194 = add i64 %180, -2
  %195 = load i8, ptr %193, align 1, !tbaa !13
  %196 = zext i8 %195 to i64
  %197 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %196
  %198 = load i32, ptr %197, align 4, !tbaa !52
  %199 = and i32 %198, 17408
  %200 = icmp eq i32 %199, 17408
  br i1 %200, label %203, label %201

201:                                              ; preds = %191
  %202 = getelementptr inbounds i8, ptr %192, i64 1
  store i8 %195, ptr %192, align 1, !tbaa !13
  br label %203

203:                                              ; preds = %201, %191
  %204 = phi ptr [ %192, %191 ], [ %202, %201 ]
  %205 = getelementptr inbounds i8, ptr %182, i64 2
  %206 = icmp eq i64 %194, 0
  br i1 %206, label %207, label %179, !llvm.loop !291

207:                                              ; preds = %173, %203, %147
  %208 = phi ptr [ %155, %147 ], [ %174, %173 ], [ %204, %203 ]
  store i8 0, ptr %208, align 1, !tbaa !13
  %209 = load ptr, ptr %154, align 8, !tbaa !13
  %210 = ptrtoint ptr %208 to i64
  %211 = ptrtoint ptr %209 to i64
  %212 = sub i64 %210, %211
  %213 = and i32 %4, 536870912
  %214 = load i32, ptr %58, align 4, !tbaa !263
  %215 = and i32 %214, 536870912
  %216 = icmp eq i32 %213, %215
  br i1 %216, label %217, label %222

217:                                              ; preds = %207
  %218 = icmp eq i64 %152, %212
  br i1 %218, label %219, label %230

219:                                              ; preds = %217
  %220 = tail call i32 @bcmp(ptr %209, ptr %149, i64 %152)
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %336, label %230

222:                                              ; preds = %207
  %223 = icmp eq i32 %213, 0
  br i1 %223, label %227, label %224

224:                                              ; preds = %222
  %225 = tail call i32 @Perl_bytes_cmp_utf8(ptr noundef %209, i64 noundef %212, ptr noundef %149, i64 noundef %152) #29
  %226 = icmp eq i32 %225, 0
  br i1 %226, label %336, label %230

227:                                              ; preds = %222
  %228 = tail call i32 @Perl_bytes_cmp_utf8(ptr noundef %149, i64 noundef %152, ptr noundef %209, i64 noundef %212) #29
  %229 = icmp eq i32 %228, 0
  br i1 %229, label %336, label %230

230:                                              ; preds = %219, %217, %227, %224, %88
  %231 = phi i64 [ %152, %219 ], [ %212, %217 ], [ %212, %227 ], [ %212, %224 ], [ %82, %88 ]
  %232 = phi ptr [ %149, %219 ], [ %149, %217 ], [ %149, %227 ], [ %149, %224 ], [ %2, %88 ]
  %233 = phi ptr [ %209, %219 ], [ %209, %217 ], [ %209, %227 ], [ %209, %224 ], [ %57, %88 ]
  %234 = tail call ptr @Perl_sv_newmortal() #29
  %235 = icmp eq ptr %1, null
  br i1 %235, label %236, label %237

236:                                              ; preds = %230
  tail call void @Perl_sv_setpvn(ptr noundef %234, ptr noundef nonnull @.str.94, i64 noundef 19) #29
  br label %322

237:                                              ; preds = %230
  %238 = getelementptr inbounds %struct.gv, ptr %1, i64 0, i32 2
  %239 = load i32, ptr %238, align 4, !tbaa !133
  %240 = and i32 %239, 255
  %241 = icmp eq i32 %240, 9
  br i1 %241, label %242, label %244

242:                                              ; preds = %237
  %243 = tail call ptr @Perl_sv_newmortal() #29
  tail call void @Perl_gv_efullname4(ptr noundef %243, ptr noundef nonnull %1, ptr noundef null, i1 noundef zeroext true) #29
  br label %317

244:                                              ; preds = %237
  %245 = and i32 %239, 1024
  %246 = icmp eq i32 %245, 0
  br i1 %246, label %261, label %247

247:                                              ; preds = %244
  %248 = getelementptr inbounds %struct.sv, ptr %1, i64 0, i32 3
  %249 = load ptr, ptr %248, align 8, !tbaa !13
  %250 = load i8, ptr %249, align 1, !tbaa !13
  %251 = icmp eq i8 %250, 38
  br i1 %251, label %252, label %261

252:                                              ; preds = %247
  %253 = getelementptr inbounds i8, ptr %249, i64 1
  %254 = load ptr, ptr %1, align 8, !tbaa !169
  %255 = getelementptr inbounds %struct.xpv, ptr %254, i64 0, i32 2
  %256 = load i64, ptr %255, align 8, !tbaa !86
  %257 = add i64 %256, -1
  %258 = and i32 %239, 536870912
  %259 = or i32 %258, 524288
  %260 = tail call ptr @Perl_newSVpvn_flags(ptr noundef nonnull %253, i64 noundef %257, i32 noundef %259) #29
  br label %317

261:                                              ; preds = %247, %244
  %262 = and i32 %4, 1
  %263 = and i32 %239, 2048
  %264 = or i32 %263, %262
  %265 = icmp eq i32 %264, 0
  br i1 %265, label %266, label %267

266:                                              ; preds = %261
  tail call void @Perl_sv_setpvn(ptr noundef %234, ptr noundef nonnull @.str.94, i64 noundef 19) #29
  br label %320

267:                                              ; preds = %261
  %268 = load ptr, ptr @PL_curstash, align 8, !tbaa !6
  %269 = getelementptr inbounds %struct.hv, ptr %268, i64 0, i32 2
  %270 = load i32, ptr %269, align 4, !tbaa !56
  %271 = and i32 %270, 33554432
  %272 = icmp eq i32 %271, 0
  br i1 %272, label %289, label %273

273:                                              ; preds = %267
  %274 = getelementptr inbounds %struct.hv, ptr %268, i64 0, i32 3
  %275 = load ptr, ptr %274, align 8, !tbaa !13
  %276 = load ptr, ptr %268, align 8, !tbaa !139
  %277 = getelementptr inbounds %struct.xpvhv, ptr %276, i64 0, i32 3
  %278 = load i64, ptr %277, align 8, !tbaa !140
  %279 = add i64 %278, 1
  %280 = getelementptr inbounds ptr, ptr %275, i64 %279
  %281 = load ptr, ptr %280, align 8, !tbaa !13
  %282 = icmp eq ptr %281, null
  br i1 %282, label %289, label %283

283:                                              ; preds = %273
  %284 = getelementptr inbounds %struct.xpvhv_aux, ptr %280, i64 0, i32 4
  %285 = load i32, ptr %284, align 4, !tbaa !142
  %286 = icmp eq i32 %285, 0
  br i1 %286, label %289, label %287

287:                                              ; preds = %283
  %288 = load ptr, ptr %281, align 8, !tbaa !6
  br label %289

289:                                              ; preds = %283, %267, %273, %287
  %290 = phi ptr [ %288, %287 ], [ null, %273 ], [ null, %267 ], [ %281, %283 ]
  %291 = tail call ptr @Perl_newSVhek(ptr noundef %290) #29
  %292 = tail call ptr @Perl_sv_2mortal(ptr noundef %291) #29
  tail call void @Perl_sv_catpvn_flags(ptr noundef %292, ptr noundef nonnull @.str.93, i64 noundef 2, i32 noundef 2) #29
  %293 = load i32, ptr %238, align 4, !tbaa !133
  %294 = and i32 %293, 2048
  %295 = icmp eq i32 %294, 0
  br i1 %295, label %316, label %296

296:                                              ; preds = %289
  %297 = getelementptr inbounds %struct.gv, ptr %1, i64 0, i32 3
  %298 = load ptr, ptr %297, align 8, !tbaa !13
  %299 = load ptr, ptr %298, align 8, !tbaa !10
  %300 = getelementptr inbounds %struct.xpvcv, ptr %299, i64 0, i32 12
  %301 = load i32, ptr %300, align 4, !tbaa !14
  %302 = and i32 %301, 32768
  %303 = icmp ne i32 %302, 0
  tail call void @llvm.assume(i1 %303)
  %304 = getelementptr inbounds %struct.xpvcv, ptr %299, i64 0, i32 7
  %305 = load ptr, ptr %304, align 8, !tbaa !13
  %306 = getelementptr inbounds %struct.hek, ptr %305, i64 0, i32 2
  %307 = getelementptr inbounds %struct.hek, ptr %305, i64 0, i32 1
  %308 = load i32, ptr %307, align 4, !tbaa !292
  %309 = sext i32 %308 to i64
  %310 = getelementptr inbounds i8, ptr %306, i64 %309
  %311 = getelementptr inbounds i8, ptr %310, i64 1
  %312 = load i8, ptr %311, align 1, !tbaa !13
  %313 = and i8 %312, 1
  %314 = icmp eq i8 %313, 0
  %315 = select i1 %314, i32 16384, i32 32768
  tail call void @Perl_sv_catpvn_flags(ptr noundef %292, ptr noundef nonnull %306, i64 noundef %309, i32 noundef %315) #29
  br label %317

316:                                              ; preds = %289
  tail call void @Perl_sv_catsv_flags(ptr noundef %292, ptr noundef nonnull %1, i32 noundef 2) #29
  br label %317

317:                                              ; preds = %242, %316, %296, %252
  %318 = phi ptr [ %243, %242 ], [ %260, %252 ], [ %292, %296 ], [ %292, %316 ]
  tail call void @Perl_sv_setpvn(ptr noundef %234, ptr noundef nonnull @.str.94, i64 noundef 19) #29
  %319 = icmp eq ptr %318, null
  br i1 %319, label %322, label %320

320:                                              ; preds = %266, %317
  %321 = phi ptr [ %1, %266 ], [ %318, %317 ]
  tail call void (ptr, ptr, ...) @Perl_sv_catpvf(ptr noundef %234, ptr noundef nonnull @.str.95, ptr noundef nonnull %321) #29
  br label %322

322:                                              ; preds = %236, %320, %317
  %323 = icmp eq ptr %233, null
  br i1 %323, label %328, label %324

324:                                              ; preds = %322
  %325 = load i32, ptr %58, align 4, !tbaa !263
  %326 = lshr i32 %325, 29
  %327 = and i32 %326, 1
  tail call void (ptr, ptr, ...) @Perl_sv_catpvf(ptr noundef %234, ptr noundef nonnull @.str.96, i32 noundef %327, i64 noundef %231, ptr noundef nonnull %233) #29
  br label %329

328:                                              ; preds = %322
  tail call void @Perl_sv_catpvn_flags(ptr noundef %234, ptr noundef nonnull @.str.97, i64 noundef 6, i32 noundef 2) #29
  br label %329

329:                                              ; preds = %328, %324
  tail call void @Perl_sv_catpvn_flags(ptr noundef %234, ptr noundef nonnull @.str.98, i64 noundef 4, i32 noundef 2) #29
  %330 = icmp eq ptr %232, null
  br i1 %330, label %334, label %331

331:                                              ; preds = %329
  %332 = lshr i32 %4, 29
  %333 = and i32 %332, 1
  tail call void (ptr, ptr, ...) @Perl_sv_catpvf(ptr noundef %234, ptr noundef nonnull @.str.99, i32 noundef %333, i64 noundef %3, ptr noundef nonnull %232) #29
  br label %335

334:                                              ; preds = %329
  tail call void @Perl_sv_catpvn_flags(ptr noundef %234, ptr noundef nonnull @.str.100, i64 noundef 4, i32 noundef 2) #29
  br label %335

335:                                              ; preds = %334, %331
  tail call void (i32, ptr, ...) @Perl_warner(i32 noundef 35, ptr noundef nonnull @.str.101, ptr noundef %234) #29
  br label %336

336:                                              ; preds = %227, %224, %219, %86, %81, %335
  ret void
}

declare zeroext i1 @Perl_ckwarn_d(i32 noundef) local_unnamed_addr #6

declare i32 @Perl_bytes_cmp_utf8(ptr noundef, i64 noundef, ptr noundef, i64 noundef) local_unnamed_addr #6

declare ptr @Perl_newSVpvn_flags(ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #6

declare void @Perl_sv_catsv_flags(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(read, inaccessiblemem: none) uwtable
define dso_local ptr @Perl_cv_const_sv(ptr noundef readonly %0) local_unnamed_addr #20 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %26, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.cv, ptr %0, i64 0, i32 2
  %5 = load i32, ptr %4, align 4, !tbaa !263
  %6 = and i32 %5, 255
  %7 = add nsw i32 %6, -13
  %8 = icmp ult i32 %7, 2
  br i1 %8, label %9, label %26

9:                                                ; preds = %3
  %10 = load ptr, ptr %0, align 8, !tbaa !10
  %11 = getelementptr inbounds %struct.xpvcv, ptr %10, i64 0, i32 12
  %12 = load i32, ptr %11, align 4, !tbaa !14
  %13 = and i32 %12, 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %24, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %struct.xpvcv, ptr %10, i64 0, i32 5
  %17 = load ptr, ptr %16, align 8, !tbaa !13
  %18 = icmp eq ptr %17, null
  br i1 %18, label %24, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.sv, ptr %17, i64 0, i32 2
  %21 = load i32, ptr %20, align 4, !tbaa !84
  %22 = and i32 %21, 255
  %23 = icmp eq i32 %22, 11
  br i1 %23, label %26, label %24

24:                                               ; preds = %9, %19, %15
  %25 = phi ptr [ %17, %19 ], [ null, %15 ], [ null, %9 ]
  br label %26

26:                                               ; preds = %3, %19, %1, %24
  %27 = phi ptr [ %25, %24 ], [ null, %1 ], [ null, %3 ], [ null, %19 ]
  ret ptr %27
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(read, inaccessiblemem: none) uwtable
define dso_local ptr @Perl_cv_const_sv_or_av(ptr noundef readonly %0) local_unnamed_addr #20 {
  %2 = icmp eq ptr %0, null
  br i1 %2, label %21, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.cv, ptr %0, i64 0, i32 2
  %5 = load i32, ptr %4, align 4, !tbaa !263
  %6 = and i32 %5, 2048
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  br label %18

10:                                               ; preds = %3
  %11 = load ptr, ptr %0, align 8, !tbaa !10
  %12 = getelementptr inbounds %struct.xpvcv, ptr %11, i64 0, i32 12
  %13 = load i32, ptr %12, align 4, !tbaa !14
  %14 = and i32 %13, 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %21, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %struct.xpvcv, ptr %11, i64 0, i32 5
  br label %18

18:                                               ; preds = %8, %16
  %19 = phi ptr [ %17, %16 ], [ %9, %8 ]
  %20 = load ptr, ptr %19, align 8, !tbaa !13
  br label %21

21:                                               ; preds = %18, %10, %1
  %22 = phi ptr [ null, %1 ], [ null, %10 ], [ %20, %18 ]
  ret ptr %22
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_newMYSUB(i32 noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4) local_unnamed_addr #4 {
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca i64, align 8
  %9 = alloca ptr, align 8
  %10 = alloca ptr, align 8
  store ptr %2, ptr %6, align 8, !tbaa !6
  store ptr %3, ptr %7, align 8, !tbaa !6
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %8) #29
  store i64 0, ptr %8, align 8, !tbaa !88
  %11 = load ptr, ptr @PL_compcv, align 8, !tbaa !6
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %9) #29
  %12 = getelementptr inbounds %struct.op, ptr %1, i64 0, i32 3
  %13 = load i64, ptr %12, align 8, !tbaa !34
  %14 = load ptr, ptr %11, align 8, !tbaa !10
  %15 = getelementptr inbounds %struct.xpvcv, ptr %14, i64 0, i32 10
  %16 = load ptr, ptr %15, align 8, !tbaa !158
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %10)
  store ptr null, ptr %10, align 8, !tbaa !6
  %17 = load ptr, ptr %16, align 8, !tbaa !10
  %18 = getelementptr inbounds %struct.xpvcv, ptr %17, i64 0, i32 9
  %19 = load ptr, ptr %18, align 8, !tbaa !13
  %20 = getelementptr inbounds %struct.padlist, ptr %19, i64 0, i32 1
  %21 = load ptr, ptr %20, align 8, !tbaa !159
  %22 = load ptr, ptr %21, align 8, !tbaa !6
  %23 = getelementptr inbounds %struct.padnamelist, ptr %22, i64 0, i32 1
  %24 = load ptr, ptr %23, align 8, !tbaa !151
  %25 = getelementptr inbounds ptr, ptr %24, i64 %13
  %26 = load ptr, ptr %25, align 8, !tbaa !6
  %27 = getelementptr inbounds %struct.padname, ptr %26, i64 0, i32 8
  %28 = load i8, ptr %27, align 1, !tbaa !153
  %29 = and i8 %28, 1
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %59, label %31

31:                                               ; preds = %5
  %32 = getelementptr inbounds %struct.padname, ptr %26, i64 0, i32 3
  %33 = load i32, ptr %32, align 8, !tbaa !157
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %59, label %39

35:                                               ; preds = %39
  %36 = getelementptr inbounds %struct.padname, ptr %54, i64 0, i32 3
  %37 = load i32, ptr %36, align 8, !tbaa !157
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %59, label %39

39:                                               ; preds = %31, %35
  %40 = phi i32 [ %37, %35 ], [ %33, %31 ]
  %41 = phi ptr [ %45, %35 ], [ %17, %31 ]
  %42 = zext i32 %40 to i64
  %43 = getelementptr inbounds %struct.xpvcv, ptr %41, i64 0, i32 10
  %44 = load ptr, ptr %43, align 8, !tbaa !158
  %45 = load ptr, ptr %44, align 8, !tbaa !10
  %46 = getelementptr inbounds %struct.xpvcv, ptr %45, i64 0, i32 9
  %47 = load ptr, ptr %46, align 8, !tbaa !13
  %48 = getelementptr inbounds %struct.padlist, ptr %47, i64 0, i32 1
  %49 = load ptr, ptr %48, align 8, !tbaa !159
  %50 = load ptr, ptr %49, align 8, !tbaa !6
  %51 = getelementptr inbounds %struct.padnamelist, ptr %50, i64 0, i32 1
  %52 = load ptr, ptr %51, align 8, !tbaa !151
  %53 = getelementptr inbounds ptr, ptr %52, i64 %42
  %54 = load ptr, ptr %53, align 8, !tbaa !6
  %55 = getelementptr inbounds %struct.padname, ptr %54, i64 0, i32 8
  %56 = load i8, ptr %55, align 1, !tbaa !153
  %57 = and i8 %56, 1
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %59, label %35

59:                                               ; preds = %35, %39, %31, %5
  %60 = phi ptr [ %26, %5 ], [ %26, %31 ], [ %54, %39 ], [ %54, %35 ]
  %61 = phi ptr [ %16, %5 ], [ %16, %31 ], [ %44, %39 ], [ %44, %35 ]
  %62 = phi i64 [ %13, %5 ], [ %13, %31 ], [ %42, %39 ], [ %42, %35 ]
  %63 = phi ptr [ %17, %5 ], [ %17, %31 ], [ %45, %39 ], [ %45, %35 ]
  %64 = phi ptr [ %21, %5 ], [ %21, %31 ], [ %49, %39 ], [ %49, %35 ]
  %65 = getelementptr inbounds %struct.padname, ptr %60, i64 0, i32 8
  %66 = getelementptr inbounds %struct.xpvcv, ptr %63, i64 0, i32 13
  %67 = load i32, ptr %66, align 4, !tbaa !52
  %68 = tail call i32 @llvm.umax.i32(i32 %67, i32 1)
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds ptr, ptr %64, i64 %69
  %71 = load ptr, ptr %70, align 8, !tbaa !6
  %72 = getelementptr inbounds %struct.av, ptr %71, i64 0, i32 3
  %73 = load ptr, ptr %72, align 8, !tbaa !13
  %74 = getelementptr inbounds ptr, ptr %73, i64 %62
  %75 = load ptr, ptr @PL_parser, align 8, !tbaa !6
  %76 = icmp eq ptr %75, null
  br i1 %76, label %81, label %77

77:                                               ; preds = %59
  %78 = getelementptr inbounds %struct.yy_parser, ptr %75, i64 0, i32 44
  %79 = load i8, ptr %78, align 1, !tbaa !105
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %81, label %88

81:                                               ; preds = %77, %59
  %82 = load ptr, ptr %60, align 8, !tbaa !138
  %83 = getelementptr inbounds %struct.padname, ptr %60, i64 0, i32 7
  %84 = load i8, ptr %83, align 8, !tbaa !136
  %85 = zext i8 %84 to i64
  %86 = tail call ptr @Perl_newSVpvn_flags(ptr noundef %82, i64 noundef %85, i32 noundef 537395200) #29
  call fastcc void @S_move_proto_attr(ptr noundef nonnull %6, ptr noundef nonnull %7, ptr noundef %86)
  %87 = load ptr, ptr %6, align 8, !tbaa !6
  br label %88

88:                                               ; preds = %81, %77
  %89 = phi ptr [ %87, %81 ], [ %2, %77 ]
  %90 = icmp eq ptr %89, null
  br i1 %90, label %116, label %91

91:                                               ; preds = %88
  %92 = getelementptr inbounds %struct.svop, ptr %89, i64 0, i32 7
  %93 = load ptr, ptr %92, align 8, !tbaa !65
  %94 = getelementptr inbounds %struct.sv, ptr %93, i64 0, i32 2
  %95 = load i32, ptr %94, align 4, !tbaa !84
  %96 = and i32 %95, 2098176
  %97 = icmp eq i32 %96, 1024
  br i1 %97, label %98, label %104

98:                                               ; preds = %91
  %99 = load ptr, ptr %93, align 8, !tbaa !85
  %100 = getelementptr inbounds %struct.xpv, ptr %99, i64 0, i32 2
  %101 = load i64, ptr %100, align 8, !tbaa !86
  store i64 %101, ptr %8, align 8, !tbaa !88
  %102 = getelementptr inbounds %struct.sv, ptr %93, i64 0, i32 3
  %103 = load ptr, ptr %102, align 8, !tbaa !13
  br label %109

104:                                              ; preds = %91
  %105 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %93, ptr noundef nonnull %8, i32 noundef 34) #29
  %106 = load ptr, ptr %92, align 8, !tbaa !65
  %107 = getelementptr inbounds %struct.sv, ptr %106, i64 0, i32 2
  %108 = load i32, ptr %107, align 4, !tbaa !84
  br label %109

109:                                              ; preds = %104, %98
  %110 = phi i32 [ %95, %98 ], [ %108, %104 ]
  %111 = phi ptr [ %103, %98 ], [ %105, %104 ]
  %112 = and i32 %110, 536870912
  %113 = getelementptr inbounds %struct.op, ptr %89, i64 0, i32 4
  %114 = load i16, ptr %113, align 8
  %115 = or i16 %114, 2048
  store i16 %115, ptr %113, align 8
  call void @Perl_save_pushptr(ptr noundef nonnull %89, i32 noundef 9) #29
  br label %116

116:                                              ; preds = %88, %109
  %117 = phi ptr [ %111, %109 ], [ null, %88 ]
  %118 = phi i32 [ %112, %109 ], [ 0, %88 ]
  %119 = load ptr, ptr %7, align 8
  %120 = icmp eq ptr %119, null
  br i1 %120, label %125, label %121

121:                                              ; preds = %116
  %122 = getelementptr inbounds %struct.op, ptr %119, i64 0, i32 4
  %123 = load i16, ptr %122, align 8
  %124 = or i16 %123, 2048
  store i16 %124, ptr %122, align 8
  call void @Perl_save_pushptr(ptr noundef nonnull %119, i32 noundef 9) #29
  br label %125

125:                                              ; preds = %121, %116
  %126 = load ptr, ptr @PL_parser, align 8, !tbaa !6
  %127 = icmp eq ptr %126, null
  br i1 %127, label %143, label %128

128:                                              ; preds = %125
  %129 = getelementptr inbounds %struct.yy_parser, ptr %126, i64 0, i32 44
  %130 = load i8, ptr %129, align 1, !tbaa !105
  %131 = icmp eq i8 %130, 0
  br i1 %131, label %143, label %132

132:                                              ; preds = %128
  call void @Perl_op_free(ptr noundef %4)
  %133 = load ptr, ptr @PL_compcv, align 8, !tbaa !6
  %134 = icmp eq ptr %133, null
  br i1 %134, label %142, label %135

135:                                              ; preds = %132
  %136 = getelementptr inbounds %struct.sv, ptr %133, i64 0, i32 1
  %137 = load i32, ptr %136, align 8, !tbaa !42
  %138 = icmp ugt i32 %137, 1
  br i1 %138, label %139, label %141

139:                                              ; preds = %135
  %140 = add i32 %137, -1
  store i32 %140, ptr %136, align 8, !tbaa !42
  br label %142

141:                                              ; preds = %135
  call void @Perl_sv_free2(ptr noundef nonnull %133, i32 noundef %137) #29
  br label %142

142:                                              ; preds = %132, %139, %141
  store ptr null, ptr @PL_compcv, align 8, !tbaa !6
  br label %935

143:                                              ; preds = %128, %125
  %144 = load ptr, ptr %61, align 8, !tbaa !10
  %145 = getelementptr inbounds %struct.xpvcv, ptr %144, i64 0, i32 13
  %146 = load i32, ptr %145, align 4, !tbaa !52
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %155, label %148

148:                                              ; preds = %143
  %149 = load ptr, ptr %11, align 8, !tbaa !10
  %150 = getelementptr inbounds %struct.xpvcv, ptr %149, i64 0, i32 12
  %151 = load i32, ptr %150, align 4, !tbaa !14
  %152 = and i32 %151, 32
  %153 = icmp eq i32 %152, 0
  %154 = select i1 %153, ptr %74, ptr %10
  br label %228

155:                                              ; preds = %143
  %156 = load i8, ptr %65, align 1, !tbaa !153
  %157 = and i8 %156, 2
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %159, label %228

159:                                              ; preds = %155
  %160 = load ptr, ptr %74, align 8, !tbaa !6
  %161 = load ptr, ptr %160, align 8, !tbaa !10
  %162 = getelementptr inbounds %struct.xpvcv, ptr %161, i64 0, i32 12
  %163 = load i32, ptr %162, align 4, !tbaa !14
  %164 = and i32 %163, 32768
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %169, label %166

166:                                              ; preds = %159
  %167 = getelementptr inbounds %struct.xpvcv, ptr %161, i64 0, i32 7
  %168 = load ptr, ptr %167, align 8, !tbaa !13
  br label %225

169:                                              ; preds = %159
  %170 = load ptr, ptr %60, align 8, !tbaa !138
  %171 = getelementptr inbounds i8, ptr %170, i64 1
  %172 = getelementptr inbounds %struct.padname, ptr %60, i64 0, i32 7
  %173 = load i8, ptr %172, align 8, !tbaa !136
  %174 = zext i8 %173 to i64
  %175 = getelementptr inbounds i8, ptr %170, i64 %174
  %176 = zext i8 %173 to i32
  %177 = add nuw nsw i32 %176, 544173907
  %178 = icmp ugt i8 %173, 1
  br i1 %178, label %179, label %190

179:                                              ; preds = %169, %179
  %180 = phi i32 [ %188, %179 ], [ %177, %169 ]
  %181 = phi ptr [ %185, %179 ], [ %171, %169 ]
  %182 = mul i32 %180, 1025
  %183 = lshr i32 %182, 6
  %184 = xor i32 %183, %182
  %185 = getelementptr inbounds i8, ptr %181, i64 1
  %186 = load i8, ptr %181, align 1, !tbaa !13
  %187 = zext i8 %186 to i32
  %188 = add i32 %184, %187
  %189 = icmp ult ptr %185, %175
  br i1 %189, label %179, label %190, !llvm.loop !294

190:                                              ; preds = %179, %169
  %191 = phi i32 [ %177, %169 ], [ %188, %179 ]
  %192 = mul i32 %191, 1025
  %193 = lshr i32 %192, 6
  %194 = xor i32 %193, %192
  %195 = mul i32 %194, 1025
  %196 = add i32 %195, 73800
  %197 = lshr i32 %196, 6
  %198 = xor i32 %197, %196
  %199 = mul i32 %198, 1025
  %200 = add i32 %199, 113775
  %201 = lshr i32 %200, 6
  %202 = xor i32 %201, %200
  %203 = mul i32 %202, 1025
  %204 = add i32 %203, 118900
  %205 = lshr i32 %204, 6
  %206 = xor i32 %205, %204
  %207 = mul i32 %206, 1025
  %208 = add i32 %207, 32800
  %209 = lshr i32 %208, 6
  %210 = xor i32 %209, %208
  %211 = mul i32 %210, 9
  %212 = lshr i32 %211, 11
  %213 = xor i32 %212, %211
  %214 = mul i32 %213, 32769
  %215 = sub nsw i32 1, %176
  %216 = call ptr @Perl_share_hek(ptr noundef nonnull %171, i32 noundef %215, i32 noundef %214) #29
  %217 = load ptr, ptr %74, align 8, !tbaa !6
  %218 = load ptr, ptr %217, align 8, !tbaa !10
  %219 = getelementptr inbounds %struct.xpvcv, ptr %218, i64 0, i32 7
  store ptr %216, ptr %219, align 8, !tbaa !13
  %220 = load ptr, ptr %74, align 8, !tbaa !6
  %221 = load ptr, ptr %220, align 8, !tbaa !10
  %222 = getelementptr inbounds %struct.xpvcv, ptr %221, i64 0, i32 12
  %223 = load i32, ptr %222, align 4, !tbaa !14
  %224 = or i32 %223, 98304
  store i32 %224, ptr %222, align 4, !tbaa !14
  br label %225

225:                                              ; preds = %190, %166
  %226 = phi ptr [ %168, %166 ], [ %216, %190 ]
  %227 = getelementptr inbounds %struct.padname, ptr %60, i64 0, i32 2
  br label %228

228:                                              ; preds = %148, %155, %225
  %229 = phi ptr [ %226, %225 ], [ null, %155 ], [ null, %148 ]
  %230 = phi ptr [ %227, %225 ], [ %74, %155 ], [ %74, %148 ]
  %231 = phi ptr [ %227, %225 ], [ %74, %155 ], [ %154, %148 ]
  %232 = load ptr, ptr %230, align 8, !tbaa !13
  %233 = icmp eq ptr %4, null
  br i1 %233, label %234, label %236

234:                                              ; preds = %228
  %235 = icmp ne ptr %117, null
  br label %323

236:                                              ; preds = %228
  %237 = getelementptr inbounds %struct.op, ptr %4, i64 0, i32 4
  %238 = load i16, ptr %237, align 8
  %239 = and i16 %238, 511
  %240 = icmp eq i16 %239, 1
  br i1 %240, label %241, label %248

241:                                              ; preds = %236
  %242 = load ptr, ptr @PL_parser, align 8, !tbaa !6
  %243 = getelementptr inbounds %struct.yy_parser, ptr %242, i64 0, i32 41
  %244 = load i32, ptr %243, align 8, !tbaa !238
  call void @Perl_op_free(ptr noundef nonnull %4)
  %245 = call ptr @Perl_newSTATEOP(i32 noundef 0, ptr noundef null, ptr noundef null)
  %246 = load ptr, ptr @PL_parser, align 8, !tbaa !6
  %247 = getelementptr inbounds %struct.yy_parser, ptr %246, i64 0, i32 41
  store i32 %244, ptr %247, align 8, !tbaa !238
  br label %248

248:                                              ; preds = %241, %236
  %249 = phi ptr [ %245, %241 ], [ %4, %236 ]
  %250 = load ptr, ptr %11, align 8, !tbaa !10
  %251 = getelementptr inbounds %struct.xpvcv, ptr %250, i64 0, i32 12
  %252 = load i32, ptr %251, align 4, !tbaa !14
  %253 = and i32 %252, 2
  %254 = icmp eq i32 %253, 0
  br i1 %254, label %255, label %267

255:                                              ; preds = %248
  %256 = icmp eq ptr %232, null
  br i1 %256, label %271, label %257

257:                                              ; preds = %255
  %258 = load ptr, ptr %232, align 8, !tbaa !10
  %259 = getelementptr inbounds %struct.xpvcv, ptr %258, i64 0, i32 12
  %260 = load i32, ptr %259, align 4, !tbaa !14
  %261 = and i32 %260, 2
  %262 = icmp eq i32 %261, 0
  br i1 %262, label %271, label %263

263:                                              ; preds = %257
  %264 = getelementptr inbounds %struct.xpvcv, ptr %258, i64 0, i32 6
  %265 = load ptr, ptr %264, align 8, !tbaa !13
  %266 = icmp eq ptr %265, null
  br i1 %266, label %267, label %271

267:                                              ; preds = %263, %248
  %268 = call fastcc ptr @S_scalarseq(ptr noundef %249)
  %269 = call ptr @Perl_op_lvalue_flags(ptr noundef %268, i32 noundef 187, i32 noundef 0)
  %270 = call ptr @Perl_newUNOP(i32 noundef 187, i32 noundef 0, ptr noundef %269)
  br label %274

271:                                              ; preds = %263, %257, %255
  %272 = call fastcc ptr @S_scalarseq(ptr noundef %249)
  %273 = call ptr @Perl_newUNOP(i32 noundef 186, i32 noundef 0, ptr noundef %272)
  br label %274

274:                                              ; preds = %271, %267
  %275 = phi ptr [ %270, %267 ], [ %273, %271 ]
  %276 = load ptr, ptr %275, align 8, !tbaa !25
  %277 = icmp eq ptr %276, null
  br i1 %277, label %278, label %280

278:                                              ; preds = %274
  %279 = call ptr @Perl_op_linklist(ptr noundef nonnull %275)
  br label %280

280:                                              ; preds = %278, %274
  %281 = phi ptr [ %279, %278 ], [ %276, %274 ]
  store ptr null, ptr %275, align 8, !tbaa !25
  %282 = icmp eq ptr %117, null
  br i1 %282, label %323, label %283

283:                                              ; preds = %280
  %284 = load i8, ptr %117, align 1, !tbaa !13
  %285 = icmp ne i8 %284, 0
  %286 = icmp ne ptr %119, null
  %287 = or i1 %286, %285
  br i1 %287, label %323, label %288

288:                                              ; preds = %283
  %289 = load ptr, ptr %11, align 8, !tbaa !10
  %290 = getelementptr inbounds %struct.xpvcv, ptr %289, i64 0, i32 12
  %291 = load i32, ptr %290, align 4, !tbaa !14
  %292 = and i32 %291, 2
  %293 = icmp eq i32 %292, 0
  br i1 %293, label %294, label %323

294:                                              ; preds = %288
  %295 = icmp eq ptr %281, null
  br i1 %295, label %323, label %296

296:                                              ; preds = %294, %319
  %297 = phi ptr [ %320, %319 ], [ null, %294 ]
  %298 = phi ptr [ %321, %319 ], [ %281, %294 ]
  %299 = getelementptr inbounds %struct.op, ptr %298, i64 0, i32 4
  %300 = load i16, ptr %299, align 8
  %301 = freeze i16 %300
  %302 = and i16 %301, 511
  %303 = and i16 %301, 510
  %304 = icmp eq i16 %303, 192
  br i1 %304, label %319, label %305

305:                                              ; preds = %296
  switch i16 %302, label %306 [
    i16 3, label %319
    i16 0, label %319
    i16 194, label %319
    i16 186, label %323
  ]

306:                                              ; preds = %305
  %307 = icmp eq ptr %297, null
  br i1 %307, label %308, label %323

308:                                              ; preds = %306
  switch i16 %302, label %323 [
    i16 5, label %315
    i16 44, label %309
  ]

309:                                              ; preds = %308
  %310 = getelementptr inbounds %struct.op, ptr %298, i64 0, i32 6
  %311 = load i8, ptr %310, align 1, !tbaa !33
  %312 = icmp eq i8 %311, 0
  br i1 %312, label %313, label %323

313:                                              ; preds = %309
  %314 = call ptr @Perl_newSV(i64 noundef 0) #29
  call void @Perl_save_pushptr(ptr noundef %314, i32 noundef 11) #29
  br label %319

315:                                              ; preds = %308
  %316 = getelementptr inbounds %struct.svop, ptr %298, i64 0, i32 7
  %317 = load ptr, ptr %316, align 8, !tbaa !65
  %318 = icmp eq ptr %317, null
  br i1 %318, label %323, label %319

319:                                              ; preds = %315, %313, %305, %305, %305, %296
  %320 = phi ptr [ %297, %305 ], [ %314, %313 ], [ %317, %315 ], [ %297, %296 ], [ %297, %305 ], [ %297, %305 ]
  %321 = load ptr, ptr %298, align 8, !tbaa !25
  %322 = icmp eq ptr %321, null
  br i1 %322, label %323, label %296, !llvm.loop !295

323:                                              ; preds = %319, %315, %309, %308, %306, %305, %294, %234, %280, %283, %288
  %324 = phi i1 [ true, %288 ], [ true, %283 ], [ false, %280 ], [ %235, %234 ], [ true, %294 ], [ true, %305 ], [ true, %306 ], [ true, %308 ], [ true, %309 ], [ true, %315 ], [ true, %319 ]
  %325 = phi ptr [ %275, %288 ], [ %275, %283 ], [ %275, %280 ], [ null, %234 ], [ %275, %294 ], [ %275, %305 ], [ %275, %306 ], [ %275, %308 ], [ %275, %309 ], [ %275, %315 ], [ %275, %319 ]
  %326 = phi ptr [ %281, %288 ], [ %281, %283 ], [ %281, %280 ], [ null, %234 ], [ null, %294 ], [ %281, %305 ], [ %281, %306 ], [ %281, %308 ], [ %281, %309 ], [ %281, %315 ], [ %281, %319 ]
  %327 = phi ptr [ null, %288 ], [ null, %283 ], [ null, %280 ], [ null, %234 ], [ null, %294 ], [ %320, %319 ], [ null, %315 ], [ null, %309 ], [ null, %308 ], [ null, %306 ], [ %297, %305 ]
  store ptr %327, ptr %9, align 8, !tbaa !6
  %328 = icmp eq ptr %232, null
  br i1 %328, label %374, label %329

329:                                              ; preds = %323
  %330 = load ptr, ptr %232, align 8, !tbaa !10
  %331 = getelementptr inbounds %struct.xpvcv, ptr %330, i64 0, i32 6
  %332 = load ptr, ptr %331, align 8, !tbaa !13
  %333 = icmp eq ptr %332, null
  br i1 %333, label %334, label %346

334:                                              ; preds = %329
  %335 = getelementptr inbounds %struct.cv, ptr %232, i64 0, i32 2
  %336 = load i32, ptr %335, align 4, !tbaa !263
  %337 = and i32 %336, 1024
  %338 = icmp eq i32 %337, 0
  br i1 %338, label %355, label %339

339:                                              ; preds = %334
  %340 = load ptr, ptr %60, align 8, !tbaa !138
  %341 = getelementptr inbounds %struct.padname, ptr %60, i64 0, i32 7
  %342 = load i8, ptr %341, align 8, !tbaa !136
  %343 = zext i8 %342 to i64
  %344 = call ptr @Perl_newSVpvn_flags(ptr noundef %340, i64 noundef %343, i32 noundef 537395200) #29
  %345 = load i64, ptr %8, align 8, !tbaa !88
  call void @Perl_cv_ckproto_len_flags(ptr noundef nonnull %232, ptr noundef %344, ptr noundef %117, i64 noundef %345, i32 noundef %118)
  br label %355

346:                                              ; preds = %329
  %347 = load ptr, ptr %60, align 8, !tbaa !138
  %348 = getelementptr inbounds %struct.padname, ptr %60, i64 0, i32 7
  %349 = load i8, ptr %348, align 8, !tbaa !136
  %350 = zext i8 %349 to i64
  %351 = call ptr @Perl_newSVpvn_flags(ptr noundef %347, i64 noundef %350, i32 noundef 537395200) #29
  %352 = load i64, ptr %8, align 8, !tbaa !88
  call void @Perl_cv_ckproto_len_flags(ptr noundef nonnull %232, ptr noundef %351, ptr noundef %117, i64 noundef %352, i32 noundef %118)
  %353 = call fastcc zeroext i1 @S_already_defined(ptr noundef nonnull %232, ptr noundef %325, ptr noundef null, ptr noundef nonnull %60, ptr noundef nonnull %9)
  br i1 %353, label %369, label %354

354:                                              ; preds = %346
  br i1 %120, label %373, label %706

355:                                              ; preds = %339, %334
  %356 = load ptr, ptr %61, align 8, !tbaa !10
  %357 = getelementptr inbounds %struct.xpvcv, ptr %356, i64 0, i32 13
  %358 = load i32, ptr %357, align 4, !tbaa !52
  %359 = icmp eq i32 %358, 0
  br i1 %359, label %369, label %360

360:                                              ; preds = %355
  %361 = load ptr, ptr %11, align 8, !tbaa !10
  %362 = getelementptr inbounds %struct.xpvcv, ptr %361, i64 0, i32 12
  %363 = load i32, ptr %362, align 4, !tbaa !14
  %364 = and i32 %363, 32
  %365 = icmp eq i32 %364, 0
  %366 = lshr exact i32 %364, 5
  %367 = trunc i32 %366 to i8
  %368 = select i1 %365, ptr %232, ptr null
  br label %369

369:                                              ; preds = %346, %355, %360
  %370 = phi i8 [ %367, %360 ], [ 0, %346 ], [ 0, %355 ]
  %371 = phi ptr [ %368, %360 ], [ null, %346 ], [ %232, %355 ]
  %372 = load ptr, ptr %9, align 8, !tbaa !6
  br label %374

373:                                              ; preds = %354
  call void @Perl_save_pushptr(ptr noundef nonnull %11, i32 noundef 11) #29
  br label %935

374:                                              ; preds = %369, %323
  %375 = phi ptr [ %372, %369 ], [ %327, %323 ]
  %376 = phi i8 [ %370, %369 ], [ 0, %323 ]
  %377 = phi ptr [ %371, %369 ], [ null, %323 ]
  %378 = icmp eq ptr %375, null
  br i1 %378, label %429, label %379

379:                                              ; preds = %374
  %380 = getelementptr inbounds %struct.sv, ptr %375, i64 0, i32 1
  %381 = load <2 x i32>, ptr %380, align 8, !tbaa !52
  %382 = add <2 x i32> %381, <i32 1, i32 poison>
  %383 = or <2 x i32> %381, <i32 poison, i32 131072>
  %384 = shufflevector <2 x i32> %382, <2 x i32> %383, <2 x i32> <i32 0, i32 3>
  store <2 x i32> %384, ptr %380, align 8, !tbaa !52
  %385 = icmp eq ptr %377, null
  br i1 %385, label %387, label %386

386:                                              ; preds = %379
  call void @Perl_cv_forget_slab(ptr noundef nonnull %377) #29
  br label %406

387:                                              ; preds = %379
  %388 = call ptr @Perl_newSV_type(i32 noundef 13) #29
  %389 = load ptr, ptr @PL_curcop, align 8, !tbaa !6
  %390 = getelementptr inbounds %struct.cop, ptr %389, i64 0, i32 9
  %391 = load ptr, ptr %390, align 8, !tbaa !40
  %392 = icmp eq ptr %391, null
  br i1 %392, label %398, label %393

393:                                              ; preds = %387
  %394 = load ptr, ptr %391, align 8, !tbaa !169
  %395 = getelementptr inbounds %struct.xpvgv, ptr %394, i64 0, i32 4
  %396 = load ptr, ptr %395, align 8, !tbaa !13
  %397 = getelementptr inbounds %struct.hek, ptr %396, i64 0, i32 2, i64 2
  br label %398

398:                                              ; preds = %387, %393
  %399 = phi ptr [ %397, %393 ], [ null, %387 ]
  %400 = load ptr, ptr %388, align 8, !tbaa !10
  %401 = getelementptr inbounds %struct.xpvcv, ptr %400, i64 0, i32 8
  store ptr %399, ptr %401, align 8, !tbaa !265
  %402 = getelementptr inbounds %struct.xpvcv, ptr %400, i64 0, i32 12
  %403 = load i32, ptr %402, align 4, !tbaa !14
  %404 = and i32 %403, -4097
  store i32 %404, ptr %402, align 4, !tbaa !14
  %405 = load ptr, ptr @PL_curstash, align 8, !tbaa !6
  call void @Perl_cvstash_set(ptr noundef nonnull %388, ptr noundef %405) #29
  store ptr %388, ptr %231, align 8, !tbaa !6
  br label %406

406:                                              ; preds = %386, %398
  %407 = phi ptr [ %377, %386 ], [ %388, %398 ]
  call void @Perl_sv_setpvn(ptr noundef nonnull %407, ptr noundef nonnull @.str.19, i64 noundef 0) #29
  %408 = load ptr, ptr %9, align 8, !tbaa !6
  %409 = load ptr, ptr %407, align 8, !tbaa !10
  %410 = getelementptr inbounds %struct.xpvcv, ptr %409, i64 0, i32 5
  store ptr %408, ptr %410, align 8, !tbaa !13
  %411 = load ptr, ptr %407, align 8, !tbaa !10
  %412 = getelementptr inbounds %struct.xpvcv, ptr %411, i64 0, i32 6
  store ptr @const_sv_xsub, ptr %412, align 8, !tbaa !13
  %413 = load ptr, ptr %407, align 8, !tbaa !10
  %414 = getelementptr inbounds %struct.xpvcv, ptr %413, i64 0, i32 12
  %415 = load i32, ptr %414, align 4, !tbaa !14
  %416 = or i32 %415, 12
  store i32 %416, ptr %414, align 4, !tbaa !14
  %417 = load ptr, ptr %11, align 8, !tbaa !10
  %418 = getelementptr inbounds %struct.xpvcv, ptr %417, i64 0, i32 12
  %419 = load i32, ptr %418, align 4, !tbaa !14
  %420 = and i32 %419, 1
  %421 = or i32 %420, %416
  store i32 %421, ptr %414, align 4, !tbaa !14
  call void @Perl_op_free(ptr noundef %325)
  %422 = getelementptr inbounds %struct.sv, ptr %11, i64 0, i32 1
  %423 = load i32, ptr %422, align 8, !tbaa !42
  %424 = icmp ugt i32 %423, 1
  br i1 %424, label %425, label %427

425:                                              ; preds = %406
  %426 = add i32 %423, -1
  store i32 %426, ptr %422, align 8, !tbaa !42
  br label %428

427:                                              ; preds = %406
  call void @Perl_sv_free2(ptr noundef nonnull %11, i32 noundef %423) #29
  br label %428

428:                                              ; preds = %425, %427
  store ptr null, ptr @PL_compcv, align 8, !tbaa !6
  br label %531

429:                                              ; preds = %374
  %430 = load ptr, ptr %11, align 8, !tbaa !10
  %431 = getelementptr inbounds %struct.xpvcv, ptr %430, i64 0, i32 10
  %432 = load ptr, ptr %431, align 8, !tbaa !158
  %433 = icmp eq ptr %61, %432
  br i1 %433, label %434, label %451

434:                                              ; preds = %429
  %435 = load i8, ptr %65, align 1, !tbaa !153
  %436 = and i8 %435, 1
  %437 = icmp eq i8 %436, 0
  br i1 %437, label %438, label %451

438:                                              ; preds = %434
  %439 = getelementptr inbounds %struct.sv, ptr %61, i64 0, i32 1
  %440 = load i32, ptr %439, align 8, !tbaa !42
  %441 = icmp ugt i32 %440, 1
  br i1 %441, label %442, label %444

442:                                              ; preds = %438
  %443 = add i32 %440, -1
  store i32 %443, ptr %439, align 8, !tbaa !42
  br label %446

444:                                              ; preds = %438
  call void @Perl_sv_free2(ptr noundef nonnull %61, i32 noundef %440) #29
  %445 = load ptr, ptr %11, align 8, !tbaa !10
  br label %446

446:                                              ; preds = %442, %444
  %447 = phi ptr [ %430, %442 ], [ %445, %444 ]
  %448 = getelementptr inbounds %struct.xpvcv, ptr %447, i64 0, i32 12
  %449 = load i32, ptr %448, align 4, !tbaa !14
  %450 = or i32 %449, 16
  store i32 %450, ptr %448, align 4, !tbaa !14
  br label %451

451:                                              ; preds = %446, %434, %429
  %452 = phi ptr [ %447, %446 ], [ %430, %434 ], [ %430, %429 ]
  %453 = icmp eq ptr %377, null
  br i1 %453, label %530, label %454

454:                                              ; preds = %451
  br i1 %233, label %514, label %455

455:                                              ; preds = %454
  %456 = load ptr, ptr %377, align 8, !tbaa !10
  %457 = getelementptr inbounds %struct.xpvcv, ptr %456, i64 0, i32 12
  %458 = load i32, ptr %457, align 4, !tbaa !14
  %459 = and i32 %458, 163843
  %460 = getelementptr inbounds %struct.xpvcv, ptr %456, i64 0, i32 9
  %461 = getelementptr inbounds %struct.xpvcv, ptr %456, i64 0, i32 10
  %462 = and i32 %458, 2064
  %463 = getelementptr inbounds %struct.xpvcv, ptr %456, i64 0, i32 5
  %464 = load ptr, ptr %463, align 8, !tbaa !13
  %465 = getelementptr inbounds %struct.cv, ptr %377, i64 0, i32 2
  %466 = load i32, ptr %465, align 4, !tbaa !263
  %467 = and i32 %466, -17409
  %468 = getelementptr inbounds %struct.xpvcv, ptr %452, i64 0, i32 12
  %469 = load i32, ptr %468, align 4, !tbaa !14
  %470 = or i32 %469, %459
  store i32 %470, ptr %457, align 4, !tbaa !14
  %471 = getelementptr inbounds %struct.xpvcv, ptr %452, i64 0, i32 10
  %472 = load ptr, ptr %471, align 8, !tbaa !158
  %473 = getelementptr inbounds %struct.xpvcv, ptr %452, i64 0, i32 11
  %474 = load i32, ptr %473, align 8, !tbaa !264
  %475 = getelementptr inbounds %struct.xpvcv, ptr %456, i64 0, i32 11
  store i32 %474, ptr %475, align 8, !tbaa !264
  %476 = getelementptr inbounds %struct.xpvcv, ptr %452, i64 0, i32 9
  %477 = load <2 x ptr>, ptr %460, align 8, !tbaa !13
  store i32 %467, ptr %465, align 4, !tbaa !263
  store ptr %472, ptr %461, align 8, !tbaa !158
  %478 = load ptr, ptr %476, align 8, !tbaa !13
  store ptr %478, ptr %460, align 8, !tbaa !13
  %479 = load ptr, ptr %11, align 8, !tbaa !10
  %480 = getelementptr inbounds %struct.xpvcv, ptr %479, i64 0, i32 9
  store <2 x ptr> %477, ptr %480, align 8, !tbaa !13
  %481 = load ptr, ptr %11, align 8, !tbaa !10
  %482 = getelementptr inbounds %struct.xpvcv, ptr %481, i64 0, i32 5
  %483 = load ptr, ptr %482, align 8, !tbaa !13
  %484 = load ptr, ptr %377, align 8, !tbaa !10
  %485 = getelementptr inbounds %struct.xpvcv, ptr %484, i64 0, i32 5
  store ptr %483, ptr %485, align 8, !tbaa !13
  %486 = load ptr, ptr %11, align 8, !tbaa !10
  %487 = getelementptr inbounds %struct.xpvcv, ptr %486, i64 0, i32 5
  store ptr %464, ptr %487, align 8, !tbaa !13
  %488 = load ptr, ptr %11, align 8, !tbaa !10
  %489 = getelementptr inbounds %struct.xpvcv, ptr %488, i64 0, i32 12
  %490 = load i32, ptr %489, align 4, !tbaa !14
  %491 = and i32 %490, -2065
  %492 = or i32 %491, %462
  store i32 %492, ptr %489, align 4, !tbaa !14
  %493 = load ptr, ptr %377, align 8, !tbaa !10
  %494 = getelementptr inbounds %struct.xpvcv, ptr %493, i64 0, i32 8
  %495 = load ptr, ptr %494, align 8, !tbaa !265
  %496 = icmp eq ptr %495, null
  br i1 %496, label %504, label %497

497:                                              ; preds = %455
  %498 = getelementptr inbounds %struct.xpvcv, ptr %493, i64 0, i32 12
  %499 = load i32, ptr %498, align 4, !tbaa !14
  %500 = and i32 %499, 4096
  %501 = icmp eq i32 %500, 0
  br i1 %501, label %504, label %502

502:                                              ; preds = %497
  call void @Perl_safesysfree(ptr noundef nonnull %495) #29
  %503 = load ptr, ptr %377, align 8, !tbaa !10
  br label %504

504:                                              ; preds = %502, %497, %455
  %505 = phi ptr [ %503, %502 ], [ %493, %497 ], [ %493, %455 ]
  %506 = getelementptr inbounds %struct.xpvcv, ptr %505, i64 0, i32 9
  %507 = load ptr, ptr %506, align 8, !tbaa !13
  call void @Perl_pad_fixup_inner_anons(ptr noundef %507, ptr noundef nonnull %11, ptr noundef nonnull %377) #29
  %508 = load i32, ptr @PL_perldb, align 4, !tbaa !52
  %509 = and i32 %508, 8
  %510 = icmp eq i32 %509, 0
  br i1 %510, label %522, label %511

511:                                              ; preds = %504
  %512 = load i32, ptr @PL_sub_generation, align 4, !tbaa !52
  %513 = add i32 %512, 1
  store i32 %513, ptr @PL_sub_generation, align 4, !tbaa !52
  br label %522

514:                                              ; preds = %454
  %515 = getelementptr inbounds %struct.xpvcv, ptr %452, i64 0, i32 12
  %516 = load i32, ptr %515, align 4, !tbaa !14
  %517 = and i32 %516, 131075
  %518 = load ptr, ptr %377, align 8, !tbaa !10
  %519 = getelementptr inbounds %struct.xpvcv, ptr %518, i64 0, i32 12
  %520 = load i32, ptr %519, align 4, !tbaa !14
  %521 = or i32 %520, %517
  store i32 %521, ptr %519, align 4, !tbaa !14
  br label %522

522:                                              ; preds = %514, %511, %504
  %523 = getelementptr inbounds %struct.sv, ptr %11, i64 0, i32 1
  %524 = load i32, ptr %523, align 8, !tbaa !42
  %525 = icmp ugt i32 %524, 1
  br i1 %525, label %526, label %528

526:                                              ; preds = %522
  %527 = add i32 %524, -1
  store i32 %527, ptr %523, align 8, !tbaa !42
  br label %529

528:                                              ; preds = %522
  call void @Perl_sv_free2(ptr noundef nonnull %11, i32 noundef %524) #29
  br label %529

529:                                              ; preds = %526, %528
  store ptr %377, ptr @PL_compcv, align 8, !tbaa !6
  br label %531

530:                                              ; preds = %451
  store ptr %11, ptr %231, align 8, !tbaa !6
  br label %531

531:                                              ; preds = %529, %530, %428
  %532 = phi ptr [ %407, %428 ], [ %377, %529 ], [ %11, %530 ]
  %533 = load ptr, ptr %532, align 8, !tbaa !10
  %534 = getelementptr inbounds %struct.xpvcv, ptr %533, i64 0, i32 12
  %535 = load i32, ptr %534, align 4, !tbaa !14
  %536 = or i32 %535, 65536
  store i32 %536, ptr %534, align 4, !tbaa !14
  %537 = and i32 %535, 32768
  %538 = icmp eq i32 %537, 0
  br i1 %538, label %543, label %539

539:                                              ; preds = %531
  %540 = getelementptr inbounds %struct.xpvcv, ptr %533, i64 0, i32 7
  %541 = load ptr, ptr %540, align 8, !tbaa !13
  %542 = icmp eq ptr %541, null
  br i1 %542, label %543, label %617

543:                                              ; preds = %531, %539
  %544 = icmp eq ptr %229, null
  br i1 %544, label %549, label %545

545:                                              ; preds = %543
  %546 = getelementptr inbounds i8, ptr %229, i64 -8
  %547 = load i64, ptr %546, align 8, !tbaa !13
  %548 = add i64 %547, 1
  store i64 %548, ptr %546, align 8, !tbaa !13
  br label %597

549:                                              ; preds = %543
  %550 = load ptr, ptr %60, align 8, !tbaa !138
  %551 = getelementptr inbounds i8, ptr %550, i64 1
  %552 = getelementptr inbounds %struct.padname, ptr %60, i64 0, i32 7
  %553 = load i8, ptr %552, align 8, !tbaa !136
  %554 = zext i8 %553 to i64
  %555 = getelementptr inbounds i8, ptr %550, i64 %554
  %556 = zext i8 %553 to i32
  %557 = add nuw nsw i32 %556, 544173907
  %558 = icmp ugt i8 %553, 1
  br i1 %558, label %559, label %570

559:                                              ; preds = %549, %559
  %560 = phi i32 [ %568, %559 ], [ %557, %549 ]
  %561 = phi ptr [ %565, %559 ], [ %551, %549 ]
  %562 = mul i32 %560, 1025
  %563 = lshr i32 %562, 6
  %564 = xor i32 %563, %562
  %565 = getelementptr inbounds i8, ptr %561, i64 1
  %566 = load i8, ptr %561, align 1, !tbaa !13
  %567 = zext i8 %566 to i32
  %568 = add i32 %564, %567
  %569 = icmp ult ptr %565, %555
  br i1 %569, label %559, label %570, !llvm.loop !294

570:                                              ; preds = %559, %549
  %571 = phi i32 [ %557, %549 ], [ %568, %559 ]
  %572 = mul i32 %571, 1025
  %573 = lshr i32 %572, 6
  %574 = xor i32 %573, %572
  %575 = mul i32 %574, 1025
  %576 = add i32 %575, 73800
  %577 = lshr i32 %576, 6
  %578 = xor i32 %577, %576
  %579 = mul i32 %578, 1025
  %580 = add i32 %579, 113775
  %581 = lshr i32 %580, 6
  %582 = xor i32 %581, %580
  %583 = mul i32 %582, 1025
  %584 = add i32 %583, 118900
  %585 = lshr i32 %584, 6
  %586 = xor i32 %585, %584
  %587 = mul i32 %586, 1025
  %588 = add i32 %587, 32800
  %589 = lshr i32 %588, 6
  %590 = xor i32 %589, %588
  %591 = mul i32 %590, 9
  %592 = lshr i32 %591, 11
  %593 = xor i32 %592, %591
  %594 = mul i32 %593, 32769
  %595 = sub nsw i32 1, %556
  %596 = call ptr @Perl_share_hek(ptr noundef nonnull %551, i32 noundef %595, i32 noundef %594) #29
  br label %597

597:                                              ; preds = %570, %545
  %598 = phi ptr [ %229, %545 ], [ %596, %570 ]
  %599 = load ptr, ptr %532, align 8, !tbaa !10
  %600 = getelementptr inbounds %struct.xpvcv, ptr %599, i64 0, i32 12
  %601 = load i32, ptr %600, align 4, !tbaa !14
  %602 = and i32 %601, 32768
  %603 = icmp eq i32 %602, 0
  br i1 %603, label %610, label %604

604:                                              ; preds = %597
  %605 = getelementptr inbounds %struct.xpvcv, ptr %599, i64 0, i32 7
  %606 = load ptr, ptr %605, align 8, !tbaa !13
  %607 = icmp eq ptr %606, null
  br i1 %607, label %610, label %608

608:                                              ; preds = %604
  call void @Perl_unshare_hek(ptr noundef nonnull %606) #29
  %609 = load ptr, ptr %532, align 8, !tbaa !10
  br label %610

610:                                              ; preds = %597, %604, %608
  %611 = phi ptr [ %599, %597 ], [ %599, %604 ], [ %609, %608 ]
  %612 = getelementptr inbounds %struct.xpvcv, ptr %611, i64 0, i32 7
  store ptr %598, ptr %612, align 8, !tbaa !13
  %613 = load ptr, ptr %532, align 8, !tbaa !10
  %614 = getelementptr inbounds %struct.xpvcv, ptr %613, i64 0, i32 12
  %615 = load i32, ptr %614, align 4, !tbaa !14
  %616 = or i32 %615, 32768
  store i32 %616, ptr %614, align 4, !tbaa !14
  br label %617

617:                                              ; preds = %610, %539
  %618 = phi i32 [ %616, %610 ], [ %536, %539 ]
  %619 = phi ptr [ %613, %610 ], [ %533, %539 ]
  %620 = load ptr, ptr %9, align 8, !tbaa !6
  %621 = icmp eq ptr %620, null
  br i1 %621, label %622, label %853

622:                                              ; preds = %617
  %623 = load ptr, ptr @PL_curcop, align 8, !tbaa !6
  %624 = getelementptr inbounds %struct.cop, ptr %623, i64 0, i32 9
  %625 = load ptr, ptr %624, align 8, !tbaa !40
  %626 = icmp eq ptr %625, null
  br i1 %626, label %632, label %627

627:                                              ; preds = %622
  %628 = load ptr, ptr %625, align 8, !tbaa !169
  %629 = getelementptr inbounds %struct.xpvgv, ptr %628, i64 0, i32 4
  %630 = load ptr, ptr %629, align 8, !tbaa !13
  %631 = getelementptr inbounds %struct.hek, ptr %630, i64 0, i32 2, i64 2
  br label %632

632:                                              ; preds = %622, %627
  %633 = phi ptr [ %631, %627 ], [ null, %622 ]
  %634 = getelementptr inbounds %struct.xpvcv, ptr %619, i64 0, i32 8
  store ptr %633, ptr %634, align 8, !tbaa !265
  %635 = getelementptr inbounds %struct.xpvcv, ptr %619, i64 0, i32 12
  %636 = and i32 %618, -4097
  store i32 %636, ptr %635, align 4, !tbaa !14
  %637 = load ptr, ptr @PL_curstash, align 8, !tbaa !6
  call void @Perl_cvstash_set(ptr noundef nonnull %532, ptr noundef %637) #29
  br i1 %324, label %638, label %645

638:                                              ; preds = %632
  %639 = load i64, ptr %8, align 8, !tbaa !88
  call void @Perl_sv_setpvn(ptr noundef nonnull %532, ptr noundef nonnull %117, i64 noundef %639) #29
  %640 = icmp eq i32 %118, 0
  br i1 %640, label %645, label %641

641:                                              ; preds = %638
  %642 = getelementptr inbounds %struct.sv, ptr %532, i64 0, i32 2
  %643 = load i32, ptr %642, align 4, !tbaa !84
  %644 = or i32 %643, 536870912
  store i32 %644, ptr %642, align 4, !tbaa !84
  br label %645

645:                                              ; preds = %638, %641, %632
  br i1 %233, label %703, label %646

646:                                              ; preds = %645
  %647 = load i32, ptr @PL_breakable_sub_gen, align 4, !tbaa !52
  %648 = add i32 %647, 1
  store i32 %648, ptr @PL_breakable_sub_gen, align 4, !tbaa !52
  %649 = load ptr, ptr %532, align 8, !tbaa !10
  %650 = getelementptr inbounds %struct.xpvcv, ptr %649, i64 0, i32 6
  store ptr %325, ptr %650, align 8, !tbaa !13
  %651 = load ptr, ptr %532, align 8, !tbaa !10
  %652 = getelementptr inbounds %struct.xpvcv, ptr %651, i64 0, i32 6
  %653 = load ptr, ptr %652, align 8, !tbaa !13
  %654 = getelementptr inbounds %struct.op, ptr %653, i64 0, i32 6
  %655 = load i8, ptr %654, align 1, !tbaa !33
  %656 = or i8 %655, 64
  store i8 %656, ptr %654, align 1, !tbaa !33
  %657 = load ptr, ptr %652, align 8, !tbaa !13
  %658 = getelementptr inbounds %struct.op, ptr %657, i64 0, i32 3
  store i64 1, ptr %658, align 8, !tbaa !34
  %659 = getelementptr inbounds %struct.xpvcv, ptr %651, i64 0, i32 12
  %660 = load i32, ptr %659, align 4, !tbaa !14
  %661 = and i32 %660, -2049
  store i32 %661, ptr %659, align 4, !tbaa !14
  %662 = getelementptr inbounds %struct.xpvcv, ptr %651, i64 0, i32 5
  %663 = load ptr, ptr %662, align 8, !tbaa !13
  %664 = getelementptr inbounds %struct.opslab, ptr %663, i64 0, i32 3
  %665 = load i64, ptr %664, align 8, !tbaa !21
  %666 = icmp eq i64 %665, 1
  br i1 %666, label %667, label %672

667:                                              ; preds = %646, %667
  %668 = phi ptr [ %670, %667 ], [ %663, %646 ]
  %669 = getelementptr inbounds %struct.opslab, ptr %668, i64 0, i32 1
  %670 = load ptr, ptr %669, align 8, !tbaa !26
  call void @free(ptr noundef nonnull %668) #29
  %671 = icmp eq ptr %670, null
  br i1 %671, label %674, label %667, !llvm.loop !30

672:                                              ; preds = %646
  %673 = add i64 %665, -1
  store i64 %673, ptr %664, align 8, !tbaa !21
  br label %676

674:                                              ; preds = %667
  %675 = load ptr, ptr %532, align 8, !tbaa !10
  br label %676

676:                                              ; preds = %674, %672
  %677 = phi ptr [ %675, %674 ], [ %651, %672 ]
  %678 = getelementptr inbounds %struct.xpvcv, ptr %677, i64 0, i32 5
  store ptr %326, ptr %678, align 8, !tbaa !13
  %679 = load ptr, ptr @PL_peepp, align 8, !tbaa !6
  call void %679(ptr noundef %326) #29
  %680 = load ptr, ptr %532, align 8, !tbaa !10
  %681 = getelementptr inbounds %struct.xpvcv, ptr %680, i64 0, i32 6
  %682 = load ptr, ptr %681, align 8, !tbaa !13
  call void @Perl_push_scope() #29
  call void @Perl_save_vptr(ptr noundef nonnull @PL_curcop) #29
  call fastcc void @S_finalize_op(ptr noundef %682)
  call void @Perl_pop_scope() #29
  %683 = load ptr, ptr %532, align 8, !tbaa !10
  %684 = getelementptr inbounds %struct.xpvcv, ptr %683, i64 0, i32 5
  %685 = load ptr, ptr %684, align 8, !tbaa !6
  %686 = icmp eq ptr %685, null
  br i1 %686, label %697, label %687

687:                                              ; preds = %676, %692
  %688 = phi ptr [ %693, %692 ], [ %685, %676 ]
  %689 = getelementptr inbounds %struct.op, ptr %688, i64 0, i32 4
  %690 = load i16, ptr %689, align 8
  %691 = and i16 %690, 511
  switch i16 %691, label %695 [
    i16 0, label %692
    i16 198, label %692
    i16 2, label %692
    i16 192, label %692
  ]

692:                                              ; preds = %687, %687, %687, %687
  %693 = load ptr, ptr %688, align 8, !tbaa !25
  store ptr %693, ptr %684, align 8, !tbaa !6
  %694 = icmp eq ptr %693, null
  br i1 %694, label %695, label %687, !llvm.loop !122

695:                                              ; preds = %692, %687
  %696 = load ptr, ptr %532, align 8, !tbaa !10
  br label %697

697:                                              ; preds = %695, %676
  %698 = phi ptr [ %696, %695 ], [ %683, %676 ]
  %699 = getelementptr inbounds %struct.xpvcv, ptr %698, i64 0, i32 12
  %700 = load i32, ptr %699, align 4, !tbaa !14
  %701 = lshr i32 %700, 5
  %702 = and i32 %701, 1
  call void @Perl_pad_tidy(i32 noundef %702) #29
  br label %703

703:                                              ; preds = %645, %697
  %704 = load ptr, ptr %7, align 8, !tbaa !6
  %705 = icmp eq ptr %704, null
  br i1 %705, label %711, label %706

706:                                              ; preds = %354, %703
  %707 = phi ptr [ %532, %703 ], [ %232, %354 ]
  %708 = phi i8 [ %376, %703 ], [ 0, %354 ]
  %709 = phi ptr [ %704, %703 ], [ %119, %354 ]
  %710 = load ptr, ptr @PL_curstash, align 8, !tbaa !6
  call fastcc void @S_apply_attrs(ptr noundef %710, ptr noundef nonnull %707, ptr noundef nonnull %709)
  br label %711

711:                                              ; preds = %706, %703
  %712 = phi ptr [ %707, %706 ], [ %532, %703 ]
  %713 = phi i8 [ %708, %706 ], [ %376, %703 ]
  br i1 %233, label %853, label %714

714:                                              ; preds = %711
  %715 = load i32, ptr @PL_perldb, align 4, !tbaa !52
  %716 = and i32 %715, 16
  %717 = icmp eq i32 %716, 0
  br i1 %717, label %853, label %718

718:                                              ; preds = %714
  %719 = load ptr, ptr @PL_curstash, align 8, !tbaa !6
  %720 = load ptr, ptr @PL_debstash, align 8, !tbaa !6
  %721 = icmp eq ptr %719, %720
  br i1 %721, label %853, label %722

722:                                              ; preds = %718
  %723 = call ptr @Perl_sv_newmortal() #29
  %724 = call ptr @Perl_gv_fetchpvn_flags(ptr noundef nonnull @.str.58, i64 noundef 13, i32 noundef 2, i32 noundef 12) #29
  %725 = load ptr, ptr @PL_curcop, align 8, !tbaa !6
  %726 = getelementptr inbounds %struct.cop, ptr %725, i64 0, i32 9
  %727 = load ptr, ptr %726, align 8, !tbaa !40
  %728 = icmp eq ptr %727, null
  br i1 %728, label %734, label %729

729:                                              ; preds = %722
  %730 = load ptr, ptr %727, align 8, !tbaa !169
  %731 = getelementptr inbounds %struct.xpvgv, ptr %730, i64 0, i32 4
  %732 = load ptr, ptr %731, align 8, !tbaa !13
  %733 = getelementptr inbounds %struct.hek, ptr %732, i64 0, i32 2, i64 2
  br label %734

734:                                              ; preds = %722, %729
  %735 = phi ptr [ %733, %729 ], [ null, %722 ]
  %736 = load i32, ptr @PL_subline, align 4, !tbaa !52
  %737 = sext i32 %736 to i64
  %738 = getelementptr inbounds %struct.cop, ptr %725, i64 0, i32 7
  %739 = load i32, ptr %738, align 4, !tbaa !146
  %740 = zext i32 %739 to i64
  %741 = call ptr (ptr, ...) @Perl_newSVpvf(ptr noundef nonnull @.str.103, ptr noundef %735, i64 noundef %737, i64 noundef %740) #29
  %742 = load ptr, ptr @PL_curstash, align 8, !tbaa !6
  %743 = getelementptr inbounds %struct.hv, ptr %742, i64 0, i32 2
  %744 = load i32, ptr %743, align 4, !tbaa !56
  %745 = and i32 %744, 33554432
  %746 = icmp eq i32 %745, 0
  br i1 %746, label %766, label %747

747:                                              ; preds = %734
  %748 = getelementptr inbounds %struct.hv, ptr %742, i64 0, i32 3
  %749 = load ptr, ptr %748, align 8, !tbaa !13
  %750 = load ptr, ptr %742, align 8, !tbaa !139
  %751 = getelementptr inbounds %struct.xpvhv, ptr %750, i64 0, i32 3
  %752 = load i64, ptr %751, align 8, !tbaa !140
  %753 = add i64 %752, 1
  %754 = getelementptr inbounds ptr, ptr %749, i64 %753
  %755 = load ptr, ptr %754, align 8, !tbaa !13
  %756 = icmp eq ptr %755, null
  br i1 %756, label %766, label %757

757:                                              ; preds = %747
  %758 = getelementptr inbounds %struct.xpvhv_aux, ptr %754, i64 0, i32 4
  %759 = load i32, ptr %758, align 4, !tbaa !142
  %760 = icmp eq i32 %759, 0
  br i1 %760, label %764, label %761

761:                                              ; preds = %757
  %762 = load ptr, ptr %755, align 8, !tbaa !6
  %763 = icmp eq ptr %762, null
  br i1 %763, label %766, label %764

764:                                              ; preds = %761, %757
  %765 = phi ptr [ %755, %757 ], [ %762, %761 ]
  call void @Perl_sv_sethek(ptr noundef %723, ptr noundef nonnull %765) #29
  call void @Perl_sv_catpvn_flags(ptr noundef %723, ptr noundef nonnull @.str.93, i64 noundef 2, i32 noundef 2) #29
  br label %767

766:                                              ; preds = %734, %747, %761
  call void @Perl_sv_setpvn(ptr noundef %723, ptr noundef nonnull @.str.104, i64 noundef 10) #29
  br label %767

767:                                              ; preds = %766, %764
  %768 = load ptr, ptr %60, align 8, !tbaa !138
  %769 = getelementptr inbounds i8, ptr %768, i64 1
  %770 = getelementptr inbounds %struct.padname, ptr %60, i64 0, i32 7
  %771 = load i8, ptr %770, align 8, !tbaa !136
  %772 = zext i8 %771 to i64
  %773 = add nsw i64 %772, -1
  call void @Perl_sv_catpvn_flags(ptr noundef %723, ptr noundef nonnull %769, i64 noundef %773, i32 noundef 32768) #29
  %774 = load ptr, ptr @PL_DBsub, align 8, !tbaa !6
  %775 = getelementptr inbounds %struct.gv, ptr %774, i64 0, i32 3
  %776 = load ptr, ptr %775, align 8, !tbaa !13
  %777 = getelementptr inbounds %struct.gp, ptr %776, i64 0, i32 5
  %778 = load ptr, ptr %777, align 8, !tbaa !134
  %779 = getelementptr inbounds %struct.sv, ptr %723, i64 0, i32 3
  %780 = load ptr, ptr %779, align 8, !tbaa !13
  %781 = getelementptr inbounds %struct.sv, ptr %723, i64 0, i32 2
  %782 = load i32, ptr %781, align 4, !tbaa !84
  %783 = and i32 %782, 536870912
  %784 = icmp eq i32 %783, 0
  %785 = load ptr, ptr %723, align 8, !tbaa !85
  %786 = getelementptr inbounds %struct.xpv, ptr %785, i64 0, i32 2
  %787 = load i64, ptr %786, align 8, !tbaa !86
  %788 = trunc i64 %787 to i32
  %789 = sub nsw i32 0, %788
  %790 = select i1 %784, i32 %788, i32 %789
  %791 = call ptr @Perl_hv_common_key_len(ptr noundef %778, ptr noundef %780, i32 noundef %790, i32 noundef 36, ptr noundef %741, i32 noundef 0) #29
  %792 = getelementptr inbounds %struct.gv, ptr %724, i64 0, i32 3
  %793 = load ptr, ptr %792, align 8, !tbaa !13
  %794 = getelementptr inbounds %struct.gp, ptr %793, i64 0, i32 5
  %795 = load ptr, ptr %794, align 8, !tbaa !134
  %796 = icmp eq ptr %795, null
  br i1 %796, label %797, label %803

797:                                              ; preds = %767
  %798 = call ptr @Perl_gv_add_by_type(ptr noundef nonnull %724, i32 noundef 12) #29
  %799 = getelementptr inbounds %struct.gv, ptr %798, i64 0, i32 3
  %800 = load ptr, ptr %799, align 8, !tbaa !13
  %801 = getelementptr inbounds %struct.gp, ptr %800, i64 0, i32 5
  %802 = load ptr, ptr %801, align 8, !tbaa !134
  br label %803

803:                                              ; preds = %767, %797
  %804 = phi ptr [ %802, %797 ], [ %795, %767 ]
  %805 = load ptr, ptr %804, align 8, !tbaa !139
  %806 = getelementptr inbounds %struct.xpvhv, ptr %805, i64 0, i32 2
  %807 = load i64, ptr %806, align 8, !tbaa !267
  %808 = icmp eq i64 %807, 0
  br i1 %808, label %853, label %809

809:                                              ; preds = %803
  %810 = load ptr, ptr %779, align 8, !tbaa !13
  %811 = load i32, ptr %781, align 4, !tbaa !84
  %812 = and i32 %811, 536870912
  %813 = icmp eq i32 %812, 0
  %814 = load ptr, ptr %723, align 8, !tbaa !85
  %815 = getelementptr inbounds %struct.xpv, ptr %814, i64 0, i32 2
  %816 = load i64, ptr %815, align 8, !tbaa !86
  %817 = trunc i64 %816 to i32
  %818 = sub nsw i32 0, %817
  %819 = select i1 %813, i32 %817, i32 %818
  %820 = call ptr @Perl_hv_common_key_len(ptr noundef nonnull %804, ptr noundef %810, i32 noundef %819, i32 noundef 8, ptr noundef null, i32 noundef 0) #29
  %821 = icmp eq ptr %820, null
  br i1 %821, label %853, label %822

822:                                              ; preds = %809
  %823 = load ptr, ptr %792, align 8, !tbaa !13
  %824 = getelementptr inbounds %struct.gp, ptr %823, i64 0, i32 2
  %825 = load ptr, ptr %824, align 8, !tbaa !147
  %826 = icmp eq ptr %825, null
  br i1 %826, label %853, label %827

827:                                              ; preds = %822
  %828 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !6
  %829 = load ptr, ptr @PL_markstack_ptr, align 8, !tbaa !6
  %830 = getelementptr inbounds i32, ptr %829, i64 1
  store ptr %830, ptr @PL_markstack_ptr, align 8, !tbaa !6
  %831 = load ptr, ptr @PL_markstack_max, align 8, !tbaa !6
  %832 = icmp eq ptr %830, %831
  br i1 %832, label %833, label %835

833:                                              ; preds = %827
  %834 = call ptr @Perl_markstack_grow() #29
  br label %835

835:                                              ; preds = %827, %833
  %836 = phi ptr [ %834, %833 ], [ %830, %827 ]
  %837 = load ptr, ptr @PL_stack_base, align 8, !tbaa !6
  %838 = ptrtoint ptr %828 to i64
  %839 = ptrtoint ptr %837 to i64
  %840 = sub i64 %838, %839
  %841 = lshr exact i64 %840, 3
  %842 = trunc i64 %841 to i32
  store i32 %842, ptr %836, align 4, !tbaa !52
  %843 = load ptr, ptr @PL_stack_max, align 8, !tbaa !6
  %844 = ptrtoint ptr %843 to i64
  %845 = sub i64 %844, %838
  %846 = icmp slt i64 %845, 8
  br i1 %846, label %847, label %849

847:                                              ; preds = %835
  %848 = call ptr @Perl_stack_grow(ptr noundef %828, ptr noundef %828, i64 noundef 1) #29
  br label %849

849:                                              ; preds = %835, %847
  %850 = phi ptr [ %848, %847 ], [ %828, %835 ]
  %851 = getelementptr inbounds ptr, ptr %850, i64 1
  store ptr %723, ptr %851, align 8, !tbaa !6
  store ptr %851, ptr @PL_stack_sp, align 8, !tbaa !6
  %852 = call i32 @Perl_call_sv(ptr noundef nonnull %825, i32 noundef 4) #29
  br label %853

853:                                              ; preds = %803, %809, %849, %822, %711, %718, %714, %617
  %854 = phi i8 [ %713, %718 ], [ %713, %714 ], [ %713, %711 ], [ %376, %617 ], [ %713, %822 ], [ %713, %849 ], [ %713, %809 ], [ %713, %803 ]
  %855 = phi ptr [ %712, %718 ], [ %712, %714 ], [ %712, %711 ], [ %532, %617 ], [ %712, %822 ], [ %712, %849 ], [ %712, %809 ], [ %712, %803 ]
  %856 = load ptr, ptr %10, align 8, !tbaa !6
  %857 = icmp eq ptr %856, null
  br i1 %857, label %858, label %860

858:                                              ; preds = %853
  %859 = and i8 %854, 1
  br label %890

860:                                              ; preds = %853
  %861 = load ptr, ptr %61, align 8, !tbaa !10
  %862 = getelementptr inbounds %struct.xpvcv, ptr %861, i64 0, i32 9
  %863 = load ptr, ptr %862, align 8, !tbaa !13
  %864 = getelementptr inbounds %struct.padlist, ptr %863, i64 0, i32 1
  %865 = load ptr, ptr %864, align 8, !tbaa !159
  %866 = getelementptr inbounds %struct.xpvcv, ptr %861, i64 0, i32 13
  %867 = load i32, ptr %866, align 4, !tbaa !52
  %868 = sext i32 %867 to i64
  %869 = getelementptr inbounds ptr, ptr %865, i64 %868
  %870 = load ptr, ptr %869, align 8, !tbaa !6
  %871 = getelementptr inbounds %struct.av, ptr %870, i64 0, i32 3
  %872 = load ptr, ptr %871, align 8, !tbaa !13
  %873 = getelementptr inbounds ptr, ptr %872, i64 %62
  %874 = and i8 %854, 1
  %875 = icmp eq i8 %874, 0
  br i1 %875, label %879, label %876

876:                                              ; preds = %860
  %877 = load ptr, ptr %873, align 8, !tbaa !6
  %878 = call ptr @Perl_cv_clone_into(ptr noundef nonnull %856, ptr noundef %877) #29
  br label %881

879:                                              ; preds = %860
  %880 = call ptr @Perl_cv_clone(ptr noundef nonnull %856) #29
  store ptr %880, ptr %873, align 8, !tbaa !6
  br label %881

881:                                              ; preds = %879, %876
  %882 = getelementptr inbounds %struct.sv, ptr %856, i64 0, i32 1
  %883 = load i32, ptr %882, align 8, !tbaa !42
  %884 = icmp ugt i32 %883, 1
  br i1 %884, label %885, label %887

885:                                              ; preds = %881
  %886 = add i32 %883, -1
  store i32 %886, ptr %882, align 8, !tbaa !42
  br label %888

887:                                              ; preds = %881
  call void @Perl_sv_free2(ptr noundef nonnull %856, i32 noundef %883) #29
  br label %888

888:                                              ; preds = %885, %887
  %889 = load ptr, ptr %873, align 8, !tbaa !6
  br label %890

890:                                              ; preds = %858, %888
  %891 = phi i8 [ %859, %858 ], [ %874, %888 ]
  %892 = phi ptr [ %855, %858 ], [ %889, %888 ]
  %893 = load ptr, ptr %61, align 8, !tbaa !10
  %894 = getelementptr inbounds %struct.xpvcv, ptr %893, i64 0, i32 13
  %895 = load i32, ptr %894, align 4, !tbaa !52
  %896 = icmp ne i32 %895, 0
  %897 = icmp eq i8 %891, 0
  %898 = and i1 %897, %896
  br i1 %898, label %899, label %935

899:                                              ; preds = %890
  %900 = load i8, ptr %65, align 1, !tbaa !153
  %901 = and i8 %900, 2
  %902 = icmp eq i8 %901, 0
  br i1 %902, label %935, label %903

903:                                              ; preds = %899
  %904 = sext i32 %895 to i64
  %905 = add nsw i64 %904, -1
  %906 = icmp eq i64 %905, 0
  br i1 %906, label %935, label %907

907:                                              ; preds = %903
  %908 = getelementptr inbounds %struct.cv, ptr %892, i64 0, i32 1
  br label %909

909:                                              ; preds = %907, %932
  %910 = phi i64 [ %905, %907 ], [ %933, %932 ]
  %911 = load ptr, ptr %61, align 8, !tbaa !10
  %912 = getelementptr inbounds %struct.xpvcv, ptr %911, i64 0, i32 9
  %913 = load ptr, ptr %912, align 8, !tbaa !13
  %914 = getelementptr inbounds %struct.padlist, ptr %913, i64 0, i32 1
  %915 = load ptr, ptr %914, align 8, !tbaa !159
  %916 = getelementptr inbounds ptr, ptr %915, i64 %910
  %917 = load ptr, ptr %916, align 8, !tbaa !6
  %918 = getelementptr inbounds %struct.av, ptr %917, i64 0, i32 3
  %919 = load ptr, ptr %918, align 8, !tbaa !13
  %920 = getelementptr inbounds ptr, ptr %919, i64 %62
  %921 = load ptr, ptr %920, align 8, !tbaa !6
  %922 = load i32, ptr %908, align 8, !tbaa !209
  %923 = add i32 %922, 1
  store i32 %923, ptr %908, align 8, !tbaa !209
  store ptr %892, ptr %920, align 8, !tbaa !6
  %924 = icmp eq ptr %921, null
  br i1 %924, label %932, label %925

925:                                              ; preds = %909
  %926 = getelementptr inbounds %struct.sv, ptr %921, i64 0, i32 1
  %927 = load i32, ptr %926, align 8, !tbaa !42
  %928 = icmp ugt i32 %927, 1
  br i1 %928, label %929, label %931

929:                                              ; preds = %925
  %930 = add i32 %927, -1
  store i32 %930, ptr %926, align 8, !tbaa !42
  br label %932

931:                                              ; preds = %925
  call void @Perl_sv_free2(ptr noundef nonnull %921, i32 noundef %927) #29
  br label %932

932:                                              ; preds = %909, %929, %931
  %933 = add i64 %910, -1
  %934 = icmp eq i64 %933, 0
  br i1 %934, label %935, label %909, !llvm.loop !296

935:                                              ; preds = %932, %903, %373, %890, %899, %142
  %936 = phi ptr [ null, %142 ], [ %232, %373 ], [ %892, %899 ], [ %892, %890 ], [ %892, %903 ], [ %892, %932 ]
  %937 = load ptr, ptr @PL_parser, align 8, !tbaa !6
  %938 = icmp eq ptr %937, null
  br i1 %938, label %941, label %939

939:                                              ; preds = %935
  %940 = getelementptr inbounds %struct.yy_parser, ptr %937, i64 0, i32 41
  store i32 -1, ptr %940, align 8, !tbaa !238
  br label %941

941:                                              ; preds = %935, %939
  %942 = load i32, ptr @PL_savestack_ix, align 4, !tbaa !52
  %943 = icmp sgt i32 %942, %0
  br i1 %943, label %944, label %945

944:                                              ; preds = %941
  call void @Perl_leave_scope(i32 noundef %0) #29
  br label %945

945:                                              ; preds = %941, %944
  call void @Perl_op_free(ptr noundef %1)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %10)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %9) #29
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %8) #29
  ret ptr %936
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @S_move_proto_attr(ptr nocapture noundef %0, ptr nocapture noundef %1, ptr noundef %2) unnamed_addr #4 {
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #29
  %8 = load ptr, ptr %1, align 8, !tbaa !6
  %9 = icmp eq ptr %8, null
  br i1 %9, label %252, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.op, ptr %8, i64 0, i32 4
  %12 = load i16, ptr %11, align 8
  %13 = and i16 %12, 511
  switch i16 %13, label %252 [
    i16 5, label %14
    i16 158, label %55
  ]

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.svop, ptr %8, i64 0, i32 7
  %16 = load ptr, ptr %15, align 8, !tbaa !65
  %17 = getelementptr inbounds %struct.sv, ptr %16, i64 0, i32 2
  %18 = load i32, ptr %17, align 4, !tbaa !84
  %19 = and i32 %18, 2098176
  %20 = icmp eq i32 %19, 1024
  br i1 %20, label %21, label %27

21:                                               ; preds = %14
  %22 = load ptr, ptr %16, align 8, !tbaa !85
  %23 = getelementptr inbounds %struct.xpv, ptr %22, i64 0, i32 2
  %24 = load i64, ptr %23, align 8, !tbaa !86
  store i64 %24, ptr %4, align 8, !tbaa !88
  %25 = getelementptr inbounds %struct.sv, ptr %16, i64 0, i32 3
  %26 = load ptr, ptr %25, align 8, !tbaa !13
  br label %30

27:                                               ; preds = %14
  %28 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %16, ptr noundef nonnull %4, i32 noundef 2) #29
  %29 = load i64, ptr %4, align 8, !tbaa !88
  br label %30

30:                                               ; preds = %27, %21
  %31 = phi i64 [ %29, %27 ], [ %24, %21 ]
  %32 = phi ptr [ %28, %27 ], [ %26, %21 ]
  %33 = icmp ugt i64 %31, 9
  br i1 %33, label %34, label %252

34:                                               ; preds = %30
  %35 = call i32 @bcmp(ptr noundef nonnull dereferenceable(10) %32, ptr noundef nonnull dereferenceable(10) @.str.105, i64 10)
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %252

37:                                               ; preds = %34
  %38 = getelementptr inbounds i8, ptr %32, i64 10
  %39 = add i64 %31, -11
  %40 = load ptr, ptr %15, align 8, !tbaa !65
  %41 = getelementptr inbounds %struct.sv, ptr %40, i64 0, i32 2
  %42 = load i32, ptr %41, align 4, !tbaa !84
  %43 = and i32 %42, 536870912
  %44 = call ptr @Perl_newSVpvn_flags(ptr noundef nonnull %38, i64 noundef %39, i32 noundef %43) #29
  %45 = load ptr, ptr %15, align 8, !tbaa !65
  %46 = icmp eq ptr %45, null
  br i1 %46, label %54, label %47

47:                                               ; preds = %37
  %48 = getelementptr inbounds %struct.sv, ptr %45, i64 0, i32 1
  %49 = load i32, ptr %48, align 8, !tbaa !42
  %50 = icmp ugt i32 %49, 1
  br i1 %50, label %51, label %53

51:                                               ; preds = %47
  %52 = add i32 %49, -1
  store i32 %52, ptr %48, align 8, !tbaa !42
  br label %54

53:                                               ; preds = %47
  call void @Perl_sv_free2(ptr noundef nonnull %45, i32 noundef %49) #29
  br label %54

54:                                               ; preds = %53, %51, %37
  store ptr %44, ptr %15, align 8, !tbaa !6
  store ptr null, ptr %1, align 8, !tbaa !6
  br label %160

55:                                               ; preds = %10
  %56 = getelementptr inbounds %struct.listop, ptr %8, i64 0, i32 7
  %57 = load ptr, ptr %56, align 8, !tbaa !81
  %58 = getelementptr inbounds %struct.op, ptr %57, i64 0, i32 1
  %59 = load ptr, ptr %58, align 8, !tbaa !38
  %60 = icmp eq ptr %59, null
  br i1 %60, label %154, label %61

61:                                               ; preds = %55, %141
  %62 = phi ptr [ %145, %141 ], [ %59, %55 ]
  %63 = phi ptr [ %143, %141 ], [ null, %55 ]
  %64 = phi ptr [ %142, %141 ], [ %57, %55 ]
  %65 = getelementptr inbounds %struct.op, ptr %62, i64 0, i32 4
  %66 = load i16, ptr %65, align 8
  %67 = and i16 %66, 511
  %68 = icmp eq i16 %67, 5
  br i1 %68, label %69, label %141

69:                                               ; preds = %61
  %70 = getelementptr inbounds %struct.svop, ptr %62, i64 0, i32 7
  %71 = load ptr, ptr %70, align 8, !tbaa !65
  %72 = getelementptr inbounds %struct.sv, ptr %71, i64 0, i32 2
  %73 = load i32, ptr %72, align 4, !tbaa !84
  %74 = and i32 %73, 2098176
  %75 = icmp eq i32 %74, 1024
  br i1 %75, label %76, label %82

76:                                               ; preds = %69
  %77 = load ptr, ptr %71, align 8, !tbaa !85
  %78 = getelementptr inbounds %struct.xpv, ptr %77, i64 0, i32 2
  %79 = load i64, ptr %78, align 8, !tbaa !86
  store i64 %79, ptr %4, align 8, !tbaa !88
  %80 = getelementptr inbounds %struct.sv, ptr %71, i64 0, i32 3
  %81 = load ptr, ptr %80, align 8, !tbaa !13
  br label %85

82:                                               ; preds = %69
  %83 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %71, ptr noundef nonnull %4, i32 noundef 2) #29
  %84 = load i64, ptr %4, align 8, !tbaa !88
  br label %85

85:                                               ; preds = %82, %76
  %86 = phi i64 [ %84, %82 ], [ %79, %76 ]
  %87 = phi ptr [ %83, %82 ], [ %81, %76 ]
  %88 = icmp ugt i64 %86, 9
  br i1 %88, label %89, label %141

89:                                               ; preds = %85
  %90 = call i32 @bcmp(ptr noundef nonnull dereferenceable(10) %87, ptr noundef nonnull dereferenceable(10) @.str.105, i64 10)
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %141

92:                                               ; preds = %89
  %93 = getelementptr inbounds i8, ptr %87, i64 10
  %94 = add i64 %86, -11
  %95 = load ptr, ptr %70, align 8, !tbaa !65
  %96 = getelementptr inbounds %struct.sv, ptr %95, i64 0, i32 2
  %97 = load i32, ptr %96, align 4, !tbaa !84
  %98 = and i32 %97, 536870912
  %99 = call ptr @Perl_newSVpvn_flags(ptr noundef nonnull %93, i64 noundef %94, i32 noundef %98) #29
  %100 = load ptr, ptr %70, align 8, !tbaa !65
  %101 = icmp eq ptr %100, null
  br i1 %101, label %109, label %102

102:                                              ; preds = %92
  %103 = getelementptr inbounds %struct.sv, ptr %100, i64 0, i32 1
  %104 = load i32, ptr %103, align 8, !tbaa !42
  %105 = icmp ugt i32 %104, 1
  br i1 %105, label %106, label %108

106:                                              ; preds = %102
  %107 = add i32 %104, -1
  store i32 %107, ptr %103, align 8, !tbaa !42
  br label %109

108:                                              ; preds = %102
  call void @Perl_sv_free2(ptr noundef nonnull %100, i32 noundef %104) #29
  br label %109

109:                                              ; preds = %92, %106, %108
  store ptr %99, ptr %70, align 8, !tbaa !6
  %110 = icmp eq ptr %63, null
  br i1 %110, label %138, label %111

111:                                              ; preds = %109
  %112 = call zeroext i1 @Perl_ckwarn(i32 noundef 12) #29
  br i1 %112, label %113, label %137

113:                                              ; preds = %111
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #29
  %114 = load ptr, ptr %70, align 8, !tbaa !65
  %115 = getelementptr inbounds %struct.sv, ptr %114, i64 0, i32 2
  %116 = load i32, ptr %115, align 4, !tbaa !84
  %117 = and i32 %116, 2098176
  %118 = icmp eq i32 %117, 1024
  br i1 %118, label %119, label %125

119:                                              ; preds = %113
  %120 = load ptr, ptr %114, align 8, !tbaa !85
  %121 = getelementptr inbounds %struct.xpv, ptr %120, i64 0, i32 2
  %122 = load i64, ptr %121, align 8, !tbaa !86
  store i64 %122, ptr %5, align 8, !tbaa !88
  %123 = getelementptr inbounds %struct.sv, ptr %114, i64 0, i32 3
  %124 = load ptr, ptr %123, align 8, !tbaa !13
  br label %131

125:                                              ; preds = %113
  %126 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %114, ptr noundef nonnull %5, i32 noundef 2) #29
  %127 = load ptr, ptr %70, align 8, !tbaa !65
  %128 = getelementptr inbounds %struct.sv, ptr %127, i64 0, i32 2
  %129 = load i32, ptr %128, align 4, !tbaa !84
  %130 = load i64, ptr %5, align 8, !tbaa !88
  br label %131

131:                                              ; preds = %125, %119
  %132 = phi i64 [ %122, %119 ], [ %130, %125 ]
  %133 = phi i32 [ %116, %119 ], [ %129, %125 ]
  %134 = phi ptr [ %124, %119 ], [ %126, %125 ]
  %135 = lshr i32 %133, 29
  %136 = and i32 %135, 1
  call void (i32, ptr, ...) @Perl_warner(i32 noundef 12, ptr noundef nonnull @.str.106, i32 noundef %136, i64 noundef %132, ptr noundef %134) #29
  call void @Perl_op_free(ptr noundef nonnull %63)
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #29
  br label %138

137:                                              ; preds = %111
  call void @Perl_op_free(ptr noundef nonnull %63)
  br label %138

138:                                              ; preds = %109, %137, %131
  %139 = load ptr, ptr %1, align 8, !tbaa !6
  %140 = call ptr @Perl_op_sibling_splice(ptr noundef %139, ptr noundef nonnull %64, i32 noundef 1, ptr noundef null)
  br label %141

141:                                              ; preds = %61, %89, %85, %138
  %142 = phi ptr [ %64, %138 ], [ %62, %85 ], [ %62, %89 ], [ %62, %61 ]
  %143 = phi ptr [ %62, %138 ], [ %63, %85 ], [ %63, %89 ], [ %63, %61 ]
  %144 = getelementptr inbounds %struct.op, ptr %142, i64 0, i32 1
  %145 = load ptr, ptr %144, align 8, !tbaa !38
  %146 = icmp eq ptr %145, null
  br i1 %146, label %147, label %61, !llvm.loop !297

147:                                              ; preds = %141
  %148 = load ptr, ptr %1, align 8, !tbaa !6
  %149 = getelementptr inbounds %struct.listop, ptr %148, i64 0, i32 7
  %150 = load ptr, ptr %149, align 8, !tbaa !81
  %151 = getelementptr inbounds %struct.op, ptr %150, i64 0, i32 1
  %152 = load ptr, ptr %151, align 8, !tbaa !38
  %153 = icmp eq ptr %152, null
  br i1 %153, label %154, label %157

154:                                              ; preds = %55, %147
  %155 = phi ptr [ %143, %147 ], [ null, %55 ]
  %156 = phi ptr [ %148, %147 ], [ %8, %55 ]
  call void @Perl_op_free(ptr noundef nonnull %156)
  store ptr null, ptr %1, align 8, !tbaa !6
  br label %157

157:                                              ; preds = %154, %147
  %158 = phi ptr [ %155, %154 ], [ %143, %147 ]
  %159 = icmp eq ptr %158, null
  br i1 %159, label %252, label %160

160:                                              ; preds = %54, %157
  %161 = phi ptr [ %8, %54 ], [ %158, %157 ]
  %162 = getelementptr inbounds %struct.gv, ptr %2, i64 0, i32 2
  %163 = load i32, ptr %162, align 4, !tbaa !133
  %164 = and i32 %163, 255
  %165 = icmp eq i32 %164, 9
  br i1 %165, label %166, label %168

166:                                              ; preds = %160
  %167 = call ptr @Perl_sv_newmortal() #29
  call void @Perl_gv_efullname4(ptr noundef %167, ptr noundef nonnull %2, ptr noundef null, i1 noundef zeroext true) #29
  br label %185

168:                                              ; preds = %160
  %169 = and i32 %163, 1024
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %185, label %171

171:                                              ; preds = %168
  %172 = getelementptr inbounds %struct.sv, ptr %2, i64 0, i32 3
  %173 = load ptr, ptr %172, align 8, !tbaa !13
  %174 = load i8, ptr %173, align 1, !tbaa !13
  %175 = icmp eq i8 %174, 38
  br i1 %175, label %176, label %185

176:                                              ; preds = %171
  %177 = getelementptr inbounds i8, ptr %173, i64 1
  %178 = load ptr, ptr %2, align 8, !tbaa !169
  %179 = getelementptr inbounds %struct.xpv, ptr %178, i64 0, i32 2
  %180 = load i64, ptr %179, align 8, !tbaa !86
  %181 = add i64 %180, -1
  %182 = and i32 %163, 536870912
  %183 = or i32 %182, 524288
  %184 = call ptr @Perl_newSVpvn_flags(ptr noundef nonnull %177, i64 noundef %181, i32 noundef %183) #29
  br label %185

185:                                              ; preds = %168, %171, %176, %166
  %186 = phi ptr [ %167, %166 ], [ %184, %176 ], [ %2, %171 ], [ %2, %168 ]
  %187 = call zeroext i1 @Perl_ckwarn(i32 noundef 47) #29
  br i1 %187, label %188, label %192

188:                                              ; preds = %185
  %189 = getelementptr inbounds %struct.svop, ptr %161, i64 0, i32 7
  %190 = load ptr, ptr %189, align 8, !tbaa !65
  %191 = call zeroext i1 @Perl_validate_proto(ptr noundef %186, ptr noundef %190, i1 noundef zeroext true) #29
  br label %192

192:                                              ; preds = %188, %185
  %193 = load ptr, ptr %0, align 8, !tbaa !6
  %194 = icmp eq ptr %193, null
  br i1 %194, label %251, label %195

195:                                              ; preds = %192
  %196 = call zeroext i1 @Perl_ckwarn(i32 noundef 35) #29
  br i1 %196, label %197, label %247

197:                                              ; preds = %195
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %6) #29
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %7) #29
  %198 = load ptr, ptr %0, align 8, !tbaa !6
  %199 = getelementptr inbounds %struct.svop, ptr %198, i64 0, i32 7
  %200 = load ptr, ptr %199, align 8, !tbaa !65
  %201 = getelementptr inbounds %struct.sv, ptr %200, i64 0, i32 2
  %202 = load i32, ptr %201, align 4, !tbaa !84
  %203 = and i32 %202, 2098176
  %204 = icmp eq i32 %203, 1024
  br i1 %204, label %205, label %211

205:                                              ; preds = %197
  %206 = load ptr, ptr %200, align 8, !tbaa !85
  %207 = getelementptr inbounds %struct.xpv, ptr %206, i64 0, i32 2
  %208 = load i64, ptr %207, align 8, !tbaa !86
  store i64 %208, ptr %6, align 8, !tbaa !88
  %209 = getelementptr inbounds %struct.sv, ptr %200, i64 0, i32 3
  %210 = load ptr, ptr %209, align 8, !tbaa !13
  br label %213

211:                                              ; preds = %197
  %212 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %200, ptr noundef nonnull %6, i32 noundef 2) #29
  br label %213

213:                                              ; preds = %211, %205
  %214 = phi ptr [ %210, %205 ], [ %212, %211 ]
  %215 = getelementptr inbounds %struct.svop, ptr %161, i64 0, i32 7
  %216 = load ptr, ptr %215, align 8, !tbaa !65
  %217 = getelementptr inbounds %struct.sv, ptr %216, i64 0, i32 2
  %218 = load i32, ptr %217, align 4, !tbaa !84
  %219 = and i32 %218, 2098176
  %220 = icmp eq i32 %219, 1024
  br i1 %220, label %221, label %227

221:                                              ; preds = %213
  %222 = load ptr, ptr %216, align 8, !tbaa !85
  %223 = getelementptr inbounds %struct.xpv, ptr %222, i64 0, i32 2
  %224 = load i64, ptr %223, align 8, !tbaa !86
  store i64 %224, ptr %7, align 8, !tbaa !88
  %225 = getelementptr inbounds %struct.sv, ptr %216, i64 0, i32 3
  %226 = load ptr, ptr %225, align 8, !tbaa !13
  br label %233

227:                                              ; preds = %213
  %228 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %216, ptr noundef nonnull %7, i32 noundef 2) #29
  %229 = load ptr, ptr %215, align 8, !tbaa !65
  %230 = getelementptr inbounds %struct.sv, ptr %229, i64 0, i32 2
  %231 = load i32, ptr %230, align 4, !tbaa !84
  %232 = load i64, ptr %7, align 8, !tbaa !88
  br label %233

233:                                              ; preds = %227, %221
  %234 = phi i64 [ %224, %221 ], [ %232, %227 ]
  %235 = phi i32 [ %218, %221 ], [ %231, %227 ]
  %236 = phi ptr [ %226, %221 ], [ %228, %227 ]
  %237 = load ptr, ptr %0, align 8, !tbaa !6
  %238 = getelementptr inbounds %struct.svop, ptr %237, i64 0, i32 7
  %239 = load ptr, ptr %238, align 8, !tbaa !65
  %240 = getelementptr inbounds %struct.sv, ptr %239, i64 0, i32 2
  %241 = load i32, ptr %240, align 4, !tbaa !84
  %242 = lshr i32 %241, 29
  %243 = and i32 %242, 1
  %244 = load i64, ptr %6, align 8, !tbaa !88
  %245 = lshr i32 %235, 29
  %246 = and i32 %245, 1
  call void (i32, ptr, ...) @Perl_warner(i32 noundef 35, ptr noundef nonnull @.str.107, i32 noundef %243, i64 noundef %244, ptr noundef %214, i32 noundef %246, i64 noundef %234, ptr noundef %236, ptr noundef %186) #29
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7) #29
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %6) #29
  br label %247

247:                                              ; preds = %233, %195
  %248 = load ptr, ptr %0, align 8, !tbaa !6
  %249 = icmp eq ptr %248, null
  br i1 %249, label %251, label %250

250:                                              ; preds = %247
  call void @Perl_op_free(ptr noundef nonnull %248)
  br label %251

251:                                              ; preds = %192, %250, %247
  store ptr %161, ptr %0, align 8, !tbaa !6
  br label %252

252:                                              ; preds = %10, %30, %34, %157, %251, %3
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #29
  ret void
}

; Function Attrs: nofree norecurse nosync nounwind sspstrong memory(read, inaccessiblemem: none) uwtable
define internal fastcc i32 @S_perl_hash_one_at_a_time_hard(ptr noundef readonly %0, i64 noundef %1) unnamed_addr #21 {
  %3 = getelementptr inbounds i8, ptr %0, i64 %1
  %4 = trunc i64 %1 to i32
  %5 = add i32 %4, 544173908
  %6 = icmp sgt i64 %1, 0
  br i1 %6, label %7, label %18

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %16, %7 ], [ %5, %2 ]
  %9 = phi ptr [ %13, %7 ], [ %0, %2 ]
  %10 = mul i32 %8, 1025
  %11 = lshr i32 %10, 6
  %12 = xor i32 %11, %10
  %13 = getelementptr inbounds i8, ptr %9, i64 1
  %14 = load i8, ptr %9, align 1, !tbaa !13
  %15 = zext i8 %14 to i32
  %16 = add i32 %12, %15
  %17 = icmp ult ptr %13, %3
  br i1 %17, label %7, label %18, !llvm.loop !294

18:                                               ; preds = %7, %2
  %19 = phi i32 [ %5, %2 ], [ %16, %7 ]
  %20 = mul i32 %19, 1025
  %21 = lshr i32 %20, 6
  %22 = xor i32 %21, %20
  %23 = mul i32 %22, 1025
  %24 = add i32 %23, 73800
  %25 = lshr i32 %24, 6
  %26 = xor i32 %25, %24
  %27 = mul i32 %26, 1025
  %28 = add i32 %27, 113775
  %29 = lshr i32 %28, 6
  %30 = xor i32 %29, %28
  %31 = mul i32 %30, 1025
  %32 = add i32 %31, 118900
  %33 = lshr i32 %32, 6
  %34 = xor i32 %33, %32
  %35 = mul i32 %34, 1025
  %36 = add i32 %35, 32800
  %37 = lshr i32 %36, 6
  %38 = xor i32 %37, %36
  %39 = mul i32 %38, 9
  %40 = lshr i32 %39, 11
  %41 = xor i32 %40, %39
  %42 = mul i32 %41, 32769
  ret i32 %42
}

declare void @Perl_unshare_hek(ptr noundef) local_unnamed_addr #6

declare ptr @Perl_share_hek(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @S_op_const_sv(ptr noundef readonly %0, ptr nocapture noundef readonly %1, i1 noundef zeroext %2) unnamed_addr #4 {
  %4 = icmp eq ptr %0, null
  br i1 %4, label %84, label %5

5:                                                ; preds = %3
  br i1 %2, label %33, label %6

6:                                                ; preds = %5, %29
  %7 = phi ptr [ %30, %29 ], [ null, %5 ]
  %8 = phi ptr [ %31, %29 ], [ %0, %5 ]
  %9 = getelementptr inbounds %struct.op, ptr %8, i64 0, i32 4
  %10 = load i16, ptr %9, align 8
  %11 = freeze i16 %10
  %12 = and i16 %11, 511
  %13 = and i16 %11, 510
  %14 = icmp eq i16 %13, 192
  br i1 %14, label %29, label %15

15:                                               ; preds = %6
  switch i16 %12, label %16 [
    i16 3, label %29
    i16 0, label %29
    i16 194, label %29
    i16 186, label %84
  ]

16:                                               ; preds = %15
  %17 = icmp eq ptr %7, null
  br i1 %17, label %18, label %84

18:                                               ; preds = %16
  switch i16 %12, label %84 [
    i16 5, label %25
    i16 44, label %19
  ]

19:                                               ; preds = %18
  %20 = getelementptr inbounds %struct.op, ptr %8, i64 0, i32 6
  %21 = load i8, ptr %20, align 1, !tbaa !33
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %84

23:                                               ; preds = %19
  %24 = tail call ptr @Perl_newSV(i64 noundef 0) #29
  tail call void @Perl_save_pushptr(ptr noundef %24, i32 noundef 11) #29
  br label %29

25:                                               ; preds = %18
  %26 = getelementptr inbounds %struct.svop, ptr %8, i64 0, i32 7
  %27 = load ptr, ptr %26, align 8, !tbaa !65
  %28 = icmp eq ptr %27, null
  br i1 %28, label %84, label %29

29:                                               ; preds = %15, %15, %15, %6, %25, %23
  %30 = phi ptr [ %7, %15 ], [ %24, %23 ], [ %27, %25 ], [ %7, %6 ], [ %7, %15 ], [ %7, %15 ]
  %31 = load ptr, ptr %8, align 8, !tbaa !25
  %32 = icmp eq ptr %31, null
  br i1 %32, label %84, label %6, !llvm.loop !295

33:                                               ; preds = %5, %69
  %34 = phi i8 [ %71, %69 ], [ 0, %5 ]
  %35 = phi ptr [ %70, %69 ], [ null, %5 ]
  %36 = phi ptr [ %72, %69 ], [ %0, %5 ]
  %37 = getelementptr inbounds %struct.op, ptr %36, i64 0, i32 4
  %38 = load i16, ptr %37, align 8
  %39 = freeze i16 %38
  %40 = and i16 %39, 511
  %41 = and i16 %39, 510
  %42 = icmp eq i16 %41, 192
  br i1 %42, label %69, label %43

43:                                               ; preds = %33
  switch i16 %40, label %44 [
    i16 3, label %69
    i16 0, label %69
    i16 194, label %69
    i16 186, label %74
  ]

44:                                               ; preds = %43
  %45 = icmp eq ptr %35, null
  br i1 %45, label %46, label %84

46:                                               ; preds = %44
  switch i16 %40, label %84 [
    i16 5, label %47
    i16 44, label %51
    i16 9, label %57
  ]

47:                                               ; preds = %46
  %48 = getelementptr inbounds %struct.svop, ptr %36, i64 0, i32 7
  %49 = load ptr, ptr %48, align 8, !tbaa !65
  %50 = icmp eq ptr %49, null
  br i1 %50, label %84, label %69

51:                                               ; preds = %46
  %52 = getelementptr inbounds %struct.op, ptr %36, i64 0, i32 6
  %53 = load i8, ptr %52, align 1, !tbaa !33
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %55, label %84

55:                                               ; preds = %51
  %56 = tail call ptr @Perl_newSV(i64 noundef 0) #29
  tail call void @Perl_save_pushptr(ptr noundef %56, i32 noundef 11) #29
  br label %69

57:                                               ; preds = %46
  %58 = load ptr, ptr @PL_comppad_name, align 8, !tbaa !6
  %59 = getelementptr inbounds %struct.padnamelist, ptr %58, i64 0, i32 1
  %60 = load ptr, ptr %59, align 8, !tbaa !151
  %61 = getelementptr inbounds %struct.op, ptr %36, i64 0, i32 3
  %62 = load i64, ptr %61, align 8, !tbaa !34
  %63 = getelementptr inbounds ptr, ptr %60, i64 %62
  %64 = load ptr, ptr %63, align 8, !tbaa !6
  %65 = getelementptr inbounds %struct.padname, ptr %64, i64 0, i32 8
  %66 = load i8, ptr %65, align 1, !tbaa !153
  %67 = and i8 %66, 1
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %43, %43, %43, %33, %55, %47, %57
  %70 = phi ptr [ %35, %43 ], [ %56, %55 ], [ %49, %47 ], [ @PL_sv_undef, %57 ], [ %35, %33 ], [ %35, %43 ], [ %35, %43 ]
  %71 = phi i8 [ %34, %43 ], [ %34, %55 ], [ %34, %47 ], [ 1, %57 ], [ %34, %33 ], [ %34, %43 ], [ %34, %43 ]
  %72 = load ptr, ptr %36, align 8, !tbaa !25
  %73 = icmp eq ptr %72, null
  br i1 %73, label %74, label %33, !llvm.loop !295

74:                                               ; preds = %69, %43
  %75 = phi ptr [ %70, %69 ], [ %35, %43 ]
  %76 = phi i8 [ %71, %69 ], [ %34, %43 ]
  %77 = and i8 %76, 1
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %84, label %79

79:                                               ; preds = %74
  %80 = load ptr, ptr %1, align 8, !tbaa !10
  %81 = getelementptr inbounds %struct.xpvcv, ptr %80, i64 0, i32 12
  %82 = load i32, ptr %81, align 4, !tbaa !14
  %83 = or i32 %82, 4
  store i32 %83, ptr %81, align 4, !tbaa !14
  br label %84

84:                                               ; preds = %29, %15, %25, %19, %16, %18, %46, %44, %57, %47, %51, %3, %74, %79
  %85 = phi ptr [ null, %79 ], [ %75, %74 ], [ null, %3 ], [ null, %51 ], [ null, %47 ], [ null, %57 ], [ null, %44 ], [ null, %46 ], [ %30, %29 ], [ %7, %15 ], [ null, %25 ], [ null, %19 ], [ null, %16 ], [ null, %18 ]
  ret ptr %85
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc zeroext i1 @S_already_defined(ptr noundef %0, ptr noundef readnone %1, ptr noundef readonly %2, ptr nocapture noundef readonly %3, ptr noundef %4) unnamed_addr #4 {
  %6 = icmp ne ptr %1, null
  br i1 %6, label %50, label %7

7:                                                ; preds = %5
  %8 = load ptr, ptr @PL_compcv, align 8, !tbaa !6
  %9 = load ptr, ptr %8, align 8, !tbaa !10
  %10 = getelementptr inbounds %struct.xpvcv, ptr %9, i64 0, i32 12
  %11 = load i32, ptr %10, align 4, !tbaa !14
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %95, label %13

13:                                               ; preds = %7
  %14 = load ptr, ptr %0, align 8, !tbaa !10
  %15 = getelementptr inbounds %struct.xpvcv, ptr %14, i64 0, i32 12
  %16 = load i32, ptr %15, align 4, !tbaa !14
  %17 = and i32 %16, 8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %23

19:                                               ; preds = %13
  %20 = getelementptr inbounds %struct.xpvcv, ptr %14, i64 0, i32 6
  %21 = load ptr, ptr %20, align 8, !tbaa !13
  %22 = icmp ne ptr %21, null
  br label %23

23:                                               ; preds = %19, %13
  %24 = phi i1 [ false, %13 ], [ %22, %19 ]
  %25 = and i32 %11, 2
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %39, label %27

27:                                               ; preds = %23
  %28 = and i32 %16, 2
  %29 = icmp eq i32 %28, 0
  %30 = select i1 %29, i1 %24, i1 false
  br i1 %30, label %31, label %39

31:                                               ; preds = %27
  %32 = tail call zeroext i1 @Perl_ckwarn(i32 noundef 12) #29
  %33 = load ptr, ptr @PL_compcv, align 8, !tbaa !6
  br i1 %32, label %34, label %39

34:                                               ; preds = %31
  tail call void @Perl_save_pushptr(ptr noundef %33, i32 noundef 11) #29
  tail call void (i32, ptr, ...) @Perl_warner(i32 noundef 12, ptr noundef nonnull @.str.108) #29
  %35 = load ptr, ptr @PL_compcv, align 8, !tbaa !6
  %36 = getelementptr inbounds %struct.sv, ptr %35, i64 0, i32 1
  %37 = load i32, ptr %36, align 8, !tbaa !42
  %38 = add i32 %37, 1
  store i32 %38, ptr %36, align 8, !tbaa !42
  br label %39

39:                                               ; preds = %27, %34, %31, %23
  %40 = phi ptr [ %8, %27 ], [ %35, %34 ], [ %33, %31 ], [ %8, %23 ]
  %41 = load ptr, ptr %40, align 8, !tbaa !10
  %42 = getelementptr inbounds %struct.xpvcv, ptr %41, i64 0, i32 12
  %43 = load i32, ptr %42, align 4, !tbaa !14
  %44 = select i1 %24, i32 131073, i32 131075
  %45 = and i32 %44, %43
  %46 = load ptr, ptr %0, align 8, !tbaa !10
  %47 = getelementptr inbounds %struct.xpvcv, ptr %46, i64 0, i32 12
  %48 = load i32, ptr %47, align 4, !tbaa !14
  %49 = or i32 %48, %45
  store i32 %49, ptr %47, align 4, !tbaa !14
  br label %95

50:                                               ; preds = %5
  %51 = load ptr, ptr %0, align 8, !tbaa !10
  %52 = getelementptr inbounds %struct.xpvcv, ptr %51, i64 0, i32 12
  %53 = load i32, ptr %52, align 4, !tbaa !14
  %54 = and i32 %53, 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %58

56:                                               ; preds = %50
  %57 = tail call zeroext i1 @Perl_ckwarn(i32 noundef 19) #29
  br i1 %57, label %58, label %94

58:                                               ; preds = %56, %50
  %59 = load ptr, ptr @PL_curcop, align 8, !tbaa !6
  %60 = getelementptr inbounds %struct.cop, ptr %59, i64 0, i32 7
  %61 = load i32, ptr %60, align 4, !tbaa !146
  %62 = icmp eq ptr %2, null
  br i1 %62, label %66, label %63

63:                                               ; preds = %58
  %64 = getelementptr inbounds %struct.svop, ptr %2, i64 0, i32 7
  %65 = load ptr, ptr %64, align 8, !tbaa !65
  br label %75

66:                                               ; preds = %58
  %67 = load ptr, ptr %3, align 8, !tbaa !138
  %68 = getelementptr inbounds i8, ptr %67, i64 1
  %69 = getelementptr inbounds %struct.padname, ptr %3, i64 0, i32 7
  %70 = load i8, ptr %69, align 8, !tbaa !136
  %71 = zext i8 %70 to i64
  %72 = add nsw i64 %71, -1
  %73 = tail call ptr @Perl_newSVpvn_flags(ptr noundef nonnull %68, i64 noundef %72, i32 noundef 536870912) #29
  %74 = tail call ptr @Perl_sv_2mortal(ptr noundef %73) #29
  br label %75

75:                                               ; preds = %66, %63
  %76 = phi ptr [ %65, %63 ], [ %74, %66 ]
  %77 = load ptr, ptr @PL_parser, align 8, !tbaa !6
  %78 = icmp eq ptr %77, null
  br i1 %78, label %86, label %79

79:                                               ; preds = %75
  %80 = getelementptr inbounds %struct.yy_parser, ptr %77, i64 0, i32 41
  %81 = load i32, ptr %80, align 8, !tbaa !238
  %82 = icmp eq i32 %81, -1
  br i1 %82, label %86, label %83

83:                                               ; preds = %79
  %84 = load ptr, ptr @PL_curcop, align 8, !tbaa !6
  %85 = getelementptr inbounds %struct.cop, ptr %84, i64 0, i32 7
  store i32 %81, ptr %85, align 4, !tbaa !146
  br label %86

86:                                               ; preds = %83, %79, %75
  %87 = load ptr, ptr @PL_compcv, align 8, !tbaa !6
  tail call void @Perl_save_pushptr(ptr noundef %87, i32 noundef 11) #29
  tail call void @Perl_report_redefined_cv(ptr noundef %76, ptr noundef nonnull %0, ptr noundef %4)
  %88 = load ptr, ptr @PL_compcv, align 8, !tbaa !6
  %89 = getelementptr inbounds %struct.sv, ptr %88, i64 0, i32 1
  %90 = load i32, ptr %89, align 8, !tbaa !42
  %91 = add i32 %90, 1
  store i32 %91, ptr %89, align 8, !tbaa !42
  %92 = load ptr, ptr @PL_curcop, align 8, !tbaa !6
  %93 = getelementptr inbounds %struct.cop, ptr %92, i64 0, i32 7
  store i32 %61, ptr %93, align 4, !tbaa !146
  br label %94

94:                                               ; preds = %86, %56
  tail call void @Perl_save_pushptr(ptr noundef nonnull %0, i32 noundef 11) #29
  br label %95

95:                                               ; preds = %7, %39, %94
  ret i1 %6
}

declare ptr @Perl_newSV_type(i32 noundef) local_unnamed_addr #6

declare void @Perl_cvstash_set(ptr noundef, ptr noundef) local_unnamed_addr #6

; Function Attrs: nounwind sspstrong uwtable
define internal void @const_sv_xsub(ptr nocapture noundef readonly %0) #4 {
  %2 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !6
  %3 = load ptr, ptr @PL_markstack_ptr, align 8, !tbaa !6
  %4 = getelementptr inbounds i32, ptr %3, i64 -1
  store ptr %4, ptr @PL_markstack_ptr, align 8, !tbaa !6
  %5 = load i32, ptr %3, align 4, !tbaa !52
  %6 = add nsw i32 %5, 1
  %7 = load ptr, ptr %0, align 8, !tbaa !10
  %8 = getelementptr inbounds %struct.xpvcv, ptr %7, i64 0, i32 5
  %9 = load ptr, ptr %8, align 8, !tbaa !13
  %10 = icmp eq ptr %9, null
  br i1 %10, label %11, label %16

11:                                               ; preds = %1
  %12 = load ptr, ptr @PL_stack_base, align 8, !tbaa !6
  %13 = sext i32 %6 to i64
  %14 = getelementptr inbounds ptr, ptr %12, i64 %13
  %15 = getelementptr inbounds ptr, ptr %14, i64 -1
  br label %30

16:                                               ; preds = %1
  %17 = ptrtoint ptr %2 to i64
  %18 = load ptr, ptr @PL_stack_max, align 8, !tbaa !6
  %19 = ptrtoint ptr %18 to i64
  %20 = sub i64 %19, %17
  %21 = icmp slt i64 %20, 8
  br i1 %21, label %22, label %24

22:                                               ; preds = %16
  %23 = tail call ptr @Perl_stack_grow(ptr noundef %2, ptr noundef %2, i64 noundef 1) #29
  br label %24

24:                                               ; preds = %16, %22
  %25 = load ptr, ptr @PL_stack_base, align 8, !tbaa !6
  %26 = sext i32 %6 to i64
  %27 = getelementptr inbounds ptr, ptr %25, i64 %26
  store ptr %9, ptr %27, align 8, !tbaa !6
  %28 = load ptr, ptr @PL_stack_base, align 8, !tbaa !6
  %29 = getelementptr inbounds ptr, ptr %28, i64 %26
  br label %30

30:                                               ; preds = %24, %11
  %31 = phi ptr [ %15, %11 ], [ %29, %24 ]
  store ptr %31, ptr @PL_stack_sp, align 8, !tbaa !6
  ret void
}

declare void @Perl_pad_fixup_inner_anons(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #6

declare void @Perl_pad_tidy(i32 noundef) local_unnamed_addr #6

declare void @Perl_sv_sethek(ptr noundef, ptr noundef) local_unnamed_addr #6

declare ptr @Perl_cv_clone_into(ptr noundef, ptr noundef) local_unnamed_addr #6

declare ptr @Perl_cv_clone(ptr noundef) local_unnamed_addr #6

declare zeroext i1 @Perl_validate_proto(ptr noundef, ptr noundef, i1 noundef zeroext) local_unnamed_addr #6

declare ptr @Perl_newSV(i64 noundef) local_unnamed_addr #6

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_report_redefined_cv(ptr noundef %0, ptr noundef %1, ptr noundef readonly %2) local_unnamed_addr #4 {
  %4 = load ptr, ptr %1, align 8, !tbaa !10
  %5 = getelementptr inbounds %struct.xpvcv, ptr %4, i64 0, i32 12
  %6 = load i32, ptr %5, align 4, !tbaa !14
  %7 = and i32 %6, 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %11

9:                                                ; preds = %3
  %10 = icmp ne ptr %2, null
  br label %33

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.cv, ptr %1, i64 0, i32 2
  %13 = load i32, ptr %12, align 4, !tbaa !263
  %14 = and i32 %13, 255
  %15 = add nsw i32 %14, -13
  %16 = icmp ult i32 %15, 2
  br i1 %16, label %17, label %27

17:                                               ; preds = %11
  %18 = getelementptr inbounds %struct.xpvcv, ptr %4, i64 0, i32 5
  %19 = load ptr, ptr %18, align 8, !tbaa !13
  %20 = icmp eq ptr %19, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.sv, ptr %19, i64 0, i32 2
  %23 = load i32, ptr %22, align 4, !tbaa !84
  %24 = and i32 %23, 255
  %25 = icmp eq i32 %24, 11
  br i1 %25, label %27, label %26

26:                                               ; preds = %21, %17
  br label %27

27:                                               ; preds = %26, %21, %11
  %28 = phi ptr [ %19, %26 ], [ null, %11 ], [ null, %21 ]
  %29 = icmp eq ptr %2, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %27
  %31 = load ptr, ptr %2, align 8, !tbaa !6
  %32 = icmp eq ptr %28, %31
  br i1 %32, label %699, label %33

33:                                               ; preds = %9, %30, %27
  %34 = phi i1 [ %10, %9 ], [ true, %30 ], [ false, %27 ]
  %35 = phi ptr [ null, %9 ], [ %28, %30 ], [ %28, %27 ]
  %36 = tail call zeroext i1 @Perl_ckwarn(i32 noundef 19) #29
  br i1 %36, label %37, label %689

37:                                               ; preds = %33
  %38 = load ptr, ptr %1, align 8, !tbaa !10
  %39 = getelementptr inbounds %struct.xpvcv, ptr %38, i64 0, i32 12
  %40 = load i32, ptr %39, align 4, !tbaa !14
  %41 = and i32 %40, 32768
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %45, label %43

43:                                               ; preds = %37
  %44 = tail call ptr @Perl_cvgv_from_hek(ptr noundef nonnull %1) #29
  br label %48

45:                                               ; preds = %37
  %46 = getelementptr inbounds %struct.xpvcv, ptr %38, i64 0, i32 7
  %47 = load ptr, ptr %46, align 8, !tbaa !13
  br label %48

48:                                               ; preds = %43, %45
  %49 = phi ptr [ %44, %43 ], [ %47, %45 ]
  %50 = icmp eq ptr %49, null
  br i1 %50, label %697, label %51

51:                                               ; preds = %48
  %52 = load ptr, ptr %1, align 8, !tbaa !10
  %53 = getelementptr inbounds %struct.xpvcv, ptr %52, i64 0, i32 12
  %54 = load i32, ptr %53, align 4, !tbaa !14
  %55 = and i32 %54, 32768
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %59, label %57

57:                                               ; preds = %51
  %58 = tail call ptr @Perl_cvgv_from_hek(ptr noundef nonnull %1) #29
  br label %62

59:                                               ; preds = %51
  %60 = getelementptr inbounds %struct.xpvcv, ptr %52, i64 0, i32 7
  %61 = load ptr, ptr %60, align 8, !tbaa !13
  br label %62

62:                                               ; preds = %57, %59
  %63 = phi ptr [ %58, %57 ], [ %61, %59 ]
  %64 = load ptr, ptr %63, align 8, !tbaa !169
  %65 = getelementptr inbounds %struct.xpvgv, ptr %64, i64 0, i32 5
  %66 = load ptr, ptr %65, align 8, !tbaa !13
  %67 = icmp eq ptr %66, null
  br i1 %67, label %697, label %68

68:                                               ; preds = %62
  %69 = load ptr, ptr %1, align 8, !tbaa !10
  %70 = getelementptr inbounds %struct.xpvcv, ptr %69, i64 0, i32 12
  %71 = load i32, ptr %70, align 4, !tbaa !14
  %72 = and i32 %71, 32768
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %76, label %74

74:                                               ; preds = %68
  %75 = tail call ptr @Perl_cvgv_from_hek(ptr noundef nonnull %1) #29
  br label %79

76:                                               ; preds = %68
  %77 = getelementptr inbounds %struct.xpvcv, ptr %69, i64 0, i32 7
  %78 = load ptr, ptr %77, align 8, !tbaa !13
  br label %79

79:                                               ; preds = %74, %76
  %80 = phi ptr [ %75, %74 ], [ %78, %76 ]
  %81 = load ptr, ptr %80, align 8, !tbaa !169
  %82 = getelementptr inbounds %struct.xpvgv, ptr %81, i64 0, i32 5
  %83 = load ptr, ptr %82, align 8, !tbaa !13
  %84 = getelementptr inbounds %struct.hv, ptr %83, i64 0, i32 2
  %85 = load i32, ptr %84, align 4, !tbaa !56
  %86 = and i32 %85, 33554432
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %697, label %88

88:                                               ; preds = %79
  %89 = load ptr, ptr %1, align 8, !tbaa !10
  %90 = getelementptr inbounds %struct.xpvcv, ptr %89, i64 0, i32 12
  %91 = load i32, ptr %90, align 4, !tbaa !14
  %92 = and i32 %91, 32768
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %99, label %94

94:                                               ; preds = %88
  %95 = tail call ptr @Perl_cvgv_from_hek(ptr noundef nonnull %1) #29
  %96 = load ptr, ptr %1, align 8, !tbaa !10
  %97 = getelementptr inbounds %struct.xpvcv, ptr %96, i64 0, i32 12
  %98 = load i32, ptr %97, align 4, !tbaa !14
  br label %102

99:                                               ; preds = %88
  %100 = getelementptr inbounds %struct.xpvcv, ptr %89, i64 0, i32 7
  %101 = load ptr, ptr %100, align 8, !tbaa !13
  br label %102

102:                                              ; preds = %94, %99
  %103 = phi i32 [ %98, %94 ], [ %91, %99 ]
  %104 = phi ptr [ %96, %94 ], [ %89, %99 ]
  %105 = phi ptr [ %95, %94 ], [ %101, %99 ]
  %106 = load ptr, ptr %105, align 8, !tbaa !169
  %107 = getelementptr inbounds %struct.xpvgv, ptr %106, i64 0, i32 5
  %108 = load ptr, ptr %107, align 8, !tbaa !13
  %109 = getelementptr inbounds %struct.hv, ptr %108, i64 0, i32 3
  %110 = load ptr, ptr %109, align 8, !tbaa !13
  %111 = and i32 %103, 32768
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %115, label %113

113:                                              ; preds = %102
  %114 = tail call ptr @Perl_cvgv_from_hek(ptr noundef nonnull %1) #29
  br label %118

115:                                              ; preds = %102
  %116 = getelementptr inbounds %struct.xpvcv, ptr %104, i64 0, i32 7
  %117 = load ptr, ptr %116, align 8, !tbaa !13
  br label %118

118:                                              ; preds = %113, %115
  %119 = phi ptr [ %114, %113 ], [ %117, %115 ]
  %120 = load ptr, ptr %119, align 8, !tbaa !169
  %121 = getelementptr inbounds %struct.xpvgv, ptr %120, i64 0, i32 5
  %122 = load ptr, ptr %121, align 8, !tbaa !13
  %123 = load ptr, ptr %122, align 8, !tbaa !139
  %124 = getelementptr inbounds %struct.xpvhv, ptr %123, i64 0, i32 3
  %125 = load i64, ptr %124, align 8, !tbaa !140
  %126 = add i64 %125, 1
  %127 = getelementptr inbounds ptr, ptr %110, i64 %126
  %128 = load ptr, ptr %127, align 8, !tbaa !13
  %129 = icmp eq ptr %128, null
  br i1 %129, label %697, label %130

130:                                              ; preds = %118
  %131 = load ptr, ptr %1, align 8, !tbaa !10
  %132 = getelementptr inbounds %struct.xpvcv, ptr %131, i64 0, i32 12
  %133 = load i32, ptr %132, align 4, !tbaa !14
  %134 = and i32 %133, 32768
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %141, label %136

136:                                              ; preds = %130
  %137 = tail call ptr @Perl_cvgv_from_hek(ptr noundef nonnull %1) #29
  %138 = load ptr, ptr %1, align 8, !tbaa !10
  %139 = getelementptr inbounds %struct.xpvcv, ptr %138, i64 0, i32 12
  %140 = load i32, ptr %139, align 4, !tbaa !14
  br label %144

141:                                              ; preds = %130
  %142 = getelementptr inbounds %struct.xpvcv, ptr %131, i64 0, i32 7
  %143 = load ptr, ptr %142, align 8, !tbaa !13
  br label %144

144:                                              ; preds = %136, %141
  %145 = phi i32 [ %140, %136 ], [ %133, %141 ]
  %146 = phi ptr [ %138, %136 ], [ %131, %141 ]
  %147 = phi ptr [ %137, %136 ], [ %143, %141 ]
  %148 = load ptr, ptr %147, align 8, !tbaa !169
  %149 = getelementptr inbounds %struct.xpvgv, ptr %148, i64 0, i32 5
  %150 = load ptr, ptr %149, align 8, !tbaa !13
  %151 = getelementptr inbounds %struct.hv, ptr %150, i64 0, i32 3
  %152 = load ptr, ptr %151, align 8, !tbaa !13
  %153 = and i32 %145, 32768
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %157, label %155

155:                                              ; preds = %144
  %156 = tail call ptr @Perl_cvgv_from_hek(ptr noundef nonnull %1) #29
  br label %160

157:                                              ; preds = %144
  %158 = getelementptr inbounds %struct.xpvcv, ptr %146, i64 0, i32 7
  %159 = load ptr, ptr %158, align 8, !tbaa !13
  br label %160

160:                                              ; preds = %155, %157
  %161 = phi ptr [ %156, %155 ], [ %159, %157 ]
  %162 = load ptr, ptr %161, align 8, !tbaa !169
  %163 = getelementptr inbounds %struct.xpvgv, ptr %162, i64 0, i32 5
  %164 = load ptr, ptr %163, align 8, !tbaa !13
  %165 = load ptr, ptr %164, align 8, !tbaa !139
  %166 = getelementptr inbounds %struct.xpvhv, ptr %165, i64 0, i32 3
  %167 = load i64, ptr %166, align 8, !tbaa !140
  %168 = add i64 %167, 1
  %169 = getelementptr inbounds ptr, ptr %152, i64 %168
  %170 = getelementptr inbounds %struct.xpvhv_aux, ptr %169, i64 0, i32 4
  %171 = load i32, ptr %170, align 4, !tbaa !142
  %172 = icmp eq i32 %171, 0
  %173 = load ptr, ptr %1, align 8, !tbaa !10
  %174 = getelementptr inbounds %struct.xpvcv, ptr %173, i64 0, i32 12
  %175 = load i32, ptr %174, align 4, !tbaa !14
  %176 = and i32 %175, 32768
  %177 = icmp eq i32 %176, 0
  br i1 %172, label %216, label %178

178:                                              ; preds = %160
  br i1 %177, label %184, label %179

179:                                              ; preds = %178
  %180 = tail call ptr @Perl_cvgv_from_hek(ptr noundef nonnull %1) #29
  %181 = load ptr, ptr %1, align 8, !tbaa !10
  %182 = getelementptr inbounds %struct.xpvcv, ptr %181, i64 0, i32 12
  %183 = load i32, ptr %182, align 4, !tbaa !14
  br label %187

184:                                              ; preds = %178
  %185 = getelementptr inbounds %struct.xpvcv, ptr %173, i64 0, i32 7
  %186 = load ptr, ptr %185, align 8, !tbaa !13
  br label %187

187:                                              ; preds = %179, %184
  %188 = phi i32 [ %183, %179 ], [ %175, %184 ]
  %189 = phi ptr [ %181, %179 ], [ %173, %184 ]
  %190 = phi ptr [ %180, %179 ], [ %186, %184 ]
  %191 = load ptr, ptr %190, align 8, !tbaa !169
  %192 = getelementptr inbounds %struct.xpvgv, ptr %191, i64 0, i32 5
  %193 = load ptr, ptr %192, align 8, !tbaa !13
  %194 = getelementptr inbounds %struct.hv, ptr %193, i64 0, i32 3
  %195 = load ptr, ptr %194, align 8, !tbaa !13
  %196 = and i32 %188, 32768
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %200, label %198

198:                                              ; preds = %187
  %199 = tail call ptr @Perl_cvgv_from_hek(ptr noundef nonnull %1) #29
  br label %203

200:                                              ; preds = %187
  %201 = getelementptr inbounds %struct.xpvcv, ptr %189, i64 0, i32 7
  %202 = load ptr, ptr %201, align 8, !tbaa !13
  br label %203

203:                                              ; preds = %198, %200
  %204 = phi ptr [ %199, %198 ], [ %202, %200 ]
  %205 = load ptr, ptr %204, align 8, !tbaa !169
  %206 = getelementptr inbounds %struct.xpvgv, ptr %205, i64 0, i32 5
  %207 = load ptr, ptr %206, align 8, !tbaa !13
  %208 = load ptr, ptr %207, align 8, !tbaa !139
  %209 = getelementptr inbounds %struct.xpvhv, ptr %208, i64 0, i32 3
  %210 = load i64, ptr %209, align 8, !tbaa !140
  %211 = add i64 %210, 1
  %212 = getelementptr inbounds ptr, ptr %195, i64 %211
  %213 = load ptr, ptr %212, align 8, !tbaa !13
  %214 = load ptr, ptr %213, align 8, !tbaa !6
  %215 = icmp eq ptr %214, null
  br i1 %215, label %697, label %253

216:                                              ; preds = %160
  br i1 %177, label %222, label %217

217:                                              ; preds = %216
  %218 = tail call ptr @Perl_cvgv_from_hek(ptr noundef nonnull %1) #29
  %219 = load ptr, ptr %1, align 8, !tbaa !10
  %220 = getelementptr inbounds %struct.xpvcv, ptr %219, i64 0, i32 12
  %221 = load i32, ptr %220, align 4, !tbaa !14
  br label %225

222:                                              ; preds = %216
  %223 = getelementptr inbounds %struct.xpvcv, ptr %173, i64 0, i32 7
  %224 = load ptr, ptr %223, align 8, !tbaa !13
  br label %225

225:                                              ; preds = %217, %222
  %226 = phi i32 [ %221, %217 ], [ %175, %222 ]
  %227 = phi ptr [ %219, %217 ], [ %173, %222 ]
  %228 = phi ptr [ %218, %217 ], [ %224, %222 ]
  %229 = load ptr, ptr %228, align 8, !tbaa !169
  %230 = getelementptr inbounds %struct.xpvgv, ptr %229, i64 0, i32 5
  %231 = load ptr, ptr %230, align 8, !tbaa !13
  %232 = getelementptr inbounds %struct.hv, ptr %231, i64 0, i32 3
  %233 = load ptr, ptr %232, align 8, !tbaa !13
  %234 = and i32 %226, 32768
  %235 = icmp eq i32 %234, 0
  br i1 %235, label %238, label %236

236:                                              ; preds = %225
  %237 = tail call ptr @Perl_cvgv_from_hek(ptr noundef nonnull %1) #29
  br label %241

238:                                              ; preds = %225
  %239 = getelementptr inbounds %struct.xpvcv, ptr %227, i64 0, i32 7
  %240 = load ptr, ptr %239, align 8, !tbaa !13
  br label %241

241:                                              ; preds = %236, %238
  %242 = phi ptr [ %237, %236 ], [ %240, %238 ]
  %243 = load ptr, ptr %242, align 8, !tbaa !169
  %244 = getelementptr inbounds %struct.xpvgv, ptr %243, i64 0, i32 5
  %245 = load ptr, ptr %244, align 8, !tbaa !13
  %246 = load ptr, ptr %245, align 8, !tbaa !139
  %247 = getelementptr inbounds %struct.xpvhv, ptr %246, i64 0, i32 3
  %248 = load i64, ptr %247, align 8, !tbaa !140
  %249 = add i64 %248, 1
  %250 = getelementptr inbounds ptr, ptr %233, i64 %249
  %251 = load ptr, ptr %250, align 8, !tbaa !13
  %252 = icmp eq ptr %251, null
  br i1 %252, label %697, label %253

253:                                              ; preds = %241, %203
  %254 = load ptr, ptr %1, align 8, !tbaa !10
  %255 = getelementptr inbounds %struct.xpvcv, ptr %254, i64 0, i32 12
  %256 = load i32, ptr %255, align 4, !tbaa !14
  %257 = and i32 %256, 32768
  %258 = icmp eq i32 %257, 0
  br i1 %258, label %264, label %259

259:                                              ; preds = %253
  %260 = tail call ptr @Perl_cvgv_from_hek(ptr noundef nonnull %1) #29
  %261 = load ptr, ptr %1, align 8, !tbaa !10
  %262 = getelementptr inbounds %struct.xpvcv, ptr %261, i64 0, i32 12
  %263 = load i32, ptr %262, align 4, !tbaa !14
  br label %267

264:                                              ; preds = %253
  %265 = getelementptr inbounds %struct.xpvcv, ptr %254, i64 0, i32 7
  %266 = load ptr, ptr %265, align 8, !tbaa !13
  br label %267

267:                                              ; preds = %259, %264
  %268 = phi i32 [ %263, %259 ], [ %256, %264 ]
  %269 = phi ptr [ %261, %259 ], [ %254, %264 ]
  %270 = phi ptr [ %260, %259 ], [ %266, %264 ]
  %271 = load ptr, ptr %270, align 8, !tbaa !169
  %272 = getelementptr inbounds %struct.xpvgv, ptr %271, i64 0, i32 5
  %273 = load ptr, ptr %272, align 8, !tbaa !13
  %274 = getelementptr inbounds %struct.hv, ptr %273, i64 0, i32 3
  %275 = load ptr, ptr %274, align 8, !tbaa !13
  %276 = and i32 %268, 32768
  %277 = icmp eq i32 %276, 0
  br i1 %277, label %280, label %278

278:                                              ; preds = %267
  %279 = tail call ptr @Perl_cvgv_from_hek(ptr noundef nonnull %1) #29
  br label %283

280:                                              ; preds = %267
  %281 = getelementptr inbounds %struct.xpvcv, ptr %269, i64 0, i32 7
  %282 = load ptr, ptr %281, align 8, !tbaa !13
  br label %283

283:                                              ; preds = %278, %280
  %284 = phi ptr [ %279, %278 ], [ %282, %280 ]
  %285 = load ptr, ptr %284, align 8, !tbaa !169
  %286 = getelementptr inbounds %struct.xpvgv, ptr %285, i64 0, i32 5
  %287 = load ptr, ptr %286, align 8, !tbaa !13
  %288 = load ptr, ptr %287, align 8, !tbaa !139
  %289 = getelementptr inbounds %struct.xpvhv, ptr %288, i64 0, i32 3
  %290 = load i64, ptr %289, align 8, !tbaa !140
  %291 = add i64 %290, 1
  %292 = getelementptr inbounds ptr, ptr %275, i64 %291
  %293 = getelementptr inbounds %struct.xpvhv_aux, ptr %292, i64 0, i32 4
  %294 = load i32, ptr %293, align 4, !tbaa !142
  %295 = icmp eq i32 %294, 0
  %296 = load ptr, ptr %1, align 8, !tbaa !10
  %297 = getelementptr inbounds %struct.xpvcv, ptr %296, i64 0, i32 12
  %298 = load i32, ptr %297, align 4, !tbaa !14
  %299 = and i32 %298, 32768
  %300 = icmp eq i32 %299, 0
  br i1 %295, label %337, label %301

301:                                              ; preds = %283
  br i1 %300, label %307, label %302

302:                                              ; preds = %301
  %303 = tail call ptr @Perl_cvgv_from_hek(ptr noundef nonnull %1) #29
  %304 = load ptr, ptr %1, align 8, !tbaa !10
  %305 = getelementptr inbounds %struct.xpvcv, ptr %304, i64 0, i32 12
  %306 = load i32, ptr %305, align 4, !tbaa !14
  br label %310

307:                                              ; preds = %301
  %308 = getelementptr inbounds %struct.xpvcv, ptr %296, i64 0, i32 7
  %309 = load ptr, ptr %308, align 8, !tbaa !13
  br label %310

310:                                              ; preds = %302, %307
  %311 = phi i32 [ %306, %302 ], [ %298, %307 ]
  %312 = phi ptr [ %304, %302 ], [ %296, %307 ]
  %313 = phi ptr [ %303, %302 ], [ %309, %307 ]
  %314 = load ptr, ptr %313, align 8, !tbaa !169
  %315 = getelementptr inbounds %struct.xpvgv, ptr %314, i64 0, i32 5
  %316 = load ptr, ptr %315, align 8, !tbaa !13
  %317 = getelementptr inbounds %struct.hv, ptr %316, i64 0, i32 3
  %318 = load ptr, ptr %317, align 8, !tbaa !13
  %319 = and i32 %311, 32768
  %320 = icmp eq i32 %319, 0
  br i1 %320, label %323, label %321

321:                                              ; preds = %310
  %322 = tail call ptr @Perl_cvgv_from_hek(ptr noundef nonnull %1) #29
  br label %326

323:                                              ; preds = %310
  %324 = getelementptr inbounds %struct.xpvcv, ptr %312, i64 0, i32 7
  %325 = load ptr, ptr %324, align 8, !tbaa !13
  br label %326

326:                                              ; preds = %321, %323
  %327 = phi ptr [ %322, %321 ], [ %325, %323 ]
  %328 = load ptr, ptr %327, align 8, !tbaa !169
  %329 = getelementptr inbounds %struct.xpvgv, ptr %328, i64 0, i32 5
  %330 = load ptr, ptr %329, align 8, !tbaa !13
  %331 = load ptr, ptr %330, align 8, !tbaa !139
  %332 = getelementptr inbounds %struct.xpvhv, ptr %331, i64 0, i32 3
  %333 = load i64, ptr %332, align 8, !tbaa !140
  %334 = add i64 %333, 1
  %335 = getelementptr inbounds ptr, ptr %318, i64 %334
  %336 = load ptr, ptr %335, align 8, !tbaa !13
  br label %372

337:                                              ; preds = %283
  br i1 %300, label %343, label %338

338:                                              ; preds = %337
  %339 = tail call ptr @Perl_cvgv_from_hek(ptr noundef nonnull %1) #29
  %340 = load ptr, ptr %1, align 8, !tbaa !10
  %341 = getelementptr inbounds %struct.xpvcv, ptr %340, i64 0, i32 12
  %342 = load i32, ptr %341, align 4, !tbaa !14
  br label %346

343:                                              ; preds = %337
  %344 = getelementptr inbounds %struct.xpvcv, ptr %296, i64 0, i32 7
  %345 = load ptr, ptr %344, align 8, !tbaa !13
  br label %346

346:                                              ; preds = %338, %343
  %347 = phi i32 [ %342, %338 ], [ %298, %343 ]
  %348 = phi ptr [ %340, %338 ], [ %296, %343 ]
  %349 = phi ptr [ %339, %338 ], [ %345, %343 ]
  %350 = load ptr, ptr %349, align 8, !tbaa !169
  %351 = getelementptr inbounds %struct.xpvgv, ptr %350, i64 0, i32 5
  %352 = load ptr, ptr %351, align 8, !tbaa !13
  %353 = getelementptr inbounds %struct.hv, ptr %352, i64 0, i32 3
  %354 = load ptr, ptr %353, align 8, !tbaa !13
  %355 = and i32 %347, 32768
  %356 = icmp eq i32 %355, 0
  br i1 %356, label %359, label %357

357:                                              ; preds = %346
  %358 = tail call ptr @Perl_cvgv_from_hek(ptr noundef nonnull %1) #29
  br label %362

359:                                              ; preds = %346
  %360 = getelementptr inbounds %struct.xpvcv, ptr %348, i64 0, i32 7
  %361 = load ptr, ptr %360, align 8, !tbaa !13
  br label %362

362:                                              ; preds = %357, %359
  %363 = phi ptr [ %358, %357 ], [ %361, %359 ]
  %364 = load ptr, ptr %363, align 8, !tbaa !169
  %365 = getelementptr inbounds %struct.xpvgv, ptr %364, i64 0, i32 5
  %366 = load ptr, ptr %365, align 8, !tbaa !13
  %367 = load ptr, ptr %366, align 8, !tbaa !139
  %368 = getelementptr inbounds %struct.xpvhv, ptr %367, i64 0, i32 3
  %369 = load i64, ptr %368, align 8, !tbaa !140
  %370 = add i64 %369, 1
  %371 = getelementptr inbounds ptr, ptr %354, i64 %370
  br label %372

372:                                              ; preds = %362, %326
  %373 = phi ptr [ %336, %326 ], [ %371, %362 ]
  %374 = load ptr, ptr %373, align 8, !tbaa !13
  %375 = getelementptr inbounds %struct.hek, ptr %374, i64 0, i32 1
  %376 = load i32, ptr %375, align 4, !tbaa !292
  %377 = icmp eq i32 %376, 7
  br i1 %377, label %378, label %697

378:                                              ; preds = %372
  %379 = load ptr, ptr %1, align 8, !tbaa !10
  %380 = getelementptr inbounds %struct.xpvcv, ptr %379, i64 0, i32 12
  %381 = load i32, ptr %380, align 4, !tbaa !14
  %382 = and i32 %381, 32768
  %383 = icmp eq i32 %382, 0
  br i1 %383, label %389, label %384

384:                                              ; preds = %378
  %385 = tail call ptr @Perl_cvgv_from_hek(ptr noundef nonnull %1) #29
  %386 = load ptr, ptr %1, align 8, !tbaa !10
  %387 = getelementptr inbounds %struct.xpvcv, ptr %386, i64 0, i32 12
  %388 = load i32, ptr %387, align 4, !tbaa !14
  br label %392

389:                                              ; preds = %378
  %390 = getelementptr inbounds %struct.xpvcv, ptr %379, i64 0, i32 7
  %391 = load ptr, ptr %390, align 8, !tbaa !13
  br label %392

392:                                              ; preds = %384, %389
  %393 = phi i32 [ %388, %384 ], [ %381, %389 ]
  %394 = phi ptr [ %386, %384 ], [ %379, %389 ]
  %395 = phi ptr [ %385, %384 ], [ %391, %389 ]
  %396 = load ptr, ptr %395, align 8, !tbaa !169
  %397 = getelementptr inbounds %struct.xpvgv, ptr %396, i64 0, i32 5
  %398 = load ptr, ptr %397, align 8, !tbaa !13
  %399 = getelementptr inbounds %struct.hv, ptr %398, i64 0, i32 2
  %400 = load i32, ptr %399, align 4, !tbaa !56
  %401 = and i32 %400, 33554432
  %402 = icmp ne i32 %401, 0
  tail call void @llvm.assume(i1 %402)
  %403 = and i32 %393, 32768
  %404 = icmp eq i32 %403, 0
  br i1 %404, label %410, label %405

405:                                              ; preds = %392
  %406 = tail call ptr @Perl_cvgv_from_hek(ptr noundef nonnull %1) #29
  %407 = load ptr, ptr %1, align 8, !tbaa !10
  %408 = getelementptr inbounds %struct.xpvcv, ptr %407, i64 0, i32 12
  %409 = load i32, ptr %408, align 4, !tbaa !14
  br label %413

410:                                              ; preds = %392
  %411 = getelementptr inbounds %struct.xpvcv, ptr %394, i64 0, i32 7
  %412 = load ptr, ptr %411, align 8, !tbaa !13
  br label %413

413:                                              ; preds = %405, %410
  %414 = phi i32 [ %409, %405 ], [ %393, %410 ]
  %415 = phi ptr [ %407, %405 ], [ %394, %410 ]
  %416 = phi ptr [ %406, %405 ], [ %412, %410 ]
  %417 = load ptr, ptr %416, align 8, !tbaa !169
  %418 = getelementptr inbounds %struct.xpvgv, ptr %417, i64 0, i32 5
  %419 = load ptr, ptr %418, align 8, !tbaa !13
  %420 = getelementptr inbounds %struct.hv, ptr %419, i64 0, i32 3
  %421 = load ptr, ptr %420, align 8, !tbaa !13
  %422 = and i32 %414, 32768
  %423 = icmp eq i32 %422, 0
  br i1 %423, label %429, label %424

424:                                              ; preds = %413
  %425 = tail call ptr @Perl_cvgv_from_hek(ptr noundef nonnull %1) #29
  %426 = load ptr, ptr %1, align 8, !tbaa !10
  %427 = getelementptr inbounds %struct.xpvcv, ptr %426, i64 0, i32 12
  %428 = load i32, ptr %427, align 4, !tbaa !14
  br label %432

429:                                              ; preds = %413
  %430 = getelementptr inbounds %struct.xpvcv, ptr %415, i64 0, i32 7
  %431 = load ptr, ptr %430, align 8, !tbaa !13
  br label %432

432:                                              ; preds = %424, %429
  %433 = phi i32 [ %428, %424 ], [ %414, %429 ]
  %434 = phi ptr [ %426, %424 ], [ %415, %429 ]
  %435 = phi ptr [ %425, %424 ], [ %431, %429 ]
  %436 = load ptr, ptr %435, align 8, !tbaa !169
  %437 = getelementptr inbounds %struct.xpvgv, ptr %436, i64 0, i32 5
  %438 = load ptr, ptr %437, align 8, !tbaa !13
  %439 = load ptr, ptr %438, align 8, !tbaa !139
  %440 = getelementptr inbounds %struct.xpvhv, ptr %439, i64 0, i32 3
  %441 = load i64, ptr %440, align 8, !tbaa !140
  %442 = add i64 %441, 1
  %443 = getelementptr inbounds ptr, ptr %421, i64 %442
  %444 = load ptr, ptr %443, align 8, !tbaa !13
  %445 = icmp ne ptr %444, null
  tail call void @llvm.assume(i1 %445)
  %446 = and i32 %433, 32768
  %447 = icmp eq i32 %446, 0
  br i1 %447, label %453, label %448

448:                                              ; preds = %432
  %449 = tail call ptr @Perl_cvgv_from_hek(ptr noundef nonnull %1) #29
  %450 = load ptr, ptr %1, align 8, !tbaa !10
  %451 = getelementptr inbounds %struct.xpvcv, ptr %450, i64 0, i32 12
  %452 = load i32, ptr %451, align 4, !tbaa !14
  br label %456

453:                                              ; preds = %432
  %454 = getelementptr inbounds %struct.xpvcv, ptr %434, i64 0, i32 7
  %455 = load ptr, ptr %454, align 8, !tbaa !13
  br label %456

456:                                              ; preds = %448, %453
  %457 = phi i32 [ %452, %448 ], [ %433, %453 ]
  %458 = phi ptr [ %450, %448 ], [ %434, %453 ]
  %459 = phi ptr [ %449, %448 ], [ %455, %453 ]
  %460 = load ptr, ptr %459, align 8, !tbaa !169
  %461 = getelementptr inbounds %struct.xpvgv, ptr %460, i64 0, i32 5
  %462 = load ptr, ptr %461, align 8, !tbaa !13
  %463 = getelementptr inbounds %struct.hv, ptr %462, i64 0, i32 3
  %464 = load ptr, ptr %463, align 8, !tbaa !13
  %465 = and i32 %457, 32768
  %466 = icmp eq i32 %465, 0
  br i1 %466, label %469, label %467

467:                                              ; preds = %456
  %468 = tail call ptr @Perl_cvgv_from_hek(ptr noundef nonnull %1) #29
  br label %472

469:                                              ; preds = %456
  %470 = getelementptr inbounds %struct.xpvcv, ptr %458, i64 0, i32 7
  %471 = load ptr, ptr %470, align 8, !tbaa !13
  br label %472

472:                                              ; preds = %467, %469
  %473 = phi ptr [ %468, %467 ], [ %471, %469 ]
  %474 = load ptr, ptr %473, align 8, !tbaa !169
  %475 = getelementptr inbounds %struct.xpvgv, ptr %474, i64 0, i32 5
  %476 = load ptr, ptr %475, align 8, !tbaa !13
  %477 = load ptr, ptr %476, align 8, !tbaa !139
  %478 = getelementptr inbounds %struct.xpvhv, ptr %477, i64 0, i32 3
  %479 = load i64, ptr %478, align 8, !tbaa !140
  %480 = add i64 %479, 1
  %481 = getelementptr inbounds ptr, ptr %464, i64 %480
  %482 = getelementptr inbounds %struct.xpvhv_aux, ptr %481, i64 0, i32 4
  %483 = load i32, ptr %482, align 4, !tbaa !142
  %484 = icmp eq i32 %483, 0
  %485 = load ptr, ptr %1, align 8, !tbaa !10
  %486 = getelementptr inbounds %struct.xpvcv, ptr %485, i64 0, i32 12
  %487 = load i32, ptr %486, align 4, !tbaa !14
  %488 = and i32 %487, 32768
  %489 = icmp eq i32 %488, 0
  br i1 %484, label %526, label %490

490:                                              ; preds = %472
  br i1 %489, label %496, label %491

491:                                              ; preds = %490
  %492 = tail call ptr @Perl_cvgv_from_hek(ptr noundef nonnull %1) #29
  %493 = load ptr, ptr %1, align 8, !tbaa !10
  %494 = getelementptr inbounds %struct.xpvcv, ptr %493, i64 0, i32 12
  %495 = load i32, ptr %494, align 4, !tbaa !14
  br label %499

496:                                              ; preds = %490
  %497 = getelementptr inbounds %struct.xpvcv, ptr %485, i64 0, i32 7
  %498 = load ptr, ptr %497, align 8, !tbaa !13
  br label %499

499:                                              ; preds = %491, %496
  %500 = phi i32 [ %495, %491 ], [ %487, %496 ]
  %501 = phi ptr [ %493, %491 ], [ %485, %496 ]
  %502 = phi ptr [ %492, %491 ], [ %498, %496 ]
  %503 = load ptr, ptr %502, align 8, !tbaa !169
  %504 = getelementptr inbounds %struct.xpvgv, ptr %503, i64 0, i32 5
  %505 = load ptr, ptr %504, align 8, !tbaa !13
  %506 = getelementptr inbounds %struct.hv, ptr %505, i64 0, i32 3
  %507 = load ptr, ptr %506, align 8, !tbaa !13
  %508 = and i32 %500, 32768
  %509 = icmp eq i32 %508, 0
  br i1 %509, label %512, label %510

510:                                              ; preds = %499
  %511 = tail call ptr @Perl_cvgv_from_hek(ptr noundef nonnull %1) #29
  br label %515

512:                                              ; preds = %499
  %513 = getelementptr inbounds %struct.xpvcv, ptr %501, i64 0, i32 7
  %514 = load ptr, ptr %513, align 8, !tbaa !13
  br label %515

515:                                              ; preds = %510, %512
  %516 = phi ptr [ %511, %510 ], [ %514, %512 ]
  %517 = load ptr, ptr %516, align 8, !tbaa !169
  %518 = getelementptr inbounds %struct.xpvgv, ptr %517, i64 0, i32 5
  %519 = load ptr, ptr %518, align 8, !tbaa !13
  %520 = load ptr, ptr %519, align 8, !tbaa !139
  %521 = getelementptr inbounds %struct.xpvhv, ptr %520, i64 0, i32 3
  %522 = load i64, ptr %521, align 8, !tbaa !140
  %523 = add i64 %522, 1
  %524 = getelementptr inbounds ptr, ptr %507, i64 %523
  %525 = load ptr, ptr %524, align 8, !tbaa !13
  br label %561

526:                                              ; preds = %472
  br i1 %489, label %532, label %527

527:                                              ; preds = %526
  %528 = tail call ptr @Perl_cvgv_from_hek(ptr noundef nonnull %1) #29
  %529 = load ptr, ptr %1, align 8, !tbaa !10
  %530 = getelementptr inbounds %struct.xpvcv, ptr %529, i64 0, i32 12
  %531 = load i32, ptr %530, align 4, !tbaa !14
  br label %535

532:                                              ; preds = %526
  %533 = getelementptr inbounds %struct.xpvcv, ptr %485, i64 0, i32 7
  %534 = load ptr, ptr %533, align 8, !tbaa !13
  br label %535

535:                                              ; preds = %527, %532
  %536 = phi i32 [ %531, %527 ], [ %487, %532 ]
  %537 = phi ptr [ %529, %527 ], [ %485, %532 ]
  %538 = phi ptr [ %528, %527 ], [ %534, %532 ]
  %539 = load ptr, ptr %538, align 8, !tbaa !169
  %540 = getelementptr inbounds %struct.xpvgv, ptr %539, i64 0, i32 5
  %541 = load ptr, ptr %540, align 8, !tbaa !13
  %542 = getelementptr inbounds %struct.hv, ptr %541, i64 0, i32 3
  %543 = load ptr, ptr %542, align 8, !tbaa !13
  %544 = and i32 %536, 32768
  %545 = icmp eq i32 %544, 0
  br i1 %545, label %548, label %546

546:                                              ; preds = %535
  %547 = tail call ptr @Perl_cvgv_from_hek(ptr noundef nonnull %1) #29
  br label %551

548:                                              ; preds = %535
  %549 = getelementptr inbounds %struct.xpvcv, ptr %537, i64 0, i32 7
  %550 = load ptr, ptr %549, align 8, !tbaa !13
  br label %551

551:                                              ; preds = %546, %548
  %552 = phi ptr [ %547, %546 ], [ %550, %548 ]
  %553 = load ptr, ptr %552, align 8, !tbaa !169
  %554 = getelementptr inbounds %struct.xpvgv, ptr %553, i64 0, i32 5
  %555 = load ptr, ptr %554, align 8, !tbaa !13
  %556 = load ptr, ptr %555, align 8, !tbaa !139
  %557 = getelementptr inbounds %struct.xpvhv, ptr %556, i64 0, i32 3
  %558 = load i64, ptr %557, align 8, !tbaa !140
  %559 = add i64 %558, 1
  %560 = getelementptr inbounds ptr, ptr %543, i64 %559
  br label %561

561:                                              ; preds = %515, %551
  %562 = phi ptr [ %525, %515 ], [ %560, %551 ]
  %563 = load ptr, ptr %562, align 8, !tbaa !13
  %564 = icmp ne ptr %563, null
  tail call void @llvm.assume(i1 %564)
  %565 = load ptr, ptr %1, align 8, !tbaa !10
  %566 = getelementptr inbounds %struct.xpvcv, ptr %565, i64 0, i32 12
  %567 = load i32, ptr %566, align 4, !tbaa !14
  %568 = and i32 %567, 32768
  %569 = icmp eq i32 %568, 0
  br i1 %569, label %575, label %570

570:                                              ; preds = %561
  %571 = tail call ptr @Perl_cvgv_from_hek(ptr noundef nonnull %1) #29
  %572 = load ptr, ptr %1, align 8, !tbaa !10
  %573 = getelementptr inbounds %struct.xpvcv, ptr %572, i64 0, i32 12
  %574 = load i32, ptr %573, align 4, !tbaa !14
  br label %578

575:                                              ; preds = %561
  %576 = getelementptr inbounds %struct.xpvcv, ptr %565, i64 0, i32 7
  %577 = load ptr, ptr %576, align 8, !tbaa !13
  br label %578

578:                                              ; preds = %570, %575
  %579 = phi i32 [ %574, %570 ], [ %567, %575 ]
  %580 = phi ptr [ %572, %570 ], [ %565, %575 ]
  %581 = phi ptr [ %571, %570 ], [ %577, %575 ]
  %582 = load ptr, ptr %581, align 8, !tbaa !169
  %583 = getelementptr inbounds %struct.xpvgv, ptr %582, i64 0, i32 5
  %584 = load ptr, ptr %583, align 8, !tbaa !13
  %585 = getelementptr inbounds %struct.hv, ptr %584, i64 0, i32 3
  %586 = load ptr, ptr %585, align 8, !tbaa !13
  %587 = and i32 %579, 32768
  %588 = icmp eq i32 %587, 0
  br i1 %588, label %591, label %589

589:                                              ; preds = %578
  %590 = tail call ptr @Perl_cvgv_from_hek(ptr noundef nonnull %1) #29
  br label %594

591:                                              ; preds = %578
  %592 = getelementptr inbounds %struct.xpvcv, ptr %580, i64 0, i32 7
  %593 = load ptr, ptr %592, align 8, !tbaa !13
  br label %594

594:                                              ; preds = %589, %591
  %595 = phi ptr [ %590, %589 ], [ %593, %591 ]
  %596 = load ptr, ptr %595, align 8, !tbaa !169
  %597 = getelementptr inbounds %struct.xpvgv, ptr %596, i64 0, i32 5
  %598 = load ptr, ptr %597, align 8, !tbaa !13
  %599 = load ptr, ptr %598, align 8, !tbaa !139
  %600 = getelementptr inbounds %struct.xpvhv, ptr %599, i64 0, i32 3
  %601 = load i64, ptr %600, align 8, !tbaa !140
  %602 = add i64 %601, 1
  %603 = getelementptr inbounds ptr, ptr %586, i64 %602
  %604 = getelementptr inbounds %struct.xpvhv_aux, ptr %603, i64 0, i32 4
  %605 = load i32, ptr %604, align 4, !tbaa !142
  %606 = icmp eq i32 %605, 0
  %607 = load ptr, ptr %1, align 8, !tbaa !10
  %608 = getelementptr inbounds %struct.xpvcv, ptr %607, i64 0, i32 12
  %609 = load i32, ptr %608, align 4, !tbaa !14
  %610 = and i32 %609, 32768
  %611 = icmp eq i32 %610, 0
  br i1 %606, label %648, label %612

612:                                              ; preds = %594
  br i1 %611, label %618, label %613

613:                                              ; preds = %612
  %614 = tail call ptr @Perl_cvgv_from_hek(ptr noundef nonnull %1) #29
  %615 = load ptr, ptr %1, align 8, !tbaa !10
  %616 = getelementptr inbounds %struct.xpvcv, ptr %615, i64 0, i32 12
  %617 = load i32, ptr %616, align 4, !tbaa !14
  br label %621

618:                                              ; preds = %612
  %619 = getelementptr inbounds %struct.xpvcv, ptr %607, i64 0, i32 7
  %620 = load ptr, ptr %619, align 8, !tbaa !13
  br label %621

621:                                              ; preds = %613, %618
  %622 = phi i32 [ %617, %613 ], [ %609, %618 ]
  %623 = phi ptr [ %615, %613 ], [ %607, %618 ]
  %624 = phi ptr [ %614, %613 ], [ %620, %618 ]
  %625 = load ptr, ptr %624, align 8, !tbaa !169
  %626 = getelementptr inbounds %struct.xpvgv, ptr %625, i64 0, i32 5
  %627 = load ptr, ptr %626, align 8, !tbaa !13
  %628 = getelementptr inbounds %struct.hv, ptr %627, i64 0, i32 3
  %629 = load ptr, ptr %628, align 8, !tbaa !13
  %630 = and i32 %622, 32768
  %631 = icmp eq i32 %630, 0
  br i1 %631, label %634, label %632

632:                                              ; preds = %621
  %633 = tail call ptr @Perl_cvgv_from_hek(ptr noundef nonnull %1) #29
  br label %637

634:                                              ; preds = %621
  %635 = getelementptr inbounds %struct.xpvcv, ptr %623, i64 0, i32 7
  %636 = load ptr, ptr %635, align 8, !tbaa !13
  br label %637

637:                                              ; preds = %632, %634
  %638 = phi ptr [ %633, %632 ], [ %636, %634 ]
  %639 = load ptr, ptr %638, align 8, !tbaa !169
  %640 = getelementptr inbounds %struct.xpvgv, ptr %639, i64 0, i32 5
  %641 = load ptr, ptr %640, align 8, !tbaa !13
  %642 = load ptr, ptr %641, align 8, !tbaa !139
  %643 = getelementptr inbounds %struct.xpvhv, ptr %642, i64 0, i32 3
  %644 = load i64, ptr %643, align 8, !tbaa !140
  %645 = add i64 %644, 1
  %646 = getelementptr inbounds ptr, ptr %629, i64 %645
  %647 = load ptr, ptr %646, align 8, !tbaa !13
  br label %683

648:                                              ; preds = %594
  br i1 %611, label %654, label %649

649:                                              ; preds = %648
  %650 = tail call ptr @Perl_cvgv_from_hek(ptr noundef nonnull %1) #29
  %651 = load ptr, ptr %1, align 8, !tbaa !10
  %652 = getelementptr inbounds %struct.xpvcv, ptr %651, i64 0, i32 12
  %653 = load i32, ptr %652, align 4, !tbaa !14
  br label %657

654:                                              ; preds = %648
  %655 = getelementptr inbounds %struct.xpvcv, ptr %607, i64 0, i32 7
  %656 = load ptr, ptr %655, align 8, !tbaa !13
  br label %657

657:                                              ; preds = %649, %654
  %658 = phi i32 [ %653, %649 ], [ %609, %654 ]
  %659 = phi ptr [ %651, %649 ], [ %607, %654 ]
  %660 = phi ptr [ %650, %649 ], [ %656, %654 ]
  %661 = load ptr, ptr %660, align 8, !tbaa !169
  %662 = getelementptr inbounds %struct.xpvgv, ptr %661, i64 0, i32 5
  %663 = load ptr, ptr %662, align 8, !tbaa !13
  %664 = getelementptr inbounds %struct.hv, ptr %663, i64 0, i32 3
  %665 = load ptr, ptr %664, align 8, !tbaa !13
  %666 = and i32 %658, 32768
  %667 = icmp eq i32 %666, 0
  br i1 %667, label %670, label %668

668:                                              ; preds = %657
  %669 = tail call ptr @Perl_cvgv_from_hek(ptr noundef nonnull %1) #29
  br label %673

670:                                              ; preds = %657
  %671 = getelementptr inbounds %struct.xpvcv, ptr %659, i64 0, i32 7
  %672 = load ptr, ptr %671, align 8, !tbaa !13
  br label %673

673:                                              ; preds = %668, %670
  %674 = phi ptr [ %669, %668 ], [ %672, %670 ]
  %675 = load ptr, ptr %674, align 8, !tbaa !169
  %676 = getelementptr inbounds %struct.xpvgv, ptr %675, i64 0, i32 5
  %677 = load ptr, ptr %676, align 8, !tbaa !13
  %678 = load ptr, ptr %677, align 8, !tbaa !139
  %679 = getelementptr inbounds %struct.xpvhv, ptr %678, i64 0, i32 3
  %680 = load i64, ptr %679, align 8, !tbaa !140
  %681 = add i64 %680, 1
  %682 = getelementptr inbounds ptr, ptr %665, i64 %681
  br label %683

683:                                              ; preds = %673, %637
  %684 = phi ptr [ %647, %637 ], [ %682, %673 ]
  %685 = load ptr, ptr %684, align 8, !tbaa !13
  %686 = getelementptr inbounds %struct.hek, ptr %685, i64 0, i32 2
  %687 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %686, ptr noundef nonnull dereferenceable(8) @.str.210) #30
  %688 = icmp eq i32 %687, 0
  br i1 %688, label %689, label %697

689:                                              ; preds = %683, %33
  br i1 %8, label %699, label %690

690:                                              ; preds = %689
  %691 = tail call zeroext i1 @Perl_ckwarn_d(i32 noundef 19) #29
  br i1 %691, label %692, label %699

692:                                              ; preds = %690
  br i1 %34, label %693, label %697

693:                                              ; preds = %692
  %694 = load ptr, ptr %2, align 8, !tbaa !6
  %695 = tail call i32 @Perl_sv_cmp_flags(ptr noundef %35, ptr noundef %694, i32 noundef 2) #29
  %696 = icmp eq i32 %695, 0
  br i1 %696, label %699, label %697

697:                                              ; preds = %241, %203, %118, %79, %693, %692, %683, %372, %62, %48
  %698 = select i1 %8, ptr @.str.211, ptr @.str.113
  tail call void (i32, ptr, ...) @Perl_warner(i32 noundef 19, ptr noundef nonnull %698, ptr noundef %0) #29
  br label %699

699:                                              ; preds = %689, %690, %693, %697, %30
  ret void
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare ptr @memchr(ptr noundef, i32 noundef, i64 noundef) local_unnamed_addr #7

declare ptr @Perl_gv_fetchsv(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #6

declare void @Perl_sv_setpvf(ptr noundef, ptr noundef, ...) local_unnamed_addr #6

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare ptr @strrchr(ptr noundef, i32 noundef) local_unnamed_addr #7

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare i32 @strcmp(ptr nocapture noundef, ptr nocapture noundef) local_unnamed_addr #7

declare void @Perl_gv_init_pvn(ptr noundef, ptr noundef, ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #6

declare i32 @Perl_sv_cmp_flags(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_newCONSTSUB_flags(ptr noundef %0, ptr noundef %1, i64 noundef %2, i32 noundef %3, ptr noundef %4) local_unnamed_addr #4 {
  %6 = alloca ptr, align 8
  store ptr %4, ptr %6, align 8, !tbaa !6
  %7 = load ptr, ptr @PL_curcop, align 8, !tbaa !6
  %8 = getelementptr inbounds %struct.cop, ptr %7, i64 0, i32 9
  %9 = load ptr, ptr %8, align 8, !tbaa !40
  %10 = icmp eq ptr %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %5
  %12 = load ptr, ptr %9, align 8, !tbaa !169
  %13 = getelementptr inbounds %struct.xpvgv, ptr %12, i64 0, i32 4
  %14 = load ptr, ptr %13, align 8, !tbaa !13
  %15 = getelementptr inbounds %struct.hek, ptr %14, i64 0, i32 2, i64 2
  br label %16

16:                                               ; preds = %5, %11
  %17 = phi ptr [ %15, %11 ], [ null, %5 ]
  tail call void @Perl_push_scope() #29
  %18 = load ptr, ptr @PL_curcop, align 8, !tbaa !6
  %19 = icmp eq ptr %18, @PL_compiling
  br i1 %19, label %32, label %20

20:                                               ; preds = %16
  tail call void @Perl_save_vptr(ptr noundef nonnull @PL_curcop) #29
  %21 = load ptr, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 12), align 8, !tbaa !44
  tail call void @Perl_save_pushptr(ptr noundef %21, i32 noundef 6) #29
  %22 = load ptr, ptr @PL_curcop, align 8, !tbaa !6
  %23 = getelementptr inbounds %struct.cop, ptr %22, i64 0, i32 12
  %24 = load ptr, ptr %23, align 8, !tbaa !44
  %25 = ptrtoint ptr %24 to i64
  switch i64 %25, label %26 [
    i64 0, label %30
    i64 8, label %30
    i64 16, label %30
  ]

26:                                               ; preds = %20
  %27 = load i64, ptr %24, align 8, !tbaa !88
  %28 = add i64 %27, 8
  %29 = tail call noalias ptr @malloc(i64 noundef %28) #32
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %29, ptr nonnull align 1 %24, i64 %28, i1 false)
  br label %30

30:                                               ; preds = %20, %20, %20, %26
  %31 = phi ptr [ %29, %26 ], [ %24, %20 ], [ %24, %20 ], [ %24, %20 ]
  store ptr %31, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 12), align 8, !tbaa !44
  store ptr @PL_compiling, ptr @PL_curcop, align 8, !tbaa !6
  br label %32

32:                                               ; preds = %30, %16
  tail call void @Perl_save_I32(ptr noundef nonnull getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 7)) #29
  %33 = load ptr, ptr @PL_parser, align 8, !tbaa !6
  %34 = icmp eq ptr %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %32
  %36 = getelementptr inbounds %struct.yy_parser, ptr %33, i64 0, i32 41
  %37 = load i32, ptr %36, align 8, !tbaa !238
  br label %38

38:                                               ; preds = %32, %35
  %39 = phi i32 [ %37, %35 ], [ -1, %32 ]
  %40 = load ptr, ptr @PL_curcop, align 8, !tbaa !6
  %41 = getelementptr inbounds %struct.cop, ptr %40, i64 0, i32 7
  store i32 %39, ptr %41, align 4, !tbaa !146
  tail call void @Perl_save_hints() #29
  %42 = load i32, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 10), align 8, !tbaa !77
  %43 = and i32 %42, -257
  store i32 %43, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 10), align 8, !tbaa !77
  %44 = icmp eq ptr %0, null
  br i1 %44, label %49, label %45

45:                                               ; preds = %38
  tail call void @Perl_save_generic_svref(ptr noundef nonnull @PL_curstash) #29
  %46 = getelementptr inbounds %struct.hv, ptr %0, i64 0, i32 1
  %47 = load i32, ptr %46, align 8, !tbaa !298
  %48 = add i32 %47, 1
  store i32 %48, ptr %46, align 8, !tbaa !298
  store ptr %0, ptr @PL_curstash, align 8, !tbaa !6
  br label %49

49:                                               ; preds = %45, %38
  %50 = icmp eq ptr %4, null
  br i1 %50, label %57, label %51

51:                                               ; preds = %49
  tail call void @Perl_save_pushptr(ptr noundef nonnull %4, i32 noundef 11) #29
  %52 = getelementptr inbounds %struct.sv, ptr %4, i64 0, i32 2
  %53 = load i32, ptr %52, align 4, !tbaa !84
  %54 = and i32 %53, 255
  %55 = icmp eq i32 %54, 11
  %56 = select i1 %55, ptr @const_av_xsub, ptr @const_sv_xsub
  br label %57

57:                                               ; preds = %49, %51
  %58 = phi ptr [ %56, %51 ], [ @const_sv_xsub, %49 ]
  %59 = icmp eq ptr %17, null
  %60 = select i1 %59, ptr @.str.19, ptr %17
  %61 = or i32 %3, 1
  %62 = call ptr @Perl_newXS_len_flags(ptr noundef %1, i64 noundef %2, ptr noundef nonnull %58, ptr noundef nonnull %60, ptr noundef nonnull @.str.19, ptr noundef nonnull %6, i32 noundef %61)
  %63 = load ptr, ptr %6, align 8, !tbaa !6
  %64 = icmp eq ptr %63, null
  br i1 %64, label %69, label %65

65:                                               ; preds = %57
  %66 = getelementptr inbounds %struct.sv, ptr %63, i64 0, i32 1
  %67 = load i32, ptr %66, align 8, !tbaa !42
  %68 = add i32 %67, 1
  store i32 %68, ptr %66, align 8, !tbaa !42
  br label %69

69:                                               ; preds = %57, %65
  %70 = load ptr, ptr %62, align 8, !tbaa !10
  %71 = getelementptr inbounds %struct.xpvcv, ptr %70, i64 0, i32 5
  store ptr %63, ptr %71, align 8, !tbaa !13
  %72 = load ptr, ptr %62, align 8, !tbaa !10
  %73 = getelementptr inbounds %struct.xpvcv, ptr %72, i64 0, i32 12
  %74 = load i32, ptr %73, align 4, !tbaa !14
  %75 = or i32 %74, 4
  store i32 %75, ptr %73, align 4, !tbaa !14
  call void @Perl_pop_scope() #29
  ret ptr %62
}

declare void @Perl_sv_force_normal_flags(ptr noundef, i32 noundef) local_unnamed_addr #6

declare i32 @Perl_sv_backoff(ptr noundef) local_unnamed_addr #6

declare void @Perl_cvgv_set(ptr noundef, ptr noundef) local_unnamed_addr #6

declare void @Perl_mro_method_changed_in(ptr noundef) local_unnamed_addr #6

declare ptr @Perl_cv_name(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc zeroext i1 @S_process_special_blocks(i32 noundef %0, ptr noundef readonly %1, ptr nocapture noundef readonly %2, ptr noundef %3) unnamed_addr #4 {
  %5 = tail call ptr @strrchr(ptr noundef nonnull dereferenceable(1) %1, i32 noundef 58) #30
  %6 = icmp eq ptr %5, null
  %7 = getelementptr inbounds i8, ptr %5, i64 1
  %8 = select i1 %6, ptr %1, ptr %7
  %9 = load i8, ptr %8, align 1, !tbaa !13
  switch i8 %9, label %141 [
    i8 66, label %10
    i8 69, label %102
    i8 85, label %107
    i8 67, label %112
    i8 73, label %121
  ]

10:                                               ; preds = %4
  %11 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %8, ptr noundef nonnull dereferenceable(6) @.str.80) #30
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %141

13:                                               ; preds = %10
  %14 = load i32, ptr @PL_scopestack_ix, align 4, !tbaa !52
  %15 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !6
  %16 = load ptr, ptr %3, align 8, !tbaa !10
  %17 = getelementptr inbounds %struct.xpvcv, ptr %16, i64 0, i32 12
  %18 = load i32, ptr %17, align 4, !tbaa !14
  %19 = and i32 %18, 32768
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %23, label %21

21:                                               ; preds = %13
  %22 = tail call ptr @Perl_cvgv_from_hek(ptr noundef nonnull %3) #29
  br label %23

23:                                               ; preds = %13, %21
  %24 = icmp ne i32 %0, 0
  %25 = load i32, ptr @PL_savestack_ix, align 4
  %26 = icmp sgt i32 %25, %0
  %27 = select i1 %24, i1 %26, i1 false
  br i1 %27, label %28, label %29

28:                                               ; preds = %23
  tail call void @Perl_leave_scope(i32 noundef %0) #29
  br label %29

29:                                               ; preds = %28, %23
  tail call void @Perl_push_scope() #29
  %30 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %31 = getelementptr inbounds %struct.stackinfo, ptr %30, i64 0, i32 3
  %32 = load ptr, ptr %31, align 8, !tbaa !299
  %33 = icmp eq ptr %32, null
  br i1 %33, label %34, label %39

34:                                               ; preds = %29
  %35 = tail call ptr @Perl_new_stackinfo(i32 noundef 32, i32 noundef 22) #29
  %36 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %37 = getelementptr inbounds %struct.stackinfo, ptr %35, i64 0, i32 2
  store ptr %36, ptr %37, align 8, !tbaa !300
  %38 = getelementptr inbounds %struct.stackinfo, ptr %36, i64 0, i32 3
  store ptr %35, ptr %38, align 8, !tbaa !299
  br label %39

39:                                               ; preds = %34, %29
  %40 = phi ptr [ %32, %29 ], [ %35, %34 ]
  %41 = getelementptr inbounds %struct.stackinfo, ptr %40, i64 0, i32 6
  store i32 9, ptr %41, align 8, !tbaa !301
  %42 = getelementptr inbounds %struct.stackinfo, ptr %40, i64 0, i32 4
  store i32 -1, ptr %42, align 8, !tbaa !243
  %43 = load ptr, ptr %40, align 8, !tbaa !302
  %44 = load ptr, ptr %43, align 8, !tbaa !123
  %45 = getelementptr inbounds %struct.xpvav, ptr %44, i64 0, i32 2
  store i64 0, ptr %45, align 8, !tbaa !125
  %46 = load ptr, ptr @PL_stack_base, align 8, !tbaa !6
  %47 = ptrtoint ptr %15 to i64
  %48 = ptrtoint ptr %46 to i64
  %49 = sub i64 %47, %48
  %50 = ashr exact i64 %49, 3
  %51 = load ptr, ptr @PL_curstack, align 8, !tbaa !6
  %52 = load ptr, ptr %51, align 8, !tbaa !123
  %53 = getelementptr inbounds %struct.xpvav, ptr %52, i64 0, i32 2
  store i64 %50, ptr %53, align 8, !tbaa !125
  %54 = getelementptr inbounds %struct.av, ptr %43, i64 0, i32 3
  %55 = load ptr, ptr %54, align 8, !tbaa !13
  store ptr %55, ptr @PL_stack_base, align 8, !tbaa !6
  %56 = load ptr, ptr %40, align 8, !tbaa !302
  %57 = load ptr, ptr %56, align 8, !tbaa !123
  %58 = getelementptr inbounds %struct.xpvav, ptr %57, i64 0, i32 3
  %59 = load i64, ptr %58, align 8, !tbaa !303
  %60 = getelementptr inbounds ptr, ptr %55, i64 %59
  store ptr %60, ptr @PL_stack_max, align 8, !tbaa !6
  %61 = load ptr, ptr %40, align 8, !tbaa !302
  %62 = load ptr, ptr %61, align 8, !tbaa !123
  %63 = getelementptr inbounds %struct.xpvav, ptr %62, i64 0, i32 2
  %64 = load i64, ptr %63, align 8, !tbaa !125
  %65 = getelementptr inbounds ptr, ptr %55, i64 %64
  store ptr %65, ptr @PL_stack_sp, align 8, !tbaa !6
  %66 = load ptr, ptr %40, align 8, !tbaa !302
  store ptr %66, ptr @PL_curstack, align 8, !tbaa !6
  store ptr %40, ptr @PL_curstackinfo, align 8, !tbaa !6
  tail call void @Perl_save_sptr(ptr noundef nonnull getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 9)) #29
  tail call void @Perl_save_I32(ptr noundef nonnull getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 7)) #29
  tail call void @Perl_save_vptr(ptr noundef nonnull @PL_curcop) #29
  tail call void @Perl_av_create_and_push(ptr noundef nonnull @PL_beginav, ptr noundef nonnull %3) #29
  %67 = getelementptr inbounds %struct.gv, ptr %2, i64 0, i32 3
  %68 = load ptr, ptr %67, align 8, !tbaa !13
  %69 = getelementptr inbounds %struct.gp, ptr %68, i64 0, i32 2
  store ptr null, ptr %69, align 8, !tbaa !147
  %70 = load ptr, ptr @PL_beginav, align 8, !tbaa !6
  tail call void @Perl_call_list(i32 noundef %14, ptr noundef %70) #29
  %71 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !6
  %72 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %73 = getelementptr inbounds %struct.stackinfo, ptr %72, i64 0, i32 2
  %74 = load ptr, ptr %73, align 8, !tbaa !300
  %75 = icmp eq ptr %74, null
  br i1 %75, label %76, label %77

76:                                               ; preds = %39
  tail call void @Perl_croak_popstack() #29
  br label %77

77:                                               ; preds = %39, %76
  %78 = load ptr, ptr @PL_stack_base, align 8, !tbaa !6
  %79 = ptrtoint ptr %71 to i64
  %80 = ptrtoint ptr %78 to i64
  %81 = sub i64 %79, %80
  %82 = ashr exact i64 %81, 3
  %83 = load ptr, ptr @PL_curstack, align 8, !tbaa !6
  %84 = load ptr, ptr %83, align 8, !tbaa !123
  %85 = getelementptr inbounds %struct.xpvav, ptr %84, i64 0, i32 2
  store i64 %82, ptr %85, align 8, !tbaa !125
  %86 = load ptr, ptr %74, align 8, !tbaa !302
  %87 = getelementptr inbounds %struct.av, ptr %86, i64 0, i32 3
  %88 = load ptr, ptr %87, align 8, !tbaa !13
  store ptr %88, ptr @PL_stack_base, align 8, !tbaa !6
  %89 = load ptr, ptr %74, align 8, !tbaa !302
  %90 = load ptr, ptr %89, align 8, !tbaa !123
  %91 = getelementptr inbounds %struct.xpvav, ptr %90, i64 0, i32 3
  %92 = load i64, ptr %91, align 8, !tbaa !303
  %93 = getelementptr inbounds ptr, ptr %88, i64 %92
  store ptr %93, ptr @PL_stack_max, align 8, !tbaa !6
  %94 = load ptr, ptr %74, align 8, !tbaa !302
  %95 = load ptr, ptr %94, align 8, !tbaa !123
  %96 = getelementptr inbounds %struct.xpvav, ptr %95, i64 0, i32 2
  %97 = load i64, ptr %96, align 8, !tbaa !125
  %98 = getelementptr inbounds ptr, ptr %88, i64 %97
  store ptr %98, ptr @PL_stack_sp, align 8, !tbaa !6
  %99 = load ptr, ptr %74, align 8, !tbaa !302
  store ptr %99, ptr @PL_curstack, align 8, !tbaa !6
  store ptr %74, ptr @PL_curstackinfo, align 8, !tbaa !6
  tail call void @Perl_pop_scope() #29
  %100 = load i8, ptr @PL_savebegin, align 1, !tbaa !268, !range !212, !noundef !304
  %101 = icmp eq i8 %100, 0
  br label %141

102:                                              ; preds = %4
  %103 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %8, ptr noundef nonnull dereferenceable(4) @.str.114) #30
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %141

105:                                              ; preds = %102
  %106 = tail call ptr @Perl_av_create_and_unshift_one(ptr noundef nonnull @PL_endav, ptr noundef %3) #29
  br label %129

107:                                              ; preds = %4
  %108 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %8, ptr noundef nonnull dereferenceable(10) @.str.115) #30
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %141

110:                                              ; preds = %107
  %111 = tail call ptr @Perl_av_create_and_unshift_one(ptr noundef nonnull @PL_unitcheckav, ptr noundef %3) #29
  br label %129

112:                                              ; preds = %4
  %113 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %8, ptr noundef nonnull dereferenceable(6) @.str.116) #30
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %141

115:                                              ; preds = %112
  %116 = load ptr, ptr @PL_main_start, align 8, !tbaa !6
  %117 = icmp eq ptr %116, null
  br i1 %117, label %119, label %118

118:                                              ; preds = %115
  tail call void (i32, ptr, ...) @Perl_ck_warner(i32 noundef 45, ptr noundef nonnull @.str.118) #29
  br label %119

119:                                              ; preds = %118, %115
  %120 = tail call ptr @Perl_av_create_and_unshift_one(ptr noundef nonnull @PL_checkav, ptr noundef %3) #29
  br label %129

121:                                              ; preds = %4
  %122 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %8, ptr noundef nonnull dereferenceable(5) @.str.117) #30
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %141

124:                                              ; preds = %121
  %125 = load ptr, ptr @PL_main_start, align 8, !tbaa !6
  %126 = icmp eq ptr %125, null
  br i1 %126, label %128, label %127

127:                                              ; preds = %124
  tail call void (i32, ptr, ...) @Perl_ck_warner(i32 noundef 45, ptr noundef nonnull @.str.119) #29
  br label %128

128:                                              ; preds = %127, %124
  tail call void @Perl_av_create_and_push(ptr noundef nonnull @PL_initav, ptr noundef %3) #29
  br label %129

129:                                              ; preds = %110, %128, %119, %105
  %130 = load ptr, ptr %3, align 8, !tbaa !10
  %131 = getelementptr inbounds %struct.xpvcv, ptr %130, i64 0, i32 12
  %132 = load i32, ptr %131, align 4, !tbaa !14
  %133 = and i32 %132, 32768
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %137, label %135

135:                                              ; preds = %129
  %136 = tail call ptr @Perl_cvgv_from_hek(ptr noundef nonnull %3) #29
  br label %137

137:                                              ; preds = %129, %135
  %138 = getelementptr inbounds %struct.gv, ptr %2, i64 0, i32 3
  %139 = load ptr, ptr %138, align 8, !tbaa !13
  %140 = getelementptr inbounds %struct.gp, ptr %139, i64 0, i32 2
  store ptr null, ptr %140, align 8, !tbaa !147
  br label %141

141:                                              ; preds = %4, %121, %112, %107, %102, %10, %137, %77
  %142 = phi i1 [ %101, %77 ], [ false, %137 ], [ false, %10 ], [ false, %102 ], [ false, %107 ], [ false, %112 ], [ false, %121 ], [ false, %4 ]
  ret i1 %142
}

declare void @Perl_pad_add_weakref(ptr noundef) local_unnamed_addr #6

declare ptr @Perl_cvgv_from_hek(ptr noundef) local_unnamed_addr #6

declare ptr @Perl_new_stackinfo(i32 noundef, i32 noundef) local_unnamed_addr #6

declare void @Perl_save_sptr(ptr noundef) local_unnamed_addr #6

declare void @Perl_call_list(i32 noundef, ptr noundef) local_unnamed_addr #6

declare void @Perl_croak_popstack() local_unnamed_addr #6

declare ptr @Perl_av_create_and_unshift_one(ptr noundef, ptr noundef) local_unnamed_addr #6

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_newCONSTSUB(ptr noundef %0, ptr noundef %1, ptr noundef %2) local_unnamed_addr #4 {
  %4 = icmp eq ptr %1, null
  br i1 %4, label %5, label %7

5:                                                ; preds = %3
  %6 = tail call ptr @Perl_newCONSTSUB_flags(ptr noundef %0, ptr noundef null, i64 noundef 0, i32 noundef 0, ptr noundef %2)
  br label %10

7:                                                ; preds = %3
  %8 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %1) #30
  %9 = tail call ptr @Perl_newCONSTSUB_flags(ptr noundef %0, ptr noundef nonnull %1, i64 noundef %8, i32 noundef 0, ptr noundef %2)
  br label %10

10:                                               ; preds = %5, %7
  %11 = phi ptr [ %9, %7 ], [ %6, %5 ]
  ret ptr %11
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_newXS_len_flags(ptr noundef %0, i64 noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef %4, ptr noundef %5, i32 noundef %6) local_unnamed_addr #4 {
  %8 = icmp eq ptr %0, null
  %9 = load ptr, ptr @PL_curstash, align 8
  %10 = icmp eq ptr %9, null
  %11 = select i1 %10, ptr @.str.111, ptr @.str.110
  %12 = select i1 %8, ptr %11, ptr %0
  %13 = select i1 %10, i64 18, i64 8
  %14 = select i1 %8, i64 %13, i64 %1
  %15 = or i32 %6, 2
  %16 = tail call ptr @Perl_gv_fetchpvn_flags(ptr noundef nonnull %12, i64 noundef %14, i32 noundef %15, i32 noundef 13) #29
  br i1 %8, label %58, label %17

17:                                               ; preds = %7
  %18 = getelementptr inbounds %struct.gv, ptr %16, i64 0, i32 3
  %19 = load ptr, ptr %18, align 8, !tbaa !13
  %20 = getelementptr inbounds %struct.gp, ptr %19, i64 0, i32 2
  %21 = load ptr, ptr %20, align 8, !tbaa !147
  %22 = icmp eq ptr %21, null
  br i1 %22, label %60, label %23

23:                                               ; preds = %17
  %24 = getelementptr inbounds %struct.gp, ptr %19, i64 0, i32 3
  %25 = load i32, ptr %24, align 8, !tbaa !260
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.sv, ptr %21, i64 0, i32 1
  %29 = load i32, ptr %28, align 8, !tbaa !42
  %30 = icmp ugt i32 %29, 1
  br i1 %30, label %31, label %33

31:                                               ; preds = %27
  %32 = add i32 %29, -1
  store i32 %32, ptr %28, align 8, !tbaa !42
  br label %60

33:                                               ; preds = %27
  tail call void @Perl_sv_free2(ptr noundef nonnull %21, i32 noundef %29) #29
  br label %60

34:                                               ; preds = %23
  %35 = load ptr, ptr %21, align 8, !tbaa !10
  %36 = getelementptr inbounds %struct.xpvcv, ptr %35, i64 0, i32 6
  %37 = load ptr, ptr %36, align 8, !tbaa !13
  %38 = icmp eq ptr %37, null
  br i1 %38, label %39, label %45

39:                                               ; preds = %34
  %40 = load ptr, ptr %16, align 8, !tbaa !169
  %41 = getelementptr inbounds %struct.xpvgv, ptr %40, i64 0, i32 2
  %42 = load i64, ptr %41, align 8, !tbaa !261
  %43 = and i64 %42, 4
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %57, label %45

45:                                               ; preds = %39, %34
  %46 = getelementptr inbounds %struct.xpvcv, ptr %35, i64 0, i32 12
  %47 = load i32, ptr %46, align 4, !tbaa !14
  %48 = and i32 %47, 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %52

50:                                               ; preds = %45
  %51 = tail call zeroext i1 @Perl_ckwarn(i32 noundef 19) #29
  br i1 %51, label %52, label %56

52:                                               ; preds = %50, %45
  %53 = and i32 %6, 536870912
  %54 = or i32 %53, 524288
  %55 = tail call ptr @Perl_newSVpvn_flags(ptr noundef nonnull %0, i64 noundef %1, i32 noundef %54) #29
  tail call void @Perl_report_redefined_cv(ptr noundef %55, ptr noundef nonnull %21, ptr noundef %5)
  br label %56

56:                                               ; preds = %52, %50
  tail call void @Perl_push_scope() #29
  tail call void @Perl_save_pushptr(ptr noundef nonnull %21, i32 noundef 11) #29
  br label %60

57:                                               ; preds = %39
  tail call void @Perl_cv_undef(ptr noundef nonnull %21) #29
  br label %108

58:                                               ; preds = %7
  %59 = tail call ptr @Perl_newSV_type(i32 noundef 13) #29
  br label %108

60:                                               ; preds = %56, %17, %31, %33
  %61 = phi i1 [ true, %56 ], [ false, %17 ], [ false, %31 ], [ false, %33 ]
  %62 = tail call ptr @Perl_newSV_type(i32 noundef 13) #29
  %63 = load ptr, ptr %18, align 8, !tbaa !13
  %64 = getelementptr inbounds %struct.gp, ptr %63, i64 0, i32 2
  store ptr %62, ptr %64, align 8, !tbaa !147
  %65 = load ptr, ptr %18, align 8, !tbaa !13
  %66 = getelementptr inbounds %struct.gp, ptr %65, i64 0, i32 3
  store i32 0, ptr %66, align 8, !tbaa !260
  %67 = load ptr, ptr %16, align 8, !tbaa !169
  %68 = getelementptr inbounds %struct.xpvgv, ptr %67, i64 0, i32 5
  %69 = load ptr, ptr %68, align 8, !tbaa !13
  %70 = getelementptr inbounds %struct.hv, ptr %69, i64 0, i32 2
  %71 = load i32, ptr %70, align 4, !tbaa !56
  %72 = and i32 %71, 33554432
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %108, label %74

74:                                               ; preds = %60
  %75 = getelementptr inbounds %struct.hv, ptr %69, i64 0, i32 3
  %76 = load ptr, ptr %75, align 8, !tbaa !13
  %77 = load ptr, ptr %69, align 8, !tbaa !139
  %78 = getelementptr inbounds %struct.xpvhv, ptr %77, i64 0, i32 3
  %79 = load i64, ptr %78, align 8, !tbaa !140
  %80 = add i64 %79, 1
  %81 = getelementptr inbounds ptr, ptr %76, i64 %80
  %82 = load ptr, ptr %81, align 8, !tbaa !13
  %83 = icmp eq ptr %82, null
  br i1 %83, label %108, label %84

84:                                               ; preds = %74
  %85 = getelementptr inbounds %struct.xpvhv_aux, ptr %81, i64 0, i32 4
  %86 = load i32, ptr %85, align 4, !tbaa !142
  %87 = icmp sgt i32 %86, 0
  br i1 %87, label %88, label %91

88:                                               ; preds = %84
  %89 = load ptr, ptr %82, align 8, !tbaa !6
  %90 = icmp eq ptr %89, null
  br i1 %90, label %108, label %99

91:                                               ; preds = %84
  %92 = icmp slt i32 %86, -1
  br i1 %92, label %93, label %97

93:                                               ; preds = %91
  %94 = getelementptr inbounds ptr, ptr %82, i64 1
  %95 = load ptr, ptr %94, align 8, !tbaa !6
  %96 = icmp eq ptr %95, null
  br i1 %96, label %108, label %99

97:                                               ; preds = %91
  %98 = icmp eq i32 %86, -1
  br i1 %98, label %108, label %99

99:                                               ; preds = %97, %93, %88
  %100 = load ptr, ptr %18, align 8, !tbaa !13
  %101 = getelementptr inbounds %struct.gp, ptr %100, i64 0, i32 4
  %102 = load i32, ptr %101, align 4, !tbaa !266
  %103 = icmp ugt i32 %102, 1
  br i1 %103, label %104, label %107

104:                                              ; preds = %99
  %105 = load i32, ptr @PL_sub_generation, align 4, !tbaa !52
  %106 = add i32 %105, 1
  store i32 %106, ptr @PL_sub_generation, align 4, !tbaa !52
  br label %108

107:                                              ; preds = %99
  tail call void @Perl_mro_method_changed_in(ptr noundef nonnull %69) #29
  br label %108

108:                                              ; preds = %58, %104, %107, %60, %74, %97, %93, %88, %57
  %109 = phi i1 [ false, %57 ], [ %61, %104 ], [ %61, %107 ], [ %61, %88 ], [ %61, %93 ], [ %61, %97 ], [ %61, %74 ], [ %61, %60 ], [ false, %58 ]
  %110 = phi ptr [ %21, %57 ], [ %62, %104 ], [ %62, %107 ], [ %62, %88 ], [ %62, %93 ], [ %62, %97 ], [ %62, %74 ], [ %62, %60 ], [ %59, %58 ]
  tail call void @Perl_cvgv_set(ptr noundef %110, ptr noundef %16) #29
  %111 = icmp eq ptr %3, null
  br i1 %111, label %122, label %112

112:                                              ; preds = %108
  %113 = tail call ptr @Perl_gv_fetchfile(ptr noundef nonnull %3) #29
  %114 = and i32 %6, 1
  %115 = icmp eq i32 %114, 0
  %116 = load ptr, ptr %110, align 8, !tbaa !10
  br i1 %115, label %127, label %117

117:                                              ; preds = %112
  %118 = getelementptr inbounds %struct.xpvcv, ptr %116, i64 0, i32 12
  %119 = load i32, ptr %118, align 4, !tbaa !14
  %120 = or i32 %119, 4096
  store i32 %120, ptr %118, align 4, !tbaa !14
  %121 = tail call ptr @Perl_savepv(ptr noundef nonnull %3) #29
  br label %124

122:                                              ; preds = %108
  %123 = load ptr, ptr @PL_xsubfilename, align 8, !tbaa !6
  br label %124

124:                                              ; preds = %122, %117
  %125 = phi ptr [ %123, %122 ], [ %121, %117 ]
  %126 = load ptr, ptr %110, align 8, !tbaa !10
  br label %127

127:                                              ; preds = %124, %112
  %128 = phi ptr [ %116, %112 ], [ %126, %124 ]
  %129 = phi ptr [ %3, %112 ], [ %125, %124 ]
  %130 = getelementptr inbounds %struct.xpvcv, ptr %128, i64 0, i32 8
  store ptr %129, ptr %130, align 8, !tbaa !265
  %131 = getelementptr inbounds %struct.xpvcv, ptr %128, i64 0, i32 12
  %132 = load i32, ptr %131, align 4, !tbaa !14
  %133 = or i32 %132, 8
  store i32 %133, ptr %131, align 4, !tbaa !14
  %134 = getelementptr inbounds %struct.xpvcv, ptr %128, i64 0, i32 6
  store ptr %2, ptr %134, align 8, !tbaa !13
  %135 = load ptr, ptr %110, align 8, !tbaa !10
  %136 = getelementptr inbounds %struct.xpvcv, ptr %135, i64 0, i32 9
  store ptr @PL_stack_sp, ptr %136, align 8, !tbaa !13
  br i1 %8, label %139, label %137

137:                                              ; preds = %127
  %138 = tail call fastcc zeroext i1 @S_process_special_blocks(i32 noundef 0, ptr noundef nonnull %0, ptr noundef %16, ptr noundef nonnull %110)
  br label %144

139:                                              ; preds = %127
  %140 = load ptr, ptr %110, align 8, !tbaa !10
  %141 = getelementptr inbounds %struct.xpvcv, ptr %140, i64 0, i32 12
  %142 = load i32, ptr %141, align 4, !tbaa !14
  %143 = or i32 %142, 128
  store i32 %143, ptr %141, align 4, !tbaa !14
  br label %144

144:                                              ; preds = %139, %137
  tail call void @Perl_sv_setpv(ptr noundef nonnull %110, ptr noundef %4) #29
  br i1 %109, label %145, label %146

145:                                              ; preds = %144
  tail call void @Perl_pop_scope() #29
  br label %146

146:                                              ; preds = %145, %144
  ret ptr %110
}

; Function Attrs: nounwind sspstrong uwtable
define internal void @const_av_xsub(ptr nocapture noundef readonly %0) #4 {
  %2 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !6
  %3 = load ptr, ptr @PL_markstack_ptr, align 8, !tbaa !6
  %4 = getelementptr inbounds i32, ptr %3, i64 -1
  store ptr %4, ptr @PL_markstack_ptr, align 8, !tbaa !6
  %5 = load i32, ptr %3, align 4, !tbaa !52
  %6 = load ptr, ptr @PL_stack_base, align 8, !tbaa !6
  %7 = add nsw i32 %5, 1
  %8 = sext i32 %5 to i64
  %9 = getelementptr inbounds ptr, ptr %6, i64 %8
  %10 = ptrtoint ptr %2 to i64
  %11 = ptrtoint ptr %9 to i64
  %12 = sub i64 %10, %11
  %13 = load ptr, ptr %0, align 8, !tbaa !10
  %14 = getelementptr inbounds %struct.xpvcv, ptr %13, i64 0, i32 5
  %15 = load ptr, ptr %14, align 8, !tbaa !13
  %16 = shl i64 %12, 29
  %17 = ashr i64 %16, 32
  %18 = sub nsw i64 0, %17
  %19 = getelementptr inbounds ptr, ptr %2, i64 %18
  %20 = icmp eq ptr %15, null
  br i1 %20, label %21, label %25

21:                                               ; preds = %1
  %22 = sext i32 %7 to i64
  %23 = getelementptr inbounds ptr, ptr %6, i64 %22
  %24 = getelementptr inbounds ptr, ptr %23, i64 -1
  br label %91

25:                                               ; preds = %1
  %26 = getelementptr inbounds %struct.av, ptr %15, i64 0, i32 2
  %27 = load i32, ptr %26, align 4, !tbaa !305
  %28 = and i32 %27, 8388608
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %31, label %30

30:                                               ; preds = %25
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.120) #29
  br label %31

31:                                               ; preds = %30, %25
  %32 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %33 = getelementptr inbounds %struct.op, ptr %32, i64 0, i32 5
  %34 = load i8, ptr %33, align 2, !tbaa !35
  %35 = and i8 %34, 3
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %39, label %37

37:                                               ; preds = %31
  %38 = zext i8 %35 to i32
  br label %41

39:                                               ; preds = %31
  %40 = tail call i32 @Perl_block_gimme() #29
  br label %41

41:                                               ; preds = %39, %37
  %42 = phi i32 [ %38, %37 ], [ %40, %39 ]
  %43 = icmp eq i32 %42, 3
  %44 = load ptr, ptr @PL_stack_max, align 8, !tbaa !6
  %45 = ptrtoint ptr %44 to i64
  %46 = ptrtoint ptr %19 to i64
  %47 = sub i64 %45, %46
  br i1 %43, label %64, label %48

48:                                               ; preds = %41
  %49 = icmp slt i64 %47, 8
  br i1 %49, label %50, label %52

50:                                               ; preds = %48
  %51 = tail call ptr @Perl_stack_grow(ptr noundef %19, ptr noundef %19, i64 noundef 1) #29
  br label %52

52:                                               ; preds = %48, %50
  %53 = load ptr, ptr %15, align 8, !tbaa !123
  %54 = getelementptr inbounds %struct.xpvav, ptr %53, i64 0, i32 2
  %55 = load i64, ptr %54, align 8, !tbaa !125
  %56 = add nsw i64 %55, 1
  %57 = tail call ptr @Perl_newSViv(i64 noundef %56) #29
  %58 = tail call ptr @Perl_sv_2mortal(ptr noundef %57) #29
  %59 = load ptr, ptr @PL_stack_base, align 8, !tbaa !6
  %60 = sext i32 %7 to i64
  %61 = getelementptr inbounds ptr, ptr %59, i64 %60
  store ptr %58, ptr %61, align 8, !tbaa !6
  %62 = load ptr, ptr @PL_stack_base, align 8, !tbaa !6
  %63 = getelementptr inbounds ptr, ptr %62, i64 %60
  br label %91

64:                                               ; preds = %41
  %65 = ashr exact i64 %47, 3
  %66 = load ptr, ptr %15, align 8, !tbaa !123
  %67 = getelementptr inbounds %struct.xpvav, ptr %66, i64 0, i32 2
  %68 = load i64, ptr %67, align 8, !tbaa !125
  %69 = icmp sgt i64 %65, %68
  br i1 %69, label %76, label %70

70:                                               ; preds = %64
  %71 = add nsw i64 %68, 1
  %72 = tail call ptr @Perl_stack_grow(ptr noundef %19, ptr noundef %19, i64 noundef %71) #29
  %73 = load ptr, ptr %15, align 8, !tbaa !123
  %74 = getelementptr inbounds %struct.xpvav, ptr %73, i64 0, i32 2
  %75 = load i64, ptr %74, align 8, !tbaa !125
  br label %76

76:                                               ; preds = %64, %70
  %77 = phi i64 [ %68, %64 ], [ %75, %70 ]
  %78 = load ptr, ptr @PL_stack_base, align 8, !tbaa !6
  %79 = sext i32 %7 to i64
  %80 = getelementptr inbounds ptr, ptr %78, i64 %79
  %81 = getelementptr inbounds %struct.av, ptr %15, i64 0, i32 3
  %82 = load ptr, ptr %81, align 8, !tbaa !13
  %83 = shl i64 %77, 3
  %84 = add i64 %83, 8
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %80, ptr align 1 %82, i64 %84, i1 false)
  %85 = load ptr, ptr %15, align 8, !tbaa !123
  %86 = getelementptr inbounds %struct.xpvav, ptr %85, i64 0, i32 2
  %87 = load i64, ptr %86, align 8, !tbaa !125
  %88 = load ptr, ptr @PL_stack_base, align 8, !tbaa !6
  %89 = getelementptr inbounds ptr, ptr %88, i64 %79
  %90 = getelementptr inbounds ptr, ptr %89, i64 %87
  br label %91

91:                                               ; preds = %76, %52, %21
  %92 = phi ptr [ %90, %76 ], [ %63, %52 ], [ %24, %21 ]
  store ptr %92, ptr @PL_stack_sp, align 8, !tbaa !6
  ret void
}

declare i32 @Perl_block_gimme() local_unnamed_addr #6

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_newXS(ptr noundef %0, ptr noundef %1, ptr noundef %2) local_unnamed_addr #4 {
  %4 = icmp eq ptr %0, null
  br i1 %4, label %5, label %31

5:                                                ; preds = %3
  %6 = load ptr, ptr @PL_curstash, align 8
  %7 = icmp eq ptr %6, null
  %8 = select i1 %7, ptr @.str.111, ptr @.str.110
  %9 = select i1 %7, i64 18, i64 8
  %10 = tail call ptr @Perl_gv_fetchpvn_flags(ptr noundef nonnull %8, i64 noundef %9, i32 noundef 2, i32 noundef 13) #29
  %11 = tail call ptr @Perl_newSV_type(i32 noundef 13) #29
  tail call void @Perl_cvgv_set(ptr noundef %11, ptr noundef %10) #29
  %12 = icmp eq ptr %2, null
  br i1 %12, label %15, label %13

13:                                               ; preds = %5
  %14 = tail call ptr @Perl_gv_fetchfile(ptr noundef nonnull %2) #29
  br label %17

15:                                               ; preds = %5
  %16 = load ptr, ptr @PL_xsubfilename, align 8, !tbaa !6
  br label %17

17:                                               ; preds = %13, %15
  %18 = phi ptr [ %2, %13 ], [ %16, %15 ]
  %19 = load ptr, ptr %11, align 8, !tbaa !10
  %20 = getelementptr inbounds %struct.xpvcv, ptr %19, i64 0, i32 8
  store ptr %18, ptr %20, align 8, !tbaa !265
  %21 = getelementptr inbounds %struct.xpvcv, ptr %19, i64 0, i32 12
  %22 = load i32, ptr %21, align 4, !tbaa !14
  %23 = or i32 %22, 8
  store i32 %23, ptr %21, align 4, !tbaa !14
  %24 = getelementptr inbounds %struct.xpvcv, ptr %19, i64 0, i32 6
  store ptr %1, ptr %24, align 8, !tbaa !13
  %25 = load ptr, ptr %11, align 8, !tbaa !10
  %26 = getelementptr inbounds %struct.xpvcv, ptr %25, i64 0, i32 9
  store ptr @PL_stack_sp, ptr %26, align 8, !tbaa !13
  %27 = load ptr, ptr %11, align 8, !tbaa !10
  %28 = getelementptr inbounds %struct.xpvcv, ptr %27, i64 0, i32 12
  %29 = load i32, ptr %28, align 4, !tbaa !14
  %30 = or i32 %29, 128
  store i32 %30, ptr %28, align 4, !tbaa !14
  tail call void @Perl_sv_setpv(ptr noundef nonnull %11, ptr noundef null) #29
  br label %34

31:                                               ; preds = %3
  %32 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %0) #30
  %33 = tail call ptr @Perl_newXS_len_flags(ptr noundef nonnull %0, i64 noundef %32, ptr noundef %1, ptr noundef %2, ptr noundef null, ptr noundef null, i32 noundef 0)
  br label %34

34:                                               ; preds = %17, %31
  %35 = phi ptr [ %33, %31 ], [ %11, %17 ]
  ret ptr %35
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_newXS_flags(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3, i32 noundef %4) local_unnamed_addr #4 {
  %6 = icmp eq ptr %0, null
  br i1 %6, label %7, label %9

7:                                                ; preds = %5
  %8 = tail call ptr @Perl_newXS_len_flags(ptr noundef null, i64 noundef 0, ptr noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef null, i32 noundef %4)
  br label %12

9:                                                ; preds = %5
  %10 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %0) #30
  %11 = tail call ptr @Perl_newXS_len_flags(ptr noundef nonnull %0, i64 noundef %10, ptr noundef %1, ptr noundef %2, ptr noundef %3, ptr noundef null, i32 noundef %4)
  br label %12

12:                                               ; preds = %7, %9
  %13 = phi ptr [ %11, %9 ], [ %8, %7 ]
  ret ptr %13
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_newXS_deffile(ptr noundef %0, ptr noundef %1) local_unnamed_addr #4 {
  %3 = icmp eq ptr %0, null
  br i1 %3, label %4, label %24

4:                                                ; preds = %2
  %5 = load ptr, ptr @PL_curstash, align 8
  %6 = icmp eq ptr %5, null
  %7 = select i1 %6, ptr @.str.111, ptr @.str.110
  %8 = select i1 %6, i64 18, i64 8
  %9 = tail call ptr @Perl_gv_fetchpvn_flags(ptr noundef nonnull %7, i64 noundef %8, i32 noundef 2, i32 noundef 13) #29
  %10 = tail call ptr @Perl_newSV_type(i32 noundef 13) #29
  tail call void @Perl_cvgv_set(ptr noundef %10, ptr noundef %9) #29
  %11 = load ptr, ptr @PL_xsubfilename, align 8, !tbaa !6
  %12 = load ptr, ptr %10, align 8, !tbaa !10
  %13 = getelementptr inbounds %struct.xpvcv, ptr %12, i64 0, i32 8
  store ptr %11, ptr %13, align 8, !tbaa !265
  %14 = getelementptr inbounds %struct.xpvcv, ptr %12, i64 0, i32 12
  %15 = load i32, ptr %14, align 4, !tbaa !14
  %16 = or i32 %15, 8
  store i32 %16, ptr %14, align 4, !tbaa !14
  %17 = getelementptr inbounds %struct.xpvcv, ptr %12, i64 0, i32 6
  store ptr %1, ptr %17, align 8, !tbaa !13
  %18 = load ptr, ptr %10, align 8, !tbaa !10
  %19 = getelementptr inbounds %struct.xpvcv, ptr %18, i64 0, i32 9
  store ptr @PL_stack_sp, ptr %19, align 8, !tbaa !13
  %20 = load ptr, ptr %10, align 8, !tbaa !10
  %21 = getelementptr inbounds %struct.xpvcv, ptr %20, i64 0, i32 12
  %22 = load i32, ptr %21, align 4, !tbaa !14
  %23 = or i32 %22, 128
  store i32 %23, ptr %21, align 4, !tbaa !14
  tail call void @Perl_sv_setpv(ptr noundef nonnull %10, ptr noundef null) #29
  br label %27

24:                                               ; preds = %2
  %25 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %0) #30
  %26 = tail call ptr @Perl_newXS_len_flags(ptr noundef nonnull %0, i64 noundef %25, ptr noundef %1, ptr noundef null, ptr noundef null, ptr noundef null, i32 noundef 0)
  br label %27

27:                                               ; preds = %4, %24
  %28 = phi ptr [ %26, %24 ], [ %10, %4 ]
  ret ptr %28
}

declare void @Perl_cv_undef(ptr noundef) local_unnamed_addr #6

declare ptr @Perl_gv_fetchfile(ptr noundef) local_unnamed_addr #6

declare ptr @Perl_savepv(ptr noundef) local_unnamed_addr #6

declare void @Perl_sv_setpv(ptr noundef, ptr noundef) local_unnamed_addr #6

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_newSTUB(ptr noundef %0, i1 noundef zeroext %1) local_unnamed_addr #4 {
  %3 = tail call ptr @Perl_newSV_type(i32 noundef 13) #29
  %4 = getelementptr inbounds %struct.gv, ptr %0, i64 0, i32 3
  %5 = load ptr, ptr %4, align 8, !tbaa !13
  %6 = getelementptr inbounds %struct.gp, ptr %5, i64 0, i32 2
  store ptr %3, ptr %6, align 8, !tbaa !147
  %7 = load ptr, ptr %4, align 8, !tbaa !13
  %8 = getelementptr inbounds %struct.gp, ptr %7, i64 0, i32 3
  store i32 0, ptr %8, align 8, !tbaa !260
  br i1 %1, label %51, label %9

9:                                                ; preds = %2
  %10 = load ptr, ptr %0, align 8, !tbaa !169
  %11 = getelementptr inbounds %struct.xpvgv, ptr %10, i64 0, i32 5
  %12 = load ptr, ptr %11, align 8, !tbaa !13
  %13 = getelementptr inbounds %struct.hv, ptr %12, i64 0, i32 2
  %14 = load i32, ptr %13, align 4, !tbaa !56
  %15 = and i32 %14, 33554432
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %51, label %17

17:                                               ; preds = %9
  %18 = getelementptr inbounds %struct.hv, ptr %12, i64 0, i32 3
  %19 = load ptr, ptr %18, align 8, !tbaa !13
  %20 = load ptr, ptr %12, align 8, !tbaa !139
  %21 = getelementptr inbounds %struct.xpvhv, ptr %20, i64 0, i32 3
  %22 = load i64, ptr %21, align 8, !tbaa !140
  %23 = add i64 %22, 1
  %24 = getelementptr inbounds ptr, ptr %19, i64 %23
  %25 = load ptr, ptr %24, align 8, !tbaa !13
  %26 = icmp eq ptr %25, null
  br i1 %26, label %51, label %27

27:                                               ; preds = %17
  %28 = getelementptr inbounds %struct.xpvhv_aux, ptr %24, i64 0, i32 4
  %29 = load i32, ptr %28, align 4, !tbaa !142
  %30 = icmp sgt i32 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %27
  %32 = load ptr, ptr %25, align 8, !tbaa !6
  %33 = icmp eq ptr %32, null
  br i1 %33, label %51, label %42

34:                                               ; preds = %27
  %35 = icmp slt i32 %29, -1
  br i1 %35, label %36, label %40

36:                                               ; preds = %34
  %37 = getelementptr inbounds ptr, ptr %25, i64 1
  %38 = load ptr, ptr %37, align 8, !tbaa !6
  %39 = icmp eq ptr %38, null
  br i1 %39, label %51, label %42

40:                                               ; preds = %34
  %41 = icmp eq i32 %29, -1
  br i1 %41, label %51, label %42

42:                                               ; preds = %40, %36, %31
  %43 = load ptr, ptr %4, align 8, !tbaa !13
  %44 = getelementptr inbounds %struct.gp, ptr %43, i64 0, i32 4
  %45 = load i32, ptr %44, align 4, !tbaa !266
  %46 = icmp ugt i32 %45, 1
  br i1 %46, label %47, label %50

47:                                               ; preds = %42
  %48 = load i32, ptr @PL_sub_generation, align 4, !tbaa !52
  %49 = add i32 %48, 1
  store i32 %49, ptr @PL_sub_generation, align 4, !tbaa !52
  br label %51

50:                                               ; preds = %42
  tail call void @Perl_mro_method_changed_in(ptr noundef nonnull %12) #29
  br label %51

51:                                               ; preds = %47, %50, %9, %17, %40, %36, %31, %2
  %52 = getelementptr inbounds %struct.gv, ptr %0, i64 0, i32 2
  %53 = load i32, ptr %52, align 4, !tbaa !133
  %54 = and i32 %53, 16777216
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %61, label %56

56:                                               ; preds = %51
  %57 = tail call ptr @Perl_gv_fetchsv(ptr noundef nonnull %0, i32 noundef 2, i32 noundef 13) #29
  %58 = getelementptr inbounds %struct.gv, ptr %57, i64 0, i32 2
  %59 = load i32, ptr %58, align 4, !tbaa !133
  %60 = and i32 %59, -16777217
  store i32 %60, ptr %58, align 4, !tbaa !133
  br label %61

61:                                               ; preds = %51, %56
  %62 = phi ptr [ %57, %56 ], [ %0, %51 ]
  tail call void @Perl_cvgv_set(ptr noundef %3, ptr noundef nonnull %62) #29
  %63 = load ptr, ptr @PL_curcop, align 8, !tbaa !6
  %64 = getelementptr inbounds %struct.cop, ptr %63, i64 0, i32 9
  %65 = load ptr, ptr %64, align 8, !tbaa !40
  %66 = icmp eq ptr %65, null
  br i1 %66, label %72, label %67

67:                                               ; preds = %61
  %68 = load ptr, ptr %65, align 8, !tbaa !169
  %69 = getelementptr inbounds %struct.xpvgv, ptr %68, i64 0, i32 4
  %70 = load ptr, ptr %69, align 8, !tbaa !13
  %71 = getelementptr inbounds %struct.hek, ptr %70, i64 0, i32 2, i64 2
  br label %72

72:                                               ; preds = %61, %67
  %73 = phi ptr [ %71, %67 ], [ null, %61 ]
  %74 = load ptr, ptr %3, align 8, !tbaa !10
  %75 = getelementptr inbounds %struct.xpvcv, ptr %74, i64 0, i32 8
  store ptr %73, ptr %75, align 8, !tbaa !265
  %76 = getelementptr inbounds %struct.xpvcv, ptr %74, i64 0, i32 12
  %77 = load i32, ptr %76, align 4, !tbaa !14
  %78 = and i32 %77, -4097
  store i32 %78, ptr %76, align 4, !tbaa !14
  %79 = load ptr, ptr @PL_curstash, align 8, !tbaa !6
  tail call void @Perl_cvstash_set(ptr noundef nonnull %3, ptr noundef %79) #29
  %80 = load ptr, ptr %0, align 8, !tbaa !169
  %81 = getelementptr inbounds %struct.xpvgv, ptr %80, i64 0, i32 2
  %82 = load i64, ptr %81, align 8, !tbaa !261
  %83 = or i64 %82, 2
  store i64 %83, ptr %81, align 8, !tbaa !261
  ret ptr %3
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_newFORM(i32 noundef %0, ptr noundef %1, ptr noundef %2) local_unnamed_addr #4 {
  %4 = load ptr, ptr @PL_parser, align 8, !tbaa !6
  %5 = icmp eq ptr %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.yy_parser, ptr %4, i64 0, i32 44
  %8 = load i8, ptr %7, align 1, !tbaa !105
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  tail call void @Perl_op_free(ptr noundef %2)
  br label %125

11:                                               ; preds = %6, %3
  %12 = icmp eq ptr %1, null
  br i1 %12, label %17, label %13

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.svop, ptr %1, i64 0, i32 7
  %15 = load ptr, ptr %14, align 8, !tbaa !65
  %16 = tail call ptr @Perl_gv_fetchsv(ptr noundef %15, i32 noundef 1, i32 noundef 14) #29
  br label %19

17:                                               ; preds = %11
  %18 = tail call ptr @Perl_gv_fetchpvn_flags(ptr noundef nonnull @.str.121, i64 noundef 6, i32 noundef 129, i32 noundef 14) #29
  br label %19

19:                                               ; preds = %17, %13
  %20 = phi ptr [ %16, %13 ], [ %18, %17 ]
  %21 = load ptr, ptr %20, align 8, !tbaa !169
  %22 = getelementptr inbounds %struct.xpvgv, ptr %21, i64 0, i32 2
  %23 = load i64, ptr %22, align 8, !tbaa !261
  %24 = or i64 %23, 2
  store i64 %24, ptr %22, align 8, !tbaa !261
  %25 = getelementptr inbounds %struct.gv, ptr %20, i64 0, i32 3
  %26 = load ptr, ptr %25, align 8, !tbaa !13
  %27 = getelementptr inbounds %struct.gp, ptr %26, i64 0, i32 7
  %28 = load ptr, ptr %27, align 8, !tbaa !306
  %29 = icmp eq ptr %28, null
  br i1 %29, label %58, label %30

30:                                               ; preds = %19
  %31 = tail call zeroext i1 @Perl_ckwarn(i32 noundef 19) #29
  br i1 %31, label %32, label %51

32:                                               ; preds = %30
  %33 = load ptr, ptr @PL_curcop, align 8, !tbaa !6
  %34 = getelementptr inbounds %struct.cop, ptr %33, i64 0, i32 7
  %35 = load i32, ptr %34, align 4, !tbaa !146
  %36 = load ptr, ptr @PL_parser, align 8, !tbaa !6
  %37 = icmp eq ptr %36, null
  br i1 %37, label %43, label %38

38:                                               ; preds = %32
  %39 = getelementptr inbounds %struct.yy_parser, ptr %36, i64 0, i32 41
  %40 = load i32, ptr %39, align 8, !tbaa !238
  %41 = icmp eq i32 %40, -1
  br i1 %41, label %43, label %42

42:                                               ; preds = %38
  store i32 %40, ptr %34, align 4, !tbaa !146
  br label %43

43:                                               ; preds = %42, %38, %32
  br i1 %12, label %47, label %44

44:                                               ; preds = %43
  %45 = getelementptr inbounds %struct.svop, ptr %1, i64 0, i32 7
  %46 = load ptr, ptr %45, align 8, !tbaa !65
  tail call void (i32, ptr, ...) @Perl_warner(i32 noundef 19, ptr noundef nonnull @.str.122, ptr noundef %46) #29
  br label %48

47:                                               ; preds = %43
  tail call void (i32, ptr, ...) @Perl_warner(i32 noundef 19, ptr noundef nonnull @.str.123) #29
  br label %48

48:                                               ; preds = %47, %44
  %49 = load ptr, ptr @PL_curcop, align 8, !tbaa !6
  %50 = getelementptr inbounds %struct.cop, ptr %49, i64 0, i32 7
  store i32 %35, ptr %50, align 4, !tbaa !146
  br label %51

51:                                               ; preds = %30, %48
  %52 = getelementptr inbounds %struct.sv, ptr %28, i64 0, i32 1
  %53 = load i32, ptr %52, align 8, !tbaa !42
  %54 = icmp ugt i32 %53, 1
  br i1 %54, label %55, label %57

55:                                               ; preds = %51
  %56 = add i32 %53, -1
  store i32 %56, ptr %52, align 8, !tbaa !42
  br label %58

57:                                               ; preds = %51
  tail call void @Perl_sv_free2(ptr noundef nonnull %28, i32 noundef %53) #29
  br label %58

58:                                               ; preds = %57, %55, %19
  %59 = load ptr, ptr @PL_compcv, align 8, !tbaa !6
  %60 = getelementptr inbounds %struct.cv, ptr %59, i64 0, i32 1
  %61 = load i32, ptr %60, align 8, !tbaa !209
  %62 = add i32 %61, 1
  store i32 %62, ptr %60, align 8, !tbaa !209
  %63 = load ptr, ptr %25, align 8, !tbaa !13
  %64 = getelementptr inbounds %struct.gp, ptr %63, i64 0, i32 7
  store ptr %59, ptr %64, align 8, !tbaa !306
  tail call void @Perl_cvgv_set(ptr noundef %59, ptr noundef nonnull %20) #29
  %65 = load ptr, ptr @PL_curcop, align 8, !tbaa !6
  %66 = getelementptr inbounds %struct.cop, ptr %65, i64 0, i32 9
  %67 = load ptr, ptr %66, align 8, !tbaa !40
  %68 = icmp eq ptr %67, null
  br i1 %68, label %74, label %69

69:                                               ; preds = %58
  %70 = load ptr, ptr %67, align 8, !tbaa !169
  %71 = getelementptr inbounds %struct.xpvgv, ptr %70, i64 0, i32 4
  %72 = load ptr, ptr %71, align 8, !tbaa !13
  %73 = getelementptr inbounds %struct.hek, ptr %72, i64 0, i32 2, i64 2
  br label %74

74:                                               ; preds = %58, %69
  %75 = phi ptr [ %73, %69 ], [ null, %58 ]
  %76 = load ptr, ptr %59, align 8, !tbaa !10
  %77 = getelementptr inbounds %struct.xpvcv, ptr %76, i64 0, i32 8
  store ptr %75, ptr %77, align 8, !tbaa !265
  %78 = getelementptr inbounds %struct.xpvcv, ptr %76, i64 0, i32 12
  %79 = load i32, ptr %78, align 4, !tbaa !14
  %80 = and i32 %79, -4097
  store i32 %80, ptr %78, align 4, !tbaa !14
  tail call void @Perl_pad_tidy(i32 noundef 2) #29
  %81 = tail call fastcc ptr @S_scalarseq(ptr noundef %2)
  %82 = tail call ptr @Perl_newUNOP(i32 noundef 236, i32 noundef 0, ptr noundef %81)
  %83 = load ptr, ptr %59, align 8, !tbaa !10
  %84 = getelementptr inbounds %struct.xpvcv, ptr %83, i64 0, i32 6
  store ptr %82, ptr %84, align 8, !tbaa !13
  %85 = load ptr, ptr %59, align 8, !tbaa !10
  %86 = getelementptr inbounds %struct.xpvcv, ptr %85, i64 0, i32 6
  %87 = load ptr, ptr %86, align 8, !tbaa !13
  %88 = getelementptr inbounds %struct.op, ptr %87, i64 0, i32 6
  %89 = load i8, ptr %88, align 1, !tbaa !33
  %90 = or i8 %89, 64
  store i8 %90, ptr %88, align 1, !tbaa !33
  %91 = load ptr, ptr %86, align 8, !tbaa !13
  %92 = getelementptr inbounds %struct.op, ptr %91, i64 0, i32 3
  store i64 1, ptr %92, align 8, !tbaa !34
  %93 = load ptr, ptr %86, align 8, !tbaa !13
  %94 = load ptr, ptr %93, align 8, !tbaa !25
  %95 = icmp eq ptr %94, null
  br i1 %95, label %96, label %99

96:                                               ; preds = %74
  %97 = tail call ptr @Perl_op_linklist(ptr noundef nonnull %93)
  %98 = load ptr, ptr %59, align 8, !tbaa !10
  br label %99

99:                                               ; preds = %74, %96
  %100 = phi ptr [ %98, %96 ], [ %85, %74 ]
  %101 = phi ptr [ %97, %96 ], [ %94, %74 ]
  %102 = getelementptr inbounds %struct.xpvcv, ptr %100, i64 0, i32 5
  store ptr %101, ptr %102, align 8, !tbaa !13
  %103 = load ptr, ptr %59, align 8, !tbaa !10
  %104 = getelementptr inbounds %struct.xpvcv, ptr %103, i64 0, i32 6
  %105 = load ptr, ptr %104, align 8, !tbaa !13
  store ptr null, ptr %105, align 8, !tbaa !25
  %106 = load ptr, ptr @PL_peepp, align 8, !tbaa !6
  %107 = getelementptr inbounds %struct.xpvcv, ptr %103, i64 0, i32 5
  %108 = load ptr, ptr %107, align 8, !tbaa !13
  tail call void %106(ptr noundef %108) #29
  %109 = load ptr, ptr %59, align 8, !tbaa !10
  %110 = getelementptr inbounds %struct.xpvcv, ptr %109, i64 0, i32 6
  %111 = load ptr, ptr %110, align 8, !tbaa !13
  tail call void @Perl_push_scope() #29
  tail call void @Perl_save_vptr(ptr noundef nonnull @PL_curcop) #29
  tail call fastcc void @S_finalize_op(ptr noundef %111)
  tail call void @Perl_pop_scope() #29
  %112 = load ptr, ptr %59, align 8, !tbaa !10
  %113 = getelementptr inbounds %struct.xpvcv, ptr %112, i64 0, i32 5
  %114 = load ptr, ptr %113, align 8, !tbaa !6
  %115 = icmp eq ptr %114, null
  br i1 %115, label %124, label %116

116:                                              ; preds = %99, %121
  %117 = phi ptr [ %122, %121 ], [ %114, %99 ]
  %118 = getelementptr inbounds %struct.op, ptr %117, i64 0, i32 4
  %119 = load i16, ptr %118, align 8
  %120 = and i16 %119, 511
  switch i16 %120, label %124 [
    i16 0, label %121
    i16 198, label %121
    i16 2, label %121
    i16 192, label %121
  ]

121:                                              ; preds = %116, %116, %116, %116
  %122 = load ptr, ptr %117, align 8, !tbaa !25
  store ptr %122, ptr %113, align 8, !tbaa !6
  %123 = icmp eq ptr %122, null
  br i1 %123, label %124, label %116, !llvm.loop !122

124:                                              ; preds = %116, %121, %99
  tail call void @Perl_cv_forget_slab(ptr noundef nonnull %59) #29
  br label %125

125:                                              ; preds = %124, %10
  tail call void @Perl_op_free(ptr noundef %1)
  %126 = load ptr, ptr @PL_parser, align 8, !tbaa !6
  %127 = icmp eq ptr %126, null
  br i1 %127, label %130, label %128

128:                                              ; preds = %125
  %129 = getelementptr inbounds %struct.yy_parser, ptr %126, i64 0, i32 41
  store i32 -1, ptr %129, align 8, !tbaa !238
  br label %130

130:                                              ; preds = %125, %128
  %131 = load i32, ptr @PL_savestack_ix, align 4, !tbaa !52
  %132 = icmp sgt i32 %131, %0
  br i1 %132, label %133, label %134

133:                                              ; preds = %130
  tail call void @Perl_leave_scope(i32 noundef %0) #29
  br label %134

134:                                              ; preds = %133, %130
  store i32 0, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 11), align 4, !tbaa !225
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_newANONHASH(ptr noundef %0) local_unnamed_addr #4 {
  %2 = tail call ptr @Perl_op_convert_list(i32 noundef 161, i32 noundef 128, ptr noundef %0)
  ret ptr %2
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_newANONSUB(i32 noundef %0, ptr noundef %1, ptr noundef %2) local_unnamed_addr #4 {
  %4 = tail call ptr @Perl_newATTRSUB_x(i32 noundef %0, ptr noundef null, ptr noundef %1, ptr noundef null, ptr noundef %2, i1 noundef zeroext false)
  %5 = tail call ptr @Perl_newSVOP(i32 noundef 18, i32 noundef 0, ptr noundef %4)
  %6 = load ptr, ptr %4, align 8, !tbaa !85
  %7 = getelementptr inbounds %struct.xpvcv, ptr %6, i64 0, i32 12
  %8 = load i32, ptr %7, align 4, !tbaa !14
  %9 = and i32 %8, 131072
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = tail call ptr @Perl_op_convert_list(i32 noundef 185, i32 noundef 66, ptr noundef %5)
  %13 = tail call ptr @Perl_newUNOP(i32 noundef 395, i32 noundef 0, ptr noundef %12)
  br label %14

14:                                               ; preds = %3, %11
  %15 = phi ptr [ %13, %11 ], [ %5, %3 ]
  %16 = tail call ptr @Perl_newUNOP(i32 noundef 20, i32 noundef 0, ptr noundef %15)
  ret ptr %16
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_newANONATTRSUB(i32 noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3) local_unnamed_addr #4 {
  %5 = tail call ptr @Perl_newATTRSUB_x(i32 noundef %0, ptr noundef null, ptr noundef %1, ptr noundef %2, ptr noundef %3, i1 noundef zeroext false)
  %6 = tail call ptr @Perl_newSVOP(i32 noundef 18, i32 noundef 0, ptr noundef %5)
  %7 = load ptr, ptr %5, align 8, !tbaa !85
  %8 = getelementptr inbounds %struct.xpvcv, ptr %7, i64 0, i32 12
  %9 = load i32, ptr %8, align 4, !tbaa !14
  %10 = and i32 %9, 131072
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %4
  %13 = tail call ptr @Perl_op_convert_list(i32 noundef 185, i32 noundef 66, ptr noundef %6)
  %14 = tail call ptr @Perl_newUNOP(i32 noundef 395, i32 noundef 0, ptr noundef %13)
  br label %15

15:                                               ; preds = %12, %4
  %16 = phi ptr [ %14, %12 ], [ %6, %4 ]
  %17 = tail call ptr @Perl_newUNOP(i32 noundef 20, i32 noundef 0, ptr noundef %16)
  ret ptr %17
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_oopsAV(ptr noundef returned %0) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 4
  %3 = load i16, ptr %2, align 8
  %4 = and i16 %3, 511
  %5 = zext i16 %4 to i32
  switch i32 %5, label %18 [
    i32 9, label %6
    i32 11, label %6
    i32 15, label %12
    i32 149, label %12
  ]

6:                                                ; preds = %1, %1
  %7 = and i16 %3, -512
  %8 = or i16 %7, 10
  store i16 %8, ptr %2, align 8
  %9 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_ppaddr, i64 0, i64 10), align 8, !tbaa !6
  %10 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 2
  store ptr %9, ptr %10, align 8, !tbaa !78
  %11 = tail call ptr @Perl_doref(ptr noundef nonnull %0, i32 noundef 135, i1 noundef zeroext true)
  br label %19

12:                                               ; preds = %1, %1
  %13 = and i16 %3, -512
  %14 = or i16 %13, 135
  store i16 %14, ptr %2, align 8
  %15 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_ppaddr, i64 0, i64 135), align 8, !tbaa !6
  %16 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 2
  store ptr %15, ptr %16, align 8, !tbaa !78
  %17 = tail call ptr @Perl_doref(ptr noundef nonnull %0, i32 noundef 135, i1 noundef zeroext true)
  br label %19

18:                                               ; preds = %1
  tail call void (i32, ptr, ...) @Perl_ck_warner_d(i32 noundef 24, ptr noundef nonnull @.str.124) #29
  br label %19

19:                                               ; preds = %12, %18, %6
  ret ptr %0
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_oopsHV(ptr noundef returned %0) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 4
  %3 = load i16, ptr %2, align 8
  %4 = and i16 %3, 511
  %5 = zext i16 %4 to i32
  switch i32 %5, label %18 [
    i32 9, label %6
    i32 10, label %6
    i32 15, label %12
    i32 135, label %12
  ]

6:                                                ; preds = %1, %1
  %7 = and i16 %3, -512
  %8 = or i16 %7, 11
  store i16 %8, ptr %2, align 8
  %9 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_ppaddr, i64 0, i64 11), align 8, !tbaa !6
  %10 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 2
  store ptr %9, ptr %10, align 8, !tbaa !78
  %11 = tail call ptr @Perl_doref(ptr noundef nonnull %0, i32 noundef 149, i1 noundef zeroext true)
  br label %19

12:                                               ; preds = %1, %1
  %13 = and i16 %3, -512
  %14 = or i16 %13, 149
  store i16 %14, ptr %2, align 8
  %15 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_ppaddr, i64 0, i64 149), align 8, !tbaa !6
  %16 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 2
  store ptr %15, ptr %16, align 8, !tbaa !78
  %17 = tail call ptr @Perl_doref(ptr noundef nonnull %0, i32 noundef 149, i1 noundef zeroext true)
  br label %19

18:                                               ; preds = %1
  tail call void (i32, ptr, ...) @Perl_ck_warner_d(i32 noundef 24, ptr noundef nonnull @.str.125) #29
  br label %19

19:                                               ; preds = %12, %18, %6
  ret ptr %0
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_newAVREF(ptr noundef %0) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 4
  %3 = load i16, ptr %2, align 8
  %4 = and i16 %3, 511
  switch i16 %4, label %11 [
    i16 12, label %5
    i16 135, label %10
    i16 10, label %10
  ]

5:                                                ; preds = %1
  %6 = and i16 %3, -512
  %7 = or i16 %6, 10
  store i16 %7, ptr %2, align 8
  %8 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_ppaddr, i64 0, i64 10), align 8, !tbaa !6
  %9 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 2
  store ptr %8, ptr %9, align 8, !tbaa !78
  br label %14

10:                                               ; preds = %1, %1
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.126) #29
  br label %11

11:                                               ; preds = %1, %10
  %12 = tail call ptr @Perl_scalar(ptr noundef nonnull %0)
  %13 = tail call ptr @Perl_newUNOP(i32 noundef 135, i32 noundef 0, ptr noundef nonnull %0)
  br label %14

14:                                               ; preds = %11, %5
  %15 = phi ptr [ %0, %5 ], [ %13, %11 ]
  ret ptr %15
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_newGVREF(i32 noundef %0, ptr noundef %1) local_unnamed_addr #4 {
  switch i32 %0, label %5 [
    i32 171, label %3
    i32 169, label %3
    i32 167, label %3
  ]

3:                                                ; preds = %2, %2, %2
  %4 = tail call ptr @Perl_newUNOP(i32 noundef 0, i32 noundef 0, ptr noundef %1)
  br label %8

5:                                                ; preds = %2
  %6 = tail call ptr @Perl_newUNOP(i32 noundef 14, i32 noundef 16, ptr noundef %1)
  %7 = tail call ptr @Perl_doref(ptr noundef %6, i32 noundef %0, i1 noundef zeroext true)
  br label %8

8:                                                ; preds = %5, %3
  %9 = phi ptr [ %4, %3 ], [ %6, %5 ]
  ret ptr %9
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_newHVREF(ptr noundef %0) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 4
  %3 = load i16, ptr %2, align 8
  %4 = and i16 %3, 511
  switch i16 %4, label %11 [
    i16 12, label %5
    i16 149, label %10
    i16 11, label %10
  ]

5:                                                ; preds = %1
  %6 = and i16 %3, -512
  %7 = or i16 %6, 11
  store i16 %7, ptr %2, align 8
  %8 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_ppaddr, i64 0, i64 11), align 8, !tbaa !6
  %9 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 2
  store ptr %8, ptr %9, align 8, !tbaa !78
  br label %14

10:                                               ; preds = %1, %1
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.127) #29
  br label %11

11:                                               ; preds = %1, %10
  %12 = tail call ptr @Perl_scalar(ptr noundef nonnull %0)
  %13 = tail call ptr @Perl_newUNOP(i32 noundef 149, i32 noundef 0, ptr noundef nonnull %0)
  br label %14

14:                                               ; preds = %11, %5
  %15 = phi ptr [ %0, %5 ], [ %13, %11 ]
  ret ptr %15
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_newCVREF(i32 noundef %0, ptr noundef %1) local_unnamed_addr #4 {
  %3 = getelementptr inbounds %struct.op, ptr %1, i64 0, i32 4
  %4 = load i16, ptr %3, align 8
  %5 = and i16 %4, 511
  %6 = icmp eq i16 %5, 12
  br i1 %6, label %7, label %12

7:                                                ; preds = %2
  %8 = and i16 %4, -512
  %9 = or i16 %8, 387
  store i16 %9, ptr %3, align 8
  %10 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_ppaddr, i64 0, i64 387), align 8, !tbaa !6
  %11 = getelementptr inbounds %struct.op, ptr %1, i64 0, i32 2
  store ptr %10, ptr %11, align 8, !tbaa !78
  br label %12

12:                                               ; preds = %7, %2
  %13 = tail call ptr @Perl_scalar(ptr noundef nonnull %1)
  %14 = tail call ptr @Perl_newUNOP(i32 noundef 17, i32 noundef %0, ptr noundef nonnull %1)
  ret ptr %14
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_ck_anoncode(ptr noundef returned %0) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.svop, ptr %0, i64 0, i32 7
  %3 = load ptr, ptr %2, align 8, !tbaa !65
  %4 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 4
  %5 = load i16, ptr %4, align 8
  %6 = and i16 %5, 511
  %7 = zext i16 %6 to i32
  %8 = tail call i64 @Perl_pad_add_anon(ptr noundef %3, i32 noundef %7) #29
  %9 = getelementptr inbounds %struct.svop, ptr %0, i64 0, i32 3
  store i64 %8, ptr %9, align 8, !tbaa !131
  store ptr null, ptr %2, align 8, !tbaa !65
  ret ptr %0
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_ck_backtick(ptr noundef %0) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 5
  %3 = load i8, ptr %2, align 2, !tbaa !35
  %4 = and i8 %3, 4
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %27, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.unop, ptr %0, i64 0, i32 7
  %8 = load ptr, ptr %7, align 8, !tbaa !36
  %9 = getelementptr inbounds %struct.op, ptr %8, i64 0, i32 1
  %10 = load ptr, ptr %9, align 8, !tbaa !38
  %11 = icmp eq ptr %10, null
  br i1 %11, label %27, label %12

12:                                               ; preds = %6
  %13 = tail call ptr @Perl_gv_override(ptr noundef nonnull @.str.128, i64 noundef 8) #29
  %14 = icmp eq ptr %13, null
  br i1 %14, label %15, label %17

15:                                               ; preds = %12
  %16 = load i8, ptr %2, align 2, !tbaa !35
  br label %27

17:                                               ; preds = %12
  %18 = load ptr, ptr %7, align 8, !tbaa !36
  %19 = tail call ptr @Perl_op_sibling_splice(ptr noundef nonnull %0, ptr noundef %18, i32 noundef -1, ptr noundef null)
  %20 = getelementptr inbounds %struct.gv, ptr %13, i64 0, i32 1
  %21 = load i32, ptr %20, align 8, !tbaa !74
  %22 = add i32 %21, 1
  store i32 %22, ptr %20, align 8, !tbaa !74
  %23 = tail call ptr @Perl_newSVOP(i32 noundef 7, i32 noundef 0, ptr noundef nonnull %13)
  %24 = tail call ptr @Perl_newUNOP(i32 noundef 17, i32 noundef 0, ptr noundef %23)
  %25 = tail call ptr @Perl_newLISTOP(i32 noundef 158, i32 noundef 0, ptr noundef nonnull %10, ptr noundef %24)
  %26 = tail call ptr @Perl_newUNOP(i32 noundef 185, i32 noundef 64, ptr noundef %25)
  br label %34

27:                                               ; preds = %15, %6, %1
  %28 = phi i8 [ %16, %15 ], [ %3, %6 ], [ %3, %1 ]
  %29 = and i8 %28, 4
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %38

31:                                               ; preds = %27
  %32 = tail call ptr @Perl_newDEFSVOP()
  %33 = tail call ptr @Perl_newUNOP(i32 noundef 24, i32 noundef 0, ptr noundef %32)
  br label %34

34:                                               ; preds = %31, %17
  %35 = phi ptr [ %26, %17 ], [ %33, %31 ]
  %36 = icmp eq ptr %35, null
  br i1 %36, label %38, label %37

37:                                               ; preds = %34
  tail call void @Perl_op_free(ptr noundef nonnull %0)
  br label %38

38:                                               ; preds = %27, %34, %37
  %39 = phi ptr [ %35, %37 ], [ %0, %34 ], [ %0, %27 ]
  ret ptr %39
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_ck_bitop(ptr noundef returned %0) local_unnamed_addr #4 {
  %2 = load i32, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 10), align 8, !tbaa !77
  %3 = trunc i32 %2 to i8
  %4 = and i8 %3, 1
  %5 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 6
  store i8 %4, ptr %5, align 1, !tbaa !33
  %6 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 4
  %7 = load i16, ptr %6, align 8
  %8 = and i16 %7, 511
  switch i16 %8, label %10 [
    i16 97, label %9
    i16 100, label %9
    i16 96, label %9
    i16 99, label %9
    i16 95, label %9
    i16 98, label %9
    i16 105, label %9
    i16 106, label %9
  ]

9:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1
  tail call void (i32, ptr, ...) @Perl_ck_warner_d(i32 noundef 60, ptr noundef nonnull @.str.129) #29
  br label %10

10:                                               ; preds = %1, %9
  %11 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 5
  %12 = load i8, ptr %11, align 2, !tbaa !35
  %13 = and i8 %12, 64
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %62

15:                                               ; preds = %10
  %16 = load i16, ptr %6, align 8
  %17 = and i16 %16, 511
  %18 = add nsw i16 %17, -92
  %19 = icmp ult i16 %18, 9
  br i1 %19, label %20, label %62

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.binop, ptr %0, i64 0, i32 7
  %22 = load ptr, ptr %21, align 8, !tbaa !106
  %23 = getelementptr inbounds %struct.op, ptr %22, i64 0, i32 1
  %24 = load ptr, ptr %23, align 8, !tbaa !38
  %25 = getelementptr inbounds %struct.op, ptr %22, i64 0, i32 4
  %26 = load i16, ptr %25, align 8
  %27 = and i16 %26, 511
  %28 = add nsw i16 %27, -71
  %29 = icmp ult i16 %28, 14
  br i1 %29, label %30, label %35

30:                                               ; preds = %20
  %31 = getelementptr inbounds %struct.op, ptr %22, i64 0, i32 5
  %32 = load i8, ptr %31, align 2, !tbaa !35
  %33 = and i8 %32, 8
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %46, label %35

35:                                               ; preds = %30, %20
  %36 = getelementptr inbounds %struct.op, ptr %24, i64 0, i32 4
  %37 = load i16, ptr %36, align 8
  %38 = and i16 %37, 511
  %39 = add nsw i16 %38, -71
  %40 = icmp ult i16 %39, 14
  br i1 %40, label %41, label %62

41:                                               ; preds = %35
  %42 = getelementptr inbounds %struct.op, ptr %24, i64 0, i32 5
  %43 = load i8, ptr %42, align 2, !tbaa !35
  %44 = and i8 %43, 8
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %62

46:                                               ; preds = %41, %30
  %47 = add nsw i16 %17, -92
  %48 = icmp ult i16 %47, 9
  br i1 %48, label %52, label %49

49:                                               ; preds = %52, %46
  %50 = icmp eq i16 %17, 98
  %51 = select i1 %50, ptr @.str.135, ptr @.str.136
  br label %60

52:                                               ; preds = %46
  %53 = lshr i16 319, %47
  %54 = and i16 %53, 1
  %55 = icmp eq i16 %54, 0
  br i1 %55, label %49, label %56

56:                                               ; preds = %52
  %57 = sext i16 %47 to i64
  %58 = shl i64 %57, 2
  %59 = call ptr @llvm.load.relative.i64(ptr @reltable.Perl_ck_bitop, i64 %58)
  br label %60

60:                                               ; preds = %56, %49
  %61 = phi ptr [ %51, %49 ], [ %59, %56 ]
  tail call void (i32, ptr, ...) @Perl_ck_warner(i32 noundef 33, ptr noundef nonnull @.str.130, ptr noundef nonnull %61) #29
  br label %62

62:                                               ; preds = %35, %41, %60, %15, %10
  ret ptr %0
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_ck_cmp(ptr noundef readonly returned %0) local_unnamed_addr #4 {
  %2 = tail call zeroext i1 @Perl_ckwarn(i32 noundef 28) #29
  br i1 %2, label %3, label %88

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.unop, ptr %0, i64 0, i32 7
  %5 = load ptr, ptr %4, align 8, !tbaa !36
  %6 = icmp eq ptr %5, null
  br i1 %6, label %88, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.op, ptr %5, i64 0, i32 4
  %9 = load i16, ptr %8, align 8
  %10 = and i16 %9, 511
  switch i16 %10, label %88 [
    i16 15, label %11
    i16 5, label %43
  ]

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.op, ptr %5, i64 0, i32 5
  %13 = load i8, ptr %12, align 2, !tbaa !35
  %14 = and i8 %13, 4
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %88, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.unop, ptr %5, i64 0, i32 7
  %18 = load ptr, ptr %17, align 8, !tbaa !36
  %19 = icmp eq ptr %18, null
  br i1 %19, label %88, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.op, ptr %18, i64 0, i32 4
  %22 = load i16, ptr %21, align 8
  %23 = and i16 %22, 511
  %24 = icmp eq i16 %23, 7
  br i1 %24, label %25, label %88

25:                                               ; preds = %20
  %26 = getelementptr inbounds %struct.svop, ptr %18, i64 0, i32 7
  %27 = load ptr, ptr %26, align 8, !tbaa !65
  %28 = load ptr, ptr %27, align 8, !tbaa !169
  %29 = getelementptr inbounds %struct.xpvgv, ptr %28, i64 0, i32 4
  %30 = load ptr, ptr %29, align 8, !tbaa !13
  %31 = getelementptr inbounds %struct.hek, ptr %30, i64 0, i32 2
  %32 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %31, ptr noundef nonnull dereferenceable(2) @.str.138) #30
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %88

34:                                               ; preds = %25
  %35 = getelementptr inbounds %struct.op, ptr %5, i64 0, i32 1
  %36 = load ptr, ptr %35, align 8, !tbaa !38
  %37 = icmp eq ptr %36, null
  br i1 %37, label %88, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct.op, ptr %36, i64 0, i32 4
  %40 = load i16, ptr %39, align 8
  %41 = and i16 %40, 511
  %42 = icmp eq i16 %41, 5
  br i1 %42, label %75, label %88

43:                                               ; preds = %7
  %44 = getelementptr inbounds %struct.op, ptr %5, i64 0, i32 1
  %45 = load ptr, ptr %44, align 8, !tbaa !38
  %46 = icmp eq ptr %45, null
  br i1 %46, label %88, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %struct.op, ptr %45, i64 0, i32 4
  %49 = load i16, ptr %48, align 8
  %50 = and i16 %49, 511
  %51 = icmp eq i16 %50, 15
  br i1 %51, label %52, label %88

52:                                               ; preds = %47
  %53 = getelementptr inbounds %struct.op, ptr %45, i64 0, i32 5
  %54 = load i8, ptr %53, align 2, !tbaa !35
  %55 = and i8 %54, 4
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %88, label %57

57:                                               ; preds = %52
  %58 = getelementptr inbounds %struct.unop, ptr %45, i64 0, i32 7
  %59 = load ptr, ptr %58, align 8, !tbaa !36
  %60 = icmp eq ptr %59, null
  br i1 %60, label %88, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds %struct.op, ptr %59, i64 0, i32 4
  %63 = load i16, ptr %62, align 8
  %64 = and i16 %63, 511
  %65 = icmp eq i16 %64, 7
  br i1 %65, label %66, label %88

66:                                               ; preds = %61
  %67 = getelementptr inbounds %struct.svop, ptr %59, i64 0, i32 7
  %68 = load ptr, ptr %67, align 8, !tbaa !65
  %69 = load ptr, ptr %68, align 8, !tbaa !169
  %70 = getelementptr inbounds %struct.xpvgv, ptr %69, i64 0, i32 4
  %71 = load ptr, ptr %70, align 8, !tbaa !13
  %72 = getelementptr inbounds %struct.hek, ptr %71, i64 0, i32 2
  %73 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %72, ptr noundef nonnull dereferenceable(2) @.str.138) #30
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %88

75:                                               ; preds = %66, %38
  %76 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 4
  %77 = load i16, ptr %76, align 8
  %78 = and i16 %77, 511
  %79 = icmp eq i16 %78, 380
  br i1 %79, label %80, label %82

80:                                               ; preds = %75
  %81 = tail call ptr @Perl_custom_op_get_field(ptr noundef nonnull %0, i32 noundef 2)
  br label %86

82:                                               ; preds = %75
  %83 = zext i16 %78 to i64
  %84 = getelementptr inbounds [0 x ptr], ptr @PL_op_desc, i64 0, i64 %83
  %85 = load ptr, ptr %84, align 8, !tbaa !6
  br label %86

86:                                               ; preds = %82, %80
  %87 = phi ptr [ %81, %80 ], [ %85, %82 ]
  tail call void (i32, ptr, ...) @Perl_warner(i32 noundef 28, ptr noundef nonnull @.str.137, ptr noundef %87) #29
  br label %88

88:                                               ; preds = %7, %47, %52, %57, %61, %11, %16, %20, %25, %34, %38, %3, %43, %66, %86, %1
  ret ptr %0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define dso_local ptr @Perl_ck_concat(ptr noundef returned %0) local_unnamed_addr #22 {
  %2 = getelementptr inbounds %struct.unop, ptr %0, i64 0, i32 7
  %3 = load ptr, ptr %2, align 8, !tbaa !36
  %4 = getelementptr inbounds %struct.op, ptr %3, i64 0, i32 4
  %5 = load i16, ptr %4, align 8
  %6 = and i16 %5, 511
  %7 = icmp eq i16 %6, 67
  br i1 %7, label %8, label %24

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.op, ptr %3, i64 0, i32 6
  %10 = load i8, ptr %9, align 1, !tbaa !33
  %11 = and i8 %10, 16
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %24

13:                                               ; preds = %8
  %14 = getelementptr inbounds %struct.unop, ptr %3, i64 0, i32 7
  %15 = load ptr, ptr %14, align 8, !tbaa !36
  %16 = getelementptr inbounds %struct.op, ptr %15, i64 0, i32 5
  %17 = load i8, ptr %16, align 2, !tbaa !35
  %18 = and i8 %17, 32
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %24

20:                                               ; preds = %13
  %21 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 5
  %22 = load i8, ptr %21, align 2, !tbaa !35
  %23 = or i8 %22, 64
  store i8 %23, ptr %21, align 2, !tbaa !35
  br label %24

24:                                               ; preds = %20, %13, %8, %1
  ret ptr %0
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_ck_spair(ptr noundef %0) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 5
  %3 = load i8, ptr %2, align 2, !tbaa !35
  %4 = and i8 %3, 4
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %65, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 4
  %8 = load i16, ptr %7, align 8
  %9 = and i16 %8, 511
  %10 = zext i16 %9 to i32
  %11 = tail call ptr @Perl_ck_fun(ptr noundef nonnull %0)
  %12 = icmp eq ptr %11, null
  br i1 %12, label %28, label %13

13:                                               ; preds = %6
  %14 = getelementptr inbounds %struct.op, ptr %11, i64 0, i32 5
  %15 = load i8, ptr %14, align 2, !tbaa !35
  %16 = and i8 %15, 4
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %28, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.listop, ptr %11, i64 0, i32 7
  %20 = load ptr, ptr %19, align 8, !tbaa !6
  %21 = icmp eq ptr %20, null
  br i1 %21, label %28, label %22

22:                                               ; preds = %18, %22
  %23 = phi ptr [ %26, %22 ], [ %20, %18 ]
  %24 = tail call ptr @Perl_op_lvalue_flags(ptr noundef nonnull %23, i32 noundef %10, i32 noundef 0) #34
  %25 = getelementptr inbounds %struct.op, ptr %23, i64 0, i32 1
  %26 = load ptr, ptr %25, align 8, !tbaa !6
  %27 = icmp eq ptr %26, null
  br i1 %27, label %28, label %22, !llvm.loop !155

28:                                               ; preds = %22, %6, %13, %18
  %29 = getelementptr inbounds %struct.unop, ptr %11, i64 0, i32 7
  %30 = load ptr, ptr %29, align 8, !tbaa !36
  %31 = getelementptr inbounds %struct.unop, ptr %30, i64 0, i32 7
  %32 = load ptr, ptr %31, align 8, !tbaa !36
  %33 = getelementptr inbounds %struct.op, ptr %32, i64 0, i32 1
  %34 = load ptr, ptr %33, align 8, !tbaa !38
  %35 = icmp eq ptr %34, null
  br i1 %35, label %63, label %36

36:                                               ; preds = %28
  %37 = getelementptr inbounds %struct.op, ptr %34, i64 0, i32 4
  %38 = load i16, ptr %37, align 8
  %39 = and i16 %38, 511
  %40 = getelementptr inbounds %struct.op, ptr %34, i64 0, i32 1
  %41 = load ptr, ptr %40, align 8, !tbaa !38
  %42 = icmp eq ptr %41, null
  br i1 %42, label %43, label %78

43:                                               ; preds = %36
  %44 = getelementptr inbounds %struct.op, ptr %11, i64 0, i32 4
  %45 = load i16, ptr %44, align 8
  %46 = and i16 %45, 511
  %47 = icmp eq i16 %46, 20
  br i1 %47, label %51, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %struct.op, ptr %34, i64 0, i32 5
  %50 = load i8, ptr %49, align 2, !tbaa !35
  br label %59

51:                                               ; preds = %43
  %52 = icmp eq i16 %39, 17
  br i1 %52, label %63, label %53

53:                                               ; preds = %51
  %54 = getelementptr inbounds %struct.op, ptr %34, i64 0, i32 5
  %55 = load i8, ptr %54, align 2, !tbaa !35
  %56 = and i8 %55, 8
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %53
  switch i16 %39, label %59 [
    i16 149, label %63
    i16 135, label %63
    i16 11, label %63
    i16 10, label %63
  ]

59:                                               ; preds = %48, %58, %53
  %60 = phi i8 [ %50, %48 ], [ %55, %58 ], [ %55, %53 ]
  %61 = and i8 %60, 3
  %62 = icmp eq i8 %61, 2
  br i1 %62, label %63, label %78

63:                                               ; preds = %28, %58, %58, %58, %58, %59, %51
  %64 = tail call ptr @Perl_op_sibling_splice(ptr noundef nonnull %30, ptr noundef null, i32 noundef 1, ptr noundef null)
  tail call void @Perl_op_free(ptr noundef nonnull %32)
  br label %65

65:                                               ; preds = %63, %1
  %66 = phi ptr [ %11, %63 ], [ %0, %1 ]
  %67 = getelementptr inbounds %struct.op, ptr %66, i64 0, i32 4
  %68 = load i16, ptr %67, align 8
  %69 = add i16 %68, 1
  %70 = and i16 %69, 511
  %71 = and i16 %68, -512
  %72 = or i16 %70, %71
  store i16 %72, ptr %67, align 8
  %73 = zext i16 %70 to i64
  %74 = getelementptr inbounds [0 x ptr], ptr @PL_ppaddr, i64 0, i64 %73
  %75 = load ptr, ptr %74, align 8, !tbaa !6
  %76 = getelementptr inbounds %struct.op, ptr %66, i64 0, i32 2
  store ptr %75, ptr %76, align 8, !tbaa !78
  %77 = tail call ptr @Perl_ck_fun(ptr noundef nonnull %66)
  br label %78

78:                                               ; preds = %36, %59, %65
  %79 = phi ptr [ %77, %65 ], [ %11, %59 ], [ %11, %36 ]
  ret ptr %79
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_ck_fun(ptr noundef %0) local_unnamed_addr #4 {
  %2 = alloca i64, align 8
  %3 = getelementptr %struct.op, ptr %0, i64 0, i32 4
  %4 = load i16, ptr %3, align 8
  %5 = and i16 %4, 511
  %6 = zext i16 %5 to i32
  %7 = zext i16 %5 to i64
  %8 = getelementptr inbounds [0 x i32], ptr @PL_opargs, i64 0, i64 %7
  %9 = load i32, ptr %8, align 4, !tbaa !52
  %10 = freeze i32 %9
  %11 = lshr i32 %10, 12
  %12 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 5
  %13 = load i8, ptr %12, align 2, !tbaa !35
  %14 = and i8 %13, 64
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %34, label %16

16:                                               ; preds = %1
  %17 = icmp ugt i32 %10, 65535
  %18 = and i32 %10, 557056
  %19 = icmp eq i32 %18, 32768
  %20 = and i1 %17, %19
  br i1 %20, label %21, label %23

21:                                               ; preds = %16
  %22 = and i32 %11, 1048567
  br label %34

23:                                               ; preds = %16
  %24 = icmp eq i16 %5, 380
  br i1 %24, label %25, label %27

25:                                               ; preds = %23
  %26 = tail call ptr @Perl_custom_op_get_field(ptr noundef nonnull %0, i32 noundef 2)
  br label %30

27:                                               ; preds = %23
  %28 = getelementptr inbounds [0 x ptr], ptr @PL_op_desc, i64 0, i64 %7
  %29 = load ptr, ptr %28, align 8, !tbaa !6
  br label %30

30:                                               ; preds = %25, %27
  %31 = phi ptr [ %26, %25 ], [ %29, %27 ]
  %32 = tail call ptr (ptr, ...) @Perl_form(ptr noundef nonnull @.str.158, ptr noundef %31) #29
  %33 = tail call i32 @Perl_yyerror(ptr noundef %32) #29
  br label %562

34:                                               ; preds = %21, %1
  %35 = phi i32 [ %22, %21 ], [ %11, %1 ]
  %36 = and i8 %13, 4
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %531, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct.listop, ptr %0, i64 0, i32 7
  %40 = load ptr, ptr %39, align 8, !tbaa !81
  %41 = getelementptr inbounds %struct.op, ptr %40, i64 0, i32 4
  %42 = load i16, ptr %41, align 8
  %43 = and i16 %42, 511
  switch i16 %43, label %55 [
    i16 3, label %48
    i16 0, label %44
  ]

44:                                               ; preds = %38
  %45 = getelementptr inbounds %struct.op, ptr %40, i64 0, i32 3
  %46 = load i64, ptr %45, align 8, !tbaa !34
  %47 = icmp eq i64 %46, 3
  br i1 %47, label %48, label %55

48:                                               ; preds = %44, %38
  %49 = getelementptr inbounds %struct.op, ptr %40, i64 0, i32 1
  %50 = load ptr, ptr %49, align 8, !tbaa !38
  %51 = icmp eq ptr %50, null
  br i1 %51, label %80, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds %struct.op, ptr %50, i64 0, i32 4
  %54 = load i16, ptr %53, align 8
  br label %55

55:                                               ; preds = %52, %38, %44
  %56 = phi i16 [ %54, %52 ], [ %42, %44 ], [ %42, %38 ]
  %57 = phi ptr [ %40, %52 ], [ null, %44 ], [ null, %38 ]
  %58 = phi ptr [ %50, %52 ], [ %40, %44 ], [ %40, %38 ]
  %59 = and i16 %56, 511
  %60 = icmp eq i16 %59, 384
  br i1 %60, label %61, label %80

61:                                               ; preds = %55
  %62 = icmp eq i32 %35, 0
  br i1 %62, label %562, label %63

63:                                               ; preds = %61, %63
  %64 = phi i32 [ %71, %63 ], [ %35, %61 ]
  %65 = phi i8 [ %67, %63 ], [ 0, %61 ]
  %66 = phi i8 [ %70, %63 ], [ 0, %61 ]
  %67 = add nuw nsw i8 %65, 1
  %68 = and i32 %64, 8
  %69 = icmp eq i32 %68, 0
  %70 = select i1 %69, i8 %66, i8 1
  %71 = lshr i32 %64, 4
  %72 = icmp ult i32 %64, 16
  br i1 %72, label %73, label %63, !llvm.loop !307

73:                                               ; preds = %63
  %74 = and i8 %70, 1
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %562, label %76

76:                                               ; preds = %73
  %77 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 6
  %78 = load i8, ptr %77, align 1, !tbaa !33
  %79 = or i8 %78, %67
  store i8 %79, ptr %77, align 1, !tbaa !33
  br label %562

80:                                               ; preds = %55, %48
  %81 = phi ptr [ %57, %55 ], [ %40, %48 ]
  %82 = phi ptr [ %58, %55 ], [ null, %48 ]
  %83 = icmp eq i32 %35, 0
  br i1 %83, label %494, label %84

84:                                               ; preds = %80
  %85 = icmp ult i32 %35, 16
  %86 = and i32 %35, 8
  %87 = icmp ne i32 %86, 0
  %88 = and i32 %35, 7
  %89 = icmp eq i32 %88, 2
  %90 = or i1 %87, %89
  %91 = and i32 %10, 128
  %92 = icmp eq i32 %91, 0
  %93 = and i16 %4, 509
  %94 = icmp eq i16 %93, 44
  %95 = getelementptr inbounds [0 x ptr], ptr @PL_op_desc, i64 0, i64 %7
  %96 = icmp ne i16 %5, 2
  %97 = icmp eq i16 %5, 147
  br label %98

98:                                               ; preds = %84, %474
  %99 = phi i1 [ %85, %84 ], [ %487, %474 ]
  %100 = phi i1 [ %90, %84 ], [ %486, %474 ]
  %101 = phi i32 [ %88, %84 ], [ %484, %474 ]
  %102 = phi i32 [ %35, %84 ], [ %478, %474 ]
  %103 = phi ptr [ %81, %84 ], [ %477, %474 ]
  %104 = phi ptr [ %82, %84 ], [ %480, %474 ]
  %105 = phi i32 [ 0, %84 ], [ %476, %474 ]
  %106 = phi i8 [ 0, %84 ], [ %475, %474 ]
  %107 = icmp eq ptr %104, null
  br i1 %100, label %108, label %139

108:                                              ; preds = %98
  br i1 %92, label %109, label %116

109:                                              ; preds = %108
  br i1 %99, label %110, label %113, !llvm.loop !308

110:                                              ; preds = %109
  br i1 %107, label %488, label %111

111:                                              ; preds = %110
  %112 = add nsw i32 %105, 1
  switch i32 %101, label %474 [
    i32 1, label %146
    i32 2, label %488
    i32 3, label %171
    i32 4, label %218
    i32 5, label %244
    i32 6, label %250
    i32 7, label %454
  ]

113:                                              ; preds = %109
  br i1 %107, label %488, label %114

114:                                              ; preds = %113
  %115 = add nsw i32 %105, 1
  switch i32 %101, label %474 [
    i32 1, label %146
    i32 2, label %166
    i32 3, label %171
    i32 4, label %218
    i32 5, label %244
    i32 6, label %250
    i32 7, label %454
  ]

116:                                              ; preds = %108
  br i1 %99, label %117, label %128, !llvm.loop !308

117:                                              ; preds = %116
  br i1 %107, label %118, label %125

118:                                              ; preds = %117
  %119 = and i8 %106, 1
  %120 = icmp eq i8 %119, 0
  br i1 %120, label %121, label %488

121:                                              ; preds = %118
  %122 = call ptr @Perl_newDEFSVOP()
  %123 = call ptr @Perl_op_sibling_splice(ptr noundef %0, ptr noundef %103, i32 noundef 0, ptr noundef %122)
  %124 = icmp eq ptr %122, null
  br i1 %124, label %488, label %125

125:                                              ; preds = %121, %117
  %126 = phi ptr [ %122, %121 ], [ %104, %117 ]
  %127 = add nsw i32 %105, 1
  switch i32 %101, label %474 [
    i32 1, label %146
    i32 2, label %488
    i32 3, label %171
    i32 4, label %218
    i32 5, label %244
    i32 6, label %250
    i32 7, label %454
  ]

128:                                              ; preds = %116
  br i1 %107, label %129, label %136

129:                                              ; preds = %128
  %130 = and i8 %106, 1
  %131 = icmp eq i8 %130, 0
  br i1 %131, label %132, label %488

132:                                              ; preds = %129
  %133 = call ptr @Perl_newDEFSVOP()
  %134 = call ptr @Perl_op_sibling_splice(ptr noundef %0, ptr noundef %103, i32 noundef 0, ptr noundef %133)
  %135 = icmp eq ptr %133, null
  br i1 %135, label %488, label %136

136:                                              ; preds = %132, %128
  %137 = phi ptr [ %133, %132 ], [ %104, %128 ]
  %138 = add nsw i32 %105, 1
  switch i32 %101, label %474 [
    i32 1, label %146
    i32 2, label %166
    i32 3, label %171
    i32 4, label %218
    i32 5, label %244
    i32 6, label %250
    i32 7, label %454
  ]

139:                                              ; preds = %98
  br i1 %99, label %140, label %143, !llvm.loop !308

140:                                              ; preds = %139
  br i1 %107, label %488, label %141

141:                                              ; preds = %140
  %142 = add nsw i32 %105, 1
  switch i32 %101, label %474 [
    i32 1, label %146
    i32 2, label %488
    i32 3, label %171
    i32 4, label %218
    i32 5, label %244
    i32 6, label %250
    i32 7, label %454
  ]

143:                                              ; preds = %139
  br i1 %107, label %488, label %144

144:                                              ; preds = %143
  %145 = add nsw i32 %105, 1
  switch i32 %101, label %474 [
    i32 1, label %146
    i32 2, label %166
    i32 3, label %171
    i32 4, label %218
    i32 5, label %244
    i32 6, label %250
    i32 7, label %454
  ]

146:                                              ; preds = %125, %141, %144, %114, %111, %136
  %147 = phi ptr [ %104, %111 ], [ %104, %114 ], [ %137, %136 ], [ %104, %141 ], [ %104, %144 ], [ %126, %125 ]
  %148 = phi i8 [ 1, %111 ], [ 1, %114 ], [ 1, %136 ], [ %106, %141 ], [ %106, %144 ], [ 1, %125 ]
  %149 = phi i32 [ %112, %111 ], [ %115, %114 ], [ %138, %136 ], [ %142, %141 ], [ %145, %144 ], [ %127, %125 ]
  %150 = icmp eq i32 %105, 0
  %151 = icmp ult i32 %102, 16
  %152 = and i1 %150, %151
  br i1 %152, label %153, label %163

153:                                              ; preds = %146
  %154 = getelementptr inbounds %struct.op, ptr %147, i64 0, i32 4
  %155 = load i16, ptr %154, align 8
  %156 = and i16 %155, 511
  %157 = icmp eq i16 %156, 158
  %158 = and i1 %96, %157
  br i1 %158, label %159, label %163

159:                                              ; preds = %153
  %160 = load ptr, ptr %95, align 8, !tbaa !6
  %161 = call ptr (ptr, ...) @Perl_form(ptr noundef nonnull @.str.159, ptr noundef %160) #29
  %162 = call i32 @Perl_yyerror_pv(ptr noundef %161, i32 noundef 0) #29
  br label %562

163:                                              ; preds = %153, %146
  br i1 %97, label %474, label %164

164:                                              ; preds = %163
  %165 = call ptr @Perl_scalar(ptr noundef nonnull %147)
  br label %474

166:                                              ; preds = %144, %114, %136
  %167 = phi ptr [ %104, %114 ], [ %137, %136 ], [ %104, %144 ]
  %168 = phi i8 [ 1, %114 ], [ 1, %136 ], [ %106, %144 ]
  %169 = phi i32 [ %115, %114 ], [ %138, %136 ], [ %145, %144 ]
  %170 = call ptr @Perl_list(ptr noundef nonnull %167)
  br label %474

171:                                              ; preds = %125, %141, %144, %114, %111, %136
  %172 = phi ptr [ %104, %111 ], [ %104, %114 ], [ %137, %136 ], [ %104, %141 ], [ %104, %144 ], [ %126, %125 ]
  %173 = phi i8 [ 1, %111 ], [ 1, %114 ], [ 1, %136 ], [ %106, %141 ], [ %106, %144 ], [ 1, %125 ]
  %174 = phi i32 [ %112, %111 ], [ %115, %114 ], [ %138, %136 ], [ %142, %141 ], [ %145, %144 ], [ %127, %125 ]
  switch i16 %5, label %181 [
    i16 166, label %175
    i16 163, label %175
  ]

175:                                              ; preds = %171, %171
  %176 = getelementptr inbounds %struct.op, ptr %172, i64 0, i32 1
  %177 = load ptr, ptr %176, align 8, !tbaa !38
  %178 = icmp eq ptr %177, null
  br i1 %178, label %179, label %181

179:                                              ; preds = %175
  %180 = load ptr, ptr %95, align 8, !tbaa !6
  call void (i32, ptr, ...) @Perl_ck_warner(i32 noundef 28, ptr noundef nonnull @.str.149, ptr noundef %180) #29
  br label %181

181:                                              ; preds = %171, %175, %179
  %182 = getelementptr inbounds %struct.op, ptr %172, i64 0, i32 4
  %183 = load i16, ptr %182, align 8
  %184 = and i16 %183, 511
  %185 = icmp eq i16 %184, 5
  br i1 %185, label %186, label %211

186:                                              ; preds = %181
  %187 = getelementptr inbounds %struct.svop, ptr %172, i64 0, i32 7
  %188 = load ptr, ptr %187, align 8, !tbaa !65
  %189 = getelementptr inbounds %struct.sv, ptr %188, i64 0, i32 2
  %190 = load i32, ptr %189, align 4, !tbaa !84
  %191 = and i32 %190, 2048
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %200, label %193

193:                                              ; preds = %186
  %194 = getelementptr inbounds %struct.sv, ptr %188, i64 0, i32 3
  %195 = load ptr, ptr %194, align 8, !tbaa !13
  %196 = getelementptr inbounds %struct.sv, ptr %195, i64 0, i32 2
  %197 = load i32, ptr %196, align 4, !tbaa !84
  %198 = and i32 %197, 255
  %199 = icmp eq i32 %198, 11
  br i1 %199, label %215, label %200

200:                                              ; preds = %193, %186
  %201 = load i16, ptr %3, align 8
  %202 = and i16 %201, 511
  %203 = zext i16 %202 to i64
  %204 = getelementptr inbounds [0 x ptr], ptr @PL_op_desc, i64 0, i64 %203
  %205 = load ptr, ptr %204, align 8, !tbaa !6
  %206 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_op_desc, i64 0, i64 5), align 8, !tbaa !6
  %207 = call ptr (ptr, ...) @Perl_form(ptr noundef nonnull @.str.160, i32 noundef %174, ptr noundef %205, ptr noundef nonnull @.str.150, ptr noundef %206) #29
  %208 = call i32 @Perl_yyerror_pv(ptr noundef %207, i32 noundef 0) #29
  %209 = load i16, ptr %182, align 8
  %210 = and i16 %209, 511
  br label %211

211:                                              ; preds = %200, %181
  %212 = phi i16 [ %210, %200 ], [ %184, %181 ]
  switch i16 %212, label %215 [
    i16 135, label %213
    i16 10, label %213
  ]

213:                                              ; preds = %211, %211
  %214 = call ptr @Perl_op_lvalue_flags(ptr noundef nonnull %172, i32 noundef %6, i32 noundef 0)
  br label %474

215:                                              ; preds = %193, %211
  %216 = call ptr @Perl_scalar(ptr noundef nonnull %172)
  %217 = load ptr, ptr %95, align 8, !tbaa !6
  call void (i32, ptr, ...) @Perl_ck_warner_d(i32 noundef 56, ptr noundef nonnull @.str.151, ptr noundef %217) #29
  br label %474

218:                                              ; preds = %125, %141, %144, %114, %111, %136
  %219 = phi ptr [ %104, %111 ], [ %104, %114 ], [ %137, %136 ], [ %104, %141 ], [ %104, %144 ], [ %126, %125 ]
  %220 = phi i8 [ 1, %111 ], [ 1, %114 ], [ 1, %136 ], [ %106, %141 ], [ %106, %144 ], [ 1, %125 ]
  %221 = phi i32 [ %112, %111 ], [ %115, %114 ], [ %138, %136 ], [ %142, %141 ], [ %145, %144 ], [ %127, %125 ]
  %222 = getelementptr inbounds %struct.op, ptr %219, i64 0, i32 4
  %223 = load i16, ptr %222, align 8
  %224 = and i16 %223, 511
  switch i16 %224, label %225 [
    i16 149, label %242
    i16 11, label %242
  ]

225:                                              ; preds = %218
  %226 = load i16, ptr %3, align 8
  %227 = and i16 %226, 511
  %228 = zext i16 %227 to i64
  %229 = getelementptr inbounds [0 x ptr], ptr @PL_op_desc, i64 0, i64 %228
  %230 = load ptr, ptr %229, align 8, !tbaa !6
  %231 = icmp eq i16 %224, 380
  br i1 %231, label %232, label %234

232:                                              ; preds = %225
  %233 = call ptr @Perl_custom_op_get_field(ptr noundef nonnull %219, i32 noundef 2)
  br label %238

234:                                              ; preds = %225
  %235 = zext i16 %224 to i64
  %236 = getelementptr inbounds [0 x ptr], ptr @PL_op_desc, i64 0, i64 %235
  %237 = load ptr, ptr %236, align 8, !tbaa !6
  br label %238

238:                                              ; preds = %232, %234
  %239 = phi ptr [ %233, %232 ], [ %237, %234 ]
  %240 = call ptr (ptr, ...) @Perl_form(ptr noundef nonnull @.str.160, i32 noundef %221, ptr noundef %230, ptr noundef nonnull @.str.152, ptr noundef %239) #29
  %241 = call i32 @Perl_yyerror_pv(ptr noundef %240, i32 noundef 0) #29
  br label %242

242:                                              ; preds = %218, %218, %238
  %243 = call ptr @Perl_op_lvalue_flags(ptr noundef nonnull %219, i32 noundef %6, i32 noundef 0)
  br label %474

244:                                              ; preds = %125, %141, %144, %114, %111, %136
  %245 = phi i8 [ 1, %136 ], [ 1, %111 ], [ 1, %114 ], [ %106, %141 ], [ %106, %144 ], [ 1, %125 ]
  %246 = phi i32 [ %138, %136 ], [ %112, %111 ], [ %115, %114 ], [ %142, %141 ], [ %145, %144 ], [ %127, %125 ]
  %247 = call ptr @Perl_op_sibling_splice(ptr noundef %0, ptr noundef %103, i32 noundef 1, ptr noundef null)
  %248 = call ptr @Perl_newUNOP(i32 noundef 0, i32 noundef 0, ptr noundef %247)
  %249 = call ptr @Perl_op_sibling_splice(ptr noundef %0, ptr noundef %103, i32 noundef 0, ptr noundef %248)
  store ptr %248, ptr %248, align 8, !tbaa !25
  br label %474

250:                                              ; preds = %125, %141, %144, %114, %111, %136
  %251 = phi ptr [ %104, %111 ], [ %104, %114 ], [ %137, %136 ], [ %104, %141 ], [ %104, %144 ], [ %126, %125 ]
  %252 = phi i8 [ 1, %111 ], [ 1, %114 ], [ 1, %136 ], [ %106, %141 ], [ %106, %144 ], [ 1, %125 ]
  %253 = phi i32 [ %112, %111 ], [ %115, %114 ], [ %138, %136 ], [ %142, %141 ], [ %145, %144 ], [ %127, %125 ]
  %254 = getelementptr inbounds %struct.op, ptr %251, i64 0, i32 4
  %255 = load i16, ptr %254, align 8
  %256 = and i16 %255, 511
  switch i16 %256, label %280 [
    i16 7, label %451
    i16 14, label %451
    i16 5, label %257
    i16 26, label %271
  ]

257:                                              ; preds = %250
  %258 = getelementptr inbounds %struct.op, ptr %251, i64 0, i32 6
  %259 = load i8, ptr %258, align 1, !tbaa !33
  %260 = and i8 %259, 64
  %261 = icmp eq i8 %260, 0
  br i1 %261, label %280, label %262

262:                                              ; preds = %257
  %263 = getelementptr inbounds %struct.svop, ptr %251, i64 0, i32 7
  %264 = load ptr, ptr %263, align 8, !tbaa !65
  %265 = call ptr @Perl_gv_fetchsv(ptr noundef %264, i32 noundef 1, i32 noundef 15) #29
  %266 = getelementptr inbounds %struct.gv, ptr %265, i64 0, i32 1
  %267 = load i32, ptr %266, align 8, !tbaa !74
  %268 = add i32 %267, 1
  store i32 %268, ptr %266, align 8, !tbaa !74
  %269 = call ptr @Perl_newSVOP(i32 noundef 7, i32 noundef 0, ptr noundef %265)
  %270 = call ptr @Perl_op_sibling_splice(ptr noundef %0, ptr noundef %103, i32 noundef 1, ptr noundef %269)
  call void @Perl_op_free(ptr noundef nonnull %251)
  br label %451

271:                                              ; preds = %250
  %272 = load i16, ptr %3, align 8
  %273 = and i16 %272, 511
  %274 = zext i16 %273 to i64
  %275 = getelementptr inbounds [0 x ptr], ptr @PL_op_desc, i64 0, i64 %274
  %276 = load ptr, ptr %275, align 8, !tbaa !6
  %277 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_op_desc, i64 0, i64 26), align 8, !tbaa !6
  %278 = call ptr (ptr, ...) @Perl_form(ptr noundef nonnull @.str.160, i32 noundef %253, ptr noundef %276, ptr noundef nonnull @.str.153, ptr noundef %277) #29
  %279 = call i32 @Perl_yyerror_pv(ptr noundef %278, i32 noundef 0) #29
  br label %451

280:                                              ; preds = %250, %257
  %281 = load i16, ptr %3, align 8
  %282 = and i16 %281, 511
  %283 = zext i16 %282 to i32
  switch i32 %283, label %439 [
    i32 222, label %284
    i32 254, label %284
    i32 240, label %286
    i32 220, label %286
    i32 232, label %286
    i32 253, label %286
    i32 305, label %286
    i32 258, label %286
  ]

284:                                              ; preds = %280, %280
  %285 = icmp ult i32 %105, 2
  br i1 %285, label %288, label %439

286:                                              ; preds = %280, %280, %280, %280, %280, %280
  %287 = icmp eq i32 %105, 0
  br i1 %287, label %288, label %439

288:                                              ; preds = %284, %286
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #29
  store i64 0, ptr %2, align 8, !tbaa !88
  switch i16 %256, label %437 [
    i16 9, label %289
    i16 15, label %301
    i16 138, label %328
    i16 150, label %328
  ]

289:                                              ; preds = %288
  %290 = load ptr, ptr @PL_comppad_name, align 8, !tbaa !6
  %291 = getelementptr inbounds %struct.padnamelist, ptr %290, i64 0, i32 1
  %292 = load ptr, ptr %291, align 8, !tbaa !151
  %293 = getelementptr inbounds %struct.op, ptr %251, i64 0, i32 3
  %294 = load i64, ptr %293, align 8, !tbaa !34
  %295 = getelementptr inbounds ptr, ptr %292, i64 %294
  %296 = load ptr, ptr %295, align 8, !tbaa !6
  %297 = load ptr, ptr %296, align 8, !tbaa !138
  %298 = getelementptr inbounds %struct.padname, ptr %296, i64 0, i32 7
  %299 = load i8, ptr %298, align 8, !tbaa !136
  %300 = zext i8 %299 to i64
  store i64 %300, ptr %2, align 8, !tbaa !88
  br label %403

301:                                              ; preds = %288
  %302 = getelementptr inbounds %struct.unop, ptr %251, i64 0, i32 7
  %303 = load ptr, ptr %302, align 8, !tbaa !36
  %304 = getelementptr inbounds %struct.op, ptr %303, i64 0, i32 4
  %305 = load i16, ptr %304, align 8
  %306 = and i16 %305, 511
  %307 = icmp eq i16 %306, 7
  br i1 %307, label %308, label %437

308:                                              ; preds = %301
  %309 = getelementptr inbounds %struct.svop, ptr %303, i64 0, i32 7
  %310 = load ptr, ptr %309, align 8, !tbaa !65
  %311 = load ptr, ptr %310, align 8, !tbaa !169
  %312 = getelementptr inbounds %struct.xpvgv, ptr %311, i64 0, i32 4
  %313 = load ptr, ptr %312, align 8, !tbaa !13
  %314 = getelementptr inbounds %struct.hek, ptr %313, i64 0, i32 2
  %315 = getelementptr inbounds %struct.hek, ptr %313, i64 0, i32 1
  %316 = load i32, ptr %315, align 4, !tbaa !292
  %317 = sext i32 %316 to i64
  store i64 %317, ptr %2, align 8, !tbaa !88
  %318 = getelementptr inbounds i8, ptr %314, i64 %317
  %319 = getelementptr inbounds i8, ptr %318, i64 1
  %320 = load i8, ptr %319, align 1, !tbaa !13
  %321 = and i8 %320, 1
  %322 = zext i8 %321 to i32
  %323 = shl nuw nsw i32 %322, 29
  %324 = call i64 @Perl_pad_alloc(i32 noundef 14, i32 noundef 134217728) #29
  %325 = load ptr, ptr @PL_curpad, align 8, !tbaa !6
  %326 = getelementptr inbounds ptr, ptr %325, i64 %324
  %327 = load ptr, ptr %326, align 8, !tbaa !6
  br label %413

328:                                              ; preds = %288, %288
  %329 = getelementptr inbounds %struct.binop, ptr %251, i64 0, i32 7
  %330 = load ptr, ptr %329, align 8, !tbaa !106
  %331 = icmp eq ptr %330, null
  br i1 %331, label %396, label %332

332:                                              ; preds = %328
  %333 = icmp eq i16 %256, 138
  %334 = getelementptr inbounds %struct.op, ptr %330, i64 0, i32 4
  %335 = load i16, ptr %334, align 8
  %336 = and i16 %335, 511
  switch i16 %336, label %355 [
    i16 135, label %337
    i16 149, label %337
  ]

337:                                              ; preds = %332, %332
  %338 = getelementptr inbounds %struct.unop, ptr %330, i64 0, i32 7
  %339 = load ptr, ptr %338, align 8, !tbaa !36
  %340 = icmp eq ptr %339, null
  br i1 %340, label %396, label %341

341:                                              ; preds = %337
  %342 = getelementptr inbounds %struct.op, ptr %339, i64 0, i32 4
  %343 = load i16, ptr %342, align 8
  %344 = and i16 %343, 511
  %345 = icmp eq i16 %344, 7
  br i1 %345, label %346, label %396

346:                                              ; preds = %341
  %347 = getelementptr inbounds %struct.svop, ptr %339, i64 0, i32 7
  %348 = load ptr, ptr %347, align 8, !tbaa !65
  %349 = icmp eq ptr %348, null
  br i1 %349, label %396, label %350

350:                                              ; preds = %346
  %351 = load ptr, ptr %348, align 8, !tbaa !169
  %352 = getelementptr inbounds %struct.xpvgv, ptr %351, i64 0, i32 4
  %353 = load ptr, ptr %352, align 8, !tbaa !13
  %354 = getelementptr inbounds %struct.hek, ptr %353, i64 0, i32 2
  br label %370

355:                                              ; preds = %332
  %356 = and i16 %335, 510
  %357 = icmp eq i16 %356, 10
  br i1 %357, label %358, label %396

358:                                              ; preds = %355
  %359 = load ptr, ptr @PL_comppad_name, align 8, !tbaa !6
  %360 = getelementptr inbounds %struct.padnamelist, ptr %359, i64 0, i32 1
  %361 = load ptr, ptr %360, align 8, !tbaa !151
  %362 = getelementptr inbounds %struct.op, ptr %330, i64 0, i32 3
  %363 = load i64, ptr %362, align 8, !tbaa !34
  %364 = getelementptr inbounds ptr, ptr %361, i64 %363
  %365 = load ptr, ptr %364, align 8, !tbaa !6
  %366 = load ptr, ptr %365, align 8, !tbaa !138
  %367 = icmp eq ptr %366, null
  br i1 %367, label %396, label %368

368:                                              ; preds = %358
  %369 = getelementptr inbounds i8, ptr %366, i64 1
  br label %370

370:                                              ; preds = %368, %350
  %371 = phi ptr [ %369, %368 ], [ %354, %350 ]
  %372 = select i1 %333, i32 91, i32 123
  %373 = select i1 %333, i32 93, i32 125
  %374 = call ptr (ptr, ...) @Perl_newSVpvf(ptr noundef nonnull @.str.156, ptr noundef nonnull %371, i32 noundef %372, i32 noundef %373) #29
  %375 = icmp eq ptr %374, null
  br i1 %375, label %396, label %376

376:                                              ; preds = %370
  %377 = getelementptr inbounds %struct.sv, ptr %374, i64 0, i32 2
  %378 = load i32, ptr %377, align 4, !tbaa !84
  %379 = and i32 %378, 2098176
  %380 = icmp eq i32 %379, 1024
  br i1 %380, label %381, label %387

381:                                              ; preds = %376
  %382 = load ptr, ptr %374, align 8, !tbaa !85
  %383 = getelementptr inbounds %struct.xpv, ptr %382, i64 0, i32 2
  %384 = load i64, ptr %383, align 8, !tbaa !86
  store i64 %384, ptr %2, align 8, !tbaa !88
  %385 = getelementptr inbounds %struct.sv, ptr %374, i64 0, i32 3
  %386 = load ptr, ptr %385, align 8, !tbaa !13
  br label %390

387:                                              ; preds = %376
  %388 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %374, ptr noundef nonnull %2, i32 noundef 34) #29
  %389 = load i32, ptr %377, align 4, !tbaa !84
  br label %390

390:                                              ; preds = %381, %387
  %391 = phi i32 [ %378, %381 ], [ %389, %387 ]
  %392 = phi ptr [ %386, %381 ], [ %388, %387 ]
  %393 = and i32 %391, 536870912
  %394 = call ptr @Perl_sv_2mortal(ptr noundef nonnull %374) #29
  %395 = icmp eq ptr %392, null
  br i1 %395, label %396, label %398

396:                                              ; preds = %337, %341, %358, %355, %346, %370, %328, %390
  %397 = phi i32 [ %393, %390 ], [ 0, %328 ], [ 0, %370 ], [ 0, %346 ], [ 0, %355 ], [ 0, %358 ], [ 0, %341 ], [ 0, %337 ]
  store i64 10, ptr %2, align 8, !tbaa !88
  br label %398

398:                                              ; preds = %396, %390
  %399 = phi i1 [ true, %390 ], [ false, %396 ]
  %400 = phi i32 [ %393, %390 ], [ %397, %396 ]
  %401 = phi ptr [ %392, %390 ], [ @.str.157, %396 ]
  %402 = call ptr @Perl_op_lvalue_flags(ptr noundef nonnull %251, i32 noundef %6, i32 noundef 0)
  br label %403

403:                                              ; preds = %398, %289
  %404 = phi ptr [ %297, %289 ], [ %401, %398 ]
  %405 = phi i32 [ 1, %289 ], [ %400, %398 ]
  %406 = phi i1 [ true, %289 ], [ %399, %398 ]
  %407 = icmp eq ptr %404, null
  br i1 %407, label %437, label %408

408:                                              ; preds = %403
  %409 = call i64 @Perl_pad_alloc(i32 noundef 14, i32 noundef 134217728) #29
  %410 = load ptr, ptr @PL_curpad, align 8, !tbaa !6
  %411 = getelementptr inbounds ptr, ptr %410, i64 %409
  %412 = load ptr, ptr %411, align 8, !tbaa !6
  br i1 %406, label %413, label %421

413:                                              ; preds = %308, %408
  %414 = phi ptr [ %327, %308 ], [ %412, %408 ]
  %415 = phi i64 [ %324, %308 ], [ %409, %408 ]
  %416 = phi ptr [ %314, %308 ], [ %404, %408 ]
  %417 = phi i32 [ %323, %308 ], [ %405, %408 ]
  %418 = load i8, ptr %416, align 1, !tbaa !13
  %419 = icmp eq i8 %418, 36
  br i1 %419, label %421, label %420

420:                                              ; preds = %413
  call void @Perl_sv_setpvn(ptr noundef %414, ptr noundef nonnull @.str.91, i64 noundef 1) #29
  br label %426

421:                                              ; preds = %413, %408
  %422 = phi ptr [ %414, %413 ], [ %412, %408 ]
  %423 = phi i64 [ %415, %413 ], [ %409, %408 ]
  %424 = phi ptr [ %416, %413 ], [ %404, %408 ]
  %425 = phi i32 [ %417, %413 ], [ %405, %408 ]
  call void @Perl_sv_setpvn(ptr noundef %422, ptr noundef nonnull @.str.19, i64 noundef 0) #29
  br label %426

426:                                              ; preds = %421, %420
  %427 = phi ptr [ %422, %421 ], [ %414, %420 ]
  %428 = phi i64 [ %423, %421 ], [ %415, %420 ]
  %429 = phi ptr [ %424, %421 ], [ %416, %420 ]
  %430 = phi i32 [ %425, %421 ], [ %417, %420 ]
  %431 = load i64, ptr %2, align 8, !tbaa !88
  call void @Perl_sv_catpvn_flags(ptr noundef %427, ptr noundef nonnull %429, i64 noundef %431, i32 noundef 2) #29
  %432 = icmp eq i32 %430, 0
  br i1 %432, label %437, label %433

433:                                              ; preds = %426
  %434 = getelementptr inbounds %struct.sv, ptr %427, i64 0, i32 2
  %435 = load i32, ptr %434, align 4, !tbaa !84
  %436 = or i32 %435, 536870912
  store i32 %436, ptr %434, align 4, !tbaa !84
  br label %437

437:                                              ; preds = %288, %301, %426, %433, %403
  %438 = phi i64 [ 0, %403 ], [ %428, %433 ], [ %428, %426 ], [ 0, %301 ], [ 0, %288 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #29
  br label %439

439:                                              ; preds = %286, %284, %280, %437
  %440 = phi i64 [ %438, %437 ], [ 0, %280 ], [ 0, %284 ], [ 0, %286 ]
  %441 = phi i8 [ 48, %437 ], [ 0, %280 ], [ 0, %284 ], [ 0, %286 ]
  %442 = phi i32 [ 0, %437 ], [ 128, %280 ], [ 128, %284 ], [ 128, %286 ]
  %443 = call ptr @Perl_scalar(ptr noundef nonnull %251)
  %444 = call ptr @Perl_op_sibling_splice(ptr noundef nonnull %0, ptr noundef %103, i32 noundef 1, ptr noundef null)
  %445 = call ptr @Perl_newUNOP(i32 noundef 14, i32 noundef %442, ptr noundef %444)
  %446 = call ptr @Perl_op_sibling_splice(ptr noundef nonnull %0, ptr noundef %103, i32 noundef 0, ptr noundef %445)
  %447 = getelementptr inbounds %struct.op, ptr %445, i64 0, i32 3
  store i64 %440, ptr %447, align 8, !tbaa !34
  %448 = getelementptr inbounds %struct.op, ptr %445, i64 0, i32 6
  %449 = load i8, ptr %448, align 1, !tbaa !33
  %450 = or i8 %449, %441
  store i8 %450, ptr %448, align 1, !tbaa !33
  br label %451

451:                                              ; preds = %250, %250, %262, %439, %271
  %452 = phi ptr [ %269, %262 ], [ %251, %271 ], [ %445, %439 ], [ %251, %250 ], [ %251, %250 ]
  %453 = call ptr @Perl_scalar(ptr noundef %452)
  br label %474

454:                                              ; preds = %125, %141, %144, %114, %111, %136
  %455 = phi ptr [ %104, %111 ], [ %104, %114 ], [ %137, %136 ], [ %104, %141 ], [ %104, %144 ], [ %126, %125 ]
  %456 = phi i8 [ 1, %111 ], [ 1, %114 ], [ 1, %136 ], [ %106, %141 ], [ %106, %144 ], [ 1, %125 ]
  %457 = phi i32 [ %112, %111 ], [ %115, %114 ], [ %138, %136 ], [ %142, %141 ], [ %145, %144 ], [ %127, %125 ]
  %458 = icmp eq i32 %105, 0
  %459 = select i1 %94, i1 %458, i1 false
  %460 = icmp ult i32 %102, 16
  %461 = and i1 %459, %460
  br i1 %461, label %462, label %471

462:                                              ; preds = %454
  %463 = getelementptr inbounds %struct.op, ptr %455, i64 0, i32 4
  %464 = load i16, ptr %463, align 8
  %465 = and i16 %464, 511
  %466 = icmp eq i16 %465, 158
  br i1 %466, label %467, label %471

467:                                              ; preds = %462
  %468 = load ptr, ptr %95, align 8, !tbaa !6
  %469 = call ptr (ptr, ...) @Perl_form(ptr noundef nonnull @.str.159, ptr noundef %468) #29
  %470 = call i32 @Perl_yyerror_pv(ptr noundef %469, i32 noundef 0) #29
  br label %562

471:                                              ; preds = %454, %462
  %472 = call ptr @Perl_scalar(ptr noundef nonnull %455)
  %473 = call ptr @Perl_op_lvalue_flags(ptr noundef nonnull %455, i32 noundef %6, i32 noundef 0)
  br label %474

474:                                              ; preds = %125, %136, %111, %114, %144, %141, %213, %215, %163, %164, %471, %451, %244, %242, %166
  %475 = phi i8 [ %456, %471 ], [ %252, %451 ], [ %245, %244 ], [ %220, %242 ], [ %173, %213 ], [ %173, %215 ], [ %168, %166 ], [ %148, %164 ], [ %148, %163 ], [ 1, %111 ], [ 1, %114 ], [ 1, %136 ], [ %106, %141 ], [ %106, %144 ], [ 1, %125 ]
  %476 = phi i32 [ %457, %471 ], [ %253, %451 ], [ %246, %244 ], [ %221, %242 ], [ %174, %213 ], [ %174, %215 ], [ %169, %166 ], [ %149, %164 ], [ %149, %163 ], [ %112, %111 ], [ %115, %114 ], [ %138, %136 ], [ %142, %141 ], [ %145, %144 ], [ %127, %125 ]
  %477 = phi ptr [ %455, %471 ], [ %452, %451 ], [ %248, %244 ], [ %219, %242 ], [ %172, %213 ], [ %172, %215 ], [ %167, %166 ], [ %147, %164 ], [ %147, %163 ], [ %104, %111 ], [ %104, %114 ], [ %137, %136 ], [ %104, %141 ], [ %104, %144 ], [ %126, %125 ]
  %478 = lshr i32 %102, 4
  %479 = getelementptr inbounds %struct.op, ptr %477, i64 0, i32 1
  %480 = load ptr, ptr %479, align 8, !tbaa !38
  %481 = icmp ult i32 %102, 16
  %482 = and i32 %102, 128
  %483 = icmp ne i32 %482, 0
  %484 = and i32 %478, 7
  %485 = icmp eq i32 %484, 2
  %486 = or i1 %483, %485
  %487 = icmp ult i32 %102, 256
  br i1 %481, label %494, label %98, !llvm.loop !308

488:                                              ; preds = %141, %140, %143, %111, %110, %113, %129, %132, %125, %118, %121
  %489 = phi i32 [ %127, %125 ], [ %105, %118 ], [ %105, %121 ], [ %105, %143 ], [ %142, %141 ], [ %105, %140 ], [ %105, %129 ], [ %105, %132 ], [ %105, %113 ], [ %112, %111 ], [ %105, %110 ]
  %490 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 6
  %491 = load i8, ptr %490, align 1, !tbaa !33
  %492 = trunc i32 %489 to i8
  %493 = or i8 %491, %492
  store i8 %493, ptr %490, align 1, !tbaa !33
  br label %517

494:                                              ; preds = %474, %80
  %495 = phi i32 [ 0, %80 ], [ %478, %474 ]
  %496 = phi i32 [ 0, %80 ], [ %476, %474 ]
  %497 = phi ptr [ %82, %80 ], [ %480, %474 ]
  %498 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 6
  %499 = load i8, ptr %498, align 1, !tbaa !33
  %500 = trunc i32 %496 to i8
  %501 = or i8 %499, %500
  store i8 %501, ptr %498, align 1, !tbaa !33
  %502 = icmp eq ptr %497, null
  br i1 %502, label %517, label %503

503:                                              ; preds = %494
  %504 = load i16, ptr %3, align 8
  %505 = and i16 %504, 511
  %506 = icmp eq i16 %505, 380
  br i1 %506, label %507, label %509

507:                                              ; preds = %503
  %508 = call ptr @Perl_custom_op_get_field(ptr noundef nonnull %0, i32 noundef 2)
  br label %513

509:                                              ; preds = %503
  %510 = zext i16 %505 to i64
  %511 = getelementptr inbounds [0 x ptr], ptr @PL_op_desc, i64 0, i64 %510
  %512 = load ptr, ptr %511, align 8, !tbaa !6
  br label %513

513:                                              ; preds = %509, %507
  %514 = phi ptr [ %508, %507 ], [ %512, %509 ]
  %515 = call ptr (ptr, ...) @Perl_form(ptr noundef nonnull @.str.159, ptr noundef %514) #29
  %516 = call i32 @Perl_yyerror_pv(ptr noundef %515, i32 noundef 0) #29
  br label %562

517:                                              ; preds = %494, %488
  %518 = phi i32 [ %495, %494 ], [ %102, %488 ]
  %519 = load i8, ptr %12, align 2, !tbaa !35
  %520 = and i8 %519, 4
  %521 = icmp eq i8 %520, 0
  br i1 %521, label %537, label %522

522:                                              ; preds = %517
  %523 = load ptr, ptr %39, align 8, !tbaa !6
  %524 = icmp eq ptr %523, null
  br i1 %524, label %537, label %525

525:                                              ; preds = %522, %525
  %526 = phi ptr [ %529, %525 ], [ %523, %522 ]
  %527 = call ptr @Perl_list(ptr noundef nonnull %526) #34
  %528 = getelementptr inbounds %struct.op, ptr %526, i64 0, i32 1
  %529 = load ptr, ptr %528, align 8, !tbaa !6
  %530 = icmp eq ptr %529, null
  br i1 %530, label %537, label %525, !llvm.loop !115

531:                                              ; preds = %34
  %532 = and i32 %10, 128
  %533 = icmp eq i32 %532, 0
  br i1 %533, label %537, label %534

534:                                              ; preds = %531
  tail call void @Perl_op_free(ptr noundef nonnull %0)
  %535 = tail call ptr @Perl_newDEFSVOP()
  %536 = tail call ptr @Perl_newUNOP(i32 noundef %6, i32 noundef 0, ptr noundef %535)
  br label %562

537:                                              ; preds = %525, %517, %522, %531
  %538 = phi i32 [ %35, %531 ], [ %518, %517 ], [ %518, %522 ], [ %518, %525 ]
  %539 = icmp eq i32 %538, 0
  br i1 %539, label %562, label %540

540:                                              ; preds = %537, %540
  %541 = phi i32 [ %544, %540 ], [ %538, %537 ]
  %542 = and i32 %541, 8
  %543 = icmp eq i32 %542, 0
  %544 = lshr i32 %541, 4
  br i1 %543, label %545, label %540, !llvm.loop !309

545:                                              ; preds = %540
  %546 = and i32 %541, -3
  %547 = icmp eq i32 %546, 0
  br i1 %547, label %562, label %548

548:                                              ; preds = %545
  %549 = load i16, ptr %3, align 8
  %550 = and i16 %549, 511
  %551 = icmp eq i16 %550, 380
  br i1 %551, label %552, label %554

552:                                              ; preds = %548
  %553 = call ptr @Perl_custom_op_get_field(ptr noundef nonnull %0, i32 noundef 2)
  br label %558

554:                                              ; preds = %548
  %555 = zext i16 %550 to i64
  %556 = getelementptr inbounds [0 x ptr], ptr @PL_op_desc, i64 0, i64 %555
  %557 = load ptr, ptr %556, align 8, !tbaa !6
  br label %558

558:                                              ; preds = %554, %552
  %559 = phi ptr [ %553, %552 ], [ %557, %554 ]
  %560 = call ptr (ptr, ...) @Perl_form(ptr noundef nonnull @.str.161, ptr noundef %559) #29
  %561 = call i32 @Perl_yyerror_pv(ptr noundef %560, i32 noundef 0) #29
  br label %562

562:                                              ; preds = %61, %73, %76, %513, %159, %467, %537, %545, %558, %534, %30
  %563 = phi ptr [ %0, %30 ], [ %0, %558 ], [ %536, %534 ], [ %0, %545 ], [ %0, %537 ], [ %0, %467 ], [ %0, %159 ], [ %0, %513 ], [ %0, %76 ], [ %0, %73 ], [ %0, %61 ]
  ret ptr %563
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_ck_delete(ptr noundef %0) local_unnamed_addr #4 {
  %2 = tail call ptr @Perl_ck_fun(ptr noundef %0)
  %3 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 6
  store i8 0, ptr %3, align 1, !tbaa !33
  %4 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 5
  %5 = load i8, ptr %4, align 2, !tbaa !35
  %6 = and i8 %5, 4
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %42, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.unop, ptr %2, i64 0, i32 7
  %10 = load ptr, ptr %9, align 8, !tbaa !36
  %11 = getelementptr inbounds %struct.op, ptr %10, i64 0, i32 4
  %12 = load i16, ptr %11, align 8
  %13 = and i16 %12, 511
  %14 = zext i16 %13 to i32
  switch i32 %14, label %22 [
    i32 139, label %15
    i32 151, label %17
    i32 138, label %18
    i32 150, label %23
    i32 140, label %20
    i32 152, label %21
  ]

15:                                               ; preds = %8
  %16 = or i8 %5, -128
  store i8 %16, ptr %4, align 2, !tbaa !35
  br label %17

17:                                               ; preds = %8, %15
  store i8 64, ptr %3, align 1, !tbaa !33
  br label %23

18:                                               ; preds = %8
  %19 = or i8 %5, -128
  store i8 %19, ptr %4, align 2, !tbaa !35
  br label %23

20:                                               ; preds = %8
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.139) #29
  br label %21

21:                                               ; preds = %8, %20
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.140) #29
  br label %22

22:                                               ; preds = %8, %21
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.141) #29
  br label %23

23:                                               ; preds = %22, %18, %8, %17
  %24 = getelementptr inbounds %struct.op, ptr %10, i64 0, i32 6
  %25 = load i8, ptr %24, align 1, !tbaa !33
  %26 = icmp sgt i8 %25, -1
  br i1 %26, label %30, label %27

27:                                               ; preds = %23
  %28 = load i8, ptr %3, align 1, !tbaa !33
  %29 = or i8 %28, -128
  store i8 %29, ptr %3, align 1, !tbaa !33
  br label %30

30:                                               ; preds = %27, %23
  %31 = load i16, ptr %11, align 8
  %32 = and i16 %31, 511
  %33 = icmp eq i16 %32, 0
  br i1 %33, label %42, label %34

34:                                               ; preds = %30
  tail call void @Perl_op_clear(ptr noundef nonnull %10)
  %35 = load i16, ptr %11, align 8
  %36 = and i16 %35, 511
  %37 = zext i16 %36 to i64
  %38 = getelementptr inbounds %struct.op, ptr %10, i64 0, i32 3
  store i64 %37, ptr %38, align 8, !tbaa !34
  %39 = and i16 %35, -512
  store i16 %39, ptr %11, align 8
  %40 = load ptr, ptr @PL_ppaddr, align 8, !tbaa !6
  %41 = getelementptr inbounds %struct.op, ptr %10, i64 0, i32 2
  store ptr %40, ptr %41, align 8, !tbaa !78
  br label %42

42:                                               ; preds = %34, %30, %1
  ret ptr %2
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_ck_eof(ptr noundef %0) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 5
  %3 = load i8, ptr %2, align 2, !tbaa !35
  %4 = and i8 %3, 4
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %37, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.listop, ptr %0, i64 0, i32 7
  %8 = load ptr, ptr %7, align 8, !tbaa !81
  %9 = getelementptr inbounds %struct.op, ptr %8, i64 0, i32 4
  %10 = load i16, ptr %9, align 8
  %11 = and i16 %10, 511
  %12 = icmp eq i16 %11, 1
  br i1 %12, label %13, label %24

13:                                               ; preds = %6
  %14 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 4
  %15 = load i16, ptr %14, align 8
  %16 = and i16 %15, 511
  %17 = zext i16 %16 to i32
  %18 = load ptr, ptr @PL_argvgv, align 8, !tbaa !6
  %19 = getelementptr inbounds %struct.gv, ptr %18, i64 0, i32 1
  %20 = load i32, ptr %19, align 8, !tbaa !74
  %21 = add i32 %20, 1
  store i32 %21, ptr %19, align 8, !tbaa !74
  %22 = tail call ptr @Perl_newSVOP(i32 noundef 7, i32 noundef 0, ptr noundef %18)
  %23 = tail call ptr @Perl_newUNOP(i32 noundef %17, i32 noundef 128, ptr noundef %22)
  tail call void @Perl_op_free(ptr noundef nonnull %0)
  br label %24

24:                                               ; preds = %13, %6
  %25 = phi ptr [ %23, %13 ], [ %0, %6 ]
  %26 = tail call ptr @Perl_ck_fun(ptr noundef %25)
  %27 = getelementptr inbounds %struct.listop, ptr %26, i64 0, i32 7
  %28 = load ptr, ptr %27, align 8, !tbaa !81
  %29 = getelementptr inbounds %struct.op, ptr %28, i64 0, i32 4
  %30 = load i16, ptr %29, align 8
  %31 = and i16 %30, 511
  %32 = icmp eq i16 %31, 14
  br i1 %32, label %33, label %37

33:                                               ; preds = %24
  %34 = getelementptr inbounds %struct.op, ptr %28, i64 0, i32 6
  %35 = load i8, ptr %34, align 1, !tbaa !33
  %36 = or i8 %35, 64
  store i8 %36, ptr %34, align 1, !tbaa !33
  br label %37

37:                                               ; preds = %24, %33, %1
  %38 = phi ptr [ %0, %1 ], [ %26, %33 ], [ %26, %24 ]
  ret ptr %38
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_ck_eval(ptr noundef %0) local_unnamed_addr #4 {
  %2 = load i32, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 10), align 8, !tbaa !77
  %3 = or i32 %2, 256
  store i32 %3, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 10), align 8, !tbaa !77
  %4 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 5
  %5 = load i8, ptr %4, align 2, !tbaa !35
  %6 = and i8 %5, 4
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %43, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.unop, ptr %0, i64 0, i32 7
  %10 = load ptr, ptr %9, align 8, !tbaa !36
  %11 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 4
  %12 = load i16, ptr %11, align 8
  %13 = and i16 %12, 511
  %14 = icmp eq i16 %13, 344
  br i1 %14, label %24, label %15

15:                                               ; preds = %8
  %16 = tail call ptr @Perl_scalar(ptr noundef %10)
  tail call fastcc void @S_set_haseval()
  %17 = load i32, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 10), align 8, !tbaa !77
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 3
  store i64 %18, ptr %19, align 8, !tbaa !34
  %20 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 6
  %21 = load i8, ptr %20, align 1, !tbaa !33
  %22 = and i8 %21, 8
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %52, label %50

24:                                               ; preds = %8
  %25 = tail call ptr @Perl_op_sibling_splice(ptr noundef nonnull %0, ptr noundef null, i32 noundef -1, ptr noundef null)
  tail call void @Perl_op_free(ptr noundef nonnull %0)
  %26 = tail call ptr @Perl_Slab_Alloc(i64 noundef 56)
  %27 = getelementptr inbounds %struct.logop, ptr %26, i64 0, i32 4
  %28 = load i16, ptr %27, align 8
  %29 = and i16 %28, -512
  %30 = or i16 %29, 344
  store i16 %30, ptr %27, align 8
  %31 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_ppaddr, i64 0, i64 344), align 8, !tbaa !6
  %32 = getelementptr inbounds %struct.logop, ptr %26, i64 0, i32 2
  store ptr %31, ptr %32, align 8, !tbaa !99
  %33 = getelementptr inbounds %struct.logop, ptr %26, i64 0, i32 7
  %34 = getelementptr inbounds %struct.logop, ptr %26, i64 0, i32 8
  %35 = getelementptr inbounds %struct.logop, ptr %26, i64 0, i32 5
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %33, i8 0, i64 16, i1 false)
  store i8 4, ptr %35, align 2, !tbaa !103
  store ptr %26, ptr %26, align 8, !tbaa !214
  %36 = tail call ptr @Perl_op_prepend_elem(i32 noundef 192, ptr noundef nonnull %26, ptr noundef %10)
  %37 = getelementptr inbounds %struct.op, ptr %36, i64 0, i32 4
  %38 = load i16, ptr %37, align 8
  %39 = and i16 %38, -512
  %40 = or i16 %39, 345
  store i16 %40, ptr %37, align 8
  %41 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_ppaddr, i64 0, i64 345), align 8, !tbaa !6
  %42 = getelementptr inbounds %struct.op, ptr %36, i64 0, i32 2
  store ptr %41, ptr %42, align 8, !tbaa !78
  store ptr %36, ptr %34, align 8, !tbaa !102
  br label %91

43:                                               ; preds = %1
  %44 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 6
  %45 = load i8, ptr %44, align 1, !tbaa !33
  tail call void @Perl_op_free(ptr noundef nonnull %0)
  %46 = zext i8 %45 to i32
  %47 = shl nuw nsw i32 %46, 8
  %48 = tail call ptr @Perl_newDEFSVOP()
  %49 = tail call ptr @Perl_newUNOP(i32 noundef 342, i32 noundef %47, ptr noundef %48)
  br label %91

50:                                               ; preds = %15
  %51 = and i64 %18, 4286578687
  store i64 %51, ptr %19, align 8, !tbaa !34
  br label %52

52:                                               ; preds = %50, %15
  %53 = and i32 %17, 131072
  %54 = icmp ne i32 %53, 0
  %55 = and i8 %21, 16
  %56 = icmp eq i8 %55, 0
  %57 = and i1 %54, %56
  br i1 %57, label %58, label %72

58:                                               ; preds = %52
  %59 = load ptr, ptr @PL_hintgv, align 8, !tbaa !6
  %60 = getelementptr inbounds %struct.gv, ptr %59, i64 0, i32 3
  %61 = load ptr, ptr %60, align 8, !tbaa !13
  %62 = getelementptr inbounds %struct.gp, ptr %61, i64 0, i32 5
  %63 = load ptr, ptr %62, align 8, !tbaa !134
  %64 = icmp eq ptr %63, null
  br i1 %64, label %72, label %65

65:                                               ; preds = %58
  %66 = tail call ptr @Perl_hv_copy_hints_hv(ptr noundef nonnull %63) #29
  %67 = tail call ptr @Perl_newSVOP(i32 noundef 341, i32 noundef 0, ptr noundef %66)
  %68 = load ptr, ptr %9, align 8, !tbaa !36
  %69 = tail call ptr @Perl_op_sibling_splice(ptr noundef nonnull %0, ptr noundef %68, i32 noundef 0, ptr noundef %67)
  %70 = load i8, ptr %20, align 1, !tbaa !33
  %71 = or i8 %70, 2
  store i8 %71, ptr %20, align 1, !tbaa !33
  br label %72

72:                                               ; preds = %65, %58, %52
  %73 = phi i8 [ %71, %65 ], [ %21, %58 ], [ %21, %52 ]
  %74 = and i8 %73, 8
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %76, label %91

76:                                               ; preds = %72
  %77 = load ptr, ptr @PL_curcop, align 8, !tbaa !6
  %78 = getelementptr %struct.cop, ptr %77, i64 0, i32 10
  %79 = load i32, ptr %78, align 8, !tbaa !77
  %80 = and i32 %79, 469762048
  switch i32 %80, label %91 [
    i32 201326592, label %88
    i32 469762048, label %81
  ]

81:                                               ; preds = %76
  %82 = and i32 %79, 131072
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %91, label %84

84:                                               ; preds = %81
  %85 = tail call zeroext i1 @Perl_feature_is_enabled(ptr noundef nonnull @.str.142, i64 noundef 7) #29
  br i1 %85, label %86, label %91

86:                                               ; preds = %84
  %87 = load i8, ptr %20, align 1, !tbaa !33
  br label %88

88:                                               ; preds = %86, %76
  %89 = phi i8 [ %87, %86 ], [ %73, %76 ]
  %90 = or i8 %89, 4
  store i8 %90, ptr %20, align 1, !tbaa !33
  br label %91

91:                                               ; preds = %24, %76, %72, %84, %88, %81, %43
  %92 = phi ptr [ %36, %24 ], [ %49, %43 ], [ %0, %81 ], [ %0, %88 ], [ %0, %84 ], [ %0, %72 ], [ %0, %76 ]
  ret ptr %92
}

declare ptr @Perl_hv_copy_hints_hv(ptr noundef) local_unnamed_addr #6

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_ck_exec(ptr noundef %0) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 5
  %3 = load i8, ptr %2, align 2, !tbaa !35
  %4 = and i8 %3, 64
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %24, label %6

6:                                                ; preds = %1
  %7 = tail call ptr @Perl_ck_fun(ptr noundef nonnull %0)
  %8 = getelementptr inbounds %struct.unop, ptr %7, i64 0, i32 7
  %9 = load ptr, ptr %8, align 8, !tbaa !36
  %10 = getelementptr inbounds %struct.op, ptr %9, i64 0, i32 1
  %11 = load ptr, ptr %10, align 8, !tbaa !38
  %12 = getelementptr inbounds %struct.op, ptr %11, i64 0, i32 4
  %13 = load i16, ptr %12, align 8
  %14 = and i16 %13, 511
  %15 = icmp eq i16 %14, 14
  br i1 %15, label %16, label %37

16:                                               ; preds = %6
  tail call void @Perl_op_clear(ptr noundef nonnull %11)
  %17 = load i16, ptr %12, align 8
  %18 = and i16 %17, 511
  %19 = zext i16 %18 to i64
  %20 = getelementptr inbounds %struct.op, ptr %11, i64 0, i32 3
  store i64 %19, ptr %20, align 8, !tbaa !34
  %21 = and i16 %17, -512
  store i16 %21, ptr %12, align 8
  %22 = load ptr, ptr @PL_ppaddr, align 8, !tbaa !6
  %23 = getelementptr inbounds %struct.op, ptr %11, i64 0, i32 2
  store ptr %22, ptr %23, align 8, !tbaa !78
  br label %37

24:                                               ; preds = %1
  %25 = and i8 %3, 4
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %37, label %27

27:                                               ; preds = %24
  %28 = getelementptr inbounds %struct.listop, ptr %0, i64 0, i32 7
  %29 = load ptr, ptr %28, align 8, !tbaa !6
  %30 = icmp eq ptr %29, null
  br i1 %30, label %37, label %31

31:                                               ; preds = %27, %31
  %32 = phi ptr [ %35, %31 ], [ %29, %27 ]
  %33 = tail call ptr @Perl_list(ptr noundef nonnull %32) #34
  %34 = getelementptr inbounds %struct.op, ptr %32, i64 0, i32 1
  %35 = load ptr, ptr %34, align 8, !tbaa !6
  %36 = icmp eq ptr %35, null
  br i1 %36, label %37, label %31, !llvm.loop !115

37:                                               ; preds = %31, %27, %24, %6, %16
  %38 = phi ptr [ %7, %16 ], [ %7, %6 ], [ %0, %24 ], [ %0, %27 ], [ %0, %31 ]
  ret ptr %38
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_ck_exists(ptr noundef %0) local_unnamed_addr #4 {
  %2 = tail call ptr @Perl_ck_fun(ptr noundef %0)
  %3 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 5
  %4 = load i8, ptr %3, align 2, !tbaa !35
  %5 = and i8 %4, 4
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %49, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.unop, ptr %2, i64 0, i32 7
  %9 = load ptr, ptr %8, align 8, !tbaa !36
  %10 = getelementptr inbounds %struct.op, ptr %9, i64 0, i32 4
  %11 = load i16, ptr %10, align 8
  %12 = and i16 %11, 511
  switch i16 %12, label %36 [
    i16 185, label %13
    i16 138, label %34
    i16 150, label %37
  ]

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 4
  %15 = load i16, ptr %14, align 8
  %16 = and i16 %15, 511
  %17 = zext i16 %16 to i32
  %18 = tail call ptr @Perl_doref(ptr noundef nonnull %9, i32 noundef %17, i1 noundef zeroext true)
  %19 = load i16, ptr %10, align 8
  %20 = and i16 %19, 511
  %21 = icmp eq i16 %20, 17
  br i1 %21, label %30, label %22

22:                                               ; preds = %13
  %23 = load ptr, ptr @PL_parser, align 8, !tbaa !6
  %24 = icmp eq ptr %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct.yy_parser, ptr %23, i64 0, i32 44
  %27 = load i8, ptr %26, align 1, !tbaa !105
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %25, %22
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.143) #29
  br label %30

30:                                               ; preds = %29, %25, %13
  %31 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 6
  %32 = load i8, ptr %31, align 1, !tbaa !33
  %33 = or i8 %32, 64
  store i8 %33, ptr %31, align 1, !tbaa !33
  br label %37

34:                                               ; preds = %7
  %35 = or i8 %4, -128
  store i8 %35, ptr %3, align 2, !tbaa !35
  br label %37

36:                                               ; preds = %7
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.144) #29
  br label %37

37:                                               ; preds = %7, %34, %36, %30
  %38 = load i16, ptr %10, align 8
  %39 = and i16 %38, 511
  %40 = icmp eq i16 %39, 0
  br i1 %40, label %49, label %41

41:                                               ; preds = %37
  tail call void @Perl_op_clear(ptr noundef nonnull %9)
  %42 = load i16, ptr %10, align 8
  %43 = and i16 %42, 511
  %44 = zext i16 %43 to i64
  %45 = getelementptr inbounds %struct.op, ptr %9, i64 0, i32 3
  store i64 %44, ptr %45, align 8, !tbaa !34
  %46 = and i16 %42, -512
  store i16 %46, ptr %10, align 8
  %47 = load ptr, ptr @PL_ppaddr, align 8, !tbaa !6
  %48 = getelementptr inbounds %struct.op, ptr %9, i64 0, i32 2
  store ptr %47, ptr %48, align 8, !tbaa !78
  br label %49

49:                                               ; preds = %41, %37, %1
  ret ptr %2
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_ck_rvconst(ptr noundef returned %0) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.unop, ptr %0, i64 0, i32 7
  %3 = load ptr, ptr %2, align 8, !tbaa !36
  %4 = load i32, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 10), align 8, !tbaa !77
  %5 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 6
  %6 = load i8, ptr %5, align 1, !tbaa !33
  %7 = trunc i32 %4 to i8
  %8 = and i8 %7, 2
  %9 = or i8 %8, %6
  store i8 %9, ptr %5, align 1, !tbaa !33
  %10 = getelementptr inbounds %struct.svop, ptr %3, i64 0, i32 4
  %11 = load i16, ptr %10, align 8
  %12 = and i16 %11, 511
  %13 = icmp eq i16 %12, 5
  br i1 %13, label %14, label %125

14:                                               ; preds = %1
  %15 = getelementptr inbounds %struct.svop, ptr %3, i64 0, i32 7
  %16 = load ptr, ptr %15, align 8, !tbaa !65
  %17 = getelementptr inbounds %struct.sv, ptr %16, i64 0, i32 2
  %18 = load i32, ptr %17, align 4, !tbaa !84
  %19 = and i32 %18, 2048
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %31

21:                                               ; preds = %14
  %22 = and i32 %18, 49152
  %23 = icmp eq i32 %22, 32768
  br i1 %23, label %24, label %34

24:                                               ; preds = %21
  %25 = and i32 %18, 255
  %26 = add nsw i32 %25, -11
  %27 = icmp ult i32 %26, -2
  %28 = and i32 %18, 134283264
  %29 = icmp eq i32 %28, 0
  %30 = or i1 %29, %27
  br i1 %30, label %34, label %125

31:                                               ; preds = %14
  %32 = and i32 %18, 134283264
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %125

34:                                               ; preds = %24, %31, %21
  %35 = and i32 %18, 255
  %36 = icmp eq i32 %35, 11
  br i1 %36, label %125, label %37

37:                                               ; preds = %34
  %38 = and i8 %9, 2
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %54, label %40

40:                                               ; preds = %37
  %41 = getelementptr inbounds %struct.svop, ptr %3, i64 0, i32 6
  %42 = load i8, ptr %41, align 1, !tbaa !76
  %43 = and i8 %42, 64
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %54, label %45

45:                                               ; preds = %40
  %46 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 4
  %47 = load i16, ptr %46, align 8
  %48 = and i16 %47, 511
  %49 = zext i16 %48 to i32
  switch i32 %49, label %54 [
    i32 15, label %52
    i32 135, label %50
    i32 149, label %51
  ]

50:                                               ; preds = %45
  br label %52

51:                                               ; preds = %45
  br label %52

52:                                               ; preds = %51, %50, %45
  %53 = phi ptr [ @.str.145, %45 ], [ @.str.146, %50 ], [ @.str.147, %51 ]
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.148, ptr noundef nonnull %16, ptr noundef nonnull %53) #29
  br label %54

54:                                               ; preds = %45, %52, %40, %37
  %55 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 4
  %56 = load i16, ptr %55, align 8
  %57 = and i16 %56, 511
  %58 = icmp eq i16 %57, 17
  br i1 %58, label %59, label %70

59:                                               ; preds = %54
  %60 = load i8, ptr %5, align 1, !tbaa !33
  %61 = and i8 %60, 32
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %63, label %80

63:                                               ; preds = %59
  %64 = getelementptr inbounds %struct.svop, ptr %3, i64 0, i32 6
  %65 = load i8, ptr %64, align 1, !tbaa !76
  %66 = and i8 %65, 16
  %67 = icmp eq i8 %66, 0
  %68 = zext i1 %67 to i32
  %69 = or i32 %68, 66
  br label %80

70:                                               ; preds = %54
  %71 = getelementptr inbounds %struct.svop, ptr %3, i64 0, i32 6
  %72 = load i8, ptr %71, align 1, !tbaa !76
  %73 = and i8 %72, 16
  %74 = icmp eq i8 %73, 0
  %75 = zext i1 %74 to i32
  switch i16 %57, label %76 [
    i16 15, label %80
    i16 135, label %79
  ]

76:                                               ; preds = %70
  %77 = icmp eq i16 %57, 149
  %78 = select i1 %77, i32 12, i32 9
  br label %80

79:                                               ; preds = %70
  br label %80

80:                                               ; preds = %59, %63, %70, %79, %76
  %81 = phi i32 [ %75, %70 ], [ %75, %76 ], [ %75, %79 ], [ %69, %63 ], [ 64, %59 ]
  %82 = phi i32 [ 3, %70 ], [ %78, %76 ], [ 11, %79 ], [ 13, %63 ], [ 13, %59 ]
  %83 = tail call ptr @Perl_gv_fetchsv(ptr noundef nonnull %16, i32 noundef %81, i32 noundef %82) #29
  %84 = icmp eq ptr %83, null
  br i1 %84, label %125, label %85

85:                                               ; preds = %80
  %86 = getelementptr inbounds %struct.gv, ptr %83, i64 0, i32 2
  %87 = load i32, ptr %86, align 4, !tbaa !133
  %88 = and i32 %87, 255
  %89 = icmp eq i32 %88, 9
  br i1 %89, label %103, label %90

90:                                               ; preds = %85
  %91 = load i8, ptr %5, align 1, !tbaa !33
  %92 = and i8 %91, 32
  %93 = icmp eq i8 %92, 0
  br i1 %93, label %94, label %103

94:                                               ; preds = %90
  %95 = getelementptr inbounds %struct.gv, ptr %83, i64 0, i32 3
  %96 = load ptr, ptr %95, align 8, !tbaa !13
  %97 = getelementptr inbounds %struct.sv, ptr %96, i64 0, i32 2
  %98 = load i32, ptr %97, align 4, !tbaa !84
  %99 = and i32 %98, 255
  %100 = icmp eq i32 %99, 13
  br i1 %100, label %103, label %101

101:                                              ; preds = %94
  %102 = tail call ptr @Perl_gv_fetchsv(ptr noundef nonnull %16, i32 noundef 2, i32 noundef 13) #29
  br label %103

103:                                              ; preds = %85, %101, %94, %90
  %104 = load i16, ptr %10, align 8
  %105 = and i16 %104, -512
  %106 = or i16 %105, 7
  store i16 %106, ptr %10, align 8
  %107 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_ppaddr, i64 0, i64 7), align 8, !tbaa !6
  %108 = getelementptr inbounds %struct.svop, ptr %3, i64 0, i32 2
  store ptr %107, ptr %108, align 8, !tbaa !128
  %109 = load ptr, ptr %15, align 8, !tbaa !65
  %110 = icmp eq ptr %109, null
  br i1 %110, label %118, label %111

111:                                              ; preds = %103
  %112 = getelementptr inbounds %struct.sv, ptr %109, i64 0, i32 1
  %113 = load i32, ptr %112, align 8, !tbaa !42
  %114 = icmp ugt i32 %113, 1
  br i1 %114, label %115, label %117

115:                                              ; preds = %111
  %116 = add i32 %113, -1
  store i32 %116, ptr %112, align 8, !tbaa !42
  br label %118

117:                                              ; preds = %111
  tail call void @Perl_sv_free2(ptr noundef nonnull %109, i32 noundef %113) #29
  br label %118

118:                                              ; preds = %103, %115, %117
  %119 = getelementptr inbounds %struct.gv, ptr %83, i64 0, i32 1
  store ptr %83, ptr %15, align 8, !tbaa !65
  %120 = getelementptr inbounds %struct.svop, ptr %3, i64 0, i32 6
  store i8 0, ptr %120, align 1, !tbaa !76
  %121 = load <2 x i32>, ptr %119, align 8, !tbaa !52
  %122 = add <2 x i32> %121, <i32 1, i32 poison>
  %123 = and <2 x i32> %121, <i32 poison, i32 -16777217>
  %124 = shufflevector <2 x i32> %122, <2 x i32> %123, <2 x i32> <i32 0, i32 3>
  store <2 x i32> %124, ptr %119, align 8, !tbaa !52
  br label %125

125:                                              ; preds = %24, %31, %34, %1, %80, %118
  ret ptr %0
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_ck_glob(ptr noundef %0) local_unnamed_addr #4 {
  %2 = tail call ptr @Perl_ck_fun(ptr noundef %0)
  %3 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 5
  %4 = load i8, ptr %3, align 2, !tbaa !35
  %5 = and i8 %4, 4
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %59, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.listop, ptr %2, i64 0, i32 7
  %9 = load ptr, ptr %8, align 8, !tbaa !81
  %10 = getelementptr inbounds %struct.op, ptr %9, i64 0, i32 1
  %11 = load ptr, ptr %10, align 8, !tbaa !38
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %57

13:                                               ; preds = %7
  %14 = tail call ptr @Perl_newDEFSVOP()
  %15 = icmp eq ptr %14, null
  br i1 %15, label %57, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 4
  %18 = load i16, ptr %17, align 8
  %19 = and i16 %18, 511
  %20 = icmp eq i16 %19, 25
  br i1 %20, label %51, label %21

21:                                               ; preds = %16
  %22 = tail call ptr @Perl_Slab_Alloc(i64 noundef 56)
  %23 = getelementptr inbounds %struct.listop, ptr %22, i64 0, i32 4
  %24 = load i16, ptr %23, align 8
  %25 = and i16 %24, -512
  %26 = or i16 %25, 25
  store i16 %26, ptr %23, align 8
  %27 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_ppaddr, i64 0, i64 25), align 8, !tbaa !6
  %28 = getelementptr inbounds %struct.listop, ptr %22, i64 0, i32 2
  store ptr %27, ptr %28, align 8, !tbaa !222
  %29 = getelementptr inbounds %struct.listop, ptr %22, i64 0, i32 5
  store i8 4, ptr %29, align 2, !tbaa !223
  %30 = load i16, ptr %17, align 8
  %31 = or i16 %30, 16384
  store i16 %31, ptr %17, align 8
  %32 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 1
  store ptr %14, ptr %32, align 8, !tbaa !38
  %33 = getelementptr inbounds %struct.listop, ptr %22, i64 0, i32 7
  store ptr %2, ptr %33, align 8, !tbaa !81
  %34 = getelementptr inbounds %struct.listop, ptr %22, i64 0, i32 8
  store ptr %14, ptr %34, align 8, !tbaa !83
  %35 = getelementptr inbounds %struct.op, ptr %14, i64 0, i32 4
  %36 = load i16, ptr %35, align 8
  %37 = and i16 %36, -16385
  store i16 %37, ptr %35, align 8
  %38 = load ptr, ptr %34, align 8, !tbaa !83
  %39 = getelementptr inbounds %struct.op, ptr %38, i64 0, i32 1
  store ptr null, ptr %39, align 8, !tbaa !38
  %40 = load ptr, ptr @PL_op_mask, align 8, !tbaa !6
  %41 = icmp eq ptr %40, null
  br i1 %41, label %48, label %42

42:                                               ; preds = %21
  %43 = getelementptr inbounds i8, ptr %40, i64 25
  %44 = load i8, ptr %43, align 1, !tbaa !13
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %48, label %46

46:                                               ; preds = %42
  tail call void @Perl_op_free(ptr noundef nonnull %22)
  %47 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_op_desc, i64 0, i64 25), align 8, !tbaa !6
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.63, ptr noundef %47) #29
  br label %57

48:                                               ; preds = %42, %21
  %49 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_check, i64 0, i64 25), align 8, !tbaa !6
  %50 = tail call ptr %49(ptr noundef nonnull %22) #29
  br label %57

51:                                               ; preds = %16
  %52 = getelementptr inbounds %struct.listop, ptr %2, i64 0, i32 8
  %53 = load ptr, ptr %52, align 8, !tbaa !83
  %54 = tail call ptr @Perl_op_sibling_splice(ptr noundef nonnull %2, ptr noundef %53, i32 noundef 0, ptr noundef nonnull %14)
  %55 = load i8, ptr %3, align 2, !tbaa !35
  %56 = or i8 %55, 4
  store i8 %56, ptr %3, align 2, !tbaa !35
  br label %59

57:                                               ; preds = %7, %48, %46, %13
  %58 = load i8, ptr %3, align 2, !tbaa !35
  br label %59

59:                                               ; preds = %57, %51, %1
  %60 = phi i8 [ %58, %57 ], [ %56, %51 ], [ %4, %1 ]
  %61 = icmp sgt i8 %60, -1
  br i1 %61, label %62, label %79

62:                                               ; preds = %59
  %63 = tail call ptr @Perl_gv_override(ptr noundef nonnull @.str.162, i64 noundef 4) #29
  %64 = icmp eq ptr %63, null
  %65 = load i8, ptr %3, align 2, !tbaa !35
  br i1 %64, label %79, label %66

66:                                               ; preds = %62
  %67 = or i8 %65, -128
  store i8 %67, ptr %3, align 2, !tbaa !35
  %68 = tail call i64 @Perl_pad_alloc(i32 noundef 25, i32 noundef 131072) #29
  %69 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 3
  store i64 %68, ptr %69, align 8, !tbaa !34
  %70 = getelementptr inbounds %struct.gv, ptr %63, i64 0, i32 1
  %71 = load i32, ptr %70, align 8, !tbaa !74
  %72 = add i32 %71, 1
  store i32 %72, ptr %70, align 8, !tbaa !74
  %73 = tail call ptr @Perl_newSVOP(i32 noundef 7, i32 noundef 0, ptr noundef nonnull %63)
  %74 = tail call ptr @Perl_newUNOP(i32 noundef 17, i32 noundef 0, ptr noundef %73)
  %75 = tail call ptr @Perl_newLISTOP(i32 noundef 158, i32 noundef 0, ptr noundef nonnull %2, ptr noundef %74)
  %76 = tail call ptr @Perl_newUNOP(i32 noundef 185, i32 noundef 64, ptr noundef %75)
  %77 = tail call ptr @Perl_newUNOP(i32 noundef 0, i32 noundef 0, ptr noundef %76)
  %78 = getelementptr inbounds %struct.op, ptr %77, i64 0, i32 3
  store i64 25, ptr %78, align 8, !tbaa !34
  br label %155

79:                                               ; preds = %62, %59
  %80 = phi i8 [ %65, %62 ], [ %60, %59 ]
  %81 = and i8 %80, 127
  store i8 %81, ptr %3, align 2, !tbaa !35
  %82 = load ptr, ptr @PL_globhook, align 8, !tbaa !6
  %83 = icmp eq ptr %82, null
  br i1 %83, label %84, label %86

84:                                               ; preds = %79
  tail call void @Perl_push_scope() #29
  %85 = tail call ptr @Perl_newSVpvn(ptr noundef nonnull @.str.163, i64 noundef 10) #29
  tail call void (i32, ptr, ptr, ...) @Perl_load_module(i32 noundef 2, ptr noundef %85, ptr noundef null, ptr noundef null, ptr noundef null)
  tail call void @Perl_pop_scope() #29
  br label %86

86:                                               ; preds = %79, %84
  %87 = tail call ptr @Perl_newSV(i64 noundef 0) #29
  tail call void @Perl_gv_init_pvn(ptr noundef %87, ptr noundef null, ptr noundef nonnull @.str.19, i64 noundef 0, i32 noundef 0) #29
  %88 = tail call ptr @Perl_gv_add_by_type(ptr noundef %87, i32 noundef 15) #29
  %89 = getelementptr inbounds %struct.gv, ptr %87, i64 0, i32 1
  %90 = load i32, ptr %89, align 8, !tbaa !74
  %91 = add i32 %90, 1
  store i32 %91, ptr %89, align 8, !tbaa !74
  %92 = tail call ptr @Perl_newSVOP(i32 noundef 7, i32 noundef 0, ptr noundef %87)
  %93 = icmp eq ptr %92, null
  br i1 %93, label %135, label %94

94:                                               ; preds = %86
  %95 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 4
  %96 = load i16, ptr %95, align 8
  %97 = and i16 %96, 511
  %98 = icmp eq i16 %97, 25
  br i1 %98, label %129, label %99

99:                                               ; preds = %94
  %100 = tail call ptr @Perl_Slab_Alloc(i64 noundef 56)
  %101 = getelementptr inbounds %struct.listop, ptr %100, i64 0, i32 4
  %102 = load i16, ptr %101, align 8
  %103 = and i16 %102, -512
  %104 = or i16 %103, 25
  store i16 %104, ptr %101, align 8
  %105 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_ppaddr, i64 0, i64 25), align 8, !tbaa !6
  %106 = getelementptr inbounds %struct.listop, ptr %100, i64 0, i32 2
  store ptr %105, ptr %106, align 8, !tbaa !222
  %107 = getelementptr inbounds %struct.listop, ptr %100, i64 0, i32 5
  store i8 4, ptr %107, align 2, !tbaa !223
  %108 = load i16, ptr %95, align 8
  %109 = or i16 %108, 16384
  store i16 %109, ptr %95, align 8
  %110 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 1
  store ptr %92, ptr %110, align 8, !tbaa !38
  %111 = getelementptr inbounds %struct.listop, ptr %100, i64 0, i32 7
  store ptr %2, ptr %111, align 8, !tbaa !81
  %112 = getelementptr inbounds %struct.listop, ptr %100, i64 0, i32 8
  store ptr %92, ptr %112, align 8, !tbaa !83
  %113 = getelementptr inbounds %struct.op, ptr %92, i64 0, i32 4
  %114 = load i16, ptr %113, align 8
  %115 = and i16 %114, -16385
  store i16 %115, ptr %113, align 8
  %116 = load ptr, ptr %112, align 8, !tbaa !83
  %117 = getelementptr inbounds %struct.op, ptr %116, i64 0, i32 1
  store ptr null, ptr %117, align 8, !tbaa !38
  %118 = load ptr, ptr @PL_op_mask, align 8, !tbaa !6
  %119 = icmp eq ptr %118, null
  br i1 %119, label %126, label %120

120:                                              ; preds = %99
  %121 = getelementptr inbounds i8, ptr %118, i64 25
  %122 = load i8, ptr %121, align 1, !tbaa !13
  %123 = icmp eq i8 %122, 0
  br i1 %123, label %126, label %124

124:                                              ; preds = %120
  tail call void @Perl_op_free(ptr noundef nonnull %100)
  %125 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_op_desc, i64 0, i64 25), align 8, !tbaa !6
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.63, ptr noundef %125) #29
  br label %135

126:                                              ; preds = %120, %99
  %127 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_check, i64 0, i64 25), align 8, !tbaa !6
  %128 = tail call ptr %127(ptr noundef nonnull %100) #29
  br label %135

129:                                              ; preds = %94
  %130 = getelementptr inbounds %struct.listop, ptr %2, i64 0, i32 8
  %131 = load ptr, ptr %130, align 8, !tbaa !83
  %132 = tail call ptr @Perl_op_sibling_splice(ptr noundef nonnull %2, ptr noundef %131, i32 noundef 0, ptr noundef nonnull %92)
  %133 = load i8, ptr %3, align 2, !tbaa !35
  %134 = or i8 %133, 4
  store i8 %134, ptr %3, align 2, !tbaa !35
  br label %135

135:                                              ; preds = %126, %124, %86, %129
  %136 = load i32, ptr %89, align 8, !tbaa !42
  %137 = icmp ugt i32 %136, 1
  br i1 %137, label %138, label %140

138:                                              ; preds = %135
  %139 = add i32 %136, -1
  store i32 %139, ptr %89, align 8, !tbaa !42
  br label %141

140:                                              ; preds = %135
  tail call void @Perl_sv_free2(ptr noundef nonnull %87, i32 noundef %136) #29
  br label %141

141:                                              ; preds = %140, %138
  %142 = load i8, ptr %3, align 2, !tbaa !35
  %143 = and i8 %142, 4
  %144 = icmp eq i8 %143, 0
  br i1 %144, label %155, label %145

145:                                              ; preds = %141
  %146 = getelementptr inbounds %struct.listop, ptr %2, i64 0, i32 7
  %147 = load ptr, ptr %146, align 8, !tbaa !6
  %148 = icmp eq ptr %147, null
  br i1 %148, label %155, label %149

149:                                              ; preds = %145, %149
  %150 = phi ptr [ %153, %149 ], [ %147, %145 ]
  %151 = tail call ptr @Perl_scalar(ptr noundef nonnull %150) #34
  %152 = getelementptr inbounds %struct.op, ptr %150, i64 0, i32 1
  %153 = load ptr, ptr %152, align 8, !tbaa !6
  %154 = icmp eq ptr %153, null
  br i1 %154, label %155, label %149, !llvm.loop !121

155:                                              ; preds = %149, %145, %141, %66
  %156 = phi ptr [ %77, %66 ], [ %2, %141 ], [ %2, %145 ], [ %2, %149 ]
  ret ptr %156
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_ck_grep(ptr noundef %0) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 4
  %3 = load i16, ptr %2, align 8
  %4 = and i16 %3, 511
  %5 = icmp eq i16 %4, 169
  %6 = select i1 %5, i32 170, i32 172
  %7 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 5
  %8 = load i8, ptr %7, align 2, !tbaa !35
  %9 = and i8 %8, 64
  %10 = icmp eq i8 %9, 0
  %11 = getelementptr inbounds %struct.listop, ptr %0, i64 0, i32 7
  %12 = load ptr, ptr %11, align 8, !tbaa !81
  %13 = getelementptr inbounds %struct.op, ptr %12, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !38
  br i1 %10, label %37, label %15

15:                                               ; preds = %1
  %16 = getelementptr inbounds %struct.unop, ptr %14, i64 0, i32 7
  %17 = load ptr, ptr %16, align 8, !tbaa !36
  %18 = getelementptr inbounds %struct.op, ptr %17, i64 0, i32 4
  %19 = load i16, ptr %18, align 8
  %20 = and i16 %19, 511
  %21 = add nsw i16 %20, -197
  %22 = icmp ult i16 %21, 2
  br i1 %22, label %35, label %23

23:                                               ; preds = %15
  %24 = icmp eq i16 %4, 380
  br i1 %24, label %25, label %27

25:                                               ; preds = %23
  %26 = tail call ptr @Perl_custom_op_get_field(ptr noundef nonnull %0, i32 noundef 2)
  br label %31

27:                                               ; preds = %23
  %28 = zext i16 %4 to i64
  %29 = getelementptr inbounds [0 x ptr], ptr @PL_op_desc, i64 0, i64 %28
  %30 = load ptr, ptr %29, align 8, !tbaa !6
  br label %31

31:                                               ; preds = %25, %27
  %32 = phi ptr [ %26, %25 ], [ %30, %27 ]
  %33 = tail call ptr (ptr, ...) @Perl_form(ptr noundef nonnull @.str.158, ptr noundef %32) #29
  %34 = tail call i32 @Perl_yyerror(ptr noundef %33) #29
  br label %127

35:                                               ; preds = %15
  %36 = and i8 %8, -65
  store i8 %36, ptr %7, align 2, !tbaa !35
  br label %37

37:                                               ; preds = %1, %35
  br i1 %5, label %40, label %38

38:                                               ; preds = %37
  %39 = tail call ptr @Perl_list(ptr noundef %14)
  br label %42

40:                                               ; preds = %37
  %41 = tail call ptr @Perl_scalar(ptr noundef %14)
  br label %42

42:                                               ; preds = %40, %38
  %43 = tail call ptr @Perl_ck_fun(ptr noundef nonnull %0)
  %44 = load ptr, ptr @PL_parser, align 8, !tbaa !6
  %45 = icmp eq ptr %44, null
  br i1 %45, label %50, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %struct.yy_parser, ptr %44, i64 0, i32 44
  %48 = load i8, ptr %47, align 1, !tbaa !105
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %50, label %127

50:                                               ; preds = %46, %42
  %51 = getelementptr inbounds %struct.listop, ptr %43, i64 0, i32 7
  %52 = load ptr, ptr %51, align 8, !tbaa !81
  %53 = getelementptr inbounds %struct.op, ptr %52, i64 0, i32 1
  %54 = load ptr, ptr %53, align 8, !tbaa !38
  %55 = getelementptr inbounds %struct.op, ptr %54, i64 0, i32 4
  %56 = load i16, ptr %55, align 8
  %57 = and i16 %56, 511
  %58 = icmp eq i16 %57, 0
  br i1 %58, label %61, label %59

59:                                               ; preds = %50
  %60 = zext i16 %57 to i32
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.164, i32 noundef %60) #29
  br label %61

61:                                               ; preds = %59, %50
  %62 = getelementptr inbounds %struct.unop, ptr %54, i64 0, i32 7
  %63 = load ptr, ptr %62, align 8, !tbaa !36
  %64 = load ptr, ptr %63, align 8, !tbaa !25
  %65 = icmp eq ptr %64, null
  br i1 %65, label %66, label %68

66:                                               ; preds = %61
  %67 = tail call ptr @Perl_op_linklist(ptr noundef nonnull %63)
  br label %68

68:                                               ; preds = %61, %66
  %69 = phi ptr [ %67, %66 ], [ %64, %61 ]
  %70 = tail call ptr @Perl_Slab_Alloc(i64 noundef 56)
  %71 = trunc i32 %6 to i16
  %72 = getelementptr inbounds %struct.logop, ptr %70, i64 0, i32 4
  %73 = load i16, ptr %72, align 8
  %74 = and i16 %73, -512
  %75 = or i16 %74, %71
  store i16 %75, ptr %72, align 8
  %76 = zext i32 %6 to i64
  %77 = getelementptr inbounds [0 x ptr], ptr @PL_ppaddr, i64 0, i64 %76
  %78 = load ptr, ptr %77, align 8, !tbaa !6
  %79 = getelementptr inbounds %struct.logop, ptr %70, i64 0, i32 2
  store ptr %78, ptr %79, align 8, !tbaa !99
  %80 = getelementptr inbounds %struct.logop, ptr %70, i64 0, i32 7
  store ptr %43, ptr %80, align 8, !tbaa !101
  %81 = getelementptr inbounds %struct.logop, ptr %70, i64 0, i32 8
  store ptr %69, ptr %81, align 8, !tbaa !102
  %82 = getelementptr inbounds %struct.logop, ptr %70, i64 0, i32 5
  store i8 4, ptr %82, align 2, !tbaa !103
  br label %83

83:                                               ; preds = %68, %83
  %84 = phi ptr [ %43, %68 ], [ %86, %83 ]
  %85 = getelementptr inbounds %struct.op, ptr %84, i64 0, i32 1
  %86 = load ptr, ptr %85, align 8, !tbaa !38
  %87 = icmp eq ptr %86, null
  br i1 %87, label %88, label %83, !llvm.loop !104

88:                                               ; preds = %83
  %89 = getelementptr inbounds %struct.op, ptr %84, i64 0, i32 1
  %90 = getelementptr inbounds %struct.op, ptr %84, i64 0, i32 4
  %91 = load i16, ptr %90, align 8
  %92 = and i16 %91, -16385
  store i16 %92, ptr %90, align 8
  store ptr null, ptr %89, align 8, !tbaa !38
  store ptr %70, ptr %63, align 8, !tbaa !25
  %93 = tail call i64 @Perl_pad_findmy_pvn(ptr noundef nonnull @.str.7, i64 noundef 2, i32 noundef 0) #29
  %94 = icmp eq i64 %93, -1
  br i1 %94, label %104, label %95

95:                                               ; preds = %88
  %96 = load ptr, ptr @PL_comppad_name, align 8, !tbaa !6
  %97 = getelementptr inbounds %struct.padnamelist, ptr %96, i64 0, i32 1
  %98 = load ptr, ptr %97, align 8, !tbaa !151
  %99 = getelementptr inbounds ptr, ptr %98, i64 %93
  %100 = load ptr, ptr %99, align 8, !tbaa !6
  %101 = getelementptr inbounds %struct.padname, ptr %100, i64 0, i32 1
  %102 = load ptr, ptr %101, align 8, !tbaa !272
  %103 = icmp eq ptr %102, null
  br i1 %103, label %108, label %104

104:                                              ; preds = %95, %88
  %105 = getelementptr inbounds %struct.logop, ptr %70, i64 0, i32 6
  store i8 0, ptr %105, align 1, !tbaa !218
  %106 = getelementptr inbounds %struct.op, ptr %43, i64 0, i32 6
  store i8 0, ptr %106, align 1, !tbaa !33
  %107 = tail call i64 @Perl_pad_alloc(i32 noundef %6, i32 noundef 131072) #29
  br label %112

108:                                              ; preds = %95
  %109 = getelementptr inbounds %struct.logop, ptr %70, i64 0, i32 6
  store i8 2, ptr %109, align 1, !tbaa !218
  %110 = getelementptr inbounds %struct.op, ptr %43, i64 0, i32 6
  store i8 2, ptr %110, align 1, !tbaa !33
  %111 = getelementptr inbounds %struct.op, ptr %43, i64 0, i32 3
  store i64 %93, ptr %111, align 8, !tbaa !34
  br label %112

112:                                              ; preds = %108, %104
  %113 = phi i64 [ %93, %108 ], [ %107, %104 ]
  %114 = getelementptr inbounds %struct.logop, ptr %70, i64 0, i32 3
  store i64 %113, ptr %114, align 8, !tbaa !213
  %115 = load ptr, ptr %51, align 8, !tbaa !81
  %116 = getelementptr inbounds %struct.op, ptr %115, i64 0, i32 1
  %117 = load ptr, ptr %116, align 8, !tbaa !38
  %118 = getelementptr inbounds %struct.op, ptr %117, i64 0, i32 1
  %119 = load ptr, ptr %118, align 8, !tbaa !38
  %120 = icmp eq ptr %119, null
  br i1 %120, label %127, label %121

121:                                              ; preds = %112, %121
  %122 = phi ptr [ %125, %121 ], [ %119, %112 ]
  %123 = tail call ptr @Perl_op_lvalue_flags(ptr noundef nonnull %122, i32 noundef 169, i32 noundef 0)
  %124 = getelementptr inbounds %struct.op, ptr %122, i64 0, i32 1
  %125 = load ptr, ptr %124, align 8, !tbaa !38
  %126 = icmp eq ptr %125, null
  br i1 %126, label %127, label %121, !llvm.loop !310

127:                                              ; preds = %121, %112, %46, %31
  %128 = phi ptr [ %0, %31 ], [ %43, %46 ], [ %70, %112 ], [ %70, %121 ]
  ret ptr %128
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_ck_index(ptr noundef %0) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 5
  %3 = load i8, ptr %2, align 2, !tbaa !35
  %4 = and i8 %3, 4
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %67, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.listop, ptr %0, i64 0, i32 7
  %8 = load ptr, ptr %7, align 8, !tbaa !81
  %9 = getelementptr inbounds %struct.op, ptr %8, i64 0, i32 1
  %10 = load ptr, ptr %9, align 8, !tbaa !38
  %11 = icmp eq ptr %10, null
  br i1 %11, label %67, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %struct.op, ptr %10, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !38
  %15 = icmp eq ptr %14, null
  br i1 %15, label %67, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.op, ptr %14, i64 0, i32 4
  %18 = load i16, ptr %17, align 8
  %19 = and i16 %18, 511
  %20 = icmp eq i16 %19, 5
  br i1 %20, label %21, label %67

21:                                               ; preds = %16
  %22 = load i8, ptr @PL_tainted, align 1, !tbaa !268, !range !212, !noundef !304
  %23 = getelementptr inbounds %struct.svop, ptr %14, i64 0, i32 7
  %24 = load ptr, ptr %23, align 8, !tbaa !65
  %25 = getelementptr inbounds %struct.sv, ptr %24, i64 0, i32 2
  %26 = load i32, ptr %25, align 4, !tbaa !84
  %27 = and i32 %26, 13312
  %28 = icmp eq i32 %27, 1024
  br i1 %28, label %54, label %29

29:                                               ; preds = %21
  %30 = and i32 %26, 65280
  %31 = icmp ne i32 %30, 0
  %32 = and i32 %26, 255
  %33 = icmp eq i32 %32, 8
  %34 = or i1 %31, %33
  %35 = and i32 %26, 16826623
  %36 = icmp eq i32 %35, 16777226
  %37 = or i1 %36, %34
  %38 = and i32 %26, 2048
  %39 = icmp eq i32 %38, 0
  %40 = and i1 %39, %37
  br i1 %40, label %41, label %54

41:                                               ; preds = %29
  %42 = tail call ptr @Perl_newSV(i64 noundef 0) #29
  %43 = load ptr, ptr %23, align 8, !tbaa !65
  tail call void @Perl_sv_copypv_flags(ptr noundef %42, ptr noundef %43, i32 noundef 2) #29
  %44 = load ptr, ptr %23, align 8, !tbaa !65
  %45 = getelementptr inbounds %struct.sv, ptr %44, i64 0, i32 1
  %46 = load i32, ptr %45, align 8, !tbaa !42
  %47 = icmp ugt i32 %46, 1
  br i1 %47, label %48, label %50

48:                                               ; preds = %41
  %49 = add i32 %46, -1
  store i32 %49, ptr %45, align 8, !tbaa !42
  br label %51

50:                                               ; preds = %41
  tail call void @Perl_sv_free2(ptr noundef nonnull %44, i32 noundef %46) #29
  br label %51

51:                                               ; preds = %48, %50
  store ptr %42, ptr %23, align 8, !tbaa !65
  %52 = getelementptr inbounds %struct.sv, ptr %42, i64 0, i32 2
  %53 = load i32, ptr %52, align 4, !tbaa !84
  br label %54

54:                                               ; preds = %29, %21, %51
  %55 = phi i32 [ %53, %51 ], [ %26, %21 ], [ %26, %29 ]
  %56 = phi ptr [ %42, %51 ], [ %24, %21 ], [ %24, %29 ]
  %57 = and i32 %55, 65280
  %58 = icmp ne i32 %57, 0
  %59 = and i32 %55, 255
  %60 = icmp eq i32 %59, 8
  %61 = or i1 %58, %60
  %62 = and i32 %55, 16826623
  %63 = icmp eq i32 %62, 16777226
  %64 = or i1 %63, %61
  br i1 %64, label %65, label %66

65:                                               ; preds = %54
  tail call void @Perl_fbm_compile(ptr noundef nonnull %56, i32 noundef 0) #29
  br label %66

66:                                               ; preds = %54, %65
  store i8 %22, ptr @PL_tainted, align 1, !tbaa !268
  br label %67

67:                                               ; preds = %6, %12, %16, %66, %1
  %68 = tail call ptr @Perl_ck_fun(ptr noundef nonnull %0)
  ret ptr %68
}

declare void @Perl_sv_copypv_flags(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #6

declare void @Perl_fbm_compile(ptr noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_ck_lfun(ptr noundef %0) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 4
  %3 = load i16, ptr %2, align 8
  %4 = and i16 %3, 511
  %5 = zext i16 %4 to i32
  %6 = tail call ptr @Perl_ck_fun(ptr noundef %0)
  %7 = icmp eq ptr %6, null
  br i1 %7, label %23, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.op, ptr %6, i64 0, i32 5
  %10 = load i8, ptr %9, align 2, !tbaa !35
  %11 = and i8 %10, 4
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %23, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %struct.listop, ptr %6, i64 0, i32 7
  %15 = load ptr, ptr %14, align 8, !tbaa !6
  %16 = icmp eq ptr %15, null
  br i1 %16, label %23, label %17

17:                                               ; preds = %13, %17
  %18 = phi ptr [ %21, %17 ], [ %15, %13 ]
  %19 = tail call ptr @Perl_op_lvalue_flags(ptr noundef nonnull %18, i32 noundef %5, i32 noundef 0) #34
  %20 = getelementptr inbounds %struct.op, ptr %18, i64 0, i32 1
  %21 = load ptr, ptr %20, align 8, !tbaa !6
  %22 = icmp eq ptr %21, null
  br i1 %22, label %23, label %17, !llvm.loop !155

23:                                               ; preds = %17, %1, %8, %13
  ret ptr %6
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_ck_defined(ptr noundef %0) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 5
  %3 = load i8, ptr %2, align 2, !tbaa !35
  %4 = and i8 %3, 4
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.unop, ptr %0, i64 0, i32 7
  %8 = load ptr, ptr %7, align 8, !tbaa !36
  %9 = getelementptr inbounds %struct.op, ptr %8, i64 0, i32 4
  %10 = load i16, ptr %9, align 8
  %11 = and i16 %10, 511
  %12 = zext i16 %11 to i32
  switch i32 %12, label %16 [
    i32 135, label %14
    i32 10, label %14
    i32 149, label %13
    i32 11, label %13
  ]

13:                                               ; preds = %6, %6
  br label %14

14:                                               ; preds = %6, %6, %13
  %15 = phi ptr [ @.str.166, %13 ], [ @.str.165, %6 ], [ @.str.165, %6 ]
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull %15) #29
  br label %16

16:                                               ; preds = %14, %6, %1
  %17 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 4
  %18 = load i16, ptr %17, align 8
  %19 = and i16 %18, 511
  %20 = zext i16 %19 to i32
  %21 = tail call ptr @Perl_ck_fun(ptr noundef nonnull %0)
  %22 = icmp eq ptr %21, null
  br i1 %22, label %38, label %23

23:                                               ; preds = %16
  %24 = getelementptr inbounds %struct.op, ptr %21, i64 0, i32 5
  %25 = load i8, ptr %24, align 2, !tbaa !35
  %26 = and i8 %25, 4
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %38, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %struct.listop, ptr %21, i64 0, i32 7
  %30 = load ptr, ptr %29, align 8, !tbaa !6
  %31 = icmp eq ptr %30, null
  br i1 %31, label %38, label %32

32:                                               ; preds = %28, %32
  %33 = phi ptr [ %36, %32 ], [ %30, %28 ]
  %34 = tail call ptr @Perl_doref(ptr noundef nonnull %33, i32 noundef %20, i1 noundef zeroext true)
  %35 = getelementptr inbounds %struct.op, ptr %33, i64 0, i32 1
  %36 = load ptr, ptr %35, align 8, !tbaa !6
  %37 = icmp eq ptr %36, null
  br i1 %37, label %38, label %32, !llvm.loop !311

38:                                               ; preds = %32, %16, %23, %28
  ret ptr %21
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_ck_rfun(ptr noundef %0) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 4
  %3 = load i16, ptr %2, align 8
  %4 = and i16 %3, 511
  %5 = zext i16 %4 to i32
  %6 = tail call ptr @Perl_ck_fun(ptr noundef %0)
  %7 = icmp eq ptr %6, null
  br i1 %7, label %23, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.op, ptr %6, i64 0, i32 5
  %10 = load i8, ptr %9, align 2, !tbaa !35
  %11 = and i8 %10, 4
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %23, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %struct.listop, ptr %6, i64 0, i32 7
  %15 = load ptr, ptr %14, align 8, !tbaa !6
  %16 = icmp eq ptr %15, null
  br i1 %16, label %23, label %17

17:                                               ; preds = %13, %17
  %18 = phi ptr [ %21, %17 ], [ %15, %13 ]
  %19 = tail call ptr @Perl_doref(ptr noundef nonnull %18, i32 noundef %5, i1 noundef zeroext true)
  %20 = getelementptr inbounds %struct.op, ptr %18, i64 0, i32 1
  %21 = load ptr, ptr %20, align 8, !tbaa !6
  %22 = icmp eq ptr %21, null
  br i1 %22, label %23, label %17, !llvm.loop !311

23:                                               ; preds = %17, %1, %8, %13
  ret ptr %6
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_ck_readline(ptr noundef %0) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 5
  %3 = load i8, ptr %2, align 2, !tbaa !35
  %4 = and i8 %3, 4
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.listop, ptr %0, i64 0, i32 7
  %8 = load ptr, ptr %7, align 8, !tbaa !81
  %9 = getelementptr inbounds %struct.op, ptr %8, i64 0, i32 4
  %10 = load i16, ptr %9, align 8
  %11 = and i16 %10, 511
  %12 = icmp eq i16 %11, 14
  br i1 %12, label %13, label %24

13:                                               ; preds = %6
  %14 = getelementptr inbounds %struct.op, ptr %8, i64 0, i32 6
  %15 = load i8, ptr %14, align 1, !tbaa !33
  %16 = or i8 %15, 64
  store i8 %16, ptr %14, align 1, !tbaa !33
  br label %24

17:                                               ; preds = %1
  %18 = load ptr, ptr @PL_argvgv, align 8, !tbaa !6
  %19 = getelementptr inbounds %struct.gv, ptr %18, i64 0, i32 1
  %20 = load i32, ptr %19, align 8, !tbaa !74
  %21 = add i32 %20, 1
  store i32 %21, ptr %19, align 8, !tbaa !74
  %22 = tail call ptr @Perl_newSVOP(i32 noundef 7, i32 noundef 0, ptr noundef %18)
  %23 = tail call ptr @Perl_newUNOP(i32 noundef 26, i32 noundef 0, ptr noundef %22)
  tail call void @Perl_op_free(ptr noundef nonnull %0)
  br label %24

24:                                               ; preds = %6, %13, %17
  %25 = phi ptr [ %23, %17 ], [ %0, %13 ], [ %0, %6 ]
  ret ptr %25
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_ck_listiob(ptr noundef %0) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.listop, ptr %0, i64 0, i32 7
  %3 = load ptr, ptr %2, align 8, !tbaa !81
  %4 = icmp eq ptr %3, null
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = tail call fastcc ptr @S_force_list(ptr noundef nonnull %0, i1 noundef zeroext true)
  %7 = getelementptr inbounds %struct.listop, ptr %6, i64 0, i32 7
  %8 = load ptr, ptr %7, align 8, !tbaa !81
  br label %9

9:                                                ; preds = %5, %1
  %10 = phi ptr [ %0, %1 ], [ %6, %5 ]
  %11 = phi ptr [ %3, %1 ], [ %8, %5 ]
  %12 = getelementptr inbounds %struct.op, ptr %11, i64 0, i32 4
  %13 = load i16, ptr %12, align 8
  %14 = and i16 %13, 511
  %15 = icmp eq i16 %14, 3
  br i1 %15, label %16, label %20

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct.op, ptr %11, i64 0, i32 1
  %18 = load ptr, ptr %17, align 8, !tbaa !38
  %19 = icmp eq ptr %18, null
  br i1 %19, label %56, label %20

20:                                               ; preds = %9, %16
  %21 = phi ptr [ %18, %16 ], [ %11, %9 ]
  %22 = getelementptr inbounds %struct.op, ptr %10, i64 0, i32 5
  %23 = load i8, ptr %22, align 2, !tbaa !35
  %24 = and i8 %23, 64
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %26, label %51

26:                                               ; preds = %20
  %27 = getelementptr inbounds %struct.op, ptr %21, i64 0, i32 1
  %28 = load ptr, ptr %27, align 8, !tbaa !38
  %29 = icmp eq ptr %28, null
  br i1 %29, label %30, label %85

30:                                               ; preds = %26
  %31 = getelementptr inbounds %struct.op, ptr %21, i64 0, i32 4
  %32 = load i16, ptr %31, align 8
  %33 = and i16 %32, 511
  %34 = icmp eq i16 %33, 5
  br i1 %34, label %35, label %85

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct.op, ptr %21, i64 0, i32 6
  %37 = load i8, ptr %36, align 1, !tbaa !33
  %38 = and i8 %37, 64
  %39 = icmp ne i8 %38, 0
  %40 = and i16 %32, 8192
  %41 = icmp eq i16 %40, 0
  %42 = and i1 %41, %39
  br i1 %42, label %43, label %85

43:                                               ; preds = %35
  %44 = or i8 %23, 64
  store i8 %44, ptr %22, align 2, !tbaa !35
  %45 = tail call ptr @Perl_scalar(ptr noundef nonnull %21)
  %46 = getelementptr inbounds %struct.listop, ptr %10, i64 0, i32 7
  %47 = load ptr, ptr %46, align 8, !tbaa !81
  %48 = tail call ptr @Perl_op_sibling_splice(ptr noundef nonnull %10, ptr noundef %47, i32 noundef 1, ptr noundef null)
  %49 = tail call ptr @Perl_newUNOP(i32 noundef 14, i32 noundef 16, ptr noundef %48)
  %50 = tail call ptr @Perl_op_sibling_splice(ptr noundef nonnull %10, ptr noundef %47, i32 noundef 0, ptr noundef %49)
  br label %51

51:                                               ; preds = %20, %43
  %52 = phi ptr [ %49, %43 ], [ %21, %20 ]
  %53 = getelementptr inbounds %struct.op, ptr %52, i64 0, i32 1
  %54 = load ptr, ptr %53, align 8, !tbaa !38
  %55 = icmp eq ptr %54, null
  br i1 %55, label %56, label %85

56:                                               ; preds = %16, %51
  %57 = getelementptr inbounds %struct.op, ptr %10, i64 0, i32 4
  %58 = load i16, ptr %57, align 8
  %59 = and i16 %58, 511
  %60 = zext i16 %59 to i32
  %61 = tail call ptr @Perl_newDEFSVOP()
  %62 = icmp eq ptr %61, null
  br i1 %62, label %85, label %63

63:                                               ; preds = %56
  %64 = load i16, ptr %57, align 8
  %65 = and i16 %64, 511
  %66 = icmp eq i16 %65, %59
  br i1 %66, label %69, label %67

67:                                               ; preds = %63
  %68 = tail call ptr @Perl_newLISTOP(i32 noundef %60, i32 noundef 0, ptr noundef nonnull %10, ptr noundef nonnull %61)
  br label %85

69:                                               ; preds = %63
  %70 = icmp eq i16 %59, 158
  br i1 %70, label %71, label %78

71:                                               ; preds = %69
  %72 = getelementptr inbounds %struct.op, ptr %10, i64 0, i32 5
  %73 = load i8, ptr %72, align 2, !tbaa !35
  %74 = and i8 %73, 8
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %78, label %76

76:                                               ; preds = %71
  %77 = tail call ptr @Perl_newLISTOP(i32 noundef 158, i32 noundef 0, ptr noundef nonnull %10, ptr noundef nonnull %61)
  br label %85

78:                                               ; preds = %71, %69
  %79 = getelementptr inbounds %struct.listop, ptr %10, i64 0, i32 8
  %80 = load ptr, ptr %79, align 8, !tbaa !83
  %81 = tail call ptr @Perl_op_sibling_splice(ptr noundef nonnull %10, ptr noundef %80, i32 noundef 0, ptr noundef nonnull %61)
  %82 = getelementptr inbounds %struct.op, ptr %10, i64 0, i32 5
  %83 = load i8, ptr %82, align 2, !tbaa !35
  %84 = or i8 %83, 4
  store i8 %84, ptr %82, align 2, !tbaa !35
  br label %85

85:                                               ; preds = %30, %35, %26, %78, %76, %67, %56, %51
  %86 = getelementptr inbounds %struct.op, ptr %10, i64 0, i32 4
  %87 = load i16, ptr %86, align 8
  %88 = and i16 %87, 511
  %89 = icmp eq i16 %88, 237
  %90 = getelementptr inbounds %struct.op, ptr %10, i64 0, i32 5
  %91 = load i8, ptr %90, align 2, !tbaa !35
  %92 = and i8 %91, 4
  %93 = icmp eq i8 %92, 0
  br i1 %89, label %94, label %119

94:                                               ; preds = %85
  br i1 %93, label %130, label %95

95:                                               ; preds = %94
  %96 = getelementptr inbounds %struct.listop, ptr %10, i64 0, i32 7
  %97 = load ptr, ptr %96, align 8, !tbaa !6
  %98 = icmp eq ptr %97, null
  br i1 %98, label %109, label %99

99:                                               ; preds = %95, %99
  %100 = phi ptr [ %103, %99 ], [ %97, %95 ]
  %101 = tail call ptr @Perl_list(ptr noundef nonnull %100) #34
  %102 = getelementptr inbounds %struct.op, ptr %100, i64 0, i32 1
  %103 = load ptr, ptr %102, align 8, !tbaa !6
  %104 = icmp eq ptr %103, null
  br i1 %104, label %105, label %99, !llvm.loop !115

105:                                              ; preds = %99
  %106 = load i8, ptr %90, align 2, !tbaa !35
  %107 = and i8 %106, 4
  %108 = icmp eq i8 %107, 0
  br i1 %108, label %130, label %109

109:                                              ; preds = %95, %105
  %110 = getelementptr inbounds %struct.listop, ptr %10, i64 0, i32 7
  %111 = load ptr, ptr %110, align 8, !tbaa !6
  %112 = icmp eq ptr %111, null
  br i1 %112, label %130, label %113

113:                                              ; preds = %109, %113
  %114 = phi ptr [ %117, %113 ], [ %111, %109 ]
  %115 = tail call ptr @Perl_op_lvalue_flags(ptr noundef nonnull %114, i32 noundef 237, i32 noundef 0) #34
  %116 = getelementptr inbounds %struct.op, ptr %114, i64 0, i32 1
  %117 = load ptr, ptr %116, align 8, !tbaa !6
  %118 = icmp eq ptr %117, null
  br i1 %118, label %130, label %113, !llvm.loop !155

119:                                              ; preds = %85
  br i1 %93, label %130, label %120

120:                                              ; preds = %119
  %121 = getelementptr inbounds %struct.listop, ptr %10, i64 0, i32 7
  %122 = load ptr, ptr %121, align 8, !tbaa !6
  %123 = icmp eq ptr %122, null
  br i1 %123, label %130, label %124

124:                                              ; preds = %120, %124
  %125 = phi ptr [ %128, %124 ], [ %122, %120 ]
  %126 = tail call ptr @Perl_list(ptr noundef nonnull %125) #34
  %127 = getelementptr inbounds %struct.op, ptr %125, i64 0, i32 1
  %128 = load ptr, ptr %127, align 8, !tbaa !6
  %129 = icmp eq ptr %128, null
  br i1 %129, label %130, label %124, !llvm.loop !115

130:                                              ; preds = %124, %113, %94, %120, %119, %109, %105
  ret ptr %10
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_ck_smartmatch(ptr noundef returned %0) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 5
  %3 = load i8, ptr %2, align 2, !tbaa !35
  %4 = icmp sgt i8 %3, -1
  br i1 %4, label %5, label %35

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.binop, ptr %0, i64 0, i32 7
  %7 = load ptr, ptr %6, align 8, !tbaa !106
  %8 = getelementptr inbounds %struct.op, ptr %7, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !38
  %10 = tail call ptr @Perl_op_sibling_splice(ptr noundef nonnull %0, ptr noundef null, i32 noundef 1, ptr noundef null)
  %11 = tail call ptr @Perl_op_sibling_splice(ptr noundef nonnull %0, ptr noundef null, i32 noundef 1, ptr noundef null)
  %12 = tail call fastcc ptr @S_ref_array_or_hash(ptr noundef %7)
  %13 = tail call fastcc ptr @S_ref_array_or_hash(ptr noundef %9)
  %14 = tail call ptr @Perl_op_sibling_splice(ptr noundef nonnull %0, ptr noundef null, i32 noundef 0, ptr noundef %13)
  %15 = tail call ptr @Perl_op_sibling_splice(ptr noundef nonnull %0, ptr noundef null, i32 noundef 0, ptr noundef %12)
  %16 = getelementptr inbounds %struct.op, ptr %12, i64 0, i32 4
  %17 = load i16, ptr %16, align 8
  %18 = and i16 %17, 511
  %19 = icmp eq i16 %18, 31
  br i1 %19, label %20, label %25

20:                                               ; preds = %5
  %21 = and i16 %17, -512
  %22 = or i16 %21, 32
  store i16 %22, ptr %16, align 8
  %23 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_ppaddr, i64 0, i64 32), align 8, !tbaa !6
  %24 = getelementptr inbounds %struct.op, ptr %12, i64 0, i32 2
  store ptr %23, ptr %24, align 8, !tbaa !78
  br label %25

25:                                               ; preds = %20, %5
  %26 = getelementptr inbounds %struct.op, ptr %13, i64 0, i32 4
  %27 = load i16, ptr %26, align 8
  %28 = and i16 %27, 511
  %29 = icmp eq i16 %28, 31
  br i1 %29, label %30, label %35

30:                                               ; preds = %25
  %31 = and i16 %27, -512
  %32 = or i16 %31, 32
  store i16 %32, ptr %26, align 8
  %33 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_ppaddr, i64 0, i64 32), align 8, !tbaa !6
  %34 = getelementptr inbounds %struct.op, ptr %13, i64 0, i32 2
  store ptr %33, ptr %34, align 8, !tbaa !78
  br label %35

35:                                               ; preds = %25, %30, %1
  ret ptr %0
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_ck_sassign(ptr noundef %0) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.listop, ptr %0, i64 0, i32 7
  %3 = load ptr, ptr %2, align 8, !tbaa !81
  %4 = getelementptr inbounds %struct.op, ptr %3, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !38
  %6 = icmp eq ptr %5, null
  br i1 %6, label %64, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.op, ptr %5, i64 0, i32 4
  %9 = load i16, ptr %8, align 8
  %10 = and i16 %9, 511
  switch i16 %10, label %14 [
    i16 9, label %26
    i16 0, label %11
  ]

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.op, ptr %5, i64 0, i32 3
  %13 = load i64, ptr %12, align 8, !tbaa !34
  br label %16

14:                                               ; preds = %7
  %15 = zext i16 %10 to i64
  br label %16

16:                                               ; preds = %14, %11
  %17 = phi i64 [ %13, %11 ], [ %15, %14 ]
  %18 = icmp eq i64 %17, 158
  br i1 %18, label %19, label %64

19:                                               ; preds = %16
  %20 = getelementptr inbounds %struct.listop, ptr %5, i64 0, i32 8
  %21 = load ptr, ptr %20, align 8, !tbaa !83
  %22 = getelementptr inbounds %struct.op, ptr %21, i64 0, i32 4
  %23 = load i16, ptr %22, align 8
  %24 = and i16 %23, 511
  %25 = icmp eq i16 %24, 9
  br i1 %25, label %26, label %64

26:                                               ; preds = %7, %19
  %27 = phi ptr [ %5, %7 ], [ %21, %19 ]
  %28 = getelementptr inbounds %struct.op, ptr %27, i64 0, i32 6
  %29 = load i8, ptr %28, align 1, !tbaa !33
  %30 = zext i8 %29 to i32
  %31 = and i32 %30, 192
  %32 = icmp eq i32 %31, 192
  br i1 %32, label %33, label %64

33:                                               ; preds = %26
  %34 = getelementptr inbounds %struct.op, ptr %27, i64 0, i32 3
  %35 = load i64, ptr %34, align 8, !tbaa !34
  %36 = getelementptr inbounds %struct.op, ptr %27, i64 0, i32 5
  %37 = load i8, ptr %36, align 2, !tbaa !35
  %38 = zext i8 %37 to i32
  %39 = shl nuw nsw i32 %30, 8
  %40 = and i32 %39, 32512
  %41 = or i32 %40, %38
  %42 = tail call ptr @Perl_newOP(i32 noundef 9, i32 noundef %41)
  %43 = tail call ptr @Perl_newOP(i32 noundef 0, i32 noundef 0)
  %44 = tail call ptr @Perl_newCONDOP(i32 noundef 0, ptr noundef %43, ptr noundef nonnull %0, ptr noundef %42)
  %45 = load ptr, ptr %43, align 8, !tbaa !25
  %46 = getelementptr inbounds %struct.op, ptr %45, i64 0, i32 4
  %47 = load i16, ptr %46, align 8
  %48 = and i16 %47, -512
  %49 = or i16 %48, 379
  store i16 %49, ptr %46, align 8
  %50 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_ppaddr, i64 0, i64 379), align 8, !tbaa !6
  %51 = getelementptr inbounds %struct.op, ptr %45, i64 0, i32 2
  store ptr %50, ptr %51, align 8, !tbaa !78
  %52 = getelementptr inbounds %struct.op, ptr %42, i64 0, i32 3
  store i64 %35, ptr %52, align 8, !tbaa !34
  %53 = getelementptr inbounds %struct.op, ptr %44, i64 0, i32 5
  %54 = load i8, ptr %53, align 2, !tbaa !35
  %55 = or i8 %54, 2
  store i8 %55, ptr %53, align 2, !tbaa !35
  %56 = tail call i64 @Perl_pad_add_name_pvn(ptr noundef nonnull @.str.91, i64 noundef 1, i32 noundef 6, ptr noundef null, ptr noundef null) #29
  %57 = getelementptr inbounds %struct.op, ptr %45, i64 0, i32 3
  store i64 %56, ptr %57, align 8, !tbaa !34
  %58 = load ptr, ptr @PL_curpad, align 8, !tbaa !6
  %59 = getelementptr inbounds ptr, ptr %58, i64 %56
  %60 = load ptr, ptr %59, align 8, !tbaa !6
  %61 = getelementptr inbounds %struct.sv, ptr %60, i64 0, i32 2
  %62 = load i32, ptr %61, align 4, !tbaa !84
  %63 = or i32 %62, 262144
  store i32 %63, ptr %61, align 4, !tbaa !84
  br label %101

64:                                               ; preds = %16, %19, %26, %1
  %65 = getelementptr inbounds %struct.op, ptr %3, i64 0, i32 4
  %66 = load i16, ptr %65, align 8
  %67 = and i16 %66, 511
  %68 = zext i16 %67 to i64
  %69 = getelementptr inbounds [0 x i32], ptr @PL_opargs, i64 0, i64 %68
  %70 = load i32, ptr %69, align 4, !tbaa !52
  %71 = and i32 %70, 16
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %101, label %73

73:                                               ; preds = %64
  %74 = getelementptr inbounds %struct.op, ptr %3, i64 0, i32 5
  %75 = load i8, ptr %74, align 2, !tbaa !35
  %76 = and i8 %75, 64
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %78, label %101

78:                                               ; preds = %73
  %79 = getelementptr inbounds %struct.op, ptr %3, i64 0, i32 6
  %80 = load i8, ptr %79, align 1, !tbaa !33
  %81 = and i8 %80, 16
  %82 = icmp ne i8 %81, 0
  %83 = or i1 %82, %6
  br i1 %83, label %101, label %84

84:                                               ; preds = %78
  %85 = getelementptr inbounds %struct.op, ptr %5, i64 0, i32 4
  %86 = load i16, ptr %85, align 8
  %87 = and i16 %86, 511
  %88 = icmp eq i16 %87, 9
  br i1 %88, label %89, label %101

89:                                               ; preds = %84
  %90 = getelementptr inbounds %struct.op, ptr %5, i64 0, i32 6
  %91 = load i8, ptr %90, align 1, !tbaa !33
  %92 = and i8 %91, -64
  %93 = icmp eq i8 %92, -128
  br i1 %93, label %101, label %94

94:                                               ; preds = %89
  %95 = getelementptr inbounds %struct.op, ptr %5, i64 0, i32 3
  %96 = load i64, ptr %95, align 8, !tbaa !34
  %97 = getelementptr inbounds %struct.op, ptr %3, i64 0, i32 3
  store i64 %96, ptr %97, align 8, !tbaa !34
  store i64 0, ptr %95, align 8, !tbaa !34
  %98 = tail call ptr @Perl_op_sibling_splice(ptr noundef nonnull %0, ptr noundef null, i32 noundef 1, ptr noundef null)
  tail call void @Perl_op_free(ptr noundef nonnull %0)
  %99 = load i8, ptr %79, align 1, !tbaa !33
  %100 = or i8 %99, 16
  store i8 %100, ptr %79, align 1, !tbaa !33
  br label %101

101:                                              ; preds = %78, %94, %89, %84, %73, %64, %33
  %102 = phi ptr [ %44, %33 ], [ %3, %94 ], [ %0, %89 ], [ %0, %84 ], [ %0, %78 ], [ %0, %73 ], [ %0, %64 ]
  ret ptr %102
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_ck_match(ptr noundef returned %0) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 4
  %3 = load i16, ptr %2, align 8
  %4 = and i16 %3, 511
  %5 = icmp ne i16 %4, 32
  %6 = load ptr, ptr @PL_compcv, align 8
  %7 = icmp ne ptr %6, null
  %8 = select i1 %5, i1 %7, i1 false
  br i1 %8, label %9, label %26

9:                                                ; preds = %1
  %10 = tail call i64 @Perl_pad_findmy_pvn(ptr noundef nonnull @.str.7, i64 noundef 2, i32 noundef 0) #29
  %11 = icmp eq i64 %10, -1
  br i1 %11, label %26, label %12

12:                                               ; preds = %9
  %13 = load ptr, ptr @PL_comppad_name, align 8, !tbaa !6
  %14 = getelementptr inbounds %struct.padnamelist, ptr %13, i64 0, i32 1
  %15 = load ptr, ptr %14, align 8, !tbaa !151
  %16 = getelementptr inbounds ptr, ptr %15, i64 %10
  %17 = load ptr, ptr %16, align 8, !tbaa !6
  %18 = getelementptr inbounds %struct.padname, ptr %17, i64 0, i32 1
  %19 = load ptr, ptr %18, align 8, !tbaa !272
  %20 = icmp eq ptr %19, null
  br i1 %20, label %21, label %26

21:                                               ; preds = %12
  %22 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 3
  store i64 %10, ptr %22, align 8, !tbaa !34
  %23 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 6
  %24 = load i8, ptr %23, align 1, !tbaa !33
  %25 = or i8 %24, 16
  store i8 %25, ptr %23, align 1, !tbaa !33
  br label %26

26:                                               ; preds = %9, %12, %21, %1
  %27 = load i16, ptr %2, align 8
  %28 = and i16 %27, 511
  %29 = add nsw i16 %28, -31
  %30 = icmp ult i16 %29, 2
  br i1 %30, label %31, label %35

31:                                               ; preds = %26
  %32 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 6
  %33 = load i8, ptr %32, align 1, !tbaa !33
  %34 = or i8 %33, 64
  store i8 %34, ptr %32, align 1, !tbaa !33
  br label %35

35:                                               ; preds = %26, %31
  ret ptr %0
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_ck_method(ptr noundef %0) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.unop, ptr %0, i64 0, i32 7
  %3 = load ptr, ptr %2, align 8, !tbaa !36
  %4 = getelementptr inbounds %struct.op, ptr %3, i64 0, i32 4
  %5 = load i16, ptr %4, align 8
  %6 = and i16 %5, 511
  %7 = icmp eq i16 %6, 5
  br i1 %7, label %8, label %166

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.svop, ptr %3, i64 0, i32 7
  %10 = load ptr, ptr %9, align 8, !tbaa !65
  %11 = getelementptr inbounds %struct.sv, ptr %10, i64 0, i32 3
  %12 = load ptr, ptr %11, align 8, !tbaa !13
  %13 = tail call ptr @strchr(ptr noundef nonnull dereferenceable(1) %12, i32 noundef 39) #30
  %14 = icmp eq ptr %13, null
  br i1 %14, label %24, label %15

15:                                               ; preds = %8, %15
  %16 = phi ptr [ %22, %15 ], [ %13, %8 ]
  store i8 58, ptr %16, align 1, !tbaa !13
  %17 = load ptr, ptr %11, align 8, !tbaa !13
  %18 = ptrtoint ptr %16 to i64
  %19 = ptrtoint ptr %17 to i64
  %20 = sub i64 %18, %19
  tail call void @Perl_sv_insert_flags(ptr noundef nonnull %10, i64 noundef %20, i64 noundef 0, ptr noundef nonnull @.str.167, i64 noundef 1, i32 noundef 2) #29
  %21 = load ptr, ptr %11, align 8, !tbaa !13
  %22 = tail call ptr @strchr(ptr noundef nonnull dereferenceable(1) %21, i32 noundef 39) #30
  %23 = icmp eq ptr %22, null
  br i1 %23, label %24, label %15, !llvm.loop !312

24:                                               ; preds = %15, %8
  %25 = phi ptr [ %12, %8 ], [ %21, %15 ]
  %26 = load ptr, ptr %10, align 8, !tbaa !85
  %27 = getelementptr inbounds %struct.xpv, ptr %26, i64 0, i32 2
  %28 = load i64, ptr %27, align 8, !tbaa !86
  %29 = getelementptr inbounds %struct.sv, ptr %10, i64 0, i32 2
  %30 = load i32, ptr %29, align 4, !tbaa !84
  %31 = and i32 %30, 536870912
  %32 = icmp eq i32 %31, 0
  %33 = select i1 %32, i64 1, i64 -1
  br label %34

34:                                               ; preds = %42, %24
  %35 = phi i64 [ %28, %24 ], [ %36, %42 ]
  %36 = add i64 %35, -1
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %38, label %42

38:                                               ; preds = %34
  %39 = mul i64 %33, %28
  %40 = trunc i64 %39 to i32
  %41 = tail call ptr @Perl_newSVpvn_share(ptr noundef %25, i32 noundef %40, i32 noundef 0) #29
  br label %52

42:                                               ; preds = %34
  %43 = getelementptr inbounds i8, ptr %25, i64 %36
  %44 = load i8, ptr %43, align 1, !tbaa !13
  %45 = icmp eq i8 %44, 58
  br i1 %45, label %46, label %34, !llvm.loop !313

46:                                               ; preds = %42
  %47 = getelementptr inbounds i8, ptr %25, i64 %35
  %48 = sub i64 %28, %35
  %49 = mul i64 %48, %33
  %50 = trunc i64 %49 to i32
  %51 = tail call ptr @Perl_newSVpvn_share(ptr noundef %47, i32 noundef %50, i32 noundef 0) #29
  switch i64 %35, label %102 [
    i64 0, label %52
    i64 7, label %76
  ]

52:                                               ; preds = %38, %46
  %53 = phi ptr [ %41, %38 ], [ %51, %46 ]
  tail call void @Perl_op_free(ptr noundef %0)
  %54 = tail call ptr @Perl_Slab_Alloc(i64 noundef 56)
  %55 = getelementptr inbounds %struct.methop, ptr %54, i64 0, i32 5
  store i8 0, ptr %55, align 2, !tbaa !170
  %56 = getelementptr inbounds %struct.methop, ptr %54, i64 0, i32 7
  store ptr %53, ptr %56, align 8, !tbaa !13
  %57 = getelementptr inbounds %struct.methop, ptr %54, i64 0, i32 6
  store i8 0, ptr %57, align 1, !tbaa !171
  store ptr %54, ptr %54, align 8, !tbaa !172
  %58 = getelementptr inbounds %struct.methop, ptr %54, i64 0, i32 8
  store ptr null, ptr %58, align 8, !tbaa !63
  %59 = getelementptr inbounds %struct.methop, ptr %54, i64 0, i32 4
  %60 = load i16, ptr %59, align 8
  %61 = and i16 %60, -512
  %62 = or i16 %61, 210
  store i16 %62, ptr %59, align 8
  %63 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_ppaddr, i64 0, i64 210), align 8, !tbaa !6
  %64 = getelementptr inbounds %struct.methop, ptr %54, i64 0, i32 2
  store ptr %63, ptr %64, align 8, !tbaa !173
  %65 = load ptr, ptr @PL_op_mask, align 8, !tbaa !6
  %66 = icmp eq ptr %65, null
  br i1 %66, label %73, label %67

67:                                               ; preds = %52
  %68 = getelementptr inbounds i8, ptr %65, i64 210
  %69 = load i8, ptr %68, align 1, !tbaa !13
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %73, label %71

71:                                               ; preds = %67
  tail call void @Perl_op_free(ptr noundef nonnull %54)
  %72 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_op_desc, i64 0, i64 210), align 8, !tbaa !6
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.63, ptr noundef %72) #29
  br label %166

73:                                               ; preds = %67, %52
  %74 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_check, i64 0, i64 210), align 8, !tbaa !6
  %75 = tail call ptr %74(ptr noundef nonnull %54) #29
  br label %166

76:                                               ; preds = %46
  %77 = tail call i32 @bcmp(ptr noundef nonnull dereferenceable(7) %25, ptr noundef nonnull dereferenceable(7) @.str.168, i64 7)
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %135

79:                                               ; preds = %76
  tail call void @Perl_op_free(ptr noundef %0)
  %80 = tail call ptr @Perl_Slab_Alloc(i64 noundef 56)
  %81 = getelementptr inbounds %struct.methop, ptr %80, i64 0, i32 5
  store i8 0, ptr %81, align 2, !tbaa !170
  %82 = getelementptr inbounds %struct.methop, ptr %80, i64 0, i32 7
  store ptr %51, ptr %82, align 8, !tbaa !13
  %83 = getelementptr inbounds %struct.methop, ptr %80, i64 0, i32 6
  store i8 0, ptr %83, align 1, !tbaa !171
  store ptr %80, ptr %80, align 8, !tbaa !172
  %84 = getelementptr inbounds %struct.methop, ptr %80, i64 0, i32 8
  store ptr null, ptr %84, align 8, !tbaa !63
  %85 = getelementptr inbounds %struct.methop, ptr %80, i64 0, i32 4
  %86 = load i16, ptr %85, align 8
  %87 = and i16 %86, -512
  %88 = or i16 %87, 211
  store i16 %88, ptr %85, align 8
  %89 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_ppaddr, i64 0, i64 211), align 8, !tbaa !6
  %90 = getelementptr inbounds %struct.methop, ptr %80, i64 0, i32 2
  store ptr %89, ptr %90, align 8, !tbaa !173
  %91 = load ptr, ptr @PL_op_mask, align 8, !tbaa !6
  %92 = icmp eq ptr %91, null
  br i1 %92, label %99, label %93

93:                                               ; preds = %79
  %94 = getelementptr inbounds i8, ptr %91, i64 211
  %95 = load i8, ptr %94, align 1, !tbaa !13
  %96 = icmp eq i8 %95, 0
  br i1 %96, label %99, label %97

97:                                               ; preds = %93
  tail call void @Perl_op_free(ptr noundef nonnull %80)
  %98 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_op_desc, i64 0, i64 211), align 8, !tbaa !6
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.63, ptr noundef %98) #29
  br label %166

99:                                               ; preds = %93, %79
  %100 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_check, i64 0, i64 211), align 8, !tbaa !6
  %101 = tail call ptr %100(ptr noundef nonnull %80) #29
  br label %166

102:                                              ; preds = %46
  %103 = icmp ugt i64 %35, 8
  br i1 %103, label %104, label %135

104:                                              ; preds = %102
  %105 = getelementptr inbounds i8, ptr %47, i64 -9
  %106 = tail call i32 @strncmp(ptr noundef nonnull dereferenceable(1) %105, ptr noundef nonnull dereferenceable(10) @.str.169, i64 noundef 9) #30
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %135

108:                                              ; preds = %104
  %109 = add i64 %35, 4294967287
  %110 = mul i64 %109, %33
  %111 = trunc i64 %110 to i32
  %112 = tail call ptr @Perl_newSVpvn_share(ptr noundef nonnull %25, i32 noundef %111, i32 noundef 0) #29
  %113 = tail call ptr @Perl_Slab_Alloc(i64 noundef 56)
  %114 = getelementptr inbounds %struct.methop, ptr %113, i64 0, i32 5
  store i8 0, ptr %114, align 2, !tbaa !170
  %115 = getelementptr inbounds %struct.methop, ptr %113, i64 0, i32 7
  store ptr %51, ptr %115, align 8, !tbaa !13
  %116 = getelementptr inbounds %struct.methop, ptr %113, i64 0, i32 6
  store i8 0, ptr %116, align 1, !tbaa !171
  store ptr %113, ptr %113, align 8, !tbaa !172
  %117 = getelementptr inbounds %struct.methop, ptr %113, i64 0, i32 8
  store ptr null, ptr %117, align 8, !tbaa !63
  %118 = getelementptr inbounds %struct.methop, ptr %113, i64 0, i32 4
  %119 = load i16, ptr %118, align 8
  %120 = and i16 %119, -512
  %121 = or i16 %120, 213
  store i16 %121, ptr %118, align 8
  %122 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_ppaddr, i64 0, i64 213), align 8, !tbaa !6
  %123 = getelementptr inbounds %struct.methop, ptr %113, i64 0, i32 2
  store ptr %122, ptr %123, align 8, !tbaa !173
  %124 = load ptr, ptr @PL_op_mask, align 8, !tbaa !6
  %125 = icmp eq ptr %124, null
  br i1 %125, label %132, label %126

126:                                              ; preds = %108
  %127 = getelementptr inbounds i8, ptr %124, i64 213
  %128 = load i8, ptr %127, align 1, !tbaa !13
  %129 = icmp eq i8 %128, 0
  br i1 %129, label %132, label %130

130:                                              ; preds = %126
  tail call void @Perl_op_free(ptr noundef nonnull %113)
  %131 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_op_desc, i64 0, i64 213), align 8, !tbaa !6
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.63, ptr noundef %131) #29
  br label %162

132:                                              ; preds = %126, %108
  %133 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_check, i64 0, i64 213), align 8, !tbaa !6
  %134 = tail call ptr %133(ptr noundef nonnull %113) #29
  br label %162

135:                                              ; preds = %76, %104, %102
  %136 = add i64 %35, 4294967294
  %137 = mul i64 %136, %33
  %138 = trunc i64 %137 to i32
  %139 = tail call ptr @Perl_newSVpvn_share(ptr noundef nonnull %25, i32 noundef %138, i32 noundef 0) #29
  %140 = tail call ptr @Perl_Slab_Alloc(i64 noundef 56)
  %141 = getelementptr inbounds %struct.methop, ptr %140, i64 0, i32 5
  store i8 0, ptr %141, align 2, !tbaa !170
  %142 = getelementptr inbounds %struct.methop, ptr %140, i64 0, i32 7
  store ptr %51, ptr %142, align 8, !tbaa !13
  %143 = getelementptr inbounds %struct.methop, ptr %140, i64 0, i32 6
  store i8 0, ptr %143, align 1, !tbaa !171
  store ptr %140, ptr %140, align 8, !tbaa !172
  %144 = getelementptr inbounds %struct.methop, ptr %140, i64 0, i32 8
  store ptr null, ptr %144, align 8, !tbaa !63
  %145 = getelementptr inbounds %struct.methop, ptr %140, i64 0, i32 4
  %146 = load i16, ptr %145, align 8
  %147 = and i16 %146, -512
  %148 = or i16 %147, 212
  store i16 %148, ptr %145, align 8
  %149 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_ppaddr, i64 0, i64 212), align 8, !tbaa !6
  %150 = getelementptr inbounds %struct.methop, ptr %140, i64 0, i32 2
  store ptr %149, ptr %150, align 8, !tbaa !173
  %151 = load ptr, ptr @PL_op_mask, align 8, !tbaa !6
  %152 = icmp eq ptr %151, null
  br i1 %152, label %159, label %153

153:                                              ; preds = %135
  %154 = getelementptr inbounds i8, ptr %151, i64 212
  %155 = load i8, ptr %154, align 1, !tbaa !13
  %156 = icmp eq i8 %155, 0
  br i1 %156, label %159, label %157

157:                                              ; preds = %153
  tail call void @Perl_op_free(ptr noundef nonnull %140)
  %158 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_op_desc, i64 0, i64 212), align 8, !tbaa !6
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.63, ptr noundef %158) #29
  br label %162

159:                                              ; preds = %153, %135
  %160 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_check, i64 0, i64 212), align 8, !tbaa !6
  %161 = tail call ptr %160(ptr noundef nonnull %140) #29
  br label %162

162:                                              ; preds = %159, %157, %132, %130
  %163 = phi ptr [ %112, %130 ], [ %112, %132 ], [ %139, %157 ], [ %139, %159 ]
  %164 = phi ptr [ null, %130 ], [ %134, %132 ], [ null, %157 ], [ %161, %159 ]
  %165 = getelementptr inbounds %struct.methop, ptr %164, i64 0, i32 8
  store ptr %163, ptr %165, align 8, !tbaa !63
  tail call void @Perl_op_free(ptr noundef %0)
  br label %166

166:                                              ; preds = %99, %97, %73, %71, %1, %162
  %167 = phi ptr [ %164, %162 ], [ %0, %1 ], [ null, %71 ], [ %75, %73 ], [ null, %97 ], [ %101, %99 ]
  ret ptr %167
}

declare void @Perl_sv_insert_flags(ptr noundef, i64 noundef, i64 noundef, ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare i32 @strncmp(ptr nocapture noundef, ptr nocapture noundef, i64 noundef) local_unnamed_addr #7

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(none) uwtable
define dso_local ptr @Perl_ck_null(ptr noundef readnone returned %0) #8 {
  ret ptr %0
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_ck_open(ptr noundef %0) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.listop, ptr %0, i64 0, i32 7
  %3 = load ptr, ptr %2, align 8, !tbaa !81
  %4 = getelementptr inbounds %struct.listop, ptr %0, i64 0, i32 8
  %5 = load ptr, ptr %4, align 8, !tbaa !83
  %6 = getelementptr inbounds %struct.op, ptr %5, i64 0, i32 4
  %7 = load i16, ptr %6, align 8
  %8 = and i16 %7, 511
  %9 = icmp eq i16 %8, 5
  br i1 %9, label %10, label %52

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct.op, ptr %5, i64 0, i32 6
  %12 = load i8, ptr %11, align 1, !tbaa !33
  %13 = and i8 %12, 72
  %14 = icmp eq i8 %13, 72
  br i1 %14, label %15, label %52

15:                                               ; preds = %10
  %16 = getelementptr inbounds %struct.op, ptr %3, i64 0, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !38
  %18 = icmp eq ptr %17, null
  br i1 %18, label %52, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.op, ptr %17, i64 0, i32 1
  %21 = load ptr, ptr %20, align 8, !tbaa !38
  %22 = icmp eq ptr %21, null
  br i1 %22, label %52, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %struct.op, ptr %21, i64 0, i32 4
  %25 = load i16, ptr %24, align 8
  %26 = and i16 %25, 511
  %27 = icmp eq i16 %26, 5
  br i1 %27, label %28, label %52

28:                                               ; preds = %23
  %29 = getelementptr inbounds %struct.svop, ptr %21, i64 0, i32 7
  %30 = load ptr, ptr %29, align 8, !tbaa !65
  %31 = getelementptr inbounds %struct.sv, ptr %30, i64 0, i32 2
  %32 = load i32, ptr %31, align 4, !tbaa !84
  %33 = and i32 %32, 1024
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %52, label %35

35:                                               ; preds = %28
  %36 = getelementptr inbounds %struct.sv, ptr %30, i64 0, i32 3
  %37 = load ptr, ptr %36, align 8, !tbaa !13
  %38 = icmp eq ptr %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %35
  %40 = load i8, ptr %37, align 1, !tbaa !13
  %41 = icmp eq i8 %40, 62
  br i1 %41, label %42, label %52

42:                                               ; preds = %39
  %43 = getelementptr inbounds i8, ptr %37, i64 1
  %44 = load i8, ptr %43, align 1, !tbaa !13
  %45 = icmp eq i8 %44, 38
  br i1 %45, label %46, label %52

46:                                               ; preds = %42
  %47 = getelementptr inbounds %struct.op, ptr %21, i64 0, i32 1
  %48 = load ptr, ptr %47, align 8, !tbaa !38
  %49 = icmp eq ptr %5, %48
  br i1 %49, label %50, label %52

50:                                               ; preds = %46
  %51 = and i8 %12, -9
  store i8 %51, ptr %11, align 1, !tbaa !33
  br label %52

52:                                               ; preds = %50, %46, %42, %39, %35, %28, %23, %19, %15, %10, %1
  %53 = tail call ptr @Perl_ck_fun(ptr noundef nonnull %0)
  ret ptr %53
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_ck_prototype(ptr noundef %0) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 5
  %3 = load i8, ptr %2, align 2, !tbaa !35
  %4 = and i8 %3, 4
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %1
  tail call void @Perl_op_free(ptr noundef nonnull %0)
  %7 = tail call ptr @Perl_newDEFSVOP()
  %8 = tail call ptr @Perl_newUNOP(i32 noundef 19, i32 noundef 0, ptr noundef %7)
  br label %9

9:                                                ; preds = %1, %6
  %10 = phi ptr [ %8, %6 ], [ %0, %1 ]
  ret ptr %10
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_ck_refassign(ptr noundef returned %0) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.listop, ptr %0, i64 0, i32 7
  %3 = load ptr, ptr %2, align 8, !tbaa !81
  %4 = getelementptr inbounds %struct.op, ptr %3, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !38
  %6 = getelementptr inbounds %struct.unop, ptr %5, i64 0, i32 7
  %7 = load ptr, ptr %6, align 8, !tbaa !36
  %8 = getelementptr inbounds %struct.unop, ptr %7, i64 0, i32 7
  %9 = load ptr, ptr %8, align 8, !tbaa !36
  %10 = getelementptr inbounds %struct.op, ptr %9, i64 0, i32 6
  %11 = load i8, ptr %10, align 1, !tbaa !33
  %12 = and i8 %11, -64
  %13 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 6
  store i8 %12, ptr %13, align 1, !tbaa !33
  %14 = getelementptr inbounds %struct.op, ptr %9, i64 0, i32 4
  %15 = load i16, ptr %14, align 8
  %16 = and i16 %15, 511
  %17 = zext i16 %16 to i32
  switch i32 %17, label %81 [
    i32 10, label %19
    i32 11, label %18
    i32 9, label %22
    i32 135, label %34
    i32 149, label %33
    i32 15, label %37
    i32 17, label %47
    i32 138, label %64
    i32 150, label %64
  ]

18:                                               ; preds = %1
  br label %19

19:                                               ; preds = %1, %18
  %20 = phi i8 [ 32, %18 ], [ 16, %1 ]
  %21 = or i8 %12, %20
  store i8 %21, ptr %13, align 1, !tbaa !33
  br label %22

22:                                               ; preds = %19, %1
  %23 = getelementptr inbounds %struct.op, ptr %9, i64 0, i32 3
  %24 = load i64, ptr %23, align 8, !tbaa !34
  %25 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 3
  store i64 %24, ptr %25, align 8, !tbaa !34
  store i64 0, ptr %23, align 8, !tbaa !34
  %26 = load ptr, ptr @PL_comppad_name, align 8, !tbaa !6
  %27 = getelementptr inbounds %struct.padnamelist, ptr %26, i64 0, i32 1
  %28 = load ptr, ptr %27, align 8, !tbaa !151
  %29 = load i64, ptr %25, align 8, !tbaa !34
  %30 = getelementptr inbounds ptr, ptr %28, i64 %29
  %31 = load ptr, ptr %30, align 8, !tbaa !6
  %32 = getelementptr inbounds %struct.padname, ptr %31, i64 0, i32 6
  store i32 2147483647, ptr %32, align 4, !tbaa !163
  br label %95

33:                                               ; preds = %1
  br label %34

34:                                               ; preds = %1, %33
  %35 = phi i8 [ 32, %33 ], [ 16, %1 ]
  %36 = or i8 %12, %35
  store i8 %36, ptr %13, align 1, !tbaa !33
  br label %37

37:                                               ; preds = %34, %1
  %38 = getelementptr inbounds %struct.unop, ptr %9, i64 0, i32 7
  %39 = load ptr, ptr %38, align 8, !tbaa !36
  %40 = getelementptr inbounds %struct.op, ptr %39, i64 0, i32 4
  %41 = load i16, ptr %40, align 8
  %42 = and i16 %41, 511
  %43 = icmp eq i16 %42, 7
  br i1 %43, label %44, label %81

44:                                               ; preds = %47, %37
  %45 = phi ptr [ %9, %37 ], [ %53, %47 ]
  %46 = tail call ptr @Perl_op_sibling_splice(ptr noundef nonnull %45, ptr noundef null, i32 noundef -1, ptr noundef null)
  br label %95

47:                                               ; preds = %1
  %48 = getelementptr inbounds %struct.unop, ptr %9, i64 0, i32 7
  %49 = load ptr, ptr %48, align 8, !tbaa !36
  %50 = getelementptr inbounds %struct.unop, ptr %49, i64 0, i32 7
  %51 = load ptr, ptr %50, align 8, !tbaa !36
  %52 = getelementptr inbounds %struct.op, ptr %51, i64 0, i32 1
  %53 = load ptr, ptr %52, align 8, !tbaa !38
  %54 = getelementptr inbounds %struct.unop, ptr %53, i64 0, i32 7
  %55 = load ptr, ptr %54, align 8, !tbaa !36
  %56 = or i8 %12, 48
  store i8 %56, ptr %13, align 1, !tbaa !33
  %57 = getelementptr inbounds %struct.op, ptr %55, i64 0, i32 4
  %58 = load i16, ptr %57, align 8
  %59 = and i16 %58, 511
  switch i16 %59, label %81 [
    i16 7, label %44
    i16 387, label %60
  ]

60:                                               ; preds = %47
  %61 = getelementptr inbounds %struct.op, ptr %55, i64 0, i32 3
  %62 = load i64, ptr %61, align 8, !tbaa !34
  %63 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 3
  store i64 %62, ptr %63, align 8, !tbaa !34
  store i64 0, ptr %61, align 8, !tbaa !34
  br label %95

64:                                               ; preds = %1, %1
  %65 = or i8 %12, 4
  store i8 %65, ptr %13, align 1, !tbaa !33
  %66 = load i16, ptr %14, align 8
  %67 = and i16 %66, 511
  %68 = icmp eq i16 %67, 0
  br i1 %68, label %78, label %69

69:                                               ; preds = %64
  tail call void @Perl_op_clear(ptr noundef nonnull %9)
  %70 = load i16, ptr %14, align 8
  %71 = and i16 %70, 511
  %72 = zext i16 %71 to i64
  %73 = getelementptr inbounds %struct.op, ptr %9, i64 0, i32 3
  store i64 %72, ptr %73, align 8, !tbaa !34
  %74 = and i16 %70, -512
  store i16 %74, ptr %14, align 8
  %75 = load ptr, ptr @PL_ppaddr, align 8, !tbaa !6
  %76 = getelementptr inbounds %struct.op, ptr %9, i64 0, i32 2
  store ptr %75, ptr %76, align 8, !tbaa !78
  %77 = load ptr, ptr %6, align 8, !tbaa !36
  br label %78

78:                                               ; preds = %64, %69
  %79 = phi ptr [ %7, %64 ], [ %77, %69 ]
  %80 = tail call ptr @Perl_op_sibling_splice(ptr noundef %79, ptr noundef null, i32 noundef -1, ptr noundef null)
  br label %95

81:                                               ; preds = %47, %1, %37
  %82 = load i16, ptr %14, align 8
  %83 = and i16 %82, 511
  %84 = icmp eq i16 %83, 380
  br i1 %84, label %85, label %87

85:                                               ; preds = %81
  %86 = tail call ptr @Perl_custom_op_get_field(ptr noundef nonnull %9, i32 noundef 2)
  br label %91

87:                                               ; preds = %81
  %88 = zext i16 %83 to i64
  %89 = getelementptr inbounds [0 x ptr], ptr @PL_op_desc, i64 0, i64 %88
  %90 = load ptr, ptr %89, align 8, !tbaa !6
  br label %91

91:                                               ; preds = %87, %85
  %92 = phi ptr [ %86, %85 ], [ %90, %87 ]
  %93 = tail call ptr (ptr, ...) @Perl_form(ptr noundef nonnull @.str.170, ptr noundef %92) #29
  %94 = tail call i32 @Perl_yyerror(ptr noundef %93) #29
  br label %114

95:                                               ; preds = %60, %78, %44, %22
  %96 = phi i1 [ true, %78 ], [ true, %44 ], [ false, %22 ], [ false, %60 ]
  %97 = phi ptr [ %9, %78 ], [ %46, %44 ], [ %9, %22 ], [ %9, %60 ]
  %98 = load ptr, ptr @PL_curcop, align 8, !tbaa !6
  %99 = getelementptr %struct.cop, ptr %98, i64 0, i32 10
  %100 = load i32, ptr %99, align 8, !tbaa !77
  %101 = and i32 %100, 469893120
  %102 = icmp eq i32 %101, 469893120
  br i1 %102, label %103, label %105

103:                                              ; preds = %95
  %104 = tail call zeroext i1 @Perl_feature_is_enabled(ptr noundef nonnull @.str.40, i64 noundef 11) #29
  br i1 %104, label %106, label %105

105:                                              ; preds = %103, %95
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.41) #29
  br label %106

106:                                              ; preds = %105, %103
  tail call void (i32, ptr, ...) @Perl_ck_warner_d(i32 noundef 63, ptr noundef nonnull @.str.42) #29
  %107 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 5
  %108 = load i8, ptr %107, align 2, !tbaa !35
  %109 = and i8 %108, -65
  %110 = select i1 %96, i8 64, i8 0
  %111 = or i8 %109, %110
  %112 = select i1 %96, ptr %97, ptr null
  store i8 %111, ptr %107, align 2, !tbaa !35
  %113 = tail call ptr @Perl_op_sibling_splice(ptr noundef nonnull %0, ptr noundef nonnull %3, i32 noundef 1, ptr noundef %112)
  tail call void @Perl_op_free(ptr noundef nonnull %5)
  br label %114

114:                                              ; preds = %106, %91
  ret ptr %0
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_ck_repeat(ptr noundef returned %0) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.binop, ptr %0, i64 0, i32 7
  %3 = load ptr, ptr %2, align 8, !tbaa !106
  %4 = getelementptr inbounds %struct.op, ptr %3, i64 0, i32 5
  %5 = load i8, ptr %4, align 2, !tbaa !35
  %6 = and i8 %5, 8
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %15, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 6
  %10 = load i8, ptr %9, align 1, !tbaa !33
  %11 = or i8 %10, 64
  store i8 %11, ptr %9, align 1, !tbaa !33
  %12 = tail call ptr @Perl_op_sibling_splice(ptr noundef nonnull %0, ptr noundef null, i32 noundef 1, ptr noundef null)
  %13 = tail call fastcc ptr @S_force_list(ptr noundef %12, i1 noundef zeroext true)
  %14 = tail call ptr @Perl_op_sibling_splice(ptr noundef nonnull %0, ptr noundef null, i32 noundef 0, ptr noundef %13)
  br label %17

15:                                               ; preds = %1
  %16 = tail call ptr @Perl_scalar(ptr noundef nonnull %0)
  br label %17

17:                                               ; preds = %15, %8
  ret ptr %0
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_ck_require(ptr noundef %0) local_unnamed_addr #4 {
  %2 = alloca i64, align 8
  %3 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 5
  %4 = load i8, ptr %3, align 2, !tbaa !35
  %5 = and i8 %4, 4
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %186, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.unop, ptr %0, i64 0, i32 7
  %9 = load ptr, ptr %8, align 8, !tbaa !36
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #29
  %10 = getelementptr inbounds %struct.svop, ptr %9, i64 0, i32 4
  %11 = load i16, ptr %10, align 8
  %12 = and i16 %11, 511
  %13 = icmp eq i16 %12, 5
  br i1 %13, label %14, label %184

14:                                               ; preds = %7
  %15 = getelementptr inbounds %struct.svop, ptr %9, i64 0, i32 7
  %16 = load ptr, ptr %15, align 8, !tbaa !65
  %17 = getelementptr inbounds %struct.sv, ptr %16, i64 0, i32 2
  %18 = load i32, ptr %17, align 4, !tbaa !84
  %19 = and i32 %18, 134283264
  %20 = getelementptr inbounds %struct.svop, ptr %9, i64 0, i32 6
  %21 = load i8, ptr %20, align 1, !tbaa !76
  %22 = and i8 %21, 64
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %125, label %24

24:                                               ; preds = %14
  %25 = icmp eq i32 %19, 0
  br i1 %25, label %28, label %26

26:                                               ; preds = %24
  %27 = and i32 %18, -134283265
  store i32 %27, ptr %17, align 4, !tbaa !84
  br label %28

28:                                               ; preds = %26, %24
  %29 = phi i32 [ %27, %26 ], [ %18, %24 ]
  %30 = and i32 %29, 268435456
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %33, label %32

32:                                               ; preds = %28
  tail call void @Perl_sv_force_normal_flags(ptr noundef nonnull %16, i32 noundef 0) #29
  br label %33

33:                                               ; preds = %32, %28
  %34 = getelementptr inbounds %struct.sv, ptr %16, i64 0, i32 3
  %35 = load ptr, ptr %34, align 8, !tbaa !13
  %36 = load ptr, ptr %16, align 8, !tbaa !85
  %37 = getelementptr inbounds %struct.xpv, ptr %36, i64 0, i32 2
  %38 = load i64, ptr %37, align 8, !tbaa !86
  %39 = getelementptr inbounds i8, ptr %35, i64 %38
  %40 = icmp sgt i64 %38, 0
  br i1 %40, label %41, label %64

41:                                               ; preds = %33, %57
  %42 = phi ptr [ %58, %57 ], [ %39, %33 ]
  %43 = phi ptr [ %59, %57 ], [ %35, %33 ]
  %44 = load i8, ptr %43, align 1, !tbaa !13
  %45 = icmp eq i8 %44, 58
  br i1 %45, label %46, label %57

46:                                               ; preds = %41
  %47 = getelementptr inbounds i8, ptr %43, i64 1
  %48 = load i8, ptr %47, align 1, !tbaa !13
  %49 = icmp eq i8 %48, 58
  br i1 %49, label %50, label %57

50:                                               ; preds = %46
  store i8 47, ptr %43, align 1, !tbaa !13
  %51 = getelementptr inbounds i8, ptr %43, i64 2
  %52 = ptrtoint ptr %42 to i64
  %53 = ptrtoint ptr %43 to i64
  %54 = xor i64 %53, -1
  %55 = add i64 %52, %54
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 1 %47, ptr nonnull align 1 %51, i64 %55, i1 false)
  %56 = getelementptr inbounds i8, ptr %42, i64 -1
  br label %57

57:                                               ; preds = %41, %46, %50
  %58 = phi ptr [ %56, %50 ], [ %42, %46 ], [ %42, %41 ]
  %59 = getelementptr inbounds i8, ptr %43, i64 1
  %60 = icmp ult ptr %59, %58
  br i1 %60, label %41, label %61, !llvm.loop !314

61:                                               ; preds = %57
  %62 = load ptr, ptr %34, align 8, !tbaa !13
  %63 = load ptr, ptr %16, align 8, !tbaa !85
  br label %64

64:                                               ; preds = %61, %33
  %65 = phi ptr [ %36, %33 ], [ %63, %61 ]
  %66 = phi ptr [ %35, %33 ], [ %62, %61 ]
  %67 = phi ptr [ %39, %33 ], [ %58, %61 ]
  %68 = ptrtoint ptr %67 to i64
  %69 = ptrtoint ptr %66 to i64
  %70 = sub i64 %68, %69
  %71 = getelementptr inbounds %struct.xpv, ptr %65, i64 0, i32 2
  store i64 %70, ptr %71, align 8, !tbaa !86
  tail call void @Perl_sv_catpvn_flags(ptr noundef nonnull %16, ptr noundef nonnull @.str.171, i64 noundef 3, i32 noundef 2) #29
  %72 = load ptr, ptr %34, align 8, !tbaa !13
  %73 = load ptr, ptr %16, align 8, !tbaa !85
  %74 = getelementptr inbounds %struct.xpv, ptr %73, i64 0, i32 2
  %75 = load i64, ptr %74, align 8, !tbaa !86
  %76 = getelementptr inbounds i8, ptr %72, i64 %75
  %77 = trunc i64 %75 to i32
  %78 = add i32 %77, 544173908
  %79 = icmp sgt i64 %75, 0
  br i1 %79, label %80, label %91

80:                                               ; preds = %64, %80
  %81 = phi i32 [ %89, %80 ], [ %78, %64 ]
  %82 = phi ptr [ %86, %80 ], [ %72, %64 ]
  %83 = mul i32 %81, 1025
  %84 = lshr i32 %83, 6
  %85 = xor i32 %84, %83
  %86 = getelementptr inbounds i8, ptr %82, i64 1
  %87 = load i8, ptr %82, align 1, !tbaa !13
  %88 = zext i8 %87 to i32
  %89 = add i32 %85, %88
  %90 = icmp ult ptr %86, %76
  br i1 %90, label %80, label %91, !llvm.loop !294

91:                                               ; preds = %80, %64
  %92 = phi i32 [ %78, %64 ], [ %89, %80 ]
  %93 = mul i32 %92, 1025
  %94 = lshr i32 %93, 6
  %95 = xor i32 %94, %93
  %96 = mul i32 %95, 1025
  %97 = add i32 %96, 73800
  %98 = lshr i32 %97, 6
  %99 = xor i32 %98, %97
  %100 = mul i32 %99, 1025
  %101 = add i32 %100, 113775
  %102 = lshr i32 %101, 6
  %103 = xor i32 %102, %101
  %104 = mul i32 %103, 1025
  %105 = add i32 %104, 118900
  %106 = lshr i32 %105, 6
  %107 = xor i32 %106, %105
  %108 = mul i32 %107, 1025
  %109 = add i32 %108, 32800
  %110 = lshr i32 %109, 6
  %111 = xor i32 %110, %109
  %112 = mul i32 %111, 9
  %113 = lshr i32 %112, 11
  %114 = xor i32 %113, %112
  %115 = mul i32 %114, 32769
  %116 = load i32, ptr %17, align 4, !tbaa !84
  %117 = and i32 %116, 536870912
  %118 = icmp eq i32 %117, 0
  %119 = sub nsw i64 0, %75
  %120 = select i1 %118, i64 %75, i64 %119
  %121 = trunc i64 %120 to i32
  %122 = tail call ptr @Perl_share_hek(ptr noundef %72, i32 noundef %121, i32 noundef %115) #29
  tail call void @Perl_sv_sethek(ptr noundef nonnull %16, ptr noundef %122) #29
  tail call void @Perl_unshare_hek(ptr noundef %122) #29
  %123 = load i32, ptr %17, align 4, !tbaa !84
  %124 = or i32 %123, %19
  store i32 %124, ptr %17, align 4, !tbaa !84
  br label %184

125:                                              ; preds = %14
  %126 = and i32 %18, 2098944
  %127 = icmp eq i32 %126, 1024
  br i1 %127, label %128, label %184

128:                                              ; preds = %125
  %129 = and i32 %18, 14680064
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %136, label %131

131:                                              ; preds = %128
  %132 = tail call ptr @Perl_mg_find(ptr noundef nonnull %16, i32 noundef 86) #29
  %133 = icmp eq ptr %132, null
  br i1 %133, label %134, label %184

134:                                              ; preds = %131
  %135 = load i32, ptr %17, align 4, !tbaa !84
  br label %136

136:                                              ; preds = %134, %128
  %137 = phi i32 [ %135, %134 ], [ %18, %128 ]
  %138 = and i32 %137, 2098176
  %139 = icmp eq i32 %138, 1024
  br i1 %139, label %140, label %146

140:                                              ; preds = %136
  %141 = load ptr, ptr %16, align 8, !tbaa !85
  %142 = getelementptr inbounds %struct.xpv, ptr %141, i64 0, i32 2
  %143 = load i64, ptr %142, align 8, !tbaa !86
  store i64 %143, ptr %2, align 8, !tbaa !88
  %144 = getelementptr inbounds %struct.sv, ptr %16, i64 0, i32 3
  %145 = load ptr, ptr %144, align 8, !tbaa !13
  br label %148

146:                                              ; preds = %136
  %147 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %16, ptr noundef nonnull %2, i32 noundef 2) #29
  br label %148

148:                                              ; preds = %146, %140
  %149 = phi ptr [ %145, %140 ], [ %147, %146 ]
  %150 = getelementptr inbounds %struct.sv, ptr %16, i64 0, i32 1
  %151 = load i32, ptr %150, align 8, !tbaa !42
  %152 = icmp ugt i32 %151, 1
  br i1 %152, label %153, label %167

153:                                              ; preds = %148
  %154 = load i32, ptr %17, align 4, !tbaa !84
  %155 = and i32 %154, 536870912
  %156 = icmp eq i32 %155, 0
  %157 = load i64, ptr %2, align 8
  %158 = sub nsw i64 0, %157
  %159 = select i1 %156, i64 %157, i64 %158
  %160 = trunc i64 %159 to i32
  %161 = call ptr @Perl_newSVpvn_share(ptr noundef %149, i32 noundef %160, i32 noundef 0) #29
  store ptr %161, ptr %15, align 8, !tbaa !65
  %162 = load i32, ptr %150, align 8, !tbaa !42
  %163 = icmp ugt i32 %162, 1
  br i1 %163, label %164, label %166

164:                                              ; preds = %153
  %165 = add i32 %162, -1
  store i32 %165, ptr %150, align 8, !tbaa !42
  br label %184

166:                                              ; preds = %153
  call void @Perl_sv_free2(ptr noundef nonnull %16, i32 noundef %162) #29
  br label %184

167:                                              ; preds = %148
  %168 = icmp eq i32 %19, 0
  br i1 %168, label %172, label %169

169:                                              ; preds = %167
  %170 = load i32, ptr %17, align 4, !tbaa !84
  %171 = and i32 %170, -134283265
  store i32 %171, ptr %17, align 4, !tbaa !84
  br label %172

172:                                              ; preds = %169, %167
  %173 = load i64, ptr %2, align 8
  %174 = call fastcc i32 @S_perl_hash_one_at_a_time_hard(ptr noundef %149, i64 noundef %173)
  %175 = load i32, ptr %17, align 4, !tbaa !84
  %176 = and i32 %175, 536870912
  %177 = icmp eq i32 %176, 0
  %178 = sub nsw i64 0, %173
  %179 = select i1 %177, i64 %173, i64 %178
  %180 = trunc i64 %179 to i32
  %181 = call ptr @Perl_share_hek(ptr noundef %149, i32 noundef %180, i32 noundef %174) #29
  call void @Perl_sv_sethek(ptr noundef nonnull %16, ptr noundef %181) #29
  call void @Perl_unshare_hek(ptr noundef %181) #29
  %182 = load i32, ptr %17, align 4, !tbaa !84
  %183 = or i32 %182, %19
  store i32 %183, ptr %17, align 4, !tbaa !84
  br label %184

184:                                              ; preds = %166, %164, %91, %172, %131, %125, %7
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #29
  %185 = load i8, ptr %3, align 2, !tbaa !35
  br label %186

186:                                              ; preds = %184, %1
  %187 = phi i8 [ %185, %184 ], [ %4, %1 ]
  %188 = icmp sgt i8 %187, -1
  br i1 %188, label %189, label %211

189:                                              ; preds = %186
  %190 = call ptr @Perl_gv_override(ptr noundef nonnull @.str.172, i64 noundef 7) #29
  %191 = icmp eq ptr %190, null
  br i1 %191, label %211, label %192

192:                                              ; preds = %189
  %193 = load i8, ptr %3, align 2, !tbaa !35
  %194 = and i8 %193, 4
  %195 = icmp eq i8 %194, 0
  br i1 %195, label %200, label %196

196:                                              ; preds = %192
  %197 = getelementptr inbounds %struct.unop, ptr %0, i64 0, i32 7
  %198 = load ptr, ptr %197, align 8, !tbaa !36
  %199 = call ptr @Perl_op_sibling_splice(ptr noundef nonnull %0, ptr noundef null, i32 noundef -1, ptr noundef null)
  br label %202

200:                                              ; preds = %192
  %201 = call ptr @Perl_newDEFSVOP()
  br label %202

202:                                              ; preds = %200, %196
  %203 = phi ptr [ %198, %196 ], [ %201, %200 ]
  call void @Perl_op_free(ptr noundef nonnull %0)
  %204 = getelementptr inbounds %struct.gv, ptr %190, i64 0, i32 1
  %205 = load i32, ptr %204, align 8, !tbaa !74
  %206 = add i32 %205, 1
  store i32 %206, ptr %204, align 8, !tbaa !74
  %207 = call ptr @Perl_newSVOP(i32 noundef 7, i32 noundef 0, ptr noundef nonnull %190)
  %208 = call ptr @Perl_newUNOP(i32 noundef 17, i32 noundef 0, ptr noundef %207)
  %209 = call ptr @Perl_newLISTOP(i32 noundef 158, i32 noundef 0, ptr noundef %203, ptr noundef %208)
  %210 = call ptr @Perl_newUNOP(i32 noundef 185, i32 noundef 64, ptr noundef %209)
  br label %213

211:                                              ; preds = %189, %186
  %212 = call ptr @Perl_ck_fun(ptr noundef nonnull %0)
  br label %213

213:                                              ; preds = %211, %202
  %214 = phi ptr [ %212, %211 ], [ %210, %202 ]
  ret ptr %214
}

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memmove.p0.p0.i64(ptr nocapture writeonly, ptr nocapture readonly, i64, i1 immarg) #14

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_ck_return(ptr noundef readonly returned %0) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.listop, ptr %0, i64 0, i32 7
  %3 = load ptr, ptr %2, align 8, !tbaa !81
  %4 = getelementptr inbounds %struct.op, ptr %3, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !38
  %6 = load ptr, ptr @PL_compcv, align 8, !tbaa !6
  %7 = load ptr, ptr %6, align 8, !tbaa !10
  %8 = getelementptr inbounds %struct.xpvcv, ptr %7, i64 0, i32 12
  %9 = load i32, ptr %8, align 4, !tbaa !14
  %10 = and i32 %9, 2
  %11 = icmp ne i32 %10, 0
  %12 = icmp ne ptr %5, null
  %13 = select i1 %11, i1 %12, i1 false
  br i1 %13, label %14, label %20

14:                                               ; preds = %1, %14
  %15 = phi ptr [ %18, %14 ], [ %5, %1 ]
  %16 = tail call ptr @Perl_op_lvalue_flags(ptr noundef nonnull %15, i32 noundef 187, i32 noundef 0)
  %17 = getelementptr inbounds %struct.op, ptr %15, i64 0, i32 1
  %18 = load ptr, ptr %17, align 8, !tbaa !38
  %19 = icmp eq ptr %18, null
  br i1 %19, label %20, label %14

20:                                               ; preds = %14, %1
  ret ptr %0
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_ck_select(ptr noundef %0) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 5
  %3 = load i8, ptr %2, align 2, !tbaa !35
  %4 = and i8 %3, 4
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %75, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.listop, ptr %0, i64 0, i32 7
  %8 = load ptr, ptr %7, align 8, !tbaa !81
  %9 = getelementptr inbounds %struct.op, ptr %8, i64 0, i32 1
  %10 = load ptr, ptr %9, align 8, !tbaa !38
  %11 = icmp eq ptr %10, null
  br i1 %11, label %75, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %struct.op, ptr %10, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !38
  %15 = icmp eq ptr %14, null
  br i1 %15, label %75, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 4
  %18 = load i16, ptr %17, align 8
  %19 = and i16 %18, -512
  %20 = or i16 %19, 231
  store i16 %20, ptr %17, align 8
  %21 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_ppaddr, i64 0, i64 231), align 8, !tbaa !6
  %22 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 2
  store ptr %21, ptr %22, align 8, !tbaa !78
  %23 = tail call ptr @Perl_ck_fun(ptr noundef nonnull %0)
  %24 = getelementptr inbounds %struct.op, ptr %23, i64 0, i32 4
  %25 = load i16, ptr %24, align 8
  %26 = and i16 %25, 511
  %27 = zext i16 %26 to i32
  %28 = zext i16 %26 to i64
  %29 = getelementptr inbounds [0 x i32], ptr @PL_opargs, i64 0, i64 %28
  %30 = load i32, ptr %29, align 4, !tbaa !52
  %31 = and i32 %30, 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %35, label %33

33:                                               ; preds = %16
  %34 = tail call ptr @Perl_scalar(ptr noundef nonnull %23)
  br label %35

35:                                               ; preds = %33, %16
  %36 = and i32 %30, 8
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %44, label %38

38:                                               ; preds = %35
  %39 = getelementptr inbounds %struct.op, ptr %23, i64 0, i32 3
  %40 = load i64, ptr %39, align 8, !tbaa !34
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %42, label %44

42:                                               ; preds = %38
  %43 = tail call i64 @Perl_pad_alloc(i32 noundef %27, i32 noundef 131072) #29
  store i64 %43, ptr %39, align 8, !tbaa !34
  br label %44

44:                                               ; preds = %35, %38, %42
  %45 = load i16, ptr %24, align 8
  %46 = and i16 %45, 511
  %47 = zext i16 %46 to i64
  %48 = getelementptr inbounds [0 x i32], ptr @PL_opargs, i64 0, i64 %47
  %49 = load i32, ptr %48, align 4, !tbaa !52
  %50 = and i32 %49, 32
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %65, label %52

52:                                               ; preds = %44
  %53 = load i32, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 10), align 8, !tbaa !77
  %54 = and i32 %53, 1
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %65, label %56

56:                                               ; preds = %52
  %57 = add i16 %45, 1
  %58 = and i16 %57, 511
  %59 = and i16 %45, -512
  %60 = or i16 %58, %59
  store i16 %60, ptr %24, align 8
  %61 = zext i16 %58 to i64
  %62 = getelementptr inbounds [0 x ptr], ptr @PL_ppaddr, i64 0, i64 %61
  %63 = load ptr, ptr %62, align 8, !tbaa !6
  %64 = getelementptr inbounds %struct.op, ptr %23, i64 0, i32 2
  store ptr %63, ptr %64, align 8, !tbaa !78
  br label %65

65:                                               ; preds = %56, %52, %44
  %66 = icmp eq i16 %46, 101
  br i1 %66, label %67, label %73

67:                                               ; preds = %65
  %68 = getelementptr inbounds %struct.unop, ptr %23, i64 0, i32 7
  %69 = load ptr, ptr %68, align 8, !tbaa !36
  %70 = getelementptr inbounds %struct.op, ptr %69, i64 0, i32 6
  %71 = load i8, ptr %70, align 1, !tbaa !33
  %72 = and i8 %71, -9
  store i8 %72, ptr %70, align 1, !tbaa !33
  br label %73

73:                                               ; preds = %65, %67
  %74 = tail call fastcc ptr @S_fold_constants(ptr noundef nonnull %23)
  br label %91

75:                                               ; preds = %6, %12, %1
  %76 = tail call ptr @Perl_ck_fun(ptr noundef nonnull %0)
  %77 = getelementptr inbounds %struct.listop, ptr %76, i64 0, i32 7
  %78 = load ptr, ptr %77, align 8, !tbaa !81
  %79 = getelementptr inbounds %struct.op, ptr %78, i64 0, i32 1
  %80 = load ptr, ptr %79, align 8, !tbaa !38
  %81 = icmp eq ptr %80, null
  br i1 %81, label %91, label %82

82:                                               ; preds = %75
  %83 = getelementptr inbounds %struct.op, ptr %80, i64 0, i32 4
  %84 = load i16, ptr %83, align 8
  %85 = and i16 %84, 511
  %86 = icmp eq i16 %85, 14
  br i1 %86, label %87, label %91

87:                                               ; preds = %82
  %88 = getelementptr inbounds %struct.op, ptr %80, i64 0, i32 6
  %89 = load i8, ptr %88, align 1, !tbaa !33
  %90 = and i8 %89, -3
  store i8 %90, ptr %88, align 1, !tbaa !33
  br label %91

91:                                               ; preds = %75, %82, %87, %73
  %92 = phi ptr [ %74, %73 ], [ %76, %87 ], [ %76, %82 ], [ %76, %75 ]
  ret ptr %92
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_ck_shift(ptr noundef %0) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 4
  %3 = load i16, ptr %2, align 8
  %4 = and i16 %3, 511
  %5 = zext i16 %4 to i32
  %6 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 5
  %7 = load i8, ptr %6, align 2, !tbaa !35
  %8 = and i8 %7, 4
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %29

10:                                               ; preds = %1
  %11 = load ptr, ptr @PL_compcv, align 8, !tbaa !6
  %12 = load ptr, ptr %11, align 8, !tbaa !10
  %13 = getelementptr inbounds %struct.xpvcv, ptr %12, i64 0, i32 12
  %14 = load i32, ptr %13, align 4, !tbaa !14
  %15 = and i32 %14, 256
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %10
  %18 = or i8 %7, -128
  store i8 %18, ptr %6, align 2, !tbaa !35
  br label %32

19:                                               ; preds = %10
  %20 = load ptr, ptr @PL_argvgv, align 8, !tbaa !6
  %21 = getelementptr inbounds %struct.gv, ptr %20, i64 0, i32 1
  %22 = load i32, ptr %21, align 8, !tbaa !74
  %23 = add i32 %22, 1
  store i32 %23, ptr %21, align 8, !tbaa !74
  %24 = tail call ptr @Perl_newSVOP(i32 noundef 7, i32 noundef 0, ptr noundef %20)
  %25 = tail call ptr @Perl_scalar(ptr noundef %24)
  %26 = tail call ptr @Perl_newUNOP(i32 noundef 135, i32 noundef 0, ptr noundef %24)
  tail call void @Perl_op_free(ptr noundef nonnull %0)
  %27 = tail call ptr @Perl_scalar(ptr noundef %26)
  %28 = tail call ptr @Perl_newUNOP(i32 noundef %5, i32 noundef 0, ptr noundef %26)
  br label %32

29:                                               ; preds = %1
  %30 = tail call ptr @Perl_ck_fun(ptr noundef nonnull %0)
  %31 = tail call ptr @Perl_scalar(ptr noundef %30)
  br label %32

32:                                               ; preds = %17, %19, %29
  %33 = phi ptr [ %30, %29 ], [ %28, %19 ], [ %0, %17 ]
  ret ptr %33
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_ck_sort(ptr noundef returned %0) local_unnamed_addr #4 {
  %2 = alloca [256 x i8], align 16
  %3 = alloca i64, align 8
  %4 = load i32, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 10), align 8, !tbaa !77
  %5 = and i32 %4, 131072
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %45, label %7

7:                                                ; preds = %1
  %8 = load ptr, ptr @PL_hintgv, align 8, !tbaa !6
  %9 = getelementptr inbounds %struct.gv, ptr %8, i64 0, i32 3
  %10 = load ptr, ptr %9, align 8, !tbaa !13
  %11 = getelementptr inbounds %struct.gp, ptr %10, i64 0, i32 5
  %12 = load ptr, ptr %11, align 8, !tbaa !134
  %13 = icmp eq ptr %12, null
  br i1 %13, label %45, label %14

14:                                               ; preds = %7
  %15 = tail call ptr @Perl_hv_common(ptr noundef nonnull %12, ptr noundef null, ptr noundef nonnull @.str.173, i64 noundef 4, i32 noundef 0, i32 noundef 32, ptr noundef null, i32 noundef 0) #29
  %16 = icmp eq ptr %15, null
  br i1 %16, label %45, label %17

17:                                               ; preds = %14
  %18 = load ptr, ptr %15, align 8, !tbaa !6
  %19 = getelementptr inbounds %struct.sv, ptr %18, i64 0, i32 2
  %20 = load i32, ptr %19, align 4, !tbaa !84
  %21 = and i32 %20, 2097408
  %22 = icmp eq i32 %21, 256
  br i1 %22, label %23, label %27

23:                                               ; preds = %17
  %24 = load ptr, ptr %18, align 8, !tbaa !85
  %25 = getelementptr inbounds %struct.xpviv, ptr %24, i64 0, i32 4
  %26 = load i64, ptr %25, align 8, !tbaa !13
  br label %29

27:                                               ; preds = %17
  %28 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %18, i32 noundef 2) #29
  br label %29

29:                                               ; preds = %27, %23
  %30 = phi i64 [ %26, %23 ], [ %28, %27 ]
  %31 = trunc i64 %30 to i32
  %32 = and i32 %31, 1
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %38, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 6
  %36 = load i8, ptr %35, align 1, !tbaa !33
  %37 = or i8 %36, 32
  store i8 %37, ptr %35, align 1, !tbaa !33
  br label %38

38:                                               ; preds = %34, %29
  %39 = and i32 %31, 256
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %45, label %41

41:                                               ; preds = %38
  %42 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 6
  %43 = load i8, ptr %42, align 1, !tbaa !33
  %44 = or i8 %43, 64
  store i8 %44, ptr %42, align 1, !tbaa !33
  br label %45

45:                                               ; preds = %1, %14, %41, %38, %7
  %46 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 5
  %47 = load i8, ptr %46, align 2, !tbaa !35
  %48 = and i8 %47, 64
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %212, label %50

50:                                               ; preds = %45
  %51 = getelementptr inbounds %struct.listop, ptr %0, i64 0, i32 7
  %52 = load ptr, ptr %51, align 8, !tbaa !81
  %53 = getelementptr inbounds %struct.op, ptr %52, i64 0, i32 1
  %54 = load ptr, ptr %53, align 8, !tbaa !38
  %55 = getelementptr inbounds %struct.unop, ptr %54, i64 0, i32 7
  %56 = load ptr, ptr %55, align 8, !tbaa !36
  %57 = getelementptr inbounds %struct.op, ptr %56, i64 0, i32 4
  %58 = load i16, ptr %57, align 8
  %59 = and i16 %58, 511
  %60 = icmp eq i16 %59, 198
  %61 = add nsw i16 %59, -197
  %62 = icmp ult i16 %61, 2
  br i1 %62, label %63, label %212

63:                                               ; preds = %50
  %64 = getelementptr inbounds %struct.listop, ptr %56, i64 0, i32 8
  %65 = load ptr, ptr %64, align 8, !tbaa !83
  %66 = getelementptr inbounds %struct.op, ptr %65, i64 0, i32 4
  %67 = load i16, ptr %66, align 8
  %68 = and i16 %67, 511
  %69 = zext i16 %68 to i32
  switch i32 %69, label %212 [
    i32 83, label %70
    i32 84, label %70
    i32 91, label %70
  ]

70:                                               ; preds = %63, %63, %63
  br i1 %60, label %71, label %85

71:                                               ; preds = %70
  %72 = getelementptr inbounds %struct.binop, ptr %65, i64 0, i32 7
  %73 = load ptr, ptr %72, align 8, !tbaa !106
  %74 = getelementptr inbounds %struct.op, ptr %73, i64 0, i32 4
  %75 = load i16, ptr %74, align 8
  %76 = and i16 %75, 511
  %77 = icmp eq i16 %76, 15
  br i1 %77, label %78, label %85

78:                                               ; preds = %71
  %79 = getelementptr inbounds %struct.binop, ptr %65, i64 0, i32 8
  %80 = load ptr, ptr %79, align 8, !tbaa !113
  %81 = getelementptr inbounds %struct.op, ptr %80, i64 0, i32 4
  %82 = load i16, ptr %81, align 8
  %83 = and i16 %82, 511
  %84 = icmp eq i16 %83, 15
  br i1 %84, label %126, label %85

85:                                               ; preds = %78, %71, %70
  %86 = tail call zeroext i1 @Perl_ckwarn(i32 noundef 28) #29
  br i1 %86, label %87, label %212

87:                                               ; preds = %85
  %88 = getelementptr inbounds %struct.binop, ptr %65, i64 0, i32 7
  %89 = load ptr, ptr %88, align 8, !tbaa !106
  br label %90

90:                                               ; preds = %122, %87
  %91 = phi ptr [ %89, %87 ], [ %124, %122 ]
  %92 = getelementptr inbounds %struct.op, ptr %91, i64 0, i32 4
  %93 = load i16, ptr %92, align 8
  %94 = and i16 %93, 511
  %95 = icmp eq i16 %94, 9
  br i1 %95, label %96, label %122

96:                                               ; preds = %90
  %97 = load ptr, ptr @PL_comppad_name, align 8, !tbaa !6
  %98 = getelementptr inbounds %struct.padnamelist, ptr %97, i64 0, i32 1
  %99 = load ptr, ptr %98, align 8, !tbaa !151
  %100 = getelementptr inbounds %struct.op, ptr %91, i64 0, i32 3
  %101 = load i64, ptr %100, align 8, !tbaa !34
  %102 = getelementptr inbounds ptr, ptr %99, i64 %101
  %103 = load ptr, ptr %102, align 8, !tbaa !6
  %104 = getelementptr inbounds %struct.padname, ptr %103, i64 0, i32 7
  %105 = load i8, ptr %104, align 8, !tbaa !136
  %106 = icmp eq i8 %105, 2
  br i1 %106, label %107, label %122

107:                                              ; preds = %96
  %108 = load ptr, ptr %103, align 8, !tbaa !138
  %109 = load i8, ptr %108, align 1, !tbaa !13
  %110 = icmp eq i8 %109, 36
  br i1 %110, label %111, label %122

111:                                              ; preds = %107
  %112 = getelementptr inbounds i8, ptr %108, i64 1
  %113 = load i8, ptr %112, align 1, !tbaa !13
  %114 = add i8 %113, -97
  %115 = icmp ult i8 %114, 2
  br i1 %115, label %116, label %122

116:                                              ; preds = %111
  %117 = getelementptr inbounds %struct.padname, ptr %103, i64 0, i32 8
  %118 = load i8, ptr %117, align 1, !tbaa !153
  %119 = and i8 %118, 2
  %120 = icmp eq i8 %119, 0
  %121 = select i1 %120, ptr @.str.4, ptr @.str.3
  tail call void (i32, ptr, ...) @Perl_warner(i32 noundef 28, ptr noundef nonnull @.str.174, ptr noundef nonnull %121, ptr noundef nonnull %108) #29
  br label %122

122:                                              ; preds = %116, %111, %107, %96, %90
  %123 = getelementptr inbounds %struct.op, ptr %91, i64 0, i32 1
  %124 = load ptr, ptr %123, align 8, !tbaa !38
  %125 = icmp eq ptr %124, null
  br i1 %125, label %212, label %90, !llvm.loop !315

126:                                              ; preds = %78
  %127 = getelementptr inbounds %struct.unop, ptr %73, i64 0, i32 7
  %128 = load ptr, ptr %127, align 8, !tbaa !36
  %129 = getelementptr inbounds %struct.op, ptr %128, i64 0, i32 4
  %130 = load i16, ptr %129, align 8
  %131 = and i16 %130, 511
  %132 = icmp eq i16 %131, 7
  br i1 %132, label %133, label %212

133:                                              ; preds = %126
  %134 = getelementptr inbounds %struct.svop, ptr %128, i64 0, i32 7
  %135 = load ptr, ptr %134, align 8, !tbaa !65
  %136 = load ptr, ptr %135, align 8, !tbaa !169
  %137 = getelementptr inbounds %struct.xpvgv, ptr %136, i64 0, i32 5
  %138 = load ptr, ptr %137, align 8, !tbaa !13
  %139 = load ptr, ptr @PL_curstash, align 8, !tbaa !6
  %140 = icmp eq ptr %138, %139
  br i1 %140, label %141, label %212

141:                                              ; preds = %133
  %142 = getelementptr inbounds %struct.xpvgv, ptr %136, i64 0, i32 4
  %143 = load ptr, ptr %142, align 8, !tbaa !13
  %144 = getelementptr inbounds %struct.hek, ptr %143, i64 0, i32 2
  %145 = load i8, ptr %144, align 1, !tbaa !13
  switch i8 %145, label %212 [
    i8 97, label %146
    i8 98, label %150
  ]

146:                                              ; preds = %141
  %147 = getelementptr inbounds %struct.hek, ptr %143, i64 0, i32 2, i64 1
  %148 = load i8, ptr %147, align 1, !tbaa !13
  %149 = icmp eq i8 %148, 0
  br i1 %149, label %154, label %212

150:                                              ; preds = %141
  %151 = getelementptr inbounds %struct.hek, ptr %143, i64 0, i32 2, i64 1
  %152 = load i8, ptr %151, align 1, !tbaa !13
  %153 = icmp eq i8 %152, 0
  br i1 %153, label %154, label %212

154:                                              ; preds = %150, %146
  %155 = phi i1 [ true, %146 ], [ false, %150 ]
  %156 = getelementptr inbounds %struct.unop, ptr %80, i64 0, i32 7
  %157 = load ptr, ptr %156, align 8, !tbaa !36
  %158 = getelementptr inbounds %struct.op, ptr %157, i64 0, i32 4
  %159 = load i16, ptr %158, align 8
  %160 = and i16 %159, 511
  %161 = icmp eq i16 %160, 7
  br i1 %161, label %162, label %212

162:                                              ; preds = %154
  %163 = getelementptr inbounds %struct.svop, ptr %157, i64 0, i32 7
  %164 = load ptr, ptr %163, align 8, !tbaa !65
  %165 = load ptr, ptr %164, align 8, !tbaa !169
  %166 = getelementptr inbounds %struct.xpvgv, ptr %165, i64 0, i32 5
  %167 = load ptr, ptr %166, align 8, !tbaa !13
  %168 = icmp eq ptr %167, %138
  br i1 %168, label %169, label %212

169:                                              ; preds = %162
  %170 = getelementptr inbounds %struct.xpvgv, ptr %165, i64 0, i32 4
  %171 = load ptr, ptr %170, align 8, !tbaa !13
  %172 = getelementptr inbounds %struct.hek, ptr %171, i64 0, i32 2
  %173 = load i8, ptr %172, align 1, !tbaa !13
  br i1 %155, label %180, label %174

174:                                              ; preds = %169
  %175 = icmp eq i8 %173, 97
  br i1 %175, label %176, label %212

176:                                              ; preds = %174
  %177 = getelementptr inbounds %struct.hek, ptr %171, i64 0, i32 2, i64 1
  %178 = load i8, ptr %177, align 1, !tbaa !13
  %179 = icmp eq i8 %178, 0
  br i1 %179, label %188, label %212

180:                                              ; preds = %169
  %181 = icmp eq i8 %173, 98
  br i1 %181, label %182, label %212

182:                                              ; preds = %180
  %183 = getelementptr inbounds %struct.hek, ptr %171, i64 0, i32 2, i64 1
  %184 = load i8, ptr %183, align 1, !tbaa !13
  %185 = icmp eq i8 %184, 0
  br i1 %185, label %186, label %212

186:                                              ; preds = %182
  %187 = and i8 %47, 63
  store i8 %187, ptr %46, align 2, !tbaa !35
  br label %193

188:                                              ; preds = %176
  %189 = and i8 %47, 63
  store i8 %189, ptr %46, align 2, !tbaa !35
  %190 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 6
  %191 = load i8, ptr %190, align 1, !tbaa !33
  %192 = or i8 %191, 16
  store i8 %192, ptr %190, align 1, !tbaa !33
  br label %193

193:                                              ; preds = %188, %186
  %194 = load i16, ptr %66, align 8
  %195 = and i16 %194, 511
  %196 = icmp eq i16 %195, 83
  br i1 %196, label %197, label %202

197:                                              ; preds = %193
  %198 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 6
  %199 = load i8, ptr %198, align 1, !tbaa !33
  %200 = or i8 %199, 1
  store i8 %200, ptr %198, align 1, !tbaa !33
  %201 = load i16, ptr %66, align 8
  br label %202

202:                                              ; preds = %197, %193
  %203 = phi i16 [ %201, %197 ], [ %194, %193 ]
  %204 = and i16 %203, 511
  %205 = icmp eq i16 %204, 84
  br i1 %205, label %206, label %210

206:                                              ; preds = %202
  %207 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 6
  %208 = load i8, ptr %207, align 1, !tbaa !33
  %209 = or i8 %208, 3
  store i8 %209, ptr %207, align 1, !tbaa !33
  br label %210

210:                                              ; preds = %206, %202
  %211 = tail call ptr @Perl_op_sibling_splice(ptr noundef nonnull %0, ptr noundef nonnull %52, i32 noundef 1, ptr noundef null)
  tail call void @Perl_op_free(ptr noundef nonnull %54)
  br label %212

212:                                              ; preds = %122, %210, %182, %180, %176, %174, %162, %154, %150, %146, %141, %133, %126, %85, %63, %50, %45
  %213 = getelementptr inbounds %struct.listop, ptr %0, i64 0, i32 7
  %214 = load ptr, ptr %213, align 8, !tbaa !81
  %215 = getelementptr inbounds %struct.op, ptr %214, i64 0, i32 1
  %216 = load ptr, ptr %215, align 8, !tbaa !38
  %217 = load i8, ptr %46, align 2, !tbaa !35
  %218 = and i8 %217, 64
  %219 = icmp eq i8 %218, 0
  br i1 %219, label %327, label %220

220:                                              ; preds = %212
  %221 = getelementptr inbounds %struct.unop, ptr %216, i64 0, i32 7
  %222 = load ptr, ptr %221, align 8, !tbaa !36
  %223 = getelementptr inbounds %struct.op, ptr %222, i64 0, i32 4
  %224 = load i16, ptr %223, align 8
  %225 = and i16 %224, 511
  switch i16 %225, label %329 [
    i16 198, label %226
    i16 197, label %226
    i16 5, label %248
  ]

226:                                              ; preds = %220, %220
  %227 = load ptr, ptr %222, align 8, !tbaa !25
  %228 = icmp eq ptr %227, null
  br i1 %228, label %229, label %232

229:                                              ; preds = %226
  %230 = tail call ptr @Perl_op_linklist(ptr noundef nonnull %222)
  %231 = load i16, ptr %223, align 8
  br label %232

232:                                              ; preds = %226, %229
  %233 = phi i16 [ %224, %226 ], [ %231, %229 ]
  %234 = and i16 %233, 511
  %235 = icmp eq i16 %234, 197
  br i1 %235, label %236, label %244

236:                                              ; preds = %232
  tail call void @Perl_op_clear(ptr noundef nonnull %222)
  %237 = load i16, ptr %223, align 8
  %238 = and i16 %237, 511
  %239 = zext i16 %238 to i64
  %240 = getelementptr inbounds %struct.op, ptr %222, i64 0, i32 3
  store i64 %239, ptr %240, align 8, !tbaa !34
  %241 = and i16 %237, -512
  store i16 %241, ptr %223, align 8
  %242 = load ptr, ptr @PL_ppaddr, align 8, !tbaa !6
  %243 = getelementptr inbounds %struct.op, ptr %222, i64 0, i32 2
  store ptr %242, ptr %243, align 8, !tbaa !78
  br label %244

244:                                              ; preds = %236, %232
  store ptr null, ptr %222, align 8, !tbaa !25
  %245 = tail call ptr @Perl_scalar(ptr noundef nonnull %216)
  store ptr %216, ptr %216, align 8, !tbaa !25
  %246 = load i8, ptr %46, align 2, !tbaa !35
  %247 = or i8 %246, -128
  store i8 %247, ptr %46, align 2, !tbaa !35
  br label %329

248:                                              ; preds = %220
  %249 = getelementptr inbounds %struct.op, ptr %222, i64 0, i32 6
  %250 = load i8, ptr %249, align 1, !tbaa !33
  %251 = and i8 %250, 64
  %252 = icmp eq i8 %251, 0
  br i1 %252, label %329, label %253

253:                                              ; preds = %248
  call void @llvm.lifetime.start.p0(i64 256, ptr nonnull %2) #29
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #29
  %254 = getelementptr inbounds %struct.svop, ptr %222, i64 0, i32 7
  %255 = load ptr, ptr %254, align 8, !tbaa !65
  %256 = getelementptr inbounds %struct.sv, ptr %255, i64 0, i32 2
  %257 = load i32, ptr %256, align 4, !tbaa !84
  %258 = and i32 %257, 2098176
  %259 = icmp eq i32 %258, 1024
  br i1 %259, label %260, label %266

260:                                              ; preds = %253
  %261 = load ptr, ptr %255, align 8, !tbaa !85
  %262 = getelementptr inbounds %struct.xpv, ptr %261, i64 0, i32 2
  %263 = load i64, ptr %262, align 8, !tbaa !86
  store i64 %263, ptr %3, align 8, !tbaa !88
  %264 = getelementptr inbounds %struct.sv, ptr %255, i64 0, i32 3
  %265 = load ptr, ptr %264, align 8, !tbaa !13
  br label %269

266:                                              ; preds = %253
  %267 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %255, ptr noundef nonnull %3, i32 noundef 2) #29
  %268 = load i64, ptr %3, align 8, !tbaa !88
  br label %269

269:                                              ; preds = %266, %260
  %270 = phi i64 [ %263, %260 ], [ %268, %266 ]
  %271 = phi ptr [ %265, %260 ], [ %267, %266 ]
  store i8 38, ptr %2, align 16, !tbaa !13
  %272 = getelementptr inbounds i8, ptr %2, i64 1
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %272, ptr align 1 %271, i64 %270, i1 false)
  %273 = add i64 %270, 1
  %274 = load ptr, ptr %254, align 8, !tbaa !65
  %275 = getelementptr inbounds %struct.sv, ptr %274, i64 0, i32 2
  %276 = load i32, ptr %275, align 4, !tbaa !84
  %277 = and i32 %276, 536870912
  %278 = call i64 @Perl_pad_findmy_pvn(ptr noundef nonnull %2, i64 noundef %273, i32 noundef %277) #29
  %279 = icmp eq i64 %278, -1
  br i1 %279, label %326, label %280

280:                                              ; preds = %269
  %281 = load ptr, ptr @PL_comppad_name, align 8, !tbaa !6
  %282 = getelementptr inbounds %struct.padnamelist, ptr %281, i64 0, i32 1
  %283 = load ptr, ptr %282, align 8, !tbaa !151
  %284 = getelementptr inbounds ptr, ptr %283, i64 %278
  %285 = load ptr, ptr %284, align 8, !tbaa !6
  %286 = getelementptr inbounds %struct.padname, ptr %285, i64 0, i32 1
  %287 = load ptr, ptr %286, align 8, !tbaa !272
  %288 = icmp eq ptr %287, null
  br i1 %288, label %322, label %289

289:                                              ; preds = %280
  %290 = getelementptr inbounds %struct.hv, ptr %287, i64 0, i32 2
  %291 = load i32, ptr %290, align 4, !tbaa !56
  %292 = and i32 %291, 33554432
  %293 = icmp eq i32 %292, 0
  br i1 %293, label %310, label %294

294:                                              ; preds = %289
  %295 = getelementptr inbounds %struct.hv, ptr %287, i64 0, i32 3
  %296 = load ptr, ptr %295, align 8, !tbaa !13
  %297 = load ptr, ptr %287, align 8, !tbaa !139
  %298 = getelementptr inbounds %struct.xpvhv, ptr %297, i64 0, i32 3
  %299 = load i64, ptr %298, align 8, !tbaa !140
  %300 = add i64 %299, 1
  %301 = getelementptr inbounds ptr, ptr %296, i64 %300
  %302 = load ptr, ptr %301, align 8, !tbaa !13
  %303 = icmp eq ptr %302, null
  br i1 %303, label %310, label %304

304:                                              ; preds = %294
  %305 = getelementptr inbounds %struct.xpvhv_aux, ptr %301, i64 0, i32 4
  %306 = load i32, ptr %305, align 4, !tbaa !142
  %307 = icmp eq i32 %306, 0
  br i1 %307, label %310, label %308

308:                                              ; preds = %304
  %309 = load ptr, ptr %302, align 8, !tbaa !6
  br label %310

310:                                              ; preds = %304, %289, %294, %308
  %311 = phi ptr [ %309, %308 ], [ null, %294 ], [ null, %289 ], [ %302, %304 ]
  %312 = call ptr @Perl_newSVhek(ptr noundef %311) #29
  call void @Perl_sv_catpvn_flags(ptr noundef %312, ptr noundef nonnull @.str.93, i64 noundef 2, i32 noundef 2) #29
  %313 = load ptr, ptr %254, align 8, !tbaa !65
  call void @Perl_sv_catsv_flags(ptr noundef %312, ptr noundef %313, i32 noundef 2) #29
  %314 = load ptr, ptr %254, align 8, !tbaa !65
  %315 = getelementptr inbounds %struct.sv, ptr %314, i64 0, i32 1
  %316 = load i32, ptr %315, align 8, !tbaa !42
  %317 = icmp ugt i32 %316, 1
  br i1 %317, label %318, label %320

318:                                              ; preds = %310
  %319 = add i32 %316, -1
  store i32 %319, ptr %315, align 8, !tbaa !42
  br label %321

320:                                              ; preds = %310
  call void @Perl_sv_free2(ptr noundef nonnull %314, i32 noundef %316) #29
  br label %321

321:                                              ; preds = %318, %320
  store ptr %312, ptr %254, align 8, !tbaa !65
  br label %326

322:                                              ; preds = %280
  %323 = call ptr @Perl_newOP(i32 noundef 387, i32 noundef 0)
  %324 = getelementptr inbounds %struct.op, ptr %323, i64 0, i32 3
  store i64 %278, ptr %324, align 8, !tbaa !34
  %325 = call ptr @Perl_op_sibling_splice(ptr noundef nonnull %216, ptr noundef null, i32 noundef 1, ptr noundef %323)
  call void @Perl_op_free(ptr noundef nonnull %222)
  br label %326

326:                                              ; preds = %321, %322, %269
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #29
  call void @llvm.lifetime.end.p0(i64 256, ptr nonnull %2) #29
  br label %329

327:                                              ; preds = %212
  %328 = icmp eq ptr %216, null
  br i1 %328, label %346, label %333

329:                                              ; preds = %244, %326, %248, %220
  %330 = getelementptr inbounds %struct.op, ptr %216, i64 0, i32 1
  %331 = load ptr, ptr %330, align 8, !tbaa !38
  %332 = icmp eq ptr %331, null
  br i1 %332, label %346, label %339

333:                                              ; preds = %327, %333
  %334 = phi ptr [ %337, %333 ], [ %216, %327 ]
  %335 = tail call ptr @Perl_list(ptr noundef nonnull %334)
  %336 = getelementptr inbounds %struct.op, ptr %334, i64 0, i32 1
  %337 = load ptr, ptr %336, align 8, !tbaa !38
  %338 = icmp eq ptr %337, null
  br i1 %338, label %346, label %333, !llvm.loop !316

339:                                              ; preds = %329, %339
  %340 = phi ptr [ %344, %339 ], [ %331, %329 ]
  %341 = call ptr @Perl_list(ptr noundef nonnull %340)
  %342 = call ptr @Perl_op_lvalue_flags(ptr noundef nonnull %340, i32 noundef 169, i32 noundef 0)
  %343 = getelementptr inbounds %struct.op, ptr %340, i64 0, i32 1
  %344 = load ptr, ptr %343, align 8, !tbaa !38
  %345 = icmp eq ptr %344, null
  br i1 %345, label %346, label %339, !llvm.loop !316

346:                                              ; preds = %339, %333, %329, %327
  ret ptr %0
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_ck_split(ptr noundef returned %0) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 5
  %3 = load i8, ptr %2, align 2, !tbaa !35
  %4 = and i8 %3, 64
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %21, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 4
  %8 = load i16, ptr %7, align 8
  %9 = and i16 %8, 511
  %10 = icmp eq i16 %9, 380
  br i1 %10, label %11, label %13

11:                                               ; preds = %6
  %12 = tail call ptr @Perl_custom_op_get_field(ptr noundef nonnull %0, i32 noundef 2)
  br label %17

13:                                               ; preds = %6
  %14 = zext i16 %9 to i64
  %15 = getelementptr inbounds [0 x ptr], ptr @PL_op_desc, i64 0, i64 %14
  %16 = load ptr, ptr %15, align 8, !tbaa !6
  br label %17

17:                                               ; preds = %11, %13
  %18 = phi ptr [ %12, %11 ], [ %16, %13 ]
  %19 = tail call ptr (ptr, ...) @Perl_form(ptr noundef nonnull @.str.158, ptr noundef %18) #29
  %20 = tail call i32 @Perl_yyerror(ptr noundef %19) #29
  br label %197

21:                                               ; preds = %1
  %22 = getelementptr inbounds %struct.listop, ptr %0, i64 0, i32 7
  %23 = load ptr, ptr %22, align 8, !tbaa !81
  %24 = getelementptr inbounds %struct.op, ptr %23, i64 0, i32 4
  %25 = load i16, ptr %24, align 8
  %26 = and i16 %25, 511
  %27 = icmp eq i16 %26, 0
  br i1 %27, label %30, label %28

28:                                               ; preds = %21
  %29 = zext i16 %26 to i32
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.175, i32 noundef %29) #29
  br label %30

30:                                               ; preds = %28, %21
  %31 = getelementptr inbounds %struct.op, ptr %23, i64 0, i32 1
  %32 = load ptr, ptr %31, align 8, !tbaa !38
  %33 = icmp eq ptr %32, null
  br i1 %33, label %34, label %37

34:                                               ; preds = %30
  %35 = tail call ptr @Perl_newSVpvn(ptr noundef nonnull @.str.176, i64 noundef 1) #29
  %36 = tail call ptr @Perl_newSVOP(i32 noundef 5, i32 noundef 0, ptr noundef %35)
  br label %37

37:                                               ; preds = %30, %34
  %38 = phi ptr [ %36, %34 ], [ null, %30 ]
  %39 = tail call ptr @Perl_op_sibling_splice(ptr noundef nonnull %0, ptr noundef null, i32 noundef 1, ptr noundef %38)
  tail call void @Perl_op_free(ptr noundef nonnull %23)
  %40 = load ptr, ptr %22, align 8, !tbaa !81
  %41 = getelementptr inbounds %struct.op, ptr %40, i64 0, i32 4
  %42 = load i16, ptr %41, align 8
  %43 = and i16 %42, 511
  %44 = icmp eq i16 %43, 31
  br i1 %44, label %45, label %50

45:                                               ; preds = %37
  %46 = getelementptr inbounds %struct.op, ptr %40, i64 0, i32 5
  %47 = load i8, ptr %46, align 2, !tbaa !35
  %48 = and i8 %47, 64
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %57, label %50

50:                                               ; preds = %45, %37
  %51 = tail call ptr @Perl_op_sibling_splice(ptr noundef nonnull %0, ptr noundef null, i32 noundef 1, ptr noundef null)
  %52 = tail call ptr @Perl_newPMOP(i32 noundef 31, i32 noundef 128)
  %53 = tail call ptr @Perl_pmruntime(ptr noundef %52, ptr noundef nonnull %40, ptr noundef null, i1 noundef zeroext false, i32 noundef 0)
  %54 = tail call ptr @Perl_op_sibling_splice(ptr noundef nonnull %0, ptr noundef null, i32 noundef 0, ptr noundef %52)
  %55 = getelementptr inbounds %struct.op, ptr %52, i64 0, i32 4
  %56 = load i16, ptr %55, align 8
  br label %57

57:                                               ; preds = %45, %50
  %58 = phi i16 [ %56, %50 ], [ %42, %45 ]
  %59 = phi ptr [ %52, %50 ], [ %40, %45 ]
  %60 = getelementptr inbounds %struct.op, ptr %59, i64 0, i32 4
  %61 = and i16 %58, -512
  %62 = or i16 %61, 13
  store i16 %62, ptr %60, align 8
  %63 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_ppaddr, i64 0, i64 13), align 8, !tbaa !6
  %64 = getelementptr inbounds %struct.op, ptr %59, i64 0, i32 2
  store ptr %63, ptr %64, align 8, !tbaa !78
  %65 = getelementptr inbounds %struct.op, ptr %59, i64 0, i32 3
  store i64 0, ptr %65, align 8, !tbaa !34
  %66 = tail call ptr @Perl_scalar(ptr noundef nonnull %59)
  %67 = getelementptr inbounds %struct.pmop, ptr %59, i64 0, i32 10
  %68 = load i32, ptr %67, align 8, !tbaa !54
  %69 = and i32 %68, 16777216
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %72, label %71

71:                                               ; preds = %57
  tail call void (i32, ptr, ...) @Perl_ck_warner(i32 noundef 20, ptr noundef nonnull @.str.177) #29
  br label %72

72:                                               ; preds = %71, %57
  %73 = getelementptr inbounds %struct.op, ptr %59, i64 0, i32 1
  %74 = load ptr, ptr %73, align 8, !tbaa !38
  %75 = icmp eq ptr %74, null
  br i1 %75, label %76, label %120

76:                                               ; preds = %72
  %77 = tail call ptr @Perl_newDEFSVOP()
  %78 = icmp eq ptr %77, null
  br i1 %78, label %120, label %79

79:                                               ; preds = %76
  %80 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 4
  %81 = load i16, ptr %80, align 8
  %82 = and i16 %81, 511
  %83 = icmp eq i16 %82, 156
  br i1 %83, label %114, label %84

84:                                               ; preds = %79
  %85 = tail call ptr @Perl_Slab_Alloc(i64 noundef 56)
  %86 = getelementptr inbounds %struct.listop, ptr %85, i64 0, i32 4
  %87 = load i16, ptr %86, align 8
  %88 = and i16 %87, -512
  %89 = or i16 %88, 156
  store i16 %89, ptr %86, align 8
  %90 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_ppaddr, i64 0, i64 156), align 8, !tbaa !6
  %91 = getelementptr inbounds %struct.listop, ptr %85, i64 0, i32 2
  store ptr %90, ptr %91, align 8, !tbaa !222
  %92 = getelementptr inbounds %struct.listop, ptr %85, i64 0, i32 5
  store i8 4, ptr %92, align 2, !tbaa !223
  %93 = load i16, ptr %80, align 8
  %94 = or i16 %93, 16384
  store i16 %94, ptr %80, align 8
  %95 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 1
  store ptr %77, ptr %95, align 8, !tbaa !38
  %96 = getelementptr inbounds %struct.listop, ptr %85, i64 0, i32 7
  store ptr %0, ptr %96, align 8, !tbaa !81
  %97 = getelementptr inbounds %struct.listop, ptr %85, i64 0, i32 8
  store ptr %77, ptr %97, align 8, !tbaa !83
  %98 = getelementptr inbounds %struct.op, ptr %77, i64 0, i32 4
  %99 = load i16, ptr %98, align 8
  %100 = and i16 %99, -16385
  store i16 %100, ptr %98, align 8
  %101 = load ptr, ptr %97, align 8, !tbaa !83
  %102 = getelementptr inbounds %struct.op, ptr %101, i64 0, i32 1
  store ptr null, ptr %102, align 8, !tbaa !38
  %103 = load ptr, ptr @PL_op_mask, align 8, !tbaa !6
  %104 = icmp eq ptr %103, null
  br i1 %104, label %111, label %105

105:                                              ; preds = %84
  %106 = getelementptr inbounds i8, ptr %103, i64 156
  %107 = load i8, ptr %106, align 1, !tbaa !13
  %108 = icmp eq i8 %107, 0
  br i1 %108, label %111, label %109

109:                                              ; preds = %105
  tail call void @Perl_op_free(ptr noundef nonnull %85)
  %110 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_op_desc, i64 0, i64 156), align 8, !tbaa !6
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.63, ptr noundef %110) #29
  br label %120

111:                                              ; preds = %105, %84
  %112 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_check, i64 0, i64 156), align 8, !tbaa !6
  %113 = tail call ptr %112(ptr noundef nonnull %85) #29
  br label %120

114:                                              ; preds = %79
  %115 = getelementptr inbounds %struct.listop, ptr %0, i64 0, i32 8
  %116 = load ptr, ptr %115, align 8, !tbaa !83
  %117 = tail call ptr @Perl_op_sibling_splice(ptr noundef nonnull %0, ptr noundef %116, i32 noundef 0, ptr noundef nonnull %77)
  %118 = load i8, ptr %2, align 2, !tbaa !35
  %119 = or i8 %118, 4
  store i8 %119, ptr %2, align 2, !tbaa !35
  br label %120

120:                                              ; preds = %114, %76, %109, %111, %72
  %121 = load ptr, ptr %73, align 8, !tbaa !38
  %122 = tail call ptr @Perl_scalar(ptr noundef %121)
  %123 = getelementptr inbounds %struct.op, ptr %121, i64 0, i32 1
  %124 = load ptr, ptr %123, align 8, !tbaa !38
  %125 = icmp eq ptr %124, null
  br i1 %125, label %126, label %176

126:                                              ; preds = %120
  %127 = tail call ptr @Perl_newSViv(i64 noundef 0) #29
  %128 = tail call ptr @Perl_newSVOP(i32 noundef 5, i32 noundef 0, ptr noundef %127)
  %129 = icmp eq ptr %128, null
  br i1 %129, label %171, label %130

130:                                              ; preds = %126
  %131 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 4
  %132 = load i16, ptr %131, align 8
  %133 = and i16 %132, 511
  %134 = icmp eq i16 %133, 156
  br i1 %134, label %165, label %135

135:                                              ; preds = %130
  %136 = tail call ptr @Perl_Slab_Alloc(i64 noundef 56)
  %137 = getelementptr inbounds %struct.listop, ptr %136, i64 0, i32 4
  %138 = load i16, ptr %137, align 8
  %139 = and i16 %138, -512
  %140 = or i16 %139, 156
  store i16 %140, ptr %137, align 8
  %141 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_ppaddr, i64 0, i64 156), align 8, !tbaa !6
  %142 = getelementptr inbounds %struct.listop, ptr %136, i64 0, i32 2
  store ptr %141, ptr %142, align 8, !tbaa !222
  %143 = getelementptr inbounds %struct.listop, ptr %136, i64 0, i32 5
  store i8 4, ptr %143, align 2, !tbaa !223
  %144 = load i16, ptr %131, align 8
  %145 = or i16 %144, 16384
  store i16 %145, ptr %131, align 8
  %146 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 1
  store ptr %128, ptr %146, align 8, !tbaa !38
  %147 = getelementptr inbounds %struct.listop, ptr %136, i64 0, i32 7
  store ptr %0, ptr %147, align 8, !tbaa !81
  %148 = getelementptr inbounds %struct.listop, ptr %136, i64 0, i32 8
  store ptr %128, ptr %148, align 8, !tbaa !83
  %149 = getelementptr inbounds %struct.op, ptr %128, i64 0, i32 4
  %150 = load i16, ptr %149, align 8
  %151 = and i16 %150, -16385
  store i16 %151, ptr %149, align 8
  %152 = load ptr, ptr %148, align 8, !tbaa !83
  %153 = getelementptr inbounds %struct.op, ptr %152, i64 0, i32 1
  store ptr null, ptr %153, align 8, !tbaa !38
  %154 = load ptr, ptr @PL_op_mask, align 8, !tbaa !6
  %155 = icmp eq ptr %154, null
  br i1 %155, label %162, label %156

156:                                              ; preds = %135
  %157 = getelementptr inbounds i8, ptr %154, i64 156
  %158 = load i8, ptr %157, align 1, !tbaa !13
  %159 = icmp eq i8 %158, 0
  br i1 %159, label %162, label %160

160:                                              ; preds = %156
  tail call void @Perl_op_free(ptr noundef nonnull %136)
  %161 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_op_desc, i64 0, i64 156), align 8, !tbaa !6
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.63, ptr noundef %161) #29
  br label %171

162:                                              ; preds = %156, %135
  %163 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_check, i64 0, i64 156), align 8, !tbaa !6
  %164 = tail call ptr %163(ptr noundef nonnull %136) #29
  br label %171

165:                                              ; preds = %130
  %166 = getelementptr inbounds %struct.listop, ptr %0, i64 0, i32 8
  %167 = load ptr, ptr %166, align 8, !tbaa !83
  %168 = tail call ptr @Perl_op_sibling_splice(ptr noundef nonnull %0, ptr noundef %167, i32 noundef 0, ptr noundef nonnull %128)
  %169 = load i8, ptr %2, align 2, !tbaa !35
  %170 = or i8 %169, 4
  store i8 %170, ptr %2, align 2, !tbaa !35
  br label %171

171:                                              ; preds = %162, %160, %126, %165
  %172 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 6
  %173 = load i8, ptr %172, align 1, !tbaa !33
  %174 = or i8 %173, -128
  store i8 %174, ptr %172, align 1, !tbaa !33
  %175 = load ptr, ptr %123, align 8, !tbaa !38
  br label %176

176:                                              ; preds = %120, %171
  %177 = phi ptr [ %124, %120 ], [ %175, %171 ]
  %178 = tail call ptr @Perl_scalar(ptr noundef %177)
  %179 = getelementptr inbounds %struct.op, ptr %177, i64 0, i32 1
  %180 = load ptr, ptr %179, align 8, !tbaa !38
  %181 = icmp eq ptr %180, null
  br i1 %181, label %197, label %182

182:                                              ; preds = %176
  %183 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 4
  %184 = load i16, ptr %183, align 8
  %185 = and i16 %184, 511
  %186 = icmp eq i16 %185, 380
  br i1 %186, label %187, label %189

187:                                              ; preds = %182
  %188 = tail call ptr @Perl_custom_op_get_field(ptr noundef nonnull %0, i32 noundef 2)
  br label %193

189:                                              ; preds = %182
  %190 = zext i16 %185 to i64
  %191 = getelementptr inbounds [0 x ptr], ptr @PL_op_desc, i64 0, i64 %190
  %192 = load ptr, ptr %191, align 8, !tbaa !6
  br label %193

193:                                              ; preds = %189, %187
  %194 = phi ptr [ %188, %187 ], [ %192, %189 ]
  %195 = tail call ptr (ptr, ...) @Perl_form(ptr noundef nonnull @.str.159, ptr noundef %194) #29
  %196 = tail call i32 @Perl_yyerror_pv(ptr noundef %195, i32 noundef 0) #29
  br label %197

197:                                              ; preds = %176, %193, %17
  ret ptr %0
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_ck_stringify(ptr noundef %0) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.unop, ptr %0, i64 0, i32 7
  %3 = load ptr, ptr %2, align 8, !tbaa !36
  %4 = getelementptr inbounds %struct.op, ptr %3, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !38
  %6 = getelementptr inbounds %struct.op, ptr %5, i64 0, i32 4
  %7 = load i16, ptr %6, align 8
  %8 = and i16 %7, 511
  switch i16 %8, label %15 [
    i16 157, label %9
    i16 134, label %9
    i16 133, label %9
    i16 131, label %9
    i16 132, label %9
    i16 130, label %9
  ]

9:                                                ; preds = %1, %1, %1, %1, %1, %1
  %10 = getelementptr inbounds %struct.op, ptr %5, i64 0, i32 1
  %11 = load ptr, ptr %10, align 8, !tbaa !38
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %15

13:                                               ; preds = %9
  %14 = tail call ptr @Perl_op_sibling_splice(ptr noundef nonnull %0, ptr noundef nonnull %3, i32 noundef -1, ptr noundef null)
  tail call void @Perl_op_free(ptr noundef nonnull %0)
  br label %17

15:                                               ; preds = %1, %9
  %16 = tail call ptr @Perl_ck_fun(ptr noundef nonnull %0)
  br label %17

17:                                               ; preds = %15, %13
  %18 = phi ptr [ %16, %15 ], [ %5, %13 ]
  ret ptr %18
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_ck_join(ptr noundef %0) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.listop, ptr %0, i64 0, i32 7
  %3 = load ptr, ptr %2, align 8, !tbaa !81
  %4 = getelementptr inbounds %struct.op, ptr %3, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !38
  %6 = icmp eq ptr %5, null
  br i1 %6, label %76, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.op, ptr %5, i64 0, i32 4
  %9 = load i16, ptr %8, align 8
  %10 = and i16 %9, 511
  %11 = icmp eq i16 %10, 31
  br i1 %11, label %12, label %42

12:                                               ; preds = %7
  %13 = tail call zeroext i1 @Perl_ckwarn(i32 noundef 28) #29
  br i1 %13, label %14, label %42

14:                                               ; preds = %12
  %15 = getelementptr inbounds %struct.pmop, ptr %5, i64 0, i32 9
  %16 = load ptr, ptr %15, align 8, !tbaa !70
  %17 = icmp eq ptr %16, null
  br i1 %17, label %38, label %18

18:                                               ; preds = %14
  %19 = getelementptr i8, ptr %16, i64 16
  %20 = load ptr, ptr %19, align 8, !tbaa !13
  %21 = getelementptr inbounds %struct.regexp, ptr %20, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8, !tbaa !13
  %23 = getelementptr inbounds %struct.regexp, ptr %20, i64 0, i32 24
  %24 = load i16, ptr %23, align 8
  %25 = and i16 %24, 15
  %26 = zext i16 %25 to i64
  %27 = getelementptr inbounds i8, ptr %22, i64 %26
  %28 = load ptr, ptr %16, align 8, !tbaa !215
  %29 = getelementptr inbounds %struct.xpv, ptr %28, i64 0, i32 2
  %30 = load i64, ptr %29, align 8, !tbaa !86
  %31 = xor i64 %26, -1
  %32 = add i64 %30, %31
  %33 = getelementptr inbounds %struct.p5rx, ptr %16, i64 0, i32 2
  %34 = load i32, ptr %33, align 4, !tbaa !317
  %35 = and i32 %34, 536870912
  %36 = or i32 %35, 524288
  %37 = tail call ptr @Perl_newSVpvn_flags(ptr noundef %27, i64 noundef %32, i32 noundef %36) #29
  br label %40

38:                                               ; preds = %14
  %39 = tail call ptr @Perl_newSVpvn_flags(ptr noundef nonnull @.str.178, i64 noundef 6, i32 noundef 524288) #29
  br label %40

40:                                               ; preds = %38, %18
  %41 = phi ptr [ %37, %18 ], [ %39, %38 ]
  tail call void (i32, ptr, ...) @Perl_warner(i32 noundef 28, ptr noundef nonnull @.str.179, ptr noundef %41, ptr noundef %41) #29
  br label %42

42:                                               ; preds = %7, %40, %12
  %43 = load i16, ptr %8, align 8
  %44 = and i16 %43, 511
  switch i16 %44, label %76 [
    i16 5, label %60
    i16 9, label %45
    i16 15, label %49
  ]

45:                                               ; preds = %42
  %46 = getelementptr inbounds %struct.op, ptr %5, i64 0, i32 6
  %47 = load i8, ptr %46, align 1, !tbaa !33
  %48 = icmp sgt i8 %47, -1
  br i1 %48, label %60, label %76

49:                                               ; preds = %42
  %50 = getelementptr inbounds %struct.unop, ptr %5, i64 0, i32 7
  %51 = load ptr, ptr %50, align 8, !tbaa !36
  %52 = getelementptr inbounds %struct.op, ptr %51, i64 0, i32 4
  %53 = load i16, ptr %52, align 8
  %54 = and i16 %53, 511
  %55 = icmp eq i16 %54, 7
  br i1 %55, label %56, label %76

56:                                               ; preds = %49
  %57 = getelementptr inbounds %struct.op, ptr %5, i64 0, i32 6
  %58 = load i8, ptr %57, align 1, !tbaa !33
  %59 = icmp ult i8 %58, 64
  br i1 %59, label %60, label %76

60:                                               ; preds = %42, %56, %45
  %61 = getelementptr inbounds %struct.op, ptr %5, i64 0, i32 1
  %62 = load ptr, ptr %61, align 8, !tbaa !38
  %63 = icmp eq ptr %62, null
  br i1 %63, label %76, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds %struct.op, ptr %62, i64 0, i32 1
  %66 = load ptr, ptr %65, align 8, !tbaa !38
  %67 = icmp eq ptr %66, null
  br i1 %67, label %68, label %76

68:                                               ; preds = %64
  %69 = getelementptr inbounds %struct.op, ptr %62, i64 0, i32 5
  %70 = load i8, ptr %69, align 2, !tbaa !35
  %71 = and i8 %70, 3
  %72 = icmp eq i8 %71, 2
  br i1 %72, label %73, label %76

73:                                               ; preds = %68
  %74 = tail call ptr @Perl_op_sibling_splice(ptr noundef nonnull %0, ptr noundef nonnull %5, i32 noundef 1, ptr noundef null)
  %75 = tail call ptr @Perl_op_convert_list(i32 noundef 68, i32 noundef 65536, ptr noundef %74)
  tail call void @Perl_op_free(ptr noundef nonnull %0)
  br label %78

76:                                               ; preds = %42, %60, %68, %64, %45, %1, %56, %49
  %77 = tail call ptr @Perl_ck_fun(ptr noundef nonnull %0)
  br label %78

78:                                               ; preds = %73, %76
  %79 = phi ptr [ %77, %76 ], [ %75, %73 ]
  ret ptr %79
}

; Function Attrs: nofree norecurse nosync nounwind sspstrong memory(read, inaccessiblemem: none) uwtable
define dso_local ptr @Perl_find_lexical_cv(i64 noundef %0) local_unnamed_addr #21 {
  %2 = load ptr, ptr @PL_comppad_name, align 8, !tbaa !6
  %3 = getelementptr inbounds %struct.padnamelist, ptr %2, i64 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !151
  %5 = getelementptr inbounds ptr, ptr %4, i64 %0
  %6 = load ptr, ptr @PL_compcv, align 8, !tbaa !6
  %7 = load ptr, ptr %5, align 8, !tbaa !6
  %8 = getelementptr inbounds %struct.padname, ptr %7, i64 0, i32 8
  %9 = load i8, ptr %8, align 1, !tbaa !153
  %10 = zext i8 %9 to i32
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %38, label %13

13:                                               ; preds = %1
  %14 = load ptr, ptr %6, align 8, !tbaa !10
  br label %15

15:                                               ; preds = %13, %15
  %16 = phi ptr [ %20, %15 ], [ %14, %13 ]
  %17 = phi ptr [ %32, %15 ], [ %7, %13 ]
  %18 = getelementptr inbounds %struct.xpvcv, ptr %16, i64 0, i32 10
  %19 = load ptr, ptr %18, align 8, !tbaa !158
  %20 = load ptr, ptr %19, align 8, !tbaa !10
  %21 = getelementptr inbounds %struct.xpvcv, ptr %20, i64 0, i32 9
  %22 = load ptr, ptr %21, align 8, !tbaa !13
  %23 = getelementptr inbounds %struct.padlist, ptr %22, i64 0, i32 1
  %24 = load ptr, ptr %23, align 8, !tbaa !159
  %25 = load ptr, ptr %24, align 8, !tbaa !6
  %26 = getelementptr inbounds %struct.padnamelist, ptr %25, i64 0, i32 1
  %27 = load ptr, ptr %26, align 8, !tbaa !151
  %28 = getelementptr inbounds %struct.padname, ptr %17, i64 0, i32 3
  %29 = load i32, ptr %28, align 8, !tbaa !157
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds ptr, ptr %27, i64 %30
  %32 = load ptr, ptr %31, align 8, !tbaa !6
  %33 = getelementptr inbounds %struct.padname, ptr %32, i64 0, i32 8
  %34 = load i8, ptr %33, align 1, !tbaa !153
  %35 = zext i8 %34 to i32
  %36 = and i32 %35, 1
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %15, !llvm.loop !318

38:                                               ; preds = %15, %1
  %39 = phi i64 [ %0, %1 ], [ %30, %15 ]
  %40 = phi ptr [ %6, %1 ], [ %19, %15 ]
  %41 = phi ptr [ %7, %1 ], [ %32, %15 ]
  %42 = phi i32 [ %10, %1 ], [ %35, %15 ]
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %49

45:                                               ; preds = %38
  %46 = getelementptr inbounds %struct.padname, ptr %41, i64 0, i32 2
  %47 = load ptr, ptr %46, align 8, !tbaa !13
  %48 = icmp eq ptr %47, null
  br i1 %48, label %49, label %61

49:                                               ; preds = %45, %38
  %50 = load ptr, ptr %40, align 8, !tbaa !10
  %51 = getelementptr inbounds %struct.xpvcv, ptr %50, i64 0, i32 9
  %52 = load ptr, ptr %51, align 8, !tbaa !13
  %53 = getelementptr inbounds %struct.padlist, ptr %52, i64 0, i32 1
  %54 = load ptr, ptr %53, align 8, !tbaa !159
  %55 = getelementptr inbounds ptr, ptr %54, i64 1
  %56 = load ptr, ptr %55, align 8, !tbaa !6
  %57 = getelementptr inbounds %struct.av, ptr %56, i64 0, i32 3
  %58 = load ptr, ptr %57, align 8, !tbaa !13
  %59 = getelementptr inbounds ptr, ptr %58, i64 %39
  %60 = load ptr, ptr %59, align 8, !tbaa !6
  br label %61

61:                                               ; preds = %45, %49
  %62 = phi ptr [ %60, %49 ], [ %47, %45 ]
  ret ptr %62
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_rv2cv_op_cv(ptr nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #4 {
  %3 = icmp ult i32 %1, 16
  br i1 %3, label %5, label %4

4:                                                ; preds = %2
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.180, i32 noundef %1) #29
  br label %5

5:                                                ; preds = %4, %2
  %6 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 4
  %7 = load i16, ptr %6, align 8
  %8 = and i16 %7, 511
  %9 = icmp eq i16 %8, 17
  br i1 %9, label %10, label %171

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 6
  %12 = load i8, ptr %11, align 1, !tbaa !33
  %13 = and i8 %12, 8
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %171

15:                                               ; preds = %10
  %16 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 5
  %17 = load i8, ptr %16, align 2, !tbaa !35
  %18 = and i8 %17, 4
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %171, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.unop, ptr %0, i64 0, i32 7
  %22 = load ptr, ptr %21, align 8, !tbaa !36
  %23 = getelementptr inbounds %struct.op, ptr %22, i64 0, i32 4
  %24 = load i16, ptr %23, align 8
  %25 = and i16 %24, 511
  %26 = zext i16 %25 to i32
  switch i32 %26, label %171 [
    i32 7, label %27
    i32 5, label %65
    i32 387, label %74
  ]

27:                                               ; preds = %20
  %28 = getelementptr inbounds %struct.svop, ptr %22, i64 0, i32 7
  %29 = load ptr, ptr %28, align 8, !tbaa !65
  %30 = getelementptr inbounds %struct.gv, ptr %29, i64 0, i32 2
  %31 = load i32, ptr %30, align 4, !tbaa !133
  %32 = and i32 %31, 255
  %33 = icmp eq i32 %32, 9
  br i1 %33, label %48, label %34

34:                                               ; preds = %27
  %35 = and i32 %31, 2048
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %44, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %struct.gv, ptr %29, i64 0, i32 3
  %39 = load ptr, ptr %38, align 8, !tbaa !13
  %40 = getelementptr inbounds %struct.sv, ptr %39, i64 0, i32 2
  %41 = load i32, ptr %40, align 4, !tbaa !84
  %42 = and i32 %41, 255
  %43 = icmp eq i32 %42, 13
  br i1 %43, label %138, label %44

44:                                               ; preds = %37, %34
  %45 = and i32 %1, 4
  %46 = icmp eq i32 %45, 0
  %47 = select i1 %46, ptr null, ptr %29
  br label %171

48:                                               ; preds = %27
  %49 = getelementptr inbounds %struct.gv, ptr %29, i64 0, i32 3
  %50 = load ptr, ptr %49, align 8, !tbaa !13
  %51 = getelementptr inbounds %struct.gp, ptr %50, i64 0, i32 3
  %52 = load i32, ptr %51, align 8, !tbaa !260
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %58

54:                                               ; preds = %48
  %55 = getelementptr inbounds %struct.gp, ptr %50, i64 0, i32 2
  %56 = load ptr, ptr %55, align 8, !tbaa !147
  %57 = icmp eq ptr %56, null
  br i1 %57, label %58, label %138

58:                                               ; preds = %48, %54
  %59 = and i32 %1, 1
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %171, label %61

61:                                               ; preds = %58
  %62 = getelementptr inbounds %struct.op, ptr %22, i64 0, i32 6
  %63 = load i8, ptr %62, align 1, !tbaa !33
  %64 = or i8 %63, 32
  store i8 %64, ptr %62, align 1, !tbaa !33
  br label %171

65:                                               ; preds = %20
  %66 = getelementptr inbounds %struct.svop, ptr %22, i64 0, i32 7
  %67 = load ptr, ptr %66, align 8, !tbaa !65
  %68 = getelementptr inbounds %struct.sv, ptr %67, i64 0, i32 2
  %69 = load i32, ptr %68, align 4, !tbaa !84
  %70 = and i32 %69, 2048
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %171, label %72

72:                                               ; preds = %65
  %73 = getelementptr inbounds %struct.sv, ptr %67, i64 0, i32 3
  br label %135

74:                                               ; preds = %20
  %75 = getelementptr inbounds %struct.op, ptr %22, i64 0, i32 3
  %76 = load i64, ptr %75, align 8, !tbaa !34
  %77 = load ptr, ptr @PL_comppad_name, align 8, !tbaa !6
  %78 = getelementptr inbounds %struct.padnamelist, ptr %77, i64 0, i32 1
  %79 = load ptr, ptr %78, align 8, !tbaa !151
  %80 = getelementptr inbounds ptr, ptr %79, i64 %76
  %81 = load ptr, ptr @PL_compcv, align 8, !tbaa !6
  %82 = load ptr, ptr %80, align 8, !tbaa !6
  %83 = getelementptr inbounds %struct.padname, ptr %82, i64 0, i32 8
  %84 = load i8, ptr %83, align 1, !tbaa !153
  %85 = zext i8 %84 to i32
  %86 = and i32 %85, 1
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %113, label %88

88:                                               ; preds = %74
  %89 = load ptr, ptr %81, align 8, !tbaa !10
  br label %90

90:                                               ; preds = %90, %88
  %91 = phi ptr [ %95, %90 ], [ %89, %88 ]
  %92 = phi ptr [ %107, %90 ], [ %82, %88 ]
  %93 = getelementptr inbounds %struct.xpvcv, ptr %91, i64 0, i32 10
  %94 = load ptr, ptr %93, align 8, !tbaa !158
  %95 = load ptr, ptr %94, align 8, !tbaa !10
  %96 = getelementptr inbounds %struct.xpvcv, ptr %95, i64 0, i32 9
  %97 = load ptr, ptr %96, align 8, !tbaa !13
  %98 = getelementptr inbounds %struct.padlist, ptr %97, i64 0, i32 1
  %99 = load ptr, ptr %98, align 8, !tbaa !159
  %100 = load ptr, ptr %99, align 8, !tbaa !6
  %101 = getelementptr inbounds %struct.padnamelist, ptr %100, i64 0, i32 1
  %102 = load ptr, ptr %101, align 8, !tbaa !151
  %103 = getelementptr inbounds %struct.padname, ptr %92, i64 0, i32 3
  %104 = load i32, ptr %103, align 8, !tbaa !157
  %105 = zext i32 %104 to i64
  %106 = getelementptr inbounds ptr, ptr %102, i64 %105
  %107 = load ptr, ptr %106, align 8, !tbaa !6
  %108 = getelementptr inbounds %struct.padname, ptr %107, i64 0, i32 8
  %109 = load i8, ptr %108, align 1, !tbaa !153
  %110 = zext i8 %109 to i32
  %111 = and i32 %110, 1
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %90, !llvm.loop !318

113:                                              ; preds = %90, %74
  %114 = phi i64 [ %76, %74 ], [ %105, %90 ]
  %115 = phi ptr [ %81, %74 ], [ %94, %90 ]
  %116 = phi ptr [ %82, %74 ], [ %107, %90 ]
  %117 = phi i32 [ %85, %74 ], [ %110, %90 ]
  %118 = and i32 %117, 2
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %120, label %124

120:                                              ; preds = %113
  %121 = getelementptr inbounds %struct.padname, ptr %116, i64 0, i32 2
  %122 = load ptr, ptr %121, align 8, !tbaa !13
  %123 = icmp eq ptr %122, null
  br i1 %123, label %124, label %138

124:                                              ; preds = %120, %113
  %125 = load ptr, ptr %115, align 8, !tbaa !10
  %126 = getelementptr inbounds %struct.xpvcv, ptr %125, i64 0, i32 9
  %127 = load ptr, ptr %126, align 8, !tbaa !13
  %128 = getelementptr inbounds %struct.padlist, ptr %127, i64 0, i32 1
  %129 = load ptr, ptr %128, align 8, !tbaa !159
  %130 = getelementptr inbounds ptr, ptr %129, i64 1
  %131 = load ptr, ptr %130, align 8, !tbaa !6
  %132 = getelementptr inbounds %struct.av, ptr %131, i64 0, i32 3
  %133 = load ptr, ptr %132, align 8, !tbaa !13
  %134 = getelementptr inbounds ptr, ptr %133, i64 %114
  br label %135

135:                                              ; preds = %72, %124
  %136 = phi ptr [ %134, %124 ], [ %73, %72 ]
  %137 = load ptr, ptr %136, align 8, !tbaa !13
  br label %138

138:                                              ; preds = %135, %120, %37, %54
  %139 = phi ptr [ %56, %54 ], [ %39, %37 ], [ %122, %120 ], [ %137, %135 ]
  %140 = phi ptr [ %29, %54 ], [ null, %37 ], [ null, %120 ], [ null, %135 ]
  %141 = getelementptr inbounds %struct.sv, ptr %139, i64 0, i32 2
  %142 = load i32, ptr %141, align 4, !tbaa !84
  %143 = and i32 %142, 255
  %144 = icmp eq i32 %143, 13
  br i1 %144, label %145, label %171

145:                                              ; preds = %138
  %146 = and i32 %1, 10
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %171, label %148

148:                                              ; preds = %145
  %149 = load ptr, ptr %139, align 8, !tbaa !10
  %150 = getelementptr inbounds %struct.xpvcv, ptr %149, i64 0, i32 12
  %151 = load i32, ptr %150, align 4, !tbaa !14
  %152 = and i32 %151, 128
  %153 = icmp eq i32 %152, 0
  %154 = icmp eq ptr %140, null
  %155 = or i1 %154, %153
  %156 = and i32 %151, 65536
  %157 = icmp eq i32 %156, 0
  %158 = and i1 %157, %155
  br i1 %158, label %159, label %171

159:                                              ; preds = %148
  %160 = and i32 %1, 2
  %161 = icmp ne i32 %160, 0
  %162 = and i32 %151, 32768
  %163 = icmp eq i32 %162, 0
  %164 = or i1 %161, %163
  br i1 %164, label %165, label %171

165:                                              ; preds = %159
  br i1 %163, label %168, label %166

166:                                              ; preds = %165
  %167 = tail call ptr @Perl_cvgv_from_hek(ptr noundef nonnull %139) #29
  br label %171

168:                                              ; preds = %165
  %169 = getelementptr inbounds %struct.xpvcv, ptr %149, i64 0, i32 7
  %170 = load ptr, ptr %169, align 8, !tbaa !13
  br label %171

171:                                              ; preds = %65, %168, %166, %145, %148, %159, %138, %20, %58, %61, %44, %15, %10, %5
  %172 = phi ptr [ null, %5 ], [ null, %10 ], [ null, %15 ], [ %47, %44 ], [ null, %61 ], [ null, %58 ], [ null, %20 ], [ null, %138 ], [ %140, %148 ], [ %140, %159 ], [ %139, %145 ], [ %167, %166 ], [ %170, %168 ], [ null, %65 ]
  ret ptr %172
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_ck_entersub_args_list(ptr noundef readonly returned %0) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.unop, ptr %0, i64 0, i32 7
  %3 = load ptr, ptr %2, align 8, !tbaa !36
  %4 = getelementptr inbounds %struct.op, ptr %3, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !38
  %6 = icmp eq ptr %5, null
  br i1 %6, label %7, label %12

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.unop, ptr %3, i64 0, i32 7
  %9 = load ptr, ptr %8, align 8, !tbaa !36
  %10 = getelementptr inbounds %struct.op, ptr %9, i64 0, i32 1
  %11 = load ptr, ptr %10, align 8, !tbaa !38
  br label %12

12:                                               ; preds = %1, %7
  %13 = phi ptr [ %5, %1 ], [ %11, %7 ]
  %14 = getelementptr inbounds %struct.op, ptr %13, i64 0, i32 1
  %15 = load ptr, ptr %14, align 8, !tbaa !38
  %16 = icmp eq ptr %15, null
  br i1 %16, label %26, label %17

17:                                               ; preds = %12, %17
  %18 = phi ptr [ %23, %17 ], [ %14, %12 ]
  %19 = phi ptr [ %22, %17 ], [ %13, %12 ]
  %20 = tail call ptr @Perl_list(ptr noundef nonnull %19)
  %21 = tail call ptr @Perl_op_lvalue_flags(ptr noundef nonnull %19, i32 noundef 185, i32 noundef 0)
  %22 = load ptr, ptr %18, align 8, !tbaa !38
  %23 = getelementptr inbounds %struct.op, ptr %22, i64 0, i32 1
  %24 = load ptr, ptr %23, align 8, !tbaa !38
  %25 = icmp eq ptr %24, null
  br i1 %25, label %26, label %17, !llvm.loop !319

26:                                               ; preds = %17, %12
  ret ptr %0
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_ck_entersub_args_proto(ptr noundef returned %0, ptr noundef %1, ptr noundef %2) local_unnamed_addr #4 {
  %4 = alloca i64, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #29
  %5 = getelementptr inbounds %struct.sv, ptr %2, i64 0, i32 2
  %6 = load i32, ptr %5, align 4, !tbaa !84
  %7 = and i32 %6, 255
  %8 = icmp eq i32 %7, 13
  br i1 %8, label %9, label %12

9:                                                ; preds = %3
  %10 = and i32 %6, 1024
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %20, label %23

12:                                               ; preds = %3
  %13 = and i32 %6, 65280
  %14 = icmp ne i32 %13, 0
  %15 = icmp eq i32 %7, 8
  %16 = or i1 %14, %15
  %17 = and i32 %6, 16826623
  %18 = icmp eq i32 %17, 16777226
  %19 = or i1 %18, %16
  br i1 %19, label %23, label %20

20:                                               ; preds = %12, %9
  %21 = zext i32 %6 to i64
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.181, i64 noundef %21) #29
  %22 = load i32, ptr %5, align 4, !tbaa !84
  br label %23

23:                                               ; preds = %20, %12, %9
  %24 = phi i32 [ %22, %20 ], [ %6, %12 ], [ %6, %9 ]
  %25 = and i32 %24, 255
  %26 = icmp eq i32 %25, 13
  br i1 %26, label %27, label %52

27:                                               ; preds = %23
  %28 = and i32 %24, 1024
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %49, label %30

30:                                               ; preds = %27
  %31 = load ptr, ptr %2, align 8, !tbaa !85
  %32 = getelementptr inbounds %struct.xpvcv, ptr %31, i64 0, i32 12
  %33 = load i32, ptr %32, align 4, !tbaa !14
  %34 = and i32 %33, 8192
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %struct.sv, ptr %2, i64 0, i32 3
  %37 = load ptr, ptr %36, align 8, !tbaa !13
  %38 = getelementptr inbounds %struct.xpv, ptr %31, i64 0, i32 2
  %39 = load i64, ptr %38, align 8, !tbaa !86
  br i1 %35, label %49, label %40

40:                                               ; preds = %30
  %41 = getelementptr inbounds i8, ptr %37, i64 %39
  %42 = getelementptr inbounds i8, ptr %41, i64 1
  %43 = getelementptr inbounds %struct.xpv, ptr %31, i64 0, i32 3
  %44 = load i64, ptr %43, align 8, !tbaa !13
  %45 = getelementptr inbounds %struct.xpv, ptr %31, i64 0, i32 2
  %46 = load i64, ptr %45, align 8, !tbaa !86
  %47 = add i64 %44, -2
  %48 = sub i64 %47, %46
  br label %49

49:                                               ; preds = %30, %27, %40
  %50 = phi ptr [ %42, %40 ], [ null, %27 ], [ %37, %30 ]
  %51 = phi i64 [ %48, %40 ], [ 0, %27 ], [ %39, %30 ]
  store i64 %51, ptr %4, align 8, !tbaa !88
  br label %64

52:                                               ; preds = %23
  %53 = and i32 %24, 2098176
  %54 = icmp eq i32 %53, 1024
  br i1 %54, label %55, label %61

55:                                               ; preds = %52
  %56 = load ptr, ptr %2, align 8, !tbaa !85
  %57 = getelementptr inbounds %struct.xpv, ptr %56, i64 0, i32 2
  %58 = load i64, ptr %57, align 8, !tbaa !86
  store i64 %58, ptr %4, align 8, !tbaa !88
  %59 = getelementptr inbounds %struct.sv, ptr %2, i64 0, i32 3
  %60 = load ptr, ptr %59, align 8, !tbaa !13
  br label %64

61:                                               ; preds = %52
  %62 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %2, ptr noundef nonnull %4, i32 noundef 2) #29
  %63 = load i64, ptr %4, align 8, !tbaa !88
  br label %64

64:                                               ; preds = %55, %61, %49
  %65 = phi i64 [ %51, %49 ], [ %58, %55 ], [ %63, %61 ]
  %66 = phi ptr [ %50, %49 ], [ %60, %55 ], [ %62, %61 ]
  %67 = call ptr @Perl_newSVpvn_flags(ptr noundef %66, i64 noundef %65, i32 noundef 524288) #29
  %68 = getelementptr inbounds %struct.sv, ptr %67, i64 0, i32 3
  %69 = load ptr, ptr %68, align 8, !tbaa !13
  %70 = load i64, ptr %4, align 8, !tbaa !88
  %71 = add i64 %70, -1
  store i64 %71, ptr %4, align 8, !tbaa !88
  %72 = icmp eq i64 %70, 0
  br i1 %72, label %92, label %73

73:                                               ; preds = %64, %86
  %74 = phi i64 [ %90, %86 ], [ %71, %64 ]
  %75 = phi ptr [ %88, %86 ], [ %69, %64 ]
  %76 = phi ptr [ %89, %86 ], [ %66, %64 ]
  %77 = load i8, ptr %76, align 1, !tbaa !13
  %78 = zext i8 %77 to i64
  %79 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %78
  %80 = load i32, ptr %79, align 4, !tbaa !52
  %81 = and i32 %80, 17408
  %82 = icmp eq i32 %81, 17408
  br i1 %82, label %86, label %83

83:                                               ; preds = %73
  %84 = getelementptr inbounds i8, ptr %75, i64 1
  store i8 %77, ptr %75, align 1, !tbaa !13
  %85 = load i64, ptr %4, align 8, !tbaa !88
  br label %86

86:                                               ; preds = %83, %73
  %87 = phi i64 [ %74, %73 ], [ %85, %83 ]
  %88 = phi ptr [ %75, %73 ], [ %84, %83 ]
  %89 = getelementptr inbounds i8, ptr %76, i64 1
  %90 = add i64 %87, -1
  store i64 %90, ptr %4, align 8, !tbaa !88
  %91 = icmp eq i64 %87, 0
  br i1 %91, label %92, label %73, !llvm.loop !291

92:                                               ; preds = %86, %64
  %93 = phi ptr [ %69, %64 ], [ %88, %86 ]
  store i8 0, ptr %93, align 1, !tbaa !13
  %94 = load ptr, ptr %68, align 8, !tbaa !13
  %95 = ptrtoint ptr %93 to i64
  %96 = ptrtoint ptr %94 to i64
  %97 = sub i64 %95, %96
  store i64 %97, ptr %4, align 8, !tbaa !88
  %98 = getelementptr inbounds i8, ptr %94, i64 %97
  %99 = getelementptr inbounds %struct.unop, ptr %0, i64 0, i32 7
  %100 = load ptr, ptr %99, align 8, !tbaa !36
  %101 = getelementptr inbounds %struct.op, ptr %100, i64 0, i32 1
  %102 = load ptr, ptr %101, align 8, !tbaa !38
  %103 = icmp eq ptr %102, null
  br i1 %103, label %104, label %109

104:                                              ; preds = %92
  %105 = getelementptr inbounds %struct.unop, ptr %100, i64 0, i32 7
  %106 = load ptr, ptr %105, align 8, !tbaa !36
  %107 = getelementptr inbounds %struct.op, ptr %106, i64 0, i32 1
  %108 = load ptr, ptr %107, align 8, !tbaa !38
  br label %109

109:                                              ; preds = %92, %104
  %110 = phi ptr [ %102, %92 ], [ %108, %104 ]
  %111 = phi ptr [ %0, %92 ], [ %100, %104 ]
  %112 = phi ptr [ %100, %92 ], [ %106, %104 ]
  br label %113

113:                                              ; preds = %113, %109
  %114 = phi ptr [ %110, %109 ], [ %116, %113 ]
  %115 = getelementptr inbounds %struct.op, ptr %114, i64 0, i32 1
  %116 = load ptr, ptr %115, align 8, !tbaa !38
  %117 = icmp eq ptr %116, null
  br i1 %117, label %118, label %113, !llvm.loop !320

118:                                              ; preds = %113
  %119 = icmp eq ptr %110, %114
  br i1 %119, label %465, label %120

120:                                              ; preds = %118, %456
  %121 = phi ptr [ %457, %456 ], [ %94, %118 ]
  %122 = phi ptr [ %458, %456 ], [ %110, %118 ]
  %123 = phi ptr [ %459, %456 ], [ %112, %118 ]
  %124 = phi ptr [ %460, %456 ], [ null, %118 ]
  %125 = phi i32 [ %461, %456 ], [ 0, %118 ]
  %126 = phi i32 [ %462, %456 ], [ 0, %118 ]
  %127 = phi i32 [ %463, %456 ], [ 0, %118 ]
  %128 = icmp ult ptr %121, %98
  br i1 %128, label %132, label %129

129:                                              ; preds = %120
  %130 = call ptr @Perl_cv_name(ptr noundef %1, ptr noundef null, i32 noundef 0) #29
  %131 = call ptr (ptr, ...) @Perl_form(ptr noundef nonnull @.str.182, ptr noundef %130) #29
  br label %483

132:                                              ; preds = %120
  %133 = load i8, ptr %121, align 1, !tbaa !13
  %134 = sext i8 %133 to i32
  switch i32 %134, label %440 [
    i32 59, label %135
    i32 95, label %137
    i32 36, label %145
    i32 37, label %149
    i32 64, label %149
    i32 38, label %152
    i32 42, label %188
    i32 43, label %200
    i32 32, label %433
    i32 92, label %208
  ]

135:                                              ; preds = %132
  %136 = getelementptr inbounds i8, ptr %121, i64 1
  br label %456, !llvm.loop !321

137:                                              ; preds = %132
  %138 = getelementptr inbounds i8, ptr %121, i64 1
  %139 = load i8, ptr %138, align 1, !tbaa !13
  %140 = icmp eq i8 %139, 0
  br i1 %140, label %145, label %141

141:                                              ; preds = %137
  %142 = sext i8 %139 to i32
  %143 = call ptr @memchr(ptr nonnull dereferenceable(1) @.str.183, i32 %142, i64 4)
  %144 = icmp eq ptr %143, null
  br i1 %144, label %440, label %145

145:                                              ; preds = %137, %141, %132
  %146 = getelementptr inbounds i8, ptr %121, i64 1
  %147 = add nsw i32 %126, 1
  %148 = call ptr @Perl_scalar(ptr noundef %122)
  br label %447

149:                                              ; preds = %132, %132
  %150 = call ptr @Perl_list(ptr noundef %122)
  %151 = add nsw i32 %126, 1
  br label %447

152:                                              ; preds = %132
  %153 = getelementptr inbounds i8, ptr %121, i64 1
  %154 = add nsw i32 %126, 1
  %155 = getelementptr inbounds %struct.op, ptr %122, i64 0, i32 4
  %156 = load i16, ptr %155, align 8
  %157 = and i16 %156, 511
  switch i16 %157, label %168 [
    i16 44, label %447
    i16 21, label %158
  ]

158:                                              ; preds = %152
  %159 = getelementptr inbounds %struct.unop, ptr %122, i64 0, i32 7
  %160 = load ptr, ptr %159, align 8, !tbaa !36
  %161 = getelementptr inbounds %struct.unop, ptr %160, i64 0, i32 7
  %162 = load ptr, ptr %161, align 8, !tbaa !36
  %163 = getelementptr inbounds %struct.op, ptr %162, i64 0, i32 4
  %164 = load i16, ptr %163, align 8
  %165 = and i16 %164, 511
  %166 = add nsw i16 %165, -17
  %167 = icmp ult i16 %166, 2
  br i1 %167, label %447, label %168

168:                                              ; preds = %158, %152
  %169 = icmp eq i32 %126, 0
  %170 = select i1 %169, ptr @.str.184, ptr @.str.185
  %171 = call ptr @Perl_cv_name(ptr noundef %1, ptr noundef null, i32 noundef 0) #29
  %172 = load i16, ptr %155, align 8
  %173 = and i16 %172, 511
  %174 = icmp eq i16 %173, 380
  br i1 %174, label %175, label %177

175:                                              ; preds = %168
  %176 = call ptr @Perl_custom_op_get_field(ptr noundef nonnull %122, i32 noundef 2)
  br label %181

177:                                              ; preds = %168
  %178 = zext i16 %173 to i64
  %179 = getelementptr inbounds [0 x ptr], ptr @PL_op_desc, i64 0, i64 %178
  %180 = load ptr, ptr %179, align 8, !tbaa !6
  br label %181

181:                                              ; preds = %175, %177
  %182 = phi ptr [ %176, %175 ], [ %180, %177 ]
  %183 = call ptr (ptr, ...) @Perl_form(ptr noundef nonnull @.str.192, i32 noundef %154, ptr noundef %171, ptr noundef nonnull %170, ptr noundef %182) #29
  %184 = getelementptr inbounds %struct.sv, ptr %171, i64 0, i32 2
  %185 = load i32, ptr %184, align 4, !tbaa !84
  %186 = and i32 %185, 536870912
  %187 = call i32 @Perl_yyerror_pv(ptr noundef %183, i32 noundef %186) #29
  br label %447

188:                                              ; preds = %132
  %189 = getelementptr inbounds i8, ptr %121, i64 1
  %190 = add nsw i32 %126, 1
  %191 = getelementptr inbounds %struct.op, ptr %122, i64 0, i32 4
  %192 = load i16, ptr %191, align 8
  %193 = and i16 %192, 511
  switch i16 %193, label %198 [
    i16 14, label %410
    i16 5, label %194
  ]

194:                                              ; preds = %188
  %195 = getelementptr inbounds %struct.op, ptr %122, i64 0, i32 6
  %196 = load i8, ptr %195, align 1, !tbaa !33
  %197 = and i8 %196, -9
  store i8 %197, ptr %195, align 1, !tbaa !33
  br label %198

198:                                              ; preds = %188, %194
  %199 = call ptr @Perl_scalar(ptr noundef nonnull %122)
  br label %447

200:                                              ; preds = %132
  %201 = getelementptr inbounds i8, ptr %121, i64 1
  %202 = add nsw i32 %126, 1
  %203 = getelementptr inbounds %struct.op, ptr %122, i64 0, i32 4
  %204 = load i16, ptr %203, align 8
  %205 = and i16 %204, 511
  switch i16 %205, label %206 [
    i16 135, label %410
    i16 10, label %410
    i16 149, label %410
    i16 11, label %410
  ]

206:                                              ; preds = %200
  %207 = call ptr @Perl_scalar(ptr noundef nonnull %122)
  br label %447

208:                                              ; preds = %132
  %209 = getelementptr inbounds i8, ptr %121, i64 1
  %210 = add nsw i32 %126, 1
  br label %211

211:                                              ; preds = %208, %425
  %212 = phi ptr [ %426, %425 ], [ %122, %208 ]
  %213 = phi i32 [ %427, %425 ], [ %210, %208 ]
  %214 = phi i32 [ %428, %425 ], [ %125, %208 ]
  %215 = phi ptr [ %429, %425 ], [ %124, %208 ]
  %216 = phi ptr [ %430, %425 ], [ %122, %208 ]
  %217 = phi ptr [ %431, %425 ], [ %209, %208 ]
  %218 = getelementptr inbounds i8, ptr %217, i64 1
  %219 = load i8, ptr %217, align 1, !tbaa !13
  %220 = sext i8 %219 to i32
  switch i32 %220, label %440 [
    i32 91, label %221
    i32 93, label %232
    i32 42, label %272
    i32 38, label %302
    i32 36, label %335
    i32 64, label %349
    i32 37, label %376
  ]

221:                                              ; preds = %211
  %222 = icmp eq i32 %214, 0
  br i1 %222, label %223, label %435

223:                                              ; preds = %221
  %224 = call ptr @strchr(ptr noundef nonnull dereferenceable(1) %218, i32 noundef 93) #30
  %225 = icmp eq ptr %224, null
  br i1 %225, label %440, label %226

226:                                              ; preds = %223
  %227 = icmp eq ptr %224, %218
  br i1 %227, label %440, label %228

228:                                              ; preds = %226
  %229 = load i8, ptr %218, align 1, !tbaa !13
  %230 = getelementptr inbounds i8, ptr %217, i64 2
  %231 = sext i8 %229 to i32
  switch i32 %231, label %440 [
    i32 91, label %435
    i32 93, label %234
    i32 42, label %277
    i32 38, label %302
    i32 36, label %335
    i32 64, label %349
    i32 37, label %376
  ]

232:                                              ; preds = %211
  %233 = icmp eq i32 %214, 0
  br i1 %233, label %440, label %234

234:                                              ; preds = %228, %232
  %235 = phi ptr [ %218, %232 ], [ %230, %228 ]
  %236 = phi ptr [ %215, %232 ], [ %224, %228 ]
  br label %237

237:                                              ; preds = %241, %234
  %238 = phi ptr [ %235, %234 ], [ %239, %241 ]
  %239 = getelementptr inbounds i8, ptr %238, i64 -1
  %240 = load i8, ptr %239, align 1, !tbaa !13
  switch i8 %240, label %241 [
    i8 91, label %246
    i8 36, label %242
  ]

241:                                              ; preds = %237, %242
  br label %237, !llvm.loop !322

242:                                              ; preds = %237
  %243 = call ptr @Perl_scalar(ptr noundef %212)
  %244 = call ptr @Perl_op_lvalue_flags(ptr noundef %212, i32 noundef 234, i32 noundef 1)
  %245 = icmp eq ptr %244, null
  br i1 %245, label %241, label %270

246:                                              ; preds = %237
  %247 = ptrtoint ptr %235 to i64
  %248 = ptrtoint ptr %239 to i64
  %249 = sub i64 %247, %248
  %250 = trunc i64 %249 to i32
  %251 = call ptr (ptr, ...) @Perl_form(ptr noundef nonnull @.str.186, i32 noundef %250, ptr noundef nonnull %239) #29
  %252 = call ptr @Perl_cv_name(ptr noundef %1, ptr noundef null, i32 noundef 0) #29
  %253 = getelementptr inbounds %struct.op, ptr %212, i64 0, i32 4
  %254 = load i16, ptr %253, align 8
  %255 = and i16 %254, 511
  %256 = icmp eq i16 %255, 380
  br i1 %256, label %257, label %259

257:                                              ; preds = %246
  %258 = call ptr @Perl_custom_op_get_field(ptr noundef nonnull %212, i32 noundef 2)
  br label %263

259:                                              ; preds = %246
  %260 = zext i16 %255 to i64
  %261 = getelementptr inbounds [0 x ptr], ptr @PL_op_desc, i64 0, i64 %260
  %262 = load ptr, ptr %261, align 8, !tbaa !6
  br label %263

263:                                              ; preds = %257, %259
  %264 = phi ptr [ %258, %257 ], [ %262, %259 ]
  %265 = call ptr (ptr, ...) @Perl_form(ptr noundef nonnull @.str.192, i32 noundef %213, ptr noundef %252, ptr noundef %251, ptr noundef %264) #29
  %266 = getelementptr inbounds %struct.sv, ptr %252, i64 0, i32 2
  %267 = load i32, ptr %266, align 4, !tbaa !84
  %268 = and i32 %267, 536870912
  %269 = call i32 @Perl_yyerror_pv(ptr noundef %265, i32 noundef %268) #29
  br label %270

270:                                              ; preds = %242, %263
  %271 = phi i32 [ 0, %263 ], [ 9, %242 ]
  switch i32 %271, label %490 [
    i32 0, label %425
    i32 9, label %410
  ]

272:                                              ; preds = %211
  %273 = getelementptr inbounds %struct.op, ptr %212, i64 0, i32 4
  %274 = load i16, ptr %273, align 8
  %275 = and i16 %274, 511
  %276 = icmp eq i16 %275, 14
  br i1 %276, label %410, label %282

277:                                              ; preds = %228
  %278 = getelementptr inbounds %struct.op, ptr %212, i64 0, i32 4
  %279 = load i16, ptr %278, align 8
  %280 = and i16 %279, 511
  %281 = icmp eq i16 %280, 14
  br i1 %281, label %410, label %425

282:                                              ; preds = %272
  %283 = icmp eq i32 %214, 0
  br i1 %283, label %284, label %425

284:                                              ; preds = %282
  %285 = call ptr @Perl_cv_name(ptr noundef %1, ptr noundef null, i32 noundef 0) #29
  %286 = load i16, ptr %273, align 8
  %287 = and i16 %286, 511
  %288 = icmp eq i16 %287, 380
  br i1 %288, label %289, label %291

289:                                              ; preds = %284
  %290 = call ptr @Perl_custom_op_get_field(ptr noundef nonnull %212, i32 noundef 2)
  br label %295

291:                                              ; preds = %284
  %292 = zext i16 %287 to i64
  %293 = getelementptr inbounds [0 x ptr], ptr @PL_op_desc, i64 0, i64 %292
  %294 = load ptr, ptr %293, align 8, !tbaa !6
  br label %295

295:                                              ; preds = %289, %291
  %296 = phi ptr [ %290, %289 ], [ %294, %291 ]
  %297 = call ptr (ptr, ...) @Perl_form(ptr noundef nonnull @.str.192, i32 noundef %213, ptr noundef %285, ptr noundef nonnull @.str.187, ptr noundef %296) #29
  %298 = getelementptr inbounds %struct.sv, ptr %285, i64 0, i32 2
  %299 = load i32, ptr %298, align 4, !tbaa !84
  %300 = and i32 %299, 536870912
  %301 = call i32 @Perl_yyerror_pv(ptr noundef %297, i32 noundef %300) #29
  br label %425

302:                                              ; preds = %228, %211
  %303 = phi i32 [ %214, %211 ], [ 1, %228 ]
  %304 = phi ptr [ %215, %211 ], [ %224, %228 ]
  %305 = phi ptr [ %218, %211 ], [ %230, %228 ]
  %306 = getelementptr inbounds %struct.op, ptr %212, i64 0, i32 4
  %307 = load i16, ptr %306, align 8
  %308 = and i16 %307, 511
  %309 = icmp eq i16 %308, 185
  br i1 %309, label %310, label %315

310:                                              ; preds = %302
  %311 = getelementptr inbounds %struct.op, ptr %212, i64 0, i32 5
  %312 = load i8, ptr %311, align 2, !tbaa !35
  %313 = and i8 %312, 64
  %314 = icmp eq i8 %313, 0
  br i1 %314, label %410, label %315

315:                                              ; preds = %310, %302
  %316 = icmp eq i32 %303, 0
  br i1 %316, label %317, label %425

317:                                              ; preds = %315
  %318 = call ptr @Perl_cv_name(ptr noundef %1, ptr noundef null, i32 noundef 0) #29
  %319 = load i16, ptr %306, align 8
  %320 = and i16 %319, 511
  %321 = icmp eq i16 %320, 380
  br i1 %321, label %322, label %324

322:                                              ; preds = %317
  %323 = call ptr @Perl_custom_op_get_field(ptr noundef nonnull %212, i32 noundef 2)
  br label %328

324:                                              ; preds = %317
  %325 = zext i16 %320 to i64
  %326 = getelementptr inbounds [0 x ptr], ptr @PL_op_desc, i64 0, i64 %325
  %327 = load ptr, ptr %326, align 8, !tbaa !6
  br label %328

328:                                              ; preds = %322, %324
  %329 = phi ptr [ %323, %322 ], [ %327, %324 ]
  %330 = call ptr (ptr, ...) @Perl_form(ptr noundef nonnull @.str.192, i32 noundef %213, ptr noundef %318, ptr noundef nonnull @.str.188, ptr noundef %329) #29
  %331 = getelementptr inbounds %struct.sv, ptr %318, i64 0, i32 2
  %332 = load i32, ptr %331, align 4, !tbaa !84
  %333 = and i32 %332, 536870912
  %334 = call i32 @Perl_yyerror_pv(ptr noundef %330, i32 noundef %333) #29
  br label %425

335:                                              ; preds = %228, %211
  %336 = phi i32 [ %214, %211 ], [ 1, %228 ]
  %337 = phi ptr [ %215, %211 ], [ %224, %228 ]
  %338 = phi ptr [ %218, %211 ], [ %230, %228 ]
  %339 = getelementptr inbounds %struct.op, ptr %212, i64 0, i32 4
  %340 = load i16, ptr %339, align 8
  %341 = and i16 %340, 511
  switch i16 %341, label %342 [
    i16 15, label %410
    i16 9, label %410
    i16 150, label %410
    i16 138, label %410
  ]

342:                                              ; preds = %335
  %343 = icmp eq i32 %336, 0
  br i1 %343, label %344, label %425

344:                                              ; preds = %342
  %345 = call ptr @Perl_scalar(ptr noundef nonnull %212)
  %346 = call ptr @Perl_op_lvalue_flags(ptr noundef nonnull %212, i32 noundef 234, i32 noundef 1)
  %347 = icmp eq ptr %346, null
  br i1 %347, label %348, label %410

348:                                              ; preds = %344
  call fastcc void @S_bad_type_gv(i32 noundef %213, ptr noundef %1, ptr noundef nonnull %212, ptr noundef nonnull @.str.189)
  br label %425

349:                                              ; preds = %228, %211
  %350 = phi i32 [ %214, %211 ], [ 1, %228 ]
  %351 = phi ptr [ %215, %211 ], [ %224, %228 ]
  %352 = phi ptr [ %218, %211 ], [ %230, %228 ]
  %353 = getelementptr inbounds %struct.op, ptr %212, i64 0, i32 4
  %354 = load i16, ptr %353, align 8
  %355 = and i16 %354, 511
  switch i16 %355, label %356 [
    i16 135, label %403
    i16 10, label %403
  ]

356:                                              ; preds = %349
  %357 = icmp eq i32 %350, 0
  br i1 %357, label %358, label %425

358:                                              ; preds = %356
  %359 = call ptr @Perl_cv_name(ptr noundef %1, ptr noundef null, i32 noundef 0) #29
  %360 = load i16, ptr %353, align 8
  %361 = and i16 %360, 511
  %362 = icmp eq i16 %361, 380
  br i1 %362, label %363, label %365

363:                                              ; preds = %358
  %364 = call ptr @Perl_custom_op_get_field(ptr noundef nonnull %212, i32 noundef 2)
  br label %369

365:                                              ; preds = %358
  %366 = zext i16 %361 to i64
  %367 = getelementptr inbounds [0 x ptr], ptr @PL_op_desc, i64 0, i64 %366
  %368 = load ptr, ptr %367, align 8, !tbaa !6
  br label %369

369:                                              ; preds = %363, %365
  %370 = phi ptr [ %364, %363 ], [ %368, %365 ]
  %371 = call ptr (ptr, ...) @Perl_form(ptr noundef nonnull @.str.192, i32 noundef %213, ptr noundef %359, ptr noundef nonnull @.str.150, ptr noundef %370) #29
  %372 = getelementptr inbounds %struct.sv, ptr %359, i64 0, i32 2
  %373 = load i32, ptr %372, align 4, !tbaa !84
  %374 = and i32 %373, 536870912
  %375 = call i32 @Perl_yyerror_pv(ptr noundef %371, i32 noundef %374) #29
  br label %425

376:                                              ; preds = %228, %211
  %377 = phi i32 [ %214, %211 ], [ 1, %228 ]
  %378 = phi ptr [ %215, %211 ], [ %224, %228 ]
  %379 = phi ptr [ %218, %211 ], [ %230, %228 ]
  %380 = getelementptr inbounds %struct.op, ptr %212, i64 0, i32 4
  %381 = load i16, ptr %380, align 8
  %382 = and i16 %381, 511
  switch i16 %382, label %383 [
    i16 149, label %403
    i16 11, label %403
  ]

383:                                              ; preds = %376
  %384 = icmp eq i32 %377, 0
  br i1 %384, label %385, label %425

385:                                              ; preds = %383
  %386 = call ptr @Perl_cv_name(ptr noundef %1, ptr noundef null, i32 noundef 0) #29
  %387 = load i16, ptr %380, align 8
  %388 = and i16 %387, 511
  %389 = icmp eq i16 %388, 380
  br i1 %389, label %390, label %392

390:                                              ; preds = %385
  %391 = call ptr @Perl_custom_op_get_field(ptr noundef nonnull %212, i32 noundef 2)
  br label %396

392:                                              ; preds = %385
  %393 = zext i16 %388 to i64
  %394 = getelementptr inbounds [0 x ptr], ptr @PL_op_desc, i64 0, i64 %393
  %395 = load ptr, ptr %394, align 8, !tbaa !6
  br label %396

396:                                              ; preds = %390, %392
  %397 = phi ptr [ %391, %390 ], [ %395, %392 ]
  %398 = call ptr (ptr, ...) @Perl_form(ptr noundef nonnull @.str.192, i32 noundef %213, ptr noundef %386, ptr noundef nonnull @.str.152, ptr noundef %397) #29
  %399 = getelementptr inbounds %struct.sv, ptr %386, i64 0, i32 2
  %400 = load i32, ptr %399, align 4, !tbaa !84
  %401 = and i32 %400, 536870912
  %402 = call i32 @Perl_yyerror_pv(ptr noundef %398, i32 noundef %401) #29
  br label %425

403:                                              ; preds = %376, %376, %349, %349
  %404 = phi i32 [ %350, %349 ], [ %350, %349 ], [ %377, %376 ], [ %377, %376 ]
  %405 = phi ptr [ %351, %349 ], [ %351, %349 ], [ %378, %376 ], [ %378, %376 ]
  %406 = phi ptr [ %352, %349 ], [ %352, %349 ], [ %379, %376 ], [ %379, %376 ]
  %407 = getelementptr inbounds %struct.op, ptr %212, i64 0, i32 5
  %408 = load i8, ptr %407, align 2, !tbaa !35
  %409 = and i8 %408, -9
  store i8 %409, ptr %407, align 2, !tbaa !35
  br label %410

410:                                              ; preds = %403, %335, %335, %335, %335, %200, %200, %200, %200, %270, %277, %188, %344, %310, %272
  %411 = phi ptr [ %212, %344 ], [ %212, %310 ], [ %212, %272 ], [ %212, %270 ], [ %122, %188 ], [ %212, %277 ], [ %122, %200 ], [ %122, %200 ], [ %122, %200 ], [ %122, %200 ], [ %212, %335 ], [ %212, %335 ], [ %212, %335 ], [ %212, %335 ], [ %212, %403 ]
  %412 = phi i32 [ %213, %344 ], [ %213, %310 ], [ %213, %272 ], [ %213, %270 ], [ %190, %188 ], [ %213, %277 ], [ %202, %200 ], [ %202, %200 ], [ %202, %200 ], [ %202, %200 ], [ %213, %335 ], [ %213, %335 ], [ %213, %335 ], [ %213, %335 ], [ %213, %403 ]
  %413 = phi i32 [ 0, %344 ], [ %303, %310 ], [ %214, %272 ], [ 0, %270 ], [ %125, %188 ], [ 1, %277 ], [ %125, %200 ], [ %125, %200 ], [ %125, %200 ], [ %125, %200 ], [ %336, %335 ], [ %336, %335 ], [ %336, %335 ], [ %336, %335 ], [ %404, %403 ]
  %414 = phi ptr [ %337, %344 ], [ %304, %310 ], [ %215, %272 ], [ %236, %270 ], [ %124, %188 ], [ %224, %277 ], [ %124, %200 ], [ %124, %200 ], [ %124, %200 ], [ %124, %200 ], [ %337, %335 ], [ %337, %335 ], [ %337, %335 ], [ %337, %335 ], [ %405, %403 ]
  %415 = phi ptr [ %338, %344 ], [ %305, %310 ], [ %218, %272 ], [ %235, %270 ], [ %189, %188 ], [ %230, %277 ], [ %201, %200 ], [ %201, %200 ], [ %201, %200 ], [ %201, %200 ], [ %338, %335 ], [ %338, %335 ], [ %338, %335 ], [ %338, %335 ], [ %406, %403 ]
  %416 = call ptr @Perl_op_sibling_splice(ptr noundef %111, ptr noundef %123, i32 noundef 1, ptr noundef null)
  %417 = call ptr @Perl_newUNOP(i32 noundef 20, i32 noundef 0, ptr noundef %416)
  %418 = call ptr @Perl_op_sibling_splice(ptr noundef %111, ptr noundef %123, i32 noundef 0, ptr noundef %417)
  %419 = icmp ne i32 %413, 0
  %420 = icmp ne ptr %414, null
  %421 = select i1 %419, i1 %420, i1 false
  %422 = getelementptr inbounds i8, ptr %414, i64 1
  %423 = select i1 %421, i32 0, i32 %413
  %424 = select i1 %421, ptr %422, ptr %415
  br label %425

425:                                              ; preds = %383, %396, %356, %369, %342, %348, %315, %328, %282, %295, %277, %410, %270
  %426 = phi ptr [ %212, %270 ], [ %411, %410 ], [ %212, %277 ], [ %212, %295 ], [ %212, %282 ], [ %212, %328 ], [ %212, %315 ], [ %212, %348 ], [ %212, %342 ], [ %212, %369 ], [ %212, %356 ], [ %212, %396 ], [ %212, %383 ]
  %427 = phi i32 [ %213, %270 ], [ %412, %410 ], [ %213, %277 ], [ %213, %295 ], [ %213, %282 ], [ %213, %328 ], [ %213, %315 ], [ %213, %348 ], [ %213, %342 ], [ %213, %369 ], [ %213, %356 ], [ %213, %396 ], [ %213, %383 ]
  %428 = phi i32 [ %271, %270 ], [ %423, %410 ], [ 1, %277 ], [ 0, %295 ], [ %214, %282 ], [ %303, %328 ], [ %303, %315 ], [ %336, %348 ], [ %336, %342 ], [ %350, %369 ], [ %350, %356 ], [ %377, %396 ], [ %377, %383 ]
  %429 = phi ptr [ %236, %270 ], [ %414, %410 ], [ %224, %277 ], [ %215, %295 ], [ %215, %282 ], [ %304, %328 ], [ %304, %315 ], [ %337, %348 ], [ %337, %342 ], [ %351, %369 ], [ %351, %356 ], [ %378, %396 ], [ %378, %383 ]
  %430 = phi ptr [ %216, %270 ], [ %417, %410 ], [ %216, %277 ], [ %216, %295 ], [ %216, %282 ], [ %216, %328 ], [ %216, %315 ], [ %216, %348 ], [ %216, %342 ], [ %216, %369 ], [ %216, %356 ], [ %216, %396 ], [ %216, %383 ]
  %431 = phi ptr [ %235, %270 ], [ %424, %410 ], [ %230, %277 ], [ %218, %295 ], [ %218, %282 ], [ %305, %328 ], [ %305, %315 ], [ %338, %348 ], [ %338, %342 ], [ %352, %369 ], [ %352, %356 ], [ %379, %396 ], [ %379, %383 ]
  %432 = icmp eq i32 %428, 0
  br i1 %432, label %447, label %211

433:                                              ; preds = %132
  %434 = getelementptr inbounds i8, ptr %121, i64 1
  br label %456, !llvm.loop !321

435:                                              ; preds = %228, %221
  %436 = phi i32 [ %214, %221 ], [ 1, %228 ]
  %437 = phi ptr [ %215, %221 ], [ %224, %228 ]
  %438 = phi ptr [ %218, %221 ], [ %230, %228 ]
  %439 = add nsw i32 %436, 1
  br label %440

440:                                              ; preds = %211, %223, %226, %228, %435, %132, %232, %141
  %441 = phi i32 [ %126, %132 ], [ %213, %232 ], [ %126, %141 ], [ %213, %435 ], [ %213, %228 ], [ %213, %226 ], [ %213, %223 ], [ %213, %211 ]
  %442 = phi i32 [ %125, %132 ], [ 0, %232 ], [ %125, %141 ], [ %439, %435 ], [ 1, %228 ], [ 1, %226 ], [ 1, %223 ], [ %214, %211 ]
  %443 = phi ptr [ %124, %132 ], [ %215, %232 ], [ %124, %141 ], [ %437, %435 ], [ %224, %228 ], [ %218, %226 ], [ null, %223 ], [ %215, %211 ]
  %444 = phi ptr [ %122, %132 ], [ %216, %232 ], [ %122, %141 ], [ %216, %435 ], [ %216, %228 ], [ %216, %226 ], [ %216, %223 ], [ %216, %211 ]
  %445 = phi ptr [ %121, %132 ], [ %218, %232 ], [ %121, %141 ], [ %438, %435 ], [ %230, %228 ], [ %218, %226 ], [ %218, %223 ], [ %218, %211 ]
  %446 = call ptr @Perl_cv_name(ptr noundef %1, ptr noundef null, i32 noundef 0) #29
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.190, ptr noundef %446, ptr noundef %2) #29
  br label %447

447:                                              ; preds = %158, %152, %425, %181, %440, %206, %198, %149, %145
  %448 = phi i32 [ %441, %440 ], [ %427, %425 ], [ %202, %206 ], [ %190, %198 ], [ %154, %181 ], [ %154, %152 ], [ %151, %149 ], [ %147, %145 ], [ %154, %158 ]
  %449 = phi i32 [ %442, %440 ], [ 0, %425 ], [ %125, %206 ], [ %125, %198 ], [ %125, %181 ], [ %125, %152 ], [ %125, %149 ], [ %125, %145 ], [ %125, %158 ]
  %450 = phi ptr [ %443, %440 ], [ %429, %425 ], [ %124, %206 ], [ %124, %198 ], [ %124, %181 ], [ %124, %152 ], [ %124, %149 ], [ %124, %145 ], [ %124, %158 ]
  %451 = phi ptr [ %444, %440 ], [ %430, %425 ], [ %122, %206 ], [ %122, %198 ], [ %122, %181 ], [ %122, %152 ], [ %122, %149 ], [ %122, %145 ], [ %122, %158 ]
  %452 = phi ptr [ %445, %440 ], [ %431, %425 ], [ %201, %206 ], [ %189, %198 ], [ %153, %181 ], [ %153, %152 ], [ %121, %149 ], [ %146, %145 ], [ %153, %158 ]
  %453 = call ptr @Perl_op_lvalue_flags(ptr noundef %451, i32 noundef 185, i32 noundef 0)
  %454 = getelementptr inbounds %struct.op, ptr %451, i64 0, i32 1
  %455 = load ptr, ptr %454, align 8, !tbaa !38
  br label %456

456:                                              ; preds = %135, %433, %447
  %457 = phi ptr [ %136, %135 ], [ %434, %433 ], [ %452, %447 ]
  %458 = phi ptr [ %122, %135 ], [ %122, %433 ], [ %455, %447 ]
  %459 = phi ptr [ %123, %135 ], [ %123, %433 ], [ %451, %447 ]
  %460 = phi ptr [ %124, %135 ], [ %124, %433 ], [ %450, %447 ]
  %461 = phi i32 [ %125, %135 ], [ %125, %433 ], [ %449, %447 ]
  %462 = phi i32 [ %126, %135 ], [ %126, %433 ], [ %448, %447 ]
  %463 = phi i32 [ 1, %135 ], [ %127, %433 ], [ %127, %447 ]
  %464 = icmp eq ptr %458, %114
  br i1 %464, label %465, label %120, !llvm.loop !321

465:                                              ; preds = %456, %118
  %466 = phi i32 [ 0, %118 ], [ %463, %456 ]
  %467 = phi ptr [ %112, %118 ], [ %459, %456 ]
  %468 = phi ptr [ %94, %118 ], [ %457, %456 ]
  %469 = load i8, ptr %468, align 1, !tbaa !13
  %470 = icmp eq i8 %469, 95
  br i1 %470, label %471, label %474

471:                                              ; preds = %465
  %472 = call ptr @Perl_newDEFSVOP()
  %473 = call ptr @Perl_op_sibling_splice(ptr noundef %111, ptr noundef %467, i32 noundef 0, ptr noundef %472)
  br label %474

474:                                              ; preds = %471, %465
  %475 = icmp eq i32 %466, 0
  %476 = icmp ugt ptr %98, %468
  %477 = select i1 %475, i1 %476, i1 false
  br i1 %477, label %478, label %490

478:                                              ; preds = %474
  %479 = load i8, ptr %468, align 1, !tbaa !13
  switch i8 %479, label %480 [
    i8 64, label %490
    i8 37, label %490
    i8 59, label %490
    i8 95, label %490
  ]

480:                                              ; preds = %478
  %481 = call ptr @Perl_cv_name(ptr noundef %1, ptr noundef null, i32 noundef 0) #29
  %482 = call ptr (ptr, ...) @Perl_form(ptr noundef nonnull @.str.191, ptr noundef %481) #29
  br label %483

483:                                              ; preds = %480, %129
  %484 = phi ptr [ %130, %129 ], [ %481, %480 ]
  %485 = phi ptr [ %131, %129 ], [ %482, %480 ]
  %486 = getelementptr inbounds %struct.sv, ptr %484, i64 0, i32 2
  %487 = load i32, ptr %486, align 4, !tbaa !84
  %488 = and i32 %487, 536870912
  %489 = call i32 @Perl_yyerror_pv(ptr noundef %485, i32 noundef %488) #29
  br label %490

490:                                              ; preds = %270, %483, %474, %478, %478, %478, %478
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #29
  ret ptr %0
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @S_bad_type_gv(i32 noundef %0, ptr noundef %1, ptr nocapture noundef readonly %2, ptr noundef %3) unnamed_addr #4 {
  %5 = tail call ptr @Perl_cv_name(ptr noundef %1, ptr noundef null, i32 noundef 0) #29
  %6 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 4
  %7 = load i16, ptr %6, align 8
  %8 = and i16 %7, 511
  %9 = icmp eq i16 %8, 380
  br i1 %9, label %10, label %12

10:                                               ; preds = %4
  %11 = tail call ptr @Perl_custom_op_get_field(ptr noundef nonnull %2, i32 noundef 2)
  br label %16

12:                                               ; preds = %4
  %13 = zext i16 %8 to i64
  %14 = getelementptr inbounds [0 x ptr], ptr @PL_op_desc, i64 0, i64 %13
  %15 = load ptr, ptr %14, align 8, !tbaa !6
  br label %16

16:                                               ; preds = %12, %10
  %17 = phi ptr [ %11, %10 ], [ %15, %12 ]
  %18 = tail call ptr (ptr, ...) @Perl_form(ptr noundef nonnull @.str.192, i32 noundef %0, ptr noundef %5, ptr noundef %3, ptr noundef %17) #29
  %19 = getelementptr inbounds %struct.sv, ptr %5, i64 0, i32 2
  %20 = load i32, ptr %19, align 4, !tbaa !84
  %21 = and i32 %20, 536870912
  %22 = tail call i32 @Perl_yyerror_pv(ptr noundef %18, i32 noundef %21) #29
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_ck_entersub_args_proto_or_list(ptr noundef returned %0, ptr noundef %1, ptr noundef %2) #4 {
  %4 = getelementptr inbounds %struct.sv, ptr %2, i64 0, i32 2
  %5 = load i32, ptr %4, align 4, !tbaa !84
  %6 = and i32 %5, 255
  %7 = icmp eq i32 %6, 13
  br i1 %7, label %8, label %11

8:                                                ; preds = %3
  %9 = and i32 %5, 1024
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %21, label %19

11:                                               ; preds = %3
  %12 = and i32 %5, 65280
  %13 = icmp ne i32 %12, 0
  %14 = icmp eq i32 %6, 8
  %15 = or i1 %13, %14
  %16 = and i32 %5, 16826623
  %17 = icmp eq i32 %16, 16777226
  %18 = or i1 %17, %15
  br i1 %18, label %19, label %21

19:                                               ; preds = %11, %8
  %20 = tail call ptr @Perl_ck_entersub_args_proto(ptr noundef %0, ptr noundef %1, ptr noundef nonnull %2)
  br label %46

21:                                               ; preds = %11, %8
  %22 = getelementptr inbounds %struct.unop, ptr %0, i64 0, i32 7
  %23 = load ptr, ptr %22, align 8, !tbaa !36
  %24 = getelementptr inbounds %struct.op, ptr %23, i64 0, i32 1
  %25 = load ptr, ptr %24, align 8, !tbaa !38
  %26 = icmp eq ptr %25, null
  br i1 %26, label %27, label %32

27:                                               ; preds = %21
  %28 = getelementptr inbounds %struct.unop, ptr %23, i64 0, i32 7
  %29 = load ptr, ptr %28, align 8, !tbaa !36
  %30 = getelementptr inbounds %struct.op, ptr %29, i64 0, i32 1
  %31 = load ptr, ptr %30, align 8, !tbaa !38
  br label %32

32:                                               ; preds = %27, %21
  %33 = phi ptr [ %25, %21 ], [ %31, %27 ]
  %34 = getelementptr inbounds %struct.op, ptr %33, i64 0, i32 1
  %35 = load ptr, ptr %34, align 8, !tbaa !38
  %36 = icmp eq ptr %35, null
  br i1 %36, label %46, label %37

37:                                               ; preds = %32, %37
  %38 = phi ptr [ %43, %37 ], [ %34, %32 ]
  %39 = phi ptr [ %42, %37 ], [ %33, %32 ]
  %40 = tail call ptr @Perl_list(ptr noundef nonnull %39)
  %41 = tail call ptr @Perl_op_lvalue_flags(ptr noundef nonnull %39, i32 noundef 185, i32 noundef 0)
  %42 = load ptr, ptr %38, align 8, !tbaa !38
  %43 = getelementptr inbounds %struct.op, ptr %42, i64 0, i32 1
  %44 = load ptr, ptr %43, align 8, !tbaa !38
  %45 = icmp eq ptr %44, null
  br i1 %45, label %46, label %37, !llvm.loop !319

46:                                               ; preds = %37, %32, %19
  ret ptr %0
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_ck_entersub_args_core(ptr noundef %0, ptr nocapture noundef readonly %1, ptr noundef %2) local_unnamed_addr #4 {
  %4 = getelementptr inbounds %struct.sv, ptr %2, i64 0, i32 2
  %5 = load i32, ptr %4, align 4, !tbaa !84
  %6 = and i32 %5, 255
  %7 = icmp eq i32 %6, 13
  br i1 %7, label %8, label %11

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.unop, ptr %0, i64 0, i32 7
  %10 = load ptr, ptr %9, align 8, !tbaa !36
  br label %26

11:                                               ; preds = %3
  %12 = and i32 %5, -2145386240
  %13 = icmp eq i32 %12, -2147483392
  br i1 %13, label %14, label %18

14:                                               ; preds = %11
  %15 = load ptr, ptr %2, align 8, !tbaa !85
  %16 = getelementptr inbounds %struct.xpvuv, ptr %15, i64 0, i32 4
  %17 = load i64, ptr %16, align 8, !tbaa !13
  br label %20

18:                                               ; preds = %11
  %19 = tail call i64 @Perl_sv_2uv_flags(ptr noundef nonnull %2, i32 noundef 2) #29
  br label %20

20:                                               ; preds = %14, %18
  %21 = phi i64 [ %17, %14 ], [ %19, %18 ]
  %22 = trunc i64 %21 to i32
  %23 = getelementptr inbounds %struct.unop, ptr %0, i64 0, i32 7
  %24 = load ptr, ptr %23, align 8, !tbaa !36
  %25 = icmp eq i32 %22, 0
  br i1 %25, label %26, label %110

26:                                               ; preds = %8, %20
  %27 = phi ptr [ %10, %8 ], [ %24, %20 ]
  %28 = getelementptr inbounds %struct.op, ptr %27, i64 0, i32 1
  %29 = load ptr, ptr %28, align 8, !tbaa !38
  %30 = icmp eq ptr %29, null
  br i1 %30, label %31, label %36

31:                                               ; preds = %26
  %32 = getelementptr inbounds %struct.unop, ptr %27, i64 0, i32 7
  %33 = load ptr, ptr %32, align 8, !tbaa !36
  %34 = getelementptr inbounds %struct.op, ptr %33, i64 0, i32 1
  %35 = load ptr, ptr %34, align 8, !tbaa !38
  br label %36

36:                                               ; preds = %26, %31
  %37 = phi ptr [ %29, %26 ], [ %35, %31 ]
  br label %38

38:                                               ; preds = %38, %36
  %39 = phi ptr [ %37, %36 ], [ %41, %38 ]
  %40 = getelementptr inbounds %struct.op, ptr %39, i64 0, i32 1
  %41 = load ptr, ptr %40, align 8, !tbaa !38
  %42 = icmp eq ptr %41, null
  br i1 %42, label %43, label %38, !llvm.loop !323

43:                                               ; preds = %38
  %44 = icmp eq ptr %37, %39
  br i1 %44, label %52, label %45

45:                                               ; preds = %43
  %46 = load ptr, ptr %1, align 8, !tbaa !169
  %47 = getelementptr inbounds %struct.xpvgv, ptr %46, i64 0, i32 4
  %48 = load ptr, ptr %47, align 8, !tbaa !13
  %49 = getelementptr inbounds %struct.hek, ptr %48, i64 0, i32 2
  %50 = tail call ptr (ptr, ...) @Perl_form(ptr noundef nonnull @.str.159, ptr noundef nonnull %49) #29
  %51 = tail call i32 @Perl_yyerror_pv(ptr noundef %50, i32 noundef 0) #29
  br label %52

52:                                               ; preds = %45, %43
  tail call void @Perl_op_free(ptr noundef %0)
  %53 = load ptr, ptr %1, align 8, !tbaa !169
  %54 = getelementptr inbounds %struct.xpvgv, ptr %53, i64 0, i32 4
  %55 = load ptr, ptr %54, align 8, !tbaa !13
  %56 = getelementptr inbounds %struct.hek, ptr %55, i64 0, i32 2, i64 2
  %57 = load i8, ptr %56, align 2, !tbaa !13
  %58 = sext i8 %57 to i32
  switch i32 %58, label %186 [
    i32 70, label %59
    i32 76, label %73
    i32 80, label %80
  ]

59:                                               ; preds = %52
  %60 = load ptr, ptr @PL_curcop, align 8, !tbaa !6
  %61 = getelementptr inbounds %struct.cop, ptr %60, i64 0, i32 9
  %62 = load ptr, ptr %61, align 8, !tbaa !40
  %63 = icmp eq ptr %62, null
  br i1 %63, label %69, label %64

64:                                               ; preds = %59
  %65 = load ptr, ptr %62, align 8, !tbaa !169
  %66 = getelementptr inbounds %struct.xpvgv, ptr %65, i64 0, i32 4
  %67 = load ptr, ptr %66, align 8, !tbaa !13
  %68 = getelementptr inbounds %struct.hek, ptr %67, i64 0, i32 2, i64 2
  br label %69

69:                                               ; preds = %59, %64
  %70 = phi ptr [ %68, %64 ], [ null, %59 ]
  %71 = tail call ptr @Perl_newSVpv(ptr noundef %70, i64 noundef 0) #29
  %72 = tail call ptr @Perl_newSVOP(i32 noundef 5, i32 noundef 0, ptr noundef %71)
  br label %186

73:                                               ; preds = %52
  %74 = load ptr, ptr @PL_curcop, align 8, !tbaa !6
  %75 = getelementptr inbounds %struct.cop, ptr %74, i64 0, i32 7
  %76 = load i32, ptr %75, align 4, !tbaa !146
  %77 = zext i32 %76 to i64
  %78 = tail call ptr (ptr, ...) @Perl_newSVpvf(ptr noundef nonnull @.str.193, i64 noundef %77) #29
  %79 = tail call ptr @Perl_newSVOP(i32 noundef 5, i32 noundef 0, ptr noundef %78)
  br label %186

80:                                               ; preds = %52
  %81 = load ptr, ptr @PL_curstash, align 8, !tbaa !6
  %82 = icmp eq ptr %81, null
  br i1 %82, label %107, label %83

83:                                               ; preds = %80
  %84 = getelementptr inbounds %struct.hv, ptr %81, i64 0, i32 2
  %85 = load i32, ptr %84, align 4, !tbaa !56
  %86 = and i32 %85, 33554432
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %104, label %88

88:                                               ; preds = %83
  %89 = getelementptr inbounds %struct.hv, ptr %81, i64 0, i32 3
  %90 = load ptr, ptr %89, align 8, !tbaa !13
  %91 = load ptr, ptr %81, align 8, !tbaa !139
  %92 = getelementptr inbounds %struct.xpvhv, ptr %91, i64 0, i32 3
  %93 = load i64, ptr %92, align 8, !tbaa !140
  %94 = add i64 %93, 1
  %95 = getelementptr inbounds ptr, ptr %90, i64 %94
  %96 = load ptr, ptr %95, align 8, !tbaa !13
  %97 = icmp eq ptr %96, null
  br i1 %97, label %104, label %98

98:                                               ; preds = %88
  %99 = getelementptr inbounds %struct.xpvhv_aux, ptr %95, i64 0, i32 4
  %100 = load i32, ptr %99, align 4, !tbaa !142
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %104, label %102

102:                                              ; preds = %98
  %103 = load ptr, ptr %96, align 8, !tbaa !6
  br label %104

104:                                              ; preds = %98, %83, %88, %102
  %105 = phi ptr [ %103, %102 ], [ null, %88 ], [ null, %83 ], [ %96, %98 ]
  %106 = tail call ptr @Perl_newSVhek(ptr noundef %105) #29
  br label %107

107:                                              ; preds = %80, %104
  %108 = phi ptr [ %106, %104 ], [ @PL_sv_undef, %80 ]
  %109 = tail call ptr @Perl_newSVOP(i32 noundef 5, i32 noundef 0, ptr noundef %108)
  br label %186

110:                                              ; preds = %20
  %111 = getelementptr inbounds %struct.op, ptr %24, i64 0, i32 1
  %112 = load ptr, ptr %111, align 8, !tbaa !38
  %113 = icmp eq ptr %112, null
  br i1 %113, label %114, label %119

114:                                              ; preds = %110
  %115 = getelementptr inbounds %struct.unop, ptr %24, i64 0, i32 7
  %116 = load ptr, ptr %115, align 8, !tbaa !36
  %117 = getelementptr inbounds %struct.op, ptr %116, i64 0, i32 1
  %118 = load ptr, ptr %117, align 8, !tbaa !38
  br label %119

119:                                              ; preds = %110, %114
  %120 = phi ptr [ %112, %110 ], [ %118, %114 ]
  %121 = phi ptr [ %24, %110 ], [ %116, %114 ]
  %122 = phi ptr [ %0, %110 ], [ %24, %114 ]
  br label %123

123:                                              ; preds = %123, %119
  %124 = phi ptr [ %121, %119 ], [ %125, %123 ]
  %125 = phi ptr [ %120, %119 ], [ %127, %123 ]
  %126 = getelementptr inbounds %struct.op, ptr %125, i64 0, i32 1
  %127 = load ptr, ptr %126, align 8, !tbaa !38
  %128 = icmp eq ptr %127, null
  br i1 %128, label %129, label %123, !llvm.loop !324

129:                                              ; preds = %123
  %130 = getelementptr inbounds %struct.op, ptr %125, i64 0, i32 6
  %131 = load i8, ptr %130, align 1, !tbaa !33
  %132 = icmp sgt i8 %131, -1
  %133 = add i32 %22, -149
  %134 = icmp ult i32 %133, -5
  %135 = and i1 %134, %132
  %136 = select i1 %135, i32 128, i32 0
  %137 = tail call ptr @Perl_op_sibling_splice(ptr noundef %122, ptr noundef nonnull %124, i32 noundef 1, ptr noundef null)
  tail call void @Perl_op_free(ptr noundef nonnull %125)
  %138 = icmp eq ptr %120, %125
  %139 = select i1 %138, ptr null, ptr %120
  %140 = icmp eq ptr %139, null
  br i1 %140, label %143, label %141

141:                                              ; preds = %129
  %142 = tail call ptr @Perl_op_sibling_splice(ptr noundef %122, ptr noundef %121, i32 noundef -1, ptr noundef null)
  br label %143

143:                                              ; preds = %141, %129
  tail call void @Perl_op_free(ptr noundef %0)
  %144 = icmp eq i32 %22, 342
  br i1 %144, label %145, label %158

145:                                              ; preds = %143
  %146 = load ptr, ptr %1, align 8, !tbaa !169
  %147 = getelementptr inbounds %struct.xpvgv, ptr %146, i64 0, i32 4
  %148 = load ptr, ptr %147, align 8, !tbaa !13
  %149 = getelementptr inbounds %struct.hek, ptr %148, i64 0, i32 1
  %150 = load i32, ptr %149, align 4, !tbaa !292
  %151 = icmp eq i32 %150, 9
  br i1 %151, label %152, label %158

152:                                              ; preds = %145
  %153 = getelementptr inbounds %struct.hek, ptr %148, i64 0, i32 2
  %154 = tail call i32 @strncmp(ptr noundef nonnull dereferenceable(1) %153, ptr noundef nonnull dereferenceable(10) @.str.194, i64 noundef 9) #30
  %155 = icmp eq i32 %154, 0
  %156 = or i32 %136, 2048
  %157 = select i1 %155, i32 %156, i32 %136
  br label %158

158:                                              ; preds = %152, %145, %143
  %159 = phi i32 [ %136, %145 ], [ %136, %143 ], [ %157, %152 ]
  %160 = shl i64 %21, 32
  %161 = ashr exact i64 %160, 32
  %162 = getelementptr inbounds [0 x i32], ptr @PL_opargs, i64 0, i64 %161
  %163 = load i32, ptr %162, align 4, !tbaa !52
  %164 = and i32 %163, 3840
  switch i32 %164, label %184 [
    i32 256, label %165
    i32 2816, label %165
    i32 3072, label %165
    i32 0, label %170
  ]

165:                                              ; preds = %158, %158, %158
  br i1 %140, label %168, label %166

166:                                              ; preds = %165
  %167 = tail call ptr @Perl_newUNOP(i32 noundef %22, i32 noundef %159, ptr noundef nonnull %139)
  br label %186

168:                                              ; preds = %165
  %169 = tail call ptr @Perl_newOP(i32 noundef %22, i32 noundef %159)
  br label %186

170:                                              ; preds = %158
  br i1 %140, label %178, label %171

171:                                              ; preds = %170
  %172 = load ptr, ptr %1, align 8, !tbaa !169
  %173 = getelementptr inbounds %struct.xpvgv, ptr %172, i64 0, i32 4
  %174 = load ptr, ptr %173, align 8, !tbaa !13
  %175 = getelementptr inbounds %struct.hek, ptr %174, i64 0, i32 2
  %176 = tail call ptr (ptr, ...) @Perl_form(ptr noundef nonnull @.str.159, ptr noundef nonnull %175) #29
  %177 = tail call i32 @Perl_yyerror_pv(ptr noundef %176, i32 noundef 0) #29
  tail call void @Perl_op_free(ptr noundef nonnull %139)
  br label %178

178:                                              ; preds = %171, %170
  %179 = icmp eq i32 %22, 385
  br i1 %179, label %180, label %182

180:                                              ; preds = %178
  %181 = tail call ptr @Perl_newPVOP(i32 noundef 385, i32 noundef 0, ptr noundef null)
  br label %186

182:                                              ; preds = %178
  %183 = tail call ptr @Perl_newOP(i32 noundef %22, i32 noundef 0)
  br label %186

184:                                              ; preds = %158
  %185 = tail call ptr @Perl_op_convert_list(i32 noundef %22, i32 noundef 0, ptr noundef %139)
  br label %186

186:                                              ; preds = %69, %73, %107, %52, %184, %168, %166, %182, %180
  %187 = phi ptr [ %185, %184 ], [ %167, %166 ], [ %169, %168 ], [ %181, %180 ], [ %183, %182 ], [ %0, %52 ], [ %72, %69 ], [ %79, %73 ], [ %109, %107 ]
  ret ptr %187
}

declare i64 @Perl_sv_2uv_flags(ptr noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_cv_get_call_checker(ptr noundef %0, ptr nocapture noundef writeonly %1, ptr nocapture noundef writeonly %2) local_unnamed_addr #4 {
  %4 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %5 = load i32, ptr %4, align 4, !tbaa !84
  %6 = and i32 %5, 14680064
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %16, label %8

8:                                                ; preds = %3
  %9 = tail call ptr @Perl_mg_find(ptr noundef nonnull %0, i32 noundef 93) #29
  %10 = icmp eq ptr %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.magic, ptr %9, i64 0, i32 7
  %13 = load ptr, ptr %12, align 8, !tbaa !58
  store ptr %13, ptr %1, align 8, !tbaa !6
  %14 = getelementptr inbounds %struct.magic, ptr %9, i64 0, i32 6
  %15 = load ptr, ptr %14, align 8, !tbaa !325
  br label %17

16:                                               ; preds = %8, %3
  store ptr @Perl_ck_entersub_args_proto_or_list, ptr %1, align 8, !tbaa !6
  br label %17

17:                                               ; preds = %11, %16
  %18 = phi ptr [ %15, %11 ], [ %0, %16 ]
  store ptr %18, ptr %2, align 8, !tbaa !6
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_cv_set_call_checker(ptr noundef %0, ptr noundef %1, ptr noundef %2) local_unnamed_addr #4 {
  tail call void @Perl_cv_set_call_checker_flags(ptr noundef %0, ptr noundef %1, ptr noundef %2, i32 noundef 1)
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_cv_set_call_checker_flags(ptr noundef %0, ptr noundef %1, ptr noundef %2, i32 noundef %3) local_unnamed_addr #4 {
  %5 = icmp eq ptr %1, @Perl_ck_entersub_args_proto_or_list
  %6 = icmp eq ptr %2, %0
  %7 = and i1 %5, %6
  br i1 %7, label %8, label %14

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.sv, ptr %2, i64 0, i32 2
  %10 = load i32, ptr %9, align 4, !tbaa !84
  %11 = and i32 %10, 14680064
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %51, label %13

13:                                               ; preds = %8
  tail call void @Perl_mg_free_type(ptr noundef nonnull %2, i32 noundef 93) #29
  br label %51

14:                                               ; preds = %4
  tail call void @Perl_sv_magic(ptr noundef %0, ptr noundef nonnull @PL_sv_undef, i32 noundef 93, ptr noundef null, i32 noundef 0) #29
  %15 = tail call ptr @Perl_mg_find(ptr noundef %0, i32 noundef 93) #29
  %16 = getelementptr inbounds %struct.magic, ptr %15, i64 0, i32 4
  %17 = load i8, ptr %16, align 1, !tbaa !326
  %18 = and i8 %17, 2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %35, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %struct.magic, ptr %15, i64 0, i32 6
  %22 = load ptr, ptr %21, align 8, !tbaa !325
  %23 = icmp eq ptr %22, null
  br i1 %23, label %32, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.sv, ptr %22, i64 0, i32 1
  %26 = load i32, ptr %25, align 8, !tbaa !42
  %27 = icmp ugt i32 %26, 1
  br i1 %27, label %28, label %30

28:                                               ; preds = %24
  %29 = add i32 %26, -1
  store i32 %29, ptr %25, align 8, !tbaa !42
  br label %32

30:                                               ; preds = %24
  tail call void @Perl_sv_free2(ptr noundef nonnull %22, i32 noundef %26) #29
  %31 = load i8, ptr %16, align 1, !tbaa !326
  br label %32

32:                                               ; preds = %20, %28, %30
  %33 = phi i8 [ %17, %20 ], [ %17, %28 ], [ %31, %30 ]
  %34 = and i8 %33, -3
  br label %35

35:                                               ; preds = %32, %14
  %36 = phi i8 [ %34, %32 ], [ %17, %14 ]
  %37 = getelementptr inbounds %struct.magic, ptr %15, i64 0, i32 7
  store ptr %1, ptr %37, align 8, !tbaa !58
  %38 = getelementptr inbounds %struct.magic, ptr %15, i64 0, i32 6
  store ptr %2, ptr %38, align 8, !tbaa !325
  br i1 %6, label %44, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %struct.sv, ptr %2, i64 0, i32 1
  %41 = load i32, ptr %40, align 8, !tbaa !42
  %42 = add i32 %41, 1
  store i32 %42, ptr %40, align 8, !tbaa !42
  %43 = or i8 %36, 2
  br label %44

44:                                               ; preds = %39, %35
  %45 = phi i8 [ %43, %39 ], [ %36, %35 ]
  %46 = and i8 %45, -10
  %47 = trunc i32 %3 to i8
  %48 = and i8 %47, 1
  %49 = or i8 %48, %46
  %50 = or i8 %49, 8
  store i8 %50, ptr %16, align 1, !tbaa !326
  br label %51

51:                                               ; preds = %8, %13, %44
  ret void
}

declare void @Perl_mg_free_type(ptr noundef, i32 noundef) local_unnamed_addr #6

declare void @Perl_sv_magic(ptr noundef, ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_ck_subr(ptr noundef %0) local_unnamed_addr #4 {
  %2 = alloca i64, align 8
  %3 = getelementptr inbounds %struct.unop, ptr %0, i64 0, i32 7
  %4 = load ptr, ptr %3, align 8, !tbaa !36
  %5 = getelementptr inbounds %struct.op, ptr %4, i64 0, i32 1
  %6 = load ptr, ptr %5, align 8, !tbaa !38
  %7 = icmp eq ptr %6, null
  br i1 %7, label %8, label %13

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.unop, ptr %4, i64 0, i32 7
  %10 = load ptr, ptr %9, align 8, !tbaa !36
  %11 = getelementptr inbounds %struct.op, ptr %10, i64 0, i32 1
  %12 = load ptr, ptr %11, align 8, !tbaa !38
  br label %13

13:                                               ; preds = %1, %8
  %14 = phi ptr [ %6, %1 ], [ %12, %8 ]
  br label %15

15:                                               ; preds = %15, %13
  %16 = phi ptr [ %14, %13 ], [ %18, %15 ]
  %17 = getelementptr inbounds %struct.op, ptr %16, i64 0, i32 1
  %18 = load ptr, ptr %17, align 8, !tbaa !38
  %19 = icmp eq ptr %18, null
  br i1 %19, label %20, label %15, !llvm.loop !327

20:                                               ; preds = %15
  %21 = tail call ptr @Perl_rv2cv_op_cv(ptr noundef nonnull %16, i32 noundef 1)
  %22 = icmp eq ptr %21, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %20
  %24 = tail call ptr @Perl_rv2cv_op_cv(ptr noundef nonnull %16, i32 noundef 8)
  br label %25

25:                                               ; preds = %20, %23
  %26 = phi ptr [ %24, %23 ], [ null, %20 ]
  %27 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 6
  %28 = load i8, ptr %27, align 1, !tbaa !33
  %29 = and i8 %28, -2
  %30 = load i32, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 10), align 8, !tbaa !77
  %31 = trunc i32 %30 to i8
  %32 = and i8 %31, 2
  %33 = or i8 %32, %29
  store i8 %33, ptr %27, align 1, !tbaa !33
  %34 = load i32, ptr @PL_perldb, align 4, !tbaa !52
  %35 = and i32 %34, 1
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %43, label %37

37:                                               ; preds = %25
  %38 = load ptr, ptr @PL_curstash, align 8, !tbaa !6
  %39 = load ptr, ptr @PL_debstash, align 8, !tbaa !6
  %40 = icmp eq ptr %38, %39
  br i1 %40, label %43, label %41

41:                                               ; preds = %37
  %42 = or i8 %33, 64
  store i8 %42, ptr %27, align 1, !tbaa !33
  br label %43

43:                                               ; preds = %41, %37, %25
  %44 = phi i8 [ %42, %41 ], [ %33, %37 ], [ %33, %25 ]
  %45 = getelementptr inbounds %struct.op, ptr %16, i64 0, i32 4
  %46 = load i16, ptr %45, align 8
  %47 = and i16 %46, 511
  %48 = zext i16 %47 to i32
  switch i32 %48, label %135 [
    i32 17, label %49
    i32 184, label %65
    i32 210, label %65
    i32 211, label %65
    i32 212, label %65
    i32 213, label %65
  ]

49:                                               ; preds = %43
  %50 = getelementptr inbounds %struct.op, ptr %16, i64 0, i32 6
  %51 = load i8, ptr %50, align 1, !tbaa !33
  %52 = and i8 %51, 8
  %53 = or i8 %44, %52
  store i8 %53, ptr %27, align 1, !tbaa !33
  %54 = load i16, ptr %45, align 8
  %55 = and i16 %54, 511
  %56 = icmp eq i16 %55, 0
  br i1 %56, label %135, label %57

57:                                               ; preds = %49
  tail call void @Perl_op_clear(ptr noundef nonnull %16)
  %58 = load i16, ptr %45, align 8
  %59 = and i16 %58, 511
  %60 = zext i16 %59 to i64
  %61 = getelementptr inbounds %struct.op, ptr %16, i64 0, i32 3
  store i64 %60, ptr %61, align 8, !tbaa !34
  %62 = and i16 %58, -512
  store i16 %62, ptr %45, align 8
  %63 = load ptr, ptr @PL_ppaddr, align 8, !tbaa !6
  %64 = getelementptr inbounds %struct.op, ptr %16, i64 0, i32 2
  store ptr %63, ptr %64, align 8, !tbaa !78
  br label %135

65:                                               ; preds = %43, %43, %43, %43, %43
  %66 = getelementptr inbounds %struct.op, ptr %14, i64 0, i32 4
  %67 = load i16, ptr %66, align 8
  %68 = and i16 %67, 511
  switch i16 %68, label %135 [
    i16 5, label %80
    i16 158, label %69
  ]

69:                                               ; preds = %65
  %70 = getelementptr inbounds %struct.unop, ptr %14, i64 0, i32 7
  %71 = load ptr, ptr %70, align 8, !tbaa !36
  %72 = getelementptr inbounds %struct.op, ptr %71, i64 0, i32 1
  %73 = load ptr, ptr %72, align 8, !tbaa !38
  %74 = icmp eq ptr %73, null
  br i1 %74, label %135, label %75

75:                                               ; preds = %69
  %76 = getelementptr inbounds %struct.op, ptr %73, i64 0, i32 4
  %77 = load i16, ptr %76, align 8
  %78 = and i16 %77, 511
  %79 = icmp eq i16 %78, 5
  br i1 %79, label %80, label %135

80:                                               ; preds = %75, %65
  %81 = phi ptr [ %14, %65 ], [ %73, %75 ]
  %82 = getelementptr inbounds %struct.op, ptr %81, i64 0, i32 6
  %83 = load i8, ptr %82, align 1, !tbaa !33
  %84 = and i8 %83, -9
  store i8 %84, ptr %82, align 1, !tbaa !33
  %85 = getelementptr inbounds %struct.svop, ptr %81, i64 0, i32 7
  %86 = load ptr, ptr %85, align 8, !tbaa !6
  %87 = getelementptr inbounds %struct.sv, ptr %86, i64 0, i32 2
  %88 = load i32, ptr %87, align 4, !tbaa !84
  %89 = and i32 %88, 1024
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %135, label %91

91:                                               ; preds = %80
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #29
  %92 = and i32 %88, 2098176
  %93 = icmp eq i32 %92, 1024
  br i1 %93, label %94, label %100

94:                                               ; preds = %91
  %95 = load ptr, ptr %86, align 8, !tbaa !85
  %96 = getelementptr inbounds %struct.xpv, ptr %95, i64 0, i32 2
  %97 = load i64, ptr %96, align 8, !tbaa !86
  store i64 %97, ptr %2, align 8, !tbaa !88
  %98 = getelementptr inbounds %struct.sv, ptr %86, i64 0, i32 3
  %99 = load ptr, ptr %98, align 8, !tbaa !13
  br label %103

100:                                              ; preds = %91
  %101 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %86, ptr noundef nonnull %2, i32 noundef 2) #29
  %102 = load i64, ptr %2, align 8
  br label %103

103:                                              ; preds = %100, %94
  %104 = phi i64 [ %102, %100 ], [ %97, %94 ]
  %105 = phi ptr [ %101, %100 ], [ %99, %94 ]
  %106 = icmp eq i64 %104, 0
  br i1 %106, label %134, label %107

107:                                              ; preds = %103
  %108 = load ptr, ptr %85, align 8, !tbaa !6
  %109 = getelementptr inbounds %struct.sv, ptr %108, i64 0, i32 2
  %110 = load i32, ptr %109, align 4, !tbaa !84
  %111 = and i32 %110, 536870912
  %112 = icmp eq i32 %111, 0
  %113 = sub nsw i64 0, %104
  %114 = select i1 %112, i64 %104, i64 %113
  %115 = trunc i64 %114 to i32
  %116 = call ptr @Perl_newSVpvn_share(ptr noundef %105, i32 noundef %115, i32 noundef 0) #29
  %117 = load ptr, ptr %85, align 8, !tbaa !6
  %118 = getelementptr inbounds %struct.sv, ptr %117, i64 0, i32 2
  %119 = load i32, ptr %118, align 4, !tbaa !84
  %120 = and i32 %119, 134283264
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %126, label %122

122:                                              ; preds = %107
  %123 = getelementptr inbounds %struct.sv, ptr %116, i64 0, i32 2
  %124 = load i32, ptr %123, align 4, !tbaa !84
  %125 = or i32 %124, 134283264
  store i32 %125, ptr %123, align 4, !tbaa !84
  br label %126

126:                                              ; preds = %107, %122
  %127 = getelementptr inbounds %struct.sv, ptr %117, i64 0, i32 1
  %128 = load i32, ptr %127, align 8, !tbaa !42
  %129 = icmp ugt i32 %128, 1
  br i1 %129, label %130, label %132

130:                                              ; preds = %126
  %131 = add i32 %128, -1
  store i32 %131, ptr %127, align 8, !tbaa !42
  br label %133

132:                                              ; preds = %126
  call void @Perl_sv_free2(ptr noundef nonnull %117, i32 noundef %128) #29
  br label %133

133:                                              ; preds = %130, %132
  store ptr %116, ptr %85, align 8, !tbaa !6
  br label %134

134:                                              ; preds = %133, %103
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #29
  br label %135

135:                                              ; preds = %69, %75, %65, %57, %49, %80, %134, %43
  br i1 %22, label %136, label %164

136:                                              ; preds = %135
  %137 = call i64 @Perl_pad_alloc(i32 noundef 185, i32 noundef 131072) #29
  %138 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 3
  store i64 %137, ptr %138, align 8, !tbaa !34
  %139 = load i8, ptr %27, align 1, !tbaa !33
  %140 = or i8 %139, 4
  store i8 %140, ptr %27, align 1, !tbaa !33
  %141 = load ptr, ptr %3, align 8, !tbaa !36
  %142 = getelementptr inbounds %struct.op, ptr %141, i64 0, i32 1
  %143 = load ptr, ptr %142, align 8, !tbaa !38
  %144 = icmp eq ptr %143, null
  br i1 %144, label %145, label %150

145:                                              ; preds = %136
  %146 = getelementptr inbounds %struct.unop, ptr %141, i64 0, i32 7
  %147 = load ptr, ptr %146, align 8, !tbaa !36
  %148 = getelementptr inbounds %struct.op, ptr %147, i64 0, i32 1
  %149 = load ptr, ptr %148, align 8, !tbaa !38
  br label %150

150:                                              ; preds = %145, %136
  %151 = phi ptr [ %143, %136 ], [ %149, %145 ]
  %152 = getelementptr inbounds %struct.op, ptr %151, i64 0, i32 1
  %153 = load ptr, ptr %152, align 8, !tbaa !38
  %154 = icmp eq ptr %153, null
  br i1 %154, label %247, label %155

155:                                              ; preds = %150, %155
  %156 = phi ptr [ %161, %155 ], [ %152, %150 ]
  %157 = phi ptr [ %160, %155 ], [ %151, %150 ]
  %158 = call ptr @Perl_list(ptr noundef nonnull %157)
  %159 = call ptr @Perl_op_lvalue_flags(ptr noundef nonnull %157, i32 noundef 185, i32 noundef 0)
  %160 = load ptr, ptr %156, align 8, !tbaa !38
  %161 = getelementptr inbounds %struct.op, ptr %160, i64 0, i32 1
  %162 = load ptr, ptr %161, align 8, !tbaa !38
  %163 = icmp eq ptr %162, null
  br i1 %163, label %247, label %155, !llvm.loop !319

164:                                              ; preds = %135
  %165 = getelementptr inbounds %struct.sv, ptr %21, i64 0, i32 2
  %166 = load i32, ptr %165, align 4, !tbaa !84
  %167 = and i32 %166, 14680064
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %180, label %169

169:                                              ; preds = %164
  %170 = call ptr @Perl_mg_find(ptr noundef nonnull %21, i32 noundef 93) #29
  %171 = icmp eq ptr %170, null
  br i1 %171, label %180, label %172

172:                                              ; preds = %169
  %173 = getelementptr inbounds %struct.magic, ptr %170, i64 0, i32 7
  %174 = load ptr, ptr %173, align 8, !tbaa !58
  %175 = getelementptr inbounds %struct.magic, ptr %170, i64 0, i32 6
  %176 = load ptr, ptr %175, align 8, !tbaa !325
  %177 = getelementptr inbounds %struct.magic, ptr %170, i64 0, i32 4
  %178 = load i8, ptr %177, align 1, !tbaa !326
  %179 = and i8 %178, 1
  br label %180

180:                                              ; preds = %164, %169, %172
  %181 = phi ptr [ %176, %172 ], [ %21, %169 ], [ %21, %164 ]
  %182 = phi ptr [ %174, %172 ], [ @Perl_ck_entersub_args_proto_or_list, %169 ], [ @Perl_ck_entersub_args_proto_or_list, %164 ]
  %183 = phi i8 [ %179, %172 ], [ 0, %169 ], [ 0, %164 ]
  %184 = load ptr, ptr %21, align 8, !tbaa !10
  %185 = getelementptr inbounds %struct.xpvcv, ptr %184, i64 0, i32 12
  %186 = load i32, ptr %185, align 4, !tbaa !14
  %187 = and i32 %186, 8
  %188 = icmp eq i32 %187, 0
  br i1 %188, label %189, label %193

189:                                              ; preds = %180
  %190 = getelementptr inbounds %struct.xpvcv, ptr %184, i64 0, i32 6
  %191 = load ptr, ptr %190, align 8, !tbaa !13
  %192 = icmp eq ptr %191, null
  br i1 %192, label %193, label %198

193:                                              ; preds = %189, %180
  %194 = call i64 @Perl_pad_alloc(i32 noundef 185, i32 noundef 131072) #29
  %195 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 3
  store i64 %194, ptr %195, align 8, !tbaa !34
  %196 = load i8, ptr %27, align 1, !tbaa !33
  %197 = or i8 %196, 4
  store i8 %197, ptr %27, align 1, !tbaa !33
  br label %198

198:                                              ; preds = %193, %189
  %199 = icmp eq ptr %26, null
  br i1 %199, label %200, label %244

200:                                              ; preds = %198
  %201 = icmp eq i8 %183, 0
  br i1 %201, label %244, label %202

202:                                              ; preds = %200
  %203 = load ptr, ptr %21, align 8, !tbaa !10
  %204 = getelementptr inbounds %struct.xpvcv, ptr %203, i64 0, i32 12
  %205 = load i32, ptr %204, align 4, !tbaa !14
  %206 = and i32 %205, 128
  %207 = icmp eq i32 %206, 0
  br i1 %207, label %208, label %220

208:                                              ; preds = %202
  %209 = and i32 %205, 32768
  %210 = icmp eq i32 %209, 0
  %211 = getelementptr inbounds %struct.xpvcv, ptr %203, i64 0, i32 7
  %212 = load ptr, ptr %211, align 8, !tbaa !13
  br i1 %210, label %217, label %213

213:                                              ; preds = %208
  %214 = icmp eq ptr %212, null
  br i1 %214, label %220, label %215

215:                                              ; preds = %213
  %216 = call ptr @Perl_cvgv_from_hek(ptr noundef nonnull %21) #29
  br label %217

217:                                              ; preds = %208, %215
  %218 = phi ptr [ %216, %215 ], [ %212, %208 ]
  %219 = icmp eq ptr %218, null
  br i1 %219, label %220, label %244

220:                                              ; preds = %213, %202, %217
  %221 = load ptr, ptr %3, align 8, !tbaa !36
  %222 = getelementptr inbounds %struct.op, ptr %221, i64 0, i32 1
  %223 = load ptr, ptr %222, align 8, !tbaa !38
  %224 = icmp eq ptr %223, null
  br i1 %224, label %225, label %230

225:                                              ; preds = %220
  %226 = getelementptr inbounds %struct.unop, ptr %221, i64 0, i32 7
  %227 = load ptr, ptr %226, align 8, !tbaa !36
  %228 = getelementptr inbounds %struct.op, ptr %227, i64 0, i32 1
  %229 = load ptr, ptr %228, align 8, !tbaa !38
  br label %230

230:                                              ; preds = %225, %220
  %231 = phi ptr [ %223, %220 ], [ %229, %225 ]
  %232 = getelementptr inbounds %struct.op, ptr %231, i64 0, i32 1
  %233 = load ptr, ptr %232, align 8, !tbaa !38
  %234 = icmp eq ptr %233, null
  br i1 %234, label %247, label %235

235:                                              ; preds = %230, %235
  %236 = phi ptr [ %241, %235 ], [ %232, %230 ]
  %237 = phi ptr [ %240, %235 ], [ %231, %230 ]
  %238 = call ptr @Perl_list(ptr noundef nonnull %237)
  %239 = call ptr @Perl_op_lvalue_flags(ptr noundef nonnull %237, i32 noundef 185, i32 noundef 0)
  %240 = load ptr, ptr %236, align 8, !tbaa !38
  %241 = getelementptr inbounds %struct.op, ptr %240, i64 0, i32 1
  %242 = load ptr, ptr %241, align 8, !tbaa !38
  %243 = icmp eq ptr %242, null
  br i1 %243, label %247, label %235, !llvm.loop !319

244:                                              ; preds = %200, %217, %198
  %245 = phi ptr [ %26, %198 ], [ %218, %217 ], [ %21, %200 ]
  %246 = call ptr %182(ptr noundef nonnull %0, ptr noundef nonnull %245, ptr noundef %181) #29
  br label %247

247:                                              ; preds = %235, %155, %244, %230, %150
  %248 = phi ptr [ %0, %150 ], [ %246, %244 ], [ %0, %230 ], [ %0, %155 ], [ %0, %235 ]
  ret ptr %248
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(readwrite, inaccessiblemem: none) uwtable
define dso_local ptr @Perl_ck_svconst(ptr noundef readonly returned %0) local_unnamed_addr #23 {
  %2 = getelementptr inbounds %struct.svop, ptr %0, i64 0, i32 7
  %3 = load ptr, ptr %2, align 8, !tbaa !65
  %4 = getelementptr inbounds %struct.sv, ptr %3, i64 0, i32 2
  %5 = load i32, ptr %4, align 4, !tbaa !84
  %6 = and i32 %5, 520178688
  %7 = icmp eq i32 %6, 17408
  br i1 %7, label %8, label %24

8:                                                ; preds = %1
  %9 = load ptr, ptr %3, align 8, !tbaa !85
  %10 = getelementptr inbounds %struct.xpv, ptr %9, i64 0, i32 2
  %11 = load i64, ptr %10, align 8, !tbaa !86
  %12 = add i64 %11, 1
  %13 = getelementptr inbounds %struct.xpv, ptr %9, i64 0, i32 3
  %14 = load i64, ptr %13, align 8, !tbaa !13
  %15 = icmp ult i64 %12, %14
  br i1 %15, label %16, label %24

16:                                               ; preds = %8
  %17 = or i32 %5, 268435456
  store i32 %17, ptr %4, align 4, !tbaa !84
  %18 = getelementptr inbounds %struct.sv, ptr %3, i64 0, i32 3
  %19 = load ptr, ptr %18, align 8, !tbaa !13
  %20 = load i64, ptr %13, align 8, !tbaa !13
  %21 = getelementptr inbounds i8, ptr %19, i64 %20
  %22 = getelementptr inbounds i8, ptr %21, i64 -1
  store i8 0, ptr %22, align 1, !tbaa !13
  %23 = load i32, ptr %4, align 4, !tbaa !84
  br label %24

24:                                               ; preds = %16, %8, %1
  %25 = phi i32 [ %23, %16 ], [ %5, %8 ], [ %5, %1 ]
  %26 = or i32 %25, 134283264
  store i32 %26, ptr %4, align 4, !tbaa !84
  ret ptr %0
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_ck_trunc(ptr noundef %0) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 5
  %3 = load i8, ptr %2, align 2, !tbaa !35
  %4 = and i8 %3, 4
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %36, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.unop, ptr %0, i64 0, i32 7
  %8 = load ptr, ptr %7, align 8, !tbaa !36
  %9 = getelementptr inbounds %struct.svop, ptr %8, i64 0, i32 4
  %10 = load i16, ptr %9, align 8
  %11 = and i16 %10, 511
  %12 = icmp eq i16 %11, 0
  br i1 %12, label %13, label %20

13:                                               ; preds = %6
  %14 = getelementptr inbounds %struct.svop, ptr %8, i64 0, i32 1
  %15 = load ptr, ptr %14, align 8, !tbaa !144
  %16 = icmp eq ptr %15, null
  br i1 %16, label %36, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.svop, ptr %15, i64 0, i32 4
  %19 = load i16, ptr %18, align 8
  br label %20

20:                                               ; preds = %17, %6
  %21 = phi i16 [ %19, %17 ], [ %10, %6 ]
  %22 = phi ptr [ %15, %17 ], [ %8, %6 ]
  %23 = and i16 %21, 511
  %24 = icmp eq i16 %23, 5
  br i1 %24, label %25, label %36

25:                                               ; preds = %20
  %26 = getelementptr inbounds %struct.svop, ptr %22, i64 0, i32 6
  %27 = load i8, ptr %26, align 1, !tbaa !76
  %28 = and i8 %27, 64
  %29 = icmp ne i8 %28, 0
  %30 = and i16 %21, 8192
  %31 = icmp eq i16 %30, 0
  %32 = and i1 %31, %29
  br i1 %32, label %33, label %36

33:                                               ; preds = %25
  %34 = or i8 %3, -128
  store i8 %34, ptr %2, align 2, !tbaa !35
  %35 = and i8 %27, -9
  store i8 %35, ptr %26, align 1, !tbaa !76
  br label %36

36:                                               ; preds = %13, %20, %25, %33, %1
  %37 = tail call ptr @Perl_ck_fun(ptr noundef nonnull %0)
  ret ptr %37
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_ck_substr(ptr noundef %0) local_unnamed_addr #4 {
  %2 = tail call ptr @Perl_ck_fun(ptr noundef %0)
  %3 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 5
  %4 = load i8, ptr %3, align 2, !tbaa !35
  %5 = and i8 %4, 4
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %27, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 6
  %9 = load i8, ptr %8, align 1, !tbaa !33
  %10 = icmp eq i8 %9, 4
  br i1 %10, label %11, label %27

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.listop, ptr %2, i64 0, i32 7
  %13 = load ptr, ptr %12, align 8, !tbaa !81
  %14 = getelementptr inbounds %struct.op, ptr %13, i64 0, i32 4
  %15 = load i16, ptr %14, align 8
  %16 = and i16 %15, 511
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %18, label %22

18:                                               ; preds = %11
  %19 = getelementptr inbounds %struct.op, ptr %13, i64 0, i32 1
  %20 = load ptr, ptr %19, align 8, !tbaa !38
  %21 = icmp eq ptr %20, null
  br i1 %21, label %27, label %22

22:                                               ; preds = %11, %18
  %23 = phi ptr [ %20, %18 ], [ %13, %11 ]
  %24 = getelementptr inbounds %struct.op, ptr %23, i64 0, i32 5
  %25 = load i8, ptr %24, align 2, !tbaa !35
  %26 = or i8 %25, 32
  store i8 %26, ptr %24, align 2, !tbaa !35
  br label %27

27:                                               ; preds = %18, %22, %7, %1
  ret ptr %2
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_ck_tell(ptr noundef %0) local_unnamed_addr #4 {
  %2 = tail call ptr @Perl_ck_fun(ptr noundef %0)
  %3 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 5
  %4 = load i8, ptr %3, align 2, !tbaa !35
  %5 = and i8 %4, 4
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.listop, ptr %2, i64 0, i32 7
  %9 = load ptr, ptr %8, align 8, !tbaa !81
  %10 = getelementptr inbounds %struct.op, ptr %9, i64 0, i32 4
  %11 = load i16, ptr %10, align 8
  %12 = and i16 %11, 511
  %13 = icmp eq i16 %12, 0
  br i1 %13, label %14, label %21

14:                                               ; preds = %7
  %15 = getelementptr inbounds %struct.op, ptr %9, i64 0, i32 1
  %16 = load ptr, ptr %15, align 8, !tbaa !38
  %17 = icmp eq ptr %16, null
  %18 = select i1 %17, ptr %9, ptr %16
  %19 = getelementptr inbounds %struct.op, ptr %18, i64 0, i32 4
  %20 = load i16, ptr %19, align 8
  br label %21

21:                                               ; preds = %14, %7
  %22 = phi i16 [ %11, %7 ], [ %20, %14 ]
  %23 = phi ptr [ %9, %7 ], [ %18, %14 ]
  %24 = and i16 %22, 511
  %25 = icmp eq i16 %24, 14
  br i1 %25, label %26, label %30

26:                                               ; preds = %21
  %27 = getelementptr inbounds %struct.op, ptr %23, i64 0, i32 6
  %28 = load i8, ptr %27, align 1, !tbaa !33
  %29 = or i8 %28, 64
  store i8 %29, ptr %27, align 1, !tbaa !33
  br label %30

30:                                               ; preds = %21, %26, %1
  ret ptr %2
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_ck_each(ptr noundef %0) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 5
  %3 = load i8, ptr %2, align 2, !tbaa !35
  %4 = and i8 %3, 4
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.unop, ptr %0, i64 0, i32 7
  %8 = load ptr, ptr %7, align 8, !tbaa !36
  br label %9

9:                                                ; preds = %1, %6
  %10 = phi ptr [ %8, %6 ], [ null, %1 ]
  %11 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 4
  %12 = load i16, ptr %11, align 8
  %13 = and i16 %12, 511
  %14 = icmp eq i16 %13, 144
  %15 = icmp eq i16 %13, 146
  %16 = select i1 %15, i32 142, i32 143
  %17 = select i1 %14, i32 141, i32 %16
  %18 = select i1 %15, i32 382, i32 383
  %19 = select i1 %14, i32 381, i32 %18
  %20 = icmp eq ptr %10, null
  br i1 %20, label %63, label %21

21:                                               ; preds = %9
  %22 = getelementptr inbounds %struct.op, ptr %10, i64 0, i32 4
  %23 = load i16, ptr %22, align 8
  %24 = and i16 %23, 511
  %25 = zext i16 %24 to i32
  switch i32 %25, label %53 [
    i32 11, label %63
    i32 149, label %63
    i32 10, label %26
    i32 135, label %26
    i32 5, label %34
  ]

26:                                               ; preds = %21, %21
  %27 = trunc i32 %17 to i16
  %28 = and i16 %12, -512
  %29 = or i16 %28, %27
  store i16 %29, ptr %11, align 8
  %30 = zext i32 %17 to i64
  %31 = getelementptr inbounds [0 x ptr], ptr @PL_ppaddr, i64 0, i64 %30
  %32 = load ptr, ptr %31, align 8, !tbaa !6
  %33 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 2
  store ptr %32, ptr %33, align 8, !tbaa !78
  br label %63

34:                                               ; preds = %21
  %35 = getelementptr inbounds %struct.op, ptr %10, i64 0, i32 6
  %36 = load i8, ptr %35, align 1, !tbaa !33
  %37 = icmp eq i8 %36, 64
  br i1 %37, label %63, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct.svop, ptr %10, i64 0, i32 7
  %40 = load ptr, ptr %39, align 8, !tbaa !65
  %41 = getelementptr inbounds %struct.sv, ptr %40, i64 0, i32 2
  %42 = load i32, ptr %41, align 4, !tbaa !84
  %43 = and i32 %42, 2048
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %63, label %45

45:                                               ; preds = %38
  %46 = getelementptr inbounds %struct.sv, ptr %40, i64 0, i32 3
  %47 = load ptr, ptr %46, align 8, !tbaa !13
  %48 = getelementptr inbounds %struct.sv, ptr %47, i64 0, i32 2
  %49 = load i32, ptr %48, align 4, !tbaa !84
  %50 = and i32 %49, 255
  %51 = add nsw i32 %50, -11
  %52 = icmp ult i32 %51, 2
  br i1 %52, label %53, label %63

53:                                               ; preds = %45, %21
  %54 = trunc i32 %19 to i16
  %55 = and i16 %12, -512
  %56 = or i16 %55, %54
  store i16 %56, ptr %11, align 8
  %57 = zext i32 %19 to i64
  %58 = getelementptr inbounds [0 x ptr], ptr @PL_ppaddr, i64 0, i64 %57
  %59 = load ptr, ptr %58, align 8, !tbaa !6
  %60 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 2
  store ptr %59, ptr %60, align 8, !tbaa !78
  %61 = tail call ptr @Perl_scalar(ptr noundef nonnull %10)
  %62 = load i16, ptr %11, align 8
  br label %63

63:                                               ; preds = %45, %26, %53, %21, %21, %38, %34, %9
  %64 = phi i16 [ %12, %45 ], [ %29, %26 ], [ %62, %53 ], [ %12, %21 ], [ %12, %21 ], [ %12, %38 ], [ %12, %34 ], [ %12, %9 ]
  %65 = and i16 %64, 511
  %66 = zext i16 %65 to i32
  %67 = icmp eq i32 %19, %66
  br i1 %67, label %68, label %72

68:                                               ; preds = %63
  %69 = zext i32 %19 to i64
  %70 = getelementptr inbounds [0 x ptr], ptr @PL_op_desc, i64 0, i64 %69
  %71 = load ptr, ptr %70, align 8, !tbaa !6
  tail call void (i32, ptr, ...) @Perl_ck_warner_d(i32 noundef 56, ptr noundef nonnull @.str.195, ptr noundef %71) #29
  br label %74

72:                                               ; preds = %63
  %73 = tail call ptr @Perl_ck_fun(ptr noundef nonnull %0)
  br label %74

74:                                               ; preds = %72, %68
  %75 = phi ptr [ %0, %68 ], [ %73, %72 ]
  ret ptr %75
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_ck_length(ptr noundef %0) local_unnamed_addr #4 {
  %2 = tail call ptr @Perl_ck_fun(ptr noundef %0)
  %3 = tail call zeroext i1 @Perl_ckwarn(i32 noundef 28) #29
  br i1 %3, label %4, label %52

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 5
  %6 = load i8, ptr %5, align 2, !tbaa !35
  %7 = and i8 %6, 4
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %52, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.listop, ptr %2, i64 0, i32 7
  %11 = load ptr, ptr %10, align 8, !tbaa !81
  %12 = icmp eq ptr %11, null
  br i1 %12, label %52, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.op, ptr %11, i64 0, i32 4
  %15 = load i16, ptr %14, align 8
  %16 = and i16 %15, 511
  %17 = icmp eq i16 %16, 11
  %18 = icmp eq i16 %16, 149
  %19 = or i1 %17, %18
  %20 = zext i16 %16 to i32
  switch i32 %20, label %52 [
    i32 11, label %21
    i32 10, label %21
    i32 149, label %21
    i32 135, label %21
  ]

21:                                               ; preds = %13, %13, %13, %13
  %22 = icmp eq i16 %16, 10
  %23 = icmp eq i16 %16, 135
  %24 = or i1 %22, %23
  %25 = select i1 %24, i8 64, i8 37
  switch i16 %16, label %39 [
    i16 135, label %26
    i16 149, label %26
  ]

26:                                               ; preds = %21, %21
  %27 = getelementptr inbounds %struct.unop, ptr %11, i64 0, i32 7
  %28 = load ptr, ptr %27, align 8, !tbaa !36
  %29 = getelementptr inbounds %struct.op, ptr %28, i64 0, i32 4
  %30 = load i16, ptr %29, align 8
  %31 = and i16 %30, 511
  %32 = icmp eq i16 %31, 7
  br i1 %32, label %33, label %49

33:                                               ; preds = %26
  %34 = getelementptr inbounds %struct.svop, ptr %28, i64 0, i32 7
  %35 = load ptr, ptr %34, align 8, !tbaa !65
  %36 = icmp eq ptr %35, null
  br i1 %36, label %49, label %37

37:                                               ; preds = %33
  %38 = tail call ptr @Perl_varname(ptr noundef nonnull %35, i8 noundef signext %25, i64 noundef 0, ptr noundef null, i32 noundef 0, i32 noundef 1) #29
  br label %44

39:                                               ; preds = %21
  %40 = load ptr, ptr @PL_compcv, align 8, !tbaa !6
  %41 = getelementptr inbounds %struct.op, ptr %11, i64 0, i32 3
  %42 = load i64, ptr %41, align 8, !tbaa !34
  %43 = tail call ptr @Perl_varname(ptr noundef %40, i8 noundef signext %25, i64 noundef %42, ptr noundef null, i32 noundef 0, i32 noundef 1) #29
  br label %44

44:                                               ; preds = %37, %39
  %45 = phi ptr [ %43, %39 ], [ %38, %37 ]
  %46 = icmp eq ptr %45, null
  br i1 %46, label %49, label %47

47:                                               ; preds = %44
  %48 = select i1 %19, ptr @.str.197, ptr @.str.19
  tail call void (i32, ptr, ...) @Perl_warner(i32 noundef 28, ptr noundef nonnull @.str.196, ptr noundef nonnull %45, ptr noundef nonnull %48, ptr noundef nonnull %45) #29
  br label %52

49:                                               ; preds = %26, %33, %44
  switch i16 %16, label %51 [
    i16 149, label %50
    i16 11, label %50
  ]

50:                                               ; preds = %49, %49
  tail call void (i32, ptr, ...) @Perl_warner(i32 noundef 28, ptr noundef nonnull @.str.198) #29
  br label %52

51:                                               ; preds = %49
  tail call void (i32, ptr, ...) @Perl_warner(i32 noundef 28, ptr noundef nonnull @.str.199) #29
  br label %52

52:                                               ; preds = %4, %50, %51, %47, %9, %13, %1
  ret ptr %2
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @S_maybe_multideref(ptr noundef %0, ptr noundef %1, i64 noundef %2, i8 noundef zeroext %3) local_unnamed_addr #4 {
  %5 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 3
  %6 = getelementptr inbounds %struct.svop, ptr %0, i64 0, i32 7
  %7 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 4
  %8 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 2
  br label %9

9:                                                ; preds = %4, %445
  %10 = phi i8 [ %3, %4 ], [ %85, %445 ]
  %11 = phi i1 [ true, %4 ], [ false, %445 ]
  %12 = phi ptr [ null, %4 ], [ %446, %445 ]
  %13 = phi i8 [ 0, %4 ], [ %37, %445 ]
  %14 = phi i32 [ -1, %4 ], [ %310, %445 ]
  br i1 %11, label %16, label %15

15:                                               ; preds = %9
  store i64 0, ptr %12, align 8, !tbaa !13
  br label %16

16:                                               ; preds = %15, %9
  %17 = getelementptr inbounds %union.UNOP_AUX_item, ptr %12, i64 1
  switch i64 %2, label %447 [
    i64 9, label %18
    i64 13, label %18
    i64 2, label %19
    i64 6, label %19
    i64 12, label %25
    i64 10, label %25
    i64 5, label %26
    i64 3, label %26
    i64 8, label %33
    i64 1, label %34
  ]

18:                                               ; preds = %16, %16
  br label %19

19:                                               ; preds = %16, %16, %18
  %20 = phi i8 [ 0, %16 ], [ 0, %16 ], [ 1, %18 ]
  br i1 %11, label %23, label %21

21:                                               ; preds = %19
  %22 = load ptr, ptr %6, align 8, !tbaa !65
  store ptr %22, ptr %17, align 8, !tbaa !13
  store ptr null, ptr %6, align 8, !tbaa !65
  br label %23

23:                                               ; preds = %21, %19
  %24 = getelementptr inbounds %union.UNOP_AUX_item, ptr %12, i64 2
  br label %34

25:                                               ; preds = %16, %16
  br label %26

26:                                               ; preds = %16, %16, %25
  %27 = phi i8 [ 0, %16 ], [ 0, %16 ], [ 1, %25 ]
  br i1 %11, label %30, label %28

28:                                               ; preds = %26
  %29 = load i64, ptr %5, align 8, !tbaa !34
  store i64 %29, ptr %17, align 8, !tbaa !13
  br label %30

30:                                               ; preds = %28, %26
  %31 = phi i8 [ 1, %28 ], [ %13, %26 ]
  %32 = getelementptr inbounds %union.UNOP_AUX_item, ptr %12, i64 2
  br label %34

33:                                               ; preds = %16
  br label %34

34:                                               ; preds = %33, %16, %30, %23
  %35 = phi i8 [ 0, %16 ], [ 1, %33 ], [ %27, %30 ], [ %20, %23 ]
  %36 = phi ptr [ %17, %16 ], [ %17, %33 ], [ %32, %30 ], [ %24, %23 ]
  %37 = phi i8 [ %13, %16 ], [ %13, %33 ], [ %31, %30 ], [ %13, %23 ]
  br label %38

38:                                               ; preds = %329, %34
  %39 = phi i8 [ %10, %34 ], [ %85, %329 ]
  %40 = phi i32 [ %14, %34 ], [ %310, %329 ]
  %41 = phi ptr [ %1, %34 ], [ %309, %329 ]
  %42 = phi i64 [ %2, %34 ], [ %308, %329 ]
  %43 = phi ptr [ %12, %34 ], [ %206, %329 ]
  %44 = phi ptr [ %36, %34 ], [ %330, %329 ]
  %45 = phi i8 [ 0, %34 ], [ %236, %329 ]
  %46 = phi i8 [ 0, %34 ], [ %307, %329 ]
  %47 = phi i8 [ %35, %34 ], [ %306, %329 ]
  %48 = phi i32 [ 0, %34 ], [ %331, %329 ]
  %49 = phi ptr [ null, %34 ], [ %305, %329 ]
  %50 = phi ptr [ null, %34 ], [ %304, %329 ]
  br label %51

51:                                               ; preds = %342, %38
  %52 = phi i8 [ %39, %38 ], [ %85, %342 ]
  %53 = phi i32 [ %40, %38 ], [ %310, %342 ]
  %54 = phi ptr [ %41, %38 ], [ %309, %342 ]
  %55 = phi i64 [ %42, %38 ], [ %308, %342 ]
  %56 = phi ptr [ %44, %38 ], [ %206, %342 ]
  %57 = phi i8 [ %45, %38 ], [ %236, %342 ]
  %58 = phi i8 [ %46, %38 ], [ %307, %342 ]
  %59 = phi i8 [ %47, %38 ], [ %306, %342 ]
  %60 = phi i32 [ 0, %38 ], [ %344, %342 ]
  %61 = phi i32 [ %48, %38 ], [ %343, %342 ]
  %62 = phi ptr [ %49, %38 ], [ %305, %342 ]
  %63 = phi ptr [ %50, %38 ], [ %304, %342 ]
  %64 = icmp eq i32 %61, 0
  br i1 %64, label %81, label %65

65:                                               ; preds = %51
  %66 = getelementptr inbounds %struct.op, ptr %54, i64 0, i32 4
  %67 = load i16, ptr %66, align 8
  %68 = and i16 %67, 511
  switch i16 %68, label %447 [
    i16 135, label %69
    i16 149, label %69
  ]

69:                                               ; preds = %65, %65
  %70 = getelementptr inbounds %struct.op, ptr %54, i64 0, i32 5
  %71 = load i8, ptr %70, align 2, !tbaa !35
  %72 = icmp eq i8 %71, 22
  br i1 %72, label %73, label %447

73:                                               ; preds = %69
  %74 = getelementptr inbounds %struct.op, ptr %54, i64 0, i32 6
  %75 = load i8, ptr %74, align 1, !tbaa !33
  %76 = and i8 %75, 2
  %77 = and i8 %59, 1
  %78 = icmp eq i8 %77, 0
  %79 = select i1 %78, i64 4, i64 11
  %80 = load ptr, ptr %54, align 8, !tbaa !25
  br label %81

81:                                               ; preds = %73, %51
  %82 = phi ptr [ %54, %73 ], [ %62, %51 ]
  %83 = phi i64 [ %79, %73 ], [ %55, %51 ]
  %84 = phi ptr [ %80, %73 ], [ %54, %51 ]
  %85 = phi i8 [ %76, %73 ], [ %52, %51 ]
  %86 = icmp eq i32 %61, %53
  br i1 %86, label %204, label %87

87:                                               ; preds = %81
  %88 = getelementptr inbounds %struct.op, ptr %84, i64 0, i32 4
  %89 = load i16, ptr %88, align 8
  %90 = and i16 %89, 511
  %91 = zext i16 %90 to i32
  switch i32 %91, label %204 [
    i32 9, label %92
    i32 5, label %105
    i32 7, label %170
  ]

92:                                               ; preds = %87
  %93 = getelementptr inbounds %struct.op, ptr %84, i64 0, i32 5
  %94 = load i8, ptr %93, align 2, !tbaa !35
  %95 = and i8 %94, 51
  %96 = icmp eq i8 %95, 2
  br i1 %96, label %97, label %204

97:                                               ; preds = %92
  %98 = getelementptr inbounds %struct.op, ptr %84, i64 0, i32 6
  %99 = load i8, ptr %98, align 1, !tbaa !33
  %100 = icmp eq i8 %99, 0
  br i1 %100, label %101, label %204

101:                                              ; preds = %97
  br i1 %11, label %198, label %102

102:                                              ; preds = %101
  %103 = getelementptr inbounds %struct.op, ptr %84, i64 0, i32 3
  %104 = load i64, ptr %103, align 8, !tbaa !34
  store i64 %104, ptr %56, align 8, !tbaa !13
  br label %198

105:                                              ; preds = %87
  %106 = and i8 %59, 1
  %107 = icmp eq i8 %106, 0
  %108 = getelementptr inbounds %struct.svop, ptr %84, i64 0, i32 7
  %109 = load ptr, ptr %108, align 8, !tbaa !65
  %110 = getelementptr inbounds %struct.sv, ptr %109, i64 0, i32 2
  %111 = load i32, ptr %110, align 4, !tbaa !84
  br i1 %107, label %137, label %112

112:                                              ; preds = %105
  %113 = and i32 %111, 1792
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %204, label %115

115:                                              ; preds = %112
  br i1 %11, label %198, label %116

116:                                              ; preds = %115
  %117 = load ptr, ptr %84, align 8, !tbaa !25
  %118 = getelementptr inbounds %struct.op, ptr %117, i64 0, i32 4
  %119 = load i16, ptr %118, align 8
  %120 = and i16 %119, 511
  %121 = icmp eq i16 %120, 150
  br i1 %121, label %122, label %134

122:                                              ; preds = %116
  %123 = getelementptr inbounds %struct.op, ptr %117, i64 0, i32 6
  %124 = load i8, ptr %123, align 1, !tbaa !33
  %125 = icmp sgt i8 %124, -1
  br i1 %125, label %126, label %133

126:                                              ; preds = %122
  %127 = getelementptr inbounds %struct.binop, ptr %117, i64 0, i32 7
  %128 = load ptr, ptr %127, align 8, !tbaa !106
  %129 = getelementptr inbounds %struct.unop, ptr %128, i64 0, i32 4
  %130 = load i16, ptr %129, align 8
  %131 = and i16 %130, 511
  %132 = icmp eq i16 %131, 149
  br i1 %132, label %134, label %133

133:                                              ; preds = %126, %122
  br label %134

134:                                              ; preds = %116, %133, %126
  %135 = phi ptr [ null, %133 ], [ %128, %126 ], [ null, %116 ]
  tail call void @S_check_hash_fields_and_hekify(ptr noundef %135, ptr noundef nonnull %84)
  %136 = load ptr, ptr %108, align 8, !tbaa !65
  store ptr %136, ptr %56, align 8, !tbaa !13
  br label %167

137:                                              ; preds = %105
  %138 = and i32 %111, 256
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %204, label %140

140:                                              ; preds = %137
  %141 = and i32 %111, 2097408
  %142 = icmp eq i32 %141, 256
  br i1 %142, label %143, label %147

143:                                              ; preds = %140
  %144 = load ptr, ptr %109, align 8, !tbaa !85
  %145 = getelementptr inbounds %struct.xpviv, ptr %144, i64 0, i32 4
  %146 = load i64, ptr %145, align 8, !tbaa !13
  br label %149

147:                                              ; preds = %140
  %148 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %109, i32 noundef 2) #29
  br label %149

149:                                              ; preds = %147, %143
  %150 = phi i64 [ %146, %143 ], [ %148, %147 ]
  %151 = icmp sgt i64 %150, -129
  %152 = select i1 %64, i1 %151, i1 false
  %153 = icmp slt i64 %150, 128
  %154 = select i1 %152, i1 %153, i1 false
  %155 = add i64 %83, -5
  %156 = icmp ult i64 %155, 2
  %157 = select i1 %154, i1 %156, i1 false
  %158 = select i1 %157, i8 1, i8 %57
  br i1 %11, label %198, label %159

159:                                              ; preds = %149
  store i64 %150, ptr %56, align 8, !tbaa !13
  %160 = load ptr, ptr %108, align 8, !tbaa !65
  %161 = getelementptr inbounds %struct.sv, ptr %160, i64 0, i32 1
  %162 = load i32, ptr %161, align 8, !tbaa !42
  %163 = icmp ugt i32 %162, 1
  br i1 %163, label %164, label %166

164:                                              ; preds = %159
  %165 = add i32 %162, -1
  store i32 %165, ptr %161, align 8, !tbaa !42
  br label %167

166:                                              ; preds = %159
  tail call void @Perl_sv_free2(ptr noundef nonnull %160, i32 noundef %162) #29
  br label %167

167:                                              ; preds = %166, %164, %134
  %168 = phi i8 [ %57, %134 ], [ %158, %164 ], [ %158, %166 ]
  %169 = getelementptr inbounds %struct.svop, ptr %84, i64 0, i32 7
  store ptr null, ptr %169, align 8, !tbaa !65
  br label %198

170:                                              ; preds = %87
  %171 = getelementptr inbounds %struct.op, ptr %84, i64 0, i32 5
  %172 = load i8, ptr %171, align 2, !tbaa !35
  %173 = and i8 %172, 127
  %174 = icmp eq i8 %173, 2
  br i1 %174, label %175, label %204

175:                                              ; preds = %170
  %176 = getelementptr inbounds %struct.op, ptr %84, i64 0, i32 6
  %177 = load i8, ptr %176, align 1, !tbaa !33
  %178 = icmp eq i8 %177, 0
  br i1 %178, label %179, label %204

179:                                              ; preds = %175
  %180 = load ptr, ptr %84, align 8, !tbaa !25
  %181 = getelementptr inbounds %struct.op, ptr %180, i64 0, i32 4
  %182 = load i16, ptr %181, align 8
  %183 = and i16 %182, 511
  %184 = icmp eq i16 %183, 15
  br i1 %184, label %185, label %204

185:                                              ; preds = %179
  %186 = getelementptr inbounds %struct.op, ptr %180, i64 0, i32 5
  %187 = load i8, ptr %186, align 2, !tbaa !35
  %188 = and i8 %187, -9
  %189 = icmp eq i8 %188, 6
  br i1 %189, label %190, label %204

190:                                              ; preds = %185
  %191 = getelementptr inbounds %struct.op, ptr %180, i64 0, i32 6
  %192 = load i8, ptr %191, align 1, !tbaa !33
  %193 = icmp ult i8 %192, 4
  br i1 %193, label %194, label %204

194:                                              ; preds = %190
  br i1 %11, label %198, label %195

195:                                              ; preds = %194
  %196 = getelementptr inbounds %struct.svop, ptr %84, i64 0, i32 7
  %197 = load ptr, ptr %196, align 8, !tbaa !65
  store ptr %197, ptr %56, align 8, !tbaa !13
  store ptr null, ptr %196, align 8, !tbaa !65
  br label %198

198:                                              ; preds = %194, %195, %167, %149, %115, %101, %102
  %199 = phi ptr [ %84, %102 ], [ %84, %101 ], [ %84, %115 ], [ %84, %149 ], [ %84, %167 ], [ %180, %195 ], [ %180, %194 ]
  %200 = phi i8 [ %57, %102 ], [ %57, %101 ], [ %57, %115 ], [ %158, %149 ], [ %168, %167 ], [ %57, %195 ], [ %57, %194 ]
  %201 = phi i64 [ 32, %102 ], [ 32, %101 ], [ 16, %115 ], [ 16, %149 ], [ 16, %167 ], [ 48, %195 ], [ 48, %194 ]
  %202 = getelementptr inbounds %union.UNOP_AUX_item, ptr %56, i64 1
  %203 = load ptr, ptr %199, align 8, !tbaa !25
  br label %204

204:                                              ; preds = %198, %137, %87, %97, %92, %112, %175, %170, %179, %190, %185, %81
  %205 = phi i8 [ %57, %87 ], [ %57, %170 ], [ %57, %175 ], [ %57, %179 ], [ %57, %185 ], [ %57, %190 ], [ %57, %112 ], [ %57, %97 ], [ %57, %92 ], [ %57, %81 ], [ %57, %137 ], [ %200, %198 ]
  %206 = phi ptr [ %56, %87 ], [ %56, %170 ], [ %56, %175 ], [ %56, %179 ], [ %56, %185 ], [ %56, %190 ], [ %56, %112 ], [ %56, %97 ], [ %56, %92 ], [ %56, %81 ], [ %56, %137 ], [ %202, %198 ]
  %207 = phi i1 [ true, %87 ], [ true, %170 ], [ true, %175 ], [ true, %179 ], [ true, %185 ], [ true, %190 ], [ true, %112 ], [ true, %97 ], [ true, %92 ], [ true, %81 ], [ true, %137 ], [ false, %198 ]
  %208 = phi i64 [ 0, %87 ], [ 0, %170 ], [ 0, %175 ], [ 0, %179 ], [ 0, %185 ], [ 0, %190 ], [ 0, %112 ], [ 0, %97 ], [ 0, %92 ], [ 0, %81 ], [ 0, %137 ], [ %201, %198 ]
  %209 = phi ptr [ %84, %87 ], [ %84, %170 ], [ %84, %175 ], [ %84, %179 ], [ %84, %185 ], [ %84, %190 ], [ %84, %112 ], [ %84, %97 ], [ %84, %92 ], [ %84, %81 ], [ %84, %137 ], [ %203, %198 ]
  %210 = or i64 %208, %83
  %211 = getelementptr inbounds %struct.op, ptr %209, i64 0, i32 4
  %212 = load i16, ptr %211, align 8
  %213 = and i16 %212, 511
  %214 = icmp eq i16 %213, 0
  br i1 %214, label %215, label %219

215:                                              ; preds = %204
  %216 = load ptr, ptr %209, align 8, !tbaa !25
  %217 = getelementptr inbounds %struct.op, ptr %216, i64 0, i32 4
  %218 = load i16, ptr %217, align 8
  br label %219

219:                                              ; preds = %215, %204
  %220 = phi i16 [ %218, %215 ], [ %212, %204 ]
  %221 = phi ptr [ %216, %215 ], [ %209, %204 ]
  %222 = and i16 %220, 511
  switch i16 %222, label %234 [
    i16 138, label %223
    i16 150, label %223
  ]

223:                                              ; preds = %219, %219
  %224 = zext i16 %222 to i64
  %225 = getelementptr inbounds [0 x ptr], ptr @PL_check, i64 0, i64 %224
  %226 = load ptr, ptr %225, align 8, !tbaa !6
  %227 = icmp eq ptr %226, @Perl_ck_null
  br i1 %227, label %228, label %447

228:                                              ; preds = %223
  %229 = icmp eq i16 %222, 138
  br i1 %229, label %230, label %234

230:                                              ; preds = %228
  %231 = getelementptr inbounds %struct.op, ptr %221, i64 0, i32 6
  %232 = load i8, ptr %231, align 1, !tbaa !33
  %233 = icmp ult i8 %232, 8
  br i1 %233, label %235, label %234

234:                                              ; preds = %219, %230, %228
  br label %235

235:                                              ; preds = %234, %230
  %236 = phi i8 [ 0, %234 ], [ %205, %230 ]
  br i1 %207, label %300, label %237

237:                                              ; preds = %235
  switch i16 %222, label %300 [
    i16 138, label %244
    i16 150, label %244
    i16 148, label %238
    i16 147, label %241
  ]

238:                                              ; preds = %237
  %239 = getelementptr inbounds %struct.op, ptr %221, i64 0, i32 6
  %240 = load i8, ptr %239, align 1, !tbaa !33
  br label %257

241:                                              ; preds = %237
  %242 = getelementptr inbounds %struct.op, ptr %221, i64 0, i32 6
  %243 = load i8, ptr %242, align 1, !tbaa !33
  br label %260

244:                                              ; preds = %237, %237
  %245 = getelementptr inbounds %struct.op, ptr %221, i64 0, i32 6
  %246 = load i8, ptr %245, align 1, !tbaa !33
  %247 = and i8 %246, 48
  switch i8 %247, label %256 [
    i8 32, label %248
    i8 16, label %248
  ]

248:                                              ; preds = %244, %244
  %249 = getelementptr inbounds %struct.op, ptr %221, i64 0, i32 5
  %250 = load i8, ptr %249, align 2, !tbaa !35
  %251 = and i8 %250, -9
  %252 = icmp eq i8 %251, 38
  %253 = and i8 %246, -52
  %254 = icmp eq i8 %253, 0
  %255 = and i1 %252, %254
  br i1 %255, label %290, label %300

256:                                              ; preds = %244
  switch i16 %222, label %286 [
    i16 148, label %257
    i16 147, label %260
  ]

257:                                              ; preds = %238, %256
  %258 = phi i8 [ %240, %238 ], [ %246, %256 ]
  %259 = icmp ult i8 %258, 2
  br i1 %259, label %296, label %300

260:                                              ; preds = %241, %256
  %261 = phi i8 [ %243, %241 ], [ %246, %256 ]
  %262 = icmp ult i8 %261, 2
  %263 = getelementptr inbounds %struct.unop, ptr %221, i64 0, i32 7
  %264 = load ptr, ptr %263, align 8, !tbaa !36
  %265 = icmp eq ptr %264, null
  br i1 %265, label %288, label %266

266:                                              ; preds = %260
  %267 = getelementptr inbounds %struct.op, ptr %264, i64 0, i32 4
  %268 = load i16, ptr %267, align 8
  %269 = and i16 %268, 511
  %270 = icmp eq i16 %269, 0
  br i1 %270, label %271, label %274

271:                                              ; preds = %266
  %272 = getelementptr inbounds %struct.op, ptr %264, i64 0, i32 3
  %273 = load i64, ptr %272, align 8, !tbaa !34
  br label %276

274:                                              ; preds = %266
  %275 = zext i16 %269 to i64
  br label %276

276:                                              ; preds = %274, %271
  %277 = phi i64 [ %273, %271 ], [ %275, %274 ]
  %278 = icmp ne i64 %277, 138
  %279 = xor i1 %262, true
  %280 = select i1 %278, i1 true, i1 %279
  %281 = select i1 %278, i1 %262, i1 false
  br i1 %280, label %288, label %282

282:                                              ; preds = %276
  %283 = getelementptr inbounds %struct.op, ptr %221, i64 0, i32 5
  %284 = load i8, ptr %283, align 2, !tbaa !35
  %285 = icmp slt i8 %284, 0
  br i1 %285, label %296, label %300

286:                                              ; preds = %256
  %287 = icmp eq i8 %247, 48
  br i1 %287, label %300, label %296

288:                                              ; preds = %276, %260
  %289 = phi i1 [ %281, %276 ], [ %262, %260 ]
  br i1 %289, label %296, label %300

290:                                              ; preds = %248
  %291 = icmp eq ptr %63, null
  %292 = select i1 %291, ptr %221, ptr %63
  %293 = icmp eq i8 %247, 32
  %294 = zext i1 %293 to i8
  %295 = load ptr, ptr %221, align 8, !tbaa !25
  br label %303

296:                                              ; preds = %257, %288, %286, %282
  %297 = icmp eq ptr %63, null
  %298 = select i1 %297, ptr %221, ptr %63
  %299 = or i64 %210, 64
  br label %303

300:                                              ; preds = %237, %248, %235, %282, %286, %257, %288
  br i1 %64, label %447, label %301

301:                                              ; preds = %300
  %302 = or i64 %210, 64
  br label %303

303:                                              ; preds = %290, %296, %301
  %304 = phi ptr [ %292, %290 ], [ %298, %296 ], [ %63, %301 ]
  %305 = phi ptr [ %221, %290 ], [ %221, %296 ], [ %82, %301 ]
  %306 = phi i8 [ %294, %290 ], [ %59, %296 ], [ %59, %301 ]
  %307 = phi i8 [ %58, %290 ], [ 1, %296 ], [ 1, %301 ]
  %308 = phi i64 [ %210, %290 ], [ %299, %296 ], [ %302, %301 ]
  %309 = phi ptr [ %295, %290 ], [ %221, %296 ], [ %221, %301 ]
  %310 = phi i32 [ %53, %290 ], [ %53, %296 ], [ %61, %301 ]
  br i1 %11, label %311, label %316

311:                                              ; preds = %303
  %312 = add nsw i32 %61, 1
  %313 = mul i32 %60, 7
  %314 = add i32 %313, 14
  %315 = icmp sgt i32 %314, 64
  br i1 %315, label %325, label %336

316:                                              ; preds = %303
  %317 = mul i32 %60, 7
  %318 = zext i32 %317 to i64
  %319 = shl i64 %308, %318
  %320 = load i64, ptr %43, align 8, !tbaa !13
  %321 = or i64 %320, %319
  store i64 %321, ptr %43, align 8, !tbaa !13
  %322 = add nsw i32 %61, 1
  %323 = add i32 %317, 14
  %324 = icmp sgt i32 %323, 64
  br i1 %324, label %332, label %339

325:                                              ; preds = %311
  %326 = getelementptr inbounds %union.UNOP_AUX_item, ptr %206, i64 1
  %327 = and i8 %307, 1
  %328 = icmp eq i8 %327, 0
  br i1 %328, label %329, label %431

329:                                              ; preds = %325, %332
  %330 = phi ptr [ %326, %325 ], [ %333, %332 ]
  %331 = phi i32 [ %312, %325 ], [ %322, %332 ]
  br label %38, !llvm.loop !328

332:                                              ; preds = %316
  store i64 0, ptr %206, align 8, !tbaa !13
  %333 = getelementptr inbounds %union.UNOP_AUX_item, ptr %206, i64 1
  %334 = and i8 %307, 1
  %335 = icmp eq i8 %334, 0
  br i1 %335, label %329, label %345

336:                                              ; preds = %311
  %337 = and i8 %307, 1
  %338 = icmp eq i8 %337, 0
  br i1 %338, label %342, label %431

339:                                              ; preds = %316
  %340 = and i8 %307, 1
  %341 = icmp eq i8 %340, 0
  br i1 %341, label %342, label %345

342:                                              ; preds = %339, %336
  %343 = phi i32 [ %322, %339 ], [ %312, %336 ]
  %344 = add nuw nsw i32 %60, 1
  br label %51, !llvm.loop !328

345:                                              ; preds = %332, %339
  %346 = tail call ptr @Perl_newUNOP_AUX(i32 noundef 153, i32 noundef 0, ptr noundef null, ptr noundef %12)
  %347 = icmp eq i32 %310, -1
  br i1 %347, label %351, label %348

348:                                              ; preds = %345
  %349 = getelementptr inbounds %struct.op, ptr %346, i64 0, i32 6
  %350 = load i8, ptr %349, align 1, !tbaa !33
  br label %366

351:                                              ; preds = %345
  %352 = getelementptr inbounds %struct.op, ptr %309, i64 0, i32 5
  %353 = load i8, ptr %352, align 2, !tbaa !35
  %354 = shl nuw i8 %306, 7
  %355 = or i8 %354, 35
  %356 = and i8 %353, %355
  %357 = getelementptr inbounds %struct.op, ptr %346, i64 0, i32 5
  store i8 %356, ptr %357, align 2, !tbaa !35
  %358 = getelementptr inbounds %struct.op, ptr %309, i64 0, i32 4
  %359 = load i16, ptr %358, align 8
  %360 = and i16 %359, 511
  switch i16 %360, label %362 [
    i16 148, label %366
    i16 147, label %361
  ]

361:                                              ; preds = %351
  br label %366

362:                                              ; preds = %351
  %363 = getelementptr inbounds %struct.op, ptr %309, i64 0, i32 6
  %364 = load i8, ptr %363, align 1, !tbaa !33
  %365 = and i8 %364, -56
  br label %366

366:                                              ; preds = %351, %348, %362, %361
  %367 = phi i8 [ %350, %348 ], [ %365, %362 ], [ 32, %361 ], [ 16, %351 ]
  %368 = getelementptr inbounds %struct.op, ptr %346, i64 0, i32 6
  %369 = or i8 %367, %85
  store i8 %369, ptr %368, align 1, !tbaa !33
  %370 = and i8 %37, 1
  %371 = icmp eq i8 %370, 0
  br i1 %371, label %373, label %372

372:                                              ; preds = %366
  store i64 0, ptr %5, align 8, !tbaa !34
  br label %373

373:                                              ; preds = %372, %366
  switch i64 %2, label %383 [
    i64 8, label %374
    i64 1, label %374
  ]

374:                                              ; preds = %373, %373
  %375 = getelementptr inbounds %struct.op, ptr %304, i64 0, i32 4
  %376 = load i16, ptr %375, align 8
  %377 = and i16 %376, 511
  %378 = add nsw i16 %377, -147
  %379 = icmp ult i16 %378, 2
  br i1 %379, label %380, label %393

380:                                              ; preds = %374
  %381 = getelementptr inbounds %struct.unop, ptr %304, i64 0, i32 7
  %382 = load ptr, ptr %381, align 8, !tbaa !36
  br label %393

383:                                              ; preds = %373, %389
  %384 = phi ptr [ %391, %389 ], [ %304, %373 ]
  %385 = getelementptr inbounds %struct.op, ptr %384, i64 0, i32 5
  %386 = load i8, ptr %385, align 2, !tbaa !35
  %387 = and i8 %386, 4
  %388 = icmp eq i8 %387, 0
  br i1 %388, label %393, label %389

389:                                              ; preds = %383
  %390 = getelementptr inbounds %struct.unop, ptr %384, i64 0, i32 7
  %391 = load ptr, ptr %390, align 8, !tbaa !36
  %392 = icmp eq ptr %391, %0
  br i1 %392, label %393, label %383, !llvm.loop !329

393:                                              ; preds = %389, %383, %374, %380
  %394 = phi ptr [ %382, %380 ], [ %304, %374 ], [ %384, %383 ], [ %384, %389 ]
  %395 = tail call ptr @Perl_op_sibling_splice(ptr noundef %394, ptr noundef null, i32 noundef 1, ptr noundef null)
  %396 = tail call ptr @Perl_op_sibling_splice(ptr noundef %346, ptr noundef null, i32 noundef 0, ptr noundef %395)
  %397 = load i16, ptr %7, align 8
  %398 = and i16 %397, 511
  %399 = icmp eq i16 %398, 0
  br i1 %399, label %406, label %400

400:                                              ; preds = %393
  tail call void @Perl_op_clear(ptr noundef nonnull %0)
  %401 = load i16, ptr %7, align 8
  %402 = and i16 %401, 511
  %403 = zext i16 %402 to i64
  store i64 %403, ptr %5, align 8, !tbaa !34
  %404 = and i16 %401, -512
  store i16 %404, ptr %7, align 8
  %405 = load ptr, ptr @PL_ppaddr, align 8, !tbaa !6
  store ptr %405, ptr %8, align 8, !tbaa !78
  br label %406

406:                                              ; preds = %393, %400
  store ptr %346, ptr %0, align 8, !tbaa !25
  br i1 %347, label %407, label %409

407:                                              ; preds = %406
  %408 = load ptr, ptr %309, align 8, !tbaa !25
  br label %409

409:                                              ; preds = %406, %407
  %410 = phi ptr [ %408, %407 ], [ %309, %406 ]
  store ptr %410, ptr %346, align 8, !tbaa !25
  %411 = tail call ptr @Perl_op_sibling_splice(ptr noundef %305, ptr noundef null, i32 noundef -1, ptr noundef nonnull %346)
  %412 = icmp eq ptr %411, null
  br i1 %412, label %418, label %413

413:                                              ; preds = %409, %413
  %414 = phi ptr [ %416, %413 ], [ %411, %409 ]
  %415 = getelementptr inbounds %struct.op, ptr %414, i64 0, i32 1
  %416 = load ptr, ptr %415, align 8, !tbaa !38
  tail call void @Perl_op_free(ptr noundef nonnull %414)
  %417 = icmp eq ptr %416, null
  br i1 %417, label %418, label %413, !llvm.loop !330

418:                                              ; preds = %413, %409
  %419 = getelementptr inbounds %struct.op, ptr %305, i64 0, i32 4
  %420 = load i16, ptr %419, align 8
  %421 = and i16 %420, 511
  %422 = icmp eq i16 %421, 0
  br i1 %422, label %445, label %423

423:                                              ; preds = %418
  tail call void @Perl_op_clear(ptr noundef nonnull %305)
  %424 = load i16, ptr %419, align 8
  %425 = and i16 %424, 511
  %426 = zext i16 %425 to i64
  %427 = getelementptr inbounds %struct.op, ptr %305, i64 0, i32 3
  store i64 %426, ptr %427, align 8, !tbaa !34
  %428 = and i16 %424, -512
  store i16 %428, ptr %419, align 8
  %429 = load ptr, ptr @PL_ppaddr, align 8, !tbaa !6
  %430 = getelementptr inbounds %struct.op, ptr %305, i64 0, i32 2
  store ptr %429, ptr %430, align 8, !tbaa !78
  br label %445

431:                                              ; preds = %325, %336
  %432 = phi ptr [ %206, %336 ], [ %326, %325 ]
  %433 = and i8 %236, 1
  %434 = icmp eq i8 %433, 0
  %435 = icmp ne i32 %61, 0
  %436 = or i1 %434, %435
  br i1 %436, label %437, label %447

437:                                              ; preds = %431
  %438 = ptrtoint ptr %432 to i64
  %439 = ptrtoint ptr %12 to i64
  %440 = sub i64 %438, %439
  %441 = ashr exact i64 %440, 3
  %442 = add i64 %440, 8
  %443 = tail call noalias ptr @malloc(i64 noundef %442) #32
  store i64 %441, ptr %443, align 8, !tbaa !13
  %444 = getelementptr inbounds %union.UNOP_AUX_item, ptr %443, i64 1
  br label %445

445:                                              ; preds = %437, %423, %418
  %446 = phi ptr [ %444, %437 ], [ %12, %423 ], [ %12, %418 ]
  br i1 %11, label %9, label %447, !llvm.loop !331

447:                                              ; preds = %16, %431, %445, %300, %223, %69, %65
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_rpeep(ptr noundef %0) local_unnamed_addr #4 {
  %2 = alloca [4 x ptr], align 16
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %2) #29
  %3 = icmp eq ptr %0, null
  br i1 %3, label %1765, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 4
  %6 = load i16, ptr %5, align 8
  %7 = and i16 %6, 512
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %1765

9:                                                ; preds = %4
  tail call void @Perl_push_scope() #29
  %10 = load ptr, ptr @PL_op, align 8, !tbaa !6
  tail call void @Perl_save_pushptr(ptr noundef %10, i32 noundef 18) #29
  tail call void @Perl_save_vptr(ptr noundef nonnull @PL_curcop) #29
  br label %11

11:                                               ; preds = %9, %1756
  %12 = phi ptr [ %0, %9 ], [ %1762, %1756 ]
  %13 = phi ptr [ null, %9 ], [ %1760, %1756 ]
  %14 = phi ptr [ null, %9 ], [ %1759, %1756 ]
  %15 = phi i32 [ 0, %9 ], [ %1758, %1756 ]
  %16 = phi i32 [ -1, %9 ], [ %1757, %1756 ]
  %17 = getelementptr inbounds %struct.op, ptr %12, i64 0, i32 4
  %18 = load i16, ptr %17, align 8
  %19 = and i16 %18, 512
  %20 = icmp eq i16 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %11
  %22 = getelementptr inbounds %struct.op, ptr %12, i64 0, i32 4
  %23 = load i16, ptr %22, align 8
  br label %50

24:                                               ; preds = %1756, %11
  %25 = phi i32 [ %1757, %1756 ], [ %16, %11 ]
  %26 = phi i32 [ %1758, %1756 ], [ %15, %11 ]
  %27 = icmp sgt i32 %25, -1
  br i1 %27, label %28, label %1764

28:                                               ; preds = %24, %48
  %29 = phi i32 [ %30, %48 ], [ %25, %24 ]
  %30 = add nsw i32 %29, -1
  %31 = add nsw i32 %29, %26
  %32 = srem i32 %31, 4
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds [4 x ptr], ptr %2, i64 0, i64 %33
  %35 = load ptr, ptr %34, align 8, !tbaa !6
  %36 = load ptr, ptr @PL_rpeepp, align 8, !tbaa !6
  %37 = load ptr, ptr %35, align 8, !tbaa !6
  tail call void %36(ptr noundef %37) #29
  %38 = load ptr, ptr %35, align 8, !tbaa !6
  %39 = icmp eq ptr %38, null
  br i1 %39, label %48, label %40

40:                                               ; preds = %28, %45
  %41 = phi ptr [ %46, %45 ], [ %38, %28 ]
  %42 = getelementptr inbounds %struct.op, ptr %41, i64 0, i32 4
  %43 = load i16, ptr %42, align 8
  %44 = and i16 %43, 511
  switch i16 %44, label %48 [
    i16 0, label %45
    i16 198, label %45
    i16 2, label %45
    i16 192, label %45
  ]

45:                                               ; preds = %40, %40, %40, %40
  %46 = load ptr, ptr %41, align 8, !tbaa !25
  store ptr %46, ptr %35, align 8, !tbaa !6
  %47 = icmp eq ptr %46, null
  br i1 %47, label %48, label %40, !llvm.loop !122

48:                                               ; preds = %40, %45, %28
  %49 = icmp sgt i32 %29, 0
  br i1 %49, label %28, label %1764, !llvm.loop !332

50:                                               ; preds = %21, %882
  %51 = phi i16 [ %883, %882 ], [ %23, %21 ]
  %52 = phi ptr [ null, %882 ], [ %14, %21 ]
  %53 = phi ptr [ %52, %882 ], [ %13, %21 ]
  %54 = phi ptr [ %53, %882 ], [ %12, %21 ]
  %55 = getelementptr inbounds %struct.op, ptr %54, i64 0, i32 4
  %56 = or i16 %51, 512
  store i16 %56, ptr %55, align 8
  store ptr %54, ptr @PL_op, align 8, !tbaa !6
  %57 = and i16 %51, 511
  %58 = zext i16 %57 to i32
  switch i32 %58, label %118 [
    i32 7, label %59
    i32 9, label %82
    i32 10, label %96
    i32 11, label %96
    i32 135, label %104
    i32 149, label %104
  ]

59:                                               ; preds = %50
  %60 = load ptr, ptr %54, align 8, !tbaa !25
  %61 = getelementptr inbounds %struct.op, ptr %60, i64 0, i32 4
  %62 = load i16, ptr %61, align 8
  %63 = and i16 %62, 511
  switch i16 %63, label %118 [
    i16 135, label %107
    i16 149, label %64
    i16 15, label %65
  ]

64:                                               ; preds = %59
  br label %107

65:                                               ; preds = %59
  %66 = getelementptr inbounds %struct.op, ptr %60, i64 0, i32 5
  %67 = load i8, ptr %66, align 2, !tbaa !35
  %68 = and i8 %67, -77
  %69 = icmp eq i8 %68, 34
  br i1 %69, label %70, label %118

70:                                               ; preds = %65
  %71 = getelementptr inbounds %struct.op, ptr %60, i64 0, i32 6
  %72 = load i8, ptr %71, align 1, !tbaa !33
  %73 = icmp ult i8 %72, 64
  br i1 %73, label %74, label %118

74:                                               ; preds = %70
  %75 = and i8 %72, 48
  switch i8 %75, label %118 [
    i8 16, label %76
    i8 32, label %76
  ]

76:                                               ; preds = %74, %74
  %77 = load ptr, ptr %60, align 8, !tbaa !25
  %78 = getelementptr inbounds %struct.op, ptr %77, i64 0, i32 4
  %79 = load i16, ptr %78, align 8
  %80 = and i16 %79, 511
  switch i16 %80, label %118 [
    i16 135, label %107
    i16 149, label %81
  ]

81:                                               ; preds = %76
  br label %107

82:                                               ; preds = %50
  %83 = getelementptr inbounds %struct.op, ptr %54, i64 0, i32 5
  %84 = load i8, ptr %83, align 2, !tbaa !35
  %85 = and i8 %84, -77
  %86 = icmp eq i8 %85, 34
  br i1 %86, label %87, label %118

87:                                               ; preds = %82
  %88 = getelementptr inbounds %struct.op, ptr %54, i64 0, i32 6
  %89 = load i8, ptr %88, align 1, !tbaa !33
  switch i8 %89, label %118 [
    i8 16, label %90
    i8 32, label %90
  ]

90:                                               ; preds = %87, %87
  %91 = load ptr, ptr %54, align 8, !tbaa !25
  %92 = getelementptr inbounds %struct.op, ptr %91, i64 0, i32 4
  %93 = load i16, ptr %92, align 8
  %94 = and i16 %93, 511
  switch i16 %94, label %118 [
    i16 135, label %107
    i16 149, label %95
  ]

95:                                               ; preds = %90
  br label %107

96:                                               ; preds = %50, %50
  %97 = getelementptr inbounds %struct.op, ptr %54, i64 0, i32 5
  %98 = load i8, ptr %97, align 2, !tbaa !35
  %99 = icmp eq i8 %98, 18
  br i1 %99, label %100, label %118

100:                                              ; preds = %96
  %101 = icmp eq i16 %57, 10
  %102 = select i1 %101, i64 5, i64 12
  %103 = load ptr, ptr %54, align 8, !tbaa !25
  tail call void @S_maybe_multideref(ptr noundef nonnull %54, ptr noundef %103, i64 noundef %102, i8 noundef zeroext 0)
  br label %118

104:                                              ; preds = %50, %50
  %105 = icmp eq i16 %57, 135
  %106 = select i1 %105, i64 1, i64 8
  br label %107

107:                                              ; preds = %90, %76, %59, %104, %95, %81, %64
  %108 = phi ptr [ %54, %104 ], [ %91, %95 ], [ %60, %64 ], [ %77, %81 ], [ %60, %59 ], [ %77, %76 ], [ %91, %90 ]
  %109 = phi i64 [ %106, %104 ], [ 10, %95 ], [ 13, %64 ], [ 9, %81 ], [ 6, %59 ], [ 2, %76 ], [ 3, %90 ]
  %110 = getelementptr inbounds %struct.op, ptr %108, i64 0, i32 5
  %111 = load i8, ptr %110, align 2, !tbaa !35
  %112 = icmp eq i8 %111, 22
  br i1 %112, label %113, label %118

113:                                              ; preds = %107
  %114 = getelementptr inbounds %struct.op, ptr %108, i64 0, i32 6
  %115 = load i8, ptr %114, align 1, !tbaa !33
  %116 = and i8 %115, 2
  %117 = load ptr, ptr %108, align 8, !tbaa !25
  tail call void @S_maybe_multideref(ptr noundef nonnull %54, ptr noundef %117, i64 noundef %109, i8 noundef zeroext %116)
  br label %118

118:                                              ; preds = %90, %87, %76, %74, %59, %50, %107, %96, %82, %70, %65, %113, %100
  %119 = load i16, ptr %55, align 8
  %120 = and i16 %119, 511
  %121 = zext i16 %120 to i32
  switch i32 %121, label %1741 [
    i32 194, label %127
    i32 193, label %128
    i32 67, label %286
    i32 1, label %322
    i32 0, label %329
    i32 2, label %337
    i32 192, label %337
    i32 198, label %337
    i32 3, label %343
    i32 10, label %704
    i32 9, label %704
    i32 11, label %704
    i32 7, label %717
    i32 103, label %960
    i32 176, label %983
    i32 177, label %983
    i32 179, label %983
    i32 180, label %1152
    i32 172, label %1175
    i32 170, label %1175
    i32 181, label %1175
    i32 182, label %1175
    i32 183, label %1175
    i32 173, label %1175
    i32 379, label %1175
    i32 201, label %1224
    i32 199, label %1224
    i32 344, label %1299
    i32 33, label %122
    i32 167, label %1370
    i32 168, label %1460
    i32 380, label %1737
    i32 38, label %1702
    i32 385, label %1605
    i32 37, label %1651
  ]

122:                                              ; preds = %118
  %123 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %124 = getelementptr inbounds %struct.pmop, ptr %123, i64 0, i32 12
  %125 = load ptr, ptr %124, align 8, !tbaa !13
  %126 = icmp eq ptr %125, null
  br i1 %126, label %1338, label %1329

127:                                              ; preds = %118
  store ptr %54, ptr @PL_curcop, align 8, !tbaa !6
  br label %1741

128:                                              ; preds = %118
  store ptr %54, ptr @PL_curcop, align 8, !tbaa !6
  %129 = load ptr, ptr %54, align 8, !tbaa !25
  %130 = getelementptr inbounds %struct.op, ptr %54, i64 0, i32 1
  %131 = load ptr, ptr %130, align 8, !tbaa !38
  %132 = icmp eq ptr %129, null
  br i1 %132, label %268, label %133

133:                                              ; preds = %128
  %134 = getelementptr inbounds %struct.op, ptr %129, i64 0, i32 4
  %135 = load i16, ptr %134, align 8
  %136 = and i16 %135, 511
  %137 = icmp eq i16 %136, 3
  %138 = icmp ne ptr %131, null
  %139 = select i1 %137, i1 %138, i1 false
  br i1 %139, label %140, label %190

140:                                              ; preds = %133
  %141 = getelementptr inbounds %struct.op, ptr %131, i64 0, i32 4
  %142 = load i16, ptr %141, align 8
  %143 = and i16 %142, 511
  %144 = icmp eq i16 %143, 203
  br i1 %144, label %145, label %190

145:                                              ; preds = %140
  %146 = load ptr, ptr %131, align 8, !tbaa !25
  %147 = icmp eq ptr %146, null
  br i1 %147, label %190, label %148

148:                                              ; preds = %145
  %149 = getelementptr inbounds %struct.op, ptr %146, i64 0, i32 4
  %150 = load i16, ptr %149, align 8
  %151 = and i16 %150, 511
  %152 = icmp eq i16 %151, 192
  br i1 %152, label %153, label %190

153:                                              ; preds = %148
  %154 = load ptr, ptr %146, align 8, !tbaa !25
  %155 = icmp eq ptr %154, null
  br i1 %155, label %190, label %156

156:                                              ; preds = %153
  %157 = getelementptr inbounds %struct.op, ptr %154, i64 0, i32 4
  %158 = load i16, ptr %157, align 8
  %159 = and i16 %158, 510
  %160 = icmp eq i16 %159, 186
  br i1 %160, label %161, label %190

161:                                              ; preds = %156
  %162 = getelementptr inbounds %struct.unop, ptr %131, i64 0, i32 7
  %163 = load ptr, ptr %162, align 8, !tbaa !36
  %164 = icmp eq ptr %163, %129
  br i1 %164, label %165, label %190

165:                                              ; preds = %161
  %166 = getelementptr inbounds %struct.op, ptr %129, i64 0, i32 1
  %167 = load ptr, ptr %166, align 8, !tbaa !38
  %168 = icmp eq ptr %167, null
  br i1 %168, label %190, label %169

169:                                              ; preds = %165
  %170 = load ptr, ptr %167, align 8, !tbaa !25
  %171 = icmp eq ptr %170, null
  br i1 %171, label %190, label %172

172:                                              ; preds = %169
  %173 = load ptr, ptr %129, align 8, !tbaa !25
  %174 = icmp eq ptr %173, null
  br i1 %174, label %190, label %175

175:                                              ; preds = %172, %183
  %176 = phi ptr [ %185, %183 ], [ %167, %172 ]
  %177 = load ptr, ptr %176, align 8, !tbaa !25
  %178 = icmp eq ptr %177, null
  br i1 %178, label %187, label %179

179:                                              ; preds = %175
  %180 = icmp eq ptr %177, %131
  br i1 %180, label %181, label %183

181:                                              ; preds = %179
  store ptr %146, ptr %176, align 8, !tbaa !25
  %182 = load ptr, ptr %129, align 8, !tbaa !25
  store ptr %182, ptr %54, align 8, !tbaa !25
  br label %187

183:                                              ; preds = %179
  %184 = getelementptr inbounds %struct.op, ptr %176, i64 0, i32 1
  %185 = load ptr, ptr %184, align 8, !tbaa !38
  %186 = icmp eq ptr %185, null
  br i1 %186, label %187, label %175, !llvm.loop !333

187:                                              ; preds = %175, %183, %181
  %188 = phi ptr [ %182, %181 ], [ %129, %183 ], [ %129, %175 ]
  %189 = icmp eq ptr %188, null
  br i1 %189, label %268, label %190

190:                                              ; preds = %156, %165, %172, %169, %161, %148, %145, %140, %133, %153, %187
  %191 = phi ptr [ %188, %187 ], [ %129, %153 ], [ %129, %133 ], [ %129, %140 ], [ %129, %145 ], [ %129, %148 ], [ %129, %161 ], [ %129, %169 ], [ %129, %172 ], [ %129, %165 ], [ %129, %156 ]
  %192 = getelementptr inbounds %struct.op, ptr %191, i64 0, i32 4
  %193 = load i16, ptr %192, align 8
  %194 = and i16 %193, 511
  %195 = add nsw i16 %194, -9
  %196 = icmp ult i16 %195, 3
  br i1 %196, label %197, label %268

197:                                              ; preds = %190
  %198 = getelementptr inbounds %struct.op, ptr %191, i64 0, i32 6
  %199 = load i8, ptr %198, align 1, !tbaa !33
  %200 = and i8 %199, 127
  %201 = icmp eq i8 %200, 0
  br i1 %201, label %202, label %268

202:                                              ; preds = %197
  %203 = load ptr, ptr %191, align 8, !tbaa !25
  %204 = icmp eq ptr %203, null
  br i1 %204, label %268, label %205

205:                                              ; preds = %202
  %206 = getelementptr inbounds %struct.op, ptr %203, i64 0, i32 4
  %207 = load i16, ptr %206, align 8
  %208 = and i16 %207, 511
  %209 = icmp eq i16 %208, 193
  br i1 %209, label %210, label %268

210:                                              ; preds = %205
  %211 = load ptr, ptr %203, align 8, !tbaa !25
  %212 = icmp eq ptr %211, null
  br i1 %212, label %268, label %213

213:                                              ; preds = %210
  %214 = getelementptr inbounds %struct.op, ptr %211, i64 0, i32 4
  %215 = load i16, ptr %214, align 8
  %216 = and i16 %215, 511
  %217 = add nsw i16 %216, -9
  %218 = icmp ult i16 %217, 3
  br i1 %218, label %219, label %268

219:                                              ; preds = %213
  %220 = getelementptr inbounds %struct.op, ptr %211, i64 0, i32 6
  %221 = load i8, ptr %220, align 1, !tbaa !33
  %222 = and i8 %221, 127
  %223 = icmp eq i8 %222, 0
  br i1 %223, label %224, label %268

224:                                              ; preds = %219
  %225 = load ptr, ptr %211, align 8, !tbaa !25
  %226 = icmp eq ptr %225, null
  br i1 %226, label %268, label %227

227:                                              ; preds = %224
  %228 = getelementptr inbounds %struct.op, ptr %225, i64 0, i32 4
  %229 = load i16, ptr %228, align 8
  %230 = and i16 %229, 511
  %231 = icmp eq i16 %230, 193
  br i1 %231, label %232, label %268

232:                                              ; preds = %227
  %233 = tail call ptr @Perl_cop_fetch_label(ptr noundef nonnull %54, ptr noundef null, ptr noundef null) #29
  %234 = icmp eq ptr %233, null
  br i1 %234, label %235, label %268

235:                                              ; preds = %232
  %236 = load ptr, ptr %54, align 8, !tbaa !25
  %237 = load ptr, ptr %236, align 8, !tbaa !25
  %238 = tail call ptr @Perl_cop_fetch_label(ptr noundef %237, ptr noundef null, ptr noundef null) #29
  %239 = icmp eq ptr %238, null
  br i1 %239, label %240, label %268

240:                                              ; preds = %235
  %241 = load ptr, ptr %54, align 8, !tbaa !25
  %242 = load ptr, ptr %241, align 8, !tbaa !25
  %243 = load ptr, ptr %242, align 8, !tbaa !25
  %244 = load ptr, ptr %243, align 8, !tbaa !25
  %245 = tail call ptr @Perl_op_sibling_splice(ptr noundef null, ptr noundef nonnull %241, i32 noundef 1, ptr noundef null)
  tail call void @Perl_op_free(ptr noundef nonnull %242)
  %246 = tail call ptr @Perl_op_sibling_splice(ptr noundef null, ptr noundef nonnull %54, i32 noundef 2, ptr noundef null)
  %247 = tail call ptr @Perl_newLISTOP(i32 noundef 158, i32 noundef 0, ptr noundef nonnull %241, ptr noundef nonnull %243)
  %248 = getelementptr inbounds %struct.op, ptr %247, i64 0, i32 5
  %249 = load i8, ptr %248, align 2, !tbaa !35
  %250 = and i8 %249, -12
  %251 = or i8 %250, 9
  store i8 %251, ptr %248, align 2, !tbaa !35
  %252 = tail call ptr @Perl_op_sibling_splice(ptr noundef null, ptr noundef nonnull %54, i32 noundef 0, ptr noundef %247)
  %253 = getelementptr inbounds %struct.unop, ptr %247, i64 0, i32 7
  %254 = load ptr, ptr %253, align 8, !tbaa !36
  store ptr %254, ptr %54, align 8, !tbaa !25
  store ptr %241, ptr %254, align 8, !tbaa !25
  store ptr %243, ptr %241, align 8, !tbaa !25
  store ptr %247, ptr %243, align 8, !tbaa !25
  store ptr %244, ptr %247, align 8, !tbaa !25
  %255 = getelementptr inbounds %struct.op, ptr %241, i64 0, i32 5
  %256 = load i8, ptr %255, align 2, !tbaa !35
  %257 = and i8 %256, 32
  %258 = icmp eq i8 %257, 0
  br i1 %258, label %1741, label %259

259:                                              ; preds = %240
  %260 = getelementptr inbounds %struct.op, ptr %243, i64 0, i32 5
  %261 = load i8, ptr %260, align 2, !tbaa !35
  %262 = and i8 %261, 32
  %263 = icmp eq i8 %262, 0
  br i1 %263, label %1741, label %264

264:                                              ; preds = %259
  %265 = getelementptr inbounds %struct.op, ptr %254, i64 0, i32 5
  %266 = load i8, ptr %265, align 2, !tbaa !35
  %267 = or i8 %266, 32
  store i8 %267, ptr %265, align 2, !tbaa !35
  br label %1741

268:                                              ; preds = %128, %213, %190, %235, %232, %227, %224, %219, %210, %205, %202, %197, %187
  %269 = tail call ptr @Perl_cop_fetch_label(ptr noundef nonnull %54, ptr noundef null, ptr noundef null) #29
  %270 = icmp eq ptr %269, null
  br i1 %270, label %271, label %1741

271:                                              ; preds = %268
  %272 = load i32, ptr @PL_perldb, align 4, !tbaa !52
  %273 = and i32 %272, 4
  %274 = icmp eq i32 %273, 0
  br i1 %274, label %275, label %1741

275:                                              ; preds = %271, %279
  %276 = phi ptr [ %277, %279 ], [ %54, %271 ]
  %277 = load ptr, ptr %276, align 8, !tbaa !25
  %278 = icmp eq ptr %277, null
  br i1 %278, label %1741, label %279

279:                                              ; preds = %275
  %280 = getelementptr inbounds %struct.op, ptr %277, i64 0, i32 4
  %281 = load i16, ptr %280, align 8
  %282 = and i16 %281, 511
  switch i16 %282, label %1741 [
    i16 0, label %275
    i16 193, label %283
  ]

283:                                              ; preds = %279
  tail call void @Perl_op_null(ptr noundef nonnull %54)
  %284 = icmp eq ptr %53, null
  br i1 %284, label %1756, label %285

285:                                              ; preds = %283
  store ptr %277, ptr %53, align 8, !tbaa !25
  br label %1756

286:                                              ; preds = %118
  %287 = load ptr, ptr %54, align 8, !tbaa !25
  %288 = icmp eq ptr %287, null
  br i1 %288, label %1741, label %289

289:                                              ; preds = %286
  %290 = getelementptr inbounds %struct.op, ptr %287, i64 0, i32 4
  %291 = load i16, ptr %290, align 8
  %292 = and i16 %291, 511
  %293 = icmp eq i16 %292, 68
  br i1 %293, label %294, label %1741

294:                                              ; preds = %289
  %295 = getelementptr inbounds %struct.op, ptr %287, i64 0, i32 6
  %296 = load i8, ptr %295, align 1, !tbaa !33
  %297 = and i8 %296, 16
  %298 = icmp eq i8 %297, 0
  br i1 %298, label %314, label %299

299:                                              ; preds = %294
  %300 = getelementptr inbounds %struct.op, ptr %54, i64 0, i32 5
  %301 = load i8, ptr %300, align 2, !tbaa !35
  %302 = and i8 %301, 64
  %303 = icmp eq i8 %302, 0
  br i1 %303, label %304, label %1741

304:                                              ; preds = %299
  %305 = getelementptr inbounds %struct.op, ptr %287, i64 0, i32 3
  %306 = load i64, ptr %305, align 8, !tbaa !34
  %307 = getelementptr inbounds %struct.op, ptr %54, i64 0, i32 3
  store i64 %306, ptr %307, align 8, !tbaa !34
  store i64 0, ptr %305, align 8, !tbaa !34
  %308 = getelementptr inbounds %struct.op, ptr %54, i64 0, i32 6
  %309 = load i8, ptr %308, align 1, !tbaa !33
  %310 = or i8 %309, 16
  store i8 %310, ptr %308, align 1, !tbaa !33
  %311 = load i16, ptr %290, align 8
  %312 = and i16 %311, 511
  %313 = icmp eq i16 %312, 0
  br i1 %313, label %1741, label %314

314:                                              ; preds = %294, %304
  tail call void @Perl_op_clear(ptr noundef nonnull %287)
  %315 = load i16, ptr %290, align 8
  %316 = and i16 %315, 511
  %317 = zext i16 %316 to i64
  %318 = getelementptr inbounds %struct.op, ptr %287, i64 0, i32 3
  store i64 %317, ptr %318, align 8, !tbaa !34
  %319 = and i16 %315, -512
  store i16 %319, ptr %290, align 8
  %320 = load ptr, ptr @PL_ppaddr, align 8, !tbaa !6
  %321 = getelementptr inbounds %struct.op, ptr %287, i64 0, i32 2
  store ptr %320, ptr %321, align 8, !tbaa !78
  br label %1741

322:                                              ; preds = %118
  %323 = getelementptr inbounds %struct.op, ptr %54, i64 0, i32 5
  %324 = load i8, ptr %323, align 2, !tbaa !35
  %325 = and i8 %324, 3
  %326 = icmp eq i8 %325, 3
  %327 = icmp ne ptr %53, null
  %328 = select i1 %326, i1 %327, i1 false
  br i1 %328, label %339, label %1741

329:                                              ; preds = %118
  %330 = getelementptr inbounds %struct.op, ptr %54, i64 0, i32 3
  %331 = load i64, ptr %330, align 8, !tbaa !34
  %332 = add i64 %331, -193
  %333 = icmp ult i64 %332, 2
  br i1 %333, label %334, label %335

334:                                              ; preds = %329
  store ptr %54, ptr @PL_curcop, align 8, !tbaa !6
  br label %335

335:                                              ; preds = %329, %334
  %336 = and i16 %119, -513
  store i16 %336, ptr %55, align 8
  br label %337

337:                                              ; preds = %118, %118, %118, %335
  %338 = icmp eq ptr %53, null
  br i1 %338, label %1756, label %339

339:                                              ; preds = %322, %337
  %340 = load ptr, ptr %54, align 8, !tbaa !25
  store ptr %340, ptr %53, align 8, !tbaa !25
  %341 = load i16, ptr %55, align 8
  %342 = and i16 %341, -513
  store i16 %342, ptr %55, align 8
  br label %1756

343:                                              ; preds = %118
  %344 = load ptr, ptr %54, align 8, !tbaa !25
  %345 = getelementptr inbounds %struct.op, ptr %344, i64 0, i32 4
  %346 = load i16, ptr %345, align 8
  %347 = and i16 %346, 511
  switch i16 %347, label %463 [
    i16 5, label %362
    i16 9, label %348
    i16 7, label %352
  ]

348:                                              ; preds = %343
  %349 = getelementptr inbounds %struct.op, ptr %344, i64 0, i32 6
  %350 = load i8, ptr %349, align 1, !tbaa !33
  %351 = icmp sgt i8 %350, -1
  br i1 %351, label %362, label %463

352:                                              ; preds = %343
  %353 = load ptr, ptr %344, align 8, !tbaa !25
  %354 = getelementptr inbounds %struct.op, ptr %353, i64 0, i32 4
  %355 = load i16, ptr %354, align 8
  %356 = and i16 %355, 511
  %357 = icmp eq i16 %356, 15
  br i1 %357, label %358, label %417

358:                                              ; preds = %352
  %359 = getelementptr inbounds %struct.op, ptr %353, i64 0, i32 6
  %360 = load i8, ptr %359, align 1, !tbaa !33
  %361 = icmp ult i8 %360, 64
  br i1 %361, label %362, label %417

362:                                              ; preds = %343, %358, %348
  %363 = phi ptr [ %344, %343 ], [ %344, %348 ], [ %353, %358 ]
  %364 = load ptr, ptr %363, align 8, !tbaa !25
  %365 = getelementptr inbounds %struct.op, ptr %364, i64 0, i32 4
  %366 = load i16, ptr %365, align 8
  %367 = and i16 %366, 511
  %368 = icmp eq i16 %367, 0
  br i1 %368, label %369, label %415

369:                                              ; preds = %362
  %370 = load ptr, ptr %364, align 8, !tbaa !25
  %371 = getelementptr inbounds %struct.op, ptr %370, i64 0, i32 4
  %372 = load i16, ptr %371, align 8
  %373 = and i16 %372, 511
  %374 = icmp eq i16 %373, 5
  br i1 %374, label %375, label %415

375:                                              ; preds = %369
  %376 = load ptr, ptr %370, align 8, !tbaa !25
  %377 = getelementptr inbounds %struct.op, ptr %376, i64 0, i32 4
  %378 = load i16, ptr %377, align 8
  %379 = and i16 %378, 511
  %380 = icmp eq i16 %379, 62
  br i1 %380, label %381, label %415

381:                                              ; preds = %375
  %382 = getelementptr inbounds %struct.op, ptr %376, i64 0, i32 6
  %383 = load i8, ptr %382, align 1, !tbaa !33
  %384 = and i8 %383, 64
  %385 = icmp eq i8 %384, 0
  br i1 %385, label %415, label %386

386:                                              ; preds = %381
  %387 = getelementptr inbounds %struct.op, ptr %376, i64 0, i32 5
  %388 = load i8, ptr %387, align 2, !tbaa !35
  %389 = and i8 %388, 3
  %390 = icmp eq i8 %389, 3
  br i1 %390, label %391, label %415

391:                                              ; preds = %386
  %392 = getelementptr inbounds %struct.svop, ptr %370, i64 0, i32 7
  %393 = load ptr, ptr %392, align 8, !tbaa !65
  %394 = getelementptr inbounds %struct.sv, ptr %393, i64 0, i32 2
  %395 = load i32, ptr %394, align 4, !tbaa !84
  %396 = and i32 %395, 256
  %397 = icmp eq i32 %396, 0
  br i1 %397, label %415, label %398

398:                                              ; preds = %391
  %399 = load ptr, ptr %393, align 8, !tbaa !85
  %400 = getelementptr inbounds %struct.xpviv, ptr %399, i64 0, i32 4
  %401 = load i64, ptr %400, align 8, !tbaa !13
  %402 = icmp eq i64 %401, 0
  br i1 %402, label %403, label %415

403:                                              ; preds = %398
  store ptr %376, ptr %53, align 8, !tbaa !25
  %404 = getelementptr inbounds %struct.binop, ptr %376, i64 0, i32 7
  %405 = load ptr, ptr %404, align 8, !tbaa !106
  tail call void @Perl_op_free(ptr noundef %405)
  %406 = getelementptr inbounds %struct.binop, ptr %376, i64 0, i32 8
  %407 = load ptr, ptr %406, align 8, !tbaa !113
  tail call void @Perl_op_free(ptr noundef %407)
  %408 = load i8, ptr %387, align 2, !tbaa !35
  %409 = and i8 %408, -5
  store i8 %409, ptr %387, align 2, !tbaa !35
  %410 = load i16, ptr %377, align 8
  %411 = and i16 %410, -512
  %412 = or i16 %411, 1
  store i16 %412, ptr %377, align 8
  %413 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_ppaddr, i64 0, i64 1), align 8, !tbaa !6
  %414 = getelementptr inbounds %struct.op, ptr %376, i64 0, i32 2
  store ptr %413, ptr %414, align 8, !tbaa !78
  store i8 0, ptr %382, align 1, !tbaa !33
  br label %1741

415:                                              ; preds = %362, %369, %375, %381, %386, %391, %398
  %416 = icmp eq i16 %347, 7
  br i1 %416, label %417, label %463

417:                                              ; preds = %352, %358, %415
  %418 = getelementptr inbounds %struct.svop, ptr %344, i64 0, i32 7
  %419 = load ptr, ptr %418, align 8, !tbaa !65
  %420 = load ptr, ptr @PL_defgv, align 8, !tbaa !6
  %421 = icmp eq ptr %419, %420
  br i1 %421, label %422, label %463

422:                                              ; preds = %417
  %423 = load ptr, ptr %344, align 8, !tbaa !25
  %424 = icmp eq ptr %423, null
  br i1 %424, label %463, label %425

425:                                              ; preds = %422
  %426 = getelementptr inbounds %struct.op, ptr %423, i64 0, i32 4
  %427 = load i16, ptr %426, align 8
  %428 = and i16 %427, 511
  %429 = icmp eq i16 %428, 135
  br i1 %429, label %430, label %463

430:                                              ; preds = %425
  %431 = getelementptr inbounds %struct.op, ptr %423, i64 0, i32 5
  %432 = load i8, ptr %431, align 2, !tbaa !35
  %433 = zext i8 %432 to i32
  %434 = and i32 %433, 16
  %435 = icmp eq i32 %434, 0
  br i1 %435, label %436, label %463

436:                                              ; preds = %430
  %437 = getelementptr inbounds %struct.op, ptr %423, i64 0, i32 6
  %438 = load i8, ptr %437, align 1, !tbaa !33
  %439 = and i8 %438, -120
  %440 = icmp eq i8 %439, 0
  %441 = and i32 %433, 3
  %442 = icmp eq i32 %441, 3
  %443 = and i1 %442, %440
  br i1 %443, label %444, label %463

444:                                              ; preds = %436
  %445 = load ptr, ptr %423, align 8, !tbaa !25
  %446 = getelementptr inbounds %struct.op, ptr %445, i64 0, i32 4
  %447 = load i16, ptr %446, align 8
  %448 = and i16 %447, 511
  %449 = icmp eq i16 %448, 0
  br i1 %449, label %450, label %454

450:                                              ; preds = %444
  %451 = load ptr, ptr %445, align 8, !tbaa !25
  %452 = getelementptr inbounds %struct.op, ptr %451, i64 0, i32 4
  %453 = load i16, ptr %452, align 8
  br label %454

454:                                              ; preds = %450, %444
  %455 = phi i16 [ %453, %450 ], [ %447, %444 ]
  %456 = phi ptr [ %451, %450 ], [ %445, %444 ]
  %457 = freeze i16 %455
  %458 = and i16 %457, 511
  %459 = icmp eq i16 %458, 3
  %460 = select i1 %459, ptr %456, ptr %54
  %461 = load ptr, ptr %460, align 8, !tbaa !25
  %462 = icmp eq ptr %461, null
  br i1 %462, label %1741, label %463

463:                                              ; preds = %343, %348, %415, %417, %422, %425, %436, %430, %454
  %464 = phi i1 [ %459, %454 ], [ false, %430 ], [ false, %436 ], [ false, %425 ], [ false, %422 ], [ false, %417 ], [ false, %415 ], [ false, %348 ], [ false, %343 ]
  %465 = phi ptr [ %461, %454 ], [ %344, %430 ], [ %344, %436 ], [ %344, %425 ], [ %344, %422 ], [ %344, %417 ], [ %344, %415 ], [ %344, %348 ], [ %344, %343 ]
  br label %466

466:                                              ; preds = %463, %555
  %467 = phi ptr [ %556, %555 ], [ %465, %463 ]
  %468 = phi ptr [ %561, %555 ], [ null, %463 ]
  %469 = phi i8 [ %560, %555 ], [ 0, %463 ]
  %470 = phi i8 [ %559, %555 ], [ 0, %463 ]
  %471 = phi i64 [ %558, %555 ], [ 0, %463 ]
  %472 = phi i8 [ %557, %555 ], [ 0, %463 ]
  %473 = getelementptr inbounds %struct.op, ptr %467, i64 0, i32 4
  %474 = load i16, ptr %473, align 8
  %475 = and i16 %474, 511
  switch i16 %475, label %563 [
    i16 0, label %476
    i16 9, label %478
    i16 10, label %478
    i16 11, label %478
  ]

476:                                              ; preds = %466
  %477 = load ptr, ptr %467, align 8, !tbaa !25
  br label %555

478:                                              ; preds = %466, %466, %466
  %479 = getelementptr inbounds %struct.op, ptr %467, i64 0, i32 6
  %480 = load i8, ptr %479, align 1, !tbaa !33
  %481 = and i8 %480, 127
  %482 = icmp eq i8 %481, 0
  br i1 %482, label %483, label %563

483:                                              ; preds = %478
  %484 = icmp eq i16 %475, 10
  br i1 %484, label %485, label %501

485:                                              ; preds = %483
  %486 = load ptr, ptr %467, align 8, !tbaa !25
  %487 = icmp eq ptr %486, null
  br i1 %487, label %501, label %488

488:                                              ; preds = %485
  %489 = getelementptr inbounds %struct.op, ptr %486, i64 0, i32 4
  %490 = load i16, ptr %489, align 8
  %491 = and i16 %490, 511
  %492 = icmp eq i16 %491, 5
  br i1 %492, label %493, label %501

493:                                              ; preds = %488
  %494 = load ptr, ptr %486, align 8, !tbaa !25
  %495 = icmp eq ptr %494, null
  br i1 %495, label %501, label %496

496:                                              ; preds = %493
  %497 = getelementptr inbounds %struct.op, ptr %494, i64 0, i32 4
  %498 = load i16, ptr %497, align 8
  %499 = and i16 %498, 511
  %500 = icmp eq i16 %499, 138
  br i1 %500, label %563, label %501

501:                                              ; preds = %496, %493, %488, %485, %483
  %502 = icmp eq i8 %469, 0
  %503 = and i8 %480, -128
  br i1 %502, label %524, label %504

504:                                              ; preds = %501
  %505 = icmp eq i8 %503, %470
  br i1 %505, label %506, label %563

506:                                              ; preds = %504
  %507 = getelementptr inbounds %struct.op, ptr %467, i64 0, i32 3
  %508 = load i64, ptr %507, align 8, !tbaa !34
  %509 = zext i8 %469 to i64
  %510 = add i64 %471, %509
  %511 = icmp eq i64 %508, %510
  br i1 %511, label %512, label %563

512:                                              ; preds = %506
  %513 = getelementptr inbounds %struct.op, ptr %467, i64 0, i32 5
  %514 = load i8, ptr %513, align 2, !tbaa !35
  %515 = and i8 %514, 3
  %516 = icmp ne i8 %515, 1
  %517 = and i8 %472, 1
  %518 = icmp ne i8 %517, 0
  %519 = xor i1 %518, %516
  br i1 %519, label %520, label %563

520:                                              ; preds = %512
  %521 = icmp ne i16 %475, 9
  %522 = icmp eq i8 %517, 0
  %523 = and i1 %521, %522
  br i1 %523, label %534, label %543

524:                                              ; preds = %501
  %525 = getelementptr inbounds %struct.op, ptr %467, i64 0, i32 3
  %526 = load i64, ptr %525, align 8, !tbaa !34
  %527 = getelementptr inbounds %struct.op, ptr %467, i64 0, i32 5
  %528 = load i8, ptr %527, align 2, !tbaa !35
  %529 = and i8 %528, 3
  %530 = icmp eq i8 %529, 1
  %531 = zext i1 %530 to i8
  %532 = icmp eq i16 %475, 9
  %533 = select i1 %532, i1 true, i1 %530
  br i1 %533, label %545, label %534

534:                                              ; preds = %524, %520
  %535 = phi i8 [ %528, %524 ], [ %514, %520 ]
  %536 = phi i8 [ %503, %524 ], [ %470, %520 ]
  %537 = phi i64 [ %526, %524 ], [ %471, %520 ]
  %538 = phi i8 [ 0, %524 ], [ %472, %520 ]
  %539 = and i8 %535, 16
  %540 = icmp eq i8 %539, 0
  %541 = icmp ugt i8 %469, 126
  %542 = select i1 %540, i1 true, i1 %541
  br i1 %542, label %563, label %545

543:                                              ; preds = %520
  %544 = icmp ugt i8 %469, 126
  br i1 %544, label %563, label %545

545:                                              ; preds = %524, %534, %543
  %546 = phi i8 [ %536, %534 ], [ %470, %543 ], [ %503, %524 ]
  %547 = phi i64 [ %537, %534 ], [ %471, %543 ], [ %526, %524 ]
  %548 = phi i8 [ %538, %534 ], [ %472, %543 ], [ %531, %524 ]
  %549 = icmp ne i8 %546, 0
  %550 = icmp ugt i64 %547, 2251799813685247
  %551 = select i1 %549, i1 %550, i1 false
  br i1 %551, label %563, label %552

552:                                              ; preds = %545
  %553 = add nuw nsw i8 %469, 1
  %554 = load ptr, ptr %467, align 8, !tbaa !25
  br label %555

555:                                              ; preds = %476, %552
  %556 = phi ptr [ %477, %476 ], [ %554, %552 ]
  %557 = phi i8 [ %472, %476 ], [ %548, %552 ]
  %558 = phi i64 [ %471, %476 ], [ %547, %552 ]
  %559 = phi i8 [ %470, %476 ], [ %546, %552 ]
  %560 = phi i8 [ %469, %476 ], [ %553, %552 ]
  %561 = phi ptr [ %468, %476 ], [ %554, %552 ]
  %562 = icmp eq ptr %556, null
  br i1 %562, label %563, label %466, !llvm.loop !334

563:                                              ; preds = %555, %478, %496, %504, %506, %512, %534, %543, %545, %466
  %564 = phi i8 [ %560, %555 ], [ %469, %478 ], [ %469, %496 ], [ %469, %504 ], [ %469, %506 ], [ %469, %512 ], [ %469, %534 ], [ %469, %543 ], [ %469, %545 ], [ %469, %466 ]
  %565 = phi ptr [ %561, %555 ], [ %468, %478 ], [ %468, %496 ], [ %468, %504 ], [ %468, %506 ], [ %468, %512 ], [ %468, %534 ], [ %468, %543 ], [ %468, %545 ], [ %468, %466 ]
  %566 = phi i8 [ %557, %555 ], [ %472, %478 ], [ %472, %496 ], [ %472, %504 ], [ %472, %506 ], [ %472, %512 ], [ %538, %534 ], [ %472, %543 ], [ %548, %545 ], [ %472, %466 ]
  %567 = phi i64 [ %558, %555 ], [ %471, %478 ], [ %471, %496 ], [ %471, %504 ], [ %471, %506 ], [ %471, %512 ], [ %537, %534 ], [ %471, %543 ], [ %547, %545 ], [ %471, %466 ]
  %568 = phi i8 [ %559, %555 ], [ %470, %478 ], [ %470, %496 ], [ %470, %504 ], [ %470, %506 ], [ %470, %512 ], [ %536, %534 ], [ %470, %543 ], [ %546, %545 ], [ %470, %466 ]
  %569 = zext i8 %564 to i32
  switch i8 %564, label %571 [
    i8 0, label %1741
    i8 1, label %570
  ]

570:                                              ; preds = %563
  br i1 %464, label %571, label %1741

571:                                              ; preds = %563, %570
  %572 = and i8 %566, 1
  %573 = icmp eq i8 %572, 0
  br i1 %573, label %687, label %574

574:                                              ; preds = %571
  %575 = getelementptr inbounds %struct.op, ptr %565, i64 0, i32 4
  %576 = load i16, ptr %575, align 8
  %577 = and i16 %576, 511
  %578 = icmp eq i16 %577, 158
  br i1 %578, label %579, label %1741

579:                                              ; preds = %574
  %580 = getelementptr inbounds %struct.op, ptr %565, i64 0, i32 5
  %581 = load i8, ptr %580, align 2, !tbaa !35
  %582 = and i8 %581, 3
  %583 = icmp eq i8 %582, 1
  br i1 %583, label %584, label %1741

584:                                              ; preds = %579
  %585 = load ptr, ptr %565, align 8, !tbaa !25
  %586 = icmp eq ptr %52, null
  br i1 %586, label %617, label %587

587:                                              ; preds = %584
  %588 = getelementptr inbounds %struct.op, ptr %52, i64 0, i32 4
  %589 = load i16, ptr %588, align 8
  %590 = and i16 %589, 511
  %591 = icmp eq i16 %590, 390
  br i1 %591, label %592, label %617

592:                                              ; preds = %587
  %593 = getelementptr inbounds %struct.op, ptr %52, i64 0, i32 5
  %594 = load i8, ptr %593, align 2, !tbaa !35
  %595 = and i8 %594, 3
  %596 = icmp eq i8 %595, 1
  br i1 %596, label %597, label %617

597:                                              ; preds = %592
  %598 = getelementptr inbounds %struct.op, ptr %52, i64 0, i32 6
  %599 = load i8, ptr %598, align 1, !tbaa !33
  %600 = and i8 %599, -128
  %601 = icmp eq i8 %600, %568
  %602 = icmp sgt i8 %594, -1
  %603 = and i1 %602, %601
  br i1 %603, label %604, label %617

604:                                              ; preds = %597
  %605 = and i8 %599, 127
  %606 = getelementptr inbounds %struct.op, ptr %52, i64 0, i32 3
  %607 = load i64, ptr %606, align 8, !tbaa !34
  %608 = zext i8 %605 to i64
  %609 = add i64 %607, %608
  %610 = icmp eq i64 %609, %567
  br i1 %610, label %611, label %617

611:                                              ; preds = %604
  %612 = zext i8 %605 to i32
  %613 = sub nsw i32 127, %569
  %614 = icmp sgt i32 %613, %612
  br i1 %614, label %615, label %617

615:                                              ; preds = %611
  %616 = add i8 %605, %564
  br label %617

617:                                              ; preds = %604, %611, %615, %597, %592, %587, %584
  %618 = phi i1 [ true, %597 ], [ true, %592 ], [ true, %587 ], [ true, %584 ], [ false, %615 ], [ true, %611 ], [ true, %604 ]
  %619 = phi i64 [ %567, %597 ], [ %567, %592 ], [ %567, %587 ], [ %567, %584 ], [ %607, %615 ], [ %567, %611 ], [ %567, %604 ]
  %620 = phi i8 [ %564, %597 ], [ %564, %592 ], [ %564, %587 ], [ %564, %584 ], [ %616, %615 ], [ %564, %611 ], [ %564, %604 ]
  %621 = load ptr, ptr %585, align 8, !tbaa !25
  %622 = icmp eq ptr %621, null
  br i1 %622, label %681, label %623

623:                                              ; preds = %617
  %624 = zext i8 %568 to i32
  %625 = zext i8 %620 to i64
  %626 = getelementptr inbounds %struct.op, ptr %621, i64 0, i32 4
  %627 = load i16, ptr %626, align 8
  %628 = and i16 %627, 511
  %629 = add nsw i16 %628, -9
  %630 = icmp ult i16 %629, 3
  br i1 %630, label %637, label %677

631:                                              ; preds = %673
  %632 = getelementptr inbounds %struct.op, ptr %675, i64 0, i32 4
  %633 = load i16, ptr %632, align 8
  %634 = and i16 %633, 511
  %635 = add nsw i16 %634, -9
  %636 = icmp ult i16 %635, 3
  br i1 %636, label %637, label %677, !llvm.loop !335

637:                                              ; preds = %623, %631
  %638 = phi ptr [ %655, %631 ], [ %585, %623 ]
  %639 = phi ptr [ %675, %631 ], [ %621, %623 ]
  %640 = phi i64 [ %674, %631 ], [ %625, %623 ]
  %641 = getelementptr inbounds %struct.op, ptr %639, i64 0, i32 5
  %642 = load i8, ptr %641, align 2, !tbaa !35
  %643 = and i8 %642, 3
  %644 = icmp eq i8 %643, 1
  br i1 %644, label %645, label %677

645:                                              ; preds = %637
  %646 = getelementptr inbounds %struct.op, ptr %639, i64 0, i32 6
  %647 = load i8, ptr %646, align 1, !tbaa !33
  %648 = zext i8 %647 to i32
  %649 = and i32 %648, 128
  %650 = icmp eq i32 %649, %624
  %651 = and i32 %648, 127
  %652 = icmp eq i32 %651, 0
  %653 = and i1 %650, %652
  br i1 %653, label %654, label %677

654:                                              ; preds = %645
  %655 = load ptr, ptr %639, align 8, !tbaa !25
  %656 = icmp eq ptr %655, null
  br i1 %656, label %677, label %657

657:                                              ; preds = %654
  %658 = getelementptr inbounds %struct.op, ptr %655, i64 0, i32 4
  %659 = load i16, ptr %658, align 8
  %660 = and i16 %659, 511
  %661 = icmp eq i16 %660, 193
  br i1 %661, label %666, label %662

662:                                              ; preds = %657
  %663 = icmp eq i16 %660, 194
  %664 = icmp ult i64 %640, 127
  %665 = select i1 %663, i1 %664, i1 false
  br i1 %665, label %668, label %677

666:                                              ; preds = %657
  %667 = icmp ult i64 %640, 127
  br i1 %667, label %668, label %677

668:                                              ; preds = %662, %666
  %669 = add i64 %619, %640
  %670 = getelementptr inbounds %struct.op, ptr %639, i64 0, i32 3
  %671 = load i64, ptr %670, align 8, !tbaa !34
  %672 = icmp eq i64 %669, %671
  br i1 %672, label %673, label %677

673:                                              ; preds = %668
  %674 = add nuw nsw i64 %640, 1
  %675 = load ptr, ptr %655, align 8, !tbaa !25
  %676 = icmp eq ptr %675, null
  br i1 %676, label %677, label %631, !llvm.loop !335

677:                                              ; preds = %668, %673, %637, %645, %654, %662, %666, %631, %623
  %678 = phi i64 [ %625, %623 ], [ %640, %668 ], [ %674, %673 ], [ %640, %637 ], [ %640, %645 ], [ %640, %654 ], [ %640, %662 ], [ %640, %666 ], [ %674, %631 ]
  %679 = phi ptr [ %585, %623 ], [ %638, %668 ], [ %655, %673 ], [ %638, %637 ], [ %638, %645 ], [ %638, %654 ], [ %638, %662 ], [ %638, %666 ], [ %655, %631 ]
  %680 = trunc i64 %678 to i8
  br label %681

681:                                              ; preds = %677, %617
  %682 = phi i8 [ %620, %617 ], [ %680, %677 ]
  %683 = phi ptr [ %585, %617 ], [ %679, %677 ]
  br i1 %618, label %687, label %684

684:                                              ; preds = %681
  store ptr %683, ptr %52, align 8, !tbaa !25
  %685 = or i8 %682, %568
  %686 = getelementptr inbounds %struct.op, ptr %52, i64 0, i32 6
  store i8 %685, ptr %686, align 1, !tbaa !33
  br label %1756

687:                                              ; preds = %571, %681
  %688 = phi ptr [ %683, %681 ], [ %565, %571 ]
  %689 = phi i8 [ %682, %681 ], [ %564, %571 ]
  %690 = phi i64 [ %619, %681 ], [ %567, %571 ]
  store ptr %688, ptr %54, align 8, !tbaa !25
  %691 = and i16 %119, -512
  %692 = or i16 %691, 390
  store i16 %692, ptr %55, align 8
  %693 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_ppaddr, i64 0, i64 390), align 8, !tbaa !6
  %694 = getelementptr inbounds %struct.op, ptr %54, i64 0, i32 2
  store ptr %693, ptr %694, align 8, !tbaa !78
  %695 = getelementptr inbounds %struct.op, ptr %54, i64 0, i32 3
  store i64 %690, ptr %695, align 8, !tbaa !34
  %696 = or i8 %689, %568
  %697 = getelementptr inbounds %struct.op, ptr %54, i64 0, i32 6
  store i8 %696, ptr %697, align 1, !tbaa !33
  %698 = getelementptr inbounds %struct.op, ptr %54, i64 0, i32 5
  %699 = load i8, ptr %698, align 2, !tbaa !35
  %700 = and i8 %699, 124
  %701 = select i1 %464, i8 -128, i8 0
  %702 = or i8 %701, %700
  %703 = or i8 %702, %572
  store i8 %703, ptr %698, align 2, !tbaa !35
  br label %1741

704:                                              ; preds = %118, %118, %118
  %705 = icmp eq ptr %53, null
  br i1 %705, label %715, label %706

706:                                              ; preds = %704
  %707 = getelementptr inbounds %struct.op, ptr %54, i64 0, i32 6
  %708 = load i8, ptr %707, align 1, !tbaa !33
  %709 = icmp eq i8 %708, -64
  br i1 %709, label %710, label %715

710:                                              ; preds = %706
  %711 = getelementptr inbounds %struct.op, ptr %54, i64 0, i32 5
  %712 = load i8, ptr %711, align 2, !tbaa !35
  %713 = and i8 %712, 3
  %714 = icmp eq i8 %713, 1
  br i1 %714, label %875, label %715

715:                                              ; preds = %710, %706, %704
  %716 = icmp eq i16 %120, 10
  br i1 %716, label %725, label %1741

717:                                              ; preds = %118
  %718 = icmp eq i16 %120, 10
  br i1 %718, label %725, label %719

719:                                              ; preds = %717
  %720 = load ptr, ptr %54, align 8, !tbaa !25
  %721 = getelementptr inbounds %struct.op, ptr %720, i64 0, i32 4
  %722 = load i16, ptr %721, align 8
  %723 = and i16 %722, 511
  %724 = icmp eq i16 %723, 135
  br i1 %724, label %725, label %858

725:                                              ; preds = %719, %715, %717
  %726 = phi ptr [ %54, %717 ], [ %54, %715 ], [ %720, %719 ]
  %727 = load ptr, ptr %726, align 8, !tbaa !25
  %728 = icmp eq ptr %727, null
  br i1 %728, label %852, label %729

729:                                              ; preds = %725
  %730 = getelementptr inbounds %struct.op, ptr %727, i64 0, i32 4
  %731 = load i16, ptr %730, align 8
  %732 = and i16 %731, 511
  %733 = icmp eq i16 %732, 5
  br i1 %733, label %734, label %852

734:                                              ; preds = %729
  %735 = load ptr, ptr %727, align 8, !tbaa !25
  store ptr %735, ptr @PL_op, align 8, !tbaa !6
  %736 = icmp eq ptr %735, null
  br i1 %736, label %852, label %737

737:                                              ; preds = %734
  %738 = load ptr, ptr %727, align 8, !tbaa !25
  %739 = getelementptr inbounds %struct.op, ptr %738, i64 0, i32 4
  %740 = load i16, ptr %739, align 8
  %741 = and i16 %740, 511
  %742 = icmp eq i16 %741, 138
  br i1 %742, label %743, label %852

743:                                              ; preds = %737
  %744 = getelementptr inbounds %struct.op, ptr %738, i64 0, i32 6
  %745 = load i8, ptr %744, align 1, !tbaa !33
  %746 = icmp ult i8 %745, 8
  br i1 %746, label %747, label %852

747:                                              ; preds = %743
  %748 = getelementptr inbounds %struct.svop, ptr %727, i64 0, i32 7
  %749 = load ptr, ptr %748, align 8, !tbaa !65
  %750 = getelementptr inbounds %struct.sv, ptr %749, i64 0, i32 2
  %751 = load i32, ptr %750, align 4, !tbaa !84
  %752 = and i32 %751, 2097408
  %753 = icmp eq i32 %752, 256
  br i1 %753, label %754, label %758

754:                                              ; preds = %747
  %755 = load ptr, ptr %749, align 8, !tbaa !85
  %756 = getelementptr inbounds %struct.xpviv, ptr %755, i64 0, i32 4
  %757 = load i64, ptr %756, align 8, !tbaa !13
  br label %760

758:                                              ; preds = %747
  %759 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %749, i32 noundef 2) #29
  br label %760

760:                                              ; preds = %758, %754
  %761 = phi i64 [ %757, %754 ], [ %759, %758 ]
  %762 = add i64 %761, 128
  %763 = icmp ult i64 %762, 256
  br i1 %763, label %766, label %764

764:                                              ; preds = %760
  %765 = load i16, ptr %55, align 8
  br label %852

766:                                              ; preds = %760
  %767 = getelementptr inbounds %struct.svop, ptr %727, i64 0, i32 6
  %768 = load i8, ptr %767, align 1, !tbaa !76
  %769 = and i8 %768, 8
  %770 = icmp eq i8 %769, 0
  br i1 %770, label %776, label %771

771:                                              ; preds = %766
  %772 = load ptr, ptr %748, align 8, !tbaa !65
  %773 = tail call ptr (ptr, ...) @Perl_mess(ptr noundef nonnull @.str.25, ptr noundef %772) #29
  tail call void @Perl_qerror(ptr noundef %773) #29
  %774 = load i8, ptr %767, align 1, !tbaa !33
  %775 = and i8 %774, -9
  store i8 %775, ptr %767, align 1, !tbaa !33
  br label %776

776:                                              ; preds = %771, %766
  %777 = load i16, ptr %55, align 8
  %778 = and i16 %777, 511
  %779 = icmp eq i16 %778, 7
  br i1 %779, label %780, label %794

780:                                              ; preds = %776
  %781 = load ptr, ptr %54, align 8, !tbaa !25
  %782 = getelementptr inbounds %struct.op, ptr %781, i64 0, i32 4
  %783 = load i16, ptr %782, align 8
  %784 = and i16 %783, 511
  %785 = icmp eq i16 %784, 0
  br i1 %785, label %794, label %786

786:                                              ; preds = %780
  tail call void @Perl_op_clear(ptr noundef nonnull %781)
  %787 = load i16, ptr %782, align 8
  %788 = and i16 %787, 511
  %789 = zext i16 %788 to i64
  %790 = getelementptr inbounds %struct.op, ptr %781, i64 0, i32 3
  store i64 %789, ptr %790, align 8, !tbaa !34
  %791 = and i16 %787, -512
  store i16 %791, ptr %782, align 8
  %792 = load ptr, ptr @PL_ppaddr, align 8, !tbaa !6
  %793 = getelementptr inbounds %struct.op, ptr %781, i64 0, i32 2
  store ptr %792, ptr %793, align 8, !tbaa !78
  br label %794

794:                                              ; preds = %786, %780, %776
  %795 = load ptr, ptr %727, align 8, !tbaa !25
  %796 = getelementptr inbounds %struct.op, ptr %795, i64 0, i32 4
  %797 = load i16, ptr %796, align 8
  %798 = and i16 %797, 511
  %799 = icmp eq i16 %798, 0
  br i1 %799, label %808, label %800

800:                                              ; preds = %794
  tail call void @Perl_op_clear(ptr noundef nonnull %795)
  %801 = load i16, ptr %796, align 8
  %802 = and i16 %801, 511
  %803 = zext i16 %802 to i64
  %804 = getelementptr inbounds %struct.op, ptr %795, i64 0, i32 3
  store i64 %803, ptr %804, align 8, !tbaa !34
  %805 = and i16 %801, -512
  store i16 %805, ptr %796, align 8
  %806 = load ptr, ptr @PL_ppaddr, align 8, !tbaa !6
  %807 = getelementptr inbounds %struct.op, ptr %795, i64 0, i32 2
  store ptr %806, ptr %807, align 8, !tbaa !78
  br label %808

808:                                              ; preds = %794, %800
  %809 = load i16, ptr %730, align 8
  %810 = and i16 %809, 511
  %811 = icmp eq i16 %810, 0
  br i1 %811, label %820, label %812

812:                                              ; preds = %808
  tail call void @Perl_op_clear(ptr noundef nonnull %727)
  %813 = load i16, ptr %730, align 8
  %814 = and i16 %813, 511
  %815 = zext i16 %814 to i64
  %816 = getelementptr inbounds %struct.op, ptr %727, i64 0, i32 3
  store i64 %815, ptr %816, align 8, !tbaa !34
  %817 = and i16 %813, -512
  store i16 %817, ptr %730, align 8
  %818 = load ptr, ptr @PL_ppaddr, align 8, !tbaa !6
  %819 = getelementptr inbounds %struct.op, ptr %727, i64 0, i32 2
  store ptr %818, ptr %819, align 8, !tbaa !78
  br label %820

820:                                              ; preds = %808, %812
  %821 = load ptr, ptr %727, align 8, !tbaa !25
  %822 = getelementptr inbounds %struct.op, ptr %821, i64 0, i32 5
  %823 = load i8, ptr %822, align 2, !tbaa !35
  %824 = and i8 %823, 32
  %825 = getelementptr inbounds %struct.op, ptr %54, i64 0, i32 5
  %826 = load i8, ptr %825, align 2, !tbaa !35
  %827 = or i8 %826, %824
  store i8 %827, ptr %825, align 2, !tbaa !35
  %828 = load ptr, ptr %821, align 8, !tbaa !25
  store ptr %828, ptr %54, align 8, !tbaa !25
  %829 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_ppaddr, i64 0, i64 136), align 8, !tbaa !6
  %830 = getelementptr inbounds %struct.op, ptr %54, i64 0, i32 2
  store ptr %829, ptr %830, align 8, !tbaa !78
  %831 = trunc i64 %761 to i8
  %832 = getelementptr inbounds %struct.op, ptr %54, i64 0, i32 6
  store i8 %831, ptr %832, align 1, !tbaa !33
  %833 = load i16, ptr %55, align 8
  %834 = and i16 %833, 511
  %835 = icmp eq i16 %834, 7
  br i1 %835, label %836, label %847

836:                                              ; preds = %820
  %837 = getelementptr inbounds %struct.svop, ptr %54, i64 0, i32 7
  %838 = load ptr, ptr %837, align 8, !tbaa !65
  %839 = getelementptr inbounds %struct.gv, ptr %838, i64 0, i32 3
  %840 = load ptr, ptr %839, align 8, !tbaa !13
  %841 = getelementptr inbounds %struct.gp, ptr %840, i64 0, i32 6
  %842 = load ptr, ptr %841, align 8, !tbaa !240
  %843 = icmp eq ptr %842, null
  br i1 %843, label %844, label %847

844:                                              ; preds = %836
  %845 = tail call ptr @Perl_gv_add_by_type(ptr noundef nonnull %838, i32 noundef 11) #29
  %846 = load i16, ptr %55, align 8
  br label %847

847:                                              ; preds = %820, %844, %836
  %848 = phi i16 [ %833, %836 ], [ %846, %844 ], [ %833, %820 ]
  %849 = phi i16 [ 136, %836 ], [ 136, %844 ], [ 137, %820 ]
  %850 = and i16 %848, -512
  %851 = or i16 %850, %849
  store i16 %851, ptr %55, align 8
  br label %852

852:                                              ; preds = %764, %847, %743, %737, %734, %729, %725
  %853 = phi i16 [ %765, %764 ], [ %851, %847 ], [ %119, %743 ], [ %119, %737 ], [ %119, %734 ], [ %119, %729 ], [ %119, %725 ]
  %854 = and i16 %853, 511
  %855 = icmp eq i16 %854, 7
  br i1 %855, label %856, label %1741

856:                                              ; preds = %852
  %857 = load ptr, ptr %54, align 8, !tbaa !25
  br label %858

858:                                              ; preds = %856, %719
  %859 = phi ptr [ %857, %856 ], [ %720, %719 ]
  %860 = phi i16 [ %853, %856 ], [ %119, %719 ]
  %861 = icmp eq ptr %53, null
  %862 = getelementptr inbounds %struct.op, ptr %859, i64 0, i32 4
  %863 = load i16, ptr %862, align 8
  br i1 %861, label %884, label %864

864:                                              ; preds = %858
  %865 = and i16 %863, 511
  switch i16 %865, label %884 [
    i16 15, label %866
    i16 135, label %866
    i16 149, label %866
  ]

866:                                              ; preds = %864, %864, %864
  %867 = getelementptr inbounds %struct.op, ptr %859, i64 0, i32 5
  %868 = load i8, ptr %867, align 2, !tbaa !35
  %869 = and i8 %868, 3
  %870 = icmp eq i8 %869, 1
  br i1 %870, label %871, label %884

871:                                              ; preds = %866
  %872 = getelementptr inbounds %struct.op, ptr %859, i64 0, i32 6
  %873 = load i8, ptr %872, align 1, !tbaa !33
  %874 = icmp sgt i8 %873, -1
  br i1 %874, label %875, label %884

875:                                              ; preds = %871, %710
  %876 = phi ptr [ %54, %710 ], [ %859, %871 ]
  %877 = load ptr, ptr %876, align 8, !tbaa !25
  store ptr %877, ptr %53, align 8, !tbaa !25
  %878 = getelementptr inbounds %struct.op, ptr %53, i64 0, i32 4
  %879 = load i16, ptr %878, align 8
  %880 = and i16 %879, 511
  %881 = icmp eq i16 %880, 193
  br i1 %881, label %882, label %1741

882:                                              ; preds = %875
  %883 = and i16 %879, -513
  store i16 %883, ptr %878, align 8
  br label %50

884:                                              ; preds = %864, %871, %866, %858
  %885 = getelementptr inbounds %struct.op, ptr %859, i64 0, i32 4
  %886 = and i16 %863, 511
  switch i16 %886, label %1741 [
    i16 15, label %887
    i16 26, label %913
  ]

887:                                              ; preds = %884
  %888 = getelementptr inbounds %struct.op, ptr %859, i64 0, i32 6
  %889 = load i8, ptr %888, align 1, !tbaa !33
  %890 = and i8 %889, 48
  %891 = icmp eq i8 %890, 0
  br i1 %891, label %892, label %1741

892:                                              ; preds = %887
  tail call void @Perl_op_clear(ptr noundef nonnull %859)
  %893 = load i16, ptr %885, align 8
  %894 = and i16 %893, 511
  %895 = zext i16 %894 to i64
  %896 = getelementptr inbounds %struct.op, ptr %859, i64 0, i32 3
  store i64 %895, ptr %896, align 8, !tbaa !34
  %897 = and i16 %893, -512
  store i16 %897, ptr %885, align 8
  %898 = load ptr, ptr @PL_ppaddr, align 8, !tbaa !6
  %899 = getelementptr inbounds %struct.op, ptr %859, i64 0, i32 2
  store ptr %898, ptr %899, align 8, !tbaa !78
  %900 = load ptr, ptr %54, align 8, !tbaa !25
  %901 = getelementptr inbounds %struct.op, ptr %900, i64 0, i32 6
  %902 = load i8, ptr %901, align 1, !tbaa !33
  %903 = and i8 %902, -64
  %904 = getelementptr inbounds %struct.op, ptr %54, i64 0, i32 6
  %905 = load i8, ptr %904, align 1, !tbaa !33
  %906 = or i8 %905, %903
  store i8 %906, ptr %904, align 1, !tbaa !33
  %907 = load ptr, ptr %900, align 8, !tbaa !25
  store ptr %907, ptr %54, align 8, !tbaa !25
  %908 = load i16, ptr %55, align 8
  %909 = and i16 %908, -512
  %910 = or i16 %909, 6
  store i16 %910, ptr %55, align 8
  %911 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_ppaddr, i64 0, i64 6), align 8, !tbaa !6
  %912 = getelementptr inbounds %struct.op, ptr %54, i64 0, i32 2
  store ptr %911, ptr %912, align 8, !tbaa !78
  br label %1741

913:                                              ; preds = %884
  %914 = load ptr, ptr %859, align 8, !tbaa !25
  %915 = getelementptr inbounds %struct.op, ptr %914, i64 0, i32 4
  %916 = load i16, ptr %915, align 8
  %917 = and i16 %916, 511
  %918 = icmp eq i16 %917, 67
  br i1 %918, label %919, label %1741

919:                                              ; preds = %913
  %920 = getelementptr inbounds %struct.op, ptr %914, i64 0, i32 5
  %921 = load i8, ptr %920, align 2, !tbaa !35
  %922 = and i8 %921, 64
  %923 = icmp eq i8 %922, 0
  br i1 %923, label %1741, label %924

924:                                              ; preds = %919
  %925 = and i16 %860, -512
  %926 = or i16 %925, 27
  store i16 %926, ptr %55, align 8
  %927 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_ppaddr, i64 0, i64 27), align 8, !tbaa !6
  %928 = getelementptr inbounds %struct.op, ptr %54, i64 0, i32 2
  store ptr %927, ptr %928, align 8, !tbaa !78
  %929 = getelementptr inbounds %struct.op, ptr %54, i64 0, i32 5
  %930 = load i8, ptr %929, align 2, !tbaa !35
  %931 = or i8 %930, 64
  store i8 %931, ptr %929, align 2, !tbaa !35
  %932 = load ptr, ptr %859, align 8, !tbaa !25
  %933 = getelementptr inbounds %struct.op, ptr %932, i64 0, i32 4
  %934 = load i16, ptr %933, align 8
  %935 = and i16 %934, 511
  %936 = icmp eq i16 %935, 0
  br i1 %936, label %946, label %937

937:                                              ; preds = %924
  tail call void @Perl_op_clear(ptr noundef nonnull %932)
  %938 = load i16, ptr %933, align 8
  %939 = and i16 %938, 511
  %940 = zext i16 %939 to i64
  %941 = getelementptr inbounds %struct.op, ptr %932, i64 0, i32 3
  store i64 %940, ptr %941, align 8, !tbaa !34
  %942 = and i16 %938, -512
  store i16 %942, ptr %933, align 8
  %943 = load ptr, ptr @PL_ppaddr, align 8, !tbaa !6
  %944 = getelementptr inbounds %struct.op, ptr %932, i64 0, i32 2
  store ptr %943, ptr %944, align 8, !tbaa !78
  %945 = load ptr, ptr %54, align 8, !tbaa !25
  br label %946

946:                                              ; preds = %924, %937
  %947 = phi ptr [ %859, %924 ], [ %945, %937 ]
  %948 = getelementptr inbounds %struct.op, ptr %947, i64 0, i32 4
  %949 = load i16, ptr %948, align 8
  %950 = and i16 %949, 511
  %951 = icmp eq i16 %950, 0
  br i1 %951, label %1741, label %952

952:                                              ; preds = %946
  tail call void @Perl_op_clear(ptr noundef nonnull %947)
  %953 = load i16, ptr %948, align 8
  %954 = and i16 %953, 511
  %955 = zext i16 %954 to i64
  %956 = getelementptr inbounds %struct.op, ptr %947, i64 0, i32 3
  store i64 %955, ptr %956, align 8, !tbaa !34
  %957 = and i16 %953, -512
  store i16 %957, ptr %948, align 8
  %958 = load ptr, ptr @PL_ppaddr, align 8, !tbaa !6
  %959 = getelementptr inbounds %struct.op, ptr %947, i64 0, i32 2
  store ptr %958, ptr %959, align 8, !tbaa !78
  br label %1741

960:                                              ; preds = %118
  %961 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %962 = getelementptr inbounds %struct.unop, ptr %961, i64 0, i32 7
  %963 = load ptr, ptr %962, align 8, !tbaa !36
  %964 = getelementptr inbounds %struct.op, ptr %963, i64 0, i32 4
  %965 = load i16, ptr %964, align 8
  %966 = and i16 %965, 511
  switch i16 %966, label %1741 [
    i16 11, label %978
    i16 149, label %978
    i16 2, label %967
  ]

967:                                              ; preds = %960
  %968 = getelementptr inbounds %struct.op, ptr %963, i64 0, i32 5
  %969 = load i8, ptr %968, align 2, !tbaa !35
  %970 = and i8 %969, 4
  %971 = icmp eq i8 %970, 0
  br i1 %971, label %1741, label %972

972:                                              ; preds = %967
  %973 = getelementptr inbounds %struct.unop, ptr %963, i64 0, i32 7
  %974 = load ptr, ptr %973, align 8, !tbaa !36
  %975 = getelementptr inbounds %struct.op, ptr %974, i64 0, i32 4
  %976 = load i16, ptr %975, align 8
  %977 = and i16 %976, 511
  switch i16 %977, label %1741 [
    i16 11, label %978
    i16 149, label %978
  ]

978:                                              ; preds = %972, %972, %960, %960
  %979 = phi ptr [ %963, %960 ], [ %963, %960 ], [ %974, %972 ], [ %974, %972 ]
  %980 = getelementptr inbounds %struct.op, ptr %979, i64 0, i32 6
  %981 = load i8, ptr %980, align 1, !tbaa !33
  %982 = or i8 %981, 32
  store i8 %982, ptr %980, align 1, !tbaa !33
  br label %1741

983:                                              ; preds = %118, %118, %118
  %984 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %985 = getelementptr inbounds %struct.logop, ptr %984, i64 0, i32 7
  %986 = load ptr, ptr %985, align 8, !tbaa !101
  %987 = getelementptr inbounds %struct.op, ptr %986, i64 0, i32 1
  %988 = load ptr, ptr %987, align 8, !tbaa !38
  %989 = getelementptr inbounds %struct.logop, ptr %984, i64 0, i32 8
  %990 = load ptr, ptr %989, align 8, !tbaa !102
  %991 = getelementptr inbounds %struct.op, ptr %990, i64 0, i32 4
  %992 = load i16, ptr %991, align 8
  %993 = and i16 %992, 511
  %994 = icmp eq i16 %993, 0
  br i1 %994, label %995, label %1002

995:                                              ; preds = %983, %995
  %996 = phi ptr [ %997, %995 ], [ %990, %983 ]
  %997 = load ptr, ptr %996, align 8, !tbaa !25
  store ptr %997, ptr %989, align 8, !tbaa !102
  %998 = getelementptr inbounds %struct.op, ptr %997, i64 0, i32 4
  %999 = load i16, ptr %998, align 8
  %1000 = and i16 %999, 511
  %1001 = icmp eq i16 %1000, 0
  br i1 %1001, label %995, label %1002, !llvm.loop !336

1002:                                             ; preds = %995, %983
  %1003 = load ptr, ptr %54, align 8, !tbaa !25
  %1004 = icmp eq ptr %1003, null
  br i1 %1004, label %1032, label %1005

1005:                                             ; preds = %1002
  %1006 = load i16, ptr %55, align 8
  %1007 = and i16 %1006, 511
  br label %1008

1008:                                             ; preds = %1005, %1016
  %1009 = phi ptr [ %1017, %1016 ], [ %1003, %1005 ]
  %1010 = getelementptr inbounds %struct.op, ptr %1009, i64 0, i32 4
  %1011 = load i16, ptr %1010, align 8
  %1012 = and i16 %1011, 511
  %1013 = icmp eq i16 %1007, %1012
  %1014 = icmp eq i16 %1012, 0
  %1015 = or i1 %1013, %1014
  br i1 %1015, label %1016, label %1019

1016:                                             ; preds = %1008
  %1017 = load ptr, ptr %1009, align 8, !tbaa !25
  store ptr %1017, ptr %54, align 8, !tbaa !25
  %1018 = icmp eq ptr %1017, null
  br i1 %1018, label %1032, label %1008, !llvm.loop !337

1019:                                             ; preds = %1008
  switch i16 %1007, label %1032 [
    i16 176, label %1020
    i16 177, label %1022
  ]

1020:                                             ; preds = %1019
  %1021 = icmp eq i16 %1012, 177
  br i1 %1021, label %1024, label %1032

1022:                                             ; preds = %1019
  %1023 = icmp eq i16 %1012, 176
  br i1 %1023, label %1024, label %1032

1024:                                             ; preds = %1022, %1020
  %1025 = getelementptr inbounds %struct.op, ptr %1009, i64 0, i32 5
  %1026 = load i8, ptr %1025, align 2, !tbaa !35
  %1027 = and i8 %1026, 3
  %1028 = icmp eq i8 %1027, 1
  br i1 %1028, label %1029, label %1032

1029:                                             ; preds = %1024
  %1030 = getelementptr inbounds %struct.logop, ptr %1009, i64 0, i32 8
  %1031 = load ptr, ptr %1030, align 8, !tbaa !102
  store ptr %1031, ptr %54, align 8, !tbaa !25
  br label %1032

1032:                                             ; preds = %1016, %1002, %1019, %1020, %1022, %1024, %1029
  %1033 = icmp eq i32 %16, 3
  br i1 %1033, label %1034, label %1053

1034:                                             ; preds = %1032
  %1035 = sext i32 %15 to i64
  %1036 = getelementptr inbounds [4 x ptr], ptr %2, i64 0, i64 %1035
  %1037 = load ptr, ptr %1036, align 8, !tbaa !6
  %1038 = load ptr, ptr @PL_rpeepp, align 8, !tbaa !6
  %1039 = load ptr, ptr %1037, align 8, !tbaa !6
  tail call void %1038(ptr noundef %1039) #29
  %1040 = load ptr, ptr %1037, align 8, !tbaa !6
  %1041 = icmp eq ptr %1040, null
  br i1 %1041, label %1050, label %1042

1042:                                             ; preds = %1034, %1047
  %1043 = phi ptr [ %1048, %1047 ], [ %1040, %1034 ]
  %1044 = getelementptr inbounds %struct.op, ptr %1043, i64 0, i32 4
  %1045 = load i16, ptr %1044, align 8
  %1046 = and i16 %1045, 511
  switch i16 %1046, label %1050 [
    i16 0, label %1047
    i16 198, label %1047
    i16 2, label %1047
    i16 192, label %1047
  ]

1047:                                             ; preds = %1042, %1042, %1042, %1042
  %1048 = load ptr, ptr %1043, align 8, !tbaa !25
  store ptr %1048, ptr %1037, align 8, !tbaa !6
  %1049 = icmp eq ptr %1048, null
  br i1 %1049, label %1050, label %1042, !llvm.loop !122

1050:                                             ; preds = %1042, %1047, %1034
  %1051 = add nsw i32 %15, 1
  %1052 = srem i32 %1051, 4
  br label %1053

1053:                                             ; preds = %1050, %1032
  %1054 = phi i32 [ 2, %1050 ], [ %16, %1032 ]
  %1055 = phi i32 [ %1052, %1050 ], [ %15, %1032 ]
  %1056 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %1057 = getelementptr inbounds %struct.logop, ptr %1056, i64 0, i32 8
  %1058 = add nsw i32 %1054, 1
  %1059 = add nsw i32 %1055, %1058
  %1060 = srem i32 %1059, 4
  %1061 = sext i32 %1060 to i64
  %1062 = getelementptr inbounds [4 x ptr], ptr %2, i64 0, i64 %1061
  store ptr %1057, ptr %1062, align 8, !tbaa !6
  %1063 = load i16, ptr %55, align 8
  %1064 = or i16 %1063, 512
  store i16 %1064, ptr %55, align 8
  %1065 = getelementptr inbounds %struct.op, ptr %986, i64 0, i32 4
  %1066 = load i16, ptr %1065, align 8
  %1067 = and i16 %1066, 511
  switch i16 %1067, label %1080 [
    i16 11, label %1081
    i16 149, label %1081
    i16 2, label %1068
  ]

1068:                                             ; preds = %1053
  %1069 = getelementptr inbounds %struct.op, ptr %986, i64 0, i32 5
  %1070 = load i8, ptr %1069, align 2, !tbaa !35
  %1071 = and i8 %1070, 4
  %1072 = icmp eq i8 %1071, 0
  br i1 %1072, label %1081, label %1073

1073:                                             ; preds = %1068
  %1074 = getelementptr inbounds %struct.unop, ptr %986, i64 0, i32 7
  %1075 = load ptr, ptr %1074, align 8, !tbaa !36
  %1076 = getelementptr inbounds %struct.op, ptr %1075, i64 0, i32 4
  %1077 = load i16, ptr %1076, align 8
  %1078 = and i16 %1077, 511
  switch i16 %1078, label %1081 [
    i16 11, label %1079
    i16 149, label %1079
  ]

1079:                                             ; preds = %1073, %1073
  br label %1081

1080:                                             ; preds = %1053
  br label %1081

1081:                                             ; preds = %1073, %1053, %1053, %1080, %1079, %1068
  %1082 = phi ptr [ %1075, %1079 ], [ null, %1068 ], [ %986, %1053 ], [ %986, %1053 ], [ null, %1080 ], [ null, %1073 ]
  %1083 = icmp eq ptr %988, null
  br i1 %1083, label %1102, label %1084

1084:                                             ; preds = %1081
  %1085 = getelementptr inbounds %struct.op, ptr %988, i64 0, i32 4
  %1086 = load i16, ptr %1085, align 8
  %1087 = and i16 %1086, 511
  switch i16 %1087, label %1102 [
    i16 11, label %1099
    i16 149, label %1099
    i16 2, label %1088
  ]

1088:                                             ; preds = %1084
  %1089 = getelementptr inbounds %struct.op, ptr %988, i64 0, i32 5
  %1090 = load i8, ptr %1089, align 2, !tbaa !35
  %1091 = and i8 %1090, 4
  %1092 = icmp eq i8 %1091, 0
  br i1 %1092, label %1102, label %1093

1093:                                             ; preds = %1088
  %1094 = getelementptr inbounds %struct.unop, ptr %988, i64 0, i32 7
  %1095 = load ptr, ptr %1094, align 8, !tbaa !36
  %1096 = getelementptr inbounds %struct.op, ptr %1095, i64 0, i32 4
  %1097 = load i16, ptr %1096, align 8
  %1098 = and i16 %1097, 511
  switch i16 %1098, label %1102 [
    i16 11, label %1099
    i16 149, label %1099
  ]

1099:                                             ; preds = %1084, %1084, %1093, %1093
  %1100 = phi ptr [ %988, %1084 ], [ %988, %1084 ], [ %1095, %1093 ], [ %1095, %1093 ]
  %1101 = icmp ne ptr %1082, null
  br label %1104

1102:                                             ; preds = %1084, %1088, %1093, %1081
  %1103 = icmp eq ptr %1082, null
  br i1 %1103, label %1741, label %1104

1104:                                             ; preds = %1099, %1102
  %1105 = phi i1 [ true, %1099 ], [ false, %1102 ]
  %1106 = phi i1 [ %1101, %1099 ], [ true, %1102 ]
  %1107 = phi ptr [ %1100, %1099 ], [ null, %1102 ]
  %1108 = getelementptr inbounds %struct.op, ptr %54, i64 0, i32 5
  %1109 = load i8, ptr %1108, align 2, !tbaa !35
  %1110 = and i8 %1109, 3
  %1111 = icmp eq i8 %1110, 1
  br i1 %1111, label %1127, label %1112

1112:                                             ; preds = %1104
  %1113 = load ptr, ptr %54, align 8, !tbaa !25
  %1114 = icmp eq ptr %1113, null
  br i1 %1114, label %1127, label %1115

1115:                                             ; preds = %1112, %1123
  %1116 = phi ptr [ %1125, %1123 ], [ %1113, %1112 ]
  %1117 = phi ptr [ %1124, %1123 ], [ %54, %1112 ]
  %1118 = getelementptr inbounds %struct.op, ptr %1116, i64 0, i32 4
  %1119 = load i16, ptr %1118, align 8
  %1120 = and i16 %1119, 511
  %1121 = zext i16 %1120 to i32
  switch i32 %1121, label %1127 [
    i32 103, label %1122
    i32 176, label %1122
    i32 177, label %1122
    i32 179, label %1122
    i32 0, label %1123
  ]

1122:                                             ; preds = %1115, %1115, %1115, %1115
  br label %1123

1123:                                             ; preds = %1115, %1122
  %1124 = phi ptr [ %1116, %1122 ], [ %1117, %1115 ]
  %1125 = load ptr, ptr %1116, align 8, !tbaa !25
  %1126 = icmp eq ptr %1125, null
  br i1 %1126, label %1127, label %1115

1127:                                             ; preds = %1123, %1115, %1112, %1104
  %1128 = phi ptr [ %54, %1104 ], [ %54, %1112 ], [ %1124, %1123 ], [ %1117, %1115 ]
  %1129 = getelementptr inbounds %struct.op, ptr %1128, i64 0, i32 5
  %1130 = load i8, ptr %1129, align 2, !tbaa !35
  br i1 %1106, label %1131, label %1144

1131:                                             ; preds = %1127
  %1132 = and i8 %1130, 3
  %1133 = icmp eq i8 %1132, 1
  %1134 = and i16 %1063, 511
  %1135 = icmp eq i16 %1134, 176
  %1136 = select i1 %1133, i1 true, i1 %1135
  br i1 %1136, label %1139, label %1137

1137:                                             ; preds = %1131
  %1138 = icmp eq i8 %1132, 0
  br i1 %1138, label %1139, label %1144

1139:                                             ; preds = %1137, %1131
  %1140 = phi i8 [ 32, %1131 ], [ 16, %1137 ]
  %1141 = getelementptr inbounds %struct.op, ptr %1082, i64 0, i32 6
  %1142 = load i8, ptr %1141, align 1, !tbaa !33
  %1143 = or i8 %1142, %1140
  store i8 %1143, ptr %1141, align 1, !tbaa !33
  br label %1144

1144:                                             ; preds = %1139, %1127, %1137
  %1145 = and i8 %1130, 3
  %1146 = icmp eq i8 %1145, 1
  %1147 = and i1 %1105, %1146
  br i1 %1147, label %1148, label %1741

1148:                                             ; preds = %1144
  %1149 = getelementptr inbounds %struct.op, ptr %1107, i64 0, i32 6
  %1150 = load i8, ptr %1149, align 1, !tbaa !33
  %1151 = or i8 %1150, 32
  store i8 %1151, ptr %1149, align 1, !tbaa !33
  br label %1741

1152:                                             ; preds = %118
  %1153 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %1154 = getelementptr inbounds %struct.logop, ptr %1153, i64 0, i32 7
  %1155 = load ptr, ptr %1154, align 8, !tbaa !101
  %1156 = getelementptr inbounds %struct.op, ptr %1155, i64 0, i32 4
  %1157 = load i16, ptr %1156, align 8
  %1158 = and i16 %1157, 511
  switch i16 %1158, label %1177 [
    i16 11, label %1170
    i16 149, label %1170
    i16 2, label %1159
  ]

1159:                                             ; preds = %1152
  %1160 = getelementptr inbounds %struct.op, ptr %1155, i64 0, i32 5
  %1161 = load i8, ptr %1160, align 2, !tbaa !35
  %1162 = and i8 %1161, 4
  %1163 = icmp eq i8 %1162, 0
  br i1 %1163, label %1177, label %1164

1164:                                             ; preds = %1159
  %1165 = getelementptr inbounds %struct.unop, ptr %1155, i64 0, i32 7
  %1166 = load ptr, ptr %1165, align 8, !tbaa !36
  %1167 = getelementptr inbounds %struct.op, ptr %1166, i64 0, i32 4
  %1168 = load i16, ptr %1167, align 8
  %1169 = and i16 %1168, 511
  switch i16 %1169, label %1177 [
    i16 11, label %1170
    i16 149, label %1170
  ]

1170:                                             ; preds = %1164, %1164, %1152, %1152
  %1171 = phi ptr [ %1155, %1152 ], [ %1155, %1152 ], [ %1166, %1164 ], [ %1166, %1164 ]
  %1172 = getelementptr inbounds %struct.op, ptr %1171, i64 0, i32 6
  %1173 = load i8, ptr %1172, align 1, !tbaa !33
  %1174 = or i8 %1173, 32
  store i8 %1174, ptr %1172, align 1, !tbaa !33
  br label %1177

1175:                                             ; preds = %118, %118, %118, %118, %118, %118, %118
  %1176 = load ptr, ptr @PL_op, align 8, !tbaa !6
  br label %1177

1177:                                             ; preds = %1175, %1164, %1152, %1159, %1170
  %1178 = phi ptr [ %1176, %1175 ], [ %1153, %1164 ], [ %1153, %1152 ], [ %1153, %1159 ], [ %1153, %1170 ]
  %1179 = getelementptr inbounds %struct.logop, ptr %1178, i64 0, i32 8
  %1180 = load ptr, ptr %1179, align 8, !tbaa !102
  %1181 = getelementptr inbounds %struct.op, ptr %1180, i64 0, i32 4
  %1182 = load i16, ptr %1181, align 8
  %1183 = and i16 %1182, 511
  %1184 = icmp eq i16 %1183, 0
  br i1 %1184, label %1185, label %1192

1185:                                             ; preds = %1177, %1185
  %1186 = phi ptr [ %1187, %1185 ], [ %1180, %1177 ]
  %1187 = load ptr, ptr %1186, align 8, !tbaa !25
  store ptr %1187, ptr %1179, align 8, !tbaa !102
  %1188 = getelementptr inbounds %struct.op, ptr %1187, i64 0, i32 4
  %1189 = load i16, ptr %1188, align 8
  %1190 = and i16 %1189, 511
  %1191 = icmp eq i16 %1190, 0
  br i1 %1191, label %1185, label %1192, !llvm.loop !338

1192:                                             ; preds = %1185, %1177
  %1193 = icmp eq i32 %16, 3
  br i1 %1193, label %1194, label %1214

1194:                                             ; preds = %1192
  %1195 = sext i32 %15 to i64
  %1196 = getelementptr inbounds [4 x ptr], ptr %2, i64 0, i64 %1195
  %1197 = load ptr, ptr %1196, align 8, !tbaa !6
  %1198 = load ptr, ptr @PL_rpeepp, align 8, !tbaa !6
  %1199 = load ptr, ptr %1197, align 8, !tbaa !6
  tail call void %1198(ptr noundef %1199) #29
  %1200 = load ptr, ptr %1197, align 8, !tbaa !6
  %1201 = icmp eq ptr %1200, null
  br i1 %1201, label %1210, label %1202

1202:                                             ; preds = %1194, %1207
  %1203 = phi ptr [ %1208, %1207 ], [ %1200, %1194 ]
  %1204 = getelementptr inbounds %struct.op, ptr %1203, i64 0, i32 4
  %1205 = load i16, ptr %1204, align 8
  %1206 = and i16 %1205, 511
  switch i16 %1206, label %1210 [
    i16 0, label %1207
    i16 198, label %1207
    i16 2, label %1207
    i16 192, label %1207
  ]

1207:                                             ; preds = %1202, %1202, %1202, %1202
  %1208 = load ptr, ptr %1203, align 8, !tbaa !25
  store ptr %1208, ptr %1197, align 8, !tbaa !6
  %1209 = icmp eq ptr %1208, null
  br i1 %1209, label %1210, label %1202, !llvm.loop !122

1210:                                             ; preds = %1202, %1207, %1194
  %1211 = add nsw i32 %15, 1
  %1212 = srem i32 %1211, 4
  %1213 = load ptr, ptr @PL_op, align 8, !tbaa !6
  br label %1214

1214:                                             ; preds = %1210, %1192
  %1215 = phi ptr [ %1213, %1210 ], [ %1178, %1192 ]
  %1216 = phi i32 [ 2, %1210 ], [ %16, %1192 ]
  %1217 = phi i32 [ %1212, %1210 ], [ %15, %1192 ]
  %1218 = getelementptr inbounds %struct.logop, ptr %1215, i64 0, i32 8
  %1219 = add nsw i32 %1216, 1
  %1220 = add nsw i32 %1217, %1219
  %1221 = srem i32 %1220, 4
  %1222 = sext i32 %1221 to i64
  %1223 = getelementptr inbounds [4 x ptr], ptr %2, i64 0, i64 %1222
  store ptr %1218, ptr %1223, align 8, !tbaa !6
  br label %1741

1224:                                             ; preds = %118, %118
  %1225 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %1226 = getelementptr inbounds %struct.loop, ptr %1225, i64 0, i32 9
  %1227 = load ptr, ptr %1226, align 8, !tbaa !288
  %1228 = getelementptr inbounds %struct.op, ptr %1227, i64 0, i32 4
  %1229 = load i16, ptr %1228, align 8
  %1230 = and i16 %1229, 511
  %1231 = icmp eq i16 %1230, 0
  br i1 %1231, label %1239, label %1232

1232:                                             ; preds = %1239, %1224
  %1233 = getelementptr inbounds %struct.loop, ptr %1225, i64 0, i32 10
  %1234 = load ptr, ptr %1233, align 8, !tbaa !339
  %1235 = getelementptr inbounds %struct.op, ptr %1234, i64 0, i32 4
  %1236 = load i16, ptr %1235, align 8
  %1237 = and i16 %1236, 511
  %1238 = icmp eq i16 %1237, 0
  br i1 %1238, label %1253, label %1246

1239:                                             ; preds = %1224, %1239
  %1240 = phi ptr [ %1241, %1239 ], [ %1227, %1224 ]
  %1241 = load ptr, ptr %1240, align 8, !tbaa !25
  store ptr %1241, ptr %1226, align 8, !tbaa !288
  %1242 = getelementptr inbounds %struct.op, ptr %1241, i64 0, i32 4
  %1243 = load i16, ptr %1242, align 8
  %1244 = and i16 %1243, 511
  %1245 = icmp eq i16 %1244, 0
  br i1 %1245, label %1239, label %1232, !llvm.loop !340

1246:                                             ; preds = %1253, %1232
  %1247 = getelementptr inbounds %struct.loop, ptr %1225, i64 0, i32 11
  %1248 = load ptr, ptr %1247, align 8, !tbaa !289
  %1249 = getelementptr inbounds %struct.op, ptr %1248, i64 0, i32 4
  %1250 = load i16, ptr %1249, align 8
  %1251 = and i16 %1250, 511
  %1252 = icmp eq i16 %1251, 0
  br i1 %1252, label %1260, label %1267

1253:                                             ; preds = %1232, %1253
  %1254 = phi ptr [ %1255, %1253 ], [ %1234, %1232 ]
  %1255 = load ptr, ptr %1254, align 8, !tbaa !25
  store ptr %1255, ptr %1233, align 8, !tbaa !339
  %1256 = getelementptr inbounds %struct.op, ptr %1255, i64 0, i32 4
  %1257 = load i16, ptr %1256, align 8
  %1258 = and i16 %1257, 511
  %1259 = icmp eq i16 %1258, 0
  br i1 %1259, label %1253, label %1246, !llvm.loop !341

1260:                                             ; preds = %1246, %1260
  %1261 = phi ptr [ %1262, %1260 ], [ %1248, %1246 ]
  %1262 = load ptr, ptr %1261, align 8, !tbaa !25
  store ptr %1262, ptr %1247, align 8, !tbaa !289
  %1263 = getelementptr inbounds %struct.op, ptr %1262, i64 0, i32 4
  %1264 = load i16, ptr %1263, align 8
  %1265 = and i16 %1264, 511
  %1266 = icmp eq i16 %1265, 0
  br i1 %1266, label %1260, label %1267, !llvm.loop !342

1267:                                             ; preds = %1260, %1246
  %1268 = icmp eq i32 %16, 3
  br i1 %1268, label %1269, label %1289

1269:                                             ; preds = %1267
  %1270 = sext i32 %15 to i64
  %1271 = getelementptr inbounds [4 x ptr], ptr %2, i64 0, i64 %1270
  %1272 = load ptr, ptr %1271, align 8, !tbaa !6
  %1273 = load ptr, ptr @PL_rpeepp, align 8, !tbaa !6
  %1274 = load ptr, ptr %1272, align 8, !tbaa !6
  tail call void %1273(ptr noundef %1274) #29
  %1275 = load ptr, ptr %1272, align 8, !tbaa !6
  %1276 = icmp eq ptr %1275, null
  br i1 %1276, label %1285, label %1277

1277:                                             ; preds = %1269, %1282
  %1278 = phi ptr [ %1283, %1282 ], [ %1275, %1269 ]
  %1279 = getelementptr inbounds %struct.op, ptr %1278, i64 0, i32 4
  %1280 = load i16, ptr %1279, align 8
  %1281 = and i16 %1280, 511
  switch i16 %1281, label %1285 [
    i16 0, label %1282
    i16 198, label %1282
    i16 2, label %1282
    i16 192, label %1282
  ]

1282:                                             ; preds = %1277, %1277, %1277, %1277
  %1283 = load ptr, ptr %1278, align 8, !tbaa !25
  store ptr %1283, ptr %1272, align 8, !tbaa !6
  %1284 = icmp eq ptr %1283, null
  br i1 %1284, label %1285, label %1277, !llvm.loop !122

1285:                                             ; preds = %1277, %1282, %1269
  %1286 = add nsw i32 %15, 1
  %1287 = srem i32 %1286, 4
  %1288 = load ptr, ptr @PL_op, align 8, !tbaa !6
  br label %1289

1289:                                             ; preds = %1285, %1267
  %1290 = phi ptr [ %1288, %1285 ], [ %1225, %1267 ]
  %1291 = phi i32 [ 2, %1285 ], [ %16, %1267 ]
  %1292 = phi i32 [ %1287, %1285 ], [ %15, %1267 ]
  %1293 = getelementptr inbounds %struct.loop, ptr %1290, i64 0, i32 11
  %1294 = add nsw i32 %1291, 1
  %1295 = add nsw i32 %1292, %1294
  %1296 = srem i32 %1295, 4
  %1297 = sext i32 %1296 to i64
  %1298 = getelementptr inbounds [4 x ptr], ptr %2, i64 0, i64 %1297
  store ptr %1293, ptr %1298, align 8, !tbaa !6
  br label %1741

1299:                                             ; preds = %118
  %1300 = icmp eq i32 %16, 3
  br i1 %1300, label %1301, label %1320

1301:                                             ; preds = %1299
  %1302 = sext i32 %15 to i64
  %1303 = getelementptr inbounds [4 x ptr], ptr %2, i64 0, i64 %1302
  %1304 = load ptr, ptr %1303, align 8, !tbaa !6
  %1305 = load ptr, ptr @PL_rpeepp, align 8, !tbaa !6
  %1306 = load ptr, ptr %1304, align 8, !tbaa !6
  tail call void %1305(ptr noundef %1306) #29
  %1307 = load ptr, ptr %1304, align 8, !tbaa !6
  %1308 = icmp eq ptr %1307, null
  br i1 %1308, label %1317, label %1309

1309:                                             ; preds = %1301, %1314
  %1310 = phi ptr [ %1315, %1314 ], [ %1307, %1301 ]
  %1311 = getelementptr inbounds %struct.op, ptr %1310, i64 0, i32 4
  %1312 = load i16, ptr %1311, align 8
  %1313 = and i16 %1312, 511
  switch i16 %1313, label %1317 [
    i16 0, label %1314
    i16 198, label %1314
    i16 2, label %1314
    i16 192, label %1314
  ]

1314:                                             ; preds = %1309, %1309, %1309, %1309
  %1315 = load ptr, ptr %1310, align 8, !tbaa !25
  store ptr %1315, ptr %1304, align 8, !tbaa !6
  %1316 = icmp eq ptr %1315, null
  br i1 %1316, label %1317, label %1309, !llvm.loop !122

1317:                                             ; preds = %1309, %1314, %1301
  %1318 = add nsw i32 %15, 1
  %1319 = srem i32 %1318, 4
  br label %1320

1320:                                             ; preds = %1317, %1299
  %1321 = phi i32 [ 2, %1317 ], [ %16, %1299 ]
  %1322 = phi i32 [ %1319, %1317 ], [ %15, %1299 ]
  %1323 = getelementptr inbounds %struct.logop, ptr %54, i64 0, i32 8
  %1324 = add nsw i32 %1321, 1
  %1325 = add nsw i32 %1322, %1324
  %1326 = srem i32 %1325, 4
  %1327 = sext i32 %1326 to i64
  %1328 = getelementptr inbounds [4 x ptr], ptr %2, i64 0, i64 %1327
  store ptr %1323, ptr %1328, align 8, !tbaa !6
  br label %1741

1329:                                             ; preds = %122, %1335
  %1330 = phi ptr [ %1336, %1335 ], [ %125, %122 ]
  %1331 = getelementptr inbounds %struct.op, ptr %1330, i64 0, i32 4
  %1332 = load i16, ptr %1331, align 8
  %1333 = and i16 %1332, 511
  %1334 = icmp eq i16 %1333, 0
  br i1 %1334, label %1335, label %1338

1335:                                             ; preds = %1329
  %1336 = load ptr, ptr %1330, align 8, !tbaa !25
  store ptr %1336, ptr %124, align 8, !tbaa !13
  %1337 = icmp eq ptr %1336, null
  br i1 %1337, label %1338, label %1329, !llvm.loop !343

1338:                                             ; preds = %1335, %1329, %122
  %1339 = icmp eq i32 %16, 3
  br i1 %1339, label %1340, label %1360

1340:                                             ; preds = %1338
  %1341 = sext i32 %15 to i64
  %1342 = getelementptr inbounds [4 x ptr], ptr %2, i64 0, i64 %1341
  %1343 = load ptr, ptr %1342, align 8, !tbaa !6
  %1344 = load ptr, ptr @PL_rpeepp, align 8, !tbaa !6
  %1345 = load ptr, ptr %1343, align 8, !tbaa !6
  tail call void %1344(ptr noundef %1345) #29
  %1346 = load ptr, ptr %1343, align 8, !tbaa !6
  %1347 = icmp eq ptr %1346, null
  br i1 %1347, label %1356, label %1348

1348:                                             ; preds = %1340, %1353
  %1349 = phi ptr [ %1354, %1353 ], [ %1346, %1340 ]
  %1350 = getelementptr inbounds %struct.op, ptr %1349, i64 0, i32 4
  %1351 = load i16, ptr %1350, align 8
  %1352 = and i16 %1351, 511
  switch i16 %1352, label %1356 [
    i16 0, label %1353
    i16 198, label %1353
    i16 2, label %1353
    i16 192, label %1353
  ]

1353:                                             ; preds = %1348, %1348, %1348, %1348
  %1354 = load ptr, ptr %1349, align 8, !tbaa !25
  store ptr %1354, ptr %1343, align 8, !tbaa !6
  %1355 = icmp eq ptr %1354, null
  br i1 %1355, label %1356, label %1348, !llvm.loop !122

1356:                                             ; preds = %1348, %1353, %1340
  %1357 = add nsw i32 %15, 1
  %1358 = srem i32 %1357, 4
  %1359 = load ptr, ptr @PL_op, align 8, !tbaa !6
  br label %1360

1360:                                             ; preds = %1356, %1338
  %1361 = phi ptr [ %1359, %1356 ], [ %123, %1338 ]
  %1362 = phi i32 [ 2, %1356 ], [ %16, %1338 ]
  %1363 = phi i32 [ %1358, %1356 ], [ %15, %1338 ]
  %1364 = getelementptr inbounds %struct.pmop, ptr %1361, i64 0, i32 12
  %1365 = add nsw i32 %1362, 1
  %1366 = add nsw i32 %1363, %1365
  %1367 = srem i32 %1366, 4
  %1368 = sext i32 %1367 to i64
  %1369 = getelementptr inbounds [4 x ptr], ptr %2, i64 0, i64 %1368
  store ptr %1364, ptr %1369, align 8, !tbaa !6
  br label %1741

1370:                                             ; preds = %118
  %1371 = getelementptr inbounds %struct.op, ptr %54, i64 0, i32 5
  %1372 = load i8, ptr %1371, align 2, !tbaa !35
  %1373 = icmp sgt i8 %1372, -1
  br i1 %1373, label %1413, label %1374

1374:                                             ; preds = %1370
  %1375 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %1376 = getelementptr inbounds %struct.listop, ptr %1375, i64 0, i32 7
  %1377 = load ptr, ptr %1376, align 8, !tbaa !81
  %1378 = getelementptr inbounds %struct.op, ptr %1377, i64 0, i32 1
  %1379 = load ptr, ptr %1378, align 8, !tbaa !38
  %1380 = getelementptr inbounds %struct.unop, ptr %1379, i64 0, i32 7
  %1381 = load ptr, ptr %1380, align 8, !tbaa !36
  %1382 = getelementptr inbounds %struct.listop, ptr %1381, i64 0, i32 7
  %1383 = load ptr, ptr %1382, align 8, !tbaa !81
  %1384 = load ptr, ptr %1383, align 8, !tbaa !205
  store ptr %1384, ptr %1379, align 8, !tbaa !25
  %1385 = icmp eq i32 %16, 3
  br i1 %1385, label %1386, label %1405

1386:                                             ; preds = %1374
  %1387 = sext i32 %15 to i64
  %1388 = getelementptr inbounds [4 x ptr], ptr %2, i64 0, i64 %1387
  %1389 = load ptr, ptr %1388, align 8, !tbaa !6
  %1390 = load ptr, ptr @PL_rpeepp, align 8, !tbaa !6
  %1391 = load ptr, ptr %1389, align 8, !tbaa !6
  tail call void %1390(ptr noundef %1391) #29
  %1392 = load ptr, ptr %1389, align 8, !tbaa !6
  %1393 = icmp eq ptr %1392, null
  br i1 %1393, label %1402, label %1394

1394:                                             ; preds = %1386, %1399
  %1395 = phi ptr [ %1400, %1399 ], [ %1392, %1386 ]
  %1396 = getelementptr inbounds %struct.op, ptr %1395, i64 0, i32 4
  %1397 = load i16, ptr %1396, align 8
  %1398 = and i16 %1397, 511
  switch i16 %1398, label %1402 [
    i16 0, label %1399
    i16 198, label %1399
    i16 2, label %1399
    i16 192, label %1399
  ]

1399:                                             ; preds = %1394, %1394, %1394, %1394
  %1400 = load ptr, ptr %1395, align 8, !tbaa !25
  store ptr %1400, ptr %1389, align 8, !tbaa !6
  %1401 = icmp eq ptr %1400, null
  br i1 %1401, label %1402, label %1394, !llvm.loop !122

1402:                                             ; preds = %1394, %1399, %1386
  %1403 = add nsw i32 %15, 1
  %1404 = srem i32 %1403, 4
  br label %1405

1405:                                             ; preds = %1402, %1374
  %1406 = phi i32 [ 2, %1402 ], [ %16, %1374 ]
  %1407 = phi i32 [ %1404, %1402 ], [ %15, %1374 ]
  %1408 = add nsw i32 %1406, 1
  %1409 = add nsw i32 %1407, %1408
  %1410 = srem i32 %1409, 4
  %1411 = sext i32 %1410 to i64
  %1412 = getelementptr inbounds [4 x ptr], ptr %2, i64 0, i64 %1411
  store ptr %1379, ptr %1412, align 8, !tbaa !6
  br label %1413

1413:                                             ; preds = %1405, %1370
  %1414 = phi i32 [ %1408, %1405 ], [ %16, %1370 ]
  %1415 = phi i32 [ %1407, %1405 ], [ %15, %1370 ]
  %1416 = getelementptr inbounds %struct.unop, ptr %54, i64 0, i32 7
  %1417 = load ptr, ptr %1416, align 8, !tbaa !36
  %1418 = icmp eq ptr %1417, null
  br i1 %1418, label %1741, label %1419

1419:                                             ; preds = %1413
  %1420 = getelementptr inbounds %struct.op, ptr %1417, i64 0, i32 4
  %1421 = load i16, ptr %1420, align 8
  %1422 = and i16 %1421, 511
  %1423 = icmp eq i16 %1422, 3
  br i1 %1423, label %1424, label %1741

1424:                                             ; preds = %1419
  %1425 = getelementptr inbounds %struct.op, ptr %54, i64 0, i32 6
  %1426 = load i8, ptr %1425, align 1, !tbaa !33
  %1427 = and i8 %1426, 8
  %1428 = icmp eq i8 %1427, 0
  br i1 %1428, label %1429, label %1741

1429:                                             ; preds = %1424
  %1430 = getelementptr inbounds %struct.unop, ptr %54, i64 0, i32 1
  %1431 = load ptr, ptr %1430, align 8, !tbaa !344
  %1432 = icmp eq ptr %1431, null
  br i1 %1432, label %1433, label %1741

1433:                                             ; preds = %1429
  %1434 = load ptr, ptr %54, align 8, !tbaa !25
  %1435 = getelementptr inbounds %struct.op, ptr %1434, i64 0, i32 4
  %1436 = load i16, ptr %1435, align 8
  %1437 = and i16 %1436, 511
  %1438 = icmp eq i16 %1437, 168
  br i1 %1438, label %1439, label %1741

1439:                                             ; preds = %1433
  %1440 = getelementptr inbounds %struct.op, ptr %1434, i64 0, i32 5
  %1441 = load i8, ptr %1440, align 2, !tbaa !35
  %1442 = and i8 %1441, 3
  %1443 = icmp eq i8 %1442, 3
  br i1 %1443, label %1444, label %1741

1444:                                             ; preds = %1439
  %1445 = getelementptr inbounds %struct.unop, ptr %1434, i64 0, i32 7
  %1446 = load ptr, ptr %1445, align 8, !tbaa !36
  %1447 = icmp eq ptr %1446, null
  br i1 %1447, label %1741, label %1448

1448:                                             ; preds = %1444
  %1449 = getelementptr inbounds %struct.op, ptr %1446, i64 0, i32 4
  %1450 = load i16, ptr %1449, align 8
  %1451 = and i16 %1450, 511
  %1452 = icmp eq i16 %1451, 3
  br i1 %1452, label %1453, label %1741

1453:                                             ; preds = %1448
  %1454 = getelementptr inbounds %struct.unop, ptr %1446, i64 0, i32 1
  %1455 = load ptr, ptr %1454, align 8, !tbaa !344
  %1456 = icmp eq ptr %1455, %54
  br i1 %1456, label %1457, label %1741

1457:                                             ; preds = %1453
  %1458 = or i8 %1426, 4
  store i8 %1458, ptr %1425, align 1, !tbaa !33
  tail call void @Perl_op_null(ptr noundef nonnull %1434)
  %1459 = load ptr, ptr %1417, align 8, !tbaa !25
  store ptr %1459, ptr %1446, align 8, !tbaa !25
  tail call void @Perl_op_null(ptr noundef nonnull %1417)
  br label %1741

1460:                                             ; preds = %118
  %1461 = getelementptr inbounds %struct.op, ptr %54, i64 0, i32 6
  %1462 = load i8, ptr %1461, align 1, !tbaa !33
  %1463 = and i8 %1462, 8
  %1464 = icmp eq i8 %1463, 0
  br i1 %1464, label %1465, label %1741

1465:                                             ; preds = %1460
  %1466 = load ptr, ptr %54, align 8, !tbaa !25
  %1467 = icmp eq ptr %1466, null
  br i1 %1467, label %1741, label %1468

1468:                                             ; preds = %1465
  %1469 = getelementptr inbounds %struct.listop, ptr %1466, i64 0, i32 4
  %1470 = load i16, ptr %1469, align 8
  %1471 = and i16 %1470, 511
  %1472 = icmp eq i16 %1471, 0
  br i1 %1472, label %1473, label %1479

1473:                                             ; preds = %1468
  %1474 = load ptr, ptr %1466, align 8, !tbaa !205
  %1475 = icmp eq ptr %1474, null
  br i1 %1475, label %1741, label %1476

1476:                                             ; preds = %1473
  %1477 = getelementptr inbounds %struct.listop, ptr %1474, i64 0, i32 4
  %1478 = load i16, ptr %1477, align 8
  br label %1479

1479:                                             ; preds = %1476, %1468
  %1480 = phi i16 [ %1478, %1476 ], [ %1470, %1468 ]
  %1481 = phi ptr [ %1474, %1476 ], [ %1466, %1468 ]
  %1482 = and i16 %1480, 511
  %1483 = icmp eq i16 %1482, 7
  br i1 %1483, label %1484, label %1498

1484:                                             ; preds = %1479
  %1485 = load ptr, ptr %1481, align 8, !tbaa !205
  %1486 = icmp eq ptr %1485, null
  br i1 %1486, label %1741, label %1487

1487:                                             ; preds = %1484
  %1488 = getelementptr inbounds %struct.listop, ptr %1485, i64 0, i32 4
  %1489 = load i16, ptr %1488, align 8
  %1490 = and i16 %1489, 511
  %1491 = icmp eq i16 %1490, 14
  br i1 %1491, label %1492, label %1498

1492:                                             ; preds = %1487
  %1493 = load ptr, ptr %1485, align 8, !tbaa !205
  %1494 = icmp eq ptr %1493, null
  br i1 %1494, label %1741, label %1495

1495:                                             ; preds = %1492
  %1496 = getelementptr inbounds %struct.listop, ptr %1493, i64 0, i32 4
  %1497 = load i16, ptr %1496, align 8
  br label %1498

1498:                                             ; preds = %1495, %1487, %1479
  %1499 = phi i16 [ %1497, %1495 ], [ %1489, %1487 ], [ %1480, %1479 ]
  %1500 = phi ptr [ %1481, %1495 ], [ %1481, %1487 ], [ null, %1479 ]
  %1501 = phi ptr [ %1493, %1495 ], [ %1485, %1487 ], [ %1481, %1479 ]
  %1502 = and i16 %1499, 511
  %1503 = icmp eq i16 %1502, 199
  br i1 %1503, label %1504, label %1741

1504:                                             ; preds = %1498
  %1505 = load ptr, ptr %1501, align 8, !tbaa !205
  %1506 = icmp eq ptr %1505, null
  br i1 %1506, label %1741, label %1507

1507:                                             ; preds = %1504
  %1508 = getelementptr inbounds %struct.op, ptr %1505, i64 0, i32 4
  %1509 = load i16, ptr %1508, align 8
  %1510 = and i16 %1509, 511
  %1511 = icmp eq i16 %1510, 200
  br i1 %1511, label %1512, label %1741

1512:                                             ; preds = %1507
  %1513 = getelementptr inbounds %struct.listop, ptr %1501, i64 0, i32 7
  %1514 = load ptr, ptr %1513, align 8, !tbaa !81
  %1515 = icmp eq ptr %1514, null
  br i1 %1515, label %1741, label %1516

1516:                                             ; preds = %1512
  %1517 = getelementptr inbounds %struct.op, ptr %1514, i64 0, i32 4
  %1518 = load i16, ptr %1517, align 8
  %1519 = and i16 %1518, 511
  %1520 = icmp eq i16 %1519, 0
  br i1 %1520, label %1521, label %1741

1521:                                             ; preds = %1516
  %1522 = getelementptr inbounds %struct.op, ptr %1514, i64 0, i32 3
  %1523 = load i64, ptr %1522, align 8, !tbaa !34
  %1524 = icmp eq i64 %1523, 3
  br i1 %1524, label %1525, label %1741

1525:                                             ; preds = %1521
  %1526 = getelementptr inbounds %struct.op, ptr %1514, i64 0, i32 1
  %1527 = load ptr, ptr %1526, align 8, !tbaa !38
  %1528 = icmp eq ptr %1527, null
  br i1 %1528, label %1741, label %1529

1529:                                             ; preds = %1525
  %1530 = getelementptr inbounds %struct.listop, ptr %1527, i64 0, i32 4
  %1531 = load i16, ptr %1530, align 8
  %1532 = and i16 %1531, 511
  %1533 = icmp eq i16 %1532, 0
  br i1 %1533, label %1534, label %1741

1534:                                             ; preds = %1529
  %1535 = getelementptr inbounds %struct.listop, ptr %1527, i64 0, i32 3
  %1536 = load i64, ptr %1535, align 8, !tbaa !117
  %1537 = icmp eq i64 %1536, 158
  br i1 %1537, label %1538, label %1741

1538:                                             ; preds = %1534
  %1539 = getelementptr inbounds %struct.listop, ptr %1527, i64 0, i32 8
  %1540 = load ptr, ptr %1539, align 8, !tbaa !83
  %1541 = icmp eq ptr %1540, %54
  br i1 %1541, label %1542, label %1741

1542:                                             ; preds = %1538
  %1543 = getelementptr inbounds %struct.listop, ptr %1527, i64 0, i32 7
  %1544 = load ptr, ptr %1543, align 8, !tbaa !81
  %1545 = icmp eq ptr %1544, null
  br i1 %1545, label %1741, label %1546

1546:                                             ; preds = %1542
  %1547 = getelementptr inbounds %struct.op, ptr %1544, i64 0, i32 4
  %1548 = load i16, ptr %1547, align 8
  %1549 = and i16 %1548, 511
  %1550 = icmp eq i16 %1549, 3
  br i1 %1550, label %1551, label %1741

1551:                                             ; preds = %1546
  %1552 = getelementptr inbounds %struct.op, ptr %1544, i64 0, i32 1
  %1553 = load ptr, ptr %1552, align 8, !tbaa !38
  %1554 = icmp eq ptr %1553, %54
  br i1 %1554, label %1555, label %1741

1555:                                             ; preds = %1551
  %1556 = getelementptr inbounds %struct.listop, ptr %54, i64 0, i32 7
  %1557 = load ptr, ptr %1556, align 8, !tbaa !81
  %1558 = icmp eq ptr %1557, null
  br i1 %1558, label %1741, label %1559

1559:                                             ; preds = %1555
  %1560 = getelementptr inbounds %struct.op, ptr %1557, i64 0, i32 4
  %1561 = load i16, ptr %1560, align 8
  %1562 = and i16 %1561, 511
  %1563 = icmp eq i16 %1562, 3
  br i1 %1563, label %1564, label %1741

1564:                                             ; preds = %1559
  %1565 = getelementptr inbounds %struct.listop, ptr %54, i64 0, i32 8
  %1566 = load ptr, ptr %1565, align 8, !tbaa !83
  %1567 = icmp eq ptr %1566, null
  br i1 %1567, label %1741, label %1568

1568:                                             ; preds = %1564
  %1569 = load ptr, ptr %1566, align 8, !tbaa !25
  %1570 = icmp eq ptr %1569, %54
  br i1 %1570, label %1571, label %1741

1571:                                             ; preds = %1568
  %1572 = getelementptr inbounds %struct.op, ptr %1557, i64 0, i32 1
  %1573 = load ptr, ptr %1572, align 8, !tbaa !38
  %1574 = icmp eq ptr %1573, null
  br i1 %1574, label %1592, label %1575

1575:                                             ; preds = %1571
  %1576 = getelementptr inbounds %struct.op, ptr %1573, i64 0, i32 4
  %1577 = load i16, ptr %1576, align 8
  %1578 = and i16 %1577, 511
  %1579 = icmp eq i16 %1578, 135
  br i1 %1579, label %1580, label %1592

1580:                                             ; preds = %1575
  %1581 = getelementptr inbounds %struct.op, ptr %1573, i64 0, i32 1
  %1582 = load ptr, ptr %1581, align 8, !tbaa !38
  %1583 = icmp eq ptr %1582, null
  br i1 %1583, label %1584, label %1592

1584:                                             ; preds = %1580
  %1585 = getelementptr inbounds %struct.op, ptr %1573, i64 0, i32 5
  %1586 = load i8, ptr %1585, align 2, !tbaa !35
  %1587 = icmp eq i8 %1586, 7
  br i1 %1587, label %1588, label %1592

1588:                                             ; preds = %1584
  store i8 22, ptr %1585, align 2, !tbaa !35
  %1589 = getelementptr inbounds %struct.listop, ptr %1501, i64 0, i32 5
  %1590 = load i8, ptr %1589, align 2, !tbaa !223
  %1591 = or i8 %1590, 64
  store i8 %1591, ptr %1589, align 2, !tbaa !223
  br label %1592

1592:                                             ; preds = %1580, %1588, %1584, %1575, %1571
  %1593 = load ptr, ptr %1557, align 8, !tbaa !25
  store ptr %1593, ptr %1544, align 8, !tbaa !25
  %1594 = getelementptr inbounds %struct.op, ptr %1557, i64 0, i32 5
  %1595 = load i8, ptr %1594, align 2, !tbaa !35
  %1596 = getelementptr inbounds %struct.op, ptr %1544, i64 0, i32 5
  store i8 %1595, ptr %1596, align 2, !tbaa !35
  %1597 = icmp eq ptr %1500, null
  %1598 = select i1 %1597, ptr %1501, ptr %1500
  store ptr %1598, ptr %1566, align 8, !tbaa !25
  tail call void @Perl_op_null(ptr noundef nonnull %1557)
  tail call void @Perl_op_null(ptr noundef nonnull %54)
  %1599 = getelementptr inbounds %struct.listop, ptr %1501, i64 0, i32 6
  %1600 = load i8, ptr %1599, align 1, !tbaa !345
  %1601 = or i8 %1600, 4
  store i8 %1601, ptr %1599, align 1, !tbaa !345
  %1602 = getelementptr inbounds %struct.op, ptr %1505, i64 0, i32 6
  %1603 = load i8, ptr %1602, align 1, !tbaa !33
  %1604 = or i8 %1603, 4
  store i8 %1604, ptr %1602, align 1, !tbaa !33
  br label %1741

1605:                                             ; preds = %118
  %1606 = getelementptr inbounds %struct.op, ptr %54, i64 0, i32 6
  %1607 = load i8, ptr %1606, align 1, !tbaa !33
  %1608 = icmp sgt i8 %1607, -1
  br i1 %1608, label %1609, label %1741

1609:                                             ; preds = %1605
  %1610 = load ptr, ptr @PL_compcv, align 8, !tbaa !6
  %1611 = load ptr, ptr %1610, align 8, !tbaa !10
  %1612 = getelementptr inbounds %struct.xpvcv, ptr %1611, i64 0, i32 12
  %1613 = load i32, ptr %1612, align 4, !tbaa !14
  %1614 = and i32 %1613, 32
  %1615 = icmp eq i32 %1614, 0
  br i1 %1615, label %1616, label %1741

1616:                                             ; preds = %1609
  %1617 = and i32 %1613, 128
  %1618 = icmp eq i32 %1617, 0
  br i1 %1618, label %1625, label %1619

1619:                                             ; preds = %1616
  %1620 = load i8, ptr @PL_cv_has_eval, align 1, !tbaa !268, !range !212, !noundef !304
  %1621 = icmp ne i8 %1620, 0
  %1622 = load i32, ptr @PL_perldb, align 4
  %1623 = icmp ne i32 %1622, 0
  %1624 = select i1 %1621, i1 true, i1 %1623
  br i1 %1624, label %1741, label %1625

1625:                                             ; preds = %1619, %1616
  %1626 = and i32 %1613, 256
  %1627 = icmp eq i32 %1626, 0
  br i1 %1627, label %1633, label %1628

1628:                                             ; preds = %1625
  %1629 = getelementptr inbounds %struct.cv, ptr %1610, i64 0, i32 2
  %1630 = load i32, ptr %1629, align 4, !tbaa !263
  %1631 = and i32 %1630, 16777216
  %1632 = icmp eq i32 %1631, 0
  br i1 %1632, label %1640, label %1633

1633:                                             ; preds = %1628, %1625
  %1634 = tail call ptr @Perl_newRV(ptr noundef nonnull %1610) #29
  %1635 = tail call ptr @Perl_sv_rvweaken(ptr noundef %1634) #29
  %1636 = getelementptr inbounds %struct.sv, ptr %1634, i64 0, i32 2
  %1637 = load i32, ptr %1636, align 4, !tbaa !84
  %1638 = or i32 %1637, 134283264
  store i32 %1638, ptr %1636, align 4, !tbaa !84
  %1639 = load i16, ptr %55, align 8
  br label %1640

1640:                                             ; preds = %1628, %1633
  %1641 = phi i16 [ %1639, %1633 ], [ %119, %1628 ]
  %1642 = phi ptr [ %1634, %1633 ], [ @PL_sv_undef, %1628 ]
  %1643 = and i16 %1641, -512
  %1644 = or i16 %1643, 5
  store i16 %1644, ptr %55, align 8
  %1645 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_ppaddr, i64 0, i64 5), align 8, !tbaa !6
  %1646 = getelementptr inbounds %struct.op, ptr %54, i64 0, i32 2
  store ptr %1645, ptr %1646, align 8, !tbaa !78
  %1647 = getelementptr inbounds %struct.op, ptr %54, i64 0, i32 5
  %1648 = load i8, ptr %1647, align 2, !tbaa !35
  %1649 = or i8 %1648, -128
  store i8 %1649, ptr %1647, align 2, !tbaa !35
  %1650 = getelementptr inbounds %struct.svop, ptr %54, i64 0, i32 7
  store ptr %1642, ptr %1650, align 8, !tbaa !65
  br label %1741

1651:                                             ; preds = %118
  %1652 = getelementptr inbounds %struct.op, ptr %54, i64 0, i32 5
  %1653 = load i8, ptr %1652, align 2, !tbaa !35
  %1654 = and i8 %1653, 3
  %1655 = icmp eq i8 %1654, 1
  br i1 %1655, label %1674, label %1656

1656:                                             ; preds = %1651
  %1657 = load ptr, ptr %54, align 8, !tbaa !25
  %1658 = getelementptr inbounds %struct.op, ptr %1657, i64 0, i32 4
  %1659 = load i16, ptr %1658, align 8
  %1660 = and i16 %1659, 511
  %1661 = icmp eq i16 %1660, 192
  br i1 %1661, label %1662, label %1741

1662:                                             ; preds = %1656
  %1663 = load ptr, ptr %1657, align 8, !tbaa !25
  %1664 = getelementptr inbounds %struct.op, ptr %1663, i64 0, i32 4
  %1665 = load i16, ptr %1664, align 8
  %1666 = and i16 %1665, 511
  switch i16 %1666, label %1741 [
    i16 186, label %1674
    i16 203, label %1667
  ]

1667:                                             ; preds = %1662
  %1668 = load ptr, ptr @PL_compcv, align 8, !tbaa !6
  %1669 = load ptr, ptr %1668, align 8, !tbaa !10
  %1670 = getelementptr inbounds %struct.xpvcv, ptr %1669, i64 0, i32 12
  %1671 = load i32, ptr %1670, align 4, !tbaa !14
  %1672 = and i32 %1671, 2
  %1673 = icmp eq i32 %1672, 0
  br i1 %1673, label %1674, label %1741

1674:                                             ; preds = %1662, %1667, %1651
  %1675 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %1676 = getelementptr inbounds %struct.binop, ptr %1675, i64 0, i32 7
  %1677 = load ptr, ptr %1676, align 8, !tbaa !106
  %1678 = icmp eq ptr %1677, null
  br i1 %1678, label %1741, label %1679

1679:                                             ; preds = %1674
  %1680 = getelementptr inbounds %struct.op, ptr %1677, i64 0, i32 1
  %1681 = load ptr, ptr %1680, align 8, !tbaa !38
  %1682 = getelementptr inbounds %struct.op, ptr %1681, i64 0, i32 4
  %1683 = load i16, ptr %1682, align 8
  %1684 = and i16 %1683, 511
  %1685 = icmp eq i16 %1684, 121
  br i1 %1685, label %1686, label %1741

1686:                                             ; preds = %1679
  %1687 = getelementptr inbounds %struct.op, ptr %1681, i64 0, i32 6
  %1688 = load i8, ptr %1687, align 1, !tbaa !33
  %1689 = and i8 %1688, 4
  %1690 = icmp eq i8 %1689, 0
  br i1 %1690, label %1691, label %1741

1691:                                             ; preds = %1686
  tail call void @Perl_op_null(ptr noundef nonnull %54)
  %1692 = tail call ptr @Perl_op_sibling_splice(ptr noundef nonnull %54, ptr noundef null, i32 noundef 1, ptr noundef null)
  %1693 = getelementptr inbounds %struct.binop, ptr %1681, i64 0, i32 7
  %1694 = load ptr, ptr %1693, align 8, !tbaa !106
  %1695 = tail call ptr @Perl_op_sibling_splice(ptr noundef nonnull %1681, ptr noundef %1694, i32 noundef 0, ptr noundef nonnull %1677)
  %1696 = load i8, ptr %1687, align 1, !tbaa !33
  %1697 = or i8 %1696, 16
  store i8 %1697, ptr %1687, align 1, !tbaa !33
  %1698 = load i8, ptr %1652, align 2, !tbaa !35
  %1699 = and i8 %1698, -4
  %1700 = or i8 %1699, 1
  %1701 = getelementptr inbounds %struct.op, ptr %1681, i64 0, i32 5
  store i8 %1700, ptr %1701, align 2, !tbaa !35
  br label %1741

1702:                                             ; preds = %118
  %1703 = getelementptr inbounds %struct.binop, ptr %54, i64 0, i32 8
  %1704 = load ptr, ptr %1703, align 8, !tbaa !113
  %1705 = getelementptr inbounds %struct.listop, ptr %1704, i64 0, i32 7
  %1706 = load ptr, ptr %1705, align 8, !tbaa !81
  %1707 = getelementptr inbounds %struct.op, ptr %1706, i64 0, i32 1
  %1708 = load ptr, ptr %1707, align 8, !tbaa !38
  %1709 = getelementptr inbounds %struct.listop, ptr %1704, i64 0, i32 8
  %1710 = load ptr, ptr %1709, align 8, !tbaa !83
  %1711 = icmp eq ptr %1708, %1710
  br i1 %1711, label %1712, label %1721

1712:                                             ; preds = %1702
  %1713 = getelementptr inbounds %struct.op, ptr %1708, i64 0, i32 4
  %1714 = load i16, ptr %1713, align 8
  %1715 = and i16 %1714, 511
  %1716 = icmp eq i16 %1715, 1
  br i1 %1716, label %1717, label %1721

1717:                                             ; preds = %1712
  %1718 = getelementptr inbounds %struct.op, ptr %54, i64 0, i32 6
  %1719 = load i8, ptr %1718, align 1, !tbaa !33
  %1720 = and i8 %1719, -65
  store i8 %1720, ptr %1718, align 1, !tbaa !33
  br label %1741

1721:                                             ; preds = %1712, %1702
  %1722 = getelementptr inbounds %struct.op, ptr %54, i64 0, i32 6
  %1723 = load i8, ptr %1722, align 1, !tbaa !33
  %1724 = and i8 %1723, 64
  %1725 = icmp eq i8 %1724, 0
  br i1 %1725, label %1733, label %1726

1726:                                             ; preds = %1721
  %1727 = load i32, ptr @PL_generation, align 4, !tbaa !52
  %1728 = add nsw i32 %1727, 1
  store i32 %1728, ptr @PL_generation, align 4, !tbaa !52
  %1729 = tail call fastcc zeroext i1 @S_aassign_common_vars(ptr noundef nonnull %54)
  br i1 %1729, label %1741, label %1730

1730:                                             ; preds = %1726
  %1731 = load i8, ptr %1722, align 1, !tbaa !33
  %1732 = and i8 %1731, -65
  store i8 %1732, ptr %1722, align 1, !tbaa !33
  br label %1741

1733:                                             ; preds = %1721
  %1734 = tail call fastcc zeroext i1 @S_aassign_common_vars_aliases_only(ptr noundef nonnull %54)
  br i1 %1734, label %1735, label %1741

1735:                                             ; preds = %1733
  %1736 = or i8 %1723, 64
  store i8 %1736, ptr %1722, align 1, !tbaa !33
  br label %1741

1737:                                             ; preds = %118
  %1738 = tail call ptr @Perl_custom_op_get_field(ptr noundef nonnull %54, i32 noundef 8)
  %1739 = icmp eq ptr %1738, null
  br i1 %1739, label %1741, label %1740

1740:                                             ; preds = %1737
  tail call void %1738(ptr noundef nonnull %54, ptr noundef %53) #29
  br label %1741

1741:                                             ; preds = %852, %875, %715, %118, %279, %275, %454, %972, %960, %967, %952, %946, %403, %314, %304, %1737, %1740, %1674, %1691, %1686, %1679, %1662, %1592, %1460, %1465, %1473, %1484, %1492, %1498, %1507, %1504, %1521, %1516, %1512, %1534, %1529, %1525, %1538, %1546, %1542, %1551, %1559, %1555, %1568, %1564, %1419, %1413, %1424, %1433, %1439, %1457, %1453, %1448, %1444, %1429, %1144, %1148, %884, %563, %570, %579, %574, %687, %240, %259, %264, %1730, %1726, %1735, %1733, %1656, %1667, %1605, %1609, %1619, %1640, %1102, %978, %913, %919, %887, %892, %322, %286, %289, %299, %268, %271, %1717, %1360, %1320, %1289, %1214, %127
  %1742 = phi i32 [ %16, %1717 ], [ %16, %1726 ], [ %16, %1730 ], [ %16, %1735 ], [ %16, %1733 ], [ %16, %1667 ], [ %16, %1656 ], [ %16, %1605 ], [ %16, %1609 ], [ %16, %1619 ], [ %16, %1640 ], [ %1365, %1360 ], [ %1324, %1320 ], [ %1294, %1289 ], [ %1219, %1214 ], [ %1058, %1102 ], [ %16, %978 ], [ %16, %887 ], [ %16, %892 ], [ %16, %919 ], [ %16, %913 ], [ %16, %403 ], [ %16, %322 ], [ %16, %299 ], [ %16, %289 ], [ %16, %286 ], [ %16, %268 ], [ %16, %271 ], [ %16, %127 ], [ %16, %264 ], [ %16, %259 ], [ %16, %240 ], [ %16, %687 ], [ %16, %574 ], [ %16, %579 ], [ %16, %570 ], [ %16, %563 ], [ %16, %884 ], [ %1058, %1148 ], [ %1058, %1144 ], [ %1414, %1429 ], [ %1414, %1444 ], [ %1414, %1448 ], [ %1414, %1453 ], [ %1414, %1457 ], [ %1414, %1439 ], [ %1414, %1433 ], [ %1414, %1424 ], [ %1414, %1413 ], [ %1414, %1419 ], [ %16, %1564 ], [ %16, %1568 ], [ %16, %1555 ], [ %16, %1559 ], [ %16, %1551 ], [ %16, %1542 ], [ %16, %1546 ], [ %16, %1538 ], [ %16, %1525 ], [ %16, %1529 ], [ %16, %1534 ], [ %16, %1512 ], [ %16, %1516 ], [ %16, %1521 ], [ %16, %1504 ], [ %16, %1507 ], [ %16, %1498 ], [ %16, %1492 ], [ %16, %1484 ], [ %16, %1473 ], [ %16, %1465 ], [ %16, %1460 ], [ %16, %1592 ], [ %16, %1662 ], [ %16, %1679 ], [ %16, %1686 ], [ %16, %1691 ], [ %16, %1674 ], [ %16, %1740 ], [ %16, %1737 ], [ %16, %304 ], [ %16, %314 ], [ %16, %946 ], [ %16, %952 ], [ %16, %967 ], [ %16, %960 ], [ %16, %972 ], [ %16, %454 ], [ %16, %275 ], [ %16, %279 ], [ %16, %118 ], [ %16, %715 ], [ %16, %875 ], [ %16, %852 ]
  %1743 = phi i32 [ %15, %1717 ], [ %15, %1726 ], [ %15, %1730 ], [ %15, %1735 ], [ %15, %1733 ], [ %15, %1667 ], [ %15, %1656 ], [ %15, %1605 ], [ %15, %1609 ], [ %15, %1619 ], [ %15, %1640 ], [ %1363, %1360 ], [ %1322, %1320 ], [ %1292, %1289 ], [ %1217, %1214 ], [ %1055, %1102 ], [ %15, %978 ], [ %15, %887 ], [ %15, %892 ], [ %15, %919 ], [ %15, %913 ], [ %15, %403 ], [ %15, %322 ], [ %15, %299 ], [ %15, %289 ], [ %15, %286 ], [ %15, %268 ], [ %15, %271 ], [ %15, %127 ], [ %15, %264 ], [ %15, %259 ], [ %15, %240 ], [ %15, %687 ], [ %15, %574 ], [ %15, %579 ], [ %15, %570 ], [ %15, %563 ], [ %15, %884 ], [ %1055, %1148 ], [ %1055, %1144 ], [ %1415, %1429 ], [ %1415, %1444 ], [ %1415, %1448 ], [ %1415, %1453 ], [ %1415, %1457 ], [ %1415, %1439 ], [ %1415, %1433 ], [ %1415, %1424 ], [ %1415, %1413 ], [ %1415, %1419 ], [ %15, %1564 ], [ %15, %1568 ], [ %15, %1555 ], [ %15, %1559 ], [ %15, %1551 ], [ %15, %1542 ], [ %15, %1546 ], [ %15, %1538 ], [ %15, %1525 ], [ %15, %1529 ], [ %15, %1534 ], [ %15, %1512 ], [ %15, %1516 ], [ %15, %1521 ], [ %15, %1504 ], [ %15, %1507 ], [ %15, %1498 ], [ %15, %1492 ], [ %15, %1484 ], [ %15, %1473 ], [ %15, %1465 ], [ %15, %1460 ], [ %15, %1592 ], [ %15, %1662 ], [ %15, %1679 ], [ %15, %1686 ], [ %15, %1691 ], [ %15, %1674 ], [ %15, %1740 ], [ %15, %1737 ], [ %15, %304 ], [ %15, %314 ], [ %15, %946 ], [ %15, %952 ], [ %15, %967 ], [ %15, %960 ], [ %15, %972 ], [ %15, %454 ], [ %15, %275 ], [ %15, %279 ], [ %15, %118 ], [ %15, %715 ], [ %15, %875 ], [ %15, %852 ]
  %1744 = phi ptr [ %54, %1717 ], [ %54, %1726 ], [ %54, %1730 ], [ %54, %1735 ], [ %54, %1733 ], [ %54, %1667 ], [ %54, %1656 ], [ %54, %1605 ], [ %54, %1609 ], [ %54, %1619 ], [ %54, %1640 ], [ %54, %1360 ], [ %54, %1320 ], [ %54, %1289 ], [ %54, %1214 ], [ %54, %1102 ], [ %54, %978 ], [ %54, %887 ], [ %54, %892 ], [ %54, %919 ], [ %54, %913 ], [ %376, %403 ], [ %54, %322 ], [ %54, %299 ], [ %54, %289 ], [ %54, %286 ], [ %54, %268 ], [ %54, %271 ], [ %54, %127 ], [ %54, %264 ], [ %54, %259 ], [ %54, %240 ], [ %54, %687 ], [ %54, %574 ], [ %54, %579 ], [ %54, %570 ], [ %54, %563 ], [ %54, %884 ], [ %54, %1148 ], [ %54, %1144 ], [ %54, %1429 ], [ %54, %1444 ], [ %54, %1448 ], [ %54, %1453 ], [ %54, %1457 ], [ %54, %1439 ], [ %54, %1433 ], [ %54, %1424 ], [ %54, %1413 ], [ %54, %1419 ], [ %54, %1564 ], [ %54, %1568 ], [ %54, %1555 ], [ %54, %1559 ], [ %54, %1551 ], [ %54, %1542 ], [ %54, %1546 ], [ %54, %1538 ], [ %54, %1525 ], [ %54, %1529 ], [ %54, %1534 ], [ %54, %1512 ], [ %54, %1516 ], [ %54, %1521 ], [ %54, %1504 ], [ %54, %1507 ], [ %54, %1498 ], [ %54, %1492 ], [ %54, %1484 ], [ %54, %1473 ], [ %54, %1465 ], [ %54, %1460 ], [ %54, %1592 ], [ %54, %1662 ], [ %54, %1679 ], [ %54, %1686 ], [ %54, %1691 ], [ %54, %1674 ], [ %54, %1740 ], [ %54, %1737 ], [ %54, %304 ], [ %54, %314 ], [ %54, %946 ], [ %54, %952 ], [ %54, %967 ], [ %54, %960 ], [ %54, %972 ], [ %54, %454 ], [ %54, %275 ], [ %54, %279 ], [ %54, %852 ], [ %53, %875 ], [ %54, %715 ], [ %54, %118 ]
  %1745 = getelementptr inbounds %struct.op, ptr %1744, i64 0, i32 4
  %1746 = load i16, ptr %1745, align 8
  %1747 = and i16 %1746, 511
  %1748 = icmp eq i16 %1747, 0
  %1749 = icmp ne ptr %53, null
  %1750 = select i1 %1748, i1 %1749, i1 false
  br i1 %1750, label %1751, label %1756

1751:                                             ; preds = %1741
  %1752 = load ptr, ptr %53, align 8, !tbaa !25
  %1753 = icmp eq ptr %1752, %1744
  br i1 %1753, label %1754, label %1756

1754:                                             ; preds = %1751
  %1755 = and i16 %1746, -513
  store i16 %1755, ptr %1745, align 8
  br label %1756

1756:                                             ; preds = %684, %337, %285, %283, %1741, %1751, %1754, %339
  %1757 = phi i32 [ %1742, %1754 ], [ %16, %339 ], [ %1742, %1751 ], [ %1742, %1741 ], [ %16, %283 ], [ %16, %285 ], [ %16, %337 ], [ %16, %684 ]
  %1758 = phi i32 [ %1743, %1754 ], [ %15, %339 ], [ %1743, %1751 ], [ %1743, %1741 ], [ %15, %283 ], [ %15, %285 ], [ %15, %337 ], [ %15, %684 ]
  %1759 = phi ptr [ %52, %1754 ], [ %52, %339 ], [ %53, %1751 ], [ %53, %1741 ], [ %52, %283 ], [ %52, %285 ], [ null, %337 ], [ null, %684 ]
  %1760 = phi ptr [ %53, %1754 ], [ %53, %339 ], [ %1744, %1751 ], [ %1744, %1741 ], [ null, %283 ], [ %53, %285 ], [ %54, %337 ], [ %52, %684 ]
  %1761 = phi ptr [ %53, %1754 ], [ %54, %339 ], [ %1744, %1751 ], [ %1744, %1741 ], [ %54, %283 ], [ %54, %285 ], [ %54, %337 ], [ %52, %684 ]
  %1762 = load ptr, ptr %1761, align 8, !tbaa !25
  %1763 = icmp eq ptr %1762, null
  br i1 %1763, label %24, label %11

1764:                                             ; preds = %48, %24
  tail call void @Perl_pop_scope() #29
  br label %1765

1765:                                             ; preds = %1, %4, %1764
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %2) #29
  ret void
}

declare ptr @Perl_cop_fetch_label(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #6

declare ptr @Perl_sv_rvweaken(ptr noundef) local_unnamed_addr #6

; Function Attrs: nofree nosync nounwind sspstrong memory(readwrite, inaccessiblemem: none) uwtable
define internal fastcc zeroext i1 @S_aassign_common_vars(ptr nocapture noundef readonly %0) unnamed_addr #9 {
  %2 = getelementptr inbounds %struct.unop, ptr %0, i64 0, i32 7
  %3 = load ptr, ptr %2, align 8, !tbaa !6
  %4 = icmp eq ptr %3, null
  br i1 %4, label %91, label %5

5:                                                ; preds = %1, %87
  %6 = phi ptr [ %89, %87 ], [ %3, %1 ]
  %7 = getelementptr inbounds %struct.op, ptr %6, i64 0, i32 4
  %8 = load i16, ptr %7, align 8
  %9 = and i16 %8, 511
  %10 = zext i16 %9 to i64
  %11 = getelementptr inbounds [0 x i32], ptr @PL_opargs, i64 0, i64 %10
  %12 = load i32, ptr %11, align 4, !tbaa !52
  %13 = and i32 %12, 64
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %72, label %15

15:                                               ; preds = %5
  switch i16 %9, label %91 [
    i16 7, label %16
    i16 6, label %16
    i16 136, label %16
    i16 9, label %30
    i16 10, label %30
    i16 11, label %30
    i16 137, label %30
    i16 12, label %30
    i16 390, label %87
    i16 15, label %45
    i16 135, label %45
    i16 149, label %45
    i16 14, label %45
    i16 13, label %52
  ]

16:                                               ; preds = %15, %15, %15
  %17 = getelementptr inbounds %struct.svop, ptr %6, i64 0, i32 7
  %18 = load ptr, ptr %17, align 8, !tbaa !65
  %19 = load ptr, ptr @PL_defgv, align 8, !tbaa !6
  %20 = icmp eq ptr %18, %19
  br i1 %20, label %91, label %21

21:                                               ; preds = %16
  %22 = load ptr, ptr %18, align 8, !tbaa !169
  %23 = getelementptr inbounds %struct.xpv, ptr %22, i64 0, i32 3
  %24 = load i64, ptr %23, align 8, !tbaa !13
  %25 = trunc i64 %24 to i32
  %26 = load i32, ptr @PL_generation, align 4, !tbaa !52
  %27 = icmp eq i32 %26, %25
  br i1 %27, label %91, label %28

28:                                               ; preds = %21
  %29 = sext i32 %26 to i64
  store i64 %29, ptr %23, align 8, !tbaa !13
  br label %80

30:                                               ; preds = %68, %15, %15, %15, %15, %15, %75
  %31 = load ptr, ptr @PL_comppad_name, align 8, !tbaa !6
  %32 = getelementptr inbounds %struct.padnamelist, ptr %31, i64 0, i32 1
  %33 = load ptr, ptr %32, align 8, !tbaa !151
  %34 = getelementptr inbounds %struct.op, ptr %6, i64 0, i32 3
  %35 = load i64, ptr %34, align 8, !tbaa !34
  %36 = getelementptr inbounds ptr, ptr %33, i64 %35
  %37 = load ptr, ptr %36, align 8, !tbaa !6
  %38 = getelementptr inbounds %struct.padname, ptr %37, i64 0, i32 6
  %39 = load i32, ptr %38, align 4, !tbaa !163
  %40 = load i32, ptr @PL_generation, align 4, !tbaa !52
  %41 = icmp eq i32 %39, %40
  %42 = icmp eq i32 %39, 2147483647
  %43 = or i1 %42, %41
  br i1 %43, label %91, label %44

44:                                               ; preds = %30
  store i32 %40, ptr %38, align 4, !tbaa !163
  br label %80

45:                                               ; preds = %15, %15, %15, %15
  %46 = getelementptr inbounds %struct.unop, ptr %6, i64 0, i32 7
  %47 = load ptr, ptr %46, align 8, !tbaa !36
  %48 = getelementptr inbounds %struct.op, ptr %47, i64 0, i32 4
  %49 = load i16, ptr %48, align 8
  %50 = and i16 %49, 511
  %51 = icmp eq i16 %50, 7
  br i1 %51, label %80, label %91

52:                                               ; preds = %15
  %53 = getelementptr inbounds %struct.pmop, ptr %6, i64 0, i32 11
  %54 = load ptr, ptr %53, align 8, !tbaa !13
  %55 = icmp eq ptr %54, null
  br i1 %55, label %68, label %56

56:                                               ; preds = %52
  %57 = load ptr, ptr @PL_defgv, align 8, !tbaa !6
  %58 = icmp eq ptr %54, %57
  br i1 %58, label %91, label %59

59:                                               ; preds = %56
  %60 = load ptr, ptr %54, align 8, !tbaa !169
  %61 = getelementptr inbounds %struct.xpv, ptr %60, i64 0, i32 3
  %62 = load i64, ptr %61, align 8, !tbaa !13
  %63 = trunc i64 %62 to i32
  %64 = load i32, ptr @PL_generation, align 4, !tbaa !52
  %65 = icmp eq i32 %64, %63
  br i1 %65, label %91, label %66

66:                                               ; preds = %59
  %67 = sext i32 %64 to i64
  store i64 %67, ptr %61, align 8, !tbaa !13
  br label %80

68:                                               ; preds = %52
  %69 = getelementptr inbounds %struct.op, ptr %6, i64 0, i32 3
  %70 = load i64, ptr %69, align 8, !tbaa !34
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %80, label %30

72:                                               ; preds = %5
  %73 = and i32 %12, 16
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %80, label %75

75:                                               ; preds = %72
  %76 = getelementptr inbounds %struct.op, ptr %6, i64 0, i32 6
  %77 = load i8, ptr %76, align 1, !tbaa !33
  %78 = and i8 %77, 16
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %80, label %30

80:                                               ; preds = %68, %66, %28, %72, %75, %45, %44
  %81 = getelementptr inbounds %struct.op, ptr %6, i64 0, i32 5
  %82 = load i8, ptr %81, align 2, !tbaa !35
  %83 = and i8 %82, 4
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %87, label %85

85:                                               ; preds = %80
  %86 = tail call fastcc zeroext i1 @S_aassign_common_vars(ptr noundef nonnull %6)
  br i1 %86, label %91, label %87

87:                                               ; preds = %15, %80, %85
  %88 = getelementptr inbounds %struct.op, ptr %6, i64 0, i32 1
  %89 = load ptr, ptr %88, align 8, !tbaa !6
  %90 = icmp eq ptr %89, null
  br i1 %90, label %91, label %5, !llvm.loop !346

91:                                               ; preds = %16, %21, %30, %45, %15, %85, %87, %59, %56, %1
  %92 = phi i1 [ false, %1 ], [ true, %56 ], [ true, %59 ], [ false, %87 ], [ true, %85 ], [ true, %15 ], [ true, %45 ], [ true, %30 ], [ true, %21 ], [ true, %16 ]
  ret i1 %92
}

; Function Attrs: nofree nosync nounwind sspstrong memory(read, inaccessiblemem: none) uwtable
define internal fastcc zeroext i1 @S_aassign_common_vars_aliases_only(ptr nocapture noundef readonly %0) unnamed_addr #19 {
  %2 = getelementptr inbounds %struct.unop, ptr %0, i64 0, i32 7
  %3 = load ptr, ptr %2, align 8, !tbaa !6
  %4 = icmp eq ptr %3, null
  br i1 %4, label %57, label %5

5:                                                ; preds = %1
  %6 = load ptr, ptr @PL_comppad_name, align 8
  %7 = getelementptr inbounds %struct.padnamelist, ptr %6, i64 0, i32 1
  br label %8

8:                                                ; preds = %5, %53
  %9 = phi ptr [ %3, %5 ], [ %55, %53 ]
  %10 = getelementptr inbounds %struct.op, ptr %9, i64 0, i32 4
  %11 = load i16, ptr %10, align 8
  %12 = and i16 %11, 511
  switch i16 %12, label %13 [
    i16 9, label %24
    i16 10, label %24
    i16 11, label %24
    i16 137, label %24
    i16 12, label %24
  ]

13:                                               ; preds = %8
  %14 = zext i16 %12 to i64
  %15 = getelementptr inbounds [0 x i32], ptr @PL_opargs, i64 0, i64 %14
  %16 = load i32, ptr %15, align 4, !tbaa !52
  %17 = and i32 %16, 16
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %33, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %struct.op, ptr %9, i64 0, i32 6
  %21 = load i8, ptr %20, align 1, !tbaa !33
  %22 = and i8 %21, 16
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %33, label %24

24:                                               ; preds = %8, %8, %8, %8, %8, %19
  %25 = load ptr, ptr %7, align 8, !tbaa !151
  %26 = getelementptr inbounds %struct.op, ptr %9, i64 0, i32 3
  %27 = load i64, ptr %26, align 8, !tbaa !34
  %28 = getelementptr inbounds ptr, ptr %25, i64 %27
  %29 = load ptr, ptr %28, align 8, !tbaa !6
  %30 = getelementptr inbounds %struct.padname, ptr %29, i64 0, i32 6
  %31 = load i32, ptr %30, align 4, !tbaa !163
  %32 = icmp eq i32 %31, 2147483647
  br i1 %32, label %57, label %33

33:                                               ; preds = %24, %19, %13
  %34 = icmp eq i16 %12, 13
  br i1 %34, label %35, label %46

35:                                               ; preds = %33
  %36 = getelementptr inbounds %struct.op, ptr %9, i64 0, i32 3
  %37 = load i64, ptr %36, align 8, !tbaa !34
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %46, label %39

39:                                               ; preds = %35
  %40 = load ptr, ptr %7, align 8, !tbaa !151
  %41 = getelementptr inbounds ptr, ptr %40, i64 %37
  %42 = load ptr, ptr %41, align 8, !tbaa !6
  %43 = getelementptr inbounds %struct.padname, ptr %42, i64 0, i32 6
  %44 = load i32, ptr %43, align 4, !tbaa !163
  %45 = icmp eq i32 %44, 2147483647
  br i1 %45, label %57, label %46

46:                                               ; preds = %39, %35, %33
  %47 = getelementptr inbounds %struct.op, ptr %9, i64 0, i32 5
  %48 = load i8, ptr %47, align 2, !tbaa !35
  %49 = and i8 %48, 4
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %53, label %51

51:                                               ; preds = %46
  %52 = tail call fastcc zeroext i1 @S_aassign_common_vars_aliases_only(ptr noundef nonnull %9)
  br i1 %52, label %57, label %53

53:                                               ; preds = %46, %51
  %54 = getelementptr inbounds %struct.op, ptr %9, i64 0, i32 1
  %55 = load ptr, ptr %54, align 8, !tbaa !6
  %56 = icmp eq ptr %55, null
  br i1 %56, label %57, label %8, !llvm.loop !347

57:                                               ; preds = %24, %39, %51, %53, %1
  %58 = phi i1 [ false, %1 ], [ false, %53 ], [ true, %51 ], [ true, %39 ], [ true, %24 ]
  ret i1 %58
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_peep(ptr noundef %0) local_unnamed_addr #4 {
  %2 = load ptr, ptr @PL_rpeepp, align 8, !tbaa !6
  tail call void %2(ptr noundef %0) #29
  ret void
}

declare ptr @Perl_safesyscalloc(i64 noundef, i64 noundef) local_unnamed_addr #6

declare ptr @Perl_savepvn(ptr noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_custom_op_register(ptr noundef %0, ptr noundef %1) local_unnamed_addr #4 {
  %3 = ptrtoint ptr %0 to i64
  %4 = tail call ptr @Perl_newSViv(i64 noundef %3) #29
  %5 = tail call ptr @Perl_sv_2mortal(ptr noundef %4) #29
  %6 = load ptr, ptr @PL_custom_ops, align 8, !tbaa !6
  %7 = icmp eq ptr %6, null
  br i1 %7, label %8, label %10

8:                                                ; preds = %2
  %9 = tail call ptr @Perl_newSV_type(i32 noundef 12) #29
  store ptr %9, ptr @PL_custom_ops, align 8, !tbaa !6
  br label %10

10:                                               ; preds = %8, %2
  %11 = phi ptr [ %9, %8 ], [ %6, %2 ]
  %12 = ptrtoint ptr %1 to i64
  %13 = tail call ptr @Perl_newSViv(i64 noundef %12) #29
  %14 = tail call ptr @Perl_hv_common(ptr noundef %11, ptr noundef %5, ptr noundef null, i64 noundef 0, i32 noundef 0, i32 noundef 4, ptr noundef %13, i32 noundef 0) #29
  %15 = icmp eq ptr %14, null
  br i1 %15, label %16, label %19

16:                                               ; preds = %10
  %17 = getelementptr inbounds %struct.custom_op, ptr %1, i64 0, i32 1
  %18 = load ptr, ptr %17, align 8, !tbaa !89
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.200, ptr noundef %18) #29
  br label %19

19:                                               ; preds = %16, %10
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_core_prototype(ptr noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2, ptr noundef writeonly %3) local_unnamed_addr #4 {
  %5 = alloca [14 x i8], align 1
  call void @llvm.lifetime.start.p0(i64 14, ptr nonnull %5) #29
  %6 = icmp eq ptr %0, null
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call ptr @Perl_sv_newmortal() #29
  br label %9

9:                                                ; preds = %7, %4
  %10 = phi ptr [ %0, %4 ], [ %8, %7 ]
  %11 = tail call i32 @llvm.abs.i32(i32 %2, i1 true)
  switch i32 %11, label %38 [
    i32 17, label %12
    i32 27, label %12
    i32 26, label %12
    i32 33, label %12
    i32 41, label %12
    i32 42, label %12
    i32 59, label %12
    i32 60, label %12
    i32 56, label %12
    i32 72, label %12
    i32 102, label %12
    i32 103, label %12
    i32 104, label %12
    i32 113, label %12
    i32 116, label %12
    i32 125, label %12
    i32 127, label %12
    i32 134, label %12
    i32 135, label %12
    i32 141, label %12
    i32 149, label %12
    i32 150, label %12
    i32 155, label %12
    i32 166, label %12
    i32 169, label %12
    i32 171, label %12
    i32 177, label %12
    i32 181, label %12
    i32 205, label %12
    i32 207, label %12
    i32 221, label %12
    i32 252, label %12
    i32 253, label %12
    i32 100, label %14
    i32 111, label %16
    i32 243, label %18
    i32 46, label %20
    i32 152, label %22
    i32 238, label %24
    i32 147, label %26
    i32 195, label %28
    i32 148, label %30
    i32 206, label %32
    i32 1, label %34
    i32 2, label %34
    i32 3, label %34
    i32 58, label %36
    i32 164, label %37
  ]

12:                                               ; preds = %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9
  %13 = icmp eq ptr %3, null
  br i1 %13, label %157, label %38

14:                                               ; preds = %9
  tail call void @Perl_sv_setpvn(ptr noundef %10, ptr noundef nonnull @.str.201, i64 noundef 2) #29
  %15 = icmp eq ptr %3, null
  br i1 %15, label %157, label %154

16:                                               ; preds = %9
  tail call void @Perl_sv_setpvn(ptr noundef %10, ptr noundef nonnull @.str.202, i64 noundef 1) #29
  %17 = icmp eq ptr %3, null
  br i1 %17, label %157, label %154

18:                                               ; preds = %9
  tail call void @Perl_sv_setpvn(ptr noundef %10, ptr noundef nonnull @.str.202, i64 noundef 1) #29
  %19 = icmp eq ptr %3, null
  br i1 %19, label %157, label %154

20:                                               ; preds = %9
  tail call void @Perl_sv_setpvn(ptr noundef %10, ptr noundef nonnull @.str.202, i64 noundef 1) #29
  %21 = icmp eq ptr %3, null
  br i1 %21, label %157, label %154

22:                                               ; preds = %9
  tail call void @Perl_sv_setpvn(ptr noundef %10, ptr noundef nonnull @.str.203, i64 noundef 2) #29
  %23 = icmp eq ptr %3, null
  br i1 %23, label %157, label %154

24:                                               ; preds = %9
  tail call void @Perl_sv_setpvn(ptr noundef %10, ptr noundef nonnull @.str.203, i64 noundef 2) #29
  %25 = icmp eq ptr %3, null
  br i1 %25, label %157, label %154

26:                                               ; preds = %9
  tail call void @Perl_sv_setpvn(ptr noundef %10, ptr noundef nonnull @.str.204, i64 noundef 2) #29
  %27 = icmp eq ptr %3, null
  br i1 %27, label %157, label %154

28:                                               ; preds = %9
  tail call void @Perl_sv_setpvn(ptr noundef %10, ptr noundef nonnull @.str.204, i64 noundef 2) #29
  %29 = icmp eq ptr %3, null
  br i1 %29, label %157, label %154

30:                                               ; preds = %9
  tail call void @Perl_sv_setpvn(ptr noundef %10, ptr noundef nonnull @.str.205, i64 noundef 6) #29
  %31 = icmp eq ptr %3, null
  br i1 %31, label %157, label %154

32:                                               ; preds = %9
  tail call void @Perl_sv_setpvn(ptr noundef %10, ptr noundef nonnull @.str.206, i64 noundef 5) #29
  %33 = icmp eq ptr %3, null
  br i1 %33, label %157, label %154

34:                                               ; preds = %9, %9, %9
  tail call void @Perl_sv_setpvn(ptr noundef %10, ptr noundef nonnull @.str.19, i64 noundef 0) #29
  %35 = icmp eq ptr %3, null
  br i1 %35, label %157, label %154

36:                                               ; preds = %9
  br label %38

37:                                               ; preds = %9
  br label %38

38:                                               ; preds = %12, %36, %9, %37
  %39 = phi ptr [ %1, %9 ], [ @.str.208, %37 ], [ @.str.207, %36 ], [ %1, %12 ]
  %40 = phi i1 [ false, %9 ], [ false, %37 ], [ false, %36 ], [ true, %12 ]
  br label %41

41:                                               ; preds = %38, %54
  %42 = phi i64 [ 0, %38 ], [ %55, %54 ]
  %43 = getelementptr inbounds [0 x ptr], ptr @PL_op_name, i64 0, i64 %42
  %44 = load ptr, ptr %43, align 8, !tbaa !6
  %45 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %39, ptr noundef nonnull dereferenceable(1) %44) #30
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %52, label %47

47:                                               ; preds = %41
  %48 = getelementptr inbounds [0 x ptr], ptr @PL_op_desc, i64 0, i64 %42
  %49 = load ptr, ptr %48, align 8, !tbaa !6
  %50 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %39, ptr noundef nonnull dereferenceable(1) %49) #30
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %47, %41
  %53 = trunc i64 %42 to i32
  br i1 %40, label %154, label %57

54:                                               ; preds = %47
  %55 = add nuw nsw i64 %42, 1
  %56 = icmp eq i64 %55, 396
  br i1 %56, label %157, label %41, !llvm.loop !348

57:                                               ; preds = %52
  %58 = getelementptr inbounds [0 x i32], ptr @PL_opargs, i64 0, i64 %42
  %59 = load i32, ptr %58, align 4, !tbaa !52
  %60 = icmp ult i32 %59, 4096
  br i1 %60, label %143, label %61

61:                                               ; preds = %57
  %62 = lshr i32 %59, 12
  %63 = and i32 %59, 128
  br label %64

64:                                               ; preds = %61, %137
  %65 = phi i32 [ %141, %137 ], [ %62, %61 ]
  %66 = phi i32 [ %139, %137 ], [ %63, %61 ]
  %67 = phi i32 [ %87, %137 ], [ 0, %61 ]
  %68 = phi i32 [ %140, %137 ], [ 0, %61 ]
  %69 = and i32 %65, 8
  %70 = icmp eq i32 %69, 0
  %71 = icmp ne i32 %67, 0
  %72 = select i1 %70, i1 true, i1 %71
  br i1 %72, label %73, label %75

73:                                               ; preds = %64
  %74 = and i32 %65, 7
  br label %84

75:                                               ; preds = %64
  %76 = icmp eq i32 %66, 0
  %77 = and i32 %65, 7
  %78 = icmp eq i32 %77, 6
  %79 = or i1 %76, %78
  br i1 %79, label %80, label %84

80:                                               ; preds = %75
  %81 = add nsw i32 %68, 1
  %82 = sext i32 %68 to i64
  %83 = getelementptr inbounds [14 x i8], ptr %5, i64 0, i64 %82
  store i8 59, ptr %83, align 1, !tbaa !13
  br label %84

84:                                               ; preds = %73, %75, %80
  %85 = phi i32 [ %74, %73 ], [ %77, %75 ], [ %77, %80 ]
  %86 = phi i32 [ %68, %73 ], [ %68, %75 ], [ %81, %80 ]
  %87 = phi i32 [ %67, %73 ], [ 0, %75 ], [ 1, %80 ]
  switch i32 %85, label %88 [
    i32 6, label %112
    i32 2, label %112
    i32 1, label %112
    i32 0, label %112
  ]

88:                                               ; preds = %84
  %89 = add nsw i32 %86, 1
  %90 = sext i32 %86 to i64
  %91 = getelementptr inbounds [14 x i8], ptr %5, i64 0, i64 %90
  store i8 92, ptr %91, align 1, !tbaa !13
  %92 = icmp eq i32 %85, 7
  br i1 %92, label %93, label %112

93:                                               ; preds = %88
  %94 = tail call fastcc zeroext i1 @S_scalar_mod_type(ptr noundef null, i32 noundef %53)
  br i1 %94, label %112, label %95

95:                                               ; preds = %93
  %96 = add nsw i32 %86, 2
  %97 = sext i32 %89 to i64
  %98 = getelementptr inbounds [14 x i8], ptr %5, i64 0, i64 %97
  store i8 91, ptr %98, align 1, !tbaa !13
  %99 = add nsw i32 %86, 3
  %100 = sext i32 %96 to i64
  %101 = getelementptr inbounds [14 x i8], ptr %5, i64 0, i64 %100
  store i8 36, ptr %101, align 1, !tbaa !13
  %102 = add nsw i32 %86, 4
  %103 = sext i32 %99 to i64
  %104 = getelementptr inbounds [14 x i8], ptr %5, i64 0, i64 %103
  store i8 64, ptr %104, align 1, !tbaa !13
  %105 = add nsw i32 %86, 5
  %106 = sext i32 %102 to i64
  %107 = getelementptr inbounds [14 x i8], ptr %5, i64 0, i64 %106
  store i8 37, ptr %107, align 1, !tbaa !13
  switch i32 %53, label %126 [
    i32 378, label %108
    i32 44, label %108
  ]

108:                                              ; preds = %95, %95
  %109 = add nsw i32 %86, 6
  %110 = sext i32 %105 to i64
  %111 = getelementptr inbounds [14 x i8], ptr %5, i64 0, i64 %110
  store i8 38, ptr %111, align 1, !tbaa !13
  br label %126

112:                                              ; preds = %88, %93, %84, %84, %84, %84
  %113 = phi i32 [ %89, %93 ], [ %89, %88 ], [ %86, %84 ], [ %86, %84 ], [ %86, %84 ], [ %86, %84 ]
  %114 = zext i32 %85 to i64
  %115 = getelementptr inbounds [9 x i8], ptr @.str.209, i64 0, i64 %114
  %116 = load i8, ptr %115, align 1, !tbaa !13
  %117 = sext i32 %113 to i64
  %118 = getelementptr inbounds [14 x i8], ptr %5, i64 0, i64 %117
  store i8 %116, ptr %118, align 1, !tbaa !13
  %119 = icmp ne i32 %69, 0
  %120 = icmp ne i32 %66, 0
  %121 = select i1 %119, i1 %120, i1 false
  %122 = icmp eq i32 %85, 1
  %123 = icmp eq i32 %85, 7
  %124 = or i1 %122, %123
  %125 = and i1 %121, %124
  br i1 %125, label %131, label %137

126:                                              ; preds = %108, %95
  %127 = phi i32 [ %109, %108 ], [ %105, %95 ]
  %128 = add nsw i32 %127, 1
  %129 = sext i32 %127 to i64
  %130 = getelementptr inbounds [14 x i8], ptr %5, i64 0, i64 %129
  store i8 42, ptr %130, align 1, !tbaa !13
  br label %131

131:                                              ; preds = %112, %126
  %132 = phi i32 [ %128, %126 ], [ %113, %112 ]
  %133 = phi i8 [ 93, %126 ], [ 95, %112 ]
  %134 = phi i32 [ %66, %126 ], [ 0, %112 ]
  %135 = sext i32 %132 to i64
  %136 = getelementptr inbounds [14 x i8], ptr %5, i64 0, i64 %135
  store i8 %133, ptr %136, align 1, !tbaa !13
  br label %137

137:                                              ; preds = %131, %112
  %138 = phi i32 [ %113, %112 ], [ %132, %131 ]
  %139 = phi i32 [ %66, %112 ], [ %134, %131 ]
  %140 = add nsw i32 %138, 1
  %141 = lshr i32 %65, 4
  %142 = icmp ult i32 %65, 16
  br i1 %142, label %143, label %64, !llvm.loop !349

143:                                              ; preds = %137, %57
  %144 = phi i32 [ 0, %57 ], [ %140, %137 ]
  switch i32 %2, label %149 [
    i32 -89, label %145
    i32 -137, label %145
  ]

145:                                              ; preds = %143, %143
  %146 = add nsw i32 %144, 1
  %147 = sext i32 %144 to i64
  %148 = getelementptr inbounds [14 x i8], ptr %5, i64 0, i64 %147
  store i8 59, ptr %148, align 1, !tbaa !13
  br label %149

149:                                              ; preds = %143, %145
  %150 = phi i32 [ %146, %145 ], [ %144, %143 ]
  %151 = sext i32 %150 to i64
  %152 = getelementptr inbounds [14 x i8], ptr %5, i64 0, i64 %151
  store i8 0, ptr %152, align 1, !tbaa !13
  call void @Perl_sv_setpvn(ptr noundef %10, ptr noundef nonnull %5, i64 noundef %151) #29
  %153 = icmp eq ptr %3, null
  br i1 %153, label %157, label %154

154:                                              ; preds = %149, %52, %34, %32, %30, %28, %26, %24, %22, %20, %18, %16, %14
  %155 = phi i32 [ 25, %14 ], [ 146, %16 ], [ 145, %18 ], [ 144, %20 ], [ 163, %22 ], [ 166, %24 ], [ 164, %26 ], [ 165, %28 ], [ 46, %30 ], [ 162, %32 ], [ 0, %34 ], [ %53, %52 ], [ %53, %149 ]
  %156 = phi ptr [ %10, %14 ], [ %10, %16 ], [ %10, %18 ], [ %10, %20 ], [ %10, %22 ], [ %10, %24 ], [ %10, %26 ], [ %10, %28 ], [ %10, %30 ], [ %10, %32 ], [ %10, %34 ], [ null, %52 ], [ %10, %149 ]
  store i32 %155, ptr %3, align 4, !tbaa !52
  br label %157

157:                                              ; preds = %54, %154, %149, %34, %32, %30, %28, %26, %24, %22, %20, %18, %16, %14, %12
  %158 = phi ptr [ null, %12 ], [ %10, %14 ], [ %10, %16 ], [ %10, %18 ], [ %10, %20 ], [ %10, %22 ], [ %10, %24 ], [ %10, %26 ], [ %10, %28 ], [ %10, %30 ], [ %10, %32 ], [ %10, %34 ], [ %10, %149 ], [ %156, %154 ], [ null, %54 ]
  call void @llvm.lifetime.end.p0(i64 14, ptr nonnull %5) #29
  ret ptr %158
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_coresub_op(ptr noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #4 {
  %4 = tail call ptr @Perl_newSVOP(i32 noundef 384, i32 noundef 0, ptr noundef %0)
  switch i32 %2, label %93 [
    i32 0, label %5
    i32 232, label %62
  ]

5:                                                ; preds = %3
  %6 = srem i32 %1, 3
  %7 = sub nsw i32 0, %6
  %8 = sext i32 %7 to i64
  %9 = tail call ptr @Perl_newSViv(i64 noundef %8) #29
  %10 = tail call ptr @Perl_newSVOP(i32 noundef 5, i32 noundef 0, ptr noundef %9)
  %11 = tail call ptr @Perl_newOP(i32 noundef 188, i32 noundef 0)
  %12 = tail call fastcc ptr @S_force_list(ptr noundef %10, i1 noundef zeroext true)
  %13 = tail call ptr @Perl_list(ptr noundef %12)
  %14 = tail call fastcc ptr @S_force_list(ptr noundef %11, i1 noundef zeroext true)
  %15 = tail call ptr @Perl_list(ptr noundef %14)
  %16 = tail call ptr @Perl_newBINOP(i32 noundef 159, i32 noundef 0, ptr noundef %13, ptr noundef %15)
  %17 = icmp eq ptr %4, null
  br i1 %17, label %82, label %18

18:                                               ; preds = %5
  %19 = icmp eq ptr %16, null
  br i1 %19, label %82, label %20

20:                                               ; preds = %18
  %21 = getelementptr inbounds %struct.op, ptr %4, i64 0, i32 4
  %22 = load i16, ptr %21, align 8
  %23 = and i16 %22, 511
  %24 = icmp eq i16 %23, 192
  br i1 %24, label %55, label %25

25:                                               ; preds = %20
  %26 = tail call ptr @Perl_Slab_Alloc(i64 noundef 56)
  %27 = getelementptr inbounds %struct.listop, ptr %26, i64 0, i32 4
  %28 = load i16, ptr %27, align 8
  %29 = and i16 %28, -512
  %30 = or i16 %29, 192
  store i16 %30, ptr %27, align 8
  %31 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_ppaddr, i64 0, i64 192), align 8, !tbaa !6
  %32 = getelementptr inbounds %struct.listop, ptr %26, i64 0, i32 2
  store ptr %31, ptr %32, align 8, !tbaa !222
  %33 = getelementptr inbounds %struct.listop, ptr %26, i64 0, i32 5
  store i8 4, ptr %33, align 2, !tbaa !223
  %34 = load i16, ptr %21, align 8
  %35 = or i16 %34, 16384
  store i16 %35, ptr %21, align 8
  %36 = getelementptr inbounds %struct.op, ptr %4, i64 0, i32 1
  store ptr %16, ptr %36, align 8, !tbaa !38
  %37 = getelementptr inbounds %struct.listop, ptr %26, i64 0, i32 7
  store ptr %4, ptr %37, align 8, !tbaa !81
  %38 = getelementptr inbounds %struct.listop, ptr %26, i64 0, i32 8
  store ptr %16, ptr %38, align 8, !tbaa !83
  %39 = getelementptr inbounds %struct.op, ptr %16, i64 0, i32 4
  %40 = load i16, ptr %39, align 8
  %41 = and i16 %40, -16385
  store i16 %41, ptr %39, align 8
  %42 = load ptr, ptr %38, align 8, !tbaa !83
  %43 = getelementptr inbounds %struct.op, ptr %42, i64 0, i32 1
  store ptr null, ptr %43, align 8, !tbaa !38
  %44 = load ptr, ptr @PL_op_mask, align 8, !tbaa !6
  %45 = icmp eq ptr %44, null
  br i1 %45, label %52, label %46

46:                                               ; preds = %25
  %47 = getelementptr inbounds i8, ptr %44, i64 192
  %48 = load i8, ptr %47, align 1, !tbaa !13
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %52, label %50

50:                                               ; preds = %46
  tail call void @Perl_op_free(ptr noundef nonnull %26)
  %51 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_op_desc, i64 0, i64 192), align 8, !tbaa !6
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.63, ptr noundef %51) #29
  br label %82

52:                                               ; preds = %46, %25
  %53 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_check, i64 0, i64 192), align 8, !tbaa !6
  %54 = tail call ptr %53(ptr noundef nonnull %26) #29
  br label %82

55:                                               ; preds = %20
  %56 = getelementptr inbounds %struct.listop, ptr %4, i64 0, i32 8
  %57 = load ptr, ptr %56, align 8, !tbaa !83
  %58 = tail call ptr @Perl_op_sibling_splice(ptr noundef nonnull %4, ptr noundef %57, i32 noundef 0, ptr noundef nonnull %16)
  %59 = getelementptr inbounds %struct.op, ptr %4, i64 0, i32 5
  %60 = load i8, ptr %59, align 2, !tbaa !35
  %61 = or i8 %60, 4
  store i8 %61, ptr %59, align 2, !tbaa !35
  br label %82

62:                                               ; preds = %3
  %63 = icmp eq i32 %1, 0
  br i1 %63, label %93, label %64

64:                                               ; preds = %62
  %65 = load ptr, ptr @PL_defgv, align 8, !tbaa !6
  %66 = getelementptr inbounds %struct.gv, ptr %65, i64 0, i32 1
  %67 = load i32, ptr %66, align 8, !tbaa !74
  %68 = add i32 %67, 1
  store i32 %68, ptr %66, align 8, !tbaa !74
  %69 = tail call ptr @Perl_newSVOP(i32 noundef 7, i32 noundef 0, ptr noundef %65)
  %70 = getelementptr inbounds %struct.op, ptr %69, i64 0, i32 4
  %71 = load i16, ptr %70, align 8
  %72 = and i16 %71, 511
  switch i16 %72, label %79 [
    i16 12, label %73
    i16 135, label %78
    i16 10, label %78
  ]

73:                                               ; preds = %64
  %74 = and i16 %71, -512
  %75 = or i16 %74, 10
  store i16 %75, ptr %70, align 8
  %76 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_ppaddr, i64 0, i64 10), align 8, !tbaa !6
  %77 = getelementptr inbounds %struct.op, ptr %69, i64 0, i32 2
  store ptr %76, ptr %77, align 8, !tbaa !78
  br label %84

78:                                               ; preds = %64, %64
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.126) #29
  br label %79

79:                                               ; preds = %78, %64
  %80 = tail call ptr @Perl_scalar(ptr noundef nonnull %69)
  %81 = tail call ptr @Perl_newUNOP(i32 noundef 135, i32 noundef 0, ptr noundef nonnull %69)
  br label %84

82:                                               ; preds = %142, %105, %98, %137, %139, %55, %18, %5, %50, %52, %161, %177, %175, %195, %84
  %83 = phi ptr [ %92, %84 ], [ %184, %195 ], [ %166, %177 ], [ %166, %175 ], [ %159, %161 ], [ %4, %55 ], [ %16, %5 ], [ %4, %18 ], [ null, %50 ], [ %54, %52 ], [ %4, %142 ], [ %103, %98 ], [ %4, %105 ], [ null, %137 ], [ %141, %139 ]
  ret ptr %83

84:                                               ; preds = %73, %79
  %85 = phi ptr [ %69, %73 ], [ %81, %79 ]
  %86 = tail call ptr @Perl_newSVuv(i64 noundef 1) #29
  %87 = tail call ptr @Perl_newSVOP(i32 noundef 5, i32 noundef 0, ptr noundef %86)
  %88 = tail call ptr @Perl_newBINOP(i32 noundef 73, i32 noundef 0, ptr noundef %85, ptr noundef %87)
  %89 = tail call ptr @Perl_newSVuv(i64 noundef 231) #29
  %90 = tail call ptr @Perl_coresub_op(ptr noundef %89, i32 noundef 0, i32 noundef 231)
  %91 = tail call ptr @Perl_coresub_op(ptr noundef %0, i32 noundef 0, i32 noundef 232)
  %92 = tail call ptr @Perl_newCONDOP(i32 noundef 0, ptr noundef %88, ptr noundef %90, ptr noundef %91)
  br label %82

93:                                               ; preds = %62, %3
  %94 = sext i32 %2 to i64
  %95 = getelementptr inbounds [0 x i32], ptr @PL_opargs, i64 0, i64 %94
  %96 = load i32, ptr %95, align 4, !tbaa !52
  %97 = and i32 %96, 3840
  switch i32 %97, label %181 [
    i32 0, label %98
    i32 2816, label %149
  ]

98:                                               ; preds = %93
  %99 = icmp eq i32 %2, 4
  %100 = icmp eq i32 %2, 385
  %101 = or i1 %99, %100
  %102 = select i1 %101, i32 32768, i32 0
  %103 = tail call ptr @Perl_newOP(i32 noundef %2, i32 noundef %102)
  %104 = icmp eq ptr %4, null
  br i1 %104, label %82, label %105

105:                                              ; preds = %98
  %106 = icmp eq ptr %103, null
  br i1 %106, label %82, label %107

107:                                              ; preds = %105
  %108 = getelementptr inbounds %struct.op, ptr %4, i64 0, i32 4
  %109 = load i16, ptr %108, align 8
  %110 = and i16 %109, 511
  %111 = icmp eq i16 %110, 192
  br i1 %111, label %142, label %112

112:                                              ; preds = %107
  %113 = tail call ptr @Perl_Slab_Alloc(i64 noundef 56)
  %114 = getelementptr inbounds %struct.listop, ptr %113, i64 0, i32 4
  %115 = load i16, ptr %114, align 8
  %116 = and i16 %115, -512
  %117 = or i16 %116, 192
  store i16 %117, ptr %114, align 8
  %118 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_ppaddr, i64 0, i64 192), align 8, !tbaa !6
  %119 = getelementptr inbounds %struct.listop, ptr %113, i64 0, i32 2
  store ptr %118, ptr %119, align 8, !tbaa !222
  %120 = getelementptr inbounds %struct.listop, ptr %113, i64 0, i32 5
  store i8 4, ptr %120, align 2, !tbaa !223
  %121 = load i16, ptr %108, align 8
  %122 = or i16 %121, 16384
  store i16 %122, ptr %108, align 8
  %123 = getelementptr inbounds %struct.op, ptr %4, i64 0, i32 1
  store ptr %103, ptr %123, align 8, !tbaa !38
  %124 = getelementptr inbounds %struct.listop, ptr %113, i64 0, i32 7
  store ptr %4, ptr %124, align 8, !tbaa !81
  %125 = getelementptr inbounds %struct.listop, ptr %113, i64 0, i32 8
  store ptr %103, ptr %125, align 8, !tbaa !83
  %126 = getelementptr inbounds %struct.op, ptr %103, i64 0, i32 4
  %127 = load i16, ptr %126, align 8
  %128 = and i16 %127, -16385
  store i16 %128, ptr %126, align 8
  %129 = load ptr, ptr %125, align 8, !tbaa !83
  %130 = getelementptr inbounds %struct.op, ptr %129, i64 0, i32 1
  store ptr null, ptr %130, align 8, !tbaa !38
  %131 = load ptr, ptr @PL_op_mask, align 8, !tbaa !6
  %132 = icmp eq ptr %131, null
  br i1 %132, label %139, label %133

133:                                              ; preds = %112
  %134 = getelementptr inbounds i8, ptr %131, i64 192
  %135 = load i8, ptr %134, align 1, !tbaa !13
  %136 = icmp eq i8 %135, 0
  br i1 %136, label %139, label %137

137:                                              ; preds = %133
  tail call void @Perl_op_free(ptr noundef nonnull %113)
  %138 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_op_desc, i64 0, i64 192), align 8, !tbaa !6
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.63, ptr noundef %138) #29
  br label %82

139:                                              ; preds = %133, %112
  %140 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_check, i64 0, i64 192), align 8, !tbaa !6
  %141 = tail call ptr %140(ptr noundef nonnull %113) #29
  br label %82

142:                                              ; preds = %107
  %143 = getelementptr inbounds %struct.listop, ptr %4, i64 0, i32 8
  %144 = load ptr, ptr %143, align 8, !tbaa !83
  %145 = tail call ptr @Perl_op_sibling_splice(ptr noundef nonnull %4, ptr noundef %144, i32 noundef 0, ptr noundef nonnull %103)
  %146 = getelementptr inbounds %struct.op, ptr %4, i64 0, i32 5
  %147 = load i8, ptr %146, align 2, !tbaa !35
  %148 = or i8 %147, 4
  store i8 %148, ptr %146, align 2, !tbaa !35
  br label %82

149:                                              ; preds = %93
  %150 = icmp eq i32 %2, 342
  br i1 %150, label %151, label %158

151:                                              ; preds = %149
  %152 = tail call ptr @Perl_newUNOP(i32 noundef 342, i32 noundef 4096, ptr noundef %4)
  %153 = icmp eq i32 %1, -58
  br i1 %153, label %154, label %165

154:                                              ; preds = %151
  %155 = getelementptr inbounds %struct.op, ptr %152, i64 0, i32 6
  %156 = load i8, ptr %155, align 1, !tbaa !33
  %157 = or i8 %156, 8
  store i8 %157, ptr %155, align 1, !tbaa !33
  br label %165

158:                                              ; preds = %149
  %159 = tail call ptr @Perl_newUNOP(i32 noundef %2, i32 noundef 0, ptr noundef %4)
  %160 = icmp eq i32 %2, 188
  br i1 %160, label %161, label %165

161:                                              ; preds = %158
  %162 = getelementptr inbounds %struct.op, ptr %159, i64 0, i32 6
  %163 = load i8, ptr %162, align 1, !tbaa !33
  %164 = or i8 %163, -128
  store i8 %164, ptr %162, align 1, !tbaa !33
  br label %82

165:                                              ; preds = %154, %151, %193, %158
  %166 = phi ptr [ %184, %193 ], [ %159, %158 ], [ %152, %151 ], [ %152, %154 ]
  %167 = getelementptr i8, ptr %166, i64 32
  %168 = load i16, ptr %167, align 8
  %169 = and i16 %168, 511
  %170 = zext i16 %169 to i32
  switch i32 %170, label %175 [
    i32 222, label %171
    i32 254, label %171
    i32 240, label %171
    i32 220, label %171
    i32 232, label %171
    i32 253, label %171
    i32 305, label %171
    i32 258, label %171
  ]

171:                                              ; preds = %165, %165, %165, %165, %165, %165, %165, %165
  %172 = getelementptr inbounds %struct.op, ptr %4, i64 0, i32 6
  %173 = load i8, ptr %172, align 1, !tbaa !33
  %174 = or i8 %173, 1
  store i8 %174, ptr %172, align 1, !tbaa !33
  br label %175

175:                                              ; preds = %165, %171
  %176 = tail call fastcc zeroext i1 @S_scalar_mod_type(ptr noundef null, i32 noundef %2)
  br i1 %176, label %177, label %82

177:                                              ; preds = %175
  %178 = getelementptr inbounds %struct.op, ptr %4, i64 0, i32 6
  %179 = load i8, ptr %178, align 1, !tbaa !33
  %180 = or i8 %179, 64
  store i8 %180, ptr %178, align 1, !tbaa !33
  br label %82

181:                                              ; preds = %93
  %182 = icmp eq i32 %2, 25
  %183 = select i1 %182, i32 128, i32 0
  %184 = tail call ptr @Perl_op_convert_list(i32 noundef %2, i32 noundef %183, ptr noundef %4)
  %185 = getelementptr i8, ptr %184, i64 32
  %186 = load i16, ptr %185, align 8
  %187 = and i16 %186, 511
  %188 = zext i16 %187 to i32
  switch i32 %188, label %193 [
    i32 222, label %189
    i32 254, label %189
  ]

189:                                              ; preds = %181, %181
  %190 = getelementptr inbounds %struct.op, ptr %4, i64 0, i32 6
  %191 = load i8, ptr %190, align 1, !tbaa !33
  %192 = or i8 %191, 2
  store i8 %192, ptr %190, align 1, !tbaa !33
  br label %193

193:                                              ; preds = %181, %189
  %194 = icmp eq i32 %2, 121
  br i1 %194, label %195, label %165

195:                                              ; preds = %193
  %196 = getelementptr inbounds %struct.op, ptr %184, i64 0, i32 6
  %197 = load i8, ptr %196, align 1, !tbaa !33
  %198 = or i8 %197, 8
  store i8 %198, ptr %196, align 1, !tbaa !33
  br label %82
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(readwrite, inaccessiblemem: none) uwtable
define dso_local void @Perl_wrap_op_checker(i32 noundef %0, ptr noundef %1, ptr nocapture noundef %2) local_unnamed_addr #23 {
  %4 = load ptr, ptr %2, align 8, !tbaa !6
  %5 = icmp eq ptr %4, null
  br i1 %5, label %6, label %10

6:                                                ; preds = %3
  %7 = zext i32 %0 to i64
  %8 = getelementptr inbounds [0 x ptr], ptr @PL_check, i64 0, i64 %7
  %9 = load ptr, ptr %8, align 8, !tbaa !6
  store ptr %9, ptr %2, align 8, !tbaa !6
  store ptr %1, ptr %8, align 8, !tbaa !6
  br label %10

10:                                               ; preds = %3, %6
  ret void
}

; Function Attrs: nofree nounwind willreturn memory(argmem: read)
declare i32 @bcmp(ptr nocapture, ptr nocapture, i64) local_unnamed_addr #24

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.smax.i64(i64, i64) #25

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: readwrite)
declare void @llvm.assume(i1 noundef) #26

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.abs.i32(i32, i1 immarg) #25

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.umin.i64(i64, i64) #25

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.fshl.i32(i32, i32, i32) #25

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.smin.i64(i64, i64) #25

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.umax.i32(i32, i32) #25

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: read)
declare ptr @llvm.load.relative.i64(ptr, i64) #27

attributes #0 = { nofree nounwind sspstrong uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #1 = { mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #2 = { mustprogress nofree nounwind willreturn allockind("alloc,zeroed") allocsize(0,1) memory(inaccessiblemem: readwrite) "alloc-family"="malloc" "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #3 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #4 = { nounwind sspstrong uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #5 = { mustprogress nounwind willreturn allockind("free") memory(argmem: readwrite, inaccessiblemem: readwrite) "alloc-family"="malloc" "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #6 = { "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #7 = { mustprogress nofree nounwind willreturn memory(argmem: read) "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #8 = { mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(none) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #9 = { nofree nosync nounwind sspstrong memory(readwrite, inaccessiblemem: none) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #10 = { mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: read) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #11 = { nofree norecurse nosync nounwind sspstrong memory(readwrite, inaccessiblemem: none) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #12 = { mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(argmem: readwrite) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #13 = { mustprogress nofree nounwind willreturn allockind("alloc,uninitialized") allocsize(0) memory(inaccessiblemem: readwrite) "alloc-family"="malloc" "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #14 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #15 = { nounwind returns_twice "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #16 = { nofree "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #17 = { mustprogress nounwind willreturn allockind("realloc") allocsize(1) memory(argmem: readwrite, inaccessiblemem: readwrite) "alloc-family"="malloc" "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #18 = { mustprogress nocallback nofree nosync nounwind willreturn }
attributes #19 = { nofree nosync nounwind sspstrong memory(read, inaccessiblemem: none) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #20 = { mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(read, inaccessiblemem: none) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #21 = { nofree norecurse nosync nounwind sspstrong memory(read, inaccessiblemem: none) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #22 = { mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(read, argmem: readwrite, inaccessiblemem: none) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #23 = { mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(readwrite, inaccessiblemem: none) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #24 = { nofree nounwind willreturn memory(argmem: read) }
attributes #25 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #26 = { nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: readwrite) }
attributes #27 = { nocallback nofree nosync nounwind willreturn memory(argmem: read) }
attributes #28 = { nounwind allocsize(0,1) }
attributes #29 = { nounwind }
attributes #30 = { nounwind willreturn memory(read) }
attributes #31 = { nounwind allocsize(1) }
attributes #32 = { nounwind allocsize(0) }
attributes #33 = { nounwind returns_twice }
attributes #34 = { "function-inline-cost-multiplier"="2" }

!llvm.module.flags = !{!0, !1, !2, !3, !4}
!llvm.ident = !{!5}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"openmp", i32 51}
!2 = !{i32 8, !"PIC Level", i32 2}
!3 = !{i32 7, !"PIE Level", i32 2}
!4 = !{i32 7, !"uwtable", i32 2}
!5 = !{!"clang version 17.0.6"}
!6 = !{!7, !7, i64 0}
!7 = !{!"any pointer", !8, i64 0}
!8 = !{!"omnipotent char", !9, i64 0}
!9 = !{!"Simple C/C++ TBAA"}
!10 = !{!11, !7, i64 0}
!11 = !{!"cv", !7, i64 0, !12, i64 8, !12, i64 12, !8, i64 16}
!12 = !{!"int", !8, i64 0}
!13 = !{!8, !8, i64 0}
!14 = !{!15, !12, i64 92}
!15 = !{!"xpvcv", !7, i64 0, !8, i64 8, !16, i64 16, !8, i64 24, !7, i64 32, !8, i64 40, !8, i64 48, !8, i64 56, !7, i64 64, !8, i64 72, !7, i64 80, !12, i64 88, !12, i64 92, !12, i64 96}
!16 = !{!"long", !8, i64 0}
!17 = !{!18, !7, i64 0}
!18 = !{!"opslab", !7, i64 0, !7, i64 8, !7, i64 16, !16, i64 24, !19, i64 32}
!19 = !{!"opslot", !7, i64 0, !7, i64 8, !20, i64 16}
!20 = !{!"op", !7, i64 0, !7, i64 8, !7, i64 16, !16, i64 24, !12, i64 32, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !8, i64 34, !8, i64 35}
!21 = !{!18, !16, i64 24}
!22 = !{!19, !7, i64 0}
!23 = distinct !{!23, !24}
!24 = !{!"llvm.loop.mustprogress"}
!25 = !{!20, !7, i64 0}
!26 = !{!18, !7, i64 8}
!27 = !{!19, !7, i64 8}
!28 = !{!18, !7, i64 16}
!29 = distinct !{!29, !24}
!30 = distinct !{!30, !24}
!31 = distinct !{!31, !24}
!32 = distinct !{!32, !24}
!33 = !{!20, !8, i64 35}
!34 = !{!20, !16, i64 24}
!35 = !{!20, !8, i64 34}
!36 = !{!37, !7, i64 40}
!37 = !{!"unop", !7, i64 0, !7, i64 8, !7, i64 16, !16, i64 24, !12, i64 32, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !8, i64 34, !8, i64 35, !7, i64 40}
!38 = !{!20, !7, i64 8}
!39 = distinct !{!39, !24}
!40 = !{!41, !7, i64 48}
!41 = !{!"cop", !7, i64 0, !7, i64 8, !7, i64 16, !16, i64 24, !12, i64 32, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !8, i64 34, !8, i64 35, !12, i64 36, !7, i64 40, !7, i64 48, !12, i64 56, !12, i64 60, !7, i64 64, !7, i64 72}
!42 = !{!43, !12, i64 8}
!43 = !{!"sv", !7, i64 0, !12, i64 8, !12, i64 12, !8, i64 16}
!44 = !{!41, !7, i64 64}
!45 = !{!41, !7, i64 72}
!46 = distinct !{!46, !24}
!47 = !{!48, !49, i64 236}
!48 = !{!"yy_parser", !7, i64 0, !8, i64 8, !12, i64 16, !12, i64 20, !12, i64 24, !12, i64 28, !7, i64 32, !7, i64 40, !12, i64 48, !12, i64 52, !7, i64 56, !7, i64 64, !8, i64 72, !8, i64 73, !8, i64 74, !8, i64 75, !12, i64 76, !7, i64 80, !7, i64 88, !7, i64 96, !49, i64 104, !49, i64 106, !12, i64 108, !7, i64 112, !12, i64 120, !12, i64 124, !8, i64 128, !8, i64 129, !50, i64 130, !50, i64 131, !12, i64 132, !51, i64 136, !7, i64 160, !7, i64 168, !7, i64 176, !7, i64 184, !7, i64 192, !7, i64 200, !7, i64 208, !7, i64 216, !7, i64 224, !12, i64 232, !49, i64 236, !8, i64 238, !8, i64 239, !7, i64 240, !7, i64 248, !7, i64 256, !8, i64 264, !8, i64 272, !8, i64 312, !12, i64 332, !7, i64 336, !8, i64 344, !12, i64 600, !12, i64 604, !8, i64 608, !8, i64 609, !12, i64 610, !12, i64 610, !12, i64 610, !12, i64 610}
!49 = !{!"short", !8, i64 0}
!50 = !{!"_Bool", !8, i64 0}
!51 = !{!"_sublex_info", !8, i64 0, !49, i64 2, !7, i64 8, !7, i64 16}
!52 = !{!12, !12, i64 0}
!53 = !{!48, !7, i64 240}
!54 = !{!55, !12, i64 64}
!55 = !{!"pmop", !7, i64 0, !7, i64 8, !7, i64 16, !16, i64 24, !12, i64 32, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !8, i64 34, !8, i64 35, !7, i64 40, !7, i64 48, !7, i64 56, !12, i64 64, !8, i64 72, !8, i64 80, !7, i64 88}
!56 = !{!57, !12, i64 12}
!57 = !{!"hv", !7, i64 0, !12, i64 8, !12, i64 12, !8, i64 16}
!58 = !{!59, !7, i64 40}
!59 = !{!"magic", !7, i64 0, !7, i64 8, !49, i64 16, !8, i64 18, !8, i64 19, !16, i64 24, !7, i64 32, !7, i64 40}
!60 = !{!59, !16, i64 24}
!61 = distinct !{!61, !24}
!62 = distinct !{!62, !24}
!63 = !{!64, !7, i64 48}
!64 = !{!"methop", !7, i64 0, !7, i64 8, !7, i64 16, !16, i64 24, !12, i64 32, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !8, i64 34, !8, i64 35, !8, i64 40, !7, i64 48}
!65 = !{!66, !7, i64 40}
!66 = !{!"svop", !7, i64 0, !7, i64 8, !7, i64 16, !16, i64 24, !12, i64 32, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !8, i64 34, !8, i64 35, !7, i64 40}
!67 = !{!68, !7, i64 40}
!68 = !{!"pvop", !7, i64 0, !7, i64 8, !7, i64 16, !16, i64 24, !12, i64 32, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !8, i64 34, !8, i64 35, !7, i64 40}
!69 = !{!55, !7, i64 88}
!70 = !{!55, !7, i64 56}
!71 = !{!72, !7, i64 48}
!72 = !{!"unop_aux", !7, i64 0, !7, i64 8, !7, i64 16, !16, i64 24, !12, i64 32, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !8, i64 34, !8, i64 35, !7, i64 40, !7, i64 48}
!73 = distinct !{!73, !24}
!74 = !{!75, !12, i64 8}
!75 = !{!"gv", !7, i64 0, !12, i64 8, !12, i64 12, !8, i64 16}
!76 = !{!66, !8, i64 35}
!77 = !{!41, !12, i64 56}
!78 = !{!20, !7, i64 16}
!79 = distinct !{!79, !24}
!80 = distinct !{!80, !24}
!81 = !{!82, !7, i64 40}
!82 = !{!"listop", !7, i64 0, !7, i64 8, !7, i64 16, !16, i64 24, !12, i64 32, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !8, i64 34, !8, i64 35, !7, i64 40, !7, i64 48}
!83 = !{!82, !7, i64 48}
!84 = !{!43, !12, i64 12}
!85 = !{!43, !7, i64 0}
!86 = !{!87, !16, i64 16}
!87 = !{!"xpv", !7, i64 0, !8, i64 8, !16, i64 16, !8, i64 24}
!88 = !{!16, !16, i64 0}
!89 = !{!90, !7, i64 8}
!90 = !{!"custom_op", !12, i64 0, !7, i64 8, !7, i64 16, !12, i64 24, !7, i64 32}
!91 = !{!90, !12, i64 0}
!92 = !{!90, !7, i64 16}
!93 = !{!90, !12, i64 24}
!94 = !{!90, !7, i64 32}
!95 = !{!37, !7, i64 16}
!96 = !{!37, !8, i64 34}
!97 = !{!37, !8, i64 35}
!98 = !{!37, !7, i64 0}
!99 = !{!100, !7, i64 16}
!100 = !{!"logop", !7, i64 0, !7, i64 8, !7, i64 16, !16, i64 24, !12, i64 32, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !8, i64 34, !8, i64 35, !7, i64 40, !7, i64 48}
!101 = !{!100, !7, i64 40}
!102 = !{!100, !7, i64 48}
!103 = !{!100, !8, i64 34}
!104 = distinct !{!104, !24}
!105 = !{!48, !8, i64 239}
!106 = !{!107, !7, i64 40}
!107 = !{!"binop", !7, i64 0, !7, i64 8, !7, i64 16, !16, i64 24, !12, i64 32, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !8, i64 34, !8, i64 35, !7, i64 40, !7, i64 48}
!108 = distinct !{!108, !24}
!109 = distinct !{!109, !24}
!110 = distinct !{!110, !24}
!111 = distinct !{!111, !112}
!112 = !{!"llvm.loop.peeled.count", i32 1}
!113 = !{!107, !7, i64 48}
!114 = distinct !{!114, !24}
!115 = distinct !{!115, !24}
!116 = distinct !{!116, !24}
!117 = !{!82, !16, i64 24}
!118 = distinct !{!118, !24}
!119 = distinct !{!119, !24}
!120 = distinct !{!120, !24}
!121 = distinct !{!121, !24}
!122 = distinct !{!122, !24}
!123 = !{!124, !7, i64 0}
!124 = !{!"av", !7, i64 0, !12, i64 8, !12, i64 12, !8, i64 16}
!125 = !{!126, !16, i64 16}
!126 = !{!"xpvav", !7, i64 0, !8, i64 8, !16, i64 16, !16, i64 24, !7, i64 32}
!127 = distinct !{!127, !24}
!128 = !{!66, !7, i64 16}
!129 = !{!66, !7, i64 0}
!130 = !{!66, !8, i64 34}
!131 = !{!66, !16, i64 24}
!132 = !{!37, !16, i64 24}
!133 = !{!75, !12, i64 12}
!134 = !{!135, !7, i64 32}
!135 = !{!"gp", !7, i64 0, !7, i64 8, !7, i64 16, !12, i64 24, !12, i64 28, !7, i64 32, !7, i64 40, !7, i64 48, !7, i64 56, !12, i64 64, !12, i64 67, !7, i64 72}
!136 = !{!137, !8, i64 40}
!137 = !{!"padname", !7, i64 0, !7, i64 8, !8, i64 16, !12, i64 24, !12, i64 28, !12, i64 32, !12, i64 36, !8, i64 40, !8, i64 41}
!138 = !{!137, !7, i64 0}
!139 = !{!57, !7, i64 0}
!140 = !{!141, !16, i64 24}
!141 = !{!"xpvhv", !7, i64 0, !8, i64 8, !16, i64 16, !16, i64 24}
!142 = !{!143, !12, i64 28}
!143 = !{!"xpvhv_aux", !8, i64 0, !7, i64 8, !7, i64 16, !12, i64 24, !12, i64 28, !7, i64 32, !12, i64 40, !12, i64 44, !12, i64 48, !12, i64 52}
!144 = !{!66, !7, i64 8}
!145 = distinct !{!145, !24}
!146 = !{!41, !12, i64 36}
!147 = !{!135, !7, i64 16}
!148 = distinct !{!148, !24}
!149 = distinct !{!149, !24}
!150 = distinct !{!150, !24}
!151 = !{!152, !7, i64 8}
!152 = !{!"padnamelist", !16, i64 0, !7, i64 8, !16, i64 16, !16, i64 24, !12, i64 32}
!153 = !{!137, !8, i64 41}
!154 = distinct !{!154, !24}
!155 = distinct !{!155, !24}
!156 = distinct !{!156, !24}
!157 = !{!137, !12, i64 24}
!158 = !{!15, !7, i64 80}
!159 = !{!160, !7, i64 8}
!160 = !{!"padlist", !16, i64 0, !7, i64 8, !12, i64 16, !12, i64 20}
!161 = distinct !{!161, !24}
!162 = distinct !{!162, !24}
!163 = !{!137, !12, i64 36}
!164 = distinct !{!164, !24}
!165 = distinct !{!165, !24}
!166 = distinct !{!166, !24}
!167 = distinct !{!167, !24}
!168 = distinct !{!168, !24}
!169 = !{!75, !7, i64 0}
!170 = !{!64, !8, i64 34}
!171 = !{!64, !8, i64 35}
!172 = !{!64, !7, i64 0}
!173 = !{!64, !7, i64 16}
!174 = distinct !{!174, !24}
!175 = !{!107, !7, i64 16}
!176 = !{!107, !8, i64 34}
!177 = !{!107, !8, i64 35}
!178 = !{!107, !7, i64 0}
!179 = distinct !{!179, !24}
!180 = distinct !{!180, !24}
!181 = distinct !{!181, !24}
!182 = !{!49, !49, i64 0}
!183 = distinct !{!183, !184}
!184 = !{!"llvm.loop.unroll.disable"}
!185 = distinct !{!185, !24}
!186 = distinct !{!186, !24}
!187 = !{!188}
!188 = distinct !{!188, !189}
!189 = distinct !{!189, !"LVerDomain"}
!190 = !{!191}
!191 = distinct !{!191, !189}
!192 = distinct !{!192, !24, !193, !194}
!193 = !{!"llvm.loop.isvectorized", i32 1}
!194 = !{!"llvm.loop.unroll.runtime.disable"}
!195 = !{!196}
!196 = distinct !{!196, !197}
!197 = distinct !{!197, !"LVerDomain"}
!198 = !{!199}
!199 = distinct !{!199, !197}
!200 = distinct !{!200, !24, !193, !194}
!201 = distinct !{!201, !184}
!202 = distinct !{!202, !24, !193}
!203 = distinct !{!203, !24}
!204 = distinct !{!204, !24}
!205 = !{!82, !7, i64 0}
!206 = distinct !{!206, !24}
!207 = !{!208, !7, i64 88}
!208 = !{!"regexp_engine", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !7, i64 32, !7, i64 40, !7, i64 48, !7, i64 56, !7, i64 64, !7, i64 72, !7, i64 80, !7, i64 88}
!209 = !{!11, !12, i64 8}
!210 = !{!211, !7, i64 184}
!211 = !{!"regexp", !7, i64 0, !8, i64 8, !16, i64 16, !8, i64 24, !7, i64 32, !7, i64 40, !7, i64 48, !12, i64 56, !16, i64 64, !16, i64 72, !16, i64 80, !7, i64 88, !12, i64 96, !12, i64 100, !7, i64 104, !12, i64 112, !12, i64 116, !7, i64 120, !7, i64 128, !7, i64 136, !16, i64 144, !16, i64 152, !16, i64 160, !16, i64 168, !12, i64 176, !12, i64 176, !7, i64 184}
!212 = !{i8 0, i8 2}
!213 = !{!100, !16, i64 24}
!214 = !{!100, !7, i64 0}
!215 = !{!216, !7, i64 0}
!216 = !{!"p5rx", !7, i64 0, !12, i64 8, !12, i64 12, !8, i64 16}
!217 = !{!211, !12, i64 56}
!218 = !{!100, !8, i64 35}
!219 = !{!55, !7, i64 16}
!220 = !{!55, !8, i64 34}
!221 = !{!55, !8, i64 35}
!222 = !{!82, !7, i64 16}
!223 = !{!82, !8, i64 34}
!224 = distinct !{!224, !24}
!225 = !{!41, !12, i64 60}
!226 = !{!227, !12, i64 0}
!227 = !{!"block_hooks", !12, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !7, i64 32}
!228 = !{!227, !7, i64 8}
!229 = distinct !{!229, !24}
!230 = !{!227, !7, i64 16}
!231 = distinct !{!231, !24}
!232 = !{!227, !7, i64 24}
!233 = distinct !{!233, !24}
!234 = !{!41, !7, i64 16}
!235 = !{!41, !8, i64 34}
!236 = !{!41, !7, i64 0}
!237 = !{!48, !12, i64 604}
!238 = !{!48, !12, i64 232}
!239 = !{!41, !7, i64 40}
!240 = !{!135, !7, i64 40}
!241 = !{!242, !7, i64 8}
!242 = !{!"stackinfo", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !12, i64 32, !12, i64 36, !12, i64 40, !12, i64 44}
!243 = !{!242, !12, i64 32}
!244 = !{!48, !7, i64 176}
!245 = !{!48, !7, i64 184}
!246 = distinct !{!246, !24}
!247 = distinct !{!247, !24}
!248 = distinct !{!248, !24}
!249 = distinct !{!249, !24}
!250 = distinct !{!250, !24}
!251 = !{i64 0, i64 8, !6, i64 8, i64 8, !6, i64 16, i64 8, !6, i64 24, i64 8, !88, i64 32, i64 4, !52, i64 33, i64 4, !52, i64 33, i64 4, !52, i64 33, i64 4, !52, i64 33, i64 4, !52, i64 33, i64 4, !52, i64 33, i64 4, !52, i64 33, i64 4, !52, i64 34, i64 1, !13, i64 35, i64 1, !13, i64 36, i64 4, !52, i64 40, i64 8, !6, i64 48, i64 8, !6, i64 56, i64 4, !52, i64 60, i64 4, !52, i64 64, i64 8, !6, i64 72, i64 8, !6}
!252 = !{!253, !7, i64 200}
!253 = !{!"jmpenv", !8, i64 0, !7, i64 200, !12, i64 208, !50, i64 212}
!254 = !{!253, !12, i64 208}
!255 = !{!253, !50, i64 212}
!256 = !{!72, !7, i64 16}
!257 = !{!72, !7, i64 40}
!258 = !{!72, !8, i64 34}
!259 = !{!72, !8, i64 35}
!260 = !{!135, !12, i64 24}
!261 = !{!262, !16, i64 16}
!262 = !{!"xpvgv", !7, i64 0, !8, i64 8, !16, i64 16, !8, i64 24, !8, i64 32, !8, i64 40}
!263 = !{!11, !12, i64 12}
!264 = !{!15, !12, i64 88}
!265 = !{!15, !7, i64 64}
!266 = !{!135, !12, i64 28}
!267 = !{!141, !16, i64 16}
!268 = !{!50, !50, i64 0}
!269 = !{!152, !16, i64 24}
!270 = !{!137, !12, i64 28}
!271 = distinct !{!271, !24}
!272 = !{!137, !7, i64 8}
!273 = !{!68, !7, i64 16}
!274 = !{!68, !7, i64 0}
!275 = !{!68, !8, i64 34}
!276 = !{!68, !8, i64 35}
!277 = !{!68, !16, i64 24}
!278 = !{!135, !7, i64 0}
!279 = distinct !{!279, !24}
!280 = !{i32 0, i32 3}
!281 = distinct !{!281, !24}
!282 = !{!55, !16, i64 24}
!283 = distinct !{!283, !24}
!284 = !{!285, !7, i64 16}
!285 = !{!"loop", !7, i64 0, !7, i64 8, !7, i64 16, !16, i64 24, !12, i64 32, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !12, i64 33, !8, i64 34, !8, i64 35, !7, i64 40, !7, i64 48, !7, i64 56, !7, i64 64, !7, i64 72}
!286 = !{!285, !8, i64 35}
!287 = !{!285, !7, i64 0}
!288 = !{!285, !7, i64 56}
!289 = !{!285, !7, i64 72}
!290 = !{!285, !16, i64 24}
!291 = distinct !{!291, !24}
!292 = !{!293, !12, i64 4}
!293 = !{!"hek", !12, i64 0, !12, i64 4, !8, i64 8}
!294 = distinct !{!294, !24}
!295 = distinct !{!295, !24}
!296 = distinct !{!296, !24}
!297 = distinct !{!297, !24}
!298 = !{!57, !12, i64 8}
!299 = !{!242, !7, i64 24}
!300 = !{!242, !7, i64 16}
!301 = !{!242, !12, i64 40}
!302 = !{!242, !7, i64 0}
!303 = !{!126, !16, i64 24}
!304 = !{}
!305 = !{!124, !12, i64 12}
!306 = !{!135, !7, i64 48}
!307 = distinct !{!307, !24}
!308 = distinct !{!308, !24}
!309 = distinct !{!309, !24}
!310 = distinct !{!310, !24}
!311 = distinct !{!311, !24}
!312 = distinct !{!312, !24}
!313 = distinct !{!313, !24}
!314 = distinct !{!314, !24}
!315 = distinct !{!315, !24}
!316 = distinct !{!316, !24}
!317 = !{!216, !12, i64 12}
!318 = distinct !{!318, !24}
!319 = distinct !{!319, !24}
!320 = distinct !{!320, !24}
!321 = distinct !{!321, !24}
!322 = distinct !{!322, !24}
!323 = distinct !{!323, !24}
!324 = distinct !{!324, !24}
!325 = !{!59, !7, i64 32}
!326 = !{!59, !8, i64 19}
!327 = distinct !{!327, !24}
!328 = distinct !{!328, !24}
!329 = distinct !{!329, !24}
!330 = distinct !{!330, !24}
!331 = distinct !{!331, !24}
!332 = distinct !{!332, !24}
!333 = distinct !{!333, !24}
!334 = distinct !{!334, !24}
!335 = distinct !{!335, !24}
!336 = distinct !{!336, !24}
!337 = distinct !{!337, !24}
!338 = distinct !{!338, !24}
!339 = !{!285, !7, i64 64}
!340 = distinct !{!340, !24}
!341 = distinct !{!341, !24}
!342 = distinct !{!342, !24}
!343 = distinct !{!343, !24}
!344 = !{!37, !7, i64 8}
!345 = !{!82, !8, i64 35}
!346 = distinct !{!346, !24}
!347 = distinct !{!347, !24}
!348 = distinct !{!348, !24}
!349 = distinct !{!349, !24}
