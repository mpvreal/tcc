; ModuleID = 'pp_ctl.c'
source_filename = "pp_ctl.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.sv = type { ptr, i32, i32, %union.anon }
%union.anon = type { ptr }
%struct.mgvtbl = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.cop = type { ptr, ptr, ptr, i64, i16, i8, i8, i32, ptr, ptr, i32, i32, ptr, ptr }
%struct.op = type { ptr, ptr, ptr, i64, i16, i8, i8 }
%struct.stackinfo = type { ptr, ptr, ptr, ptr, i32, i32, i32, i32 }
%struct.context = type { %union.anon.0 }
%union.anon.0 = type { %struct.subst }
%struct.subst = type { i8, i8, i16, i32, i64, i64, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.block = type { i8, i8, i16, i32, ptr, i32, i32, ptr, %union.anon.1 }
%union.anon.1 = type { %struct.block_sub }
%struct.block_sub = type { ptr, ptr, ptr, ptr, i32, ptr }
%struct.gv = type { ptr, i32, i32, %union.anon.9 }
%union.anon.9 = type { ptr }
%struct.gp = type { ptr, ptr, ptr, i32, i32, ptr, ptr, ptr, ptr, i32, ptr }
%struct.logop = type { ptr, ptr, ptr, i64, i16, i8, i8, ptr, ptr }
%struct.pmop = type { ptr, ptr, ptr, i64, i16, i8, i8, ptr, ptr, ptr, i32, %union.anon.6, %union.anon.7, ptr }
%union.anon.6 = type { ptr }
%union.anon.7 = type { ptr }
%struct.regexp = type { ptr, %union._xmgu, i64, %union.anon.8, ptr, ptr, ptr, i32, i64, i64, i64, ptr, i32, i32, ptr, i32, i32, ptr, ptr, ptr, i64, i64, i64, i64, i16, ptr }
%union._xmgu = type { ptr }
%union.anon.8 = type { i64 }
%struct.regexp_engine = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.xpv = type { ptr, %union._xmgu, i64, %union.anon.11 }
%union.anon.11 = type { i64 }
%struct.regexp_paren_pair = type { i64, i64, i64 }
%struct.xpvmg = type { ptr, %union._xmgu, i64, %union.anon.12, %union._xivu, %union._xnvu }
%union.anon.12 = type { i64 }
%union._xivu = type { i64 }
%union._xnvu = type { double }
%struct.magic = type { ptr, ptr, i16, i8, i8, i64, ptr, ptr }
%struct.xpvnv = type { ptr, %union._xmgu, i64, %union.anon.14, %union._xivu, %union._xnvu }
%union.anon.14 = type { i64 }
%struct.xpviv = type { ptr, %union._xmgu, i64, %union.anon.15, %union._xivu }
%union.anon.15 = type { i64 }
%struct.listop = type { ptr, ptr, ptr, i64, i16, i8, i8, ptr, ptr }
%struct.xpvgv = type { ptr, %union._xmgu, i64, %union.anon.16, %union._xivu, %union._xnvu }
%union.anon.16 = type { i64 }
%struct.unop = type { ptr, ptr, ptr, i64, i16, i8, i8, ptr }
%struct.xpvio = type { ptr, %union._xmgu, i64, %union.anon.17, %union._xivu, ptr, %union.anon.18, i64, i64, i64, ptr, ptr, ptr, ptr, ptr, ptr, i8, i8 }
%union.anon.17 = type { i64 }
%union.anon.18 = type { ptr }
%struct.xpvuv = type { ptr, %union._xmgu, i64, %union.anon.20, %union._xivu }
%union.anon.20 = type { i64 }
%struct.xpvcv = type { ptr, %union._xmgu, i64, %union.anon.21, ptr, %union.anon.22, %union.anon.23, %union.anon.24, ptr, %union.anon.25, ptr, i32, i32, i32 }
%union.anon.21 = type { i64 }
%union.anon.22 = type { ptr }
%union.anon.23 = type { ptr }
%union.anon.24 = type { ptr }
%union.anon.25 = type { ptr }
%struct.av = type { ptr, i32, i32, %union.anon.27 }
%union.anon.27 = type { ptr }
%struct.xpvav = type { ptr, %union._xmgu, i64, i64, ptr }
%struct.yy_parser = type { ptr, %union.YYSTYPE, i32, i32, i32, i32, ptr, ptr, i32, i32, ptr, ptr, i8, i8, i8, i8, i32, ptr, ptr, ptr, i16, i16, i32, ptr, i32, i32, i8, i8, i8, i8, i32, %struct._sublex_info, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i16, i8, i8, ptr, ptr, ptr, i8, [5 x %union.YYSTYPE], [5 x i32], i32, ptr, [256 x i8], i32, i32, i8, i8, i8 }
%union.YYSTYPE = type { ptr }
%struct._sublex_info = type { i8, i16, ptr, ptr }
%struct.jmpenv = type { [1 x %struct.__jmp_buf_tag], ptr, i32, i8 }
%struct.__jmp_buf_tag = type { [8 x i64], i32, %struct.__sigset_t }
%struct.__sigset_t = type { [16 x i64] }
%struct.hv = type { ptr, i32, i32, %union.anon.28 }
%union.anon.28 = type { ptr }
%struct.xpvhv = type { ptr, %union._xmgu, i64, i64 }
%struct.xpvhv_aux = type { %union._xhvnameu, ptr, ptr, i32, i32, ptr, i32, i32, i32, i32 }
%union._xhvnameu = type { ptr }
%struct.hek = type { i32, i32, [1 x i8] }
%union.any = type { ptr }
%struct.padlist = type { i64, ptr, i32, i32 }
%struct.loop = type { ptr, ptr, ptr, i64, i16, i8, i8, ptr, ptr, ptr, ptr, ptr }
%struct.pvop = type { ptr, ptr, ptr, i64, i16, i8, i8, ptr }
%struct.cv = type { ptr, i32, i32, %union.anon.26 }
%union.anon.26 = type { ptr }
%struct.io = type { ptr, i32, i32, %union.anon.19 }
%union.anon.19 = type { ptr }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.block_hooks = type { i32, ptr, ptr, ptr, ptr }
%struct.svop = type { ptr, ptr, ptr, i64, i16, i8, i8, ptr }

@PL_stack_sp = external local_unnamed_addr global ptr, align 8
@PL_stack_max = external local_unnamed_addr global ptr, align 8
@PL_op = external local_unnamed_addr global ptr, align 8
@PL_sv_undef = external global %struct.sv, align 8
@PL_curstackinfo = external local_unnamed_addr global ptr, align 8
@PL_sv_yes = external global %struct.sv, align 8
@PL_sv_no = external global %struct.sv, align 8
@PL_tainted = external local_unnamed_addr global i8, align 1
@PL_stack_base = external local_unnamed_addr global ptr, align 8
@PL_markstack_ptr = external local_unnamed_addr global ptr, align 8
@PL_curpad = external local_unnamed_addr global ptr, align 8
@PL_defgv = external local_unnamed_addr global ptr, align 8
@PL_tainting = external local_unnamed_addr global i8, align 1
@PL_curpm = external global ptr, align 8
@PL_sig_pending = external local_unnamed_addr global i32, align 4
@PL_signalhook = external local_unnamed_addr global ptr, align 8
@.str = private unnamed_addr constant [18 x i8] c"Substitution loop\00", align 1
@PL_curcop = external local_unnamed_addr global ptr, align 8
@PL_savestack_ix = external local_unnamed_addr global i32, align 4
@PL_chopset = external local_unnamed_addr global ptr, align 8
@PL_formtarget = external local_unnamed_addr global ptr, align 8
@.str.1 = private unnamed_addr constant [28 x i8] c"Not enough format arguments\00", align 1
@PL_charclass = external local_unnamed_addr constant [0 x i32], align 4
@PL_utf8skip = external local_unnamed_addr constant [0 x i8], align 1
@.str.2 = private unnamed_addr constant [8 x i8] c"%#0*.*f\00", align 1
@.str.3 = private unnamed_addr constant [7 x i8] c"%0*.*f\00", align 1
@.str.4 = private unnamed_addr constant [7 x i8] c"%#*.*f\00", align 1
@.str.5 = private unnamed_addr constant [6 x i8] c"%*.*f\00", align 1
@.str.6 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.7 = private unnamed_addr constant [25 x i8] c"Null picture in formline\00", align 1
@PL_magic_vtables = external constant [31 x %struct.mgvtbl], align 16
@.str.8 = private unnamed_addr constant [54 x i8] c"Repeated format line will never terminate (~~ and @#)\00", align 1
@PL_tmps_floor = external global i64, align 8
@PL_tmps_ix = external local_unnamed_addr global i64, align 8
@PL_tmps_max = external local_unnamed_addr global i64, align 8
@PL_tmps_stack = external local_unnamed_addr global ptr, align 8
@PL_Sv = external local_unnamed_addr global ptr, align 8
@PL_last_in_gv = external local_unnamed_addr global ptr, align 8
@.str.9 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.10 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.11 = private unnamed_addr constant [37 x i8] c"Range iterator outside integer range\00", align 1
@.str.12 = private unnamed_addr constant [33 x i8] c"Out of memory during list extend\00", align 1
@.str.13 = private unnamed_addr constant [3 x i8] c"E0\00", align 1
@.str.14 = private unnamed_addr constant [22 x i8] c"panic: bad gimme: %d\0A\00", align 1
@PL_scopestack = external local_unnamed_addr global ptr, align 8
@PL_in_eval = external local_unnamed_addr global i8, align 1
@PL_eval_root = external local_unnamed_addr global ptr, align 8
@.str.15 = private unnamed_addr constant [18 x i8] c"\09(in cleanup) %-p\00", align 1
@PL_errgv = external local_unnamed_addr global ptr, align 8
@PL_errors = external local_unnamed_addr global ptr, align 8
@.str.16 = private unnamed_addr constant [4 x i8] c"%-p\00", align 1
@PL_parser = external local_unnamed_addr global ptr, align 8
@PL_curstack = external local_unnamed_addr global ptr, align 8
@PL_markstack = external local_unnamed_addr global ptr, align 8
@PL_scopestack_ix = external local_unnamed_addr global i32, align 4
@PL_stderrgv = external local_unnamed_addr global ptr, align 8
@.str.17 = private unnamed_addr constant [12 x i8] c"panic: die \00", align 1
@PL_incgv = external local_unnamed_addr global ptr, align 8
@.str.18 = private unnamed_addr constant [33 x i8] c"%-pCompilation failed in require\00", align 1
@.str.19 = private unnamed_addr constant [15 x i8] c"Unknown error\0A\00", align 1
@PL_restartjmpenv = external local_unnamed_addr global ptr, align 8
@PL_restartop = external local_unnamed_addr global ptr, align 8
@PL_top_env = external local_unnamed_addr global ptr, align 8
@.str.20 = private unnamed_addr constant [22 x i8] c"panic: top_env, v=%d\0A\00", align 1
@PL_DBsub = external local_unnamed_addr global ptr, align 8
@.str.21 = private unnamed_addr constant [10 x i8] c"(unknown)\00", align 1
@.str.22 = private unnamed_addr constant [7 x i8] c"(eval)\00", align 1
@PL_debstash = external local_unnamed_addr global ptr, align 8
@PL_dbargs = external local_unnamed_addr global ptr, align 8
@.str.23 = private unnamed_addr constant [18 x i8] zeroinitializer, align 1
@PL_dowarn = external local_unnamed_addr global i8, align 1
@.str.24 = private unnamed_addr constant [15 x i8] c"warnings::Bits\00", align 1
@.str.25 = private unnamed_addr constant [4 x i8] c"all\00", align 1
@.str.26 = private unnamed_addr constant [18 x i8] c"UUUUUUUUUUUUUUUUU\00", align 1
@PL_DBcontrol = external local_unnamed_addr global [3 x i64], align 16
@PL_DBgv = external local_unnamed_addr global ptr, align 8
@.str.27 = private unnamed_addr constant [26 x i8] c"No DB::DB routine defined\00", align 1
@PL_debug = external global i32, align 4
@PL_savestack = external local_unnamed_addr global ptr, align 8
@PL_savestack_max = external local_unnamed_addr global i32, align 4
@PL_markstack_max = external local_unnamed_addr global ptr, align 8
@PL_comppad = external local_unnamed_addr global ptr, align 8
@.str.28 = private unnamed_addr constant [34 x i8] c"Assigned value is not a reference\00", align 1
@.str.29 = private unnamed_addr constant [34 x i8] c"Can't return outside a subroutine\00", align 1
@.str.30 = private unnamed_addr constant [32 x i8] c"%-p did not return a true value\00", align 1
@.str.31 = private unnamed_addr constant [23 x i8] c"panic: return, type=%u\00", align 1
@.str.32 = private unnamed_addr constant [6 x i8] c"undef\00", align 1
@.str.33 = private unnamed_addr constant [17 x i8] c"a readonly value\00", align 1
@.str.34 = private unnamed_addr constant [12 x i8] c"a temporary\00", align 1
@.str.35 = private unnamed_addr constant [39 x i8] c"Can't return %s from lvalue subroutine\00", align 1
@.str.36 = private unnamed_addr constant [41 x i8] c"Can't return a %s from lvalue subroutine\00", align 1
@.str.37 = private unnamed_addr constant [15 x i8] c"readonly value\00", align 1
@.str.38 = private unnamed_addr constant [10 x i8] c"temporary\00", align 1
@.str.39 = private unnamed_addr constant [5 x i8] c"last\00", align 1
@.str.40 = private unnamed_addr constant [21 x i8] c"panic: last, type=%u\00", align 1
@.str.41 = private unnamed_addr constant [32 x i8] c"Can't \22%s\22 outside a loop block\00", align 1
@.str.42 = private unnamed_addr constant [29 x i8] c"Label not found for \22%s %-p\22\00", align 1
@.str.43 = private unnamed_addr constant [18 x i8] c"Exiting %s via %s\00", align 1
@context_name = internal unnamed_addr constant [12 x ptr] [ptr @.str.44, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @.str.45, ptr @.str.46, ptr @.str.47, ptr @.str.48], align 16
@PL_op_name = external local_unnamed_addr constant [0 x ptr], align 8
@.str.44 = private unnamed_addr constant [13 x i8] c"pseudo-block\00", align 1
@.str.45 = private unnamed_addr constant [11 x i8] c"subroutine\00", align 1
@.str.46 = private unnamed_addr constant [7 x i8] c"format\00", align 1
@.str.47 = private unnamed_addr constant [5 x i8] c"eval\00", align 1
@.str.48 = private unnamed_addr constant [13 x i8] c"substitution\00", align 1
@.str.49 = private unnamed_addr constant [5 x i8] c"next\00", align 1
@.str.50 = private unnamed_addr constant [5 x i8] c"redo\00", align 1
@.str.51 = private unnamed_addr constant [21 x i8] c"goto must have label\00", align 1
@.str.52 = private unnamed_addr constant [31 x i8] c"Goto undefined subroutine &%-p\00", align 1
@.str.53 = private unnamed_addr constant [26 x i8] c"Goto undefined subroutine\00", align 1
@.str.54 = private unnamed_addr constant [43 x i8] c"Can't goto subroutine outside a subroutine\00", align 1
@.str.55 = private unnamed_addr constant [42 x i8] c"Can't goto subroutine from an eval-string\00", align 1
@.str.56 = private unnamed_addr constant [41 x i8] c"Can't goto subroutine from an eval-block\00", align 1
@.str.57 = private unnamed_addr constant [60 x i8] c"Can't goto subroutine from a sort sub (or similar callback)\00", align 1
@PL_perldb = external local_unnamed_addr global i32, align 4
@.str.58 = private unnamed_addr constant [9 x i8] c"DB::goto\00", align 1
@.str.59 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@PL_lastgotoprobe = external local_unnamed_addr global ptr, align 8
@PL_main_root = external local_unnamed_addr global ptr, align 8
@.str.60 = private unnamed_addr constant [35 x i8] c"Can't \22goto\22 out of a pseudo block\00", align 1
@.str.61 = private unnamed_addr constant [29 x i8] c"panic: goto, type=%u, ix=%ld\00", align 1
@.str.62 = private unnamed_addr constant [26 x i8] c"Can't find label %d%lu%4p\00", align 1
@.str.63 = private unnamed_addr constant [47 x i8] c"Can't \22goto\22 into the middle of a foreach loop\00", align 1
@.str.64 = private unnamed_addr constant [53 x i8] c"Use of \22goto\22 to jump into a construct is deprecated\00", align 1
@PL_do_undump = external local_unnamed_addr global i8, align 1
@.str.66 = private unnamed_addr constant [36 x i8] c"Target of goto is too deeply nested\00", align 1
@PL_exit_flags = external local_unnamed_addr global i8, align 1
@PL_compiling = external global %struct.cop, align 8
@PL_cop_seqmax = external local_unnamed_addr global i32, align 4
@PL_main_cv = external local_unnamed_addr global ptr, align 8
@PL_patchlevel = external local_unnamed_addr global ptr, align 8
@.str.67 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@.str.68 = private unnamed_addr constant [49 x i8] c"Perls since %-p too modern--this is %-p, stopped\00", align 1
@.str.69 = private unnamed_addr constant [9 x i8] c"original\00", align 1
@.str.70 = private unnamed_addr constant [3 x i8] c"qv\00", align 1
@.str.71 = private unnamed_addr constant [3 x i8] c".0\00", align 1
@.str.72 = private unnamed_addr constant [45 x i8] c"Perl %-p required--this is only %-p, stopped\00", align 1
@.str.73 = private unnamed_addr constant [9 x i8] c"v%d.%d.0\00", align 1
@.str.74 = private unnamed_addr constant [65 x i8] c"Perl %-p required (did you mean %-p?)--this is only %-p, stopped\00", align 1
@.str.75 = private unnamed_addr constant [41 x i8] c"Missing or undefined argument to require\00", align 1
@.str.76 = private unnamed_addr constant [9 x i8] c"pathname\00", align 1
@.str.77 = private unnamed_addr constant [8 x i8] c"require\00", align 1
@.str.78 = private unnamed_addr constant [22 x i8] c"Can't locate %s:   %s\00", align 1
@.str.79 = private unnamed_addr constant [60 x i8] c"Attempt to reload %s aborted.\0ACompilation failed in require\00", align 1
@.str.80 = private unnamed_addr constant [17 x i8] c"/loader/0x%lx/%s\00", align 1
@.str.81 = private unnamed_addr constant [4 x i8] c"INC\00", align 1
@.str.82 = private unnamed_addr constant [10 x i8] c"/dev/null\00", align 1
@.str.83 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.84 = private unnamed_addr constant [11 x i8] c"@INC entry\00", align 1
@.str.85 = private unnamed_addr constant [26 x i8] c"Can't locate %s:   %s: %s\00", align 1
@.str.86 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.87 = private unnamed_addr constant [4 x i8] c".pm\00", align 1
@.str.88 = private unnamed_addr constant [31 x i8] c" (you may need to install the \00", align 1
@.str.89 = private unnamed_addr constant [3 x i8] c"::\00", align 1
@.str.90 = private unnamed_addr constant [9 x i8] c" module)\00", align 1
@.str.91 = private unnamed_addr constant [3 x i8] c".h\00", align 1
@.str.92 = private unnamed_addr constant [47 x i8] c" (change .h to .ph maybe?) (did you run h2ph?)\00", align 1
@.str.93 = private unnamed_addr constant [4 x i8] c".ph\00", align 1
@.str.94 = private unnamed_addr constant [21 x i8] c" (did you run h2ph?)\00", align 1
@.str.95 = private unnamed_addr constant [47 x i8] c"Can't locate %s in @INC%-p (@INC contains:%-p)\00", align 1
@.str.96 = private unnamed_addr constant [16 x i8] c"Can't locate %s\00", align 1
@PL_eval_start = external local_unnamed_addr global ptr, align 8
@.str.97 = private unnamed_addr constant [42 x i8] c"Invalid \\0 character in %s for %s: %s\\0%s\00", align 1
@.str.98 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@.str.99 = private unnamed_addr constant [2 x i8] c":\00", align 1
@PL_curstash = external global ptr, align 8
@PL_beginav = external global ptr, align 8
@PL_unitcheckav = external global ptr, align 8
@PL_compcv = external global ptr, align 8
@PL_hintgv = external local_unnamed_addr global ptr, align 8
@PL_blockhooks = external local_unnamed_addr global ptr, align 8
@.str.100 = private unnamed_addr constant [18 x i8] c"Compilation error\00", align 1
@.str.101 = private unnamed_addr constant [14 x i8] c"DB::postponed\00", align 1
@PL_statusvalue = external local_unnamed_addr global i32, align 4
@PL_runops = external local_unnamed_addr global ptr, align 8
@PL_breakable_sub_gen = external local_unnamed_addr global i32, align 4
@.str.102 = private unnamed_addr constant [21 x i8] c"_<(eval %lu)[%s:%ld]\00", align 1
@PL_evalseq = external local_unnamed_addr global i32, align 4
@.str.103 = private unnamed_addr constant [13 x i8] c"_<(eval %lu)\00", align 1
@PL_defstash = external local_unnamed_addr global ptr, align 8
@.str.104 = private unnamed_addr constant [60 x i8] c"Smart matching a non-overloaded object breaks encapsulation\00", align 1
@.str.105 = private unnamed_addr constant [33 x i8] c"Can't \22%s\22 outside a topicalizer\00", align 1
@.str.106 = private unnamed_addr constant [8 x i8] c"default\00", align 1
@.str.107 = private unnamed_addr constant [5 x i8] c"when\00", align 1
@.str.108 = private unnamed_addr constant [38 x i8] c"Can't \22continue\22 outside a when block\00", align 1
@.str.109 = private unnamed_addr constant [36 x i8] c"Can't \22break\22 outside a given block\00", align 1
@.str.110 = private unnamed_addr constant [36 x i8] c"Can't \22break\22 in a loop topicalizer\00", align 1
@switch.table.Perl_dowantarray = private unnamed_addr constant [3 x i32] [i32 2, i32 2, i32 3], align 4

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_wantarray() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !6
  %2 = load ptr, ptr @PL_stack_max, align 8, !tbaa !6
  %3 = ptrtoint ptr %2 to i64
  %4 = ptrtoint ptr %1 to i64
  %5 = sub i64 %3, %4
  %6 = icmp slt i64 %5, 8
  br i1 %6, label %7, label %9

7:                                                ; preds = %0
  %8 = tail call ptr @Perl_stack_grow(ptr noundef %1, ptr noundef %1, i64 noundef 1) #17
  br label %9

9:                                                ; preds = %0, %7
  %10 = phi ptr [ %8, %7 ], [ %1, %0 ]
  %11 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %12 = getelementptr inbounds %struct.op, ptr %11, i64 0, i32 6
  %13 = load i8, ptr %12, align 1, !tbaa !10
  %14 = icmp sgt i8 %13, -1
  br i1 %14, label %20, label %15

15:                                               ; preds = %9
  %16 = tail call ptr @Perl_caller_cx(i32 noundef 1, ptr noundef null)
  %17 = icmp eq ptr %16, null
  br i1 %17, label %18, label %48

18:                                               ; preds = %15
  %19 = getelementptr inbounds ptr, ptr %10, i64 1
  store ptr @PL_sv_undef, ptr %19, align 8, !tbaa !6
  br label %58

20:                                               ; preds = %9
  %21 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %22 = getelementptr inbounds %struct.stackinfo, ptr %21, i64 0, i32 1
  %23 = load ptr, ptr %22, align 8, !tbaa !14
  %24 = getelementptr inbounds %struct.stackinfo, ptr %21, i64 0, i32 4
  %25 = load i32, ptr %24, align 8, !tbaa !16
  %26 = icmp sgt i32 %25, -1
  br i1 %26, label %27, label %43

27:                                               ; preds = %20
  %28 = zext i32 %25 to i64
  br label %29

29:                                               ; preds = %37, %27
  %30 = phi i64 [ %28, %27 ], [ %38, %37 ]
  %31 = getelementptr inbounds %struct.context, ptr %23, i64 %30
  %32 = load i8, ptr %31, align 8, !tbaa !17
  %33 = and i8 %32, 15
  %34 = zext i8 %33 to i32
  switch i32 %34, label %37 [
    i32 8, label %35
    i32 10, label %40
    i32 9, label %40
  ]

35:                                               ; preds = %29
  %36 = icmp sgt i8 %32, -1
  br i1 %36, label %40, label %37

37:                                               ; preds = %35, %29
  %38 = add nsw i64 %30, -1
  %39 = icmp sgt i64 %30, 0
  br i1 %39, label %29, label %43, !llvm.loop !18

40:                                               ; preds = %29, %29, %35
  %41 = and i64 %30, 2147483648
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %45, label %43

43:                                               ; preds = %37, %20, %40
  %44 = getelementptr inbounds ptr, ptr %10, i64 1
  store ptr @PL_sv_undef, ptr %44, align 8, !tbaa !6
  br label %58

45:                                               ; preds = %40
  %46 = and i64 %30, 4294967295
  %47 = getelementptr inbounds %struct.context, ptr %23, i64 %46
  br label %48

48:                                               ; preds = %15, %45
  %49 = phi ptr [ %16, %15 ], [ %47, %45 ]
  %50 = getelementptr inbounds %struct.block, ptr %49, i64 0, i32 1
  %51 = load i8, ptr %50, align 1, !tbaa !17
  switch i8 %51, label %56 [
    i8 3, label %52
    i8 2, label %54
  ]

52:                                               ; preds = %48
  %53 = getelementptr inbounds ptr, ptr %10, i64 1
  store ptr @PL_sv_yes, ptr %53, align 8, !tbaa !6
  br label %58

54:                                               ; preds = %48
  %55 = getelementptr inbounds ptr, ptr %10, i64 1
  store ptr @PL_sv_no, ptr %55, align 8, !tbaa !6
  br label %58

56:                                               ; preds = %48
  %57 = getelementptr inbounds ptr, ptr %10, i64 1
  store ptr @PL_sv_undef, ptr %57, align 8, !tbaa !6
  br label %58

58:                                               ; preds = %56, %54, %52, %43, %18
  %59 = phi ptr [ %57, %56 ], [ %55, %54 ], [ %53, %52 ], [ %44, %43 ], [ %19, %18 ]
  store ptr %59, ptr @PL_stack_sp, align 8, !tbaa !6
  %60 = load ptr, ptr %11, align 8, !tbaa !20
  ret ptr %60
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

declare ptr @Perl_stack_grow(ptr noundef, ptr noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: nofree norecurse nosync nounwind sspstrong memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define dso_local ptr @Perl_caller_cx(i32 noundef %0, ptr noundef writeonly %1) local_unnamed_addr #3 {
  %3 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %4 = getelementptr inbounds %struct.stackinfo, ptr %3, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !14
  %6 = getelementptr inbounds %struct.stackinfo, ptr %3, i64 0, i32 4
  %7 = load i32, ptr %6, align 8, !tbaa !16
  %8 = icmp sgt i32 %7, -1
  br i1 %8, label %9, label %26

9:                                                ; preds = %2
  %10 = zext i32 %7 to i64
  br label %11

11:                                               ; preds = %19, %9
  %12 = phi i64 [ %10, %9 ], [ %20, %19 ]
  %13 = getelementptr inbounds %struct.context, ptr %5, i64 %12
  %14 = load i8, ptr %13, align 8, !tbaa !17
  %15 = and i8 %14, 15
  %16 = zext i8 %15 to i32
  switch i32 %16, label %19 [
    i32 8, label %17
    i32 10, label %24
    i32 9, label %24
  ]

17:                                               ; preds = %11
  %18 = icmp sgt i8 %14, -1
  br i1 %18, label %22, label %19

19:                                               ; preds = %17, %11
  %20 = add nsw i64 %12, -1
  %21 = icmp sgt i64 %12, 0
  br i1 %21, label %11, label %26, !llvm.loop !18

22:                                               ; preds = %17
  %23 = trunc i64 %12 to i32
  br label %26

24:                                               ; preds = %11, %11
  %25 = trunc i64 %12 to i32
  br label %26

26:                                               ; preds = %19, %2, %22, %24
  %27 = phi i32 [ %7, %2 ], [ %23, %22 ], [ %25, %24 ], [ -1, %19 ]
  %28 = load ptr, ptr @PL_DBsub, align 8
  %29 = icmp eq ptr %28, null
  %30 = getelementptr inbounds %struct.gv, ptr %28, i64 0, i32 3
  br label %31

31:                                               ; preds = %92, %26
  %32 = phi i32 [ %0, %26 ], [ %90, %92 ]
  %33 = phi i32 [ %27, %26 ], [ %93, %92 ]
  %34 = phi ptr [ %5, %26 ], [ %72, %92 ]
  %35 = phi ptr [ %3, %26 ], [ %73, %92 ]
  %36 = icmp slt i32 %33, 0
  br i1 %36, label %37, label %70

37:                                               ; preds = %31, %67
  %38 = phi ptr [ %44, %67 ], [ %35, %31 ]
  %39 = getelementptr inbounds %struct.stackinfo, ptr %38, i64 0, i32 6
  %40 = load i32, ptr %39, align 8, !tbaa !21
  %41 = icmp eq i32 %40, 1
  br i1 %41, label %160, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %struct.stackinfo, ptr %38, i64 0, i32 2
  %44 = load ptr, ptr %43, align 8, !tbaa !22
  %45 = getelementptr inbounds %struct.stackinfo, ptr %44, i64 0, i32 1
  %46 = load ptr, ptr %45, align 8, !tbaa !14
  %47 = getelementptr inbounds %struct.stackinfo, ptr %44, i64 0, i32 4
  %48 = load i32, ptr %47, align 8, !tbaa !16
  %49 = icmp sgt i32 %48, -1
  br i1 %49, label %50, label %67

50:                                               ; preds = %42
  %51 = zext i32 %48 to i64
  br label %52

52:                                               ; preds = %60, %50
  %53 = phi i64 [ %51, %50 ], [ %61, %60 ]
  %54 = getelementptr inbounds %struct.context, ptr %46, i64 %53
  %55 = load i8, ptr %54, align 8, !tbaa !17
  %56 = and i8 %55, 15
  %57 = zext i8 %56 to i32
  switch i32 %57, label %60 [
    i32 8, label %58
    i32 10, label %65
    i32 9, label %65
  ]

58:                                               ; preds = %52
  %59 = icmp sgt i8 %55, -1
  br i1 %59, label %63, label %60

60:                                               ; preds = %58, %52
  %61 = add nsw i64 %53, -1
  %62 = icmp sgt i64 %53, 0
  br i1 %62, label %52, label %67, !llvm.loop !18

63:                                               ; preds = %58
  %64 = trunc i64 %53 to i32
  br label %67

65:                                               ; preds = %52, %52
  %66 = trunc i64 %53 to i32
  br label %67

67:                                               ; preds = %60, %42, %63, %65
  %68 = phi i32 [ %48, %42 ], [ %64, %63 ], [ %66, %65 ], [ -1, %60 ]
  %69 = icmp slt i32 %68, 0
  br i1 %69, label %37, label %70, !llvm.loop !23

70:                                               ; preds = %67, %31
  %71 = phi i32 [ %33, %31 ], [ %68, %67 ]
  %72 = phi ptr [ %34, %31 ], [ %46, %67 ]
  %73 = phi ptr [ %35, %31 ], [ %44, %67 ]
  br i1 %29, label %86, label %74

74:                                               ; preds = %70
  %75 = load ptr, ptr %30, align 8, !tbaa !17
  %76 = getelementptr inbounds %struct.gp, ptr %75, i64 0, i32 2
  %77 = load ptr, ptr %76, align 8, !tbaa !24
  %78 = icmp eq ptr %77, null
  br i1 %78, label %86, label %79

79:                                               ; preds = %74
  %80 = zext i32 %71 to i64
  %81 = getelementptr inbounds %struct.context, ptr %72, i64 %80, i32 0, i32 0, i32 8
  %82 = load ptr, ptr %81, align 8, !tbaa !17
  %83 = icmp eq ptr %82, %77
  %84 = zext i1 %83 to i32
  %85 = add nsw i32 %32, %84
  br label %86

86:                                               ; preds = %79, %74, %70
  %87 = phi i32 [ %32, %74 ], [ %32, %70 ], [ %85, %79 ]
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %112, label %89

89:                                               ; preds = %86
  %90 = add nsw i32 %87, -1
  %91 = icmp eq i32 %71, 0
  br i1 %91, label %92, label %94

92:                                               ; preds = %105, %89, %108, %110
  %93 = phi i32 [ -1, %89 ], [ %109, %108 ], [ %111, %110 ], [ -1, %105 ]
  br label %31

94:                                               ; preds = %89
  %95 = add nsw i32 %71, -1
  %96 = zext i32 %95 to i64
  br label %97

97:                                               ; preds = %105, %94
  %98 = phi i64 [ %96, %94 ], [ %106, %105 ]
  %99 = getelementptr inbounds %struct.context, ptr %72, i64 %98
  %100 = load i8, ptr %99, align 8, !tbaa !17
  %101 = and i8 %100, 15
  %102 = zext i8 %101 to i32
  switch i32 %102, label %105 [
    i32 8, label %103
    i32 10, label %110
    i32 9, label %110
  ]

103:                                              ; preds = %97
  %104 = icmp sgt i8 %100, -1
  br i1 %104, label %108, label %105

105:                                              ; preds = %103, %97
  %106 = add nsw i64 %98, -1
  %107 = icmp sgt i64 %98, 0
  br i1 %107, label %97, label %92, !llvm.loop !18

108:                                              ; preds = %103
  %109 = trunc i64 %98 to i32
  br label %92

110:                                              ; preds = %97, %97
  %111 = trunc i64 %98 to i32
  br label %92

112:                                              ; preds = %86
  %113 = zext i32 %71 to i64
  %114 = getelementptr inbounds %struct.context, ptr %72, i64 %113
  %115 = icmp eq ptr %1, null
  br i1 %115, label %117, label %116

116:                                              ; preds = %112
  store ptr %114, ptr %1, align 8, !tbaa !6
  br label %117

117:                                              ; preds = %116, %112
  %118 = load i8, ptr %114, align 8, !tbaa !17
  %119 = and i8 %118, 14
  %120 = icmp eq i8 %119, 8
  br i1 %120, label %121, label %160

121:                                              ; preds = %117
  %122 = icmp eq i32 %71, 0
  br i1 %122, label %141, label %123

123:                                              ; preds = %121
  %124 = add nsw i32 %71, -1
  %125 = zext i32 %124 to i64
  br label %126

126:                                              ; preds = %134, %123
  %127 = phi i64 [ %125, %123 ], [ %135, %134 ]
  %128 = getelementptr inbounds %struct.context, ptr %72, i64 %127
  %129 = load i8, ptr %128, align 8, !tbaa !17
  %130 = and i8 %129, 15
  %131 = zext i8 %130 to i32
  switch i32 %131, label %134 [
    i32 8, label %132
    i32 10, label %139
    i32 9, label %139
  ]

132:                                              ; preds = %126
  %133 = icmp sgt i8 %129, -1
  br i1 %133, label %137, label %134

134:                                              ; preds = %132, %126
  %135 = add nsw i64 %127, -1
  %136 = icmp sgt i64 %127, 0
  br i1 %136, label %126, label %141, !llvm.loop !18

137:                                              ; preds = %132
  %138 = trunc i64 %127 to i32
  br label %141

139:                                              ; preds = %126, %126
  %140 = trunc i64 %127 to i32
  br label %141

141:                                              ; preds = %134, %121, %137, %139
  %142 = phi i32 [ -1, %121 ], [ %138, %137 ], [ %140, %139 ], [ -1, %134 ]
  %143 = load ptr, ptr @PL_DBsub, align 8, !tbaa !6
  %144 = icmp eq ptr %143, null
  br i1 %144, label %160, label %145

145:                                              ; preds = %141
  %146 = getelementptr inbounds %struct.gv, ptr %143, i64 0, i32 3
  %147 = load ptr, ptr %146, align 8, !tbaa !17
  %148 = getelementptr inbounds %struct.gp, ptr %147, i64 0, i32 2
  %149 = load ptr, ptr %148, align 8, !tbaa !24
  %150 = icmp ne ptr %149, null
  %151 = icmp sgt i32 %142, -1
  %152 = and i1 %151, %150
  br i1 %152, label %153, label %160

153:                                              ; preds = %145
  %154 = zext i32 %142 to i64
  %155 = getelementptr inbounds %struct.context, ptr %72, i64 %154
  %156 = getelementptr inbounds %struct.block, ptr %155, i64 0, i32 8, i32 0, i32 1
  %157 = load ptr, ptr %156, align 8, !tbaa !17
  %158 = icmp eq ptr %157, %149
  %159 = select i1 %158, ptr %155, ptr %114
  br label %160

160:                                              ; preds = %37, %153, %117, %145, %141
  %161 = phi ptr [ %114, %117 ], [ %114, %145 ], [ %114, %141 ], [ %159, %153 ], [ null, %37 ]
  ret ptr %161
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(readwrite, argmem: read, inaccessiblemem: none) uwtable
define dso_local ptr @Perl_pp_regcreset() local_unnamed_addr #4 {
  store i8 0, ptr @PL_tainted, align 1, !tbaa !26
  %1 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %2 = load ptr, ptr %1, align 8, !tbaa !20
  ret ptr %2
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_regcomp() local_unnamed_addr #0 {
  %1 = alloca i8, align 1
  %2 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !6
  %3 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %4 = getelementptr inbounds %struct.logop, ptr %3, i64 0, i32 8
  %5 = load ptr, ptr %4, align 8, !tbaa !28
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %1) #17
  store i8 0, ptr %1, align 1, !tbaa !26
  %6 = getelementptr inbounds %struct.op, ptr %3, i64 0, i32 5
  %7 = load i8, ptr %6, align 2, !tbaa !30
  %8 = and i8 %7, 64
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %23, label %10

10:                                               ; preds = %0
  %11 = load ptr, ptr @PL_stack_base, align 8, !tbaa !6
  %12 = load ptr, ptr @PL_markstack_ptr, align 8, !tbaa !6
  %13 = getelementptr inbounds i32, ptr %12, i64 -1
  store ptr %13, ptr @PL_markstack_ptr, align 8, !tbaa !6
  %14 = load i32, ptr %12, align 4, !tbaa !31
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds ptr, ptr %11, i64 %15
  %17 = ptrtoint ptr %2 to i64
  %18 = ptrtoint ptr %16 to i64
  %19 = sub i64 %17, %18
  %20 = lshr exact i64 %19, 3
  %21 = trunc i64 %20 to i32
  %22 = getelementptr inbounds ptr, ptr %16, i64 1
  br label %23

23:                                               ; preds = %0, %10
  %24 = phi i32 [ %21, %10 ], [ 1, %0 ]
  %25 = phi ptr [ %22, %10 ], [ %2, %0 ]
  %26 = getelementptr inbounds %struct.pmop, ptr %5, i64 0, i32 9
  %27 = load ptr, ptr %26, align 8, !tbaa !32
  %28 = icmp eq ptr %27, null
  br i1 %28, label %34, label %29

29:                                               ; preds = %23
  %30 = getelementptr i8, ptr %27, i64 16
  %31 = load ptr, ptr %30, align 8, !tbaa !17
  %32 = getelementptr inbounds %struct.regexp, ptr %31, i64 0, i32 4
  %33 = load ptr, ptr %32, align 8, !tbaa !34
  br label %39

34:                                               ; preds = %23
  %35 = tail call ptr @Perl_current_re_engine() #17
  %36 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %37 = getelementptr inbounds %struct.op, ptr %36, i64 0, i32 5
  %38 = load i8, ptr %37, align 2, !tbaa !30
  br label %39

39:                                               ; preds = %34, %29
  %40 = phi i8 [ %7, %29 ], [ %38, %34 ]
  %41 = phi ptr [ %33, %29 ], [ %35, %34 ]
  %42 = getelementptr inbounds %struct.regexp_engine, ptr %41, i64 0, i32 11
  %43 = load ptr, ptr %42, align 8, !tbaa !36
  %44 = icmp eq ptr %43, null
  %45 = select i1 %44, ptr @Perl_re_op_compile, ptr %43
  %46 = getelementptr inbounds %struct.pmop, ptr %5, i64 0, i32 13
  %47 = load ptr, ptr %46, align 8, !tbaa !38
  %48 = getelementptr inbounds %struct.pmop, ptr %5, i64 0, i32 10
  %49 = load i32, ptr %48, align 8, !tbaa !39
  %50 = and i32 %49, 4095
  %51 = and i8 %40, -128
  %52 = zext i8 %51 to i32
  %53 = shl nuw i32 %52, 24
  %54 = or i32 %53, %49
  %55 = call ptr %45(ptr noundef %25, i32 noundef %24, ptr noundef %47, ptr noundef %41, ptr noundef %27, ptr noundef nonnull %1, i32 noundef %50, i32 noundef %54) #17
  %56 = load i32, ptr %48, align 8, !tbaa !39
  %57 = and i32 %56, 268435456
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %75, label %59

59:                                               ; preds = %39
  %60 = load ptr, ptr @PL_curpad, align 8, !tbaa !6
  %61 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %62 = getelementptr inbounds %struct.op, ptr %61, i64 0, i32 3
  %63 = load i64, ptr %62, align 8, !tbaa !40
  %64 = getelementptr inbounds ptr, ptr %60, i64 %63
  %65 = load ptr, ptr %64, align 8, !tbaa !6
  %66 = icmp eq ptr %65, null
  br i1 %66, label %71, label %67

67:                                               ; preds = %59
  %68 = getelementptr inbounds %struct.sv, ptr %65, i64 0, i32 1
  %69 = load i32, ptr %68, align 8, !tbaa !41
  %70 = add i32 %69, 1
  store i32 %70, ptr %68, align 8, !tbaa !41
  br label %71

71:                                               ; preds = %59, %67
  %72 = getelementptr i8, ptr %55, i64 16
  %73 = load ptr, ptr %72, align 8, !tbaa !17
  %74 = getelementptr inbounds %struct.regexp, ptr %73, i64 0, i32 25
  store ptr %65, ptr %74, align 8, !tbaa !43
  br label %75

75:                                               ; preds = %71, %39
  %76 = load i8, ptr %1, align 1, !tbaa !26, !range !44, !noundef !45
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %128, label %78

78:                                               ; preds = %75
  %79 = getelementptr inbounds %struct.pmop, ptr %5, i64 0, i32 4
  %80 = load i16, ptr %79, align 8
  %81 = and i16 %80, 511
  %82 = icmp eq i16 %81, 31
  br i1 %82, label %83, label %118

83:                                               ; preds = %78
  %84 = load i8, ptr @PL_tainted, align 1, !tbaa !26, !range !44, !noundef !45
  %85 = getelementptr inbounds %struct.pmop, ptr %5, i64 0, i32 5
  %86 = load i8, ptr %85, align 2, !tbaa !46
  %87 = and i8 %86, 64
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %91, label %89

89:                                               ; preds = %83
  %90 = getelementptr inbounds ptr, ptr %25, i64 -1
  br label %108

91:                                               ; preds = %83
  %92 = getelementptr inbounds %struct.pmop, ptr %5, i64 0, i32 3
  %93 = load i64, ptr %92, align 8, !tbaa !47
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %98, label %95

95:                                               ; preds = %91
  %96 = load ptr, ptr @PL_curpad, align 8, !tbaa !6
  %97 = getelementptr inbounds ptr, ptr %96, i64 %93
  br label %108

98:                                               ; preds = %91
  %99 = load ptr, ptr @PL_defgv, align 8, !tbaa !6
  %100 = getelementptr inbounds %struct.gv, ptr %99, i64 0, i32 3
  %101 = load ptr, ptr %100, align 8, !tbaa !17
  %102 = load ptr, ptr %101, align 8, !tbaa !48
  %103 = icmp eq ptr %102, null
  br i1 %103, label %104, label %108

104:                                              ; preds = %98
  %105 = call ptr @Perl_gv_add_by_type(ptr noundef nonnull %99, i32 noundef 0) #17
  %106 = getelementptr inbounds %struct.gv, ptr %105, i64 0, i32 3
  %107 = load ptr, ptr %106, align 8, !tbaa !17
  br label %108

108:                                              ; preds = %104, %98, %95, %89
  %109 = phi ptr [ %90, %89 ], [ %97, %95 ], [ %107, %104 ], [ %101, %98 ]
  %110 = load ptr, ptr %109, align 8, !tbaa !6
  %111 = getelementptr inbounds %struct.sv, ptr %110, i64 0, i32 2
  %112 = load i32, ptr %111, align 4, !tbaa !49
  %113 = and i32 %112, 2097152
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %117, label %115

115:                                              ; preds = %108
  %116 = call i32 @Perl_mg_get(ptr noundef nonnull %110) #17
  br label %117

117:                                              ; preds = %108, %115
  store i8 %84, ptr @PL_tainted, align 1, !tbaa !26
  br label %118

118:                                              ; preds = %117, %78
  %119 = call ptr @Perl_reg_temp_copy(ptr noundef null, ptr noundef %55) #17
  %120 = icmp eq ptr %55, null
  br i1 %120, label %128, label %121

121:                                              ; preds = %118
  %122 = getelementptr inbounds %struct.sv, ptr %55, i64 0, i32 1
  %123 = load i32, ptr %122, align 8, !tbaa !41
  %124 = icmp ugt i32 %123, 1
  br i1 %124, label %125, label %127

125:                                              ; preds = %121
  %126 = add i32 %123, -1
  store i32 %126, ptr %122, align 8, !tbaa !41
  br label %128

127:                                              ; preds = %121
  call void @Perl_sv_free2(ptr noundef nonnull %55, i32 noundef %123) #17
  br label %128

128:                                              ; preds = %127, %125, %118, %75
  %129 = phi ptr [ %55, %75 ], [ %119, %118 ], [ %119, %125 ], [ %119, %127 ]
  %130 = icmp eq ptr %27, %129
  br i1 %130, label %140, label %131

131:                                              ; preds = %128
  br i1 %28, label %139, label %132

132:                                              ; preds = %131
  %133 = getelementptr inbounds %struct.sv, ptr %27, i64 0, i32 1
  %134 = load i32, ptr %133, align 8, !tbaa !41
  %135 = icmp ugt i32 %134, 1
  br i1 %135, label %136, label %138

136:                                              ; preds = %132
  %137 = add i32 %134, -1
  store i32 %137, ptr %133, align 8, !tbaa !41
  br label %139

138:                                              ; preds = %132
  call void @Perl_sv_free2(ptr noundef nonnull %27, i32 noundef %134) #17
  br label %139

139:                                              ; preds = %131, %136, %138
  store ptr %129, ptr %26, align 8, !tbaa !32
  br label %140

140:                                              ; preds = %139, %128
  %141 = load i8, ptr @PL_tainting, align 1, !tbaa !26, !range !44, !noundef !45
  %142 = icmp eq i8 %141, 0
  %143 = load i8, ptr @PL_tainted, align 1, !range !44
  %144 = icmp eq i8 %143, 0
  %145 = select i1 %142, i1 true, i1 %144
  br i1 %145, label %152, label %146

146:                                              ; preds = %140
  call void @Perl_sv_magic(ptr noundef %129, ptr noundef null, i32 noundef 116, ptr noundef null, i32 noundef 0) #17
  %147 = getelementptr i8, ptr %129, i64 16
  %148 = load ptr, ptr %147, align 8, !tbaa !17
  %149 = getelementptr inbounds %struct.regexp, ptr %148, i64 0, i32 7
  %150 = load i32, ptr %149, align 8, !tbaa !50
  %151 = or i32 %150, 134217728
  store i32 %151, ptr %149, align 8, !tbaa !50
  br label %152

152:                                              ; preds = %146, %140
  %153 = load ptr, ptr %26, align 8, !tbaa !32
  %154 = load ptr, ptr %153, align 8, !tbaa !51
  %155 = getelementptr inbounds %struct.xpv, ptr %154, i64 0, i32 2
  %156 = load i64, ptr %155, align 8, !tbaa !53
  %157 = getelementptr i8, ptr %153, i64 16
  %158 = load ptr, ptr %157, align 8, !tbaa !17
  %159 = getelementptr inbounds %struct.regexp, ptr %158, i64 0, i32 24
  %160 = load i16, ptr %159, align 8
  %161 = and i16 %160, 15
  %162 = add nuw nsw i16 %161, 1
  %163 = zext i16 %162 to i64
  %164 = icmp eq i64 %156, %163
  %165 = load ptr, ptr @PL_curpm, align 8
  %166 = icmp ne ptr %165, null
  %167 = select i1 %164, i1 %166, i1 false
  %168 = select i1 %167, ptr %165, ptr %5
  %169 = getelementptr inbounds %struct.pmop, ptr %168, i64 0, i32 10
  %170 = load i32, ptr %169, align 8, !tbaa !39
  %171 = and i32 %170, 8388608
  %172 = icmp eq i32 %171, 0
  %173 = load ptr, ptr @PL_op, align 8, !tbaa !6
  br i1 %172, label %182, label %174

174:                                              ; preds = %152
  %175 = getelementptr inbounds %struct.pmop, ptr %168, i64 0, i32 6
  %176 = load i8, ptr %175, align 1, !tbaa !55
  %177 = and i8 %176, -65
  store i8 %177, ptr %175, align 1, !tbaa !55
  %178 = load ptr, ptr %173, align 8, !tbaa !20
  %179 = getelementptr inbounds %struct.logop, ptr %173, i64 0, i32 7
  %180 = load ptr, ptr %179, align 8, !tbaa !56
  store ptr %178, ptr %180, align 8, !tbaa !20
  %181 = load ptr, ptr @PL_op, align 8, !tbaa !6
  br label %182

182:                                              ; preds = %174, %152
  %183 = phi ptr [ %181, %174 ], [ %173, %152 ]
  %184 = getelementptr inbounds ptr, ptr %25, i64 -1
  store ptr %184, ptr @PL_stack_sp, align 8, !tbaa !6
  %185 = load ptr, ptr %183, align 8, !tbaa !20
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %1) #17
  ret ptr %185
}

declare ptr @Perl_current_re_engine() local_unnamed_addr #2

declare ptr @Perl_re_op_compile(ptr noundef, i32 noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

declare ptr @Perl_gv_add_by_type(ptr noundef, i32 noundef) local_unnamed_addr #2

declare i32 @Perl_mg_get(ptr noundef) local_unnamed_addr #2

declare ptr @Perl_reg_temp_copy(ptr noundef, ptr noundef) local_unnamed_addr #2

declare void @Perl_sv_magic(ptr noundef, ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

declare void @Perl_sv_free2(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_substcont() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !6
  %2 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %3 = getelementptr inbounds %struct.stackinfo, ptr %2, i64 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !14
  %5 = getelementptr inbounds %struct.stackinfo, ptr %2, i64 0, i32 4
  %6 = load i32, ptr %5, align 8, !tbaa !16
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds %struct.context, ptr %4, i64 %7
  %9 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %10 = getelementptr inbounds %struct.logop, ptr %9, i64 0, i32 8
  %11 = load ptr, ptr %10, align 8, !tbaa !28
  %12 = getelementptr inbounds %struct.subst, ptr %8, i64 0, i32 7
  %13 = load ptr, ptr %12, align 8, !tbaa !17
  %14 = getelementptr inbounds %struct.subst, ptr %8, i64 0, i32 9
  %15 = load ptr, ptr %14, align 8, !tbaa !17
  %16 = getelementptr inbounds %struct.subst, ptr %8, i64 0, i32 10
  %17 = load ptr, ptr %16, align 8, !tbaa !17
  %18 = getelementptr inbounds %struct.subst, ptr %8, i64 0, i32 6
  %19 = load ptr, ptr %18, align 8, !tbaa !17
  %20 = getelementptr inbounds %struct.subst, ptr %8, i64 0, i32 13
  %21 = load ptr, ptr %20, align 8, !tbaa !17
  %22 = getelementptr inbounds %struct.pmop, ptr %11, i64 0, i32 9
  %23 = load ptr, ptr %22, align 8, !tbaa !32
  %24 = load i32, ptr @PL_sig_pending, align 4, !tbaa !31
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %28, label %26

26:                                               ; preds = %0
  %27 = load ptr, ptr @PL_signalhook, align 8, !tbaa !6
  tail call void %27() #17
  br label %28

28:                                               ; preds = %0, %26
  %29 = icmp eq ptr %23, %21
  br i1 %29, label %46, label %30

30:                                               ; preds = %28
  %31 = icmp eq ptr %23, null
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = getelementptr inbounds %struct.sv, ptr %23, i64 0, i32 1
  %34 = load i32, ptr %33, align 8, !tbaa !41
  %35 = icmp ugt i32 %34, 1
  br i1 %35, label %36, label %38

36:                                               ; preds = %32
  %37 = add i32 %34, -1
  store i32 %37, ptr %33, align 8, !tbaa !41
  br label %39

38:                                               ; preds = %32
  tail call void @Perl_sv_free2(ptr noundef nonnull %23, i32 noundef %34) #17
  br label %39

39:                                               ; preds = %38, %36, %30
  %40 = icmp eq ptr %21, null
  br i1 %40, label %45, label %41

41:                                               ; preds = %39
  %42 = getelementptr inbounds %struct.sv, ptr %21, i64 0, i32 1
  %43 = load i32, ptr %42, align 8, !tbaa !41
  %44 = add i32 %43, 1
  store i32 %44, ptr %42, align 8, !tbaa !41
  br label %45

45:                                               ; preds = %39, %41
  store ptr %21, ptr %22, align 8, !tbaa !32
  br label %46

46:                                               ; preds = %45, %28
  %47 = getelementptr inbounds %struct.subst, ptr %8, i64 0, i32 12
  %48 = load ptr, ptr %47, align 8, !tbaa !6
  %49 = getelementptr i8, ptr %21, i64 16
  %50 = load ptr, ptr %49, align 8, !tbaa !17
  %51 = getelementptr inbounds %struct.regexp, ptr %50, i64 0, i32 19
  %52 = load ptr, ptr %51, align 8, !tbaa !57
  %53 = icmp eq ptr %52, null
  br i1 %53, label %61, label %54

54:                                               ; preds = %46
  %55 = getelementptr inbounds %struct.sv, ptr %52, i64 0, i32 2
  %56 = load i32, ptr %55, align 4, !tbaa !49
  %57 = and i32 %56, 427886592
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %61, label %59

59:                                               ; preds = %54
  tail call void @Perl_sv_force_normal_flags(ptr noundef nonnull %52, i32 noundef 4) #17
  %60 = load ptr, ptr %49, align 8, !tbaa !17
  br label %61

61:                                               ; preds = %59, %54, %46
  %62 = phi ptr [ %50, %54 ], [ %60, %59 ], [ %50, %46 ]
  %63 = getelementptr inbounds %struct.regexp, ptr %62, i64 0, i32 7
  %64 = load i32, ptr %63, align 8, !tbaa !50
  %65 = and i32 %64, 33554432
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %77, label %67

67:                                               ; preds = %61
  %68 = getelementptr inbounds %struct.regexp, ptr %62, i64 0, i32 18
  %69 = load ptr, ptr %68, align 8, !tbaa !58
  tail call void @Perl_safesysfree(ptr noundef %69) #17
  %70 = load ptr, ptr %49, align 8, !tbaa !17
  %71 = getelementptr inbounds %struct.regexp, ptr %70, i64 0, i32 7
  %72 = load i32, ptr %71, align 8, !tbaa !50
  %73 = and i32 %72, -33554433
  store i32 %73, ptr %71, align 8, !tbaa !50
  %74 = load ptr, ptr %49, align 8, !tbaa !17
  %75 = getelementptr inbounds %struct.regexp, ptr %74, i64 0, i32 7
  %76 = load i32, ptr %75, align 8, !tbaa !50
  br label %77

77:                                               ; preds = %67, %61
  %78 = phi i32 [ %76, %67 ], [ %64, %61 ]
  %79 = phi ptr [ %74, %67 ], [ %62, %61 ]
  %80 = load i64, ptr %48, align 8, !tbaa !59
  %81 = icmp eq i64 %80, 0
  %82 = getelementptr inbounds %struct.regexp, ptr %79, i64 0, i32 7
  %83 = and i32 %78, -33554433
  %84 = select i1 %81, i32 0, i32 33554432
  %85 = or i32 %83, %84
  store i32 %85, ptr %82, align 8, !tbaa !50
  %86 = getelementptr inbounds i64, ptr %48, i64 1
  store i64 0, ptr %48, align 8, !tbaa !59
  %87 = getelementptr inbounds i64, ptr %48, i64 2
  %88 = load i64, ptr %86, align 8, !tbaa !59
  %89 = trunc i64 %88 to i32
  %90 = load ptr, ptr %49, align 8, !tbaa !17
  %91 = getelementptr inbounds %struct.regexp, ptr %90, i64 0, i32 12
  store i32 %89, ptr %91, align 8, !tbaa !60
  %92 = load ptr, ptr %49, align 8, !tbaa !17
  %93 = getelementptr inbounds %struct.regexp, ptr %92, i64 0, i32 19
  %94 = load ptr, ptr %93, align 8, !tbaa !57
  %95 = icmp eq ptr %94, null
  br i1 %95, label %103, label %96

96:                                               ; preds = %77
  %97 = getelementptr inbounds %struct.sv, ptr %94, i64 0, i32 1
  %98 = load i32, ptr %97, align 8, !tbaa !41
  %99 = icmp ugt i32 %98, 1
  br i1 %99, label %100, label %102

100:                                              ; preds = %96
  %101 = add i32 %98, -1
  store i32 %101, ptr %97, align 8, !tbaa !41
  br label %103

102:                                              ; preds = %96
  tail call void @Perl_sv_free2(ptr noundef nonnull %94, i32 noundef %98) #17
  br label %103

103:                                              ; preds = %102, %100, %77
  %104 = load i64, ptr %87, align 8, !tbaa !59
  %105 = inttoptr i64 %104 to ptr
  %106 = load ptr, ptr %49, align 8, !tbaa !17
  %107 = getelementptr inbounds %struct.regexp, ptr %106, i64 0, i32 19
  store ptr %105, ptr %107, align 8, !tbaa !57
  %108 = getelementptr inbounds i64, ptr %48, i64 3
  store i64 0, ptr %87, align 8, !tbaa !59
  %109 = getelementptr inbounds i64, ptr %48, i64 4
  %110 = load i64, ptr %108, align 8, !tbaa !59
  %111 = inttoptr i64 %110 to ptr
  %112 = load ptr, ptr %49, align 8, !tbaa !17
  %113 = getelementptr inbounds %struct.regexp, ptr %112, i64 0, i32 18
  store ptr %111, ptr %113, align 8, !tbaa !58
  %114 = getelementptr inbounds i64, ptr %48, i64 5
  %115 = load i64, ptr %109, align 8, !tbaa !59
  %116 = shl i64 %115, 32
  %117 = ashr exact i64 %116, 32
  %118 = load ptr, ptr %49, align 8, !tbaa !17
  %119 = getelementptr inbounds %struct.regexp, ptr %118, i64 0, i32 20
  store i64 %117, ptr %119, align 8, !tbaa !61
  %120 = getelementptr inbounds i64, ptr %48, i64 6
  %121 = load i64, ptr %114, align 8, !tbaa !59
  %122 = shl i64 %121, 32
  %123 = ashr exact i64 %122, 32
  %124 = load ptr, ptr %49, align 8, !tbaa !17
  %125 = getelementptr inbounds %struct.regexp, ptr %124, i64 0, i32 21
  store i64 %123, ptr %125, align 8, !tbaa !62
  %126 = getelementptr inbounds i64, ptr %48, i64 7
  %127 = load i64, ptr %120, align 8, !tbaa !59
  %128 = shl i64 %127, 32
  %129 = ashr exact i64 %128, 32
  %130 = load ptr, ptr %49, align 8, !tbaa !17
  %131 = getelementptr inbounds %struct.regexp, ptr %130, i64 0, i32 22
  store i64 %129, ptr %131, align 8, !tbaa !63
  %132 = load ptr, ptr %49, align 8, !tbaa !17
  br label %133

133:                                              ; preds = %133, %103
  %134 = phi ptr [ %132, %103 ], [ %154, %133 ]
  %135 = phi i32 [ 0, %103 ], [ %153, %133 ]
  %136 = phi ptr [ %126, %103 ], [ %145, %133 ]
  %137 = getelementptr inbounds i64, ptr %136, i64 1
  %138 = load i64, ptr %136, align 8, !tbaa !59
  %139 = shl i64 %138, 32
  %140 = ashr exact i64 %139, 32
  %141 = getelementptr inbounds %struct.regexp, ptr %134, i64 0, i32 17
  %142 = load ptr, ptr %141, align 8, !tbaa !64
  %143 = zext i32 %135 to i64
  %144 = getelementptr inbounds %struct.regexp_paren_pair, ptr %142, i64 %143
  store i64 %140, ptr %144, align 8, !tbaa !65
  %145 = getelementptr inbounds i64, ptr %136, i64 2
  %146 = load i64, ptr %137, align 8, !tbaa !59
  %147 = shl i64 %146, 32
  %148 = ashr exact i64 %147, 32
  %149 = load ptr, ptr %49, align 8, !tbaa !17
  %150 = getelementptr inbounds %struct.regexp, ptr %149, i64 0, i32 17
  %151 = load ptr, ptr %150, align 8, !tbaa !64
  %152 = getelementptr inbounds %struct.regexp_paren_pair, ptr %151, i64 %143, i32 1
  store i64 %148, ptr %152, align 8, !tbaa !67
  %153 = add i32 %135, 1
  %154 = load ptr, ptr %49, align 8, !tbaa !17
  %155 = getelementptr inbounds %struct.regexp, ptr %154, i64 0, i32 12
  %156 = load i32, ptr %155, align 8, !tbaa !60
  %157 = icmp ugt i32 %153, %156
  br i1 %157, label %158, label %133, !llvm.loop !68

158:                                              ; preds = %133
  %159 = getelementptr inbounds %struct.subst, ptr %8, i64 0, i32 4
  %160 = load i64, ptr %159, align 8, !tbaa !17
  %161 = add nsw i64 %160, 1
  store i64 %161, ptr %159, align 8, !tbaa !17
  %162 = icmp eq i64 %160, 0
  br i1 %162, label %433, label %163

163:                                              ; preds = %158
  %164 = getelementptr inbounds %struct.subst, ptr %8, i64 0, i32 5
  %165 = load i64, ptr %164, align 8, !tbaa !17
  %166 = icmp slt i64 %160, %165
  br i1 %166, label %169, label %167

167:                                              ; preds = %163
  %168 = tail call ptr (ptr, ...) @Perl_die(ptr noundef nonnull @.str) #17
  br label %627

169:                                              ; preds = %163
  %170 = load ptr, ptr %1, align 8, !tbaa !6
  %171 = getelementptr inbounds %struct.sv, ptr %170, i64 0, i32 2
  %172 = load i32, ptr %171, align 4, !tbaa !49
  %173 = and i32 %172, 2097152
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %180, label %175

175:                                              ; preds = %169
  %176 = tail call i32 @Perl_mg_get(ptr noundef nonnull %170) #17
  %177 = load ptr, ptr %1, align 8, !tbaa !6
  %178 = getelementptr inbounds %struct.sv, ptr %177, i64 0, i32 2
  %179 = load i32, ptr %178, align 4, !tbaa !49
  br label %180

180:                                              ; preds = %169, %175
  %181 = phi i32 [ %172, %169 ], [ %179, %175 ]
  %182 = phi ptr [ %170, %169 ], [ %177, %175 ]
  %183 = and i32 %181, 14680064
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %191, label %185

185:                                              ; preds = %180
  %186 = tail call zeroext i1 @Perl_sv_tainted(ptr noundef nonnull %182) #17
  br i1 %186, label %187, label %191

187:                                              ; preds = %185
  %188 = getelementptr inbounds %struct.subst, ptr %8, i64 0, i32 2
  %189 = load i16, ptr %188, align 2, !tbaa !17
  %190 = or i16 %189, 4
  store i16 %190, ptr %188, align 2, !tbaa !17
  br label %191

191:                                              ; preds = %187, %185, %180
  %192 = getelementptr inbounds ptr, ptr %1, i64 -1
  %193 = load ptr, ptr %1, align 8, !tbaa !6
  tail call void @Perl_sv_catsv_flags(ptr noundef %13, ptr noundef %193, i32 noundef 0) #17
  %194 = load i8, ptr %8, align 8, !tbaa !17
  %195 = and i8 %194, 16
  %196 = icmp ne i8 %195, 0
  %197 = icmp ult ptr %15, %19
  %198 = select i1 %196, i1 true, i1 %197
  br i1 %198, label %213, label %199

199:                                              ; preds = %191
  %200 = load ptr, ptr %49, align 8, !tbaa !17
  %201 = getelementptr inbounds %struct.regexp, ptr %200, i64 0, i32 4
  %202 = load ptr, ptr %201, align 8, !tbaa !34
  %203 = getelementptr inbounds %struct.regexp_engine, ptr %202, i64 0, i32 1
  %204 = load ptr, ptr %203, align 8, !tbaa !69
  %205 = getelementptr inbounds %struct.subst, ptr %8, i64 0, i32 11
  %206 = load ptr, ptr %205, align 8, !tbaa !17
  %207 = icmp eq ptr %15, %17
  %208 = zext i1 %207 to i64
  %209 = getelementptr inbounds %struct.subst, ptr %8, i64 0, i32 8
  %210 = load ptr, ptr %209, align 8, !tbaa !17
  %211 = tail call i32 %204(ptr noundef nonnull %21, ptr noundef %15, ptr noundef %206, ptr noundef %19, i64 noundef %208, ptr noundef %210, ptr noundef null, i32 noundef 152) #17
  %212 = icmp eq i32 %211, 0
  br i1 %212, label %213, label %432

213:                                              ; preds = %199, %191
  %214 = getelementptr inbounds %struct.subst, ptr %8, i64 0, i32 8
  %215 = load ptr, ptr %214, align 8, !tbaa !17
  %216 = getelementptr inbounds %struct.subst, ptr %8, i64 0, i32 11
  %217 = load ptr, ptr %216, align 8, !tbaa !17
  %218 = icmp ugt ptr %217, %15
  br i1 %218, label %219, label %248

219:                                              ; preds = %213
  %220 = getelementptr inbounds %struct.sv, ptr %13, i64 0, i32 2
  %221 = load i32, ptr %220, align 4, !tbaa !49
  %222 = and i32 %221, 536870912
  %223 = icmp eq i32 %222, 0
  br i1 %223, label %244, label %224

224:                                              ; preds = %219
  %225 = load ptr, ptr @PL_curcop, align 8, !tbaa !6
  %226 = getelementptr inbounds %struct.cop, ptr %225, i64 0, i32 10
  %227 = load i32, ptr %226, align 8, !tbaa !70
  %228 = and i32 %227, 8
  %229 = icmp eq i32 %228, 0
  br i1 %229, label %230, label %244

230:                                              ; preds = %224
  %231 = getelementptr inbounds %struct.sv, ptr %215, i64 0, i32 2
  %232 = load i32, ptr %231, align 4, !tbaa !49
  %233 = and i32 %232, 536870912
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %235, label %244

235:                                              ; preds = %230
  %236 = ptrtoint ptr %217 to i64
  %237 = ptrtoint ptr %15 to i64
  %238 = sub i64 %236, %237
  %239 = tail call ptr @Perl_newSVpvn_flags(ptr noundef %15, i64 noundef %238, i32 noundef 524288) #17
  %240 = getelementptr inbounds %struct.sv, ptr %239, i64 0, i32 2
  %241 = load i32, ptr %240, align 4, !tbaa !49
  %242 = and i32 %241, -536870913
  store i32 %242, ptr %240, align 4, !tbaa !49
  %243 = tail call i64 @Perl_sv_utf8_upgrade_flags_grow(ptr noundef %239, i32 noundef 2, i64 noundef 0) #17
  tail call void @Perl_sv_catsv_flags(ptr noundef nonnull %13, ptr noundef %239, i32 noundef 0) #17
  br label %248

244:                                              ; preds = %230, %224, %219
  %245 = ptrtoint ptr %217 to i64
  %246 = ptrtoint ptr %15 to i64
  %247 = sub i64 %245, %246
  tail call void @Perl_sv_catpvn_flags(ptr noundef nonnull %13, ptr noundef %15, i64 noundef %247, i32 noundef 0) #17
  br label %248

248:                                              ; preds = %235, %244, %213
  %249 = load ptr, ptr %49, align 8, !tbaa !17
  %250 = getelementptr inbounds %struct.regexp, ptr %249, i64 0, i32 7
  %251 = load i32, ptr %250, align 8, !tbaa !50
  %252 = and i32 %251, 67108864
  %253 = icmp eq i32 %252, 0
  br i1 %253, label %258, label %254

254:                                              ; preds = %248
  %255 = getelementptr inbounds %struct.subst, ptr %8, i64 0, i32 2
  %256 = load i16, ptr %255, align 2, !tbaa !17
  %257 = or i16 %256, 2
  store i16 %257, ptr %255, align 2, !tbaa !17
  br label %258

258:                                              ; preds = %254, %248
  %259 = getelementptr inbounds %struct.pmop, ptr %11, i64 0, i32 10
  %260 = load i32, ptr %259, align 8, !tbaa !39
  %261 = and i32 %260, 134217728
  %262 = icmp eq i32 %261, 0
  br i1 %262, label %264, label %263

263:                                              ; preds = %258
  store ptr %13, ptr %1, align 8, !tbaa !6
  br label %333

264:                                              ; preds = %258
  %265 = getelementptr inbounds %struct.sv, ptr %215, i64 0, i32 2
  %266 = load i32, ptr %265, align 4, !tbaa !49
  %267 = and i32 %266, 427886592
  %268 = icmp eq i32 %267, 0
  br i1 %268, label %271, label %269

269:                                              ; preds = %264
  tail call void @Perl_sv_force_normal_flags(ptr noundef nonnull %215, i32 noundef 4) #17
  %270 = load i32, ptr %265, align 4, !tbaa !49
  br label %271

271:                                              ; preds = %269, %264
  %272 = phi i32 [ %270, %269 ], [ %266, %264 ]
  %273 = and i32 %272, 255
  %274 = icmp eq i32 %273, 9
  br i1 %274, label %275, label %276

275:                                              ; preds = %271
  tail call void @Perl_croak_no_modify() #17
  br label %276

276:                                              ; preds = %271, %275
  %277 = load ptr, ptr %215, align 8, !tbaa !72
  %278 = getelementptr inbounds %struct.xpv, ptr %277, i64 0, i32 3
  %279 = load i64, ptr %278, align 8, !tbaa !17
  %280 = icmp eq i64 %279, 0
  br i1 %280, label %303, label %281

281:                                              ; preds = %276
  %282 = load i32, ptr %265, align 4, !tbaa !49
  %283 = and i32 %282, 33554432
  %284 = icmp eq i32 %283, 0
  %285 = getelementptr inbounds %struct.sv, ptr %215, i64 0, i32 3
  %286 = load ptr, ptr %285, align 8, !tbaa !17
  br i1 %284, label %300, label %287

287:                                              ; preds = %281
  %288 = getelementptr inbounds i8, ptr %286, i64 -1
  %289 = load i8, ptr %288, align 1, !tbaa !17
  %290 = zext i8 %289 to i64
  %291 = icmp eq i8 %289, 0
  br i1 %291, label %292, label %295

292:                                              ; preds = %287
  %293 = getelementptr inbounds i8, ptr %286, i64 -9
  %294 = load i64, ptr %293, align 1
  br label %295

295:                                              ; preds = %292, %287
  %296 = phi i64 [ %290, %287 ], [ %294, %292 ]
  %297 = sub i64 0, %296
  %298 = getelementptr inbounds i8, ptr %286, i64 %297
  store ptr %298, ptr %285, align 8, !tbaa !17
  %299 = and i32 %282, -33554433
  store i32 %299, ptr %265, align 4, !tbaa !49
  br label %300

300:                                              ; preds = %281, %295
  %301 = phi ptr [ %298, %295 ], [ %286, %281 ]
  tail call void @Perl_safesysfree(ptr noundef %301) #17
  %302 = load ptr, ptr %215, align 8, !tbaa !72
  br label %303

303:                                              ; preds = %276, %300
  %304 = phi ptr [ %277, %276 ], [ %302, %300 ]
  %305 = getelementptr inbounds %struct.sv, ptr %13, i64 0, i32 3
  %306 = load ptr, ptr %305, align 8, !tbaa !17
  %307 = getelementptr inbounds %struct.sv, ptr %215, i64 0, i32 3
  store ptr %306, ptr %307, align 8, !tbaa !17
  %308 = load ptr, ptr %13, align 8, !tbaa !72
  %309 = getelementptr inbounds %struct.xpv, ptr %308, i64 0, i32 2
  %310 = load i64, ptr %309, align 8, !tbaa !53
  %311 = getelementptr inbounds %struct.xpv, ptr %304, i64 0, i32 2
  store i64 %310, ptr %311, align 8, !tbaa !53
  %312 = getelementptr inbounds %struct.xpv, ptr %308, i64 0, i32 3
  %313 = load i64, ptr %312, align 8, !tbaa !17
  %314 = getelementptr inbounds %struct.xpv, ptr %304, i64 0, i32 3
  store i64 %313, ptr %314, align 8, !tbaa !17
  %315 = getelementptr inbounds %struct.sv, ptr %13, i64 0, i32 2
  %316 = load i32, ptr %315, align 4, !tbaa !49
  %317 = and i32 %316, 536870912
  %318 = icmp eq i32 %317, 0
  br i1 %318, label %328, label %319

319:                                              ; preds = %303
  %320 = load ptr, ptr @PL_curcop, align 8, !tbaa !6
  %321 = getelementptr inbounds %struct.cop, ptr %320, i64 0, i32 10
  %322 = load i32, ptr %321, align 8, !tbaa !70
  %323 = and i32 %322, 8
  %324 = icmp eq i32 %323, 0
  br i1 %324, label %325, label %328

325:                                              ; preds = %319
  %326 = load i32, ptr %265, align 4, !tbaa !49
  %327 = or i32 %326, 536870912
  store i32 %327, ptr %265, align 4, !tbaa !49
  br label %328

328:                                              ; preds = %303, %319, %325
  store ptr null, ptr %305, align 8, !tbaa !17
  store i8 0, ptr @PL_tainted, align 1, !tbaa !26
  %329 = tail call ptr @Perl_sv_newmortal() #17
  store ptr %329, ptr %1, align 8, !tbaa !6
  tail call void @Perl_sv_setiv(ptr noundef %329, i64 noundef %160) #17
  %330 = load i32, ptr %265, align 4, !tbaa !49
  %331 = and i32 %330, 2147418367
  %332 = or i32 %331, 17408
  store i32 %332, ptr %265, align 4, !tbaa !49
  br label %333

333:                                              ; preds = %328, %263
  %334 = phi ptr [ %13, %263 ], [ %215, %328 ]
  %335 = load i8, ptr @PL_tainting, align 1, !range !44, !noundef !45
  %336 = icmp eq i8 %335, 0
  br i1 %336, label %374, label %337

337:                                              ; preds = %333
  %338 = getelementptr inbounds %struct.subst, ptr %8, i64 0, i32 2
  %339 = load i16, ptr %338, align 2, !tbaa !17
  %340 = zext i16 %339 to i32
  %341 = and i32 %340, 2
  %342 = icmp ne i32 %341, 0
  %343 = and i32 %340, 9
  %344 = icmp eq i32 %343, 9
  %345 = or i1 %342, %344
  br i1 %345, label %346, label %353

346:                                              ; preds = %337
  %347 = load ptr, ptr %49, align 8, !tbaa !17
  %348 = getelementptr inbounds %struct.regexp, ptr %347, i64 0, i32 7
  %349 = load i32, ptr %348, align 8, !tbaa !50
  %350 = or i32 %349, 67108864
  store i32 %350, ptr %348, align 8, !tbaa !50
  %351 = load i16, ptr %338, align 2, !tbaa !17
  %352 = zext i16 %351 to i32
  br label %353

353:                                              ; preds = %337, %346
  %354 = phi i32 [ %340, %337 ], [ %352, %346 ]
  %355 = phi i16 [ %339, %337 ], [ %351, %346 ]
  %356 = and i32 %354, 16
  %357 = icmp ne i32 %356, 0
  %358 = and i32 %354, 3
  %359 = icmp eq i32 %358, 0
  %360 = or i1 %357, %359
  br i1 %360, label %366, label %361

361:                                              ; preds = %353
  %362 = load ptr, ptr %1, align 8, !tbaa !6
  tail call void @Perl_sv_magic(ptr noundef %362, ptr noundef null, i32 noundef 116, ptr noundef null, i32 noundef 0) #17
  %363 = load i16, ptr %338, align 2, !tbaa !17
  %364 = load i8, ptr @PL_tainting, align 1, !tbaa !26, !range !44
  %365 = icmp ne i8 %364, 0
  br label %366

366:                                              ; preds = %361, %353
  %367 = phi i1 [ %365, %361 ], [ true, %353 ]
  %368 = phi i16 [ %363, %361 ], [ %355, %353 ]
  %369 = and i16 %368, 7
  %370 = icmp ne i16 %369, 0
  %371 = zext i1 %370 to i8
  store i8 %371, ptr @PL_tainted, align 1, !tbaa !26
  %372 = select i1 %367, i1 %370, i1 false
  br i1 %372, label %373, label %374

373:                                              ; preds = %366
  tail call void @Perl_sv_magic(ptr noundef %334, ptr noundef null, i32 noundef 116, ptr noundef null, i32 noundef 0) #17
  br label %374

374:                                              ; preds = %366, %333, %373
  %375 = getelementptr inbounds %struct.sv, ptr %334, i64 0, i32 2
  %376 = load i32, ptr %375, align 4, !tbaa !49
  %377 = and i32 %376, 4194304
  %378 = icmp eq i32 %377, 0
  br i1 %378, label %381, label %379

379:                                              ; preds = %374
  %380 = tail call i32 @Perl_mg_set(ptr noundef nonnull %334) #17
  br label %381

381:                                              ; preds = %374, %379
  store i8 0, ptr @PL_tainted, align 1, !tbaa !26
  %382 = load i32, ptr @PL_savestack_ix, align 4, !tbaa !31
  %383 = getelementptr inbounds %struct.subst, ptr %8, i64 0, i32 3
  %384 = load i32, ptr %383, align 4, !tbaa !17
  %385 = icmp sgt i32 %382, %384
  br i1 %385, label %386, label %387

386:                                              ; preds = %381
  tail call void @Perl_leave_scope(i32 noundef %384) #17
  br label %387

387:                                              ; preds = %386, %381
  %388 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %389 = getelementptr inbounds %struct.stackinfo, ptr %388, i64 0, i32 1
  %390 = load ptr, ptr %389, align 8, !tbaa !14
  %391 = getelementptr inbounds %struct.stackinfo, ptr %388, i64 0, i32 4
  %392 = load i32, ptr %391, align 8, !tbaa !16
  %393 = add nsw i32 %392, -1
  store i32 %393, ptr %391, align 8, !tbaa !16
  %394 = sext i32 %392 to i64
  %395 = getelementptr inbounds %struct.context, ptr %390, i64 %394
  %396 = getelementptr inbounds %struct.subst, ptr %395, i64 0, i32 12
  %397 = load ptr, ptr %396, align 8, !tbaa !6
  %398 = icmp eq ptr %397, null
  br i1 %398, label %414, label %399

399:                                              ; preds = %387
  %400 = load i64, ptr %397, align 8, !tbaa !59
  %401 = inttoptr i64 %400 to ptr
  %402 = getelementptr inbounds i64, ptr %397, i64 2
  %403 = load i64, ptr %402, align 8, !tbaa !59
  %404 = inttoptr i64 %403 to ptr
  %405 = icmp eq i64 %403, 0
  br i1 %405, label %413, label %406

406:                                              ; preds = %399
  %407 = getelementptr inbounds %struct.sv, ptr %404, i64 0, i32 1
  %408 = load i32, ptr %407, align 8, !tbaa !41
  %409 = icmp ugt i32 %408, 1
  br i1 %409, label %410, label %412

410:                                              ; preds = %406
  %411 = add i32 %408, -1
  store i32 %411, ptr %407, align 8, !tbaa !41
  br label %413

412:                                              ; preds = %406
  tail call void @Perl_sv_free2(ptr noundef nonnull %404, i32 noundef %408) #17
  br label %413

413:                                              ; preds = %412, %410, %399
  tail call void @Perl_safesysfree(ptr noundef %401) #17
  tail call void @Perl_safesysfree(ptr noundef nonnull %397) #17
  store ptr null, ptr %396, align 8, !tbaa !6
  br label %414

414:                                              ; preds = %387, %413
  %415 = getelementptr inbounds %struct.subst, ptr %395, i64 0, i32 13
  %416 = load ptr, ptr %415, align 8, !tbaa !17
  %417 = icmp eq ptr %416, null
  br i1 %417, label %425, label %418

418:                                              ; preds = %414
  %419 = getelementptr inbounds %struct.sv, ptr %416, i64 0, i32 1
  %420 = load i32, ptr %419, align 8, !tbaa !41
  %421 = icmp ugt i32 %420, 1
  br i1 %421, label %422, label %424

422:                                              ; preds = %418
  %423 = add i32 %420, -1
  store i32 %423, ptr %419, align 8, !tbaa !41
  br label %425

424:                                              ; preds = %418
  tail call void @Perl_sv_free2(ptr noundef nonnull %416, i32 noundef %420) #17
  br label %425

425:                                              ; preds = %414, %422, %424
  %426 = load i32, ptr @PL_sig_pending, align 4, !tbaa !31
  %427 = icmp eq i32 %426, 0
  br i1 %427, label %430, label %428

428:                                              ; preds = %425
  %429 = load ptr, ptr @PL_signalhook, align 8, !tbaa !6
  tail call void %429() #17
  br label %430

430:                                              ; preds = %425, %428
  store ptr %1, ptr @PL_stack_sp, align 8, !tbaa !6
  %431 = load ptr, ptr %11, align 8, !tbaa !73
  br label %627

432:                                              ; preds = %199
  store i64 %161, ptr %159, align 8, !tbaa !17
  br label %433

433:                                              ; preds = %432, %158
  %434 = phi ptr [ %192, %432 ], [ %1, %158 ]
  %435 = load ptr, ptr %49, align 8, !tbaa !17
  %436 = getelementptr inbounds %struct.regexp, ptr %435, i64 0, i32 7
  %437 = load i32, ptr %436, align 8, !tbaa !50
  %438 = and i32 %437, 33554432
  %439 = icmp eq i32 %438, 0
  br i1 %439, label %455, label %440

440:                                              ; preds = %433
  %441 = getelementptr inbounds %struct.regexp, ptr %435, i64 0, i32 18
  %442 = load ptr, ptr %441, align 8, !tbaa !58
  %443 = icmp eq ptr %442, %19
  br i1 %443, label %455, label %444

444:                                              ; preds = %440
  store ptr %442, ptr %18, align 8, !tbaa !17
  %445 = ptrtoint ptr %15 to i64
  %446 = ptrtoint ptr %19 to i64
  %447 = sub i64 %445, %446
  %448 = getelementptr inbounds i8, ptr %442, i64 %447
  %449 = getelementptr inbounds %struct.subst, ptr %8, i64 0, i32 11
  %450 = load ptr, ptr %449, align 8, !tbaa !17
  %451 = ptrtoint ptr %450 to i64
  %452 = sub i64 %451, %445
  %453 = getelementptr inbounds i8, ptr %448, i64 %452
  store ptr %453, ptr %449, align 8, !tbaa !17
  %454 = load ptr, ptr %49, align 8, !tbaa !17
  br label %455

455:                                              ; preds = %444, %440, %433
  %456 = phi ptr [ %454, %444 ], [ %435, %440 ], [ %435, %433 ]
  %457 = phi ptr [ %442, %444 ], [ %19, %440 ], [ %19, %433 ]
  %458 = phi ptr [ %448, %444 ], [ %15, %440 ], [ %15, %433 ]
  %459 = getelementptr inbounds %struct.regexp, ptr %456, i64 0, i32 17
  %460 = load ptr, ptr %459, align 8, !tbaa !64
  %461 = load i64, ptr %460, align 8, !tbaa !65
  %462 = getelementptr inbounds i8, ptr %457, i64 %461
  store ptr %462, ptr %16, align 8, !tbaa !17
  %463 = icmp ugt ptr %462, %458
  br i1 %463, label %464, label %495

464:                                              ; preds = %455
  %465 = getelementptr inbounds %struct.sv, ptr %13, i64 0, i32 2
  %466 = load i32, ptr %465, align 4, !tbaa !49
  %467 = and i32 %466, 536870912
  %468 = icmp eq i32 %467, 0
  br i1 %468, label %491, label %469

469:                                              ; preds = %464
  %470 = load ptr, ptr @PL_curcop, align 8, !tbaa !6
  %471 = getelementptr inbounds %struct.cop, ptr %470, i64 0, i32 10
  %472 = load i32, ptr %471, align 8, !tbaa !70
  %473 = and i32 %472, 8
  %474 = icmp eq i32 %473, 0
  br i1 %474, label %475, label %491

475:                                              ; preds = %469
  %476 = getelementptr inbounds %struct.subst, ptr %8, i64 0, i32 8
  %477 = load ptr, ptr %476, align 8, !tbaa !17
  %478 = getelementptr inbounds %struct.sv, ptr %477, i64 0, i32 2
  %479 = load i32, ptr %478, align 4, !tbaa !49
  %480 = and i32 %479, 536870912
  %481 = icmp eq i32 %480, 0
  br i1 %481, label %482, label %491

482:                                              ; preds = %475
  %483 = ptrtoint ptr %462 to i64
  %484 = ptrtoint ptr %458 to i64
  %485 = sub i64 %483, %484
  %486 = tail call ptr @Perl_newSVpvn_flags(ptr noundef %458, i64 noundef %485, i32 noundef 524288) #17
  %487 = getelementptr inbounds %struct.sv, ptr %486, i64 0, i32 2
  %488 = load i32, ptr %487, align 4, !tbaa !49
  %489 = and i32 %488, -536870913
  store i32 %489, ptr %487, align 4, !tbaa !49
  %490 = tail call i64 @Perl_sv_utf8_upgrade_flags_grow(ptr noundef %486, i32 noundef 2, i64 noundef 0) #17
  tail call void @Perl_sv_catsv_flags(ptr noundef nonnull %13, ptr noundef %486, i32 noundef 0) #17
  br label %495

491:                                              ; preds = %475, %469, %464
  %492 = ptrtoint ptr %462 to i64
  %493 = ptrtoint ptr %458 to i64
  %494 = sub i64 %492, %493
  tail call void @Perl_sv_catpvn_flags(ptr noundef nonnull %13, ptr noundef %458, i64 noundef %494, i32 noundef 0) #17
  br label %495

495:                                              ; preds = %482, %491, %455
  %496 = load ptr, ptr %49, align 8, !tbaa !17
  %497 = getelementptr inbounds %struct.regexp, ptr %496, i64 0, i32 17
  %498 = load ptr, ptr %497, align 8, !tbaa !64
  %499 = getelementptr inbounds %struct.regexp_paren_pair, ptr %498, i64 0, i32 1
  %500 = load i64, ptr %499, align 8, !tbaa !67
  %501 = getelementptr inbounds i8, ptr %457, i64 %500
  store ptr %501, ptr %14, align 8, !tbaa !17
  %502 = getelementptr inbounds %struct.pmop, ptr %11, i64 0, i32 10
  %503 = load i32, ptr %502, align 8, !tbaa !39
  %504 = and i32 %503, 134217728
  %505 = icmp eq i32 %504, 0
  %506 = getelementptr inbounds %struct.subst, ptr %8, i64 0, i32 8
  %507 = select i1 %505, ptr %506, ptr %12
  %508 = load ptr, ptr %507, align 8, !tbaa !17
  %509 = getelementptr inbounds %struct.sv, ptr %508, i64 0, i32 2
  %510 = load i32, ptr %509, align 4, !tbaa !49
  %511 = and i32 %510, 1024
  %512 = icmp eq i32 %511, 0
  br i1 %512, label %513, label %515

513:                                              ; preds = %495
  %514 = tail call ptr @Perl_sv_pvn_force_flags(ptr noundef nonnull %508, ptr noundef null, i32 noundef 0) #17
  br label %515

515:                                              ; preds = %513, %495
  %516 = tail call ptr @Perl_mg_find_mglob(ptr noundef nonnull %508) #17
  %517 = icmp eq ptr %516, null
  br i1 %517, label %518, label %520

518:                                              ; preds = %515
  %519 = tail call ptr @Perl_sv_magicext_mglob(ptr noundef nonnull %508) #17
  br label %520

520:                                              ; preds = %518, %515
  %521 = phi ptr [ %516, %515 ], [ %519, %518 ]
  %522 = load i32, ptr %509, align 4, !tbaa !49
  %523 = and i32 %522, 1024
  %524 = icmp eq i32 %523, 0
  br i1 %524, label %556, label %525

525:                                              ; preds = %520
  %526 = and i32 %522, 2097152
  %527 = icmp eq i32 %526, 0
  br i1 %527, label %551, label %528

528:                                              ; preds = %525
  %529 = load ptr, ptr %508, align 8, !tbaa !72
  %530 = getelementptr inbounds %struct.xpvmg, ptr %529, i64 0, i32 1
  %531 = load ptr, ptr %530, align 8, !tbaa !17
  %532 = icmp eq ptr %531, null
  br i1 %532, label %551, label %533

533:                                              ; preds = %528, %548
  %534 = phi ptr [ %549, %548 ], [ %531, %528 ]
  %535 = getelementptr inbounds %struct.magic, ptr %534, i64 0, i32 3
  %536 = load i8, ptr %535, align 2, !tbaa !74
  %537 = icmp eq i8 %536, 116
  br i1 %537, label %548, label %538

538:                                              ; preds = %533
  %539 = getelementptr inbounds %struct.magic, ptr %534, i64 0, i32 4
  %540 = load i8, ptr %539, align 1, !tbaa !77
  %541 = and i8 %540, 4
  %542 = icmp eq i8 %541, 0
  br i1 %542, label %543, label %548

543:                                              ; preds = %538
  %544 = getelementptr inbounds %struct.magic, ptr %534, i64 0, i32 1
  %545 = load ptr, ptr %544, align 8, !tbaa !78
  %546 = load ptr, ptr %545, align 8, !tbaa !79
  %547 = icmp eq ptr %546, null
  br i1 %547, label %548, label %556

548:                                              ; preds = %543, %538, %533
  %549 = load ptr, ptr %534, align 8, !tbaa !17
  %550 = icmp eq ptr %549, null
  br i1 %550, label %551, label %533, !llvm.loop !81

551:                                              ; preds = %548, %528, %525
  %552 = getelementptr inbounds %struct.magic, ptr %521, i64 0, i32 5
  store i64 %461, ptr %552, align 8, !tbaa !82
  %553 = getelementptr inbounds %struct.magic, ptr %521, i64 0, i32 4
  %554 = load i8, ptr %553, align 1, !tbaa !77
  %555 = or i8 %554, 64
  store i8 %555, ptr %553, align 1, !tbaa !77
  br label %576

556:                                              ; preds = %543, %520
  %557 = and i32 %522, 536870912
  %558 = icmp eq i32 %557, 0
  br i1 %558, label %570, label %559

559:                                              ; preds = %556
  %560 = load ptr, ptr @PL_curcop, align 8, !tbaa !6
  %561 = getelementptr inbounds %struct.cop, ptr %560, i64 0, i32 10
  %562 = load i32, ptr %561, align 8, !tbaa !70
  %563 = and i32 %562, 8
  %564 = icmp eq i32 %563, 0
  br i1 %564, label %565, label %570

565:                                              ; preds = %559
  %566 = getelementptr inbounds %struct.sv, ptr %508, i64 0, i32 3
  %567 = load ptr, ptr %566, align 8, !tbaa !17
  %568 = getelementptr inbounds i8, ptr %567, i64 %461
  %569 = tail call i64 @Perl_utf8_length(ptr noundef %567, ptr noundef %568) #17
  br label %570

570:                                              ; preds = %556, %559, %565
  %571 = phi i64 [ %569, %565 ], [ %461, %559 ], [ %461, %556 ]
  %572 = getelementptr inbounds %struct.magic, ptr %521, i64 0, i32 5
  store i64 %571, ptr %572, align 8, !tbaa !82
  %573 = getelementptr inbounds %struct.magic, ptr %521, i64 0, i32 4
  %574 = load i8, ptr %573, align 1, !tbaa !77
  %575 = and i8 %574, -65
  store i8 %575, ptr %573, align 1, !tbaa !77
  br label %576

576:                                              ; preds = %570, %551
  %577 = icmp eq ptr %21, null
  %578 = or i1 %577, %29
  br i1 %578, label %583, label %579

579:                                              ; preds = %576
  %580 = getelementptr inbounds %struct.sv, ptr %21, i64 0, i32 1
  %581 = load i32, ptr %580, align 8, !tbaa !41
  %582 = add i32 %581, 1
  store i32 %582, ptr %580, align 8, !tbaa !41
  br label %583

583:                                              ; preds = %579, %576
  %584 = load i8, ptr @PL_tainting, align 1, !range !44, !noundef !45
  %585 = icmp eq i8 %584, 0
  br i1 %585, label %624, label %586

586:                                              ; preds = %583
  %587 = load ptr, ptr %49, align 8, !tbaa !17
  %588 = getelementptr inbounds %struct.regexp, ptr %587, i64 0, i32 7
  %589 = load i32, ptr %588, align 8, !tbaa !50
  %590 = and i32 %589, 67108864
  %591 = icmp eq i32 %590, 0
  %592 = getelementptr inbounds %struct.subst, ptr %8, i64 0, i32 2
  %593 = load i16, ptr %592, align 2, !tbaa !17
  br i1 %591, label %596, label %594

594:                                              ; preds = %586
  %595 = or i16 %593, 2
  store i16 %595, ptr %592, align 2, !tbaa !17
  br label %596

596:                                              ; preds = %586, %594
  %597 = phi i16 [ %595, %594 ], [ %593, %586 ]
  %598 = getelementptr inbounds %struct.subst, ptr %8, i64 0, i32 2
  %599 = zext i16 %597 to i32
  %600 = and i32 %599, 2
  %601 = icmp ne i32 %600, 0
  %602 = and i32 %599, 9
  %603 = icmp eq i32 %602, 9
  %604 = or i1 %601, %603
  br i1 %604, label %605, label %610

605:                                              ; preds = %596
  %606 = load ptr, ptr %49, align 8, !tbaa !17
  %607 = getelementptr inbounds %struct.regexp, ptr %606, i64 0, i32 7
  %608 = load i32, ptr %607, align 8, !tbaa !50
  %609 = or i32 %608, 67108864
  store i32 %609, ptr %607, align 8, !tbaa !50
  br label %610

610:                                              ; preds = %596, %605
  %611 = load i64, ptr %159, align 8, !tbaa !17
  %612 = icmp sgt i64 %611, 1
  br i1 %612, label %613, label %623

613:                                              ; preds = %610
  %614 = load i16, ptr %598, align 2, !tbaa !17
  %615 = and i16 %614, 7
  %616 = icmp eq i16 %615, 0
  br i1 %616, label %623, label %617

617:                                              ; preds = %613
  %618 = load i32, ptr %502, align 8, !tbaa !39
  %619 = and i32 %618, 134217728
  %620 = icmp eq i32 %619, 0
  %621 = select i1 %620, ptr %506, ptr %12
  %622 = load ptr, ptr %621, align 8, !tbaa !17
  tail call void @Perl_sv_magic(ptr noundef %622, ptr noundef null, i32 noundef 116, ptr noundef null, i32 noundef 0) #17
  br label %623

623:                                              ; preds = %617, %613, %610
  store i8 0, ptr @PL_tainted, align 1, !tbaa !26
  br label %624

624:                                              ; preds = %623, %583
  tail call void @Perl_rxres_save(ptr noundef nonnull %47, ptr noundef %21)
  store ptr %11, ptr @PL_curpm, align 8, !tbaa !6
  store ptr %434, ptr @PL_stack_sp, align 8, !tbaa !6
  %625 = getelementptr inbounds %struct.pmop, ptr %11, i64 0, i32 12
  %626 = load ptr, ptr %625, align 8, !tbaa !17
  br label %627

627:                                              ; preds = %430, %167, %624
  %628 = phi ptr [ %626, %624 ], [ %431, %430 ], [ %168, %167 ]
  ret ptr %628
}

declare ptr @Perl_die(ptr noundef, ...) local_unnamed_addr #2

declare zeroext i1 @Perl_sv_tainted(ptr noundef) local_unnamed_addr #2

declare void @Perl_sv_catsv_flags(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

declare ptr @Perl_newSVpvn_flags(ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #2

declare void @Perl_sv_setpvn(ptr noundef, ptr noundef, i64 noundef) local_unnamed_addr #2

declare i64 @Perl_sv_utf8_upgrade_flags_grow(ptr noundef, i32 noundef, i64 noundef) local_unnamed_addr #2

declare void @Perl_sv_catpvn_flags(ptr noundef, ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #2

declare void @Perl_sv_force_normal_flags(ptr noundef, i32 noundef) local_unnamed_addr #2

declare void @Perl_croak_no_modify() local_unnamed_addr #2

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #5

declare void @Perl_safesysfree(ptr noundef) local_unnamed_addr #2

declare void @Perl_sv_setiv(ptr noundef, i64 noundef) local_unnamed_addr #2

declare ptr @Perl_sv_newmortal() local_unnamed_addr #2

declare i32 @Perl_mg_set(ptr noundef) local_unnamed_addr #2

declare void @Perl_leave_scope(i32 noundef) local_unnamed_addr #2

declare ptr @Perl_sv_pvn_force_flags(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

declare ptr @Perl_mg_find_mglob(ptr noundef) local_unnamed_addr #2

declare ptr @Perl_sv_magicext_mglob(ptr noundef) local_unnamed_addr #2

declare i64 @Perl_utf8_length(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_rxres_save(ptr nocapture noundef %0, ptr nocapture noundef readonly %1) local_unnamed_addr #0 {
  %3 = load ptr, ptr %0, align 8, !tbaa !6
  %4 = icmp eq ptr %3, null
  br i1 %4, label %14, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds i64, ptr %3, i64 1
  %7 = load i64, ptr %6, align 8, !tbaa !59
  %8 = getelementptr i8, ptr %1, i64 16
  %9 = load ptr, ptr %8, align 8, !tbaa !17
  %10 = getelementptr inbounds %struct.regexp, ptr %9, i64 0, i32 12
  %11 = load i32, ptr %10, align 8, !tbaa !60
  %12 = zext i32 %11 to i64
  %13 = icmp ult i64 %7, %12
  br i1 %13, label %24, label %34

14:                                               ; preds = %2
  %15 = getelementptr i8, ptr %1, i64 16
  %16 = load ptr, ptr %15, align 8, !tbaa !17
  %17 = getelementptr inbounds %struct.regexp, ptr %16, i64 0, i32 12
  %18 = load i32, ptr %17, align 8, !tbaa !60
  %19 = shl i32 %18, 1
  %20 = add i32 %19, 9
  %21 = zext i32 %20 to i64
  %22 = shl nuw nsw i64 %21, 3
  %23 = tail call ptr @Perl_safesysmalloc(i64 noundef %22) #17
  br label %30

24:                                               ; preds = %5
  %25 = shl i32 %11, 1
  %26 = add i32 %25, 9
  %27 = zext i32 %26 to i64
  %28 = shl nuw nsw i64 %27, 3
  %29 = tail call ptr @Perl_safesysrealloc(ptr noundef nonnull %3, i64 noundef %28) #17
  br label %30

30:                                               ; preds = %24, %14
  %31 = phi ptr [ %29, %24 ], [ %23, %14 ]
  store ptr %31, ptr %0, align 8, !tbaa !6
  %32 = getelementptr i8, ptr %1, i64 16
  %33 = load ptr, ptr %32, align 8, !tbaa !17
  br label %34

34:                                               ; preds = %30, %5
  %35 = phi ptr [ %33, %30 ], [ %9, %5 ]
  %36 = phi ptr [ %31, %30 ], [ %3, %5 ]
  %37 = getelementptr i8, ptr %1, i64 16
  %38 = getelementptr inbounds %struct.regexp, ptr %35, i64 0, i32 7
  %39 = load i32, ptr %38, align 8, !tbaa !50
  %40 = and i32 %39, 33554432
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %46, label %42

42:                                               ; preds = %34
  %43 = getelementptr inbounds %struct.regexp, ptr %35, i64 0, i32 18
  %44 = load ptr, ptr %43, align 8, !tbaa !58
  %45 = ptrtoint ptr %44 to i64
  br label %46

46:                                               ; preds = %34, %42
  %47 = phi i64 [ %45, %42 ], [ 0, %34 ]
  %48 = getelementptr inbounds i64, ptr %36, i64 1
  store i64 %47, ptr %36, align 8, !tbaa !59
  %49 = load ptr, ptr %37, align 8, !tbaa !17
  %50 = getelementptr inbounds %struct.regexp, ptr %49, i64 0, i32 7
  %51 = load i32, ptr %50, align 8, !tbaa !50
  %52 = and i32 %51, -33554433
  store i32 %52, ptr %50, align 8, !tbaa !50
  %53 = load ptr, ptr %37, align 8, !tbaa !17
  %54 = getelementptr inbounds %struct.regexp, ptr %53, i64 0, i32 12
  %55 = load i32, ptr %54, align 8, !tbaa !60
  %56 = zext i32 %55 to i64
  %57 = getelementptr inbounds i64, ptr %36, i64 2
  store i64 %56, ptr %48, align 8, !tbaa !59
  %58 = load ptr, ptr %37, align 8, !tbaa !17
  %59 = getelementptr inbounds %struct.regexp, ptr %58, i64 0, i32 19
  %60 = load ptr, ptr %59, align 8, !tbaa !57
  %61 = ptrtoint ptr %60 to i64
  %62 = getelementptr inbounds i64, ptr %36, i64 3
  store i64 %61, ptr %57, align 8, !tbaa !59
  %63 = load ptr, ptr %37, align 8, !tbaa !17
  %64 = getelementptr inbounds %struct.regexp, ptr %63, i64 0, i32 19
  store ptr null, ptr %64, align 8, !tbaa !57
  %65 = load ptr, ptr %37, align 8, !tbaa !17
  %66 = getelementptr inbounds %struct.regexp, ptr %65, i64 0, i32 18
  %67 = load ptr, ptr %66, align 8, !tbaa !58
  %68 = ptrtoint ptr %67 to i64
  %69 = getelementptr inbounds i64, ptr %36, i64 4
  store i64 %68, ptr %62, align 8, !tbaa !59
  %70 = load ptr, ptr %37, align 8, !tbaa !17
  %71 = getelementptr inbounds %struct.regexp, ptr %70, i64 0, i32 20
  %72 = load i64, ptr %71, align 8, !tbaa !61
  %73 = getelementptr inbounds i64, ptr %36, i64 5
  store i64 %72, ptr %69, align 8, !tbaa !59
  %74 = load ptr, ptr %37, align 8, !tbaa !17
  %75 = getelementptr inbounds %struct.regexp, ptr %74, i64 0, i32 21
  %76 = load i64, ptr %75, align 8, !tbaa !62
  %77 = getelementptr inbounds i64, ptr %36, i64 6
  store i64 %76, ptr %73, align 8, !tbaa !59
  %78 = load ptr, ptr %37, align 8, !tbaa !17
  %79 = getelementptr inbounds %struct.regexp, ptr %78, i64 0, i32 22
  %80 = load i64, ptr %79, align 8, !tbaa !63
  %81 = getelementptr inbounds i64, ptr %36, i64 7
  store i64 %80, ptr %77, align 8, !tbaa !59
  %82 = load ptr, ptr %37, align 8, !tbaa !17
  br label %83

83:                                               ; preds = %46, %83
  %84 = phi ptr [ %82, %46 ], [ %100, %83 ]
  %85 = phi i32 [ 0, %46 ], [ %99, %83 ]
  %86 = phi ptr [ %81, %46 ], [ %98, %83 ]
  %87 = getelementptr inbounds %struct.regexp, ptr %84, i64 0, i32 17
  %88 = load ptr, ptr %87, align 8, !tbaa !64
  %89 = zext i32 %85 to i64
  %90 = getelementptr inbounds %struct.regexp_paren_pair, ptr %88, i64 %89
  %91 = load i64, ptr %90, align 8, !tbaa !65
  %92 = getelementptr inbounds i64, ptr %86, i64 1
  store i64 %91, ptr %86, align 8, !tbaa !59
  %93 = load ptr, ptr %37, align 8, !tbaa !17
  %94 = getelementptr inbounds %struct.regexp, ptr %93, i64 0, i32 17
  %95 = load ptr, ptr %94, align 8, !tbaa !64
  %96 = getelementptr inbounds %struct.regexp_paren_pair, ptr %95, i64 %89, i32 1
  %97 = load i64, ptr %96, align 8, !tbaa !67
  %98 = getelementptr inbounds i64, ptr %86, i64 2
  store i64 %97, ptr %92, align 8, !tbaa !59
  %99 = add i32 %85, 1
  %100 = load ptr, ptr %37, align 8, !tbaa !17
  %101 = getelementptr inbounds %struct.regexp, ptr %100, i64 0, i32 12
  %102 = load i32, ptr %101, align 8, !tbaa !60
  %103 = icmp ugt i32 %99, %102
  br i1 %103, label %104, label %83, !llvm.loop !83

104:                                              ; preds = %83
  ret void
}

declare ptr @Perl_safesysmalloc(i64 noundef) local_unnamed_addr #2

declare ptr @Perl_safesysrealloc(ptr noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_formline() local_unnamed_addr #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !6
  %5 = load ptr, ptr @PL_stack_base, align 8, !tbaa !6
  %6 = load ptr, ptr @PL_markstack_ptr, align 8, !tbaa !6
  %7 = getelementptr inbounds i32, ptr %6, i64 -1
  store ptr %7, ptr @PL_markstack_ptr, align 8, !tbaa !6
  %8 = load i32, ptr %6, align 4, !tbaa !31
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds ptr, ptr %5, i64 %9
  %11 = getelementptr inbounds ptr, ptr %10, i64 1
  %12 = load ptr, ptr %11, align 8, !tbaa !6
  %13 = load ptr, ptr @PL_chopset, align 8, !tbaa !6
  %14 = tail call ptr @strchr(ptr noundef nonnull dereferenceable(1) %13, i32 noundef 32) #18
  %15 = icmp ne ptr %14, null
  %16 = zext i1 %15 to i8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #17
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #17
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %1) #17
  %17 = getelementptr inbounds %struct.sv, ptr %12, i64 0, i32 2
  %18 = load i32, ptr %17, align 4, !tbaa !49
  %19 = and i32 %18, 2098176
  %20 = icmp eq i32 %19, 1024
  br i1 %20, label %21, label %27

21:                                               ; preds = %0
  %22 = load ptr, ptr %12, align 8, !tbaa !72
  %23 = getelementptr inbounds %struct.xpv, ptr %22, i64 0, i32 2
  %24 = load i64, ptr %23, align 8, !tbaa !53
  store i64 %24, ptr %1, align 8, !tbaa !59
  %25 = getelementptr inbounds %struct.sv, ptr %12, i64 0, i32 3
  %26 = load ptr, ptr %25, align 8, !tbaa !17
  br label %30

27:                                               ; preds = %0
  %28 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %12, ptr noundef nonnull %1, i32 noundef 2) #17
  %29 = load i64, ptr %1, align 8, !tbaa !59
  br label %30

30:                                               ; preds = %27, %21
  %31 = phi i64 [ %29, %27 ], [ %24, %21 ]
  %32 = phi ptr [ %28, %27 ], [ %26, %21 ]
  %33 = icmp eq i64 %31, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %30
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.7) #17
  br label %35

35:                                               ; preds = %34, %30
  %36 = load i32, ptr %17, align 4, !tbaa !49
  %37 = and i32 %36, 255
  %38 = icmp ugt i32 %37, 6
  br i1 %38, label %40, label %39

39:                                               ; preds = %35
  call void @Perl_sv_upgrade(ptr noundef nonnull %12, i32 noundef 7) #17
  br label %75

40:                                               ; preds = %35
  %41 = call ptr @Perl_mg_find(ptr noundef nonnull %12, i32 noundef 102) #17
  %42 = icmp eq ptr %41, null
  br i1 %42, label %75, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %struct.magic, ptr %41, i64 0, i32 6
  %45 = load ptr, ptr %44, align 8, !tbaa !84
  %46 = getelementptr inbounds %struct.sv, ptr %45, i64 0, i32 2
  %47 = load i32, ptr %46, align 4, !tbaa !49
  %48 = load i32, ptr %17, align 4, !tbaa !49
  %49 = xor i32 %48, %47
  %50 = and i32 %49, 536870912
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %65

52:                                               ; preds = %43
  %53 = load i64, ptr %1, align 8, !tbaa !59
  %54 = load ptr, ptr %45, align 8, !tbaa !72
  %55 = getelementptr inbounds %struct.xpv, ptr %54, i64 0, i32 2
  %56 = load i64, ptr %55, align 8, !tbaa !53
  %57 = icmp eq i64 %53, %56
  br i1 %57, label %58, label %65

58:                                               ; preds = %52
  %59 = getelementptr inbounds %struct.sv, ptr %45, i64 0, i32 3
  %60 = load ptr, ptr %59, align 8, !tbaa !17
  %61 = getelementptr inbounds %struct.sv, ptr %12, i64 0, i32 3
  %62 = load ptr, ptr %61, align 8, !tbaa !17
  %63 = call i32 @strncmp(ptr noundef %60, ptr noundef %62, i64 noundef %53) #18
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %474, label %65

65:                                               ; preds = %58, %52, %43
  %66 = getelementptr inbounds %struct.magic, ptr %41, i64 0, i32 7
  %67 = load ptr, ptr %66, align 8, !tbaa !85
  call void @Perl_safesysfree(ptr noundef %67) #17
  store ptr null, ptr %66, align 8, !tbaa !85
  %68 = getelementptr inbounds %struct.sv, ptr %45, i64 0, i32 1
  %69 = load i32, ptr %68, align 8, !tbaa !41
  %70 = icmp ugt i32 %69, 1
  br i1 %70, label %71, label %73

71:                                               ; preds = %65
  %72 = add i32 %69, -1
  store i32 %72, ptr %68, align 8, !tbaa !41
  br label %74

73:                                               ; preds = %65
  call void @Perl_sv_free2(ptr noundef nonnull %45, i32 noundef %69) #17
  br label %74

74:                                               ; preds = %73, %71
  store ptr null, ptr %44, align 8, !tbaa !84
  br label %77

75:                                               ; preds = %40, %39
  %76 = call ptr @Perl_sv_magicext(ptr noundef nonnull %12, ptr noundef null, i32 noundef 102, ptr noundef nonnull getelementptr inbounds ([31 x %struct.mgvtbl], ptr @PL_magic_vtables, i64 0, i64 23), ptr noundef null, i32 noundef 0) #17
  br label %77

77:                                               ; preds = %75, %74
  %78 = phi ptr [ %76, %75 ], [ %41, %74 ]
  %79 = load i64, ptr %1, align 8, !tbaa !59
  %80 = load i32, ptr %17, align 4, !tbaa !49
  %81 = and i32 %80, 536870912
  %82 = call ptr @Perl_newSVpvn_flags(ptr noundef %32, i64 noundef %79, i32 noundef %81) #17
  %83 = getelementptr inbounds %struct.sv, ptr %82, i64 0, i32 2
  %84 = load i32, ptr %83, align 4, !tbaa !49
  %85 = and i32 %84, 2098176
  %86 = icmp eq i32 %85, 1024
  br i1 %86, label %87, label %93

87:                                               ; preds = %77
  %88 = load ptr, ptr %82, align 8, !tbaa !72
  %89 = getelementptr inbounds %struct.xpv, ptr %88, i64 0, i32 2
  %90 = load i64, ptr %89, align 8, !tbaa !53
  store i64 %90, ptr %1, align 8, !tbaa !59
  %91 = getelementptr inbounds %struct.sv, ptr %82, i64 0, i32 3
  %92 = load ptr, ptr %91, align 8, !tbaa !17
  br label %96

93:                                               ; preds = %77
  %94 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %82, ptr noundef nonnull %1, i32 noundef 2) #17
  %95 = load i64, ptr %1, align 8, !tbaa !59
  br label %96

96:                                               ; preds = %93, %87
  %97 = phi i64 [ %95, %93 ], [ %90, %87 ]
  %98 = phi ptr [ %94, %93 ], [ %92, %87 ]
  %99 = getelementptr inbounds i8, ptr %98, i64 %97
  %100 = icmp slt i64 %97, 0
  br i1 %100, label %111, label %101

101:                                              ; preds = %96, %107
  %102 = phi ptr [ %109, %107 ], [ %98, %96 ]
  %103 = phi i32 [ %108, %107 ], [ 12, %96 ]
  %104 = load i8, ptr %102, align 1, !tbaa !17
  switch i8 %104, label %107 [
    i8 10, label %105
    i8 64, label %105
    i8 94, label %105
  ]

105:                                              ; preds = %101, %101, %101
  %106 = add nsw i32 %103, 10
  br label %107

107:                                              ; preds = %105, %101
  %108 = phi i32 [ %106, %105 ], [ %103, %101 ]
  %109 = getelementptr inbounds i8, ptr %102, i64 1
  %110 = icmp ugt ptr %109, %99
  br i1 %110, label %111, label %101, !llvm.loop !86

111:                                              ; preds = %107, %96
  %112 = phi i32 [ 12, %96 ], [ %108, %107 ]
  %113 = sext i32 %112 to i64
  %114 = shl nsw i64 %113, 2
  %115 = call ptr @Perl_safesysmalloc(i64 noundef %114) #17
  %116 = icmp sgt i64 %97, 0
  br i1 %116, label %117, label %119

117:                                              ; preds = %111
  %118 = getelementptr inbounds i32, ptr %115, i64 1
  store i32 1, ptr %115, align 4, !tbaa !31
  br label %120

119:                                              ; preds = %111
  br i1 %100, label %449, label %120

120:                                              ; preds = %119, %117
  %121 = phi ptr [ %98, %117 ], [ null, %119 ]
  %122 = phi ptr [ %115, %117 ], [ null, %119 ]
  %123 = phi ptr [ %118, %117 ], [ %115, %119 ]
  br label %124

124:                                              ; preds = %120, %234
  %125 = phi ptr [ %240, %234 ], [ %98, %120 ]
  %126 = phi ptr [ %239, %234 ], [ %121, %120 ]
  %127 = phi i8 [ %135, %234 ], [ 0, %120 ]
  %128 = phi i8 [ %238, %234 ], [ 0, %120 ]
  %129 = phi ptr [ %237, %234 ], [ %122, %120 ]
  %130 = phi ptr [ %236, %234 ], [ %123, %120 ]
  %131 = phi i8 [ %235, %234 ], [ 0, %120 ]
  br label %132

132:                                              ; preds = %443, %124
  %133 = phi ptr [ %125, %124 ], [ %447, %443 ]
  %134 = phi ptr [ %126, %124 ], [ %447, %443 ]
  %135 = phi i8 [ %127, %124 ], [ %446, %443 ]
  %136 = phi i8 [ %128, %124 ], [ %143, %443 ]
  %137 = phi ptr [ %130, %124 ], [ %445, %443 ]
  %138 = phi i8 [ %131, %124 ], [ %144, %443 ]
  %139 = phi i8 [ 0, %124 ], [ %444, %443 ]
  br label %140

140:                                              ; preds = %170, %132
  %141 = phi ptr [ %133, %132 ], [ %174, %170 ]
  %142 = phi i32 [ 0, %132 ], [ %175, %170 ]
  %143 = phi i8 [ %136, %132 ], [ %172, %170 ]
  %144 = phi i8 [ %138, %132 ], [ %171, %170 ]
  %145 = getelementptr inbounds i8, ptr %141, i64 1
  %146 = load i8, ptr %141, align 1, !tbaa !17
  %147 = sext i8 %146 to i32
  switch i32 %147, label %150 [
    i32 126, label %159
    i32 32, label %170
    i32 9, label %170
    i32 0, label %148
    i32 10, label %179
    i32 64, label %242
    i32 94, label %242
  ]

148:                                              ; preds = %140
  %149 = icmp ult ptr %145, %99
  br i1 %149, label %150, label %179

150:                                              ; preds = %148, %140
  %151 = icmp ugt ptr %145, %99
  br i1 %151, label %449, label %152

152:                                              ; preds = %150, %157
  %153 = phi ptr [ %154, %157 ], [ %145, %150 ]
  %154 = getelementptr inbounds i8, ptr %153, i64 1
  %155 = load i8, ptr %153, align 1, !tbaa !17
  %156 = sext i8 %155 to i32
  switch i32 %156, label %157 [
    i32 126, label %159
    i32 32, label %170
    i32 9, label %170
    i32 0, label %177
    i32 10, label %179
    i32 64, label %242
    i32 94, label %242
  ]

157:                                              ; preds = %177, %152
  %158 = icmp ugt ptr %154, %99
  br i1 %158, label %449, label %152, !llvm.loop !87

159:                                              ; preds = %152, %140
  %160 = phi ptr [ %141, %140 ], [ %153, %152 ]
  %161 = phi i32 [ %142, %140 ], [ 0, %152 ]
  %162 = phi ptr [ %145, %140 ], [ %154, %152 ]
  %163 = load i8, ptr %162, align 1, !tbaa !17
  %164 = icmp eq i8 %163, 126
  %165 = getelementptr inbounds i8, ptr %160, i64 2
  %166 = select i1 %164, i8 1, i8 %144
  %167 = zext i1 %164 to i32
  %168 = add nsw i32 %161, %167
  %169 = select i1 %164, ptr %165, ptr %162
  br label %170

170:                                              ; preds = %152, %152, %159, %140, %140
  %171 = phi i8 [ %166, %159 ], [ %144, %140 ], [ %144, %140 ], [ %144, %152 ], [ %144, %152 ]
  %172 = phi i8 [ 1, %159 ], [ %143, %140 ], [ %143, %140 ], [ %143, %152 ], [ %143, %152 ]
  %173 = phi i32 [ %168, %159 ], [ %142, %140 ], [ %142, %140 ], [ 0, %152 ], [ 0, %152 ]
  %174 = phi ptr [ %169, %159 ], [ %145, %140 ], [ %145, %140 ], [ %154, %152 ], [ %154, %152 ]
  %175 = add nsw i32 %173, 1
  %176 = icmp ugt ptr %174, %99
  br i1 %176, label %449, label %140, !llvm.loop !89

177:                                              ; preds = %152
  %178 = icmp ult ptr %154, %99
  br i1 %178, label %157, label %179

179:                                              ; preds = %148, %140, %177, %152
  %180 = phi ptr [ %153, %152 ], [ %153, %177 ], [ %141, %140 ], [ %141, %148 ]
  %181 = phi i32 [ 0, %152 ], [ 0, %177 ], [ %142, %140 ], [ %142, %148 ]
  %182 = phi ptr [ %154, %152 ], [ %154, %177 ], [ %145, %140 ], [ %145, %148 ]
  %183 = ptrtoint ptr %182 to i64
  %184 = ptrtoint ptr %134 to i64
  %185 = sub i64 %183, %184
  %186 = trunc i64 %185 to i32
  %187 = add nsw i32 %181, 1
  %188 = sub nsw i32 %186, %187
  %189 = icmp eq i32 %187, %186
  br i1 %189, label %199, label %190

190:                                              ; preds = %179
  %191 = and i8 %139, 1
  %192 = icmp eq i8 %191, 0
  br i1 %192, label %195, label %193

193:                                              ; preds = %190
  %194 = getelementptr inbounds i32, ptr %137, i64 1
  store i32 7, ptr %137, align 4, !tbaa !31
  br label %195

195:                                              ; preds = %193, %190
  %196 = phi ptr [ %194, %193 ], [ %137, %190 ]
  %197 = getelementptr inbounds i32, ptr %196, i64 1
  store i32 2, ptr %196, align 4, !tbaa !31
  %198 = getelementptr inbounds i32, ptr %196, i64 2
  store i32 %188, ptr %197, align 4, !tbaa !31
  br label %199

199:                                              ; preds = %195, %179
  %200 = phi ptr [ %198, %195 ], [ %137, %179 ]
  %201 = icmp ugt ptr %182, %99
  %202 = select i1 %201, i32 %187, i32 %181
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %207, label %204

204:                                              ; preds = %199
  %205 = getelementptr inbounds i32, ptr %200, i64 1
  store i32 3, ptr %200, align 4, !tbaa !31
  %206 = getelementptr inbounds i32, ptr %200, i64 2
  store i32 %202, ptr %205, align 4, !tbaa !31
  br label %207

207:                                              ; preds = %204, %199
  %208 = phi ptr [ %206, %204 ], [ %200, %199 ]
  br i1 %201, label %211, label %209

209:                                              ; preds = %207
  %210 = getelementptr inbounds i32, ptr %208, i64 1
  store i32 13, ptr %208, align 4, !tbaa !31
  br label %211

211:                                              ; preds = %209, %207
  %212 = phi ptr [ %210, %209 ], [ %208, %207 ]
  %213 = and i8 %143, 1
  %214 = icmp eq i8 %213, 0
  br i1 %214, label %227, label %215

215:                                              ; preds = %211
  %216 = getelementptr inbounds i32, ptr %212, i64 1
  store i32 14, ptr %212, align 4, !tbaa !31
  %217 = and i8 %144, 1
  %218 = icmp eq i8 %217, 0
  %219 = ptrtoint ptr %216 to i64
  %220 = ptrtoint ptr %129 to i64
  %221 = sub i64 %219, %220
  %222 = lshr exact i64 %221, 2
  %223 = trunc i64 %222 to i32
  %224 = add i32 %223, 1
  %225 = select i1 %218, i32 0, i32 %224
  %226 = getelementptr inbounds i32, ptr %212, i64 2
  store i32 %225, ptr %216, align 4, !tbaa !31
  br label %227

227:                                              ; preds = %215, %211
  %228 = phi ptr [ %226, %215 ], [ %212, %211 ]
  %229 = icmp ult ptr %182, %99
  br i1 %229, label %230, label %232

230:                                              ; preds = %227
  %231 = getelementptr inbounds i32, ptr %228, i64 1
  store i32 1, ptr %228, align 4, !tbaa !31
  br label %234

232:                                              ; preds = %227
  %233 = getelementptr inbounds i8, ptr %180, i64 2
  br label %234

234:                                              ; preds = %232, %230
  %235 = phi i8 [ 0, %230 ], [ %144, %232 ]
  %236 = phi ptr [ %231, %230 ], [ %228, %232 ]
  %237 = phi ptr [ %228, %230 ], [ %129, %232 ]
  %238 = phi i8 [ 0, %230 ], [ %143, %232 ]
  %239 = phi ptr [ %182, %230 ], [ %134, %232 ]
  %240 = phi ptr [ %182, %230 ], [ %233, %232 ]
  %241 = icmp ugt ptr %240, %99
  br i1 %241, label %449, label %124, !llvm.loop !89

242:                                              ; preds = %140, %140, %152, %152
  %243 = phi ptr [ %153, %152 ], [ %153, %152 ], [ %141, %140 ], [ %141, %140 ]
  %244 = phi ptr [ %154, %152 ], [ %154, %152 ], [ %145, %140 ], [ %145, %140 ]
  %245 = phi i8 [ %155, %152 ], [ %155, %152 ], [ %146, %140 ], [ %146, %140 ]
  %246 = icmp ne i8 %245, 94
  %247 = and i8 %139, 1
  %248 = icmp eq i8 %247, 0
  br i1 %248, label %251, label %249

249:                                              ; preds = %242
  %250 = getelementptr inbounds i32, ptr %137, i64 1
  store i32 7, ptr %137, align 4, !tbaa !31
  br label %251

251:                                              ; preds = %249, %242
  %252 = phi i8 [ 0, %249 ], [ %139, %242 ]
  %253 = phi ptr [ %250, %249 ], [ %137, %242 ]
  %254 = ptrtoint ptr %244 to i64
  %255 = ptrtoint ptr %134 to i64
  %256 = xor i64 %255, -1
  %257 = add i64 %254, %256
  %258 = trunc i64 %257 to i32
  %259 = icmp eq i32 %258, 0
  br i1 %259, label %263, label %260

260:                                              ; preds = %251
  %261 = getelementptr inbounds i32, ptr %253, i64 1
  store i32 2, ptr %253, align 4, !tbaa !31
  %262 = getelementptr inbounds i32, ptr %253, i64 2
  store i32 %258, ptr %261, align 4, !tbaa !31
  br label %263

263:                                              ; preds = %260, %251
  %264 = phi ptr [ %262, %260 ], [ %253, %251 ]
  %265 = getelementptr inbounds i32, ptr %264, i64 1
  store i32 4, ptr %264, align 4, !tbaa !31
  %266 = load i8, ptr %244, align 1, !tbaa !17
  switch i8 %266, label %421 [
    i8 42, label %267
    i8 35, label %278
    i8 46, label %274
    i8 48, label %315
    i8 62, label %360
    i8 124, label %365
    i8 60, label %370
  ]

267:                                              ; preds = %263
  %268 = getelementptr inbounds i8, ptr %243, i64 2
  %269 = getelementptr inbounds i32, ptr %264, i64 2
  store i32 2, ptr %265, align 4, !tbaa !31
  %270 = getelementptr inbounds i32, ptr %264, i64 3
  br i1 %246, label %273, label %271

271:                                              ; preds = %267
  store i32 17, ptr %269, align 4, !tbaa !31
  %272 = getelementptr inbounds i32, ptr %264, i64 4
  store i32 10, ptr %270, align 4, !tbaa !31
  br label %443

273:                                              ; preds = %267
  store i32 11, ptr %269, align 4, !tbaa !31
  br label %443

274:                                              ; preds = %263
  %275 = getelementptr inbounds i8, ptr %243, i64 2
  %276 = load i8, ptr %275, align 1, !tbaa !17
  %277 = icmp eq i8 %276, 35
  br i1 %277, label %278, label %382

278:                                              ; preds = %274, %263
  %279 = select i1 %246, i32 0, i32 1073741824
  br label %280

280:                                              ; preds = %283, %278
  %281 = phi i8 [ %266, %278 ], [ %285, %283 ]
  %282 = phi ptr [ %244, %278 ], [ %284, %283 ]
  switch i8 %281, label %300 [
    i8 35, label %283
    i8 46, label %286
  ]

283:                                              ; preds = %280
  %284 = getelementptr inbounds i8, ptr %282, i64 1
  %285 = load i8, ptr %284, align 1, !tbaa !17
  br label %280, !llvm.loop !90

286:                                              ; preds = %280
  %287 = getelementptr inbounds i8, ptr %282, i64 1
  br label %288

288:                                              ; preds = %288, %286
  %289 = phi ptr [ %287, %286 ], [ %292, %288 ]
  %290 = load i8, ptr %289, align 1, !tbaa !17
  %291 = icmp eq i8 %290, 35
  %292 = getelementptr inbounds i8, ptr %289, i64 1
  br i1 %291, label %288, label %293, !llvm.loop !91

293:                                              ; preds = %288
  %294 = ptrtoint ptr %289 to i64
  %295 = ptrtoint ptr %287 to i64
  %296 = sub i64 %294, %295
  %297 = trunc i64 %296 to i32
  %298 = add i32 %297, 536870912
  %299 = or i32 %298, %279
  br label %302

300:                                              ; preds = %280
  %301 = ptrtoint ptr %282 to i64
  br label %302

302:                                              ; preds = %300, %293
  %303 = phi i64 [ %301, %300 ], [ %294, %293 ]
  %304 = phi i32 [ %279, %300 ], [ %299, %293 ]
  %305 = phi ptr [ %282, %300 ], [ %289, %293 ]
  %306 = ptrtoint ptr %243 to i64
  %307 = sub i64 %303, %306
  %308 = trunc i64 %307 to i32
  %309 = getelementptr inbounds i32, ptr %264, i64 2
  store i32 %308, ptr %265, align 4, !tbaa !31
  %310 = getelementptr inbounds i32, ptr %264, i64 3
  store i32 12, ptr %309, align 4, !tbaa !31
  %311 = getelementptr inbounds i32, ptr %264, i64 4
  store i32 %304, ptr %310, align 4, !tbaa !31
  %312 = and i8 %135, 1
  %313 = zext i1 %246 to i8
  %314 = or i8 %312, %313
  br label %443

315:                                              ; preds = %263
  %316 = getelementptr inbounds i8, ptr %243, i64 2
  %317 = load i8, ptr %316, align 1, !tbaa !17
  %318 = icmp eq i8 %317, 35
  br i1 %318, label %323, label %319

319:                                              ; preds = %315
  %320 = ptrtoint ptr %243 to i64
  %321 = sub i64 %254, %320
  %322 = trunc i64 %321 to i32
  br label %421

323:                                              ; preds = %315
  %324 = select i1 %246, i32 0, i32 1073741824
  br label %325

325:                                              ; preds = %328, %323
  %326 = phi i8 [ %330, %328 ], [ 35, %323 ]
  %327 = phi ptr [ %329, %328 ], [ %316, %323 ]
  switch i8 %326, label %345 [
    i8 35, label %328
    i8 46, label %331
  ]

328:                                              ; preds = %325
  %329 = getelementptr inbounds i8, ptr %327, i64 1
  %330 = load i8, ptr %329, align 1, !tbaa !17
  br label %325, !llvm.loop !92

331:                                              ; preds = %325
  %332 = getelementptr inbounds i8, ptr %327, i64 1
  br label %333

333:                                              ; preds = %333, %331
  %334 = phi ptr [ %332, %331 ], [ %337, %333 ]
  %335 = load i8, ptr %334, align 1, !tbaa !17
  %336 = icmp eq i8 %335, 35
  %337 = getelementptr inbounds i8, ptr %334, i64 1
  br i1 %336, label %333, label %338, !llvm.loop !93

338:                                              ; preds = %333
  %339 = ptrtoint ptr %334 to i64
  %340 = ptrtoint ptr %332 to i64
  %341 = sub i64 %339, %340
  %342 = trunc i64 %341 to i32
  %343 = add i32 %342, 536870912
  %344 = or i32 %343, %324
  br label %347

345:                                              ; preds = %325
  %346 = ptrtoint ptr %327 to i64
  br label %347

347:                                              ; preds = %345, %338
  %348 = phi i64 [ %346, %345 ], [ %339, %338 ]
  %349 = phi i32 [ %324, %345 ], [ %344, %338 ]
  %350 = phi ptr [ %327, %345 ], [ %334, %338 ]
  %351 = ptrtoint ptr %243 to i64
  %352 = sub i64 %348, %351
  %353 = trunc i64 %352 to i32
  %354 = getelementptr inbounds i32, ptr %264, i64 2
  store i32 %353, ptr %265, align 4, !tbaa !31
  %355 = getelementptr inbounds i32, ptr %264, i64 3
  store i32 16, ptr %354, align 4, !tbaa !31
  %356 = getelementptr inbounds i32, ptr %264, i64 4
  store i32 %349, ptr %355, align 4, !tbaa !31
  %357 = and i8 %135, 1
  %358 = zext i1 %246 to i8
  %359 = or i8 %357, %358
  br label %443

360:                                              ; preds = %263, %360
  %361 = phi ptr [ %362, %360 ], [ %244, %263 ]
  %362 = getelementptr inbounds i8, ptr %361, i64 1
  %363 = load i8, ptr %362, align 1, !tbaa !17
  %364 = icmp eq i8 %363, 62
  br i1 %364, label %360, label %375, !llvm.loop !94

365:                                              ; preds = %263, %365
  %366 = phi ptr [ %367, %365 ], [ %244, %263 ]
  %367 = getelementptr inbounds i8, ptr %366, i64 1
  %368 = load i8, ptr %367, align 1, !tbaa !17
  %369 = icmp eq i8 %368, 124
  br i1 %369, label %365, label %375, !llvm.loop !95

370:                                              ; preds = %263, %370
  %371 = phi ptr [ %372, %370 ], [ %244, %263 ]
  %372 = getelementptr inbounds i8, ptr %371, i64 1
  %373 = load i8, ptr %372, align 1, !tbaa !17
  %374 = icmp eq i8 %373, 60
  br i1 %374, label %370, label %375, !llvm.loop !96

375:                                              ; preds = %370, %365, %360
  %376 = phi i8 [ %363, %360 ], [ %368, %365 ], [ %373, %370 ]
  %377 = phi i8 [ %252, %360 ], [ 1, %365 ], [ 1, %370 ]
  %378 = phi ptr [ %362, %360 ], [ %367, %365 ], [ %372, %370 ]
  %379 = phi i1 [ false, %360 ], [ false, %365 ], [ true, %370 ]
  %380 = phi i32 [ 7, %360 ], [ 8, %365 ], [ 0, %370 ]
  %381 = icmp eq i8 %376, 46
  br i1 %381, label %382, label %404

382:                                              ; preds = %375, %274
  %383 = phi i32 [ %380, %375 ], [ 0, %274 ]
  %384 = phi i1 [ %379, %375 ], [ true, %274 ]
  %385 = phi ptr [ %378, %375 ], [ %244, %274 ]
  %386 = phi i8 [ %377, %375 ], [ 1, %274 ]
  %387 = getelementptr inbounds i8, ptr %385, i64 1
  %388 = load i8, ptr %387, align 1, !tbaa !17
  %389 = icmp eq i8 %388, 46
  br i1 %389, label %390, label %404

390:                                              ; preds = %382
  %391 = getelementptr inbounds i8, ptr %385, i64 2
  %392 = load i8, ptr %391, align 1, !tbaa !17
  %393 = icmp eq i8 %392, 46
  %394 = getelementptr inbounds i8, ptr %385, i64 3
  %395 = select i1 %393, ptr %394, ptr %385
  %396 = ptrtoint ptr %395 to i64
  %397 = ptrtoint ptr %243 to i64
  %398 = sub i64 %396, %397
  %399 = trunc i64 %398 to i32
  %400 = getelementptr inbounds i32, ptr %264, i64 2
  store i32 %399, ptr %265, align 4, !tbaa !31
  %401 = select i1 %246, i32 5, i32 6
  %402 = getelementptr inbounds i32, ptr %264, i64 3
  store i32 %401, ptr %400, align 4, !tbaa !31
  %403 = getelementptr inbounds i32, ptr %264, i64 4
  br i1 %384, label %431, label %419

404:                                              ; preds = %382, %375
  %405 = phi i32 [ %383, %382 ], [ %380, %375 ]
  %406 = phi i1 [ %384, %382 ], [ %379, %375 ]
  %407 = phi ptr [ %385, %382 ], [ %378, %375 ]
  %408 = phi i8 [ %386, %382 ], [ %377, %375 ]
  %409 = ptrtoint ptr %407 to i64
  %410 = ptrtoint ptr %243 to i64
  %411 = sub i64 %409, %410
  %412 = trunc i64 %411 to i32
  %413 = getelementptr inbounds i32, ptr %264, i64 2
  store i32 %412, ptr %265, align 4, !tbaa !31
  %414 = select i1 %246, i32 5, i32 6
  %415 = getelementptr inbounds i32, ptr %264, i64 3
  store i32 %414, ptr %413, align 4, !tbaa !31
  br i1 %406, label %426, label %416

416:                                              ; preds = %404
  %417 = getelementptr inbounds i32, ptr %264, i64 4
  store i32 %405, ptr %415, align 4, !tbaa !31
  %418 = getelementptr inbounds i32, ptr %264, i64 5
  store i32 9, ptr %417, align 4, !tbaa !31
  br label %437

419:                                              ; preds = %390
  store i32 %383, ptr %402, align 4, !tbaa !31
  %420 = getelementptr inbounds i32, ptr %264, i64 5
  store i32 9, ptr %403, align 4, !tbaa !31
  br i1 %393, label %432, label %437

421:                                              ; preds = %319, %263
  %422 = phi i32 [ %322, %319 ], [ 1, %263 ]
  %423 = getelementptr inbounds i32, ptr %264, i64 2
  store i32 %422, ptr %265, align 4, !tbaa !31
  %424 = select i1 %246, i32 5, i32 6
  %425 = getelementptr inbounds i32, ptr %264, i64 3
  store i32 %424, ptr %423, align 4, !tbaa !31
  br label %426

426:                                              ; preds = %421, %404
  %427 = phi ptr [ %407, %404 ], [ %244, %421 ]
  %428 = phi i8 [ %408, %404 ], [ 1, %421 ]
  %429 = phi ptr [ %415, %404 ], [ %425, %421 ]
  %430 = getelementptr inbounds i32, ptr %264, i64 4
  store i32 9, ptr %429, align 4, !tbaa !31
  br label %437

431:                                              ; preds = %390
  store i32 9, ptr %402, align 4, !tbaa !31
  br i1 %393, label %432, label %437

432:                                              ; preds = %431, %419
  %433 = phi ptr [ %420, %419 ], [ %403, %431 ]
  %434 = phi i64 [ 4, %419 ], [ 3, %431 ]
  %435 = getelementptr inbounds i32, ptr %264, i64 %434
  %436 = getelementptr inbounds i32, ptr %435, i64 2
  store i32 15, ptr %433, align 4, !tbaa !31
  br label %437

437:                                              ; preds = %432, %431, %426, %419, %416
  %438 = phi i8 [ %386, %432 ], [ %386, %431 ], [ %428, %426 ], [ %386, %419 ], [ %408, %416 ]
  %439 = phi ptr [ %394, %432 ], [ %385, %431 ], [ %427, %426 ], [ %385, %419 ], [ %407, %416 ]
  %440 = phi ptr [ %436, %432 ], [ %403, %431 ], [ %430, %426 ], [ %420, %419 ], [ %418, %416 ]
  br i1 %246, label %443, label %441

441:                                              ; preds = %437
  %442 = getelementptr inbounds i32, ptr %440, i64 1
  store i32 10, ptr %440, align 4, !tbaa !31
  br label %443

443:                                              ; preds = %441, %437, %347, %302, %273, %271
  %444 = phi i8 [ %252, %271 ], [ %252, %273 ], [ %252, %302 ], [ %252, %347 ], [ %438, %441 ], [ %438, %437 ]
  %445 = phi ptr [ %272, %271 ], [ %270, %273 ], [ %311, %302 ], [ %356, %347 ], [ %442, %441 ], [ %440, %437 ]
  %446 = phi i8 [ %135, %271 ], [ %135, %273 ], [ %314, %302 ], [ %359, %347 ], [ %135, %441 ], [ %135, %437 ]
  %447 = phi ptr [ %268, %271 ], [ %268, %273 ], [ %305, %302 ], [ %350, %347 ], [ %439, %441 ], [ %439, %437 ]
  %448 = icmp ugt ptr %447, %99
  br i1 %448, label %449, label %132, !llvm.loop !89

449:                                              ; preds = %234, %443, %170, %150, %157, %119
  %450 = phi ptr [ %115, %119 ], [ %137, %157 ], [ %137, %150 ], [ %137, %170 ], [ %445, %443 ], [ %236, %234 ]
  %451 = phi i8 [ 0, %119 ], [ %135, %157 ], [ %135, %150 ], [ %135, %170 ], [ %446, %443 ], [ %135, %234 ]
  %452 = phi i8 [ 0, %119 ], [ %144, %157 ], [ %171, %170 ], [ %144, %150 ], [ %144, %443 ], [ %235, %234 ]
  %453 = getelementptr inbounds i32, ptr %450, i64 1
  store i32 0, ptr %450, align 4, !tbaa !31
  %454 = ptrtoint ptr %453 to i64
  %455 = ptrtoint ptr %115 to i64
  %456 = sub i64 %454, %455
  %457 = getelementptr inbounds %struct.magic, ptr %78, i64 0, i32 7
  store ptr %115, ptr %457, align 8, !tbaa !85
  %458 = shl i64 %456, 30
  %459 = ashr exact i64 %458, 30
  %460 = and i64 %459, -4
  %461 = getelementptr inbounds %struct.magic, ptr %78, i64 0, i32 5
  store i64 %460, ptr %461, align 8, !tbaa !82
  %462 = getelementptr inbounds %struct.magic, ptr %78, i64 0, i32 6
  store ptr %82, ptr %462, align 8, !tbaa !84
  %463 = getelementptr inbounds %struct.magic, ptr %78, i64 0, i32 4
  %464 = load i8, ptr %463, align 1, !tbaa !77
  %465 = or i8 %464, 2
  store i8 %465, ptr %463, align 1, !tbaa !77
  %466 = and i8 %451, 1
  %467 = icmp eq i8 %466, 0
  %468 = and i8 %452, 1
  %469 = icmp eq i8 %468, 0
  %470 = select i1 %467, i1 true, i1 %469
  br i1 %470, label %474, label %471

471:                                              ; preds = %449
  %472 = call ptr (ptr, ...) @Perl_die(ptr noundef nonnull @.str.8) #17
  %473 = load ptr, ptr %462, align 8, !tbaa !84
  br label %474

474:                                              ; preds = %58, %449, %471
  %475 = phi ptr [ %45, %58 ], [ %473, %471 ], [ %82, %449 ]
  %476 = phi ptr [ %41, %58 ], [ %78, %471 ], [ %78, %449 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %1) #17
  %477 = getelementptr inbounds %struct.magic, ptr %476, i64 0, i32 7
  %478 = load ptr, ptr %477, align 8, !tbaa !85
  %479 = load ptr, ptr @PL_formtarget, align 8, !tbaa !6
  %480 = getelementptr inbounds %struct.sv, ptr %479, i64 0, i32 2
  %481 = load i32, ptr %480, align 4, !tbaa !49
  %482 = and i32 %481, 430018304
  %483 = icmp eq i32 %482, 1024
  br i1 %483, label %484, label %488

484:                                              ; preds = %474
  %485 = load ptr, ptr %479, align 8, !tbaa !72
  %486 = getelementptr inbounds %struct.xpv, ptr %485, i64 0, i32 2
  %487 = load i64, ptr %486, align 8, !tbaa !53
  store i64 %487, ptr %2, align 8, !tbaa !59
  br label %490

488:                                              ; preds = %474
  %489 = call ptr @Perl_sv_pvn_force_flags(ptr noundef nonnull %479, ptr noundef nonnull %2, i32 noundef 2) #17
  br label %490

490:                                              ; preds = %488, %484
  %491 = load i32, ptr %17, align 4, !tbaa !49
  %492 = and i32 %491, 14680064
  %493 = icmp eq i32 %492, 0
  br i1 %493, label %496, label %494

494:                                              ; preds = %490
  %495 = call zeroext i1 @Perl_sv_tainted(ptr noundef nonnull %12) #17
  br i1 %495, label %506, label %496

496:                                              ; preds = %494, %490
  %497 = getelementptr inbounds %struct.sv, ptr %475, i64 0, i32 2
  %498 = load i32, ptr %497, align 4, !tbaa !49
  %499 = and i32 %498, 14680064
  %500 = icmp eq i32 %499, 0
  br i1 %500, label %511, label %501

501:                                              ; preds = %496
  %502 = call zeroext i1 @Perl_sv_tainted(ptr noundef nonnull %475) #17
  %503 = load i8, ptr @PL_tainting, align 1, !range !44
  %504 = icmp ne i8 %503, 0
  %505 = select i1 %502, i1 %504, i1 false
  br i1 %505, label %509, label %511

506:                                              ; preds = %494
  %507 = load i8, ptr @PL_tainting, align 1, !tbaa !26, !range !44, !noundef !45
  %508 = icmp eq i8 %507, 0
  br i1 %508, label %511, label %509

509:                                              ; preds = %501, %506
  %510 = load ptr, ptr @PL_formtarget, align 8, !tbaa !6
  call void @Perl_sv_magic(ptr noundef %510, ptr noundef null, i32 noundef 116, ptr noundef null, i32 noundef 0) #17
  br label %511

511:                                              ; preds = %509, %506, %501, %496
  %512 = load ptr, ptr @PL_formtarget, align 8, !tbaa !6
  %513 = getelementptr inbounds %struct.sv, ptr %512, i64 0, i32 2
  %514 = load i32, ptr %513, align 4, !tbaa !49
  %515 = and i32 %514, 536870912
  %516 = icmp ne i32 %515, 0
  %517 = load ptr, ptr @PL_curcop, align 8, !tbaa !6
  %518 = getelementptr inbounds %struct.cop, ptr %517, i64 0, i32 10
  %519 = load i32, ptr %518, align 8, !tbaa !70
  %520 = and i32 %519, 8
  %521 = icmp eq i32 %520, 0
  %522 = select i1 %516, i1 %521, i1 false
  %523 = zext i1 %522 to i8
  %524 = load ptr, ptr %475, align 8, !tbaa !72
  %525 = getelementptr inbounds %struct.xpv, ptr %524, i64 0, i32 2
  %526 = load i64, ptr %525, align 8, !tbaa !53
  %527 = icmp eq i32 %520, 0
  %528 = select i1 %527, i64 3, i64 1
  %529 = mul i64 %528, %526
  %530 = add i64 %529, 1
  %531 = and i32 %514, 268435456
  %532 = icmp eq i32 %531, 0
  %533 = load i64, ptr %2, align 8, !tbaa !59
  br i1 %532, label %537, label %534

534:                                              ; preds = %511
  %535 = add i64 %529, 2
  %536 = add i64 %535, %533
  br label %544

537:                                              ; preds = %511
  %538 = load ptr, ptr %512, align 8, !tbaa !72
  %539 = getelementptr inbounds %struct.xpv, ptr %538, i64 0, i32 3
  %540 = load i64, ptr %539, align 8, !tbaa !17
  %541 = add i64 %529, 2
  %542 = add i64 %541, %533
  %543 = icmp ult i64 %540, %542
  br i1 %543, label %544, label %548

544:                                              ; preds = %534, %537
  %545 = phi i64 [ %536, %534 ], [ %542, %537 ]
  %546 = call ptr @Perl_sv_grow(ptr noundef nonnull %512, i64 noundef %545) #17
  %547 = load i64, ptr %2, align 8, !tbaa !59
  br label %551

548:                                              ; preds = %537
  %549 = getelementptr inbounds %struct.sv, ptr %512, i64 0, i32 3
  %550 = load ptr, ptr %549, align 8, !tbaa !17
  br label %551

551:                                              ; preds = %548, %544
  %552 = phi i64 [ %547, %544 ], [ %533, %548 ]
  %553 = phi ptr [ %546, %544 ], [ %550, %548 ]
  %554 = getelementptr inbounds i8, ptr %553, i64 %552
  %555 = getelementptr inbounds %struct.sv, ptr %475, i64 0, i32 2
  %556 = load i32, ptr %555, align 4, !tbaa !49
  %557 = and i32 %556, 2098176
  %558 = icmp eq i32 %557, 1024
  br i1 %558, label %559, label %565

559:                                              ; preds = %551
  %560 = load ptr, ptr %475, align 8, !tbaa !72
  %561 = getelementptr inbounds %struct.xpv, ptr %560, i64 0, i32 2
  %562 = load i64, ptr %561, align 8, !tbaa !53
  store i64 %562, ptr %2, align 8, !tbaa !59
  %563 = getelementptr inbounds %struct.sv, ptr %475, i64 0, i32 3
  %564 = load ptr, ptr %563, align 8, !tbaa !17
  br label %567

565:                                              ; preds = %551
  %566 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %475, ptr noundef nonnull %2, i32 noundef 34) #17
  br label %567

567:                                              ; preds = %565, %559
  %568 = phi ptr [ %564, %559 ], [ %566, %565 ]
  br label %569

569:                                              ; preds = %1130, %567
  %570 = phi i32 [ 0, %567 ], [ %1131, %1130 ]
  %571 = phi i8 [ %16, %567 ], [ %1132, %1130 ]
  %572 = phi ptr [ null, %567 ], [ %1133, %1130 ]
  %573 = phi i64 [ 0, %567 ], [ %1134, %1130 ]
  %574 = phi i32 [ 0, %567 ], [ %1135, %1130 ]
  %575 = phi i8 [ 0, %567 ], [ %1136, %1130 ]
  %576 = phi i32 [ 0, %567 ], [ %1137, %1130 ]
  %577 = phi i8 [ 0, %567 ], [ %1138, %1130 ]
  %578 = phi i8 [ %523, %567 ], [ %1139, %1130 ]
  %579 = phi i32 [ 0, %567 ], [ %1140, %1130 ]
  %580 = phi ptr [ null, %567 ], [ %1141, %1130 ]
  %581 = phi ptr [ null, %567 ], [ %1142, %1130 ]
  %582 = phi ptr [ %568, %567 ], [ %1143, %1130 ]
  %583 = phi ptr [ %554, %567 ], [ %1144, %1130 ]
  %584 = phi ptr [ %478, %567 ], [ %1145, %1130 ]
  %585 = phi ptr [ %11, %567 ], [ %1146, %1130 ]
  %586 = getelementptr inbounds i32, ptr %584, i64 1
  %587 = load i32, ptr %584, align 4, !tbaa !31
  switch i32 %587, label %1130 [
    i32 1, label %588
    i32 2, label %596
    i32 3, label %622
    i32 4, label %627
    i32 5, label %651
    i32 6, label %715
    i32 7, label %809
    i32 8, label %820
    i32 9, label %833
    i32 10, label %835
    i32 17, label %868
    i32 11, label %869
    i32 16, label %1095
    i32 12, label %1100
    i32 13, label %1266
    i32 14, label %1281
    i32 15, label %1294
    i32 0, label %1349
  ]

588:                                              ; preds = %569
  %589 = load ptr, ptr @PL_formtarget, align 8, !tbaa !6
  %590 = getelementptr inbounds %struct.sv, ptr %589, i64 0, i32 3
  %591 = load ptr, ptr %590, align 8, !tbaa !17
  %592 = ptrtoint ptr %583 to i64
  %593 = ptrtoint ptr %591 to i64
  %594 = sub i64 %592, %593
  %595 = add nsw i32 %570, 1
  br label %1130

596:                                              ; preds = %569
  %597 = getelementptr inbounds i32, ptr %584, i64 2
  %598 = load i32, ptr %586, align 4, !tbaa !31
  %599 = zext i32 %598 to i64
  store i64 %599, ptr %3, align 8, !tbaa !59
  %600 = getelementptr inbounds i8, ptr %582, i64 %599
  %601 = and i8 %578, 1
  %602 = icmp eq i8 %601, 0
  %603 = load i32, ptr %555, align 4, !tbaa !49
  br i1 %602, label %616, label %604

604:                                              ; preds = %596
  %605 = and i32 %603, 536870912
  %606 = icmp eq i32 %605, 0
  br i1 %606, label %613, label %607

607:                                              ; preds = %604
  %608 = load ptr, ptr @PL_curcop, align 8, !tbaa !6
  %609 = getelementptr inbounds %struct.cop, ptr %608, i64 0, i32 10
  %610 = load i32, ptr %609, align 8, !tbaa !70
  %611 = and i32 %610, 8
  %612 = icmp eq i32 %611, 0
  br label %613

613:                                              ; preds = %607, %604
  %614 = phi i1 [ false, %604 ], [ %612, %607 ]
  %615 = zext i1 %614 to i32
  br label %619

616:                                              ; preds = %596
  %617 = lshr i32 %603, 29
  %618 = and i32 %617, 1
  br label %619

619:                                              ; preds = %616, %613
  %620 = phi i32 [ %615, %613 ], [ %618, %616 ]
  %621 = trunc i32 %620 to i8
  br label %928

622:                                              ; preds = %569
  %623 = getelementptr inbounds i32, ptr %584, i64 2
  %624 = load i32, ptr %586, align 4, !tbaa !31
  %625 = zext i32 %624 to i64
  %626 = getelementptr inbounds i8, ptr %582, i64 %625
  br label %1130

627:                                              ; preds = %569
  %628 = getelementptr inbounds i32, ptr %584, i64 2
  %629 = load i32, ptr %586, align 4, !tbaa !31
  %630 = sext i32 %629 to i64
  %631 = getelementptr inbounds i8, ptr %582, i64 %630
  %632 = icmp ult ptr %585, %4
  br i1 %632, label %633, label %636

633:                                              ; preds = %627
  %634 = getelementptr inbounds ptr, ptr %585, i64 1
  %635 = load ptr, ptr %634, align 8, !tbaa !6
  br label %637

636:                                              ; preds = %627
  call void (i32, ptr, ...) @Perl_ck_warner(i32 noundef 28, ptr noundef nonnull @.str.1) #17
  br label %637

637:                                              ; preds = %636, %633
  %638 = phi ptr [ %635, %633 ], [ @PL_sv_no, %636 ]
  %639 = phi ptr [ %634, %633 ], [ %585, %636 ]
  %640 = getelementptr inbounds %struct.sv, ptr %638, i64 0, i32 2
  %641 = load i32, ptr %640, align 4, !tbaa !49
  %642 = and i32 %641, 14680064
  %643 = icmp eq i32 %642, 0
  br i1 %643, label %1130, label %644

644:                                              ; preds = %637
  %645 = call zeroext i1 @Perl_sv_tainted(ptr noundef nonnull %638) #17
  %646 = load i8, ptr @PL_tainting, align 1, !range !44
  %647 = icmp ne i8 %646, 0
  %648 = select i1 %645, i1 %647, i1 false
  br i1 %648, label %649, label %1130

649:                                              ; preds = %644
  %650 = load ptr, ptr @PL_formtarget, align 8, !tbaa !6
  call void @Perl_sv_magic(ptr noundef %650, ptr noundef null, i32 noundef 116, ptr noundef null, i32 noundef 0) #17
  br label %1130

651:                                              ; preds = %569
  %652 = getelementptr inbounds %struct.sv, ptr %581, i64 0, i32 2
  %653 = load i32, ptr %652, align 4, !tbaa !49
  %654 = and i32 %653, 2098176
  %655 = icmp eq i32 %654, 1024
  br i1 %655, label %656, label %662

656:                                              ; preds = %651
  %657 = load ptr, ptr %581, align 8, !tbaa !72
  %658 = getelementptr inbounds %struct.xpv, ptr %657, i64 0, i32 2
  %659 = load i64, ptr %658, align 8, !tbaa !53
  store i64 %659, ptr %2, align 8, !tbaa !59
  %660 = getelementptr inbounds %struct.sv, ptr %581, i64 0, i32 3
  %661 = load ptr, ptr %660, align 8, !tbaa !17
  br label %666

662:                                              ; preds = %651
  %663 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %581, ptr noundef nonnull %2, i32 noundef 34) #17
  %664 = load i64, ptr %2, align 8, !tbaa !59
  %665 = load i32, ptr %652, align 4, !tbaa !49
  br label %666

666:                                              ; preds = %662, %656
  %667 = phi i32 [ %653, %656 ], [ %665, %662 ]
  %668 = phi i64 [ %659, %656 ], [ %664, %662 ]
  %669 = phi ptr [ %661, %656 ], [ %663, %662 ]
  %670 = getelementptr inbounds i8, ptr %669, i64 %668
  %671 = and i32 %667, 536870912
  %672 = icmp eq i32 %671, 0
  br i1 %672, label %679, label %673

673:                                              ; preds = %666
  %674 = load ptr, ptr @PL_curcop, align 8, !tbaa !6
  %675 = getelementptr inbounds %struct.cop, ptr %674, i64 0, i32 10
  %676 = load i32, ptr %675, align 8, !tbaa !70
  %677 = and i32 %676, 8
  %678 = icmp eq i32 %677, 0
  br label %679

679:                                              ; preds = %673, %666
  %680 = phi i1 [ false, %666 ], [ %678, %673 ]
  %681 = zext i1 %680 to i8
  br label %682

682:                                              ; preds = %702, %679
  %683 = phi i8 [ %575, %679 ], [ %697, %702 ]
  %684 = phi i32 [ 0, %679 ], [ %705, %702 ]
  %685 = phi ptr [ %669, %679 ], [ %704, %702 ]
  %686 = icmp ult ptr %685, %670
  br i1 %686, label %687, label %707

687:                                              ; preds = %682
  %688 = load i8, ptr %685, align 1, !tbaa !17
  %689 = zext i8 %688 to i64
  %690 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %689
  %691 = load i32, ptr %690, align 4, !tbaa !31
  %692 = and i32 %691, 24576
  %693 = icmp eq i32 %692, 24576
  br i1 %693, label %694, label %696

694:                                              ; preds = %687
  %695 = icmp eq i8 %688, 10
  br i1 %695, label %707, label %696

696:                                              ; preds = %687, %694
  %697 = phi i8 [ %683, %694 ], [ 1, %687 ]
  br i1 %680, label %698, label %702

698:                                              ; preds = %696
  %699 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %689
  %700 = load i8, ptr %699, align 1, !tbaa !17
  %701 = zext i8 %700 to i64
  br label %702

702:                                              ; preds = %696, %698
  %703 = phi i64 [ %701, %698 ], [ 1, %696 ]
  %704 = getelementptr inbounds i8, ptr %685, i64 %703
  %705 = add nuw nsw i32 %684, 1
  %706 = icmp eq i32 %705, %574
  br i1 %706, label %707, label %682, !llvm.loop !97

707:                                              ; preds = %702, %694, %682
  %708 = phi i8 [ %683, %694 ], [ %697, %702 ], [ %683, %682 ]
  %709 = phi i32 [ %684, %694 ], [ %574, %702 ], [ %684, %682 ]
  %710 = phi ptr [ %685, %694 ], [ %704, %702 ], [ %685, %682 ]
  %711 = ptrtoint ptr %710 to i64
  %712 = ptrtoint ptr %669 to i64
  %713 = sub i64 %711, %712
  %714 = trunc i64 %713 to i32
  br label %1130

715:                                              ; preds = %569
  %716 = getelementptr inbounds %struct.sv, ptr %581, i64 0, i32 2
  %717 = load i32, ptr %716, align 4, !tbaa !49
  %718 = and i32 %717, 2098176
  %719 = icmp eq i32 %718, 1024
  br i1 %719, label %720, label %726

720:                                              ; preds = %715
  %721 = load ptr, ptr %581, align 8, !tbaa !72
  %722 = getelementptr inbounds %struct.xpv, ptr %721, i64 0, i32 2
  %723 = load i64, ptr %722, align 8, !tbaa !53
  store i64 %723, ptr %2, align 8, !tbaa !59
  %724 = getelementptr inbounds %struct.sv, ptr %581, i64 0, i32 3
  %725 = load ptr, ptr %724, align 8, !tbaa !17
  br label %730

726:                                              ; preds = %715
  %727 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %581, ptr noundef nonnull %2, i32 noundef 34) #17
  %728 = load i64, ptr %2, align 8, !tbaa !59
  %729 = load i32, ptr %716, align 4, !tbaa !49
  br label %730

730:                                              ; preds = %726, %720
  %731 = phi i32 [ %717, %720 ], [ %729, %726 ]
  %732 = phi i64 [ %723, %720 ], [ %728, %726 ]
  %733 = phi ptr [ %725, %720 ], [ %727, %726 ]
  %734 = getelementptr inbounds i8, ptr %733, i64 %732
  %735 = and i32 %731, 536870912
  %736 = icmp eq i32 %735, 0
  br i1 %736, label %743, label %737

737:                                              ; preds = %730
  %738 = load ptr, ptr @PL_curcop, align 8, !tbaa !6
  %739 = getelementptr inbounds %struct.cop, ptr %738, i64 0, i32 10
  %740 = load i32, ptr %739, align 8, !tbaa !70
  %741 = and i32 %740, 8
  %742 = icmp eq i32 %741, 0
  br label %743

743:                                              ; preds = %737, %730
  %744 = phi i1 [ false, %730 ], [ %742, %737 ]
  %745 = zext i1 %744 to i8
  %746 = and i8 %571, 1
  %747 = icmp eq i8 %746, 0
  %748 = icmp sgt i64 %732, 0
  br i1 %748, label %749, label %794

749:                                              ; preds = %743
  %750 = load ptr, ptr @PL_chopset, align 8
  br label %751

751:                                              ; preds = %749, %789
  %752 = phi i32 [ 0, %749 ], [ %792, %789 ]
  %753 = phi ptr [ %733, %749 ], [ %791, %789 ]
  %754 = phi i32 [ %579, %749 ], [ %784, %789 ]
  %755 = phi i8 [ %575, %749 ], [ %783, %789 ]
  %756 = phi ptr [ null, %749 ], [ %782, %789 ]
  %757 = load i8, ptr %753, align 1, !tbaa !17
  %758 = zext i8 %757 to i64
  %759 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %758
  %760 = load i32, ptr %759, align 4, !tbaa !31
  %761 = and i32 %760, 17408
  %762 = icmp eq i32 %761, 17408
  br i1 %762, label %763, label %769

763:                                              ; preds = %751
  %764 = icmp eq i8 %757, 13
  br i1 %764, label %794, label %765

765:                                              ; preds = %763
  %766 = select i1 %747, ptr %756, ptr %753
  %767 = select i1 %747, i32 %754, i32 %752
  %768 = icmp eq i32 %752, %574
  br i1 %768, label %794, label %781

769:                                              ; preds = %751
  %770 = sext i8 %757 to i32
  %771 = call ptr @strchr(ptr noundef nonnull dereferenceable(1) %750, i32 noundef %770) #18
  %772 = icmp eq ptr %771, null
  %773 = getelementptr inbounds i8, ptr %753, i64 1
  %774 = select i1 %772, ptr %756, ptr %773
  %775 = select i1 %772, i32 %754, i32 %752
  %776 = icmp eq i32 %752, %574
  br i1 %776, label %794, label %777

777:                                              ; preds = %769
  %778 = and i32 %760, 24576
  %779 = icmp eq i32 %778, 24576
  %780 = select i1 %779, i8 %755, i8 1
  br label %781

781:                                              ; preds = %777, %765
  %782 = phi ptr [ %766, %765 ], [ %774, %777 ]
  %783 = phi i8 [ %755, %765 ], [ %780, %777 ]
  %784 = phi i32 [ %767, %765 ], [ %775, %777 ]
  br i1 %744, label %785, label %789

785:                                              ; preds = %781
  %786 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %758
  %787 = load i8, ptr %786, align 1, !tbaa !17
  %788 = zext i8 %787 to i64
  br label %789

789:                                              ; preds = %781, %785
  %790 = phi i64 [ %788, %785 ], [ 1, %781 ]
  %791 = getelementptr inbounds i8, ptr %753, i64 %790
  %792 = add nuw nsw i32 %752, 1
  %793 = icmp ult ptr %791, %734
  br i1 %793, label %751, label %794, !llvm.loop !98

794:                                              ; preds = %789, %765, %769, %763, %743
  %795 = phi i8 [ %575, %743 ], [ %755, %763 ], [ %755, %769 ], [ %755, %765 ], [ %783, %789 ]
  %796 = phi ptr [ %733, %743 ], [ %753, %763 ], [ %753, %769 ], [ %753, %765 ], [ %791, %789 ]
  %797 = phi i32 [ 0, %743 ], [ %752, %763 ], [ %574, %769 ], [ %574, %765 ], [ %792, %789 ]
  %798 = phi ptr [ null, %743 ], [ %753, %763 ], [ %774, %769 ], [ %766, %765 ], [ %782, %789 ]
  %799 = phi i32 [ %579, %743 ], [ %752, %763 ], [ %775, %769 ], [ %767, %765 ], [ %784, %789 ]
  %800 = icmp eq ptr %798, null
  %801 = icmp eq ptr %796, %734
  %802 = select i1 %800, i1 true, i1 %801
  %803 = select i1 %802, ptr %796, ptr %798
  %804 = select i1 %802, i32 %797, i32 %799
  %805 = ptrtoint ptr %803 to i64
  %806 = ptrtoint ptr %733 to i64
  %807 = sub i64 %805, %806
  %808 = trunc i64 %807 to i32
  br label %1130

809:                                              ; preds = %569
  %810 = icmp eq i32 %574, %579
  br i1 %810, label %1130, label %811

811:                                              ; preds = %809
  %812 = icmp sgt i32 %574, %579
  br i1 %812, label %813, label %1130

813:                                              ; preds = %811
  %814 = xor i32 %579, -1
  %815 = add i32 %574, %814
  %816 = zext i32 %815 to i64
  %817 = add nuw nsw i64 %816, 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(1) %583, i8 32, i64 %817, i1 false), !tbaa !17
  %818 = getelementptr i8, ptr %583, i64 1
  %819 = getelementptr i8, ptr %818, i64 %816
  br label %1130

820:                                              ; preds = %569
  %821 = icmp eq i32 %574, %579
  br i1 %821, label %1130, label %822

822:                                              ; preds = %820
  %823 = sub nsw i32 %574, %579
  %824 = sdiv i32 %823, 2
  %825 = sub nsw i32 %574, %824
  %826 = icmp sgt i32 %823, 1
  br i1 %826, label %827, label %1130

827:                                              ; preds = %822
  %828 = add nsw i32 %824, -1
  %829 = zext i32 %828 to i64
  %830 = add nuw nsw i64 %829, 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(1) %583, i8 32, i64 %830, i1 false), !tbaa !17
  %831 = getelementptr i8, ptr %583, i64 1
  %832 = getelementptr i8, ptr %831, i64 %829
  br label %1130

833:                                              ; preds = %569
  %834 = sext i32 %576 to i64
  store i64 %834, ptr %3, align 8, !tbaa !59
  br label %928

835:                                              ; preds = %569
  %836 = icmp eq ptr %581, @PL_sv_no
  br i1 %836, label %868, label %837

837:                                              ; preds = %835
  %838 = and i8 %571, 1
  %839 = icmp eq i8 %838, 0
  br i1 %839, label %849, label %840

840:                                              ; preds = %837, %840
  %841 = phi ptr [ %848, %840 ], [ %572, %837 ]
  %842 = load i8, ptr %841, align 1, !tbaa !17
  %843 = zext i8 %842 to i64
  %844 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %843
  %845 = load i32, ptr %844, align 4, !tbaa !31
  %846 = and i32 %845, 17408
  %847 = icmp eq i32 %846, 17408
  %848 = getelementptr inbounds i8, ptr %841, i64 1
  br i1 %847, label %840, label %849, !llvm.loop !99

849:                                              ; preds = %840, %837
  %850 = phi ptr [ %572, %837 ], [ %841, %840 ]
  %851 = getelementptr inbounds %struct.sv, ptr %581, i64 0, i32 2
  %852 = load i32, ptr %851, align 4, !tbaa !49
  %853 = and i32 %852, 16384
  %854 = icmp eq i32 %853, 0
  br i1 %854, label %856, label %855

855:                                              ; preds = %849
  call void @Perl_sv_chop(ptr noundef nonnull %581, ptr noundef %850) #17
  br label %862

856:                                              ; preds = %849
  %857 = load i64, ptr %2, align 8, !tbaa !59
  %858 = ptrtoint ptr %850 to i64
  %859 = ptrtoint ptr %580 to i64
  %860 = sub i64 %859, %858
  %861 = add i64 %860, %857
  call void @Perl_sv_setpvn(ptr noundef nonnull %581, ptr noundef %850, i64 noundef %861) #17
  br label %862

862:                                              ; preds = %855, %856
  %863 = load i32, ptr %851, align 4, !tbaa !49
  %864 = and i32 %863, 4194304
  %865 = icmp eq i32 %864, 0
  br i1 %865, label %1130, label %866

866:                                              ; preds = %862
  %867 = call i32 @Perl_mg_set(ptr noundef nonnull %581) #17
  br label %1130

868:                                              ; preds = %835, %569
  br label %869

869:                                              ; preds = %569, %868
  %870 = phi i8 [ %571, %569 ], [ 0, %868 ]
  %871 = icmp eq i32 %587, 17
  %872 = getelementptr inbounds %struct.sv, ptr %581, i64 0, i32 2
  %873 = load i32, ptr %872, align 4, !tbaa !49
  %874 = and i32 %873, 2098176
  %875 = icmp eq i32 %874, 1024
  br i1 %875, label %876, label %882

876:                                              ; preds = %869
  %877 = load ptr, ptr %581, align 8, !tbaa !72
  %878 = getelementptr inbounds %struct.xpv, ptr %877, i64 0, i32 2
  %879 = load i64, ptr %878, align 8, !tbaa !53
  store i64 %879, ptr %2, align 8, !tbaa !59
  %880 = getelementptr inbounds %struct.sv, ptr %581, i64 0, i32 3
  %881 = load ptr, ptr %880, align 8, !tbaa !17
  br label %886

882:                                              ; preds = %869
  %883 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %581, ptr noundef nonnull %2, i32 noundef 34) #17
  %884 = load i64, ptr %2, align 8, !tbaa !59
  %885 = load i32, ptr %872, align 4, !tbaa !49
  br label %886

886:                                              ; preds = %882, %876
  %887 = phi i32 [ %885, %882 ], [ %873, %876 ]
  %888 = phi i64 [ %884, %882 ], [ %879, %876 ]
  %889 = phi ptr [ %883, %882 ], [ %881, %876 ]
  %890 = getelementptr inbounds i8, ptr %889, i64 %888
  %891 = and i32 %887, 536870912
  %892 = icmp eq i32 %891, 0
  br i1 %892, label %899, label %893

893:                                              ; preds = %886
  %894 = load ptr, ptr @PL_curcop, align 8, !tbaa !6
  %895 = getelementptr inbounds %struct.cop, ptr %894, i64 0, i32 10
  %896 = load i32, ptr %895, align 8, !tbaa !70
  %897 = and i32 %896, 8
  %898 = icmp eq i32 %897, 0
  br label %899

899:                                              ; preds = %893, %886
  %900 = phi i1 [ false, %886 ], [ %898, %893 ]
  %901 = zext i1 %900 to i8
  %902 = icmp eq i64 %888, 0
  br i1 %902, label %1130, label %903

903:                                              ; preds = %899
  store i64 %888, ptr %3, align 8, !tbaa !59
  %904 = icmp sgt i64 %888, 0
  br i1 %904, label %905, label %928

905:                                              ; preds = %903, %924
  %906 = phi ptr [ %909, %924 ], [ %889, %903 ]
  %907 = phi i32 [ %926, %924 ], [ %570, %903 ]
  %908 = phi i64 [ %925, %924 ], [ %888, %903 ]
  %909 = getelementptr inbounds i8, ptr %906, i64 1
  %910 = load i8, ptr %906, align 1, !tbaa !17
  %911 = icmp eq i8 %910, 10
  br i1 %911, label %912, label %924

912:                                              ; preds = %905
  br i1 %871, label %913, label %918

913:                                              ; preds = %912
  %914 = ptrtoint ptr %909 to i64
  %915 = ptrtoint ptr %889 to i64
  %916 = xor i64 %915, -1
  %917 = add i64 %914, %916
  store i64 %917, ptr %3, align 8, !tbaa !59
  br label %928

918:                                              ; preds = %912
  %919 = icmp eq ptr %909, %890
  br i1 %919, label %920, label %922

920:                                              ; preds = %918
  %921 = add i64 %908, -1
  store i64 %921, ptr %3, align 8, !tbaa !59
  br label %924

922:                                              ; preds = %918
  %923 = add nsw i32 %907, 1
  br label %924

924:                                              ; preds = %922, %920, %905
  %925 = phi i64 [ %921, %920 ], [ %908, %922 ], [ %908, %905 ]
  %926 = phi i32 [ %907, %920 ], [ %923, %922 ], [ %907, %905 ]
  %927 = icmp ult ptr %909, %890
  br i1 %927, label %905, label %928, !llvm.loop !100

928:                                              ; preds = %924, %903, %913, %833, %619
  %929 = phi i32 [ %570, %833 ], [ %570, %619 ], [ %907, %913 ], [ %570, %903 ], [ %926, %924 ]
  %930 = phi i8 [ %571, %833 ], [ %571, %619 ], [ %870, %913 ], [ %870, %903 ], [ %870, %924 ]
  %931 = phi ptr [ %572, %833 ], [ %572, %619 ], [ %909, %913 ], [ %890, %903 ], [ %890, %924 ]
  %932 = phi i8 [ %575, %833 ], [ %575, %619 ], [ 1, %913 ], [ 1, %903 ], [ 1, %924 ]
  %933 = phi i8 [ %577, %833 ], [ %621, %619 ], [ %901, %913 ], [ %901, %903 ], [ %901, %924 ]
  %934 = phi ptr [ %580, %833 ], [ %582, %619 ], [ %889, %913 ], [ %889, %903 ], [ %889, %924 ]
  %935 = phi i1 [ false, %833 ], [ false, %619 ], [ true, %913 ], [ true, %903 ], [ true, %924 ]
  %936 = phi i1 [ false, %833 ], [ true, %619 ], [ false, %913 ], [ false, %903 ], [ false, %924 ]
  %937 = phi ptr [ %580, %833 ], [ %580, %619 ], [ %889, %913 ], [ %889, %903 ], [ %889, %924 ]
  %938 = phi ptr [ %582, %833 ], [ %600, %619 ], [ %582, %913 ], [ %582, %903 ], [ %582, %924 ]
  %939 = phi ptr [ %586, %833 ], [ %597, %619 ], [ %586, %913 ], [ %586, %903 ], [ %586, %924 ]
  %940 = load ptr, ptr @PL_formtarget, align 8, !tbaa !6
  %941 = getelementptr inbounds %struct.sv, ptr %940, i64 0, i32 3
  %942 = load ptr, ptr %941, align 8, !tbaa !17
  %943 = ptrtoint ptr %583 to i64
  %944 = ptrtoint ptr %942 to i64
  %945 = sub i64 %943, %944
  %946 = load ptr, ptr %940, align 8, !tbaa !72
  %947 = getelementptr inbounds %struct.xpv, ptr %946, i64 0, i32 2
  store i64 %945, ptr %947, align 8, !tbaa !53
  %948 = and i8 %578, 1
  %949 = icmp ne i8 %948, 0
  %950 = and i8 %933, 1
  %951 = icmp eq i8 %950, 0
  %952 = select i1 %949, i1 %951, i1 false
  br i1 %952, label %953, label %956

953:                                              ; preds = %928
  %954 = call ptr @Perl_bytes_to_utf8(ptr noundef %934, ptr noundef nonnull %3) #17
  %955 = load ptr, ptr @PL_formtarget, align 8, !tbaa !6
  br label %1020

956:                                              ; preds = %928
  br i1 %951, label %1020, label %957

957:                                              ; preds = %956
  br i1 %949, label %1020, label %958

958:                                              ; preds = %957
  %959 = call i64 @Perl_sv_utf8_upgrade_flags_grow(ptr noundef nonnull %940, i32 noundef 0, i64 noundef 0) #17
  %960 = load ptr, ptr @PL_formtarget, align 8, !tbaa !6
  %961 = getelementptr inbounds %struct.sv, ptr %960, i64 0, i32 3
  %962 = load ptr, ptr %961, align 8, !tbaa !17
  %963 = icmp eq i64 %573, 0
  br i1 %963, label %1015, label %964

964:                                              ; preds = %958
  %965 = add i64 %573, -1
  %966 = and i64 %573, 3
  %967 = icmp eq i64 %966, 0
  br i1 %967, label %981, label %968

968:                                              ; preds = %964, %968
  %969 = phi ptr [ %978, %968 ], [ %962, %964 ]
  %970 = phi i64 [ %972, %968 ], [ %573, %964 ]
  %971 = phi i64 [ %979, %968 ], [ 0, %964 ]
  %972 = add i64 %970, -1
  %973 = load i8, ptr %969, align 1, !tbaa !17
  %974 = zext i8 %973 to i64
  %975 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %974
  %976 = load i8, ptr %975, align 1, !tbaa !17
  %977 = zext i8 %976 to i64
  %978 = getelementptr inbounds i8, ptr %969, i64 %977
  %979 = add i64 %971, 1
  %980 = icmp eq i64 %979, %966
  br i1 %980, label %981, label %968, !llvm.loop !101

981:                                              ; preds = %968, %964
  %982 = phi ptr [ undef, %964 ], [ %978, %968 ]
  %983 = phi ptr [ %962, %964 ], [ %978, %968 ]
  %984 = phi i64 [ %573, %964 ], [ %972, %968 ]
  %985 = icmp ult i64 %965, 3
  br i1 %985, label %1015, label %986

986:                                              ; preds = %981, %986
  %987 = phi ptr [ %1013, %986 ], [ %983, %981 ]
  %988 = phi i64 [ %1007, %986 ], [ %984, %981 ]
  %989 = load i8, ptr %987, align 1, !tbaa !17
  %990 = zext i8 %989 to i64
  %991 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %990
  %992 = load i8, ptr %991, align 1, !tbaa !17
  %993 = zext i8 %992 to i64
  %994 = getelementptr inbounds i8, ptr %987, i64 %993
  %995 = load i8, ptr %994, align 1, !tbaa !17
  %996 = zext i8 %995 to i64
  %997 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %996
  %998 = load i8, ptr %997, align 1, !tbaa !17
  %999 = zext i8 %998 to i64
  %1000 = getelementptr inbounds i8, ptr %994, i64 %999
  %1001 = load i8, ptr %1000, align 1, !tbaa !17
  %1002 = zext i8 %1001 to i64
  %1003 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %1002
  %1004 = load i8, ptr %1003, align 1, !tbaa !17
  %1005 = zext i8 %1004 to i64
  %1006 = getelementptr inbounds i8, ptr %1000, i64 %1005
  %1007 = add i64 %988, -4
  %1008 = load i8, ptr %1006, align 1, !tbaa !17
  %1009 = zext i8 %1008 to i64
  %1010 = getelementptr inbounds [0 x i8], ptr @PL_utf8skip, i64 0, i64 %1009
  %1011 = load i8, ptr %1010, align 1, !tbaa !17
  %1012 = zext i8 %1011 to i64
  %1013 = getelementptr inbounds i8, ptr %1006, i64 %1012
  %1014 = icmp eq i64 %1007, 0
  br i1 %1014, label %1015, label %986, !llvm.loop !103

1015:                                             ; preds = %981, %986, %958
  %1016 = phi ptr [ %962, %958 ], [ %982, %981 ], [ %1013, %986 ]
  %1017 = ptrtoint ptr %1016 to i64
  %1018 = ptrtoint ptr %962 to i64
  %1019 = sub i64 %1017, %1018
  br label %1020

1020:                                             ; preds = %956, %957, %1015, %953
  %1021 = phi ptr [ %940, %957 ], [ %960, %1015 ], [ %940, %956 ], [ %955, %953 ]
  %1022 = phi i64 [ %573, %957 ], [ %1019, %1015 ], [ %573, %956 ], [ %573, %953 ]
  %1023 = phi i8 [ %578, %957 ], [ 1, %1015 ], [ %578, %956 ], [ %578, %953 ]
  %1024 = phi ptr [ %934, %957 ], [ %934, %1015 ], [ %934, %956 ], [ %954, %953 ]
  %1025 = phi ptr [ null, %957 ], [ null, %1015 ], [ null, %956 ], [ %954, %953 ]
  %1026 = phi i64 [ 0, %957 ], [ %530, %1015 ], [ 0, %956 ], [ 0, %953 ]
  %1027 = load i64, ptr %3, align 8
  %1028 = add i64 %1027, %530
  %1029 = select i1 %935, i64 %1028, i64 %1026
  %1030 = icmp eq i64 %1029, 0
  br i1 %1030, label %1055, label %1031

1031:                                             ; preds = %1020
  %1032 = getelementptr inbounds %struct.sv, ptr %1021, i64 0, i32 2
  %1033 = load i32, ptr %1032, align 4, !tbaa !49
  %1034 = and i32 %1033, 268435456
  %1035 = icmp eq i32 %1034, 0
  %1036 = load ptr, ptr %1021, align 8, !tbaa !72
  br i1 %1035, label %1042, label %1037

1037:                                             ; preds = %1031
  %1038 = getelementptr inbounds %struct.xpv, ptr %1036, i64 0, i32 2
  %1039 = load i64, ptr %1038, align 8, !tbaa !53
  %1040 = add i64 %1029, 1
  %1041 = add i64 %1040, %1039
  br label %1050

1042:                                             ; preds = %1031
  %1043 = getelementptr inbounds %struct.xpv, ptr %1036, i64 0, i32 3
  %1044 = load i64, ptr %1043, align 8, !tbaa !17
  %1045 = getelementptr inbounds %struct.xpv, ptr %1036, i64 0, i32 2
  %1046 = load i64, ptr %1045, align 8, !tbaa !53
  %1047 = add i64 %1029, 1
  %1048 = add i64 %1047, %1046
  %1049 = icmp ult i64 %1044, %1048
  br i1 %1049, label %1050, label %1055

1050:                                             ; preds = %1037, %1042
  %1051 = phi i64 [ %1041, %1037 ], [ %1048, %1042 ]
  %1052 = call ptr @Perl_sv_grow(ptr noundef nonnull %1021, i64 noundef %1051) #17
  %1053 = load ptr, ptr @PL_formtarget, align 8, !tbaa !6
  %1054 = load i64, ptr %3, align 8, !tbaa !59
  br label %1055

1055:                                             ; preds = %1042, %1050, %1020
  %1056 = phi i64 [ %1027, %1042 ], [ %1054, %1050 ], [ %1027, %1020 ]
  %1057 = phi ptr [ %1021, %1042 ], [ %1053, %1050 ], [ %1021, %1020 ]
  %1058 = getelementptr inbounds %struct.sv, ptr %1057, i64 0, i32 3
  %1059 = load ptr, ptr %1058, align 8, !tbaa !17
  %1060 = load ptr, ptr %1057, align 8, !tbaa !72
  %1061 = getelementptr inbounds %struct.xpv, ptr %1060, i64 0, i32 2
  %1062 = load i64, ptr %1061, align 8, !tbaa !53
  %1063 = getelementptr inbounds i8, ptr %1059, i64 %1062
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %1063, ptr align 1 %1024, i64 %1056, i1 false)
  %1064 = load i64, ptr %3, align 8, !tbaa !59
  br i1 %935, label %1085, label %1065

1065:                                             ; preds = %1055
  %1066 = getelementptr inbounds i8, ptr %1063, i64 %1064
  %1067 = icmp sgt i64 %1064, 0
  br i1 %1067, label %1068, label %1085

1068:                                             ; preds = %1065, %1080
  %1069 = phi ptr [ %1081, %1080 ], [ %1063, %1065 ]
  %1070 = load i8, ptr %1069, align 1, !tbaa !17
  br i1 %936, label %1071, label %1073

1071:                                             ; preds = %1068
  %1072 = icmp eq i8 %1070, 126
  br i1 %1072, label %1079, label %1080

1073:                                             ; preds = %1068
  %1074 = zext i8 %1070 to i64
  %1075 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %1074
  %1076 = load i32, ptr %1075, align 4, !tbaa !31
  %1077 = and i32 %1076, 24576
  %1078 = icmp eq i32 %1077, 24576
  br i1 %1078, label %1079, label %1080

1079:                                             ; preds = %1073, %1071
  store i8 32, ptr %1069, align 1, !tbaa !17
  br label %1080

1080:                                             ; preds = %1079, %1073, %1071
  %1081 = getelementptr inbounds i8, ptr %1069, i64 1
  %1082 = icmp ult ptr %1081, %1066
  br i1 %1082, label %1068, label %1083, !llvm.loop !104

1083:                                             ; preds = %1080
  %1084 = load i64, ptr %3, align 8, !tbaa !59
  br label %1085

1085:                                             ; preds = %1083, %1065, %1055
  %1086 = phi i64 [ %1084, %1083 ], [ %1064, %1065 ], [ %1064, %1055 ]
  %1087 = getelementptr inbounds i8, ptr %1063, i64 %1086
  %1088 = load ptr, ptr @PL_formtarget, align 8, !tbaa !6
  %1089 = load ptr, ptr %1088, align 8, !tbaa !72
  %1090 = getelementptr inbounds %struct.xpv, ptr %1089, i64 0, i32 2
  %1091 = load i64, ptr %1090, align 8, !tbaa !53
  %1092 = add i64 %1091, %1086
  store i64 %1092, ptr %1090, align 8, !tbaa !53
  %1093 = icmp eq ptr %1025, null
  br i1 %1093, label %1130, label %1094

1094:                                             ; preds = %1085
  call void @Perl_safesysfree(ptr noundef nonnull %1025) #17
  br label %1130

1095:                                             ; preds = %569
  %1096 = load i32, ptr %586, align 4, !tbaa !31
  %1097 = and i32 %1096, 536870912
  %1098 = icmp eq i32 %1097, 0
  %1099 = select i1 %1098, ptr @.str.3, ptr @.str.2
  br label %1105

1100:                                             ; preds = %569
  %1101 = load i32, ptr %586, align 4, !tbaa !31
  %1102 = and i32 %1101, 536870912
  %1103 = icmp eq i32 %1102, 0
  %1104 = select i1 %1103, ptr @.str.5, ptr @.str.4
  br label %1105

1105:                                             ; preds = %1100, %1095
  %1106 = phi ptr [ %1104, %1100 ], [ %1099, %1095 ]
  %1107 = phi i32 [ %1101, %1100 ], [ %1096, %1095 ]
  %1108 = getelementptr inbounds i32, ptr %584, i64 2
  %1109 = and i32 %1107, 1073741824
  %1110 = icmp eq i32 %1109, 0
  %1111 = getelementptr inbounds %struct.sv, ptr %581, i64 0, i32 2
  %1112 = load i32, ptr %1111, align 4, !tbaa !49
  br i1 %1110, label %1147, label %1113

1113:                                             ; preds = %1105
  %1114 = and i32 %1112, 65280
  %1115 = icmp ne i32 %1114, 0
  %1116 = and i32 %1112, 255
  %1117 = icmp eq i32 %1116, 8
  %1118 = or i1 %1115, %1117
  %1119 = and i32 %1112, 16826623
  %1120 = icmp eq i32 %1119, 16777226
  %1121 = or i1 %1120, %1118
  br i1 %1121, label %1147, label %1122

1122:                                             ; preds = %1113
  %1123 = icmp eq i32 %574, 0
  br i1 %1123, label %1130, label %1124

1124:                                             ; preds = %1122
  %1125 = zext i32 %574 to i64
  call void @llvm.memset.p0.i64(ptr align 1 %583, i8 32, i64 %1125, i1 false), !tbaa !17
  %1126 = add i32 %574, -1
  %1127 = zext i32 %1126 to i64
  %1128 = getelementptr i8, ptr %583, i64 1
  %1129 = getelementptr i8, ptr %1128, i64 %1127
  br label %1130

1130:                                             ; preds = %1124, %1246, %827, %813, %1122, %1244, %822, %811, %899, %1310, %1345, %1085, %1094, %866, %862, %1288, %1285, %820, %809, %637, %644, %649, %569, %1279, %1252, %794, %707, %622, %588
  %1131 = phi i32 [ %570, %569 ], [ %570, %1285 ], [ %1293, %1288 ], [ %570, %1279 ], [ %570, %1252 ], [ %570, %820 ], [ %570, %809 ], [ %570, %794 ], [ %570, %707 ], [ %570, %649 ], [ %570, %644 ], [ %570, %637 ], [ %570, %622 ], [ %595, %588 ], [ %570, %862 ], [ %570, %866 ], [ %929, %1094 ], [ %929, %1085 ], [ %570, %1345 ], [ %570, %1310 ], [ %570, %899 ], [ %570, %811 ], [ %570, %822 ], [ %570, %1244 ], [ %570, %1122 ], [ %570, %813 ], [ %570, %827 ], [ %570, %1246 ], [ %570, %1124 ]
  %1132 = phi i8 [ %571, %569 ], [ %571, %1285 ], [ %571, %1288 ], [ %571, %1279 ], [ %571, %1252 ], [ %571, %820 ], [ %571, %809 ], [ %571, %794 ], [ %571, %707 ], [ %571, %649 ], [ %571, %644 ], [ %571, %637 ], [ %571, %622 ], [ %571, %588 ], [ %571, %862 ], [ %571, %866 ], [ %930, %1094 ], [ %930, %1085 ], [ %571, %1345 ], [ %571, %1310 ], [ %870, %899 ], [ %571, %811 ], [ %571, %822 ], [ %571, %1244 ], [ %571, %1122 ], [ %571, %813 ], [ %571, %827 ], [ %571, %1246 ], [ %571, %1124 ]
  %1133 = phi ptr [ %572, %569 ], [ %572, %1285 ], [ %572, %1288 ], [ %572, %1279 ], [ %572, %1252 ], [ %572, %820 ], [ %572, %809 ], [ %803, %794 ], [ %710, %707 ], [ %572, %649 ], [ %572, %644 ], [ %572, %637 ], [ %572, %622 ], [ %572, %588 ], [ %572, %862 ], [ %572, %866 ], [ %931, %1094 ], [ %931, %1085 ], [ %572, %1345 ], [ %572, %1310 ], [ %890, %899 ], [ %572, %811 ], [ %572, %822 ], [ %572, %1244 ], [ %572, %1122 ], [ %572, %813 ], [ %572, %827 ], [ %572, %1246 ], [ %572, %1124 ]
  %1134 = phi i64 [ %573, %569 ], [ %573, %1285 ], [ %573, %1288 ], [ %573, %1279 ], [ %573, %1252 ], [ %573, %820 ], [ %573, %809 ], [ %573, %794 ], [ %573, %707 ], [ %573, %649 ], [ %573, %644 ], [ %573, %637 ], [ %573, %622 ], [ %594, %588 ], [ %573, %862 ], [ %573, %866 ], [ %1022, %1094 ], [ %1022, %1085 ], [ %573, %1345 ], [ %573, %1310 ], [ %573, %899 ], [ %573, %811 ], [ %573, %822 ], [ %573, %1244 ], [ %573, %1122 ], [ %573, %813 ], [ %573, %827 ], [ %573, %1246 ], [ %573, %1124 ]
  %1135 = phi i32 [ %574, %569 ], [ %574, %1285 ], [ %574, %1288 ], [ %574, %1279 ], [ %574, %1252 ], [ %574, %820 ], [ %574, %809 ], [ %574, %794 ], [ %574, %707 ], [ %629, %649 ], [ %629, %644 ], [ %629, %637 ], [ %574, %622 ], [ %574, %588 ], [ %574, %862 ], [ %574, %866 ], [ %574, %1094 ], [ %574, %1085 ], [ %1325, %1345 ], [ %574, %1310 ], [ %574, %899 ], [ %579, %811 ], [ %825, %822 ], [ 0, %1244 ], [ 0, %1122 ], [ %579, %813 ], [ %825, %827 ], [ %574, %1246 ], [ %574, %1124 ]
  %1136 = phi i8 [ %575, %569 ], [ %575, %1285 ], [ %575, %1288 ], [ %575, %1279 ], [ 1, %1252 ], [ %575, %820 ], [ %575, %809 ], [ %795, %794 ], [ %708, %707 ], [ %575, %649 ], [ %575, %644 ], [ %575, %637 ], [ %575, %622 ], [ 0, %588 ], [ %575, %862 ], [ %575, %866 ], [ %932, %1094 ], [ %932, %1085 ], [ %575, %1345 ], [ %575, %1310 ], [ %575, %899 ], [ %575, %811 ], [ %575, %822 ], [ 1, %1244 ], [ %575, %1122 ], [ %575, %813 ], [ %575, %827 ], [ 1, %1246 ], [ %575, %1124 ]
  %1137 = phi i32 [ %576, %569 ], [ %576, %1285 ], [ %576, %1288 ], [ %576, %1279 ], [ %576, %1252 ], [ %576, %820 ], [ %576, %809 ], [ %808, %794 ], [ %714, %707 ], [ %576, %649 ], [ %576, %644 ], [ %576, %637 ], [ %576, %622 ], [ %576, %588 ], [ %576, %862 ], [ %576, %866 ], [ %576, %1094 ], [ %576, %1085 ], [ %576, %1345 ], [ %576, %1310 ], [ %576, %899 ], [ %576, %811 ], [ %576, %822 ], [ %576, %1244 ], [ %576, %1122 ], [ %576, %813 ], [ %576, %827 ], [ %576, %1246 ], [ %576, %1124 ]
  %1138 = phi i8 [ %577, %569 ], [ %577, %1285 ], [ %577, %1288 ], [ %577, %1279 ], [ %577, %1252 ], [ %577, %820 ], [ %577, %809 ], [ %745, %794 ], [ %681, %707 ], [ %577, %649 ], [ %577, %644 ], [ %577, %637 ], [ %577, %622 ], [ %577, %588 ], [ %577, %862 ], [ %577, %866 ], [ %933, %1094 ], [ %933, %1085 ], [ %577, %1345 ], [ %577, %1310 ], [ %901, %899 ], [ %577, %811 ], [ %577, %822 ], [ %577, %1244 ], [ %577, %1122 ], [ %577, %813 ], [ %577, %827 ], [ %577, %1246 ], [ %577, %1124 ]
  %1139 = phi i8 [ %578, %569 ], [ %578, %1285 ], [ %578, %1288 ], [ %578, %1279 ], [ %578, %1252 ], [ %578, %820 ], [ %578, %809 ], [ %578, %794 ], [ %578, %707 ], [ %578, %649 ], [ %578, %644 ], [ %578, %637 ], [ %578, %622 ], [ %578, %588 ], [ %578, %862 ], [ %578, %866 ], [ %1023, %1094 ], [ %1023, %1085 ], [ %578, %1345 ], [ %578, %1310 ], [ %578, %899 ], [ %578, %811 ], [ %578, %822 ], [ %578, %1244 ], [ %578, %1122 ], [ %578, %813 ], [ %578, %827 ], [ %578, %1246 ], [ %578, %1124 ]
  %1140 = phi i32 [ %579, %569 ], [ %579, %1285 ], [ %579, %1288 ], [ %579, %1279 ], [ %579, %1252 ], [ %574, %820 ], [ %579, %809 ], [ %804, %794 ], [ %709, %707 ], [ %579, %649 ], [ %579, %644 ], [ %579, %637 ], [ %579, %622 ], [ %579, %588 ], [ %579, %862 ], [ %579, %866 ], [ %579, %1094 ], [ %579, %1085 ], [ %579, %1345 ], [ %579, %1310 ], [ %579, %899 ], [ %579, %811 ], [ %579, %822 ], [ %579, %1244 ], [ %579, %1122 ], [ %579, %813 ], [ %579, %827 ], [ %579, %1246 ], [ %579, %1124 ]
  %1141 = phi ptr [ %580, %569 ], [ %580, %1285 ], [ %580, %1288 ], [ %580, %1279 ], [ %580, %1252 ], [ %580, %820 ], [ %580, %809 ], [ %733, %794 ], [ %669, %707 ], [ %580, %649 ], [ %580, %644 ], [ %580, %637 ], [ %580, %622 ], [ %580, %588 ], [ %580, %862 ], [ %580, %866 ], [ %937, %1094 ], [ %937, %1085 ], [ %580, %1345 ], [ %580, %1310 ], [ %889, %899 ], [ %580, %811 ], [ %580, %822 ], [ %580, %1244 ], [ %580, %1122 ], [ %580, %813 ], [ %580, %827 ], [ %580, %1246 ], [ %580, %1124 ]
  %1142 = phi ptr [ %581, %569 ], [ %581, %1285 ], [ %581, %1288 ], [ %581, %1279 ], [ %581, %1252 ], [ %581, %820 ], [ %581, %809 ], [ %581, %794 ], [ %581, %707 ], [ %638, %649 ], [ %638, %644 ], [ %638, %637 ], [ %581, %622 ], [ %581, %588 ], [ %581, %862 ], [ %581, %866 ], [ %581, %1094 ], [ %581, %1085 ], [ %581, %1345 ], [ %581, %1310 ], [ %581, %899 ], [ %581, %811 ], [ %581, %822 ], [ %581, %1244 ], [ %581, %1122 ], [ %581, %813 ], [ %581, %827 ], [ %581, %1246 ], [ %581, %1124 ]
  %1143 = phi ptr [ %582, %569 ], [ %582, %1285 ], [ %582, %1288 ], [ %1267, %1279 ], [ %582, %1252 ], [ %582, %820 ], [ %582, %809 ], [ %582, %794 ], [ %582, %707 ], [ %631, %649 ], [ %631, %644 ], [ %631, %637 ], [ %626, %622 ], [ %582, %588 ], [ %582, %862 ], [ %582, %866 ], [ %938, %1094 ], [ %938, %1085 ], [ %582, %1345 ], [ %582, %1310 ], [ %582, %899 ], [ %582, %811 ], [ %582, %822 ], [ %582, %1244 ], [ %582, %1122 ], [ %582, %813 ], [ %582, %827 ], [ %582, %1246 ], [ %582, %1124 ]
  %1144 = phi ptr [ %583, %569 ], [ %583, %1285 ], [ %1292, %1288 ], [ %1280, %1279 ], [ %1265, %1252 ], [ %583, %820 ], [ %583, %809 ], [ %583, %794 ], [ %583, %707 ], [ %583, %649 ], [ %583, %644 ], [ %583, %637 ], [ %583, %622 ], [ %583, %588 ], [ %583, %862 ], [ %583, %866 ], [ %1087, %1094 ], [ %1087, %1085 ], [ %1326, %1345 ], [ %583, %1310 ], [ %583, %899 ], [ %583, %811 ], [ %583, %822 ], [ %583, %1244 ], [ %583, %1122 ], [ %819, %813 ], [ %832, %827 ], [ %1251, %1246 ], [ %1129, %1124 ]
  %1145 = phi ptr [ %586, %569 ], [ %1282, %1285 ], [ %1282, %1288 ], [ %586, %1279 ], [ %1108, %1252 ], [ %586, %820 ], [ %586, %809 ], [ %586, %794 ], [ %586, %707 ], [ %628, %649 ], [ %628, %644 ], [ %628, %637 ], [ %623, %622 ], [ %586, %588 ], [ %586, %862 ], [ %586, %866 ], [ %939, %1094 ], [ %939, %1085 ], [ %586, %1345 ], [ %586, %1310 ], [ %586, %899 ], [ %586, %811 ], [ %586, %822 ], [ %1108, %1244 ], [ %1108, %1122 ], [ %586, %813 ], [ %586, %827 ], [ %1108, %1246 ], [ %1108, %1124 ]
  %1146 = phi ptr [ %585, %569 ], [ %585, %1285 ], [ %585, %1288 ], [ %585, %1279 ], [ %585, %1252 ], [ %585, %820 ], [ %585, %809 ], [ %585, %794 ], [ %585, %707 ], [ %639, %649 ], [ %639, %644 ], [ %639, %637 ], [ %585, %622 ], [ %585, %588 ], [ %585, %862 ], [ %585, %866 ], [ %585, %1094 ], [ %585, %1085 ], [ %585, %1345 ], [ %585, %1310 ], [ %585, %899 ], [ %585, %811 ], [ %585, %822 ], [ %585, %1244 ], [ %585, %1122 ], [ %585, %813 ], [ %585, %827 ], [ %585, %1246 ], [ %585, %1124 ]
  br label %569

1147:                                             ; preds = %1105, %1113
  %1148 = and i32 %1112, 2097664
  %1149 = icmp eq i32 %1148, 512
  br i1 %1149, label %1150, label %1154

1150:                                             ; preds = %1147
  %1151 = load ptr, ptr %581, align 8, !tbaa !72
  %1152 = getelementptr inbounds %struct.xpvnv, ptr %1151, i64 0, i32 5
  %1153 = load double, ptr %1152, align 8, !tbaa !17
  br label %1156

1154:                                             ; preds = %1147
  %1155 = call fast nofpclass(nan inf) double @Perl_sv_2nv_flags(ptr noundef nonnull %581, i32 noundef 2) #17
  br label %1156

1156:                                             ; preds = %1154, %1150
  %1157 = phi fast double [ %1153, %1150 ], [ %1155, %1154 ]
  %1158 = fcmp fast olt double %1157, 0.000000e+00
  %1159 = sext i1 %1158 to i32
  %1160 = shl i32 %1107, 2
  %1161 = ashr i32 %1160, 31
  %1162 = and i32 %1107, -1610612737
  %1163 = sub i32 %574, %1162
  %1164 = add i32 %1163, %1161
  %1165 = add i32 %1164, %1159
  %1166 = icmp eq i32 %1165, 0
  br i1 %1166, label %1193, label %1167

1167:                                             ; preds = %1156
  %1168 = icmp ult i32 %1165, 16
  br i1 %1168, label %1190, label %1169

1169:                                             ; preds = %1167
  %1170 = and i32 %1165, -16
  %1171 = and i32 %1165, 15
  br label %1172

1172:                                             ; preds = %1172, %1169
  %1173 = phi i32 [ 0, %1169 ], [ %1182, %1172 ]
  %1174 = phi <4 x double> [ <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1169 ], [ %1178, %1172 ]
  %1175 = phi <4 x double> [ <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1169 ], [ %1179, %1172 ]
  %1176 = phi <4 x double> [ <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1169 ], [ %1180, %1172 ]
  %1177 = phi <4 x double> [ <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1169 ], [ %1181, %1172 ]
  %1178 = fmul fast <4 x double> %1174, <double 1.000000e+01, double 1.000000e+01, double 1.000000e+01, double 1.000000e+01>
  %1179 = fmul fast <4 x double> %1175, <double 1.000000e+01, double 1.000000e+01, double 1.000000e+01, double 1.000000e+01>
  %1180 = fmul fast <4 x double> %1176, <double 1.000000e+01, double 1.000000e+01, double 1.000000e+01, double 1.000000e+01>
  %1181 = fmul fast <4 x double> %1177, <double 1.000000e+01, double 1.000000e+01, double 1.000000e+01, double 1.000000e+01>
  %1182 = add nuw i32 %1173, 16
  %1183 = icmp eq i32 %1182, %1170
  br i1 %1183, label %1184, label %1172, !llvm.loop !105

1184:                                             ; preds = %1172
  %1185 = fmul fast <4 x double> %1179, %1178
  %1186 = fmul fast <4 x double> %1180, %1185
  %1187 = fmul fast <4 x double> %1181, %1186
  %1188 = call fast double @llvm.vector.reduce.fmul.v4f64(double 1.000000e+00, <4 x double> %1187)
  %1189 = icmp eq i32 %1165, %1170
  br i1 %1189, label %1193, label %1190

1190:                                             ; preds = %1167, %1184
  %1191 = phi i32 [ %1165, %1167 ], [ %1171, %1184 ]
  %1192 = phi double [ 1.000000e+00, %1167 ], [ %1188, %1184 ]
  br label %1222

1193:                                             ; preds = %1222, %1184, %1156
  %1194 = phi double [ 1.000000e+00, %1156 ], [ %1188, %1184 ], [ %1226, %1222 ]
  %1195 = icmp eq i32 %1162, 0
  br i1 %1195, label %1234, label %1196

1196:                                             ; preds = %1193
  %1197 = icmp ult i32 %1162, 16
  br i1 %1197, label %1219, label %1198

1198:                                             ; preds = %1196
  %1199 = and i32 %1107, 15
  %1200 = sub i32 %1162, %1199
  br label %1201

1201:                                             ; preds = %1201, %1198
  %1202 = phi i32 [ 0, %1198 ], [ %1211, %1201 ]
  %1203 = phi <4 x double> [ <double 5.000000e-01, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1198 ], [ %1207, %1201 ]
  %1204 = phi <4 x double> [ <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1198 ], [ %1208, %1201 ]
  %1205 = phi <4 x double> [ <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1198 ], [ %1209, %1201 ]
  %1206 = phi <4 x double> [ <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, %1198 ], [ %1210, %1201 ]
  %1207 = fmul fast <4 x double> %1203, <double 1.000000e-01, double 1.000000e-01, double 1.000000e-01, double 1.000000e-01>
  %1208 = fmul fast <4 x double> %1204, <double 1.000000e-01, double 1.000000e-01, double 1.000000e-01, double 1.000000e-01>
  %1209 = fmul fast <4 x double> %1205, <double 1.000000e-01, double 1.000000e-01, double 1.000000e-01, double 1.000000e-01>
  %1210 = fmul fast <4 x double> %1206, <double 1.000000e-01, double 1.000000e-01, double 1.000000e-01, double 1.000000e-01>
  %1211 = add nuw i32 %1202, 16
  %1212 = icmp eq i32 %1211, %1200
  br i1 %1212, label %1213, label %1201, !llvm.loop !108

1213:                                             ; preds = %1201
  %1214 = fmul fast <4 x double> %1208, %1207
  %1215 = fmul fast <4 x double> %1209, %1214
  %1216 = fmul fast <4 x double> %1210, %1215
  %1217 = call fast double @llvm.vector.reduce.fmul.v4f64(double 1.000000e+00, <4 x double> %1216)
  %1218 = icmp eq i32 %1199, 0
  br i1 %1218, label %1234, label %1219

1219:                                             ; preds = %1196, %1213
  %1220 = phi double [ 5.000000e-01, %1196 ], [ %1217, %1213 ]
  %1221 = phi i32 [ %1162, %1196 ], [ %1199, %1213 ]
  br label %1228

1222:                                             ; preds = %1190, %1222
  %1223 = phi i32 [ %1225, %1222 ], [ %1191, %1190 ]
  %1224 = phi double [ %1226, %1222 ], [ %1192, %1190 ]
  %1225 = add nsw i32 %1223, -1
  %1226 = fmul fast double %1224, 1.000000e+01
  %1227 = icmp eq i32 %1225, 0
  br i1 %1227, label %1193, label %1222, !llvm.loop !109

1228:                                             ; preds = %1219, %1228
  %1229 = phi double [ %1232, %1228 ], [ %1220, %1219 ]
  %1230 = phi i32 [ %1231, %1228 ], [ %1221, %1219 ]
  %1231 = add nsw i32 %1230, -1
  %1232 = fmul fast double %1229, 1.000000e-01
  %1233 = icmp eq i32 %1231, 0
  br i1 %1233, label %1234, label %1228, !llvm.loop !110

1234:                                             ; preds = %1228, %1213, %1193
  %1235 = phi double [ 5.000000e-01, %1193 ], [ %1217, %1213 ], [ %1232, %1228 ]
  %1236 = fcmp fast ult double %1157, 0.000000e+00
  br i1 %1236, label %1240, label %1237

1237:                                             ; preds = %1234
  %1238 = fadd fast double %1235, %1157
  %1239 = fcmp fast ult double %1238, %1194
  br i1 %1239, label %1252, label %1244

1240:                                             ; preds = %1234
  %1241 = fsub fast double %1157, %1235
  %1242 = fneg fast double %1194
  %1243 = fcmp fast ugt double %1241, %1242
  br i1 %1243, label %1252, label %1244

1244:                                             ; preds = %1240, %1237
  %1245 = icmp eq i32 %574, 0
  br i1 %1245, label %1130, label %1246

1246:                                             ; preds = %1244
  %1247 = zext i32 %574 to i64
  call void @llvm.memset.p0.i64(ptr align 1 %583, i8 35, i64 %1247, i1 false), !tbaa !17
  %1248 = add i32 %574, -1
  %1249 = zext i32 %1248 to i64
  %1250 = getelementptr i8, ptr %583, i64 1
  %1251 = getelementptr i8, ptr %1250, i64 %1249
  br label %1130

1252:                                             ; preds = %1237, %1240
  %1253 = load ptr, ptr @PL_formtarget, align 8, !tbaa !6
  %1254 = load ptr, ptr %1253, align 8, !tbaa !72
  %1255 = getelementptr inbounds %struct.xpv, ptr %1254, i64 0, i32 3
  %1256 = load i64, ptr %1255, align 8, !tbaa !17
  %1257 = getelementptr inbounds %struct.sv, ptr %1253, i64 0, i32 3
  %1258 = load ptr, ptr %1257, align 8, !tbaa !17
  %1259 = ptrtoint ptr %583 to i64
  %1260 = ptrtoint ptr %1258 to i64
  %1261 = sub i64 %1256, %1259
  %1262 = add i64 %1261, %1260
  %1263 = call i32 (ptr, i64, ptr, ...) @Perl_my_snprintf(ptr noundef %583, i64 noundef %1262, ptr noundef nonnull %1106, i32 noundef %574, i32 noundef %1162, double noundef nofpclass(nan inf) %1157) #17
  %1264 = sext i32 %574 to i64
  %1265 = getelementptr inbounds i8, ptr %583, i64 %1264
  br label %1130

1266:                                             ; preds = %569
  %1267 = getelementptr inbounds i8, ptr %582, i64 1
  %1268 = load ptr, ptr @PL_formtarget, align 8, !tbaa !6
  %1269 = getelementptr inbounds %struct.sv, ptr %1268, i64 0, i32 3
  %1270 = load ptr, ptr %1269, align 8, !tbaa !17
  %1271 = getelementptr inbounds i8, ptr %1270, i64 %573
  br label %1272

1272:                                             ; preds = %1275, %1266
  %1273 = phi ptr [ %583, %1266 ], [ %1276, %1275 ]
  %1274 = icmp ugt ptr %1273, %1271
  br i1 %1274, label %1275, label %1279

1275:                                             ; preds = %1272
  %1276 = getelementptr inbounds i8, ptr %1273, i64 -1
  %1277 = load i8, ptr %1276, align 1, !tbaa !17
  %1278 = icmp eq i8 %1277, 32
  br i1 %1278, label %1272, label %1279, !llvm.loop !111

1279:                                             ; preds = %1272, %1275
  %1280 = getelementptr inbounds i8, ptr %1273, i64 1
  store i8 10, ptr %1273, align 1, !tbaa !17
  br label %1130

1281:                                             ; preds = %569
  %1282 = getelementptr inbounds i32, ptr %584, i64 2
  %1283 = and i8 %575, 1
  %1284 = icmp eq i8 %1283, 0
  br i1 %1284, label %1288, label %1285

1285:                                             ; preds = %1281
  %1286 = load i32, ptr %586, align 4, !tbaa !31
  %1287 = icmp eq i32 %1286, 0
  br i1 %1287, label %1130, label %1349

1288:                                             ; preds = %1281
  %1289 = load ptr, ptr @PL_formtarget, align 8, !tbaa !6
  %1290 = getelementptr inbounds %struct.sv, ptr %1289, i64 0, i32 3
  %1291 = load ptr, ptr %1290, align 8, !tbaa !17
  %1292 = getelementptr inbounds i8, ptr %1291, i64 %573
  %1293 = add nsw i32 %570, -1
  br label %1130

1294:                                             ; preds = %569
  %1295 = load i64, ptr %2, align 8, !tbaa !59
  %1296 = getelementptr inbounds i8, ptr %580, i64 %1295
  %1297 = and i8 %571, 1
  %1298 = icmp eq i8 %1297, 0
  br i1 %1298, label %1310, label %1299

1299:                                             ; preds = %1294, %1299
  %1300 = phi ptr [ %1309, %1299 ], [ %572, %1294 ]
  %1301 = load i8, ptr %1300, align 1, !tbaa !17
  %1302 = zext i8 %1301 to i64
  %1303 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %1302
  %1304 = load i32, ptr %1303, align 4, !tbaa !31
  %1305 = and i32 %1304, 17408
  %1306 = icmp eq i32 %1305, 17408
  %1307 = icmp ult ptr %1300, %1296
  %1308 = select i1 %1306, i1 %1307, i1 false
  %1309 = getelementptr inbounds i8, ptr %1300, i64 1
  br i1 %1308, label %1299, label %1310, !llvm.loop !112

1310:                                             ; preds = %1299, %1294
  %1311 = phi ptr [ %572, %1294 ], [ %1300, %1299 ]
  %1312 = icmp ult ptr %1311, %1296
  br i1 %1312, label %1313, label %1130

1313:                                             ; preds = %1310
  %1314 = icmp eq i32 %574, %579
  br i1 %1314, label %1324, label %1315

1315:                                             ; preds = %1313
  %1316 = icmp sgt i32 %574, %579
  br i1 %1316, label %1317, label %1324

1317:                                             ; preds = %1315
  %1318 = xor i32 %579, -1
  %1319 = add i32 %574, %1318
  %1320 = zext i32 %1319 to i64
  %1321 = add nuw nsw i64 %1320, 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(1) %583, i8 32, i64 %1321, i1 false), !tbaa !17
  %1322 = getelementptr i8, ptr %583, i64 1
  %1323 = getelementptr i8, ptr %1322, i64 %1320
  br label %1324

1324:                                             ; preds = %1317, %1315, %1313
  %1325 = phi i32 [ %574, %1313 ], [ %579, %1315 ], [ %579, %1317 ]
  %1326 = phi ptr [ %583, %1313 ], [ %583, %1315 ], [ %1323, %1317 ]
  %1327 = getelementptr inbounds i8, ptr %1326, i64 -3
  %1328 = call i32 @strncmp(ptr noundef nonnull dereferenceable(1) %1327, ptr noundef nonnull dereferenceable(4) @.str.6, i64 noundef 3) #18
  %1329 = icmp eq i32 %1328, 0
  br i1 %1329, label %1330, label %1345

1330:                                             ; preds = %1324
  %1331 = load ptr, ptr @PL_formtarget, align 8, !tbaa !6
  %1332 = getelementptr inbounds %struct.sv, ptr %1331, i64 0, i32 3
  %1333 = load ptr, ptr %1332, align 8, !tbaa !17
  br label %1334

1334:                                             ; preds = %1330, %1337
  %1335 = phi ptr [ %1338, %1337 ], [ %1327, %1330 ]
  %1336 = icmp ugt ptr %1335, %1333
  br i1 %1336, label %1337, label %1345

1337:                                             ; preds = %1334
  %1338 = getelementptr inbounds i8, ptr %1335, i64 -1
  %1339 = load i8, ptr %1338, align 1, !tbaa !17
  %1340 = zext i8 %1339 to i64
  %1341 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %1340
  %1342 = load i32, ptr %1341, align 4, !tbaa !31
  %1343 = and i32 %1342, 17408
  %1344 = icmp eq i32 %1343, 17408
  br i1 %1344, label %1334, label %1345, !llvm.loop !113

1345:                                             ; preds = %1337, %1334, %1324
  %1346 = phi ptr [ %1327, %1324 ], [ %1335, %1334 ], [ %1335, %1337 ]
  %1347 = getelementptr inbounds i8, ptr %1346, i64 1
  store i8 46, ptr %1346, align 1, !tbaa !17
  %1348 = getelementptr inbounds i8, ptr %1346, i64 2
  store i8 46, ptr %1347, align 1, !tbaa !17
  store i8 46, ptr %1348, align 1, !tbaa !17
  br label %1130

1349:                                             ; preds = %1285, %569
  store i8 0, ptr %583, align 1, !tbaa !17
  %1350 = load ptr, ptr @PL_formtarget, align 8, !tbaa !6
  %1351 = getelementptr inbounds %struct.sv, ptr %1350, i64 0, i32 3
  %1352 = load ptr, ptr %1351, align 8, !tbaa !17
  %1353 = ptrtoint ptr %583 to i64
  %1354 = ptrtoint ptr %1352 to i64
  %1355 = sub i64 %1353, %1354
  %1356 = load ptr, ptr %1350, align 8, !tbaa !72
  %1357 = getelementptr inbounds %struct.xpv, ptr %1356, i64 0, i32 2
  store i64 %1355, ptr %1357, align 8, !tbaa !53
  %1358 = and i8 %578, 1
  %1359 = icmp eq i8 %1358, 0
  br i1 %1359, label %1364, label %1360

1360:                                             ; preds = %1349
  %1361 = getelementptr inbounds %struct.sv, ptr %1350, i64 0, i32 2
  %1362 = load i32, ptr %1361, align 4, !tbaa !49
  %1363 = or i32 %1362, 536870912
  store i32 %1363, ptr %1361, align 4, !tbaa !49
  br label %1364

1364:                                             ; preds = %1360, %1349
  %1365 = sext i32 %570 to i64
  %1366 = getelementptr inbounds %struct.xpviv, ptr %1356, i64 0, i32 4
  %1367 = load i64, ptr %1366, align 8, !tbaa !17
  %1368 = add nsw i64 %1367, %1365
  store i64 %1368, ptr %1366, align 8, !tbaa !17
  %1369 = load ptr, ptr @PL_stack_base, align 8, !tbaa !6
  %1370 = getelementptr inbounds ptr, ptr %1369, i64 %9
  %1371 = load i32, ptr %584, align 4, !tbaa !31
  %1372 = icmp eq i32 %1371, 14
  br i1 %1372, label %1373, label %1376

1373:                                             ; preds = %1364
  %1374 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %1375 = getelementptr inbounds %struct.listop, ptr %1374, i64 0, i32 7
  br label %1379

1376:                                             ; preds = %1364
  %1377 = getelementptr inbounds ptr, ptr %1370, i64 1
  store ptr @PL_sv_yes, ptr %1377, align 8, !tbaa !6
  %1378 = load ptr, ptr @PL_op, align 8, !tbaa !6
  br label %1379

1379:                                             ; preds = %1376, %1373
  %1380 = phi ptr [ %1370, %1373 ], [ %1377, %1376 ]
  %1381 = phi ptr [ %1375, %1373 ], [ %1378, %1376 ]
  store ptr %1380, ptr @PL_stack_sp, align 8
  %1382 = load ptr, ptr %1381, align 8, !tbaa !6
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #17
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #17
  ret ptr %1382
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare ptr @strchr(ptr noundef, i32 noundef) local_unnamed_addr #6

declare ptr @Perl_sv_grow(ptr noundef, i64 noundef) local_unnamed_addr #2

declare ptr @Perl_sv_2pv_flags(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

declare void @Perl_ck_warner(i32 noundef, ptr noundef, ...) local_unnamed_addr #2

declare void @Perl_sv_chop(ptr noundef, ptr noundef) local_unnamed_addr #2

declare ptr @Perl_bytes_to_utf8(ptr noundef, ptr noundef) local_unnamed_addr #2

declare nofpclass(nan inf) double @Perl_sv_2nv_flags(ptr noundef, i32 noundef) local_unnamed_addr #2

declare i32 @Perl_my_snprintf(ptr noundef, i64 noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare i32 @strncmp(ptr nocapture noundef, ptr nocapture noundef, i64 noundef) local_unnamed_addr #6

declare void @Perl_croak(ptr noundef, ...) local_unnamed_addr #2

declare ptr @Perl_mg_find(ptr noundef, i32 noundef) local_unnamed_addr #2

declare void @Perl_sv_upgrade(ptr noundef, i32 noundef) local_unnamed_addr #2

declare ptr @Perl_sv_magicext(ptr noundef, ptr noundef, i32 noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_grepstart() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !6
  %2 = load ptr, ptr @PL_stack_base, align 8, !tbaa !6
  %3 = load ptr, ptr @PL_markstack_ptr, align 8, !tbaa !6
  %4 = load i32, ptr %3, align 4, !tbaa !31
  %5 = sext i32 %4 to i64
  %6 = getelementptr inbounds ptr, ptr %2, i64 %5
  %7 = icmp eq ptr %6, %1
  br i1 %7, label %8, label %59

8:                                                ; preds = %0
  %9 = getelementptr inbounds i32, ptr %3, i64 -1
  store ptr %9, ptr @PL_markstack_ptr, align 8, !tbaa !6
  %10 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %11 = getelementptr inbounds %struct.op, ptr %10, i64 0, i32 5
  %12 = load i8, ptr %11, align 2, !tbaa !30
  %13 = and i8 %12, 3
  switch i8 %13, label %55 [
    i8 0, label %14
    i8 2, label %43
  ]

14:                                               ; preds = %8
  %15 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %16 = getelementptr inbounds %struct.stackinfo, ptr %15, i64 0, i32 1
  %17 = load ptr, ptr %16, align 8, !tbaa !14
  %18 = getelementptr inbounds %struct.stackinfo, ptr %15, i64 0, i32 4
  %19 = load i32, ptr %18, align 8, !tbaa !16
  %20 = icmp sgt i32 %19, -1
  br i1 %20, label %21, label %55

21:                                               ; preds = %14
  %22 = zext i32 %19 to i64
  br label %23

23:                                               ; preds = %31, %21
  %24 = phi i64 [ %22, %21 ], [ %32, %31 ]
  %25 = getelementptr inbounds %struct.context, ptr %17, i64 %24
  %26 = load i8, ptr %25, align 8, !tbaa !17
  %27 = and i8 %26, 15
  %28 = zext i8 %27 to i32
  switch i32 %28, label %31 [
    i32 8, label %29
    i32 10, label %34
    i32 9, label %34
  ]

29:                                               ; preds = %23
  %30 = icmp sgt i8 %26, -1
  br i1 %30, label %34, label %31

31:                                               ; preds = %29, %23
  %32 = add nsw i64 %24, -1
  %33 = icmp sgt i64 %24, 0
  br i1 %33, label %23, label %55, !llvm.loop !18

34:                                               ; preds = %29, %23, %23
  %35 = and i64 %24, 2147483648
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %37, label %55

37:                                               ; preds = %34
  %38 = and i64 %24, 4294967295
  %39 = getelementptr inbounds %struct.context, ptr %17, i64 %38, i32 0, i32 0, i32 1
  %40 = load i8, ptr %39, align 1, !tbaa !17
  switch i8 %40, label %41 [
    i8 1, label %55
    i8 2, label %43
    i8 3, label %55
  ]

41:                                               ; preds = %37
  %42 = zext i8 %40 to i32
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.14, i32 noundef %42) #17
  br label %55

43:                                               ; preds = %8, %37
  %44 = load ptr, ptr @PL_stack_max, align 8, !tbaa !6
  %45 = ptrtoint ptr %44 to i64
  %46 = ptrtoint ptr %1 to i64
  %47 = sub i64 %45, %46
  %48 = icmp slt i64 %47, 8
  br i1 %48, label %49, label %51

49:                                               ; preds = %43
  %50 = tail call ptr @Perl_stack_grow(ptr noundef %1, ptr noundef %1, i64 noundef 1) #17
  br label %51

51:                                               ; preds = %43, %49
  %52 = phi ptr [ %50, %49 ], [ %1, %43 ]
  %53 = tail call ptr @Perl_sv_newmortal() #17
  %54 = getelementptr inbounds ptr, ptr %52, i64 1
  store ptr %53, ptr %54, align 8, !tbaa !6
  tail call void @Perl_sv_setiv(ptr noundef %53, i64 noundef 0) #17
  br label %55

55:                                               ; preds = %31, %8, %37, %14, %37, %34, %41, %51
  %56 = phi ptr [ %54, %51 ], [ %1, %41 ], [ %1, %34 ], [ %1, %37 ], [ %1, %14 ], [ %1, %37 ], [ %1, %8 ], [ %1, %31 ]
  store ptr %56, ptr @PL_stack_sp, align 8, !tbaa !6
  %57 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %58 = load ptr, ptr %57, align 8, !tbaa !20
  br label %158

59:                                               ; preds = %0
  %60 = getelementptr inbounds ptr, ptr %6, i64 1
  store ptr %60, ptr @PL_stack_sp, align 8, !tbaa !6
  %61 = tail call ptr @Perl_pp_pushmark() #17
  %62 = tail call ptr @Perl_pp_pushmark() #17
  tail call void @Perl_push_scope() #17
  tail call void @Perl_save_strlen(ptr noundef nonnull @PL_tmps_floor) #17
  %63 = load i64, ptr @PL_tmps_ix, align 8, !tbaa !59
  store i64 %63, ptr @PL_tmps_floor, align 8, !tbaa !59
  %64 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %65 = getelementptr inbounds %struct.op, ptr %64, i64 0, i32 6
  %66 = load i8, ptr %65, align 1, !tbaa !10
  %67 = and i8 %66, 2
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %74, label %69

69:                                               ; preds = %59
  %70 = load ptr, ptr @PL_curpad, align 8, !tbaa !6
  %71 = getelementptr inbounds %struct.op, ptr %64, i64 0, i32 3
  %72 = load i64, ptr %71, align 8, !tbaa !40
  %73 = getelementptr inbounds ptr, ptr %70, i64 %72
  tail call void @Perl_save_sptr(ptr noundef %73) #17
  br label %86

74:                                               ; preds = %59
  %75 = load ptr, ptr @PL_defgv, align 8, !tbaa !6
  tail call void @Perl_save_gp(ptr noundef %75, i32 noundef 0) #17
  %76 = load ptr, ptr @PL_defgv, align 8, !tbaa !6
  %77 = load ptr, ptr %76, align 8, !tbaa !114
  %78 = getelementptr inbounds %struct.xpvgv, ptr %77, i64 0, i32 2
  %79 = load i64, ptr %78, align 8, !tbaa !116
  %80 = and i64 %79, -2
  store i64 %80, ptr %78, align 8, !tbaa !116
  %81 = getelementptr inbounds %struct.gv, ptr %76, i64 0, i32 3
  %82 = load ptr, ptr %81, align 8, !tbaa !17
  tail call void @Perl_save_generic_svref(ptr noundef %82) #17
  %83 = load ptr, ptr @PL_defgv, align 8, !tbaa !6
  %84 = getelementptr inbounds %struct.gv, ptr %83, i64 0, i32 3
  %85 = load ptr, ptr %84, align 8, !tbaa !17
  store ptr null, ptr %85, align 8, !tbaa !48
  br label %86

86:                                               ; preds = %74, %69
  tail call void @Perl_push_scope() #17
  tail call void @Perl_save_vptr(ptr noundef nonnull @PL_curpm) #17
  %87 = load ptr, ptr @PL_stack_base, align 8, !tbaa !6
  %88 = load ptr, ptr @PL_markstack_ptr, align 8, !tbaa !6
  %89 = load i32, ptr %88, align 4, !tbaa !31
  %90 = sext i32 %89 to i64
  %91 = getelementptr inbounds ptr, ptr %87, i64 %90
  %92 = load ptr, ptr %91, align 8, !tbaa !6
  %93 = getelementptr inbounds %struct.sv, ptr %92, i64 0, i32 2
  %94 = load i32, ptr %93, align 4, !tbaa !49
  %95 = and i32 %94, 131072
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %108, label %97

97:                                               ; preds = %86
  %98 = tail call ptr @Perl_sv_mortalcopy_flags(ptr noundef nonnull %92, i32 noundef 1538) #17
  %99 = load ptr, ptr @PL_stack_base, align 8, !tbaa !6
  %100 = load ptr, ptr @PL_markstack_ptr, align 8, !tbaa !6
  %101 = load i32, ptr %100, align 4, !tbaa !31
  %102 = sext i32 %101 to i64
  %103 = getelementptr inbounds ptr, ptr %99, i64 %102
  store ptr %98, ptr %103, align 8, !tbaa !6
  %104 = load i64, ptr @PL_tmps_floor, align 8, !tbaa !59
  %105 = add nsw i64 %104, 1
  store i64 %105, ptr @PL_tmps_floor, align 8, !tbaa !59
  %106 = getelementptr inbounds %struct.sv, ptr %98, i64 0, i32 2
  %107 = load i32, ptr %106, align 4, !tbaa !49
  br label %108

108:                                              ; preds = %97, %86
  %109 = phi i32 [ %107, %97 ], [ %94, %86 ]
  %110 = phi ptr [ %98, %97 ], [ %92, %86 ]
  %111 = getelementptr inbounds %struct.sv, ptr %110, i64 0, i32 2
  %112 = and i32 %109, -524289
  store i32 %112, ptr %111, align 4, !tbaa !49
  %113 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %114 = getelementptr inbounds %struct.op, ptr %113, i64 0, i32 6
  %115 = load i8, ptr %114, align 1, !tbaa !10
  %116 = and i8 %115, 2
  %117 = icmp eq i8 %116, 0
  br i1 %117, label %123, label %118

118:                                              ; preds = %108
  %119 = load ptr, ptr @PL_curpad, align 8, !tbaa !6
  %120 = getelementptr inbounds %struct.op, ptr %113, i64 0, i32 3
  %121 = load i64, ptr %120, align 8, !tbaa !40
  %122 = getelementptr inbounds ptr, ptr %119, i64 %121
  br label %144

123:                                              ; preds = %108
  %124 = load ptr, ptr @PL_defgv, align 8, !tbaa !6
  %125 = getelementptr inbounds %struct.gv, ptr %124, i64 0, i32 3
  %126 = load ptr, ptr %125, align 8, !tbaa !17
  %127 = load ptr, ptr %126, align 8, !tbaa !48
  %128 = icmp eq ptr %127, null
  br i1 %128, label %137, label %129

129:                                              ; preds = %123
  %130 = getelementptr inbounds %struct.sv, ptr %127, i64 0, i32 1
  %131 = load i32, ptr %130, align 8, !tbaa !41
  %132 = icmp ugt i32 %131, 1
  br i1 %132, label %133, label %135

133:                                              ; preds = %129
  %134 = add i32 %131, -1
  store i32 %134, ptr %130, align 8, !tbaa !41
  br label %137

135:                                              ; preds = %129
  tail call void @Perl_sv_free2(ptr noundef nonnull %127, i32 noundef %131) #17
  %136 = load ptr, ptr @PL_defgv, align 8, !tbaa !6
  br label %137

137:                                              ; preds = %123, %133, %135
  %138 = phi ptr [ %124, %123 ], [ %124, %133 ], [ %136, %135 ]
  %139 = getelementptr inbounds %struct.sv, ptr %110, i64 0, i32 1
  %140 = load i32, ptr %139, align 8, !tbaa !41
  %141 = add i32 %140, 1
  store i32 %141, ptr %139, align 8, !tbaa !41
  %142 = getelementptr inbounds %struct.gv, ptr %138, i64 0, i32 3
  %143 = load ptr, ptr %142, align 8, !tbaa !17
  br label %144

144:                                              ; preds = %137, %118
  %145 = phi ptr [ %143, %137 ], [ %122, %118 ]
  store ptr %110, ptr %145, align 8, !tbaa !6
  store ptr %1, ptr @PL_stack_sp, align 8, !tbaa !6
  %146 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %147 = getelementptr inbounds %struct.op, ptr %146, i64 0, i32 4
  %148 = load i16, ptr %147, align 8
  %149 = and i16 %148, 511
  %150 = icmp eq i16 %149, 171
  br i1 %150, label %151, label %154

151:                                              ; preds = %144
  %152 = tail call ptr @Perl_pp_pushmark() #17
  %153 = load ptr, ptr @PL_op, align 8, !tbaa !6
  br label %154

154:                                              ; preds = %151, %144
  %155 = phi ptr [ %153, %151 ], [ %146, %144 ]
  %156 = load ptr, ptr %155, align 8, !tbaa !20
  %157 = getelementptr inbounds %struct.logop, ptr %156, i64 0, i32 8
  br label %158

158:                                              ; preds = %154, %55
  %159 = phi ptr [ %58, %55 ], [ %157, %154 ]
  %160 = load ptr, ptr %159, align 8, !tbaa !6
  ret ptr %160
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @Perl_block_gimme() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %2 = getelementptr inbounds %struct.stackinfo, ptr %1, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !14
  %4 = getelementptr inbounds %struct.stackinfo, ptr %1, i64 0, i32 4
  %5 = load i32, ptr %4, align 8, !tbaa !16
  %6 = icmp sgt i32 %5, -1
  br i1 %6, label %7, label %34

7:                                                ; preds = %0
  %8 = zext i32 %5 to i64
  br label %9

9:                                                ; preds = %17, %7
  %10 = phi i64 [ %8, %7 ], [ %18, %17 ]
  %11 = getelementptr inbounds %struct.context, ptr %3, i64 %10
  %12 = load i8, ptr %11, align 8, !tbaa !17
  %13 = and i8 %12, 15
  %14 = zext i8 %13 to i32
  switch i32 %14, label %17 [
    i32 8, label %15
    i32 10, label %20
    i32 9, label %20
  ]

15:                                               ; preds = %9
  %16 = icmp sgt i8 %12, -1
  br i1 %16, label %20, label %17

17:                                               ; preds = %15, %9
  %18 = add nsw i64 %10, -1
  %19 = icmp sgt i64 %10, 0
  br i1 %19, label %9, label %34, !llvm.loop !18

20:                                               ; preds = %9, %9, %15
  %21 = and i64 %10, 2147483648
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %23, label %34

23:                                               ; preds = %20
  %24 = and i64 %10, 4294967295
  %25 = getelementptr inbounds %struct.context, ptr %3, i64 %24, i32 0, i32 0, i32 1
  %26 = load i8, ptr %25, align 1, !tbaa !17
  %27 = add i8 %26, -1
  %28 = icmp ult i8 %27, 3
  br i1 %28, label %31, label %29

29:                                               ; preds = %23
  %30 = zext i8 %26 to i32
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.14, i32 noundef %30) #17
  br label %34

31:                                               ; preds = %23
  %32 = zext i8 %27 to i32
  %33 = add nuw nsw i32 %32, 1
  br label %34

34:                                               ; preds = %17, %31, %0, %20, %29
  %35 = phi i32 [ 0, %29 ], [ 1, %20 ], [ 1, %0 ], [ %33, %31 ], [ 1, %17 ]
  ret i32 %35
}

declare ptr @Perl_pp_pushmark() local_unnamed_addr #2

declare void @Perl_push_scope() local_unnamed_addr #2

declare void @Perl_save_strlen(ptr noundef) local_unnamed_addr #2

declare void @Perl_save_sptr(ptr noundef) local_unnamed_addr #2

declare void @Perl_save_gp(ptr noundef, i32 noundef) local_unnamed_addr #2

declare void @Perl_save_generic_svref(ptr noundef) local_unnamed_addr #2

declare void @Perl_save_vptr(ptr noundef) local_unnamed_addr #2

declare ptr @Perl_sv_mortalcopy_flags(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_mapwhile() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !6
  %2 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %3 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 5
  %4 = load i8, ptr %3, align 2, !tbaa !30
  %5 = and i8 %4, 3
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %0
  %8 = zext i8 %5 to i32
  br label %43

9:                                                ; preds = %0
  %10 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %11 = getelementptr inbounds %struct.stackinfo, ptr %10, i64 0, i32 1
  %12 = load ptr, ptr %11, align 8, !tbaa !14
  %13 = getelementptr inbounds %struct.stackinfo, ptr %10, i64 0, i32 4
  %14 = load i32, ptr %13, align 8, !tbaa !16
  %15 = icmp sgt i32 %14, -1
  br i1 %15, label %16, label %43

16:                                               ; preds = %9
  %17 = zext i32 %14 to i64
  br label %18

18:                                               ; preds = %26, %16
  %19 = phi i64 [ %17, %16 ], [ %27, %26 ]
  %20 = getelementptr inbounds %struct.context, ptr %12, i64 %19
  %21 = load i8, ptr %20, align 8, !tbaa !17
  %22 = and i8 %21, 15
  %23 = zext i8 %22 to i32
  switch i32 %23, label %26 [
    i32 8, label %24
    i32 10, label %29
    i32 9, label %29
  ]

24:                                               ; preds = %18
  %25 = icmp sgt i8 %21, -1
  br i1 %25, label %29, label %26

26:                                               ; preds = %24, %18
  %27 = add nsw i64 %19, -1
  %28 = icmp sgt i64 %19, 0
  br i1 %28, label %18, label %43, !llvm.loop !18

29:                                               ; preds = %24, %18, %18
  %30 = and i64 %19, 2147483648
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %32, label %43

32:                                               ; preds = %29
  %33 = and i64 %19, 4294967295
  %34 = getelementptr inbounds %struct.context, ptr %12, i64 %33, i32 0, i32 0, i32 1
  %35 = load i8, ptr %34, align 1, !tbaa !17
  %36 = add i8 %35, -1
  %37 = icmp ult i8 %36, 3
  br i1 %37, label %40, label %38

38:                                               ; preds = %32
  %39 = zext i8 %35 to i32
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.14, i32 noundef %39) #17
  br label %43

40:                                               ; preds = %32
  %41 = zext i8 %36 to i32
  %42 = add nuw nsw i32 %41, 1
  br label %43

43:                                               ; preds = %26, %40, %38, %29, %9, %7
  %44 = phi i32 [ %8, %7 ], [ 0, %38 ], [ 1, %29 ], [ 1, %9 ], [ %42, %40 ], [ 1, %26 ]
  %45 = load ptr, ptr @PL_stack_base, align 8, !tbaa !6
  %46 = ptrtoint ptr %1 to i64
  %47 = ptrtoint ptr %45 to i64
  %48 = sub i64 %46, %47
  %49 = lshr exact i64 %48, 3
  %50 = load ptr, ptr @PL_markstack_ptr, align 8, !tbaa !6
  %51 = load i32, ptr %50, align 4, !tbaa !31
  %52 = trunc i64 %49 to i32
  %53 = sub i32 %52, %51
  %54 = getelementptr inbounds i32, ptr %50, i64 -1
  %55 = load i32, ptr %54, align 4, !tbaa !31
  %56 = add nsw i32 %55, 1
  store i32 %56, ptr %54, align 4, !tbaa !31
  %57 = icmp ne i32 %53, 0
  %58 = icmp ne i32 %44, 1
  %59 = and i1 %58, %57
  br i1 %59, label %60, label %373

60:                                               ; preds = %43
  %61 = getelementptr inbounds i32, ptr %50, i64 -2
  %62 = load i32, ptr %61, align 4, !tbaa !31
  %63 = sub nsw i32 %56, %62
  %64 = icmp sgt i32 %53, %63
  br i1 %64, label %65, label %197

65:                                               ; preds = %60
  %66 = sub nsw i32 %53, %63
  %67 = sub i32 %52, %55
  %68 = tail call i32 @llvm.smax.i32(i32 %66, i32 %67)
  %69 = load ptr, ptr @PL_stack_max, align 8, !tbaa !6
  %70 = ptrtoint ptr %69 to i64
  %71 = sub i64 %70, %46
  %72 = ashr exact i64 %71, 3
  %73 = sext i32 %68 to i64
  %74 = icmp slt i64 %72, %73
  br i1 %74, label %75, label %81

75:                                               ; preds = %65
  %76 = tail call ptr @Perl_stack_grow(ptr noundef %1, ptr noundef %1, i64 noundef %73) #17
  %77 = load ptr, ptr @PL_markstack_ptr, align 8, !tbaa !6
  %78 = getelementptr inbounds i32, ptr %77, i64 -1
  %79 = load i32, ptr %78, align 4, !tbaa !31
  %80 = load i32, ptr %77, align 4, !tbaa !31
  br label %81

81:                                               ; preds = %65, %75
  %82 = phi i32 [ %80, %75 ], [ %51, %65 ]
  %83 = phi i32 [ %79, %75 ], [ %56, %65 ]
  %84 = phi ptr [ %77, %75 ], [ %50, %65 ]
  %85 = phi ptr [ %76, %75 ], [ %1, %65 ]
  %86 = getelementptr ptr, ptr %85, i64 %73
  %87 = getelementptr inbounds i32, ptr %84, i64 -1
  %88 = add nsw i32 %83, %68
  store i32 %88, ptr %87, align 4, !tbaa !31
  %89 = add nsw i32 %82, %68
  store i32 %89, ptr %84, align 4, !tbaa !31
  %90 = icmp eq i32 %67, 0
  br i1 %90, label %197, label %91

91:                                               ; preds = %81
  %92 = xor i32 %55, -1
  %93 = add i32 %92, %52
  %94 = zext i32 %93 to i64
  %95 = add nuw nsw i64 %94, 1
  %96 = icmp ult i32 %93, 43
  br i1 %96, label %142, label %97

97:                                               ; preds = %91
  %98 = xor i32 %55, -1
  %99 = add i32 %98, %52
  %100 = zext i32 %99 to i64
  %101 = mul nsw i64 %100, -8
  %102 = getelementptr i8, ptr %86, i64 %101
  %103 = icmp ugt ptr %102, %86
  %104 = zext i32 %99 to i64
  %105 = mul nsw i64 %104, -8
  %106 = getelementptr i8, ptr %85, i64 %105
  %107 = icmp ugt ptr %106, %85
  %108 = or i1 %103, %107
  %109 = mul nsw i64 %73, -8
  %110 = icmp ult i64 %109, 128
  %111 = select i1 %108, i1 true, i1 %110
  br i1 %111, label %142, label %112

112:                                              ; preds = %97
  %113 = and i64 %95, 8589934576
  %114 = mul nsw i64 %113, -8
  %115 = getelementptr i8, ptr %86, i64 %114
  %116 = mul nsw i64 %113, -8
  %117 = getelementptr i8, ptr %85, i64 %116
  %118 = trunc i64 %113 to i32
  %119 = sub i32 %67, %118
  br label %120

120:                                              ; preds = %120, %112
  %121 = phi i64 [ 0, %112 ], [ %138, %120 ]
  %122 = mul i64 %121, -8
  %123 = getelementptr i8, ptr %86, i64 %122
  %124 = mul i64 %121, -8
  %125 = getelementptr i8, ptr %85, i64 %124
  %126 = getelementptr ptr, ptr %125, i64 -3
  %127 = load <4 x ptr>, ptr %126, align 8, !tbaa !6
  %128 = getelementptr ptr, ptr %125, i64 -7
  %129 = load <4 x ptr>, ptr %128, align 8, !tbaa !6
  %130 = getelementptr ptr, ptr %125, i64 -11
  %131 = load <4 x ptr>, ptr %130, align 8, !tbaa !6
  %132 = getelementptr ptr, ptr %125, i64 -15
  %133 = load <4 x ptr>, ptr %132, align 8, !tbaa !6
  %134 = getelementptr ptr, ptr %123, i64 -3
  store <4 x ptr> %127, ptr %134, align 8, !tbaa !6
  %135 = getelementptr ptr, ptr %123, i64 -7
  store <4 x ptr> %129, ptr %135, align 8, !tbaa !6
  %136 = getelementptr ptr, ptr %123, i64 -11
  store <4 x ptr> %131, ptr %136, align 8, !tbaa !6
  %137 = getelementptr ptr, ptr %123, i64 -15
  store <4 x ptr> %133, ptr %137, align 8, !tbaa !6
  %138 = add nuw i64 %121, 16
  %139 = icmp eq i64 %138, %113
  br i1 %139, label %140, label %120, !llvm.loop !118

140:                                              ; preds = %120
  %141 = icmp eq i64 %95, %113
  br i1 %141, label %195, label %142

142:                                              ; preds = %97, %91, %140
  %143 = phi ptr [ %86, %97 ], [ %86, %91 ], [ %115, %140 ]
  %144 = phi ptr [ %85, %97 ], [ %85, %91 ], [ %117, %140 ]
  %145 = phi i32 [ %67, %97 ], [ %67, %91 ], [ %119, %140 ]
  %146 = add nsw i32 %145, -1
  %147 = and i32 %145, 7
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %160, label %149

149:                                              ; preds = %142, %149
  %150 = phi ptr [ %157, %149 ], [ %143, %142 ]
  %151 = phi ptr [ %155, %149 ], [ %144, %142 ]
  %152 = phi i32 [ %154, %149 ], [ %145, %142 ]
  %153 = phi i32 [ %158, %149 ], [ 0, %142 ]
  %154 = add nsw i32 %152, -1
  %155 = getelementptr inbounds ptr, ptr %151, i64 -1
  %156 = load ptr, ptr %151, align 8, !tbaa !6
  %157 = getelementptr inbounds ptr, ptr %150, i64 -1
  store ptr %156, ptr %150, align 8, !tbaa !6
  %158 = add i32 %153, 1
  %159 = icmp eq i32 %158, %147
  br i1 %159, label %160, label %149, !llvm.loop !119

160:                                              ; preds = %149, %142
  %161 = phi ptr [ %143, %142 ], [ %157, %149 ]
  %162 = phi ptr [ %144, %142 ], [ %155, %149 ]
  %163 = phi i32 [ %145, %142 ], [ %154, %149 ]
  %164 = icmp ult i32 %146, 7
  br i1 %164, label %195, label %165

165:                                              ; preds = %160, %165
  %166 = phi ptr [ %193, %165 ], [ %161, %160 ]
  %167 = phi ptr [ %191, %165 ], [ %162, %160 ]
  %168 = phi i32 [ %190, %165 ], [ %163, %160 ]
  %169 = getelementptr inbounds ptr, ptr %167, i64 -1
  %170 = load ptr, ptr %167, align 8, !tbaa !6
  %171 = getelementptr inbounds ptr, ptr %166, i64 -1
  store ptr %170, ptr %166, align 8, !tbaa !6
  %172 = getelementptr inbounds ptr, ptr %167, i64 -2
  %173 = load ptr, ptr %169, align 8, !tbaa !6
  %174 = getelementptr inbounds ptr, ptr %166, i64 -2
  store ptr %173, ptr %171, align 8, !tbaa !6
  %175 = getelementptr inbounds ptr, ptr %167, i64 -3
  %176 = load ptr, ptr %172, align 8, !tbaa !6
  %177 = getelementptr inbounds ptr, ptr %166, i64 -3
  store ptr %176, ptr %174, align 8, !tbaa !6
  %178 = getelementptr inbounds ptr, ptr %167, i64 -4
  %179 = load ptr, ptr %175, align 8, !tbaa !6
  %180 = getelementptr inbounds ptr, ptr %166, i64 -4
  store ptr %179, ptr %177, align 8, !tbaa !6
  %181 = getelementptr inbounds ptr, ptr %167, i64 -5
  %182 = load ptr, ptr %178, align 8, !tbaa !6
  %183 = getelementptr inbounds ptr, ptr %166, i64 -5
  store ptr %182, ptr %180, align 8, !tbaa !6
  %184 = getelementptr inbounds ptr, ptr %167, i64 -6
  %185 = load ptr, ptr %181, align 8, !tbaa !6
  %186 = getelementptr inbounds ptr, ptr %166, i64 -6
  store ptr %185, ptr %183, align 8, !tbaa !6
  %187 = getelementptr inbounds ptr, ptr %167, i64 -7
  %188 = load ptr, ptr %184, align 8, !tbaa !6
  %189 = getelementptr inbounds ptr, ptr %166, i64 -7
  store ptr %188, ptr %186, align 8, !tbaa !6
  %190 = add nsw i32 %168, -8
  %191 = getelementptr inbounds ptr, ptr %167, i64 -8
  %192 = load ptr, ptr %187, align 8, !tbaa !6
  %193 = getelementptr inbounds ptr, ptr %166, i64 -8
  store ptr %192, ptr %189, align 8, !tbaa !6
  %194 = icmp eq i32 %190, 0
  br i1 %194, label %195, label %165, !llvm.loop !120

195:                                              ; preds = %160, %165, %140
  %196 = load ptr, ptr @PL_markstack_ptr, align 8, !tbaa !6
  br label %197

197:                                              ; preds = %195, %81, %60
  %198 = phi ptr [ %50, %60 ], [ %84, %81 ], [ %196, %195 ]
  %199 = phi ptr [ %1, %60 ], [ %86, %81 ], [ %86, %195 ]
  %200 = load ptr, ptr @PL_stack_base, align 8, !tbaa !6
  %201 = getelementptr inbounds i32, ptr %198, i64 -2
  %202 = load i32, ptr %201, align 4, !tbaa !31
  %203 = add nsw i32 %202, %53
  store i32 %203, ptr %201, align 4, !tbaa !31
  %204 = sext i32 %203 to i64
  %205 = getelementptr inbounds ptr, ptr %200, i64 %204
  %206 = getelementptr inbounds ptr, ptr %205, i64 -1
  %207 = icmp eq i32 %44, 3
  br i1 %207, label %240, label %208

208:                                              ; preds = %197
  %209 = icmp sgt i32 %53, 0
  br i1 %209, label %210, label %368

210:                                              ; preds = %208
  %211 = xor i32 %51, -1
  %212 = add i32 %211, %52
  %213 = zext i32 %212 to i64
  %214 = add nuw nsw i64 %213, 1
  %215 = icmp ult i32 %212, 15
  br i1 %215, label %236, label %216

216:                                              ; preds = %210
  %217 = and i64 %214, 8589934576
  %218 = mul nsw i64 %217, -8
  %219 = getelementptr i8, ptr %199, i64 %218
  %220 = trunc i64 %217 to i32
  %221 = sub i32 %53, %220
  %222 = mul nsw i64 %217, -8
  %223 = getelementptr i8, ptr %206, i64 %222
  br label %224

224:                                              ; preds = %224, %216
  %225 = phi i64 [ 0, %216 ], [ %232, %224 ]
  %226 = mul i64 %225, -8
  %227 = getelementptr i8, ptr %206, i64 %226
  %228 = getelementptr ptr, ptr %227, i64 -3
  store <4 x ptr> <ptr @PL_sv_undef, ptr @PL_sv_undef, ptr @PL_sv_undef, ptr @PL_sv_undef>, ptr %228, align 8, !tbaa !6
  %229 = getelementptr ptr, ptr %227, i64 -7
  store <4 x ptr> <ptr @PL_sv_undef, ptr @PL_sv_undef, ptr @PL_sv_undef, ptr @PL_sv_undef>, ptr %229, align 8, !tbaa !6
  %230 = getelementptr ptr, ptr %227, i64 -11
  store <4 x ptr> <ptr @PL_sv_undef, ptr @PL_sv_undef, ptr @PL_sv_undef, ptr @PL_sv_undef>, ptr %230, align 8, !tbaa !6
  %231 = getelementptr ptr, ptr %227, i64 -15
  store <4 x ptr> <ptr @PL_sv_undef, ptr @PL_sv_undef, ptr @PL_sv_undef, ptr @PL_sv_undef>, ptr %231, align 8, !tbaa !6
  %232 = add nuw i64 %225, 16
  %233 = icmp eq i64 %232, %217
  br i1 %233, label %234, label %224, !llvm.loop !121

234:                                              ; preds = %224
  %235 = icmp eq i64 %214, %217
  br i1 %235, label %368, label %236

236:                                              ; preds = %210, %234
  %237 = phi ptr [ %199, %210 ], [ %219, %234 ]
  %238 = phi i32 [ %53, %210 ], [ %221, %234 ]
  %239 = phi ptr [ %206, %210 ], [ %223, %234 ]
  br label %360

240:                                              ; preds = %197
  %241 = load i64, ptr @PL_tmps_ix, align 8, !tbaa !59
  %242 = sext i32 %53 to i64
  %243 = add nsw i64 %241, %242
  %244 = load i64, ptr @PL_tmps_max, align 8, !tbaa !59
  %245 = icmp slt i64 %243, %244
  br i1 %245, label %249, label %246

246:                                              ; preds = %240
  %247 = tail call i64 @Perl_tmps_grow_p(i64 noundef %243) #17
  %248 = load i64, ptr @PL_tmps_ix, align 8, !tbaa !59
  br label %249

249:                                              ; preds = %240, %246
  %250 = phi i64 [ %241, %240 ], [ %248, %246 ]
  %251 = load i64, ptr @PL_tmps_floor, align 8, !tbaa !59
  %252 = trunc i64 %251 to i32
  %253 = add i32 %252, 1
  %254 = load ptr, ptr @PL_tmps_stack, align 8, !tbaa !6
  %255 = sext i32 %253 to i64
  %256 = getelementptr inbounds ptr, ptr %254, i64 %255
  %257 = getelementptr inbounds ptr, ptr %256, i64 %242
  %258 = sub nsw i64 %250, %251
  %259 = shl i64 %258, 3
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 1 %257, ptr align 1 %256, i64 %259, i1 false)
  %260 = load i64, ptr @PL_tmps_ix, align 8, !tbaa !59
  %261 = add nsw i64 %260, %242
  store i64 %261, ptr @PL_tmps_ix, align 8, !tbaa !59
  %262 = icmp sgt i32 %53, 0
  br i1 %262, label %263, label %297

263:                                              ; preds = %249, %287
  %264 = phi i64 [ %291, %287 ], [ %255, %249 ]
  %265 = phi i32 [ %268, %287 ], [ %53, %249 ]
  %266 = phi ptr [ %269, %287 ], [ %199, %249 ]
  %267 = phi ptr [ %288, %287 ], [ %206, %249 ]
  %268 = add nsw i32 %265, -1
  %269 = getelementptr inbounds ptr, ptr %266, i64 -1
  %270 = load ptr, ptr %266, align 8, !tbaa !6
  %271 = getelementptr inbounds %struct.sv, ptr %270, i64 0, i32 2
  %272 = load i32, ptr %271, align 4, !tbaa !49
  %273 = and i32 %272, 524288
  %274 = icmp eq i32 %273, 0
  br i1 %274, label %277, label %275

275:                                              ; preds = %263
  %276 = getelementptr inbounds ptr, ptr %267, i64 -1
  store ptr %270, ptr %267, align 8, !tbaa !6
  br label %281

277:                                              ; preds = %263
  %278 = tail call ptr @Perl_sv_mortalcopy_flags(ptr noundef nonnull %270, i32 noundef 1538) #17
  %279 = getelementptr inbounds ptr, ptr %267, i64 -1
  store ptr %278, ptr %267, align 8, !tbaa !6
  %280 = icmp eq ptr %278, null
  br i1 %280, label %287, label %281

281:                                              ; preds = %275, %277
  %282 = phi ptr [ %276, %275 ], [ %279, %277 ]
  %283 = phi ptr [ %270, %275 ], [ %278, %277 ]
  %284 = getelementptr inbounds %struct.sv, ptr %283, i64 0, i32 1
  %285 = load i32, ptr %284, align 8, !tbaa !41
  %286 = add i32 %285, 1
  store i32 %286, ptr %284, align 8, !tbaa !41
  br label %287

287:                                              ; preds = %277, %281
  %288 = phi ptr [ %279, %277 ], [ %282, %281 ]
  %289 = phi ptr [ null, %277 ], [ %283, %281 ]
  %290 = load ptr, ptr @PL_tmps_stack, align 8, !tbaa !6
  %291 = add nsw i64 %264, 1
  %292 = getelementptr inbounds ptr, ptr %290, i64 %264
  store ptr %289, ptr %292, align 8, !tbaa !6
  %293 = icmp ugt i32 %265, 1
  br i1 %293, label %263, label %294, !llvm.loop !122

294:                                              ; preds = %287
  %295 = trunc i64 %291 to i32
  %296 = load i64, ptr @PL_tmps_ix, align 8, !tbaa !59
  br label %297

297:                                              ; preds = %294, %249
  %298 = phi i64 [ %261, %249 ], [ %296, %294 ]
  %299 = phi i32 [ %253, %249 ], [ %295, %294 ]
  %300 = phi ptr [ %199, %249 ], [ %269, %294 ]
  %301 = load i64, ptr @PL_tmps_floor, align 8, !tbaa !59
  %302 = add nsw i64 %301, %242
  store i64 %302, ptr @PL_tmps_floor, align 8, !tbaa !59
  %303 = icmp sgt i64 %298, %302
  br i1 %303, label %304, label %305

304:                                              ; preds = %297
  tail call void @Perl_free_tmps() #17
  br label %305

305:                                              ; preds = %304, %297
  br i1 %262, label %306, label %379

306:                                              ; preds = %305
  %307 = load ptr, ptr @PL_tmps_stack, align 8, !tbaa !6
  %308 = sext i32 %299 to i64
  %309 = xor i32 %51, -1
  %310 = add i32 %309, %52
  %311 = and i32 %53, 3
  %312 = icmp eq i32 %311, 0
  br i1 %312, label %326, label %313

313:                                              ; preds = %306, %313
  %314 = phi i64 [ %318, %313 ], [ %308, %306 ]
  %315 = phi i32 [ %317, %313 ], [ %53, %306 ]
  %316 = phi i32 [ %324, %313 ], [ 0, %306 ]
  %317 = add nsw i32 %315, -1
  %318 = add nsw i64 %314, -1
  %319 = getelementptr inbounds ptr, ptr %307, i64 %318
  %320 = load ptr, ptr %319, align 8, !tbaa !6
  %321 = getelementptr inbounds %struct.sv, ptr %320, i64 0, i32 2
  %322 = load i32, ptr %321, align 4, !tbaa !49
  %323 = or i32 %322, 524288
  store i32 %323, ptr %321, align 4, !tbaa !49
  %324 = add i32 %316, 1
  %325 = icmp eq i32 %324, %311
  br i1 %325, label %326, label %313, !llvm.loop !123

326:                                              ; preds = %313, %306
  %327 = phi i64 [ %308, %306 ], [ %318, %313 ]
  %328 = phi i32 [ %53, %306 ], [ %317, %313 ]
  %329 = icmp ult i32 %310, 3
  br i1 %329, label %379, label %330

330:                                              ; preds = %326, %330
  %331 = phi i64 [ %352, %330 ], [ %327, %326 ]
  %332 = phi i32 [ %351, %330 ], [ %328, %326 ]
  %333 = add nsw i64 %331, -1
  %334 = getelementptr inbounds ptr, ptr %307, i64 %333
  %335 = load ptr, ptr %334, align 8, !tbaa !6
  %336 = getelementptr inbounds %struct.sv, ptr %335, i64 0, i32 2
  %337 = load i32, ptr %336, align 4, !tbaa !49
  %338 = or i32 %337, 524288
  store i32 %338, ptr %336, align 4, !tbaa !49
  %339 = add nsw i64 %331, -2
  %340 = getelementptr inbounds ptr, ptr %307, i64 %339
  %341 = load ptr, ptr %340, align 8, !tbaa !6
  %342 = getelementptr inbounds %struct.sv, ptr %341, i64 0, i32 2
  %343 = load i32, ptr %342, align 4, !tbaa !49
  %344 = or i32 %343, 524288
  store i32 %344, ptr %342, align 4, !tbaa !49
  %345 = add nsw i64 %331, -3
  %346 = getelementptr inbounds ptr, ptr %307, i64 %345
  %347 = load ptr, ptr %346, align 8, !tbaa !6
  %348 = getelementptr inbounds %struct.sv, ptr %347, i64 0, i32 2
  %349 = load i32, ptr %348, align 4, !tbaa !49
  %350 = or i32 %349, 524288
  store i32 %350, ptr %348, align 4, !tbaa !49
  %351 = add nsw i32 %332, -4
  %352 = add nsw i64 %331, -4
  %353 = getelementptr inbounds ptr, ptr %307, i64 %352
  %354 = load ptr, ptr %353, align 8, !tbaa !6
  %355 = getelementptr inbounds %struct.sv, ptr %354, i64 0, i32 2
  %356 = load i32, ptr %355, align 4, !tbaa !49
  %357 = or i32 %356, 524288
  store i32 %357, ptr %355, align 4, !tbaa !49
  %358 = add i32 %332, -5
  %359 = icmp ult i32 %358, -2
  br i1 %359, label %330, label %379, !llvm.loop !124

360:                                              ; preds = %236, %360
  %361 = phi ptr [ %365, %360 ], [ %237, %236 ]
  %362 = phi i32 [ %364, %360 ], [ %238, %236 ]
  %363 = phi ptr [ %366, %360 ], [ %239, %236 ]
  %364 = add nsw i32 %362, -1
  %365 = getelementptr inbounds ptr, ptr %361, i64 -1
  %366 = getelementptr inbounds ptr, ptr %363, i64 -1
  store ptr @PL_sv_undef, ptr %363, align 8, !tbaa !6
  %367 = icmp ugt i32 %362, 1
  br i1 %367, label %360, label %368, !llvm.loop !125

368:                                              ; preds = %360, %234, %208
  %369 = phi ptr [ %199, %208 ], [ %219, %234 ], [ %365, %360 ]
  %370 = load i64, ptr @PL_tmps_ix, align 8, !tbaa !59
  %371 = load i64, ptr @PL_tmps_floor, align 8, !tbaa !59
  %372 = icmp sgt i64 %370, %371
  br i1 %372, label %377, label %379

373:                                              ; preds = %43
  %374 = load i64, ptr @PL_tmps_ix, align 8, !tbaa !59
  %375 = load i64, ptr @PL_tmps_floor, align 8, !tbaa !59
  %376 = icmp sgt i64 %374, %375
  br i1 %376, label %377, label %379

377:                                              ; preds = %373, %368
  %378 = phi ptr [ %369, %368 ], [ %1, %373 ]
  tail call void @Perl_free_tmps() #17
  br label %379

379:                                              ; preds = %326, %330, %377, %305, %373, %368
  %380 = phi ptr [ %369, %368 ], [ %1, %373 ], [ %300, %305 ], [ %378, %377 ], [ %300, %330 ], [ %300, %326 ]
  tail call void @Perl_pop_scope() #17
  %381 = load ptr, ptr @PL_markstack_ptr, align 8, !tbaa !6
  %382 = getelementptr inbounds i32, ptr %381, i64 -1
  %383 = load i32, ptr %382, align 4, !tbaa !31
  %384 = load i32, ptr %381, align 4, !tbaa !31
  %385 = icmp sgt i32 %383, %384
  br i1 %385, label %386, label %439

386:                                              ; preds = %379
  store ptr %382, ptr @PL_markstack_ptr, align 8, !tbaa !6
  tail call void @Perl_pop_scope() #17
  %387 = load ptr, ptr @PL_markstack_ptr, align 8, !tbaa !6
  %388 = getelementptr inbounds i32, ptr %387, i64 -1
  %389 = load i32, ptr %388, align 4, !tbaa !31
  %390 = add nsw i32 %389, -1
  store i32 %390, ptr %388, align 4, !tbaa !31
  %391 = getelementptr inbounds i32, ptr %387, i64 -2
  %392 = load i32, ptr %391, align 4, !tbaa !31
  %393 = sub nsw i32 %390, %392
  %394 = load ptr, ptr @PL_stack_base, align 8, !tbaa !6
  %395 = getelementptr inbounds i32, ptr %387, i64 -3
  store ptr %395, ptr @PL_markstack_ptr, align 8, !tbaa !6
  %396 = sext i32 %392 to i64
  %397 = getelementptr inbounds ptr, ptr %394, i64 %396
  %398 = trunc i32 %44 to i8
  switch i8 %398, label %436 [
    i8 2, label %399
    i8 3, label %433
  ]

399:                                              ; preds = %386
  %400 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %401 = getelementptr inbounds %struct.op, ptr %400, i64 0, i32 6
  %402 = load i8, ptr %401, align 1, !tbaa !10
  %403 = and i8 %402, 2
  %404 = icmp eq i8 %403, 0
  br i1 %404, label %409, label %405

405:                                              ; preds = %399
  %406 = tail call ptr @Perl_sv_newmortal() #17
  %407 = sext i32 %393 to i64
  tail call void @Perl_sv_setiv(ptr noundef %406, i64 noundef %407) #17
  %408 = getelementptr inbounds ptr, ptr %397, i64 1
  store ptr %406, ptr %408, align 8, !tbaa !6
  br label %436

409:                                              ; preds = %399
  %410 = load ptr, ptr @PL_curpad, align 8, !tbaa !6
  %411 = getelementptr inbounds %struct.op, ptr %400, i64 0, i32 3
  %412 = load i64, ptr %411, align 8, !tbaa !40
  %413 = getelementptr inbounds ptr, ptr %410, i64 %412
  %414 = load ptr, ptr %413, align 8, !tbaa !6
  %415 = sext i32 %393 to i64
  tail call void @Perl_sv_setiv(ptr noundef %414, i64 noundef %415) #17
  %416 = getelementptr inbounds %struct.sv, ptr %414, i64 0, i32 2
  %417 = load i32, ptr %416, align 4, !tbaa !49
  %418 = and i32 %417, 4194304
  %419 = icmp eq i32 %418, 0
  br i1 %419, label %422, label %420

420:                                              ; preds = %409
  %421 = tail call i32 @Perl_mg_set(ptr noundef nonnull %414) #17
  br label %422

422:                                              ; preds = %409, %420
  %423 = load ptr, ptr @PL_stack_max, align 8, !tbaa !6
  %424 = ptrtoint ptr %423 to i64
  %425 = ptrtoint ptr %397 to i64
  %426 = sub i64 %424, %425
  %427 = icmp slt i64 %426, 8
  br i1 %427, label %428, label %430

428:                                              ; preds = %422
  %429 = tail call ptr @Perl_stack_grow(ptr noundef %397, ptr noundef %397, i64 noundef 1) #17
  br label %430

430:                                              ; preds = %422, %428
  %431 = phi ptr [ %429, %428 ], [ %397, %422 ]
  %432 = getelementptr inbounds ptr, ptr %431, i64 1
  store ptr %414, ptr %432, align 8, !tbaa !6
  br label %436

433:                                              ; preds = %386
  %434 = sext i32 %393 to i64
  %435 = getelementptr inbounds ptr, ptr %397, i64 %434
  br label %436

436:                                              ; preds = %386, %433, %405, %430
  %437 = phi ptr [ %408, %405 ], [ %432, %430 ], [ %435, %433 ], [ %397, %386 ]
  store ptr %437, ptr @PL_stack_sp, align 8, !tbaa !6
  %438 = load ptr, ptr @PL_op, align 8, !tbaa !6
  br label %495

439:                                              ; preds = %379
  tail call void @Perl_push_scope() #17
  tail call void @Perl_save_vptr(ptr noundef nonnull @PL_curpm) #17
  %440 = load ptr, ptr @PL_stack_base, align 8, !tbaa !6
  %441 = load ptr, ptr @PL_markstack_ptr, align 8, !tbaa !6
  %442 = getelementptr inbounds i32, ptr %441, i64 -1
  %443 = load i32, ptr %442, align 4, !tbaa !31
  %444 = sext i32 %443 to i64
  %445 = getelementptr inbounds ptr, ptr %440, i64 %444
  %446 = load ptr, ptr %445, align 8, !tbaa !6
  %447 = getelementptr inbounds %struct.sv, ptr %446, i64 0, i32 2
  %448 = load i32, ptr %447, align 4, !tbaa !49
  %449 = and i32 %448, 131072
  %450 = icmp eq i32 %449, 0
  br i1 %450, label %455, label %451

451:                                              ; preds = %439
  %452 = tail call ptr @Perl_sv_mortalcopy_flags(ptr noundef nonnull %446, i32 noundef 1538) #17
  %453 = getelementptr inbounds %struct.sv, ptr %452, i64 0, i32 2
  %454 = load i32, ptr %453, align 4, !tbaa !49
  br label %455

455:                                              ; preds = %451, %439
  %456 = phi i32 [ %454, %451 ], [ %448, %439 ]
  %457 = phi ptr [ %452, %451 ], [ %446, %439 ]
  %458 = getelementptr inbounds %struct.sv, ptr %457, i64 0, i32 2
  %459 = and i32 %456, -524289
  store i32 %459, ptr %458, align 4, !tbaa !49
  %460 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %461 = getelementptr inbounds %struct.op, ptr %460, i64 0, i32 6
  %462 = load i8, ptr %461, align 1, !tbaa !10
  %463 = and i8 %462, 2
  %464 = icmp eq i8 %463, 0
  br i1 %464, label %470, label %465

465:                                              ; preds = %455
  %466 = load ptr, ptr @PL_curpad, align 8, !tbaa !6
  %467 = getelementptr inbounds %struct.op, ptr %460, i64 0, i32 3
  %468 = load i64, ptr %467, align 8, !tbaa !40
  %469 = getelementptr inbounds ptr, ptr %466, i64 %468
  br label %491

470:                                              ; preds = %455
  %471 = load ptr, ptr @PL_defgv, align 8, !tbaa !6
  %472 = getelementptr inbounds %struct.gv, ptr %471, i64 0, i32 3
  %473 = load ptr, ptr %472, align 8, !tbaa !17
  %474 = load ptr, ptr %473, align 8, !tbaa !48
  %475 = icmp eq ptr %474, null
  br i1 %475, label %484, label %476

476:                                              ; preds = %470
  %477 = getelementptr inbounds %struct.sv, ptr %474, i64 0, i32 1
  %478 = load i32, ptr %477, align 8, !tbaa !41
  %479 = icmp ugt i32 %478, 1
  br i1 %479, label %480, label %482

480:                                              ; preds = %476
  %481 = add i32 %478, -1
  store i32 %481, ptr %477, align 8, !tbaa !41
  br label %484

482:                                              ; preds = %476
  tail call void @Perl_sv_free2(ptr noundef nonnull %474, i32 noundef %478) #17
  %483 = load ptr, ptr @PL_defgv, align 8, !tbaa !6
  br label %484

484:                                              ; preds = %470, %480, %482
  %485 = phi ptr [ %471, %470 ], [ %471, %480 ], [ %483, %482 ]
  %486 = getelementptr inbounds %struct.sv, ptr %457, i64 0, i32 1
  %487 = load i32, ptr %486, align 8, !tbaa !41
  %488 = add i32 %487, 1
  store i32 %488, ptr %486, align 8, !tbaa !41
  %489 = getelementptr inbounds %struct.gv, ptr %485, i64 0, i32 3
  %490 = load ptr, ptr %489, align 8, !tbaa !17
  br label %491

491:                                              ; preds = %484, %465
  %492 = phi ptr [ %490, %484 ], [ %469, %465 ]
  store ptr %457, ptr %492, align 8, !tbaa !6
  store ptr %380, ptr @PL_stack_sp, align 8, !tbaa !6
  %493 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %494 = getelementptr inbounds %struct.logop, ptr %493, i64 0, i32 8
  br label %495

495:                                              ; preds = %491, %436
  %496 = phi ptr [ %438, %436 ], [ %494, %491 ]
  %497 = load ptr, ptr %496, align 8, !tbaa !6
  ret ptr %497
}

declare i64 @Perl_tmps_grow_p(i64 noundef) local_unnamed_addr #2

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memmove.p0.p0.i64(ptr nocapture writeonly, ptr nocapture readonly, i64, i1 immarg) #5

declare void @Perl_free_tmps() local_unnamed_addr #2

declare void @Perl_pop_scope() local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_range() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %2 = getelementptr inbounds %struct.op, ptr %1, i64 0, i32 5
  %3 = load i8, ptr %2, align 2, !tbaa !30
  %4 = and i8 %3, 3
  switch i8 %4, label %35 [
    i8 0, label %5
    i8 3, label %102
  ]

5:                                                ; preds = %0
  %6 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %7 = getelementptr inbounds %struct.stackinfo, ptr %6, i64 0, i32 1
  %8 = load ptr, ptr %7, align 8, !tbaa !14
  %9 = getelementptr inbounds %struct.stackinfo, ptr %6, i64 0, i32 4
  %10 = load i32, ptr %9, align 8, !tbaa !16
  %11 = icmp sgt i32 %10, -1
  br i1 %11, label %12, label %35

12:                                               ; preds = %5
  %13 = zext i32 %10 to i64
  br label %14

14:                                               ; preds = %22, %12
  %15 = phi i64 [ %13, %12 ], [ %23, %22 ]
  %16 = getelementptr inbounds %struct.context, ptr %8, i64 %15
  %17 = load i8, ptr %16, align 8, !tbaa !17
  %18 = and i8 %17, 15
  %19 = zext i8 %18 to i32
  switch i32 %19, label %22 [
    i32 8, label %20
    i32 10, label %25
    i32 9, label %25
  ]

20:                                               ; preds = %14
  %21 = icmp sgt i8 %17, -1
  br i1 %21, label %25, label %22

22:                                               ; preds = %20, %14
  %23 = add nsw i64 %15, -1
  %24 = icmp sgt i64 %15, 0
  br i1 %24, label %14, label %35, !llvm.loop !18

25:                                               ; preds = %20, %14, %14
  %26 = and i64 %15, 2147483648
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %28, label %35

28:                                               ; preds = %25
  %29 = and i64 %15, 4294967295
  %30 = getelementptr inbounds %struct.context, ptr %8, i64 %29, i32 0, i32 0, i32 1
  %31 = load i8, ptr %30, align 1, !tbaa !17
  switch i8 %31, label %32 [
    i8 1, label %35
    i8 2, label %35
    i8 3, label %102
  ]

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.14, i32 noundef %33) #17
  %34 = load ptr, ptr @PL_op, align 8, !tbaa !6
  br label %35

35:                                               ; preds = %22, %0, %28, %5, %28, %25, %32
  %36 = phi ptr [ %1, %0 ], [ %1, %28 ], [ %1, %5 ], [ %1, %28 ], [ %1, %25 ], [ %34, %32 ], [ %1, %22 ]
  %37 = load ptr, ptr @PL_curpad, align 8, !tbaa !6
  %38 = getelementptr inbounds %struct.op, ptr %36, i64 0, i32 3
  %39 = load i64, ptr %38, align 8, !tbaa !40
  %40 = getelementptr inbounds ptr, ptr %37, i64 %39
  %41 = load ptr, ptr %40, align 8, !tbaa !6
  store ptr %41, ptr @PL_Sv, align 8, !tbaa !6
  %42 = icmp eq ptr %41, null
  br i1 %42, label %100, label %43

43:                                               ; preds = %35
  %44 = getelementptr inbounds %struct.sv, ptr %41, i64 0, i32 2
  %45 = load i32, ptr %44, align 4, !tbaa !49
  %46 = and i32 %45, 2097152
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %50, label %48

48:                                               ; preds = %43
  %49 = tail call zeroext i1 @Perl_sv_2bool_flags(ptr noundef nonnull %41, i32 noundef 2) #17
  br i1 %49, label %97, label %100

50:                                               ; preds = %43
  %51 = and i32 %45, 65280
  %52 = icmp ne i32 %51, 0
  %53 = and i32 %45, 255
  %54 = icmp eq i32 %53, 8
  %55 = or i1 %52, %54
  %56 = and i32 %45, 16826623
  %57 = icmp eq i32 %56, 16777226
  %58 = or i1 %57, %55
  br i1 %58, label %59, label %100

59:                                               ; preds = %50
  %60 = and i32 %45, 1024
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %76, label %62

62:                                               ; preds = %59
  %63 = load ptr, ptr %41, align 8, !tbaa !72
  %64 = icmp eq ptr %63, null
  br i1 %64, label %100, label %65

65:                                               ; preds = %62
  %66 = getelementptr inbounds %struct.xpv, ptr %63, i64 0, i32 2
  %67 = load i64, ptr %66, align 8, !tbaa !53
  %68 = icmp ugt i64 %67, 1
  br i1 %68, label %97, label %69

69:                                               ; preds = %65
  %70 = icmp eq i64 %67, 0
  br i1 %70, label %100, label %71

71:                                               ; preds = %69
  %72 = getelementptr inbounds %struct.sv, ptr %41, i64 0, i32 3
  %73 = load ptr, ptr %72, align 8, !tbaa !17
  %74 = load i8, ptr %73, align 1, !tbaa !17
  %75 = icmp eq i8 %74, 48
  br i1 %75, label %100, label %97

76:                                               ; preds = %59
  %77 = and i32 %45, 768
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %95, label %79

79:                                               ; preds = %76
  %80 = and i32 %45, 256
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %87, label %82

82:                                               ; preds = %79
  %83 = load ptr, ptr %41, align 8, !tbaa !72
  %84 = getelementptr inbounds %struct.xpviv, ptr %83, i64 0, i32 4
  %85 = load i64, ptr %84, align 8, !tbaa !17
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %87, label %97

87:                                               ; preds = %82, %79
  %88 = and i32 %45, 512
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %100, label %90

90:                                               ; preds = %87
  %91 = load ptr, ptr %41, align 8, !tbaa !72
  %92 = getelementptr inbounds %struct.xpvnv, ptr %91, i64 0, i32 5
  %93 = load double, ptr %92, align 8, !tbaa !17
  %94 = fcmp une double %93, 0.000000e+00
  br i1 %94, label %97, label %100

95:                                               ; preds = %76
  %96 = tail call zeroext i1 @Perl_sv_2bool_flags(ptr noundef nonnull %41, i32 noundef 0) #17
  br i1 %96, label %97, label %100

97:                                               ; preds = %71, %95, %48, %65, %82, %90
  %98 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %99 = getelementptr inbounds %struct.logop, ptr %98, i64 0, i32 8
  br label %102

100:                                              ; preds = %90, %71, %95, %48, %50, %62, %69, %87, %35
  %101 = load ptr, ptr @PL_op, align 8, !tbaa !6
  br label %102

102:                                              ; preds = %28, %0, %100, %97
  %103 = phi ptr [ %99, %97 ], [ %101, %100 ], [ %1, %0 ], [ %1, %28 ]
  %104 = load ptr, ptr %103, align 8, !tbaa !6
  ret ptr %104
}

declare zeroext i1 @Perl_sv_2bool_flags(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_flip() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !6
  %2 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %3 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 5
  %4 = load i8, ptr %3, align 2, !tbaa !30
  %5 = and i8 %4, 3
  switch i8 %5, label %40 [
    i8 0, label %6
    i8 3, label %36
  ]

6:                                                ; preds = %0
  %7 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %8 = getelementptr inbounds %struct.stackinfo, ptr %7, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !14
  %10 = getelementptr inbounds %struct.stackinfo, ptr %7, i64 0, i32 4
  %11 = load i32, ptr %10, align 8, !tbaa !16
  %12 = icmp sgt i32 %11, -1
  br i1 %12, label %13, label %40

13:                                               ; preds = %6
  %14 = zext i32 %11 to i64
  br label %15

15:                                               ; preds = %23, %13
  %16 = phi i64 [ %14, %13 ], [ %24, %23 ]
  %17 = getelementptr inbounds %struct.context, ptr %9, i64 %16
  %18 = load i8, ptr %17, align 8, !tbaa !17
  %19 = and i8 %18, 15
  %20 = zext i8 %19 to i32
  switch i32 %20, label %23 [
    i32 8, label %21
    i32 10, label %26
    i32 9, label %26
  ]

21:                                               ; preds = %15
  %22 = icmp sgt i8 %18, -1
  br i1 %22, label %26, label %23

23:                                               ; preds = %21, %15
  %24 = add nsw i64 %16, -1
  %25 = icmp sgt i64 %16, 0
  br i1 %25, label %15, label %40, !llvm.loop !18

26:                                               ; preds = %21, %15, %15
  %27 = and i64 %16, 2147483648
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %29, label %40

29:                                               ; preds = %26
  %30 = and i64 %16, 4294967295
  %31 = getelementptr inbounds %struct.context, ptr %9, i64 %30, i32 0, i32 0, i32 1
  %32 = load i8, ptr %31, align 1, !tbaa !17
  switch i8 %32, label %33 [
    i8 1, label %40
    i8 2, label %40
    i8 3, label %36
  ]

33:                                               ; preds = %29
  %34 = zext i8 %32 to i32
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.14, i32 noundef %34) #17
  %35 = load ptr, ptr @PL_op, align 8, !tbaa !6
  br label %40

36:                                               ; preds = %0, %29
  %37 = getelementptr inbounds %struct.unop, ptr %2, i64 0, i32 7
  %38 = load ptr, ptr %37, align 8, !tbaa !126
  %39 = getelementptr inbounds %struct.logop, ptr %38, i64 0, i32 8
  br label %213

40:                                               ; preds = %23, %0, %29, %6, %29, %26, %33
  %41 = phi ptr [ %2, %0 ], [ %2, %29 ], [ %2, %6 ], [ %2, %29 ], [ %2, %26 ], [ %35, %33 ], [ %2, %23 ]
  %42 = load ptr, ptr %1, align 8, !tbaa !6
  %43 = load ptr, ptr @PL_curpad, align 8, !tbaa !6
  %44 = getelementptr inbounds %struct.op, ptr %41, i64 0, i32 3
  %45 = load i64, ptr %44, align 8, !tbaa !40
  %46 = getelementptr inbounds ptr, ptr %43, i64 %45
  %47 = load ptr, ptr %46, align 8, !tbaa !6
  %48 = getelementptr inbounds %struct.op, ptr %41, i64 0, i32 6
  %49 = load i8, ptr %48, align 1, !tbaa !10
  %50 = and i8 %49, 64
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %129, label %52

52:                                               ; preds = %40
  %53 = load ptr, ptr @PL_last_in_gv, align 8, !tbaa !6
  %54 = icmp eq ptr %53, null
  br i1 %54, label %92, label %55

55:                                               ; preds = %52
  %56 = getelementptr inbounds %struct.sv, ptr %53, i64 0, i32 2
  %57 = load i32, ptr %56, align 4, !tbaa !49
  %58 = and i32 %57, 255
  %59 = add nsw i32 %58, -9
  %60 = icmp ult i32 %59, 2
  br i1 %60, label %61, label %92

61:                                               ; preds = %55
  %62 = getelementptr inbounds %struct.gv, ptr %53, i64 0, i32 3
  %63 = load ptr, ptr %62, align 8, !tbaa !17
  %64 = icmp eq ptr %63, null
  br i1 %64, label %92, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %struct.gp, ptr %63, i64 0, i32 1
  %67 = load ptr, ptr %66, align 8, !tbaa !128
  %68 = icmp eq ptr %67, null
  br i1 %68, label %92, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %struct.sv, ptr %42, i64 0, i32 2
  %71 = load i32, ptr %70, align 4, !tbaa !49
  %72 = and i32 %71, 2097408
  %73 = icmp eq i32 %72, 256
  br i1 %73, label %74, label %78

74:                                               ; preds = %69
  %75 = load ptr, ptr %42, align 8, !tbaa !72
  %76 = getelementptr inbounds %struct.xpviv, ptr %75, i64 0, i32 4
  %77 = load i64, ptr %76, align 8, !tbaa !17
  br label %85

78:                                               ; preds = %69
  %79 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %42, i32 noundef 2) #17
  %80 = load ptr, ptr @PL_last_in_gv, align 8, !tbaa !6
  %81 = getelementptr inbounds %struct.gv, ptr %80, i64 0, i32 3
  %82 = load ptr, ptr %81, align 8, !tbaa !17
  %83 = getelementptr inbounds %struct.gp, ptr %82, i64 0, i32 1
  %84 = load ptr, ptr %83, align 8, !tbaa !128
  br label %85

85:                                               ; preds = %78, %74
  %86 = phi ptr [ %67, %74 ], [ %84, %78 ]
  %87 = phi i64 [ %77, %74 ], [ %79, %78 ]
  %88 = load ptr, ptr %86, align 8, !tbaa !129
  %89 = getelementptr inbounds %struct.xpvio, ptr %88, i64 0, i32 4
  %90 = load i64, ptr %89, align 8, !tbaa !17
  %91 = icmp eq i64 %87, %90
  br i1 %91, label %187, label %211

92:                                               ; preds = %55, %52, %61, %65
  %93 = tail call ptr @Perl_gv_fetchpvn_flags(ptr noundef nonnull @.str.9, i64 noundef 1, i32 noundef 129, i32 noundef 3) #17
  %94 = icmp eq ptr %93, null
  br i1 %94, label %211, label %95

95:                                               ; preds = %92
  %96 = getelementptr inbounds %struct.gv, ptr %93, i64 0, i32 3
  %97 = load ptr, ptr %96, align 8, !tbaa !17
  %98 = load ptr, ptr %97, align 8, !tbaa !48
  %99 = icmp eq ptr %98, null
  br i1 %99, label %211, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %struct.sv, ptr %42, i64 0, i32 2
  %102 = load i32, ptr %101, align 4, !tbaa !49
  %103 = and i32 %102, 2097408
  %104 = icmp eq i32 %103, 256
  br i1 %104, label %105, label %109

105:                                              ; preds = %100
  %106 = load ptr, ptr %42, align 8, !tbaa !72
  %107 = getelementptr inbounds %struct.xpviv, ptr %106, i64 0, i32 4
  %108 = load i64, ptr %107, align 8, !tbaa !17
  br label %113

109:                                              ; preds = %100
  %110 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %42, i32 noundef 2) #17
  %111 = load ptr, ptr %96, align 8, !tbaa !17
  %112 = load ptr, ptr %111, align 8, !tbaa !48
  br label %113

113:                                              ; preds = %109, %105
  %114 = phi ptr [ %98, %105 ], [ %112, %109 ]
  %115 = phi i64 [ %108, %105 ], [ %110, %109 ]
  %116 = getelementptr inbounds %struct.sv, ptr %114, i64 0, i32 2
  %117 = load i32, ptr %116, align 4, !tbaa !49
  %118 = and i32 %117, 2097408
  %119 = icmp eq i32 %118, 256
  br i1 %119, label %120, label %124

120:                                              ; preds = %113
  %121 = load ptr, ptr %114, align 8, !tbaa !72
  %122 = getelementptr inbounds %struct.xpviv, ptr %121, i64 0, i32 4
  %123 = load i64, ptr %122, align 8, !tbaa !17
  br label %126

124:                                              ; preds = %113
  %125 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %114, i32 noundef 2) #17
  br label %126

126:                                              ; preds = %124, %120
  %127 = phi i64 [ %123, %120 ], [ %125, %124 ]
  %128 = icmp eq i64 %115, %127
  br i1 %128, label %187, label %211

129:                                              ; preds = %40
  %130 = icmp eq ptr %42, null
  br i1 %130, label %211, label %131

131:                                              ; preds = %129
  %132 = getelementptr inbounds %struct.sv, ptr %42, i64 0, i32 2
  %133 = load i32, ptr %132, align 4, !tbaa !49
  %134 = and i32 %133, 2097152
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %138, label %136

136:                                              ; preds = %131
  %137 = tail call zeroext i1 @Perl_sv_2bool_flags(ptr noundef nonnull %42, i32 noundef 2) #17
  br i1 %137, label %187, label %211

138:                                              ; preds = %131
  %139 = and i32 %133, 65280
  %140 = icmp ne i32 %139, 0
  %141 = and i32 %133, 255
  %142 = icmp eq i32 %141, 8
  %143 = or i1 %140, %142
  %144 = and i32 %133, 16826623
  %145 = icmp eq i32 %144, 16777226
  %146 = or i1 %145, %143
  br i1 %146, label %147, label %211

147:                                              ; preds = %138
  %148 = and i32 %133, 1024
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %164, label %150

150:                                              ; preds = %147
  %151 = load ptr, ptr %42, align 8, !tbaa !72
  %152 = icmp eq ptr %151, null
  br i1 %152, label %211, label %153

153:                                              ; preds = %150
  %154 = getelementptr inbounds %struct.xpv, ptr %151, i64 0, i32 2
  %155 = load i64, ptr %154, align 8, !tbaa !53
  %156 = icmp ugt i64 %155, 1
  br i1 %156, label %190, label %157

157:                                              ; preds = %153
  %158 = icmp eq i64 %155, 0
  br i1 %158, label %211, label %159

159:                                              ; preds = %157
  %160 = getelementptr inbounds %struct.sv, ptr %42, i64 0, i32 3
  %161 = load ptr, ptr %160, align 8, !tbaa !17
  %162 = load i8, ptr %161, align 1, !tbaa !17
  %163 = icmp eq i8 %162, 48
  br i1 %163, label %211, label %187

164:                                              ; preds = %147
  %165 = and i32 %133, 768
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %183, label %167

167:                                              ; preds = %164
  %168 = and i32 %133, 256
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %175, label %170

170:                                              ; preds = %167
  %171 = load ptr, ptr %42, align 8, !tbaa !72
  %172 = getelementptr inbounds %struct.xpviv, ptr %171, i64 0, i32 4
  %173 = load i64, ptr %172, align 8, !tbaa !17
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %175, label %190

175:                                              ; preds = %170, %167
  %176 = and i32 %133, 512
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %211, label %178

178:                                              ; preds = %175
  %179 = load ptr, ptr %42, align 8, !tbaa !72
  %180 = getelementptr inbounds %struct.xpvnv, ptr %179, i64 0, i32 5
  %181 = load double, ptr %180, align 8, !tbaa !17
  %182 = fcmp uno double %181, 0.000000e+00
  br i1 %182, label %190, label %185

183:                                              ; preds = %164
  %184 = tail call zeroext i1 @Perl_sv_2bool_flags(ptr noundef nonnull %42, i32 noundef 0) #17
  br i1 %184, label %187, label %211

185:                                              ; preds = %178
  %186 = fcmp fast une double %181, 0.000000e+00
  br i1 %186, label %187, label %211

187:                                              ; preds = %159, %183, %136, %126, %85, %185
  %188 = load ptr, ptr @PL_curpad, align 8, !tbaa !6
  %189 = load ptr, ptr @PL_op, align 8, !tbaa !6
  br label %190

190:                                              ; preds = %187, %153, %170, %178
  %191 = phi ptr [ %189, %187 ], [ %41, %153 ], [ %41, %170 ], [ %41, %178 ]
  %192 = phi ptr [ %188, %187 ], [ %43, %153 ], [ %43, %170 ], [ %43, %178 ]
  %193 = getelementptr inbounds %struct.unop, ptr %191, i64 0, i32 7
  %194 = load ptr, ptr %193, align 8, !tbaa !126
  %195 = getelementptr inbounds %struct.op, ptr %194, i64 0, i32 3
  %196 = load i64, ptr %195, align 8, !tbaa !40
  %197 = getelementptr inbounds ptr, ptr %192, i64 %196
  %198 = load ptr, ptr %197, align 8, !tbaa !6
  tail call void @Perl_sv_setiv(ptr noundef %198, i64 noundef 1) #17
  %199 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %200 = getelementptr inbounds %struct.op, ptr %199, i64 0, i32 5
  %201 = load i8, ptr %200, align 2, !tbaa !30
  %202 = icmp sgt i8 %201, -1
  br i1 %202, label %205, label %203

203:                                              ; preds = %190
  tail call void @Perl_sv_setiv(ptr noundef %47, i64 noundef 1) #17
  store ptr %47, ptr %1, align 8, !tbaa !6
  store ptr %1, ptr @PL_stack_sp, align 8, !tbaa !6
  %204 = load ptr, ptr @PL_op, align 8, !tbaa !6
  br label %213

205:                                              ; preds = %190
  tail call void @Perl_sv_setiv(ptr noundef %47, i64 noundef 0) #17
  %206 = getelementptr inbounds ptr, ptr %1, i64 -1
  store ptr %206, ptr @PL_stack_sp, align 8, !tbaa !6
  %207 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %208 = getelementptr inbounds %struct.unop, ptr %207, i64 0, i32 7
  %209 = load ptr, ptr %208, align 8, !tbaa !126
  %210 = getelementptr inbounds %struct.logop, ptr %209, i64 0, i32 8
  br label %213

211:                                              ; preds = %159, %183, %136, %126, %85, %138, %150, %157, %175, %129, %92, %95, %185
  tail call void @Perl_sv_setpvn(ptr noundef %47, ptr noundef nonnull @.str.10, i64 noundef 0) #17
  store ptr %47, ptr %1, align 8, !tbaa !6
  store ptr %1, ptr @PL_stack_sp, align 8, !tbaa !6
  %212 = load ptr, ptr @PL_op, align 8, !tbaa !6
  br label %213

213:                                              ; preds = %203, %205, %211, %36
  %214 = phi ptr [ %39, %36 ], [ %204, %203 ], [ %210, %205 ], [ %212, %211 ]
  %215 = load ptr, ptr %214, align 8, !tbaa !6
  ret ptr %215
}

declare i64 @Perl_sv_2iv_flags(ptr noundef, i32 noundef) local_unnamed_addr #2

declare ptr @Perl_gv_fetchpvn_flags(ptr noundef, i64 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_flop() local_unnamed_addr #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !6
  %4 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %5 = getelementptr inbounds %struct.op, ptr %4, i64 0, i32 5
  %6 = load i8, ptr %5, align 2, !tbaa !30
  %7 = and i8 %6, 3
  switch i8 %7, label %325 [
    i8 0, label %8
    i8 3, label %38
  ]

8:                                                ; preds = %0
  %9 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %10 = getelementptr inbounds %struct.stackinfo, ptr %9, i64 0, i32 1
  %11 = load ptr, ptr %10, align 8, !tbaa !14
  %12 = getelementptr inbounds %struct.stackinfo, ptr %9, i64 0, i32 4
  %13 = load i32, ptr %12, align 8, !tbaa !16
  %14 = icmp sgt i32 %13, -1
  br i1 %14, label %15, label %325

15:                                               ; preds = %8
  %16 = zext i32 %13 to i64
  br label %17

17:                                               ; preds = %25, %15
  %18 = phi i64 [ %16, %15 ], [ %26, %25 ]
  %19 = getelementptr inbounds %struct.context, ptr %11, i64 %18
  %20 = load i8, ptr %19, align 8, !tbaa !17
  %21 = and i8 %20, 15
  %22 = zext i8 %21 to i32
  switch i32 %22, label %25 [
    i32 8, label %23
    i32 10, label %28
    i32 9, label %28
  ]

23:                                               ; preds = %17
  %24 = icmp sgt i8 %20, -1
  br i1 %24, label %28, label %25

25:                                               ; preds = %23, %17
  %26 = add nsw i64 %18, -1
  %27 = icmp sgt i64 %18, 0
  br i1 %27, label %17, label %325, !llvm.loop !18

28:                                               ; preds = %23, %17, %17
  %29 = and i64 %18, 2147483648
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %31, label %325

31:                                               ; preds = %28
  %32 = and i64 %18, 4294967295
  %33 = getelementptr inbounds %struct.context, ptr %11, i64 %32, i32 0, i32 0, i32 1
  %34 = load i8, ptr %33, align 1, !tbaa !17
  switch i8 %34, label %35 [
    i8 1, label %325
    i8 2, label %325
    i8 3, label %38
  ]

35:                                               ; preds = %31
  %36 = zext i8 %34 to i32
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.14, i32 noundef %36) #17
  %37 = load ptr, ptr @PL_op, align 8, !tbaa !6
  br label %325

38:                                               ; preds = %0, %31
  %39 = getelementptr inbounds ptr, ptr %3, i64 -1
  %40 = load ptr, ptr %3, align 8, !tbaa !6
  %41 = getelementptr inbounds ptr, ptr %3, i64 -2
  %42 = load ptr, ptr %39, align 8, !tbaa !6
  %43 = getelementptr inbounds %struct.sv, ptr %42, i64 0, i32 2
  %44 = load i32, ptr %43, align 4, !tbaa !49
  %45 = and i32 %44, 2097152
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %49, label %47

47:                                               ; preds = %38
  %48 = tail call i32 @Perl_mg_get(ptr noundef nonnull %42) #17
  br label %49

49:                                               ; preds = %38, %47
  %50 = getelementptr inbounds %struct.sv, ptr %40, i64 0, i32 2
  %51 = load i32, ptr %50, align 4, !tbaa !49
  %52 = and i32 %51, 2097152
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %56, label %54

54:                                               ; preds = %49
  %55 = tail call i32 @Perl_mg_get(ptr noundef nonnull %40) #17
  br label %56

56:                                               ; preds = %49, %54
  %57 = load i32, ptr %43, align 4, !tbaa !49
  %58 = and i32 %57, 12288
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %124

60:                                               ; preds = %56
  %61 = and i32 %57, 65280
  %62 = icmp ne i32 %61, 0
  %63 = and i32 %57, 255
  %64 = icmp eq i32 %63, 8
  %65 = or i1 %62, %64
  %66 = and i32 %57, 16826623
  %67 = icmp eq i32 %66, 16777226
  %68 = or i1 %67, %65
  %69 = and i32 %57, 16384
  %70 = icmp eq i32 %69, 0
  %71 = and i1 %70, %68
  br i1 %71, label %124, label %72

72:                                               ; preds = %60
  %73 = load i32, ptr %50, align 4, !tbaa !49
  %74 = and i32 %73, 12288
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %124

76:                                               ; preds = %72
  %77 = and i32 %73, 65280
  %78 = icmp ne i32 %77, 0
  %79 = and i32 %73, 255
  %80 = icmp eq i32 %79, 8
  %81 = or i1 %78, %80
  %82 = and i32 %73, 16826623
  %83 = icmp eq i32 %82, 16777226
  %84 = or i1 %83, %81
  br i1 %84, label %85, label %89

85:                                               ; preds = %76
  %86 = and i32 %73, 16384
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %124, label %88

88:                                               ; preds = %85
  br i1 %68, label %90, label %110

89:                                               ; preds = %76
  br i1 %68, label %90, label %96

90:                                               ; preds = %89, %88
  %91 = tail call i32 @Perl_looks_like_number(ptr noundef nonnull %42) #17
  %92 = icmp eq i32 %91, 0
  %93 = load i32, ptr %43, align 4, !tbaa !49
  br i1 %92, label %255, label %94

94:                                               ; preds = %90
  %95 = and i32 %93, 16384
  br label %96

96:                                               ; preds = %94, %89
  %97 = phi i32 [ %95, %94 ], [ %69, %89 ]
  %98 = phi i32 [ %93, %94 ], [ %57, %89 ]
  %99 = icmp eq i32 %97, 0
  br i1 %99, label %255, label %100

100:                                              ; preds = %96
  %101 = getelementptr inbounds %struct.sv, ptr %42, i64 0, i32 3
  %102 = load ptr, ptr %101, align 8, !tbaa !17
  %103 = load i8, ptr %102, align 1, !tbaa !17
  %104 = icmp eq i8 %103, 48
  br i1 %104, label %255, label %105

105:                                              ; preds = %100
  %106 = load i32, ptr %50, align 4, !tbaa !49
  %107 = and i32 %106, 65280
  %108 = and i32 %106, 255
  %109 = and i32 %106, 16826623
  br label %110

110:                                              ; preds = %105, %88
  %111 = phi i32 [ %109, %105 ], [ %82, %88 ]
  %112 = phi i32 [ %108, %105 ], [ %79, %88 ]
  %113 = phi i32 [ %107, %105 ], [ %77, %88 ]
  %114 = phi i32 [ %98, %105 ], [ %57, %88 ]
  %115 = icmp ne i32 %113, 0
  %116 = icmp eq i32 %112, 8
  %117 = or i1 %115, %116
  %118 = icmp eq i32 %111, 16777226
  %119 = or i1 %118, %117
  br i1 %119, label %120, label %124

120:                                              ; preds = %110
  %121 = tail call i32 @Perl_looks_like_number(ptr noundef nonnull %40) #17
  %122 = icmp eq i32 %121, 0
  %123 = load i32, ptr %43, align 4, !tbaa !49
  br i1 %122, label %255, label %124

124:                                              ; preds = %60, %110, %120, %85, %72, %56
  %125 = phi i32 [ %57, %60 ], [ %114, %110 ], [ %123, %120 ], [ %57, %85 ], [ %57, %72 ], [ %57, %56 ]
  %126 = and i32 %125, 65280
  %127 = icmp ne i32 %126, 0
  %128 = and i32 %125, 255
  %129 = icmp eq i32 %128, 8
  %130 = or i1 %127, %129
  %131 = and i32 %125, 16826623
  %132 = icmp eq i32 %131, 16777226
  %133 = or i1 %132, %130
  %134 = and i32 %125, 256
  %135 = icmp eq i32 %134, 0
  %136 = and i1 %135, %133
  br i1 %136, label %137, label %149

137:                                              ; preds = %124
  %138 = and i32 %125, 512
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %144, label %140

140:                                              ; preds = %137
  %141 = load ptr, ptr %42, align 8, !tbaa !72
  %142 = getelementptr inbounds %struct.xpvnv, ptr %141, i64 0, i32 5
  %143 = load double, ptr %142, align 8, !tbaa !17
  br label %146

144:                                              ; preds = %137
  %145 = tail call fast nofpclass(nan inf) double @Perl_sv_2nv_flags(ptr noundef nonnull %42, i32 noundef 0) #17
  br label %146

146:                                              ; preds = %144, %140
  %147 = phi fast double [ %143, %140 ], [ %145, %144 ]
  %148 = fcmp fast olt double %147, 0xC3E0000000000000
  br i1 %148, label %323, label %149

149:                                              ; preds = %124, %146
  %150 = load i32, ptr %50, align 4, !tbaa !49
  %151 = and i32 %150, 65280
  %152 = icmp ne i32 %151, 0
  %153 = and i32 %150, 255
  %154 = icmp eq i32 %153, 8
  %155 = or i1 %152, %154
  %156 = and i32 %150, 16826623
  %157 = icmp eq i32 %156, 16777226
  %158 = or i1 %157, %155
  br i1 %158, label %159, label %188

159:                                              ; preds = %149
  %160 = and i32 %150, 256
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %176, label %162

162:                                              ; preds = %159
  %163 = icmp sgt i32 %150, -1
  br i1 %163, label %188, label %164

164:                                              ; preds = %162
  %165 = and i32 %150, -2145386240
  %166 = icmp eq i32 %165, -2147483392
  br i1 %166, label %167, label %171

167:                                              ; preds = %164
  %168 = load ptr, ptr %40, align 8, !tbaa !72
  %169 = getelementptr inbounds %struct.xpvuv, ptr %168, i64 0, i32 4
  %170 = load i64, ptr %169, align 8, !tbaa !17
  br label %173

171:                                              ; preds = %164
  %172 = tail call i64 @Perl_sv_2uv_flags(ptr noundef nonnull %40, i32 noundef 2) #17
  br label %173

173:                                              ; preds = %171, %167
  %174 = phi i64 [ %170, %167 ], [ %172, %171 ]
  %175 = icmp slt i64 %174, 0
  br i1 %175, label %323, label %188

176:                                              ; preds = %159
  %177 = and i32 %150, 512
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %183, label %179

179:                                              ; preds = %176
  %180 = load ptr, ptr %40, align 8, !tbaa !72
  %181 = getelementptr inbounds %struct.xpvnv, ptr %180, i64 0, i32 5
  %182 = load double, ptr %181, align 8, !tbaa !17
  br label %185

183:                                              ; preds = %176
  %184 = tail call fast nofpclass(nan inf) double @Perl_sv_2nv_flags(ptr noundef nonnull %40, i32 noundef 0) #17
  br label %185

185:                                              ; preds = %183, %179
  %186 = phi fast double [ %182, %179 ], [ %184, %183 ]
  %187 = fcmp fast ogt double %186, 0x43E0000000000000
  br i1 %187, label %323, label %188

188:                                              ; preds = %149, %185, %173, %162
  %189 = load i32, ptr %43, align 4, !tbaa !49
  %190 = and i32 %189, 256
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %196, label %192

192:                                              ; preds = %188
  %193 = load ptr, ptr %42, align 8, !tbaa !72
  %194 = getelementptr inbounds %struct.xpviv, ptr %193, i64 0, i32 4
  %195 = load i64, ptr %194, align 8, !tbaa !17
  br label %198

196:                                              ; preds = %188
  %197 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %42, i32 noundef 0) #17
  br label %198

198:                                              ; preds = %196, %192
  %199 = phi i64 [ %195, %192 ], [ %197, %196 ]
  %200 = load i32, ptr %50, align 4, !tbaa !49
  %201 = and i32 %200, 256
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %207, label %203

203:                                              ; preds = %198
  %204 = load ptr, ptr %40, align 8, !tbaa !72
  %205 = getelementptr inbounds %struct.xpviv, ptr %204, i64 0, i32 4
  %206 = load i64, ptr %205, align 8, !tbaa !17
  br label %209

207:                                              ; preds = %198
  %208 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %40, i32 noundef 0) #17
  br label %209

209:                                              ; preds = %207, %203
  %210 = phi i64 [ %206, %203 ], [ %208, %207 ]
  %211 = icmp slt i64 %210, %199
  br i1 %211, label %489, label %212

212:                                              ; preds = %209
  %213 = icmp slt i64 %199, 1
  %214 = add nsw i64 %199, 9223372036854775806
  %215 = icmp sgt i64 %210, %214
  %216 = select i1 %213, i1 %215, i1 false
  br i1 %216, label %221, label %217

217:                                              ; preds = %212
  %218 = sub nsw i64 %210, %199
  %219 = add nsw i64 %218, 1
  %220 = icmp slt i64 %218, 0
  br i1 %220, label %221, label %223

221:                                              ; preds = %212, %217
  %222 = phi i64 [ %219, %217 ], [ undef, %212 ]
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.12) #17
  br label %223

223:                                              ; preds = %217, %221
  %224 = phi i64 [ %219, %217 ], [ %222, %221 ]
  %225 = load i64, ptr @PL_tmps_ix, align 8, !tbaa !59
  %226 = add nsw i64 %225, %224
  %227 = load i64, ptr @PL_tmps_max, align 8, !tbaa !59
  %228 = icmp slt i64 %226, %227
  br i1 %228, label %231, label %229

229:                                              ; preds = %223
  %230 = tail call i64 @Perl_tmps_grow_p(i64 noundef %226) #17
  br label %231

231:                                              ; preds = %223, %229
  %232 = load ptr, ptr @PL_stack_max, align 8, !tbaa !6
  %233 = ptrtoint ptr %232 to i64
  %234 = ptrtoint ptr %41 to i64
  %235 = sub i64 %233, %234
  %236 = ashr exact i64 %235, 3
  %237 = icmp slt i64 %236, %224
  br i1 %237, label %238, label %240

238:                                              ; preds = %231
  %239 = tail call ptr @Perl_stack_grow(ptr noundef nonnull %41, ptr noundef nonnull %41, i64 noundef %224) #17
  br label %240

240:                                              ; preds = %238, %231
  %241 = phi ptr [ %41, %231 ], [ %239, %238 ]
  %242 = icmp eq i64 %224, 0
  br i1 %242, label %489, label %243

243:                                              ; preds = %240, %243
  %244 = phi ptr [ %250, %243 ], [ %241, %240 ]
  %245 = phi i64 [ %253, %243 ], [ %199, %240 ]
  %246 = phi i64 [ %247, %243 ], [ %224, %240 ]
  %247 = add nsw i64 %246, -1
  %248 = tail call ptr @Perl_newSViv(i64 noundef %245) #17
  %249 = tail call ptr @Perl_sv_2mortal(ptr noundef %248) #17
  %250 = getelementptr inbounds ptr, ptr %244, i64 1
  store ptr %249, ptr %250, align 8, !tbaa !6
  %251 = icmp ne i64 %247, 0
  %252 = zext i1 %251 to i64
  %253 = add nsw i64 %245, %252
  %254 = icmp eq i64 %247, 0
  br i1 %254, label %489, label %243, !llvm.loop !131

255:                                              ; preds = %120, %100, %96, %90
  %256 = phi i32 [ %98, %100 ], [ %98, %96 ], [ %93, %90 ], [ %123, %120 ]
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %1) #17
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #17
  %257 = and i32 %256, 2098176
  %258 = icmp eq i32 %257, 1024
  br i1 %258, label %259, label %265

259:                                              ; preds = %255
  %260 = load ptr, ptr %42, align 8, !tbaa !72
  %261 = getelementptr inbounds %struct.xpv, ptr %260, i64 0, i32 2
  %262 = load i64, ptr %261, align 8, !tbaa !53
  store i64 %262, ptr %2, align 8, !tbaa !59
  %263 = getelementptr inbounds %struct.sv, ptr %42, i64 0, i32 3
  %264 = load ptr, ptr %263, align 8, !tbaa !17
  br label %267

265:                                              ; preds = %255
  %266 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %42, ptr noundef nonnull %2, i32 noundef 32) #17
  br label %267

267:                                              ; preds = %265, %259
  %268 = phi ptr [ %264, %259 ], [ %266, %265 ]
  %269 = load i32, ptr %50, align 4, !tbaa !49
  %270 = and i32 %269, 2098176
  %271 = icmp eq i32 %270, 1024
  br i1 %271, label %272, label %278

272:                                              ; preds = %267
  %273 = load ptr, ptr %40, align 8, !tbaa !72
  %274 = getelementptr inbounds %struct.xpv, ptr %273, i64 0, i32 2
  %275 = load i64, ptr %274, align 8, !tbaa !53
  store i64 %275, ptr %1, align 8, !tbaa !59
  %276 = getelementptr inbounds %struct.sv, ptr %40, i64 0, i32 3
  %277 = load ptr, ptr %276, align 8, !tbaa !17
  br label %280

278:                                              ; preds = %267
  %279 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %40, ptr noundef nonnull %1, i32 noundef 32) #17
  br label %280

280:                                              ; preds = %278, %272
  %281 = phi ptr [ %277, %272 ], [ %279, %278 ]
  %282 = load i64, ptr %2, align 8, !tbaa !59
  %283 = load i32, ptr %43, align 4, !tbaa !49
  %284 = and i32 %283, 536870912
  %285 = or i32 %284, 524288
  %286 = call ptr @Perl_newSVpvn_flags(ptr noundef %268, i64 noundef %282, i32 noundef %285) #17
  %287 = getelementptr inbounds %struct.sv, ptr %286, i64 0, i32 2
  %288 = load i32, ptr %287, align 4, !tbaa !49
  %289 = and i32 %288, 12288
  %290 = icmp eq i32 %289, 0
  br i1 %290, label %291, label %321

291:                                              ; preds = %280, %314
  %292 = phi ptr [ %309, %314 ], [ %41, %280 ]
  %293 = phi ptr [ %316, %314 ], [ %286, %280 ]
  %294 = load ptr, ptr %293, align 8, !tbaa !72
  %295 = getelementptr inbounds %struct.xpv, ptr %294, i64 0, i32 2
  %296 = load i64, ptr %295, align 8, !tbaa !53
  %297 = load i64, ptr %1, align 8, !tbaa !59
  %298 = icmp ugt i64 %296, %297
  br i1 %298, label %321, label %299

299:                                              ; preds = %291
  %300 = load ptr, ptr @PL_stack_max, align 8, !tbaa !6
  %301 = ptrtoint ptr %300 to i64
  %302 = ptrtoint ptr %292 to i64
  %303 = sub i64 %301, %302
  %304 = icmp slt i64 %303, 8
  br i1 %304, label %305, label %307

305:                                              ; preds = %299
  %306 = call ptr @Perl_stack_grow(ptr noundef nonnull %292, ptr noundef nonnull %292, i64 noundef 1) #17
  br label %307

307:                                              ; preds = %299, %305
  %308 = phi ptr [ %306, %305 ], [ %292, %299 ]
  %309 = getelementptr inbounds ptr, ptr %308, i64 1
  store ptr %293, ptr %309, align 8, !tbaa !6
  %310 = getelementptr inbounds %struct.sv, ptr %293, i64 0, i32 3
  %311 = load ptr, ptr %310, align 8, !tbaa !17
  %312 = call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %311, ptr noundef nonnull dereferenceable(1) %281) #18
  %313 = icmp eq i32 %312, 0
  br i1 %313, label %321, label %314

314:                                              ; preds = %307
  %315 = call ptr @Perl_newSVsv(ptr noundef nonnull %293) #17
  %316 = call ptr @Perl_sv_2mortal(ptr noundef %315) #17
  call void @Perl_sv_inc(ptr noundef %316) #17
  %317 = getelementptr inbounds %struct.sv, ptr %316, i64 0, i32 2
  %318 = load i32, ptr %317, align 4, !tbaa !49
  %319 = and i32 %318, 12288
  %320 = icmp eq i32 %319, 0
  br i1 %320, label %291, label %321, !llvm.loop !132

321:                                              ; preds = %291, %307, %314, %280
  %322 = phi ptr [ %41, %280 ], [ %309, %314 ], [ %309, %307 ], [ %292, %291 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #17
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %1) #17
  br label %489

323:                                              ; preds = %185, %173, %146
  %324 = tail call ptr (ptr, ...) @Perl_die(ptr noundef nonnull @.str.11) #17
  br label %493

325:                                              ; preds = %25, %0, %31, %8, %31, %28, %35
  %326 = phi ptr [ %4, %0 ], [ %4, %31 ], [ %4, %8 ], [ %4, %31 ], [ %4, %28 ], [ %37, %35 ], [ %4, %25 ]
  %327 = load ptr, ptr %3, align 8, !tbaa !6
  %328 = load ptr, ptr @PL_curpad, align 8, !tbaa !6
  %329 = getelementptr inbounds %struct.unop, ptr %326, i64 0, i32 7
  %330 = load ptr, ptr %329, align 8, !tbaa !126
  %331 = getelementptr inbounds %struct.op, ptr %330, i64 0, i32 3
  %332 = load i64, ptr %331, align 8, !tbaa !40
  %333 = getelementptr inbounds ptr, ptr %328, i64 %332
  %334 = load ptr, ptr %333, align 8, !tbaa !6
  tail call void @Perl_sv_inc(ptr noundef %334) #17
  %335 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %336 = getelementptr inbounds %struct.op, ptr %335, i64 0, i32 6
  %337 = load i8, ptr %336, align 1, !tbaa !10
  %338 = and i8 %337, 64
  %339 = icmp eq i8 %338, 0
  br i1 %339, label %417, label %340

340:                                              ; preds = %325
  %341 = load ptr, ptr @PL_last_in_gv, align 8, !tbaa !6
  %342 = icmp eq ptr %341, null
  br i1 %342, label %380, label %343

343:                                              ; preds = %340
  %344 = getelementptr inbounds %struct.sv, ptr %341, i64 0, i32 2
  %345 = load i32, ptr %344, align 4, !tbaa !49
  %346 = and i32 %345, 255
  %347 = add nsw i32 %346, -9
  %348 = icmp ult i32 %347, 2
  br i1 %348, label %349, label %380

349:                                              ; preds = %343
  %350 = getelementptr inbounds %struct.gv, ptr %341, i64 0, i32 3
  %351 = load ptr, ptr %350, align 8, !tbaa !17
  %352 = icmp eq ptr %351, null
  br i1 %352, label %380, label %353

353:                                              ; preds = %349
  %354 = getelementptr inbounds %struct.gp, ptr %351, i64 0, i32 1
  %355 = load ptr, ptr %354, align 8, !tbaa !128
  %356 = icmp eq ptr %355, null
  br i1 %356, label %380, label %357

357:                                              ; preds = %353
  %358 = getelementptr inbounds %struct.sv, ptr %327, i64 0, i32 2
  %359 = load i32, ptr %358, align 4, !tbaa !49
  %360 = and i32 %359, 2097408
  %361 = icmp eq i32 %360, 256
  br i1 %361, label %362, label %366

362:                                              ; preds = %357
  %363 = load ptr, ptr %327, align 8, !tbaa !72
  %364 = getelementptr inbounds %struct.xpviv, ptr %363, i64 0, i32 4
  %365 = load i64, ptr %364, align 8, !tbaa !17
  br label %373

366:                                              ; preds = %357
  %367 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %327, i32 noundef 2) #17
  %368 = load ptr, ptr @PL_last_in_gv, align 8, !tbaa !6
  %369 = getelementptr inbounds %struct.gv, ptr %368, i64 0, i32 3
  %370 = load ptr, ptr %369, align 8, !tbaa !17
  %371 = getelementptr inbounds %struct.gp, ptr %370, i64 0, i32 1
  %372 = load ptr, ptr %371, align 8, !tbaa !128
  br label %373

373:                                              ; preds = %366, %362
  %374 = phi ptr [ %355, %362 ], [ %372, %366 ]
  %375 = phi i64 [ %365, %362 ], [ %367, %366 ]
  %376 = load ptr, ptr %374, align 8, !tbaa !129
  %377 = getelementptr inbounds %struct.xpvio, ptr %376, i64 0, i32 4
  %378 = load i64, ptr %377, align 8, !tbaa !17
  %379 = icmp eq i64 %375, %378
  br i1 %379, label %475, label %488

380:                                              ; preds = %343, %340, %349, %353
  %381 = tail call ptr @Perl_gv_fetchpvn_flags(ptr noundef nonnull @.str.9, i64 noundef 1, i32 noundef 129, i32 noundef 3) #17
  %382 = icmp eq ptr %381, null
  br i1 %382, label %488, label %383

383:                                              ; preds = %380
  %384 = getelementptr inbounds %struct.gv, ptr %381, i64 0, i32 3
  %385 = load ptr, ptr %384, align 8, !tbaa !17
  %386 = load ptr, ptr %385, align 8, !tbaa !48
  %387 = icmp eq ptr %386, null
  br i1 %387, label %488, label %388

388:                                              ; preds = %383
  %389 = getelementptr inbounds %struct.sv, ptr %327, i64 0, i32 2
  %390 = load i32, ptr %389, align 4, !tbaa !49
  %391 = and i32 %390, 2097408
  %392 = icmp eq i32 %391, 256
  br i1 %392, label %393, label %397

393:                                              ; preds = %388
  %394 = load ptr, ptr %327, align 8, !tbaa !72
  %395 = getelementptr inbounds %struct.xpviv, ptr %394, i64 0, i32 4
  %396 = load i64, ptr %395, align 8, !tbaa !17
  br label %401

397:                                              ; preds = %388
  %398 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %327, i32 noundef 2) #17
  %399 = load ptr, ptr %384, align 8, !tbaa !17
  %400 = load ptr, ptr %399, align 8, !tbaa !48
  br label %401

401:                                              ; preds = %397, %393
  %402 = phi ptr [ %386, %393 ], [ %400, %397 ]
  %403 = phi i64 [ %396, %393 ], [ %398, %397 ]
  %404 = getelementptr inbounds %struct.sv, ptr %402, i64 0, i32 2
  %405 = load i32, ptr %404, align 4, !tbaa !49
  %406 = and i32 %405, 2097408
  %407 = icmp eq i32 %406, 256
  br i1 %407, label %408, label %412

408:                                              ; preds = %401
  %409 = load ptr, ptr %402, align 8, !tbaa !72
  %410 = getelementptr inbounds %struct.xpviv, ptr %409, i64 0, i32 4
  %411 = load i64, ptr %410, align 8, !tbaa !17
  br label %414

412:                                              ; preds = %401
  %413 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %402, i32 noundef 2) #17
  br label %414

414:                                              ; preds = %412, %408
  %415 = phi i64 [ %411, %408 ], [ %413, %412 ]
  %416 = icmp eq i64 %403, %415
  br i1 %416, label %475, label %488

417:                                              ; preds = %325
  %418 = icmp eq ptr %327, null
  br i1 %418, label %488, label %419

419:                                              ; preds = %417
  %420 = getelementptr inbounds %struct.sv, ptr %327, i64 0, i32 2
  %421 = load i32, ptr %420, align 4, !tbaa !49
  %422 = and i32 %421, 2097152
  %423 = icmp eq i32 %422, 0
  br i1 %423, label %426, label %424

424:                                              ; preds = %419
  %425 = tail call zeroext i1 @Perl_sv_2bool_flags(ptr noundef nonnull %327, i32 noundef 2) #17
  br i1 %425, label %475, label %488

426:                                              ; preds = %419
  %427 = and i32 %421, 65280
  %428 = icmp ne i32 %427, 0
  %429 = and i32 %421, 255
  %430 = icmp eq i32 %429, 8
  %431 = or i1 %428, %430
  %432 = and i32 %421, 16826623
  %433 = icmp eq i32 %432, 16777226
  %434 = or i1 %433, %431
  br i1 %434, label %435, label %488

435:                                              ; preds = %426
  %436 = and i32 %421, 1024
  %437 = icmp eq i32 %436, 0
  br i1 %437, label %452, label %438

438:                                              ; preds = %435
  %439 = load ptr, ptr %327, align 8, !tbaa !72
  %440 = icmp eq ptr %439, null
  br i1 %440, label %488, label %441

441:                                              ; preds = %438
  %442 = getelementptr inbounds %struct.xpv, ptr %439, i64 0, i32 2
  %443 = load i64, ptr %442, align 8, !tbaa !53
  %444 = icmp ugt i64 %443, 1
  br i1 %444, label %477, label %445

445:                                              ; preds = %441
  %446 = icmp eq i64 %443, 0
  br i1 %446, label %488, label %447

447:                                              ; preds = %445
  %448 = getelementptr inbounds %struct.sv, ptr %327, i64 0, i32 3
  %449 = load ptr, ptr %448, align 8, !tbaa !17
  %450 = load i8, ptr %449, align 1, !tbaa !17
  %451 = icmp eq i8 %450, 48
  br i1 %451, label %488, label %475

452:                                              ; preds = %435
  %453 = and i32 %421, 768
  %454 = icmp eq i32 %453, 0
  br i1 %454, label %471, label %455

455:                                              ; preds = %452
  %456 = and i32 %421, 256
  %457 = icmp eq i32 %456, 0
  br i1 %457, label %463, label %458

458:                                              ; preds = %455
  %459 = load ptr, ptr %327, align 8, !tbaa !72
  %460 = getelementptr inbounds %struct.xpviv, ptr %459, i64 0, i32 4
  %461 = load i64, ptr %460, align 8, !tbaa !17
  %462 = icmp eq i64 %461, 0
  br i1 %462, label %463, label %477

463:                                              ; preds = %458, %455
  %464 = and i32 %421, 512
  %465 = icmp eq i32 %464, 0
  br i1 %465, label %488, label %466

466:                                              ; preds = %463
  %467 = load ptr, ptr %327, align 8, !tbaa !72
  %468 = getelementptr inbounds %struct.xpvnv, ptr %467, i64 0, i32 5
  %469 = load double, ptr %468, align 8, !tbaa !17
  %470 = fcmp uno double %469, 0.000000e+00
  br i1 %470, label %477, label %473

471:                                              ; preds = %452
  %472 = tail call zeroext i1 @Perl_sv_2bool_flags(ptr noundef nonnull %327, i32 noundef 0) #17
  br i1 %472, label %475, label %488

473:                                              ; preds = %466
  %474 = fcmp fast une double %469, 0.000000e+00
  br i1 %474, label %475, label %488

475:                                              ; preds = %447, %471, %424, %414, %373, %473
  %476 = load ptr, ptr @PL_op, align 8, !tbaa !6
  br label %477

477:                                              ; preds = %475, %441, %458, %466
  %478 = phi ptr [ %476, %475 ], [ %335, %441 ], [ %335, %458 ], [ %335, %466 ]
  %479 = load ptr, ptr @PL_curpad, align 8, !tbaa !6
  %480 = getelementptr inbounds %struct.unop, ptr %478, i64 0, i32 7
  %481 = load ptr, ptr %480, align 8, !tbaa !126
  %482 = getelementptr inbounds %struct.unop, ptr %481, i64 0, i32 7
  %483 = load ptr, ptr %482, align 8, !tbaa !126
  %484 = getelementptr inbounds %struct.op, ptr %483, i64 0, i32 3
  %485 = load i64, ptr %484, align 8, !tbaa !40
  %486 = getelementptr inbounds ptr, ptr %479, i64 %485
  %487 = load ptr, ptr %486, align 8, !tbaa !6
  tail call void @Perl_sv_setiv(ptr noundef %487, i64 noundef 0) #17
  tail call void @Perl_sv_catpvn_flags(ptr noundef %334, ptr noundef nonnull @.str.13, i64 noundef 2, i32 noundef 2) #17
  br label %488

488:                                              ; preds = %447, %471, %424, %414, %373, %426, %438, %445, %463, %417, %380, %383, %477, %473
  store ptr %334, ptr %3, align 8, !tbaa !6
  br label %489

489:                                              ; preds = %243, %209, %240, %321, %488
  %490 = phi ptr [ %3, %488 ], [ %322, %321 ], [ %241, %240 ], [ %41, %209 ], [ %250, %243 ]
  store ptr %490, ptr @PL_stack_sp, align 8, !tbaa !6
  %491 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %492 = load ptr, ptr %491, align 8, !tbaa !20
  br label %493

493:                                              ; preds = %323, %489
  %494 = phi ptr [ %492, %489 ], [ %324, %323 ]
  ret ptr %494
}

declare i32 @Perl_looks_like_number(ptr noundef) local_unnamed_addr #2

declare i64 @Perl_sv_2uv_flags(ptr noundef, i32 noundef) local_unnamed_addr #2

declare ptr @Perl_sv_2mortal(ptr noundef) local_unnamed_addr #2

declare ptr @Perl_newSViv(i64 noundef) local_unnamed_addr #2

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare i32 @strcmp(ptr nocapture noundef, ptr nocapture noundef) local_unnamed_addr #6

declare ptr @Perl_newSVsv(ptr noundef) local_unnamed_addr #2

declare void @Perl_sv_inc(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @Perl_dowantarray() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %2 = getelementptr inbounds %struct.stackinfo, ptr %1, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !14
  %4 = getelementptr inbounds %struct.stackinfo, ptr %1, i64 0, i32 4
  %5 = load i32, ptr %4, align 8, !tbaa !16
  %6 = icmp sgt i32 %5, -1
  br i1 %6, label %7, label %35

7:                                                ; preds = %0
  %8 = zext i32 %5 to i64
  br label %9

9:                                                ; preds = %17, %7
  %10 = phi i64 [ %8, %7 ], [ %18, %17 ]
  %11 = getelementptr inbounds %struct.context, ptr %3, i64 %10
  %12 = load i8, ptr %11, align 8, !tbaa !17
  %13 = and i8 %12, 15
  %14 = zext i8 %13 to i32
  switch i32 %14, label %17 [
    i32 8, label %15
    i32 10, label %20
    i32 9, label %20
  ]

15:                                               ; preds = %9
  %16 = icmp sgt i8 %12, -1
  br i1 %16, label %20, label %17

17:                                               ; preds = %15, %9
  %18 = add nsw i64 %10, -1
  %19 = icmp sgt i64 %10, 0
  br i1 %19, label %9, label %35, !llvm.loop !18

20:                                               ; preds = %15, %9, %9
  %21 = and i64 %10, 2147483648
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %23, label %35

23:                                               ; preds = %20
  %24 = and i64 %10, 4294967295
  %25 = getelementptr inbounds %struct.context, ptr %3, i64 %24, i32 0, i32 0, i32 1
  %26 = load i8, ptr %25, align 1, !tbaa !17
  %27 = add i8 %26, -1
  %28 = icmp ult i8 %27, 3
  br i1 %28, label %31, label %29

29:                                               ; preds = %23
  %30 = zext i8 %26 to i32
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.14, i32 noundef %30) #17
  br label %35

31:                                               ; preds = %23
  %32 = sext i8 %27 to i64
  %33 = getelementptr inbounds [3 x i32], ptr @switch.table.Perl_dowantarray, i64 0, i64 %32
  %34 = load i32, ptr %33, align 4
  br label %35

35:                                               ; preds = %17, %31, %0, %20, %29
  %36 = phi i32 [ 0, %29 ], [ 2, %20 ], [ 2, %0 ], [ %34, %31 ], [ 2, %17 ]
  ret i32 %36
}

; Function Attrs: nofree norecurse nosync nounwind sspstrong memory(read, inaccessiblemem: none) uwtable
define dso_local i32 @Perl_is_lvalue_sub() local_unnamed_addr #7 {
  %1 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %2 = getelementptr inbounds %struct.stackinfo, ptr %1, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !14
  %4 = getelementptr inbounds %struct.stackinfo, ptr %1, i64 0, i32 4
  %5 = load i32, ptr %4, align 8, !tbaa !16
  %6 = icmp sgt i32 %5, -1
  br i1 %6, label %7, label %24

7:                                                ; preds = %0
  %8 = zext i32 %5 to i64
  br label %9

9:                                                ; preds = %17, %7
  %10 = phi i64 [ %8, %7 ], [ %18, %17 ]
  %11 = getelementptr inbounds %struct.context, ptr %3, i64 %10
  %12 = load i8, ptr %11, align 8, !tbaa !17
  %13 = and i8 %12, 15
  %14 = zext i8 %13 to i32
  switch i32 %14, label %17 [
    i32 8, label %15
    i32 10, label %22
    i32 9, label %22
  ]

15:                                               ; preds = %9
  %16 = icmp sgt i8 %12, -1
  br i1 %16, label %20, label %17

17:                                               ; preds = %15, %9
  %18 = add nsw i64 %10, -1
  %19 = icmp sgt i64 %10, 0
  br i1 %19, label %9, label %24, !llvm.loop !18

20:                                               ; preds = %15
  %21 = trunc i64 %10 to i32
  br label %24

22:                                               ; preds = %9, %9
  %23 = trunc i64 %10 to i32
  br label %24

24:                                               ; preds = %17, %0, %20, %22
  %25 = phi i32 [ %5, %0 ], [ %21, %20 ], [ %23, %22 ], [ -1, %17 ]
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds %struct.context, ptr %3, i64 %26
  %28 = getelementptr inbounds %struct.block, ptr %27, i64 0, i32 2
  %29 = load i16, ptr %28, align 2, !tbaa !17
  %30 = and i16 %29, 255
  %31 = icmp eq i16 %30, 0
  br i1 %31, label %41, label %32

32:                                               ; preds = %24
  %33 = zext i16 %30 to i32
  %34 = getelementptr inbounds %struct.block, ptr %27, i64 0, i32 8, i32 0, i32 1
  %35 = load ptr, ptr %34, align 8, !tbaa !17
  %36 = load ptr, ptr %35, align 8, !tbaa !133
  %37 = getelementptr inbounds %struct.xpvcv, ptr %36, i64 0, i32 12
  %38 = load i32, ptr %37, align 4, !tbaa !135
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %32, %24
  br label %42

42:                                               ; preds = %32, %41
  %43 = phi i32 [ 0, %41 ], [ %33, %32 ]
  ret i32 %43
}

; Function Attrs: nofree norecurse nosync nounwind sspstrong memory(read, inaccessiblemem: none) uwtable
define dso_local i32 @Perl_was_lvalue_sub() local_unnamed_addr #7 {
  %1 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %2 = getelementptr inbounds %struct.stackinfo, ptr %1, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !14
  %4 = getelementptr inbounds %struct.stackinfo, ptr %1, i64 0, i32 4
  %5 = load i32, ptr %4, align 8, !tbaa !16
  %6 = add nsw i32 %5, -1
  %7 = icmp sgt i32 %5, 0
  br i1 %7, label %8, label %25

8:                                                ; preds = %0
  %9 = zext i32 %6 to i64
  br label %10

10:                                               ; preds = %18, %8
  %11 = phi i64 [ %9, %8 ], [ %19, %18 ]
  %12 = getelementptr inbounds %struct.context, ptr %3, i64 %11
  %13 = load i8, ptr %12, align 8, !tbaa !17
  %14 = and i8 %13, 15
  %15 = zext i8 %14 to i32
  switch i32 %15, label %18 [
    i32 8, label %16
    i32 10, label %23
    i32 9, label %23
  ]

16:                                               ; preds = %10
  %17 = icmp sgt i8 %13, -1
  br i1 %17, label %21, label %18

18:                                               ; preds = %16, %10
  %19 = add nsw i64 %11, -1
  %20 = icmp sgt i64 %11, 0
  br i1 %20, label %10, label %25, !llvm.loop !18

21:                                               ; preds = %16
  %22 = trunc i64 %11 to i32
  br label %25

23:                                               ; preds = %10, %10
  %24 = trunc i64 %11 to i32
  br label %25

25:                                               ; preds = %18, %0, %21, %23
  %26 = phi i32 [ %6, %0 ], [ %22, %21 ], [ %24, %23 ], [ -1, %18 ]
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds %struct.context, ptr %3, i64 %27
  %29 = getelementptr inbounds %struct.block, ptr %28, i64 0, i32 2
  %30 = load i16, ptr %29, align 2, !tbaa !17
  %31 = and i16 %30, 255
  %32 = icmp eq i16 %31, 0
  br i1 %32, label %42, label %33

33:                                               ; preds = %25
  %34 = zext i16 %31 to i32
  %35 = getelementptr inbounds %struct.block, ptr %28, i64 0, i32 8, i32 0, i32 1
  %36 = load ptr, ptr %35, align 8, !tbaa !17
  %37 = load ptr, ptr %36, align 8, !tbaa !133
  %38 = getelementptr inbounds %struct.xpvcv, ptr %37, i64 0, i32 12
  %39 = load i32, ptr %38, align 4, !tbaa !135
  %40 = and i32 %39, 2
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %33, %25
  br label %43

43:                                               ; preds = %33, %42
  %44 = phi i32 [ 0, %42 ], [ %34, %33 ]
  ret i32 %44
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_dounwind(i32 noundef %0) local_unnamed_addr #0 {
  %2 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %3 = icmp eq ptr %2, null
  br i1 %3, label %276, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.stackinfo, ptr %2, i64 0, i32 4
  %6 = load i32, ptr %5, align 8, !tbaa !16
  %7 = icmp sgt i32 %6, %0
  br i1 %7, label %8, label %276

8:                                                ; preds = %4, %271
  %9 = phi i32 [ %274, %271 ], [ %6, %4 ]
  %10 = phi ptr [ %273, %271 ], [ %5, %4 ]
  %11 = phi ptr [ %272, %271 ], [ %2, %4 ]
  %12 = getelementptr inbounds %struct.stackinfo, ptr %11, i64 0, i32 1
  %13 = load ptr, ptr %12, align 8, !tbaa !14
  %14 = sext i32 %9 to i64
  %15 = getelementptr inbounds %struct.context, ptr %13, i64 %14
  %16 = load i8, ptr %15, align 8, !tbaa !17
  %17 = and i8 %16, 15
  %18 = zext i8 %17 to i32
  switch i32 %18, label %266 [
    i32 11, label %19
    i32 8, label %50
    i32 10, label %161
    i32 7, label %189
    i32 6, label %189
    i32 4, label %189
    i32 5, label %189
    i32 9, label %224
  ]

19:                                               ; preds = %8
  %20 = add nsw i32 %9, -1
  store i32 %20, ptr %10, align 8, !tbaa !16
  %21 = getelementptr inbounds %struct.subst, ptr %15, i64 0, i32 12
  %22 = load ptr, ptr %21, align 8, !tbaa !6
  %23 = icmp eq ptr %22, null
  br i1 %23, label %39, label %24

24:                                               ; preds = %19
  %25 = load i64, ptr %22, align 8, !tbaa !59
  %26 = inttoptr i64 %25 to ptr
  %27 = getelementptr inbounds i64, ptr %22, i64 2
  %28 = load i64, ptr %27, align 8, !tbaa !59
  %29 = inttoptr i64 %28 to ptr
  %30 = icmp eq i64 %28, 0
  br i1 %30, label %38, label %31

31:                                               ; preds = %24
  %32 = getelementptr inbounds %struct.sv, ptr %29, i64 0, i32 1
  %33 = load i32, ptr %32, align 8, !tbaa !41
  %34 = icmp ugt i32 %33, 1
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = add i32 %33, -1
  store i32 %36, ptr %32, align 8, !tbaa !41
  br label %38

37:                                               ; preds = %31
  tail call void @Perl_sv_free2(ptr noundef nonnull %29, i32 noundef %33) #17
  br label %38

38:                                               ; preds = %37, %35, %24
  tail call void @Perl_safesysfree(ptr noundef %26) #17
  tail call void @Perl_safesysfree(ptr noundef nonnull %22) #17
  store ptr null, ptr %21, align 8, !tbaa !6
  br label %39

39:                                               ; preds = %19, %38
  %40 = getelementptr inbounds %struct.subst, ptr %15, i64 0, i32 13
  %41 = load ptr, ptr %40, align 8, !tbaa !17
  %42 = icmp eq ptr %41, null
  br i1 %42, label %271, label %43, !llvm.loop !137

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.sv, ptr %41, i64 0, i32 1
  %45 = load i32, ptr %44, align 8, !tbaa !41
  %46 = icmp ugt i32 %45, 1
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = add i32 %45, -1
  store i32 %48, ptr %44, align 8, !tbaa !41
  br label %271, !llvm.loop !137

49:                                               ; preds = %43
  tail call void @Perl_sv_free2(ptr noundef nonnull %41, i32 noundef %45) #17
  br label %271, !llvm.loop !137

50:                                               ; preds = %8
  %51 = getelementptr inbounds %struct.block, ptr %15, i64 0, i32 8, i32 0, i32 4
  %52 = load i32, ptr %51, align 8, !tbaa !17
  %53 = getelementptr inbounds %struct.block, ptr %15, i64 0, i32 2
  %54 = load i16, ptr %53, align 2, !tbaa !17
  %55 = and i16 %54, 256
  %56 = icmp eq i16 %55, 0
  br i1 %56, label %57, label %135

57:                                               ; preds = %50
  %58 = or i16 %54, 256
  store i16 %58, ptr %53, align 2, !tbaa !17
  %59 = and i8 %16, 32
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %135, label %61

61:                                               ; preds = %57
  %62 = load ptr, ptr @PL_defgv, align 8, !tbaa !6
  %63 = getelementptr inbounds %struct.gv, ptr %62, i64 0, i32 3
  %64 = load ptr, ptr %63, align 8, !tbaa !17
  %65 = getelementptr inbounds %struct.gp, ptr %64, i64 0, i32 6
  %66 = load ptr, ptr %65, align 8, !tbaa !138
  %67 = icmp eq ptr %66, null
  br i1 %67, label %76, label %68

68:                                               ; preds = %61
  %69 = getelementptr inbounds %struct.sv, ptr %66, i64 0, i32 1
  %70 = load i32, ptr %69, align 8, !tbaa !41
  %71 = icmp ugt i32 %70, 1
  br i1 %71, label %72, label %74

72:                                               ; preds = %68
  %73 = add i32 %70, -1
  store i32 %73, ptr %69, align 8, !tbaa !41
  br label %76

74:                                               ; preds = %68
  tail call void @Perl_sv_free2(ptr noundef nonnull %66, i32 noundef %70) #17
  %75 = load ptr, ptr @PL_defgv, align 8, !tbaa !6
  br label %76

76:                                               ; preds = %61, %72, %74
  %77 = phi ptr [ %62, %61 ], [ %62, %72 ], [ %75, %74 ]
  %78 = getelementptr inbounds %struct.block, ptr %15, i64 0, i32 8, i32 0, i32 2
  %79 = load ptr, ptr %78, align 8, !tbaa !17
  %80 = getelementptr inbounds %struct.gv, ptr %77, i64 0, i32 3
  %81 = load ptr, ptr %80, align 8, !tbaa !17
  %82 = getelementptr inbounds %struct.gp, ptr %81, i64 0, i32 6
  store ptr %79, ptr %82, align 8, !tbaa !138
  %83 = getelementptr inbounds %struct.block, ptr %15, i64 0, i32 8, i32 0, i32 3
  %84 = load ptr, ptr %83, align 8, !tbaa !17
  %85 = getelementptr inbounds %struct.av, ptr %84, i64 0, i32 2
  %86 = load i32, ptr %85, align 4, !tbaa !139
  %87 = and i32 %86, 1073741824
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %114, label %89

89:                                               ; preds = %76
  %90 = load ptr, ptr %84, align 8, !tbaa !141
  %91 = getelementptr inbounds %struct.xpvav, ptr %90, i64 0, i32 2
  %92 = load i64, ptr %91, align 8, !tbaa !142
  %93 = getelementptr inbounds %struct.sv, ptr %84, i64 0, i32 1
  %94 = load i32, ptr %93, align 8, !tbaa !41
  %95 = icmp ugt i32 %94, 1
  br i1 %95, label %96, label %98

96:                                               ; preds = %89
  %97 = add i32 %94, -1
  store i32 %97, ptr %93, align 8, !tbaa !41
  br label %99

98:                                               ; preds = %89
  tail call void @Perl_sv_free2(ptr noundef nonnull %84, i32 noundef %94) #17
  br label %99

99:                                               ; preds = %96, %98
  %100 = tail call ptr @Perl_newSV_type(i32 noundef 11) #17
  store ptr %100, ptr %83, align 8, !tbaa !17
  tail call void @Perl_av_extend(ptr noundef %100, i64 noundef %92) #17
  %101 = load ptr, ptr %83, align 8, !tbaa !17
  %102 = getelementptr inbounds %struct.av, ptr %101, i64 0, i32 2
  %103 = load i32, ptr %102, align 4, !tbaa !139
  %104 = and i32 %103, -1073741825
  store i32 %104, ptr %102, align 4, !tbaa !139
  %105 = load ptr, ptr %83, align 8, !tbaa !17
  %106 = getelementptr inbounds %struct.av, ptr %105, i64 0, i32 2
  %107 = load i32, ptr %106, align 4, !tbaa !139
  %108 = or i32 %107, -2147483648
  store i32 %108, ptr %106, align 4, !tbaa !139
  %109 = load ptr, ptr %83, align 8, !tbaa !17
  %110 = getelementptr inbounds %struct.block, ptr %15, i64 0, i32 8, i32 0, i32 5
  %111 = load ptr, ptr %110, align 8, !tbaa !17
  %112 = getelementptr inbounds %struct.av, ptr %111, i64 0, i32 3
  %113 = load ptr, ptr %112, align 8, !tbaa !17
  store ptr %109, ptr %113, align 8, !tbaa !6
  br label %135

114:                                              ; preds = %76
  %115 = getelementptr inbounds %struct.av, ptr %84, i64 0, i32 3
  %116 = load ptr, ptr %115, align 8, !tbaa !17
  %117 = load ptr, ptr %84, align 8, !tbaa !141
  %118 = getelementptr inbounds %struct.xpvav, ptr %117, i64 0, i32 4
  %119 = load ptr, ptr %118, align 8, !tbaa !144
  %120 = ptrtoint ptr %116 to i64
  %121 = ptrtoint ptr %119 to i64
  %122 = sub i64 %120, %121
  %123 = ashr exact i64 %122, 3
  %124 = getelementptr inbounds %struct.xpvav, ptr %117, i64 0, i32 3
  %125 = load i64, ptr %124, align 8, !tbaa !145
  %126 = add nsw i64 %123, %125
  store i64 %126, ptr %124, align 8, !tbaa !145
  %127 = load ptr, ptr %83, align 8, !tbaa !17
  %128 = load ptr, ptr %127, align 8, !tbaa !141
  %129 = getelementptr inbounds %struct.xpvav, ptr %128, i64 0, i32 4
  %130 = load ptr, ptr %129, align 8, !tbaa !144
  %131 = getelementptr inbounds %struct.av, ptr %127, i64 0, i32 3
  store ptr %130, ptr %131, align 8, !tbaa !17
  %132 = load ptr, ptr %83, align 8, !tbaa !17
  %133 = load ptr, ptr %132, align 8, !tbaa !141
  %134 = getelementptr inbounds %struct.xpvav, ptr %133, i64 0, i32 2
  store i64 -1, ptr %134, align 8, !tbaa !142
  br label %135

135:                                              ; preds = %57, %114, %99, %50
  %136 = getelementptr inbounds %struct.block, ptr %15, i64 0, i32 8, i32 0, i32 1
  %137 = load ptr, ptr %136, align 8, !tbaa !17
  %138 = load i32, ptr @PL_savestack_ix, align 4, !tbaa !31
  %139 = load ptr, ptr @PL_scopestack, align 8, !tbaa !6
  %140 = getelementptr inbounds %struct.block, ptr %15, i64 0, i32 6
  %141 = load i32, ptr %140, align 4, !tbaa !17
  %142 = add nsw i32 %141, -1
  %143 = sext i32 %142 to i64
  %144 = getelementptr inbounds i32, ptr %139, i64 %143
  %145 = load i32, ptr %144, align 4, !tbaa !31
  %146 = icmp sgt i32 %138, %145
  br i1 %146, label %147, label %148

147:                                              ; preds = %135
  tail call void @Perl_leave_scope(i32 noundef %145) #17
  br label %148

148:                                              ; preds = %147, %135
  %149 = icmp eq ptr %137, null
  br i1 %149, label %266, label %150

150:                                              ; preds = %148
  %151 = load ptr, ptr %137, align 8, !tbaa !133
  %152 = getelementptr inbounds %struct.xpvcv, ptr %151, i64 0, i32 13
  store i32 %52, ptr %152, align 4, !tbaa !31
  %153 = icmp eq i32 %52, 0
  br i1 %153, label %154, label %266

154:                                              ; preds = %150
  %155 = getelementptr inbounds %struct.sv, ptr %137, i64 0, i32 1
  %156 = load i32, ptr %155, align 8, !tbaa !41
  %157 = icmp ugt i32 %156, 1
  br i1 %157, label %158, label %160

158:                                              ; preds = %154
  %159 = add i32 %156, -1
  store i32 %159, ptr %155, align 8, !tbaa !41
  br label %266

160:                                              ; preds = %154
  tail call void @Perl_sv_free2(ptr noundef nonnull %137, i32 noundef %156) #17
  br label %266

161:                                              ; preds = %8
  %162 = getelementptr inbounds %struct.block, ptr %15, i64 0, i32 2
  %163 = load i16, ptr %162, align 2, !tbaa !17
  %164 = trunc i16 %163 to i8
  %165 = and i8 %164, 127
  store i8 %165, ptr @PL_in_eval, align 1, !tbaa !17
  %166 = getelementptr inbounds %struct.block, ptr %15, i64 0, i32 8, i32 0, i32 2
  %167 = load ptr, ptr %166, align 8, !tbaa !17
  store ptr %167, ptr @PL_eval_root, align 8, !tbaa !6
  %168 = getelementptr inbounds %struct.block, ptr %15, i64 0, i32 8, i32 0, i32 3
  %169 = load ptr, ptr %168, align 8, !tbaa !17
  %170 = icmp eq ptr %169, null
  br i1 %170, label %183, label %171

171:                                              ; preds = %161
  %172 = getelementptr inbounds %struct.sv, ptr %169, i64 0, i32 2
  %173 = load i32, ptr %172, align 4, !tbaa !49
  %174 = and i32 %173, 49152
  %175 = icmp eq i32 %174, 49152
  br i1 %175, label %176, label %183

176:                                              ; preds = %171
  %177 = getelementptr inbounds %struct.sv, ptr %169, i64 0, i32 1
  %178 = load i32, ptr %177, align 8, !tbaa !41
  %179 = icmp ugt i32 %178, 1
  br i1 %179, label %180, label %182

180:                                              ; preds = %176
  %181 = add i32 %178, -1
  store i32 %181, ptr %177, align 8, !tbaa !41
  br label %183

182:                                              ; preds = %176
  tail call void @Perl_sv_free2(ptr noundef nonnull %169, i32 noundef %178) #17
  br label %183

183:                                              ; preds = %182, %180, %171, %161
  %184 = getelementptr inbounds %struct.block, ptr %15, i64 0, i32 8, i32 0, i32 1
  %185 = load ptr, ptr %184, align 8, !tbaa !17
  %186 = icmp eq ptr %185, null
  br i1 %186, label %266, label %187

187:                                              ; preds = %183
  %188 = tail call ptr @Perl_sv_2mortal(ptr noundef nonnull %185) #17
  br label %266

189:                                              ; preds = %8, %8, %8, %8
  %190 = icmp eq i8 %17, 6
  br i1 %190, label %191, label %209

191:                                              ; preds = %189
  %192 = getelementptr inbounds %struct.block, ptr %15, i64 0, i32 8, i32 0, i32 3
  %193 = load ptr, ptr %192, align 8, !tbaa !17
  %194 = getelementptr inbounds %struct.sv, ptr %193, i64 0, i32 1
  %195 = load i32, ptr %194, align 8, !tbaa !41
  %196 = icmp ugt i32 %195, 1
  br i1 %196, label %197, label %199

197:                                              ; preds = %191
  %198 = add i32 %195, -1
  store i32 %198, ptr %194, align 8, !tbaa !41
  br label %200

199:                                              ; preds = %191
  tail call void @Perl_sv_free2(ptr noundef nonnull %193, i32 noundef %195) #17
  br label %200

200:                                              ; preds = %197, %199
  %201 = getelementptr inbounds %struct.block, ptr %15, i64 0, i32 8, i32 0, i32 4
  %202 = load ptr, ptr %201, align 8, !tbaa !17
  %203 = getelementptr inbounds %struct.sv, ptr %202, i64 0, i32 1
  %204 = load i32, ptr %203, align 8, !tbaa !41
  %205 = icmp ugt i32 %204, 1
  br i1 %205, label %206, label %208

206:                                              ; preds = %200
  %207 = add i32 %204, -1
  store i32 %207, ptr %203, align 8, !tbaa !41
  br label %209

208:                                              ; preds = %200
  tail call void @Perl_sv_free2(ptr noundef nonnull %202, i32 noundef %204) #17
  br label %209

209:                                              ; preds = %208, %206, %189
  %210 = load i8, ptr %15, align 8, !tbaa !17
  %211 = and i8 %210, 15
  %212 = icmp eq i8 %211, 4
  br i1 %212, label %213, label %266

213:                                              ; preds = %209
  %214 = getelementptr inbounds %struct.block, ptr %15, i64 0, i32 8, i32 0, i32 3
  %215 = load ptr, ptr %214, align 8, !tbaa !17
  %216 = icmp eq ptr %215, null
  br i1 %216, label %266, label %217

217:                                              ; preds = %213
  %218 = getelementptr inbounds %struct.sv, ptr %215, i64 0, i32 1
  %219 = load i32, ptr %218, align 8, !tbaa !41
  %220 = icmp ugt i32 %219, 1
  br i1 %220, label %221, label %223

221:                                              ; preds = %217
  %222 = add i32 %219, -1
  store i32 %222, ptr %218, align 8, !tbaa !41
  br label %266

223:                                              ; preds = %217
  tail call void @Perl_sv_free2(ptr noundef nonnull %215, i32 noundef %219) #17
  br label %266

224:                                              ; preds = %8
  %225 = getelementptr inbounds %struct.block, ptr %15, i64 0, i32 2
  %226 = load i16, ptr %225, align 2, !tbaa !17
  %227 = and i16 %226, 256
  %228 = icmp eq i16 %227, 0
  br i1 %228, label %229, label %266

229:                                              ; preds = %224
  %230 = getelementptr inbounds %struct.block, ptr %15, i64 0, i32 8, i32 0, i32 1
  %231 = load ptr, ptr %230, align 8, !tbaa !17
  %232 = getelementptr inbounds %struct.block, ptr %15, i64 0, i32 8, i32 0, i32 3
  %233 = load ptr, ptr %232, align 8, !tbaa !17
  %234 = or i16 %226, 256
  store i16 %234, ptr %225, align 2, !tbaa !17
  tail call void @Perl_setdefout(ptr noundef %233) #17
  %235 = load i32, ptr @PL_savestack_ix, align 4, !tbaa !31
  %236 = load ptr, ptr @PL_scopestack, align 8, !tbaa !6
  %237 = getelementptr inbounds %struct.block, ptr %15, i64 0, i32 6
  %238 = load i32, ptr %237, align 4, !tbaa !17
  %239 = add nsw i32 %238, -1
  %240 = sext i32 %239 to i64
  %241 = getelementptr inbounds i32, ptr %236, i64 %240
  %242 = load i32, ptr %241, align 4, !tbaa !31
  %243 = icmp sgt i32 %235, %242
  br i1 %243, label %244, label %245

244:                                              ; preds = %229
  tail call void @Perl_leave_scope(i32 noundef %242) #17
  br label %245

245:                                              ; preds = %244, %229
  %246 = load ptr, ptr %231, align 8, !tbaa !133
  %247 = getelementptr inbounds %struct.xpvcv, ptr %246, i64 0, i32 13
  %248 = load i32, ptr %247, align 4, !tbaa !31
  %249 = add nsw i32 %248, -1
  store i32 %249, ptr %247, align 4, !tbaa !31
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %251, label %259

251:                                              ; preds = %245
  %252 = load ptr, ptr %230, align 8, !tbaa !17
  %253 = getelementptr inbounds %struct.sv, ptr %252, i64 0, i32 1
  %254 = load i32, ptr %253, align 8, !tbaa !41
  %255 = icmp ugt i32 %254, 1
  br i1 %255, label %256, label %258

256:                                              ; preds = %251
  %257 = add i32 %254, -1
  store i32 %257, ptr %253, align 8, !tbaa !41
  br label %259

258:                                              ; preds = %251
  tail call void @Perl_sv_free2(ptr noundef nonnull %252, i32 noundef %254) #17
  br label %259

259:                                              ; preds = %258, %256, %245
  %260 = getelementptr inbounds %struct.sv, ptr %233, i64 0, i32 1
  %261 = load i32, ptr %260, align 8, !tbaa !41
  %262 = icmp ugt i32 %261, 1
  br i1 %262, label %263, label %265

263:                                              ; preds = %259
  %264 = add i32 %261, -1
  store i32 %264, ptr %260, align 8, !tbaa !41
  br label %266

265:                                              ; preds = %259
  tail call void @Perl_sv_free2(ptr noundef nonnull %233, i32 noundef %261) #17
  br label %266

266:                                              ; preds = %150, %148, %265, %263, %223, %221, %213, %160, %158, %224, %209, %183, %187, %8
  %267 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %268 = getelementptr inbounds %struct.stackinfo, ptr %267, i64 0, i32 4
  %269 = load i32, ptr %268, align 8, !tbaa !16
  %270 = add nsw i32 %269, -1
  store i32 %270, ptr %268, align 8, !tbaa !16
  br label %271

271:                                              ; preds = %49, %47, %39, %266
  %272 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %273 = getelementptr inbounds %struct.stackinfo, ptr %272, i64 0, i32 4
  %274 = load i32, ptr %273, align 8, !tbaa !16
  %275 = icmp sgt i32 %274, %0
  br i1 %275, label %8, label %276

276:                                              ; preds = %271, %4, %1
  ret void
}

declare ptr @Perl_newSV_type(i32 noundef) local_unnamed_addr #2

declare void @Perl_av_extend(ptr noundef, i64 noundef) local_unnamed_addr #2

declare void @Perl_setdefout(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_qerror(ptr noundef %0) local_unnamed_addr #0 {
  %2 = load i8, ptr @PL_in_eval, align 1, !tbaa !17
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %21, label %4

4:                                                ; preds = %1
  %5 = and i8 %2, 4
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %8, label %7

7:                                                ; preds = %4
  tail call void (i32, ptr, ...) @Perl_ck_warner(i32 noundef 12, ptr noundef nonnull @.str.15, ptr noundef %0) #17
  br label %26

8:                                                ; preds = %4
  %9 = load ptr, ptr @PL_errgv, align 8, !tbaa !6
  %10 = getelementptr inbounds %struct.gv, ptr %9, i64 0, i32 3
  %11 = load ptr, ptr %10, align 8, !tbaa !17
  %12 = load ptr, ptr %11, align 8, !tbaa !6
  %13 = icmp eq ptr %12, null
  br i1 %13, label %14, label %19

14:                                               ; preds = %8
  %15 = tail call ptr @Perl_gv_add_by_type(ptr noundef nonnull %9, i32 noundef 0) #17
  %16 = getelementptr inbounds %struct.gv, ptr %15, i64 0, i32 3
  %17 = load ptr, ptr %16, align 8, !tbaa !17
  %18 = load ptr, ptr %17, align 8, !tbaa !6
  br label %19

19:                                               ; preds = %8, %14
  %20 = phi ptr [ %18, %14 ], [ %12, %8 ]
  tail call void @Perl_sv_catsv_flags(ptr noundef %20, ptr noundef %0, i32 noundef 2) #17
  br label %26

21:                                               ; preds = %1
  %22 = load ptr, ptr @PL_errors, align 8, !tbaa !6
  %23 = icmp eq ptr %22, null
  br i1 %23, label %25, label %24

24:                                               ; preds = %21
  tail call void @Perl_sv_catsv_flags(ptr noundef nonnull %22, ptr noundef %0, i32 noundef 2) #17
  br label %26

25:                                               ; preds = %21
  tail call void (ptr, ...) @Perl_warn(ptr noundef nonnull @.str.16, ptr noundef %0) #17
  br label %26

26:                                               ; preds = %24, %25, %7, %19
  %27 = load ptr, ptr @PL_parser, align 8, !tbaa !6
  %28 = icmp eq ptr %27, null
  br i1 %28, label %33, label %29

29:                                               ; preds = %26
  %30 = getelementptr inbounds %struct.yy_parser, ptr %27, i64 0, i32 44
  %31 = load i8, ptr %30, align 1, !tbaa !146
  %32 = add i8 %31, 1
  store i8 %32, ptr %30, align 1, !tbaa !146
  br label %33

33:                                               ; preds = %29, %26
  ret void
}

declare void @Perl_warn(ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_die_unwind(ptr noundef %0) local_unnamed_addr #0 {
  %2 = alloca i64, align 8
  %3 = tail call ptr @Perl_sv_mortalcopy_flags(ptr noundef %0, i32 noundef 1538) #17
  %4 = load i8, ptr @PL_in_eval, align 1, !tbaa !17
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %278, label %6

6:                                                ; preds = %1
  %7 = and i8 %4, 4
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %25

9:                                                ; preds = %6
  %10 = getelementptr inbounds %struct.sv, ptr %3, i64 0, i32 2
  %11 = load i32, ptr %10, align 4, !tbaa !49
  %12 = and i32 %11, -524289
  store i32 %12, ptr %10, align 4, !tbaa !49
  %13 = load ptr, ptr @PL_errgv, align 8, !tbaa !6
  %14 = getelementptr inbounds %struct.gv, ptr %13, i64 0, i32 3
  %15 = load ptr, ptr %14, align 8, !tbaa !17
  %16 = load ptr, ptr %15, align 8, !tbaa !6
  %17 = icmp eq ptr %16, null
  br i1 %17, label %18, label %23

18:                                               ; preds = %9
  %19 = tail call ptr @Perl_gv_add_by_type(ptr noundef nonnull %13, i32 noundef 0) #17
  %20 = getelementptr inbounds %struct.gv, ptr %19, i64 0, i32 3
  %21 = load ptr, ptr %20, align 8, !tbaa !17
  %22 = load ptr, ptr %21, align 8, !tbaa !6
  br label %23

23:                                               ; preds = %9, %18
  %24 = phi ptr [ %22, %18 ], [ %16, %9 ]
  tail call void @Perl_sv_setsv_flags(ptr noundef %24, ptr noundef nonnull %3, i32 noundef 1538) #17
  br label %26

25:                                               ; preds = %6
  tail call void (i32, ptr, ...) @Perl_ck_warner(i32 noundef 12, ptr noundef nonnull @.str.15, ptr noundef %3) #17
  br label %26

26:                                               ; preds = %23, %25
  %27 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  br label %28

28:                                               ; preds = %57, %26
  %29 = phi ptr [ %54, %57 ], [ %27, %26 ]
  %30 = getelementptr inbounds %struct.stackinfo, ptr %29, i64 0, i32 4
  %31 = load i32, ptr %30, align 8, !tbaa !16
  %32 = icmp sgt i32 %31, -1
  br i1 %32, label %33, label %46

33:                                               ; preds = %28
  %34 = getelementptr inbounds %struct.stackinfo, ptr %29, i64 0, i32 1
  %35 = load ptr, ptr %34, align 8, !tbaa !14
  br label %36

36:                                               ; preds = %43, %33
  %37 = phi i32 [ %31, %33 ], [ %44, %43 ]
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %struct.context, ptr %35, i64 %38
  %40 = load i8, ptr %39, align 8, !tbaa !17
  %41 = and i8 %40, 15
  %42 = icmp eq i8 %41, 10
  br i1 %42, label %80, label %43

43:                                               ; preds = %36
  %44 = add nsw i32 %37, -1
  %45 = icmp sgt i32 %37, 0
  br i1 %45, label %36, label %46, !llvm.loop !149

46:                                               ; preds = %43, %28
  %47 = getelementptr inbounds %struct.stackinfo, ptr %29, i64 0, i32 2
  %48 = load ptr, ptr %47, align 8, !tbaa !22
  %49 = icmp eq ptr %48, null
  br i1 %49, label %278, label %50

50:                                               ; preds = %46
  tail call void @Perl_dounwind(i32 noundef -1)
  %51 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !6
  %52 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %53 = getelementptr inbounds %struct.stackinfo, ptr %52, i64 0, i32 2
  %54 = load ptr, ptr %53, align 8, !tbaa !22
  %55 = icmp eq ptr %54, null
  br i1 %55, label %56, label %57

56:                                               ; preds = %50
  tail call void @Perl_croak_popstack() #17
  br label %57

57:                                               ; preds = %50, %56
  %58 = load ptr, ptr @PL_stack_base, align 8, !tbaa !6
  %59 = ptrtoint ptr %51 to i64
  %60 = ptrtoint ptr %58 to i64
  %61 = sub i64 %59, %60
  %62 = ashr exact i64 %61, 3
  %63 = load ptr, ptr @PL_curstack, align 8, !tbaa !6
  %64 = load ptr, ptr %63, align 8, !tbaa !141
  %65 = getelementptr inbounds %struct.xpvav, ptr %64, i64 0, i32 2
  store i64 %62, ptr %65, align 8, !tbaa !142
  %66 = load ptr, ptr %54, align 8, !tbaa !150
  %67 = getelementptr inbounds %struct.av, ptr %66, i64 0, i32 3
  %68 = load ptr, ptr %67, align 8, !tbaa !17
  store ptr %68, ptr @PL_stack_base, align 8, !tbaa !6
  %69 = load ptr, ptr %54, align 8, !tbaa !150
  %70 = load ptr, ptr %69, align 8, !tbaa !141
  %71 = getelementptr inbounds %struct.xpvav, ptr %70, i64 0, i32 3
  %72 = load i64, ptr %71, align 8, !tbaa !145
  %73 = getelementptr inbounds ptr, ptr %68, i64 %72
  store ptr %73, ptr @PL_stack_max, align 8, !tbaa !6
  %74 = load ptr, ptr %54, align 8, !tbaa !150
  %75 = load ptr, ptr %74, align 8, !tbaa !141
  %76 = getelementptr inbounds %struct.xpvav, ptr %75, i64 0, i32 2
  %77 = load i64, ptr %76, align 8, !tbaa !142
  %78 = getelementptr inbounds ptr, ptr %68, i64 %77
  store ptr %78, ptr @PL_stack_sp, align 8, !tbaa !6
  %79 = load ptr, ptr %54, align 8, !tbaa !150
  store ptr %79, ptr @PL_curstack, align 8, !tbaa !6
  store ptr %54, ptr @PL_curstackinfo, align 8, !tbaa !6
  br label %28, !llvm.loop !151

80:                                               ; preds = %36
  %81 = icmp slt i32 %37, %31
  br i1 %81, label %82, label %88

82:                                               ; preds = %80
  tail call void @Perl_dounwind(i32 noundef %37)
  %83 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %84 = getelementptr inbounds %struct.stackinfo, ptr %83, i64 0, i32 1
  %85 = load ptr, ptr %84, align 8, !tbaa !14
  %86 = getelementptr inbounds %struct.stackinfo, ptr %83, i64 0, i32 4
  %87 = load i32, ptr %86, align 8, !tbaa !16
  br label %88

88:                                               ; preds = %82, %80
  %89 = phi i32 [ %87, %82 ], [ %31, %80 ]
  %90 = phi ptr [ %85, %82 ], [ %35, %80 ]
  %91 = phi ptr [ %83, %82 ], [ %29, %80 ]
  %92 = getelementptr inbounds %struct.stackinfo, ptr %91, i64 0, i32 4
  %93 = add nsw i32 %89, -1
  store i32 %93, ptr %92, align 8, !tbaa !16
  %94 = sext i32 %89 to i64
  %95 = getelementptr inbounds %struct.context, ptr %90, i64 %94
  %96 = load ptr, ptr @PL_stack_base, align 8, !tbaa !6
  %97 = getelementptr inbounds %struct.block, ptr %95, i64 0, i32 3
  %98 = load i32, ptr %97, align 4, !tbaa !17
  %99 = sext i32 %98 to i64
  %100 = getelementptr inbounds ptr, ptr %96, i64 %99
  %101 = getelementptr inbounds %struct.block, ptr %95, i64 0, i32 4
  %102 = load ptr, ptr %101, align 8, !tbaa !17
  store ptr %102, ptr @PL_curcop, align 8, !tbaa !6
  %103 = load ptr, ptr @PL_markstack, align 8, !tbaa !6
  %104 = getelementptr inbounds %struct.block, ptr %95, i64 0, i32 5
  %105 = load i32, ptr %104, align 8, !tbaa !17
  %106 = sext i32 %105 to i64
  %107 = getelementptr inbounds i32, ptr %103, i64 %106
  store ptr %107, ptr @PL_markstack_ptr, align 8, !tbaa !6
  %108 = getelementptr inbounds %struct.block, ptr %95, i64 0, i32 6
  %109 = load i32, ptr %108, align 4, !tbaa !17
  store i32 %109, ptr @PL_scopestack_ix, align 4, !tbaa !31
  %110 = getelementptr inbounds %struct.block, ptr %95, i64 0, i32 7
  %111 = load ptr, ptr %110, align 8, !tbaa !17
  store ptr %111, ptr @PL_curpm, align 8, !tbaa !6
  %112 = getelementptr inbounds %struct.block, ptr %95, i64 0, i32 1
  %113 = load i8, ptr %112, align 1, !tbaa !17
  %114 = load i8, ptr %95, align 8, !tbaa !17
  %115 = and i8 %114, 15
  %116 = icmp eq i8 %115, 10
  br i1 %116, label %179, label %117

117:                                              ; preds = %88
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #17
  store ptr %3, ptr @PL_Sv, align 8, !tbaa !6
  %118 = getelementptr inbounds %struct.sv, ptr %3, i64 0, i32 2
  %119 = load i32, ptr %118, align 4, !tbaa !49
  %120 = and i32 %119, 2098176
  %121 = icmp eq i32 %120, 1024
  br i1 %121, label %122, label %128

122:                                              ; preds = %117
  %123 = load ptr, ptr %3, align 8, !tbaa !72
  %124 = getelementptr inbounds %struct.xpv, ptr %123, i64 0, i32 2
  %125 = load i64, ptr %124, align 8, !tbaa !53
  store i64 %125, ptr %2, align 8, !tbaa !59
  %126 = getelementptr inbounds %struct.sv, ptr %3, i64 0, i32 3
  %127 = load ptr, ptr %126, align 8, !tbaa !17
  br label %130

128:                                              ; preds = %117
  %129 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %3, ptr noundef nonnull %2, i32 noundef 34) #17
  br label %130

130:                                              ; preds = %128, %122
  %131 = phi ptr [ %127, %122 ], [ %129, %128 ]
  %132 = load ptr, ptr @PL_stderrgv, align 8, !tbaa !6
  %133 = icmp eq ptr %132, null
  br i1 %133, label %150, label %134

134:                                              ; preds = %130
  %135 = getelementptr inbounds %struct.gv, ptr %132, i64 0, i32 2
  %136 = load i32, ptr %135, align 4, !tbaa !152
  %137 = and i32 %136, 255
  %138 = icmp eq i32 %137, 9
  br i1 %138, label %139, label %150

139:                                              ; preds = %134
  %140 = getelementptr inbounds %struct.gv, ptr %132, i64 0, i32 3
  %141 = load ptr, ptr %140, align 8, !tbaa !17
  %142 = getelementptr inbounds %struct.gp, ptr %141, i64 0, i32 1
  %143 = load ptr, ptr %142, align 8, !tbaa !128
  %144 = icmp eq ptr %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = load ptr, ptr %143, align 8, !tbaa !129
  %147 = getelementptr inbounds %struct.xpvio, ptr %146, i64 0, i32 5
  %148 = load ptr, ptr %147, align 8, !tbaa !153
  %149 = icmp eq ptr %148, null
  br i1 %149, label %150, label %152

150:                                              ; preds = %145, %139, %134, %130
  %151 = call ptr @Perl_PerlIO_stderr() #17
  br label %152

152:                                              ; preds = %145, %150
  %153 = phi ptr [ %151, %150 ], [ %148, %145 ]
  %154 = call i64 @Perl_PerlIO_write(ptr noundef %153, ptr noundef nonnull @.str.17, i64 noundef 11) #17
  %155 = load ptr, ptr @PL_stderrgv, align 8, !tbaa !6
  %156 = icmp eq ptr %155, null
  br i1 %156, label %173, label %157

157:                                              ; preds = %152
  %158 = getelementptr inbounds %struct.gv, ptr %155, i64 0, i32 2
  %159 = load i32, ptr %158, align 4, !tbaa !152
  %160 = and i32 %159, 255
  %161 = icmp eq i32 %160, 9
  br i1 %161, label %162, label %173

162:                                              ; preds = %157
  %163 = getelementptr inbounds %struct.gv, ptr %155, i64 0, i32 3
  %164 = load ptr, ptr %163, align 8, !tbaa !17
  %165 = getelementptr inbounds %struct.gp, ptr %164, i64 0, i32 1
  %166 = load ptr, ptr %165, align 8, !tbaa !128
  %167 = icmp eq ptr %166, null
  br i1 %167, label %173, label %168

168:                                              ; preds = %162
  %169 = load ptr, ptr %166, align 8, !tbaa !129
  %170 = getelementptr inbounds %struct.xpvio, ptr %169, i64 0, i32 5
  %171 = load ptr, ptr %170, align 8, !tbaa !153
  %172 = icmp eq ptr %171, null
  br i1 %172, label %173, label %175

173:                                              ; preds = %168, %162, %157, %152
  %174 = call ptr @Perl_PerlIO_stderr() #17
  br label %175

175:                                              ; preds = %168, %173
  %176 = phi ptr [ %174, %173 ], [ %171, %168 ]
  %177 = load i64, ptr %2, align 8, !tbaa !59
  %178 = call i64 @Perl_PerlIO_write(ptr noundef %176, ptr noundef %131, i64 noundef %177) #17
  call void @Perl_my_exit(i32 noundef 1) #17
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #17
  br label %179

179:                                              ; preds = %88, %175
  %180 = getelementptr inbounds %struct.block, ptr %95, i64 0, i32 2
  %181 = load i16, ptr %180, align 2, !tbaa !17
  %182 = trunc i16 %181 to i8
  %183 = and i8 %182, 127
  store i8 %183, ptr @PL_in_eval, align 1, !tbaa !17
  %184 = load i16, ptr %180, align 2, !tbaa !17
  %185 = getelementptr inbounds %struct.block, ptr %95, i64 0, i32 8
  %186 = getelementptr inbounds %struct.block, ptr %95, i64 0, i32 8, i32 0, i32 2
  %187 = load ptr, ptr %186, align 8, !tbaa !17
  store ptr %187, ptr @PL_eval_root, align 8, !tbaa !6
  %188 = getelementptr inbounds %struct.block, ptr %95, i64 0, i32 8, i32 0, i32 3
  %189 = load ptr, ptr %188, align 8, !tbaa !17
  %190 = icmp eq ptr %189, null
  br i1 %190, label %203, label %191

191:                                              ; preds = %179
  %192 = getelementptr inbounds %struct.sv, ptr %189, i64 0, i32 2
  %193 = load i32, ptr %192, align 4, !tbaa !49
  %194 = and i32 %193, 49152
  %195 = icmp eq i32 %194, 49152
  br i1 %195, label %196, label %203

196:                                              ; preds = %191
  %197 = getelementptr inbounds %struct.sv, ptr %189, i64 0, i32 1
  %198 = load i32, ptr %197, align 8, !tbaa !41
  %199 = icmp ugt i32 %198, 1
  br i1 %199, label %200, label %202

200:                                              ; preds = %196
  %201 = add i32 %198, -1
  store i32 %201, ptr %197, align 8, !tbaa !41
  br label %203

202:                                              ; preds = %196
  call void @Perl_sv_free2(ptr noundef nonnull %189, i32 noundef %198) #17
  br label %203

203:                                              ; preds = %202, %200, %191, %179
  %204 = getelementptr inbounds %struct.block, ptr %95, i64 0, i32 8, i32 0, i32 1
  %205 = load ptr, ptr %204, align 8, !tbaa !17
  %206 = icmp eq ptr %205, null
  br i1 %206, label %210, label %207

207:                                              ; preds = %203
  %208 = call ptr @Perl_sv_2mortal(ptr noundef nonnull %205) #17
  %209 = load ptr, ptr %204, align 8, !tbaa !17
  br label %210

210:                                              ; preds = %207, %203
  %211 = phi ptr [ %209, %207 ], [ null, %203 ]
  %212 = getelementptr inbounds %struct.block, ptr %95, i64 0, i32 8, i32 0, i32 5
  %213 = load ptr, ptr %212, align 8, !tbaa !17
  %214 = load ptr, ptr %185, align 8, !tbaa !17
  %215 = icmp eq i8 %113, 2
  br i1 %215, label %216, label %218

216:                                              ; preds = %210
  %217 = getelementptr inbounds ptr, ptr %100, i64 1
  store ptr @PL_sv_undef, ptr %217, align 8, !tbaa !6
  br label %218

218:                                              ; preds = %216, %210
  %219 = phi ptr [ %217, %216 ], [ %100, %210 ]
  store ptr %219, ptr @PL_stack_sp, align 8, !tbaa !6
  call void @Perl_pop_scope() #17
  %220 = and i16 %184, -128
  %221 = icmp eq i16 %220, -22144
  br i1 %221, label %222, label %255

222:                                              ; preds = %218
  %223 = load ptr, ptr @PL_incgv, align 8, !tbaa !6
  %224 = getelementptr inbounds %struct.gv, ptr %223, i64 0, i32 3
  %225 = load ptr, ptr %224, align 8, !tbaa !17
  %226 = getelementptr inbounds %struct.gp, ptr %225, i64 0, i32 5
  %227 = load ptr, ptr %226, align 8, !tbaa !155
  %228 = icmp eq ptr %227, null
  br i1 %228, label %229, label %235

229:                                              ; preds = %222
  %230 = call ptr @Perl_gv_add_by_type(ptr noundef nonnull %223, i32 noundef 12) #17
  %231 = getelementptr inbounds %struct.gv, ptr %230, i64 0, i32 3
  %232 = load ptr, ptr %231, align 8, !tbaa !17
  %233 = getelementptr inbounds %struct.gp, ptr %232, i64 0, i32 5
  %234 = load ptr, ptr %233, align 8, !tbaa !155
  br label %235

235:                                              ; preds = %222, %229
  %236 = phi ptr [ %234, %229 ], [ %227, %222 ]
  %237 = getelementptr inbounds %struct.sv, ptr %211, i64 0, i32 3
  %238 = load ptr, ptr %237, align 8, !tbaa !17
  %239 = getelementptr inbounds %struct.sv, ptr %211, i64 0, i32 2
  %240 = load i32, ptr %239, align 4, !tbaa !49
  %241 = and i32 %240, 536870912
  %242 = icmp eq i32 %241, 0
  %243 = load ptr, ptr %211, align 8, !tbaa !72
  %244 = getelementptr inbounds %struct.xpv, ptr %243, i64 0, i32 2
  %245 = load i64, ptr %244, align 8, !tbaa !53
  %246 = trunc i64 %245 to i32
  %247 = sub nsw i32 0, %246
  %248 = select i1 %242, i32 %246, i32 %247
  %249 = call ptr @Perl_hv_common_key_len(ptr noundef %236, ptr noundef %238, i32 noundef %248, i32 noundef 36, ptr noundef nonnull @PL_sv_undef, i32 noundef 0) #17
  %250 = icmp eq ptr %3, null
  br i1 %250, label %251, label %253

251:                                              ; preds = %235
  %252 = call ptr @Perl_newSVpvn_flags(ptr noundef nonnull @.str.19, i64 noundef 14, i32 noundef 524288) #17
  br label %253

253:                                              ; preds = %235, %251
  %254 = phi ptr [ %252, %251 ], [ %3, %235 ]
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.18, ptr noundef %254) #17
  br label %255

255:                                              ; preds = %253, %218
  br i1 %8, label %256, label %269

256:                                              ; preds = %255
  %257 = load ptr, ptr @PL_errgv, align 8, !tbaa !6
  %258 = getelementptr inbounds %struct.gv, ptr %257, i64 0, i32 3
  %259 = load ptr, ptr %258, align 8, !tbaa !17
  %260 = load ptr, ptr %259, align 8, !tbaa !6
  %261 = icmp eq ptr %260, null
  br i1 %261, label %262, label %267

262:                                              ; preds = %256
  %263 = call ptr @Perl_gv_add_by_type(ptr noundef nonnull %257, i32 noundef 0) #17
  %264 = getelementptr inbounds %struct.gv, ptr %263, i64 0, i32 3
  %265 = load ptr, ptr %264, align 8, !tbaa !17
  %266 = load ptr, ptr %265, align 8, !tbaa !6
  br label %267

267:                                              ; preds = %256, %262
  %268 = phi ptr [ %266, %262 ], [ %260, %256 ]
  call void @Perl_sv_setsv_flags(ptr noundef %268, ptr noundef %3, i32 noundef 1538) #17
  br label %269

269:                                              ; preds = %267, %255
  store ptr %213, ptr @PL_restartjmpenv, align 8, !tbaa !6
  store ptr %214, ptr @PL_restartop, align 8, !tbaa !6
  %270 = load ptr, ptr @PL_top_env, align 8, !tbaa !6
  %271 = getelementptr inbounds %struct.jmpenv, ptr %270, i64 0, i32 1
  %272 = load ptr, ptr %271, align 8, !tbaa !156
  %273 = icmp eq ptr %272, null
  br i1 %273, label %275, label %274

274:                                              ; preds = %269
  call void @siglongjmp(ptr noundef nonnull %270, i32 noundef 3) #19
  unreachable

275:                                              ; preds = %269
  %276 = call ptr @Perl_PerlIO_stderr() #17
  %277 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %276, ptr noundef nonnull @.str.20, i32 noundef 3) #17
  call void @exit(i32 noundef 1) #19
  unreachable

278:                                              ; preds = %46, %1
  tail call void @Perl_write_to_stderr(ptr noundef %3) #17
  tail call void @Perl_my_failure_exit() #17
  ret void
}

declare void @Perl_sv_setsv_flags(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

declare void @Perl_croak_popstack() local_unnamed_addr #2

declare i64 @Perl_PerlIO_write(ptr noundef, ptr noundef, i64 noundef) local_unnamed_addr #2

declare ptr @Perl_PerlIO_stderr() local_unnamed_addr #2

declare void @Perl_my_exit(i32 noundef) local_unnamed_addr #2

declare ptr @Perl_hv_common_key_len(ptr noundef, ptr noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: noreturn nounwind
declare void @siglongjmp(ptr noundef, i32 noundef) local_unnamed_addr #8

declare i32 @PerlIO_printf(ptr noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: noreturn nounwind
declare void @exit(i32 noundef) local_unnamed_addr #8

declare void @Perl_write_to_stderr(ptr noundef) local_unnamed_addr #2

declare void @Perl_my_failure_exit() local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_xor() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !6
  %2 = getelementptr inbounds ptr, ptr %1, i64 -1
  %3 = load ptr, ptr %1, align 8, !tbaa !6
  %4 = load ptr, ptr %2, align 8, !tbaa !6
  %5 = icmp eq ptr %4, null
  br i1 %5, label %65, label %6

6:                                                ; preds = %0
  %7 = getelementptr inbounds %struct.sv, ptr %4, i64 0, i32 2
  %8 = load i32, ptr %7, align 4, !tbaa !49
  %9 = and i32 %8, 2097152
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %13, label %11

11:                                               ; preds = %6
  %12 = tail call zeroext i1 @Perl_sv_2bool_flags(ptr noundef nonnull %4, i32 noundef 2) #17
  br label %62

13:                                               ; preds = %6
  %14 = and i32 %8, 65280
  %15 = icmp ne i32 %14, 0
  %16 = and i32 %8, 255
  %17 = icmp eq i32 %16, 8
  %18 = or i1 %15, %17
  %19 = and i32 %8, 16826623
  %20 = icmp eq i32 %19, 16777226
  %21 = or i1 %20, %18
  br i1 %21, label %22, label %62

22:                                               ; preds = %13
  %23 = and i32 %8, 1024
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %39, label %25

25:                                               ; preds = %22
  %26 = load ptr, ptr %4, align 8, !tbaa !72
  %27 = icmp eq ptr %26, null
  br i1 %27, label %62, label %28

28:                                               ; preds = %25
  %29 = getelementptr inbounds %struct.xpv, ptr %26, i64 0, i32 2
  %30 = load i64, ptr %29, align 8, !tbaa !53
  %31 = icmp ugt i64 %30, 1
  br i1 %31, label %62, label %32

32:                                               ; preds = %28
  %33 = icmp eq i64 %30, 0
  br i1 %33, label %62, label %34

34:                                               ; preds = %32
  %35 = getelementptr inbounds %struct.sv, ptr %4, i64 0, i32 3
  %36 = load ptr, ptr %35, align 8, !tbaa !17
  %37 = load i8, ptr %36, align 1, !tbaa !17
  %38 = icmp ne i8 %37, 48
  br label %62

39:                                               ; preds = %22
  %40 = and i32 %8, 768
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %60, label %42

42:                                               ; preds = %39
  %43 = and i32 %8, 256
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %50, label %45

45:                                               ; preds = %42
  %46 = load ptr, ptr %4, align 8, !tbaa !72
  %47 = getelementptr inbounds %struct.xpviv, ptr %46, i64 0, i32 4
  %48 = load i64, ptr %47, align 8, !tbaa !17
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %50, label %62

50:                                               ; preds = %45, %42
  %51 = and i32 %8, 512
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %62, label %53

53:                                               ; preds = %50
  %54 = load ptr, ptr %4, align 8, !tbaa !72
  %55 = getelementptr inbounds %struct.xpvnv, ptr %54, i64 0, i32 5
  %56 = load double, ptr %55, align 8, !tbaa !17
  %57 = fcmp uno double %56, 0.000000e+00
  br i1 %57, label %62, label %58

58:                                               ; preds = %53
  %59 = fcmp fast une double %56, 0.000000e+00
  br label %62

60:                                               ; preds = %39
  %61 = tail call zeroext i1 @Perl_sv_2bool_flags(ptr noundef nonnull %4, i32 noundef 0) #17
  br label %62

62:                                               ; preds = %45, %53, %58, %50, %25, %32, %34, %28, %13, %60, %11
  %63 = phi i1 [ %12, %11 ], [ %61, %60 ], [ false, %13 ], [ false, %25 ], [ true, %28 ], [ false, %32 ], [ %38, %34 ], [ true, %45 ], [ false, %50 ], [ true, %53 ], [ %59, %58 ]
  %64 = zext i1 %63 to i32
  br label %65

65:                                               ; preds = %0, %62
  %66 = phi i32 [ %64, %62 ], [ 0, %0 ]
  %67 = icmp eq ptr %3, null
  br i1 %67, label %127, label %68

68:                                               ; preds = %65
  %69 = getelementptr inbounds %struct.sv, ptr %3, i64 0, i32 2
  %70 = load i32, ptr %69, align 4, !tbaa !49
  %71 = and i32 %70, 2097152
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %75, label %73

73:                                               ; preds = %68
  %74 = tail call zeroext i1 @Perl_sv_2bool_flags(ptr noundef nonnull %3, i32 noundef 2) #17
  br label %124

75:                                               ; preds = %68
  %76 = and i32 %70, 65280
  %77 = icmp ne i32 %76, 0
  %78 = and i32 %70, 255
  %79 = icmp eq i32 %78, 8
  %80 = or i1 %77, %79
  %81 = and i32 %70, 16826623
  %82 = icmp eq i32 %81, 16777226
  %83 = or i1 %82, %80
  br i1 %83, label %84, label %124

84:                                               ; preds = %75
  %85 = and i32 %70, 1024
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %101, label %87

87:                                               ; preds = %84
  %88 = load ptr, ptr %3, align 8, !tbaa !72
  %89 = icmp eq ptr %88, null
  br i1 %89, label %124, label %90

90:                                               ; preds = %87
  %91 = getelementptr inbounds %struct.xpv, ptr %88, i64 0, i32 2
  %92 = load i64, ptr %91, align 8, !tbaa !53
  %93 = icmp ugt i64 %92, 1
  br i1 %93, label %124, label %94

94:                                               ; preds = %90
  %95 = icmp eq i64 %92, 0
  br i1 %95, label %124, label %96

96:                                               ; preds = %94
  %97 = getelementptr inbounds %struct.sv, ptr %3, i64 0, i32 3
  %98 = load ptr, ptr %97, align 8, !tbaa !17
  %99 = load i8, ptr %98, align 1, !tbaa !17
  %100 = icmp ne i8 %99, 48
  br label %124

101:                                              ; preds = %84
  %102 = and i32 %70, 768
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %122, label %104

104:                                              ; preds = %101
  %105 = and i32 %70, 256
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %112, label %107

107:                                              ; preds = %104
  %108 = load ptr, ptr %3, align 8, !tbaa !72
  %109 = getelementptr inbounds %struct.xpviv, ptr %108, i64 0, i32 4
  %110 = load i64, ptr %109, align 8, !tbaa !17
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %124

112:                                              ; preds = %107, %104
  %113 = and i32 %70, 512
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %124, label %115

115:                                              ; preds = %112
  %116 = load ptr, ptr %3, align 8, !tbaa !72
  %117 = getelementptr inbounds %struct.xpvnv, ptr %116, i64 0, i32 5
  %118 = load double, ptr %117, align 8, !tbaa !17
  %119 = fcmp uno double %118, 0.000000e+00
  br i1 %119, label %124, label %120

120:                                              ; preds = %115
  %121 = fcmp fast une double %118, 0.000000e+00
  br label %124

122:                                              ; preds = %101
  %123 = tail call zeroext i1 @Perl_sv_2bool_flags(ptr noundef nonnull %3, i32 noundef 0) #17
  br label %124

124:                                              ; preds = %107, %115, %120, %112, %87, %94, %96, %90, %75, %122, %73
  %125 = phi i1 [ %74, %73 ], [ %123, %122 ], [ false, %75 ], [ false, %87 ], [ true, %90 ], [ false, %94 ], [ %100, %96 ], [ true, %107 ], [ false, %112 ], [ true, %115 ], [ %121, %120 ]
  %126 = zext i1 %125 to i32
  br label %127

127:                                              ; preds = %65, %124
  %128 = phi i32 [ %126, %124 ], [ 0, %65 ]
  %129 = icmp eq i32 %66, %128
  %130 = select i1 %129, ptr @PL_sv_no, ptr @PL_sv_yes
  store ptr %130, ptr %2, align 8, !tbaa !6
  store ptr %2, ptr @PL_stack_sp, align 8, !tbaa !6
  %131 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %132 = load ptr, ptr %131, align 8, !tbaa !20
  ret ptr %132
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_caller() local_unnamed_addr #0 {
  %1 = alloca ptr, align 8
  %2 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !6
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %1) #17
  %3 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %4 = getelementptr inbounds %struct.op, ptr %3, i64 0, i32 5
  %5 = load i8, ptr %4, align 2, !tbaa !30
  %6 = and i8 %5, 3
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %0
  %9 = zext i8 %6 to i32
  br label %42

10:                                               ; preds = %0
  %11 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %12 = getelementptr inbounds %struct.stackinfo, ptr %11, i64 0, i32 1
  %13 = load ptr, ptr %12, align 8, !tbaa !14
  %14 = getelementptr inbounds %struct.stackinfo, ptr %11, i64 0, i32 4
  %15 = load i32, ptr %14, align 8, !tbaa !16
  %16 = icmp sgt i32 %15, -1
  br i1 %16, label %17, label %42

17:                                               ; preds = %10
  %18 = zext i32 %15 to i64
  br label %19

19:                                               ; preds = %27, %17
  %20 = phi i64 [ %18, %17 ], [ %28, %27 ]
  %21 = getelementptr inbounds %struct.context, ptr %13, i64 %20
  %22 = load i8, ptr %21, align 8, !tbaa !17
  %23 = and i8 %22, 15
  %24 = zext i8 %23 to i32
  switch i32 %24, label %27 [
    i32 8, label %25
    i32 10, label %30
    i32 9, label %30
  ]

25:                                               ; preds = %19
  %26 = icmp sgt i8 %22, -1
  br i1 %26, label %30, label %27

27:                                               ; preds = %25, %19
  %28 = add nsw i64 %20, -1
  %29 = icmp sgt i64 %20, 0
  br i1 %29, label %19, label %42, !llvm.loop !18

30:                                               ; preds = %25, %19, %19
  %31 = and i64 %20, 2147483648
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %33, label %42

33:                                               ; preds = %30
  %34 = and i64 %20, 4294967295
  %35 = getelementptr inbounds %struct.context, ptr %13, i64 %34, i32 0, i32 0, i32 1
  %36 = load i8, ptr %35, align 1, !tbaa !17
  switch i8 %36, label %39 [
    i8 1, label %42
    i8 2, label %37
    i8 3, label %38
  ]

37:                                               ; preds = %33
  br label %42

38:                                               ; preds = %33
  br label %42

39:                                               ; preds = %33
  %40 = zext i8 %36 to i32
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.14, i32 noundef %40) #17
  %41 = load ptr, ptr @PL_op, align 8, !tbaa !6
  br label %42

42:                                               ; preds = %27, %39, %38, %37, %33, %30, %10, %8
  %43 = phi ptr [ %3, %8 ], [ %41, %39 ], [ %3, %38 ], [ %3, %37 ], [ %3, %30 ], [ %3, %33 ], [ %3, %10 ], [ %3, %27 ]
  %44 = phi i32 [ %9, %8 ], [ 0, %39 ], [ 3, %38 ], [ 2, %37 ], [ 1, %30 ], [ 1, %33 ], [ 1, %10 ], [ 1, %27 ]
  %45 = getelementptr inbounds %struct.op, ptr %43, i64 0, i32 6
  %46 = load i8, ptr %45, align 1, !tbaa !10
  %47 = and i8 %46, 15
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %71, label %49

49:                                               ; preds = %42
  %50 = load ptr, ptr %2, align 8, !tbaa !6
  %51 = icmp eq ptr %50, null
  %52 = getelementptr inbounds ptr, ptr %2, i64 -1
  br i1 %51, label %71, label %53

53:                                               ; preds = %49
  store ptr %50, ptr @PL_Sv, align 8, !tbaa !6
  %54 = getelementptr inbounds %struct.sv, ptr %50, i64 0, i32 2
  %55 = load i32, ptr %54, align 4, !tbaa !49
  %56 = and i32 %55, 2097408
  %57 = icmp eq i32 %56, 256
  br i1 %57, label %58, label %62

58:                                               ; preds = %53
  %59 = load ptr, ptr %50, align 8, !tbaa !72
  %60 = getelementptr inbounds %struct.xpviv, ptr %59, i64 0, i32 4
  %61 = load i64, ptr %60, align 8, !tbaa !17
  br label %67

62:                                               ; preds = %53
  %63 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %50, i32 noundef 2) #17
  %64 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %65 = getelementptr inbounds %struct.op, ptr %64, i64 0, i32 6
  %66 = load i8, ptr %65, align 1, !tbaa !10
  br label %67

67:                                               ; preds = %62, %58
  %68 = phi i8 [ %46, %58 ], [ %66, %62 ]
  %69 = phi i64 [ %61, %58 ], [ %63, %62 ]
  %70 = trunc i64 %69 to i32
  br label %71

71:                                               ; preds = %49, %42, %67
  %72 = phi i8 [ %68, %67 ], [ %46, %42 ], [ %46, %49 ]
  %73 = phi i1 [ true, %67 ], [ false, %42 ], [ false, %49 ]
  %74 = phi i32 [ %70, %67 ], [ 0, %42 ], [ 0, %49 ]
  %75 = phi ptr [ %52, %67 ], [ %2, %42 ], [ %52, %49 ]
  %76 = lshr i8 %72, 7
  %77 = zext i8 %76 to i32
  %78 = add nsw i32 %74, %77
  %79 = call ptr @Perl_caller_cx(i32 noundef %78, ptr noundef nonnull %1)
  %80 = icmp eq ptr %79, null
  br i1 %80, label %81, label %94

81:                                               ; preds = %71
  %82 = icmp eq i32 %44, 3
  br i1 %82, label %375, label %83

83:                                               ; preds = %81
  %84 = load ptr, ptr @PL_stack_max, align 8, !tbaa !6
  %85 = ptrtoint ptr %84 to i64
  %86 = ptrtoint ptr %75 to i64
  %87 = sub i64 %85, %86
  %88 = icmp slt i64 %87, 8
  br i1 %88, label %89, label %91

89:                                               ; preds = %83
  %90 = call ptr @Perl_stack_grow(ptr noundef %75, ptr noundef %75, i64 noundef 1) #17
  br label %91

91:                                               ; preds = %83, %89
  %92 = phi ptr [ %90, %89 ], [ %75, %83 ]
  %93 = getelementptr inbounds ptr, ptr %92, i64 1
  store ptr @PL_sv_undef, ptr %93, align 8, !tbaa !6
  br label %375

94:                                               ; preds = %71
  %95 = getelementptr inbounds %struct.block, ptr %79, i64 0, i32 4
  %96 = load ptr, ptr %95, align 8, !tbaa !17
  %97 = getelementptr inbounds %struct.cop, ptr %96, i64 0, i32 8
  %98 = load ptr, ptr %97, align 8, !tbaa !158
  %99 = getelementptr inbounds %struct.hv, ptr %98, i64 0, i32 2
  %100 = load i32, ptr %99, align 4, !tbaa !159
  %101 = and i32 %100, 33554687
  %102 = icmp eq i32 %101, 33554444
  br i1 %102, label %103, label %119

103:                                              ; preds = %94
  %104 = getelementptr inbounds %struct.hv, ptr %98, i64 0, i32 3
  %105 = load ptr, ptr %104, align 8, !tbaa !17
  %106 = load ptr, ptr %98, align 8, !tbaa !161
  %107 = getelementptr inbounds %struct.xpvhv, ptr %106, i64 0, i32 3
  %108 = load i64, ptr %107, align 8, !tbaa !162
  %109 = add i64 %108, 1
  %110 = getelementptr inbounds ptr, ptr %105, i64 %109
  %111 = load ptr, ptr %110, align 8, !tbaa !17
  %112 = icmp eq ptr %111, null
  br i1 %112, label %119, label %113

113:                                              ; preds = %103
  %114 = getelementptr inbounds %struct.xpvhv_aux, ptr %110, i64 0, i32 4
  %115 = load i32, ptr %114, align 4, !tbaa !164
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %119, label %117

117:                                              ; preds = %113
  %118 = load ptr, ptr %111, align 8, !tbaa !6
  br label %119

119:                                              ; preds = %113, %94, %117, %103
  %120 = phi ptr [ %118, %117 ], [ null, %103 ], [ null, %94 ], [ %111, %113 ]
  %121 = icmp eq i32 %44, 3
  %122 = load ptr, ptr @PL_stack_max, align 8, !tbaa !6
  %123 = ptrtoint ptr %122 to i64
  %124 = ptrtoint ptr %75 to i64
  %125 = sub i64 %123, %124
  br i1 %121, label %143, label %126

126:                                              ; preds = %119
  %127 = icmp slt i64 %125, 8
  br i1 %127, label %128, label %130

128:                                              ; preds = %126
  %129 = call ptr @Perl_stack_grow(ptr noundef %75, ptr noundef %75, i64 noundef 1) #17
  br label %130

130:                                              ; preds = %126, %128
  %131 = phi ptr [ %129, %128 ], [ %75, %126 ]
  %132 = icmp eq ptr %120, null
  br i1 %132, label %133, label %135

133:                                              ; preds = %130
  %134 = getelementptr inbounds ptr, ptr %131, i64 1
  store ptr @PL_sv_undef, ptr %134, align 8, !tbaa !6
  br label %375

135:                                              ; preds = %130
  %136 = load ptr, ptr @PL_curpad, align 8, !tbaa !6
  %137 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %138 = getelementptr inbounds %struct.op, ptr %137, i64 0, i32 3
  %139 = load i64, ptr %138, align 8, !tbaa !40
  %140 = getelementptr inbounds ptr, ptr %136, i64 %139
  %141 = load ptr, ptr %140, align 8, !tbaa !6
  call void @Perl_sv_sethek(ptr noundef %141, ptr noundef nonnull %120) #17
  %142 = getelementptr inbounds ptr, ptr %131, i64 1
  store ptr %141, ptr %142, align 8, !tbaa !6
  br label %375

143:                                              ; preds = %119
  %144 = icmp slt i64 %125, 88
  br i1 %144, label %145, label %147

145:                                              ; preds = %143
  %146 = call ptr @Perl_stack_grow(ptr noundef %75, ptr noundef %75, i64 noundef 11) #17
  br label %147

147:                                              ; preds = %143, %145
  %148 = phi ptr [ %146, %145 ], [ %75, %143 ]
  %149 = icmp eq ptr %120, null
  br i1 %149, label %163, label %150

150:                                              ; preds = %147
  %151 = load ptr, ptr @PL_curpad, align 8, !tbaa !6
  %152 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %153 = getelementptr inbounds %struct.op, ptr %152, i64 0, i32 3
  %154 = load i64, ptr %153, align 8, !tbaa !40
  %155 = getelementptr inbounds ptr, ptr %151, i64 %154
  %156 = load ptr, ptr %155, align 8, !tbaa !6
  call void @Perl_sv_sethek(ptr noundef %156, ptr noundef nonnull %120) #17
  %157 = getelementptr inbounds %struct.sv, ptr %156, i64 0, i32 2
  %158 = load i32, ptr %157, align 4, !tbaa !49
  %159 = and i32 %158, 4194304
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %163, label %161

161:                                              ; preds = %150
  %162 = call i32 @Perl_mg_set(ptr noundef nonnull %156) #17
  br label %163

163:                                              ; preds = %161, %150, %147
  %164 = phi ptr [ @PL_sv_undef, %147 ], [ %156, %150 ], [ %156, %161 ]
  %165 = getelementptr inbounds ptr, ptr %148, i64 1
  store ptr %164, ptr %165, align 8, !tbaa !6
  %166 = load ptr, ptr %95, align 8, !tbaa !17
  %167 = getelementptr inbounds %struct.cop, ptr %166, i64 0, i32 9
  %168 = load ptr, ptr %167, align 8, !tbaa !166
  %169 = icmp eq ptr %168, null
  br i1 %169, label %175, label %170

170:                                              ; preds = %163
  %171 = load ptr, ptr %168, align 8, !tbaa !114
  %172 = getelementptr inbounds %struct.xpvgv, ptr %171, i64 0, i32 4
  %173 = load ptr, ptr %172, align 8, !tbaa !17
  %174 = getelementptr inbounds %struct.hek, ptr %173, i64 0, i32 2, i64 2
  br label %175

175:                                              ; preds = %163, %170
  %176 = phi ptr [ %174, %170 ], [ null, %163 ]
  %177 = call ptr @Perl_newSVpv(ptr noundef %176, i64 noundef 0) #17
  %178 = call ptr @Perl_sv_2mortal(ptr noundef %177) #17
  %179 = getelementptr inbounds ptr, ptr %148, i64 2
  store ptr %178, ptr %179, align 8, !tbaa !6
  %180 = load ptr, ptr %95, align 8, !tbaa !17
  %181 = getelementptr inbounds %struct.cop, ptr %180, i64 0, i32 1
  %182 = load ptr, ptr %181, align 8, !tbaa !167
  %183 = getelementptr inbounds %struct.block, ptr %79, i64 0, i32 8
  %184 = load ptr, ptr %183, align 8, !tbaa !17
  %185 = call ptr @Perl_closest_cop(ptr noundef %180, ptr noundef %182, ptr noundef %184, i1 noundef zeroext true) #17
  %186 = icmp eq ptr %185, null
  br i1 %186, label %187, label %189

187:                                              ; preds = %175
  %188 = load ptr, ptr %95, align 8, !tbaa !17
  br label %189

189:                                              ; preds = %187, %175
  %190 = phi ptr [ %185, %175 ], [ %188, %187 ]
  %191 = call ptr @Perl_sv_newmortal() #17
  %192 = getelementptr inbounds ptr, ptr %148, i64 3
  store ptr %191, ptr %192, align 8, !tbaa !6
  %193 = getelementptr inbounds %struct.cop, ptr %190, i64 0, i32 7
  %194 = load i32, ptr %193, align 4, !tbaa !168
  %195 = sext i32 %194 to i64
  call void @Perl_sv_setiv(ptr noundef %191, i64 noundef %195) #17
  br i1 %73, label %196, label %375

196:                                              ; preds = %189
  %197 = load i8, ptr %79, align 8, !tbaa !17
  %198 = and i8 %197, 14
  %199 = icmp eq i8 %198, 8
  br i1 %199, label %200, label %222

200:                                              ; preds = %196
  %201 = load ptr, ptr %1, align 8, !tbaa !6
  %202 = getelementptr inbounds %struct.block, ptr %201, i64 0, i32 8, i32 0, i32 1
  %203 = load ptr, ptr %202, align 8, !tbaa !17
  %204 = load ptr, ptr %203, align 8, !tbaa !133
  %205 = getelementptr inbounds %struct.xpvcv, ptr %204, i64 0, i32 7
  %206 = load ptr, ptr %205, align 8, !tbaa !17
  %207 = icmp eq ptr %206, null
  %208 = getelementptr inbounds ptr, ptr %148, i64 4
  %209 = getelementptr inbounds ptr, ptr %148, i64 5
  br i1 %207, label %216, label %210

210:                                              ; preds = %200
  %211 = call ptr @Perl_cv_name(ptr noundef nonnull %203, ptr noundef null, i32 noundef 0) #17
  store ptr %211, ptr %208, align 8, !tbaa !6
  %212 = load i8, ptr %79, align 8, !tbaa !17
  %213 = and i8 %212, 32
  %214 = icmp eq i8 %213, 0
  %215 = select i1 %214, ptr @PL_sv_no, ptr @PL_sv_yes
  store ptr %215, ptr %209, align 8, !tbaa !6
  br label %227

216:                                              ; preds = %200
  %217 = call ptr @Perl_newSVpvn_flags(ptr noundef nonnull @.str.21, i64 noundef 9, i32 noundef 524288) #17
  store ptr %217, ptr %208, align 8, !tbaa !6
  %218 = load i8, ptr %79, align 8, !tbaa !17
  %219 = and i8 %218, 32
  %220 = icmp eq i8 %219, 0
  %221 = select i1 %220, ptr @PL_sv_no, ptr @PL_sv_yes
  store ptr %221, ptr %209, align 8, !tbaa !6
  br label %227

222:                                              ; preds = %196
  %223 = call ptr @Perl_newSVpvn_flags(ptr noundef nonnull @.str.22, i64 noundef 6, i32 noundef 524288) #17
  %224 = getelementptr inbounds ptr, ptr %148, i64 4
  store ptr %223, ptr %224, align 8, !tbaa !6
  %225 = call ptr @Perl_sv_newmortal() #17
  %226 = getelementptr inbounds ptr, ptr %148, i64 5
  store ptr %225, ptr %226, align 8, !tbaa !6
  call void @Perl_sv_setiv(ptr noundef %225, i64 noundef 0) #17
  br label %227

227:                                              ; preds = %210, %216, %222
  %228 = getelementptr inbounds %struct.block, ptr %79, i64 0, i32 1
  %229 = load i8, ptr %228, align 1, !tbaa !17
  %230 = icmp eq i8 %229, 1
  %231 = and i8 %229, 3
  %232 = icmp eq i8 %231, 3
  %233 = select i1 %232, ptr @PL_sv_yes, ptr @PL_sv_no
  %234 = select i1 %230, ptr @PL_sv_undef, ptr %233
  %235 = getelementptr inbounds ptr, ptr %148, i64 6
  store ptr %234, ptr %235, align 8
  %236 = load i8, ptr %79, align 8, !tbaa !17
  %237 = and i8 %236, 15
  %238 = icmp eq i8 %237, 10
  br i1 %238, label %239, label %270

239:                                              ; preds = %227
  %240 = getelementptr inbounds %struct.block, ptr %79, i64 0, i32 2
  %241 = load i16, ptr %240, align 2, !tbaa !17
  %242 = and i16 %241, -128
  %243 = icmp eq i16 %242, -21760
  br i1 %243, label %244, label %263

244:                                              ; preds = %239
  %245 = getelementptr inbounds %struct.block, ptr %79, i64 0, i32 8, i32 0, i32 3
  %246 = load ptr, ptr %245, align 8, !tbaa !17
  %247 = load ptr, ptr %246, align 8, !tbaa !72
  %248 = getelementptr inbounds %struct.xpv, ptr %247, i64 0, i32 2
  %249 = load i64, ptr %248, align 8, !tbaa !53
  %250 = icmp ugt i64 %249, 1
  br i1 %250, label %251, label %260

251:                                              ; preds = %244
  %252 = getelementptr inbounds %struct.sv, ptr %246, i64 0, i32 3
  %253 = load ptr, ptr %252, align 8, !tbaa !17
  %254 = add i64 %249, -2
  %255 = getelementptr inbounds %struct.sv, ptr %246, i64 0, i32 2
  %256 = load i32, ptr %255, align 4, !tbaa !49
  %257 = and i32 %256, 536870912
  %258 = or i32 %257, 524288
  %259 = call ptr @Perl_newSVpvn_flags(ptr noundef %253, i64 noundef %254, i32 noundef %258) #17
  br label %270

260:                                              ; preds = %244
  %261 = call ptr @Perl_newSVsv(ptr noundef nonnull %246) #17
  %262 = call ptr @Perl_sv_2mortal(ptr noundef %261) #17
  br label %270

263:                                              ; preds = %239
  %264 = getelementptr inbounds %struct.block, ptr %79, i64 0, i32 8, i32 0, i32 1
  %265 = load ptr, ptr %264, align 8, !tbaa !17
  %266 = icmp eq ptr %265, null
  br i1 %266, label %270, label %267

267:                                              ; preds = %263
  %268 = call ptr @Perl_newSVsv(ptr noundef nonnull %265) #17
  %269 = call ptr @Perl_sv_2mortal(ptr noundef %268) #17
  br label %270

270:                                              ; preds = %227, %263, %251, %260, %267
  %271 = phi ptr [ %269, %267 ], [ %259, %251 ], [ %262, %260 ], [ @PL_sv_undef, %263 ], [ @PL_sv_undef, %227 ]
  %272 = phi ptr [ @PL_sv_yes, %267 ], [ @PL_sv_no, %251 ], [ @PL_sv_no, %260 ], [ @PL_sv_undef, %263 ], [ @PL_sv_undef, %227 ]
  %273 = getelementptr inbounds ptr, ptr %148, i64 7
  store ptr %271, ptr %273, align 8
  %274 = getelementptr inbounds ptr, ptr %148, i64 8
  store ptr %272, ptr %274, align 8, !tbaa !6
  %275 = load i8, ptr %79, align 8, !tbaa !17
  %276 = and i8 %275, 47
  %277 = icmp eq i8 %276, 40
  br i1 %277, label %278, label %328

278:                                              ; preds = %270
  %279 = load ptr, ptr @PL_curcop, align 8, !tbaa !6
  %280 = getelementptr inbounds %struct.cop, ptr %279, i64 0, i32 8
  %281 = load ptr, ptr %280, align 8, !tbaa !158
  %282 = load ptr, ptr @PL_debstash, align 8, !tbaa !6
  %283 = icmp eq ptr %281, %282
  br i1 %283, label %284, label %328

284:                                              ; preds = %278
  %285 = getelementptr inbounds %struct.block, ptr %79, i64 0, i32 8, i32 0, i32 3
  %286 = load ptr, ptr %285, align 8, !tbaa !17
  %287 = getelementptr inbounds %struct.av, ptr %286, i64 0, i32 3
  %288 = load ptr, ptr %287, align 8, !tbaa !17
  %289 = load ptr, ptr %286, align 8, !tbaa !141
  %290 = getelementptr inbounds %struct.xpvav, ptr %289, i64 0, i32 4
  %291 = load ptr, ptr %290, align 8, !tbaa !144
  %292 = ptrtoint ptr %288 to i64
  %293 = ptrtoint ptr %291 to i64
  %294 = sub i64 %292, %293
  %295 = ashr exact i64 %294, 3
  call void @Perl_init_dbargs() #17
  %296 = load ptr, ptr @PL_dbargs, align 8, !tbaa !6
  %297 = load ptr, ptr %296, align 8, !tbaa !141
  %298 = getelementptr inbounds %struct.xpvav, ptr %297, i64 0, i32 3
  %299 = load i64, ptr %298, align 8, !tbaa !145
  %300 = load ptr, ptr %286, align 8, !tbaa !141
  %301 = getelementptr inbounds %struct.xpvav, ptr %300, i64 0, i32 2
  %302 = load i64, ptr %301, align 8, !tbaa !142
  %303 = add nsw i64 %302, %295
  %304 = icmp slt i64 %299, %303
  br i1 %304, label %305, label %310

305:                                              ; preds = %284
  call void @Perl_av_extend(ptr noundef nonnull %296, i64 noundef %303) #17
  %306 = load ptr, ptr @PL_dbargs, align 8, !tbaa !6
  %307 = load ptr, ptr %286, align 8, !tbaa !141
  %308 = getelementptr inbounds %struct.xpvav, ptr %307, i64 0, i32 2
  %309 = load i64, ptr %308, align 8, !tbaa !142
  br label %310

310:                                              ; preds = %305, %284
  %311 = phi i64 [ %309, %305 ], [ %302, %284 ]
  %312 = phi ptr [ %307, %305 ], [ %300, %284 ]
  %313 = phi ptr [ %306, %305 ], [ %296, %284 ]
  %314 = getelementptr inbounds %struct.av, ptr %313, i64 0, i32 3
  %315 = load ptr, ptr %314, align 8, !tbaa !17
  %316 = getelementptr inbounds %struct.xpvav, ptr %312, i64 0, i32 4
  %317 = load ptr, ptr %316, align 8, !tbaa !144
  %318 = add nsw i64 %295, 1
  %319 = add i64 %318, %311
  %320 = shl i64 %319, 3
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %315, ptr align 1 %317, i64 %320, i1 false)
  %321 = load ptr, ptr %286, align 8, !tbaa !141
  %322 = getelementptr inbounds %struct.xpvav, ptr %321, i64 0, i32 2
  %323 = load i64, ptr %322, align 8, !tbaa !142
  %324 = add nsw i64 %323, %295
  %325 = load ptr, ptr @PL_dbargs, align 8, !tbaa !6
  %326 = load ptr, ptr %325, align 8, !tbaa !141
  %327 = getelementptr inbounds %struct.xpvav, ptr %326, i64 0, i32 2
  store i64 %324, ptr %327, align 8, !tbaa !142
  br label %328

328:                                              ; preds = %310, %278, %270
  %329 = call ptr @Perl_sv_newmortal() #17
  %330 = getelementptr inbounds ptr, ptr %148, i64 9
  store ptr %329, ptr %330, align 8, !tbaa !6
  %331 = load ptr, ptr %95, align 8, !tbaa !17
  %332 = getelementptr inbounds %struct.cop, ptr %331, i64 0, i32 10
  %333 = load i32, ptr %332, align 8, !tbaa !70
  %334 = zext i32 %333 to i64
  call void @Perl_sv_setiv(ptr noundef %329, i64 noundef %334) #17
  %335 = load ptr, ptr %95, align 8, !tbaa !17
  %336 = getelementptr inbounds %struct.cop, ptr %335, i64 0, i32 12
  %337 = load ptr, ptr %336, align 8, !tbaa !169
  %338 = ptrtoint ptr %337 to i64
  switch i64 %338, label %356 [
    i64 16, label %339
    i64 0, label %341
    i64 8, label %345
  ]

339:                                              ; preds = %328
  %340 = call ptr @Perl_newSVpvn(ptr noundef nonnull @.str.23, i64 noundef 17) #17
  br label %360

341:                                              ; preds = %328
  %342 = load i8, ptr @PL_dowarn, align 1, !tbaa !17
  %343 = and i8 %342, 1
  %344 = icmp eq i8 %343, 0
  br i1 %344, label %360, label %345

345:                                              ; preds = %341, %328
  %346 = call ptr @Perl_get_hv(ptr noundef nonnull @.str.24, i32 noundef 0) #17
  %347 = icmp eq ptr %346, null
  br i1 %347, label %354, label %348

348:                                              ; preds = %345
  %349 = call ptr @Perl_hv_common(ptr noundef nonnull %346, ptr noundef null, ptr noundef nonnull @.str.25, i64 noundef 3, i32 noundef 0, i32 noundef 32, ptr noundef null, i32 noundef 0) #17
  %350 = icmp eq ptr %349, null
  br i1 %350, label %354, label %351

351:                                              ; preds = %348
  %352 = load ptr, ptr %349, align 8, !tbaa !6
  %353 = call ptr @Perl_newSVsv(ptr noundef %352) #17
  br label %360

354:                                              ; preds = %348, %345
  %355 = call ptr @Perl_newSVpvn(ptr noundef nonnull @.str.26, i64 noundef 17) #17
  br label %360

356:                                              ; preds = %328
  %357 = getelementptr inbounds i64, ptr %337, i64 1
  %358 = load i64, ptr %337, align 8, !tbaa !59
  %359 = call ptr @Perl_newSVpvn(ptr noundef nonnull %357, i64 noundef %358) #17
  br label %360

360:                                              ; preds = %351, %354, %341, %356, %339
  %361 = phi ptr [ %340, %339 ], [ %359, %356 ], [ @PL_sv_undef, %341 ], [ %353, %351 ], [ %355, %354 ]
  %362 = call ptr @Perl_sv_2mortal(ptr noundef %361) #17
  %363 = getelementptr inbounds ptr, ptr %148, i64 10
  store ptr %362, ptr %363, align 8, !tbaa !6
  %364 = load ptr, ptr %95, align 8, !tbaa !17
  %365 = getelementptr inbounds %struct.cop, ptr %364, i64 0, i32 13
  %366 = load ptr, ptr %365, align 8, !tbaa !170
  %367 = icmp eq ptr %366, null
  br i1 %367, label %372, label %368

368:                                              ; preds = %360
  %369 = call ptr @Perl_refcounted_he_chain_2hv(ptr noundef nonnull %366, i32 noundef 0) #17
  %370 = call ptr @Perl_newRV_noinc(ptr noundef %369) #17
  %371 = call ptr @Perl_sv_2mortal(ptr noundef %370) #17
  br label %372

372:                                              ; preds = %360, %368
  %373 = phi ptr [ %371, %368 ], [ @PL_sv_undef, %360 ]
  %374 = getelementptr inbounds ptr, ptr %148, i64 11
  store ptr %373, ptr %374, align 8, !tbaa !6
  br label %375

375:                                              ; preds = %189, %133, %135, %81, %372, %91
  %376 = phi ptr [ %374, %372 ], [ %93, %91 ], [ %75, %81 ], [ %142, %135 ], [ %134, %133 ], [ %192, %189 ]
  store ptr %376, ptr @PL_stack_sp, align 8, !tbaa !6
  %377 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %378 = load ptr, ptr %377, align 8, !tbaa !20
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %1) #17
  ret ptr %378
}

declare void @Perl_sv_sethek(ptr noundef, ptr noundef) local_unnamed_addr #2

declare ptr @Perl_newSVpv(ptr noundef, i64 noundef) local_unnamed_addr #2

declare ptr @Perl_closest_cop(ptr noundef, ptr noundef, ptr noundef, i1 noundef zeroext) local_unnamed_addr #2

declare ptr @Perl_cv_name(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

declare void @Perl_init_dbargs() local_unnamed_addr #2

declare ptr @Perl_newSVpvn(ptr noundef, i64 noundef) local_unnamed_addr #2

declare ptr @Perl_get_hv(ptr noundef, i32 noundef) local_unnamed_addr #2

declare ptr @Perl_hv_common(ptr noundef, ptr noundef, ptr noundef, i64 noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

declare ptr @Perl_newRV_noinc(ptr noundef) local_unnamed_addr #2

declare ptr @Perl_refcounted_he_chain_2hv(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_reset() local_unnamed_addr #0 {
  %1 = alloca i64, align 8
  %2 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !6
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %1) #17
  store i64 0, ptr %1, align 8, !tbaa !59
  %3 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %4 = getelementptr inbounds %struct.op, ptr %3, i64 0, i32 6
  %5 = load i8, ptr %4, align 1, !tbaa !10
  %6 = and i8 %5, 15
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %26, label %8

8:                                                ; preds = %0
  %9 = load ptr, ptr %2, align 8, !tbaa !6
  %10 = icmp eq ptr %9, null
  %11 = getelementptr inbounds ptr, ptr %2, i64 -1
  br i1 %10, label %26, label %12

12:                                               ; preds = %8
  store ptr %9, ptr @PL_Sv, align 8, !tbaa !6
  %13 = getelementptr inbounds %struct.sv, ptr %9, i64 0, i32 2
  %14 = load i32, ptr %13, align 4, !tbaa !49
  %15 = and i32 %14, 2098176
  %16 = icmp eq i32 %15, 1024
  br i1 %16, label %17, label %23

17:                                               ; preds = %12
  %18 = load ptr, ptr %9, align 8, !tbaa !72
  %19 = getelementptr inbounds %struct.xpv, ptr %18, i64 0, i32 2
  %20 = load i64, ptr %19, align 8, !tbaa !53
  store i64 %20, ptr %1, align 8, !tbaa !59
  %21 = getelementptr inbounds %struct.sv, ptr %9, i64 0, i32 3
  %22 = load ptr, ptr %21, align 8, !tbaa !17
  br label %26

23:                                               ; preds = %12
  %24 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %9, ptr noundef nonnull %1, i32 noundef 34) #17
  %25 = load i64, ptr %1, align 8, !tbaa !59
  br label %26

26:                                               ; preds = %0, %8, %17, %23
  %27 = phi i64 [ %25, %23 ], [ %20, %17 ], [ 0, %8 ], [ 0, %0 ]
  %28 = phi ptr [ %11, %23 ], [ %11, %17 ], [ %11, %8 ], [ %2, %0 ]
  %29 = phi ptr [ %24, %23 ], [ %22, %17 ], [ null, %8 ], [ null, %0 ]
  %30 = load ptr, ptr @PL_curcop, align 8, !tbaa !6
  %31 = getelementptr inbounds %struct.cop, ptr %30, i64 0, i32 8
  %32 = load ptr, ptr %31, align 8, !tbaa !158
  call void @Perl_sv_resetpvn(ptr noundef %29, i64 noundef %27, ptr noundef %32) #17
  %33 = getelementptr inbounds ptr, ptr %28, i64 1
  store ptr @PL_sv_yes, ptr %33, align 8, !tbaa !6
  store ptr %33, ptr @PL_stack_sp, align 8, !tbaa !6
  %34 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %35 = load ptr, ptr %34, align 8, !tbaa !20
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %1) #17
  ret ptr %35
}

declare void @Perl_sv_resetpvn(ptr noundef, i64 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_dbstate() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_op, align 8, !tbaa !6
  store ptr %1, ptr @PL_curcop, align 8, !tbaa !6
  store i8 0, ptr @PL_tainted, align 1, !tbaa !26
  %2 = load ptr, ptr @PL_stack_base, align 8, !tbaa !6
  %3 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %4 = getelementptr inbounds %struct.stackinfo, ptr %3, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !14
  %6 = getelementptr inbounds %struct.stackinfo, ptr %3, i64 0, i32 4
  %7 = load i32, ptr %6, align 8, !tbaa !16
  %8 = sext i32 %7 to i64
  %9 = getelementptr inbounds %struct.context, ptr %5, i64 %8, i32 0, i32 0, i32 3
  %10 = load i32, ptr %9, align 4, !tbaa !17
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds ptr, ptr %2, i64 %11
  store ptr %12, ptr @PL_stack_sp, align 8, !tbaa !6
  %13 = load i64, ptr @PL_tmps_ix, align 8, !tbaa !59
  %14 = load i64, ptr @PL_tmps_floor, align 8, !tbaa !59
  %15 = icmp sgt i64 %13, %14
  br i1 %15, label %16, label %17

16:                                               ; preds = %0
  tail call void @Perl_free_tmps() #17
  br label %17

17:                                               ; preds = %16, %0
  %18 = load i32, ptr @PL_sig_pending, align 4, !tbaa !31
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %22, label %20

20:                                               ; preds = %17
  %21 = load ptr, ptr @PL_signalhook, align 8, !tbaa !6
  tail call void %21() #17
  br label %22

22:                                               ; preds = %17, %20
  %23 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %24 = getelementptr inbounds %struct.op, ptr %23, i64 0, i32 5
  %25 = load i8, ptr %24, align 2, !tbaa !30
  %26 = icmp slt i8 %25, 0
  %27 = load i64, ptr @PL_DBcontrol, align 16
  %28 = icmp ne i64 %27, 0
  %29 = select i1 %26, i1 true, i1 %28
  %30 = load i64, ptr getelementptr inbounds ([3 x i64], ptr @PL_DBcontrol, i64 0, i64 2), align 16
  %31 = icmp ne i64 %30, 0
  %32 = select i1 %29, i1 true, i1 %31
  %33 = load i64, ptr getelementptr inbounds ([3 x i64], ptr @PL_DBcontrol, i64 0, i64 1), align 8
  %34 = icmp ne i64 %33, 0
  %35 = select i1 %32, i1 true, i1 %34
  br i1 %35, label %36, label %207

36:                                               ; preds = %22
  %37 = load ptr, ptr @PL_DBgv, align 8, !tbaa !6
  %38 = icmp eq ptr %37, null
  br i1 %38, label %59, label %39

39:                                               ; preds = %36
  %40 = getelementptr inbounds %struct.gv, ptr %37, i64 0, i32 2
  %41 = load i32, ptr %40, align 4, !tbaa !152
  %42 = and i32 %41, 49152
  %43 = icmp eq i32 %42, 32768
  br i1 %43, label %44, label %59

44:                                               ; preds = %39
  %45 = and i32 %41, 255
  %46 = add nsw i32 %45, -9
  %47 = icmp ult i32 %46, 2
  br i1 %47, label %48, label %59

48:                                               ; preds = %44
  %49 = getelementptr inbounds %struct.gv, ptr %37, i64 0, i32 3
  %50 = load ptr, ptr %49, align 8, !tbaa !17
  %51 = getelementptr inbounds %struct.gp, ptr %50, i64 0, i32 2
  %52 = load ptr, ptr %51, align 8, !tbaa !24
  %53 = icmp eq ptr %52, null
  br i1 %53, label %59, label %54

54:                                               ; preds = %48
  %55 = load ptr, ptr %52, align 8, !tbaa !133
  %56 = getelementptr inbounds %struct.xpvcv, ptr %55, i64 0, i32 6
  %57 = load ptr, ptr %56, align 8, !tbaa !17
  %58 = icmp eq ptr %57, null
  br i1 %58, label %59, label %61

59:                                               ; preds = %44, %36, %39, %54, %48
  %60 = tail call ptr (ptr, ...) @Perl_die(ptr noundef nonnull @.str.27) #17
  br label %209

61:                                               ; preds = %54
  %62 = getelementptr inbounds %struct.xpvcv, ptr %55, i64 0, i32 13
  %63 = load i32, ptr %62, align 4, !tbaa !31
  %64 = icmp sgt i32 %63, 0
  br i1 %64, label %65, label %71

65:                                               ; preds = %61
  %66 = load volatile i32, ptr @PL_debug, align 4, !tbaa !31
  %67 = and i32 %66, 1073741824
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %71

69:                                               ; preds = %65
  %70 = load ptr, ptr %23, align 8, !tbaa !20
  br label %209

71:                                               ; preds = %65, %61
  tail call void @Perl_push_scope() #17
  tail call void @Perl_save_strlen(ptr noundef nonnull @PL_tmps_floor) #17
  %72 = load i64, ptr @PL_tmps_ix, align 8, !tbaa !59
  store i64 %72, ptr @PL_tmps_floor, align 8, !tbaa !59
  tail call void @Perl_save_I32(ptr noundef nonnull @PL_debug) #17
  %73 = load i32, ptr @PL_savestack_ix, align 4, !tbaa !31
  %74 = load ptr, ptr @PL_savestack, align 8, !tbaa !6
  %75 = sext i32 %73 to i64
  %76 = getelementptr inbounds %union.any, ptr %74, i64 %75
  %77 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !6
  %78 = load ptr, ptr @PL_stack_base, align 8, !tbaa !6
  %79 = ptrtoint ptr %77 to i64
  %80 = ptrtoint ptr %78 to i64
  %81 = sub i64 %79, %80
  %82 = lshr exact i64 %81, 3
  %83 = trunc i64 %82 to i32
  %84 = getelementptr inbounds %union.any, ptr %76, i64 1
  store i32 %83, ptr %76, align 8, !tbaa !17
  store i64 20, ptr %84, align 8, !tbaa !17
  %85 = add nsw i32 %73, 2
  store i32 %85, ptr @PL_savestack_ix, align 4, !tbaa !31
  %86 = add nsw i32 %73, 6
  %87 = load i32, ptr @PL_savestack_max, align 4, !tbaa !31
  %88 = icmp sgt i32 %86, %87
  br i1 %88, label %89, label %90

89:                                               ; preds = %71
  tail call void @Perl_savestack_grow() #17
  br label %90

90:                                               ; preds = %71, %89
  store volatile i32 0, ptr @PL_debug, align 4, !tbaa !31
  %91 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !6
  %92 = load ptr, ptr %52, align 8, !tbaa !133
  %93 = getelementptr inbounds %struct.xpvcv, ptr %92, i64 0, i32 12
  %94 = load i32, ptr %93, align 4, !tbaa !135
  %95 = and i32 %94, 8
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %122, label %97

97:                                               ; preds = %90
  %98 = load ptr, ptr @PL_markstack_ptr, align 8, !tbaa !6
  %99 = getelementptr inbounds i32, ptr %98, i64 1
  store ptr %99, ptr @PL_markstack_ptr, align 8, !tbaa !6
  %100 = load ptr, ptr @PL_markstack_max, align 8, !tbaa !6
  %101 = icmp eq ptr %99, %100
  br i1 %101, label %102, label %104

102:                                              ; preds = %97
  %103 = tail call ptr @Perl_markstack_grow() #17
  br label %104

104:                                              ; preds = %97, %102
  %105 = phi ptr [ %103, %102 ], [ %99, %97 ]
  %106 = load ptr, ptr @PL_stack_base, align 8, !tbaa !6
  %107 = ptrtoint ptr %91 to i64
  %108 = ptrtoint ptr %106 to i64
  %109 = sub i64 %107, %108
  %110 = lshr exact i64 %109, 3
  %111 = trunc i64 %110 to i32
  store i32 %111, ptr %105, align 4, !tbaa !31
  %112 = load ptr, ptr %52, align 8, !tbaa !133
  %113 = getelementptr inbounds %struct.xpvcv, ptr %112, i64 0, i32 6
  %114 = load ptr, ptr %113, align 8, !tbaa !17
  tail call void %114(ptr noundef nonnull %52) #17
  %115 = load i64, ptr @PL_tmps_ix, align 8, !tbaa !59
  %116 = load i64, ptr @PL_tmps_floor, align 8, !tbaa !59
  %117 = icmp sgt i64 %115, %116
  br i1 %117, label %118, label %119

118:                                              ; preds = %104
  tail call void @Perl_free_tmps() #17
  br label %119

119:                                              ; preds = %118, %104
  tail call void @Perl_pop_scope() #17
  %120 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %121 = load ptr, ptr %120, align 8, !tbaa !20
  br label %209

122:                                              ; preds = %90
  %123 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %124 = getelementptr inbounds %struct.stackinfo, ptr %123, i64 0, i32 4
  %125 = load i32, ptr %124, align 8, !tbaa !16
  %126 = getelementptr inbounds %struct.stackinfo, ptr %123, i64 0, i32 5
  %127 = load i32, ptr %126, align 4, !tbaa !171
  %128 = icmp slt i32 %125, %127
  br i1 %128, label %129, label %131

129:                                              ; preds = %122
  %130 = add nsw i32 %125, 1
  store i32 %130, ptr %124, align 8, !tbaa !16
  br label %135

131:                                              ; preds = %122
  %132 = tail call i32 @Perl_cxinc() #17
  %133 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %134 = getelementptr inbounds %struct.stackinfo, ptr %133, i64 0, i32 4
  store i32 %132, ptr %134, align 8, !tbaa !16
  br label %135

135:                                              ; preds = %131, %129
  %136 = phi i32 [ %132, %131 ], [ %130, %129 ]
  %137 = phi ptr [ %133, %131 ], [ %123, %129 ]
  %138 = getelementptr inbounds %struct.stackinfo, ptr %137, i64 0, i32 1
  %139 = load ptr, ptr %138, align 8, !tbaa !14
  %140 = sext i32 %136 to i64
  %141 = getelementptr inbounds %struct.context, ptr %139, i64 %140
  store i8 8, ptr %141, align 8, !tbaa !17
  %142 = load ptr, ptr @PL_stack_base, align 8, !tbaa !6
  %143 = ptrtoint ptr %91 to i64
  %144 = ptrtoint ptr %142 to i64
  %145 = sub i64 %143, %144
  %146 = lshr exact i64 %145, 3
  %147 = trunc i64 %146 to i32
  %148 = getelementptr inbounds %struct.block, ptr %141, i64 0, i32 3
  store i32 %147, ptr %148, align 4, !tbaa !17
  %149 = load ptr, ptr @PL_curcop, align 8, !tbaa !6
  %150 = getelementptr inbounds %struct.block, ptr %141, i64 0, i32 4
  store ptr %149, ptr %150, align 8, !tbaa !17
  %151 = load ptr, ptr @PL_markstack_ptr, align 8, !tbaa !6
  %152 = load ptr, ptr @PL_markstack, align 8, !tbaa !6
  %153 = ptrtoint ptr %151 to i64
  %154 = ptrtoint ptr %152 to i64
  %155 = sub i64 %153, %154
  %156 = lshr exact i64 %155, 2
  %157 = trunc i64 %156 to i32
  %158 = getelementptr inbounds %struct.block, ptr %141, i64 0, i32 5
  store i32 %157, ptr %158, align 8, !tbaa !17
  %159 = load i32, ptr @PL_scopestack_ix, align 4, !tbaa !31
  %160 = getelementptr inbounds %struct.block, ptr %141, i64 0, i32 6
  store i32 %159, ptr %160, align 4, !tbaa !17
  %161 = load ptr, ptr @PL_curpm, align 8, !tbaa !6
  %162 = getelementptr inbounds %struct.block, ptr %141, i64 0, i32 7
  store ptr %161, ptr %162, align 8, !tbaa !17
  %163 = getelementptr inbounds %struct.block, ptr %141, i64 0, i32 1
  store i8 3, ptr %163, align 1, !tbaa !17
  %164 = getelementptr inbounds %struct.block, ptr %141, i64 0, i32 8
  %165 = getelementptr inbounds %struct.block, ptr %141, i64 0, i32 8, i32 0, i32 1
  store ptr %52, ptr %165, align 8, !tbaa !17
  %166 = load ptr, ptr %52, align 8, !tbaa !133
  %167 = getelementptr inbounds %struct.xpvcv, ptr %166, i64 0, i32 13
  %168 = load i32, ptr %167, align 4, !tbaa !31
  %169 = getelementptr inbounds %struct.block, ptr %141, i64 0, i32 8, i32 0, i32 4
  store i32 %168, ptr %169, align 8, !tbaa !17
  store ptr null, ptr %164, align 8, !tbaa !17
  %170 = load ptr, ptr %52, align 8, !tbaa !133
  %171 = getelementptr inbounds %struct.xpvcv, ptr %170, i64 0, i32 13
  %172 = load i32, ptr %171, align 4, !tbaa !31
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %174, label %178

174:                                              ; preds = %135
  %175 = getelementptr inbounds %struct.sv, ptr %52, i64 0, i32 1
  %176 = load i32, ptr %175, align 8, !tbaa !41
  %177 = add i32 %176, 2
  store i32 %177, ptr %175, align 8, !tbaa !41
  tail call void @Perl_save_pushptr(ptr noundef nonnull %52, i32 noundef 11) #17
  br label %178

178:                                              ; preds = %174, %135
  %179 = getelementptr inbounds %struct.block, ptr %141, i64 0, i32 2
  store i16 0, ptr %179, align 2, !tbaa !17
  %180 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %181 = load ptr, ptr %180, align 8, !tbaa !20
  store ptr %181, ptr %164, align 8, !tbaa !17
  %182 = load ptr, ptr %52, align 8, !tbaa !133
  %183 = getelementptr inbounds %struct.xpvcv, ptr %182, i64 0, i32 13
  %184 = load i32, ptr %183, align 4, !tbaa !31
  %185 = add nsw i32 %184, 1
  store i32 %185, ptr %183, align 4, !tbaa !31
  %186 = icmp sgt i32 %184, 0
  br i1 %186, label %187, label %190

187:                                              ; preds = %178
  %188 = getelementptr inbounds %struct.xpvcv, ptr %182, i64 0, i32 9
  %189 = load ptr, ptr %188, align 8, !tbaa !17
  tail call void @Perl_pad_push(ptr noundef %189, i32 noundef %185) #17
  br label %190

190:                                              ; preds = %187, %178
  %191 = load ptr, ptr @PL_comppad, align 8, !tbaa !6
  tail call void @Perl_save_pushptr(ptr noundef %191, i32 noundef 7) #17
  %192 = load ptr, ptr %52, align 8, !tbaa !133
  %193 = getelementptr inbounds %struct.xpvcv, ptr %192, i64 0, i32 9
  %194 = load ptr, ptr %193, align 8, !tbaa !17
  %195 = getelementptr inbounds %struct.padlist, ptr %194, i64 0, i32 1
  %196 = load ptr, ptr %195, align 8, !tbaa !172
  %197 = getelementptr inbounds %struct.xpvcv, ptr %192, i64 0, i32 13
  %198 = load i32, ptr %197, align 4, !tbaa !31
  %199 = sext i32 %198 to i64
  %200 = getelementptr inbounds ptr, ptr %196, i64 %199
  %201 = load ptr, ptr %200, align 8, !tbaa !6
  store ptr %201, ptr @PL_comppad, align 8, !tbaa !6
  %202 = getelementptr inbounds %struct.av, ptr %201, i64 0, i32 3
  %203 = load ptr, ptr %202, align 8, !tbaa !17
  store ptr %203, ptr @PL_curpad, align 8, !tbaa !6
  store ptr %91, ptr @PL_stack_sp, align 8, !tbaa !6
  %204 = load ptr, ptr %52, align 8, !tbaa !133
  %205 = getelementptr inbounds %struct.xpvcv, ptr %204, i64 0, i32 5
  %206 = load ptr, ptr %205, align 8, !tbaa !17
  br label %209

207:                                              ; preds = %22
  %208 = load ptr, ptr %23, align 8, !tbaa !20
  br label %209

209:                                              ; preds = %59, %69, %119, %190, %207
  %210 = phi ptr [ %208, %207 ], [ %121, %119 ], [ %206, %190 ], [ %70, %69 ], [ %60, %59 ]
  ret ptr %210
}

declare void @Perl_save_I32(ptr noundef) local_unnamed_addr #2

declare void @Perl_savestack_grow() local_unnamed_addr #2

declare ptr @Perl_markstack_grow() local_unnamed_addr #2

declare i32 @Perl_cxinc() local_unnamed_addr #2

declare void @Perl_save_pushptr(ptr noundef, i32 noundef) local_unnamed_addr #2

declare void @Perl_pad_push(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_enter() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !6
  %2 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %3 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 5
  %4 = load i8, ptr %3, align 2, !tbaa !30
  %5 = and i8 %4, 3
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %38

7:                                                ; preds = %0
  %8 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %9 = getelementptr inbounds %struct.stackinfo, ptr %8, i64 0, i32 1
  %10 = load ptr, ptr %9, align 8, !tbaa !14
  %11 = getelementptr inbounds %struct.stackinfo, ptr %8, i64 0, i32 4
  %12 = load i32, ptr %11, align 8, !tbaa !16
  %13 = icmp sgt i32 %12, -1
  br i1 %13, label %14, label %38

14:                                               ; preds = %7
  %15 = zext i32 %12 to i64
  br label %16

16:                                               ; preds = %24, %14
  %17 = phi i64 [ %15, %14 ], [ %25, %24 ]
  %18 = getelementptr inbounds %struct.context, ptr %10, i64 %17
  %19 = load i8, ptr %18, align 8, !tbaa !17
  %20 = and i8 %19, 15
  %21 = zext i8 %20 to i32
  switch i32 %21, label %24 [
    i32 8, label %22
    i32 10, label %27
    i32 9, label %27
  ]

22:                                               ; preds = %16
  %23 = icmp sgt i8 %19, -1
  br i1 %23, label %27, label %24

24:                                               ; preds = %22, %16
  %25 = add nsw i64 %17, -1
  %26 = icmp sgt i64 %17, 0
  br i1 %26, label %16, label %38, !llvm.loop !18

27:                                               ; preds = %22, %16, %16
  %28 = and i64 %17, 2147483648
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %30, label %38

30:                                               ; preds = %27
  %31 = and i64 %17, 4294967295
  %32 = getelementptr inbounds %struct.context, ptr %10, i64 %31, i32 0, i32 0, i32 1
  %33 = load i8, ptr %32, align 1, !tbaa !17
  %34 = add i8 %33, -1
  %35 = icmp ult i8 %34, 3
  br i1 %35, label %38, label %36

36:                                               ; preds = %30
  %37 = zext i8 %33 to i32
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.14, i32 noundef %37) #17
  br label %38

38:                                               ; preds = %24, %30, %36, %27, %7, %0
  %39 = phi i8 [ %5, %0 ], [ 0, %36 ], [ 1, %27 ], [ 1, %7 ], [ %33, %30 ], [ 1, %24 ]
  tail call void @Perl_push_scope() #17
  tail call void @Perl_save_strlen(ptr noundef nonnull @PL_tmps_floor) #17
  %40 = load i64, ptr @PL_tmps_ix, align 8, !tbaa !59
  store i64 %40, ptr @PL_tmps_floor, align 8, !tbaa !59
  %41 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %42 = getelementptr inbounds %struct.stackinfo, ptr %41, i64 0, i32 4
  %43 = load i32, ptr %42, align 8, !tbaa !16
  %44 = getelementptr inbounds %struct.stackinfo, ptr %41, i64 0, i32 5
  %45 = load i32, ptr %44, align 4, !tbaa !171
  %46 = icmp slt i32 %43, %45
  br i1 %46, label %47, label %49

47:                                               ; preds = %38
  %48 = add nsw i32 %43, 1
  store i32 %48, ptr %42, align 8, !tbaa !16
  br label %53

49:                                               ; preds = %38
  %50 = tail call i32 @Perl_cxinc() #17
  %51 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %52 = getelementptr inbounds %struct.stackinfo, ptr %51, i64 0, i32 4
  store i32 %50, ptr %52, align 8, !tbaa !16
  br label %53

53:                                               ; preds = %49, %47
  %54 = phi i32 [ %50, %49 ], [ %48, %47 ]
  %55 = phi ptr [ %51, %49 ], [ %41, %47 ]
  %56 = getelementptr inbounds %struct.stackinfo, ptr %55, i64 0, i32 1
  %57 = load ptr, ptr %56, align 8, !tbaa !14
  %58 = sext i32 %54 to i64
  %59 = getelementptr inbounds %struct.context, ptr %57, i64 %58
  store i8 2, ptr %59, align 8, !tbaa !17
  %60 = load ptr, ptr @PL_stack_base, align 8, !tbaa !6
  %61 = ptrtoint ptr %1 to i64
  %62 = ptrtoint ptr %60 to i64
  %63 = sub i64 %61, %62
  %64 = lshr exact i64 %63, 3
  %65 = trunc i64 %64 to i32
  %66 = getelementptr inbounds %struct.block, ptr %59, i64 0, i32 3
  store i32 %65, ptr %66, align 4, !tbaa !17
  %67 = load ptr, ptr @PL_curcop, align 8, !tbaa !6
  %68 = getelementptr inbounds %struct.block, ptr %59, i64 0, i32 4
  store ptr %67, ptr %68, align 8, !tbaa !17
  %69 = load ptr, ptr @PL_markstack_ptr, align 8, !tbaa !6
  %70 = load ptr, ptr @PL_markstack, align 8, !tbaa !6
  %71 = ptrtoint ptr %69 to i64
  %72 = ptrtoint ptr %70 to i64
  %73 = sub i64 %71, %72
  %74 = lshr exact i64 %73, 2
  %75 = trunc i64 %74 to i32
  %76 = getelementptr inbounds %struct.block, ptr %59, i64 0, i32 5
  store i32 %75, ptr %76, align 8, !tbaa !17
  %77 = load i32, ptr @PL_scopestack_ix, align 4, !tbaa !31
  %78 = getelementptr inbounds %struct.block, ptr %59, i64 0, i32 6
  store i32 %77, ptr %78, align 4, !tbaa !17
  %79 = load ptr, ptr @PL_curpm, align 8, !tbaa !6
  %80 = getelementptr inbounds %struct.block, ptr %59, i64 0, i32 7
  store ptr %79, ptr %80, align 8, !tbaa !17
  %81 = getelementptr inbounds %struct.block, ptr %59, i64 0, i32 1
  store i8 %39, ptr %81, align 1, !tbaa !17
  store ptr %1, ptr @PL_stack_sp, align 8, !tbaa !6
  %82 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %83 = load ptr, ptr %82, align 8, !tbaa !20
  ret ptr %83
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_leave() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !6
  %2 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %3 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 5
  %4 = load i8, ptr %3, align 2, !tbaa !30
  %5 = icmp sgt i8 %4, -1
  br i1 %5, label %18, label %6

6:                                                ; preds = %0
  %7 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %8 = getelementptr inbounds %struct.stackinfo, ptr %7, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !14
  %10 = getelementptr inbounds %struct.stackinfo, ptr %7, i64 0, i32 4
  %11 = load i32, ptr %10, align 8, !tbaa !16
  %12 = sext i32 %11 to i64
  %13 = load ptr, ptr @PL_curpm, align 8, !tbaa !6
  %14 = getelementptr inbounds %struct.context, ptr %9, i64 %12, i32 0, i32 0, i32 6
  store ptr %13, ptr %14, align 8, !tbaa !17
  %15 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %16 = getelementptr inbounds %struct.op, ptr %15, i64 0, i32 5
  %17 = load i8, ptr %16, align 2, !tbaa !30
  br label %18

18:                                               ; preds = %6, %0
  %19 = phi i8 [ %17, %6 ], [ %4, %0 ]
  %20 = phi ptr [ %15, %6 ], [ %2, %0 ]
  %21 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %22 = getelementptr inbounds %struct.stackinfo, ptr %21, i64 0, i32 1
  %23 = load ptr, ptr %22, align 8, !tbaa !14
  %24 = getelementptr inbounds %struct.stackinfo, ptr %21, i64 0, i32 4
  %25 = load i32, ptr %24, align 8, !tbaa !16
  %26 = add nsw i32 %25, -1
  store i32 %26, ptr %24, align 8, !tbaa !16
  %27 = sext i32 %25 to i64
  %28 = getelementptr inbounds %struct.context, ptr %23, i64 %27
  %29 = load ptr, ptr @PL_stack_base, align 8, !tbaa !6
  %30 = getelementptr inbounds %struct.block, ptr %28, i64 0, i32 3
  %31 = load i32, ptr %30, align 4, !tbaa !17
  %32 = getelementptr inbounds %struct.block, ptr %28, i64 0, i32 4
  %33 = load ptr, ptr %32, align 8, !tbaa !17
  store ptr %33, ptr @PL_curcop, align 8, !tbaa !6
  %34 = load ptr, ptr @PL_markstack, align 8, !tbaa !6
  %35 = getelementptr inbounds %struct.block, ptr %28, i64 0, i32 5
  %36 = load i32, ptr %35, align 8, !tbaa !17
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds i32, ptr %34, i64 %37
  store ptr %38, ptr @PL_markstack_ptr, align 8, !tbaa !6
  %39 = getelementptr inbounds %struct.block, ptr %28, i64 0, i32 6
  %40 = load i32, ptr %39, align 4, !tbaa !17
  store i32 %40, ptr @PL_scopestack_ix, align 4, !tbaa !31
  %41 = getelementptr inbounds %struct.block, ptr %28, i64 0, i32 7
  %42 = load ptr, ptr %41, align 8, !tbaa !17
  %43 = and i8 %19, 3
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %47, label %45

45:                                               ; preds = %18
  %46 = zext i8 %43 to i32
  br label %53

47:                                               ; preds = %18
  %48 = getelementptr inbounds %struct.block, ptr %28, i64 0, i32 1
  %49 = load i8, ptr %48, align 1, !tbaa !17
  %50 = zext i8 %49 to i32
  %51 = icmp sgt i32 %25, 0
  %52 = select i1 %51, i32 %50, i32 2
  br label %53

53:                                               ; preds = %47, %45
  %54 = phi i32 [ %46, %45 ], [ %52, %47 ]
  %55 = sext i32 %31 to i64
  %56 = getelementptr inbounds ptr, ptr %29, i64 %55
  %57 = getelementptr inbounds %struct.op, ptr %20, i64 0, i32 6
  %58 = load i8, ptr %57, align 1, !tbaa !10
  %59 = icmp slt i8 %58, 0
  %60 = tail call fastcc ptr @S_leave_common(ptr noundef %56, ptr noundef %1, ptr noundef %56, i32 noundef %54, i32 noundef 655360, i1 noundef zeroext %59)
  store ptr %42, ptr @PL_curpm, align 8, !tbaa !6
  tail call void @Perl_pop_scope() #17
  store ptr %60, ptr @PL_stack_sp, align 8, !tbaa !6
  %61 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %62 = load ptr, ptr %61, align 8, !tbaa !20
  ret ptr %62
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @S_leave_common(ptr noundef %0, ptr noundef %1, ptr noundef readonly %2, i32 noundef %3, i32 noundef %4, i1 noundef zeroext %5) unnamed_addr #0 {
  store i8 0, ptr @PL_tainted, align 1, !tbaa !26
  %7 = and i32 %4, -131073
  switch i32 %3, label %89 [
    i32 2, label %32
    i32 3, label %8
  ]

8:                                                ; preds = %6
  %9 = getelementptr inbounds ptr, ptr %2, i64 1
  %10 = icmp ugt ptr %9, %1
  br i1 %10, label %89, label %11

11:                                               ; preds = %8
  br i1 %5, label %12, label %72

12:                                               ; preds = %11, %28
  %13 = phi ptr [ %30, %28 ], [ %9, %11 ]
  %14 = phi ptr [ %29, %28 ], [ %0, %11 ]
  %15 = load ptr, ptr %13, align 8, !tbaa !6
  %16 = getelementptr inbounds %struct.sv, ptr %15, i64 0, i32 2
  %17 = load i32, ptr %16, align 4, !tbaa !49
  %18 = and i32 %17, %4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %22, label %20

20:                                               ; preds = %12
  %21 = getelementptr inbounds ptr, ptr %14, i64 1
  store ptr %15, ptr %21, align 8, !tbaa !6
  br label %28

22:                                               ; preds = %12
  %23 = getelementptr inbounds %struct.sv, ptr %15, i64 0, i32 1
  %24 = load i32, ptr %23, align 8, !tbaa !41
  %25 = add i32 %24, 1
  store i32 %25, ptr %23, align 8, !tbaa !41
  %26 = tail call ptr @Perl_sv_2mortal(ptr noundef nonnull %15) #17
  %27 = getelementptr inbounds ptr, ptr %14, i64 1
  store ptr %26, ptr %27, align 8, !tbaa !6
  store i8 0, ptr @PL_tainted, align 1, !tbaa !26
  br label %28

28:                                               ; preds = %22, %20
  %29 = phi ptr [ %21, %20 ], [ %27, %22 ]
  %30 = getelementptr inbounds ptr, ptr %13, i64 1
  %31 = icmp ugt ptr %30, %1
  br i1 %31, label %89, label %12, !llvm.loop !174

32:                                               ; preds = %6
  %33 = icmp ult ptr %2, %1
  br i1 %33, label %34, label %55

34:                                               ; preds = %32
  %35 = load ptr, ptr %1, align 8, !tbaa !6
  %36 = getelementptr inbounds %struct.sv, ptr %35, i64 0, i32 2
  %37 = load i32, ptr %36, align 4, !tbaa !49
  %38 = and i32 %37, %7
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %52

40:                                               ; preds = %34
  %41 = and i32 %4, 131072
  %42 = and i32 %41, %37
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %52

44:                                               ; preds = %40
  br i1 %5, label %45, label %50

45:                                               ; preds = %44
  %46 = getelementptr inbounds %struct.sv, ptr %35, i64 0, i32 1
  %47 = load i32, ptr %46, align 8, !tbaa !41
  %48 = add i32 %47, 1
  store i32 %48, ptr %46, align 8, !tbaa !41
  %49 = tail call ptr @Perl_sv_2mortal(ptr noundef nonnull %35) #17
  br label %52

50:                                               ; preds = %44
  %51 = tail call ptr @Perl_sv_mortalcopy_flags(ptr noundef nonnull %35, i32 noundef 1538) #17
  br label %52

52:                                               ; preds = %34, %40, %45, %50
  %53 = phi ptr [ %49, %45 ], [ %51, %50 ], [ %35, %40 ], [ %35, %34 ]
  %54 = getelementptr inbounds ptr, ptr %0, i64 1
  store ptr %53, ptr %54, align 8, !tbaa !6
  br label %89

55:                                               ; preds = %32
  %56 = load ptr, ptr @PL_stack_max, align 8, !tbaa !6
  %57 = ptrtoint ptr %56 to i64
  %58 = ptrtoint ptr %0 to i64
  %59 = sub i64 %57, %58
  %60 = icmp slt i64 %59, 8
  br i1 %60, label %61, label %69

61:                                               ; preds = %55
  %62 = load ptr, ptr @PL_stack_base, align 8, !tbaa !6
  %63 = ptrtoint ptr %62 to i64
  %64 = sub i64 %58, %63
  %65 = ashr exact i64 %64, 3
  %66 = tail call ptr @Perl_stack_grow(ptr noundef %1, ptr noundef %0, i64 noundef 1) #17
  %67 = load ptr, ptr @PL_stack_base, align 8, !tbaa !6
  %68 = getelementptr inbounds ptr, ptr %67, i64 %65
  br label %69

69:                                               ; preds = %55, %61
  %70 = phi ptr [ %68, %61 ], [ %0, %55 ]
  %71 = getelementptr inbounds ptr, ptr %70, i64 1
  store ptr @PL_sv_undef, ptr %71, align 8, !tbaa !6
  br label %89

72:                                               ; preds = %11, %85
  %73 = phi ptr [ %87, %85 ], [ %9, %11 ]
  %74 = phi ptr [ %86, %85 ], [ %0, %11 ]
  %75 = load ptr, ptr %73, align 8, !tbaa !6
  %76 = getelementptr inbounds %struct.sv, ptr %75, i64 0, i32 2
  %77 = load i32, ptr %76, align 4, !tbaa !49
  %78 = and i32 %77, %4
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %82, label %80

80:                                               ; preds = %72
  %81 = getelementptr inbounds ptr, ptr %74, i64 1
  store ptr %75, ptr %81, align 8, !tbaa !6
  br label %85

82:                                               ; preds = %72
  %83 = tail call ptr @Perl_sv_mortalcopy_flags(ptr noundef nonnull %75, i32 noundef 1538) #17
  %84 = getelementptr inbounds ptr, ptr %74, i64 1
  store ptr %83, ptr %84, align 8, !tbaa !6
  store i8 0, ptr @PL_tainted, align 1, !tbaa !26
  br label %85

85:                                               ; preds = %82, %80
  %86 = phi ptr [ %81, %80 ], [ %84, %82 ]
  %87 = getelementptr inbounds ptr, ptr %73, i64 1
  %88 = icmp ugt ptr %87, %1
  br i1 %88, label %89, label %72, !llvm.loop !174

89:                                               ; preds = %85, %28, %8, %52, %6, %69
  %90 = phi ptr [ %71, %69 ], [ %54, %52 ], [ %0, %6 ], [ %0, %8 ], [ %29, %28 ], [ %86, %85 ]
  ret ptr %90
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_enteriter() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !6
  %2 = load ptr, ptr @PL_stack_base, align 8, !tbaa !6
  %3 = load ptr, ptr @PL_markstack_ptr, align 8, !tbaa !6
  %4 = getelementptr inbounds i32, ptr %3, i64 -1
  store ptr %4, ptr @PL_markstack_ptr, align 8, !tbaa !6
  %5 = load i32, ptr %3, align 4, !tbaa !31
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds ptr, ptr %2, i64 %6
  %8 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %9 = getelementptr inbounds %struct.op, ptr %8, i64 0, i32 5
  %10 = load i8, ptr %9, align 2, !tbaa !30
  %11 = and i8 %10, 3
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %44

13:                                               ; preds = %0
  %14 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %15 = getelementptr inbounds %struct.stackinfo, ptr %14, i64 0, i32 1
  %16 = load ptr, ptr %15, align 8, !tbaa !14
  %17 = getelementptr inbounds %struct.stackinfo, ptr %14, i64 0, i32 4
  %18 = load i32, ptr %17, align 8, !tbaa !16
  %19 = icmp sgt i32 %18, -1
  br i1 %19, label %20, label %44

20:                                               ; preds = %13
  %21 = zext i32 %18 to i64
  br label %22

22:                                               ; preds = %30, %20
  %23 = phi i64 [ %21, %20 ], [ %31, %30 ]
  %24 = getelementptr inbounds %struct.context, ptr %16, i64 %23
  %25 = load i8, ptr %24, align 8, !tbaa !17
  %26 = and i8 %25, 15
  %27 = zext i8 %26 to i32
  switch i32 %27, label %30 [
    i32 8, label %28
    i32 10, label %33
    i32 9, label %33
  ]

28:                                               ; preds = %22
  %29 = icmp sgt i8 %25, -1
  br i1 %29, label %33, label %30

30:                                               ; preds = %28, %22
  %31 = add nsw i64 %23, -1
  %32 = icmp sgt i64 %23, 0
  br i1 %32, label %22, label %44, !llvm.loop !18

33:                                               ; preds = %28, %22, %22
  %34 = and i64 %23, 2147483648
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %36, label %44

36:                                               ; preds = %33
  %37 = and i64 %23, 4294967295
  %38 = getelementptr inbounds %struct.context, ptr %16, i64 %37, i32 0, i32 0, i32 1
  %39 = load i8, ptr %38, align 1, !tbaa !17
  %40 = add i8 %39, -1
  %41 = icmp ult i8 %40, 3
  br i1 %41, label %44, label %42

42:                                               ; preds = %36
  %43 = zext i8 %39 to i32
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.14, i32 noundef %43) #17
  br label %44

44:                                               ; preds = %30, %36, %0, %42, %33, %13
  %45 = phi i8 [ 0, %42 ], [ 1, %33 ], [ 1, %13 ], [ %11, %0 ], [ %39, %36 ], [ 1, %30 ]
  tail call void @Perl_push_scope() #17
  tail call void @Perl_save_strlen(ptr noundef nonnull @PL_tmps_floor) #17
  %46 = load i64, ptr @PL_tmps_ix, align 8, !tbaa !59
  store i64 %46, ptr @PL_tmps_floor, align 8, !tbaa !59
  %47 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %48 = getelementptr inbounds %struct.op, ptr %47, i64 0, i32 3
  %49 = load i64, ptr %48, align 8, !tbaa !40
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %72, label %51

51:                                               ; preds = %44
  %52 = getelementptr inbounds %struct.op, ptr %47, i64 0, i32 6
  %53 = load i8, ptr %52, align 1, !tbaa !10
  %54 = icmp sgt i8 %53, -1
  br i1 %54, label %65, label %55

55:                                               ; preds = %51
  %56 = load ptr, ptr @PL_curpad, align 8, !tbaa !6
  %57 = getelementptr inbounds ptr, ptr %56, i64 %49
  %58 = load ptr, ptr %57, align 8, !tbaa !6
  %59 = getelementptr inbounds %struct.sv, ptr %58, i64 0, i32 2
  %60 = load i32, ptr %59, align 4, !tbaa !49
  %61 = and i32 %60, -262145
  store i32 %61, ptr %59, align 4, !tbaa !49
  tail call void @Perl_save_set_svflags(ptr noundef %58, i32 noundef 262144, i32 noundef 262144) #17
  %62 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %63 = getelementptr inbounds %struct.op, ptr %62, i64 0, i32 3
  %64 = load i64, ptr %63, align 8, !tbaa !40
  br label %65

65:                                               ; preds = %55, %51
  %66 = phi i64 [ %64, %55 ], [ %49, %51 ]
  tail call void @Perl_save_padsv_and_mortalize(i64 noundef %66) #17
  %67 = load ptr, ptr @PL_curpad, align 8, !tbaa !6
  %68 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %69 = getelementptr inbounds %struct.op, ptr %68, i64 0, i32 3
  %70 = load i64, ptr %69, align 8, !tbaa !40
  %71 = getelementptr inbounds ptr, ptr %67, i64 %70
  br label %91

72:                                               ; preds = %44
  %73 = load ptr, ptr %1, align 8, !tbaa !6
  %74 = getelementptr inbounds %struct.sv, ptr %73, i64 0, i32 2
  %75 = load i32, ptr %74, align 4, !tbaa !49
  %76 = and i32 %75, 255
  %77 = icmp eq i32 %76, 9
  %78 = getelementptr inbounds ptr, ptr %1, i64 -1
  br i1 %77, label %79, label %91

79:                                               ; preds = %72
  %80 = getelementptr inbounds %struct.gv, ptr %73, i64 0, i32 3
  %81 = load ptr, ptr %80, align 8, !tbaa !17
  %82 = load ptr, ptr %81, align 8, !tbaa !6
  %83 = icmp eq ptr %82, null
  br i1 %83, label %88, label %84

84:                                               ; preds = %79
  %85 = getelementptr inbounds %struct.sv, ptr %82, i64 0, i32 1
  %86 = load i32, ptr %85, align 8, !tbaa !41
  %87 = add i32 %86, 1
  store i32 %87, ptr %85, align 8, !tbaa !41
  br label %88

88:                                               ; preds = %79, %84
  tail call void @Perl_save_pushptrptr(ptr noundef nonnull %73, ptr noundef %82, i32 noundef 29) #17
  %89 = tail call ptr @Perl_newSV(i64 noundef 0) #17
  store ptr %89, ptr %81, align 8, !tbaa !6
  tail call void @Perl_save_aliased_sv(ptr noundef nonnull %73) #17
  %90 = load ptr, ptr @PL_op, align 8, !tbaa !6
  br label %91

91:                                               ; preds = %72, %88, %65
  %92 = phi ptr [ %68, %65 ], [ %90, %88 ], [ %47, %72 ]
  %93 = phi i1 [ true, %65 ], [ true, %88 ], [ false, %72 ]
  %94 = phi i8 [ 4, %65 ], [ 4, %88 ], [ 36, %72 ]
  %95 = phi ptr [ %71, %65 ], [ %73, %88 ], [ %73, %72 ]
  %96 = phi ptr [ %1, %65 ], [ %78, %88 ], [ %78, %72 ]
  %97 = getelementptr inbounds %struct.op, ptr %92, i64 0, i32 6
  %98 = load i8, ptr %97, align 1, !tbaa !10
  %99 = shl i8 %98, 1
  %100 = and i8 %99, 16
  %101 = or i8 %100, %94
  tail call void @Perl_push_scope() #17
  %102 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %103 = getelementptr inbounds %struct.stackinfo, ptr %102, i64 0, i32 4
  %104 = load i32, ptr %103, align 8, !tbaa !16
  %105 = getelementptr inbounds %struct.stackinfo, ptr %102, i64 0, i32 5
  %106 = load i32, ptr %105, align 4, !tbaa !171
  %107 = icmp slt i32 %104, %106
  br i1 %107, label %108, label %110

108:                                              ; preds = %91
  %109 = add nsw i32 %104, 1
  store i32 %109, ptr %103, align 8, !tbaa !16
  br label %114

110:                                              ; preds = %91
  %111 = tail call i32 @Perl_cxinc() #17
  %112 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %113 = getelementptr inbounds %struct.stackinfo, ptr %112, i64 0, i32 4
  store i32 %111, ptr %113, align 8, !tbaa !16
  br label %114

114:                                              ; preds = %110, %108
  %115 = phi i32 [ %111, %110 ], [ %109, %108 ]
  %116 = phi ptr [ %112, %110 ], [ %102, %108 ]
  %117 = getelementptr inbounds %struct.stackinfo, ptr %116, i64 0, i32 1
  %118 = load ptr, ptr %117, align 8, !tbaa !14
  %119 = sext i32 %115 to i64
  %120 = getelementptr inbounds %struct.context, ptr %118, i64 %119
  store i8 %101, ptr %120, align 8, !tbaa !17
  %121 = load ptr, ptr @PL_stack_base, align 8, !tbaa !6
  %122 = ptrtoint ptr %96 to i64
  %123 = ptrtoint ptr %121 to i64
  %124 = sub i64 %122, %123
  %125 = lshr exact i64 %124, 3
  %126 = trunc i64 %125 to i32
  %127 = getelementptr inbounds %struct.block, ptr %120, i64 0, i32 3
  store i32 %126, ptr %127, align 4, !tbaa !17
  %128 = load ptr, ptr @PL_curcop, align 8, !tbaa !6
  %129 = getelementptr inbounds %struct.block, ptr %120, i64 0, i32 4
  store ptr %128, ptr %129, align 8, !tbaa !17
  %130 = load ptr, ptr @PL_markstack_ptr, align 8, !tbaa !6
  %131 = load ptr, ptr @PL_markstack, align 8, !tbaa !6
  %132 = ptrtoint ptr %130 to i64
  %133 = ptrtoint ptr %131 to i64
  %134 = sub i64 %132, %133
  %135 = lshr exact i64 %134, 2
  %136 = trunc i64 %135 to i32
  %137 = getelementptr inbounds %struct.block, ptr %120, i64 0, i32 5
  store i32 %136, ptr %137, align 8, !tbaa !17
  %138 = load i32, ptr @PL_scopestack_ix, align 4, !tbaa !31
  %139 = getelementptr inbounds %struct.block, ptr %120, i64 0, i32 6
  store i32 %138, ptr %139, align 4, !tbaa !17
  %140 = load ptr, ptr @PL_curpm, align 8, !tbaa !6
  %141 = getelementptr inbounds %struct.block, ptr %120, i64 0, i32 7
  store ptr %140, ptr %141, align 8, !tbaa !17
  %142 = getelementptr inbounds %struct.block, ptr %120, i64 0, i32 1
  store i8 %45, ptr %142, align 1, !tbaa !17
  %143 = load ptr, ptr @PL_stack_base, align 8, !tbaa !6
  %144 = ptrtoint ptr %7 to i64
  %145 = ptrtoint ptr %143 to i64
  %146 = sub i64 %144, %145
  %147 = lshr exact i64 %146, 3
  %148 = trunc i64 %147 to i32
  %149 = getelementptr inbounds %struct.block, ptr %120, i64 0, i32 8
  store i32 %148, ptr %149, align 8, !tbaa !17
  %150 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %151 = getelementptr inbounds %struct.block, ptr %120, i64 0, i32 8, i32 0, i32 1
  store ptr %150, ptr %151, align 8, !tbaa !17
  %152 = getelementptr inbounds %struct.block, ptr %120, i64 0, i32 8, i32 0, i32 3
  %153 = getelementptr inbounds %struct.block, ptr %120, i64 0, i32 8, i32 0, i32 4
  %154 = getelementptr inbounds %struct.block, ptr %120, i64 0, i32 8, i32 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %152, i8 0, i64 16, i1 false)
  store ptr %95, ptr %154, align 8, !tbaa !17
  %155 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %156 = getelementptr inbounds %struct.op, ptr %155, i64 0, i32 5
  %157 = load i8, ptr %156, align 2, !tbaa !30
  %158 = and i8 %157, 64
  %159 = icmp eq i8 %158, 0
  br i1 %159, label %427, label %160

160:                                              ; preds = %114
  %161 = getelementptr inbounds ptr, ptr %96, i64 -1
  %162 = load ptr, ptr %96, align 8, !tbaa !6
  %163 = getelementptr inbounds %struct.sv, ptr %162, i64 0, i32 2
  %164 = load i32, ptr %163, align 4, !tbaa !49
  %165 = and i32 %164, 255
  %166 = icmp eq i32 %165, 11
  br i1 %166, label %400, label %167

167:                                              ; preds = %160
  %168 = getelementptr inbounds ptr, ptr %96, i64 -2
  %169 = load ptr, ptr %161, align 8, !tbaa !6
  br i1 %93, label %172, label %170

170:                                              ; preds = %167
  %171 = tail call ptr (ptr, ...) @Perl_die(ptr noundef nonnull @.str.28) #17
  br label %446

172:                                              ; preds = %167
  %173 = getelementptr inbounds %struct.sv, ptr %169, i64 0, i32 2
  %174 = load i32, ptr %173, align 4, !tbaa !49
  %175 = and i32 %174, 2097152
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %180, label %177

177:                                              ; preds = %172
  %178 = tail call i32 @Perl_mg_get(ptr noundef nonnull %169) #17
  %179 = load i32, ptr %163, align 4, !tbaa !49
  br label %180

180:                                              ; preds = %172, %177
  %181 = phi i32 [ %164, %172 ], [ %179, %177 ]
  %182 = and i32 %181, 2097152
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %186, label %184

184:                                              ; preds = %180
  %185 = tail call i32 @Perl_mg_get(ptr noundef nonnull %162) #17
  br label %186

186:                                              ; preds = %180, %184
  %187 = load i32, ptr %173, align 4, !tbaa !49
  %188 = and i32 %187, 12288
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %190, label %251

190:                                              ; preds = %186
  %191 = and i32 %187, 65280
  %192 = icmp ne i32 %191, 0
  %193 = and i32 %187, 255
  %194 = icmp eq i32 %193, 8
  %195 = or i1 %192, %194
  %196 = and i32 %187, 16826623
  %197 = icmp eq i32 %196, 16777226
  %198 = or i1 %197, %195
  %199 = and i32 %187, 16384
  %200 = icmp eq i32 %199, 0
  %201 = and i1 %200, %198
  br i1 %201, label %251, label %202

202:                                              ; preds = %190
  %203 = load i32, ptr %163, align 4, !tbaa !49
  %204 = and i32 %203, 12288
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %206, label %251

206:                                              ; preds = %202
  %207 = and i32 %203, 65280
  %208 = icmp ne i32 %207, 0
  %209 = and i32 %203, 255
  %210 = icmp eq i32 %209, 8
  %211 = or i1 %208, %210
  %212 = and i32 %203, 16826623
  %213 = icmp eq i32 %212, 16777226
  %214 = or i1 %213, %211
  br i1 %214, label %215, label %219

215:                                              ; preds = %206
  %216 = and i32 %203, 16384
  %217 = icmp eq i32 %216, 0
  br i1 %217, label %251, label %218

218:                                              ; preds = %215
  br i1 %198, label %220, label %239

219:                                              ; preds = %206
  br i1 %198, label %220, label %226

220:                                              ; preds = %219, %218
  %221 = tail call i32 @Perl_looks_like_number(ptr noundef nonnull %169) #17
  %222 = icmp eq i32 %221, 0
  br i1 %222, label %361, label %223

223:                                              ; preds = %220
  %224 = load i32, ptr %173, align 4, !tbaa !49
  %225 = and i32 %224, 16384
  br label %226

226:                                              ; preds = %223, %219
  %227 = phi i32 [ %225, %223 ], [ %199, %219 ]
  %228 = icmp eq i32 %227, 0
  br i1 %228, label %361, label %229

229:                                              ; preds = %226
  %230 = getelementptr inbounds %struct.sv, ptr %169, i64 0, i32 3
  %231 = load ptr, ptr %230, align 8, !tbaa !17
  %232 = load i8, ptr %231, align 1, !tbaa !17
  %233 = icmp eq i8 %232, 48
  br i1 %233, label %361, label %234

234:                                              ; preds = %229
  %235 = load i32, ptr %163, align 4, !tbaa !49
  %236 = and i32 %235, 65280
  %237 = and i32 %235, 255
  %238 = and i32 %235, 16826623
  br label %239

239:                                              ; preds = %234, %218
  %240 = phi i32 [ %238, %234 ], [ %212, %218 ]
  %241 = phi i32 [ %237, %234 ], [ %209, %218 ]
  %242 = phi i32 [ %236, %234 ], [ %207, %218 ]
  %243 = icmp ne i32 %242, 0
  %244 = icmp eq i32 %241, 8
  %245 = or i1 %243, %244
  %246 = icmp eq i32 %240, 16777226
  %247 = or i1 %246, %245
  br i1 %247, label %248, label %251

248:                                              ; preds = %239
  %249 = tail call i32 @Perl_looks_like_number(ptr noundef nonnull %162) #17
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %361, label %251

251:                                              ; preds = %190, %239, %248, %215, %202, %186
  %252 = load i8, ptr %120, align 8, !tbaa !17
  %253 = and i8 %252, -16
  %254 = or i8 %253, 7
  store i8 %254, ptr %120, align 8, !tbaa !17
  %255 = load i32, ptr %173, align 4, !tbaa !49
  %256 = and i32 %255, 65280
  %257 = icmp ne i32 %256, 0
  %258 = and i32 %255, 255
  %259 = icmp eq i32 %258, 8
  %260 = or i1 %257, %259
  %261 = and i32 %255, 16826623
  %262 = icmp eq i32 %261, 16777226
  %263 = or i1 %262, %260
  br i1 %263, label %264, label %295

264:                                              ; preds = %251
  %265 = and i32 %255, 512
  %266 = icmp eq i32 %265, 0
  br i1 %266, label %271, label %267

267:                                              ; preds = %264
  %268 = load ptr, ptr %169, align 8, !tbaa !72
  %269 = getelementptr inbounds %struct.xpvnv, ptr %268, i64 0, i32 5
  %270 = load double, ptr %269, align 8, !tbaa !17
  br label %273

271:                                              ; preds = %264
  %272 = tail call fast nofpclass(nan inf) double @Perl_sv_2nv_flags(ptr noundef nonnull %169, i32 noundef 0) #17
  br label %273

273:                                              ; preds = %271, %267
  %274 = phi fast double [ %270, %267 ], [ %272, %271 ]
  %275 = tail call zeroext i1 @Perl_isinfnan(double noundef nofpclass(nan inf) %274) #17
  %276 = fcmp fast ole double %274, 0xC3E0000000000000
  %277 = select i1 %275, i1 true, i1 %276
  br i1 %277, label %336, label %278

278:                                              ; preds = %273
  %279 = fcmp fast ogt double %274, 0.000000e+00
  br i1 %279, label %280, label %295

280:                                              ; preds = %278
  %281 = fcmp fast ogt double %274, 0x43F0000000000000
  br i1 %281, label %336, label %282

282:                                              ; preds = %280
  %283 = load i32, ptr %173, align 4, !tbaa !49
  %284 = and i32 %283, 256
  %285 = icmp eq i32 %284, 0
  br i1 %285, label %290, label %286

286:                                              ; preds = %282
  %287 = load ptr, ptr %169, align 8, !tbaa !72
  %288 = getelementptr inbounds %struct.xpvuv, ptr %287, i64 0, i32 4
  %289 = load i64, ptr %288, align 8, !tbaa !17
  br label %292

290:                                              ; preds = %282
  %291 = tail call i64 @Perl_sv_2uv_flags(ptr noundef nonnull %169, i32 noundef 0) #17
  br label %292

292:                                              ; preds = %290, %286
  %293 = phi i64 [ %289, %286 ], [ %291, %290 ]
  %294 = icmp slt i64 %293, 0
  br i1 %294, label %336, label %295

295:                                              ; preds = %292, %278, %251
  %296 = load i32, ptr %163, align 4, !tbaa !49
  %297 = and i32 %296, 65280
  %298 = icmp ne i32 %297, 0
  %299 = and i32 %296, 255
  %300 = icmp eq i32 %299, 8
  %301 = or i1 %298, %300
  %302 = and i32 %296, 16826623
  %303 = icmp eq i32 %302, 16777226
  %304 = or i1 %303, %301
  br i1 %304, label %305, label %338

305:                                              ; preds = %295
  %306 = and i32 %296, 512
  %307 = icmp eq i32 %306, 0
  br i1 %307, label %312, label %308

308:                                              ; preds = %305
  %309 = load ptr, ptr %162, align 8, !tbaa !72
  %310 = getelementptr inbounds %struct.xpvnv, ptr %309, i64 0, i32 5
  %311 = load double, ptr %310, align 8, !tbaa !17
  br label %314

312:                                              ; preds = %305
  %313 = tail call fast nofpclass(nan inf) double @Perl_sv_2nv_flags(ptr noundef nonnull %162, i32 noundef 0) #17
  br label %314

314:                                              ; preds = %312, %308
  %315 = phi fast double [ %311, %308 ], [ %313, %312 ]
  %316 = tail call zeroext i1 @Perl_isinfnan(double noundef nofpclass(nan inf) %315) #17
  %317 = fcmp fast ole double %315, 0xC3E0000000000000
  %318 = select i1 %316, i1 true, i1 %317
  br i1 %318, label %336, label %319

319:                                              ; preds = %314
  %320 = fcmp fast ogt double %315, 0.000000e+00
  br i1 %320, label %321, label %338

321:                                              ; preds = %319
  %322 = fcmp fast ogt double %315, 0x43F0000000000000
  br i1 %322, label %336, label %323

323:                                              ; preds = %321
  %324 = load i32, ptr %163, align 4, !tbaa !49
  %325 = and i32 %324, 256
  %326 = icmp eq i32 %325, 0
  br i1 %326, label %331, label %327

327:                                              ; preds = %323
  %328 = load ptr, ptr %162, align 8, !tbaa !72
  %329 = getelementptr inbounds %struct.xpvuv, ptr %328, i64 0, i32 4
  %330 = load i64, ptr %329, align 8, !tbaa !17
  br label %333

331:                                              ; preds = %323
  %332 = tail call i64 @Perl_sv_2uv_flags(ptr noundef nonnull %162, i32 noundef 0) #17
  br label %333

333:                                              ; preds = %331, %327
  %334 = phi i64 [ %330, %327 ], [ %332, %331 ]
  %335 = icmp slt i64 %334, 0
  br i1 %335, label %336, label %338

336:                                              ; preds = %333, %321, %314, %292, %280, %273
  %337 = tail call ptr (ptr, ...) @Perl_die(ptr noundef nonnull @.str.11) #17
  br label %446

338:                                              ; preds = %333, %319, %295
  %339 = load i32, ptr %173, align 4, !tbaa !49
  %340 = and i32 %339, 256
  %341 = icmp eq i32 %340, 0
  br i1 %341, label %346, label %342

342:                                              ; preds = %338
  %343 = load ptr, ptr %169, align 8, !tbaa !72
  %344 = getelementptr inbounds %struct.xpviv, ptr %343, i64 0, i32 4
  %345 = load i64, ptr %344, align 8, !tbaa !17
  br label %348

346:                                              ; preds = %338
  %347 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %169, i32 noundef 0) #17
  br label %348

348:                                              ; preds = %346, %342
  %349 = phi i64 [ %345, %342 ], [ %347, %346 ]
  store i64 %349, ptr %152, align 8, !tbaa !17
  %350 = load i32, ptr %163, align 4, !tbaa !49
  %351 = and i32 %350, 256
  %352 = icmp eq i32 %351, 0
  br i1 %352, label %357, label %353

353:                                              ; preds = %348
  %354 = load ptr, ptr %162, align 8, !tbaa !72
  %355 = getelementptr inbounds %struct.xpviv, ptr %354, i64 0, i32 4
  %356 = load i64, ptr %355, align 8, !tbaa !17
  br label %359

357:                                              ; preds = %348
  %358 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %162, i32 noundef 0) #17
  br label %359

359:                                              ; preds = %357, %353
  %360 = phi i64 [ %356, %353 ], [ %358, %357 ]
  store i64 %360, ptr %153, align 8, !tbaa !17
  br label %442

361:                                              ; preds = %248, %229, %226, %220
  %362 = load i8, ptr %120, align 8, !tbaa !17
  %363 = and i8 %362, -16
  %364 = or i8 %363, 6
  store i8 %364, ptr %120, align 8, !tbaa !17
  %365 = tail call ptr @Perl_newSVsv(ptr noundef nonnull %169) #17
  store ptr %365, ptr %152, align 8, !tbaa !17
  store ptr %162, ptr %153, align 8, !tbaa !17
  %366 = getelementptr inbounds %struct.sv, ptr %162, i64 0, i32 1
  %367 = load i32, ptr %366, align 8, !tbaa !41
  %368 = add i32 %367, 1
  store i32 %368, ptr %366, align 8, !tbaa !41
  %369 = load ptr, ptr %152, align 8, !tbaa !17
  %370 = getelementptr inbounds %struct.sv, ptr %369, i64 0, i32 2
  %371 = load i32, ptr %370, align 4, !tbaa !49
  %372 = and i32 %371, 430018304
  %373 = icmp eq i32 %372, 1024
  br i1 %373, label %376, label %374

374:                                              ; preds = %361
  %375 = tail call ptr @Perl_sv_pvn_force_flags(ptr noundef nonnull %369, ptr noundef null, i32 noundef 2) #17
  br label %376

376:                                              ; preds = %361, %374
  %377 = load i32, ptr %163, align 4, !tbaa !49
  %378 = and i32 %377, 2098176
  %379 = icmp eq i32 %378, 1024
  br i1 %379, label %383, label %380

380:                                              ; preds = %376
  %381 = tail call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %162, ptr noundef null, i32 noundef 34) #17
  %382 = load i32, ptr %163, align 4, !tbaa !49
  br label %383

383:                                              ; preds = %376, %380
  %384 = phi i32 [ %377, %376 ], [ %382, %380 ]
  %385 = and i32 %384, 65280
  %386 = icmp ne i32 %385, 0
  %387 = and i32 %384, 255
  %388 = icmp eq i32 %387, 8
  %389 = or i1 %386, %388
  %390 = and i32 %384, 16826623
  %391 = icmp eq i32 %390, 16777226
  %392 = or i1 %391, %389
  br i1 %392, label %442, label %393

393:                                              ; preds = %383
  %394 = load i32, ptr %366, align 8, !tbaa !41
  %395 = icmp ugt i32 %394, 1
  br i1 %395, label %396, label %398

396:                                              ; preds = %393
  %397 = add i32 %394, -1
  store i32 %397, ptr %366, align 8, !tbaa !41
  br label %399

398:                                              ; preds = %393
  tail call void @Perl_sv_free2(ptr noundef nonnull %162, i32 noundef %394) #17
  br label %399

399:                                              ; preds = %396, %398
  store ptr @PL_sv_no, ptr %153, align 8, !tbaa !17
  br label %442

400:                                              ; preds = %160
  store ptr %162, ptr %152, align 8, !tbaa !17
  %401 = getelementptr inbounds %struct.sv, ptr %162, i64 0, i32 1
  %402 = load i32, ptr %401, align 8, !tbaa !41
  %403 = add i32 %402, 1
  store i32 %403, ptr %401, align 8, !tbaa !41
  %404 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %405 = getelementptr inbounds %struct.op, ptr %404, i64 0, i32 6
  %406 = load i8, ptr %405, align 1, !tbaa !10
  %407 = and i8 %406, 4
  %408 = icmp eq i8 %407, 0
  br i1 %408, label %425, label %409

409:                                              ; preds = %400
  %410 = load ptr, ptr %152, align 8, !tbaa !17
  %411 = getelementptr inbounds %struct.sv, ptr %410, i64 0, i32 2
  %412 = load i32, ptr %411, align 4, !tbaa !49
  %413 = and i32 %412, 8388608
  %414 = icmp eq i32 %413, 0
  br i1 %414, label %418, label %415

415:                                              ; preds = %409
  %416 = tail call i32 @Perl_mg_size(ptr noundef nonnull %410) #17
  %417 = sext i32 %416 to i64
  br label %422

418:                                              ; preds = %409
  %419 = load ptr, ptr %410, align 8, !tbaa !141
  %420 = getelementptr inbounds %struct.xpvav, ptr %419, i64 0, i32 2
  %421 = load i64, ptr %420, align 8, !tbaa !142
  br label %422

422:                                              ; preds = %418, %415
  %423 = phi i64 [ %417, %415 ], [ %421, %418 ]
  %424 = add nsw i64 %423, 1
  br label %425

425:                                              ; preds = %400, %422
  %426 = phi i64 [ %424, %422 ], [ -1, %400 ]
  store i64 %426, ptr %153, align 8, !tbaa !17
  br label %442

427:                                              ; preds = %114
  %428 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %429 = getelementptr inbounds %struct.op, ptr %428, i64 0, i32 6
  %430 = load i8, ptr %429, align 1, !tbaa !10
  %431 = and i8 %430, 4
  %432 = icmp eq i8 %431, 0
  br i1 %432, label %437, label %433

433:                                              ; preds = %427
  %434 = shl i64 %124, 29
  %435 = add i64 %434, 4294967296
  %436 = ashr i64 %435, 32
  store i64 %436, ptr %153, align 8, !tbaa !17
  br label %442

437:                                              ; preds = %427
  %438 = load ptr, ptr @PL_stack_base, align 8, !tbaa !6
  %439 = ptrtoint ptr %438 to i64
  %440 = sub i64 %144, %439
  %441 = ashr exact i64 %440, 3
  store i64 %441, ptr %153, align 8, !tbaa !17
  br label %442

442:                                              ; preds = %359, %399, %383, %425, %433, %437
  %443 = phi ptr [ %96, %433 ], [ %96, %437 ], [ %161, %425 ], [ %168, %383 ], [ %168, %399 ], [ %168, %359 ]
  store ptr %443, ptr @PL_stack_sp, align 8, !tbaa !6
  %444 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %445 = load ptr, ptr %444, align 8, !tbaa !20
  br label %446

446:                                              ; preds = %336, %170, %442
  %447 = phi ptr [ %445, %442 ], [ %171, %170 ], [ %337, %336 ]
  ret ptr %447
}

declare void @Perl_save_set_svflags(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

declare void @Perl_save_padsv_and_mortalize(i64 noundef) local_unnamed_addr #2

declare void @Perl_save_pushptrptr(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

declare ptr @Perl_newSV(i64 noundef) local_unnamed_addr #2

declare void @Perl_save_aliased_sv(ptr noundef) local_unnamed_addr #2

declare i32 @Perl_mg_size(ptr noundef) local_unnamed_addr #2

declare zeroext i1 @Perl_isinfnan(double noundef nofpclass(nan inf)) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_enterloop() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !6
  %2 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %3 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 5
  %4 = load i8, ptr %3, align 2, !tbaa !30
  %5 = and i8 %4, 3
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %38

7:                                                ; preds = %0
  %8 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %9 = getelementptr inbounds %struct.stackinfo, ptr %8, i64 0, i32 1
  %10 = load ptr, ptr %9, align 8, !tbaa !14
  %11 = getelementptr inbounds %struct.stackinfo, ptr %8, i64 0, i32 4
  %12 = load i32, ptr %11, align 8, !tbaa !16
  %13 = icmp sgt i32 %12, -1
  br i1 %13, label %14, label %38

14:                                               ; preds = %7
  %15 = zext i32 %12 to i64
  br label %16

16:                                               ; preds = %24, %14
  %17 = phi i64 [ %15, %14 ], [ %25, %24 ]
  %18 = getelementptr inbounds %struct.context, ptr %10, i64 %17
  %19 = load i8, ptr %18, align 8, !tbaa !17
  %20 = and i8 %19, 15
  %21 = zext i8 %20 to i32
  switch i32 %21, label %24 [
    i32 8, label %22
    i32 10, label %27
    i32 9, label %27
  ]

22:                                               ; preds = %16
  %23 = icmp sgt i8 %19, -1
  br i1 %23, label %27, label %24

24:                                               ; preds = %22, %16
  %25 = add nsw i64 %17, -1
  %26 = icmp sgt i64 %17, 0
  br i1 %26, label %16, label %38, !llvm.loop !18

27:                                               ; preds = %22, %16, %16
  %28 = and i64 %17, 2147483648
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %30, label %38

30:                                               ; preds = %27
  %31 = and i64 %17, 4294967295
  %32 = getelementptr inbounds %struct.context, ptr %10, i64 %31, i32 0, i32 0, i32 1
  %33 = load i8, ptr %32, align 1, !tbaa !17
  %34 = add i8 %33, -1
  %35 = icmp ult i8 %34, 3
  br i1 %35, label %38, label %36

36:                                               ; preds = %30
  %37 = zext i8 %33 to i32
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.14, i32 noundef %37) #17
  br label %38

38:                                               ; preds = %24, %30, %36, %27, %7, %0
  %39 = phi i8 [ %5, %0 ], [ 0, %36 ], [ 1, %27 ], [ 1, %7 ], [ %33, %30 ], [ 1, %24 ]
  tail call void @Perl_push_scope() #17
  tail call void @Perl_save_strlen(ptr noundef nonnull @PL_tmps_floor) #17
  %40 = load i64, ptr @PL_tmps_ix, align 8, !tbaa !59
  store i64 %40, ptr @PL_tmps_floor, align 8, !tbaa !59
  tail call void @Perl_push_scope() #17
  %41 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %42 = getelementptr inbounds %struct.stackinfo, ptr %41, i64 0, i32 4
  %43 = load i32, ptr %42, align 8, !tbaa !16
  %44 = getelementptr inbounds %struct.stackinfo, ptr %41, i64 0, i32 5
  %45 = load i32, ptr %44, align 4, !tbaa !171
  %46 = icmp slt i32 %43, %45
  br i1 %46, label %47, label %49

47:                                               ; preds = %38
  %48 = add nsw i32 %43, 1
  store i32 %48, ptr %42, align 8, !tbaa !16
  br label %53

49:                                               ; preds = %38
  %50 = tail call i32 @Perl_cxinc() #17
  %51 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %52 = getelementptr inbounds %struct.stackinfo, ptr %51, i64 0, i32 4
  store i32 %50, ptr %52, align 8, !tbaa !16
  br label %53

53:                                               ; preds = %49, %47
  %54 = phi i32 [ %50, %49 ], [ %48, %47 ]
  %55 = phi ptr [ %51, %49 ], [ %41, %47 ]
  %56 = getelementptr inbounds %struct.stackinfo, ptr %55, i64 0, i32 1
  %57 = load ptr, ptr %56, align 8, !tbaa !14
  %58 = sext i32 %54 to i64
  %59 = getelementptr inbounds %struct.context, ptr %57, i64 %58
  store i8 5, ptr %59, align 8, !tbaa !17
  %60 = load ptr, ptr @PL_stack_base, align 8, !tbaa !6
  %61 = ptrtoint ptr %1 to i64
  %62 = ptrtoint ptr %60 to i64
  %63 = sub i64 %61, %62
  %64 = lshr exact i64 %63, 3
  %65 = trunc i64 %64 to i32
  %66 = getelementptr inbounds %struct.block, ptr %59, i64 0, i32 3
  store i32 %65, ptr %66, align 4, !tbaa !17
  %67 = load ptr, ptr @PL_curcop, align 8, !tbaa !6
  %68 = getelementptr inbounds %struct.block, ptr %59, i64 0, i32 4
  store ptr %67, ptr %68, align 8, !tbaa !17
  %69 = load ptr, ptr @PL_markstack_ptr, align 8, !tbaa !6
  %70 = load ptr, ptr @PL_markstack, align 8, !tbaa !6
  %71 = ptrtoint ptr %69 to i64
  %72 = ptrtoint ptr %70 to i64
  %73 = sub i64 %71, %72
  %74 = lshr exact i64 %73, 2
  %75 = trunc i64 %74 to i32
  %76 = getelementptr inbounds %struct.block, ptr %59, i64 0, i32 5
  store i32 %75, ptr %76, align 8, !tbaa !17
  %77 = load i32, ptr @PL_scopestack_ix, align 4, !tbaa !31
  %78 = getelementptr inbounds %struct.block, ptr %59, i64 0, i32 6
  store i32 %77, ptr %78, align 4, !tbaa !17
  %79 = load ptr, ptr @PL_curpm, align 8, !tbaa !6
  %80 = getelementptr inbounds %struct.block, ptr %59, i64 0, i32 7
  store ptr %79, ptr %80, align 8, !tbaa !17
  %81 = getelementptr inbounds %struct.block, ptr %59, i64 0, i32 1
  store i8 %39, ptr %81, align 1, !tbaa !17
  %82 = load ptr, ptr @PL_stack_base, align 8, !tbaa !6
  %83 = ptrtoint ptr %82 to i64
  %84 = sub i64 %61, %83
  %85 = lshr exact i64 %84, 3
  %86 = trunc i64 %85 to i32
  %87 = getelementptr inbounds %struct.block, ptr %59, i64 0, i32 8
  store i32 %86, ptr %87, align 8, !tbaa !17
  %88 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %89 = getelementptr inbounds %struct.block, ptr %59, i64 0, i32 8, i32 0, i32 1
  store ptr %88, ptr %89, align 8, !tbaa !17
  %90 = getelementptr inbounds %struct.block, ptr %59, i64 0, i32 8, i32 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %90, i8 0, i64 24, i1 false)
  store ptr %1, ptr @PL_stack_sp, align 8, !tbaa !6
  %91 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %92 = load ptr, ptr %91, align 8, !tbaa !20
  ret ptr %92
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_leaveloop() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !6
  %2 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %3 = getelementptr inbounds %struct.stackinfo, ptr %2, i64 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !14
  %5 = getelementptr inbounds %struct.stackinfo, ptr %2, i64 0, i32 4
  %6 = load i32, ptr %5, align 8, !tbaa !16
  %7 = add nsw i32 %6, -1
  store i32 %7, ptr %5, align 8, !tbaa !16
  %8 = sext i32 %6 to i64
  %9 = getelementptr inbounds %struct.context, ptr %4, i64 %8
  %10 = load ptr, ptr @PL_stack_base, align 8, !tbaa !6
  %11 = getelementptr inbounds %struct.block, ptr %9, i64 0, i32 3
  %12 = load i32, ptr %11, align 4, !tbaa !17
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds ptr, ptr %10, i64 %13
  %15 = getelementptr inbounds %struct.block, ptr %9, i64 0, i32 4
  %16 = load ptr, ptr %15, align 8, !tbaa !17
  store ptr %16, ptr @PL_curcop, align 8, !tbaa !6
  %17 = load ptr, ptr @PL_markstack, align 8, !tbaa !6
  %18 = getelementptr inbounds %struct.block, ptr %9, i64 0, i32 5
  %19 = load i32, ptr %18, align 8, !tbaa !17
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds i32, ptr %17, i64 %20
  store ptr %21, ptr @PL_markstack_ptr, align 8, !tbaa !6
  %22 = getelementptr inbounds %struct.block, ptr %9, i64 0, i32 6
  %23 = load i32, ptr %22, align 4, !tbaa !17
  store i32 %23, ptr @PL_scopestack_ix, align 4, !tbaa !31
  %24 = getelementptr inbounds %struct.block, ptr %9, i64 0, i32 7
  %25 = load ptr, ptr %24, align 8, !tbaa !17
  %26 = getelementptr inbounds %struct.block, ptr %9, i64 0, i32 1
  %27 = load i8, ptr %26, align 1, !tbaa !17
  %28 = zext i8 %27 to i32
  %29 = getelementptr inbounds %struct.block, ptr %9, i64 0, i32 8
  %30 = load i32, ptr %29, align 8, !tbaa !17
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds ptr, ptr %10, i64 %31
  %33 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %34 = getelementptr inbounds %struct.op, ptr %33, i64 0, i32 6
  %35 = load i8, ptr %34, align 1, !tbaa !10
  %36 = icmp slt i8 %35, 0
  %37 = tail call fastcc ptr @S_leave_common(ptr noundef %32, ptr noundef %1, ptr noundef %14, i32 noundef %28, i32 noundef 0, i1 noundef zeroext %36)
  store ptr %37, ptr @PL_stack_sp, align 8, !tbaa !6
  %38 = load i8, ptr %9, align 8, !tbaa !17
  %39 = and i8 %38, 15
  %40 = icmp eq i8 %39, 6
  br i1 %40, label %41, label %59

41:                                               ; preds = %0
  %42 = getelementptr inbounds %struct.block, ptr %9, i64 0, i32 8, i32 0, i32 3
  %43 = load ptr, ptr %42, align 8, !tbaa !17
  %44 = getelementptr inbounds %struct.sv, ptr %43, i64 0, i32 1
  %45 = load i32, ptr %44, align 8, !tbaa !41
  %46 = icmp ugt i32 %45, 1
  br i1 %46, label %47, label %49

47:                                               ; preds = %41
  %48 = add i32 %45, -1
  store i32 %48, ptr %44, align 8, !tbaa !41
  br label %50

49:                                               ; preds = %41
  tail call void @Perl_sv_free2(ptr noundef nonnull %43, i32 noundef %45) #17
  br label %50

50:                                               ; preds = %47, %49
  %51 = getelementptr inbounds %struct.block, ptr %9, i64 0, i32 8, i32 0, i32 4
  %52 = load ptr, ptr %51, align 8, !tbaa !17
  %53 = getelementptr inbounds %struct.sv, ptr %52, i64 0, i32 1
  %54 = load i32, ptr %53, align 8, !tbaa !41
  %55 = icmp ugt i32 %54, 1
  br i1 %55, label %56, label %58

56:                                               ; preds = %50
  %57 = add i32 %54, -1
  store i32 %57, ptr %53, align 8, !tbaa !41
  br label %59

58:                                               ; preds = %50
  tail call void @Perl_sv_free2(ptr noundef nonnull %52, i32 noundef %54) #17
  br label %59

59:                                               ; preds = %58, %56, %0
  %60 = load i8, ptr %9, align 8, !tbaa !17
  %61 = and i8 %60, 15
  %62 = icmp eq i8 %61, 4
  br i1 %62, label %63, label %74

63:                                               ; preds = %59
  %64 = getelementptr inbounds %struct.block, ptr %9, i64 0, i32 8, i32 0, i32 3
  %65 = load ptr, ptr %64, align 8, !tbaa !17
  %66 = icmp eq ptr %65, null
  br i1 %66, label %74, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %struct.sv, ptr %65, i64 0, i32 1
  %69 = load i32, ptr %68, align 8, !tbaa !41
  %70 = icmp ugt i32 %69, 1
  br i1 %70, label %71, label %73

71:                                               ; preds = %67
  %72 = add i32 %69, -1
  store i32 %72, ptr %68, align 8, !tbaa !41
  br label %74

73:                                               ; preds = %67
  tail call void @Perl_sv_free2(ptr noundef nonnull %65, i32 noundef %69) #17
  br label %74

74:                                               ; preds = %73, %71, %63, %59
  store ptr %25, ptr @PL_curpm, align 8, !tbaa !6
  tail call void @Perl_pop_scope() #17
  tail call void @Perl_pop_scope() #17
  %75 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %76 = load ptr, ptr %75, align 8, !tbaa !20
  ret ptr %76
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_return() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !6
  %2 = load ptr, ptr @PL_stack_base, align 8, !tbaa !6
  %3 = load ptr, ptr @PL_markstack_ptr, align 8, !tbaa !6
  %4 = getelementptr inbounds i32, ptr %3, i64 -1
  store ptr %4, ptr @PL_markstack_ptr, align 8, !tbaa !6
  %5 = load i32, ptr %3, align 4, !tbaa !31
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds ptr, ptr %2, i64 %6
  %8 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %9 = getelementptr inbounds %struct.stackinfo, ptr %8, i64 0, i32 1
  %10 = load ptr, ptr %9, align 8, !tbaa !14
  %11 = getelementptr inbounds %struct.stackinfo, ptr %8, i64 0, i32 4
  %12 = load i32, ptr %11, align 8, !tbaa !16
  %13 = icmp sgt i32 %12, -1
  br i1 %13, label %14, label %30

14:                                               ; preds = %0
  %15 = zext i32 %12 to i64
  br label %16

16:                                               ; preds = %24, %14
  %17 = phi i64 [ %15, %14 ], [ %25, %24 ]
  %18 = getelementptr inbounds %struct.context, ptr %10, i64 %17
  %19 = load i8, ptr %18, align 8, !tbaa !17
  %20 = and i8 %19, 15
  %21 = zext i8 %20 to i32
  switch i32 %21, label %24 [
    i32 8, label %22
    i32 10, label %27
    i32 9, label %27
  ]

22:                                               ; preds = %16
  %23 = icmp sgt i8 %19, -1
  br i1 %23, label %27, label %24

24:                                               ; preds = %22, %16
  %25 = add nsw i64 %17, -1
  %26 = icmp sgt i64 %17, 0
  br i1 %26, label %16, label %30, !llvm.loop !18

27:                                               ; preds = %16, %16, %22
  %28 = trunc i64 %17 to i32
  %29 = icmp slt i32 %28, 0
  br i1 %29, label %30, label %41

30:                                               ; preds = %24, %0, %27
  %31 = load i8, ptr %10, align 8, !tbaa !17
  %32 = and i8 %31, 16
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %39, label %34

34:                                               ; preds = %30
  tail call void @Perl_dounwind(i32 noundef 0)
  %35 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !6
  %36 = load ptr, ptr %35, align 8, !tbaa !6
  %37 = load ptr, ptr @PL_stack_base, align 8, !tbaa !6
  %38 = getelementptr inbounds ptr, ptr %37, i64 1
  store ptr %36, ptr %38, align 8, !tbaa !6
  store ptr %38, ptr @PL_stack_sp, align 8, !tbaa !6
  br label %560

39:                                               ; preds = %30
  %40 = tail call ptr (ptr, ...) @Perl_die(ptr noundef nonnull @.str.29) #17
  br label %560

41:                                               ; preds = %27
  %42 = icmp sgt i32 %12, %28
  br i1 %42, label %43, label %47

43:                                               ; preds = %41
  tail call void @Perl_dounwind(i32 noundef %28)
  %44 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %45 = getelementptr inbounds %struct.stackinfo, ptr %44, i64 0, i32 1
  %46 = load ptr, ptr %45, align 8, !tbaa !14
  br label %47

47:                                               ; preds = %43, %41
  %48 = phi ptr [ %46, %43 ], [ %10, %41 ]
  %49 = phi ptr [ %44, %43 ], [ %8, %41 ]
  %50 = and i64 %17, 4294967295
  %51 = getelementptr inbounds %struct.context, ptr %48, i64 %50
  %52 = load i8, ptr %51, align 8, !tbaa !17
  %53 = and i8 %52, 16
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %65, label %55

55:                                               ; preds = %47
  %56 = getelementptr inbounds %struct.block, ptr %51, i64 0, i32 1
  %57 = load i8, ptr %56, align 1, !tbaa !17
  switch i8 %57, label %560 [
    i8 1, label %58
    i8 2, label %60
  ]

58:                                               ; preds = %55
  %59 = load ptr, ptr @PL_stack_base, align 8, !tbaa !6
  store ptr %59, ptr @PL_stack_sp, align 8, !tbaa !6
  br label %560

60:                                               ; preds = %55
  %61 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !6
  %62 = load ptr, ptr %61, align 8, !tbaa !6
  %63 = load ptr, ptr @PL_stack_base, align 8, !tbaa !6
  %64 = getelementptr inbounds ptr, ptr %63, i64 1
  store ptr %62, ptr %64, align 8, !tbaa !6
  store ptr %64, ptr @PL_stack_sp, align 8, !tbaa !6
  br label %560

65:                                               ; preds = %47
  %66 = getelementptr inbounds %struct.stackinfo, ptr %49, i64 0, i32 4
  %67 = load i32, ptr %66, align 8, !tbaa !16
  %68 = add nsw i32 %67, -1
  store i32 %68, ptr %66, align 8, !tbaa !16
  %69 = sext i32 %67 to i64
  %70 = getelementptr inbounds %struct.context, ptr %48, i64 %69
  %71 = load ptr, ptr @PL_stack_base, align 8, !tbaa !6
  %72 = getelementptr inbounds %struct.block, ptr %70, i64 0, i32 3
  %73 = load i32, ptr %72, align 4, !tbaa !17
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds ptr, ptr %71, i64 %74
  %76 = getelementptr inbounds %struct.block, ptr %70, i64 0, i32 4
  %77 = load ptr, ptr %76, align 8, !tbaa !17
  store ptr %77, ptr @PL_curcop, align 8, !tbaa !6
  %78 = load ptr, ptr @PL_markstack, align 8, !tbaa !6
  %79 = getelementptr inbounds %struct.block, ptr %70, i64 0, i32 5
  %80 = load i32, ptr %79, align 8, !tbaa !17
  %81 = sext i32 %80 to i64
  %82 = getelementptr inbounds i32, ptr %78, i64 %81
  store ptr %82, ptr @PL_markstack_ptr, align 8, !tbaa !6
  %83 = getelementptr inbounds %struct.block, ptr %70, i64 0, i32 6
  %84 = load i32, ptr %83, align 4, !tbaa !17
  store i32 %84, ptr @PL_scopestack_ix, align 4, !tbaa !31
  %85 = getelementptr inbounds %struct.block, ptr %70, i64 0, i32 7
  %86 = load ptr, ptr %85, align 8, !tbaa !17
  %87 = getelementptr inbounds %struct.block, ptr %70, i64 0, i32 1
  %88 = load i8, ptr %87, align 1, !tbaa !17
  %89 = zext i8 %88 to i32
  %90 = load i8, ptr %70, align 8, !tbaa !17
  %91 = and i8 %90, 15
  %92 = zext i8 %91 to i32
  switch i32 %92, label %270 [
    i32 8, label %275
    i32 10, label %93
    i32 9, label %227
  ]

93:                                               ; preds = %65
  %94 = load i8, ptr @PL_in_eval, align 1, !tbaa !17
  %95 = lshr i8 %94, 2
  %96 = and i8 %95, 1
  %97 = xor i8 %96, 1
  %98 = getelementptr inbounds %struct.block, ptr %70, i64 0, i32 2
  %99 = load i16, ptr %98, align 2, !tbaa !17
  %100 = trunc i16 %99 to i8
  %101 = and i8 %100, 127
  store i8 %101, ptr @PL_in_eval, align 1, !tbaa !17
  %102 = load i16, ptr %98, align 2, !tbaa !17
  %103 = getelementptr inbounds %struct.block, ptr %70, i64 0, i32 8
  %104 = getelementptr inbounds %struct.block, ptr %70, i64 0, i32 8, i32 0, i32 2
  %105 = load ptr, ptr %104, align 8, !tbaa !17
  store ptr %105, ptr @PL_eval_root, align 8, !tbaa !6
  %106 = getelementptr inbounds %struct.block, ptr %70, i64 0, i32 8, i32 0, i32 3
  %107 = load ptr, ptr %106, align 8, !tbaa !17
  %108 = icmp eq ptr %107, null
  br i1 %108, label %121, label %109

109:                                              ; preds = %93
  %110 = getelementptr inbounds %struct.sv, ptr %107, i64 0, i32 2
  %111 = load i32, ptr %110, align 4, !tbaa !49
  %112 = and i32 %111, 49152
  %113 = icmp eq i32 %112, 49152
  br i1 %113, label %114, label %121

114:                                              ; preds = %109
  %115 = getelementptr inbounds %struct.sv, ptr %107, i64 0, i32 1
  %116 = load i32, ptr %115, align 8, !tbaa !41
  %117 = icmp ugt i32 %116, 1
  br i1 %117, label %118, label %120

118:                                              ; preds = %114
  %119 = add i32 %116, -1
  store i32 %119, ptr %115, align 8, !tbaa !41
  br label %121

120:                                              ; preds = %114
  tail call void @Perl_sv_free2(ptr noundef nonnull %107, i32 noundef %116) #17
  br label %121

121:                                              ; preds = %120, %118, %109, %93
  %122 = getelementptr inbounds %struct.block, ptr %70, i64 0, i32 8, i32 0, i32 1
  %123 = load ptr, ptr %122, align 8, !tbaa !17
  %124 = icmp eq ptr %123, null
  br i1 %124, label %128, label %125

125:                                              ; preds = %121
  %126 = tail call ptr @Perl_sv_2mortal(ptr noundef nonnull %123) #17
  %127 = load ptr, ptr %122, align 8, !tbaa !17
  br label %128

128:                                              ; preds = %125, %121
  %129 = phi ptr [ %127, %125 ], [ null, %121 ]
  %130 = load ptr, ptr %103, align 8, !tbaa !17
  %131 = load i8, ptr %70, align 8, !tbaa !17
  %132 = and i8 %131, 79
  %133 = icmp ne i8 %132, 74
  %134 = and i16 %102, -128
  %135 = icmp eq i16 %134, -22144
  %136 = select i1 %133, i1 %135, i1 false
  br i1 %136, label %137, label %272

137:                                              ; preds = %128
  %138 = icmp eq ptr %7, %1
  br i1 %138, label %198, label %139

139:                                              ; preds = %137
  %140 = icmp eq i8 %88, 2
  br i1 %140, label %141, label %272

141:                                              ; preds = %139
  %142 = load ptr, ptr %1, align 8, !tbaa !6
  %143 = icmp eq ptr %142, null
  br i1 %143, label %198, label %144

144:                                              ; preds = %141
  %145 = getelementptr inbounds %struct.sv, ptr %142, i64 0, i32 2
  %146 = load i32, ptr %145, align 4, !tbaa !49
  %147 = and i32 %146, 2097152
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %151, label %149

149:                                              ; preds = %144
  %150 = tail call zeroext i1 @Perl_sv_2bool_flags(ptr noundef nonnull %142, i32 noundef 2) #17
  br i1 %150, label %272, label %198

151:                                              ; preds = %144
  %152 = and i32 %146, 65280
  %153 = icmp ne i32 %152, 0
  %154 = and i32 %146, 255
  %155 = icmp eq i32 %154, 8
  %156 = or i1 %153, %155
  %157 = and i32 %146, 16826623
  %158 = icmp eq i32 %157, 16777226
  %159 = or i1 %158, %156
  br i1 %159, label %160, label %198

160:                                              ; preds = %151
  %161 = and i32 %146, 1024
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %177, label %163

163:                                              ; preds = %160
  %164 = load ptr, ptr %142, align 8, !tbaa !72
  %165 = icmp eq ptr %164, null
  br i1 %165, label %198, label %166

166:                                              ; preds = %163
  %167 = getelementptr inbounds %struct.xpv, ptr %164, i64 0, i32 2
  %168 = load i64, ptr %167, align 8, !tbaa !53
  %169 = icmp ugt i64 %168, 1
  br i1 %169, label %272, label %170

170:                                              ; preds = %166
  %171 = icmp eq i64 %168, 0
  br i1 %171, label %198, label %172

172:                                              ; preds = %170
  %173 = getelementptr inbounds %struct.sv, ptr %142, i64 0, i32 3
  %174 = load ptr, ptr %173, align 8, !tbaa !17
  %175 = load i8, ptr %174, align 1, !tbaa !17
  %176 = icmp eq i8 %175, 48
  br i1 %176, label %198, label %272

177:                                              ; preds = %160
  %178 = and i32 %146, 768
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %196, label %180

180:                                              ; preds = %177
  %181 = and i32 %146, 256
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %188, label %183

183:                                              ; preds = %180
  %184 = load ptr, ptr %142, align 8, !tbaa !72
  %185 = getelementptr inbounds %struct.xpviv, ptr %184, i64 0, i32 4
  %186 = load i64, ptr %185, align 8, !tbaa !17
  %187 = icmp eq i64 %186, 0
  br i1 %187, label %188, label %272

188:                                              ; preds = %183, %180
  %189 = and i32 %146, 512
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %198, label %191

191:                                              ; preds = %188
  %192 = load ptr, ptr %142, align 8, !tbaa !72
  %193 = getelementptr inbounds %struct.xpvnv, ptr %192, i64 0, i32 5
  %194 = load double, ptr %193, align 8, !tbaa !17
  %195 = fcmp une double %194, 0.000000e+00
  br i1 %195, label %272, label %198

196:                                              ; preds = %177
  %197 = tail call zeroext i1 @Perl_sv_2bool_flags(ptr noundef nonnull %142, i32 noundef 0) #17
  br i1 %197, label %272, label %198

198:                                              ; preds = %191, %151, %141, %196, %188, %172, %170, %163, %149, %137
  %199 = load ptr, ptr @PL_incgv, align 8, !tbaa !6
  %200 = getelementptr inbounds %struct.gv, ptr %199, i64 0, i32 3
  %201 = load ptr, ptr %200, align 8, !tbaa !17
  %202 = getelementptr inbounds %struct.gp, ptr %201, i64 0, i32 5
  %203 = load ptr, ptr %202, align 8, !tbaa !155
  %204 = icmp eq ptr %203, null
  br i1 %204, label %205, label %211

205:                                              ; preds = %198
  %206 = tail call ptr @Perl_gv_add_by_type(ptr noundef nonnull %199, i32 noundef 12) #17
  %207 = getelementptr inbounds %struct.gv, ptr %206, i64 0, i32 3
  %208 = load ptr, ptr %207, align 8, !tbaa !17
  %209 = getelementptr inbounds %struct.gp, ptr %208, i64 0, i32 5
  %210 = load ptr, ptr %209, align 8, !tbaa !155
  br label %211

211:                                              ; preds = %198, %205
  %212 = phi ptr [ %210, %205 ], [ %203, %198 ]
  %213 = getelementptr inbounds %struct.sv, ptr %129, i64 0, i32 3
  %214 = load ptr, ptr %213, align 8, !tbaa !17
  %215 = getelementptr inbounds %struct.sv, ptr %129, i64 0, i32 2
  %216 = load i32, ptr %215, align 4, !tbaa !49
  %217 = and i32 %216, 536870912
  %218 = icmp eq i32 %217, 0
  %219 = load ptr, ptr %129, align 8, !tbaa !72
  %220 = getelementptr inbounds %struct.xpv, ptr %219, i64 0, i32 2
  %221 = load i64, ptr %220, align 8, !tbaa !53
  %222 = trunc i64 %221 to i32
  %223 = sub nsw i32 0, %222
  %224 = select i1 %218, i32 %222, i32 %223
  %225 = tail call ptr @Perl_hv_common_key_len(ptr noundef %212, ptr noundef %214, i32 noundef %224, i32 noundef 68, ptr noundef null, i32 noundef 0) #17
  %226 = tail call ptr (ptr, ...) @Perl_die(ptr noundef nonnull @.str.30, ptr noundef nonnull %129) #17
  br label %560

227:                                              ; preds = %65
  %228 = getelementptr inbounds %struct.block, ptr %70, i64 0, i32 8
  %229 = load ptr, ptr %228, align 8, !tbaa !17
  %230 = getelementptr inbounds %struct.block, ptr %70, i64 0, i32 2
  %231 = load i16, ptr %230, align 2, !tbaa !17
  %232 = and i16 %231, 256
  %233 = icmp eq i16 %232, 0
  br i1 %233, label %234, label %272

234:                                              ; preds = %227
  %235 = getelementptr inbounds %struct.block, ptr %70, i64 0, i32 8, i32 0, i32 1
  %236 = load ptr, ptr %235, align 8, !tbaa !17
  %237 = getelementptr inbounds %struct.block, ptr %70, i64 0, i32 8, i32 0, i32 3
  %238 = load ptr, ptr %237, align 8, !tbaa !17
  %239 = or i16 %231, 256
  store i16 %239, ptr %230, align 2, !tbaa !17
  tail call void @Perl_setdefout(ptr noundef %238) #17
  %240 = load i32, ptr @PL_savestack_ix, align 4, !tbaa !31
  %241 = load ptr, ptr @PL_scopestack, align 8, !tbaa !6
  %242 = load i32, ptr %83, align 4, !tbaa !17
  %243 = add nsw i32 %242, -1
  %244 = sext i32 %243 to i64
  %245 = getelementptr inbounds i32, ptr %241, i64 %244
  %246 = load i32, ptr %245, align 4, !tbaa !31
  %247 = icmp sgt i32 %240, %246
  br i1 %247, label %248, label %249

248:                                              ; preds = %234
  tail call void @Perl_leave_scope(i32 noundef %246) #17
  br label %249

249:                                              ; preds = %248, %234
  %250 = load ptr, ptr %236, align 8, !tbaa !133
  %251 = getelementptr inbounds %struct.xpvcv, ptr %250, i64 0, i32 13
  %252 = load i32, ptr %251, align 4, !tbaa !31
  %253 = add nsw i32 %252, -1
  store i32 %253, ptr %251, align 4, !tbaa !31
  %254 = icmp eq i32 %253, 0
  br i1 %254, label %255, label %263

255:                                              ; preds = %249
  %256 = load ptr, ptr %235, align 8, !tbaa !17
  %257 = getelementptr inbounds %struct.sv, ptr %256, i64 0, i32 1
  %258 = load i32, ptr %257, align 8, !tbaa !41
  %259 = icmp ugt i32 %258, 1
  br i1 %259, label %260, label %262

260:                                              ; preds = %255
  %261 = add i32 %258, -1
  store i32 %261, ptr %257, align 8, !tbaa !41
  br label %263

262:                                              ; preds = %255
  tail call void @Perl_sv_free2(ptr noundef nonnull %256, i32 noundef %258) #17
  br label %263

263:                                              ; preds = %262, %260, %249
  %264 = getelementptr inbounds %struct.sv, ptr %238, i64 0, i32 1
  %265 = load i32, ptr %264, align 8, !tbaa !41
  %266 = icmp ugt i32 %265, 1
  br i1 %266, label %267, label %269

267:                                              ; preds = %263
  %268 = add i32 %265, -1
  store i32 %268, ptr %264, align 8, !tbaa !41
  br label %272

269:                                              ; preds = %263
  tail call void @Perl_sv_free2(ptr noundef nonnull %238, i32 noundef %265) #17
  br label %272

270:                                              ; preds = %65
  %271 = tail call ptr (ptr, ...) @Perl_die(ptr noundef nonnull @.str.31, i32 noundef %92) #17
  br label %560

272:                                              ; preds = %227, %149, %166, %172, %183, %191, %196, %139, %128, %267, %269
  %273 = phi ptr [ %229, %269 ], [ %229, %267 ], [ %130, %128 ], [ %130, %139 ], [ %130, %196 ], [ %130, %191 ], [ %130, %183 ], [ %130, %172 ], [ %130, %166 ], [ %130, %149 ], [ %229, %227 ]
  %274 = phi i8 [ 0, %269 ], [ 0, %267 ], [ %97, %128 ], [ %97, %139 ], [ %97, %196 ], [ %97, %191 ], [ %97, %183 ], [ %97, %172 ], [ %97, %166 ], [ %97, %149 ], [ 0, %227 ]
  store i8 0, ptr @PL_tainted, align 1, !tbaa !26
  br label %286

275:                                              ; preds = %65
  %276 = getelementptr inbounds %struct.block, ptr %70, i64 0, i32 8
  %277 = getelementptr inbounds %struct.block, ptr %70, i64 0, i32 8, i32 0, i32 1
  %278 = load ptr, ptr %277, align 8, !tbaa !17
  %279 = load ptr, ptr %278, align 8, !tbaa !133
  %280 = getelementptr inbounds %struct.xpvcv, ptr %279, i64 0, i32 12
  %281 = load i32, ptr %280, align 4, !tbaa !135
  %282 = and i32 %281, 2
  %283 = icmp eq i32 %282, 0
  %284 = load ptr, ptr %276, align 8, !tbaa !17
  store i32 %67, ptr %66, align 8, !tbaa !16
  store i8 0, ptr @PL_tainted, align 1, !tbaa !26
  br i1 %283, label %286, label %285

285:                                              ; preds = %275
  tail call fastcc void @S_return_lvalues(ptr noundef %7, ptr noundef %1, ptr noundef %75, i32 noundef %89, ptr noundef nonnull %70, ptr noundef %86)
  br label %404

286:                                              ; preds = %272, %275
  %287 = phi i1 [ false, %272 ], [ true, %275 ]
  %288 = phi i8 [ %274, %272 ], [ 0, %275 ]
  %289 = phi ptr [ %273, %272 ], [ %284, %275 ]
  switch i8 %88, label %402 [
    i8 2, label %316
    i8 3, label %290
  ]

290:                                              ; preds = %286
  %291 = getelementptr inbounds ptr, ptr %7, i64 1
  %292 = icmp ugt ptr %291, %1
  br i1 %292, label %402, label %293

293:                                              ; preds = %290
  br i1 %287, label %294, label %392

294:                                              ; preds = %293, %311
  %295 = phi ptr [ %314, %311 ], [ %291, %293 ]
  %296 = phi ptr [ %313, %311 ], [ %75, %293 ]
  %297 = load ptr, ptr %295, align 8, !tbaa !6
  %298 = getelementptr inbounds %struct.sv, ptr %297, i64 0, i32 2
  %299 = load i32, ptr %298, align 4, !tbaa !49
  %300 = and i32 %299, 524288
  %301 = icmp eq i32 %300, 0
  br i1 %301, label %309, label %302

302:                                              ; preds = %294
  %303 = getelementptr inbounds %struct.sv, ptr %297, i64 0, i32 1
  %304 = load i32, ptr %303, align 8, !tbaa !41
  %305 = icmp eq i32 %304, 1
  %306 = and i32 %299, 2097152
  %307 = icmp eq i32 %306, 0
  %308 = and i1 %307, %305
  br i1 %308, label %311, label %309

309:                                              ; preds = %302, %294
  %310 = tail call ptr @Perl_sv_mortalcopy_flags(ptr noundef nonnull %297, i32 noundef 1538) #17
  br label %311

311:                                              ; preds = %309, %302
  %312 = phi ptr [ %310, %309 ], [ %297, %302 ]
  %313 = getelementptr inbounds ptr, ptr %296, i64 1
  store ptr %312, ptr %313, align 8, !tbaa !6
  store i8 0, ptr @PL_tainted, align 1, !tbaa !26
  %314 = getelementptr inbounds ptr, ptr %295, i64 1
  %315 = icmp ugt ptr %314, %1
  br i1 %315, label %402, label %294, !llvm.loop !175

316:                                              ; preds = %286
  %317 = icmp ult ptr %7, %1
  br i1 %317, label %318, label %390

318:                                              ; preds = %316
  br i1 %287, label %319, label %386

319:                                              ; preds = %318
  %320 = getelementptr inbounds %struct.block, ptr %70, i64 0, i32 8, i32 0, i32 1
  %321 = load ptr, ptr %320, align 8, !tbaa !17
  %322 = icmp eq ptr %321, null
  br i1 %322, label %323, label %325

323:                                              ; preds = %319
  %324 = load ptr, ptr %1, align 8, !tbaa !6
  br label %368

325:                                              ; preds = %319
  %326 = load ptr, ptr %321, align 8, !tbaa !133
  %327 = getelementptr inbounds %struct.xpvcv, ptr %326, i64 0, i32 13
  %328 = load i32, ptr %327, align 4, !tbaa !31
  %329 = icmp sgt i32 %328, 1
  %330 = load ptr, ptr %1, align 8, !tbaa !6
  br i1 %329, label %331, label %368

331:                                              ; preds = %325
  %332 = getelementptr inbounds %struct.sv, ptr %330, i64 0, i32 2
  %333 = load i32, ptr %332, align 4, !tbaa !49
  %334 = and i32 %333, 524288
  %335 = icmp eq i32 %334, 0
  %336 = getelementptr inbounds %struct.sv, ptr %330, i64 0, i32 1
  %337 = load i32, ptr %336, align 8, !tbaa !41
  br i1 %335, label %353, label %338

338:                                              ; preds = %331
  %339 = icmp eq i32 %337, 1
  %340 = and i32 %333, 14680064
  %341 = icmp eq i32 %340, 0
  %342 = and i1 %341, %339
  br i1 %342, label %343, label %353

343:                                              ; preds = %338
  store i32 2, ptr %336, align 8, !tbaa !41
  %344 = getelementptr inbounds ptr, ptr %75, i64 1
  store ptr %330, ptr %344, align 8, !tbaa !6
  %345 = load i64, ptr @PL_tmps_ix, align 8, !tbaa !59
  %346 = load i64, ptr @PL_tmps_floor, align 8, !tbaa !59
  %347 = icmp sgt i64 %345, %346
  br i1 %347, label %348, label %350

348:                                              ; preds = %343
  tail call void @Perl_free_tmps() #17
  %349 = load ptr, ptr %344, align 8, !tbaa !6
  br label %350

350:                                              ; preds = %348, %343
  %351 = phi ptr [ %349, %348 ], [ %330, %343 ]
  %352 = tail call ptr @Perl_sv_2mortal(ptr noundef %351) #17
  br label %400

353:                                              ; preds = %331, %338
  %354 = getelementptr inbounds %struct.sv, ptr %330, i64 0, i32 1
  %355 = add i32 %337, 1
  store i32 %355, ptr %354, align 8, !tbaa !41
  %356 = load i64, ptr @PL_tmps_ix, align 8, !tbaa !59
  %357 = load i64, ptr @PL_tmps_floor, align 8, !tbaa !59
  %358 = icmp sgt i64 %356, %357
  br i1 %358, label %359, label %360

359:                                              ; preds = %353
  tail call void @Perl_free_tmps() #17
  br label %360

360:                                              ; preds = %353, %359
  %361 = tail call ptr @Perl_sv_mortalcopy_flags(ptr noundef nonnull %330, i32 noundef 1538) #17
  %362 = getelementptr inbounds ptr, ptr %75, i64 1
  store ptr %361, ptr %362, align 8, !tbaa !6
  %363 = load i32, ptr %354, align 8, !tbaa !41
  %364 = icmp ugt i32 %363, 1
  br i1 %364, label %365, label %367

365:                                              ; preds = %360
  %366 = add i32 %363, -1
  store i32 %366, ptr %354, align 8, !tbaa !41
  br label %400

367:                                              ; preds = %360
  tail call void @Perl_sv_free2(ptr noundef nonnull %330, i32 noundef %363) #17
  br label %400

368:                                              ; preds = %323, %325
  %369 = phi ptr [ %324, %323 ], [ %330, %325 ]
  %370 = getelementptr inbounds %struct.sv, ptr %369, i64 0, i32 2
  %371 = load i32, ptr %370, align 4, !tbaa !49
  %372 = and i32 %371, 524288
  %373 = icmp eq i32 %372, 0
  br i1 %373, label %383, label %374

374:                                              ; preds = %368
  %375 = getelementptr inbounds %struct.sv, ptr %369, i64 0, i32 1
  %376 = load i32, ptr %375, align 8, !tbaa !41
  %377 = icmp eq i32 %376, 1
  %378 = and i32 %371, 14680064
  %379 = icmp eq i32 %378, 0
  %380 = and i1 %379, %377
  br i1 %380, label %381, label %383

381:                                              ; preds = %374
  %382 = getelementptr inbounds ptr, ptr %75, i64 1
  store ptr %369, ptr %382, align 8, !tbaa !6
  br label %400

383:                                              ; preds = %374, %368
  %384 = tail call ptr @Perl_sv_mortalcopy_flags(ptr noundef nonnull %369, i32 noundef 1538) #17
  %385 = getelementptr inbounds ptr, ptr %75, i64 1
  store ptr %384, ptr %385, align 8, !tbaa !6
  br label %400

386:                                              ; preds = %318
  %387 = load ptr, ptr %1, align 8, !tbaa !6
  %388 = tail call ptr @Perl_sv_mortalcopy_flags(ptr noundef %387, i32 noundef 1538) #17
  %389 = getelementptr inbounds ptr, ptr %75, i64 1
  store ptr %388, ptr %389, align 8, !tbaa !6
  store ptr %389, ptr @PL_stack_sp, align 8, !tbaa !6
  tail call void @Perl_pop_scope() #17
  br label %517

390:                                              ; preds = %316
  %391 = getelementptr inbounds ptr, ptr %75, i64 1
  store ptr @PL_sv_undef, ptr %391, align 8, !tbaa !6
  br label %402

392:                                              ; preds = %293, %392
  %393 = phi ptr [ %398, %392 ], [ %291, %293 ]
  %394 = phi ptr [ %397, %392 ], [ %75, %293 ]
  %395 = load ptr, ptr %393, align 8, !tbaa !6
  %396 = tail call ptr @Perl_sv_mortalcopy_flags(ptr noundef %395, i32 noundef 1538) #17
  %397 = getelementptr inbounds ptr, ptr %394, i64 1
  store ptr %396, ptr %397, align 8, !tbaa !6
  store i8 0, ptr @PL_tainted, align 1, !tbaa !26
  %398 = getelementptr inbounds ptr, ptr %393, i64 1
  %399 = icmp ugt ptr %398, %1
  br i1 %399, label %402, label %392, !llvm.loop !175

400:                                              ; preds = %381, %383, %350, %365, %367
  %401 = phi ptr [ %362, %367 ], [ %362, %365 ], [ %382, %381 ], [ %385, %383 ], [ %344, %350 ]
  store ptr %401, ptr @PL_stack_sp, align 8, !tbaa !6
  br label %404

402:                                              ; preds = %392, %311, %290, %390, %286
  %403 = phi ptr [ %391, %390 ], [ %75, %286 ], [ %75, %290 ], [ %313, %311 ], [ %397, %392 ]
  store ptr %403, ptr @PL_stack_sp, align 8, !tbaa !6
  tail call void @Perl_pop_scope() #17
  br i1 %287, label %407, label %517

404:                                              ; preds = %285, %400
  %405 = phi ptr [ %289, %400 ], [ %284, %285 ]
  %406 = phi i8 [ %288, %400 ], [ 0, %285 ]
  tail call void @Perl_pop_scope() #17
  br label %407

407:                                              ; preds = %404, %402
  %408 = phi ptr [ %289, %402 ], [ %405, %404 ]
  %409 = phi i8 [ %288, %402 ], [ %406, %404 ]
  %410 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %411 = getelementptr inbounds %struct.stackinfo, ptr %410, i64 0, i32 4
  %412 = load i32, ptr %411, align 8, !tbaa !16
  %413 = add nsw i32 %412, -1
  store i32 %413, ptr %411, align 8, !tbaa !16
  %414 = getelementptr inbounds %struct.block, ptr %70, i64 0, i32 8, i32 0, i32 4
  %415 = load i32, ptr %414, align 8, !tbaa !17
  %416 = getelementptr inbounds %struct.block, ptr %70, i64 0, i32 2
  %417 = load i16, ptr %416, align 2, !tbaa !17
  %418 = and i16 %417, 256
  %419 = icmp eq i16 %418, 0
  br i1 %419, label %420, label %499

420:                                              ; preds = %407
  %421 = or i16 %417, 256
  store i16 %421, ptr %416, align 2, !tbaa !17
  %422 = load i8, ptr %70, align 8, !tbaa !17
  %423 = and i8 %422, 32
  %424 = icmp eq i8 %423, 0
  br i1 %424, label %499, label %425

425:                                              ; preds = %420
  %426 = load ptr, ptr @PL_defgv, align 8, !tbaa !6
  %427 = getelementptr inbounds %struct.gv, ptr %426, i64 0, i32 3
  %428 = load ptr, ptr %427, align 8, !tbaa !17
  %429 = getelementptr inbounds %struct.gp, ptr %428, i64 0, i32 6
  %430 = load ptr, ptr %429, align 8, !tbaa !138
  %431 = icmp eq ptr %430, null
  br i1 %431, label %440, label %432

432:                                              ; preds = %425
  %433 = getelementptr inbounds %struct.sv, ptr %430, i64 0, i32 1
  %434 = load i32, ptr %433, align 8, !tbaa !41
  %435 = icmp ugt i32 %434, 1
  br i1 %435, label %436, label %438

436:                                              ; preds = %432
  %437 = add i32 %434, -1
  store i32 %437, ptr %433, align 8, !tbaa !41
  br label %440

438:                                              ; preds = %432
  tail call void @Perl_sv_free2(ptr noundef nonnull %430, i32 noundef %434) #17
  %439 = load ptr, ptr @PL_defgv, align 8, !tbaa !6
  br label %440

440:                                              ; preds = %425, %436, %438
  %441 = phi ptr [ %426, %425 ], [ %426, %436 ], [ %439, %438 ]
  %442 = getelementptr inbounds %struct.block, ptr %70, i64 0, i32 8, i32 0, i32 2
  %443 = load ptr, ptr %442, align 8, !tbaa !17
  %444 = getelementptr inbounds %struct.gv, ptr %441, i64 0, i32 3
  %445 = load ptr, ptr %444, align 8, !tbaa !17
  %446 = getelementptr inbounds %struct.gp, ptr %445, i64 0, i32 6
  store ptr %443, ptr %446, align 8, !tbaa !138
  %447 = getelementptr inbounds %struct.block, ptr %70, i64 0, i32 8, i32 0, i32 3
  %448 = load ptr, ptr %447, align 8, !tbaa !17
  %449 = getelementptr inbounds %struct.av, ptr %448, i64 0, i32 2
  %450 = load i32, ptr %449, align 4, !tbaa !139
  %451 = and i32 %450, 1073741824
  %452 = icmp eq i32 %451, 0
  br i1 %452, label %478, label %453

453:                                              ; preds = %440
  %454 = load ptr, ptr %448, align 8, !tbaa !141
  %455 = getelementptr inbounds %struct.xpvav, ptr %454, i64 0, i32 2
  %456 = load i64, ptr %455, align 8, !tbaa !142
  %457 = getelementptr inbounds %struct.sv, ptr %448, i64 0, i32 1
  %458 = load i32, ptr %457, align 8, !tbaa !41
  %459 = icmp ugt i32 %458, 1
  br i1 %459, label %460, label %462

460:                                              ; preds = %453
  %461 = add i32 %458, -1
  store i32 %461, ptr %457, align 8, !tbaa !41
  br label %463

462:                                              ; preds = %453
  tail call void @Perl_sv_free2(ptr noundef nonnull %448, i32 noundef %458) #17
  br label %463

463:                                              ; preds = %460, %462
  %464 = tail call ptr @Perl_newSV_type(i32 noundef 11) #17
  store ptr %464, ptr %447, align 8, !tbaa !17
  tail call void @Perl_av_extend(ptr noundef %464, i64 noundef %456) #17
  %465 = load ptr, ptr %447, align 8, !tbaa !17
  %466 = getelementptr inbounds %struct.av, ptr %465, i64 0, i32 2
  %467 = load i32, ptr %466, align 4, !tbaa !139
  %468 = and i32 %467, -1073741825
  store i32 %468, ptr %466, align 4, !tbaa !139
  %469 = load ptr, ptr %447, align 8, !tbaa !17
  %470 = getelementptr inbounds %struct.av, ptr %469, i64 0, i32 2
  %471 = load i32, ptr %470, align 4, !tbaa !139
  %472 = or i32 %471, -2147483648
  store i32 %472, ptr %470, align 4, !tbaa !139
  %473 = load ptr, ptr %447, align 8, !tbaa !17
  %474 = getelementptr inbounds %struct.block, ptr %70, i64 0, i32 8, i32 0, i32 5
  %475 = load ptr, ptr %474, align 8, !tbaa !17
  %476 = getelementptr inbounds %struct.av, ptr %475, i64 0, i32 3
  %477 = load ptr, ptr %476, align 8, !tbaa !17
  store ptr %473, ptr %477, align 8, !tbaa !6
  br label %499

478:                                              ; preds = %440
  %479 = getelementptr inbounds %struct.av, ptr %448, i64 0, i32 3
  %480 = load ptr, ptr %479, align 8, !tbaa !17
  %481 = load ptr, ptr %448, align 8, !tbaa !141
  %482 = getelementptr inbounds %struct.xpvav, ptr %481, i64 0, i32 4
  %483 = load ptr, ptr %482, align 8, !tbaa !144
  %484 = ptrtoint ptr %480 to i64
  %485 = ptrtoint ptr %483 to i64
  %486 = sub i64 %484, %485
  %487 = ashr exact i64 %486, 3
  %488 = getelementptr inbounds %struct.xpvav, ptr %481, i64 0, i32 3
  %489 = load i64, ptr %488, align 8, !tbaa !145
  %490 = add nsw i64 %487, %489
  store i64 %490, ptr %488, align 8, !tbaa !145
  %491 = load ptr, ptr %447, align 8, !tbaa !17
  %492 = load ptr, ptr %491, align 8, !tbaa !141
  %493 = getelementptr inbounds %struct.xpvav, ptr %492, i64 0, i32 4
  %494 = load ptr, ptr %493, align 8, !tbaa !144
  %495 = getelementptr inbounds %struct.av, ptr %491, i64 0, i32 3
  store ptr %494, ptr %495, align 8, !tbaa !17
  %496 = load ptr, ptr %447, align 8, !tbaa !17
  %497 = load ptr, ptr %496, align 8, !tbaa !141
  %498 = getelementptr inbounds %struct.xpvav, ptr %497, i64 0, i32 2
  store i64 -1, ptr %498, align 8, !tbaa !142
  br label %499

499:                                              ; preds = %420, %478, %463, %407
  %500 = getelementptr inbounds %struct.block, ptr %70, i64 0, i32 8, i32 0, i32 1
  %501 = load ptr, ptr %500, align 8, !tbaa !17
  %502 = load i32, ptr @PL_savestack_ix, align 4, !tbaa !31
  %503 = load ptr, ptr @PL_scopestack, align 8, !tbaa !6
  %504 = load i32, ptr %83, align 4, !tbaa !17
  %505 = add nsw i32 %504, -1
  %506 = sext i32 %505 to i64
  %507 = getelementptr inbounds i32, ptr %503, i64 %506
  %508 = load i32, ptr %507, align 4, !tbaa !31
  %509 = icmp sgt i32 %502, %508
  br i1 %509, label %510, label %511

510:                                              ; preds = %499
  tail call void @Perl_leave_scope(i32 noundef %508) #17
  br label %511

511:                                              ; preds = %510, %499
  %512 = icmp eq ptr %501, null
  br i1 %512, label %517, label %513

513:                                              ; preds = %511
  %514 = load ptr, ptr %501, align 8, !tbaa !133
  %515 = getelementptr inbounds %struct.xpvcv, ptr %514, i64 0, i32 13
  store i32 %415, ptr %515, align 4, !tbaa !31
  %516 = icmp eq i32 %415, 0
  br i1 %516, label %520, label %517

517:                                              ; preds = %511, %513, %402, %386
  %518 = phi ptr [ %289, %386 ], [ %289, %402 ], [ %408, %513 ], [ %408, %511 ]
  %519 = phi i8 [ %288, %386 ], [ %288, %402 ], [ %409, %513 ], [ %409, %511 ]
  store ptr %86, ptr @PL_curpm, align 8, !tbaa !6
  br label %527

520:                                              ; preds = %513
  store ptr %86, ptr @PL_curpm, align 8, !tbaa !6
  %521 = getelementptr inbounds %struct.sv, ptr %501, i64 0, i32 1
  %522 = load i32, ptr %521, align 8, !tbaa !41
  %523 = icmp ugt i32 %522, 1
  br i1 %523, label %524, label %526

524:                                              ; preds = %520
  %525 = add i32 %522, -1
  store i32 %525, ptr %521, align 8, !tbaa !41
  br label %527

526:                                              ; preds = %520
  tail call void @Perl_sv_free2(ptr noundef nonnull %501, i32 noundef %522) #17
  br label %527

527:                                              ; preds = %517, %524, %526
  %528 = phi i8 [ %519, %517 ], [ %409, %524 ], [ %409, %526 ]
  %529 = phi ptr [ %518, %517 ], [ %408, %524 ], [ %408, %526 ]
  %530 = and i8 %528, 1
  %531 = icmp eq i8 %530, 0
  br i1 %531, label %560, label %532

532:                                              ; preds = %527
  %533 = load ptr, ptr @PL_errgv, align 8, !tbaa !6
  %534 = getelementptr inbounds %struct.gv, ptr %533, i64 0, i32 3
  %535 = load ptr, ptr %534, align 8, !tbaa !17
  %536 = load ptr, ptr %535, align 8, !tbaa !6
  %537 = icmp eq ptr %536, null
  br i1 %537, label %550, label %538

538:                                              ; preds = %532
  %539 = getelementptr inbounds %struct.sv, ptr %536, i64 0, i32 2
  %540 = load i32, ptr %539, align 4, !tbaa !49
  %541 = and i32 %540, 134283264
  %542 = icmp eq i32 %541, 0
  br i1 %542, label %552, label %543

543:                                              ; preds = %538
  %544 = getelementptr inbounds %struct.sv, ptr %536, i64 0, i32 1
  %545 = load i32, ptr %544, align 8, !tbaa !41
  %546 = icmp ugt i32 %545, 1
  br i1 %546, label %547, label %549

547:                                              ; preds = %543
  %548 = add i32 %545, -1
  store i32 %548, ptr %544, align 8, !tbaa !41
  br label %550

549:                                              ; preds = %543
  tail call void @Perl_sv_free2(ptr noundef nonnull %536, i32 noundef %545) #17
  br label %550

550:                                              ; preds = %549, %547, %532
  %551 = tail call ptr @Perl_newSVpvn(ptr noundef nonnull @.str.10, i64 noundef 0) #17
  store ptr %551, ptr %535, align 8, !tbaa !6
  br label %560

552:                                              ; preds = %538
  tail call void @Perl_sv_setpvn(ptr noundef nonnull %536, ptr noundef nonnull @.str.10, i64 noundef 0) #17
  %553 = load i32, ptr %539, align 4, !tbaa !49
  %554 = and i32 %553, 1610547455
  %555 = or i32 %554, 17408
  store i32 %555, ptr %539, align 4, !tbaa !49
  %556 = and i32 %553, 14680064
  %557 = icmp eq i32 %556, 0
  br i1 %557, label %560, label %558

558:                                              ; preds = %552
  %559 = tail call i32 @Perl_mg_free(ptr noundef nonnull %536) #17
  br label %560

560:                                              ; preds = %527, %552, %558, %550, %58, %60, %55, %270, %211, %39, %34
  %561 = phi ptr [ null, %34 ], [ %40, %39 ], [ %271, %270 ], [ %226, %211 ], [ null, %55 ], [ null, %60 ], [ null, %58 ], [ %529, %550 ], [ %529, %558 ], [ %529, %552 ], [ %529, %527 ]
  ret ptr %561
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @S_return_lvalues(ptr noundef readonly %0, ptr noundef %1, ptr noundef %2, i32 noundef %3, ptr nocapture noundef %4, ptr noundef %5) unnamed_addr #0 {
  %7 = getelementptr inbounds %struct.block, ptr %4, i64 0, i32 2
  %8 = load i16, ptr %7, align 2, !tbaa !17
  %9 = and i16 %8, 255
  %10 = and i16 %8, 1
  %11 = icmp ne i16 %10, 0
  switch i32 %3, label %436 [
    i32 2, label %12
    i32 3, label %257
  ]

12:                                               ; preds = %6
  %13 = icmp eq i16 %9, 0
  %14 = or i1 %13, %11
  %15 = icmp ult ptr %0, %1
  br i1 %14, label %150, label %16

16:                                               ; preds = %12
  br i1 %15, label %17, label %32

17:                                               ; preds = %16
  %18 = load ptr, ptr %1, align 8, !tbaa !6
  %19 = getelementptr inbounds %struct.sv, ptr %18, i64 0, i32 2
  %20 = load i32, ptr %19, align 4, !tbaa !49
  %21 = and i32 %20, 134414336
  %22 = icmp ne i32 %21, 0
  %23 = and i32 %20, 4194304
  %24 = icmp eq i32 %23, 0
  %25 = and i1 %22, %24
  br i1 %25, label %26, label %151

26:                                               ; preds = %17
  %27 = and i32 %20, 134283264
  %28 = icmp eq i32 %27, 0
  %29 = icmp eq ptr %18, @PL_sv_undef
  %30 = select i1 %29, ptr @.str.32, ptr @.str.33
  %31 = select i1 %28, ptr @.str.34, ptr %30
  br label %32

32:                                               ; preds = %16, %26
  %33 = phi ptr [ %31, %26 ], [ @.str.32, %16 ]
  tail call void @Perl_pop_scope() #17
  %34 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %35 = getelementptr inbounds %struct.stackinfo, ptr %34, i64 0, i32 4
  %36 = load i32, ptr %35, align 8, !tbaa !16
  %37 = add nsw i32 %36, -1
  store i32 %37, ptr %35, align 8, !tbaa !16
  %38 = getelementptr inbounds %struct.block, ptr %4, i64 0, i32 8, i32 0, i32 4
  %39 = load i32, ptr %38, align 8, !tbaa !17
  %40 = load i16, ptr %7, align 2, !tbaa !17
  %41 = and i16 %40, 256
  %42 = icmp eq i16 %41, 0
  br i1 %42, label %43, label %122

43:                                               ; preds = %32
  %44 = or i16 %40, 256
  store i16 %44, ptr %7, align 2, !tbaa !17
  %45 = load i8, ptr %4, align 8, !tbaa !17
  %46 = and i8 %45, 32
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %122, label %48

48:                                               ; preds = %43
  %49 = load ptr, ptr @PL_defgv, align 8, !tbaa !6
  %50 = getelementptr inbounds %struct.gv, ptr %49, i64 0, i32 3
  %51 = load ptr, ptr %50, align 8, !tbaa !17
  %52 = getelementptr inbounds %struct.gp, ptr %51, i64 0, i32 6
  %53 = load ptr, ptr %52, align 8, !tbaa !138
  %54 = icmp eq ptr %53, null
  br i1 %54, label %63, label %55

55:                                               ; preds = %48
  %56 = getelementptr inbounds %struct.sv, ptr %53, i64 0, i32 1
  %57 = load i32, ptr %56, align 8, !tbaa !41
  %58 = icmp ugt i32 %57, 1
  br i1 %58, label %59, label %61

59:                                               ; preds = %55
  %60 = add i32 %57, -1
  store i32 %60, ptr %56, align 8, !tbaa !41
  br label %63

61:                                               ; preds = %55
  tail call void @Perl_sv_free2(ptr noundef nonnull %53, i32 noundef %57) #17
  %62 = load ptr, ptr @PL_defgv, align 8, !tbaa !6
  br label %63

63:                                               ; preds = %48, %59, %61
  %64 = phi ptr [ %49, %48 ], [ %49, %59 ], [ %62, %61 ]
  %65 = getelementptr inbounds %struct.block, ptr %4, i64 0, i32 8, i32 0, i32 2
  %66 = load ptr, ptr %65, align 8, !tbaa !17
  %67 = getelementptr inbounds %struct.gv, ptr %64, i64 0, i32 3
  %68 = load ptr, ptr %67, align 8, !tbaa !17
  %69 = getelementptr inbounds %struct.gp, ptr %68, i64 0, i32 6
  store ptr %66, ptr %69, align 8, !tbaa !138
  %70 = getelementptr inbounds %struct.block, ptr %4, i64 0, i32 8, i32 0, i32 3
  %71 = load ptr, ptr %70, align 8, !tbaa !17
  %72 = getelementptr inbounds %struct.av, ptr %71, i64 0, i32 2
  %73 = load i32, ptr %72, align 4, !tbaa !139
  %74 = and i32 %73, 1073741824
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %101, label %76

76:                                               ; preds = %63
  %77 = load ptr, ptr %71, align 8, !tbaa !141
  %78 = getelementptr inbounds %struct.xpvav, ptr %77, i64 0, i32 2
  %79 = load i64, ptr %78, align 8, !tbaa !142
  %80 = getelementptr inbounds %struct.sv, ptr %71, i64 0, i32 1
  %81 = load i32, ptr %80, align 8, !tbaa !41
  %82 = icmp ugt i32 %81, 1
  br i1 %82, label %83, label %85

83:                                               ; preds = %76
  %84 = add i32 %81, -1
  store i32 %84, ptr %80, align 8, !tbaa !41
  br label %86

85:                                               ; preds = %76
  tail call void @Perl_sv_free2(ptr noundef nonnull %71, i32 noundef %81) #17
  br label %86

86:                                               ; preds = %83, %85
  %87 = tail call ptr @Perl_newSV_type(i32 noundef 11) #17
  store ptr %87, ptr %70, align 8, !tbaa !17
  tail call void @Perl_av_extend(ptr noundef %87, i64 noundef %79) #17
  %88 = load ptr, ptr %70, align 8, !tbaa !17
  %89 = getelementptr inbounds %struct.av, ptr %88, i64 0, i32 2
  %90 = load i32, ptr %89, align 4, !tbaa !139
  %91 = and i32 %90, -1073741825
  store i32 %91, ptr %89, align 4, !tbaa !139
  %92 = load ptr, ptr %70, align 8, !tbaa !17
  %93 = getelementptr inbounds %struct.av, ptr %92, i64 0, i32 2
  %94 = load i32, ptr %93, align 4, !tbaa !139
  %95 = or i32 %94, -2147483648
  store i32 %95, ptr %93, align 4, !tbaa !139
  %96 = load ptr, ptr %70, align 8, !tbaa !17
  %97 = getelementptr inbounds %struct.block, ptr %4, i64 0, i32 8, i32 0, i32 5
  %98 = load ptr, ptr %97, align 8, !tbaa !17
  %99 = getelementptr inbounds %struct.av, ptr %98, i64 0, i32 3
  %100 = load ptr, ptr %99, align 8, !tbaa !17
  store ptr %96, ptr %100, align 8, !tbaa !6
  br label %122

101:                                              ; preds = %63
  %102 = getelementptr inbounds %struct.av, ptr %71, i64 0, i32 3
  %103 = load ptr, ptr %102, align 8, !tbaa !17
  %104 = load ptr, ptr %71, align 8, !tbaa !141
  %105 = getelementptr inbounds %struct.xpvav, ptr %104, i64 0, i32 4
  %106 = load ptr, ptr %105, align 8, !tbaa !144
  %107 = ptrtoint ptr %103 to i64
  %108 = ptrtoint ptr %106 to i64
  %109 = sub i64 %107, %108
  %110 = ashr exact i64 %109, 3
  %111 = getelementptr inbounds %struct.xpvav, ptr %104, i64 0, i32 3
  %112 = load i64, ptr %111, align 8, !tbaa !145
  %113 = add nsw i64 %110, %112
  store i64 %113, ptr %111, align 8, !tbaa !145
  %114 = load ptr, ptr %70, align 8, !tbaa !17
  %115 = load ptr, ptr %114, align 8, !tbaa !141
  %116 = getelementptr inbounds %struct.xpvav, ptr %115, i64 0, i32 4
  %117 = load ptr, ptr %116, align 8, !tbaa !144
  %118 = getelementptr inbounds %struct.av, ptr %114, i64 0, i32 3
  store ptr %117, ptr %118, align 8, !tbaa !17
  %119 = load ptr, ptr %70, align 8, !tbaa !17
  %120 = load ptr, ptr %119, align 8, !tbaa !141
  %121 = getelementptr inbounds %struct.xpvav, ptr %120, i64 0, i32 2
  store i64 -1, ptr %121, align 8, !tbaa !142
  br label %122

122:                                              ; preds = %43, %101, %86, %32
  %123 = getelementptr inbounds %struct.block, ptr %4, i64 0, i32 8, i32 0, i32 1
  %124 = load ptr, ptr %123, align 8, !tbaa !17
  %125 = load i32, ptr @PL_savestack_ix, align 4, !tbaa !31
  %126 = load ptr, ptr @PL_scopestack, align 8, !tbaa !6
  %127 = getelementptr inbounds %struct.block, ptr %4, i64 0, i32 6
  %128 = load i32, ptr %127, align 4, !tbaa !17
  %129 = add nsw i32 %128, -1
  %130 = sext i32 %129 to i64
  %131 = getelementptr inbounds i32, ptr %126, i64 %130
  %132 = load i32, ptr %131, align 4, !tbaa !31
  %133 = icmp sgt i32 %125, %132
  br i1 %133, label %134, label %135

134:                                              ; preds = %122
  tail call void @Perl_leave_scope(i32 noundef %132) #17
  br label %135

135:                                              ; preds = %134, %122
  %136 = icmp eq ptr %124, null
  br i1 %136, label %141, label %137

137:                                              ; preds = %135
  %138 = load ptr, ptr %124, align 8, !tbaa !133
  %139 = getelementptr inbounds %struct.xpvcv, ptr %138, i64 0, i32 13
  store i32 %39, ptr %139, align 4, !tbaa !31
  %140 = icmp eq i32 %39, 0
  br i1 %140, label %142, label %141

141:                                              ; preds = %135, %137
  store ptr %5, ptr @PL_curpm, align 8, !tbaa !6
  br label %149

142:                                              ; preds = %137
  store ptr %5, ptr @PL_curpm, align 8, !tbaa !6
  %143 = getelementptr inbounds %struct.sv, ptr %124, i64 0, i32 1
  %144 = load i32, ptr %143, align 8, !tbaa !41
  %145 = icmp ugt i32 %144, 1
  br i1 %145, label %146, label %148

146:                                              ; preds = %142
  %147 = add i32 %144, -1
  store i32 %147, ptr %143, align 8, !tbaa !41
  br label %149

148:                                              ; preds = %142
  tail call void @Perl_sv_free2(ptr noundef nonnull %124, i32 noundef %144) #17
  br label %149

149:                                              ; preds = %148, %146, %141
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.35, ptr noundef %33) #17
  br i1 %15, label %151, label %213

150:                                              ; preds = %12
  br i1 %15, label %151, label %213

151:                                              ; preds = %17, %149, %150
  %152 = getelementptr inbounds %struct.block, ptr %4, i64 0, i32 8, i32 0, i32 1
  %153 = load ptr, ptr %152, align 8, !tbaa !17
  %154 = icmp eq ptr %153, null
  br i1 %154, label %155, label %157

155:                                              ; preds = %151
  %156 = load ptr, ptr %1, align 8, !tbaa !6
  br label %194

157:                                              ; preds = %151
  %158 = load ptr, ptr %153, align 8, !tbaa !133
  %159 = getelementptr inbounds %struct.xpvcv, ptr %158, i64 0, i32 13
  %160 = load i32, ptr %159, align 4, !tbaa !31
  %161 = icmp sgt i32 %160, 1
  %162 = load ptr, ptr %1, align 8, !tbaa !6
  br i1 %161, label %163, label %194

163:                                              ; preds = %157
  %164 = getelementptr inbounds %struct.sv, ptr %162, i64 0, i32 2
  %165 = load i32, ptr %164, align 4, !tbaa !49
  %166 = and i32 %165, 131072
  %167 = icmp eq i32 %166, 0
  %168 = getelementptr inbounds %struct.sv, ptr %162, i64 0, i32 1
  %169 = load i32, ptr %168, align 8, !tbaa !41
  %170 = add i32 %169, 1
  store i32 %170, ptr %168, align 8, !tbaa !41
  br i1 %167, label %171, label %181

171:                                              ; preds = %163
  %172 = getelementptr inbounds ptr, ptr %2, i64 1
  store ptr %162, ptr %172, align 8, !tbaa !6
  %173 = load i64, ptr @PL_tmps_ix, align 8, !tbaa !59
  %174 = load i64, ptr @PL_tmps_floor, align 8, !tbaa !59
  %175 = icmp sgt i64 %173, %174
  br i1 %175, label %176, label %178

176:                                              ; preds = %171
  tail call void @Perl_free_tmps() #17
  %177 = load ptr, ptr %172, align 8, !tbaa !6
  br label %178

178:                                              ; preds = %176, %171
  %179 = phi ptr [ %177, %176 ], [ %162, %171 ]
  %180 = tail call ptr @Perl_sv_2mortal(ptr noundef %179) #17
  br label %224

181:                                              ; preds = %163
  %182 = load i64, ptr @PL_tmps_ix, align 8, !tbaa !59
  %183 = load i64, ptr @PL_tmps_floor, align 8, !tbaa !59
  %184 = icmp sgt i64 %182, %183
  br i1 %184, label %185, label %186

185:                                              ; preds = %181
  tail call void @Perl_free_tmps() #17
  br label %186

186:                                              ; preds = %181, %185
  %187 = tail call ptr @Perl_sv_mortalcopy_flags(ptr noundef nonnull %162, i32 noundef 1538) #17
  %188 = getelementptr inbounds ptr, ptr %2, i64 1
  store ptr %187, ptr %188, align 8, !tbaa !6
  %189 = load i32, ptr %168, align 8, !tbaa !41
  %190 = icmp ugt i32 %189, 1
  br i1 %190, label %191, label %193

191:                                              ; preds = %186
  %192 = add i32 %189, -1
  store i32 %192, ptr %168, align 8, !tbaa !41
  br label %224

193:                                              ; preds = %186
  tail call void @Perl_sv_free2(ptr noundef nonnull %162, i32 noundef %189) #17
  br label %224

194:                                              ; preds = %155, %157
  %195 = phi ptr [ %156, %155 ], [ %162, %157 ]
  %196 = getelementptr inbounds %struct.sv, ptr %195, i64 0, i32 2
  %197 = load i32, ptr %196, align 4, !tbaa !49
  %198 = and i32 %197, 131072
  %199 = icmp eq i32 %198, 0
  br i1 %199, label %202, label %200

200:                                              ; preds = %194
  %201 = tail call ptr @Perl_sv_mortalcopy_flags(ptr noundef nonnull %195, i32 noundef 1538) #17
  br label %210

202:                                              ; preds = %194
  %203 = and i32 %197, 524288
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %205, label %210

205:                                              ; preds = %202
  %206 = getelementptr inbounds %struct.sv, ptr %195, i64 0, i32 1
  %207 = load i32, ptr %206, align 8, !tbaa !41
  %208 = add i32 %207, 1
  store i32 %208, ptr %206, align 8, !tbaa !41
  %209 = tail call ptr @Perl_sv_2mortal(ptr noundef nonnull %195) #17
  br label %210

210:                                              ; preds = %202, %205, %200
  %211 = phi ptr [ %201, %200 ], [ %209, %205 ], [ %195, %202 ]
  %212 = getelementptr inbounds ptr, ptr %2, i64 1
  store ptr %211, ptr %212, align 8, !tbaa !6
  br label %224

213:                                              ; preds = %149, %150
  %214 = load ptr, ptr @PL_stack_max, align 8, !tbaa !6
  %215 = ptrtoint ptr %214 to i64
  %216 = ptrtoint ptr %2 to i64
  %217 = sub i64 %215, %216
  %218 = icmp slt i64 %217, 8
  br i1 %218, label %219, label %221

219:                                              ; preds = %213
  %220 = tail call ptr @Perl_stack_grow(ptr noundef %1, ptr noundef %2, i64 noundef 1) #17
  br label %221

221:                                              ; preds = %213, %219
  %222 = phi ptr [ %220, %219 ], [ %1, %213 ]
  %223 = getelementptr inbounds ptr, ptr %2, i64 1
  store ptr @PL_sv_undef, ptr %223, align 8, !tbaa !6
  br label %224

224:                                              ; preds = %193, %191, %210, %178, %221
  %225 = phi ptr [ %172, %178 ], [ %212, %210 ], [ %223, %221 ], [ %188, %191 ], [ %188, %193 ]
  %226 = phi ptr [ %1, %178 ], [ %1, %210 ], [ %222, %221 ], [ %1, %191 ], [ %1, %193 ]
  %227 = load i16, ptr %7, align 2, !tbaa !17
  %228 = and i16 %227, 48
  %229 = icmp eq i16 %228, 0
  br i1 %229, label %436, label %230

230:                                              ; preds = %224
  %231 = load ptr, ptr %226, align 8, !tbaa !6
  %232 = getelementptr inbounds %struct.sv, ptr %231, i64 0, i32 2
  %233 = load i32, ptr %232, align 4, !tbaa !49
  %234 = and i32 %233, 2097152
  %235 = icmp eq i32 %234, 0
  br i1 %235, label %241, label %236

236:                                              ; preds = %230
  %237 = tail call i32 @Perl_mg_get(ptr noundef nonnull %231) #17
  %238 = load ptr, ptr %226, align 8, !tbaa !6
  %239 = getelementptr inbounds %struct.sv, ptr %238, i64 0, i32 2
  %240 = load i32, ptr %239, align 4, !tbaa !49
  br label %241

241:                                              ; preds = %230, %236
  %242 = phi i32 [ %233, %230 ], [ %240, %236 ]
  %243 = phi ptr [ %231, %230 ], [ %238, %236 ]
  %244 = and i32 %242, 65280
  %245 = icmp ne i32 %244, 0
  %246 = and i32 %242, 255
  %247 = icmp eq i32 %246, 8
  %248 = or i1 %245, %247
  %249 = and i32 %242, 16826623
  %250 = icmp eq i32 %249, 16777226
  %251 = or i1 %250, %248
  br i1 %251, label %436, label %252

252:                                              ; preds = %241
  %253 = load i16, ptr %7, align 2, !tbaa !17
  %254 = and i16 %253, 48
  %255 = zext i16 %254 to i32
  %256 = tail call ptr @Perl_vivify_ref(ptr noundef nonnull %243, i32 noundef %255) #17
  store ptr %256, ptr %226, align 8, !tbaa !6
  br label %436

257:                                              ; preds = %6
  %258 = icmp eq i16 %9, 0
  %259 = or i1 %11, %258
  %260 = getelementptr inbounds ptr, ptr %0, i64 1
  %261 = icmp ugt ptr %260, %1
  br i1 %259, label %270, label %262

262:                                              ; preds = %257
  br i1 %261, label %436, label %263

263:                                              ; preds = %262
  %264 = getelementptr inbounds %struct.block, ptr %4, i64 0, i32 8, i32 0, i32 4
  %265 = getelementptr inbounds %struct.block, ptr %4, i64 0, i32 8, i32 0, i32 2
  %266 = getelementptr inbounds %struct.block, ptr %4, i64 0, i32 8, i32 0, i32 3
  %267 = getelementptr inbounds %struct.block, ptr %4, i64 0, i32 8, i32 0, i32 5
  %268 = getelementptr inbounds %struct.block, ptr %4, i64 0, i32 8, i32 0, i32 1
  %269 = getelementptr inbounds %struct.block, ptr %4, i64 0, i32 6
  br label %294

270:                                              ; preds = %257
  br i1 %261, label %436, label %271

271:                                              ; preds = %270, %289
  %272 = phi ptr [ %292, %289 ], [ %260, %270 ]
  %273 = phi ptr [ %291, %289 ], [ %2, %270 ]
  %274 = load ptr, ptr %272, align 8, !tbaa !6
  %275 = getelementptr inbounds %struct.sv, ptr %274, i64 0, i32 2
  %276 = load i32, ptr %275, align 4, !tbaa !49
  %277 = and i32 %276, 131072
  %278 = icmp eq i32 %277, 0
  br i1 %278, label %281, label %279

279:                                              ; preds = %271
  %280 = tail call ptr @Perl_sv_mortalcopy_flags(ptr noundef nonnull %274, i32 noundef 1538) #17
  br label %289

281:                                              ; preds = %271
  %282 = and i32 %276, 524288
  %283 = icmp eq i32 %282, 0
  br i1 %283, label %284, label %289

284:                                              ; preds = %281
  %285 = getelementptr inbounds %struct.sv, ptr %274, i64 0, i32 1
  %286 = load i32, ptr %285, align 8, !tbaa !41
  %287 = add i32 %286, 1
  store i32 %287, ptr %285, align 8, !tbaa !41
  %288 = tail call ptr @Perl_sv_2mortal(ptr noundef nonnull %274) #17
  br label %289

289:                                              ; preds = %281, %284, %279
  %290 = phi ptr [ %280, %279 ], [ %288, %284 ], [ %274, %281 ]
  %291 = getelementptr inbounds ptr, ptr %273, i64 1
  store ptr %290, ptr %291, align 8, !tbaa !6
  %292 = getelementptr inbounds ptr, ptr %272, i64 1
  %293 = icmp ugt ptr %292, %1
  br i1 %293, label %436, label %271, !llvm.loop !176

294:                                              ; preds = %263, %432
  %295 = phi ptr [ %260, %263 ], [ %434, %432 ]
  %296 = phi ptr [ %2, %263 ], [ %433, %432 ]
  %297 = load ptr, ptr %295, align 8, !tbaa !6
  %298 = icmp eq ptr %297, @PL_sv_undef
  br i1 %298, label %299, label %301

299:                                              ; preds = %294
  %300 = load i32, ptr getelementptr inbounds (%struct.sv, ptr @PL_sv_undef, i64 0, i32 2), align 4, !tbaa !49
  br label %420

301:                                              ; preds = %294
  %302 = getelementptr inbounds %struct.sv, ptr %297, i64 0, i32 2
  %303 = load i32, ptr %302, align 4, !tbaa !49
  %304 = and i32 %303, 134283264
  %305 = icmp eq i32 %304, 0
  %306 = and i32 %303, 134414336
  %307 = icmp eq i32 %306, 0
  br i1 %307, label %420, label %308

308:                                              ; preds = %301
  store ptr %1, ptr @PL_stack_sp, align 8, !tbaa !6
  tail call void @Perl_pop_scope() #17
  %309 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %310 = getelementptr inbounds %struct.stackinfo, ptr %309, i64 0, i32 4
  %311 = load i32, ptr %310, align 8, !tbaa !16
  %312 = add nsw i32 %311, -1
  store i32 %312, ptr %310, align 8, !tbaa !16
  %313 = load i32, ptr %264, align 8, !tbaa !17
  %314 = load i16, ptr %7, align 2, !tbaa !17
  %315 = and i16 %314, 256
  %316 = icmp eq i16 %315, 0
  br i1 %316, label %317, label %393

317:                                              ; preds = %308
  %318 = or i16 %314, 256
  store i16 %318, ptr %7, align 2, !tbaa !17
  %319 = load i8, ptr %4, align 8, !tbaa !17
  %320 = and i8 %319, 32
  %321 = icmp eq i8 %320, 0
  br i1 %321, label %393, label %322

322:                                              ; preds = %317
  %323 = load ptr, ptr @PL_defgv, align 8, !tbaa !6
  %324 = getelementptr inbounds %struct.gv, ptr %323, i64 0, i32 3
  %325 = load ptr, ptr %324, align 8, !tbaa !17
  %326 = getelementptr inbounds %struct.gp, ptr %325, i64 0, i32 6
  %327 = load ptr, ptr %326, align 8, !tbaa !138
  %328 = icmp eq ptr %327, null
  br i1 %328, label %337, label %329

329:                                              ; preds = %322
  %330 = getelementptr inbounds %struct.sv, ptr %327, i64 0, i32 1
  %331 = load i32, ptr %330, align 8, !tbaa !41
  %332 = icmp ugt i32 %331, 1
  br i1 %332, label %333, label %335

333:                                              ; preds = %329
  %334 = add i32 %331, -1
  store i32 %334, ptr %330, align 8, !tbaa !41
  br label %337

335:                                              ; preds = %329
  tail call void @Perl_sv_free2(ptr noundef nonnull %327, i32 noundef %331) #17
  %336 = load ptr, ptr @PL_defgv, align 8, !tbaa !6
  br label %337

337:                                              ; preds = %322, %333, %335
  %338 = phi ptr [ %323, %322 ], [ %323, %333 ], [ %336, %335 ]
  %339 = load ptr, ptr %265, align 8, !tbaa !17
  %340 = getelementptr inbounds %struct.gv, ptr %338, i64 0, i32 3
  %341 = load ptr, ptr %340, align 8, !tbaa !17
  %342 = getelementptr inbounds %struct.gp, ptr %341, i64 0, i32 6
  store ptr %339, ptr %342, align 8, !tbaa !138
  %343 = load ptr, ptr %266, align 8, !tbaa !17
  %344 = getelementptr inbounds %struct.av, ptr %343, i64 0, i32 2
  %345 = load i32, ptr %344, align 4, !tbaa !139
  %346 = and i32 %345, 1073741824
  %347 = icmp eq i32 %346, 0
  br i1 %347, label %372, label %348

348:                                              ; preds = %337
  %349 = load ptr, ptr %343, align 8, !tbaa !141
  %350 = getelementptr inbounds %struct.xpvav, ptr %349, i64 0, i32 2
  %351 = load i64, ptr %350, align 8, !tbaa !142
  %352 = getelementptr inbounds %struct.sv, ptr %343, i64 0, i32 1
  %353 = load i32, ptr %352, align 8, !tbaa !41
  %354 = icmp ugt i32 %353, 1
  br i1 %354, label %355, label %357

355:                                              ; preds = %348
  %356 = add i32 %353, -1
  store i32 %356, ptr %352, align 8, !tbaa !41
  br label %358

357:                                              ; preds = %348
  tail call void @Perl_sv_free2(ptr noundef nonnull %343, i32 noundef %353) #17
  br label %358

358:                                              ; preds = %355, %357
  %359 = tail call ptr @Perl_newSV_type(i32 noundef 11) #17
  store ptr %359, ptr %266, align 8, !tbaa !17
  tail call void @Perl_av_extend(ptr noundef %359, i64 noundef %351) #17
  %360 = load ptr, ptr %266, align 8, !tbaa !17
  %361 = getelementptr inbounds %struct.av, ptr %360, i64 0, i32 2
  %362 = load i32, ptr %361, align 4, !tbaa !139
  %363 = and i32 %362, -1073741825
  store i32 %363, ptr %361, align 4, !tbaa !139
  %364 = load ptr, ptr %266, align 8, !tbaa !17
  %365 = getelementptr inbounds %struct.av, ptr %364, i64 0, i32 2
  %366 = load i32, ptr %365, align 4, !tbaa !139
  %367 = or i32 %366, -2147483648
  store i32 %367, ptr %365, align 4, !tbaa !139
  %368 = load ptr, ptr %266, align 8, !tbaa !17
  %369 = load ptr, ptr %267, align 8, !tbaa !17
  %370 = getelementptr inbounds %struct.av, ptr %369, i64 0, i32 3
  %371 = load ptr, ptr %370, align 8, !tbaa !17
  store ptr %368, ptr %371, align 8, !tbaa !6
  br label %393

372:                                              ; preds = %337
  %373 = getelementptr inbounds %struct.av, ptr %343, i64 0, i32 3
  %374 = load ptr, ptr %373, align 8, !tbaa !17
  %375 = load ptr, ptr %343, align 8, !tbaa !141
  %376 = getelementptr inbounds %struct.xpvav, ptr %375, i64 0, i32 4
  %377 = load ptr, ptr %376, align 8, !tbaa !144
  %378 = ptrtoint ptr %374 to i64
  %379 = ptrtoint ptr %377 to i64
  %380 = sub i64 %378, %379
  %381 = ashr exact i64 %380, 3
  %382 = getelementptr inbounds %struct.xpvav, ptr %375, i64 0, i32 3
  %383 = load i64, ptr %382, align 8, !tbaa !145
  %384 = add nsw i64 %381, %383
  store i64 %384, ptr %382, align 8, !tbaa !145
  %385 = load ptr, ptr %266, align 8, !tbaa !17
  %386 = load ptr, ptr %385, align 8, !tbaa !141
  %387 = getelementptr inbounds %struct.xpvav, ptr %386, i64 0, i32 4
  %388 = load ptr, ptr %387, align 8, !tbaa !144
  %389 = getelementptr inbounds %struct.av, ptr %385, i64 0, i32 3
  store ptr %388, ptr %389, align 8, !tbaa !17
  %390 = load ptr, ptr %266, align 8, !tbaa !17
  %391 = load ptr, ptr %390, align 8, !tbaa !141
  %392 = getelementptr inbounds %struct.xpvav, ptr %391, i64 0, i32 2
  store i64 -1, ptr %392, align 8, !tbaa !142
  br label %393

393:                                              ; preds = %317, %372, %358, %308
  %394 = load ptr, ptr %268, align 8, !tbaa !17
  %395 = load i32, ptr @PL_savestack_ix, align 4, !tbaa !31
  %396 = load ptr, ptr @PL_scopestack, align 8, !tbaa !6
  %397 = load i32, ptr %269, align 4, !tbaa !17
  %398 = add nsw i32 %397, -1
  %399 = sext i32 %398 to i64
  %400 = getelementptr inbounds i32, ptr %396, i64 %399
  %401 = load i32, ptr %400, align 4, !tbaa !31
  %402 = icmp sgt i32 %395, %401
  br i1 %402, label %403, label %404

403:                                              ; preds = %393
  tail call void @Perl_leave_scope(i32 noundef %401) #17
  br label %404

404:                                              ; preds = %403, %393
  %405 = icmp eq ptr %394, null
  br i1 %405, label %410, label %406

406:                                              ; preds = %404
  %407 = load ptr, ptr %394, align 8, !tbaa !133
  %408 = getelementptr inbounds %struct.xpvcv, ptr %407, i64 0, i32 13
  store i32 %313, ptr %408, align 4, !tbaa !31
  %409 = icmp eq i32 %313, 0
  br i1 %409, label %411, label %410

410:                                              ; preds = %404, %406
  store ptr %5, ptr @PL_curpm, align 8, !tbaa !6
  br label %418

411:                                              ; preds = %406
  store ptr %5, ptr @PL_curpm, align 8, !tbaa !6
  %412 = getelementptr inbounds %struct.sv, ptr %394, i64 0, i32 1
  %413 = load i32, ptr %412, align 8, !tbaa !41
  %414 = icmp ugt i32 %413, 1
  br i1 %414, label %415, label %417

415:                                              ; preds = %411
  %416 = add i32 %413, -1
  store i32 %416, ptr %412, align 8, !tbaa !41
  br label %418

417:                                              ; preds = %411
  tail call void @Perl_sv_free2(ptr noundef nonnull %394, i32 noundef %413) #17
  br label %418

418:                                              ; preds = %410, %415, %417
  %419 = select i1 %305, ptr @.str.38, ptr @.str.37
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.36, ptr noundef nonnull %419) #17
  br label %432

420:                                              ; preds = %299, %301
  %421 = phi i32 [ %300, %299 ], [ %303, %301 ]
  %422 = and i32 %421, 524288
  %423 = icmp eq i32 %422, 0
  br i1 %423, label %424, label %429

424:                                              ; preds = %420
  %425 = getelementptr inbounds %struct.sv, ptr %297, i64 0, i32 1
  %426 = load i32, ptr %425, align 8, !tbaa !41
  %427 = add i32 %426, 1
  store i32 %427, ptr %425, align 8, !tbaa !41
  %428 = tail call ptr @Perl_sv_2mortal(ptr noundef nonnull %297) #17
  br label %429

429:                                              ; preds = %420, %424
  %430 = phi ptr [ %428, %424 ], [ %297, %420 ]
  %431 = getelementptr inbounds ptr, ptr %296, i64 1
  store ptr %430, ptr %431, align 8, !tbaa !6
  br label %432

432:                                              ; preds = %429, %418
  %433 = phi ptr [ %296, %418 ], [ %431, %429 ]
  %434 = getelementptr inbounds ptr, ptr %295, i64 1
  %435 = icmp ugt ptr %434, %1
  br i1 %435, label %436, label %294, !llvm.loop !177

436:                                              ; preds = %432, %289, %262, %270, %6, %224, %252, %241
  %437 = phi ptr [ %225, %241 ], [ %225, %252 ], [ %225, %224 ], [ %2, %6 ], [ %2, %270 ], [ %2, %262 ], [ %291, %289 ], [ %433, %432 ]
  store ptr %437, ptr @PL_stack_sp, align 8, !tbaa !6
  ret void
}

declare i32 @Perl_mg_free(ptr noundef) local_unnamed_addr #2

declare ptr @Perl_vivify_ref(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_leavesublv() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %2 = getelementptr inbounds %struct.stackinfo, ptr %1, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !14
  %4 = getelementptr inbounds %struct.stackinfo, ptr %1, i64 0, i32 4
  %5 = load i32, ptr %4, align 8, !tbaa !16
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds %struct.context, ptr %3, i64 %6
  %8 = load i8, ptr %7, align 8, !tbaa !17
  %9 = and i8 %8, 16
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %155

11:                                               ; preds = %0
  %12 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !6
  %13 = add nsw i32 %5, -1
  store i32 %13, ptr %4, align 8, !tbaa !16
  %14 = load ptr, ptr @PL_stack_base, align 8, !tbaa !6
  %15 = getelementptr inbounds %struct.block, ptr %7, i64 0, i32 3
  %16 = load i32, ptr %15, align 4, !tbaa !17
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds ptr, ptr %14, i64 %17
  %19 = getelementptr inbounds %struct.block, ptr %7, i64 0, i32 4
  %20 = load ptr, ptr %19, align 8, !tbaa !17
  store ptr %20, ptr @PL_curcop, align 8, !tbaa !6
  %21 = load ptr, ptr @PL_markstack, align 8, !tbaa !6
  %22 = getelementptr inbounds %struct.block, ptr %7, i64 0, i32 5
  %23 = load i32, ptr %22, align 8, !tbaa !17
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds i32, ptr %21, i64 %24
  store ptr %25, ptr @PL_markstack_ptr, align 8, !tbaa !6
  %26 = getelementptr inbounds %struct.block, ptr %7, i64 0, i32 6
  %27 = load i32, ptr %26, align 4, !tbaa !17
  store i32 %27, ptr @PL_scopestack_ix, align 4, !tbaa !31
  %28 = getelementptr inbounds %struct.block, ptr %7, i64 0, i32 7
  %29 = load ptr, ptr %28, align 8, !tbaa !17
  %30 = getelementptr inbounds %struct.block, ptr %7, i64 0, i32 1
  %31 = load i8, ptr %30, align 1, !tbaa !17
  %32 = zext i8 %31 to i32
  store i32 %5, ptr %4, align 8, !tbaa !16
  store i8 0, ptr @PL_tainted, align 1, !tbaa !26
  tail call fastcc void @S_return_lvalues(ptr noundef %18, ptr noundef %12, ptr noundef %18, i32 noundef %32, ptr noundef nonnull %7, ptr noundef %29)
  tail call void @Perl_pop_scope() #17
  %33 = getelementptr inbounds %struct.block, ptr %7, i64 0, i32 8
  %34 = getelementptr inbounds %struct.block, ptr %7, i64 0, i32 8, i32 0, i32 4
  %35 = load i32, ptr %34, align 8, !tbaa !17
  %36 = getelementptr inbounds %struct.block, ptr %7, i64 0, i32 2
  %37 = load i16, ptr %36, align 2, !tbaa !17
  %38 = and i16 %37, 256
  %39 = icmp eq i16 %38, 0
  br i1 %39, label %40, label %119

40:                                               ; preds = %11
  %41 = or i16 %37, 256
  store i16 %41, ptr %36, align 2, !tbaa !17
  %42 = load i8, ptr %7, align 8, !tbaa !17
  %43 = and i8 %42, 32
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %119, label %45

45:                                               ; preds = %40
  %46 = load ptr, ptr @PL_defgv, align 8, !tbaa !6
  %47 = getelementptr inbounds %struct.gv, ptr %46, i64 0, i32 3
  %48 = load ptr, ptr %47, align 8, !tbaa !17
  %49 = getelementptr inbounds %struct.gp, ptr %48, i64 0, i32 6
  %50 = load ptr, ptr %49, align 8, !tbaa !138
  %51 = icmp eq ptr %50, null
  br i1 %51, label %60, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds %struct.sv, ptr %50, i64 0, i32 1
  %54 = load i32, ptr %53, align 8, !tbaa !41
  %55 = icmp ugt i32 %54, 1
  br i1 %55, label %56, label %58

56:                                               ; preds = %52
  %57 = add i32 %54, -1
  store i32 %57, ptr %53, align 8, !tbaa !41
  br label %60

58:                                               ; preds = %52
  tail call void @Perl_sv_free2(ptr noundef nonnull %50, i32 noundef %54) #17
  %59 = load ptr, ptr @PL_defgv, align 8, !tbaa !6
  br label %60

60:                                               ; preds = %45, %56, %58
  %61 = phi ptr [ %46, %45 ], [ %46, %56 ], [ %59, %58 ]
  %62 = getelementptr inbounds %struct.block, ptr %7, i64 0, i32 8, i32 0, i32 2
  %63 = load ptr, ptr %62, align 8, !tbaa !17
  %64 = getelementptr inbounds %struct.gv, ptr %61, i64 0, i32 3
  %65 = load ptr, ptr %64, align 8, !tbaa !17
  %66 = getelementptr inbounds %struct.gp, ptr %65, i64 0, i32 6
  store ptr %63, ptr %66, align 8, !tbaa !138
  %67 = getelementptr inbounds %struct.block, ptr %7, i64 0, i32 8, i32 0, i32 3
  %68 = load ptr, ptr %67, align 8, !tbaa !17
  %69 = getelementptr inbounds %struct.av, ptr %68, i64 0, i32 2
  %70 = load i32, ptr %69, align 4, !tbaa !139
  %71 = and i32 %70, 1073741824
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %98, label %73

73:                                               ; preds = %60
  %74 = load ptr, ptr %68, align 8, !tbaa !141
  %75 = getelementptr inbounds %struct.xpvav, ptr %74, i64 0, i32 2
  %76 = load i64, ptr %75, align 8, !tbaa !142
  %77 = getelementptr inbounds %struct.sv, ptr %68, i64 0, i32 1
  %78 = load i32, ptr %77, align 8, !tbaa !41
  %79 = icmp ugt i32 %78, 1
  br i1 %79, label %80, label %82

80:                                               ; preds = %73
  %81 = add i32 %78, -1
  store i32 %81, ptr %77, align 8, !tbaa !41
  br label %83

82:                                               ; preds = %73
  tail call void @Perl_sv_free2(ptr noundef nonnull %68, i32 noundef %78) #17
  br label %83

83:                                               ; preds = %80, %82
  %84 = tail call ptr @Perl_newSV_type(i32 noundef 11) #17
  store ptr %84, ptr %67, align 8, !tbaa !17
  tail call void @Perl_av_extend(ptr noundef %84, i64 noundef %76) #17
  %85 = load ptr, ptr %67, align 8, !tbaa !17
  %86 = getelementptr inbounds %struct.av, ptr %85, i64 0, i32 2
  %87 = load i32, ptr %86, align 4, !tbaa !139
  %88 = and i32 %87, -1073741825
  store i32 %88, ptr %86, align 4, !tbaa !139
  %89 = load ptr, ptr %67, align 8, !tbaa !17
  %90 = getelementptr inbounds %struct.av, ptr %89, i64 0, i32 2
  %91 = load i32, ptr %90, align 4, !tbaa !139
  %92 = or i32 %91, -2147483648
  store i32 %92, ptr %90, align 4, !tbaa !139
  %93 = load ptr, ptr %67, align 8, !tbaa !17
  %94 = getelementptr inbounds %struct.block, ptr %7, i64 0, i32 8, i32 0, i32 5
  %95 = load ptr, ptr %94, align 8, !tbaa !17
  %96 = getelementptr inbounds %struct.av, ptr %95, i64 0, i32 3
  %97 = load ptr, ptr %96, align 8, !tbaa !17
  store ptr %93, ptr %97, align 8, !tbaa !6
  br label %119

98:                                               ; preds = %60
  %99 = getelementptr inbounds %struct.av, ptr %68, i64 0, i32 3
  %100 = load ptr, ptr %99, align 8, !tbaa !17
  %101 = load ptr, ptr %68, align 8, !tbaa !141
  %102 = getelementptr inbounds %struct.xpvav, ptr %101, i64 0, i32 4
  %103 = load ptr, ptr %102, align 8, !tbaa !144
  %104 = ptrtoint ptr %100 to i64
  %105 = ptrtoint ptr %103 to i64
  %106 = sub i64 %104, %105
  %107 = ashr exact i64 %106, 3
  %108 = getelementptr inbounds %struct.xpvav, ptr %101, i64 0, i32 3
  %109 = load i64, ptr %108, align 8, !tbaa !145
  %110 = add nsw i64 %107, %109
  store i64 %110, ptr %108, align 8, !tbaa !145
  %111 = load ptr, ptr %67, align 8, !tbaa !17
  %112 = load ptr, ptr %111, align 8, !tbaa !141
  %113 = getelementptr inbounds %struct.xpvav, ptr %112, i64 0, i32 4
  %114 = load ptr, ptr %113, align 8, !tbaa !144
  %115 = getelementptr inbounds %struct.av, ptr %111, i64 0, i32 3
  store ptr %114, ptr %115, align 8, !tbaa !17
  %116 = load ptr, ptr %67, align 8, !tbaa !17
  %117 = load ptr, ptr %116, align 8, !tbaa !141
  %118 = getelementptr inbounds %struct.xpvav, ptr %117, i64 0, i32 2
  store i64 -1, ptr %118, align 8, !tbaa !142
  br label %119

119:                                              ; preds = %40, %98, %83, %11
  %120 = getelementptr inbounds %struct.block, ptr %7, i64 0, i32 8, i32 0, i32 1
  %121 = load ptr, ptr %120, align 8, !tbaa !17
  %122 = load i32, ptr @PL_savestack_ix, align 4, !tbaa !31
  %123 = load ptr, ptr @PL_scopestack, align 8, !tbaa !6
  %124 = load i32, ptr %26, align 4, !tbaa !17
  %125 = add nsw i32 %124, -1
  %126 = sext i32 %125 to i64
  %127 = getelementptr inbounds i32, ptr %123, i64 %126
  %128 = load i32, ptr %127, align 4, !tbaa !31
  %129 = icmp sgt i32 %122, %128
  br i1 %129, label %130, label %131

130:                                              ; preds = %119
  tail call void @Perl_leave_scope(i32 noundef %128) #17
  br label %131

131:                                              ; preds = %130, %119
  %132 = icmp eq ptr %121, null
  br i1 %132, label %137, label %133

133:                                              ; preds = %131
  %134 = load ptr, ptr %121, align 8, !tbaa !133
  %135 = getelementptr inbounds %struct.xpvcv, ptr %134, i64 0, i32 13
  store i32 %35, ptr %135, align 4, !tbaa !31
  %136 = icmp eq i32 %35, 0
  br i1 %136, label %142, label %137

137:                                              ; preds = %131, %133
  %138 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %139 = getelementptr inbounds %struct.stackinfo, ptr %138, i64 0, i32 4
  %140 = load i32, ptr %139, align 8, !tbaa !16
  %141 = add nsw i32 %140, -1
  store i32 %141, ptr %139, align 8, !tbaa !16
  store ptr %29, ptr @PL_curpm, align 8, !tbaa !6
  br label %153

142:                                              ; preds = %133
  %143 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %144 = getelementptr inbounds %struct.stackinfo, ptr %143, i64 0, i32 4
  %145 = load i32, ptr %144, align 8, !tbaa !16
  %146 = add nsw i32 %145, -1
  store i32 %146, ptr %144, align 8, !tbaa !16
  store ptr %29, ptr @PL_curpm, align 8, !tbaa !6
  %147 = getelementptr inbounds %struct.sv, ptr %121, i64 0, i32 1
  %148 = load i32, ptr %147, align 8, !tbaa !41
  %149 = icmp ugt i32 %148, 1
  br i1 %149, label %150, label %152

150:                                              ; preds = %142
  %151 = add i32 %148, -1
  store i32 %151, ptr %147, align 8, !tbaa !41
  br label %153

152:                                              ; preds = %142
  tail call void @Perl_sv_free2(ptr noundef nonnull %121, i32 noundef %148) #17
  br label %153

153:                                              ; preds = %137, %150, %152
  %154 = load ptr, ptr %33, align 8, !tbaa !17
  br label %155

155:                                              ; preds = %0, %153
  %156 = phi ptr [ %154, %153 ], [ null, %0 ]
  ret ptr %156
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_last() local_unnamed_addr #0 {
  %1 = tail call fastcc i32 @S_unwind_loop(ptr noundef nonnull @.str.39)
  %2 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %3 = getelementptr inbounds %struct.stackinfo, ptr %2, i64 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !14
  %5 = getelementptr inbounds %struct.stackinfo, ptr %2, i64 0, i32 4
  %6 = load i32, ptr %5, align 8, !tbaa !16
  %7 = add nsw i32 %6, -1
  store i32 %7, ptr %5, align 8, !tbaa !16
  %8 = sext i32 %6 to i64
  %9 = getelementptr inbounds %struct.context, ptr %4, i64 %8
  %10 = load ptr, ptr @PL_stack_base, align 8, !tbaa !6
  %11 = getelementptr inbounds %struct.block, ptr %9, i64 0, i32 3
  %12 = load i32, ptr %11, align 4, !tbaa !17
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds ptr, ptr %10, i64 %13
  %15 = getelementptr inbounds %struct.block, ptr %9, i64 0, i32 4
  %16 = load ptr, ptr %15, align 8, !tbaa !17
  store ptr %16, ptr @PL_curcop, align 8, !tbaa !6
  %17 = load ptr, ptr @PL_markstack, align 8, !tbaa !6
  %18 = getelementptr inbounds %struct.block, ptr %9, i64 0, i32 5
  %19 = load i32, ptr %18, align 8, !tbaa !17
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds i32, ptr %17, i64 %20
  store ptr %21, ptr @PL_markstack_ptr, align 8, !tbaa !6
  %22 = getelementptr inbounds %struct.block, ptr %9, i64 0, i32 6
  %23 = load i32, ptr %22, align 4, !tbaa !17
  store i32 %23, ptr @PL_scopestack_ix, align 4, !tbaa !31
  %24 = getelementptr inbounds %struct.block, ptr %9, i64 0, i32 7
  %25 = load ptr, ptr %24, align 8, !tbaa !17
  store i32 %6, ptr %5, align 8, !tbaa !16
  %26 = load i8, ptr %9, align 8, !tbaa !17
  %27 = and i8 %26, 15
  %28 = zext i8 %27 to i32
  switch i32 %28, label %105 [
    i32 7, label %114
    i32 6, label %114
    i32 4, label %114
    i32 5, label %114
    i32 8, label %29
    i32 10, label %36
    i32 9, label %64
  ]

29:                                               ; preds = %0
  %30 = getelementptr inbounds %struct.block, ptr %9, i64 0, i32 8
  %31 = load ptr, ptr %30, align 8, !tbaa !17
  store i8 0, ptr @PL_tainted, align 1, !tbaa !26
  store ptr %14, ptr @PL_stack_sp, align 8, !tbaa !6
  tail call void @Perl_pop_scope() #17
  %32 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %33 = getelementptr inbounds %struct.stackinfo, ptr %32, i64 0, i32 4
  %34 = load i32, ptr %33, align 8, !tbaa !16
  %35 = add nsw i32 %34, -1
  store i32 %35, ptr %33, align 8, !tbaa !16
  br label %166

36:                                               ; preds = %0
  %37 = getelementptr inbounds %struct.block, ptr %9, i64 0, i32 2
  %38 = load i16, ptr %37, align 2, !tbaa !17
  %39 = trunc i16 %38 to i8
  %40 = and i8 %39, 127
  store i8 %40, ptr @PL_in_eval, align 1, !tbaa !17
  %41 = getelementptr inbounds %struct.block, ptr %9, i64 0, i32 8, i32 0, i32 2
  %42 = load ptr, ptr %41, align 8, !tbaa !17
  store ptr %42, ptr @PL_eval_root, align 8, !tbaa !6
  %43 = getelementptr inbounds %struct.block, ptr %9, i64 0, i32 8, i32 0, i32 3
  %44 = load ptr, ptr %43, align 8, !tbaa !17
  %45 = icmp eq ptr %44, null
  br i1 %45, label %58, label %46

46:                                               ; preds = %36
  %47 = getelementptr inbounds %struct.sv, ptr %44, i64 0, i32 2
  %48 = load i32, ptr %47, align 4, !tbaa !49
  %49 = and i32 %48, 49152
  %50 = icmp eq i32 %49, 49152
  br i1 %50, label %51, label %58

51:                                               ; preds = %46
  %52 = getelementptr inbounds %struct.sv, ptr %44, i64 0, i32 1
  %53 = load i32, ptr %52, align 8, !tbaa !41
  %54 = icmp ugt i32 %53, 1
  br i1 %54, label %55, label %57

55:                                               ; preds = %51
  %56 = add i32 %53, -1
  store i32 %56, ptr %52, align 8, !tbaa !41
  br label %58

57:                                               ; preds = %51
  tail call void @Perl_sv_free2(ptr noundef nonnull %44, i32 noundef %53) #17
  br label %58

58:                                               ; preds = %57, %55, %46, %36
  %59 = getelementptr inbounds %struct.block, ptr %9, i64 0, i32 8, i32 0, i32 1
  %60 = load ptr, ptr %59, align 8, !tbaa !17
  %61 = icmp eq ptr %60, null
  br i1 %61, label %107, label %62

62:                                               ; preds = %58
  %63 = tail call ptr @Perl_sv_2mortal(ptr noundef nonnull %60) #17
  br label %107

64:                                               ; preds = %0
  %65 = getelementptr inbounds %struct.block, ptr %9, i64 0, i32 2
  %66 = load i16, ptr %65, align 2, !tbaa !17
  %67 = and i16 %66, 256
  %68 = icmp eq i16 %67, 0
  br i1 %68, label %69, label %107

69:                                               ; preds = %64
  %70 = getelementptr inbounds %struct.block, ptr %9, i64 0, i32 8, i32 0, i32 1
  %71 = load ptr, ptr %70, align 8, !tbaa !17
  %72 = getelementptr inbounds %struct.block, ptr %9, i64 0, i32 8, i32 0, i32 3
  %73 = load ptr, ptr %72, align 8, !tbaa !17
  %74 = or i16 %66, 256
  store i16 %74, ptr %65, align 2, !tbaa !17
  tail call void @Perl_setdefout(ptr noundef %73) #17
  %75 = load i32, ptr @PL_savestack_ix, align 4, !tbaa !31
  %76 = load ptr, ptr @PL_scopestack, align 8, !tbaa !6
  %77 = load i32, ptr %22, align 4, !tbaa !17
  %78 = add nsw i32 %77, -1
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds i32, ptr %76, i64 %79
  %81 = load i32, ptr %80, align 4, !tbaa !31
  %82 = icmp sgt i32 %75, %81
  br i1 %82, label %83, label %84

83:                                               ; preds = %69
  tail call void @Perl_leave_scope(i32 noundef %81) #17
  br label %84

84:                                               ; preds = %83, %69
  %85 = load ptr, ptr %71, align 8, !tbaa !133
  %86 = getelementptr inbounds %struct.xpvcv, ptr %85, i64 0, i32 13
  %87 = load i32, ptr %86, align 4, !tbaa !31
  %88 = add nsw i32 %87, -1
  store i32 %88, ptr %86, align 4, !tbaa !31
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %98

90:                                               ; preds = %84
  %91 = load ptr, ptr %70, align 8, !tbaa !17
  %92 = getelementptr inbounds %struct.sv, ptr %91, i64 0, i32 1
  %93 = load i32, ptr %92, align 8, !tbaa !41
  %94 = icmp ugt i32 %93, 1
  br i1 %94, label %95, label %97

95:                                               ; preds = %90
  %96 = add i32 %93, -1
  store i32 %96, ptr %92, align 8, !tbaa !41
  br label %98

97:                                               ; preds = %90
  tail call void @Perl_sv_free2(ptr noundef nonnull %91, i32 noundef %93) #17
  br label %98

98:                                               ; preds = %97, %95, %84
  %99 = getelementptr inbounds %struct.sv, ptr %73, i64 0, i32 1
  %100 = load i32, ptr %99, align 8, !tbaa !41
  %101 = icmp ugt i32 %100, 1
  br i1 %101, label %102, label %104

102:                                              ; preds = %98
  %103 = add i32 %100, -1
  store i32 %103, ptr %99, align 8, !tbaa !41
  br label %107

104:                                              ; preds = %98
  tail call void @Perl_sv_free2(ptr noundef nonnull %73, i32 noundef %100) #17
  br label %107

105:                                              ; preds = %0
  %106 = tail call ptr (ptr, ...) @Perl_die(ptr noundef nonnull @.str.40, i32 noundef %28) #17
  br label %280

107:                                              ; preds = %64, %102, %104, %62, %58
  %108 = getelementptr inbounds %struct.block, ptr %9, i64 0, i32 8
  %109 = load ptr, ptr %108, align 8, !tbaa !17
  store i8 0, ptr @PL_tainted, align 1, !tbaa !26
  store ptr %14, ptr @PL_stack_sp, align 8, !tbaa !6
  tail call void @Perl_pop_scope() #17
  %110 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %111 = getelementptr inbounds %struct.stackinfo, ptr %110, i64 0, i32 4
  %112 = load i32, ptr %111, align 8, !tbaa !16
  %113 = add nsw i32 %112, -1
  store i32 %113, ptr %111, align 8, !tbaa !16
  br label %271

114:                                              ; preds = %0, %0, %0, %0
  %115 = getelementptr inbounds %struct.block, ptr %9, i64 0, i32 8
  %116 = load i32, ptr %115, align 8, !tbaa !17
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds ptr, ptr %10, i64 %117
  %119 = getelementptr inbounds %struct.block, ptr %9, i64 0, i32 8, i32 0, i32 1
  %120 = load ptr, ptr %119, align 8, !tbaa !17
  %121 = getelementptr inbounds %struct.loop, ptr %120, i64 0, i32 11
  %122 = load ptr, ptr %121, align 8, !tbaa !178
  %123 = load ptr, ptr %122, align 8, !tbaa !17
  store i8 0, ptr @PL_tainted, align 1, !tbaa !26
  store ptr %118, ptr @PL_stack_sp, align 8, !tbaa !6
  tail call void @Perl_pop_scope() #17
  %124 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %125 = getelementptr inbounds %struct.stackinfo, ptr %124, i64 0, i32 4
  %126 = load i32, ptr %125, align 8, !tbaa !16
  %127 = add nsw i32 %126, -1
  store i32 %127, ptr %125, align 8, !tbaa !16
  switch i8 %27, label %271 [
    i8 7, label %128
    i8 5, label %128
    i8 6, label %128
    i8 4, label %128
    i8 8, label %166
  ]

128:                                              ; preds = %114, %114, %114, %114
  %129 = load i8, ptr %9, align 8, !tbaa !17
  %130 = and i8 %129, 15
  %131 = icmp eq i8 %130, 6
  br i1 %131, label %132, label %150

132:                                              ; preds = %128
  %133 = getelementptr inbounds %struct.block, ptr %9, i64 0, i32 8, i32 0, i32 3
  %134 = load ptr, ptr %133, align 8, !tbaa !17
  %135 = getelementptr inbounds %struct.sv, ptr %134, i64 0, i32 1
  %136 = load i32, ptr %135, align 8, !tbaa !41
  %137 = icmp ugt i32 %136, 1
  br i1 %137, label %138, label %140

138:                                              ; preds = %132
  %139 = add i32 %136, -1
  store i32 %139, ptr %135, align 8, !tbaa !41
  br label %141

140:                                              ; preds = %132
  tail call void @Perl_sv_free2(ptr noundef nonnull %134, i32 noundef %136) #17
  br label %141

141:                                              ; preds = %138, %140
  %142 = getelementptr inbounds %struct.block, ptr %9, i64 0, i32 8, i32 0, i32 4
  %143 = load ptr, ptr %142, align 8, !tbaa !17
  %144 = getelementptr inbounds %struct.sv, ptr %143, i64 0, i32 1
  %145 = load i32, ptr %144, align 8, !tbaa !41
  %146 = icmp ugt i32 %145, 1
  br i1 %146, label %147, label %149

147:                                              ; preds = %141
  %148 = add i32 %145, -1
  store i32 %148, ptr %144, align 8, !tbaa !41
  br label %150

149:                                              ; preds = %141
  tail call void @Perl_sv_free2(ptr noundef nonnull %143, i32 noundef %145) #17
  br label %150

150:                                              ; preds = %149, %147, %128
  %151 = load i8, ptr %9, align 8, !tbaa !17
  %152 = and i8 %151, 15
  %153 = icmp eq i8 %152, 4
  br i1 %153, label %154, label %165

154:                                              ; preds = %150
  %155 = getelementptr inbounds %struct.block, ptr %9, i64 0, i32 8, i32 0, i32 3
  %156 = load ptr, ptr %155, align 8, !tbaa !17
  %157 = icmp eq ptr %156, null
  br i1 %157, label %165, label %158

158:                                              ; preds = %154
  %159 = getelementptr inbounds %struct.sv, ptr %156, i64 0, i32 1
  %160 = load i32, ptr %159, align 8, !tbaa !41
  %161 = icmp ugt i32 %160, 1
  br i1 %161, label %162, label %164

162:                                              ; preds = %158
  %163 = add i32 %160, -1
  store i32 %163, ptr %159, align 8, !tbaa !41
  br label %165

164:                                              ; preds = %158
  tail call void @Perl_sv_free2(ptr noundef nonnull %156, i32 noundef %160) #17
  br label %165

165:                                              ; preds = %164, %162, %154, %150
  tail call void @Perl_pop_scope() #17
  br label %271

166:                                              ; preds = %29, %114
  %167 = phi ptr [ %31, %29 ], [ %123, %114 ]
  %168 = getelementptr inbounds %struct.block, ptr %9, i64 0, i32 8, i32 0, i32 4
  %169 = load i32, ptr %168, align 8, !tbaa !17
  %170 = getelementptr inbounds %struct.block, ptr %9, i64 0, i32 2
  %171 = load i16, ptr %170, align 2, !tbaa !17
  %172 = and i16 %171, 256
  %173 = icmp eq i16 %172, 0
  br i1 %173, label %174, label %253

174:                                              ; preds = %166
  %175 = or i16 %171, 256
  store i16 %175, ptr %170, align 2, !tbaa !17
  %176 = load i8, ptr %9, align 8, !tbaa !17
  %177 = and i8 %176, 32
  %178 = icmp eq i8 %177, 0
  br i1 %178, label %253, label %179

179:                                              ; preds = %174
  %180 = load ptr, ptr @PL_defgv, align 8, !tbaa !6
  %181 = getelementptr inbounds %struct.gv, ptr %180, i64 0, i32 3
  %182 = load ptr, ptr %181, align 8, !tbaa !17
  %183 = getelementptr inbounds %struct.gp, ptr %182, i64 0, i32 6
  %184 = load ptr, ptr %183, align 8, !tbaa !138
  %185 = icmp eq ptr %184, null
  br i1 %185, label %194, label %186

186:                                              ; preds = %179
  %187 = getelementptr inbounds %struct.sv, ptr %184, i64 0, i32 1
  %188 = load i32, ptr %187, align 8, !tbaa !41
  %189 = icmp ugt i32 %188, 1
  br i1 %189, label %190, label %192

190:                                              ; preds = %186
  %191 = add i32 %188, -1
  store i32 %191, ptr %187, align 8, !tbaa !41
  br label %194

192:                                              ; preds = %186
  tail call void @Perl_sv_free2(ptr noundef nonnull %184, i32 noundef %188) #17
  %193 = load ptr, ptr @PL_defgv, align 8, !tbaa !6
  br label %194

194:                                              ; preds = %179, %190, %192
  %195 = phi ptr [ %180, %179 ], [ %180, %190 ], [ %193, %192 ]
  %196 = getelementptr inbounds %struct.block, ptr %9, i64 0, i32 8, i32 0, i32 2
  %197 = load ptr, ptr %196, align 8, !tbaa !17
  %198 = getelementptr inbounds %struct.gv, ptr %195, i64 0, i32 3
  %199 = load ptr, ptr %198, align 8, !tbaa !17
  %200 = getelementptr inbounds %struct.gp, ptr %199, i64 0, i32 6
  store ptr %197, ptr %200, align 8, !tbaa !138
  %201 = getelementptr inbounds %struct.block, ptr %9, i64 0, i32 8, i32 0, i32 3
  %202 = load ptr, ptr %201, align 8, !tbaa !17
  %203 = getelementptr inbounds %struct.av, ptr %202, i64 0, i32 2
  %204 = load i32, ptr %203, align 4, !tbaa !139
  %205 = and i32 %204, 1073741824
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %232, label %207

207:                                              ; preds = %194
  %208 = load ptr, ptr %202, align 8, !tbaa !141
  %209 = getelementptr inbounds %struct.xpvav, ptr %208, i64 0, i32 2
  %210 = load i64, ptr %209, align 8, !tbaa !142
  %211 = getelementptr inbounds %struct.sv, ptr %202, i64 0, i32 1
  %212 = load i32, ptr %211, align 8, !tbaa !41
  %213 = icmp ugt i32 %212, 1
  br i1 %213, label %214, label %216

214:                                              ; preds = %207
  %215 = add i32 %212, -1
  store i32 %215, ptr %211, align 8, !tbaa !41
  br label %217

216:                                              ; preds = %207
  tail call void @Perl_sv_free2(ptr noundef nonnull %202, i32 noundef %212) #17
  br label %217

217:                                              ; preds = %214, %216
  %218 = tail call ptr @Perl_newSV_type(i32 noundef 11) #17
  store ptr %218, ptr %201, align 8, !tbaa !17
  tail call void @Perl_av_extend(ptr noundef %218, i64 noundef %210) #17
  %219 = load ptr, ptr %201, align 8, !tbaa !17
  %220 = getelementptr inbounds %struct.av, ptr %219, i64 0, i32 2
  %221 = load i32, ptr %220, align 4, !tbaa !139
  %222 = and i32 %221, -1073741825
  store i32 %222, ptr %220, align 4, !tbaa !139
  %223 = load ptr, ptr %201, align 8, !tbaa !17
  %224 = getelementptr inbounds %struct.av, ptr %223, i64 0, i32 2
  %225 = load i32, ptr %224, align 4, !tbaa !139
  %226 = or i32 %225, -2147483648
  store i32 %226, ptr %224, align 4, !tbaa !139
  %227 = load ptr, ptr %201, align 8, !tbaa !17
  %228 = getelementptr inbounds %struct.block, ptr %9, i64 0, i32 8, i32 0, i32 5
  %229 = load ptr, ptr %228, align 8, !tbaa !17
  %230 = getelementptr inbounds %struct.av, ptr %229, i64 0, i32 3
  %231 = load ptr, ptr %230, align 8, !tbaa !17
  store ptr %227, ptr %231, align 8, !tbaa !6
  br label %253

232:                                              ; preds = %194
  %233 = getelementptr inbounds %struct.av, ptr %202, i64 0, i32 3
  %234 = load ptr, ptr %233, align 8, !tbaa !17
  %235 = load ptr, ptr %202, align 8, !tbaa !141
  %236 = getelementptr inbounds %struct.xpvav, ptr %235, i64 0, i32 4
  %237 = load ptr, ptr %236, align 8, !tbaa !144
  %238 = ptrtoint ptr %234 to i64
  %239 = ptrtoint ptr %237 to i64
  %240 = sub i64 %238, %239
  %241 = ashr exact i64 %240, 3
  %242 = getelementptr inbounds %struct.xpvav, ptr %235, i64 0, i32 3
  %243 = load i64, ptr %242, align 8, !tbaa !145
  %244 = add nsw i64 %241, %243
  store i64 %244, ptr %242, align 8, !tbaa !145
  %245 = load ptr, ptr %201, align 8, !tbaa !17
  %246 = load ptr, ptr %245, align 8, !tbaa !141
  %247 = getelementptr inbounds %struct.xpvav, ptr %246, i64 0, i32 4
  %248 = load ptr, ptr %247, align 8, !tbaa !144
  %249 = getelementptr inbounds %struct.av, ptr %245, i64 0, i32 3
  store ptr %248, ptr %249, align 8, !tbaa !17
  %250 = load ptr, ptr %201, align 8, !tbaa !17
  %251 = load ptr, ptr %250, align 8, !tbaa !141
  %252 = getelementptr inbounds %struct.xpvav, ptr %251, i64 0, i32 2
  store i64 -1, ptr %252, align 8, !tbaa !142
  br label %253

253:                                              ; preds = %174, %232, %217, %166
  %254 = getelementptr inbounds %struct.block, ptr %9, i64 0, i32 8, i32 0, i32 1
  %255 = load ptr, ptr %254, align 8, !tbaa !17
  %256 = load i32, ptr @PL_savestack_ix, align 4, !tbaa !31
  %257 = load ptr, ptr @PL_scopestack, align 8, !tbaa !6
  %258 = load i32, ptr %22, align 4, !tbaa !17
  %259 = add nsw i32 %258, -1
  %260 = sext i32 %259 to i64
  %261 = getelementptr inbounds i32, ptr %257, i64 %260
  %262 = load i32, ptr %261, align 4, !tbaa !31
  %263 = icmp sgt i32 %256, %262
  br i1 %263, label %264, label %265

264:                                              ; preds = %253
  tail call void @Perl_leave_scope(i32 noundef %262) #17
  br label %265

265:                                              ; preds = %264, %253
  %266 = icmp eq ptr %255, null
  br i1 %266, label %271, label %267

267:                                              ; preds = %265
  %268 = load ptr, ptr %255, align 8, !tbaa !133
  %269 = getelementptr inbounds %struct.xpvcv, ptr %268, i64 0, i32 13
  store i32 %169, ptr %269, align 4, !tbaa !31
  %270 = icmp eq i32 %169, 0
  br i1 %270, label %273, label %271

271:                                              ; preds = %114, %165, %265, %267, %107
  %272 = phi ptr [ %109, %107 ], [ %167, %267 ], [ %167, %265 ], [ %123, %165 ], [ %123, %114 ]
  store ptr %25, ptr @PL_curpm, align 8, !tbaa !6
  br label %280

273:                                              ; preds = %267
  store ptr %25, ptr @PL_curpm, align 8, !tbaa !6
  %274 = getelementptr inbounds %struct.sv, ptr %255, i64 0, i32 1
  %275 = load i32, ptr %274, align 8, !tbaa !41
  %276 = icmp ugt i32 %275, 1
  br i1 %276, label %277, label %279

277:                                              ; preds = %273
  %278 = add i32 %275, -1
  store i32 %278, ptr %274, align 8, !tbaa !41
  br label %280

279:                                              ; preds = %273
  tail call void @Perl_sv_free2(ptr noundef nonnull %255, i32 noundef %275) #17
  br label %280

280:                                              ; preds = %279, %277, %271, %105
  %281 = phi ptr [ %106, %105 ], [ %272, %271 ], [ %167, %277 ], [ %167, %279 ]
  ret ptr %281
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc i32 @S_unwind_loop(ptr noundef %0) unnamed_addr #0 {
  %2 = alloca i64, align 8
  %3 = alloca i32, align 4
  %4 = alloca i64, align 8
  %5 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %6 = getelementptr inbounds %struct.op, ptr %5, i64 0, i32 5
  %7 = load i8, ptr %6, align 2, !tbaa !30
  %8 = icmp sgt i8 %7, -1
  br i1 %8, label %55, label %9

9:                                                ; preds = %1
  %10 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %11 = getelementptr inbounds %struct.stackinfo, ptr %10, i64 0, i32 4
  %12 = load i32, ptr %11, align 8, !tbaa !16
  %13 = icmp sgt i32 %12, -1
  br i1 %13, label %14, label %53

14:                                               ; preds = %9
  %15 = zext i32 %12 to i64
  br label %16

16:                                               ; preds = %46, %14
  %17 = phi ptr [ %10, %14 ], [ %47, %46 ]
  %18 = phi i64 [ %15, %14 ], [ %48, %46 ]
  %19 = getelementptr inbounds %struct.stackinfo, ptr %17, i64 0, i32 1
  %20 = load ptr, ptr %19, align 8, !tbaa !14
  %21 = getelementptr inbounds %struct.context, ptr %20, i64 %18
  %22 = load i8, ptr %21, align 8, !tbaa !17
  %23 = and i8 %22, 15
  %24 = zext i8 %23 to i32
  switch i32 %24, label %46 [
    i32 11, label %25
    i32 8, label %25
    i32 9, label %25
    i32 10, label %25
    i32 0, label %25
    i32 7, label %50
    i32 6, label %50
    i32 4, label %50
    i32 5, label %50
  ]

25:                                               ; preds = %16, %16, %16, %16, %16
  %26 = zext i8 %23 to i64
  %27 = getelementptr inbounds [12 x ptr], ptr @context_name, i64 0, i64 %26
  %28 = load ptr, ptr %27, align 8, !tbaa !6
  %29 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %30 = getelementptr inbounds %struct.op, ptr %29, i64 0, i32 4
  %31 = load i16, ptr %30, align 8
  %32 = and i16 %31, 511
  %33 = icmp eq i16 %32, 380
  br i1 %33, label %34, label %36

34:                                               ; preds = %25
  %35 = tail call ptr @Perl_custom_op_get_field(ptr noundef nonnull %29, i32 noundef 1) #17
  br label %40

36:                                               ; preds = %25
  %37 = zext i16 %32 to i64
  %38 = getelementptr inbounds [0 x ptr], ptr @PL_op_name, i64 0, i64 %37
  %39 = load ptr, ptr %38, align 8, !tbaa !6
  br label %40

40:                                               ; preds = %36, %34
  %41 = phi ptr [ %35, %34 ], [ %39, %36 ]
  tail call void (i32, ptr, ...) @Perl_ck_warner(i32 noundef 3, ptr noundef nonnull @.str.43, ptr noundef %28, ptr noundef %41) #17
  %42 = load i8, ptr %21, align 8, !tbaa !17
  %43 = and i8 %42, 15
  %44 = icmp eq i8 %43, 0
  %45 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  br i1 %44, label %53, label %46

46:                                               ; preds = %40, %16
  %47 = phi ptr [ %45, %40 ], [ %17, %16 ]
  %48 = add nsw i64 %18, -1
  %49 = icmp sgt i64 %18, 0
  br i1 %49, label %16, label %53, !llvm.loop !180

50:                                               ; preds = %16, %16, %16, %16
  %51 = trunc i64 %18 to i32
  %52 = icmp slt i32 %51, 0
  br i1 %52, label %53, label %196

53:                                               ; preds = %46, %40, %9, %50
  %54 = phi i32 [ %51, %50 ], [ %12, %9 ], [ -1, %40 ], [ -1, %46 ]
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.41, ptr noundef %0) #17
  br label %196

55:                                               ; preds = %1
  %56 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !6
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #17
  %57 = and i8 %7, 64
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %76, label %59

59:                                               ; preds = %55
  %60 = load ptr, ptr %56, align 8, !tbaa !6
  %61 = getelementptr inbounds %struct.sv, ptr %60, i64 0, i32 2
  %62 = load i32, ptr %61, align 4, !tbaa !49
  %63 = and i32 %62, 2098176
  %64 = icmp eq i32 %63, 1024
  br i1 %64, label %65, label %71

65:                                               ; preds = %59
  %66 = load ptr, ptr %60, align 8, !tbaa !72
  %67 = getelementptr inbounds %struct.xpv, ptr %66, i64 0, i32 2
  %68 = load i64, ptr %67, align 8, !tbaa !53
  store i64 %68, ptr %4, align 8, !tbaa !59
  %69 = getelementptr inbounds %struct.sv, ptr %60, i64 0, i32 3
  %70 = load ptr, ptr %69, align 8, !tbaa !17
  br label %80

71:                                               ; preds = %59
  %72 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %60, ptr noundef nonnull %4, i32 noundef 2) #17
  %73 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %74 = getelementptr inbounds %struct.op, ptr %73, i64 0, i32 5
  %75 = load i8, ptr %74, align 2, !tbaa !30
  br label %80

76:                                               ; preds = %55
  %77 = getelementptr inbounds %struct.pvop, ptr %5, i64 0, i32 7
  %78 = load ptr, ptr %77, align 8, !tbaa !181
  %79 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %78) #18
  store i64 %79, ptr %4, align 8, !tbaa !59
  br label %80

80:                                               ; preds = %65, %71, %76
  %81 = phi i8 [ %7, %76 ], [ %7, %65 ], [ %75, %71 ]
  %82 = phi ptr [ %5, %76 ], [ %5, %65 ], [ %73, %71 ]
  %83 = phi ptr [ %78, %76 ], [ %70, %65 ], [ %72, %71 ]
  %84 = and i8 %81, 64
  %85 = icmp eq i8 %84, 0
  br i1 %85, label %92, label %86

86:                                               ; preds = %80
  %87 = getelementptr inbounds ptr, ptr %56, i64 -1
  %88 = load ptr, ptr %56, align 8, !tbaa !6
  %89 = getelementptr inbounds %struct.sv, ptr %88, i64 0, i32 2
  %90 = load i32, ptr %89, align 4, !tbaa !49
  %91 = and i32 %90, 536870912
  br label %98

92:                                               ; preds = %80
  %93 = getelementptr inbounds %struct.pvop, ptr %82, i64 0, i32 6
  %94 = load i8, ptr %93, align 1, !tbaa !183
  %95 = and i8 %94, -128
  %96 = zext i8 %95 to i32
  %97 = shl nuw nsw i32 %96, 22
  br label %98

98:                                               ; preds = %92, %86
  %99 = phi ptr [ %87, %86 ], [ %56, %92 ]
  %100 = phi i32 [ %91, %86 ], [ %97, %92 ]
  store ptr %99, ptr @PL_stack_sp, align 8, !tbaa !6
  %101 = load i64, ptr %4, align 8, !tbaa !59
  %102 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %103 = getelementptr inbounds %struct.stackinfo, ptr %102, i64 0, i32 4
  %104 = load i32, ptr %103, align 8, !tbaa !16
  %105 = icmp sgt i32 %104, -1
  br i1 %105, label %106, label %174

106:                                              ; preds = %98
  %107 = and i32 %100, 536870912
  %108 = icmp eq i32 %107, 0
  %109 = zext i32 %104 to i64
  br label %110

110:                                              ; preds = %141, %106
  %111 = phi ptr [ %102, %106 ], [ %143, %141 ]
  %112 = phi i64 [ %109, %106 ], [ %142, %141 ]
  %113 = getelementptr inbounds %struct.stackinfo, ptr %111, i64 0, i32 1
  %114 = load ptr, ptr %113, align 8, !tbaa !14
  %115 = getelementptr inbounds %struct.context, ptr %114, i64 %112
  %116 = load i8, ptr %115, align 8, !tbaa !17
  %117 = and i8 %116, 15
  %118 = zext i8 %117 to i32
  switch i32 %118, label %169 [
    i32 11, label %119
    i32 8, label %119
    i32 9, label %119
    i32 10, label %119
    i32 0, label %119
    i32 7, label %144
    i32 6, label %144
    i32 4, label %144
    i32 5, label %144
  ]

119:                                              ; preds = %110, %110, %110, %110, %110
  %120 = zext i8 %117 to i64
  %121 = getelementptr inbounds [12 x ptr], ptr @context_name, i64 0, i64 %120
  %122 = load ptr, ptr %121, align 8, !tbaa !6
  %123 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %124 = getelementptr inbounds %struct.op, ptr %123, i64 0, i32 4
  %125 = load i16, ptr %124, align 8
  %126 = and i16 %125, 511
  %127 = icmp eq i16 %126, 380
  br i1 %127, label %128, label %130

128:                                              ; preds = %119
  %129 = call ptr @Perl_custom_op_get_field(ptr noundef nonnull %123, i32 noundef 1) #17
  br label %134

130:                                              ; preds = %119
  %131 = zext i16 %126 to i64
  %132 = getelementptr inbounds [0 x ptr], ptr @PL_op_name, i64 0, i64 %131
  %133 = load ptr, ptr %132, align 8, !tbaa !6
  br label %134

134:                                              ; preds = %130, %128
  %135 = phi ptr [ %129, %128 ], [ %133, %130 ]
  call void (i32, ptr, ...) @Perl_ck_warner(i32 noundef 3, ptr noundef nonnull @.str.43, ptr noundef %122, ptr noundef %135) #17
  %136 = load i8, ptr %115, align 8, !tbaa !17
  %137 = and i8 %136, 15
  %138 = icmp ne i8 %137, 0
  %139 = icmp sgt i64 %112, 0
  %140 = and i1 %139, %138
  br i1 %140, label %141, label %174

141:                                              ; preds = %134, %169
  %142 = add nsw i64 %112, -1
  %143 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  br label %110, !llvm.loop !184

144:                                              ; preds = %110, %110, %110, %110
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #17
  store i64 0, ptr %2, align 8, !tbaa !59
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #17
  store i32 0, ptr %3, align 4, !tbaa !31
  %145 = getelementptr inbounds %struct.block, ptr %115, i64 0, i32 4
  %146 = load ptr, ptr %145, align 8, !tbaa !17
  %147 = call ptr @Perl_cop_fetch_label(ptr noundef %146, ptr noundef nonnull %2, ptr noundef nonnull %3) #17
  %148 = icmp eq ptr %147, null
  br i1 %148, label %168, label %149

149:                                              ; preds = %144
  %150 = load i32, ptr %3, align 4, !tbaa !31
  %151 = and i32 %150, 536870912
  %152 = icmp eq i32 %151, %107
  %153 = load i64, ptr %2, align 8, !tbaa !59
  br i1 %152, label %161, label %154

154:                                              ; preds = %149
  br i1 %108, label %158, label %155

155:                                              ; preds = %154
  %156 = call i32 @Perl_bytes_cmp_utf8(ptr noundef nonnull %147, i64 noundef %153, ptr noundef %83, i64 noundef %101) #17
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %171, label %168

158:                                              ; preds = %154
  %159 = call i32 @Perl_bytes_cmp_utf8(ptr noundef %83, i64 noundef %101, ptr noundef nonnull %147, i64 noundef %153) #17
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %171, label %168

161:                                              ; preds = %149
  %162 = icmp eq i64 %153, %101
  br i1 %162, label %163, label %168

163:                                              ; preds = %161
  %164 = icmp eq ptr %147, %83
  br i1 %164, label %171, label %165

165:                                              ; preds = %163
  %166 = call i32 @bcmp(ptr nonnull %147, ptr %83, i64 %101)
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %171, label %168

168:                                              ; preds = %165, %161, %158, %155, %144
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #17
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #17
  br label %169

169:                                              ; preds = %168, %110
  %170 = icmp sgt i64 %112, 0
  br i1 %170, label %141, label %174

171:                                              ; preds = %155, %158, %163, %165
  %172 = trunc i64 %112 to i32
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #17
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #17
  %173 = icmp slt i32 %172, 0
  br i1 %173, label %174, label %194

174:                                              ; preds = %169, %134, %98, %171
  %175 = phi i32 [ %172, %171 ], [ %104, %98 ], [ -1, %134 ], [ -1, %169 ]
  %176 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %177 = getelementptr inbounds %struct.op, ptr %176, i64 0, i32 5
  %178 = load i8, ptr %177, align 2, !tbaa !30
  %179 = and i8 %178, 64
  %180 = icmp eq i8 %179, 0
  br i1 %180, label %188, label %181

181:                                              ; preds = %174
  %182 = getelementptr inbounds ptr, ptr %99, i64 1
  %183 = load ptr, ptr %182, align 8, !tbaa !6
  %184 = getelementptr inbounds %struct.sv, ptr %183, i64 0, i32 2
  %185 = load i32, ptr %184, align 4, !tbaa !49
  %186 = and i32 %185, 2097152
  %187 = icmp eq i32 %186, 0
  br i1 %187, label %192, label %188

188:                                              ; preds = %181, %174
  %189 = load i64, ptr %4, align 8, !tbaa !59
  %190 = or i32 %100, 524288
  %191 = call ptr @Perl_newSVpvn_flags(ptr noundef %83, i64 noundef %189, i32 noundef %190) #17
  br label %192

192:                                              ; preds = %181, %188
  %193 = phi ptr [ %191, %188 ], [ %183, %181 ]
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.42, ptr noundef %0, ptr noundef %193) #17
  br label %194

194:                                              ; preds = %192, %171
  %195 = phi i32 [ %175, %192 ], [ %172, %171 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #17
  br label %196

196:                                              ; preds = %50, %53, %194
  %197 = phi i32 [ %54, %53 ], [ %51, %50 ], [ %195, %194 ]
  %198 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %199 = getelementptr inbounds %struct.stackinfo, ptr %198, i64 0, i32 4
  %200 = load i32, ptr %199, align 8, !tbaa !16
  %201 = icmp slt i32 %197, %200
  br i1 %201, label %202, label %203

202:                                              ; preds = %196
  call void @Perl_dounwind(i32 noundef %197)
  br label %203

203:                                              ; preds = %202, %196
  ret i32 %197
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare i64 @strlen(ptr nocapture noundef) local_unnamed_addr #6

declare ptr @Perl_custom_op_get_field(ptr noundef, i32 noundef) local_unnamed_addr #2

declare ptr @Perl_cop_fetch_label(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

declare i32 @Perl_bytes_cmp_utf8(ptr noundef, i64 noundef, ptr noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_next() local_unnamed_addr #0 {
  %1 = load i32, ptr @PL_scopestack_ix, align 4, !tbaa !31
  %2 = tail call fastcc i32 @S_unwind_loop(ptr noundef nonnull @.str.49)
  %3 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %4 = getelementptr inbounds %struct.stackinfo, ptr %3, i64 0, i32 1
  %5 = load ptr, ptr %4, align 8, !tbaa !14
  %6 = getelementptr inbounds %struct.stackinfo, ptr %3, i64 0, i32 4
  %7 = load i32, ptr %6, align 8, !tbaa !16
  %8 = sext i32 %7 to i64
  %9 = getelementptr inbounds %struct.context, ptr %5, i64 %8
  %10 = load ptr, ptr @PL_stack_base, align 8, !tbaa !6
  %11 = getelementptr inbounds %struct.block, ptr %9, i64 0, i32 3
  %12 = load i32, ptr %11, align 4, !tbaa !17
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds ptr, ptr %10, i64 %13
  store ptr %14, ptr @PL_stack_sp, align 8, !tbaa !6
  %15 = load ptr, ptr @PL_markstack, align 8, !tbaa !6
  %16 = getelementptr inbounds %struct.block, ptr %9, i64 0, i32 5
  %17 = load i32, ptr %16, align 8, !tbaa !17
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds i32, ptr %15, i64 %18
  store ptr %19, ptr @PL_markstack_ptr, align 8, !tbaa !6
  %20 = getelementptr inbounds %struct.block, ptr %9, i64 0, i32 6
  %21 = load i32, ptr %20, align 4, !tbaa !17
  store i32 %21, ptr @PL_scopestack_ix, align 4, !tbaa !31
  %22 = getelementptr inbounds %struct.block, ptr %9, i64 0, i32 7
  %23 = load ptr, ptr %22, align 8, !tbaa !17
  store ptr %23, ptr @PL_curpm, align 8, !tbaa !6
  %24 = icmp slt i32 %21, %1
  br i1 %24, label %25, label %30

25:                                               ; preds = %0
  %26 = load ptr, ptr @PL_scopestack, align 8, !tbaa !6
  %27 = sext i32 %21 to i64
  %28 = getelementptr inbounds i32, ptr %26, i64 %27
  %29 = load i32, ptr %28, align 4, !tbaa !31
  tail call void @Perl_leave_scope(i32 noundef %29) #17
  br label %30

30:                                               ; preds = %25, %0
  %31 = getelementptr inbounds %struct.block, ptr %9, i64 0, i32 4
  %32 = load ptr, ptr %31, align 8, !tbaa !17
  store ptr %32, ptr @PL_curcop, align 8, !tbaa !6
  %33 = load i32, ptr @PL_sig_pending, align 4, !tbaa !31
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %37, label %35

35:                                               ; preds = %30
  %36 = load ptr, ptr @PL_signalhook, align 8, !tbaa !6
  tail call void %36() #17
  br label %37

37:                                               ; preds = %30, %35
  %38 = getelementptr inbounds %struct.block, ptr %9, i64 0, i32 8, i32 0, i32 1
  %39 = load ptr, ptr %38, align 8, !tbaa !17
  %40 = getelementptr inbounds %struct.loop, ptr %39, i64 0, i32 10
  %41 = load ptr, ptr %40, align 8, !tbaa !185
  ret ptr %41
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_redo() local_unnamed_addr #0 {
  %1 = tail call fastcc i32 @S_unwind_loop(ptr noundef nonnull @.str.50)
  %2 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %3 = getelementptr inbounds %struct.stackinfo, ptr %2, i64 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !14
  %5 = sext i32 %1 to i64
  %6 = getelementptr inbounds %struct.context, ptr %4, i64 %5, i32 0, i32 0, i32 8
  %7 = load ptr, ptr %6, align 8, !tbaa !17
  %8 = getelementptr inbounds %struct.loop, ptr %7, i64 0, i32 9
  %9 = load ptr, ptr %8, align 8, !tbaa !186
  %10 = getelementptr inbounds %struct.op, ptr %9, i64 0, i32 4
  %11 = load i16, ptr %10, align 8
  %12 = and i16 %11, 511
  %13 = icmp eq i16 %12, 196
  %14 = getelementptr inbounds %struct.stackinfo, ptr %2, i64 0, i32 4
  %15 = load i32, ptr %14, align 8, !tbaa !16
  br i1 %13, label %16, label %19

16:                                               ; preds = %0
  %17 = add nsw i32 %15, 1
  store i32 %17, ptr %14, align 8, !tbaa !16
  %18 = load ptr, ptr %9, align 8, !tbaa !20
  br label %19

19:                                               ; preds = %0, %16
  %20 = phi i32 [ %17, %16 ], [ %15, %0 ]
  %21 = phi ptr [ %18, %16 ], [ %9, %0 ]
  %22 = sext i32 %20 to i64
  %23 = getelementptr inbounds %struct.context, ptr %4, i64 %22
  %24 = load ptr, ptr @PL_stack_base, align 8, !tbaa !6
  %25 = getelementptr inbounds %struct.block, ptr %23, i64 0, i32 3
  %26 = load i32, ptr %25, align 4, !tbaa !17
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds ptr, ptr %24, i64 %27
  store ptr %28, ptr @PL_stack_sp, align 8, !tbaa !6
  %29 = load ptr, ptr @PL_markstack, align 8, !tbaa !6
  %30 = getelementptr inbounds %struct.block, ptr %23, i64 0, i32 5
  %31 = load i32, ptr %30, align 8, !tbaa !17
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds i32, ptr %29, i64 %32
  store ptr %33, ptr @PL_markstack_ptr, align 8, !tbaa !6
  %34 = getelementptr inbounds %struct.block, ptr %23, i64 0, i32 6
  %35 = load i32, ptr %34, align 4, !tbaa !17
  store i32 %35, ptr @PL_scopestack_ix, align 4, !tbaa !31
  %36 = getelementptr inbounds %struct.block, ptr %23, i64 0, i32 7
  %37 = load ptr, ptr %36, align 8, !tbaa !17
  store ptr %37, ptr @PL_curpm, align 8, !tbaa !6
  %38 = load ptr, ptr @PL_scopestack, align 8, !tbaa !6
  %39 = add nsw i32 %35, -1
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds i32, ptr %38, i64 %40
  %42 = load i32, ptr %41, align 4, !tbaa !31
  %43 = load i32, ptr @PL_savestack_ix, align 4, !tbaa !31
  %44 = icmp sgt i32 %43, %42
  br i1 %44, label %45, label %46

45:                                               ; preds = %19
  tail call void @Perl_leave_scope(i32 noundef %42) #17
  br label %46

46:                                               ; preds = %45, %19
  %47 = load i64, ptr @PL_tmps_ix, align 8, !tbaa !59
  %48 = load i64, ptr @PL_tmps_floor, align 8, !tbaa !59
  %49 = icmp sgt i64 %47, %48
  br i1 %49, label %50, label %51

50:                                               ; preds = %46
  tail call void @Perl_free_tmps() #17
  br label %51

51:                                               ; preds = %50, %46
  %52 = getelementptr inbounds %struct.block, ptr %23, i64 0, i32 4
  %53 = load ptr, ptr %52, align 8, !tbaa !17
  store ptr %53, ptr @PL_curcop, align 8, !tbaa !6
  %54 = load i32, ptr @PL_sig_pending, align 4, !tbaa !31
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %58, label %56

56:                                               ; preds = %51
  %57 = load ptr, ptr @PL_signalhook, align 8, !tbaa !6
  tail call void %57() #17
  br label %58

58:                                               ; preds = %51, %56
  ret ptr %21
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_goto() local_unnamed_addr #0 {
  %1 = alloca [64 x ptr], align 16
  %2 = alloca i64, align 8
  %3 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !6
  call void @llvm.lifetime.start.p0(i64 512, ptr nonnull %1) #17
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #17
  store i64 0, ptr %2, align 8, !tbaa !59
  %4 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %5 = getelementptr inbounds %struct.op, ptr %4, i64 0, i32 4
  %6 = load i16, ptr %5, align 8
  %7 = and i16 %6, 511
  %8 = icmp eq i16 %7, 207
  %9 = getelementptr inbounds %struct.op, ptr %4, i64 0, i32 5
  %10 = load i8, ptr %9, align 2, !tbaa !30
  %11 = and i8 %10, 64
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %597, label %13

13:                                               ; preds = %0
  %14 = getelementptr inbounds ptr, ptr %3, i64 -1
  %15 = load ptr, ptr %3, align 8, !tbaa !6
  %16 = getelementptr inbounds %struct.sv, ptr %15, i64 0, i32 2
  %17 = load i32, ptr %16, align 4, !tbaa !49
  %18 = and i32 %17, 2097152
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %23, label %20

20:                                               ; preds = %13
  %21 = tail call i32 @Perl_mg_get(ptr noundef nonnull %15) #17
  %22 = load i32, ptr %16, align 4, !tbaa !49
  br label %23

23:                                               ; preds = %13, %20
  %24 = phi i32 [ %17, %13 ], [ %22, %20 ]
  %25 = and i32 %24, 2048
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %568, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.sv, ptr %15, i64 0, i32 3
  %29 = load ptr, ptr %28, align 8, !tbaa !17
  %30 = getelementptr inbounds %struct.sv, ptr %29, i64 0, i32 2
  %31 = load i32, ptr %30, align 4, !tbaa !49
  %32 = and i32 %31, 255
  %33 = icmp eq i32 %32, 13
  br i1 %33, label %34, label %568

34:                                               ; preds = %27
  %35 = load ptr, ptr @PL_defgv, align 8, !tbaa !6
  %36 = getelementptr inbounds %struct.gv, ptr %35, i64 0, i32 3
  %37 = load ptr, ptr %36, align 8, !tbaa !17
  %38 = getelementptr inbounds %struct.gp, ptr %37, i64 0, i32 6
  %39 = load ptr, ptr %38, align 8, !tbaa !138
  %40 = load ptr, ptr %29, align 8, !tbaa !133
  %41 = getelementptr inbounds %struct.xpvcv, ptr %40, i64 0, i32 6
  %42 = load ptr, ptr %41, align 8, !tbaa !17
  %43 = icmp eq ptr %42, null
  br i1 %43, label %44, label %102

44:                                               ; preds = %34, %96
  %45 = phi ptr [ %98, %96 ], [ %40, %34 ]
  %46 = phi ptr [ %97, %96 ], [ %29, %34 ]
  %47 = getelementptr inbounds %struct.xpvcv, ptr %45, i64 0, i32 12
  %48 = load i32, ptr %47, align 4, !tbaa !135
  %49 = and i32 %48, 32768
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %53, label %51

51:                                               ; preds = %44
  %52 = tail call ptr @Perl_cvgv_from_hek(ptr noundef nonnull %46) #17
  br label %56

53:                                               ; preds = %44
  %54 = getelementptr inbounds %struct.xpvcv, ptr %45, i64 0, i32 7
  %55 = load ptr, ptr %54, align 8, !tbaa !17
  br label %56

56:                                               ; preds = %51, %53
  %57 = phi ptr [ %52, %51 ], [ %55, %53 ]
  %58 = icmp eq ptr %57, null
  br i1 %58, label %94, label %59

59:                                               ; preds = %56
  %60 = getelementptr inbounds %struct.gv, ptr %57, i64 0, i32 3
  %61 = load ptr, ptr %60, align 8, !tbaa !17
  %62 = getelementptr inbounds %struct.gp, ptr %61, i64 0, i32 2
  %63 = load ptr, ptr %62, align 8, !tbaa !24
  %64 = icmp eq ptr %46, %63
  %65 = icmp eq ptr %63, null
  %66 = or i1 %64, %65
  br i1 %66, label %67, label %96

67:                                               ; preds = %59
  %68 = load ptr, ptr %57, align 8, !tbaa !114
  %69 = getelementptr inbounds %struct.xpvgv, ptr %68, i64 0, i32 5
  %70 = load ptr, ptr %69, align 8, !tbaa !17
  %71 = getelementptr inbounds %struct.xpvgv, ptr %68, i64 0, i32 4
  %72 = load ptr, ptr %71, align 8, !tbaa !17
  %73 = getelementptr inbounds %struct.hek, ptr %72, i64 0, i32 2
  %74 = getelementptr inbounds %struct.hek, ptr %72, i64 0, i32 1
  %75 = load i32, ptr %74, align 4, !tbaa !187
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds i8, ptr %73, i64 %76
  %78 = getelementptr inbounds i8, ptr %77, i64 1
  %79 = load i8, ptr %78, align 1, !tbaa !17
  %80 = and i8 %79, 1
  %81 = zext i8 %80 to i32
  %82 = shl nuw nsw i32 %81, 29
  %83 = tail call ptr @Perl_gv_autoload_pvn(ptr noundef %70, ptr noundef nonnull %73, i64 noundef %76, i32 noundef %82) #17
  %84 = icmp eq ptr %83, null
  br i1 %84, label %91, label %85

85:                                               ; preds = %67
  %86 = getelementptr inbounds %struct.gv, ptr %83, i64 0, i32 3
  %87 = load ptr, ptr %86, align 8, !tbaa !17
  %88 = getelementptr inbounds %struct.gp, ptr %87, i64 0, i32 2
  %89 = load ptr, ptr %88, align 8, !tbaa !24
  %90 = icmp eq ptr %89, null
  br i1 %90, label %91, label %96

91:                                               ; preds = %85, %67
  %92 = tail call ptr @Perl_sv_newmortal() #17
  tail call void @Perl_gv_efullname4(ptr noundef %92, ptr noundef nonnull %57, ptr noundef null, i1 noundef zeroext true) #17
  %93 = tail call ptr (ptr, ...) @Perl_die(ptr noundef nonnull @.str.52, ptr noundef %92) #17
  br label %850

94:                                               ; preds = %56
  %95 = tail call ptr (ptr, ...) @Perl_die(ptr noundef nonnull @.str.53) #17
  br label %850

96:                                               ; preds = %59, %85
  %97 = phi ptr [ %89, %85 ], [ %63, %59 ]
  %98 = load ptr, ptr %97, align 8, !tbaa !133
  %99 = getelementptr inbounds %struct.xpvcv, ptr %98, i64 0, i32 6
  %100 = load ptr, ptr %99, align 8, !tbaa !17
  %101 = icmp eq ptr %100, null
  br i1 %101, label %44, label %102

102:                                              ; preds = %96, %34
  %103 = phi ptr [ %29, %34 ], [ %97, %96 ]
  %104 = getelementptr inbounds %struct.cv, ptr %103, i64 0, i32 1
  %105 = load i32, ptr %104, align 8, !tbaa !189
  %106 = add i32 %105, 1
  store i32 %106, ptr %104, align 8, !tbaa !189
  %107 = load i64, ptr @PL_tmps_ix, align 8, !tbaa !59
  %108 = load i64, ptr @PL_tmps_floor, align 8, !tbaa !59
  %109 = icmp sgt i64 %107, %108
  br i1 %109, label %110, label %111

110:                                              ; preds = %102
  tail call void @Perl_free_tmps() #17
  br label %111

111:                                              ; preds = %110, %102
  %112 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %113 = getelementptr inbounds %struct.stackinfo, ptr %112, i64 0, i32 1
  %114 = load ptr, ptr %113, align 8, !tbaa !14
  %115 = getelementptr inbounds %struct.stackinfo, ptr %112, i64 0, i32 4
  %116 = load i32, ptr %115, align 8, !tbaa !16
  %117 = icmp sgt i32 %116, -1
  br i1 %117, label %118, label %150

118:                                              ; preds = %111
  %119 = zext i32 %116 to i64
  br label %120

120:                                              ; preds = %128, %118
  %121 = phi i64 [ %119, %118 ], [ %129, %128 ]
  %122 = getelementptr inbounds %struct.context, ptr %114, i64 %121
  %123 = load i8, ptr %122, align 8, !tbaa !17
  %124 = and i8 %123, 15
  %125 = zext i8 %124 to i32
  switch i32 %125, label %128 [
    i32 8, label %126
    i32 10, label %131
    i32 9, label %131
  ]

126:                                              ; preds = %120
  %127 = icmp sgt i8 %123, -1
  br i1 %127, label %131, label %128

128:                                              ; preds = %126, %120
  %129 = add nsw i64 %121, -1
  %130 = icmp sgt i64 %121, 0
  br i1 %130, label %120, label %136, !llvm.loop !18

131:                                              ; preds = %120, %120, %126
  %132 = trunc i64 %121 to i32
  %133 = icmp sgt i32 %116, %132
  br i1 %133, label %134, label %150

134:                                              ; preds = %131
  %135 = icmp slt i32 %132, 0
  br i1 %135, label %136, label %144

136:                                              ; preds = %128, %134
  %137 = load i32, ptr %104, align 8, !tbaa !41
  %138 = icmp ugt i32 %137, 1
  br i1 %138, label %139, label %141

139:                                              ; preds = %136
  %140 = add i32 %137, -1
  store i32 %140, ptr %104, align 8, !tbaa !41
  br label %142

141:                                              ; preds = %136
  tail call void @Perl_sv_free2(ptr noundef nonnull %103, i32 noundef %137) #17
  br label %142

142:                                              ; preds = %139, %141
  %143 = tail call ptr (ptr, ...) @Perl_die(ptr noundef nonnull @.str.54) #17
  br label %850

144:                                              ; preds = %134
  tail call void @Perl_dounwind(i32 noundef %132)
  %145 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %146 = getelementptr inbounds %struct.stackinfo, ptr %145, i64 0, i32 1
  %147 = load ptr, ptr %146, align 8, !tbaa !14
  %148 = getelementptr inbounds %struct.stackinfo, ptr %145, i64 0, i32 4
  %149 = load i32, ptr %148, align 8, !tbaa !16
  br label %150

150:                                              ; preds = %111, %144, %131
  %151 = phi i32 [ %116, %111 ], [ %149, %144 ], [ %116, %131 ]
  %152 = phi ptr [ %114, %111 ], [ %147, %144 ], [ %114, %131 ]
  %153 = sext i32 %151 to i64
  %154 = getelementptr inbounds %struct.context, ptr %152, i64 %153
  %155 = load ptr, ptr @PL_stack_base, align 8, !tbaa !6
  %156 = getelementptr inbounds %struct.block, ptr %154, i64 0, i32 3
  %157 = load i32, ptr %156, align 4, !tbaa !17
  %158 = sext i32 %157 to i64
  %159 = getelementptr inbounds ptr, ptr %155, i64 %158
  store ptr %159, ptr @PL_stack_sp, align 8, !tbaa !6
  %160 = load ptr, ptr @PL_markstack, align 8, !tbaa !6
  %161 = getelementptr inbounds %struct.block, ptr %154, i64 0, i32 5
  %162 = load i32, ptr %161, align 8, !tbaa !17
  %163 = sext i32 %162 to i64
  %164 = getelementptr inbounds i32, ptr %160, i64 %163
  store ptr %164, ptr @PL_markstack_ptr, align 8, !tbaa !6
  %165 = getelementptr inbounds %struct.block, ptr %154, i64 0, i32 6
  %166 = load i32, ptr %165, align 4, !tbaa !17
  store i32 %166, ptr @PL_scopestack_ix, align 4, !tbaa !31
  %167 = getelementptr inbounds %struct.block, ptr %154, i64 0, i32 7
  %168 = load ptr, ptr %167, align 8, !tbaa !17
  store ptr %168, ptr @PL_curpm, align 8, !tbaa !6
  %169 = load i8, ptr %154, align 8, !tbaa !17
  %170 = zext i8 %169 to i32
  %171 = and i32 %170, 15
  %172 = icmp eq i32 %171, 10
  br i1 %172, label %173, label %187

173:                                              ; preds = %150
  %174 = load i32, ptr %104, align 8, !tbaa !41
  %175 = icmp ugt i32 %174, 1
  br i1 %175, label %176, label %178

176:                                              ; preds = %173
  %177 = add i32 %174, -1
  store i32 %177, ptr %104, align 8, !tbaa !41
  br label %179

178:                                              ; preds = %173
  tail call void @Perl_sv_free2(ptr noundef nonnull %103, i32 noundef %174) #17
  br label %179

179:                                              ; preds = %176, %178
  %180 = load i8, ptr %154, align 8, !tbaa !17
  %181 = and i8 %180, 47
  %182 = icmp eq i8 %181, 42
  br i1 %182, label %183, label %185

183:                                              ; preds = %179
  %184 = tail call ptr (ptr, ...) @Perl_die(ptr noundef nonnull @.str.55) #17
  br label %850

185:                                              ; preds = %179
  %186 = tail call ptr (ptr, ...) @Perl_die(ptr noundef nonnull @.str.56) #17
  br label %850

187:                                              ; preds = %150
  %188 = and i32 %170, 16
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %198, label %190

190:                                              ; preds = %187
  %191 = load i32, ptr %104, align 8, !tbaa !41
  %192 = icmp ugt i32 %191, 1
  br i1 %192, label %193, label %195

193:                                              ; preds = %190
  %194 = add i32 %191, -1
  store i32 %194, ptr %104, align 8, !tbaa !41
  br label %196

195:                                              ; preds = %190
  tail call void @Perl_sv_free2(ptr noundef nonnull %103, i32 noundef %191) #17
  br label %196

196:                                              ; preds = %193, %195
  %197 = tail call ptr (ptr, ...) @Perl_die(ptr noundef nonnull @.str.57) #17
  br label %850

198:                                              ; preds = %187
  %199 = and i32 %170, 47
  %200 = icmp eq i32 %199, 40
  br i1 %200, label %201, label %238

201:                                              ; preds = %198
  %202 = getelementptr inbounds %struct.block, ptr %154, i64 0, i32 8, i32 0, i32 3
  %203 = load ptr, ptr %202, align 8, !tbaa !17
  %204 = getelementptr inbounds %struct.av, ptr %203, i64 0, i32 2
  %205 = load i32, ptr %204, align 4, !tbaa !139
  %206 = and i32 %205, 1073741824
  %207 = icmp ne i32 %206, 0
  %208 = icmp eq ptr %203, %39
  %209 = select i1 %207, i1 true, i1 %208
  br i1 %209, label %210, label %224

210:                                              ; preds = %201
  %211 = getelementptr inbounds %struct.sv, ptr %203, i64 0, i32 1
  %212 = load i32, ptr %211, align 8, !tbaa !41
  %213 = icmp ugt i32 %212, 1
  br i1 %213, label %214, label %216

214:                                              ; preds = %210
  %215 = add i32 %212, -1
  store i32 %215, ptr %211, align 8, !tbaa !41
  br label %217

216:                                              ; preds = %210
  tail call void @Perl_sv_free2(ptr noundef nonnull %203, i32 noundef %212) #17
  br label %217

217:                                              ; preds = %214, %216
  %218 = tail call ptr @Perl_newSV_type(i32 noundef 11) #17
  %219 = getelementptr inbounds %struct.av, ptr %218, i64 0, i32 2
  %220 = load i32, ptr %219, align 4, !tbaa !139
  %221 = and i32 %220, 1073741823
  %222 = or i32 %221, -2147483648
  store i32 %222, ptr %219, align 4, !tbaa !139
  store ptr %218, ptr %202, align 8, !tbaa !17
  %223 = load ptr, ptr @PL_curpad, align 8, !tbaa !6
  store ptr %218, ptr %223, align 8, !tbaa !6
  br label %238

224:                                              ; preds = %201
  %225 = getelementptr inbounds %struct.av, ptr %203, i64 0, i32 3
  %226 = load ptr, ptr %225, align 8, !tbaa !17
  %227 = load ptr, ptr %203, align 8, !tbaa !141
  %228 = getelementptr inbounds %struct.xpvav, ptr %227, i64 0, i32 4
  %229 = load ptr, ptr %228, align 8, !tbaa !144
  %230 = ptrtoint ptr %226 to i64
  %231 = ptrtoint ptr %229 to i64
  %232 = sub i64 %230, %231
  %233 = ashr exact i64 %232, 3
  %234 = getelementptr inbounds %struct.xpvav, ptr %227, i64 0, i32 3
  %235 = load i64, ptr %234, align 8, !tbaa !145
  %236 = add nsw i64 %233, %235
  store i64 %236, ptr %234, align 8, !tbaa !145
  store ptr %229, ptr %225, align 8, !tbaa !17
  %237 = getelementptr inbounds %struct.xpvav, ptr %227, i64 0, i32 2
  store i64 -1, ptr %237, align 8, !tbaa !142
  br label %238

238:                                              ; preds = %217, %224, %198
  %239 = icmp eq ptr %39, null
  br i1 %239, label %244, label %240

240:                                              ; preds = %238
  %241 = getelementptr inbounds %struct.av, ptr %39, i64 0, i32 1
  %242 = load i32, ptr %241, align 8, !tbaa !190
  %243 = add i32 %242, 1
  store i32 %243, ptr %241, align 8, !tbaa !190
  br label %244

244:                                              ; preds = %240, %238
  %245 = load i8, ptr %154, align 8, !tbaa !17
  %246 = and i8 %245, 15
  %247 = icmp eq i8 %246, 8
  br i1 %247, label %248, label %266

248:                                              ; preds = %244
  %249 = getelementptr inbounds %struct.block, ptr %154, i64 0, i32 8, i32 0, i32 4
  %250 = load i32, ptr %249, align 8, !tbaa !17
  %251 = getelementptr inbounds %struct.block, ptr %154, i64 0, i32 8, i32 0, i32 1
  %252 = load ptr, ptr %251, align 8, !tbaa !17
  %253 = load ptr, ptr %252, align 8, !tbaa !133
  %254 = getelementptr inbounds %struct.xpvcv, ptr %253, i64 0, i32 13
  store i32 %250, ptr %254, align 4, !tbaa !31
  %255 = icmp eq i32 %250, 0
  br i1 %255, label %256, label %266

256:                                              ; preds = %248
  %257 = load ptr, ptr %251, align 8, !tbaa !17
  %258 = icmp eq ptr %257, null
  br i1 %258, label %266, label %259

259:                                              ; preds = %256
  %260 = getelementptr inbounds %struct.sv, ptr %257, i64 0, i32 1
  %261 = load i32, ptr %260, align 8, !tbaa !41
  %262 = icmp ugt i32 %261, 1
  br i1 %262, label %263, label %265

263:                                              ; preds = %259
  %264 = add i32 %261, -1
  store i32 %264, ptr %260, align 8, !tbaa !41
  br label %266

265:                                              ; preds = %259
  tail call void @Perl_sv_free2(ptr noundef nonnull %257, i32 noundef %261) #17
  br label %266

266:                                              ; preds = %265, %263, %256, %248, %244
  %267 = load ptr, ptr @PL_scopestack, align 8, !tbaa !6
  %268 = load i32, ptr @PL_scopestack_ix, align 4, !tbaa !31
  %269 = add nsw i32 %268, -1
  %270 = sext i32 %269 to i64
  %271 = getelementptr inbounds i32, ptr %267, i64 %270
  %272 = load i32, ptr %271, align 4, !tbaa !31
  %273 = load i32, ptr @PL_savestack_ix, align 4, !tbaa !31
  %274 = icmp sgt i32 %273, %272
  br i1 %274, label %275, label %276

275:                                              ; preds = %266
  tail call void @Perl_leave_scope(i32 noundef %272) #17
  br label %276

276:                                              ; preds = %275, %266
  %277 = load ptr, ptr %103, align 8, !tbaa !133
  %278 = getelementptr inbounds %struct.xpvcv, ptr %277, i64 0, i32 6
  %279 = load ptr, ptr %278, align 8, !tbaa !17
  %280 = icmp eq ptr %279, null
  br i1 %280, label %281, label %307

281:                                              ; preds = %276
  %282 = getelementptr inbounds %struct.xpvcv, ptr %277, i64 0, i32 12
  %283 = load i32, ptr %282, align 4, !tbaa !135
  %284 = and i32 %283, 32768
  %285 = icmp eq i32 %284, 0
  br i1 %285, label %288, label %286

286:                                              ; preds = %281
  %287 = tail call ptr @Perl_cvgv_from_hek(ptr noundef nonnull %103) #17
  br label %291

288:                                              ; preds = %281
  %289 = getelementptr inbounds %struct.xpvcv, ptr %277, i64 0, i32 7
  %290 = load ptr, ptr %289, align 8, !tbaa !17
  br label %291

291:                                              ; preds = %286, %288
  %292 = phi ptr [ %287, %286 ], [ %290, %288 ]
  br i1 %239, label %300, label %293

293:                                              ; preds = %291
  %294 = getelementptr inbounds %struct.sv, ptr %39, i64 0, i32 1
  %295 = load i32, ptr %294, align 8, !tbaa !41
  %296 = icmp ugt i32 %295, 1
  br i1 %296, label %297, label %299

297:                                              ; preds = %293
  %298 = add i32 %295, -1
  store i32 %298, ptr %294, align 8, !tbaa !41
  br label %300

299:                                              ; preds = %293
  tail call void @Perl_sv_free2(ptr noundef nonnull %39, i32 noundef %295) #17
  br label %300

300:                                              ; preds = %291, %297, %299
  %301 = icmp eq ptr %292, null
  br i1 %301, label %305, label %302

302:                                              ; preds = %300
  %303 = tail call ptr @Perl_sv_newmortal() #17
  tail call void @Perl_gv_efullname4(ptr noundef %303, ptr noundef nonnull %292, ptr noundef null, i1 noundef zeroext true) #17
  %304 = tail call ptr (ptr, ...) @Perl_die(ptr noundef nonnull @.str.52, ptr noundef %303) #17
  br label %850

305:                                              ; preds = %300
  %306 = tail call ptr (ptr, ...) @Perl_die(ptr noundef nonnull @.str.53) #17
  br label %850

307:                                              ; preds = %276
  tail call void @Perl_save_strlen(ptr noundef nonnull @PL_tmps_floor) #17
  %308 = load i64, ptr @PL_tmps_ix, align 8, !tbaa !59
  store i64 %308, ptr @PL_tmps_floor, align 8, !tbaa !59
  tail call void @Perl_save_pushptr(ptr noundef nonnull %103, i32 noundef 11) #17
  %309 = load ptr, ptr %103, align 8, !tbaa !133
  %310 = getelementptr inbounds %struct.xpvcv, ptr %309, i64 0, i32 12
  %311 = load i32, ptr %310, align 4, !tbaa !135
  %312 = and i32 %311, 8
  %313 = icmp eq i32 %312, 0
  br i1 %313, label %438, label %314

314:                                              ; preds = %307
  br i1 %239, label %389, label %315

315:                                              ; preds = %314
  %316 = getelementptr inbounds %struct.sv, ptr %39, i64 0, i32 2
  %317 = load i32, ptr %316, align 4, !tbaa !31
  %318 = and i32 %317, 8388608
  %319 = icmp eq i32 %318, 0
  br i1 %319, label %324, label %320

320:                                              ; preds = %315
  %321 = tail call i32 @Perl_mg_size(ptr noundef nonnull %39) #17
  %322 = sext i32 %321 to i64
  %323 = load i32, ptr %316, align 4, !tbaa !139
  br label %328

324:                                              ; preds = %315
  %325 = load ptr, ptr %39, align 8, !tbaa !141
  %326 = getelementptr inbounds %struct.xpvav, ptr %325, i64 0, i32 2
  %327 = load i64, ptr %326, align 8, !tbaa !142
  br label %328

328:                                              ; preds = %320, %324
  %329 = phi i32 [ %323, %320 ], [ %317, %324 ]
  %330 = phi i64 [ %322, %320 ], [ %327, %324 ]
  %331 = add i64 %330, 1
  %332 = and i32 %329, 8388608
  %333 = icmp eq i32 %332, 0
  %334 = icmp eq i64 %331, 0
  br i1 %334, label %380, label %335

335:                                              ; preds = %328
  %336 = load ptr, ptr @PL_stack_max, align 8, !tbaa !6
  %337 = ptrtoint ptr %336 to i64
  %338 = ptrtoint ptr %159 to i64
  %339 = sub i64 %337, %338
  %340 = ashr exact i64 %339, 3
  %341 = icmp sgt i64 %340, %331
  br i1 %341, label %346, label %342

342:                                              ; preds = %335
  %343 = add nsw i64 %330, 2
  %344 = tail call ptr @Perl_stack_grow(ptr noundef %159, ptr noundef %159, i64 noundef %343) #17
  %345 = load i32, ptr %316, align 4, !tbaa !139
  br label %346

346:                                              ; preds = %335, %342
  %347 = phi i32 [ %345, %342 ], [ %329, %335 ]
  %348 = phi ptr [ %344, %342 ], [ %159, %335 ]
  %349 = and i32 %347, 1073741824
  %350 = icmp eq i32 %349, 0
  %351 = icmp slt i64 %330, 0
  br i1 %351, label %380, label %352

352:                                              ; preds = %346
  %353 = getelementptr inbounds %struct.av, ptr %39, i64 0, i32 3
  br label %354

354:                                              ; preds = %352, %375
  %355 = phi i64 [ 0, %352 ], [ %377, %375 ]
  br i1 %333, label %359, label %356

356:                                              ; preds = %354
  %357 = tail call ptr @Perl_av_fetch(ptr noundef nonnull %39, i64 noundef %355, i32 noundef 0) #17
  %358 = icmp eq ptr %357, null
  br i1 %358, label %372, label %362

359:                                              ; preds = %354
  %360 = load ptr, ptr %353, align 8, !tbaa !17
  %361 = getelementptr inbounds ptr, ptr %360, i64 %355
  br label %362

362:                                              ; preds = %356, %359
  %363 = phi ptr [ %361, %359 ], [ %357, %356 ]
  %364 = load ptr, ptr %363, align 8, !tbaa !6
  %365 = icmp eq ptr %364, null
  br i1 %365, label %372, label %366

366:                                              ; preds = %362
  br i1 %350, label %375, label %367

367:                                              ; preds = %366
  %368 = tail call ptr @Perl_sv_2mortal(ptr noundef nonnull %364) #17
  %369 = getelementptr inbounds %struct.sv, ptr %368, i64 0, i32 1
  %370 = load i32, ptr %369, align 8, !tbaa !41
  %371 = add i32 %370, 1
  store i32 %371, ptr %369, align 8, !tbaa !41
  br label %375

372:                                              ; preds = %356, %362
  %373 = tail call ptr @Perl_newSVavdefelem(ptr noundef nonnull %39, i64 noundef %355, i1 noundef zeroext true) #17
  %374 = tail call ptr @Perl_sv_2mortal(ptr noundef %373) #17
  br label %375

375:                                              ; preds = %366, %367, %372
  %376 = phi ptr [ %374, %372 ], [ %368, %367 ], [ %364, %366 ]
  %377 = add nuw i64 %355, 1
  %378 = getelementptr inbounds ptr, ptr %348, i64 %377
  store ptr %376, ptr %378, align 8, !tbaa !6
  %379 = icmp eq i64 %355, %330
  br i1 %379, label %380, label %354, !llvm.loop !191

380:                                              ; preds = %375, %346, %328
  %381 = phi ptr [ %159, %328 ], [ %348, %346 ], [ %348, %375 ]
  %382 = getelementptr inbounds ptr, ptr %381, i64 %331
  %383 = getelementptr inbounds %struct.sv, ptr %39, i64 0, i32 1
  %384 = load i32, ptr %383, align 8, !tbaa !41
  %385 = icmp ugt i32 %384, 1
  br i1 %385, label %386, label %388

386:                                              ; preds = %380
  %387 = add i32 %384, -1
  store i32 %387, ptr %383, align 8, !tbaa !41
  br label %389

388:                                              ; preds = %380
  tail call void @Perl_sv_free2(ptr noundef nonnull %39, i32 noundef %384) #17
  br label %389

389:                                              ; preds = %314, %386, %388
  %390 = phi ptr [ %382, %386 ], [ %382, %388 ], [ %159, %314 ]
  %391 = phi ptr [ %381, %386 ], [ %381, %388 ], [ %159, %314 ]
  %392 = load i8, ptr %154, align 8, !tbaa !17
  %393 = and i8 %392, 47
  %394 = icmp eq i8 %393, 40
  br i1 %394, label %395, label %411

395:                                              ; preds = %389
  %396 = load ptr, ptr @PL_defgv, align 8, !tbaa !6
  %397 = getelementptr inbounds %struct.gv, ptr %396, i64 0, i32 3
  %398 = load ptr, ptr %397, align 8, !tbaa !17
  %399 = getelementptr inbounds %struct.gp, ptr %398, i64 0, i32 6
  %400 = load ptr, ptr %399, align 8, !tbaa !138
  %401 = getelementptr inbounds %struct.block, ptr %154, i64 0, i32 8, i32 0, i32 2
  %402 = load ptr, ptr %401, align 8, !tbaa !17
  store ptr %402, ptr %399, align 8, !tbaa !138
  %403 = icmp eq ptr %400, null
  br i1 %403, label %411, label %404

404:                                              ; preds = %395
  %405 = getelementptr inbounds %struct.sv, ptr %400, i64 0, i32 1
  %406 = load i32, ptr %405, align 8, !tbaa !41
  %407 = icmp ugt i32 %406, 1
  br i1 %407, label %408, label %410

408:                                              ; preds = %404
  %409 = add i32 %406, -1
  store i32 %409, ptr %405, align 8, !tbaa !41
  br label %411

410:                                              ; preds = %404
  tail call void @Perl_sv_free2(ptr noundef nonnull %400, i32 noundef %406) #17
  br label %411

411:                                              ; preds = %410, %408, %395, %389
  %412 = getelementptr inbounds %struct.block, ptr %154, i64 0, i32 8
  %413 = load ptr, ptr %412, align 8, !tbaa !17
  %414 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %415 = getelementptr inbounds %struct.stackinfo, ptr %414, i64 0, i32 1
  %416 = load ptr, ptr %415, align 8, !tbaa !14
  %417 = getelementptr inbounds %struct.stackinfo, ptr %414, i64 0, i32 4
  %418 = load i32, ptr %417, align 8, !tbaa !16
  %419 = add nsw i32 %418, -1
  store i32 %419, ptr %417, align 8, !tbaa !16
  %420 = sext i32 %418 to i64
  %421 = getelementptr inbounds %struct.context, ptr %416, i64 %420
  %422 = getelementptr inbounds %struct.block, ptr %421, i64 0, i32 4
  %423 = load ptr, ptr %422, align 8, !tbaa !17
  store ptr %423, ptr @PL_curcop, align 8, !tbaa !6
  %424 = load ptr, ptr @PL_markstack, align 8, !tbaa !6
  %425 = getelementptr inbounds %struct.block, ptr %421, i64 0, i32 5
  %426 = load i32, ptr %425, align 8, !tbaa !17
  %427 = sext i32 %426 to i64
  %428 = getelementptr inbounds i32, ptr %424, i64 %427
  store ptr %428, ptr @PL_markstack_ptr, align 8, !tbaa !6
  %429 = getelementptr inbounds %struct.block, ptr %421, i64 0, i32 6
  %430 = load i32, ptr %429, align 4, !tbaa !17
  store i32 %430, ptr @PL_scopestack_ix, align 4, !tbaa !31
  %431 = getelementptr inbounds %struct.block, ptr %421, i64 0, i32 7
  %432 = load ptr, ptr %431, align 8, !tbaa !17
  store ptr %432, ptr @PL_curpm, align 8, !tbaa !6
  %433 = getelementptr inbounds i32, ptr %428, i64 1
  store ptr %433, ptr @PL_markstack_ptr, align 8, !tbaa !6
  %434 = load ptr, ptr @PL_markstack_max, align 8, !tbaa !6
  %435 = icmp eq ptr %433, %434
  br i1 %435, label %436, label %586

436:                                              ; preds = %411
  %437 = tail call ptr @Perl_markstack_grow() #17
  br label %586

438:                                              ; preds = %307
  %439 = getelementptr inbounds %struct.xpvcv, ptr %309, i64 0, i32 9
  %440 = load ptr, ptr %439, align 8, !tbaa !17
  %441 = getelementptr inbounds %struct.block, ptr %154, i64 0, i32 8, i32 0, i32 1
  store ptr %103, ptr %441, align 8, !tbaa !17
  %442 = load ptr, ptr %103, align 8, !tbaa !133
  %443 = getelementptr inbounds %struct.xpvcv, ptr %442, i64 0, i32 13
  %444 = load i32, ptr %443, align 4, !tbaa !31
  %445 = getelementptr inbounds %struct.block, ptr %154, i64 0, i32 8, i32 0, i32 4
  store i32 %444, ptr %445, align 8, !tbaa !17
  %446 = load ptr, ptr %103, align 8, !tbaa !133
  %447 = getelementptr inbounds %struct.xpvcv, ptr %446, i64 0, i32 13
  %448 = load i32, ptr %447, align 4, !tbaa !31
  %449 = add nsw i32 %448, 1
  store i32 %449, ptr %447, align 4, !tbaa !31
  %450 = icmp slt i32 %448, 1
  br i1 %450, label %451, label %454

451:                                              ; preds = %438
  %452 = load i32, ptr %104, align 8, !tbaa !41
  %453 = add i32 %452, 1
  store i32 %453, ptr %104, align 8, !tbaa !41
  br label %463

454:                                              ; preds = %438
  %455 = icmp eq i32 %449, 100
  br i1 %455, label %456, label %459

456:                                              ; preds = %454
  %457 = tail call zeroext i1 @Perl_ckwarn(i32 noundef 18) #17
  br i1 %457, label %458, label %459

458:                                              ; preds = %456
  tail call void @Perl_sub_crush_depth(ptr noundef nonnull %103) #17
  br label %459

459:                                              ; preds = %458, %456, %454
  %460 = load ptr, ptr %103, align 8, !tbaa !133
  %461 = getelementptr inbounds %struct.xpvcv, ptr %460, i64 0, i32 13
  %462 = load i32, ptr %461, align 4, !tbaa !31
  tail call void @Perl_pad_push(ptr noundef %440, i32 noundef %462) #17
  br label %463

463:                                              ; preds = %459, %451
  %464 = getelementptr inbounds %struct.block, ptr %154, i64 0, i32 4
  %465 = load ptr, ptr %464, align 8, !tbaa !17
  store ptr %465, ptr @PL_curcop, align 8, !tbaa !6
  %466 = load ptr, ptr @PL_comppad, align 8, !tbaa !6
  tail call void @Perl_save_pushptr(ptr noundef %466, i32 noundef 7) #17
  %467 = getelementptr inbounds %struct.padlist, ptr %440, i64 0, i32 1
  %468 = load ptr, ptr %467, align 8, !tbaa !172
  %469 = load ptr, ptr %103, align 8, !tbaa !133
  %470 = getelementptr inbounds %struct.xpvcv, ptr %469, i64 0, i32 13
  %471 = load i32, ptr %470, align 4, !tbaa !31
  %472 = sext i32 %471 to i64
  %473 = getelementptr inbounds ptr, ptr %468, i64 %472
  %474 = load ptr, ptr %473, align 8, !tbaa !6
  store ptr %474, ptr @PL_comppad, align 8, !tbaa !6
  %475 = getelementptr inbounds %struct.av, ptr %474, i64 0, i32 3
  %476 = load ptr, ptr %475, align 8, !tbaa !17
  store ptr %476, ptr @PL_curpad, align 8, !tbaa !6
  %477 = load i8, ptr %154, align 8, !tbaa !17
  %478 = and i8 %477, 32
  %479 = icmp eq i8 %478, 0
  br i1 %479, label %526, label %480

480:                                              ; preds = %463
  %481 = getelementptr inbounds %struct.block, ptr %154, i64 0, i32 8, i32 0, i32 5
  store ptr %474, ptr %481, align 8, !tbaa !17
  br i1 %239, label %493, label %482

482:                                              ; preds = %480
  %483 = load ptr, ptr @PL_curpad, align 8, !tbaa !6
  %484 = load ptr, ptr %483, align 8, !tbaa !6
  %485 = icmp eq ptr %484, null
  br i1 %485, label %502, label %486

486:                                              ; preds = %482
  %487 = getelementptr inbounds %struct.sv, ptr %484, i64 0, i32 1
  %488 = load i32, ptr %487, align 8, !tbaa !41
  %489 = icmp ugt i32 %488, 1
  br i1 %489, label %490, label %492

490:                                              ; preds = %486
  %491 = add i32 %488, -1
  store i32 %491, ptr %487, align 8, !tbaa !41
  br label %502

492:                                              ; preds = %486
  tail call void @Perl_sv_free2(ptr noundef nonnull %484, i32 noundef %488) #17
  br label %502

493:                                              ; preds = %480
  %494 = load ptr, ptr @PL_defgv, align 8, !tbaa !6
  %495 = getelementptr inbounds %struct.gv, ptr %494, i64 0, i32 3
  %496 = load ptr, ptr %495, align 8, !tbaa !17
  %497 = getelementptr inbounds %struct.gp, ptr %496, i64 0, i32 6
  %498 = load ptr, ptr %497, align 8, !tbaa !138
  %499 = icmp eq ptr %498, null
  br i1 %499, label %534, label %500

500:                                              ; preds = %493
  %501 = getelementptr inbounds %struct.gp, ptr %496, i64 0, i32 6
  store ptr %39, ptr %501, align 8, !tbaa !138
  br label %518

502:                                              ; preds = %492, %490, %482
  %503 = getelementptr inbounds %struct.block, ptr %154, i64 0, i32 8, i32 0, i32 3
  store ptr %39, ptr %503, align 8, !tbaa !17
  %504 = load ptr, ptr @PL_curpad, align 8, !tbaa !6
  store ptr %39, ptr %504, align 8, !tbaa !6
  %505 = load ptr, ptr @PL_defgv, align 8, !tbaa !6
  %506 = getelementptr inbounds %struct.gv, ptr %505, i64 0, i32 3
  %507 = load ptr, ptr %506, align 8, !tbaa !17
  %508 = getelementptr inbounds %struct.gp, ptr %507, i64 0, i32 6
  %509 = load ptr, ptr %508, align 8, !tbaa !138
  %510 = icmp eq ptr %39, %509
  br i1 %510, label %534, label %511

511:                                              ; preds = %502
  %512 = getelementptr inbounds %struct.sv, ptr %39, i64 0, i32 1
  %513 = load i32, ptr %512, align 8, !tbaa !41
  %514 = add i32 %513, 1
  store i32 %514, ptr %512, align 8, !tbaa !41
  %515 = load ptr, ptr %506, align 8, !tbaa !17
  %516 = getelementptr inbounds %struct.gp, ptr %515, i64 0, i32 6
  store ptr %39, ptr %516, align 8, !tbaa !138
  %517 = icmp eq ptr %509, null
  br i1 %517, label %534, label %518

518:                                              ; preds = %500, %511
  %519 = phi ptr [ %498, %500 ], [ %509, %511 ]
  %520 = getelementptr inbounds %struct.sv, ptr %519, i64 0, i32 1
  %521 = load i32, ptr %520, align 8, !tbaa !41
  %522 = icmp ugt i32 %521, 1
  br i1 %522, label %523, label %525

523:                                              ; preds = %518
  %524 = add i32 %521, -1
  store i32 %524, ptr %520, align 8, !tbaa !41
  br label %534

525:                                              ; preds = %518
  tail call void @Perl_sv_free2(ptr noundef nonnull %519, i32 noundef %521) #17
  br label %534

526:                                              ; preds = %463
  br i1 %239, label %534, label %527

527:                                              ; preds = %526
  %528 = getelementptr inbounds %struct.sv, ptr %39, i64 0, i32 1
  %529 = load i32, ptr %528, align 8, !tbaa !41
  %530 = icmp ugt i32 %529, 1
  br i1 %530, label %531, label %533

531:                                              ; preds = %527
  %532 = add i32 %529, -1
  store i32 %532, ptr %528, align 8, !tbaa !41
  br label %534

533:                                              ; preds = %527
  tail call void @Perl_sv_free2(ptr noundef nonnull %39, i32 noundef %529) #17
  br label %534

534:                                              ; preds = %533, %531, %526, %525, %523, %511, %502, %493
  %535 = load i32, ptr @PL_perldb, align 4, !tbaa !31
  %536 = and i32 %535, 1
  %537 = icmp eq i32 %536, 0
  br i1 %537, label %564, label %538

538:                                              ; preds = %534
  tail call void @Perl_get_db_sub(ptr noundef null, ptr noundef nonnull %103) #17
  %539 = load i32, ptr @PL_perldb, align 4, !tbaa !31
  %540 = and i32 %539, 128
  %541 = icmp eq i32 %540, 0
  br i1 %541, label %564, label %542

542:                                              ; preds = %538
  %543 = tail call ptr @Perl_get_cvn_flags(ptr noundef nonnull @.str.58, i64 noundef 8, i32 noundef 0) #17
  %544 = icmp eq ptr %543, null
  br i1 %544, label %564, label %545

545:                                              ; preds = %542
  %546 = load ptr, ptr @PL_markstack_ptr, align 8, !tbaa !6
  %547 = getelementptr inbounds i32, ptr %546, i64 1
  store ptr %547, ptr @PL_markstack_ptr, align 8, !tbaa !6
  %548 = load ptr, ptr @PL_markstack_max, align 8, !tbaa !6
  %549 = icmp eq ptr %547, %548
  br i1 %549, label %550, label %552

550:                                              ; preds = %545
  %551 = tail call ptr @Perl_markstack_grow() #17
  br label %552

552:                                              ; preds = %545, %550
  %553 = phi ptr [ %551, %550 ], [ %547, %545 ]
  %554 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !6
  %555 = load ptr, ptr @PL_stack_base, align 8, !tbaa !6
  %556 = ptrtoint ptr %554 to i64
  %557 = ptrtoint ptr %555 to i64
  %558 = sub i64 %556, %557
  %559 = lshr exact i64 %558, 3
  %560 = trunc i64 %559 to i32
  store i32 %560, ptr %553, align 4, !tbaa !31
  %561 = tail call i32 @Perl_call_sv(ptr noundef nonnull %543, i32 noundef 66) #17
  %562 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !6
  %563 = getelementptr inbounds ptr, ptr %562, i64 -1
  store ptr %563, ptr @PL_stack_sp, align 8, !tbaa !6
  br label %564

564:                                              ; preds = %534, %538, %552, %542
  %565 = load ptr, ptr %103, align 8, !tbaa !133
  %566 = getelementptr inbounds %struct.xpvcv, ptr %565, i64 0, i32 5
  %567 = load ptr, ptr %566, align 8, !tbaa !17
  br label %841

568:                                              ; preds = %27, %23
  %569 = and i32 %24, 2098176
  %570 = icmp eq i32 %569, 1024
  br i1 %570, label %571, label %577

571:                                              ; preds = %568
  %572 = load ptr, ptr %15, align 8, !tbaa !72
  %573 = getelementptr inbounds %struct.xpv, ptr %572, i64 0, i32 2
  %574 = load i64, ptr %573, align 8, !tbaa !53
  store i64 %574, ptr %2, align 8, !tbaa !59
  %575 = getelementptr inbounds %struct.sv, ptr %15, i64 0, i32 3
  %576 = load ptr, ptr %575, align 8, !tbaa !17
  br label %581

577:                                              ; preds = %568
  %578 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %15, ptr noundef nonnull %2, i32 noundef 32) #17
  %579 = load i32, ptr %16, align 4, !tbaa !49
  %580 = load i64, ptr %2, align 8
  br label %581

581:                                              ; preds = %571, %577
  %582 = phi i64 [ %574, %571 ], [ %580, %577 ]
  %583 = phi i32 [ %24, %571 ], [ %579, %577 ]
  %584 = phi ptr [ %576, %571 ], [ %578, %577 ]
  %585 = and i32 %583, 536870912
  br label %608

586:                                              ; preds = %436, %411
  %587 = phi ptr [ %437, %436 ], [ %433, %411 ]
  %588 = load ptr, ptr @PL_stack_base, align 8, !tbaa !6
  %589 = ptrtoint ptr %391 to i64
  %590 = ptrtoint ptr %588 to i64
  %591 = sub i64 %589, %590
  %592 = lshr exact i64 %591, 3
  %593 = trunc i64 %592 to i32
  store i32 %593, ptr %587, align 4, !tbaa !31
  store ptr %390, ptr @PL_stack_sp, align 8, !tbaa !6
  %594 = load ptr, ptr %103, align 8, !tbaa !133
  %595 = getelementptr inbounds %struct.xpvcv, ptr %594, i64 0, i32 6
  %596 = load ptr, ptr %595, align 8, !tbaa !17
  tail call void %596(ptr noundef nonnull %103) #17
  tail call void @Perl_pop_scope() #17
  br label %844

597:                                              ; preds = %0
  %598 = icmp sgt i8 %10, -1
  br i1 %598, label %599, label %608

599:                                              ; preds = %597
  %600 = getelementptr inbounds %struct.pvop, ptr %4, i64 0, i32 7
  %601 = load ptr, ptr %600, align 8, !tbaa !181
  %602 = getelementptr inbounds %struct.pvop, ptr %4, i64 0, i32 6
  %603 = load i8, ptr %602, align 1, !tbaa !183
  %604 = and i8 %603, -128
  %605 = zext i8 %604 to i32
  %606 = shl nuw nsw i32 %605, 22
  %607 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %601) #18
  store i64 %607, ptr %2, align 8, !tbaa !59
  br label %608

608:                                              ; preds = %581, %597, %599
  %609 = phi i64 [ 0, %597 ], [ %607, %599 ], [ %582, %581 ]
  %610 = phi i32 [ 0, %597 ], [ %606, %599 ], [ %585, %581 ]
  %611 = phi ptr [ null, %597 ], [ %601, %599 ], [ %584, %581 ]
  %612 = phi ptr [ %3, %597 ], [ %3, %599 ], [ %14, %581 ]
  %613 = icmp ne i64 %609, 0
  %614 = select i1 %8, i1 true, i1 %613
  br i1 %614, label %617, label %615

615:                                              ; preds = %608
  %616 = call ptr (ptr, ...) @Perl_die(ptr noundef nonnull @.str.59, ptr noundef nonnull @.str.51) #17
  br label %850

617:                                              ; preds = %608
  %618 = load i32, ptr @PL_sig_pending, align 4, !tbaa !31
  %619 = icmp eq i32 %618, 0
  br i1 %619, label %623, label %620

620:                                              ; preds = %617
  %621 = load ptr, ptr @PL_signalhook, align 8, !tbaa !6
  call void %621() #17
  %622 = load i64, ptr %2, align 8, !tbaa !59
  br label %623

623:                                              ; preds = %617, %620
  %624 = phi i64 [ %609, %617 ], [ %622, %620 ]
  %625 = icmp eq i64 %624, 0
  br i1 %625, label %838, label %626

626:                                              ; preds = %623
  store ptr null, ptr @PL_lastgotoprobe, align 8, !tbaa !6
  store ptr null, ptr %1, align 16, !tbaa !6
  %627 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %628 = getelementptr inbounds %struct.stackinfo, ptr %627, i64 0, i32 4
  %629 = load i32, ptr %628, align 8, !tbaa !16
  %630 = icmp sgt i32 %629, -1
  br i1 %630, label %631, label %719

631:                                              ; preds = %626
  %632 = getelementptr inbounds ptr, ptr %1, i64 64
  %633 = zext i32 %629 to i64
  br label %634

634:                                              ; preds = %631, %711
  %635 = phi i64 [ %633, %631 ], [ %716, %711 ]
  %636 = phi ptr [ null, %631 ], [ %714, %711 ]
  %637 = phi i8 [ 0, %631 ], [ %713, %711 ]
  %638 = phi i8 [ 0, %631 ], [ %712, %711 ]
  %639 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %640 = getelementptr inbounds %struct.stackinfo, ptr %639, i64 0, i32 1
  %641 = load ptr, ptr %640, align 8, !tbaa !14
  %642 = getelementptr inbounds %struct.context, ptr %641, i64 %635
  %643 = load i8, ptr %642, align 8, !tbaa !17
  %644 = zext i8 %643 to i32
  %645 = and i32 %644, 15
  switch i32 %645, label %678 [
    i32 10, label %646
    i32 7, label %653
    i32 6, label %653
    i32 4, label %653
    i32 5, label %653
    i32 3, label %653
    i32 1, label %653
    i32 11, label %711
    i32 2, label %658
    i32 8, label %664
    i32 9, label %676
    i32 0, label %676
  ]

646:                                              ; preds = %634
  %647 = and i32 %644, 79
  %648 = icmp eq i32 %647, 74
  br i1 %648, label %653, label %649

649:                                              ; preds = %646
  %650 = icmp eq ptr %636, null
  %651 = getelementptr inbounds %struct.block, ptr %636, i64 0, i32 8, i32 0, i32 2
  %652 = select i1 %650, ptr @PL_eval_root, ptr %651
  br label %682

653:                                              ; preds = %646, %634, %634, %634, %634, %634, %634
  %654 = phi i8 [ %638, %634 ], [ %638, %634 ], [ %638, %634 ], [ %638, %634 ], [ %638, %634 ], [ %638, %634 ], [ 1, %646 ]
  %655 = getelementptr inbounds %struct.block, ptr %642, i64 0, i32 4
  %656 = load ptr, ptr %655, align 8, !tbaa !17
  %657 = getelementptr inbounds %struct.cop, ptr %656, i64 0, i32 1
  br label %682

658:                                              ; preds = %634
  %659 = icmp eq i64 %635, 0
  br i1 %659, label %682, label %660

660:                                              ; preds = %658
  %661 = getelementptr inbounds %struct.block, ptr %642, i64 0, i32 4
  %662 = load ptr, ptr %661, align 8, !tbaa !17
  %663 = getelementptr inbounds %struct.cop, ptr %662, i64 0, i32 1
  br label %682

664:                                              ; preds = %634
  %665 = getelementptr inbounds %struct.block, ptr %642, i64 0, i32 8, i32 0, i32 1
  %666 = load ptr, ptr %665, align 8, !tbaa !17
  %667 = load ptr, ptr %666, align 8, !tbaa !133
  %668 = getelementptr inbounds %struct.xpvcv, ptr %667, i64 0, i32 13
  %669 = load i32, ptr %668, align 4, !tbaa !31
  %670 = icmp ne i32 %669, 0
  %671 = and i8 %643, 16
  %672 = icmp eq i8 %671, 0
  %673 = and i1 %672, %670
  br i1 %673, label %674, label %676

674:                                              ; preds = %664
  %675 = getelementptr inbounds %struct.xpvcv, ptr %667, i64 0, i32 6
  br label %682

676:                                              ; preds = %664, %634, %634
  %677 = call ptr (ptr, ...) @Perl_die(ptr noundef nonnull @.str.60) #17
  br label %850

678:                                              ; preds = %634
  %679 = icmp eq i64 %635, 0
  br i1 %679, label %682, label %680

680:                                              ; preds = %678
  %681 = call ptr (ptr, ...) @Perl_die(ptr noundef nonnull @.str.61, i32 noundef %645, i64 noundef %635) #17
  br label %850

682:                                              ; preds = %678, %658, %660, %674, %653, %649
  %683 = phi ptr [ %675, %674 ], [ %663, %660 ], [ %657, %653 ], [ %652, %649 ], [ @PL_main_root, %658 ], [ @PL_main_root, %678 ]
  %684 = phi i8 [ %638, %674 ], [ %638, %660 ], [ %654, %653 ], [ 1, %649 ], [ %638, %658 ], [ %638, %678 ]
  %685 = phi i8 [ %637, %674 ], [ 1, %660 ], [ %637, %653 ], [ %637, %649 ], [ %637, %658 ], [ %637, %678 ]
  %686 = phi ptr [ %636, %674 ], [ %636, %660 ], [ %636, %653 ], [ %642, %649 ], [ %636, %658 ], [ %636, %678 ]
  %687 = load ptr, ptr %683, align 8, !tbaa !17
  %688 = icmp eq ptr %687, null
  br i1 %688, label %710, label %689

689:                                              ; preds = %682
  %690 = load i64, ptr %2, align 8, !tbaa !59
  %691 = call fastcc ptr @S_dofindlabel(ptr noundef nonnull %687, ptr noundef %611, i64 noundef %690, i32 noundef %610, ptr noundef nonnull %1, ptr noundef nonnull %632)
  %692 = icmp eq ptr %691, null
  br i1 %692, label %693, label %724

693:                                              ; preds = %689
  %694 = getelementptr inbounds %struct.op, ptr %687, i64 0, i32 1
  %695 = load ptr, ptr %694, align 8, !tbaa !192
  %696 = icmp eq ptr %695, null
  br i1 %696, label %710, label %697

697:                                              ; preds = %693
  %698 = getelementptr inbounds %struct.op, ptr %695, i64 0, i32 4
  %699 = load i16, ptr %698, align 8
  %700 = and i16 %699, 511
  %701 = icmp eq i16 %700, 195
  br i1 %701, label %702, label %710

702:                                              ; preds = %697
  %703 = getelementptr inbounds %struct.op, ptr %695, i64 0, i32 1
  %704 = load ptr, ptr %703, align 8, !tbaa !192
  %705 = icmp eq ptr %704, null
  br i1 %705, label %710, label %706

706:                                              ; preds = %702
  %707 = load i64, ptr %2, align 8, !tbaa !59
  %708 = call fastcc ptr @S_dofindlabel(ptr noundef nonnull %704, ptr noundef %611, i64 noundef %707, i32 noundef %610, ptr noundef nonnull %1, ptr noundef nonnull %632)
  %709 = icmp eq ptr %708, null
  br i1 %709, label %710, label %724

710:                                              ; preds = %706, %702, %697, %693, %682
  store ptr %687, ptr @PL_lastgotoprobe, align 8, !tbaa !6
  br label %711

711:                                              ; preds = %634, %710
  %712 = phi i8 [ %684, %710 ], [ %638, %634 ]
  %713 = phi i8 [ %685, %710 ], [ %637, %634 ]
  %714 = phi ptr [ %686, %710 ], [ %636, %634 ]
  %715 = icmp sgt i64 %635, 0
  %716 = add nsw i64 %635, -1
  br i1 %715, label %634, label %717, !llvm.loop !193

717:                                              ; preds = %711
  %718 = load i64, ptr %2, align 8, !tbaa !59
  br label %719

719:                                              ; preds = %717, %626
  %720 = phi i64 [ %718, %717 ], [ %624, %626 ]
  %721 = icmp ne i32 %610, 0
  %722 = zext i1 %721 to i32
  %723 = call ptr (ptr, ...) @Perl_die(ptr noundef nonnull @.str.62, i32 noundef %722, i64 noundef %720, ptr noundef %611) #17
  br label %850

724:                                              ; preds = %689, %706
  %725 = phi ptr [ %708, %706 ], [ %691, %689 ]
  %726 = trunc i64 %635 to i32
  %727 = and i8 %684, 1
  %728 = icmp eq i8 %727, 0
  %729 = load ptr, ptr %1, align 16
  %730 = icmp eq ptr %729, null
  %731 = select i1 %728, i1 true, i1 %730
  %732 = getelementptr inbounds [64 x ptr], ptr %1, i64 0, i64 1
  %733 = load ptr, ptr %732, align 8
  %734 = icmp eq ptr %733, null
  %735 = select i1 %731, i1 true, i1 %734
  br i1 %735, label %750, label %741

736:                                              ; preds = %741
  %737 = add nuw i64 %742, 1
  %738 = getelementptr inbounds [64 x ptr], ptr %1, i64 0, i64 %737
  %739 = load ptr, ptr %738, align 8, !tbaa !6
  %740 = icmp eq ptr %739, null
  br i1 %740, label %750, label %741, !llvm.loop !194

741:                                              ; preds = %724, %736
  %742 = phi i64 [ %737, %736 ], [ 1, %724 ]
  %743 = phi ptr [ %739, %736 ], [ %733, %724 ]
  %744 = getelementptr inbounds %struct.op, ptr %743, i64 0, i32 4
  %745 = load i16, ptr %744, align 8
  %746 = and i16 %745, 511
  %747 = icmp eq i16 %746, 199
  br i1 %747, label %748, label %736

748:                                              ; preds = %741
  %749 = call ptr (ptr, ...) @Perl_die(ptr noundef nonnull @.str.63) #17
  br label %850

750:                                              ; preds = %736, %724
  %751 = icmp ne ptr %729, null
  %752 = icmp ne ptr %733, null
  %753 = select i1 %751, i1 %752, i1 false
  br i1 %753, label %754, label %767

754:                                              ; preds = %750
  %755 = getelementptr inbounds %struct.op, ptr %733, i64 0, i32 4
  %756 = load i16, ptr %755, align 8
  %757 = and i16 %756, 511
  %758 = icmp eq i16 %757, 196
  %759 = and i8 %685, 1
  %760 = icmp ne i8 %759, 0
  %761 = select i1 %758, i1 %760, i1 false
  %762 = select i1 %761, i64 2, i64 1
  %763 = getelementptr inbounds [64 x ptr], ptr %1, i64 0, i64 %762
  %764 = load ptr, ptr %763, align 8, !tbaa !6
  %765 = icmp eq ptr %764, null
  br i1 %765, label %767, label %766

766:                                              ; preds = %754
  call void (i32, ptr, ...) @Perl_ck_warner_d(i32 noundef 2, ptr noundef nonnull @.str.64) #17
  br label %767

767:                                              ; preds = %754, %766, %750
  %768 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %769 = getelementptr inbounds %struct.stackinfo, ptr %768, i64 0, i32 4
  %770 = load i32, ptr %769, align 8, !tbaa !16
  %771 = icmp sgt i32 %770, %726
  br i1 %771, label %772, label %801

772:                                              ; preds = %767
  call void @Perl_dounwind(i32 noundef %726)
  %773 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %774 = getelementptr inbounds %struct.stackinfo, ptr %773, i64 0, i32 1
  %775 = load ptr, ptr %774, align 8, !tbaa !14
  %776 = getelementptr inbounds %struct.stackinfo, ptr %773, i64 0, i32 4
  %777 = load i32, ptr %776, align 8, !tbaa !16
  %778 = sext i32 %777 to i64
  %779 = getelementptr inbounds %struct.context, ptr %775, i64 %778
  %780 = load ptr, ptr @PL_stack_base, align 8, !tbaa !6
  %781 = getelementptr inbounds %struct.block, ptr %779, i64 0, i32 3
  %782 = load i32, ptr %781, align 4, !tbaa !17
  %783 = sext i32 %782 to i64
  %784 = getelementptr inbounds ptr, ptr %780, i64 %783
  store ptr %784, ptr @PL_stack_sp, align 8, !tbaa !6
  %785 = load ptr, ptr @PL_markstack, align 8, !tbaa !6
  %786 = getelementptr inbounds %struct.block, ptr %779, i64 0, i32 5
  %787 = load i32, ptr %786, align 8, !tbaa !17
  %788 = sext i32 %787 to i64
  %789 = getelementptr inbounds i32, ptr %785, i64 %788
  store ptr %789, ptr @PL_markstack_ptr, align 8, !tbaa !6
  %790 = getelementptr inbounds %struct.block, ptr %779, i64 0, i32 6
  %791 = load i32, ptr %790, align 4, !tbaa !17
  store i32 %791, ptr @PL_scopestack_ix, align 4, !tbaa !31
  %792 = getelementptr inbounds %struct.block, ptr %779, i64 0, i32 7
  %793 = load ptr, ptr %792, align 8, !tbaa !17
  store ptr %793, ptr @PL_curpm, align 8, !tbaa !6
  %794 = load ptr, ptr @PL_scopestack, align 8, !tbaa !6
  %795 = sext i32 %791 to i64
  %796 = getelementptr inbounds i32, ptr %794, i64 %795
  %797 = load i32, ptr %796, align 4, !tbaa !31
  %798 = load i32, ptr @PL_savestack_ix, align 4, !tbaa !31
  %799 = icmp sgt i32 %798, %797
  br i1 %799, label %800, label %801

800:                                              ; preds = %772
  call void @Perl_leave_scope(i32 noundef %797) #17
  br label %801

801:                                              ; preds = %800, %772, %767
  %802 = load ptr, ptr %1, align 16, !tbaa !6
  %803 = icmp ne ptr %802, null
  %804 = load ptr, ptr %732, align 8
  %805 = icmp ne ptr %804, null
  %806 = select i1 %803, i1 %805, i1 false
  br i1 %806, label %807, label %838

807:                                              ; preds = %801
  %808 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %809 = getelementptr inbounds %struct.op, ptr %804, i64 0, i32 4
  %810 = load i16, ptr %809, align 8
  %811 = and i16 %810, 511
  %812 = icmp eq i16 %811, 196
  %813 = and i8 %685, 1
  %814 = icmp ne i8 %813, 0
  %815 = select i1 %812, i1 %814, i1 false
  %816 = select i1 %815, i64 2, i64 1
  %817 = getelementptr inbounds [64 x ptr], ptr %1, i64 0, i64 %816
  %818 = load ptr, ptr %817, align 8, !tbaa !6
  %819 = icmp eq ptr %818, null
  br i1 %819, label %835, label %820

820:                                              ; preds = %807, %827
  %821 = phi i64 [ %831, %827 ], [ %816, %807 ]
  %822 = phi ptr [ %833, %827 ], [ %818, %807 ]
  store ptr %822, ptr @PL_op, align 8, !tbaa !6
  %823 = getelementptr inbounds %struct.op, ptr %822, i64 0, i32 4
  %824 = load i16, ptr %823, align 8
  %825 = and i16 %824, 511
  %826 = icmp eq i16 %825, 199
  br i1 %826, label %836, label %827

827:                                              ; preds = %820
  %828 = getelementptr inbounds %struct.op, ptr %822, i64 0, i32 2
  %829 = load ptr, ptr %828, align 8, !tbaa !195
  %830 = call ptr %829() #17
  %831 = add nuw i64 %821, 1
  %832 = getelementptr inbounds [64 x ptr], ptr %1, i64 0, i64 %831
  %833 = load ptr, ptr %832, align 8, !tbaa !6
  %834 = icmp eq ptr %833, null
  br i1 %834, label %835, label %820, !llvm.loop !196

835:                                              ; preds = %827, %807
  store ptr %808, ptr @PL_op, align 8, !tbaa !6
  br label %838

836:                                              ; preds = %820
  %837 = call ptr (ptr, ...) @Perl_die(ptr noundef nonnull @.str.63) #17
  br label %850

838:                                              ; preds = %835, %801, %623
  %839 = phi ptr [ null, %623 ], [ %725, %835 ], [ %725, %801 ]
  br i1 %8, label %840, label %841

840:                                              ; preds = %838
  store ptr %839, ptr @PL_restartop, align 8, !tbaa !6
  store i8 1, ptr @PL_do_undump, align 1, !tbaa !26
  call void @Perl_my_unexec() #17
  store ptr null, ptr @PL_restartop, align 8, !tbaa !6
  store i8 0, ptr @PL_do_undump, align 1, !tbaa !26
  br label %841

841:                                              ; preds = %564, %838, %840
  %842 = phi ptr [ %839, %840 ], [ %839, %838 ], [ %567, %564 ]
  %843 = phi ptr [ %612, %840 ], [ %612, %838 ], [ %159, %564 ]
  store ptr %843, ptr @PL_stack_sp, align 8, !tbaa !6
  br label %844

844:                                              ; preds = %586, %841
  %845 = phi ptr [ %413, %586 ], [ %842, %841 ]
  %846 = load i32, ptr @PL_sig_pending, align 4, !tbaa !31
  %847 = icmp eq i32 %846, 0
  br i1 %847, label %850, label %848

848:                                              ; preds = %844
  %849 = load ptr, ptr @PL_signalhook, align 8, !tbaa !6
  call void %849() #17
  br label %850

850:                                              ; preds = %676, %719, %748, %836, %680, %91, %94, %302, %305, %196, %185, %183, %142, %848, %844, %615
  %851 = phi ptr [ %616, %615 ], [ %845, %844 ], [ %845, %848 ], [ %306, %305 ], [ %304, %302 ], [ %197, %196 ], [ %186, %185 ], [ %184, %183 ], [ %143, %142 ], [ %93, %91 ], [ %95, %94 ], [ %677, %676 ], [ %723, %719 ], [ %749, %748 ], [ %837, %836 ], [ %681, %680 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #17
  call void @llvm.lifetime.end.p0(i64 512, ptr nonnull %1) #17
  ret ptr %851
}

declare ptr @Perl_gv_autoload_pvn(ptr noundef, ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #2

declare void @Perl_gv_efullname4(ptr noundef, ptr noundef, ptr noundef, i1 noundef zeroext) local_unnamed_addr #2

declare ptr @Perl_av_fetch(ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #2

declare ptr @Perl_newSVavdefelem(ptr noundef, i64 noundef, i1 noundef zeroext) local_unnamed_addr #2

declare zeroext i1 @Perl_ckwarn(i32 noundef) local_unnamed_addr #2

declare void @Perl_sub_crush_depth(ptr noundef) local_unnamed_addr #2

declare void @Perl_get_db_sub(ptr noundef, ptr noundef) local_unnamed_addr #2

declare ptr @Perl_get_cvn_flags(ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #2

declare i32 @Perl_call_sv(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @S_dofindlabel(ptr nocapture noundef readonly %0, ptr noundef %1, i64 noundef %2, i32 noundef %3, ptr noundef %4, ptr noundef %5) unnamed_addr #0 {
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  %9 = icmp ult ptr %4, %5
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.59, ptr noundef nonnull @.str.66) #17
  br label %11

11:                                               ; preds = %10, %6
  %12 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 4
  %13 = load i16, ptr %12, align 8
  %14 = and i16 %13, 511
  switch i16 %14, label %21 [
    i16 197, label %15
    i16 198, label %15
    i16 202, label %15
    i16 186, label %15
    i16 345, label %15
  ]

15:                                               ; preds = %11, %11, %11, %11, %11
  %16 = getelementptr inbounds %struct.unop, ptr %0, i64 0, i32 7
  %17 = load ptr, ptr %16, align 8, !tbaa !126
  %18 = getelementptr inbounds ptr, ptr %4, i64 1
  store ptr %17, ptr %4, align 8, !tbaa !6
  %19 = icmp ult ptr %18, %5
  br i1 %19, label %21, label %20

20:                                               ; preds = %15
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.59, ptr noundef nonnull @.str.66) #17
  br label %21

21:                                               ; preds = %11, %15, %20
  %22 = phi ptr [ %18, %20 ], [ %18, %15 ], [ %4, %11 ]
  store ptr null, ptr %22, align 8, !tbaa !6
  %23 = getelementptr inbounds %struct.op, ptr %0, i64 0, i32 5
  %24 = load i8, ptr %23, align 2, !tbaa !30
  %25 = and i8 %24, 4
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %140, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %struct.unop, ptr %0, i64 0, i32 7
  %29 = load ptr, ptr %28, align 8, !tbaa !6
  %30 = icmp eq ptr %29, null
  br i1 %30, label %140, label %31

31:                                               ; preds = %27
  %32 = and i32 %3, 536870912
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %70

34:                                               ; preds = %31, %60
  %35 = phi ptr [ %62, %60 ], [ %29, %31 ]
  %36 = getelementptr inbounds %struct.op, ptr %35, i64 0, i32 4
  %37 = load i16, ptr %36, align 8
  %38 = and i16 %37, 511
  %39 = add nsw i16 %38, -193
  %40 = icmp ult i16 %39, 2
  br i1 %40, label %41, label %60

41:                                               ; preds = %34
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %7) #17
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #17
  %42 = call ptr @Perl_cop_fetch_label(ptr noundef nonnull %35, ptr noundef nonnull %7, ptr noundef nonnull %8) #17
  %43 = icmp eq ptr %42, null
  br i1 %43, label %59, label %44

44:                                               ; preds = %41
  %45 = load i32, ptr %8, align 4, !tbaa !31
  %46 = and i32 %45, 536870912
  %47 = icmp eq i32 %46, 0
  %48 = load i64, ptr %7, align 8, !tbaa !59
  br i1 %47, label %52, label %49

49:                                               ; preds = %44
  %50 = call i32 @Perl_bytes_cmp_utf8(ptr noundef %1, i64 noundef %2, ptr noundef nonnull %42, i64 noundef %48) #17
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %95, label %59

52:                                               ; preds = %44
  %53 = icmp eq i64 %48, %2
  br i1 %53, label %54, label %59

54:                                               ; preds = %52
  %55 = icmp eq ptr %42, %1
  br i1 %55, label %95, label %56

56:                                               ; preds = %54
  %57 = call i32 @bcmp(ptr nonnull %42, ptr %1, i64 %2)
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %95, label %59

59:                                               ; preds = %56, %52, %49, %41
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #17
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7) #17
  br label %60

60:                                               ; preds = %59, %34
  %61 = getelementptr inbounds %struct.op, ptr %35, i64 0, i32 1
  %62 = load ptr, ptr %61, align 8, !tbaa !6
  %63 = icmp eq ptr %62, null
  br i1 %63, label %64, label %34, !llvm.loop !197

64:                                               ; preds = %98, %60
  %65 = load ptr, ptr %28, align 8, !tbaa !6
  %66 = icmp eq ptr %65, null
  br i1 %66, label %140, label %67

67:                                               ; preds = %64
  %68 = load ptr, ptr @PL_lastgotoprobe, align 8, !tbaa !6
  %69 = getelementptr inbounds ptr, ptr %4, i64 1
  br label %102

70:                                               ; preds = %31, %98
  %71 = phi ptr [ %100, %98 ], [ %29, %31 ]
  %72 = getelementptr inbounds %struct.op, ptr %71, i64 0, i32 4
  %73 = load i16, ptr %72, align 8
  %74 = and i16 %73, 511
  %75 = add nsw i16 %74, -193
  %76 = icmp ult i16 %75, 2
  br i1 %76, label %77, label %98

77:                                               ; preds = %70
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %7) #17
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %8) #17
  %78 = call ptr @Perl_cop_fetch_label(ptr noundef nonnull %71, ptr noundef nonnull %7, ptr noundef nonnull %8) #17
  %79 = icmp eq ptr %78, null
  br i1 %79, label %97, label %80

80:                                               ; preds = %77
  %81 = load i32, ptr %8, align 4, !tbaa !31
  %82 = and i32 %81, 536870912
  %83 = icmp eq i32 %82, %32
  %84 = load i64, ptr %7, align 8, !tbaa !59
  br i1 %83, label %88, label %85

85:                                               ; preds = %80
  %86 = call i32 @Perl_bytes_cmp_utf8(ptr noundef nonnull %78, i64 noundef %84, ptr noundef %1, i64 noundef %2) #17
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %95, label %97

88:                                               ; preds = %80
  %89 = icmp eq i64 %84, %2
  br i1 %89, label %90, label %97

90:                                               ; preds = %88
  %91 = icmp eq ptr %78, %1
  br i1 %91, label %95, label %92

92:                                               ; preds = %90
  %93 = call i32 @bcmp(ptr nonnull %78, ptr %1, i64 %2)
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %97

95:                                               ; preds = %85, %90, %92, %49, %54, %56
  %96 = phi ptr [ %35, %56 ], [ %35, %54 ], [ %35, %49 ], [ %71, %92 ], [ %71, %90 ], [ %71, %85 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #17
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7) #17
  br label %142

97:                                               ; preds = %77, %85, %88, %92
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %8) #17
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %7) #17
  br label %98

98:                                               ; preds = %97, %70
  %99 = getelementptr inbounds %struct.op, ptr %71, i64 0, i32 1
  %100 = load ptr, ptr %99, align 8, !tbaa !6
  %101 = icmp eq ptr %100, null
  br i1 %101, label %64, label %70, !llvm.loop !197

102:                                              ; preds = %67, %134
  %103 = phi ptr [ %135, %134 ], [ %68, %67 ]
  %104 = phi ptr [ %138, %134 ], [ %65, %67 ]
  %105 = phi ptr [ %136, %134 ], [ %22, %67 ]
  %106 = icmp eq ptr %104, %103
  br i1 %106, label %134, label %107

107:                                              ; preds = %102
  %108 = getelementptr inbounds %struct.op, ptr %104, i64 0, i32 4
  %109 = load i16, ptr %108, align 8
  %110 = and i16 %109, 511
  %111 = add nsw i16 %110, -193
  %112 = icmp ult i16 %111, 2
  br i1 %112, label %113, label %129

113:                                              ; preds = %107
  %114 = icmp eq ptr %105, %4
  br i1 %114, label %126, label %115

115:                                              ; preds = %113
  %116 = getelementptr inbounds ptr, ptr %105, i64 -1
  %117 = load ptr, ptr %116, align 8, !tbaa !6
  %118 = getelementptr inbounds %struct.op, ptr %117, i64 0, i32 4
  %119 = load i16, ptr %118, align 8
  %120 = and i16 %119, 511
  %121 = add nsw i16 %120, -195
  %122 = icmp ult i16 %121, -2
  %123 = select i1 %122, ptr %105, ptr %116
  %124 = zext i1 %122 to i64
  %125 = getelementptr inbounds ptr, ptr %105, i64 %124
  br label %126

126:                                              ; preds = %115, %113
  %127 = phi ptr [ %4, %113 ], [ %123, %115 ]
  %128 = phi ptr [ %69, %113 ], [ %125, %115 ]
  store ptr %104, ptr %127, align 8, !tbaa !6
  br label %129

129:                                              ; preds = %126, %107
  %130 = phi ptr [ %105, %107 ], [ %128, %126 ]
  %131 = call fastcc ptr @S_dofindlabel(ptr noundef nonnull %104, ptr noundef %1, i64 noundef %2, i32 noundef %3, ptr noundef %130, ptr noundef %5)
  %132 = icmp eq ptr %131, null
  %133 = load ptr, ptr @PL_lastgotoprobe, align 8, !tbaa !6
  br i1 %132, label %134, label %142

134:                                              ; preds = %129, %102
  %135 = phi ptr [ %103, %102 ], [ %133, %129 ]
  %136 = phi ptr [ %105, %102 ], [ %130, %129 ]
  %137 = getelementptr inbounds %struct.op, ptr %104, i64 0, i32 1
  %138 = load ptr, ptr %137, align 8, !tbaa !6
  %139 = icmp eq ptr %138, null
  br i1 %139, label %140, label %102, !llvm.loop !198

140:                                              ; preds = %134, %27, %64, %21
  %141 = phi ptr [ %22, %21 ], [ %22, %64 ], [ %22, %27 ], [ %136, %134 ]
  store ptr null, ptr %141, align 8, !tbaa !6
  br label %142

142:                                              ; preds = %129, %95, %140
  %143 = phi ptr [ null, %140 ], [ %96, %95 ], [ %131, %129 ]
  ret ptr %143
}

declare void @Perl_ck_warner_d(i32 noundef, ptr noundef, ...) local_unnamed_addr #2

declare void @Perl_my_unexec() local_unnamed_addr #2

declare ptr @Perl_cvgv_from_hek(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_exit() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !6
  %2 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %3 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 6
  %4 = load i8, ptr %3, align 1, !tbaa !10
  %5 = and i8 %4, 15
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %25, label %7

7:                                                ; preds = %0
  %8 = load ptr, ptr %1, align 8, !tbaa !6
  %9 = icmp eq ptr %8, null
  %10 = getelementptr inbounds ptr, ptr %1, i64 -1
  br i1 %9, label %25, label %11

11:                                               ; preds = %7
  store ptr %8, ptr @PL_Sv, align 8, !tbaa !6
  %12 = getelementptr inbounds %struct.sv, ptr %8, i64 0, i32 2
  %13 = load i32, ptr %12, align 4, !tbaa !49
  %14 = and i32 %13, 2097408
  %15 = icmp eq i32 %14, 256
  br i1 %15, label %16, label %20

16:                                               ; preds = %11
  %17 = load ptr, ptr %8, align 8, !tbaa !72
  %18 = getelementptr inbounds %struct.xpviv, ptr %17, i64 0, i32 4
  %19 = load i64, ptr %18, align 8, !tbaa !17
  br label %22

20:                                               ; preds = %11
  %21 = tail call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %8, i32 noundef 2) #17
  br label %22

22:                                               ; preds = %20, %16
  %23 = phi i64 [ %19, %16 ], [ %21, %20 ]
  %24 = trunc i64 %23 to i32
  br label %25

25:                                               ; preds = %7, %0, %22
  %26 = phi ptr [ %10, %22 ], [ %1, %0 ], [ %10, %7 ]
  %27 = phi i32 [ %24, %22 ], [ 0, %0 ], [ 0, %7 ]
  %28 = load i8, ptr @PL_exit_flags, align 1, !tbaa !17
  %29 = or i8 %28, 1
  store i8 %29, ptr @PL_exit_flags, align 1, !tbaa !17
  tail call void @Perl_my_exit(i32 noundef %27) #17
  %30 = getelementptr inbounds ptr, ptr %26, i64 1
  store ptr @PL_sv_undef, ptr %30, align 8, !tbaa !6
  store ptr %30, ptr @PL_stack_sp, align 8, !tbaa !6
  %31 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %32 = load ptr, ptr %31, align 8, !tbaa !20
  ret ptr %32
}

; Function Attrs: nofree norecurse nosync nounwind sspstrong memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define dso_local ptr @Perl_find_runcv(ptr noundef %0) local_unnamed_addr #3 {
  %2 = tail call ptr @Perl_find_runcv_where(i8 noundef zeroext 0, i64 noundef 0, ptr noundef %0)
  ret ptr %2
}

; Function Attrs: nofree norecurse nosync nounwind sspstrong memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define dso_local ptr @Perl_find_runcv_where(i8 noundef zeroext %0, i64 noundef %1, ptr noundef writeonly %2) local_unnamed_addr #3 {
  %4 = icmp eq ptr %2, null
  br i1 %4, label %5, label %8

5:                                                ; preds = %3
  %6 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %7 = icmp eq ptr %6, null
  br i1 %7, label %140, label %18

8:                                                ; preds = %3
  %9 = load ptr, ptr @PL_curcop, align 8, !tbaa !6
  %10 = icmp eq ptr %9, @PL_compiling
  %11 = getelementptr inbounds %struct.cop, ptr %9, i64 0, i32 11
  %12 = select i1 %10, ptr @PL_cop_seqmax, ptr %11
  %13 = load i32, ptr %12, align 4, !tbaa !31
  store i32 %13, ptr %2, align 4, !tbaa !31
  %14 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %15 = icmp eq ptr %14, null
  br i1 %15, label %140, label %16

16:                                               ; preds = %8
  %17 = trunc i64 %1 to i32
  br label %20

18:                                               ; preds = %5
  %19 = trunc i64 %1 to i32
  br label %87

20:                                               ; preds = %16, %26
  %21 = phi ptr [ %29, %26 ], [ %14, %16 ]
  %22 = phi i32 [ %27, %26 ], [ 0, %16 ]
  %23 = getelementptr inbounds %struct.stackinfo, ptr %21, i64 0, i32 4
  %24 = load i32, ptr %23, align 8, !tbaa !16
  %25 = icmp sgt i32 %24, -1
  br i1 %25, label %83, label %26

26:                                               ; preds = %79, %20
  %27 = phi i32 [ %22, %20 ], [ %80, %79 ]
  %28 = getelementptr inbounds %struct.stackinfo, ptr %21, i64 0, i32 2
  %29 = load ptr, ptr %28, align 8, !tbaa !6
  %30 = icmp eq ptr %29, null
  br i1 %30, label %140, label %20, !llvm.loop !199

31:                                               ; preds = %83, %79
  %32 = phi i64 [ %86, %83 ], [ %81, %79 ]
  %33 = phi i32 [ %22, %83 ], [ %80, %79 ]
  %34 = getelementptr inbounds %struct.context, ptr %85, i64 %32
  %35 = load i8, ptr %34, align 8, !tbaa !17
  %36 = zext i8 %35 to i32
  %37 = and i32 %36, 15
  switch i32 %37, label %79 [
    i32 8, label %44
    i32 9, label %44
    i32 10, label %38
  ]

38:                                               ; preds = %31
  %39 = and i32 %36, 79
  %40 = icmp eq i32 %39, 74
  br i1 %40, label %79, label %41

41:                                               ; preds = %38
  %42 = getelementptr inbounds %struct.block, ptr %34, i64 0, i32 8, i32 0, i32 4
  %43 = load ptr, ptr %42, align 8, !tbaa !17
  br label %57

44:                                               ; preds = %31, %31
  %45 = getelementptr inbounds %struct.block, ptr %34, i64 0, i32 8, i32 0, i32 1
  %46 = load ptr, ptr %45, align 8, !tbaa !17
  %47 = load ptr, ptr @PL_debstash, align 8
  %48 = icmp eq ptr %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %44
  %50 = load ptr, ptr %46, align 8, !tbaa !133
  %51 = getelementptr inbounds %struct.xpvcv, ptr %50, i64 0, i32 4
  %52 = load ptr, ptr %51, align 8, !tbaa !200
  %53 = icmp eq ptr %52, %47
  br i1 %53, label %74, label %54

54:                                               ; preds = %49, %44
  %55 = and i8 %35, 64
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %57, label %79

57:                                               ; preds = %54, %41
  %58 = phi ptr [ %46, %54 ], [ %43, %41 ]
  %59 = icmp eq ptr %58, null
  br i1 %59, label %79, label %60

60:                                               ; preds = %57
  switch i8 %0, label %144 [
    i8 1, label %65
    i8 2, label %61
  ]

61:                                               ; preds = %60
  %62 = add nsw i32 %33, 1
  %63 = sext i32 %33 to i64
  %64 = icmp eq i64 %63, %1
  br i1 %64, label %144, label %79

65:                                               ; preds = %60
  %66 = load ptr, ptr %58, align 8, !tbaa !133
  %67 = getelementptr inbounds %struct.xpvcv, ptr %66, i64 0, i32 9
  %68 = load ptr, ptr %67, align 8, !tbaa !17
  %69 = icmp eq ptr %68, null
  br i1 %69, label %79, label %70

70:                                               ; preds = %65
  %71 = getelementptr inbounds %struct.padlist, ptr %68, i64 0, i32 2
  %72 = load i32, ptr %71, align 8, !tbaa !201
  %73 = icmp eq i32 %72, %17
  br i1 %73, label %144, label %79

74:                                               ; preds = %49
  %75 = getelementptr inbounds %struct.block, ptr %34, i64 0, i32 4
  %76 = load ptr, ptr %75, align 8, !tbaa !17
  %77 = getelementptr inbounds %struct.cop, ptr %76, i64 0, i32 11
  %78 = load i32, ptr %77, align 4, !tbaa !202
  store i32 %78, ptr %2, align 4, !tbaa !31
  br label %79

79:                                               ; preds = %74, %70, %65, %61, %57, %54, %38, %31
  %80 = phi i32 [ %33, %70 ], [ %33, %57 ], [ %62, %61 ], [ %33, %65 ], [ %33, %54 ], [ %33, %74 ], [ %33, %38 ], [ %33, %31 ]
  %81 = add nsw i64 %32, -1
  %82 = icmp sgt i64 %32, 0
  br i1 %82, label %31, label %26, !llvm.loop !203

83:                                               ; preds = %20
  %84 = getelementptr inbounds %struct.stackinfo, ptr %21, i64 0, i32 1
  %85 = load ptr, ptr %84, align 8, !tbaa !14
  %86 = zext i32 %24 to i64
  br label %31

87:                                               ; preds = %18, %135
  %88 = phi ptr [ %138, %135 ], [ %6, %18 ]
  %89 = phi i32 [ %136, %135 ], [ 0, %18 ]
  %90 = getelementptr inbounds %struct.stackinfo, ptr %88, i64 0, i32 4
  %91 = load i32, ptr %90, align 8, !tbaa !16
  %92 = icmp sgt i32 %91, -1
  br i1 %92, label %93, label %135

93:                                               ; preds = %87
  %94 = getelementptr inbounds %struct.stackinfo, ptr %88, i64 0, i32 1
  %95 = load ptr, ptr %94, align 8, !tbaa !14
  %96 = zext i32 %91 to i64
  br label %97

97:                                               ; preds = %131, %93
  %98 = phi i64 [ %133, %131 ], [ %96, %93 ]
  %99 = phi i32 [ %132, %131 ], [ %89, %93 ]
  %100 = getelementptr inbounds %struct.context, ptr %95, i64 %98
  %101 = load i8, ptr %100, align 8, !tbaa !17
  %102 = zext i8 %101 to i32
  %103 = and i32 %102, 15
  switch i32 %103, label %131 [
    i32 8, label %109
    i32 9, label %109
    i32 10, label %104
  ]

104:                                              ; preds = %97
  %105 = and i32 %102, 79
  %106 = icmp eq i32 %105, 74
  br i1 %106, label %131, label %107

107:                                              ; preds = %104
  %108 = getelementptr inbounds %struct.block, ptr %100, i64 0, i32 8, i32 0, i32 4
  br label %113

109:                                              ; preds = %97, %97
  %110 = getelementptr inbounds %struct.block, ptr %100, i64 0, i32 8, i32 0, i32 1
  %111 = and i8 %101, 64
  %112 = icmp eq i8 %111, 0
  br i1 %112, label %113, label %131

113:                                              ; preds = %109, %107
  %114 = phi ptr [ %110, %109 ], [ %108, %107 ]
  %115 = load ptr, ptr %114, align 8, !tbaa !17
  %116 = icmp eq ptr %115, null
  br i1 %116, label %131, label %117

117:                                              ; preds = %113
  switch i8 %0, label %144 [
    i8 1, label %122
    i8 2, label %118
  ]

118:                                              ; preds = %117
  %119 = add nsw i32 %99, 1
  %120 = sext i32 %99 to i64
  %121 = icmp eq i64 %120, %1
  br i1 %121, label %144, label %131

122:                                              ; preds = %117
  %123 = load ptr, ptr %115, align 8, !tbaa !133
  %124 = getelementptr inbounds %struct.xpvcv, ptr %123, i64 0, i32 9
  %125 = load ptr, ptr %124, align 8, !tbaa !17
  %126 = icmp eq ptr %125, null
  br i1 %126, label %131, label %127

127:                                              ; preds = %122
  %128 = getelementptr inbounds %struct.padlist, ptr %125, i64 0, i32 2
  %129 = load i32, ptr %128, align 8, !tbaa !201
  %130 = icmp eq i32 %129, %19
  br i1 %130, label %144, label %131

131:                                              ; preds = %127, %122, %118, %113, %109, %104, %97
  %132 = phi i32 [ %99, %127 ], [ %99, %113 ], [ %119, %118 ], [ %99, %122 ], [ %99, %109 ], [ %99, %104 ], [ %99, %97 ]
  %133 = add nsw i64 %98, -1
  %134 = icmp sgt i64 %98, 0
  br i1 %134, label %97, label %135, !llvm.loop !203

135:                                              ; preds = %131, %87
  %136 = phi i32 [ %89, %87 ], [ %132, %131 ]
  %137 = getelementptr inbounds %struct.stackinfo, ptr %88, i64 0, i32 2
  %138 = load ptr, ptr %137, align 8, !tbaa !6
  %139 = icmp eq ptr %138, null
  br i1 %139, label %140, label %87, !llvm.loop !199

140:                                              ; preds = %26, %135, %8, %5
  %141 = icmp eq i8 %0, 1
  %142 = load ptr, ptr @PL_main_cv, align 8
  %143 = select i1 %141, ptr null, ptr %142
  br label %144

144:                                              ; preds = %60, %61, %70, %127, %118, %117, %140
  %145 = phi ptr [ %143, %140 ], [ %115, %117 ], [ %115, %118 ], [ %115, %127 ], [ %58, %70 ], [ %58, %61 ], [ %58, %60 ]
  ret ptr %145
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_require() local_unnamed_addr #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !6
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %1) #17
  %4 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %5 = getelementptr inbounds %struct.op, ptr %4, i64 0, i32 5
  %6 = load i8, ptr %5, align 2, !tbaa !30
  %7 = and i8 %6, 3
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %0
  %10 = zext i8 %7 to i32
  br label %45

11:                                               ; preds = %0
  %12 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %13 = getelementptr inbounds %struct.stackinfo, ptr %12, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !14
  %15 = getelementptr inbounds %struct.stackinfo, ptr %12, i64 0, i32 4
  %16 = load i32, ptr %15, align 8, !tbaa !16
  %17 = icmp sgt i32 %16, -1
  br i1 %17, label %18, label %45

18:                                               ; preds = %11
  %19 = zext i32 %16 to i64
  br label %20

20:                                               ; preds = %28, %18
  %21 = phi i64 [ %19, %18 ], [ %29, %28 ]
  %22 = getelementptr inbounds %struct.context, ptr %14, i64 %21
  %23 = load i8, ptr %22, align 8, !tbaa !17
  %24 = and i8 %23, 15
  %25 = zext i8 %24 to i32
  switch i32 %25, label %28 [
    i32 8, label %26
    i32 10, label %31
    i32 9, label %31
  ]

26:                                               ; preds = %20
  %27 = icmp sgt i8 %23, -1
  br i1 %27, label %31, label %28

28:                                               ; preds = %26, %20
  %29 = add nsw i64 %21, -1
  %30 = icmp sgt i64 %21, 0
  br i1 %30, label %20, label %45, !llvm.loop !18

31:                                               ; preds = %26, %20, %20
  %32 = and i64 %21, 2147483648
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %34, label %45

34:                                               ; preds = %31
  %35 = and i64 %21, 4294967295
  %36 = getelementptr inbounds %struct.context, ptr %14, i64 %35, i32 0, i32 0, i32 1
  %37 = load i8, ptr %36, align 1, !tbaa !17
  %38 = add i8 %37, -1
  %39 = icmp ult i8 %38, 3
  br i1 %39, label %42, label %40

40:                                               ; preds = %34
  %41 = zext i8 %37 to i32
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.14, i32 noundef %41) #17
  br label %45

42:                                               ; preds = %34
  %43 = zext i8 %38 to i32
  %44 = add nuw nsw i32 %43, 1
  br label %45

45:                                               ; preds = %28, %42, %40, %31, %11, %9
  %46 = phi i32 [ %10, %9 ], [ 0, %40 ], [ 1, %31 ], [ 1, %11 ], [ %44, %42 ], [ 1, %28 ]
  %47 = getelementptr inbounds ptr, ptr %3, i64 -1
  %48 = load ptr, ptr %3, align 8, !tbaa !6
  %49 = getelementptr inbounds %struct.sv, ptr %48, i64 0, i32 2
  %50 = load i32, ptr %49, align 4, !tbaa !49
  %51 = and i32 %50, 2097152
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %56, label %53

53:                                               ; preds = %45
  %54 = tail call i32 @Perl_mg_get(ptr noundef nonnull %48) #17
  %55 = load i32, ptr %49, align 4, !tbaa !49
  br label %56

56:                                               ; preds = %45, %53
  %57 = phi i32 [ %50, %45 ], [ %55, %53 ]
  %58 = and i32 %57, 12288
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %66

60:                                               ; preds = %56
  %61 = and i32 %57, 14680064
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %217, label %63

63:                                               ; preds = %60
  %64 = tail call ptr @Perl_mg_find(ptr noundef nonnull %48, i32 noundef 86) #17
  %65 = icmp eq ptr %64, null
  br i1 %65, label %217, label %66

66:                                               ; preds = %63, %56
  %67 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %68 = getelementptr inbounds %struct.op, ptr %67, i64 0, i32 4
  %69 = load i16, ptr %68, align 8
  %70 = and i16 %69, 511
  %71 = icmp eq i16 %70, 340
  br i1 %71, label %217, label %72

72:                                               ; preds = %66
  %73 = tail call ptr @Perl_new_version(ptr noundef nonnull %48) #17
  %74 = tail call ptr @Perl_sv_2mortal(ptr noundef %73) #17
  %75 = load ptr, ptr @PL_patchlevel, align 8, !tbaa !6
  %76 = tail call zeroext i1 @Perl_sv_derived_from_pvn(ptr noundef %75, ptr noundef nonnull @.str.67, i64 noundef 7, i32 noundef 0) #17
  br i1 %76, label %80, label %77

77:                                               ; preds = %72
  %78 = load ptr, ptr @PL_patchlevel, align 8, !tbaa !6
  %79 = tail call ptr @Perl_upg_version(ptr noundef %78, i1 noundef zeroext true) #17
  br label %80

80:                                               ; preds = %77, %72
  %81 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %82 = getelementptr inbounds %struct.unop, ptr %81, i64 0, i32 7
  %83 = load ptr, ptr %82, align 8, !tbaa !126
  %84 = getelementptr inbounds %struct.op, ptr %83, i64 0, i32 4
  %85 = load i16, ptr %84, align 8
  %86 = and i16 %85, 511
  %87 = icmp eq i16 %86, 5
  br i1 %87, label %88, label %104

88:                                               ; preds = %80
  %89 = getelementptr inbounds %struct.op, ptr %83, i64 0, i32 6
  %90 = load i8, ptr %89, align 1, !tbaa !10
  %91 = and i8 %90, 2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %104, label %93

93:                                               ; preds = %88
  %94 = load ptr, ptr @PL_patchlevel, align 8, !tbaa !6
  %95 = tail call i32 @Perl_vcmp(ptr noundef %74, ptr noundef %94) #17
  %96 = icmp slt i32 %95, 1
  br i1 %96, label %97, label %214

97:                                               ; preds = %93
  %98 = tail call ptr @Perl_vnormal(ptr noundef %74) #17
  %99 = tail call ptr @Perl_sv_2mortal(ptr noundef %98) #17
  %100 = load ptr, ptr @PL_patchlevel, align 8, !tbaa !6
  %101 = tail call ptr @Perl_vnormal(ptr noundef %100) #17
  %102 = tail call ptr @Perl_sv_2mortal(ptr noundef %101) #17
  %103 = tail call ptr (ptr, ...) @Perl_die(ptr noundef nonnull @.str.68, ptr noundef %99, ptr noundef %102) #17
  br label %1088

104:                                              ; preds = %88, %80
  %105 = load ptr, ptr @PL_patchlevel, align 8, !tbaa !6
  %106 = tail call i32 @Perl_vcmp(ptr noundef %74, ptr noundef %105) #17
  %107 = icmp sgt i32 %106, 0
  br i1 %107, label %108, label %214

108:                                              ; preds = %104
  %109 = getelementptr inbounds %struct.sv, ptr %74, i64 0, i32 3
  %110 = load ptr, ptr %109, align 8, !tbaa !17
  %111 = tail call ptr @Perl_hv_common(ptr noundef %110, ptr noundef null, ptr noundef nonnull @.str.69, i64 noundef 8, i32 noundef 0, i32 noundef 32, ptr noundef null, i32 noundef 0) #17
  %112 = load ptr, ptr %111, align 8, !tbaa !6
  %113 = tail call ptr @Perl_hv_common(ptr noundef %110, ptr noundef null, ptr noundef nonnull @.str.67, i64 noundef 7, i32 noundef 0, i32 noundef 32, ptr noundef null, i32 noundef 0) #17
  %114 = load ptr, ptr %113, align 8, !tbaa !6
  %115 = getelementptr inbounds %struct.sv, ptr %114, i64 0, i32 3
  %116 = load ptr, ptr %115, align 8, !tbaa !17
  %117 = tail call ptr @Perl_av_fetch(ptr noundef %116, i64 noundef 0, i32 noundef 0) #17
  %118 = load ptr, ptr %117, align 8, !tbaa !6
  %119 = getelementptr inbounds %struct.sv, ptr %118, i64 0, i32 2
  %120 = load i32, ptr %119, align 4, !tbaa !49
  %121 = and i32 %120, 2097408
  %122 = icmp eq i32 %121, 256
  %123 = tail call ptr @Perl_av_fetch(ptr noundef %116, i64 noundef 0, i32 noundef 0) #17
  %124 = load ptr, ptr %123, align 8, !tbaa !6
  br i1 %122, label %125, label %129

125:                                              ; preds = %108
  %126 = load ptr, ptr %124, align 8, !tbaa !72
  %127 = getelementptr inbounds %struct.xpviv, ptr %126, i64 0, i32 4
  %128 = load i64, ptr %127, align 8, !tbaa !17
  br label %131

129:                                              ; preds = %108
  %130 = tail call i64 @Perl_sv_2iv_flags(ptr noundef %124, i32 noundef 2) #17
  br label %131

131:                                              ; preds = %129, %125
  %132 = phi i64 [ %128, %125 ], [ %130, %129 ]
  %133 = trunc i64 %132 to i32
  %134 = icmp sgt i32 %133, 5
  br i1 %134, label %158, label %135

135:                                              ; preds = %131
  %136 = tail call ptr @Perl_hv_common_key_len(ptr noundef %110, ptr noundef nonnull @.str.70, i32 noundef 2, i32 noundef 8, ptr noundef null, i32 noundef 0) #17
  %137 = icmp eq ptr %136, null
  br i1 %137, label %138, label %158

138:                                              ; preds = %135
  %139 = getelementptr inbounds %struct.sv, ptr %116, i64 0, i32 2
  %140 = load i32, ptr %139, align 4, !tbaa !49
  %141 = and i32 %140, 8388608
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %146, label %143

143:                                              ; preds = %138
  %144 = tail call i32 @Perl_mg_size(ptr noundef nonnull %116) #17
  %145 = sext i32 %144 to i64
  br label %150

146:                                              ; preds = %138
  %147 = load ptr, ptr %116, align 8, !tbaa !141
  %148 = getelementptr inbounds %struct.xpvav, ptr %147, i64 0, i32 2
  %149 = load i64, ptr %148, align 8, !tbaa !142
  br label %150

150:                                              ; preds = %143, %146
  %151 = phi i64 [ %145, %143 ], [ %149, %146 ]
  %152 = icmp sgt i64 %151, 1
  br i1 %152, label %158, label %153

153:                                              ; preds = %150
  %154 = getelementptr inbounds %struct.sv, ptr %112, i64 0, i32 3
  %155 = load ptr, ptr %154, align 8, !tbaa !17
  %156 = tail call ptr @strstr(ptr noundef nonnull dereferenceable(1) %155, ptr noundef nonnull dereferenceable(1) @.str.71) #18
  %157 = icmp eq ptr %156, null
  br i1 %157, label %165, label %158

158:                                              ; preds = %135, %153, %150, %131
  %159 = tail call ptr @Perl_vnormal(ptr noundef %110) #17
  %160 = tail call ptr @Perl_sv_2mortal(ptr noundef %159) #17
  %161 = load ptr, ptr @PL_patchlevel, align 8, !tbaa !6
  %162 = tail call ptr @Perl_vnormal(ptr noundef %161) #17
  %163 = tail call ptr @Perl_sv_2mortal(ptr noundef %162) #17
  %164 = tail call ptr (ptr, ...) @Perl_die(ptr noundef nonnull @.str.72, ptr noundef %160, ptr noundef %163) #17
  br label %1088

165:                                              ; preds = %153
  %166 = load i32, ptr %139, align 4, !tbaa !49
  %167 = and i32 %166, 8388608
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %172, label %169

169:                                              ; preds = %165
  %170 = tail call i32 @Perl_mg_size(ptr noundef nonnull %116) #17
  %171 = sext i32 %170 to i64
  br label %176

172:                                              ; preds = %165
  %173 = load ptr, ptr %116, align 8, !tbaa !141
  %174 = getelementptr inbounds %struct.xpvav, ptr %173, i64 0, i32 2
  %175 = load i64, ptr %174, align 8, !tbaa !142
  br label %176

176:                                              ; preds = %169, %172
  %177 = phi i64 [ %171, %169 ], [ %175, %172 ]
  %178 = icmp sgt i64 %177, 0
  br i1 %178, label %179, label %201

179:                                              ; preds = %176
  %180 = tail call ptr @Perl_av_fetch(ptr noundef nonnull %116, i64 noundef 1, i32 noundef 0) #17
  %181 = load ptr, ptr %180, align 8, !tbaa !6
  %182 = getelementptr inbounds %struct.sv, ptr %181, i64 0, i32 2
  %183 = load i32, ptr %182, align 4, !tbaa !49
  %184 = and i32 %183, 2097408
  %185 = icmp eq i32 %184, 256
  %186 = tail call ptr @Perl_av_fetch(ptr noundef nonnull %116, i64 noundef 1, i32 noundef 0) #17
  %187 = load ptr, ptr %186, align 8, !tbaa !6
  br i1 %185, label %188, label %192

188:                                              ; preds = %179
  %189 = load ptr, ptr %187, align 8, !tbaa !72
  %190 = getelementptr inbounds %struct.xpviv, ptr %189, i64 0, i32 4
  %191 = load i64, ptr %190, align 8, !tbaa !17
  br label %194

192:                                              ; preds = %179
  %193 = tail call i64 @Perl_sv_2iv_flags(ptr noundef %187, i32 noundef 2) #17
  br label %194

194:                                              ; preds = %188, %192
  %195 = phi i64 [ %191, %188 ], [ %193, %192 ]
  %196 = freeze i64 %195
  %197 = trunc i64 %196 to i32
  %198 = icmp sgt i32 %197, 599
  %199 = select i1 %198, i32 100, i32 10
  %200 = sdiv i32 %197, %199
  br label %201

201:                                              ; preds = %194, %176
  %202 = phi i32 [ %200, %194 ], [ 0, %176 ]
  %203 = tail call ptr (ptr, ...) @Perl_newSVpvf(ptr noundef nonnull @.str.73, i32 noundef %133, i32 noundef %202) #17
  %204 = tail call ptr @Perl_upg_version(ptr noundef %203, i1 noundef zeroext true) #17
  %205 = tail call ptr @Perl_vnormal(ptr noundef %110) #17
  %206 = tail call ptr @Perl_sv_2mortal(ptr noundef %205) #17
  %207 = tail call ptr @Perl_sv_2mortal(ptr noundef %203) #17
  %208 = tail call ptr @Perl_vnormal(ptr noundef %207) #17
  %209 = tail call ptr @Perl_sv_2mortal(ptr noundef %208) #17
  %210 = load ptr, ptr @PL_patchlevel, align 8, !tbaa !6
  %211 = tail call ptr @Perl_vnormal(ptr noundef %210) #17
  %212 = tail call ptr @Perl_sv_2mortal(ptr noundef %211) #17
  %213 = tail call ptr (ptr, ...) @Perl_die(ptr noundef nonnull @.str.74, ptr noundef %206, ptr noundef %209, ptr noundef %212) #17
  br label %1088

214:                                              ; preds = %104, %93
  store ptr @PL_sv_yes, ptr %3, align 8, !tbaa !6
  store ptr %3, ptr @PL_stack_sp, align 8, !tbaa !6
  %215 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %216 = load ptr, ptr %215, align 8, !tbaa !20
  br label %1088

217:                                              ; preds = %66, %63, %60
  %218 = load i32, ptr %49, align 4, !tbaa !49
  %219 = and i32 %218, 65280
  %220 = icmp ne i32 %219, 0
  %221 = and i32 %218, 255
  %222 = icmp eq i32 %221, 8
  %223 = or i1 %220, %222
  %224 = and i32 %218, 16826623
  %225 = icmp eq i32 %224, 16777226
  %226 = or i1 %225, %223
  br i1 %226, label %229, label %227

227:                                              ; preds = %217
  %228 = tail call ptr (ptr, ...) @Perl_die(ptr noundef nonnull @.str.75) #17
  br label %1088

229:                                              ; preds = %217
  %230 = and i32 %218, 2098176
  %231 = icmp eq i32 %230, 1024
  br i1 %231, label %232, label %238

232:                                              ; preds = %229
  %233 = load ptr, ptr %48, align 8, !tbaa !72
  %234 = getelementptr inbounds %struct.xpv, ptr %233, i64 0, i32 2
  %235 = load i64, ptr %234, align 8, !tbaa !53
  store i64 %235, ptr %1, align 8, !tbaa !59
  %236 = getelementptr inbounds %struct.sv, ptr %48, i64 0, i32 3
  %237 = load ptr, ptr %236, align 8, !tbaa !17
  br label %241

238:                                              ; preds = %229
  %239 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %48, ptr noundef nonnull %1, i32 noundef 32) #17
  %240 = load i64, ptr %1, align 8
  br label %241

241:                                              ; preds = %238, %232
  %242 = phi i64 [ %240, %238 ], [ %235, %232 ]
  %243 = phi ptr [ %239, %238 ], [ %237, %232 ]
  %244 = icmp ne ptr %243, null
  %245 = icmp ne i64 %242, 0
  %246 = select i1 %244, i1 %245, i1 false
  br i1 %246, label %247, label %250

247:                                              ; preds = %241
  %248 = load i8, ptr %243, align 1, !tbaa !17
  %249 = icmp eq i8 %248, 0
  br i1 %249, label %250, label %252

250:                                              ; preds = %247, %241
  %251 = call ptr (ptr, ...) @Perl_die(ptr noundef nonnull @.str.75) #17
  br label %1088

252:                                              ; preds = %247
  %253 = icmp ugt i64 %242, 1
  br i1 %253, label %254, label %274

254:                                              ; preds = %252
  %255 = add i64 %242, -1
  %256 = call ptr @memchr(ptr noundef nonnull %243, i32 noundef 0, i64 noundef %255) #18
  %257 = icmp eq ptr %256, null
  br i1 %257, label %274, label %258

258:                                              ; preds = %254
  %259 = tail call ptr @__errno_location() #20
  store i32 2, ptr %259, align 4, !tbaa !31
  %260 = getelementptr inbounds i8, ptr %256, i64 1
  call void (i32, ptr, ...) @Perl_ck_warner(i32 noundef 59, ptr noundef nonnull @.str.97, ptr noundef nonnull @.str.76, ptr noundef nonnull @.str.77, ptr noundef nonnull %243, ptr noundef nonnull %260) #17
  %261 = call ptr @Perl_newSVpvn_flags(ptr noundef nonnull @.str.10, i64 noundef 0, i32 noundef 524288) #17
  %262 = getelementptr inbounds %struct.sv, ptr %48, i64 0, i32 3
  %263 = load ptr, ptr %262, align 8, !tbaa !17
  %264 = load ptr, ptr %48, align 8, !tbaa !72
  %265 = getelementptr inbounds %struct.xpv, ptr %264, i64 0, i32 2
  %266 = load i64, ptr %265, align 8, !tbaa !53
  %267 = shl i64 %266, 1
  %268 = load i32, ptr %49, align 4, !tbaa !49
  %269 = lshr i32 %268, 21
  %270 = and i32 %269, 256
  %271 = call ptr @Perl_pv_escape(ptr noundef %261, ptr noundef %263, i64 noundef %266, i64 noundef %267, ptr noundef null, i32 noundef %270) #17
  %272 = call ptr @strerror(i32 noundef 2) #17
  %273 = call ptr (ptr, ...) @Perl_die(ptr noundef nonnull @.str.78, ptr noundef %271, ptr noundef %272) #17
  br label %1088

274:                                              ; preds = %252, %254
  %275 = load i8, ptr @PL_tainting, align 1, !tbaa !26, !range !44, !noundef !45
  %276 = icmp eq i8 %275, 0
  br i1 %276, label %279, label %277

277:                                              ; preds = %274
  call void @Perl_taint_proper(ptr noundef null, ptr noundef nonnull @.str.77) #17
  %278 = load i8, ptr %243, align 1, !tbaa !17
  br label %279

279:                                              ; preds = %274, %277
  %280 = phi i8 [ %248, %274 ], [ %278, %277 ]
  switch i8 %280, label %288 [
    i8 47, label %289
    i8 46, label %281
  ]

281:                                              ; preds = %279
  %282 = getelementptr inbounds i8, ptr %243, i64 1
  %283 = load i8, ptr %282, align 1, !tbaa !17
  switch i8 %283, label %288 [
    i8 47, label %289
    i8 46, label %284
  ]

284:                                              ; preds = %281
  %285 = getelementptr inbounds i8, ptr %243, i64 2
  %286 = load i8, ptr %285, align 1, !tbaa !17
  %287 = icmp eq i8 %286, 47
  br i1 %287, label %289, label %288

288:                                              ; preds = %284, %281, %279
  br label %289

289:                                              ; preds = %279, %281, %284, %288
  %290 = phi i1 [ true, %288 ], [ false, %281 ], [ false, %279 ], [ false, %284 ]
  %291 = load i64, ptr %1, align 8, !tbaa !59
  %292 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %293 = getelementptr inbounds %struct.op, ptr %292, i64 0, i32 4
  %294 = load i16, ptr %293, align 8
  %295 = and i16 %294, 511
  %296 = icmp eq i16 %295, 339
  br i1 %296, label %297, label %323

297:                                              ; preds = %289
  %298 = load ptr, ptr @PL_incgv, align 8, !tbaa !6
  %299 = getelementptr inbounds %struct.gv, ptr %298, i64 0, i32 3
  %300 = load ptr, ptr %299, align 8, !tbaa !17
  %301 = getelementptr inbounds %struct.gp, ptr %300, i64 0, i32 5
  %302 = load ptr, ptr %301, align 8, !tbaa !155
  %303 = icmp eq ptr %302, null
  br i1 %303, label %304, label %310

304:                                              ; preds = %297
  %305 = call ptr @Perl_gv_add_by_type(ptr noundef nonnull %298, i32 noundef 12) #17
  %306 = getelementptr inbounds %struct.gv, ptr %305, i64 0, i32 3
  %307 = load ptr, ptr %306, align 8, !tbaa !17
  %308 = getelementptr inbounds %struct.gp, ptr %307, i64 0, i32 5
  %309 = load ptr, ptr %308, align 8, !tbaa !155
  br label %310

310:                                              ; preds = %297, %304
  %311 = phi ptr [ %309, %304 ], [ %302, %297 ]
  %312 = trunc i64 %291 to i32
  %313 = call ptr @Perl_hv_common_key_len(ptr noundef %311, ptr noundef nonnull %243, i32 noundef %312, i32 noundef 32, ptr noundef null, i32 noundef 0) #17
  %314 = icmp eq ptr %313, null
  br i1 %314, label %323, label %315

315:                                              ; preds = %310
  %316 = load ptr, ptr %313, align 8, !tbaa !6
  %317 = icmp eq ptr %316, @PL_sv_undef
  br i1 %317, label %321, label %318

318:                                              ; preds = %315
  store ptr @PL_sv_yes, ptr %3, align 8, !tbaa !6
  store ptr %3, ptr @PL_stack_sp, align 8, !tbaa !6
  %319 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %320 = load ptr, ptr %319, align 8, !tbaa !20
  br label %1088

321:                                              ; preds = %315
  %322 = call ptr (ptr, ...) @Perl_die(ptr noundef nonnull @.str.79, ptr noundef nonnull %243) #17
  br label %1088

323:                                              ; preds = %310, %289
  br i1 %290, label %330, label %324

324:                                              ; preds = %323
  %325 = call fastcc ptr @S_doopen_pm(ptr noundef nonnull %48)
  %326 = icmp eq ptr %325, null
  br i1 %326, label %330, label %327

327:                                              ; preds = %324
  %328 = tail call ptr @__errno_location() #20
  %329 = call ptr @Perl_sv_2mortal(ptr noundef null) #17
  br label %912

330:                                              ; preds = %323, %324
  %331 = phi ptr [ %243, %324 ], [ null, %323 ]
  %332 = tail call ptr @__errno_location() #20
  %333 = load i32, ptr %332, align 4, !tbaa !31
  %334 = icmp ne i32 %333, 13
  %335 = or i1 %290, %334
  br i1 %335, label %336, label %776

336:                                              ; preds = %330
  %337 = load ptr, ptr @PL_incgv, align 8, !tbaa !6
  %338 = getelementptr inbounds %struct.gv, ptr %337, i64 0, i32 3
  %339 = load ptr, ptr %338, align 8, !tbaa !17
  %340 = getelementptr inbounds %struct.gp, ptr %339, i64 0, i32 6
  %341 = load ptr, ptr %340, align 8, !tbaa !138
  %342 = icmp eq ptr %341, null
  br i1 %342, label %343, label %349

343:                                              ; preds = %336
  %344 = call ptr @Perl_gv_add_by_type(ptr noundef nonnull %337, i32 noundef 11) #17
  %345 = getelementptr inbounds %struct.gv, ptr %344, i64 0, i32 3
  %346 = load ptr, ptr %345, align 8, !tbaa !17
  %347 = getelementptr inbounds %struct.gp, ptr %346, i64 0, i32 6
  %348 = load ptr, ptr %347, align 8, !tbaa !138
  br label %349

349:                                              ; preds = %336, %343
  %350 = phi ptr [ %348, %343 ], [ %341, %336 ]
  %351 = call ptr @Perl_newSV_type(i32 noundef 3) #17
  %352 = getelementptr inbounds %struct.sv, ptr %350, i64 0, i32 2
  %353 = getelementptr inbounds %struct.sv, ptr %351, i64 0, i32 3
  %354 = getelementptr inbounds %struct.sv, ptr %351, i64 0, i32 2
  br label %355

355:                                              ; preds = %771, %349
  %356 = phi i64 [ 0, %349 ], [ %775, %771 ]
  %357 = phi ptr [ %48, %349 ], [ %774, %771 ]
  %358 = phi ptr [ %331, %349 ], [ %773, %771 ]
  %359 = phi ptr [ %47, %349 ], [ %772, %771 ]
  %360 = load i32, ptr %352, align 4, !tbaa !49
  %361 = and i32 %360, 8388608
  %362 = icmp eq i32 %361, 0
  br i1 %362, label %366, label %363

363:                                              ; preds = %355
  %364 = call i32 @Perl_mg_size(ptr noundef nonnull %350) #17
  %365 = sext i32 %364 to i64
  br label %370

366:                                              ; preds = %355
  %367 = load ptr, ptr %350, align 8, !tbaa !141
  %368 = getelementptr inbounds %struct.xpvav, ptr %367, i64 0, i32 2
  %369 = load i64, ptr %368, align 8, !tbaa !142
  br label %370

370:                                              ; preds = %366, %363
  %371 = phi i64 [ %365, %363 ], [ %369, %366 ]
  %372 = icmp sgt i64 %356, %371
  br i1 %372, label %776, label %373

373:                                              ; preds = %370
  %374 = call ptr @Perl_av_fetch(ptr noundef %350, i64 noundef %356, i32 noundef 1) #17
  %375 = load ptr, ptr %374, align 8, !tbaa !6
  %376 = getelementptr inbounds %struct.sv, ptr %375, i64 0, i32 2
  %377 = load i32, ptr %376, align 4, !tbaa !49
  %378 = and i32 %377, 2097152
  %379 = icmp eq i32 %378, 0
  br i1 %379, label %383, label %380

380:                                              ; preds = %373
  %381 = call i32 @Perl_mg_get(ptr noundef nonnull %375) #17
  %382 = load i32, ptr %376, align 4, !tbaa !49
  br label %383

383:                                              ; preds = %373, %380
  %384 = phi i32 [ %377, %373 ], [ %382, %380 ]
  %385 = and i32 %384, 2048
  %386 = icmp eq i32 %385, 0
  br i1 %386, label %667, label %387

387:                                              ; preds = %383
  %388 = getelementptr inbounds %struct.sv, ptr %375, i64 0, i32 3
  %389 = load ptr, ptr %388, align 8, !tbaa !17
  %390 = getelementptr inbounds %struct.sv, ptr %389, i64 0, i32 2
  %391 = load i32, ptr %390, align 4, !tbaa !49
  %392 = and i32 %391, 1048831
  %393 = icmp eq i32 %392, 11
  br i1 %393, label %394, label %403

394:                                              ; preds = %387
  %395 = call ptr @Perl_av_fetch(ptr noundef nonnull %389, i64 noundef 0, i32 noundef 1) #17
  %396 = load ptr, ptr %395, align 8, !tbaa !6
  %397 = getelementptr inbounds %struct.sv, ptr %396, i64 0, i32 2
  %398 = load i32, ptr %397, align 4, !tbaa !49
  %399 = and i32 %398, 2097152
  %400 = icmp eq i32 %399, 0
  br i1 %400, label %403, label %401

401:                                              ; preds = %394
  %402 = call i32 @Perl_mg_get(ptr noundef nonnull %396) #17
  br label %403

403:                                              ; preds = %401, %394, %387
  %404 = phi ptr [ %375, %387 ], [ %396, %394 ], [ %396, %401 ]
  %405 = load ptr, ptr %388, align 8, !tbaa !17
  %406 = ptrtoint ptr %405 to i64
  call void (ptr, ptr, ...) @Perl_sv_setpvf(ptr noundef %351, ptr noundef nonnull @.str.80, i64 noundef %406, ptr noundef nonnull %243) #17
  %407 = load ptr, ptr %353, align 8, !tbaa !17
  %408 = getelementptr inbounds %struct.sv, ptr %357, i64 0, i32 2
  %409 = load i32, ptr %408, align 4, !tbaa !49
  %410 = and i32 %409, 131072
  %411 = icmp eq i32 %410, 0
  br i1 %411, label %416, label %412

412:                                              ; preds = %403
  %413 = call ptr @Perl_sv_newmortal() #17
  %414 = icmp eq ptr %413, %48
  br i1 %414, label %416, label %415

415:                                              ; preds = %412
  call void @Perl_sv_setsv_flags(ptr noundef %413, ptr noundef %48, i32 noundef 1554) #17
  br label %416

416:                                              ; preds = %415, %412, %403
  %417 = phi ptr [ %413, %415 ], [ %48, %412 ], [ %357, %403 ]
  call void @Perl_push_scope() #17
  call void @Perl_save_strlen(ptr noundef nonnull @PL_tmps_floor) #17
  %418 = load i64, ptr @PL_tmps_ix, align 8, !tbaa !59
  store i64 %418, ptr @PL_tmps_floor, align 8, !tbaa !59
  %419 = load ptr, ptr @PL_stack_max, align 8, !tbaa !6
  %420 = ptrtoint ptr %419 to i64
  %421 = ptrtoint ptr %359 to i64
  %422 = sub i64 %420, %421
  %423 = icmp slt i64 %422, 16
  br i1 %423, label %424, label %426

424:                                              ; preds = %416
  %425 = call ptr @Perl_stack_grow(ptr noundef %359, ptr noundef %359, i64 noundef 2) #17
  br label %426

426:                                              ; preds = %424, %416
  %427 = phi ptr [ %425, %424 ], [ %359, %416 ]
  %428 = load ptr, ptr @PL_markstack_ptr, align 8, !tbaa !6
  %429 = getelementptr inbounds i32, ptr %428, i64 1
  store ptr %429, ptr @PL_markstack_ptr, align 8, !tbaa !6
  %430 = load ptr, ptr @PL_markstack_max, align 8, !tbaa !6
  %431 = icmp eq ptr %429, %430
  br i1 %431, label %432, label %434

432:                                              ; preds = %426
  %433 = call ptr @Perl_markstack_grow() #17
  br label %434

434:                                              ; preds = %426, %432
  %435 = phi ptr [ %433, %432 ], [ %429, %426 ]
  %436 = load ptr, ptr @PL_stack_base, align 8, !tbaa !6
  %437 = ptrtoint ptr %427 to i64
  %438 = ptrtoint ptr %436 to i64
  %439 = sub i64 %437, %438
  %440 = lshr exact i64 %439, 3
  %441 = trunc i64 %440 to i32
  store i32 %441, ptr %435, align 4, !tbaa !31
  %442 = getelementptr inbounds ptr, ptr %427, i64 1
  store ptr %375, ptr %442, align 8, !tbaa !6
  %443 = getelementptr inbounds ptr, ptr %427, i64 2
  store ptr %417, ptr %443, align 8, !tbaa !6
  store ptr %443, ptr @PL_stack_sp, align 8, !tbaa !6
  %444 = getelementptr inbounds %struct.sv, ptr %404, i64 0, i32 2
  %445 = load i32, ptr %444, align 4, !tbaa !49
  %446 = and i32 %445, 2097152
  %447 = icmp eq i32 %446, 0
  br i1 %447, label %450, label %448

448:                                              ; preds = %434
  %449 = call ptr @Perl_sv_newmortal() #17
  call void @Perl_sv_setsv_flags(ptr noundef %449, ptr noundef nonnull %404, i32 noundef 1536) #17
  br label %450

450:                                              ; preds = %448, %434
  %451 = phi ptr [ %449, %448 ], [ %404, %434 ]
  %452 = call i32 @Perl_sv_isobject(ptr noundef %451) #17
  %453 = icmp eq i32 %452, 0
  br i1 %453, label %456, label %454

454:                                              ; preds = %450
  %455 = call i32 @Perl_call_method(ptr noundef nonnull @.str.81, i32 noundef 3) #17
  br label %458

456:                                              ; preds = %450
  %457 = call i32 @Perl_call_sv(ptr noundef %451, i32 noundef 3) #17
  br label %458

458:                                              ; preds = %456, %454
  %459 = phi i32 [ %455, %454 ], [ %457, %456 ]
  %460 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !6
  %461 = icmp sgt i32 %459, 0
  br i1 %461, label %462, label %604

462:                                              ; preds = %458
  %463 = add nsw i32 %459, -1
  %464 = zext i32 %463 to i64
  %465 = sub nsw i64 0, %464
  %466 = getelementptr inbounds ptr, ptr %460, i64 %465
  %467 = load ptr, ptr %466, align 8, !tbaa !6
  %468 = getelementptr inbounds %struct.sv, ptr %467, i64 0, i32 2
  %469 = load i32, ptr %468, align 4, !tbaa !49
  %470 = and i32 %469, 2048
  %471 = icmp eq i32 %470, 0
  br i1 %471, label %512, label %472

472:                                              ; preds = %462
  %473 = getelementptr inbounds %struct.sv, ptr %467, i64 0, i32 3
  %474 = load ptr, ptr %473, align 8, !tbaa !17
  %475 = getelementptr inbounds %struct.sv, ptr %474, i64 0, i32 2
  %476 = load i32, ptr %475, align 4, !tbaa !49
  %477 = and i32 %476, 255
  %478 = icmp ult i32 %477, 11
  br i1 %478, label %479, label %494

479:                                              ; preds = %472
  %480 = and i32 %476, 49152
  %481 = icmp eq i32 %480, 32768
  %482 = add nsw i32 %477, -9
  %483 = icmp ult i32 %482, 2
  %484 = and i1 %481, %483
  br i1 %484, label %494, label %485

485:                                              ; preds = %479
  %486 = icmp ugt i32 %459, 1
  br i1 %486, label %487, label %494

487:                                              ; preds = %485
  %488 = getelementptr inbounds ptr, ptr %466, i64 1
  %489 = load ptr, ptr %488, align 8, !tbaa !6
  %490 = getelementptr inbounds %struct.sv, ptr %489, i64 0, i32 2
  %491 = load i32, ptr %490, align 4, !tbaa !49
  %492 = and i32 %491, 2048
  %493 = icmp eq i32 %492, 0
  br i1 %493, label %512, label %494

494:                                              ; preds = %472, %485, %479, %487
  %495 = phi ptr [ %474, %487 ], [ null, %472 ], [ %474, %485 ], [ null, %479 ]
  %496 = phi ptr [ %489, %487 ], [ %467, %472 ], [ %467, %485 ], [ %467, %479 ]
  %497 = phi i32 [ 2, %487 ], [ 1, %472 ], [ 1, %485 ], [ 1, %479 ]
  %498 = phi i32 [ %491, %487 ], [ %469, %472 ], [ %469, %485 ], [ %469, %479 ]
  %499 = getelementptr inbounds %struct.sv, ptr %496, i64 0, i32 3
  %500 = load ptr, ptr %499, align 8, !tbaa !17
  %501 = getelementptr inbounds %struct.sv, ptr %500, i64 0, i32 2
  %502 = load i32, ptr %501, align 4, !tbaa !49
  %503 = and i32 %502, 49152
  %504 = icmp eq i32 %503, 32768
  br i1 %504, label %505, label %512

505:                                              ; preds = %494
  %506 = and i32 %502, 255
  %507 = add nsw i32 %506, -9
  %508 = icmp ult i32 %507, 2
  %509 = select i1 %508, ptr %500, ptr %496
  %510 = getelementptr inbounds %struct.sv, ptr %509, i64 0, i32 2
  %511 = load i32, ptr %510, align 4, !tbaa !49
  br label %512

512:                                              ; preds = %462, %505, %494, %487
  %513 = phi ptr [ %495, %494 ], [ %474, %487 ], [ %495, %505 ], [ null, %462 ]
  %514 = phi i32 [ %497, %494 ], [ 2, %487 ], [ %497, %505 ], [ 1, %462 ]
  %515 = phi i32 [ %498, %494 ], [ %491, %487 ], [ %511, %505 ], [ %469, %462 ]
  %516 = phi ptr [ %496, %494 ], [ %489, %487 ], [ %509, %505 ], [ %467, %462 ]
  %517 = and i32 %515, 49152
  %518 = icmp eq i32 %517, 32768
  br i1 %518, label %519, label %554

519:                                              ; preds = %512
  %520 = and i32 %515, 255
  %521 = add nsw i32 %520, -9
  %522 = icmp ult i32 %521, 2
  br i1 %522, label %523, label %554

523:                                              ; preds = %519
  %524 = getelementptr inbounds %struct.gv, ptr %516, i64 0, i32 3
  %525 = load ptr, ptr %524, align 8, !tbaa !17
  %526 = icmp eq ptr %525, null
  br i1 %526, label %546, label %527

527:                                              ; preds = %523
  %528 = getelementptr inbounds %struct.gp, ptr %525, i64 0, i32 1
  %529 = load ptr, ptr %528, align 8, !tbaa !128
  %530 = icmp eq ptr %529, null
  br i1 %530, label %546, label %531

531:                                              ; preds = %527
  %532 = getelementptr inbounds %struct.io, ptr %529, i64 0, i32 3
  %533 = load ptr, ptr %532, align 8, !tbaa !17
  %534 = load ptr, ptr %529, align 8, !tbaa !129
  %535 = getelementptr inbounds %struct.xpvio, ptr %534, i64 0, i32 5
  %536 = load ptr, ptr %535, align 8, !tbaa !153
  %537 = icmp eq ptr %536, null
  %538 = icmp eq ptr %536, %533
  %539 = select i1 %537, i1 true, i1 %538
  br i1 %539, label %543, label %540

540:                                              ; preds = %531
  %541 = call i32 @Perl_PerlIO_close(ptr noundef nonnull %536) #17
  %542 = load ptr, ptr %529, align 8, !tbaa !129
  br label %543

543:                                              ; preds = %540, %531
  %544 = phi ptr [ %542, %540 ], [ %534, %531 ]
  store ptr null, ptr %532, align 8, !tbaa !17
  %545 = getelementptr inbounds %struct.xpvio, ptr %544, i64 0, i32 5
  store ptr null, ptr %545, align 8, !tbaa !153
  br label %546

546:                                              ; preds = %523, %543, %527
  %547 = phi ptr [ %533, %543 ], [ null, %527 ], [ null, %523 ]
  %548 = icmp ult i32 %514, %459
  br i1 %548, label %549, label %554

549:                                              ; preds = %546
  %550 = add nuw nsw i32 %514, 1
  %551 = zext i32 %514 to i64
  %552 = getelementptr inbounds ptr, ptr %466, i64 %551
  %553 = load ptr, ptr %552, align 8, !tbaa !6
  br label %554

554:                                              ; preds = %519, %546, %549, %512
  %555 = phi i32 [ %514, %512 ], [ %514, %519 ], [ %550, %549 ], [ %514, %546 ]
  %556 = phi ptr [ %516, %512 ], [ %516, %519 ], [ %553, %549 ], [ %516, %546 ]
  %557 = phi ptr [ null, %512 ], [ null, %519 ], [ %547, %549 ], [ %547, %546 ]
  %558 = phi i64 [ 0, %512 ], [ 0, %519 ], [ 1, %549 ], [ 1, %546 ]
  %559 = getelementptr inbounds %struct.sv, ptr %556, i64 0, i32 2
  %560 = load i32, ptr %559, align 4, !tbaa !49
  %561 = and i32 %560, 2048
  %562 = icmp eq i32 %561, 0
  br i1 %562, label %584, label %563

563:                                              ; preds = %554
  %564 = getelementptr inbounds %struct.sv, ptr %556, i64 0, i32 3
  %565 = load ptr, ptr %564, align 8, !tbaa !17
  %566 = getelementptr inbounds %struct.sv, ptr %565, i64 0, i32 2
  %567 = load i32, ptr %566, align 4, !tbaa !49
  %568 = and i32 %567, 255
  %569 = icmp eq i32 %568, 13
  br i1 %569, label %570, label %584

570:                                              ; preds = %563
  %571 = getelementptr inbounds %struct.sv, ptr %556, i64 0, i32 1
  %572 = load i32, ptr %571, align 8, !tbaa !41
  %573 = add i32 %572, 1
  store i32 %573, ptr %571, align 8, !tbaa !41
  %574 = icmp ult i32 %555, %459
  br i1 %574, label %575, label %584

575:                                              ; preds = %570
  %576 = zext i32 %555 to i64
  %577 = getelementptr inbounds ptr, ptr %466, i64 %576
  %578 = load ptr, ptr %577, align 8, !tbaa !6
  %579 = icmp eq ptr %578, null
  br i1 %579, label %584, label %580

580:                                              ; preds = %575
  %581 = getelementptr inbounds %struct.sv, ptr %578, i64 0, i32 1
  %582 = load i32, ptr %581, align 8, !tbaa !41
  %583 = add i32 %582, 1
  store i32 %583, ptr %581, align 8, !tbaa !41
  br label %584

584:                                              ; preds = %570, %580, %575, %563, %554
  %585 = phi ptr [ %556, %580 ], [ %556, %575 ], [ %556, %570 ], [ null, %563 ], [ null, %554 ]
  %586 = phi ptr [ %578, %580 ], [ null, %575 ], [ null, %570 ], [ null, %563 ], [ null, %554 ]
  %587 = icmp eq ptr %557, null
  br i1 %587, label %588, label %596

588:                                              ; preds = %584
  %589 = icmp ne ptr %513, null
  %590 = icmp ne ptr %585, null
  %591 = or i1 %589, %590
  br i1 %591, label %594, label %592

592:                                              ; preds = %588
  %593 = getelementptr inbounds ptr, ptr %466, i64 -1
  br label %604

594:                                              ; preds = %588
  %595 = call ptr @PerlIO_open(ptr noundef nonnull @.str.82, ptr noundef nonnull @.str.83) #17
  br label %596

596:                                              ; preds = %584, %594
  %597 = phi ptr [ %557, %584 ], [ %595, %594 ]
  %598 = getelementptr inbounds ptr, ptr %466, i64 -1
  %599 = icmp eq ptr %513, null
  br i1 %599, label %604, label %600

600:                                              ; preds = %596
  %601 = getelementptr inbounds %struct.sv, ptr %513, i64 0, i32 1
  %602 = load i32, ptr %601, align 8, !tbaa !41
  %603 = add i32 %602, 1
  store i32 %603, ptr %601, align 8, !tbaa !41
  br label %604

604:                                              ; preds = %458, %592, %600, %596
  %605 = phi ptr [ %598, %600 ], [ %598, %596 ], [ %593, %592 ], [ %460, %458 ]
  %606 = phi i64 [ %558, %600 ], [ %558, %596 ], [ %558, %592 ], [ 0, %458 ]
  %607 = phi ptr [ %597, %600 ], [ %597, %596 ], [ null, %592 ], [ null, %458 ]
  %608 = phi ptr [ %513, %600 ], [ null, %596 ], [ null, %592 ], [ null, %458 ]
  %609 = phi ptr [ %586, %600 ], [ %586, %596 ], [ %586, %592 ], [ null, %458 ]
  %610 = phi ptr [ %585, %600 ], [ %585, %596 ], [ null, %592 ], [ null, %458 ]
  store ptr %605, ptr @PL_stack_sp, align 8, !tbaa !6
  %611 = load i64, ptr @PL_tmps_ix, align 8, !tbaa !59
  %612 = load i64, ptr @PL_tmps_floor, align 8, !tbaa !59
  %613 = icmp sgt i64 %611, %612
  br i1 %613, label %614, label %615

614:                                              ; preds = %604
  call void @Perl_free_tmps() #17
  br label %615

615:                                              ; preds = %614, %604
  call void @Perl_pop_scope() #17
  %616 = call ptr @Perl_sv_2mortal(ptr noundef %608) #17
  %617 = load ptr, ptr @PL_incgv, align 8, !tbaa !6
  %618 = getelementptr inbounds %struct.gv, ptr %617, i64 0, i32 3
  %619 = load ptr, ptr %618, align 8, !tbaa !17
  %620 = getelementptr inbounds %struct.gp, ptr %619, i64 0, i32 5
  %621 = load ptr, ptr %620, align 8, !tbaa !155
  %622 = icmp eq ptr %621, null
  br i1 %622, label %623, label %629

623:                                              ; preds = %615
  %624 = call ptr @Perl_gv_add_by_type(ptr noundef nonnull %617, i32 noundef 12) #17
  %625 = getelementptr inbounds %struct.gv, ptr %624, i64 0, i32 3
  %626 = load ptr, ptr %625, align 8, !tbaa !17
  %627 = getelementptr inbounds %struct.gp, ptr %626, i64 0, i32 5
  %628 = load ptr, ptr %627, align 8, !tbaa !155
  br label %629

629:                                              ; preds = %615, %623
  %630 = phi ptr [ %628, %623 ], [ %621, %615 ]
  %631 = load i64, ptr %1, align 8, !tbaa !59
  %632 = trunc i64 %631 to i32
  %633 = call ptr @Perl_hv_common_key_len(ptr noundef %630, ptr noundef nonnull %243, i32 noundef %632, i32 noundef 32, ptr noundef null, i32 noundef 0) #17
  %634 = icmp eq ptr %633, null
  br i1 %634, label %646, label %635

635:                                              ; preds = %629
  %636 = load ptr, ptr %633, align 8, !tbaa !6
  %637 = getelementptr inbounds %struct.sv, ptr %636, i64 0, i32 2
  %638 = load i32, ptr %637, align 4, !tbaa !49
  %639 = and i32 %638, 2098176
  %640 = icmp eq i32 %639, 1024
  br i1 %640, label %641, label %644

641:                                              ; preds = %635
  %642 = getelementptr inbounds %struct.sv, ptr %636, i64 0, i32 3
  %643 = load ptr, ptr %642, align 8, !tbaa !17
  br label %646

644:                                              ; preds = %635
  %645 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %636, ptr noundef null, i32 noundef 34) #17
  br label %646

646:                                              ; preds = %641, %644, %629
  %647 = phi ptr [ %407, %629 ], [ %643, %641 ], [ %645, %644 ]
  %648 = icmp eq ptr %607, null
  br i1 %648, label %649, label %934

649:                                              ; preds = %646
  %650 = icmp eq ptr %609, null
  br i1 %650, label %658, label %651

651:                                              ; preds = %649
  %652 = getelementptr inbounds %struct.sv, ptr %609, i64 0, i32 1
  %653 = load i32, ptr %652, align 8, !tbaa !41
  %654 = icmp ugt i32 %653, 1
  br i1 %654, label %655, label %657

655:                                              ; preds = %651
  %656 = add i32 %653, -1
  store i32 %656, ptr %652, align 8, !tbaa !41
  br label %658

657:                                              ; preds = %651
  call void @Perl_sv_free2(ptr noundef nonnull %609, i32 noundef %653) #17
  br label %658

658:                                              ; preds = %657, %655, %649
  %659 = icmp eq ptr %610, null
  br i1 %659, label %771, label %660

660:                                              ; preds = %658
  %661 = getelementptr inbounds %struct.sv, ptr %610, i64 0, i32 1
  %662 = load i32, ptr %661, align 8, !tbaa !41
  %663 = icmp ugt i32 %662, 1
  br i1 %663, label %664, label %666

664:                                              ; preds = %660
  %665 = add i32 %662, -1
  store i32 %665, ptr %661, align 8, !tbaa !41
  br label %771

666:                                              ; preds = %660
  call void @Perl_sv_free2(ptr noundef nonnull %610, i32 noundef %662) #17
  br label %771

667:                                              ; preds = %383
  br i1 %290, label %668, label %771

668:                                              ; preds = %667
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #17
  %669 = and i32 %384, 65280
  %670 = icmp ne i32 %669, 0
  %671 = and i32 %384, 255
  %672 = icmp eq i32 %671, 8
  %673 = or i1 %670, %672
  %674 = and i32 %384, 16826623
  %675 = icmp eq i32 %674, 16777226
  %676 = or i1 %675, %673
  br i1 %676, label %677, label %689

677:                                              ; preds = %668
  %678 = and i32 %384, 2098176
  %679 = icmp eq i32 %678, 1024
  br i1 %679, label %680, label %686

680:                                              ; preds = %677
  %681 = load ptr, ptr %375, align 8, !tbaa !72
  %682 = getelementptr inbounds %struct.xpv, ptr %681, i64 0, i32 2
  %683 = load i64, ptr %682, align 8, !tbaa !53
  store i64 %683, ptr %2, align 8, !tbaa !59
  %684 = getelementptr inbounds %struct.sv, ptr %375, i64 0, i32 3
  %685 = load ptr, ptr %684, align 8, !tbaa !17
  br label %690

686:                                              ; preds = %677
  %687 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %375, ptr noundef nonnull %2, i32 noundef 32) #17
  %688 = load i64, ptr %2, align 8, !tbaa !59
  br label %690

689:                                              ; preds = %668
  store i64 0, ptr %2, align 8, !tbaa !59
  br label %698

690:                                              ; preds = %680, %686
  %691 = phi i64 [ %683, %680 ], [ %688, %686 ]
  %692 = phi ptr [ %685, %680 ], [ %687, %686 ]
  %693 = icmp ugt i64 %691, 1
  br i1 %693, label %694, label %698

694:                                              ; preds = %690
  %695 = add i64 %691, -1
  %696 = call ptr @memchr(ptr noundef %692, i32 noundef 0, i64 noundef %695) #18
  %697 = icmp eq ptr %696, null
  br i1 %697, label %698, label %769

698:                                              ; preds = %690, %694, %689
  %699 = phi i64 [ 0, %689 ], [ %691, %694 ], [ %691, %690 ]
  %700 = phi ptr [ @.str.10, %689 ], [ %692, %694 ], [ %692, %690 ]
  %701 = load i32, ptr %354, align 4, !tbaa !49
  %702 = and i32 %701, 268435456
  %703 = icmp eq i32 %702, 0
  %704 = load i64, ptr %1, align 8, !tbaa !59
  br i1 %703, label %708, label %705

705:                                              ; preds = %698
  %706 = add i64 %699, 2
  %707 = add i64 %706, %704
  br label %715

708:                                              ; preds = %698
  %709 = load ptr, ptr %351, align 8, !tbaa !72
  %710 = getelementptr inbounds %struct.xpv, ptr %709, i64 0, i32 3
  %711 = load i64, ptr %710, align 8, !tbaa !17
  %712 = add i64 %699, 2
  %713 = add i64 %712, %704
  %714 = icmp ult i64 %711, %713
  br i1 %714, label %715, label %719

715:                                              ; preds = %705, %708
  %716 = phi i64 [ %707, %705 ], [ %713, %708 ]
  %717 = call ptr @Perl_sv_grow(ptr noundef nonnull %351, i64 noundef %716) #17
  %718 = load i64, ptr %2, align 8, !tbaa !59
  br label %721

719:                                              ; preds = %708
  %720 = load ptr, ptr %353, align 8, !tbaa !17
  br label %721

721:                                              ; preds = %719, %715
  %722 = phi i64 [ %718, %715 ], [ %699, %719 ]
  %723 = phi ptr [ %717, %715 ], [ %720, %719 ]
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %723, ptr align 1 %700, i64 %722, i1 false)
  %724 = load i64, ptr %2, align 8, !tbaa !59
  %725 = getelementptr inbounds i8, ptr %723, i64 %724
  %726 = icmp eq i64 %724, 0
  br i1 %726, label %731, label %727

727:                                              ; preds = %721
  %728 = getelementptr inbounds i8, ptr %725, i64 -1
  %729 = load i8, ptr %728, align 1, !tbaa !17
  %730 = icmp eq i8 %729, 47
  br i1 %730, label %733, label %731

731:                                              ; preds = %727, %721
  %732 = getelementptr inbounds i8, ptr %725, i64 1
  store i8 47, ptr %725, align 1, !tbaa !17
  br label %735

733:                                              ; preds = %727
  %734 = add i64 %724, -1
  store i64 %734, ptr %2, align 8, !tbaa !59
  br label %735

735:                                              ; preds = %733, %731
  %736 = phi ptr [ %732, %731 ], [ %725, %733 ]
  %737 = load i64, ptr %1, align 8, !tbaa !59
  %738 = add i64 %737, 1
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %736, ptr nonnull align 1 %243, i64 %738, i1 false)
  %739 = load i64, ptr %2, align 8, !tbaa !59
  %740 = load i64, ptr %1, align 8, !tbaa !59
  %741 = add i64 %739, 1
  %742 = add i64 %741, %740
  %743 = load ptr, ptr %351, align 8, !tbaa !72
  %744 = getelementptr inbounds %struct.xpv, ptr %743, i64 0, i32 2
  store i64 %742, ptr %744, align 8, !tbaa !53
  %745 = load i32, ptr %354, align 4, !tbaa !49
  %746 = or i32 %745, 17408
  store i32 %746, ptr %354, align 4, !tbaa !49
  %747 = load i8, ptr @PL_tainting, align 1, !tbaa !26, !range !44, !noundef !45
  %748 = icmp eq i8 %747, 0
  br i1 %748, label %750, label %749

749:                                              ; preds = %735
  call void @Perl_taint_proper(ptr noundef null, ptr noundef nonnull @.str.77) #17
  br label %750

750:                                              ; preds = %735, %749
  %751 = load ptr, ptr %353, align 8, !tbaa !17
  %752 = call fastcc ptr @S_doopen_pm(ptr noundef nonnull %351)
  %753 = icmp eq ptr %752, null
  br i1 %753, label %766, label %754

754:                                              ; preds = %750
  %755 = load i8, ptr %751, align 1, !tbaa !17
  %756 = icmp eq i8 %755, 46
  br i1 %756, label %757, label %782

757:                                              ; preds = %754
  %758 = getelementptr inbounds i8, ptr %751, i64 1
  %759 = load i8, ptr %758, align 1, !tbaa !17
  %760 = icmp eq i8 %759, 47
  br i1 %760, label %761, label %782

761:                                              ; preds = %757, %761
  %762 = phi ptr [ %763, %761 ], [ %758, %757 ]
  %763 = getelementptr inbounds i8, ptr %762, i64 1
  %764 = load i8, ptr %763, align 1, !tbaa !17
  %765 = icmp eq i8 %764, 47
  br i1 %765, label %761, label %787, !llvm.loop !204

766:                                              ; preds = %750
  %767 = load i32, ptr %332, align 4, !tbaa !31
  switch i32 %767, label %768 [
    i32 24, label %784
    i32 13, label %784
  ]

768:                                              ; preds = %766
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #17
  br label %771

769:                                              ; preds = %694
  store i32 2, ptr %332, align 4, !tbaa !31
  %770 = getelementptr inbounds i8, ptr %696, i64 1
  call void (i32, ptr, ...) @Perl_ck_warner(i32 noundef 59, ptr noundef nonnull @.str.97, ptr noundef nonnull @.str.84, ptr noundef nonnull @.str.77, ptr noundef %692, ptr noundef nonnull %770) #17
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #17
  br label %771

771:                                              ; preds = %658, %664, %666, %667, %768, %769
  %772 = phi ptr [ %359, %769 ], [ %359, %667 ], [ %359, %768 ], [ %605, %666 ], [ %605, %664 ], [ %605, %658 ]
  %773 = phi ptr [ %358, %769 ], [ %358, %667 ], [ %751, %768 ], [ %647, %666 ], [ %647, %664 ], [ %647, %658 ]
  %774 = phi ptr [ %357, %769 ], [ %357, %667 ], [ %357, %768 ], [ %417, %666 ], [ %417, %664 ], [ %417, %658 ]
  %775 = add nuw nsw i64 %356, 1
  br label %355, !llvm.loop !205

776:                                              ; preds = %370, %330
  %777 = phi ptr [ null, %330 ], [ %351, %370 ]
  %778 = phi ptr [ %331, %330 ], [ %358, %370 ]
  %779 = phi ptr [ %47, %330 ], [ %359, %370 ]
  %780 = load i32, ptr %332, align 4, !tbaa !31
  %781 = call ptr @Perl_sv_2mortal(ptr noundef %777) #17
  br label %789

782:                                              ; preds = %757, %754
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #17
  %783 = call ptr @Perl_sv_2mortal(ptr noundef nonnull %351) #17
  br label %912

784:                                              ; preds = %766, %766
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #17
  %785 = load i32, ptr %332, align 4, !tbaa !31
  %786 = call ptr @Perl_sv_2mortal(ptr noundef nonnull %351) #17
  br label %789

787:                                              ; preds = %761
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #17
  %788 = call ptr @Perl_sv_2mortal(ptr noundef nonnull %351) #17
  br label %912

789:                                              ; preds = %784, %776
  %790 = phi i32 [ %780, %776 ], [ %785, %784 ]
  %791 = phi ptr [ %779, %776 ], [ %359, %784 ]
  %792 = phi ptr [ %778, %776 ], [ %751, %784 ]
  %793 = phi ptr [ %777, %776 ], [ %351, %784 ]
  %794 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %795 = getelementptr inbounds %struct.op, ptr %794, i64 0, i32 4
  %796 = load i16, ptr %795, align 8
  %797 = and i16 %796, 511
  %798 = icmp eq i16 %797, 339
  br i1 %798, label %799, label %880

799:                                              ; preds = %789
  switch i32 %790, label %803 [
    i32 24, label %800
    i32 13, label %800
  ]

800:                                              ; preds = %799, %799
  %801 = call ptr @strerror(i32 noundef %790) #17
  %802 = call ptr (ptr, ...) @Perl_die(ptr noundef nonnull @.str.85, ptr noundef nonnull %243, ptr noundef %792, ptr noundef %801) #17
  br label %1088

803:                                              ; preds = %799
  %804 = icmp eq ptr %793, null
  br i1 %804, label %878, label %805

805:                                              ; preds = %803
  %806 = load ptr, ptr @PL_incgv, align 8, !tbaa !6
  %807 = getelementptr inbounds %struct.gv, ptr %806, i64 0, i32 3
  %808 = load ptr, ptr %807, align 8, !tbaa !17
  %809 = getelementptr inbounds %struct.gp, ptr %808, i64 0, i32 6
  %810 = load ptr, ptr %809, align 8, !tbaa !138
  %811 = icmp eq ptr %810, null
  br i1 %811, label %812, label %818

812:                                              ; preds = %805
  %813 = call ptr @Perl_gv_add_by_type(ptr noundef nonnull %806, i32 noundef 11) #17
  %814 = getelementptr inbounds %struct.gv, ptr %813, i64 0, i32 3
  %815 = load ptr, ptr %814, align 8, !tbaa !17
  %816 = getelementptr inbounds %struct.gp, ptr %815, i64 0, i32 6
  %817 = load ptr, ptr %816, align 8, !tbaa !138
  br label %818

818:                                              ; preds = %805, %812
  %819 = phi ptr [ %817, %812 ], [ %810, %805 ]
  %820 = call ptr @Perl_newSVpvn_flags(ptr noundef nonnull @.str.10, i64 noundef 0, i32 noundef 524288) #17
  %821 = call ptr @Perl_newSVpvn_flags(ptr noundef nonnull @.str.10, i64 noundef 0, i32 noundef 524288) #17
  %822 = getelementptr inbounds %struct.sv, ptr %819, i64 0, i32 2
  br label %823

823:                                              ; preds = %838, %818
  %824 = phi i64 [ 0, %818 ], [ %841, %838 ]
  %825 = load i32, ptr %822, align 4, !tbaa !49
  %826 = and i32 %825, 8388608
  %827 = icmp eq i32 %826, 0
  br i1 %827, label %831, label %828

828:                                              ; preds = %823
  %829 = call i32 @Perl_mg_size(ptr noundef nonnull %819) #17
  %830 = sext i32 %829 to i64
  br label %835

831:                                              ; preds = %823
  %832 = load ptr, ptr %819, align 8, !tbaa !141
  %833 = getelementptr inbounds %struct.xpvav, ptr %832, i64 0, i32 2
  %834 = load i64, ptr %833, align 8, !tbaa !142
  br label %835

835:                                              ; preds = %831, %828
  %836 = phi i64 [ %830, %828 ], [ %834, %831 ]
  %837 = icmp sgt i64 %824, %836
  br i1 %837, label %842, label %838

838:                                              ; preds = %835
  call void @Perl_sv_catpvn_flags(ptr noundef %821, ptr noundef nonnull @.str.86, i64 noundef 1, i32 noundef 2) #17
  %839 = call ptr @Perl_av_fetch(ptr noundef %819, i64 noundef %824, i32 noundef 1) #17
  %840 = load ptr, ptr %839, align 8, !tbaa !6
  call void @Perl_sv_catsv_flags(ptr noundef %821, ptr noundef %840, i32 noundef 2) #17
  %841 = add nuw nsw i64 %824, 1
  br label %823, !llvm.loop !206

842:                                              ; preds = %835
  %843 = load i64, ptr %1, align 8, !tbaa !59
  %844 = icmp ugt i64 %843, 3
  br i1 %844, label %845, label %861

845:                                              ; preds = %842
  %846 = getelementptr inbounds i8, ptr %243, i64 %843
  %847 = getelementptr inbounds i8, ptr %846, i64 -3
  %848 = call i32 @bcmp(ptr noundef nonnull dereferenceable(4) %847, ptr noundef nonnull dereferenceable(4) @.str.87, i64 4)
  %849 = icmp eq i32 %848, 0
  br i1 %849, label %850, label %863

850:                                              ; preds = %845
  call void @Perl_sv_catpv(ptr noundef %820, ptr noundef nonnull @.str.88) #17
  %851 = icmp ult ptr %243, %847
  br i1 %851, label %852, label %874

852:                                              ; preds = %850, %858
  %853 = phi ptr [ %859, %858 ], [ %243, %850 ]
  %854 = load i8, ptr %853, align 1, !tbaa !17
  %855 = icmp eq i8 %854, 47
  br i1 %855, label %856, label %857

856:                                              ; preds = %852
  call void @Perl_sv_catpvn_flags(ptr noundef %820, ptr noundef nonnull @.str.89, i64 noundef 2, i32 noundef 2) #17
  br label %858

857:                                              ; preds = %852
  call void @Perl_sv_catpvn_flags(ptr noundef %820, ptr noundef nonnull %853, i64 noundef 1, i32 noundef 2) #17
  br label %858

858:                                              ; preds = %856, %857
  %859 = getelementptr inbounds i8, ptr %853, i64 1
  %860 = icmp eq ptr %859, %847
  br i1 %860, label %874, label %852, !llvm.loop !207

861:                                              ; preds = %842
  %862 = icmp ugt i64 %843, 1
  br i1 %862, label %863, label %876

863:                                              ; preds = %845, %861
  %864 = getelementptr inbounds i8, ptr %243, i64 %843
  %865 = getelementptr inbounds i8, ptr %864, i64 -2
  %866 = call i32 @bcmp(ptr noundef nonnull dereferenceable(3) %865, ptr noundef nonnull dereferenceable(3) @.str.91, i64 3)
  %867 = icmp eq i32 %866, 0
  br i1 %867, label %874, label %868

868:                                              ; preds = %863
  %869 = icmp ugt i64 %843, 2
  br i1 %869, label %870, label %876

870:                                              ; preds = %868
  %871 = getelementptr inbounds i8, ptr %864, i64 -3
  %872 = call i32 @bcmp(ptr noundef nonnull dereferenceable(4) %871, ptr noundef nonnull dereferenceable(4) @.str.93, i64 4)
  %873 = icmp eq i32 %872, 0
  br i1 %873, label %874, label %876

874:                                              ; preds = %858, %870, %863, %850
  %875 = phi ptr [ @.str.90, %850 ], [ @.str.92, %863 ], [ @.str.94, %870 ], [ @.str.90, %858 ]
  call void @Perl_sv_catpv(ptr noundef %820, ptr noundef nonnull %875) #17
  br label %876

876:                                              ; preds = %874, %861, %870, %868
  %877 = call ptr (ptr, ...) @Perl_die(ptr noundef nonnull @.str.95, ptr noundef nonnull %243, ptr noundef %820, ptr noundef %821) #17
  br label %1088

878:                                              ; preds = %803
  %879 = call ptr (ptr, ...) @Perl_die(ptr noundef nonnull @.str.96, ptr noundef nonnull %243) #17
  br label %1088

880:                                              ; preds = %789
  %881 = load ptr, ptr @PL_errgv, align 8, !tbaa !6
  %882 = getelementptr inbounds %struct.gv, ptr %881, i64 0, i32 3
  %883 = load ptr, ptr %882, align 8, !tbaa !17
  %884 = load ptr, ptr %883, align 8, !tbaa !6
  %885 = icmp eq ptr %884, null
  br i1 %885, label %898, label %886

886:                                              ; preds = %880
  %887 = getelementptr inbounds %struct.sv, ptr %884, i64 0, i32 2
  %888 = load i32, ptr %887, align 4, !tbaa !49
  %889 = and i32 %888, 134283264
  %890 = icmp eq i32 %889, 0
  br i1 %890, label %900, label %891

891:                                              ; preds = %886
  %892 = getelementptr inbounds %struct.sv, ptr %884, i64 0, i32 1
  %893 = load i32, ptr %892, align 8, !tbaa !41
  %894 = icmp ugt i32 %893, 1
  br i1 %894, label %895, label %897

895:                                              ; preds = %891
  %896 = add i32 %893, -1
  store i32 %896, ptr %892, align 8, !tbaa !41
  br label %898

897:                                              ; preds = %891
  call void @Perl_sv_free2(ptr noundef nonnull %884, i32 noundef %893) #17
  br label %898

898:                                              ; preds = %897, %895, %880
  %899 = call ptr @Perl_newSVpvn(ptr noundef nonnull @.str.10, i64 noundef 0) #17
  store ptr %899, ptr %883, align 8, !tbaa !6
  br label %908

900:                                              ; preds = %886
  call void @Perl_sv_setpvn(ptr noundef nonnull %884, ptr noundef nonnull @.str.10, i64 noundef 0) #17
  %901 = load i32, ptr %887, align 4, !tbaa !49
  %902 = and i32 %901, 1610547455
  %903 = or i32 %902, 17408
  store i32 %903, ptr %887, align 4, !tbaa !49
  %904 = and i32 %901, 14680064
  %905 = icmp eq i32 %904, 0
  br i1 %905, label %908, label %906

906:                                              ; preds = %900
  %907 = call i32 @Perl_mg_free(ptr noundef nonnull %884) #17
  br label %908

908:                                              ; preds = %900, %906, %898
  %909 = getelementptr inbounds ptr, ptr %791, i64 1
  store ptr @PL_sv_undef, ptr %909, align 8, !tbaa !6
  store ptr %909, ptr @PL_stack_sp, align 8, !tbaa !6
  %910 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %911 = load ptr, ptr %910, align 8, !tbaa !20
  br label %1088

912:                                              ; preds = %787, %782, %327
  %913 = phi ptr [ %328, %327 ], [ %332, %787 ], [ %332, %782 ]
  %914 = phi ptr [ %325, %327 ], [ %752, %787 ], [ %752, %782 ]
  %915 = phi ptr [ %243, %327 ], [ %763, %787 ], [ %751, %782 ]
  %916 = phi ptr [ %47, %327 ], [ %359, %787 ], [ %359, %782 ]
  store i32 0, ptr %913, align 4, !tbaa !31
  %917 = load ptr, ptr @PL_incgv, align 8, !tbaa !6
  %918 = getelementptr inbounds %struct.gv, ptr %917, i64 0, i32 3
  %919 = load ptr, ptr %918, align 8, !tbaa !17
  %920 = getelementptr inbounds %struct.gp, ptr %919, i64 0, i32 5
  %921 = load ptr, ptr %920, align 8, !tbaa !155
  %922 = icmp eq ptr %921, null
  br i1 %922, label %923, label %929

923:                                              ; preds = %912
  %924 = call ptr @Perl_gv_add_by_type(ptr noundef nonnull %917, i32 noundef 12) #17
  %925 = getelementptr inbounds %struct.gv, ptr %924, i64 0, i32 3
  %926 = load ptr, ptr %925, align 8, !tbaa !17
  %927 = getelementptr inbounds %struct.gp, ptr %926, i64 0, i32 5
  %928 = load ptr, ptr %927, align 8, !tbaa !155
  br label %929

929:                                              ; preds = %912, %923
  %930 = phi ptr [ %928, %923 ], [ %921, %912 ]
  %931 = trunc i64 %291 to i32
  %932 = call ptr @Perl_newSVpv(ptr noundef nonnull %915, i64 noundef 0) #17
  %933 = call ptr @Perl_hv_common_key_len(ptr noundef %930, ptr noundef nonnull %243, i32 noundef %931, i32 noundef 36, ptr noundef %932, i32 noundef 0) #17
  br label %972

934:                                              ; preds = %646
  %935 = call ptr @Perl_sv_2mortal(ptr noundef nonnull %351) #17
  store i32 0, ptr %332, align 4, !tbaa !31
  %936 = load ptr, ptr @PL_incgv, align 8, !tbaa !6
  %937 = getelementptr inbounds %struct.gv, ptr %936, i64 0, i32 3
  %938 = load ptr, ptr %937, align 8, !tbaa !17
  %939 = getelementptr inbounds %struct.gp, ptr %938, i64 0, i32 5
  %940 = load ptr, ptr %939, align 8, !tbaa !155
  %941 = icmp eq ptr %940, null
  br i1 %941, label %942, label %948

942:                                              ; preds = %934
  %943 = call ptr @Perl_gv_add_by_type(ptr noundef nonnull %936, i32 noundef 12) #17
  %944 = getelementptr inbounds %struct.gv, ptr %943, i64 0, i32 3
  %945 = load ptr, ptr %944, align 8, !tbaa !17
  %946 = getelementptr inbounds %struct.gp, ptr %945, i64 0, i32 5
  %947 = load ptr, ptr %946, align 8, !tbaa !155
  br label %948

948:                                              ; preds = %934, %942
  %949 = phi ptr [ %947, %942 ], [ %940, %934 ]
  %950 = trunc i64 %291 to i32
  %951 = call ptr @Perl_hv_common_key_len(ptr noundef %949, ptr noundef nonnull %243, i32 noundef %950, i32 noundef 32, ptr noundef null, i32 noundef 0) #17
  %952 = icmp eq ptr %951, null
  br i1 %952, label %953, label %972

953:                                              ; preds = %948
  %954 = load ptr, ptr @PL_incgv, align 8, !tbaa !6
  %955 = getelementptr inbounds %struct.gv, ptr %954, i64 0, i32 3
  %956 = load ptr, ptr %955, align 8, !tbaa !17
  %957 = getelementptr inbounds %struct.gp, ptr %956, i64 0, i32 5
  %958 = load ptr, ptr %957, align 8, !tbaa !155
  %959 = icmp eq ptr %958, null
  br i1 %959, label %960, label %966

960:                                              ; preds = %953
  %961 = call ptr @Perl_gv_add_by_type(ptr noundef nonnull %954, i32 noundef 12) #17
  %962 = getelementptr inbounds %struct.gv, ptr %961, i64 0, i32 3
  %963 = load ptr, ptr %962, align 8, !tbaa !17
  %964 = getelementptr inbounds %struct.gp, ptr %963, i64 0, i32 5
  %965 = load ptr, ptr %964, align 8, !tbaa !155
  br label %966

966:                                              ; preds = %953, %960
  %967 = phi ptr [ %965, %960 ], [ %958, %953 ]
  %968 = getelementptr inbounds %struct.sv, ptr %375, i64 0, i32 1
  %969 = load i32, ptr %968, align 8, !tbaa !41
  %970 = add i32 %969, 1
  store i32 %970, ptr %968, align 8, !tbaa !41
  %971 = call ptr @Perl_hv_common_key_len(ptr noundef %967, ptr noundef nonnull %243, i32 noundef %950, i32 noundef 36, ptr noundef nonnull %375, i32 noundef 0) #17
  br label %972

972:                                              ; preds = %948, %966, %929
  %973 = phi ptr [ %610, %948 ], [ %610, %966 ], [ null, %929 ]
  %974 = phi ptr [ %609, %948 ], [ %609, %966 ], [ null, %929 ]
  %975 = phi ptr [ %608, %948 ], [ %608, %966 ], [ null, %929 ]
  %976 = phi ptr [ %607, %948 ], [ %607, %966 ], [ %914, %929 ]
  %977 = phi i64 [ %606, %948 ], [ %606, %966 ], [ 0, %929 ]
  %978 = phi ptr [ %647, %948 ], [ %647, %966 ], [ %915, %929 ]
  %979 = phi ptr [ %605, %948 ], [ %605, %966 ], [ %916, %929 ]
  call void @Perl_push_scope() #17
  call void @Perl_save_strlen(ptr noundef nonnull @PL_tmps_floor) #17
  %980 = load i64, ptr @PL_tmps_ix, align 8, !tbaa !59
  store i64 %980, ptr @PL_tmps_floor, align 8, !tbaa !59
  call void @Perl_save_generic_svref(ptr noundef nonnull getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 9)) #17
  %981 = call ptr @Perl_gv_fetchfile(ptr noundef %978) #17
  %982 = icmp eq ptr %981, null
  br i1 %982, label %987, label %983

983:                                              ; preds = %972
  %984 = getelementptr inbounds %struct.sv, ptr %981, i64 0, i32 1
  %985 = load i32, ptr %984, align 8, !tbaa !41
  %986 = add i32 %985, 1
  store i32 %986, ptr %984, align 8, !tbaa !41
  br label %987

987:                                              ; preds = %972, %983
  store ptr %981, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 9), align 8, !tbaa !166
  call void @Perl_lex_start(ptr noundef null, ptr noundef nonnull %976, i32 noundef 0) #17
  %988 = icmp ne ptr %973, null
  %989 = icmp ne ptr %975, null
  %990 = or i1 %988, %989
  br i1 %990, label %991, label %1004

991:                                              ; preds = %987
  br i1 %989, label %992, label %996

992:                                              ; preds = %991
  %993 = call ptr @Perl_newSV(i64 noundef 0) #17
  %994 = icmp eq ptr %993, null
  br i1 %994, label %996, label %995

995:                                              ; preds = %992
  call void @Perl_sv_copypv_flags(ptr noundef nonnull %993, ptr noundef nonnull %975, i32 noundef 2) #17
  br label %996

996:                                              ; preds = %991, %995, %992
  %997 = phi ptr [ %993, %995 ], [ null, %992 ], [ null, %991 ]
  %998 = call ptr @Perl_filter_add(ptr noundef nonnull @S_run_user_filter, ptr noundef %997) #17
  %999 = load ptr, ptr %998, align 8, !tbaa !72
  %1000 = getelementptr inbounds %struct.xpvio, ptr %999, i64 0, i32 4
  store i64 %977, ptr %1000, align 8, !tbaa !17
  %1001 = load ptr, ptr %998, align 8, !tbaa !72
  %1002 = getelementptr inbounds %struct.xpvio, ptr %1001, i64 0, i32 11
  store ptr %974, ptr %1002, align 8, !tbaa !208
  %1003 = getelementptr inbounds %struct.xpvio, ptr %1001, i64 0, i32 15
  store ptr %973, ptr %1003, align 8, !tbaa !209
  br label %1004

1004:                                             ; preds = %987, %996
  %1005 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %1006 = getelementptr inbounds %struct.stackinfo, ptr %1005, i64 0, i32 4
  %1007 = load i32, ptr %1006, align 8, !tbaa !16
  %1008 = getelementptr inbounds %struct.stackinfo, ptr %1005, i64 0, i32 5
  %1009 = load i32, ptr %1008, align 4, !tbaa !171
  %1010 = icmp slt i32 %1007, %1009
  br i1 %1010, label %1011, label %1013

1011:                                             ; preds = %1004
  %1012 = add nsw i32 %1007, 1
  store i32 %1012, ptr %1006, align 8, !tbaa !16
  br label %1017

1013:                                             ; preds = %1004
  %1014 = call i32 @Perl_cxinc() #17
  %1015 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %1016 = getelementptr inbounds %struct.stackinfo, ptr %1015, i64 0, i32 4
  store i32 %1014, ptr %1016, align 8, !tbaa !16
  br label %1017

1017:                                             ; preds = %1013, %1011
  %1018 = phi i32 [ %1014, %1013 ], [ %1012, %1011 ]
  %1019 = phi ptr [ %1015, %1013 ], [ %1005, %1011 ]
  %1020 = getelementptr inbounds %struct.stackinfo, ptr %1019, i64 0, i32 1
  %1021 = load ptr, ptr %1020, align 8, !tbaa !14
  %1022 = sext i32 %1018 to i64
  %1023 = getelementptr inbounds %struct.context, ptr %1021, i64 %1022
  store i8 10, ptr %1023, align 8, !tbaa !17
  %1024 = load ptr, ptr @PL_stack_base, align 8, !tbaa !6
  %1025 = ptrtoint ptr %979 to i64
  %1026 = ptrtoint ptr %1024 to i64
  %1027 = sub i64 %1025, %1026
  %1028 = lshr exact i64 %1027, 3
  %1029 = trunc i64 %1028 to i32
  %1030 = getelementptr inbounds %struct.block, ptr %1023, i64 0, i32 3
  store i32 %1029, ptr %1030, align 4, !tbaa !17
  %1031 = load ptr, ptr @PL_curcop, align 8, !tbaa !6
  %1032 = getelementptr inbounds %struct.block, ptr %1023, i64 0, i32 4
  store ptr %1031, ptr %1032, align 8, !tbaa !17
  %1033 = load ptr, ptr @PL_markstack_ptr, align 8, !tbaa !6
  %1034 = load ptr, ptr @PL_markstack, align 8, !tbaa !6
  %1035 = ptrtoint ptr %1033 to i64
  %1036 = ptrtoint ptr %1034 to i64
  %1037 = sub i64 %1035, %1036
  %1038 = lshr exact i64 %1037, 2
  %1039 = trunc i64 %1038 to i32
  %1040 = getelementptr inbounds %struct.block, ptr %1023, i64 0, i32 5
  store i32 %1039, ptr %1040, align 8, !tbaa !17
  %1041 = load i32, ptr @PL_scopestack_ix, align 4, !tbaa !31
  %1042 = getelementptr inbounds %struct.block, ptr %1023, i64 0, i32 6
  store i32 %1041, ptr %1042, align 4, !tbaa !17
  %1043 = load ptr, ptr @PL_curpm, align 8, !tbaa !6
  %1044 = getelementptr inbounds %struct.block, ptr %1023, i64 0, i32 7
  store ptr %1043, ptr %1044, align 8, !tbaa !17
  %1045 = trunc i32 %46 to i8
  %1046 = getelementptr inbounds %struct.block, ptr %1023, i64 0, i32 1
  store i8 %1045, ptr %1046, align 1, !tbaa !17
  %1047 = load i8, ptr @PL_in_eval, align 1, !tbaa !17
  %1048 = and i8 %1047, 127
  %1049 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %1050 = getelementptr inbounds %struct.op, ptr %1049, i64 0, i32 4
  %1051 = load i16, ptr %1050, align 8
  %1052 = shl i16 %1051, 7
  %1053 = zext i8 %1048 to i16
  %1054 = or i16 %1052, %1053
  %1055 = getelementptr inbounds %struct.block, ptr %1023, i64 0, i32 2
  store i16 %1054, ptr %1055, align 2, !tbaa !17
  %1056 = call ptr @Perl_newSVpv(ptr noundef nonnull %243, i64 noundef 0) #17
  %1057 = getelementptr inbounds %struct.block, ptr %1023, i64 0, i32 8
  %1058 = getelementptr inbounds %struct.block, ptr %1023, i64 0, i32 8, i32 0, i32 1
  store ptr %1056, ptr %1058, align 8, !tbaa !17
  %1059 = load ptr, ptr @PL_eval_root, align 8, !tbaa !6
  %1060 = getelementptr inbounds %struct.block, ptr %1023, i64 0, i32 8, i32 0, i32 2
  store ptr %1059, ptr %1060, align 8, !tbaa !17
  %1061 = load ptr, ptr @PL_parser, align 8, !tbaa !6
  %1062 = icmp eq ptr %1061, null
  br i1 %1062, label %1066, label %1063

1063:                                             ; preds = %1017
  %1064 = getelementptr inbounds %struct.yy_parser, ptr %1061, i64 0, i32 33
  %1065 = load ptr, ptr %1064, align 8, !tbaa !210
  br label %1066

1066:                                             ; preds = %1017, %1063
  %1067 = phi ptr [ %1065, %1063 ], [ null, %1017 ]
  %1068 = getelementptr inbounds %struct.block, ptr %1023, i64 0, i32 8, i32 0, i32 3
  store ptr %1067, ptr %1068, align 8, !tbaa !17
  %1069 = getelementptr inbounds %struct.block, ptr %1023, i64 0, i32 8, i32 0, i32 4
  store ptr null, ptr %1069, align 8, !tbaa !17
  store ptr null, ptr %1057, align 8, !tbaa !17
  %1070 = load ptr, ptr @PL_top_env, align 8, !tbaa !6
  %1071 = getelementptr inbounds %struct.block, ptr %1023, i64 0, i32 8, i32 0, i32 5
  store ptr %1070, ptr %1071, align 8, !tbaa !17
  %1072 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %1073 = load ptr, ptr %1072, align 8, !tbaa !20
  store ptr %1073, ptr %1057, align 8, !tbaa !17
  call void @Perl_save_I32(ptr noundef nonnull getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 7)) #17
  store i32 0, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 7), align 4, !tbaa !168
  store ptr %979, ptr @PL_stack_sp, align 8, !tbaa !6
  %1074 = load ptr, ptr @PL_curcop, align 8, !tbaa !6
  %1075 = getelementptr inbounds %struct.cop, ptr %1074, i64 0, i32 11
  %1076 = load i32, ptr %1075, align 4, !tbaa !202
  %1077 = call fastcc zeroext i1 @S_doeval(i32 noundef %46, ptr noundef null, i32 noundef %1076, ptr noundef null)
  br i1 %1077, label %1078, label %1085

1078:                                             ; preds = %1066
  %1079 = load ptr, ptr @PL_top_env, align 8, !tbaa !6
  %1080 = getelementptr inbounds %struct.jmpenv, ptr %1079, i64 0, i32 3
  %1081 = load i8, ptr %1080, align 4, !tbaa !211, !range !44, !noundef !45
  %1082 = icmp eq i8 %1081, 0
  %1083 = load ptr, ptr @PL_eval_start, align 8, !tbaa !6
  br i1 %1082, label %1088, label %1084

1084:                                             ; preds = %1078
  call fastcc void @S_docatch(ptr noundef %1083)
  br label %1088

1085:                                             ; preds = %1066
  %1086 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %1087 = load ptr, ptr %1086, align 8, !tbaa !20
  br label %1088

1088:                                             ; preds = %1078, %318, %321, %1085, %1084, %158, %201, %908, %878, %876, %800, %258, %250, %227, %214, %97
  %1089 = phi ptr [ %103, %97 ], [ %216, %214 ], [ %802, %800 ], [ %877, %876 ], [ %879, %878 ], [ %911, %908 ], [ %273, %258 ], [ %251, %250 ], [ %228, %227 ], [ %164, %158 ], [ %213, %201 ], [ %1087, %1085 ], [ null, %1084 ], [ %322, %321 ], [ %320, %318 ], [ %1083, %1078 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %1) #17
  ret ptr %1089
}

declare ptr @Perl_new_version(ptr noundef) local_unnamed_addr #2

declare zeroext i1 @Perl_sv_derived_from_pvn(ptr noundef, ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #2

declare ptr @Perl_upg_version(ptr noundef, i1 noundef zeroext) local_unnamed_addr #2

declare i32 @Perl_vcmp(ptr noundef, ptr noundef) local_unnamed_addr #2

declare ptr @Perl_vnormal(ptr noundef) local_unnamed_addr #2

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare ptr @strstr(ptr noundef, ptr nocapture noundef) local_unnamed_addr #6

declare ptr @Perl_newSVpvf(ptr noundef, ...) local_unnamed_addr #2

declare ptr @Perl_pv_escape(ptr noundef, ptr noundef, i64 noundef, i64 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind
declare ptr @strerror(i32 noundef) local_unnamed_addr #9

declare void @Perl_taint_proper(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @S_doopen_pm(ptr noundef %0) unnamed_addr #0 {
  %2 = alloca i64, align 8
  %3 = alloca %struct.stat, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %2) #17
  %4 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %5 = load i32, ptr %4, align 4, !tbaa !49
  %6 = and i32 %5, 2098176
  %7 = icmp eq i32 %6, 1024
  br i1 %7, label %8, label %14

8:                                                ; preds = %1
  %9 = load ptr, ptr %0, align 8, !tbaa !72
  %10 = getelementptr inbounds %struct.xpv, ptr %9, i64 0, i32 2
  %11 = load i64, ptr %10, align 8, !tbaa !53
  store i64 %11, ptr %2, align 8, !tbaa !59
  %12 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %13 = load ptr, ptr %12, align 8, !tbaa !17
  br label %17

14:                                               ; preds = %1
  %15 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %0, ptr noundef nonnull %2, i32 noundef 34) #17
  %16 = load i64, ptr %2, align 8, !tbaa !59
  br label %17

17:                                               ; preds = %14, %8
  %18 = phi i64 [ %16, %14 ], [ %11, %8 ]
  %19 = phi ptr [ %15, %14 ], [ %13, %8 ]
  %20 = icmp ugt i64 %18, 1
  br i1 %20, label %21, label %56

21:                                               ; preds = %17
  %22 = add i64 %18, -1
  %23 = call ptr @memchr(ptr noundef %19, i32 noundef 0, i64 noundef %22) #18
  %24 = icmp eq ptr %23, null
  br i1 %24, label %28, label %25

25:                                               ; preds = %21
  %26 = tail call ptr @__errno_location() #20
  store i32 2, ptr %26, align 4, !tbaa !31
  %27 = getelementptr inbounds i8, ptr %23, i64 1
  call void (i32, ptr, ...) @Perl_ck_warner(i32 noundef 59, ptr noundef nonnull @.str.97, ptr noundef nonnull @.str.76, ptr noundef nonnull @.str.77, ptr noundef %19, ptr noundef nonnull %27) #17
  br label %58

28:                                               ; preds = %21
  %29 = icmp ugt i64 %18, 3
  br i1 %29, label %30, label %56

30:                                               ; preds = %28
  %31 = getelementptr inbounds i8, ptr %19, i64 %18
  %32 = getelementptr inbounds i8, ptr %31, i64 -3
  %33 = call i32 @bcmp(ptr noundef nonnull dereferenceable(3) %32, ptr noundef nonnull dereferenceable(3) @.str.87, i64 3)
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %56

35:                                               ; preds = %30
  %36 = call ptr @Perl_sv_newmortal() #17
  call void @llvm.lifetime.start.p0(i64 144, ptr nonnull %3) #17
  %37 = icmp eq ptr %36, %0
  br i1 %37, label %39, label %38

38:                                               ; preds = %35
  call void @Perl_sv_setsv_flags(ptr noundef %36, ptr noundef nonnull %0, i32 noundef 1554) #17
  br label %39

39:                                               ; preds = %35, %38
  call void @Perl_sv_catpvn_flags(ptr noundef %36, ptr noundef nonnull @.str.98, i64 noundef 1, i32 noundef 2) #17
  %40 = getelementptr inbounds %struct.sv, ptr %36, i64 0, i32 2
  %41 = load i32, ptr %40, align 4, !tbaa !49
  %42 = and i32 %41, 2098176
  %43 = icmp eq i32 %42, 1024
  br i1 %43, label %44, label %47

44:                                               ; preds = %39
  %45 = getelementptr inbounds %struct.sv, ptr %36, i64 0, i32 3
  %46 = load ptr, ptr %45, align 8, !tbaa !17
  br label %49

47:                                               ; preds = %39
  %48 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %36, ptr noundef null, i32 noundef 34) #17
  br label %49

49:                                               ; preds = %47, %44
  %50 = phi ptr [ %46, %44 ], [ %48, %47 ]
  %51 = call i32 @stat64(ptr noundef %50, ptr noundef nonnull %3) #17
  %52 = icmp slt i32 %51, 0
  br i1 %52, label %53, label %54

53:                                               ; preds = %49
  call void @llvm.lifetime.end.p0(i64 144, ptr nonnull %3) #17
  br label %56

54:                                               ; preds = %49
  %55 = call fastcc ptr @S_check_type_and_open(ptr noundef nonnull %36)
  call void @llvm.lifetime.end.p0(i64 144, ptr nonnull %3) #17
  br label %58

56:                                               ; preds = %17, %53, %30, %28
  %57 = call fastcc ptr @S_check_type_and_open(ptr noundef nonnull %0)
  br label %58

58:                                               ; preds = %54, %25, %56
  %59 = phi ptr [ %57, %56 ], [ %55, %54 ], [ null, %25 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %2) #17
  ret ptr %59
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare ptr @__errno_location() local_unnamed_addr #10

declare void @Perl_sv_setpvf(ptr noundef, ptr noundef, ...) local_unnamed_addr #2

declare i32 @Perl_sv_isobject(ptr noundef) local_unnamed_addr #2

declare i32 @Perl_call_method(ptr noundef, i32 noundef) local_unnamed_addr #2

declare i32 @Perl_PerlIO_close(ptr noundef) local_unnamed_addr #2

declare ptr @PerlIO_open(ptr noundef, ptr noundef) local_unnamed_addr #2

declare void @Perl_sv_catpv(ptr noundef, ptr noundef) local_unnamed_addr #2

declare ptr @Perl_gv_fetchfile(ptr noundef) local_unnamed_addr #2

declare void @Perl_lex_start(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

declare void @Perl_sv_copypv_flags(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

declare ptr @Perl_filter_add(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @S_run_user_filter(i32 noundef %0, ptr noundef %1, i32 noundef %2) #0 {
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = load ptr, ptr @PL_parser, align 8, !tbaa !6
  %7 = icmp eq ptr %6, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.yy_parser, ptr %6, i64 0, i32 47
  %10 = load ptr, ptr %9, align 8, !tbaa !212
  %11 = getelementptr inbounds %struct.av, ptr %10, i64 0, i32 3
  %12 = load ptr, ptr %11, align 8, !tbaa !17
  %13 = sext i32 %0 to i64
  %14 = getelementptr inbounds ptr, ptr %12, i64 %13
  %15 = load ptr, ptr %14, align 8, !tbaa !6
  br label %16

16:                                               ; preds = %3, %8
  %17 = phi ptr [ %15, %8 ], [ null, %3 ]
  %18 = load ptr, ptr %17, align 8, !tbaa !72
  %19 = getelementptr inbounds %struct.xpvio, ptr %18, i64 0, i32 4
  %20 = load i64, ptr %19, align 8, !tbaa !17
  %21 = getelementptr inbounds %struct.xpvio, ptr %18, i64 0, i32 11
  %22 = load ptr, ptr %21, align 8, !tbaa !208
  %23 = getelementptr inbounds %struct.xpvio, ptr %18, i64 0, i32 15
  %24 = load ptr, ptr %23, align 8, !tbaa !209
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #17
  %25 = sext i32 %2 to i64
  %26 = getelementptr inbounds %struct.sv, ptr %17, i64 0, i32 2
  %27 = load i32, ptr %26, align 4, !tbaa !49
  %28 = and i32 %27, 65280
  %29 = icmp ne i32 %28, 0
  %30 = and i32 %27, 255
  %31 = icmp eq i32 %30, 8
  %32 = or i1 %29, %31
  %33 = and i32 %27, 16826623
  %34 = icmp eq i32 %33, 16777226
  %35 = or i1 %34, %32
  br i1 %35, label %36, label %75

36:                                               ; preds = %16
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %5) #17
  %37 = and i32 %27, 2098176
  %38 = icmp eq i32 %37, 1024
  br i1 %38, label %39, label %44

39:                                               ; preds = %36
  %40 = getelementptr inbounds %struct.xpv, ptr %18, i64 0, i32 2
  %41 = load i64, ptr %40, align 8, !tbaa !53
  store i64 %41, ptr %5, align 8, !tbaa !59
  %42 = getelementptr inbounds %struct.sv, ptr %17, i64 0, i32 3
  %43 = load ptr, ptr %42, align 8, !tbaa !17
  br label %46

44:                                               ; preds = %36
  %45 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %17, ptr noundef nonnull %5, i32 noundef 2) #17
  br label %46

46:                                               ; preds = %44, %39
  %47 = phi ptr [ %43, %39 ], [ %45, %44 ]
  %48 = icmp eq i32 %2, 0
  %49 = load i64, ptr %5, align 8, !tbaa !59
  br i1 %48, label %52, label %50

50:                                               ; preds = %46
  %51 = icmp ult i64 %49, %25
  br i1 %51, label %62, label %59

52:                                               ; preds = %46
  %53 = call ptr @memchr(ptr noundef %47, i32 noundef 10, i64 noundef %49) #18
  %54 = icmp eq ptr %53, null
  %55 = getelementptr inbounds i8, ptr %53, i64 1
  %56 = ptrtoint ptr %55 to i64
  %57 = ptrtoint ptr %47 to i64
  %58 = sub i64 %56, %57
  br i1 %54, label %62, label %59

59:                                               ; preds = %50, %52
  %60 = phi i64 [ %58, %52 ], [ %25, %50 ]
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %62, label %73

62:                                               ; preds = %50, %52, %59
  call void @Perl_sv_catsv_flags(ptr noundef %1, ptr noundef nonnull %17, i32 noundef 2) #17
  %63 = load i64, ptr %5, align 8
  %64 = sub i64 %25, %63
  %65 = select i1 %48, i64 0, i64 %64
  %66 = load i32, ptr %26, align 4, !tbaa !49
  %67 = and i32 %66, 1610547455
  store i32 %67, ptr %26, align 4, !tbaa !49
  %68 = and i32 %66, 33554432
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %72, label %70

70:                                               ; preds = %62
  %71 = call i32 @Perl_sv_backoff(ptr noundef nonnull %17) #17
  br label %72

72:                                               ; preds = %70, %62
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #17
  br label %75

73:                                               ; preds = %59
  call void @Perl_sv_catpvn_flags(ptr noundef %1, ptr noundef %47, i64 noundef %60, i32 noundef 2) #17
  %74 = getelementptr inbounds i8, ptr %47, i64 %60
  call void @Perl_sv_chop(ptr noundef nonnull %17, ptr noundef nonnull %74) #17
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %5) #17
  br label %443

75:                                               ; preds = %72, %16
  %76 = phi i64 [ %65, %72 ], [ %25, %16 ]
  %77 = getelementptr inbounds %struct.sv, ptr %1, i64 0, i32 2
  %78 = load i32, ptr %77, align 4, !tbaa !49
  %79 = and i32 %78, 65280
  %80 = icmp ne i32 %79, 0
  %81 = and i32 %78, 255
  %82 = icmp eq i32 %81, 8
  %83 = or i1 %80, %82
  %84 = and i32 %78, 16826623
  %85 = icmp eq i32 %84, 16777226
  %86 = or i1 %85, %83
  br i1 %86, label %87, label %92

87:                                               ; preds = %75
  %88 = call i64 @Perl_sv_len(ptr noundef nonnull %1) #17
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %90, label %96

90:                                               ; preds = %87
  %91 = load i32, ptr %77, align 4, !tbaa !49
  br label %92

92:                                               ; preds = %90, %75
  %93 = phi i32 [ %91, %90 ], [ %78, %75 ]
  %94 = and i32 %93, 2097152
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %100, label %96

96:                                               ; preds = %92, %87
  %97 = call ptr @Perl_sv_newmortal() #17
  %98 = getelementptr inbounds %struct.sv, ptr %97, i64 0, i32 2
  %99 = load i32, ptr %98, align 4, !tbaa !49
  br label %100

100:                                              ; preds = %92, %96
  %101 = phi i32 [ %99, %96 ], [ %93, %92 ]
  %102 = phi ptr [ %97, %96 ], [ %1, %92 ]
  %103 = getelementptr inbounds %struct.sv, ptr %102, i64 0, i32 2
  %104 = and i32 %101, 255
  %105 = icmp ugt i32 %104, 2
  br i1 %105, label %107, label %106

106:                                              ; preds = %100
  call void @Perl_sv_upgrade(ptr noundef nonnull %102, i32 noundef 3) #17
  br label %107

107:                                              ; preds = %106, %100
  %108 = and i64 %20, 4294967295
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %113, label %110

110:                                              ; preds = %107
  %111 = add nsw i32 %0, 1
  %112 = call i32 @Perl_filter_read(i32 noundef %111, ptr noundef nonnull %102, i32 noundef 0) #17
  br label %113

113:                                              ; preds = %110, %107
  %114 = phi i32 [ %112, %110 ], [ 0, %107 ]
  %115 = icmp ne ptr %24, null
  %116 = icmp sgt i32 %114, -1
  %117 = select i1 %115, i1 %116, i1 false
  br i1 %117, label %118, label %294

118:                                              ; preds = %113
  %119 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !6
  call void @Perl_push_scope() #17
  %120 = load ptr, ptr @PL_defgv, align 8, !tbaa !6
  call void @Perl_save_gp(ptr noundef %120, i32 noundef 0) #17
  %121 = load ptr, ptr @PL_defgv, align 8, !tbaa !6
  %122 = load ptr, ptr %121, align 8, !tbaa !114
  %123 = getelementptr inbounds %struct.xpvgv, ptr %122, i64 0, i32 2
  %124 = load i64, ptr %123, align 8, !tbaa !116
  %125 = and i64 %124, -2
  store i64 %125, ptr %123, align 8, !tbaa !116
  %126 = getelementptr inbounds %struct.gv, ptr %121, i64 0, i32 3
  %127 = load ptr, ptr %126, align 8, !tbaa !17
  call void @Perl_save_generic_svref(ptr noundef %127) #17
  %128 = load ptr, ptr @PL_defgv, align 8, !tbaa !6
  %129 = getelementptr inbounds %struct.gv, ptr %128, i64 0, i32 3
  %130 = load ptr, ptr %129, align 8, !tbaa !17
  store ptr null, ptr %130, align 8, !tbaa !48
  call void @Perl_save_strlen(ptr noundef nonnull @PL_tmps_floor) #17
  %131 = load i64, ptr @PL_tmps_ix, align 8, !tbaa !59
  store i64 %131, ptr @PL_tmps_floor, align 8, !tbaa !59
  %132 = load ptr, ptr @PL_stack_max, align 8, !tbaa !6
  %133 = ptrtoint ptr %132 to i64
  %134 = ptrtoint ptr %119 to i64
  %135 = sub i64 %133, %134
  %136 = icmp slt i64 %135, 16
  br i1 %136, label %137, label %139

137:                                              ; preds = %118
  %138 = call ptr @Perl_stack_grow(ptr noundef %119, ptr noundef %119, i64 noundef 2) #17
  br label %139

139:                                              ; preds = %118, %137
  %140 = phi ptr [ %138, %137 ], [ %119, %118 ]
  %141 = load ptr, ptr @PL_defgv, align 8, !tbaa !6
  %142 = getelementptr inbounds %struct.gv, ptr %141, i64 0, i32 3
  %143 = load ptr, ptr %142, align 8, !tbaa !17
  %144 = load ptr, ptr %143, align 8, !tbaa !48
  %145 = icmp eq ptr %144, null
  br i1 %145, label %154, label %146

146:                                              ; preds = %139
  %147 = getelementptr inbounds %struct.sv, ptr %144, i64 0, i32 1
  %148 = load i32, ptr %147, align 8, !tbaa !41
  %149 = icmp ugt i32 %148, 1
  br i1 %149, label %150, label %152

150:                                              ; preds = %146
  %151 = add i32 %148, -1
  store i32 %151, ptr %147, align 8, !tbaa !41
  br label %154

152:                                              ; preds = %146
  call void @Perl_sv_free2(ptr noundef nonnull %144, i32 noundef %148) #17
  %153 = load ptr, ptr @PL_defgv, align 8, !tbaa !6
  br label %154

154:                                              ; preds = %139, %150, %152
  %155 = phi ptr [ %141, %139 ], [ %141, %150 ], [ %153, %152 ]
  %156 = getelementptr inbounds %struct.sv, ptr %102, i64 0, i32 1
  %157 = load i32, ptr %156, align 8, !tbaa !41
  %158 = add i32 %157, 1
  store i32 %158, ptr %156, align 8, !tbaa !41
  %159 = getelementptr inbounds %struct.gv, ptr %155, i64 0, i32 3
  %160 = load ptr, ptr %159, align 8, !tbaa !17
  store ptr %102, ptr %160, align 8, !tbaa !48
  %161 = load ptr, ptr @PL_markstack_ptr, align 8, !tbaa !6
  %162 = getelementptr inbounds i32, ptr %161, i64 1
  store ptr %162, ptr @PL_markstack_ptr, align 8, !tbaa !6
  %163 = load ptr, ptr @PL_markstack_max, align 8, !tbaa !6
  %164 = icmp eq ptr %162, %163
  br i1 %164, label %165, label %167

165:                                              ; preds = %154
  %166 = call ptr @Perl_markstack_grow() #17
  br label %167

167:                                              ; preds = %154, %165
  %168 = phi ptr [ %166, %165 ], [ %162, %154 ]
  %169 = load ptr, ptr @PL_stack_base, align 8, !tbaa !6
  %170 = ptrtoint ptr %140 to i64
  %171 = ptrtoint ptr %169 to i64
  %172 = sub i64 %170, %171
  %173 = lshr exact i64 %172, 3
  %174 = trunc i64 %173 to i32
  store i32 %174, ptr %168, align 4, !tbaa !31
  %175 = call ptr @Perl_sv_newmortal() #17
  %176 = getelementptr inbounds ptr, ptr %140, i64 1
  store ptr %175, ptr %176, align 8, !tbaa !6
  call void @Perl_sv_setiv(ptr noundef %175, i64 noundef 0) #17
  %177 = icmp eq ptr %22, null
  br i1 %177, label %180, label %178

178:                                              ; preds = %167
  %179 = getelementptr inbounds ptr, ptr %140, i64 2
  store ptr %22, ptr %179, align 8, !tbaa !6
  br label %180

180:                                              ; preds = %178, %167
  %181 = phi ptr [ %179, %178 ], [ %176, %167 ]
  store ptr %181, ptr @PL_stack_sp, align 8, !tbaa !6
  %182 = call i32 @Perl_call_sv(ptr noundef nonnull %24, i32 noundef 10) #17
  %183 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !6
  %184 = icmp sgt i32 %182, 0
  br i1 %184, label %185, label %285

185:                                              ; preds = %180
  %186 = getelementptr inbounds ptr, ptr %183, i64 -1
  %187 = load ptr, ptr %183, align 8, !tbaa !6
  %188 = getelementptr inbounds %struct.sv, ptr %187, i64 0, i32 2
  %189 = load i32, ptr %188, align 4, !tbaa !49
  %190 = and i32 %189, 2097152
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %195, label %192

192:                                              ; preds = %185
  %193 = call i32 @Perl_mg_get(ptr noundef nonnull %187) #17
  %194 = load i32, ptr %188, align 4, !tbaa !49
  br label %195

195:                                              ; preds = %185, %192
  %196 = phi i32 [ %189, %185 ], [ %194, %192 ]
  %197 = and i32 %196, 65280
  %198 = icmp ne i32 %197, 0
  %199 = and i32 %196, 255
  %200 = icmp eq i32 %199, 8
  %201 = or i1 %198, %200
  %202 = and i32 %196, 16826623
  %203 = icmp eq i32 %202, 16777226
  %204 = or i1 %203, %201
  br i1 %204, label %205, label %217

205:                                              ; preds = %195
  %206 = and i32 %196, 2097408
  %207 = icmp eq i32 %206, 256
  br i1 %207, label %208, label %212

208:                                              ; preds = %205
  %209 = load ptr, ptr %187, align 8, !tbaa !72
  %210 = getelementptr inbounds %struct.xpviv, ptr %209, i64 0, i32 4
  %211 = load i64, ptr %210, align 8, !tbaa !17
  br label %214

212:                                              ; preds = %205
  %213 = call i64 @Perl_sv_2iv_flags(ptr noundef nonnull %187, i32 noundef 2) #17
  br label %214

214:                                              ; preds = %212, %208
  %215 = phi i64 [ %211, %208 ], [ %213, %212 ]
  %216 = trunc i64 %215 to i32
  br label %285

217:                                              ; preds = %195
  %218 = load ptr, ptr @PL_errgv, align 8, !tbaa !6
  %219 = getelementptr inbounds %struct.gv, ptr %218, i64 0, i32 3
  %220 = load ptr, ptr %219, align 8, !tbaa !17
  %221 = load ptr, ptr %220, align 8, !tbaa !6
  %222 = icmp eq ptr %221, null
  br i1 %222, label %223, label %228

223:                                              ; preds = %217
  %224 = call ptr @Perl_gv_add_by_type(ptr noundef nonnull %218, i32 noundef 0) #17
  %225 = getelementptr inbounds %struct.gv, ptr %224, i64 0, i32 3
  %226 = load ptr, ptr %225, align 8, !tbaa !17
  %227 = load ptr, ptr %226, align 8, !tbaa !6
  br label %228

228:                                              ; preds = %217, %223
  %229 = phi ptr [ %227, %223 ], [ %221, %217 ]
  %230 = getelementptr inbounds %struct.sv, ptr %229, i64 0, i32 2
  %231 = load i32, ptr %230, align 4, !tbaa !49
  %232 = and i32 %231, 2097152
  %233 = icmp eq i32 %232, 0
  br i1 %233, label %236, label %234

234:                                              ; preds = %228
  %235 = call zeroext i1 @Perl_sv_2bool_flags(ptr noundef nonnull %229, i32 noundef 2) #17
  br i1 %235, label %283, label %285

236:                                              ; preds = %228
  %237 = and i32 %231, 65280
  %238 = icmp ne i32 %237, 0
  %239 = and i32 %231, 255
  %240 = icmp eq i32 %239, 8
  %241 = or i1 %238, %240
  %242 = and i32 %231, 16826623
  %243 = icmp eq i32 %242, 16777226
  %244 = or i1 %243, %241
  br i1 %244, label %245, label %285

245:                                              ; preds = %236
  %246 = and i32 %231, 1024
  %247 = icmp eq i32 %246, 0
  br i1 %247, label %262, label %248

248:                                              ; preds = %245
  %249 = load ptr, ptr %229, align 8, !tbaa !72
  %250 = icmp eq ptr %249, null
  br i1 %250, label %285, label %251

251:                                              ; preds = %248
  %252 = getelementptr inbounds %struct.xpv, ptr %249, i64 0, i32 2
  %253 = load i64, ptr %252, align 8, !tbaa !53
  %254 = icmp ugt i64 %253, 1
  br i1 %254, label %283, label %255

255:                                              ; preds = %251
  %256 = icmp eq i64 %253, 0
  br i1 %256, label %285, label %257

257:                                              ; preds = %255
  %258 = getelementptr inbounds %struct.sv, ptr %229, i64 0, i32 3
  %259 = load ptr, ptr %258, align 8, !tbaa !17
  %260 = load i8, ptr %259, align 1, !tbaa !17
  %261 = icmp eq i8 %260, 48
  br i1 %261, label %285, label %283

262:                                              ; preds = %245
  %263 = and i32 %231, 768
  %264 = icmp eq i32 %263, 0
  br i1 %264, label %281, label %265

265:                                              ; preds = %262
  %266 = and i32 %231, 256
  %267 = icmp eq i32 %266, 0
  br i1 %267, label %273, label %268

268:                                              ; preds = %265
  %269 = load ptr, ptr %229, align 8, !tbaa !72
  %270 = getelementptr inbounds %struct.xpviv, ptr %269, i64 0, i32 4
  %271 = load i64, ptr %270, align 8, !tbaa !17
  %272 = icmp eq i64 %271, 0
  br i1 %272, label %273, label %283

273:                                              ; preds = %268, %265
  %274 = and i32 %231, 512
  %275 = icmp eq i32 %274, 0
  br i1 %275, label %285, label %276

276:                                              ; preds = %273
  %277 = load ptr, ptr %229, align 8, !tbaa !72
  %278 = getelementptr inbounds %struct.xpvnv, ptr %277, i64 0, i32 5
  %279 = load double, ptr %278, align 8, !tbaa !17
  %280 = fcmp une double %279, 0.000000e+00
  br i1 %280, label %283, label %285

281:                                              ; preds = %262
  %282 = call zeroext i1 @Perl_sv_2bool_flags(ptr noundef nonnull %229, i32 noundef 0) #17
  br i1 %282, label %283, label %285

283:                                              ; preds = %281, %276, %268, %257, %251, %234
  %284 = call ptr @Perl_newSVsv(ptr noundef nonnull %229) #17
  br label %285

285:                                              ; preds = %214, %276, %236, %283, %281, %273, %257, %255, %248, %234, %180
  %286 = phi ptr [ null, %180 ], [ null, %214 ], [ %284, %283 ], [ null, %234 ], [ null, %257 ], [ null, %255 ], [ null, %248 ], [ null, %273 ], [ null, %281 ], [ null, %236 ], [ null, %276 ]
  %287 = phi ptr [ %183, %180 ], [ %186, %214 ], [ %186, %283 ], [ %186, %234 ], [ %186, %257 ], [ %186, %255 ], [ %186, %248 ], [ %186, %273 ], [ %186, %281 ], [ %186, %236 ], [ %186, %276 ]
  %288 = phi i32 [ %114, %180 ], [ %216, %214 ], [ %114, %283 ], [ %114, %234 ], [ %114, %257 ], [ %114, %255 ], [ %114, %248 ], [ %114, %273 ], [ %114, %281 ], [ %114, %236 ], [ %114, %276 ]
  store ptr %287, ptr @PL_stack_sp, align 8, !tbaa !6
  %289 = load i64, ptr @PL_tmps_ix, align 8, !tbaa !59
  %290 = load i64, ptr @PL_tmps_floor, align 8, !tbaa !59
  %291 = icmp sgt i64 %289, %290
  br i1 %291, label %292, label %293

292:                                              ; preds = %285
  call void @Perl_free_tmps() #17
  br label %293

293:                                              ; preds = %292, %285
  call void @Perl_pop_scope() #17
  br label %294

294:                                              ; preds = %293, %113
  %295 = phi ptr [ %286, %293 ], [ null, %113 ]
  %296 = phi i32 [ %288, %293 ], [ %114, %113 ]
  %297 = load i32, ptr %103, align 4, !tbaa !49
  %298 = and i32 %297, 2097152
  %299 = icmp eq i32 %298, 0
  br i1 %299, label %305, label %300

300:                                              ; preds = %294
  %301 = call i32 @Perl_mg_get(ptr noundef nonnull %102) #17
  %302 = icmp eq ptr %102, %1
  br i1 %302, label %303, label %305

303:                                              ; preds = %300
  %304 = call i32 @Perl_mg_free(ptr noundef nonnull %1) #17
  br label %305

305:                                              ; preds = %300, %303, %294
  %306 = load i32, ptr %103, align 4, !tbaa !49
  %307 = and i32 %306, 268435456
  %308 = icmp eq i32 %307, 0
  br i1 %308, label %311, label %309

309:                                              ; preds = %305
  call void @Perl_sv_force_normal_flags(ptr noundef nonnull %102, i32 noundef 0) #17
  %310 = load i32, ptr %103, align 4, !tbaa !49
  br label %311

311:                                              ; preds = %309, %305
  %312 = phi i32 [ %310, %309 ], [ %306, %305 ]
  %313 = icmp eq ptr %295, null
  br i1 %313, label %314, label %391

314:                                              ; preds = %311
  %315 = and i32 %312, 65280
  %316 = icmp ne i32 %315, 0
  %317 = and i32 %312, 255
  %318 = icmp eq i32 %317, 8
  %319 = or i1 %316, %318
  %320 = and i32 %312, 16826623
  %321 = icmp eq i32 %320, 16777226
  %322 = or i1 %321, %319
  br i1 %322, label %323, label %377

323:                                              ; preds = %314
  %324 = and i32 %312, 2098176
  %325 = icmp eq i32 %324, 1024
  br i1 %325, label %326, label %332

326:                                              ; preds = %323
  %327 = load ptr, ptr %102, align 8, !tbaa !72
  %328 = getelementptr inbounds %struct.xpv, ptr %327, i64 0, i32 2
  %329 = load i64, ptr %328, align 8, !tbaa !53
  store i64 %329, ptr %4, align 8, !tbaa !59
  %330 = getelementptr inbounds %struct.sv, ptr %102, i64 0, i32 3
  %331 = load ptr, ptr %330, align 8, !tbaa !17
  br label %334

332:                                              ; preds = %323
  %333 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %102, ptr noundef nonnull %4, i32 noundef 0) #17
  br label %334

334:                                              ; preds = %332, %326
  %335 = phi ptr [ %331, %326 ], [ %333, %332 ]
  %336 = icmp eq i64 %76, 0
  %337 = load i64, ptr %4, align 8, !tbaa !59
  br i1 %336, label %341, label %338

338:                                              ; preds = %334
  %339 = icmp ugt i64 %337, %76
  %340 = getelementptr inbounds i8, ptr %335, i64 %76
  br i1 %339, label %348, label %377

341:                                              ; preds = %334
  %342 = call ptr @memchr(ptr noundef %335, i32 noundef 10, i64 noundef %337) #18
  %343 = icmp ne ptr %342, null
  %344 = getelementptr inbounds i8, ptr %342, i64 1
  %345 = getelementptr inbounds i8, ptr %335, i64 %337
  %346 = icmp ult ptr %344, %345
  %347 = select i1 %343, i1 %346, i1 false
  br i1 %347, label %348, label %377

348:                                              ; preds = %338, %341
  %349 = phi ptr [ %344, %341 ], [ %340, %338 ]
  %350 = getelementptr inbounds i8, ptr %335, i64 %337
  %351 = ptrtoint ptr %350 to i64
  %352 = ptrtoint ptr %349 to i64
  %353 = sub i64 %351, %352
  call void @Perl_sv_setpvn(ptr noundef nonnull %17, ptr noundef nonnull %349, i64 noundef %353) #17
  %354 = load i32, ptr %103, align 4, !tbaa !49
  %355 = and i32 %354, 536870912
  %356 = icmp eq i32 %355, 0
  br i1 %356, label %361, label %357

357:                                              ; preds = %348
  %358 = load i32, ptr %26, align 4, !tbaa !49
  %359 = or i32 %358, 536870912
  store i32 %359, ptr %26, align 4, !tbaa !49
  %360 = load i32, ptr %103, align 4, !tbaa !49
  br label %361

361:                                              ; preds = %357, %348
  %362 = phi i32 [ %360, %357 ], [ %354, %348 ]
  %363 = and i32 %362, 1024
  %364 = icmp eq i32 %363, 0
  %365 = load i64, ptr %4, align 8, !tbaa !59
  %366 = sub i64 %365, %353
  br i1 %364, label %370, label %367

367:                                              ; preds = %361
  %368 = load ptr, ptr %102, align 8, !tbaa !72
  %369 = getelementptr inbounds %struct.xpv, ptr %368, i64 0, i32 2
  store i64 %366, ptr %369, align 8, !tbaa !53
  br label %375

370:                                              ; preds = %361
  %371 = trunc i64 %366 to i32
  %372 = call ptr @Perl_savepvn(ptr noundef %335, i32 noundef %371) #17
  %373 = load i64, ptr %4, align 8, !tbaa !59
  %374 = sub i64 %373, %353
  call void @Perl_sv_usepvn_flags(ptr noundef nonnull %102, ptr noundef %372, i64 noundef %374, i32 noundef 0) #17
  br label %375

375:                                              ; preds = %370, %367
  store i8 0, ptr %349, align 1, !tbaa !17
  %376 = call i32 @llvm.umax.i32(i32 %296, i32 1)
  br label %377

377:                                              ; preds = %338, %341, %314, %375
  %378 = phi i32 [ %376, %375 ], [ %296, %314 ], [ %296, %341 ], [ %296, %338 ]
  %379 = icmp eq ptr %102, %1
  %380 = load i32, ptr %103, align 4, !tbaa !49
  br i1 %379, label %391, label %381

381:                                              ; preds = %377
  %382 = and i32 %380, 65280
  %383 = icmp ne i32 %382, 0
  %384 = and i32 %380, 255
  %385 = icmp eq i32 %384, 8
  %386 = or i1 %383, %385
  %387 = and i32 %380, 16826623
  %388 = icmp eq i32 %387, 16777226
  %389 = or i1 %388, %386
  br i1 %389, label %390, label %391

390:                                              ; preds = %381
  call void @Perl_sv_catsv_flags(ptr noundef nonnull %1, ptr noundef nonnull %102, i32 noundef 0) #17
  br label %408

391:                                              ; preds = %311, %381, %377
  %392 = phi i32 [ %380, %381 ], [ %380, %377 ], [ %312, %311 ]
  %393 = phi i32 [ %378, %381 ], [ %378, %377 ], [ %296, %311 ]
  %394 = and i32 %392, 65280
  %395 = icmp ne i32 %394, 0
  %396 = and i32 %392, 255
  %397 = icmp eq i32 %396, 8
  %398 = or i1 %395, %397
  %399 = and i32 %392, 16826623
  %400 = icmp eq i32 %399, 16777226
  %401 = or i1 %400, %398
  br i1 %401, label %402, label %408

402:                                              ; preds = %391
  %403 = load i32, ptr %77, align 4, !tbaa !49
  %404 = and i32 %403, 430018304
  %405 = icmp eq i32 %404, 1024
  br i1 %405, label %408, label %406

406:                                              ; preds = %402
  %407 = call ptr @Perl_sv_pvn_force_flags(ptr noundef nonnull %1, ptr noundef null, i32 noundef 2) #17
  br label %408

408:                                              ; preds = %402, %391, %406, %390
  %409 = phi i32 [ %393, %402 ], [ %393, %391 ], [ %393, %406 ], [ %378, %390 ]
  %410 = icmp slt i32 %409, 1
  br i1 %410, label %411, label %437

411:                                              ; preds = %408
  %412 = load ptr, ptr %17, align 8, !tbaa !72
  %413 = getelementptr inbounds %struct.xpvio, ptr %412, i64 0, i32 4
  store i64 0, ptr %413, align 8, !tbaa !17
  %414 = icmp eq ptr %22, null
  br i1 %414, label %425, label %415

415:                                              ; preds = %411
  %416 = getelementptr inbounds %struct.sv, ptr %22, i64 0, i32 1
  %417 = load i32, ptr %416, align 8, !tbaa !41
  %418 = icmp ugt i32 %417, 1
  br i1 %418, label %419, label %421

419:                                              ; preds = %415
  %420 = add i32 %417, -1
  store i32 %420, ptr %416, align 8, !tbaa !41
  br label %422

421:                                              ; preds = %415
  call void @Perl_sv_free2(ptr noundef nonnull %22, i32 noundef %417) #17
  br label %422

422:                                              ; preds = %419, %421
  %423 = load ptr, ptr %17, align 8, !tbaa !72
  %424 = getelementptr inbounds %struct.xpvio, ptr %423, i64 0, i32 11
  store ptr null, ptr %424, align 8, !tbaa !208
  br label %425

425:                                              ; preds = %422, %411
  br i1 %115, label %426, label %436

426:                                              ; preds = %425
  %427 = getelementptr inbounds %struct.sv, ptr %24, i64 0, i32 1
  %428 = load i32, ptr %427, align 8, !tbaa !41
  %429 = icmp ugt i32 %428, 1
  br i1 %429, label %430, label %432

430:                                              ; preds = %426
  %431 = add i32 %428, -1
  store i32 %431, ptr %427, align 8, !tbaa !41
  br label %433

432:                                              ; preds = %426
  call void @Perl_sv_free2(ptr noundef nonnull %24, i32 noundef %428) #17
  br label %433

433:                                              ; preds = %430, %432
  %434 = load ptr, ptr %17, align 8, !tbaa !72
  %435 = getelementptr inbounds %struct.xpvio, ptr %434, i64 0, i32 15
  store ptr null, ptr %435, align 8, !tbaa !209
  br label %436

436:                                              ; preds = %433, %425
  call void @Perl_filter_del(ptr noundef nonnull @S_run_user_filter) #17
  br label %437

437:                                              ; preds = %436, %408
  br i1 %313, label %439, label %438

438:                                              ; preds = %437
  call void @Perl_croak_sv(ptr noundef nonnull %295) #17
  br label %439

439:                                              ; preds = %438, %437
  %440 = icmp eq i32 %409, 0
  %441 = and i1 %35, %440
  %442 = select i1 %441, i32 1, i32 %409
  br label %443

443:                                              ; preds = %73, %439
  %444 = phi i32 [ 1, %73 ], [ %442, %439 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #17
  ret i32 %444
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc zeroext i1 @S_doeval(i32 noundef %0, ptr noundef %1, i32 noundef %2, ptr noundef %3) unnamed_addr #0 {
  %5 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !6
  %6 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %7 = getelementptr inbounds %struct.op, ptr %6, i64 0, i32 4
  %8 = load i16, ptr %7, align 8
  %9 = and i16 %8, 511
  %10 = icmp eq i16 %9, 342
  %11 = load ptr, ptr @PL_curcop, align 8, !tbaa !6
  %12 = icmp eq i16 %9, 339
  br i1 %12, label %13, label %17

13:                                               ; preds = %4
  %14 = load i8, ptr @PL_in_eval, align 1, !tbaa !17
  %15 = and i8 %14, 1
  %16 = or i8 %15, 8
  br label %23

17:                                               ; preds = %4
  %18 = getelementptr inbounds %struct.op, ptr %6, i64 0, i32 6
  %19 = load i8, ptr %18, align 1, !tbaa !10
  %20 = lshr i8 %19, 1
  %21 = and i8 %20, 16
  %22 = or i8 %21, 1
  br label %23

23:                                               ; preds = %17, %13
  %24 = phi i8 [ %16, %13 ], [ %22, %17 ]
  store i8 %24, ptr @PL_in_eval, align 1, !tbaa !17
  %25 = load ptr, ptr @PL_markstack_ptr, align 8, !tbaa !6
  %26 = getelementptr inbounds i32, ptr %25, i64 1
  store ptr %26, ptr @PL_markstack_ptr, align 8, !tbaa !6
  %27 = load ptr, ptr @PL_markstack_max, align 8, !tbaa !6
  %28 = icmp eq ptr %26, %27
  br i1 %28, label %29, label %31

29:                                               ; preds = %23
  %30 = tail call ptr @Perl_markstack_grow() #17
  br label %31

31:                                               ; preds = %23, %29
  %32 = phi ptr [ %30, %29 ], [ %26, %23 ]
  %33 = load ptr, ptr @PL_stack_base, align 8, !tbaa !6
  %34 = ptrtoint ptr %5 to i64
  %35 = ptrtoint ptr %33 to i64
  %36 = sub i64 %34, %35
  %37 = lshr exact i64 %36, 3
  %38 = trunc i64 %37 to i32
  store i32 %38, ptr %32, align 4, !tbaa !31
  %39 = tail call ptr @Perl_newSV_type(i32 noundef 13) #17
  %40 = load ptr, ptr %39, align 8, !tbaa !133
  %41 = getelementptr inbounds %struct.xpvcv, ptr %40, i64 0, i32 12
  %42 = load i32, ptr %41, align 4, !tbaa !135
  %43 = or i32 %42, 256
  store i32 %43, ptr %41, align 4, !tbaa !135
  %44 = getelementptr inbounds %struct.cv, ptr %39, i64 0, i32 2
  %45 = load i32, ptr %44, align 4, !tbaa !213
  %46 = and i32 %45, -16777217
  store i32 %46, ptr %44, align 4, !tbaa !213
  %47 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %48 = getelementptr inbounds %struct.stackinfo, ptr %47, i64 0, i32 1
  %49 = load ptr, ptr %48, align 8, !tbaa !14
  %50 = getelementptr inbounds %struct.stackinfo, ptr %47, i64 0, i32 4
  %51 = load i32, ptr %50, align 8, !tbaa !16
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds %struct.context, ptr %49, i64 %52, i32 0, i32 0, i32 11
  store ptr %39, ptr %53, align 8, !tbaa !17
  %54 = trunc i32 %0 to i8
  %55 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %56 = getelementptr inbounds %struct.stackinfo, ptr %55, i64 0, i32 1
  %57 = load ptr, ptr %56, align 8, !tbaa !14
  %58 = getelementptr inbounds %struct.stackinfo, ptr %55, i64 0, i32 4
  %59 = load i32, ptr %58, align 8, !tbaa !16
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds %struct.context, ptr %57, i64 %60, i32 0, i32 0, i32 1
  store i8 %54, ptr %61, align 1, !tbaa !17
  %62 = load ptr, ptr %39, align 8, !tbaa !133
  %63 = getelementptr inbounds %struct.xpvcv, ptr %62, i64 0, i32 11
  store i32 %2, ptr %63, align 8, !tbaa !214
  %64 = icmp eq ptr %1, null
  br i1 %64, label %69, label %65

65:                                               ; preds = %31
  %66 = getelementptr inbounds %struct.sv, ptr %1, i64 0, i32 1
  %67 = load i32, ptr %66, align 8, !tbaa !41
  %68 = add i32 %67, 1
  store i32 %68, ptr %66, align 8, !tbaa !41
  br label %69

69:                                               ; preds = %31, %65
  %70 = getelementptr inbounds %struct.xpvcv, ptr %62, i64 0, i32 10
  store ptr %1, ptr %70, align 8, !tbaa !215
  %71 = tail call ptr @Perl_pad_new(i32 noundef 2) #17
  %72 = load ptr, ptr %39, align 8, !tbaa !133
  %73 = getelementptr inbounds %struct.xpvcv, ptr %72, i64 0, i32 9
  store ptr %71, ptr %73, align 8, !tbaa !17
  store ptr null, ptr @PL_op, align 8, !tbaa !6
  tail call void @Perl_save_pushptr(ptr noundef nonnull %39, i32 noundef 16) #17
  %74 = load ptr, ptr @PL_curcop, align 8, !tbaa !6
  %75 = getelementptr inbounds %struct.cop, ptr %74, i64 0, i32 8
  %76 = load ptr, ptr %75, align 8, !tbaa !158
  %77 = load ptr, ptr @PL_curstash, align 8, !tbaa !6
  %78 = icmp eq ptr %76, %77
  br i1 %78, label %92, label %79

79:                                               ; preds = %69
  tail call void @Perl_save_generic_svref(ptr noundef nonnull @PL_curstash) #17
  %80 = load ptr, ptr @PL_curcop, align 8, !tbaa !6
  %81 = getelementptr inbounds %struct.cop, ptr %80, i64 0, i32 8
  %82 = load ptr, ptr %81, align 8, !tbaa !158
  store ptr %82, ptr @PL_curstash, align 8, !tbaa !6
  %83 = getelementptr inbounds %struct.hv, ptr %82, i64 0, i32 2
  %84 = load i32, ptr %83, align 4, !tbaa !159
  %85 = and i32 %84, 255
  %86 = icmp eq i32 %85, 12
  br i1 %86, label %88, label %87

87:                                               ; preds = %79
  store ptr null, ptr @PL_curstash, align 8, !tbaa !6
  br label %92

88:                                               ; preds = %79
  %89 = getelementptr inbounds %struct.hv, ptr %82, i64 0, i32 1
  %90 = load i32, ptr %89, align 8, !tbaa !216
  %91 = add i32 %90, 1
  store i32 %91, ptr %89, align 8, !tbaa !216
  br label %92

92:                                               ; preds = %87, %88, %69
  tail call void @Perl_save_sptr(ptr noundef nonnull @PL_beginav) #17
  %93 = tail call ptr @Perl_newSV_type(i32 noundef 11) #17
  store ptr %93, ptr @PL_beginav, align 8, !tbaa !6
  tail call void @Perl_save_pushptr(ptr noundef %93, i32 noundef 11) #17
  tail call void @Perl_save_sptr(ptr noundef nonnull @PL_unitcheckav) #17
  %94 = tail call ptr @Perl_newSV_type(i32 noundef 11) #17
  store ptr %94, ptr @PL_unitcheckav, align 8, !tbaa !6
  tail call void @Perl_save_pushptr(ptr noundef %94, i32 noundef 11) #17
  tail call void @Perl_push_scope() #17
  tail call void @Perl_save_sptr(ptr noundef nonnull @PL_compcv) #17
  store ptr %39, ptr @PL_compcv, align 8, !tbaa !6
  store ptr null, ptr @PL_eval_root, align 8, !tbaa !6
  store ptr @PL_compiling, ptr @PL_curcop, align 8, !tbaa !6
  %95 = load i16, ptr %7, align 8
  %96 = and i16 %95, 511
  %97 = icmp eq i16 %96, 339
  br i1 %97, label %105, label %98

98:                                               ; preds = %92
  %99 = getelementptr inbounds %struct.op, ptr %6, i64 0, i32 5
  %100 = load i8, ptr %99, align 2, !tbaa !30
  %101 = icmp sgt i8 %100, -1
  br i1 %101, label %105, label %102

102:                                              ; preds = %98
  %103 = load i8, ptr @PL_in_eval, align 1, !tbaa !17
  %104 = or i8 %103, 4
  store i8 %104, ptr @PL_in_eval, align 1, !tbaa !17
  br label %133

105:                                              ; preds = %92, %98
  %106 = load ptr, ptr @PL_errgv, align 8, !tbaa !6
  %107 = getelementptr inbounds %struct.gv, ptr %106, i64 0, i32 3
  %108 = load ptr, ptr %107, align 8, !tbaa !17
  %109 = load ptr, ptr %108, align 8, !tbaa !6
  %110 = icmp eq ptr %109, null
  br i1 %110, label %123, label %111

111:                                              ; preds = %105
  %112 = getelementptr inbounds %struct.sv, ptr %109, i64 0, i32 2
  %113 = load i32, ptr %112, align 4, !tbaa !49
  %114 = and i32 %113, 134283264
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %125, label %116

116:                                              ; preds = %111
  %117 = getelementptr inbounds %struct.sv, ptr %109, i64 0, i32 1
  %118 = load i32, ptr %117, align 8, !tbaa !41
  %119 = icmp ugt i32 %118, 1
  br i1 %119, label %120, label %122

120:                                              ; preds = %116
  %121 = add i32 %118, -1
  store i32 %121, ptr %117, align 8, !tbaa !41
  br label %123

122:                                              ; preds = %116
  tail call void @Perl_sv_free2(ptr noundef nonnull %109, i32 noundef %118) #17
  br label %123

123:                                              ; preds = %122, %120, %105
  %124 = tail call ptr @Perl_newSVpvn(ptr noundef nonnull @.str.10, i64 noundef 0) #17
  store ptr %124, ptr %108, align 8, !tbaa !6
  br label %133

125:                                              ; preds = %111
  tail call void @Perl_sv_setpvn(ptr noundef nonnull %109, ptr noundef nonnull @.str.10, i64 noundef 0) #17
  %126 = load i32, ptr %112, align 4, !tbaa !49
  %127 = and i32 %126, 1610547455
  %128 = or i32 %127, 17408
  store i32 %128, ptr %112, align 4, !tbaa !49
  %129 = and i32 %126, 14680064
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %133, label %131

131:                                              ; preds = %125
  %132 = tail call i32 @Perl_mg_free(ptr noundef nonnull %109) #17
  br label %133

133:                                              ; preds = %123, %131, %125, %102
  tail call void @Perl_save_hints() #17
  br i1 %10, label %134, label %176

134:                                              ; preds = %133
  %135 = getelementptr inbounds %struct.op, ptr %6, i64 0, i32 6
  %136 = load i8, ptr %135, align 1, !tbaa !10
  %137 = and i8 %136, 16
  %138 = icmp eq i8 %137, 0
  br i1 %138, label %143, label %139

139:                                              ; preds = %134
  %140 = getelementptr inbounds %struct.cop, ptr %11, i64 0, i32 10
  %141 = load i32, ptr %140, align 8, !tbaa !70
  %142 = zext i32 %141 to i64
  br label %146

143:                                              ; preds = %134
  %144 = getelementptr inbounds %struct.op, ptr %6, i64 0, i32 3
  %145 = load i64, ptr %144, align 8, !tbaa !40
  br label %146

146:                                              ; preds = %143, %139
  %147 = phi i64 [ %142, %139 ], [ %145, %143 ]
  %148 = trunc i64 %147 to i32
  store i32 %148, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 10), align 8, !tbaa !70
  %149 = load i8, ptr @PL_in_eval, align 1, !tbaa !17
  %150 = and i8 %149, 16
  %151 = icmp eq i8 %150, 0
  br i1 %151, label %154, label %152

152:                                              ; preds = %146
  %153 = and i32 %148, -2097153
  store i32 %153, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 10), align 8, !tbaa !70
  br label %154

154:                                              ; preds = %152, %146
  %155 = icmp eq ptr %3, null
  br i1 %155, label %193, label %156

156:                                              ; preds = %154
  %157 = load ptr, ptr @PL_hintgv, align 8, !tbaa !6
  %158 = getelementptr inbounds %struct.gv, ptr %157, i64 0, i32 3
  %159 = load ptr, ptr %158, align 8, !tbaa !17
  %160 = getelementptr inbounds %struct.gp, ptr %159, i64 0, i32 5
  %161 = load ptr, ptr %160, align 8, !tbaa !155
  %162 = icmp eq ptr %161, null
  br i1 %162, label %171, label %163

163:                                              ; preds = %156
  %164 = getelementptr inbounds %struct.sv, ptr %161, i64 0, i32 1
  %165 = load i32, ptr %164, align 8, !tbaa !41
  %166 = icmp ugt i32 %165, 1
  br i1 %166, label %167, label %169

167:                                              ; preds = %163
  %168 = add i32 %165, -1
  store i32 %168, ptr %164, align 8, !tbaa !41
  br label %171

169:                                              ; preds = %163
  tail call void @Perl_sv_free2(ptr noundef nonnull %161, i32 noundef %165) #17
  %170 = load ptr, ptr @PL_hintgv, align 8, !tbaa !6
  br label %171

171:                                              ; preds = %156, %167, %169
  %172 = phi ptr [ %157, %156 ], [ %157, %167 ], [ %170, %169 ]
  %173 = getelementptr inbounds %struct.gv, ptr %172, i64 0, i32 3
  %174 = load ptr, ptr %173, align 8, !tbaa !17
  %175 = getelementptr inbounds %struct.gp, ptr %174, i64 0, i32 5
  store ptr %3, ptr %175, align 8, !tbaa !155
  br label %193

176:                                              ; preds = %133
  store i32 0, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 10), align 8, !tbaa !70
  %177 = load ptr, ptr @PL_hintgv, align 8, !tbaa !6
  %178 = getelementptr inbounds %struct.gv, ptr %177, i64 0, i32 3
  %179 = load ptr, ptr %178, align 8, !tbaa !17
  %180 = getelementptr inbounds %struct.gp, ptr %179, i64 0, i32 5
  %181 = load ptr, ptr %180, align 8, !tbaa !155
  tail call void @Perl_hv_clear(ptr noundef %181) #17
  %182 = load ptr, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 12), align 8, !tbaa !169
  tail call void @Perl_save_pushptr(ptr noundef %182, i32 noundef 6) #17
  %183 = load i8, ptr @PL_dowarn, align 1, !tbaa !17
  %184 = zext i8 %183 to i32
  %185 = and i32 %184, 2
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %188, label %187

187:                                              ; preds = %176
  store ptr inttoptr (i64 8 to ptr), ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 12), align 8, !tbaa !169
  br label %214

188:                                              ; preds = %176
  %189 = and i32 %184, 4
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %192, label %191

191:                                              ; preds = %188
  store ptr inttoptr (i64 16 to ptr), ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 12), align 8, !tbaa !169
  br label %214

192:                                              ; preds = %188
  store ptr null, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 12), align 8, !tbaa !169
  br label %214

193:                                              ; preds = %154, %171
  %194 = load ptr, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 12), align 8, !tbaa !169
  tail call void @Perl_save_pushptr(ptr noundef %194, i32 noundef 6) #17
  %195 = getelementptr inbounds %struct.cop, ptr %11, i64 0, i32 12
  %196 = load ptr, ptr %195, align 8, !tbaa !169
  %197 = ptrtoint ptr %196 to i64
  switch i64 %197, label %198 [
    i64 0, label %202
    i64 8, label %202
    i64 16, label %202
  ]

198:                                              ; preds = %193
  %199 = load i64, ptr %196, align 8, !tbaa !59
  %200 = add i64 %199, 8
  %201 = tail call noalias ptr @malloc(i64 noundef %200) #21
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %201, ptr nonnull align 1 %196, i64 %200, i1 false)
  br label %202

202:                                              ; preds = %193, %193, %193, %198
  %203 = phi ptr [ %201, %198 ], [ %196, %193 ], [ %196, %193 ], [ %196, %193 ]
  store ptr %203, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 12), align 8, !tbaa !169
  %204 = load ptr, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 13), align 8, !tbaa !170
  tail call void @Perl_refcounted_he_free(ptr noundef %204) #17
  %205 = tail call ptr @Perl_cop_fetch_label(ptr noundef nonnull %11, ptr noundef null, ptr noundef null) #17
  %206 = icmp eq ptr %205, null
  %207 = getelementptr inbounds %struct.cop, ptr %11, i64 0, i32 13
  %208 = load ptr, ptr %207, align 8, !tbaa !170
  br i1 %206, label %212, label %209

209:                                              ; preds = %202
  %210 = load ptr, ptr %208, align 8, !tbaa !217
  %211 = tail call ptr @Perl_refcounted_he_inc(ptr noundef %210) #17
  store ptr %211, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 13), align 8, !tbaa !170
  br label %214

212:                                              ; preds = %202
  %213 = tail call ptr @Perl_refcounted_he_inc(ptr noundef %208) #17
  store ptr %213, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 13), align 8, !tbaa !170
  br label %214

214:                                              ; preds = %191, %192, %187, %212, %209
  %215 = load ptr, ptr @PL_blockhooks, align 8, !tbaa !6
  %216 = icmp eq ptr %215, null
  br i1 %216, label %264, label %217

217:                                              ; preds = %214
  %218 = getelementptr inbounds %struct.sv, ptr %215, i64 0, i32 2
  %219 = load i32, ptr %218, align 4, !tbaa !49
  %220 = and i32 %219, 8388608
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %225, label %222

222:                                              ; preds = %217
  %223 = tail call i32 @Perl_mg_size(ptr noundef nonnull %215) #17
  %224 = sext i32 %223 to i64
  br label %229

225:                                              ; preds = %217
  %226 = load ptr, ptr %215, align 8, !tbaa !141
  %227 = getelementptr inbounds %struct.xpvav, ptr %226, i64 0, i32 2
  %228 = load i64, ptr %227, align 8, !tbaa !142
  br label %229

229:                                              ; preds = %222, %225
  %230 = phi i64 [ %224, %222 ], [ %228, %225 ]
  %231 = icmp sgt i64 %230, -1
  br i1 %231, label %232, label %264

232:                                              ; preds = %229
  %233 = load ptr, ptr @PL_blockhooks, align 8, !tbaa !6
  br label %234

234:                                              ; preds = %232, %260
  %235 = phi ptr [ %261, %260 ], [ %233, %232 ]
  %236 = phi i64 [ %262, %260 ], [ %230, %232 ]
  %237 = getelementptr inbounds %struct.av, ptr %235, i64 0, i32 3
  %238 = load ptr, ptr %237, align 8, !tbaa !17
  %239 = getelementptr inbounds ptr, ptr %238, i64 %236
  %240 = load ptr, ptr %239, align 8, !tbaa !6
  %241 = getelementptr inbounds %struct.sv, ptr %240, i64 0, i32 2
  %242 = load i32, ptr %241, align 4, !tbaa !49
  %243 = and i32 %242, -2147483392
  %244 = icmp eq i32 %243, -2147483392
  %245 = load ptr, ptr %240, align 8, !tbaa !72
  %246 = getelementptr inbounds %struct.xpvuv, ptr %245, i64 0, i32 4
  %247 = getelementptr inbounds %struct.xpviv, ptr %245, i64 0, i32 4
  %248 = select i1 %244, ptr %246, ptr %247
  %249 = load i64, ptr %248, align 8, !tbaa !17
  %250 = inttoptr i64 %249 to ptr
  %251 = load i32, ptr %250, align 8, !tbaa !219
  %252 = and i32 %251, 8
  %253 = icmp eq i32 %252, 0
  br i1 %253, label %260, label %254

254:                                              ; preds = %234
  %255 = getelementptr inbounds %struct.block_hooks, ptr %250, i64 0, i32 4
  %256 = load ptr, ptr %255, align 8, !tbaa !221
  %257 = icmp eq ptr %256, null
  br i1 %257, label %260, label %258

258:                                              ; preds = %254
  tail call void %256(ptr noundef %6) #17
  %259 = load ptr, ptr @PL_blockhooks, align 8, !tbaa !6
  br label %260

260:                                              ; preds = %234, %258, %254
  %261 = phi ptr [ %235, %234 ], [ %259, %258 ], [ %235, %254 ]
  %262 = add nsw i64 %236, -1
  %263 = icmp sgt i64 %236, 0
  br i1 %263, label %234, label %264, !llvm.loop !222

264:                                              ; preds = %260, %229, %214
  br i1 %12, label %272, label %265

265:                                              ; preds = %264
  %266 = load ptr, ptr @PL_top_env, align 8, !tbaa !6
  %267 = getelementptr inbounds %struct.jmpenv, ptr %266, i64 0, i32 3
  %268 = load i8, ptr %267, align 4, !tbaa !211, !range !44, !noundef !45
  %269 = icmp eq i8 %268, 0
  br i1 %269, label %272, label %270

270:                                              ; preds = %265
  %271 = tail call fastcc i32 @S_try_yyparse()
  br label %274

272:                                              ; preds = %265, %264
  %273 = tail call i32 @Perl_yyparse(i32 noundef 258) #17
  br label %274

274:                                              ; preds = %272, %270
  %275 = phi i32 [ %271, %270 ], [ %273, %272 ]
  %276 = icmp eq i32 %275, 0
  br i1 %276, label %277, label %286

277:                                              ; preds = %274
  %278 = load ptr, ptr @PL_parser, align 8, !tbaa !6
  %279 = getelementptr inbounds %struct.yy_parser, ptr %278, i64 0, i32 44
  %280 = load i8, ptr %279, align 1, !tbaa !146
  %281 = icmp eq i8 %280, 0
  %282 = load ptr, ptr @PL_eval_root, align 8
  %283 = icmp ne ptr %282, null
  %284 = select i1 %281, i1 %283, i1 false
  br i1 %284, label %434, label %285

285:                                              ; preds = %277
  store ptr %6, ptr @PL_op, align 8, !tbaa !6
  br label %290

286:                                              ; preds = %274
  store ptr %6, ptr @PL_op, align 8, !tbaa !6
  %287 = icmp eq i32 %275, 3
  br i1 %287, label %353, label %288

288:                                              ; preds = %286
  %289 = load ptr, ptr @PL_eval_root, align 8, !tbaa !6
  br label %290

290:                                              ; preds = %288, %285
  %291 = phi ptr [ %289, %288 ], [ %282, %285 ]
  %292 = icmp eq ptr %291, null
  br i1 %292, label %294, label %293

293:                                              ; preds = %290
  tail call void @Perl_op_free(ptr noundef nonnull %291) #17
  store ptr null, ptr @PL_eval_root, align 8, !tbaa !6
  br label %294

294:                                              ; preds = %293, %290
  %295 = load ptr, ptr @PL_stack_base, align 8, !tbaa !6
  %296 = load ptr, ptr @PL_markstack_ptr, align 8, !tbaa !6
  %297 = getelementptr inbounds i32, ptr %296, i64 -1
  store ptr %297, ptr @PL_markstack_ptr, align 8, !tbaa !6
  %298 = load i32, ptr %296, align 4, !tbaa !31
  %299 = sext i32 %298 to i64
  %300 = getelementptr inbounds ptr, ptr %295, i64 %299
  %301 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %302 = getelementptr inbounds %struct.stackinfo, ptr %301, i64 0, i32 1
  %303 = load ptr, ptr %302, align 8, !tbaa !14
  %304 = getelementptr inbounds %struct.stackinfo, ptr %301, i64 0, i32 4
  %305 = load i32, ptr %304, align 8, !tbaa !16
  %306 = add nsw i32 %305, -1
  store i32 %306, ptr %304, align 8, !tbaa !16
  %307 = sext i32 %305 to i64
  %308 = getelementptr inbounds %struct.context, ptr %303, i64 %307
  %309 = getelementptr inbounds %struct.block, ptr %308, i64 0, i32 4
  %310 = load ptr, ptr %309, align 8, !tbaa !17
  store ptr %310, ptr @PL_curcop, align 8, !tbaa !6
  %311 = load ptr, ptr @PL_markstack, align 8, !tbaa !6
  %312 = getelementptr inbounds %struct.block, ptr %308, i64 0, i32 5
  %313 = load i32, ptr %312, align 8, !tbaa !17
  %314 = sext i32 %313 to i64
  %315 = getelementptr inbounds i32, ptr %311, i64 %314
  store ptr %315, ptr @PL_markstack_ptr, align 8, !tbaa !6
  %316 = getelementptr inbounds %struct.block, ptr %308, i64 0, i32 6
  %317 = load i32, ptr %316, align 4, !tbaa !17
  store i32 %317, ptr @PL_scopestack_ix, align 4, !tbaa !31
  %318 = getelementptr inbounds %struct.block, ptr %308, i64 0, i32 7
  %319 = load ptr, ptr %318, align 8, !tbaa !17
  store ptr %319, ptr @PL_curpm, align 8, !tbaa !6
  %320 = getelementptr inbounds %struct.block, ptr %308, i64 0, i32 1
  %321 = load i8, ptr %320, align 1, !tbaa !17
  %322 = zext i8 %321 to i32
  %323 = getelementptr inbounds %struct.block, ptr %308, i64 0, i32 2
  %324 = load i16, ptr %323, align 2, !tbaa !17
  %325 = trunc i16 %324 to i8
  %326 = and i8 %325, 127
  store i8 %326, ptr @PL_in_eval, align 1, !tbaa !17
  %327 = getelementptr inbounds %struct.block, ptr %308, i64 0, i32 8, i32 0, i32 2
  %328 = load ptr, ptr %327, align 8, !tbaa !17
  store ptr %328, ptr @PL_eval_root, align 8, !tbaa !6
  %329 = getelementptr inbounds %struct.block, ptr %308, i64 0, i32 8, i32 0, i32 3
  %330 = load ptr, ptr %329, align 8, !tbaa !17
  %331 = icmp eq ptr %330, null
  br i1 %331, label %344, label %332

332:                                              ; preds = %294
  %333 = getelementptr inbounds %struct.sv, ptr %330, i64 0, i32 2
  %334 = load i32, ptr %333, align 4, !tbaa !49
  %335 = and i32 %334, 49152
  %336 = icmp eq i32 %335, 49152
  br i1 %336, label %337, label %344

337:                                              ; preds = %332
  %338 = getelementptr inbounds %struct.sv, ptr %330, i64 0, i32 1
  %339 = load i32, ptr %338, align 8, !tbaa !41
  %340 = icmp ugt i32 %339, 1
  br i1 %340, label %341, label %343

341:                                              ; preds = %337
  %342 = add i32 %339, -1
  store i32 %342, ptr %338, align 8, !tbaa !41
  br label %344

343:                                              ; preds = %337
  tail call void @Perl_sv_free2(ptr noundef nonnull %330, i32 noundef %339) #17
  br label %344

344:                                              ; preds = %343, %341, %332, %294
  %345 = getelementptr inbounds %struct.block, ptr %308, i64 0, i32 8, i32 0, i32 1
  %346 = load ptr, ptr %345, align 8, !tbaa !17
  %347 = icmp eq ptr %346, null
  br i1 %347, label %351, label %348

348:                                              ; preds = %344
  %349 = tail call ptr @Perl_sv_2mortal(ptr noundef nonnull %346) #17
  %350 = load ptr, ptr %345, align 8, !tbaa !17
  br label %351

351:                                              ; preds = %348, %344
  %352 = phi ptr [ %350, %348 ], [ null, %344 ]
  tail call void @Perl_pop_scope() #17
  br label %353

353:                                              ; preds = %351, %286
  %354 = phi ptr [ %308, %351 ], [ null, %286 ]
  %355 = phi ptr [ %352, %351 ], [ null, %286 ]
  %356 = phi ptr [ %300, %351 ], [ %5, %286 ]
  %357 = phi i32 [ %322, %351 ], [ %0, %286 ]
  %358 = load ptr, ptr @PL_errgv, align 8, !tbaa !6
  %359 = getelementptr inbounds %struct.gv, ptr %358, i64 0, i32 3
  %360 = load ptr, ptr %359, align 8, !tbaa !17
  %361 = load ptr, ptr %360, align 8, !tbaa !6
  %362 = icmp eq ptr %361, null
  br i1 %362, label %363, label %368

363:                                              ; preds = %353
  %364 = tail call ptr @Perl_gv_add_by_type(ptr noundef nonnull %358, i32 noundef 0) #17
  %365 = getelementptr inbounds %struct.gv, ptr %364, i64 0, i32 3
  %366 = load ptr, ptr %365, align 8, !tbaa !17
  %367 = load ptr, ptr %366, align 8, !tbaa !6
  br label %368

368:                                              ; preds = %353, %363
  %369 = phi ptr [ %361, %353 ], [ %367, %363 ]
  br i1 %12, label %370, label %415

370:                                              ; preds = %368
  %371 = icmp eq ptr %354, null
  br i1 %371, label %372, label %381

372:                                              ; preds = %370
  %373 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %374 = getelementptr inbounds %struct.stackinfo, ptr %373, i64 0, i32 1
  %375 = load ptr, ptr %374, align 8, !tbaa !14
  %376 = getelementptr inbounds %struct.stackinfo, ptr %373, i64 0, i32 4
  %377 = load i32, ptr %376, align 8, !tbaa !16
  %378 = sext i32 %377 to i64
  %379 = getelementptr inbounds %struct.context, ptr %375, i64 %378, i32 0, i32 0, i32 8
  %380 = load ptr, ptr %379, align 8, !tbaa !17
  br label %381

381:                                              ; preds = %372, %370
  %382 = phi ptr [ %355, %370 ], [ %380, %372 ]
  %383 = load ptr, ptr @PL_incgv, align 8, !tbaa !6
  %384 = getelementptr inbounds %struct.gv, ptr %383, i64 0, i32 3
  %385 = load ptr, ptr %384, align 8, !tbaa !17
  %386 = getelementptr inbounds %struct.gp, ptr %385, i64 0, i32 5
  %387 = load ptr, ptr %386, align 8, !tbaa !155
  %388 = icmp eq ptr %387, null
  br i1 %388, label %389, label %395

389:                                              ; preds = %381
  %390 = tail call ptr @Perl_gv_add_by_type(ptr noundef nonnull %383, i32 noundef 12) #17
  %391 = getelementptr inbounds %struct.gv, ptr %390, i64 0, i32 3
  %392 = load ptr, ptr %391, align 8, !tbaa !17
  %393 = getelementptr inbounds %struct.gp, ptr %392, i64 0, i32 5
  %394 = load ptr, ptr %393, align 8, !tbaa !155
  br label %395

395:                                              ; preds = %381, %389
  %396 = phi ptr [ %394, %389 ], [ %387, %381 ]
  %397 = getelementptr inbounds %struct.sv, ptr %382, i64 0, i32 3
  %398 = load ptr, ptr %397, align 8, !tbaa !17
  %399 = getelementptr inbounds %struct.sv, ptr %382, i64 0, i32 2
  %400 = load i32, ptr %399, align 4, !tbaa !49
  %401 = and i32 %400, 536870912
  %402 = icmp eq i32 %401, 0
  %403 = load ptr, ptr %382, align 8, !tbaa !72
  %404 = getelementptr inbounds %struct.xpv, ptr %403, i64 0, i32 2
  %405 = load i64, ptr %404, align 8, !tbaa !53
  %406 = trunc i64 %405 to i32
  %407 = sub nsw i32 0, %406
  %408 = select i1 %402, i32 %406, i32 %407
  %409 = tail call ptr @Perl_hv_common_key_len(ptr noundef %396, ptr noundef %398, i32 noundef %408, i32 noundef 36, ptr noundef nonnull @PL_sv_undef, i32 noundef 0) #17
  %410 = icmp eq ptr %369, null
  br i1 %410, label %411, label %413

411:                                              ; preds = %395
  %412 = tail call ptr @Perl_newSVpvn_flags(ptr noundef nonnull @.str.19, i64 noundef 14, i32 noundef 524288) #17
  br label %413

413:                                              ; preds = %395, %411
  %414 = phi ptr [ %412, %411 ], [ %369, %395 ]
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.18, ptr noundef %414) #17
  br label %430

415:                                              ; preds = %368
  %416 = getelementptr inbounds %struct.sv, ptr %369, i64 0, i32 2
  %417 = load i32, ptr %416, align 4, !tbaa !49
  %418 = and i32 %417, 2098176
  %419 = icmp eq i32 %418, 1024
  br i1 %419, label %420, label %423

420:                                              ; preds = %415
  %421 = getelementptr inbounds %struct.sv, ptr %369, i64 0, i32 3
  %422 = load ptr, ptr %421, align 8, !tbaa !17
  br label %425

423:                                              ; preds = %415
  %424 = tail call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %369, ptr noundef null, i32 noundef 34) #17
  br label %425

425:                                              ; preds = %423, %420
  %426 = phi ptr [ %422, %420 ], [ %424, %423 ]
  %427 = load i8, ptr %426, align 1, !tbaa !17
  %428 = icmp eq i8 %427, 0
  br i1 %428, label %429, label %430

429:                                              ; preds = %425
  tail call void @Perl_sv_setpvn(ptr noundef nonnull %369, ptr noundef nonnull @.str.100, i64 noundef 17) #17
  br label %430

430:                                              ; preds = %425, %429, %413
  %431 = icmp eq i32 %357, 3
  br i1 %431, label %493, label %432

432:                                              ; preds = %430
  %433 = getelementptr inbounds ptr, ptr %356, i64 1
  store ptr @PL_sv_undef, ptr %433, align 8, !tbaa !6
  br label %493

434:                                              ; preds = %277
  tail call void @Perl_pop_scope() #17
  store i32 0, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 7), align 4, !tbaa !168
  %435 = load ptr, ptr @PL_eval_root, align 8, !tbaa !6
  %436 = getelementptr inbounds %struct.op, ptr %435, i64 0, i32 4
  %437 = load i16, ptr %436, align 8
  %438 = or i16 %437, 2048
  store i16 %438, ptr %436, align 8
  tail call void @Perl_save_pushptr(ptr noundef %435, i32 noundef 9) #17
  tail call void @Perl_cv_forget_slab(ptr noundef nonnull %39) #17
  %439 = load i32, ptr @PL_perldb, align 4, !tbaa !31
  %440 = and i32 %439, 8
  %441 = icmp eq i32 %440, 0
  br i1 %441, label %476, label %442

442:                                              ; preds = %434
  %443 = load i16, ptr %7, align 8
  %444 = and i16 %443, 511
  %445 = icmp eq i16 %444, 339
  br i1 %445, label %446, label %476

446:                                              ; preds = %442
  %447 = tail call ptr @Perl_get_cvn_flags(ptr noundef nonnull @.str.101, i64 noundef 13, i32 noundef 0) #17
  %448 = icmp eq ptr %447, null
  br i1 %448, label %476, label %449

449:                                              ; preds = %446
  %450 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !6
  %451 = load ptr, ptr @PL_markstack_ptr, align 8, !tbaa !6
  %452 = getelementptr inbounds i32, ptr %451, i64 1
  store ptr %452, ptr @PL_markstack_ptr, align 8, !tbaa !6
  %453 = load ptr, ptr @PL_markstack_max, align 8, !tbaa !6
  %454 = icmp eq ptr %452, %453
  br i1 %454, label %455, label %457

455:                                              ; preds = %449
  %456 = tail call ptr @Perl_markstack_grow() #17
  br label %457

457:                                              ; preds = %449, %455
  %458 = phi ptr [ %456, %455 ], [ %452, %449 ]
  %459 = load ptr, ptr @PL_stack_base, align 8, !tbaa !6
  %460 = ptrtoint ptr %450 to i64
  %461 = ptrtoint ptr %459 to i64
  %462 = sub i64 %460, %461
  %463 = lshr exact i64 %462, 3
  %464 = trunc i64 %463 to i32
  store i32 %464, ptr %458, align 4, !tbaa !31
  %465 = load ptr, ptr @PL_stack_max, align 8, !tbaa !6
  %466 = ptrtoint ptr %465 to i64
  %467 = sub i64 %466, %460
  %468 = icmp slt i64 %467, 8
  br i1 %468, label %469, label %471

469:                                              ; preds = %457
  %470 = tail call ptr @Perl_stack_grow(ptr noundef %450, ptr noundef %450, i64 noundef 1) #17
  br label %471

471:                                              ; preds = %457, %469
  %472 = phi ptr [ %470, %469 ], [ %450, %457 ]
  %473 = load ptr, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 9), align 8, !tbaa !166
  %474 = getelementptr inbounds ptr, ptr %472, i64 1
  store ptr %473, ptr %474, align 8, !tbaa !6
  store ptr %474, ptr @PL_stack_sp, align 8, !tbaa !6
  %475 = tail call i32 @Perl_call_sv(ptr noundef nonnull %447, i32 noundef 4) #17
  br label %476

476:                                              ; preds = %446, %471, %442, %434
  %477 = load ptr, ptr @PL_unitcheckav, align 8, !tbaa !6
  %478 = icmp eq ptr %477, null
  br i1 %478, label %482, label %479

479:                                              ; preds = %476
  %480 = load ptr, ptr @PL_eval_start, align 8, !tbaa !6
  %481 = load i32, ptr @PL_scopestack_ix, align 4, !tbaa !31
  tail call void @Perl_call_list(i32 noundef %481, ptr noundef nonnull %477) #17
  store ptr %480, ptr @PL_eval_start, align 8, !tbaa !6
  br label %482

482:                                              ; preds = %479, %476
  %483 = load ptr, ptr %39, align 8, !tbaa !133
  %484 = getelementptr inbounds %struct.xpvcv, ptr %483, i64 0, i32 13
  store i32 1, ptr %484, align 4, !tbaa !31
  %485 = load ptr, ptr @PL_stack_base, align 8, !tbaa !6
  %486 = load ptr, ptr @PL_markstack_ptr, align 8, !tbaa !6
  %487 = getelementptr inbounds i32, ptr %486, i64 -1
  store ptr %487, ptr @PL_markstack_ptr, align 8, !tbaa !6
  %488 = load i32, ptr %486, align 4, !tbaa !31
  %489 = sext i32 %488 to i64
  %490 = getelementptr inbounds ptr, ptr %485, i64 %489
  store ptr %6, ptr @PL_op, align 8, !tbaa !6
  %491 = load ptr, ptr @PL_parser, align 8, !tbaa !6
  %492 = getelementptr inbounds %struct.yy_parser, ptr %491, i64 0, i32 43
  store i8 11, ptr %492, align 2, !tbaa !223
  br label %493

493:                                              ; preds = %430, %432, %482
  %494 = phi ptr [ %490, %482 ], [ %433, %432 ], [ %356, %430 ]
  %495 = phi i1 [ true, %482 ], [ false, %432 ], [ false, %430 ]
  store ptr %494, ptr @PL_stack_sp, align 8, !tbaa !6
  ret i1 %495
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @S_docatch(ptr noundef %0) unnamed_addr #0 {
  %2 = alloca %struct.jmpenv, align 8
  %3 = load ptr, ptr @PL_op, align 8, !tbaa !6
  call void @llvm.lifetime.start.p0(i64 216, ptr nonnull %2) #17
  store ptr %0, ptr @PL_op, align 8, !tbaa !6
  %4 = load ptr, ptr @PL_top_env, align 8, !tbaa !6
  %5 = getelementptr inbounds %struct.jmpenv, ptr %2, i64 0, i32 1
  store ptr %4, ptr %5, align 8, !tbaa !156
  %6 = call i32 @__sigsetjmp(ptr noundef nonnull %2, i32 noundef 0) #22
  %7 = getelementptr inbounds %struct.jmpenv, ptr %2, i64 0, i32 2
  store i32 %6, ptr %7, align 8, !tbaa !224
  store ptr %2, ptr @PL_top_env, align 8, !tbaa !6
  %8 = getelementptr inbounds %struct.jmpenv, ptr %2, i64 0, i32 3
  store i8 0, ptr %8, align 4, !tbaa !211
  switch i32 %6, label %28 [
    i32 0, label %9
    i32 3, label %21
  ]

9:                                                ; preds = %1
  %10 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %11 = getelementptr inbounds %struct.stackinfo, ptr %10, i64 0, i32 1
  %12 = load ptr, ptr %11, align 8, !tbaa !14
  %13 = getelementptr inbounds %struct.stackinfo, ptr %10, i64 0, i32 4
  %14 = load i32, ptr %13, align 8, !tbaa !16
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds %struct.context, ptr %12, i64 %15, i32 0, i32 0, i32 12
  store ptr %2, ptr %16, align 8, !tbaa !17
  br label %17

17:                                               ; preds = %27, %9
  %18 = load ptr, ptr @PL_runops, align 8, !tbaa !6
  %19 = call i32 %18() #17
  %20 = load ptr, ptr %5, align 8, !tbaa !156
  store ptr %20, ptr @PL_top_env, align 8, !tbaa !6
  store ptr %3, ptr @PL_op, align 8, !tbaa !6
  call void @llvm.lifetime.end.p0(i64 216, ptr nonnull %2) #17
  ret void

21:                                               ; preds = %1
  %22 = load ptr, ptr @PL_restartop, align 8, !tbaa !6
  %23 = icmp ne ptr %22, null
  %24 = load ptr, ptr @PL_restartjmpenv, align 8
  %25 = icmp eq ptr %24, %2
  %26 = select i1 %23, i1 %25, i1 false
  br i1 %26, label %27, label %33

27:                                               ; preds = %21
  store ptr null, ptr @PL_restartjmpenv, align 8, !tbaa !6
  store ptr %22, ptr @PL_op, align 8, !tbaa !6
  store ptr null, ptr @PL_restartop, align 8, !tbaa !6
  br label %17

28:                                               ; preds = %1
  %29 = load ptr, ptr %5, align 8, !tbaa !156
  store ptr %29, ptr @PL_top_env, align 8, !tbaa !6
  store ptr %3, ptr @PL_op, align 8, !tbaa !6
  %30 = getelementptr inbounds %struct.jmpenv, ptr %29, i64 0, i32 1
  %31 = load ptr, ptr %30, align 8, !tbaa !156
  %32 = icmp eq ptr %31, null
  br i1 %32, label %40, label %38

33:                                               ; preds = %21
  %34 = load ptr, ptr %5, align 8, !tbaa !156
  store ptr %34, ptr @PL_top_env, align 8, !tbaa !6
  store ptr %3, ptr @PL_op, align 8, !tbaa !6
  %35 = getelementptr inbounds %struct.jmpenv, ptr %34, i64 0, i32 1
  %36 = load ptr, ptr %35, align 8, !tbaa !156
  %37 = icmp eq ptr %36, null
  br i1 %37, label %44, label %38

38:                                               ; preds = %33, %28
  %39 = phi ptr [ %34, %33 ], [ %29, %28 ]
  call void @siglongjmp(ptr noundef nonnull %39, i32 noundef %6) #19
  unreachable

40:                                               ; preds = %28
  %41 = icmp eq i32 %6, 2
  br i1 %41, label %42, label %44

42:                                               ; preds = %40
  %43 = load i32, ptr @PL_statusvalue, align 4, !tbaa !31
  call void @exit(i32 noundef %43) #19
  unreachable

44:                                               ; preds = %33, %40
  %45 = call ptr @Perl_PerlIO_stderr() #17
  %46 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %45, ptr noundef nonnull @.str.20, i32 noundef %6) #17
  call void @exit(i32 noundef 1) #19
  unreachable
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare ptr @memchr(ptr noundef, i32 noundef, i64 noundef) local_unnamed_addr #6

; Function Attrs: nofree nounwind
declare noundef i32 @stat64(ptr nocapture noundef readonly, ptr nocapture noundef) local_unnamed_addr #11

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @S_check_type_and_open(ptr noundef %0) unnamed_addr #0 {
  %2 = alloca ptr, align 8
  %3 = alloca %struct.stat, align 8
  %4 = alloca i64, align 8
  store ptr %0, ptr %2, align 8, !tbaa !6
  call void @llvm.lifetime.start.p0(i64 144, ptr nonnull %3) #17
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #17
  %5 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 2
  %6 = load i32, ptr %5, align 4, !tbaa !49
  %7 = and i32 %6, 2098176
  %8 = icmp eq i32 %7, 1024
  br i1 %8, label %9, label %15

9:                                                ; preds = %1
  %10 = load ptr, ptr %0, align 8, !tbaa !72
  %11 = getelementptr inbounds %struct.xpv, ptr %10, i64 0, i32 2
  %12 = load i64, ptr %11, align 8, !tbaa !53
  store i64 %12, ptr %4, align 8, !tbaa !59
  %13 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3
  %14 = load ptr, ptr %13, align 8, !tbaa !17
  br label %18

15:                                               ; preds = %1
  %16 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %0, ptr noundef nonnull %4, i32 noundef 34) #17
  %17 = load i64, ptr %4, align 8, !tbaa !59
  br label %18

18:                                               ; preds = %15, %9
  %19 = phi i64 [ %17, %15 ], [ %12, %9 ]
  %20 = phi ptr [ %16, %15 ], [ %14, %9 ]
  %21 = icmp ugt i64 %19, 1
  br i1 %21, label %22, label %29

22:                                               ; preds = %18
  %23 = add i64 %19, -1
  %24 = call ptr @memchr(ptr noundef %20, i32 noundef 0, i64 noundef %23) #18
  %25 = icmp eq ptr %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %22
  %27 = tail call ptr @__errno_location() #20
  store i32 2, ptr %27, align 4, !tbaa !31
  %28 = getelementptr inbounds i8, ptr %24, i64 1
  call void (i32, ptr, ...) @Perl_ck_warner(i32 noundef 59, ptr noundef nonnull @.str.97, ptr noundef nonnull @.str.76, ptr noundef nonnull @.str.77, ptr noundef %20, ptr noundef nonnull %28) #17
  br label %40

29:                                               ; preds = %18, %22
  %30 = tail call ptr @__errno_location() #20
  store i32 0, ptr %30, align 4, !tbaa !31
  %31 = call i32 @stat64(ptr noundef %20, ptr noundef nonnull %3) #17
  %32 = icmp slt i32 %31, 0
  br i1 %32, label %40, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %struct.stat, ptr %3, i64 0, i32 3
  %35 = load i32, ptr %34, align 8, !tbaa !225
  %36 = trunc i32 %35 to i16
  %37 = and i16 %36, -4096
  switch i16 %37, label %38 [
    i16 16384, label %40
    i16 24576, label %40
  ]

38:                                               ; preds = %33
  %39 = call ptr @PerlIO_openn(ptr noundef nonnull @.str.99, ptr noundef nonnull @.str.83, i32 noundef -1, i32 noundef 0, i32 noundef 0, ptr noundef null, i32 noundef 1, ptr noundef nonnull %2) #17
  br label %40

40:                                               ; preds = %26, %29, %33, %33, %38
  %41 = phi ptr [ %39, %38 ], [ null, %26 ], [ null, %33 ], [ null, %33 ], [ null, %29 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #17
  call void @llvm.lifetime.end.p0(i64 144, ptr nonnull %3) #17
  ret ptr %41
}

declare ptr @PerlIO_openn(ptr noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

declare i32 @Perl_sv_backoff(ptr noundef) local_unnamed_addr #2

declare i64 @Perl_sv_len(ptr noundef) local_unnamed_addr #2

declare i32 @Perl_filter_read(i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

declare void @Perl_sv_usepvn_flags(ptr noundef, ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #2

declare ptr @Perl_savepvn(ptr noundef, i32 noundef) local_unnamed_addr #2

declare void @Perl_filter_del(ptr noundef) local_unnamed_addr #2

declare void @Perl_croak_sv(ptr noundef) local_unnamed_addr #2

declare ptr @Perl_pad_new(i32 noundef) local_unnamed_addr #2

declare void @Perl_save_hints() local_unnamed_addr #2

declare void @Perl_hv_clear(ptr noundef) local_unnamed_addr #2

; Function Attrs: mustprogress nofree nounwind willreturn allockind("alloc,uninitialized") allocsize(0) memory(inaccessiblemem: readwrite)
declare noalias noundef ptr @malloc(i64 noundef) local_unnamed_addr #12

declare void @Perl_refcounted_he_free(ptr noundef) local_unnamed_addr #2

declare ptr @Perl_refcounted_he_inc(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc i32 @S_try_yyparse() unnamed_addr #0 {
  %1 = alloca %struct.jmpenv, align 8
  call void @llvm.lifetime.start.p0(i64 216, ptr nonnull %1) #17
  %2 = load ptr, ptr @PL_top_env, align 8, !tbaa !6
  %3 = getelementptr inbounds %struct.jmpenv, ptr %1, i64 0, i32 1
  store ptr %2, ptr %3, align 8, !tbaa !156
  %4 = call i32 @__sigsetjmp(ptr noundef nonnull %1, i32 noundef 0) #22
  %5 = getelementptr inbounds %struct.jmpenv, ptr %1, i64 0, i32 2
  store i32 %4, ptr %5, align 8, !tbaa !224
  store ptr %1, ptr @PL_top_env, align 8, !tbaa !6
  %6 = getelementptr inbounds %struct.jmpenv, ptr %1, i64 0, i32 3
  store i8 0, ptr %6, align 4, !tbaa !211
  switch i32 %4, label %11 [
    i32 0, label %7
    i32 3, label %24
  ]

7:                                                ; preds = %0
  %8 = call i32 @Perl_yyparse(i32 noundef 258) #17
  %9 = icmp ne i32 %8, 0
  %10 = zext i1 %9 to i32
  br label %24

11:                                               ; preds = %0
  %12 = load ptr, ptr %3, align 8, !tbaa !156
  store ptr %12, ptr @PL_top_env, align 8, !tbaa !6
  %13 = getelementptr inbounds %struct.jmpenv, ptr %12, i64 0, i32 1
  %14 = load ptr, ptr %13, align 8, !tbaa !156
  %15 = icmp eq ptr %14, null
  br i1 %15, label %17, label %16

16:                                               ; preds = %11
  call void @siglongjmp(ptr noundef nonnull %12, i32 noundef %4) #19
  unreachable

17:                                               ; preds = %11
  %18 = icmp eq i32 %4, 2
  br i1 %18, label %19, label %21

19:                                               ; preds = %17
  %20 = load i32, ptr @PL_statusvalue, align 4, !tbaa !31
  call void @exit(i32 noundef %20) #19
  unreachable

21:                                               ; preds = %17
  %22 = call ptr @Perl_PerlIO_stderr() #17
  %23 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %22, ptr noundef nonnull @.str.20, i32 noundef %4) #17
  call void @exit(i32 noundef 1) #19
  unreachable

24:                                               ; preds = %7, %0
  %25 = phi i32 [ %4, %0 ], [ %10, %7 ]
  %26 = load ptr, ptr %3, align 8, !tbaa !156
  store ptr %26, ptr @PL_top_env, align 8, !tbaa !6
  call void @llvm.lifetime.end.p0(i64 216, ptr nonnull %1) #17
  ret i32 %25
}

declare i32 @Perl_yyparse(i32 noundef) local_unnamed_addr #2

declare void @Perl_op_free(ptr noundef) local_unnamed_addr #2

declare void @Perl_cv_forget_slab(ptr noundef) local_unnamed_addr #2

declare void @Perl_call_list(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind returns_twice
declare i32 @__sigsetjmp(ptr noundef, i32 noundef) local_unnamed_addr #13

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_hintseval() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !6
  %2 = load ptr, ptr @PL_stack_max, align 8, !tbaa !6
  %3 = ptrtoint ptr %2 to i64
  %4 = ptrtoint ptr %1 to i64
  %5 = sub i64 %3, %4
  %6 = icmp slt i64 %5, 8
  br i1 %6, label %7, label %9

7:                                                ; preds = %0
  %8 = tail call ptr @Perl_stack_grow(ptr noundef %1, ptr noundef %1, i64 noundef 1) #17
  br label %9

9:                                                ; preds = %0, %7
  %10 = phi ptr [ %8, %7 ], [ %1, %0 ]
  %11 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %12 = getelementptr inbounds %struct.svop, ptr %11, i64 0, i32 7
  %13 = load ptr, ptr %12, align 8, !tbaa !228
  %14 = tail call ptr @Perl_hv_copy_hints_hv(ptr noundef %13) #17
  %15 = tail call ptr @Perl_sv_2mortal(ptr noundef %14) #17
  %16 = getelementptr inbounds ptr, ptr %10, i64 1
  store ptr %15, ptr %16, align 8, !tbaa !6
  store ptr %16, ptr @PL_stack_sp, align 8, !tbaa !6
  %17 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %18 = load ptr, ptr %17, align 8, !tbaa !20
  ret ptr %18
}

declare ptr @Perl_hv_copy_hints_hv(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_entereval() local_unnamed_addr #0 {
  %1 = alloca [32 x i8], align 16
  %2 = getelementptr inbounds i8, ptr %1, i64 2
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !6
  %6 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %7 = getelementptr inbounds %struct.op, ptr %6, i64 0, i32 5
  %8 = load i8, ptr %7, align 2, !tbaa !30
  %9 = and i8 %8, 3
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %13, label %11

11:                                               ; preds = %0
  %12 = zext i8 %9 to i32
  br label %45

13:                                               ; preds = %0
  %14 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %15 = getelementptr inbounds %struct.stackinfo, ptr %14, i64 0, i32 1
  %16 = load ptr, ptr %15, align 8, !tbaa !14
  %17 = getelementptr inbounds %struct.stackinfo, ptr %14, i64 0, i32 4
  %18 = load i32, ptr %17, align 8, !tbaa !16
  %19 = icmp sgt i32 %18, -1
  br i1 %19, label %20, label %45

20:                                               ; preds = %13
  %21 = zext i32 %18 to i64
  br label %22

22:                                               ; preds = %30, %20
  %23 = phi i64 [ %21, %20 ], [ %31, %30 ]
  %24 = getelementptr inbounds %struct.context, ptr %16, i64 %23
  %25 = load i8, ptr %24, align 8, !tbaa !17
  %26 = and i8 %25, 15
  %27 = zext i8 %26 to i32
  switch i32 %27, label %30 [
    i32 8, label %28
    i32 10, label %33
    i32 9, label %33
  ]

28:                                               ; preds = %22
  %29 = icmp sgt i8 %25, -1
  br i1 %29, label %33, label %30

30:                                               ; preds = %28, %22
  %31 = add nsw i64 %23, -1
  %32 = icmp sgt i64 %23, 0
  br i1 %32, label %22, label %45, !llvm.loop !18

33:                                               ; preds = %28, %22, %22
  %34 = and i64 %23, 2147483648
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %36, label %45

36:                                               ; preds = %33
  %37 = and i64 %23, 4294967295
  %38 = getelementptr inbounds %struct.context, ptr %16, i64 %37, i32 0, i32 0, i32 1
  %39 = load i8, ptr %38, align 1, !tbaa !17
  switch i8 %39, label %42 [
    i8 1, label %45
    i8 2, label %40
    i8 3, label %41
  ]

40:                                               ; preds = %36
  br label %45

41:                                               ; preds = %36
  br label %45

42:                                               ; preds = %36
  %43 = zext i8 %39 to i32
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.14, i32 noundef %43) #17
  %44 = load ptr, ptr @PL_op, align 8, !tbaa !6
  br label %45

45:                                               ; preds = %30, %42, %41, %40, %36, %33, %13, %11
  %46 = phi ptr [ %6, %11 ], [ %44, %42 ], [ %6, %41 ], [ %6, %40 ], [ %6, %33 ], [ %6, %36 ], [ %6, %13 ], [ %6, %30 ]
  %47 = phi i32 [ %12, %11 ], [ 0, %42 ], [ 3, %41 ], [ 2, %40 ], [ 1, %33 ], [ 1, %36 ], [ 1, %13 ], [ 1, %30 ]
  %48 = load i32, ptr @PL_breakable_sub_gen, align 4, !tbaa !31
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %1) #17
  %49 = getelementptr inbounds %struct.op, ptr %46, i64 0, i32 6
  %50 = load i8, ptr %49, align 1, !tbaa !10
  %51 = zext i8 %50 to i32
  %52 = and i32 %51, 8
  %53 = icmp eq i32 %52, 0
  %54 = and i32 %51, 2
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %64, label %56

56:                                               ; preds = %45
  %57 = getelementptr inbounds ptr, ptr %5, i64 -1
  %58 = load ptr, ptr %5, align 8, !tbaa !6
  %59 = icmp eq ptr %58, null
  br i1 %59, label %84, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %struct.sv, ptr %58, i64 0, i32 1
  %62 = load i32, ptr %61, align 8, !tbaa !41
  %63 = add i32 %62, 1
  store i32 %63, ptr %61, align 8, !tbaa !41
  br label %84

64:                                               ; preds = %45
  %65 = load i32, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 10), align 8, !tbaa !70
  %66 = and i32 %65, 131072
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %70, label %68

68:                                               ; preds = %64
  %69 = load ptr, ptr @PL_curcop, align 8, !tbaa !6
  br label %79

70:                                               ; preds = %64
  %71 = and i32 %51, 16
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %84, label %73

73:                                               ; preds = %70
  %74 = load ptr, ptr @PL_curcop, align 8, !tbaa !6
  %75 = getelementptr inbounds %struct.cop, ptr %74, i64 0, i32 10
  %76 = load i32, ptr %75, align 8, !tbaa !70
  %77 = and i32 %76, 131072
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %84, label %79

79:                                               ; preds = %68, %73
  %80 = phi ptr [ %69, %68 ], [ %74, %73 ]
  %81 = getelementptr inbounds %struct.cop, ptr %80, i64 0, i32 13
  %82 = load ptr, ptr %81, align 8, !tbaa !170
  %83 = tail call ptr @Perl_refcounted_he_chain_2hv(ptr noundef %82, i32 noundef 0) #17
  tail call void @Perl_sv_magic(ptr noundef %83, ptr noundef null, i32 noundef 72, ptr noundef null, i32 noundef 0) #17
  br label %84

84:                                               ; preds = %60, %56, %70, %73, %79
  %85 = phi ptr [ %83, %79 ], [ null, %73 ], [ null, %70 ], [ null, %56 ], [ %58, %60 ]
  %86 = phi ptr [ %5, %79 ], [ %5, %73 ], [ %5, %70 ], [ %57, %56 ], [ %57, %60 ]
  %87 = getelementptr inbounds ptr, ptr %86, i64 -1
  %88 = load ptr, ptr %86, align 8, !tbaa !6
  %89 = getelementptr inbounds %struct.sv, ptr %88, i64 0, i32 2
  %90 = load i32, ptr %89, align 4, !tbaa !49
  %91 = and i32 %90, 1024
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %121

93:                                               ; preds = %84
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %3) #17
  %94 = and i32 %90, 2098176
  %95 = icmp eq i32 %94, 1024
  br i1 %95, label %96, label %102

96:                                               ; preds = %93
  %97 = load ptr, ptr %88, align 8, !tbaa !72
  %98 = getelementptr inbounds %struct.xpv, ptr %97, i64 0, i32 2
  %99 = load i64, ptr %98, align 8, !tbaa !53
  store i64 %99, ptr %3, align 8, !tbaa !59
  %100 = getelementptr inbounds %struct.sv, ptr %88, i64 0, i32 3
  %101 = load ptr, ptr %100, align 8, !tbaa !17
  br label %106

102:                                              ; preds = %93
  %103 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %88, ptr noundef nonnull %3, i32 noundef 34) #17
  %104 = load i64, ptr %3, align 8, !tbaa !59
  %105 = load i32, ptr %89, align 4, !tbaa !49
  br label %106

106:                                              ; preds = %102, %96
  %107 = phi i32 [ %90, %96 ], [ %105, %102 ]
  %108 = phi i64 [ %99, %96 ], [ %104, %102 ]
  %109 = phi ptr [ %101, %96 ], [ %103, %102 ]
  %110 = and i32 %107, 536870912
  %111 = or i32 %110, 524288
  %112 = call ptr @Perl_newSVpvn_flags(ptr noundef %109, i64 noundef %108, i32 noundef %111) #17
  br i1 %53, label %120, label %113

113:                                              ; preds = %106
  %114 = getelementptr inbounds %struct.sv, ptr %112, i64 0, i32 2
  %115 = load i32, ptr %114, align 4, !tbaa !49
  %116 = and i32 %115, 536870912
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %120, label %118

118:                                              ; preds = %113
  %119 = call ptr @Perl_sv_pvbyten_force(ptr noundef nonnull %112, ptr noundef nonnull %3) #17
  br label %120

120:                                              ; preds = %118, %113, %106
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %3) #17
  br label %135

121:                                              ; preds = %84
  %122 = and i32 %90, 536870912
  %123 = icmp eq i32 %122, 0
  %124 = or i1 %53, %123
  br i1 %124, label %135, label %125

125:                                              ; preds = %121
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %4) #17
  %126 = tail call ptr @Perl_newSVsv(ptr noundef nonnull %88) #17
  %127 = tail call ptr @Perl_sv_2mortal(ptr noundef %126) #17
  %128 = getelementptr inbounds %struct.sv, ptr %126, i64 0, i32 2
  %129 = load i32, ptr %128, align 4, !tbaa !49
  %130 = and i32 %129, 966889216
  %131 = icmp eq i32 %130, 1024
  br i1 %131, label %134, label %132

132:                                              ; preds = %125
  %133 = call ptr @Perl_sv_pvbyten_force(ptr noundef nonnull %126, ptr noundef nonnull %4) #17
  br label %134

134:                                              ; preds = %125, %132
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %4) #17
  br label %135

135:                                              ; preds = %121, %134, %120
  %136 = phi i32 [ 8, %134 ], [ 0, %121 ], [ 8, %120 ]
  %137 = phi ptr [ %126, %134 ], [ %88, %121 ], [ %112, %120 ]
  %138 = getelementptr inbounds %struct.sv, ptr %137, i64 0, i32 2
  %139 = load i32, ptr %138, align 4, !tbaa !49
  %140 = and i32 %139, 14680064
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %145, label %142

142:                                              ; preds = %135
  %143 = call zeroext i1 @Perl_sv_tainted(ptr noundef nonnull %137) #17
  br i1 %143, label %144, label %145

144:                                              ; preds = %142
  store i8 1, ptr @PL_tainted, align 1, !tbaa !26
  br label %145

145:                                              ; preds = %135, %142, %144
  %146 = load i8, ptr @PL_tainting, align 1, !tbaa !26, !range !44, !noundef !45
  %147 = icmp eq i8 %146, 0
  br i1 %147, label %149, label %148

148:                                              ; preds = %145
  call void @Perl_taint_proper(ptr noundef null, ptr noundef nonnull @.str.47) #17
  br label %149

149:                                              ; preds = %145, %148
  call void @Perl_push_scope() #17
  %150 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %151 = getelementptr inbounds %struct.op, ptr %150, i64 0, i32 6
  %152 = load i8, ptr %151, align 1, !tbaa !10
  %153 = and i8 %152, 4
  %154 = icmp eq i8 %153, 0
  %155 = select i1 %53, i32 1, i32 4
  %156 = select i1 %154, i32 %155, i32 2
  %157 = or i32 %156, %136
  call void @Perl_lex_start(ptr noundef nonnull %137, ptr noundef null, i32 noundef %157) #17
  call void @Perl_save_strlen(ptr noundef nonnull @PL_tmps_floor) #17
  %158 = load i64, ptr @PL_tmps_ix, align 8, !tbaa !59
  store i64 %158, ptr @PL_tmps_floor, align 8, !tbaa !59
  %159 = load i32, ptr @PL_perldb, align 4, !tbaa !31
  %160 = and i32 %159, 256
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %193, label %162

162:                                              ; preds = %149
  %163 = load ptr, ptr @PL_curcop, align 8, !tbaa !6
  %164 = getelementptr inbounds %struct.cop, ptr %163, i64 0, i32 7
  %165 = load i32, ptr %164, align 4, !tbaa !168
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %193, label %167

167:                                              ; preds = %162
  %168 = call ptr @Perl_sv_newmortal() #17
  %169 = load i32, ptr @PL_evalseq, align 4, !tbaa !31
  %170 = add i32 %169, 1
  store i32 %170, ptr @PL_evalseq, align 4, !tbaa !31
  %171 = zext i32 %170 to i64
  %172 = load ptr, ptr @PL_curcop, align 8, !tbaa !6
  %173 = getelementptr inbounds %struct.cop, ptr %172, i64 0, i32 9
  %174 = load ptr, ptr %173, align 8, !tbaa !166
  %175 = icmp eq ptr %174, null
  br i1 %175, label %181, label %176

176:                                              ; preds = %167
  %177 = load ptr, ptr %174, align 8, !tbaa !114
  %178 = getelementptr inbounds %struct.xpvgv, ptr %177, i64 0, i32 4
  %179 = load ptr, ptr %178, align 8, !tbaa !17
  %180 = getelementptr inbounds %struct.hek, ptr %179, i64 0, i32 2, i64 2
  br label %181

181:                                              ; preds = %167, %176
  %182 = phi ptr [ %180, %176 ], [ null, %167 ]
  %183 = getelementptr inbounds %struct.cop, ptr %172, i64 0, i32 7
  %184 = load i32, ptr %183, align 4, !tbaa !168
  %185 = zext i32 %184 to i64
  call void (ptr, ptr, ...) @Perl_sv_setpvf(ptr noundef %168, ptr noundef nonnull @.str.102, i64 noundef %171, ptr noundef %182, i64 noundef %185) #17
  %186 = getelementptr inbounds %struct.sv, ptr %168, i64 0, i32 3
  %187 = load ptr, ptr %186, align 8, !tbaa !17
  %188 = getelementptr inbounds i8, ptr %187, i64 2
  %189 = load ptr, ptr %168, align 8, !tbaa !72
  %190 = getelementptr inbounds %struct.xpv, ptr %189, i64 0, i32 2
  %191 = load i64, ptr %190, align 8, !tbaa !53
  %192 = trunc i64 %191 to i32
  br label %198

193:                                              ; preds = %162, %149
  %194 = load i32, ptr @PL_evalseq, align 4, !tbaa !31
  %195 = add i32 %194, 1
  store i32 %195, ptr @PL_evalseq, align 4, !tbaa !31
  %196 = zext i32 %195 to i64
  %197 = call i32 (ptr, i64, ptr, ...) @Perl_my_snprintf(ptr noundef nonnull %1, i64 noundef 32, ptr noundef nonnull @.str.103, i64 noundef %196) #17
  br label %198

198:                                              ; preds = %193, %181
  %199 = phi i32 [ %192, %181 ], [ %197, %193 ]
  %200 = phi ptr [ %187, %181 ], [ %1, %193 ]
  %201 = phi ptr [ %188, %181 ], [ %2, %193 ]
  call void @Perl_save_generic_svref(ptr noundef nonnull getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 9)) #17
  %202 = call ptr @Perl_gv_fetchfile(ptr noundef nonnull %201) #17
  %203 = icmp eq ptr %202, null
  br i1 %203, label %208, label %204

204:                                              ; preds = %198
  %205 = getelementptr inbounds %struct.sv, ptr %202, i64 0, i32 1
  %206 = load i32, ptr %205, align 8, !tbaa !41
  %207 = add i32 %206, 1
  store i32 %207, ptr %205, align 8, !tbaa !41
  br label %208

208:                                              ; preds = %198, %204
  store ptr %202, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 9), align 8, !tbaa !166
  call void @Perl_save_I32(ptr noundef nonnull getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 7)) #17
  store i32 1, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 7), align 4, !tbaa !168
  %209 = load ptr, ptr @PL_curcop, align 8, !tbaa !6
  %210 = icmp eq ptr %209, @PL_compiling
  %211 = getelementptr inbounds %struct.cop, ptr %209, i64 0, i32 11
  %212 = select i1 %210, ptr @PL_cop_seqmax, ptr %211
  %213 = load i32, ptr %212, align 4, !tbaa !31
  %214 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %215 = icmp eq ptr %214, null
  br i1 %215, label %303, label %216

216:                                              ; preds = %208
  %217 = load ptr, ptr @PL_debstash, align 8
  %218 = freeze ptr %217
  %219 = icmp eq ptr %218, null
  br i1 %219, label %220, label %255

220:                                              ; preds = %216, %229
  %221 = phi ptr [ %231, %229 ], [ %214, %216 ]
  %222 = getelementptr inbounds %struct.stackinfo, ptr %221, i64 0, i32 4
  %223 = load i32, ptr %222, align 8, !tbaa !16
  %224 = icmp sgt i32 %223, -1
  br i1 %224, label %225, label %229

225:                                              ; preds = %220
  %226 = getelementptr inbounds %struct.stackinfo, ptr %221, i64 0, i32 1
  %227 = load ptr, ptr %226, align 8, !tbaa !14
  %228 = zext i32 %223 to i64
  br label %233

229:                                              ; preds = %252, %220
  %230 = getelementptr inbounds %struct.stackinfo, ptr %221, i64 0, i32 2
  %231 = load ptr, ptr %230, align 8, !tbaa !6
  %232 = icmp eq ptr %231, null
  br i1 %232, label %303, label %220, !llvm.loop !199

233:                                              ; preds = %252, %225
  %234 = phi i64 [ %228, %225 ], [ %253, %252 ]
  %235 = getelementptr inbounds %struct.context, ptr %227, i64 %234
  %236 = load i8, ptr %235, align 8, !tbaa !17
  %237 = zext i8 %236 to i32
  %238 = and i32 %237, 15
  switch i32 %238, label %252 [
    i32 8, label %244
    i32 9, label %244
    i32 10, label %239
  ]

239:                                              ; preds = %233
  %240 = and i32 %237, 79
  %241 = icmp eq i32 %240, 74
  br i1 %241, label %252, label %242

242:                                              ; preds = %239
  %243 = getelementptr inbounds %struct.block, ptr %235, i64 0, i32 8, i32 0, i32 4
  br label %248

244:                                              ; preds = %233, %233
  %245 = getelementptr inbounds %struct.block, ptr %235, i64 0, i32 8, i32 0, i32 1
  %246 = and i8 %236, 64
  %247 = icmp eq i8 %246, 0
  br i1 %247, label %248, label %252

248:                                              ; preds = %244, %242
  %249 = phi ptr [ %245, %244 ], [ %243, %242 ]
  %250 = load ptr, ptr %249, align 8, !tbaa !17
  %251 = icmp eq ptr %250, null
  br i1 %251, label %252, label %306

252:                                              ; preds = %248, %244, %239, %233
  %253 = add nsw i64 %234, -1
  %254 = icmp sgt i64 %234, 0
  br i1 %254, label %233, label %229, !llvm.loop !203

255:                                              ; preds = %216, %261
  %256 = phi i32 [ %262, %261 ], [ %213, %216 ]
  %257 = phi ptr [ %264, %261 ], [ %214, %216 ]
  %258 = getelementptr inbounds %struct.stackinfo, ptr %257, i64 0, i32 4
  %259 = load i32, ptr %258, align 8, !tbaa !16
  %260 = icmp sgt i32 %259, -1
  br i1 %260, label %299, label %261

261:                                              ; preds = %295, %255
  %262 = phi i32 [ %256, %255 ], [ %296, %295 ]
  %263 = getelementptr inbounds %struct.stackinfo, ptr %257, i64 0, i32 2
  %264 = load ptr, ptr %263, align 8, !tbaa !6
  %265 = icmp eq ptr %264, null
  br i1 %265, label %303, label %255, !llvm.loop !199

266:                                              ; preds = %299, %295
  %267 = phi i32 [ %256, %299 ], [ %296, %295 ]
  %268 = phi i64 [ %302, %299 ], [ %297, %295 ]
  %269 = getelementptr inbounds %struct.context, ptr %301, i64 %268
  %270 = load i8, ptr %269, align 8, !tbaa !17
  %271 = zext i8 %270 to i32
  %272 = and i32 %271, 15
  switch i32 %272, label %295 [
    i32 8, label %276
    i32 9, label %276
    i32 10, label %273
  ]

273:                                              ; preds = %266
  %274 = and i32 %271, 79
  %275 = icmp eq i32 %274, 74
  br i1 %275, label %295, label %286

276:                                              ; preds = %266, %266
  %277 = getelementptr inbounds %struct.block, ptr %269, i64 0, i32 8, i32 0, i32 1
  %278 = load ptr, ptr %277, align 8, !tbaa !17
  %279 = load ptr, ptr %278, align 8, !tbaa !133
  %280 = getelementptr inbounds %struct.xpvcv, ptr %279, i64 0, i32 4
  %281 = load ptr, ptr %280, align 8, !tbaa !200
  %282 = icmp eq ptr %281, %218
  br i1 %282, label %290, label %283

283:                                              ; preds = %276
  %284 = and i8 %270, 64
  %285 = icmp eq i8 %284, 0
  br i1 %285, label %306, label %295

286:                                              ; preds = %273
  %287 = getelementptr inbounds %struct.block, ptr %269, i64 0, i32 8, i32 0, i32 4
  %288 = load ptr, ptr %287, align 8, !tbaa !17
  %289 = icmp eq ptr %288, null
  br i1 %289, label %295, label %306

290:                                              ; preds = %276
  %291 = getelementptr inbounds %struct.block, ptr %269, i64 0, i32 4
  %292 = load ptr, ptr %291, align 8, !tbaa !17
  %293 = getelementptr inbounds %struct.cop, ptr %292, i64 0, i32 11
  %294 = load i32, ptr %293, align 4, !tbaa !202
  br label %295

295:                                              ; preds = %290, %286, %283, %273, %266
  %296 = phi i32 [ %267, %266 ], [ %267, %273 ], [ %267, %286 ], [ %267, %283 ], [ %294, %290 ]
  %297 = add nsw i64 %268, -1
  %298 = icmp sgt i64 %268, 0
  br i1 %298, label %266, label %261, !llvm.loop !203

299:                                              ; preds = %255
  %300 = getelementptr inbounds %struct.stackinfo, ptr %257, i64 0, i32 1
  %301 = load ptr, ptr %300, align 8, !tbaa !14
  %302 = zext i32 %259 to i64
  br label %266

303:                                              ; preds = %261, %229, %208
  %304 = phi i32 [ %213, %208 ], [ %213, %229 ], [ %262, %261 ]
  %305 = load ptr, ptr @PL_main_cv, align 8
  br label %306

306:                                              ; preds = %283, %286, %248, %303
  %307 = phi i32 [ %304, %303 ], [ %213, %248 ], [ %267, %286 ], [ %267, %283 ]
  %308 = phi ptr [ %305, %303 ], [ %250, %248 ], [ %278, %283 ], [ %288, %286 ]
  %309 = getelementptr inbounds %struct.stackinfo, ptr %214, i64 0, i32 4
  %310 = load i32, ptr %309, align 8, !tbaa !16
  %311 = getelementptr inbounds %struct.stackinfo, ptr %214, i64 0, i32 5
  %312 = load i32, ptr %311, align 4, !tbaa !171
  %313 = icmp slt i32 %310, %312
  br i1 %313, label %314, label %316

314:                                              ; preds = %306
  %315 = add nsw i32 %310, 1
  store i32 %315, ptr %309, align 8, !tbaa !16
  br label %320

316:                                              ; preds = %306
  %317 = call i32 @Perl_cxinc() #17
  %318 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %319 = getelementptr inbounds %struct.stackinfo, ptr %318, i64 0, i32 4
  store i32 %317, ptr %319, align 8, !tbaa !16
  br label %320

320:                                              ; preds = %316, %314
  %321 = phi i32 [ %317, %316 ], [ %315, %314 ]
  %322 = phi ptr [ %318, %316 ], [ %214, %314 ]
  %323 = getelementptr inbounds %struct.stackinfo, ptr %322, i64 0, i32 1
  %324 = load ptr, ptr %323, align 8, !tbaa !14
  %325 = sext i32 %321 to i64
  %326 = getelementptr inbounds %struct.context, ptr %324, i64 %325
  store i8 42, ptr %326, align 8, !tbaa !17
  %327 = load ptr, ptr @PL_stack_base, align 8, !tbaa !6
  %328 = ptrtoint ptr %87 to i64
  %329 = ptrtoint ptr %327 to i64
  %330 = sub i64 %328, %329
  %331 = lshr exact i64 %330, 3
  %332 = trunc i64 %331 to i32
  %333 = getelementptr inbounds %struct.block, ptr %326, i64 0, i32 3
  store i32 %332, ptr %333, align 4, !tbaa !17
  %334 = load ptr, ptr @PL_curcop, align 8, !tbaa !6
  %335 = getelementptr inbounds %struct.block, ptr %326, i64 0, i32 4
  store ptr %334, ptr %335, align 8, !tbaa !17
  %336 = load ptr, ptr @PL_markstack_ptr, align 8, !tbaa !6
  %337 = load ptr, ptr @PL_markstack, align 8, !tbaa !6
  %338 = ptrtoint ptr %336 to i64
  %339 = ptrtoint ptr %337 to i64
  %340 = sub i64 %338, %339
  %341 = lshr exact i64 %340, 2
  %342 = trunc i64 %341 to i32
  %343 = getelementptr inbounds %struct.block, ptr %326, i64 0, i32 5
  store i32 %342, ptr %343, align 8, !tbaa !17
  %344 = load i32, ptr @PL_scopestack_ix, align 4, !tbaa !31
  %345 = getelementptr inbounds %struct.block, ptr %326, i64 0, i32 6
  store i32 %344, ptr %345, align 4, !tbaa !17
  %346 = load ptr, ptr @PL_curpm, align 8, !tbaa !6
  %347 = getelementptr inbounds %struct.block, ptr %326, i64 0, i32 7
  store ptr %346, ptr %347, align 8, !tbaa !17
  %348 = trunc i32 %47 to i8
  %349 = getelementptr inbounds %struct.block, ptr %326, i64 0, i32 1
  store i8 %348, ptr %349, align 1, !tbaa !17
  %350 = load i8, ptr @PL_in_eval, align 1, !tbaa !17
  %351 = and i8 %350, 127
  %352 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %353 = getelementptr inbounds %struct.op, ptr %352, i64 0, i32 4
  %354 = load i16, ptr %353, align 8
  %355 = shl i16 %354, 7
  %356 = zext i8 %351 to i16
  %357 = or i16 %355, %356
  %358 = getelementptr inbounds %struct.block, ptr %326, i64 0, i32 2
  store i16 %357, ptr %358, align 2, !tbaa !17
  %359 = getelementptr inbounds %struct.block, ptr %326, i64 0, i32 8
  %360 = getelementptr inbounds %struct.block, ptr %326, i64 0, i32 8, i32 0, i32 1
  store ptr null, ptr %360, align 8, !tbaa !17
  %361 = load ptr, ptr @PL_eval_root, align 8, !tbaa !6
  %362 = getelementptr inbounds %struct.block, ptr %326, i64 0, i32 8, i32 0, i32 2
  store ptr %361, ptr %362, align 8, !tbaa !17
  %363 = load ptr, ptr @PL_parser, align 8, !tbaa !6
  %364 = icmp eq ptr %363, null
  br i1 %364, label %368, label %365

365:                                              ; preds = %320
  %366 = getelementptr inbounds %struct.yy_parser, ptr %363, i64 0, i32 33
  %367 = load ptr, ptr %366, align 8, !tbaa !210
  br label %368

368:                                              ; preds = %320, %365
  %369 = phi ptr [ %367, %365 ], [ null, %320 ]
  %370 = getelementptr inbounds %struct.block, ptr %326, i64 0, i32 8, i32 0, i32 3
  store ptr %369, ptr %370, align 8, !tbaa !17
  %371 = getelementptr inbounds %struct.block, ptr %326, i64 0, i32 8, i32 0, i32 4
  store ptr null, ptr %371, align 8, !tbaa !17
  store ptr null, ptr %359, align 8, !tbaa !17
  %372 = load ptr, ptr @PL_top_env, align 8, !tbaa !6
  %373 = getelementptr inbounds %struct.block, ptr %326, i64 0, i32 8, i32 0, i32 5
  store ptr %372, ptr %373, align 8, !tbaa !17
  %374 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %375 = load ptr, ptr %374, align 8, !tbaa !20
  store ptr %375, ptr %359, align 8, !tbaa !17
  %376 = load i32, ptr @PL_perldb, align 4, !tbaa !31
  %377 = and i32 %376, 1026
  %378 = icmp eq i32 %377, 0
  br i1 %378, label %422, label %379

379:                                              ; preds = %368
  %380 = load ptr, ptr @PL_curstash, align 8, !tbaa !6
  %381 = load ptr, ptr @PL_debstash, align 8, !tbaa !6
  %382 = icmp eq ptr %380, %381
  br i1 %382, label %422, label %383

383:                                              ; preds = %379
  %384 = load ptr, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 9), align 8, !tbaa !166
  %385 = icmp eq ptr %384, null
  br i1 %385, label %391, label %386

386:                                              ; preds = %383
  %387 = getelementptr inbounds %struct.gv, ptr %384, i64 0, i32 3
  %388 = load ptr, ptr %387, align 8, !tbaa !17
  %389 = getelementptr inbounds %struct.gp, ptr %388, i64 0, i32 6
  %390 = load ptr, ptr %389, align 8, !tbaa !138
  br label %391

391:                                              ; preds = %383, %386
  %392 = phi ptr [ %390, %386 ], [ null, %383 ]
  %393 = load ptr, ptr @PL_parser, align 8, !tbaa !6
  %394 = getelementptr inbounds %struct.yy_parser, ptr %393, i64 0, i32 33
  %395 = load ptr, ptr %394, align 8, !tbaa !210
  %396 = load ptr, ptr %395, align 8, !tbaa !72
  %397 = getelementptr i8, ptr %395, i64 16
  %398 = load ptr, ptr %397, align 8, !tbaa !17
  %399 = getelementptr i8, ptr %396, i64 16
  %400 = load i64, ptr %399, align 8, !tbaa !53
  %401 = getelementptr inbounds i8, ptr %398, i64 %400
  %402 = icmp ne ptr %398, null
  %403 = icmp sgt i64 %400, 0
  %404 = select i1 %402, i1 %403, i1 false
  br i1 %404, label %405, label %425

405:                                              ; preds = %391
  %406 = ptrtoint ptr %401 to i64
  br label %407

407:                                              ; preds = %407, %405
  %408 = phi i64 [ 1, %405 ], [ %419, %407 ]
  %409 = phi ptr [ %398, %405 ], [ %416, %407 ]
  %410 = call ptr @Perl_newSV_type(i32 noundef 7) #17
  %411 = ptrtoint ptr %409 to i64
  %412 = sub i64 %406, %411
  %413 = call ptr @memchr(ptr noundef nonnull %409, i32 noundef 10, i64 noundef %412) #18
  %414 = icmp eq ptr %413, null
  %415 = getelementptr inbounds i8, ptr %413, i64 1
  %416 = select i1 %414, ptr %401, ptr %415
  %417 = ptrtoint ptr %416 to i64
  %418 = sub i64 %417, %411
  call void @Perl_sv_setpvn(ptr noundef %410, ptr noundef nonnull %409, i64 noundef %418) #17
  %419 = add nuw i64 %408, 1
  %420 = call ptr @Perl_av_store(ptr noundef %392, i64 noundef %408, ptr noundef %410) #17
  %421 = icmp ult ptr %416, %401
  br i1 %421, label %407, label %425, !llvm.loop !230

422:                                              ; preds = %368, %379
  %423 = call ptr @Perl_savepvn(ptr noundef %200, i32 noundef %199) #17
  %424 = load ptr, ptr @PL_defstash, align 8, !tbaa !6
  call void @Perl_save_delete(ptr noundef %424, ptr noundef %423, i32 noundef %199) #17
  br label %425

425:                                              ; preds = %407, %391, %422
  %426 = phi i1 [ true, %422 ], [ false, %391 ], [ false, %407 ]
  store ptr %87, ptr @PL_stack_sp, align 8, !tbaa !6
  %427 = call fastcc zeroext i1 @S_doeval(i32 noundef %47, ptr noundef %308, i32 noundef %307, ptr noundef %85)
  %428 = load i32, ptr @PL_breakable_sub_gen, align 4, !tbaa !31
  %429 = icmp eq i32 %48, %428
  %430 = load i32, ptr @PL_perldb, align 4
  br i1 %427, label %431, label %450

431:                                              ; preds = %425
  br i1 %429, label %436, label %432

432:                                              ; preds = %431
  %433 = and i32 %430, 1026
  %434 = icmp ne i32 %433, 0
  %435 = or i1 %426, %434
  br i1 %435, label %443, label %440

436:                                              ; preds = %431
  %437 = and i32 %430, 2048
  %438 = icmp ne i32 %437, 0
  %439 = or i1 %426, %438
  br i1 %439, label %443, label %440

440:                                              ; preds = %432, %436
  %441 = call ptr @Perl_savepvn(ptr noundef %200, i32 noundef %199) #17
  %442 = load ptr, ptr @PL_defstash, align 8, !tbaa !6
  call void @Perl_save_delete(ptr noundef %442, ptr noundef %441, i32 noundef %199) #17
  br label %443

443:                                              ; preds = %432, %436, %440
  %444 = load ptr, ptr @PL_top_env, align 8, !tbaa !6
  %445 = getelementptr inbounds %struct.jmpenv, ptr %444, i64 0, i32 3
  %446 = load i8, ptr %445, align 4, !tbaa !211, !range !44, !noundef !45
  %447 = icmp eq i8 %446, 0
  %448 = load ptr, ptr @PL_eval_start, align 8, !tbaa !6
  br i1 %447, label %465, label %449

449:                                              ; preds = %443
  call fastcc void @S_docatch(ptr noundef %448)
  br label %465

450:                                              ; preds = %425
  br i1 %429, label %455, label %451

451:                                              ; preds = %450
  %452 = and i32 %430, 1026
  %453 = icmp ne i32 %452, 0
  %454 = or i1 %426, %453
  br i1 %454, label %462, label %459

455:                                              ; preds = %450
  %456 = and i32 %430, 4096
  %457 = icmp ne i32 %456, 0
  %458 = or i1 %426, %457
  br i1 %458, label %462, label %459

459:                                              ; preds = %451, %455
  %460 = load ptr, ptr @PL_defstash, align 8, !tbaa !6
  %461 = call ptr @Perl_hv_common_key_len(ptr noundef %460, ptr noundef %200, i32 noundef %199, i32 noundef 68, ptr noundef null, i32 noundef 0) #17
  br label %462

462:                                              ; preds = %451, %455, %459
  %463 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %464 = load ptr, ptr %463, align 8, !tbaa !20
  br label %465

465:                                              ; preds = %443, %449, %462
  %466 = phi ptr [ %464, %462 ], [ null, %449 ], [ %448, %443 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %1) #17
  ret ptr %466
}

declare ptr @Perl_sv_pvbyten_force(ptr noundef, ptr noundef) local_unnamed_addr #2

declare void @Perl_save_delete(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

declare ptr @Perl_av_store(ptr noundef, i64 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_leaveeval() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !6
  %2 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %3 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 5
  %4 = load i8, ptr %3, align 2, !tbaa !30
  %5 = load i32, ptr @PL_sig_pending, align 4, !tbaa !31
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %0
  %8 = load ptr, ptr @PL_signalhook, align 8, !tbaa !6
  tail call void %8() #17
  br label %9

9:                                                ; preds = %0, %7
  %10 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %11 = getelementptr inbounds %struct.stackinfo, ptr %10, i64 0, i32 1
  %12 = load ptr, ptr %11, align 8, !tbaa !14
  %13 = getelementptr inbounds %struct.stackinfo, ptr %10, i64 0, i32 4
  %14 = load i32, ptr %13, align 8, !tbaa !16
  %15 = add nsw i32 %14, -1
  store i32 %15, ptr %13, align 8, !tbaa !16
  %16 = sext i32 %14 to i64
  %17 = getelementptr inbounds %struct.context, ptr %12, i64 %16
  %18 = load ptr, ptr @PL_stack_base, align 8, !tbaa !6
  %19 = getelementptr inbounds %struct.block, ptr %17, i64 0, i32 3
  %20 = load i32, ptr %19, align 4, !tbaa !17
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds ptr, ptr %18, i64 %21
  %23 = getelementptr inbounds %struct.block, ptr %17, i64 0, i32 4
  %24 = load ptr, ptr %23, align 8, !tbaa !17
  store ptr %24, ptr @PL_curcop, align 8, !tbaa !6
  %25 = load ptr, ptr @PL_markstack, align 8, !tbaa !6
  %26 = getelementptr inbounds %struct.block, ptr %17, i64 0, i32 5
  %27 = load i32, ptr %26, align 8, !tbaa !17
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, ptr %25, i64 %28
  store ptr %29, ptr @PL_markstack_ptr, align 8, !tbaa !6
  %30 = getelementptr inbounds %struct.block, ptr %17, i64 0, i32 6
  %31 = load i32, ptr %30, align 4, !tbaa !17
  store i32 %31, ptr @PL_scopestack_ix, align 4, !tbaa !31
  %32 = getelementptr inbounds %struct.block, ptr %17, i64 0, i32 7
  %33 = load ptr, ptr %32, align 8, !tbaa !17
  %34 = getelementptr inbounds %struct.block, ptr %17, i64 0, i32 1
  %35 = load i8, ptr %34, align 1, !tbaa !17
  %36 = getelementptr inbounds %struct.block, ptr %17, i64 0, i32 2
  %37 = load i16, ptr %36, align 2, !tbaa !17
  %38 = trunc i16 %37 to i8
  %39 = and i8 %38, 127
  store i8 %39, ptr @PL_in_eval, align 1, !tbaa !17
  %40 = load i16, ptr %36, align 2, !tbaa !17
  %41 = getelementptr inbounds %struct.block, ptr %17, i64 0, i32 8
  %42 = getelementptr inbounds %struct.block, ptr %17, i64 0, i32 8, i32 0, i32 2
  %43 = load ptr, ptr %42, align 8, !tbaa !17
  store ptr %43, ptr @PL_eval_root, align 8, !tbaa !6
  %44 = getelementptr inbounds %struct.block, ptr %17, i64 0, i32 8, i32 0, i32 3
  %45 = load ptr, ptr %44, align 8, !tbaa !17
  %46 = icmp eq ptr %45, null
  br i1 %46, label %59, label %47

47:                                               ; preds = %9
  %48 = getelementptr inbounds %struct.sv, ptr %45, i64 0, i32 2
  %49 = load i32, ptr %48, align 4, !tbaa !49
  %50 = and i32 %49, 49152
  %51 = icmp eq i32 %50, 49152
  br i1 %51, label %52, label %59

52:                                               ; preds = %47
  %53 = getelementptr inbounds %struct.sv, ptr %45, i64 0, i32 1
  %54 = load i32, ptr %53, align 8, !tbaa !41
  %55 = icmp ugt i32 %54, 1
  br i1 %55, label %56, label %58

56:                                               ; preds = %52
  %57 = add i32 %54, -1
  store i32 %57, ptr %53, align 8, !tbaa !41
  br label %59

58:                                               ; preds = %52
  tail call void @Perl_sv_free2(ptr noundef nonnull %45, i32 noundef %54) #17
  br label %59

59:                                               ; preds = %58, %56, %47, %9
  %60 = getelementptr inbounds %struct.block, ptr %17, i64 0, i32 8, i32 0, i32 1
  %61 = load ptr, ptr %60, align 8, !tbaa !17
  %62 = icmp eq ptr %61, null
  br i1 %62, label %66, label %63

63:                                               ; preds = %59
  %64 = tail call ptr @Perl_sv_2mortal(ptr noundef nonnull %61) #17
  %65 = load ptr, ptr %60, align 8, !tbaa !17
  br label %66

66:                                               ; preds = %63, %59
  %67 = phi ptr [ %65, %63 ], [ null, %59 ]
  %68 = load ptr, ptr %41, align 8, !tbaa !17
  %69 = getelementptr inbounds %struct.block, ptr %17, i64 0, i32 8, i32 0, i32 4
  %70 = load ptr, ptr %69, align 8, !tbaa !17
  %71 = icmp eq i8 %35, 1
  %72 = select i1 %71, ptr %1, ptr %22
  store i8 0, ptr @PL_tainted, align 1, !tbaa !26
  switch i8 %35, label %123 [
    i8 2, label %76
    i8 3, label %73
  ]

73:                                               ; preds = %66
  %74 = getelementptr inbounds ptr, ptr %22, i64 1
  %75 = icmp ugt ptr %74, %1
  br i1 %75, label %129, label %106

76:                                               ; preds = %66
  %77 = icmp ult ptr %22, %1
  br i1 %77, label %78, label %89

78:                                               ; preds = %76
  %79 = load ptr, ptr %1, align 8, !tbaa !6
  %80 = getelementptr inbounds %struct.sv, ptr %79, i64 0, i32 2
  %81 = load i32, ptr %80, align 4, !tbaa !49
  %82 = and i32 %81, 524288
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %86

84:                                               ; preds = %78
  %85 = tail call ptr @Perl_sv_mortalcopy_flags(ptr noundef nonnull %79, i32 noundef 1538) #17
  br label %86

86:                                               ; preds = %84, %78
  %87 = phi ptr [ %85, %84 ], [ %79, %78 ]
  %88 = getelementptr inbounds ptr, ptr %72, i64 1
  store ptr %87, ptr %88, align 8, !tbaa !6
  br label %123

89:                                               ; preds = %76
  %90 = load ptr, ptr @PL_stack_max, align 8, !tbaa !6
  %91 = ptrtoint ptr %90 to i64
  %92 = ptrtoint ptr %72 to i64
  %93 = sub i64 %91, %92
  %94 = icmp slt i64 %93, 8
  br i1 %94, label %95, label %103

95:                                               ; preds = %89
  %96 = load ptr, ptr @PL_stack_base, align 8, !tbaa !6
  %97 = ptrtoint ptr %96 to i64
  %98 = sub i64 %92, %97
  %99 = ashr exact i64 %98, 3
  %100 = tail call ptr @Perl_stack_grow(ptr noundef %1, ptr noundef %72, i64 noundef 1) #17
  %101 = load ptr, ptr @PL_stack_base, align 8, !tbaa !6
  %102 = getelementptr inbounds ptr, ptr %101, i64 %99
  br label %103

103:                                              ; preds = %95, %89
  %104 = phi ptr [ %102, %95 ], [ %72, %89 ]
  %105 = getelementptr inbounds ptr, ptr %104, i64 1
  store ptr @PL_sv_undef, ptr %105, align 8, !tbaa !6
  br label %123

106:                                              ; preds = %73, %119
  %107 = phi ptr [ %121, %119 ], [ %74, %73 ]
  %108 = phi ptr [ %120, %119 ], [ %72, %73 ]
  %109 = load ptr, ptr %107, align 8, !tbaa !6
  %110 = getelementptr inbounds %struct.sv, ptr %109, i64 0, i32 2
  %111 = load i32, ptr %110, align 4, !tbaa !49
  %112 = and i32 %111, 524288
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %116, label %114

114:                                              ; preds = %106
  %115 = getelementptr inbounds ptr, ptr %108, i64 1
  store ptr %109, ptr %115, align 8, !tbaa !6
  br label %119

116:                                              ; preds = %106
  %117 = tail call ptr @Perl_sv_mortalcopy_flags(ptr noundef nonnull %109, i32 noundef 1538) #17
  %118 = getelementptr inbounds ptr, ptr %108, i64 1
  store ptr %117, ptr %118, align 8, !tbaa !6
  store i8 0, ptr @PL_tainted, align 1, !tbaa !26
  br label %119

119:                                              ; preds = %116, %114
  %120 = phi ptr [ %115, %114 ], [ %118, %116 ]
  %121 = getelementptr inbounds ptr, ptr %107, i64 1
  %122 = icmp ugt ptr %121, %1
  br i1 %122, label %123, label %106, !llvm.loop !174

123:                                              ; preds = %119, %66, %86, %103
  %124 = phi ptr [ %105, %103 ], [ %88, %86 ], [ %72, %66 ], [ %120, %119 ]
  store ptr %33, ptr @PL_curpm, align 8, !tbaa !6
  %125 = load ptr, ptr %70, align 8, !tbaa !133
  %126 = getelementptr inbounds %struct.xpvcv, ptr %125, i64 0, i32 13
  store i32 0, ptr %126, align 4, !tbaa !31
  %127 = and i16 %40, -128
  %128 = icmp eq i16 %127, -22144
  br i1 %128, label %134, label %226

129:                                              ; preds = %73
  store ptr %33, ptr @PL_curpm, align 8, !tbaa !6
  %130 = load ptr, ptr %70, align 8, !tbaa !133
  %131 = getelementptr inbounds %struct.xpvcv, ptr %130, i64 0, i32 13
  store i32 0, ptr %131, align 4, !tbaa !31
  %132 = and i16 %40, -128
  %133 = icmp eq i16 %132, -22144
  br i1 %133, label %193, label %226

134:                                              ; preds = %123
  %135 = icmp eq i8 %35, 2
  br i1 %135, label %136, label %193

136:                                              ; preds = %134
  %137 = load ptr, ptr %124, align 8, !tbaa !6
  %138 = icmp eq ptr %137, null
  br i1 %138, label %196, label %139

139:                                              ; preds = %136
  %140 = getelementptr inbounds %struct.sv, ptr %137, i64 0, i32 2
  %141 = load i32, ptr %140, align 4, !tbaa !49
  %142 = and i32 %141, 2097152
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %146, label %144

144:                                              ; preds = %139
  %145 = tail call zeroext i1 @Perl_sv_2bool_flags(ptr noundef nonnull %137, i32 noundef 2) #17
  br i1 %145, label %226, label %196

146:                                              ; preds = %139
  %147 = and i32 %141, 65280
  %148 = icmp ne i32 %147, 0
  %149 = and i32 %141, 255
  %150 = icmp eq i32 %149, 8
  %151 = or i1 %148, %150
  %152 = and i32 %141, 16826623
  %153 = icmp eq i32 %152, 16777226
  %154 = or i1 %153, %151
  br i1 %154, label %155, label %196

155:                                              ; preds = %146
  %156 = and i32 %141, 1024
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %172, label %158

158:                                              ; preds = %155
  %159 = load ptr, ptr %137, align 8, !tbaa !72
  %160 = icmp eq ptr %159, null
  br i1 %160, label %196, label %161

161:                                              ; preds = %158
  %162 = getelementptr inbounds %struct.xpv, ptr %159, i64 0, i32 2
  %163 = load i64, ptr %162, align 8, !tbaa !53
  %164 = icmp ugt i64 %163, 1
  br i1 %164, label %226, label %165

165:                                              ; preds = %161
  %166 = icmp eq i64 %163, 0
  br i1 %166, label %196, label %167

167:                                              ; preds = %165
  %168 = getelementptr inbounds %struct.sv, ptr %137, i64 0, i32 3
  %169 = load ptr, ptr %168, align 8, !tbaa !17
  %170 = load i8, ptr %169, align 1, !tbaa !17
  %171 = icmp eq i8 %170, 48
  br i1 %171, label %196, label %226

172:                                              ; preds = %155
  %173 = and i32 %141, 768
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %191, label %175

175:                                              ; preds = %172
  %176 = and i32 %141, 256
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %183, label %178

178:                                              ; preds = %175
  %179 = load ptr, ptr %137, align 8, !tbaa !72
  %180 = getelementptr inbounds %struct.xpviv, ptr %179, i64 0, i32 4
  %181 = load i64, ptr %180, align 8, !tbaa !17
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %183, label %226

183:                                              ; preds = %178, %175
  %184 = and i32 %141, 512
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %196, label %186

186:                                              ; preds = %183
  %187 = load ptr, ptr %137, align 8, !tbaa !72
  %188 = getelementptr inbounds %struct.xpvnv, ptr %187, i64 0, i32 5
  %189 = load double, ptr %188, align 8, !tbaa !17
  %190 = fcmp une double %189, 0.000000e+00
  br i1 %190, label %226, label %196

191:                                              ; preds = %172
  %192 = tail call zeroext i1 @Perl_sv_2bool_flags(ptr noundef nonnull %137, i32 noundef 0) #17
  br i1 %192, label %226, label %196

193:                                              ; preds = %129, %134
  %194 = phi ptr [ %124, %134 ], [ %72, %129 ]
  %195 = icmp ugt ptr %194, %22
  br i1 %195, label %226, label %196

196:                                              ; preds = %186, %146, %136, %193, %191, %183, %167, %165, %158, %144
  %197 = phi ptr [ %124, %186 ], [ %124, %146 ], [ %124, %136 ], [ %194, %193 ], [ %124, %191 ], [ %124, %183 ], [ %124, %167 ], [ %124, %165 ], [ %124, %158 ], [ %124, %144 ]
  %198 = load ptr, ptr @PL_incgv, align 8, !tbaa !6
  %199 = getelementptr inbounds %struct.gv, ptr %198, i64 0, i32 3
  %200 = load ptr, ptr %199, align 8, !tbaa !17
  %201 = getelementptr inbounds %struct.gp, ptr %200, i64 0, i32 5
  %202 = load ptr, ptr %201, align 8, !tbaa !155
  %203 = icmp eq ptr %202, null
  br i1 %203, label %204, label %210

204:                                              ; preds = %196
  %205 = tail call ptr @Perl_gv_add_by_type(ptr noundef nonnull %198, i32 noundef 12) #17
  %206 = getelementptr inbounds %struct.gv, ptr %205, i64 0, i32 3
  %207 = load ptr, ptr %206, align 8, !tbaa !17
  %208 = getelementptr inbounds %struct.gp, ptr %207, i64 0, i32 5
  %209 = load ptr, ptr %208, align 8, !tbaa !155
  br label %210

210:                                              ; preds = %196, %204
  %211 = phi ptr [ %209, %204 ], [ %202, %196 ]
  %212 = getelementptr inbounds %struct.sv, ptr %67, i64 0, i32 3
  %213 = load ptr, ptr %212, align 8, !tbaa !17
  %214 = getelementptr inbounds %struct.sv, ptr %67, i64 0, i32 2
  %215 = load i32, ptr %214, align 4, !tbaa !49
  %216 = and i32 %215, 536870912
  %217 = icmp eq i32 %216, 0
  %218 = load ptr, ptr %67, align 8, !tbaa !72
  %219 = getelementptr inbounds %struct.xpv, ptr %218, i64 0, i32 2
  %220 = load i64, ptr %219, align 8, !tbaa !53
  %221 = trunc i64 %220 to i32
  %222 = sub nsw i32 0, %221
  %223 = select i1 %217, i32 %221, i32 %222
  %224 = tail call ptr @Perl_hv_common_key_len(ptr noundef %211, ptr noundef %213, i32 noundef %223, i32 noundef 68, ptr noundef null, i32 noundef 0) #17
  %225 = tail call ptr (ptr, ...) @Perl_die(ptr noundef nonnull @.str.30, ptr noundef nonnull %67) #17
  br label %257

226:                                              ; preds = %129, %193, %191, %186, %178, %167, %161, %144, %123
  %227 = phi ptr [ %72, %129 ], [ %194, %193 ], [ %124, %191 ], [ %124, %186 ], [ %124, %178 ], [ %124, %167 ], [ %124, %161 ], [ %124, %144 ], [ %124, %123 ]
  tail call void @Perl_pop_scope() #17
  %228 = icmp sgt i8 %4, -1
  br i1 %228, label %229, label %257

229:                                              ; preds = %226
  %230 = load ptr, ptr @PL_errgv, align 8, !tbaa !6
  %231 = getelementptr inbounds %struct.gv, ptr %230, i64 0, i32 3
  %232 = load ptr, ptr %231, align 8, !tbaa !17
  %233 = load ptr, ptr %232, align 8, !tbaa !6
  %234 = icmp eq ptr %233, null
  br i1 %234, label %247, label %235

235:                                              ; preds = %229
  %236 = getelementptr inbounds %struct.sv, ptr %233, i64 0, i32 2
  %237 = load i32, ptr %236, align 4, !tbaa !49
  %238 = and i32 %237, 134283264
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %249, label %240

240:                                              ; preds = %235
  %241 = getelementptr inbounds %struct.sv, ptr %233, i64 0, i32 1
  %242 = load i32, ptr %241, align 8, !tbaa !41
  %243 = icmp ugt i32 %242, 1
  br i1 %243, label %244, label %246

244:                                              ; preds = %240
  %245 = add i32 %242, -1
  store i32 %245, ptr %241, align 8, !tbaa !41
  br label %247

246:                                              ; preds = %240
  tail call void @Perl_sv_free2(ptr noundef nonnull %233, i32 noundef %242) #17
  br label %247

247:                                              ; preds = %246, %244, %229
  %248 = tail call ptr @Perl_newSVpvn(ptr noundef nonnull @.str.10, i64 noundef 0) #17
  store ptr %248, ptr %232, align 8, !tbaa !6
  br label %257

249:                                              ; preds = %235
  tail call void @Perl_sv_setpvn(ptr noundef nonnull %233, ptr noundef nonnull @.str.10, i64 noundef 0) #17
  %250 = load i32, ptr %236, align 4, !tbaa !49
  %251 = and i32 %250, 1610547455
  %252 = or i32 %251, 17408
  store i32 %252, ptr %236, align 4, !tbaa !49
  %253 = and i32 %250, 14680064
  %254 = icmp eq i32 %253, 0
  br i1 %254, label %257, label %255

255:                                              ; preds = %249
  %256 = tail call i32 @Perl_mg_free(ptr noundef nonnull %233) #17
  br label %257

257:                                              ; preds = %247, %255, %249, %226, %210
  %258 = phi ptr [ %227, %247 ], [ %227, %255 ], [ %227, %249 ], [ %227, %226 ], [ %197, %210 ]
  store ptr %258, ptr @PL_stack_sp, align 8, !tbaa !6
  ret ptr %68
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local void @Perl_delete_eval_scope() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %2 = getelementptr inbounds %struct.stackinfo, ptr %1, i64 0, i32 1
  %3 = load ptr, ptr %2, align 8, !tbaa !14
  %4 = getelementptr inbounds %struct.stackinfo, ptr %1, i64 0, i32 4
  %5 = load i32, ptr %4, align 8, !tbaa !16
  %6 = add nsw i32 %5, -1
  store i32 %6, ptr %4, align 8, !tbaa !16
  %7 = sext i32 %5 to i64
  %8 = getelementptr inbounds %struct.context, ptr %3, i64 %7
  %9 = getelementptr inbounds %struct.block, ptr %8, i64 0, i32 4
  %10 = load ptr, ptr %9, align 8, !tbaa !17
  store ptr %10, ptr @PL_curcop, align 8, !tbaa !6
  %11 = load ptr, ptr @PL_markstack, align 8, !tbaa !6
  %12 = getelementptr inbounds %struct.block, ptr %8, i64 0, i32 5
  %13 = load i32, ptr %12, align 8, !tbaa !17
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds i32, ptr %11, i64 %14
  store ptr %15, ptr @PL_markstack_ptr, align 8, !tbaa !6
  %16 = getelementptr inbounds %struct.block, ptr %8, i64 0, i32 6
  %17 = load i32, ptr %16, align 4, !tbaa !17
  store i32 %17, ptr @PL_scopestack_ix, align 4, !tbaa !31
  %18 = getelementptr inbounds %struct.block, ptr %8, i64 0, i32 7
  %19 = load ptr, ptr %18, align 8, !tbaa !17
  %20 = getelementptr inbounds %struct.block, ptr %8, i64 0, i32 2
  %21 = load i16, ptr %20, align 2, !tbaa !17
  %22 = trunc i16 %21 to i8
  %23 = and i8 %22, 127
  store i8 %23, ptr @PL_in_eval, align 1, !tbaa !17
  %24 = getelementptr inbounds %struct.block, ptr %8, i64 0, i32 8, i32 0, i32 2
  %25 = load ptr, ptr %24, align 8, !tbaa !17
  store ptr %25, ptr @PL_eval_root, align 8, !tbaa !6
  %26 = getelementptr inbounds %struct.block, ptr %8, i64 0, i32 8, i32 0, i32 3
  %27 = load ptr, ptr %26, align 8, !tbaa !17
  %28 = icmp eq ptr %27, null
  br i1 %28, label %41, label %29

29:                                               ; preds = %0
  %30 = getelementptr inbounds %struct.sv, ptr %27, i64 0, i32 2
  %31 = load i32, ptr %30, align 4, !tbaa !49
  %32 = and i32 %31, 49152
  %33 = icmp eq i32 %32, 49152
  br i1 %33, label %34, label %41

34:                                               ; preds = %29
  %35 = getelementptr inbounds %struct.sv, ptr %27, i64 0, i32 1
  %36 = load i32, ptr %35, align 8, !tbaa !41
  %37 = icmp ugt i32 %36, 1
  br i1 %37, label %38, label %40

38:                                               ; preds = %34
  %39 = add i32 %36, -1
  store i32 %39, ptr %35, align 8, !tbaa !41
  br label %41

40:                                               ; preds = %34
  tail call void @Perl_sv_free2(ptr noundef nonnull %27, i32 noundef %36) #17
  br label %41

41:                                               ; preds = %40, %38, %29, %0
  %42 = getelementptr inbounds %struct.block, ptr %8, i64 0, i32 8, i32 0, i32 1
  %43 = load ptr, ptr %42, align 8, !tbaa !17
  %44 = icmp eq ptr %43, null
  br i1 %44, label %47, label %45

45:                                               ; preds = %41
  %46 = tail call ptr @Perl_sv_2mortal(ptr noundef nonnull %43) #17
  br label %47

47:                                               ; preds = %45, %41
  store ptr %19, ptr @PL_curpm, align 8, !tbaa !6
  tail call void @Perl_pop_scope() #17
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_create_eval_scope(i32 noundef %0) local_unnamed_addr #0 {
  %2 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %3 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 5
  %4 = load i8, ptr %3, align 2, !tbaa !30
  %5 = and i8 %4, 3
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %38

7:                                                ; preds = %1
  %8 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %9 = getelementptr inbounds %struct.stackinfo, ptr %8, i64 0, i32 1
  %10 = load ptr, ptr %9, align 8, !tbaa !14
  %11 = getelementptr inbounds %struct.stackinfo, ptr %8, i64 0, i32 4
  %12 = load i32, ptr %11, align 8, !tbaa !16
  %13 = icmp sgt i32 %12, -1
  br i1 %13, label %14, label %38

14:                                               ; preds = %7
  %15 = zext i32 %12 to i64
  br label %16

16:                                               ; preds = %24, %14
  %17 = phi i64 [ %15, %14 ], [ %25, %24 ]
  %18 = getelementptr inbounds %struct.context, ptr %10, i64 %17
  %19 = load i8, ptr %18, align 8, !tbaa !17
  %20 = and i8 %19, 15
  %21 = zext i8 %20 to i32
  switch i32 %21, label %24 [
    i32 8, label %22
    i32 10, label %27
    i32 9, label %27
  ]

22:                                               ; preds = %16
  %23 = icmp sgt i8 %19, -1
  br i1 %23, label %27, label %24

24:                                               ; preds = %22, %16
  %25 = add nsw i64 %17, -1
  %26 = icmp sgt i64 %17, 0
  br i1 %26, label %16, label %38, !llvm.loop !18

27:                                               ; preds = %22, %16, %16
  %28 = and i64 %17, 2147483648
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %30, label %38

30:                                               ; preds = %27
  %31 = and i64 %17, 4294967295
  %32 = getelementptr inbounds %struct.context, ptr %10, i64 %31, i32 0, i32 0, i32 1
  %33 = load i8, ptr %32, align 1, !tbaa !17
  %34 = add i8 %33, -1
  %35 = icmp ult i8 %34, 3
  br i1 %35, label %38, label %36

36:                                               ; preds = %30
  %37 = zext i8 %33 to i32
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.14, i32 noundef %37) #17
  br label %38

38:                                               ; preds = %24, %30, %36, %27, %7, %1
  %39 = phi i8 [ %5, %1 ], [ 0, %36 ], [ 1, %27 ], [ 1, %7 ], [ %33, %30 ], [ 1, %24 ]
  tail call void @Perl_push_scope() #17
  tail call void @Perl_save_strlen(ptr noundef nonnull @PL_tmps_floor) #17
  %40 = load i64, ptr @PL_tmps_ix, align 8, !tbaa !59
  store i64 %40, ptr @PL_tmps_floor, align 8, !tbaa !59
  %41 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %42 = getelementptr inbounds %struct.stackinfo, ptr %41, i64 0, i32 4
  %43 = load i32, ptr %42, align 8, !tbaa !16
  %44 = getelementptr inbounds %struct.stackinfo, ptr %41, i64 0, i32 5
  %45 = load i32, ptr %44, align 4, !tbaa !171
  %46 = icmp slt i32 %43, %45
  br i1 %46, label %47, label %49

47:                                               ; preds = %38
  %48 = add nsw i32 %43, 1
  store i32 %48, ptr %42, align 8, !tbaa !16
  br label %53

49:                                               ; preds = %38
  %50 = tail call i32 @Perl_cxinc() #17
  %51 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %52 = getelementptr inbounds %struct.stackinfo, ptr %51, i64 0, i32 4
  store i32 %50, ptr %52, align 8, !tbaa !16
  br label %53

53:                                               ; preds = %49, %47
  %54 = phi i32 [ %50, %49 ], [ %48, %47 ]
  %55 = phi ptr [ %51, %49 ], [ %41, %47 ]
  %56 = getelementptr inbounds %struct.stackinfo, ptr %55, i64 0, i32 1
  %57 = load ptr, ptr %56, align 8, !tbaa !14
  %58 = sext i32 %54 to i64
  %59 = getelementptr inbounds %struct.context, ptr %57, i64 %58
  store i8 74, ptr %59, align 8, !tbaa !17
  %60 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !6
  %61 = load ptr, ptr @PL_stack_base, align 8, !tbaa !6
  %62 = ptrtoint ptr %60 to i64
  %63 = ptrtoint ptr %61 to i64
  %64 = sub i64 %62, %63
  %65 = lshr exact i64 %64, 3
  %66 = trunc i64 %65 to i32
  %67 = getelementptr inbounds %struct.block, ptr %59, i64 0, i32 3
  store i32 %66, ptr %67, align 4, !tbaa !17
  %68 = load ptr, ptr @PL_curcop, align 8, !tbaa !6
  %69 = getelementptr inbounds %struct.block, ptr %59, i64 0, i32 4
  store ptr %68, ptr %69, align 8, !tbaa !17
  %70 = load ptr, ptr @PL_markstack_ptr, align 8, !tbaa !6
  %71 = load ptr, ptr @PL_markstack, align 8, !tbaa !6
  %72 = ptrtoint ptr %70 to i64
  %73 = ptrtoint ptr %71 to i64
  %74 = sub i64 %72, %73
  %75 = lshr exact i64 %74, 2
  %76 = trunc i64 %75 to i32
  %77 = getelementptr inbounds %struct.block, ptr %59, i64 0, i32 5
  store i32 %76, ptr %77, align 8, !tbaa !17
  %78 = load i32, ptr @PL_scopestack_ix, align 4, !tbaa !31
  %79 = getelementptr inbounds %struct.block, ptr %59, i64 0, i32 6
  store i32 %78, ptr %79, align 4, !tbaa !17
  %80 = load ptr, ptr @PL_curpm, align 8, !tbaa !6
  %81 = getelementptr inbounds %struct.block, ptr %59, i64 0, i32 7
  store ptr %80, ptr %81, align 8, !tbaa !17
  %82 = getelementptr inbounds %struct.block, ptr %59, i64 0, i32 1
  store i8 %39, ptr %82, align 1, !tbaa !17
  %83 = load i8, ptr @PL_in_eval, align 1, !tbaa !17
  %84 = and i8 %83, 127
  %85 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %86 = getelementptr inbounds %struct.op, ptr %85, i64 0, i32 4
  %87 = load i16, ptr %86, align 8
  %88 = shl i16 %87, 7
  %89 = zext i8 %84 to i16
  %90 = or i16 %88, %89
  %91 = getelementptr inbounds %struct.block, ptr %59, i64 0, i32 2
  store i16 %90, ptr %91, align 2, !tbaa !17
  %92 = getelementptr inbounds %struct.block, ptr %59, i64 0, i32 8
  %93 = getelementptr inbounds %struct.block, ptr %59, i64 0, i32 8, i32 0, i32 1
  store ptr null, ptr %93, align 8, !tbaa !17
  %94 = load ptr, ptr @PL_eval_root, align 8, !tbaa !6
  %95 = getelementptr inbounds %struct.block, ptr %59, i64 0, i32 8, i32 0, i32 2
  store ptr %94, ptr %95, align 8, !tbaa !17
  %96 = load ptr, ptr @PL_parser, align 8, !tbaa !6
  %97 = icmp eq ptr %96, null
  br i1 %97, label %101, label %98

98:                                               ; preds = %53
  %99 = getelementptr inbounds %struct.yy_parser, ptr %96, i64 0, i32 33
  %100 = load ptr, ptr %99, align 8, !tbaa !210
  br label %101

101:                                              ; preds = %53, %98
  %102 = phi ptr [ %100, %98 ], [ null, %53 ]
  %103 = getelementptr inbounds %struct.block, ptr %59, i64 0, i32 8, i32 0, i32 3
  store ptr %102, ptr %103, align 8, !tbaa !17
  %104 = getelementptr inbounds %struct.block, ptr %59, i64 0, i32 8, i32 0, i32 4
  store ptr null, ptr %104, align 8, !tbaa !17
  store ptr null, ptr %92, align 8, !tbaa !17
  %105 = load ptr, ptr @PL_top_env, align 8, !tbaa !6
  %106 = getelementptr inbounds %struct.block, ptr %59, i64 0, i32 8, i32 0, i32 5
  store ptr %105, ptr %106, align 8, !tbaa !17
  store i8 1, ptr @PL_in_eval, align 1, !tbaa !17
  %107 = and i32 %0, 32
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %110, label %109

109:                                              ; preds = %101
  store i8 5, ptr @PL_in_eval, align 1, !tbaa !17
  br label %138

110:                                              ; preds = %101
  %111 = load ptr, ptr @PL_errgv, align 8, !tbaa !6
  %112 = getelementptr inbounds %struct.gv, ptr %111, i64 0, i32 3
  %113 = load ptr, ptr %112, align 8, !tbaa !17
  %114 = load ptr, ptr %113, align 8, !tbaa !6
  %115 = icmp eq ptr %114, null
  br i1 %115, label %128, label %116

116:                                              ; preds = %110
  %117 = getelementptr inbounds %struct.sv, ptr %114, i64 0, i32 2
  %118 = load i32, ptr %117, align 4, !tbaa !49
  %119 = and i32 %118, 134283264
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %130, label %121

121:                                              ; preds = %116
  %122 = getelementptr inbounds %struct.sv, ptr %114, i64 0, i32 1
  %123 = load i32, ptr %122, align 8, !tbaa !41
  %124 = icmp ugt i32 %123, 1
  br i1 %124, label %125, label %127

125:                                              ; preds = %121
  %126 = add i32 %123, -1
  store i32 %126, ptr %122, align 8, !tbaa !41
  br label %128

127:                                              ; preds = %121
  tail call void @Perl_sv_free2(ptr noundef nonnull %114, i32 noundef %123) #17
  br label %128

128:                                              ; preds = %127, %125, %110
  %129 = tail call ptr @Perl_newSVpvn(ptr noundef nonnull @.str.10, i64 noundef 0) #17
  store ptr %129, ptr %113, align 8, !tbaa !6
  br label %138

130:                                              ; preds = %116
  tail call void @Perl_sv_setpvn(ptr noundef nonnull %114, ptr noundef nonnull @.str.10, i64 noundef 0) #17
  %131 = load i32, ptr %117, align 4, !tbaa !49
  %132 = and i32 %131, 1610547455
  %133 = or i32 %132, 17408
  store i32 %133, ptr %117, align 4, !tbaa !49
  %134 = and i32 %131, 14680064
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %138, label %136

136:                                              ; preds = %130
  %137 = tail call i32 @Perl_mg_free(ptr noundef nonnull %114) #17
  br label %138

138:                                              ; preds = %128, %136, %130, %109
  %139 = and i32 %0, 256
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %143, label %141

141:                                              ; preds = %138
  %142 = load ptr, ptr @PL_op, align 8, !tbaa !6
  store ptr %142, ptr @PL_eval_root, align 8, !tbaa !6
  br label %143

143:                                              ; preds = %141, %138
  ret ptr %59
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_entertry() local_unnamed_addr #0 {
  %1 = tail call ptr @Perl_create_eval_scope(i32 noundef 0)
  %2 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %3 = getelementptr inbounds %struct.logop, ptr %2, i64 0, i32 8
  %4 = load ptr, ptr %3, align 8, !tbaa !28
  %5 = load ptr, ptr %4, align 8, !tbaa !20
  %6 = getelementptr inbounds %struct.block, ptr %1, i64 0, i32 8
  store ptr %5, ptr %6, align 8, !tbaa !17
  %7 = load ptr, ptr @PL_top_env, align 8, !tbaa !6
  %8 = getelementptr inbounds %struct.jmpenv, ptr %7, i64 0, i32 3
  %9 = load i8, ptr %8, align 4, !tbaa !211, !range !44, !noundef !45
  %10 = icmp eq i8 %9, 0
  %11 = load ptr, ptr %2, align 8, !tbaa !20
  br i1 %10, label %13, label %12

12:                                               ; preds = %0
  tail call fastcc void @S_docatch(ptr noundef %11)
  br label %13

13:                                               ; preds = %0, %12
  %14 = phi ptr [ null, %12 ], [ %11, %0 ]
  ret ptr %14
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_leavetry() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !6
  %2 = load i32, ptr @PL_sig_pending, align 4, !tbaa !31
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %6, label %4

4:                                                ; preds = %0
  %5 = load ptr, ptr @PL_signalhook, align 8, !tbaa !6
  tail call void %5() #17
  br label %6

6:                                                ; preds = %0, %4
  %7 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %8 = getelementptr inbounds %struct.stackinfo, ptr %7, i64 0, i32 1
  %9 = load ptr, ptr %8, align 8, !tbaa !14
  %10 = getelementptr inbounds %struct.stackinfo, ptr %7, i64 0, i32 4
  %11 = load i32, ptr %10, align 8, !tbaa !16
  %12 = add nsw i32 %11, -1
  store i32 %12, ptr %10, align 8, !tbaa !16
  %13 = sext i32 %11 to i64
  %14 = getelementptr inbounds %struct.context, ptr %9, i64 %13
  %15 = load ptr, ptr @PL_stack_base, align 8, !tbaa !6
  %16 = getelementptr inbounds %struct.block, ptr %14, i64 0, i32 3
  %17 = load i32, ptr %16, align 4, !tbaa !17
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds ptr, ptr %15, i64 %18
  %20 = getelementptr inbounds %struct.block, ptr %14, i64 0, i32 4
  %21 = load ptr, ptr %20, align 8, !tbaa !17
  store ptr %21, ptr @PL_curcop, align 8, !tbaa !6
  %22 = load ptr, ptr @PL_markstack, align 8, !tbaa !6
  %23 = getelementptr inbounds %struct.block, ptr %14, i64 0, i32 5
  %24 = load i32, ptr %23, align 8, !tbaa !17
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds i32, ptr %22, i64 %25
  store ptr %26, ptr @PL_markstack_ptr, align 8, !tbaa !6
  %27 = getelementptr inbounds %struct.block, ptr %14, i64 0, i32 6
  %28 = load i32, ptr %27, align 4, !tbaa !17
  store i32 %28, ptr @PL_scopestack_ix, align 4, !tbaa !31
  %29 = getelementptr inbounds %struct.block, ptr %14, i64 0, i32 7
  %30 = load ptr, ptr %29, align 8, !tbaa !17
  %31 = getelementptr inbounds %struct.block, ptr %14, i64 0, i32 1
  %32 = load i8, ptr %31, align 1, !tbaa !17
  %33 = zext i8 %32 to i32
  %34 = getelementptr inbounds %struct.block, ptr %14, i64 0, i32 2
  %35 = load i16, ptr %34, align 2, !tbaa !17
  %36 = trunc i16 %35 to i8
  %37 = and i8 %36, 127
  store i8 %37, ptr @PL_in_eval, align 1, !tbaa !17
  %38 = getelementptr inbounds %struct.block, ptr %14, i64 0, i32 8, i32 0, i32 2
  %39 = load ptr, ptr %38, align 8, !tbaa !17
  store ptr %39, ptr @PL_eval_root, align 8, !tbaa !6
  %40 = getelementptr inbounds %struct.block, ptr %14, i64 0, i32 8, i32 0, i32 3
  %41 = load ptr, ptr %40, align 8, !tbaa !17
  %42 = icmp eq ptr %41, null
  br i1 %42, label %55, label %43

43:                                               ; preds = %6
  %44 = getelementptr inbounds %struct.sv, ptr %41, i64 0, i32 2
  %45 = load i32, ptr %44, align 4, !tbaa !49
  %46 = and i32 %45, 49152
  %47 = icmp eq i32 %46, 49152
  br i1 %47, label %48, label %55

48:                                               ; preds = %43
  %49 = getelementptr inbounds %struct.sv, ptr %41, i64 0, i32 1
  %50 = load i32, ptr %49, align 8, !tbaa !41
  %51 = icmp ugt i32 %50, 1
  br i1 %51, label %52, label %54

52:                                               ; preds = %48
  %53 = add i32 %50, -1
  store i32 %53, ptr %49, align 8, !tbaa !41
  br label %55

54:                                               ; preds = %48
  tail call void @Perl_sv_free2(ptr noundef nonnull %41, i32 noundef %50) #17
  br label %55

55:                                               ; preds = %54, %52, %43, %6
  %56 = getelementptr inbounds %struct.block, ptr %14, i64 0, i32 8, i32 0, i32 1
  %57 = load ptr, ptr %56, align 8, !tbaa !17
  %58 = icmp eq ptr %57, null
  br i1 %58, label %61, label %59

59:                                               ; preds = %55
  %60 = tail call ptr @Perl_sv_2mortal(ptr noundef nonnull %57) #17
  br label %61

61:                                               ; preds = %59, %55
  %62 = tail call fastcc ptr @S_leave_common(ptr noundef %19, ptr noundef %1, ptr noundef %19, i32 noundef %33, i32 noundef 655360, i1 noundef zeroext false)
  store ptr %30, ptr @PL_curpm, align 8, !tbaa !6
  tail call void @Perl_pop_scope() #17
  %63 = load ptr, ptr @PL_errgv, align 8, !tbaa !6
  %64 = getelementptr inbounds %struct.gv, ptr %63, i64 0, i32 3
  %65 = load ptr, ptr %64, align 8, !tbaa !17
  %66 = load ptr, ptr %65, align 8, !tbaa !6
  %67 = icmp eq ptr %66, null
  br i1 %67, label %80, label %68

68:                                               ; preds = %61
  %69 = getelementptr inbounds %struct.sv, ptr %66, i64 0, i32 2
  %70 = load i32, ptr %69, align 4, !tbaa !49
  %71 = and i32 %70, 134283264
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %82, label %73

73:                                               ; preds = %68
  %74 = getelementptr inbounds %struct.sv, ptr %66, i64 0, i32 1
  %75 = load i32, ptr %74, align 8, !tbaa !41
  %76 = icmp ugt i32 %75, 1
  br i1 %76, label %77, label %79

77:                                               ; preds = %73
  %78 = add i32 %75, -1
  store i32 %78, ptr %74, align 8, !tbaa !41
  br label %80

79:                                               ; preds = %73
  tail call void @Perl_sv_free2(ptr noundef nonnull %66, i32 noundef %75) #17
  br label %80

80:                                               ; preds = %79, %77, %61
  %81 = tail call ptr @Perl_newSVpvn(ptr noundef nonnull @.str.10, i64 noundef 0) #17
  store ptr %81, ptr %65, align 8, !tbaa !6
  br label %90

82:                                               ; preds = %68
  tail call void @Perl_sv_setpvn(ptr noundef nonnull %66, ptr noundef nonnull @.str.10, i64 noundef 0) #17
  %83 = load i32, ptr %69, align 4, !tbaa !49
  %84 = and i32 %83, 1610547455
  %85 = or i32 %84, 17408
  store i32 %85, ptr %69, align 4, !tbaa !49
  %86 = and i32 %83, 14680064
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %90, label %88

88:                                               ; preds = %82
  %89 = tail call i32 @Perl_mg_free(ptr noundef nonnull %66) #17
  br label %90

90:                                               ; preds = %82, %88, %80
  store ptr %62, ptr @PL_stack_sp, align 8, !tbaa !6
  %91 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %92 = load ptr, ptr %91, align 8, !tbaa !20
  ret ptr %92
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_entergiven() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !6
  %2 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %3 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 5
  %4 = load i8, ptr %3, align 2, !tbaa !30
  %5 = and i8 %4, 3
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %38

7:                                                ; preds = %0
  %8 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %9 = getelementptr inbounds %struct.stackinfo, ptr %8, i64 0, i32 1
  %10 = load ptr, ptr %9, align 8, !tbaa !14
  %11 = getelementptr inbounds %struct.stackinfo, ptr %8, i64 0, i32 4
  %12 = load i32, ptr %11, align 8, !tbaa !16
  %13 = icmp sgt i32 %12, -1
  br i1 %13, label %14, label %38

14:                                               ; preds = %7
  %15 = zext i32 %12 to i64
  br label %16

16:                                               ; preds = %24, %14
  %17 = phi i64 [ %15, %14 ], [ %25, %24 ]
  %18 = getelementptr inbounds %struct.context, ptr %10, i64 %17
  %19 = load i8, ptr %18, align 8, !tbaa !17
  %20 = and i8 %19, 15
  %21 = zext i8 %20 to i32
  switch i32 %21, label %24 [
    i32 8, label %22
    i32 10, label %27
    i32 9, label %27
  ]

22:                                               ; preds = %16
  %23 = icmp sgt i8 %19, -1
  br i1 %23, label %27, label %24

24:                                               ; preds = %22, %16
  %25 = add nsw i64 %17, -1
  %26 = icmp sgt i64 %17, 0
  br i1 %26, label %16, label %38, !llvm.loop !18

27:                                               ; preds = %22, %16, %16
  %28 = and i64 %17, 2147483648
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %30, label %38

30:                                               ; preds = %27
  %31 = and i64 %17, 4294967295
  %32 = getelementptr inbounds %struct.context, ptr %10, i64 %31, i32 0, i32 0, i32 1
  %33 = load i8, ptr %32, align 1, !tbaa !17
  %34 = add i8 %33, -1
  %35 = icmp ult i8 %34, 3
  br i1 %35, label %38, label %36

36:                                               ; preds = %30
  %37 = zext i8 %33 to i32
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.14, i32 noundef %37) #17
  br label %38

38:                                               ; preds = %24, %30, %36, %27, %7, %0
  %39 = phi i8 [ %5, %0 ], [ 0, %36 ], [ 1, %27 ], [ 1, %7 ], [ %33, %30 ], [ 1, %24 ]
  tail call void @Perl_push_scope() #17
  tail call void @Perl_save_strlen(ptr noundef nonnull @PL_tmps_floor) #17
  %40 = load i64, ptr @PL_tmps_ix, align 8, !tbaa !59
  store i64 %40, ptr @PL_tmps_floor, align 8, !tbaa !59
  %41 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %42 = getelementptr inbounds %struct.op, ptr %41, i64 0, i32 3
  %43 = load i64, ptr %42, align 8, !tbaa !40
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %72, label %45

45:                                               ; preds = %38
  tail call void @Perl_save_padsv_and_mortalize(i64 noundef %43) #17
  %46 = load ptr, ptr @PL_curpad, align 8, !tbaa !6
  %47 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %48 = getelementptr inbounds %struct.op, ptr %47, i64 0, i32 3
  %49 = load i64, ptr %48, align 8, !tbaa !40
  %50 = getelementptr inbounds ptr, ptr %46, i64 %49
  %51 = load ptr, ptr %50, align 8, !tbaa !6
  %52 = icmp eq ptr %51, null
  br i1 %52, label %64, label %53

53:                                               ; preds = %45
  %54 = getelementptr inbounds %struct.sv, ptr %51, i64 0, i32 1
  %55 = load i32, ptr %54, align 8, !tbaa !41
  %56 = icmp ugt i32 %55, 1
  br i1 %56, label %57, label %59

57:                                               ; preds = %53
  %58 = add i32 %55, -1
  store i32 %58, ptr %54, align 8, !tbaa !41
  br label %64

59:                                               ; preds = %53
  tail call void @Perl_sv_free2(ptr noundef nonnull %51, i32 noundef %55) #17
  %60 = load ptr, ptr @PL_curpad, align 8, !tbaa !6
  %61 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %62 = getelementptr inbounds %struct.op, ptr %61, i64 0, i32 3
  %63 = load i64, ptr %62, align 8, !tbaa !40
  br label %64

64:                                               ; preds = %45, %57, %59
  %65 = phi i64 [ %49, %45 ], [ %49, %57 ], [ %63, %59 ]
  %66 = phi ptr [ %46, %45 ], [ %46, %57 ], [ %60, %59 ]
  %67 = load ptr, ptr %1, align 8, !tbaa !6
  %68 = getelementptr inbounds %struct.sv, ptr %67, i64 0, i32 1
  %69 = load i32, ptr %68, align 8, !tbaa !41
  %70 = add i32 %69, 1
  store i32 %70, ptr %68, align 8, !tbaa !41
  %71 = getelementptr inbounds ptr, ptr %66, i64 %65
  store ptr %67, ptr %71, align 8, !tbaa !6
  br label %107

72:                                               ; preds = %38
  %73 = load ptr, ptr @PL_defgv, align 8, !tbaa !6
  tail call void @Perl_save_gp(ptr noundef %73, i32 noundef 0) #17
  %74 = load ptr, ptr @PL_defgv, align 8, !tbaa !6
  %75 = load ptr, ptr %74, align 8, !tbaa !114
  %76 = getelementptr inbounds %struct.xpvgv, ptr %75, i64 0, i32 2
  %77 = load i64, ptr %76, align 8, !tbaa !116
  %78 = and i64 %77, -2
  store i64 %78, ptr %76, align 8, !tbaa !116
  %79 = getelementptr inbounds %struct.gv, ptr %74, i64 0, i32 3
  %80 = load ptr, ptr %79, align 8, !tbaa !17
  tail call void @Perl_save_generic_svref(ptr noundef %80) #17
  %81 = load ptr, ptr @PL_defgv, align 8, !tbaa !6
  %82 = getelementptr inbounds %struct.gv, ptr %81, i64 0, i32 3
  %83 = load ptr, ptr %82, align 8, !tbaa !17
  store ptr null, ptr %83, align 8, !tbaa !48
  %84 = load ptr, ptr @PL_defgv, align 8, !tbaa !6
  %85 = getelementptr inbounds %struct.gv, ptr %84, i64 0, i32 3
  %86 = load ptr, ptr %85, align 8, !tbaa !17
  %87 = load ptr, ptr %86, align 8, !tbaa !48
  %88 = icmp eq ptr %87, null
  br i1 %88, label %96, label %89

89:                                               ; preds = %72
  %90 = getelementptr inbounds %struct.sv, ptr %87, i64 0, i32 1
  %91 = load i32, ptr %90, align 8, !tbaa !41
  %92 = icmp ugt i32 %91, 1
  br i1 %92, label %93, label %95

93:                                               ; preds = %89
  %94 = add i32 %91, -1
  store i32 %94, ptr %90, align 8, !tbaa !41
  br label %96

95:                                               ; preds = %89
  tail call void @Perl_sv_free2(ptr noundef nonnull %87, i32 noundef %91) #17
  br label %96

96:                                               ; preds = %72, %93, %95
  %97 = load ptr, ptr %1, align 8, !tbaa !6
  %98 = icmp eq ptr %97, null
  br i1 %98, label %103, label %99

99:                                               ; preds = %96
  %100 = getelementptr inbounds %struct.sv, ptr %97, i64 0, i32 1
  %101 = load i32, ptr %100, align 8, !tbaa !41
  %102 = add i32 %101, 1
  store i32 %102, ptr %100, align 8, !tbaa !41
  br label %103

103:                                              ; preds = %96, %99
  %104 = load ptr, ptr @PL_defgv, align 8, !tbaa !6
  %105 = getelementptr inbounds %struct.gv, ptr %104, i64 0, i32 3
  %106 = load ptr, ptr %105, align 8, !tbaa !17
  store ptr %97, ptr %106, align 8, !tbaa !48
  br label %107

107:                                              ; preds = %103, %64
  %108 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %109 = getelementptr inbounds %struct.stackinfo, ptr %108, i64 0, i32 4
  %110 = load i32, ptr %109, align 8, !tbaa !16
  %111 = getelementptr inbounds %struct.stackinfo, ptr %108, i64 0, i32 5
  %112 = load i32, ptr %111, align 4, !tbaa !171
  %113 = icmp slt i32 %110, %112
  br i1 %113, label %114, label %116

114:                                              ; preds = %107
  %115 = add nsw i32 %110, 1
  store i32 %115, ptr %109, align 8, !tbaa !16
  br label %120

116:                                              ; preds = %107
  %117 = tail call i32 @Perl_cxinc() #17
  %118 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %119 = getelementptr inbounds %struct.stackinfo, ptr %118, i64 0, i32 4
  store i32 %117, ptr %119, align 8, !tbaa !16
  br label %120

120:                                              ; preds = %116, %114
  %121 = phi i32 [ %117, %116 ], [ %115, %114 ]
  %122 = phi ptr [ %118, %116 ], [ %108, %114 ]
  %123 = getelementptr inbounds ptr, ptr %1, i64 -1
  %124 = getelementptr inbounds %struct.stackinfo, ptr %122, i64 0, i32 1
  %125 = load ptr, ptr %124, align 8, !tbaa !14
  %126 = sext i32 %121 to i64
  %127 = getelementptr inbounds %struct.context, ptr %125, i64 %126
  store i8 3, ptr %127, align 8, !tbaa !17
  %128 = load ptr, ptr @PL_stack_base, align 8, !tbaa !6
  %129 = ptrtoint ptr %123 to i64
  %130 = ptrtoint ptr %128 to i64
  %131 = sub i64 %129, %130
  %132 = lshr exact i64 %131, 3
  %133 = trunc i64 %132 to i32
  %134 = getelementptr inbounds %struct.block, ptr %127, i64 0, i32 3
  store i32 %133, ptr %134, align 4, !tbaa !17
  %135 = load ptr, ptr @PL_curcop, align 8, !tbaa !6
  %136 = getelementptr inbounds %struct.block, ptr %127, i64 0, i32 4
  store ptr %135, ptr %136, align 8, !tbaa !17
  %137 = load ptr, ptr @PL_markstack_ptr, align 8, !tbaa !6
  %138 = load ptr, ptr @PL_markstack, align 8, !tbaa !6
  %139 = ptrtoint ptr %137 to i64
  %140 = ptrtoint ptr %138 to i64
  %141 = sub i64 %139, %140
  %142 = lshr exact i64 %141, 2
  %143 = trunc i64 %142 to i32
  %144 = getelementptr inbounds %struct.block, ptr %127, i64 0, i32 5
  store i32 %143, ptr %144, align 8, !tbaa !17
  %145 = load i32, ptr @PL_scopestack_ix, align 4, !tbaa !31
  %146 = getelementptr inbounds %struct.block, ptr %127, i64 0, i32 6
  store i32 %145, ptr %146, align 4, !tbaa !17
  %147 = load ptr, ptr @PL_curpm, align 8, !tbaa !6
  %148 = getelementptr inbounds %struct.block, ptr %127, i64 0, i32 7
  store ptr %147, ptr %148, align 8, !tbaa !17
  %149 = getelementptr inbounds %struct.block, ptr %127, i64 0, i32 1
  store i8 %39, ptr %149, align 1, !tbaa !17
  %150 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %151 = getelementptr inbounds %struct.logop, ptr %150, i64 0, i32 8
  %152 = load ptr, ptr %151, align 8, !tbaa !28
  %153 = getelementptr inbounds %struct.block, ptr %127, i64 0, i32 8
  store ptr %152, ptr %153, align 8, !tbaa !17
  store ptr %123, ptr @PL_stack_sp, align 8, !tbaa !6
  %154 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %155 = load ptr, ptr %154, align 8, !tbaa !20
  ret ptr %155
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_leavegiven() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !6
  %2 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %3 = getelementptr inbounds %struct.stackinfo, ptr %2, i64 0, i32 1
  %4 = load ptr, ptr %3, align 8, !tbaa !14
  %5 = getelementptr inbounds %struct.stackinfo, ptr %2, i64 0, i32 4
  %6 = load i32, ptr %5, align 8, !tbaa !16
  %7 = add nsw i32 %6, -1
  store i32 %7, ptr %5, align 8, !tbaa !16
  %8 = sext i32 %6 to i64
  %9 = getelementptr inbounds %struct.context, ptr %4, i64 %8
  %10 = load ptr, ptr @PL_stack_base, align 8, !tbaa !6
  %11 = getelementptr inbounds %struct.block, ptr %9, i64 0, i32 3
  %12 = load i32, ptr %11, align 4, !tbaa !17
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds ptr, ptr %10, i64 %13
  %15 = getelementptr inbounds %struct.block, ptr %9, i64 0, i32 4
  %16 = load ptr, ptr %15, align 8, !tbaa !17
  store ptr %16, ptr @PL_curcop, align 8, !tbaa !6
  %17 = load ptr, ptr @PL_markstack, align 8, !tbaa !6
  %18 = getelementptr inbounds %struct.block, ptr %9, i64 0, i32 5
  %19 = load i32, ptr %18, align 8, !tbaa !17
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds i32, ptr %17, i64 %20
  store ptr %21, ptr @PL_markstack_ptr, align 8, !tbaa !6
  %22 = getelementptr inbounds %struct.block, ptr %9, i64 0, i32 6
  %23 = load i32, ptr %22, align 4, !tbaa !17
  store i32 %23, ptr @PL_scopestack_ix, align 4, !tbaa !31
  %24 = getelementptr inbounds %struct.block, ptr %9, i64 0, i32 7
  %25 = load ptr, ptr %24, align 8, !tbaa !17
  %26 = getelementptr inbounds %struct.block, ptr %9, i64 0, i32 1
  %27 = load i8, ptr %26, align 1, !tbaa !17
  %28 = zext i8 %27 to i32
  %29 = tail call fastcc ptr @S_leave_common(ptr noundef %14, ptr noundef %1, ptr noundef %14, i32 noundef %28, i32 noundef 655360, i1 noundef zeroext false)
  store ptr %25, ptr @PL_curpm, align 8, !tbaa !6
  tail call void @Perl_pop_scope() #17
  store ptr %29, ptr @PL_stack_sp, align 8, !tbaa !6
  %30 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %31 = load ptr, ptr %30, align 8, !tbaa !20
  ret ptr %31
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_smartmatch() local_unnamed_addr #0 {
  %1 = tail call fastcc ptr @S_do_smartmatch(ptr noundef null, ptr noundef null, i1 noundef zeroext false)
  ret ptr %1
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @S_do_smartmatch(ptr noundef %0, ptr noundef %1, i1 noundef zeroext %2) unnamed_addr #0 {
  %4 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !6
  %5 = load ptr, ptr %4, align 8, !tbaa !6
  %6 = getelementptr inbounds ptr, ptr %4, i64 -1
  %7 = load ptr, ptr %6, align 8, !tbaa !6
  %8 = icmp eq ptr %7, null
  %9 = or i1 %8, %2
  %10 = select i1 %8, ptr @PL_sv_undef, ptr %7
  br i1 %9, label %18, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.sv, ptr %7, i64 0, i32 2
  %13 = load i32, ptr %12, align 4, !tbaa !49
  %14 = and i32 %13, 2097152
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %18, label %16

16:                                               ; preds = %11
  %17 = tail call ptr @Perl_sv_mortalcopy_flags(ptr noundef nonnull %7, i32 noundef 1538) #17
  br label %18

18:                                               ; preds = %3, %11, %16
  %19 = phi ptr [ %17, %16 ], [ %7, %11 ], [ %10, %3 ]
  %20 = getelementptr inbounds %struct.sv, ptr %5, i64 0, i32 2
  %21 = load i32, ptr %20, align 4, !tbaa !49
  %22 = and i32 %21, 2097152
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %28, label %24

24:                                               ; preds = %18
  %25 = tail call ptr @Perl_sv_mortalcopy_flags(ptr noundef nonnull %5, i32 noundef 1538) #17
  %26 = getelementptr inbounds %struct.sv, ptr %25, i64 0, i32 2
  %27 = load i32, ptr %26, align 4, !tbaa !49
  br label %28

28:                                               ; preds = %24, %18
  %29 = phi i32 [ %27, %24 ], [ %21, %18 ]
  %30 = phi ptr [ %25, %24 ], [ %5, %18 ]
  %31 = getelementptr inbounds %struct.sv, ptr %30, i64 0, i32 2
  %32 = and i32 %29, 2048
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %58, label %34

34:                                               ; preds = %28
  %35 = getelementptr inbounds %struct.sv, ptr %30, i64 0, i32 3
  %36 = load ptr, ptr %35, align 8, !tbaa !17
  %37 = getelementptr inbounds %struct.sv, ptr %36, i64 0, i32 2
  %38 = load i32, ptr %37, align 4, !tbaa !49
  %39 = and i32 %38, 1048576
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %58, label %41

41:                                               ; preds = %34
  %42 = load ptr, ptr %36, align 8, !tbaa !72
  %43 = load ptr, ptr %42, align 8, !tbaa !231
  %44 = getelementptr inbounds %struct.hv, ptr %43, i64 0, i32 2
  %45 = load i32, ptr %44, align 4, !tbaa !159
  %46 = and i32 %45, 268435456
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %58, label %48

48:                                               ; preds = %41
  %49 = tail call ptr @Perl_amagic_call(ptr noundef %19, ptr noundef nonnull %30, i32 noundef 72, i32 noundef 2) #17
  %50 = icmp eq ptr %49, null
  br i1 %50, label %51, label %53

51:                                               ; preds = %48
  %52 = load i32, ptr %31, align 4, !tbaa !49
  br label %58

53:                                               ; preds = %48
  %54 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !6
  %55 = getelementptr inbounds ptr, ptr %54, i64 -1
  store ptr %49, ptr %55, align 8, !tbaa !6
  store ptr %55, ptr @PL_stack_sp, align 8, !tbaa !6
  %56 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %57 = load ptr, ptr %56, align 8, !tbaa !20
  br label %1212

58:                                               ; preds = %51, %41, %34, %28
  %59 = phi i32 [ %52, %51 ], [ %29, %41 ], [ %29, %34 ], [ %29, %28 ]
  %60 = getelementptr inbounds ptr, ptr %4, i64 -2
  store ptr %60, ptr @PL_stack_sp, align 8, !tbaa !6
  %61 = and i32 %59, 65280
  %62 = icmp ne i32 %61, 0
  %63 = and i32 %59, 255
  %64 = icmp eq i32 %63, 8
  %65 = or i1 %62, %64
  %66 = and i32 %59, 16826623
  %67 = icmp eq i32 %66, 16777226
  %68 = or i1 %67, %65
  br i1 %68, label %86, label %69

69:                                               ; preds = %58
  %70 = getelementptr inbounds %struct.sv, ptr %19, i64 0, i32 2
  %71 = load i32, ptr %70, align 4, !tbaa !49
  %72 = and i32 %71, 65280
  %73 = icmp ne i32 %72, 0
  %74 = and i32 %71, 255
  %75 = icmp eq i32 %74, 8
  %76 = or i1 %73, %75
  %77 = and i32 %71, 16826623
  %78 = icmp eq i32 %77, 16777226
  %79 = or i1 %78, %76
  br i1 %79, label %80, label %83

80:                                               ; preds = %69
  store ptr @PL_sv_no, ptr %6, align 8, !tbaa !6
  store ptr %6, ptr @PL_stack_sp, align 8, !tbaa !6
  %81 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %82 = load ptr, ptr %81, align 8, !tbaa !20
  br label %1212

83:                                               ; preds = %69
  store ptr @PL_sv_yes, ptr %6, align 8, !tbaa !6
  store ptr %6, ptr @PL_stack_sp, align 8, !tbaa !6
  %84 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %85 = load ptr, ptr %84, align 8, !tbaa !20
  br label %1212

86:                                               ; preds = %58
  %87 = tail call i32 @Perl_sv_isobject(ptr noundef nonnull %30) #17
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %97, label %89

89:                                               ; preds = %86
  %90 = getelementptr inbounds %struct.sv, ptr %30, i64 0, i32 3
  %91 = load ptr, ptr %90, align 8, !tbaa !17
  %92 = getelementptr inbounds %struct.sv, ptr %91, i64 0, i32 2
  %93 = load i32, ptr %92, align 4, !tbaa !49
  %94 = and i32 %93, 255
  %95 = icmp eq i32 %94, 8
  br i1 %95, label %97, label %96

96:                                               ; preds = %89
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.104) #17
  br label %97

97:                                               ; preds = %96, %89, %86
  %98 = tail call i32 @Perl_sv_isobject(ptr noundef %19) #17
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %107, label %100

100:                                              ; preds = %97
  %101 = getelementptr inbounds %struct.sv, ptr %19, i64 0, i32 3
  %102 = load ptr, ptr %101, align 8, !tbaa !17
  %103 = getelementptr inbounds %struct.sv, ptr %102, i64 0, i32 2
  %104 = load i32, ptr %103, align 4, !tbaa !49
  %105 = and i32 %104, 255
  %106 = icmp ne i32 %105, 8
  br label %107

107:                                              ; preds = %100, %97
  %108 = phi i1 [ false, %97 ], [ %106, %100 ]
  %109 = load i32, ptr %31, align 4, !tbaa !49
  %110 = and i32 %109, 2048
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %1079, label %112

112:                                              ; preds = %107
  %113 = getelementptr inbounds %struct.sv, ptr %30, i64 0, i32 3
  %114 = load ptr, ptr %113, align 8, !tbaa !17
  %115 = getelementptr inbounds %struct.sv, ptr %114, i64 0, i32 2
  %116 = load i32, ptr %115, align 4, !tbaa !49
  %117 = trunc i32 %116 to i8
  switch i8 %117, label %1079 [
    i8 13, label %118
    i8 12, label %418
    i8 11, label %610
    i8 8, label %1045
  ]

118:                                              ; preds = %112
  br i1 %108, label %376, label %119

119:                                              ; preds = %118
  %120 = getelementptr inbounds %struct.sv, ptr %19, i64 0, i32 2
  %121 = load i32, ptr %120, align 4, !tbaa !49
  %122 = and i32 %121, 2048
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %376, label %124

124:                                              ; preds = %119
  %125 = getelementptr inbounds %struct.sv, ptr %19, i64 0, i32 3
  %126 = load ptr, ptr %125, align 8, !tbaa !17
  %127 = getelementptr inbounds %struct.sv, ptr %126, i64 0, i32 2
  %128 = load i32, ptr %127, align 4, !tbaa !49
  %129 = trunc i32 %128 to i8
  switch i8 %129, label %376 [
    i8 12, label %130
    i8 11, label %244
  ]

130:                                              ; preds = %124
  %131 = tail call i32 @Perl_hv_iterinit(ptr noundef nonnull %126) #17
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %136, label %133

133:                                              ; preds = %130
  %134 = tail call ptr @Perl_hv_iternext_flags(ptr noundef nonnull %126, i32 noundef 0) #17
  %135 = icmp eq ptr %134, null
  br i1 %135, label %239, label %137

136:                                              ; preds = %130
  store ptr @PL_sv_yes, ptr %6, align 8, !tbaa !6
  br label %414

137:                                              ; preds = %133, %234
  %138 = phi ptr [ %235, %234 ], [ %134, %133 ]
  %139 = phi ptr [ %229, %234 ], [ %60, %133 ]
  %140 = phi i8 [ %228, %234 ], [ 1, %133 ]
  tail call void @Perl_push_scope() #17
  tail call void @Perl_save_strlen(ptr noundef nonnull @PL_tmps_floor) #17
  %141 = load i64, ptr @PL_tmps_ix, align 8, !tbaa !59
  store i64 %141, ptr @PL_tmps_floor, align 8, !tbaa !59
  %142 = load ptr, ptr @PL_markstack_ptr, align 8, !tbaa !6
  %143 = getelementptr inbounds i32, ptr %142, i64 1
  store ptr %143, ptr @PL_markstack_ptr, align 8, !tbaa !6
  %144 = load ptr, ptr @PL_markstack_max, align 8, !tbaa !6
  %145 = icmp eq ptr %143, %144
  br i1 %145, label %146, label %148

146:                                              ; preds = %137
  %147 = tail call ptr @Perl_markstack_grow() #17
  br label %148

148:                                              ; preds = %137, %146
  %149 = phi ptr [ %147, %146 ], [ %143, %137 ]
  %150 = load ptr, ptr @PL_stack_base, align 8, !tbaa !6
  %151 = ptrtoint ptr %139 to i64
  %152 = ptrtoint ptr %150 to i64
  %153 = sub i64 %151, %152
  %154 = lshr exact i64 %153, 3
  %155 = trunc i64 %154 to i32
  store i32 %155, ptr %149, align 4, !tbaa !31
  %156 = tail call ptr @Perl_hv_iterkeysv(ptr noundef nonnull %138) #17
  %157 = getelementptr inbounds ptr, ptr %139, i64 1
  store ptr %156, ptr %157, align 8, !tbaa !6
  store ptr %157, ptr @PL_stack_sp, align 8, !tbaa !6
  %158 = tail call i32 @Perl_call_sv(ptr noundef %30, i32 noundef 2) #17
  %159 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !6
  %160 = icmp eq i32 %158, 0
  br i1 %160, label %227, label %161

161:                                              ; preds = %148
  %162 = getelementptr inbounds ptr, ptr %159, i64 -1
  %163 = load ptr, ptr %159, align 8, !tbaa !6
  store ptr %163, ptr @PL_Sv, align 8, !tbaa !6
  %164 = icmp eq ptr %163, null
  br i1 %164, label %224, label %165

165:                                              ; preds = %161
  %166 = getelementptr inbounds %struct.sv, ptr %163, i64 0, i32 2
  %167 = load i32, ptr %166, align 4, !tbaa !49
  %168 = and i32 %167, 2097152
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %173, label %170

170:                                              ; preds = %165
  %171 = tail call zeroext i1 @Perl_sv_2bool_flags(ptr noundef nonnull %163, i32 noundef 2) #17
  %172 = freeze i1 %171
  br i1 %172, label %223, label %224

173:                                              ; preds = %165
  %174 = and i32 %167, 65280
  %175 = icmp ne i32 %174, 0
  %176 = and i32 %167, 255
  %177 = icmp eq i32 %176, 8
  %178 = or i1 %175, %177
  %179 = and i32 %167, 16826623
  %180 = icmp eq i32 %179, 16777226
  %181 = or i1 %180, %178
  br i1 %181, label %182, label %224

182:                                              ; preds = %173
  %183 = and i32 %167, 1024
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %200, label %185

185:                                              ; preds = %182
  %186 = load ptr, ptr %163, align 8, !tbaa !72
  %187 = icmp eq ptr %186, null
  br i1 %187, label %224, label %188

188:                                              ; preds = %185
  %189 = getelementptr inbounds %struct.xpv, ptr %186, i64 0, i32 2
  %190 = load i64, ptr %189, align 8, !tbaa !53
  %191 = icmp ugt i64 %190, 1
  br i1 %191, label %223, label %192

192:                                              ; preds = %188
  %193 = icmp eq i64 %190, 0
  br i1 %193, label %224, label %194

194:                                              ; preds = %192
  %195 = getelementptr inbounds %struct.sv, ptr %163, i64 0, i32 3
  %196 = load ptr, ptr %195, align 8, !tbaa !17
  %197 = load i8, ptr %196, align 1, !tbaa !17
  %198 = freeze i8 %197
  %199 = icmp eq i8 %198, 48
  br i1 %199, label %224, label %223

200:                                              ; preds = %182
  %201 = and i32 %167, 768
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %220, label %203

203:                                              ; preds = %200
  %204 = and i32 %167, 256
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %211, label %206

206:                                              ; preds = %203
  %207 = load ptr, ptr %163, align 8, !tbaa !72
  %208 = getelementptr inbounds %struct.xpviv, ptr %207, i64 0, i32 4
  %209 = load i64, ptr %208, align 8, !tbaa !17
  %210 = icmp eq i64 %209, 0
  br i1 %210, label %211, label %223

211:                                              ; preds = %206, %203
  %212 = and i32 %167, 512
  %213 = icmp eq i32 %212, 0
  br i1 %213, label %224, label %214

214:                                              ; preds = %211
  %215 = load ptr, ptr %163, align 8, !tbaa !72
  %216 = getelementptr inbounds %struct.xpvnv, ptr %215, i64 0, i32 5
  %217 = load double, ptr %216, align 8, !tbaa !17
  %218 = freeze double %217
  %219 = fcmp une double %218, 0.000000e+00
  br i1 %219, label %223, label %224

220:                                              ; preds = %200
  %221 = tail call zeroext i1 @Perl_sv_2bool_flags(ptr noundef nonnull %163, i32 noundef 0) #17
  %222 = freeze i1 %221
  br i1 %222, label %223, label %224

223:                                              ; preds = %214, %206, %188, %194, %220, %170
  br label %224

224:                                              ; preds = %214, %211, %192, %185, %173, %223, %170, %220, %194, %161
  %225 = phi i8 [ 0, %161 ], [ %140, %223 ], [ 0, %170 ], [ 0, %220 ], [ 0, %194 ], [ 0, %173 ], [ 0, %185 ], [ 0, %192 ], [ 0, %211 ], [ 0, %214 ]
  %226 = and i8 %225, 1
  br label %227

227:                                              ; preds = %148, %224
  %228 = phi i8 [ %226, %224 ], [ 0, %148 ]
  %229 = phi ptr [ %162, %224 ], [ %159, %148 ]
  %230 = load i64, ptr @PL_tmps_ix, align 8, !tbaa !59
  %231 = load i64, ptr @PL_tmps_floor, align 8, !tbaa !59
  %232 = icmp sgt i64 %230, %231
  br i1 %232, label %233, label %234

233:                                              ; preds = %227
  tail call void @Perl_free_tmps() #17
  br label %234

234:                                              ; preds = %233, %227
  tail call void @Perl_pop_scope() #17
  %235 = tail call ptr @Perl_hv_iternext_flags(ptr noundef %126, i32 noundef 0) #17
  %236 = icmp eq ptr %235, null
  br i1 %236, label %237, label %137, !llvm.loop !233

237:                                              ; preds = %234
  %238 = icmp eq i8 %228, 0
  br i1 %238, label %242, label %239

239:                                              ; preds = %133, %237
  %240 = phi ptr [ %229, %237 ], [ %60, %133 ]
  %241 = getelementptr inbounds ptr, ptr %240, i64 1
  store ptr @PL_sv_yes, ptr %241, align 8, !tbaa !6
  br label %414

242:                                              ; preds = %237
  %243 = getelementptr inbounds ptr, ptr %229, i64 1
  store ptr @PL_sv_no, ptr %243, align 8, !tbaa !6
  br label %414

244:                                              ; preds = %124
  %245 = and i32 %128, 8388608
  %246 = icmp eq i32 %245, 0
  br i1 %246, label %250, label %247

247:                                              ; preds = %244
  %248 = tail call i32 @Perl_mg_size(ptr noundef nonnull %126) #17
  %249 = zext i32 %248 to i64
  br label %254

250:                                              ; preds = %244
  %251 = load ptr, ptr %126, align 8, !tbaa !141
  %252 = getelementptr inbounds %struct.xpvav, ptr %251, i64 0, i32 2
  %253 = load i64, ptr %252, align 8, !tbaa !142
  br label %254

254:                                              ; preds = %247, %250
  %255 = phi i64 [ %249, %247 ], [ %253, %250 ]
  %256 = and i64 %255, 4294967295
  %257 = icmp eq i64 %256, 4294967295
  br i1 %257, label %263, label %258

258:                                              ; preds = %254
  %259 = and i64 %255, 2147483648
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %371

261:                                              ; preds = %258
  %262 = and i64 %255, 4294967295
  br label %264

263:                                              ; preds = %254
  store ptr @PL_sv_yes, ptr %6, align 8, !tbaa !6
  br label %414

264:                                              ; preds = %261, %366
  %265 = phi ptr [ %361, %366 ], [ %60, %261 ]
  %266 = phi i64 [ %367, %366 ], [ 0, %261 ]
  %267 = phi i8 [ %360, %366 ], [ 1, %261 ]
  %268 = tail call ptr @Perl_av_fetch(ptr noundef %126, i64 noundef %266, i32 noundef 0) #17
  tail call void @Perl_push_scope() #17
  tail call void @Perl_save_strlen(ptr noundef nonnull @PL_tmps_floor) #17
  %269 = load i64, ptr @PL_tmps_ix, align 8, !tbaa !59
  store i64 %269, ptr @PL_tmps_floor, align 8, !tbaa !59
  %270 = load ptr, ptr @PL_markstack_ptr, align 8, !tbaa !6
  %271 = getelementptr inbounds i32, ptr %270, i64 1
  store ptr %271, ptr @PL_markstack_ptr, align 8, !tbaa !6
  %272 = load ptr, ptr @PL_markstack_max, align 8, !tbaa !6
  %273 = icmp eq ptr %271, %272
  br i1 %273, label %274, label %276

274:                                              ; preds = %264
  %275 = tail call ptr @Perl_markstack_grow() #17
  br label %276

276:                                              ; preds = %264, %274
  %277 = phi ptr [ %275, %274 ], [ %271, %264 ]
  %278 = load ptr, ptr @PL_stack_base, align 8, !tbaa !6
  %279 = ptrtoint ptr %265 to i64
  %280 = ptrtoint ptr %278 to i64
  %281 = sub i64 %279, %280
  %282 = lshr exact i64 %281, 3
  %283 = trunc i64 %282 to i32
  store i32 %283, ptr %277, align 4, !tbaa !31
  %284 = icmp eq ptr %268, null
  br i1 %284, label %288, label %285

285:                                              ; preds = %276
  %286 = load ptr, ptr %268, align 8, !tbaa !6
  %287 = getelementptr inbounds ptr, ptr %265, i64 1
  store ptr %286, ptr %287, align 8, !tbaa !6
  br label %288

288:                                              ; preds = %285, %276
  %289 = phi ptr [ %287, %285 ], [ %265, %276 ]
  store ptr %289, ptr @PL_stack_sp, align 8, !tbaa !6
  %290 = tail call i32 @Perl_call_sv(ptr noundef %30, i32 noundef 2) #17
  %291 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !6
  %292 = icmp eq i32 %290, 0
  br i1 %292, label %359, label %293

293:                                              ; preds = %288
  %294 = getelementptr inbounds ptr, ptr %291, i64 -1
  %295 = load ptr, ptr %291, align 8, !tbaa !6
  store ptr %295, ptr @PL_Sv, align 8, !tbaa !6
  %296 = icmp eq ptr %295, null
  br i1 %296, label %356, label %297

297:                                              ; preds = %293
  %298 = getelementptr inbounds %struct.sv, ptr %295, i64 0, i32 2
  %299 = load i32, ptr %298, align 4, !tbaa !49
  %300 = and i32 %299, 2097152
  %301 = icmp eq i32 %300, 0
  br i1 %301, label %305, label %302

302:                                              ; preds = %297
  %303 = tail call zeroext i1 @Perl_sv_2bool_flags(ptr noundef nonnull %295, i32 noundef 2) #17
  %304 = freeze i1 %303
  br i1 %304, label %355, label %356

305:                                              ; preds = %297
  %306 = and i32 %299, 65280
  %307 = icmp ne i32 %306, 0
  %308 = and i32 %299, 255
  %309 = icmp eq i32 %308, 8
  %310 = or i1 %307, %309
  %311 = and i32 %299, 16826623
  %312 = icmp eq i32 %311, 16777226
  %313 = or i1 %312, %310
  br i1 %313, label %314, label %356

314:                                              ; preds = %305
  %315 = and i32 %299, 1024
  %316 = icmp eq i32 %315, 0
  br i1 %316, label %332, label %317

317:                                              ; preds = %314
  %318 = load ptr, ptr %295, align 8, !tbaa !72
  %319 = icmp eq ptr %318, null
  br i1 %319, label %356, label %320

320:                                              ; preds = %317
  %321 = getelementptr inbounds %struct.xpv, ptr %318, i64 0, i32 2
  %322 = load i64, ptr %321, align 8, !tbaa !53
  %323 = icmp ugt i64 %322, 1
  br i1 %323, label %355, label %324

324:                                              ; preds = %320
  %325 = icmp eq i64 %322, 0
  br i1 %325, label %356, label %326

326:                                              ; preds = %324
  %327 = getelementptr inbounds %struct.sv, ptr %295, i64 0, i32 3
  %328 = load ptr, ptr %327, align 8, !tbaa !17
  %329 = load i8, ptr %328, align 1, !tbaa !17
  %330 = freeze i8 %329
  %331 = icmp eq i8 %330, 48
  br i1 %331, label %356, label %355

332:                                              ; preds = %314
  %333 = and i32 %299, 768
  %334 = icmp eq i32 %333, 0
  br i1 %334, label %352, label %335

335:                                              ; preds = %332
  %336 = and i32 %299, 256
  %337 = icmp eq i32 %336, 0
  br i1 %337, label %343, label %338

338:                                              ; preds = %335
  %339 = load ptr, ptr %295, align 8, !tbaa !72
  %340 = getelementptr inbounds %struct.xpviv, ptr %339, i64 0, i32 4
  %341 = load i64, ptr %340, align 8, !tbaa !17
  %342 = icmp eq i64 %341, 0
  br i1 %342, label %343, label %355

343:                                              ; preds = %338, %335
  %344 = and i32 %299, 512
  %345 = icmp eq i32 %344, 0
  br i1 %345, label %356, label %346

346:                                              ; preds = %343
  %347 = load ptr, ptr %295, align 8, !tbaa !72
  %348 = getelementptr inbounds %struct.xpvnv, ptr %347, i64 0, i32 5
  %349 = load double, ptr %348, align 8, !tbaa !17
  %350 = freeze double %349
  %351 = fcmp une double %350, 0.000000e+00
  br i1 %351, label %355, label %356

352:                                              ; preds = %332
  %353 = tail call zeroext i1 @Perl_sv_2bool_flags(ptr noundef nonnull %295, i32 noundef 0) #17
  %354 = freeze i1 %353
  br i1 %354, label %355, label %356

355:                                              ; preds = %346, %338, %320, %326, %352, %302
  br label %356

356:                                              ; preds = %346, %343, %324, %317, %305, %355, %302, %352, %326, %293
  %357 = phi i8 [ 0, %293 ], [ %267, %355 ], [ 0, %302 ], [ 0, %352 ], [ 0, %326 ], [ 0, %305 ], [ 0, %317 ], [ 0, %324 ], [ 0, %343 ], [ 0, %346 ]
  %358 = and i8 %357, 1
  br label %359

359:                                              ; preds = %288, %356
  %360 = phi i8 [ %358, %356 ], [ 0, %288 ]
  %361 = phi ptr [ %294, %356 ], [ %291, %288 ]
  %362 = load i64, ptr @PL_tmps_ix, align 8, !tbaa !59
  %363 = load i64, ptr @PL_tmps_floor, align 8, !tbaa !59
  %364 = icmp sgt i64 %362, %363
  br i1 %364, label %365, label %366

365:                                              ; preds = %359
  tail call void @Perl_free_tmps() #17
  br label %366

366:                                              ; preds = %365, %359
  tail call void @Perl_pop_scope() #17
  %367 = add nuw nsw i64 %266, 1
  %368 = icmp eq i64 %266, %262
  br i1 %368, label %369, label %264, !llvm.loop !234

369:                                              ; preds = %366
  %370 = icmp eq i8 %360, 0
  br i1 %370, label %374, label %371

371:                                              ; preds = %258, %369
  %372 = phi ptr [ %361, %369 ], [ %60, %258 ]
  %373 = getelementptr inbounds ptr, ptr %372, i64 1
  store ptr @PL_sv_yes, ptr %373, align 8, !tbaa !6
  br label %414

374:                                              ; preds = %369
  %375 = getelementptr inbounds ptr, ptr %361, i64 1
  store ptr @PL_sv_no, ptr %375, align 8, !tbaa !6
  br label %414

376:                                              ; preds = %124, %119, %118
  tail call void @Perl_push_scope() #17
  tail call void @Perl_save_strlen(ptr noundef nonnull @PL_tmps_floor) #17
  %377 = load i64, ptr @PL_tmps_ix, align 8, !tbaa !59
  store i64 %377, ptr @PL_tmps_floor, align 8, !tbaa !59
  %378 = load ptr, ptr @PL_markstack_ptr, align 8, !tbaa !6
  %379 = getelementptr inbounds i32, ptr %378, i64 1
  store ptr %379, ptr @PL_markstack_ptr, align 8, !tbaa !6
  %380 = load ptr, ptr @PL_markstack_max, align 8, !tbaa !6
  %381 = icmp eq ptr %379, %380
  br i1 %381, label %382, label %384

382:                                              ; preds = %376
  %383 = tail call ptr @Perl_markstack_grow() #17
  br label %384

384:                                              ; preds = %376, %382
  %385 = phi ptr [ %383, %382 ], [ %379, %376 ]
  %386 = load ptr, ptr @PL_stack_base, align 8, !tbaa !6
  %387 = ptrtoint ptr %60 to i64
  %388 = ptrtoint ptr %386 to i64
  %389 = sub i64 %387, %388
  %390 = lshr exact i64 %389, 3
  %391 = trunc i64 %390 to i32
  store i32 %391, ptr %385, align 4, !tbaa !31
  store ptr %19, ptr %6, align 8, !tbaa !6
  store ptr %6, ptr @PL_stack_sp, align 8, !tbaa !6
  %392 = tail call i32 @Perl_call_sv(ptr noundef nonnull %30, i32 noundef 2) #17
  %393 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !6
  %394 = icmp eq i32 %392, 0
  br i1 %394, label %395, label %397

395:                                              ; preds = %384
  %396 = getelementptr inbounds ptr, ptr %393, i64 1
  store ptr @PL_sv_no, ptr %396, align 8, !tbaa !6
  br label %407

397:                                              ; preds = %384
  %398 = load ptr, ptr %393, align 8, !tbaa !6
  %399 = getelementptr inbounds %struct.sv, ptr %398, i64 0, i32 2
  %400 = load i32, ptr %399, align 4, !tbaa !49
  %401 = and i32 %400, 524288
  %402 = icmp eq i32 %401, 0
  br i1 %402, label %407, label %403

403:                                              ; preds = %397
  %404 = getelementptr inbounds %struct.sv, ptr %398, i64 0, i32 1
  %405 = load i32, ptr %404, align 8, !tbaa !41
  %406 = add i32 %405, 1
  store i32 %406, ptr %404, align 8, !tbaa !41
  br label %407

407:                                              ; preds = %397, %403, %395
  %408 = phi ptr [ %396, %395 ], [ %393, %403 ], [ %393, %397 ]
  %409 = load i64, ptr @PL_tmps_ix, align 8, !tbaa !59
  %410 = load i64, ptr @PL_tmps_floor, align 8, !tbaa !59
  %411 = icmp sgt i64 %409, %410
  br i1 %411, label %412, label %413

412:                                              ; preds = %407
  tail call void @Perl_free_tmps() #17
  br label %413

413:                                              ; preds = %412, %407
  tail call void @Perl_pop_scope() #17
  br label %414

414:                                              ; preds = %263, %371, %374, %136, %239, %242, %413
  %415 = phi ptr [ %6, %263 ], [ %373, %371 ], [ %375, %374 ], [ %6, %136 ], [ %241, %239 ], [ %243, %242 ], [ %408, %413 ]
  store ptr %415, ptr @PL_stack_sp, align 8, !tbaa !6
  %416 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %417 = load ptr, ptr %416, align 8, !tbaa !20
  br label %1212

418:                                              ; preds = %112
  br i1 %108, label %601, label %419

419:                                              ; preds = %418
  %420 = getelementptr inbounds %struct.sv, ptr %19, i64 0, i32 2
  %421 = load i32, ptr %420, align 4, !tbaa !49
  %422 = and i32 %421, 65280
  %423 = icmp ne i32 %422, 0
  %424 = and i32 %421, 255
  %425 = icmp eq i32 %424, 8
  %426 = or i1 %423, %425
  %427 = and i32 %421, 16826623
  %428 = icmp eq i32 %427, 16777226
  %429 = or i1 %428, %426
  br i1 %429, label %433, label %430

430:                                              ; preds = %419
  store ptr @PL_sv_no, ptr %6, align 8, !tbaa !6
  store ptr %6, ptr @PL_stack_sp, align 8, !tbaa !6
  %431 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %432 = load ptr, ptr %431, align 8, !tbaa !20
  br label %1212

433:                                              ; preds = %419
  %434 = and i32 %421, 2048
  %435 = icmp eq i32 %434, 0
  br i1 %435, label %601, label %436

436:                                              ; preds = %433
  %437 = getelementptr inbounds %struct.sv, ptr %19, i64 0, i32 3
  %438 = load ptr, ptr %437, align 8, !tbaa !17
  %439 = getelementptr inbounds %struct.sv, ptr %438, i64 0, i32 2
  %440 = load i32, ptr %439, align 4, !tbaa !49
  %441 = trunc i32 %440 to i8
  switch i8 %441, label %601 [
    i8 12, label %442
    i8 11, label %541
    i8 8, label %573
  ]

442:                                              ; preds = %436
  %443 = and i32 %116, 8388608
  %444 = icmp eq i32 %443, 0
  br i1 %444, label %449, label %445

445:                                              ; preds = %442
  %446 = tail call ptr @Perl_mg_find(ptr noundef nonnull %114, i32 noundef 80) #17
  %447 = icmp ne ptr %446, null
  %448 = load i32, ptr %439, align 4, !tbaa !49
  br label %449

449:                                              ; preds = %442, %445
  %450 = phi i32 [ %448, %445 ], [ %440, %442 ]
  %451 = phi i1 [ %447, %445 ], [ false, %442 ]
  %452 = and i32 %450, 8388608
  %453 = icmp eq i32 %452, 0
  br i1 %453, label %457, label %454

454:                                              ; preds = %449
  %455 = tail call ptr @Perl_mg_find(ptr noundef nonnull %438, i32 noundef 80) #17
  %456 = icmp ne ptr %455, null
  br label %457

457:                                              ; preds = %449, %454
  %458 = phi i1 [ %456, %454 ], [ false, %449 ]
  %459 = select i1 %451, i1 true, i1 %458
  %460 = select i1 %451, ptr %114, ptr %438
  %461 = select i1 %451, i1 %458, i1 false
  %462 = select i1 %451, ptr %438, ptr %114
  br i1 %459, label %492, label %463

463:                                              ; preds = %457
  %464 = load ptr, ptr %114, align 8, !tbaa !161
  %465 = getelementptr inbounds %struct.xpvhv, ptr %464, i64 0, i32 2
  %466 = load i64, ptr %465, align 8, !tbaa !235
  %467 = getelementptr inbounds %struct.xpvmg, ptr %464, i64 0, i32 1
  %468 = load ptr, ptr %467, align 8, !tbaa !17
  %469 = icmp eq ptr %468, null
  br i1 %469, label %473, label %470

470:                                              ; preds = %463
  %471 = tail call i32 @Perl_hv_placeholders_get(ptr noundef nonnull %114) #17
  %472 = sext i32 %471 to i64
  br label %473

473:                                              ; preds = %463, %470
  %474 = phi i64 [ %472, %470 ], [ 0, %463 ]
  %475 = sub i64 %466, %474
  %476 = load ptr, ptr %438, align 8, !tbaa !161
  %477 = getelementptr inbounds %struct.xpvhv, ptr %476, i64 0, i32 2
  %478 = load i64, ptr %477, align 8, !tbaa !235
  %479 = getelementptr inbounds %struct.xpvmg, ptr %476, i64 0, i32 1
  %480 = load ptr, ptr %479, align 8, !tbaa !17
  %481 = icmp eq ptr %480, null
  br i1 %481, label %485, label %482

482:                                              ; preds = %473
  %483 = tail call i32 @Perl_hv_placeholders_get(ptr noundef nonnull %438) #17
  %484 = sext i32 %483 to i64
  br label %485

485:                                              ; preds = %473, %482
  %486 = phi i64 [ %484, %482 ], [ 0, %473 ]
  %487 = sub i64 %478, %486
  %488 = icmp eq i64 %475, %487
  br i1 %488, label %492, label %489

489:                                              ; preds = %485
  store ptr @PL_sv_no, ptr %6, align 8, !tbaa !6
  store ptr %6, ptr @PL_stack_sp, align 8, !tbaa !6
  %490 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %491 = load ptr, ptr %490, align 8, !tbaa !20
  br label %1212

492:                                              ; preds = %457, %485
  %493 = phi ptr [ %460, %457 ], [ %114, %485 ]
  %494 = phi i1 [ %461, %457 ], [ false, %485 ]
  %495 = phi ptr [ %462, %457 ], [ %438, %485 ]
  %496 = tail call i32 @Perl_hv_iterinit(ptr noundef nonnull %493) #17
  br label %497

497:                                              ; preds = %501, %492
  %498 = phi i32 [ 0, %492 ], [ %503, %501 ]
  %499 = tail call ptr @Perl_hv_iternext_flags(ptr noundef %493, i32 noundef 0) #17
  %500 = icmp eq ptr %499, null
  br i1 %500, label %510, label %501

501:                                              ; preds = %497
  %502 = tail call ptr @Perl_hv_iterkeysv(ptr noundef nonnull %499) #17
  %503 = add i32 %498, 1
  %504 = tail call ptr @Perl_hv_common(ptr noundef %495, ptr noundef %502, ptr noundef null, i64 noundef 0, i32 noundef 0, i32 noundef 8, ptr noundef null, i32 noundef 0) #17
  %505 = icmp eq ptr %504, null
  br i1 %505, label %506, label %497, !llvm.loop !236

506:                                              ; preds = %501
  %507 = tail call i32 @Perl_hv_iterinit(ptr noundef %493) #17
  store ptr @PL_sv_no, ptr %6, align 8, !tbaa !6
  store ptr %6, ptr @PL_stack_sp, align 8, !tbaa !6
  %508 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %509 = load ptr, ptr %508, align 8, !tbaa !20
  br label %1212

510:                                              ; preds = %497
  br i1 %494, label %511, label %518

511:                                              ; preds = %510
  %512 = tail call i32 @Perl_hv_iterinit(ptr noundef %495) #17
  br label %513

513:                                              ; preds = %513, %511
  %514 = phi i32 [ 0, %511 ], [ %517, %513 ]
  %515 = tail call ptr @Perl_hv_iternext_flags(ptr noundef %495, i32 noundef 0) #17
  %516 = icmp eq ptr %515, null
  %517 = add i32 %514, 1
  br i1 %516, label %532, label %513, !llvm.loop !237

518:                                              ; preds = %510
  %519 = load ptr, ptr %495, align 8, !tbaa !161
  %520 = getelementptr inbounds %struct.xpvhv, ptr %519, i64 0, i32 2
  %521 = load i64, ptr %520, align 8, !tbaa !235
  %522 = getelementptr inbounds %struct.xpvmg, ptr %519, i64 0, i32 1
  %523 = load ptr, ptr %522, align 8, !tbaa !17
  %524 = icmp eq ptr %523, null
  br i1 %524, label %528, label %525

525:                                              ; preds = %518
  %526 = tail call i32 @Perl_hv_placeholders_get(ptr noundef nonnull %495) #17
  %527 = zext i32 %526 to i64
  br label %528

528:                                              ; preds = %518, %525
  %529 = phi i64 [ %527, %525 ], [ 0, %518 ]
  %530 = sub i64 %521, %529
  %531 = trunc i64 %530 to i32
  br label %532

532:                                              ; preds = %513, %528
  %533 = phi i32 [ %531, %528 ], [ %514, %513 ]
  %534 = icmp eq i32 %498, %533
  br i1 %534, label %538, label %535

535:                                              ; preds = %532
  store ptr @PL_sv_no, ptr %6, align 8, !tbaa !6
  store ptr %6, ptr @PL_stack_sp, align 8, !tbaa !6
  %536 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %537 = load ptr, ptr %536, align 8, !tbaa !20
  br label %1212

538:                                              ; preds = %532
  store ptr @PL_sv_yes, ptr %6, align 8, !tbaa !6
  store ptr %6, ptr @PL_stack_sp, align 8, !tbaa !6
  %539 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %540 = load ptr, ptr %539, align 8, !tbaa !20
  br label %1212

541:                                              ; preds = %436
  %542 = and i32 %440, 8388608
  %543 = icmp eq i32 %542, 0
  br i1 %543, label %548, label %544

544:                                              ; preds = %541
  %545 = tail call i32 @Perl_mg_size(ptr noundef nonnull %438) #17
  %546 = sext i32 %545 to i64
  %547 = load ptr, ptr %113, align 8, !tbaa !17
  br label %552

548:                                              ; preds = %541
  %549 = load ptr, ptr %438, align 8, !tbaa !141
  %550 = getelementptr inbounds %struct.xpvav, ptr %549, i64 0, i32 2
  %551 = load i64, ptr %550, align 8, !tbaa !142
  br label %552

552:                                              ; preds = %544, %548
  %553 = phi ptr [ %547, %544 ], [ %114, %548 ]
  %554 = phi i64 [ %546, %544 ], [ %551, %548 ]
  %555 = icmp slt i64 %554, 0
  br i1 %555, label %570, label %556

556:                                              ; preds = %552, %567
  %557 = phi i64 [ %568, %567 ], [ 0, %552 ]
  %558 = tail call ptr @Perl_av_fetch(ptr noundef %438, i64 noundef %557, i32 noundef 0) #17
  %559 = icmp eq ptr %558, null
  br i1 %559, label %567, label %560

560:                                              ; preds = %556
  %561 = load ptr, ptr %558, align 8, !tbaa !6
  %562 = tail call ptr @Perl_hv_common(ptr noundef %553, ptr noundef %561, ptr noundef null, i64 noundef 0, i32 noundef 0, i32 noundef 8, ptr noundef null, i32 noundef 0) #17
  %563 = icmp eq ptr %562, null
  br i1 %563, label %567, label %564

564:                                              ; preds = %560
  store ptr @PL_sv_yes, ptr %6, align 8, !tbaa !6
  store ptr %6, ptr @PL_stack_sp, align 8, !tbaa !6
  %565 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %566 = load ptr, ptr %565, align 8, !tbaa !20
  br label %1212

567:                                              ; preds = %560, %556
  %568 = add nuw i64 %557, 1
  %569 = icmp eq i64 %557, %554
  br i1 %569, label %570, label %556, !llvm.loop !238

570:                                              ; preds = %567, %552
  store ptr @PL_sv_no, ptr %6, align 8, !tbaa !6
  store ptr %6, ptr @PL_stack_sp, align 8, !tbaa !6
  %571 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %572 = load ptr, ptr %571, align 8, !tbaa !20
  br label %1212

573:                                              ; preds = %1051, %436
  %574 = phi ptr [ %114, %1051 ], [ %438, %436 ]
  %575 = phi ptr [ %19, %1051 ], [ %30, %436 ]
  %576 = tail call fastcc ptr @S_make_matcher(ptr noundef nonnull %574)
  %577 = getelementptr inbounds %struct.sv, ptr %575, i64 0, i32 3
  %578 = load ptr, ptr %577, align 8, !tbaa !17
  %579 = tail call i32 @Perl_hv_iterinit(ptr noundef %578) #17
  %580 = tail call ptr @Perl_hv_iternext_flags(ptr noundef %578, i32 noundef 0) #17
  %581 = icmp eq ptr %580, null
  br i1 %581, label %594, label %582

582:                                              ; preds = %573, %591
  %583 = phi ptr [ %592, %591 ], [ %580, %573 ]
  %584 = phi ptr [ %587, %591 ], [ %60, %573 ]
  store ptr %584, ptr @PL_stack_sp, align 8, !tbaa !6
  %585 = tail call ptr @Perl_hv_iterkeysv(ptr noundef nonnull %583) #17
  %586 = tail call fastcc zeroext i1 @S_matcher_matches_sv(ptr noundef %576, ptr noundef %585)
  %587 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !6
  br i1 %586, label %588, label %591

588:                                              ; preds = %582
  %589 = tail call i32 @Perl_hv_iterinit(ptr noundef %578) #17
  tail call fastcc void @S_destroy_matcher()
  %590 = getelementptr inbounds ptr, ptr %587, i64 1
  store ptr @PL_sv_yes, ptr %590, align 8, !tbaa !6
  br label %597

591:                                              ; preds = %582
  %592 = tail call ptr @Perl_hv_iternext_flags(ptr noundef %578, i32 noundef 0) #17
  %593 = icmp eq ptr %592, null
  br i1 %593, label %594, label %582, !llvm.loop !239

594:                                              ; preds = %591, %573
  %595 = phi ptr [ %60, %573 ], [ %587, %591 ]
  tail call fastcc void @S_destroy_matcher()
  %596 = getelementptr inbounds ptr, ptr %595, i64 1
  store ptr @PL_sv_no, ptr %596, align 8, !tbaa !6
  br label %597

597:                                              ; preds = %594, %588
  %598 = phi ptr [ %590, %588 ], [ %596, %594 ]
  store ptr %598, ptr @PL_stack_sp, align 8, !tbaa !6
  %599 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %600 = load ptr, ptr %599, align 8, !tbaa !20
  br label %1212

601:                                              ; preds = %436, %433, %418
  %602 = tail call ptr @Perl_hv_common(ptr noundef nonnull %114, ptr noundef %19, ptr noundef null, i64 noundef 0, i32 noundef 0, i32 noundef 8, ptr noundef null, i32 noundef 0) #17
  %603 = icmp eq ptr %602, null
  br i1 %603, label %607, label %604

604:                                              ; preds = %601
  store ptr @PL_sv_yes, ptr %6, align 8, !tbaa !6
  store ptr %6, ptr @PL_stack_sp, align 8, !tbaa !6
  %605 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %606 = load ptr, ptr %605, align 8, !tbaa !20
  br label %1212

607:                                              ; preds = %601
  store ptr @PL_sv_no, ptr %6, align 8, !tbaa !6
  store ptr %6, ptr @PL_stack_sp, align 8, !tbaa !6
  %608 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %609 = load ptr, ptr %608, align 8, !tbaa !20
  br label %1212

610:                                              ; preds = %112
  br i1 %108, label %951, label %611

611:                                              ; preds = %610
  %612 = getelementptr inbounds %struct.sv, ptr %19, i64 0, i32 2
  %613 = load i32, ptr %612, align 4, !tbaa !49
  %614 = and i32 %613, 2048
  %615 = icmp eq i32 %614, 0
  br i1 %615, label %903, label %616

616:                                              ; preds = %611
  %617 = getelementptr inbounds %struct.sv, ptr %19, i64 0, i32 3
  %618 = load ptr, ptr %617, align 8, !tbaa !17
  %619 = getelementptr inbounds %struct.sv, ptr %618, i64 0, i32 2
  %620 = load i32, ptr %619, align 4, !tbaa !49
  %621 = trunc i32 %620 to i8
  switch i8 %621, label %903 [
    i8 12, label %622
    i8 11, label %653
    i8 8, label %855
  ]

622:                                              ; preds = %616
  %623 = and i32 %116, 8388608
  %624 = icmp eq i32 %623, 0
  br i1 %624, label %628, label %625

625:                                              ; preds = %622
  %626 = tail call i32 @Perl_mg_size(ptr noundef nonnull %114) #17
  %627 = sext i32 %626 to i64
  br label %632

628:                                              ; preds = %622
  %629 = load ptr, ptr %114, align 8, !tbaa !141
  %630 = getelementptr inbounds %struct.xpvav, ptr %629, i64 0, i32 2
  %631 = load i64, ptr %630, align 8, !tbaa !142
  br label %632

632:                                              ; preds = %625, %628
  %633 = phi i64 [ %627, %625 ], [ %631, %628 ]
  %634 = icmp slt i64 %633, 0
  br i1 %634, label %650, label %635

635:                                              ; preds = %632, %647
  %636 = phi i64 [ %648, %647 ], [ 0, %632 ]
  %637 = tail call ptr @Perl_av_fetch(ptr noundef %114, i64 noundef %636, i32 noundef 0) #17
  %638 = icmp eq ptr %637, null
  br i1 %638, label %647, label %639

639:                                              ; preds = %635
  %640 = load ptr, ptr %617, align 8, !tbaa !17
  %641 = load ptr, ptr %637, align 8, !tbaa !6
  %642 = tail call ptr @Perl_hv_common(ptr noundef %640, ptr noundef %641, ptr noundef null, i64 noundef 0, i32 noundef 0, i32 noundef 8, ptr noundef null, i32 noundef 0) #17
  %643 = icmp eq ptr %642, null
  br i1 %643, label %647, label %644

644:                                              ; preds = %639
  store ptr @PL_sv_yes, ptr %6, align 8, !tbaa !6
  store ptr %6, ptr @PL_stack_sp, align 8, !tbaa !6
  %645 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %646 = load ptr, ptr %645, align 8, !tbaa !20
  br label %1212

647:                                              ; preds = %639, %635
  %648 = add nuw i64 %636, 1
  %649 = icmp eq i64 %636, %633
  br i1 %649, label %650, label %635, !llvm.loop !240

650:                                              ; preds = %647, %632
  store ptr @PL_sv_no, ptr %6, align 8, !tbaa !6
  store ptr %6, ptr @PL_stack_sp, align 8, !tbaa !6
  %651 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %652 = load ptr, ptr %651, align 8, !tbaa !20
  br label %1212

653:                                              ; preds = %616
  %654 = and i32 %116, 8388608
  %655 = icmp eq i32 %654, 0
  br i1 %655, label %660, label %656

656:                                              ; preds = %653
  %657 = tail call i32 @Perl_mg_size(ptr noundef nonnull %114) #17
  %658 = sext i32 %657 to i64
  %659 = load i32, ptr %619, align 4, !tbaa !49
  br label %664

660:                                              ; preds = %653
  %661 = load ptr, ptr %114, align 8, !tbaa !141
  %662 = getelementptr inbounds %struct.xpvav, ptr %661, i64 0, i32 2
  %663 = load i64, ptr %662, align 8, !tbaa !142
  br label %664

664:                                              ; preds = %656, %660
  %665 = phi i32 [ %659, %656 ], [ %620, %660 ]
  %666 = phi i64 [ %658, %656 ], [ %663, %660 ]
  %667 = and i32 %665, 8388608
  %668 = icmp eq i32 %667, 0
  br i1 %668, label %672, label %669

669:                                              ; preds = %664
  %670 = tail call i32 @Perl_mg_size(ptr noundef nonnull %618) #17
  %671 = sext i32 %670 to i64
  br label %676

672:                                              ; preds = %664
  %673 = load ptr, ptr %618, align 8, !tbaa !141
  %674 = getelementptr inbounds %struct.xpvav, ptr %673, i64 0, i32 2
  %675 = load i64, ptr %674, align 8, !tbaa !142
  br label %676

676:                                              ; preds = %669, %672
  %677 = phi i64 [ %671, %669 ], [ %675, %672 ]
  %678 = icmp eq i64 %666, %677
  br i1 %678, label %682, label %679

679:                                              ; preds = %676
  store ptr @PL_sv_no, ptr %6, align 8, !tbaa !6
  store ptr %6, ptr @PL_stack_sp, align 8, !tbaa !6
  %680 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %681 = load ptr, ptr %680, align 8, !tbaa !20
  br label %1212

682:                                              ; preds = %676
  %683 = load i32, ptr %619, align 4, !tbaa !49
  %684 = and i32 %683, 8388608
  %685 = icmp eq i32 %684, 0
  br i1 %685, label %689, label %686

686:                                              ; preds = %682
  %687 = tail call i32 @Perl_mg_size(ptr noundef nonnull %618) #17
  %688 = sext i32 %687 to i64
  br label %693

689:                                              ; preds = %682
  %690 = load ptr, ptr %618, align 8, !tbaa !141
  %691 = getelementptr inbounds %struct.xpvav, ptr %690, i64 0, i32 2
  %692 = load i64, ptr %691, align 8, !tbaa !142
  br label %693

693:                                              ; preds = %686, %689
  %694 = phi i64 [ %688, %686 ], [ %692, %689 ]
  %695 = icmp eq ptr %0, null
  br i1 %695, label %696, label %699

696:                                              ; preds = %693
  %697 = tail call ptr @Perl_newSV_type(i32 noundef 12) #17
  %698 = tail call ptr @Perl_sv_2mortal(ptr noundef %697) #17
  br label %699

699:                                              ; preds = %696, %693
  %700 = phi ptr [ %697, %696 ], [ %0, %693 ]
  %701 = icmp eq ptr %1, null
  br i1 %701, label %702, label %705

702:                                              ; preds = %699
  %703 = tail call ptr @Perl_newSV_type(i32 noundef 12) #17
  %704 = tail call ptr @Perl_sv_2mortal(ptr noundef %703) #17
  br label %705

705:                                              ; preds = %702, %699
  %706 = phi ptr [ %703, %702 ], [ %1, %699 ]
  %707 = icmp slt i64 %694, 0
  br i1 %707, label %850, label %708

708:                                              ; preds = %705, %846
  %709 = phi ptr [ %847, %846 ], [ %60, %705 ]
  %710 = phi i64 [ %848, %846 ], [ 0, %705 ]
  %711 = load ptr, ptr %113, align 8, !tbaa !17
  %712 = tail call ptr @Perl_av_fetch(ptr noundef %711, i64 noundef %710, i32 noundef 0) #17
  %713 = tail call ptr @Perl_av_fetch(ptr noundef %618, i64 noundef %710, i32 noundef 0) #17
  %714 = icmp ne ptr %712, null
  %715 = icmp ne ptr %713, null
  %716 = select i1 %714, i1 %715, i1 false
  br i1 %716, label %747, label %717

717:                                              ; preds = %708
  br i1 %714, label %718, label %730

718:                                              ; preds = %717
  %719 = load ptr, ptr %712, align 8, !tbaa !6
  %720 = getelementptr inbounds %struct.sv, ptr %719, i64 0, i32 2
  %721 = load i32, ptr %720, align 4, !tbaa !49
  %722 = and i32 %721, 65280
  %723 = icmp ne i32 %722, 0
  %724 = and i32 %721, 255
  %725 = icmp eq i32 %724, 8
  %726 = or i1 %723, %725
  %727 = and i32 %721, 16826623
  %728 = icmp eq i32 %727, 16777226
  %729 = or i1 %728, %726
  br i1 %729, label %743, label %730

730:                                              ; preds = %718, %717
  br i1 %715, label %731, label %846

731:                                              ; preds = %730
  %732 = load ptr, ptr %713, align 8, !tbaa !6
  %733 = getelementptr inbounds %struct.sv, ptr %732, i64 0, i32 2
  %734 = load i32, ptr %733, align 4, !tbaa !49
  %735 = and i32 %734, 65280
  %736 = icmp ne i32 %735, 0
  %737 = and i32 %734, 255
  %738 = icmp eq i32 %737, 8
  %739 = or i1 %736, %738
  %740 = and i32 %734, 16826623
  %741 = icmp eq i32 %740, 16777226
  %742 = or i1 %741, %739
  br i1 %742, label %743, label %846

743:                                              ; preds = %731, %718
  %744 = getelementptr inbounds ptr, ptr %709, i64 1
  store ptr @PL_sv_no, ptr %744, align 8, !tbaa !6
  store ptr %744, ptr @PL_stack_sp, align 8, !tbaa !6
  %745 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %746 = load ptr, ptr %745, align 8, !tbaa !20
  br label %1212

747:                                              ; preds = %708
  %748 = load ptr, ptr %712, align 8, !tbaa !6
  %749 = ptrtoint ptr %748 to i64
  %750 = tail call ptr @Perl_newSViv(i64 noundef %749) #17
  %751 = tail call ptr @Perl_sv_2mortal(ptr noundef %750) #17
  %752 = tail call ptr @Perl_hv_common(ptr noundef %700, ptr noundef %751, ptr noundef null, i64 noundef 0, i32 noundef 0, i32 noundef 8, ptr noundef null, i32 noundef 0) #17
  %753 = icmp eq ptr %752, null
  br i1 %753, label %754, label %761

754:                                              ; preds = %747
  %755 = load ptr, ptr %713, align 8, !tbaa !6
  %756 = ptrtoint ptr %755 to i64
  %757 = tail call ptr @Perl_newSViv(i64 noundef %756) #17
  %758 = tail call ptr @Perl_sv_2mortal(ptr noundef %757) #17
  %759 = tail call ptr @Perl_hv_common(ptr noundef %706, ptr noundef %758, ptr noundef null, i64 noundef 0, i32 noundef 0, i32 noundef 8, ptr noundef null, i32 noundef 0) #17
  %760 = icmp eq ptr %759, null
  br i1 %760, label %769, label %761

761:                                              ; preds = %754, %747
  %762 = load ptr, ptr %712, align 8, !tbaa !6
  %763 = load ptr, ptr %713, align 8, !tbaa !6
  %764 = icmp eq ptr %762, %763
  br i1 %764, label %846, label %765

765:                                              ; preds = %761
  %766 = getelementptr inbounds ptr, ptr %709, i64 1
  store ptr @PL_sv_no, ptr %766, align 8, !tbaa !6
  store ptr %766, ptr @PL_stack_sp, align 8, !tbaa !6
  %767 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %768 = load ptr, ptr %767, align 8, !tbaa !20
  br label %1212

769:                                              ; preds = %754
  %770 = load ptr, ptr %712, align 8, !tbaa !6
  %771 = ptrtoint ptr %770 to i64
  %772 = tail call ptr @Perl_newSViv(i64 noundef %771) #17
  %773 = tail call ptr @Perl_sv_2mortal(ptr noundef %772) #17
  %774 = tail call ptr @Perl_hv_common(ptr noundef %700, ptr noundef %773, ptr noundef null, i64 noundef 0, i32 noundef 0, i32 noundef 4, ptr noundef nonnull @PL_sv_undef, i32 noundef 0) #17
  %775 = load ptr, ptr %713, align 8, !tbaa !6
  %776 = ptrtoint ptr %775 to i64
  %777 = tail call ptr @Perl_newSViv(i64 noundef %776) #17
  %778 = tail call ptr @Perl_sv_2mortal(ptr noundef %777) #17
  %779 = tail call ptr @Perl_hv_common(ptr noundef %706, ptr noundef %778, ptr noundef null, i64 noundef 0, i32 noundef 0, i32 noundef 4, ptr noundef nonnull @PL_sv_undef, i32 noundef 0) #17
  %780 = load ptr, ptr %713, align 8, !tbaa !6
  %781 = getelementptr inbounds ptr, ptr %709, i64 1
  store ptr %780, ptr %781, align 8, !tbaa !6
  %782 = load ptr, ptr %712, align 8, !tbaa !6
  %783 = getelementptr inbounds ptr, ptr %709, i64 2
  store ptr %782, ptr %783, align 8, !tbaa !6
  store ptr %783, ptr @PL_stack_sp, align 8, !tbaa !6
  %784 = tail call fastcc ptr @S_do_smartmatch(ptr noundef %700, ptr noundef %706, i1 noundef zeroext false)
  %785 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !6
  %786 = getelementptr inbounds ptr, ptr %785, i64 -1
  %787 = load ptr, ptr %785, align 8, !tbaa !6
  store ptr %787, ptr @PL_Sv, align 8, !tbaa !6
  %788 = icmp eq ptr %787, null
  br i1 %788, label %843, label %789

789:                                              ; preds = %769
  %790 = getelementptr inbounds %struct.sv, ptr %787, i64 0, i32 2
  %791 = load i32, ptr %790, align 4, !tbaa !49
  %792 = and i32 %791, 2097152
  %793 = icmp eq i32 %792, 0
  br i1 %793, label %796, label %794

794:                                              ; preds = %789
  %795 = tail call zeroext i1 @Perl_sv_2bool_flags(ptr noundef nonnull %787, i32 noundef 2) #17
  br i1 %795, label %846, label %843

796:                                              ; preds = %789
  %797 = and i32 %791, 65280
  %798 = icmp ne i32 %797, 0
  %799 = and i32 %791, 255
  %800 = icmp eq i32 %799, 8
  %801 = or i1 %798, %800
  %802 = and i32 %791, 16826623
  %803 = icmp eq i32 %802, 16777226
  %804 = or i1 %803, %801
  br i1 %804, label %805, label %843

805:                                              ; preds = %796
  %806 = and i32 %791, 1024
  %807 = icmp eq i32 %806, 0
  br i1 %807, label %822, label %808

808:                                              ; preds = %805
  %809 = load ptr, ptr %787, align 8, !tbaa !72
  %810 = icmp eq ptr %809, null
  br i1 %810, label %843, label %811

811:                                              ; preds = %808
  %812 = getelementptr inbounds %struct.xpv, ptr %809, i64 0, i32 2
  %813 = load i64, ptr %812, align 8, !tbaa !53
  %814 = icmp ugt i64 %813, 1
  br i1 %814, label %846, label %815

815:                                              ; preds = %811
  %816 = icmp eq i64 %813, 0
  br i1 %816, label %843, label %817

817:                                              ; preds = %815
  %818 = getelementptr inbounds %struct.sv, ptr %787, i64 0, i32 3
  %819 = load ptr, ptr %818, align 8, !tbaa !17
  %820 = load i8, ptr %819, align 1, !tbaa !17
  %821 = icmp eq i8 %820, 48
  br i1 %821, label %843, label %846

822:                                              ; preds = %805
  %823 = and i32 %791, 768
  %824 = icmp eq i32 %823, 0
  br i1 %824, label %841, label %825

825:                                              ; preds = %822
  %826 = and i32 %791, 256
  %827 = icmp eq i32 %826, 0
  br i1 %827, label %833, label %828

828:                                              ; preds = %825
  %829 = load ptr, ptr %787, align 8, !tbaa !72
  %830 = getelementptr inbounds %struct.xpviv, ptr %829, i64 0, i32 4
  %831 = load i64, ptr %830, align 8, !tbaa !17
  %832 = icmp eq i64 %831, 0
  br i1 %832, label %833, label %846

833:                                              ; preds = %828, %825
  %834 = and i32 %791, 512
  %835 = icmp eq i32 %834, 0
  br i1 %835, label %843, label %836

836:                                              ; preds = %833
  %837 = load ptr, ptr %787, align 8, !tbaa !72
  %838 = getelementptr inbounds %struct.xpvnv, ptr %837, i64 0, i32 5
  %839 = load double, ptr %838, align 8, !tbaa !17
  %840 = fcmp une double %839, 0.000000e+00
  br i1 %840, label %846, label %843

841:                                              ; preds = %822
  %842 = tail call zeroext i1 @Perl_sv_2bool_flags(ptr noundef nonnull %787, i32 noundef 0) #17
  br i1 %842, label %846, label %843

843:                                              ; preds = %836, %817, %841, %794, %796, %808, %815, %833, %769
  store ptr @PL_sv_no, ptr %785, align 8, !tbaa !6
  store ptr %785, ptr @PL_stack_sp, align 8, !tbaa !6
  %844 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %845 = load ptr, ptr %844, align 8, !tbaa !20
  br label %1212

846:                                              ; preds = %811, %828, %836, %731, %761, %730, %794, %841, %817
  %847 = phi ptr [ %786, %817 ], [ %786, %841 ], [ %786, %794 ], [ %786, %811 ], [ %786, %828 ], [ %786, %836 ], [ %709, %731 ], [ %709, %730 ], [ %709, %761 ]
  %848 = add nuw i64 %710, 1
  %849 = icmp eq i64 %710, %694
  br i1 %849, label %850, label %708, !llvm.loop !241

850:                                              ; preds = %846, %705
  %851 = phi ptr [ %60, %705 ], [ %847, %846 ]
  %852 = getelementptr inbounds ptr, ptr %851, i64 1
  store ptr @PL_sv_yes, ptr %852, align 8, !tbaa !6
  store ptr %852, ptr @PL_stack_sp, align 8, !tbaa !6
  %853 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %854 = load ptr, ptr %853, align 8, !tbaa !20
  br label %1212

855:                                              ; preds = %1051, %616
  %856 = phi ptr [ %618, %616 ], [ %114, %1051 ]
  %857 = phi ptr [ %30, %616 ], [ %19, %1051 ]
  %858 = tail call fastcc ptr @S_make_matcher(ptr noundef nonnull %856)
  %859 = getelementptr inbounds %struct.sv, ptr %857, i64 0, i32 3
  %860 = load ptr, ptr %859, align 8, !tbaa !17
  %861 = getelementptr inbounds %struct.sv, ptr %860, i64 0, i32 2
  %862 = load i32, ptr %861, align 4, !tbaa !49
  %863 = and i32 %862, 8388608
  %864 = icmp eq i32 %863, 0
  br i1 %864, label %868, label %865

865:                                              ; preds = %855
  %866 = tail call i32 @Perl_mg_size(ptr noundef nonnull %860) #17
  %867 = sext i32 %866 to i64
  br label %872

868:                                              ; preds = %855
  %869 = load ptr, ptr %860, align 8, !tbaa !141
  %870 = getelementptr inbounds %struct.xpvav, ptr %869, i64 0, i32 2
  %871 = load i64, ptr %870, align 8, !tbaa !142
  br label %872

872:                                              ; preds = %865, %868
  %873 = phi i64 [ %867, %865 ], [ %871, %868 ]
  %874 = icmp slt i64 %873, 0
  br i1 %874, label %898, label %875

875:                                              ; preds = %872, %894
  %876 = phi ptr [ %895, %894 ], [ %60, %872 ]
  %877 = phi i64 [ %896, %894 ], [ 0, %872 ]
  %878 = load ptr, ptr %859, align 8, !tbaa !17
  %879 = tail call ptr @Perl_av_fetch(ptr noundef %878, i64 noundef %877, i32 noundef 0) #17
  store ptr %876, ptr @PL_stack_sp, align 8, !tbaa !6
  %880 = icmp eq ptr %879, null
  br i1 %880, label %894, label %881

881:                                              ; preds = %875
  %882 = load ptr, ptr %879, align 8, !tbaa !6
  %883 = tail call fastcc zeroext i1 @S_matcher_matches_sv(ptr noundef %858, ptr noundef %882)
  %884 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !6
  br i1 %883, label %885, label %894

885:                                              ; preds = %881
  %886 = load i64, ptr @PL_tmps_ix, align 8, !tbaa !59
  %887 = load i64, ptr @PL_tmps_floor, align 8, !tbaa !59
  %888 = icmp sgt i64 %886, %887
  br i1 %888, label %889, label %890

889:                                              ; preds = %885
  tail call void @Perl_free_tmps() #17
  br label %890

890:                                              ; preds = %889, %885
  tail call void @Perl_pop_scope() #17
  %891 = getelementptr inbounds ptr, ptr %884, i64 1
  store ptr @PL_sv_yes, ptr %891, align 8, !tbaa !6
  store ptr %891, ptr @PL_stack_sp, align 8, !tbaa !6
  %892 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %893 = load ptr, ptr %892, align 8, !tbaa !20
  br label %1212

894:                                              ; preds = %875, %881
  %895 = phi ptr [ %876, %875 ], [ %884, %881 ]
  %896 = add nuw i64 %877, 1
  %897 = icmp eq i64 %877, %873
  br i1 %897, label %898, label %875, !llvm.loop !242

898:                                              ; preds = %894, %872
  %899 = phi ptr [ %60, %872 ], [ %895, %894 ]
  tail call fastcc void @S_destroy_matcher()
  %900 = getelementptr inbounds ptr, ptr %899, i64 1
  store ptr @PL_sv_no, ptr %900, align 8, !tbaa !6
  store ptr %900, ptr @PL_stack_sp, align 8, !tbaa !6
  %901 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %902 = load ptr, ptr %901, align 8, !tbaa !20
  br label %1212

903:                                              ; preds = %616, %611
  %904 = and i32 %613, 65280
  %905 = icmp ne i32 %904, 0
  %906 = and i32 %613, 255
  %907 = icmp eq i32 %906, 8
  %908 = or i1 %905, %907
  %909 = and i32 %613, 16826623
  %910 = icmp eq i32 %909, 16777226
  %911 = or i1 %910, %908
  br i1 %911, label %951, label %912

912:                                              ; preds = %903
  %913 = and i32 %116, 8388608
  %914 = icmp eq i32 %913, 0
  br i1 %914, label %918, label %915

915:                                              ; preds = %912
  %916 = tail call i32 @Perl_mg_size(ptr noundef nonnull %114) #17
  %917 = sext i32 %916 to i64
  br label %922

918:                                              ; preds = %912
  %919 = load ptr, ptr %114, align 8, !tbaa !141
  %920 = getelementptr inbounds %struct.xpvav, ptr %919, i64 0, i32 2
  %921 = load i64, ptr %920, align 8, !tbaa !142
  br label %922

922:                                              ; preds = %915, %918
  %923 = phi i64 [ %917, %915 ], [ %921, %918 ]
  %924 = icmp slt i64 %923, 0
  br i1 %924, label %948, label %928

925:                                              ; preds = %933
  %926 = add nuw i64 %929, 1
  %927 = icmp eq i64 %929, %923
  br i1 %927, label %948, label %928, !llvm.loop !243

928:                                              ; preds = %922, %925
  %929 = phi i64 [ %926, %925 ], [ 0, %922 ]
  %930 = load ptr, ptr %113, align 8, !tbaa !17
  %931 = tail call ptr @Perl_av_fetch(ptr noundef %930, i64 noundef %929, i32 noundef 0) #17
  %932 = icmp eq ptr %931, null
  br i1 %932, label %945, label %933

933:                                              ; preds = %928
  %934 = load ptr, ptr %931, align 8, !tbaa !6
  %935 = getelementptr inbounds %struct.sv, ptr %934, i64 0, i32 2
  %936 = load i32, ptr %935, align 4, !tbaa !49
  %937 = and i32 %936, 65280
  %938 = icmp ne i32 %937, 0
  %939 = and i32 %936, 255
  %940 = icmp eq i32 %939, 8
  %941 = or i1 %938, %940
  %942 = and i32 %936, 16826623
  %943 = icmp eq i32 %942, 16777226
  %944 = or i1 %943, %941
  br i1 %944, label %925, label %945

945:                                              ; preds = %928, %933
  store ptr @PL_sv_yes, ptr %6, align 8, !tbaa !6
  store ptr %6, ptr @PL_stack_sp, align 8, !tbaa !6
  %946 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %947 = load ptr, ptr %946, align 8, !tbaa !20
  br label %1212

948:                                              ; preds = %925, %922
  store ptr @PL_sv_no, ptr %6, align 8, !tbaa !6
  store ptr %6, ptr @PL_stack_sp, align 8, !tbaa !6
  %949 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %950 = load ptr, ptr %949, align 8, !tbaa !20
  br label %1212

951:                                              ; preds = %903, %610
  %952 = and i32 %116, 8388608
  %953 = icmp eq i32 %952, 0
  br i1 %953, label %957, label %954

954:                                              ; preds = %951
  %955 = tail call i32 @Perl_mg_size(ptr noundef nonnull %114) #17
  %956 = sext i32 %955 to i64
  br label %961

957:                                              ; preds = %951
  %958 = load ptr, ptr %114, align 8, !tbaa !141
  %959 = getelementptr inbounds %struct.xpvav, ptr %958, i64 0, i32 2
  %960 = load i64, ptr %959, align 8, !tbaa !142
  br label %961

961:                                              ; preds = %954, %957
  %962 = phi i64 [ %956, %954 ], [ %960, %957 ]
  %963 = icmp slt i64 %962, 0
  br i1 %963, label %1040, label %964

964:                                              ; preds = %961, %1036
  %965 = phi ptr [ %1037, %1036 ], [ %60, %961 ]
  %966 = phi i64 [ %1038, %1036 ], [ 0, %961 ]
  %967 = load ptr, ptr %113, align 8, !tbaa !17
  %968 = tail call ptr @Perl_av_fetch(ptr noundef %967, i64 noundef %966, i32 noundef 0) #17
  %969 = icmp eq ptr %968, null
  br i1 %969, label %1036, label %970

970:                                              ; preds = %964
  %971 = getelementptr inbounds ptr, ptr %965, i64 1
  store ptr %19, ptr %971, align 8, !tbaa !6
  %972 = load ptr, ptr %968, align 8, !tbaa !6
  %973 = getelementptr inbounds ptr, ptr %965, i64 2
  store ptr %972, ptr %973, align 8, !tbaa !6
  store ptr %973, ptr @PL_stack_sp, align 8, !tbaa !6
  %974 = tail call fastcc ptr @S_do_smartmatch(ptr noundef null, ptr noundef null, i1 noundef zeroext true)
  %975 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !6
  %976 = getelementptr inbounds ptr, ptr %975, i64 -1
  %977 = load ptr, ptr %975, align 8, !tbaa !6
  store ptr %977, ptr @PL_Sv, align 8, !tbaa !6
  %978 = icmp eq ptr %977, null
  br i1 %978, label %1036, label %979

979:                                              ; preds = %970
  %980 = getelementptr inbounds %struct.sv, ptr %977, i64 0, i32 2
  %981 = load i32, ptr %980, align 4, !tbaa !49
  %982 = and i32 %981, 2097152
  %983 = icmp eq i32 %982, 0
  br i1 %983, label %986, label %984

984:                                              ; preds = %979
  %985 = tail call zeroext i1 @Perl_sv_2bool_flags(ptr noundef nonnull %977, i32 noundef 2) #17
  br i1 %985, label %1033, label %1036

986:                                              ; preds = %979
  %987 = and i32 %981, 65280
  %988 = icmp ne i32 %987, 0
  %989 = and i32 %981, 255
  %990 = icmp eq i32 %989, 8
  %991 = or i1 %988, %990
  %992 = and i32 %981, 16826623
  %993 = icmp eq i32 %992, 16777226
  %994 = or i1 %993, %991
  br i1 %994, label %995, label %1036

995:                                              ; preds = %986
  %996 = and i32 %981, 1024
  %997 = icmp eq i32 %996, 0
  br i1 %997, label %1012, label %998

998:                                              ; preds = %995
  %999 = load ptr, ptr %977, align 8, !tbaa !72
  %1000 = icmp eq ptr %999, null
  br i1 %1000, label %1036, label %1001

1001:                                             ; preds = %998
  %1002 = getelementptr inbounds %struct.xpv, ptr %999, i64 0, i32 2
  %1003 = load i64, ptr %1002, align 8, !tbaa !53
  %1004 = icmp ugt i64 %1003, 1
  br i1 %1004, label %1033, label %1005

1005:                                             ; preds = %1001
  %1006 = icmp eq i64 %1003, 0
  br i1 %1006, label %1036, label %1007

1007:                                             ; preds = %1005
  %1008 = getelementptr inbounds %struct.sv, ptr %977, i64 0, i32 3
  %1009 = load ptr, ptr %1008, align 8, !tbaa !17
  %1010 = load i8, ptr %1009, align 1, !tbaa !17
  %1011 = icmp eq i8 %1010, 48
  br i1 %1011, label %1036, label %1033

1012:                                             ; preds = %995
  %1013 = and i32 %981, 768
  %1014 = icmp eq i32 %1013, 0
  br i1 %1014, label %1031, label %1015

1015:                                             ; preds = %1012
  %1016 = and i32 %981, 256
  %1017 = icmp eq i32 %1016, 0
  br i1 %1017, label %1023, label %1018

1018:                                             ; preds = %1015
  %1019 = load ptr, ptr %977, align 8, !tbaa !72
  %1020 = getelementptr inbounds %struct.xpviv, ptr %1019, i64 0, i32 4
  %1021 = load i64, ptr %1020, align 8, !tbaa !17
  %1022 = icmp eq i64 %1021, 0
  br i1 %1022, label %1023, label %1033

1023:                                             ; preds = %1018, %1015
  %1024 = and i32 %981, 512
  %1025 = icmp eq i32 %1024, 0
  br i1 %1025, label %1036, label %1026

1026:                                             ; preds = %1023
  %1027 = load ptr, ptr %977, align 8, !tbaa !72
  %1028 = getelementptr inbounds %struct.xpvnv, ptr %1027, i64 0, i32 5
  %1029 = load double, ptr %1028, align 8, !tbaa !17
  %1030 = fcmp une double %1029, 0.000000e+00
  br i1 %1030, label %1033, label %1036

1031:                                             ; preds = %1012
  %1032 = tail call zeroext i1 @Perl_sv_2bool_flags(ptr noundef nonnull %977, i32 noundef 0) #17
  br i1 %1032, label %1033, label %1036

1033:                                             ; preds = %1026, %1018, %1001, %984, %1031, %1007
  store ptr @PL_sv_yes, ptr %975, align 8, !tbaa !6
  store ptr %975, ptr @PL_stack_sp, align 8, !tbaa !6
  %1034 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %1035 = load ptr, ptr %1034, align 8, !tbaa !20
  br label %1212

1036:                                             ; preds = %1026, %964, %986, %998, %1005, %1023, %970, %984, %1031, %1007
  %1037 = phi ptr [ %976, %1007 ], [ %976, %1031 ], [ %976, %984 ], [ %976, %970 ], [ %976, %1023 ], [ %976, %1005 ], [ %976, %998 ], [ %976, %986 ], [ %965, %964 ], [ %976, %1026 ]
  %1038 = add nuw i64 %966, 1
  %1039 = icmp eq i64 %966, %962
  br i1 %1039, label %1040, label %964, !llvm.loop !244

1040:                                             ; preds = %1036, %961
  %1041 = phi ptr [ %60, %961 ], [ %1037, %1036 ]
  %1042 = getelementptr inbounds ptr, ptr %1041, i64 1
  store ptr @PL_sv_no, ptr %1042, align 8, !tbaa !6
  store ptr %1042, ptr @PL_stack_sp, align 8, !tbaa !6
  %1043 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %1044 = load ptr, ptr %1043, align 8, !tbaa !20
  br label %1212

1045:                                             ; preds = %112
  br i1 %108, label %1057, label %1046

1046:                                             ; preds = %1045
  %1047 = getelementptr inbounds %struct.sv, ptr %19, i64 0, i32 2
  %1048 = load i32, ptr %1047, align 4, !tbaa !49
  %1049 = and i32 %1048, 2048
  %1050 = icmp eq i32 %1049, 0
  br i1 %1050, label %1057, label %1051

1051:                                             ; preds = %1046
  %1052 = getelementptr inbounds %struct.sv, ptr %19, i64 0, i32 3
  %1053 = load ptr, ptr %1052, align 8, !tbaa !17
  %1054 = getelementptr inbounds %struct.sv, ptr %1053, i64 0, i32 2
  %1055 = load i32, ptr %1054, align 4, !tbaa !49
  %1056 = trunc i32 %1055 to i8
  switch i8 %1056, label %1057 [
    i8 12, label %573
    i8 11, label %855
  ]

1057:                                             ; preds = %1051, %1046, %1045
  %1058 = tail call ptr @Perl_newPMOP(i32 noundef 31, i32 noundef 66) #17
  %1059 = getelementptr inbounds %struct.sv, ptr %114, i64 0, i32 1
  %1060 = load i32, ptr %1059, align 8, !tbaa !41
  %1061 = add i32 %1060, 1
  store i32 %1061, ptr %1059, align 8, !tbaa !41
  %1062 = getelementptr inbounds %struct.pmop, ptr %1058, i64 0, i32 9
  store ptr %114, ptr %1062, align 8, !tbaa !32
  %1063 = getelementptr inbounds %struct.op, ptr %1058, i64 0, i32 4
  %1064 = load i16, ptr %1063, align 8
  %1065 = or i16 %1064, 2048
  store i16 %1065, ptr %1063, align 8
  tail call void @Perl_save_pushptr(ptr noundef %1058, i32 noundef 9) #17
  tail call void @Perl_push_scope() #17
  tail call void @Perl_save_strlen(ptr noundef nonnull @PL_tmps_floor) #17
  %1066 = load i64, ptr @PL_tmps_ix, align 8, !tbaa !59
  store i64 %1066, ptr @PL_tmps_floor, align 8, !tbaa !59
  %1067 = load ptr, ptr @PL_op, align 8, !tbaa !6
  tail call void @Perl_save_pushptr(ptr noundef %1067, i32 noundef 18) #17
  store ptr %60, ptr @PL_stack_sp, align 8, !tbaa !6
  %1068 = tail call fastcc zeroext i1 @S_matcher_matches_sv(ptr noundef %1058, ptr noundef %19)
  %1069 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !6
  %1070 = select i1 %1068, ptr @PL_sv_yes, ptr @PL_sv_no
  %1071 = getelementptr inbounds ptr, ptr %1069, i64 1
  store ptr %1070, ptr %1071, align 8, !tbaa !6
  %1072 = load i64, ptr @PL_tmps_ix, align 8, !tbaa !59
  %1073 = load i64, ptr @PL_tmps_floor, align 8, !tbaa !59
  %1074 = icmp sgt i64 %1072, %1073
  br i1 %1074, label %1075, label %1076

1075:                                             ; preds = %1057
  tail call void @Perl_free_tmps() #17
  br label %1076

1076:                                             ; preds = %1057, %1075
  tail call void @Perl_pop_scope() #17
  store ptr %1071, ptr @PL_stack_sp, align 8, !tbaa !6
  %1077 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %1078 = load ptr, ptr %1077, align 8, !tbaa !20
  br label %1212

1079:                                             ; preds = %112, %107
  %1080 = getelementptr inbounds %struct.sv, ptr %19, i64 0, i32 2
  %1081 = load i32, ptr %1080, align 4, !tbaa !49
  %1082 = and i32 %1081, 2048
  %1083 = icmp ne i32 %1082, 0
  %1084 = select i1 %108, i1 %1083, i1 false
  br i1 %1084, label %1085, label %1109

1085:                                             ; preds = %1079
  %1086 = getelementptr inbounds %struct.sv, ptr %19, i64 0, i32 3
  %1087 = load ptr, ptr %1086, align 8, !tbaa !17
  %1088 = getelementptr inbounds %struct.sv, ptr %1087, i64 0, i32 2
  %1089 = load i32, ptr %1088, align 4, !tbaa !49
  %1090 = and i32 %1089, 1048576
  %1091 = icmp eq i32 %1090, 0
  br i1 %1091, label %1109, label %1092

1092:                                             ; preds = %1085
  %1093 = load ptr, ptr %1087, align 8, !tbaa !72
  %1094 = load ptr, ptr %1093, align 8, !tbaa !231
  %1095 = getelementptr inbounds %struct.hv, ptr %1094, i64 0, i32 2
  %1096 = load i32, ptr %1095, align 4, !tbaa !159
  %1097 = and i32 %1096, 268435456
  %1098 = icmp eq i32 %1097, 0
  br i1 %1098, label %1109, label %1099

1099:                                             ; preds = %1092
  store ptr %19, ptr %6, align 8, !tbaa !6
  store ptr %30, ptr %4, align 8, !tbaa !6
  store ptr %4, ptr @PL_stack_sp, align 8, !tbaa !6
  %1100 = tail call ptr @Perl_amagic_call(ptr noundef nonnull %19, ptr noundef nonnull %30, i32 noundef 72, i32 noundef 1) #17
  %1101 = icmp eq ptr %1100, null
  br i1 %1101, label %1102, label %1104

1102:                                             ; preds = %1099
  %1103 = load i32, ptr %31, align 4, !tbaa !49
  br label %1121

1104:                                             ; preds = %1099
  %1105 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !6
  %1106 = getelementptr inbounds ptr, ptr %1105, i64 -1
  store ptr %1100, ptr %1106, align 8, !tbaa !6
  store ptr %1106, ptr @PL_stack_sp, align 8, !tbaa !6
  %1107 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %1108 = load ptr, ptr %1107, align 8, !tbaa !20
  br label %1212

1109:                                             ; preds = %1079, %1092, %1085
  %1110 = and i32 %1081, 65280
  %1111 = icmp ne i32 %1110, 0
  %1112 = and i32 %1081, 255
  %1113 = icmp eq i32 %1112, 8
  %1114 = or i1 %1111, %1113
  %1115 = and i32 %1081, 16826623
  %1116 = icmp eq i32 %1115, 16777226
  %1117 = or i1 %1116, %1114
  br i1 %1117, label %1121, label %1118

1118:                                             ; preds = %1109
  store ptr @PL_sv_no, ptr %6, align 8, !tbaa !6
  store ptr %6, ptr @PL_stack_sp, align 8, !tbaa !6
  %1119 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %1120 = load ptr, ptr %1119, align 8, !tbaa !20
  br label %1212

1121:                                             ; preds = %1102, %1109
  %1122 = phi i32 [ %1103, %1102 ], [ %109, %1109 ]
  %1123 = and i32 %1122, 768
  %1124 = icmp eq i32 %1123, 0
  br i1 %1124, label %1125, label %1136

1125:                                             ; preds = %1121
  %1126 = and i32 %1122, 1024
  %1127 = icmp eq i32 %1126, 0
  br i1 %1127, label %1210, label %1128

1128:                                             ; preds = %1125
  %1129 = tail call i32 @Perl_looks_like_number(ptr noundef nonnull %30) #17
  %1130 = icmp eq i32 %1129, 0
  br i1 %1130, label %1210, label %1131

1131:                                             ; preds = %1128
  %1132 = getelementptr inbounds %struct.sv, ptr %19, i64 0, i32 2
  %1133 = load i32, ptr %1132, align 4, !tbaa !49
  %1134 = and i32 %1133, 768
  %1135 = icmp eq i32 %1134, 0
  br i1 %1135, label %1210, label %1136

1136:                                             ; preds = %1131, %1121
  store ptr %19, ptr %6, align 8, !tbaa !6
  store ptr %30, ptr %4, align 8, !tbaa !6
  store ptr %4, ptr @PL_stack_sp, align 8, !tbaa !6
  %1137 = load ptr, ptr @PL_curcop, align 8, !tbaa !6
  %1138 = getelementptr inbounds %struct.cop, ptr %1137, i64 0, i32 10
  %1139 = load i32, ptr %1138, align 8, !tbaa !70
  %1140 = and i32 %1139, 1
  %1141 = icmp eq i32 %1140, 0
  br i1 %1141, label %1144, label %1142

1142:                                             ; preds = %1136
  %1143 = tail call ptr @Perl_pp_i_eq() #17
  br label %1146

1144:                                             ; preds = %1136
  %1145 = tail call ptr @Perl_pp_eq() #17
  br label %1146

1146:                                             ; preds = %1144, %1142
  %1147 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !6
  %1148 = load ptr, ptr %1147, align 8, !tbaa !6
  store ptr %1148, ptr @PL_Sv, align 8, !tbaa !6
  %1149 = icmp eq ptr %1148, null
  br i1 %1149, label %1207, label %1150

1150:                                             ; preds = %1146
  %1151 = getelementptr inbounds %struct.sv, ptr %1148, i64 0, i32 2
  %1152 = load i32, ptr %1151, align 4, !tbaa !49
  %1153 = and i32 %1152, 2097152
  %1154 = icmp eq i32 %1153, 0
  br i1 %1154, label %1157, label %1155

1155:                                             ; preds = %1150
  %1156 = tail call zeroext i1 @Perl_sv_2bool_flags(ptr noundef nonnull %1148, i32 noundef 2) #17
  br i1 %1156, label %1204, label %1207

1157:                                             ; preds = %1150
  %1158 = and i32 %1152, 65280
  %1159 = icmp ne i32 %1158, 0
  %1160 = and i32 %1152, 255
  %1161 = icmp eq i32 %1160, 8
  %1162 = or i1 %1159, %1161
  %1163 = and i32 %1152, 16826623
  %1164 = icmp eq i32 %1163, 16777226
  %1165 = or i1 %1164, %1162
  br i1 %1165, label %1166, label %1207

1166:                                             ; preds = %1157
  %1167 = and i32 %1152, 1024
  %1168 = icmp eq i32 %1167, 0
  br i1 %1168, label %1183, label %1169

1169:                                             ; preds = %1166
  %1170 = load ptr, ptr %1148, align 8, !tbaa !72
  %1171 = icmp eq ptr %1170, null
  br i1 %1171, label %1207, label %1172

1172:                                             ; preds = %1169
  %1173 = getelementptr inbounds %struct.xpv, ptr %1170, i64 0, i32 2
  %1174 = load i64, ptr %1173, align 8, !tbaa !53
  %1175 = icmp ugt i64 %1174, 1
  br i1 %1175, label %1204, label %1176

1176:                                             ; preds = %1172
  %1177 = icmp eq i64 %1174, 0
  br i1 %1177, label %1207, label %1178

1178:                                             ; preds = %1176
  %1179 = getelementptr inbounds %struct.sv, ptr %1148, i64 0, i32 3
  %1180 = load ptr, ptr %1179, align 8, !tbaa !17
  %1181 = load i8, ptr %1180, align 1, !tbaa !17
  %1182 = icmp eq i8 %1181, 48
  br i1 %1182, label %1207, label %1204

1183:                                             ; preds = %1166
  %1184 = and i32 %1152, 768
  %1185 = icmp eq i32 %1184, 0
  br i1 %1185, label %1202, label %1186

1186:                                             ; preds = %1183
  %1187 = and i32 %1152, 256
  %1188 = icmp eq i32 %1187, 0
  br i1 %1188, label %1194, label %1189

1189:                                             ; preds = %1186
  %1190 = load ptr, ptr %1148, align 8, !tbaa !72
  %1191 = getelementptr inbounds %struct.xpviv, ptr %1190, i64 0, i32 4
  %1192 = load i64, ptr %1191, align 8, !tbaa !17
  %1193 = icmp eq i64 %1192, 0
  br i1 %1193, label %1194, label %1204

1194:                                             ; preds = %1189, %1186
  %1195 = and i32 %1152, 512
  %1196 = icmp eq i32 %1195, 0
  br i1 %1196, label %1207, label %1197

1197:                                             ; preds = %1194
  %1198 = load ptr, ptr %1148, align 8, !tbaa !72
  %1199 = getelementptr inbounds %struct.xpvnv, ptr %1198, i64 0, i32 5
  %1200 = load double, ptr %1199, align 8, !tbaa !17
  %1201 = fcmp une double %1200, 0.000000e+00
  br i1 %1201, label %1204, label %1207

1202:                                             ; preds = %1183
  %1203 = tail call zeroext i1 @Perl_sv_2bool_flags(ptr noundef nonnull %1148, i32 noundef 0) #17
  br i1 %1203, label %1204, label %1207

1204:                                             ; preds = %1178, %1202, %1155, %1172, %1189, %1197
  store ptr @PL_sv_yes, ptr %1147, align 8, !tbaa !6
  store ptr %1147, ptr @PL_stack_sp, align 8, !tbaa !6
  %1205 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %1206 = load ptr, ptr %1205, align 8, !tbaa !20
  br label %1212

1207:                                             ; preds = %1197, %1178, %1202, %1155, %1157, %1169, %1176, %1194, %1146
  store ptr @PL_sv_no, ptr %1147, align 8, !tbaa !6
  store ptr %1147, ptr @PL_stack_sp, align 8, !tbaa !6
  %1208 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %1209 = load ptr, ptr %1208, align 8, !tbaa !20
  br label %1212

1210:                                             ; preds = %1131, %1128, %1125
  store ptr %19, ptr %6, align 8, !tbaa !6
  store ptr %30, ptr %4, align 8, !tbaa !6
  store ptr %4, ptr @PL_stack_sp, align 8, !tbaa !6
  %1211 = tail call ptr @Perl_pp_seq() #17
  br label %1212

1212:                                             ; preds = %1104, %1033, %945, %890, %743, %765, %843, %644, %564, %506, %53, %1040, %948, %898, %679, %850, %650, %570, %489, %535, %538, %1210, %1207, %1204, %1118, %1076, %607, %604, %597, %430, %414, %83, %80
  %1213 = phi ptr [ %417, %414 ], [ %606, %604 ], [ %609, %607 ], [ %600, %597 ], [ %432, %430 ], [ %1078, %1076 ], [ %1206, %1204 ], [ %1209, %1207 ], [ %1211, %1210 ], [ %1108, %1104 ], [ %1120, %1118 ], [ %82, %80 ], [ %85, %83 ], [ %57, %53 ], [ %537, %535 ], [ %540, %538 ], [ %491, %489 ], [ %566, %564 ], [ %572, %570 ], [ %646, %644 ], [ %652, %650 ], [ %681, %679 ], [ %854, %850 ], [ %893, %890 ], [ %902, %898 ], [ %947, %945 ], [ %950, %948 ], [ %1035, %1033 ], [ %1044, %1040 ], [ %509, %506 ], [ %768, %765 ], [ %845, %843 ], [ %746, %743 ]
  ret ptr %1213
}

declare ptr @Perl_amagic_call(ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

declare i32 @Perl_hv_iterinit(ptr noundef) local_unnamed_addr #2

declare ptr @Perl_hv_iternext_flags(ptr noundef, i32 noundef) local_unnamed_addr #2

declare ptr @Perl_hv_iterkeysv(ptr noundef) local_unnamed_addr #2

declare i32 @Perl_hv_placeholders_get(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc ptr @S_make_matcher(ptr noundef %0) unnamed_addr #0 {
  %2 = tail call ptr @Perl_newPMOP(i32 noundef 31, i32 noundef 66) #17
  %3 = icmp eq ptr %0, null
  br i1 %3, label %8, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 1
  %6 = load i32, ptr %5, align 8, !tbaa !41
  %7 = add i32 %6, 1
  store i32 %7, ptr %5, align 8, !tbaa !41
  br label %8

8:                                                ; preds = %1, %4
  %9 = getelementptr inbounds %struct.pmop, ptr %2, i64 0, i32 9
  store ptr %0, ptr %9, align 8, !tbaa !32
  %10 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 4
  %11 = load i16, ptr %10, align 8
  %12 = or i16 %11, 2048
  store i16 %12, ptr %10, align 8
  tail call void @Perl_save_pushptr(ptr noundef %2, i32 noundef 9) #17
  tail call void @Perl_push_scope() #17
  tail call void @Perl_save_strlen(ptr noundef nonnull @PL_tmps_floor) #17
  %13 = load i64, ptr @PL_tmps_ix, align 8, !tbaa !59
  store i64 %13, ptr @PL_tmps_floor, align 8, !tbaa !59
  %14 = load ptr, ptr @PL_op, align 8, !tbaa !6
  tail call void @Perl_save_pushptr(ptr noundef %14, i32 noundef 18) #17
  ret ptr %2
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc zeroext i1 @S_matcher_matches_sv(ptr noundef %0, ptr noundef %1) unnamed_addr #0 {
  %3 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !6
  store ptr %0, ptr @PL_op, align 8, !tbaa !6
  %4 = load ptr, ptr @PL_stack_max, align 8, !tbaa !6
  %5 = ptrtoint ptr %4 to i64
  %6 = ptrtoint ptr %3 to i64
  %7 = sub i64 %5, %6
  %8 = icmp slt i64 %7, 8
  br i1 %8, label %9, label %11

9:                                                ; preds = %2
  %10 = tail call ptr @Perl_stack_grow(ptr noundef %3, ptr noundef %3, i64 noundef 1) #17
  br label %11

11:                                               ; preds = %2, %9
  %12 = phi ptr [ %10, %9 ], [ %3, %2 ]
  %13 = getelementptr inbounds ptr, ptr %12, i64 1
  store ptr %1, ptr %13, align 8, !tbaa !6
  store ptr %13, ptr @PL_stack_sp, align 8, !tbaa !6
  %14 = tail call ptr @Perl_pp_match() #17
  %15 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !6
  %16 = load ptr, ptr %15, align 8, !tbaa !6
  store ptr %16, ptr @PL_Sv, align 8, !tbaa !6
  %17 = icmp eq ptr %16, null
  br i1 %17, label %74, label %18

18:                                               ; preds = %11
  %19 = getelementptr inbounds %struct.sv, ptr %16, i64 0, i32 2
  %20 = load i32, ptr %19, align 4, !tbaa !49
  %21 = and i32 %20, 2097152
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %25, label %23

23:                                               ; preds = %18
  %24 = tail call zeroext i1 @Perl_sv_2bool_flags(ptr noundef nonnull %16, i32 noundef 2) #17
  br label %74

25:                                               ; preds = %18
  %26 = and i32 %20, 65280
  %27 = icmp ne i32 %26, 0
  %28 = and i32 %20, 255
  %29 = icmp eq i32 %28, 8
  %30 = or i1 %27, %29
  %31 = and i32 %20, 16826623
  %32 = icmp eq i32 %31, 16777226
  %33 = or i1 %32, %30
  br i1 %33, label %34, label %74

34:                                               ; preds = %25
  %35 = and i32 %20, 1024
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %51, label %37

37:                                               ; preds = %34
  %38 = load ptr, ptr %16, align 8, !tbaa !72
  %39 = icmp eq ptr %38, null
  br i1 %39, label %74, label %40

40:                                               ; preds = %37
  %41 = getelementptr inbounds %struct.xpv, ptr %38, i64 0, i32 2
  %42 = load i64, ptr %41, align 8, !tbaa !53
  %43 = icmp ugt i64 %42, 1
  br i1 %43, label %74, label %44

44:                                               ; preds = %40
  %45 = icmp eq i64 %42, 0
  br i1 %45, label %74, label %46

46:                                               ; preds = %44
  %47 = getelementptr inbounds %struct.sv, ptr %16, i64 0, i32 3
  %48 = load ptr, ptr %47, align 8, !tbaa !17
  %49 = load i8, ptr %48, align 1, !tbaa !17
  %50 = icmp ne i8 %49, 48
  br label %74

51:                                               ; preds = %34
  %52 = and i32 %20, 768
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %72, label %54

54:                                               ; preds = %51
  %55 = and i32 %20, 256
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %62, label %57

57:                                               ; preds = %54
  %58 = load ptr, ptr %16, align 8, !tbaa !72
  %59 = getelementptr inbounds %struct.xpviv, ptr %58, i64 0, i32 4
  %60 = load i64, ptr %59, align 8, !tbaa !17
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %62, label %74

62:                                               ; preds = %57, %54
  %63 = and i32 %20, 512
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %74, label %65

65:                                               ; preds = %62
  %66 = load ptr, ptr %16, align 8, !tbaa !72
  %67 = getelementptr inbounds %struct.xpvnv, ptr %66, i64 0, i32 5
  %68 = load double, ptr %67, align 8, !tbaa !17
  %69 = fcmp uno double %68, 0.000000e+00
  br i1 %69, label %74, label %70

70:                                               ; preds = %65
  %71 = fcmp fast une double %68, 0.000000e+00
  br label %74

72:                                               ; preds = %51
  %73 = tail call zeroext i1 @Perl_sv_2bool_flags(ptr noundef nonnull %16, i32 noundef 0) #17
  br label %74

74:                                               ; preds = %23, %72, %25, %40, %46, %44, %37, %62, %70, %65, %57, %11
  %75 = phi i1 [ false, %11 ], [ %24, %23 ], [ %73, %72 ], [ false, %25 ], [ false, %37 ], [ true, %40 ], [ false, %44 ], [ %50, %46 ], [ true, %57 ], [ false, %62 ], [ true, %65 ], [ %71, %70 ]
  %76 = getelementptr inbounds ptr, ptr %15, i64 -1
  store ptr %76, ptr @PL_stack_sp, align 8, !tbaa !6
  ret i1 %75
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @S_destroy_matcher() unnamed_addr #0 {
  %1 = load i64, ptr @PL_tmps_ix, align 8, !tbaa !59
  %2 = load i64, ptr @PL_tmps_floor, align 8, !tbaa !59
  %3 = icmp sgt i64 %1, %2
  br i1 %3, label %4, label %5

4:                                                ; preds = %0
  tail call void @Perl_free_tmps() #17
  br label %5

5:                                                ; preds = %4, %0
  tail call void @Perl_pop_scope() #17
  ret void
}

declare ptr @Perl_pp_i_eq() local_unnamed_addr #2

declare ptr @Perl_pp_eq() local_unnamed_addr #2

declare ptr @Perl_pp_seq() local_unnamed_addr #2

declare ptr @Perl_newPMOP(i32 noundef, i32 noundef) local_unnamed_addr #2

declare ptr @Perl_pp_match() local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_enterwhen() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !6
  %2 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %3 = getelementptr inbounds %struct.op, ptr %2, i64 0, i32 5
  %4 = load i8, ptr %3, align 2, !tbaa !30
  %5 = and i8 %4, 3
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %41

7:                                                ; preds = %0
  %8 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %9 = getelementptr inbounds %struct.stackinfo, ptr %8, i64 0, i32 1
  %10 = load ptr, ptr %9, align 8, !tbaa !14
  %11 = getelementptr inbounds %struct.stackinfo, ptr %8, i64 0, i32 4
  %12 = load i32, ptr %11, align 8, !tbaa !16
  %13 = icmp sgt i32 %12, -1
  br i1 %13, label %14, label %41

14:                                               ; preds = %7
  %15 = zext i32 %12 to i64
  br label %16

16:                                               ; preds = %24, %14
  %17 = phi i64 [ %15, %14 ], [ %25, %24 ]
  %18 = getelementptr inbounds %struct.context, ptr %10, i64 %17
  %19 = load i8, ptr %18, align 8, !tbaa !17
  %20 = and i8 %19, 15
  %21 = zext i8 %20 to i32
  switch i32 %21, label %24 [
    i32 8, label %22
    i32 10, label %27
    i32 9, label %27
  ]

22:                                               ; preds = %16
  %23 = icmp sgt i8 %19, -1
  br i1 %23, label %27, label %24

24:                                               ; preds = %22, %16
  %25 = add nsw i64 %17, -1
  %26 = icmp sgt i64 %17, 0
  br i1 %26, label %16, label %41, !llvm.loop !18

27:                                               ; preds = %22, %16, %16
  %28 = and i64 %17, 2147483648
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %30, label %41

30:                                               ; preds = %27
  %31 = and i64 %17, 4294967295
  %32 = getelementptr inbounds %struct.context, ptr %10, i64 %31, i32 0, i32 0, i32 1
  %33 = load i8, ptr %32, align 1, !tbaa !17
  %34 = add i8 %33, -1
  %35 = icmp ult i8 %34, 3
  br i1 %35, label %41, label %36

36:                                               ; preds = %30
  %37 = zext i8 %33 to i32
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.14, i32 noundef %37) #17
  %38 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %39 = getelementptr inbounds %struct.op, ptr %38, i64 0, i32 5
  %40 = load i8, ptr %39, align 2, !tbaa !30
  br label %41

41:                                               ; preds = %24, %30, %36, %27, %7, %0
  %42 = phi i8 [ %4, %0 ], [ %40, %36 ], [ %4, %27 ], [ %4, %7 ], [ %4, %30 ], [ %4, %24 ]
  %43 = phi i8 [ %5, %0 ], [ 0, %36 ], [ 1, %27 ], [ 1, %7 ], [ %33, %30 ], [ 1, %24 ]
  %44 = icmp sgt i8 %42, -1
  br i1 %44, label %45, label %106

45:                                               ; preds = %41
  %46 = getelementptr inbounds ptr, ptr %1, i64 -1
  %47 = load ptr, ptr %1, align 8, !tbaa !6
  store ptr %47, ptr @PL_Sv, align 8, !tbaa !6
  %48 = icmp eq ptr %47, null
  br i1 %48, label %103, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %struct.sv, ptr %47, i64 0, i32 2
  %51 = load i32, ptr %50, align 4, !tbaa !49
  %52 = and i32 %51, 2097152
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %56, label %54

54:                                               ; preds = %49
  %55 = tail call zeroext i1 @Perl_sv_2bool_flags(ptr noundef nonnull %47, i32 noundef 2) #17
  br i1 %55, label %106, label %103

56:                                               ; preds = %49
  %57 = and i32 %51, 65280
  %58 = icmp ne i32 %57, 0
  %59 = and i32 %51, 255
  %60 = icmp eq i32 %59, 8
  %61 = or i1 %58, %60
  %62 = and i32 %51, 16826623
  %63 = icmp eq i32 %62, 16777226
  %64 = or i1 %63, %61
  br i1 %64, label %65, label %103

65:                                               ; preds = %56
  %66 = and i32 %51, 1024
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %82, label %68

68:                                               ; preds = %65
  %69 = load ptr, ptr %47, align 8, !tbaa !72
  %70 = icmp eq ptr %69, null
  br i1 %70, label %103, label %71

71:                                               ; preds = %68
  %72 = getelementptr inbounds %struct.xpv, ptr %69, i64 0, i32 2
  %73 = load i64, ptr %72, align 8, !tbaa !53
  %74 = icmp ugt i64 %73, 1
  br i1 %74, label %106, label %75

75:                                               ; preds = %71
  %76 = icmp eq i64 %73, 0
  br i1 %76, label %103, label %77

77:                                               ; preds = %75
  %78 = getelementptr inbounds %struct.sv, ptr %47, i64 0, i32 3
  %79 = load ptr, ptr %78, align 8, !tbaa !17
  %80 = load i8, ptr %79, align 1, !tbaa !17
  %81 = icmp eq i8 %80, 48
  br i1 %81, label %103, label %106

82:                                               ; preds = %65
  %83 = and i32 %51, 768
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %101, label %85

85:                                               ; preds = %82
  %86 = and i32 %51, 256
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %93, label %88

88:                                               ; preds = %85
  %89 = load ptr, ptr %47, align 8, !tbaa !72
  %90 = getelementptr inbounds %struct.xpviv, ptr %89, i64 0, i32 4
  %91 = load i64, ptr %90, align 8, !tbaa !17
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %93, label %106

93:                                               ; preds = %88, %85
  %94 = and i32 %51, 512
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %103, label %96

96:                                               ; preds = %93
  %97 = load ptr, ptr %47, align 8, !tbaa !72
  %98 = getelementptr inbounds %struct.xpvnv, ptr %97, i64 0, i32 5
  %99 = load double, ptr %98, align 8, !tbaa !17
  %100 = fcmp une double %99, 0.000000e+00
  br i1 %100, label %106, label %103

101:                                              ; preds = %82
  %102 = tail call zeroext i1 @Perl_sv_2bool_flags(ptr noundef nonnull %47, i32 noundef 0) #17
  br i1 %102, label %106, label %103

103:                                              ; preds = %96, %77, %101, %54, %56, %68, %75, %93, %45
  store ptr %46, ptr @PL_stack_sp, align 8, !tbaa !6
  %104 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %105 = getelementptr inbounds %struct.logop, ptr %104, i64 0, i32 8
  br label %154

106:                                              ; preds = %77, %101, %54, %71, %88, %96, %41
  %107 = phi ptr [ %1, %41 ], [ %46, %96 ], [ %46, %88 ], [ %46, %71 ], [ %46, %54 ], [ %46, %101 ], [ %46, %77 ]
  tail call void @Perl_push_scope() #17
  tail call void @Perl_save_strlen(ptr noundef nonnull @PL_tmps_floor) #17
  %108 = load i64, ptr @PL_tmps_ix, align 8, !tbaa !59
  store i64 %108, ptr @PL_tmps_floor, align 8, !tbaa !59
  %109 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %110 = getelementptr inbounds %struct.stackinfo, ptr %109, i64 0, i32 4
  %111 = load i32, ptr %110, align 8, !tbaa !16
  %112 = getelementptr inbounds %struct.stackinfo, ptr %109, i64 0, i32 5
  %113 = load i32, ptr %112, align 4, !tbaa !171
  %114 = icmp slt i32 %111, %113
  br i1 %114, label %115, label %117

115:                                              ; preds = %106
  %116 = add nsw i32 %111, 1
  store i32 %116, ptr %110, align 8, !tbaa !16
  br label %121

117:                                              ; preds = %106
  %118 = tail call i32 @Perl_cxinc() #17
  %119 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %120 = getelementptr inbounds %struct.stackinfo, ptr %119, i64 0, i32 4
  store i32 %118, ptr %120, align 8, !tbaa !16
  br label %121

121:                                              ; preds = %117, %115
  %122 = phi i32 [ %118, %117 ], [ %116, %115 ]
  %123 = phi ptr [ %119, %117 ], [ %109, %115 ]
  %124 = getelementptr inbounds %struct.stackinfo, ptr %123, i64 0, i32 1
  %125 = load ptr, ptr %124, align 8, !tbaa !14
  %126 = sext i32 %122 to i64
  %127 = getelementptr inbounds %struct.context, ptr %125, i64 %126
  store i8 1, ptr %127, align 8, !tbaa !17
  %128 = load ptr, ptr @PL_stack_base, align 8, !tbaa !6
  %129 = ptrtoint ptr %107 to i64
  %130 = ptrtoint ptr %128 to i64
  %131 = sub i64 %129, %130
  %132 = lshr exact i64 %131, 3
  %133 = trunc i64 %132 to i32
  %134 = getelementptr inbounds %struct.block, ptr %127, i64 0, i32 3
  store i32 %133, ptr %134, align 4, !tbaa !17
  %135 = load ptr, ptr @PL_curcop, align 8, !tbaa !6
  %136 = getelementptr inbounds %struct.block, ptr %127, i64 0, i32 4
  store ptr %135, ptr %136, align 8, !tbaa !17
  %137 = load ptr, ptr @PL_markstack_ptr, align 8, !tbaa !6
  %138 = load ptr, ptr @PL_markstack, align 8, !tbaa !6
  %139 = ptrtoint ptr %137 to i64
  %140 = ptrtoint ptr %138 to i64
  %141 = sub i64 %139, %140
  %142 = lshr exact i64 %141, 2
  %143 = trunc i64 %142 to i32
  %144 = getelementptr inbounds %struct.block, ptr %127, i64 0, i32 5
  store i32 %143, ptr %144, align 8, !tbaa !17
  %145 = load i32, ptr @PL_scopestack_ix, align 4, !tbaa !31
  %146 = getelementptr inbounds %struct.block, ptr %127, i64 0, i32 6
  store i32 %145, ptr %146, align 4, !tbaa !17
  %147 = load ptr, ptr @PL_curpm, align 8, !tbaa !6
  %148 = getelementptr inbounds %struct.block, ptr %127, i64 0, i32 7
  store ptr %147, ptr %148, align 8, !tbaa !17
  %149 = getelementptr inbounds %struct.block, ptr %127, i64 0, i32 1
  store i8 %43, ptr %149, align 1, !tbaa !17
  %150 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %151 = getelementptr inbounds %struct.logop, ptr %150, i64 0, i32 8
  %152 = load ptr, ptr %151, align 8, !tbaa !28
  %153 = getelementptr inbounds %struct.block, ptr %127, i64 0, i32 8
  store ptr %152, ptr %153, align 8, !tbaa !17
  store ptr %107, ptr @PL_stack_sp, align 8, !tbaa !6
  br label %154

154:                                              ; preds = %121, %103
  %155 = phi ptr [ @PL_op, %121 ], [ %105, %103 ]
  %156 = load ptr, ptr %155, align 8, !tbaa !6
  %157 = load ptr, ptr %156, align 8, !tbaa !20
  ret ptr %157
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_leavewhen() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_stack_sp, align 8, !tbaa !6
  %2 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %3 = getelementptr inbounds %struct.stackinfo, ptr %2, i64 0, i32 4
  %4 = load i32, ptr %3, align 8, !tbaa !16
  %5 = icmp sgt i32 %4, -1
  br i1 %5, label %6, label %26

6:                                                ; preds = %0
  %7 = getelementptr inbounds %struct.stackinfo, ptr %2, i64 0, i32 1
  %8 = load ptr, ptr %7, align 8, !tbaa !14
  br label %9

9:                                                ; preds = %23, %6
  %10 = phi i32 [ %4, %6 ], [ %24, %23 ]
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %struct.context, ptr %8, i64 %11
  %13 = load i8, ptr %12, align 8, !tbaa !17
  %14 = and i8 %13, 15
  %15 = zext i8 %14 to i32
  switch i32 %15, label %23 [
    i32 3, label %33
    i32 4, label %16
    i32 7, label %16
    i32 6, label %16
  ]

16:                                               ; preds = %9, %9, %9
  %17 = zext i8 %13 to i32
  %18 = and i32 %17, 15
  %19 = icmp eq i32 %18, 5
  %20 = and i32 %17, 28
  %21 = icmp ne i32 %20, 20
  %22 = or i1 %21, %19
  br i1 %22, label %23, label %33

23:                                               ; preds = %16, %9
  %24 = add nsw i32 %10, -1
  %25 = icmp sgt i32 %10, 0
  br i1 %25, label %9, label %26, !llvm.loop !245

26:                                               ; preds = %23, %0
  %27 = load ptr, ptr @PL_op, align 8, !tbaa !6
  %28 = getelementptr inbounds %struct.op, ptr %27, i64 0, i32 5
  %29 = load i8, ptr %28, align 2, !tbaa !30
  %30 = icmp sgt i8 %29, -1
  %31 = select i1 %30, ptr @.str.107, ptr @.str.106
  %32 = tail call ptr (ptr, ...) @Perl_die(ptr noundef nonnull @.str.105, ptr noundef nonnull %31) #17
  br label %121

33:                                               ; preds = %16, %9
  %34 = add nsw i32 %4, -1
  store i32 %34, ptr %3, align 8, !tbaa !16
  %35 = sext i32 %4 to i64
  %36 = getelementptr inbounds %struct.context, ptr %8, i64 %35
  %37 = load ptr, ptr @PL_stack_base, align 8, !tbaa !6
  %38 = getelementptr inbounds %struct.block, ptr %36, i64 0, i32 3
  %39 = load i32, ptr %38, align 4, !tbaa !17
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds ptr, ptr %37, i64 %40
  %42 = getelementptr inbounds %struct.block, ptr %36, i64 0, i32 4
  %43 = load ptr, ptr %42, align 8, !tbaa !17
  store ptr %43, ptr @PL_curcop, align 8, !tbaa !6
  %44 = load ptr, ptr @PL_markstack, align 8, !tbaa !6
  %45 = getelementptr inbounds %struct.block, ptr %36, i64 0, i32 5
  %46 = load i32, ptr %45, align 8, !tbaa !17
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds i32, ptr %44, i64 %47
  store ptr %48, ptr @PL_markstack_ptr, align 8, !tbaa !6
  %49 = getelementptr inbounds %struct.block, ptr %36, i64 0, i32 6
  %50 = load i32, ptr %49, align 4, !tbaa !17
  store i32 %50, ptr @PL_scopestack_ix, align 4, !tbaa !31
  %51 = getelementptr inbounds %struct.block, ptr %36, i64 0, i32 7
  %52 = load ptr, ptr %51, align 8, !tbaa !17
  %53 = getelementptr inbounds %struct.block, ptr %36, i64 0, i32 1
  %54 = load i8, ptr %53, align 1, !tbaa !17
  %55 = zext i8 %54 to i32
  %56 = tail call fastcc ptr @S_leave_common(ptr noundef %41, ptr noundef %1, ptr noundef %41, i32 noundef %55, i32 noundef 655360, i1 noundef zeroext false)
  store ptr %52, ptr @PL_curpm, align 8, !tbaa !6
  tail call void @Perl_pop_scope() #17
  %57 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %58 = getelementptr inbounds %struct.stackinfo, ptr %57, i64 0, i32 4
  %59 = load i32, ptr %58, align 8, !tbaa !16
  %60 = icmp slt i32 %10, %59
  br i1 %60, label %61, label %63

61:                                               ; preds = %33
  tail call void @Perl_dounwind(i32 noundef %10)
  %62 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  br label %63

63:                                               ; preds = %61, %33
  %64 = phi ptr [ %62, %61 ], [ %57, %33 ]
  %65 = getelementptr inbounds %struct.stackinfo, ptr %64, i64 0, i32 1
  %66 = load ptr, ptr %65, align 8, !tbaa !14
  %67 = getelementptr inbounds %struct.context, ptr %66, i64 %11
  %68 = load i8, ptr %67, align 8, !tbaa !17
  %69 = zext i8 %68 to i32
  %70 = and i32 %69, 12
  %71 = icmp ne i32 %70, 4
  %72 = and i32 %69, 15
  %73 = icmp eq i32 %72, 5
  %74 = or i1 %71, %73
  br i1 %74, label %113, label %75

75:                                               ; preds = %63
  %76 = load i32, ptr @PL_scopestack_ix, align 4, !tbaa !31
  %77 = getelementptr inbounds %struct.stackinfo, ptr %64, i64 0, i32 4
  %78 = load i32, ptr %77, align 8, !tbaa !16
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds %struct.context, ptr %66, i64 %79
  %81 = load ptr, ptr @PL_stack_base, align 8, !tbaa !6
  %82 = getelementptr inbounds %struct.block, ptr %80, i64 0, i32 3
  %83 = load i32, ptr %82, align 4, !tbaa !17
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds ptr, ptr %81, i64 %84
  store ptr %85, ptr @PL_stack_sp, align 8, !tbaa !6
  %86 = load ptr, ptr @PL_markstack, align 8, !tbaa !6
  %87 = getelementptr inbounds %struct.block, ptr %80, i64 0, i32 5
  %88 = load i32, ptr %87, align 8, !tbaa !17
  %89 = sext i32 %88 to i64
  %90 = getelementptr inbounds i32, ptr %86, i64 %89
  store ptr %90, ptr @PL_markstack_ptr, align 8, !tbaa !6
  %91 = getelementptr inbounds %struct.block, ptr %80, i64 0, i32 6
  %92 = load i32, ptr %91, align 4, !tbaa !17
  store i32 %92, ptr @PL_scopestack_ix, align 4, !tbaa !31
  %93 = getelementptr inbounds %struct.block, ptr %80, i64 0, i32 7
  %94 = load ptr, ptr %93, align 8, !tbaa !17
  store ptr %94, ptr @PL_curpm, align 8, !tbaa !6
  %95 = icmp slt i32 %92, %76
  br i1 %95, label %96, label %101

96:                                               ; preds = %75
  %97 = load ptr, ptr @PL_scopestack, align 8, !tbaa !6
  %98 = sext i32 %92 to i64
  %99 = getelementptr inbounds i32, ptr %97, i64 %98
  %100 = load i32, ptr %99, align 4, !tbaa !31
  tail call void @Perl_leave_scope(i32 noundef %100) #17
  br label %101

101:                                              ; preds = %96, %75
  %102 = getelementptr inbounds %struct.block, ptr %80, i64 0, i32 4
  %103 = load ptr, ptr %102, align 8, !tbaa !17
  store ptr %103, ptr @PL_curcop, align 8, !tbaa !6
  %104 = load i32, ptr @PL_sig_pending, align 4, !tbaa !31
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %108, label %106

106:                                              ; preds = %101
  %107 = load ptr, ptr @PL_signalhook, align 8, !tbaa !6
  tail call void %107() #17
  br label %108

108:                                              ; preds = %101, %106
  %109 = getelementptr inbounds %struct.block, ptr %80, i64 0, i32 8, i32 0, i32 1
  %110 = load ptr, ptr %109, align 8, !tbaa !17
  %111 = getelementptr inbounds %struct.loop, ptr %110, i64 0, i32 10
  %112 = load ptr, ptr %111, align 8, !tbaa !185
  br label %121

113:                                              ; preds = %63
  %114 = load i32, ptr @PL_sig_pending, align 4, !tbaa !31
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %118, label %116

116:                                              ; preds = %113
  %117 = load ptr, ptr @PL_signalhook, align 8, !tbaa !6
  tail call void %117() #17
  br label %118

118:                                              ; preds = %113, %116
  store ptr %56, ptr @PL_stack_sp, align 8, !tbaa !6
  %119 = getelementptr inbounds %struct.block, ptr %67, i64 0, i32 8
  %120 = load ptr, ptr %119, align 8, !tbaa !17
  br label %121

121:                                              ; preds = %118, %108, %26
  %122 = phi ptr [ %32, %26 ], [ %112, %108 ], [ %120, %118 ]
  ret ptr %122
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_continue() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %2 = getelementptr inbounds %struct.stackinfo, ptr %1, i64 0, i32 4
  %3 = load i32, ptr %2, align 8, !tbaa !16
  %4 = icmp sgt i32 %3, -1
  br i1 %4, label %5, label %18

5:                                                ; preds = %0
  %6 = getelementptr inbounds %struct.stackinfo, ptr %1, i64 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !14
  br label %8

8:                                                ; preds = %15, %5
  %9 = phi i32 [ %3, %5 ], [ %16, %15 ]
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %struct.context, ptr %7, i64 %10
  %12 = load i8, ptr %11, align 8, !tbaa !17
  %13 = and i8 %12, 15
  %14 = icmp eq i8 %13, 1
  br i1 %14, label %20, label %15

15:                                               ; preds = %8
  %16 = add nsw i32 %9, -1
  %17 = icmp sgt i32 %9, 0
  br i1 %17, label %8, label %18, !llvm.loop !246

18:                                               ; preds = %15, %0
  %19 = tail call ptr (ptr, ...) @Perl_die(ptr noundef nonnull @.str.108) #17
  br label %55

20:                                               ; preds = %8
  %21 = icmp slt i32 %9, %3
  br i1 %21, label %22, label %28

22:                                               ; preds = %20
  tail call void @Perl_dounwind(i32 noundef %9)
  %23 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %24 = getelementptr inbounds %struct.stackinfo, ptr %23, i64 0, i32 1
  %25 = load ptr, ptr %24, align 8, !tbaa !14
  %26 = getelementptr inbounds %struct.stackinfo, ptr %23, i64 0, i32 4
  %27 = load i32, ptr %26, align 8, !tbaa !16
  br label %28

28:                                               ; preds = %22, %20
  %29 = phi i32 [ %27, %22 ], [ %3, %20 ]
  %30 = phi ptr [ %25, %22 ], [ %7, %20 ]
  %31 = phi ptr [ %23, %22 ], [ %1, %20 ]
  %32 = getelementptr inbounds %struct.stackinfo, ptr %31, i64 0, i32 4
  %33 = add nsw i32 %29, -1
  store i32 %33, ptr %32, align 8, !tbaa !16
  %34 = sext i32 %29 to i64
  %35 = getelementptr inbounds %struct.context, ptr %30, i64 %34
  %36 = load ptr, ptr @PL_stack_base, align 8, !tbaa !6
  %37 = getelementptr inbounds %struct.block, ptr %35, i64 0, i32 3
  %38 = load i32, ptr %37, align 4, !tbaa !17
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds ptr, ptr %36, i64 %39
  %41 = getelementptr inbounds %struct.block, ptr %35, i64 0, i32 4
  %42 = load ptr, ptr %41, align 8, !tbaa !17
  store ptr %42, ptr @PL_curcop, align 8, !tbaa !6
  %43 = load ptr, ptr @PL_markstack, align 8, !tbaa !6
  %44 = getelementptr inbounds %struct.block, ptr %35, i64 0, i32 5
  %45 = load i32, ptr %44, align 8, !tbaa !17
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds i32, ptr %43, i64 %46
  store ptr %47, ptr @PL_markstack_ptr, align 8, !tbaa !6
  %48 = getelementptr inbounds %struct.block, ptr %35, i64 0, i32 6
  %49 = load i32, ptr %48, align 4, !tbaa !17
  store i32 %49, ptr @PL_scopestack_ix, align 4, !tbaa !31
  %50 = getelementptr inbounds %struct.block, ptr %35, i64 0, i32 7
  %51 = load ptr, ptr %50, align 8, !tbaa !17
  store ptr %51, ptr @PL_curpm, align 8, !tbaa !6
  tail call void @Perl_pop_scope() #17
  store ptr %40, ptr @PL_stack_sp, align 8, !tbaa !6
  %52 = getelementptr inbounds %struct.block, ptr %35, i64 0, i32 8
  %53 = load ptr, ptr %52, align 8, !tbaa !17
  %54 = load ptr, ptr %53, align 8, !tbaa !20
  br label %55

55:                                               ; preds = %28, %18
  %56 = phi ptr [ %19, %18 ], [ %54, %28 ]
  ret ptr %56
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local ptr @Perl_pp_break() local_unnamed_addr #0 {
  %1 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %2 = getelementptr inbounds %struct.stackinfo, ptr %1, i64 0, i32 4
  %3 = load i32, ptr %2, align 8, !tbaa !16
  %4 = icmp sgt i32 %3, -1
  br i1 %4, label %5, label %29

5:                                                ; preds = %0
  %6 = getelementptr inbounds %struct.stackinfo, ptr %1, i64 0, i32 1
  %7 = load ptr, ptr %6, align 8, !tbaa !14
  br label %8

8:                                                ; preds = %26, %5
  %9 = phi i32 [ %3, %5 ], [ %27, %26 ]
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %struct.context, ptr %7, i64 %10
  %12 = load i8, ptr %11, align 8, !tbaa !17
  %13 = and i8 %12, 15
  %14 = zext i8 %13 to i32
  switch i32 %14, label %26 [
    i32 3, label %15
    i32 4, label %19
    i32 7, label %19
    i32 6, label %19
  ]

15:                                               ; preds = %8
  %16 = zext i8 %12 to i32
  %17 = and i32 %16, 15
  %18 = icmp eq i32 %17, 5
  br label %31

19:                                               ; preds = %8, %8, %8
  %20 = zext i8 %12 to i32
  %21 = and i32 %20, 15
  %22 = icmp eq i32 %21, 5
  %23 = and i32 %20, 28
  %24 = icmp ne i32 %23, 20
  %25 = or i1 %24, %22
  br i1 %25, label %26, label %31

26:                                               ; preds = %19, %8
  %27 = add nsw i32 %9, -1
  %28 = icmp sgt i32 %9, 0
  br i1 %28, label %8, label %29, !llvm.loop !245

29:                                               ; preds = %26, %0
  %30 = tail call ptr (ptr, ...) @Perl_die(ptr noundef nonnull @.str.109) #17
  br label %68

31:                                               ; preds = %19, %15
  %32 = phi i1 [ %18, %15 ], [ false, %19 ]
  %33 = phi i32 [ %16, %15 ], [ %20, %19 ]
  %34 = and i32 %33, 12
  %35 = icmp ne i32 %34, 4
  %36 = or i1 %35, %32
  br i1 %36, label %39, label %37

37:                                               ; preds = %31
  %38 = tail call ptr (ptr, ...) @Perl_die(ptr noundef nonnull @.str.110) #17
  br label %68

39:                                               ; preds = %31
  %40 = icmp slt i32 %9, %3
  br i1 %40, label %41, label %47

41:                                               ; preds = %39
  tail call void @Perl_dounwind(i32 noundef %9)
  %42 = load ptr, ptr @PL_curstackinfo, align 8, !tbaa !6
  %43 = getelementptr inbounds %struct.stackinfo, ptr %42, i64 0, i32 1
  %44 = load ptr, ptr %43, align 8, !tbaa !14
  %45 = getelementptr inbounds %struct.stackinfo, ptr %42, i64 0, i32 4
  %46 = load i32, ptr %45, align 8, !tbaa !16
  br label %47

47:                                               ; preds = %41, %39
  %48 = phi i32 [ %46, %41 ], [ %3, %39 ]
  %49 = phi ptr [ %44, %41 ], [ %7, %39 ]
  %50 = sext i32 %48 to i64
  %51 = getelementptr inbounds %struct.context, ptr %49, i64 %50
  %52 = load ptr, ptr @PL_stack_base, align 8, !tbaa !6
  %53 = getelementptr inbounds %struct.block, ptr %51, i64 0, i32 3
  %54 = load i32, ptr %53, align 4, !tbaa !17
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds ptr, ptr %52, i64 %55
  store ptr %56, ptr @PL_stack_sp, align 8, !tbaa !6
  %57 = load ptr, ptr @PL_markstack, align 8, !tbaa !6
  %58 = getelementptr inbounds %struct.block, ptr %51, i64 0, i32 5
  %59 = load i32, ptr %58, align 8, !tbaa !17
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds i32, ptr %57, i64 %60
  store ptr %61, ptr @PL_markstack_ptr, align 8, !tbaa !6
  %62 = getelementptr inbounds %struct.block, ptr %51, i64 0, i32 6
  %63 = load i32, ptr %62, align 4, !tbaa !17
  store i32 %63, ptr @PL_scopestack_ix, align 4, !tbaa !31
  %64 = getelementptr inbounds %struct.block, ptr %51, i64 0, i32 7
  %65 = load ptr, ptr %64, align 8, !tbaa !17
  store ptr %65, ptr @PL_curpm, align 8, !tbaa !6
  %66 = getelementptr inbounds %struct.block, ptr %51, i64 0, i32 8
  %67 = load ptr, ptr %66, align 8, !tbaa !17
  br label %68

68:                                               ; preds = %47, %37, %29
  %69 = phi ptr [ %30, %29 ], [ %38, %37 ], [ %67, %47 ]
  ret ptr %69
}

; Function Attrs: nofree nounwind willreturn memory(argmem: read)
declare i32 @bcmp(ptr nocapture, ptr nocapture, i64) local_unnamed_addr #14

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.umax.i32(i32, i32) #15

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #16

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smax.i32(i32, i32) #15

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare double @llvm.vector.reduce.fmul.v4f64(double, <4 x double>) #15

attributes #0 = { nounwind sspstrong uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #1 = { mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #2 = { "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #3 = { nofree norecurse nosync nounwind sspstrong memory(read, argmem: readwrite, inaccessiblemem: none) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #4 = { mustprogress nofree norecurse nosync nounwind sspstrong willreturn memory(readwrite, argmem: read, inaccessiblemem: none) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #5 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #6 = { mustprogress nofree nounwind willreturn memory(argmem: read) "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #7 = { nofree norecurse nosync nounwind sspstrong memory(read, inaccessiblemem: none) uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #8 = { noreturn nounwind "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #9 = { nounwind "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #10 = { mustprogress nofree nosync nounwind willreturn memory(none) "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #11 = { nofree nounwind "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #12 = { mustprogress nofree nounwind willreturn allockind("alloc,uninitialized") allocsize(0) memory(inaccessiblemem: readwrite) "alloc-family"="malloc" "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #13 = { nounwind returns_twice "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #14 = { nofree nounwind willreturn memory(argmem: read) }
attributes #15 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #16 = { nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #17 = { nounwind }
attributes #18 = { nounwind willreturn memory(read) }
attributes #19 = { noreturn nounwind }
attributes #20 = { nounwind willreturn memory(none) }
attributes #21 = { nounwind allocsize(0) }
attributes #22 = { nounwind returns_twice }

!llvm.module.flags = !{!0, !1, !2, !3, !4}
!llvm.ident = !{!5}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"openmp", i32 51}
!2 = !{i32 8, !"PIC Level", i32 2}
!3 = !{i32 7, !"PIE Level", i32 2}
!4 = !{i32 7, !"uwtable", i32 2}
!5 = !{!"clang version 17.0.6"}
!6 = !{!7, !7, i64 0}
!7 = !{!"any pointer", !8, i64 0}
!8 = !{!"omnipotent char", !9, i64 0}
!9 = !{!"Simple C/C++ TBAA"}
!10 = !{!11, !8, i64 35}
!11 = !{!"op", !7, i64 0, !7, i64 8, !7, i64 16, !12, i64 24, !13, i64 32, !13, i64 33, !13, i64 33, !13, i64 33, !13, i64 33, !13, i64 33, !13, i64 33, !13, i64 33, !8, i64 34, !8, i64 35}
!12 = !{!"long", !8, i64 0}
!13 = !{!"int", !8, i64 0}
!14 = !{!15, !7, i64 8}
!15 = !{!"stackinfo", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !13, i64 32, !13, i64 36, !13, i64 40, !13, i64 44}
!16 = !{!15, !13, i64 32}
!17 = !{!8, !8, i64 0}
!18 = distinct !{!18, !19}
!19 = !{!"llvm.loop.mustprogress"}
!20 = !{!11, !7, i64 0}
!21 = !{!15, !13, i64 40}
!22 = !{!15, !7, i64 16}
!23 = distinct !{!23, !19}
!24 = !{!25, !7, i64 16}
!25 = !{!"gp", !7, i64 0, !7, i64 8, !7, i64 16, !13, i64 24, !13, i64 28, !7, i64 32, !7, i64 40, !7, i64 48, !7, i64 56, !13, i64 64, !13, i64 67, !7, i64 72}
!26 = !{!27, !27, i64 0}
!27 = !{!"_Bool", !8, i64 0}
!28 = !{!29, !7, i64 48}
!29 = !{!"logop", !7, i64 0, !7, i64 8, !7, i64 16, !12, i64 24, !13, i64 32, !13, i64 33, !13, i64 33, !13, i64 33, !13, i64 33, !13, i64 33, !13, i64 33, !13, i64 33, !8, i64 34, !8, i64 35, !7, i64 40, !7, i64 48}
!30 = !{!11, !8, i64 34}
!31 = !{!13, !13, i64 0}
!32 = !{!33, !7, i64 56}
!33 = !{!"pmop", !7, i64 0, !7, i64 8, !7, i64 16, !12, i64 24, !13, i64 32, !13, i64 33, !13, i64 33, !13, i64 33, !13, i64 33, !13, i64 33, !13, i64 33, !13, i64 33, !8, i64 34, !8, i64 35, !7, i64 40, !7, i64 48, !7, i64 56, !13, i64 64, !8, i64 72, !8, i64 80, !7, i64 88}
!34 = !{!35, !7, i64 32}
!35 = !{!"regexp", !7, i64 0, !8, i64 8, !12, i64 16, !8, i64 24, !7, i64 32, !7, i64 40, !7, i64 48, !13, i64 56, !12, i64 64, !12, i64 72, !12, i64 80, !7, i64 88, !13, i64 96, !13, i64 100, !7, i64 104, !13, i64 112, !13, i64 116, !7, i64 120, !7, i64 128, !7, i64 136, !12, i64 144, !12, i64 152, !12, i64 160, !12, i64 168, !13, i64 176, !13, i64 176, !7, i64 184}
!36 = !{!37, !7, i64 88}
!37 = !{!"regexp_engine", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !7, i64 32, !7, i64 40, !7, i64 48, !7, i64 56, !7, i64 64, !7, i64 72, !7, i64 80, !7, i64 88}
!38 = !{!33, !7, i64 88}
!39 = !{!33, !13, i64 64}
!40 = !{!11, !12, i64 24}
!41 = !{!42, !13, i64 8}
!42 = !{!"sv", !7, i64 0, !13, i64 8, !13, i64 12, !8, i64 16}
!43 = !{!35, !7, i64 184}
!44 = !{i8 0, i8 2}
!45 = !{}
!46 = !{!33, !8, i64 34}
!47 = !{!33, !12, i64 24}
!48 = !{!25, !7, i64 0}
!49 = !{!42, !13, i64 12}
!50 = !{!35, !13, i64 56}
!51 = !{!52, !7, i64 0}
!52 = !{!"p5rx", !7, i64 0, !13, i64 8, !13, i64 12, !8, i64 16}
!53 = !{!54, !12, i64 16}
!54 = !{!"xpv", !7, i64 0, !8, i64 8, !12, i64 16, !8, i64 24}
!55 = !{!33, !8, i64 35}
!56 = !{!29, !7, i64 40}
!57 = !{!35, !7, i64 136}
!58 = !{!35, !7, i64 128}
!59 = !{!12, !12, i64 0}
!60 = !{!35, !13, i64 96}
!61 = !{!35, !12, i64 144}
!62 = !{!35, !12, i64 152}
!63 = !{!35, !12, i64 160}
!64 = !{!35, !7, i64 120}
!65 = !{!66, !12, i64 0}
!66 = !{!"regexp_paren_pair", !12, i64 0, !12, i64 8, !12, i64 16}
!67 = !{!66, !12, i64 8}
!68 = distinct !{!68, !19}
!69 = !{!37, !7, i64 8}
!70 = !{!71, !13, i64 56}
!71 = !{!"cop", !7, i64 0, !7, i64 8, !7, i64 16, !12, i64 24, !13, i64 32, !13, i64 33, !13, i64 33, !13, i64 33, !13, i64 33, !13, i64 33, !13, i64 33, !13, i64 33, !8, i64 34, !8, i64 35, !13, i64 36, !7, i64 40, !7, i64 48, !13, i64 56, !13, i64 60, !7, i64 64, !7, i64 72}
!72 = !{!42, !7, i64 0}
!73 = !{!33, !7, i64 0}
!74 = !{!75, !8, i64 18}
!75 = !{!"magic", !7, i64 0, !7, i64 8, !76, i64 16, !8, i64 18, !8, i64 19, !12, i64 24, !7, i64 32, !7, i64 40}
!76 = !{!"short", !8, i64 0}
!77 = !{!75, !8, i64 19}
!78 = !{!75, !7, i64 8}
!79 = !{!80, !7, i64 0}
!80 = !{!"mgvtbl", !7, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !7, i64 32, !7, i64 40, !7, i64 48, !7, i64 56}
!81 = distinct !{!81, !19}
!82 = !{!75, !12, i64 24}
!83 = distinct !{!83, !19}
!84 = !{!75, !7, i64 32}
!85 = !{!75, !7, i64 40}
!86 = distinct !{!86, !19}
!87 = distinct !{!87, !19, !88}
!88 = !{!"llvm.loop.peeled.count", i32 1}
!89 = distinct !{!89, !19}
!90 = distinct !{!90, !19}
!91 = distinct !{!91, !19}
!92 = distinct !{!92, !19}
!93 = distinct !{!93, !19}
!94 = distinct !{!94, !19}
!95 = distinct !{!95, !19}
!96 = distinct !{!96, !19}
!97 = distinct !{!97, !19}
!98 = distinct !{!98, !19}
!99 = distinct !{!99, !19}
!100 = distinct !{!100, !19}
!101 = distinct !{!101, !102}
!102 = !{!"llvm.loop.unroll.disable"}
!103 = distinct !{!103, !19}
!104 = distinct !{!104, !19}
!105 = distinct !{!105, !19, !106, !107}
!106 = !{!"llvm.loop.isvectorized", i32 1}
!107 = !{!"llvm.loop.unroll.runtime.disable"}
!108 = distinct !{!108, !19, !106, !107}
!109 = distinct !{!109, !19, !107, !106}
!110 = distinct !{!110, !19, !107, !106}
!111 = distinct !{!111, !19}
!112 = distinct !{!112, !19}
!113 = distinct !{!113, !19}
!114 = !{!115, !7, i64 0}
!115 = !{!"gv", !7, i64 0, !13, i64 8, !13, i64 12, !8, i64 16}
!116 = !{!117, !12, i64 16}
!117 = !{!"xpvgv", !7, i64 0, !8, i64 8, !12, i64 16, !8, i64 24, !8, i64 32, !8, i64 40}
!118 = distinct !{!118, !19, !106, !107}
!119 = distinct !{!119, !102}
!120 = distinct !{!120, !19, !106}
!121 = distinct !{!121, !19, !106, !107}
!122 = distinct !{!122, !19}
!123 = distinct !{!123, !102}
!124 = distinct !{!124, !19}
!125 = distinct !{!125, !19, !107, !106}
!126 = !{!127, !7, i64 40}
!127 = !{!"unop", !7, i64 0, !7, i64 8, !7, i64 16, !12, i64 24, !13, i64 32, !13, i64 33, !13, i64 33, !13, i64 33, !13, i64 33, !13, i64 33, !13, i64 33, !13, i64 33, !8, i64 34, !8, i64 35, !7, i64 40}
!128 = !{!25, !7, i64 8}
!129 = !{!130, !7, i64 0}
!130 = !{!"io", !7, i64 0, !13, i64 8, !13, i64 12, !8, i64 16}
!131 = distinct !{!131, !19}
!132 = distinct !{!132, !19}
!133 = !{!134, !7, i64 0}
!134 = !{!"cv", !7, i64 0, !13, i64 8, !13, i64 12, !8, i64 16}
!135 = !{!136, !13, i64 92}
!136 = !{!"xpvcv", !7, i64 0, !8, i64 8, !12, i64 16, !8, i64 24, !7, i64 32, !8, i64 40, !8, i64 48, !8, i64 56, !7, i64 64, !8, i64 72, !7, i64 80, !13, i64 88, !13, i64 92, !13, i64 96}
!137 = distinct !{!137, !19}
!138 = !{!25, !7, i64 40}
!139 = !{!140, !13, i64 12}
!140 = !{!"av", !7, i64 0, !13, i64 8, !13, i64 12, !8, i64 16}
!141 = !{!140, !7, i64 0}
!142 = !{!143, !12, i64 16}
!143 = !{!"xpvav", !7, i64 0, !8, i64 8, !12, i64 16, !12, i64 24, !7, i64 32}
!144 = !{!143, !7, i64 32}
!145 = !{!143, !12, i64 24}
!146 = !{!147, !8, i64 239}
!147 = !{!"yy_parser", !7, i64 0, !8, i64 8, !13, i64 16, !13, i64 20, !13, i64 24, !13, i64 28, !7, i64 32, !7, i64 40, !13, i64 48, !13, i64 52, !7, i64 56, !7, i64 64, !8, i64 72, !8, i64 73, !8, i64 74, !8, i64 75, !13, i64 76, !7, i64 80, !7, i64 88, !7, i64 96, !76, i64 104, !76, i64 106, !13, i64 108, !7, i64 112, !13, i64 120, !13, i64 124, !8, i64 128, !8, i64 129, !27, i64 130, !27, i64 131, !13, i64 132, !148, i64 136, !7, i64 160, !7, i64 168, !7, i64 176, !7, i64 184, !7, i64 192, !7, i64 200, !7, i64 208, !7, i64 216, !7, i64 224, !13, i64 232, !76, i64 236, !8, i64 238, !8, i64 239, !7, i64 240, !7, i64 248, !7, i64 256, !8, i64 264, !8, i64 272, !8, i64 312, !13, i64 332, !7, i64 336, !8, i64 344, !13, i64 600, !13, i64 604, !8, i64 608, !8, i64 609, !13, i64 610, !13, i64 610, !13, i64 610, !13, i64 610}
!148 = !{!"_sublex_info", !8, i64 0, !76, i64 2, !7, i64 8, !7, i64 16}
!149 = distinct !{!149, !19}
!150 = !{!15, !7, i64 0}
!151 = distinct !{!151, !19}
!152 = !{!115, !13, i64 12}
!153 = !{!154, !7, i64 40}
!154 = !{!"xpvio", !7, i64 0, !8, i64 8, !12, i64 16, !8, i64 24, !8, i64 32, !7, i64 40, !8, i64 48, !12, i64 56, !12, i64 64, !12, i64 72, !7, i64 80, !7, i64 88, !7, i64 96, !7, i64 104, !7, i64 112, !7, i64 120, !8, i64 128, !8, i64 129}
!155 = !{!25, !7, i64 32}
!156 = !{!157, !7, i64 200}
!157 = !{!"jmpenv", !8, i64 0, !7, i64 200, !13, i64 208, !27, i64 212}
!158 = !{!71, !7, i64 40}
!159 = !{!160, !13, i64 12}
!160 = !{!"hv", !7, i64 0, !13, i64 8, !13, i64 12, !8, i64 16}
!161 = !{!160, !7, i64 0}
!162 = !{!163, !12, i64 24}
!163 = !{!"xpvhv", !7, i64 0, !8, i64 8, !12, i64 16, !12, i64 24}
!164 = !{!165, !13, i64 28}
!165 = !{!"xpvhv_aux", !8, i64 0, !7, i64 8, !7, i64 16, !13, i64 24, !13, i64 28, !7, i64 32, !13, i64 40, !13, i64 44, !13, i64 48, !13, i64 52}
!166 = !{!71, !7, i64 48}
!167 = !{!71, !7, i64 8}
!168 = !{!71, !13, i64 36}
!169 = !{!71, !7, i64 64}
!170 = !{!71, !7, i64 72}
!171 = !{!15, !13, i64 36}
!172 = !{!173, !7, i64 8}
!173 = !{!"padlist", !12, i64 0, !7, i64 8, !13, i64 16, !13, i64 20}
!174 = distinct !{!174, !19}
!175 = distinct !{!175, !19}
!176 = distinct !{!176, !19}
!177 = distinct !{!177, !19}
!178 = !{!179, !7, i64 72}
!179 = !{!"loop", !7, i64 0, !7, i64 8, !7, i64 16, !12, i64 24, !13, i64 32, !13, i64 33, !13, i64 33, !13, i64 33, !13, i64 33, !13, i64 33, !13, i64 33, !13, i64 33, !8, i64 34, !8, i64 35, !7, i64 40, !7, i64 48, !7, i64 56, !7, i64 64, !7, i64 72}
!180 = distinct !{!180, !19}
!181 = !{!182, !7, i64 40}
!182 = !{!"pvop", !7, i64 0, !7, i64 8, !7, i64 16, !12, i64 24, !13, i64 32, !13, i64 33, !13, i64 33, !13, i64 33, !13, i64 33, !13, i64 33, !13, i64 33, !13, i64 33, !8, i64 34, !8, i64 35, !7, i64 40}
!183 = !{!182, !8, i64 35}
!184 = distinct !{!184, !19}
!185 = !{!179, !7, i64 64}
!186 = !{!179, !7, i64 56}
!187 = !{!188, !13, i64 4}
!188 = !{!"hek", !13, i64 0, !13, i64 4, !8, i64 8}
!189 = !{!134, !13, i64 8}
!190 = !{!140, !13, i64 8}
!191 = distinct !{!191, !19}
!192 = !{!11, !7, i64 8}
!193 = distinct !{!193, !19}
!194 = distinct !{!194, !19}
!195 = !{!11, !7, i64 16}
!196 = distinct !{!196, !19}
!197 = distinct !{!197, !19}
!198 = distinct !{!198, !19}
!199 = distinct !{!199, !19}
!200 = !{!136, !7, i64 32}
!201 = !{!173, !13, i64 16}
!202 = !{!71, !13, i64 60}
!203 = distinct !{!203, !19}
!204 = distinct !{!204, !19}
!205 = distinct !{!205, !19}
!206 = distinct !{!206, !19}
!207 = distinct !{!207, !19}
!208 = !{!154, !7, i64 88}
!209 = !{!154, !7, i64 120}
!210 = !{!147, !7, i64 168}
!211 = !{!157, !27, i64 212}
!212 = !{!147, !7, i64 256}
!213 = !{!134, !13, i64 12}
!214 = !{!136, !13, i64 88}
!215 = !{!136, !7, i64 80}
!216 = !{!160, !13, i64 8}
!217 = !{!218, !7, i64 0}
!218 = !{!"refcounted_he", !7, i64 0, !7, i64 8, !8, i64 16, !13, i64 24, !8, i64 28}
!219 = !{!220, !13, i64 0}
!220 = !{!"block_hooks", !13, i64 0, !7, i64 8, !7, i64 16, !7, i64 24, !7, i64 32}
!221 = !{!220, !7, i64 32}
!222 = distinct !{!222, !19}
!223 = !{!147, !8, i64 238}
!224 = !{!157, !13, i64 208}
!225 = !{!226, !13, i64 24}
!226 = !{!"stat", !12, i64 0, !12, i64 8, !12, i64 16, !13, i64 24, !13, i64 28, !13, i64 32, !13, i64 36, !12, i64 40, !12, i64 48, !12, i64 56, !12, i64 64, !227, i64 72, !227, i64 88, !227, i64 104, !8, i64 120}
!227 = !{!"timespec", !12, i64 0, !12, i64 8}
!228 = !{!229, !7, i64 40}
!229 = !{!"svop", !7, i64 0, !7, i64 8, !7, i64 16, !12, i64 24, !13, i64 32, !13, i64 33, !13, i64 33, !13, i64 33, !13, i64 33, !13, i64 33, !13, i64 33, !13, i64 33, !8, i64 34, !8, i64 35, !7, i64 40}
!230 = distinct !{!230, !19}
!231 = !{!232, !7, i64 0}
!232 = !{!"xpvmg", !7, i64 0, !8, i64 8, !12, i64 16, !8, i64 24, !8, i64 32, !8, i64 40}
!233 = distinct !{!233, !19}
!234 = distinct !{!234, !19}
!235 = !{!163, !12, i64 16}
!236 = distinct !{!236, !19}
!237 = distinct !{!237, !19}
!238 = distinct !{!238, !19}
!239 = distinct !{!239, !19}
!240 = distinct !{!240, !19}
!241 = distinct !{!241, !19}
!242 = distinct !{!242, !19}
!243 = distinct !{!243, !19}
!244 = distinct !{!244, !19}
!245 = distinct !{!245, !19}
!246 = distinct !{!246, !19}
