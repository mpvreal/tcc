; ModuleID = 'LocalReduce/MaxFunctions.c'
source_filename = "LocalReduce/MaxFunctions.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@.str = private unnamed_addr constant [27 x i8] c"LocalReduce/MaxFunctions.c\00", align 1
@.str.1 = private unnamed_addr constant [12 x i8] c"LocalReduce\00", align 1
@.str.2 = private unnamed_addr constant [46 x i8] c"indices out of bounds, this should not happen\00", align 1
@.str.3 = private unnamed_addr constant [46 x i8] c"offsets and strides access unallocated memory\00", align 1
@.str.4 = private unnamed_addr constant [38 x i8] c"weight_on is not set to a valid value\00", align 1
@.str.5 = private unnamed_addr constant [11 x i8] c"num_points\00", align 1
@.str.6 = private unnamed_addr constant [11 x i8] c"weight_sum\00", align 1

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_Max_BYTE(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr noundef readonly %7, ptr noundef readonly %8, ptr nocapture noundef readonly %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr noundef readonly %12, i32 noundef %13, ptr nocapture noundef readonly %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !6
  switch i32 %21, label %5542 [
    i32 101, label %22
    i32 102, label %628
    i32 103, label %1240
    i32 104, label %1846
    i32 105, label %2466
    i32 106, label %3078
    i32 107, label %3694
    i32 108, label %4310
    i32 109, label %4926
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %14, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !10
  %25 = getelementptr inbounds ptr, ptr %16, i64 %19
  %26 = load ptr, ptr %25, align 8, !tbaa !10
  %27 = load i8, ptr %24, align 1, !tbaa !12
  store i8 %27, ptr %26, align 1, !tbaa !12
  %28 = icmp eq i32 %13, 0
  br i1 %28, label %29, label %33

29:                                               ; preds = %22
  %30 = load i8, ptr %24, align 1, !tbaa !12
  %31 = icmp ult i8 %27, %30
  br i1 %31, label %32, label %5542

32:                                               ; preds = %29
  store i8 %30, ptr %26, align 1, !tbaa !12
  br label %5542

33:                                               ; preds = %22
  switch i32 %1, label %626 [
    i32 1, label %34
    i32 0, label %332
  ]

34:                                               ; preds = %33
  %35 = getelementptr inbounds i32, ptr %3, i64 %19
  %36 = load i32, ptr %35, align 4, !tbaa !6
  %37 = icmp eq i32 %36, 0
  %38 = icmp sgt i32 %5, 0
  br i1 %37, label %48, label %39

39:                                               ; preds = %34
  br i1 %38, label %40, label %5542

40:                                               ; preds = %39
  %41 = icmp sgt i32 %13, 1
  %42 = icmp sgt i32 %13, 0
  %43 = add i32 %13, -2
  %44 = zext i32 %43 to i64
  %45 = zext i32 %13 to i64
  %46 = add nuw i32 %5, 1
  %47 = icmp eq i32 %13, 1
  br label %194

48:                                               ; preds = %34
  br i1 %38, label %49, label %5542

49:                                               ; preds = %48
  %50 = icmp sgt i32 %13, 1
  %51 = icmp sgt i32 %13, 0
  %52 = add i32 %13, -2
  %53 = zext i32 %52 to i64
  %54 = zext i32 %13 to i64
  %55 = add nuw i32 %5, 1
  %56 = icmp eq i32 %13, 1
  br label %57

57:                                               ; preds = %49, %192
  %58 = phi i32 [ 0, %49 ], [ %144, %192 ]
  %59 = phi double [ 0.000000e+00, %49 ], [ %143, %192 ]
  %60 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %50, label %61, label %130

61:                                               ; preds = %57, %120
  %62 = phi i32 [ %129, %120 ], [ 0, %57 ]
  %63 = phi i64 [ %71, %120 ], [ %54, %57 ]
  %64 = phi i64 [ %128, %120 ], [ %53, %57 ]
  %65 = phi i32 [ %126, %120 ], [ %60, %57 ]
  %66 = sub i32 %52, %62
  %67 = tail call i32 @llvm.smin.i32(i32 %66, i32 0)
  %68 = sub i32 %66, %67
  %69 = zext i32 %68 to i64
  %70 = add nuw nsw i64 %69, 1
  %71 = add nsw i64 %63, -1
  %72 = icmp ult i32 %68, 31
  br i1 %72, label %108, label %73

73:                                               ; preds = %61
  %74 = and i64 %70, 8589934560
  %75 = sub i64 %64, %74
  br label %76

76:                                               ; preds = %76, %73
  %77 = phi i64 [ 0, %73 ], [ %100, %76 ]
  %78 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %73 ], [ %96, %76 ]
  %79 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %73 ], [ %97, %76 ]
  %80 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %73 ], [ %98, %76 ]
  %81 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %73 ], [ %99, %76 ]
  %82 = sub i64 %64, %77
  %83 = getelementptr inbounds i32, ptr %9, i64 %82
  %84 = getelementptr inbounds i32, ptr %83, i64 -7
  %85 = load <8 x i32>, ptr %84, align 4, !tbaa !6
  %86 = shufflevector <8 x i32> %85, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %87 = getelementptr inbounds i32, ptr %83, i64 -15
  %88 = load <8 x i32>, ptr %87, align 4, !tbaa !6
  %89 = shufflevector <8 x i32> %88, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %90 = getelementptr inbounds i32, ptr %83, i64 -23
  %91 = load <8 x i32>, ptr %90, align 4, !tbaa !6
  %92 = shufflevector <8 x i32> %91, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %93 = getelementptr inbounds i32, ptr %83, i64 -31
  %94 = load <8 x i32>, ptr %93, align 4, !tbaa !6
  %95 = shufflevector <8 x i32> %94, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %96 = mul <8 x i32> %86, %78
  %97 = mul <8 x i32> %89, %79
  %98 = mul <8 x i32> %92, %80
  %99 = mul <8 x i32> %95, %81
  %100 = add nuw i64 %77, 32
  %101 = icmp eq i64 %100, %74
  br i1 %101, label %102, label %76, !llvm.loop !13

102:                                              ; preds = %76
  %103 = mul <8 x i32> %97, %96
  %104 = mul <8 x i32> %98, %103
  %105 = mul <8 x i32> %99, %104
  %106 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %105)
  %107 = icmp eq i64 %70, %74
  br i1 %107, label %120, label %108

108:                                              ; preds = %61, %102
  %109 = phi i64 [ %64, %61 ], [ %75, %102 ]
  %110 = phi i32 [ 1, %61 ], [ %106, %102 ]
  br label %111

111:                                              ; preds = %108, %111
  %112 = phi i64 [ %117, %111 ], [ %109, %108 ]
  %113 = phi i32 [ %116, %111 ], [ %110, %108 ]
  %114 = getelementptr inbounds i32, ptr %9, i64 %112
  %115 = load i32, ptr %114, align 4, !tbaa !6
  %116 = mul nsw i32 %115, %113
  %117 = add nsw i64 %112, -1
  %118 = trunc i64 %112 to i32
  %119 = icmp sgt i32 %118, 0
  br i1 %119, label %111, label %120, !llvm.loop !17

120:                                              ; preds = %111, %102
  %121 = phi i32 [ %106, %102 ], [ %116, %111 ]
  %122 = and i64 %71, 4294967295
  %123 = getelementptr inbounds i32, ptr %6, i64 %122
  %124 = load i32, ptr %123, align 4, !tbaa !6
  %125 = mul nsw i32 %124, %121
  %126 = add nsw i32 %125, %65
  %127 = icmp sgt i64 %63, 2
  %128 = add nsw i64 %64, -1
  %129 = add i32 %62, 1
  br i1 %127, label %61, label %130, !llvm.loop !18

130:                                              ; preds = %120, %57
  %131 = phi i32 [ %60, %57 ], [ %126, %120 ]
  %132 = sext i32 %131 to i64
  %133 = getelementptr inbounds double, ptr %2, i64 %132
  %134 = load double, ptr %133, align 8, !tbaa !19
  %135 = getelementptr inbounds i8, ptr %24, i64 %132
  %136 = load i8, ptr %135, align 1, !tbaa !12
  %137 = fcmp fast ueq double %134, 0.000000e+00
  br i1 %137, label %142, label %138

138:                                              ; preds = %130
  %139 = load i8, ptr %26, align 1, !tbaa !12
  %140 = icmp ult i8 %139, %136
  br i1 %140, label %141, label %142

141:                                              ; preds = %138
  store i8 %136, ptr %26, align 1, !tbaa !12
  br label %142

142:                                              ; preds = %138, %141, %130
  %143 = fadd fast double %134, %59
  %144 = add nuw nsw i32 %58, 1
  br i1 %51, label %145, label %192

145:                                              ; preds = %142
  %146 = load i32, ptr %4, align 4, !tbaa !6
  %147 = load i32, ptr %12, align 4, !tbaa !6
  %148 = add nsw i32 %147, -1
  %149 = icmp slt i32 %146, %148
  br i1 %149, label %169, label %150

150:                                              ; preds = %145
  %151 = icmp eq i32 %146, %148
  br i1 %151, label %152, label %185

152:                                              ; preds = %150
  store i32 0, ptr %4, align 4, !tbaa !6
  %153 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %153, ptr %6, align 4, !tbaa !6
  br i1 %56, label %192, label %154

154:                                              ; preds = %152, %179
  %155 = phi i64 [ %183, %179 ], [ 1, %152 ]
  %156 = getelementptr inbounds i32, ptr %4, i64 %155
  %157 = load i32, ptr %156, align 4, !tbaa !6
  %158 = getelementptr inbounds i32, ptr %12, i64 %155
  %159 = load i32, ptr %158, align 4, !tbaa !6
  %160 = add nsw i32 %159, -1
  %161 = icmp slt i32 %157, %160
  br i1 %161, label %162, label %177

162:                                              ; preds = %154
  br i1 %149, label %169, label %163

163:                                              ; preds = %162
  %164 = getelementptr inbounds i32, ptr %7, i64 %155
  %165 = load i32, ptr %164, align 4, !tbaa !6
  %166 = getelementptr inbounds i32, ptr %6, i64 %155
  %167 = load i32, ptr %166, align 4, !tbaa !6
  %168 = add nsw i32 %167, %165
  store i32 %168, ptr %166, align 4, !tbaa !6
  br label %187

169:                                              ; preds = %145, %162
  %170 = phi i32 [ %157, %162 ], [ %146, %145 ]
  %171 = phi ptr [ %156, %162 ], [ %4, %145 ]
  %172 = phi i64 [ %155, %162 ], [ 0, %145 ]
  %173 = add nsw i32 %170, 1
  store i32 %173, ptr %171, align 4, !tbaa !6
  %174 = getelementptr inbounds i32, ptr %7, i64 %172
  %175 = load i32, ptr %174, align 4, !tbaa !6
  %176 = getelementptr inbounds i32, ptr %6, i64 %172
  br label %187

177:                                              ; preds = %154
  %178 = icmp eq i32 %157, %160
  br i1 %178, label %179, label %185

179:                                              ; preds = %177
  store i32 0, ptr %156, align 4, !tbaa !6
  %180 = getelementptr inbounds i32, ptr %8, i64 %155
  %181 = load i32, ptr %180, align 4, !tbaa !6
  %182 = getelementptr inbounds i32, ptr %6, i64 %155
  store i32 %181, ptr %182, align 4, !tbaa !6
  %183 = add nuw nsw i64 %155, 1
  %184 = icmp eq i64 %183, %54
  br i1 %184, label %192, label %154, !llvm.loop !21

185:                                              ; preds = %150, %177
  %186 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 54, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5547

187:                                              ; preds = %163, %169
  %188 = phi ptr [ %176, %169 ], [ %156, %163 ]
  %189 = phi i32 [ %175, %169 ], [ 1, %163 ]
  %190 = load i32, ptr %188, align 4, !tbaa !6
  %191 = add nsw i32 %190, %189
  store i32 %191, ptr %188, align 4, !tbaa !6
  br label %192

192:                                              ; preds = %179, %187, %152, %142
  %193 = icmp eq i32 %144, %5
  br i1 %193, label %5542, label %57, !llvm.loop !23

194:                                              ; preds = %40, %330
  %195 = phi i32 [ 0, %40 ], [ %279, %330 ]
  %196 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %41, label %197, label %266

197:                                              ; preds = %194, %256
  %198 = phi i32 [ %265, %256 ], [ 0, %194 ]
  %199 = phi i64 [ %207, %256 ], [ %45, %194 ]
  %200 = phi i64 [ %264, %256 ], [ %44, %194 ]
  %201 = phi i32 [ %262, %256 ], [ %196, %194 ]
  %202 = sub i32 %43, %198
  %203 = tail call i32 @llvm.smin.i32(i32 %202, i32 0)
  %204 = sub i32 %202, %203
  %205 = zext i32 %204 to i64
  %206 = add nuw nsw i64 %205, 1
  %207 = add nsw i64 %199, -1
  %208 = icmp ult i32 %204, 31
  br i1 %208, label %244, label %209

209:                                              ; preds = %197
  %210 = and i64 %206, 8589934560
  %211 = sub i64 %200, %210
  br label %212

212:                                              ; preds = %212, %209
  %213 = phi i64 [ 0, %209 ], [ %236, %212 ]
  %214 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %209 ], [ %232, %212 ]
  %215 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %209 ], [ %233, %212 ]
  %216 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %209 ], [ %234, %212 ]
  %217 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %209 ], [ %235, %212 ]
  %218 = sub i64 %200, %213
  %219 = getelementptr inbounds i32, ptr %11, i64 %218
  %220 = getelementptr inbounds i32, ptr %219, i64 -7
  %221 = load <8 x i32>, ptr %220, align 4, !tbaa !6
  %222 = shufflevector <8 x i32> %221, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %223 = getelementptr inbounds i32, ptr %219, i64 -15
  %224 = load <8 x i32>, ptr %223, align 4, !tbaa !6
  %225 = shufflevector <8 x i32> %224, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %226 = getelementptr inbounds i32, ptr %219, i64 -23
  %227 = load <8 x i32>, ptr %226, align 4, !tbaa !6
  %228 = shufflevector <8 x i32> %227, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %229 = getelementptr inbounds i32, ptr %219, i64 -31
  %230 = load <8 x i32>, ptr %229, align 4, !tbaa !6
  %231 = shufflevector <8 x i32> %230, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %232 = mul <8 x i32> %222, %214
  %233 = mul <8 x i32> %225, %215
  %234 = mul <8 x i32> %228, %216
  %235 = mul <8 x i32> %231, %217
  %236 = add nuw i64 %213, 32
  %237 = icmp eq i64 %236, %210
  br i1 %237, label %238, label %212, !llvm.loop !24

238:                                              ; preds = %212
  %239 = mul <8 x i32> %233, %232
  %240 = mul <8 x i32> %234, %239
  %241 = mul <8 x i32> %235, %240
  %242 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %241)
  %243 = icmp eq i64 %206, %210
  br i1 %243, label %256, label %244

244:                                              ; preds = %197, %238
  %245 = phi i64 [ %200, %197 ], [ %211, %238 ]
  %246 = phi i32 [ 1, %197 ], [ %242, %238 ]
  br label %247

247:                                              ; preds = %244, %247
  %248 = phi i64 [ %253, %247 ], [ %245, %244 ]
  %249 = phi i32 [ %252, %247 ], [ %246, %244 ]
  %250 = getelementptr inbounds i32, ptr %11, i64 %248
  %251 = load i32, ptr %250, align 4, !tbaa !6
  %252 = mul nsw i32 %251, %249
  %253 = add nsw i64 %248, -1
  %254 = trunc i64 %248 to i32
  %255 = icmp sgt i32 %254, 0
  br i1 %255, label %247, label %256, !llvm.loop !25

256:                                              ; preds = %247, %238
  %257 = phi i32 [ %242, %238 ], [ %252, %247 ]
  %258 = and i64 %207, 4294967295
  %259 = getelementptr inbounds i32, ptr %6, i64 %258
  %260 = load i32, ptr %259, align 4, !tbaa !6
  %261 = mul nsw i32 %260, %257
  %262 = add nsw i32 %261, %201
  %263 = icmp sgt i64 %199, 2
  %264 = add nsw i64 %200, -1
  %265 = add i32 %198, 1
  br i1 %263, label %197, label %266, !llvm.loop !26

266:                                              ; preds = %256, %194
  %267 = phi i32 [ %196, %194 ], [ %262, %256 ]
  %268 = icmp slt i32 %267, %5
  br i1 %268, label %271, label %269

269:                                              ; preds = %266
  %270 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 54, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5547

271:                                              ; preds = %266
  %272 = sext i32 %267 to i64
  %273 = getelementptr inbounds i8, ptr %24, i64 %272
  %274 = load i8, ptr %273, align 1, !tbaa !12
  %275 = load i8, ptr %26, align 1, !tbaa !12
  %276 = icmp ult i8 %275, %274
  br i1 %276, label %277, label %278

277:                                              ; preds = %271
  store i8 %274, ptr %26, align 1, !tbaa !12
  br label %278

278:                                              ; preds = %271, %277
  %279 = add nuw nsw i32 %195, 1
  br i1 %42, label %280, label %330

280:                                              ; preds = %278
  %281 = load i32, ptr %4, align 4, !tbaa !6
  %282 = load i32, ptr %12, align 4, !tbaa !6
  %283 = add nsw i32 %282, -1
  %284 = icmp slt i32 %281, %283
  br i1 %284, label %307, label %285

285:                                              ; preds = %280
  %286 = icmp eq i32 %281, %283
  br i1 %286, label %287, label %323

287:                                              ; preds = %285
  store i32 0, ptr %4, align 4, !tbaa !6
  %288 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %288, ptr %6, align 4, !tbaa !6
  br i1 %47, label %330, label %289

289:                                              ; preds = %287, %317
  %290 = phi i64 [ %321, %317 ], [ 1, %287 ]
  %291 = getelementptr inbounds i32, ptr %4, i64 %290
  %292 = load i32, ptr %291, align 4, !tbaa !6
  %293 = getelementptr inbounds i32, ptr %12, i64 %290
  %294 = load i32, ptr %293, align 4, !tbaa !6
  %295 = add nsw i32 %294, -1
  %296 = icmp slt i32 %292, %295
  br i1 %296, label %297, label %315

297:                                              ; preds = %289
  br i1 %284, label %307, label %298

298:                                              ; preds = %297
  %299 = shl i64 %290, 32
  %300 = add i64 %299, -4294967296
  %301 = ashr exact i64 %300, 32
  %302 = getelementptr inbounds i32, ptr %7, i64 %301
  %303 = load i32, ptr %302, align 4, !tbaa !6
  %304 = getelementptr inbounds i32, ptr %6, i64 %290
  %305 = load i32, ptr %304, align 4, !tbaa !6
  %306 = add nsw i32 %305, %303
  store i32 %306, ptr %304, align 4, !tbaa !6
  br label %325

307:                                              ; preds = %280, %297
  %308 = phi i32 [ %292, %297 ], [ %281, %280 ]
  %309 = phi ptr [ %291, %297 ], [ %4, %280 ]
  %310 = phi i64 [ %290, %297 ], [ 0, %280 ]
  %311 = add nsw i32 %308, 1
  store i32 %311, ptr %309, align 4, !tbaa !6
  %312 = getelementptr inbounds i32, ptr %7, i64 %310
  %313 = load i32, ptr %312, align 4, !tbaa !6
  %314 = getelementptr inbounds i32, ptr %6, i64 %310
  br label %325

315:                                              ; preds = %289
  %316 = icmp eq i32 %292, %295
  br i1 %316, label %317, label %323

317:                                              ; preds = %315
  store i32 0, ptr %291, align 4, !tbaa !6
  %318 = getelementptr inbounds i32, ptr %8, i64 %290
  %319 = load i32, ptr %318, align 4, !tbaa !6
  %320 = getelementptr inbounds i32, ptr %6, i64 %290
  store i32 %319, ptr %320, align 4, !tbaa !6
  %321 = add nuw nsw i64 %290, 1
  %322 = icmp eq i64 %321, %45
  br i1 %322, label %330, label %289, !llvm.loop !27

323:                                              ; preds = %285, %315
  %324 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 54, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5547

325:                                              ; preds = %298, %307
  %326 = phi ptr [ %314, %307 ], [ %291, %298 ]
  %327 = phi i32 [ %313, %307 ], [ 1, %298 ]
  %328 = load i32, ptr %326, align 4, !tbaa !6
  %329 = add nsw i32 %328, %327
  store i32 %329, ptr %326, align 4, !tbaa !6
  br label %330

330:                                              ; preds = %317, %325, %287, %278
  %331 = icmp eq i32 %279, %5
  br i1 %331, label %5542, label %194, !llvm.loop !28

332:                                              ; preds = %33
  %333 = getelementptr inbounds i32, ptr %3, i64 %19
  %334 = load i32, ptr %333, align 4, !tbaa !6
  %335 = icmp eq i32 %334, 0
  %336 = icmp sgt i32 %5, 0
  br i1 %335, label %346, label %337

337:                                              ; preds = %332
  br i1 %336, label %338, label %5542

338:                                              ; preds = %337
  %339 = icmp sgt i32 %13, 1
  %340 = icmp sgt i32 %13, 0
  %341 = add i32 %13, -2
  %342 = zext i32 %341 to i64
  %343 = zext i32 %13 to i64
  %344 = add nuw i32 %5, 1
  %345 = icmp eq i32 %13, 1
  br label %488

346:                                              ; preds = %332
  br i1 %336, label %347, label %5542

347:                                              ; preds = %346
  %348 = icmp sgt i32 %13, 1
  %349 = icmp sgt i32 %13, 0
  %350 = add i32 %13, -2
  %351 = zext i32 %350 to i64
  %352 = zext i32 %13 to i64
  %353 = add nuw i32 %5, 1
  %354 = icmp eq i32 %13, 1
  br label %355

355:                                              ; preds = %347, %486
  %356 = phi i32 [ 0, %347 ], [ %438, %486 ]
  %357 = phi double [ 0.000000e+00, %347 ], [ %437, %486 ]
  %358 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %348, label %359, label %428

359:                                              ; preds = %355, %418
  %360 = phi i32 [ %427, %418 ], [ 0, %355 ]
  %361 = phi i64 [ %369, %418 ], [ %352, %355 ]
  %362 = phi i64 [ %426, %418 ], [ %351, %355 ]
  %363 = phi i32 [ %424, %418 ], [ %358, %355 ]
  %364 = sub i32 %350, %360
  %365 = tail call i32 @llvm.smin.i32(i32 %364, i32 0)
  %366 = sub i32 %364, %365
  %367 = zext i32 %366 to i64
  %368 = add nuw nsw i64 %367, 1
  %369 = add nsw i64 %361, -1
  %370 = icmp ult i32 %366, 31
  br i1 %370, label %406, label %371

371:                                              ; preds = %359
  %372 = and i64 %368, 8589934560
  %373 = sub i64 %362, %372
  br label %374

374:                                              ; preds = %374, %371
  %375 = phi i64 [ 0, %371 ], [ %398, %374 ]
  %376 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %371 ], [ %394, %374 ]
  %377 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %371 ], [ %395, %374 ]
  %378 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %371 ], [ %396, %374 ]
  %379 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %371 ], [ %397, %374 ]
  %380 = sub i64 %362, %375
  %381 = getelementptr inbounds i32, ptr %9, i64 %380
  %382 = getelementptr inbounds i32, ptr %381, i64 -7
  %383 = load <8 x i32>, ptr %382, align 4, !tbaa !6
  %384 = shufflevector <8 x i32> %383, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %385 = getelementptr inbounds i32, ptr %381, i64 -15
  %386 = load <8 x i32>, ptr %385, align 4, !tbaa !6
  %387 = shufflevector <8 x i32> %386, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %388 = getelementptr inbounds i32, ptr %381, i64 -23
  %389 = load <8 x i32>, ptr %388, align 4, !tbaa !6
  %390 = shufflevector <8 x i32> %389, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %391 = getelementptr inbounds i32, ptr %381, i64 -31
  %392 = load <8 x i32>, ptr %391, align 4, !tbaa !6
  %393 = shufflevector <8 x i32> %392, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %394 = mul <8 x i32> %384, %376
  %395 = mul <8 x i32> %387, %377
  %396 = mul <8 x i32> %390, %378
  %397 = mul <8 x i32> %393, %379
  %398 = add nuw i64 %375, 32
  %399 = icmp eq i64 %398, %372
  br i1 %399, label %400, label %374, !llvm.loop !29

400:                                              ; preds = %374
  %401 = mul <8 x i32> %395, %394
  %402 = mul <8 x i32> %396, %401
  %403 = mul <8 x i32> %397, %402
  %404 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %403)
  %405 = icmp eq i64 %368, %372
  br i1 %405, label %418, label %406

406:                                              ; preds = %359, %400
  %407 = phi i64 [ %362, %359 ], [ %373, %400 ]
  %408 = phi i32 [ 1, %359 ], [ %404, %400 ]
  br label %409

409:                                              ; preds = %406, %409
  %410 = phi i64 [ %415, %409 ], [ %407, %406 ]
  %411 = phi i32 [ %414, %409 ], [ %408, %406 ]
  %412 = getelementptr inbounds i32, ptr %9, i64 %410
  %413 = load i32, ptr %412, align 4, !tbaa !6
  %414 = mul nsw i32 %413, %411
  %415 = add nsw i64 %410, -1
  %416 = trunc i64 %410 to i32
  %417 = icmp sgt i32 %416, 0
  br i1 %417, label %409, label %418, !llvm.loop !30

418:                                              ; preds = %409, %400
  %419 = phi i32 [ %404, %400 ], [ %414, %409 ]
  %420 = and i64 %369, 4294967295
  %421 = getelementptr inbounds i32, ptr %6, i64 %420
  %422 = load i32, ptr %421, align 4, !tbaa !6
  %423 = mul nsw i32 %422, %419
  %424 = add nsw i32 %423, %363
  %425 = icmp sgt i64 %361, 2
  %426 = add nsw i64 %362, -1
  %427 = add i32 %360, 1
  br i1 %425, label %359, label %428, !llvm.loop !31

428:                                              ; preds = %418, %355
  %429 = phi i32 [ %358, %355 ], [ %424, %418 ]
  %430 = sext i32 %429 to i64
  %431 = getelementptr inbounds i8, ptr %24, i64 %430
  %432 = load i8, ptr %431, align 1, !tbaa !12
  %433 = load i8, ptr %26, align 1, !tbaa !12
  %434 = icmp ult i8 %433, %432
  br i1 %434, label %435, label %436

435:                                              ; preds = %428
  store i8 %432, ptr %26, align 1, !tbaa !12
  br label %436

436:                                              ; preds = %435, %428
  %437 = fadd fast double %357, 1.000000e+00
  %438 = add nuw nsw i32 %356, 1
  br i1 %349, label %439, label %486

439:                                              ; preds = %436
  %440 = load i32, ptr %4, align 4, !tbaa !6
  %441 = load i32, ptr %12, align 4, !tbaa !6
  %442 = add nsw i32 %441, -1
  %443 = icmp slt i32 %440, %442
  br i1 %443, label %463, label %444

444:                                              ; preds = %439
  %445 = icmp eq i32 %440, %442
  br i1 %445, label %446, label %479

446:                                              ; preds = %444
  store i32 0, ptr %4, align 4, !tbaa !6
  %447 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %447, ptr %6, align 4, !tbaa !6
  br i1 %354, label %486, label %448

448:                                              ; preds = %446, %473
  %449 = phi i64 [ %477, %473 ], [ 1, %446 ]
  %450 = getelementptr inbounds i32, ptr %4, i64 %449
  %451 = load i32, ptr %450, align 4, !tbaa !6
  %452 = getelementptr inbounds i32, ptr %12, i64 %449
  %453 = load i32, ptr %452, align 4, !tbaa !6
  %454 = add nsw i32 %453, -1
  %455 = icmp slt i32 %451, %454
  br i1 %455, label %456, label %471

456:                                              ; preds = %448
  br i1 %443, label %463, label %457

457:                                              ; preds = %456
  %458 = getelementptr inbounds i32, ptr %7, i64 %449
  %459 = load i32, ptr %458, align 4, !tbaa !6
  %460 = getelementptr inbounds i32, ptr %6, i64 %449
  %461 = load i32, ptr %460, align 4, !tbaa !6
  %462 = add nsw i32 %461, %459
  store i32 %462, ptr %460, align 4, !tbaa !6
  br label %481

463:                                              ; preds = %439, %456
  %464 = phi i32 [ %451, %456 ], [ %440, %439 ]
  %465 = phi ptr [ %450, %456 ], [ %4, %439 ]
  %466 = phi i64 [ %449, %456 ], [ 0, %439 ]
  %467 = add nsw i32 %464, 1
  store i32 %467, ptr %465, align 4, !tbaa !6
  %468 = getelementptr inbounds i32, ptr %7, i64 %466
  %469 = load i32, ptr %468, align 4, !tbaa !6
  %470 = getelementptr inbounds i32, ptr %6, i64 %466
  br label %481

471:                                              ; preds = %448
  %472 = icmp eq i32 %451, %454
  br i1 %472, label %473, label %479

473:                                              ; preds = %471
  store i32 0, ptr %450, align 4, !tbaa !6
  %474 = getelementptr inbounds i32, ptr %8, i64 %449
  %475 = load i32, ptr %474, align 4, !tbaa !6
  %476 = getelementptr inbounds i32, ptr %6, i64 %449
  store i32 %475, ptr %476, align 4, !tbaa !6
  %477 = add nuw nsw i64 %449, 1
  %478 = icmp eq i64 %477, %352
  br i1 %478, label %486, label %448, !llvm.loop !32

479:                                              ; preds = %444, %471
  %480 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 54, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5547

481:                                              ; preds = %457, %463
  %482 = phi ptr [ %470, %463 ], [ %450, %457 ]
  %483 = phi i32 [ %469, %463 ], [ 1, %457 ]
  %484 = load i32, ptr %482, align 4, !tbaa !6
  %485 = add nsw i32 %484, %483
  store i32 %485, ptr %482, align 4, !tbaa !6
  br label %486

486:                                              ; preds = %473, %481, %446, %436
  %487 = icmp eq i32 %438, %5
  br i1 %487, label %5542, label %355, !llvm.loop !33

488:                                              ; preds = %338, %624
  %489 = phi i32 [ 0, %338 ], [ %573, %624 ]
  %490 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %339, label %491, label %560

491:                                              ; preds = %488, %550
  %492 = phi i32 [ %559, %550 ], [ 0, %488 ]
  %493 = phi i64 [ %501, %550 ], [ %343, %488 ]
  %494 = phi i64 [ %558, %550 ], [ %342, %488 ]
  %495 = phi i32 [ %556, %550 ], [ %490, %488 ]
  %496 = sub i32 %341, %492
  %497 = tail call i32 @llvm.smin.i32(i32 %496, i32 0)
  %498 = sub i32 %496, %497
  %499 = zext i32 %498 to i64
  %500 = add nuw nsw i64 %499, 1
  %501 = add nsw i64 %493, -1
  %502 = icmp ult i32 %498, 31
  br i1 %502, label %538, label %503

503:                                              ; preds = %491
  %504 = and i64 %500, 8589934560
  %505 = sub i64 %494, %504
  br label %506

506:                                              ; preds = %506, %503
  %507 = phi i64 [ 0, %503 ], [ %530, %506 ]
  %508 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %503 ], [ %526, %506 ]
  %509 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %503 ], [ %527, %506 ]
  %510 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %503 ], [ %528, %506 ]
  %511 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %503 ], [ %529, %506 ]
  %512 = sub i64 %494, %507
  %513 = getelementptr inbounds i32, ptr %11, i64 %512
  %514 = getelementptr inbounds i32, ptr %513, i64 -7
  %515 = load <8 x i32>, ptr %514, align 4, !tbaa !6
  %516 = shufflevector <8 x i32> %515, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %517 = getelementptr inbounds i32, ptr %513, i64 -15
  %518 = load <8 x i32>, ptr %517, align 4, !tbaa !6
  %519 = shufflevector <8 x i32> %518, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %520 = getelementptr inbounds i32, ptr %513, i64 -23
  %521 = load <8 x i32>, ptr %520, align 4, !tbaa !6
  %522 = shufflevector <8 x i32> %521, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %523 = getelementptr inbounds i32, ptr %513, i64 -31
  %524 = load <8 x i32>, ptr %523, align 4, !tbaa !6
  %525 = shufflevector <8 x i32> %524, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %526 = mul <8 x i32> %516, %508
  %527 = mul <8 x i32> %519, %509
  %528 = mul <8 x i32> %522, %510
  %529 = mul <8 x i32> %525, %511
  %530 = add nuw i64 %507, 32
  %531 = icmp eq i64 %530, %504
  br i1 %531, label %532, label %506, !llvm.loop !34

532:                                              ; preds = %506
  %533 = mul <8 x i32> %527, %526
  %534 = mul <8 x i32> %528, %533
  %535 = mul <8 x i32> %529, %534
  %536 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %535)
  %537 = icmp eq i64 %500, %504
  br i1 %537, label %550, label %538

538:                                              ; preds = %491, %532
  %539 = phi i64 [ %494, %491 ], [ %505, %532 ]
  %540 = phi i32 [ 1, %491 ], [ %536, %532 ]
  br label %541

541:                                              ; preds = %538, %541
  %542 = phi i64 [ %547, %541 ], [ %539, %538 ]
  %543 = phi i32 [ %546, %541 ], [ %540, %538 ]
  %544 = getelementptr inbounds i32, ptr %11, i64 %542
  %545 = load i32, ptr %544, align 4, !tbaa !6
  %546 = mul nsw i32 %545, %543
  %547 = add nsw i64 %542, -1
  %548 = trunc i64 %542 to i32
  %549 = icmp sgt i32 %548, 0
  br i1 %549, label %541, label %550, !llvm.loop !35

550:                                              ; preds = %541, %532
  %551 = phi i32 [ %536, %532 ], [ %546, %541 ]
  %552 = and i64 %501, 4294967295
  %553 = getelementptr inbounds i32, ptr %6, i64 %552
  %554 = load i32, ptr %553, align 4, !tbaa !6
  %555 = mul nsw i32 %554, %551
  %556 = add nsw i32 %555, %495
  %557 = icmp sgt i64 %493, 2
  %558 = add nsw i64 %494, -1
  %559 = add i32 %492, 1
  br i1 %557, label %491, label %560, !llvm.loop !36

560:                                              ; preds = %550, %488
  %561 = phi i32 [ %490, %488 ], [ %556, %550 ]
  %562 = icmp slt i32 %561, %5
  br i1 %562, label %565, label %563

563:                                              ; preds = %560
  %564 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 54, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5547

565:                                              ; preds = %560
  %566 = sext i32 %561 to i64
  %567 = getelementptr inbounds i8, ptr %24, i64 %566
  %568 = load i8, ptr %567, align 1, !tbaa !12
  %569 = load i8, ptr %26, align 1, !tbaa !12
  %570 = icmp ult i8 %569, %568
  br i1 %570, label %571, label %572

571:                                              ; preds = %565
  store i8 %568, ptr %26, align 1, !tbaa !12
  br label %572

572:                                              ; preds = %571, %565
  %573 = add nuw nsw i32 %489, 1
  br i1 %340, label %574, label %624

574:                                              ; preds = %572
  %575 = load i32, ptr %4, align 4, !tbaa !6
  %576 = load i32, ptr %12, align 4, !tbaa !6
  %577 = add nsw i32 %576, -1
  %578 = icmp slt i32 %575, %577
  br i1 %578, label %601, label %579

579:                                              ; preds = %574
  %580 = icmp eq i32 %575, %577
  br i1 %580, label %581, label %617

581:                                              ; preds = %579
  store i32 0, ptr %4, align 4, !tbaa !6
  %582 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %582, ptr %6, align 4, !tbaa !6
  br i1 %345, label %624, label %583

583:                                              ; preds = %581, %611
  %584 = phi i64 [ %615, %611 ], [ 1, %581 ]
  %585 = getelementptr inbounds i32, ptr %4, i64 %584
  %586 = load i32, ptr %585, align 4, !tbaa !6
  %587 = getelementptr inbounds i32, ptr %12, i64 %584
  %588 = load i32, ptr %587, align 4, !tbaa !6
  %589 = add nsw i32 %588, -1
  %590 = icmp slt i32 %586, %589
  br i1 %590, label %591, label %609

591:                                              ; preds = %583
  br i1 %578, label %601, label %592

592:                                              ; preds = %591
  %593 = shl i64 %584, 32
  %594 = add i64 %593, -4294967296
  %595 = ashr exact i64 %594, 32
  %596 = getelementptr inbounds i32, ptr %7, i64 %595
  %597 = load i32, ptr %596, align 4, !tbaa !6
  %598 = getelementptr inbounds i32, ptr %6, i64 %584
  %599 = load i32, ptr %598, align 4, !tbaa !6
  %600 = add nsw i32 %599, %597
  store i32 %600, ptr %598, align 4, !tbaa !6
  br label %619

601:                                              ; preds = %574, %591
  %602 = phi i32 [ %586, %591 ], [ %575, %574 ]
  %603 = phi ptr [ %585, %591 ], [ %4, %574 ]
  %604 = phi i64 [ %584, %591 ], [ 0, %574 ]
  %605 = add nsw i32 %602, 1
  store i32 %605, ptr %603, align 4, !tbaa !6
  %606 = getelementptr inbounds i32, ptr %7, i64 %604
  %607 = load i32, ptr %606, align 4, !tbaa !6
  %608 = getelementptr inbounds i32, ptr %6, i64 %604
  br label %619

609:                                              ; preds = %583
  %610 = icmp eq i32 %586, %589
  br i1 %610, label %611, label %617

611:                                              ; preds = %609
  store i32 0, ptr %585, align 4, !tbaa !6
  %612 = getelementptr inbounds i32, ptr %8, i64 %584
  %613 = load i32, ptr %612, align 4, !tbaa !6
  %614 = getelementptr inbounds i32, ptr %6, i64 %584
  store i32 %613, ptr %614, align 4, !tbaa !6
  %615 = add nuw nsw i64 %584, 1
  %616 = icmp eq i64 %615, %343
  br i1 %616, label %624, label %583, !llvm.loop !37

617:                                              ; preds = %579, %609
  %618 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 54, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5547

619:                                              ; preds = %592, %601
  %620 = phi ptr [ %608, %601 ], [ %585, %592 ]
  %621 = phi i32 [ %607, %601 ], [ 1, %592 ]
  %622 = load i32, ptr %620, align 4, !tbaa !6
  %623 = add nsw i32 %622, %621
  store i32 %623, ptr %620, align 4, !tbaa !6
  br label %624

624:                                              ; preds = %611, %619, %581, %572
  %625 = icmp eq i32 %573, %5
  br i1 %625, label %5542, label %488, !llvm.loop !38

626:                                              ; preds = %33
  %627 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 54, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5542

628:                                              ; preds = %18
  %629 = getelementptr inbounds ptr, ptr %14, i64 %19
  %630 = load ptr, ptr %629, align 8, !tbaa !10
  %631 = getelementptr inbounds ptr, ptr %16, i64 %19
  %632 = load ptr, ptr %631, align 8, !tbaa !10
  %633 = load i8, ptr %630, align 1, !tbaa !12
  %634 = zext i8 %633 to i32
  store i32 %634, ptr %632, align 4, !tbaa !6
  %635 = icmp eq i32 %13, 0
  br i1 %635, label %636, label %641

636:                                              ; preds = %628
  %637 = load i8, ptr %630, align 1, !tbaa !12
  %638 = icmp ult i8 %633, %637
  br i1 %638, label %639, label %5542

639:                                              ; preds = %636
  %640 = zext i8 %637 to i32
  store i32 %640, ptr %632, align 4, !tbaa !6
  br label %5542

641:                                              ; preds = %628
  switch i32 %1, label %1238 [
    i32 1, label %642
    i32 0, label %942
  ]

642:                                              ; preds = %641
  %643 = getelementptr inbounds i32, ptr %3, i64 %19
  %644 = load i32, ptr %643, align 4, !tbaa !6
  %645 = icmp eq i32 %644, 0
  %646 = icmp sgt i32 %5, 0
  br i1 %645, label %656, label %647

647:                                              ; preds = %642
  br i1 %646, label %648, label %5542

648:                                              ; preds = %647
  %649 = icmp sgt i32 %13, 1
  %650 = icmp sgt i32 %13, 0
  %651 = add i32 %13, -2
  %652 = zext i32 %651 to i64
  %653 = zext i32 %13 to i64
  %654 = add nuw i32 %5, 1
  %655 = icmp eq i32 %13, 1
  br label %803

656:                                              ; preds = %642
  br i1 %646, label %657, label %5542

657:                                              ; preds = %656
  %658 = icmp sgt i32 %13, 1
  %659 = icmp sgt i32 %13, 0
  %660 = add i32 %13, -2
  %661 = zext i32 %660 to i64
  %662 = zext i32 %13 to i64
  %663 = add nuw i32 %5, 1
  %664 = icmp eq i32 %13, 1
  br label %665

665:                                              ; preds = %657, %801
  %666 = phi i32 [ 0, %657 ], [ %753, %801 ]
  %667 = phi double [ 0.000000e+00, %657 ], [ %752, %801 ]
  %668 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %658, label %669, label %738

669:                                              ; preds = %665, %728
  %670 = phi i32 [ %737, %728 ], [ 0, %665 ]
  %671 = phi i64 [ %679, %728 ], [ %662, %665 ]
  %672 = phi i64 [ %736, %728 ], [ %661, %665 ]
  %673 = phi i32 [ %734, %728 ], [ %668, %665 ]
  %674 = sub i32 %660, %670
  %675 = tail call i32 @llvm.smin.i32(i32 %674, i32 0)
  %676 = sub i32 %674, %675
  %677 = zext i32 %676 to i64
  %678 = add nuw nsw i64 %677, 1
  %679 = add nsw i64 %671, -1
  %680 = icmp ult i32 %676, 31
  br i1 %680, label %716, label %681

681:                                              ; preds = %669
  %682 = and i64 %678, 8589934560
  %683 = sub i64 %672, %682
  br label %684

684:                                              ; preds = %684, %681
  %685 = phi i64 [ 0, %681 ], [ %708, %684 ]
  %686 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %681 ], [ %704, %684 ]
  %687 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %681 ], [ %705, %684 ]
  %688 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %681 ], [ %706, %684 ]
  %689 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %681 ], [ %707, %684 ]
  %690 = sub i64 %672, %685
  %691 = getelementptr inbounds i32, ptr %9, i64 %690
  %692 = getelementptr inbounds i32, ptr %691, i64 -7
  %693 = load <8 x i32>, ptr %692, align 4, !tbaa !6
  %694 = shufflevector <8 x i32> %693, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %695 = getelementptr inbounds i32, ptr %691, i64 -15
  %696 = load <8 x i32>, ptr %695, align 4, !tbaa !6
  %697 = shufflevector <8 x i32> %696, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %698 = getelementptr inbounds i32, ptr %691, i64 -23
  %699 = load <8 x i32>, ptr %698, align 4, !tbaa !6
  %700 = shufflevector <8 x i32> %699, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %701 = getelementptr inbounds i32, ptr %691, i64 -31
  %702 = load <8 x i32>, ptr %701, align 4, !tbaa !6
  %703 = shufflevector <8 x i32> %702, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %704 = mul <8 x i32> %694, %686
  %705 = mul <8 x i32> %697, %687
  %706 = mul <8 x i32> %700, %688
  %707 = mul <8 x i32> %703, %689
  %708 = add nuw i64 %685, 32
  %709 = icmp eq i64 %708, %682
  br i1 %709, label %710, label %684, !llvm.loop !39

710:                                              ; preds = %684
  %711 = mul <8 x i32> %705, %704
  %712 = mul <8 x i32> %706, %711
  %713 = mul <8 x i32> %707, %712
  %714 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %713)
  %715 = icmp eq i64 %678, %682
  br i1 %715, label %728, label %716

716:                                              ; preds = %669, %710
  %717 = phi i64 [ %672, %669 ], [ %683, %710 ]
  %718 = phi i32 [ 1, %669 ], [ %714, %710 ]
  br label %719

719:                                              ; preds = %716, %719
  %720 = phi i64 [ %725, %719 ], [ %717, %716 ]
  %721 = phi i32 [ %724, %719 ], [ %718, %716 ]
  %722 = getelementptr inbounds i32, ptr %9, i64 %720
  %723 = load i32, ptr %722, align 4, !tbaa !6
  %724 = mul nsw i32 %723, %721
  %725 = add nsw i64 %720, -1
  %726 = trunc i64 %720 to i32
  %727 = icmp sgt i32 %726, 0
  br i1 %727, label %719, label %728, !llvm.loop !40

728:                                              ; preds = %719, %710
  %729 = phi i32 [ %714, %710 ], [ %724, %719 ]
  %730 = and i64 %679, 4294967295
  %731 = getelementptr inbounds i32, ptr %6, i64 %730
  %732 = load i32, ptr %731, align 4, !tbaa !6
  %733 = mul nsw i32 %732, %729
  %734 = add nsw i32 %733, %673
  %735 = icmp sgt i64 %671, 2
  %736 = add nsw i64 %672, -1
  %737 = add i32 %670, 1
  br i1 %735, label %669, label %738, !llvm.loop !41

738:                                              ; preds = %728, %665
  %739 = phi i32 [ %668, %665 ], [ %734, %728 ]
  %740 = sext i32 %739 to i64
  %741 = getelementptr inbounds double, ptr %2, i64 %740
  %742 = load double, ptr %741, align 8, !tbaa !19
  %743 = getelementptr inbounds i8, ptr %630, i64 %740
  %744 = load i8, ptr %743, align 1, !tbaa !12
  %745 = zext i8 %744 to i32
  %746 = fcmp fast ueq double %742, 0.000000e+00
  br i1 %746, label %751, label %747

747:                                              ; preds = %738
  %748 = load i32, ptr %632, align 4, !tbaa !6
  %749 = icmp slt i32 %748, %745
  br i1 %749, label %750, label %751

750:                                              ; preds = %747
  store i32 %745, ptr %632, align 4, !tbaa !6
  br label %751

751:                                              ; preds = %747, %750, %738
  %752 = fadd fast double %742, %667
  %753 = add nuw nsw i32 %666, 1
  br i1 %659, label %754, label %801

754:                                              ; preds = %751
  %755 = load i32, ptr %4, align 4, !tbaa !6
  %756 = load i32, ptr %12, align 4, !tbaa !6
  %757 = add nsw i32 %756, -1
  %758 = icmp slt i32 %755, %757
  br i1 %758, label %778, label %759

759:                                              ; preds = %754
  %760 = icmp eq i32 %755, %757
  br i1 %760, label %761, label %794

761:                                              ; preds = %759
  store i32 0, ptr %4, align 4, !tbaa !6
  %762 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %762, ptr %6, align 4, !tbaa !6
  br i1 %664, label %801, label %763

763:                                              ; preds = %761, %788
  %764 = phi i64 [ %792, %788 ], [ 1, %761 ]
  %765 = getelementptr inbounds i32, ptr %4, i64 %764
  %766 = load i32, ptr %765, align 4, !tbaa !6
  %767 = getelementptr inbounds i32, ptr %12, i64 %764
  %768 = load i32, ptr %767, align 4, !tbaa !6
  %769 = add nsw i32 %768, -1
  %770 = icmp slt i32 %766, %769
  br i1 %770, label %771, label %786

771:                                              ; preds = %763
  br i1 %758, label %778, label %772

772:                                              ; preds = %771
  %773 = getelementptr inbounds i32, ptr %7, i64 %764
  %774 = load i32, ptr %773, align 4, !tbaa !6
  %775 = getelementptr inbounds i32, ptr %6, i64 %764
  %776 = load i32, ptr %775, align 4, !tbaa !6
  %777 = add nsw i32 %776, %774
  store i32 %777, ptr %775, align 4, !tbaa !6
  br label %796

778:                                              ; preds = %754, %771
  %779 = phi i32 [ %766, %771 ], [ %755, %754 ]
  %780 = phi ptr [ %765, %771 ], [ %4, %754 ]
  %781 = phi i64 [ %764, %771 ], [ 0, %754 ]
  %782 = add nsw i32 %779, 1
  store i32 %782, ptr %780, align 4, !tbaa !6
  %783 = getelementptr inbounds i32, ptr %7, i64 %781
  %784 = load i32, ptr %783, align 4, !tbaa !6
  %785 = getelementptr inbounds i32, ptr %6, i64 %781
  br label %796

786:                                              ; preds = %763
  %787 = icmp eq i32 %766, %769
  br i1 %787, label %788, label %794

788:                                              ; preds = %786
  store i32 0, ptr %765, align 4, !tbaa !6
  %789 = getelementptr inbounds i32, ptr %8, i64 %764
  %790 = load i32, ptr %789, align 4, !tbaa !6
  %791 = getelementptr inbounds i32, ptr %6, i64 %764
  store i32 %790, ptr %791, align 4, !tbaa !6
  %792 = add nuw nsw i64 %764, 1
  %793 = icmp eq i64 %792, %662
  br i1 %793, label %801, label %763, !llvm.loop !42

794:                                              ; preds = %759, %786
  %795 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 57, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5547

796:                                              ; preds = %772, %778
  %797 = phi ptr [ %785, %778 ], [ %765, %772 ]
  %798 = phi i32 [ %784, %778 ], [ 1, %772 ]
  %799 = load i32, ptr %797, align 4, !tbaa !6
  %800 = add nsw i32 %799, %798
  store i32 %800, ptr %797, align 4, !tbaa !6
  br label %801

801:                                              ; preds = %788, %796, %761, %751
  %802 = icmp eq i32 %753, %5
  br i1 %802, label %5542, label %665, !llvm.loop !43

803:                                              ; preds = %648, %940
  %804 = phi i32 [ 0, %648 ], [ %889, %940 ]
  %805 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %649, label %806, label %875

806:                                              ; preds = %803, %865
  %807 = phi i32 [ %874, %865 ], [ 0, %803 ]
  %808 = phi i64 [ %816, %865 ], [ %653, %803 ]
  %809 = phi i64 [ %873, %865 ], [ %652, %803 ]
  %810 = phi i32 [ %871, %865 ], [ %805, %803 ]
  %811 = sub i32 %651, %807
  %812 = tail call i32 @llvm.smin.i32(i32 %811, i32 0)
  %813 = sub i32 %811, %812
  %814 = zext i32 %813 to i64
  %815 = add nuw nsw i64 %814, 1
  %816 = add nsw i64 %808, -1
  %817 = icmp ult i32 %813, 31
  br i1 %817, label %853, label %818

818:                                              ; preds = %806
  %819 = and i64 %815, 8589934560
  %820 = sub i64 %809, %819
  br label %821

821:                                              ; preds = %821, %818
  %822 = phi i64 [ 0, %818 ], [ %845, %821 ]
  %823 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %818 ], [ %841, %821 ]
  %824 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %818 ], [ %842, %821 ]
  %825 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %818 ], [ %843, %821 ]
  %826 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %818 ], [ %844, %821 ]
  %827 = sub i64 %809, %822
  %828 = getelementptr inbounds i32, ptr %11, i64 %827
  %829 = getelementptr inbounds i32, ptr %828, i64 -7
  %830 = load <8 x i32>, ptr %829, align 4, !tbaa !6
  %831 = shufflevector <8 x i32> %830, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %832 = getelementptr inbounds i32, ptr %828, i64 -15
  %833 = load <8 x i32>, ptr %832, align 4, !tbaa !6
  %834 = shufflevector <8 x i32> %833, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %835 = getelementptr inbounds i32, ptr %828, i64 -23
  %836 = load <8 x i32>, ptr %835, align 4, !tbaa !6
  %837 = shufflevector <8 x i32> %836, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %838 = getelementptr inbounds i32, ptr %828, i64 -31
  %839 = load <8 x i32>, ptr %838, align 4, !tbaa !6
  %840 = shufflevector <8 x i32> %839, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %841 = mul <8 x i32> %831, %823
  %842 = mul <8 x i32> %834, %824
  %843 = mul <8 x i32> %837, %825
  %844 = mul <8 x i32> %840, %826
  %845 = add nuw i64 %822, 32
  %846 = icmp eq i64 %845, %819
  br i1 %846, label %847, label %821, !llvm.loop !44

847:                                              ; preds = %821
  %848 = mul <8 x i32> %842, %841
  %849 = mul <8 x i32> %843, %848
  %850 = mul <8 x i32> %844, %849
  %851 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %850)
  %852 = icmp eq i64 %815, %819
  br i1 %852, label %865, label %853

853:                                              ; preds = %806, %847
  %854 = phi i64 [ %809, %806 ], [ %820, %847 ]
  %855 = phi i32 [ 1, %806 ], [ %851, %847 ]
  br label %856

856:                                              ; preds = %853, %856
  %857 = phi i64 [ %862, %856 ], [ %854, %853 ]
  %858 = phi i32 [ %861, %856 ], [ %855, %853 ]
  %859 = getelementptr inbounds i32, ptr %11, i64 %857
  %860 = load i32, ptr %859, align 4, !tbaa !6
  %861 = mul nsw i32 %860, %858
  %862 = add nsw i64 %857, -1
  %863 = trunc i64 %857 to i32
  %864 = icmp sgt i32 %863, 0
  br i1 %864, label %856, label %865, !llvm.loop !45

865:                                              ; preds = %856, %847
  %866 = phi i32 [ %851, %847 ], [ %861, %856 ]
  %867 = and i64 %816, 4294967295
  %868 = getelementptr inbounds i32, ptr %6, i64 %867
  %869 = load i32, ptr %868, align 4, !tbaa !6
  %870 = mul nsw i32 %869, %866
  %871 = add nsw i32 %870, %810
  %872 = icmp sgt i64 %808, 2
  %873 = add nsw i64 %809, -1
  %874 = add i32 %807, 1
  br i1 %872, label %806, label %875, !llvm.loop !46

875:                                              ; preds = %865, %803
  %876 = phi i32 [ %805, %803 ], [ %871, %865 ]
  %877 = icmp slt i32 %876, %5
  br i1 %877, label %880, label %878

878:                                              ; preds = %875
  %879 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 57, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5547

880:                                              ; preds = %875
  %881 = sext i32 %876 to i64
  %882 = getelementptr inbounds i8, ptr %630, i64 %881
  %883 = load i8, ptr %882, align 1, !tbaa !12
  %884 = zext i8 %883 to i32
  %885 = load i32, ptr %632, align 4, !tbaa !6
  %886 = icmp slt i32 %885, %884
  br i1 %886, label %887, label %888

887:                                              ; preds = %880
  store i32 %884, ptr %632, align 4, !tbaa !6
  br label %888

888:                                              ; preds = %880, %887
  %889 = add nuw nsw i32 %804, 1
  br i1 %650, label %890, label %940

890:                                              ; preds = %888
  %891 = load i32, ptr %4, align 4, !tbaa !6
  %892 = load i32, ptr %12, align 4, !tbaa !6
  %893 = add nsw i32 %892, -1
  %894 = icmp slt i32 %891, %893
  br i1 %894, label %917, label %895

895:                                              ; preds = %890
  %896 = icmp eq i32 %891, %893
  br i1 %896, label %897, label %933

897:                                              ; preds = %895
  store i32 0, ptr %4, align 4, !tbaa !6
  %898 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %898, ptr %6, align 4, !tbaa !6
  br i1 %655, label %940, label %899

899:                                              ; preds = %897, %927
  %900 = phi i64 [ %931, %927 ], [ 1, %897 ]
  %901 = getelementptr inbounds i32, ptr %4, i64 %900
  %902 = load i32, ptr %901, align 4, !tbaa !6
  %903 = getelementptr inbounds i32, ptr %12, i64 %900
  %904 = load i32, ptr %903, align 4, !tbaa !6
  %905 = add nsw i32 %904, -1
  %906 = icmp slt i32 %902, %905
  br i1 %906, label %907, label %925

907:                                              ; preds = %899
  br i1 %894, label %917, label %908

908:                                              ; preds = %907
  %909 = shl i64 %900, 32
  %910 = add i64 %909, -4294967296
  %911 = ashr exact i64 %910, 32
  %912 = getelementptr inbounds i32, ptr %7, i64 %911
  %913 = load i32, ptr %912, align 4, !tbaa !6
  %914 = getelementptr inbounds i32, ptr %6, i64 %900
  %915 = load i32, ptr %914, align 4, !tbaa !6
  %916 = add nsw i32 %915, %913
  store i32 %916, ptr %914, align 4, !tbaa !6
  br label %935

917:                                              ; preds = %890, %907
  %918 = phi i32 [ %902, %907 ], [ %891, %890 ]
  %919 = phi ptr [ %901, %907 ], [ %4, %890 ]
  %920 = phi i64 [ %900, %907 ], [ 0, %890 ]
  %921 = add nsw i32 %918, 1
  store i32 %921, ptr %919, align 4, !tbaa !6
  %922 = getelementptr inbounds i32, ptr %7, i64 %920
  %923 = load i32, ptr %922, align 4, !tbaa !6
  %924 = getelementptr inbounds i32, ptr %6, i64 %920
  br label %935

925:                                              ; preds = %899
  %926 = icmp eq i32 %902, %905
  br i1 %926, label %927, label %933

927:                                              ; preds = %925
  store i32 0, ptr %901, align 4, !tbaa !6
  %928 = getelementptr inbounds i32, ptr %8, i64 %900
  %929 = load i32, ptr %928, align 4, !tbaa !6
  %930 = getelementptr inbounds i32, ptr %6, i64 %900
  store i32 %929, ptr %930, align 4, !tbaa !6
  %931 = add nuw nsw i64 %900, 1
  %932 = icmp eq i64 %931, %653
  br i1 %932, label %940, label %899, !llvm.loop !47

933:                                              ; preds = %895, %925
  %934 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 57, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5547

935:                                              ; preds = %908, %917
  %936 = phi ptr [ %924, %917 ], [ %901, %908 ]
  %937 = phi i32 [ %923, %917 ], [ 1, %908 ]
  %938 = load i32, ptr %936, align 4, !tbaa !6
  %939 = add nsw i32 %938, %937
  store i32 %939, ptr %936, align 4, !tbaa !6
  br label %940

940:                                              ; preds = %927, %935, %897, %888
  %941 = icmp eq i32 %889, %5
  br i1 %941, label %5542, label %803, !llvm.loop !48

942:                                              ; preds = %641
  %943 = getelementptr inbounds i32, ptr %3, i64 %19
  %944 = load i32, ptr %943, align 4, !tbaa !6
  %945 = icmp eq i32 %944, 0
  %946 = icmp sgt i32 %5, 0
  br i1 %945, label %956, label %947

947:                                              ; preds = %942
  br i1 %946, label %948, label %5542

948:                                              ; preds = %947
  %949 = icmp sgt i32 %13, 1
  %950 = icmp sgt i32 %13, 0
  %951 = add i32 %13, -2
  %952 = zext i32 %951 to i64
  %953 = zext i32 %13 to i64
  %954 = add nuw i32 %5, 1
  %955 = icmp eq i32 %13, 1
  br label %1099

956:                                              ; preds = %942
  br i1 %946, label %957, label %5542

957:                                              ; preds = %956
  %958 = icmp sgt i32 %13, 1
  %959 = icmp sgt i32 %13, 0
  %960 = add i32 %13, -2
  %961 = zext i32 %960 to i64
  %962 = zext i32 %13 to i64
  %963 = add nuw i32 %5, 1
  %964 = icmp eq i32 %13, 1
  br label %965

965:                                              ; preds = %957, %1097
  %966 = phi i32 [ 0, %957 ], [ %1049, %1097 ]
  %967 = phi double [ 0.000000e+00, %957 ], [ %1048, %1097 ]
  %968 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %958, label %969, label %1038

969:                                              ; preds = %965, %1028
  %970 = phi i32 [ %1037, %1028 ], [ 0, %965 ]
  %971 = phi i64 [ %979, %1028 ], [ %962, %965 ]
  %972 = phi i64 [ %1036, %1028 ], [ %961, %965 ]
  %973 = phi i32 [ %1034, %1028 ], [ %968, %965 ]
  %974 = sub i32 %960, %970
  %975 = tail call i32 @llvm.smin.i32(i32 %974, i32 0)
  %976 = sub i32 %974, %975
  %977 = zext i32 %976 to i64
  %978 = add nuw nsw i64 %977, 1
  %979 = add nsw i64 %971, -1
  %980 = icmp ult i32 %976, 31
  br i1 %980, label %1016, label %981

981:                                              ; preds = %969
  %982 = and i64 %978, 8589934560
  %983 = sub i64 %972, %982
  br label %984

984:                                              ; preds = %984, %981
  %985 = phi i64 [ 0, %981 ], [ %1008, %984 ]
  %986 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %981 ], [ %1004, %984 ]
  %987 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %981 ], [ %1005, %984 ]
  %988 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %981 ], [ %1006, %984 ]
  %989 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %981 ], [ %1007, %984 ]
  %990 = sub i64 %972, %985
  %991 = getelementptr inbounds i32, ptr %9, i64 %990
  %992 = getelementptr inbounds i32, ptr %991, i64 -7
  %993 = load <8 x i32>, ptr %992, align 4, !tbaa !6
  %994 = shufflevector <8 x i32> %993, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %995 = getelementptr inbounds i32, ptr %991, i64 -15
  %996 = load <8 x i32>, ptr %995, align 4, !tbaa !6
  %997 = shufflevector <8 x i32> %996, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %998 = getelementptr inbounds i32, ptr %991, i64 -23
  %999 = load <8 x i32>, ptr %998, align 4, !tbaa !6
  %1000 = shufflevector <8 x i32> %999, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1001 = getelementptr inbounds i32, ptr %991, i64 -31
  %1002 = load <8 x i32>, ptr %1001, align 4, !tbaa !6
  %1003 = shufflevector <8 x i32> %1002, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1004 = mul <8 x i32> %994, %986
  %1005 = mul <8 x i32> %997, %987
  %1006 = mul <8 x i32> %1000, %988
  %1007 = mul <8 x i32> %1003, %989
  %1008 = add nuw i64 %985, 32
  %1009 = icmp eq i64 %1008, %982
  br i1 %1009, label %1010, label %984, !llvm.loop !49

1010:                                             ; preds = %984
  %1011 = mul <8 x i32> %1005, %1004
  %1012 = mul <8 x i32> %1006, %1011
  %1013 = mul <8 x i32> %1007, %1012
  %1014 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1013)
  %1015 = icmp eq i64 %978, %982
  br i1 %1015, label %1028, label %1016

1016:                                             ; preds = %969, %1010
  %1017 = phi i64 [ %972, %969 ], [ %983, %1010 ]
  %1018 = phi i32 [ 1, %969 ], [ %1014, %1010 ]
  br label %1019

1019:                                             ; preds = %1016, %1019
  %1020 = phi i64 [ %1025, %1019 ], [ %1017, %1016 ]
  %1021 = phi i32 [ %1024, %1019 ], [ %1018, %1016 ]
  %1022 = getelementptr inbounds i32, ptr %9, i64 %1020
  %1023 = load i32, ptr %1022, align 4, !tbaa !6
  %1024 = mul nsw i32 %1023, %1021
  %1025 = add nsw i64 %1020, -1
  %1026 = trunc i64 %1020 to i32
  %1027 = icmp sgt i32 %1026, 0
  br i1 %1027, label %1019, label %1028, !llvm.loop !50

1028:                                             ; preds = %1019, %1010
  %1029 = phi i32 [ %1014, %1010 ], [ %1024, %1019 ]
  %1030 = and i64 %979, 4294967295
  %1031 = getelementptr inbounds i32, ptr %6, i64 %1030
  %1032 = load i32, ptr %1031, align 4, !tbaa !6
  %1033 = mul nsw i32 %1032, %1029
  %1034 = add nsw i32 %1033, %973
  %1035 = icmp sgt i64 %971, 2
  %1036 = add nsw i64 %972, -1
  %1037 = add i32 %970, 1
  br i1 %1035, label %969, label %1038, !llvm.loop !51

1038:                                             ; preds = %1028, %965
  %1039 = phi i32 [ %968, %965 ], [ %1034, %1028 ]
  %1040 = sext i32 %1039 to i64
  %1041 = getelementptr inbounds i8, ptr %630, i64 %1040
  %1042 = load i8, ptr %1041, align 1, !tbaa !12
  %1043 = zext i8 %1042 to i32
  %1044 = load i32, ptr %632, align 4, !tbaa !6
  %1045 = icmp slt i32 %1044, %1043
  br i1 %1045, label %1046, label %1047

1046:                                             ; preds = %1038
  store i32 %1043, ptr %632, align 4, !tbaa !6
  br label %1047

1047:                                             ; preds = %1046, %1038
  %1048 = fadd fast double %967, 1.000000e+00
  %1049 = add nuw nsw i32 %966, 1
  br i1 %959, label %1050, label %1097

1050:                                             ; preds = %1047
  %1051 = load i32, ptr %4, align 4, !tbaa !6
  %1052 = load i32, ptr %12, align 4, !tbaa !6
  %1053 = add nsw i32 %1052, -1
  %1054 = icmp slt i32 %1051, %1053
  br i1 %1054, label %1074, label %1055

1055:                                             ; preds = %1050
  %1056 = icmp eq i32 %1051, %1053
  br i1 %1056, label %1057, label %1090

1057:                                             ; preds = %1055
  store i32 0, ptr %4, align 4, !tbaa !6
  %1058 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1058, ptr %6, align 4, !tbaa !6
  br i1 %964, label %1097, label %1059

1059:                                             ; preds = %1057, %1084
  %1060 = phi i64 [ %1088, %1084 ], [ 1, %1057 ]
  %1061 = getelementptr inbounds i32, ptr %4, i64 %1060
  %1062 = load i32, ptr %1061, align 4, !tbaa !6
  %1063 = getelementptr inbounds i32, ptr %12, i64 %1060
  %1064 = load i32, ptr %1063, align 4, !tbaa !6
  %1065 = add nsw i32 %1064, -1
  %1066 = icmp slt i32 %1062, %1065
  br i1 %1066, label %1067, label %1082

1067:                                             ; preds = %1059
  br i1 %1054, label %1074, label %1068

1068:                                             ; preds = %1067
  %1069 = getelementptr inbounds i32, ptr %7, i64 %1060
  %1070 = load i32, ptr %1069, align 4, !tbaa !6
  %1071 = getelementptr inbounds i32, ptr %6, i64 %1060
  %1072 = load i32, ptr %1071, align 4, !tbaa !6
  %1073 = add nsw i32 %1072, %1070
  store i32 %1073, ptr %1071, align 4, !tbaa !6
  br label %1092

1074:                                             ; preds = %1050, %1067
  %1075 = phi i32 [ %1062, %1067 ], [ %1051, %1050 ]
  %1076 = phi ptr [ %1061, %1067 ], [ %4, %1050 ]
  %1077 = phi i64 [ %1060, %1067 ], [ 0, %1050 ]
  %1078 = add nsw i32 %1075, 1
  store i32 %1078, ptr %1076, align 4, !tbaa !6
  %1079 = getelementptr inbounds i32, ptr %7, i64 %1077
  %1080 = load i32, ptr %1079, align 4, !tbaa !6
  %1081 = getelementptr inbounds i32, ptr %6, i64 %1077
  br label %1092

1082:                                             ; preds = %1059
  %1083 = icmp eq i32 %1062, %1065
  br i1 %1083, label %1084, label %1090

1084:                                             ; preds = %1082
  store i32 0, ptr %1061, align 4, !tbaa !6
  %1085 = getelementptr inbounds i32, ptr %8, i64 %1060
  %1086 = load i32, ptr %1085, align 4, !tbaa !6
  %1087 = getelementptr inbounds i32, ptr %6, i64 %1060
  store i32 %1086, ptr %1087, align 4, !tbaa !6
  %1088 = add nuw nsw i64 %1060, 1
  %1089 = icmp eq i64 %1088, %962
  br i1 %1089, label %1097, label %1059, !llvm.loop !52

1090:                                             ; preds = %1055, %1082
  %1091 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 57, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5547

1092:                                             ; preds = %1068, %1074
  %1093 = phi ptr [ %1081, %1074 ], [ %1061, %1068 ]
  %1094 = phi i32 [ %1080, %1074 ], [ 1, %1068 ]
  %1095 = load i32, ptr %1093, align 4, !tbaa !6
  %1096 = add nsw i32 %1095, %1094
  store i32 %1096, ptr %1093, align 4, !tbaa !6
  br label %1097

1097:                                             ; preds = %1084, %1092, %1057, %1047
  %1098 = icmp eq i32 %1049, %5
  br i1 %1098, label %5542, label %965, !llvm.loop !53

1099:                                             ; preds = %948, %1236
  %1100 = phi i32 [ 0, %948 ], [ %1185, %1236 ]
  %1101 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %949, label %1102, label %1171

1102:                                             ; preds = %1099, %1161
  %1103 = phi i32 [ %1170, %1161 ], [ 0, %1099 ]
  %1104 = phi i64 [ %1112, %1161 ], [ %953, %1099 ]
  %1105 = phi i64 [ %1169, %1161 ], [ %952, %1099 ]
  %1106 = phi i32 [ %1167, %1161 ], [ %1101, %1099 ]
  %1107 = sub i32 %951, %1103
  %1108 = tail call i32 @llvm.smin.i32(i32 %1107, i32 0)
  %1109 = sub i32 %1107, %1108
  %1110 = zext i32 %1109 to i64
  %1111 = add nuw nsw i64 %1110, 1
  %1112 = add nsw i64 %1104, -1
  %1113 = icmp ult i32 %1109, 31
  br i1 %1113, label %1149, label %1114

1114:                                             ; preds = %1102
  %1115 = and i64 %1111, 8589934560
  %1116 = sub i64 %1105, %1115
  br label %1117

1117:                                             ; preds = %1117, %1114
  %1118 = phi i64 [ 0, %1114 ], [ %1141, %1117 ]
  %1119 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1114 ], [ %1137, %1117 ]
  %1120 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1114 ], [ %1138, %1117 ]
  %1121 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1114 ], [ %1139, %1117 ]
  %1122 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1114 ], [ %1140, %1117 ]
  %1123 = sub i64 %1105, %1118
  %1124 = getelementptr inbounds i32, ptr %11, i64 %1123
  %1125 = getelementptr inbounds i32, ptr %1124, i64 -7
  %1126 = load <8 x i32>, ptr %1125, align 4, !tbaa !6
  %1127 = shufflevector <8 x i32> %1126, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1128 = getelementptr inbounds i32, ptr %1124, i64 -15
  %1129 = load <8 x i32>, ptr %1128, align 4, !tbaa !6
  %1130 = shufflevector <8 x i32> %1129, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1131 = getelementptr inbounds i32, ptr %1124, i64 -23
  %1132 = load <8 x i32>, ptr %1131, align 4, !tbaa !6
  %1133 = shufflevector <8 x i32> %1132, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1134 = getelementptr inbounds i32, ptr %1124, i64 -31
  %1135 = load <8 x i32>, ptr %1134, align 4, !tbaa !6
  %1136 = shufflevector <8 x i32> %1135, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1137 = mul <8 x i32> %1127, %1119
  %1138 = mul <8 x i32> %1130, %1120
  %1139 = mul <8 x i32> %1133, %1121
  %1140 = mul <8 x i32> %1136, %1122
  %1141 = add nuw i64 %1118, 32
  %1142 = icmp eq i64 %1141, %1115
  br i1 %1142, label %1143, label %1117, !llvm.loop !54

1143:                                             ; preds = %1117
  %1144 = mul <8 x i32> %1138, %1137
  %1145 = mul <8 x i32> %1139, %1144
  %1146 = mul <8 x i32> %1140, %1145
  %1147 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1146)
  %1148 = icmp eq i64 %1111, %1115
  br i1 %1148, label %1161, label %1149

1149:                                             ; preds = %1102, %1143
  %1150 = phi i64 [ %1105, %1102 ], [ %1116, %1143 ]
  %1151 = phi i32 [ 1, %1102 ], [ %1147, %1143 ]
  br label %1152

1152:                                             ; preds = %1149, %1152
  %1153 = phi i64 [ %1158, %1152 ], [ %1150, %1149 ]
  %1154 = phi i32 [ %1157, %1152 ], [ %1151, %1149 ]
  %1155 = getelementptr inbounds i32, ptr %11, i64 %1153
  %1156 = load i32, ptr %1155, align 4, !tbaa !6
  %1157 = mul nsw i32 %1156, %1154
  %1158 = add nsw i64 %1153, -1
  %1159 = trunc i64 %1153 to i32
  %1160 = icmp sgt i32 %1159, 0
  br i1 %1160, label %1152, label %1161, !llvm.loop !55

1161:                                             ; preds = %1152, %1143
  %1162 = phi i32 [ %1147, %1143 ], [ %1157, %1152 ]
  %1163 = and i64 %1112, 4294967295
  %1164 = getelementptr inbounds i32, ptr %6, i64 %1163
  %1165 = load i32, ptr %1164, align 4, !tbaa !6
  %1166 = mul nsw i32 %1165, %1162
  %1167 = add nsw i32 %1166, %1106
  %1168 = icmp sgt i64 %1104, 2
  %1169 = add nsw i64 %1105, -1
  %1170 = add i32 %1103, 1
  br i1 %1168, label %1102, label %1171, !llvm.loop !56

1171:                                             ; preds = %1161, %1099
  %1172 = phi i32 [ %1101, %1099 ], [ %1167, %1161 ]
  %1173 = icmp slt i32 %1172, %5
  br i1 %1173, label %1176, label %1174

1174:                                             ; preds = %1171
  %1175 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 57, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5547

1176:                                             ; preds = %1171
  %1177 = sext i32 %1172 to i64
  %1178 = getelementptr inbounds i8, ptr %630, i64 %1177
  %1179 = load i8, ptr %1178, align 1, !tbaa !12
  %1180 = zext i8 %1179 to i32
  %1181 = load i32, ptr %632, align 4, !tbaa !6
  %1182 = icmp slt i32 %1181, %1180
  br i1 %1182, label %1183, label %1184

1183:                                             ; preds = %1176
  store i32 %1180, ptr %632, align 4, !tbaa !6
  br label %1184

1184:                                             ; preds = %1183, %1176
  %1185 = add nuw nsw i32 %1100, 1
  br i1 %950, label %1186, label %1236

1186:                                             ; preds = %1184
  %1187 = load i32, ptr %4, align 4, !tbaa !6
  %1188 = load i32, ptr %12, align 4, !tbaa !6
  %1189 = add nsw i32 %1188, -1
  %1190 = icmp slt i32 %1187, %1189
  br i1 %1190, label %1213, label %1191

1191:                                             ; preds = %1186
  %1192 = icmp eq i32 %1187, %1189
  br i1 %1192, label %1193, label %1229

1193:                                             ; preds = %1191
  store i32 0, ptr %4, align 4, !tbaa !6
  %1194 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1194, ptr %6, align 4, !tbaa !6
  br i1 %955, label %1236, label %1195

1195:                                             ; preds = %1193, %1223
  %1196 = phi i64 [ %1227, %1223 ], [ 1, %1193 ]
  %1197 = getelementptr inbounds i32, ptr %4, i64 %1196
  %1198 = load i32, ptr %1197, align 4, !tbaa !6
  %1199 = getelementptr inbounds i32, ptr %12, i64 %1196
  %1200 = load i32, ptr %1199, align 4, !tbaa !6
  %1201 = add nsw i32 %1200, -1
  %1202 = icmp slt i32 %1198, %1201
  br i1 %1202, label %1203, label %1221

1203:                                             ; preds = %1195
  br i1 %1190, label %1213, label %1204

1204:                                             ; preds = %1203
  %1205 = shl i64 %1196, 32
  %1206 = add i64 %1205, -4294967296
  %1207 = ashr exact i64 %1206, 32
  %1208 = getelementptr inbounds i32, ptr %7, i64 %1207
  %1209 = load i32, ptr %1208, align 4, !tbaa !6
  %1210 = getelementptr inbounds i32, ptr %6, i64 %1196
  %1211 = load i32, ptr %1210, align 4, !tbaa !6
  %1212 = add nsw i32 %1211, %1209
  store i32 %1212, ptr %1210, align 4, !tbaa !6
  br label %1231

1213:                                             ; preds = %1186, %1203
  %1214 = phi i32 [ %1198, %1203 ], [ %1187, %1186 ]
  %1215 = phi ptr [ %1197, %1203 ], [ %4, %1186 ]
  %1216 = phi i64 [ %1196, %1203 ], [ 0, %1186 ]
  %1217 = add nsw i32 %1214, 1
  store i32 %1217, ptr %1215, align 4, !tbaa !6
  %1218 = getelementptr inbounds i32, ptr %7, i64 %1216
  %1219 = load i32, ptr %1218, align 4, !tbaa !6
  %1220 = getelementptr inbounds i32, ptr %6, i64 %1216
  br label %1231

1221:                                             ; preds = %1195
  %1222 = icmp eq i32 %1198, %1201
  br i1 %1222, label %1223, label %1229

1223:                                             ; preds = %1221
  store i32 0, ptr %1197, align 4, !tbaa !6
  %1224 = getelementptr inbounds i32, ptr %8, i64 %1196
  %1225 = load i32, ptr %1224, align 4, !tbaa !6
  %1226 = getelementptr inbounds i32, ptr %6, i64 %1196
  store i32 %1225, ptr %1226, align 4, !tbaa !6
  %1227 = add nuw nsw i64 %1196, 1
  %1228 = icmp eq i64 %1227, %953
  br i1 %1228, label %1236, label %1195, !llvm.loop !57

1229:                                             ; preds = %1191, %1221
  %1230 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 57, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5547

1231:                                             ; preds = %1204, %1213
  %1232 = phi ptr [ %1220, %1213 ], [ %1197, %1204 ]
  %1233 = phi i32 [ %1219, %1213 ], [ 1, %1204 ]
  %1234 = load i32, ptr %1232, align 4, !tbaa !6
  %1235 = add nsw i32 %1234, %1233
  store i32 %1235, ptr %1232, align 4, !tbaa !6
  br label %1236

1236:                                             ; preds = %1223, %1231, %1193, %1184
  %1237 = icmp eq i32 %1185, %5
  br i1 %1237, label %5542, label %1099, !llvm.loop !58

1238:                                             ; preds = %641
  %1239 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 57, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5542

1240:                                             ; preds = %18
  %1241 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1242 = load ptr, ptr %1241, align 8, !tbaa !10
  %1243 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1244 = load ptr, ptr %1243, align 8, !tbaa !10
  %1245 = load i8, ptr %1242, align 1, !tbaa !12
  store i8 %1245, ptr %1244, align 1, !tbaa !12
  %1246 = icmp eq i32 %13, 0
  br i1 %1246, label %1247, label %1251

1247:                                             ; preds = %1240
  %1248 = load i8, ptr %1242, align 1, !tbaa !12
  %1249 = icmp slt i8 %1245, %1248
  br i1 %1249, label %1250, label %5542

1250:                                             ; preds = %1247
  store i8 %1248, ptr %1244, align 1, !tbaa !12
  br label %5542

1251:                                             ; preds = %1240
  switch i32 %1, label %1844 [
    i32 1, label %1252
    i32 0, label %1550
  ]

1252:                                             ; preds = %1251
  %1253 = getelementptr inbounds i32, ptr %3, i64 %19
  %1254 = load i32, ptr %1253, align 4, !tbaa !6
  %1255 = icmp eq i32 %1254, 0
  %1256 = icmp sgt i32 %5, 0
  br i1 %1255, label %1266, label %1257

1257:                                             ; preds = %1252
  br i1 %1256, label %1258, label %5542

1258:                                             ; preds = %1257
  %1259 = icmp sgt i32 %13, 1
  %1260 = icmp sgt i32 %13, 0
  %1261 = add i32 %13, -2
  %1262 = zext i32 %1261 to i64
  %1263 = zext i32 %13 to i64
  %1264 = add nuw i32 %5, 1
  %1265 = icmp eq i32 %13, 1
  br label %1412

1266:                                             ; preds = %1252
  br i1 %1256, label %1267, label %5542

1267:                                             ; preds = %1266
  %1268 = icmp sgt i32 %13, 1
  %1269 = icmp sgt i32 %13, 0
  %1270 = add i32 %13, -2
  %1271 = zext i32 %1270 to i64
  %1272 = zext i32 %13 to i64
  %1273 = add nuw i32 %5, 1
  %1274 = icmp eq i32 %13, 1
  br label %1275

1275:                                             ; preds = %1267, %1410
  %1276 = phi i32 [ 0, %1267 ], [ %1362, %1410 ]
  %1277 = phi double [ 0.000000e+00, %1267 ], [ %1361, %1410 ]
  %1278 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1268, label %1279, label %1348

1279:                                             ; preds = %1275, %1338
  %1280 = phi i32 [ %1347, %1338 ], [ 0, %1275 ]
  %1281 = phi i64 [ %1289, %1338 ], [ %1272, %1275 ]
  %1282 = phi i64 [ %1346, %1338 ], [ %1271, %1275 ]
  %1283 = phi i32 [ %1344, %1338 ], [ %1278, %1275 ]
  %1284 = sub i32 %1270, %1280
  %1285 = tail call i32 @llvm.smin.i32(i32 %1284, i32 0)
  %1286 = sub i32 %1284, %1285
  %1287 = zext i32 %1286 to i64
  %1288 = add nuw nsw i64 %1287, 1
  %1289 = add nsw i64 %1281, -1
  %1290 = icmp ult i32 %1286, 31
  br i1 %1290, label %1326, label %1291

1291:                                             ; preds = %1279
  %1292 = and i64 %1288, 8589934560
  %1293 = sub i64 %1282, %1292
  br label %1294

1294:                                             ; preds = %1294, %1291
  %1295 = phi i64 [ 0, %1291 ], [ %1318, %1294 ]
  %1296 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1291 ], [ %1314, %1294 ]
  %1297 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1291 ], [ %1315, %1294 ]
  %1298 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1291 ], [ %1316, %1294 ]
  %1299 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1291 ], [ %1317, %1294 ]
  %1300 = sub i64 %1282, %1295
  %1301 = getelementptr inbounds i32, ptr %9, i64 %1300
  %1302 = getelementptr inbounds i32, ptr %1301, i64 -7
  %1303 = load <8 x i32>, ptr %1302, align 4, !tbaa !6
  %1304 = shufflevector <8 x i32> %1303, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1305 = getelementptr inbounds i32, ptr %1301, i64 -15
  %1306 = load <8 x i32>, ptr %1305, align 4, !tbaa !6
  %1307 = shufflevector <8 x i32> %1306, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1308 = getelementptr inbounds i32, ptr %1301, i64 -23
  %1309 = load <8 x i32>, ptr %1308, align 4, !tbaa !6
  %1310 = shufflevector <8 x i32> %1309, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1311 = getelementptr inbounds i32, ptr %1301, i64 -31
  %1312 = load <8 x i32>, ptr %1311, align 4, !tbaa !6
  %1313 = shufflevector <8 x i32> %1312, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1314 = mul <8 x i32> %1304, %1296
  %1315 = mul <8 x i32> %1307, %1297
  %1316 = mul <8 x i32> %1310, %1298
  %1317 = mul <8 x i32> %1313, %1299
  %1318 = add nuw i64 %1295, 32
  %1319 = icmp eq i64 %1318, %1292
  br i1 %1319, label %1320, label %1294, !llvm.loop !59

1320:                                             ; preds = %1294
  %1321 = mul <8 x i32> %1315, %1314
  %1322 = mul <8 x i32> %1316, %1321
  %1323 = mul <8 x i32> %1317, %1322
  %1324 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1323)
  %1325 = icmp eq i64 %1288, %1292
  br i1 %1325, label %1338, label %1326

1326:                                             ; preds = %1279, %1320
  %1327 = phi i64 [ %1282, %1279 ], [ %1293, %1320 ]
  %1328 = phi i32 [ 1, %1279 ], [ %1324, %1320 ]
  br label %1329

1329:                                             ; preds = %1326, %1329
  %1330 = phi i64 [ %1335, %1329 ], [ %1327, %1326 ]
  %1331 = phi i32 [ %1334, %1329 ], [ %1328, %1326 ]
  %1332 = getelementptr inbounds i32, ptr %9, i64 %1330
  %1333 = load i32, ptr %1332, align 4, !tbaa !6
  %1334 = mul nsw i32 %1333, %1331
  %1335 = add nsw i64 %1330, -1
  %1336 = trunc i64 %1330 to i32
  %1337 = icmp sgt i32 %1336, 0
  br i1 %1337, label %1329, label %1338, !llvm.loop !60

1338:                                             ; preds = %1329, %1320
  %1339 = phi i32 [ %1324, %1320 ], [ %1334, %1329 ]
  %1340 = and i64 %1289, 4294967295
  %1341 = getelementptr inbounds i32, ptr %6, i64 %1340
  %1342 = load i32, ptr %1341, align 4, !tbaa !6
  %1343 = mul nsw i32 %1342, %1339
  %1344 = add nsw i32 %1343, %1283
  %1345 = icmp sgt i64 %1281, 2
  %1346 = add nsw i64 %1282, -1
  %1347 = add i32 %1280, 1
  br i1 %1345, label %1279, label %1348, !llvm.loop !61

1348:                                             ; preds = %1338, %1275
  %1349 = phi i32 [ %1278, %1275 ], [ %1344, %1338 ]
  %1350 = sext i32 %1349 to i64
  %1351 = getelementptr inbounds double, ptr %2, i64 %1350
  %1352 = load double, ptr %1351, align 8, !tbaa !19
  %1353 = getelementptr inbounds i8, ptr %1242, i64 %1350
  %1354 = load i8, ptr %1353, align 1, !tbaa !12
  %1355 = fcmp fast ueq double %1352, 0.000000e+00
  br i1 %1355, label %1360, label %1356

1356:                                             ; preds = %1348
  %1357 = load i8, ptr %1244, align 1, !tbaa !12
  %1358 = icmp slt i8 %1357, %1354
  br i1 %1358, label %1359, label %1360

1359:                                             ; preds = %1356
  store i8 %1354, ptr %1244, align 1, !tbaa !12
  br label %1360

1360:                                             ; preds = %1356, %1359, %1348
  %1361 = fadd fast double %1352, %1277
  %1362 = add nuw nsw i32 %1276, 1
  br i1 %1269, label %1363, label %1410

1363:                                             ; preds = %1360
  %1364 = load i32, ptr %4, align 4, !tbaa !6
  %1365 = load i32, ptr %12, align 4, !tbaa !6
  %1366 = add nsw i32 %1365, -1
  %1367 = icmp slt i32 %1364, %1366
  br i1 %1367, label %1387, label %1368

1368:                                             ; preds = %1363
  %1369 = icmp eq i32 %1364, %1366
  br i1 %1369, label %1370, label %1403

1370:                                             ; preds = %1368
  store i32 0, ptr %4, align 4, !tbaa !6
  %1371 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1371, ptr %6, align 4, !tbaa !6
  br i1 %1274, label %1410, label %1372

1372:                                             ; preds = %1370, %1397
  %1373 = phi i64 [ %1401, %1397 ], [ 1, %1370 ]
  %1374 = getelementptr inbounds i32, ptr %4, i64 %1373
  %1375 = load i32, ptr %1374, align 4, !tbaa !6
  %1376 = getelementptr inbounds i32, ptr %12, i64 %1373
  %1377 = load i32, ptr %1376, align 4, !tbaa !6
  %1378 = add nsw i32 %1377, -1
  %1379 = icmp slt i32 %1375, %1378
  br i1 %1379, label %1380, label %1395

1380:                                             ; preds = %1372
  br i1 %1367, label %1387, label %1381

1381:                                             ; preds = %1380
  %1382 = getelementptr inbounds i32, ptr %7, i64 %1373
  %1383 = load i32, ptr %1382, align 4, !tbaa !6
  %1384 = getelementptr inbounds i32, ptr %6, i64 %1373
  %1385 = load i32, ptr %1384, align 4, !tbaa !6
  %1386 = add nsw i32 %1385, %1383
  store i32 %1386, ptr %1384, align 4, !tbaa !6
  br label %1405

1387:                                             ; preds = %1363, %1380
  %1388 = phi i32 [ %1375, %1380 ], [ %1364, %1363 ]
  %1389 = phi ptr [ %1374, %1380 ], [ %4, %1363 ]
  %1390 = phi i64 [ %1373, %1380 ], [ 0, %1363 ]
  %1391 = add nsw i32 %1388, 1
  store i32 %1391, ptr %1389, align 4, !tbaa !6
  %1392 = getelementptr inbounds i32, ptr %7, i64 %1390
  %1393 = load i32, ptr %1392, align 4, !tbaa !6
  %1394 = getelementptr inbounds i32, ptr %6, i64 %1390
  br label %1405

1395:                                             ; preds = %1372
  %1396 = icmp eq i32 %1375, %1378
  br i1 %1396, label %1397, label %1403

1397:                                             ; preds = %1395
  store i32 0, ptr %1374, align 4, !tbaa !6
  %1398 = getelementptr inbounds i32, ptr %8, i64 %1373
  %1399 = load i32, ptr %1398, align 4, !tbaa !6
  %1400 = getelementptr inbounds i32, ptr %6, i64 %1373
  store i32 %1399, ptr %1400, align 4, !tbaa !6
  %1401 = add nuw nsw i64 %1373, 1
  %1402 = icmp eq i64 %1401, %1272
  br i1 %1402, label %1410, label %1372, !llvm.loop !62

1403:                                             ; preds = %1368, %1395
  %1404 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 61, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5547

1405:                                             ; preds = %1381, %1387
  %1406 = phi ptr [ %1394, %1387 ], [ %1374, %1381 ]
  %1407 = phi i32 [ %1393, %1387 ], [ 1, %1381 ]
  %1408 = load i32, ptr %1406, align 4, !tbaa !6
  %1409 = add nsw i32 %1408, %1407
  store i32 %1409, ptr %1406, align 4, !tbaa !6
  br label %1410

1410:                                             ; preds = %1397, %1405, %1370, %1360
  %1411 = icmp eq i32 %1362, %5
  br i1 %1411, label %5542, label %1275, !llvm.loop !63

1412:                                             ; preds = %1258, %1548
  %1413 = phi i32 [ 0, %1258 ], [ %1497, %1548 ]
  %1414 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1259, label %1415, label %1484

1415:                                             ; preds = %1412, %1474
  %1416 = phi i32 [ %1483, %1474 ], [ 0, %1412 ]
  %1417 = phi i64 [ %1425, %1474 ], [ %1263, %1412 ]
  %1418 = phi i64 [ %1482, %1474 ], [ %1262, %1412 ]
  %1419 = phi i32 [ %1480, %1474 ], [ %1414, %1412 ]
  %1420 = sub i32 %1261, %1416
  %1421 = tail call i32 @llvm.smin.i32(i32 %1420, i32 0)
  %1422 = sub i32 %1420, %1421
  %1423 = zext i32 %1422 to i64
  %1424 = add nuw nsw i64 %1423, 1
  %1425 = add nsw i64 %1417, -1
  %1426 = icmp ult i32 %1422, 31
  br i1 %1426, label %1462, label %1427

1427:                                             ; preds = %1415
  %1428 = and i64 %1424, 8589934560
  %1429 = sub i64 %1418, %1428
  br label %1430

1430:                                             ; preds = %1430, %1427
  %1431 = phi i64 [ 0, %1427 ], [ %1454, %1430 ]
  %1432 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1427 ], [ %1450, %1430 ]
  %1433 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1427 ], [ %1451, %1430 ]
  %1434 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1427 ], [ %1452, %1430 ]
  %1435 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1427 ], [ %1453, %1430 ]
  %1436 = sub i64 %1418, %1431
  %1437 = getelementptr inbounds i32, ptr %11, i64 %1436
  %1438 = getelementptr inbounds i32, ptr %1437, i64 -7
  %1439 = load <8 x i32>, ptr %1438, align 4, !tbaa !6
  %1440 = shufflevector <8 x i32> %1439, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1441 = getelementptr inbounds i32, ptr %1437, i64 -15
  %1442 = load <8 x i32>, ptr %1441, align 4, !tbaa !6
  %1443 = shufflevector <8 x i32> %1442, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1444 = getelementptr inbounds i32, ptr %1437, i64 -23
  %1445 = load <8 x i32>, ptr %1444, align 4, !tbaa !6
  %1446 = shufflevector <8 x i32> %1445, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1447 = getelementptr inbounds i32, ptr %1437, i64 -31
  %1448 = load <8 x i32>, ptr %1447, align 4, !tbaa !6
  %1449 = shufflevector <8 x i32> %1448, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1450 = mul <8 x i32> %1440, %1432
  %1451 = mul <8 x i32> %1443, %1433
  %1452 = mul <8 x i32> %1446, %1434
  %1453 = mul <8 x i32> %1449, %1435
  %1454 = add nuw i64 %1431, 32
  %1455 = icmp eq i64 %1454, %1428
  br i1 %1455, label %1456, label %1430, !llvm.loop !64

1456:                                             ; preds = %1430
  %1457 = mul <8 x i32> %1451, %1450
  %1458 = mul <8 x i32> %1452, %1457
  %1459 = mul <8 x i32> %1453, %1458
  %1460 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1459)
  %1461 = icmp eq i64 %1424, %1428
  br i1 %1461, label %1474, label %1462

1462:                                             ; preds = %1415, %1456
  %1463 = phi i64 [ %1418, %1415 ], [ %1429, %1456 ]
  %1464 = phi i32 [ 1, %1415 ], [ %1460, %1456 ]
  br label %1465

1465:                                             ; preds = %1462, %1465
  %1466 = phi i64 [ %1471, %1465 ], [ %1463, %1462 ]
  %1467 = phi i32 [ %1470, %1465 ], [ %1464, %1462 ]
  %1468 = getelementptr inbounds i32, ptr %11, i64 %1466
  %1469 = load i32, ptr %1468, align 4, !tbaa !6
  %1470 = mul nsw i32 %1469, %1467
  %1471 = add nsw i64 %1466, -1
  %1472 = trunc i64 %1466 to i32
  %1473 = icmp sgt i32 %1472, 0
  br i1 %1473, label %1465, label %1474, !llvm.loop !65

1474:                                             ; preds = %1465, %1456
  %1475 = phi i32 [ %1460, %1456 ], [ %1470, %1465 ]
  %1476 = and i64 %1425, 4294967295
  %1477 = getelementptr inbounds i32, ptr %6, i64 %1476
  %1478 = load i32, ptr %1477, align 4, !tbaa !6
  %1479 = mul nsw i32 %1478, %1475
  %1480 = add nsw i32 %1479, %1419
  %1481 = icmp sgt i64 %1417, 2
  %1482 = add nsw i64 %1418, -1
  %1483 = add i32 %1416, 1
  br i1 %1481, label %1415, label %1484, !llvm.loop !66

1484:                                             ; preds = %1474, %1412
  %1485 = phi i32 [ %1414, %1412 ], [ %1480, %1474 ]
  %1486 = icmp slt i32 %1485, %5
  br i1 %1486, label %1489, label %1487

1487:                                             ; preds = %1484
  %1488 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 61, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5547

1489:                                             ; preds = %1484
  %1490 = sext i32 %1485 to i64
  %1491 = getelementptr inbounds i8, ptr %1242, i64 %1490
  %1492 = load i8, ptr %1491, align 1, !tbaa !12
  %1493 = load i8, ptr %1244, align 1, !tbaa !12
  %1494 = icmp slt i8 %1493, %1492
  br i1 %1494, label %1495, label %1496

1495:                                             ; preds = %1489
  store i8 %1492, ptr %1244, align 1, !tbaa !12
  br label %1496

1496:                                             ; preds = %1489, %1495
  %1497 = add nuw nsw i32 %1413, 1
  br i1 %1260, label %1498, label %1548

1498:                                             ; preds = %1496
  %1499 = load i32, ptr %4, align 4, !tbaa !6
  %1500 = load i32, ptr %12, align 4, !tbaa !6
  %1501 = add nsw i32 %1500, -1
  %1502 = icmp slt i32 %1499, %1501
  br i1 %1502, label %1525, label %1503

1503:                                             ; preds = %1498
  %1504 = icmp eq i32 %1499, %1501
  br i1 %1504, label %1505, label %1541

1505:                                             ; preds = %1503
  store i32 0, ptr %4, align 4, !tbaa !6
  %1506 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1506, ptr %6, align 4, !tbaa !6
  br i1 %1265, label %1548, label %1507

1507:                                             ; preds = %1505, %1535
  %1508 = phi i64 [ %1539, %1535 ], [ 1, %1505 ]
  %1509 = getelementptr inbounds i32, ptr %4, i64 %1508
  %1510 = load i32, ptr %1509, align 4, !tbaa !6
  %1511 = getelementptr inbounds i32, ptr %12, i64 %1508
  %1512 = load i32, ptr %1511, align 4, !tbaa !6
  %1513 = add nsw i32 %1512, -1
  %1514 = icmp slt i32 %1510, %1513
  br i1 %1514, label %1515, label %1533

1515:                                             ; preds = %1507
  br i1 %1502, label %1525, label %1516

1516:                                             ; preds = %1515
  %1517 = shl i64 %1508, 32
  %1518 = add i64 %1517, -4294967296
  %1519 = ashr exact i64 %1518, 32
  %1520 = getelementptr inbounds i32, ptr %7, i64 %1519
  %1521 = load i32, ptr %1520, align 4, !tbaa !6
  %1522 = getelementptr inbounds i32, ptr %6, i64 %1508
  %1523 = load i32, ptr %1522, align 4, !tbaa !6
  %1524 = add nsw i32 %1523, %1521
  store i32 %1524, ptr %1522, align 4, !tbaa !6
  br label %1543

1525:                                             ; preds = %1498, %1515
  %1526 = phi i32 [ %1510, %1515 ], [ %1499, %1498 ]
  %1527 = phi ptr [ %1509, %1515 ], [ %4, %1498 ]
  %1528 = phi i64 [ %1508, %1515 ], [ 0, %1498 ]
  %1529 = add nsw i32 %1526, 1
  store i32 %1529, ptr %1527, align 4, !tbaa !6
  %1530 = getelementptr inbounds i32, ptr %7, i64 %1528
  %1531 = load i32, ptr %1530, align 4, !tbaa !6
  %1532 = getelementptr inbounds i32, ptr %6, i64 %1528
  br label %1543

1533:                                             ; preds = %1507
  %1534 = icmp eq i32 %1510, %1513
  br i1 %1534, label %1535, label %1541

1535:                                             ; preds = %1533
  store i32 0, ptr %1509, align 4, !tbaa !6
  %1536 = getelementptr inbounds i32, ptr %8, i64 %1508
  %1537 = load i32, ptr %1536, align 4, !tbaa !6
  %1538 = getelementptr inbounds i32, ptr %6, i64 %1508
  store i32 %1537, ptr %1538, align 4, !tbaa !6
  %1539 = add nuw nsw i64 %1508, 1
  %1540 = icmp eq i64 %1539, %1263
  br i1 %1540, label %1548, label %1507, !llvm.loop !67

1541:                                             ; preds = %1503, %1533
  %1542 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 61, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5547

1543:                                             ; preds = %1516, %1525
  %1544 = phi ptr [ %1532, %1525 ], [ %1509, %1516 ]
  %1545 = phi i32 [ %1531, %1525 ], [ 1, %1516 ]
  %1546 = load i32, ptr %1544, align 4, !tbaa !6
  %1547 = add nsw i32 %1546, %1545
  store i32 %1547, ptr %1544, align 4, !tbaa !6
  br label %1548

1548:                                             ; preds = %1535, %1543, %1505, %1496
  %1549 = icmp eq i32 %1497, %5
  br i1 %1549, label %5542, label %1412, !llvm.loop !68

1550:                                             ; preds = %1251
  %1551 = getelementptr inbounds i32, ptr %3, i64 %19
  %1552 = load i32, ptr %1551, align 4, !tbaa !6
  %1553 = icmp eq i32 %1552, 0
  %1554 = icmp sgt i32 %5, 0
  br i1 %1553, label %1564, label %1555

1555:                                             ; preds = %1550
  br i1 %1554, label %1556, label %5542

1556:                                             ; preds = %1555
  %1557 = icmp sgt i32 %13, 1
  %1558 = icmp sgt i32 %13, 0
  %1559 = add i32 %13, -2
  %1560 = zext i32 %1559 to i64
  %1561 = zext i32 %13 to i64
  %1562 = add nuw i32 %5, 1
  %1563 = icmp eq i32 %13, 1
  br label %1706

1564:                                             ; preds = %1550
  br i1 %1554, label %1565, label %5542

1565:                                             ; preds = %1564
  %1566 = icmp sgt i32 %13, 1
  %1567 = icmp sgt i32 %13, 0
  %1568 = add i32 %13, -2
  %1569 = zext i32 %1568 to i64
  %1570 = zext i32 %13 to i64
  %1571 = add nuw i32 %5, 1
  %1572 = icmp eq i32 %13, 1
  br label %1573

1573:                                             ; preds = %1565, %1704
  %1574 = phi i32 [ 0, %1565 ], [ %1656, %1704 ]
  %1575 = phi double [ 0.000000e+00, %1565 ], [ %1655, %1704 ]
  %1576 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1566, label %1577, label %1646

1577:                                             ; preds = %1573, %1636
  %1578 = phi i32 [ %1645, %1636 ], [ 0, %1573 ]
  %1579 = phi i64 [ %1587, %1636 ], [ %1570, %1573 ]
  %1580 = phi i64 [ %1644, %1636 ], [ %1569, %1573 ]
  %1581 = phi i32 [ %1642, %1636 ], [ %1576, %1573 ]
  %1582 = sub i32 %1568, %1578
  %1583 = tail call i32 @llvm.smin.i32(i32 %1582, i32 0)
  %1584 = sub i32 %1582, %1583
  %1585 = zext i32 %1584 to i64
  %1586 = add nuw nsw i64 %1585, 1
  %1587 = add nsw i64 %1579, -1
  %1588 = icmp ult i32 %1584, 31
  br i1 %1588, label %1624, label %1589

1589:                                             ; preds = %1577
  %1590 = and i64 %1586, 8589934560
  %1591 = sub i64 %1580, %1590
  br label %1592

1592:                                             ; preds = %1592, %1589
  %1593 = phi i64 [ 0, %1589 ], [ %1616, %1592 ]
  %1594 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1589 ], [ %1612, %1592 ]
  %1595 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1589 ], [ %1613, %1592 ]
  %1596 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1589 ], [ %1614, %1592 ]
  %1597 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1589 ], [ %1615, %1592 ]
  %1598 = sub i64 %1580, %1593
  %1599 = getelementptr inbounds i32, ptr %9, i64 %1598
  %1600 = getelementptr inbounds i32, ptr %1599, i64 -7
  %1601 = load <8 x i32>, ptr %1600, align 4, !tbaa !6
  %1602 = shufflevector <8 x i32> %1601, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1603 = getelementptr inbounds i32, ptr %1599, i64 -15
  %1604 = load <8 x i32>, ptr %1603, align 4, !tbaa !6
  %1605 = shufflevector <8 x i32> %1604, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1606 = getelementptr inbounds i32, ptr %1599, i64 -23
  %1607 = load <8 x i32>, ptr %1606, align 4, !tbaa !6
  %1608 = shufflevector <8 x i32> %1607, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1609 = getelementptr inbounds i32, ptr %1599, i64 -31
  %1610 = load <8 x i32>, ptr %1609, align 4, !tbaa !6
  %1611 = shufflevector <8 x i32> %1610, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1612 = mul <8 x i32> %1602, %1594
  %1613 = mul <8 x i32> %1605, %1595
  %1614 = mul <8 x i32> %1608, %1596
  %1615 = mul <8 x i32> %1611, %1597
  %1616 = add nuw i64 %1593, 32
  %1617 = icmp eq i64 %1616, %1590
  br i1 %1617, label %1618, label %1592, !llvm.loop !69

1618:                                             ; preds = %1592
  %1619 = mul <8 x i32> %1613, %1612
  %1620 = mul <8 x i32> %1614, %1619
  %1621 = mul <8 x i32> %1615, %1620
  %1622 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1621)
  %1623 = icmp eq i64 %1586, %1590
  br i1 %1623, label %1636, label %1624

1624:                                             ; preds = %1577, %1618
  %1625 = phi i64 [ %1580, %1577 ], [ %1591, %1618 ]
  %1626 = phi i32 [ 1, %1577 ], [ %1622, %1618 ]
  br label %1627

1627:                                             ; preds = %1624, %1627
  %1628 = phi i64 [ %1633, %1627 ], [ %1625, %1624 ]
  %1629 = phi i32 [ %1632, %1627 ], [ %1626, %1624 ]
  %1630 = getelementptr inbounds i32, ptr %9, i64 %1628
  %1631 = load i32, ptr %1630, align 4, !tbaa !6
  %1632 = mul nsw i32 %1631, %1629
  %1633 = add nsw i64 %1628, -1
  %1634 = trunc i64 %1628 to i32
  %1635 = icmp sgt i32 %1634, 0
  br i1 %1635, label %1627, label %1636, !llvm.loop !70

1636:                                             ; preds = %1627, %1618
  %1637 = phi i32 [ %1622, %1618 ], [ %1632, %1627 ]
  %1638 = and i64 %1587, 4294967295
  %1639 = getelementptr inbounds i32, ptr %6, i64 %1638
  %1640 = load i32, ptr %1639, align 4, !tbaa !6
  %1641 = mul nsw i32 %1640, %1637
  %1642 = add nsw i32 %1641, %1581
  %1643 = icmp sgt i64 %1579, 2
  %1644 = add nsw i64 %1580, -1
  %1645 = add i32 %1578, 1
  br i1 %1643, label %1577, label %1646, !llvm.loop !71

1646:                                             ; preds = %1636, %1573
  %1647 = phi i32 [ %1576, %1573 ], [ %1642, %1636 ]
  %1648 = sext i32 %1647 to i64
  %1649 = getelementptr inbounds i8, ptr %1242, i64 %1648
  %1650 = load i8, ptr %1649, align 1, !tbaa !12
  %1651 = load i8, ptr %1244, align 1, !tbaa !12
  %1652 = icmp slt i8 %1651, %1650
  br i1 %1652, label %1653, label %1654

1653:                                             ; preds = %1646
  store i8 %1650, ptr %1244, align 1, !tbaa !12
  br label %1654

1654:                                             ; preds = %1653, %1646
  %1655 = fadd fast double %1575, 1.000000e+00
  %1656 = add nuw nsw i32 %1574, 1
  br i1 %1567, label %1657, label %1704

1657:                                             ; preds = %1654
  %1658 = load i32, ptr %4, align 4, !tbaa !6
  %1659 = load i32, ptr %12, align 4, !tbaa !6
  %1660 = add nsw i32 %1659, -1
  %1661 = icmp slt i32 %1658, %1660
  br i1 %1661, label %1681, label %1662

1662:                                             ; preds = %1657
  %1663 = icmp eq i32 %1658, %1660
  br i1 %1663, label %1664, label %1697

1664:                                             ; preds = %1662
  store i32 0, ptr %4, align 4, !tbaa !6
  %1665 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1665, ptr %6, align 4, !tbaa !6
  br i1 %1572, label %1704, label %1666

1666:                                             ; preds = %1664, %1691
  %1667 = phi i64 [ %1695, %1691 ], [ 1, %1664 ]
  %1668 = getelementptr inbounds i32, ptr %4, i64 %1667
  %1669 = load i32, ptr %1668, align 4, !tbaa !6
  %1670 = getelementptr inbounds i32, ptr %12, i64 %1667
  %1671 = load i32, ptr %1670, align 4, !tbaa !6
  %1672 = add nsw i32 %1671, -1
  %1673 = icmp slt i32 %1669, %1672
  br i1 %1673, label %1674, label %1689

1674:                                             ; preds = %1666
  br i1 %1661, label %1681, label %1675

1675:                                             ; preds = %1674
  %1676 = getelementptr inbounds i32, ptr %7, i64 %1667
  %1677 = load i32, ptr %1676, align 4, !tbaa !6
  %1678 = getelementptr inbounds i32, ptr %6, i64 %1667
  %1679 = load i32, ptr %1678, align 4, !tbaa !6
  %1680 = add nsw i32 %1679, %1677
  store i32 %1680, ptr %1678, align 4, !tbaa !6
  br label %1699

1681:                                             ; preds = %1657, %1674
  %1682 = phi i32 [ %1669, %1674 ], [ %1658, %1657 ]
  %1683 = phi ptr [ %1668, %1674 ], [ %4, %1657 ]
  %1684 = phi i64 [ %1667, %1674 ], [ 0, %1657 ]
  %1685 = add nsw i32 %1682, 1
  store i32 %1685, ptr %1683, align 4, !tbaa !6
  %1686 = getelementptr inbounds i32, ptr %7, i64 %1684
  %1687 = load i32, ptr %1686, align 4, !tbaa !6
  %1688 = getelementptr inbounds i32, ptr %6, i64 %1684
  br label %1699

1689:                                             ; preds = %1666
  %1690 = icmp eq i32 %1669, %1672
  br i1 %1690, label %1691, label %1697

1691:                                             ; preds = %1689
  store i32 0, ptr %1668, align 4, !tbaa !6
  %1692 = getelementptr inbounds i32, ptr %8, i64 %1667
  %1693 = load i32, ptr %1692, align 4, !tbaa !6
  %1694 = getelementptr inbounds i32, ptr %6, i64 %1667
  store i32 %1693, ptr %1694, align 4, !tbaa !6
  %1695 = add nuw nsw i64 %1667, 1
  %1696 = icmp eq i64 %1695, %1570
  br i1 %1696, label %1704, label %1666, !llvm.loop !72

1697:                                             ; preds = %1662, %1689
  %1698 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 61, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5547

1699:                                             ; preds = %1675, %1681
  %1700 = phi ptr [ %1688, %1681 ], [ %1668, %1675 ]
  %1701 = phi i32 [ %1687, %1681 ], [ 1, %1675 ]
  %1702 = load i32, ptr %1700, align 4, !tbaa !6
  %1703 = add nsw i32 %1702, %1701
  store i32 %1703, ptr %1700, align 4, !tbaa !6
  br label %1704

1704:                                             ; preds = %1691, %1699, %1664, %1654
  %1705 = icmp eq i32 %1656, %5
  br i1 %1705, label %5542, label %1573, !llvm.loop !73

1706:                                             ; preds = %1556, %1842
  %1707 = phi i32 [ 0, %1556 ], [ %1791, %1842 ]
  %1708 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1557, label %1709, label %1778

1709:                                             ; preds = %1706, %1768
  %1710 = phi i32 [ %1777, %1768 ], [ 0, %1706 ]
  %1711 = phi i64 [ %1719, %1768 ], [ %1561, %1706 ]
  %1712 = phi i64 [ %1776, %1768 ], [ %1560, %1706 ]
  %1713 = phi i32 [ %1774, %1768 ], [ %1708, %1706 ]
  %1714 = sub i32 %1559, %1710
  %1715 = tail call i32 @llvm.smin.i32(i32 %1714, i32 0)
  %1716 = sub i32 %1714, %1715
  %1717 = zext i32 %1716 to i64
  %1718 = add nuw nsw i64 %1717, 1
  %1719 = add nsw i64 %1711, -1
  %1720 = icmp ult i32 %1716, 31
  br i1 %1720, label %1756, label %1721

1721:                                             ; preds = %1709
  %1722 = and i64 %1718, 8589934560
  %1723 = sub i64 %1712, %1722
  br label %1724

1724:                                             ; preds = %1724, %1721
  %1725 = phi i64 [ 0, %1721 ], [ %1748, %1724 ]
  %1726 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1721 ], [ %1744, %1724 ]
  %1727 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1721 ], [ %1745, %1724 ]
  %1728 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1721 ], [ %1746, %1724 ]
  %1729 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1721 ], [ %1747, %1724 ]
  %1730 = sub i64 %1712, %1725
  %1731 = getelementptr inbounds i32, ptr %11, i64 %1730
  %1732 = getelementptr inbounds i32, ptr %1731, i64 -7
  %1733 = load <8 x i32>, ptr %1732, align 4, !tbaa !6
  %1734 = shufflevector <8 x i32> %1733, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1735 = getelementptr inbounds i32, ptr %1731, i64 -15
  %1736 = load <8 x i32>, ptr %1735, align 4, !tbaa !6
  %1737 = shufflevector <8 x i32> %1736, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1738 = getelementptr inbounds i32, ptr %1731, i64 -23
  %1739 = load <8 x i32>, ptr %1738, align 4, !tbaa !6
  %1740 = shufflevector <8 x i32> %1739, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1741 = getelementptr inbounds i32, ptr %1731, i64 -31
  %1742 = load <8 x i32>, ptr %1741, align 4, !tbaa !6
  %1743 = shufflevector <8 x i32> %1742, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1744 = mul <8 x i32> %1734, %1726
  %1745 = mul <8 x i32> %1737, %1727
  %1746 = mul <8 x i32> %1740, %1728
  %1747 = mul <8 x i32> %1743, %1729
  %1748 = add nuw i64 %1725, 32
  %1749 = icmp eq i64 %1748, %1722
  br i1 %1749, label %1750, label %1724, !llvm.loop !74

1750:                                             ; preds = %1724
  %1751 = mul <8 x i32> %1745, %1744
  %1752 = mul <8 x i32> %1746, %1751
  %1753 = mul <8 x i32> %1747, %1752
  %1754 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1753)
  %1755 = icmp eq i64 %1718, %1722
  br i1 %1755, label %1768, label %1756

1756:                                             ; preds = %1709, %1750
  %1757 = phi i64 [ %1712, %1709 ], [ %1723, %1750 ]
  %1758 = phi i32 [ 1, %1709 ], [ %1754, %1750 ]
  br label %1759

1759:                                             ; preds = %1756, %1759
  %1760 = phi i64 [ %1765, %1759 ], [ %1757, %1756 ]
  %1761 = phi i32 [ %1764, %1759 ], [ %1758, %1756 ]
  %1762 = getelementptr inbounds i32, ptr %11, i64 %1760
  %1763 = load i32, ptr %1762, align 4, !tbaa !6
  %1764 = mul nsw i32 %1763, %1761
  %1765 = add nsw i64 %1760, -1
  %1766 = trunc i64 %1760 to i32
  %1767 = icmp sgt i32 %1766, 0
  br i1 %1767, label %1759, label %1768, !llvm.loop !75

1768:                                             ; preds = %1759, %1750
  %1769 = phi i32 [ %1754, %1750 ], [ %1764, %1759 ]
  %1770 = and i64 %1719, 4294967295
  %1771 = getelementptr inbounds i32, ptr %6, i64 %1770
  %1772 = load i32, ptr %1771, align 4, !tbaa !6
  %1773 = mul nsw i32 %1772, %1769
  %1774 = add nsw i32 %1773, %1713
  %1775 = icmp sgt i64 %1711, 2
  %1776 = add nsw i64 %1712, -1
  %1777 = add i32 %1710, 1
  br i1 %1775, label %1709, label %1778, !llvm.loop !76

1778:                                             ; preds = %1768, %1706
  %1779 = phi i32 [ %1708, %1706 ], [ %1774, %1768 ]
  %1780 = icmp slt i32 %1779, %5
  br i1 %1780, label %1783, label %1781

1781:                                             ; preds = %1778
  %1782 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 61, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5547

1783:                                             ; preds = %1778
  %1784 = sext i32 %1779 to i64
  %1785 = getelementptr inbounds i8, ptr %1242, i64 %1784
  %1786 = load i8, ptr %1785, align 1, !tbaa !12
  %1787 = load i8, ptr %1244, align 1, !tbaa !12
  %1788 = icmp slt i8 %1787, %1786
  br i1 %1788, label %1789, label %1790

1789:                                             ; preds = %1783
  store i8 %1786, ptr %1244, align 1, !tbaa !12
  br label %1790

1790:                                             ; preds = %1789, %1783
  %1791 = add nuw nsw i32 %1707, 1
  br i1 %1558, label %1792, label %1842

1792:                                             ; preds = %1790
  %1793 = load i32, ptr %4, align 4, !tbaa !6
  %1794 = load i32, ptr %12, align 4, !tbaa !6
  %1795 = add nsw i32 %1794, -1
  %1796 = icmp slt i32 %1793, %1795
  br i1 %1796, label %1819, label %1797

1797:                                             ; preds = %1792
  %1798 = icmp eq i32 %1793, %1795
  br i1 %1798, label %1799, label %1835

1799:                                             ; preds = %1797
  store i32 0, ptr %4, align 4, !tbaa !6
  %1800 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1800, ptr %6, align 4, !tbaa !6
  br i1 %1563, label %1842, label %1801

1801:                                             ; preds = %1799, %1829
  %1802 = phi i64 [ %1833, %1829 ], [ 1, %1799 ]
  %1803 = getelementptr inbounds i32, ptr %4, i64 %1802
  %1804 = load i32, ptr %1803, align 4, !tbaa !6
  %1805 = getelementptr inbounds i32, ptr %12, i64 %1802
  %1806 = load i32, ptr %1805, align 4, !tbaa !6
  %1807 = add nsw i32 %1806, -1
  %1808 = icmp slt i32 %1804, %1807
  br i1 %1808, label %1809, label %1827

1809:                                             ; preds = %1801
  br i1 %1796, label %1819, label %1810

1810:                                             ; preds = %1809
  %1811 = shl i64 %1802, 32
  %1812 = add i64 %1811, -4294967296
  %1813 = ashr exact i64 %1812, 32
  %1814 = getelementptr inbounds i32, ptr %7, i64 %1813
  %1815 = load i32, ptr %1814, align 4, !tbaa !6
  %1816 = getelementptr inbounds i32, ptr %6, i64 %1802
  %1817 = load i32, ptr %1816, align 4, !tbaa !6
  %1818 = add nsw i32 %1817, %1815
  store i32 %1818, ptr %1816, align 4, !tbaa !6
  br label %1837

1819:                                             ; preds = %1792, %1809
  %1820 = phi i32 [ %1804, %1809 ], [ %1793, %1792 ]
  %1821 = phi ptr [ %1803, %1809 ], [ %4, %1792 ]
  %1822 = phi i64 [ %1802, %1809 ], [ 0, %1792 ]
  %1823 = add nsw i32 %1820, 1
  store i32 %1823, ptr %1821, align 4, !tbaa !6
  %1824 = getelementptr inbounds i32, ptr %7, i64 %1822
  %1825 = load i32, ptr %1824, align 4, !tbaa !6
  %1826 = getelementptr inbounds i32, ptr %6, i64 %1822
  br label %1837

1827:                                             ; preds = %1801
  %1828 = icmp eq i32 %1804, %1807
  br i1 %1828, label %1829, label %1835

1829:                                             ; preds = %1827
  store i32 0, ptr %1803, align 4, !tbaa !6
  %1830 = getelementptr inbounds i32, ptr %8, i64 %1802
  %1831 = load i32, ptr %1830, align 4, !tbaa !6
  %1832 = getelementptr inbounds i32, ptr %6, i64 %1802
  store i32 %1831, ptr %1832, align 4, !tbaa !6
  %1833 = add nuw nsw i64 %1802, 1
  %1834 = icmp eq i64 %1833, %1561
  br i1 %1834, label %1842, label %1801, !llvm.loop !77

1835:                                             ; preds = %1797, %1827
  %1836 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 61, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5547

1837:                                             ; preds = %1810, %1819
  %1838 = phi ptr [ %1826, %1819 ], [ %1803, %1810 ]
  %1839 = phi i32 [ %1825, %1819 ], [ 1, %1810 ]
  %1840 = load i32, ptr %1838, align 4, !tbaa !6
  %1841 = add nsw i32 %1840, %1839
  store i32 %1841, ptr %1838, align 4, !tbaa !6
  br label %1842

1842:                                             ; preds = %1829, %1837, %1799, %1790
  %1843 = icmp eq i32 %1791, %5
  br i1 %1843, label %5542, label %1706, !llvm.loop !78

1844:                                             ; preds = %1251
  %1845 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 61, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5542

1846:                                             ; preds = %18
  %1847 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1848 = load ptr, ptr %1847, align 8, !tbaa !10
  %1849 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1850 = load ptr, ptr %1849, align 8, !tbaa !10
  %1851 = load i8, ptr %1848, align 1, !tbaa !12
  %1852 = zext i8 %1851 to i16
  store i16 %1852, ptr %1850, align 2, !tbaa !79
  %1853 = icmp eq i32 %13, 0
  br i1 %1853, label %1854, label %1859

1854:                                             ; preds = %1846
  %1855 = load i8, ptr %1848, align 1, !tbaa !12
  %1856 = icmp ult i8 %1851, %1855
  br i1 %1856, label %1857, label %5542

1857:                                             ; preds = %1854
  %1858 = zext i8 %1855 to i16
  store i16 %1858, ptr %1850, align 2, !tbaa !79
  br label %5542

1859:                                             ; preds = %1846
  switch i32 %1, label %2464 [
    i32 1, label %1860
    i32 0, label %2164
  ]

1860:                                             ; preds = %1859
  %1861 = getelementptr inbounds i32, ptr %3, i64 %19
  %1862 = load i32, ptr %1861, align 4, !tbaa !6
  %1863 = icmp eq i32 %1862, 0
  %1864 = icmp sgt i32 %5, 0
  br i1 %1863, label %1874, label %1865

1865:                                             ; preds = %1860
  br i1 %1864, label %1866, label %5542

1866:                                             ; preds = %1865
  %1867 = icmp sgt i32 %13, 1
  %1868 = icmp sgt i32 %13, 0
  %1869 = add i32 %13, -2
  %1870 = zext i32 %1869 to i64
  %1871 = zext i32 %13 to i64
  %1872 = add nuw i32 %5, 1
  %1873 = icmp eq i32 %13, 1
  br label %2023

1874:                                             ; preds = %1860
  br i1 %1864, label %1875, label %5542

1875:                                             ; preds = %1874
  %1876 = icmp sgt i32 %13, 1
  %1877 = icmp sgt i32 %13, 0
  %1878 = add i32 %13, -2
  %1879 = zext i32 %1878 to i64
  %1880 = zext i32 %13 to i64
  %1881 = add nuw i32 %5, 1
  %1882 = icmp eq i32 %13, 1
  br label %1883

1883:                                             ; preds = %1875, %2021
  %1884 = phi i16 [ %1852, %1875 ], [ %1971, %2021 ]
  %1885 = phi i32 [ 0, %1875 ], [ %1973, %2021 ]
  %1886 = phi double [ 0.000000e+00, %1875 ], [ %1972, %2021 ]
  %1887 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1876, label %1888, label %1957

1888:                                             ; preds = %1883, %1947
  %1889 = phi i32 [ %1956, %1947 ], [ 0, %1883 ]
  %1890 = phi i64 [ %1898, %1947 ], [ %1880, %1883 ]
  %1891 = phi i64 [ %1955, %1947 ], [ %1879, %1883 ]
  %1892 = phi i32 [ %1953, %1947 ], [ %1887, %1883 ]
  %1893 = sub i32 %1878, %1889
  %1894 = tail call i32 @llvm.smin.i32(i32 %1893, i32 0)
  %1895 = sub i32 %1893, %1894
  %1896 = zext i32 %1895 to i64
  %1897 = add nuw nsw i64 %1896, 1
  %1898 = add nsw i64 %1890, -1
  %1899 = icmp ult i32 %1895, 31
  br i1 %1899, label %1935, label %1900

1900:                                             ; preds = %1888
  %1901 = and i64 %1897, 8589934560
  %1902 = sub i64 %1891, %1901
  br label %1903

1903:                                             ; preds = %1903, %1900
  %1904 = phi i64 [ 0, %1900 ], [ %1927, %1903 ]
  %1905 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1900 ], [ %1923, %1903 ]
  %1906 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1900 ], [ %1924, %1903 ]
  %1907 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1900 ], [ %1925, %1903 ]
  %1908 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1900 ], [ %1926, %1903 ]
  %1909 = sub i64 %1891, %1904
  %1910 = getelementptr inbounds i32, ptr %9, i64 %1909
  %1911 = getelementptr inbounds i32, ptr %1910, i64 -7
  %1912 = load <8 x i32>, ptr %1911, align 4, !tbaa !6
  %1913 = shufflevector <8 x i32> %1912, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1914 = getelementptr inbounds i32, ptr %1910, i64 -15
  %1915 = load <8 x i32>, ptr %1914, align 4, !tbaa !6
  %1916 = shufflevector <8 x i32> %1915, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1917 = getelementptr inbounds i32, ptr %1910, i64 -23
  %1918 = load <8 x i32>, ptr %1917, align 4, !tbaa !6
  %1919 = shufflevector <8 x i32> %1918, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1920 = getelementptr inbounds i32, ptr %1910, i64 -31
  %1921 = load <8 x i32>, ptr %1920, align 4, !tbaa !6
  %1922 = shufflevector <8 x i32> %1921, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1923 = mul <8 x i32> %1913, %1905
  %1924 = mul <8 x i32> %1916, %1906
  %1925 = mul <8 x i32> %1919, %1907
  %1926 = mul <8 x i32> %1922, %1908
  %1927 = add nuw i64 %1904, 32
  %1928 = icmp eq i64 %1927, %1901
  br i1 %1928, label %1929, label %1903, !llvm.loop !81

1929:                                             ; preds = %1903
  %1930 = mul <8 x i32> %1924, %1923
  %1931 = mul <8 x i32> %1925, %1930
  %1932 = mul <8 x i32> %1926, %1931
  %1933 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1932)
  %1934 = icmp eq i64 %1897, %1901
  br i1 %1934, label %1947, label %1935

1935:                                             ; preds = %1888, %1929
  %1936 = phi i64 [ %1891, %1888 ], [ %1902, %1929 ]
  %1937 = phi i32 [ 1, %1888 ], [ %1933, %1929 ]
  br label %1938

1938:                                             ; preds = %1935, %1938
  %1939 = phi i64 [ %1944, %1938 ], [ %1936, %1935 ]
  %1940 = phi i32 [ %1943, %1938 ], [ %1937, %1935 ]
  %1941 = getelementptr inbounds i32, ptr %9, i64 %1939
  %1942 = load i32, ptr %1941, align 4, !tbaa !6
  %1943 = mul nsw i32 %1942, %1940
  %1944 = add nsw i64 %1939, -1
  %1945 = trunc i64 %1939 to i32
  %1946 = icmp sgt i32 %1945, 0
  br i1 %1946, label %1938, label %1947, !llvm.loop !82

1947:                                             ; preds = %1938, %1929
  %1948 = phi i32 [ %1933, %1929 ], [ %1943, %1938 ]
  %1949 = and i64 %1898, 4294967295
  %1950 = getelementptr inbounds i32, ptr %6, i64 %1949
  %1951 = load i32, ptr %1950, align 4, !tbaa !6
  %1952 = mul nsw i32 %1951, %1948
  %1953 = add nsw i32 %1952, %1892
  %1954 = icmp sgt i64 %1890, 2
  %1955 = add nsw i64 %1891, -1
  %1956 = add i32 %1889, 1
  br i1 %1954, label %1888, label %1957, !llvm.loop !83

1957:                                             ; preds = %1947, %1883
  %1958 = phi i32 [ %1887, %1883 ], [ %1953, %1947 ]
  %1959 = sext i32 %1958 to i64
  %1960 = getelementptr inbounds double, ptr %2, i64 %1959
  %1961 = load double, ptr %1960, align 8, !tbaa !19
  %1962 = getelementptr inbounds i8, ptr %1848, i64 %1959
  %1963 = load i8, ptr %1962, align 1, !tbaa !12
  %1964 = fcmp fast one double %1961, 0.000000e+00
  %1965 = zext i8 %1963 to i16
  %1966 = icmp ult i16 %1884, %1965
  %1967 = select i1 %1964, i1 %1966, i1 false
  br i1 %1967, label %1968, label %1970

1968:                                             ; preds = %1957
  %1969 = zext i8 %1963 to i16
  store i16 %1969, ptr %1850, align 2, !tbaa !79
  br label %1970

1970:                                             ; preds = %1968, %1957
  %1971 = phi i16 [ %1969, %1968 ], [ %1884, %1957 ]
  %1972 = fadd fast double %1961, %1886
  %1973 = add nuw nsw i32 %1885, 1
  br i1 %1877, label %1974, label %2021

1974:                                             ; preds = %1970
  %1975 = load i32, ptr %4, align 4, !tbaa !6
  %1976 = load i32, ptr %12, align 4, !tbaa !6
  %1977 = add nsw i32 %1976, -1
  %1978 = icmp slt i32 %1975, %1977
  br i1 %1978, label %1998, label %1979

1979:                                             ; preds = %1974
  %1980 = icmp eq i32 %1975, %1977
  br i1 %1980, label %1981, label %2014

1981:                                             ; preds = %1979
  store i32 0, ptr %4, align 4, !tbaa !6
  %1982 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1982, ptr %6, align 4, !tbaa !6
  br i1 %1882, label %2021, label %1983

1983:                                             ; preds = %1981, %2008
  %1984 = phi i64 [ %2012, %2008 ], [ 1, %1981 ]
  %1985 = getelementptr inbounds i32, ptr %4, i64 %1984
  %1986 = load i32, ptr %1985, align 4, !tbaa !6
  %1987 = getelementptr inbounds i32, ptr %12, i64 %1984
  %1988 = load i32, ptr %1987, align 4, !tbaa !6
  %1989 = add nsw i32 %1988, -1
  %1990 = icmp slt i32 %1986, %1989
  br i1 %1990, label %1991, label %2006

1991:                                             ; preds = %1983
  br i1 %1978, label %1998, label %1992

1992:                                             ; preds = %1991
  %1993 = getelementptr inbounds i32, ptr %7, i64 %1984
  %1994 = load i32, ptr %1993, align 4, !tbaa !6
  %1995 = getelementptr inbounds i32, ptr %6, i64 %1984
  %1996 = load i32, ptr %1995, align 4, !tbaa !6
  %1997 = add nsw i32 %1996, %1994
  store i32 %1997, ptr %1995, align 4, !tbaa !6
  br label %2016

1998:                                             ; preds = %1974, %1991
  %1999 = phi i32 [ %1986, %1991 ], [ %1975, %1974 ]
  %2000 = phi ptr [ %1985, %1991 ], [ %4, %1974 ]
  %2001 = phi i64 [ %1984, %1991 ], [ 0, %1974 ]
  %2002 = add nsw i32 %1999, 1
  store i32 %2002, ptr %2000, align 4, !tbaa !6
  %2003 = getelementptr inbounds i32, ptr %7, i64 %2001
  %2004 = load i32, ptr %2003, align 4, !tbaa !6
  %2005 = getelementptr inbounds i32, ptr %6, i64 %2001
  br label %2016

2006:                                             ; preds = %1983
  %2007 = icmp eq i32 %1986, %1989
  br i1 %2007, label %2008, label %2014

2008:                                             ; preds = %2006
  store i32 0, ptr %1985, align 4, !tbaa !6
  %2009 = getelementptr inbounds i32, ptr %8, i64 %1984
  %2010 = load i32, ptr %2009, align 4, !tbaa !6
  %2011 = getelementptr inbounds i32, ptr %6, i64 %1984
  store i32 %2010, ptr %2011, align 4, !tbaa !6
  %2012 = add nuw nsw i64 %1984, 1
  %2013 = icmp eq i64 %2012, %1880
  br i1 %2013, label %2021, label %1983, !llvm.loop !84

2014:                                             ; preds = %1979, %2006
  %2015 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 66, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5547

2016:                                             ; preds = %1992, %1998
  %2017 = phi ptr [ %2005, %1998 ], [ %1985, %1992 ]
  %2018 = phi i32 [ %2004, %1998 ], [ 1, %1992 ]
  %2019 = load i32, ptr %2017, align 4, !tbaa !6
  %2020 = add nsw i32 %2019, %2018
  store i32 %2020, ptr %2017, align 4, !tbaa !6
  br label %2021

2021:                                             ; preds = %2008, %2016, %1981, %1970
  %2022 = icmp eq i32 %1973, %5
  br i1 %2022, label %5542, label %1883, !llvm.loop !85

2023:                                             ; preds = %1866, %2162
  %2024 = phi i16 [ %1852, %1866 ], [ %2110, %2162 ]
  %2025 = phi i32 [ 0, %1866 ], [ %2111, %2162 ]
  %2026 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1867, label %2027, label %2096

2027:                                             ; preds = %2023, %2086
  %2028 = phi i32 [ %2095, %2086 ], [ 0, %2023 ]
  %2029 = phi i64 [ %2037, %2086 ], [ %1871, %2023 ]
  %2030 = phi i64 [ %2094, %2086 ], [ %1870, %2023 ]
  %2031 = phi i32 [ %2092, %2086 ], [ %2026, %2023 ]
  %2032 = sub i32 %1869, %2028
  %2033 = tail call i32 @llvm.smin.i32(i32 %2032, i32 0)
  %2034 = sub i32 %2032, %2033
  %2035 = zext i32 %2034 to i64
  %2036 = add nuw nsw i64 %2035, 1
  %2037 = add nsw i64 %2029, -1
  %2038 = icmp ult i32 %2034, 31
  br i1 %2038, label %2074, label %2039

2039:                                             ; preds = %2027
  %2040 = and i64 %2036, 8589934560
  %2041 = sub i64 %2030, %2040
  br label %2042

2042:                                             ; preds = %2042, %2039
  %2043 = phi i64 [ 0, %2039 ], [ %2066, %2042 ]
  %2044 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2039 ], [ %2062, %2042 ]
  %2045 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2039 ], [ %2063, %2042 ]
  %2046 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2039 ], [ %2064, %2042 ]
  %2047 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2039 ], [ %2065, %2042 ]
  %2048 = sub i64 %2030, %2043
  %2049 = getelementptr inbounds i32, ptr %11, i64 %2048
  %2050 = getelementptr inbounds i32, ptr %2049, i64 -7
  %2051 = load <8 x i32>, ptr %2050, align 4, !tbaa !6
  %2052 = shufflevector <8 x i32> %2051, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2053 = getelementptr inbounds i32, ptr %2049, i64 -15
  %2054 = load <8 x i32>, ptr %2053, align 4, !tbaa !6
  %2055 = shufflevector <8 x i32> %2054, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2056 = getelementptr inbounds i32, ptr %2049, i64 -23
  %2057 = load <8 x i32>, ptr %2056, align 4, !tbaa !6
  %2058 = shufflevector <8 x i32> %2057, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2059 = getelementptr inbounds i32, ptr %2049, i64 -31
  %2060 = load <8 x i32>, ptr %2059, align 4, !tbaa !6
  %2061 = shufflevector <8 x i32> %2060, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2062 = mul <8 x i32> %2052, %2044
  %2063 = mul <8 x i32> %2055, %2045
  %2064 = mul <8 x i32> %2058, %2046
  %2065 = mul <8 x i32> %2061, %2047
  %2066 = add nuw i64 %2043, 32
  %2067 = icmp eq i64 %2066, %2040
  br i1 %2067, label %2068, label %2042, !llvm.loop !86

2068:                                             ; preds = %2042
  %2069 = mul <8 x i32> %2063, %2062
  %2070 = mul <8 x i32> %2064, %2069
  %2071 = mul <8 x i32> %2065, %2070
  %2072 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2071)
  %2073 = icmp eq i64 %2036, %2040
  br i1 %2073, label %2086, label %2074

2074:                                             ; preds = %2027, %2068
  %2075 = phi i64 [ %2030, %2027 ], [ %2041, %2068 ]
  %2076 = phi i32 [ 1, %2027 ], [ %2072, %2068 ]
  br label %2077

2077:                                             ; preds = %2074, %2077
  %2078 = phi i64 [ %2083, %2077 ], [ %2075, %2074 ]
  %2079 = phi i32 [ %2082, %2077 ], [ %2076, %2074 ]
  %2080 = getelementptr inbounds i32, ptr %11, i64 %2078
  %2081 = load i32, ptr %2080, align 4, !tbaa !6
  %2082 = mul nsw i32 %2081, %2079
  %2083 = add nsw i64 %2078, -1
  %2084 = trunc i64 %2078 to i32
  %2085 = icmp sgt i32 %2084, 0
  br i1 %2085, label %2077, label %2086, !llvm.loop !87

2086:                                             ; preds = %2077, %2068
  %2087 = phi i32 [ %2072, %2068 ], [ %2082, %2077 ]
  %2088 = and i64 %2037, 4294967295
  %2089 = getelementptr inbounds i32, ptr %6, i64 %2088
  %2090 = load i32, ptr %2089, align 4, !tbaa !6
  %2091 = mul nsw i32 %2090, %2087
  %2092 = add nsw i32 %2091, %2031
  %2093 = icmp sgt i64 %2029, 2
  %2094 = add nsw i64 %2030, -1
  %2095 = add i32 %2028, 1
  br i1 %2093, label %2027, label %2096, !llvm.loop !88

2096:                                             ; preds = %2086, %2023
  %2097 = phi i32 [ %2026, %2023 ], [ %2092, %2086 ]
  %2098 = icmp slt i32 %2097, %5
  br i1 %2098, label %2101, label %2099

2099:                                             ; preds = %2096
  %2100 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 66, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5547

2101:                                             ; preds = %2096
  %2102 = sext i32 %2097 to i64
  %2103 = getelementptr inbounds i8, ptr %1848, i64 %2102
  %2104 = load i8, ptr %2103, align 1, !tbaa !12
  %2105 = zext i8 %2104 to i16
  %2106 = icmp ult i16 %2024, %2105
  br i1 %2106, label %2107, label %2109

2107:                                             ; preds = %2101
  %2108 = zext i8 %2104 to i16
  store i16 %2108, ptr %1850, align 2, !tbaa !79
  br label %2109

2109:                                             ; preds = %2101, %2107
  %2110 = phi i16 [ %2024, %2101 ], [ %2108, %2107 ]
  %2111 = add nuw nsw i32 %2025, 1
  br i1 %1868, label %2112, label %2162

2112:                                             ; preds = %2109
  %2113 = load i32, ptr %4, align 4, !tbaa !6
  %2114 = load i32, ptr %12, align 4, !tbaa !6
  %2115 = add nsw i32 %2114, -1
  %2116 = icmp slt i32 %2113, %2115
  br i1 %2116, label %2139, label %2117

2117:                                             ; preds = %2112
  %2118 = icmp eq i32 %2113, %2115
  br i1 %2118, label %2119, label %2155

2119:                                             ; preds = %2117
  store i32 0, ptr %4, align 4, !tbaa !6
  %2120 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2120, ptr %6, align 4, !tbaa !6
  br i1 %1873, label %2162, label %2121

2121:                                             ; preds = %2119, %2149
  %2122 = phi i64 [ %2153, %2149 ], [ 1, %2119 ]
  %2123 = getelementptr inbounds i32, ptr %4, i64 %2122
  %2124 = load i32, ptr %2123, align 4, !tbaa !6
  %2125 = getelementptr inbounds i32, ptr %12, i64 %2122
  %2126 = load i32, ptr %2125, align 4, !tbaa !6
  %2127 = add nsw i32 %2126, -1
  %2128 = icmp slt i32 %2124, %2127
  br i1 %2128, label %2129, label %2147

2129:                                             ; preds = %2121
  br i1 %2116, label %2139, label %2130

2130:                                             ; preds = %2129
  %2131 = shl i64 %2122, 32
  %2132 = add i64 %2131, -4294967296
  %2133 = ashr exact i64 %2132, 32
  %2134 = getelementptr inbounds i32, ptr %7, i64 %2133
  %2135 = load i32, ptr %2134, align 4, !tbaa !6
  %2136 = getelementptr inbounds i32, ptr %6, i64 %2122
  %2137 = load i32, ptr %2136, align 4, !tbaa !6
  %2138 = add nsw i32 %2137, %2135
  store i32 %2138, ptr %2136, align 4, !tbaa !6
  br label %2157

2139:                                             ; preds = %2112, %2129
  %2140 = phi i32 [ %2124, %2129 ], [ %2113, %2112 ]
  %2141 = phi ptr [ %2123, %2129 ], [ %4, %2112 ]
  %2142 = phi i64 [ %2122, %2129 ], [ 0, %2112 ]
  %2143 = add nsw i32 %2140, 1
  store i32 %2143, ptr %2141, align 4, !tbaa !6
  %2144 = getelementptr inbounds i32, ptr %7, i64 %2142
  %2145 = load i32, ptr %2144, align 4, !tbaa !6
  %2146 = getelementptr inbounds i32, ptr %6, i64 %2142
  br label %2157

2147:                                             ; preds = %2121
  %2148 = icmp eq i32 %2124, %2127
  br i1 %2148, label %2149, label %2155

2149:                                             ; preds = %2147
  store i32 0, ptr %2123, align 4, !tbaa !6
  %2150 = getelementptr inbounds i32, ptr %8, i64 %2122
  %2151 = load i32, ptr %2150, align 4, !tbaa !6
  %2152 = getelementptr inbounds i32, ptr %6, i64 %2122
  store i32 %2151, ptr %2152, align 4, !tbaa !6
  %2153 = add nuw nsw i64 %2122, 1
  %2154 = icmp eq i64 %2153, %1871
  br i1 %2154, label %2162, label %2121, !llvm.loop !89

2155:                                             ; preds = %2117, %2147
  %2156 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 66, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5547

2157:                                             ; preds = %2130, %2139
  %2158 = phi ptr [ %2146, %2139 ], [ %2123, %2130 ]
  %2159 = phi i32 [ %2145, %2139 ], [ 1, %2130 ]
  %2160 = load i32, ptr %2158, align 4, !tbaa !6
  %2161 = add nsw i32 %2160, %2159
  store i32 %2161, ptr %2158, align 4, !tbaa !6
  br label %2162

2162:                                             ; preds = %2149, %2157, %2119, %2109
  %2163 = icmp eq i32 %2111, %5
  br i1 %2163, label %5542, label %2023, !llvm.loop !90

2164:                                             ; preds = %1859
  %2165 = getelementptr inbounds i32, ptr %3, i64 %19
  %2166 = load i32, ptr %2165, align 4, !tbaa !6
  %2167 = icmp eq i32 %2166, 0
  %2168 = icmp sgt i32 %5, 0
  br i1 %2167, label %2178, label %2169

2169:                                             ; preds = %2164
  br i1 %2168, label %2170, label %5542

2170:                                             ; preds = %2169
  %2171 = icmp sgt i32 %13, 1
  %2172 = icmp sgt i32 %13, 0
  %2173 = add i32 %13, -2
  %2174 = zext i32 %2173 to i64
  %2175 = zext i32 %13 to i64
  %2176 = add nuw i32 %5, 1
  %2177 = icmp eq i32 %13, 1
  br label %2323

2178:                                             ; preds = %2164
  br i1 %2168, label %2179, label %5542

2179:                                             ; preds = %2178
  %2180 = icmp sgt i32 %13, 1
  %2181 = icmp sgt i32 %13, 0
  %2182 = add i32 %13, -2
  %2183 = zext i32 %2182 to i64
  %2184 = zext i32 %13 to i64
  %2185 = add nuw i32 %5, 1
  %2186 = icmp eq i32 %13, 1
  br label %2187

2187:                                             ; preds = %2179, %2321
  %2188 = phi i16 [ %1852, %2179 ], [ %2271, %2321 ]
  %2189 = phi i32 [ 0, %2179 ], [ %2273, %2321 ]
  %2190 = phi double [ 0.000000e+00, %2179 ], [ %2272, %2321 ]
  %2191 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2180, label %2192, label %2261

2192:                                             ; preds = %2187, %2251
  %2193 = phi i32 [ %2260, %2251 ], [ 0, %2187 ]
  %2194 = phi i64 [ %2202, %2251 ], [ %2184, %2187 ]
  %2195 = phi i64 [ %2259, %2251 ], [ %2183, %2187 ]
  %2196 = phi i32 [ %2257, %2251 ], [ %2191, %2187 ]
  %2197 = sub i32 %2182, %2193
  %2198 = tail call i32 @llvm.smin.i32(i32 %2197, i32 0)
  %2199 = sub i32 %2197, %2198
  %2200 = zext i32 %2199 to i64
  %2201 = add nuw nsw i64 %2200, 1
  %2202 = add nsw i64 %2194, -1
  %2203 = icmp ult i32 %2199, 31
  br i1 %2203, label %2239, label %2204

2204:                                             ; preds = %2192
  %2205 = and i64 %2201, 8589934560
  %2206 = sub i64 %2195, %2205
  br label %2207

2207:                                             ; preds = %2207, %2204
  %2208 = phi i64 [ 0, %2204 ], [ %2231, %2207 ]
  %2209 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2204 ], [ %2227, %2207 ]
  %2210 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2204 ], [ %2228, %2207 ]
  %2211 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2204 ], [ %2229, %2207 ]
  %2212 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2204 ], [ %2230, %2207 ]
  %2213 = sub i64 %2195, %2208
  %2214 = getelementptr inbounds i32, ptr %9, i64 %2213
  %2215 = getelementptr inbounds i32, ptr %2214, i64 -7
  %2216 = load <8 x i32>, ptr %2215, align 4, !tbaa !6
  %2217 = shufflevector <8 x i32> %2216, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2218 = getelementptr inbounds i32, ptr %2214, i64 -15
  %2219 = load <8 x i32>, ptr %2218, align 4, !tbaa !6
  %2220 = shufflevector <8 x i32> %2219, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2221 = getelementptr inbounds i32, ptr %2214, i64 -23
  %2222 = load <8 x i32>, ptr %2221, align 4, !tbaa !6
  %2223 = shufflevector <8 x i32> %2222, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2224 = getelementptr inbounds i32, ptr %2214, i64 -31
  %2225 = load <8 x i32>, ptr %2224, align 4, !tbaa !6
  %2226 = shufflevector <8 x i32> %2225, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2227 = mul <8 x i32> %2217, %2209
  %2228 = mul <8 x i32> %2220, %2210
  %2229 = mul <8 x i32> %2223, %2211
  %2230 = mul <8 x i32> %2226, %2212
  %2231 = add nuw i64 %2208, 32
  %2232 = icmp eq i64 %2231, %2205
  br i1 %2232, label %2233, label %2207, !llvm.loop !91

2233:                                             ; preds = %2207
  %2234 = mul <8 x i32> %2228, %2227
  %2235 = mul <8 x i32> %2229, %2234
  %2236 = mul <8 x i32> %2230, %2235
  %2237 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2236)
  %2238 = icmp eq i64 %2201, %2205
  br i1 %2238, label %2251, label %2239

2239:                                             ; preds = %2192, %2233
  %2240 = phi i64 [ %2195, %2192 ], [ %2206, %2233 ]
  %2241 = phi i32 [ 1, %2192 ], [ %2237, %2233 ]
  br label %2242

2242:                                             ; preds = %2239, %2242
  %2243 = phi i64 [ %2248, %2242 ], [ %2240, %2239 ]
  %2244 = phi i32 [ %2247, %2242 ], [ %2241, %2239 ]
  %2245 = getelementptr inbounds i32, ptr %9, i64 %2243
  %2246 = load i32, ptr %2245, align 4, !tbaa !6
  %2247 = mul nsw i32 %2246, %2244
  %2248 = add nsw i64 %2243, -1
  %2249 = trunc i64 %2243 to i32
  %2250 = icmp sgt i32 %2249, 0
  br i1 %2250, label %2242, label %2251, !llvm.loop !92

2251:                                             ; preds = %2242, %2233
  %2252 = phi i32 [ %2237, %2233 ], [ %2247, %2242 ]
  %2253 = and i64 %2202, 4294967295
  %2254 = getelementptr inbounds i32, ptr %6, i64 %2253
  %2255 = load i32, ptr %2254, align 4, !tbaa !6
  %2256 = mul nsw i32 %2255, %2252
  %2257 = add nsw i32 %2256, %2196
  %2258 = icmp sgt i64 %2194, 2
  %2259 = add nsw i64 %2195, -1
  %2260 = add i32 %2193, 1
  br i1 %2258, label %2192, label %2261, !llvm.loop !93

2261:                                             ; preds = %2251, %2187
  %2262 = phi i32 [ %2191, %2187 ], [ %2257, %2251 ]
  %2263 = sext i32 %2262 to i64
  %2264 = getelementptr inbounds i8, ptr %1848, i64 %2263
  %2265 = load i8, ptr %2264, align 1, !tbaa !12
  %2266 = zext i8 %2265 to i16
  %2267 = icmp ult i16 %2188, %2266
  br i1 %2267, label %2268, label %2270

2268:                                             ; preds = %2261
  %2269 = zext i8 %2265 to i16
  store i16 %2269, ptr %1850, align 2, !tbaa !79
  br label %2270

2270:                                             ; preds = %2268, %2261
  %2271 = phi i16 [ %2269, %2268 ], [ %2188, %2261 ]
  %2272 = fadd fast double %2190, 1.000000e+00
  %2273 = add nuw nsw i32 %2189, 1
  br i1 %2181, label %2274, label %2321

2274:                                             ; preds = %2270
  %2275 = load i32, ptr %4, align 4, !tbaa !6
  %2276 = load i32, ptr %12, align 4, !tbaa !6
  %2277 = add nsw i32 %2276, -1
  %2278 = icmp slt i32 %2275, %2277
  br i1 %2278, label %2298, label %2279

2279:                                             ; preds = %2274
  %2280 = icmp eq i32 %2275, %2277
  br i1 %2280, label %2281, label %2314

2281:                                             ; preds = %2279
  store i32 0, ptr %4, align 4, !tbaa !6
  %2282 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2282, ptr %6, align 4, !tbaa !6
  br i1 %2186, label %2321, label %2283

2283:                                             ; preds = %2281, %2308
  %2284 = phi i64 [ %2312, %2308 ], [ 1, %2281 ]
  %2285 = getelementptr inbounds i32, ptr %4, i64 %2284
  %2286 = load i32, ptr %2285, align 4, !tbaa !6
  %2287 = getelementptr inbounds i32, ptr %12, i64 %2284
  %2288 = load i32, ptr %2287, align 4, !tbaa !6
  %2289 = add nsw i32 %2288, -1
  %2290 = icmp slt i32 %2286, %2289
  br i1 %2290, label %2291, label %2306

2291:                                             ; preds = %2283
  br i1 %2278, label %2298, label %2292

2292:                                             ; preds = %2291
  %2293 = getelementptr inbounds i32, ptr %7, i64 %2284
  %2294 = load i32, ptr %2293, align 4, !tbaa !6
  %2295 = getelementptr inbounds i32, ptr %6, i64 %2284
  %2296 = load i32, ptr %2295, align 4, !tbaa !6
  %2297 = add nsw i32 %2296, %2294
  store i32 %2297, ptr %2295, align 4, !tbaa !6
  br label %2316

2298:                                             ; preds = %2274, %2291
  %2299 = phi i32 [ %2286, %2291 ], [ %2275, %2274 ]
  %2300 = phi ptr [ %2285, %2291 ], [ %4, %2274 ]
  %2301 = phi i64 [ %2284, %2291 ], [ 0, %2274 ]
  %2302 = add nsw i32 %2299, 1
  store i32 %2302, ptr %2300, align 4, !tbaa !6
  %2303 = getelementptr inbounds i32, ptr %7, i64 %2301
  %2304 = load i32, ptr %2303, align 4, !tbaa !6
  %2305 = getelementptr inbounds i32, ptr %6, i64 %2301
  br label %2316

2306:                                             ; preds = %2283
  %2307 = icmp eq i32 %2286, %2289
  br i1 %2307, label %2308, label %2314

2308:                                             ; preds = %2306
  store i32 0, ptr %2285, align 4, !tbaa !6
  %2309 = getelementptr inbounds i32, ptr %8, i64 %2284
  %2310 = load i32, ptr %2309, align 4, !tbaa !6
  %2311 = getelementptr inbounds i32, ptr %6, i64 %2284
  store i32 %2310, ptr %2311, align 4, !tbaa !6
  %2312 = add nuw nsw i64 %2284, 1
  %2313 = icmp eq i64 %2312, %2184
  br i1 %2313, label %2321, label %2283, !llvm.loop !94

2314:                                             ; preds = %2279, %2306
  %2315 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 66, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5547

2316:                                             ; preds = %2292, %2298
  %2317 = phi ptr [ %2305, %2298 ], [ %2285, %2292 ]
  %2318 = phi i32 [ %2304, %2298 ], [ 1, %2292 ]
  %2319 = load i32, ptr %2317, align 4, !tbaa !6
  %2320 = add nsw i32 %2319, %2318
  store i32 %2320, ptr %2317, align 4, !tbaa !6
  br label %2321

2321:                                             ; preds = %2308, %2316, %2281, %2270
  %2322 = icmp eq i32 %2273, %5
  br i1 %2322, label %5542, label %2187, !llvm.loop !95

2323:                                             ; preds = %2170, %2462
  %2324 = phi i16 [ %1852, %2170 ], [ %2410, %2462 ]
  %2325 = phi i32 [ 0, %2170 ], [ %2411, %2462 ]
  %2326 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2171, label %2327, label %2396

2327:                                             ; preds = %2323, %2386
  %2328 = phi i32 [ %2395, %2386 ], [ 0, %2323 ]
  %2329 = phi i64 [ %2337, %2386 ], [ %2175, %2323 ]
  %2330 = phi i64 [ %2394, %2386 ], [ %2174, %2323 ]
  %2331 = phi i32 [ %2392, %2386 ], [ %2326, %2323 ]
  %2332 = sub i32 %2173, %2328
  %2333 = tail call i32 @llvm.smin.i32(i32 %2332, i32 0)
  %2334 = sub i32 %2332, %2333
  %2335 = zext i32 %2334 to i64
  %2336 = add nuw nsw i64 %2335, 1
  %2337 = add nsw i64 %2329, -1
  %2338 = icmp ult i32 %2334, 31
  br i1 %2338, label %2374, label %2339

2339:                                             ; preds = %2327
  %2340 = and i64 %2336, 8589934560
  %2341 = sub i64 %2330, %2340
  br label %2342

2342:                                             ; preds = %2342, %2339
  %2343 = phi i64 [ 0, %2339 ], [ %2366, %2342 ]
  %2344 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2339 ], [ %2362, %2342 ]
  %2345 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2339 ], [ %2363, %2342 ]
  %2346 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2339 ], [ %2364, %2342 ]
  %2347 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2339 ], [ %2365, %2342 ]
  %2348 = sub i64 %2330, %2343
  %2349 = getelementptr inbounds i32, ptr %11, i64 %2348
  %2350 = getelementptr inbounds i32, ptr %2349, i64 -7
  %2351 = load <8 x i32>, ptr %2350, align 4, !tbaa !6
  %2352 = shufflevector <8 x i32> %2351, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2353 = getelementptr inbounds i32, ptr %2349, i64 -15
  %2354 = load <8 x i32>, ptr %2353, align 4, !tbaa !6
  %2355 = shufflevector <8 x i32> %2354, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2356 = getelementptr inbounds i32, ptr %2349, i64 -23
  %2357 = load <8 x i32>, ptr %2356, align 4, !tbaa !6
  %2358 = shufflevector <8 x i32> %2357, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2359 = getelementptr inbounds i32, ptr %2349, i64 -31
  %2360 = load <8 x i32>, ptr %2359, align 4, !tbaa !6
  %2361 = shufflevector <8 x i32> %2360, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2362 = mul <8 x i32> %2352, %2344
  %2363 = mul <8 x i32> %2355, %2345
  %2364 = mul <8 x i32> %2358, %2346
  %2365 = mul <8 x i32> %2361, %2347
  %2366 = add nuw i64 %2343, 32
  %2367 = icmp eq i64 %2366, %2340
  br i1 %2367, label %2368, label %2342, !llvm.loop !96

2368:                                             ; preds = %2342
  %2369 = mul <8 x i32> %2363, %2362
  %2370 = mul <8 x i32> %2364, %2369
  %2371 = mul <8 x i32> %2365, %2370
  %2372 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2371)
  %2373 = icmp eq i64 %2336, %2340
  br i1 %2373, label %2386, label %2374

2374:                                             ; preds = %2327, %2368
  %2375 = phi i64 [ %2330, %2327 ], [ %2341, %2368 ]
  %2376 = phi i32 [ 1, %2327 ], [ %2372, %2368 ]
  br label %2377

2377:                                             ; preds = %2374, %2377
  %2378 = phi i64 [ %2383, %2377 ], [ %2375, %2374 ]
  %2379 = phi i32 [ %2382, %2377 ], [ %2376, %2374 ]
  %2380 = getelementptr inbounds i32, ptr %11, i64 %2378
  %2381 = load i32, ptr %2380, align 4, !tbaa !6
  %2382 = mul nsw i32 %2381, %2379
  %2383 = add nsw i64 %2378, -1
  %2384 = trunc i64 %2378 to i32
  %2385 = icmp sgt i32 %2384, 0
  br i1 %2385, label %2377, label %2386, !llvm.loop !97

2386:                                             ; preds = %2377, %2368
  %2387 = phi i32 [ %2372, %2368 ], [ %2382, %2377 ]
  %2388 = and i64 %2337, 4294967295
  %2389 = getelementptr inbounds i32, ptr %6, i64 %2388
  %2390 = load i32, ptr %2389, align 4, !tbaa !6
  %2391 = mul nsw i32 %2390, %2387
  %2392 = add nsw i32 %2391, %2331
  %2393 = icmp sgt i64 %2329, 2
  %2394 = add nsw i64 %2330, -1
  %2395 = add i32 %2328, 1
  br i1 %2393, label %2327, label %2396, !llvm.loop !98

2396:                                             ; preds = %2386, %2323
  %2397 = phi i32 [ %2326, %2323 ], [ %2392, %2386 ]
  %2398 = icmp slt i32 %2397, %5
  br i1 %2398, label %2401, label %2399

2399:                                             ; preds = %2396
  %2400 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 66, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5547

2401:                                             ; preds = %2396
  %2402 = sext i32 %2397 to i64
  %2403 = getelementptr inbounds i8, ptr %1848, i64 %2402
  %2404 = load i8, ptr %2403, align 1, !tbaa !12
  %2405 = zext i8 %2404 to i16
  %2406 = icmp ult i16 %2324, %2405
  br i1 %2406, label %2407, label %2409

2407:                                             ; preds = %2401
  %2408 = zext i8 %2404 to i16
  store i16 %2408, ptr %1850, align 2, !tbaa !79
  br label %2409

2409:                                             ; preds = %2407, %2401
  %2410 = phi i16 [ %2408, %2407 ], [ %2324, %2401 ]
  %2411 = add nuw nsw i32 %2325, 1
  br i1 %2172, label %2412, label %2462

2412:                                             ; preds = %2409
  %2413 = load i32, ptr %4, align 4, !tbaa !6
  %2414 = load i32, ptr %12, align 4, !tbaa !6
  %2415 = add nsw i32 %2414, -1
  %2416 = icmp slt i32 %2413, %2415
  br i1 %2416, label %2439, label %2417

2417:                                             ; preds = %2412
  %2418 = icmp eq i32 %2413, %2415
  br i1 %2418, label %2419, label %2455

2419:                                             ; preds = %2417
  store i32 0, ptr %4, align 4, !tbaa !6
  %2420 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2420, ptr %6, align 4, !tbaa !6
  br i1 %2177, label %2462, label %2421

2421:                                             ; preds = %2419, %2449
  %2422 = phi i64 [ %2453, %2449 ], [ 1, %2419 ]
  %2423 = getelementptr inbounds i32, ptr %4, i64 %2422
  %2424 = load i32, ptr %2423, align 4, !tbaa !6
  %2425 = getelementptr inbounds i32, ptr %12, i64 %2422
  %2426 = load i32, ptr %2425, align 4, !tbaa !6
  %2427 = add nsw i32 %2426, -1
  %2428 = icmp slt i32 %2424, %2427
  br i1 %2428, label %2429, label %2447

2429:                                             ; preds = %2421
  br i1 %2416, label %2439, label %2430

2430:                                             ; preds = %2429
  %2431 = shl i64 %2422, 32
  %2432 = add i64 %2431, -4294967296
  %2433 = ashr exact i64 %2432, 32
  %2434 = getelementptr inbounds i32, ptr %7, i64 %2433
  %2435 = load i32, ptr %2434, align 4, !tbaa !6
  %2436 = getelementptr inbounds i32, ptr %6, i64 %2422
  %2437 = load i32, ptr %2436, align 4, !tbaa !6
  %2438 = add nsw i32 %2437, %2435
  store i32 %2438, ptr %2436, align 4, !tbaa !6
  br label %2457

2439:                                             ; preds = %2412, %2429
  %2440 = phi i32 [ %2424, %2429 ], [ %2413, %2412 ]
  %2441 = phi ptr [ %2423, %2429 ], [ %4, %2412 ]
  %2442 = phi i64 [ %2422, %2429 ], [ 0, %2412 ]
  %2443 = add nsw i32 %2440, 1
  store i32 %2443, ptr %2441, align 4, !tbaa !6
  %2444 = getelementptr inbounds i32, ptr %7, i64 %2442
  %2445 = load i32, ptr %2444, align 4, !tbaa !6
  %2446 = getelementptr inbounds i32, ptr %6, i64 %2442
  br label %2457

2447:                                             ; preds = %2421
  %2448 = icmp eq i32 %2424, %2427
  br i1 %2448, label %2449, label %2455

2449:                                             ; preds = %2447
  store i32 0, ptr %2423, align 4, !tbaa !6
  %2450 = getelementptr inbounds i32, ptr %8, i64 %2422
  %2451 = load i32, ptr %2450, align 4, !tbaa !6
  %2452 = getelementptr inbounds i32, ptr %6, i64 %2422
  store i32 %2451, ptr %2452, align 4, !tbaa !6
  %2453 = add nuw nsw i64 %2422, 1
  %2454 = icmp eq i64 %2453, %2175
  br i1 %2454, label %2462, label %2421, !llvm.loop !99

2455:                                             ; preds = %2417, %2447
  %2456 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 66, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5547

2457:                                             ; preds = %2430, %2439
  %2458 = phi ptr [ %2446, %2439 ], [ %2423, %2430 ]
  %2459 = phi i32 [ %2445, %2439 ], [ 1, %2430 ]
  %2460 = load i32, ptr %2458, align 4, !tbaa !6
  %2461 = add nsw i32 %2460, %2459
  store i32 %2461, ptr %2458, align 4, !tbaa !6
  br label %2462

2462:                                             ; preds = %2449, %2457, %2419, %2409
  %2463 = icmp eq i32 %2411, %5
  br i1 %2463, label %5542, label %2323, !llvm.loop !100

2464:                                             ; preds = %1859
  %2465 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 66, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5542

2466:                                             ; preds = %18
  %2467 = getelementptr inbounds ptr, ptr %14, i64 %19
  %2468 = load ptr, ptr %2467, align 8, !tbaa !10
  %2469 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2470 = load ptr, ptr %2469, align 8, !tbaa !10
  %2471 = load i8, ptr %2468, align 1, !tbaa !12
  %2472 = zext i8 %2471 to i32
  store i32 %2472, ptr %2470, align 4, !tbaa !6
  %2473 = icmp eq i32 %13, 0
  br i1 %2473, label %2474, label %2479

2474:                                             ; preds = %2466
  %2475 = load i8, ptr %2468, align 1, !tbaa !12
  %2476 = icmp ult i8 %2471, %2475
  br i1 %2476, label %2477, label %5542

2477:                                             ; preds = %2474
  %2478 = zext i8 %2475 to i32
  store i32 %2478, ptr %2470, align 4, !tbaa !6
  br label %5542

2479:                                             ; preds = %2466
  switch i32 %1, label %3076 [
    i32 1, label %2480
    i32 0, label %2780
  ]

2480:                                             ; preds = %2479
  %2481 = getelementptr inbounds i32, ptr %3, i64 %19
  %2482 = load i32, ptr %2481, align 4, !tbaa !6
  %2483 = icmp eq i32 %2482, 0
  %2484 = icmp sgt i32 %5, 0
  br i1 %2483, label %2494, label %2485

2485:                                             ; preds = %2480
  br i1 %2484, label %2486, label %5542

2486:                                             ; preds = %2485
  %2487 = icmp sgt i32 %13, 1
  %2488 = icmp sgt i32 %13, 0
  %2489 = add i32 %13, -2
  %2490 = zext i32 %2489 to i64
  %2491 = zext i32 %13 to i64
  %2492 = add nuw i32 %5, 1
  %2493 = icmp eq i32 %13, 1
  br label %2641

2494:                                             ; preds = %2480
  br i1 %2484, label %2495, label %5542

2495:                                             ; preds = %2494
  %2496 = icmp sgt i32 %13, 1
  %2497 = icmp sgt i32 %13, 0
  %2498 = add i32 %13, -2
  %2499 = zext i32 %2498 to i64
  %2500 = zext i32 %13 to i64
  %2501 = add nuw i32 %5, 1
  %2502 = icmp eq i32 %13, 1
  br label %2503

2503:                                             ; preds = %2495, %2639
  %2504 = phi i32 [ 0, %2495 ], [ %2591, %2639 ]
  %2505 = phi double [ 0.000000e+00, %2495 ], [ %2590, %2639 ]
  %2506 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2496, label %2507, label %2576

2507:                                             ; preds = %2503, %2566
  %2508 = phi i32 [ %2575, %2566 ], [ 0, %2503 ]
  %2509 = phi i64 [ %2517, %2566 ], [ %2500, %2503 ]
  %2510 = phi i64 [ %2574, %2566 ], [ %2499, %2503 ]
  %2511 = phi i32 [ %2572, %2566 ], [ %2506, %2503 ]
  %2512 = sub i32 %2498, %2508
  %2513 = tail call i32 @llvm.smin.i32(i32 %2512, i32 0)
  %2514 = sub i32 %2512, %2513
  %2515 = zext i32 %2514 to i64
  %2516 = add nuw nsw i64 %2515, 1
  %2517 = add nsw i64 %2509, -1
  %2518 = icmp ult i32 %2514, 31
  br i1 %2518, label %2554, label %2519

2519:                                             ; preds = %2507
  %2520 = and i64 %2516, 8589934560
  %2521 = sub i64 %2510, %2520
  br label %2522

2522:                                             ; preds = %2522, %2519
  %2523 = phi i64 [ 0, %2519 ], [ %2546, %2522 ]
  %2524 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2519 ], [ %2542, %2522 ]
  %2525 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2519 ], [ %2543, %2522 ]
  %2526 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2519 ], [ %2544, %2522 ]
  %2527 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2519 ], [ %2545, %2522 ]
  %2528 = sub i64 %2510, %2523
  %2529 = getelementptr inbounds i32, ptr %9, i64 %2528
  %2530 = getelementptr inbounds i32, ptr %2529, i64 -7
  %2531 = load <8 x i32>, ptr %2530, align 4, !tbaa !6
  %2532 = shufflevector <8 x i32> %2531, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2533 = getelementptr inbounds i32, ptr %2529, i64 -15
  %2534 = load <8 x i32>, ptr %2533, align 4, !tbaa !6
  %2535 = shufflevector <8 x i32> %2534, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2536 = getelementptr inbounds i32, ptr %2529, i64 -23
  %2537 = load <8 x i32>, ptr %2536, align 4, !tbaa !6
  %2538 = shufflevector <8 x i32> %2537, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2539 = getelementptr inbounds i32, ptr %2529, i64 -31
  %2540 = load <8 x i32>, ptr %2539, align 4, !tbaa !6
  %2541 = shufflevector <8 x i32> %2540, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2542 = mul <8 x i32> %2532, %2524
  %2543 = mul <8 x i32> %2535, %2525
  %2544 = mul <8 x i32> %2538, %2526
  %2545 = mul <8 x i32> %2541, %2527
  %2546 = add nuw i64 %2523, 32
  %2547 = icmp eq i64 %2546, %2520
  br i1 %2547, label %2548, label %2522, !llvm.loop !101

2548:                                             ; preds = %2522
  %2549 = mul <8 x i32> %2543, %2542
  %2550 = mul <8 x i32> %2544, %2549
  %2551 = mul <8 x i32> %2545, %2550
  %2552 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2551)
  %2553 = icmp eq i64 %2516, %2520
  br i1 %2553, label %2566, label %2554

2554:                                             ; preds = %2507, %2548
  %2555 = phi i64 [ %2510, %2507 ], [ %2521, %2548 ]
  %2556 = phi i32 [ 1, %2507 ], [ %2552, %2548 ]
  br label %2557

2557:                                             ; preds = %2554, %2557
  %2558 = phi i64 [ %2563, %2557 ], [ %2555, %2554 ]
  %2559 = phi i32 [ %2562, %2557 ], [ %2556, %2554 ]
  %2560 = getelementptr inbounds i32, ptr %9, i64 %2558
  %2561 = load i32, ptr %2560, align 4, !tbaa !6
  %2562 = mul nsw i32 %2561, %2559
  %2563 = add nsw i64 %2558, -1
  %2564 = trunc i64 %2558 to i32
  %2565 = icmp sgt i32 %2564, 0
  br i1 %2565, label %2557, label %2566, !llvm.loop !102

2566:                                             ; preds = %2557, %2548
  %2567 = phi i32 [ %2552, %2548 ], [ %2562, %2557 ]
  %2568 = and i64 %2517, 4294967295
  %2569 = getelementptr inbounds i32, ptr %6, i64 %2568
  %2570 = load i32, ptr %2569, align 4, !tbaa !6
  %2571 = mul nsw i32 %2570, %2567
  %2572 = add nsw i32 %2571, %2511
  %2573 = icmp sgt i64 %2509, 2
  %2574 = add nsw i64 %2510, -1
  %2575 = add i32 %2508, 1
  br i1 %2573, label %2507, label %2576, !llvm.loop !103

2576:                                             ; preds = %2566, %2503
  %2577 = phi i32 [ %2506, %2503 ], [ %2572, %2566 ]
  %2578 = sext i32 %2577 to i64
  %2579 = getelementptr inbounds double, ptr %2, i64 %2578
  %2580 = load double, ptr %2579, align 8, !tbaa !19
  %2581 = getelementptr inbounds i8, ptr %2468, i64 %2578
  %2582 = load i8, ptr %2581, align 1, !tbaa !12
  %2583 = zext i8 %2582 to i32
  %2584 = fcmp fast ueq double %2580, 0.000000e+00
  br i1 %2584, label %2589, label %2585

2585:                                             ; preds = %2576
  %2586 = load i32, ptr %2470, align 4, !tbaa !6
  %2587 = icmp slt i32 %2586, %2583
  br i1 %2587, label %2588, label %2589

2588:                                             ; preds = %2585
  store i32 %2583, ptr %2470, align 4, !tbaa !6
  br label %2589

2589:                                             ; preds = %2585, %2588, %2576
  %2590 = fadd fast double %2580, %2505
  %2591 = add nuw nsw i32 %2504, 1
  br i1 %2497, label %2592, label %2639

2592:                                             ; preds = %2589
  %2593 = load i32, ptr %4, align 4, !tbaa !6
  %2594 = load i32, ptr %12, align 4, !tbaa !6
  %2595 = add nsw i32 %2594, -1
  %2596 = icmp slt i32 %2593, %2595
  br i1 %2596, label %2616, label %2597

2597:                                             ; preds = %2592
  %2598 = icmp eq i32 %2593, %2595
  br i1 %2598, label %2599, label %2632

2599:                                             ; preds = %2597
  store i32 0, ptr %4, align 4, !tbaa !6
  %2600 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2600, ptr %6, align 4, !tbaa !6
  br i1 %2502, label %2639, label %2601

2601:                                             ; preds = %2599, %2626
  %2602 = phi i64 [ %2630, %2626 ], [ 1, %2599 ]
  %2603 = getelementptr inbounds i32, ptr %4, i64 %2602
  %2604 = load i32, ptr %2603, align 4, !tbaa !6
  %2605 = getelementptr inbounds i32, ptr %12, i64 %2602
  %2606 = load i32, ptr %2605, align 4, !tbaa !6
  %2607 = add nsw i32 %2606, -1
  %2608 = icmp slt i32 %2604, %2607
  br i1 %2608, label %2609, label %2624

2609:                                             ; preds = %2601
  br i1 %2596, label %2616, label %2610

2610:                                             ; preds = %2609
  %2611 = getelementptr inbounds i32, ptr %7, i64 %2602
  %2612 = load i32, ptr %2611, align 4, !tbaa !6
  %2613 = getelementptr inbounds i32, ptr %6, i64 %2602
  %2614 = load i32, ptr %2613, align 4, !tbaa !6
  %2615 = add nsw i32 %2614, %2612
  store i32 %2615, ptr %2613, align 4, !tbaa !6
  br label %2634

2616:                                             ; preds = %2592, %2609
  %2617 = phi i32 [ %2604, %2609 ], [ %2593, %2592 ]
  %2618 = phi ptr [ %2603, %2609 ], [ %4, %2592 ]
  %2619 = phi i64 [ %2602, %2609 ], [ 0, %2592 ]
  %2620 = add nsw i32 %2617, 1
  store i32 %2620, ptr %2618, align 4, !tbaa !6
  %2621 = getelementptr inbounds i32, ptr %7, i64 %2619
  %2622 = load i32, ptr %2621, align 4, !tbaa !6
  %2623 = getelementptr inbounds i32, ptr %6, i64 %2619
  br label %2634

2624:                                             ; preds = %2601
  %2625 = icmp eq i32 %2604, %2607
  br i1 %2625, label %2626, label %2632

2626:                                             ; preds = %2624
  store i32 0, ptr %2603, align 4, !tbaa !6
  %2627 = getelementptr inbounds i32, ptr %8, i64 %2602
  %2628 = load i32, ptr %2627, align 4, !tbaa !6
  %2629 = getelementptr inbounds i32, ptr %6, i64 %2602
  store i32 %2628, ptr %2629, align 4, !tbaa !6
  %2630 = add nuw nsw i64 %2602, 1
  %2631 = icmp eq i64 %2630, %2500
  br i1 %2631, label %2639, label %2601, !llvm.loop !104

2632:                                             ; preds = %2597, %2624
  %2633 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 71, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5547

2634:                                             ; preds = %2610, %2616
  %2635 = phi ptr [ %2623, %2616 ], [ %2603, %2610 ]
  %2636 = phi i32 [ %2622, %2616 ], [ 1, %2610 ]
  %2637 = load i32, ptr %2635, align 4, !tbaa !6
  %2638 = add nsw i32 %2637, %2636
  store i32 %2638, ptr %2635, align 4, !tbaa !6
  br label %2639

2639:                                             ; preds = %2626, %2634, %2599, %2589
  %2640 = icmp eq i32 %2591, %5
  br i1 %2640, label %5542, label %2503, !llvm.loop !105

2641:                                             ; preds = %2486, %2778
  %2642 = phi i32 [ 0, %2486 ], [ %2727, %2778 ]
  %2643 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2487, label %2644, label %2713

2644:                                             ; preds = %2641, %2703
  %2645 = phi i32 [ %2712, %2703 ], [ 0, %2641 ]
  %2646 = phi i64 [ %2654, %2703 ], [ %2491, %2641 ]
  %2647 = phi i64 [ %2711, %2703 ], [ %2490, %2641 ]
  %2648 = phi i32 [ %2709, %2703 ], [ %2643, %2641 ]
  %2649 = sub i32 %2489, %2645
  %2650 = tail call i32 @llvm.smin.i32(i32 %2649, i32 0)
  %2651 = sub i32 %2649, %2650
  %2652 = zext i32 %2651 to i64
  %2653 = add nuw nsw i64 %2652, 1
  %2654 = add nsw i64 %2646, -1
  %2655 = icmp ult i32 %2651, 31
  br i1 %2655, label %2691, label %2656

2656:                                             ; preds = %2644
  %2657 = and i64 %2653, 8589934560
  %2658 = sub i64 %2647, %2657
  br label %2659

2659:                                             ; preds = %2659, %2656
  %2660 = phi i64 [ 0, %2656 ], [ %2683, %2659 ]
  %2661 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2656 ], [ %2679, %2659 ]
  %2662 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2656 ], [ %2680, %2659 ]
  %2663 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2656 ], [ %2681, %2659 ]
  %2664 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2656 ], [ %2682, %2659 ]
  %2665 = sub i64 %2647, %2660
  %2666 = getelementptr inbounds i32, ptr %11, i64 %2665
  %2667 = getelementptr inbounds i32, ptr %2666, i64 -7
  %2668 = load <8 x i32>, ptr %2667, align 4, !tbaa !6
  %2669 = shufflevector <8 x i32> %2668, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2670 = getelementptr inbounds i32, ptr %2666, i64 -15
  %2671 = load <8 x i32>, ptr %2670, align 4, !tbaa !6
  %2672 = shufflevector <8 x i32> %2671, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2673 = getelementptr inbounds i32, ptr %2666, i64 -23
  %2674 = load <8 x i32>, ptr %2673, align 4, !tbaa !6
  %2675 = shufflevector <8 x i32> %2674, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2676 = getelementptr inbounds i32, ptr %2666, i64 -31
  %2677 = load <8 x i32>, ptr %2676, align 4, !tbaa !6
  %2678 = shufflevector <8 x i32> %2677, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2679 = mul <8 x i32> %2669, %2661
  %2680 = mul <8 x i32> %2672, %2662
  %2681 = mul <8 x i32> %2675, %2663
  %2682 = mul <8 x i32> %2678, %2664
  %2683 = add nuw i64 %2660, 32
  %2684 = icmp eq i64 %2683, %2657
  br i1 %2684, label %2685, label %2659, !llvm.loop !106

2685:                                             ; preds = %2659
  %2686 = mul <8 x i32> %2680, %2679
  %2687 = mul <8 x i32> %2681, %2686
  %2688 = mul <8 x i32> %2682, %2687
  %2689 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2688)
  %2690 = icmp eq i64 %2653, %2657
  br i1 %2690, label %2703, label %2691

2691:                                             ; preds = %2644, %2685
  %2692 = phi i64 [ %2647, %2644 ], [ %2658, %2685 ]
  %2693 = phi i32 [ 1, %2644 ], [ %2689, %2685 ]
  br label %2694

2694:                                             ; preds = %2691, %2694
  %2695 = phi i64 [ %2700, %2694 ], [ %2692, %2691 ]
  %2696 = phi i32 [ %2699, %2694 ], [ %2693, %2691 ]
  %2697 = getelementptr inbounds i32, ptr %11, i64 %2695
  %2698 = load i32, ptr %2697, align 4, !tbaa !6
  %2699 = mul nsw i32 %2698, %2696
  %2700 = add nsw i64 %2695, -1
  %2701 = trunc i64 %2695 to i32
  %2702 = icmp sgt i32 %2701, 0
  br i1 %2702, label %2694, label %2703, !llvm.loop !107

2703:                                             ; preds = %2694, %2685
  %2704 = phi i32 [ %2689, %2685 ], [ %2699, %2694 ]
  %2705 = and i64 %2654, 4294967295
  %2706 = getelementptr inbounds i32, ptr %6, i64 %2705
  %2707 = load i32, ptr %2706, align 4, !tbaa !6
  %2708 = mul nsw i32 %2707, %2704
  %2709 = add nsw i32 %2708, %2648
  %2710 = icmp sgt i64 %2646, 2
  %2711 = add nsw i64 %2647, -1
  %2712 = add i32 %2645, 1
  br i1 %2710, label %2644, label %2713, !llvm.loop !108

2713:                                             ; preds = %2703, %2641
  %2714 = phi i32 [ %2643, %2641 ], [ %2709, %2703 ]
  %2715 = icmp slt i32 %2714, %5
  br i1 %2715, label %2718, label %2716

2716:                                             ; preds = %2713
  %2717 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 71, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5547

2718:                                             ; preds = %2713
  %2719 = sext i32 %2714 to i64
  %2720 = getelementptr inbounds i8, ptr %2468, i64 %2719
  %2721 = load i8, ptr %2720, align 1, !tbaa !12
  %2722 = zext i8 %2721 to i32
  %2723 = load i32, ptr %2470, align 4, !tbaa !6
  %2724 = icmp slt i32 %2723, %2722
  br i1 %2724, label %2725, label %2726

2725:                                             ; preds = %2718
  store i32 %2722, ptr %2470, align 4, !tbaa !6
  br label %2726

2726:                                             ; preds = %2718, %2725
  %2727 = add nuw nsw i32 %2642, 1
  br i1 %2488, label %2728, label %2778

2728:                                             ; preds = %2726
  %2729 = load i32, ptr %4, align 4, !tbaa !6
  %2730 = load i32, ptr %12, align 4, !tbaa !6
  %2731 = add nsw i32 %2730, -1
  %2732 = icmp slt i32 %2729, %2731
  br i1 %2732, label %2755, label %2733

2733:                                             ; preds = %2728
  %2734 = icmp eq i32 %2729, %2731
  br i1 %2734, label %2735, label %2771

2735:                                             ; preds = %2733
  store i32 0, ptr %4, align 4, !tbaa !6
  %2736 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2736, ptr %6, align 4, !tbaa !6
  br i1 %2493, label %2778, label %2737

2737:                                             ; preds = %2735, %2765
  %2738 = phi i64 [ %2769, %2765 ], [ 1, %2735 ]
  %2739 = getelementptr inbounds i32, ptr %4, i64 %2738
  %2740 = load i32, ptr %2739, align 4, !tbaa !6
  %2741 = getelementptr inbounds i32, ptr %12, i64 %2738
  %2742 = load i32, ptr %2741, align 4, !tbaa !6
  %2743 = add nsw i32 %2742, -1
  %2744 = icmp slt i32 %2740, %2743
  br i1 %2744, label %2745, label %2763

2745:                                             ; preds = %2737
  br i1 %2732, label %2755, label %2746

2746:                                             ; preds = %2745
  %2747 = shl i64 %2738, 32
  %2748 = add i64 %2747, -4294967296
  %2749 = ashr exact i64 %2748, 32
  %2750 = getelementptr inbounds i32, ptr %7, i64 %2749
  %2751 = load i32, ptr %2750, align 4, !tbaa !6
  %2752 = getelementptr inbounds i32, ptr %6, i64 %2738
  %2753 = load i32, ptr %2752, align 4, !tbaa !6
  %2754 = add nsw i32 %2753, %2751
  store i32 %2754, ptr %2752, align 4, !tbaa !6
  br label %2773

2755:                                             ; preds = %2728, %2745
  %2756 = phi i32 [ %2740, %2745 ], [ %2729, %2728 ]
  %2757 = phi ptr [ %2739, %2745 ], [ %4, %2728 ]
  %2758 = phi i64 [ %2738, %2745 ], [ 0, %2728 ]
  %2759 = add nsw i32 %2756, 1
  store i32 %2759, ptr %2757, align 4, !tbaa !6
  %2760 = getelementptr inbounds i32, ptr %7, i64 %2758
  %2761 = load i32, ptr %2760, align 4, !tbaa !6
  %2762 = getelementptr inbounds i32, ptr %6, i64 %2758
  br label %2773

2763:                                             ; preds = %2737
  %2764 = icmp eq i32 %2740, %2743
  br i1 %2764, label %2765, label %2771

2765:                                             ; preds = %2763
  store i32 0, ptr %2739, align 4, !tbaa !6
  %2766 = getelementptr inbounds i32, ptr %8, i64 %2738
  %2767 = load i32, ptr %2766, align 4, !tbaa !6
  %2768 = getelementptr inbounds i32, ptr %6, i64 %2738
  store i32 %2767, ptr %2768, align 4, !tbaa !6
  %2769 = add nuw nsw i64 %2738, 1
  %2770 = icmp eq i64 %2769, %2491
  br i1 %2770, label %2778, label %2737, !llvm.loop !109

2771:                                             ; preds = %2733, %2763
  %2772 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 71, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5547

2773:                                             ; preds = %2746, %2755
  %2774 = phi ptr [ %2762, %2755 ], [ %2739, %2746 ]
  %2775 = phi i32 [ %2761, %2755 ], [ 1, %2746 ]
  %2776 = load i32, ptr %2774, align 4, !tbaa !6
  %2777 = add nsw i32 %2776, %2775
  store i32 %2777, ptr %2774, align 4, !tbaa !6
  br label %2778

2778:                                             ; preds = %2765, %2773, %2735, %2726
  %2779 = icmp eq i32 %2727, %5
  br i1 %2779, label %5542, label %2641, !llvm.loop !110

2780:                                             ; preds = %2479
  %2781 = getelementptr inbounds i32, ptr %3, i64 %19
  %2782 = load i32, ptr %2781, align 4, !tbaa !6
  %2783 = icmp eq i32 %2782, 0
  %2784 = icmp sgt i32 %5, 0
  br i1 %2783, label %2794, label %2785

2785:                                             ; preds = %2780
  br i1 %2784, label %2786, label %5542

2786:                                             ; preds = %2785
  %2787 = icmp sgt i32 %13, 1
  %2788 = icmp sgt i32 %13, 0
  %2789 = add i32 %13, -2
  %2790 = zext i32 %2789 to i64
  %2791 = zext i32 %13 to i64
  %2792 = add nuw i32 %5, 1
  %2793 = icmp eq i32 %13, 1
  br label %2937

2794:                                             ; preds = %2780
  br i1 %2784, label %2795, label %5542

2795:                                             ; preds = %2794
  %2796 = icmp sgt i32 %13, 1
  %2797 = icmp sgt i32 %13, 0
  %2798 = add i32 %13, -2
  %2799 = zext i32 %2798 to i64
  %2800 = zext i32 %13 to i64
  %2801 = add nuw i32 %5, 1
  %2802 = icmp eq i32 %13, 1
  br label %2803

2803:                                             ; preds = %2795, %2935
  %2804 = phi i32 [ 0, %2795 ], [ %2887, %2935 ]
  %2805 = phi double [ 0.000000e+00, %2795 ], [ %2886, %2935 ]
  %2806 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2796, label %2807, label %2876

2807:                                             ; preds = %2803, %2866
  %2808 = phi i32 [ %2875, %2866 ], [ 0, %2803 ]
  %2809 = phi i64 [ %2817, %2866 ], [ %2800, %2803 ]
  %2810 = phi i64 [ %2874, %2866 ], [ %2799, %2803 ]
  %2811 = phi i32 [ %2872, %2866 ], [ %2806, %2803 ]
  %2812 = sub i32 %2798, %2808
  %2813 = tail call i32 @llvm.smin.i32(i32 %2812, i32 0)
  %2814 = sub i32 %2812, %2813
  %2815 = zext i32 %2814 to i64
  %2816 = add nuw nsw i64 %2815, 1
  %2817 = add nsw i64 %2809, -1
  %2818 = icmp ult i32 %2814, 31
  br i1 %2818, label %2854, label %2819

2819:                                             ; preds = %2807
  %2820 = and i64 %2816, 8589934560
  %2821 = sub i64 %2810, %2820
  br label %2822

2822:                                             ; preds = %2822, %2819
  %2823 = phi i64 [ 0, %2819 ], [ %2846, %2822 ]
  %2824 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2819 ], [ %2842, %2822 ]
  %2825 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2819 ], [ %2843, %2822 ]
  %2826 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2819 ], [ %2844, %2822 ]
  %2827 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2819 ], [ %2845, %2822 ]
  %2828 = sub i64 %2810, %2823
  %2829 = getelementptr inbounds i32, ptr %9, i64 %2828
  %2830 = getelementptr inbounds i32, ptr %2829, i64 -7
  %2831 = load <8 x i32>, ptr %2830, align 4, !tbaa !6
  %2832 = shufflevector <8 x i32> %2831, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2833 = getelementptr inbounds i32, ptr %2829, i64 -15
  %2834 = load <8 x i32>, ptr %2833, align 4, !tbaa !6
  %2835 = shufflevector <8 x i32> %2834, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2836 = getelementptr inbounds i32, ptr %2829, i64 -23
  %2837 = load <8 x i32>, ptr %2836, align 4, !tbaa !6
  %2838 = shufflevector <8 x i32> %2837, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2839 = getelementptr inbounds i32, ptr %2829, i64 -31
  %2840 = load <8 x i32>, ptr %2839, align 4, !tbaa !6
  %2841 = shufflevector <8 x i32> %2840, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2842 = mul <8 x i32> %2832, %2824
  %2843 = mul <8 x i32> %2835, %2825
  %2844 = mul <8 x i32> %2838, %2826
  %2845 = mul <8 x i32> %2841, %2827
  %2846 = add nuw i64 %2823, 32
  %2847 = icmp eq i64 %2846, %2820
  br i1 %2847, label %2848, label %2822, !llvm.loop !111

2848:                                             ; preds = %2822
  %2849 = mul <8 x i32> %2843, %2842
  %2850 = mul <8 x i32> %2844, %2849
  %2851 = mul <8 x i32> %2845, %2850
  %2852 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2851)
  %2853 = icmp eq i64 %2816, %2820
  br i1 %2853, label %2866, label %2854

2854:                                             ; preds = %2807, %2848
  %2855 = phi i64 [ %2810, %2807 ], [ %2821, %2848 ]
  %2856 = phi i32 [ 1, %2807 ], [ %2852, %2848 ]
  br label %2857

2857:                                             ; preds = %2854, %2857
  %2858 = phi i64 [ %2863, %2857 ], [ %2855, %2854 ]
  %2859 = phi i32 [ %2862, %2857 ], [ %2856, %2854 ]
  %2860 = getelementptr inbounds i32, ptr %9, i64 %2858
  %2861 = load i32, ptr %2860, align 4, !tbaa !6
  %2862 = mul nsw i32 %2861, %2859
  %2863 = add nsw i64 %2858, -1
  %2864 = trunc i64 %2858 to i32
  %2865 = icmp sgt i32 %2864, 0
  br i1 %2865, label %2857, label %2866, !llvm.loop !112

2866:                                             ; preds = %2857, %2848
  %2867 = phi i32 [ %2852, %2848 ], [ %2862, %2857 ]
  %2868 = and i64 %2817, 4294967295
  %2869 = getelementptr inbounds i32, ptr %6, i64 %2868
  %2870 = load i32, ptr %2869, align 4, !tbaa !6
  %2871 = mul nsw i32 %2870, %2867
  %2872 = add nsw i32 %2871, %2811
  %2873 = icmp sgt i64 %2809, 2
  %2874 = add nsw i64 %2810, -1
  %2875 = add i32 %2808, 1
  br i1 %2873, label %2807, label %2876, !llvm.loop !113

2876:                                             ; preds = %2866, %2803
  %2877 = phi i32 [ %2806, %2803 ], [ %2872, %2866 ]
  %2878 = sext i32 %2877 to i64
  %2879 = getelementptr inbounds i8, ptr %2468, i64 %2878
  %2880 = load i8, ptr %2879, align 1, !tbaa !12
  %2881 = zext i8 %2880 to i32
  %2882 = load i32, ptr %2470, align 4, !tbaa !6
  %2883 = icmp slt i32 %2882, %2881
  br i1 %2883, label %2884, label %2885

2884:                                             ; preds = %2876
  store i32 %2881, ptr %2470, align 4, !tbaa !6
  br label %2885

2885:                                             ; preds = %2884, %2876
  %2886 = fadd fast double %2805, 1.000000e+00
  %2887 = add nuw nsw i32 %2804, 1
  br i1 %2797, label %2888, label %2935

2888:                                             ; preds = %2885
  %2889 = load i32, ptr %4, align 4, !tbaa !6
  %2890 = load i32, ptr %12, align 4, !tbaa !6
  %2891 = add nsw i32 %2890, -1
  %2892 = icmp slt i32 %2889, %2891
  br i1 %2892, label %2912, label %2893

2893:                                             ; preds = %2888
  %2894 = icmp eq i32 %2889, %2891
  br i1 %2894, label %2895, label %2928

2895:                                             ; preds = %2893
  store i32 0, ptr %4, align 4, !tbaa !6
  %2896 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2896, ptr %6, align 4, !tbaa !6
  br i1 %2802, label %2935, label %2897

2897:                                             ; preds = %2895, %2922
  %2898 = phi i64 [ %2926, %2922 ], [ 1, %2895 ]
  %2899 = getelementptr inbounds i32, ptr %4, i64 %2898
  %2900 = load i32, ptr %2899, align 4, !tbaa !6
  %2901 = getelementptr inbounds i32, ptr %12, i64 %2898
  %2902 = load i32, ptr %2901, align 4, !tbaa !6
  %2903 = add nsw i32 %2902, -1
  %2904 = icmp slt i32 %2900, %2903
  br i1 %2904, label %2905, label %2920

2905:                                             ; preds = %2897
  br i1 %2892, label %2912, label %2906

2906:                                             ; preds = %2905
  %2907 = getelementptr inbounds i32, ptr %7, i64 %2898
  %2908 = load i32, ptr %2907, align 4, !tbaa !6
  %2909 = getelementptr inbounds i32, ptr %6, i64 %2898
  %2910 = load i32, ptr %2909, align 4, !tbaa !6
  %2911 = add nsw i32 %2910, %2908
  store i32 %2911, ptr %2909, align 4, !tbaa !6
  br label %2930

2912:                                             ; preds = %2888, %2905
  %2913 = phi i32 [ %2900, %2905 ], [ %2889, %2888 ]
  %2914 = phi ptr [ %2899, %2905 ], [ %4, %2888 ]
  %2915 = phi i64 [ %2898, %2905 ], [ 0, %2888 ]
  %2916 = add nsw i32 %2913, 1
  store i32 %2916, ptr %2914, align 4, !tbaa !6
  %2917 = getelementptr inbounds i32, ptr %7, i64 %2915
  %2918 = load i32, ptr %2917, align 4, !tbaa !6
  %2919 = getelementptr inbounds i32, ptr %6, i64 %2915
  br label %2930

2920:                                             ; preds = %2897
  %2921 = icmp eq i32 %2900, %2903
  br i1 %2921, label %2922, label %2928

2922:                                             ; preds = %2920
  store i32 0, ptr %2899, align 4, !tbaa !6
  %2923 = getelementptr inbounds i32, ptr %8, i64 %2898
  %2924 = load i32, ptr %2923, align 4, !tbaa !6
  %2925 = getelementptr inbounds i32, ptr %6, i64 %2898
  store i32 %2924, ptr %2925, align 4, !tbaa !6
  %2926 = add nuw nsw i64 %2898, 1
  %2927 = icmp eq i64 %2926, %2800
  br i1 %2927, label %2935, label %2897, !llvm.loop !114

2928:                                             ; preds = %2893, %2920
  %2929 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 71, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5547

2930:                                             ; preds = %2906, %2912
  %2931 = phi ptr [ %2919, %2912 ], [ %2899, %2906 ]
  %2932 = phi i32 [ %2918, %2912 ], [ 1, %2906 ]
  %2933 = load i32, ptr %2931, align 4, !tbaa !6
  %2934 = add nsw i32 %2933, %2932
  store i32 %2934, ptr %2931, align 4, !tbaa !6
  br label %2935

2935:                                             ; preds = %2922, %2930, %2895, %2885
  %2936 = icmp eq i32 %2887, %5
  br i1 %2936, label %5542, label %2803, !llvm.loop !115

2937:                                             ; preds = %2786, %3074
  %2938 = phi i32 [ 0, %2786 ], [ %3023, %3074 ]
  %2939 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2787, label %2940, label %3009

2940:                                             ; preds = %2937, %2999
  %2941 = phi i32 [ %3008, %2999 ], [ 0, %2937 ]
  %2942 = phi i64 [ %2950, %2999 ], [ %2791, %2937 ]
  %2943 = phi i64 [ %3007, %2999 ], [ %2790, %2937 ]
  %2944 = phi i32 [ %3005, %2999 ], [ %2939, %2937 ]
  %2945 = sub i32 %2789, %2941
  %2946 = tail call i32 @llvm.smin.i32(i32 %2945, i32 0)
  %2947 = sub i32 %2945, %2946
  %2948 = zext i32 %2947 to i64
  %2949 = add nuw nsw i64 %2948, 1
  %2950 = add nsw i64 %2942, -1
  %2951 = icmp ult i32 %2947, 31
  br i1 %2951, label %2987, label %2952

2952:                                             ; preds = %2940
  %2953 = and i64 %2949, 8589934560
  %2954 = sub i64 %2943, %2953
  br label %2955

2955:                                             ; preds = %2955, %2952
  %2956 = phi i64 [ 0, %2952 ], [ %2979, %2955 ]
  %2957 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2952 ], [ %2975, %2955 ]
  %2958 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2952 ], [ %2976, %2955 ]
  %2959 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2952 ], [ %2977, %2955 ]
  %2960 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2952 ], [ %2978, %2955 ]
  %2961 = sub i64 %2943, %2956
  %2962 = getelementptr inbounds i32, ptr %11, i64 %2961
  %2963 = getelementptr inbounds i32, ptr %2962, i64 -7
  %2964 = load <8 x i32>, ptr %2963, align 4, !tbaa !6
  %2965 = shufflevector <8 x i32> %2964, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2966 = getelementptr inbounds i32, ptr %2962, i64 -15
  %2967 = load <8 x i32>, ptr %2966, align 4, !tbaa !6
  %2968 = shufflevector <8 x i32> %2967, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2969 = getelementptr inbounds i32, ptr %2962, i64 -23
  %2970 = load <8 x i32>, ptr %2969, align 4, !tbaa !6
  %2971 = shufflevector <8 x i32> %2970, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2972 = getelementptr inbounds i32, ptr %2962, i64 -31
  %2973 = load <8 x i32>, ptr %2972, align 4, !tbaa !6
  %2974 = shufflevector <8 x i32> %2973, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2975 = mul <8 x i32> %2965, %2957
  %2976 = mul <8 x i32> %2968, %2958
  %2977 = mul <8 x i32> %2971, %2959
  %2978 = mul <8 x i32> %2974, %2960
  %2979 = add nuw i64 %2956, 32
  %2980 = icmp eq i64 %2979, %2953
  br i1 %2980, label %2981, label %2955, !llvm.loop !116

2981:                                             ; preds = %2955
  %2982 = mul <8 x i32> %2976, %2975
  %2983 = mul <8 x i32> %2977, %2982
  %2984 = mul <8 x i32> %2978, %2983
  %2985 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2984)
  %2986 = icmp eq i64 %2949, %2953
  br i1 %2986, label %2999, label %2987

2987:                                             ; preds = %2940, %2981
  %2988 = phi i64 [ %2943, %2940 ], [ %2954, %2981 ]
  %2989 = phi i32 [ 1, %2940 ], [ %2985, %2981 ]
  br label %2990

2990:                                             ; preds = %2987, %2990
  %2991 = phi i64 [ %2996, %2990 ], [ %2988, %2987 ]
  %2992 = phi i32 [ %2995, %2990 ], [ %2989, %2987 ]
  %2993 = getelementptr inbounds i32, ptr %11, i64 %2991
  %2994 = load i32, ptr %2993, align 4, !tbaa !6
  %2995 = mul nsw i32 %2994, %2992
  %2996 = add nsw i64 %2991, -1
  %2997 = trunc i64 %2991 to i32
  %2998 = icmp sgt i32 %2997, 0
  br i1 %2998, label %2990, label %2999, !llvm.loop !117

2999:                                             ; preds = %2990, %2981
  %3000 = phi i32 [ %2985, %2981 ], [ %2995, %2990 ]
  %3001 = and i64 %2950, 4294967295
  %3002 = getelementptr inbounds i32, ptr %6, i64 %3001
  %3003 = load i32, ptr %3002, align 4, !tbaa !6
  %3004 = mul nsw i32 %3003, %3000
  %3005 = add nsw i32 %3004, %2944
  %3006 = icmp sgt i64 %2942, 2
  %3007 = add nsw i64 %2943, -1
  %3008 = add i32 %2941, 1
  br i1 %3006, label %2940, label %3009, !llvm.loop !118

3009:                                             ; preds = %2999, %2937
  %3010 = phi i32 [ %2939, %2937 ], [ %3005, %2999 ]
  %3011 = icmp slt i32 %3010, %5
  br i1 %3011, label %3014, label %3012

3012:                                             ; preds = %3009
  %3013 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 71, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5547

3014:                                             ; preds = %3009
  %3015 = sext i32 %3010 to i64
  %3016 = getelementptr inbounds i8, ptr %2468, i64 %3015
  %3017 = load i8, ptr %3016, align 1, !tbaa !12
  %3018 = zext i8 %3017 to i32
  %3019 = load i32, ptr %2470, align 4, !tbaa !6
  %3020 = icmp slt i32 %3019, %3018
  br i1 %3020, label %3021, label %3022

3021:                                             ; preds = %3014
  store i32 %3018, ptr %2470, align 4, !tbaa !6
  br label %3022

3022:                                             ; preds = %3021, %3014
  %3023 = add nuw nsw i32 %2938, 1
  br i1 %2788, label %3024, label %3074

3024:                                             ; preds = %3022
  %3025 = load i32, ptr %4, align 4, !tbaa !6
  %3026 = load i32, ptr %12, align 4, !tbaa !6
  %3027 = add nsw i32 %3026, -1
  %3028 = icmp slt i32 %3025, %3027
  br i1 %3028, label %3051, label %3029

3029:                                             ; preds = %3024
  %3030 = icmp eq i32 %3025, %3027
  br i1 %3030, label %3031, label %3067

3031:                                             ; preds = %3029
  store i32 0, ptr %4, align 4, !tbaa !6
  %3032 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3032, ptr %6, align 4, !tbaa !6
  br i1 %2793, label %3074, label %3033

3033:                                             ; preds = %3031, %3061
  %3034 = phi i64 [ %3065, %3061 ], [ 1, %3031 ]
  %3035 = getelementptr inbounds i32, ptr %4, i64 %3034
  %3036 = load i32, ptr %3035, align 4, !tbaa !6
  %3037 = getelementptr inbounds i32, ptr %12, i64 %3034
  %3038 = load i32, ptr %3037, align 4, !tbaa !6
  %3039 = add nsw i32 %3038, -1
  %3040 = icmp slt i32 %3036, %3039
  br i1 %3040, label %3041, label %3059

3041:                                             ; preds = %3033
  br i1 %3028, label %3051, label %3042

3042:                                             ; preds = %3041
  %3043 = shl i64 %3034, 32
  %3044 = add i64 %3043, -4294967296
  %3045 = ashr exact i64 %3044, 32
  %3046 = getelementptr inbounds i32, ptr %7, i64 %3045
  %3047 = load i32, ptr %3046, align 4, !tbaa !6
  %3048 = getelementptr inbounds i32, ptr %6, i64 %3034
  %3049 = load i32, ptr %3048, align 4, !tbaa !6
  %3050 = add nsw i32 %3049, %3047
  store i32 %3050, ptr %3048, align 4, !tbaa !6
  br label %3069

3051:                                             ; preds = %3024, %3041
  %3052 = phi i32 [ %3036, %3041 ], [ %3025, %3024 ]
  %3053 = phi ptr [ %3035, %3041 ], [ %4, %3024 ]
  %3054 = phi i64 [ %3034, %3041 ], [ 0, %3024 ]
  %3055 = add nsw i32 %3052, 1
  store i32 %3055, ptr %3053, align 4, !tbaa !6
  %3056 = getelementptr inbounds i32, ptr %7, i64 %3054
  %3057 = load i32, ptr %3056, align 4, !tbaa !6
  %3058 = getelementptr inbounds i32, ptr %6, i64 %3054
  br label %3069

3059:                                             ; preds = %3033
  %3060 = icmp eq i32 %3036, %3039
  br i1 %3060, label %3061, label %3067

3061:                                             ; preds = %3059
  store i32 0, ptr %3035, align 4, !tbaa !6
  %3062 = getelementptr inbounds i32, ptr %8, i64 %3034
  %3063 = load i32, ptr %3062, align 4, !tbaa !6
  %3064 = getelementptr inbounds i32, ptr %6, i64 %3034
  store i32 %3063, ptr %3064, align 4, !tbaa !6
  %3065 = add nuw nsw i64 %3034, 1
  %3066 = icmp eq i64 %3065, %2791
  br i1 %3066, label %3074, label %3033, !llvm.loop !119

3067:                                             ; preds = %3029, %3059
  %3068 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 71, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5547

3069:                                             ; preds = %3042, %3051
  %3070 = phi ptr [ %3058, %3051 ], [ %3035, %3042 ]
  %3071 = phi i32 [ %3057, %3051 ], [ 1, %3042 ]
  %3072 = load i32, ptr %3070, align 4, !tbaa !6
  %3073 = add nsw i32 %3072, %3071
  store i32 %3073, ptr %3070, align 4, !tbaa !6
  br label %3074

3074:                                             ; preds = %3061, %3069, %3031, %3022
  %3075 = icmp eq i32 %3023, %5
  br i1 %3075, label %5542, label %2937, !llvm.loop !120

3076:                                             ; preds = %2479
  %3077 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 71, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5542

3078:                                             ; preds = %18
  %3079 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3080 = load ptr, ptr %3079, align 8, !tbaa !10
  %3081 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3082 = load ptr, ptr %3081, align 8, !tbaa !10
  %3083 = load i8, ptr %3080, align 1, !tbaa !12
  %3084 = zext i8 %3083 to i64
  store i64 %3084, ptr %3082, align 8, !tbaa !121
  %3085 = icmp eq i32 %13, 0
  br i1 %3085, label %3086, label %3091

3086:                                             ; preds = %3078
  %3087 = load i8, ptr %3080, align 1, !tbaa !12
  %3088 = icmp ult i8 %3083, %3087
  br i1 %3088, label %3089, label %5542

3089:                                             ; preds = %3086
  %3090 = zext i8 %3087 to i64
  store i64 %3090, ptr %3082, align 8, !tbaa !121
  br label %5542

3091:                                             ; preds = %3078
  switch i32 %1, label %3692 [
    i32 1, label %3092
    i32 0, label %3394
  ]

3092:                                             ; preds = %3091
  %3093 = getelementptr inbounds i32, ptr %3, i64 %19
  %3094 = load i32, ptr %3093, align 4, !tbaa !6
  %3095 = icmp eq i32 %3094, 0
  %3096 = icmp sgt i32 %5, 0
  br i1 %3095, label %3106, label %3097

3097:                                             ; preds = %3092
  br i1 %3096, label %3098, label %5542

3098:                                             ; preds = %3097
  %3099 = icmp sgt i32 %13, 1
  %3100 = icmp sgt i32 %13, 0
  %3101 = add i32 %13, -2
  %3102 = zext i32 %3101 to i64
  %3103 = zext i32 %13 to i64
  %3104 = add nuw i32 %5, 1
  %3105 = icmp eq i32 %13, 1
  br label %3254

3106:                                             ; preds = %3092
  br i1 %3096, label %3107, label %5542

3107:                                             ; preds = %3106
  %3108 = icmp sgt i32 %13, 1
  %3109 = icmp sgt i32 %13, 0
  %3110 = add i32 %13, -2
  %3111 = zext i32 %3110 to i64
  %3112 = zext i32 %13 to i64
  %3113 = add nuw i32 %5, 1
  %3114 = icmp eq i32 %13, 1
  br label %3115

3115:                                             ; preds = %3107, %3252
  %3116 = phi i64 [ %3084, %3107 ], [ %3202, %3252 ]
  %3117 = phi i32 [ 0, %3107 ], [ %3204, %3252 ]
  %3118 = phi double [ 0.000000e+00, %3107 ], [ %3203, %3252 ]
  %3119 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3108, label %3120, label %3189

3120:                                             ; preds = %3115, %3179
  %3121 = phi i32 [ %3188, %3179 ], [ 0, %3115 ]
  %3122 = phi i64 [ %3130, %3179 ], [ %3112, %3115 ]
  %3123 = phi i64 [ %3187, %3179 ], [ %3111, %3115 ]
  %3124 = phi i32 [ %3185, %3179 ], [ %3119, %3115 ]
  %3125 = sub i32 %3110, %3121
  %3126 = tail call i32 @llvm.smin.i32(i32 %3125, i32 0)
  %3127 = sub i32 %3125, %3126
  %3128 = zext i32 %3127 to i64
  %3129 = add nuw nsw i64 %3128, 1
  %3130 = add nsw i64 %3122, -1
  %3131 = icmp ult i32 %3127, 31
  br i1 %3131, label %3167, label %3132

3132:                                             ; preds = %3120
  %3133 = and i64 %3129, 8589934560
  %3134 = sub i64 %3123, %3133
  br label %3135

3135:                                             ; preds = %3135, %3132
  %3136 = phi i64 [ 0, %3132 ], [ %3159, %3135 ]
  %3137 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3132 ], [ %3155, %3135 ]
  %3138 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3132 ], [ %3156, %3135 ]
  %3139 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3132 ], [ %3157, %3135 ]
  %3140 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3132 ], [ %3158, %3135 ]
  %3141 = sub i64 %3123, %3136
  %3142 = getelementptr inbounds i32, ptr %9, i64 %3141
  %3143 = getelementptr inbounds i32, ptr %3142, i64 -7
  %3144 = load <8 x i32>, ptr %3143, align 4, !tbaa !6
  %3145 = shufflevector <8 x i32> %3144, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3146 = getelementptr inbounds i32, ptr %3142, i64 -15
  %3147 = load <8 x i32>, ptr %3146, align 4, !tbaa !6
  %3148 = shufflevector <8 x i32> %3147, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3149 = getelementptr inbounds i32, ptr %3142, i64 -23
  %3150 = load <8 x i32>, ptr %3149, align 4, !tbaa !6
  %3151 = shufflevector <8 x i32> %3150, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3152 = getelementptr inbounds i32, ptr %3142, i64 -31
  %3153 = load <8 x i32>, ptr %3152, align 4, !tbaa !6
  %3154 = shufflevector <8 x i32> %3153, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3155 = mul <8 x i32> %3145, %3137
  %3156 = mul <8 x i32> %3148, %3138
  %3157 = mul <8 x i32> %3151, %3139
  %3158 = mul <8 x i32> %3154, %3140
  %3159 = add nuw i64 %3136, 32
  %3160 = icmp eq i64 %3159, %3133
  br i1 %3160, label %3161, label %3135, !llvm.loop !123

3161:                                             ; preds = %3135
  %3162 = mul <8 x i32> %3156, %3155
  %3163 = mul <8 x i32> %3157, %3162
  %3164 = mul <8 x i32> %3158, %3163
  %3165 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3164)
  %3166 = icmp eq i64 %3129, %3133
  br i1 %3166, label %3179, label %3167

3167:                                             ; preds = %3120, %3161
  %3168 = phi i64 [ %3123, %3120 ], [ %3134, %3161 ]
  %3169 = phi i32 [ 1, %3120 ], [ %3165, %3161 ]
  br label %3170

3170:                                             ; preds = %3167, %3170
  %3171 = phi i64 [ %3176, %3170 ], [ %3168, %3167 ]
  %3172 = phi i32 [ %3175, %3170 ], [ %3169, %3167 ]
  %3173 = getelementptr inbounds i32, ptr %9, i64 %3171
  %3174 = load i32, ptr %3173, align 4, !tbaa !6
  %3175 = mul nsw i32 %3174, %3172
  %3176 = add nsw i64 %3171, -1
  %3177 = trunc i64 %3171 to i32
  %3178 = icmp sgt i32 %3177, 0
  br i1 %3178, label %3170, label %3179, !llvm.loop !124

3179:                                             ; preds = %3170, %3161
  %3180 = phi i32 [ %3165, %3161 ], [ %3175, %3170 ]
  %3181 = and i64 %3130, 4294967295
  %3182 = getelementptr inbounds i32, ptr %6, i64 %3181
  %3183 = load i32, ptr %3182, align 4, !tbaa !6
  %3184 = mul nsw i32 %3183, %3180
  %3185 = add nsw i32 %3184, %3124
  %3186 = icmp sgt i64 %3122, 2
  %3187 = add nsw i64 %3123, -1
  %3188 = add i32 %3121, 1
  br i1 %3186, label %3120, label %3189, !llvm.loop !125

3189:                                             ; preds = %3179, %3115
  %3190 = phi i32 [ %3119, %3115 ], [ %3185, %3179 ]
  %3191 = sext i32 %3190 to i64
  %3192 = getelementptr inbounds double, ptr %2, i64 %3191
  %3193 = load double, ptr %3192, align 8, !tbaa !19
  %3194 = getelementptr inbounds i8, ptr %3080, i64 %3191
  %3195 = load i8, ptr %3194, align 1, !tbaa !12
  %3196 = zext i8 %3195 to i64
  %3197 = fcmp fast one double %3193, 0.000000e+00
  %3198 = icmp slt i64 %3116, %3196
  %3199 = select i1 %3197, i1 %3198, i1 false
  br i1 %3199, label %3200, label %3201

3200:                                             ; preds = %3189
  store i64 %3196, ptr %3082, align 8, !tbaa !121
  br label %3201

3201:                                             ; preds = %3200, %3189
  %3202 = phi i64 [ %3196, %3200 ], [ %3116, %3189 ]
  %3203 = fadd fast double %3193, %3118
  %3204 = add nuw nsw i32 %3117, 1
  br i1 %3109, label %3205, label %3252

3205:                                             ; preds = %3201
  %3206 = load i32, ptr %4, align 4, !tbaa !6
  %3207 = load i32, ptr %12, align 4, !tbaa !6
  %3208 = add nsw i32 %3207, -1
  %3209 = icmp slt i32 %3206, %3208
  br i1 %3209, label %3229, label %3210

3210:                                             ; preds = %3205
  %3211 = icmp eq i32 %3206, %3208
  br i1 %3211, label %3212, label %3245

3212:                                             ; preds = %3210
  store i32 0, ptr %4, align 4, !tbaa !6
  %3213 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3213, ptr %6, align 4, !tbaa !6
  br i1 %3114, label %3252, label %3214

3214:                                             ; preds = %3212, %3239
  %3215 = phi i64 [ %3243, %3239 ], [ 1, %3212 ]
  %3216 = getelementptr inbounds i32, ptr %4, i64 %3215
  %3217 = load i32, ptr %3216, align 4, !tbaa !6
  %3218 = getelementptr inbounds i32, ptr %12, i64 %3215
  %3219 = load i32, ptr %3218, align 4, !tbaa !6
  %3220 = add nsw i32 %3219, -1
  %3221 = icmp slt i32 %3217, %3220
  br i1 %3221, label %3222, label %3237

3222:                                             ; preds = %3214
  br i1 %3209, label %3229, label %3223

3223:                                             ; preds = %3222
  %3224 = getelementptr inbounds i32, ptr %7, i64 %3215
  %3225 = load i32, ptr %3224, align 4, !tbaa !6
  %3226 = getelementptr inbounds i32, ptr %6, i64 %3215
  %3227 = load i32, ptr %3226, align 4, !tbaa !6
  %3228 = add nsw i32 %3227, %3225
  store i32 %3228, ptr %3226, align 4, !tbaa !6
  br label %3247

3229:                                             ; preds = %3205, %3222
  %3230 = phi i32 [ %3217, %3222 ], [ %3206, %3205 ]
  %3231 = phi ptr [ %3216, %3222 ], [ %4, %3205 ]
  %3232 = phi i64 [ %3215, %3222 ], [ 0, %3205 ]
  %3233 = add nsw i32 %3230, 1
  store i32 %3233, ptr %3231, align 4, !tbaa !6
  %3234 = getelementptr inbounds i32, ptr %7, i64 %3232
  %3235 = load i32, ptr %3234, align 4, !tbaa !6
  %3236 = getelementptr inbounds i32, ptr %6, i64 %3232
  br label %3247

3237:                                             ; preds = %3214
  %3238 = icmp eq i32 %3217, %3220
  br i1 %3238, label %3239, label %3245

3239:                                             ; preds = %3237
  store i32 0, ptr %3216, align 4, !tbaa !6
  %3240 = getelementptr inbounds i32, ptr %8, i64 %3215
  %3241 = load i32, ptr %3240, align 4, !tbaa !6
  %3242 = getelementptr inbounds i32, ptr %6, i64 %3215
  store i32 %3241, ptr %3242, align 4, !tbaa !6
  %3243 = add nuw nsw i64 %3215, 1
  %3244 = icmp eq i64 %3243, %3112
  br i1 %3244, label %3252, label %3214, !llvm.loop !126

3245:                                             ; preds = %3210, %3237
  %3246 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 76, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5547

3247:                                             ; preds = %3223, %3229
  %3248 = phi ptr [ %3236, %3229 ], [ %3216, %3223 ]
  %3249 = phi i32 [ %3235, %3229 ], [ 1, %3223 ]
  %3250 = load i32, ptr %3248, align 4, !tbaa !6
  %3251 = add nsw i32 %3250, %3249
  store i32 %3251, ptr %3248, align 4, !tbaa !6
  br label %3252

3252:                                             ; preds = %3239, %3247, %3212, %3201
  %3253 = icmp eq i32 %3204, %5
  br i1 %3253, label %5542, label %3115, !llvm.loop !127

3254:                                             ; preds = %3098, %3392
  %3255 = phi i64 [ %3084, %3098 ], [ %3340, %3392 ]
  %3256 = phi i32 [ 0, %3098 ], [ %3341, %3392 ]
  %3257 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3099, label %3258, label %3327

3258:                                             ; preds = %3254, %3317
  %3259 = phi i32 [ %3326, %3317 ], [ 0, %3254 ]
  %3260 = phi i64 [ %3268, %3317 ], [ %3103, %3254 ]
  %3261 = phi i64 [ %3325, %3317 ], [ %3102, %3254 ]
  %3262 = phi i32 [ %3323, %3317 ], [ %3257, %3254 ]
  %3263 = sub i32 %3101, %3259
  %3264 = tail call i32 @llvm.smin.i32(i32 %3263, i32 0)
  %3265 = sub i32 %3263, %3264
  %3266 = zext i32 %3265 to i64
  %3267 = add nuw nsw i64 %3266, 1
  %3268 = add nsw i64 %3260, -1
  %3269 = icmp ult i32 %3265, 31
  br i1 %3269, label %3305, label %3270

3270:                                             ; preds = %3258
  %3271 = and i64 %3267, 8589934560
  %3272 = sub i64 %3261, %3271
  br label %3273

3273:                                             ; preds = %3273, %3270
  %3274 = phi i64 [ 0, %3270 ], [ %3297, %3273 ]
  %3275 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3270 ], [ %3293, %3273 ]
  %3276 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3270 ], [ %3294, %3273 ]
  %3277 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3270 ], [ %3295, %3273 ]
  %3278 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3270 ], [ %3296, %3273 ]
  %3279 = sub i64 %3261, %3274
  %3280 = getelementptr inbounds i32, ptr %11, i64 %3279
  %3281 = getelementptr inbounds i32, ptr %3280, i64 -7
  %3282 = load <8 x i32>, ptr %3281, align 4, !tbaa !6
  %3283 = shufflevector <8 x i32> %3282, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3284 = getelementptr inbounds i32, ptr %3280, i64 -15
  %3285 = load <8 x i32>, ptr %3284, align 4, !tbaa !6
  %3286 = shufflevector <8 x i32> %3285, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3287 = getelementptr inbounds i32, ptr %3280, i64 -23
  %3288 = load <8 x i32>, ptr %3287, align 4, !tbaa !6
  %3289 = shufflevector <8 x i32> %3288, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3290 = getelementptr inbounds i32, ptr %3280, i64 -31
  %3291 = load <8 x i32>, ptr %3290, align 4, !tbaa !6
  %3292 = shufflevector <8 x i32> %3291, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3293 = mul <8 x i32> %3283, %3275
  %3294 = mul <8 x i32> %3286, %3276
  %3295 = mul <8 x i32> %3289, %3277
  %3296 = mul <8 x i32> %3292, %3278
  %3297 = add nuw i64 %3274, 32
  %3298 = icmp eq i64 %3297, %3271
  br i1 %3298, label %3299, label %3273, !llvm.loop !128

3299:                                             ; preds = %3273
  %3300 = mul <8 x i32> %3294, %3293
  %3301 = mul <8 x i32> %3295, %3300
  %3302 = mul <8 x i32> %3296, %3301
  %3303 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3302)
  %3304 = icmp eq i64 %3267, %3271
  br i1 %3304, label %3317, label %3305

3305:                                             ; preds = %3258, %3299
  %3306 = phi i64 [ %3261, %3258 ], [ %3272, %3299 ]
  %3307 = phi i32 [ 1, %3258 ], [ %3303, %3299 ]
  br label %3308

3308:                                             ; preds = %3305, %3308
  %3309 = phi i64 [ %3314, %3308 ], [ %3306, %3305 ]
  %3310 = phi i32 [ %3313, %3308 ], [ %3307, %3305 ]
  %3311 = getelementptr inbounds i32, ptr %11, i64 %3309
  %3312 = load i32, ptr %3311, align 4, !tbaa !6
  %3313 = mul nsw i32 %3312, %3310
  %3314 = add nsw i64 %3309, -1
  %3315 = trunc i64 %3309 to i32
  %3316 = icmp sgt i32 %3315, 0
  br i1 %3316, label %3308, label %3317, !llvm.loop !129

3317:                                             ; preds = %3308, %3299
  %3318 = phi i32 [ %3303, %3299 ], [ %3313, %3308 ]
  %3319 = and i64 %3268, 4294967295
  %3320 = getelementptr inbounds i32, ptr %6, i64 %3319
  %3321 = load i32, ptr %3320, align 4, !tbaa !6
  %3322 = mul nsw i32 %3321, %3318
  %3323 = add nsw i32 %3322, %3262
  %3324 = icmp sgt i64 %3260, 2
  %3325 = add nsw i64 %3261, -1
  %3326 = add i32 %3259, 1
  br i1 %3324, label %3258, label %3327, !llvm.loop !130

3327:                                             ; preds = %3317, %3254
  %3328 = phi i32 [ %3257, %3254 ], [ %3323, %3317 ]
  %3329 = icmp slt i32 %3328, %5
  br i1 %3329, label %3332, label %3330

3330:                                             ; preds = %3327
  %3331 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 76, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5547

3332:                                             ; preds = %3327
  %3333 = sext i32 %3328 to i64
  %3334 = getelementptr inbounds i8, ptr %3080, i64 %3333
  %3335 = load i8, ptr %3334, align 1, !tbaa !12
  %3336 = zext i8 %3335 to i64
  %3337 = icmp slt i64 %3255, %3336
  br i1 %3337, label %3338, label %3339

3338:                                             ; preds = %3332
  store i64 %3336, ptr %3082, align 8, !tbaa !121
  br label %3339

3339:                                             ; preds = %3332, %3338
  %3340 = phi i64 [ %3255, %3332 ], [ %3336, %3338 ]
  %3341 = add nuw nsw i32 %3256, 1
  br i1 %3100, label %3342, label %3392

3342:                                             ; preds = %3339
  %3343 = load i32, ptr %4, align 4, !tbaa !6
  %3344 = load i32, ptr %12, align 4, !tbaa !6
  %3345 = add nsw i32 %3344, -1
  %3346 = icmp slt i32 %3343, %3345
  br i1 %3346, label %3369, label %3347

3347:                                             ; preds = %3342
  %3348 = icmp eq i32 %3343, %3345
  br i1 %3348, label %3349, label %3385

3349:                                             ; preds = %3347
  store i32 0, ptr %4, align 4, !tbaa !6
  %3350 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3350, ptr %6, align 4, !tbaa !6
  br i1 %3105, label %3392, label %3351

3351:                                             ; preds = %3349, %3379
  %3352 = phi i64 [ %3383, %3379 ], [ 1, %3349 ]
  %3353 = getelementptr inbounds i32, ptr %4, i64 %3352
  %3354 = load i32, ptr %3353, align 4, !tbaa !6
  %3355 = getelementptr inbounds i32, ptr %12, i64 %3352
  %3356 = load i32, ptr %3355, align 4, !tbaa !6
  %3357 = add nsw i32 %3356, -1
  %3358 = icmp slt i32 %3354, %3357
  br i1 %3358, label %3359, label %3377

3359:                                             ; preds = %3351
  br i1 %3346, label %3369, label %3360

3360:                                             ; preds = %3359
  %3361 = shl i64 %3352, 32
  %3362 = add i64 %3361, -4294967296
  %3363 = ashr exact i64 %3362, 32
  %3364 = getelementptr inbounds i32, ptr %7, i64 %3363
  %3365 = load i32, ptr %3364, align 4, !tbaa !6
  %3366 = getelementptr inbounds i32, ptr %6, i64 %3352
  %3367 = load i32, ptr %3366, align 4, !tbaa !6
  %3368 = add nsw i32 %3367, %3365
  store i32 %3368, ptr %3366, align 4, !tbaa !6
  br label %3387

3369:                                             ; preds = %3342, %3359
  %3370 = phi i32 [ %3354, %3359 ], [ %3343, %3342 ]
  %3371 = phi ptr [ %3353, %3359 ], [ %4, %3342 ]
  %3372 = phi i64 [ %3352, %3359 ], [ 0, %3342 ]
  %3373 = add nsw i32 %3370, 1
  store i32 %3373, ptr %3371, align 4, !tbaa !6
  %3374 = getelementptr inbounds i32, ptr %7, i64 %3372
  %3375 = load i32, ptr %3374, align 4, !tbaa !6
  %3376 = getelementptr inbounds i32, ptr %6, i64 %3372
  br label %3387

3377:                                             ; preds = %3351
  %3378 = icmp eq i32 %3354, %3357
  br i1 %3378, label %3379, label %3385

3379:                                             ; preds = %3377
  store i32 0, ptr %3353, align 4, !tbaa !6
  %3380 = getelementptr inbounds i32, ptr %8, i64 %3352
  %3381 = load i32, ptr %3380, align 4, !tbaa !6
  %3382 = getelementptr inbounds i32, ptr %6, i64 %3352
  store i32 %3381, ptr %3382, align 4, !tbaa !6
  %3383 = add nuw nsw i64 %3352, 1
  %3384 = icmp eq i64 %3383, %3103
  br i1 %3384, label %3392, label %3351, !llvm.loop !131

3385:                                             ; preds = %3347, %3377
  %3386 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 76, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5547

3387:                                             ; preds = %3360, %3369
  %3388 = phi ptr [ %3376, %3369 ], [ %3353, %3360 ]
  %3389 = phi i32 [ %3375, %3369 ], [ 1, %3360 ]
  %3390 = load i32, ptr %3388, align 4, !tbaa !6
  %3391 = add nsw i32 %3390, %3389
  store i32 %3391, ptr %3388, align 4, !tbaa !6
  br label %3392

3392:                                             ; preds = %3379, %3387, %3349, %3339
  %3393 = icmp eq i32 %3341, %5
  br i1 %3393, label %5542, label %3254, !llvm.loop !132

3394:                                             ; preds = %3091
  %3395 = getelementptr inbounds i32, ptr %3, i64 %19
  %3396 = load i32, ptr %3395, align 4, !tbaa !6
  %3397 = icmp eq i32 %3396, 0
  %3398 = icmp sgt i32 %5, 0
  br i1 %3397, label %3408, label %3399

3399:                                             ; preds = %3394
  br i1 %3398, label %3400, label %5542

3400:                                             ; preds = %3399
  %3401 = icmp sgt i32 %13, 1
  %3402 = icmp sgt i32 %13, 0
  %3403 = add i32 %13, -2
  %3404 = zext i32 %3403 to i64
  %3405 = zext i32 %13 to i64
  %3406 = add nuw i32 %5, 1
  %3407 = icmp eq i32 %13, 1
  br label %3552

3408:                                             ; preds = %3394
  br i1 %3398, label %3409, label %5542

3409:                                             ; preds = %3408
  %3410 = icmp sgt i32 %13, 1
  %3411 = icmp sgt i32 %13, 0
  %3412 = add i32 %13, -2
  %3413 = zext i32 %3412 to i64
  %3414 = zext i32 %13 to i64
  %3415 = add nuw i32 %5, 1
  %3416 = icmp eq i32 %13, 1
  br label %3417

3417:                                             ; preds = %3409, %3550
  %3418 = phi i64 [ %3084, %3409 ], [ %3500, %3550 ]
  %3419 = phi i32 [ 0, %3409 ], [ %3502, %3550 ]
  %3420 = phi double [ 0.000000e+00, %3409 ], [ %3501, %3550 ]
  %3421 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3410, label %3422, label %3491

3422:                                             ; preds = %3417, %3481
  %3423 = phi i32 [ %3490, %3481 ], [ 0, %3417 ]
  %3424 = phi i64 [ %3432, %3481 ], [ %3414, %3417 ]
  %3425 = phi i64 [ %3489, %3481 ], [ %3413, %3417 ]
  %3426 = phi i32 [ %3487, %3481 ], [ %3421, %3417 ]
  %3427 = sub i32 %3412, %3423
  %3428 = tail call i32 @llvm.smin.i32(i32 %3427, i32 0)
  %3429 = sub i32 %3427, %3428
  %3430 = zext i32 %3429 to i64
  %3431 = add nuw nsw i64 %3430, 1
  %3432 = add nsw i64 %3424, -1
  %3433 = icmp ult i32 %3429, 31
  br i1 %3433, label %3469, label %3434

3434:                                             ; preds = %3422
  %3435 = and i64 %3431, 8589934560
  %3436 = sub i64 %3425, %3435
  br label %3437

3437:                                             ; preds = %3437, %3434
  %3438 = phi i64 [ 0, %3434 ], [ %3461, %3437 ]
  %3439 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3434 ], [ %3457, %3437 ]
  %3440 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3434 ], [ %3458, %3437 ]
  %3441 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3434 ], [ %3459, %3437 ]
  %3442 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3434 ], [ %3460, %3437 ]
  %3443 = sub i64 %3425, %3438
  %3444 = getelementptr inbounds i32, ptr %9, i64 %3443
  %3445 = getelementptr inbounds i32, ptr %3444, i64 -7
  %3446 = load <8 x i32>, ptr %3445, align 4, !tbaa !6
  %3447 = shufflevector <8 x i32> %3446, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3448 = getelementptr inbounds i32, ptr %3444, i64 -15
  %3449 = load <8 x i32>, ptr %3448, align 4, !tbaa !6
  %3450 = shufflevector <8 x i32> %3449, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3451 = getelementptr inbounds i32, ptr %3444, i64 -23
  %3452 = load <8 x i32>, ptr %3451, align 4, !tbaa !6
  %3453 = shufflevector <8 x i32> %3452, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3454 = getelementptr inbounds i32, ptr %3444, i64 -31
  %3455 = load <8 x i32>, ptr %3454, align 4, !tbaa !6
  %3456 = shufflevector <8 x i32> %3455, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3457 = mul <8 x i32> %3447, %3439
  %3458 = mul <8 x i32> %3450, %3440
  %3459 = mul <8 x i32> %3453, %3441
  %3460 = mul <8 x i32> %3456, %3442
  %3461 = add nuw i64 %3438, 32
  %3462 = icmp eq i64 %3461, %3435
  br i1 %3462, label %3463, label %3437, !llvm.loop !133

3463:                                             ; preds = %3437
  %3464 = mul <8 x i32> %3458, %3457
  %3465 = mul <8 x i32> %3459, %3464
  %3466 = mul <8 x i32> %3460, %3465
  %3467 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3466)
  %3468 = icmp eq i64 %3431, %3435
  br i1 %3468, label %3481, label %3469

3469:                                             ; preds = %3422, %3463
  %3470 = phi i64 [ %3425, %3422 ], [ %3436, %3463 ]
  %3471 = phi i32 [ 1, %3422 ], [ %3467, %3463 ]
  br label %3472

3472:                                             ; preds = %3469, %3472
  %3473 = phi i64 [ %3478, %3472 ], [ %3470, %3469 ]
  %3474 = phi i32 [ %3477, %3472 ], [ %3471, %3469 ]
  %3475 = getelementptr inbounds i32, ptr %9, i64 %3473
  %3476 = load i32, ptr %3475, align 4, !tbaa !6
  %3477 = mul nsw i32 %3476, %3474
  %3478 = add nsw i64 %3473, -1
  %3479 = trunc i64 %3473 to i32
  %3480 = icmp sgt i32 %3479, 0
  br i1 %3480, label %3472, label %3481, !llvm.loop !134

3481:                                             ; preds = %3472, %3463
  %3482 = phi i32 [ %3467, %3463 ], [ %3477, %3472 ]
  %3483 = and i64 %3432, 4294967295
  %3484 = getelementptr inbounds i32, ptr %6, i64 %3483
  %3485 = load i32, ptr %3484, align 4, !tbaa !6
  %3486 = mul nsw i32 %3485, %3482
  %3487 = add nsw i32 %3486, %3426
  %3488 = icmp sgt i64 %3424, 2
  %3489 = add nsw i64 %3425, -1
  %3490 = add i32 %3423, 1
  br i1 %3488, label %3422, label %3491, !llvm.loop !135

3491:                                             ; preds = %3481, %3417
  %3492 = phi i32 [ %3421, %3417 ], [ %3487, %3481 ]
  %3493 = sext i32 %3492 to i64
  %3494 = getelementptr inbounds i8, ptr %3080, i64 %3493
  %3495 = load i8, ptr %3494, align 1, !tbaa !12
  %3496 = zext i8 %3495 to i64
  %3497 = icmp slt i64 %3418, %3496
  br i1 %3497, label %3498, label %3499

3498:                                             ; preds = %3491
  store i64 %3496, ptr %3082, align 8, !tbaa !121
  br label %3499

3499:                                             ; preds = %3498, %3491
  %3500 = phi i64 [ %3496, %3498 ], [ %3418, %3491 ]
  %3501 = fadd fast double %3420, 1.000000e+00
  %3502 = add nuw nsw i32 %3419, 1
  br i1 %3411, label %3503, label %3550

3503:                                             ; preds = %3499
  %3504 = load i32, ptr %4, align 4, !tbaa !6
  %3505 = load i32, ptr %12, align 4, !tbaa !6
  %3506 = add nsw i32 %3505, -1
  %3507 = icmp slt i32 %3504, %3506
  br i1 %3507, label %3527, label %3508

3508:                                             ; preds = %3503
  %3509 = icmp eq i32 %3504, %3506
  br i1 %3509, label %3510, label %3543

3510:                                             ; preds = %3508
  store i32 0, ptr %4, align 4, !tbaa !6
  %3511 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3511, ptr %6, align 4, !tbaa !6
  br i1 %3416, label %3550, label %3512

3512:                                             ; preds = %3510, %3537
  %3513 = phi i64 [ %3541, %3537 ], [ 1, %3510 ]
  %3514 = getelementptr inbounds i32, ptr %4, i64 %3513
  %3515 = load i32, ptr %3514, align 4, !tbaa !6
  %3516 = getelementptr inbounds i32, ptr %12, i64 %3513
  %3517 = load i32, ptr %3516, align 4, !tbaa !6
  %3518 = add nsw i32 %3517, -1
  %3519 = icmp slt i32 %3515, %3518
  br i1 %3519, label %3520, label %3535

3520:                                             ; preds = %3512
  br i1 %3507, label %3527, label %3521

3521:                                             ; preds = %3520
  %3522 = getelementptr inbounds i32, ptr %7, i64 %3513
  %3523 = load i32, ptr %3522, align 4, !tbaa !6
  %3524 = getelementptr inbounds i32, ptr %6, i64 %3513
  %3525 = load i32, ptr %3524, align 4, !tbaa !6
  %3526 = add nsw i32 %3525, %3523
  store i32 %3526, ptr %3524, align 4, !tbaa !6
  br label %3545

3527:                                             ; preds = %3503, %3520
  %3528 = phi i32 [ %3515, %3520 ], [ %3504, %3503 ]
  %3529 = phi ptr [ %3514, %3520 ], [ %4, %3503 ]
  %3530 = phi i64 [ %3513, %3520 ], [ 0, %3503 ]
  %3531 = add nsw i32 %3528, 1
  store i32 %3531, ptr %3529, align 4, !tbaa !6
  %3532 = getelementptr inbounds i32, ptr %7, i64 %3530
  %3533 = load i32, ptr %3532, align 4, !tbaa !6
  %3534 = getelementptr inbounds i32, ptr %6, i64 %3530
  br label %3545

3535:                                             ; preds = %3512
  %3536 = icmp eq i32 %3515, %3518
  br i1 %3536, label %3537, label %3543

3537:                                             ; preds = %3535
  store i32 0, ptr %3514, align 4, !tbaa !6
  %3538 = getelementptr inbounds i32, ptr %8, i64 %3513
  %3539 = load i32, ptr %3538, align 4, !tbaa !6
  %3540 = getelementptr inbounds i32, ptr %6, i64 %3513
  store i32 %3539, ptr %3540, align 4, !tbaa !6
  %3541 = add nuw nsw i64 %3513, 1
  %3542 = icmp eq i64 %3541, %3414
  br i1 %3542, label %3550, label %3512, !llvm.loop !136

3543:                                             ; preds = %3508, %3535
  %3544 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 76, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5547

3545:                                             ; preds = %3521, %3527
  %3546 = phi ptr [ %3534, %3527 ], [ %3514, %3521 ]
  %3547 = phi i32 [ %3533, %3527 ], [ 1, %3521 ]
  %3548 = load i32, ptr %3546, align 4, !tbaa !6
  %3549 = add nsw i32 %3548, %3547
  store i32 %3549, ptr %3546, align 4, !tbaa !6
  br label %3550

3550:                                             ; preds = %3537, %3545, %3510, %3499
  %3551 = icmp eq i32 %3502, %5
  br i1 %3551, label %5542, label %3417, !llvm.loop !137

3552:                                             ; preds = %3400, %3690
  %3553 = phi i64 [ %3084, %3400 ], [ %3638, %3690 ]
  %3554 = phi i32 [ 0, %3400 ], [ %3639, %3690 ]
  %3555 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3401, label %3556, label %3625

3556:                                             ; preds = %3552, %3615
  %3557 = phi i32 [ %3624, %3615 ], [ 0, %3552 ]
  %3558 = phi i64 [ %3566, %3615 ], [ %3405, %3552 ]
  %3559 = phi i64 [ %3623, %3615 ], [ %3404, %3552 ]
  %3560 = phi i32 [ %3621, %3615 ], [ %3555, %3552 ]
  %3561 = sub i32 %3403, %3557
  %3562 = tail call i32 @llvm.smin.i32(i32 %3561, i32 0)
  %3563 = sub i32 %3561, %3562
  %3564 = zext i32 %3563 to i64
  %3565 = add nuw nsw i64 %3564, 1
  %3566 = add nsw i64 %3558, -1
  %3567 = icmp ult i32 %3563, 31
  br i1 %3567, label %3603, label %3568

3568:                                             ; preds = %3556
  %3569 = and i64 %3565, 8589934560
  %3570 = sub i64 %3559, %3569
  br label %3571

3571:                                             ; preds = %3571, %3568
  %3572 = phi i64 [ 0, %3568 ], [ %3595, %3571 ]
  %3573 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3568 ], [ %3591, %3571 ]
  %3574 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3568 ], [ %3592, %3571 ]
  %3575 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3568 ], [ %3593, %3571 ]
  %3576 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3568 ], [ %3594, %3571 ]
  %3577 = sub i64 %3559, %3572
  %3578 = getelementptr inbounds i32, ptr %11, i64 %3577
  %3579 = getelementptr inbounds i32, ptr %3578, i64 -7
  %3580 = load <8 x i32>, ptr %3579, align 4, !tbaa !6
  %3581 = shufflevector <8 x i32> %3580, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3582 = getelementptr inbounds i32, ptr %3578, i64 -15
  %3583 = load <8 x i32>, ptr %3582, align 4, !tbaa !6
  %3584 = shufflevector <8 x i32> %3583, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3585 = getelementptr inbounds i32, ptr %3578, i64 -23
  %3586 = load <8 x i32>, ptr %3585, align 4, !tbaa !6
  %3587 = shufflevector <8 x i32> %3586, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3588 = getelementptr inbounds i32, ptr %3578, i64 -31
  %3589 = load <8 x i32>, ptr %3588, align 4, !tbaa !6
  %3590 = shufflevector <8 x i32> %3589, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3591 = mul <8 x i32> %3581, %3573
  %3592 = mul <8 x i32> %3584, %3574
  %3593 = mul <8 x i32> %3587, %3575
  %3594 = mul <8 x i32> %3590, %3576
  %3595 = add nuw i64 %3572, 32
  %3596 = icmp eq i64 %3595, %3569
  br i1 %3596, label %3597, label %3571, !llvm.loop !138

3597:                                             ; preds = %3571
  %3598 = mul <8 x i32> %3592, %3591
  %3599 = mul <8 x i32> %3593, %3598
  %3600 = mul <8 x i32> %3594, %3599
  %3601 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3600)
  %3602 = icmp eq i64 %3565, %3569
  br i1 %3602, label %3615, label %3603

3603:                                             ; preds = %3556, %3597
  %3604 = phi i64 [ %3559, %3556 ], [ %3570, %3597 ]
  %3605 = phi i32 [ 1, %3556 ], [ %3601, %3597 ]
  br label %3606

3606:                                             ; preds = %3603, %3606
  %3607 = phi i64 [ %3612, %3606 ], [ %3604, %3603 ]
  %3608 = phi i32 [ %3611, %3606 ], [ %3605, %3603 ]
  %3609 = getelementptr inbounds i32, ptr %11, i64 %3607
  %3610 = load i32, ptr %3609, align 4, !tbaa !6
  %3611 = mul nsw i32 %3610, %3608
  %3612 = add nsw i64 %3607, -1
  %3613 = trunc i64 %3607 to i32
  %3614 = icmp sgt i32 %3613, 0
  br i1 %3614, label %3606, label %3615, !llvm.loop !139

3615:                                             ; preds = %3606, %3597
  %3616 = phi i32 [ %3601, %3597 ], [ %3611, %3606 ]
  %3617 = and i64 %3566, 4294967295
  %3618 = getelementptr inbounds i32, ptr %6, i64 %3617
  %3619 = load i32, ptr %3618, align 4, !tbaa !6
  %3620 = mul nsw i32 %3619, %3616
  %3621 = add nsw i32 %3620, %3560
  %3622 = icmp sgt i64 %3558, 2
  %3623 = add nsw i64 %3559, -1
  %3624 = add i32 %3557, 1
  br i1 %3622, label %3556, label %3625, !llvm.loop !140

3625:                                             ; preds = %3615, %3552
  %3626 = phi i32 [ %3555, %3552 ], [ %3621, %3615 ]
  %3627 = icmp slt i32 %3626, %5
  br i1 %3627, label %3630, label %3628

3628:                                             ; preds = %3625
  %3629 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 76, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5547

3630:                                             ; preds = %3625
  %3631 = sext i32 %3626 to i64
  %3632 = getelementptr inbounds i8, ptr %3080, i64 %3631
  %3633 = load i8, ptr %3632, align 1, !tbaa !12
  %3634 = zext i8 %3633 to i64
  %3635 = icmp slt i64 %3553, %3634
  br i1 %3635, label %3636, label %3637

3636:                                             ; preds = %3630
  store i64 %3634, ptr %3082, align 8, !tbaa !121
  br label %3637

3637:                                             ; preds = %3636, %3630
  %3638 = phi i64 [ %3634, %3636 ], [ %3553, %3630 ]
  %3639 = add nuw nsw i32 %3554, 1
  br i1 %3402, label %3640, label %3690

3640:                                             ; preds = %3637
  %3641 = load i32, ptr %4, align 4, !tbaa !6
  %3642 = load i32, ptr %12, align 4, !tbaa !6
  %3643 = add nsw i32 %3642, -1
  %3644 = icmp slt i32 %3641, %3643
  br i1 %3644, label %3667, label %3645

3645:                                             ; preds = %3640
  %3646 = icmp eq i32 %3641, %3643
  br i1 %3646, label %3647, label %3683

3647:                                             ; preds = %3645
  store i32 0, ptr %4, align 4, !tbaa !6
  %3648 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3648, ptr %6, align 4, !tbaa !6
  br i1 %3407, label %3690, label %3649

3649:                                             ; preds = %3647, %3677
  %3650 = phi i64 [ %3681, %3677 ], [ 1, %3647 ]
  %3651 = getelementptr inbounds i32, ptr %4, i64 %3650
  %3652 = load i32, ptr %3651, align 4, !tbaa !6
  %3653 = getelementptr inbounds i32, ptr %12, i64 %3650
  %3654 = load i32, ptr %3653, align 4, !tbaa !6
  %3655 = add nsw i32 %3654, -1
  %3656 = icmp slt i32 %3652, %3655
  br i1 %3656, label %3657, label %3675

3657:                                             ; preds = %3649
  br i1 %3644, label %3667, label %3658

3658:                                             ; preds = %3657
  %3659 = shl i64 %3650, 32
  %3660 = add i64 %3659, -4294967296
  %3661 = ashr exact i64 %3660, 32
  %3662 = getelementptr inbounds i32, ptr %7, i64 %3661
  %3663 = load i32, ptr %3662, align 4, !tbaa !6
  %3664 = getelementptr inbounds i32, ptr %6, i64 %3650
  %3665 = load i32, ptr %3664, align 4, !tbaa !6
  %3666 = add nsw i32 %3665, %3663
  store i32 %3666, ptr %3664, align 4, !tbaa !6
  br label %3685

3667:                                             ; preds = %3640, %3657
  %3668 = phi i32 [ %3652, %3657 ], [ %3641, %3640 ]
  %3669 = phi ptr [ %3651, %3657 ], [ %4, %3640 ]
  %3670 = phi i64 [ %3650, %3657 ], [ 0, %3640 ]
  %3671 = add nsw i32 %3668, 1
  store i32 %3671, ptr %3669, align 4, !tbaa !6
  %3672 = getelementptr inbounds i32, ptr %7, i64 %3670
  %3673 = load i32, ptr %3672, align 4, !tbaa !6
  %3674 = getelementptr inbounds i32, ptr %6, i64 %3670
  br label %3685

3675:                                             ; preds = %3649
  %3676 = icmp eq i32 %3652, %3655
  br i1 %3676, label %3677, label %3683

3677:                                             ; preds = %3675
  store i32 0, ptr %3651, align 4, !tbaa !6
  %3678 = getelementptr inbounds i32, ptr %8, i64 %3650
  %3679 = load i32, ptr %3678, align 4, !tbaa !6
  %3680 = getelementptr inbounds i32, ptr %6, i64 %3650
  store i32 %3679, ptr %3680, align 4, !tbaa !6
  %3681 = add nuw nsw i64 %3650, 1
  %3682 = icmp eq i64 %3681, %3405
  br i1 %3682, label %3690, label %3649, !llvm.loop !141

3683:                                             ; preds = %3645, %3675
  %3684 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 76, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5547

3685:                                             ; preds = %3658, %3667
  %3686 = phi ptr [ %3674, %3667 ], [ %3651, %3658 ]
  %3687 = phi i32 [ %3673, %3667 ], [ 1, %3658 ]
  %3688 = load i32, ptr %3686, align 4, !tbaa !6
  %3689 = add nsw i32 %3688, %3687
  store i32 %3689, ptr %3686, align 4, !tbaa !6
  br label %3690

3690:                                             ; preds = %3677, %3685, %3647, %3637
  %3691 = icmp eq i32 %3639, %5
  br i1 %3691, label %5542, label %3552, !llvm.loop !142

3692:                                             ; preds = %3091
  %3693 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 76, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5542

3694:                                             ; preds = %18
  %3695 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3696 = load ptr, ptr %3695, align 8, !tbaa !10
  %3697 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3698 = load ptr, ptr %3697, align 8, !tbaa !10
  %3699 = load i8, ptr %3696, align 1, !tbaa !12
  %3700 = uitofp i8 %3699 to double
  store double %3700, ptr %3698, align 8, !tbaa !19
  %3701 = icmp eq i32 %13, 0
  br i1 %3701, label %3702, label %3707

3702:                                             ; preds = %3694
  %3703 = load i8, ptr %3696, align 1, !tbaa !12
  %3704 = uitofp i8 %3703 to double
  %3705 = fcmp fast olt double %3700, %3704
  br i1 %3705, label %3706, label %5542

3706:                                             ; preds = %3702
  store double %3704, ptr %3698, align 8, !tbaa !19
  br label %5542

3707:                                             ; preds = %3694
  switch i32 %1, label %4308 [
    i32 1, label %3708
    i32 0, label %4010
  ]

3708:                                             ; preds = %3707
  %3709 = getelementptr inbounds i32, ptr %3, i64 %19
  %3710 = load i32, ptr %3709, align 4, !tbaa !6
  %3711 = icmp eq i32 %3710, 0
  %3712 = icmp sgt i32 %5, 0
  br i1 %3711, label %3722, label %3713

3713:                                             ; preds = %3708
  br i1 %3712, label %3714, label %5542

3714:                                             ; preds = %3713
  %3715 = icmp sgt i32 %13, 1
  %3716 = icmp sgt i32 %13, 0
  %3717 = add i32 %13, -2
  %3718 = zext i32 %3717 to i64
  %3719 = zext i32 %13 to i64
  %3720 = add nuw i32 %5, 1
  %3721 = icmp eq i32 %13, 1
  br label %3870

3722:                                             ; preds = %3708
  br i1 %3712, label %3723, label %5542

3723:                                             ; preds = %3722
  %3724 = icmp sgt i32 %13, 1
  %3725 = icmp sgt i32 %13, 0
  %3726 = add i32 %13, -2
  %3727 = zext i32 %3726 to i64
  %3728 = zext i32 %13 to i64
  %3729 = add nuw i32 %5, 1
  %3730 = icmp eq i32 %13, 1
  br label %3731

3731:                                             ; preds = %3723, %3868
  %3732 = phi double [ %3700, %3723 ], [ %3818, %3868 ]
  %3733 = phi i32 [ 0, %3723 ], [ %3820, %3868 ]
  %3734 = phi double [ 0.000000e+00, %3723 ], [ %3819, %3868 ]
  %3735 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3724, label %3736, label %3805

3736:                                             ; preds = %3731, %3795
  %3737 = phi i32 [ %3804, %3795 ], [ 0, %3731 ]
  %3738 = phi i64 [ %3746, %3795 ], [ %3728, %3731 ]
  %3739 = phi i64 [ %3803, %3795 ], [ %3727, %3731 ]
  %3740 = phi i32 [ %3801, %3795 ], [ %3735, %3731 ]
  %3741 = sub i32 %3726, %3737
  %3742 = tail call i32 @llvm.smin.i32(i32 %3741, i32 0)
  %3743 = sub i32 %3741, %3742
  %3744 = zext i32 %3743 to i64
  %3745 = add nuw nsw i64 %3744, 1
  %3746 = add nsw i64 %3738, -1
  %3747 = icmp ult i32 %3743, 31
  br i1 %3747, label %3783, label %3748

3748:                                             ; preds = %3736
  %3749 = and i64 %3745, 8589934560
  %3750 = sub i64 %3739, %3749
  br label %3751

3751:                                             ; preds = %3751, %3748
  %3752 = phi i64 [ 0, %3748 ], [ %3775, %3751 ]
  %3753 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3748 ], [ %3771, %3751 ]
  %3754 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3748 ], [ %3772, %3751 ]
  %3755 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3748 ], [ %3773, %3751 ]
  %3756 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3748 ], [ %3774, %3751 ]
  %3757 = sub i64 %3739, %3752
  %3758 = getelementptr inbounds i32, ptr %9, i64 %3757
  %3759 = getelementptr inbounds i32, ptr %3758, i64 -7
  %3760 = load <8 x i32>, ptr %3759, align 4, !tbaa !6
  %3761 = shufflevector <8 x i32> %3760, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3762 = getelementptr inbounds i32, ptr %3758, i64 -15
  %3763 = load <8 x i32>, ptr %3762, align 4, !tbaa !6
  %3764 = shufflevector <8 x i32> %3763, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3765 = getelementptr inbounds i32, ptr %3758, i64 -23
  %3766 = load <8 x i32>, ptr %3765, align 4, !tbaa !6
  %3767 = shufflevector <8 x i32> %3766, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3768 = getelementptr inbounds i32, ptr %3758, i64 -31
  %3769 = load <8 x i32>, ptr %3768, align 4, !tbaa !6
  %3770 = shufflevector <8 x i32> %3769, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3771 = mul <8 x i32> %3761, %3753
  %3772 = mul <8 x i32> %3764, %3754
  %3773 = mul <8 x i32> %3767, %3755
  %3774 = mul <8 x i32> %3770, %3756
  %3775 = add nuw i64 %3752, 32
  %3776 = icmp eq i64 %3775, %3749
  br i1 %3776, label %3777, label %3751, !llvm.loop !143

3777:                                             ; preds = %3751
  %3778 = mul <8 x i32> %3772, %3771
  %3779 = mul <8 x i32> %3773, %3778
  %3780 = mul <8 x i32> %3774, %3779
  %3781 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3780)
  %3782 = icmp eq i64 %3745, %3749
  br i1 %3782, label %3795, label %3783

3783:                                             ; preds = %3736, %3777
  %3784 = phi i64 [ %3739, %3736 ], [ %3750, %3777 ]
  %3785 = phi i32 [ 1, %3736 ], [ %3781, %3777 ]
  br label %3786

3786:                                             ; preds = %3783, %3786
  %3787 = phi i64 [ %3792, %3786 ], [ %3784, %3783 ]
  %3788 = phi i32 [ %3791, %3786 ], [ %3785, %3783 ]
  %3789 = getelementptr inbounds i32, ptr %9, i64 %3787
  %3790 = load i32, ptr %3789, align 4, !tbaa !6
  %3791 = mul nsw i32 %3790, %3788
  %3792 = add nsw i64 %3787, -1
  %3793 = trunc i64 %3787 to i32
  %3794 = icmp sgt i32 %3793, 0
  br i1 %3794, label %3786, label %3795, !llvm.loop !144

3795:                                             ; preds = %3786, %3777
  %3796 = phi i32 [ %3781, %3777 ], [ %3791, %3786 ]
  %3797 = and i64 %3746, 4294967295
  %3798 = getelementptr inbounds i32, ptr %6, i64 %3797
  %3799 = load i32, ptr %3798, align 4, !tbaa !6
  %3800 = mul nsw i32 %3799, %3796
  %3801 = add nsw i32 %3800, %3740
  %3802 = icmp sgt i64 %3738, 2
  %3803 = add nsw i64 %3739, -1
  %3804 = add i32 %3737, 1
  br i1 %3802, label %3736, label %3805, !llvm.loop !145

3805:                                             ; preds = %3795, %3731
  %3806 = phi i32 [ %3735, %3731 ], [ %3801, %3795 ]
  %3807 = sext i32 %3806 to i64
  %3808 = getelementptr inbounds double, ptr %2, i64 %3807
  %3809 = load double, ptr %3808, align 8, !tbaa !19
  %3810 = getelementptr inbounds i8, ptr %3696, i64 %3807
  %3811 = load i8, ptr %3810, align 1, !tbaa !12
  %3812 = uitofp i8 %3811 to double
  %3813 = fcmp fast one double %3809, 0.000000e+00
  %3814 = fcmp fast olt double %3732, %3812
  %3815 = select i1 %3813, i1 %3814, i1 false
  br i1 %3815, label %3816, label %3817

3816:                                             ; preds = %3805
  store double %3812, ptr %3698, align 8, !tbaa !19
  br label %3817

3817:                                             ; preds = %3816, %3805
  %3818 = phi double [ %3812, %3816 ], [ %3732, %3805 ]
  %3819 = fadd fast double %3809, %3734
  %3820 = add nuw nsw i32 %3733, 1
  br i1 %3725, label %3821, label %3868

3821:                                             ; preds = %3817
  %3822 = load i32, ptr %4, align 4, !tbaa !6
  %3823 = load i32, ptr %12, align 4, !tbaa !6
  %3824 = add nsw i32 %3823, -1
  %3825 = icmp slt i32 %3822, %3824
  br i1 %3825, label %3845, label %3826

3826:                                             ; preds = %3821
  %3827 = icmp eq i32 %3822, %3824
  br i1 %3827, label %3828, label %3861

3828:                                             ; preds = %3826
  store i32 0, ptr %4, align 4, !tbaa !6
  %3829 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3829, ptr %6, align 4, !tbaa !6
  br i1 %3730, label %3868, label %3830

3830:                                             ; preds = %3828, %3855
  %3831 = phi i64 [ %3859, %3855 ], [ 1, %3828 ]
  %3832 = getelementptr inbounds i32, ptr %4, i64 %3831
  %3833 = load i32, ptr %3832, align 4, !tbaa !6
  %3834 = getelementptr inbounds i32, ptr %12, i64 %3831
  %3835 = load i32, ptr %3834, align 4, !tbaa !6
  %3836 = add nsw i32 %3835, -1
  %3837 = icmp slt i32 %3833, %3836
  br i1 %3837, label %3838, label %3853

3838:                                             ; preds = %3830
  br i1 %3825, label %3845, label %3839

3839:                                             ; preds = %3838
  %3840 = getelementptr inbounds i32, ptr %7, i64 %3831
  %3841 = load i32, ptr %3840, align 4, !tbaa !6
  %3842 = getelementptr inbounds i32, ptr %6, i64 %3831
  %3843 = load i32, ptr %3842, align 4, !tbaa !6
  %3844 = add nsw i32 %3843, %3841
  store i32 %3844, ptr %3842, align 4, !tbaa !6
  br label %3863

3845:                                             ; preds = %3821, %3838
  %3846 = phi i32 [ %3833, %3838 ], [ %3822, %3821 ]
  %3847 = phi ptr [ %3832, %3838 ], [ %4, %3821 ]
  %3848 = phi i64 [ %3831, %3838 ], [ 0, %3821 ]
  %3849 = add nsw i32 %3846, 1
  store i32 %3849, ptr %3847, align 4, !tbaa !6
  %3850 = getelementptr inbounds i32, ptr %7, i64 %3848
  %3851 = load i32, ptr %3850, align 4, !tbaa !6
  %3852 = getelementptr inbounds i32, ptr %6, i64 %3848
  br label %3863

3853:                                             ; preds = %3830
  %3854 = icmp eq i32 %3833, %3836
  br i1 %3854, label %3855, label %3861

3855:                                             ; preds = %3853
  store i32 0, ptr %3832, align 4, !tbaa !6
  %3856 = getelementptr inbounds i32, ptr %8, i64 %3831
  %3857 = load i32, ptr %3856, align 4, !tbaa !6
  %3858 = getelementptr inbounds i32, ptr %6, i64 %3831
  store i32 %3857, ptr %3858, align 4, !tbaa !6
  %3859 = add nuw nsw i64 %3831, 1
  %3860 = icmp eq i64 %3859, %3728
  br i1 %3860, label %3868, label %3830, !llvm.loop !146

3861:                                             ; preds = %3826, %3853
  %3862 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 80, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5547

3863:                                             ; preds = %3839, %3845
  %3864 = phi ptr [ %3852, %3845 ], [ %3832, %3839 ]
  %3865 = phi i32 [ %3851, %3845 ], [ 1, %3839 ]
  %3866 = load i32, ptr %3864, align 4, !tbaa !6
  %3867 = add nsw i32 %3866, %3865
  store i32 %3867, ptr %3864, align 4, !tbaa !6
  br label %3868

3868:                                             ; preds = %3855, %3863, %3828, %3817
  %3869 = icmp eq i32 %3820, %5
  br i1 %3869, label %5542, label %3731, !llvm.loop !147

3870:                                             ; preds = %3714, %4008
  %3871 = phi double [ %3700, %3714 ], [ %3956, %4008 ]
  %3872 = phi i32 [ 0, %3714 ], [ %3957, %4008 ]
  %3873 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3715, label %3874, label %3943

3874:                                             ; preds = %3870, %3933
  %3875 = phi i32 [ %3942, %3933 ], [ 0, %3870 ]
  %3876 = phi i64 [ %3884, %3933 ], [ %3719, %3870 ]
  %3877 = phi i64 [ %3941, %3933 ], [ %3718, %3870 ]
  %3878 = phi i32 [ %3939, %3933 ], [ %3873, %3870 ]
  %3879 = sub i32 %3717, %3875
  %3880 = tail call i32 @llvm.smin.i32(i32 %3879, i32 0)
  %3881 = sub i32 %3879, %3880
  %3882 = zext i32 %3881 to i64
  %3883 = add nuw nsw i64 %3882, 1
  %3884 = add nsw i64 %3876, -1
  %3885 = icmp ult i32 %3881, 31
  br i1 %3885, label %3921, label %3886

3886:                                             ; preds = %3874
  %3887 = and i64 %3883, 8589934560
  %3888 = sub i64 %3877, %3887
  br label %3889

3889:                                             ; preds = %3889, %3886
  %3890 = phi i64 [ 0, %3886 ], [ %3913, %3889 ]
  %3891 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3886 ], [ %3909, %3889 ]
  %3892 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3886 ], [ %3910, %3889 ]
  %3893 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3886 ], [ %3911, %3889 ]
  %3894 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3886 ], [ %3912, %3889 ]
  %3895 = sub i64 %3877, %3890
  %3896 = getelementptr inbounds i32, ptr %11, i64 %3895
  %3897 = getelementptr inbounds i32, ptr %3896, i64 -7
  %3898 = load <8 x i32>, ptr %3897, align 4, !tbaa !6
  %3899 = shufflevector <8 x i32> %3898, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3900 = getelementptr inbounds i32, ptr %3896, i64 -15
  %3901 = load <8 x i32>, ptr %3900, align 4, !tbaa !6
  %3902 = shufflevector <8 x i32> %3901, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3903 = getelementptr inbounds i32, ptr %3896, i64 -23
  %3904 = load <8 x i32>, ptr %3903, align 4, !tbaa !6
  %3905 = shufflevector <8 x i32> %3904, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3906 = getelementptr inbounds i32, ptr %3896, i64 -31
  %3907 = load <8 x i32>, ptr %3906, align 4, !tbaa !6
  %3908 = shufflevector <8 x i32> %3907, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3909 = mul <8 x i32> %3899, %3891
  %3910 = mul <8 x i32> %3902, %3892
  %3911 = mul <8 x i32> %3905, %3893
  %3912 = mul <8 x i32> %3908, %3894
  %3913 = add nuw i64 %3890, 32
  %3914 = icmp eq i64 %3913, %3887
  br i1 %3914, label %3915, label %3889, !llvm.loop !148

3915:                                             ; preds = %3889
  %3916 = mul <8 x i32> %3910, %3909
  %3917 = mul <8 x i32> %3911, %3916
  %3918 = mul <8 x i32> %3912, %3917
  %3919 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3918)
  %3920 = icmp eq i64 %3883, %3887
  br i1 %3920, label %3933, label %3921

3921:                                             ; preds = %3874, %3915
  %3922 = phi i64 [ %3877, %3874 ], [ %3888, %3915 ]
  %3923 = phi i32 [ 1, %3874 ], [ %3919, %3915 ]
  br label %3924

3924:                                             ; preds = %3921, %3924
  %3925 = phi i64 [ %3930, %3924 ], [ %3922, %3921 ]
  %3926 = phi i32 [ %3929, %3924 ], [ %3923, %3921 ]
  %3927 = getelementptr inbounds i32, ptr %11, i64 %3925
  %3928 = load i32, ptr %3927, align 4, !tbaa !6
  %3929 = mul nsw i32 %3928, %3926
  %3930 = add nsw i64 %3925, -1
  %3931 = trunc i64 %3925 to i32
  %3932 = icmp sgt i32 %3931, 0
  br i1 %3932, label %3924, label %3933, !llvm.loop !149

3933:                                             ; preds = %3924, %3915
  %3934 = phi i32 [ %3919, %3915 ], [ %3929, %3924 ]
  %3935 = and i64 %3884, 4294967295
  %3936 = getelementptr inbounds i32, ptr %6, i64 %3935
  %3937 = load i32, ptr %3936, align 4, !tbaa !6
  %3938 = mul nsw i32 %3937, %3934
  %3939 = add nsw i32 %3938, %3878
  %3940 = icmp sgt i64 %3876, 2
  %3941 = add nsw i64 %3877, -1
  %3942 = add i32 %3875, 1
  br i1 %3940, label %3874, label %3943, !llvm.loop !150

3943:                                             ; preds = %3933, %3870
  %3944 = phi i32 [ %3873, %3870 ], [ %3939, %3933 ]
  %3945 = icmp slt i32 %3944, %5
  br i1 %3945, label %3948, label %3946

3946:                                             ; preds = %3943
  %3947 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 80, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5547

3948:                                             ; preds = %3943
  %3949 = sext i32 %3944 to i64
  %3950 = getelementptr inbounds i8, ptr %3696, i64 %3949
  %3951 = load i8, ptr %3950, align 1, !tbaa !12
  %3952 = uitofp i8 %3951 to double
  %3953 = fcmp fast olt double %3871, %3952
  br i1 %3953, label %3954, label %3955

3954:                                             ; preds = %3948
  store double %3952, ptr %3698, align 8, !tbaa !19
  br label %3955

3955:                                             ; preds = %3948, %3954
  %3956 = phi double [ %3871, %3948 ], [ %3952, %3954 ]
  %3957 = add nuw nsw i32 %3872, 1
  br i1 %3716, label %3958, label %4008

3958:                                             ; preds = %3955
  %3959 = load i32, ptr %4, align 4, !tbaa !6
  %3960 = load i32, ptr %12, align 4, !tbaa !6
  %3961 = add nsw i32 %3960, -1
  %3962 = icmp slt i32 %3959, %3961
  br i1 %3962, label %3985, label %3963

3963:                                             ; preds = %3958
  %3964 = icmp eq i32 %3959, %3961
  br i1 %3964, label %3965, label %4001

3965:                                             ; preds = %3963
  store i32 0, ptr %4, align 4, !tbaa !6
  %3966 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3966, ptr %6, align 4, !tbaa !6
  br i1 %3721, label %4008, label %3967

3967:                                             ; preds = %3965, %3995
  %3968 = phi i64 [ %3999, %3995 ], [ 1, %3965 ]
  %3969 = getelementptr inbounds i32, ptr %4, i64 %3968
  %3970 = load i32, ptr %3969, align 4, !tbaa !6
  %3971 = getelementptr inbounds i32, ptr %12, i64 %3968
  %3972 = load i32, ptr %3971, align 4, !tbaa !6
  %3973 = add nsw i32 %3972, -1
  %3974 = icmp slt i32 %3970, %3973
  br i1 %3974, label %3975, label %3993

3975:                                             ; preds = %3967
  br i1 %3962, label %3985, label %3976

3976:                                             ; preds = %3975
  %3977 = shl i64 %3968, 32
  %3978 = add i64 %3977, -4294967296
  %3979 = ashr exact i64 %3978, 32
  %3980 = getelementptr inbounds i32, ptr %7, i64 %3979
  %3981 = load i32, ptr %3980, align 4, !tbaa !6
  %3982 = getelementptr inbounds i32, ptr %6, i64 %3968
  %3983 = load i32, ptr %3982, align 4, !tbaa !6
  %3984 = add nsw i32 %3983, %3981
  store i32 %3984, ptr %3982, align 4, !tbaa !6
  br label %4003

3985:                                             ; preds = %3958, %3975
  %3986 = phi i32 [ %3970, %3975 ], [ %3959, %3958 ]
  %3987 = phi ptr [ %3969, %3975 ], [ %4, %3958 ]
  %3988 = phi i64 [ %3968, %3975 ], [ 0, %3958 ]
  %3989 = add nsw i32 %3986, 1
  store i32 %3989, ptr %3987, align 4, !tbaa !6
  %3990 = getelementptr inbounds i32, ptr %7, i64 %3988
  %3991 = load i32, ptr %3990, align 4, !tbaa !6
  %3992 = getelementptr inbounds i32, ptr %6, i64 %3988
  br label %4003

3993:                                             ; preds = %3967
  %3994 = icmp eq i32 %3970, %3973
  br i1 %3994, label %3995, label %4001

3995:                                             ; preds = %3993
  store i32 0, ptr %3969, align 4, !tbaa !6
  %3996 = getelementptr inbounds i32, ptr %8, i64 %3968
  %3997 = load i32, ptr %3996, align 4, !tbaa !6
  %3998 = getelementptr inbounds i32, ptr %6, i64 %3968
  store i32 %3997, ptr %3998, align 4, !tbaa !6
  %3999 = add nuw nsw i64 %3968, 1
  %4000 = icmp eq i64 %3999, %3719
  br i1 %4000, label %4008, label %3967, !llvm.loop !151

4001:                                             ; preds = %3963, %3993
  %4002 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 80, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5547

4003:                                             ; preds = %3976, %3985
  %4004 = phi ptr [ %3992, %3985 ], [ %3969, %3976 ]
  %4005 = phi i32 [ %3991, %3985 ], [ 1, %3976 ]
  %4006 = load i32, ptr %4004, align 4, !tbaa !6
  %4007 = add nsw i32 %4006, %4005
  store i32 %4007, ptr %4004, align 4, !tbaa !6
  br label %4008

4008:                                             ; preds = %3995, %4003, %3965, %3955
  %4009 = icmp eq i32 %3957, %5
  br i1 %4009, label %5542, label %3870, !llvm.loop !152

4010:                                             ; preds = %3707
  %4011 = getelementptr inbounds i32, ptr %3, i64 %19
  %4012 = load i32, ptr %4011, align 4, !tbaa !6
  %4013 = icmp eq i32 %4012, 0
  %4014 = icmp sgt i32 %5, 0
  br i1 %4013, label %4024, label %4015

4015:                                             ; preds = %4010
  br i1 %4014, label %4016, label %5542

4016:                                             ; preds = %4015
  %4017 = icmp sgt i32 %13, 1
  %4018 = icmp sgt i32 %13, 0
  %4019 = add i32 %13, -2
  %4020 = zext i32 %4019 to i64
  %4021 = zext i32 %13 to i64
  %4022 = add nuw i32 %5, 1
  %4023 = icmp eq i32 %13, 1
  br label %4168

4024:                                             ; preds = %4010
  br i1 %4014, label %4025, label %5542

4025:                                             ; preds = %4024
  %4026 = icmp sgt i32 %13, 1
  %4027 = icmp sgt i32 %13, 0
  %4028 = add i32 %13, -2
  %4029 = zext i32 %4028 to i64
  %4030 = zext i32 %13 to i64
  %4031 = add nuw i32 %5, 1
  %4032 = icmp eq i32 %13, 1
  br label %4033

4033:                                             ; preds = %4025, %4166
  %4034 = phi double [ %3700, %4025 ], [ %4116, %4166 ]
  %4035 = phi i32 [ 0, %4025 ], [ %4118, %4166 ]
  %4036 = phi double [ 0.000000e+00, %4025 ], [ %4117, %4166 ]
  %4037 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4026, label %4038, label %4107

4038:                                             ; preds = %4033, %4097
  %4039 = phi i32 [ %4106, %4097 ], [ 0, %4033 ]
  %4040 = phi i64 [ %4048, %4097 ], [ %4030, %4033 ]
  %4041 = phi i64 [ %4105, %4097 ], [ %4029, %4033 ]
  %4042 = phi i32 [ %4103, %4097 ], [ %4037, %4033 ]
  %4043 = sub i32 %4028, %4039
  %4044 = tail call i32 @llvm.smin.i32(i32 %4043, i32 0)
  %4045 = sub i32 %4043, %4044
  %4046 = zext i32 %4045 to i64
  %4047 = add nuw nsw i64 %4046, 1
  %4048 = add nsw i64 %4040, -1
  %4049 = icmp ult i32 %4045, 31
  br i1 %4049, label %4085, label %4050

4050:                                             ; preds = %4038
  %4051 = and i64 %4047, 8589934560
  %4052 = sub i64 %4041, %4051
  br label %4053

4053:                                             ; preds = %4053, %4050
  %4054 = phi i64 [ 0, %4050 ], [ %4077, %4053 ]
  %4055 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4050 ], [ %4073, %4053 ]
  %4056 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4050 ], [ %4074, %4053 ]
  %4057 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4050 ], [ %4075, %4053 ]
  %4058 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4050 ], [ %4076, %4053 ]
  %4059 = sub i64 %4041, %4054
  %4060 = getelementptr inbounds i32, ptr %9, i64 %4059
  %4061 = getelementptr inbounds i32, ptr %4060, i64 -7
  %4062 = load <8 x i32>, ptr %4061, align 4, !tbaa !6
  %4063 = shufflevector <8 x i32> %4062, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4064 = getelementptr inbounds i32, ptr %4060, i64 -15
  %4065 = load <8 x i32>, ptr %4064, align 4, !tbaa !6
  %4066 = shufflevector <8 x i32> %4065, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4067 = getelementptr inbounds i32, ptr %4060, i64 -23
  %4068 = load <8 x i32>, ptr %4067, align 4, !tbaa !6
  %4069 = shufflevector <8 x i32> %4068, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4070 = getelementptr inbounds i32, ptr %4060, i64 -31
  %4071 = load <8 x i32>, ptr %4070, align 4, !tbaa !6
  %4072 = shufflevector <8 x i32> %4071, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4073 = mul <8 x i32> %4063, %4055
  %4074 = mul <8 x i32> %4066, %4056
  %4075 = mul <8 x i32> %4069, %4057
  %4076 = mul <8 x i32> %4072, %4058
  %4077 = add nuw i64 %4054, 32
  %4078 = icmp eq i64 %4077, %4051
  br i1 %4078, label %4079, label %4053, !llvm.loop !153

4079:                                             ; preds = %4053
  %4080 = mul <8 x i32> %4074, %4073
  %4081 = mul <8 x i32> %4075, %4080
  %4082 = mul <8 x i32> %4076, %4081
  %4083 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4082)
  %4084 = icmp eq i64 %4047, %4051
  br i1 %4084, label %4097, label %4085

4085:                                             ; preds = %4038, %4079
  %4086 = phi i64 [ %4041, %4038 ], [ %4052, %4079 ]
  %4087 = phi i32 [ 1, %4038 ], [ %4083, %4079 ]
  br label %4088

4088:                                             ; preds = %4085, %4088
  %4089 = phi i64 [ %4094, %4088 ], [ %4086, %4085 ]
  %4090 = phi i32 [ %4093, %4088 ], [ %4087, %4085 ]
  %4091 = getelementptr inbounds i32, ptr %9, i64 %4089
  %4092 = load i32, ptr %4091, align 4, !tbaa !6
  %4093 = mul nsw i32 %4092, %4090
  %4094 = add nsw i64 %4089, -1
  %4095 = trunc i64 %4089 to i32
  %4096 = icmp sgt i32 %4095, 0
  br i1 %4096, label %4088, label %4097, !llvm.loop !154

4097:                                             ; preds = %4088, %4079
  %4098 = phi i32 [ %4083, %4079 ], [ %4093, %4088 ]
  %4099 = and i64 %4048, 4294967295
  %4100 = getelementptr inbounds i32, ptr %6, i64 %4099
  %4101 = load i32, ptr %4100, align 4, !tbaa !6
  %4102 = mul nsw i32 %4101, %4098
  %4103 = add nsw i32 %4102, %4042
  %4104 = icmp sgt i64 %4040, 2
  %4105 = add nsw i64 %4041, -1
  %4106 = add i32 %4039, 1
  br i1 %4104, label %4038, label %4107, !llvm.loop !155

4107:                                             ; preds = %4097, %4033
  %4108 = phi i32 [ %4037, %4033 ], [ %4103, %4097 ]
  %4109 = sext i32 %4108 to i64
  %4110 = getelementptr inbounds i8, ptr %3696, i64 %4109
  %4111 = load i8, ptr %4110, align 1, !tbaa !12
  %4112 = uitofp i8 %4111 to double
  %4113 = fcmp fast olt double %4034, %4112
  br i1 %4113, label %4114, label %4115

4114:                                             ; preds = %4107
  store double %4112, ptr %3698, align 8, !tbaa !19
  br label %4115

4115:                                             ; preds = %4114, %4107
  %4116 = phi double [ %4112, %4114 ], [ %4034, %4107 ]
  %4117 = fadd fast double %4036, 1.000000e+00
  %4118 = add nuw nsw i32 %4035, 1
  br i1 %4027, label %4119, label %4166

4119:                                             ; preds = %4115
  %4120 = load i32, ptr %4, align 4, !tbaa !6
  %4121 = load i32, ptr %12, align 4, !tbaa !6
  %4122 = add nsw i32 %4121, -1
  %4123 = icmp slt i32 %4120, %4122
  br i1 %4123, label %4143, label %4124

4124:                                             ; preds = %4119
  %4125 = icmp eq i32 %4120, %4122
  br i1 %4125, label %4126, label %4159

4126:                                             ; preds = %4124
  store i32 0, ptr %4, align 4, !tbaa !6
  %4127 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4127, ptr %6, align 4, !tbaa !6
  br i1 %4032, label %4166, label %4128

4128:                                             ; preds = %4126, %4153
  %4129 = phi i64 [ %4157, %4153 ], [ 1, %4126 ]
  %4130 = getelementptr inbounds i32, ptr %4, i64 %4129
  %4131 = load i32, ptr %4130, align 4, !tbaa !6
  %4132 = getelementptr inbounds i32, ptr %12, i64 %4129
  %4133 = load i32, ptr %4132, align 4, !tbaa !6
  %4134 = add nsw i32 %4133, -1
  %4135 = icmp slt i32 %4131, %4134
  br i1 %4135, label %4136, label %4151

4136:                                             ; preds = %4128
  br i1 %4123, label %4143, label %4137

4137:                                             ; preds = %4136
  %4138 = getelementptr inbounds i32, ptr %7, i64 %4129
  %4139 = load i32, ptr %4138, align 4, !tbaa !6
  %4140 = getelementptr inbounds i32, ptr %6, i64 %4129
  %4141 = load i32, ptr %4140, align 4, !tbaa !6
  %4142 = add nsw i32 %4141, %4139
  store i32 %4142, ptr %4140, align 4, !tbaa !6
  br label %4161

4143:                                             ; preds = %4119, %4136
  %4144 = phi i32 [ %4131, %4136 ], [ %4120, %4119 ]
  %4145 = phi ptr [ %4130, %4136 ], [ %4, %4119 ]
  %4146 = phi i64 [ %4129, %4136 ], [ 0, %4119 ]
  %4147 = add nsw i32 %4144, 1
  store i32 %4147, ptr %4145, align 4, !tbaa !6
  %4148 = getelementptr inbounds i32, ptr %7, i64 %4146
  %4149 = load i32, ptr %4148, align 4, !tbaa !6
  %4150 = getelementptr inbounds i32, ptr %6, i64 %4146
  br label %4161

4151:                                             ; preds = %4128
  %4152 = icmp eq i32 %4131, %4134
  br i1 %4152, label %4153, label %4159

4153:                                             ; preds = %4151
  store i32 0, ptr %4130, align 4, !tbaa !6
  %4154 = getelementptr inbounds i32, ptr %8, i64 %4129
  %4155 = load i32, ptr %4154, align 4, !tbaa !6
  %4156 = getelementptr inbounds i32, ptr %6, i64 %4129
  store i32 %4155, ptr %4156, align 4, !tbaa !6
  %4157 = add nuw nsw i64 %4129, 1
  %4158 = icmp eq i64 %4157, %4030
  br i1 %4158, label %4166, label %4128, !llvm.loop !156

4159:                                             ; preds = %4124, %4151
  %4160 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 80, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5547

4161:                                             ; preds = %4137, %4143
  %4162 = phi ptr [ %4150, %4143 ], [ %4130, %4137 ]
  %4163 = phi i32 [ %4149, %4143 ], [ 1, %4137 ]
  %4164 = load i32, ptr %4162, align 4, !tbaa !6
  %4165 = add nsw i32 %4164, %4163
  store i32 %4165, ptr %4162, align 4, !tbaa !6
  br label %4166

4166:                                             ; preds = %4153, %4161, %4126, %4115
  %4167 = icmp eq i32 %4118, %5
  br i1 %4167, label %5542, label %4033, !llvm.loop !157

4168:                                             ; preds = %4016, %4306
  %4169 = phi double [ %3700, %4016 ], [ %4254, %4306 ]
  %4170 = phi i32 [ 0, %4016 ], [ %4255, %4306 ]
  %4171 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4017, label %4172, label %4241

4172:                                             ; preds = %4168, %4231
  %4173 = phi i32 [ %4240, %4231 ], [ 0, %4168 ]
  %4174 = phi i64 [ %4182, %4231 ], [ %4021, %4168 ]
  %4175 = phi i64 [ %4239, %4231 ], [ %4020, %4168 ]
  %4176 = phi i32 [ %4237, %4231 ], [ %4171, %4168 ]
  %4177 = sub i32 %4019, %4173
  %4178 = tail call i32 @llvm.smin.i32(i32 %4177, i32 0)
  %4179 = sub i32 %4177, %4178
  %4180 = zext i32 %4179 to i64
  %4181 = add nuw nsw i64 %4180, 1
  %4182 = add nsw i64 %4174, -1
  %4183 = icmp ult i32 %4179, 31
  br i1 %4183, label %4219, label %4184

4184:                                             ; preds = %4172
  %4185 = and i64 %4181, 8589934560
  %4186 = sub i64 %4175, %4185
  br label %4187

4187:                                             ; preds = %4187, %4184
  %4188 = phi i64 [ 0, %4184 ], [ %4211, %4187 ]
  %4189 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4184 ], [ %4207, %4187 ]
  %4190 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4184 ], [ %4208, %4187 ]
  %4191 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4184 ], [ %4209, %4187 ]
  %4192 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4184 ], [ %4210, %4187 ]
  %4193 = sub i64 %4175, %4188
  %4194 = getelementptr inbounds i32, ptr %11, i64 %4193
  %4195 = getelementptr inbounds i32, ptr %4194, i64 -7
  %4196 = load <8 x i32>, ptr %4195, align 4, !tbaa !6
  %4197 = shufflevector <8 x i32> %4196, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4198 = getelementptr inbounds i32, ptr %4194, i64 -15
  %4199 = load <8 x i32>, ptr %4198, align 4, !tbaa !6
  %4200 = shufflevector <8 x i32> %4199, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4201 = getelementptr inbounds i32, ptr %4194, i64 -23
  %4202 = load <8 x i32>, ptr %4201, align 4, !tbaa !6
  %4203 = shufflevector <8 x i32> %4202, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4204 = getelementptr inbounds i32, ptr %4194, i64 -31
  %4205 = load <8 x i32>, ptr %4204, align 4, !tbaa !6
  %4206 = shufflevector <8 x i32> %4205, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4207 = mul <8 x i32> %4197, %4189
  %4208 = mul <8 x i32> %4200, %4190
  %4209 = mul <8 x i32> %4203, %4191
  %4210 = mul <8 x i32> %4206, %4192
  %4211 = add nuw i64 %4188, 32
  %4212 = icmp eq i64 %4211, %4185
  br i1 %4212, label %4213, label %4187, !llvm.loop !158

4213:                                             ; preds = %4187
  %4214 = mul <8 x i32> %4208, %4207
  %4215 = mul <8 x i32> %4209, %4214
  %4216 = mul <8 x i32> %4210, %4215
  %4217 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4216)
  %4218 = icmp eq i64 %4181, %4185
  br i1 %4218, label %4231, label %4219

4219:                                             ; preds = %4172, %4213
  %4220 = phi i64 [ %4175, %4172 ], [ %4186, %4213 ]
  %4221 = phi i32 [ 1, %4172 ], [ %4217, %4213 ]
  br label %4222

4222:                                             ; preds = %4219, %4222
  %4223 = phi i64 [ %4228, %4222 ], [ %4220, %4219 ]
  %4224 = phi i32 [ %4227, %4222 ], [ %4221, %4219 ]
  %4225 = getelementptr inbounds i32, ptr %11, i64 %4223
  %4226 = load i32, ptr %4225, align 4, !tbaa !6
  %4227 = mul nsw i32 %4226, %4224
  %4228 = add nsw i64 %4223, -1
  %4229 = trunc i64 %4223 to i32
  %4230 = icmp sgt i32 %4229, 0
  br i1 %4230, label %4222, label %4231, !llvm.loop !159

4231:                                             ; preds = %4222, %4213
  %4232 = phi i32 [ %4217, %4213 ], [ %4227, %4222 ]
  %4233 = and i64 %4182, 4294967295
  %4234 = getelementptr inbounds i32, ptr %6, i64 %4233
  %4235 = load i32, ptr %4234, align 4, !tbaa !6
  %4236 = mul nsw i32 %4235, %4232
  %4237 = add nsw i32 %4236, %4176
  %4238 = icmp sgt i64 %4174, 2
  %4239 = add nsw i64 %4175, -1
  %4240 = add i32 %4173, 1
  br i1 %4238, label %4172, label %4241, !llvm.loop !160

4241:                                             ; preds = %4231, %4168
  %4242 = phi i32 [ %4171, %4168 ], [ %4237, %4231 ]
  %4243 = icmp slt i32 %4242, %5
  br i1 %4243, label %4246, label %4244

4244:                                             ; preds = %4241
  %4245 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 80, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5547

4246:                                             ; preds = %4241
  %4247 = sext i32 %4242 to i64
  %4248 = getelementptr inbounds i8, ptr %3696, i64 %4247
  %4249 = load i8, ptr %4248, align 1, !tbaa !12
  %4250 = uitofp i8 %4249 to double
  %4251 = fcmp fast olt double %4169, %4250
  br i1 %4251, label %4252, label %4253

4252:                                             ; preds = %4246
  store double %4250, ptr %3698, align 8, !tbaa !19
  br label %4253

4253:                                             ; preds = %4252, %4246
  %4254 = phi double [ %4250, %4252 ], [ %4169, %4246 ]
  %4255 = add nuw nsw i32 %4170, 1
  br i1 %4018, label %4256, label %4306

4256:                                             ; preds = %4253
  %4257 = load i32, ptr %4, align 4, !tbaa !6
  %4258 = load i32, ptr %12, align 4, !tbaa !6
  %4259 = add nsw i32 %4258, -1
  %4260 = icmp slt i32 %4257, %4259
  br i1 %4260, label %4283, label %4261

4261:                                             ; preds = %4256
  %4262 = icmp eq i32 %4257, %4259
  br i1 %4262, label %4263, label %4299

4263:                                             ; preds = %4261
  store i32 0, ptr %4, align 4, !tbaa !6
  %4264 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4264, ptr %6, align 4, !tbaa !6
  br i1 %4023, label %4306, label %4265

4265:                                             ; preds = %4263, %4293
  %4266 = phi i64 [ %4297, %4293 ], [ 1, %4263 ]
  %4267 = getelementptr inbounds i32, ptr %4, i64 %4266
  %4268 = load i32, ptr %4267, align 4, !tbaa !6
  %4269 = getelementptr inbounds i32, ptr %12, i64 %4266
  %4270 = load i32, ptr %4269, align 4, !tbaa !6
  %4271 = add nsw i32 %4270, -1
  %4272 = icmp slt i32 %4268, %4271
  br i1 %4272, label %4273, label %4291

4273:                                             ; preds = %4265
  br i1 %4260, label %4283, label %4274

4274:                                             ; preds = %4273
  %4275 = shl i64 %4266, 32
  %4276 = add i64 %4275, -4294967296
  %4277 = ashr exact i64 %4276, 32
  %4278 = getelementptr inbounds i32, ptr %7, i64 %4277
  %4279 = load i32, ptr %4278, align 4, !tbaa !6
  %4280 = getelementptr inbounds i32, ptr %6, i64 %4266
  %4281 = load i32, ptr %4280, align 4, !tbaa !6
  %4282 = add nsw i32 %4281, %4279
  store i32 %4282, ptr %4280, align 4, !tbaa !6
  br label %4301

4283:                                             ; preds = %4256, %4273
  %4284 = phi i32 [ %4268, %4273 ], [ %4257, %4256 ]
  %4285 = phi ptr [ %4267, %4273 ], [ %4, %4256 ]
  %4286 = phi i64 [ %4266, %4273 ], [ 0, %4256 ]
  %4287 = add nsw i32 %4284, 1
  store i32 %4287, ptr %4285, align 4, !tbaa !6
  %4288 = getelementptr inbounds i32, ptr %7, i64 %4286
  %4289 = load i32, ptr %4288, align 4, !tbaa !6
  %4290 = getelementptr inbounds i32, ptr %6, i64 %4286
  br label %4301

4291:                                             ; preds = %4265
  %4292 = icmp eq i32 %4268, %4271
  br i1 %4292, label %4293, label %4299

4293:                                             ; preds = %4291
  store i32 0, ptr %4267, align 4, !tbaa !6
  %4294 = getelementptr inbounds i32, ptr %8, i64 %4266
  %4295 = load i32, ptr %4294, align 4, !tbaa !6
  %4296 = getelementptr inbounds i32, ptr %6, i64 %4266
  store i32 %4295, ptr %4296, align 4, !tbaa !6
  %4297 = add nuw nsw i64 %4266, 1
  %4298 = icmp eq i64 %4297, %4021
  br i1 %4298, label %4306, label %4265, !llvm.loop !161

4299:                                             ; preds = %4261, %4291
  %4300 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 80, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5547

4301:                                             ; preds = %4274, %4283
  %4302 = phi ptr [ %4290, %4283 ], [ %4267, %4274 ]
  %4303 = phi i32 [ %4289, %4283 ], [ 1, %4274 ]
  %4304 = load i32, ptr %4302, align 4, !tbaa !6
  %4305 = add nsw i32 %4304, %4303
  store i32 %4305, ptr %4302, align 4, !tbaa !6
  br label %4306

4306:                                             ; preds = %4293, %4301, %4263, %4253
  %4307 = icmp eq i32 %4255, %5
  br i1 %4307, label %5542, label %4168, !llvm.loop !162

4308:                                             ; preds = %3707
  %4309 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 80, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5542

4310:                                             ; preds = %18
  %4311 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4312 = load ptr, ptr %4311, align 8, !tbaa !10
  %4313 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4314 = load ptr, ptr %4313, align 8, !tbaa !10
  %4315 = load i8, ptr %4312, align 1, !tbaa !12
  %4316 = uitofp i8 %4315 to float
  store float %4316, ptr %4314, align 4, !tbaa !163
  %4317 = icmp eq i32 %13, 0
  br i1 %4317, label %4318, label %4323

4318:                                             ; preds = %4310
  %4319 = load i8, ptr %4312, align 1, !tbaa !12
  %4320 = uitofp i8 %4319 to float
  %4321 = fcmp fast olt float %4316, %4320
  br i1 %4321, label %4322, label %5542

4322:                                             ; preds = %4318
  store float %4320, ptr %4314, align 4, !tbaa !163
  br label %5542

4323:                                             ; preds = %4310
  switch i32 %1, label %4924 [
    i32 1, label %4324
    i32 0, label %4626
  ]

4324:                                             ; preds = %4323
  %4325 = getelementptr inbounds i32, ptr %3, i64 %19
  %4326 = load i32, ptr %4325, align 4, !tbaa !6
  %4327 = icmp eq i32 %4326, 0
  %4328 = icmp sgt i32 %5, 0
  br i1 %4327, label %4338, label %4329

4329:                                             ; preds = %4324
  br i1 %4328, label %4330, label %5542

4330:                                             ; preds = %4329
  %4331 = icmp sgt i32 %13, 1
  %4332 = icmp sgt i32 %13, 0
  %4333 = add i32 %13, -2
  %4334 = zext i32 %4333 to i64
  %4335 = zext i32 %13 to i64
  %4336 = add nuw i32 %5, 1
  %4337 = icmp eq i32 %13, 1
  br label %4486

4338:                                             ; preds = %4324
  br i1 %4328, label %4339, label %5542

4339:                                             ; preds = %4338
  %4340 = icmp sgt i32 %13, 1
  %4341 = icmp sgt i32 %13, 0
  %4342 = add i32 %13, -2
  %4343 = zext i32 %4342 to i64
  %4344 = zext i32 %13 to i64
  %4345 = add nuw i32 %5, 1
  %4346 = icmp eq i32 %13, 1
  br label %4347

4347:                                             ; preds = %4339, %4484
  %4348 = phi float [ %4316, %4339 ], [ %4434, %4484 ]
  %4349 = phi i32 [ 0, %4339 ], [ %4436, %4484 ]
  %4350 = phi double [ 0.000000e+00, %4339 ], [ %4435, %4484 ]
  %4351 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4340, label %4352, label %4421

4352:                                             ; preds = %4347, %4411
  %4353 = phi i32 [ %4420, %4411 ], [ 0, %4347 ]
  %4354 = phi i64 [ %4362, %4411 ], [ %4344, %4347 ]
  %4355 = phi i64 [ %4419, %4411 ], [ %4343, %4347 ]
  %4356 = phi i32 [ %4417, %4411 ], [ %4351, %4347 ]
  %4357 = sub i32 %4342, %4353
  %4358 = tail call i32 @llvm.smin.i32(i32 %4357, i32 0)
  %4359 = sub i32 %4357, %4358
  %4360 = zext i32 %4359 to i64
  %4361 = add nuw nsw i64 %4360, 1
  %4362 = add nsw i64 %4354, -1
  %4363 = icmp ult i32 %4359, 31
  br i1 %4363, label %4399, label %4364

4364:                                             ; preds = %4352
  %4365 = and i64 %4361, 8589934560
  %4366 = sub i64 %4355, %4365
  br label %4367

4367:                                             ; preds = %4367, %4364
  %4368 = phi i64 [ 0, %4364 ], [ %4391, %4367 ]
  %4369 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4364 ], [ %4387, %4367 ]
  %4370 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4364 ], [ %4388, %4367 ]
  %4371 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4364 ], [ %4389, %4367 ]
  %4372 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4364 ], [ %4390, %4367 ]
  %4373 = sub i64 %4355, %4368
  %4374 = getelementptr inbounds i32, ptr %9, i64 %4373
  %4375 = getelementptr inbounds i32, ptr %4374, i64 -7
  %4376 = load <8 x i32>, ptr %4375, align 4, !tbaa !6
  %4377 = shufflevector <8 x i32> %4376, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4378 = getelementptr inbounds i32, ptr %4374, i64 -15
  %4379 = load <8 x i32>, ptr %4378, align 4, !tbaa !6
  %4380 = shufflevector <8 x i32> %4379, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4381 = getelementptr inbounds i32, ptr %4374, i64 -23
  %4382 = load <8 x i32>, ptr %4381, align 4, !tbaa !6
  %4383 = shufflevector <8 x i32> %4382, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4384 = getelementptr inbounds i32, ptr %4374, i64 -31
  %4385 = load <8 x i32>, ptr %4384, align 4, !tbaa !6
  %4386 = shufflevector <8 x i32> %4385, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4387 = mul <8 x i32> %4377, %4369
  %4388 = mul <8 x i32> %4380, %4370
  %4389 = mul <8 x i32> %4383, %4371
  %4390 = mul <8 x i32> %4386, %4372
  %4391 = add nuw i64 %4368, 32
  %4392 = icmp eq i64 %4391, %4365
  br i1 %4392, label %4393, label %4367, !llvm.loop !165

4393:                                             ; preds = %4367
  %4394 = mul <8 x i32> %4388, %4387
  %4395 = mul <8 x i32> %4389, %4394
  %4396 = mul <8 x i32> %4390, %4395
  %4397 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4396)
  %4398 = icmp eq i64 %4361, %4365
  br i1 %4398, label %4411, label %4399

4399:                                             ; preds = %4352, %4393
  %4400 = phi i64 [ %4355, %4352 ], [ %4366, %4393 ]
  %4401 = phi i32 [ 1, %4352 ], [ %4397, %4393 ]
  br label %4402

4402:                                             ; preds = %4399, %4402
  %4403 = phi i64 [ %4408, %4402 ], [ %4400, %4399 ]
  %4404 = phi i32 [ %4407, %4402 ], [ %4401, %4399 ]
  %4405 = getelementptr inbounds i32, ptr %9, i64 %4403
  %4406 = load i32, ptr %4405, align 4, !tbaa !6
  %4407 = mul nsw i32 %4406, %4404
  %4408 = add nsw i64 %4403, -1
  %4409 = trunc i64 %4403 to i32
  %4410 = icmp sgt i32 %4409, 0
  br i1 %4410, label %4402, label %4411, !llvm.loop !166

4411:                                             ; preds = %4402, %4393
  %4412 = phi i32 [ %4397, %4393 ], [ %4407, %4402 ]
  %4413 = and i64 %4362, 4294967295
  %4414 = getelementptr inbounds i32, ptr %6, i64 %4413
  %4415 = load i32, ptr %4414, align 4, !tbaa !6
  %4416 = mul nsw i32 %4415, %4412
  %4417 = add nsw i32 %4416, %4356
  %4418 = icmp sgt i64 %4354, 2
  %4419 = add nsw i64 %4355, -1
  %4420 = add i32 %4353, 1
  br i1 %4418, label %4352, label %4421, !llvm.loop !167

4421:                                             ; preds = %4411, %4347
  %4422 = phi i32 [ %4351, %4347 ], [ %4417, %4411 ]
  %4423 = sext i32 %4422 to i64
  %4424 = getelementptr inbounds double, ptr %2, i64 %4423
  %4425 = load double, ptr %4424, align 8, !tbaa !19
  %4426 = getelementptr inbounds i8, ptr %4312, i64 %4423
  %4427 = load i8, ptr %4426, align 1, !tbaa !12
  %4428 = uitofp i8 %4427 to float
  %4429 = fcmp fast one double %4425, 0.000000e+00
  %4430 = fcmp fast olt float %4348, %4428
  %4431 = select i1 %4429, i1 %4430, i1 false
  br i1 %4431, label %4432, label %4433

4432:                                             ; preds = %4421
  store float %4428, ptr %4314, align 4, !tbaa !163
  br label %4433

4433:                                             ; preds = %4432, %4421
  %4434 = phi float [ %4428, %4432 ], [ %4348, %4421 ]
  %4435 = fadd fast double %4425, %4350
  %4436 = add nuw nsw i32 %4349, 1
  br i1 %4341, label %4437, label %4484

4437:                                             ; preds = %4433
  %4438 = load i32, ptr %4, align 4, !tbaa !6
  %4439 = load i32, ptr %12, align 4, !tbaa !6
  %4440 = add nsw i32 %4439, -1
  %4441 = icmp slt i32 %4438, %4440
  br i1 %4441, label %4461, label %4442

4442:                                             ; preds = %4437
  %4443 = icmp eq i32 %4438, %4440
  br i1 %4443, label %4444, label %4477

4444:                                             ; preds = %4442
  store i32 0, ptr %4, align 4, !tbaa !6
  %4445 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4445, ptr %6, align 4, !tbaa !6
  br i1 %4346, label %4484, label %4446

4446:                                             ; preds = %4444, %4471
  %4447 = phi i64 [ %4475, %4471 ], [ 1, %4444 ]
  %4448 = getelementptr inbounds i32, ptr %4, i64 %4447
  %4449 = load i32, ptr %4448, align 4, !tbaa !6
  %4450 = getelementptr inbounds i32, ptr %12, i64 %4447
  %4451 = load i32, ptr %4450, align 4, !tbaa !6
  %4452 = add nsw i32 %4451, -1
  %4453 = icmp slt i32 %4449, %4452
  br i1 %4453, label %4454, label %4469

4454:                                             ; preds = %4446
  br i1 %4441, label %4461, label %4455

4455:                                             ; preds = %4454
  %4456 = getelementptr inbounds i32, ptr %7, i64 %4447
  %4457 = load i32, ptr %4456, align 4, !tbaa !6
  %4458 = getelementptr inbounds i32, ptr %6, i64 %4447
  %4459 = load i32, ptr %4458, align 4, !tbaa !6
  %4460 = add nsw i32 %4459, %4457
  store i32 %4460, ptr %4458, align 4, !tbaa !6
  br label %4479

4461:                                             ; preds = %4437, %4454
  %4462 = phi i32 [ %4449, %4454 ], [ %4438, %4437 ]
  %4463 = phi ptr [ %4448, %4454 ], [ %4, %4437 ]
  %4464 = phi i64 [ %4447, %4454 ], [ 0, %4437 ]
  %4465 = add nsw i32 %4462, 1
  store i32 %4465, ptr %4463, align 4, !tbaa !6
  %4466 = getelementptr inbounds i32, ptr %7, i64 %4464
  %4467 = load i32, ptr %4466, align 4, !tbaa !6
  %4468 = getelementptr inbounds i32, ptr %6, i64 %4464
  br label %4479

4469:                                             ; preds = %4446
  %4470 = icmp eq i32 %4449, %4452
  br i1 %4470, label %4471, label %4477

4471:                                             ; preds = %4469
  store i32 0, ptr %4448, align 4, !tbaa !6
  %4472 = getelementptr inbounds i32, ptr %8, i64 %4447
  %4473 = load i32, ptr %4472, align 4, !tbaa !6
  %4474 = getelementptr inbounds i32, ptr %6, i64 %4447
  store i32 %4473, ptr %4474, align 4, !tbaa !6
  %4475 = add nuw nsw i64 %4447, 1
  %4476 = icmp eq i64 %4475, %4344
  br i1 %4476, label %4484, label %4446, !llvm.loop !168

4477:                                             ; preds = %4442, %4469
  %4478 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 84, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5547

4479:                                             ; preds = %4455, %4461
  %4480 = phi ptr [ %4468, %4461 ], [ %4448, %4455 ]
  %4481 = phi i32 [ %4467, %4461 ], [ 1, %4455 ]
  %4482 = load i32, ptr %4480, align 4, !tbaa !6
  %4483 = add nsw i32 %4482, %4481
  store i32 %4483, ptr %4480, align 4, !tbaa !6
  br label %4484

4484:                                             ; preds = %4471, %4479, %4444, %4433
  %4485 = icmp eq i32 %4436, %5
  br i1 %4485, label %5542, label %4347, !llvm.loop !169

4486:                                             ; preds = %4330, %4624
  %4487 = phi float [ %4316, %4330 ], [ %4572, %4624 ]
  %4488 = phi i32 [ 0, %4330 ], [ %4573, %4624 ]
  %4489 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4331, label %4490, label %4559

4490:                                             ; preds = %4486, %4549
  %4491 = phi i32 [ %4558, %4549 ], [ 0, %4486 ]
  %4492 = phi i64 [ %4500, %4549 ], [ %4335, %4486 ]
  %4493 = phi i64 [ %4557, %4549 ], [ %4334, %4486 ]
  %4494 = phi i32 [ %4555, %4549 ], [ %4489, %4486 ]
  %4495 = sub i32 %4333, %4491
  %4496 = tail call i32 @llvm.smin.i32(i32 %4495, i32 0)
  %4497 = sub i32 %4495, %4496
  %4498 = zext i32 %4497 to i64
  %4499 = add nuw nsw i64 %4498, 1
  %4500 = add nsw i64 %4492, -1
  %4501 = icmp ult i32 %4497, 31
  br i1 %4501, label %4537, label %4502

4502:                                             ; preds = %4490
  %4503 = and i64 %4499, 8589934560
  %4504 = sub i64 %4493, %4503
  br label %4505

4505:                                             ; preds = %4505, %4502
  %4506 = phi i64 [ 0, %4502 ], [ %4529, %4505 ]
  %4507 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4502 ], [ %4525, %4505 ]
  %4508 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4502 ], [ %4526, %4505 ]
  %4509 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4502 ], [ %4527, %4505 ]
  %4510 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4502 ], [ %4528, %4505 ]
  %4511 = sub i64 %4493, %4506
  %4512 = getelementptr inbounds i32, ptr %11, i64 %4511
  %4513 = getelementptr inbounds i32, ptr %4512, i64 -7
  %4514 = load <8 x i32>, ptr %4513, align 4, !tbaa !6
  %4515 = shufflevector <8 x i32> %4514, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4516 = getelementptr inbounds i32, ptr %4512, i64 -15
  %4517 = load <8 x i32>, ptr %4516, align 4, !tbaa !6
  %4518 = shufflevector <8 x i32> %4517, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4519 = getelementptr inbounds i32, ptr %4512, i64 -23
  %4520 = load <8 x i32>, ptr %4519, align 4, !tbaa !6
  %4521 = shufflevector <8 x i32> %4520, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4522 = getelementptr inbounds i32, ptr %4512, i64 -31
  %4523 = load <8 x i32>, ptr %4522, align 4, !tbaa !6
  %4524 = shufflevector <8 x i32> %4523, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4525 = mul <8 x i32> %4515, %4507
  %4526 = mul <8 x i32> %4518, %4508
  %4527 = mul <8 x i32> %4521, %4509
  %4528 = mul <8 x i32> %4524, %4510
  %4529 = add nuw i64 %4506, 32
  %4530 = icmp eq i64 %4529, %4503
  br i1 %4530, label %4531, label %4505, !llvm.loop !170

4531:                                             ; preds = %4505
  %4532 = mul <8 x i32> %4526, %4525
  %4533 = mul <8 x i32> %4527, %4532
  %4534 = mul <8 x i32> %4528, %4533
  %4535 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4534)
  %4536 = icmp eq i64 %4499, %4503
  br i1 %4536, label %4549, label %4537

4537:                                             ; preds = %4490, %4531
  %4538 = phi i64 [ %4493, %4490 ], [ %4504, %4531 ]
  %4539 = phi i32 [ 1, %4490 ], [ %4535, %4531 ]
  br label %4540

4540:                                             ; preds = %4537, %4540
  %4541 = phi i64 [ %4546, %4540 ], [ %4538, %4537 ]
  %4542 = phi i32 [ %4545, %4540 ], [ %4539, %4537 ]
  %4543 = getelementptr inbounds i32, ptr %11, i64 %4541
  %4544 = load i32, ptr %4543, align 4, !tbaa !6
  %4545 = mul nsw i32 %4544, %4542
  %4546 = add nsw i64 %4541, -1
  %4547 = trunc i64 %4541 to i32
  %4548 = icmp sgt i32 %4547, 0
  br i1 %4548, label %4540, label %4549, !llvm.loop !171

4549:                                             ; preds = %4540, %4531
  %4550 = phi i32 [ %4535, %4531 ], [ %4545, %4540 ]
  %4551 = and i64 %4500, 4294967295
  %4552 = getelementptr inbounds i32, ptr %6, i64 %4551
  %4553 = load i32, ptr %4552, align 4, !tbaa !6
  %4554 = mul nsw i32 %4553, %4550
  %4555 = add nsw i32 %4554, %4494
  %4556 = icmp sgt i64 %4492, 2
  %4557 = add nsw i64 %4493, -1
  %4558 = add i32 %4491, 1
  br i1 %4556, label %4490, label %4559, !llvm.loop !172

4559:                                             ; preds = %4549, %4486
  %4560 = phi i32 [ %4489, %4486 ], [ %4555, %4549 ]
  %4561 = icmp slt i32 %4560, %5
  br i1 %4561, label %4564, label %4562

4562:                                             ; preds = %4559
  %4563 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 84, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5547

4564:                                             ; preds = %4559
  %4565 = sext i32 %4560 to i64
  %4566 = getelementptr inbounds i8, ptr %4312, i64 %4565
  %4567 = load i8, ptr %4566, align 1, !tbaa !12
  %4568 = uitofp i8 %4567 to float
  %4569 = fcmp fast olt float %4487, %4568
  br i1 %4569, label %4570, label %4571

4570:                                             ; preds = %4564
  store float %4568, ptr %4314, align 4, !tbaa !163
  br label %4571

4571:                                             ; preds = %4564, %4570
  %4572 = phi float [ %4487, %4564 ], [ %4568, %4570 ]
  %4573 = add nuw nsw i32 %4488, 1
  br i1 %4332, label %4574, label %4624

4574:                                             ; preds = %4571
  %4575 = load i32, ptr %4, align 4, !tbaa !6
  %4576 = load i32, ptr %12, align 4, !tbaa !6
  %4577 = add nsw i32 %4576, -1
  %4578 = icmp slt i32 %4575, %4577
  br i1 %4578, label %4601, label %4579

4579:                                             ; preds = %4574
  %4580 = icmp eq i32 %4575, %4577
  br i1 %4580, label %4581, label %4617

4581:                                             ; preds = %4579
  store i32 0, ptr %4, align 4, !tbaa !6
  %4582 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4582, ptr %6, align 4, !tbaa !6
  br i1 %4337, label %4624, label %4583

4583:                                             ; preds = %4581, %4611
  %4584 = phi i64 [ %4615, %4611 ], [ 1, %4581 ]
  %4585 = getelementptr inbounds i32, ptr %4, i64 %4584
  %4586 = load i32, ptr %4585, align 4, !tbaa !6
  %4587 = getelementptr inbounds i32, ptr %12, i64 %4584
  %4588 = load i32, ptr %4587, align 4, !tbaa !6
  %4589 = add nsw i32 %4588, -1
  %4590 = icmp slt i32 %4586, %4589
  br i1 %4590, label %4591, label %4609

4591:                                             ; preds = %4583
  br i1 %4578, label %4601, label %4592

4592:                                             ; preds = %4591
  %4593 = shl i64 %4584, 32
  %4594 = add i64 %4593, -4294967296
  %4595 = ashr exact i64 %4594, 32
  %4596 = getelementptr inbounds i32, ptr %7, i64 %4595
  %4597 = load i32, ptr %4596, align 4, !tbaa !6
  %4598 = getelementptr inbounds i32, ptr %6, i64 %4584
  %4599 = load i32, ptr %4598, align 4, !tbaa !6
  %4600 = add nsw i32 %4599, %4597
  store i32 %4600, ptr %4598, align 4, !tbaa !6
  br label %4619

4601:                                             ; preds = %4574, %4591
  %4602 = phi i32 [ %4586, %4591 ], [ %4575, %4574 ]
  %4603 = phi ptr [ %4585, %4591 ], [ %4, %4574 ]
  %4604 = phi i64 [ %4584, %4591 ], [ 0, %4574 ]
  %4605 = add nsw i32 %4602, 1
  store i32 %4605, ptr %4603, align 4, !tbaa !6
  %4606 = getelementptr inbounds i32, ptr %7, i64 %4604
  %4607 = load i32, ptr %4606, align 4, !tbaa !6
  %4608 = getelementptr inbounds i32, ptr %6, i64 %4604
  br label %4619

4609:                                             ; preds = %4583
  %4610 = icmp eq i32 %4586, %4589
  br i1 %4610, label %4611, label %4617

4611:                                             ; preds = %4609
  store i32 0, ptr %4585, align 4, !tbaa !6
  %4612 = getelementptr inbounds i32, ptr %8, i64 %4584
  %4613 = load i32, ptr %4612, align 4, !tbaa !6
  %4614 = getelementptr inbounds i32, ptr %6, i64 %4584
  store i32 %4613, ptr %4614, align 4, !tbaa !6
  %4615 = add nuw nsw i64 %4584, 1
  %4616 = icmp eq i64 %4615, %4335
  br i1 %4616, label %4624, label %4583, !llvm.loop !173

4617:                                             ; preds = %4579, %4609
  %4618 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 84, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5547

4619:                                             ; preds = %4592, %4601
  %4620 = phi ptr [ %4608, %4601 ], [ %4585, %4592 ]
  %4621 = phi i32 [ %4607, %4601 ], [ 1, %4592 ]
  %4622 = load i32, ptr %4620, align 4, !tbaa !6
  %4623 = add nsw i32 %4622, %4621
  store i32 %4623, ptr %4620, align 4, !tbaa !6
  br label %4624

4624:                                             ; preds = %4611, %4619, %4581, %4571
  %4625 = icmp eq i32 %4573, %5
  br i1 %4625, label %5542, label %4486, !llvm.loop !174

4626:                                             ; preds = %4323
  %4627 = getelementptr inbounds i32, ptr %3, i64 %19
  %4628 = load i32, ptr %4627, align 4, !tbaa !6
  %4629 = icmp eq i32 %4628, 0
  %4630 = icmp sgt i32 %5, 0
  br i1 %4629, label %4640, label %4631

4631:                                             ; preds = %4626
  br i1 %4630, label %4632, label %5542

4632:                                             ; preds = %4631
  %4633 = icmp sgt i32 %13, 1
  %4634 = icmp sgt i32 %13, 0
  %4635 = add i32 %13, -2
  %4636 = zext i32 %4635 to i64
  %4637 = zext i32 %13 to i64
  %4638 = add nuw i32 %5, 1
  %4639 = icmp eq i32 %13, 1
  br label %4784

4640:                                             ; preds = %4626
  br i1 %4630, label %4641, label %5542

4641:                                             ; preds = %4640
  %4642 = icmp sgt i32 %13, 1
  %4643 = icmp sgt i32 %13, 0
  %4644 = add i32 %13, -2
  %4645 = zext i32 %4644 to i64
  %4646 = zext i32 %13 to i64
  %4647 = add nuw i32 %5, 1
  %4648 = icmp eq i32 %13, 1
  br label %4649

4649:                                             ; preds = %4641, %4782
  %4650 = phi float [ %4316, %4641 ], [ %4732, %4782 ]
  %4651 = phi i32 [ 0, %4641 ], [ %4734, %4782 ]
  %4652 = phi double [ 0.000000e+00, %4641 ], [ %4733, %4782 ]
  %4653 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4642, label %4654, label %4723

4654:                                             ; preds = %4649, %4713
  %4655 = phi i32 [ %4722, %4713 ], [ 0, %4649 ]
  %4656 = phi i64 [ %4664, %4713 ], [ %4646, %4649 ]
  %4657 = phi i64 [ %4721, %4713 ], [ %4645, %4649 ]
  %4658 = phi i32 [ %4719, %4713 ], [ %4653, %4649 ]
  %4659 = sub i32 %4644, %4655
  %4660 = tail call i32 @llvm.smin.i32(i32 %4659, i32 0)
  %4661 = sub i32 %4659, %4660
  %4662 = zext i32 %4661 to i64
  %4663 = add nuw nsw i64 %4662, 1
  %4664 = add nsw i64 %4656, -1
  %4665 = icmp ult i32 %4661, 31
  br i1 %4665, label %4701, label %4666

4666:                                             ; preds = %4654
  %4667 = and i64 %4663, 8589934560
  %4668 = sub i64 %4657, %4667
  br label %4669

4669:                                             ; preds = %4669, %4666
  %4670 = phi i64 [ 0, %4666 ], [ %4693, %4669 ]
  %4671 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4666 ], [ %4689, %4669 ]
  %4672 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4666 ], [ %4690, %4669 ]
  %4673 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4666 ], [ %4691, %4669 ]
  %4674 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4666 ], [ %4692, %4669 ]
  %4675 = sub i64 %4657, %4670
  %4676 = getelementptr inbounds i32, ptr %9, i64 %4675
  %4677 = getelementptr inbounds i32, ptr %4676, i64 -7
  %4678 = load <8 x i32>, ptr %4677, align 4, !tbaa !6
  %4679 = shufflevector <8 x i32> %4678, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4680 = getelementptr inbounds i32, ptr %4676, i64 -15
  %4681 = load <8 x i32>, ptr %4680, align 4, !tbaa !6
  %4682 = shufflevector <8 x i32> %4681, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4683 = getelementptr inbounds i32, ptr %4676, i64 -23
  %4684 = load <8 x i32>, ptr %4683, align 4, !tbaa !6
  %4685 = shufflevector <8 x i32> %4684, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4686 = getelementptr inbounds i32, ptr %4676, i64 -31
  %4687 = load <8 x i32>, ptr %4686, align 4, !tbaa !6
  %4688 = shufflevector <8 x i32> %4687, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4689 = mul <8 x i32> %4679, %4671
  %4690 = mul <8 x i32> %4682, %4672
  %4691 = mul <8 x i32> %4685, %4673
  %4692 = mul <8 x i32> %4688, %4674
  %4693 = add nuw i64 %4670, 32
  %4694 = icmp eq i64 %4693, %4667
  br i1 %4694, label %4695, label %4669, !llvm.loop !175

4695:                                             ; preds = %4669
  %4696 = mul <8 x i32> %4690, %4689
  %4697 = mul <8 x i32> %4691, %4696
  %4698 = mul <8 x i32> %4692, %4697
  %4699 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4698)
  %4700 = icmp eq i64 %4663, %4667
  br i1 %4700, label %4713, label %4701

4701:                                             ; preds = %4654, %4695
  %4702 = phi i64 [ %4657, %4654 ], [ %4668, %4695 ]
  %4703 = phi i32 [ 1, %4654 ], [ %4699, %4695 ]
  br label %4704

4704:                                             ; preds = %4701, %4704
  %4705 = phi i64 [ %4710, %4704 ], [ %4702, %4701 ]
  %4706 = phi i32 [ %4709, %4704 ], [ %4703, %4701 ]
  %4707 = getelementptr inbounds i32, ptr %9, i64 %4705
  %4708 = load i32, ptr %4707, align 4, !tbaa !6
  %4709 = mul nsw i32 %4708, %4706
  %4710 = add nsw i64 %4705, -1
  %4711 = trunc i64 %4705 to i32
  %4712 = icmp sgt i32 %4711, 0
  br i1 %4712, label %4704, label %4713, !llvm.loop !176

4713:                                             ; preds = %4704, %4695
  %4714 = phi i32 [ %4699, %4695 ], [ %4709, %4704 ]
  %4715 = and i64 %4664, 4294967295
  %4716 = getelementptr inbounds i32, ptr %6, i64 %4715
  %4717 = load i32, ptr %4716, align 4, !tbaa !6
  %4718 = mul nsw i32 %4717, %4714
  %4719 = add nsw i32 %4718, %4658
  %4720 = icmp sgt i64 %4656, 2
  %4721 = add nsw i64 %4657, -1
  %4722 = add i32 %4655, 1
  br i1 %4720, label %4654, label %4723, !llvm.loop !177

4723:                                             ; preds = %4713, %4649
  %4724 = phi i32 [ %4653, %4649 ], [ %4719, %4713 ]
  %4725 = sext i32 %4724 to i64
  %4726 = getelementptr inbounds i8, ptr %4312, i64 %4725
  %4727 = load i8, ptr %4726, align 1, !tbaa !12
  %4728 = uitofp i8 %4727 to float
  %4729 = fcmp fast olt float %4650, %4728
  br i1 %4729, label %4730, label %4731

4730:                                             ; preds = %4723
  store float %4728, ptr %4314, align 4, !tbaa !163
  br label %4731

4731:                                             ; preds = %4730, %4723
  %4732 = phi float [ %4728, %4730 ], [ %4650, %4723 ]
  %4733 = fadd fast double %4652, 1.000000e+00
  %4734 = add nuw nsw i32 %4651, 1
  br i1 %4643, label %4735, label %4782

4735:                                             ; preds = %4731
  %4736 = load i32, ptr %4, align 4, !tbaa !6
  %4737 = load i32, ptr %12, align 4, !tbaa !6
  %4738 = add nsw i32 %4737, -1
  %4739 = icmp slt i32 %4736, %4738
  br i1 %4739, label %4759, label %4740

4740:                                             ; preds = %4735
  %4741 = icmp eq i32 %4736, %4738
  br i1 %4741, label %4742, label %4775

4742:                                             ; preds = %4740
  store i32 0, ptr %4, align 4, !tbaa !6
  %4743 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4743, ptr %6, align 4, !tbaa !6
  br i1 %4648, label %4782, label %4744

4744:                                             ; preds = %4742, %4769
  %4745 = phi i64 [ %4773, %4769 ], [ 1, %4742 ]
  %4746 = getelementptr inbounds i32, ptr %4, i64 %4745
  %4747 = load i32, ptr %4746, align 4, !tbaa !6
  %4748 = getelementptr inbounds i32, ptr %12, i64 %4745
  %4749 = load i32, ptr %4748, align 4, !tbaa !6
  %4750 = add nsw i32 %4749, -1
  %4751 = icmp slt i32 %4747, %4750
  br i1 %4751, label %4752, label %4767

4752:                                             ; preds = %4744
  br i1 %4739, label %4759, label %4753

4753:                                             ; preds = %4752
  %4754 = getelementptr inbounds i32, ptr %7, i64 %4745
  %4755 = load i32, ptr %4754, align 4, !tbaa !6
  %4756 = getelementptr inbounds i32, ptr %6, i64 %4745
  %4757 = load i32, ptr %4756, align 4, !tbaa !6
  %4758 = add nsw i32 %4757, %4755
  store i32 %4758, ptr %4756, align 4, !tbaa !6
  br label %4777

4759:                                             ; preds = %4735, %4752
  %4760 = phi i32 [ %4747, %4752 ], [ %4736, %4735 ]
  %4761 = phi ptr [ %4746, %4752 ], [ %4, %4735 ]
  %4762 = phi i64 [ %4745, %4752 ], [ 0, %4735 ]
  %4763 = add nsw i32 %4760, 1
  store i32 %4763, ptr %4761, align 4, !tbaa !6
  %4764 = getelementptr inbounds i32, ptr %7, i64 %4762
  %4765 = load i32, ptr %4764, align 4, !tbaa !6
  %4766 = getelementptr inbounds i32, ptr %6, i64 %4762
  br label %4777

4767:                                             ; preds = %4744
  %4768 = icmp eq i32 %4747, %4750
  br i1 %4768, label %4769, label %4775

4769:                                             ; preds = %4767
  store i32 0, ptr %4746, align 4, !tbaa !6
  %4770 = getelementptr inbounds i32, ptr %8, i64 %4745
  %4771 = load i32, ptr %4770, align 4, !tbaa !6
  %4772 = getelementptr inbounds i32, ptr %6, i64 %4745
  store i32 %4771, ptr %4772, align 4, !tbaa !6
  %4773 = add nuw nsw i64 %4745, 1
  %4774 = icmp eq i64 %4773, %4646
  br i1 %4774, label %4782, label %4744, !llvm.loop !178

4775:                                             ; preds = %4740, %4767
  %4776 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 84, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5547

4777:                                             ; preds = %4753, %4759
  %4778 = phi ptr [ %4766, %4759 ], [ %4746, %4753 ]
  %4779 = phi i32 [ %4765, %4759 ], [ 1, %4753 ]
  %4780 = load i32, ptr %4778, align 4, !tbaa !6
  %4781 = add nsw i32 %4780, %4779
  store i32 %4781, ptr %4778, align 4, !tbaa !6
  br label %4782

4782:                                             ; preds = %4769, %4777, %4742, %4731
  %4783 = icmp eq i32 %4734, %5
  br i1 %4783, label %5542, label %4649, !llvm.loop !179

4784:                                             ; preds = %4632, %4922
  %4785 = phi float [ %4316, %4632 ], [ %4870, %4922 ]
  %4786 = phi i32 [ 0, %4632 ], [ %4871, %4922 ]
  %4787 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4633, label %4788, label %4857

4788:                                             ; preds = %4784, %4847
  %4789 = phi i32 [ %4856, %4847 ], [ 0, %4784 ]
  %4790 = phi i64 [ %4798, %4847 ], [ %4637, %4784 ]
  %4791 = phi i64 [ %4855, %4847 ], [ %4636, %4784 ]
  %4792 = phi i32 [ %4853, %4847 ], [ %4787, %4784 ]
  %4793 = sub i32 %4635, %4789
  %4794 = tail call i32 @llvm.smin.i32(i32 %4793, i32 0)
  %4795 = sub i32 %4793, %4794
  %4796 = zext i32 %4795 to i64
  %4797 = add nuw nsw i64 %4796, 1
  %4798 = add nsw i64 %4790, -1
  %4799 = icmp ult i32 %4795, 31
  br i1 %4799, label %4835, label %4800

4800:                                             ; preds = %4788
  %4801 = and i64 %4797, 8589934560
  %4802 = sub i64 %4791, %4801
  br label %4803

4803:                                             ; preds = %4803, %4800
  %4804 = phi i64 [ 0, %4800 ], [ %4827, %4803 ]
  %4805 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4800 ], [ %4823, %4803 ]
  %4806 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4800 ], [ %4824, %4803 ]
  %4807 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4800 ], [ %4825, %4803 ]
  %4808 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4800 ], [ %4826, %4803 ]
  %4809 = sub i64 %4791, %4804
  %4810 = getelementptr inbounds i32, ptr %11, i64 %4809
  %4811 = getelementptr inbounds i32, ptr %4810, i64 -7
  %4812 = load <8 x i32>, ptr %4811, align 4, !tbaa !6
  %4813 = shufflevector <8 x i32> %4812, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4814 = getelementptr inbounds i32, ptr %4810, i64 -15
  %4815 = load <8 x i32>, ptr %4814, align 4, !tbaa !6
  %4816 = shufflevector <8 x i32> %4815, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4817 = getelementptr inbounds i32, ptr %4810, i64 -23
  %4818 = load <8 x i32>, ptr %4817, align 4, !tbaa !6
  %4819 = shufflevector <8 x i32> %4818, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4820 = getelementptr inbounds i32, ptr %4810, i64 -31
  %4821 = load <8 x i32>, ptr %4820, align 4, !tbaa !6
  %4822 = shufflevector <8 x i32> %4821, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4823 = mul <8 x i32> %4813, %4805
  %4824 = mul <8 x i32> %4816, %4806
  %4825 = mul <8 x i32> %4819, %4807
  %4826 = mul <8 x i32> %4822, %4808
  %4827 = add nuw i64 %4804, 32
  %4828 = icmp eq i64 %4827, %4801
  br i1 %4828, label %4829, label %4803, !llvm.loop !180

4829:                                             ; preds = %4803
  %4830 = mul <8 x i32> %4824, %4823
  %4831 = mul <8 x i32> %4825, %4830
  %4832 = mul <8 x i32> %4826, %4831
  %4833 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4832)
  %4834 = icmp eq i64 %4797, %4801
  br i1 %4834, label %4847, label %4835

4835:                                             ; preds = %4788, %4829
  %4836 = phi i64 [ %4791, %4788 ], [ %4802, %4829 ]
  %4837 = phi i32 [ 1, %4788 ], [ %4833, %4829 ]
  br label %4838

4838:                                             ; preds = %4835, %4838
  %4839 = phi i64 [ %4844, %4838 ], [ %4836, %4835 ]
  %4840 = phi i32 [ %4843, %4838 ], [ %4837, %4835 ]
  %4841 = getelementptr inbounds i32, ptr %11, i64 %4839
  %4842 = load i32, ptr %4841, align 4, !tbaa !6
  %4843 = mul nsw i32 %4842, %4840
  %4844 = add nsw i64 %4839, -1
  %4845 = trunc i64 %4839 to i32
  %4846 = icmp sgt i32 %4845, 0
  br i1 %4846, label %4838, label %4847, !llvm.loop !181

4847:                                             ; preds = %4838, %4829
  %4848 = phi i32 [ %4833, %4829 ], [ %4843, %4838 ]
  %4849 = and i64 %4798, 4294967295
  %4850 = getelementptr inbounds i32, ptr %6, i64 %4849
  %4851 = load i32, ptr %4850, align 4, !tbaa !6
  %4852 = mul nsw i32 %4851, %4848
  %4853 = add nsw i32 %4852, %4792
  %4854 = icmp sgt i64 %4790, 2
  %4855 = add nsw i64 %4791, -1
  %4856 = add i32 %4789, 1
  br i1 %4854, label %4788, label %4857, !llvm.loop !182

4857:                                             ; preds = %4847, %4784
  %4858 = phi i32 [ %4787, %4784 ], [ %4853, %4847 ]
  %4859 = icmp slt i32 %4858, %5
  br i1 %4859, label %4862, label %4860

4860:                                             ; preds = %4857
  %4861 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 84, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5547

4862:                                             ; preds = %4857
  %4863 = sext i32 %4858 to i64
  %4864 = getelementptr inbounds i8, ptr %4312, i64 %4863
  %4865 = load i8, ptr %4864, align 1, !tbaa !12
  %4866 = uitofp i8 %4865 to float
  %4867 = fcmp fast olt float %4785, %4866
  br i1 %4867, label %4868, label %4869

4868:                                             ; preds = %4862
  store float %4866, ptr %4314, align 4, !tbaa !163
  br label %4869

4869:                                             ; preds = %4868, %4862
  %4870 = phi float [ %4866, %4868 ], [ %4785, %4862 ]
  %4871 = add nuw nsw i32 %4786, 1
  br i1 %4634, label %4872, label %4922

4872:                                             ; preds = %4869
  %4873 = load i32, ptr %4, align 4, !tbaa !6
  %4874 = load i32, ptr %12, align 4, !tbaa !6
  %4875 = add nsw i32 %4874, -1
  %4876 = icmp slt i32 %4873, %4875
  br i1 %4876, label %4899, label %4877

4877:                                             ; preds = %4872
  %4878 = icmp eq i32 %4873, %4875
  br i1 %4878, label %4879, label %4915

4879:                                             ; preds = %4877
  store i32 0, ptr %4, align 4, !tbaa !6
  %4880 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4880, ptr %6, align 4, !tbaa !6
  br i1 %4639, label %4922, label %4881

4881:                                             ; preds = %4879, %4909
  %4882 = phi i64 [ %4913, %4909 ], [ 1, %4879 ]
  %4883 = getelementptr inbounds i32, ptr %4, i64 %4882
  %4884 = load i32, ptr %4883, align 4, !tbaa !6
  %4885 = getelementptr inbounds i32, ptr %12, i64 %4882
  %4886 = load i32, ptr %4885, align 4, !tbaa !6
  %4887 = add nsw i32 %4886, -1
  %4888 = icmp slt i32 %4884, %4887
  br i1 %4888, label %4889, label %4907

4889:                                             ; preds = %4881
  br i1 %4876, label %4899, label %4890

4890:                                             ; preds = %4889
  %4891 = shl i64 %4882, 32
  %4892 = add i64 %4891, -4294967296
  %4893 = ashr exact i64 %4892, 32
  %4894 = getelementptr inbounds i32, ptr %7, i64 %4893
  %4895 = load i32, ptr %4894, align 4, !tbaa !6
  %4896 = getelementptr inbounds i32, ptr %6, i64 %4882
  %4897 = load i32, ptr %4896, align 4, !tbaa !6
  %4898 = add nsw i32 %4897, %4895
  store i32 %4898, ptr %4896, align 4, !tbaa !6
  br label %4917

4899:                                             ; preds = %4872, %4889
  %4900 = phi i32 [ %4884, %4889 ], [ %4873, %4872 ]
  %4901 = phi ptr [ %4883, %4889 ], [ %4, %4872 ]
  %4902 = phi i64 [ %4882, %4889 ], [ 0, %4872 ]
  %4903 = add nsw i32 %4900, 1
  store i32 %4903, ptr %4901, align 4, !tbaa !6
  %4904 = getelementptr inbounds i32, ptr %7, i64 %4902
  %4905 = load i32, ptr %4904, align 4, !tbaa !6
  %4906 = getelementptr inbounds i32, ptr %6, i64 %4902
  br label %4917

4907:                                             ; preds = %4881
  %4908 = icmp eq i32 %4884, %4887
  br i1 %4908, label %4909, label %4915

4909:                                             ; preds = %4907
  store i32 0, ptr %4883, align 4, !tbaa !6
  %4910 = getelementptr inbounds i32, ptr %8, i64 %4882
  %4911 = load i32, ptr %4910, align 4, !tbaa !6
  %4912 = getelementptr inbounds i32, ptr %6, i64 %4882
  store i32 %4911, ptr %4912, align 4, !tbaa !6
  %4913 = add nuw nsw i64 %4882, 1
  %4914 = icmp eq i64 %4913, %4637
  br i1 %4914, label %4922, label %4881, !llvm.loop !183

4915:                                             ; preds = %4877, %4907
  %4916 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 84, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5547

4917:                                             ; preds = %4890, %4899
  %4918 = phi ptr [ %4906, %4899 ], [ %4883, %4890 ]
  %4919 = phi i32 [ %4905, %4899 ], [ 1, %4890 ]
  %4920 = load i32, ptr %4918, align 4, !tbaa !6
  %4921 = add nsw i32 %4920, %4919
  store i32 %4921, ptr %4918, align 4, !tbaa !6
  br label %4922

4922:                                             ; preds = %4909, %4917, %4879, %4869
  %4923 = icmp eq i32 %4871, %5
  br i1 %4923, label %5542, label %4784, !llvm.loop !184

4924:                                             ; preds = %4323
  %4925 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 84, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5542

4926:                                             ; preds = %18
  %4927 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4928 = load ptr, ptr %4927, align 8, !tbaa !10
  %4929 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4930 = load ptr, ptr %4929, align 8, !tbaa !10
  %4931 = load i8, ptr %4928, align 1, !tbaa !12
  %4932 = uitofp i8 %4931 to double
  store double %4932, ptr %4930, align 8, !tbaa !19
  %4933 = icmp eq i32 %13, 0
  br i1 %4933, label %4934, label %4939

4934:                                             ; preds = %4926
  %4935 = load i8, ptr %4928, align 1, !tbaa !12
  %4936 = uitofp i8 %4935 to double
  %4937 = fcmp fast olt double %4932, %4936
  br i1 %4937, label %4938, label %5542

4938:                                             ; preds = %4934
  store double %4936, ptr %4930, align 8, !tbaa !19
  br label %5542

4939:                                             ; preds = %4926
  switch i32 %1, label %5540 [
    i32 1, label %4940
    i32 0, label %5242
  ]

4940:                                             ; preds = %4939
  %4941 = getelementptr inbounds i32, ptr %3, i64 %19
  %4942 = load i32, ptr %4941, align 4, !tbaa !6
  %4943 = icmp eq i32 %4942, 0
  %4944 = icmp sgt i32 %5, 0
  br i1 %4943, label %4954, label %4945

4945:                                             ; preds = %4940
  br i1 %4944, label %4946, label %5542

4946:                                             ; preds = %4945
  %4947 = icmp sgt i32 %13, 1
  %4948 = icmp sgt i32 %13, 0
  %4949 = add i32 %13, -2
  %4950 = zext i32 %4949 to i64
  %4951 = zext i32 %13 to i64
  %4952 = add nuw i32 %5, 1
  %4953 = icmp eq i32 %13, 1
  br label %5102

4954:                                             ; preds = %4940
  br i1 %4944, label %4955, label %5542

4955:                                             ; preds = %4954
  %4956 = icmp sgt i32 %13, 1
  %4957 = icmp sgt i32 %13, 0
  %4958 = add i32 %13, -2
  %4959 = zext i32 %4958 to i64
  %4960 = zext i32 %13 to i64
  %4961 = add nuw i32 %5, 1
  %4962 = icmp eq i32 %13, 1
  br label %4963

4963:                                             ; preds = %4955, %5100
  %4964 = phi double [ %4932, %4955 ], [ %5050, %5100 ]
  %4965 = phi i32 [ 0, %4955 ], [ %5052, %5100 ]
  %4966 = phi double [ 0.000000e+00, %4955 ], [ %5051, %5100 ]
  %4967 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4956, label %4968, label %5037

4968:                                             ; preds = %4963, %5027
  %4969 = phi i32 [ %5036, %5027 ], [ 0, %4963 ]
  %4970 = phi i64 [ %4978, %5027 ], [ %4960, %4963 ]
  %4971 = phi i64 [ %5035, %5027 ], [ %4959, %4963 ]
  %4972 = phi i32 [ %5033, %5027 ], [ %4967, %4963 ]
  %4973 = sub i32 %4958, %4969
  %4974 = tail call i32 @llvm.smin.i32(i32 %4973, i32 0)
  %4975 = sub i32 %4973, %4974
  %4976 = zext i32 %4975 to i64
  %4977 = add nuw nsw i64 %4976, 1
  %4978 = add nsw i64 %4970, -1
  %4979 = icmp ult i32 %4975, 31
  br i1 %4979, label %5015, label %4980

4980:                                             ; preds = %4968
  %4981 = and i64 %4977, 8589934560
  %4982 = sub i64 %4971, %4981
  br label %4983

4983:                                             ; preds = %4983, %4980
  %4984 = phi i64 [ 0, %4980 ], [ %5007, %4983 ]
  %4985 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4980 ], [ %5003, %4983 ]
  %4986 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4980 ], [ %5004, %4983 ]
  %4987 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4980 ], [ %5005, %4983 ]
  %4988 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4980 ], [ %5006, %4983 ]
  %4989 = sub i64 %4971, %4984
  %4990 = getelementptr inbounds i32, ptr %9, i64 %4989
  %4991 = getelementptr inbounds i32, ptr %4990, i64 -7
  %4992 = load <8 x i32>, ptr %4991, align 4, !tbaa !6
  %4993 = shufflevector <8 x i32> %4992, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4994 = getelementptr inbounds i32, ptr %4990, i64 -15
  %4995 = load <8 x i32>, ptr %4994, align 4, !tbaa !6
  %4996 = shufflevector <8 x i32> %4995, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4997 = getelementptr inbounds i32, ptr %4990, i64 -23
  %4998 = load <8 x i32>, ptr %4997, align 4, !tbaa !6
  %4999 = shufflevector <8 x i32> %4998, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5000 = getelementptr inbounds i32, ptr %4990, i64 -31
  %5001 = load <8 x i32>, ptr %5000, align 4, !tbaa !6
  %5002 = shufflevector <8 x i32> %5001, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5003 = mul <8 x i32> %4993, %4985
  %5004 = mul <8 x i32> %4996, %4986
  %5005 = mul <8 x i32> %4999, %4987
  %5006 = mul <8 x i32> %5002, %4988
  %5007 = add nuw i64 %4984, 32
  %5008 = icmp eq i64 %5007, %4981
  br i1 %5008, label %5009, label %4983, !llvm.loop !185

5009:                                             ; preds = %4983
  %5010 = mul <8 x i32> %5004, %5003
  %5011 = mul <8 x i32> %5005, %5010
  %5012 = mul <8 x i32> %5006, %5011
  %5013 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5012)
  %5014 = icmp eq i64 %4977, %4981
  br i1 %5014, label %5027, label %5015

5015:                                             ; preds = %4968, %5009
  %5016 = phi i64 [ %4971, %4968 ], [ %4982, %5009 ]
  %5017 = phi i32 [ 1, %4968 ], [ %5013, %5009 ]
  br label %5018

5018:                                             ; preds = %5015, %5018
  %5019 = phi i64 [ %5024, %5018 ], [ %5016, %5015 ]
  %5020 = phi i32 [ %5023, %5018 ], [ %5017, %5015 ]
  %5021 = getelementptr inbounds i32, ptr %9, i64 %5019
  %5022 = load i32, ptr %5021, align 4, !tbaa !6
  %5023 = mul nsw i32 %5022, %5020
  %5024 = add nsw i64 %5019, -1
  %5025 = trunc i64 %5019 to i32
  %5026 = icmp sgt i32 %5025, 0
  br i1 %5026, label %5018, label %5027, !llvm.loop !186

5027:                                             ; preds = %5018, %5009
  %5028 = phi i32 [ %5013, %5009 ], [ %5023, %5018 ]
  %5029 = and i64 %4978, 4294967295
  %5030 = getelementptr inbounds i32, ptr %6, i64 %5029
  %5031 = load i32, ptr %5030, align 4, !tbaa !6
  %5032 = mul nsw i32 %5031, %5028
  %5033 = add nsw i32 %5032, %4972
  %5034 = icmp sgt i64 %4970, 2
  %5035 = add nsw i64 %4971, -1
  %5036 = add i32 %4969, 1
  br i1 %5034, label %4968, label %5037, !llvm.loop !187

5037:                                             ; preds = %5027, %4963
  %5038 = phi i32 [ %4967, %4963 ], [ %5033, %5027 ]
  %5039 = sext i32 %5038 to i64
  %5040 = getelementptr inbounds double, ptr %2, i64 %5039
  %5041 = load double, ptr %5040, align 8, !tbaa !19
  %5042 = getelementptr inbounds i8, ptr %4928, i64 %5039
  %5043 = load i8, ptr %5042, align 1, !tbaa !12
  %5044 = uitofp i8 %5043 to double
  %5045 = fcmp fast one double %5041, 0.000000e+00
  %5046 = fcmp fast olt double %4964, %5044
  %5047 = select i1 %5045, i1 %5046, i1 false
  br i1 %5047, label %5048, label %5049

5048:                                             ; preds = %5037
  store double %5044, ptr %4930, align 8, !tbaa !19
  br label %5049

5049:                                             ; preds = %5048, %5037
  %5050 = phi double [ %5044, %5048 ], [ %4964, %5037 ]
  %5051 = fadd fast double %5041, %4966
  %5052 = add nuw nsw i32 %4965, 1
  br i1 %4957, label %5053, label %5100

5053:                                             ; preds = %5049
  %5054 = load i32, ptr %4, align 4, !tbaa !6
  %5055 = load i32, ptr %12, align 4, !tbaa !6
  %5056 = add nsw i32 %5055, -1
  %5057 = icmp slt i32 %5054, %5056
  br i1 %5057, label %5077, label %5058

5058:                                             ; preds = %5053
  %5059 = icmp eq i32 %5054, %5056
  br i1 %5059, label %5060, label %5093

5060:                                             ; preds = %5058
  store i32 0, ptr %4, align 4, !tbaa !6
  %5061 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5061, ptr %6, align 4, !tbaa !6
  br i1 %4962, label %5100, label %5062

5062:                                             ; preds = %5060, %5087
  %5063 = phi i64 [ %5091, %5087 ], [ 1, %5060 ]
  %5064 = getelementptr inbounds i32, ptr %4, i64 %5063
  %5065 = load i32, ptr %5064, align 4, !tbaa !6
  %5066 = getelementptr inbounds i32, ptr %12, i64 %5063
  %5067 = load i32, ptr %5066, align 4, !tbaa !6
  %5068 = add nsw i32 %5067, -1
  %5069 = icmp slt i32 %5065, %5068
  br i1 %5069, label %5070, label %5085

5070:                                             ; preds = %5062
  br i1 %5057, label %5077, label %5071

5071:                                             ; preds = %5070
  %5072 = getelementptr inbounds i32, ptr %7, i64 %5063
  %5073 = load i32, ptr %5072, align 4, !tbaa !6
  %5074 = getelementptr inbounds i32, ptr %6, i64 %5063
  %5075 = load i32, ptr %5074, align 4, !tbaa !6
  %5076 = add nsw i32 %5075, %5073
  store i32 %5076, ptr %5074, align 4, !tbaa !6
  br label %5095

5077:                                             ; preds = %5053, %5070
  %5078 = phi i32 [ %5065, %5070 ], [ %5054, %5053 ]
  %5079 = phi ptr [ %5064, %5070 ], [ %4, %5053 ]
  %5080 = phi i64 [ %5063, %5070 ], [ 0, %5053 ]
  %5081 = add nsw i32 %5078, 1
  store i32 %5081, ptr %5079, align 4, !tbaa !6
  %5082 = getelementptr inbounds i32, ptr %7, i64 %5080
  %5083 = load i32, ptr %5082, align 4, !tbaa !6
  %5084 = getelementptr inbounds i32, ptr %6, i64 %5080
  br label %5095

5085:                                             ; preds = %5062
  %5086 = icmp eq i32 %5065, %5068
  br i1 %5086, label %5087, label %5093

5087:                                             ; preds = %5085
  store i32 0, ptr %5064, align 4, !tbaa !6
  %5088 = getelementptr inbounds i32, ptr %8, i64 %5063
  %5089 = load i32, ptr %5088, align 4, !tbaa !6
  %5090 = getelementptr inbounds i32, ptr %6, i64 %5063
  store i32 %5089, ptr %5090, align 4, !tbaa !6
  %5091 = add nuw nsw i64 %5063, 1
  %5092 = icmp eq i64 %5091, %4960
  br i1 %5092, label %5100, label %5062, !llvm.loop !188

5093:                                             ; preds = %5058, %5085
  %5094 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 89, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5547

5095:                                             ; preds = %5071, %5077
  %5096 = phi ptr [ %5084, %5077 ], [ %5064, %5071 ]
  %5097 = phi i32 [ %5083, %5077 ], [ 1, %5071 ]
  %5098 = load i32, ptr %5096, align 4, !tbaa !6
  %5099 = add nsw i32 %5098, %5097
  store i32 %5099, ptr %5096, align 4, !tbaa !6
  br label %5100

5100:                                             ; preds = %5087, %5095, %5060, %5049
  %5101 = icmp eq i32 %5052, %5
  br i1 %5101, label %5542, label %4963, !llvm.loop !189

5102:                                             ; preds = %4946, %5240
  %5103 = phi double [ %4932, %4946 ], [ %5188, %5240 ]
  %5104 = phi i32 [ 0, %4946 ], [ %5189, %5240 ]
  %5105 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4947, label %5106, label %5175

5106:                                             ; preds = %5102, %5165
  %5107 = phi i32 [ %5174, %5165 ], [ 0, %5102 ]
  %5108 = phi i64 [ %5116, %5165 ], [ %4951, %5102 ]
  %5109 = phi i64 [ %5173, %5165 ], [ %4950, %5102 ]
  %5110 = phi i32 [ %5171, %5165 ], [ %5105, %5102 ]
  %5111 = sub i32 %4949, %5107
  %5112 = tail call i32 @llvm.smin.i32(i32 %5111, i32 0)
  %5113 = sub i32 %5111, %5112
  %5114 = zext i32 %5113 to i64
  %5115 = add nuw nsw i64 %5114, 1
  %5116 = add nsw i64 %5108, -1
  %5117 = icmp ult i32 %5113, 31
  br i1 %5117, label %5153, label %5118

5118:                                             ; preds = %5106
  %5119 = and i64 %5115, 8589934560
  %5120 = sub i64 %5109, %5119
  br label %5121

5121:                                             ; preds = %5121, %5118
  %5122 = phi i64 [ 0, %5118 ], [ %5145, %5121 ]
  %5123 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5118 ], [ %5141, %5121 ]
  %5124 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5118 ], [ %5142, %5121 ]
  %5125 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5118 ], [ %5143, %5121 ]
  %5126 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5118 ], [ %5144, %5121 ]
  %5127 = sub i64 %5109, %5122
  %5128 = getelementptr inbounds i32, ptr %11, i64 %5127
  %5129 = getelementptr inbounds i32, ptr %5128, i64 -7
  %5130 = load <8 x i32>, ptr %5129, align 4, !tbaa !6
  %5131 = shufflevector <8 x i32> %5130, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5132 = getelementptr inbounds i32, ptr %5128, i64 -15
  %5133 = load <8 x i32>, ptr %5132, align 4, !tbaa !6
  %5134 = shufflevector <8 x i32> %5133, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5135 = getelementptr inbounds i32, ptr %5128, i64 -23
  %5136 = load <8 x i32>, ptr %5135, align 4, !tbaa !6
  %5137 = shufflevector <8 x i32> %5136, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5138 = getelementptr inbounds i32, ptr %5128, i64 -31
  %5139 = load <8 x i32>, ptr %5138, align 4, !tbaa !6
  %5140 = shufflevector <8 x i32> %5139, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5141 = mul <8 x i32> %5131, %5123
  %5142 = mul <8 x i32> %5134, %5124
  %5143 = mul <8 x i32> %5137, %5125
  %5144 = mul <8 x i32> %5140, %5126
  %5145 = add nuw i64 %5122, 32
  %5146 = icmp eq i64 %5145, %5119
  br i1 %5146, label %5147, label %5121, !llvm.loop !190

5147:                                             ; preds = %5121
  %5148 = mul <8 x i32> %5142, %5141
  %5149 = mul <8 x i32> %5143, %5148
  %5150 = mul <8 x i32> %5144, %5149
  %5151 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5150)
  %5152 = icmp eq i64 %5115, %5119
  br i1 %5152, label %5165, label %5153

5153:                                             ; preds = %5106, %5147
  %5154 = phi i64 [ %5109, %5106 ], [ %5120, %5147 ]
  %5155 = phi i32 [ 1, %5106 ], [ %5151, %5147 ]
  br label %5156

5156:                                             ; preds = %5153, %5156
  %5157 = phi i64 [ %5162, %5156 ], [ %5154, %5153 ]
  %5158 = phi i32 [ %5161, %5156 ], [ %5155, %5153 ]
  %5159 = getelementptr inbounds i32, ptr %11, i64 %5157
  %5160 = load i32, ptr %5159, align 4, !tbaa !6
  %5161 = mul nsw i32 %5160, %5158
  %5162 = add nsw i64 %5157, -1
  %5163 = trunc i64 %5157 to i32
  %5164 = icmp sgt i32 %5163, 0
  br i1 %5164, label %5156, label %5165, !llvm.loop !191

5165:                                             ; preds = %5156, %5147
  %5166 = phi i32 [ %5151, %5147 ], [ %5161, %5156 ]
  %5167 = and i64 %5116, 4294967295
  %5168 = getelementptr inbounds i32, ptr %6, i64 %5167
  %5169 = load i32, ptr %5168, align 4, !tbaa !6
  %5170 = mul nsw i32 %5169, %5166
  %5171 = add nsw i32 %5170, %5110
  %5172 = icmp sgt i64 %5108, 2
  %5173 = add nsw i64 %5109, -1
  %5174 = add i32 %5107, 1
  br i1 %5172, label %5106, label %5175, !llvm.loop !192

5175:                                             ; preds = %5165, %5102
  %5176 = phi i32 [ %5105, %5102 ], [ %5171, %5165 ]
  %5177 = icmp slt i32 %5176, %5
  br i1 %5177, label %5180, label %5178

5178:                                             ; preds = %5175
  %5179 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 89, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5547

5180:                                             ; preds = %5175
  %5181 = sext i32 %5176 to i64
  %5182 = getelementptr inbounds i8, ptr %4928, i64 %5181
  %5183 = load i8, ptr %5182, align 1, !tbaa !12
  %5184 = uitofp i8 %5183 to double
  %5185 = fcmp fast olt double %5103, %5184
  br i1 %5185, label %5186, label %5187

5186:                                             ; preds = %5180
  store double %5184, ptr %4930, align 8, !tbaa !19
  br label %5187

5187:                                             ; preds = %5180, %5186
  %5188 = phi double [ %5103, %5180 ], [ %5184, %5186 ]
  %5189 = add nuw nsw i32 %5104, 1
  br i1 %4948, label %5190, label %5240

5190:                                             ; preds = %5187
  %5191 = load i32, ptr %4, align 4, !tbaa !6
  %5192 = load i32, ptr %12, align 4, !tbaa !6
  %5193 = add nsw i32 %5192, -1
  %5194 = icmp slt i32 %5191, %5193
  br i1 %5194, label %5217, label %5195

5195:                                             ; preds = %5190
  %5196 = icmp eq i32 %5191, %5193
  br i1 %5196, label %5197, label %5233

5197:                                             ; preds = %5195
  store i32 0, ptr %4, align 4, !tbaa !6
  %5198 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5198, ptr %6, align 4, !tbaa !6
  br i1 %4953, label %5240, label %5199

5199:                                             ; preds = %5197, %5227
  %5200 = phi i64 [ %5231, %5227 ], [ 1, %5197 ]
  %5201 = getelementptr inbounds i32, ptr %4, i64 %5200
  %5202 = load i32, ptr %5201, align 4, !tbaa !6
  %5203 = getelementptr inbounds i32, ptr %12, i64 %5200
  %5204 = load i32, ptr %5203, align 4, !tbaa !6
  %5205 = add nsw i32 %5204, -1
  %5206 = icmp slt i32 %5202, %5205
  br i1 %5206, label %5207, label %5225

5207:                                             ; preds = %5199
  br i1 %5194, label %5217, label %5208

5208:                                             ; preds = %5207
  %5209 = shl i64 %5200, 32
  %5210 = add i64 %5209, -4294967296
  %5211 = ashr exact i64 %5210, 32
  %5212 = getelementptr inbounds i32, ptr %7, i64 %5211
  %5213 = load i32, ptr %5212, align 4, !tbaa !6
  %5214 = getelementptr inbounds i32, ptr %6, i64 %5200
  %5215 = load i32, ptr %5214, align 4, !tbaa !6
  %5216 = add nsw i32 %5215, %5213
  store i32 %5216, ptr %5214, align 4, !tbaa !6
  br label %5235

5217:                                             ; preds = %5190, %5207
  %5218 = phi i32 [ %5202, %5207 ], [ %5191, %5190 ]
  %5219 = phi ptr [ %5201, %5207 ], [ %4, %5190 ]
  %5220 = phi i64 [ %5200, %5207 ], [ 0, %5190 ]
  %5221 = add nsw i32 %5218, 1
  store i32 %5221, ptr %5219, align 4, !tbaa !6
  %5222 = getelementptr inbounds i32, ptr %7, i64 %5220
  %5223 = load i32, ptr %5222, align 4, !tbaa !6
  %5224 = getelementptr inbounds i32, ptr %6, i64 %5220
  br label %5235

5225:                                             ; preds = %5199
  %5226 = icmp eq i32 %5202, %5205
  br i1 %5226, label %5227, label %5233

5227:                                             ; preds = %5225
  store i32 0, ptr %5201, align 4, !tbaa !6
  %5228 = getelementptr inbounds i32, ptr %8, i64 %5200
  %5229 = load i32, ptr %5228, align 4, !tbaa !6
  %5230 = getelementptr inbounds i32, ptr %6, i64 %5200
  store i32 %5229, ptr %5230, align 4, !tbaa !6
  %5231 = add nuw nsw i64 %5200, 1
  %5232 = icmp eq i64 %5231, %4951
  br i1 %5232, label %5240, label %5199, !llvm.loop !193

5233:                                             ; preds = %5195, %5225
  %5234 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 89, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5547

5235:                                             ; preds = %5208, %5217
  %5236 = phi ptr [ %5224, %5217 ], [ %5201, %5208 ]
  %5237 = phi i32 [ %5223, %5217 ], [ 1, %5208 ]
  %5238 = load i32, ptr %5236, align 4, !tbaa !6
  %5239 = add nsw i32 %5238, %5237
  store i32 %5239, ptr %5236, align 4, !tbaa !6
  br label %5240

5240:                                             ; preds = %5227, %5235, %5197, %5187
  %5241 = icmp eq i32 %5189, %5
  br i1 %5241, label %5542, label %5102, !llvm.loop !194

5242:                                             ; preds = %4939
  %5243 = getelementptr inbounds i32, ptr %3, i64 %19
  %5244 = load i32, ptr %5243, align 4, !tbaa !6
  %5245 = icmp eq i32 %5244, 0
  %5246 = icmp sgt i32 %5, 0
  br i1 %5245, label %5256, label %5247

5247:                                             ; preds = %5242
  br i1 %5246, label %5248, label %5542

5248:                                             ; preds = %5247
  %5249 = icmp sgt i32 %13, 1
  %5250 = icmp sgt i32 %13, 0
  %5251 = add i32 %13, -2
  %5252 = zext i32 %5251 to i64
  %5253 = zext i32 %13 to i64
  %5254 = add nuw i32 %5, 1
  %5255 = icmp eq i32 %13, 1
  br label %5400

5256:                                             ; preds = %5242
  br i1 %5246, label %5257, label %5542

5257:                                             ; preds = %5256
  %5258 = icmp sgt i32 %13, 1
  %5259 = icmp sgt i32 %13, 0
  %5260 = add i32 %13, -2
  %5261 = zext i32 %5260 to i64
  %5262 = zext i32 %13 to i64
  %5263 = add nuw i32 %5, 1
  %5264 = icmp eq i32 %13, 1
  br label %5265

5265:                                             ; preds = %5257, %5398
  %5266 = phi double [ %4932, %5257 ], [ %5348, %5398 ]
  %5267 = phi i32 [ 0, %5257 ], [ %5350, %5398 ]
  %5268 = phi double [ 0.000000e+00, %5257 ], [ %5349, %5398 ]
  %5269 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %5258, label %5270, label %5339

5270:                                             ; preds = %5265, %5329
  %5271 = phi i32 [ %5338, %5329 ], [ 0, %5265 ]
  %5272 = phi i64 [ %5280, %5329 ], [ %5262, %5265 ]
  %5273 = phi i64 [ %5337, %5329 ], [ %5261, %5265 ]
  %5274 = phi i32 [ %5335, %5329 ], [ %5269, %5265 ]
  %5275 = sub i32 %5260, %5271
  %5276 = tail call i32 @llvm.smin.i32(i32 %5275, i32 0)
  %5277 = sub i32 %5275, %5276
  %5278 = zext i32 %5277 to i64
  %5279 = add nuw nsw i64 %5278, 1
  %5280 = add nsw i64 %5272, -1
  %5281 = icmp ult i32 %5277, 31
  br i1 %5281, label %5317, label %5282

5282:                                             ; preds = %5270
  %5283 = and i64 %5279, 8589934560
  %5284 = sub i64 %5273, %5283
  br label %5285

5285:                                             ; preds = %5285, %5282
  %5286 = phi i64 [ 0, %5282 ], [ %5309, %5285 ]
  %5287 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5282 ], [ %5305, %5285 ]
  %5288 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5282 ], [ %5306, %5285 ]
  %5289 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5282 ], [ %5307, %5285 ]
  %5290 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5282 ], [ %5308, %5285 ]
  %5291 = sub i64 %5273, %5286
  %5292 = getelementptr inbounds i32, ptr %9, i64 %5291
  %5293 = getelementptr inbounds i32, ptr %5292, i64 -7
  %5294 = load <8 x i32>, ptr %5293, align 4, !tbaa !6
  %5295 = shufflevector <8 x i32> %5294, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5296 = getelementptr inbounds i32, ptr %5292, i64 -15
  %5297 = load <8 x i32>, ptr %5296, align 4, !tbaa !6
  %5298 = shufflevector <8 x i32> %5297, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5299 = getelementptr inbounds i32, ptr %5292, i64 -23
  %5300 = load <8 x i32>, ptr %5299, align 4, !tbaa !6
  %5301 = shufflevector <8 x i32> %5300, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5302 = getelementptr inbounds i32, ptr %5292, i64 -31
  %5303 = load <8 x i32>, ptr %5302, align 4, !tbaa !6
  %5304 = shufflevector <8 x i32> %5303, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5305 = mul <8 x i32> %5295, %5287
  %5306 = mul <8 x i32> %5298, %5288
  %5307 = mul <8 x i32> %5301, %5289
  %5308 = mul <8 x i32> %5304, %5290
  %5309 = add nuw i64 %5286, 32
  %5310 = icmp eq i64 %5309, %5283
  br i1 %5310, label %5311, label %5285, !llvm.loop !195

5311:                                             ; preds = %5285
  %5312 = mul <8 x i32> %5306, %5305
  %5313 = mul <8 x i32> %5307, %5312
  %5314 = mul <8 x i32> %5308, %5313
  %5315 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5314)
  %5316 = icmp eq i64 %5279, %5283
  br i1 %5316, label %5329, label %5317

5317:                                             ; preds = %5270, %5311
  %5318 = phi i64 [ %5273, %5270 ], [ %5284, %5311 ]
  %5319 = phi i32 [ 1, %5270 ], [ %5315, %5311 ]
  br label %5320

5320:                                             ; preds = %5317, %5320
  %5321 = phi i64 [ %5326, %5320 ], [ %5318, %5317 ]
  %5322 = phi i32 [ %5325, %5320 ], [ %5319, %5317 ]
  %5323 = getelementptr inbounds i32, ptr %9, i64 %5321
  %5324 = load i32, ptr %5323, align 4, !tbaa !6
  %5325 = mul nsw i32 %5324, %5322
  %5326 = add nsw i64 %5321, -1
  %5327 = trunc i64 %5321 to i32
  %5328 = icmp sgt i32 %5327, 0
  br i1 %5328, label %5320, label %5329, !llvm.loop !196

5329:                                             ; preds = %5320, %5311
  %5330 = phi i32 [ %5315, %5311 ], [ %5325, %5320 ]
  %5331 = and i64 %5280, 4294967295
  %5332 = getelementptr inbounds i32, ptr %6, i64 %5331
  %5333 = load i32, ptr %5332, align 4, !tbaa !6
  %5334 = mul nsw i32 %5333, %5330
  %5335 = add nsw i32 %5334, %5274
  %5336 = icmp sgt i64 %5272, 2
  %5337 = add nsw i64 %5273, -1
  %5338 = add i32 %5271, 1
  br i1 %5336, label %5270, label %5339, !llvm.loop !197

5339:                                             ; preds = %5329, %5265
  %5340 = phi i32 [ %5269, %5265 ], [ %5335, %5329 ]
  %5341 = sext i32 %5340 to i64
  %5342 = getelementptr inbounds i8, ptr %4928, i64 %5341
  %5343 = load i8, ptr %5342, align 1, !tbaa !12
  %5344 = uitofp i8 %5343 to double
  %5345 = fcmp fast olt double %5266, %5344
  br i1 %5345, label %5346, label %5347

5346:                                             ; preds = %5339
  store double %5344, ptr %4930, align 8, !tbaa !19
  br label %5347

5347:                                             ; preds = %5346, %5339
  %5348 = phi double [ %5344, %5346 ], [ %5266, %5339 ]
  %5349 = fadd fast double %5268, 1.000000e+00
  %5350 = add nuw nsw i32 %5267, 1
  br i1 %5259, label %5351, label %5398

5351:                                             ; preds = %5347
  %5352 = load i32, ptr %4, align 4, !tbaa !6
  %5353 = load i32, ptr %12, align 4, !tbaa !6
  %5354 = add nsw i32 %5353, -1
  %5355 = icmp slt i32 %5352, %5354
  br i1 %5355, label %5375, label %5356

5356:                                             ; preds = %5351
  %5357 = icmp eq i32 %5352, %5354
  br i1 %5357, label %5358, label %5391

5358:                                             ; preds = %5356
  store i32 0, ptr %4, align 4, !tbaa !6
  %5359 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5359, ptr %6, align 4, !tbaa !6
  br i1 %5264, label %5398, label %5360

5360:                                             ; preds = %5358, %5385
  %5361 = phi i64 [ %5389, %5385 ], [ 1, %5358 ]
  %5362 = getelementptr inbounds i32, ptr %4, i64 %5361
  %5363 = load i32, ptr %5362, align 4, !tbaa !6
  %5364 = getelementptr inbounds i32, ptr %12, i64 %5361
  %5365 = load i32, ptr %5364, align 4, !tbaa !6
  %5366 = add nsw i32 %5365, -1
  %5367 = icmp slt i32 %5363, %5366
  br i1 %5367, label %5368, label %5383

5368:                                             ; preds = %5360
  br i1 %5355, label %5375, label %5369

5369:                                             ; preds = %5368
  %5370 = getelementptr inbounds i32, ptr %7, i64 %5361
  %5371 = load i32, ptr %5370, align 4, !tbaa !6
  %5372 = getelementptr inbounds i32, ptr %6, i64 %5361
  %5373 = load i32, ptr %5372, align 4, !tbaa !6
  %5374 = add nsw i32 %5373, %5371
  store i32 %5374, ptr %5372, align 4, !tbaa !6
  br label %5393

5375:                                             ; preds = %5351, %5368
  %5376 = phi i32 [ %5363, %5368 ], [ %5352, %5351 ]
  %5377 = phi ptr [ %5362, %5368 ], [ %4, %5351 ]
  %5378 = phi i64 [ %5361, %5368 ], [ 0, %5351 ]
  %5379 = add nsw i32 %5376, 1
  store i32 %5379, ptr %5377, align 4, !tbaa !6
  %5380 = getelementptr inbounds i32, ptr %7, i64 %5378
  %5381 = load i32, ptr %5380, align 4, !tbaa !6
  %5382 = getelementptr inbounds i32, ptr %6, i64 %5378
  br label %5393

5383:                                             ; preds = %5360
  %5384 = icmp eq i32 %5363, %5366
  br i1 %5384, label %5385, label %5391

5385:                                             ; preds = %5383
  store i32 0, ptr %5362, align 4, !tbaa !6
  %5386 = getelementptr inbounds i32, ptr %8, i64 %5361
  %5387 = load i32, ptr %5386, align 4, !tbaa !6
  %5388 = getelementptr inbounds i32, ptr %6, i64 %5361
  store i32 %5387, ptr %5388, align 4, !tbaa !6
  %5389 = add nuw nsw i64 %5361, 1
  %5390 = icmp eq i64 %5389, %5262
  br i1 %5390, label %5398, label %5360, !llvm.loop !198

5391:                                             ; preds = %5356, %5383
  %5392 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 89, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5547

5393:                                             ; preds = %5369, %5375
  %5394 = phi ptr [ %5382, %5375 ], [ %5362, %5369 ]
  %5395 = phi i32 [ %5381, %5375 ], [ 1, %5369 ]
  %5396 = load i32, ptr %5394, align 4, !tbaa !6
  %5397 = add nsw i32 %5396, %5395
  store i32 %5397, ptr %5394, align 4, !tbaa !6
  br label %5398

5398:                                             ; preds = %5385, %5393, %5358, %5347
  %5399 = icmp eq i32 %5350, %5
  br i1 %5399, label %5542, label %5265, !llvm.loop !199

5400:                                             ; preds = %5248, %5538
  %5401 = phi double [ %4932, %5248 ], [ %5486, %5538 ]
  %5402 = phi i32 [ 0, %5248 ], [ %5487, %5538 ]
  %5403 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %5249, label %5404, label %5473

5404:                                             ; preds = %5400, %5463
  %5405 = phi i32 [ %5472, %5463 ], [ 0, %5400 ]
  %5406 = phi i64 [ %5414, %5463 ], [ %5253, %5400 ]
  %5407 = phi i64 [ %5471, %5463 ], [ %5252, %5400 ]
  %5408 = phi i32 [ %5469, %5463 ], [ %5403, %5400 ]
  %5409 = sub i32 %5251, %5405
  %5410 = tail call i32 @llvm.smin.i32(i32 %5409, i32 0)
  %5411 = sub i32 %5409, %5410
  %5412 = zext i32 %5411 to i64
  %5413 = add nuw nsw i64 %5412, 1
  %5414 = add nsw i64 %5406, -1
  %5415 = icmp ult i32 %5411, 31
  br i1 %5415, label %5451, label %5416

5416:                                             ; preds = %5404
  %5417 = and i64 %5413, 8589934560
  %5418 = sub i64 %5407, %5417
  br label %5419

5419:                                             ; preds = %5419, %5416
  %5420 = phi i64 [ 0, %5416 ], [ %5443, %5419 ]
  %5421 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5416 ], [ %5439, %5419 ]
  %5422 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5416 ], [ %5440, %5419 ]
  %5423 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5416 ], [ %5441, %5419 ]
  %5424 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5416 ], [ %5442, %5419 ]
  %5425 = sub i64 %5407, %5420
  %5426 = getelementptr inbounds i32, ptr %11, i64 %5425
  %5427 = getelementptr inbounds i32, ptr %5426, i64 -7
  %5428 = load <8 x i32>, ptr %5427, align 4, !tbaa !6
  %5429 = shufflevector <8 x i32> %5428, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5430 = getelementptr inbounds i32, ptr %5426, i64 -15
  %5431 = load <8 x i32>, ptr %5430, align 4, !tbaa !6
  %5432 = shufflevector <8 x i32> %5431, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5433 = getelementptr inbounds i32, ptr %5426, i64 -23
  %5434 = load <8 x i32>, ptr %5433, align 4, !tbaa !6
  %5435 = shufflevector <8 x i32> %5434, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5436 = getelementptr inbounds i32, ptr %5426, i64 -31
  %5437 = load <8 x i32>, ptr %5436, align 4, !tbaa !6
  %5438 = shufflevector <8 x i32> %5437, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5439 = mul <8 x i32> %5429, %5421
  %5440 = mul <8 x i32> %5432, %5422
  %5441 = mul <8 x i32> %5435, %5423
  %5442 = mul <8 x i32> %5438, %5424
  %5443 = add nuw i64 %5420, 32
  %5444 = icmp eq i64 %5443, %5417
  br i1 %5444, label %5445, label %5419, !llvm.loop !200

5445:                                             ; preds = %5419
  %5446 = mul <8 x i32> %5440, %5439
  %5447 = mul <8 x i32> %5441, %5446
  %5448 = mul <8 x i32> %5442, %5447
  %5449 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5448)
  %5450 = icmp eq i64 %5413, %5417
  br i1 %5450, label %5463, label %5451

5451:                                             ; preds = %5404, %5445
  %5452 = phi i64 [ %5407, %5404 ], [ %5418, %5445 ]
  %5453 = phi i32 [ 1, %5404 ], [ %5449, %5445 ]
  br label %5454

5454:                                             ; preds = %5451, %5454
  %5455 = phi i64 [ %5460, %5454 ], [ %5452, %5451 ]
  %5456 = phi i32 [ %5459, %5454 ], [ %5453, %5451 ]
  %5457 = getelementptr inbounds i32, ptr %11, i64 %5455
  %5458 = load i32, ptr %5457, align 4, !tbaa !6
  %5459 = mul nsw i32 %5458, %5456
  %5460 = add nsw i64 %5455, -1
  %5461 = trunc i64 %5455 to i32
  %5462 = icmp sgt i32 %5461, 0
  br i1 %5462, label %5454, label %5463, !llvm.loop !201

5463:                                             ; preds = %5454, %5445
  %5464 = phi i32 [ %5449, %5445 ], [ %5459, %5454 ]
  %5465 = and i64 %5414, 4294967295
  %5466 = getelementptr inbounds i32, ptr %6, i64 %5465
  %5467 = load i32, ptr %5466, align 4, !tbaa !6
  %5468 = mul nsw i32 %5467, %5464
  %5469 = add nsw i32 %5468, %5408
  %5470 = icmp sgt i64 %5406, 2
  %5471 = add nsw i64 %5407, -1
  %5472 = add i32 %5405, 1
  br i1 %5470, label %5404, label %5473, !llvm.loop !202

5473:                                             ; preds = %5463, %5400
  %5474 = phi i32 [ %5403, %5400 ], [ %5469, %5463 ]
  %5475 = icmp slt i32 %5474, %5
  br i1 %5475, label %5478, label %5476

5476:                                             ; preds = %5473
  %5477 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 89, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5547

5478:                                             ; preds = %5473
  %5479 = sext i32 %5474 to i64
  %5480 = getelementptr inbounds i8, ptr %4928, i64 %5479
  %5481 = load i8, ptr %5480, align 1, !tbaa !12
  %5482 = uitofp i8 %5481 to double
  %5483 = fcmp fast olt double %5401, %5482
  br i1 %5483, label %5484, label %5485

5484:                                             ; preds = %5478
  store double %5482, ptr %4930, align 8, !tbaa !19
  br label %5485

5485:                                             ; preds = %5484, %5478
  %5486 = phi double [ %5482, %5484 ], [ %5401, %5478 ]
  %5487 = add nuw nsw i32 %5402, 1
  br i1 %5250, label %5488, label %5538

5488:                                             ; preds = %5485
  %5489 = load i32, ptr %4, align 4, !tbaa !6
  %5490 = load i32, ptr %12, align 4, !tbaa !6
  %5491 = add nsw i32 %5490, -1
  %5492 = icmp slt i32 %5489, %5491
  br i1 %5492, label %5515, label %5493

5493:                                             ; preds = %5488
  %5494 = icmp eq i32 %5489, %5491
  br i1 %5494, label %5495, label %5531

5495:                                             ; preds = %5493
  store i32 0, ptr %4, align 4, !tbaa !6
  %5496 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5496, ptr %6, align 4, !tbaa !6
  br i1 %5255, label %5538, label %5497

5497:                                             ; preds = %5495, %5525
  %5498 = phi i64 [ %5529, %5525 ], [ 1, %5495 ]
  %5499 = getelementptr inbounds i32, ptr %4, i64 %5498
  %5500 = load i32, ptr %5499, align 4, !tbaa !6
  %5501 = getelementptr inbounds i32, ptr %12, i64 %5498
  %5502 = load i32, ptr %5501, align 4, !tbaa !6
  %5503 = add nsw i32 %5502, -1
  %5504 = icmp slt i32 %5500, %5503
  br i1 %5504, label %5505, label %5523

5505:                                             ; preds = %5497
  br i1 %5492, label %5515, label %5506

5506:                                             ; preds = %5505
  %5507 = shl i64 %5498, 32
  %5508 = add i64 %5507, -4294967296
  %5509 = ashr exact i64 %5508, 32
  %5510 = getelementptr inbounds i32, ptr %7, i64 %5509
  %5511 = load i32, ptr %5510, align 4, !tbaa !6
  %5512 = getelementptr inbounds i32, ptr %6, i64 %5498
  %5513 = load i32, ptr %5512, align 4, !tbaa !6
  %5514 = add nsw i32 %5513, %5511
  store i32 %5514, ptr %5512, align 4, !tbaa !6
  br label %5533

5515:                                             ; preds = %5488, %5505
  %5516 = phi i32 [ %5500, %5505 ], [ %5489, %5488 ]
  %5517 = phi ptr [ %5499, %5505 ], [ %4, %5488 ]
  %5518 = phi i64 [ %5498, %5505 ], [ 0, %5488 ]
  %5519 = add nsw i32 %5516, 1
  store i32 %5519, ptr %5517, align 4, !tbaa !6
  %5520 = getelementptr inbounds i32, ptr %7, i64 %5518
  %5521 = load i32, ptr %5520, align 4, !tbaa !6
  %5522 = getelementptr inbounds i32, ptr %6, i64 %5518
  br label %5533

5523:                                             ; preds = %5497
  %5524 = icmp eq i32 %5500, %5503
  br i1 %5524, label %5525, label %5531

5525:                                             ; preds = %5523
  store i32 0, ptr %5499, align 4, !tbaa !6
  %5526 = getelementptr inbounds i32, ptr %8, i64 %5498
  %5527 = load i32, ptr %5526, align 4, !tbaa !6
  %5528 = getelementptr inbounds i32, ptr %6, i64 %5498
  store i32 %5527, ptr %5528, align 4, !tbaa !6
  %5529 = add nuw nsw i64 %5498, 1
  %5530 = icmp eq i64 %5529, %5253
  br i1 %5530, label %5538, label %5497, !llvm.loop !203

5531:                                             ; preds = %5493, %5523
  %5532 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 89, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5547

5533:                                             ; preds = %5506, %5515
  %5534 = phi ptr [ %5522, %5515 ], [ %5499, %5506 ]
  %5535 = phi i32 [ %5521, %5515 ], [ 1, %5506 ]
  %5536 = load i32, ptr %5534, align 4, !tbaa !6
  %5537 = add nsw i32 %5536, %5535
  store i32 %5537, ptr %5534, align 4, !tbaa !6
  br label %5538

5538:                                             ; preds = %5525, %5533, %5495, %5485
  %5539 = icmp eq i32 %5487, %5
  br i1 %5539, label %5542, label %5400, !llvm.loop !204

5540:                                             ; preds = %4939
  %5541 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 89, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5542

5542:                                             ; preds = %5538, %5398, %5240, %5100, %4922, %4782, %4624, %4484, %4306, %4166, %4008, %3868, %3690, %3550, %3392, %3252, %3074, %2935, %2778, %2639, %2462, %2321, %2162, %2021, %1842, %1704, %1548, %1410, %1236, %1097, %940, %801, %624, %486, %330, %192, %5247, %5256, %4945, %4954, %4631, %4640, %4329, %4338, %4015, %4024, %3713, %3722, %3399, %3408, %3097, %3106, %2785, %2794, %2485, %2494, %2169, %2178, %1865, %1874, %1555, %1564, %1257, %1266, %947, %956, %647, %656, %337, %346, %39, %48, %4938, %4934, %5540, %4322, %4318, %4924, %3706, %3702, %4308, %3089, %3086, %3692, %2477, %2474, %3076, %1857, %1854, %2464, %1250, %1247, %1844, %639, %636, %1238, %32, %29, %626, %18
  %5543 = phi double [ 0.000000e+00, %18 ], [ 0.000000e+00, %626 ], [ 0.000000e+00, %29 ], [ 0.000000e+00, %32 ], [ 0.000000e+00, %1238 ], [ 0.000000e+00, %636 ], [ 0.000000e+00, %639 ], [ 0.000000e+00, %1844 ], [ 0.000000e+00, %1247 ], [ 0.000000e+00, %1250 ], [ 0.000000e+00, %2464 ], [ 0.000000e+00, %1854 ], [ 0.000000e+00, %1857 ], [ 0.000000e+00, %3076 ], [ 0.000000e+00, %2474 ], [ 0.000000e+00, %2477 ], [ 0.000000e+00, %3692 ], [ 0.000000e+00, %3086 ], [ 0.000000e+00, %3089 ], [ 0.000000e+00, %4308 ], [ 0.000000e+00, %3702 ], [ 0.000000e+00, %3706 ], [ 0.000000e+00, %4924 ], [ 0.000000e+00, %4318 ], [ 0.000000e+00, %4322 ], [ 0.000000e+00, %5540 ], [ 0.000000e+00, %4934 ], [ 0.000000e+00, %4938 ], [ 0.000000e+00, %48 ], [ 0.000000e+00, %39 ], [ 0.000000e+00, %346 ], [ 0.000000e+00, %337 ], [ 0.000000e+00, %656 ], [ 0.000000e+00, %647 ], [ 0.000000e+00, %956 ], [ 0.000000e+00, %947 ], [ 0.000000e+00, %1266 ], [ 0.000000e+00, %1257 ], [ 0.000000e+00, %1564 ], [ 0.000000e+00, %1555 ], [ 0.000000e+00, %1874 ], [ 0.000000e+00, %1865 ], [ 0.000000e+00, %2178 ], [ 0.000000e+00, %2169 ], [ 0.000000e+00, %2494 ], [ 0.000000e+00, %2485 ], [ 0.000000e+00, %2794 ], [ 0.000000e+00, %2785 ], [ 0.000000e+00, %3106 ], [ 0.000000e+00, %3097 ], [ 0.000000e+00, %3408 ], [ 0.000000e+00, %3399 ], [ 0.000000e+00, %3722 ], [ 0.000000e+00, %3713 ], [ 0.000000e+00, %4024 ], [ 0.000000e+00, %4015 ], [ 0.000000e+00, %4338 ], [ 0.000000e+00, %4329 ], [ 0.000000e+00, %4640 ], [ 0.000000e+00, %4631 ], [ 0.000000e+00, %4954 ], [ 0.000000e+00, %4945 ], [ 0.000000e+00, %5256 ], [ 0.000000e+00, %5247 ], [ %143, %192 ], [ 0.000000e+00, %330 ], [ %437, %486 ], [ 0.000000e+00, %624 ], [ %752, %801 ], [ 0.000000e+00, %940 ], [ %1048, %1097 ], [ 0.000000e+00, %1236 ], [ %1361, %1410 ], [ 0.000000e+00, %1548 ], [ %1655, %1704 ], [ 0.000000e+00, %1842 ], [ %1972, %2021 ], [ 0.000000e+00, %2162 ], [ %2272, %2321 ], [ 0.000000e+00, %2462 ], [ %2590, %2639 ], [ 0.000000e+00, %2778 ], [ %2886, %2935 ], [ 0.000000e+00, %3074 ], [ %3203, %3252 ], [ 0.000000e+00, %3392 ], [ %3501, %3550 ], [ 0.000000e+00, %3690 ], [ %3819, %3868 ], [ 0.000000e+00, %4008 ], [ %4117, %4166 ], [ 0.000000e+00, %4306 ], [ %4435, %4484 ], [ 0.000000e+00, %4624 ], [ %4733, %4782 ], [ 0.000000e+00, %4922 ], [ %5051, %5100 ], [ 0.000000e+00, %5240 ], [ %5349, %5398 ], [ 0.000000e+00, %5538 ]
  %5544 = phi i32 [ %10, %18 ], [ 1, %626 ], [ 1, %29 ], [ 1, %32 ], [ 1, %1238 ], [ 1, %636 ], [ 1, %639 ], [ 1, %1844 ], [ 1, %1247 ], [ 1, %1250 ], [ 1, %2464 ], [ 1, %1854 ], [ 1, %1857 ], [ 1, %3076 ], [ 1, %2474 ], [ 1, %2477 ], [ 1, %3692 ], [ 1, %3086 ], [ 1, %3089 ], [ 1, %4308 ], [ 1, %3702 ], [ 1, %3706 ], [ 1, %4924 ], [ 1, %4318 ], [ 1, %4322 ], [ 1, %5540 ], [ 1, %4934 ], [ 1, %4938 ], [ 1, %48 ], [ 1, %39 ], [ 1, %346 ], [ 1, %337 ], [ 1, %656 ], [ 1, %647 ], [ 1, %956 ], [ 1, %947 ], [ 1, %1266 ], [ 1, %1257 ], [ 1, %1564 ], [ 1, %1555 ], [ 1, %1874 ], [ 1, %1865 ], [ 1, %2178 ], [ 1, %2169 ], [ 1, %2494 ], [ 1, %2485 ], [ 1, %2794 ], [ 1, %2785 ], [ 1, %3106 ], [ 1, %3097 ], [ 1, %3408 ], [ 1, %3399 ], [ 1, %3722 ], [ 1, %3713 ], [ 1, %4024 ], [ 1, %4015 ], [ 1, %4338 ], [ 1, %4329 ], [ 1, %4640 ], [ 1, %4631 ], [ 1, %4954 ], [ 1, %4945 ], [ 1, %5256 ], [ 1, %5247 ], [ %55, %192 ], [ %46, %330 ], [ %353, %486 ], [ %344, %624 ], [ %663, %801 ], [ %654, %940 ], [ %963, %1097 ], [ %954, %1236 ], [ %1273, %1410 ], [ %1264, %1548 ], [ %1571, %1704 ], [ %1562, %1842 ], [ %1881, %2021 ], [ %1872, %2162 ], [ %2185, %2321 ], [ %2176, %2462 ], [ %2501, %2639 ], [ %2492, %2778 ], [ %2801, %2935 ], [ %2792, %3074 ], [ %3113, %3252 ], [ %3104, %3392 ], [ %3415, %3550 ], [ %3406, %3690 ], [ %3729, %3868 ], [ %3720, %4008 ], [ %4031, %4166 ], [ %4022, %4306 ], [ %4345, %4484 ], [ %4336, %4624 ], [ %4647, %4782 ], [ %4638, %4922 ], [ %4961, %5100 ], [ %4952, %5240 ], [ %5263, %5398 ], [ %5254, %5538 ]
  %5545 = tail call i32 @Util_TableSetInt(i32 noundef %17, i32 noundef %5544, ptr noundef nonnull @.str.5) #3
  %5546 = tail call i32 @Util_TableSetReal(i32 noundef %17, double noundef nofpclass(nan inf) %5543, ptr noundef nonnull @.str.6) #3
  br label %5547

5547:                                             ; preds = %5093, %5178, %5233, %5391, %5476, %5531, %4477, %4562, %4617, %4775, %4860, %4915, %3861, %3946, %4001, %4159, %4244, %4299, %3245, %3330, %3385, %3543, %3628, %3683, %2632, %2716, %2771, %2928, %3012, %3067, %2014, %2099, %2155, %2314, %2399, %2455, %1403, %1487, %1541, %1697, %1781, %1835, %794, %878, %933, %1090, %1174, %1229, %185, %269, %323, %479, %563, %617, %5542
  %5548 = phi i32 [ 0, %5542 ], [ -1, %617 ], [ -1, %563 ], [ -1, %479 ], [ -1, %323 ], [ -1, %269 ], [ -1, %185 ], [ -1, %1229 ], [ -1, %1174 ], [ -1, %1090 ], [ -1, %933 ], [ -1, %878 ], [ -1, %794 ], [ -1, %1835 ], [ -1, %1781 ], [ -1, %1697 ], [ -1, %1541 ], [ -1, %1487 ], [ -1, %1403 ], [ -1, %2455 ], [ -1, %2399 ], [ -1, %2314 ], [ -1, %2155 ], [ -1, %2099 ], [ -1, %2014 ], [ -1, %3067 ], [ -1, %3012 ], [ -1, %2928 ], [ -1, %2771 ], [ -1, %2716 ], [ -1, %2632 ], [ -1, %3683 ], [ -1, %3628 ], [ -1, %3543 ], [ -1, %3385 ], [ -1, %3330 ], [ -1, %3245 ], [ -1, %4299 ], [ -1, %4244 ], [ -1, %4159 ], [ -1, %4001 ], [ -1, %3946 ], [ -1, %3861 ], [ -1, %4915 ], [ -1, %4860 ], [ -1, %4775 ], [ -1, %4617 ], [ -1, %4562 ], [ -1, %4477 ], [ -1, %5531 ], [ -1, %5476 ], [ -1, %5391 ], [ -1, %5233 ], [ -1, %5178 ], [ -1, %5093 ]
  ret i32 %5548
}

declare i32 @CCTK_Warn(i32 noundef, i32 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

declare i32 @Util_TableSetInt(i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #1

declare i32 @Util_TableSetReal(i32 noundef, double noundef nofpclass(nan inf), ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_Max_INT(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr noundef readonly %7, ptr noundef readonly %8, ptr nocapture noundef readonly %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr noundef readonly %12, i32 noundef %13, ptr nocapture noundef readonly %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !6
  switch i32 %21, label %5549 [
    i32 101, label %22
    i32 102, label %644
    i32 103, label %1250
    i32 104, label %1876
    i32 105, label %2499
    i32 106, label %3105
    i32 107, label %3716
    i32 108, label %4327
    i32 109, label %4938
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %14, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !10
  %25 = getelementptr inbounds ptr, ptr %16, i64 %19
  %26 = load ptr, ptr %25, align 8, !tbaa !10
  %27 = load i32, ptr %24, align 4, !tbaa !6
  %28 = trunc i32 %27 to i8
  store i8 %28, ptr %26, align 1, !tbaa !12
  %29 = icmp eq i32 %13, 0
  br i1 %29, label %30, label %37

30:                                               ; preds = %22
  %31 = load i32, ptr %24, align 4, !tbaa !6
  %32 = and i32 %27, 255
  %33 = and i32 %31, 255
  %34 = icmp ult i32 %32, %33
  br i1 %34, label %35, label %5549

35:                                               ; preds = %30
  %36 = trunc i32 %31 to i8
  store i8 %36, ptr %26, align 1, !tbaa !12
  br label %5549

37:                                               ; preds = %22
  switch i32 %1, label %642 [
    i32 1, label %38
    i32 0, label %342
  ]

38:                                               ; preds = %37
  %39 = getelementptr inbounds i32, ptr %3, i64 %19
  %40 = load i32, ptr %39, align 4, !tbaa !6
  %41 = icmp eq i32 %40, 0
  %42 = icmp sgt i32 %5, 0
  br i1 %41, label %52, label %43

43:                                               ; preds = %38
  br i1 %42, label %44, label %5549

44:                                               ; preds = %43
  %45 = icmp sgt i32 %13, 1
  %46 = icmp sgt i32 %13, 0
  %47 = add i32 %13, -2
  %48 = zext i32 %47 to i64
  %49 = zext i32 %13 to i64
  %50 = add nuw i32 %5, 1
  %51 = icmp eq i32 %13, 1
  br label %201

52:                                               ; preds = %38
  br i1 %42, label %53, label %5549

53:                                               ; preds = %52
  %54 = icmp sgt i32 %13, 1
  %55 = icmp sgt i32 %13, 0
  %56 = add i32 %13, -2
  %57 = zext i32 %56 to i64
  %58 = zext i32 %13 to i64
  %59 = add nuw i32 %5, 1
  %60 = icmp eq i32 %13, 1
  br label %61

61:                                               ; preds = %53, %199
  %62 = phi i32 [ 0, %53 ], [ %151, %199 ]
  %63 = phi double [ 0.000000e+00, %53 ], [ %150, %199 ]
  %64 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %54, label %65, label %134

65:                                               ; preds = %61, %124
  %66 = phi i32 [ %133, %124 ], [ 0, %61 ]
  %67 = phi i64 [ %75, %124 ], [ %58, %61 ]
  %68 = phi i64 [ %132, %124 ], [ %57, %61 ]
  %69 = phi i32 [ %130, %124 ], [ %64, %61 ]
  %70 = sub i32 %56, %66
  %71 = tail call i32 @llvm.smin.i32(i32 %70, i32 0)
  %72 = sub i32 %70, %71
  %73 = zext i32 %72 to i64
  %74 = add nuw nsw i64 %73, 1
  %75 = add nsw i64 %67, -1
  %76 = icmp ult i32 %72, 31
  br i1 %76, label %112, label %77

77:                                               ; preds = %65
  %78 = and i64 %74, 8589934560
  %79 = sub i64 %68, %78
  br label %80

80:                                               ; preds = %80, %77
  %81 = phi i64 [ 0, %77 ], [ %104, %80 ]
  %82 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %77 ], [ %100, %80 ]
  %83 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %77 ], [ %101, %80 ]
  %84 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %77 ], [ %102, %80 ]
  %85 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %77 ], [ %103, %80 ]
  %86 = sub i64 %68, %81
  %87 = getelementptr inbounds i32, ptr %9, i64 %86
  %88 = getelementptr inbounds i32, ptr %87, i64 -7
  %89 = load <8 x i32>, ptr %88, align 4, !tbaa !6
  %90 = shufflevector <8 x i32> %89, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %91 = getelementptr inbounds i32, ptr %87, i64 -15
  %92 = load <8 x i32>, ptr %91, align 4, !tbaa !6
  %93 = shufflevector <8 x i32> %92, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %94 = getelementptr inbounds i32, ptr %87, i64 -23
  %95 = load <8 x i32>, ptr %94, align 4, !tbaa !6
  %96 = shufflevector <8 x i32> %95, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %97 = getelementptr inbounds i32, ptr %87, i64 -31
  %98 = load <8 x i32>, ptr %97, align 4, !tbaa !6
  %99 = shufflevector <8 x i32> %98, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %100 = mul <8 x i32> %90, %82
  %101 = mul <8 x i32> %93, %83
  %102 = mul <8 x i32> %96, %84
  %103 = mul <8 x i32> %99, %85
  %104 = add nuw i64 %81, 32
  %105 = icmp eq i64 %104, %78
  br i1 %105, label %106, label %80, !llvm.loop !205

106:                                              ; preds = %80
  %107 = mul <8 x i32> %101, %100
  %108 = mul <8 x i32> %102, %107
  %109 = mul <8 x i32> %103, %108
  %110 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %109)
  %111 = icmp eq i64 %74, %78
  br i1 %111, label %124, label %112

112:                                              ; preds = %65, %106
  %113 = phi i64 [ %68, %65 ], [ %79, %106 ]
  %114 = phi i32 [ 1, %65 ], [ %110, %106 ]
  br label %115

115:                                              ; preds = %112, %115
  %116 = phi i64 [ %121, %115 ], [ %113, %112 ]
  %117 = phi i32 [ %120, %115 ], [ %114, %112 ]
  %118 = getelementptr inbounds i32, ptr %9, i64 %116
  %119 = load i32, ptr %118, align 4, !tbaa !6
  %120 = mul nsw i32 %119, %117
  %121 = add nsw i64 %116, -1
  %122 = trunc i64 %116 to i32
  %123 = icmp sgt i32 %122, 0
  br i1 %123, label %115, label %124, !llvm.loop !206

124:                                              ; preds = %115, %106
  %125 = phi i32 [ %110, %106 ], [ %120, %115 ]
  %126 = and i64 %75, 4294967295
  %127 = getelementptr inbounds i32, ptr %6, i64 %126
  %128 = load i32, ptr %127, align 4, !tbaa !6
  %129 = mul nsw i32 %128, %125
  %130 = add nsw i32 %129, %69
  %131 = icmp sgt i64 %67, 2
  %132 = add nsw i64 %68, -1
  %133 = add i32 %66, 1
  br i1 %131, label %65, label %134, !llvm.loop !207

134:                                              ; preds = %124, %61
  %135 = phi i32 [ %64, %61 ], [ %130, %124 ]
  %136 = sext i32 %135 to i64
  %137 = getelementptr inbounds double, ptr %2, i64 %136
  %138 = load double, ptr %137, align 8, !tbaa !19
  %139 = getelementptr inbounds i32, ptr %24, i64 %136
  %140 = load i32, ptr %139, align 4, !tbaa !6
  %141 = trunc i32 %140 to i8
  %142 = fcmp fast ueq double %138, 0.000000e+00
  br i1 %142, label %149, label %143

143:                                              ; preds = %134
  %144 = load i8, ptr %26, align 1, !tbaa !12
  %145 = zext i8 %144 to i32
  %146 = and i32 %140, 255
  %147 = icmp ugt i32 %146, %145
  br i1 %147, label %148, label %149

148:                                              ; preds = %143
  store i8 %141, ptr %26, align 1, !tbaa !12
  br label %149

149:                                              ; preds = %143, %148, %134
  %150 = fadd fast double %138, %63
  %151 = add nuw nsw i32 %62, 1
  br i1 %55, label %152, label %199

152:                                              ; preds = %149
  %153 = load i32, ptr %4, align 4, !tbaa !6
  %154 = load i32, ptr %12, align 4, !tbaa !6
  %155 = add nsw i32 %154, -1
  %156 = icmp slt i32 %153, %155
  br i1 %156, label %176, label %157

157:                                              ; preds = %152
  %158 = icmp eq i32 %153, %155
  br i1 %158, label %159, label %192

159:                                              ; preds = %157
  store i32 0, ptr %4, align 4, !tbaa !6
  %160 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %160, ptr %6, align 4, !tbaa !6
  br i1 %60, label %199, label %161

161:                                              ; preds = %159, %186
  %162 = phi i64 [ %190, %186 ], [ 1, %159 ]
  %163 = getelementptr inbounds i32, ptr %4, i64 %162
  %164 = load i32, ptr %163, align 4, !tbaa !6
  %165 = getelementptr inbounds i32, ptr %12, i64 %162
  %166 = load i32, ptr %165, align 4, !tbaa !6
  %167 = add nsw i32 %166, -1
  %168 = icmp slt i32 %164, %167
  br i1 %168, label %169, label %184

169:                                              ; preds = %161
  br i1 %156, label %176, label %170

170:                                              ; preds = %169
  %171 = getelementptr inbounds i32, ptr %7, i64 %162
  %172 = load i32, ptr %171, align 4, !tbaa !6
  %173 = getelementptr inbounds i32, ptr %6, i64 %162
  %174 = load i32, ptr %173, align 4, !tbaa !6
  %175 = add nsw i32 %174, %172
  store i32 %175, ptr %173, align 4, !tbaa !6
  br label %194

176:                                              ; preds = %152, %169
  %177 = phi i32 [ %164, %169 ], [ %153, %152 ]
  %178 = phi ptr [ %163, %169 ], [ %4, %152 ]
  %179 = phi i64 [ %162, %169 ], [ 0, %152 ]
  %180 = add nsw i32 %177, 1
  store i32 %180, ptr %178, align 4, !tbaa !6
  %181 = getelementptr inbounds i32, ptr %7, i64 %179
  %182 = load i32, ptr %181, align 4, !tbaa !6
  %183 = getelementptr inbounds i32, ptr %6, i64 %179
  br label %194

184:                                              ; preds = %161
  %185 = icmp eq i32 %164, %167
  br i1 %185, label %186, label %192

186:                                              ; preds = %184
  store i32 0, ptr %163, align 4, !tbaa !6
  %187 = getelementptr inbounds i32, ptr %8, i64 %162
  %188 = load i32, ptr %187, align 4, !tbaa !6
  %189 = getelementptr inbounds i32, ptr %6, i64 %162
  store i32 %188, ptr %189, align 4, !tbaa !6
  %190 = add nuw nsw i64 %162, 1
  %191 = icmp eq i64 %190, %58
  br i1 %191, label %199, label %161, !llvm.loop !208

192:                                              ; preds = %157, %184
  %193 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 295, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5554

194:                                              ; preds = %170, %176
  %195 = phi ptr [ %183, %176 ], [ %163, %170 ]
  %196 = phi i32 [ %182, %176 ], [ 1, %170 ]
  %197 = load i32, ptr %195, align 4, !tbaa !6
  %198 = add nsw i32 %197, %196
  store i32 %198, ptr %195, align 4, !tbaa !6
  br label %199

199:                                              ; preds = %186, %194, %159, %149
  %200 = icmp eq i32 %151, %5
  br i1 %200, label %5549, label %61, !llvm.loop !209

201:                                              ; preds = %44, %340
  %202 = phi i32 [ 0, %44 ], [ %289, %340 ]
  %203 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %45, label %204, label %273

204:                                              ; preds = %201, %263
  %205 = phi i32 [ %272, %263 ], [ 0, %201 ]
  %206 = phi i64 [ %214, %263 ], [ %49, %201 ]
  %207 = phi i64 [ %271, %263 ], [ %48, %201 ]
  %208 = phi i32 [ %269, %263 ], [ %203, %201 ]
  %209 = sub i32 %47, %205
  %210 = tail call i32 @llvm.smin.i32(i32 %209, i32 0)
  %211 = sub i32 %209, %210
  %212 = zext i32 %211 to i64
  %213 = add nuw nsw i64 %212, 1
  %214 = add nsw i64 %206, -1
  %215 = icmp ult i32 %211, 31
  br i1 %215, label %251, label %216

216:                                              ; preds = %204
  %217 = and i64 %213, 8589934560
  %218 = sub i64 %207, %217
  br label %219

219:                                              ; preds = %219, %216
  %220 = phi i64 [ 0, %216 ], [ %243, %219 ]
  %221 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %216 ], [ %239, %219 ]
  %222 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %216 ], [ %240, %219 ]
  %223 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %216 ], [ %241, %219 ]
  %224 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %216 ], [ %242, %219 ]
  %225 = sub i64 %207, %220
  %226 = getelementptr inbounds i32, ptr %11, i64 %225
  %227 = getelementptr inbounds i32, ptr %226, i64 -7
  %228 = load <8 x i32>, ptr %227, align 4, !tbaa !6
  %229 = shufflevector <8 x i32> %228, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %230 = getelementptr inbounds i32, ptr %226, i64 -15
  %231 = load <8 x i32>, ptr %230, align 4, !tbaa !6
  %232 = shufflevector <8 x i32> %231, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %233 = getelementptr inbounds i32, ptr %226, i64 -23
  %234 = load <8 x i32>, ptr %233, align 4, !tbaa !6
  %235 = shufflevector <8 x i32> %234, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %236 = getelementptr inbounds i32, ptr %226, i64 -31
  %237 = load <8 x i32>, ptr %236, align 4, !tbaa !6
  %238 = shufflevector <8 x i32> %237, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %239 = mul <8 x i32> %229, %221
  %240 = mul <8 x i32> %232, %222
  %241 = mul <8 x i32> %235, %223
  %242 = mul <8 x i32> %238, %224
  %243 = add nuw i64 %220, 32
  %244 = icmp eq i64 %243, %217
  br i1 %244, label %245, label %219, !llvm.loop !210

245:                                              ; preds = %219
  %246 = mul <8 x i32> %240, %239
  %247 = mul <8 x i32> %241, %246
  %248 = mul <8 x i32> %242, %247
  %249 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %248)
  %250 = icmp eq i64 %213, %217
  br i1 %250, label %263, label %251

251:                                              ; preds = %204, %245
  %252 = phi i64 [ %207, %204 ], [ %218, %245 ]
  %253 = phi i32 [ 1, %204 ], [ %249, %245 ]
  br label %254

254:                                              ; preds = %251, %254
  %255 = phi i64 [ %260, %254 ], [ %252, %251 ]
  %256 = phi i32 [ %259, %254 ], [ %253, %251 ]
  %257 = getelementptr inbounds i32, ptr %11, i64 %255
  %258 = load i32, ptr %257, align 4, !tbaa !6
  %259 = mul nsw i32 %258, %256
  %260 = add nsw i64 %255, -1
  %261 = trunc i64 %255 to i32
  %262 = icmp sgt i32 %261, 0
  br i1 %262, label %254, label %263, !llvm.loop !211

263:                                              ; preds = %254, %245
  %264 = phi i32 [ %249, %245 ], [ %259, %254 ]
  %265 = and i64 %214, 4294967295
  %266 = getelementptr inbounds i32, ptr %6, i64 %265
  %267 = load i32, ptr %266, align 4, !tbaa !6
  %268 = mul nsw i32 %267, %264
  %269 = add nsw i32 %268, %208
  %270 = icmp sgt i64 %206, 2
  %271 = add nsw i64 %207, -1
  %272 = add i32 %205, 1
  br i1 %270, label %204, label %273, !llvm.loop !212

273:                                              ; preds = %263, %201
  %274 = phi i32 [ %203, %201 ], [ %269, %263 ]
  %275 = icmp slt i32 %274, %5
  br i1 %275, label %278, label %276

276:                                              ; preds = %273
  %277 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 295, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5554

278:                                              ; preds = %273
  %279 = sext i32 %274 to i64
  %280 = getelementptr inbounds i32, ptr %24, i64 %279
  %281 = load i32, ptr %280, align 4, !tbaa !6
  %282 = load i8, ptr %26, align 1, !tbaa !12
  %283 = zext i8 %282 to i32
  %284 = and i32 %281, 255
  %285 = icmp ugt i32 %284, %283
  br i1 %285, label %286, label %288

286:                                              ; preds = %278
  %287 = trunc i32 %281 to i8
  store i8 %287, ptr %26, align 1, !tbaa !12
  br label %288

288:                                              ; preds = %278, %286
  %289 = add nuw nsw i32 %202, 1
  br i1 %46, label %290, label %340

290:                                              ; preds = %288
  %291 = load i32, ptr %4, align 4, !tbaa !6
  %292 = load i32, ptr %12, align 4, !tbaa !6
  %293 = add nsw i32 %292, -1
  %294 = icmp slt i32 %291, %293
  br i1 %294, label %317, label %295

295:                                              ; preds = %290
  %296 = icmp eq i32 %291, %293
  br i1 %296, label %297, label %333

297:                                              ; preds = %295
  store i32 0, ptr %4, align 4, !tbaa !6
  %298 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %298, ptr %6, align 4, !tbaa !6
  br i1 %51, label %340, label %299

299:                                              ; preds = %297, %327
  %300 = phi i64 [ %331, %327 ], [ 1, %297 ]
  %301 = getelementptr inbounds i32, ptr %4, i64 %300
  %302 = load i32, ptr %301, align 4, !tbaa !6
  %303 = getelementptr inbounds i32, ptr %12, i64 %300
  %304 = load i32, ptr %303, align 4, !tbaa !6
  %305 = add nsw i32 %304, -1
  %306 = icmp slt i32 %302, %305
  br i1 %306, label %307, label %325

307:                                              ; preds = %299
  br i1 %294, label %317, label %308

308:                                              ; preds = %307
  %309 = shl i64 %300, 32
  %310 = add i64 %309, -4294967296
  %311 = ashr exact i64 %310, 32
  %312 = getelementptr inbounds i32, ptr %7, i64 %311
  %313 = load i32, ptr %312, align 4, !tbaa !6
  %314 = getelementptr inbounds i32, ptr %6, i64 %300
  %315 = load i32, ptr %314, align 4, !tbaa !6
  %316 = add nsw i32 %315, %313
  store i32 %316, ptr %314, align 4, !tbaa !6
  br label %335

317:                                              ; preds = %290, %307
  %318 = phi i32 [ %302, %307 ], [ %291, %290 ]
  %319 = phi ptr [ %301, %307 ], [ %4, %290 ]
  %320 = phi i64 [ %300, %307 ], [ 0, %290 ]
  %321 = add nsw i32 %318, 1
  store i32 %321, ptr %319, align 4, !tbaa !6
  %322 = getelementptr inbounds i32, ptr %7, i64 %320
  %323 = load i32, ptr %322, align 4, !tbaa !6
  %324 = getelementptr inbounds i32, ptr %6, i64 %320
  br label %335

325:                                              ; preds = %299
  %326 = icmp eq i32 %302, %305
  br i1 %326, label %327, label %333

327:                                              ; preds = %325
  store i32 0, ptr %301, align 4, !tbaa !6
  %328 = getelementptr inbounds i32, ptr %8, i64 %300
  %329 = load i32, ptr %328, align 4, !tbaa !6
  %330 = getelementptr inbounds i32, ptr %6, i64 %300
  store i32 %329, ptr %330, align 4, !tbaa !6
  %331 = add nuw nsw i64 %300, 1
  %332 = icmp eq i64 %331, %49
  br i1 %332, label %340, label %299, !llvm.loop !213

333:                                              ; preds = %295, %325
  %334 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 295, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5554

335:                                              ; preds = %308, %317
  %336 = phi ptr [ %324, %317 ], [ %301, %308 ]
  %337 = phi i32 [ %323, %317 ], [ 1, %308 ]
  %338 = load i32, ptr %336, align 4, !tbaa !6
  %339 = add nsw i32 %338, %337
  store i32 %339, ptr %336, align 4, !tbaa !6
  br label %340

340:                                              ; preds = %327, %335, %297, %288
  %341 = icmp eq i32 %289, %5
  br i1 %341, label %5549, label %201, !llvm.loop !214

342:                                              ; preds = %37
  %343 = getelementptr inbounds i32, ptr %3, i64 %19
  %344 = load i32, ptr %343, align 4, !tbaa !6
  %345 = icmp eq i32 %344, 0
  %346 = icmp sgt i32 %5, 0
  br i1 %345, label %356, label %347

347:                                              ; preds = %342
  br i1 %346, label %348, label %5549

348:                                              ; preds = %347
  %349 = icmp sgt i32 %13, 1
  %350 = icmp sgt i32 %13, 0
  %351 = add i32 %13, -2
  %352 = zext i32 %351 to i64
  %353 = zext i32 %13 to i64
  %354 = add nuw i32 %5, 1
  %355 = icmp eq i32 %13, 1
  br label %501

356:                                              ; preds = %342
  br i1 %346, label %357, label %5549

357:                                              ; preds = %356
  %358 = icmp sgt i32 %13, 1
  %359 = icmp sgt i32 %13, 0
  %360 = add i32 %13, -2
  %361 = zext i32 %360 to i64
  %362 = zext i32 %13 to i64
  %363 = add nuw i32 %5, 1
  %364 = icmp eq i32 %13, 1
  br label %365

365:                                              ; preds = %357, %499
  %366 = phi i32 [ 0, %357 ], [ %451, %499 ]
  %367 = phi double [ 0.000000e+00, %357 ], [ %450, %499 ]
  %368 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %358, label %369, label %438

369:                                              ; preds = %365, %428
  %370 = phi i32 [ %437, %428 ], [ 0, %365 ]
  %371 = phi i64 [ %379, %428 ], [ %362, %365 ]
  %372 = phi i64 [ %436, %428 ], [ %361, %365 ]
  %373 = phi i32 [ %434, %428 ], [ %368, %365 ]
  %374 = sub i32 %360, %370
  %375 = tail call i32 @llvm.smin.i32(i32 %374, i32 0)
  %376 = sub i32 %374, %375
  %377 = zext i32 %376 to i64
  %378 = add nuw nsw i64 %377, 1
  %379 = add nsw i64 %371, -1
  %380 = icmp ult i32 %376, 31
  br i1 %380, label %416, label %381

381:                                              ; preds = %369
  %382 = and i64 %378, 8589934560
  %383 = sub i64 %372, %382
  br label %384

384:                                              ; preds = %384, %381
  %385 = phi i64 [ 0, %381 ], [ %408, %384 ]
  %386 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %381 ], [ %404, %384 ]
  %387 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %381 ], [ %405, %384 ]
  %388 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %381 ], [ %406, %384 ]
  %389 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %381 ], [ %407, %384 ]
  %390 = sub i64 %372, %385
  %391 = getelementptr inbounds i32, ptr %9, i64 %390
  %392 = getelementptr inbounds i32, ptr %391, i64 -7
  %393 = load <8 x i32>, ptr %392, align 4, !tbaa !6
  %394 = shufflevector <8 x i32> %393, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %395 = getelementptr inbounds i32, ptr %391, i64 -15
  %396 = load <8 x i32>, ptr %395, align 4, !tbaa !6
  %397 = shufflevector <8 x i32> %396, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %398 = getelementptr inbounds i32, ptr %391, i64 -23
  %399 = load <8 x i32>, ptr %398, align 4, !tbaa !6
  %400 = shufflevector <8 x i32> %399, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %401 = getelementptr inbounds i32, ptr %391, i64 -31
  %402 = load <8 x i32>, ptr %401, align 4, !tbaa !6
  %403 = shufflevector <8 x i32> %402, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %404 = mul <8 x i32> %394, %386
  %405 = mul <8 x i32> %397, %387
  %406 = mul <8 x i32> %400, %388
  %407 = mul <8 x i32> %403, %389
  %408 = add nuw i64 %385, 32
  %409 = icmp eq i64 %408, %382
  br i1 %409, label %410, label %384, !llvm.loop !215

410:                                              ; preds = %384
  %411 = mul <8 x i32> %405, %404
  %412 = mul <8 x i32> %406, %411
  %413 = mul <8 x i32> %407, %412
  %414 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %413)
  %415 = icmp eq i64 %378, %382
  br i1 %415, label %428, label %416

416:                                              ; preds = %369, %410
  %417 = phi i64 [ %372, %369 ], [ %383, %410 ]
  %418 = phi i32 [ 1, %369 ], [ %414, %410 ]
  br label %419

419:                                              ; preds = %416, %419
  %420 = phi i64 [ %425, %419 ], [ %417, %416 ]
  %421 = phi i32 [ %424, %419 ], [ %418, %416 ]
  %422 = getelementptr inbounds i32, ptr %9, i64 %420
  %423 = load i32, ptr %422, align 4, !tbaa !6
  %424 = mul nsw i32 %423, %421
  %425 = add nsw i64 %420, -1
  %426 = trunc i64 %420 to i32
  %427 = icmp sgt i32 %426, 0
  br i1 %427, label %419, label %428, !llvm.loop !216

428:                                              ; preds = %419, %410
  %429 = phi i32 [ %414, %410 ], [ %424, %419 ]
  %430 = and i64 %379, 4294967295
  %431 = getelementptr inbounds i32, ptr %6, i64 %430
  %432 = load i32, ptr %431, align 4, !tbaa !6
  %433 = mul nsw i32 %432, %429
  %434 = add nsw i32 %433, %373
  %435 = icmp sgt i64 %371, 2
  %436 = add nsw i64 %372, -1
  %437 = add i32 %370, 1
  br i1 %435, label %369, label %438, !llvm.loop !217

438:                                              ; preds = %428, %365
  %439 = phi i32 [ %368, %365 ], [ %434, %428 ]
  %440 = sext i32 %439 to i64
  %441 = getelementptr inbounds i32, ptr %24, i64 %440
  %442 = load i32, ptr %441, align 4, !tbaa !6
  %443 = load i8, ptr %26, align 1, !tbaa !12
  %444 = zext i8 %443 to i32
  %445 = and i32 %442, 255
  %446 = icmp ugt i32 %445, %444
  br i1 %446, label %447, label %449

447:                                              ; preds = %438
  %448 = trunc i32 %442 to i8
  store i8 %448, ptr %26, align 1, !tbaa !12
  br label %449

449:                                              ; preds = %447, %438
  %450 = fadd fast double %367, 1.000000e+00
  %451 = add nuw nsw i32 %366, 1
  br i1 %359, label %452, label %499

452:                                              ; preds = %449
  %453 = load i32, ptr %4, align 4, !tbaa !6
  %454 = load i32, ptr %12, align 4, !tbaa !6
  %455 = add nsw i32 %454, -1
  %456 = icmp slt i32 %453, %455
  br i1 %456, label %476, label %457

457:                                              ; preds = %452
  %458 = icmp eq i32 %453, %455
  br i1 %458, label %459, label %492

459:                                              ; preds = %457
  store i32 0, ptr %4, align 4, !tbaa !6
  %460 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %460, ptr %6, align 4, !tbaa !6
  br i1 %364, label %499, label %461

461:                                              ; preds = %459, %486
  %462 = phi i64 [ %490, %486 ], [ 1, %459 ]
  %463 = getelementptr inbounds i32, ptr %4, i64 %462
  %464 = load i32, ptr %463, align 4, !tbaa !6
  %465 = getelementptr inbounds i32, ptr %12, i64 %462
  %466 = load i32, ptr %465, align 4, !tbaa !6
  %467 = add nsw i32 %466, -1
  %468 = icmp slt i32 %464, %467
  br i1 %468, label %469, label %484

469:                                              ; preds = %461
  br i1 %456, label %476, label %470

470:                                              ; preds = %469
  %471 = getelementptr inbounds i32, ptr %7, i64 %462
  %472 = load i32, ptr %471, align 4, !tbaa !6
  %473 = getelementptr inbounds i32, ptr %6, i64 %462
  %474 = load i32, ptr %473, align 4, !tbaa !6
  %475 = add nsw i32 %474, %472
  store i32 %475, ptr %473, align 4, !tbaa !6
  br label %494

476:                                              ; preds = %452, %469
  %477 = phi i32 [ %464, %469 ], [ %453, %452 ]
  %478 = phi ptr [ %463, %469 ], [ %4, %452 ]
  %479 = phi i64 [ %462, %469 ], [ 0, %452 ]
  %480 = add nsw i32 %477, 1
  store i32 %480, ptr %478, align 4, !tbaa !6
  %481 = getelementptr inbounds i32, ptr %7, i64 %479
  %482 = load i32, ptr %481, align 4, !tbaa !6
  %483 = getelementptr inbounds i32, ptr %6, i64 %479
  br label %494

484:                                              ; preds = %461
  %485 = icmp eq i32 %464, %467
  br i1 %485, label %486, label %492

486:                                              ; preds = %484
  store i32 0, ptr %463, align 4, !tbaa !6
  %487 = getelementptr inbounds i32, ptr %8, i64 %462
  %488 = load i32, ptr %487, align 4, !tbaa !6
  %489 = getelementptr inbounds i32, ptr %6, i64 %462
  store i32 %488, ptr %489, align 4, !tbaa !6
  %490 = add nuw nsw i64 %462, 1
  %491 = icmp eq i64 %490, %362
  br i1 %491, label %499, label %461, !llvm.loop !218

492:                                              ; preds = %457, %484
  %493 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 295, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5554

494:                                              ; preds = %470, %476
  %495 = phi ptr [ %483, %476 ], [ %463, %470 ]
  %496 = phi i32 [ %482, %476 ], [ 1, %470 ]
  %497 = load i32, ptr %495, align 4, !tbaa !6
  %498 = add nsw i32 %497, %496
  store i32 %498, ptr %495, align 4, !tbaa !6
  br label %499

499:                                              ; preds = %486, %494, %459, %449
  %500 = icmp eq i32 %451, %5
  br i1 %500, label %5549, label %365, !llvm.loop !219

501:                                              ; preds = %348, %640
  %502 = phi i32 [ 0, %348 ], [ %589, %640 ]
  %503 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %349, label %504, label %573

504:                                              ; preds = %501, %563
  %505 = phi i32 [ %572, %563 ], [ 0, %501 ]
  %506 = phi i64 [ %514, %563 ], [ %353, %501 ]
  %507 = phi i64 [ %571, %563 ], [ %352, %501 ]
  %508 = phi i32 [ %569, %563 ], [ %503, %501 ]
  %509 = sub i32 %351, %505
  %510 = tail call i32 @llvm.smin.i32(i32 %509, i32 0)
  %511 = sub i32 %509, %510
  %512 = zext i32 %511 to i64
  %513 = add nuw nsw i64 %512, 1
  %514 = add nsw i64 %506, -1
  %515 = icmp ult i32 %511, 31
  br i1 %515, label %551, label %516

516:                                              ; preds = %504
  %517 = and i64 %513, 8589934560
  %518 = sub i64 %507, %517
  br label %519

519:                                              ; preds = %519, %516
  %520 = phi i64 [ 0, %516 ], [ %543, %519 ]
  %521 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %516 ], [ %539, %519 ]
  %522 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %516 ], [ %540, %519 ]
  %523 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %516 ], [ %541, %519 ]
  %524 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %516 ], [ %542, %519 ]
  %525 = sub i64 %507, %520
  %526 = getelementptr inbounds i32, ptr %11, i64 %525
  %527 = getelementptr inbounds i32, ptr %526, i64 -7
  %528 = load <8 x i32>, ptr %527, align 4, !tbaa !6
  %529 = shufflevector <8 x i32> %528, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %530 = getelementptr inbounds i32, ptr %526, i64 -15
  %531 = load <8 x i32>, ptr %530, align 4, !tbaa !6
  %532 = shufflevector <8 x i32> %531, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %533 = getelementptr inbounds i32, ptr %526, i64 -23
  %534 = load <8 x i32>, ptr %533, align 4, !tbaa !6
  %535 = shufflevector <8 x i32> %534, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %536 = getelementptr inbounds i32, ptr %526, i64 -31
  %537 = load <8 x i32>, ptr %536, align 4, !tbaa !6
  %538 = shufflevector <8 x i32> %537, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %539 = mul <8 x i32> %529, %521
  %540 = mul <8 x i32> %532, %522
  %541 = mul <8 x i32> %535, %523
  %542 = mul <8 x i32> %538, %524
  %543 = add nuw i64 %520, 32
  %544 = icmp eq i64 %543, %517
  br i1 %544, label %545, label %519, !llvm.loop !220

545:                                              ; preds = %519
  %546 = mul <8 x i32> %540, %539
  %547 = mul <8 x i32> %541, %546
  %548 = mul <8 x i32> %542, %547
  %549 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %548)
  %550 = icmp eq i64 %513, %517
  br i1 %550, label %563, label %551

551:                                              ; preds = %504, %545
  %552 = phi i64 [ %507, %504 ], [ %518, %545 ]
  %553 = phi i32 [ 1, %504 ], [ %549, %545 ]
  br label %554

554:                                              ; preds = %551, %554
  %555 = phi i64 [ %560, %554 ], [ %552, %551 ]
  %556 = phi i32 [ %559, %554 ], [ %553, %551 ]
  %557 = getelementptr inbounds i32, ptr %11, i64 %555
  %558 = load i32, ptr %557, align 4, !tbaa !6
  %559 = mul nsw i32 %558, %556
  %560 = add nsw i64 %555, -1
  %561 = trunc i64 %555 to i32
  %562 = icmp sgt i32 %561, 0
  br i1 %562, label %554, label %563, !llvm.loop !221

563:                                              ; preds = %554, %545
  %564 = phi i32 [ %549, %545 ], [ %559, %554 ]
  %565 = and i64 %514, 4294967295
  %566 = getelementptr inbounds i32, ptr %6, i64 %565
  %567 = load i32, ptr %566, align 4, !tbaa !6
  %568 = mul nsw i32 %567, %564
  %569 = add nsw i32 %568, %508
  %570 = icmp sgt i64 %506, 2
  %571 = add nsw i64 %507, -1
  %572 = add i32 %505, 1
  br i1 %570, label %504, label %573, !llvm.loop !222

573:                                              ; preds = %563, %501
  %574 = phi i32 [ %503, %501 ], [ %569, %563 ]
  %575 = icmp slt i32 %574, %5
  br i1 %575, label %578, label %576

576:                                              ; preds = %573
  %577 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 295, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5554

578:                                              ; preds = %573
  %579 = sext i32 %574 to i64
  %580 = getelementptr inbounds i32, ptr %24, i64 %579
  %581 = load i32, ptr %580, align 4, !tbaa !6
  %582 = load i8, ptr %26, align 1, !tbaa !12
  %583 = zext i8 %582 to i32
  %584 = and i32 %581, 255
  %585 = icmp ugt i32 %584, %583
  br i1 %585, label %586, label %588

586:                                              ; preds = %578
  %587 = trunc i32 %581 to i8
  store i8 %587, ptr %26, align 1, !tbaa !12
  br label %588

588:                                              ; preds = %586, %578
  %589 = add nuw nsw i32 %502, 1
  br i1 %350, label %590, label %640

590:                                              ; preds = %588
  %591 = load i32, ptr %4, align 4, !tbaa !6
  %592 = load i32, ptr %12, align 4, !tbaa !6
  %593 = add nsw i32 %592, -1
  %594 = icmp slt i32 %591, %593
  br i1 %594, label %617, label %595

595:                                              ; preds = %590
  %596 = icmp eq i32 %591, %593
  br i1 %596, label %597, label %633

597:                                              ; preds = %595
  store i32 0, ptr %4, align 4, !tbaa !6
  %598 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %598, ptr %6, align 4, !tbaa !6
  br i1 %355, label %640, label %599

599:                                              ; preds = %597, %627
  %600 = phi i64 [ %631, %627 ], [ 1, %597 ]
  %601 = getelementptr inbounds i32, ptr %4, i64 %600
  %602 = load i32, ptr %601, align 4, !tbaa !6
  %603 = getelementptr inbounds i32, ptr %12, i64 %600
  %604 = load i32, ptr %603, align 4, !tbaa !6
  %605 = add nsw i32 %604, -1
  %606 = icmp slt i32 %602, %605
  br i1 %606, label %607, label %625

607:                                              ; preds = %599
  br i1 %594, label %617, label %608

608:                                              ; preds = %607
  %609 = shl i64 %600, 32
  %610 = add i64 %609, -4294967296
  %611 = ashr exact i64 %610, 32
  %612 = getelementptr inbounds i32, ptr %7, i64 %611
  %613 = load i32, ptr %612, align 4, !tbaa !6
  %614 = getelementptr inbounds i32, ptr %6, i64 %600
  %615 = load i32, ptr %614, align 4, !tbaa !6
  %616 = add nsw i32 %615, %613
  store i32 %616, ptr %614, align 4, !tbaa !6
  br label %635

617:                                              ; preds = %590, %607
  %618 = phi i32 [ %602, %607 ], [ %591, %590 ]
  %619 = phi ptr [ %601, %607 ], [ %4, %590 ]
  %620 = phi i64 [ %600, %607 ], [ 0, %590 ]
  %621 = add nsw i32 %618, 1
  store i32 %621, ptr %619, align 4, !tbaa !6
  %622 = getelementptr inbounds i32, ptr %7, i64 %620
  %623 = load i32, ptr %622, align 4, !tbaa !6
  %624 = getelementptr inbounds i32, ptr %6, i64 %620
  br label %635

625:                                              ; preds = %599
  %626 = icmp eq i32 %602, %605
  br i1 %626, label %627, label %633

627:                                              ; preds = %625
  store i32 0, ptr %601, align 4, !tbaa !6
  %628 = getelementptr inbounds i32, ptr %8, i64 %600
  %629 = load i32, ptr %628, align 4, !tbaa !6
  %630 = getelementptr inbounds i32, ptr %6, i64 %600
  store i32 %629, ptr %630, align 4, !tbaa !6
  %631 = add nuw nsw i64 %600, 1
  %632 = icmp eq i64 %631, %353
  br i1 %632, label %640, label %599, !llvm.loop !223

633:                                              ; preds = %595, %625
  %634 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 295, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5554

635:                                              ; preds = %608, %617
  %636 = phi ptr [ %624, %617 ], [ %601, %608 ]
  %637 = phi i32 [ %623, %617 ], [ 1, %608 ]
  %638 = load i32, ptr %636, align 4, !tbaa !6
  %639 = add nsw i32 %638, %637
  store i32 %639, ptr %636, align 4, !tbaa !6
  br label %640

640:                                              ; preds = %627, %635, %597, %588
  %641 = icmp eq i32 %589, %5
  br i1 %641, label %5549, label %501, !llvm.loop !224

642:                                              ; preds = %37
  %643 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 295, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5549

644:                                              ; preds = %18
  %645 = getelementptr inbounds ptr, ptr %14, i64 %19
  %646 = load ptr, ptr %645, align 8, !tbaa !10
  %647 = getelementptr inbounds ptr, ptr %16, i64 %19
  %648 = load ptr, ptr %647, align 8, !tbaa !10
  %649 = load i32, ptr %646, align 4, !tbaa !6
  store i32 %649, ptr %648, align 4, !tbaa !6
  %650 = icmp eq i32 %13, 0
  br i1 %650, label %651, label %655

651:                                              ; preds = %644
  %652 = load i32, ptr %646, align 4, !tbaa !6
  %653 = icmp slt i32 %649, %652
  br i1 %653, label %654, label %5549

654:                                              ; preds = %651
  store i32 %652, ptr %648, align 4, !tbaa !6
  br label %5549

655:                                              ; preds = %644
  switch i32 %1, label %1248 [
    i32 1, label %656
    i32 0, label %954
  ]

656:                                              ; preds = %655
  %657 = getelementptr inbounds i32, ptr %3, i64 %19
  %658 = load i32, ptr %657, align 4, !tbaa !6
  %659 = icmp eq i32 %658, 0
  %660 = icmp sgt i32 %5, 0
  br i1 %659, label %670, label %661

661:                                              ; preds = %656
  br i1 %660, label %662, label %5549

662:                                              ; preds = %661
  %663 = icmp sgt i32 %13, 1
  %664 = icmp sgt i32 %13, 0
  %665 = add i32 %13, -2
  %666 = zext i32 %665 to i64
  %667 = zext i32 %13 to i64
  %668 = add nuw i32 %5, 1
  %669 = icmp eq i32 %13, 1
  br label %816

670:                                              ; preds = %656
  br i1 %660, label %671, label %5549

671:                                              ; preds = %670
  %672 = icmp sgt i32 %13, 1
  %673 = icmp sgt i32 %13, 0
  %674 = add i32 %13, -2
  %675 = zext i32 %674 to i64
  %676 = zext i32 %13 to i64
  %677 = add nuw i32 %5, 1
  %678 = icmp eq i32 %13, 1
  br label %679

679:                                              ; preds = %671, %814
  %680 = phi i32 [ 0, %671 ], [ %766, %814 ]
  %681 = phi double [ 0.000000e+00, %671 ], [ %765, %814 ]
  %682 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %672, label %683, label %752

683:                                              ; preds = %679, %742
  %684 = phi i32 [ %751, %742 ], [ 0, %679 ]
  %685 = phi i64 [ %693, %742 ], [ %676, %679 ]
  %686 = phi i64 [ %750, %742 ], [ %675, %679 ]
  %687 = phi i32 [ %748, %742 ], [ %682, %679 ]
  %688 = sub i32 %674, %684
  %689 = tail call i32 @llvm.smin.i32(i32 %688, i32 0)
  %690 = sub i32 %688, %689
  %691 = zext i32 %690 to i64
  %692 = add nuw nsw i64 %691, 1
  %693 = add nsw i64 %685, -1
  %694 = icmp ult i32 %690, 31
  br i1 %694, label %730, label %695

695:                                              ; preds = %683
  %696 = and i64 %692, 8589934560
  %697 = sub i64 %686, %696
  br label %698

698:                                              ; preds = %698, %695
  %699 = phi i64 [ 0, %695 ], [ %722, %698 ]
  %700 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %695 ], [ %718, %698 ]
  %701 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %695 ], [ %719, %698 ]
  %702 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %695 ], [ %720, %698 ]
  %703 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %695 ], [ %721, %698 ]
  %704 = sub i64 %686, %699
  %705 = getelementptr inbounds i32, ptr %9, i64 %704
  %706 = getelementptr inbounds i32, ptr %705, i64 -7
  %707 = load <8 x i32>, ptr %706, align 4, !tbaa !6
  %708 = shufflevector <8 x i32> %707, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %709 = getelementptr inbounds i32, ptr %705, i64 -15
  %710 = load <8 x i32>, ptr %709, align 4, !tbaa !6
  %711 = shufflevector <8 x i32> %710, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %712 = getelementptr inbounds i32, ptr %705, i64 -23
  %713 = load <8 x i32>, ptr %712, align 4, !tbaa !6
  %714 = shufflevector <8 x i32> %713, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %715 = getelementptr inbounds i32, ptr %705, i64 -31
  %716 = load <8 x i32>, ptr %715, align 4, !tbaa !6
  %717 = shufflevector <8 x i32> %716, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %718 = mul <8 x i32> %708, %700
  %719 = mul <8 x i32> %711, %701
  %720 = mul <8 x i32> %714, %702
  %721 = mul <8 x i32> %717, %703
  %722 = add nuw i64 %699, 32
  %723 = icmp eq i64 %722, %696
  br i1 %723, label %724, label %698, !llvm.loop !225

724:                                              ; preds = %698
  %725 = mul <8 x i32> %719, %718
  %726 = mul <8 x i32> %720, %725
  %727 = mul <8 x i32> %721, %726
  %728 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %727)
  %729 = icmp eq i64 %692, %696
  br i1 %729, label %742, label %730

730:                                              ; preds = %683, %724
  %731 = phi i64 [ %686, %683 ], [ %697, %724 ]
  %732 = phi i32 [ 1, %683 ], [ %728, %724 ]
  br label %733

733:                                              ; preds = %730, %733
  %734 = phi i64 [ %739, %733 ], [ %731, %730 ]
  %735 = phi i32 [ %738, %733 ], [ %732, %730 ]
  %736 = getelementptr inbounds i32, ptr %9, i64 %734
  %737 = load i32, ptr %736, align 4, !tbaa !6
  %738 = mul nsw i32 %737, %735
  %739 = add nsw i64 %734, -1
  %740 = trunc i64 %734 to i32
  %741 = icmp sgt i32 %740, 0
  br i1 %741, label %733, label %742, !llvm.loop !226

742:                                              ; preds = %733, %724
  %743 = phi i32 [ %728, %724 ], [ %738, %733 ]
  %744 = and i64 %693, 4294967295
  %745 = getelementptr inbounds i32, ptr %6, i64 %744
  %746 = load i32, ptr %745, align 4, !tbaa !6
  %747 = mul nsw i32 %746, %743
  %748 = add nsw i32 %747, %687
  %749 = icmp sgt i64 %685, 2
  %750 = add nsw i64 %686, -1
  %751 = add i32 %684, 1
  br i1 %749, label %683, label %752, !llvm.loop !227

752:                                              ; preds = %742, %679
  %753 = phi i32 [ %682, %679 ], [ %748, %742 ]
  %754 = sext i32 %753 to i64
  %755 = getelementptr inbounds double, ptr %2, i64 %754
  %756 = load double, ptr %755, align 8, !tbaa !19
  %757 = getelementptr inbounds i32, ptr %646, i64 %754
  %758 = load i32, ptr %757, align 4, !tbaa !6
  %759 = fcmp fast ueq double %756, 0.000000e+00
  br i1 %759, label %764, label %760

760:                                              ; preds = %752
  %761 = load i32, ptr %648, align 4, !tbaa !6
  %762 = icmp slt i32 %761, %758
  br i1 %762, label %763, label %764

763:                                              ; preds = %760
  store i32 %758, ptr %648, align 4, !tbaa !6
  br label %764

764:                                              ; preds = %760, %763, %752
  %765 = fadd fast double %756, %681
  %766 = add nuw nsw i32 %680, 1
  br i1 %673, label %767, label %814

767:                                              ; preds = %764
  %768 = load i32, ptr %4, align 4, !tbaa !6
  %769 = load i32, ptr %12, align 4, !tbaa !6
  %770 = add nsw i32 %769, -1
  %771 = icmp slt i32 %768, %770
  br i1 %771, label %791, label %772

772:                                              ; preds = %767
  %773 = icmp eq i32 %768, %770
  br i1 %773, label %774, label %807

774:                                              ; preds = %772
  store i32 0, ptr %4, align 4, !tbaa !6
  %775 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %775, ptr %6, align 4, !tbaa !6
  br i1 %678, label %814, label %776

776:                                              ; preds = %774, %801
  %777 = phi i64 [ %805, %801 ], [ 1, %774 ]
  %778 = getelementptr inbounds i32, ptr %4, i64 %777
  %779 = load i32, ptr %778, align 4, !tbaa !6
  %780 = getelementptr inbounds i32, ptr %12, i64 %777
  %781 = load i32, ptr %780, align 4, !tbaa !6
  %782 = add nsw i32 %781, -1
  %783 = icmp slt i32 %779, %782
  br i1 %783, label %784, label %799

784:                                              ; preds = %776
  br i1 %771, label %791, label %785

785:                                              ; preds = %784
  %786 = getelementptr inbounds i32, ptr %7, i64 %777
  %787 = load i32, ptr %786, align 4, !tbaa !6
  %788 = getelementptr inbounds i32, ptr %6, i64 %777
  %789 = load i32, ptr %788, align 4, !tbaa !6
  %790 = add nsw i32 %789, %787
  store i32 %790, ptr %788, align 4, !tbaa !6
  br label %809

791:                                              ; preds = %767, %784
  %792 = phi i32 [ %779, %784 ], [ %768, %767 ]
  %793 = phi ptr [ %778, %784 ], [ %4, %767 ]
  %794 = phi i64 [ %777, %784 ], [ 0, %767 ]
  %795 = add nsw i32 %792, 1
  store i32 %795, ptr %793, align 4, !tbaa !6
  %796 = getelementptr inbounds i32, ptr %7, i64 %794
  %797 = load i32, ptr %796, align 4, !tbaa !6
  %798 = getelementptr inbounds i32, ptr %6, i64 %794
  br label %809

799:                                              ; preds = %776
  %800 = icmp eq i32 %779, %782
  br i1 %800, label %801, label %807

801:                                              ; preds = %799
  store i32 0, ptr %778, align 4, !tbaa !6
  %802 = getelementptr inbounds i32, ptr %8, i64 %777
  %803 = load i32, ptr %802, align 4, !tbaa !6
  %804 = getelementptr inbounds i32, ptr %6, i64 %777
  store i32 %803, ptr %804, align 4, !tbaa !6
  %805 = add nuw nsw i64 %777, 1
  %806 = icmp eq i64 %805, %676
  br i1 %806, label %814, label %776, !llvm.loop !228

807:                                              ; preds = %772, %799
  %808 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 298, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5554

809:                                              ; preds = %785, %791
  %810 = phi ptr [ %798, %791 ], [ %778, %785 ]
  %811 = phi i32 [ %797, %791 ], [ 1, %785 ]
  %812 = load i32, ptr %810, align 4, !tbaa !6
  %813 = add nsw i32 %812, %811
  store i32 %813, ptr %810, align 4, !tbaa !6
  br label %814

814:                                              ; preds = %801, %809, %774, %764
  %815 = icmp eq i32 %766, %5
  br i1 %815, label %5549, label %679, !llvm.loop !229

816:                                              ; preds = %662, %952
  %817 = phi i32 [ 0, %662 ], [ %901, %952 ]
  %818 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %663, label %819, label %888

819:                                              ; preds = %816, %878
  %820 = phi i32 [ %887, %878 ], [ 0, %816 ]
  %821 = phi i64 [ %829, %878 ], [ %667, %816 ]
  %822 = phi i64 [ %886, %878 ], [ %666, %816 ]
  %823 = phi i32 [ %884, %878 ], [ %818, %816 ]
  %824 = sub i32 %665, %820
  %825 = tail call i32 @llvm.smin.i32(i32 %824, i32 0)
  %826 = sub i32 %824, %825
  %827 = zext i32 %826 to i64
  %828 = add nuw nsw i64 %827, 1
  %829 = add nsw i64 %821, -1
  %830 = icmp ult i32 %826, 31
  br i1 %830, label %866, label %831

831:                                              ; preds = %819
  %832 = and i64 %828, 8589934560
  %833 = sub i64 %822, %832
  br label %834

834:                                              ; preds = %834, %831
  %835 = phi i64 [ 0, %831 ], [ %858, %834 ]
  %836 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %831 ], [ %854, %834 ]
  %837 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %831 ], [ %855, %834 ]
  %838 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %831 ], [ %856, %834 ]
  %839 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %831 ], [ %857, %834 ]
  %840 = sub i64 %822, %835
  %841 = getelementptr inbounds i32, ptr %11, i64 %840
  %842 = getelementptr inbounds i32, ptr %841, i64 -7
  %843 = load <8 x i32>, ptr %842, align 4, !tbaa !6
  %844 = shufflevector <8 x i32> %843, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %845 = getelementptr inbounds i32, ptr %841, i64 -15
  %846 = load <8 x i32>, ptr %845, align 4, !tbaa !6
  %847 = shufflevector <8 x i32> %846, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %848 = getelementptr inbounds i32, ptr %841, i64 -23
  %849 = load <8 x i32>, ptr %848, align 4, !tbaa !6
  %850 = shufflevector <8 x i32> %849, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %851 = getelementptr inbounds i32, ptr %841, i64 -31
  %852 = load <8 x i32>, ptr %851, align 4, !tbaa !6
  %853 = shufflevector <8 x i32> %852, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %854 = mul <8 x i32> %844, %836
  %855 = mul <8 x i32> %847, %837
  %856 = mul <8 x i32> %850, %838
  %857 = mul <8 x i32> %853, %839
  %858 = add nuw i64 %835, 32
  %859 = icmp eq i64 %858, %832
  br i1 %859, label %860, label %834, !llvm.loop !230

860:                                              ; preds = %834
  %861 = mul <8 x i32> %855, %854
  %862 = mul <8 x i32> %856, %861
  %863 = mul <8 x i32> %857, %862
  %864 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %863)
  %865 = icmp eq i64 %828, %832
  br i1 %865, label %878, label %866

866:                                              ; preds = %819, %860
  %867 = phi i64 [ %822, %819 ], [ %833, %860 ]
  %868 = phi i32 [ 1, %819 ], [ %864, %860 ]
  br label %869

869:                                              ; preds = %866, %869
  %870 = phi i64 [ %875, %869 ], [ %867, %866 ]
  %871 = phi i32 [ %874, %869 ], [ %868, %866 ]
  %872 = getelementptr inbounds i32, ptr %11, i64 %870
  %873 = load i32, ptr %872, align 4, !tbaa !6
  %874 = mul nsw i32 %873, %871
  %875 = add nsw i64 %870, -1
  %876 = trunc i64 %870 to i32
  %877 = icmp sgt i32 %876, 0
  br i1 %877, label %869, label %878, !llvm.loop !231

878:                                              ; preds = %869, %860
  %879 = phi i32 [ %864, %860 ], [ %874, %869 ]
  %880 = and i64 %829, 4294967295
  %881 = getelementptr inbounds i32, ptr %6, i64 %880
  %882 = load i32, ptr %881, align 4, !tbaa !6
  %883 = mul nsw i32 %882, %879
  %884 = add nsw i32 %883, %823
  %885 = icmp sgt i64 %821, 2
  %886 = add nsw i64 %822, -1
  %887 = add i32 %820, 1
  br i1 %885, label %819, label %888, !llvm.loop !232

888:                                              ; preds = %878, %816
  %889 = phi i32 [ %818, %816 ], [ %884, %878 ]
  %890 = icmp slt i32 %889, %5
  br i1 %890, label %893, label %891

891:                                              ; preds = %888
  %892 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 298, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5554

893:                                              ; preds = %888
  %894 = sext i32 %889 to i64
  %895 = getelementptr inbounds i32, ptr %646, i64 %894
  %896 = load i32, ptr %895, align 4, !tbaa !6
  %897 = load i32, ptr %648, align 4, !tbaa !6
  %898 = icmp slt i32 %897, %896
  br i1 %898, label %899, label %900

899:                                              ; preds = %893
  store i32 %896, ptr %648, align 4, !tbaa !6
  br label %900

900:                                              ; preds = %893, %899
  %901 = add nuw nsw i32 %817, 1
  br i1 %664, label %902, label %952

902:                                              ; preds = %900
  %903 = load i32, ptr %4, align 4, !tbaa !6
  %904 = load i32, ptr %12, align 4, !tbaa !6
  %905 = add nsw i32 %904, -1
  %906 = icmp slt i32 %903, %905
  br i1 %906, label %929, label %907

907:                                              ; preds = %902
  %908 = icmp eq i32 %903, %905
  br i1 %908, label %909, label %945

909:                                              ; preds = %907
  store i32 0, ptr %4, align 4, !tbaa !6
  %910 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %910, ptr %6, align 4, !tbaa !6
  br i1 %669, label %952, label %911

911:                                              ; preds = %909, %939
  %912 = phi i64 [ %943, %939 ], [ 1, %909 ]
  %913 = getelementptr inbounds i32, ptr %4, i64 %912
  %914 = load i32, ptr %913, align 4, !tbaa !6
  %915 = getelementptr inbounds i32, ptr %12, i64 %912
  %916 = load i32, ptr %915, align 4, !tbaa !6
  %917 = add nsw i32 %916, -1
  %918 = icmp slt i32 %914, %917
  br i1 %918, label %919, label %937

919:                                              ; preds = %911
  br i1 %906, label %929, label %920

920:                                              ; preds = %919
  %921 = shl i64 %912, 32
  %922 = add i64 %921, -4294967296
  %923 = ashr exact i64 %922, 32
  %924 = getelementptr inbounds i32, ptr %7, i64 %923
  %925 = load i32, ptr %924, align 4, !tbaa !6
  %926 = getelementptr inbounds i32, ptr %6, i64 %912
  %927 = load i32, ptr %926, align 4, !tbaa !6
  %928 = add nsw i32 %927, %925
  store i32 %928, ptr %926, align 4, !tbaa !6
  br label %947

929:                                              ; preds = %902, %919
  %930 = phi i32 [ %914, %919 ], [ %903, %902 ]
  %931 = phi ptr [ %913, %919 ], [ %4, %902 ]
  %932 = phi i64 [ %912, %919 ], [ 0, %902 ]
  %933 = add nsw i32 %930, 1
  store i32 %933, ptr %931, align 4, !tbaa !6
  %934 = getelementptr inbounds i32, ptr %7, i64 %932
  %935 = load i32, ptr %934, align 4, !tbaa !6
  %936 = getelementptr inbounds i32, ptr %6, i64 %932
  br label %947

937:                                              ; preds = %911
  %938 = icmp eq i32 %914, %917
  br i1 %938, label %939, label %945

939:                                              ; preds = %937
  store i32 0, ptr %913, align 4, !tbaa !6
  %940 = getelementptr inbounds i32, ptr %8, i64 %912
  %941 = load i32, ptr %940, align 4, !tbaa !6
  %942 = getelementptr inbounds i32, ptr %6, i64 %912
  store i32 %941, ptr %942, align 4, !tbaa !6
  %943 = add nuw nsw i64 %912, 1
  %944 = icmp eq i64 %943, %667
  br i1 %944, label %952, label %911, !llvm.loop !233

945:                                              ; preds = %907, %937
  %946 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 298, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5554

947:                                              ; preds = %920, %929
  %948 = phi ptr [ %936, %929 ], [ %913, %920 ]
  %949 = phi i32 [ %935, %929 ], [ 1, %920 ]
  %950 = load i32, ptr %948, align 4, !tbaa !6
  %951 = add nsw i32 %950, %949
  store i32 %951, ptr %948, align 4, !tbaa !6
  br label %952

952:                                              ; preds = %939, %947, %909, %900
  %953 = icmp eq i32 %901, %5
  br i1 %953, label %5549, label %816, !llvm.loop !234

954:                                              ; preds = %655
  %955 = getelementptr inbounds i32, ptr %3, i64 %19
  %956 = load i32, ptr %955, align 4, !tbaa !6
  %957 = icmp eq i32 %956, 0
  %958 = icmp sgt i32 %5, 0
  br i1 %957, label %968, label %959

959:                                              ; preds = %954
  br i1 %958, label %960, label %5549

960:                                              ; preds = %959
  %961 = icmp sgt i32 %13, 1
  %962 = icmp sgt i32 %13, 0
  %963 = add i32 %13, -2
  %964 = zext i32 %963 to i64
  %965 = zext i32 %13 to i64
  %966 = add nuw i32 %5, 1
  %967 = icmp eq i32 %13, 1
  br label %1110

968:                                              ; preds = %954
  br i1 %958, label %969, label %5549

969:                                              ; preds = %968
  %970 = icmp sgt i32 %13, 1
  %971 = icmp sgt i32 %13, 0
  %972 = add i32 %13, -2
  %973 = zext i32 %972 to i64
  %974 = zext i32 %13 to i64
  %975 = add nuw i32 %5, 1
  %976 = icmp eq i32 %13, 1
  br label %977

977:                                              ; preds = %969, %1108
  %978 = phi i32 [ 0, %969 ], [ %1060, %1108 ]
  %979 = phi double [ 0.000000e+00, %969 ], [ %1059, %1108 ]
  %980 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %970, label %981, label %1050

981:                                              ; preds = %977, %1040
  %982 = phi i32 [ %1049, %1040 ], [ 0, %977 ]
  %983 = phi i64 [ %991, %1040 ], [ %974, %977 ]
  %984 = phi i64 [ %1048, %1040 ], [ %973, %977 ]
  %985 = phi i32 [ %1046, %1040 ], [ %980, %977 ]
  %986 = sub i32 %972, %982
  %987 = tail call i32 @llvm.smin.i32(i32 %986, i32 0)
  %988 = sub i32 %986, %987
  %989 = zext i32 %988 to i64
  %990 = add nuw nsw i64 %989, 1
  %991 = add nsw i64 %983, -1
  %992 = icmp ult i32 %988, 31
  br i1 %992, label %1028, label %993

993:                                              ; preds = %981
  %994 = and i64 %990, 8589934560
  %995 = sub i64 %984, %994
  br label %996

996:                                              ; preds = %996, %993
  %997 = phi i64 [ 0, %993 ], [ %1020, %996 ]
  %998 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %993 ], [ %1016, %996 ]
  %999 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %993 ], [ %1017, %996 ]
  %1000 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %993 ], [ %1018, %996 ]
  %1001 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %993 ], [ %1019, %996 ]
  %1002 = sub i64 %984, %997
  %1003 = getelementptr inbounds i32, ptr %9, i64 %1002
  %1004 = getelementptr inbounds i32, ptr %1003, i64 -7
  %1005 = load <8 x i32>, ptr %1004, align 4, !tbaa !6
  %1006 = shufflevector <8 x i32> %1005, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1007 = getelementptr inbounds i32, ptr %1003, i64 -15
  %1008 = load <8 x i32>, ptr %1007, align 4, !tbaa !6
  %1009 = shufflevector <8 x i32> %1008, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1010 = getelementptr inbounds i32, ptr %1003, i64 -23
  %1011 = load <8 x i32>, ptr %1010, align 4, !tbaa !6
  %1012 = shufflevector <8 x i32> %1011, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1013 = getelementptr inbounds i32, ptr %1003, i64 -31
  %1014 = load <8 x i32>, ptr %1013, align 4, !tbaa !6
  %1015 = shufflevector <8 x i32> %1014, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1016 = mul <8 x i32> %1006, %998
  %1017 = mul <8 x i32> %1009, %999
  %1018 = mul <8 x i32> %1012, %1000
  %1019 = mul <8 x i32> %1015, %1001
  %1020 = add nuw i64 %997, 32
  %1021 = icmp eq i64 %1020, %994
  br i1 %1021, label %1022, label %996, !llvm.loop !235

1022:                                             ; preds = %996
  %1023 = mul <8 x i32> %1017, %1016
  %1024 = mul <8 x i32> %1018, %1023
  %1025 = mul <8 x i32> %1019, %1024
  %1026 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1025)
  %1027 = icmp eq i64 %990, %994
  br i1 %1027, label %1040, label %1028

1028:                                             ; preds = %981, %1022
  %1029 = phi i64 [ %984, %981 ], [ %995, %1022 ]
  %1030 = phi i32 [ 1, %981 ], [ %1026, %1022 ]
  br label %1031

1031:                                             ; preds = %1028, %1031
  %1032 = phi i64 [ %1037, %1031 ], [ %1029, %1028 ]
  %1033 = phi i32 [ %1036, %1031 ], [ %1030, %1028 ]
  %1034 = getelementptr inbounds i32, ptr %9, i64 %1032
  %1035 = load i32, ptr %1034, align 4, !tbaa !6
  %1036 = mul nsw i32 %1035, %1033
  %1037 = add nsw i64 %1032, -1
  %1038 = trunc i64 %1032 to i32
  %1039 = icmp sgt i32 %1038, 0
  br i1 %1039, label %1031, label %1040, !llvm.loop !236

1040:                                             ; preds = %1031, %1022
  %1041 = phi i32 [ %1026, %1022 ], [ %1036, %1031 ]
  %1042 = and i64 %991, 4294967295
  %1043 = getelementptr inbounds i32, ptr %6, i64 %1042
  %1044 = load i32, ptr %1043, align 4, !tbaa !6
  %1045 = mul nsw i32 %1044, %1041
  %1046 = add nsw i32 %1045, %985
  %1047 = icmp sgt i64 %983, 2
  %1048 = add nsw i64 %984, -1
  %1049 = add i32 %982, 1
  br i1 %1047, label %981, label %1050, !llvm.loop !237

1050:                                             ; preds = %1040, %977
  %1051 = phi i32 [ %980, %977 ], [ %1046, %1040 ]
  %1052 = sext i32 %1051 to i64
  %1053 = getelementptr inbounds i32, ptr %646, i64 %1052
  %1054 = load i32, ptr %1053, align 4, !tbaa !6
  %1055 = load i32, ptr %648, align 4, !tbaa !6
  %1056 = icmp slt i32 %1055, %1054
  br i1 %1056, label %1057, label %1058

1057:                                             ; preds = %1050
  store i32 %1054, ptr %648, align 4, !tbaa !6
  br label %1058

1058:                                             ; preds = %1057, %1050
  %1059 = fadd fast double %979, 1.000000e+00
  %1060 = add nuw nsw i32 %978, 1
  br i1 %971, label %1061, label %1108

1061:                                             ; preds = %1058
  %1062 = load i32, ptr %4, align 4, !tbaa !6
  %1063 = load i32, ptr %12, align 4, !tbaa !6
  %1064 = add nsw i32 %1063, -1
  %1065 = icmp slt i32 %1062, %1064
  br i1 %1065, label %1085, label %1066

1066:                                             ; preds = %1061
  %1067 = icmp eq i32 %1062, %1064
  br i1 %1067, label %1068, label %1101

1068:                                             ; preds = %1066
  store i32 0, ptr %4, align 4, !tbaa !6
  %1069 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1069, ptr %6, align 4, !tbaa !6
  br i1 %976, label %1108, label %1070

1070:                                             ; preds = %1068, %1095
  %1071 = phi i64 [ %1099, %1095 ], [ 1, %1068 ]
  %1072 = getelementptr inbounds i32, ptr %4, i64 %1071
  %1073 = load i32, ptr %1072, align 4, !tbaa !6
  %1074 = getelementptr inbounds i32, ptr %12, i64 %1071
  %1075 = load i32, ptr %1074, align 4, !tbaa !6
  %1076 = add nsw i32 %1075, -1
  %1077 = icmp slt i32 %1073, %1076
  br i1 %1077, label %1078, label %1093

1078:                                             ; preds = %1070
  br i1 %1065, label %1085, label %1079

1079:                                             ; preds = %1078
  %1080 = getelementptr inbounds i32, ptr %7, i64 %1071
  %1081 = load i32, ptr %1080, align 4, !tbaa !6
  %1082 = getelementptr inbounds i32, ptr %6, i64 %1071
  %1083 = load i32, ptr %1082, align 4, !tbaa !6
  %1084 = add nsw i32 %1083, %1081
  store i32 %1084, ptr %1082, align 4, !tbaa !6
  br label %1103

1085:                                             ; preds = %1061, %1078
  %1086 = phi i32 [ %1073, %1078 ], [ %1062, %1061 ]
  %1087 = phi ptr [ %1072, %1078 ], [ %4, %1061 ]
  %1088 = phi i64 [ %1071, %1078 ], [ 0, %1061 ]
  %1089 = add nsw i32 %1086, 1
  store i32 %1089, ptr %1087, align 4, !tbaa !6
  %1090 = getelementptr inbounds i32, ptr %7, i64 %1088
  %1091 = load i32, ptr %1090, align 4, !tbaa !6
  %1092 = getelementptr inbounds i32, ptr %6, i64 %1088
  br label %1103

1093:                                             ; preds = %1070
  %1094 = icmp eq i32 %1073, %1076
  br i1 %1094, label %1095, label %1101

1095:                                             ; preds = %1093
  store i32 0, ptr %1072, align 4, !tbaa !6
  %1096 = getelementptr inbounds i32, ptr %8, i64 %1071
  %1097 = load i32, ptr %1096, align 4, !tbaa !6
  %1098 = getelementptr inbounds i32, ptr %6, i64 %1071
  store i32 %1097, ptr %1098, align 4, !tbaa !6
  %1099 = add nuw nsw i64 %1071, 1
  %1100 = icmp eq i64 %1099, %974
  br i1 %1100, label %1108, label %1070, !llvm.loop !238

1101:                                             ; preds = %1066, %1093
  %1102 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 298, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5554

1103:                                             ; preds = %1079, %1085
  %1104 = phi ptr [ %1092, %1085 ], [ %1072, %1079 ]
  %1105 = phi i32 [ %1091, %1085 ], [ 1, %1079 ]
  %1106 = load i32, ptr %1104, align 4, !tbaa !6
  %1107 = add nsw i32 %1106, %1105
  store i32 %1107, ptr %1104, align 4, !tbaa !6
  br label %1108

1108:                                             ; preds = %1095, %1103, %1068, %1058
  %1109 = icmp eq i32 %1060, %5
  br i1 %1109, label %5549, label %977, !llvm.loop !239

1110:                                             ; preds = %960, %1246
  %1111 = phi i32 [ 0, %960 ], [ %1195, %1246 ]
  %1112 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %961, label %1113, label %1182

1113:                                             ; preds = %1110, %1172
  %1114 = phi i32 [ %1181, %1172 ], [ 0, %1110 ]
  %1115 = phi i64 [ %1123, %1172 ], [ %965, %1110 ]
  %1116 = phi i64 [ %1180, %1172 ], [ %964, %1110 ]
  %1117 = phi i32 [ %1178, %1172 ], [ %1112, %1110 ]
  %1118 = sub i32 %963, %1114
  %1119 = tail call i32 @llvm.smin.i32(i32 %1118, i32 0)
  %1120 = sub i32 %1118, %1119
  %1121 = zext i32 %1120 to i64
  %1122 = add nuw nsw i64 %1121, 1
  %1123 = add nsw i64 %1115, -1
  %1124 = icmp ult i32 %1120, 31
  br i1 %1124, label %1160, label %1125

1125:                                             ; preds = %1113
  %1126 = and i64 %1122, 8589934560
  %1127 = sub i64 %1116, %1126
  br label %1128

1128:                                             ; preds = %1128, %1125
  %1129 = phi i64 [ 0, %1125 ], [ %1152, %1128 ]
  %1130 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1125 ], [ %1148, %1128 ]
  %1131 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1125 ], [ %1149, %1128 ]
  %1132 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1125 ], [ %1150, %1128 ]
  %1133 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1125 ], [ %1151, %1128 ]
  %1134 = sub i64 %1116, %1129
  %1135 = getelementptr inbounds i32, ptr %11, i64 %1134
  %1136 = getelementptr inbounds i32, ptr %1135, i64 -7
  %1137 = load <8 x i32>, ptr %1136, align 4, !tbaa !6
  %1138 = shufflevector <8 x i32> %1137, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1139 = getelementptr inbounds i32, ptr %1135, i64 -15
  %1140 = load <8 x i32>, ptr %1139, align 4, !tbaa !6
  %1141 = shufflevector <8 x i32> %1140, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1142 = getelementptr inbounds i32, ptr %1135, i64 -23
  %1143 = load <8 x i32>, ptr %1142, align 4, !tbaa !6
  %1144 = shufflevector <8 x i32> %1143, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1145 = getelementptr inbounds i32, ptr %1135, i64 -31
  %1146 = load <8 x i32>, ptr %1145, align 4, !tbaa !6
  %1147 = shufflevector <8 x i32> %1146, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1148 = mul <8 x i32> %1138, %1130
  %1149 = mul <8 x i32> %1141, %1131
  %1150 = mul <8 x i32> %1144, %1132
  %1151 = mul <8 x i32> %1147, %1133
  %1152 = add nuw i64 %1129, 32
  %1153 = icmp eq i64 %1152, %1126
  br i1 %1153, label %1154, label %1128, !llvm.loop !240

1154:                                             ; preds = %1128
  %1155 = mul <8 x i32> %1149, %1148
  %1156 = mul <8 x i32> %1150, %1155
  %1157 = mul <8 x i32> %1151, %1156
  %1158 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1157)
  %1159 = icmp eq i64 %1122, %1126
  br i1 %1159, label %1172, label %1160

1160:                                             ; preds = %1113, %1154
  %1161 = phi i64 [ %1116, %1113 ], [ %1127, %1154 ]
  %1162 = phi i32 [ 1, %1113 ], [ %1158, %1154 ]
  br label %1163

1163:                                             ; preds = %1160, %1163
  %1164 = phi i64 [ %1169, %1163 ], [ %1161, %1160 ]
  %1165 = phi i32 [ %1168, %1163 ], [ %1162, %1160 ]
  %1166 = getelementptr inbounds i32, ptr %11, i64 %1164
  %1167 = load i32, ptr %1166, align 4, !tbaa !6
  %1168 = mul nsw i32 %1167, %1165
  %1169 = add nsw i64 %1164, -1
  %1170 = trunc i64 %1164 to i32
  %1171 = icmp sgt i32 %1170, 0
  br i1 %1171, label %1163, label %1172, !llvm.loop !241

1172:                                             ; preds = %1163, %1154
  %1173 = phi i32 [ %1158, %1154 ], [ %1168, %1163 ]
  %1174 = and i64 %1123, 4294967295
  %1175 = getelementptr inbounds i32, ptr %6, i64 %1174
  %1176 = load i32, ptr %1175, align 4, !tbaa !6
  %1177 = mul nsw i32 %1176, %1173
  %1178 = add nsw i32 %1177, %1117
  %1179 = icmp sgt i64 %1115, 2
  %1180 = add nsw i64 %1116, -1
  %1181 = add i32 %1114, 1
  br i1 %1179, label %1113, label %1182, !llvm.loop !242

1182:                                             ; preds = %1172, %1110
  %1183 = phi i32 [ %1112, %1110 ], [ %1178, %1172 ]
  %1184 = icmp slt i32 %1183, %5
  br i1 %1184, label %1187, label %1185

1185:                                             ; preds = %1182
  %1186 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 298, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5554

1187:                                             ; preds = %1182
  %1188 = sext i32 %1183 to i64
  %1189 = getelementptr inbounds i32, ptr %646, i64 %1188
  %1190 = load i32, ptr %1189, align 4, !tbaa !6
  %1191 = load i32, ptr %648, align 4, !tbaa !6
  %1192 = icmp slt i32 %1191, %1190
  br i1 %1192, label %1193, label %1194

1193:                                             ; preds = %1187
  store i32 %1190, ptr %648, align 4, !tbaa !6
  br label %1194

1194:                                             ; preds = %1193, %1187
  %1195 = add nuw nsw i32 %1111, 1
  br i1 %962, label %1196, label %1246

1196:                                             ; preds = %1194
  %1197 = load i32, ptr %4, align 4, !tbaa !6
  %1198 = load i32, ptr %12, align 4, !tbaa !6
  %1199 = add nsw i32 %1198, -1
  %1200 = icmp slt i32 %1197, %1199
  br i1 %1200, label %1223, label %1201

1201:                                             ; preds = %1196
  %1202 = icmp eq i32 %1197, %1199
  br i1 %1202, label %1203, label %1239

1203:                                             ; preds = %1201
  store i32 0, ptr %4, align 4, !tbaa !6
  %1204 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1204, ptr %6, align 4, !tbaa !6
  br i1 %967, label %1246, label %1205

1205:                                             ; preds = %1203, %1233
  %1206 = phi i64 [ %1237, %1233 ], [ 1, %1203 ]
  %1207 = getelementptr inbounds i32, ptr %4, i64 %1206
  %1208 = load i32, ptr %1207, align 4, !tbaa !6
  %1209 = getelementptr inbounds i32, ptr %12, i64 %1206
  %1210 = load i32, ptr %1209, align 4, !tbaa !6
  %1211 = add nsw i32 %1210, -1
  %1212 = icmp slt i32 %1208, %1211
  br i1 %1212, label %1213, label %1231

1213:                                             ; preds = %1205
  br i1 %1200, label %1223, label %1214

1214:                                             ; preds = %1213
  %1215 = shl i64 %1206, 32
  %1216 = add i64 %1215, -4294967296
  %1217 = ashr exact i64 %1216, 32
  %1218 = getelementptr inbounds i32, ptr %7, i64 %1217
  %1219 = load i32, ptr %1218, align 4, !tbaa !6
  %1220 = getelementptr inbounds i32, ptr %6, i64 %1206
  %1221 = load i32, ptr %1220, align 4, !tbaa !6
  %1222 = add nsw i32 %1221, %1219
  store i32 %1222, ptr %1220, align 4, !tbaa !6
  br label %1241

1223:                                             ; preds = %1196, %1213
  %1224 = phi i32 [ %1208, %1213 ], [ %1197, %1196 ]
  %1225 = phi ptr [ %1207, %1213 ], [ %4, %1196 ]
  %1226 = phi i64 [ %1206, %1213 ], [ 0, %1196 ]
  %1227 = add nsw i32 %1224, 1
  store i32 %1227, ptr %1225, align 4, !tbaa !6
  %1228 = getelementptr inbounds i32, ptr %7, i64 %1226
  %1229 = load i32, ptr %1228, align 4, !tbaa !6
  %1230 = getelementptr inbounds i32, ptr %6, i64 %1226
  br label %1241

1231:                                             ; preds = %1205
  %1232 = icmp eq i32 %1208, %1211
  br i1 %1232, label %1233, label %1239

1233:                                             ; preds = %1231
  store i32 0, ptr %1207, align 4, !tbaa !6
  %1234 = getelementptr inbounds i32, ptr %8, i64 %1206
  %1235 = load i32, ptr %1234, align 4, !tbaa !6
  %1236 = getelementptr inbounds i32, ptr %6, i64 %1206
  store i32 %1235, ptr %1236, align 4, !tbaa !6
  %1237 = add nuw nsw i64 %1206, 1
  %1238 = icmp eq i64 %1237, %965
  br i1 %1238, label %1246, label %1205, !llvm.loop !243

1239:                                             ; preds = %1201, %1231
  %1240 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 298, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5554

1241:                                             ; preds = %1214, %1223
  %1242 = phi ptr [ %1230, %1223 ], [ %1207, %1214 ]
  %1243 = phi i32 [ %1229, %1223 ], [ 1, %1214 ]
  %1244 = load i32, ptr %1242, align 4, !tbaa !6
  %1245 = add nsw i32 %1244, %1243
  store i32 %1245, ptr %1242, align 4, !tbaa !6
  br label %1246

1246:                                             ; preds = %1233, %1241, %1203, %1194
  %1247 = icmp eq i32 %1195, %5
  br i1 %1247, label %5549, label %1110, !llvm.loop !244

1248:                                             ; preds = %655
  %1249 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 298, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5549

1250:                                             ; preds = %18
  %1251 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1252 = load ptr, ptr %1251, align 8, !tbaa !10
  %1253 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1254 = load ptr, ptr %1253, align 8, !tbaa !10
  %1255 = load i32, ptr %1252, align 4, !tbaa !6
  %1256 = trunc i32 %1255 to i8
  store i8 %1256, ptr %1254, align 1, !tbaa !12
  %1257 = icmp eq i32 %13, 0
  br i1 %1257, label %1258, label %1265

1258:                                             ; preds = %1250
  %1259 = load i32, ptr %1252, align 4, !tbaa !6
  %1260 = shl i32 %1255, 24
  %1261 = shl i32 %1259, 24
  %1262 = icmp slt i32 %1260, %1261
  br i1 %1262, label %1263, label %5549

1263:                                             ; preds = %1258
  %1264 = trunc i32 %1259 to i8
  store i8 %1264, ptr %1254, align 1, !tbaa !12
  br label %5549

1265:                                             ; preds = %1250
  switch i32 %1, label %1874 [
    i32 1, label %1266
    i32 0, label %1572
  ]

1266:                                             ; preds = %1265
  %1267 = getelementptr inbounds i32, ptr %3, i64 %19
  %1268 = load i32, ptr %1267, align 4, !tbaa !6
  %1269 = icmp eq i32 %1268, 0
  %1270 = icmp sgt i32 %5, 0
  br i1 %1269, label %1280, label %1271

1271:                                             ; preds = %1266
  br i1 %1270, label %1272, label %5549

1272:                                             ; preds = %1271
  %1273 = icmp sgt i32 %13, 1
  %1274 = icmp sgt i32 %13, 0
  %1275 = add i32 %13, -2
  %1276 = zext i32 %1275 to i64
  %1277 = zext i32 %13 to i64
  %1278 = add nuw i32 %5, 1
  %1279 = icmp eq i32 %13, 1
  br label %1430

1280:                                             ; preds = %1266
  br i1 %1270, label %1281, label %5549

1281:                                             ; preds = %1280
  %1282 = icmp sgt i32 %13, 1
  %1283 = icmp sgt i32 %13, 0
  %1284 = add i32 %13, -2
  %1285 = zext i32 %1284 to i64
  %1286 = zext i32 %13 to i64
  %1287 = add nuw i32 %5, 1
  %1288 = icmp eq i32 %13, 1
  br label %1289

1289:                                             ; preds = %1281, %1428
  %1290 = phi i32 [ 0, %1281 ], [ %1380, %1428 ]
  %1291 = phi double [ 0.000000e+00, %1281 ], [ %1379, %1428 ]
  %1292 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1282, label %1293, label %1362

1293:                                             ; preds = %1289, %1352
  %1294 = phi i32 [ %1361, %1352 ], [ 0, %1289 ]
  %1295 = phi i64 [ %1303, %1352 ], [ %1286, %1289 ]
  %1296 = phi i64 [ %1360, %1352 ], [ %1285, %1289 ]
  %1297 = phi i32 [ %1358, %1352 ], [ %1292, %1289 ]
  %1298 = sub i32 %1284, %1294
  %1299 = tail call i32 @llvm.smin.i32(i32 %1298, i32 0)
  %1300 = sub i32 %1298, %1299
  %1301 = zext i32 %1300 to i64
  %1302 = add nuw nsw i64 %1301, 1
  %1303 = add nsw i64 %1295, -1
  %1304 = icmp ult i32 %1300, 31
  br i1 %1304, label %1340, label %1305

1305:                                             ; preds = %1293
  %1306 = and i64 %1302, 8589934560
  %1307 = sub i64 %1296, %1306
  br label %1308

1308:                                             ; preds = %1308, %1305
  %1309 = phi i64 [ 0, %1305 ], [ %1332, %1308 ]
  %1310 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1305 ], [ %1328, %1308 ]
  %1311 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1305 ], [ %1329, %1308 ]
  %1312 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1305 ], [ %1330, %1308 ]
  %1313 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1305 ], [ %1331, %1308 ]
  %1314 = sub i64 %1296, %1309
  %1315 = getelementptr inbounds i32, ptr %9, i64 %1314
  %1316 = getelementptr inbounds i32, ptr %1315, i64 -7
  %1317 = load <8 x i32>, ptr %1316, align 4, !tbaa !6
  %1318 = shufflevector <8 x i32> %1317, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1319 = getelementptr inbounds i32, ptr %1315, i64 -15
  %1320 = load <8 x i32>, ptr %1319, align 4, !tbaa !6
  %1321 = shufflevector <8 x i32> %1320, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1322 = getelementptr inbounds i32, ptr %1315, i64 -23
  %1323 = load <8 x i32>, ptr %1322, align 4, !tbaa !6
  %1324 = shufflevector <8 x i32> %1323, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1325 = getelementptr inbounds i32, ptr %1315, i64 -31
  %1326 = load <8 x i32>, ptr %1325, align 4, !tbaa !6
  %1327 = shufflevector <8 x i32> %1326, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1328 = mul <8 x i32> %1318, %1310
  %1329 = mul <8 x i32> %1321, %1311
  %1330 = mul <8 x i32> %1324, %1312
  %1331 = mul <8 x i32> %1327, %1313
  %1332 = add nuw i64 %1309, 32
  %1333 = icmp eq i64 %1332, %1306
  br i1 %1333, label %1334, label %1308, !llvm.loop !245

1334:                                             ; preds = %1308
  %1335 = mul <8 x i32> %1329, %1328
  %1336 = mul <8 x i32> %1330, %1335
  %1337 = mul <8 x i32> %1331, %1336
  %1338 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1337)
  %1339 = icmp eq i64 %1302, %1306
  br i1 %1339, label %1352, label %1340

1340:                                             ; preds = %1293, %1334
  %1341 = phi i64 [ %1296, %1293 ], [ %1307, %1334 ]
  %1342 = phi i32 [ 1, %1293 ], [ %1338, %1334 ]
  br label %1343

1343:                                             ; preds = %1340, %1343
  %1344 = phi i64 [ %1349, %1343 ], [ %1341, %1340 ]
  %1345 = phi i32 [ %1348, %1343 ], [ %1342, %1340 ]
  %1346 = getelementptr inbounds i32, ptr %9, i64 %1344
  %1347 = load i32, ptr %1346, align 4, !tbaa !6
  %1348 = mul nsw i32 %1347, %1345
  %1349 = add nsw i64 %1344, -1
  %1350 = trunc i64 %1344 to i32
  %1351 = icmp sgt i32 %1350, 0
  br i1 %1351, label %1343, label %1352, !llvm.loop !246

1352:                                             ; preds = %1343, %1334
  %1353 = phi i32 [ %1338, %1334 ], [ %1348, %1343 ]
  %1354 = and i64 %1303, 4294967295
  %1355 = getelementptr inbounds i32, ptr %6, i64 %1354
  %1356 = load i32, ptr %1355, align 4, !tbaa !6
  %1357 = mul nsw i32 %1356, %1353
  %1358 = add nsw i32 %1357, %1297
  %1359 = icmp sgt i64 %1295, 2
  %1360 = add nsw i64 %1296, -1
  %1361 = add i32 %1294, 1
  br i1 %1359, label %1293, label %1362, !llvm.loop !247

1362:                                             ; preds = %1352, %1289
  %1363 = phi i32 [ %1292, %1289 ], [ %1358, %1352 ]
  %1364 = sext i32 %1363 to i64
  %1365 = getelementptr inbounds double, ptr %2, i64 %1364
  %1366 = load double, ptr %1365, align 8, !tbaa !19
  %1367 = getelementptr inbounds i32, ptr %1252, i64 %1364
  %1368 = load i32, ptr %1367, align 4, !tbaa !6
  %1369 = trunc i32 %1368 to i8
  %1370 = fcmp fast ueq double %1366, 0.000000e+00
  br i1 %1370, label %1378, label %1371

1371:                                             ; preds = %1362
  %1372 = load i8, ptr %1254, align 1, !tbaa !12
  %1373 = sext i8 %1372 to i32
  %1374 = shl i32 %1368, 24
  %1375 = ashr exact i32 %1374, 24
  %1376 = icmp sgt i32 %1375, %1373
  br i1 %1376, label %1377, label %1378

1377:                                             ; preds = %1371
  store i8 %1369, ptr %1254, align 1, !tbaa !12
  br label %1378

1378:                                             ; preds = %1371, %1377, %1362
  %1379 = fadd fast double %1366, %1291
  %1380 = add nuw nsw i32 %1290, 1
  br i1 %1283, label %1381, label %1428

1381:                                             ; preds = %1378
  %1382 = load i32, ptr %4, align 4, !tbaa !6
  %1383 = load i32, ptr %12, align 4, !tbaa !6
  %1384 = add nsw i32 %1383, -1
  %1385 = icmp slt i32 %1382, %1384
  br i1 %1385, label %1405, label %1386

1386:                                             ; preds = %1381
  %1387 = icmp eq i32 %1382, %1384
  br i1 %1387, label %1388, label %1421

1388:                                             ; preds = %1386
  store i32 0, ptr %4, align 4, !tbaa !6
  %1389 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1389, ptr %6, align 4, !tbaa !6
  br i1 %1288, label %1428, label %1390

1390:                                             ; preds = %1388, %1415
  %1391 = phi i64 [ %1419, %1415 ], [ 1, %1388 ]
  %1392 = getelementptr inbounds i32, ptr %4, i64 %1391
  %1393 = load i32, ptr %1392, align 4, !tbaa !6
  %1394 = getelementptr inbounds i32, ptr %12, i64 %1391
  %1395 = load i32, ptr %1394, align 4, !tbaa !6
  %1396 = add nsw i32 %1395, -1
  %1397 = icmp slt i32 %1393, %1396
  br i1 %1397, label %1398, label %1413

1398:                                             ; preds = %1390
  br i1 %1385, label %1405, label %1399

1399:                                             ; preds = %1398
  %1400 = getelementptr inbounds i32, ptr %7, i64 %1391
  %1401 = load i32, ptr %1400, align 4, !tbaa !6
  %1402 = getelementptr inbounds i32, ptr %6, i64 %1391
  %1403 = load i32, ptr %1402, align 4, !tbaa !6
  %1404 = add nsw i32 %1403, %1401
  store i32 %1404, ptr %1402, align 4, !tbaa !6
  br label %1423

1405:                                             ; preds = %1381, %1398
  %1406 = phi i32 [ %1393, %1398 ], [ %1382, %1381 ]
  %1407 = phi ptr [ %1392, %1398 ], [ %4, %1381 ]
  %1408 = phi i64 [ %1391, %1398 ], [ 0, %1381 ]
  %1409 = add nsw i32 %1406, 1
  store i32 %1409, ptr %1407, align 4, !tbaa !6
  %1410 = getelementptr inbounds i32, ptr %7, i64 %1408
  %1411 = load i32, ptr %1410, align 4, !tbaa !6
  %1412 = getelementptr inbounds i32, ptr %6, i64 %1408
  br label %1423

1413:                                             ; preds = %1390
  %1414 = icmp eq i32 %1393, %1396
  br i1 %1414, label %1415, label %1421

1415:                                             ; preds = %1413
  store i32 0, ptr %1392, align 4, !tbaa !6
  %1416 = getelementptr inbounds i32, ptr %8, i64 %1391
  %1417 = load i32, ptr %1416, align 4, !tbaa !6
  %1418 = getelementptr inbounds i32, ptr %6, i64 %1391
  store i32 %1417, ptr %1418, align 4, !tbaa !6
  %1419 = add nuw nsw i64 %1391, 1
  %1420 = icmp eq i64 %1419, %1286
  br i1 %1420, label %1428, label %1390, !llvm.loop !248

1421:                                             ; preds = %1386, %1413
  %1422 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 302, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5554

1423:                                             ; preds = %1399, %1405
  %1424 = phi ptr [ %1412, %1405 ], [ %1392, %1399 ]
  %1425 = phi i32 [ %1411, %1405 ], [ 1, %1399 ]
  %1426 = load i32, ptr %1424, align 4, !tbaa !6
  %1427 = add nsw i32 %1426, %1425
  store i32 %1427, ptr %1424, align 4, !tbaa !6
  br label %1428

1428:                                             ; preds = %1415, %1423, %1388, %1378
  %1429 = icmp eq i32 %1380, %5
  br i1 %1429, label %5549, label %1289, !llvm.loop !249

1430:                                             ; preds = %1272, %1570
  %1431 = phi i32 [ 0, %1272 ], [ %1519, %1570 ]
  %1432 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1273, label %1433, label %1502

1433:                                             ; preds = %1430, %1492
  %1434 = phi i32 [ %1501, %1492 ], [ 0, %1430 ]
  %1435 = phi i64 [ %1443, %1492 ], [ %1277, %1430 ]
  %1436 = phi i64 [ %1500, %1492 ], [ %1276, %1430 ]
  %1437 = phi i32 [ %1498, %1492 ], [ %1432, %1430 ]
  %1438 = sub i32 %1275, %1434
  %1439 = tail call i32 @llvm.smin.i32(i32 %1438, i32 0)
  %1440 = sub i32 %1438, %1439
  %1441 = zext i32 %1440 to i64
  %1442 = add nuw nsw i64 %1441, 1
  %1443 = add nsw i64 %1435, -1
  %1444 = icmp ult i32 %1440, 31
  br i1 %1444, label %1480, label %1445

1445:                                             ; preds = %1433
  %1446 = and i64 %1442, 8589934560
  %1447 = sub i64 %1436, %1446
  br label %1448

1448:                                             ; preds = %1448, %1445
  %1449 = phi i64 [ 0, %1445 ], [ %1472, %1448 ]
  %1450 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1445 ], [ %1468, %1448 ]
  %1451 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1445 ], [ %1469, %1448 ]
  %1452 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1445 ], [ %1470, %1448 ]
  %1453 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1445 ], [ %1471, %1448 ]
  %1454 = sub i64 %1436, %1449
  %1455 = getelementptr inbounds i32, ptr %11, i64 %1454
  %1456 = getelementptr inbounds i32, ptr %1455, i64 -7
  %1457 = load <8 x i32>, ptr %1456, align 4, !tbaa !6
  %1458 = shufflevector <8 x i32> %1457, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1459 = getelementptr inbounds i32, ptr %1455, i64 -15
  %1460 = load <8 x i32>, ptr %1459, align 4, !tbaa !6
  %1461 = shufflevector <8 x i32> %1460, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1462 = getelementptr inbounds i32, ptr %1455, i64 -23
  %1463 = load <8 x i32>, ptr %1462, align 4, !tbaa !6
  %1464 = shufflevector <8 x i32> %1463, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1465 = getelementptr inbounds i32, ptr %1455, i64 -31
  %1466 = load <8 x i32>, ptr %1465, align 4, !tbaa !6
  %1467 = shufflevector <8 x i32> %1466, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1468 = mul <8 x i32> %1458, %1450
  %1469 = mul <8 x i32> %1461, %1451
  %1470 = mul <8 x i32> %1464, %1452
  %1471 = mul <8 x i32> %1467, %1453
  %1472 = add nuw i64 %1449, 32
  %1473 = icmp eq i64 %1472, %1446
  br i1 %1473, label %1474, label %1448, !llvm.loop !250

1474:                                             ; preds = %1448
  %1475 = mul <8 x i32> %1469, %1468
  %1476 = mul <8 x i32> %1470, %1475
  %1477 = mul <8 x i32> %1471, %1476
  %1478 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1477)
  %1479 = icmp eq i64 %1442, %1446
  br i1 %1479, label %1492, label %1480

1480:                                             ; preds = %1433, %1474
  %1481 = phi i64 [ %1436, %1433 ], [ %1447, %1474 ]
  %1482 = phi i32 [ 1, %1433 ], [ %1478, %1474 ]
  br label %1483

1483:                                             ; preds = %1480, %1483
  %1484 = phi i64 [ %1489, %1483 ], [ %1481, %1480 ]
  %1485 = phi i32 [ %1488, %1483 ], [ %1482, %1480 ]
  %1486 = getelementptr inbounds i32, ptr %11, i64 %1484
  %1487 = load i32, ptr %1486, align 4, !tbaa !6
  %1488 = mul nsw i32 %1487, %1485
  %1489 = add nsw i64 %1484, -1
  %1490 = trunc i64 %1484 to i32
  %1491 = icmp sgt i32 %1490, 0
  br i1 %1491, label %1483, label %1492, !llvm.loop !251

1492:                                             ; preds = %1483, %1474
  %1493 = phi i32 [ %1478, %1474 ], [ %1488, %1483 ]
  %1494 = and i64 %1443, 4294967295
  %1495 = getelementptr inbounds i32, ptr %6, i64 %1494
  %1496 = load i32, ptr %1495, align 4, !tbaa !6
  %1497 = mul nsw i32 %1496, %1493
  %1498 = add nsw i32 %1497, %1437
  %1499 = icmp sgt i64 %1435, 2
  %1500 = add nsw i64 %1436, -1
  %1501 = add i32 %1434, 1
  br i1 %1499, label %1433, label %1502, !llvm.loop !252

1502:                                             ; preds = %1492, %1430
  %1503 = phi i32 [ %1432, %1430 ], [ %1498, %1492 ]
  %1504 = icmp slt i32 %1503, %5
  br i1 %1504, label %1507, label %1505

1505:                                             ; preds = %1502
  %1506 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 302, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5554

1507:                                             ; preds = %1502
  %1508 = sext i32 %1503 to i64
  %1509 = getelementptr inbounds i32, ptr %1252, i64 %1508
  %1510 = load i32, ptr %1509, align 4, !tbaa !6
  %1511 = load i8, ptr %1254, align 1, !tbaa !12
  %1512 = sext i8 %1511 to i32
  %1513 = shl i32 %1510, 24
  %1514 = ashr exact i32 %1513, 24
  %1515 = icmp sgt i32 %1514, %1512
  br i1 %1515, label %1516, label %1518

1516:                                             ; preds = %1507
  %1517 = trunc i32 %1510 to i8
  store i8 %1517, ptr %1254, align 1, !tbaa !12
  br label %1518

1518:                                             ; preds = %1507, %1516
  %1519 = add nuw nsw i32 %1431, 1
  br i1 %1274, label %1520, label %1570

1520:                                             ; preds = %1518
  %1521 = load i32, ptr %4, align 4, !tbaa !6
  %1522 = load i32, ptr %12, align 4, !tbaa !6
  %1523 = add nsw i32 %1522, -1
  %1524 = icmp slt i32 %1521, %1523
  br i1 %1524, label %1547, label %1525

1525:                                             ; preds = %1520
  %1526 = icmp eq i32 %1521, %1523
  br i1 %1526, label %1527, label %1563

1527:                                             ; preds = %1525
  store i32 0, ptr %4, align 4, !tbaa !6
  %1528 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1528, ptr %6, align 4, !tbaa !6
  br i1 %1279, label %1570, label %1529

1529:                                             ; preds = %1527, %1557
  %1530 = phi i64 [ %1561, %1557 ], [ 1, %1527 ]
  %1531 = getelementptr inbounds i32, ptr %4, i64 %1530
  %1532 = load i32, ptr %1531, align 4, !tbaa !6
  %1533 = getelementptr inbounds i32, ptr %12, i64 %1530
  %1534 = load i32, ptr %1533, align 4, !tbaa !6
  %1535 = add nsw i32 %1534, -1
  %1536 = icmp slt i32 %1532, %1535
  br i1 %1536, label %1537, label %1555

1537:                                             ; preds = %1529
  br i1 %1524, label %1547, label %1538

1538:                                             ; preds = %1537
  %1539 = shl i64 %1530, 32
  %1540 = add i64 %1539, -4294967296
  %1541 = ashr exact i64 %1540, 32
  %1542 = getelementptr inbounds i32, ptr %7, i64 %1541
  %1543 = load i32, ptr %1542, align 4, !tbaa !6
  %1544 = getelementptr inbounds i32, ptr %6, i64 %1530
  %1545 = load i32, ptr %1544, align 4, !tbaa !6
  %1546 = add nsw i32 %1545, %1543
  store i32 %1546, ptr %1544, align 4, !tbaa !6
  br label %1565

1547:                                             ; preds = %1520, %1537
  %1548 = phi i32 [ %1532, %1537 ], [ %1521, %1520 ]
  %1549 = phi ptr [ %1531, %1537 ], [ %4, %1520 ]
  %1550 = phi i64 [ %1530, %1537 ], [ 0, %1520 ]
  %1551 = add nsw i32 %1548, 1
  store i32 %1551, ptr %1549, align 4, !tbaa !6
  %1552 = getelementptr inbounds i32, ptr %7, i64 %1550
  %1553 = load i32, ptr %1552, align 4, !tbaa !6
  %1554 = getelementptr inbounds i32, ptr %6, i64 %1550
  br label %1565

1555:                                             ; preds = %1529
  %1556 = icmp eq i32 %1532, %1535
  br i1 %1556, label %1557, label %1563

1557:                                             ; preds = %1555
  store i32 0, ptr %1531, align 4, !tbaa !6
  %1558 = getelementptr inbounds i32, ptr %8, i64 %1530
  %1559 = load i32, ptr %1558, align 4, !tbaa !6
  %1560 = getelementptr inbounds i32, ptr %6, i64 %1530
  store i32 %1559, ptr %1560, align 4, !tbaa !6
  %1561 = add nuw nsw i64 %1530, 1
  %1562 = icmp eq i64 %1561, %1277
  br i1 %1562, label %1570, label %1529, !llvm.loop !253

1563:                                             ; preds = %1525, %1555
  %1564 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 302, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5554

1565:                                             ; preds = %1538, %1547
  %1566 = phi ptr [ %1554, %1547 ], [ %1531, %1538 ]
  %1567 = phi i32 [ %1553, %1547 ], [ 1, %1538 ]
  %1568 = load i32, ptr %1566, align 4, !tbaa !6
  %1569 = add nsw i32 %1568, %1567
  store i32 %1569, ptr %1566, align 4, !tbaa !6
  br label %1570

1570:                                             ; preds = %1557, %1565, %1527, %1518
  %1571 = icmp eq i32 %1519, %5
  br i1 %1571, label %5549, label %1430, !llvm.loop !254

1572:                                             ; preds = %1265
  %1573 = getelementptr inbounds i32, ptr %3, i64 %19
  %1574 = load i32, ptr %1573, align 4, !tbaa !6
  %1575 = icmp eq i32 %1574, 0
  %1576 = icmp sgt i32 %5, 0
  br i1 %1575, label %1586, label %1577

1577:                                             ; preds = %1572
  br i1 %1576, label %1578, label %5549

1578:                                             ; preds = %1577
  %1579 = icmp sgt i32 %13, 1
  %1580 = icmp sgt i32 %13, 0
  %1581 = add i32 %13, -2
  %1582 = zext i32 %1581 to i64
  %1583 = zext i32 %13 to i64
  %1584 = add nuw i32 %5, 1
  %1585 = icmp eq i32 %13, 1
  br label %1732

1586:                                             ; preds = %1572
  br i1 %1576, label %1587, label %5549

1587:                                             ; preds = %1586
  %1588 = icmp sgt i32 %13, 1
  %1589 = icmp sgt i32 %13, 0
  %1590 = add i32 %13, -2
  %1591 = zext i32 %1590 to i64
  %1592 = zext i32 %13 to i64
  %1593 = add nuw i32 %5, 1
  %1594 = icmp eq i32 %13, 1
  br label %1595

1595:                                             ; preds = %1587, %1730
  %1596 = phi i32 [ 0, %1587 ], [ %1682, %1730 ]
  %1597 = phi double [ 0.000000e+00, %1587 ], [ %1681, %1730 ]
  %1598 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1588, label %1599, label %1668

1599:                                             ; preds = %1595, %1658
  %1600 = phi i32 [ %1667, %1658 ], [ 0, %1595 ]
  %1601 = phi i64 [ %1609, %1658 ], [ %1592, %1595 ]
  %1602 = phi i64 [ %1666, %1658 ], [ %1591, %1595 ]
  %1603 = phi i32 [ %1664, %1658 ], [ %1598, %1595 ]
  %1604 = sub i32 %1590, %1600
  %1605 = tail call i32 @llvm.smin.i32(i32 %1604, i32 0)
  %1606 = sub i32 %1604, %1605
  %1607 = zext i32 %1606 to i64
  %1608 = add nuw nsw i64 %1607, 1
  %1609 = add nsw i64 %1601, -1
  %1610 = icmp ult i32 %1606, 31
  br i1 %1610, label %1646, label %1611

1611:                                             ; preds = %1599
  %1612 = and i64 %1608, 8589934560
  %1613 = sub i64 %1602, %1612
  br label %1614

1614:                                             ; preds = %1614, %1611
  %1615 = phi i64 [ 0, %1611 ], [ %1638, %1614 ]
  %1616 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1611 ], [ %1634, %1614 ]
  %1617 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1611 ], [ %1635, %1614 ]
  %1618 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1611 ], [ %1636, %1614 ]
  %1619 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1611 ], [ %1637, %1614 ]
  %1620 = sub i64 %1602, %1615
  %1621 = getelementptr inbounds i32, ptr %9, i64 %1620
  %1622 = getelementptr inbounds i32, ptr %1621, i64 -7
  %1623 = load <8 x i32>, ptr %1622, align 4, !tbaa !6
  %1624 = shufflevector <8 x i32> %1623, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1625 = getelementptr inbounds i32, ptr %1621, i64 -15
  %1626 = load <8 x i32>, ptr %1625, align 4, !tbaa !6
  %1627 = shufflevector <8 x i32> %1626, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1628 = getelementptr inbounds i32, ptr %1621, i64 -23
  %1629 = load <8 x i32>, ptr %1628, align 4, !tbaa !6
  %1630 = shufflevector <8 x i32> %1629, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1631 = getelementptr inbounds i32, ptr %1621, i64 -31
  %1632 = load <8 x i32>, ptr %1631, align 4, !tbaa !6
  %1633 = shufflevector <8 x i32> %1632, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1634 = mul <8 x i32> %1624, %1616
  %1635 = mul <8 x i32> %1627, %1617
  %1636 = mul <8 x i32> %1630, %1618
  %1637 = mul <8 x i32> %1633, %1619
  %1638 = add nuw i64 %1615, 32
  %1639 = icmp eq i64 %1638, %1612
  br i1 %1639, label %1640, label %1614, !llvm.loop !255

1640:                                             ; preds = %1614
  %1641 = mul <8 x i32> %1635, %1634
  %1642 = mul <8 x i32> %1636, %1641
  %1643 = mul <8 x i32> %1637, %1642
  %1644 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1643)
  %1645 = icmp eq i64 %1608, %1612
  br i1 %1645, label %1658, label %1646

1646:                                             ; preds = %1599, %1640
  %1647 = phi i64 [ %1602, %1599 ], [ %1613, %1640 ]
  %1648 = phi i32 [ 1, %1599 ], [ %1644, %1640 ]
  br label %1649

1649:                                             ; preds = %1646, %1649
  %1650 = phi i64 [ %1655, %1649 ], [ %1647, %1646 ]
  %1651 = phi i32 [ %1654, %1649 ], [ %1648, %1646 ]
  %1652 = getelementptr inbounds i32, ptr %9, i64 %1650
  %1653 = load i32, ptr %1652, align 4, !tbaa !6
  %1654 = mul nsw i32 %1653, %1651
  %1655 = add nsw i64 %1650, -1
  %1656 = trunc i64 %1650 to i32
  %1657 = icmp sgt i32 %1656, 0
  br i1 %1657, label %1649, label %1658, !llvm.loop !256

1658:                                             ; preds = %1649, %1640
  %1659 = phi i32 [ %1644, %1640 ], [ %1654, %1649 ]
  %1660 = and i64 %1609, 4294967295
  %1661 = getelementptr inbounds i32, ptr %6, i64 %1660
  %1662 = load i32, ptr %1661, align 4, !tbaa !6
  %1663 = mul nsw i32 %1662, %1659
  %1664 = add nsw i32 %1663, %1603
  %1665 = icmp sgt i64 %1601, 2
  %1666 = add nsw i64 %1602, -1
  %1667 = add i32 %1600, 1
  br i1 %1665, label %1599, label %1668, !llvm.loop !257

1668:                                             ; preds = %1658, %1595
  %1669 = phi i32 [ %1598, %1595 ], [ %1664, %1658 ]
  %1670 = sext i32 %1669 to i64
  %1671 = getelementptr inbounds i32, ptr %1252, i64 %1670
  %1672 = load i32, ptr %1671, align 4, !tbaa !6
  %1673 = load i8, ptr %1254, align 1, !tbaa !12
  %1674 = sext i8 %1673 to i32
  %1675 = shl i32 %1672, 24
  %1676 = ashr exact i32 %1675, 24
  %1677 = icmp sgt i32 %1676, %1674
  br i1 %1677, label %1678, label %1680

1678:                                             ; preds = %1668
  %1679 = trunc i32 %1672 to i8
  store i8 %1679, ptr %1254, align 1, !tbaa !12
  br label %1680

1680:                                             ; preds = %1678, %1668
  %1681 = fadd fast double %1597, 1.000000e+00
  %1682 = add nuw nsw i32 %1596, 1
  br i1 %1589, label %1683, label %1730

1683:                                             ; preds = %1680
  %1684 = load i32, ptr %4, align 4, !tbaa !6
  %1685 = load i32, ptr %12, align 4, !tbaa !6
  %1686 = add nsw i32 %1685, -1
  %1687 = icmp slt i32 %1684, %1686
  br i1 %1687, label %1707, label %1688

1688:                                             ; preds = %1683
  %1689 = icmp eq i32 %1684, %1686
  br i1 %1689, label %1690, label %1723

1690:                                             ; preds = %1688
  store i32 0, ptr %4, align 4, !tbaa !6
  %1691 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1691, ptr %6, align 4, !tbaa !6
  br i1 %1594, label %1730, label %1692

1692:                                             ; preds = %1690, %1717
  %1693 = phi i64 [ %1721, %1717 ], [ 1, %1690 ]
  %1694 = getelementptr inbounds i32, ptr %4, i64 %1693
  %1695 = load i32, ptr %1694, align 4, !tbaa !6
  %1696 = getelementptr inbounds i32, ptr %12, i64 %1693
  %1697 = load i32, ptr %1696, align 4, !tbaa !6
  %1698 = add nsw i32 %1697, -1
  %1699 = icmp slt i32 %1695, %1698
  br i1 %1699, label %1700, label %1715

1700:                                             ; preds = %1692
  br i1 %1687, label %1707, label %1701

1701:                                             ; preds = %1700
  %1702 = getelementptr inbounds i32, ptr %7, i64 %1693
  %1703 = load i32, ptr %1702, align 4, !tbaa !6
  %1704 = getelementptr inbounds i32, ptr %6, i64 %1693
  %1705 = load i32, ptr %1704, align 4, !tbaa !6
  %1706 = add nsw i32 %1705, %1703
  store i32 %1706, ptr %1704, align 4, !tbaa !6
  br label %1725

1707:                                             ; preds = %1683, %1700
  %1708 = phi i32 [ %1695, %1700 ], [ %1684, %1683 ]
  %1709 = phi ptr [ %1694, %1700 ], [ %4, %1683 ]
  %1710 = phi i64 [ %1693, %1700 ], [ 0, %1683 ]
  %1711 = add nsw i32 %1708, 1
  store i32 %1711, ptr %1709, align 4, !tbaa !6
  %1712 = getelementptr inbounds i32, ptr %7, i64 %1710
  %1713 = load i32, ptr %1712, align 4, !tbaa !6
  %1714 = getelementptr inbounds i32, ptr %6, i64 %1710
  br label %1725

1715:                                             ; preds = %1692
  %1716 = icmp eq i32 %1695, %1698
  br i1 %1716, label %1717, label %1723

1717:                                             ; preds = %1715
  store i32 0, ptr %1694, align 4, !tbaa !6
  %1718 = getelementptr inbounds i32, ptr %8, i64 %1693
  %1719 = load i32, ptr %1718, align 4, !tbaa !6
  %1720 = getelementptr inbounds i32, ptr %6, i64 %1693
  store i32 %1719, ptr %1720, align 4, !tbaa !6
  %1721 = add nuw nsw i64 %1693, 1
  %1722 = icmp eq i64 %1721, %1592
  br i1 %1722, label %1730, label %1692, !llvm.loop !258

1723:                                             ; preds = %1688, %1715
  %1724 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 302, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5554

1725:                                             ; preds = %1701, %1707
  %1726 = phi ptr [ %1714, %1707 ], [ %1694, %1701 ]
  %1727 = phi i32 [ %1713, %1707 ], [ 1, %1701 ]
  %1728 = load i32, ptr %1726, align 4, !tbaa !6
  %1729 = add nsw i32 %1728, %1727
  store i32 %1729, ptr %1726, align 4, !tbaa !6
  br label %1730

1730:                                             ; preds = %1717, %1725, %1690, %1680
  %1731 = icmp eq i32 %1682, %5
  br i1 %1731, label %5549, label %1595, !llvm.loop !259

1732:                                             ; preds = %1578, %1872
  %1733 = phi i32 [ 0, %1578 ], [ %1821, %1872 ]
  %1734 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1579, label %1735, label %1804

1735:                                             ; preds = %1732, %1794
  %1736 = phi i32 [ %1803, %1794 ], [ 0, %1732 ]
  %1737 = phi i64 [ %1745, %1794 ], [ %1583, %1732 ]
  %1738 = phi i64 [ %1802, %1794 ], [ %1582, %1732 ]
  %1739 = phi i32 [ %1800, %1794 ], [ %1734, %1732 ]
  %1740 = sub i32 %1581, %1736
  %1741 = tail call i32 @llvm.smin.i32(i32 %1740, i32 0)
  %1742 = sub i32 %1740, %1741
  %1743 = zext i32 %1742 to i64
  %1744 = add nuw nsw i64 %1743, 1
  %1745 = add nsw i64 %1737, -1
  %1746 = icmp ult i32 %1742, 31
  br i1 %1746, label %1782, label %1747

1747:                                             ; preds = %1735
  %1748 = and i64 %1744, 8589934560
  %1749 = sub i64 %1738, %1748
  br label %1750

1750:                                             ; preds = %1750, %1747
  %1751 = phi i64 [ 0, %1747 ], [ %1774, %1750 ]
  %1752 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1747 ], [ %1770, %1750 ]
  %1753 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1747 ], [ %1771, %1750 ]
  %1754 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1747 ], [ %1772, %1750 ]
  %1755 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1747 ], [ %1773, %1750 ]
  %1756 = sub i64 %1738, %1751
  %1757 = getelementptr inbounds i32, ptr %11, i64 %1756
  %1758 = getelementptr inbounds i32, ptr %1757, i64 -7
  %1759 = load <8 x i32>, ptr %1758, align 4, !tbaa !6
  %1760 = shufflevector <8 x i32> %1759, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1761 = getelementptr inbounds i32, ptr %1757, i64 -15
  %1762 = load <8 x i32>, ptr %1761, align 4, !tbaa !6
  %1763 = shufflevector <8 x i32> %1762, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1764 = getelementptr inbounds i32, ptr %1757, i64 -23
  %1765 = load <8 x i32>, ptr %1764, align 4, !tbaa !6
  %1766 = shufflevector <8 x i32> %1765, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1767 = getelementptr inbounds i32, ptr %1757, i64 -31
  %1768 = load <8 x i32>, ptr %1767, align 4, !tbaa !6
  %1769 = shufflevector <8 x i32> %1768, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1770 = mul <8 x i32> %1760, %1752
  %1771 = mul <8 x i32> %1763, %1753
  %1772 = mul <8 x i32> %1766, %1754
  %1773 = mul <8 x i32> %1769, %1755
  %1774 = add nuw i64 %1751, 32
  %1775 = icmp eq i64 %1774, %1748
  br i1 %1775, label %1776, label %1750, !llvm.loop !260

1776:                                             ; preds = %1750
  %1777 = mul <8 x i32> %1771, %1770
  %1778 = mul <8 x i32> %1772, %1777
  %1779 = mul <8 x i32> %1773, %1778
  %1780 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1779)
  %1781 = icmp eq i64 %1744, %1748
  br i1 %1781, label %1794, label %1782

1782:                                             ; preds = %1735, %1776
  %1783 = phi i64 [ %1738, %1735 ], [ %1749, %1776 ]
  %1784 = phi i32 [ 1, %1735 ], [ %1780, %1776 ]
  br label %1785

1785:                                             ; preds = %1782, %1785
  %1786 = phi i64 [ %1791, %1785 ], [ %1783, %1782 ]
  %1787 = phi i32 [ %1790, %1785 ], [ %1784, %1782 ]
  %1788 = getelementptr inbounds i32, ptr %11, i64 %1786
  %1789 = load i32, ptr %1788, align 4, !tbaa !6
  %1790 = mul nsw i32 %1789, %1787
  %1791 = add nsw i64 %1786, -1
  %1792 = trunc i64 %1786 to i32
  %1793 = icmp sgt i32 %1792, 0
  br i1 %1793, label %1785, label %1794, !llvm.loop !261

1794:                                             ; preds = %1785, %1776
  %1795 = phi i32 [ %1780, %1776 ], [ %1790, %1785 ]
  %1796 = and i64 %1745, 4294967295
  %1797 = getelementptr inbounds i32, ptr %6, i64 %1796
  %1798 = load i32, ptr %1797, align 4, !tbaa !6
  %1799 = mul nsw i32 %1798, %1795
  %1800 = add nsw i32 %1799, %1739
  %1801 = icmp sgt i64 %1737, 2
  %1802 = add nsw i64 %1738, -1
  %1803 = add i32 %1736, 1
  br i1 %1801, label %1735, label %1804, !llvm.loop !262

1804:                                             ; preds = %1794, %1732
  %1805 = phi i32 [ %1734, %1732 ], [ %1800, %1794 ]
  %1806 = icmp slt i32 %1805, %5
  br i1 %1806, label %1809, label %1807

1807:                                             ; preds = %1804
  %1808 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 302, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5554

1809:                                             ; preds = %1804
  %1810 = sext i32 %1805 to i64
  %1811 = getelementptr inbounds i32, ptr %1252, i64 %1810
  %1812 = load i32, ptr %1811, align 4, !tbaa !6
  %1813 = load i8, ptr %1254, align 1, !tbaa !12
  %1814 = sext i8 %1813 to i32
  %1815 = shl i32 %1812, 24
  %1816 = ashr exact i32 %1815, 24
  %1817 = icmp sgt i32 %1816, %1814
  br i1 %1817, label %1818, label %1820

1818:                                             ; preds = %1809
  %1819 = trunc i32 %1812 to i8
  store i8 %1819, ptr %1254, align 1, !tbaa !12
  br label %1820

1820:                                             ; preds = %1818, %1809
  %1821 = add nuw nsw i32 %1733, 1
  br i1 %1580, label %1822, label %1872

1822:                                             ; preds = %1820
  %1823 = load i32, ptr %4, align 4, !tbaa !6
  %1824 = load i32, ptr %12, align 4, !tbaa !6
  %1825 = add nsw i32 %1824, -1
  %1826 = icmp slt i32 %1823, %1825
  br i1 %1826, label %1849, label %1827

1827:                                             ; preds = %1822
  %1828 = icmp eq i32 %1823, %1825
  br i1 %1828, label %1829, label %1865

1829:                                             ; preds = %1827
  store i32 0, ptr %4, align 4, !tbaa !6
  %1830 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1830, ptr %6, align 4, !tbaa !6
  br i1 %1585, label %1872, label %1831

1831:                                             ; preds = %1829, %1859
  %1832 = phi i64 [ %1863, %1859 ], [ 1, %1829 ]
  %1833 = getelementptr inbounds i32, ptr %4, i64 %1832
  %1834 = load i32, ptr %1833, align 4, !tbaa !6
  %1835 = getelementptr inbounds i32, ptr %12, i64 %1832
  %1836 = load i32, ptr %1835, align 4, !tbaa !6
  %1837 = add nsw i32 %1836, -1
  %1838 = icmp slt i32 %1834, %1837
  br i1 %1838, label %1839, label %1857

1839:                                             ; preds = %1831
  br i1 %1826, label %1849, label %1840

1840:                                             ; preds = %1839
  %1841 = shl i64 %1832, 32
  %1842 = add i64 %1841, -4294967296
  %1843 = ashr exact i64 %1842, 32
  %1844 = getelementptr inbounds i32, ptr %7, i64 %1843
  %1845 = load i32, ptr %1844, align 4, !tbaa !6
  %1846 = getelementptr inbounds i32, ptr %6, i64 %1832
  %1847 = load i32, ptr %1846, align 4, !tbaa !6
  %1848 = add nsw i32 %1847, %1845
  store i32 %1848, ptr %1846, align 4, !tbaa !6
  br label %1867

1849:                                             ; preds = %1822, %1839
  %1850 = phi i32 [ %1834, %1839 ], [ %1823, %1822 ]
  %1851 = phi ptr [ %1833, %1839 ], [ %4, %1822 ]
  %1852 = phi i64 [ %1832, %1839 ], [ 0, %1822 ]
  %1853 = add nsw i32 %1850, 1
  store i32 %1853, ptr %1851, align 4, !tbaa !6
  %1854 = getelementptr inbounds i32, ptr %7, i64 %1852
  %1855 = load i32, ptr %1854, align 4, !tbaa !6
  %1856 = getelementptr inbounds i32, ptr %6, i64 %1852
  br label %1867

1857:                                             ; preds = %1831
  %1858 = icmp eq i32 %1834, %1837
  br i1 %1858, label %1859, label %1865

1859:                                             ; preds = %1857
  store i32 0, ptr %1833, align 4, !tbaa !6
  %1860 = getelementptr inbounds i32, ptr %8, i64 %1832
  %1861 = load i32, ptr %1860, align 4, !tbaa !6
  %1862 = getelementptr inbounds i32, ptr %6, i64 %1832
  store i32 %1861, ptr %1862, align 4, !tbaa !6
  %1863 = add nuw nsw i64 %1832, 1
  %1864 = icmp eq i64 %1863, %1583
  br i1 %1864, label %1872, label %1831, !llvm.loop !263

1865:                                             ; preds = %1827, %1857
  %1866 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 302, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5554

1867:                                             ; preds = %1840, %1849
  %1868 = phi ptr [ %1856, %1849 ], [ %1833, %1840 ]
  %1869 = phi i32 [ %1855, %1849 ], [ 1, %1840 ]
  %1870 = load i32, ptr %1868, align 4, !tbaa !6
  %1871 = add nsw i32 %1870, %1869
  store i32 %1871, ptr %1868, align 4, !tbaa !6
  br label %1872

1872:                                             ; preds = %1859, %1867, %1829, %1820
  %1873 = icmp eq i32 %1821, %5
  br i1 %1873, label %5549, label %1732, !llvm.loop !264

1874:                                             ; preds = %1265
  %1875 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 302, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5549

1876:                                             ; preds = %18
  %1877 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1878 = load ptr, ptr %1877, align 8, !tbaa !10
  %1879 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1880 = load ptr, ptr %1879, align 8, !tbaa !10
  %1881 = load i32, ptr %1878, align 4, !tbaa !6
  %1882 = trunc i32 %1881 to i16
  store i16 %1882, ptr %1880, align 2, !tbaa !79
  %1883 = icmp eq i32 %13, 0
  br i1 %1883, label %5549, label %1884

1884:                                             ; preds = %1876
  switch i32 %1, label %2497 [
    i32 1, label %1885
    i32 0, label %2193
  ]

1885:                                             ; preds = %1884
  %1886 = getelementptr inbounds i32, ptr %3, i64 %19
  %1887 = load i32, ptr %1886, align 4, !tbaa !6
  %1888 = icmp eq i32 %1887, 0
  %1889 = icmp sgt i32 %5, 0
  br i1 %1888, label %1899, label %1890

1890:                                             ; preds = %1885
  br i1 %1889, label %1891, label %5549

1891:                                             ; preds = %1890
  %1892 = icmp sgt i32 %13, 1
  %1893 = icmp sgt i32 %13, 0
  %1894 = add i32 %13, -2
  %1895 = zext i32 %1894 to i64
  %1896 = zext i32 %13 to i64
  %1897 = add nuw i32 %5, 1
  %1898 = icmp eq i32 %13, 1
  br label %2050

1899:                                             ; preds = %1885
  br i1 %1889, label %1900, label %5549

1900:                                             ; preds = %1899
  %1901 = icmp sgt i32 %13, 1
  %1902 = icmp sgt i32 %13, 0
  %1903 = add i32 %13, -2
  %1904 = zext i32 %1903 to i64
  %1905 = zext i32 %13 to i64
  %1906 = add nuw i32 %5, 1
  %1907 = icmp eq i32 %13, 1
  br label %1908

1908:                                             ; preds = %1900, %2048
  %1909 = phi i16 [ %1882, %1900 ], [ %1998, %2048 ]
  %1910 = phi i32 [ 0, %1900 ], [ %2000, %2048 ]
  %1911 = phi double [ 0.000000e+00, %1900 ], [ %1999, %2048 ]
  %1912 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1901, label %1913, label %1982

1913:                                             ; preds = %1908, %1972
  %1914 = phi i32 [ %1981, %1972 ], [ 0, %1908 ]
  %1915 = phi i64 [ %1923, %1972 ], [ %1905, %1908 ]
  %1916 = phi i64 [ %1980, %1972 ], [ %1904, %1908 ]
  %1917 = phi i32 [ %1978, %1972 ], [ %1912, %1908 ]
  %1918 = sub i32 %1903, %1914
  %1919 = tail call i32 @llvm.smin.i32(i32 %1918, i32 0)
  %1920 = sub i32 %1918, %1919
  %1921 = zext i32 %1920 to i64
  %1922 = add nuw nsw i64 %1921, 1
  %1923 = add nsw i64 %1915, -1
  %1924 = icmp ult i32 %1920, 31
  br i1 %1924, label %1960, label %1925

1925:                                             ; preds = %1913
  %1926 = and i64 %1922, 8589934560
  %1927 = sub i64 %1916, %1926
  br label %1928

1928:                                             ; preds = %1928, %1925
  %1929 = phi i64 [ 0, %1925 ], [ %1952, %1928 ]
  %1930 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1925 ], [ %1948, %1928 ]
  %1931 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1925 ], [ %1949, %1928 ]
  %1932 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1925 ], [ %1950, %1928 ]
  %1933 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1925 ], [ %1951, %1928 ]
  %1934 = sub i64 %1916, %1929
  %1935 = getelementptr inbounds i32, ptr %9, i64 %1934
  %1936 = getelementptr inbounds i32, ptr %1935, i64 -7
  %1937 = load <8 x i32>, ptr %1936, align 4, !tbaa !6
  %1938 = shufflevector <8 x i32> %1937, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1939 = getelementptr inbounds i32, ptr %1935, i64 -15
  %1940 = load <8 x i32>, ptr %1939, align 4, !tbaa !6
  %1941 = shufflevector <8 x i32> %1940, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1942 = getelementptr inbounds i32, ptr %1935, i64 -23
  %1943 = load <8 x i32>, ptr %1942, align 4, !tbaa !6
  %1944 = shufflevector <8 x i32> %1943, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1945 = getelementptr inbounds i32, ptr %1935, i64 -31
  %1946 = load <8 x i32>, ptr %1945, align 4, !tbaa !6
  %1947 = shufflevector <8 x i32> %1946, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1948 = mul <8 x i32> %1938, %1930
  %1949 = mul <8 x i32> %1941, %1931
  %1950 = mul <8 x i32> %1944, %1932
  %1951 = mul <8 x i32> %1947, %1933
  %1952 = add nuw i64 %1929, 32
  %1953 = icmp eq i64 %1952, %1926
  br i1 %1953, label %1954, label %1928, !llvm.loop !265

1954:                                             ; preds = %1928
  %1955 = mul <8 x i32> %1949, %1948
  %1956 = mul <8 x i32> %1950, %1955
  %1957 = mul <8 x i32> %1951, %1956
  %1958 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1957)
  %1959 = icmp eq i64 %1922, %1926
  br i1 %1959, label %1972, label %1960

1960:                                             ; preds = %1913, %1954
  %1961 = phi i64 [ %1916, %1913 ], [ %1927, %1954 ]
  %1962 = phi i32 [ 1, %1913 ], [ %1958, %1954 ]
  br label %1963

1963:                                             ; preds = %1960, %1963
  %1964 = phi i64 [ %1969, %1963 ], [ %1961, %1960 ]
  %1965 = phi i32 [ %1968, %1963 ], [ %1962, %1960 ]
  %1966 = getelementptr inbounds i32, ptr %9, i64 %1964
  %1967 = load i32, ptr %1966, align 4, !tbaa !6
  %1968 = mul nsw i32 %1967, %1965
  %1969 = add nsw i64 %1964, -1
  %1970 = trunc i64 %1964 to i32
  %1971 = icmp sgt i32 %1970, 0
  br i1 %1971, label %1963, label %1972, !llvm.loop !266

1972:                                             ; preds = %1963, %1954
  %1973 = phi i32 [ %1958, %1954 ], [ %1968, %1963 ]
  %1974 = and i64 %1923, 4294967295
  %1975 = getelementptr inbounds i32, ptr %6, i64 %1974
  %1976 = load i32, ptr %1975, align 4, !tbaa !6
  %1977 = mul nsw i32 %1976, %1973
  %1978 = add nsw i32 %1977, %1917
  %1979 = icmp sgt i64 %1915, 2
  %1980 = add nsw i64 %1916, -1
  %1981 = add i32 %1914, 1
  br i1 %1979, label %1913, label %1982, !llvm.loop !267

1982:                                             ; preds = %1972, %1908
  %1983 = phi i32 [ %1912, %1908 ], [ %1978, %1972 ]
  %1984 = sext i32 %1983 to i64
  %1985 = getelementptr inbounds double, ptr %2, i64 %1984
  %1986 = load double, ptr %1985, align 8, !tbaa !19
  %1987 = getelementptr inbounds i32, ptr %1878, i64 %1984
  %1988 = load i32, ptr %1987, align 4, !tbaa !6
  %1989 = trunc i32 %1988 to i16
  %1990 = fcmp fast ueq double %1986, 0.000000e+00
  br i1 %1990, label %1997, label %1991

1991:                                             ; preds = %1982
  %1992 = sext i16 %1909 to i32
  %1993 = shl i32 %1988, 16
  %1994 = ashr exact i32 %1993, 16
  %1995 = icmp sgt i32 %1994, %1992
  br i1 %1995, label %1996, label %1997

1996:                                             ; preds = %1991
  store i16 %1989, ptr %1880, align 2, !tbaa !79
  br label %1997

1997:                                             ; preds = %1991, %1996, %1982
  %1998 = phi i16 [ %1909, %1991 ], [ %1989, %1996 ], [ %1909, %1982 ]
  %1999 = fadd fast double %1986, %1911
  %2000 = add nuw nsw i32 %1910, 1
  br i1 %1902, label %2001, label %2048

2001:                                             ; preds = %1997
  %2002 = load i32, ptr %4, align 4, !tbaa !6
  %2003 = load i32, ptr %12, align 4, !tbaa !6
  %2004 = add nsw i32 %2003, -1
  %2005 = icmp slt i32 %2002, %2004
  br i1 %2005, label %2025, label %2006

2006:                                             ; preds = %2001
  %2007 = icmp eq i32 %2002, %2004
  br i1 %2007, label %2008, label %2041

2008:                                             ; preds = %2006
  store i32 0, ptr %4, align 4, !tbaa !6
  %2009 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2009, ptr %6, align 4, !tbaa !6
  br i1 %1907, label %2048, label %2010

2010:                                             ; preds = %2008, %2035
  %2011 = phi i64 [ %2039, %2035 ], [ 1, %2008 ]
  %2012 = getelementptr inbounds i32, ptr %4, i64 %2011
  %2013 = load i32, ptr %2012, align 4, !tbaa !6
  %2014 = getelementptr inbounds i32, ptr %12, i64 %2011
  %2015 = load i32, ptr %2014, align 4, !tbaa !6
  %2016 = add nsw i32 %2015, -1
  %2017 = icmp slt i32 %2013, %2016
  br i1 %2017, label %2018, label %2033

2018:                                             ; preds = %2010
  br i1 %2005, label %2025, label %2019

2019:                                             ; preds = %2018
  %2020 = getelementptr inbounds i32, ptr %7, i64 %2011
  %2021 = load i32, ptr %2020, align 4, !tbaa !6
  %2022 = getelementptr inbounds i32, ptr %6, i64 %2011
  %2023 = load i32, ptr %2022, align 4, !tbaa !6
  %2024 = add nsw i32 %2023, %2021
  store i32 %2024, ptr %2022, align 4, !tbaa !6
  br label %2043

2025:                                             ; preds = %2001, %2018
  %2026 = phi i32 [ %2013, %2018 ], [ %2002, %2001 ]
  %2027 = phi ptr [ %2012, %2018 ], [ %4, %2001 ]
  %2028 = phi i64 [ %2011, %2018 ], [ 0, %2001 ]
  %2029 = add nsw i32 %2026, 1
  store i32 %2029, ptr %2027, align 4, !tbaa !6
  %2030 = getelementptr inbounds i32, ptr %7, i64 %2028
  %2031 = load i32, ptr %2030, align 4, !tbaa !6
  %2032 = getelementptr inbounds i32, ptr %6, i64 %2028
  br label %2043

2033:                                             ; preds = %2010
  %2034 = icmp eq i32 %2013, %2016
  br i1 %2034, label %2035, label %2041

2035:                                             ; preds = %2033
  store i32 0, ptr %2012, align 4, !tbaa !6
  %2036 = getelementptr inbounds i32, ptr %8, i64 %2011
  %2037 = load i32, ptr %2036, align 4, !tbaa !6
  %2038 = getelementptr inbounds i32, ptr %6, i64 %2011
  store i32 %2037, ptr %2038, align 4, !tbaa !6
  %2039 = add nuw nsw i64 %2011, 1
  %2040 = icmp eq i64 %2039, %1905
  br i1 %2040, label %2048, label %2010, !llvm.loop !268

2041:                                             ; preds = %2006, %2033
  %2042 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 307, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5554

2043:                                             ; preds = %2019, %2025
  %2044 = phi ptr [ %2032, %2025 ], [ %2012, %2019 ]
  %2045 = phi i32 [ %2031, %2025 ], [ 1, %2019 ]
  %2046 = load i32, ptr %2044, align 4, !tbaa !6
  %2047 = add nsw i32 %2046, %2045
  store i32 %2047, ptr %2044, align 4, !tbaa !6
  br label %2048

2048:                                             ; preds = %2035, %2043, %2008, %1997
  %2049 = icmp eq i32 %2000, %5
  br i1 %2049, label %5549, label %1908, !llvm.loop !269

2050:                                             ; preds = %1891, %2191
  %2051 = phi i16 [ %1882, %1891 ], [ %2139, %2191 ]
  %2052 = phi i32 [ 0, %1891 ], [ %2140, %2191 ]
  %2053 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1892, label %2054, label %2123

2054:                                             ; preds = %2050, %2113
  %2055 = phi i32 [ %2122, %2113 ], [ 0, %2050 ]
  %2056 = phi i64 [ %2064, %2113 ], [ %1896, %2050 ]
  %2057 = phi i64 [ %2121, %2113 ], [ %1895, %2050 ]
  %2058 = phi i32 [ %2119, %2113 ], [ %2053, %2050 ]
  %2059 = sub i32 %1894, %2055
  %2060 = tail call i32 @llvm.smin.i32(i32 %2059, i32 0)
  %2061 = sub i32 %2059, %2060
  %2062 = zext i32 %2061 to i64
  %2063 = add nuw nsw i64 %2062, 1
  %2064 = add nsw i64 %2056, -1
  %2065 = icmp ult i32 %2061, 31
  br i1 %2065, label %2101, label %2066

2066:                                             ; preds = %2054
  %2067 = and i64 %2063, 8589934560
  %2068 = sub i64 %2057, %2067
  br label %2069

2069:                                             ; preds = %2069, %2066
  %2070 = phi i64 [ 0, %2066 ], [ %2093, %2069 ]
  %2071 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2066 ], [ %2089, %2069 ]
  %2072 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2066 ], [ %2090, %2069 ]
  %2073 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2066 ], [ %2091, %2069 ]
  %2074 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2066 ], [ %2092, %2069 ]
  %2075 = sub i64 %2057, %2070
  %2076 = getelementptr inbounds i32, ptr %11, i64 %2075
  %2077 = getelementptr inbounds i32, ptr %2076, i64 -7
  %2078 = load <8 x i32>, ptr %2077, align 4, !tbaa !6
  %2079 = shufflevector <8 x i32> %2078, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2080 = getelementptr inbounds i32, ptr %2076, i64 -15
  %2081 = load <8 x i32>, ptr %2080, align 4, !tbaa !6
  %2082 = shufflevector <8 x i32> %2081, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2083 = getelementptr inbounds i32, ptr %2076, i64 -23
  %2084 = load <8 x i32>, ptr %2083, align 4, !tbaa !6
  %2085 = shufflevector <8 x i32> %2084, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2086 = getelementptr inbounds i32, ptr %2076, i64 -31
  %2087 = load <8 x i32>, ptr %2086, align 4, !tbaa !6
  %2088 = shufflevector <8 x i32> %2087, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2089 = mul <8 x i32> %2079, %2071
  %2090 = mul <8 x i32> %2082, %2072
  %2091 = mul <8 x i32> %2085, %2073
  %2092 = mul <8 x i32> %2088, %2074
  %2093 = add nuw i64 %2070, 32
  %2094 = icmp eq i64 %2093, %2067
  br i1 %2094, label %2095, label %2069, !llvm.loop !270

2095:                                             ; preds = %2069
  %2096 = mul <8 x i32> %2090, %2089
  %2097 = mul <8 x i32> %2091, %2096
  %2098 = mul <8 x i32> %2092, %2097
  %2099 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2098)
  %2100 = icmp eq i64 %2063, %2067
  br i1 %2100, label %2113, label %2101

2101:                                             ; preds = %2054, %2095
  %2102 = phi i64 [ %2057, %2054 ], [ %2068, %2095 ]
  %2103 = phi i32 [ 1, %2054 ], [ %2099, %2095 ]
  br label %2104

2104:                                             ; preds = %2101, %2104
  %2105 = phi i64 [ %2110, %2104 ], [ %2102, %2101 ]
  %2106 = phi i32 [ %2109, %2104 ], [ %2103, %2101 ]
  %2107 = getelementptr inbounds i32, ptr %11, i64 %2105
  %2108 = load i32, ptr %2107, align 4, !tbaa !6
  %2109 = mul nsw i32 %2108, %2106
  %2110 = add nsw i64 %2105, -1
  %2111 = trunc i64 %2105 to i32
  %2112 = icmp sgt i32 %2111, 0
  br i1 %2112, label %2104, label %2113, !llvm.loop !271

2113:                                             ; preds = %2104, %2095
  %2114 = phi i32 [ %2099, %2095 ], [ %2109, %2104 ]
  %2115 = and i64 %2064, 4294967295
  %2116 = getelementptr inbounds i32, ptr %6, i64 %2115
  %2117 = load i32, ptr %2116, align 4, !tbaa !6
  %2118 = mul nsw i32 %2117, %2114
  %2119 = add nsw i32 %2118, %2058
  %2120 = icmp sgt i64 %2056, 2
  %2121 = add nsw i64 %2057, -1
  %2122 = add i32 %2055, 1
  br i1 %2120, label %2054, label %2123, !llvm.loop !272

2123:                                             ; preds = %2113, %2050
  %2124 = phi i32 [ %2053, %2050 ], [ %2119, %2113 ]
  %2125 = icmp slt i32 %2124, %5
  br i1 %2125, label %2128, label %2126

2126:                                             ; preds = %2123
  %2127 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 307, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5554

2128:                                             ; preds = %2123
  %2129 = sext i32 %2124 to i64
  %2130 = getelementptr inbounds i32, ptr %1878, i64 %2129
  %2131 = load i32, ptr %2130, align 4, !tbaa !6
  %2132 = sext i16 %2051 to i32
  %2133 = shl i32 %2131, 16
  %2134 = ashr exact i32 %2133, 16
  %2135 = icmp sgt i32 %2134, %2132
  br i1 %2135, label %2136, label %2138

2136:                                             ; preds = %2128
  %2137 = trunc i32 %2131 to i16
  store i16 %2137, ptr %1880, align 2, !tbaa !79
  br label %2138

2138:                                             ; preds = %2128, %2136
  %2139 = phi i16 [ %2051, %2128 ], [ %2137, %2136 ]
  %2140 = add nuw nsw i32 %2052, 1
  br i1 %1893, label %2141, label %2191

2141:                                             ; preds = %2138
  %2142 = load i32, ptr %4, align 4, !tbaa !6
  %2143 = load i32, ptr %12, align 4, !tbaa !6
  %2144 = add nsw i32 %2143, -1
  %2145 = icmp slt i32 %2142, %2144
  br i1 %2145, label %2168, label %2146

2146:                                             ; preds = %2141
  %2147 = icmp eq i32 %2142, %2144
  br i1 %2147, label %2148, label %2184

2148:                                             ; preds = %2146
  store i32 0, ptr %4, align 4, !tbaa !6
  %2149 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2149, ptr %6, align 4, !tbaa !6
  br i1 %1898, label %2191, label %2150

2150:                                             ; preds = %2148, %2178
  %2151 = phi i64 [ %2182, %2178 ], [ 1, %2148 ]
  %2152 = getelementptr inbounds i32, ptr %4, i64 %2151
  %2153 = load i32, ptr %2152, align 4, !tbaa !6
  %2154 = getelementptr inbounds i32, ptr %12, i64 %2151
  %2155 = load i32, ptr %2154, align 4, !tbaa !6
  %2156 = add nsw i32 %2155, -1
  %2157 = icmp slt i32 %2153, %2156
  br i1 %2157, label %2158, label %2176

2158:                                             ; preds = %2150
  br i1 %2145, label %2168, label %2159

2159:                                             ; preds = %2158
  %2160 = shl i64 %2151, 32
  %2161 = add i64 %2160, -4294967296
  %2162 = ashr exact i64 %2161, 32
  %2163 = getelementptr inbounds i32, ptr %7, i64 %2162
  %2164 = load i32, ptr %2163, align 4, !tbaa !6
  %2165 = getelementptr inbounds i32, ptr %6, i64 %2151
  %2166 = load i32, ptr %2165, align 4, !tbaa !6
  %2167 = add nsw i32 %2166, %2164
  store i32 %2167, ptr %2165, align 4, !tbaa !6
  br label %2186

2168:                                             ; preds = %2141, %2158
  %2169 = phi i32 [ %2153, %2158 ], [ %2142, %2141 ]
  %2170 = phi ptr [ %2152, %2158 ], [ %4, %2141 ]
  %2171 = phi i64 [ %2151, %2158 ], [ 0, %2141 ]
  %2172 = add nsw i32 %2169, 1
  store i32 %2172, ptr %2170, align 4, !tbaa !6
  %2173 = getelementptr inbounds i32, ptr %7, i64 %2171
  %2174 = load i32, ptr %2173, align 4, !tbaa !6
  %2175 = getelementptr inbounds i32, ptr %6, i64 %2171
  br label %2186

2176:                                             ; preds = %2150
  %2177 = icmp eq i32 %2153, %2156
  br i1 %2177, label %2178, label %2184

2178:                                             ; preds = %2176
  store i32 0, ptr %2152, align 4, !tbaa !6
  %2179 = getelementptr inbounds i32, ptr %8, i64 %2151
  %2180 = load i32, ptr %2179, align 4, !tbaa !6
  %2181 = getelementptr inbounds i32, ptr %6, i64 %2151
  store i32 %2180, ptr %2181, align 4, !tbaa !6
  %2182 = add nuw nsw i64 %2151, 1
  %2183 = icmp eq i64 %2182, %1896
  br i1 %2183, label %2191, label %2150, !llvm.loop !273

2184:                                             ; preds = %2146, %2176
  %2185 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 307, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5554

2186:                                             ; preds = %2159, %2168
  %2187 = phi ptr [ %2175, %2168 ], [ %2152, %2159 ]
  %2188 = phi i32 [ %2174, %2168 ], [ 1, %2159 ]
  %2189 = load i32, ptr %2187, align 4, !tbaa !6
  %2190 = add nsw i32 %2189, %2188
  store i32 %2190, ptr %2187, align 4, !tbaa !6
  br label %2191

2191:                                             ; preds = %2178, %2186, %2148, %2138
  %2192 = icmp eq i32 %2140, %5
  br i1 %2192, label %5549, label %2050, !llvm.loop !274

2193:                                             ; preds = %1884
  %2194 = getelementptr inbounds i32, ptr %3, i64 %19
  %2195 = load i32, ptr %2194, align 4, !tbaa !6
  %2196 = icmp eq i32 %2195, 0
  %2197 = icmp sgt i32 %5, 0
  br i1 %2196, label %2207, label %2198

2198:                                             ; preds = %2193
  br i1 %2197, label %2199, label %5549

2199:                                             ; preds = %2198
  %2200 = icmp sgt i32 %13, 1
  %2201 = icmp sgt i32 %13, 0
  %2202 = add i32 %13, -2
  %2203 = zext i32 %2202 to i64
  %2204 = zext i32 %13 to i64
  %2205 = add nuw i32 %5, 1
  %2206 = icmp eq i32 %13, 1
  br label %2354

2207:                                             ; preds = %2193
  br i1 %2197, label %2208, label %5549

2208:                                             ; preds = %2207
  %2209 = icmp sgt i32 %13, 1
  %2210 = icmp sgt i32 %13, 0
  %2211 = add i32 %13, -2
  %2212 = zext i32 %2211 to i64
  %2213 = zext i32 %13 to i64
  %2214 = add nuw i32 %5, 1
  %2215 = icmp eq i32 %13, 1
  br label %2216

2216:                                             ; preds = %2208, %2352
  %2217 = phi i16 [ %1882, %2208 ], [ %2302, %2352 ]
  %2218 = phi i32 [ 0, %2208 ], [ %2304, %2352 ]
  %2219 = phi double [ 0.000000e+00, %2208 ], [ %2303, %2352 ]
  %2220 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2209, label %2221, label %2290

2221:                                             ; preds = %2216, %2280
  %2222 = phi i32 [ %2289, %2280 ], [ 0, %2216 ]
  %2223 = phi i64 [ %2231, %2280 ], [ %2213, %2216 ]
  %2224 = phi i64 [ %2288, %2280 ], [ %2212, %2216 ]
  %2225 = phi i32 [ %2286, %2280 ], [ %2220, %2216 ]
  %2226 = sub i32 %2211, %2222
  %2227 = tail call i32 @llvm.smin.i32(i32 %2226, i32 0)
  %2228 = sub i32 %2226, %2227
  %2229 = zext i32 %2228 to i64
  %2230 = add nuw nsw i64 %2229, 1
  %2231 = add nsw i64 %2223, -1
  %2232 = icmp ult i32 %2228, 31
  br i1 %2232, label %2268, label %2233

2233:                                             ; preds = %2221
  %2234 = and i64 %2230, 8589934560
  %2235 = sub i64 %2224, %2234
  br label %2236

2236:                                             ; preds = %2236, %2233
  %2237 = phi i64 [ 0, %2233 ], [ %2260, %2236 ]
  %2238 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2233 ], [ %2256, %2236 ]
  %2239 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2233 ], [ %2257, %2236 ]
  %2240 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2233 ], [ %2258, %2236 ]
  %2241 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2233 ], [ %2259, %2236 ]
  %2242 = sub i64 %2224, %2237
  %2243 = getelementptr inbounds i32, ptr %9, i64 %2242
  %2244 = getelementptr inbounds i32, ptr %2243, i64 -7
  %2245 = load <8 x i32>, ptr %2244, align 4, !tbaa !6
  %2246 = shufflevector <8 x i32> %2245, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2247 = getelementptr inbounds i32, ptr %2243, i64 -15
  %2248 = load <8 x i32>, ptr %2247, align 4, !tbaa !6
  %2249 = shufflevector <8 x i32> %2248, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2250 = getelementptr inbounds i32, ptr %2243, i64 -23
  %2251 = load <8 x i32>, ptr %2250, align 4, !tbaa !6
  %2252 = shufflevector <8 x i32> %2251, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2253 = getelementptr inbounds i32, ptr %2243, i64 -31
  %2254 = load <8 x i32>, ptr %2253, align 4, !tbaa !6
  %2255 = shufflevector <8 x i32> %2254, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2256 = mul <8 x i32> %2246, %2238
  %2257 = mul <8 x i32> %2249, %2239
  %2258 = mul <8 x i32> %2252, %2240
  %2259 = mul <8 x i32> %2255, %2241
  %2260 = add nuw i64 %2237, 32
  %2261 = icmp eq i64 %2260, %2234
  br i1 %2261, label %2262, label %2236, !llvm.loop !275

2262:                                             ; preds = %2236
  %2263 = mul <8 x i32> %2257, %2256
  %2264 = mul <8 x i32> %2258, %2263
  %2265 = mul <8 x i32> %2259, %2264
  %2266 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2265)
  %2267 = icmp eq i64 %2230, %2234
  br i1 %2267, label %2280, label %2268

2268:                                             ; preds = %2221, %2262
  %2269 = phi i64 [ %2224, %2221 ], [ %2235, %2262 ]
  %2270 = phi i32 [ 1, %2221 ], [ %2266, %2262 ]
  br label %2271

2271:                                             ; preds = %2268, %2271
  %2272 = phi i64 [ %2277, %2271 ], [ %2269, %2268 ]
  %2273 = phi i32 [ %2276, %2271 ], [ %2270, %2268 ]
  %2274 = getelementptr inbounds i32, ptr %9, i64 %2272
  %2275 = load i32, ptr %2274, align 4, !tbaa !6
  %2276 = mul nsw i32 %2275, %2273
  %2277 = add nsw i64 %2272, -1
  %2278 = trunc i64 %2272 to i32
  %2279 = icmp sgt i32 %2278, 0
  br i1 %2279, label %2271, label %2280, !llvm.loop !276

2280:                                             ; preds = %2271, %2262
  %2281 = phi i32 [ %2266, %2262 ], [ %2276, %2271 ]
  %2282 = and i64 %2231, 4294967295
  %2283 = getelementptr inbounds i32, ptr %6, i64 %2282
  %2284 = load i32, ptr %2283, align 4, !tbaa !6
  %2285 = mul nsw i32 %2284, %2281
  %2286 = add nsw i32 %2285, %2225
  %2287 = icmp sgt i64 %2223, 2
  %2288 = add nsw i64 %2224, -1
  %2289 = add i32 %2222, 1
  br i1 %2287, label %2221, label %2290, !llvm.loop !277

2290:                                             ; preds = %2280, %2216
  %2291 = phi i32 [ %2220, %2216 ], [ %2286, %2280 ]
  %2292 = sext i32 %2291 to i64
  %2293 = getelementptr inbounds i32, ptr %1878, i64 %2292
  %2294 = load i32, ptr %2293, align 4, !tbaa !6
  %2295 = sext i16 %2217 to i32
  %2296 = shl i32 %2294, 16
  %2297 = ashr exact i32 %2296, 16
  %2298 = icmp sgt i32 %2297, %2295
  br i1 %2298, label %2299, label %2301

2299:                                             ; preds = %2290
  %2300 = trunc i32 %2294 to i16
  store i16 %2300, ptr %1880, align 2, !tbaa !79
  br label %2301

2301:                                             ; preds = %2299, %2290
  %2302 = phi i16 [ %2300, %2299 ], [ %2217, %2290 ]
  %2303 = fadd fast double %2219, 1.000000e+00
  %2304 = add nuw nsw i32 %2218, 1
  br i1 %2210, label %2305, label %2352

2305:                                             ; preds = %2301
  %2306 = load i32, ptr %4, align 4, !tbaa !6
  %2307 = load i32, ptr %12, align 4, !tbaa !6
  %2308 = add nsw i32 %2307, -1
  %2309 = icmp slt i32 %2306, %2308
  br i1 %2309, label %2329, label %2310

2310:                                             ; preds = %2305
  %2311 = icmp eq i32 %2306, %2308
  br i1 %2311, label %2312, label %2345

2312:                                             ; preds = %2310
  store i32 0, ptr %4, align 4, !tbaa !6
  %2313 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2313, ptr %6, align 4, !tbaa !6
  br i1 %2215, label %2352, label %2314

2314:                                             ; preds = %2312, %2339
  %2315 = phi i64 [ %2343, %2339 ], [ 1, %2312 ]
  %2316 = getelementptr inbounds i32, ptr %4, i64 %2315
  %2317 = load i32, ptr %2316, align 4, !tbaa !6
  %2318 = getelementptr inbounds i32, ptr %12, i64 %2315
  %2319 = load i32, ptr %2318, align 4, !tbaa !6
  %2320 = add nsw i32 %2319, -1
  %2321 = icmp slt i32 %2317, %2320
  br i1 %2321, label %2322, label %2337

2322:                                             ; preds = %2314
  br i1 %2309, label %2329, label %2323

2323:                                             ; preds = %2322
  %2324 = getelementptr inbounds i32, ptr %7, i64 %2315
  %2325 = load i32, ptr %2324, align 4, !tbaa !6
  %2326 = getelementptr inbounds i32, ptr %6, i64 %2315
  %2327 = load i32, ptr %2326, align 4, !tbaa !6
  %2328 = add nsw i32 %2327, %2325
  store i32 %2328, ptr %2326, align 4, !tbaa !6
  br label %2347

2329:                                             ; preds = %2305, %2322
  %2330 = phi i32 [ %2317, %2322 ], [ %2306, %2305 ]
  %2331 = phi ptr [ %2316, %2322 ], [ %4, %2305 ]
  %2332 = phi i64 [ %2315, %2322 ], [ 0, %2305 ]
  %2333 = add nsw i32 %2330, 1
  store i32 %2333, ptr %2331, align 4, !tbaa !6
  %2334 = getelementptr inbounds i32, ptr %7, i64 %2332
  %2335 = load i32, ptr %2334, align 4, !tbaa !6
  %2336 = getelementptr inbounds i32, ptr %6, i64 %2332
  br label %2347

2337:                                             ; preds = %2314
  %2338 = icmp eq i32 %2317, %2320
  br i1 %2338, label %2339, label %2345

2339:                                             ; preds = %2337
  store i32 0, ptr %2316, align 4, !tbaa !6
  %2340 = getelementptr inbounds i32, ptr %8, i64 %2315
  %2341 = load i32, ptr %2340, align 4, !tbaa !6
  %2342 = getelementptr inbounds i32, ptr %6, i64 %2315
  store i32 %2341, ptr %2342, align 4, !tbaa !6
  %2343 = add nuw nsw i64 %2315, 1
  %2344 = icmp eq i64 %2343, %2213
  br i1 %2344, label %2352, label %2314, !llvm.loop !278

2345:                                             ; preds = %2310, %2337
  %2346 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 307, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5554

2347:                                             ; preds = %2323, %2329
  %2348 = phi ptr [ %2336, %2329 ], [ %2316, %2323 ]
  %2349 = phi i32 [ %2335, %2329 ], [ 1, %2323 ]
  %2350 = load i32, ptr %2348, align 4, !tbaa !6
  %2351 = add nsw i32 %2350, %2349
  store i32 %2351, ptr %2348, align 4, !tbaa !6
  br label %2352

2352:                                             ; preds = %2339, %2347, %2312, %2301
  %2353 = icmp eq i32 %2304, %5
  br i1 %2353, label %5549, label %2216, !llvm.loop !279

2354:                                             ; preds = %2199, %2495
  %2355 = phi i16 [ %1882, %2199 ], [ %2443, %2495 ]
  %2356 = phi i32 [ 0, %2199 ], [ %2444, %2495 ]
  %2357 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2200, label %2358, label %2427

2358:                                             ; preds = %2354, %2417
  %2359 = phi i32 [ %2426, %2417 ], [ 0, %2354 ]
  %2360 = phi i64 [ %2368, %2417 ], [ %2204, %2354 ]
  %2361 = phi i64 [ %2425, %2417 ], [ %2203, %2354 ]
  %2362 = phi i32 [ %2423, %2417 ], [ %2357, %2354 ]
  %2363 = sub i32 %2202, %2359
  %2364 = tail call i32 @llvm.smin.i32(i32 %2363, i32 0)
  %2365 = sub i32 %2363, %2364
  %2366 = zext i32 %2365 to i64
  %2367 = add nuw nsw i64 %2366, 1
  %2368 = add nsw i64 %2360, -1
  %2369 = icmp ult i32 %2365, 31
  br i1 %2369, label %2405, label %2370

2370:                                             ; preds = %2358
  %2371 = and i64 %2367, 8589934560
  %2372 = sub i64 %2361, %2371
  br label %2373

2373:                                             ; preds = %2373, %2370
  %2374 = phi i64 [ 0, %2370 ], [ %2397, %2373 ]
  %2375 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2370 ], [ %2393, %2373 ]
  %2376 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2370 ], [ %2394, %2373 ]
  %2377 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2370 ], [ %2395, %2373 ]
  %2378 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2370 ], [ %2396, %2373 ]
  %2379 = sub i64 %2361, %2374
  %2380 = getelementptr inbounds i32, ptr %11, i64 %2379
  %2381 = getelementptr inbounds i32, ptr %2380, i64 -7
  %2382 = load <8 x i32>, ptr %2381, align 4, !tbaa !6
  %2383 = shufflevector <8 x i32> %2382, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2384 = getelementptr inbounds i32, ptr %2380, i64 -15
  %2385 = load <8 x i32>, ptr %2384, align 4, !tbaa !6
  %2386 = shufflevector <8 x i32> %2385, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2387 = getelementptr inbounds i32, ptr %2380, i64 -23
  %2388 = load <8 x i32>, ptr %2387, align 4, !tbaa !6
  %2389 = shufflevector <8 x i32> %2388, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2390 = getelementptr inbounds i32, ptr %2380, i64 -31
  %2391 = load <8 x i32>, ptr %2390, align 4, !tbaa !6
  %2392 = shufflevector <8 x i32> %2391, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2393 = mul <8 x i32> %2383, %2375
  %2394 = mul <8 x i32> %2386, %2376
  %2395 = mul <8 x i32> %2389, %2377
  %2396 = mul <8 x i32> %2392, %2378
  %2397 = add nuw i64 %2374, 32
  %2398 = icmp eq i64 %2397, %2371
  br i1 %2398, label %2399, label %2373, !llvm.loop !280

2399:                                             ; preds = %2373
  %2400 = mul <8 x i32> %2394, %2393
  %2401 = mul <8 x i32> %2395, %2400
  %2402 = mul <8 x i32> %2396, %2401
  %2403 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2402)
  %2404 = icmp eq i64 %2367, %2371
  br i1 %2404, label %2417, label %2405

2405:                                             ; preds = %2358, %2399
  %2406 = phi i64 [ %2361, %2358 ], [ %2372, %2399 ]
  %2407 = phi i32 [ 1, %2358 ], [ %2403, %2399 ]
  br label %2408

2408:                                             ; preds = %2405, %2408
  %2409 = phi i64 [ %2414, %2408 ], [ %2406, %2405 ]
  %2410 = phi i32 [ %2413, %2408 ], [ %2407, %2405 ]
  %2411 = getelementptr inbounds i32, ptr %11, i64 %2409
  %2412 = load i32, ptr %2411, align 4, !tbaa !6
  %2413 = mul nsw i32 %2412, %2410
  %2414 = add nsw i64 %2409, -1
  %2415 = trunc i64 %2409 to i32
  %2416 = icmp sgt i32 %2415, 0
  br i1 %2416, label %2408, label %2417, !llvm.loop !281

2417:                                             ; preds = %2408, %2399
  %2418 = phi i32 [ %2403, %2399 ], [ %2413, %2408 ]
  %2419 = and i64 %2368, 4294967295
  %2420 = getelementptr inbounds i32, ptr %6, i64 %2419
  %2421 = load i32, ptr %2420, align 4, !tbaa !6
  %2422 = mul nsw i32 %2421, %2418
  %2423 = add nsw i32 %2422, %2362
  %2424 = icmp sgt i64 %2360, 2
  %2425 = add nsw i64 %2361, -1
  %2426 = add i32 %2359, 1
  br i1 %2424, label %2358, label %2427, !llvm.loop !282

2427:                                             ; preds = %2417, %2354
  %2428 = phi i32 [ %2357, %2354 ], [ %2423, %2417 ]
  %2429 = icmp slt i32 %2428, %5
  br i1 %2429, label %2432, label %2430

2430:                                             ; preds = %2427
  %2431 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 307, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5554

2432:                                             ; preds = %2427
  %2433 = sext i32 %2428 to i64
  %2434 = getelementptr inbounds i32, ptr %1878, i64 %2433
  %2435 = load i32, ptr %2434, align 4, !tbaa !6
  %2436 = sext i16 %2355 to i32
  %2437 = shl i32 %2435, 16
  %2438 = ashr exact i32 %2437, 16
  %2439 = icmp sgt i32 %2438, %2436
  br i1 %2439, label %2440, label %2442

2440:                                             ; preds = %2432
  %2441 = trunc i32 %2435 to i16
  store i16 %2441, ptr %1880, align 2, !tbaa !79
  br label %2442

2442:                                             ; preds = %2440, %2432
  %2443 = phi i16 [ %2441, %2440 ], [ %2355, %2432 ]
  %2444 = add nuw nsw i32 %2356, 1
  br i1 %2201, label %2445, label %2495

2445:                                             ; preds = %2442
  %2446 = load i32, ptr %4, align 4, !tbaa !6
  %2447 = load i32, ptr %12, align 4, !tbaa !6
  %2448 = add nsw i32 %2447, -1
  %2449 = icmp slt i32 %2446, %2448
  br i1 %2449, label %2472, label %2450

2450:                                             ; preds = %2445
  %2451 = icmp eq i32 %2446, %2448
  br i1 %2451, label %2452, label %2488

2452:                                             ; preds = %2450
  store i32 0, ptr %4, align 4, !tbaa !6
  %2453 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2453, ptr %6, align 4, !tbaa !6
  br i1 %2206, label %2495, label %2454

2454:                                             ; preds = %2452, %2482
  %2455 = phi i64 [ %2486, %2482 ], [ 1, %2452 ]
  %2456 = getelementptr inbounds i32, ptr %4, i64 %2455
  %2457 = load i32, ptr %2456, align 4, !tbaa !6
  %2458 = getelementptr inbounds i32, ptr %12, i64 %2455
  %2459 = load i32, ptr %2458, align 4, !tbaa !6
  %2460 = add nsw i32 %2459, -1
  %2461 = icmp slt i32 %2457, %2460
  br i1 %2461, label %2462, label %2480

2462:                                             ; preds = %2454
  br i1 %2449, label %2472, label %2463

2463:                                             ; preds = %2462
  %2464 = shl i64 %2455, 32
  %2465 = add i64 %2464, -4294967296
  %2466 = ashr exact i64 %2465, 32
  %2467 = getelementptr inbounds i32, ptr %7, i64 %2466
  %2468 = load i32, ptr %2467, align 4, !tbaa !6
  %2469 = getelementptr inbounds i32, ptr %6, i64 %2455
  %2470 = load i32, ptr %2469, align 4, !tbaa !6
  %2471 = add nsw i32 %2470, %2468
  store i32 %2471, ptr %2469, align 4, !tbaa !6
  br label %2490

2472:                                             ; preds = %2445, %2462
  %2473 = phi i32 [ %2457, %2462 ], [ %2446, %2445 ]
  %2474 = phi ptr [ %2456, %2462 ], [ %4, %2445 ]
  %2475 = phi i64 [ %2455, %2462 ], [ 0, %2445 ]
  %2476 = add nsw i32 %2473, 1
  store i32 %2476, ptr %2474, align 4, !tbaa !6
  %2477 = getelementptr inbounds i32, ptr %7, i64 %2475
  %2478 = load i32, ptr %2477, align 4, !tbaa !6
  %2479 = getelementptr inbounds i32, ptr %6, i64 %2475
  br label %2490

2480:                                             ; preds = %2454
  %2481 = icmp eq i32 %2457, %2460
  br i1 %2481, label %2482, label %2488

2482:                                             ; preds = %2480
  store i32 0, ptr %2456, align 4, !tbaa !6
  %2483 = getelementptr inbounds i32, ptr %8, i64 %2455
  %2484 = load i32, ptr %2483, align 4, !tbaa !6
  %2485 = getelementptr inbounds i32, ptr %6, i64 %2455
  store i32 %2484, ptr %2485, align 4, !tbaa !6
  %2486 = add nuw nsw i64 %2455, 1
  %2487 = icmp eq i64 %2486, %2204
  br i1 %2487, label %2495, label %2454, !llvm.loop !283

2488:                                             ; preds = %2450, %2480
  %2489 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 307, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5554

2490:                                             ; preds = %2463, %2472
  %2491 = phi ptr [ %2479, %2472 ], [ %2456, %2463 ]
  %2492 = phi i32 [ %2478, %2472 ], [ 1, %2463 ]
  %2493 = load i32, ptr %2491, align 4, !tbaa !6
  %2494 = add nsw i32 %2493, %2492
  store i32 %2494, ptr %2491, align 4, !tbaa !6
  br label %2495

2495:                                             ; preds = %2482, %2490, %2452, %2442
  %2496 = icmp eq i32 %2444, %5
  br i1 %2496, label %5549, label %2354, !llvm.loop !284

2497:                                             ; preds = %1884
  %2498 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 307, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5549

2499:                                             ; preds = %18
  %2500 = getelementptr inbounds ptr, ptr %14, i64 %19
  %2501 = load ptr, ptr %2500, align 8, !tbaa !10
  %2502 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2503 = load ptr, ptr %2502, align 8, !tbaa !10
  %2504 = load i32, ptr %2501, align 4, !tbaa !6
  store i32 %2504, ptr %2503, align 4, !tbaa !6
  %2505 = icmp eq i32 %13, 0
  br i1 %2505, label %2506, label %2510

2506:                                             ; preds = %2499
  %2507 = load i32, ptr %2501, align 4, !tbaa !6
  %2508 = icmp slt i32 %2504, %2507
  br i1 %2508, label %2509, label %5549

2509:                                             ; preds = %2506
  store i32 %2507, ptr %2503, align 4, !tbaa !6
  br label %5549

2510:                                             ; preds = %2499
  switch i32 %1, label %3103 [
    i32 1, label %2511
    i32 0, label %2809
  ]

2511:                                             ; preds = %2510
  %2512 = getelementptr inbounds i32, ptr %3, i64 %19
  %2513 = load i32, ptr %2512, align 4, !tbaa !6
  %2514 = icmp eq i32 %2513, 0
  %2515 = icmp sgt i32 %5, 0
  br i1 %2514, label %2525, label %2516

2516:                                             ; preds = %2511
  br i1 %2515, label %2517, label %5549

2517:                                             ; preds = %2516
  %2518 = icmp sgt i32 %13, 1
  %2519 = icmp sgt i32 %13, 0
  %2520 = add i32 %13, -2
  %2521 = zext i32 %2520 to i64
  %2522 = zext i32 %13 to i64
  %2523 = add nuw i32 %5, 1
  %2524 = icmp eq i32 %13, 1
  br label %2671

2525:                                             ; preds = %2511
  br i1 %2515, label %2526, label %5549

2526:                                             ; preds = %2525
  %2527 = icmp sgt i32 %13, 1
  %2528 = icmp sgt i32 %13, 0
  %2529 = add i32 %13, -2
  %2530 = zext i32 %2529 to i64
  %2531 = zext i32 %13 to i64
  %2532 = add nuw i32 %5, 1
  %2533 = icmp eq i32 %13, 1
  br label %2534

2534:                                             ; preds = %2526, %2669
  %2535 = phi i32 [ 0, %2526 ], [ %2621, %2669 ]
  %2536 = phi double [ 0.000000e+00, %2526 ], [ %2620, %2669 ]
  %2537 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2527, label %2538, label %2607

2538:                                             ; preds = %2534, %2597
  %2539 = phi i32 [ %2606, %2597 ], [ 0, %2534 ]
  %2540 = phi i64 [ %2548, %2597 ], [ %2531, %2534 ]
  %2541 = phi i64 [ %2605, %2597 ], [ %2530, %2534 ]
  %2542 = phi i32 [ %2603, %2597 ], [ %2537, %2534 ]
  %2543 = sub i32 %2529, %2539
  %2544 = tail call i32 @llvm.smin.i32(i32 %2543, i32 0)
  %2545 = sub i32 %2543, %2544
  %2546 = zext i32 %2545 to i64
  %2547 = add nuw nsw i64 %2546, 1
  %2548 = add nsw i64 %2540, -1
  %2549 = icmp ult i32 %2545, 31
  br i1 %2549, label %2585, label %2550

2550:                                             ; preds = %2538
  %2551 = and i64 %2547, 8589934560
  %2552 = sub i64 %2541, %2551
  br label %2553

2553:                                             ; preds = %2553, %2550
  %2554 = phi i64 [ 0, %2550 ], [ %2577, %2553 ]
  %2555 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2550 ], [ %2573, %2553 ]
  %2556 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2550 ], [ %2574, %2553 ]
  %2557 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2550 ], [ %2575, %2553 ]
  %2558 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2550 ], [ %2576, %2553 ]
  %2559 = sub i64 %2541, %2554
  %2560 = getelementptr inbounds i32, ptr %9, i64 %2559
  %2561 = getelementptr inbounds i32, ptr %2560, i64 -7
  %2562 = load <8 x i32>, ptr %2561, align 4, !tbaa !6
  %2563 = shufflevector <8 x i32> %2562, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2564 = getelementptr inbounds i32, ptr %2560, i64 -15
  %2565 = load <8 x i32>, ptr %2564, align 4, !tbaa !6
  %2566 = shufflevector <8 x i32> %2565, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2567 = getelementptr inbounds i32, ptr %2560, i64 -23
  %2568 = load <8 x i32>, ptr %2567, align 4, !tbaa !6
  %2569 = shufflevector <8 x i32> %2568, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2570 = getelementptr inbounds i32, ptr %2560, i64 -31
  %2571 = load <8 x i32>, ptr %2570, align 4, !tbaa !6
  %2572 = shufflevector <8 x i32> %2571, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2573 = mul <8 x i32> %2563, %2555
  %2574 = mul <8 x i32> %2566, %2556
  %2575 = mul <8 x i32> %2569, %2557
  %2576 = mul <8 x i32> %2572, %2558
  %2577 = add nuw i64 %2554, 32
  %2578 = icmp eq i64 %2577, %2551
  br i1 %2578, label %2579, label %2553, !llvm.loop !285

2579:                                             ; preds = %2553
  %2580 = mul <8 x i32> %2574, %2573
  %2581 = mul <8 x i32> %2575, %2580
  %2582 = mul <8 x i32> %2576, %2581
  %2583 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2582)
  %2584 = icmp eq i64 %2547, %2551
  br i1 %2584, label %2597, label %2585

2585:                                             ; preds = %2538, %2579
  %2586 = phi i64 [ %2541, %2538 ], [ %2552, %2579 ]
  %2587 = phi i32 [ 1, %2538 ], [ %2583, %2579 ]
  br label %2588

2588:                                             ; preds = %2585, %2588
  %2589 = phi i64 [ %2594, %2588 ], [ %2586, %2585 ]
  %2590 = phi i32 [ %2593, %2588 ], [ %2587, %2585 ]
  %2591 = getelementptr inbounds i32, ptr %9, i64 %2589
  %2592 = load i32, ptr %2591, align 4, !tbaa !6
  %2593 = mul nsw i32 %2592, %2590
  %2594 = add nsw i64 %2589, -1
  %2595 = trunc i64 %2589 to i32
  %2596 = icmp sgt i32 %2595, 0
  br i1 %2596, label %2588, label %2597, !llvm.loop !286

2597:                                             ; preds = %2588, %2579
  %2598 = phi i32 [ %2583, %2579 ], [ %2593, %2588 ]
  %2599 = and i64 %2548, 4294967295
  %2600 = getelementptr inbounds i32, ptr %6, i64 %2599
  %2601 = load i32, ptr %2600, align 4, !tbaa !6
  %2602 = mul nsw i32 %2601, %2598
  %2603 = add nsw i32 %2602, %2542
  %2604 = icmp sgt i64 %2540, 2
  %2605 = add nsw i64 %2541, -1
  %2606 = add i32 %2539, 1
  br i1 %2604, label %2538, label %2607, !llvm.loop !287

2607:                                             ; preds = %2597, %2534
  %2608 = phi i32 [ %2537, %2534 ], [ %2603, %2597 ]
  %2609 = sext i32 %2608 to i64
  %2610 = getelementptr inbounds double, ptr %2, i64 %2609
  %2611 = load double, ptr %2610, align 8, !tbaa !19
  %2612 = getelementptr inbounds i32, ptr %2501, i64 %2609
  %2613 = load i32, ptr %2612, align 4, !tbaa !6
  %2614 = fcmp fast ueq double %2611, 0.000000e+00
  br i1 %2614, label %2619, label %2615

2615:                                             ; preds = %2607
  %2616 = load i32, ptr %2503, align 4, !tbaa !6
  %2617 = icmp slt i32 %2616, %2613
  br i1 %2617, label %2618, label %2619

2618:                                             ; preds = %2615
  store i32 %2613, ptr %2503, align 4, !tbaa !6
  br label %2619

2619:                                             ; preds = %2615, %2618, %2607
  %2620 = fadd fast double %2611, %2536
  %2621 = add nuw nsw i32 %2535, 1
  br i1 %2528, label %2622, label %2669

2622:                                             ; preds = %2619
  %2623 = load i32, ptr %4, align 4, !tbaa !6
  %2624 = load i32, ptr %12, align 4, !tbaa !6
  %2625 = add nsw i32 %2624, -1
  %2626 = icmp slt i32 %2623, %2625
  br i1 %2626, label %2646, label %2627

2627:                                             ; preds = %2622
  %2628 = icmp eq i32 %2623, %2625
  br i1 %2628, label %2629, label %2662

2629:                                             ; preds = %2627
  store i32 0, ptr %4, align 4, !tbaa !6
  %2630 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2630, ptr %6, align 4, !tbaa !6
  br i1 %2533, label %2669, label %2631

2631:                                             ; preds = %2629, %2656
  %2632 = phi i64 [ %2660, %2656 ], [ 1, %2629 ]
  %2633 = getelementptr inbounds i32, ptr %4, i64 %2632
  %2634 = load i32, ptr %2633, align 4, !tbaa !6
  %2635 = getelementptr inbounds i32, ptr %12, i64 %2632
  %2636 = load i32, ptr %2635, align 4, !tbaa !6
  %2637 = add nsw i32 %2636, -1
  %2638 = icmp slt i32 %2634, %2637
  br i1 %2638, label %2639, label %2654

2639:                                             ; preds = %2631
  br i1 %2626, label %2646, label %2640

2640:                                             ; preds = %2639
  %2641 = getelementptr inbounds i32, ptr %7, i64 %2632
  %2642 = load i32, ptr %2641, align 4, !tbaa !6
  %2643 = getelementptr inbounds i32, ptr %6, i64 %2632
  %2644 = load i32, ptr %2643, align 4, !tbaa !6
  %2645 = add nsw i32 %2644, %2642
  store i32 %2645, ptr %2643, align 4, !tbaa !6
  br label %2664

2646:                                             ; preds = %2622, %2639
  %2647 = phi i32 [ %2634, %2639 ], [ %2623, %2622 ]
  %2648 = phi ptr [ %2633, %2639 ], [ %4, %2622 ]
  %2649 = phi i64 [ %2632, %2639 ], [ 0, %2622 ]
  %2650 = add nsw i32 %2647, 1
  store i32 %2650, ptr %2648, align 4, !tbaa !6
  %2651 = getelementptr inbounds i32, ptr %7, i64 %2649
  %2652 = load i32, ptr %2651, align 4, !tbaa !6
  %2653 = getelementptr inbounds i32, ptr %6, i64 %2649
  br label %2664

2654:                                             ; preds = %2631
  %2655 = icmp eq i32 %2634, %2637
  br i1 %2655, label %2656, label %2662

2656:                                             ; preds = %2654
  store i32 0, ptr %2633, align 4, !tbaa !6
  %2657 = getelementptr inbounds i32, ptr %8, i64 %2632
  %2658 = load i32, ptr %2657, align 4, !tbaa !6
  %2659 = getelementptr inbounds i32, ptr %6, i64 %2632
  store i32 %2658, ptr %2659, align 4, !tbaa !6
  %2660 = add nuw nsw i64 %2632, 1
  %2661 = icmp eq i64 %2660, %2531
  br i1 %2661, label %2669, label %2631, !llvm.loop !288

2662:                                             ; preds = %2627, %2654
  %2663 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 312, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5554

2664:                                             ; preds = %2640, %2646
  %2665 = phi ptr [ %2653, %2646 ], [ %2633, %2640 ]
  %2666 = phi i32 [ %2652, %2646 ], [ 1, %2640 ]
  %2667 = load i32, ptr %2665, align 4, !tbaa !6
  %2668 = add nsw i32 %2667, %2666
  store i32 %2668, ptr %2665, align 4, !tbaa !6
  br label %2669

2669:                                             ; preds = %2656, %2664, %2629, %2619
  %2670 = icmp eq i32 %2621, %5
  br i1 %2670, label %5549, label %2534, !llvm.loop !289

2671:                                             ; preds = %2517, %2807
  %2672 = phi i32 [ 0, %2517 ], [ %2756, %2807 ]
  %2673 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2518, label %2674, label %2743

2674:                                             ; preds = %2671, %2733
  %2675 = phi i32 [ %2742, %2733 ], [ 0, %2671 ]
  %2676 = phi i64 [ %2684, %2733 ], [ %2522, %2671 ]
  %2677 = phi i64 [ %2741, %2733 ], [ %2521, %2671 ]
  %2678 = phi i32 [ %2739, %2733 ], [ %2673, %2671 ]
  %2679 = sub i32 %2520, %2675
  %2680 = tail call i32 @llvm.smin.i32(i32 %2679, i32 0)
  %2681 = sub i32 %2679, %2680
  %2682 = zext i32 %2681 to i64
  %2683 = add nuw nsw i64 %2682, 1
  %2684 = add nsw i64 %2676, -1
  %2685 = icmp ult i32 %2681, 31
  br i1 %2685, label %2721, label %2686

2686:                                             ; preds = %2674
  %2687 = and i64 %2683, 8589934560
  %2688 = sub i64 %2677, %2687
  br label %2689

2689:                                             ; preds = %2689, %2686
  %2690 = phi i64 [ 0, %2686 ], [ %2713, %2689 ]
  %2691 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2686 ], [ %2709, %2689 ]
  %2692 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2686 ], [ %2710, %2689 ]
  %2693 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2686 ], [ %2711, %2689 ]
  %2694 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2686 ], [ %2712, %2689 ]
  %2695 = sub i64 %2677, %2690
  %2696 = getelementptr inbounds i32, ptr %11, i64 %2695
  %2697 = getelementptr inbounds i32, ptr %2696, i64 -7
  %2698 = load <8 x i32>, ptr %2697, align 4, !tbaa !6
  %2699 = shufflevector <8 x i32> %2698, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2700 = getelementptr inbounds i32, ptr %2696, i64 -15
  %2701 = load <8 x i32>, ptr %2700, align 4, !tbaa !6
  %2702 = shufflevector <8 x i32> %2701, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2703 = getelementptr inbounds i32, ptr %2696, i64 -23
  %2704 = load <8 x i32>, ptr %2703, align 4, !tbaa !6
  %2705 = shufflevector <8 x i32> %2704, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2706 = getelementptr inbounds i32, ptr %2696, i64 -31
  %2707 = load <8 x i32>, ptr %2706, align 4, !tbaa !6
  %2708 = shufflevector <8 x i32> %2707, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2709 = mul <8 x i32> %2699, %2691
  %2710 = mul <8 x i32> %2702, %2692
  %2711 = mul <8 x i32> %2705, %2693
  %2712 = mul <8 x i32> %2708, %2694
  %2713 = add nuw i64 %2690, 32
  %2714 = icmp eq i64 %2713, %2687
  br i1 %2714, label %2715, label %2689, !llvm.loop !290

2715:                                             ; preds = %2689
  %2716 = mul <8 x i32> %2710, %2709
  %2717 = mul <8 x i32> %2711, %2716
  %2718 = mul <8 x i32> %2712, %2717
  %2719 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2718)
  %2720 = icmp eq i64 %2683, %2687
  br i1 %2720, label %2733, label %2721

2721:                                             ; preds = %2674, %2715
  %2722 = phi i64 [ %2677, %2674 ], [ %2688, %2715 ]
  %2723 = phi i32 [ 1, %2674 ], [ %2719, %2715 ]
  br label %2724

2724:                                             ; preds = %2721, %2724
  %2725 = phi i64 [ %2730, %2724 ], [ %2722, %2721 ]
  %2726 = phi i32 [ %2729, %2724 ], [ %2723, %2721 ]
  %2727 = getelementptr inbounds i32, ptr %11, i64 %2725
  %2728 = load i32, ptr %2727, align 4, !tbaa !6
  %2729 = mul nsw i32 %2728, %2726
  %2730 = add nsw i64 %2725, -1
  %2731 = trunc i64 %2725 to i32
  %2732 = icmp sgt i32 %2731, 0
  br i1 %2732, label %2724, label %2733, !llvm.loop !291

2733:                                             ; preds = %2724, %2715
  %2734 = phi i32 [ %2719, %2715 ], [ %2729, %2724 ]
  %2735 = and i64 %2684, 4294967295
  %2736 = getelementptr inbounds i32, ptr %6, i64 %2735
  %2737 = load i32, ptr %2736, align 4, !tbaa !6
  %2738 = mul nsw i32 %2737, %2734
  %2739 = add nsw i32 %2738, %2678
  %2740 = icmp sgt i64 %2676, 2
  %2741 = add nsw i64 %2677, -1
  %2742 = add i32 %2675, 1
  br i1 %2740, label %2674, label %2743, !llvm.loop !292

2743:                                             ; preds = %2733, %2671
  %2744 = phi i32 [ %2673, %2671 ], [ %2739, %2733 ]
  %2745 = icmp slt i32 %2744, %5
  br i1 %2745, label %2748, label %2746

2746:                                             ; preds = %2743
  %2747 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 312, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5554

2748:                                             ; preds = %2743
  %2749 = sext i32 %2744 to i64
  %2750 = getelementptr inbounds i32, ptr %2501, i64 %2749
  %2751 = load i32, ptr %2750, align 4, !tbaa !6
  %2752 = load i32, ptr %2503, align 4, !tbaa !6
  %2753 = icmp slt i32 %2752, %2751
  br i1 %2753, label %2754, label %2755

2754:                                             ; preds = %2748
  store i32 %2751, ptr %2503, align 4, !tbaa !6
  br label %2755

2755:                                             ; preds = %2748, %2754
  %2756 = add nuw nsw i32 %2672, 1
  br i1 %2519, label %2757, label %2807

2757:                                             ; preds = %2755
  %2758 = load i32, ptr %4, align 4, !tbaa !6
  %2759 = load i32, ptr %12, align 4, !tbaa !6
  %2760 = add nsw i32 %2759, -1
  %2761 = icmp slt i32 %2758, %2760
  br i1 %2761, label %2784, label %2762

2762:                                             ; preds = %2757
  %2763 = icmp eq i32 %2758, %2760
  br i1 %2763, label %2764, label %2800

2764:                                             ; preds = %2762
  store i32 0, ptr %4, align 4, !tbaa !6
  %2765 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2765, ptr %6, align 4, !tbaa !6
  br i1 %2524, label %2807, label %2766

2766:                                             ; preds = %2764, %2794
  %2767 = phi i64 [ %2798, %2794 ], [ 1, %2764 ]
  %2768 = getelementptr inbounds i32, ptr %4, i64 %2767
  %2769 = load i32, ptr %2768, align 4, !tbaa !6
  %2770 = getelementptr inbounds i32, ptr %12, i64 %2767
  %2771 = load i32, ptr %2770, align 4, !tbaa !6
  %2772 = add nsw i32 %2771, -1
  %2773 = icmp slt i32 %2769, %2772
  br i1 %2773, label %2774, label %2792

2774:                                             ; preds = %2766
  br i1 %2761, label %2784, label %2775

2775:                                             ; preds = %2774
  %2776 = shl i64 %2767, 32
  %2777 = add i64 %2776, -4294967296
  %2778 = ashr exact i64 %2777, 32
  %2779 = getelementptr inbounds i32, ptr %7, i64 %2778
  %2780 = load i32, ptr %2779, align 4, !tbaa !6
  %2781 = getelementptr inbounds i32, ptr %6, i64 %2767
  %2782 = load i32, ptr %2781, align 4, !tbaa !6
  %2783 = add nsw i32 %2782, %2780
  store i32 %2783, ptr %2781, align 4, !tbaa !6
  br label %2802

2784:                                             ; preds = %2757, %2774
  %2785 = phi i32 [ %2769, %2774 ], [ %2758, %2757 ]
  %2786 = phi ptr [ %2768, %2774 ], [ %4, %2757 ]
  %2787 = phi i64 [ %2767, %2774 ], [ 0, %2757 ]
  %2788 = add nsw i32 %2785, 1
  store i32 %2788, ptr %2786, align 4, !tbaa !6
  %2789 = getelementptr inbounds i32, ptr %7, i64 %2787
  %2790 = load i32, ptr %2789, align 4, !tbaa !6
  %2791 = getelementptr inbounds i32, ptr %6, i64 %2787
  br label %2802

2792:                                             ; preds = %2766
  %2793 = icmp eq i32 %2769, %2772
  br i1 %2793, label %2794, label %2800

2794:                                             ; preds = %2792
  store i32 0, ptr %2768, align 4, !tbaa !6
  %2795 = getelementptr inbounds i32, ptr %8, i64 %2767
  %2796 = load i32, ptr %2795, align 4, !tbaa !6
  %2797 = getelementptr inbounds i32, ptr %6, i64 %2767
  store i32 %2796, ptr %2797, align 4, !tbaa !6
  %2798 = add nuw nsw i64 %2767, 1
  %2799 = icmp eq i64 %2798, %2522
  br i1 %2799, label %2807, label %2766, !llvm.loop !293

2800:                                             ; preds = %2762, %2792
  %2801 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 312, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5554

2802:                                             ; preds = %2775, %2784
  %2803 = phi ptr [ %2791, %2784 ], [ %2768, %2775 ]
  %2804 = phi i32 [ %2790, %2784 ], [ 1, %2775 ]
  %2805 = load i32, ptr %2803, align 4, !tbaa !6
  %2806 = add nsw i32 %2805, %2804
  store i32 %2806, ptr %2803, align 4, !tbaa !6
  br label %2807

2807:                                             ; preds = %2794, %2802, %2764, %2755
  %2808 = icmp eq i32 %2756, %5
  br i1 %2808, label %5549, label %2671, !llvm.loop !294

2809:                                             ; preds = %2510
  %2810 = getelementptr inbounds i32, ptr %3, i64 %19
  %2811 = load i32, ptr %2810, align 4, !tbaa !6
  %2812 = icmp eq i32 %2811, 0
  %2813 = icmp sgt i32 %5, 0
  br i1 %2812, label %2823, label %2814

2814:                                             ; preds = %2809
  br i1 %2813, label %2815, label %5549

2815:                                             ; preds = %2814
  %2816 = icmp sgt i32 %13, 1
  %2817 = icmp sgt i32 %13, 0
  %2818 = add i32 %13, -2
  %2819 = zext i32 %2818 to i64
  %2820 = zext i32 %13 to i64
  %2821 = add nuw i32 %5, 1
  %2822 = icmp eq i32 %13, 1
  br label %2965

2823:                                             ; preds = %2809
  br i1 %2813, label %2824, label %5549

2824:                                             ; preds = %2823
  %2825 = icmp sgt i32 %13, 1
  %2826 = icmp sgt i32 %13, 0
  %2827 = add i32 %13, -2
  %2828 = zext i32 %2827 to i64
  %2829 = zext i32 %13 to i64
  %2830 = add nuw i32 %5, 1
  %2831 = icmp eq i32 %13, 1
  br label %2832

2832:                                             ; preds = %2824, %2963
  %2833 = phi i32 [ 0, %2824 ], [ %2915, %2963 ]
  %2834 = phi double [ 0.000000e+00, %2824 ], [ %2914, %2963 ]
  %2835 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2825, label %2836, label %2905

2836:                                             ; preds = %2832, %2895
  %2837 = phi i32 [ %2904, %2895 ], [ 0, %2832 ]
  %2838 = phi i64 [ %2846, %2895 ], [ %2829, %2832 ]
  %2839 = phi i64 [ %2903, %2895 ], [ %2828, %2832 ]
  %2840 = phi i32 [ %2901, %2895 ], [ %2835, %2832 ]
  %2841 = sub i32 %2827, %2837
  %2842 = tail call i32 @llvm.smin.i32(i32 %2841, i32 0)
  %2843 = sub i32 %2841, %2842
  %2844 = zext i32 %2843 to i64
  %2845 = add nuw nsw i64 %2844, 1
  %2846 = add nsw i64 %2838, -1
  %2847 = icmp ult i32 %2843, 31
  br i1 %2847, label %2883, label %2848

2848:                                             ; preds = %2836
  %2849 = and i64 %2845, 8589934560
  %2850 = sub i64 %2839, %2849
  br label %2851

2851:                                             ; preds = %2851, %2848
  %2852 = phi i64 [ 0, %2848 ], [ %2875, %2851 ]
  %2853 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2848 ], [ %2871, %2851 ]
  %2854 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2848 ], [ %2872, %2851 ]
  %2855 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2848 ], [ %2873, %2851 ]
  %2856 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2848 ], [ %2874, %2851 ]
  %2857 = sub i64 %2839, %2852
  %2858 = getelementptr inbounds i32, ptr %9, i64 %2857
  %2859 = getelementptr inbounds i32, ptr %2858, i64 -7
  %2860 = load <8 x i32>, ptr %2859, align 4, !tbaa !6
  %2861 = shufflevector <8 x i32> %2860, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2862 = getelementptr inbounds i32, ptr %2858, i64 -15
  %2863 = load <8 x i32>, ptr %2862, align 4, !tbaa !6
  %2864 = shufflevector <8 x i32> %2863, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2865 = getelementptr inbounds i32, ptr %2858, i64 -23
  %2866 = load <8 x i32>, ptr %2865, align 4, !tbaa !6
  %2867 = shufflevector <8 x i32> %2866, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2868 = getelementptr inbounds i32, ptr %2858, i64 -31
  %2869 = load <8 x i32>, ptr %2868, align 4, !tbaa !6
  %2870 = shufflevector <8 x i32> %2869, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2871 = mul <8 x i32> %2861, %2853
  %2872 = mul <8 x i32> %2864, %2854
  %2873 = mul <8 x i32> %2867, %2855
  %2874 = mul <8 x i32> %2870, %2856
  %2875 = add nuw i64 %2852, 32
  %2876 = icmp eq i64 %2875, %2849
  br i1 %2876, label %2877, label %2851, !llvm.loop !295

2877:                                             ; preds = %2851
  %2878 = mul <8 x i32> %2872, %2871
  %2879 = mul <8 x i32> %2873, %2878
  %2880 = mul <8 x i32> %2874, %2879
  %2881 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2880)
  %2882 = icmp eq i64 %2845, %2849
  br i1 %2882, label %2895, label %2883

2883:                                             ; preds = %2836, %2877
  %2884 = phi i64 [ %2839, %2836 ], [ %2850, %2877 ]
  %2885 = phi i32 [ 1, %2836 ], [ %2881, %2877 ]
  br label %2886

2886:                                             ; preds = %2883, %2886
  %2887 = phi i64 [ %2892, %2886 ], [ %2884, %2883 ]
  %2888 = phi i32 [ %2891, %2886 ], [ %2885, %2883 ]
  %2889 = getelementptr inbounds i32, ptr %9, i64 %2887
  %2890 = load i32, ptr %2889, align 4, !tbaa !6
  %2891 = mul nsw i32 %2890, %2888
  %2892 = add nsw i64 %2887, -1
  %2893 = trunc i64 %2887 to i32
  %2894 = icmp sgt i32 %2893, 0
  br i1 %2894, label %2886, label %2895, !llvm.loop !296

2895:                                             ; preds = %2886, %2877
  %2896 = phi i32 [ %2881, %2877 ], [ %2891, %2886 ]
  %2897 = and i64 %2846, 4294967295
  %2898 = getelementptr inbounds i32, ptr %6, i64 %2897
  %2899 = load i32, ptr %2898, align 4, !tbaa !6
  %2900 = mul nsw i32 %2899, %2896
  %2901 = add nsw i32 %2900, %2840
  %2902 = icmp sgt i64 %2838, 2
  %2903 = add nsw i64 %2839, -1
  %2904 = add i32 %2837, 1
  br i1 %2902, label %2836, label %2905, !llvm.loop !297

2905:                                             ; preds = %2895, %2832
  %2906 = phi i32 [ %2835, %2832 ], [ %2901, %2895 ]
  %2907 = sext i32 %2906 to i64
  %2908 = getelementptr inbounds i32, ptr %2501, i64 %2907
  %2909 = load i32, ptr %2908, align 4, !tbaa !6
  %2910 = load i32, ptr %2503, align 4, !tbaa !6
  %2911 = icmp slt i32 %2910, %2909
  br i1 %2911, label %2912, label %2913

2912:                                             ; preds = %2905
  store i32 %2909, ptr %2503, align 4, !tbaa !6
  br label %2913

2913:                                             ; preds = %2912, %2905
  %2914 = fadd fast double %2834, 1.000000e+00
  %2915 = add nuw nsw i32 %2833, 1
  br i1 %2826, label %2916, label %2963

2916:                                             ; preds = %2913
  %2917 = load i32, ptr %4, align 4, !tbaa !6
  %2918 = load i32, ptr %12, align 4, !tbaa !6
  %2919 = add nsw i32 %2918, -1
  %2920 = icmp slt i32 %2917, %2919
  br i1 %2920, label %2940, label %2921

2921:                                             ; preds = %2916
  %2922 = icmp eq i32 %2917, %2919
  br i1 %2922, label %2923, label %2956

2923:                                             ; preds = %2921
  store i32 0, ptr %4, align 4, !tbaa !6
  %2924 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2924, ptr %6, align 4, !tbaa !6
  br i1 %2831, label %2963, label %2925

2925:                                             ; preds = %2923, %2950
  %2926 = phi i64 [ %2954, %2950 ], [ 1, %2923 ]
  %2927 = getelementptr inbounds i32, ptr %4, i64 %2926
  %2928 = load i32, ptr %2927, align 4, !tbaa !6
  %2929 = getelementptr inbounds i32, ptr %12, i64 %2926
  %2930 = load i32, ptr %2929, align 4, !tbaa !6
  %2931 = add nsw i32 %2930, -1
  %2932 = icmp slt i32 %2928, %2931
  br i1 %2932, label %2933, label %2948

2933:                                             ; preds = %2925
  br i1 %2920, label %2940, label %2934

2934:                                             ; preds = %2933
  %2935 = getelementptr inbounds i32, ptr %7, i64 %2926
  %2936 = load i32, ptr %2935, align 4, !tbaa !6
  %2937 = getelementptr inbounds i32, ptr %6, i64 %2926
  %2938 = load i32, ptr %2937, align 4, !tbaa !6
  %2939 = add nsw i32 %2938, %2936
  store i32 %2939, ptr %2937, align 4, !tbaa !6
  br label %2958

2940:                                             ; preds = %2916, %2933
  %2941 = phi i32 [ %2928, %2933 ], [ %2917, %2916 ]
  %2942 = phi ptr [ %2927, %2933 ], [ %4, %2916 ]
  %2943 = phi i64 [ %2926, %2933 ], [ 0, %2916 ]
  %2944 = add nsw i32 %2941, 1
  store i32 %2944, ptr %2942, align 4, !tbaa !6
  %2945 = getelementptr inbounds i32, ptr %7, i64 %2943
  %2946 = load i32, ptr %2945, align 4, !tbaa !6
  %2947 = getelementptr inbounds i32, ptr %6, i64 %2943
  br label %2958

2948:                                             ; preds = %2925
  %2949 = icmp eq i32 %2928, %2931
  br i1 %2949, label %2950, label %2956

2950:                                             ; preds = %2948
  store i32 0, ptr %2927, align 4, !tbaa !6
  %2951 = getelementptr inbounds i32, ptr %8, i64 %2926
  %2952 = load i32, ptr %2951, align 4, !tbaa !6
  %2953 = getelementptr inbounds i32, ptr %6, i64 %2926
  store i32 %2952, ptr %2953, align 4, !tbaa !6
  %2954 = add nuw nsw i64 %2926, 1
  %2955 = icmp eq i64 %2954, %2829
  br i1 %2955, label %2963, label %2925, !llvm.loop !298

2956:                                             ; preds = %2921, %2948
  %2957 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 312, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5554

2958:                                             ; preds = %2934, %2940
  %2959 = phi ptr [ %2947, %2940 ], [ %2927, %2934 ]
  %2960 = phi i32 [ %2946, %2940 ], [ 1, %2934 ]
  %2961 = load i32, ptr %2959, align 4, !tbaa !6
  %2962 = add nsw i32 %2961, %2960
  store i32 %2962, ptr %2959, align 4, !tbaa !6
  br label %2963

2963:                                             ; preds = %2950, %2958, %2923, %2913
  %2964 = icmp eq i32 %2915, %5
  br i1 %2964, label %5549, label %2832, !llvm.loop !299

2965:                                             ; preds = %2815, %3101
  %2966 = phi i32 [ 0, %2815 ], [ %3050, %3101 ]
  %2967 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2816, label %2968, label %3037

2968:                                             ; preds = %2965, %3027
  %2969 = phi i32 [ %3036, %3027 ], [ 0, %2965 ]
  %2970 = phi i64 [ %2978, %3027 ], [ %2820, %2965 ]
  %2971 = phi i64 [ %3035, %3027 ], [ %2819, %2965 ]
  %2972 = phi i32 [ %3033, %3027 ], [ %2967, %2965 ]
  %2973 = sub i32 %2818, %2969
  %2974 = tail call i32 @llvm.smin.i32(i32 %2973, i32 0)
  %2975 = sub i32 %2973, %2974
  %2976 = zext i32 %2975 to i64
  %2977 = add nuw nsw i64 %2976, 1
  %2978 = add nsw i64 %2970, -1
  %2979 = icmp ult i32 %2975, 31
  br i1 %2979, label %3015, label %2980

2980:                                             ; preds = %2968
  %2981 = and i64 %2977, 8589934560
  %2982 = sub i64 %2971, %2981
  br label %2983

2983:                                             ; preds = %2983, %2980
  %2984 = phi i64 [ 0, %2980 ], [ %3007, %2983 ]
  %2985 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2980 ], [ %3003, %2983 ]
  %2986 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2980 ], [ %3004, %2983 ]
  %2987 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2980 ], [ %3005, %2983 ]
  %2988 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2980 ], [ %3006, %2983 ]
  %2989 = sub i64 %2971, %2984
  %2990 = getelementptr inbounds i32, ptr %11, i64 %2989
  %2991 = getelementptr inbounds i32, ptr %2990, i64 -7
  %2992 = load <8 x i32>, ptr %2991, align 4, !tbaa !6
  %2993 = shufflevector <8 x i32> %2992, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2994 = getelementptr inbounds i32, ptr %2990, i64 -15
  %2995 = load <8 x i32>, ptr %2994, align 4, !tbaa !6
  %2996 = shufflevector <8 x i32> %2995, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2997 = getelementptr inbounds i32, ptr %2990, i64 -23
  %2998 = load <8 x i32>, ptr %2997, align 4, !tbaa !6
  %2999 = shufflevector <8 x i32> %2998, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3000 = getelementptr inbounds i32, ptr %2990, i64 -31
  %3001 = load <8 x i32>, ptr %3000, align 4, !tbaa !6
  %3002 = shufflevector <8 x i32> %3001, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3003 = mul <8 x i32> %2993, %2985
  %3004 = mul <8 x i32> %2996, %2986
  %3005 = mul <8 x i32> %2999, %2987
  %3006 = mul <8 x i32> %3002, %2988
  %3007 = add nuw i64 %2984, 32
  %3008 = icmp eq i64 %3007, %2981
  br i1 %3008, label %3009, label %2983, !llvm.loop !300

3009:                                             ; preds = %2983
  %3010 = mul <8 x i32> %3004, %3003
  %3011 = mul <8 x i32> %3005, %3010
  %3012 = mul <8 x i32> %3006, %3011
  %3013 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3012)
  %3014 = icmp eq i64 %2977, %2981
  br i1 %3014, label %3027, label %3015

3015:                                             ; preds = %2968, %3009
  %3016 = phi i64 [ %2971, %2968 ], [ %2982, %3009 ]
  %3017 = phi i32 [ 1, %2968 ], [ %3013, %3009 ]
  br label %3018

3018:                                             ; preds = %3015, %3018
  %3019 = phi i64 [ %3024, %3018 ], [ %3016, %3015 ]
  %3020 = phi i32 [ %3023, %3018 ], [ %3017, %3015 ]
  %3021 = getelementptr inbounds i32, ptr %11, i64 %3019
  %3022 = load i32, ptr %3021, align 4, !tbaa !6
  %3023 = mul nsw i32 %3022, %3020
  %3024 = add nsw i64 %3019, -1
  %3025 = trunc i64 %3019 to i32
  %3026 = icmp sgt i32 %3025, 0
  br i1 %3026, label %3018, label %3027, !llvm.loop !301

3027:                                             ; preds = %3018, %3009
  %3028 = phi i32 [ %3013, %3009 ], [ %3023, %3018 ]
  %3029 = and i64 %2978, 4294967295
  %3030 = getelementptr inbounds i32, ptr %6, i64 %3029
  %3031 = load i32, ptr %3030, align 4, !tbaa !6
  %3032 = mul nsw i32 %3031, %3028
  %3033 = add nsw i32 %3032, %2972
  %3034 = icmp sgt i64 %2970, 2
  %3035 = add nsw i64 %2971, -1
  %3036 = add i32 %2969, 1
  br i1 %3034, label %2968, label %3037, !llvm.loop !302

3037:                                             ; preds = %3027, %2965
  %3038 = phi i32 [ %2967, %2965 ], [ %3033, %3027 ]
  %3039 = icmp slt i32 %3038, %5
  br i1 %3039, label %3042, label %3040

3040:                                             ; preds = %3037
  %3041 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 312, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5554

3042:                                             ; preds = %3037
  %3043 = sext i32 %3038 to i64
  %3044 = getelementptr inbounds i32, ptr %2501, i64 %3043
  %3045 = load i32, ptr %3044, align 4, !tbaa !6
  %3046 = load i32, ptr %2503, align 4, !tbaa !6
  %3047 = icmp slt i32 %3046, %3045
  br i1 %3047, label %3048, label %3049

3048:                                             ; preds = %3042
  store i32 %3045, ptr %2503, align 4, !tbaa !6
  br label %3049

3049:                                             ; preds = %3048, %3042
  %3050 = add nuw nsw i32 %2966, 1
  br i1 %2817, label %3051, label %3101

3051:                                             ; preds = %3049
  %3052 = load i32, ptr %4, align 4, !tbaa !6
  %3053 = load i32, ptr %12, align 4, !tbaa !6
  %3054 = add nsw i32 %3053, -1
  %3055 = icmp slt i32 %3052, %3054
  br i1 %3055, label %3078, label %3056

3056:                                             ; preds = %3051
  %3057 = icmp eq i32 %3052, %3054
  br i1 %3057, label %3058, label %3094

3058:                                             ; preds = %3056
  store i32 0, ptr %4, align 4, !tbaa !6
  %3059 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3059, ptr %6, align 4, !tbaa !6
  br i1 %2822, label %3101, label %3060

3060:                                             ; preds = %3058, %3088
  %3061 = phi i64 [ %3092, %3088 ], [ 1, %3058 ]
  %3062 = getelementptr inbounds i32, ptr %4, i64 %3061
  %3063 = load i32, ptr %3062, align 4, !tbaa !6
  %3064 = getelementptr inbounds i32, ptr %12, i64 %3061
  %3065 = load i32, ptr %3064, align 4, !tbaa !6
  %3066 = add nsw i32 %3065, -1
  %3067 = icmp slt i32 %3063, %3066
  br i1 %3067, label %3068, label %3086

3068:                                             ; preds = %3060
  br i1 %3055, label %3078, label %3069

3069:                                             ; preds = %3068
  %3070 = shl i64 %3061, 32
  %3071 = add i64 %3070, -4294967296
  %3072 = ashr exact i64 %3071, 32
  %3073 = getelementptr inbounds i32, ptr %7, i64 %3072
  %3074 = load i32, ptr %3073, align 4, !tbaa !6
  %3075 = getelementptr inbounds i32, ptr %6, i64 %3061
  %3076 = load i32, ptr %3075, align 4, !tbaa !6
  %3077 = add nsw i32 %3076, %3074
  store i32 %3077, ptr %3075, align 4, !tbaa !6
  br label %3096

3078:                                             ; preds = %3051, %3068
  %3079 = phi i32 [ %3063, %3068 ], [ %3052, %3051 ]
  %3080 = phi ptr [ %3062, %3068 ], [ %4, %3051 ]
  %3081 = phi i64 [ %3061, %3068 ], [ 0, %3051 ]
  %3082 = add nsw i32 %3079, 1
  store i32 %3082, ptr %3080, align 4, !tbaa !6
  %3083 = getelementptr inbounds i32, ptr %7, i64 %3081
  %3084 = load i32, ptr %3083, align 4, !tbaa !6
  %3085 = getelementptr inbounds i32, ptr %6, i64 %3081
  br label %3096

3086:                                             ; preds = %3060
  %3087 = icmp eq i32 %3063, %3066
  br i1 %3087, label %3088, label %3094

3088:                                             ; preds = %3086
  store i32 0, ptr %3062, align 4, !tbaa !6
  %3089 = getelementptr inbounds i32, ptr %8, i64 %3061
  %3090 = load i32, ptr %3089, align 4, !tbaa !6
  %3091 = getelementptr inbounds i32, ptr %6, i64 %3061
  store i32 %3090, ptr %3091, align 4, !tbaa !6
  %3092 = add nuw nsw i64 %3061, 1
  %3093 = icmp eq i64 %3092, %2820
  br i1 %3093, label %3101, label %3060, !llvm.loop !303

3094:                                             ; preds = %3056, %3086
  %3095 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 312, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5554

3096:                                             ; preds = %3069, %3078
  %3097 = phi ptr [ %3085, %3078 ], [ %3062, %3069 ]
  %3098 = phi i32 [ %3084, %3078 ], [ 1, %3069 ]
  %3099 = load i32, ptr %3097, align 4, !tbaa !6
  %3100 = add nsw i32 %3099, %3098
  store i32 %3100, ptr %3097, align 4, !tbaa !6
  br label %3101

3101:                                             ; preds = %3088, %3096, %3058, %3049
  %3102 = icmp eq i32 %3050, %5
  br i1 %3102, label %5549, label %2965, !llvm.loop !304

3103:                                             ; preds = %2510
  %3104 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 312, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5549

3105:                                             ; preds = %18
  %3106 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3107 = load ptr, ptr %3106, align 8, !tbaa !10
  %3108 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3109 = load ptr, ptr %3108, align 8, !tbaa !10
  %3110 = load i32, ptr %3107, align 4, !tbaa !6
  %3111 = sext i32 %3110 to i64
  store i64 %3111, ptr %3109, align 8, !tbaa !121
  %3112 = icmp eq i32 %13, 0
  br i1 %3112, label %5549, label %3113

3113:                                             ; preds = %3105
  switch i32 %1, label %3714 [
    i32 1, label %3114
    i32 0, label %3416
  ]

3114:                                             ; preds = %3113
  %3115 = getelementptr inbounds i32, ptr %3, i64 %19
  %3116 = load i32, ptr %3115, align 4, !tbaa !6
  %3117 = icmp eq i32 %3116, 0
  %3118 = icmp sgt i32 %5, 0
  br i1 %3117, label %3128, label %3119

3119:                                             ; preds = %3114
  br i1 %3118, label %3120, label %5549

3120:                                             ; preds = %3119
  %3121 = icmp sgt i32 %13, 1
  %3122 = icmp sgt i32 %13, 0
  %3123 = add i32 %13, -2
  %3124 = zext i32 %3123 to i64
  %3125 = zext i32 %13 to i64
  %3126 = add nuw i32 %5, 1
  %3127 = icmp eq i32 %13, 1
  br label %3276

3128:                                             ; preds = %3114
  br i1 %3118, label %3129, label %5549

3129:                                             ; preds = %3128
  %3130 = icmp sgt i32 %13, 1
  %3131 = icmp sgt i32 %13, 0
  %3132 = add i32 %13, -2
  %3133 = zext i32 %3132 to i64
  %3134 = zext i32 %13 to i64
  %3135 = add nuw i32 %5, 1
  %3136 = icmp eq i32 %13, 1
  br label %3137

3137:                                             ; preds = %3129, %3274
  %3138 = phi i64 [ %3111, %3129 ], [ %3224, %3274 ]
  %3139 = phi i32 [ 0, %3129 ], [ %3226, %3274 ]
  %3140 = phi double [ 0.000000e+00, %3129 ], [ %3225, %3274 ]
  %3141 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3130, label %3142, label %3211

3142:                                             ; preds = %3137, %3201
  %3143 = phi i32 [ %3210, %3201 ], [ 0, %3137 ]
  %3144 = phi i64 [ %3152, %3201 ], [ %3134, %3137 ]
  %3145 = phi i64 [ %3209, %3201 ], [ %3133, %3137 ]
  %3146 = phi i32 [ %3207, %3201 ], [ %3141, %3137 ]
  %3147 = sub i32 %3132, %3143
  %3148 = tail call i32 @llvm.smin.i32(i32 %3147, i32 0)
  %3149 = sub i32 %3147, %3148
  %3150 = zext i32 %3149 to i64
  %3151 = add nuw nsw i64 %3150, 1
  %3152 = add nsw i64 %3144, -1
  %3153 = icmp ult i32 %3149, 31
  br i1 %3153, label %3189, label %3154

3154:                                             ; preds = %3142
  %3155 = and i64 %3151, 8589934560
  %3156 = sub i64 %3145, %3155
  br label %3157

3157:                                             ; preds = %3157, %3154
  %3158 = phi i64 [ 0, %3154 ], [ %3181, %3157 ]
  %3159 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3154 ], [ %3177, %3157 ]
  %3160 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3154 ], [ %3178, %3157 ]
  %3161 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3154 ], [ %3179, %3157 ]
  %3162 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3154 ], [ %3180, %3157 ]
  %3163 = sub i64 %3145, %3158
  %3164 = getelementptr inbounds i32, ptr %9, i64 %3163
  %3165 = getelementptr inbounds i32, ptr %3164, i64 -7
  %3166 = load <8 x i32>, ptr %3165, align 4, !tbaa !6
  %3167 = shufflevector <8 x i32> %3166, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3168 = getelementptr inbounds i32, ptr %3164, i64 -15
  %3169 = load <8 x i32>, ptr %3168, align 4, !tbaa !6
  %3170 = shufflevector <8 x i32> %3169, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3171 = getelementptr inbounds i32, ptr %3164, i64 -23
  %3172 = load <8 x i32>, ptr %3171, align 4, !tbaa !6
  %3173 = shufflevector <8 x i32> %3172, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3174 = getelementptr inbounds i32, ptr %3164, i64 -31
  %3175 = load <8 x i32>, ptr %3174, align 4, !tbaa !6
  %3176 = shufflevector <8 x i32> %3175, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3177 = mul <8 x i32> %3167, %3159
  %3178 = mul <8 x i32> %3170, %3160
  %3179 = mul <8 x i32> %3173, %3161
  %3180 = mul <8 x i32> %3176, %3162
  %3181 = add nuw i64 %3158, 32
  %3182 = icmp eq i64 %3181, %3155
  br i1 %3182, label %3183, label %3157, !llvm.loop !305

3183:                                             ; preds = %3157
  %3184 = mul <8 x i32> %3178, %3177
  %3185 = mul <8 x i32> %3179, %3184
  %3186 = mul <8 x i32> %3180, %3185
  %3187 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3186)
  %3188 = icmp eq i64 %3151, %3155
  br i1 %3188, label %3201, label %3189

3189:                                             ; preds = %3142, %3183
  %3190 = phi i64 [ %3145, %3142 ], [ %3156, %3183 ]
  %3191 = phi i32 [ 1, %3142 ], [ %3187, %3183 ]
  br label %3192

3192:                                             ; preds = %3189, %3192
  %3193 = phi i64 [ %3198, %3192 ], [ %3190, %3189 ]
  %3194 = phi i32 [ %3197, %3192 ], [ %3191, %3189 ]
  %3195 = getelementptr inbounds i32, ptr %9, i64 %3193
  %3196 = load i32, ptr %3195, align 4, !tbaa !6
  %3197 = mul nsw i32 %3196, %3194
  %3198 = add nsw i64 %3193, -1
  %3199 = trunc i64 %3193 to i32
  %3200 = icmp sgt i32 %3199, 0
  br i1 %3200, label %3192, label %3201, !llvm.loop !306

3201:                                             ; preds = %3192, %3183
  %3202 = phi i32 [ %3187, %3183 ], [ %3197, %3192 ]
  %3203 = and i64 %3152, 4294967295
  %3204 = getelementptr inbounds i32, ptr %6, i64 %3203
  %3205 = load i32, ptr %3204, align 4, !tbaa !6
  %3206 = mul nsw i32 %3205, %3202
  %3207 = add nsw i32 %3206, %3146
  %3208 = icmp sgt i64 %3144, 2
  %3209 = add nsw i64 %3145, -1
  %3210 = add i32 %3143, 1
  br i1 %3208, label %3142, label %3211, !llvm.loop !307

3211:                                             ; preds = %3201, %3137
  %3212 = phi i32 [ %3141, %3137 ], [ %3207, %3201 ]
  %3213 = sext i32 %3212 to i64
  %3214 = getelementptr inbounds double, ptr %2, i64 %3213
  %3215 = load double, ptr %3214, align 8, !tbaa !19
  %3216 = getelementptr inbounds i32, ptr %3107, i64 %3213
  %3217 = load i32, ptr %3216, align 4, !tbaa !6
  %3218 = sext i32 %3217 to i64
  %3219 = fcmp fast one double %3215, 0.000000e+00
  %3220 = icmp slt i64 %3138, %3218
  %3221 = select i1 %3219, i1 %3220, i1 false
  br i1 %3221, label %3222, label %3223

3222:                                             ; preds = %3211
  store i64 %3218, ptr %3109, align 8, !tbaa !121
  br label %3223

3223:                                             ; preds = %3222, %3211
  %3224 = phi i64 [ %3218, %3222 ], [ %3138, %3211 ]
  %3225 = fadd fast double %3215, %3140
  %3226 = add nuw nsw i32 %3139, 1
  br i1 %3131, label %3227, label %3274

3227:                                             ; preds = %3223
  %3228 = load i32, ptr %4, align 4, !tbaa !6
  %3229 = load i32, ptr %12, align 4, !tbaa !6
  %3230 = add nsw i32 %3229, -1
  %3231 = icmp slt i32 %3228, %3230
  br i1 %3231, label %3251, label %3232

3232:                                             ; preds = %3227
  %3233 = icmp eq i32 %3228, %3230
  br i1 %3233, label %3234, label %3267

3234:                                             ; preds = %3232
  store i32 0, ptr %4, align 4, !tbaa !6
  %3235 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3235, ptr %6, align 4, !tbaa !6
  br i1 %3136, label %3274, label %3236

3236:                                             ; preds = %3234, %3261
  %3237 = phi i64 [ %3265, %3261 ], [ 1, %3234 ]
  %3238 = getelementptr inbounds i32, ptr %4, i64 %3237
  %3239 = load i32, ptr %3238, align 4, !tbaa !6
  %3240 = getelementptr inbounds i32, ptr %12, i64 %3237
  %3241 = load i32, ptr %3240, align 4, !tbaa !6
  %3242 = add nsw i32 %3241, -1
  %3243 = icmp slt i32 %3239, %3242
  br i1 %3243, label %3244, label %3259

3244:                                             ; preds = %3236
  br i1 %3231, label %3251, label %3245

3245:                                             ; preds = %3244
  %3246 = getelementptr inbounds i32, ptr %7, i64 %3237
  %3247 = load i32, ptr %3246, align 4, !tbaa !6
  %3248 = getelementptr inbounds i32, ptr %6, i64 %3237
  %3249 = load i32, ptr %3248, align 4, !tbaa !6
  %3250 = add nsw i32 %3249, %3247
  store i32 %3250, ptr %3248, align 4, !tbaa !6
  br label %3269

3251:                                             ; preds = %3227, %3244
  %3252 = phi i32 [ %3239, %3244 ], [ %3228, %3227 ]
  %3253 = phi ptr [ %3238, %3244 ], [ %4, %3227 ]
  %3254 = phi i64 [ %3237, %3244 ], [ 0, %3227 ]
  %3255 = add nsw i32 %3252, 1
  store i32 %3255, ptr %3253, align 4, !tbaa !6
  %3256 = getelementptr inbounds i32, ptr %7, i64 %3254
  %3257 = load i32, ptr %3256, align 4, !tbaa !6
  %3258 = getelementptr inbounds i32, ptr %6, i64 %3254
  br label %3269

3259:                                             ; preds = %3236
  %3260 = icmp eq i32 %3239, %3242
  br i1 %3260, label %3261, label %3267

3261:                                             ; preds = %3259
  store i32 0, ptr %3238, align 4, !tbaa !6
  %3262 = getelementptr inbounds i32, ptr %8, i64 %3237
  %3263 = load i32, ptr %3262, align 4, !tbaa !6
  %3264 = getelementptr inbounds i32, ptr %6, i64 %3237
  store i32 %3263, ptr %3264, align 4, !tbaa !6
  %3265 = add nuw nsw i64 %3237, 1
  %3266 = icmp eq i64 %3265, %3134
  br i1 %3266, label %3274, label %3236, !llvm.loop !308

3267:                                             ; preds = %3232, %3259
  %3268 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 317, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5554

3269:                                             ; preds = %3245, %3251
  %3270 = phi ptr [ %3258, %3251 ], [ %3238, %3245 ]
  %3271 = phi i32 [ %3257, %3251 ], [ 1, %3245 ]
  %3272 = load i32, ptr %3270, align 4, !tbaa !6
  %3273 = add nsw i32 %3272, %3271
  store i32 %3273, ptr %3270, align 4, !tbaa !6
  br label %3274

3274:                                             ; preds = %3261, %3269, %3234, %3223
  %3275 = icmp eq i32 %3226, %5
  br i1 %3275, label %5549, label %3137, !llvm.loop !309

3276:                                             ; preds = %3120, %3414
  %3277 = phi i64 [ %3111, %3120 ], [ %3362, %3414 ]
  %3278 = phi i32 [ 0, %3120 ], [ %3363, %3414 ]
  %3279 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3121, label %3280, label %3349

3280:                                             ; preds = %3276, %3339
  %3281 = phi i32 [ %3348, %3339 ], [ 0, %3276 ]
  %3282 = phi i64 [ %3290, %3339 ], [ %3125, %3276 ]
  %3283 = phi i64 [ %3347, %3339 ], [ %3124, %3276 ]
  %3284 = phi i32 [ %3345, %3339 ], [ %3279, %3276 ]
  %3285 = sub i32 %3123, %3281
  %3286 = tail call i32 @llvm.smin.i32(i32 %3285, i32 0)
  %3287 = sub i32 %3285, %3286
  %3288 = zext i32 %3287 to i64
  %3289 = add nuw nsw i64 %3288, 1
  %3290 = add nsw i64 %3282, -1
  %3291 = icmp ult i32 %3287, 31
  br i1 %3291, label %3327, label %3292

3292:                                             ; preds = %3280
  %3293 = and i64 %3289, 8589934560
  %3294 = sub i64 %3283, %3293
  br label %3295

3295:                                             ; preds = %3295, %3292
  %3296 = phi i64 [ 0, %3292 ], [ %3319, %3295 ]
  %3297 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3292 ], [ %3315, %3295 ]
  %3298 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3292 ], [ %3316, %3295 ]
  %3299 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3292 ], [ %3317, %3295 ]
  %3300 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3292 ], [ %3318, %3295 ]
  %3301 = sub i64 %3283, %3296
  %3302 = getelementptr inbounds i32, ptr %11, i64 %3301
  %3303 = getelementptr inbounds i32, ptr %3302, i64 -7
  %3304 = load <8 x i32>, ptr %3303, align 4, !tbaa !6
  %3305 = shufflevector <8 x i32> %3304, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3306 = getelementptr inbounds i32, ptr %3302, i64 -15
  %3307 = load <8 x i32>, ptr %3306, align 4, !tbaa !6
  %3308 = shufflevector <8 x i32> %3307, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3309 = getelementptr inbounds i32, ptr %3302, i64 -23
  %3310 = load <8 x i32>, ptr %3309, align 4, !tbaa !6
  %3311 = shufflevector <8 x i32> %3310, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3312 = getelementptr inbounds i32, ptr %3302, i64 -31
  %3313 = load <8 x i32>, ptr %3312, align 4, !tbaa !6
  %3314 = shufflevector <8 x i32> %3313, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3315 = mul <8 x i32> %3305, %3297
  %3316 = mul <8 x i32> %3308, %3298
  %3317 = mul <8 x i32> %3311, %3299
  %3318 = mul <8 x i32> %3314, %3300
  %3319 = add nuw i64 %3296, 32
  %3320 = icmp eq i64 %3319, %3293
  br i1 %3320, label %3321, label %3295, !llvm.loop !310

3321:                                             ; preds = %3295
  %3322 = mul <8 x i32> %3316, %3315
  %3323 = mul <8 x i32> %3317, %3322
  %3324 = mul <8 x i32> %3318, %3323
  %3325 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3324)
  %3326 = icmp eq i64 %3289, %3293
  br i1 %3326, label %3339, label %3327

3327:                                             ; preds = %3280, %3321
  %3328 = phi i64 [ %3283, %3280 ], [ %3294, %3321 ]
  %3329 = phi i32 [ 1, %3280 ], [ %3325, %3321 ]
  br label %3330

3330:                                             ; preds = %3327, %3330
  %3331 = phi i64 [ %3336, %3330 ], [ %3328, %3327 ]
  %3332 = phi i32 [ %3335, %3330 ], [ %3329, %3327 ]
  %3333 = getelementptr inbounds i32, ptr %11, i64 %3331
  %3334 = load i32, ptr %3333, align 4, !tbaa !6
  %3335 = mul nsw i32 %3334, %3332
  %3336 = add nsw i64 %3331, -1
  %3337 = trunc i64 %3331 to i32
  %3338 = icmp sgt i32 %3337, 0
  br i1 %3338, label %3330, label %3339, !llvm.loop !311

3339:                                             ; preds = %3330, %3321
  %3340 = phi i32 [ %3325, %3321 ], [ %3335, %3330 ]
  %3341 = and i64 %3290, 4294967295
  %3342 = getelementptr inbounds i32, ptr %6, i64 %3341
  %3343 = load i32, ptr %3342, align 4, !tbaa !6
  %3344 = mul nsw i32 %3343, %3340
  %3345 = add nsw i32 %3344, %3284
  %3346 = icmp sgt i64 %3282, 2
  %3347 = add nsw i64 %3283, -1
  %3348 = add i32 %3281, 1
  br i1 %3346, label %3280, label %3349, !llvm.loop !312

3349:                                             ; preds = %3339, %3276
  %3350 = phi i32 [ %3279, %3276 ], [ %3345, %3339 ]
  %3351 = icmp slt i32 %3350, %5
  br i1 %3351, label %3354, label %3352

3352:                                             ; preds = %3349
  %3353 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 317, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5554

3354:                                             ; preds = %3349
  %3355 = sext i32 %3350 to i64
  %3356 = getelementptr inbounds i32, ptr %3107, i64 %3355
  %3357 = load i32, ptr %3356, align 4, !tbaa !6
  %3358 = sext i32 %3357 to i64
  %3359 = icmp slt i64 %3277, %3358
  br i1 %3359, label %3360, label %3361

3360:                                             ; preds = %3354
  store i64 %3358, ptr %3109, align 8, !tbaa !121
  br label %3361

3361:                                             ; preds = %3354, %3360
  %3362 = phi i64 [ %3277, %3354 ], [ %3358, %3360 ]
  %3363 = add nuw nsw i32 %3278, 1
  br i1 %3122, label %3364, label %3414

3364:                                             ; preds = %3361
  %3365 = load i32, ptr %4, align 4, !tbaa !6
  %3366 = load i32, ptr %12, align 4, !tbaa !6
  %3367 = add nsw i32 %3366, -1
  %3368 = icmp slt i32 %3365, %3367
  br i1 %3368, label %3391, label %3369

3369:                                             ; preds = %3364
  %3370 = icmp eq i32 %3365, %3367
  br i1 %3370, label %3371, label %3407

3371:                                             ; preds = %3369
  store i32 0, ptr %4, align 4, !tbaa !6
  %3372 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3372, ptr %6, align 4, !tbaa !6
  br i1 %3127, label %3414, label %3373

3373:                                             ; preds = %3371, %3401
  %3374 = phi i64 [ %3405, %3401 ], [ 1, %3371 ]
  %3375 = getelementptr inbounds i32, ptr %4, i64 %3374
  %3376 = load i32, ptr %3375, align 4, !tbaa !6
  %3377 = getelementptr inbounds i32, ptr %12, i64 %3374
  %3378 = load i32, ptr %3377, align 4, !tbaa !6
  %3379 = add nsw i32 %3378, -1
  %3380 = icmp slt i32 %3376, %3379
  br i1 %3380, label %3381, label %3399

3381:                                             ; preds = %3373
  br i1 %3368, label %3391, label %3382

3382:                                             ; preds = %3381
  %3383 = shl i64 %3374, 32
  %3384 = add i64 %3383, -4294967296
  %3385 = ashr exact i64 %3384, 32
  %3386 = getelementptr inbounds i32, ptr %7, i64 %3385
  %3387 = load i32, ptr %3386, align 4, !tbaa !6
  %3388 = getelementptr inbounds i32, ptr %6, i64 %3374
  %3389 = load i32, ptr %3388, align 4, !tbaa !6
  %3390 = add nsw i32 %3389, %3387
  store i32 %3390, ptr %3388, align 4, !tbaa !6
  br label %3409

3391:                                             ; preds = %3364, %3381
  %3392 = phi i32 [ %3376, %3381 ], [ %3365, %3364 ]
  %3393 = phi ptr [ %3375, %3381 ], [ %4, %3364 ]
  %3394 = phi i64 [ %3374, %3381 ], [ 0, %3364 ]
  %3395 = add nsw i32 %3392, 1
  store i32 %3395, ptr %3393, align 4, !tbaa !6
  %3396 = getelementptr inbounds i32, ptr %7, i64 %3394
  %3397 = load i32, ptr %3396, align 4, !tbaa !6
  %3398 = getelementptr inbounds i32, ptr %6, i64 %3394
  br label %3409

3399:                                             ; preds = %3373
  %3400 = icmp eq i32 %3376, %3379
  br i1 %3400, label %3401, label %3407

3401:                                             ; preds = %3399
  store i32 0, ptr %3375, align 4, !tbaa !6
  %3402 = getelementptr inbounds i32, ptr %8, i64 %3374
  %3403 = load i32, ptr %3402, align 4, !tbaa !6
  %3404 = getelementptr inbounds i32, ptr %6, i64 %3374
  store i32 %3403, ptr %3404, align 4, !tbaa !6
  %3405 = add nuw nsw i64 %3374, 1
  %3406 = icmp eq i64 %3405, %3125
  br i1 %3406, label %3414, label %3373, !llvm.loop !313

3407:                                             ; preds = %3369, %3399
  %3408 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 317, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5554

3409:                                             ; preds = %3382, %3391
  %3410 = phi ptr [ %3398, %3391 ], [ %3375, %3382 ]
  %3411 = phi i32 [ %3397, %3391 ], [ 1, %3382 ]
  %3412 = load i32, ptr %3410, align 4, !tbaa !6
  %3413 = add nsw i32 %3412, %3411
  store i32 %3413, ptr %3410, align 4, !tbaa !6
  br label %3414

3414:                                             ; preds = %3401, %3409, %3371, %3361
  %3415 = icmp eq i32 %3363, %5
  br i1 %3415, label %5549, label %3276, !llvm.loop !314

3416:                                             ; preds = %3113
  %3417 = getelementptr inbounds i32, ptr %3, i64 %19
  %3418 = load i32, ptr %3417, align 4, !tbaa !6
  %3419 = icmp eq i32 %3418, 0
  %3420 = icmp sgt i32 %5, 0
  br i1 %3419, label %3430, label %3421

3421:                                             ; preds = %3416
  br i1 %3420, label %3422, label %5549

3422:                                             ; preds = %3421
  %3423 = icmp sgt i32 %13, 1
  %3424 = icmp sgt i32 %13, 0
  %3425 = add i32 %13, -2
  %3426 = zext i32 %3425 to i64
  %3427 = zext i32 %13 to i64
  %3428 = add nuw i32 %5, 1
  %3429 = icmp eq i32 %13, 1
  br label %3574

3430:                                             ; preds = %3416
  br i1 %3420, label %3431, label %5549

3431:                                             ; preds = %3430
  %3432 = icmp sgt i32 %13, 1
  %3433 = icmp sgt i32 %13, 0
  %3434 = add i32 %13, -2
  %3435 = zext i32 %3434 to i64
  %3436 = zext i32 %13 to i64
  %3437 = add nuw i32 %5, 1
  %3438 = icmp eq i32 %13, 1
  br label %3439

3439:                                             ; preds = %3431, %3572
  %3440 = phi i64 [ %3111, %3431 ], [ %3522, %3572 ]
  %3441 = phi i32 [ 0, %3431 ], [ %3524, %3572 ]
  %3442 = phi double [ 0.000000e+00, %3431 ], [ %3523, %3572 ]
  %3443 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3432, label %3444, label %3513

3444:                                             ; preds = %3439, %3503
  %3445 = phi i32 [ %3512, %3503 ], [ 0, %3439 ]
  %3446 = phi i64 [ %3454, %3503 ], [ %3436, %3439 ]
  %3447 = phi i64 [ %3511, %3503 ], [ %3435, %3439 ]
  %3448 = phi i32 [ %3509, %3503 ], [ %3443, %3439 ]
  %3449 = sub i32 %3434, %3445
  %3450 = tail call i32 @llvm.smin.i32(i32 %3449, i32 0)
  %3451 = sub i32 %3449, %3450
  %3452 = zext i32 %3451 to i64
  %3453 = add nuw nsw i64 %3452, 1
  %3454 = add nsw i64 %3446, -1
  %3455 = icmp ult i32 %3451, 31
  br i1 %3455, label %3491, label %3456

3456:                                             ; preds = %3444
  %3457 = and i64 %3453, 8589934560
  %3458 = sub i64 %3447, %3457
  br label %3459

3459:                                             ; preds = %3459, %3456
  %3460 = phi i64 [ 0, %3456 ], [ %3483, %3459 ]
  %3461 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3456 ], [ %3479, %3459 ]
  %3462 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3456 ], [ %3480, %3459 ]
  %3463 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3456 ], [ %3481, %3459 ]
  %3464 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3456 ], [ %3482, %3459 ]
  %3465 = sub i64 %3447, %3460
  %3466 = getelementptr inbounds i32, ptr %9, i64 %3465
  %3467 = getelementptr inbounds i32, ptr %3466, i64 -7
  %3468 = load <8 x i32>, ptr %3467, align 4, !tbaa !6
  %3469 = shufflevector <8 x i32> %3468, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3470 = getelementptr inbounds i32, ptr %3466, i64 -15
  %3471 = load <8 x i32>, ptr %3470, align 4, !tbaa !6
  %3472 = shufflevector <8 x i32> %3471, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3473 = getelementptr inbounds i32, ptr %3466, i64 -23
  %3474 = load <8 x i32>, ptr %3473, align 4, !tbaa !6
  %3475 = shufflevector <8 x i32> %3474, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3476 = getelementptr inbounds i32, ptr %3466, i64 -31
  %3477 = load <8 x i32>, ptr %3476, align 4, !tbaa !6
  %3478 = shufflevector <8 x i32> %3477, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3479 = mul <8 x i32> %3469, %3461
  %3480 = mul <8 x i32> %3472, %3462
  %3481 = mul <8 x i32> %3475, %3463
  %3482 = mul <8 x i32> %3478, %3464
  %3483 = add nuw i64 %3460, 32
  %3484 = icmp eq i64 %3483, %3457
  br i1 %3484, label %3485, label %3459, !llvm.loop !315

3485:                                             ; preds = %3459
  %3486 = mul <8 x i32> %3480, %3479
  %3487 = mul <8 x i32> %3481, %3486
  %3488 = mul <8 x i32> %3482, %3487
  %3489 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3488)
  %3490 = icmp eq i64 %3453, %3457
  br i1 %3490, label %3503, label %3491

3491:                                             ; preds = %3444, %3485
  %3492 = phi i64 [ %3447, %3444 ], [ %3458, %3485 ]
  %3493 = phi i32 [ 1, %3444 ], [ %3489, %3485 ]
  br label %3494

3494:                                             ; preds = %3491, %3494
  %3495 = phi i64 [ %3500, %3494 ], [ %3492, %3491 ]
  %3496 = phi i32 [ %3499, %3494 ], [ %3493, %3491 ]
  %3497 = getelementptr inbounds i32, ptr %9, i64 %3495
  %3498 = load i32, ptr %3497, align 4, !tbaa !6
  %3499 = mul nsw i32 %3498, %3496
  %3500 = add nsw i64 %3495, -1
  %3501 = trunc i64 %3495 to i32
  %3502 = icmp sgt i32 %3501, 0
  br i1 %3502, label %3494, label %3503, !llvm.loop !316

3503:                                             ; preds = %3494, %3485
  %3504 = phi i32 [ %3489, %3485 ], [ %3499, %3494 ]
  %3505 = and i64 %3454, 4294967295
  %3506 = getelementptr inbounds i32, ptr %6, i64 %3505
  %3507 = load i32, ptr %3506, align 4, !tbaa !6
  %3508 = mul nsw i32 %3507, %3504
  %3509 = add nsw i32 %3508, %3448
  %3510 = icmp sgt i64 %3446, 2
  %3511 = add nsw i64 %3447, -1
  %3512 = add i32 %3445, 1
  br i1 %3510, label %3444, label %3513, !llvm.loop !317

3513:                                             ; preds = %3503, %3439
  %3514 = phi i32 [ %3443, %3439 ], [ %3509, %3503 ]
  %3515 = sext i32 %3514 to i64
  %3516 = getelementptr inbounds i32, ptr %3107, i64 %3515
  %3517 = load i32, ptr %3516, align 4, !tbaa !6
  %3518 = sext i32 %3517 to i64
  %3519 = icmp slt i64 %3440, %3518
  br i1 %3519, label %3520, label %3521

3520:                                             ; preds = %3513
  store i64 %3518, ptr %3109, align 8, !tbaa !121
  br label %3521

3521:                                             ; preds = %3520, %3513
  %3522 = phi i64 [ %3518, %3520 ], [ %3440, %3513 ]
  %3523 = fadd fast double %3442, 1.000000e+00
  %3524 = add nuw nsw i32 %3441, 1
  br i1 %3433, label %3525, label %3572

3525:                                             ; preds = %3521
  %3526 = load i32, ptr %4, align 4, !tbaa !6
  %3527 = load i32, ptr %12, align 4, !tbaa !6
  %3528 = add nsw i32 %3527, -1
  %3529 = icmp slt i32 %3526, %3528
  br i1 %3529, label %3549, label %3530

3530:                                             ; preds = %3525
  %3531 = icmp eq i32 %3526, %3528
  br i1 %3531, label %3532, label %3565

3532:                                             ; preds = %3530
  store i32 0, ptr %4, align 4, !tbaa !6
  %3533 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3533, ptr %6, align 4, !tbaa !6
  br i1 %3438, label %3572, label %3534

3534:                                             ; preds = %3532, %3559
  %3535 = phi i64 [ %3563, %3559 ], [ 1, %3532 ]
  %3536 = getelementptr inbounds i32, ptr %4, i64 %3535
  %3537 = load i32, ptr %3536, align 4, !tbaa !6
  %3538 = getelementptr inbounds i32, ptr %12, i64 %3535
  %3539 = load i32, ptr %3538, align 4, !tbaa !6
  %3540 = add nsw i32 %3539, -1
  %3541 = icmp slt i32 %3537, %3540
  br i1 %3541, label %3542, label %3557

3542:                                             ; preds = %3534
  br i1 %3529, label %3549, label %3543

3543:                                             ; preds = %3542
  %3544 = getelementptr inbounds i32, ptr %7, i64 %3535
  %3545 = load i32, ptr %3544, align 4, !tbaa !6
  %3546 = getelementptr inbounds i32, ptr %6, i64 %3535
  %3547 = load i32, ptr %3546, align 4, !tbaa !6
  %3548 = add nsw i32 %3547, %3545
  store i32 %3548, ptr %3546, align 4, !tbaa !6
  br label %3567

3549:                                             ; preds = %3525, %3542
  %3550 = phi i32 [ %3537, %3542 ], [ %3526, %3525 ]
  %3551 = phi ptr [ %3536, %3542 ], [ %4, %3525 ]
  %3552 = phi i64 [ %3535, %3542 ], [ 0, %3525 ]
  %3553 = add nsw i32 %3550, 1
  store i32 %3553, ptr %3551, align 4, !tbaa !6
  %3554 = getelementptr inbounds i32, ptr %7, i64 %3552
  %3555 = load i32, ptr %3554, align 4, !tbaa !6
  %3556 = getelementptr inbounds i32, ptr %6, i64 %3552
  br label %3567

3557:                                             ; preds = %3534
  %3558 = icmp eq i32 %3537, %3540
  br i1 %3558, label %3559, label %3565

3559:                                             ; preds = %3557
  store i32 0, ptr %3536, align 4, !tbaa !6
  %3560 = getelementptr inbounds i32, ptr %8, i64 %3535
  %3561 = load i32, ptr %3560, align 4, !tbaa !6
  %3562 = getelementptr inbounds i32, ptr %6, i64 %3535
  store i32 %3561, ptr %3562, align 4, !tbaa !6
  %3563 = add nuw nsw i64 %3535, 1
  %3564 = icmp eq i64 %3563, %3436
  br i1 %3564, label %3572, label %3534, !llvm.loop !318

3565:                                             ; preds = %3530, %3557
  %3566 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 317, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5554

3567:                                             ; preds = %3543, %3549
  %3568 = phi ptr [ %3556, %3549 ], [ %3536, %3543 ]
  %3569 = phi i32 [ %3555, %3549 ], [ 1, %3543 ]
  %3570 = load i32, ptr %3568, align 4, !tbaa !6
  %3571 = add nsw i32 %3570, %3569
  store i32 %3571, ptr %3568, align 4, !tbaa !6
  br label %3572

3572:                                             ; preds = %3559, %3567, %3532, %3521
  %3573 = icmp eq i32 %3524, %5
  br i1 %3573, label %5549, label %3439, !llvm.loop !319

3574:                                             ; preds = %3422, %3712
  %3575 = phi i64 [ %3111, %3422 ], [ %3660, %3712 ]
  %3576 = phi i32 [ 0, %3422 ], [ %3661, %3712 ]
  %3577 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3423, label %3578, label %3647

3578:                                             ; preds = %3574, %3637
  %3579 = phi i32 [ %3646, %3637 ], [ 0, %3574 ]
  %3580 = phi i64 [ %3588, %3637 ], [ %3427, %3574 ]
  %3581 = phi i64 [ %3645, %3637 ], [ %3426, %3574 ]
  %3582 = phi i32 [ %3643, %3637 ], [ %3577, %3574 ]
  %3583 = sub i32 %3425, %3579
  %3584 = tail call i32 @llvm.smin.i32(i32 %3583, i32 0)
  %3585 = sub i32 %3583, %3584
  %3586 = zext i32 %3585 to i64
  %3587 = add nuw nsw i64 %3586, 1
  %3588 = add nsw i64 %3580, -1
  %3589 = icmp ult i32 %3585, 31
  br i1 %3589, label %3625, label %3590

3590:                                             ; preds = %3578
  %3591 = and i64 %3587, 8589934560
  %3592 = sub i64 %3581, %3591
  br label %3593

3593:                                             ; preds = %3593, %3590
  %3594 = phi i64 [ 0, %3590 ], [ %3617, %3593 ]
  %3595 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3590 ], [ %3613, %3593 ]
  %3596 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3590 ], [ %3614, %3593 ]
  %3597 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3590 ], [ %3615, %3593 ]
  %3598 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3590 ], [ %3616, %3593 ]
  %3599 = sub i64 %3581, %3594
  %3600 = getelementptr inbounds i32, ptr %11, i64 %3599
  %3601 = getelementptr inbounds i32, ptr %3600, i64 -7
  %3602 = load <8 x i32>, ptr %3601, align 4, !tbaa !6
  %3603 = shufflevector <8 x i32> %3602, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3604 = getelementptr inbounds i32, ptr %3600, i64 -15
  %3605 = load <8 x i32>, ptr %3604, align 4, !tbaa !6
  %3606 = shufflevector <8 x i32> %3605, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3607 = getelementptr inbounds i32, ptr %3600, i64 -23
  %3608 = load <8 x i32>, ptr %3607, align 4, !tbaa !6
  %3609 = shufflevector <8 x i32> %3608, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3610 = getelementptr inbounds i32, ptr %3600, i64 -31
  %3611 = load <8 x i32>, ptr %3610, align 4, !tbaa !6
  %3612 = shufflevector <8 x i32> %3611, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3613 = mul <8 x i32> %3603, %3595
  %3614 = mul <8 x i32> %3606, %3596
  %3615 = mul <8 x i32> %3609, %3597
  %3616 = mul <8 x i32> %3612, %3598
  %3617 = add nuw i64 %3594, 32
  %3618 = icmp eq i64 %3617, %3591
  br i1 %3618, label %3619, label %3593, !llvm.loop !320

3619:                                             ; preds = %3593
  %3620 = mul <8 x i32> %3614, %3613
  %3621 = mul <8 x i32> %3615, %3620
  %3622 = mul <8 x i32> %3616, %3621
  %3623 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3622)
  %3624 = icmp eq i64 %3587, %3591
  br i1 %3624, label %3637, label %3625

3625:                                             ; preds = %3578, %3619
  %3626 = phi i64 [ %3581, %3578 ], [ %3592, %3619 ]
  %3627 = phi i32 [ 1, %3578 ], [ %3623, %3619 ]
  br label %3628

3628:                                             ; preds = %3625, %3628
  %3629 = phi i64 [ %3634, %3628 ], [ %3626, %3625 ]
  %3630 = phi i32 [ %3633, %3628 ], [ %3627, %3625 ]
  %3631 = getelementptr inbounds i32, ptr %11, i64 %3629
  %3632 = load i32, ptr %3631, align 4, !tbaa !6
  %3633 = mul nsw i32 %3632, %3630
  %3634 = add nsw i64 %3629, -1
  %3635 = trunc i64 %3629 to i32
  %3636 = icmp sgt i32 %3635, 0
  br i1 %3636, label %3628, label %3637, !llvm.loop !321

3637:                                             ; preds = %3628, %3619
  %3638 = phi i32 [ %3623, %3619 ], [ %3633, %3628 ]
  %3639 = and i64 %3588, 4294967295
  %3640 = getelementptr inbounds i32, ptr %6, i64 %3639
  %3641 = load i32, ptr %3640, align 4, !tbaa !6
  %3642 = mul nsw i32 %3641, %3638
  %3643 = add nsw i32 %3642, %3582
  %3644 = icmp sgt i64 %3580, 2
  %3645 = add nsw i64 %3581, -1
  %3646 = add i32 %3579, 1
  br i1 %3644, label %3578, label %3647, !llvm.loop !322

3647:                                             ; preds = %3637, %3574
  %3648 = phi i32 [ %3577, %3574 ], [ %3643, %3637 ]
  %3649 = icmp slt i32 %3648, %5
  br i1 %3649, label %3652, label %3650

3650:                                             ; preds = %3647
  %3651 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 317, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5554

3652:                                             ; preds = %3647
  %3653 = sext i32 %3648 to i64
  %3654 = getelementptr inbounds i32, ptr %3107, i64 %3653
  %3655 = load i32, ptr %3654, align 4, !tbaa !6
  %3656 = sext i32 %3655 to i64
  %3657 = icmp slt i64 %3575, %3656
  br i1 %3657, label %3658, label %3659

3658:                                             ; preds = %3652
  store i64 %3656, ptr %3109, align 8, !tbaa !121
  br label %3659

3659:                                             ; preds = %3658, %3652
  %3660 = phi i64 [ %3656, %3658 ], [ %3575, %3652 ]
  %3661 = add nuw nsw i32 %3576, 1
  br i1 %3424, label %3662, label %3712

3662:                                             ; preds = %3659
  %3663 = load i32, ptr %4, align 4, !tbaa !6
  %3664 = load i32, ptr %12, align 4, !tbaa !6
  %3665 = add nsw i32 %3664, -1
  %3666 = icmp slt i32 %3663, %3665
  br i1 %3666, label %3689, label %3667

3667:                                             ; preds = %3662
  %3668 = icmp eq i32 %3663, %3665
  br i1 %3668, label %3669, label %3705

3669:                                             ; preds = %3667
  store i32 0, ptr %4, align 4, !tbaa !6
  %3670 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3670, ptr %6, align 4, !tbaa !6
  br i1 %3429, label %3712, label %3671

3671:                                             ; preds = %3669, %3699
  %3672 = phi i64 [ %3703, %3699 ], [ 1, %3669 ]
  %3673 = getelementptr inbounds i32, ptr %4, i64 %3672
  %3674 = load i32, ptr %3673, align 4, !tbaa !6
  %3675 = getelementptr inbounds i32, ptr %12, i64 %3672
  %3676 = load i32, ptr %3675, align 4, !tbaa !6
  %3677 = add nsw i32 %3676, -1
  %3678 = icmp slt i32 %3674, %3677
  br i1 %3678, label %3679, label %3697

3679:                                             ; preds = %3671
  br i1 %3666, label %3689, label %3680

3680:                                             ; preds = %3679
  %3681 = shl i64 %3672, 32
  %3682 = add i64 %3681, -4294967296
  %3683 = ashr exact i64 %3682, 32
  %3684 = getelementptr inbounds i32, ptr %7, i64 %3683
  %3685 = load i32, ptr %3684, align 4, !tbaa !6
  %3686 = getelementptr inbounds i32, ptr %6, i64 %3672
  %3687 = load i32, ptr %3686, align 4, !tbaa !6
  %3688 = add nsw i32 %3687, %3685
  store i32 %3688, ptr %3686, align 4, !tbaa !6
  br label %3707

3689:                                             ; preds = %3662, %3679
  %3690 = phi i32 [ %3674, %3679 ], [ %3663, %3662 ]
  %3691 = phi ptr [ %3673, %3679 ], [ %4, %3662 ]
  %3692 = phi i64 [ %3672, %3679 ], [ 0, %3662 ]
  %3693 = add nsw i32 %3690, 1
  store i32 %3693, ptr %3691, align 4, !tbaa !6
  %3694 = getelementptr inbounds i32, ptr %7, i64 %3692
  %3695 = load i32, ptr %3694, align 4, !tbaa !6
  %3696 = getelementptr inbounds i32, ptr %6, i64 %3692
  br label %3707

3697:                                             ; preds = %3671
  %3698 = icmp eq i32 %3674, %3677
  br i1 %3698, label %3699, label %3705

3699:                                             ; preds = %3697
  store i32 0, ptr %3673, align 4, !tbaa !6
  %3700 = getelementptr inbounds i32, ptr %8, i64 %3672
  %3701 = load i32, ptr %3700, align 4, !tbaa !6
  %3702 = getelementptr inbounds i32, ptr %6, i64 %3672
  store i32 %3701, ptr %3702, align 4, !tbaa !6
  %3703 = add nuw nsw i64 %3672, 1
  %3704 = icmp eq i64 %3703, %3427
  br i1 %3704, label %3712, label %3671, !llvm.loop !323

3705:                                             ; preds = %3667, %3697
  %3706 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 317, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5554

3707:                                             ; preds = %3680, %3689
  %3708 = phi ptr [ %3696, %3689 ], [ %3673, %3680 ]
  %3709 = phi i32 [ %3695, %3689 ], [ 1, %3680 ]
  %3710 = load i32, ptr %3708, align 4, !tbaa !6
  %3711 = add nsw i32 %3710, %3709
  store i32 %3711, ptr %3708, align 4, !tbaa !6
  br label %3712

3712:                                             ; preds = %3699, %3707, %3669, %3659
  %3713 = icmp eq i32 %3661, %5
  br i1 %3713, label %5549, label %3574, !llvm.loop !324

3714:                                             ; preds = %3113
  %3715 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 317, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5549

3716:                                             ; preds = %18
  %3717 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3718 = load ptr, ptr %3717, align 8, !tbaa !10
  %3719 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3720 = load ptr, ptr %3719, align 8, !tbaa !10
  %3721 = load i32, ptr %3718, align 4, !tbaa !6
  %3722 = sitofp i32 %3721 to double
  store double %3722, ptr %3720, align 8, !tbaa !19
  %3723 = icmp eq i32 %13, 0
  br i1 %3723, label %5549, label %3724

3724:                                             ; preds = %3716
  switch i32 %1, label %4325 [
    i32 1, label %3725
    i32 0, label %4027
  ]

3725:                                             ; preds = %3724
  %3726 = getelementptr inbounds i32, ptr %3, i64 %19
  %3727 = load i32, ptr %3726, align 4, !tbaa !6
  %3728 = icmp eq i32 %3727, 0
  %3729 = icmp sgt i32 %5, 0
  br i1 %3728, label %3739, label %3730

3730:                                             ; preds = %3725
  br i1 %3729, label %3731, label %5549

3731:                                             ; preds = %3730
  %3732 = icmp sgt i32 %13, 1
  %3733 = icmp sgt i32 %13, 0
  %3734 = add i32 %13, -2
  %3735 = zext i32 %3734 to i64
  %3736 = zext i32 %13 to i64
  %3737 = add nuw i32 %5, 1
  %3738 = icmp eq i32 %13, 1
  br label %3887

3739:                                             ; preds = %3725
  br i1 %3729, label %3740, label %5549

3740:                                             ; preds = %3739
  %3741 = icmp sgt i32 %13, 1
  %3742 = icmp sgt i32 %13, 0
  %3743 = add i32 %13, -2
  %3744 = zext i32 %3743 to i64
  %3745 = zext i32 %13 to i64
  %3746 = add nuw i32 %5, 1
  %3747 = icmp eq i32 %13, 1
  br label %3748

3748:                                             ; preds = %3740, %3885
  %3749 = phi double [ %3722, %3740 ], [ %3835, %3885 ]
  %3750 = phi i32 [ 0, %3740 ], [ %3837, %3885 ]
  %3751 = phi double [ 0.000000e+00, %3740 ], [ %3836, %3885 ]
  %3752 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3741, label %3753, label %3822

3753:                                             ; preds = %3748, %3812
  %3754 = phi i32 [ %3821, %3812 ], [ 0, %3748 ]
  %3755 = phi i64 [ %3763, %3812 ], [ %3745, %3748 ]
  %3756 = phi i64 [ %3820, %3812 ], [ %3744, %3748 ]
  %3757 = phi i32 [ %3818, %3812 ], [ %3752, %3748 ]
  %3758 = sub i32 %3743, %3754
  %3759 = tail call i32 @llvm.smin.i32(i32 %3758, i32 0)
  %3760 = sub i32 %3758, %3759
  %3761 = zext i32 %3760 to i64
  %3762 = add nuw nsw i64 %3761, 1
  %3763 = add nsw i64 %3755, -1
  %3764 = icmp ult i32 %3760, 31
  br i1 %3764, label %3800, label %3765

3765:                                             ; preds = %3753
  %3766 = and i64 %3762, 8589934560
  %3767 = sub i64 %3756, %3766
  br label %3768

3768:                                             ; preds = %3768, %3765
  %3769 = phi i64 [ 0, %3765 ], [ %3792, %3768 ]
  %3770 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3765 ], [ %3788, %3768 ]
  %3771 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3765 ], [ %3789, %3768 ]
  %3772 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3765 ], [ %3790, %3768 ]
  %3773 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3765 ], [ %3791, %3768 ]
  %3774 = sub i64 %3756, %3769
  %3775 = getelementptr inbounds i32, ptr %9, i64 %3774
  %3776 = getelementptr inbounds i32, ptr %3775, i64 -7
  %3777 = load <8 x i32>, ptr %3776, align 4, !tbaa !6
  %3778 = shufflevector <8 x i32> %3777, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3779 = getelementptr inbounds i32, ptr %3775, i64 -15
  %3780 = load <8 x i32>, ptr %3779, align 4, !tbaa !6
  %3781 = shufflevector <8 x i32> %3780, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3782 = getelementptr inbounds i32, ptr %3775, i64 -23
  %3783 = load <8 x i32>, ptr %3782, align 4, !tbaa !6
  %3784 = shufflevector <8 x i32> %3783, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3785 = getelementptr inbounds i32, ptr %3775, i64 -31
  %3786 = load <8 x i32>, ptr %3785, align 4, !tbaa !6
  %3787 = shufflevector <8 x i32> %3786, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3788 = mul <8 x i32> %3778, %3770
  %3789 = mul <8 x i32> %3781, %3771
  %3790 = mul <8 x i32> %3784, %3772
  %3791 = mul <8 x i32> %3787, %3773
  %3792 = add nuw i64 %3769, 32
  %3793 = icmp eq i64 %3792, %3766
  br i1 %3793, label %3794, label %3768, !llvm.loop !325

3794:                                             ; preds = %3768
  %3795 = mul <8 x i32> %3789, %3788
  %3796 = mul <8 x i32> %3790, %3795
  %3797 = mul <8 x i32> %3791, %3796
  %3798 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3797)
  %3799 = icmp eq i64 %3762, %3766
  br i1 %3799, label %3812, label %3800

3800:                                             ; preds = %3753, %3794
  %3801 = phi i64 [ %3756, %3753 ], [ %3767, %3794 ]
  %3802 = phi i32 [ 1, %3753 ], [ %3798, %3794 ]
  br label %3803

3803:                                             ; preds = %3800, %3803
  %3804 = phi i64 [ %3809, %3803 ], [ %3801, %3800 ]
  %3805 = phi i32 [ %3808, %3803 ], [ %3802, %3800 ]
  %3806 = getelementptr inbounds i32, ptr %9, i64 %3804
  %3807 = load i32, ptr %3806, align 4, !tbaa !6
  %3808 = mul nsw i32 %3807, %3805
  %3809 = add nsw i64 %3804, -1
  %3810 = trunc i64 %3804 to i32
  %3811 = icmp sgt i32 %3810, 0
  br i1 %3811, label %3803, label %3812, !llvm.loop !326

3812:                                             ; preds = %3803, %3794
  %3813 = phi i32 [ %3798, %3794 ], [ %3808, %3803 ]
  %3814 = and i64 %3763, 4294967295
  %3815 = getelementptr inbounds i32, ptr %6, i64 %3814
  %3816 = load i32, ptr %3815, align 4, !tbaa !6
  %3817 = mul nsw i32 %3816, %3813
  %3818 = add nsw i32 %3817, %3757
  %3819 = icmp sgt i64 %3755, 2
  %3820 = add nsw i64 %3756, -1
  %3821 = add i32 %3754, 1
  br i1 %3819, label %3753, label %3822, !llvm.loop !327

3822:                                             ; preds = %3812, %3748
  %3823 = phi i32 [ %3752, %3748 ], [ %3818, %3812 ]
  %3824 = sext i32 %3823 to i64
  %3825 = getelementptr inbounds double, ptr %2, i64 %3824
  %3826 = load double, ptr %3825, align 8, !tbaa !19
  %3827 = getelementptr inbounds i32, ptr %3718, i64 %3824
  %3828 = load i32, ptr %3827, align 4, !tbaa !6
  %3829 = sitofp i32 %3828 to double
  %3830 = fcmp fast one double %3826, 0.000000e+00
  %3831 = fcmp fast olt double %3749, %3829
  %3832 = select i1 %3830, i1 %3831, i1 false
  br i1 %3832, label %3833, label %3834

3833:                                             ; preds = %3822
  store double %3829, ptr %3720, align 8, !tbaa !19
  br label %3834

3834:                                             ; preds = %3833, %3822
  %3835 = phi double [ %3829, %3833 ], [ %3749, %3822 ]
  %3836 = fadd fast double %3826, %3751
  %3837 = add nuw nsw i32 %3750, 1
  br i1 %3742, label %3838, label %3885

3838:                                             ; preds = %3834
  %3839 = load i32, ptr %4, align 4, !tbaa !6
  %3840 = load i32, ptr %12, align 4, !tbaa !6
  %3841 = add nsw i32 %3840, -1
  %3842 = icmp slt i32 %3839, %3841
  br i1 %3842, label %3862, label %3843

3843:                                             ; preds = %3838
  %3844 = icmp eq i32 %3839, %3841
  br i1 %3844, label %3845, label %3878

3845:                                             ; preds = %3843
  store i32 0, ptr %4, align 4, !tbaa !6
  %3846 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3846, ptr %6, align 4, !tbaa !6
  br i1 %3747, label %3885, label %3847

3847:                                             ; preds = %3845, %3872
  %3848 = phi i64 [ %3876, %3872 ], [ 1, %3845 ]
  %3849 = getelementptr inbounds i32, ptr %4, i64 %3848
  %3850 = load i32, ptr %3849, align 4, !tbaa !6
  %3851 = getelementptr inbounds i32, ptr %12, i64 %3848
  %3852 = load i32, ptr %3851, align 4, !tbaa !6
  %3853 = add nsw i32 %3852, -1
  %3854 = icmp slt i32 %3850, %3853
  br i1 %3854, label %3855, label %3870

3855:                                             ; preds = %3847
  br i1 %3842, label %3862, label %3856

3856:                                             ; preds = %3855
  %3857 = getelementptr inbounds i32, ptr %7, i64 %3848
  %3858 = load i32, ptr %3857, align 4, !tbaa !6
  %3859 = getelementptr inbounds i32, ptr %6, i64 %3848
  %3860 = load i32, ptr %3859, align 4, !tbaa !6
  %3861 = add nsw i32 %3860, %3858
  store i32 %3861, ptr %3859, align 4, !tbaa !6
  br label %3880

3862:                                             ; preds = %3838, %3855
  %3863 = phi i32 [ %3850, %3855 ], [ %3839, %3838 ]
  %3864 = phi ptr [ %3849, %3855 ], [ %4, %3838 ]
  %3865 = phi i64 [ %3848, %3855 ], [ 0, %3838 ]
  %3866 = add nsw i32 %3863, 1
  store i32 %3866, ptr %3864, align 4, !tbaa !6
  %3867 = getelementptr inbounds i32, ptr %7, i64 %3865
  %3868 = load i32, ptr %3867, align 4, !tbaa !6
  %3869 = getelementptr inbounds i32, ptr %6, i64 %3865
  br label %3880

3870:                                             ; preds = %3847
  %3871 = icmp eq i32 %3850, %3853
  br i1 %3871, label %3872, label %3878

3872:                                             ; preds = %3870
  store i32 0, ptr %3849, align 4, !tbaa !6
  %3873 = getelementptr inbounds i32, ptr %8, i64 %3848
  %3874 = load i32, ptr %3873, align 4, !tbaa !6
  %3875 = getelementptr inbounds i32, ptr %6, i64 %3848
  store i32 %3874, ptr %3875, align 4, !tbaa !6
  %3876 = add nuw nsw i64 %3848, 1
  %3877 = icmp eq i64 %3876, %3745
  br i1 %3877, label %3885, label %3847, !llvm.loop !328

3878:                                             ; preds = %3843, %3870
  %3879 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 321, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5554

3880:                                             ; preds = %3856, %3862
  %3881 = phi ptr [ %3869, %3862 ], [ %3849, %3856 ]
  %3882 = phi i32 [ %3868, %3862 ], [ 1, %3856 ]
  %3883 = load i32, ptr %3881, align 4, !tbaa !6
  %3884 = add nsw i32 %3883, %3882
  store i32 %3884, ptr %3881, align 4, !tbaa !6
  br label %3885

3885:                                             ; preds = %3872, %3880, %3845, %3834
  %3886 = icmp eq i32 %3837, %5
  br i1 %3886, label %5549, label %3748, !llvm.loop !329

3887:                                             ; preds = %3731, %4025
  %3888 = phi double [ %3722, %3731 ], [ %3973, %4025 ]
  %3889 = phi i32 [ 0, %3731 ], [ %3974, %4025 ]
  %3890 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3732, label %3891, label %3960

3891:                                             ; preds = %3887, %3950
  %3892 = phi i32 [ %3959, %3950 ], [ 0, %3887 ]
  %3893 = phi i64 [ %3901, %3950 ], [ %3736, %3887 ]
  %3894 = phi i64 [ %3958, %3950 ], [ %3735, %3887 ]
  %3895 = phi i32 [ %3956, %3950 ], [ %3890, %3887 ]
  %3896 = sub i32 %3734, %3892
  %3897 = tail call i32 @llvm.smin.i32(i32 %3896, i32 0)
  %3898 = sub i32 %3896, %3897
  %3899 = zext i32 %3898 to i64
  %3900 = add nuw nsw i64 %3899, 1
  %3901 = add nsw i64 %3893, -1
  %3902 = icmp ult i32 %3898, 31
  br i1 %3902, label %3938, label %3903

3903:                                             ; preds = %3891
  %3904 = and i64 %3900, 8589934560
  %3905 = sub i64 %3894, %3904
  br label %3906

3906:                                             ; preds = %3906, %3903
  %3907 = phi i64 [ 0, %3903 ], [ %3930, %3906 ]
  %3908 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3903 ], [ %3926, %3906 ]
  %3909 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3903 ], [ %3927, %3906 ]
  %3910 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3903 ], [ %3928, %3906 ]
  %3911 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3903 ], [ %3929, %3906 ]
  %3912 = sub i64 %3894, %3907
  %3913 = getelementptr inbounds i32, ptr %11, i64 %3912
  %3914 = getelementptr inbounds i32, ptr %3913, i64 -7
  %3915 = load <8 x i32>, ptr %3914, align 4, !tbaa !6
  %3916 = shufflevector <8 x i32> %3915, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3917 = getelementptr inbounds i32, ptr %3913, i64 -15
  %3918 = load <8 x i32>, ptr %3917, align 4, !tbaa !6
  %3919 = shufflevector <8 x i32> %3918, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3920 = getelementptr inbounds i32, ptr %3913, i64 -23
  %3921 = load <8 x i32>, ptr %3920, align 4, !tbaa !6
  %3922 = shufflevector <8 x i32> %3921, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3923 = getelementptr inbounds i32, ptr %3913, i64 -31
  %3924 = load <8 x i32>, ptr %3923, align 4, !tbaa !6
  %3925 = shufflevector <8 x i32> %3924, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3926 = mul <8 x i32> %3916, %3908
  %3927 = mul <8 x i32> %3919, %3909
  %3928 = mul <8 x i32> %3922, %3910
  %3929 = mul <8 x i32> %3925, %3911
  %3930 = add nuw i64 %3907, 32
  %3931 = icmp eq i64 %3930, %3904
  br i1 %3931, label %3932, label %3906, !llvm.loop !330

3932:                                             ; preds = %3906
  %3933 = mul <8 x i32> %3927, %3926
  %3934 = mul <8 x i32> %3928, %3933
  %3935 = mul <8 x i32> %3929, %3934
  %3936 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3935)
  %3937 = icmp eq i64 %3900, %3904
  br i1 %3937, label %3950, label %3938

3938:                                             ; preds = %3891, %3932
  %3939 = phi i64 [ %3894, %3891 ], [ %3905, %3932 ]
  %3940 = phi i32 [ 1, %3891 ], [ %3936, %3932 ]
  br label %3941

3941:                                             ; preds = %3938, %3941
  %3942 = phi i64 [ %3947, %3941 ], [ %3939, %3938 ]
  %3943 = phi i32 [ %3946, %3941 ], [ %3940, %3938 ]
  %3944 = getelementptr inbounds i32, ptr %11, i64 %3942
  %3945 = load i32, ptr %3944, align 4, !tbaa !6
  %3946 = mul nsw i32 %3945, %3943
  %3947 = add nsw i64 %3942, -1
  %3948 = trunc i64 %3942 to i32
  %3949 = icmp sgt i32 %3948, 0
  br i1 %3949, label %3941, label %3950, !llvm.loop !331

3950:                                             ; preds = %3941, %3932
  %3951 = phi i32 [ %3936, %3932 ], [ %3946, %3941 ]
  %3952 = and i64 %3901, 4294967295
  %3953 = getelementptr inbounds i32, ptr %6, i64 %3952
  %3954 = load i32, ptr %3953, align 4, !tbaa !6
  %3955 = mul nsw i32 %3954, %3951
  %3956 = add nsw i32 %3955, %3895
  %3957 = icmp sgt i64 %3893, 2
  %3958 = add nsw i64 %3894, -1
  %3959 = add i32 %3892, 1
  br i1 %3957, label %3891, label %3960, !llvm.loop !332

3960:                                             ; preds = %3950, %3887
  %3961 = phi i32 [ %3890, %3887 ], [ %3956, %3950 ]
  %3962 = icmp slt i32 %3961, %5
  br i1 %3962, label %3965, label %3963

3963:                                             ; preds = %3960
  %3964 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 321, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5554

3965:                                             ; preds = %3960
  %3966 = sext i32 %3961 to i64
  %3967 = getelementptr inbounds i32, ptr %3718, i64 %3966
  %3968 = load i32, ptr %3967, align 4, !tbaa !6
  %3969 = sitofp i32 %3968 to double
  %3970 = fcmp fast olt double %3888, %3969
  br i1 %3970, label %3971, label %3972

3971:                                             ; preds = %3965
  store double %3969, ptr %3720, align 8, !tbaa !19
  br label %3972

3972:                                             ; preds = %3965, %3971
  %3973 = phi double [ %3888, %3965 ], [ %3969, %3971 ]
  %3974 = add nuw nsw i32 %3889, 1
  br i1 %3733, label %3975, label %4025

3975:                                             ; preds = %3972
  %3976 = load i32, ptr %4, align 4, !tbaa !6
  %3977 = load i32, ptr %12, align 4, !tbaa !6
  %3978 = add nsw i32 %3977, -1
  %3979 = icmp slt i32 %3976, %3978
  br i1 %3979, label %4002, label %3980

3980:                                             ; preds = %3975
  %3981 = icmp eq i32 %3976, %3978
  br i1 %3981, label %3982, label %4018

3982:                                             ; preds = %3980
  store i32 0, ptr %4, align 4, !tbaa !6
  %3983 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3983, ptr %6, align 4, !tbaa !6
  br i1 %3738, label %4025, label %3984

3984:                                             ; preds = %3982, %4012
  %3985 = phi i64 [ %4016, %4012 ], [ 1, %3982 ]
  %3986 = getelementptr inbounds i32, ptr %4, i64 %3985
  %3987 = load i32, ptr %3986, align 4, !tbaa !6
  %3988 = getelementptr inbounds i32, ptr %12, i64 %3985
  %3989 = load i32, ptr %3988, align 4, !tbaa !6
  %3990 = add nsw i32 %3989, -1
  %3991 = icmp slt i32 %3987, %3990
  br i1 %3991, label %3992, label %4010

3992:                                             ; preds = %3984
  br i1 %3979, label %4002, label %3993

3993:                                             ; preds = %3992
  %3994 = shl i64 %3985, 32
  %3995 = add i64 %3994, -4294967296
  %3996 = ashr exact i64 %3995, 32
  %3997 = getelementptr inbounds i32, ptr %7, i64 %3996
  %3998 = load i32, ptr %3997, align 4, !tbaa !6
  %3999 = getelementptr inbounds i32, ptr %6, i64 %3985
  %4000 = load i32, ptr %3999, align 4, !tbaa !6
  %4001 = add nsw i32 %4000, %3998
  store i32 %4001, ptr %3999, align 4, !tbaa !6
  br label %4020

4002:                                             ; preds = %3975, %3992
  %4003 = phi i32 [ %3987, %3992 ], [ %3976, %3975 ]
  %4004 = phi ptr [ %3986, %3992 ], [ %4, %3975 ]
  %4005 = phi i64 [ %3985, %3992 ], [ 0, %3975 ]
  %4006 = add nsw i32 %4003, 1
  store i32 %4006, ptr %4004, align 4, !tbaa !6
  %4007 = getelementptr inbounds i32, ptr %7, i64 %4005
  %4008 = load i32, ptr %4007, align 4, !tbaa !6
  %4009 = getelementptr inbounds i32, ptr %6, i64 %4005
  br label %4020

4010:                                             ; preds = %3984
  %4011 = icmp eq i32 %3987, %3990
  br i1 %4011, label %4012, label %4018

4012:                                             ; preds = %4010
  store i32 0, ptr %3986, align 4, !tbaa !6
  %4013 = getelementptr inbounds i32, ptr %8, i64 %3985
  %4014 = load i32, ptr %4013, align 4, !tbaa !6
  %4015 = getelementptr inbounds i32, ptr %6, i64 %3985
  store i32 %4014, ptr %4015, align 4, !tbaa !6
  %4016 = add nuw nsw i64 %3985, 1
  %4017 = icmp eq i64 %4016, %3736
  br i1 %4017, label %4025, label %3984, !llvm.loop !333

4018:                                             ; preds = %3980, %4010
  %4019 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 321, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5554

4020:                                             ; preds = %3993, %4002
  %4021 = phi ptr [ %4009, %4002 ], [ %3986, %3993 ]
  %4022 = phi i32 [ %4008, %4002 ], [ 1, %3993 ]
  %4023 = load i32, ptr %4021, align 4, !tbaa !6
  %4024 = add nsw i32 %4023, %4022
  store i32 %4024, ptr %4021, align 4, !tbaa !6
  br label %4025

4025:                                             ; preds = %4012, %4020, %3982, %3972
  %4026 = icmp eq i32 %3974, %5
  br i1 %4026, label %5549, label %3887, !llvm.loop !334

4027:                                             ; preds = %3724
  %4028 = getelementptr inbounds i32, ptr %3, i64 %19
  %4029 = load i32, ptr %4028, align 4, !tbaa !6
  %4030 = icmp eq i32 %4029, 0
  %4031 = icmp sgt i32 %5, 0
  br i1 %4030, label %4041, label %4032

4032:                                             ; preds = %4027
  br i1 %4031, label %4033, label %5549

4033:                                             ; preds = %4032
  %4034 = icmp sgt i32 %13, 1
  %4035 = icmp sgt i32 %13, 0
  %4036 = add i32 %13, -2
  %4037 = zext i32 %4036 to i64
  %4038 = zext i32 %13 to i64
  %4039 = add nuw i32 %5, 1
  %4040 = icmp eq i32 %13, 1
  br label %4185

4041:                                             ; preds = %4027
  br i1 %4031, label %4042, label %5549

4042:                                             ; preds = %4041
  %4043 = icmp sgt i32 %13, 1
  %4044 = icmp sgt i32 %13, 0
  %4045 = add i32 %13, -2
  %4046 = zext i32 %4045 to i64
  %4047 = zext i32 %13 to i64
  %4048 = add nuw i32 %5, 1
  %4049 = icmp eq i32 %13, 1
  br label %4050

4050:                                             ; preds = %4042, %4183
  %4051 = phi double [ %3722, %4042 ], [ %4133, %4183 ]
  %4052 = phi i32 [ 0, %4042 ], [ %4135, %4183 ]
  %4053 = phi double [ 0.000000e+00, %4042 ], [ %4134, %4183 ]
  %4054 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4043, label %4055, label %4124

4055:                                             ; preds = %4050, %4114
  %4056 = phi i32 [ %4123, %4114 ], [ 0, %4050 ]
  %4057 = phi i64 [ %4065, %4114 ], [ %4047, %4050 ]
  %4058 = phi i64 [ %4122, %4114 ], [ %4046, %4050 ]
  %4059 = phi i32 [ %4120, %4114 ], [ %4054, %4050 ]
  %4060 = sub i32 %4045, %4056
  %4061 = tail call i32 @llvm.smin.i32(i32 %4060, i32 0)
  %4062 = sub i32 %4060, %4061
  %4063 = zext i32 %4062 to i64
  %4064 = add nuw nsw i64 %4063, 1
  %4065 = add nsw i64 %4057, -1
  %4066 = icmp ult i32 %4062, 31
  br i1 %4066, label %4102, label %4067

4067:                                             ; preds = %4055
  %4068 = and i64 %4064, 8589934560
  %4069 = sub i64 %4058, %4068
  br label %4070

4070:                                             ; preds = %4070, %4067
  %4071 = phi i64 [ 0, %4067 ], [ %4094, %4070 ]
  %4072 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4067 ], [ %4090, %4070 ]
  %4073 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4067 ], [ %4091, %4070 ]
  %4074 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4067 ], [ %4092, %4070 ]
  %4075 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4067 ], [ %4093, %4070 ]
  %4076 = sub i64 %4058, %4071
  %4077 = getelementptr inbounds i32, ptr %9, i64 %4076
  %4078 = getelementptr inbounds i32, ptr %4077, i64 -7
  %4079 = load <8 x i32>, ptr %4078, align 4, !tbaa !6
  %4080 = shufflevector <8 x i32> %4079, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4081 = getelementptr inbounds i32, ptr %4077, i64 -15
  %4082 = load <8 x i32>, ptr %4081, align 4, !tbaa !6
  %4083 = shufflevector <8 x i32> %4082, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4084 = getelementptr inbounds i32, ptr %4077, i64 -23
  %4085 = load <8 x i32>, ptr %4084, align 4, !tbaa !6
  %4086 = shufflevector <8 x i32> %4085, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4087 = getelementptr inbounds i32, ptr %4077, i64 -31
  %4088 = load <8 x i32>, ptr %4087, align 4, !tbaa !6
  %4089 = shufflevector <8 x i32> %4088, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4090 = mul <8 x i32> %4080, %4072
  %4091 = mul <8 x i32> %4083, %4073
  %4092 = mul <8 x i32> %4086, %4074
  %4093 = mul <8 x i32> %4089, %4075
  %4094 = add nuw i64 %4071, 32
  %4095 = icmp eq i64 %4094, %4068
  br i1 %4095, label %4096, label %4070, !llvm.loop !335

4096:                                             ; preds = %4070
  %4097 = mul <8 x i32> %4091, %4090
  %4098 = mul <8 x i32> %4092, %4097
  %4099 = mul <8 x i32> %4093, %4098
  %4100 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4099)
  %4101 = icmp eq i64 %4064, %4068
  br i1 %4101, label %4114, label %4102

4102:                                             ; preds = %4055, %4096
  %4103 = phi i64 [ %4058, %4055 ], [ %4069, %4096 ]
  %4104 = phi i32 [ 1, %4055 ], [ %4100, %4096 ]
  br label %4105

4105:                                             ; preds = %4102, %4105
  %4106 = phi i64 [ %4111, %4105 ], [ %4103, %4102 ]
  %4107 = phi i32 [ %4110, %4105 ], [ %4104, %4102 ]
  %4108 = getelementptr inbounds i32, ptr %9, i64 %4106
  %4109 = load i32, ptr %4108, align 4, !tbaa !6
  %4110 = mul nsw i32 %4109, %4107
  %4111 = add nsw i64 %4106, -1
  %4112 = trunc i64 %4106 to i32
  %4113 = icmp sgt i32 %4112, 0
  br i1 %4113, label %4105, label %4114, !llvm.loop !336

4114:                                             ; preds = %4105, %4096
  %4115 = phi i32 [ %4100, %4096 ], [ %4110, %4105 ]
  %4116 = and i64 %4065, 4294967295
  %4117 = getelementptr inbounds i32, ptr %6, i64 %4116
  %4118 = load i32, ptr %4117, align 4, !tbaa !6
  %4119 = mul nsw i32 %4118, %4115
  %4120 = add nsw i32 %4119, %4059
  %4121 = icmp sgt i64 %4057, 2
  %4122 = add nsw i64 %4058, -1
  %4123 = add i32 %4056, 1
  br i1 %4121, label %4055, label %4124, !llvm.loop !337

4124:                                             ; preds = %4114, %4050
  %4125 = phi i32 [ %4054, %4050 ], [ %4120, %4114 ]
  %4126 = sext i32 %4125 to i64
  %4127 = getelementptr inbounds i32, ptr %3718, i64 %4126
  %4128 = load i32, ptr %4127, align 4, !tbaa !6
  %4129 = sitofp i32 %4128 to double
  %4130 = fcmp fast olt double %4051, %4129
  br i1 %4130, label %4131, label %4132

4131:                                             ; preds = %4124
  store double %4129, ptr %3720, align 8, !tbaa !19
  br label %4132

4132:                                             ; preds = %4131, %4124
  %4133 = phi double [ %4129, %4131 ], [ %4051, %4124 ]
  %4134 = fadd fast double %4053, 1.000000e+00
  %4135 = add nuw nsw i32 %4052, 1
  br i1 %4044, label %4136, label %4183

4136:                                             ; preds = %4132
  %4137 = load i32, ptr %4, align 4, !tbaa !6
  %4138 = load i32, ptr %12, align 4, !tbaa !6
  %4139 = add nsw i32 %4138, -1
  %4140 = icmp slt i32 %4137, %4139
  br i1 %4140, label %4160, label %4141

4141:                                             ; preds = %4136
  %4142 = icmp eq i32 %4137, %4139
  br i1 %4142, label %4143, label %4176

4143:                                             ; preds = %4141
  store i32 0, ptr %4, align 4, !tbaa !6
  %4144 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4144, ptr %6, align 4, !tbaa !6
  br i1 %4049, label %4183, label %4145

4145:                                             ; preds = %4143, %4170
  %4146 = phi i64 [ %4174, %4170 ], [ 1, %4143 ]
  %4147 = getelementptr inbounds i32, ptr %4, i64 %4146
  %4148 = load i32, ptr %4147, align 4, !tbaa !6
  %4149 = getelementptr inbounds i32, ptr %12, i64 %4146
  %4150 = load i32, ptr %4149, align 4, !tbaa !6
  %4151 = add nsw i32 %4150, -1
  %4152 = icmp slt i32 %4148, %4151
  br i1 %4152, label %4153, label %4168

4153:                                             ; preds = %4145
  br i1 %4140, label %4160, label %4154

4154:                                             ; preds = %4153
  %4155 = getelementptr inbounds i32, ptr %7, i64 %4146
  %4156 = load i32, ptr %4155, align 4, !tbaa !6
  %4157 = getelementptr inbounds i32, ptr %6, i64 %4146
  %4158 = load i32, ptr %4157, align 4, !tbaa !6
  %4159 = add nsw i32 %4158, %4156
  store i32 %4159, ptr %4157, align 4, !tbaa !6
  br label %4178

4160:                                             ; preds = %4136, %4153
  %4161 = phi i32 [ %4148, %4153 ], [ %4137, %4136 ]
  %4162 = phi ptr [ %4147, %4153 ], [ %4, %4136 ]
  %4163 = phi i64 [ %4146, %4153 ], [ 0, %4136 ]
  %4164 = add nsw i32 %4161, 1
  store i32 %4164, ptr %4162, align 4, !tbaa !6
  %4165 = getelementptr inbounds i32, ptr %7, i64 %4163
  %4166 = load i32, ptr %4165, align 4, !tbaa !6
  %4167 = getelementptr inbounds i32, ptr %6, i64 %4163
  br label %4178

4168:                                             ; preds = %4145
  %4169 = icmp eq i32 %4148, %4151
  br i1 %4169, label %4170, label %4176

4170:                                             ; preds = %4168
  store i32 0, ptr %4147, align 4, !tbaa !6
  %4171 = getelementptr inbounds i32, ptr %8, i64 %4146
  %4172 = load i32, ptr %4171, align 4, !tbaa !6
  %4173 = getelementptr inbounds i32, ptr %6, i64 %4146
  store i32 %4172, ptr %4173, align 4, !tbaa !6
  %4174 = add nuw nsw i64 %4146, 1
  %4175 = icmp eq i64 %4174, %4047
  br i1 %4175, label %4183, label %4145, !llvm.loop !338

4176:                                             ; preds = %4141, %4168
  %4177 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 321, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5554

4178:                                             ; preds = %4154, %4160
  %4179 = phi ptr [ %4167, %4160 ], [ %4147, %4154 ]
  %4180 = phi i32 [ %4166, %4160 ], [ 1, %4154 ]
  %4181 = load i32, ptr %4179, align 4, !tbaa !6
  %4182 = add nsw i32 %4181, %4180
  store i32 %4182, ptr %4179, align 4, !tbaa !6
  br label %4183

4183:                                             ; preds = %4170, %4178, %4143, %4132
  %4184 = icmp eq i32 %4135, %5
  br i1 %4184, label %5549, label %4050, !llvm.loop !339

4185:                                             ; preds = %4033, %4323
  %4186 = phi double [ %3722, %4033 ], [ %4271, %4323 ]
  %4187 = phi i32 [ 0, %4033 ], [ %4272, %4323 ]
  %4188 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4034, label %4189, label %4258

4189:                                             ; preds = %4185, %4248
  %4190 = phi i32 [ %4257, %4248 ], [ 0, %4185 ]
  %4191 = phi i64 [ %4199, %4248 ], [ %4038, %4185 ]
  %4192 = phi i64 [ %4256, %4248 ], [ %4037, %4185 ]
  %4193 = phi i32 [ %4254, %4248 ], [ %4188, %4185 ]
  %4194 = sub i32 %4036, %4190
  %4195 = tail call i32 @llvm.smin.i32(i32 %4194, i32 0)
  %4196 = sub i32 %4194, %4195
  %4197 = zext i32 %4196 to i64
  %4198 = add nuw nsw i64 %4197, 1
  %4199 = add nsw i64 %4191, -1
  %4200 = icmp ult i32 %4196, 31
  br i1 %4200, label %4236, label %4201

4201:                                             ; preds = %4189
  %4202 = and i64 %4198, 8589934560
  %4203 = sub i64 %4192, %4202
  br label %4204

4204:                                             ; preds = %4204, %4201
  %4205 = phi i64 [ 0, %4201 ], [ %4228, %4204 ]
  %4206 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4201 ], [ %4224, %4204 ]
  %4207 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4201 ], [ %4225, %4204 ]
  %4208 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4201 ], [ %4226, %4204 ]
  %4209 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4201 ], [ %4227, %4204 ]
  %4210 = sub i64 %4192, %4205
  %4211 = getelementptr inbounds i32, ptr %11, i64 %4210
  %4212 = getelementptr inbounds i32, ptr %4211, i64 -7
  %4213 = load <8 x i32>, ptr %4212, align 4, !tbaa !6
  %4214 = shufflevector <8 x i32> %4213, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4215 = getelementptr inbounds i32, ptr %4211, i64 -15
  %4216 = load <8 x i32>, ptr %4215, align 4, !tbaa !6
  %4217 = shufflevector <8 x i32> %4216, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4218 = getelementptr inbounds i32, ptr %4211, i64 -23
  %4219 = load <8 x i32>, ptr %4218, align 4, !tbaa !6
  %4220 = shufflevector <8 x i32> %4219, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4221 = getelementptr inbounds i32, ptr %4211, i64 -31
  %4222 = load <8 x i32>, ptr %4221, align 4, !tbaa !6
  %4223 = shufflevector <8 x i32> %4222, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4224 = mul <8 x i32> %4214, %4206
  %4225 = mul <8 x i32> %4217, %4207
  %4226 = mul <8 x i32> %4220, %4208
  %4227 = mul <8 x i32> %4223, %4209
  %4228 = add nuw i64 %4205, 32
  %4229 = icmp eq i64 %4228, %4202
  br i1 %4229, label %4230, label %4204, !llvm.loop !340

4230:                                             ; preds = %4204
  %4231 = mul <8 x i32> %4225, %4224
  %4232 = mul <8 x i32> %4226, %4231
  %4233 = mul <8 x i32> %4227, %4232
  %4234 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4233)
  %4235 = icmp eq i64 %4198, %4202
  br i1 %4235, label %4248, label %4236

4236:                                             ; preds = %4189, %4230
  %4237 = phi i64 [ %4192, %4189 ], [ %4203, %4230 ]
  %4238 = phi i32 [ 1, %4189 ], [ %4234, %4230 ]
  br label %4239

4239:                                             ; preds = %4236, %4239
  %4240 = phi i64 [ %4245, %4239 ], [ %4237, %4236 ]
  %4241 = phi i32 [ %4244, %4239 ], [ %4238, %4236 ]
  %4242 = getelementptr inbounds i32, ptr %11, i64 %4240
  %4243 = load i32, ptr %4242, align 4, !tbaa !6
  %4244 = mul nsw i32 %4243, %4241
  %4245 = add nsw i64 %4240, -1
  %4246 = trunc i64 %4240 to i32
  %4247 = icmp sgt i32 %4246, 0
  br i1 %4247, label %4239, label %4248, !llvm.loop !341

4248:                                             ; preds = %4239, %4230
  %4249 = phi i32 [ %4234, %4230 ], [ %4244, %4239 ]
  %4250 = and i64 %4199, 4294967295
  %4251 = getelementptr inbounds i32, ptr %6, i64 %4250
  %4252 = load i32, ptr %4251, align 4, !tbaa !6
  %4253 = mul nsw i32 %4252, %4249
  %4254 = add nsw i32 %4253, %4193
  %4255 = icmp sgt i64 %4191, 2
  %4256 = add nsw i64 %4192, -1
  %4257 = add i32 %4190, 1
  br i1 %4255, label %4189, label %4258, !llvm.loop !342

4258:                                             ; preds = %4248, %4185
  %4259 = phi i32 [ %4188, %4185 ], [ %4254, %4248 ]
  %4260 = icmp slt i32 %4259, %5
  br i1 %4260, label %4263, label %4261

4261:                                             ; preds = %4258
  %4262 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 321, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5554

4263:                                             ; preds = %4258
  %4264 = sext i32 %4259 to i64
  %4265 = getelementptr inbounds i32, ptr %3718, i64 %4264
  %4266 = load i32, ptr %4265, align 4, !tbaa !6
  %4267 = sitofp i32 %4266 to double
  %4268 = fcmp fast olt double %4186, %4267
  br i1 %4268, label %4269, label %4270

4269:                                             ; preds = %4263
  store double %4267, ptr %3720, align 8, !tbaa !19
  br label %4270

4270:                                             ; preds = %4269, %4263
  %4271 = phi double [ %4267, %4269 ], [ %4186, %4263 ]
  %4272 = add nuw nsw i32 %4187, 1
  br i1 %4035, label %4273, label %4323

4273:                                             ; preds = %4270
  %4274 = load i32, ptr %4, align 4, !tbaa !6
  %4275 = load i32, ptr %12, align 4, !tbaa !6
  %4276 = add nsw i32 %4275, -1
  %4277 = icmp slt i32 %4274, %4276
  br i1 %4277, label %4300, label %4278

4278:                                             ; preds = %4273
  %4279 = icmp eq i32 %4274, %4276
  br i1 %4279, label %4280, label %4316

4280:                                             ; preds = %4278
  store i32 0, ptr %4, align 4, !tbaa !6
  %4281 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4281, ptr %6, align 4, !tbaa !6
  br i1 %4040, label %4323, label %4282

4282:                                             ; preds = %4280, %4310
  %4283 = phi i64 [ %4314, %4310 ], [ 1, %4280 ]
  %4284 = getelementptr inbounds i32, ptr %4, i64 %4283
  %4285 = load i32, ptr %4284, align 4, !tbaa !6
  %4286 = getelementptr inbounds i32, ptr %12, i64 %4283
  %4287 = load i32, ptr %4286, align 4, !tbaa !6
  %4288 = add nsw i32 %4287, -1
  %4289 = icmp slt i32 %4285, %4288
  br i1 %4289, label %4290, label %4308

4290:                                             ; preds = %4282
  br i1 %4277, label %4300, label %4291

4291:                                             ; preds = %4290
  %4292 = shl i64 %4283, 32
  %4293 = add i64 %4292, -4294967296
  %4294 = ashr exact i64 %4293, 32
  %4295 = getelementptr inbounds i32, ptr %7, i64 %4294
  %4296 = load i32, ptr %4295, align 4, !tbaa !6
  %4297 = getelementptr inbounds i32, ptr %6, i64 %4283
  %4298 = load i32, ptr %4297, align 4, !tbaa !6
  %4299 = add nsw i32 %4298, %4296
  store i32 %4299, ptr %4297, align 4, !tbaa !6
  br label %4318

4300:                                             ; preds = %4273, %4290
  %4301 = phi i32 [ %4285, %4290 ], [ %4274, %4273 ]
  %4302 = phi ptr [ %4284, %4290 ], [ %4, %4273 ]
  %4303 = phi i64 [ %4283, %4290 ], [ 0, %4273 ]
  %4304 = add nsw i32 %4301, 1
  store i32 %4304, ptr %4302, align 4, !tbaa !6
  %4305 = getelementptr inbounds i32, ptr %7, i64 %4303
  %4306 = load i32, ptr %4305, align 4, !tbaa !6
  %4307 = getelementptr inbounds i32, ptr %6, i64 %4303
  br label %4318

4308:                                             ; preds = %4282
  %4309 = icmp eq i32 %4285, %4288
  br i1 %4309, label %4310, label %4316

4310:                                             ; preds = %4308
  store i32 0, ptr %4284, align 4, !tbaa !6
  %4311 = getelementptr inbounds i32, ptr %8, i64 %4283
  %4312 = load i32, ptr %4311, align 4, !tbaa !6
  %4313 = getelementptr inbounds i32, ptr %6, i64 %4283
  store i32 %4312, ptr %4313, align 4, !tbaa !6
  %4314 = add nuw nsw i64 %4283, 1
  %4315 = icmp eq i64 %4314, %4038
  br i1 %4315, label %4323, label %4282, !llvm.loop !343

4316:                                             ; preds = %4278, %4308
  %4317 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 321, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5554

4318:                                             ; preds = %4291, %4300
  %4319 = phi ptr [ %4307, %4300 ], [ %4284, %4291 ]
  %4320 = phi i32 [ %4306, %4300 ], [ 1, %4291 ]
  %4321 = load i32, ptr %4319, align 4, !tbaa !6
  %4322 = add nsw i32 %4321, %4320
  store i32 %4322, ptr %4319, align 4, !tbaa !6
  br label %4323

4323:                                             ; preds = %4310, %4318, %4280, %4270
  %4324 = icmp eq i32 %4272, %5
  br i1 %4324, label %5549, label %4185, !llvm.loop !344

4325:                                             ; preds = %3724
  %4326 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 321, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5549

4327:                                             ; preds = %18
  %4328 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4329 = load ptr, ptr %4328, align 8, !tbaa !10
  %4330 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4331 = load ptr, ptr %4330, align 8, !tbaa !10
  %4332 = load i32, ptr %4329, align 4, !tbaa !6
  %4333 = sitofp i32 %4332 to float
  store float %4333, ptr %4331, align 4, !tbaa !163
  %4334 = icmp eq i32 %13, 0
  br i1 %4334, label %5549, label %4335

4335:                                             ; preds = %4327
  switch i32 %1, label %4936 [
    i32 1, label %4336
    i32 0, label %4638
  ]

4336:                                             ; preds = %4335
  %4337 = getelementptr inbounds i32, ptr %3, i64 %19
  %4338 = load i32, ptr %4337, align 4, !tbaa !6
  %4339 = icmp eq i32 %4338, 0
  %4340 = icmp sgt i32 %5, 0
  br i1 %4339, label %4350, label %4341

4341:                                             ; preds = %4336
  br i1 %4340, label %4342, label %5549

4342:                                             ; preds = %4341
  %4343 = icmp sgt i32 %13, 1
  %4344 = icmp sgt i32 %13, 0
  %4345 = add i32 %13, -2
  %4346 = zext i32 %4345 to i64
  %4347 = zext i32 %13 to i64
  %4348 = add nuw i32 %5, 1
  %4349 = icmp eq i32 %13, 1
  br label %4498

4350:                                             ; preds = %4336
  br i1 %4340, label %4351, label %5549

4351:                                             ; preds = %4350
  %4352 = icmp sgt i32 %13, 1
  %4353 = icmp sgt i32 %13, 0
  %4354 = add i32 %13, -2
  %4355 = zext i32 %4354 to i64
  %4356 = zext i32 %13 to i64
  %4357 = add nuw i32 %5, 1
  %4358 = icmp eq i32 %13, 1
  br label %4359

4359:                                             ; preds = %4351, %4496
  %4360 = phi float [ %4333, %4351 ], [ %4446, %4496 ]
  %4361 = phi i32 [ 0, %4351 ], [ %4448, %4496 ]
  %4362 = phi double [ 0.000000e+00, %4351 ], [ %4447, %4496 ]
  %4363 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4352, label %4364, label %4433

4364:                                             ; preds = %4359, %4423
  %4365 = phi i32 [ %4432, %4423 ], [ 0, %4359 ]
  %4366 = phi i64 [ %4374, %4423 ], [ %4356, %4359 ]
  %4367 = phi i64 [ %4431, %4423 ], [ %4355, %4359 ]
  %4368 = phi i32 [ %4429, %4423 ], [ %4363, %4359 ]
  %4369 = sub i32 %4354, %4365
  %4370 = tail call i32 @llvm.smin.i32(i32 %4369, i32 0)
  %4371 = sub i32 %4369, %4370
  %4372 = zext i32 %4371 to i64
  %4373 = add nuw nsw i64 %4372, 1
  %4374 = add nsw i64 %4366, -1
  %4375 = icmp ult i32 %4371, 31
  br i1 %4375, label %4411, label %4376

4376:                                             ; preds = %4364
  %4377 = and i64 %4373, 8589934560
  %4378 = sub i64 %4367, %4377
  br label %4379

4379:                                             ; preds = %4379, %4376
  %4380 = phi i64 [ 0, %4376 ], [ %4403, %4379 ]
  %4381 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4376 ], [ %4399, %4379 ]
  %4382 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4376 ], [ %4400, %4379 ]
  %4383 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4376 ], [ %4401, %4379 ]
  %4384 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4376 ], [ %4402, %4379 ]
  %4385 = sub i64 %4367, %4380
  %4386 = getelementptr inbounds i32, ptr %9, i64 %4385
  %4387 = getelementptr inbounds i32, ptr %4386, i64 -7
  %4388 = load <8 x i32>, ptr %4387, align 4, !tbaa !6
  %4389 = shufflevector <8 x i32> %4388, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4390 = getelementptr inbounds i32, ptr %4386, i64 -15
  %4391 = load <8 x i32>, ptr %4390, align 4, !tbaa !6
  %4392 = shufflevector <8 x i32> %4391, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4393 = getelementptr inbounds i32, ptr %4386, i64 -23
  %4394 = load <8 x i32>, ptr %4393, align 4, !tbaa !6
  %4395 = shufflevector <8 x i32> %4394, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4396 = getelementptr inbounds i32, ptr %4386, i64 -31
  %4397 = load <8 x i32>, ptr %4396, align 4, !tbaa !6
  %4398 = shufflevector <8 x i32> %4397, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4399 = mul <8 x i32> %4389, %4381
  %4400 = mul <8 x i32> %4392, %4382
  %4401 = mul <8 x i32> %4395, %4383
  %4402 = mul <8 x i32> %4398, %4384
  %4403 = add nuw i64 %4380, 32
  %4404 = icmp eq i64 %4403, %4377
  br i1 %4404, label %4405, label %4379, !llvm.loop !345

4405:                                             ; preds = %4379
  %4406 = mul <8 x i32> %4400, %4399
  %4407 = mul <8 x i32> %4401, %4406
  %4408 = mul <8 x i32> %4402, %4407
  %4409 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4408)
  %4410 = icmp eq i64 %4373, %4377
  br i1 %4410, label %4423, label %4411

4411:                                             ; preds = %4364, %4405
  %4412 = phi i64 [ %4367, %4364 ], [ %4378, %4405 ]
  %4413 = phi i32 [ 1, %4364 ], [ %4409, %4405 ]
  br label %4414

4414:                                             ; preds = %4411, %4414
  %4415 = phi i64 [ %4420, %4414 ], [ %4412, %4411 ]
  %4416 = phi i32 [ %4419, %4414 ], [ %4413, %4411 ]
  %4417 = getelementptr inbounds i32, ptr %9, i64 %4415
  %4418 = load i32, ptr %4417, align 4, !tbaa !6
  %4419 = mul nsw i32 %4418, %4416
  %4420 = add nsw i64 %4415, -1
  %4421 = trunc i64 %4415 to i32
  %4422 = icmp sgt i32 %4421, 0
  br i1 %4422, label %4414, label %4423, !llvm.loop !346

4423:                                             ; preds = %4414, %4405
  %4424 = phi i32 [ %4409, %4405 ], [ %4419, %4414 ]
  %4425 = and i64 %4374, 4294967295
  %4426 = getelementptr inbounds i32, ptr %6, i64 %4425
  %4427 = load i32, ptr %4426, align 4, !tbaa !6
  %4428 = mul nsw i32 %4427, %4424
  %4429 = add nsw i32 %4428, %4368
  %4430 = icmp sgt i64 %4366, 2
  %4431 = add nsw i64 %4367, -1
  %4432 = add i32 %4365, 1
  br i1 %4430, label %4364, label %4433, !llvm.loop !347

4433:                                             ; preds = %4423, %4359
  %4434 = phi i32 [ %4363, %4359 ], [ %4429, %4423 ]
  %4435 = sext i32 %4434 to i64
  %4436 = getelementptr inbounds double, ptr %2, i64 %4435
  %4437 = load double, ptr %4436, align 8, !tbaa !19
  %4438 = getelementptr inbounds i32, ptr %4329, i64 %4435
  %4439 = load i32, ptr %4438, align 4, !tbaa !6
  %4440 = sitofp i32 %4439 to float
  %4441 = fcmp fast one double %4437, 0.000000e+00
  %4442 = fcmp fast olt float %4360, %4440
  %4443 = select i1 %4441, i1 %4442, i1 false
  br i1 %4443, label %4444, label %4445

4444:                                             ; preds = %4433
  store float %4440, ptr %4331, align 4, !tbaa !163
  br label %4445

4445:                                             ; preds = %4444, %4433
  %4446 = phi float [ %4440, %4444 ], [ %4360, %4433 ]
  %4447 = fadd fast double %4437, %4362
  %4448 = add nuw nsw i32 %4361, 1
  br i1 %4353, label %4449, label %4496

4449:                                             ; preds = %4445
  %4450 = load i32, ptr %4, align 4, !tbaa !6
  %4451 = load i32, ptr %12, align 4, !tbaa !6
  %4452 = add nsw i32 %4451, -1
  %4453 = icmp slt i32 %4450, %4452
  br i1 %4453, label %4473, label %4454

4454:                                             ; preds = %4449
  %4455 = icmp eq i32 %4450, %4452
  br i1 %4455, label %4456, label %4489

4456:                                             ; preds = %4454
  store i32 0, ptr %4, align 4, !tbaa !6
  %4457 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4457, ptr %6, align 4, !tbaa !6
  br i1 %4358, label %4496, label %4458

4458:                                             ; preds = %4456, %4483
  %4459 = phi i64 [ %4487, %4483 ], [ 1, %4456 ]
  %4460 = getelementptr inbounds i32, ptr %4, i64 %4459
  %4461 = load i32, ptr %4460, align 4, !tbaa !6
  %4462 = getelementptr inbounds i32, ptr %12, i64 %4459
  %4463 = load i32, ptr %4462, align 4, !tbaa !6
  %4464 = add nsw i32 %4463, -1
  %4465 = icmp slt i32 %4461, %4464
  br i1 %4465, label %4466, label %4481

4466:                                             ; preds = %4458
  br i1 %4453, label %4473, label %4467

4467:                                             ; preds = %4466
  %4468 = getelementptr inbounds i32, ptr %7, i64 %4459
  %4469 = load i32, ptr %4468, align 4, !tbaa !6
  %4470 = getelementptr inbounds i32, ptr %6, i64 %4459
  %4471 = load i32, ptr %4470, align 4, !tbaa !6
  %4472 = add nsw i32 %4471, %4469
  store i32 %4472, ptr %4470, align 4, !tbaa !6
  br label %4491

4473:                                             ; preds = %4449, %4466
  %4474 = phi i32 [ %4461, %4466 ], [ %4450, %4449 ]
  %4475 = phi ptr [ %4460, %4466 ], [ %4, %4449 ]
  %4476 = phi i64 [ %4459, %4466 ], [ 0, %4449 ]
  %4477 = add nsw i32 %4474, 1
  store i32 %4477, ptr %4475, align 4, !tbaa !6
  %4478 = getelementptr inbounds i32, ptr %7, i64 %4476
  %4479 = load i32, ptr %4478, align 4, !tbaa !6
  %4480 = getelementptr inbounds i32, ptr %6, i64 %4476
  br label %4491

4481:                                             ; preds = %4458
  %4482 = icmp eq i32 %4461, %4464
  br i1 %4482, label %4483, label %4489

4483:                                             ; preds = %4481
  store i32 0, ptr %4460, align 4, !tbaa !6
  %4484 = getelementptr inbounds i32, ptr %8, i64 %4459
  %4485 = load i32, ptr %4484, align 4, !tbaa !6
  %4486 = getelementptr inbounds i32, ptr %6, i64 %4459
  store i32 %4485, ptr %4486, align 4, !tbaa !6
  %4487 = add nuw nsw i64 %4459, 1
  %4488 = icmp eq i64 %4487, %4356
  br i1 %4488, label %4496, label %4458, !llvm.loop !348

4489:                                             ; preds = %4454, %4481
  %4490 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 325, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5554

4491:                                             ; preds = %4467, %4473
  %4492 = phi ptr [ %4480, %4473 ], [ %4460, %4467 ]
  %4493 = phi i32 [ %4479, %4473 ], [ 1, %4467 ]
  %4494 = load i32, ptr %4492, align 4, !tbaa !6
  %4495 = add nsw i32 %4494, %4493
  store i32 %4495, ptr %4492, align 4, !tbaa !6
  br label %4496

4496:                                             ; preds = %4483, %4491, %4456, %4445
  %4497 = icmp eq i32 %4448, %5
  br i1 %4497, label %5549, label %4359, !llvm.loop !349

4498:                                             ; preds = %4342, %4636
  %4499 = phi float [ %4333, %4342 ], [ %4584, %4636 ]
  %4500 = phi i32 [ 0, %4342 ], [ %4585, %4636 ]
  %4501 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4343, label %4502, label %4571

4502:                                             ; preds = %4498, %4561
  %4503 = phi i32 [ %4570, %4561 ], [ 0, %4498 ]
  %4504 = phi i64 [ %4512, %4561 ], [ %4347, %4498 ]
  %4505 = phi i64 [ %4569, %4561 ], [ %4346, %4498 ]
  %4506 = phi i32 [ %4567, %4561 ], [ %4501, %4498 ]
  %4507 = sub i32 %4345, %4503
  %4508 = tail call i32 @llvm.smin.i32(i32 %4507, i32 0)
  %4509 = sub i32 %4507, %4508
  %4510 = zext i32 %4509 to i64
  %4511 = add nuw nsw i64 %4510, 1
  %4512 = add nsw i64 %4504, -1
  %4513 = icmp ult i32 %4509, 31
  br i1 %4513, label %4549, label %4514

4514:                                             ; preds = %4502
  %4515 = and i64 %4511, 8589934560
  %4516 = sub i64 %4505, %4515
  br label %4517

4517:                                             ; preds = %4517, %4514
  %4518 = phi i64 [ 0, %4514 ], [ %4541, %4517 ]
  %4519 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4514 ], [ %4537, %4517 ]
  %4520 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4514 ], [ %4538, %4517 ]
  %4521 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4514 ], [ %4539, %4517 ]
  %4522 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4514 ], [ %4540, %4517 ]
  %4523 = sub i64 %4505, %4518
  %4524 = getelementptr inbounds i32, ptr %11, i64 %4523
  %4525 = getelementptr inbounds i32, ptr %4524, i64 -7
  %4526 = load <8 x i32>, ptr %4525, align 4, !tbaa !6
  %4527 = shufflevector <8 x i32> %4526, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4528 = getelementptr inbounds i32, ptr %4524, i64 -15
  %4529 = load <8 x i32>, ptr %4528, align 4, !tbaa !6
  %4530 = shufflevector <8 x i32> %4529, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4531 = getelementptr inbounds i32, ptr %4524, i64 -23
  %4532 = load <8 x i32>, ptr %4531, align 4, !tbaa !6
  %4533 = shufflevector <8 x i32> %4532, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4534 = getelementptr inbounds i32, ptr %4524, i64 -31
  %4535 = load <8 x i32>, ptr %4534, align 4, !tbaa !6
  %4536 = shufflevector <8 x i32> %4535, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4537 = mul <8 x i32> %4527, %4519
  %4538 = mul <8 x i32> %4530, %4520
  %4539 = mul <8 x i32> %4533, %4521
  %4540 = mul <8 x i32> %4536, %4522
  %4541 = add nuw i64 %4518, 32
  %4542 = icmp eq i64 %4541, %4515
  br i1 %4542, label %4543, label %4517, !llvm.loop !350

4543:                                             ; preds = %4517
  %4544 = mul <8 x i32> %4538, %4537
  %4545 = mul <8 x i32> %4539, %4544
  %4546 = mul <8 x i32> %4540, %4545
  %4547 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4546)
  %4548 = icmp eq i64 %4511, %4515
  br i1 %4548, label %4561, label %4549

4549:                                             ; preds = %4502, %4543
  %4550 = phi i64 [ %4505, %4502 ], [ %4516, %4543 ]
  %4551 = phi i32 [ 1, %4502 ], [ %4547, %4543 ]
  br label %4552

4552:                                             ; preds = %4549, %4552
  %4553 = phi i64 [ %4558, %4552 ], [ %4550, %4549 ]
  %4554 = phi i32 [ %4557, %4552 ], [ %4551, %4549 ]
  %4555 = getelementptr inbounds i32, ptr %11, i64 %4553
  %4556 = load i32, ptr %4555, align 4, !tbaa !6
  %4557 = mul nsw i32 %4556, %4554
  %4558 = add nsw i64 %4553, -1
  %4559 = trunc i64 %4553 to i32
  %4560 = icmp sgt i32 %4559, 0
  br i1 %4560, label %4552, label %4561, !llvm.loop !351

4561:                                             ; preds = %4552, %4543
  %4562 = phi i32 [ %4547, %4543 ], [ %4557, %4552 ]
  %4563 = and i64 %4512, 4294967295
  %4564 = getelementptr inbounds i32, ptr %6, i64 %4563
  %4565 = load i32, ptr %4564, align 4, !tbaa !6
  %4566 = mul nsw i32 %4565, %4562
  %4567 = add nsw i32 %4566, %4506
  %4568 = icmp sgt i64 %4504, 2
  %4569 = add nsw i64 %4505, -1
  %4570 = add i32 %4503, 1
  br i1 %4568, label %4502, label %4571, !llvm.loop !352

4571:                                             ; preds = %4561, %4498
  %4572 = phi i32 [ %4501, %4498 ], [ %4567, %4561 ]
  %4573 = icmp slt i32 %4572, %5
  br i1 %4573, label %4576, label %4574

4574:                                             ; preds = %4571
  %4575 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 325, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5554

4576:                                             ; preds = %4571
  %4577 = sext i32 %4572 to i64
  %4578 = getelementptr inbounds i32, ptr %4329, i64 %4577
  %4579 = load i32, ptr %4578, align 4, !tbaa !6
  %4580 = sitofp i32 %4579 to float
  %4581 = fcmp fast olt float %4499, %4580
  br i1 %4581, label %4582, label %4583

4582:                                             ; preds = %4576
  store float %4580, ptr %4331, align 4, !tbaa !163
  br label %4583

4583:                                             ; preds = %4576, %4582
  %4584 = phi float [ %4499, %4576 ], [ %4580, %4582 ]
  %4585 = add nuw nsw i32 %4500, 1
  br i1 %4344, label %4586, label %4636

4586:                                             ; preds = %4583
  %4587 = load i32, ptr %4, align 4, !tbaa !6
  %4588 = load i32, ptr %12, align 4, !tbaa !6
  %4589 = add nsw i32 %4588, -1
  %4590 = icmp slt i32 %4587, %4589
  br i1 %4590, label %4613, label %4591

4591:                                             ; preds = %4586
  %4592 = icmp eq i32 %4587, %4589
  br i1 %4592, label %4593, label %4629

4593:                                             ; preds = %4591
  store i32 0, ptr %4, align 4, !tbaa !6
  %4594 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4594, ptr %6, align 4, !tbaa !6
  br i1 %4349, label %4636, label %4595

4595:                                             ; preds = %4593, %4623
  %4596 = phi i64 [ %4627, %4623 ], [ 1, %4593 ]
  %4597 = getelementptr inbounds i32, ptr %4, i64 %4596
  %4598 = load i32, ptr %4597, align 4, !tbaa !6
  %4599 = getelementptr inbounds i32, ptr %12, i64 %4596
  %4600 = load i32, ptr %4599, align 4, !tbaa !6
  %4601 = add nsw i32 %4600, -1
  %4602 = icmp slt i32 %4598, %4601
  br i1 %4602, label %4603, label %4621

4603:                                             ; preds = %4595
  br i1 %4590, label %4613, label %4604

4604:                                             ; preds = %4603
  %4605 = shl i64 %4596, 32
  %4606 = add i64 %4605, -4294967296
  %4607 = ashr exact i64 %4606, 32
  %4608 = getelementptr inbounds i32, ptr %7, i64 %4607
  %4609 = load i32, ptr %4608, align 4, !tbaa !6
  %4610 = getelementptr inbounds i32, ptr %6, i64 %4596
  %4611 = load i32, ptr %4610, align 4, !tbaa !6
  %4612 = add nsw i32 %4611, %4609
  store i32 %4612, ptr %4610, align 4, !tbaa !6
  br label %4631

4613:                                             ; preds = %4586, %4603
  %4614 = phi i32 [ %4598, %4603 ], [ %4587, %4586 ]
  %4615 = phi ptr [ %4597, %4603 ], [ %4, %4586 ]
  %4616 = phi i64 [ %4596, %4603 ], [ 0, %4586 ]
  %4617 = add nsw i32 %4614, 1
  store i32 %4617, ptr %4615, align 4, !tbaa !6
  %4618 = getelementptr inbounds i32, ptr %7, i64 %4616
  %4619 = load i32, ptr %4618, align 4, !tbaa !6
  %4620 = getelementptr inbounds i32, ptr %6, i64 %4616
  br label %4631

4621:                                             ; preds = %4595
  %4622 = icmp eq i32 %4598, %4601
  br i1 %4622, label %4623, label %4629

4623:                                             ; preds = %4621
  store i32 0, ptr %4597, align 4, !tbaa !6
  %4624 = getelementptr inbounds i32, ptr %8, i64 %4596
  %4625 = load i32, ptr %4624, align 4, !tbaa !6
  %4626 = getelementptr inbounds i32, ptr %6, i64 %4596
  store i32 %4625, ptr %4626, align 4, !tbaa !6
  %4627 = add nuw nsw i64 %4596, 1
  %4628 = icmp eq i64 %4627, %4347
  br i1 %4628, label %4636, label %4595, !llvm.loop !353

4629:                                             ; preds = %4591, %4621
  %4630 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 325, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5554

4631:                                             ; preds = %4604, %4613
  %4632 = phi ptr [ %4620, %4613 ], [ %4597, %4604 ]
  %4633 = phi i32 [ %4619, %4613 ], [ 1, %4604 ]
  %4634 = load i32, ptr %4632, align 4, !tbaa !6
  %4635 = add nsw i32 %4634, %4633
  store i32 %4635, ptr %4632, align 4, !tbaa !6
  br label %4636

4636:                                             ; preds = %4623, %4631, %4593, %4583
  %4637 = icmp eq i32 %4585, %5
  br i1 %4637, label %5549, label %4498, !llvm.loop !354

4638:                                             ; preds = %4335
  %4639 = getelementptr inbounds i32, ptr %3, i64 %19
  %4640 = load i32, ptr %4639, align 4, !tbaa !6
  %4641 = icmp eq i32 %4640, 0
  %4642 = icmp sgt i32 %5, 0
  br i1 %4641, label %4652, label %4643

4643:                                             ; preds = %4638
  br i1 %4642, label %4644, label %5549

4644:                                             ; preds = %4643
  %4645 = icmp sgt i32 %13, 1
  %4646 = icmp sgt i32 %13, 0
  %4647 = add i32 %13, -2
  %4648 = zext i32 %4647 to i64
  %4649 = zext i32 %13 to i64
  %4650 = add nuw i32 %5, 1
  %4651 = icmp eq i32 %13, 1
  br label %4796

4652:                                             ; preds = %4638
  br i1 %4642, label %4653, label %5549

4653:                                             ; preds = %4652
  %4654 = icmp sgt i32 %13, 1
  %4655 = icmp sgt i32 %13, 0
  %4656 = add i32 %13, -2
  %4657 = zext i32 %4656 to i64
  %4658 = zext i32 %13 to i64
  %4659 = add nuw i32 %5, 1
  %4660 = icmp eq i32 %13, 1
  br label %4661

4661:                                             ; preds = %4653, %4794
  %4662 = phi float [ %4333, %4653 ], [ %4744, %4794 ]
  %4663 = phi i32 [ 0, %4653 ], [ %4746, %4794 ]
  %4664 = phi double [ 0.000000e+00, %4653 ], [ %4745, %4794 ]
  %4665 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4654, label %4666, label %4735

4666:                                             ; preds = %4661, %4725
  %4667 = phi i32 [ %4734, %4725 ], [ 0, %4661 ]
  %4668 = phi i64 [ %4676, %4725 ], [ %4658, %4661 ]
  %4669 = phi i64 [ %4733, %4725 ], [ %4657, %4661 ]
  %4670 = phi i32 [ %4731, %4725 ], [ %4665, %4661 ]
  %4671 = sub i32 %4656, %4667
  %4672 = tail call i32 @llvm.smin.i32(i32 %4671, i32 0)
  %4673 = sub i32 %4671, %4672
  %4674 = zext i32 %4673 to i64
  %4675 = add nuw nsw i64 %4674, 1
  %4676 = add nsw i64 %4668, -1
  %4677 = icmp ult i32 %4673, 31
  br i1 %4677, label %4713, label %4678

4678:                                             ; preds = %4666
  %4679 = and i64 %4675, 8589934560
  %4680 = sub i64 %4669, %4679
  br label %4681

4681:                                             ; preds = %4681, %4678
  %4682 = phi i64 [ 0, %4678 ], [ %4705, %4681 ]
  %4683 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4678 ], [ %4701, %4681 ]
  %4684 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4678 ], [ %4702, %4681 ]
  %4685 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4678 ], [ %4703, %4681 ]
  %4686 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4678 ], [ %4704, %4681 ]
  %4687 = sub i64 %4669, %4682
  %4688 = getelementptr inbounds i32, ptr %9, i64 %4687
  %4689 = getelementptr inbounds i32, ptr %4688, i64 -7
  %4690 = load <8 x i32>, ptr %4689, align 4, !tbaa !6
  %4691 = shufflevector <8 x i32> %4690, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4692 = getelementptr inbounds i32, ptr %4688, i64 -15
  %4693 = load <8 x i32>, ptr %4692, align 4, !tbaa !6
  %4694 = shufflevector <8 x i32> %4693, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4695 = getelementptr inbounds i32, ptr %4688, i64 -23
  %4696 = load <8 x i32>, ptr %4695, align 4, !tbaa !6
  %4697 = shufflevector <8 x i32> %4696, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4698 = getelementptr inbounds i32, ptr %4688, i64 -31
  %4699 = load <8 x i32>, ptr %4698, align 4, !tbaa !6
  %4700 = shufflevector <8 x i32> %4699, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4701 = mul <8 x i32> %4691, %4683
  %4702 = mul <8 x i32> %4694, %4684
  %4703 = mul <8 x i32> %4697, %4685
  %4704 = mul <8 x i32> %4700, %4686
  %4705 = add nuw i64 %4682, 32
  %4706 = icmp eq i64 %4705, %4679
  br i1 %4706, label %4707, label %4681, !llvm.loop !355

4707:                                             ; preds = %4681
  %4708 = mul <8 x i32> %4702, %4701
  %4709 = mul <8 x i32> %4703, %4708
  %4710 = mul <8 x i32> %4704, %4709
  %4711 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4710)
  %4712 = icmp eq i64 %4675, %4679
  br i1 %4712, label %4725, label %4713

4713:                                             ; preds = %4666, %4707
  %4714 = phi i64 [ %4669, %4666 ], [ %4680, %4707 ]
  %4715 = phi i32 [ 1, %4666 ], [ %4711, %4707 ]
  br label %4716

4716:                                             ; preds = %4713, %4716
  %4717 = phi i64 [ %4722, %4716 ], [ %4714, %4713 ]
  %4718 = phi i32 [ %4721, %4716 ], [ %4715, %4713 ]
  %4719 = getelementptr inbounds i32, ptr %9, i64 %4717
  %4720 = load i32, ptr %4719, align 4, !tbaa !6
  %4721 = mul nsw i32 %4720, %4718
  %4722 = add nsw i64 %4717, -1
  %4723 = trunc i64 %4717 to i32
  %4724 = icmp sgt i32 %4723, 0
  br i1 %4724, label %4716, label %4725, !llvm.loop !356

4725:                                             ; preds = %4716, %4707
  %4726 = phi i32 [ %4711, %4707 ], [ %4721, %4716 ]
  %4727 = and i64 %4676, 4294967295
  %4728 = getelementptr inbounds i32, ptr %6, i64 %4727
  %4729 = load i32, ptr %4728, align 4, !tbaa !6
  %4730 = mul nsw i32 %4729, %4726
  %4731 = add nsw i32 %4730, %4670
  %4732 = icmp sgt i64 %4668, 2
  %4733 = add nsw i64 %4669, -1
  %4734 = add i32 %4667, 1
  br i1 %4732, label %4666, label %4735, !llvm.loop !357

4735:                                             ; preds = %4725, %4661
  %4736 = phi i32 [ %4665, %4661 ], [ %4731, %4725 ]
  %4737 = sext i32 %4736 to i64
  %4738 = getelementptr inbounds i32, ptr %4329, i64 %4737
  %4739 = load i32, ptr %4738, align 4, !tbaa !6
  %4740 = sitofp i32 %4739 to float
  %4741 = fcmp fast olt float %4662, %4740
  br i1 %4741, label %4742, label %4743

4742:                                             ; preds = %4735
  store float %4740, ptr %4331, align 4, !tbaa !163
  br label %4743

4743:                                             ; preds = %4742, %4735
  %4744 = phi float [ %4740, %4742 ], [ %4662, %4735 ]
  %4745 = fadd fast double %4664, 1.000000e+00
  %4746 = add nuw nsw i32 %4663, 1
  br i1 %4655, label %4747, label %4794

4747:                                             ; preds = %4743
  %4748 = load i32, ptr %4, align 4, !tbaa !6
  %4749 = load i32, ptr %12, align 4, !tbaa !6
  %4750 = add nsw i32 %4749, -1
  %4751 = icmp slt i32 %4748, %4750
  br i1 %4751, label %4771, label %4752

4752:                                             ; preds = %4747
  %4753 = icmp eq i32 %4748, %4750
  br i1 %4753, label %4754, label %4787

4754:                                             ; preds = %4752
  store i32 0, ptr %4, align 4, !tbaa !6
  %4755 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4755, ptr %6, align 4, !tbaa !6
  br i1 %4660, label %4794, label %4756

4756:                                             ; preds = %4754, %4781
  %4757 = phi i64 [ %4785, %4781 ], [ 1, %4754 ]
  %4758 = getelementptr inbounds i32, ptr %4, i64 %4757
  %4759 = load i32, ptr %4758, align 4, !tbaa !6
  %4760 = getelementptr inbounds i32, ptr %12, i64 %4757
  %4761 = load i32, ptr %4760, align 4, !tbaa !6
  %4762 = add nsw i32 %4761, -1
  %4763 = icmp slt i32 %4759, %4762
  br i1 %4763, label %4764, label %4779

4764:                                             ; preds = %4756
  br i1 %4751, label %4771, label %4765

4765:                                             ; preds = %4764
  %4766 = getelementptr inbounds i32, ptr %7, i64 %4757
  %4767 = load i32, ptr %4766, align 4, !tbaa !6
  %4768 = getelementptr inbounds i32, ptr %6, i64 %4757
  %4769 = load i32, ptr %4768, align 4, !tbaa !6
  %4770 = add nsw i32 %4769, %4767
  store i32 %4770, ptr %4768, align 4, !tbaa !6
  br label %4789

4771:                                             ; preds = %4747, %4764
  %4772 = phi i32 [ %4759, %4764 ], [ %4748, %4747 ]
  %4773 = phi ptr [ %4758, %4764 ], [ %4, %4747 ]
  %4774 = phi i64 [ %4757, %4764 ], [ 0, %4747 ]
  %4775 = add nsw i32 %4772, 1
  store i32 %4775, ptr %4773, align 4, !tbaa !6
  %4776 = getelementptr inbounds i32, ptr %7, i64 %4774
  %4777 = load i32, ptr %4776, align 4, !tbaa !6
  %4778 = getelementptr inbounds i32, ptr %6, i64 %4774
  br label %4789

4779:                                             ; preds = %4756
  %4780 = icmp eq i32 %4759, %4762
  br i1 %4780, label %4781, label %4787

4781:                                             ; preds = %4779
  store i32 0, ptr %4758, align 4, !tbaa !6
  %4782 = getelementptr inbounds i32, ptr %8, i64 %4757
  %4783 = load i32, ptr %4782, align 4, !tbaa !6
  %4784 = getelementptr inbounds i32, ptr %6, i64 %4757
  store i32 %4783, ptr %4784, align 4, !tbaa !6
  %4785 = add nuw nsw i64 %4757, 1
  %4786 = icmp eq i64 %4785, %4658
  br i1 %4786, label %4794, label %4756, !llvm.loop !358

4787:                                             ; preds = %4752, %4779
  %4788 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 325, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5554

4789:                                             ; preds = %4765, %4771
  %4790 = phi ptr [ %4778, %4771 ], [ %4758, %4765 ]
  %4791 = phi i32 [ %4777, %4771 ], [ 1, %4765 ]
  %4792 = load i32, ptr %4790, align 4, !tbaa !6
  %4793 = add nsw i32 %4792, %4791
  store i32 %4793, ptr %4790, align 4, !tbaa !6
  br label %4794

4794:                                             ; preds = %4781, %4789, %4754, %4743
  %4795 = icmp eq i32 %4746, %5
  br i1 %4795, label %5549, label %4661, !llvm.loop !359

4796:                                             ; preds = %4644, %4934
  %4797 = phi float [ %4333, %4644 ], [ %4882, %4934 ]
  %4798 = phi i32 [ 0, %4644 ], [ %4883, %4934 ]
  %4799 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4645, label %4800, label %4869

4800:                                             ; preds = %4796, %4859
  %4801 = phi i32 [ %4868, %4859 ], [ 0, %4796 ]
  %4802 = phi i64 [ %4810, %4859 ], [ %4649, %4796 ]
  %4803 = phi i64 [ %4867, %4859 ], [ %4648, %4796 ]
  %4804 = phi i32 [ %4865, %4859 ], [ %4799, %4796 ]
  %4805 = sub i32 %4647, %4801
  %4806 = tail call i32 @llvm.smin.i32(i32 %4805, i32 0)
  %4807 = sub i32 %4805, %4806
  %4808 = zext i32 %4807 to i64
  %4809 = add nuw nsw i64 %4808, 1
  %4810 = add nsw i64 %4802, -1
  %4811 = icmp ult i32 %4807, 31
  br i1 %4811, label %4847, label %4812

4812:                                             ; preds = %4800
  %4813 = and i64 %4809, 8589934560
  %4814 = sub i64 %4803, %4813
  br label %4815

4815:                                             ; preds = %4815, %4812
  %4816 = phi i64 [ 0, %4812 ], [ %4839, %4815 ]
  %4817 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4812 ], [ %4835, %4815 ]
  %4818 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4812 ], [ %4836, %4815 ]
  %4819 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4812 ], [ %4837, %4815 ]
  %4820 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4812 ], [ %4838, %4815 ]
  %4821 = sub i64 %4803, %4816
  %4822 = getelementptr inbounds i32, ptr %11, i64 %4821
  %4823 = getelementptr inbounds i32, ptr %4822, i64 -7
  %4824 = load <8 x i32>, ptr %4823, align 4, !tbaa !6
  %4825 = shufflevector <8 x i32> %4824, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4826 = getelementptr inbounds i32, ptr %4822, i64 -15
  %4827 = load <8 x i32>, ptr %4826, align 4, !tbaa !6
  %4828 = shufflevector <8 x i32> %4827, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4829 = getelementptr inbounds i32, ptr %4822, i64 -23
  %4830 = load <8 x i32>, ptr %4829, align 4, !tbaa !6
  %4831 = shufflevector <8 x i32> %4830, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4832 = getelementptr inbounds i32, ptr %4822, i64 -31
  %4833 = load <8 x i32>, ptr %4832, align 4, !tbaa !6
  %4834 = shufflevector <8 x i32> %4833, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4835 = mul <8 x i32> %4825, %4817
  %4836 = mul <8 x i32> %4828, %4818
  %4837 = mul <8 x i32> %4831, %4819
  %4838 = mul <8 x i32> %4834, %4820
  %4839 = add nuw i64 %4816, 32
  %4840 = icmp eq i64 %4839, %4813
  br i1 %4840, label %4841, label %4815, !llvm.loop !360

4841:                                             ; preds = %4815
  %4842 = mul <8 x i32> %4836, %4835
  %4843 = mul <8 x i32> %4837, %4842
  %4844 = mul <8 x i32> %4838, %4843
  %4845 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4844)
  %4846 = icmp eq i64 %4809, %4813
  br i1 %4846, label %4859, label %4847

4847:                                             ; preds = %4800, %4841
  %4848 = phi i64 [ %4803, %4800 ], [ %4814, %4841 ]
  %4849 = phi i32 [ 1, %4800 ], [ %4845, %4841 ]
  br label %4850

4850:                                             ; preds = %4847, %4850
  %4851 = phi i64 [ %4856, %4850 ], [ %4848, %4847 ]
  %4852 = phi i32 [ %4855, %4850 ], [ %4849, %4847 ]
  %4853 = getelementptr inbounds i32, ptr %11, i64 %4851
  %4854 = load i32, ptr %4853, align 4, !tbaa !6
  %4855 = mul nsw i32 %4854, %4852
  %4856 = add nsw i64 %4851, -1
  %4857 = trunc i64 %4851 to i32
  %4858 = icmp sgt i32 %4857, 0
  br i1 %4858, label %4850, label %4859, !llvm.loop !361

4859:                                             ; preds = %4850, %4841
  %4860 = phi i32 [ %4845, %4841 ], [ %4855, %4850 ]
  %4861 = and i64 %4810, 4294967295
  %4862 = getelementptr inbounds i32, ptr %6, i64 %4861
  %4863 = load i32, ptr %4862, align 4, !tbaa !6
  %4864 = mul nsw i32 %4863, %4860
  %4865 = add nsw i32 %4864, %4804
  %4866 = icmp sgt i64 %4802, 2
  %4867 = add nsw i64 %4803, -1
  %4868 = add i32 %4801, 1
  br i1 %4866, label %4800, label %4869, !llvm.loop !362

4869:                                             ; preds = %4859, %4796
  %4870 = phi i32 [ %4799, %4796 ], [ %4865, %4859 ]
  %4871 = icmp slt i32 %4870, %5
  br i1 %4871, label %4874, label %4872

4872:                                             ; preds = %4869
  %4873 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 325, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5554

4874:                                             ; preds = %4869
  %4875 = sext i32 %4870 to i64
  %4876 = getelementptr inbounds i32, ptr %4329, i64 %4875
  %4877 = load i32, ptr %4876, align 4, !tbaa !6
  %4878 = sitofp i32 %4877 to float
  %4879 = fcmp fast olt float %4797, %4878
  br i1 %4879, label %4880, label %4881

4880:                                             ; preds = %4874
  store float %4878, ptr %4331, align 4, !tbaa !163
  br label %4881

4881:                                             ; preds = %4880, %4874
  %4882 = phi float [ %4878, %4880 ], [ %4797, %4874 ]
  %4883 = add nuw nsw i32 %4798, 1
  br i1 %4646, label %4884, label %4934

4884:                                             ; preds = %4881
  %4885 = load i32, ptr %4, align 4, !tbaa !6
  %4886 = load i32, ptr %12, align 4, !tbaa !6
  %4887 = add nsw i32 %4886, -1
  %4888 = icmp slt i32 %4885, %4887
  br i1 %4888, label %4911, label %4889

4889:                                             ; preds = %4884
  %4890 = icmp eq i32 %4885, %4887
  br i1 %4890, label %4891, label %4927

4891:                                             ; preds = %4889
  store i32 0, ptr %4, align 4, !tbaa !6
  %4892 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4892, ptr %6, align 4, !tbaa !6
  br i1 %4651, label %4934, label %4893

4893:                                             ; preds = %4891, %4921
  %4894 = phi i64 [ %4925, %4921 ], [ 1, %4891 ]
  %4895 = getelementptr inbounds i32, ptr %4, i64 %4894
  %4896 = load i32, ptr %4895, align 4, !tbaa !6
  %4897 = getelementptr inbounds i32, ptr %12, i64 %4894
  %4898 = load i32, ptr %4897, align 4, !tbaa !6
  %4899 = add nsw i32 %4898, -1
  %4900 = icmp slt i32 %4896, %4899
  br i1 %4900, label %4901, label %4919

4901:                                             ; preds = %4893
  br i1 %4888, label %4911, label %4902

4902:                                             ; preds = %4901
  %4903 = shl i64 %4894, 32
  %4904 = add i64 %4903, -4294967296
  %4905 = ashr exact i64 %4904, 32
  %4906 = getelementptr inbounds i32, ptr %7, i64 %4905
  %4907 = load i32, ptr %4906, align 4, !tbaa !6
  %4908 = getelementptr inbounds i32, ptr %6, i64 %4894
  %4909 = load i32, ptr %4908, align 4, !tbaa !6
  %4910 = add nsw i32 %4909, %4907
  store i32 %4910, ptr %4908, align 4, !tbaa !6
  br label %4929

4911:                                             ; preds = %4884, %4901
  %4912 = phi i32 [ %4896, %4901 ], [ %4885, %4884 ]
  %4913 = phi ptr [ %4895, %4901 ], [ %4, %4884 ]
  %4914 = phi i64 [ %4894, %4901 ], [ 0, %4884 ]
  %4915 = add nsw i32 %4912, 1
  store i32 %4915, ptr %4913, align 4, !tbaa !6
  %4916 = getelementptr inbounds i32, ptr %7, i64 %4914
  %4917 = load i32, ptr %4916, align 4, !tbaa !6
  %4918 = getelementptr inbounds i32, ptr %6, i64 %4914
  br label %4929

4919:                                             ; preds = %4893
  %4920 = icmp eq i32 %4896, %4899
  br i1 %4920, label %4921, label %4927

4921:                                             ; preds = %4919
  store i32 0, ptr %4895, align 4, !tbaa !6
  %4922 = getelementptr inbounds i32, ptr %8, i64 %4894
  %4923 = load i32, ptr %4922, align 4, !tbaa !6
  %4924 = getelementptr inbounds i32, ptr %6, i64 %4894
  store i32 %4923, ptr %4924, align 4, !tbaa !6
  %4925 = add nuw nsw i64 %4894, 1
  %4926 = icmp eq i64 %4925, %4649
  br i1 %4926, label %4934, label %4893, !llvm.loop !363

4927:                                             ; preds = %4889, %4919
  %4928 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 325, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5554

4929:                                             ; preds = %4902, %4911
  %4930 = phi ptr [ %4918, %4911 ], [ %4895, %4902 ]
  %4931 = phi i32 [ %4917, %4911 ], [ 1, %4902 ]
  %4932 = load i32, ptr %4930, align 4, !tbaa !6
  %4933 = add nsw i32 %4932, %4931
  store i32 %4933, ptr %4930, align 4, !tbaa !6
  br label %4934

4934:                                             ; preds = %4921, %4929, %4891, %4881
  %4935 = icmp eq i32 %4883, %5
  br i1 %4935, label %5549, label %4796, !llvm.loop !364

4936:                                             ; preds = %4335
  %4937 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 325, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5549

4938:                                             ; preds = %18
  %4939 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4940 = load ptr, ptr %4939, align 8, !tbaa !10
  %4941 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4942 = load ptr, ptr %4941, align 8, !tbaa !10
  %4943 = load i32, ptr %4940, align 4, !tbaa !6
  %4944 = sitofp i32 %4943 to double
  store double %4944, ptr %4942, align 8, !tbaa !19
  %4945 = icmp eq i32 %13, 0
  br i1 %4945, label %5549, label %4946

4946:                                             ; preds = %4938
  switch i32 %1, label %5547 [
    i32 1, label %4947
    i32 0, label %5249
  ]

4947:                                             ; preds = %4946
  %4948 = getelementptr inbounds i32, ptr %3, i64 %19
  %4949 = load i32, ptr %4948, align 4, !tbaa !6
  %4950 = icmp eq i32 %4949, 0
  %4951 = icmp sgt i32 %5, 0
  br i1 %4950, label %4961, label %4952

4952:                                             ; preds = %4947
  br i1 %4951, label %4953, label %5549

4953:                                             ; preds = %4952
  %4954 = icmp sgt i32 %13, 1
  %4955 = icmp sgt i32 %13, 0
  %4956 = add i32 %13, -2
  %4957 = zext i32 %4956 to i64
  %4958 = zext i32 %13 to i64
  %4959 = add nuw i32 %5, 1
  %4960 = icmp eq i32 %13, 1
  br label %5109

4961:                                             ; preds = %4947
  br i1 %4951, label %4962, label %5549

4962:                                             ; preds = %4961
  %4963 = icmp sgt i32 %13, 1
  %4964 = icmp sgt i32 %13, 0
  %4965 = add i32 %13, -2
  %4966 = zext i32 %4965 to i64
  %4967 = zext i32 %13 to i64
  %4968 = add nuw i32 %5, 1
  %4969 = icmp eq i32 %13, 1
  br label %4970

4970:                                             ; preds = %4962, %5107
  %4971 = phi double [ %4944, %4962 ], [ %5057, %5107 ]
  %4972 = phi i32 [ 0, %4962 ], [ %5059, %5107 ]
  %4973 = phi double [ 0.000000e+00, %4962 ], [ %5058, %5107 ]
  %4974 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4963, label %4975, label %5044

4975:                                             ; preds = %4970, %5034
  %4976 = phi i32 [ %5043, %5034 ], [ 0, %4970 ]
  %4977 = phi i64 [ %4985, %5034 ], [ %4967, %4970 ]
  %4978 = phi i64 [ %5042, %5034 ], [ %4966, %4970 ]
  %4979 = phi i32 [ %5040, %5034 ], [ %4974, %4970 ]
  %4980 = sub i32 %4965, %4976
  %4981 = tail call i32 @llvm.smin.i32(i32 %4980, i32 0)
  %4982 = sub i32 %4980, %4981
  %4983 = zext i32 %4982 to i64
  %4984 = add nuw nsw i64 %4983, 1
  %4985 = add nsw i64 %4977, -1
  %4986 = icmp ult i32 %4982, 31
  br i1 %4986, label %5022, label %4987

4987:                                             ; preds = %4975
  %4988 = and i64 %4984, 8589934560
  %4989 = sub i64 %4978, %4988
  br label %4990

4990:                                             ; preds = %4990, %4987
  %4991 = phi i64 [ 0, %4987 ], [ %5014, %4990 ]
  %4992 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4987 ], [ %5010, %4990 ]
  %4993 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4987 ], [ %5011, %4990 ]
  %4994 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4987 ], [ %5012, %4990 ]
  %4995 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4987 ], [ %5013, %4990 ]
  %4996 = sub i64 %4978, %4991
  %4997 = getelementptr inbounds i32, ptr %9, i64 %4996
  %4998 = getelementptr inbounds i32, ptr %4997, i64 -7
  %4999 = load <8 x i32>, ptr %4998, align 4, !tbaa !6
  %5000 = shufflevector <8 x i32> %4999, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5001 = getelementptr inbounds i32, ptr %4997, i64 -15
  %5002 = load <8 x i32>, ptr %5001, align 4, !tbaa !6
  %5003 = shufflevector <8 x i32> %5002, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5004 = getelementptr inbounds i32, ptr %4997, i64 -23
  %5005 = load <8 x i32>, ptr %5004, align 4, !tbaa !6
  %5006 = shufflevector <8 x i32> %5005, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5007 = getelementptr inbounds i32, ptr %4997, i64 -31
  %5008 = load <8 x i32>, ptr %5007, align 4, !tbaa !6
  %5009 = shufflevector <8 x i32> %5008, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5010 = mul <8 x i32> %5000, %4992
  %5011 = mul <8 x i32> %5003, %4993
  %5012 = mul <8 x i32> %5006, %4994
  %5013 = mul <8 x i32> %5009, %4995
  %5014 = add nuw i64 %4991, 32
  %5015 = icmp eq i64 %5014, %4988
  br i1 %5015, label %5016, label %4990, !llvm.loop !365

5016:                                             ; preds = %4990
  %5017 = mul <8 x i32> %5011, %5010
  %5018 = mul <8 x i32> %5012, %5017
  %5019 = mul <8 x i32> %5013, %5018
  %5020 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5019)
  %5021 = icmp eq i64 %4984, %4988
  br i1 %5021, label %5034, label %5022

5022:                                             ; preds = %4975, %5016
  %5023 = phi i64 [ %4978, %4975 ], [ %4989, %5016 ]
  %5024 = phi i32 [ 1, %4975 ], [ %5020, %5016 ]
  br label %5025

5025:                                             ; preds = %5022, %5025
  %5026 = phi i64 [ %5031, %5025 ], [ %5023, %5022 ]
  %5027 = phi i32 [ %5030, %5025 ], [ %5024, %5022 ]
  %5028 = getelementptr inbounds i32, ptr %9, i64 %5026
  %5029 = load i32, ptr %5028, align 4, !tbaa !6
  %5030 = mul nsw i32 %5029, %5027
  %5031 = add nsw i64 %5026, -1
  %5032 = trunc i64 %5026 to i32
  %5033 = icmp sgt i32 %5032, 0
  br i1 %5033, label %5025, label %5034, !llvm.loop !366

5034:                                             ; preds = %5025, %5016
  %5035 = phi i32 [ %5020, %5016 ], [ %5030, %5025 ]
  %5036 = and i64 %4985, 4294967295
  %5037 = getelementptr inbounds i32, ptr %6, i64 %5036
  %5038 = load i32, ptr %5037, align 4, !tbaa !6
  %5039 = mul nsw i32 %5038, %5035
  %5040 = add nsw i32 %5039, %4979
  %5041 = icmp sgt i64 %4977, 2
  %5042 = add nsw i64 %4978, -1
  %5043 = add i32 %4976, 1
  br i1 %5041, label %4975, label %5044, !llvm.loop !367

5044:                                             ; preds = %5034, %4970
  %5045 = phi i32 [ %4974, %4970 ], [ %5040, %5034 ]
  %5046 = sext i32 %5045 to i64
  %5047 = getelementptr inbounds double, ptr %2, i64 %5046
  %5048 = load double, ptr %5047, align 8, !tbaa !19
  %5049 = getelementptr inbounds i32, ptr %4940, i64 %5046
  %5050 = load i32, ptr %5049, align 4, !tbaa !6
  %5051 = sitofp i32 %5050 to double
  %5052 = fcmp fast one double %5048, 0.000000e+00
  %5053 = fcmp fast olt double %4971, %5051
  %5054 = select i1 %5052, i1 %5053, i1 false
  br i1 %5054, label %5055, label %5056

5055:                                             ; preds = %5044
  store double %5051, ptr %4942, align 8, !tbaa !19
  br label %5056

5056:                                             ; preds = %5055, %5044
  %5057 = phi double [ %5051, %5055 ], [ %4971, %5044 ]
  %5058 = fadd fast double %5048, %4973
  %5059 = add nuw nsw i32 %4972, 1
  br i1 %4964, label %5060, label %5107

5060:                                             ; preds = %5056
  %5061 = load i32, ptr %4, align 4, !tbaa !6
  %5062 = load i32, ptr %12, align 4, !tbaa !6
  %5063 = add nsw i32 %5062, -1
  %5064 = icmp slt i32 %5061, %5063
  br i1 %5064, label %5084, label %5065

5065:                                             ; preds = %5060
  %5066 = icmp eq i32 %5061, %5063
  br i1 %5066, label %5067, label %5100

5067:                                             ; preds = %5065
  store i32 0, ptr %4, align 4, !tbaa !6
  %5068 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5068, ptr %6, align 4, !tbaa !6
  br i1 %4969, label %5107, label %5069

5069:                                             ; preds = %5067, %5094
  %5070 = phi i64 [ %5098, %5094 ], [ 1, %5067 ]
  %5071 = getelementptr inbounds i32, ptr %4, i64 %5070
  %5072 = load i32, ptr %5071, align 4, !tbaa !6
  %5073 = getelementptr inbounds i32, ptr %12, i64 %5070
  %5074 = load i32, ptr %5073, align 4, !tbaa !6
  %5075 = add nsw i32 %5074, -1
  %5076 = icmp slt i32 %5072, %5075
  br i1 %5076, label %5077, label %5092

5077:                                             ; preds = %5069
  br i1 %5064, label %5084, label %5078

5078:                                             ; preds = %5077
  %5079 = getelementptr inbounds i32, ptr %7, i64 %5070
  %5080 = load i32, ptr %5079, align 4, !tbaa !6
  %5081 = getelementptr inbounds i32, ptr %6, i64 %5070
  %5082 = load i32, ptr %5081, align 4, !tbaa !6
  %5083 = add nsw i32 %5082, %5080
  store i32 %5083, ptr %5081, align 4, !tbaa !6
  br label %5102

5084:                                             ; preds = %5060, %5077
  %5085 = phi i32 [ %5072, %5077 ], [ %5061, %5060 ]
  %5086 = phi ptr [ %5071, %5077 ], [ %4, %5060 ]
  %5087 = phi i64 [ %5070, %5077 ], [ 0, %5060 ]
  %5088 = add nsw i32 %5085, 1
  store i32 %5088, ptr %5086, align 4, !tbaa !6
  %5089 = getelementptr inbounds i32, ptr %7, i64 %5087
  %5090 = load i32, ptr %5089, align 4, !tbaa !6
  %5091 = getelementptr inbounds i32, ptr %6, i64 %5087
  br label %5102

5092:                                             ; preds = %5069
  %5093 = icmp eq i32 %5072, %5075
  br i1 %5093, label %5094, label %5100

5094:                                             ; preds = %5092
  store i32 0, ptr %5071, align 4, !tbaa !6
  %5095 = getelementptr inbounds i32, ptr %8, i64 %5070
  %5096 = load i32, ptr %5095, align 4, !tbaa !6
  %5097 = getelementptr inbounds i32, ptr %6, i64 %5070
  store i32 %5096, ptr %5097, align 4, !tbaa !6
  %5098 = add nuw nsw i64 %5070, 1
  %5099 = icmp eq i64 %5098, %4967
  br i1 %5099, label %5107, label %5069, !llvm.loop !368

5100:                                             ; preds = %5065, %5092
  %5101 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 330, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5554

5102:                                             ; preds = %5078, %5084
  %5103 = phi ptr [ %5091, %5084 ], [ %5071, %5078 ]
  %5104 = phi i32 [ %5090, %5084 ], [ 1, %5078 ]
  %5105 = load i32, ptr %5103, align 4, !tbaa !6
  %5106 = add nsw i32 %5105, %5104
  store i32 %5106, ptr %5103, align 4, !tbaa !6
  br label %5107

5107:                                             ; preds = %5094, %5102, %5067, %5056
  %5108 = icmp eq i32 %5059, %5
  br i1 %5108, label %5549, label %4970, !llvm.loop !369

5109:                                             ; preds = %4953, %5247
  %5110 = phi double [ %4944, %4953 ], [ %5195, %5247 ]
  %5111 = phi i32 [ 0, %4953 ], [ %5196, %5247 ]
  %5112 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4954, label %5113, label %5182

5113:                                             ; preds = %5109, %5172
  %5114 = phi i32 [ %5181, %5172 ], [ 0, %5109 ]
  %5115 = phi i64 [ %5123, %5172 ], [ %4958, %5109 ]
  %5116 = phi i64 [ %5180, %5172 ], [ %4957, %5109 ]
  %5117 = phi i32 [ %5178, %5172 ], [ %5112, %5109 ]
  %5118 = sub i32 %4956, %5114
  %5119 = tail call i32 @llvm.smin.i32(i32 %5118, i32 0)
  %5120 = sub i32 %5118, %5119
  %5121 = zext i32 %5120 to i64
  %5122 = add nuw nsw i64 %5121, 1
  %5123 = add nsw i64 %5115, -1
  %5124 = icmp ult i32 %5120, 31
  br i1 %5124, label %5160, label %5125

5125:                                             ; preds = %5113
  %5126 = and i64 %5122, 8589934560
  %5127 = sub i64 %5116, %5126
  br label %5128

5128:                                             ; preds = %5128, %5125
  %5129 = phi i64 [ 0, %5125 ], [ %5152, %5128 ]
  %5130 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5125 ], [ %5148, %5128 ]
  %5131 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5125 ], [ %5149, %5128 ]
  %5132 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5125 ], [ %5150, %5128 ]
  %5133 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5125 ], [ %5151, %5128 ]
  %5134 = sub i64 %5116, %5129
  %5135 = getelementptr inbounds i32, ptr %11, i64 %5134
  %5136 = getelementptr inbounds i32, ptr %5135, i64 -7
  %5137 = load <8 x i32>, ptr %5136, align 4, !tbaa !6
  %5138 = shufflevector <8 x i32> %5137, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5139 = getelementptr inbounds i32, ptr %5135, i64 -15
  %5140 = load <8 x i32>, ptr %5139, align 4, !tbaa !6
  %5141 = shufflevector <8 x i32> %5140, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5142 = getelementptr inbounds i32, ptr %5135, i64 -23
  %5143 = load <8 x i32>, ptr %5142, align 4, !tbaa !6
  %5144 = shufflevector <8 x i32> %5143, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5145 = getelementptr inbounds i32, ptr %5135, i64 -31
  %5146 = load <8 x i32>, ptr %5145, align 4, !tbaa !6
  %5147 = shufflevector <8 x i32> %5146, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5148 = mul <8 x i32> %5138, %5130
  %5149 = mul <8 x i32> %5141, %5131
  %5150 = mul <8 x i32> %5144, %5132
  %5151 = mul <8 x i32> %5147, %5133
  %5152 = add nuw i64 %5129, 32
  %5153 = icmp eq i64 %5152, %5126
  br i1 %5153, label %5154, label %5128, !llvm.loop !370

5154:                                             ; preds = %5128
  %5155 = mul <8 x i32> %5149, %5148
  %5156 = mul <8 x i32> %5150, %5155
  %5157 = mul <8 x i32> %5151, %5156
  %5158 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5157)
  %5159 = icmp eq i64 %5122, %5126
  br i1 %5159, label %5172, label %5160

5160:                                             ; preds = %5113, %5154
  %5161 = phi i64 [ %5116, %5113 ], [ %5127, %5154 ]
  %5162 = phi i32 [ 1, %5113 ], [ %5158, %5154 ]
  br label %5163

5163:                                             ; preds = %5160, %5163
  %5164 = phi i64 [ %5169, %5163 ], [ %5161, %5160 ]
  %5165 = phi i32 [ %5168, %5163 ], [ %5162, %5160 ]
  %5166 = getelementptr inbounds i32, ptr %11, i64 %5164
  %5167 = load i32, ptr %5166, align 4, !tbaa !6
  %5168 = mul nsw i32 %5167, %5165
  %5169 = add nsw i64 %5164, -1
  %5170 = trunc i64 %5164 to i32
  %5171 = icmp sgt i32 %5170, 0
  br i1 %5171, label %5163, label %5172, !llvm.loop !371

5172:                                             ; preds = %5163, %5154
  %5173 = phi i32 [ %5158, %5154 ], [ %5168, %5163 ]
  %5174 = and i64 %5123, 4294967295
  %5175 = getelementptr inbounds i32, ptr %6, i64 %5174
  %5176 = load i32, ptr %5175, align 4, !tbaa !6
  %5177 = mul nsw i32 %5176, %5173
  %5178 = add nsw i32 %5177, %5117
  %5179 = icmp sgt i64 %5115, 2
  %5180 = add nsw i64 %5116, -1
  %5181 = add i32 %5114, 1
  br i1 %5179, label %5113, label %5182, !llvm.loop !372

5182:                                             ; preds = %5172, %5109
  %5183 = phi i32 [ %5112, %5109 ], [ %5178, %5172 ]
  %5184 = icmp slt i32 %5183, %5
  br i1 %5184, label %5187, label %5185

5185:                                             ; preds = %5182
  %5186 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 330, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5554

5187:                                             ; preds = %5182
  %5188 = sext i32 %5183 to i64
  %5189 = getelementptr inbounds i32, ptr %4940, i64 %5188
  %5190 = load i32, ptr %5189, align 4, !tbaa !6
  %5191 = sitofp i32 %5190 to double
  %5192 = fcmp fast olt double %5110, %5191
  br i1 %5192, label %5193, label %5194

5193:                                             ; preds = %5187
  store double %5191, ptr %4942, align 8, !tbaa !19
  br label %5194

5194:                                             ; preds = %5187, %5193
  %5195 = phi double [ %5110, %5187 ], [ %5191, %5193 ]
  %5196 = add nuw nsw i32 %5111, 1
  br i1 %4955, label %5197, label %5247

5197:                                             ; preds = %5194
  %5198 = load i32, ptr %4, align 4, !tbaa !6
  %5199 = load i32, ptr %12, align 4, !tbaa !6
  %5200 = add nsw i32 %5199, -1
  %5201 = icmp slt i32 %5198, %5200
  br i1 %5201, label %5224, label %5202

5202:                                             ; preds = %5197
  %5203 = icmp eq i32 %5198, %5200
  br i1 %5203, label %5204, label %5240

5204:                                             ; preds = %5202
  store i32 0, ptr %4, align 4, !tbaa !6
  %5205 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5205, ptr %6, align 4, !tbaa !6
  br i1 %4960, label %5247, label %5206

5206:                                             ; preds = %5204, %5234
  %5207 = phi i64 [ %5238, %5234 ], [ 1, %5204 ]
  %5208 = getelementptr inbounds i32, ptr %4, i64 %5207
  %5209 = load i32, ptr %5208, align 4, !tbaa !6
  %5210 = getelementptr inbounds i32, ptr %12, i64 %5207
  %5211 = load i32, ptr %5210, align 4, !tbaa !6
  %5212 = add nsw i32 %5211, -1
  %5213 = icmp slt i32 %5209, %5212
  br i1 %5213, label %5214, label %5232

5214:                                             ; preds = %5206
  br i1 %5201, label %5224, label %5215

5215:                                             ; preds = %5214
  %5216 = shl i64 %5207, 32
  %5217 = add i64 %5216, -4294967296
  %5218 = ashr exact i64 %5217, 32
  %5219 = getelementptr inbounds i32, ptr %7, i64 %5218
  %5220 = load i32, ptr %5219, align 4, !tbaa !6
  %5221 = getelementptr inbounds i32, ptr %6, i64 %5207
  %5222 = load i32, ptr %5221, align 4, !tbaa !6
  %5223 = add nsw i32 %5222, %5220
  store i32 %5223, ptr %5221, align 4, !tbaa !6
  br label %5242

5224:                                             ; preds = %5197, %5214
  %5225 = phi i32 [ %5209, %5214 ], [ %5198, %5197 ]
  %5226 = phi ptr [ %5208, %5214 ], [ %4, %5197 ]
  %5227 = phi i64 [ %5207, %5214 ], [ 0, %5197 ]
  %5228 = add nsw i32 %5225, 1
  store i32 %5228, ptr %5226, align 4, !tbaa !6
  %5229 = getelementptr inbounds i32, ptr %7, i64 %5227
  %5230 = load i32, ptr %5229, align 4, !tbaa !6
  %5231 = getelementptr inbounds i32, ptr %6, i64 %5227
  br label %5242

5232:                                             ; preds = %5206
  %5233 = icmp eq i32 %5209, %5212
  br i1 %5233, label %5234, label %5240

5234:                                             ; preds = %5232
  store i32 0, ptr %5208, align 4, !tbaa !6
  %5235 = getelementptr inbounds i32, ptr %8, i64 %5207
  %5236 = load i32, ptr %5235, align 4, !tbaa !6
  %5237 = getelementptr inbounds i32, ptr %6, i64 %5207
  store i32 %5236, ptr %5237, align 4, !tbaa !6
  %5238 = add nuw nsw i64 %5207, 1
  %5239 = icmp eq i64 %5238, %4958
  br i1 %5239, label %5247, label %5206, !llvm.loop !373

5240:                                             ; preds = %5202, %5232
  %5241 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 330, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5554

5242:                                             ; preds = %5215, %5224
  %5243 = phi ptr [ %5231, %5224 ], [ %5208, %5215 ]
  %5244 = phi i32 [ %5230, %5224 ], [ 1, %5215 ]
  %5245 = load i32, ptr %5243, align 4, !tbaa !6
  %5246 = add nsw i32 %5245, %5244
  store i32 %5246, ptr %5243, align 4, !tbaa !6
  br label %5247

5247:                                             ; preds = %5234, %5242, %5204, %5194
  %5248 = icmp eq i32 %5196, %5
  br i1 %5248, label %5549, label %5109, !llvm.loop !374

5249:                                             ; preds = %4946
  %5250 = getelementptr inbounds i32, ptr %3, i64 %19
  %5251 = load i32, ptr %5250, align 4, !tbaa !6
  %5252 = icmp eq i32 %5251, 0
  %5253 = icmp sgt i32 %5, 0
  br i1 %5252, label %5263, label %5254

5254:                                             ; preds = %5249
  br i1 %5253, label %5255, label %5549

5255:                                             ; preds = %5254
  %5256 = icmp sgt i32 %13, 1
  %5257 = icmp sgt i32 %13, 0
  %5258 = add i32 %13, -2
  %5259 = zext i32 %5258 to i64
  %5260 = zext i32 %13 to i64
  %5261 = add nuw i32 %5, 1
  %5262 = icmp eq i32 %13, 1
  br label %5407

5263:                                             ; preds = %5249
  br i1 %5253, label %5264, label %5549

5264:                                             ; preds = %5263
  %5265 = icmp sgt i32 %13, 1
  %5266 = icmp sgt i32 %13, 0
  %5267 = add i32 %13, -2
  %5268 = zext i32 %5267 to i64
  %5269 = zext i32 %13 to i64
  %5270 = add nuw i32 %5, 1
  %5271 = icmp eq i32 %13, 1
  br label %5272

5272:                                             ; preds = %5264, %5405
  %5273 = phi double [ %4944, %5264 ], [ %5355, %5405 ]
  %5274 = phi i32 [ 0, %5264 ], [ %5357, %5405 ]
  %5275 = phi double [ 0.000000e+00, %5264 ], [ %5356, %5405 ]
  %5276 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %5265, label %5277, label %5346

5277:                                             ; preds = %5272, %5336
  %5278 = phi i32 [ %5345, %5336 ], [ 0, %5272 ]
  %5279 = phi i64 [ %5287, %5336 ], [ %5269, %5272 ]
  %5280 = phi i64 [ %5344, %5336 ], [ %5268, %5272 ]
  %5281 = phi i32 [ %5342, %5336 ], [ %5276, %5272 ]
  %5282 = sub i32 %5267, %5278
  %5283 = tail call i32 @llvm.smin.i32(i32 %5282, i32 0)
  %5284 = sub i32 %5282, %5283
  %5285 = zext i32 %5284 to i64
  %5286 = add nuw nsw i64 %5285, 1
  %5287 = add nsw i64 %5279, -1
  %5288 = icmp ult i32 %5284, 31
  br i1 %5288, label %5324, label %5289

5289:                                             ; preds = %5277
  %5290 = and i64 %5286, 8589934560
  %5291 = sub i64 %5280, %5290
  br label %5292

5292:                                             ; preds = %5292, %5289
  %5293 = phi i64 [ 0, %5289 ], [ %5316, %5292 ]
  %5294 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5289 ], [ %5312, %5292 ]
  %5295 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5289 ], [ %5313, %5292 ]
  %5296 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5289 ], [ %5314, %5292 ]
  %5297 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5289 ], [ %5315, %5292 ]
  %5298 = sub i64 %5280, %5293
  %5299 = getelementptr inbounds i32, ptr %9, i64 %5298
  %5300 = getelementptr inbounds i32, ptr %5299, i64 -7
  %5301 = load <8 x i32>, ptr %5300, align 4, !tbaa !6
  %5302 = shufflevector <8 x i32> %5301, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5303 = getelementptr inbounds i32, ptr %5299, i64 -15
  %5304 = load <8 x i32>, ptr %5303, align 4, !tbaa !6
  %5305 = shufflevector <8 x i32> %5304, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5306 = getelementptr inbounds i32, ptr %5299, i64 -23
  %5307 = load <8 x i32>, ptr %5306, align 4, !tbaa !6
  %5308 = shufflevector <8 x i32> %5307, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5309 = getelementptr inbounds i32, ptr %5299, i64 -31
  %5310 = load <8 x i32>, ptr %5309, align 4, !tbaa !6
  %5311 = shufflevector <8 x i32> %5310, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5312 = mul <8 x i32> %5302, %5294
  %5313 = mul <8 x i32> %5305, %5295
  %5314 = mul <8 x i32> %5308, %5296
  %5315 = mul <8 x i32> %5311, %5297
  %5316 = add nuw i64 %5293, 32
  %5317 = icmp eq i64 %5316, %5290
  br i1 %5317, label %5318, label %5292, !llvm.loop !375

5318:                                             ; preds = %5292
  %5319 = mul <8 x i32> %5313, %5312
  %5320 = mul <8 x i32> %5314, %5319
  %5321 = mul <8 x i32> %5315, %5320
  %5322 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5321)
  %5323 = icmp eq i64 %5286, %5290
  br i1 %5323, label %5336, label %5324

5324:                                             ; preds = %5277, %5318
  %5325 = phi i64 [ %5280, %5277 ], [ %5291, %5318 ]
  %5326 = phi i32 [ 1, %5277 ], [ %5322, %5318 ]
  br label %5327

5327:                                             ; preds = %5324, %5327
  %5328 = phi i64 [ %5333, %5327 ], [ %5325, %5324 ]
  %5329 = phi i32 [ %5332, %5327 ], [ %5326, %5324 ]
  %5330 = getelementptr inbounds i32, ptr %9, i64 %5328
  %5331 = load i32, ptr %5330, align 4, !tbaa !6
  %5332 = mul nsw i32 %5331, %5329
  %5333 = add nsw i64 %5328, -1
  %5334 = trunc i64 %5328 to i32
  %5335 = icmp sgt i32 %5334, 0
  br i1 %5335, label %5327, label %5336, !llvm.loop !376

5336:                                             ; preds = %5327, %5318
  %5337 = phi i32 [ %5322, %5318 ], [ %5332, %5327 ]
  %5338 = and i64 %5287, 4294967295
  %5339 = getelementptr inbounds i32, ptr %6, i64 %5338
  %5340 = load i32, ptr %5339, align 4, !tbaa !6
  %5341 = mul nsw i32 %5340, %5337
  %5342 = add nsw i32 %5341, %5281
  %5343 = icmp sgt i64 %5279, 2
  %5344 = add nsw i64 %5280, -1
  %5345 = add i32 %5278, 1
  br i1 %5343, label %5277, label %5346, !llvm.loop !377

5346:                                             ; preds = %5336, %5272
  %5347 = phi i32 [ %5276, %5272 ], [ %5342, %5336 ]
  %5348 = sext i32 %5347 to i64
  %5349 = getelementptr inbounds i32, ptr %4940, i64 %5348
  %5350 = load i32, ptr %5349, align 4, !tbaa !6
  %5351 = sitofp i32 %5350 to double
  %5352 = fcmp fast olt double %5273, %5351
  br i1 %5352, label %5353, label %5354

5353:                                             ; preds = %5346
  store double %5351, ptr %4942, align 8, !tbaa !19
  br label %5354

5354:                                             ; preds = %5353, %5346
  %5355 = phi double [ %5351, %5353 ], [ %5273, %5346 ]
  %5356 = fadd fast double %5275, 1.000000e+00
  %5357 = add nuw nsw i32 %5274, 1
  br i1 %5266, label %5358, label %5405

5358:                                             ; preds = %5354
  %5359 = load i32, ptr %4, align 4, !tbaa !6
  %5360 = load i32, ptr %12, align 4, !tbaa !6
  %5361 = add nsw i32 %5360, -1
  %5362 = icmp slt i32 %5359, %5361
  br i1 %5362, label %5382, label %5363

5363:                                             ; preds = %5358
  %5364 = icmp eq i32 %5359, %5361
  br i1 %5364, label %5365, label %5398

5365:                                             ; preds = %5363
  store i32 0, ptr %4, align 4, !tbaa !6
  %5366 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5366, ptr %6, align 4, !tbaa !6
  br i1 %5271, label %5405, label %5367

5367:                                             ; preds = %5365, %5392
  %5368 = phi i64 [ %5396, %5392 ], [ 1, %5365 ]
  %5369 = getelementptr inbounds i32, ptr %4, i64 %5368
  %5370 = load i32, ptr %5369, align 4, !tbaa !6
  %5371 = getelementptr inbounds i32, ptr %12, i64 %5368
  %5372 = load i32, ptr %5371, align 4, !tbaa !6
  %5373 = add nsw i32 %5372, -1
  %5374 = icmp slt i32 %5370, %5373
  br i1 %5374, label %5375, label %5390

5375:                                             ; preds = %5367
  br i1 %5362, label %5382, label %5376

5376:                                             ; preds = %5375
  %5377 = getelementptr inbounds i32, ptr %7, i64 %5368
  %5378 = load i32, ptr %5377, align 4, !tbaa !6
  %5379 = getelementptr inbounds i32, ptr %6, i64 %5368
  %5380 = load i32, ptr %5379, align 4, !tbaa !6
  %5381 = add nsw i32 %5380, %5378
  store i32 %5381, ptr %5379, align 4, !tbaa !6
  br label %5400

5382:                                             ; preds = %5358, %5375
  %5383 = phi i32 [ %5370, %5375 ], [ %5359, %5358 ]
  %5384 = phi ptr [ %5369, %5375 ], [ %4, %5358 ]
  %5385 = phi i64 [ %5368, %5375 ], [ 0, %5358 ]
  %5386 = add nsw i32 %5383, 1
  store i32 %5386, ptr %5384, align 4, !tbaa !6
  %5387 = getelementptr inbounds i32, ptr %7, i64 %5385
  %5388 = load i32, ptr %5387, align 4, !tbaa !6
  %5389 = getelementptr inbounds i32, ptr %6, i64 %5385
  br label %5400

5390:                                             ; preds = %5367
  %5391 = icmp eq i32 %5370, %5373
  br i1 %5391, label %5392, label %5398

5392:                                             ; preds = %5390
  store i32 0, ptr %5369, align 4, !tbaa !6
  %5393 = getelementptr inbounds i32, ptr %8, i64 %5368
  %5394 = load i32, ptr %5393, align 4, !tbaa !6
  %5395 = getelementptr inbounds i32, ptr %6, i64 %5368
  store i32 %5394, ptr %5395, align 4, !tbaa !6
  %5396 = add nuw nsw i64 %5368, 1
  %5397 = icmp eq i64 %5396, %5269
  br i1 %5397, label %5405, label %5367, !llvm.loop !378

5398:                                             ; preds = %5363, %5390
  %5399 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 330, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5554

5400:                                             ; preds = %5376, %5382
  %5401 = phi ptr [ %5389, %5382 ], [ %5369, %5376 ]
  %5402 = phi i32 [ %5388, %5382 ], [ 1, %5376 ]
  %5403 = load i32, ptr %5401, align 4, !tbaa !6
  %5404 = add nsw i32 %5403, %5402
  store i32 %5404, ptr %5401, align 4, !tbaa !6
  br label %5405

5405:                                             ; preds = %5392, %5400, %5365, %5354
  %5406 = icmp eq i32 %5357, %5
  br i1 %5406, label %5549, label %5272, !llvm.loop !379

5407:                                             ; preds = %5255, %5545
  %5408 = phi double [ %4944, %5255 ], [ %5493, %5545 ]
  %5409 = phi i32 [ 0, %5255 ], [ %5494, %5545 ]
  %5410 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %5256, label %5411, label %5480

5411:                                             ; preds = %5407, %5470
  %5412 = phi i32 [ %5479, %5470 ], [ 0, %5407 ]
  %5413 = phi i64 [ %5421, %5470 ], [ %5260, %5407 ]
  %5414 = phi i64 [ %5478, %5470 ], [ %5259, %5407 ]
  %5415 = phi i32 [ %5476, %5470 ], [ %5410, %5407 ]
  %5416 = sub i32 %5258, %5412
  %5417 = tail call i32 @llvm.smin.i32(i32 %5416, i32 0)
  %5418 = sub i32 %5416, %5417
  %5419 = zext i32 %5418 to i64
  %5420 = add nuw nsw i64 %5419, 1
  %5421 = add nsw i64 %5413, -1
  %5422 = icmp ult i32 %5418, 31
  br i1 %5422, label %5458, label %5423

5423:                                             ; preds = %5411
  %5424 = and i64 %5420, 8589934560
  %5425 = sub i64 %5414, %5424
  br label %5426

5426:                                             ; preds = %5426, %5423
  %5427 = phi i64 [ 0, %5423 ], [ %5450, %5426 ]
  %5428 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5423 ], [ %5446, %5426 ]
  %5429 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5423 ], [ %5447, %5426 ]
  %5430 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5423 ], [ %5448, %5426 ]
  %5431 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5423 ], [ %5449, %5426 ]
  %5432 = sub i64 %5414, %5427
  %5433 = getelementptr inbounds i32, ptr %11, i64 %5432
  %5434 = getelementptr inbounds i32, ptr %5433, i64 -7
  %5435 = load <8 x i32>, ptr %5434, align 4, !tbaa !6
  %5436 = shufflevector <8 x i32> %5435, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5437 = getelementptr inbounds i32, ptr %5433, i64 -15
  %5438 = load <8 x i32>, ptr %5437, align 4, !tbaa !6
  %5439 = shufflevector <8 x i32> %5438, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5440 = getelementptr inbounds i32, ptr %5433, i64 -23
  %5441 = load <8 x i32>, ptr %5440, align 4, !tbaa !6
  %5442 = shufflevector <8 x i32> %5441, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5443 = getelementptr inbounds i32, ptr %5433, i64 -31
  %5444 = load <8 x i32>, ptr %5443, align 4, !tbaa !6
  %5445 = shufflevector <8 x i32> %5444, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5446 = mul <8 x i32> %5436, %5428
  %5447 = mul <8 x i32> %5439, %5429
  %5448 = mul <8 x i32> %5442, %5430
  %5449 = mul <8 x i32> %5445, %5431
  %5450 = add nuw i64 %5427, 32
  %5451 = icmp eq i64 %5450, %5424
  br i1 %5451, label %5452, label %5426, !llvm.loop !380

5452:                                             ; preds = %5426
  %5453 = mul <8 x i32> %5447, %5446
  %5454 = mul <8 x i32> %5448, %5453
  %5455 = mul <8 x i32> %5449, %5454
  %5456 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5455)
  %5457 = icmp eq i64 %5420, %5424
  br i1 %5457, label %5470, label %5458

5458:                                             ; preds = %5411, %5452
  %5459 = phi i64 [ %5414, %5411 ], [ %5425, %5452 ]
  %5460 = phi i32 [ 1, %5411 ], [ %5456, %5452 ]
  br label %5461

5461:                                             ; preds = %5458, %5461
  %5462 = phi i64 [ %5467, %5461 ], [ %5459, %5458 ]
  %5463 = phi i32 [ %5466, %5461 ], [ %5460, %5458 ]
  %5464 = getelementptr inbounds i32, ptr %11, i64 %5462
  %5465 = load i32, ptr %5464, align 4, !tbaa !6
  %5466 = mul nsw i32 %5465, %5463
  %5467 = add nsw i64 %5462, -1
  %5468 = trunc i64 %5462 to i32
  %5469 = icmp sgt i32 %5468, 0
  br i1 %5469, label %5461, label %5470, !llvm.loop !381

5470:                                             ; preds = %5461, %5452
  %5471 = phi i32 [ %5456, %5452 ], [ %5466, %5461 ]
  %5472 = and i64 %5421, 4294967295
  %5473 = getelementptr inbounds i32, ptr %6, i64 %5472
  %5474 = load i32, ptr %5473, align 4, !tbaa !6
  %5475 = mul nsw i32 %5474, %5471
  %5476 = add nsw i32 %5475, %5415
  %5477 = icmp sgt i64 %5413, 2
  %5478 = add nsw i64 %5414, -1
  %5479 = add i32 %5412, 1
  br i1 %5477, label %5411, label %5480, !llvm.loop !382

5480:                                             ; preds = %5470, %5407
  %5481 = phi i32 [ %5410, %5407 ], [ %5476, %5470 ]
  %5482 = icmp slt i32 %5481, %5
  br i1 %5482, label %5485, label %5483

5483:                                             ; preds = %5480
  %5484 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 330, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5554

5485:                                             ; preds = %5480
  %5486 = sext i32 %5481 to i64
  %5487 = getelementptr inbounds i32, ptr %4940, i64 %5486
  %5488 = load i32, ptr %5487, align 4, !tbaa !6
  %5489 = sitofp i32 %5488 to double
  %5490 = fcmp fast olt double %5408, %5489
  br i1 %5490, label %5491, label %5492

5491:                                             ; preds = %5485
  store double %5489, ptr %4942, align 8, !tbaa !19
  br label %5492

5492:                                             ; preds = %5491, %5485
  %5493 = phi double [ %5489, %5491 ], [ %5408, %5485 ]
  %5494 = add nuw nsw i32 %5409, 1
  br i1 %5257, label %5495, label %5545

5495:                                             ; preds = %5492
  %5496 = load i32, ptr %4, align 4, !tbaa !6
  %5497 = load i32, ptr %12, align 4, !tbaa !6
  %5498 = add nsw i32 %5497, -1
  %5499 = icmp slt i32 %5496, %5498
  br i1 %5499, label %5522, label %5500

5500:                                             ; preds = %5495
  %5501 = icmp eq i32 %5496, %5498
  br i1 %5501, label %5502, label %5538

5502:                                             ; preds = %5500
  store i32 0, ptr %4, align 4, !tbaa !6
  %5503 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5503, ptr %6, align 4, !tbaa !6
  br i1 %5262, label %5545, label %5504

5504:                                             ; preds = %5502, %5532
  %5505 = phi i64 [ %5536, %5532 ], [ 1, %5502 ]
  %5506 = getelementptr inbounds i32, ptr %4, i64 %5505
  %5507 = load i32, ptr %5506, align 4, !tbaa !6
  %5508 = getelementptr inbounds i32, ptr %12, i64 %5505
  %5509 = load i32, ptr %5508, align 4, !tbaa !6
  %5510 = add nsw i32 %5509, -1
  %5511 = icmp slt i32 %5507, %5510
  br i1 %5511, label %5512, label %5530

5512:                                             ; preds = %5504
  br i1 %5499, label %5522, label %5513

5513:                                             ; preds = %5512
  %5514 = shl i64 %5505, 32
  %5515 = add i64 %5514, -4294967296
  %5516 = ashr exact i64 %5515, 32
  %5517 = getelementptr inbounds i32, ptr %7, i64 %5516
  %5518 = load i32, ptr %5517, align 4, !tbaa !6
  %5519 = getelementptr inbounds i32, ptr %6, i64 %5505
  %5520 = load i32, ptr %5519, align 4, !tbaa !6
  %5521 = add nsw i32 %5520, %5518
  store i32 %5521, ptr %5519, align 4, !tbaa !6
  br label %5540

5522:                                             ; preds = %5495, %5512
  %5523 = phi i32 [ %5507, %5512 ], [ %5496, %5495 ]
  %5524 = phi ptr [ %5506, %5512 ], [ %4, %5495 ]
  %5525 = phi i64 [ %5505, %5512 ], [ 0, %5495 ]
  %5526 = add nsw i32 %5523, 1
  store i32 %5526, ptr %5524, align 4, !tbaa !6
  %5527 = getelementptr inbounds i32, ptr %7, i64 %5525
  %5528 = load i32, ptr %5527, align 4, !tbaa !6
  %5529 = getelementptr inbounds i32, ptr %6, i64 %5525
  br label %5540

5530:                                             ; preds = %5504
  %5531 = icmp eq i32 %5507, %5510
  br i1 %5531, label %5532, label %5538

5532:                                             ; preds = %5530
  store i32 0, ptr %5506, align 4, !tbaa !6
  %5533 = getelementptr inbounds i32, ptr %8, i64 %5505
  %5534 = load i32, ptr %5533, align 4, !tbaa !6
  %5535 = getelementptr inbounds i32, ptr %6, i64 %5505
  store i32 %5534, ptr %5535, align 4, !tbaa !6
  %5536 = add nuw nsw i64 %5505, 1
  %5537 = icmp eq i64 %5536, %5260
  br i1 %5537, label %5545, label %5504, !llvm.loop !383

5538:                                             ; preds = %5500, %5530
  %5539 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 330, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5554

5540:                                             ; preds = %5513, %5522
  %5541 = phi ptr [ %5529, %5522 ], [ %5506, %5513 ]
  %5542 = phi i32 [ %5528, %5522 ], [ 1, %5513 ]
  %5543 = load i32, ptr %5541, align 4, !tbaa !6
  %5544 = add nsw i32 %5543, %5542
  store i32 %5544, ptr %5541, align 4, !tbaa !6
  br label %5545

5545:                                             ; preds = %5532, %5540, %5502, %5492
  %5546 = icmp eq i32 %5494, %5
  br i1 %5546, label %5549, label %5407, !llvm.loop !384

5547:                                             ; preds = %4946
  %5548 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 330, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5549

5549:                                             ; preds = %5545, %5405, %5247, %5107, %4934, %4794, %4636, %4496, %4323, %4183, %4025, %3885, %3712, %3572, %3414, %3274, %3101, %2963, %2807, %2669, %2495, %2352, %2191, %2048, %1872, %1730, %1570, %1428, %1246, %1108, %952, %814, %640, %499, %340, %199, %5254, %5263, %4952, %4961, %4643, %4652, %4341, %4350, %4032, %4041, %3730, %3739, %3421, %3430, %3119, %3128, %2814, %2823, %2516, %2525, %2198, %2207, %1890, %1899, %1577, %1586, %1271, %1280, %959, %968, %661, %670, %347, %356, %43, %52, %1876, %4938, %5547, %4327, %4936, %3716, %4325, %3105, %3714, %2509, %2506, %3103, %2497, %1263, %1258, %1874, %654, %651, %1248, %35, %30, %642, %18
  %5550 = phi double [ 0.000000e+00, %18 ], [ 0.000000e+00, %642 ], [ 0.000000e+00, %30 ], [ 0.000000e+00, %35 ], [ 0.000000e+00, %1248 ], [ 0.000000e+00, %651 ], [ 0.000000e+00, %654 ], [ 0.000000e+00, %1874 ], [ 0.000000e+00, %1258 ], [ 0.000000e+00, %1263 ], [ 0.000000e+00, %2497 ], [ 0.000000e+00, %3103 ], [ 0.000000e+00, %2506 ], [ 0.000000e+00, %2509 ], [ 0.000000e+00, %3105 ], [ 0.000000e+00, %3714 ], [ 0.000000e+00, %3716 ], [ 0.000000e+00, %4325 ], [ 0.000000e+00, %4327 ], [ 0.000000e+00, %4936 ], [ 0.000000e+00, %4938 ], [ 0.000000e+00, %5547 ], [ 0.000000e+00, %1876 ], [ 0.000000e+00, %52 ], [ 0.000000e+00, %43 ], [ 0.000000e+00, %356 ], [ 0.000000e+00, %347 ], [ 0.000000e+00, %670 ], [ 0.000000e+00, %661 ], [ 0.000000e+00, %968 ], [ 0.000000e+00, %959 ], [ 0.000000e+00, %1280 ], [ 0.000000e+00, %1271 ], [ 0.000000e+00, %1586 ], [ 0.000000e+00, %1577 ], [ 0.000000e+00, %1899 ], [ 0.000000e+00, %1890 ], [ 0.000000e+00, %2207 ], [ 0.000000e+00, %2198 ], [ 0.000000e+00, %2525 ], [ 0.000000e+00, %2516 ], [ 0.000000e+00, %2823 ], [ 0.000000e+00, %2814 ], [ 0.000000e+00, %3128 ], [ 0.000000e+00, %3119 ], [ 0.000000e+00, %3430 ], [ 0.000000e+00, %3421 ], [ 0.000000e+00, %3739 ], [ 0.000000e+00, %3730 ], [ 0.000000e+00, %4041 ], [ 0.000000e+00, %4032 ], [ 0.000000e+00, %4350 ], [ 0.000000e+00, %4341 ], [ 0.000000e+00, %4652 ], [ 0.000000e+00, %4643 ], [ 0.000000e+00, %4961 ], [ 0.000000e+00, %4952 ], [ 0.000000e+00, %5263 ], [ 0.000000e+00, %5254 ], [ %150, %199 ], [ 0.000000e+00, %340 ], [ %450, %499 ], [ 0.000000e+00, %640 ], [ %765, %814 ], [ 0.000000e+00, %952 ], [ %1059, %1108 ], [ 0.000000e+00, %1246 ], [ %1379, %1428 ], [ 0.000000e+00, %1570 ], [ %1681, %1730 ], [ 0.000000e+00, %1872 ], [ %1999, %2048 ], [ 0.000000e+00, %2191 ], [ %2303, %2352 ], [ 0.000000e+00, %2495 ], [ %2620, %2669 ], [ 0.000000e+00, %2807 ], [ %2914, %2963 ], [ 0.000000e+00, %3101 ], [ %3225, %3274 ], [ 0.000000e+00, %3414 ], [ %3523, %3572 ], [ 0.000000e+00, %3712 ], [ %3836, %3885 ], [ 0.000000e+00, %4025 ], [ %4134, %4183 ], [ 0.000000e+00, %4323 ], [ %4447, %4496 ], [ 0.000000e+00, %4636 ], [ %4745, %4794 ], [ 0.000000e+00, %4934 ], [ %5058, %5107 ], [ 0.000000e+00, %5247 ], [ %5356, %5405 ], [ 0.000000e+00, %5545 ]
  %5551 = phi i32 [ %10, %18 ], [ 1, %642 ], [ 1, %30 ], [ 1, %35 ], [ 1, %1248 ], [ 1, %651 ], [ 1, %654 ], [ 1, %1874 ], [ 1, %1258 ], [ 1, %1263 ], [ 1, %2497 ], [ 1, %3103 ], [ 1, %2506 ], [ 1, %2509 ], [ 1, %3105 ], [ 1, %3714 ], [ 1, %3716 ], [ 1, %4325 ], [ 1, %4327 ], [ 1, %4936 ], [ 1, %4938 ], [ 1, %5547 ], [ 1, %1876 ], [ 1, %52 ], [ 1, %43 ], [ 1, %356 ], [ 1, %347 ], [ 1, %670 ], [ 1, %661 ], [ 1, %968 ], [ 1, %959 ], [ 1, %1280 ], [ 1, %1271 ], [ 1, %1586 ], [ 1, %1577 ], [ 1, %1899 ], [ 1, %1890 ], [ 1, %2207 ], [ 1, %2198 ], [ 1, %2525 ], [ 1, %2516 ], [ 1, %2823 ], [ 1, %2814 ], [ 1, %3128 ], [ 1, %3119 ], [ 1, %3430 ], [ 1, %3421 ], [ 1, %3739 ], [ 1, %3730 ], [ 1, %4041 ], [ 1, %4032 ], [ 1, %4350 ], [ 1, %4341 ], [ 1, %4652 ], [ 1, %4643 ], [ 1, %4961 ], [ 1, %4952 ], [ 1, %5263 ], [ 1, %5254 ], [ %59, %199 ], [ %50, %340 ], [ %363, %499 ], [ %354, %640 ], [ %677, %814 ], [ %668, %952 ], [ %975, %1108 ], [ %966, %1246 ], [ %1287, %1428 ], [ %1278, %1570 ], [ %1593, %1730 ], [ %1584, %1872 ], [ %1906, %2048 ], [ %1897, %2191 ], [ %2214, %2352 ], [ %2205, %2495 ], [ %2532, %2669 ], [ %2523, %2807 ], [ %2830, %2963 ], [ %2821, %3101 ], [ %3135, %3274 ], [ %3126, %3414 ], [ %3437, %3572 ], [ %3428, %3712 ], [ %3746, %3885 ], [ %3737, %4025 ], [ %4048, %4183 ], [ %4039, %4323 ], [ %4357, %4496 ], [ %4348, %4636 ], [ %4659, %4794 ], [ %4650, %4934 ], [ %4968, %5107 ], [ %4959, %5247 ], [ %5270, %5405 ], [ %5261, %5545 ]
  %5552 = tail call i32 @Util_TableSetInt(i32 noundef %17, i32 noundef %5551, ptr noundef nonnull @.str.5) #3
  %5553 = tail call i32 @Util_TableSetReal(i32 noundef %17, double noundef nofpclass(nan inf) %5550, ptr noundef nonnull @.str.6) #3
  br label %5554

5554:                                             ; preds = %5100, %5185, %5240, %5398, %5483, %5538, %4489, %4574, %4629, %4787, %4872, %4927, %3878, %3963, %4018, %4176, %4261, %4316, %3267, %3352, %3407, %3565, %3650, %3705, %2662, %2746, %2800, %2956, %3040, %3094, %2041, %2126, %2184, %2345, %2430, %2488, %1421, %1505, %1563, %1723, %1807, %1865, %807, %891, %945, %1101, %1185, %1239, %192, %276, %333, %492, %576, %633, %5549
  %5555 = phi i32 [ 0, %5549 ], [ -1, %633 ], [ -1, %576 ], [ -1, %492 ], [ -1, %333 ], [ -1, %276 ], [ -1, %192 ], [ -1, %1239 ], [ -1, %1185 ], [ -1, %1101 ], [ -1, %945 ], [ -1, %891 ], [ -1, %807 ], [ -1, %1865 ], [ -1, %1807 ], [ -1, %1723 ], [ -1, %1563 ], [ -1, %1505 ], [ -1, %1421 ], [ -1, %2488 ], [ -1, %2430 ], [ -1, %2345 ], [ -1, %2184 ], [ -1, %2126 ], [ -1, %2041 ], [ -1, %3094 ], [ -1, %3040 ], [ -1, %2956 ], [ -1, %2800 ], [ -1, %2746 ], [ -1, %2662 ], [ -1, %3705 ], [ -1, %3650 ], [ -1, %3565 ], [ -1, %3407 ], [ -1, %3352 ], [ -1, %3267 ], [ -1, %4316 ], [ -1, %4261 ], [ -1, %4176 ], [ -1, %4018 ], [ -1, %3963 ], [ -1, %3878 ], [ -1, %4927 ], [ -1, %4872 ], [ -1, %4787 ], [ -1, %4629 ], [ -1, %4574 ], [ -1, %4489 ], [ -1, %5538 ], [ -1, %5483 ], [ -1, %5398 ], [ -1, %5240 ], [ -1, %5185 ], [ -1, %5100 ]
  ret i32 %5555
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_Max_INT1(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr nocapture noundef readonly %7, ptr nocapture noundef readonly %8, ptr nocapture noundef readonly %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr nocapture noundef readonly %12, i32 noundef %13, ptr nocapture noundef readonly %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !6
  switch i32 %21, label %3088 [
    i32 101, label %22
    i32 102, label %628
    i32 107, label %1240
    i32 108, label %1856
    i32 109, label %2472
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %14, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !10
  %25 = getelementptr inbounds ptr, ptr %16, i64 %19
  %26 = load ptr, ptr %25, align 8, !tbaa !10
  %27 = load i8, ptr %24, align 1, !tbaa !12
  store i8 %27, ptr %26, align 1, !tbaa !12
  %28 = icmp eq i32 %13, 0
  br i1 %28, label %29, label %33

29:                                               ; preds = %22
  %30 = load i8, ptr %24, align 1, !tbaa !12
  %31 = icmp ult i8 %27, %30
  br i1 %31, label %32, label %3088

32:                                               ; preds = %29
  store i8 %30, ptr %26, align 1, !tbaa !12
  br label %3088

33:                                               ; preds = %22
  switch i32 %1, label %626 [
    i32 1, label %34
    i32 0, label %332
  ]

34:                                               ; preds = %33
  %35 = getelementptr inbounds i32, ptr %3, i64 %19
  %36 = load i32, ptr %35, align 4, !tbaa !6
  %37 = icmp eq i32 %36, 0
  %38 = icmp sgt i32 %5, 0
  br i1 %37, label %48, label %39

39:                                               ; preds = %34
  br i1 %38, label %40, label %3088

40:                                               ; preds = %39
  %41 = icmp sgt i32 %13, 1
  %42 = icmp sgt i32 %13, 0
  %43 = add i32 %13, -2
  %44 = zext i32 %43 to i64
  %45 = zext i32 %13 to i64
  %46 = add nuw i32 %5, 1
  %47 = icmp eq i32 %13, 1
  br label %194

48:                                               ; preds = %34
  br i1 %38, label %49, label %3088

49:                                               ; preds = %48
  %50 = icmp sgt i32 %13, 1
  %51 = icmp sgt i32 %13, 0
  %52 = add i32 %13, -2
  %53 = zext i32 %52 to i64
  %54 = zext i32 %13 to i64
  %55 = add nuw i32 %5, 1
  %56 = icmp eq i32 %13, 1
  br label %57

57:                                               ; preds = %49, %192
  %58 = phi i32 [ 0, %49 ], [ %144, %192 ]
  %59 = phi double [ 0.000000e+00, %49 ], [ %143, %192 ]
  %60 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %50, label %61, label %130

61:                                               ; preds = %57, %120
  %62 = phi i32 [ %129, %120 ], [ 0, %57 ]
  %63 = phi i64 [ %71, %120 ], [ %54, %57 ]
  %64 = phi i64 [ %128, %120 ], [ %53, %57 ]
  %65 = phi i32 [ %126, %120 ], [ %60, %57 ]
  %66 = sub i32 %52, %62
  %67 = tail call i32 @llvm.smin.i32(i32 %66, i32 0)
  %68 = sub i32 %66, %67
  %69 = zext i32 %68 to i64
  %70 = add nuw nsw i64 %69, 1
  %71 = add nsw i64 %63, -1
  %72 = icmp ult i32 %68, 31
  br i1 %72, label %108, label %73

73:                                               ; preds = %61
  %74 = and i64 %70, 8589934560
  %75 = sub i64 %64, %74
  br label %76

76:                                               ; preds = %76, %73
  %77 = phi i64 [ 0, %73 ], [ %100, %76 ]
  %78 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %73 ], [ %96, %76 ]
  %79 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %73 ], [ %97, %76 ]
  %80 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %73 ], [ %98, %76 ]
  %81 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %73 ], [ %99, %76 ]
  %82 = sub i64 %64, %77
  %83 = getelementptr inbounds i32, ptr %9, i64 %82
  %84 = getelementptr inbounds i32, ptr %83, i64 -7
  %85 = load <8 x i32>, ptr %84, align 4, !tbaa !6
  %86 = shufflevector <8 x i32> %85, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %87 = getelementptr inbounds i32, ptr %83, i64 -15
  %88 = load <8 x i32>, ptr %87, align 4, !tbaa !6
  %89 = shufflevector <8 x i32> %88, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %90 = getelementptr inbounds i32, ptr %83, i64 -23
  %91 = load <8 x i32>, ptr %90, align 4, !tbaa !6
  %92 = shufflevector <8 x i32> %91, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %93 = getelementptr inbounds i32, ptr %83, i64 -31
  %94 = load <8 x i32>, ptr %93, align 4, !tbaa !6
  %95 = shufflevector <8 x i32> %94, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %96 = mul <8 x i32> %86, %78
  %97 = mul <8 x i32> %89, %79
  %98 = mul <8 x i32> %92, %80
  %99 = mul <8 x i32> %95, %81
  %100 = add nuw i64 %77, 32
  %101 = icmp eq i64 %100, %74
  br i1 %101, label %102, label %76, !llvm.loop !385

102:                                              ; preds = %76
  %103 = mul <8 x i32> %97, %96
  %104 = mul <8 x i32> %98, %103
  %105 = mul <8 x i32> %99, %104
  %106 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %105)
  %107 = icmp eq i64 %70, %74
  br i1 %107, label %120, label %108

108:                                              ; preds = %61, %102
  %109 = phi i64 [ %64, %61 ], [ %75, %102 ]
  %110 = phi i32 [ 1, %61 ], [ %106, %102 ]
  br label %111

111:                                              ; preds = %108, %111
  %112 = phi i64 [ %117, %111 ], [ %109, %108 ]
  %113 = phi i32 [ %116, %111 ], [ %110, %108 ]
  %114 = getelementptr inbounds i32, ptr %9, i64 %112
  %115 = load i32, ptr %114, align 4, !tbaa !6
  %116 = mul nsw i32 %115, %113
  %117 = add nsw i64 %112, -1
  %118 = trunc i64 %112 to i32
  %119 = icmp sgt i32 %118, 0
  br i1 %119, label %111, label %120, !llvm.loop !386

120:                                              ; preds = %111, %102
  %121 = phi i32 [ %106, %102 ], [ %116, %111 ]
  %122 = and i64 %71, 4294967295
  %123 = getelementptr inbounds i32, ptr %6, i64 %122
  %124 = load i32, ptr %123, align 4, !tbaa !6
  %125 = mul nsw i32 %124, %121
  %126 = add nsw i32 %125, %65
  %127 = icmp sgt i64 %63, 2
  %128 = add nsw i64 %64, -1
  %129 = add i32 %62, 1
  br i1 %127, label %61, label %130, !llvm.loop !387

130:                                              ; preds = %120, %57
  %131 = phi i32 [ %60, %57 ], [ %126, %120 ]
  %132 = sext i32 %131 to i64
  %133 = getelementptr inbounds double, ptr %2, i64 %132
  %134 = load double, ptr %133, align 8, !tbaa !19
  %135 = getelementptr inbounds i8, ptr %24, i64 %132
  %136 = load i8, ptr %135, align 1, !tbaa !12
  %137 = fcmp fast ueq double %134, 0.000000e+00
  br i1 %137, label %142, label %138

138:                                              ; preds = %130
  %139 = load i8, ptr %26, align 1, !tbaa !12
  %140 = icmp ult i8 %139, %136
  br i1 %140, label %141, label %142

141:                                              ; preds = %138
  store i8 %136, ptr %26, align 1, !tbaa !12
  br label %142

142:                                              ; preds = %138, %141, %130
  %143 = fadd fast double %134, %59
  %144 = add nuw nsw i32 %58, 1
  br i1 %51, label %145, label %192

145:                                              ; preds = %142
  %146 = load i32, ptr %4, align 4, !tbaa !6
  %147 = load i32, ptr %12, align 4, !tbaa !6
  %148 = add nsw i32 %147, -1
  %149 = icmp slt i32 %146, %148
  br i1 %149, label %169, label %150

150:                                              ; preds = %145
  %151 = icmp eq i32 %146, %148
  br i1 %151, label %152, label %185

152:                                              ; preds = %150
  store i32 0, ptr %4, align 4, !tbaa !6
  %153 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %153, ptr %6, align 4, !tbaa !6
  br i1 %56, label %192, label %154

154:                                              ; preds = %152, %179
  %155 = phi i64 [ %183, %179 ], [ 1, %152 ]
  %156 = getelementptr inbounds i32, ptr %4, i64 %155
  %157 = load i32, ptr %156, align 4, !tbaa !6
  %158 = getelementptr inbounds i32, ptr %12, i64 %155
  %159 = load i32, ptr %158, align 4, !tbaa !6
  %160 = add nsw i32 %159, -1
  %161 = icmp slt i32 %157, %160
  br i1 %161, label %162, label %177

162:                                              ; preds = %154
  br i1 %149, label %169, label %163

163:                                              ; preds = %162
  %164 = getelementptr inbounds i32, ptr %7, i64 %155
  %165 = load i32, ptr %164, align 4, !tbaa !6
  %166 = getelementptr inbounds i32, ptr %6, i64 %155
  %167 = load i32, ptr %166, align 4, !tbaa !6
  %168 = add nsw i32 %167, %165
  store i32 %168, ptr %166, align 4, !tbaa !6
  br label %187

169:                                              ; preds = %145, %162
  %170 = phi i32 [ %157, %162 ], [ %146, %145 ]
  %171 = phi ptr [ %156, %162 ], [ %4, %145 ]
  %172 = phi i64 [ %155, %162 ], [ 0, %145 ]
  %173 = add nsw i32 %170, 1
  store i32 %173, ptr %171, align 4, !tbaa !6
  %174 = getelementptr inbounds i32, ptr %7, i64 %172
  %175 = load i32, ptr %174, align 4, !tbaa !6
  %176 = getelementptr inbounds i32, ptr %6, i64 %172
  br label %187

177:                                              ; preds = %154
  %178 = icmp eq i32 %157, %160
  br i1 %178, label %179, label %185

179:                                              ; preds = %177
  store i32 0, ptr %156, align 4, !tbaa !6
  %180 = getelementptr inbounds i32, ptr %8, i64 %155
  %181 = load i32, ptr %180, align 4, !tbaa !6
  %182 = getelementptr inbounds i32, ptr %6, i64 %155
  store i32 %181, ptr %182, align 4, !tbaa !6
  %183 = add nuw nsw i64 %155, 1
  %184 = icmp eq i64 %183, %54
  br i1 %184, label %192, label %154, !llvm.loop !388

185:                                              ; preds = %150, %177
  %186 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 533, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3093

187:                                              ; preds = %163, %169
  %188 = phi ptr [ %176, %169 ], [ %156, %163 ]
  %189 = phi i32 [ %175, %169 ], [ 1, %163 ]
  %190 = load i32, ptr %188, align 4, !tbaa !6
  %191 = add nsw i32 %190, %189
  store i32 %191, ptr %188, align 4, !tbaa !6
  br label %192

192:                                              ; preds = %179, %187, %152, %142
  %193 = icmp eq i32 %144, %5
  br i1 %193, label %3088, label %57, !llvm.loop !389

194:                                              ; preds = %40, %330
  %195 = phi i32 [ 0, %40 ], [ %279, %330 ]
  %196 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %41, label %197, label %266

197:                                              ; preds = %194, %256
  %198 = phi i32 [ %265, %256 ], [ 0, %194 ]
  %199 = phi i64 [ %207, %256 ], [ %45, %194 ]
  %200 = phi i64 [ %264, %256 ], [ %44, %194 ]
  %201 = phi i32 [ %262, %256 ], [ %196, %194 ]
  %202 = sub i32 %43, %198
  %203 = tail call i32 @llvm.smin.i32(i32 %202, i32 0)
  %204 = sub i32 %202, %203
  %205 = zext i32 %204 to i64
  %206 = add nuw nsw i64 %205, 1
  %207 = add nsw i64 %199, -1
  %208 = icmp ult i32 %204, 31
  br i1 %208, label %244, label %209

209:                                              ; preds = %197
  %210 = and i64 %206, 8589934560
  %211 = sub i64 %200, %210
  br label %212

212:                                              ; preds = %212, %209
  %213 = phi i64 [ 0, %209 ], [ %236, %212 ]
  %214 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %209 ], [ %232, %212 ]
  %215 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %209 ], [ %233, %212 ]
  %216 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %209 ], [ %234, %212 ]
  %217 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %209 ], [ %235, %212 ]
  %218 = sub i64 %200, %213
  %219 = getelementptr inbounds i32, ptr %11, i64 %218
  %220 = getelementptr inbounds i32, ptr %219, i64 -7
  %221 = load <8 x i32>, ptr %220, align 4, !tbaa !6
  %222 = shufflevector <8 x i32> %221, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %223 = getelementptr inbounds i32, ptr %219, i64 -15
  %224 = load <8 x i32>, ptr %223, align 4, !tbaa !6
  %225 = shufflevector <8 x i32> %224, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %226 = getelementptr inbounds i32, ptr %219, i64 -23
  %227 = load <8 x i32>, ptr %226, align 4, !tbaa !6
  %228 = shufflevector <8 x i32> %227, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %229 = getelementptr inbounds i32, ptr %219, i64 -31
  %230 = load <8 x i32>, ptr %229, align 4, !tbaa !6
  %231 = shufflevector <8 x i32> %230, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %232 = mul <8 x i32> %222, %214
  %233 = mul <8 x i32> %225, %215
  %234 = mul <8 x i32> %228, %216
  %235 = mul <8 x i32> %231, %217
  %236 = add nuw i64 %213, 32
  %237 = icmp eq i64 %236, %210
  br i1 %237, label %238, label %212, !llvm.loop !390

238:                                              ; preds = %212
  %239 = mul <8 x i32> %233, %232
  %240 = mul <8 x i32> %234, %239
  %241 = mul <8 x i32> %235, %240
  %242 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %241)
  %243 = icmp eq i64 %206, %210
  br i1 %243, label %256, label %244

244:                                              ; preds = %197, %238
  %245 = phi i64 [ %200, %197 ], [ %211, %238 ]
  %246 = phi i32 [ 1, %197 ], [ %242, %238 ]
  br label %247

247:                                              ; preds = %244, %247
  %248 = phi i64 [ %253, %247 ], [ %245, %244 ]
  %249 = phi i32 [ %252, %247 ], [ %246, %244 ]
  %250 = getelementptr inbounds i32, ptr %11, i64 %248
  %251 = load i32, ptr %250, align 4, !tbaa !6
  %252 = mul nsw i32 %251, %249
  %253 = add nsw i64 %248, -1
  %254 = trunc i64 %248 to i32
  %255 = icmp sgt i32 %254, 0
  br i1 %255, label %247, label %256, !llvm.loop !391

256:                                              ; preds = %247, %238
  %257 = phi i32 [ %242, %238 ], [ %252, %247 ]
  %258 = and i64 %207, 4294967295
  %259 = getelementptr inbounds i32, ptr %6, i64 %258
  %260 = load i32, ptr %259, align 4, !tbaa !6
  %261 = mul nsw i32 %260, %257
  %262 = add nsw i32 %261, %201
  %263 = icmp sgt i64 %199, 2
  %264 = add nsw i64 %200, -1
  %265 = add i32 %198, 1
  br i1 %263, label %197, label %266, !llvm.loop !392

266:                                              ; preds = %256, %194
  %267 = phi i32 [ %196, %194 ], [ %262, %256 ]
  %268 = icmp slt i32 %267, %5
  br i1 %268, label %271, label %269

269:                                              ; preds = %266
  %270 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 533, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3093

271:                                              ; preds = %266
  %272 = sext i32 %267 to i64
  %273 = getelementptr inbounds i8, ptr %24, i64 %272
  %274 = load i8, ptr %273, align 1, !tbaa !12
  %275 = load i8, ptr %26, align 1, !tbaa !12
  %276 = icmp ult i8 %275, %274
  br i1 %276, label %277, label %278

277:                                              ; preds = %271
  store i8 %274, ptr %26, align 1, !tbaa !12
  br label %278

278:                                              ; preds = %271, %277
  %279 = add nuw nsw i32 %195, 1
  br i1 %42, label %280, label %330

280:                                              ; preds = %278
  %281 = load i32, ptr %4, align 4, !tbaa !6
  %282 = load i32, ptr %12, align 4, !tbaa !6
  %283 = add nsw i32 %282, -1
  %284 = icmp slt i32 %281, %283
  br i1 %284, label %307, label %285

285:                                              ; preds = %280
  %286 = icmp eq i32 %281, %283
  br i1 %286, label %287, label %323

287:                                              ; preds = %285
  store i32 0, ptr %4, align 4, !tbaa !6
  %288 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %288, ptr %6, align 4, !tbaa !6
  br i1 %47, label %330, label %289

289:                                              ; preds = %287, %317
  %290 = phi i64 [ %321, %317 ], [ 1, %287 ]
  %291 = getelementptr inbounds i32, ptr %4, i64 %290
  %292 = load i32, ptr %291, align 4, !tbaa !6
  %293 = getelementptr inbounds i32, ptr %12, i64 %290
  %294 = load i32, ptr %293, align 4, !tbaa !6
  %295 = add nsw i32 %294, -1
  %296 = icmp slt i32 %292, %295
  br i1 %296, label %297, label %315

297:                                              ; preds = %289
  br i1 %284, label %307, label %298

298:                                              ; preds = %297
  %299 = shl i64 %290, 32
  %300 = add i64 %299, -4294967296
  %301 = ashr exact i64 %300, 32
  %302 = getelementptr inbounds i32, ptr %7, i64 %301
  %303 = load i32, ptr %302, align 4, !tbaa !6
  %304 = getelementptr inbounds i32, ptr %6, i64 %290
  %305 = load i32, ptr %304, align 4, !tbaa !6
  %306 = add nsw i32 %305, %303
  store i32 %306, ptr %304, align 4, !tbaa !6
  br label %325

307:                                              ; preds = %280, %297
  %308 = phi i32 [ %292, %297 ], [ %281, %280 ]
  %309 = phi ptr [ %291, %297 ], [ %4, %280 ]
  %310 = phi i64 [ %290, %297 ], [ 0, %280 ]
  %311 = add nsw i32 %308, 1
  store i32 %311, ptr %309, align 4, !tbaa !6
  %312 = getelementptr inbounds i32, ptr %7, i64 %310
  %313 = load i32, ptr %312, align 4, !tbaa !6
  %314 = getelementptr inbounds i32, ptr %6, i64 %310
  br label %325

315:                                              ; preds = %289
  %316 = icmp eq i32 %292, %295
  br i1 %316, label %317, label %323

317:                                              ; preds = %315
  store i32 0, ptr %291, align 4, !tbaa !6
  %318 = getelementptr inbounds i32, ptr %8, i64 %290
  %319 = load i32, ptr %318, align 4, !tbaa !6
  %320 = getelementptr inbounds i32, ptr %6, i64 %290
  store i32 %319, ptr %320, align 4, !tbaa !6
  %321 = add nuw nsw i64 %290, 1
  %322 = icmp eq i64 %321, %45
  br i1 %322, label %330, label %289, !llvm.loop !393

323:                                              ; preds = %285, %315
  %324 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 533, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3093

325:                                              ; preds = %298, %307
  %326 = phi ptr [ %314, %307 ], [ %291, %298 ]
  %327 = phi i32 [ %313, %307 ], [ 1, %298 ]
  %328 = load i32, ptr %326, align 4, !tbaa !6
  %329 = add nsw i32 %328, %327
  store i32 %329, ptr %326, align 4, !tbaa !6
  br label %330

330:                                              ; preds = %317, %325, %287, %278
  %331 = icmp eq i32 %279, %5
  br i1 %331, label %3088, label %194, !llvm.loop !394

332:                                              ; preds = %33
  %333 = getelementptr inbounds i32, ptr %3, i64 %19
  %334 = load i32, ptr %333, align 4, !tbaa !6
  %335 = icmp eq i32 %334, 0
  %336 = icmp sgt i32 %5, 0
  br i1 %335, label %346, label %337

337:                                              ; preds = %332
  br i1 %336, label %338, label %3088

338:                                              ; preds = %337
  %339 = icmp sgt i32 %13, 1
  %340 = icmp sgt i32 %13, 0
  %341 = add i32 %13, -2
  %342 = zext i32 %341 to i64
  %343 = zext i32 %13 to i64
  %344 = add nuw i32 %5, 1
  %345 = icmp eq i32 %13, 1
  br label %488

346:                                              ; preds = %332
  br i1 %336, label %347, label %3088

347:                                              ; preds = %346
  %348 = icmp sgt i32 %13, 1
  %349 = icmp sgt i32 %13, 0
  %350 = add i32 %13, -2
  %351 = zext i32 %350 to i64
  %352 = zext i32 %13 to i64
  %353 = add nuw i32 %5, 1
  %354 = icmp eq i32 %13, 1
  br label %355

355:                                              ; preds = %347, %486
  %356 = phi i32 [ 0, %347 ], [ %438, %486 ]
  %357 = phi double [ 0.000000e+00, %347 ], [ %437, %486 ]
  %358 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %348, label %359, label %428

359:                                              ; preds = %355, %418
  %360 = phi i32 [ %427, %418 ], [ 0, %355 ]
  %361 = phi i64 [ %369, %418 ], [ %352, %355 ]
  %362 = phi i64 [ %426, %418 ], [ %351, %355 ]
  %363 = phi i32 [ %424, %418 ], [ %358, %355 ]
  %364 = sub i32 %350, %360
  %365 = tail call i32 @llvm.smin.i32(i32 %364, i32 0)
  %366 = sub i32 %364, %365
  %367 = zext i32 %366 to i64
  %368 = add nuw nsw i64 %367, 1
  %369 = add nsw i64 %361, -1
  %370 = icmp ult i32 %366, 31
  br i1 %370, label %406, label %371

371:                                              ; preds = %359
  %372 = and i64 %368, 8589934560
  %373 = sub i64 %362, %372
  br label %374

374:                                              ; preds = %374, %371
  %375 = phi i64 [ 0, %371 ], [ %398, %374 ]
  %376 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %371 ], [ %394, %374 ]
  %377 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %371 ], [ %395, %374 ]
  %378 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %371 ], [ %396, %374 ]
  %379 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %371 ], [ %397, %374 ]
  %380 = sub i64 %362, %375
  %381 = getelementptr inbounds i32, ptr %9, i64 %380
  %382 = getelementptr inbounds i32, ptr %381, i64 -7
  %383 = load <8 x i32>, ptr %382, align 4, !tbaa !6
  %384 = shufflevector <8 x i32> %383, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %385 = getelementptr inbounds i32, ptr %381, i64 -15
  %386 = load <8 x i32>, ptr %385, align 4, !tbaa !6
  %387 = shufflevector <8 x i32> %386, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %388 = getelementptr inbounds i32, ptr %381, i64 -23
  %389 = load <8 x i32>, ptr %388, align 4, !tbaa !6
  %390 = shufflevector <8 x i32> %389, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %391 = getelementptr inbounds i32, ptr %381, i64 -31
  %392 = load <8 x i32>, ptr %391, align 4, !tbaa !6
  %393 = shufflevector <8 x i32> %392, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %394 = mul <8 x i32> %384, %376
  %395 = mul <8 x i32> %387, %377
  %396 = mul <8 x i32> %390, %378
  %397 = mul <8 x i32> %393, %379
  %398 = add nuw i64 %375, 32
  %399 = icmp eq i64 %398, %372
  br i1 %399, label %400, label %374, !llvm.loop !395

400:                                              ; preds = %374
  %401 = mul <8 x i32> %395, %394
  %402 = mul <8 x i32> %396, %401
  %403 = mul <8 x i32> %397, %402
  %404 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %403)
  %405 = icmp eq i64 %368, %372
  br i1 %405, label %418, label %406

406:                                              ; preds = %359, %400
  %407 = phi i64 [ %362, %359 ], [ %373, %400 ]
  %408 = phi i32 [ 1, %359 ], [ %404, %400 ]
  br label %409

409:                                              ; preds = %406, %409
  %410 = phi i64 [ %415, %409 ], [ %407, %406 ]
  %411 = phi i32 [ %414, %409 ], [ %408, %406 ]
  %412 = getelementptr inbounds i32, ptr %9, i64 %410
  %413 = load i32, ptr %412, align 4, !tbaa !6
  %414 = mul nsw i32 %413, %411
  %415 = add nsw i64 %410, -1
  %416 = trunc i64 %410 to i32
  %417 = icmp sgt i32 %416, 0
  br i1 %417, label %409, label %418, !llvm.loop !396

418:                                              ; preds = %409, %400
  %419 = phi i32 [ %404, %400 ], [ %414, %409 ]
  %420 = and i64 %369, 4294967295
  %421 = getelementptr inbounds i32, ptr %6, i64 %420
  %422 = load i32, ptr %421, align 4, !tbaa !6
  %423 = mul nsw i32 %422, %419
  %424 = add nsw i32 %423, %363
  %425 = icmp sgt i64 %361, 2
  %426 = add nsw i64 %362, -1
  %427 = add i32 %360, 1
  br i1 %425, label %359, label %428, !llvm.loop !397

428:                                              ; preds = %418, %355
  %429 = phi i32 [ %358, %355 ], [ %424, %418 ]
  %430 = sext i32 %429 to i64
  %431 = getelementptr inbounds i8, ptr %24, i64 %430
  %432 = load i8, ptr %431, align 1, !tbaa !12
  %433 = load i8, ptr %26, align 1, !tbaa !12
  %434 = icmp ult i8 %433, %432
  br i1 %434, label %435, label %436

435:                                              ; preds = %428
  store i8 %432, ptr %26, align 1, !tbaa !12
  br label %436

436:                                              ; preds = %435, %428
  %437 = fadd fast double %357, 1.000000e+00
  %438 = add nuw nsw i32 %356, 1
  br i1 %349, label %439, label %486

439:                                              ; preds = %436
  %440 = load i32, ptr %4, align 4, !tbaa !6
  %441 = load i32, ptr %12, align 4, !tbaa !6
  %442 = add nsw i32 %441, -1
  %443 = icmp slt i32 %440, %442
  br i1 %443, label %463, label %444

444:                                              ; preds = %439
  %445 = icmp eq i32 %440, %442
  br i1 %445, label %446, label %479

446:                                              ; preds = %444
  store i32 0, ptr %4, align 4, !tbaa !6
  %447 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %447, ptr %6, align 4, !tbaa !6
  br i1 %354, label %486, label %448

448:                                              ; preds = %446, %473
  %449 = phi i64 [ %477, %473 ], [ 1, %446 ]
  %450 = getelementptr inbounds i32, ptr %4, i64 %449
  %451 = load i32, ptr %450, align 4, !tbaa !6
  %452 = getelementptr inbounds i32, ptr %12, i64 %449
  %453 = load i32, ptr %452, align 4, !tbaa !6
  %454 = add nsw i32 %453, -1
  %455 = icmp slt i32 %451, %454
  br i1 %455, label %456, label %471

456:                                              ; preds = %448
  br i1 %443, label %463, label %457

457:                                              ; preds = %456
  %458 = getelementptr inbounds i32, ptr %7, i64 %449
  %459 = load i32, ptr %458, align 4, !tbaa !6
  %460 = getelementptr inbounds i32, ptr %6, i64 %449
  %461 = load i32, ptr %460, align 4, !tbaa !6
  %462 = add nsw i32 %461, %459
  store i32 %462, ptr %460, align 4, !tbaa !6
  br label %481

463:                                              ; preds = %439, %456
  %464 = phi i32 [ %451, %456 ], [ %440, %439 ]
  %465 = phi ptr [ %450, %456 ], [ %4, %439 ]
  %466 = phi i64 [ %449, %456 ], [ 0, %439 ]
  %467 = add nsw i32 %464, 1
  store i32 %467, ptr %465, align 4, !tbaa !6
  %468 = getelementptr inbounds i32, ptr %7, i64 %466
  %469 = load i32, ptr %468, align 4, !tbaa !6
  %470 = getelementptr inbounds i32, ptr %6, i64 %466
  br label %481

471:                                              ; preds = %448
  %472 = icmp eq i32 %451, %454
  br i1 %472, label %473, label %479

473:                                              ; preds = %471
  store i32 0, ptr %450, align 4, !tbaa !6
  %474 = getelementptr inbounds i32, ptr %8, i64 %449
  %475 = load i32, ptr %474, align 4, !tbaa !6
  %476 = getelementptr inbounds i32, ptr %6, i64 %449
  store i32 %475, ptr %476, align 4, !tbaa !6
  %477 = add nuw nsw i64 %449, 1
  %478 = icmp eq i64 %477, %352
  br i1 %478, label %486, label %448, !llvm.loop !398

479:                                              ; preds = %444, %471
  %480 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 533, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3093

481:                                              ; preds = %457, %463
  %482 = phi ptr [ %470, %463 ], [ %450, %457 ]
  %483 = phi i32 [ %469, %463 ], [ 1, %457 ]
  %484 = load i32, ptr %482, align 4, !tbaa !6
  %485 = add nsw i32 %484, %483
  store i32 %485, ptr %482, align 4, !tbaa !6
  br label %486

486:                                              ; preds = %473, %481, %446, %436
  %487 = icmp eq i32 %438, %5
  br i1 %487, label %3088, label %355, !llvm.loop !399

488:                                              ; preds = %338, %624
  %489 = phi i32 [ 0, %338 ], [ %573, %624 ]
  %490 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %339, label %491, label %560

491:                                              ; preds = %488, %550
  %492 = phi i32 [ %559, %550 ], [ 0, %488 ]
  %493 = phi i64 [ %501, %550 ], [ %343, %488 ]
  %494 = phi i64 [ %558, %550 ], [ %342, %488 ]
  %495 = phi i32 [ %556, %550 ], [ %490, %488 ]
  %496 = sub i32 %341, %492
  %497 = tail call i32 @llvm.smin.i32(i32 %496, i32 0)
  %498 = sub i32 %496, %497
  %499 = zext i32 %498 to i64
  %500 = add nuw nsw i64 %499, 1
  %501 = add nsw i64 %493, -1
  %502 = icmp ult i32 %498, 31
  br i1 %502, label %538, label %503

503:                                              ; preds = %491
  %504 = and i64 %500, 8589934560
  %505 = sub i64 %494, %504
  br label %506

506:                                              ; preds = %506, %503
  %507 = phi i64 [ 0, %503 ], [ %530, %506 ]
  %508 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %503 ], [ %526, %506 ]
  %509 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %503 ], [ %527, %506 ]
  %510 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %503 ], [ %528, %506 ]
  %511 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %503 ], [ %529, %506 ]
  %512 = sub i64 %494, %507
  %513 = getelementptr inbounds i32, ptr %11, i64 %512
  %514 = getelementptr inbounds i32, ptr %513, i64 -7
  %515 = load <8 x i32>, ptr %514, align 4, !tbaa !6
  %516 = shufflevector <8 x i32> %515, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %517 = getelementptr inbounds i32, ptr %513, i64 -15
  %518 = load <8 x i32>, ptr %517, align 4, !tbaa !6
  %519 = shufflevector <8 x i32> %518, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %520 = getelementptr inbounds i32, ptr %513, i64 -23
  %521 = load <8 x i32>, ptr %520, align 4, !tbaa !6
  %522 = shufflevector <8 x i32> %521, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %523 = getelementptr inbounds i32, ptr %513, i64 -31
  %524 = load <8 x i32>, ptr %523, align 4, !tbaa !6
  %525 = shufflevector <8 x i32> %524, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %526 = mul <8 x i32> %516, %508
  %527 = mul <8 x i32> %519, %509
  %528 = mul <8 x i32> %522, %510
  %529 = mul <8 x i32> %525, %511
  %530 = add nuw i64 %507, 32
  %531 = icmp eq i64 %530, %504
  br i1 %531, label %532, label %506, !llvm.loop !400

532:                                              ; preds = %506
  %533 = mul <8 x i32> %527, %526
  %534 = mul <8 x i32> %528, %533
  %535 = mul <8 x i32> %529, %534
  %536 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %535)
  %537 = icmp eq i64 %500, %504
  br i1 %537, label %550, label %538

538:                                              ; preds = %491, %532
  %539 = phi i64 [ %494, %491 ], [ %505, %532 ]
  %540 = phi i32 [ 1, %491 ], [ %536, %532 ]
  br label %541

541:                                              ; preds = %538, %541
  %542 = phi i64 [ %547, %541 ], [ %539, %538 ]
  %543 = phi i32 [ %546, %541 ], [ %540, %538 ]
  %544 = getelementptr inbounds i32, ptr %11, i64 %542
  %545 = load i32, ptr %544, align 4, !tbaa !6
  %546 = mul nsw i32 %545, %543
  %547 = add nsw i64 %542, -1
  %548 = trunc i64 %542 to i32
  %549 = icmp sgt i32 %548, 0
  br i1 %549, label %541, label %550, !llvm.loop !401

550:                                              ; preds = %541, %532
  %551 = phi i32 [ %536, %532 ], [ %546, %541 ]
  %552 = and i64 %501, 4294967295
  %553 = getelementptr inbounds i32, ptr %6, i64 %552
  %554 = load i32, ptr %553, align 4, !tbaa !6
  %555 = mul nsw i32 %554, %551
  %556 = add nsw i32 %555, %495
  %557 = icmp sgt i64 %493, 2
  %558 = add nsw i64 %494, -1
  %559 = add i32 %492, 1
  br i1 %557, label %491, label %560, !llvm.loop !402

560:                                              ; preds = %550, %488
  %561 = phi i32 [ %490, %488 ], [ %556, %550 ]
  %562 = icmp slt i32 %561, %5
  br i1 %562, label %565, label %563

563:                                              ; preds = %560
  %564 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 533, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3093

565:                                              ; preds = %560
  %566 = sext i32 %561 to i64
  %567 = getelementptr inbounds i8, ptr %24, i64 %566
  %568 = load i8, ptr %567, align 1, !tbaa !12
  %569 = load i8, ptr %26, align 1, !tbaa !12
  %570 = icmp ult i8 %569, %568
  br i1 %570, label %571, label %572

571:                                              ; preds = %565
  store i8 %568, ptr %26, align 1, !tbaa !12
  br label %572

572:                                              ; preds = %571, %565
  %573 = add nuw nsw i32 %489, 1
  br i1 %340, label %574, label %624

574:                                              ; preds = %572
  %575 = load i32, ptr %4, align 4, !tbaa !6
  %576 = load i32, ptr %12, align 4, !tbaa !6
  %577 = add nsw i32 %576, -1
  %578 = icmp slt i32 %575, %577
  br i1 %578, label %601, label %579

579:                                              ; preds = %574
  %580 = icmp eq i32 %575, %577
  br i1 %580, label %581, label %617

581:                                              ; preds = %579
  store i32 0, ptr %4, align 4, !tbaa !6
  %582 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %582, ptr %6, align 4, !tbaa !6
  br i1 %345, label %624, label %583

583:                                              ; preds = %581, %611
  %584 = phi i64 [ %615, %611 ], [ 1, %581 ]
  %585 = getelementptr inbounds i32, ptr %4, i64 %584
  %586 = load i32, ptr %585, align 4, !tbaa !6
  %587 = getelementptr inbounds i32, ptr %12, i64 %584
  %588 = load i32, ptr %587, align 4, !tbaa !6
  %589 = add nsw i32 %588, -1
  %590 = icmp slt i32 %586, %589
  br i1 %590, label %591, label %609

591:                                              ; preds = %583
  br i1 %578, label %601, label %592

592:                                              ; preds = %591
  %593 = shl i64 %584, 32
  %594 = add i64 %593, -4294967296
  %595 = ashr exact i64 %594, 32
  %596 = getelementptr inbounds i32, ptr %7, i64 %595
  %597 = load i32, ptr %596, align 4, !tbaa !6
  %598 = getelementptr inbounds i32, ptr %6, i64 %584
  %599 = load i32, ptr %598, align 4, !tbaa !6
  %600 = add nsw i32 %599, %597
  store i32 %600, ptr %598, align 4, !tbaa !6
  br label %619

601:                                              ; preds = %574, %591
  %602 = phi i32 [ %586, %591 ], [ %575, %574 ]
  %603 = phi ptr [ %585, %591 ], [ %4, %574 ]
  %604 = phi i64 [ %584, %591 ], [ 0, %574 ]
  %605 = add nsw i32 %602, 1
  store i32 %605, ptr %603, align 4, !tbaa !6
  %606 = getelementptr inbounds i32, ptr %7, i64 %604
  %607 = load i32, ptr %606, align 4, !tbaa !6
  %608 = getelementptr inbounds i32, ptr %6, i64 %604
  br label %619

609:                                              ; preds = %583
  %610 = icmp eq i32 %586, %589
  br i1 %610, label %611, label %617

611:                                              ; preds = %609
  store i32 0, ptr %585, align 4, !tbaa !6
  %612 = getelementptr inbounds i32, ptr %8, i64 %584
  %613 = load i32, ptr %612, align 4, !tbaa !6
  %614 = getelementptr inbounds i32, ptr %6, i64 %584
  store i32 %613, ptr %614, align 4, !tbaa !6
  %615 = add nuw nsw i64 %584, 1
  %616 = icmp eq i64 %615, %343
  br i1 %616, label %624, label %583, !llvm.loop !403

617:                                              ; preds = %579, %609
  %618 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 533, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3093

619:                                              ; preds = %592, %601
  %620 = phi ptr [ %608, %601 ], [ %585, %592 ]
  %621 = phi i32 [ %607, %601 ], [ 1, %592 ]
  %622 = load i32, ptr %620, align 4, !tbaa !6
  %623 = add nsw i32 %622, %621
  store i32 %623, ptr %620, align 4, !tbaa !6
  br label %624

624:                                              ; preds = %611, %619, %581, %572
  %625 = icmp eq i32 %573, %5
  br i1 %625, label %3088, label %488, !llvm.loop !404

626:                                              ; preds = %33
  %627 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 533, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3088

628:                                              ; preds = %18
  %629 = getelementptr inbounds ptr, ptr %14, i64 %19
  %630 = load ptr, ptr %629, align 8, !tbaa !10
  %631 = getelementptr inbounds ptr, ptr %16, i64 %19
  %632 = load ptr, ptr %631, align 8, !tbaa !10
  %633 = load i8, ptr %630, align 1, !tbaa !12
  %634 = sext i8 %633 to i32
  store i32 %634, ptr %632, align 4, !tbaa !6
  %635 = icmp eq i32 %13, 0
  br i1 %635, label %636, label %641

636:                                              ; preds = %628
  %637 = load i8, ptr %630, align 1, !tbaa !12
  %638 = icmp slt i8 %633, %637
  br i1 %638, label %639, label %3088

639:                                              ; preds = %636
  %640 = sext i8 %637 to i32
  store i32 %640, ptr %632, align 4, !tbaa !6
  br label %3088

641:                                              ; preds = %628
  switch i32 %1, label %1238 [
    i32 1, label %642
    i32 0, label %942
  ]

642:                                              ; preds = %641
  %643 = getelementptr inbounds i32, ptr %3, i64 %19
  %644 = load i32, ptr %643, align 4, !tbaa !6
  %645 = icmp eq i32 %644, 0
  %646 = icmp sgt i32 %5, 0
  br i1 %645, label %656, label %647

647:                                              ; preds = %642
  br i1 %646, label %648, label %3088

648:                                              ; preds = %647
  %649 = icmp sgt i32 %13, 1
  %650 = icmp sgt i32 %13, 0
  %651 = add i32 %13, -2
  %652 = zext i32 %651 to i64
  %653 = zext i32 %13 to i64
  %654 = add nuw i32 %5, 1
  %655 = icmp eq i32 %13, 1
  br label %803

656:                                              ; preds = %642
  br i1 %646, label %657, label %3088

657:                                              ; preds = %656
  %658 = icmp sgt i32 %13, 1
  %659 = icmp sgt i32 %13, 0
  %660 = add i32 %13, -2
  %661 = zext i32 %660 to i64
  %662 = zext i32 %13 to i64
  %663 = add nuw i32 %5, 1
  %664 = icmp eq i32 %13, 1
  br label %665

665:                                              ; preds = %657, %801
  %666 = phi i32 [ 0, %657 ], [ %753, %801 ]
  %667 = phi double [ 0.000000e+00, %657 ], [ %752, %801 ]
  %668 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %658, label %669, label %738

669:                                              ; preds = %665, %728
  %670 = phi i32 [ %737, %728 ], [ 0, %665 ]
  %671 = phi i64 [ %679, %728 ], [ %662, %665 ]
  %672 = phi i64 [ %736, %728 ], [ %661, %665 ]
  %673 = phi i32 [ %734, %728 ], [ %668, %665 ]
  %674 = sub i32 %660, %670
  %675 = tail call i32 @llvm.smin.i32(i32 %674, i32 0)
  %676 = sub i32 %674, %675
  %677 = zext i32 %676 to i64
  %678 = add nuw nsw i64 %677, 1
  %679 = add nsw i64 %671, -1
  %680 = icmp ult i32 %676, 31
  br i1 %680, label %716, label %681

681:                                              ; preds = %669
  %682 = and i64 %678, 8589934560
  %683 = sub i64 %672, %682
  br label %684

684:                                              ; preds = %684, %681
  %685 = phi i64 [ 0, %681 ], [ %708, %684 ]
  %686 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %681 ], [ %704, %684 ]
  %687 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %681 ], [ %705, %684 ]
  %688 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %681 ], [ %706, %684 ]
  %689 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %681 ], [ %707, %684 ]
  %690 = sub i64 %672, %685
  %691 = getelementptr inbounds i32, ptr %9, i64 %690
  %692 = getelementptr inbounds i32, ptr %691, i64 -7
  %693 = load <8 x i32>, ptr %692, align 4, !tbaa !6
  %694 = shufflevector <8 x i32> %693, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %695 = getelementptr inbounds i32, ptr %691, i64 -15
  %696 = load <8 x i32>, ptr %695, align 4, !tbaa !6
  %697 = shufflevector <8 x i32> %696, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %698 = getelementptr inbounds i32, ptr %691, i64 -23
  %699 = load <8 x i32>, ptr %698, align 4, !tbaa !6
  %700 = shufflevector <8 x i32> %699, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %701 = getelementptr inbounds i32, ptr %691, i64 -31
  %702 = load <8 x i32>, ptr %701, align 4, !tbaa !6
  %703 = shufflevector <8 x i32> %702, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %704 = mul <8 x i32> %694, %686
  %705 = mul <8 x i32> %697, %687
  %706 = mul <8 x i32> %700, %688
  %707 = mul <8 x i32> %703, %689
  %708 = add nuw i64 %685, 32
  %709 = icmp eq i64 %708, %682
  br i1 %709, label %710, label %684, !llvm.loop !405

710:                                              ; preds = %684
  %711 = mul <8 x i32> %705, %704
  %712 = mul <8 x i32> %706, %711
  %713 = mul <8 x i32> %707, %712
  %714 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %713)
  %715 = icmp eq i64 %678, %682
  br i1 %715, label %728, label %716

716:                                              ; preds = %669, %710
  %717 = phi i64 [ %672, %669 ], [ %683, %710 ]
  %718 = phi i32 [ 1, %669 ], [ %714, %710 ]
  br label %719

719:                                              ; preds = %716, %719
  %720 = phi i64 [ %725, %719 ], [ %717, %716 ]
  %721 = phi i32 [ %724, %719 ], [ %718, %716 ]
  %722 = getelementptr inbounds i32, ptr %9, i64 %720
  %723 = load i32, ptr %722, align 4, !tbaa !6
  %724 = mul nsw i32 %723, %721
  %725 = add nsw i64 %720, -1
  %726 = trunc i64 %720 to i32
  %727 = icmp sgt i32 %726, 0
  br i1 %727, label %719, label %728, !llvm.loop !406

728:                                              ; preds = %719, %710
  %729 = phi i32 [ %714, %710 ], [ %724, %719 ]
  %730 = and i64 %679, 4294967295
  %731 = getelementptr inbounds i32, ptr %6, i64 %730
  %732 = load i32, ptr %731, align 4, !tbaa !6
  %733 = mul nsw i32 %732, %729
  %734 = add nsw i32 %733, %673
  %735 = icmp sgt i64 %671, 2
  %736 = add nsw i64 %672, -1
  %737 = add i32 %670, 1
  br i1 %735, label %669, label %738, !llvm.loop !407

738:                                              ; preds = %728, %665
  %739 = phi i32 [ %668, %665 ], [ %734, %728 ]
  %740 = sext i32 %739 to i64
  %741 = getelementptr inbounds double, ptr %2, i64 %740
  %742 = load double, ptr %741, align 8, !tbaa !19
  %743 = getelementptr inbounds i8, ptr %630, i64 %740
  %744 = load i8, ptr %743, align 1, !tbaa !12
  %745 = sext i8 %744 to i32
  %746 = fcmp fast ueq double %742, 0.000000e+00
  br i1 %746, label %751, label %747

747:                                              ; preds = %738
  %748 = load i32, ptr %632, align 4, !tbaa !6
  %749 = icmp slt i32 %748, %745
  br i1 %749, label %750, label %751

750:                                              ; preds = %747
  store i32 %745, ptr %632, align 4, !tbaa !6
  br label %751

751:                                              ; preds = %747, %750, %738
  %752 = fadd fast double %742, %667
  %753 = add nuw nsw i32 %666, 1
  br i1 %659, label %754, label %801

754:                                              ; preds = %751
  %755 = load i32, ptr %4, align 4, !tbaa !6
  %756 = load i32, ptr %12, align 4, !tbaa !6
  %757 = add nsw i32 %756, -1
  %758 = icmp slt i32 %755, %757
  br i1 %758, label %778, label %759

759:                                              ; preds = %754
  %760 = icmp eq i32 %755, %757
  br i1 %760, label %761, label %794

761:                                              ; preds = %759
  store i32 0, ptr %4, align 4, !tbaa !6
  %762 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %762, ptr %6, align 4, !tbaa !6
  br i1 %664, label %801, label %763

763:                                              ; preds = %761, %788
  %764 = phi i64 [ %792, %788 ], [ 1, %761 ]
  %765 = getelementptr inbounds i32, ptr %4, i64 %764
  %766 = load i32, ptr %765, align 4, !tbaa !6
  %767 = getelementptr inbounds i32, ptr %12, i64 %764
  %768 = load i32, ptr %767, align 4, !tbaa !6
  %769 = add nsw i32 %768, -1
  %770 = icmp slt i32 %766, %769
  br i1 %770, label %771, label %786

771:                                              ; preds = %763
  br i1 %758, label %778, label %772

772:                                              ; preds = %771
  %773 = getelementptr inbounds i32, ptr %7, i64 %764
  %774 = load i32, ptr %773, align 4, !tbaa !6
  %775 = getelementptr inbounds i32, ptr %6, i64 %764
  %776 = load i32, ptr %775, align 4, !tbaa !6
  %777 = add nsw i32 %776, %774
  store i32 %777, ptr %775, align 4, !tbaa !6
  br label %796

778:                                              ; preds = %754, %771
  %779 = phi i32 [ %766, %771 ], [ %755, %754 ]
  %780 = phi ptr [ %765, %771 ], [ %4, %754 ]
  %781 = phi i64 [ %764, %771 ], [ 0, %754 ]
  %782 = add nsw i32 %779, 1
  store i32 %782, ptr %780, align 4, !tbaa !6
  %783 = getelementptr inbounds i32, ptr %7, i64 %781
  %784 = load i32, ptr %783, align 4, !tbaa !6
  %785 = getelementptr inbounds i32, ptr %6, i64 %781
  br label %796

786:                                              ; preds = %763
  %787 = icmp eq i32 %766, %769
  br i1 %787, label %788, label %794

788:                                              ; preds = %786
  store i32 0, ptr %765, align 4, !tbaa !6
  %789 = getelementptr inbounds i32, ptr %8, i64 %764
  %790 = load i32, ptr %789, align 4, !tbaa !6
  %791 = getelementptr inbounds i32, ptr %6, i64 %764
  store i32 %790, ptr %791, align 4, !tbaa !6
  %792 = add nuw nsw i64 %764, 1
  %793 = icmp eq i64 %792, %662
  br i1 %793, label %801, label %763, !llvm.loop !408

794:                                              ; preds = %759, %786
  %795 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 536, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3093

796:                                              ; preds = %772, %778
  %797 = phi ptr [ %785, %778 ], [ %765, %772 ]
  %798 = phi i32 [ %784, %778 ], [ 1, %772 ]
  %799 = load i32, ptr %797, align 4, !tbaa !6
  %800 = add nsw i32 %799, %798
  store i32 %800, ptr %797, align 4, !tbaa !6
  br label %801

801:                                              ; preds = %788, %796, %761, %751
  %802 = icmp eq i32 %753, %5
  br i1 %802, label %3088, label %665, !llvm.loop !409

803:                                              ; preds = %648, %940
  %804 = phi i32 [ 0, %648 ], [ %889, %940 ]
  %805 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %649, label %806, label %875

806:                                              ; preds = %803, %865
  %807 = phi i32 [ %874, %865 ], [ 0, %803 ]
  %808 = phi i64 [ %816, %865 ], [ %653, %803 ]
  %809 = phi i64 [ %873, %865 ], [ %652, %803 ]
  %810 = phi i32 [ %871, %865 ], [ %805, %803 ]
  %811 = sub i32 %651, %807
  %812 = tail call i32 @llvm.smin.i32(i32 %811, i32 0)
  %813 = sub i32 %811, %812
  %814 = zext i32 %813 to i64
  %815 = add nuw nsw i64 %814, 1
  %816 = add nsw i64 %808, -1
  %817 = icmp ult i32 %813, 31
  br i1 %817, label %853, label %818

818:                                              ; preds = %806
  %819 = and i64 %815, 8589934560
  %820 = sub i64 %809, %819
  br label %821

821:                                              ; preds = %821, %818
  %822 = phi i64 [ 0, %818 ], [ %845, %821 ]
  %823 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %818 ], [ %841, %821 ]
  %824 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %818 ], [ %842, %821 ]
  %825 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %818 ], [ %843, %821 ]
  %826 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %818 ], [ %844, %821 ]
  %827 = sub i64 %809, %822
  %828 = getelementptr inbounds i32, ptr %11, i64 %827
  %829 = getelementptr inbounds i32, ptr %828, i64 -7
  %830 = load <8 x i32>, ptr %829, align 4, !tbaa !6
  %831 = shufflevector <8 x i32> %830, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %832 = getelementptr inbounds i32, ptr %828, i64 -15
  %833 = load <8 x i32>, ptr %832, align 4, !tbaa !6
  %834 = shufflevector <8 x i32> %833, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %835 = getelementptr inbounds i32, ptr %828, i64 -23
  %836 = load <8 x i32>, ptr %835, align 4, !tbaa !6
  %837 = shufflevector <8 x i32> %836, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %838 = getelementptr inbounds i32, ptr %828, i64 -31
  %839 = load <8 x i32>, ptr %838, align 4, !tbaa !6
  %840 = shufflevector <8 x i32> %839, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %841 = mul <8 x i32> %831, %823
  %842 = mul <8 x i32> %834, %824
  %843 = mul <8 x i32> %837, %825
  %844 = mul <8 x i32> %840, %826
  %845 = add nuw i64 %822, 32
  %846 = icmp eq i64 %845, %819
  br i1 %846, label %847, label %821, !llvm.loop !410

847:                                              ; preds = %821
  %848 = mul <8 x i32> %842, %841
  %849 = mul <8 x i32> %843, %848
  %850 = mul <8 x i32> %844, %849
  %851 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %850)
  %852 = icmp eq i64 %815, %819
  br i1 %852, label %865, label %853

853:                                              ; preds = %806, %847
  %854 = phi i64 [ %809, %806 ], [ %820, %847 ]
  %855 = phi i32 [ 1, %806 ], [ %851, %847 ]
  br label %856

856:                                              ; preds = %853, %856
  %857 = phi i64 [ %862, %856 ], [ %854, %853 ]
  %858 = phi i32 [ %861, %856 ], [ %855, %853 ]
  %859 = getelementptr inbounds i32, ptr %11, i64 %857
  %860 = load i32, ptr %859, align 4, !tbaa !6
  %861 = mul nsw i32 %860, %858
  %862 = add nsw i64 %857, -1
  %863 = trunc i64 %857 to i32
  %864 = icmp sgt i32 %863, 0
  br i1 %864, label %856, label %865, !llvm.loop !411

865:                                              ; preds = %856, %847
  %866 = phi i32 [ %851, %847 ], [ %861, %856 ]
  %867 = and i64 %816, 4294967295
  %868 = getelementptr inbounds i32, ptr %6, i64 %867
  %869 = load i32, ptr %868, align 4, !tbaa !6
  %870 = mul nsw i32 %869, %866
  %871 = add nsw i32 %870, %810
  %872 = icmp sgt i64 %808, 2
  %873 = add nsw i64 %809, -1
  %874 = add i32 %807, 1
  br i1 %872, label %806, label %875, !llvm.loop !412

875:                                              ; preds = %865, %803
  %876 = phi i32 [ %805, %803 ], [ %871, %865 ]
  %877 = icmp slt i32 %876, %5
  br i1 %877, label %880, label %878

878:                                              ; preds = %875
  %879 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 536, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3093

880:                                              ; preds = %875
  %881 = sext i32 %876 to i64
  %882 = getelementptr inbounds i8, ptr %630, i64 %881
  %883 = load i8, ptr %882, align 1, !tbaa !12
  %884 = sext i8 %883 to i32
  %885 = load i32, ptr %632, align 4, !tbaa !6
  %886 = icmp slt i32 %885, %884
  br i1 %886, label %887, label %888

887:                                              ; preds = %880
  store i32 %884, ptr %632, align 4, !tbaa !6
  br label %888

888:                                              ; preds = %880, %887
  %889 = add nuw nsw i32 %804, 1
  br i1 %650, label %890, label %940

890:                                              ; preds = %888
  %891 = load i32, ptr %4, align 4, !tbaa !6
  %892 = load i32, ptr %12, align 4, !tbaa !6
  %893 = add nsw i32 %892, -1
  %894 = icmp slt i32 %891, %893
  br i1 %894, label %917, label %895

895:                                              ; preds = %890
  %896 = icmp eq i32 %891, %893
  br i1 %896, label %897, label %933

897:                                              ; preds = %895
  store i32 0, ptr %4, align 4, !tbaa !6
  %898 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %898, ptr %6, align 4, !tbaa !6
  br i1 %655, label %940, label %899

899:                                              ; preds = %897, %927
  %900 = phi i64 [ %931, %927 ], [ 1, %897 ]
  %901 = getelementptr inbounds i32, ptr %4, i64 %900
  %902 = load i32, ptr %901, align 4, !tbaa !6
  %903 = getelementptr inbounds i32, ptr %12, i64 %900
  %904 = load i32, ptr %903, align 4, !tbaa !6
  %905 = add nsw i32 %904, -1
  %906 = icmp slt i32 %902, %905
  br i1 %906, label %907, label %925

907:                                              ; preds = %899
  br i1 %894, label %917, label %908

908:                                              ; preds = %907
  %909 = shl i64 %900, 32
  %910 = add i64 %909, -4294967296
  %911 = ashr exact i64 %910, 32
  %912 = getelementptr inbounds i32, ptr %7, i64 %911
  %913 = load i32, ptr %912, align 4, !tbaa !6
  %914 = getelementptr inbounds i32, ptr %6, i64 %900
  %915 = load i32, ptr %914, align 4, !tbaa !6
  %916 = add nsw i32 %915, %913
  store i32 %916, ptr %914, align 4, !tbaa !6
  br label %935

917:                                              ; preds = %890, %907
  %918 = phi i32 [ %902, %907 ], [ %891, %890 ]
  %919 = phi ptr [ %901, %907 ], [ %4, %890 ]
  %920 = phi i64 [ %900, %907 ], [ 0, %890 ]
  %921 = add nsw i32 %918, 1
  store i32 %921, ptr %919, align 4, !tbaa !6
  %922 = getelementptr inbounds i32, ptr %7, i64 %920
  %923 = load i32, ptr %922, align 4, !tbaa !6
  %924 = getelementptr inbounds i32, ptr %6, i64 %920
  br label %935

925:                                              ; preds = %899
  %926 = icmp eq i32 %902, %905
  br i1 %926, label %927, label %933

927:                                              ; preds = %925
  store i32 0, ptr %901, align 4, !tbaa !6
  %928 = getelementptr inbounds i32, ptr %8, i64 %900
  %929 = load i32, ptr %928, align 4, !tbaa !6
  %930 = getelementptr inbounds i32, ptr %6, i64 %900
  store i32 %929, ptr %930, align 4, !tbaa !6
  %931 = add nuw nsw i64 %900, 1
  %932 = icmp eq i64 %931, %653
  br i1 %932, label %940, label %899, !llvm.loop !413

933:                                              ; preds = %895, %925
  %934 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 536, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3093

935:                                              ; preds = %908, %917
  %936 = phi ptr [ %924, %917 ], [ %901, %908 ]
  %937 = phi i32 [ %923, %917 ], [ 1, %908 ]
  %938 = load i32, ptr %936, align 4, !tbaa !6
  %939 = add nsw i32 %938, %937
  store i32 %939, ptr %936, align 4, !tbaa !6
  br label %940

940:                                              ; preds = %927, %935, %897, %888
  %941 = icmp eq i32 %889, %5
  br i1 %941, label %3088, label %803, !llvm.loop !414

942:                                              ; preds = %641
  %943 = getelementptr inbounds i32, ptr %3, i64 %19
  %944 = load i32, ptr %943, align 4, !tbaa !6
  %945 = icmp eq i32 %944, 0
  %946 = icmp sgt i32 %5, 0
  br i1 %945, label %956, label %947

947:                                              ; preds = %942
  br i1 %946, label %948, label %3088

948:                                              ; preds = %947
  %949 = icmp sgt i32 %13, 1
  %950 = icmp sgt i32 %13, 0
  %951 = add i32 %13, -2
  %952 = zext i32 %951 to i64
  %953 = zext i32 %13 to i64
  %954 = add nuw i32 %5, 1
  %955 = icmp eq i32 %13, 1
  br label %1099

956:                                              ; preds = %942
  br i1 %946, label %957, label %3088

957:                                              ; preds = %956
  %958 = icmp sgt i32 %13, 1
  %959 = icmp sgt i32 %13, 0
  %960 = add i32 %13, -2
  %961 = zext i32 %960 to i64
  %962 = zext i32 %13 to i64
  %963 = add nuw i32 %5, 1
  %964 = icmp eq i32 %13, 1
  br label %965

965:                                              ; preds = %957, %1097
  %966 = phi i32 [ 0, %957 ], [ %1049, %1097 ]
  %967 = phi double [ 0.000000e+00, %957 ], [ %1048, %1097 ]
  %968 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %958, label %969, label %1038

969:                                              ; preds = %965, %1028
  %970 = phi i32 [ %1037, %1028 ], [ 0, %965 ]
  %971 = phi i64 [ %979, %1028 ], [ %962, %965 ]
  %972 = phi i64 [ %1036, %1028 ], [ %961, %965 ]
  %973 = phi i32 [ %1034, %1028 ], [ %968, %965 ]
  %974 = sub i32 %960, %970
  %975 = tail call i32 @llvm.smin.i32(i32 %974, i32 0)
  %976 = sub i32 %974, %975
  %977 = zext i32 %976 to i64
  %978 = add nuw nsw i64 %977, 1
  %979 = add nsw i64 %971, -1
  %980 = icmp ult i32 %976, 31
  br i1 %980, label %1016, label %981

981:                                              ; preds = %969
  %982 = and i64 %978, 8589934560
  %983 = sub i64 %972, %982
  br label %984

984:                                              ; preds = %984, %981
  %985 = phi i64 [ 0, %981 ], [ %1008, %984 ]
  %986 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %981 ], [ %1004, %984 ]
  %987 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %981 ], [ %1005, %984 ]
  %988 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %981 ], [ %1006, %984 ]
  %989 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %981 ], [ %1007, %984 ]
  %990 = sub i64 %972, %985
  %991 = getelementptr inbounds i32, ptr %9, i64 %990
  %992 = getelementptr inbounds i32, ptr %991, i64 -7
  %993 = load <8 x i32>, ptr %992, align 4, !tbaa !6
  %994 = shufflevector <8 x i32> %993, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %995 = getelementptr inbounds i32, ptr %991, i64 -15
  %996 = load <8 x i32>, ptr %995, align 4, !tbaa !6
  %997 = shufflevector <8 x i32> %996, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %998 = getelementptr inbounds i32, ptr %991, i64 -23
  %999 = load <8 x i32>, ptr %998, align 4, !tbaa !6
  %1000 = shufflevector <8 x i32> %999, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1001 = getelementptr inbounds i32, ptr %991, i64 -31
  %1002 = load <8 x i32>, ptr %1001, align 4, !tbaa !6
  %1003 = shufflevector <8 x i32> %1002, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1004 = mul <8 x i32> %994, %986
  %1005 = mul <8 x i32> %997, %987
  %1006 = mul <8 x i32> %1000, %988
  %1007 = mul <8 x i32> %1003, %989
  %1008 = add nuw i64 %985, 32
  %1009 = icmp eq i64 %1008, %982
  br i1 %1009, label %1010, label %984, !llvm.loop !415

1010:                                             ; preds = %984
  %1011 = mul <8 x i32> %1005, %1004
  %1012 = mul <8 x i32> %1006, %1011
  %1013 = mul <8 x i32> %1007, %1012
  %1014 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1013)
  %1015 = icmp eq i64 %978, %982
  br i1 %1015, label %1028, label %1016

1016:                                             ; preds = %969, %1010
  %1017 = phi i64 [ %972, %969 ], [ %983, %1010 ]
  %1018 = phi i32 [ 1, %969 ], [ %1014, %1010 ]
  br label %1019

1019:                                             ; preds = %1016, %1019
  %1020 = phi i64 [ %1025, %1019 ], [ %1017, %1016 ]
  %1021 = phi i32 [ %1024, %1019 ], [ %1018, %1016 ]
  %1022 = getelementptr inbounds i32, ptr %9, i64 %1020
  %1023 = load i32, ptr %1022, align 4, !tbaa !6
  %1024 = mul nsw i32 %1023, %1021
  %1025 = add nsw i64 %1020, -1
  %1026 = trunc i64 %1020 to i32
  %1027 = icmp sgt i32 %1026, 0
  br i1 %1027, label %1019, label %1028, !llvm.loop !416

1028:                                             ; preds = %1019, %1010
  %1029 = phi i32 [ %1014, %1010 ], [ %1024, %1019 ]
  %1030 = and i64 %979, 4294967295
  %1031 = getelementptr inbounds i32, ptr %6, i64 %1030
  %1032 = load i32, ptr %1031, align 4, !tbaa !6
  %1033 = mul nsw i32 %1032, %1029
  %1034 = add nsw i32 %1033, %973
  %1035 = icmp sgt i64 %971, 2
  %1036 = add nsw i64 %972, -1
  %1037 = add i32 %970, 1
  br i1 %1035, label %969, label %1038, !llvm.loop !417

1038:                                             ; preds = %1028, %965
  %1039 = phi i32 [ %968, %965 ], [ %1034, %1028 ]
  %1040 = sext i32 %1039 to i64
  %1041 = getelementptr inbounds i8, ptr %630, i64 %1040
  %1042 = load i8, ptr %1041, align 1, !tbaa !12
  %1043 = sext i8 %1042 to i32
  %1044 = load i32, ptr %632, align 4, !tbaa !6
  %1045 = icmp slt i32 %1044, %1043
  br i1 %1045, label %1046, label %1047

1046:                                             ; preds = %1038
  store i32 %1043, ptr %632, align 4, !tbaa !6
  br label %1047

1047:                                             ; preds = %1046, %1038
  %1048 = fadd fast double %967, 1.000000e+00
  %1049 = add nuw nsw i32 %966, 1
  br i1 %959, label %1050, label %1097

1050:                                             ; preds = %1047
  %1051 = load i32, ptr %4, align 4, !tbaa !6
  %1052 = load i32, ptr %12, align 4, !tbaa !6
  %1053 = add nsw i32 %1052, -1
  %1054 = icmp slt i32 %1051, %1053
  br i1 %1054, label %1074, label %1055

1055:                                             ; preds = %1050
  %1056 = icmp eq i32 %1051, %1053
  br i1 %1056, label %1057, label %1090

1057:                                             ; preds = %1055
  store i32 0, ptr %4, align 4, !tbaa !6
  %1058 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1058, ptr %6, align 4, !tbaa !6
  br i1 %964, label %1097, label %1059

1059:                                             ; preds = %1057, %1084
  %1060 = phi i64 [ %1088, %1084 ], [ 1, %1057 ]
  %1061 = getelementptr inbounds i32, ptr %4, i64 %1060
  %1062 = load i32, ptr %1061, align 4, !tbaa !6
  %1063 = getelementptr inbounds i32, ptr %12, i64 %1060
  %1064 = load i32, ptr %1063, align 4, !tbaa !6
  %1065 = add nsw i32 %1064, -1
  %1066 = icmp slt i32 %1062, %1065
  br i1 %1066, label %1067, label %1082

1067:                                             ; preds = %1059
  br i1 %1054, label %1074, label %1068

1068:                                             ; preds = %1067
  %1069 = getelementptr inbounds i32, ptr %7, i64 %1060
  %1070 = load i32, ptr %1069, align 4, !tbaa !6
  %1071 = getelementptr inbounds i32, ptr %6, i64 %1060
  %1072 = load i32, ptr %1071, align 4, !tbaa !6
  %1073 = add nsw i32 %1072, %1070
  store i32 %1073, ptr %1071, align 4, !tbaa !6
  br label %1092

1074:                                             ; preds = %1050, %1067
  %1075 = phi i32 [ %1062, %1067 ], [ %1051, %1050 ]
  %1076 = phi ptr [ %1061, %1067 ], [ %4, %1050 ]
  %1077 = phi i64 [ %1060, %1067 ], [ 0, %1050 ]
  %1078 = add nsw i32 %1075, 1
  store i32 %1078, ptr %1076, align 4, !tbaa !6
  %1079 = getelementptr inbounds i32, ptr %7, i64 %1077
  %1080 = load i32, ptr %1079, align 4, !tbaa !6
  %1081 = getelementptr inbounds i32, ptr %6, i64 %1077
  br label %1092

1082:                                             ; preds = %1059
  %1083 = icmp eq i32 %1062, %1065
  br i1 %1083, label %1084, label %1090

1084:                                             ; preds = %1082
  store i32 0, ptr %1061, align 4, !tbaa !6
  %1085 = getelementptr inbounds i32, ptr %8, i64 %1060
  %1086 = load i32, ptr %1085, align 4, !tbaa !6
  %1087 = getelementptr inbounds i32, ptr %6, i64 %1060
  store i32 %1086, ptr %1087, align 4, !tbaa !6
  %1088 = add nuw nsw i64 %1060, 1
  %1089 = icmp eq i64 %1088, %962
  br i1 %1089, label %1097, label %1059, !llvm.loop !418

1090:                                             ; preds = %1055, %1082
  %1091 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 536, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3093

1092:                                             ; preds = %1068, %1074
  %1093 = phi ptr [ %1081, %1074 ], [ %1061, %1068 ]
  %1094 = phi i32 [ %1080, %1074 ], [ 1, %1068 ]
  %1095 = load i32, ptr %1093, align 4, !tbaa !6
  %1096 = add nsw i32 %1095, %1094
  store i32 %1096, ptr %1093, align 4, !tbaa !6
  br label %1097

1097:                                             ; preds = %1084, %1092, %1057, %1047
  %1098 = icmp eq i32 %1049, %5
  br i1 %1098, label %3088, label %965, !llvm.loop !419

1099:                                             ; preds = %948, %1236
  %1100 = phi i32 [ 0, %948 ], [ %1185, %1236 ]
  %1101 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %949, label %1102, label %1171

1102:                                             ; preds = %1099, %1161
  %1103 = phi i32 [ %1170, %1161 ], [ 0, %1099 ]
  %1104 = phi i64 [ %1112, %1161 ], [ %953, %1099 ]
  %1105 = phi i64 [ %1169, %1161 ], [ %952, %1099 ]
  %1106 = phi i32 [ %1167, %1161 ], [ %1101, %1099 ]
  %1107 = sub i32 %951, %1103
  %1108 = tail call i32 @llvm.smin.i32(i32 %1107, i32 0)
  %1109 = sub i32 %1107, %1108
  %1110 = zext i32 %1109 to i64
  %1111 = add nuw nsw i64 %1110, 1
  %1112 = add nsw i64 %1104, -1
  %1113 = icmp ult i32 %1109, 31
  br i1 %1113, label %1149, label %1114

1114:                                             ; preds = %1102
  %1115 = and i64 %1111, 8589934560
  %1116 = sub i64 %1105, %1115
  br label %1117

1117:                                             ; preds = %1117, %1114
  %1118 = phi i64 [ 0, %1114 ], [ %1141, %1117 ]
  %1119 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1114 ], [ %1137, %1117 ]
  %1120 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1114 ], [ %1138, %1117 ]
  %1121 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1114 ], [ %1139, %1117 ]
  %1122 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1114 ], [ %1140, %1117 ]
  %1123 = sub i64 %1105, %1118
  %1124 = getelementptr inbounds i32, ptr %11, i64 %1123
  %1125 = getelementptr inbounds i32, ptr %1124, i64 -7
  %1126 = load <8 x i32>, ptr %1125, align 4, !tbaa !6
  %1127 = shufflevector <8 x i32> %1126, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1128 = getelementptr inbounds i32, ptr %1124, i64 -15
  %1129 = load <8 x i32>, ptr %1128, align 4, !tbaa !6
  %1130 = shufflevector <8 x i32> %1129, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1131 = getelementptr inbounds i32, ptr %1124, i64 -23
  %1132 = load <8 x i32>, ptr %1131, align 4, !tbaa !6
  %1133 = shufflevector <8 x i32> %1132, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1134 = getelementptr inbounds i32, ptr %1124, i64 -31
  %1135 = load <8 x i32>, ptr %1134, align 4, !tbaa !6
  %1136 = shufflevector <8 x i32> %1135, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1137 = mul <8 x i32> %1127, %1119
  %1138 = mul <8 x i32> %1130, %1120
  %1139 = mul <8 x i32> %1133, %1121
  %1140 = mul <8 x i32> %1136, %1122
  %1141 = add nuw i64 %1118, 32
  %1142 = icmp eq i64 %1141, %1115
  br i1 %1142, label %1143, label %1117, !llvm.loop !420

1143:                                             ; preds = %1117
  %1144 = mul <8 x i32> %1138, %1137
  %1145 = mul <8 x i32> %1139, %1144
  %1146 = mul <8 x i32> %1140, %1145
  %1147 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1146)
  %1148 = icmp eq i64 %1111, %1115
  br i1 %1148, label %1161, label %1149

1149:                                             ; preds = %1102, %1143
  %1150 = phi i64 [ %1105, %1102 ], [ %1116, %1143 ]
  %1151 = phi i32 [ 1, %1102 ], [ %1147, %1143 ]
  br label %1152

1152:                                             ; preds = %1149, %1152
  %1153 = phi i64 [ %1158, %1152 ], [ %1150, %1149 ]
  %1154 = phi i32 [ %1157, %1152 ], [ %1151, %1149 ]
  %1155 = getelementptr inbounds i32, ptr %11, i64 %1153
  %1156 = load i32, ptr %1155, align 4, !tbaa !6
  %1157 = mul nsw i32 %1156, %1154
  %1158 = add nsw i64 %1153, -1
  %1159 = trunc i64 %1153 to i32
  %1160 = icmp sgt i32 %1159, 0
  br i1 %1160, label %1152, label %1161, !llvm.loop !421

1161:                                             ; preds = %1152, %1143
  %1162 = phi i32 [ %1147, %1143 ], [ %1157, %1152 ]
  %1163 = and i64 %1112, 4294967295
  %1164 = getelementptr inbounds i32, ptr %6, i64 %1163
  %1165 = load i32, ptr %1164, align 4, !tbaa !6
  %1166 = mul nsw i32 %1165, %1162
  %1167 = add nsw i32 %1166, %1106
  %1168 = icmp sgt i64 %1104, 2
  %1169 = add nsw i64 %1105, -1
  %1170 = add i32 %1103, 1
  br i1 %1168, label %1102, label %1171, !llvm.loop !422

1171:                                             ; preds = %1161, %1099
  %1172 = phi i32 [ %1101, %1099 ], [ %1167, %1161 ]
  %1173 = icmp slt i32 %1172, %5
  br i1 %1173, label %1176, label %1174

1174:                                             ; preds = %1171
  %1175 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 536, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3093

1176:                                             ; preds = %1171
  %1177 = sext i32 %1172 to i64
  %1178 = getelementptr inbounds i8, ptr %630, i64 %1177
  %1179 = load i8, ptr %1178, align 1, !tbaa !12
  %1180 = sext i8 %1179 to i32
  %1181 = load i32, ptr %632, align 4, !tbaa !6
  %1182 = icmp slt i32 %1181, %1180
  br i1 %1182, label %1183, label %1184

1183:                                             ; preds = %1176
  store i32 %1180, ptr %632, align 4, !tbaa !6
  br label %1184

1184:                                             ; preds = %1183, %1176
  %1185 = add nuw nsw i32 %1100, 1
  br i1 %950, label %1186, label %1236

1186:                                             ; preds = %1184
  %1187 = load i32, ptr %4, align 4, !tbaa !6
  %1188 = load i32, ptr %12, align 4, !tbaa !6
  %1189 = add nsw i32 %1188, -1
  %1190 = icmp slt i32 %1187, %1189
  br i1 %1190, label %1213, label %1191

1191:                                             ; preds = %1186
  %1192 = icmp eq i32 %1187, %1189
  br i1 %1192, label %1193, label %1229

1193:                                             ; preds = %1191
  store i32 0, ptr %4, align 4, !tbaa !6
  %1194 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1194, ptr %6, align 4, !tbaa !6
  br i1 %955, label %1236, label %1195

1195:                                             ; preds = %1193, %1223
  %1196 = phi i64 [ %1227, %1223 ], [ 1, %1193 ]
  %1197 = getelementptr inbounds i32, ptr %4, i64 %1196
  %1198 = load i32, ptr %1197, align 4, !tbaa !6
  %1199 = getelementptr inbounds i32, ptr %12, i64 %1196
  %1200 = load i32, ptr %1199, align 4, !tbaa !6
  %1201 = add nsw i32 %1200, -1
  %1202 = icmp slt i32 %1198, %1201
  br i1 %1202, label %1203, label %1221

1203:                                             ; preds = %1195
  br i1 %1190, label %1213, label %1204

1204:                                             ; preds = %1203
  %1205 = shl i64 %1196, 32
  %1206 = add i64 %1205, -4294967296
  %1207 = ashr exact i64 %1206, 32
  %1208 = getelementptr inbounds i32, ptr %7, i64 %1207
  %1209 = load i32, ptr %1208, align 4, !tbaa !6
  %1210 = getelementptr inbounds i32, ptr %6, i64 %1196
  %1211 = load i32, ptr %1210, align 4, !tbaa !6
  %1212 = add nsw i32 %1211, %1209
  store i32 %1212, ptr %1210, align 4, !tbaa !6
  br label %1231

1213:                                             ; preds = %1186, %1203
  %1214 = phi i32 [ %1198, %1203 ], [ %1187, %1186 ]
  %1215 = phi ptr [ %1197, %1203 ], [ %4, %1186 ]
  %1216 = phi i64 [ %1196, %1203 ], [ 0, %1186 ]
  %1217 = add nsw i32 %1214, 1
  store i32 %1217, ptr %1215, align 4, !tbaa !6
  %1218 = getelementptr inbounds i32, ptr %7, i64 %1216
  %1219 = load i32, ptr %1218, align 4, !tbaa !6
  %1220 = getelementptr inbounds i32, ptr %6, i64 %1216
  br label %1231

1221:                                             ; preds = %1195
  %1222 = icmp eq i32 %1198, %1201
  br i1 %1222, label %1223, label %1229

1223:                                             ; preds = %1221
  store i32 0, ptr %1197, align 4, !tbaa !6
  %1224 = getelementptr inbounds i32, ptr %8, i64 %1196
  %1225 = load i32, ptr %1224, align 4, !tbaa !6
  %1226 = getelementptr inbounds i32, ptr %6, i64 %1196
  store i32 %1225, ptr %1226, align 4, !tbaa !6
  %1227 = add nuw nsw i64 %1196, 1
  %1228 = icmp eq i64 %1227, %953
  br i1 %1228, label %1236, label %1195, !llvm.loop !423

1229:                                             ; preds = %1191, %1221
  %1230 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 536, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3093

1231:                                             ; preds = %1204, %1213
  %1232 = phi ptr [ %1220, %1213 ], [ %1197, %1204 ]
  %1233 = phi i32 [ %1219, %1213 ], [ 1, %1204 ]
  %1234 = load i32, ptr %1232, align 4, !tbaa !6
  %1235 = add nsw i32 %1234, %1233
  store i32 %1235, ptr %1232, align 4, !tbaa !6
  br label %1236

1236:                                             ; preds = %1223, %1231, %1193, %1184
  %1237 = icmp eq i32 %1185, %5
  br i1 %1237, label %3088, label %1099, !llvm.loop !424

1238:                                             ; preds = %641
  %1239 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 536, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3088

1240:                                             ; preds = %18
  %1241 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1242 = load ptr, ptr %1241, align 8, !tbaa !10
  %1243 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1244 = load ptr, ptr %1243, align 8, !tbaa !10
  %1245 = load i8, ptr %1242, align 1, !tbaa !12
  %1246 = sitofp i8 %1245 to double
  store double %1246, ptr %1244, align 8, !tbaa !19
  %1247 = icmp eq i32 %13, 0
  br i1 %1247, label %1248, label %1253

1248:                                             ; preds = %1240
  %1249 = load i8, ptr %1242, align 1, !tbaa !12
  %1250 = sitofp i8 %1249 to double
  %1251 = fcmp fast olt double %1246, %1250
  br i1 %1251, label %1252, label %3088

1252:                                             ; preds = %1248
  store double %1250, ptr %1244, align 8, !tbaa !19
  br label %3088

1253:                                             ; preds = %1240
  switch i32 %1, label %1854 [
    i32 1, label %1254
    i32 0, label %1556
  ]

1254:                                             ; preds = %1253
  %1255 = getelementptr inbounds i32, ptr %3, i64 %19
  %1256 = load i32, ptr %1255, align 4, !tbaa !6
  %1257 = icmp eq i32 %1256, 0
  %1258 = icmp sgt i32 %5, 0
  br i1 %1257, label %1268, label %1259

1259:                                             ; preds = %1254
  br i1 %1258, label %1260, label %3088

1260:                                             ; preds = %1259
  %1261 = icmp sgt i32 %13, 1
  %1262 = icmp sgt i32 %13, 0
  %1263 = add i32 %13, -2
  %1264 = zext i32 %1263 to i64
  %1265 = zext i32 %13 to i64
  %1266 = add nuw i32 %5, 1
  %1267 = icmp eq i32 %13, 1
  br label %1416

1268:                                             ; preds = %1254
  br i1 %1258, label %1269, label %3088

1269:                                             ; preds = %1268
  %1270 = icmp sgt i32 %13, 1
  %1271 = icmp sgt i32 %13, 0
  %1272 = add i32 %13, -2
  %1273 = zext i32 %1272 to i64
  %1274 = zext i32 %13 to i64
  %1275 = add nuw i32 %5, 1
  %1276 = icmp eq i32 %13, 1
  br label %1277

1277:                                             ; preds = %1269, %1414
  %1278 = phi double [ %1246, %1269 ], [ %1364, %1414 ]
  %1279 = phi i32 [ 0, %1269 ], [ %1366, %1414 ]
  %1280 = phi double [ 0.000000e+00, %1269 ], [ %1365, %1414 ]
  %1281 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1270, label %1282, label %1351

1282:                                             ; preds = %1277, %1341
  %1283 = phi i32 [ %1350, %1341 ], [ 0, %1277 ]
  %1284 = phi i64 [ %1292, %1341 ], [ %1274, %1277 ]
  %1285 = phi i64 [ %1349, %1341 ], [ %1273, %1277 ]
  %1286 = phi i32 [ %1347, %1341 ], [ %1281, %1277 ]
  %1287 = sub i32 %1272, %1283
  %1288 = tail call i32 @llvm.smin.i32(i32 %1287, i32 0)
  %1289 = sub i32 %1287, %1288
  %1290 = zext i32 %1289 to i64
  %1291 = add nuw nsw i64 %1290, 1
  %1292 = add nsw i64 %1284, -1
  %1293 = icmp ult i32 %1289, 31
  br i1 %1293, label %1329, label %1294

1294:                                             ; preds = %1282
  %1295 = and i64 %1291, 8589934560
  %1296 = sub i64 %1285, %1295
  br label %1297

1297:                                             ; preds = %1297, %1294
  %1298 = phi i64 [ 0, %1294 ], [ %1321, %1297 ]
  %1299 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1294 ], [ %1317, %1297 ]
  %1300 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1294 ], [ %1318, %1297 ]
  %1301 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1294 ], [ %1319, %1297 ]
  %1302 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1294 ], [ %1320, %1297 ]
  %1303 = sub i64 %1285, %1298
  %1304 = getelementptr inbounds i32, ptr %9, i64 %1303
  %1305 = getelementptr inbounds i32, ptr %1304, i64 -7
  %1306 = load <8 x i32>, ptr %1305, align 4, !tbaa !6
  %1307 = shufflevector <8 x i32> %1306, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1308 = getelementptr inbounds i32, ptr %1304, i64 -15
  %1309 = load <8 x i32>, ptr %1308, align 4, !tbaa !6
  %1310 = shufflevector <8 x i32> %1309, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1311 = getelementptr inbounds i32, ptr %1304, i64 -23
  %1312 = load <8 x i32>, ptr %1311, align 4, !tbaa !6
  %1313 = shufflevector <8 x i32> %1312, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1314 = getelementptr inbounds i32, ptr %1304, i64 -31
  %1315 = load <8 x i32>, ptr %1314, align 4, !tbaa !6
  %1316 = shufflevector <8 x i32> %1315, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1317 = mul <8 x i32> %1307, %1299
  %1318 = mul <8 x i32> %1310, %1300
  %1319 = mul <8 x i32> %1313, %1301
  %1320 = mul <8 x i32> %1316, %1302
  %1321 = add nuw i64 %1298, 32
  %1322 = icmp eq i64 %1321, %1295
  br i1 %1322, label %1323, label %1297, !llvm.loop !425

1323:                                             ; preds = %1297
  %1324 = mul <8 x i32> %1318, %1317
  %1325 = mul <8 x i32> %1319, %1324
  %1326 = mul <8 x i32> %1320, %1325
  %1327 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1326)
  %1328 = icmp eq i64 %1291, %1295
  br i1 %1328, label %1341, label %1329

1329:                                             ; preds = %1282, %1323
  %1330 = phi i64 [ %1285, %1282 ], [ %1296, %1323 ]
  %1331 = phi i32 [ 1, %1282 ], [ %1327, %1323 ]
  br label %1332

1332:                                             ; preds = %1329, %1332
  %1333 = phi i64 [ %1338, %1332 ], [ %1330, %1329 ]
  %1334 = phi i32 [ %1337, %1332 ], [ %1331, %1329 ]
  %1335 = getelementptr inbounds i32, ptr %9, i64 %1333
  %1336 = load i32, ptr %1335, align 4, !tbaa !6
  %1337 = mul nsw i32 %1336, %1334
  %1338 = add nsw i64 %1333, -1
  %1339 = trunc i64 %1333 to i32
  %1340 = icmp sgt i32 %1339, 0
  br i1 %1340, label %1332, label %1341, !llvm.loop !426

1341:                                             ; preds = %1332, %1323
  %1342 = phi i32 [ %1327, %1323 ], [ %1337, %1332 ]
  %1343 = and i64 %1292, 4294967295
  %1344 = getelementptr inbounds i32, ptr %6, i64 %1343
  %1345 = load i32, ptr %1344, align 4, !tbaa !6
  %1346 = mul nsw i32 %1345, %1342
  %1347 = add nsw i32 %1346, %1286
  %1348 = icmp sgt i64 %1284, 2
  %1349 = add nsw i64 %1285, -1
  %1350 = add i32 %1283, 1
  br i1 %1348, label %1282, label %1351, !llvm.loop !427

1351:                                             ; preds = %1341, %1277
  %1352 = phi i32 [ %1281, %1277 ], [ %1347, %1341 ]
  %1353 = sext i32 %1352 to i64
  %1354 = getelementptr inbounds double, ptr %2, i64 %1353
  %1355 = load double, ptr %1354, align 8, !tbaa !19
  %1356 = getelementptr inbounds i8, ptr %1242, i64 %1353
  %1357 = load i8, ptr %1356, align 1, !tbaa !12
  %1358 = sitofp i8 %1357 to double
  %1359 = fcmp fast one double %1355, 0.000000e+00
  %1360 = fcmp fast olt double %1278, %1358
  %1361 = select i1 %1359, i1 %1360, i1 false
  br i1 %1361, label %1362, label %1363

1362:                                             ; preds = %1351
  store double %1358, ptr %1244, align 8, !tbaa !19
  br label %1363

1363:                                             ; preds = %1362, %1351
  %1364 = phi double [ %1358, %1362 ], [ %1278, %1351 ]
  %1365 = fadd fast double %1355, %1280
  %1366 = add nuw nsw i32 %1279, 1
  br i1 %1271, label %1367, label %1414

1367:                                             ; preds = %1363
  %1368 = load i32, ptr %4, align 4, !tbaa !6
  %1369 = load i32, ptr %12, align 4, !tbaa !6
  %1370 = add nsw i32 %1369, -1
  %1371 = icmp slt i32 %1368, %1370
  br i1 %1371, label %1391, label %1372

1372:                                             ; preds = %1367
  %1373 = icmp eq i32 %1368, %1370
  br i1 %1373, label %1374, label %1407

1374:                                             ; preds = %1372
  store i32 0, ptr %4, align 4, !tbaa !6
  %1375 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1375, ptr %6, align 4, !tbaa !6
  br i1 %1276, label %1414, label %1376

1376:                                             ; preds = %1374, %1401
  %1377 = phi i64 [ %1405, %1401 ], [ 1, %1374 ]
  %1378 = getelementptr inbounds i32, ptr %4, i64 %1377
  %1379 = load i32, ptr %1378, align 4, !tbaa !6
  %1380 = getelementptr inbounds i32, ptr %12, i64 %1377
  %1381 = load i32, ptr %1380, align 4, !tbaa !6
  %1382 = add nsw i32 %1381, -1
  %1383 = icmp slt i32 %1379, %1382
  br i1 %1383, label %1384, label %1399

1384:                                             ; preds = %1376
  br i1 %1371, label %1391, label %1385

1385:                                             ; preds = %1384
  %1386 = getelementptr inbounds i32, ptr %7, i64 %1377
  %1387 = load i32, ptr %1386, align 4, !tbaa !6
  %1388 = getelementptr inbounds i32, ptr %6, i64 %1377
  %1389 = load i32, ptr %1388, align 4, !tbaa !6
  %1390 = add nsw i32 %1389, %1387
  store i32 %1390, ptr %1388, align 4, !tbaa !6
  br label %1409

1391:                                             ; preds = %1367, %1384
  %1392 = phi i32 [ %1379, %1384 ], [ %1368, %1367 ]
  %1393 = phi ptr [ %1378, %1384 ], [ %4, %1367 ]
  %1394 = phi i64 [ %1377, %1384 ], [ 0, %1367 ]
  %1395 = add nsw i32 %1392, 1
  store i32 %1395, ptr %1393, align 4, !tbaa !6
  %1396 = getelementptr inbounds i32, ptr %7, i64 %1394
  %1397 = load i32, ptr %1396, align 4, !tbaa !6
  %1398 = getelementptr inbounds i32, ptr %6, i64 %1394
  br label %1409

1399:                                             ; preds = %1376
  %1400 = icmp eq i32 %1379, %1382
  br i1 %1400, label %1401, label %1407

1401:                                             ; preds = %1399
  store i32 0, ptr %1378, align 4, !tbaa !6
  %1402 = getelementptr inbounds i32, ptr %8, i64 %1377
  %1403 = load i32, ptr %1402, align 4, !tbaa !6
  %1404 = getelementptr inbounds i32, ptr %6, i64 %1377
  store i32 %1403, ptr %1404, align 4, !tbaa !6
  %1405 = add nuw nsw i64 %1377, 1
  %1406 = icmp eq i64 %1405, %1274
  br i1 %1406, label %1414, label %1376, !llvm.loop !428

1407:                                             ; preds = %1372, %1399
  %1408 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 559, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3093

1409:                                             ; preds = %1385, %1391
  %1410 = phi ptr [ %1398, %1391 ], [ %1378, %1385 ]
  %1411 = phi i32 [ %1397, %1391 ], [ 1, %1385 ]
  %1412 = load i32, ptr %1410, align 4, !tbaa !6
  %1413 = add nsw i32 %1412, %1411
  store i32 %1413, ptr %1410, align 4, !tbaa !6
  br label %1414

1414:                                             ; preds = %1401, %1409, %1374, %1363
  %1415 = icmp eq i32 %1366, %5
  br i1 %1415, label %3088, label %1277, !llvm.loop !429

1416:                                             ; preds = %1260, %1554
  %1417 = phi double [ %1246, %1260 ], [ %1502, %1554 ]
  %1418 = phi i32 [ 0, %1260 ], [ %1503, %1554 ]
  %1419 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1261, label %1420, label %1489

1420:                                             ; preds = %1416, %1479
  %1421 = phi i32 [ %1488, %1479 ], [ 0, %1416 ]
  %1422 = phi i64 [ %1430, %1479 ], [ %1265, %1416 ]
  %1423 = phi i64 [ %1487, %1479 ], [ %1264, %1416 ]
  %1424 = phi i32 [ %1485, %1479 ], [ %1419, %1416 ]
  %1425 = sub i32 %1263, %1421
  %1426 = tail call i32 @llvm.smin.i32(i32 %1425, i32 0)
  %1427 = sub i32 %1425, %1426
  %1428 = zext i32 %1427 to i64
  %1429 = add nuw nsw i64 %1428, 1
  %1430 = add nsw i64 %1422, -1
  %1431 = icmp ult i32 %1427, 31
  br i1 %1431, label %1467, label %1432

1432:                                             ; preds = %1420
  %1433 = and i64 %1429, 8589934560
  %1434 = sub i64 %1423, %1433
  br label %1435

1435:                                             ; preds = %1435, %1432
  %1436 = phi i64 [ 0, %1432 ], [ %1459, %1435 ]
  %1437 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1432 ], [ %1455, %1435 ]
  %1438 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1432 ], [ %1456, %1435 ]
  %1439 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1432 ], [ %1457, %1435 ]
  %1440 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1432 ], [ %1458, %1435 ]
  %1441 = sub i64 %1423, %1436
  %1442 = getelementptr inbounds i32, ptr %11, i64 %1441
  %1443 = getelementptr inbounds i32, ptr %1442, i64 -7
  %1444 = load <8 x i32>, ptr %1443, align 4, !tbaa !6
  %1445 = shufflevector <8 x i32> %1444, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1446 = getelementptr inbounds i32, ptr %1442, i64 -15
  %1447 = load <8 x i32>, ptr %1446, align 4, !tbaa !6
  %1448 = shufflevector <8 x i32> %1447, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1449 = getelementptr inbounds i32, ptr %1442, i64 -23
  %1450 = load <8 x i32>, ptr %1449, align 4, !tbaa !6
  %1451 = shufflevector <8 x i32> %1450, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1452 = getelementptr inbounds i32, ptr %1442, i64 -31
  %1453 = load <8 x i32>, ptr %1452, align 4, !tbaa !6
  %1454 = shufflevector <8 x i32> %1453, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1455 = mul <8 x i32> %1445, %1437
  %1456 = mul <8 x i32> %1448, %1438
  %1457 = mul <8 x i32> %1451, %1439
  %1458 = mul <8 x i32> %1454, %1440
  %1459 = add nuw i64 %1436, 32
  %1460 = icmp eq i64 %1459, %1433
  br i1 %1460, label %1461, label %1435, !llvm.loop !430

1461:                                             ; preds = %1435
  %1462 = mul <8 x i32> %1456, %1455
  %1463 = mul <8 x i32> %1457, %1462
  %1464 = mul <8 x i32> %1458, %1463
  %1465 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1464)
  %1466 = icmp eq i64 %1429, %1433
  br i1 %1466, label %1479, label %1467

1467:                                             ; preds = %1420, %1461
  %1468 = phi i64 [ %1423, %1420 ], [ %1434, %1461 ]
  %1469 = phi i32 [ 1, %1420 ], [ %1465, %1461 ]
  br label %1470

1470:                                             ; preds = %1467, %1470
  %1471 = phi i64 [ %1476, %1470 ], [ %1468, %1467 ]
  %1472 = phi i32 [ %1475, %1470 ], [ %1469, %1467 ]
  %1473 = getelementptr inbounds i32, ptr %11, i64 %1471
  %1474 = load i32, ptr %1473, align 4, !tbaa !6
  %1475 = mul nsw i32 %1474, %1472
  %1476 = add nsw i64 %1471, -1
  %1477 = trunc i64 %1471 to i32
  %1478 = icmp sgt i32 %1477, 0
  br i1 %1478, label %1470, label %1479, !llvm.loop !431

1479:                                             ; preds = %1470, %1461
  %1480 = phi i32 [ %1465, %1461 ], [ %1475, %1470 ]
  %1481 = and i64 %1430, 4294967295
  %1482 = getelementptr inbounds i32, ptr %6, i64 %1481
  %1483 = load i32, ptr %1482, align 4, !tbaa !6
  %1484 = mul nsw i32 %1483, %1480
  %1485 = add nsw i32 %1484, %1424
  %1486 = icmp sgt i64 %1422, 2
  %1487 = add nsw i64 %1423, -1
  %1488 = add i32 %1421, 1
  br i1 %1486, label %1420, label %1489, !llvm.loop !432

1489:                                             ; preds = %1479, %1416
  %1490 = phi i32 [ %1419, %1416 ], [ %1485, %1479 ]
  %1491 = icmp slt i32 %1490, %5
  br i1 %1491, label %1494, label %1492

1492:                                             ; preds = %1489
  %1493 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 559, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3093

1494:                                             ; preds = %1489
  %1495 = sext i32 %1490 to i64
  %1496 = getelementptr inbounds i8, ptr %1242, i64 %1495
  %1497 = load i8, ptr %1496, align 1, !tbaa !12
  %1498 = sitofp i8 %1497 to double
  %1499 = fcmp fast olt double %1417, %1498
  br i1 %1499, label %1500, label %1501

1500:                                             ; preds = %1494
  store double %1498, ptr %1244, align 8, !tbaa !19
  br label %1501

1501:                                             ; preds = %1494, %1500
  %1502 = phi double [ %1417, %1494 ], [ %1498, %1500 ]
  %1503 = add nuw nsw i32 %1418, 1
  br i1 %1262, label %1504, label %1554

1504:                                             ; preds = %1501
  %1505 = load i32, ptr %4, align 4, !tbaa !6
  %1506 = load i32, ptr %12, align 4, !tbaa !6
  %1507 = add nsw i32 %1506, -1
  %1508 = icmp slt i32 %1505, %1507
  br i1 %1508, label %1531, label %1509

1509:                                             ; preds = %1504
  %1510 = icmp eq i32 %1505, %1507
  br i1 %1510, label %1511, label %1547

1511:                                             ; preds = %1509
  store i32 0, ptr %4, align 4, !tbaa !6
  %1512 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1512, ptr %6, align 4, !tbaa !6
  br i1 %1267, label %1554, label %1513

1513:                                             ; preds = %1511, %1541
  %1514 = phi i64 [ %1545, %1541 ], [ 1, %1511 ]
  %1515 = getelementptr inbounds i32, ptr %4, i64 %1514
  %1516 = load i32, ptr %1515, align 4, !tbaa !6
  %1517 = getelementptr inbounds i32, ptr %12, i64 %1514
  %1518 = load i32, ptr %1517, align 4, !tbaa !6
  %1519 = add nsw i32 %1518, -1
  %1520 = icmp slt i32 %1516, %1519
  br i1 %1520, label %1521, label %1539

1521:                                             ; preds = %1513
  br i1 %1508, label %1531, label %1522

1522:                                             ; preds = %1521
  %1523 = shl i64 %1514, 32
  %1524 = add i64 %1523, -4294967296
  %1525 = ashr exact i64 %1524, 32
  %1526 = getelementptr inbounds i32, ptr %7, i64 %1525
  %1527 = load i32, ptr %1526, align 4, !tbaa !6
  %1528 = getelementptr inbounds i32, ptr %6, i64 %1514
  %1529 = load i32, ptr %1528, align 4, !tbaa !6
  %1530 = add nsw i32 %1529, %1527
  store i32 %1530, ptr %1528, align 4, !tbaa !6
  br label %1549

1531:                                             ; preds = %1504, %1521
  %1532 = phi i32 [ %1516, %1521 ], [ %1505, %1504 ]
  %1533 = phi ptr [ %1515, %1521 ], [ %4, %1504 ]
  %1534 = phi i64 [ %1514, %1521 ], [ 0, %1504 ]
  %1535 = add nsw i32 %1532, 1
  store i32 %1535, ptr %1533, align 4, !tbaa !6
  %1536 = getelementptr inbounds i32, ptr %7, i64 %1534
  %1537 = load i32, ptr %1536, align 4, !tbaa !6
  %1538 = getelementptr inbounds i32, ptr %6, i64 %1534
  br label %1549

1539:                                             ; preds = %1513
  %1540 = icmp eq i32 %1516, %1519
  br i1 %1540, label %1541, label %1547

1541:                                             ; preds = %1539
  store i32 0, ptr %1515, align 4, !tbaa !6
  %1542 = getelementptr inbounds i32, ptr %8, i64 %1514
  %1543 = load i32, ptr %1542, align 4, !tbaa !6
  %1544 = getelementptr inbounds i32, ptr %6, i64 %1514
  store i32 %1543, ptr %1544, align 4, !tbaa !6
  %1545 = add nuw nsw i64 %1514, 1
  %1546 = icmp eq i64 %1545, %1265
  br i1 %1546, label %1554, label %1513, !llvm.loop !433

1547:                                             ; preds = %1509, %1539
  %1548 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 559, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3093

1549:                                             ; preds = %1522, %1531
  %1550 = phi ptr [ %1538, %1531 ], [ %1515, %1522 ]
  %1551 = phi i32 [ %1537, %1531 ], [ 1, %1522 ]
  %1552 = load i32, ptr %1550, align 4, !tbaa !6
  %1553 = add nsw i32 %1552, %1551
  store i32 %1553, ptr %1550, align 4, !tbaa !6
  br label %1554

1554:                                             ; preds = %1541, %1549, %1511, %1501
  %1555 = icmp eq i32 %1503, %5
  br i1 %1555, label %3088, label %1416, !llvm.loop !434

1556:                                             ; preds = %1253
  %1557 = getelementptr inbounds i32, ptr %3, i64 %19
  %1558 = load i32, ptr %1557, align 4, !tbaa !6
  %1559 = icmp eq i32 %1558, 0
  %1560 = icmp sgt i32 %5, 0
  br i1 %1559, label %1570, label %1561

1561:                                             ; preds = %1556
  br i1 %1560, label %1562, label %3088

1562:                                             ; preds = %1561
  %1563 = icmp sgt i32 %13, 1
  %1564 = icmp sgt i32 %13, 0
  %1565 = add i32 %13, -2
  %1566 = zext i32 %1565 to i64
  %1567 = zext i32 %13 to i64
  %1568 = add nuw i32 %5, 1
  %1569 = icmp eq i32 %13, 1
  br label %1714

1570:                                             ; preds = %1556
  br i1 %1560, label %1571, label %3088

1571:                                             ; preds = %1570
  %1572 = icmp sgt i32 %13, 1
  %1573 = icmp sgt i32 %13, 0
  %1574 = add i32 %13, -2
  %1575 = zext i32 %1574 to i64
  %1576 = zext i32 %13 to i64
  %1577 = add nuw i32 %5, 1
  %1578 = icmp eq i32 %13, 1
  br label %1579

1579:                                             ; preds = %1571, %1712
  %1580 = phi double [ %1246, %1571 ], [ %1662, %1712 ]
  %1581 = phi i32 [ 0, %1571 ], [ %1664, %1712 ]
  %1582 = phi double [ 0.000000e+00, %1571 ], [ %1663, %1712 ]
  %1583 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1572, label %1584, label %1653

1584:                                             ; preds = %1579, %1643
  %1585 = phi i32 [ %1652, %1643 ], [ 0, %1579 ]
  %1586 = phi i64 [ %1594, %1643 ], [ %1576, %1579 ]
  %1587 = phi i64 [ %1651, %1643 ], [ %1575, %1579 ]
  %1588 = phi i32 [ %1649, %1643 ], [ %1583, %1579 ]
  %1589 = sub i32 %1574, %1585
  %1590 = tail call i32 @llvm.smin.i32(i32 %1589, i32 0)
  %1591 = sub i32 %1589, %1590
  %1592 = zext i32 %1591 to i64
  %1593 = add nuw nsw i64 %1592, 1
  %1594 = add nsw i64 %1586, -1
  %1595 = icmp ult i32 %1591, 31
  br i1 %1595, label %1631, label %1596

1596:                                             ; preds = %1584
  %1597 = and i64 %1593, 8589934560
  %1598 = sub i64 %1587, %1597
  br label %1599

1599:                                             ; preds = %1599, %1596
  %1600 = phi i64 [ 0, %1596 ], [ %1623, %1599 ]
  %1601 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1596 ], [ %1619, %1599 ]
  %1602 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1596 ], [ %1620, %1599 ]
  %1603 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1596 ], [ %1621, %1599 ]
  %1604 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1596 ], [ %1622, %1599 ]
  %1605 = sub i64 %1587, %1600
  %1606 = getelementptr inbounds i32, ptr %9, i64 %1605
  %1607 = getelementptr inbounds i32, ptr %1606, i64 -7
  %1608 = load <8 x i32>, ptr %1607, align 4, !tbaa !6
  %1609 = shufflevector <8 x i32> %1608, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1610 = getelementptr inbounds i32, ptr %1606, i64 -15
  %1611 = load <8 x i32>, ptr %1610, align 4, !tbaa !6
  %1612 = shufflevector <8 x i32> %1611, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1613 = getelementptr inbounds i32, ptr %1606, i64 -23
  %1614 = load <8 x i32>, ptr %1613, align 4, !tbaa !6
  %1615 = shufflevector <8 x i32> %1614, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1616 = getelementptr inbounds i32, ptr %1606, i64 -31
  %1617 = load <8 x i32>, ptr %1616, align 4, !tbaa !6
  %1618 = shufflevector <8 x i32> %1617, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1619 = mul <8 x i32> %1609, %1601
  %1620 = mul <8 x i32> %1612, %1602
  %1621 = mul <8 x i32> %1615, %1603
  %1622 = mul <8 x i32> %1618, %1604
  %1623 = add nuw i64 %1600, 32
  %1624 = icmp eq i64 %1623, %1597
  br i1 %1624, label %1625, label %1599, !llvm.loop !435

1625:                                             ; preds = %1599
  %1626 = mul <8 x i32> %1620, %1619
  %1627 = mul <8 x i32> %1621, %1626
  %1628 = mul <8 x i32> %1622, %1627
  %1629 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1628)
  %1630 = icmp eq i64 %1593, %1597
  br i1 %1630, label %1643, label %1631

1631:                                             ; preds = %1584, %1625
  %1632 = phi i64 [ %1587, %1584 ], [ %1598, %1625 ]
  %1633 = phi i32 [ 1, %1584 ], [ %1629, %1625 ]
  br label %1634

1634:                                             ; preds = %1631, %1634
  %1635 = phi i64 [ %1640, %1634 ], [ %1632, %1631 ]
  %1636 = phi i32 [ %1639, %1634 ], [ %1633, %1631 ]
  %1637 = getelementptr inbounds i32, ptr %9, i64 %1635
  %1638 = load i32, ptr %1637, align 4, !tbaa !6
  %1639 = mul nsw i32 %1638, %1636
  %1640 = add nsw i64 %1635, -1
  %1641 = trunc i64 %1635 to i32
  %1642 = icmp sgt i32 %1641, 0
  br i1 %1642, label %1634, label %1643, !llvm.loop !436

1643:                                             ; preds = %1634, %1625
  %1644 = phi i32 [ %1629, %1625 ], [ %1639, %1634 ]
  %1645 = and i64 %1594, 4294967295
  %1646 = getelementptr inbounds i32, ptr %6, i64 %1645
  %1647 = load i32, ptr %1646, align 4, !tbaa !6
  %1648 = mul nsw i32 %1647, %1644
  %1649 = add nsw i32 %1648, %1588
  %1650 = icmp sgt i64 %1586, 2
  %1651 = add nsw i64 %1587, -1
  %1652 = add i32 %1585, 1
  br i1 %1650, label %1584, label %1653, !llvm.loop !437

1653:                                             ; preds = %1643, %1579
  %1654 = phi i32 [ %1583, %1579 ], [ %1649, %1643 ]
  %1655 = sext i32 %1654 to i64
  %1656 = getelementptr inbounds i8, ptr %1242, i64 %1655
  %1657 = load i8, ptr %1656, align 1, !tbaa !12
  %1658 = sitofp i8 %1657 to double
  %1659 = fcmp fast olt double %1580, %1658
  br i1 %1659, label %1660, label %1661

1660:                                             ; preds = %1653
  store double %1658, ptr %1244, align 8, !tbaa !19
  br label %1661

1661:                                             ; preds = %1660, %1653
  %1662 = phi double [ %1658, %1660 ], [ %1580, %1653 ]
  %1663 = fadd fast double %1582, 1.000000e+00
  %1664 = add nuw nsw i32 %1581, 1
  br i1 %1573, label %1665, label %1712

1665:                                             ; preds = %1661
  %1666 = load i32, ptr %4, align 4, !tbaa !6
  %1667 = load i32, ptr %12, align 4, !tbaa !6
  %1668 = add nsw i32 %1667, -1
  %1669 = icmp slt i32 %1666, %1668
  br i1 %1669, label %1689, label %1670

1670:                                             ; preds = %1665
  %1671 = icmp eq i32 %1666, %1668
  br i1 %1671, label %1672, label %1705

1672:                                             ; preds = %1670
  store i32 0, ptr %4, align 4, !tbaa !6
  %1673 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1673, ptr %6, align 4, !tbaa !6
  br i1 %1578, label %1712, label %1674

1674:                                             ; preds = %1672, %1699
  %1675 = phi i64 [ %1703, %1699 ], [ 1, %1672 ]
  %1676 = getelementptr inbounds i32, ptr %4, i64 %1675
  %1677 = load i32, ptr %1676, align 4, !tbaa !6
  %1678 = getelementptr inbounds i32, ptr %12, i64 %1675
  %1679 = load i32, ptr %1678, align 4, !tbaa !6
  %1680 = add nsw i32 %1679, -1
  %1681 = icmp slt i32 %1677, %1680
  br i1 %1681, label %1682, label %1697

1682:                                             ; preds = %1674
  br i1 %1669, label %1689, label %1683

1683:                                             ; preds = %1682
  %1684 = getelementptr inbounds i32, ptr %7, i64 %1675
  %1685 = load i32, ptr %1684, align 4, !tbaa !6
  %1686 = getelementptr inbounds i32, ptr %6, i64 %1675
  %1687 = load i32, ptr %1686, align 4, !tbaa !6
  %1688 = add nsw i32 %1687, %1685
  store i32 %1688, ptr %1686, align 4, !tbaa !6
  br label %1707

1689:                                             ; preds = %1665, %1682
  %1690 = phi i32 [ %1677, %1682 ], [ %1666, %1665 ]
  %1691 = phi ptr [ %1676, %1682 ], [ %4, %1665 ]
  %1692 = phi i64 [ %1675, %1682 ], [ 0, %1665 ]
  %1693 = add nsw i32 %1690, 1
  store i32 %1693, ptr %1691, align 4, !tbaa !6
  %1694 = getelementptr inbounds i32, ptr %7, i64 %1692
  %1695 = load i32, ptr %1694, align 4, !tbaa !6
  %1696 = getelementptr inbounds i32, ptr %6, i64 %1692
  br label %1707

1697:                                             ; preds = %1674
  %1698 = icmp eq i32 %1677, %1680
  br i1 %1698, label %1699, label %1705

1699:                                             ; preds = %1697
  store i32 0, ptr %1676, align 4, !tbaa !6
  %1700 = getelementptr inbounds i32, ptr %8, i64 %1675
  %1701 = load i32, ptr %1700, align 4, !tbaa !6
  %1702 = getelementptr inbounds i32, ptr %6, i64 %1675
  store i32 %1701, ptr %1702, align 4, !tbaa !6
  %1703 = add nuw nsw i64 %1675, 1
  %1704 = icmp eq i64 %1703, %1576
  br i1 %1704, label %1712, label %1674, !llvm.loop !438

1705:                                             ; preds = %1670, %1697
  %1706 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 559, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3093

1707:                                             ; preds = %1683, %1689
  %1708 = phi ptr [ %1696, %1689 ], [ %1676, %1683 ]
  %1709 = phi i32 [ %1695, %1689 ], [ 1, %1683 ]
  %1710 = load i32, ptr %1708, align 4, !tbaa !6
  %1711 = add nsw i32 %1710, %1709
  store i32 %1711, ptr %1708, align 4, !tbaa !6
  br label %1712

1712:                                             ; preds = %1699, %1707, %1672, %1661
  %1713 = icmp eq i32 %1664, %5
  br i1 %1713, label %3088, label %1579, !llvm.loop !439

1714:                                             ; preds = %1562, %1852
  %1715 = phi double [ %1246, %1562 ], [ %1800, %1852 ]
  %1716 = phi i32 [ 0, %1562 ], [ %1801, %1852 ]
  %1717 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1563, label %1718, label %1787

1718:                                             ; preds = %1714, %1777
  %1719 = phi i32 [ %1786, %1777 ], [ 0, %1714 ]
  %1720 = phi i64 [ %1728, %1777 ], [ %1567, %1714 ]
  %1721 = phi i64 [ %1785, %1777 ], [ %1566, %1714 ]
  %1722 = phi i32 [ %1783, %1777 ], [ %1717, %1714 ]
  %1723 = sub i32 %1565, %1719
  %1724 = tail call i32 @llvm.smin.i32(i32 %1723, i32 0)
  %1725 = sub i32 %1723, %1724
  %1726 = zext i32 %1725 to i64
  %1727 = add nuw nsw i64 %1726, 1
  %1728 = add nsw i64 %1720, -1
  %1729 = icmp ult i32 %1725, 31
  br i1 %1729, label %1765, label %1730

1730:                                             ; preds = %1718
  %1731 = and i64 %1727, 8589934560
  %1732 = sub i64 %1721, %1731
  br label %1733

1733:                                             ; preds = %1733, %1730
  %1734 = phi i64 [ 0, %1730 ], [ %1757, %1733 ]
  %1735 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1730 ], [ %1753, %1733 ]
  %1736 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1730 ], [ %1754, %1733 ]
  %1737 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1730 ], [ %1755, %1733 ]
  %1738 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1730 ], [ %1756, %1733 ]
  %1739 = sub i64 %1721, %1734
  %1740 = getelementptr inbounds i32, ptr %11, i64 %1739
  %1741 = getelementptr inbounds i32, ptr %1740, i64 -7
  %1742 = load <8 x i32>, ptr %1741, align 4, !tbaa !6
  %1743 = shufflevector <8 x i32> %1742, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1744 = getelementptr inbounds i32, ptr %1740, i64 -15
  %1745 = load <8 x i32>, ptr %1744, align 4, !tbaa !6
  %1746 = shufflevector <8 x i32> %1745, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1747 = getelementptr inbounds i32, ptr %1740, i64 -23
  %1748 = load <8 x i32>, ptr %1747, align 4, !tbaa !6
  %1749 = shufflevector <8 x i32> %1748, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1750 = getelementptr inbounds i32, ptr %1740, i64 -31
  %1751 = load <8 x i32>, ptr %1750, align 4, !tbaa !6
  %1752 = shufflevector <8 x i32> %1751, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1753 = mul <8 x i32> %1743, %1735
  %1754 = mul <8 x i32> %1746, %1736
  %1755 = mul <8 x i32> %1749, %1737
  %1756 = mul <8 x i32> %1752, %1738
  %1757 = add nuw i64 %1734, 32
  %1758 = icmp eq i64 %1757, %1731
  br i1 %1758, label %1759, label %1733, !llvm.loop !440

1759:                                             ; preds = %1733
  %1760 = mul <8 x i32> %1754, %1753
  %1761 = mul <8 x i32> %1755, %1760
  %1762 = mul <8 x i32> %1756, %1761
  %1763 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1762)
  %1764 = icmp eq i64 %1727, %1731
  br i1 %1764, label %1777, label %1765

1765:                                             ; preds = %1718, %1759
  %1766 = phi i64 [ %1721, %1718 ], [ %1732, %1759 ]
  %1767 = phi i32 [ 1, %1718 ], [ %1763, %1759 ]
  br label %1768

1768:                                             ; preds = %1765, %1768
  %1769 = phi i64 [ %1774, %1768 ], [ %1766, %1765 ]
  %1770 = phi i32 [ %1773, %1768 ], [ %1767, %1765 ]
  %1771 = getelementptr inbounds i32, ptr %11, i64 %1769
  %1772 = load i32, ptr %1771, align 4, !tbaa !6
  %1773 = mul nsw i32 %1772, %1770
  %1774 = add nsw i64 %1769, -1
  %1775 = trunc i64 %1769 to i32
  %1776 = icmp sgt i32 %1775, 0
  br i1 %1776, label %1768, label %1777, !llvm.loop !441

1777:                                             ; preds = %1768, %1759
  %1778 = phi i32 [ %1763, %1759 ], [ %1773, %1768 ]
  %1779 = and i64 %1728, 4294967295
  %1780 = getelementptr inbounds i32, ptr %6, i64 %1779
  %1781 = load i32, ptr %1780, align 4, !tbaa !6
  %1782 = mul nsw i32 %1781, %1778
  %1783 = add nsw i32 %1782, %1722
  %1784 = icmp sgt i64 %1720, 2
  %1785 = add nsw i64 %1721, -1
  %1786 = add i32 %1719, 1
  br i1 %1784, label %1718, label %1787, !llvm.loop !442

1787:                                             ; preds = %1777, %1714
  %1788 = phi i32 [ %1717, %1714 ], [ %1783, %1777 ]
  %1789 = icmp slt i32 %1788, %5
  br i1 %1789, label %1792, label %1790

1790:                                             ; preds = %1787
  %1791 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 559, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3093

1792:                                             ; preds = %1787
  %1793 = sext i32 %1788 to i64
  %1794 = getelementptr inbounds i8, ptr %1242, i64 %1793
  %1795 = load i8, ptr %1794, align 1, !tbaa !12
  %1796 = sitofp i8 %1795 to double
  %1797 = fcmp fast olt double %1715, %1796
  br i1 %1797, label %1798, label %1799

1798:                                             ; preds = %1792
  store double %1796, ptr %1244, align 8, !tbaa !19
  br label %1799

1799:                                             ; preds = %1798, %1792
  %1800 = phi double [ %1796, %1798 ], [ %1715, %1792 ]
  %1801 = add nuw nsw i32 %1716, 1
  br i1 %1564, label %1802, label %1852

1802:                                             ; preds = %1799
  %1803 = load i32, ptr %4, align 4, !tbaa !6
  %1804 = load i32, ptr %12, align 4, !tbaa !6
  %1805 = add nsw i32 %1804, -1
  %1806 = icmp slt i32 %1803, %1805
  br i1 %1806, label %1829, label %1807

1807:                                             ; preds = %1802
  %1808 = icmp eq i32 %1803, %1805
  br i1 %1808, label %1809, label %1845

1809:                                             ; preds = %1807
  store i32 0, ptr %4, align 4, !tbaa !6
  %1810 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1810, ptr %6, align 4, !tbaa !6
  br i1 %1569, label %1852, label %1811

1811:                                             ; preds = %1809, %1839
  %1812 = phi i64 [ %1843, %1839 ], [ 1, %1809 ]
  %1813 = getelementptr inbounds i32, ptr %4, i64 %1812
  %1814 = load i32, ptr %1813, align 4, !tbaa !6
  %1815 = getelementptr inbounds i32, ptr %12, i64 %1812
  %1816 = load i32, ptr %1815, align 4, !tbaa !6
  %1817 = add nsw i32 %1816, -1
  %1818 = icmp slt i32 %1814, %1817
  br i1 %1818, label %1819, label %1837

1819:                                             ; preds = %1811
  br i1 %1806, label %1829, label %1820

1820:                                             ; preds = %1819
  %1821 = shl i64 %1812, 32
  %1822 = add i64 %1821, -4294967296
  %1823 = ashr exact i64 %1822, 32
  %1824 = getelementptr inbounds i32, ptr %7, i64 %1823
  %1825 = load i32, ptr %1824, align 4, !tbaa !6
  %1826 = getelementptr inbounds i32, ptr %6, i64 %1812
  %1827 = load i32, ptr %1826, align 4, !tbaa !6
  %1828 = add nsw i32 %1827, %1825
  store i32 %1828, ptr %1826, align 4, !tbaa !6
  br label %1847

1829:                                             ; preds = %1802, %1819
  %1830 = phi i32 [ %1814, %1819 ], [ %1803, %1802 ]
  %1831 = phi ptr [ %1813, %1819 ], [ %4, %1802 ]
  %1832 = phi i64 [ %1812, %1819 ], [ 0, %1802 ]
  %1833 = add nsw i32 %1830, 1
  store i32 %1833, ptr %1831, align 4, !tbaa !6
  %1834 = getelementptr inbounds i32, ptr %7, i64 %1832
  %1835 = load i32, ptr %1834, align 4, !tbaa !6
  %1836 = getelementptr inbounds i32, ptr %6, i64 %1832
  br label %1847

1837:                                             ; preds = %1811
  %1838 = icmp eq i32 %1814, %1817
  br i1 %1838, label %1839, label %1845

1839:                                             ; preds = %1837
  store i32 0, ptr %1813, align 4, !tbaa !6
  %1840 = getelementptr inbounds i32, ptr %8, i64 %1812
  %1841 = load i32, ptr %1840, align 4, !tbaa !6
  %1842 = getelementptr inbounds i32, ptr %6, i64 %1812
  store i32 %1841, ptr %1842, align 4, !tbaa !6
  %1843 = add nuw nsw i64 %1812, 1
  %1844 = icmp eq i64 %1843, %1567
  br i1 %1844, label %1852, label %1811, !llvm.loop !443

1845:                                             ; preds = %1807, %1837
  %1846 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 559, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3093

1847:                                             ; preds = %1820, %1829
  %1848 = phi ptr [ %1836, %1829 ], [ %1813, %1820 ]
  %1849 = phi i32 [ %1835, %1829 ], [ 1, %1820 ]
  %1850 = load i32, ptr %1848, align 4, !tbaa !6
  %1851 = add nsw i32 %1850, %1849
  store i32 %1851, ptr %1848, align 4, !tbaa !6
  br label %1852

1852:                                             ; preds = %1839, %1847, %1809, %1799
  %1853 = icmp eq i32 %1801, %5
  br i1 %1853, label %3088, label %1714, !llvm.loop !444

1854:                                             ; preds = %1253
  %1855 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 559, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3088

1856:                                             ; preds = %18
  %1857 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1858 = load ptr, ptr %1857, align 8, !tbaa !10
  %1859 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1860 = load ptr, ptr %1859, align 8, !tbaa !10
  %1861 = load i8, ptr %1858, align 1, !tbaa !12
  %1862 = sitofp i8 %1861 to float
  store float %1862, ptr %1860, align 4, !tbaa !163
  %1863 = icmp eq i32 %13, 0
  br i1 %1863, label %1864, label %1869

1864:                                             ; preds = %1856
  %1865 = load i8, ptr %1858, align 1, !tbaa !12
  %1866 = sitofp i8 %1865 to float
  %1867 = fcmp fast olt float %1862, %1866
  br i1 %1867, label %1868, label %3088

1868:                                             ; preds = %1864
  store float %1866, ptr %1860, align 4, !tbaa !163
  br label %3088

1869:                                             ; preds = %1856
  switch i32 %1, label %2470 [
    i32 1, label %1870
    i32 0, label %2172
  ]

1870:                                             ; preds = %1869
  %1871 = getelementptr inbounds i32, ptr %3, i64 %19
  %1872 = load i32, ptr %1871, align 4, !tbaa !6
  %1873 = icmp eq i32 %1872, 0
  %1874 = icmp sgt i32 %5, 0
  br i1 %1873, label %1884, label %1875

1875:                                             ; preds = %1870
  br i1 %1874, label %1876, label %3088

1876:                                             ; preds = %1875
  %1877 = icmp sgt i32 %13, 1
  %1878 = icmp sgt i32 %13, 0
  %1879 = add i32 %13, -2
  %1880 = zext i32 %1879 to i64
  %1881 = zext i32 %13 to i64
  %1882 = add nuw i32 %5, 1
  %1883 = icmp eq i32 %13, 1
  br label %2032

1884:                                             ; preds = %1870
  br i1 %1874, label %1885, label %3088

1885:                                             ; preds = %1884
  %1886 = icmp sgt i32 %13, 1
  %1887 = icmp sgt i32 %13, 0
  %1888 = add i32 %13, -2
  %1889 = zext i32 %1888 to i64
  %1890 = zext i32 %13 to i64
  %1891 = add nuw i32 %5, 1
  %1892 = icmp eq i32 %13, 1
  br label %1893

1893:                                             ; preds = %1885, %2030
  %1894 = phi float [ %1862, %1885 ], [ %1980, %2030 ]
  %1895 = phi i32 [ 0, %1885 ], [ %1982, %2030 ]
  %1896 = phi double [ 0.000000e+00, %1885 ], [ %1981, %2030 ]
  %1897 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1886, label %1898, label %1967

1898:                                             ; preds = %1893, %1957
  %1899 = phi i32 [ %1966, %1957 ], [ 0, %1893 ]
  %1900 = phi i64 [ %1908, %1957 ], [ %1890, %1893 ]
  %1901 = phi i64 [ %1965, %1957 ], [ %1889, %1893 ]
  %1902 = phi i32 [ %1963, %1957 ], [ %1897, %1893 ]
  %1903 = sub i32 %1888, %1899
  %1904 = tail call i32 @llvm.smin.i32(i32 %1903, i32 0)
  %1905 = sub i32 %1903, %1904
  %1906 = zext i32 %1905 to i64
  %1907 = add nuw nsw i64 %1906, 1
  %1908 = add nsw i64 %1900, -1
  %1909 = icmp ult i32 %1905, 31
  br i1 %1909, label %1945, label %1910

1910:                                             ; preds = %1898
  %1911 = and i64 %1907, 8589934560
  %1912 = sub i64 %1901, %1911
  br label %1913

1913:                                             ; preds = %1913, %1910
  %1914 = phi i64 [ 0, %1910 ], [ %1937, %1913 ]
  %1915 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1910 ], [ %1933, %1913 ]
  %1916 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1910 ], [ %1934, %1913 ]
  %1917 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1910 ], [ %1935, %1913 ]
  %1918 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1910 ], [ %1936, %1913 ]
  %1919 = sub i64 %1901, %1914
  %1920 = getelementptr inbounds i32, ptr %9, i64 %1919
  %1921 = getelementptr inbounds i32, ptr %1920, i64 -7
  %1922 = load <8 x i32>, ptr %1921, align 4, !tbaa !6
  %1923 = shufflevector <8 x i32> %1922, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1924 = getelementptr inbounds i32, ptr %1920, i64 -15
  %1925 = load <8 x i32>, ptr %1924, align 4, !tbaa !6
  %1926 = shufflevector <8 x i32> %1925, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1927 = getelementptr inbounds i32, ptr %1920, i64 -23
  %1928 = load <8 x i32>, ptr %1927, align 4, !tbaa !6
  %1929 = shufflevector <8 x i32> %1928, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1930 = getelementptr inbounds i32, ptr %1920, i64 -31
  %1931 = load <8 x i32>, ptr %1930, align 4, !tbaa !6
  %1932 = shufflevector <8 x i32> %1931, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1933 = mul <8 x i32> %1923, %1915
  %1934 = mul <8 x i32> %1926, %1916
  %1935 = mul <8 x i32> %1929, %1917
  %1936 = mul <8 x i32> %1932, %1918
  %1937 = add nuw i64 %1914, 32
  %1938 = icmp eq i64 %1937, %1911
  br i1 %1938, label %1939, label %1913, !llvm.loop !445

1939:                                             ; preds = %1913
  %1940 = mul <8 x i32> %1934, %1933
  %1941 = mul <8 x i32> %1935, %1940
  %1942 = mul <8 x i32> %1936, %1941
  %1943 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1942)
  %1944 = icmp eq i64 %1907, %1911
  br i1 %1944, label %1957, label %1945

1945:                                             ; preds = %1898, %1939
  %1946 = phi i64 [ %1901, %1898 ], [ %1912, %1939 ]
  %1947 = phi i32 [ 1, %1898 ], [ %1943, %1939 ]
  br label %1948

1948:                                             ; preds = %1945, %1948
  %1949 = phi i64 [ %1954, %1948 ], [ %1946, %1945 ]
  %1950 = phi i32 [ %1953, %1948 ], [ %1947, %1945 ]
  %1951 = getelementptr inbounds i32, ptr %9, i64 %1949
  %1952 = load i32, ptr %1951, align 4, !tbaa !6
  %1953 = mul nsw i32 %1952, %1950
  %1954 = add nsw i64 %1949, -1
  %1955 = trunc i64 %1949 to i32
  %1956 = icmp sgt i32 %1955, 0
  br i1 %1956, label %1948, label %1957, !llvm.loop !446

1957:                                             ; preds = %1948, %1939
  %1958 = phi i32 [ %1943, %1939 ], [ %1953, %1948 ]
  %1959 = and i64 %1908, 4294967295
  %1960 = getelementptr inbounds i32, ptr %6, i64 %1959
  %1961 = load i32, ptr %1960, align 4, !tbaa !6
  %1962 = mul nsw i32 %1961, %1958
  %1963 = add nsw i32 %1962, %1902
  %1964 = icmp sgt i64 %1900, 2
  %1965 = add nsw i64 %1901, -1
  %1966 = add i32 %1899, 1
  br i1 %1964, label %1898, label %1967, !llvm.loop !447

1967:                                             ; preds = %1957, %1893
  %1968 = phi i32 [ %1897, %1893 ], [ %1963, %1957 ]
  %1969 = sext i32 %1968 to i64
  %1970 = getelementptr inbounds double, ptr %2, i64 %1969
  %1971 = load double, ptr %1970, align 8, !tbaa !19
  %1972 = getelementptr inbounds i8, ptr %1858, i64 %1969
  %1973 = load i8, ptr %1972, align 1, !tbaa !12
  %1974 = sitofp i8 %1973 to float
  %1975 = fcmp fast one double %1971, 0.000000e+00
  %1976 = fcmp fast olt float %1894, %1974
  %1977 = select i1 %1975, i1 %1976, i1 false
  br i1 %1977, label %1978, label %1979

1978:                                             ; preds = %1967
  store float %1974, ptr %1860, align 4, !tbaa !163
  br label %1979

1979:                                             ; preds = %1978, %1967
  %1980 = phi float [ %1974, %1978 ], [ %1894, %1967 ]
  %1981 = fadd fast double %1971, %1896
  %1982 = add nuw nsw i32 %1895, 1
  br i1 %1887, label %1983, label %2030

1983:                                             ; preds = %1979
  %1984 = load i32, ptr %4, align 4, !tbaa !6
  %1985 = load i32, ptr %12, align 4, !tbaa !6
  %1986 = add nsw i32 %1985, -1
  %1987 = icmp slt i32 %1984, %1986
  br i1 %1987, label %2007, label %1988

1988:                                             ; preds = %1983
  %1989 = icmp eq i32 %1984, %1986
  br i1 %1989, label %1990, label %2023

1990:                                             ; preds = %1988
  store i32 0, ptr %4, align 4, !tbaa !6
  %1991 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1991, ptr %6, align 4, !tbaa !6
  br i1 %1892, label %2030, label %1992

1992:                                             ; preds = %1990, %2017
  %1993 = phi i64 [ %2021, %2017 ], [ 1, %1990 ]
  %1994 = getelementptr inbounds i32, ptr %4, i64 %1993
  %1995 = load i32, ptr %1994, align 4, !tbaa !6
  %1996 = getelementptr inbounds i32, ptr %12, i64 %1993
  %1997 = load i32, ptr %1996, align 4, !tbaa !6
  %1998 = add nsw i32 %1997, -1
  %1999 = icmp slt i32 %1995, %1998
  br i1 %1999, label %2000, label %2015

2000:                                             ; preds = %1992
  br i1 %1987, label %2007, label %2001

2001:                                             ; preds = %2000
  %2002 = getelementptr inbounds i32, ptr %7, i64 %1993
  %2003 = load i32, ptr %2002, align 4, !tbaa !6
  %2004 = getelementptr inbounds i32, ptr %6, i64 %1993
  %2005 = load i32, ptr %2004, align 4, !tbaa !6
  %2006 = add nsw i32 %2005, %2003
  store i32 %2006, ptr %2004, align 4, !tbaa !6
  br label %2025

2007:                                             ; preds = %1983, %2000
  %2008 = phi i32 [ %1995, %2000 ], [ %1984, %1983 ]
  %2009 = phi ptr [ %1994, %2000 ], [ %4, %1983 ]
  %2010 = phi i64 [ %1993, %2000 ], [ 0, %1983 ]
  %2011 = add nsw i32 %2008, 1
  store i32 %2011, ptr %2009, align 4, !tbaa !6
  %2012 = getelementptr inbounds i32, ptr %7, i64 %2010
  %2013 = load i32, ptr %2012, align 4, !tbaa !6
  %2014 = getelementptr inbounds i32, ptr %6, i64 %2010
  br label %2025

2015:                                             ; preds = %1992
  %2016 = icmp eq i32 %1995, %1998
  br i1 %2016, label %2017, label %2023

2017:                                             ; preds = %2015
  store i32 0, ptr %1994, align 4, !tbaa !6
  %2018 = getelementptr inbounds i32, ptr %8, i64 %1993
  %2019 = load i32, ptr %2018, align 4, !tbaa !6
  %2020 = getelementptr inbounds i32, ptr %6, i64 %1993
  store i32 %2019, ptr %2020, align 4, !tbaa !6
  %2021 = add nuw nsw i64 %1993, 1
  %2022 = icmp eq i64 %2021, %1890
  br i1 %2022, label %2030, label %1992, !llvm.loop !448

2023:                                             ; preds = %1988, %2015
  %2024 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 563, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3093

2025:                                             ; preds = %2001, %2007
  %2026 = phi ptr [ %2014, %2007 ], [ %1994, %2001 ]
  %2027 = phi i32 [ %2013, %2007 ], [ 1, %2001 ]
  %2028 = load i32, ptr %2026, align 4, !tbaa !6
  %2029 = add nsw i32 %2028, %2027
  store i32 %2029, ptr %2026, align 4, !tbaa !6
  br label %2030

2030:                                             ; preds = %2017, %2025, %1990, %1979
  %2031 = icmp eq i32 %1982, %5
  br i1 %2031, label %3088, label %1893, !llvm.loop !449

2032:                                             ; preds = %1876, %2170
  %2033 = phi float [ %1862, %1876 ], [ %2118, %2170 ]
  %2034 = phi i32 [ 0, %1876 ], [ %2119, %2170 ]
  %2035 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1877, label %2036, label %2105

2036:                                             ; preds = %2032, %2095
  %2037 = phi i32 [ %2104, %2095 ], [ 0, %2032 ]
  %2038 = phi i64 [ %2046, %2095 ], [ %1881, %2032 ]
  %2039 = phi i64 [ %2103, %2095 ], [ %1880, %2032 ]
  %2040 = phi i32 [ %2101, %2095 ], [ %2035, %2032 ]
  %2041 = sub i32 %1879, %2037
  %2042 = tail call i32 @llvm.smin.i32(i32 %2041, i32 0)
  %2043 = sub i32 %2041, %2042
  %2044 = zext i32 %2043 to i64
  %2045 = add nuw nsw i64 %2044, 1
  %2046 = add nsw i64 %2038, -1
  %2047 = icmp ult i32 %2043, 31
  br i1 %2047, label %2083, label %2048

2048:                                             ; preds = %2036
  %2049 = and i64 %2045, 8589934560
  %2050 = sub i64 %2039, %2049
  br label %2051

2051:                                             ; preds = %2051, %2048
  %2052 = phi i64 [ 0, %2048 ], [ %2075, %2051 ]
  %2053 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2048 ], [ %2071, %2051 ]
  %2054 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2048 ], [ %2072, %2051 ]
  %2055 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2048 ], [ %2073, %2051 ]
  %2056 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2048 ], [ %2074, %2051 ]
  %2057 = sub i64 %2039, %2052
  %2058 = getelementptr inbounds i32, ptr %11, i64 %2057
  %2059 = getelementptr inbounds i32, ptr %2058, i64 -7
  %2060 = load <8 x i32>, ptr %2059, align 4, !tbaa !6
  %2061 = shufflevector <8 x i32> %2060, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2062 = getelementptr inbounds i32, ptr %2058, i64 -15
  %2063 = load <8 x i32>, ptr %2062, align 4, !tbaa !6
  %2064 = shufflevector <8 x i32> %2063, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2065 = getelementptr inbounds i32, ptr %2058, i64 -23
  %2066 = load <8 x i32>, ptr %2065, align 4, !tbaa !6
  %2067 = shufflevector <8 x i32> %2066, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2068 = getelementptr inbounds i32, ptr %2058, i64 -31
  %2069 = load <8 x i32>, ptr %2068, align 4, !tbaa !6
  %2070 = shufflevector <8 x i32> %2069, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2071 = mul <8 x i32> %2061, %2053
  %2072 = mul <8 x i32> %2064, %2054
  %2073 = mul <8 x i32> %2067, %2055
  %2074 = mul <8 x i32> %2070, %2056
  %2075 = add nuw i64 %2052, 32
  %2076 = icmp eq i64 %2075, %2049
  br i1 %2076, label %2077, label %2051, !llvm.loop !450

2077:                                             ; preds = %2051
  %2078 = mul <8 x i32> %2072, %2071
  %2079 = mul <8 x i32> %2073, %2078
  %2080 = mul <8 x i32> %2074, %2079
  %2081 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2080)
  %2082 = icmp eq i64 %2045, %2049
  br i1 %2082, label %2095, label %2083

2083:                                             ; preds = %2036, %2077
  %2084 = phi i64 [ %2039, %2036 ], [ %2050, %2077 ]
  %2085 = phi i32 [ 1, %2036 ], [ %2081, %2077 ]
  br label %2086

2086:                                             ; preds = %2083, %2086
  %2087 = phi i64 [ %2092, %2086 ], [ %2084, %2083 ]
  %2088 = phi i32 [ %2091, %2086 ], [ %2085, %2083 ]
  %2089 = getelementptr inbounds i32, ptr %11, i64 %2087
  %2090 = load i32, ptr %2089, align 4, !tbaa !6
  %2091 = mul nsw i32 %2090, %2088
  %2092 = add nsw i64 %2087, -1
  %2093 = trunc i64 %2087 to i32
  %2094 = icmp sgt i32 %2093, 0
  br i1 %2094, label %2086, label %2095, !llvm.loop !451

2095:                                             ; preds = %2086, %2077
  %2096 = phi i32 [ %2081, %2077 ], [ %2091, %2086 ]
  %2097 = and i64 %2046, 4294967295
  %2098 = getelementptr inbounds i32, ptr %6, i64 %2097
  %2099 = load i32, ptr %2098, align 4, !tbaa !6
  %2100 = mul nsw i32 %2099, %2096
  %2101 = add nsw i32 %2100, %2040
  %2102 = icmp sgt i64 %2038, 2
  %2103 = add nsw i64 %2039, -1
  %2104 = add i32 %2037, 1
  br i1 %2102, label %2036, label %2105, !llvm.loop !452

2105:                                             ; preds = %2095, %2032
  %2106 = phi i32 [ %2035, %2032 ], [ %2101, %2095 ]
  %2107 = icmp slt i32 %2106, %5
  br i1 %2107, label %2110, label %2108

2108:                                             ; preds = %2105
  %2109 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 563, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3093

2110:                                             ; preds = %2105
  %2111 = sext i32 %2106 to i64
  %2112 = getelementptr inbounds i8, ptr %1858, i64 %2111
  %2113 = load i8, ptr %2112, align 1, !tbaa !12
  %2114 = sitofp i8 %2113 to float
  %2115 = fcmp fast olt float %2033, %2114
  br i1 %2115, label %2116, label %2117

2116:                                             ; preds = %2110
  store float %2114, ptr %1860, align 4, !tbaa !163
  br label %2117

2117:                                             ; preds = %2110, %2116
  %2118 = phi float [ %2033, %2110 ], [ %2114, %2116 ]
  %2119 = add nuw nsw i32 %2034, 1
  br i1 %1878, label %2120, label %2170

2120:                                             ; preds = %2117
  %2121 = load i32, ptr %4, align 4, !tbaa !6
  %2122 = load i32, ptr %12, align 4, !tbaa !6
  %2123 = add nsw i32 %2122, -1
  %2124 = icmp slt i32 %2121, %2123
  br i1 %2124, label %2147, label %2125

2125:                                             ; preds = %2120
  %2126 = icmp eq i32 %2121, %2123
  br i1 %2126, label %2127, label %2163

2127:                                             ; preds = %2125
  store i32 0, ptr %4, align 4, !tbaa !6
  %2128 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2128, ptr %6, align 4, !tbaa !6
  br i1 %1883, label %2170, label %2129

2129:                                             ; preds = %2127, %2157
  %2130 = phi i64 [ %2161, %2157 ], [ 1, %2127 ]
  %2131 = getelementptr inbounds i32, ptr %4, i64 %2130
  %2132 = load i32, ptr %2131, align 4, !tbaa !6
  %2133 = getelementptr inbounds i32, ptr %12, i64 %2130
  %2134 = load i32, ptr %2133, align 4, !tbaa !6
  %2135 = add nsw i32 %2134, -1
  %2136 = icmp slt i32 %2132, %2135
  br i1 %2136, label %2137, label %2155

2137:                                             ; preds = %2129
  br i1 %2124, label %2147, label %2138

2138:                                             ; preds = %2137
  %2139 = shl i64 %2130, 32
  %2140 = add i64 %2139, -4294967296
  %2141 = ashr exact i64 %2140, 32
  %2142 = getelementptr inbounds i32, ptr %7, i64 %2141
  %2143 = load i32, ptr %2142, align 4, !tbaa !6
  %2144 = getelementptr inbounds i32, ptr %6, i64 %2130
  %2145 = load i32, ptr %2144, align 4, !tbaa !6
  %2146 = add nsw i32 %2145, %2143
  store i32 %2146, ptr %2144, align 4, !tbaa !6
  br label %2165

2147:                                             ; preds = %2120, %2137
  %2148 = phi i32 [ %2132, %2137 ], [ %2121, %2120 ]
  %2149 = phi ptr [ %2131, %2137 ], [ %4, %2120 ]
  %2150 = phi i64 [ %2130, %2137 ], [ 0, %2120 ]
  %2151 = add nsw i32 %2148, 1
  store i32 %2151, ptr %2149, align 4, !tbaa !6
  %2152 = getelementptr inbounds i32, ptr %7, i64 %2150
  %2153 = load i32, ptr %2152, align 4, !tbaa !6
  %2154 = getelementptr inbounds i32, ptr %6, i64 %2150
  br label %2165

2155:                                             ; preds = %2129
  %2156 = icmp eq i32 %2132, %2135
  br i1 %2156, label %2157, label %2163

2157:                                             ; preds = %2155
  store i32 0, ptr %2131, align 4, !tbaa !6
  %2158 = getelementptr inbounds i32, ptr %8, i64 %2130
  %2159 = load i32, ptr %2158, align 4, !tbaa !6
  %2160 = getelementptr inbounds i32, ptr %6, i64 %2130
  store i32 %2159, ptr %2160, align 4, !tbaa !6
  %2161 = add nuw nsw i64 %2130, 1
  %2162 = icmp eq i64 %2161, %1881
  br i1 %2162, label %2170, label %2129, !llvm.loop !453

2163:                                             ; preds = %2125, %2155
  %2164 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 563, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3093

2165:                                             ; preds = %2138, %2147
  %2166 = phi ptr [ %2154, %2147 ], [ %2131, %2138 ]
  %2167 = phi i32 [ %2153, %2147 ], [ 1, %2138 ]
  %2168 = load i32, ptr %2166, align 4, !tbaa !6
  %2169 = add nsw i32 %2168, %2167
  store i32 %2169, ptr %2166, align 4, !tbaa !6
  br label %2170

2170:                                             ; preds = %2157, %2165, %2127, %2117
  %2171 = icmp eq i32 %2119, %5
  br i1 %2171, label %3088, label %2032, !llvm.loop !454

2172:                                             ; preds = %1869
  %2173 = getelementptr inbounds i32, ptr %3, i64 %19
  %2174 = load i32, ptr %2173, align 4, !tbaa !6
  %2175 = icmp eq i32 %2174, 0
  %2176 = icmp sgt i32 %5, 0
  br i1 %2175, label %2186, label %2177

2177:                                             ; preds = %2172
  br i1 %2176, label %2178, label %3088

2178:                                             ; preds = %2177
  %2179 = icmp sgt i32 %13, 1
  %2180 = icmp sgt i32 %13, 0
  %2181 = add i32 %13, -2
  %2182 = zext i32 %2181 to i64
  %2183 = zext i32 %13 to i64
  %2184 = add nuw i32 %5, 1
  %2185 = icmp eq i32 %13, 1
  br label %2330

2186:                                             ; preds = %2172
  br i1 %2176, label %2187, label %3088

2187:                                             ; preds = %2186
  %2188 = icmp sgt i32 %13, 1
  %2189 = icmp sgt i32 %13, 0
  %2190 = add i32 %13, -2
  %2191 = zext i32 %2190 to i64
  %2192 = zext i32 %13 to i64
  %2193 = add nuw i32 %5, 1
  %2194 = icmp eq i32 %13, 1
  br label %2195

2195:                                             ; preds = %2187, %2328
  %2196 = phi float [ %1862, %2187 ], [ %2278, %2328 ]
  %2197 = phi i32 [ 0, %2187 ], [ %2280, %2328 ]
  %2198 = phi double [ 0.000000e+00, %2187 ], [ %2279, %2328 ]
  %2199 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2188, label %2200, label %2269

2200:                                             ; preds = %2195, %2259
  %2201 = phi i32 [ %2268, %2259 ], [ 0, %2195 ]
  %2202 = phi i64 [ %2210, %2259 ], [ %2192, %2195 ]
  %2203 = phi i64 [ %2267, %2259 ], [ %2191, %2195 ]
  %2204 = phi i32 [ %2265, %2259 ], [ %2199, %2195 ]
  %2205 = sub i32 %2190, %2201
  %2206 = tail call i32 @llvm.smin.i32(i32 %2205, i32 0)
  %2207 = sub i32 %2205, %2206
  %2208 = zext i32 %2207 to i64
  %2209 = add nuw nsw i64 %2208, 1
  %2210 = add nsw i64 %2202, -1
  %2211 = icmp ult i32 %2207, 31
  br i1 %2211, label %2247, label %2212

2212:                                             ; preds = %2200
  %2213 = and i64 %2209, 8589934560
  %2214 = sub i64 %2203, %2213
  br label %2215

2215:                                             ; preds = %2215, %2212
  %2216 = phi i64 [ 0, %2212 ], [ %2239, %2215 ]
  %2217 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2212 ], [ %2235, %2215 ]
  %2218 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2212 ], [ %2236, %2215 ]
  %2219 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2212 ], [ %2237, %2215 ]
  %2220 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2212 ], [ %2238, %2215 ]
  %2221 = sub i64 %2203, %2216
  %2222 = getelementptr inbounds i32, ptr %9, i64 %2221
  %2223 = getelementptr inbounds i32, ptr %2222, i64 -7
  %2224 = load <8 x i32>, ptr %2223, align 4, !tbaa !6
  %2225 = shufflevector <8 x i32> %2224, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2226 = getelementptr inbounds i32, ptr %2222, i64 -15
  %2227 = load <8 x i32>, ptr %2226, align 4, !tbaa !6
  %2228 = shufflevector <8 x i32> %2227, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2229 = getelementptr inbounds i32, ptr %2222, i64 -23
  %2230 = load <8 x i32>, ptr %2229, align 4, !tbaa !6
  %2231 = shufflevector <8 x i32> %2230, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2232 = getelementptr inbounds i32, ptr %2222, i64 -31
  %2233 = load <8 x i32>, ptr %2232, align 4, !tbaa !6
  %2234 = shufflevector <8 x i32> %2233, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2235 = mul <8 x i32> %2225, %2217
  %2236 = mul <8 x i32> %2228, %2218
  %2237 = mul <8 x i32> %2231, %2219
  %2238 = mul <8 x i32> %2234, %2220
  %2239 = add nuw i64 %2216, 32
  %2240 = icmp eq i64 %2239, %2213
  br i1 %2240, label %2241, label %2215, !llvm.loop !455

2241:                                             ; preds = %2215
  %2242 = mul <8 x i32> %2236, %2235
  %2243 = mul <8 x i32> %2237, %2242
  %2244 = mul <8 x i32> %2238, %2243
  %2245 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2244)
  %2246 = icmp eq i64 %2209, %2213
  br i1 %2246, label %2259, label %2247

2247:                                             ; preds = %2200, %2241
  %2248 = phi i64 [ %2203, %2200 ], [ %2214, %2241 ]
  %2249 = phi i32 [ 1, %2200 ], [ %2245, %2241 ]
  br label %2250

2250:                                             ; preds = %2247, %2250
  %2251 = phi i64 [ %2256, %2250 ], [ %2248, %2247 ]
  %2252 = phi i32 [ %2255, %2250 ], [ %2249, %2247 ]
  %2253 = getelementptr inbounds i32, ptr %9, i64 %2251
  %2254 = load i32, ptr %2253, align 4, !tbaa !6
  %2255 = mul nsw i32 %2254, %2252
  %2256 = add nsw i64 %2251, -1
  %2257 = trunc i64 %2251 to i32
  %2258 = icmp sgt i32 %2257, 0
  br i1 %2258, label %2250, label %2259, !llvm.loop !456

2259:                                             ; preds = %2250, %2241
  %2260 = phi i32 [ %2245, %2241 ], [ %2255, %2250 ]
  %2261 = and i64 %2210, 4294967295
  %2262 = getelementptr inbounds i32, ptr %6, i64 %2261
  %2263 = load i32, ptr %2262, align 4, !tbaa !6
  %2264 = mul nsw i32 %2263, %2260
  %2265 = add nsw i32 %2264, %2204
  %2266 = icmp sgt i64 %2202, 2
  %2267 = add nsw i64 %2203, -1
  %2268 = add i32 %2201, 1
  br i1 %2266, label %2200, label %2269, !llvm.loop !457

2269:                                             ; preds = %2259, %2195
  %2270 = phi i32 [ %2199, %2195 ], [ %2265, %2259 ]
  %2271 = sext i32 %2270 to i64
  %2272 = getelementptr inbounds i8, ptr %1858, i64 %2271
  %2273 = load i8, ptr %2272, align 1, !tbaa !12
  %2274 = sitofp i8 %2273 to float
  %2275 = fcmp fast olt float %2196, %2274
  br i1 %2275, label %2276, label %2277

2276:                                             ; preds = %2269
  store float %2274, ptr %1860, align 4, !tbaa !163
  br label %2277

2277:                                             ; preds = %2276, %2269
  %2278 = phi float [ %2274, %2276 ], [ %2196, %2269 ]
  %2279 = fadd fast double %2198, 1.000000e+00
  %2280 = add nuw nsw i32 %2197, 1
  br i1 %2189, label %2281, label %2328

2281:                                             ; preds = %2277
  %2282 = load i32, ptr %4, align 4, !tbaa !6
  %2283 = load i32, ptr %12, align 4, !tbaa !6
  %2284 = add nsw i32 %2283, -1
  %2285 = icmp slt i32 %2282, %2284
  br i1 %2285, label %2305, label %2286

2286:                                             ; preds = %2281
  %2287 = icmp eq i32 %2282, %2284
  br i1 %2287, label %2288, label %2321

2288:                                             ; preds = %2286
  store i32 0, ptr %4, align 4, !tbaa !6
  %2289 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2289, ptr %6, align 4, !tbaa !6
  br i1 %2194, label %2328, label %2290

2290:                                             ; preds = %2288, %2315
  %2291 = phi i64 [ %2319, %2315 ], [ 1, %2288 ]
  %2292 = getelementptr inbounds i32, ptr %4, i64 %2291
  %2293 = load i32, ptr %2292, align 4, !tbaa !6
  %2294 = getelementptr inbounds i32, ptr %12, i64 %2291
  %2295 = load i32, ptr %2294, align 4, !tbaa !6
  %2296 = add nsw i32 %2295, -1
  %2297 = icmp slt i32 %2293, %2296
  br i1 %2297, label %2298, label %2313

2298:                                             ; preds = %2290
  br i1 %2285, label %2305, label %2299

2299:                                             ; preds = %2298
  %2300 = getelementptr inbounds i32, ptr %7, i64 %2291
  %2301 = load i32, ptr %2300, align 4, !tbaa !6
  %2302 = getelementptr inbounds i32, ptr %6, i64 %2291
  %2303 = load i32, ptr %2302, align 4, !tbaa !6
  %2304 = add nsw i32 %2303, %2301
  store i32 %2304, ptr %2302, align 4, !tbaa !6
  br label %2323

2305:                                             ; preds = %2281, %2298
  %2306 = phi i32 [ %2293, %2298 ], [ %2282, %2281 ]
  %2307 = phi ptr [ %2292, %2298 ], [ %4, %2281 ]
  %2308 = phi i64 [ %2291, %2298 ], [ 0, %2281 ]
  %2309 = add nsw i32 %2306, 1
  store i32 %2309, ptr %2307, align 4, !tbaa !6
  %2310 = getelementptr inbounds i32, ptr %7, i64 %2308
  %2311 = load i32, ptr %2310, align 4, !tbaa !6
  %2312 = getelementptr inbounds i32, ptr %6, i64 %2308
  br label %2323

2313:                                             ; preds = %2290
  %2314 = icmp eq i32 %2293, %2296
  br i1 %2314, label %2315, label %2321

2315:                                             ; preds = %2313
  store i32 0, ptr %2292, align 4, !tbaa !6
  %2316 = getelementptr inbounds i32, ptr %8, i64 %2291
  %2317 = load i32, ptr %2316, align 4, !tbaa !6
  %2318 = getelementptr inbounds i32, ptr %6, i64 %2291
  store i32 %2317, ptr %2318, align 4, !tbaa !6
  %2319 = add nuw nsw i64 %2291, 1
  %2320 = icmp eq i64 %2319, %2192
  br i1 %2320, label %2328, label %2290, !llvm.loop !458

2321:                                             ; preds = %2286, %2313
  %2322 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 563, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3093

2323:                                             ; preds = %2299, %2305
  %2324 = phi ptr [ %2312, %2305 ], [ %2292, %2299 ]
  %2325 = phi i32 [ %2311, %2305 ], [ 1, %2299 ]
  %2326 = load i32, ptr %2324, align 4, !tbaa !6
  %2327 = add nsw i32 %2326, %2325
  store i32 %2327, ptr %2324, align 4, !tbaa !6
  br label %2328

2328:                                             ; preds = %2315, %2323, %2288, %2277
  %2329 = icmp eq i32 %2280, %5
  br i1 %2329, label %3088, label %2195, !llvm.loop !459

2330:                                             ; preds = %2178, %2468
  %2331 = phi float [ %1862, %2178 ], [ %2416, %2468 ]
  %2332 = phi i32 [ 0, %2178 ], [ %2417, %2468 ]
  %2333 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2179, label %2334, label %2403

2334:                                             ; preds = %2330, %2393
  %2335 = phi i32 [ %2402, %2393 ], [ 0, %2330 ]
  %2336 = phi i64 [ %2344, %2393 ], [ %2183, %2330 ]
  %2337 = phi i64 [ %2401, %2393 ], [ %2182, %2330 ]
  %2338 = phi i32 [ %2399, %2393 ], [ %2333, %2330 ]
  %2339 = sub i32 %2181, %2335
  %2340 = tail call i32 @llvm.smin.i32(i32 %2339, i32 0)
  %2341 = sub i32 %2339, %2340
  %2342 = zext i32 %2341 to i64
  %2343 = add nuw nsw i64 %2342, 1
  %2344 = add nsw i64 %2336, -1
  %2345 = icmp ult i32 %2341, 31
  br i1 %2345, label %2381, label %2346

2346:                                             ; preds = %2334
  %2347 = and i64 %2343, 8589934560
  %2348 = sub i64 %2337, %2347
  br label %2349

2349:                                             ; preds = %2349, %2346
  %2350 = phi i64 [ 0, %2346 ], [ %2373, %2349 ]
  %2351 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2346 ], [ %2369, %2349 ]
  %2352 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2346 ], [ %2370, %2349 ]
  %2353 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2346 ], [ %2371, %2349 ]
  %2354 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2346 ], [ %2372, %2349 ]
  %2355 = sub i64 %2337, %2350
  %2356 = getelementptr inbounds i32, ptr %11, i64 %2355
  %2357 = getelementptr inbounds i32, ptr %2356, i64 -7
  %2358 = load <8 x i32>, ptr %2357, align 4, !tbaa !6
  %2359 = shufflevector <8 x i32> %2358, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2360 = getelementptr inbounds i32, ptr %2356, i64 -15
  %2361 = load <8 x i32>, ptr %2360, align 4, !tbaa !6
  %2362 = shufflevector <8 x i32> %2361, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2363 = getelementptr inbounds i32, ptr %2356, i64 -23
  %2364 = load <8 x i32>, ptr %2363, align 4, !tbaa !6
  %2365 = shufflevector <8 x i32> %2364, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2366 = getelementptr inbounds i32, ptr %2356, i64 -31
  %2367 = load <8 x i32>, ptr %2366, align 4, !tbaa !6
  %2368 = shufflevector <8 x i32> %2367, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2369 = mul <8 x i32> %2359, %2351
  %2370 = mul <8 x i32> %2362, %2352
  %2371 = mul <8 x i32> %2365, %2353
  %2372 = mul <8 x i32> %2368, %2354
  %2373 = add nuw i64 %2350, 32
  %2374 = icmp eq i64 %2373, %2347
  br i1 %2374, label %2375, label %2349, !llvm.loop !460

2375:                                             ; preds = %2349
  %2376 = mul <8 x i32> %2370, %2369
  %2377 = mul <8 x i32> %2371, %2376
  %2378 = mul <8 x i32> %2372, %2377
  %2379 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2378)
  %2380 = icmp eq i64 %2343, %2347
  br i1 %2380, label %2393, label %2381

2381:                                             ; preds = %2334, %2375
  %2382 = phi i64 [ %2337, %2334 ], [ %2348, %2375 ]
  %2383 = phi i32 [ 1, %2334 ], [ %2379, %2375 ]
  br label %2384

2384:                                             ; preds = %2381, %2384
  %2385 = phi i64 [ %2390, %2384 ], [ %2382, %2381 ]
  %2386 = phi i32 [ %2389, %2384 ], [ %2383, %2381 ]
  %2387 = getelementptr inbounds i32, ptr %11, i64 %2385
  %2388 = load i32, ptr %2387, align 4, !tbaa !6
  %2389 = mul nsw i32 %2388, %2386
  %2390 = add nsw i64 %2385, -1
  %2391 = trunc i64 %2385 to i32
  %2392 = icmp sgt i32 %2391, 0
  br i1 %2392, label %2384, label %2393, !llvm.loop !461

2393:                                             ; preds = %2384, %2375
  %2394 = phi i32 [ %2379, %2375 ], [ %2389, %2384 ]
  %2395 = and i64 %2344, 4294967295
  %2396 = getelementptr inbounds i32, ptr %6, i64 %2395
  %2397 = load i32, ptr %2396, align 4, !tbaa !6
  %2398 = mul nsw i32 %2397, %2394
  %2399 = add nsw i32 %2398, %2338
  %2400 = icmp sgt i64 %2336, 2
  %2401 = add nsw i64 %2337, -1
  %2402 = add i32 %2335, 1
  br i1 %2400, label %2334, label %2403, !llvm.loop !462

2403:                                             ; preds = %2393, %2330
  %2404 = phi i32 [ %2333, %2330 ], [ %2399, %2393 ]
  %2405 = icmp slt i32 %2404, %5
  br i1 %2405, label %2408, label %2406

2406:                                             ; preds = %2403
  %2407 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 563, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3093

2408:                                             ; preds = %2403
  %2409 = sext i32 %2404 to i64
  %2410 = getelementptr inbounds i8, ptr %1858, i64 %2409
  %2411 = load i8, ptr %2410, align 1, !tbaa !12
  %2412 = sitofp i8 %2411 to float
  %2413 = fcmp fast olt float %2331, %2412
  br i1 %2413, label %2414, label %2415

2414:                                             ; preds = %2408
  store float %2412, ptr %1860, align 4, !tbaa !163
  br label %2415

2415:                                             ; preds = %2414, %2408
  %2416 = phi float [ %2412, %2414 ], [ %2331, %2408 ]
  %2417 = add nuw nsw i32 %2332, 1
  br i1 %2180, label %2418, label %2468

2418:                                             ; preds = %2415
  %2419 = load i32, ptr %4, align 4, !tbaa !6
  %2420 = load i32, ptr %12, align 4, !tbaa !6
  %2421 = add nsw i32 %2420, -1
  %2422 = icmp slt i32 %2419, %2421
  br i1 %2422, label %2445, label %2423

2423:                                             ; preds = %2418
  %2424 = icmp eq i32 %2419, %2421
  br i1 %2424, label %2425, label %2461

2425:                                             ; preds = %2423
  store i32 0, ptr %4, align 4, !tbaa !6
  %2426 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2426, ptr %6, align 4, !tbaa !6
  br i1 %2185, label %2468, label %2427

2427:                                             ; preds = %2425, %2455
  %2428 = phi i64 [ %2459, %2455 ], [ 1, %2425 ]
  %2429 = getelementptr inbounds i32, ptr %4, i64 %2428
  %2430 = load i32, ptr %2429, align 4, !tbaa !6
  %2431 = getelementptr inbounds i32, ptr %12, i64 %2428
  %2432 = load i32, ptr %2431, align 4, !tbaa !6
  %2433 = add nsw i32 %2432, -1
  %2434 = icmp slt i32 %2430, %2433
  br i1 %2434, label %2435, label %2453

2435:                                             ; preds = %2427
  br i1 %2422, label %2445, label %2436

2436:                                             ; preds = %2435
  %2437 = shl i64 %2428, 32
  %2438 = add i64 %2437, -4294967296
  %2439 = ashr exact i64 %2438, 32
  %2440 = getelementptr inbounds i32, ptr %7, i64 %2439
  %2441 = load i32, ptr %2440, align 4, !tbaa !6
  %2442 = getelementptr inbounds i32, ptr %6, i64 %2428
  %2443 = load i32, ptr %2442, align 4, !tbaa !6
  %2444 = add nsw i32 %2443, %2441
  store i32 %2444, ptr %2442, align 4, !tbaa !6
  br label %2463

2445:                                             ; preds = %2418, %2435
  %2446 = phi i32 [ %2430, %2435 ], [ %2419, %2418 ]
  %2447 = phi ptr [ %2429, %2435 ], [ %4, %2418 ]
  %2448 = phi i64 [ %2428, %2435 ], [ 0, %2418 ]
  %2449 = add nsw i32 %2446, 1
  store i32 %2449, ptr %2447, align 4, !tbaa !6
  %2450 = getelementptr inbounds i32, ptr %7, i64 %2448
  %2451 = load i32, ptr %2450, align 4, !tbaa !6
  %2452 = getelementptr inbounds i32, ptr %6, i64 %2448
  br label %2463

2453:                                             ; preds = %2427
  %2454 = icmp eq i32 %2430, %2433
  br i1 %2454, label %2455, label %2461

2455:                                             ; preds = %2453
  store i32 0, ptr %2429, align 4, !tbaa !6
  %2456 = getelementptr inbounds i32, ptr %8, i64 %2428
  %2457 = load i32, ptr %2456, align 4, !tbaa !6
  %2458 = getelementptr inbounds i32, ptr %6, i64 %2428
  store i32 %2457, ptr %2458, align 4, !tbaa !6
  %2459 = add nuw nsw i64 %2428, 1
  %2460 = icmp eq i64 %2459, %2183
  br i1 %2460, label %2468, label %2427, !llvm.loop !463

2461:                                             ; preds = %2423, %2453
  %2462 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 563, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3093

2463:                                             ; preds = %2436, %2445
  %2464 = phi ptr [ %2452, %2445 ], [ %2429, %2436 ]
  %2465 = phi i32 [ %2451, %2445 ], [ 1, %2436 ]
  %2466 = load i32, ptr %2464, align 4, !tbaa !6
  %2467 = add nsw i32 %2466, %2465
  store i32 %2467, ptr %2464, align 4, !tbaa !6
  br label %2468

2468:                                             ; preds = %2455, %2463, %2425, %2415
  %2469 = icmp eq i32 %2417, %5
  br i1 %2469, label %3088, label %2330, !llvm.loop !464

2470:                                             ; preds = %1869
  %2471 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 563, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3088

2472:                                             ; preds = %18
  %2473 = getelementptr inbounds ptr, ptr %14, i64 %19
  %2474 = load ptr, ptr %2473, align 8, !tbaa !10
  %2475 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2476 = load ptr, ptr %2475, align 8, !tbaa !10
  %2477 = load i8, ptr %2474, align 1, !tbaa !12
  %2478 = sitofp i8 %2477 to double
  store double %2478, ptr %2476, align 8, !tbaa !19
  %2479 = icmp eq i32 %13, 0
  br i1 %2479, label %2480, label %2485

2480:                                             ; preds = %2472
  %2481 = load i8, ptr %2474, align 1, !tbaa !12
  %2482 = sitofp i8 %2481 to double
  %2483 = fcmp fast olt double %2478, %2482
  br i1 %2483, label %2484, label %3088

2484:                                             ; preds = %2480
  store double %2482, ptr %2476, align 8, !tbaa !19
  br label %3088

2485:                                             ; preds = %2472
  switch i32 %1, label %3086 [
    i32 1, label %2486
    i32 0, label %2788
  ]

2486:                                             ; preds = %2485
  %2487 = getelementptr inbounds i32, ptr %3, i64 %19
  %2488 = load i32, ptr %2487, align 4, !tbaa !6
  %2489 = icmp eq i32 %2488, 0
  %2490 = icmp sgt i32 %5, 0
  br i1 %2489, label %2500, label %2491

2491:                                             ; preds = %2486
  br i1 %2490, label %2492, label %3088

2492:                                             ; preds = %2491
  %2493 = icmp sgt i32 %13, 1
  %2494 = icmp sgt i32 %13, 0
  %2495 = add i32 %13, -2
  %2496 = zext i32 %2495 to i64
  %2497 = zext i32 %13 to i64
  %2498 = add nuw i32 %5, 1
  %2499 = icmp eq i32 %13, 1
  br label %2648

2500:                                             ; preds = %2486
  br i1 %2490, label %2501, label %3088

2501:                                             ; preds = %2500
  %2502 = icmp sgt i32 %13, 1
  %2503 = icmp sgt i32 %13, 0
  %2504 = add i32 %13, -2
  %2505 = zext i32 %2504 to i64
  %2506 = zext i32 %13 to i64
  %2507 = add nuw i32 %5, 1
  %2508 = icmp eq i32 %13, 1
  br label %2509

2509:                                             ; preds = %2501, %2646
  %2510 = phi double [ %2478, %2501 ], [ %2596, %2646 ]
  %2511 = phi i32 [ 0, %2501 ], [ %2598, %2646 ]
  %2512 = phi double [ 0.000000e+00, %2501 ], [ %2597, %2646 ]
  %2513 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2502, label %2514, label %2583

2514:                                             ; preds = %2509, %2573
  %2515 = phi i32 [ %2582, %2573 ], [ 0, %2509 ]
  %2516 = phi i64 [ %2524, %2573 ], [ %2506, %2509 ]
  %2517 = phi i64 [ %2581, %2573 ], [ %2505, %2509 ]
  %2518 = phi i32 [ %2579, %2573 ], [ %2513, %2509 ]
  %2519 = sub i32 %2504, %2515
  %2520 = tail call i32 @llvm.smin.i32(i32 %2519, i32 0)
  %2521 = sub i32 %2519, %2520
  %2522 = zext i32 %2521 to i64
  %2523 = add nuw nsw i64 %2522, 1
  %2524 = add nsw i64 %2516, -1
  %2525 = icmp ult i32 %2521, 31
  br i1 %2525, label %2561, label %2526

2526:                                             ; preds = %2514
  %2527 = and i64 %2523, 8589934560
  %2528 = sub i64 %2517, %2527
  br label %2529

2529:                                             ; preds = %2529, %2526
  %2530 = phi i64 [ 0, %2526 ], [ %2553, %2529 ]
  %2531 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2526 ], [ %2549, %2529 ]
  %2532 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2526 ], [ %2550, %2529 ]
  %2533 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2526 ], [ %2551, %2529 ]
  %2534 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2526 ], [ %2552, %2529 ]
  %2535 = sub i64 %2517, %2530
  %2536 = getelementptr inbounds i32, ptr %9, i64 %2535
  %2537 = getelementptr inbounds i32, ptr %2536, i64 -7
  %2538 = load <8 x i32>, ptr %2537, align 4, !tbaa !6
  %2539 = shufflevector <8 x i32> %2538, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2540 = getelementptr inbounds i32, ptr %2536, i64 -15
  %2541 = load <8 x i32>, ptr %2540, align 4, !tbaa !6
  %2542 = shufflevector <8 x i32> %2541, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2543 = getelementptr inbounds i32, ptr %2536, i64 -23
  %2544 = load <8 x i32>, ptr %2543, align 4, !tbaa !6
  %2545 = shufflevector <8 x i32> %2544, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2546 = getelementptr inbounds i32, ptr %2536, i64 -31
  %2547 = load <8 x i32>, ptr %2546, align 4, !tbaa !6
  %2548 = shufflevector <8 x i32> %2547, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2549 = mul <8 x i32> %2539, %2531
  %2550 = mul <8 x i32> %2542, %2532
  %2551 = mul <8 x i32> %2545, %2533
  %2552 = mul <8 x i32> %2548, %2534
  %2553 = add nuw i64 %2530, 32
  %2554 = icmp eq i64 %2553, %2527
  br i1 %2554, label %2555, label %2529, !llvm.loop !465

2555:                                             ; preds = %2529
  %2556 = mul <8 x i32> %2550, %2549
  %2557 = mul <8 x i32> %2551, %2556
  %2558 = mul <8 x i32> %2552, %2557
  %2559 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2558)
  %2560 = icmp eq i64 %2523, %2527
  br i1 %2560, label %2573, label %2561

2561:                                             ; preds = %2514, %2555
  %2562 = phi i64 [ %2517, %2514 ], [ %2528, %2555 ]
  %2563 = phi i32 [ 1, %2514 ], [ %2559, %2555 ]
  br label %2564

2564:                                             ; preds = %2561, %2564
  %2565 = phi i64 [ %2570, %2564 ], [ %2562, %2561 ]
  %2566 = phi i32 [ %2569, %2564 ], [ %2563, %2561 ]
  %2567 = getelementptr inbounds i32, ptr %9, i64 %2565
  %2568 = load i32, ptr %2567, align 4, !tbaa !6
  %2569 = mul nsw i32 %2568, %2566
  %2570 = add nsw i64 %2565, -1
  %2571 = trunc i64 %2565 to i32
  %2572 = icmp sgt i32 %2571, 0
  br i1 %2572, label %2564, label %2573, !llvm.loop !466

2573:                                             ; preds = %2564, %2555
  %2574 = phi i32 [ %2559, %2555 ], [ %2569, %2564 ]
  %2575 = and i64 %2524, 4294967295
  %2576 = getelementptr inbounds i32, ptr %6, i64 %2575
  %2577 = load i32, ptr %2576, align 4, !tbaa !6
  %2578 = mul nsw i32 %2577, %2574
  %2579 = add nsw i32 %2578, %2518
  %2580 = icmp sgt i64 %2516, 2
  %2581 = add nsw i64 %2517, -1
  %2582 = add i32 %2515, 1
  br i1 %2580, label %2514, label %2583, !llvm.loop !467

2583:                                             ; preds = %2573, %2509
  %2584 = phi i32 [ %2513, %2509 ], [ %2579, %2573 ]
  %2585 = sext i32 %2584 to i64
  %2586 = getelementptr inbounds double, ptr %2, i64 %2585
  %2587 = load double, ptr %2586, align 8, !tbaa !19
  %2588 = getelementptr inbounds i8, ptr %2474, i64 %2585
  %2589 = load i8, ptr %2588, align 1, !tbaa !12
  %2590 = sitofp i8 %2589 to double
  %2591 = fcmp fast one double %2587, 0.000000e+00
  %2592 = fcmp fast olt double %2510, %2590
  %2593 = select i1 %2591, i1 %2592, i1 false
  br i1 %2593, label %2594, label %2595

2594:                                             ; preds = %2583
  store double %2590, ptr %2476, align 8, !tbaa !19
  br label %2595

2595:                                             ; preds = %2594, %2583
  %2596 = phi double [ %2590, %2594 ], [ %2510, %2583 ]
  %2597 = fadd fast double %2587, %2512
  %2598 = add nuw nsw i32 %2511, 1
  br i1 %2503, label %2599, label %2646

2599:                                             ; preds = %2595
  %2600 = load i32, ptr %4, align 4, !tbaa !6
  %2601 = load i32, ptr %12, align 4, !tbaa !6
  %2602 = add nsw i32 %2601, -1
  %2603 = icmp slt i32 %2600, %2602
  br i1 %2603, label %2623, label %2604

2604:                                             ; preds = %2599
  %2605 = icmp eq i32 %2600, %2602
  br i1 %2605, label %2606, label %2639

2606:                                             ; preds = %2604
  store i32 0, ptr %4, align 4, !tbaa !6
  %2607 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2607, ptr %6, align 4, !tbaa !6
  br i1 %2508, label %2646, label %2608

2608:                                             ; preds = %2606, %2633
  %2609 = phi i64 [ %2637, %2633 ], [ 1, %2606 ]
  %2610 = getelementptr inbounds i32, ptr %4, i64 %2609
  %2611 = load i32, ptr %2610, align 4, !tbaa !6
  %2612 = getelementptr inbounds i32, ptr %12, i64 %2609
  %2613 = load i32, ptr %2612, align 4, !tbaa !6
  %2614 = add nsw i32 %2613, -1
  %2615 = icmp slt i32 %2611, %2614
  br i1 %2615, label %2616, label %2631

2616:                                             ; preds = %2608
  br i1 %2603, label %2623, label %2617

2617:                                             ; preds = %2616
  %2618 = getelementptr inbounds i32, ptr %7, i64 %2609
  %2619 = load i32, ptr %2618, align 4, !tbaa !6
  %2620 = getelementptr inbounds i32, ptr %6, i64 %2609
  %2621 = load i32, ptr %2620, align 4, !tbaa !6
  %2622 = add nsw i32 %2621, %2619
  store i32 %2622, ptr %2620, align 4, !tbaa !6
  br label %2641

2623:                                             ; preds = %2599, %2616
  %2624 = phi i32 [ %2611, %2616 ], [ %2600, %2599 ]
  %2625 = phi ptr [ %2610, %2616 ], [ %4, %2599 ]
  %2626 = phi i64 [ %2609, %2616 ], [ 0, %2599 ]
  %2627 = add nsw i32 %2624, 1
  store i32 %2627, ptr %2625, align 4, !tbaa !6
  %2628 = getelementptr inbounds i32, ptr %7, i64 %2626
  %2629 = load i32, ptr %2628, align 4, !tbaa !6
  %2630 = getelementptr inbounds i32, ptr %6, i64 %2626
  br label %2641

2631:                                             ; preds = %2608
  %2632 = icmp eq i32 %2611, %2614
  br i1 %2632, label %2633, label %2639

2633:                                             ; preds = %2631
  store i32 0, ptr %2610, align 4, !tbaa !6
  %2634 = getelementptr inbounds i32, ptr %8, i64 %2609
  %2635 = load i32, ptr %2634, align 4, !tbaa !6
  %2636 = getelementptr inbounds i32, ptr %6, i64 %2609
  store i32 %2635, ptr %2636, align 4, !tbaa !6
  %2637 = add nuw nsw i64 %2609, 1
  %2638 = icmp eq i64 %2637, %2506
  br i1 %2638, label %2646, label %2608, !llvm.loop !468

2639:                                             ; preds = %2604, %2631
  %2640 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 568, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3093

2641:                                             ; preds = %2617, %2623
  %2642 = phi ptr [ %2630, %2623 ], [ %2610, %2617 ]
  %2643 = phi i32 [ %2629, %2623 ], [ 1, %2617 ]
  %2644 = load i32, ptr %2642, align 4, !tbaa !6
  %2645 = add nsw i32 %2644, %2643
  store i32 %2645, ptr %2642, align 4, !tbaa !6
  br label %2646

2646:                                             ; preds = %2633, %2641, %2606, %2595
  %2647 = icmp eq i32 %2598, %5
  br i1 %2647, label %3088, label %2509, !llvm.loop !469

2648:                                             ; preds = %2492, %2786
  %2649 = phi double [ %2478, %2492 ], [ %2734, %2786 ]
  %2650 = phi i32 [ 0, %2492 ], [ %2735, %2786 ]
  %2651 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2493, label %2652, label %2721

2652:                                             ; preds = %2648, %2711
  %2653 = phi i32 [ %2720, %2711 ], [ 0, %2648 ]
  %2654 = phi i64 [ %2662, %2711 ], [ %2497, %2648 ]
  %2655 = phi i64 [ %2719, %2711 ], [ %2496, %2648 ]
  %2656 = phi i32 [ %2717, %2711 ], [ %2651, %2648 ]
  %2657 = sub i32 %2495, %2653
  %2658 = tail call i32 @llvm.smin.i32(i32 %2657, i32 0)
  %2659 = sub i32 %2657, %2658
  %2660 = zext i32 %2659 to i64
  %2661 = add nuw nsw i64 %2660, 1
  %2662 = add nsw i64 %2654, -1
  %2663 = icmp ult i32 %2659, 31
  br i1 %2663, label %2699, label %2664

2664:                                             ; preds = %2652
  %2665 = and i64 %2661, 8589934560
  %2666 = sub i64 %2655, %2665
  br label %2667

2667:                                             ; preds = %2667, %2664
  %2668 = phi i64 [ 0, %2664 ], [ %2691, %2667 ]
  %2669 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2664 ], [ %2687, %2667 ]
  %2670 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2664 ], [ %2688, %2667 ]
  %2671 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2664 ], [ %2689, %2667 ]
  %2672 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2664 ], [ %2690, %2667 ]
  %2673 = sub i64 %2655, %2668
  %2674 = getelementptr inbounds i32, ptr %11, i64 %2673
  %2675 = getelementptr inbounds i32, ptr %2674, i64 -7
  %2676 = load <8 x i32>, ptr %2675, align 4, !tbaa !6
  %2677 = shufflevector <8 x i32> %2676, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2678 = getelementptr inbounds i32, ptr %2674, i64 -15
  %2679 = load <8 x i32>, ptr %2678, align 4, !tbaa !6
  %2680 = shufflevector <8 x i32> %2679, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2681 = getelementptr inbounds i32, ptr %2674, i64 -23
  %2682 = load <8 x i32>, ptr %2681, align 4, !tbaa !6
  %2683 = shufflevector <8 x i32> %2682, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2684 = getelementptr inbounds i32, ptr %2674, i64 -31
  %2685 = load <8 x i32>, ptr %2684, align 4, !tbaa !6
  %2686 = shufflevector <8 x i32> %2685, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2687 = mul <8 x i32> %2677, %2669
  %2688 = mul <8 x i32> %2680, %2670
  %2689 = mul <8 x i32> %2683, %2671
  %2690 = mul <8 x i32> %2686, %2672
  %2691 = add nuw i64 %2668, 32
  %2692 = icmp eq i64 %2691, %2665
  br i1 %2692, label %2693, label %2667, !llvm.loop !470

2693:                                             ; preds = %2667
  %2694 = mul <8 x i32> %2688, %2687
  %2695 = mul <8 x i32> %2689, %2694
  %2696 = mul <8 x i32> %2690, %2695
  %2697 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2696)
  %2698 = icmp eq i64 %2661, %2665
  br i1 %2698, label %2711, label %2699

2699:                                             ; preds = %2652, %2693
  %2700 = phi i64 [ %2655, %2652 ], [ %2666, %2693 ]
  %2701 = phi i32 [ 1, %2652 ], [ %2697, %2693 ]
  br label %2702

2702:                                             ; preds = %2699, %2702
  %2703 = phi i64 [ %2708, %2702 ], [ %2700, %2699 ]
  %2704 = phi i32 [ %2707, %2702 ], [ %2701, %2699 ]
  %2705 = getelementptr inbounds i32, ptr %11, i64 %2703
  %2706 = load i32, ptr %2705, align 4, !tbaa !6
  %2707 = mul nsw i32 %2706, %2704
  %2708 = add nsw i64 %2703, -1
  %2709 = trunc i64 %2703 to i32
  %2710 = icmp sgt i32 %2709, 0
  br i1 %2710, label %2702, label %2711, !llvm.loop !471

2711:                                             ; preds = %2702, %2693
  %2712 = phi i32 [ %2697, %2693 ], [ %2707, %2702 ]
  %2713 = and i64 %2662, 4294967295
  %2714 = getelementptr inbounds i32, ptr %6, i64 %2713
  %2715 = load i32, ptr %2714, align 4, !tbaa !6
  %2716 = mul nsw i32 %2715, %2712
  %2717 = add nsw i32 %2716, %2656
  %2718 = icmp sgt i64 %2654, 2
  %2719 = add nsw i64 %2655, -1
  %2720 = add i32 %2653, 1
  br i1 %2718, label %2652, label %2721, !llvm.loop !472

2721:                                             ; preds = %2711, %2648
  %2722 = phi i32 [ %2651, %2648 ], [ %2717, %2711 ]
  %2723 = icmp slt i32 %2722, %5
  br i1 %2723, label %2726, label %2724

2724:                                             ; preds = %2721
  %2725 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 568, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3093

2726:                                             ; preds = %2721
  %2727 = sext i32 %2722 to i64
  %2728 = getelementptr inbounds i8, ptr %2474, i64 %2727
  %2729 = load i8, ptr %2728, align 1, !tbaa !12
  %2730 = sitofp i8 %2729 to double
  %2731 = fcmp fast olt double %2649, %2730
  br i1 %2731, label %2732, label %2733

2732:                                             ; preds = %2726
  store double %2730, ptr %2476, align 8, !tbaa !19
  br label %2733

2733:                                             ; preds = %2726, %2732
  %2734 = phi double [ %2649, %2726 ], [ %2730, %2732 ]
  %2735 = add nuw nsw i32 %2650, 1
  br i1 %2494, label %2736, label %2786

2736:                                             ; preds = %2733
  %2737 = load i32, ptr %4, align 4, !tbaa !6
  %2738 = load i32, ptr %12, align 4, !tbaa !6
  %2739 = add nsw i32 %2738, -1
  %2740 = icmp slt i32 %2737, %2739
  br i1 %2740, label %2763, label %2741

2741:                                             ; preds = %2736
  %2742 = icmp eq i32 %2737, %2739
  br i1 %2742, label %2743, label %2779

2743:                                             ; preds = %2741
  store i32 0, ptr %4, align 4, !tbaa !6
  %2744 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2744, ptr %6, align 4, !tbaa !6
  br i1 %2499, label %2786, label %2745

2745:                                             ; preds = %2743, %2773
  %2746 = phi i64 [ %2777, %2773 ], [ 1, %2743 ]
  %2747 = getelementptr inbounds i32, ptr %4, i64 %2746
  %2748 = load i32, ptr %2747, align 4, !tbaa !6
  %2749 = getelementptr inbounds i32, ptr %12, i64 %2746
  %2750 = load i32, ptr %2749, align 4, !tbaa !6
  %2751 = add nsw i32 %2750, -1
  %2752 = icmp slt i32 %2748, %2751
  br i1 %2752, label %2753, label %2771

2753:                                             ; preds = %2745
  br i1 %2740, label %2763, label %2754

2754:                                             ; preds = %2753
  %2755 = shl i64 %2746, 32
  %2756 = add i64 %2755, -4294967296
  %2757 = ashr exact i64 %2756, 32
  %2758 = getelementptr inbounds i32, ptr %7, i64 %2757
  %2759 = load i32, ptr %2758, align 4, !tbaa !6
  %2760 = getelementptr inbounds i32, ptr %6, i64 %2746
  %2761 = load i32, ptr %2760, align 4, !tbaa !6
  %2762 = add nsw i32 %2761, %2759
  store i32 %2762, ptr %2760, align 4, !tbaa !6
  br label %2781

2763:                                             ; preds = %2736, %2753
  %2764 = phi i32 [ %2748, %2753 ], [ %2737, %2736 ]
  %2765 = phi ptr [ %2747, %2753 ], [ %4, %2736 ]
  %2766 = phi i64 [ %2746, %2753 ], [ 0, %2736 ]
  %2767 = add nsw i32 %2764, 1
  store i32 %2767, ptr %2765, align 4, !tbaa !6
  %2768 = getelementptr inbounds i32, ptr %7, i64 %2766
  %2769 = load i32, ptr %2768, align 4, !tbaa !6
  %2770 = getelementptr inbounds i32, ptr %6, i64 %2766
  br label %2781

2771:                                             ; preds = %2745
  %2772 = icmp eq i32 %2748, %2751
  br i1 %2772, label %2773, label %2779

2773:                                             ; preds = %2771
  store i32 0, ptr %2747, align 4, !tbaa !6
  %2774 = getelementptr inbounds i32, ptr %8, i64 %2746
  %2775 = load i32, ptr %2774, align 4, !tbaa !6
  %2776 = getelementptr inbounds i32, ptr %6, i64 %2746
  store i32 %2775, ptr %2776, align 4, !tbaa !6
  %2777 = add nuw nsw i64 %2746, 1
  %2778 = icmp eq i64 %2777, %2497
  br i1 %2778, label %2786, label %2745, !llvm.loop !473

2779:                                             ; preds = %2741, %2771
  %2780 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 568, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3093

2781:                                             ; preds = %2754, %2763
  %2782 = phi ptr [ %2770, %2763 ], [ %2747, %2754 ]
  %2783 = phi i32 [ %2769, %2763 ], [ 1, %2754 ]
  %2784 = load i32, ptr %2782, align 4, !tbaa !6
  %2785 = add nsw i32 %2784, %2783
  store i32 %2785, ptr %2782, align 4, !tbaa !6
  br label %2786

2786:                                             ; preds = %2773, %2781, %2743, %2733
  %2787 = icmp eq i32 %2735, %5
  br i1 %2787, label %3088, label %2648, !llvm.loop !474

2788:                                             ; preds = %2485
  %2789 = getelementptr inbounds i32, ptr %3, i64 %19
  %2790 = load i32, ptr %2789, align 4, !tbaa !6
  %2791 = icmp eq i32 %2790, 0
  %2792 = icmp sgt i32 %5, 0
  br i1 %2791, label %2802, label %2793

2793:                                             ; preds = %2788
  br i1 %2792, label %2794, label %3088

2794:                                             ; preds = %2793
  %2795 = icmp sgt i32 %13, 1
  %2796 = icmp sgt i32 %13, 0
  %2797 = add i32 %13, -2
  %2798 = zext i32 %2797 to i64
  %2799 = zext i32 %13 to i64
  %2800 = add nuw i32 %5, 1
  %2801 = icmp eq i32 %13, 1
  br label %2946

2802:                                             ; preds = %2788
  br i1 %2792, label %2803, label %3088

2803:                                             ; preds = %2802
  %2804 = icmp sgt i32 %13, 1
  %2805 = icmp sgt i32 %13, 0
  %2806 = add i32 %13, -2
  %2807 = zext i32 %2806 to i64
  %2808 = zext i32 %13 to i64
  %2809 = add nuw i32 %5, 1
  %2810 = icmp eq i32 %13, 1
  br label %2811

2811:                                             ; preds = %2803, %2944
  %2812 = phi double [ %2478, %2803 ], [ %2894, %2944 ]
  %2813 = phi i32 [ 0, %2803 ], [ %2896, %2944 ]
  %2814 = phi double [ 0.000000e+00, %2803 ], [ %2895, %2944 ]
  %2815 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2804, label %2816, label %2885

2816:                                             ; preds = %2811, %2875
  %2817 = phi i32 [ %2884, %2875 ], [ 0, %2811 ]
  %2818 = phi i64 [ %2826, %2875 ], [ %2808, %2811 ]
  %2819 = phi i64 [ %2883, %2875 ], [ %2807, %2811 ]
  %2820 = phi i32 [ %2881, %2875 ], [ %2815, %2811 ]
  %2821 = sub i32 %2806, %2817
  %2822 = tail call i32 @llvm.smin.i32(i32 %2821, i32 0)
  %2823 = sub i32 %2821, %2822
  %2824 = zext i32 %2823 to i64
  %2825 = add nuw nsw i64 %2824, 1
  %2826 = add nsw i64 %2818, -1
  %2827 = icmp ult i32 %2823, 31
  br i1 %2827, label %2863, label %2828

2828:                                             ; preds = %2816
  %2829 = and i64 %2825, 8589934560
  %2830 = sub i64 %2819, %2829
  br label %2831

2831:                                             ; preds = %2831, %2828
  %2832 = phi i64 [ 0, %2828 ], [ %2855, %2831 ]
  %2833 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2828 ], [ %2851, %2831 ]
  %2834 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2828 ], [ %2852, %2831 ]
  %2835 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2828 ], [ %2853, %2831 ]
  %2836 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2828 ], [ %2854, %2831 ]
  %2837 = sub i64 %2819, %2832
  %2838 = getelementptr inbounds i32, ptr %9, i64 %2837
  %2839 = getelementptr inbounds i32, ptr %2838, i64 -7
  %2840 = load <8 x i32>, ptr %2839, align 4, !tbaa !6
  %2841 = shufflevector <8 x i32> %2840, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2842 = getelementptr inbounds i32, ptr %2838, i64 -15
  %2843 = load <8 x i32>, ptr %2842, align 4, !tbaa !6
  %2844 = shufflevector <8 x i32> %2843, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2845 = getelementptr inbounds i32, ptr %2838, i64 -23
  %2846 = load <8 x i32>, ptr %2845, align 4, !tbaa !6
  %2847 = shufflevector <8 x i32> %2846, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2848 = getelementptr inbounds i32, ptr %2838, i64 -31
  %2849 = load <8 x i32>, ptr %2848, align 4, !tbaa !6
  %2850 = shufflevector <8 x i32> %2849, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2851 = mul <8 x i32> %2841, %2833
  %2852 = mul <8 x i32> %2844, %2834
  %2853 = mul <8 x i32> %2847, %2835
  %2854 = mul <8 x i32> %2850, %2836
  %2855 = add nuw i64 %2832, 32
  %2856 = icmp eq i64 %2855, %2829
  br i1 %2856, label %2857, label %2831, !llvm.loop !475

2857:                                             ; preds = %2831
  %2858 = mul <8 x i32> %2852, %2851
  %2859 = mul <8 x i32> %2853, %2858
  %2860 = mul <8 x i32> %2854, %2859
  %2861 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2860)
  %2862 = icmp eq i64 %2825, %2829
  br i1 %2862, label %2875, label %2863

2863:                                             ; preds = %2816, %2857
  %2864 = phi i64 [ %2819, %2816 ], [ %2830, %2857 ]
  %2865 = phi i32 [ 1, %2816 ], [ %2861, %2857 ]
  br label %2866

2866:                                             ; preds = %2863, %2866
  %2867 = phi i64 [ %2872, %2866 ], [ %2864, %2863 ]
  %2868 = phi i32 [ %2871, %2866 ], [ %2865, %2863 ]
  %2869 = getelementptr inbounds i32, ptr %9, i64 %2867
  %2870 = load i32, ptr %2869, align 4, !tbaa !6
  %2871 = mul nsw i32 %2870, %2868
  %2872 = add nsw i64 %2867, -1
  %2873 = trunc i64 %2867 to i32
  %2874 = icmp sgt i32 %2873, 0
  br i1 %2874, label %2866, label %2875, !llvm.loop !476

2875:                                             ; preds = %2866, %2857
  %2876 = phi i32 [ %2861, %2857 ], [ %2871, %2866 ]
  %2877 = and i64 %2826, 4294967295
  %2878 = getelementptr inbounds i32, ptr %6, i64 %2877
  %2879 = load i32, ptr %2878, align 4, !tbaa !6
  %2880 = mul nsw i32 %2879, %2876
  %2881 = add nsw i32 %2880, %2820
  %2882 = icmp sgt i64 %2818, 2
  %2883 = add nsw i64 %2819, -1
  %2884 = add i32 %2817, 1
  br i1 %2882, label %2816, label %2885, !llvm.loop !477

2885:                                             ; preds = %2875, %2811
  %2886 = phi i32 [ %2815, %2811 ], [ %2881, %2875 ]
  %2887 = sext i32 %2886 to i64
  %2888 = getelementptr inbounds i8, ptr %2474, i64 %2887
  %2889 = load i8, ptr %2888, align 1, !tbaa !12
  %2890 = sitofp i8 %2889 to double
  %2891 = fcmp fast olt double %2812, %2890
  br i1 %2891, label %2892, label %2893

2892:                                             ; preds = %2885
  store double %2890, ptr %2476, align 8, !tbaa !19
  br label %2893

2893:                                             ; preds = %2892, %2885
  %2894 = phi double [ %2890, %2892 ], [ %2812, %2885 ]
  %2895 = fadd fast double %2814, 1.000000e+00
  %2896 = add nuw nsw i32 %2813, 1
  br i1 %2805, label %2897, label %2944

2897:                                             ; preds = %2893
  %2898 = load i32, ptr %4, align 4, !tbaa !6
  %2899 = load i32, ptr %12, align 4, !tbaa !6
  %2900 = add nsw i32 %2899, -1
  %2901 = icmp slt i32 %2898, %2900
  br i1 %2901, label %2921, label %2902

2902:                                             ; preds = %2897
  %2903 = icmp eq i32 %2898, %2900
  br i1 %2903, label %2904, label %2937

2904:                                             ; preds = %2902
  store i32 0, ptr %4, align 4, !tbaa !6
  %2905 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2905, ptr %6, align 4, !tbaa !6
  br i1 %2810, label %2944, label %2906

2906:                                             ; preds = %2904, %2931
  %2907 = phi i64 [ %2935, %2931 ], [ 1, %2904 ]
  %2908 = getelementptr inbounds i32, ptr %4, i64 %2907
  %2909 = load i32, ptr %2908, align 4, !tbaa !6
  %2910 = getelementptr inbounds i32, ptr %12, i64 %2907
  %2911 = load i32, ptr %2910, align 4, !tbaa !6
  %2912 = add nsw i32 %2911, -1
  %2913 = icmp slt i32 %2909, %2912
  br i1 %2913, label %2914, label %2929

2914:                                             ; preds = %2906
  br i1 %2901, label %2921, label %2915

2915:                                             ; preds = %2914
  %2916 = getelementptr inbounds i32, ptr %7, i64 %2907
  %2917 = load i32, ptr %2916, align 4, !tbaa !6
  %2918 = getelementptr inbounds i32, ptr %6, i64 %2907
  %2919 = load i32, ptr %2918, align 4, !tbaa !6
  %2920 = add nsw i32 %2919, %2917
  store i32 %2920, ptr %2918, align 4, !tbaa !6
  br label %2939

2921:                                             ; preds = %2897, %2914
  %2922 = phi i32 [ %2909, %2914 ], [ %2898, %2897 ]
  %2923 = phi ptr [ %2908, %2914 ], [ %4, %2897 ]
  %2924 = phi i64 [ %2907, %2914 ], [ 0, %2897 ]
  %2925 = add nsw i32 %2922, 1
  store i32 %2925, ptr %2923, align 4, !tbaa !6
  %2926 = getelementptr inbounds i32, ptr %7, i64 %2924
  %2927 = load i32, ptr %2926, align 4, !tbaa !6
  %2928 = getelementptr inbounds i32, ptr %6, i64 %2924
  br label %2939

2929:                                             ; preds = %2906
  %2930 = icmp eq i32 %2909, %2912
  br i1 %2930, label %2931, label %2937

2931:                                             ; preds = %2929
  store i32 0, ptr %2908, align 4, !tbaa !6
  %2932 = getelementptr inbounds i32, ptr %8, i64 %2907
  %2933 = load i32, ptr %2932, align 4, !tbaa !6
  %2934 = getelementptr inbounds i32, ptr %6, i64 %2907
  store i32 %2933, ptr %2934, align 4, !tbaa !6
  %2935 = add nuw nsw i64 %2907, 1
  %2936 = icmp eq i64 %2935, %2808
  br i1 %2936, label %2944, label %2906, !llvm.loop !478

2937:                                             ; preds = %2902, %2929
  %2938 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 568, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3093

2939:                                             ; preds = %2915, %2921
  %2940 = phi ptr [ %2928, %2921 ], [ %2908, %2915 ]
  %2941 = phi i32 [ %2927, %2921 ], [ 1, %2915 ]
  %2942 = load i32, ptr %2940, align 4, !tbaa !6
  %2943 = add nsw i32 %2942, %2941
  store i32 %2943, ptr %2940, align 4, !tbaa !6
  br label %2944

2944:                                             ; preds = %2931, %2939, %2904, %2893
  %2945 = icmp eq i32 %2896, %5
  br i1 %2945, label %3088, label %2811, !llvm.loop !479

2946:                                             ; preds = %2794, %3084
  %2947 = phi double [ %2478, %2794 ], [ %3032, %3084 ]
  %2948 = phi i32 [ 0, %2794 ], [ %3033, %3084 ]
  %2949 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2795, label %2950, label %3019

2950:                                             ; preds = %2946, %3009
  %2951 = phi i32 [ %3018, %3009 ], [ 0, %2946 ]
  %2952 = phi i64 [ %2960, %3009 ], [ %2799, %2946 ]
  %2953 = phi i64 [ %3017, %3009 ], [ %2798, %2946 ]
  %2954 = phi i32 [ %3015, %3009 ], [ %2949, %2946 ]
  %2955 = sub i32 %2797, %2951
  %2956 = tail call i32 @llvm.smin.i32(i32 %2955, i32 0)
  %2957 = sub i32 %2955, %2956
  %2958 = zext i32 %2957 to i64
  %2959 = add nuw nsw i64 %2958, 1
  %2960 = add nsw i64 %2952, -1
  %2961 = icmp ult i32 %2957, 31
  br i1 %2961, label %2997, label %2962

2962:                                             ; preds = %2950
  %2963 = and i64 %2959, 8589934560
  %2964 = sub i64 %2953, %2963
  br label %2965

2965:                                             ; preds = %2965, %2962
  %2966 = phi i64 [ 0, %2962 ], [ %2989, %2965 ]
  %2967 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2962 ], [ %2985, %2965 ]
  %2968 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2962 ], [ %2986, %2965 ]
  %2969 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2962 ], [ %2987, %2965 ]
  %2970 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2962 ], [ %2988, %2965 ]
  %2971 = sub i64 %2953, %2966
  %2972 = getelementptr inbounds i32, ptr %11, i64 %2971
  %2973 = getelementptr inbounds i32, ptr %2972, i64 -7
  %2974 = load <8 x i32>, ptr %2973, align 4, !tbaa !6
  %2975 = shufflevector <8 x i32> %2974, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2976 = getelementptr inbounds i32, ptr %2972, i64 -15
  %2977 = load <8 x i32>, ptr %2976, align 4, !tbaa !6
  %2978 = shufflevector <8 x i32> %2977, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2979 = getelementptr inbounds i32, ptr %2972, i64 -23
  %2980 = load <8 x i32>, ptr %2979, align 4, !tbaa !6
  %2981 = shufflevector <8 x i32> %2980, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2982 = getelementptr inbounds i32, ptr %2972, i64 -31
  %2983 = load <8 x i32>, ptr %2982, align 4, !tbaa !6
  %2984 = shufflevector <8 x i32> %2983, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2985 = mul <8 x i32> %2975, %2967
  %2986 = mul <8 x i32> %2978, %2968
  %2987 = mul <8 x i32> %2981, %2969
  %2988 = mul <8 x i32> %2984, %2970
  %2989 = add nuw i64 %2966, 32
  %2990 = icmp eq i64 %2989, %2963
  br i1 %2990, label %2991, label %2965, !llvm.loop !480

2991:                                             ; preds = %2965
  %2992 = mul <8 x i32> %2986, %2985
  %2993 = mul <8 x i32> %2987, %2992
  %2994 = mul <8 x i32> %2988, %2993
  %2995 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2994)
  %2996 = icmp eq i64 %2959, %2963
  br i1 %2996, label %3009, label %2997

2997:                                             ; preds = %2950, %2991
  %2998 = phi i64 [ %2953, %2950 ], [ %2964, %2991 ]
  %2999 = phi i32 [ 1, %2950 ], [ %2995, %2991 ]
  br label %3000

3000:                                             ; preds = %2997, %3000
  %3001 = phi i64 [ %3006, %3000 ], [ %2998, %2997 ]
  %3002 = phi i32 [ %3005, %3000 ], [ %2999, %2997 ]
  %3003 = getelementptr inbounds i32, ptr %11, i64 %3001
  %3004 = load i32, ptr %3003, align 4, !tbaa !6
  %3005 = mul nsw i32 %3004, %3002
  %3006 = add nsw i64 %3001, -1
  %3007 = trunc i64 %3001 to i32
  %3008 = icmp sgt i32 %3007, 0
  br i1 %3008, label %3000, label %3009, !llvm.loop !481

3009:                                             ; preds = %3000, %2991
  %3010 = phi i32 [ %2995, %2991 ], [ %3005, %3000 ]
  %3011 = and i64 %2960, 4294967295
  %3012 = getelementptr inbounds i32, ptr %6, i64 %3011
  %3013 = load i32, ptr %3012, align 4, !tbaa !6
  %3014 = mul nsw i32 %3013, %3010
  %3015 = add nsw i32 %3014, %2954
  %3016 = icmp sgt i64 %2952, 2
  %3017 = add nsw i64 %2953, -1
  %3018 = add i32 %2951, 1
  br i1 %3016, label %2950, label %3019, !llvm.loop !482

3019:                                             ; preds = %3009, %2946
  %3020 = phi i32 [ %2949, %2946 ], [ %3015, %3009 ]
  %3021 = icmp slt i32 %3020, %5
  br i1 %3021, label %3024, label %3022

3022:                                             ; preds = %3019
  %3023 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 568, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3093

3024:                                             ; preds = %3019
  %3025 = sext i32 %3020 to i64
  %3026 = getelementptr inbounds i8, ptr %2474, i64 %3025
  %3027 = load i8, ptr %3026, align 1, !tbaa !12
  %3028 = sitofp i8 %3027 to double
  %3029 = fcmp fast olt double %2947, %3028
  br i1 %3029, label %3030, label %3031

3030:                                             ; preds = %3024
  store double %3028, ptr %2476, align 8, !tbaa !19
  br label %3031

3031:                                             ; preds = %3030, %3024
  %3032 = phi double [ %3028, %3030 ], [ %2947, %3024 ]
  %3033 = add nuw nsw i32 %2948, 1
  br i1 %2796, label %3034, label %3084

3034:                                             ; preds = %3031
  %3035 = load i32, ptr %4, align 4, !tbaa !6
  %3036 = load i32, ptr %12, align 4, !tbaa !6
  %3037 = add nsw i32 %3036, -1
  %3038 = icmp slt i32 %3035, %3037
  br i1 %3038, label %3061, label %3039

3039:                                             ; preds = %3034
  %3040 = icmp eq i32 %3035, %3037
  br i1 %3040, label %3041, label %3077

3041:                                             ; preds = %3039
  store i32 0, ptr %4, align 4, !tbaa !6
  %3042 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3042, ptr %6, align 4, !tbaa !6
  br i1 %2801, label %3084, label %3043

3043:                                             ; preds = %3041, %3071
  %3044 = phi i64 [ %3075, %3071 ], [ 1, %3041 ]
  %3045 = getelementptr inbounds i32, ptr %4, i64 %3044
  %3046 = load i32, ptr %3045, align 4, !tbaa !6
  %3047 = getelementptr inbounds i32, ptr %12, i64 %3044
  %3048 = load i32, ptr %3047, align 4, !tbaa !6
  %3049 = add nsw i32 %3048, -1
  %3050 = icmp slt i32 %3046, %3049
  br i1 %3050, label %3051, label %3069

3051:                                             ; preds = %3043
  br i1 %3038, label %3061, label %3052

3052:                                             ; preds = %3051
  %3053 = shl i64 %3044, 32
  %3054 = add i64 %3053, -4294967296
  %3055 = ashr exact i64 %3054, 32
  %3056 = getelementptr inbounds i32, ptr %7, i64 %3055
  %3057 = load i32, ptr %3056, align 4, !tbaa !6
  %3058 = getelementptr inbounds i32, ptr %6, i64 %3044
  %3059 = load i32, ptr %3058, align 4, !tbaa !6
  %3060 = add nsw i32 %3059, %3057
  store i32 %3060, ptr %3058, align 4, !tbaa !6
  br label %3079

3061:                                             ; preds = %3034, %3051
  %3062 = phi i32 [ %3046, %3051 ], [ %3035, %3034 ]
  %3063 = phi ptr [ %3045, %3051 ], [ %4, %3034 ]
  %3064 = phi i64 [ %3044, %3051 ], [ 0, %3034 ]
  %3065 = add nsw i32 %3062, 1
  store i32 %3065, ptr %3063, align 4, !tbaa !6
  %3066 = getelementptr inbounds i32, ptr %7, i64 %3064
  %3067 = load i32, ptr %3066, align 4, !tbaa !6
  %3068 = getelementptr inbounds i32, ptr %6, i64 %3064
  br label %3079

3069:                                             ; preds = %3043
  %3070 = icmp eq i32 %3046, %3049
  br i1 %3070, label %3071, label %3077

3071:                                             ; preds = %3069
  store i32 0, ptr %3045, align 4, !tbaa !6
  %3072 = getelementptr inbounds i32, ptr %8, i64 %3044
  %3073 = load i32, ptr %3072, align 4, !tbaa !6
  %3074 = getelementptr inbounds i32, ptr %6, i64 %3044
  store i32 %3073, ptr %3074, align 4, !tbaa !6
  %3075 = add nuw nsw i64 %3044, 1
  %3076 = icmp eq i64 %3075, %2799
  br i1 %3076, label %3084, label %3043, !llvm.loop !483

3077:                                             ; preds = %3039, %3069
  %3078 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 568, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3093

3079:                                             ; preds = %3052, %3061
  %3080 = phi ptr [ %3068, %3061 ], [ %3045, %3052 ]
  %3081 = phi i32 [ %3067, %3061 ], [ 1, %3052 ]
  %3082 = load i32, ptr %3080, align 4, !tbaa !6
  %3083 = add nsw i32 %3082, %3081
  store i32 %3083, ptr %3080, align 4, !tbaa !6
  br label %3084

3084:                                             ; preds = %3071, %3079, %3041, %3031
  %3085 = icmp eq i32 %3033, %5
  br i1 %3085, label %3088, label %2946, !llvm.loop !484

3086:                                             ; preds = %2485
  %3087 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 568, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3088

3088:                                             ; preds = %3084, %2944, %2786, %2646, %2468, %2328, %2170, %2030, %1852, %1712, %1554, %1414, %1236, %1097, %940, %801, %624, %486, %330, %192, %2793, %2802, %2491, %2500, %2177, %2186, %1875, %1884, %1561, %1570, %1259, %1268, %947, %956, %647, %656, %337, %346, %39, %48, %2484, %2480, %3086, %1868, %1864, %2470, %1252, %1248, %1854, %639, %636, %1238, %32, %29, %626, %18
  %3089 = phi double [ 0.000000e+00, %18 ], [ 0.000000e+00, %626 ], [ 0.000000e+00, %29 ], [ 0.000000e+00, %32 ], [ 0.000000e+00, %1238 ], [ 0.000000e+00, %636 ], [ 0.000000e+00, %639 ], [ 0.000000e+00, %1854 ], [ 0.000000e+00, %1248 ], [ 0.000000e+00, %1252 ], [ 0.000000e+00, %2470 ], [ 0.000000e+00, %1864 ], [ 0.000000e+00, %1868 ], [ 0.000000e+00, %3086 ], [ 0.000000e+00, %2480 ], [ 0.000000e+00, %2484 ], [ 0.000000e+00, %48 ], [ 0.000000e+00, %39 ], [ 0.000000e+00, %346 ], [ 0.000000e+00, %337 ], [ 0.000000e+00, %656 ], [ 0.000000e+00, %647 ], [ 0.000000e+00, %956 ], [ 0.000000e+00, %947 ], [ 0.000000e+00, %1268 ], [ 0.000000e+00, %1259 ], [ 0.000000e+00, %1570 ], [ 0.000000e+00, %1561 ], [ 0.000000e+00, %1884 ], [ 0.000000e+00, %1875 ], [ 0.000000e+00, %2186 ], [ 0.000000e+00, %2177 ], [ 0.000000e+00, %2500 ], [ 0.000000e+00, %2491 ], [ 0.000000e+00, %2802 ], [ 0.000000e+00, %2793 ], [ %143, %192 ], [ 0.000000e+00, %330 ], [ %437, %486 ], [ 0.000000e+00, %624 ], [ %752, %801 ], [ 0.000000e+00, %940 ], [ %1048, %1097 ], [ 0.000000e+00, %1236 ], [ %1365, %1414 ], [ 0.000000e+00, %1554 ], [ %1663, %1712 ], [ 0.000000e+00, %1852 ], [ %1981, %2030 ], [ 0.000000e+00, %2170 ], [ %2279, %2328 ], [ 0.000000e+00, %2468 ], [ %2597, %2646 ], [ 0.000000e+00, %2786 ], [ %2895, %2944 ], [ 0.000000e+00, %3084 ]
  %3090 = phi i32 [ %10, %18 ], [ 1, %626 ], [ 1, %29 ], [ 1, %32 ], [ 1, %1238 ], [ 1, %636 ], [ 1, %639 ], [ 1, %1854 ], [ 1, %1248 ], [ 1, %1252 ], [ 1, %2470 ], [ 1, %1864 ], [ 1, %1868 ], [ 1, %3086 ], [ 1, %2480 ], [ 1, %2484 ], [ 1, %48 ], [ 1, %39 ], [ 1, %346 ], [ 1, %337 ], [ 1, %656 ], [ 1, %647 ], [ 1, %956 ], [ 1, %947 ], [ 1, %1268 ], [ 1, %1259 ], [ 1, %1570 ], [ 1, %1561 ], [ 1, %1884 ], [ 1, %1875 ], [ 1, %2186 ], [ 1, %2177 ], [ 1, %2500 ], [ 1, %2491 ], [ 1, %2802 ], [ 1, %2793 ], [ %55, %192 ], [ %46, %330 ], [ %353, %486 ], [ %344, %624 ], [ %663, %801 ], [ %654, %940 ], [ %963, %1097 ], [ %954, %1236 ], [ %1275, %1414 ], [ %1266, %1554 ], [ %1577, %1712 ], [ %1568, %1852 ], [ %1891, %2030 ], [ %1882, %2170 ], [ %2193, %2328 ], [ %2184, %2468 ], [ %2507, %2646 ], [ %2498, %2786 ], [ %2809, %2944 ], [ %2800, %3084 ]
  %3091 = tail call i32 @Util_TableSetInt(i32 noundef %17, i32 noundef %3090, ptr noundef nonnull @.str.5) #3
  %3092 = tail call i32 @Util_TableSetReal(i32 noundef %17, double noundef nofpclass(nan inf) %3089, ptr noundef nonnull @.str.6) #3
  br label %3093

3093:                                             ; preds = %2639, %2724, %2779, %2937, %3022, %3077, %2023, %2108, %2163, %2321, %2406, %2461, %1407, %1492, %1547, %1705, %1790, %1845, %794, %878, %933, %1090, %1174, %1229, %185, %269, %323, %479, %563, %617, %3088
  %3094 = phi i32 [ 0, %3088 ], [ -1, %617 ], [ -1, %563 ], [ -1, %479 ], [ -1, %323 ], [ -1, %269 ], [ -1, %185 ], [ -1, %1229 ], [ -1, %1174 ], [ -1, %1090 ], [ -1, %933 ], [ -1, %878 ], [ -1, %794 ], [ -1, %1845 ], [ -1, %1790 ], [ -1, %1705 ], [ -1, %1547 ], [ -1, %1492 ], [ -1, %1407 ], [ -1, %2461 ], [ -1, %2406 ], [ -1, %2321 ], [ -1, %2163 ], [ -1, %2108 ], [ -1, %2023 ], [ -1, %3077 ], [ -1, %3022 ], [ -1, %2937 ], [ -1, %2779 ], [ -1, %2724 ], [ -1, %2639 ]
  ret i32 %3094
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_Max_INT2(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr nocapture noundef readonly %7, ptr nocapture noundef readonly %8, ptr nocapture noundef readonly %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr nocapture noundef readonly %12, i32 noundef %13, ptr nocapture noundef readonly %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !6
  switch i32 %21, label %3084 [
    i32 101, label %22
    i32 102, label %644
    i32 107, label %1251
    i32 108, label %1862
    i32 109, label %2473
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %14, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !10
  %25 = getelementptr inbounds ptr, ptr %16, i64 %19
  %26 = load ptr, ptr %25, align 8, !tbaa !10
  %27 = load i16, ptr %24, align 2, !tbaa !79
  %28 = trunc i16 %27 to i8
  store i8 %28, ptr %26, align 1, !tbaa !12
  %29 = icmp eq i32 %13, 0
  br i1 %29, label %30, label %37

30:                                               ; preds = %22
  %31 = load i16, ptr %24, align 2, !tbaa !79
  %32 = and i16 %27, 255
  %33 = and i16 %31, 255
  %34 = icmp ult i16 %32, %33
  br i1 %34, label %35, label %3084

35:                                               ; preds = %30
  %36 = trunc i16 %31 to i8
  store i8 %36, ptr %26, align 1, !tbaa !12
  br label %3084

37:                                               ; preds = %22
  switch i32 %1, label %642 [
    i32 1, label %38
    i32 0, label %342
  ]

38:                                               ; preds = %37
  %39 = getelementptr inbounds i32, ptr %3, i64 %19
  %40 = load i32, ptr %39, align 4, !tbaa !6
  %41 = icmp eq i32 %40, 0
  %42 = icmp sgt i32 %5, 0
  br i1 %41, label %52, label %43

43:                                               ; preds = %38
  br i1 %42, label %44, label %3084

44:                                               ; preds = %43
  %45 = icmp sgt i32 %13, 1
  %46 = icmp sgt i32 %13, 0
  %47 = add i32 %13, -2
  %48 = zext i32 %47 to i64
  %49 = zext i32 %13 to i64
  %50 = add nuw i32 %5, 1
  %51 = icmp eq i32 %13, 1
  br label %201

52:                                               ; preds = %38
  br i1 %42, label %53, label %3084

53:                                               ; preds = %52
  %54 = icmp sgt i32 %13, 1
  %55 = icmp sgt i32 %13, 0
  %56 = add i32 %13, -2
  %57 = zext i32 %56 to i64
  %58 = zext i32 %13 to i64
  %59 = add nuw i32 %5, 1
  %60 = icmp eq i32 %13, 1
  br label %61

61:                                               ; preds = %53, %199
  %62 = phi i32 [ 0, %53 ], [ %151, %199 ]
  %63 = phi double [ 0.000000e+00, %53 ], [ %150, %199 ]
  %64 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %54, label %65, label %134

65:                                               ; preds = %61, %124
  %66 = phi i32 [ %133, %124 ], [ 0, %61 ]
  %67 = phi i64 [ %75, %124 ], [ %58, %61 ]
  %68 = phi i64 [ %132, %124 ], [ %57, %61 ]
  %69 = phi i32 [ %130, %124 ], [ %64, %61 ]
  %70 = sub i32 %56, %66
  %71 = tail call i32 @llvm.smin.i32(i32 %70, i32 0)
  %72 = sub i32 %70, %71
  %73 = zext i32 %72 to i64
  %74 = add nuw nsw i64 %73, 1
  %75 = add nsw i64 %67, -1
  %76 = icmp ult i32 %72, 31
  br i1 %76, label %112, label %77

77:                                               ; preds = %65
  %78 = and i64 %74, 8589934560
  %79 = sub i64 %68, %78
  br label %80

80:                                               ; preds = %80, %77
  %81 = phi i64 [ 0, %77 ], [ %104, %80 ]
  %82 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %77 ], [ %100, %80 ]
  %83 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %77 ], [ %101, %80 ]
  %84 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %77 ], [ %102, %80 ]
  %85 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %77 ], [ %103, %80 ]
  %86 = sub i64 %68, %81
  %87 = getelementptr inbounds i32, ptr %9, i64 %86
  %88 = getelementptr inbounds i32, ptr %87, i64 -7
  %89 = load <8 x i32>, ptr %88, align 4, !tbaa !6
  %90 = shufflevector <8 x i32> %89, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %91 = getelementptr inbounds i32, ptr %87, i64 -15
  %92 = load <8 x i32>, ptr %91, align 4, !tbaa !6
  %93 = shufflevector <8 x i32> %92, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %94 = getelementptr inbounds i32, ptr %87, i64 -23
  %95 = load <8 x i32>, ptr %94, align 4, !tbaa !6
  %96 = shufflevector <8 x i32> %95, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %97 = getelementptr inbounds i32, ptr %87, i64 -31
  %98 = load <8 x i32>, ptr %97, align 4, !tbaa !6
  %99 = shufflevector <8 x i32> %98, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %100 = mul <8 x i32> %90, %82
  %101 = mul <8 x i32> %93, %83
  %102 = mul <8 x i32> %96, %84
  %103 = mul <8 x i32> %99, %85
  %104 = add nuw i64 %81, 32
  %105 = icmp eq i64 %104, %78
  br i1 %105, label %106, label %80, !llvm.loop !485

106:                                              ; preds = %80
  %107 = mul <8 x i32> %101, %100
  %108 = mul <8 x i32> %102, %107
  %109 = mul <8 x i32> %103, %108
  %110 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %109)
  %111 = icmp eq i64 %74, %78
  br i1 %111, label %124, label %112

112:                                              ; preds = %65, %106
  %113 = phi i64 [ %68, %65 ], [ %79, %106 ]
  %114 = phi i32 [ 1, %65 ], [ %110, %106 ]
  br label %115

115:                                              ; preds = %112, %115
  %116 = phi i64 [ %121, %115 ], [ %113, %112 ]
  %117 = phi i32 [ %120, %115 ], [ %114, %112 ]
  %118 = getelementptr inbounds i32, ptr %9, i64 %116
  %119 = load i32, ptr %118, align 4, !tbaa !6
  %120 = mul nsw i32 %119, %117
  %121 = add nsw i64 %116, -1
  %122 = trunc i64 %116 to i32
  %123 = icmp sgt i32 %122, 0
  br i1 %123, label %115, label %124, !llvm.loop !486

124:                                              ; preds = %115, %106
  %125 = phi i32 [ %110, %106 ], [ %120, %115 ]
  %126 = and i64 %75, 4294967295
  %127 = getelementptr inbounds i32, ptr %6, i64 %126
  %128 = load i32, ptr %127, align 4, !tbaa !6
  %129 = mul nsw i32 %128, %125
  %130 = add nsw i32 %129, %69
  %131 = icmp sgt i64 %67, 2
  %132 = add nsw i64 %68, -1
  %133 = add i32 %66, 1
  br i1 %131, label %65, label %134, !llvm.loop !487

134:                                              ; preds = %124, %61
  %135 = phi i32 [ %64, %61 ], [ %130, %124 ]
  %136 = sext i32 %135 to i64
  %137 = getelementptr inbounds double, ptr %2, i64 %136
  %138 = load double, ptr %137, align 8, !tbaa !19
  %139 = getelementptr inbounds i16, ptr %24, i64 %136
  %140 = load i16, ptr %139, align 2, !tbaa !79
  %141 = trunc i16 %140 to i8
  %142 = fcmp fast ueq double %138, 0.000000e+00
  br i1 %142, label %149, label %143

143:                                              ; preds = %134
  %144 = load i8, ptr %26, align 1, !tbaa !12
  %145 = and i16 %140, 255
  %146 = zext i8 %144 to i16
  %147 = icmp ugt i16 %145, %146
  br i1 %147, label %148, label %149

148:                                              ; preds = %143
  store i8 %141, ptr %26, align 1, !tbaa !12
  br label %149

149:                                              ; preds = %143, %148, %134
  %150 = fadd fast double %138, %63
  %151 = add nuw nsw i32 %62, 1
  br i1 %55, label %152, label %199

152:                                              ; preds = %149
  %153 = load i32, ptr %4, align 4, !tbaa !6
  %154 = load i32, ptr %12, align 4, !tbaa !6
  %155 = add nsw i32 %154, -1
  %156 = icmp slt i32 %153, %155
  br i1 %156, label %176, label %157

157:                                              ; preds = %152
  %158 = icmp eq i32 %153, %155
  br i1 %158, label %159, label %192

159:                                              ; preds = %157
  store i32 0, ptr %4, align 4, !tbaa !6
  %160 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %160, ptr %6, align 4, !tbaa !6
  br i1 %60, label %199, label %161

161:                                              ; preds = %159, %186
  %162 = phi i64 [ %190, %186 ], [ 1, %159 ]
  %163 = getelementptr inbounds i32, ptr %4, i64 %162
  %164 = load i32, ptr %163, align 4, !tbaa !6
  %165 = getelementptr inbounds i32, ptr %12, i64 %162
  %166 = load i32, ptr %165, align 4, !tbaa !6
  %167 = add nsw i32 %166, -1
  %168 = icmp slt i32 %164, %167
  br i1 %168, label %169, label %184

169:                                              ; preds = %161
  br i1 %156, label %176, label %170

170:                                              ; preds = %169
  %171 = getelementptr inbounds i32, ptr %7, i64 %162
  %172 = load i32, ptr %171, align 4, !tbaa !6
  %173 = getelementptr inbounds i32, ptr %6, i64 %162
  %174 = load i32, ptr %173, align 4, !tbaa !6
  %175 = add nsw i32 %174, %172
  store i32 %175, ptr %173, align 4, !tbaa !6
  br label %194

176:                                              ; preds = %152, %169
  %177 = phi i32 [ %164, %169 ], [ %153, %152 ]
  %178 = phi ptr [ %163, %169 ], [ %4, %152 ]
  %179 = phi i64 [ %162, %169 ], [ 0, %152 ]
  %180 = add nsw i32 %177, 1
  store i32 %180, ptr %178, align 4, !tbaa !6
  %181 = getelementptr inbounds i32, ptr %7, i64 %179
  %182 = load i32, ptr %181, align 4, !tbaa !6
  %183 = getelementptr inbounds i32, ptr %6, i64 %179
  br label %194

184:                                              ; preds = %161
  %185 = icmp eq i32 %164, %167
  br i1 %185, label %186, label %192

186:                                              ; preds = %184
  store i32 0, ptr %163, align 4, !tbaa !6
  %187 = getelementptr inbounds i32, ptr %8, i64 %162
  %188 = load i32, ptr %187, align 4, !tbaa !6
  %189 = getelementptr inbounds i32, ptr %6, i64 %162
  store i32 %188, ptr %189, align 4, !tbaa !6
  %190 = add nuw nsw i64 %162, 1
  %191 = icmp eq i64 %190, %58
  br i1 %191, label %199, label %161, !llvm.loop !488

192:                                              ; preds = %157, %184
  %193 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 774, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3089

194:                                              ; preds = %170, %176
  %195 = phi ptr [ %183, %176 ], [ %163, %170 ]
  %196 = phi i32 [ %182, %176 ], [ 1, %170 ]
  %197 = load i32, ptr %195, align 4, !tbaa !6
  %198 = add nsw i32 %197, %196
  store i32 %198, ptr %195, align 4, !tbaa !6
  br label %199

199:                                              ; preds = %186, %194, %159, %149
  %200 = icmp eq i32 %151, %5
  br i1 %200, label %3084, label %61, !llvm.loop !489

201:                                              ; preds = %44, %340
  %202 = phi i32 [ 0, %44 ], [ %289, %340 ]
  %203 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %45, label %204, label %273

204:                                              ; preds = %201, %263
  %205 = phi i32 [ %272, %263 ], [ 0, %201 ]
  %206 = phi i64 [ %214, %263 ], [ %49, %201 ]
  %207 = phi i64 [ %271, %263 ], [ %48, %201 ]
  %208 = phi i32 [ %269, %263 ], [ %203, %201 ]
  %209 = sub i32 %47, %205
  %210 = tail call i32 @llvm.smin.i32(i32 %209, i32 0)
  %211 = sub i32 %209, %210
  %212 = zext i32 %211 to i64
  %213 = add nuw nsw i64 %212, 1
  %214 = add nsw i64 %206, -1
  %215 = icmp ult i32 %211, 31
  br i1 %215, label %251, label %216

216:                                              ; preds = %204
  %217 = and i64 %213, 8589934560
  %218 = sub i64 %207, %217
  br label %219

219:                                              ; preds = %219, %216
  %220 = phi i64 [ 0, %216 ], [ %243, %219 ]
  %221 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %216 ], [ %239, %219 ]
  %222 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %216 ], [ %240, %219 ]
  %223 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %216 ], [ %241, %219 ]
  %224 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %216 ], [ %242, %219 ]
  %225 = sub i64 %207, %220
  %226 = getelementptr inbounds i32, ptr %11, i64 %225
  %227 = getelementptr inbounds i32, ptr %226, i64 -7
  %228 = load <8 x i32>, ptr %227, align 4, !tbaa !6
  %229 = shufflevector <8 x i32> %228, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %230 = getelementptr inbounds i32, ptr %226, i64 -15
  %231 = load <8 x i32>, ptr %230, align 4, !tbaa !6
  %232 = shufflevector <8 x i32> %231, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %233 = getelementptr inbounds i32, ptr %226, i64 -23
  %234 = load <8 x i32>, ptr %233, align 4, !tbaa !6
  %235 = shufflevector <8 x i32> %234, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %236 = getelementptr inbounds i32, ptr %226, i64 -31
  %237 = load <8 x i32>, ptr %236, align 4, !tbaa !6
  %238 = shufflevector <8 x i32> %237, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %239 = mul <8 x i32> %229, %221
  %240 = mul <8 x i32> %232, %222
  %241 = mul <8 x i32> %235, %223
  %242 = mul <8 x i32> %238, %224
  %243 = add nuw i64 %220, 32
  %244 = icmp eq i64 %243, %217
  br i1 %244, label %245, label %219, !llvm.loop !490

245:                                              ; preds = %219
  %246 = mul <8 x i32> %240, %239
  %247 = mul <8 x i32> %241, %246
  %248 = mul <8 x i32> %242, %247
  %249 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %248)
  %250 = icmp eq i64 %213, %217
  br i1 %250, label %263, label %251

251:                                              ; preds = %204, %245
  %252 = phi i64 [ %207, %204 ], [ %218, %245 ]
  %253 = phi i32 [ 1, %204 ], [ %249, %245 ]
  br label %254

254:                                              ; preds = %251, %254
  %255 = phi i64 [ %260, %254 ], [ %252, %251 ]
  %256 = phi i32 [ %259, %254 ], [ %253, %251 ]
  %257 = getelementptr inbounds i32, ptr %11, i64 %255
  %258 = load i32, ptr %257, align 4, !tbaa !6
  %259 = mul nsw i32 %258, %256
  %260 = add nsw i64 %255, -1
  %261 = trunc i64 %255 to i32
  %262 = icmp sgt i32 %261, 0
  br i1 %262, label %254, label %263, !llvm.loop !491

263:                                              ; preds = %254, %245
  %264 = phi i32 [ %249, %245 ], [ %259, %254 ]
  %265 = and i64 %214, 4294967295
  %266 = getelementptr inbounds i32, ptr %6, i64 %265
  %267 = load i32, ptr %266, align 4, !tbaa !6
  %268 = mul nsw i32 %267, %264
  %269 = add nsw i32 %268, %208
  %270 = icmp sgt i64 %206, 2
  %271 = add nsw i64 %207, -1
  %272 = add i32 %205, 1
  br i1 %270, label %204, label %273, !llvm.loop !492

273:                                              ; preds = %263, %201
  %274 = phi i32 [ %203, %201 ], [ %269, %263 ]
  %275 = icmp slt i32 %274, %5
  br i1 %275, label %278, label %276

276:                                              ; preds = %273
  %277 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 774, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3089

278:                                              ; preds = %273
  %279 = sext i32 %274 to i64
  %280 = getelementptr inbounds i16, ptr %24, i64 %279
  %281 = load i16, ptr %280, align 2, !tbaa !79
  %282 = load i8, ptr %26, align 1, !tbaa !12
  %283 = and i16 %281, 255
  %284 = zext i8 %282 to i16
  %285 = icmp ugt i16 %283, %284
  br i1 %285, label %286, label %288

286:                                              ; preds = %278
  %287 = trunc i16 %281 to i8
  store i8 %287, ptr %26, align 1, !tbaa !12
  br label %288

288:                                              ; preds = %278, %286
  %289 = add nuw nsw i32 %202, 1
  br i1 %46, label %290, label %340

290:                                              ; preds = %288
  %291 = load i32, ptr %4, align 4, !tbaa !6
  %292 = load i32, ptr %12, align 4, !tbaa !6
  %293 = add nsw i32 %292, -1
  %294 = icmp slt i32 %291, %293
  br i1 %294, label %317, label %295

295:                                              ; preds = %290
  %296 = icmp eq i32 %291, %293
  br i1 %296, label %297, label %333

297:                                              ; preds = %295
  store i32 0, ptr %4, align 4, !tbaa !6
  %298 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %298, ptr %6, align 4, !tbaa !6
  br i1 %51, label %340, label %299

299:                                              ; preds = %297, %327
  %300 = phi i64 [ %331, %327 ], [ 1, %297 ]
  %301 = getelementptr inbounds i32, ptr %4, i64 %300
  %302 = load i32, ptr %301, align 4, !tbaa !6
  %303 = getelementptr inbounds i32, ptr %12, i64 %300
  %304 = load i32, ptr %303, align 4, !tbaa !6
  %305 = add nsw i32 %304, -1
  %306 = icmp slt i32 %302, %305
  br i1 %306, label %307, label %325

307:                                              ; preds = %299
  br i1 %294, label %317, label %308

308:                                              ; preds = %307
  %309 = shl i64 %300, 32
  %310 = add i64 %309, -4294967296
  %311 = ashr exact i64 %310, 32
  %312 = getelementptr inbounds i32, ptr %7, i64 %311
  %313 = load i32, ptr %312, align 4, !tbaa !6
  %314 = getelementptr inbounds i32, ptr %6, i64 %300
  %315 = load i32, ptr %314, align 4, !tbaa !6
  %316 = add nsw i32 %315, %313
  store i32 %316, ptr %314, align 4, !tbaa !6
  br label %335

317:                                              ; preds = %290, %307
  %318 = phi i32 [ %302, %307 ], [ %291, %290 ]
  %319 = phi ptr [ %301, %307 ], [ %4, %290 ]
  %320 = phi i64 [ %300, %307 ], [ 0, %290 ]
  %321 = add nsw i32 %318, 1
  store i32 %321, ptr %319, align 4, !tbaa !6
  %322 = getelementptr inbounds i32, ptr %7, i64 %320
  %323 = load i32, ptr %322, align 4, !tbaa !6
  %324 = getelementptr inbounds i32, ptr %6, i64 %320
  br label %335

325:                                              ; preds = %299
  %326 = icmp eq i32 %302, %305
  br i1 %326, label %327, label %333

327:                                              ; preds = %325
  store i32 0, ptr %301, align 4, !tbaa !6
  %328 = getelementptr inbounds i32, ptr %8, i64 %300
  %329 = load i32, ptr %328, align 4, !tbaa !6
  %330 = getelementptr inbounds i32, ptr %6, i64 %300
  store i32 %329, ptr %330, align 4, !tbaa !6
  %331 = add nuw nsw i64 %300, 1
  %332 = icmp eq i64 %331, %49
  br i1 %332, label %340, label %299, !llvm.loop !493

333:                                              ; preds = %295, %325
  %334 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 774, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3089

335:                                              ; preds = %308, %317
  %336 = phi ptr [ %324, %317 ], [ %301, %308 ]
  %337 = phi i32 [ %323, %317 ], [ 1, %308 ]
  %338 = load i32, ptr %336, align 4, !tbaa !6
  %339 = add nsw i32 %338, %337
  store i32 %339, ptr %336, align 4, !tbaa !6
  br label %340

340:                                              ; preds = %327, %335, %297, %288
  %341 = icmp eq i32 %289, %5
  br i1 %341, label %3084, label %201, !llvm.loop !494

342:                                              ; preds = %37
  %343 = getelementptr inbounds i32, ptr %3, i64 %19
  %344 = load i32, ptr %343, align 4, !tbaa !6
  %345 = icmp eq i32 %344, 0
  %346 = icmp sgt i32 %5, 0
  br i1 %345, label %356, label %347

347:                                              ; preds = %342
  br i1 %346, label %348, label %3084

348:                                              ; preds = %347
  %349 = icmp sgt i32 %13, 1
  %350 = icmp sgt i32 %13, 0
  %351 = add i32 %13, -2
  %352 = zext i32 %351 to i64
  %353 = zext i32 %13 to i64
  %354 = add nuw i32 %5, 1
  %355 = icmp eq i32 %13, 1
  br label %501

356:                                              ; preds = %342
  br i1 %346, label %357, label %3084

357:                                              ; preds = %356
  %358 = icmp sgt i32 %13, 1
  %359 = icmp sgt i32 %13, 0
  %360 = add i32 %13, -2
  %361 = zext i32 %360 to i64
  %362 = zext i32 %13 to i64
  %363 = add nuw i32 %5, 1
  %364 = icmp eq i32 %13, 1
  br label %365

365:                                              ; preds = %357, %499
  %366 = phi i32 [ 0, %357 ], [ %451, %499 ]
  %367 = phi double [ 0.000000e+00, %357 ], [ %450, %499 ]
  %368 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %358, label %369, label %438

369:                                              ; preds = %365, %428
  %370 = phi i32 [ %437, %428 ], [ 0, %365 ]
  %371 = phi i64 [ %379, %428 ], [ %362, %365 ]
  %372 = phi i64 [ %436, %428 ], [ %361, %365 ]
  %373 = phi i32 [ %434, %428 ], [ %368, %365 ]
  %374 = sub i32 %360, %370
  %375 = tail call i32 @llvm.smin.i32(i32 %374, i32 0)
  %376 = sub i32 %374, %375
  %377 = zext i32 %376 to i64
  %378 = add nuw nsw i64 %377, 1
  %379 = add nsw i64 %371, -1
  %380 = icmp ult i32 %376, 31
  br i1 %380, label %416, label %381

381:                                              ; preds = %369
  %382 = and i64 %378, 8589934560
  %383 = sub i64 %372, %382
  br label %384

384:                                              ; preds = %384, %381
  %385 = phi i64 [ 0, %381 ], [ %408, %384 ]
  %386 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %381 ], [ %404, %384 ]
  %387 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %381 ], [ %405, %384 ]
  %388 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %381 ], [ %406, %384 ]
  %389 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %381 ], [ %407, %384 ]
  %390 = sub i64 %372, %385
  %391 = getelementptr inbounds i32, ptr %9, i64 %390
  %392 = getelementptr inbounds i32, ptr %391, i64 -7
  %393 = load <8 x i32>, ptr %392, align 4, !tbaa !6
  %394 = shufflevector <8 x i32> %393, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %395 = getelementptr inbounds i32, ptr %391, i64 -15
  %396 = load <8 x i32>, ptr %395, align 4, !tbaa !6
  %397 = shufflevector <8 x i32> %396, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %398 = getelementptr inbounds i32, ptr %391, i64 -23
  %399 = load <8 x i32>, ptr %398, align 4, !tbaa !6
  %400 = shufflevector <8 x i32> %399, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %401 = getelementptr inbounds i32, ptr %391, i64 -31
  %402 = load <8 x i32>, ptr %401, align 4, !tbaa !6
  %403 = shufflevector <8 x i32> %402, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %404 = mul <8 x i32> %394, %386
  %405 = mul <8 x i32> %397, %387
  %406 = mul <8 x i32> %400, %388
  %407 = mul <8 x i32> %403, %389
  %408 = add nuw i64 %385, 32
  %409 = icmp eq i64 %408, %382
  br i1 %409, label %410, label %384, !llvm.loop !495

410:                                              ; preds = %384
  %411 = mul <8 x i32> %405, %404
  %412 = mul <8 x i32> %406, %411
  %413 = mul <8 x i32> %407, %412
  %414 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %413)
  %415 = icmp eq i64 %378, %382
  br i1 %415, label %428, label %416

416:                                              ; preds = %369, %410
  %417 = phi i64 [ %372, %369 ], [ %383, %410 ]
  %418 = phi i32 [ 1, %369 ], [ %414, %410 ]
  br label %419

419:                                              ; preds = %416, %419
  %420 = phi i64 [ %425, %419 ], [ %417, %416 ]
  %421 = phi i32 [ %424, %419 ], [ %418, %416 ]
  %422 = getelementptr inbounds i32, ptr %9, i64 %420
  %423 = load i32, ptr %422, align 4, !tbaa !6
  %424 = mul nsw i32 %423, %421
  %425 = add nsw i64 %420, -1
  %426 = trunc i64 %420 to i32
  %427 = icmp sgt i32 %426, 0
  br i1 %427, label %419, label %428, !llvm.loop !496

428:                                              ; preds = %419, %410
  %429 = phi i32 [ %414, %410 ], [ %424, %419 ]
  %430 = and i64 %379, 4294967295
  %431 = getelementptr inbounds i32, ptr %6, i64 %430
  %432 = load i32, ptr %431, align 4, !tbaa !6
  %433 = mul nsw i32 %432, %429
  %434 = add nsw i32 %433, %373
  %435 = icmp sgt i64 %371, 2
  %436 = add nsw i64 %372, -1
  %437 = add i32 %370, 1
  br i1 %435, label %369, label %438, !llvm.loop !497

438:                                              ; preds = %428, %365
  %439 = phi i32 [ %368, %365 ], [ %434, %428 ]
  %440 = sext i32 %439 to i64
  %441 = getelementptr inbounds i16, ptr %24, i64 %440
  %442 = load i16, ptr %441, align 2, !tbaa !79
  %443 = load i8, ptr %26, align 1, !tbaa !12
  %444 = and i16 %442, 255
  %445 = zext i8 %443 to i16
  %446 = icmp ugt i16 %444, %445
  br i1 %446, label %447, label %449

447:                                              ; preds = %438
  %448 = trunc i16 %442 to i8
  store i8 %448, ptr %26, align 1, !tbaa !12
  br label %449

449:                                              ; preds = %447, %438
  %450 = fadd fast double %367, 1.000000e+00
  %451 = add nuw nsw i32 %366, 1
  br i1 %359, label %452, label %499

452:                                              ; preds = %449
  %453 = load i32, ptr %4, align 4, !tbaa !6
  %454 = load i32, ptr %12, align 4, !tbaa !6
  %455 = add nsw i32 %454, -1
  %456 = icmp slt i32 %453, %455
  br i1 %456, label %476, label %457

457:                                              ; preds = %452
  %458 = icmp eq i32 %453, %455
  br i1 %458, label %459, label %492

459:                                              ; preds = %457
  store i32 0, ptr %4, align 4, !tbaa !6
  %460 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %460, ptr %6, align 4, !tbaa !6
  br i1 %364, label %499, label %461

461:                                              ; preds = %459, %486
  %462 = phi i64 [ %490, %486 ], [ 1, %459 ]
  %463 = getelementptr inbounds i32, ptr %4, i64 %462
  %464 = load i32, ptr %463, align 4, !tbaa !6
  %465 = getelementptr inbounds i32, ptr %12, i64 %462
  %466 = load i32, ptr %465, align 4, !tbaa !6
  %467 = add nsw i32 %466, -1
  %468 = icmp slt i32 %464, %467
  br i1 %468, label %469, label %484

469:                                              ; preds = %461
  br i1 %456, label %476, label %470

470:                                              ; preds = %469
  %471 = getelementptr inbounds i32, ptr %7, i64 %462
  %472 = load i32, ptr %471, align 4, !tbaa !6
  %473 = getelementptr inbounds i32, ptr %6, i64 %462
  %474 = load i32, ptr %473, align 4, !tbaa !6
  %475 = add nsw i32 %474, %472
  store i32 %475, ptr %473, align 4, !tbaa !6
  br label %494

476:                                              ; preds = %452, %469
  %477 = phi i32 [ %464, %469 ], [ %453, %452 ]
  %478 = phi ptr [ %463, %469 ], [ %4, %452 ]
  %479 = phi i64 [ %462, %469 ], [ 0, %452 ]
  %480 = add nsw i32 %477, 1
  store i32 %480, ptr %478, align 4, !tbaa !6
  %481 = getelementptr inbounds i32, ptr %7, i64 %479
  %482 = load i32, ptr %481, align 4, !tbaa !6
  %483 = getelementptr inbounds i32, ptr %6, i64 %479
  br label %494

484:                                              ; preds = %461
  %485 = icmp eq i32 %464, %467
  br i1 %485, label %486, label %492

486:                                              ; preds = %484
  store i32 0, ptr %463, align 4, !tbaa !6
  %487 = getelementptr inbounds i32, ptr %8, i64 %462
  %488 = load i32, ptr %487, align 4, !tbaa !6
  %489 = getelementptr inbounds i32, ptr %6, i64 %462
  store i32 %488, ptr %489, align 4, !tbaa !6
  %490 = add nuw nsw i64 %462, 1
  %491 = icmp eq i64 %490, %362
  br i1 %491, label %499, label %461, !llvm.loop !498

492:                                              ; preds = %457, %484
  %493 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 774, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3089

494:                                              ; preds = %470, %476
  %495 = phi ptr [ %483, %476 ], [ %463, %470 ]
  %496 = phi i32 [ %482, %476 ], [ 1, %470 ]
  %497 = load i32, ptr %495, align 4, !tbaa !6
  %498 = add nsw i32 %497, %496
  store i32 %498, ptr %495, align 4, !tbaa !6
  br label %499

499:                                              ; preds = %486, %494, %459, %449
  %500 = icmp eq i32 %451, %5
  br i1 %500, label %3084, label %365, !llvm.loop !499

501:                                              ; preds = %348, %640
  %502 = phi i32 [ 0, %348 ], [ %589, %640 ]
  %503 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %349, label %504, label %573

504:                                              ; preds = %501, %563
  %505 = phi i32 [ %572, %563 ], [ 0, %501 ]
  %506 = phi i64 [ %514, %563 ], [ %353, %501 ]
  %507 = phi i64 [ %571, %563 ], [ %352, %501 ]
  %508 = phi i32 [ %569, %563 ], [ %503, %501 ]
  %509 = sub i32 %351, %505
  %510 = tail call i32 @llvm.smin.i32(i32 %509, i32 0)
  %511 = sub i32 %509, %510
  %512 = zext i32 %511 to i64
  %513 = add nuw nsw i64 %512, 1
  %514 = add nsw i64 %506, -1
  %515 = icmp ult i32 %511, 31
  br i1 %515, label %551, label %516

516:                                              ; preds = %504
  %517 = and i64 %513, 8589934560
  %518 = sub i64 %507, %517
  br label %519

519:                                              ; preds = %519, %516
  %520 = phi i64 [ 0, %516 ], [ %543, %519 ]
  %521 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %516 ], [ %539, %519 ]
  %522 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %516 ], [ %540, %519 ]
  %523 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %516 ], [ %541, %519 ]
  %524 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %516 ], [ %542, %519 ]
  %525 = sub i64 %507, %520
  %526 = getelementptr inbounds i32, ptr %11, i64 %525
  %527 = getelementptr inbounds i32, ptr %526, i64 -7
  %528 = load <8 x i32>, ptr %527, align 4, !tbaa !6
  %529 = shufflevector <8 x i32> %528, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %530 = getelementptr inbounds i32, ptr %526, i64 -15
  %531 = load <8 x i32>, ptr %530, align 4, !tbaa !6
  %532 = shufflevector <8 x i32> %531, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %533 = getelementptr inbounds i32, ptr %526, i64 -23
  %534 = load <8 x i32>, ptr %533, align 4, !tbaa !6
  %535 = shufflevector <8 x i32> %534, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %536 = getelementptr inbounds i32, ptr %526, i64 -31
  %537 = load <8 x i32>, ptr %536, align 4, !tbaa !6
  %538 = shufflevector <8 x i32> %537, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %539 = mul <8 x i32> %529, %521
  %540 = mul <8 x i32> %532, %522
  %541 = mul <8 x i32> %535, %523
  %542 = mul <8 x i32> %538, %524
  %543 = add nuw i64 %520, 32
  %544 = icmp eq i64 %543, %517
  br i1 %544, label %545, label %519, !llvm.loop !500

545:                                              ; preds = %519
  %546 = mul <8 x i32> %540, %539
  %547 = mul <8 x i32> %541, %546
  %548 = mul <8 x i32> %542, %547
  %549 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %548)
  %550 = icmp eq i64 %513, %517
  br i1 %550, label %563, label %551

551:                                              ; preds = %504, %545
  %552 = phi i64 [ %507, %504 ], [ %518, %545 ]
  %553 = phi i32 [ 1, %504 ], [ %549, %545 ]
  br label %554

554:                                              ; preds = %551, %554
  %555 = phi i64 [ %560, %554 ], [ %552, %551 ]
  %556 = phi i32 [ %559, %554 ], [ %553, %551 ]
  %557 = getelementptr inbounds i32, ptr %11, i64 %555
  %558 = load i32, ptr %557, align 4, !tbaa !6
  %559 = mul nsw i32 %558, %556
  %560 = add nsw i64 %555, -1
  %561 = trunc i64 %555 to i32
  %562 = icmp sgt i32 %561, 0
  br i1 %562, label %554, label %563, !llvm.loop !501

563:                                              ; preds = %554, %545
  %564 = phi i32 [ %549, %545 ], [ %559, %554 ]
  %565 = and i64 %514, 4294967295
  %566 = getelementptr inbounds i32, ptr %6, i64 %565
  %567 = load i32, ptr %566, align 4, !tbaa !6
  %568 = mul nsw i32 %567, %564
  %569 = add nsw i32 %568, %508
  %570 = icmp sgt i64 %506, 2
  %571 = add nsw i64 %507, -1
  %572 = add i32 %505, 1
  br i1 %570, label %504, label %573, !llvm.loop !502

573:                                              ; preds = %563, %501
  %574 = phi i32 [ %503, %501 ], [ %569, %563 ]
  %575 = icmp slt i32 %574, %5
  br i1 %575, label %578, label %576

576:                                              ; preds = %573
  %577 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 774, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3089

578:                                              ; preds = %573
  %579 = sext i32 %574 to i64
  %580 = getelementptr inbounds i16, ptr %24, i64 %579
  %581 = load i16, ptr %580, align 2, !tbaa !79
  %582 = load i8, ptr %26, align 1, !tbaa !12
  %583 = and i16 %581, 255
  %584 = zext i8 %582 to i16
  %585 = icmp ugt i16 %583, %584
  br i1 %585, label %586, label %588

586:                                              ; preds = %578
  %587 = trunc i16 %581 to i8
  store i8 %587, ptr %26, align 1, !tbaa !12
  br label %588

588:                                              ; preds = %586, %578
  %589 = add nuw nsw i32 %502, 1
  br i1 %350, label %590, label %640

590:                                              ; preds = %588
  %591 = load i32, ptr %4, align 4, !tbaa !6
  %592 = load i32, ptr %12, align 4, !tbaa !6
  %593 = add nsw i32 %592, -1
  %594 = icmp slt i32 %591, %593
  br i1 %594, label %617, label %595

595:                                              ; preds = %590
  %596 = icmp eq i32 %591, %593
  br i1 %596, label %597, label %633

597:                                              ; preds = %595
  store i32 0, ptr %4, align 4, !tbaa !6
  %598 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %598, ptr %6, align 4, !tbaa !6
  br i1 %355, label %640, label %599

599:                                              ; preds = %597, %627
  %600 = phi i64 [ %631, %627 ], [ 1, %597 ]
  %601 = getelementptr inbounds i32, ptr %4, i64 %600
  %602 = load i32, ptr %601, align 4, !tbaa !6
  %603 = getelementptr inbounds i32, ptr %12, i64 %600
  %604 = load i32, ptr %603, align 4, !tbaa !6
  %605 = add nsw i32 %604, -1
  %606 = icmp slt i32 %602, %605
  br i1 %606, label %607, label %625

607:                                              ; preds = %599
  br i1 %594, label %617, label %608

608:                                              ; preds = %607
  %609 = shl i64 %600, 32
  %610 = add i64 %609, -4294967296
  %611 = ashr exact i64 %610, 32
  %612 = getelementptr inbounds i32, ptr %7, i64 %611
  %613 = load i32, ptr %612, align 4, !tbaa !6
  %614 = getelementptr inbounds i32, ptr %6, i64 %600
  %615 = load i32, ptr %614, align 4, !tbaa !6
  %616 = add nsw i32 %615, %613
  store i32 %616, ptr %614, align 4, !tbaa !6
  br label %635

617:                                              ; preds = %590, %607
  %618 = phi i32 [ %602, %607 ], [ %591, %590 ]
  %619 = phi ptr [ %601, %607 ], [ %4, %590 ]
  %620 = phi i64 [ %600, %607 ], [ 0, %590 ]
  %621 = add nsw i32 %618, 1
  store i32 %621, ptr %619, align 4, !tbaa !6
  %622 = getelementptr inbounds i32, ptr %7, i64 %620
  %623 = load i32, ptr %622, align 4, !tbaa !6
  %624 = getelementptr inbounds i32, ptr %6, i64 %620
  br label %635

625:                                              ; preds = %599
  %626 = icmp eq i32 %602, %605
  br i1 %626, label %627, label %633

627:                                              ; preds = %625
  store i32 0, ptr %601, align 4, !tbaa !6
  %628 = getelementptr inbounds i32, ptr %8, i64 %600
  %629 = load i32, ptr %628, align 4, !tbaa !6
  %630 = getelementptr inbounds i32, ptr %6, i64 %600
  store i32 %629, ptr %630, align 4, !tbaa !6
  %631 = add nuw nsw i64 %600, 1
  %632 = icmp eq i64 %631, %353
  br i1 %632, label %640, label %599, !llvm.loop !503

633:                                              ; preds = %595, %625
  %634 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 774, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3089

635:                                              ; preds = %608, %617
  %636 = phi ptr [ %624, %617 ], [ %601, %608 ]
  %637 = phi i32 [ %623, %617 ], [ 1, %608 ]
  %638 = load i32, ptr %636, align 4, !tbaa !6
  %639 = add nsw i32 %638, %637
  store i32 %639, ptr %636, align 4, !tbaa !6
  br label %640

640:                                              ; preds = %627, %635, %597, %588
  %641 = icmp eq i32 %589, %5
  br i1 %641, label %3084, label %501, !llvm.loop !504

642:                                              ; preds = %37
  %643 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 774, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3084

644:                                              ; preds = %18
  %645 = getelementptr inbounds ptr, ptr %14, i64 %19
  %646 = load ptr, ptr %645, align 8, !tbaa !10
  %647 = getelementptr inbounds ptr, ptr %16, i64 %19
  %648 = load ptr, ptr %647, align 8, !tbaa !10
  %649 = load i16, ptr %646, align 2, !tbaa !79
  %650 = sext i16 %649 to i32
  store i32 %650, ptr %648, align 4, !tbaa !6
  %651 = icmp eq i32 %13, 0
  br i1 %651, label %3084, label %652

652:                                              ; preds = %644
  switch i32 %1, label %1249 [
    i32 1, label %653
    i32 0, label %953
  ]

653:                                              ; preds = %652
  %654 = getelementptr inbounds i32, ptr %3, i64 %19
  %655 = load i32, ptr %654, align 4, !tbaa !6
  %656 = icmp eq i32 %655, 0
  %657 = icmp sgt i32 %5, 0
  br i1 %656, label %667, label %658

658:                                              ; preds = %653
  br i1 %657, label %659, label %3084

659:                                              ; preds = %658
  %660 = icmp sgt i32 %13, 1
  %661 = icmp sgt i32 %13, 0
  %662 = add i32 %13, -2
  %663 = zext i32 %662 to i64
  %664 = zext i32 %13 to i64
  %665 = add nuw i32 %5, 1
  %666 = icmp eq i32 %13, 1
  br label %814

667:                                              ; preds = %653
  br i1 %657, label %668, label %3084

668:                                              ; preds = %667
  %669 = icmp sgt i32 %13, 1
  %670 = icmp sgt i32 %13, 0
  %671 = add i32 %13, -2
  %672 = zext i32 %671 to i64
  %673 = zext i32 %13 to i64
  %674 = add nuw i32 %5, 1
  %675 = icmp eq i32 %13, 1
  br label %676

676:                                              ; preds = %668, %812
  %677 = phi i32 [ 0, %668 ], [ %764, %812 ]
  %678 = phi double [ 0.000000e+00, %668 ], [ %763, %812 ]
  %679 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %669, label %680, label %749

680:                                              ; preds = %676, %739
  %681 = phi i32 [ %748, %739 ], [ 0, %676 ]
  %682 = phi i64 [ %690, %739 ], [ %673, %676 ]
  %683 = phi i64 [ %747, %739 ], [ %672, %676 ]
  %684 = phi i32 [ %745, %739 ], [ %679, %676 ]
  %685 = sub i32 %671, %681
  %686 = tail call i32 @llvm.smin.i32(i32 %685, i32 0)
  %687 = sub i32 %685, %686
  %688 = zext i32 %687 to i64
  %689 = add nuw nsw i64 %688, 1
  %690 = add nsw i64 %682, -1
  %691 = icmp ult i32 %687, 31
  br i1 %691, label %727, label %692

692:                                              ; preds = %680
  %693 = and i64 %689, 8589934560
  %694 = sub i64 %683, %693
  br label %695

695:                                              ; preds = %695, %692
  %696 = phi i64 [ 0, %692 ], [ %719, %695 ]
  %697 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %692 ], [ %715, %695 ]
  %698 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %692 ], [ %716, %695 ]
  %699 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %692 ], [ %717, %695 ]
  %700 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %692 ], [ %718, %695 ]
  %701 = sub i64 %683, %696
  %702 = getelementptr inbounds i32, ptr %9, i64 %701
  %703 = getelementptr inbounds i32, ptr %702, i64 -7
  %704 = load <8 x i32>, ptr %703, align 4, !tbaa !6
  %705 = shufflevector <8 x i32> %704, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %706 = getelementptr inbounds i32, ptr %702, i64 -15
  %707 = load <8 x i32>, ptr %706, align 4, !tbaa !6
  %708 = shufflevector <8 x i32> %707, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %709 = getelementptr inbounds i32, ptr %702, i64 -23
  %710 = load <8 x i32>, ptr %709, align 4, !tbaa !6
  %711 = shufflevector <8 x i32> %710, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %712 = getelementptr inbounds i32, ptr %702, i64 -31
  %713 = load <8 x i32>, ptr %712, align 4, !tbaa !6
  %714 = shufflevector <8 x i32> %713, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %715 = mul <8 x i32> %705, %697
  %716 = mul <8 x i32> %708, %698
  %717 = mul <8 x i32> %711, %699
  %718 = mul <8 x i32> %714, %700
  %719 = add nuw i64 %696, 32
  %720 = icmp eq i64 %719, %693
  br i1 %720, label %721, label %695, !llvm.loop !505

721:                                              ; preds = %695
  %722 = mul <8 x i32> %716, %715
  %723 = mul <8 x i32> %717, %722
  %724 = mul <8 x i32> %718, %723
  %725 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %724)
  %726 = icmp eq i64 %689, %693
  br i1 %726, label %739, label %727

727:                                              ; preds = %680, %721
  %728 = phi i64 [ %683, %680 ], [ %694, %721 ]
  %729 = phi i32 [ 1, %680 ], [ %725, %721 ]
  br label %730

730:                                              ; preds = %727, %730
  %731 = phi i64 [ %736, %730 ], [ %728, %727 ]
  %732 = phi i32 [ %735, %730 ], [ %729, %727 ]
  %733 = getelementptr inbounds i32, ptr %9, i64 %731
  %734 = load i32, ptr %733, align 4, !tbaa !6
  %735 = mul nsw i32 %734, %732
  %736 = add nsw i64 %731, -1
  %737 = trunc i64 %731 to i32
  %738 = icmp sgt i32 %737, 0
  br i1 %738, label %730, label %739, !llvm.loop !506

739:                                              ; preds = %730, %721
  %740 = phi i32 [ %725, %721 ], [ %735, %730 ]
  %741 = and i64 %690, 4294967295
  %742 = getelementptr inbounds i32, ptr %6, i64 %741
  %743 = load i32, ptr %742, align 4, !tbaa !6
  %744 = mul nsw i32 %743, %740
  %745 = add nsw i32 %744, %684
  %746 = icmp sgt i64 %682, 2
  %747 = add nsw i64 %683, -1
  %748 = add i32 %681, 1
  br i1 %746, label %680, label %749, !llvm.loop !507

749:                                              ; preds = %739, %676
  %750 = phi i32 [ %679, %676 ], [ %745, %739 ]
  %751 = sext i32 %750 to i64
  %752 = getelementptr inbounds double, ptr %2, i64 %751
  %753 = load double, ptr %752, align 8, !tbaa !19
  %754 = getelementptr inbounds i16, ptr %646, i64 %751
  %755 = load i16, ptr %754, align 2, !tbaa !79
  %756 = sext i16 %755 to i32
  %757 = fcmp fast ueq double %753, 0.000000e+00
  br i1 %757, label %762, label %758

758:                                              ; preds = %749
  %759 = load i32, ptr %648, align 4, !tbaa !6
  %760 = icmp slt i32 %759, %756
  br i1 %760, label %761, label %762

761:                                              ; preds = %758
  store i32 %756, ptr %648, align 4, !tbaa !6
  br label %762

762:                                              ; preds = %758, %761, %749
  %763 = fadd fast double %753, %678
  %764 = add nuw nsw i32 %677, 1
  br i1 %670, label %765, label %812

765:                                              ; preds = %762
  %766 = load i32, ptr %4, align 4, !tbaa !6
  %767 = load i32, ptr %12, align 4, !tbaa !6
  %768 = add nsw i32 %767, -1
  %769 = icmp slt i32 %766, %768
  br i1 %769, label %789, label %770

770:                                              ; preds = %765
  %771 = icmp eq i32 %766, %768
  br i1 %771, label %772, label %805

772:                                              ; preds = %770
  store i32 0, ptr %4, align 4, !tbaa !6
  %773 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %773, ptr %6, align 4, !tbaa !6
  br i1 %675, label %812, label %774

774:                                              ; preds = %772, %799
  %775 = phi i64 [ %803, %799 ], [ 1, %772 ]
  %776 = getelementptr inbounds i32, ptr %4, i64 %775
  %777 = load i32, ptr %776, align 4, !tbaa !6
  %778 = getelementptr inbounds i32, ptr %12, i64 %775
  %779 = load i32, ptr %778, align 4, !tbaa !6
  %780 = add nsw i32 %779, -1
  %781 = icmp slt i32 %777, %780
  br i1 %781, label %782, label %797

782:                                              ; preds = %774
  br i1 %769, label %789, label %783

783:                                              ; preds = %782
  %784 = getelementptr inbounds i32, ptr %7, i64 %775
  %785 = load i32, ptr %784, align 4, !tbaa !6
  %786 = getelementptr inbounds i32, ptr %6, i64 %775
  %787 = load i32, ptr %786, align 4, !tbaa !6
  %788 = add nsw i32 %787, %785
  store i32 %788, ptr %786, align 4, !tbaa !6
  br label %807

789:                                              ; preds = %765, %782
  %790 = phi i32 [ %777, %782 ], [ %766, %765 ]
  %791 = phi ptr [ %776, %782 ], [ %4, %765 ]
  %792 = phi i64 [ %775, %782 ], [ 0, %765 ]
  %793 = add nsw i32 %790, 1
  store i32 %793, ptr %791, align 4, !tbaa !6
  %794 = getelementptr inbounds i32, ptr %7, i64 %792
  %795 = load i32, ptr %794, align 4, !tbaa !6
  %796 = getelementptr inbounds i32, ptr %6, i64 %792
  br label %807

797:                                              ; preds = %774
  %798 = icmp eq i32 %777, %780
  br i1 %798, label %799, label %805

799:                                              ; preds = %797
  store i32 0, ptr %776, align 4, !tbaa !6
  %800 = getelementptr inbounds i32, ptr %8, i64 %775
  %801 = load i32, ptr %800, align 4, !tbaa !6
  %802 = getelementptr inbounds i32, ptr %6, i64 %775
  store i32 %801, ptr %802, align 4, !tbaa !6
  %803 = add nuw nsw i64 %775, 1
  %804 = icmp eq i64 %803, %673
  br i1 %804, label %812, label %774, !llvm.loop !508

805:                                              ; preds = %770, %797
  %806 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 777, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3089

807:                                              ; preds = %783, %789
  %808 = phi ptr [ %796, %789 ], [ %776, %783 ]
  %809 = phi i32 [ %795, %789 ], [ 1, %783 ]
  %810 = load i32, ptr %808, align 4, !tbaa !6
  %811 = add nsw i32 %810, %809
  store i32 %811, ptr %808, align 4, !tbaa !6
  br label %812

812:                                              ; preds = %799, %807, %772, %762
  %813 = icmp eq i32 %764, %5
  br i1 %813, label %3084, label %676, !llvm.loop !509

814:                                              ; preds = %659, %951
  %815 = phi i32 [ 0, %659 ], [ %900, %951 ]
  %816 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %660, label %817, label %886

817:                                              ; preds = %814, %876
  %818 = phi i32 [ %885, %876 ], [ 0, %814 ]
  %819 = phi i64 [ %827, %876 ], [ %664, %814 ]
  %820 = phi i64 [ %884, %876 ], [ %663, %814 ]
  %821 = phi i32 [ %882, %876 ], [ %816, %814 ]
  %822 = sub i32 %662, %818
  %823 = tail call i32 @llvm.smin.i32(i32 %822, i32 0)
  %824 = sub i32 %822, %823
  %825 = zext i32 %824 to i64
  %826 = add nuw nsw i64 %825, 1
  %827 = add nsw i64 %819, -1
  %828 = icmp ult i32 %824, 31
  br i1 %828, label %864, label %829

829:                                              ; preds = %817
  %830 = and i64 %826, 8589934560
  %831 = sub i64 %820, %830
  br label %832

832:                                              ; preds = %832, %829
  %833 = phi i64 [ 0, %829 ], [ %856, %832 ]
  %834 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %829 ], [ %852, %832 ]
  %835 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %829 ], [ %853, %832 ]
  %836 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %829 ], [ %854, %832 ]
  %837 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %829 ], [ %855, %832 ]
  %838 = sub i64 %820, %833
  %839 = getelementptr inbounds i32, ptr %11, i64 %838
  %840 = getelementptr inbounds i32, ptr %839, i64 -7
  %841 = load <8 x i32>, ptr %840, align 4, !tbaa !6
  %842 = shufflevector <8 x i32> %841, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %843 = getelementptr inbounds i32, ptr %839, i64 -15
  %844 = load <8 x i32>, ptr %843, align 4, !tbaa !6
  %845 = shufflevector <8 x i32> %844, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %846 = getelementptr inbounds i32, ptr %839, i64 -23
  %847 = load <8 x i32>, ptr %846, align 4, !tbaa !6
  %848 = shufflevector <8 x i32> %847, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %849 = getelementptr inbounds i32, ptr %839, i64 -31
  %850 = load <8 x i32>, ptr %849, align 4, !tbaa !6
  %851 = shufflevector <8 x i32> %850, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %852 = mul <8 x i32> %842, %834
  %853 = mul <8 x i32> %845, %835
  %854 = mul <8 x i32> %848, %836
  %855 = mul <8 x i32> %851, %837
  %856 = add nuw i64 %833, 32
  %857 = icmp eq i64 %856, %830
  br i1 %857, label %858, label %832, !llvm.loop !510

858:                                              ; preds = %832
  %859 = mul <8 x i32> %853, %852
  %860 = mul <8 x i32> %854, %859
  %861 = mul <8 x i32> %855, %860
  %862 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %861)
  %863 = icmp eq i64 %826, %830
  br i1 %863, label %876, label %864

864:                                              ; preds = %817, %858
  %865 = phi i64 [ %820, %817 ], [ %831, %858 ]
  %866 = phi i32 [ 1, %817 ], [ %862, %858 ]
  br label %867

867:                                              ; preds = %864, %867
  %868 = phi i64 [ %873, %867 ], [ %865, %864 ]
  %869 = phi i32 [ %872, %867 ], [ %866, %864 ]
  %870 = getelementptr inbounds i32, ptr %11, i64 %868
  %871 = load i32, ptr %870, align 4, !tbaa !6
  %872 = mul nsw i32 %871, %869
  %873 = add nsw i64 %868, -1
  %874 = trunc i64 %868 to i32
  %875 = icmp sgt i32 %874, 0
  br i1 %875, label %867, label %876, !llvm.loop !511

876:                                              ; preds = %867, %858
  %877 = phi i32 [ %862, %858 ], [ %872, %867 ]
  %878 = and i64 %827, 4294967295
  %879 = getelementptr inbounds i32, ptr %6, i64 %878
  %880 = load i32, ptr %879, align 4, !tbaa !6
  %881 = mul nsw i32 %880, %877
  %882 = add nsw i32 %881, %821
  %883 = icmp sgt i64 %819, 2
  %884 = add nsw i64 %820, -1
  %885 = add i32 %818, 1
  br i1 %883, label %817, label %886, !llvm.loop !512

886:                                              ; preds = %876, %814
  %887 = phi i32 [ %816, %814 ], [ %882, %876 ]
  %888 = icmp slt i32 %887, %5
  br i1 %888, label %891, label %889

889:                                              ; preds = %886
  %890 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 777, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3089

891:                                              ; preds = %886
  %892 = sext i32 %887 to i64
  %893 = getelementptr inbounds i16, ptr %646, i64 %892
  %894 = load i16, ptr %893, align 2, !tbaa !79
  %895 = sext i16 %894 to i32
  %896 = load i32, ptr %648, align 4, !tbaa !6
  %897 = icmp slt i32 %896, %895
  br i1 %897, label %898, label %899

898:                                              ; preds = %891
  store i32 %895, ptr %648, align 4, !tbaa !6
  br label %899

899:                                              ; preds = %891, %898
  %900 = add nuw nsw i32 %815, 1
  br i1 %661, label %901, label %951

901:                                              ; preds = %899
  %902 = load i32, ptr %4, align 4, !tbaa !6
  %903 = load i32, ptr %12, align 4, !tbaa !6
  %904 = add nsw i32 %903, -1
  %905 = icmp slt i32 %902, %904
  br i1 %905, label %928, label %906

906:                                              ; preds = %901
  %907 = icmp eq i32 %902, %904
  br i1 %907, label %908, label %944

908:                                              ; preds = %906
  store i32 0, ptr %4, align 4, !tbaa !6
  %909 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %909, ptr %6, align 4, !tbaa !6
  br i1 %666, label %951, label %910

910:                                              ; preds = %908, %938
  %911 = phi i64 [ %942, %938 ], [ 1, %908 ]
  %912 = getelementptr inbounds i32, ptr %4, i64 %911
  %913 = load i32, ptr %912, align 4, !tbaa !6
  %914 = getelementptr inbounds i32, ptr %12, i64 %911
  %915 = load i32, ptr %914, align 4, !tbaa !6
  %916 = add nsw i32 %915, -1
  %917 = icmp slt i32 %913, %916
  br i1 %917, label %918, label %936

918:                                              ; preds = %910
  br i1 %905, label %928, label %919

919:                                              ; preds = %918
  %920 = shl i64 %911, 32
  %921 = add i64 %920, -4294967296
  %922 = ashr exact i64 %921, 32
  %923 = getelementptr inbounds i32, ptr %7, i64 %922
  %924 = load i32, ptr %923, align 4, !tbaa !6
  %925 = getelementptr inbounds i32, ptr %6, i64 %911
  %926 = load i32, ptr %925, align 4, !tbaa !6
  %927 = add nsw i32 %926, %924
  store i32 %927, ptr %925, align 4, !tbaa !6
  br label %946

928:                                              ; preds = %901, %918
  %929 = phi i32 [ %913, %918 ], [ %902, %901 ]
  %930 = phi ptr [ %912, %918 ], [ %4, %901 ]
  %931 = phi i64 [ %911, %918 ], [ 0, %901 ]
  %932 = add nsw i32 %929, 1
  store i32 %932, ptr %930, align 4, !tbaa !6
  %933 = getelementptr inbounds i32, ptr %7, i64 %931
  %934 = load i32, ptr %933, align 4, !tbaa !6
  %935 = getelementptr inbounds i32, ptr %6, i64 %931
  br label %946

936:                                              ; preds = %910
  %937 = icmp eq i32 %913, %916
  br i1 %937, label %938, label %944

938:                                              ; preds = %936
  store i32 0, ptr %912, align 4, !tbaa !6
  %939 = getelementptr inbounds i32, ptr %8, i64 %911
  %940 = load i32, ptr %939, align 4, !tbaa !6
  %941 = getelementptr inbounds i32, ptr %6, i64 %911
  store i32 %940, ptr %941, align 4, !tbaa !6
  %942 = add nuw nsw i64 %911, 1
  %943 = icmp eq i64 %942, %664
  br i1 %943, label %951, label %910, !llvm.loop !513

944:                                              ; preds = %906, %936
  %945 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 777, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3089

946:                                              ; preds = %919, %928
  %947 = phi ptr [ %935, %928 ], [ %912, %919 ]
  %948 = phi i32 [ %934, %928 ], [ 1, %919 ]
  %949 = load i32, ptr %947, align 4, !tbaa !6
  %950 = add nsw i32 %949, %948
  store i32 %950, ptr %947, align 4, !tbaa !6
  br label %951

951:                                              ; preds = %938, %946, %908, %899
  %952 = icmp eq i32 %900, %5
  br i1 %952, label %3084, label %814, !llvm.loop !514

953:                                              ; preds = %652
  %954 = getelementptr inbounds i32, ptr %3, i64 %19
  %955 = load i32, ptr %954, align 4, !tbaa !6
  %956 = icmp eq i32 %955, 0
  %957 = icmp sgt i32 %5, 0
  br i1 %956, label %967, label %958

958:                                              ; preds = %953
  br i1 %957, label %959, label %3084

959:                                              ; preds = %958
  %960 = icmp sgt i32 %13, 1
  %961 = icmp sgt i32 %13, 0
  %962 = add i32 %13, -2
  %963 = zext i32 %962 to i64
  %964 = zext i32 %13 to i64
  %965 = add nuw i32 %5, 1
  %966 = icmp eq i32 %13, 1
  br label %1110

967:                                              ; preds = %953
  br i1 %957, label %968, label %3084

968:                                              ; preds = %967
  %969 = icmp sgt i32 %13, 1
  %970 = icmp sgt i32 %13, 0
  %971 = add i32 %13, -2
  %972 = zext i32 %971 to i64
  %973 = zext i32 %13 to i64
  %974 = add nuw i32 %5, 1
  %975 = icmp eq i32 %13, 1
  br label %976

976:                                              ; preds = %968, %1108
  %977 = phi i32 [ 0, %968 ], [ %1060, %1108 ]
  %978 = phi double [ 0.000000e+00, %968 ], [ %1059, %1108 ]
  %979 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %969, label %980, label %1049

980:                                              ; preds = %976, %1039
  %981 = phi i32 [ %1048, %1039 ], [ 0, %976 ]
  %982 = phi i64 [ %990, %1039 ], [ %973, %976 ]
  %983 = phi i64 [ %1047, %1039 ], [ %972, %976 ]
  %984 = phi i32 [ %1045, %1039 ], [ %979, %976 ]
  %985 = sub i32 %971, %981
  %986 = tail call i32 @llvm.smin.i32(i32 %985, i32 0)
  %987 = sub i32 %985, %986
  %988 = zext i32 %987 to i64
  %989 = add nuw nsw i64 %988, 1
  %990 = add nsw i64 %982, -1
  %991 = icmp ult i32 %987, 31
  br i1 %991, label %1027, label %992

992:                                              ; preds = %980
  %993 = and i64 %989, 8589934560
  %994 = sub i64 %983, %993
  br label %995

995:                                              ; preds = %995, %992
  %996 = phi i64 [ 0, %992 ], [ %1019, %995 ]
  %997 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %992 ], [ %1015, %995 ]
  %998 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %992 ], [ %1016, %995 ]
  %999 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %992 ], [ %1017, %995 ]
  %1000 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %992 ], [ %1018, %995 ]
  %1001 = sub i64 %983, %996
  %1002 = getelementptr inbounds i32, ptr %9, i64 %1001
  %1003 = getelementptr inbounds i32, ptr %1002, i64 -7
  %1004 = load <8 x i32>, ptr %1003, align 4, !tbaa !6
  %1005 = shufflevector <8 x i32> %1004, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1006 = getelementptr inbounds i32, ptr %1002, i64 -15
  %1007 = load <8 x i32>, ptr %1006, align 4, !tbaa !6
  %1008 = shufflevector <8 x i32> %1007, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1009 = getelementptr inbounds i32, ptr %1002, i64 -23
  %1010 = load <8 x i32>, ptr %1009, align 4, !tbaa !6
  %1011 = shufflevector <8 x i32> %1010, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1012 = getelementptr inbounds i32, ptr %1002, i64 -31
  %1013 = load <8 x i32>, ptr %1012, align 4, !tbaa !6
  %1014 = shufflevector <8 x i32> %1013, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1015 = mul <8 x i32> %1005, %997
  %1016 = mul <8 x i32> %1008, %998
  %1017 = mul <8 x i32> %1011, %999
  %1018 = mul <8 x i32> %1014, %1000
  %1019 = add nuw i64 %996, 32
  %1020 = icmp eq i64 %1019, %993
  br i1 %1020, label %1021, label %995, !llvm.loop !515

1021:                                             ; preds = %995
  %1022 = mul <8 x i32> %1016, %1015
  %1023 = mul <8 x i32> %1017, %1022
  %1024 = mul <8 x i32> %1018, %1023
  %1025 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1024)
  %1026 = icmp eq i64 %989, %993
  br i1 %1026, label %1039, label %1027

1027:                                             ; preds = %980, %1021
  %1028 = phi i64 [ %983, %980 ], [ %994, %1021 ]
  %1029 = phi i32 [ 1, %980 ], [ %1025, %1021 ]
  br label %1030

1030:                                             ; preds = %1027, %1030
  %1031 = phi i64 [ %1036, %1030 ], [ %1028, %1027 ]
  %1032 = phi i32 [ %1035, %1030 ], [ %1029, %1027 ]
  %1033 = getelementptr inbounds i32, ptr %9, i64 %1031
  %1034 = load i32, ptr %1033, align 4, !tbaa !6
  %1035 = mul nsw i32 %1034, %1032
  %1036 = add nsw i64 %1031, -1
  %1037 = trunc i64 %1031 to i32
  %1038 = icmp sgt i32 %1037, 0
  br i1 %1038, label %1030, label %1039, !llvm.loop !516

1039:                                             ; preds = %1030, %1021
  %1040 = phi i32 [ %1025, %1021 ], [ %1035, %1030 ]
  %1041 = and i64 %990, 4294967295
  %1042 = getelementptr inbounds i32, ptr %6, i64 %1041
  %1043 = load i32, ptr %1042, align 4, !tbaa !6
  %1044 = mul nsw i32 %1043, %1040
  %1045 = add nsw i32 %1044, %984
  %1046 = icmp sgt i64 %982, 2
  %1047 = add nsw i64 %983, -1
  %1048 = add i32 %981, 1
  br i1 %1046, label %980, label %1049, !llvm.loop !517

1049:                                             ; preds = %1039, %976
  %1050 = phi i32 [ %979, %976 ], [ %1045, %1039 ]
  %1051 = sext i32 %1050 to i64
  %1052 = getelementptr inbounds i16, ptr %646, i64 %1051
  %1053 = load i16, ptr %1052, align 2, !tbaa !79
  %1054 = sext i16 %1053 to i32
  %1055 = load i32, ptr %648, align 4, !tbaa !6
  %1056 = icmp slt i32 %1055, %1054
  br i1 %1056, label %1057, label %1058

1057:                                             ; preds = %1049
  store i32 %1054, ptr %648, align 4, !tbaa !6
  br label %1058

1058:                                             ; preds = %1057, %1049
  %1059 = fadd fast double %978, 1.000000e+00
  %1060 = add nuw nsw i32 %977, 1
  br i1 %970, label %1061, label %1108

1061:                                             ; preds = %1058
  %1062 = load i32, ptr %4, align 4, !tbaa !6
  %1063 = load i32, ptr %12, align 4, !tbaa !6
  %1064 = add nsw i32 %1063, -1
  %1065 = icmp slt i32 %1062, %1064
  br i1 %1065, label %1085, label %1066

1066:                                             ; preds = %1061
  %1067 = icmp eq i32 %1062, %1064
  br i1 %1067, label %1068, label %1101

1068:                                             ; preds = %1066
  store i32 0, ptr %4, align 4, !tbaa !6
  %1069 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1069, ptr %6, align 4, !tbaa !6
  br i1 %975, label %1108, label %1070

1070:                                             ; preds = %1068, %1095
  %1071 = phi i64 [ %1099, %1095 ], [ 1, %1068 ]
  %1072 = getelementptr inbounds i32, ptr %4, i64 %1071
  %1073 = load i32, ptr %1072, align 4, !tbaa !6
  %1074 = getelementptr inbounds i32, ptr %12, i64 %1071
  %1075 = load i32, ptr %1074, align 4, !tbaa !6
  %1076 = add nsw i32 %1075, -1
  %1077 = icmp slt i32 %1073, %1076
  br i1 %1077, label %1078, label %1093

1078:                                             ; preds = %1070
  br i1 %1065, label %1085, label %1079

1079:                                             ; preds = %1078
  %1080 = getelementptr inbounds i32, ptr %7, i64 %1071
  %1081 = load i32, ptr %1080, align 4, !tbaa !6
  %1082 = getelementptr inbounds i32, ptr %6, i64 %1071
  %1083 = load i32, ptr %1082, align 4, !tbaa !6
  %1084 = add nsw i32 %1083, %1081
  store i32 %1084, ptr %1082, align 4, !tbaa !6
  br label %1103

1085:                                             ; preds = %1061, %1078
  %1086 = phi i32 [ %1073, %1078 ], [ %1062, %1061 ]
  %1087 = phi ptr [ %1072, %1078 ], [ %4, %1061 ]
  %1088 = phi i64 [ %1071, %1078 ], [ 0, %1061 ]
  %1089 = add nsw i32 %1086, 1
  store i32 %1089, ptr %1087, align 4, !tbaa !6
  %1090 = getelementptr inbounds i32, ptr %7, i64 %1088
  %1091 = load i32, ptr %1090, align 4, !tbaa !6
  %1092 = getelementptr inbounds i32, ptr %6, i64 %1088
  br label %1103

1093:                                             ; preds = %1070
  %1094 = icmp eq i32 %1073, %1076
  br i1 %1094, label %1095, label %1101

1095:                                             ; preds = %1093
  store i32 0, ptr %1072, align 4, !tbaa !6
  %1096 = getelementptr inbounds i32, ptr %8, i64 %1071
  %1097 = load i32, ptr %1096, align 4, !tbaa !6
  %1098 = getelementptr inbounds i32, ptr %6, i64 %1071
  store i32 %1097, ptr %1098, align 4, !tbaa !6
  %1099 = add nuw nsw i64 %1071, 1
  %1100 = icmp eq i64 %1099, %973
  br i1 %1100, label %1108, label %1070, !llvm.loop !518

1101:                                             ; preds = %1066, %1093
  %1102 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 777, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3089

1103:                                             ; preds = %1079, %1085
  %1104 = phi ptr [ %1092, %1085 ], [ %1072, %1079 ]
  %1105 = phi i32 [ %1091, %1085 ], [ 1, %1079 ]
  %1106 = load i32, ptr %1104, align 4, !tbaa !6
  %1107 = add nsw i32 %1106, %1105
  store i32 %1107, ptr %1104, align 4, !tbaa !6
  br label %1108

1108:                                             ; preds = %1095, %1103, %1068, %1058
  %1109 = icmp eq i32 %1060, %5
  br i1 %1109, label %3084, label %976, !llvm.loop !519

1110:                                             ; preds = %959, %1247
  %1111 = phi i32 [ 0, %959 ], [ %1196, %1247 ]
  %1112 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %960, label %1113, label %1182

1113:                                             ; preds = %1110, %1172
  %1114 = phi i32 [ %1181, %1172 ], [ 0, %1110 ]
  %1115 = phi i64 [ %1123, %1172 ], [ %964, %1110 ]
  %1116 = phi i64 [ %1180, %1172 ], [ %963, %1110 ]
  %1117 = phi i32 [ %1178, %1172 ], [ %1112, %1110 ]
  %1118 = sub i32 %962, %1114
  %1119 = tail call i32 @llvm.smin.i32(i32 %1118, i32 0)
  %1120 = sub i32 %1118, %1119
  %1121 = zext i32 %1120 to i64
  %1122 = add nuw nsw i64 %1121, 1
  %1123 = add nsw i64 %1115, -1
  %1124 = icmp ult i32 %1120, 31
  br i1 %1124, label %1160, label %1125

1125:                                             ; preds = %1113
  %1126 = and i64 %1122, 8589934560
  %1127 = sub i64 %1116, %1126
  br label %1128

1128:                                             ; preds = %1128, %1125
  %1129 = phi i64 [ 0, %1125 ], [ %1152, %1128 ]
  %1130 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1125 ], [ %1148, %1128 ]
  %1131 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1125 ], [ %1149, %1128 ]
  %1132 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1125 ], [ %1150, %1128 ]
  %1133 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1125 ], [ %1151, %1128 ]
  %1134 = sub i64 %1116, %1129
  %1135 = getelementptr inbounds i32, ptr %11, i64 %1134
  %1136 = getelementptr inbounds i32, ptr %1135, i64 -7
  %1137 = load <8 x i32>, ptr %1136, align 4, !tbaa !6
  %1138 = shufflevector <8 x i32> %1137, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1139 = getelementptr inbounds i32, ptr %1135, i64 -15
  %1140 = load <8 x i32>, ptr %1139, align 4, !tbaa !6
  %1141 = shufflevector <8 x i32> %1140, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1142 = getelementptr inbounds i32, ptr %1135, i64 -23
  %1143 = load <8 x i32>, ptr %1142, align 4, !tbaa !6
  %1144 = shufflevector <8 x i32> %1143, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1145 = getelementptr inbounds i32, ptr %1135, i64 -31
  %1146 = load <8 x i32>, ptr %1145, align 4, !tbaa !6
  %1147 = shufflevector <8 x i32> %1146, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1148 = mul <8 x i32> %1138, %1130
  %1149 = mul <8 x i32> %1141, %1131
  %1150 = mul <8 x i32> %1144, %1132
  %1151 = mul <8 x i32> %1147, %1133
  %1152 = add nuw i64 %1129, 32
  %1153 = icmp eq i64 %1152, %1126
  br i1 %1153, label %1154, label %1128, !llvm.loop !520

1154:                                             ; preds = %1128
  %1155 = mul <8 x i32> %1149, %1148
  %1156 = mul <8 x i32> %1150, %1155
  %1157 = mul <8 x i32> %1151, %1156
  %1158 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1157)
  %1159 = icmp eq i64 %1122, %1126
  br i1 %1159, label %1172, label %1160

1160:                                             ; preds = %1113, %1154
  %1161 = phi i64 [ %1116, %1113 ], [ %1127, %1154 ]
  %1162 = phi i32 [ 1, %1113 ], [ %1158, %1154 ]
  br label %1163

1163:                                             ; preds = %1160, %1163
  %1164 = phi i64 [ %1169, %1163 ], [ %1161, %1160 ]
  %1165 = phi i32 [ %1168, %1163 ], [ %1162, %1160 ]
  %1166 = getelementptr inbounds i32, ptr %11, i64 %1164
  %1167 = load i32, ptr %1166, align 4, !tbaa !6
  %1168 = mul nsw i32 %1167, %1165
  %1169 = add nsw i64 %1164, -1
  %1170 = trunc i64 %1164 to i32
  %1171 = icmp sgt i32 %1170, 0
  br i1 %1171, label %1163, label %1172, !llvm.loop !521

1172:                                             ; preds = %1163, %1154
  %1173 = phi i32 [ %1158, %1154 ], [ %1168, %1163 ]
  %1174 = and i64 %1123, 4294967295
  %1175 = getelementptr inbounds i32, ptr %6, i64 %1174
  %1176 = load i32, ptr %1175, align 4, !tbaa !6
  %1177 = mul nsw i32 %1176, %1173
  %1178 = add nsw i32 %1177, %1117
  %1179 = icmp sgt i64 %1115, 2
  %1180 = add nsw i64 %1116, -1
  %1181 = add i32 %1114, 1
  br i1 %1179, label %1113, label %1182, !llvm.loop !522

1182:                                             ; preds = %1172, %1110
  %1183 = phi i32 [ %1112, %1110 ], [ %1178, %1172 ]
  %1184 = icmp slt i32 %1183, %5
  br i1 %1184, label %1187, label %1185

1185:                                             ; preds = %1182
  %1186 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 777, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3089

1187:                                             ; preds = %1182
  %1188 = sext i32 %1183 to i64
  %1189 = getelementptr inbounds i16, ptr %646, i64 %1188
  %1190 = load i16, ptr %1189, align 2, !tbaa !79
  %1191 = sext i16 %1190 to i32
  %1192 = load i32, ptr %648, align 4, !tbaa !6
  %1193 = icmp slt i32 %1192, %1191
  br i1 %1193, label %1194, label %1195

1194:                                             ; preds = %1187
  store i32 %1191, ptr %648, align 4, !tbaa !6
  br label %1195

1195:                                             ; preds = %1194, %1187
  %1196 = add nuw nsw i32 %1111, 1
  br i1 %961, label %1197, label %1247

1197:                                             ; preds = %1195
  %1198 = load i32, ptr %4, align 4, !tbaa !6
  %1199 = load i32, ptr %12, align 4, !tbaa !6
  %1200 = add nsw i32 %1199, -1
  %1201 = icmp slt i32 %1198, %1200
  br i1 %1201, label %1224, label %1202

1202:                                             ; preds = %1197
  %1203 = icmp eq i32 %1198, %1200
  br i1 %1203, label %1204, label %1240

1204:                                             ; preds = %1202
  store i32 0, ptr %4, align 4, !tbaa !6
  %1205 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1205, ptr %6, align 4, !tbaa !6
  br i1 %966, label %1247, label %1206

1206:                                             ; preds = %1204, %1234
  %1207 = phi i64 [ %1238, %1234 ], [ 1, %1204 ]
  %1208 = getelementptr inbounds i32, ptr %4, i64 %1207
  %1209 = load i32, ptr %1208, align 4, !tbaa !6
  %1210 = getelementptr inbounds i32, ptr %12, i64 %1207
  %1211 = load i32, ptr %1210, align 4, !tbaa !6
  %1212 = add nsw i32 %1211, -1
  %1213 = icmp slt i32 %1209, %1212
  br i1 %1213, label %1214, label %1232

1214:                                             ; preds = %1206
  br i1 %1201, label %1224, label %1215

1215:                                             ; preds = %1214
  %1216 = shl i64 %1207, 32
  %1217 = add i64 %1216, -4294967296
  %1218 = ashr exact i64 %1217, 32
  %1219 = getelementptr inbounds i32, ptr %7, i64 %1218
  %1220 = load i32, ptr %1219, align 4, !tbaa !6
  %1221 = getelementptr inbounds i32, ptr %6, i64 %1207
  %1222 = load i32, ptr %1221, align 4, !tbaa !6
  %1223 = add nsw i32 %1222, %1220
  store i32 %1223, ptr %1221, align 4, !tbaa !6
  br label %1242

1224:                                             ; preds = %1197, %1214
  %1225 = phi i32 [ %1209, %1214 ], [ %1198, %1197 ]
  %1226 = phi ptr [ %1208, %1214 ], [ %4, %1197 ]
  %1227 = phi i64 [ %1207, %1214 ], [ 0, %1197 ]
  %1228 = add nsw i32 %1225, 1
  store i32 %1228, ptr %1226, align 4, !tbaa !6
  %1229 = getelementptr inbounds i32, ptr %7, i64 %1227
  %1230 = load i32, ptr %1229, align 4, !tbaa !6
  %1231 = getelementptr inbounds i32, ptr %6, i64 %1227
  br label %1242

1232:                                             ; preds = %1206
  %1233 = icmp eq i32 %1209, %1212
  br i1 %1233, label %1234, label %1240

1234:                                             ; preds = %1232
  store i32 0, ptr %1208, align 4, !tbaa !6
  %1235 = getelementptr inbounds i32, ptr %8, i64 %1207
  %1236 = load i32, ptr %1235, align 4, !tbaa !6
  %1237 = getelementptr inbounds i32, ptr %6, i64 %1207
  store i32 %1236, ptr %1237, align 4, !tbaa !6
  %1238 = add nuw nsw i64 %1207, 1
  %1239 = icmp eq i64 %1238, %964
  br i1 %1239, label %1247, label %1206, !llvm.loop !523

1240:                                             ; preds = %1202, %1232
  %1241 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 777, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3089

1242:                                             ; preds = %1215, %1224
  %1243 = phi ptr [ %1231, %1224 ], [ %1208, %1215 ]
  %1244 = phi i32 [ %1230, %1224 ], [ 1, %1215 ]
  %1245 = load i32, ptr %1243, align 4, !tbaa !6
  %1246 = add nsw i32 %1245, %1244
  store i32 %1246, ptr %1243, align 4, !tbaa !6
  br label %1247

1247:                                             ; preds = %1234, %1242, %1204, %1195
  %1248 = icmp eq i32 %1196, %5
  br i1 %1248, label %3084, label %1110, !llvm.loop !524

1249:                                             ; preds = %652
  %1250 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 777, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3084

1251:                                             ; preds = %18
  %1252 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1253 = load ptr, ptr %1252, align 8, !tbaa !10
  %1254 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1255 = load ptr, ptr %1254, align 8, !tbaa !10
  %1256 = load i16, ptr %1253, align 2, !tbaa !79
  %1257 = sitofp i16 %1256 to double
  store double %1257, ptr %1255, align 8, !tbaa !19
  %1258 = icmp eq i32 %13, 0
  br i1 %1258, label %3084, label %1259

1259:                                             ; preds = %1251
  switch i32 %1, label %1860 [
    i32 1, label %1260
    i32 0, label %1562
  ]

1260:                                             ; preds = %1259
  %1261 = getelementptr inbounds i32, ptr %3, i64 %19
  %1262 = load i32, ptr %1261, align 4, !tbaa !6
  %1263 = icmp eq i32 %1262, 0
  %1264 = icmp sgt i32 %5, 0
  br i1 %1263, label %1274, label %1265

1265:                                             ; preds = %1260
  br i1 %1264, label %1266, label %3084

1266:                                             ; preds = %1265
  %1267 = icmp sgt i32 %13, 1
  %1268 = icmp sgt i32 %13, 0
  %1269 = add i32 %13, -2
  %1270 = zext i32 %1269 to i64
  %1271 = zext i32 %13 to i64
  %1272 = add nuw i32 %5, 1
  %1273 = icmp eq i32 %13, 1
  br label %1422

1274:                                             ; preds = %1260
  br i1 %1264, label %1275, label %3084

1275:                                             ; preds = %1274
  %1276 = icmp sgt i32 %13, 1
  %1277 = icmp sgt i32 %13, 0
  %1278 = add i32 %13, -2
  %1279 = zext i32 %1278 to i64
  %1280 = zext i32 %13 to i64
  %1281 = add nuw i32 %5, 1
  %1282 = icmp eq i32 %13, 1
  br label %1283

1283:                                             ; preds = %1275, %1420
  %1284 = phi double [ %1257, %1275 ], [ %1370, %1420 ]
  %1285 = phi i32 [ 0, %1275 ], [ %1372, %1420 ]
  %1286 = phi double [ 0.000000e+00, %1275 ], [ %1371, %1420 ]
  %1287 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1276, label %1288, label %1357

1288:                                             ; preds = %1283, %1347
  %1289 = phi i32 [ %1356, %1347 ], [ 0, %1283 ]
  %1290 = phi i64 [ %1298, %1347 ], [ %1280, %1283 ]
  %1291 = phi i64 [ %1355, %1347 ], [ %1279, %1283 ]
  %1292 = phi i32 [ %1353, %1347 ], [ %1287, %1283 ]
  %1293 = sub i32 %1278, %1289
  %1294 = tail call i32 @llvm.smin.i32(i32 %1293, i32 0)
  %1295 = sub i32 %1293, %1294
  %1296 = zext i32 %1295 to i64
  %1297 = add nuw nsw i64 %1296, 1
  %1298 = add nsw i64 %1290, -1
  %1299 = icmp ult i32 %1295, 31
  br i1 %1299, label %1335, label %1300

1300:                                             ; preds = %1288
  %1301 = and i64 %1297, 8589934560
  %1302 = sub i64 %1291, %1301
  br label %1303

1303:                                             ; preds = %1303, %1300
  %1304 = phi i64 [ 0, %1300 ], [ %1327, %1303 ]
  %1305 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1300 ], [ %1323, %1303 ]
  %1306 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1300 ], [ %1324, %1303 ]
  %1307 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1300 ], [ %1325, %1303 ]
  %1308 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1300 ], [ %1326, %1303 ]
  %1309 = sub i64 %1291, %1304
  %1310 = getelementptr inbounds i32, ptr %9, i64 %1309
  %1311 = getelementptr inbounds i32, ptr %1310, i64 -7
  %1312 = load <8 x i32>, ptr %1311, align 4, !tbaa !6
  %1313 = shufflevector <8 x i32> %1312, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1314 = getelementptr inbounds i32, ptr %1310, i64 -15
  %1315 = load <8 x i32>, ptr %1314, align 4, !tbaa !6
  %1316 = shufflevector <8 x i32> %1315, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1317 = getelementptr inbounds i32, ptr %1310, i64 -23
  %1318 = load <8 x i32>, ptr %1317, align 4, !tbaa !6
  %1319 = shufflevector <8 x i32> %1318, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1320 = getelementptr inbounds i32, ptr %1310, i64 -31
  %1321 = load <8 x i32>, ptr %1320, align 4, !tbaa !6
  %1322 = shufflevector <8 x i32> %1321, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1323 = mul <8 x i32> %1313, %1305
  %1324 = mul <8 x i32> %1316, %1306
  %1325 = mul <8 x i32> %1319, %1307
  %1326 = mul <8 x i32> %1322, %1308
  %1327 = add nuw i64 %1304, 32
  %1328 = icmp eq i64 %1327, %1301
  br i1 %1328, label %1329, label %1303, !llvm.loop !525

1329:                                             ; preds = %1303
  %1330 = mul <8 x i32> %1324, %1323
  %1331 = mul <8 x i32> %1325, %1330
  %1332 = mul <8 x i32> %1326, %1331
  %1333 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1332)
  %1334 = icmp eq i64 %1297, %1301
  br i1 %1334, label %1347, label %1335

1335:                                             ; preds = %1288, %1329
  %1336 = phi i64 [ %1291, %1288 ], [ %1302, %1329 ]
  %1337 = phi i32 [ 1, %1288 ], [ %1333, %1329 ]
  br label %1338

1338:                                             ; preds = %1335, %1338
  %1339 = phi i64 [ %1344, %1338 ], [ %1336, %1335 ]
  %1340 = phi i32 [ %1343, %1338 ], [ %1337, %1335 ]
  %1341 = getelementptr inbounds i32, ptr %9, i64 %1339
  %1342 = load i32, ptr %1341, align 4, !tbaa !6
  %1343 = mul nsw i32 %1342, %1340
  %1344 = add nsw i64 %1339, -1
  %1345 = trunc i64 %1339 to i32
  %1346 = icmp sgt i32 %1345, 0
  br i1 %1346, label %1338, label %1347, !llvm.loop !526

1347:                                             ; preds = %1338, %1329
  %1348 = phi i32 [ %1333, %1329 ], [ %1343, %1338 ]
  %1349 = and i64 %1298, 4294967295
  %1350 = getelementptr inbounds i32, ptr %6, i64 %1349
  %1351 = load i32, ptr %1350, align 4, !tbaa !6
  %1352 = mul nsw i32 %1351, %1348
  %1353 = add nsw i32 %1352, %1292
  %1354 = icmp sgt i64 %1290, 2
  %1355 = add nsw i64 %1291, -1
  %1356 = add i32 %1289, 1
  br i1 %1354, label %1288, label %1357, !llvm.loop !527

1357:                                             ; preds = %1347, %1283
  %1358 = phi i32 [ %1287, %1283 ], [ %1353, %1347 ]
  %1359 = sext i32 %1358 to i64
  %1360 = getelementptr inbounds double, ptr %2, i64 %1359
  %1361 = load double, ptr %1360, align 8, !tbaa !19
  %1362 = getelementptr inbounds i16, ptr %1253, i64 %1359
  %1363 = load i16, ptr %1362, align 2, !tbaa !79
  %1364 = sitofp i16 %1363 to double
  %1365 = fcmp fast one double %1361, 0.000000e+00
  %1366 = fcmp fast olt double %1284, %1364
  %1367 = select i1 %1365, i1 %1366, i1 false
  br i1 %1367, label %1368, label %1369

1368:                                             ; preds = %1357
  store double %1364, ptr %1255, align 8, !tbaa !19
  br label %1369

1369:                                             ; preds = %1368, %1357
  %1370 = phi double [ %1364, %1368 ], [ %1284, %1357 ]
  %1371 = fadd fast double %1361, %1286
  %1372 = add nuw nsw i32 %1285, 1
  br i1 %1277, label %1373, label %1420

1373:                                             ; preds = %1369
  %1374 = load i32, ptr %4, align 4, !tbaa !6
  %1375 = load i32, ptr %12, align 4, !tbaa !6
  %1376 = add nsw i32 %1375, -1
  %1377 = icmp slt i32 %1374, %1376
  br i1 %1377, label %1397, label %1378

1378:                                             ; preds = %1373
  %1379 = icmp eq i32 %1374, %1376
  br i1 %1379, label %1380, label %1413

1380:                                             ; preds = %1378
  store i32 0, ptr %4, align 4, !tbaa !6
  %1381 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1381, ptr %6, align 4, !tbaa !6
  br i1 %1282, label %1420, label %1382

1382:                                             ; preds = %1380, %1407
  %1383 = phi i64 [ %1411, %1407 ], [ 1, %1380 ]
  %1384 = getelementptr inbounds i32, ptr %4, i64 %1383
  %1385 = load i32, ptr %1384, align 4, !tbaa !6
  %1386 = getelementptr inbounds i32, ptr %12, i64 %1383
  %1387 = load i32, ptr %1386, align 4, !tbaa !6
  %1388 = add nsw i32 %1387, -1
  %1389 = icmp slt i32 %1385, %1388
  br i1 %1389, label %1390, label %1405

1390:                                             ; preds = %1382
  br i1 %1377, label %1397, label %1391

1391:                                             ; preds = %1390
  %1392 = getelementptr inbounds i32, ptr %7, i64 %1383
  %1393 = load i32, ptr %1392, align 4, !tbaa !6
  %1394 = getelementptr inbounds i32, ptr %6, i64 %1383
  %1395 = load i32, ptr %1394, align 4, !tbaa !6
  %1396 = add nsw i32 %1395, %1393
  store i32 %1396, ptr %1394, align 4, !tbaa !6
  br label %1415

1397:                                             ; preds = %1373, %1390
  %1398 = phi i32 [ %1385, %1390 ], [ %1374, %1373 ]
  %1399 = phi ptr [ %1384, %1390 ], [ %4, %1373 ]
  %1400 = phi i64 [ %1383, %1390 ], [ 0, %1373 ]
  %1401 = add nsw i32 %1398, 1
  store i32 %1401, ptr %1399, align 4, !tbaa !6
  %1402 = getelementptr inbounds i32, ptr %7, i64 %1400
  %1403 = load i32, ptr %1402, align 4, !tbaa !6
  %1404 = getelementptr inbounds i32, ptr %6, i64 %1400
  br label %1415

1405:                                             ; preds = %1382
  %1406 = icmp eq i32 %1385, %1388
  br i1 %1406, label %1407, label %1413

1407:                                             ; preds = %1405
  store i32 0, ptr %1384, align 4, !tbaa !6
  %1408 = getelementptr inbounds i32, ptr %8, i64 %1383
  %1409 = load i32, ptr %1408, align 4, !tbaa !6
  %1410 = getelementptr inbounds i32, ptr %6, i64 %1383
  store i32 %1409, ptr %1410, align 4, !tbaa !6
  %1411 = add nuw nsw i64 %1383, 1
  %1412 = icmp eq i64 %1411, %1280
  br i1 %1412, label %1420, label %1382, !llvm.loop !528

1413:                                             ; preds = %1378, %1405
  %1414 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 800, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3089

1415:                                             ; preds = %1391, %1397
  %1416 = phi ptr [ %1404, %1397 ], [ %1384, %1391 ]
  %1417 = phi i32 [ %1403, %1397 ], [ 1, %1391 ]
  %1418 = load i32, ptr %1416, align 4, !tbaa !6
  %1419 = add nsw i32 %1418, %1417
  store i32 %1419, ptr %1416, align 4, !tbaa !6
  br label %1420

1420:                                             ; preds = %1407, %1415, %1380, %1369
  %1421 = icmp eq i32 %1372, %5
  br i1 %1421, label %3084, label %1283, !llvm.loop !529

1422:                                             ; preds = %1266, %1560
  %1423 = phi double [ %1257, %1266 ], [ %1508, %1560 ]
  %1424 = phi i32 [ 0, %1266 ], [ %1509, %1560 ]
  %1425 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1267, label %1426, label %1495

1426:                                             ; preds = %1422, %1485
  %1427 = phi i32 [ %1494, %1485 ], [ 0, %1422 ]
  %1428 = phi i64 [ %1436, %1485 ], [ %1271, %1422 ]
  %1429 = phi i64 [ %1493, %1485 ], [ %1270, %1422 ]
  %1430 = phi i32 [ %1491, %1485 ], [ %1425, %1422 ]
  %1431 = sub i32 %1269, %1427
  %1432 = tail call i32 @llvm.smin.i32(i32 %1431, i32 0)
  %1433 = sub i32 %1431, %1432
  %1434 = zext i32 %1433 to i64
  %1435 = add nuw nsw i64 %1434, 1
  %1436 = add nsw i64 %1428, -1
  %1437 = icmp ult i32 %1433, 31
  br i1 %1437, label %1473, label %1438

1438:                                             ; preds = %1426
  %1439 = and i64 %1435, 8589934560
  %1440 = sub i64 %1429, %1439
  br label %1441

1441:                                             ; preds = %1441, %1438
  %1442 = phi i64 [ 0, %1438 ], [ %1465, %1441 ]
  %1443 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1438 ], [ %1461, %1441 ]
  %1444 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1438 ], [ %1462, %1441 ]
  %1445 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1438 ], [ %1463, %1441 ]
  %1446 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1438 ], [ %1464, %1441 ]
  %1447 = sub i64 %1429, %1442
  %1448 = getelementptr inbounds i32, ptr %11, i64 %1447
  %1449 = getelementptr inbounds i32, ptr %1448, i64 -7
  %1450 = load <8 x i32>, ptr %1449, align 4, !tbaa !6
  %1451 = shufflevector <8 x i32> %1450, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1452 = getelementptr inbounds i32, ptr %1448, i64 -15
  %1453 = load <8 x i32>, ptr %1452, align 4, !tbaa !6
  %1454 = shufflevector <8 x i32> %1453, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1455 = getelementptr inbounds i32, ptr %1448, i64 -23
  %1456 = load <8 x i32>, ptr %1455, align 4, !tbaa !6
  %1457 = shufflevector <8 x i32> %1456, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1458 = getelementptr inbounds i32, ptr %1448, i64 -31
  %1459 = load <8 x i32>, ptr %1458, align 4, !tbaa !6
  %1460 = shufflevector <8 x i32> %1459, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1461 = mul <8 x i32> %1451, %1443
  %1462 = mul <8 x i32> %1454, %1444
  %1463 = mul <8 x i32> %1457, %1445
  %1464 = mul <8 x i32> %1460, %1446
  %1465 = add nuw i64 %1442, 32
  %1466 = icmp eq i64 %1465, %1439
  br i1 %1466, label %1467, label %1441, !llvm.loop !530

1467:                                             ; preds = %1441
  %1468 = mul <8 x i32> %1462, %1461
  %1469 = mul <8 x i32> %1463, %1468
  %1470 = mul <8 x i32> %1464, %1469
  %1471 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1470)
  %1472 = icmp eq i64 %1435, %1439
  br i1 %1472, label %1485, label %1473

1473:                                             ; preds = %1426, %1467
  %1474 = phi i64 [ %1429, %1426 ], [ %1440, %1467 ]
  %1475 = phi i32 [ 1, %1426 ], [ %1471, %1467 ]
  br label %1476

1476:                                             ; preds = %1473, %1476
  %1477 = phi i64 [ %1482, %1476 ], [ %1474, %1473 ]
  %1478 = phi i32 [ %1481, %1476 ], [ %1475, %1473 ]
  %1479 = getelementptr inbounds i32, ptr %11, i64 %1477
  %1480 = load i32, ptr %1479, align 4, !tbaa !6
  %1481 = mul nsw i32 %1480, %1478
  %1482 = add nsw i64 %1477, -1
  %1483 = trunc i64 %1477 to i32
  %1484 = icmp sgt i32 %1483, 0
  br i1 %1484, label %1476, label %1485, !llvm.loop !531

1485:                                             ; preds = %1476, %1467
  %1486 = phi i32 [ %1471, %1467 ], [ %1481, %1476 ]
  %1487 = and i64 %1436, 4294967295
  %1488 = getelementptr inbounds i32, ptr %6, i64 %1487
  %1489 = load i32, ptr %1488, align 4, !tbaa !6
  %1490 = mul nsw i32 %1489, %1486
  %1491 = add nsw i32 %1490, %1430
  %1492 = icmp sgt i64 %1428, 2
  %1493 = add nsw i64 %1429, -1
  %1494 = add i32 %1427, 1
  br i1 %1492, label %1426, label %1495, !llvm.loop !532

1495:                                             ; preds = %1485, %1422
  %1496 = phi i32 [ %1425, %1422 ], [ %1491, %1485 ]
  %1497 = icmp slt i32 %1496, %5
  br i1 %1497, label %1500, label %1498

1498:                                             ; preds = %1495
  %1499 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 800, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3089

1500:                                             ; preds = %1495
  %1501 = sext i32 %1496 to i64
  %1502 = getelementptr inbounds i16, ptr %1253, i64 %1501
  %1503 = load i16, ptr %1502, align 2, !tbaa !79
  %1504 = sitofp i16 %1503 to double
  %1505 = fcmp fast olt double %1423, %1504
  br i1 %1505, label %1506, label %1507

1506:                                             ; preds = %1500
  store double %1504, ptr %1255, align 8, !tbaa !19
  br label %1507

1507:                                             ; preds = %1500, %1506
  %1508 = phi double [ %1423, %1500 ], [ %1504, %1506 ]
  %1509 = add nuw nsw i32 %1424, 1
  br i1 %1268, label %1510, label %1560

1510:                                             ; preds = %1507
  %1511 = load i32, ptr %4, align 4, !tbaa !6
  %1512 = load i32, ptr %12, align 4, !tbaa !6
  %1513 = add nsw i32 %1512, -1
  %1514 = icmp slt i32 %1511, %1513
  br i1 %1514, label %1537, label %1515

1515:                                             ; preds = %1510
  %1516 = icmp eq i32 %1511, %1513
  br i1 %1516, label %1517, label %1553

1517:                                             ; preds = %1515
  store i32 0, ptr %4, align 4, !tbaa !6
  %1518 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1518, ptr %6, align 4, !tbaa !6
  br i1 %1273, label %1560, label %1519

1519:                                             ; preds = %1517, %1547
  %1520 = phi i64 [ %1551, %1547 ], [ 1, %1517 ]
  %1521 = getelementptr inbounds i32, ptr %4, i64 %1520
  %1522 = load i32, ptr %1521, align 4, !tbaa !6
  %1523 = getelementptr inbounds i32, ptr %12, i64 %1520
  %1524 = load i32, ptr %1523, align 4, !tbaa !6
  %1525 = add nsw i32 %1524, -1
  %1526 = icmp slt i32 %1522, %1525
  br i1 %1526, label %1527, label %1545

1527:                                             ; preds = %1519
  br i1 %1514, label %1537, label %1528

1528:                                             ; preds = %1527
  %1529 = shl i64 %1520, 32
  %1530 = add i64 %1529, -4294967296
  %1531 = ashr exact i64 %1530, 32
  %1532 = getelementptr inbounds i32, ptr %7, i64 %1531
  %1533 = load i32, ptr %1532, align 4, !tbaa !6
  %1534 = getelementptr inbounds i32, ptr %6, i64 %1520
  %1535 = load i32, ptr %1534, align 4, !tbaa !6
  %1536 = add nsw i32 %1535, %1533
  store i32 %1536, ptr %1534, align 4, !tbaa !6
  br label %1555

1537:                                             ; preds = %1510, %1527
  %1538 = phi i32 [ %1522, %1527 ], [ %1511, %1510 ]
  %1539 = phi ptr [ %1521, %1527 ], [ %4, %1510 ]
  %1540 = phi i64 [ %1520, %1527 ], [ 0, %1510 ]
  %1541 = add nsw i32 %1538, 1
  store i32 %1541, ptr %1539, align 4, !tbaa !6
  %1542 = getelementptr inbounds i32, ptr %7, i64 %1540
  %1543 = load i32, ptr %1542, align 4, !tbaa !6
  %1544 = getelementptr inbounds i32, ptr %6, i64 %1540
  br label %1555

1545:                                             ; preds = %1519
  %1546 = icmp eq i32 %1522, %1525
  br i1 %1546, label %1547, label %1553

1547:                                             ; preds = %1545
  store i32 0, ptr %1521, align 4, !tbaa !6
  %1548 = getelementptr inbounds i32, ptr %8, i64 %1520
  %1549 = load i32, ptr %1548, align 4, !tbaa !6
  %1550 = getelementptr inbounds i32, ptr %6, i64 %1520
  store i32 %1549, ptr %1550, align 4, !tbaa !6
  %1551 = add nuw nsw i64 %1520, 1
  %1552 = icmp eq i64 %1551, %1271
  br i1 %1552, label %1560, label %1519, !llvm.loop !533

1553:                                             ; preds = %1515, %1545
  %1554 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 800, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3089

1555:                                             ; preds = %1528, %1537
  %1556 = phi ptr [ %1544, %1537 ], [ %1521, %1528 ]
  %1557 = phi i32 [ %1543, %1537 ], [ 1, %1528 ]
  %1558 = load i32, ptr %1556, align 4, !tbaa !6
  %1559 = add nsw i32 %1558, %1557
  store i32 %1559, ptr %1556, align 4, !tbaa !6
  br label %1560

1560:                                             ; preds = %1547, %1555, %1517, %1507
  %1561 = icmp eq i32 %1509, %5
  br i1 %1561, label %3084, label %1422, !llvm.loop !534

1562:                                             ; preds = %1259
  %1563 = getelementptr inbounds i32, ptr %3, i64 %19
  %1564 = load i32, ptr %1563, align 4, !tbaa !6
  %1565 = icmp eq i32 %1564, 0
  %1566 = icmp sgt i32 %5, 0
  br i1 %1565, label %1576, label %1567

1567:                                             ; preds = %1562
  br i1 %1566, label %1568, label %3084

1568:                                             ; preds = %1567
  %1569 = icmp sgt i32 %13, 1
  %1570 = icmp sgt i32 %13, 0
  %1571 = add i32 %13, -2
  %1572 = zext i32 %1571 to i64
  %1573 = zext i32 %13 to i64
  %1574 = add nuw i32 %5, 1
  %1575 = icmp eq i32 %13, 1
  br label %1720

1576:                                             ; preds = %1562
  br i1 %1566, label %1577, label %3084

1577:                                             ; preds = %1576
  %1578 = icmp sgt i32 %13, 1
  %1579 = icmp sgt i32 %13, 0
  %1580 = add i32 %13, -2
  %1581 = zext i32 %1580 to i64
  %1582 = zext i32 %13 to i64
  %1583 = add nuw i32 %5, 1
  %1584 = icmp eq i32 %13, 1
  br label %1585

1585:                                             ; preds = %1577, %1718
  %1586 = phi double [ %1257, %1577 ], [ %1668, %1718 ]
  %1587 = phi i32 [ 0, %1577 ], [ %1670, %1718 ]
  %1588 = phi double [ 0.000000e+00, %1577 ], [ %1669, %1718 ]
  %1589 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1578, label %1590, label %1659

1590:                                             ; preds = %1585, %1649
  %1591 = phi i32 [ %1658, %1649 ], [ 0, %1585 ]
  %1592 = phi i64 [ %1600, %1649 ], [ %1582, %1585 ]
  %1593 = phi i64 [ %1657, %1649 ], [ %1581, %1585 ]
  %1594 = phi i32 [ %1655, %1649 ], [ %1589, %1585 ]
  %1595 = sub i32 %1580, %1591
  %1596 = tail call i32 @llvm.smin.i32(i32 %1595, i32 0)
  %1597 = sub i32 %1595, %1596
  %1598 = zext i32 %1597 to i64
  %1599 = add nuw nsw i64 %1598, 1
  %1600 = add nsw i64 %1592, -1
  %1601 = icmp ult i32 %1597, 31
  br i1 %1601, label %1637, label %1602

1602:                                             ; preds = %1590
  %1603 = and i64 %1599, 8589934560
  %1604 = sub i64 %1593, %1603
  br label %1605

1605:                                             ; preds = %1605, %1602
  %1606 = phi i64 [ 0, %1602 ], [ %1629, %1605 ]
  %1607 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1602 ], [ %1625, %1605 ]
  %1608 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1602 ], [ %1626, %1605 ]
  %1609 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1602 ], [ %1627, %1605 ]
  %1610 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1602 ], [ %1628, %1605 ]
  %1611 = sub i64 %1593, %1606
  %1612 = getelementptr inbounds i32, ptr %9, i64 %1611
  %1613 = getelementptr inbounds i32, ptr %1612, i64 -7
  %1614 = load <8 x i32>, ptr %1613, align 4, !tbaa !6
  %1615 = shufflevector <8 x i32> %1614, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1616 = getelementptr inbounds i32, ptr %1612, i64 -15
  %1617 = load <8 x i32>, ptr %1616, align 4, !tbaa !6
  %1618 = shufflevector <8 x i32> %1617, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1619 = getelementptr inbounds i32, ptr %1612, i64 -23
  %1620 = load <8 x i32>, ptr %1619, align 4, !tbaa !6
  %1621 = shufflevector <8 x i32> %1620, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1622 = getelementptr inbounds i32, ptr %1612, i64 -31
  %1623 = load <8 x i32>, ptr %1622, align 4, !tbaa !6
  %1624 = shufflevector <8 x i32> %1623, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1625 = mul <8 x i32> %1615, %1607
  %1626 = mul <8 x i32> %1618, %1608
  %1627 = mul <8 x i32> %1621, %1609
  %1628 = mul <8 x i32> %1624, %1610
  %1629 = add nuw i64 %1606, 32
  %1630 = icmp eq i64 %1629, %1603
  br i1 %1630, label %1631, label %1605, !llvm.loop !535

1631:                                             ; preds = %1605
  %1632 = mul <8 x i32> %1626, %1625
  %1633 = mul <8 x i32> %1627, %1632
  %1634 = mul <8 x i32> %1628, %1633
  %1635 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1634)
  %1636 = icmp eq i64 %1599, %1603
  br i1 %1636, label %1649, label %1637

1637:                                             ; preds = %1590, %1631
  %1638 = phi i64 [ %1593, %1590 ], [ %1604, %1631 ]
  %1639 = phi i32 [ 1, %1590 ], [ %1635, %1631 ]
  br label %1640

1640:                                             ; preds = %1637, %1640
  %1641 = phi i64 [ %1646, %1640 ], [ %1638, %1637 ]
  %1642 = phi i32 [ %1645, %1640 ], [ %1639, %1637 ]
  %1643 = getelementptr inbounds i32, ptr %9, i64 %1641
  %1644 = load i32, ptr %1643, align 4, !tbaa !6
  %1645 = mul nsw i32 %1644, %1642
  %1646 = add nsw i64 %1641, -1
  %1647 = trunc i64 %1641 to i32
  %1648 = icmp sgt i32 %1647, 0
  br i1 %1648, label %1640, label %1649, !llvm.loop !536

1649:                                             ; preds = %1640, %1631
  %1650 = phi i32 [ %1635, %1631 ], [ %1645, %1640 ]
  %1651 = and i64 %1600, 4294967295
  %1652 = getelementptr inbounds i32, ptr %6, i64 %1651
  %1653 = load i32, ptr %1652, align 4, !tbaa !6
  %1654 = mul nsw i32 %1653, %1650
  %1655 = add nsw i32 %1654, %1594
  %1656 = icmp sgt i64 %1592, 2
  %1657 = add nsw i64 %1593, -1
  %1658 = add i32 %1591, 1
  br i1 %1656, label %1590, label %1659, !llvm.loop !537

1659:                                             ; preds = %1649, %1585
  %1660 = phi i32 [ %1589, %1585 ], [ %1655, %1649 ]
  %1661 = sext i32 %1660 to i64
  %1662 = getelementptr inbounds i16, ptr %1253, i64 %1661
  %1663 = load i16, ptr %1662, align 2, !tbaa !79
  %1664 = sitofp i16 %1663 to double
  %1665 = fcmp fast olt double %1586, %1664
  br i1 %1665, label %1666, label %1667

1666:                                             ; preds = %1659
  store double %1664, ptr %1255, align 8, !tbaa !19
  br label %1667

1667:                                             ; preds = %1666, %1659
  %1668 = phi double [ %1664, %1666 ], [ %1586, %1659 ]
  %1669 = fadd fast double %1588, 1.000000e+00
  %1670 = add nuw nsw i32 %1587, 1
  br i1 %1579, label %1671, label %1718

1671:                                             ; preds = %1667
  %1672 = load i32, ptr %4, align 4, !tbaa !6
  %1673 = load i32, ptr %12, align 4, !tbaa !6
  %1674 = add nsw i32 %1673, -1
  %1675 = icmp slt i32 %1672, %1674
  br i1 %1675, label %1695, label %1676

1676:                                             ; preds = %1671
  %1677 = icmp eq i32 %1672, %1674
  br i1 %1677, label %1678, label %1711

1678:                                             ; preds = %1676
  store i32 0, ptr %4, align 4, !tbaa !6
  %1679 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1679, ptr %6, align 4, !tbaa !6
  br i1 %1584, label %1718, label %1680

1680:                                             ; preds = %1678, %1705
  %1681 = phi i64 [ %1709, %1705 ], [ 1, %1678 ]
  %1682 = getelementptr inbounds i32, ptr %4, i64 %1681
  %1683 = load i32, ptr %1682, align 4, !tbaa !6
  %1684 = getelementptr inbounds i32, ptr %12, i64 %1681
  %1685 = load i32, ptr %1684, align 4, !tbaa !6
  %1686 = add nsw i32 %1685, -1
  %1687 = icmp slt i32 %1683, %1686
  br i1 %1687, label %1688, label %1703

1688:                                             ; preds = %1680
  br i1 %1675, label %1695, label %1689

1689:                                             ; preds = %1688
  %1690 = getelementptr inbounds i32, ptr %7, i64 %1681
  %1691 = load i32, ptr %1690, align 4, !tbaa !6
  %1692 = getelementptr inbounds i32, ptr %6, i64 %1681
  %1693 = load i32, ptr %1692, align 4, !tbaa !6
  %1694 = add nsw i32 %1693, %1691
  store i32 %1694, ptr %1692, align 4, !tbaa !6
  br label %1713

1695:                                             ; preds = %1671, %1688
  %1696 = phi i32 [ %1683, %1688 ], [ %1672, %1671 ]
  %1697 = phi ptr [ %1682, %1688 ], [ %4, %1671 ]
  %1698 = phi i64 [ %1681, %1688 ], [ 0, %1671 ]
  %1699 = add nsw i32 %1696, 1
  store i32 %1699, ptr %1697, align 4, !tbaa !6
  %1700 = getelementptr inbounds i32, ptr %7, i64 %1698
  %1701 = load i32, ptr %1700, align 4, !tbaa !6
  %1702 = getelementptr inbounds i32, ptr %6, i64 %1698
  br label %1713

1703:                                             ; preds = %1680
  %1704 = icmp eq i32 %1683, %1686
  br i1 %1704, label %1705, label %1711

1705:                                             ; preds = %1703
  store i32 0, ptr %1682, align 4, !tbaa !6
  %1706 = getelementptr inbounds i32, ptr %8, i64 %1681
  %1707 = load i32, ptr %1706, align 4, !tbaa !6
  %1708 = getelementptr inbounds i32, ptr %6, i64 %1681
  store i32 %1707, ptr %1708, align 4, !tbaa !6
  %1709 = add nuw nsw i64 %1681, 1
  %1710 = icmp eq i64 %1709, %1582
  br i1 %1710, label %1718, label %1680, !llvm.loop !538

1711:                                             ; preds = %1676, %1703
  %1712 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 800, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3089

1713:                                             ; preds = %1689, %1695
  %1714 = phi ptr [ %1702, %1695 ], [ %1682, %1689 ]
  %1715 = phi i32 [ %1701, %1695 ], [ 1, %1689 ]
  %1716 = load i32, ptr %1714, align 4, !tbaa !6
  %1717 = add nsw i32 %1716, %1715
  store i32 %1717, ptr %1714, align 4, !tbaa !6
  br label %1718

1718:                                             ; preds = %1705, %1713, %1678, %1667
  %1719 = icmp eq i32 %1670, %5
  br i1 %1719, label %3084, label %1585, !llvm.loop !539

1720:                                             ; preds = %1568, %1858
  %1721 = phi double [ %1257, %1568 ], [ %1806, %1858 ]
  %1722 = phi i32 [ 0, %1568 ], [ %1807, %1858 ]
  %1723 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1569, label %1724, label %1793

1724:                                             ; preds = %1720, %1783
  %1725 = phi i32 [ %1792, %1783 ], [ 0, %1720 ]
  %1726 = phi i64 [ %1734, %1783 ], [ %1573, %1720 ]
  %1727 = phi i64 [ %1791, %1783 ], [ %1572, %1720 ]
  %1728 = phi i32 [ %1789, %1783 ], [ %1723, %1720 ]
  %1729 = sub i32 %1571, %1725
  %1730 = tail call i32 @llvm.smin.i32(i32 %1729, i32 0)
  %1731 = sub i32 %1729, %1730
  %1732 = zext i32 %1731 to i64
  %1733 = add nuw nsw i64 %1732, 1
  %1734 = add nsw i64 %1726, -1
  %1735 = icmp ult i32 %1731, 31
  br i1 %1735, label %1771, label %1736

1736:                                             ; preds = %1724
  %1737 = and i64 %1733, 8589934560
  %1738 = sub i64 %1727, %1737
  br label %1739

1739:                                             ; preds = %1739, %1736
  %1740 = phi i64 [ 0, %1736 ], [ %1763, %1739 ]
  %1741 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1736 ], [ %1759, %1739 ]
  %1742 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1736 ], [ %1760, %1739 ]
  %1743 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1736 ], [ %1761, %1739 ]
  %1744 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1736 ], [ %1762, %1739 ]
  %1745 = sub i64 %1727, %1740
  %1746 = getelementptr inbounds i32, ptr %11, i64 %1745
  %1747 = getelementptr inbounds i32, ptr %1746, i64 -7
  %1748 = load <8 x i32>, ptr %1747, align 4, !tbaa !6
  %1749 = shufflevector <8 x i32> %1748, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1750 = getelementptr inbounds i32, ptr %1746, i64 -15
  %1751 = load <8 x i32>, ptr %1750, align 4, !tbaa !6
  %1752 = shufflevector <8 x i32> %1751, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1753 = getelementptr inbounds i32, ptr %1746, i64 -23
  %1754 = load <8 x i32>, ptr %1753, align 4, !tbaa !6
  %1755 = shufflevector <8 x i32> %1754, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1756 = getelementptr inbounds i32, ptr %1746, i64 -31
  %1757 = load <8 x i32>, ptr %1756, align 4, !tbaa !6
  %1758 = shufflevector <8 x i32> %1757, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1759 = mul <8 x i32> %1749, %1741
  %1760 = mul <8 x i32> %1752, %1742
  %1761 = mul <8 x i32> %1755, %1743
  %1762 = mul <8 x i32> %1758, %1744
  %1763 = add nuw i64 %1740, 32
  %1764 = icmp eq i64 %1763, %1737
  br i1 %1764, label %1765, label %1739, !llvm.loop !540

1765:                                             ; preds = %1739
  %1766 = mul <8 x i32> %1760, %1759
  %1767 = mul <8 x i32> %1761, %1766
  %1768 = mul <8 x i32> %1762, %1767
  %1769 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1768)
  %1770 = icmp eq i64 %1733, %1737
  br i1 %1770, label %1783, label %1771

1771:                                             ; preds = %1724, %1765
  %1772 = phi i64 [ %1727, %1724 ], [ %1738, %1765 ]
  %1773 = phi i32 [ 1, %1724 ], [ %1769, %1765 ]
  br label %1774

1774:                                             ; preds = %1771, %1774
  %1775 = phi i64 [ %1780, %1774 ], [ %1772, %1771 ]
  %1776 = phi i32 [ %1779, %1774 ], [ %1773, %1771 ]
  %1777 = getelementptr inbounds i32, ptr %11, i64 %1775
  %1778 = load i32, ptr %1777, align 4, !tbaa !6
  %1779 = mul nsw i32 %1778, %1776
  %1780 = add nsw i64 %1775, -1
  %1781 = trunc i64 %1775 to i32
  %1782 = icmp sgt i32 %1781, 0
  br i1 %1782, label %1774, label %1783, !llvm.loop !541

1783:                                             ; preds = %1774, %1765
  %1784 = phi i32 [ %1769, %1765 ], [ %1779, %1774 ]
  %1785 = and i64 %1734, 4294967295
  %1786 = getelementptr inbounds i32, ptr %6, i64 %1785
  %1787 = load i32, ptr %1786, align 4, !tbaa !6
  %1788 = mul nsw i32 %1787, %1784
  %1789 = add nsw i32 %1788, %1728
  %1790 = icmp sgt i64 %1726, 2
  %1791 = add nsw i64 %1727, -1
  %1792 = add i32 %1725, 1
  br i1 %1790, label %1724, label %1793, !llvm.loop !542

1793:                                             ; preds = %1783, %1720
  %1794 = phi i32 [ %1723, %1720 ], [ %1789, %1783 ]
  %1795 = icmp slt i32 %1794, %5
  br i1 %1795, label %1798, label %1796

1796:                                             ; preds = %1793
  %1797 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 800, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3089

1798:                                             ; preds = %1793
  %1799 = sext i32 %1794 to i64
  %1800 = getelementptr inbounds i16, ptr %1253, i64 %1799
  %1801 = load i16, ptr %1800, align 2, !tbaa !79
  %1802 = sitofp i16 %1801 to double
  %1803 = fcmp fast olt double %1721, %1802
  br i1 %1803, label %1804, label %1805

1804:                                             ; preds = %1798
  store double %1802, ptr %1255, align 8, !tbaa !19
  br label %1805

1805:                                             ; preds = %1804, %1798
  %1806 = phi double [ %1802, %1804 ], [ %1721, %1798 ]
  %1807 = add nuw nsw i32 %1722, 1
  br i1 %1570, label %1808, label %1858

1808:                                             ; preds = %1805
  %1809 = load i32, ptr %4, align 4, !tbaa !6
  %1810 = load i32, ptr %12, align 4, !tbaa !6
  %1811 = add nsw i32 %1810, -1
  %1812 = icmp slt i32 %1809, %1811
  br i1 %1812, label %1835, label %1813

1813:                                             ; preds = %1808
  %1814 = icmp eq i32 %1809, %1811
  br i1 %1814, label %1815, label %1851

1815:                                             ; preds = %1813
  store i32 0, ptr %4, align 4, !tbaa !6
  %1816 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1816, ptr %6, align 4, !tbaa !6
  br i1 %1575, label %1858, label %1817

1817:                                             ; preds = %1815, %1845
  %1818 = phi i64 [ %1849, %1845 ], [ 1, %1815 ]
  %1819 = getelementptr inbounds i32, ptr %4, i64 %1818
  %1820 = load i32, ptr %1819, align 4, !tbaa !6
  %1821 = getelementptr inbounds i32, ptr %12, i64 %1818
  %1822 = load i32, ptr %1821, align 4, !tbaa !6
  %1823 = add nsw i32 %1822, -1
  %1824 = icmp slt i32 %1820, %1823
  br i1 %1824, label %1825, label %1843

1825:                                             ; preds = %1817
  br i1 %1812, label %1835, label %1826

1826:                                             ; preds = %1825
  %1827 = shl i64 %1818, 32
  %1828 = add i64 %1827, -4294967296
  %1829 = ashr exact i64 %1828, 32
  %1830 = getelementptr inbounds i32, ptr %7, i64 %1829
  %1831 = load i32, ptr %1830, align 4, !tbaa !6
  %1832 = getelementptr inbounds i32, ptr %6, i64 %1818
  %1833 = load i32, ptr %1832, align 4, !tbaa !6
  %1834 = add nsw i32 %1833, %1831
  store i32 %1834, ptr %1832, align 4, !tbaa !6
  br label %1853

1835:                                             ; preds = %1808, %1825
  %1836 = phi i32 [ %1820, %1825 ], [ %1809, %1808 ]
  %1837 = phi ptr [ %1819, %1825 ], [ %4, %1808 ]
  %1838 = phi i64 [ %1818, %1825 ], [ 0, %1808 ]
  %1839 = add nsw i32 %1836, 1
  store i32 %1839, ptr %1837, align 4, !tbaa !6
  %1840 = getelementptr inbounds i32, ptr %7, i64 %1838
  %1841 = load i32, ptr %1840, align 4, !tbaa !6
  %1842 = getelementptr inbounds i32, ptr %6, i64 %1838
  br label %1853

1843:                                             ; preds = %1817
  %1844 = icmp eq i32 %1820, %1823
  br i1 %1844, label %1845, label %1851

1845:                                             ; preds = %1843
  store i32 0, ptr %1819, align 4, !tbaa !6
  %1846 = getelementptr inbounds i32, ptr %8, i64 %1818
  %1847 = load i32, ptr %1846, align 4, !tbaa !6
  %1848 = getelementptr inbounds i32, ptr %6, i64 %1818
  store i32 %1847, ptr %1848, align 4, !tbaa !6
  %1849 = add nuw nsw i64 %1818, 1
  %1850 = icmp eq i64 %1849, %1573
  br i1 %1850, label %1858, label %1817, !llvm.loop !543

1851:                                             ; preds = %1813, %1843
  %1852 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 800, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3089

1853:                                             ; preds = %1826, %1835
  %1854 = phi ptr [ %1842, %1835 ], [ %1819, %1826 ]
  %1855 = phi i32 [ %1841, %1835 ], [ 1, %1826 ]
  %1856 = load i32, ptr %1854, align 4, !tbaa !6
  %1857 = add nsw i32 %1856, %1855
  store i32 %1857, ptr %1854, align 4, !tbaa !6
  br label %1858

1858:                                             ; preds = %1845, %1853, %1815, %1805
  %1859 = icmp eq i32 %1807, %5
  br i1 %1859, label %3084, label %1720, !llvm.loop !544

1860:                                             ; preds = %1259
  %1861 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 800, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3084

1862:                                             ; preds = %18
  %1863 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1864 = load ptr, ptr %1863, align 8, !tbaa !10
  %1865 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1866 = load ptr, ptr %1865, align 8, !tbaa !10
  %1867 = load i16, ptr %1864, align 2, !tbaa !79
  %1868 = sitofp i16 %1867 to float
  store float %1868, ptr %1866, align 4, !tbaa !163
  %1869 = icmp eq i32 %13, 0
  br i1 %1869, label %3084, label %1870

1870:                                             ; preds = %1862
  switch i32 %1, label %2471 [
    i32 1, label %1871
    i32 0, label %2173
  ]

1871:                                             ; preds = %1870
  %1872 = getelementptr inbounds i32, ptr %3, i64 %19
  %1873 = load i32, ptr %1872, align 4, !tbaa !6
  %1874 = icmp eq i32 %1873, 0
  %1875 = icmp sgt i32 %5, 0
  br i1 %1874, label %1885, label %1876

1876:                                             ; preds = %1871
  br i1 %1875, label %1877, label %3084

1877:                                             ; preds = %1876
  %1878 = icmp sgt i32 %13, 1
  %1879 = icmp sgt i32 %13, 0
  %1880 = add i32 %13, -2
  %1881 = zext i32 %1880 to i64
  %1882 = zext i32 %13 to i64
  %1883 = add nuw i32 %5, 1
  %1884 = icmp eq i32 %13, 1
  br label %2033

1885:                                             ; preds = %1871
  br i1 %1875, label %1886, label %3084

1886:                                             ; preds = %1885
  %1887 = icmp sgt i32 %13, 1
  %1888 = icmp sgt i32 %13, 0
  %1889 = add i32 %13, -2
  %1890 = zext i32 %1889 to i64
  %1891 = zext i32 %13 to i64
  %1892 = add nuw i32 %5, 1
  %1893 = icmp eq i32 %13, 1
  br label %1894

1894:                                             ; preds = %1886, %2031
  %1895 = phi float [ %1868, %1886 ], [ %1981, %2031 ]
  %1896 = phi i32 [ 0, %1886 ], [ %1983, %2031 ]
  %1897 = phi double [ 0.000000e+00, %1886 ], [ %1982, %2031 ]
  %1898 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1887, label %1899, label %1968

1899:                                             ; preds = %1894, %1958
  %1900 = phi i32 [ %1967, %1958 ], [ 0, %1894 ]
  %1901 = phi i64 [ %1909, %1958 ], [ %1891, %1894 ]
  %1902 = phi i64 [ %1966, %1958 ], [ %1890, %1894 ]
  %1903 = phi i32 [ %1964, %1958 ], [ %1898, %1894 ]
  %1904 = sub i32 %1889, %1900
  %1905 = tail call i32 @llvm.smin.i32(i32 %1904, i32 0)
  %1906 = sub i32 %1904, %1905
  %1907 = zext i32 %1906 to i64
  %1908 = add nuw nsw i64 %1907, 1
  %1909 = add nsw i64 %1901, -1
  %1910 = icmp ult i32 %1906, 31
  br i1 %1910, label %1946, label %1911

1911:                                             ; preds = %1899
  %1912 = and i64 %1908, 8589934560
  %1913 = sub i64 %1902, %1912
  br label %1914

1914:                                             ; preds = %1914, %1911
  %1915 = phi i64 [ 0, %1911 ], [ %1938, %1914 ]
  %1916 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1911 ], [ %1934, %1914 ]
  %1917 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1911 ], [ %1935, %1914 ]
  %1918 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1911 ], [ %1936, %1914 ]
  %1919 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1911 ], [ %1937, %1914 ]
  %1920 = sub i64 %1902, %1915
  %1921 = getelementptr inbounds i32, ptr %9, i64 %1920
  %1922 = getelementptr inbounds i32, ptr %1921, i64 -7
  %1923 = load <8 x i32>, ptr %1922, align 4, !tbaa !6
  %1924 = shufflevector <8 x i32> %1923, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1925 = getelementptr inbounds i32, ptr %1921, i64 -15
  %1926 = load <8 x i32>, ptr %1925, align 4, !tbaa !6
  %1927 = shufflevector <8 x i32> %1926, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1928 = getelementptr inbounds i32, ptr %1921, i64 -23
  %1929 = load <8 x i32>, ptr %1928, align 4, !tbaa !6
  %1930 = shufflevector <8 x i32> %1929, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1931 = getelementptr inbounds i32, ptr %1921, i64 -31
  %1932 = load <8 x i32>, ptr %1931, align 4, !tbaa !6
  %1933 = shufflevector <8 x i32> %1932, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1934 = mul <8 x i32> %1924, %1916
  %1935 = mul <8 x i32> %1927, %1917
  %1936 = mul <8 x i32> %1930, %1918
  %1937 = mul <8 x i32> %1933, %1919
  %1938 = add nuw i64 %1915, 32
  %1939 = icmp eq i64 %1938, %1912
  br i1 %1939, label %1940, label %1914, !llvm.loop !545

1940:                                             ; preds = %1914
  %1941 = mul <8 x i32> %1935, %1934
  %1942 = mul <8 x i32> %1936, %1941
  %1943 = mul <8 x i32> %1937, %1942
  %1944 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1943)
  %1945 = icmp eq i64 %1908, %1912
  br i1 %1945, label %1958, label %1946

1946:                                             ; preds = %1899, %1940
  %1947 = phi i64 [ %1902, %1899 ], [ %1913, %1940 ]
  %1948 = phi i32 [ 1, %1899 ], [ %1944, %1940 ]
  br label %1949

1949:                                             ; preds = %1946, %1949
  %1950 = phi i64 [ %1955, %1949 ], [ %1947, %1946 ]
  %1951 = phi i32 [ %1954, %1949 ], [ %1948, %1946 ]
  %1952 = getelementptr inbounds i32, ptr %9, i64 %1950
  %1953 = load i32, ptr %1952, align 4, !tbaa !6
  %1954 = mul nsw i32 %1953, %1951
  %1955 = add nsw i64 %1950, -1
  %1956 = trunc i64 %1950 to i32
  %1957 = icmp sgt i32 %1956, 0
  br i1 %1957, label %1949, label %1958, !llvm.loop !546

1958:                                             ; preds = %1949, %1940
  %1959 = phi i32 [ %1944, %1940 ], [ %1954, %1949 ]
  %1960 = and i64 %1909, 4294967295
  %1961 = getelementptr inbounds i32, ptr %6, i64 %1960
  %1962 = load i32, ptr %1961, align 4, !tbaa !6
  %1963 = mul nsw i32 %1962, %1959
  %1964 = add nsw i32 %1963, %1903
  %1965 = icmp sgt i64 %1901, 2
  %1966 = add nsw i64 %1902, -1
  %1967 = add i32 %1900, 1
  br i1 %1965, label %1899, label %1968, !llvm.loop !547

1968:                                             ; preds = %1958, %1894
  %1969 = phi i32 [ %1898, %1894 ], [ %1964, %1958 ]
  %1970 = sext i32 %1969 to i64
  %1971 = getelementptr inbounds double, ptr %2, i64 %1970
  %1972 = load double, ptr %1971, align 8, !tbaa !19
  %1973 = getelementptr inbounds i16, ptr %1864, i64 %1970
  %1974 = load i16, ptr %1973, align 2, !tbaa !79
  %1975 = sitofp i16 %1974 to float
  %1976 = fcmp fast one double %1972, 0.000000e+00
  %1977 = fcmp fast olt float %1895, %1975
  %1978 = select i1 %1976, i1 %1977, i1 false
  br i1 %1978, label %1979, label %1980

1979:                                             ; preds = %1968
  store float %1975, ptr %1866, align 4, !tbaa !163
  br label %1980

1980:                                             ; preds = %1979, %1968
  %1981 = phi float [ %1975, %1979 ], [ %1895, %1968 ]
  %1982 = fadd fast double %1972, %1897
  %1983 = add nuw nsw i32 %1896, 1
  br i1 %1888, label %1984, label %2031

1984:                                             ; preds = %1980
  %1985 = load i32, ptr %4, align 4, !tbaa !6
  %1986 = load i32, ptr %12, align 4, !tbaa !6
  %1987 = add nsw i32 %1986, -1
  %1988 = icmp slt i32 %1985, %1987
  br i1 %1988, label %2008, label %1989

1989:                                             ; preds = %1984
  %1990 = icmp eq i32 %1985, %1987
  br i1 %1990, label %1991, label %2024

1991:                                             ; preds = %1989
  store i32 0, ptr %4, align 4, !tbaa !6
  %1992 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1992, ptr %6, align 4, !tbaa !6
  br i1 %1893, label %2031, label %1993

1993:                                             ; preds = %1991, %2018
  %1994 = phi i64 [ %2022, %2018 ], [ 1, %1991 ]
  %1995 = getelementptr inbounds i32, ptr %4, i64 %1994
  %1996 = load i32, ptr %1995, align 4, !tbaa !6
  %1997 = getelementptr inbounds i32, ptr %12, i64 %1994
  %1998 = load i32, ptr %1997, align 4, !tbaa !6
  %1999 = add nsw i32 %1998, -1
  %2000 = icmp slt i32 %1996, %1999
  br i1 %2000, label %2001, label %2016

2001:                                             ; preds = %1993
  br i1 %1988, label %2008, label %2002

2002:                                             ; preds = %2001
  %2003 = getelementptr inbounds i32, ptr %7, i64 %1994
  %2004 = load i32, ptr %2003, align 4, !tbaa !6
  %2005 = getelementptr inbounds i32, ptr %6, i64 %1994
  %2006 = load i32, ptr %2005, align 4, !tbaa !6
  %2007 = add nsw i32 %2006, %2004
  store i32 %2007, ptr %2005, align 4, !tbaa !6
  br label %2026

2008:                                             ; preds = %1984, %2001
  %2009 = phi i32 [ %1996, %2001 ], [ %1985, %1984 ]
  %2010 = phi ptr [ %1995, %2001 ], [ %4, %1984 ]
  %2011 = phi i64 [ %1994, %2001 ], [ 0, %1984 ]
  %2012 = add nsw i32 %2009, 1
  store i32 %2012, ptr %2010, align 4, !tbaa !6
  %2013 = getelementptr inbounds i32, ptr %7, i64 %2011
  %2014 = load i32, ptr %2013, align 4, !tbaa !6
  %2015 = getelementptr inbounds i32, ptr %6, i64 %2011
  br label %2026

2016:                                             ; preds = %1993
  %2017 = icmp eq i32 %1996, %1999
  br i1 %2017, label %2018, label %2024

2018:                                             ; preds = %2016
  store i32 0, ptr %1995, align 4, !tbaa !6
  %2019 = getelementptr inbounds i32, ptr %8, i64 %1994
  %2020 = load i32, ptr %2019, align 4, !tbaa !6
  %2021 = getelementptr inbounds i32, ptr %6, i64 %1994
  store i32 %2020, ptr %2021, align 4, !tbaa !6
  %2022 = add nuw nsw i64 %1994, 1
  %2023 = icmp eq i64 %2022, %1891
  br i1 %2023, label %2031, label %1993, !llvm.loop !548

2024:                                             ; preds = %1989, %2016
  %2025 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 804, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3089

2026:                                             ; preds = %2002, %2008
  %2027 = phi ptr [ %2015, %2008 ], [ %1995, %2002 ]
  %2028 = phi i32 [ %2014, %2008 ], [ 1, %2002 ]
  %2029 = load i32, ptr %2027, align 4, !tbaa !6
  %2030 = add nsw i32 %2029, %2028
  store i32 %2030, ptr %2027, align 4, !tbaa !6
  br label %2031

2031:                                             ; preds = %2018, %2026, %1991, %1980
  %2032 = icmp eq i32 %1983, %5
  br i1 %2032, label %3084, label %1894, !llvm.loop !549

2033:                                             ; preds = %1877, %2171
  %2034 = phi float [ %1868, %1877 ], [ %2119, %2171 ]
  %2035 = phi i32 [ 0, %1877 ], [ %2120, %2171 ]
  %2036 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1878, label %2037, label %2106

2037:                                             ; preds = %2033, %2096
  %2038 = phi i32 [ %2105, %2096 ], [ 0, %2033 ]
  %2039 = phi i64 [ %2047, %2096 ], [ %1882, %2033 ]
  %2040 = phi i64 [ %2104, %2096 ], [ %1881, %2033 ]
  %2041 = phi i32 [ %2102, %2096 ], [ %2036, %2033 ]
  %2042 = sub i32 %1880, %2038
  %2043 = tail call i32 @llvm.smin.i32(i32 %2042, i32 0)
  %2044 = sub i32 %2042, %2043
  %2045 = zext i32 %2044 to i64
  %2046 = add nuw nsw i64 %2045, 1
  %2047 = add nsw i64 %2039, -1
  %2048 = icmp ult i32 %2044, 31
  br i1 %2048, label %2084, label %2049

2049:                                             ; preds = %2037
  %2050 = and i64 %2046, 8589934560
  %2051 = sub i64 %2040, %2050
  br label %2052

2052:                                             ; preds = %2052, %2049
  %2053 = phi i64 [ 0, %2049 ], [ %2076, %2052 ]
  %2054 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2049 ], [ %2072, %2052 ]
  %2055 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2049 ], [ %2073, %2052 ]
  %2056 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2049 ], [ %2074, %2052 ]
  %2057 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2049 ], [ %2075, %2052 ]
  %2058 = sub i64 %2040, %2053
  %2059 = getelementptr inbounds i32, ptr %11, i64 %2058
  %2060 = getelementptr inbounds i32, ptr %2059, i64 -7
  %2061 = load <8 x i32>, ptr %2060, align 4, !tbaa !6
  %2062 = shufflevector <8 x i32> %2061, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2063 = getelementptr inbounds i32, ptr %2059, i64 -15
  %2064 = load <8 x i32>, ptr %2063, align 4, !tbaa !6
  %2065 = shufflevector <8 x i32> %2064, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2066 = getelementptr inbounds i32, ptr %2059, i64 -23
  %2067 = load <8 x i32>, ptr %2066, align 4, !tbaa !6
  %2068 = shufflevector <8 x i32> %2067, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2069 = getelementptr inbounds i32, ptr %2059, i64 -31
  %2070 = load <8 x i32>, ptr %2069, align 4, !tbaa !6
  %2071 = shufflevector <8 x i32> %2070, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2072 = mul <8 x i32> %2062, %2054
  %2073 = mul <8 x i32> %2065, %2055
  %2074 = mul <8 x i32> %2068, %2056
  %2075 = mul <8 x i32> %2071, %2057
  %2076 = add nuw i64 %2053, 32
  %2077 = icmp eq i64 %2076, %2050
  br i1 %2077, label %2078, label %2052, !llvm.loop !550

2078:                                             ; preds = %2052
  %2079 = mul <8 x i32> %2073, %2072
  %2080 = mul <8 x i32> %2074, %2079
  %2081 = mul <8 x i32> %2075, %2080
  %2082 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2081)
  %2083 = icmp eq i64 %2046, %2050
  br i1 %2083, label %2096, label %2084

2084:                                             ; preds = %2037, %2078
  %2085 = phi i64 [ %2040, %2037 ], [ %2051, %2078 ]
  %2086 = phi i32 [ 1, %2037 ], [ %2082, %2078 ]
  br label %2087

2087:                                             ; preds = %2084, %2087
  %2088 = phi i64 [ %2093, %2087 ], [ %2085, %2084 ]
  %2089 = phi i32 [ %2092, %2087 ], [ %2086, %2084 ]
  %2090 = getelementptr inbounds i32, ptr %11, i64 %2088
  %2091 = load i32, ptr %2090, align 4, !tbaa !6
  %2092 = mul nsw i32 %2091, %2089
  %2093 = add nsw i64 %2088, -1
  %2094 = trunc i64 %2088 to i32
  %2095 = icmp sgt i32 %2094, 0
  br i1 %2095, label %2087, label %2096, !llvm.loop !551

2096:                                             ; preds = %2087, %2078
  %2097 = phi i32 [ %2082, %2078 ], [ %2092, %2087 ]
  %2098 = and i64 %2047, 4294967295
  %2099 = getelementptr inbounds i32, ptr %6, i64 %2098
  %2100 = load i32, ptr %2099, align 4, !tbaa !6
  %2101 = mul nsw i32 %2100, %2097
  %2102 = add nsw i32 %2101, %2041
  %2103 = icmp sgt i64 %2039, 2
  %2104 = add nsw i64 %2040, -1
  %2105 = add i32 %2038, 1
  br i1 %2103, label %2037, label %2106, !llvm.loop !552

2106:                                             ; preds = %2096, %2033
  %2107 = phi i32 [ %2036, %2033 ], [ %2102, %2096 ]
  %2108 = icmp slt i32 %2107, %5
  br i1 %2108, label %2111, label %2109

2109:                                             ; preds = %2106
  %2110 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 804, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3089

2111:                                             ; preds = %2106
  %2112 = sext i32 %2107 to i64
  %2113 = getelementptr inbounds i16, ptr %1864, i64 %2112
  %2114 = load i16, ptr %2113, align 2, !tbaa !79
  %2115 = sitofp i16 %2114 to float
  %2116 = fcmp fast olt float %2034, %2115
  br i1 %2116, label %2117, label %2118

2117:                                             ; preds = %2111
  store float %2115, ptr %1866, align 4, !tbaa !163
  br label %2118

2118:                                             ; preds = %2111, %2117
  %2119 = phi float [ %2034, %2111 ], [ %2115, %2117 ]
  %2120 = add nuw nsw i32 %2035, 1
  br i1 %1879, label %2121, label %2171

2121:                                             ; preds = %2118
  %2122 = load i32, ptr %4, align 4, !tbaa !6
  %2123 = load i32, ptr %12, align 4, !tbaa !6
  %2124 = add nsw i32 %2123, -1
  %2125 = icmp slt i32 %2122, %2124
  br i1 %2125, label %2148, label %2126

2126:                                             ; preds = %2121
  %2127 = icmp eq i32 %2122, %2124
  br i1 %2127, label %2128, label %2164

2128:                                             ; preds = %2126
  store i32 0, ptr %4, align 4, !tbaa !6
  %2129 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2129, ptr %6, align 4, !tbaa !6
  br i1 %1884, label %2171, label %2130

2130:                                             ; preds = %2128, %2158
  %2131 = phi i64 [ %2162, %2158 ], [ 1, %2128 ]
  %2132 = getelementptr inbounds i32, ptr %4, i64 %2131
  %2133 = load i32, ptr %2132, align 4, !tbaa !6
  %2134 = getelementptr inbounds i32, ptr %12, i64 %2131
  %2135 = load i32, ptr %2134, align 4, !tbaa !6
  %2136 = add nsw i32 %2135, -1
  %2137 = icmp slt i32 %2133, %2136
  br i1 %2137, label %2138, label %2156

2138:                                             ; preds = %2130
  br i1 %2125, label %2148, label %2139

2139:                                             ; preds = %2138
  %2140 = shl i64 %2131, 32
  %2141 = add i64 %2140, -4294967296
  %2142 = ashr exact i64 %2141, 32
  %2143 = getelementptr inbounds i32, ptr %7, i64 %2142
  %2144 = load i32, ptr %2143, align 4, !tbaa !6
  %2145 = getelementptr inbounds i32, ptr %6, i64 %2131
  %2146 = load i32, ptr %2145, align 4, !tbaa !6
  %2147 = add nsw i32 %2146, %2144
  store i32 %2147, ptr %2145, align 4, !tbaa !6
  br label %2166

2148:                                             ; preds = %2121, %2138
  %2149 = phi i32 [ %2133, %2138 ], [ %2122, %2121 ]
  %2150 = phi ptr [ %2132, %2138 ], [ %4, %2121 ]
  %2151 = phi i64 [ %2131, %2138 ], [ 0, %2121 ]
  %2152 = add nsw i32 %2149, 1
  store i32 %2152, ptr %2150, align 4, !tbaa !6
  %2153 = getelementptr inbounds i32, ptr %7, i64 %2151
  %2154 = load i32, ptr %2153, align 4, !tbaa !6
  %2155 = getelementptr inbounds i32, ptr %6, i64 %2151
  br label %2166

2156:                                             ; preds = %2130
  %2157 = icmp eq i32 %2133, %2136
  br i1 %2157, label %2158, label %2164

2158:                                             ; preds = %2156
  store i32 0, ptr %2132, align 4, !tbaa !6
  %2159 = getelementptr inbounds i32, ptr %8, i64 %2131
  %2160 = load i32, ptr %2159, align 4, !tbaa !6
  %2161 = getelementptr inbounds i32, ptr %6, i64 %2131
  store i32 %2160, ptr %2161, align 4, !tbaa !6
  %2162 = add nuw nsw i64 %2131, 1
  %2163 = icmp eq i64 %2162, %1882
  br i1 %2163, label %2171, label %2130, !llvm.loop !553

2164:                                             ; preds = %2126, %2156
  %2165 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 804, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3089

2166:                                             ; preds = %2139, %2148
  %2167 = phi ptr [ %2155, %2148 ], [ %2132, %2139 ]
  %2168 = phi i32 [ %2154, %2148 ], [ 1, %2139 ]
  %2169 = load i32, ptr %2167, align 4, !tbaa !6
  %2170 = add nsw i32 %2169, %2168
  store i32 %2170, ptr %2167, align 4, !tbaa !6
  br label %2171

2171:                                             ; preds = %2158, %2166, %2128, %2118
  %2172 = icmp eq i32 %2120, %5
  br i1 %2172, label %3084, label %2033, !llvm.loop !554

2173:                                             ; preds = %1870
  %2174 = getelementptr inbounds i32, ptr %3, i64 %19
  %2175 = load i32, ptr %2174, align 4, !tbaa !6
  %2176 = icmp eq i32 %2175, 0
  %2177 = icmp sgt i32 %5, 0
  br i1 %2176, label %2187, label %2178

2178:                                             ; preds = %2173
  br i1 %2177, label %2179, label %3084

2179:                                             ; preds = %2178
  %2180 = icmp sgt i32 %13, 1
  %2181 = icmp sgt i32 %13, 0
  %2182 = add i32 %13, -2
  %2183 = zext i32 %2182 to i64
  %2184 = zext i32 %13 to i64
  %2185 = add nuw i32 %5, 1
  %2186 = icmp eq i32 %13, 1
  br label %2331

2187:                                             ; preds = %2173
  br i1 %2177, label %2188, label %3084

2188:                                             ; preds = %2187
  %2189 = icmp sgt i32 %13, 1
  %2190 = icmp sgt i32 %13, 0
  %2191 = add i32 %13, -2
  %2192 = zext i32 %2191 to i64
  %2193 = zext i32 %13 to i64
  %2194 = add nuw i32 %5, 1
  %2195 = icmp eq i32 %13, 1
  br label %2196

2196:                                             ; preds = %2188, %2329
  %2197 = phi float [ %1868, %2188 ], [ %2279, %2329 ]
  %2198 = phi i32 [ 0, %2188 ], [ %2281, %2329 ]
  %2199 = phi double [ 0.000000e+00, %2188 ], [ %2280, %2329 ]
  %2200 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2189, label %2201, label %2270

2201:                                             ; preds = %2196, %2260
  %2202 = phi i32 [ %2269, %2260 ], [ 0, %2196 ]
  %2203 = phi i64 [ %2211, %2260 ], [ %2193, %2196 ]
  %2204 = phi i64 [ %2268, %2260 ], [ %2192, %2196 ]
  %2205 = phi i32 [ %2266, %2260 ], [ %2200, %2196 ]
  %2206 = sub i32 %2191, %2202
  %2207 = tail call i32 @llvm.smin.i32(i32 %2206, i32 0)
  %2208 = sub i32 %2206, %2207
  %2209 = zext i32 %2208 to i64
  %2210 = add nuw nsw i64 %2209, 1
  %2211 = add nsw i64 %2203, -1
  %2212 = icmp ult i32 %2208, 31
  br i1 %2212, label %2248, label %2213

2213:                                             ; preds = %2201
  %2214 = and i64 %2210, 8589934560
  %2215 = sub i64 %2204, %2214
  br label %2216

2216:                                             ; preds = %2216, %2213
  %2217 = phi i64 [ 0, %2213 ], [ %2240, %2216 ]
  %2218 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2213 ], [ %2236, %2216 ]
  %2219 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2213 ], [ %2237, %2216 ]
  %2220 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2213 ], [ %2238, %2216 ]
  %2221 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2213 ], [ %2239, %2216 ]
  %2222 = sub i64 %2204, %2217
  %2223 = getelementptr inbounds i32, ptr %9, i64 %2222
  %2224 = getelementptr inbounds i32, ptr %2223, i64 -7
  %2225 = load <8 x i32>, ptr %2224, align 4, !tbaa !6
  %2226 = shufflevector <8 x i32> %2225, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2227 = getelementptr inbounds i32, ptr %2223, i64 -15
  %2228 = load <8 x i32>, ptr %2227, align 4, !tbaa !6
  %2229 = shufflevector <8 x i32> %2228, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2230 = getelementptr inbounds i32, ptr %2223, i64 -23
  %2231 = load <8 x i32>, ptr %2230, align 4, !tbaa !6
  %2232 = shufflevector <8 x i32> %2231, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2233 = getelementptr inbounds i32, ptr %2223, i64 -31
  %2234 = load <8 x i32>, ptr %2233, align 4, !tbaa !6
  %2235 = shufflevector <8 x i32> %2234, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2236 = mul <8 x i32> %2226, %2218
  %2237 = mul <8 x i32> %2229, %2219
  %2238 = mul <8 x i32> %2232, %2220
  %2239 = mul <8 x i32> %2235, %2221
  %2240 = add nuw i64 %2217, 32
  %2241 = icmp eq i64 %2240, %2214
  br i1 %2241, label %2242, label %2216, !llvm.loop !555

2242:                                             ; preds = %2216
  %2243 = mul <8 x i32> %2237, %2236
  %2244 = mul <8 x i32> %2238, %2243
  %2245 = mul <8 x i32> %2239, %2244
  %2246 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2245)
  %2247 = icmp eq i64 %2210, %2214
  br i1 %2247, label %2260, label %2248

2248:                                             ; preds = %2201, %2242
  %2249 = phi i64 [ %2204, %2201 ], [ %2215, %2242 ]
  %2250 = phi i32 [ 1, %2201 ], [ %2246, %2242 ]
  br label %2251

2251:                                             ; preds = %2248, %2251
  %2252 = phi i64 [ %2257, %2251 ], [ %2249, %2248 ]
  %2253 = phi i32 [ %2256, %2251 ], [ %2250, %2248 ]
  %2254 = getelementptr inbounds i32, ptr %9, i64 %2252
  %2255 = load i32, ptr %2254, align 4, !tbaa !6
  %2256 = mul nsw i32 %2255, %2253
  %2257 = add nsw i64 %2252, -1
  %2258 = trunc i64 %2252 to i32
  %2259 = icmp sgt i32 %2258, 0
  br i1 %2259, label %2251, label %2260, !llvm.loop !556

2260:                                             ; preds = %2251, %2242
  %2261 = phi i32 [ %2246, %2242 ], [ %2256, %2251 ]
  %2262 = and i64 %2211, 4294967295
  %2263 = getelementptr inbounds i32, ptr %6, i64 %2262
  %2264 = load i32, ptr %2263, align 4, !tbaa !6
  %2265 = mul nsw i32 %2264, %2261
  %2266 = add nsw i32 %2265, %2205
  %2267 = icmp sgt i64 %2203, 2
  %2268 = add nsw i64 %2204, -1
  %2269 = add i32 %2202, 1
  br i1 %2267, label %2201, label %2270, !llvm.loop !557

2270:                                             ; preds = %2260, %2196
  %2271 = phi i32 [ %2200, %2196 ], [ %2266, %2260 ]
  %2272 = sext i32 %2271 to i64
  %2273 = getelementptr inbounds i16, ptr %1864, i64 %2272
  %2274 = load i16, ptr %2273, align 2, !tbaa !79
  %2275 = sitofp i16 %2274 to float
  %2276 = fcmp fast olt float %2197, %2275
  br i1 %2276, label %2277, label %2278

2277:                                             ; preds = %2270
  store float %2275, ptr %1866, align 4, !tbaa !163
  br label %2278

2278:                                             ; preds = %2277, %2270
  %2279 = phi float [ %2275, %2277 ], [ %2197, %2270 ]
  %2280 = fadd fast double %2199, 1.000000e+00
  %2281 = add nuw nsw i32 %2198, 1
  br i1 %2190, label %2282, label %2329

2282:                                             ; preds = %2278
  %2283 = load i32, ptr %4, align 4, !tbaa !6
  %2284 = load i32, ptr %12, align 4, !tbaa !6
  %2285 = add nsw i32 %2284, -1
  %2286 = icmp slt i32 %2283, %2285
  br i1 %2286, label %2306, label %2287

2287:                                             ; preds = %2282
  %2288 = icmp eq i32 %2283, %2285
  br i1 %2288, label %2289, label %2322

2289:                                             ; preds = %2287
  store i32 0, ptr %4, align 4, !tbaa !6
  %2290 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2290, ptr %6, align 4, !tbaa !6
  br i1 %2195, label %2329, label %2291

2291:                                             ; preds = %2289, %2316
  %2292 = phi i64 [ %2320, %2316 ], [ 1, %2289 ]
  %2293 = getelementptr inbounds i32, ptr %4, i64 %2292
  %2294 = load i32, ptr %2293, align 4, !tbaa !6
  %2295 = getelementptr inbounds i32, ptr %12, i64 %2292
  %2296 = load i32, ptr %2295, align 4, !tbaa !6
  %2297 = add nsw i32 %2296, -1
  %2298 = icmp slt i32 %2294, %2297
  br i1 %2298, label %2299, label %2314

2299:                                             ; preds = %2291
  br i1 %2286, label %2306, label %2300

2300:                                             ; preds = %2299
  %2301 = getelementptr inbounds i32, ptr %7, i64 %2292
  %2302 = load i32, ptr %2301, align 4, !tbaa !6
  %2303 = getelementptr inbounds i32, ptr %6, i64 %2292
  %2304 = load i32, ptr %2303, align 4, !tbaa !6
  %2305 = add nsw i32 %2304, %2302
  store i32 %2305, ptr %2303, align 4, !tbaa !6
  br label %2324

2306:                                             ; preds = %2282, %2299
  %2307 = phi i32 [ %2294, %2299 ], [ %2283, %2282 ]
  %2308 = phi ptr [ %2293, %2299 ], [ %4, %2282 ]
  %2309 = phi i64 [ %2292, %2299 ], [ 0, %2282 ]
  %2310 = add nsw i32 %2307, 1
  store i32 %2310, ptr %2308, align 4, !tbaa !6
  %2311 = getelementptr inbounds i32, ptr %7, i64 %2309
  %2312 = load i32, ptr %2311, align 4, !tbaa !6
  %2313 = getelementptr inbounds i32, ptr %6, i64 %2309
  br label %2324

2314:                                             ; preds = %2291
  %2315 = icmp eq i32 %2294, %2297
  br i1 %2315, label %2316, label %2322

2316:                                             ; preds = %2314
  store i32 0, ptr %2293, align 4, !tbaa !6
  %2317 = getelementptr inbounds i32, ptr %8, i64 %2292
  %2318 = load i32, ptr %2317, align 4, !tbaa !6
  %2319 = getelementptr inbounds i32, ptr %6, i64 %2292
  store i32 %2318, ptr %2319, align 4, !tbaa !6
  %2320 = add nuw nsw i64 %2292, 1
  %2321 = icmp eq i64 %2320, %2193
  br i1 %2321, label %2329, label %2291, !llvm.loop !558

2322:                                             ; preds = %2287, %2314
  %2323 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 804, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3089

2324:                                             ; preds = %2300, %2306
  %2325 = phi ptr [ %2313, %2306 ], [ %2293, %2300 ]
  %2326 = phi i32 [ %2312, %2306 ], [ 1, %2300 ]
  %2327 = load i32, ptr %2325, align 4, !tbaa !6
  %2328 = add nsw i32 %2327, %2326
  store i32 %2328, ptr %2325, align 4, !tbaa !6
  br label %2329

2329:                                             ; preds = %2316, %2324, %2289, %2278
  %2330 = icmp eq i32 %2281, %5
  br i1 %2330, label %3084, label %2196, !llvm.loop !559

2331:                                             ; preds = %2179, %2469
  %2332 = phi float [ %1868, %2179 ], [ %2417, %2469 ]
  %2333 = phi i32 [ 0, %2179 ], [ %2418, %2469 ]
  %2334 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2180, label %2335, label %2404

2335:                                             ; preds = %2331, %2394
  %2336 = phi i32 [ %2403, %2394 ], [ 0, %2331 ]
  %2337 = phi i64 [ %2345, %2394 ], [ %2184, %2331 ]
  %2338 = phi i64 [ %2402, %2394 ], [ %2183, %2331 ]
  %2339 = phi i32 [ %2400, %2394 ], [ %2334, %2331 ]
  %2340 = sub i32 %2182, %2336
  %2341 = tail call i32 @llvm.smin.i32(i32 %2340, i32 0)
  %2342 = sub i32 %2340, %2341
  %2343 = zext i32 %2342 to i64
  %2344 = add nuw nsw i64 %2343, 1
  %2345 = add nsw i64 %2337, -1
  %2346 = icmp ult i32 %2342, 31
  br i1 %2346, label %2382, label %2347

2347:                                             ; preds = %2335
  %2348 = and i64 %2344, 8589934560
  %2349 = sub i64 %2338, %2348
  br label %2350

2350:                                             ; preds = %2350, %2347
  %2351 = phi i64 [ 0, %2347 ], [ %2374, %2350 ]
  %2352 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2347 ], [ %2370, %2350 ]
  %2353 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2347 ], [ %2371, %2350 ]
  %2354 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2347 ], [ %2372, %2350 ]
  %2355 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2347 ], [ %2373, %2350 ]
  %2356 = sub i64 %2338, %2351
  %2357 = getelementptr inbounds i32, ptr %11, i64 %2356
  %2358 = getelementptr inbounds i32, ptr %2357, i64 -7
  %2359 = load <8 x i32>, ptr %2358, align 4, !tbaa !6
  %2360 = shufflevector <8 x i32> %2359, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2361 = getelementptr inbounds i32, ptr %2357, i64 -15
  %2362 = load <8 x i32>, ptr %2361, align 4, !tbaa !6
  %2363 = shufflevector <8 x i32> %2362, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2364 = getelementptr inbounds i32, ptr %2357, i64 -23
  %2365 = load <8 x i32>, ptr %2364, align 4, !tbaa !6
  %2366 = shufflevector <8 x i32> %2365, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2367 = getelementptr inbounds i32, ptr %2357, i64 -31
  %2368 = load <8 x i32>, ptr %2367, align 4, !tbaa !6
  %2369 = shufflevector <8 x i32> %2368, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2370 = mul <8 x i32> %2360, %2352
  %2371 = mul <8 x i32> %2363, %2353
  %2372 = mul <8 x i32> %2366, %2354
  %2373 = mul <8 x i32> %2369, %2355
  %2374 = add nuw i64 %2351, 32
  %2375 = icmp eq i64 %2374, %2348
  br i1 %2375, label %2376, label %2350, !llvm.loop !560

2376:                                             ; preds = %2350
  %2377 = mul <8 x i32> %2371, %2370
  %2378 = mul <8 x i32> %2372, %2377
  %2379 = mul <8 x i32> %2373, %2378
  %2380 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2379)
  %2381 = icmp eq i64 %2344, %2348
  br i1 %2381, label %2394, label %2382

2382:                                             ; preds = %2335, %2376
  %2383 = phi i64 [ %2338, %2335 ], [ %2349, %2376 ]
  %2384 = phi i32 [ 1, %2335 ], [ %2380, %2376 ]
  br label %2385

2385:                                             ; preds = %2382, %2385
  %2386 = phi i64 [ %2391, %2385 ], [ %2383, %2382 ]
  %2387 = phi i32 [ %2390, %2385 ], [ %2384, %2382 ]
  %2388 = getelementptr inbounds i32, ptr %11, i64 %2386
  %2389 = load i32, ptr %2388, align 4, !tbaa !6
  %2390 = mul nsw i32 %2389, %2387
  %2391 = add nsw i64 %2386, -1
  %2392 = trunc i64 %2386 to i32
  %2393 = icmp sgt i32 %2392, 0
  br i1 %2393, label %2385, label %2394, !llvm.loop !561

2394:                                             ; preds = %2385, %2376
  %2395 = phi i32 [ %2380, %2376 ], [ %2390, %2385 ]
  %2396 = and i64 %2345, 4294967295
  %2397 = getelementptr inbounds i32, ptr %6, i64 %2396
  %2398 = load i32, ptr %2397, align 4, !tbaa !6
  %2399 = mul nsw i32 %2398, %2395
  %2400 = add nsw i32 %2399, %2339
  %2401 = icmp sgt i64 %2337, 2
  %2402 = add nsw i64 %2338, -1
  %2403 = add i32 %2336, 1
  br i1 %2401, label %2335, label %2404, !llvm.loop !562

2404:                                             ; preds = %2394, %2331
  %2405 = phi i32 [ %2334, %2331 ], [ %2400, %2394 ]
  %2406 = icmp slt i32 %2405, %5
  br i1 %2406, label %2409, label %2407

2407:                                             ; preds = %2404
  %2408 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 804, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3089

2409:                                             ; preds = %2404
  %2410 = sext i32 %2405 to i64
  %2411 = getelementptr inbounds i16, ptr %1864, i64 %2410
  %2412 = load i16, ptr %2411, align 2, !tbaa !79
  %2413 = sitofp i16 %2412 to float
  %2414 = fcmp fast olt float %2332, %2413
  br i1 %2414, label %2415, label %2416

2415:                                             ; preds = %2409
  store float %2413, ptr %1866, align 4, !tbaa !163
  br label %2416

2416:                                             ; preds = %2415, %2409
  %2417 = phi float [ %2413, %2415 ], [ %2332, %2409 ]
  %2418 = add nuw nsw i32 %2333, 1
  br i1 %2181, label %2419, label %2469

2419:                                             ; preds = %2416
  %2420 = load i32, ptr %4, align 4, !tbaa !6
  %2421 = load i32, ptr %12, align 4, !tbaa !6
  %2422 = add nsw i32 %2421, -1
  %2423 = icmp slt i32 %2420, %2422
  br i1 %2423, label %2446, label %2424

2424:                                             ; preds = %2419
  %2425 = icmp eq i32 %2420, %2422
  br i1 %2425, label %2426, label %2462

2426:                                             ; preds = %2424
  store i32 0, ptr %4, align 4, !tbaa !6
  %2427 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2427, ptr %6, align 4, !tbaa !6
  br i1 %2186, label %2469, label %2428

2428:                                             ; preds = %2426, %2456
  %2429 = phi i64 [ %2460, %2456 ], [ 1, %2426 ]
  %2430 = getelementptr inbounds i32, ptr %4, i64 %2429
  %2431 = load i32, ptr %2430, align 4, !tbaa !6
  %2432 = getelementptr inbounds i32, ptr %12, i64 %2429
  %2433 = load i32, ptr %2432, align 4, !tbaa !6
  %2434 = add nsw i32 %2433, -1
  %2435 = icmp slt i32 %2431, %2434
  br i1 %2435, label %2436, label %2454

2436:                                             ; preds = %2428
  br i1 %2423, label %2446, label %2437

2437:                                             ; preds = %2436
  %2438 = shl i64 %2429, 32
  %2439 = add i64 %2438, -4294967296
  %2440 = ashr exact i64 %2439, 32
  %2441 = getelementptr inbounds i32, ptr %7, i64 %2440
  %2442 = load i32, ptr %2441, align 4, !tbaa !6
  %2443 = getelementptr inbounds i32, ptr %6, i64 %2429
  %2444 = load i32, ptr %2443, align 4, !tbaa !6
  %2445 = add nsw i32 %2444, %2442
  store i32 %2445, ptr %2443, align 4, !tbaa !6
  br label %2464

2446:                                             ; preds = %2419, %2436
  %2447 = phi i32 [ %2431, %2436 ], [ %2420, %2419 ]
  %2448 = phi ptr [ %2430, %2436 ], [ %4, %2419 ]
  %2449 = phi i64 [ %2429, %2436 ], [ 0, %2419 ]
  %2450 = add nsw i32 %2447, 1
  store i32 %2450, ptr %2448, align 4, !tbaa !6
  %2451 = getelementptr inbounds i32, ptr %7, i64 %2449
  %2452 = load i32, ptr %2451, align 4, !tbaa !6
  %2453 = getelementptr inbounds i32, ptr %6, i64 %2449
  br label %2464

2454:                                             ; preds = %2428
  %2455 = icmp eq i32 %2431, %2434
  br i1 %2455, label %2456, label %2462

2456:                                             ; preds = %2454
  store i32 0, ptr %2430, align 4, !tbaa !6
  %2457 = getelementptr inbounds i32, ptr %8, i64 %2429
  %2458 = load i32, ptr %2457, align 4, !tbaa !6
  %2459 = getelementptr inbounds i32, ptr %6, i64 %2429
  store i32 %2458, ptr %2459, align 4, !tbaa !6
  %2460 = add nuw nsw i64 %2429, 1
  %2461 = icmp eq i64 %2460, %2184
  br i1 %2461, label %2469, label %2428, !llvm.loop !563

2462:                                             ; preds = %2424, %2454
  %2463 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 804, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3089

2464:                                             ; preds = %2437, %2446
  %2465 = phi ptr [ %2453, %2446 ], [ %2430, %2437 ]
  %2466 = phi i32 [ %2452, %2446 ], [ 1, %2437 ]
  %2467 = load i32, ptr %2465, align 4, !tbaa !6
  %2468 = add nsw i32 %2467, %2466
  store i32 %2468, ptr %2465, align 4, !tbaa !6
  br label %2469

2469:                                             ; preds = %2456, %2464, %2426, %2416
  %2470 = icmp eq i32 %2418, %5
  br i1 %2470, label %3084, label %2331, !llvm.loop !564

2471:                                             ; preds = %1870
  %2472 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 804, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3084

2473:                                             ; preds = %18
  %2474 = getelementptr inbounds ptr, ptr %14, i64 %19
  %2475 = load ptr, ptr %2474, align 8, !tbaa !10
  %2476 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2477 = load ptr, ptr %2476, align 8, !tbaa !10
  %2478 = load i16, ptr %2475, align 2, !tbaa !79
  %2479 = sitofp i16 %2478 to double
  store double %2479, ptr %2477, align 8, !tbaa !19
  %2480 = icmp eq i32 %13, 0
  br i1 %2480, label %3084, label %2481

2481:                                             ; preds = %2473
  switch i32 %1, label %3082 [
    i32 1, label %2482
    i32 0, label %2784
  ]

2482:                                             ; preds = %2481
  %2483 = getelementptr inbounds i32, ptr %3, i64 %19
  %2484 = load i32, ptr %2483, align 4, !tbaa !6
  %2485 = icmp eq i32 %2484, 0
  %2486 = icmp sgt i32 %5, 0
  br i1 %2485, label %2496, label %2487

2487:                                             ; preds = %2482
  br i1 %2486, label %2488, label %3084

2488:                                             ; preds = %2487
  %2489 = icmp sgt i32 %13, 1
  %2490 = icmp sgt i32 %13, 0
  %2491 = add i32 %13, -2
  %2492 = zext i32 %2491 to i64
  %2493 = zext i32 %13 to i64
  %2494 = add nuw i32 %5, 1
  %2495 = icmp eq i32 %13, 1
  br label %2644

2496:                                             ; preds = %2482
  br i1 %2486, label %2497, label %3084

2497:                                             ; preds = %2496
  %2498 = icmp sgt i32 %13, 1
  %2499 = icmp sgt i32 %13, 0
  %2500 = add i32 %13, -2
  %2501 = zext i32 %2500 to i64
  %2502 = zext i32 %13 to i64
  %2503 = add nuw i32 %5, 1
  %2504 = icmp eq i32 %13, 1
  br label %2505

2505:                                             ; preds = %2497, %2642
  %2506 = phi double [ %2479, %2497 ], [ %2592, %2642 ]
  %2507 = phi i32 [ 0, %2497 ], [ %2594, %2642 ]
  %2508 = phi double [ 0.000000e+00, %2497 ], [ %2593, %2642 ]
  %2509 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2498, label %2510, label %2579

2510:                                             ; preds = %2505, %2569
  %2511 = phi i32 [ %2578, %2569 ], [ 0, %2505 ]
  %2512 = phi i64 [ %2520, %2569 ], [ %2502, %2505 ]
  %2513 = phi i64 [ %2577, %2569 ], [ %2501, %2505 ]
  %2514 = phi i32 [ %2575, %2569 ], [ %2509, %2505 ]
  %2515 = sub i32 %2500, %2511
  %2516 = tail call i32 @llvm.smin.i32(i32 %2515, i32 0)
  %2517 = sub i32 %2515, %2516
  %2518 = zext i32 %2517 to i64
  %2519 = add nuw nsw i64 %2518, 1
  %2520 = add nsw i64 %2512, -1
  %2521 = icmp ult i32 %2517, 31
  br i1 %2521, label %2557, label %2522

2522:                                             ; preds = %2510
  %2523 = and i64 %2519, 8589934560
  %2524 = sub i64 %2513, %2523
  br label %2525

2525:                                             ; preds = %2525, %2522
  %2526 = phi i64 [ 0, %2522 ], [ %2549, %2525 ]
  %2527 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2522 ], [ %2545, %2525 ]
  %2528 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2522 ], [ %2546, %2525 ]
  %2529 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2522 ], [ %2547, %2525 ]
  %2530 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2522 ], [ %2548, %2525 ]
  %2531 = sub i64 %2513, %2526
  %2532 = getelementptr inbounds i32, ptr %9, i64 %2531
  %2533 = getelementptr inbounds i32, ptr %2532, i64 -7
  %2534 = load <8 x i32>, ptr %2533, align 4, !tbaa !6
  %2535 = shufflevector <8 x i32> %2534, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2536 = getelementptr inbounds i32, ptr %2532, i64 -15
  %2537 = load <8 x i32>, ptr %2536, align 4, !tbaa !6
  %2538 = shufflevector <8 x i32> %2537, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2539 = getelementptr inbounds i32, ptr %2532, i64 -23
  %2540 = load <8 x i32>, ptr %2539, align 4, !tbaa !6
  %2541 = shufflevector <8 x i32> %2540, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2542 = getelementptr inbounds i32, ptr %2532, i64 -31
  %2543 = load <8 x i32>, ptr %2542, align 4, !tbaa !6
  %2544 = shufflevector <8 x i32> %2543, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2545 = mul <8 x i32> %2535, %2527
  %2546 = mul <8 x i32> %2538, %2528
  %2547 = mul <8 x i32> %2541, %2529
  %2548 = mul <8 x i32> %2544, %2530
  %2549 = add nuw i64 %2526, 32
  %2550 = icmp eq i64 %2549, %2523
  br i1 %2550, label %2551, label %2525, !llvm.loop !565

2551:                                             ; preds = %2525
  %2552 = mul <8 x i32> %2546, %2545
  %2553 = mul <8 x i32> %2547, %2552
  %2554 = mul <8 x i32> %2548, %2553
  %2555 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2554)
  %2556 = icmp eq i64 %2519, %2523
  br i1 %2556, label %2569, label %2557

2557:                                             ; preds = %2510, %2551
  %2558 = phi i64 [ %2513, %2510 ], [ %2524, %2551 ]
  %2559 = phi i32 [ 1, %2510 ], [ %2555, %2551 ]
  br label %2560

2560:                                             ; preds = %2557, %2560
  %2561 = phi i64 [ %2566, %2560 ], [ %2558, %2557 ]
  %2562 = phi i32 [ %2565, %2560 ], [ %2559, %2557 ]
  %2563 = getelementptr inbounds i32, ptr %9, i64 %2561
  %2564 = load i32, ptr %2563, align 4, !tbaa !6
  %2565 = mul nsw i32 %2564, %2562
  %2566 = add nsw i64 %2561, -1
  %2567 = trunc i64 %2561 to i32
  %2568 = icmp sgt i32 %2567, 0
  br i1 %2568, label %2560, label %2569, !llvm.loop !566

2569:                                             ; preds = %2560, %2551
  %2570 = phi i32 [ %2555, %2551 ], [ %2565, %2560 ]
  %2571 = and i64 %2520, 4294967295
  %2572 = getelementptr inbounds i32, ptr %6, i64 %2571
  %2573 = load i32, ptr %2572, align 4, !tbaa !6
  %2574 = mul nsw i32 %2573, %2570
  %2575 = add nsw i32 %2574, %2514
  %2576 = icmp sgt i64 %2512, 2
  %2577 = add nsw i64 %2513, -1
  %2578 = add i32 %2511, 1
  br i1 %2576, label %2510, label %2579, !llvm.loop !567

2579:                                             ; preds = %2569, %2505
  %2580 = phi i32 [ %2509, %2505 ], [ %2575, %2569 ]
  %2581 = sext i32 %2580 to i64
  %2582 = getelementptr inbounds double, ptr %2, i64 %2581
  %2583 = load double, ptr %2582, align 8, !tbaa !19
  %2584 = getelementptr inbounds i16, ptr %2475, i64 %2581
  %2585 = load i16, ptr %2584, align 2, !tbaa !79
  %2586 = sitofp i16 %2585 to double
  %2587 = fcmp fast one double %2583, 0.000000e+00
  %2588 = fcmp fast olt double %2506, %2586
  %2589 = select i1 %2587, i1 %2588, i1 false
  br i1 %2589, label %2590, label %2591

2590:                                             ; preds = %2579
  store double %2586, ptr %2477, align 8, !tbaa !19
  br label %2591

2591:                                             ; preds = %2590, %2579
  %2592 = phi double [ %2586, %2590 ], [ %2506, %2579 ]
  %2593 = fadd fast double %2583, %2508
  %2594 = add nuw nsw i32 %2507, 1
  br i1 %2499, label %2595, label %2642

2595:                                             ; preds = %2591
  %2596 = load i32, ptr %4, align 4, !tbaa !6
  %2597 = load i32, ptr %12, align 4, !tbaa !6
  %2598 = add nsw i32 %2597, -1
  %2599 = icmp slt i32 %2596, %2598
  br i1 %2599, label %2619, label %2600

2600:                                             ; preds = %2595
  %2601 = icmp eq i32 %2596, %2598
  br i1 %2601, label %2602, label %2635

2602:                                             ; preds = %2600
  store i32 0, ptr %4, align 4, !tbaa !6
  %2603 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2603, ptr %6, align 4, !tbaa !6
  br i1 %2504, label %2642, label %2604

2604:                                             ; preds = %2602, %2629
  %2605 = phi i64 [ %2633, %2629 ], [ 1, %2602 ]
  %2606 = getelementptr inbounds i32, ptr %4, i64 %2605
  %2607 = load i32, ptr %2606, align 4, !tbaa !6
  %2608 = getelementptr inbounds i32, ptr %12, i64 %2605
  %2609 = load i32, ptr %2608, align 4, !tbaa !6
  %2610 = add nsw i32 %2609, -1
  %2611 = icmp slt i32 %2607, %2610
  br i1 %2611, label %2612, label %2627

2612:                                             ; preds = %2604
  br i1 %2599, label %2619, label %2613

2613:                                             ; preds = %2612
  %2614 = getelementptr inbounds i32, ptr %7, i64 %2605
  %2615 = load i32, ptr %2614, align 4, !tbaa !6
  %2616 = getelementptr inbounds i32, ptr %6, i64 %2605
  %2617 = load i32, ptr %2616, align 4, !tbaa !6
  %2618 = add nsw i32 %2617, %2615
  store i32 %2618, ptr %2616, align 4, !tbaa !6
  br label %2637

2619:                                             ; preds = %2595, %2612
  %2620 = phi i32 [ %2607, %2612 ], [ %2596, %2595 ]
  %2621 = phi ptr [ %2606, %2612 ], [ %4, %2595 ]
  %2622 = phi i64 [ %2605, %2612 ], [ 0, %2595 ]
  %2623 = add nsw i32 %2620, 1
  store i32 %2623, ptr %2621, align 4, !tbaa !6
  %2624 = getelementptr inbounds i32, ptr %7, i64 %2622
  %2625 = load i32, ptr %2624, align 4, !tbaa !6
  %2626 = getelementptr inbounds i32, ptr %6, i64 %2622
  br label %2637

2627:                                             ; preds = %2604
  %2628 = icmp eq i32 %2607, %2610
  br i1 %2628, label %2629, label %2635

2629:                                             ; preds = %2627
  store i32 0, ptr %2606, align 4, !tbaa !6
  %2630 = getelementptr inbounds i32, ptr %8, i64 %2605
  %2631 = load i32, ptr %2630, align 4, !tbaa !6
  %2632 = getelementptr inbounds i32, ptr %6, i64 %2605
  store i32 %2631, ptr %2632, align 4, !tbaa !6
  %2633 = add nuw nsw i64 %2605, 1
  %2634 = icmp eq i64 %2633, %2502
  br i1 %2634, label %2642, label %2604, !llvm.loop !568

2635:                                             ; preds = %2600, %2627
  %2636 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 809, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3089

2637:                                             ; preds = %2613, %2619
  %2638 = phi ptr [ %2626, %2619 ], [ %2606, %2613 ]
  %2639 = phi i32 [ %2625, %2619 ], [ 1, %2613 ]
  %2640 = load i32, ptr %2638, align 4, !tbaa !6
  %2641 = add nsw i32 %2640, %2639
  store i32 %2641, ptr %2638, align 4, !tbaa !6
  br label %2642

2642:                                             ; preds = %2629, %2637, %2602, %2591
  %2643 = icmp eq i32 %2594, %5
  br i1 %2643, label %3084, label %2505, !llvm.loop !569

2644:                                             ; preds = %2488, %2782
  %2645 = phi double [ %2479, %2488 ], [ %2730, %2782 ]
  %2646 = phi i32 [ 0, %2488 ], [ %2731, %2782 ]
  %2647 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2489, label %2648, label %2717

2648:                                             ; preds = %2644, %2707
  %2649 = phi i32 [ %2716, %2707 ], [ 0, %2644 ]
  %2650 = phi i64 [ %2658, %2707 ], [ %2493, %2644 ]
  %2651 = phi i64 [ %2715, %2707 ], [ %2492, %2644 ]
  %2652 = phi i32 [ %2713, %2707 ], [ %2647, %2644 ]
  %2653 = sub i32 %2491, %2649
  %2654 = tail call i32 @llvm.smin.i32(i32 %2653, i32 0)
  %2655 = sub i32 %2653, %2654
  %2656 = zext i32 %2655 to i64
  %2657 = add nuw nsw i64 %2656, 1
  %2658 = add nsw i64 %2650, -1
  %2659 = icmp ult i32 %2655, 31
  br i1 %2659, label %2695, label %2660

2660:                                             ; preds = %2648
  %2661 = and i64 %2657, 8589934560
  %2662 = sub i64 %2651, %2661
  br label %2663

2663:                                             ; preds = %2663, %2660
  %2664 = phi i64 [ 0, %2660 ], [ %2687, %2663 ]
  %2665 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2660 ], [ %2683, %2663 ]
  %2666 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2660 ], [ %2684, %2663 ]
  %2667 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2660 ], [ %2685, %2663 ]
  %2668 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2660 ], [ %2686, %2663 ]
  %2669 = sub i64 %2651, %2664
  %2670 = getelementptr inbounds i32, ptr %11, i64 %2669
  %2671 = getelementptr inbounds i32, ptr %2670, i64 -7
  %2672 = load <8 x i32>, ptr %2671, align 4, !tbaa !6
  %2673 = shufflevector <8 x i32> %2672, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2674 = getelementptr inbounds i32, ptr %2670, i64 -15
  %2675 = load <8 x i32>, ptr %2674, align 4, !tbaa !6
  %2676 = shufflevector <8 x i32> %2675, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2677 = getelementptr inbounds i32, ptr %2670, i64 -23
  %2678 = load <8 x i32>, ptr %2677, align 4, !tbaa !6
  %2679 = shufflevector <8 x i32> %2678, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2680 = getelementptr inbounds i32, ptr %2670, i64 -31
  %2681 = load <8 x i32>, ptr %2680, align 4, !tbaa !6
  %2682 = shufflevector <8 x i32> %2681, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2683 = mul <8 x i32> %2673, %2665
  %2684 = mul <8 x i32> %2676, %2666
  %2685 = mul <8 x i32> %2679, %2667
  %2686 = mul <8 x i32> %2682, %2668
  %2687 = add nuw i64 %2664, 32
  %2688 = icmp eq i64 %2687, %2661
  br i1 %2688, label %2689, label %2663, !llvm.loop !570

2689:                                             ; preds = %2663
  %2690 = mul <8 x i32> %2684, %2683
  %2691 = mul <8 x i32> %2685, %2690
  %2692 = mul <8 x i32> %2686, %2691
  %2693 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2692)
  %2694 = icmp eq i64 %2657, %2661
  br i1 %2694, label %2707, label %2695

2695:                                             ; preds = %2648, %2689
  %2696 = phi i64 [ %2651, %2648 ], [ %2662, %2689 ]
  %2697 = phi i32 [ 1, %2648 ], [ %2693, %2689 ]
  br label %2698

2698:                                             ; preds = %2695, %2698
  %2699 = phi i64 [ %2704, %2698 ], [ %2696, %2695 ]
  %2700 = phi i32 [ %2703, %2698 ], [ %2697, %2695 ]
  %2701 = getelementptr inbounds i32, ptr %11, i64 %2699
  %2702 = load i32, ptr %2701, align 4, !tbaa !6
  %2703 = mul nsw i32 %2702, %2700
  %2704 = add nsw i64 %2699, -1
  %2705 = trunc i64 %2699 to i32
  %2706 = icmp sgt i32 %2705, 0
  br i1 %2706, label %2698, label %2707, !llvm.loop !571

2707:                                             ; preds = %2698, %2689
  %2708 = phi i32 [ %2693, %2689 ], [ %2703, %2698 ]
  %2709 = and i64 %2658, 4294967295
  %2710 = getelementptr inbounds i32, ptr %6, i64 %2709
  %2711 = load i32, ptr %2710, align 4, !tbaa !6
  %2712 = mul nsw i32 %2711, %2708
  %2713 = add nsw i32 %2712, %2652
  %2714 = icmp sgt i64 %2650, 2
  %2715 = add nsw i64 %2651, -1
  %2716 = add i32 %2649, 1
  br i1 %2714, label %2648, label %2717, !llvm.loop !572

2717:                                             ; preds = %2707, %2644
  %2718 = phi i32 [ %2647, %2644 ], [ %2713, %2707 ]
  %2719 = icmp slt i32 %2718, %5
  br i1 %2719, label %2722, label %2720

2720:                                             ; preds = %2717
  %2721 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 809, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3089

2722:                                             ; preds = %2717
  %2723 = sext i32 %2718 to i64
  %2724 = getelementptr inbounds i16, ptr %2475, i64 %2723
  %2725 = load i16, ptr %2724, align 2, !tbaa !79
  %2726 = sitofp i16 %2725 to double
  %2727 = fcmp fast olt double %2645, %2726
  br i1 %2727, label %2728, label %2729

2728:                                             ; preds = %2722
  store double %2726, ptr %2477, align 8, !tbaa !19
  br label %2729

2729:                                             ; preds = %2722, %2728
  %2730 = phi double [ %2645, %2722 ], [ %2726, %2728 ]
  %2731 = add nuw nsw i32 %2646, 1
  br i1 %2490, label %2732, label %2782

2732:                                             ; preds = %2729
  %2733 = load i32, ptr %4, align 4, !tbaa !6
  %2734 = load i32, ptr %12, align 4, !tbaa !6
  %2735 = add nsw i32 %2734, -1
  %2736 = icmp slt i32 %2733, %2735
  br i1 %2736, label %2759, label %2737

2737:                                             ; preds = %2732
  %2738 = icmp eq i32 %2733, %2735
  br i1 %2738, label %2739, label %2775

2739:                                             ; preds = %2737
  store i32 0, ptr %4, align 4, !tbaa !6
  %2740 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2740, ptr %6, align 4, !tbaa !6
  br i1 %2495, label %2782, label %2741

2741:                                             ; preds = %2739, %2769
  %2742 = phi i64 [ %2773, %2769 ], [ 1, %2739 ]
  %2743 = getelementptr inbounds i32, ptr %4, i64 %2742
  %2744 = load i32, ptr %2743, align 4, !tbaa !6
  %2745 = getelementptr inbounds i32, ptr %12, i64 %2742
  %2746 = load i32, ptr %2745, align 4, !tbaa !6
  %2747 = add nsw i32 %2746, -1
  %2748 = icmp slt i32 %2744, %2747
  br i1 %2748, label %2749, label %2767

2749:                                             ; preds = %2741
  br i1 %2736, label %2759, label %2750

2750:                                             ; preds = %2749
  %2751 = shl i64 %2742, 32
  %2752 = add i64 %2751, -4294967296
  %2753 = ashr exact i64 %2752, 32
  %2754 = getelementptr inbounds i32, ptr %7, i64 %2753
  %2755 = load i32, ptr %2754, align 4, !tbaa !6
  %2756 = getelementptr inbounds i32, ptr %6, i64 %2742
  %2757 = load i32, ptr %2756, align 4, !tbaa !6
  %2758 = add nsw i32 %2757, %2755
  store i32 %2758, ptr %2756, align 4, !tbaa !6
  br label %2777

2759:                                             ; preds = %2732, %2749
  %2760 = phi i32 [ %2744, %2749 ], [ %2733, %2732 ]
  %2761 = phi ptr [ %2743, %2749 ], [ %4, %2732 ]
  %2762 = phi i64 [ %2742, %2749 ], [ 0, %2732 ]
  %2763 = add nsw i32 %2760, 1
  store i32 %2763, ptr %2761, align 4, !tbaa !6
  %2764 = getelementptr inbounds i32, ptr %7, i64 %2762
  %2765 = load i32, ptr %2764, align 4, !tbaa !6
  %2766 = getelementptr inbounds i32, ptr %6, i64 %2762
  br label %2777

2767:                                             ; preds = %2741
  %2768 = icmp eq i32 %2744, %2747
  br i1 %2768, label %2769, label %2775

2769:                                             ; preds = %2767
  store i32 0, ptr %2743, align 4, !tbaa !6
  %2770 = getelementptr inbounds i32, ptr %8, i64 %2742
  %2771 = load i32, ptr %2770, align 4, !tbaa !6
  %2772 = getelementptr inbounds i32, ptr %6, i64 %2742
  store i32 %2771, ptr %2772, align 4, !tbaa !6
  %2773 = add nuw nsw i64 %2742, 1
  %2774 = icmp eq i64 %2773, %2493
  br i1 %2774, label %2782, label %2741, !llvm.loop !573

2775:                                             ; preds = %2737, %2767
  %2776 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 809, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3089

2777:                                             ; preds = %2750, %2759
  %2778 = phi ptr [ %2766, %2759 ], [ %2743, %2750 ]
  %2779 = phi i32 [ %2765, %2759 ], [ 1, %2750 ]
  %2780 = load i32, ptr %2778, align 4, !tbaa !6
  %2781 = add nsw i32 %2780, %2779
  store i32 %2781, ptr %2778, align 4, !tbaa !6
  br label %2782

2782:                                             ; preds = %2769, %2777, %2739, %2729
  %2783 = icmp eq i32 %2731, %5
  br i1 %2783, label %3084, label %2644, !llvm.loop !574

2784:                                             ; preds = %2481
  %2785 = getelementptr inbounds i32, ptr %3, i64 %19
  %2786 = load i32, ptr %2785, align 4, !tbaa !6
  %2787 = icmp eq i32 %2786, 0
  %2788 = icmp sgt i32 %5, 0
  br i1 %2787, label %2798, label %2789

2789:                                             ; preds = %2784
  br i1 %2788, label %2790, label %3084

2790:                                             ; preds = %2789
  %2791 = icmp sgt i32 %13, 1
  %2792 = icmp sgt i32 %13, 0
  %2793 = add i32 %13, -2
  %2794 = zext i32 %2793 to i64
  %2795 = zext i32 %13 to i64
  %2796 = add nuw i32 %5, 1
  %2797 = icmp eq i32 %13, 1
  br label %2942

2798:                                             ; preds = %2784
  br i1 %2788, label %2799, label %3084

2799:                                             ; preds = %2798
  %2800 = icmp sgt i32 %13, 1
  %2801 = icmp sgt i32 %13, 0
  %2802 = add i32 %13, -2
  %2803 = zext i32 %2802 to i64
  %2804 = zext i32 %13 to i64
  %2805 = add nuw i32 %5, 1
  %2806 = icmp eq i32 %13, 1
  br label %2807

2807:                                             ; preds = %2799, %2940
  %2808 = phi double [ %2479, %2799 ], [ %2890, %2940 ]
  %2809 = phi i32 [ 0, %2799 ], [ %2892, %2940 ]
  %2810 = phi double [ 0.000000e+00, %2799 ], [ %2891, %2940 ]
  %2811 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2800, label %2812, label %2881

2812:                                             ; preds = %2807, %2871
  %2813 = phi i32 [ %2880, %2871 ], [ 0, %2807 ]
  %2814 = phi i64 [ %2822, %2871 ], [ %2804, %2807 ]
  %2815 = phi i64 [ %2879, %2871 ], [ %2803, %2807 ]
  %2816 = phi i32 [ %2877, %2871 ], [ %2811, %2807 ]
  %2817 = sub i32 %2802, %2813
  %2818 = tail call i32 @llvm.smin.i32(i32 %2817, i32 0)
  %2819 = sub i32 %2817, %2818
  %2820 = zext i32 %2819 to i64
  %2821 = add nuw nsw i64 %2820, 1
  %2822 = add nsw i64 %2814, -1
  %2823 = icmp ult i32 %2819, 31
  br i1 %2823, label %2859, label %2824

2824:                                             ; preds = %2812
  %2825 = and i64 %2821, 8589934560
  %2826 = sub i64 %2815, %2825
  br label %2827

2827:                                             ; preds = %2827, %2824
  %2828 = phi i64 [ 0, %2824 ], [ %2851, %2827 ]
  %2829 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2824 ], [ %2847, %2827 ]
  %2830 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2824 ], [ %2848, %2827 ]
  %2831 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2824 ], [ %2849, %2827 ]
  %2832 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2824 ], [ %2850, %2827 ]
  %2833 = sub i64 %2815, %2828
  %2834 = getelementptr inbounds i32, ptr %9, i64 %2833
  %2835 = getelementptr inbounds i32, ptr %2834, i64 -7
  %2836 = load <8 x i32>, ptr %2835, align 4, !tbaa !6
  %2837 = shufflevector <8 x i32> %2836, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2838 = getelementptr inbounds i32, ptr %2834, i64 -15
  %2839 = load <8 x i32>, ptr %2838, align 4, !tbaa !6
  %2840 = shufflevector <8 x i32> %2839, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2841 = getelementptr inbounds i32, ptr %2834, i64 -23
  %2842 = load <8 x i32>, ptr %2841, align 4, !tbaa !6
  %2843 = shufflevector <8 x i32> %2842, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2844 = getelementptr inbounds i32, ptr %2834, i64 -31
  %2845 = load <8 x i32>, ptr %2844, align 4, !tbaa !6
  %2846 = shufflevector <8 x i32> %2845, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2847 = mul <8 x i32> %2837, %2829
  %2848 = mul <8 x i32> %2840, %2830
  %2849 = mul <8 x i32> %2843, %2831
  %2850 = mul <8 x i32> %2846, %2832
  %2851 = add nuw i64 %2828, 32
  %2852 = icmp eq i64 %2851, %2825
  br i1 %2852, label %2853, label %2827, !llvm.loop !575

2853:                                             ; preds = %2827
  %2854 = mul <8 x i32> %2848, %2847
  %2855 = mul <8 x i32> %2849, %2854
  %2856 = mul <8 x i32> %2850, %2855
  %2857 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2856)
  %2858 = icmp eq i64 %2821, %2825
  br i1 %2858, label %2871, label %2859

2859:                                             ; preds = %2812, %2853
  %2860 = phi i64 [ %2815, %2812 ], [ %2826, %2853 ]
  %2861 = phi i32 [ 1, %2812 ], [ %2857, %2853 ]
  br label %2862

2862:                                             ; preds = %2859, %2862
  %2863 = phi i64 [ %2868, %2862 ], [ %2860, %2859 ]
  %2864 = phi i32 [ %2867, %2862 ], [ %2861, %2859 ]
  %2865 = getelementptr inbounds i32, ptr %9, i64 %2863
  %2866 = load i32, ptr %2865, align 4, !tbaa !6
  %2867 = mul nsw i32 %2866, %2864
  %2868 = add nsw i64 %2863, -1
  %2869 = trunc i64 %2863 to i32
  %2870 = icmp sgt i32 %2869, 0
  br i1 %2870, label %2862, label %2871, !llvm.loop !576

2871:                                             ; preds = %2862, %2853
  %2872 = phi i32 [ %2857, %2853 ], [ %2867, %2862 ]
  %2873 = and i64 %2822, 4294967295
  %2874 = getelementptr inbounds i32, ptr %6, i64 %2873
  %2875 = load i32, ptr %2874, align 4, !tbaa !6
  %2876 = mul nsw i32 %2875, %2872
  %2877 = add nsw i32 %2876, %2816
  %2878 = icmp sgt i64 %2814, 2
  %2879 = add nsw i64 %2815, -1
  %2880 = add i32 %2813, 1
  br i1 %2878, label %2812, label %2881, !llvm.loop !577

2881:                                             ; preds = %2871, %2807
  %2882 = phi i32 [ %2811, %2807 ], [ %2877, %2871 ]
  %2883 = sext i32 %2882 to i64
  %2884 = getelementptr inbounds i16, ptr %2475, i64 %2883
  %2885 = load i16, ptr %2884, align 2, !tbaa !79
  %2886 = sitofp i16 %2885 to double
  %2887 = fcmp fast olt double %2808, %2886
  br i1 %2887, label %2888, label %2889

2888:                                             ; preds = %2881
  store double %2886, ptr %2477, align 8, !tbaa !19
  br label %2889

2889:                                             ; preds = %2888, %2881
  %2890 = phi double [ %2886, %2888 ], [ %2808, %2881 ]
  %2891 = fadd fast double %2810, 1.000000e+00
  %2892 = add nuw nsw i32 %2809, 1
  br i1 %2801, label %2893, label %2940

2893:                                             ; preds = %2889
  %2894 = load i32, ptr %4, align 4, !tbaa !6
  %2895 = load i32, ptr %12, align 4, !tbaa !6
  %2896 = add nsw i32 %2895, -1
  %2897 = icmp slt i32 %2894, %2896
  br i1 %2897, label %2917, label %2898

2898:                                             ; preds = %2893
  %2899 = icmp eq i32 %2894, %2896
  br i1 %2899, label %2900, label %2933

2900:                                             ; preds = %2898
  store i32 0, ptr %4, align 4, !tbaa !6
  %2901 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2901, ptr %6, align 4, !tbaa !6
  br i1 %2806, label %2940, label %2902

2902:                                             ; preds = %2900, %2927
  %2903 = phi i64 [ %2931, %2927 ], [ 1, %2900 ]
  %2904 = getelementptr inbounds i32, ptr %4, i64 %2903
  %2905 = load i32, ptr %2904, align 4, !tbaa !6
  %2906 = getelementptr inbounds i32, ptr %12, i64 %2903
  %2907 = load i32, ptr %2906, align 4, !tbaa !6
  %2908 = add nsw i32 %2907, -1
  %2909 = icmp slt i32 %2905, %2908
  br i1 %2909, label %2910, label %2925

2910:                                             ; preds = %2902
  br i1 %2897, label %2917, label %2911

2911:                                             ; preds = %2910
  %2912 = getelementptr inbounds i32, ptr %7, i64 %2903
  %2913 = load i32, ptr %2912, align 4, !tbaa !6
  %2914 = getelementptr inbounds i32, ptr %6, i64 %2903
  %2915 = load i32, ptr %2914, align 4, !tbaa !6
  %2916 = add nsw i32 %2915, %2913
  store i32 %2916, ptr %2914, align 4, !tbaa !6
  br label %2935

2917:                                             ; preds = %2893, %2910
  %2918 = phi i32 [ %2905, %2910 ], [ %2894, %2893 ]
  %2919 = phi ptr [ %2904, %2910 ], [ %4, %2893 ]
  %2920 = phi i64 [ %2903, %2910 ], [ 0, %2893 ]
  %2921 = add nsw i32 %2918, 1
  store i32 %2921, ptr %2919, align 4, !tbaa !6
  %2922 = getelementptr inbounds i32, ptr %7, i64 %2920
  %2923 = load i32, ptr %2922, align 4, !tbaa !6
  %2924 = getelementptr inbounds i32, ptr %6, i64 %2920
  br label %2935

2925:                                             ; preds = %2902
  %2926 = icmp eq i32 %2905, %2908
  br i1 %2926, label %2927, label %2933

2927:                                             ; preds = %2925
  store i32 0, ptr %2904, align 4, !tbaa !6
  %2928 = getelementptr inbounds i32, ptr %8, i64 %2903
  %2929 = load i32, ptr %2928, align 4, !tbaa !6
  %2930 = getelementptr inbounds i32, ptr %6, i64 %2903
  store i32 %2929, ptr %2930, align 4, !tbaa !6
  %2931 = add nuw nsw i64 %2903, 1
  %2932 = icmp eq i64 %2931, %2804
  br i1 %2932, label %2940, label %2902, !llvm.loop !578

2933:                                             ; preds = %2898, %2925
  %2934 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 809, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3089

2935:                                             ; preds = %2911, %2917
  %2936 = phi ptr [ %2924, %2917 ], [ %2904, %2911 ]
  %2937 = phi i32 [ %2923, %2917 ], [ 1, %2911 ]
  %2938 = load i32, ptr %2936, align 4, !tbaa !6
  %2939 = add nsw i32 %2938, %2937
  store i32 %2939, ptr %2936, align 4, !tbaa !6
  br label %2940

2940:                                             ; preds = %2927, %2935, %2900, %2889
  %2941 = icmp eq i32 %2892, %5
  br i1 %2941, label %3084, label %2807, !llvm.loop !579

2942:                                             ; preds = %2790, %3080
  %2943 = phi double [ %2479, %2790 ], [ %3028, %3080 ]
  %2944 = phi i32 [ 0, %2790 ], [ %3029, %3080 ]
  %2945 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2791, label %2946, label %3015

2946:                                             ; preds = %2942, %3005
  %2947 = phi i32 [ %3014, %3005 ], [ 0, %2942 ]
  %2948 = phi i64 [ %2956, %3005 ], [ %2795, %2942 ]
  %2949 = phi i64 [ %3013, %3005 ], [ %2794, %2942 ]
  %2950 = phi i32 [ %3011, %3005 ], [ %2945, %2942 ]
  %2951 = sub i32 %2793, %2947
  %2952 = tail call i32 @llvm.smin.i32(i32 %2951, i32 0)
  %2953 = sub i32 %2951, %2952
  %2954 = zext i32 %2953 to i64
  %2955 = add nuw nsw i64 %2954, 1
  %2956 = add nsw i64 %2948, -1
  %2957 = icmp ult i32 %2953, 31
  br i1 %2957, label %2993, label %2958

2958:                                             ; preds = %2946
  %2959 = and i64 %2955, 8589934560
  %2960 = sub i64 %2949, %2959
  br label %2961

2961:                                             ; preds = %2961, %2958
  %2962 = phi i64 [ 0, %2958 ], [ %2985, %2961 ]
  %2963 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2958 ], [ %2981, %2961 ]
  %2964 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2958 ], [ %2982, %2961 ]
  %2965 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2958 ], [ %2983, %2961 ]
  %2966 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2958 ], [ %2984, %2961 ]
  %2967 = sub i64 %2949, %2962
  %2968 = getelementptr inbounds i32, ptr %11, i64 %2967
  %2969 = getelementptr inbounds i32, ptr %2968, i64 -7
  %2970 = load <8 x i32>, ptr %2969, align 4, !tbaa !6
  %2971 = shufflevector <8 x i32> %2970, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2972 = getelementptr inbounds i32, ptr %2968, i64 -15
  %2973 = load <8 x i32>, ptr %2972, align 4, !tbaa !6
  %2974 = shufflevector <8 x i32> %2973, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2975 = getelementptr inbounds i32, ptr %2968, i64 -23
  %2976 = load <8 x i32>, ptr %2975, align 4, !tbaa !6
  %2977 = shufflevector <8 x i32> %2976, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2978 = getelementptr inbounds i32, ptr %2968, i64 -31
  %2979 = load <8 x i32>, ptr %2978, align 4, !tbaa !6
  %2980 = shufflevector <8 x i32> %2979, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2981 = mul <8 x i32> %2971, %2963
  %2982 = mul <8 x i32> %2974, %2964
  %2983 = mul <8 x i32> %2977, %2965
  %2984 = mul <8 x i32> %2980, %2966
  %2985 = add nuw i64 %2962, 32
  %2986 = icmp eq i64 %2985, %2959
  br i1 %2986, label %2987, label %2961, !llvm.loop !580

2987:                                             ; preds = %2961
  %2988 = mul <8 x i32> %2982, %2981
  %2989 = mul <8 x i32> %2983, %2988
  %2990 = mul <8 x i32> %2984, %2989
  %2991 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2990)
  %2992 = icmp eq i64 %2955, %2959
  br i1 %2992, label %3005, label %2993

2993:                                             ; preds = %2946, %2987
  %2994 = phi i64 [ %2949, %2946 ], [ %2960, %2987 ]
  %2995 = phi i32 [ 1, %2946 ], [ %2991, %2987 ]
  br label %2996

2996:                                             ; preds = %2993, %2996
  %2997 = phi i64 [ %3002, %2996 ], [ %2994, %2993 ]
  %2998 = phi i32 [ %3001, %2996 ], [ %2995, %2993 ]
  %2999 = getelementptr inbounds i32, ptr %11, i64 %2997
  %3000 = load i32, ptr %2999, align 4, !tbaa !6
  %3001 = mul nsw i32 %3000, %2998
  %3002 = add nsw i64 %2997, -1
  %3003 = trunc i64 %2997 to i32
  %3004 = icmp sgt i32 %3003, 0
  br i1 %3004, label %2996, label %3005, !llvm.loop !581

3005:                                             ; preds = %2996, %2987
  %3006 = phi i32 [ %2991, %2987 ], [ %3001, %2996 ]
  %3007 = and i64 %2956, 4294967295
  %3008 = getelementptr inbounds i32, ptr %6, i64 %3007
  %3009 = load i32, ptr %3008, align 4, !tbaa !6
  %3010 = mul nsw i32 %3009, %3006
  %3011 = add nsw i32 %3010, %2950
  %3012 = icmp sgt i64 %2948, 2
  %3013 = add nsw i64 %2949, -1
  %3014 = add i32 %2947, 1
  br i1 %3012, label %2946, label %3015, !llvm.loop !582

3015:                                             ; preds = %3005, %2942
  %3016 = phi i32 [ %2945, %2942 ], [ %3011, %3005 ]
  %3017 = icmp slt i32 %3016, %5
  br i1 %3017, label %3020, label %3018

3018:                                             ; preds = %3015
  %3019 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 809, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %3089

3020:                                             ; preds = %3015
  %3021 = sext i32 %3016 to i64
  %3022 = getelementptr inbounds i16, ptr %2475, i64 %3021
  %3023 = load i16, ptr %3022, align 2, !tbaa !79
  %3024 = sitofp i16 %3023 to double
  %3025 = fcmp fast olt double %2943, %3024
  br i1 %3025, label %3026, label %3027

3026:                                             ; preds = %3020
  store double %3024, ptr %2477, align 8, !tbaa !19
  br label %3027

3027:                                             ; preds = %3026, %3020
  %3028 = phi double [ %3024, %3026 ], [ %2943, %3020 ]
  %3029 = add nuw nsw i32 %2944, 1
  br i1 %2792, label %3030, label %3080

3030:                                             ; preds = %3027
  %3031 = load i32, ptr %4, align 4, !tbaa !6
  %3032 = load i32, ptr %12, align 4, !tbaa !6
  %3033 = add nsw i32 %3032, -1
  %3034 = icmp slt i32 %3031, %3033
  br i1 %3034, label %3057, label %3035

3035:                                             ; preds = %3030
  %3036 = icmp eq i32 %3031, %3033
  br i1 %3036, label %3037, label %3073

3037:                                             ; preds = %3035
  store i32 0, ptr %4, align 4, !tbaa !6
  %3038 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3038, ptr %6, align 4, !tbaa !6
  br i1 %2797, label %3080, label %3039

3039:                                             ; preds = %3037, %3067
  %3040 = phi i64 [ %3071, %3067 ], [ 1, %3037 ]
  %3041 = getelementptr inbounds i32, ptr %4, i64 %3040
  %3042 = load i32, ptr %3041, align 4, !tbaa !6
  %3043 = getelementptr inbounds i32, ptr %12, i64 %3040
  %3044 = load i32, ptr %3043, align 4, !tbaa !6
  %3045 = add nsw i32 %3044, -1
  %3046 = icmp slt i32 %3042, %3045
  br i1 %3046, label %3047, label %3065

3047:                                             ; preds = %3039
  br i1 %3034, label %3057, label %3048

3048:                                             ; preds = %3047
  %3049 = shl i64 %3040, 32
  %3050 = add i64 %3049, -4294967296
  %3051 = ashr exact i64 %3050, 32
  %3052 = getelementptr inbounds i32, ptr %7, i64 %3051
  %3053 = load i32, ptr %3052, align 4, !tbaa !6
  %3054 = getelementptr inbounds i32, ptr %6, i64 %3040
  %3055 = load i32, ptr %3054, align 4, !tbaa !6
  %3056 = add nsw i32 %3055, %3053
  store i32 %3056, ptr %3054, align 4, !tbaa !6
  br label %3075

3057:                                             ; preds = %3030, %3047
  %3058 = phi i32 [ %3042, %3047 ], [ %3031, %3030 ]
  %3059 = phi ptr [ %3041, %3047 ], [ %4, %3030 ]
  %3060 = phi i64 [ %3040, %3047 ], [ 0, %3030 ]
  %3061 = add nsw i32 %3058, 1
  store i32 %3061, ptr %3059, align 4, !tbaa !6
  %3062 = getelementptr inbounds i32, ptr %7, i64 %3060
  %3063 = load i32, ptr %3062, align 4, !tbaa !6
  %3064 = getelementptr inbounds i32, ptr %6, i64 %3060
  br label %3075

3065:                                             ; preds = %3039
  %3066 = icmp eq i32 %3042, %3045
  br i1 %3066, label %3067, label %3073

3067:                                             ; preds = %3065
  store i32 0, ptr %3041, align 4, !tbaa !6
  %3068 = getelementptr inbounds i32, ptr %8, i64 %3040
  %3069 = load i32, ptr %3068, align 4, !tbaa !6
  %3070 = getelementptr inbounds i32, ptr %6, i64 %3040
  store i32 %3069, ptr %3070, align 4, !tbaa !6
  %3071 = add nuw nsw i64 %3040, 1
  %3072 = icmp eq i64 %3071, %2795
  br i1 %3072, label %3080, label %3039, !llvm.loop !583

3073:                                             ; preds = %3035, %3065
  %3074 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 809, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %3089

3075:                                             ; preds = %3048, %3057
  %3076 = phi ptr [ %3064, %3057 ], [ %3041, %3048 ]
  %3077 = phi i32 [ %3063, %3057 ], [ 1, %3048 ]
  %3078 = load i32, ptr %3076, align 4, !tbaa !6
  %3079 = add nsw i32 %3078, %3077
  store i32 %3079, ptr %3076, align 4, !tbaa !6
  br label %3080

3080:                                             ; preds = %3067, %3075, %3037, %3027
  %3081 = icmp eq i32 %3029, %5
  br i1 %3081, label %3084, label %2942, !llvm.loop !584

3082:                                             ; preds = %2481
  %3083 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 809, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %3084

3084:                                             ; preds = %3080, %2940, %2782, %2642, %2469, %2329, %2171, %2031, %1858, %1718, %1560, %1420, %1247, %1108, %951, %812, %640, %499, %340, %199, %2789, %2798, %2487, %2496, %2178, %2187, %1876, %1885, %1567, %1576, %1265, %1274, %958, %967, %658, %667, %347, %356, %43, %52, %2473, %3082, %1862, %2471, %1251, %1860, %644, %1249, %35, %30, %642, %18
  %3085 = phi double [ 0.000000e+00, %18 ], [ 0.000000e+00, %642 ], [ 0.000000e+00, %30 ], [ 0.000000e+00, %35 ], [ 0.000000e+00, %644 ], [ 0.000000e+00, %1249 ], [ 0.000000e+00, %1251 ], [ 0.000000e+00, %1860 ], [ 0.000000e+00, %1862 ], [ 0.000000e+00, %2471 ], [ 0.000000e+00, %2473 ], [ 0.000000e+00, %3082 ], [ 0.000000e+00, %52 ], [ 0.000000e+00, %43 ], [ 0.000000e+00, %356 ], [ 0.000000e+00, %347 ], [ 0.000000e+00, %667 ], [ 0.000000e+00, %658 ], [ 0.000000e+00, %967 ], [ 0.000000e+00, %958 ], [ 0.000000e+00, %1274 ], [ 0.000000e+00, %1265 ], [ 0.000000e+00, %1576 ], [ 0.000000e+00, %1567 ], [ 0.000000e+00, %1885 ], [ 0.000000e+00, %1876 ], [ 0.000000e+00, %2187 ], [ 0.000000e+00, %2178 ], [ 0.000000e+00, %2496 ], [ 0.000000e+00, %2487 ], [ 0.000000e+00, %2798 ], [ 0.000000e+00, %2789 ], [ %150, %199 ], [ 0.000000e+00, %340 ], [ %450, %499 ], [ 0.000000e+00, %640 ], [ %763, %812 ], [ 0.000000e+00, %951 ], [ %1059, %1108 ], [ 0.000000e+00, %1247 ], [ %1371, %1420 ], [ 0.000000e+00, %1560 ], [ %1669, %1718 ], [ 0.000000e+00, %1858 ], [ %1982, %2031 ], [ 0.000000e+00, %2171 ], [ %2280, %2329 ], [ 0.000000e+00, %2469 ], [ %2593, %2642 ], [ 0.000000e+00, %2782 ], [ %2891, %2940 ], [ 0.000000e+00, %3080 ]
  %3086 = phi i32 [ %10, %18 ], [ 1, %642 ], [ 1, %30 ], [ 1, %35 ], [ 1, %644 ], [ 1, %1249 ], [ 1, %1251 ], [ 1, %1860 ], [ 1, %1862 ], [ 1, %2471 ], [ 1, %2473 ], [ 1, %3082 ], [ 1, %52 ], [ 1, %43 ], [ 1, %356 ], [ 1, %347 ], [ 1, %667 ], [ 1, %658 ], [ 1, %967 ], [ 1, %958 ], [ 1, %1274 ], [ 1, %1265 ], [ 1, %1576 ], [ 1, %1567 ], [ 1, %1885 ], [ 1, %1876 ], [ 1, %2187 ], [ 1, %2178 ], [ 1, %2496 ], [ 1, %2487 ], [ 1, %2798 ], [ 1, %2789 ], [ %59, %199 ], [ %50, %340 ], [ %363, %499 ], [ %354, %640 ], [ %674, %812 ], [ %665, %951 ], [ %974, %1108 ], [ %965, %1247 ], [ %1281, %1420 ], [ %1272, %1560 ], [ %1583, %1718 ], [ %1574, %1858 ], [ %1892, %2031 ], [ %1883, %2171 ], [ %2194, %2329 ], [ %2185, %2469 ], [ %2503, %2642 ], [ %2494, %2782 ], [ %2805, %2940 ], [ %2796, %3080 ]
  %3087 = tail call i32 @Util_TableSetInt(i32 noundef %17, i32 noundef %3086, ptr noundef nonnull @.str.5) #3
  %3088 = tail call i32 @Util_TableSetReal(i32 noundef %17, double noundef nofpclass(nan inf) %3085, ptr noundef nonnull @.str.6) #3
  br label %3089

3089:                                             ; preds = %2635, %2720, %2775, %2933, %3018, %3073, %2024, %2109, %2164, %2322, %2407, %2462, %1413, %1498, %1553, %1711, %1796, %1851, %805, %889, %944, %1101, %1185, %1240, %192, %276, %333, %492, %576, %633, %3084
  %3090 = phi i32 [ 0, %3084 ], [ -1, %633 ], [ -1, %576 ], [ -1, %492 ], [ -1, %333 ], [ -1, %276 ], [ -1, %192 ], [ -1, %1240 ], [ -1, %1185 ], [ -1, %1101 ], [ -1, %944 ], [ -1, %889 ], [ -1, %805 ], [ -1, %1851 ], [ -1, %1796 ], [ -1, %1711 ], [ -1, %1553 ], [ -1, %1498 ], [ -1, %1413 ], [ -1, %2462 ], [ -1, %2407 ], [ -1, %2322 ], [ -1, %2164 ], [ -1, %2109 ], [ -1, %2024 ], [ -1, %3073 ], [ -1, %3018 ], [ -1, %2933 ], [ -1, %2775 ], [ -1, %2720 ], [ -1, %2635 ]
  ret i32 %3090
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_Max_INT4(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr noundef readonly %7, ptr noundef readonly %8, ptr nocapture noundef readonly %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr noundef readonly %12, i32 noundef %13, ptr nocapture noundef readonly %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !6
  switch i32 %21, label %5549 [
    i32 101, label %22
    i32 102, label %644
    i32 103, label %1250
    i32 104, label %1876
    i32 105, label %2499
    i32 106, label %3105
    i32 107, label %3716
    i32 108, label %4327
    i32 109, label %4938
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %14, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !10
  %25 = getelementptr inbounds ptr, ptr %16, i64 %19
  %26 = load ptr, ptr %25, align 8, !tbaa !10
  %27 = load i32, ptr %24, align 4, !tbaa !6
  %28 = trunc i32 %27 to i8
  store i8 %28, ptr %26, align 1, !tbaa !12
  %29 = icmp eq i32 %13, 0
  br i1 %29, label %30, label %37

30:                                               ; preds = %22
  %31 = load i32, ptr %24, align 4, !tbaa !6
  %32 = and i32 %27, 255
  %33 = and i32 %31, 255
  %34 = icmp ult i32 %32, %33
  br i1 %34, label %35, label %5549

35:                                               ; preds = %30
  %36 = trunc i32 %31 to i8
  store i8 %36, ptr %26, align 1, !tbaa !12
  br label %5549

37:                                               ; preds = %22
  switch i32 %1, label %642 [
    i32 1, label %38
    i32 0, label %342
  ]

38:                                               ; preds = %37
  %39 = getelementptr inbounds i32, ptr %3, i64 %19
  %40 = load i32, ptr %39, align 4, !tbaa !6
  %41 = icmp eq i32 %40, 0
  %42 = icmp sgt i32 %5, 0
  br i1 %41, label %52, label %43

43:                                               ; preds = %38
  br i1 %42, label %44, label %5549

44:                                               ; preds = %43
  %45 = icmp sgt i32 %13, 1
  %46 = icmp sgt i32 %13, 0
  %47 = add i32 %13, -2
  %48 = zext i32 %47 to i64
  %49 = zext i32 %13 to i64
  %50 = add nuw i32 %5, 1
  %51 = icmp eq i32 %13, 1
  br label %201

52:                                               ; preds = %38
  br i1 %42, label %53, label %5549

53:                                               ; preds = %52
  %54 = icmp sgt i32 %13, 1
  %55 = icmp sgt i32 %13, 0
  %56 = add i32 %13, -2
  %57 = zext i32 %56 to i64
  %58 = zext i32 %13 to i64
  %59 = add nuw i32 %5, 1
  %60 = icmp eq i32 %13, 1
  br label %61

61:                                               ; preds = %53, %199
  %62 = phi i32 [ 0, %53 ], [ %151, %199 ]
  %63 = phi double [ 0.000000e+00, %53 ], [ %150, %199 ]
  %64 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %54, label %65, label %134

65:                                               ; preds = %61, %124
  %66 = phi i32 [ %133, %124 ], [ 0, %61 ]
  %67 = phi i64 [ %75, %124 ], [ %58, %61 ]
  %68 = phi i64 [ %132, %124 ], [ %57, %61 ]
  %69 = phi i32 [ %130, %124 ], [ %64, %61 ]
  %70 = sub i32 %56, %66
  %71 = tail call i32 @llvm.smin.i32(i32 %70, i32 0)
  %72 = sub i32 %70, %71
  %73 = zext i32 %72 to i64
  %74 = add nuw nsw i64 %73, 1
  %75 = add nsw i64 %67, -1
  %76 = icmp ult i32 %72, 31
  br i1 %76, label %112, label %77

77:                                               ; preds = %65
  %78 = and i64 %74, 8589934560
  %79 = sub i64 %68, %78
  br label %80

80:                                               ; preds = %80, %77
  %81 = phi i64 [ 0, %77 ], [ %104, %80 ]
  %82 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %77 ], [ %100, %80 ]
  %83 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %77 ], [ %101, %80 ]
  %84 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %77 ], [ %102, %80 ]
  %85 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %77 ], [ %103, %80 ]
  %86 = sub i64 %68, %81
  %87 = getelementptr inbounds i32, ptr %9, i64 %86
  %88 = getelementptr inbounds i32, ptr %87, i64 -7
  %89 = load <8 x i32>, ptr %88, align 4, !tbaa !6
  %90 = shufflevector <8 x i32> %89, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %91 = getelementptr inbounds i32, ptr %87, i64 -15
  %92 = load <8 x i32>, ptr %91, align 4, !tbaa !6
  %93 = shufflevector <8 x i32> %92, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %94 = getelementptr inbounds i32, ptr %87, i64 -23
  %95 = load <8 x i32>, ptr %94, align 4, !tbaa !6
  %96 = shufflevector <8 x i32> %95, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %97 = getelementptr inbounds i32, ptr %87, i64 -31
  %98 = load <8 x i32>, ptr %97, align 4, !tbaa !6
  %99 = shufflevector <8 x i32> %98, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %100 = mul <8 x i32> %90, %82
  %101 = mul <8 x i32> %93, %83
  %102 = mul <8 x i32> %96, %84
  %103 = mul <8 x i32> %99, %85
  %104 = add nuw i64 %81, 32
  %105 = icmp eq i64 %104, %78
  br i1 %105, label %106, label %80, !llvm.loop !585

106:                                              ; preds = %80
  %107 = mul <8 x i32> %101, %100
  %108 = mul <8 x i32> %102, %107
  %109 = mul <8 x i32> %103, %108
  %110 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %109)
  %111 = icmp eq i64 %74, %78
  br i1 %111, label %124, label %112

112:                                              ; preds = %65, %106
  %113 = phi i64 [ %68, %65 ], [ %79, %106 ]
  %114 = phi i32 [ 1, %65 ], [ %110, %106 ]
  br label %115

115:                                              ; preds = %112, %115
  %116 = phi i64 [ %121, %115 ], [ %113, %112 ]
  %117 = phi i32 [ %120, %115 ], [ %114, %112 ]
  %118 = getelementptr inbounds i32, ptr %9, i64 %116
  %119 = load i32, ptr %118, align 4, !tbaa !6
  %120 = mul nsw i32 %119, %117
  %121 = add nsw i64 %116, -1
  %122 = trunc i64 %116 to i32
  %123 = icmp sgt i32 %122, 0
  br i1 %123, label %115, label %124, !llvm.loop !586

124:                                              ; preds = %115, %106
  %125 = phi i32 [ %110, %106 ], [ %120, %115 ]
  %126 = and i64 %75, 4294967295
  %127 = getelementptr inbounds i32, ptr %6, i64 %126
  %128 = load i32, ptr %127, align 4, !tbaa !6
  %129 = mul nsw i32 %128, %125
  %130 = add nsw i32 %129, %69
  %131 = icmp sgt i64 %67, 2
  %132 = add nsw i64 %68, -1
  %133 = add i32 %66, 1
  br i1 %131, label %65, label %134, !llvm.loop !587

134:                                              ; preds = %124, %61
  %135 = phi i32 [ %64, %61 ], [ %130, %124 ]
  %136 = sext i32 %135 to i64
  %137 = getelementptr inbounds double, ptr %2, i64 %136
  %138 = load double, ptr %137, align 8, !tbaa !19
  %139 = getelementptr inbounds i32, ptr %24, i64 %136
  %140 = load i32, ptr %139, align 4, !tbaa !6
  %141 = trunc i32 %140 to i8
  %142 = fcmp fast ueq double %138, 0.000000e+00
  br i1 %142, label %149, label %143

143:                                              ; preds = %134
  %144 = load i8, ptr %26, align 1, !tbaa !12
  %145 = zext i8 %144 to i32
  %146 = and i32 %140, 255
  %147 = icmp ugt i32 %146, %145
  br i1 %147, label %148, label %149

148:                                              ; preds = %143
  store i8 %141, ptr %26, align 1, !tbaa !12
  br label %149

149:                                              ; preds = %143, %148, %134
  %150 = fadd fast double %138, %63
  %151 = add nuw nsw i32 %62, 1
  br i1 %55, label %152, label %199

152:                                              ; preds = %149
  %153 = load i32, ptr %4, align 4, !tbaa !6
  %154 = load i32, ptr %12, align 4, !tbaa !6
  %155 = add nsw i32 %154, -1
  %156 = icmp slt i32 %153, %155
  br i1 %156, label %176, label %157

157:                                              ; preds = %152
  %158 = icmp eq i32 %153, %155
  br i1 %158, label %159, label %192

159:                                              ; preds = %157
  store i32 0, ptr %4, align 4, !tbaa !6
  %160 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %160, ptr %6, align 4, !tbaa !6
  br i1 %60, label %199, label %161

161:                                              ; preds = %159, %186
  %162 = phi i64 [ %190, %186 ], [ 1, %159 ]
  %163 = getelementptr inbounds i32, ptr %4, i64 %162
  %164 = load i32, ptr %163, align 4, !tbaa !6
  %165 = getelementptr inbounds i32, ptr %12, i64 %162
  %166 = load i32, ptr %165, align 4, !tbaa !6
  %167 = add nsw i32 %166, -1
  %168 = icmp slt i32 %164, %167
  br i1 %168, label %169, label %184

169:                                              ; preds = %161
  br i1 %156, label %176, label %170

170:                                              ; preds = %169
  %171 = getelementptr inbounds i32, ptr %7, i64 %162
  %172 = load i32, ptr %171, align 4, !tbaa !6
  %173 = getelementptr inbounds i32, ptr %6, i64 %162
  %174 = load i32, ptr %173, align 4, !tbaa !6
  %175 = add nsw i32 %174, %172
  store i32 %175, ptr %173, align 4, !tbaa !6
  br label %194

176:                                              ; preds = %152, %169
  %177 = phi i32 [ %164, %169 ], [ %153, %152 ]
  %178 = phi ptr [ %163, %169 ], [ %4, %152 ]
  %179 = phi i64 [ %162, %169 ], [ 0, %152 ]
  %180 = add nsw i32 %177, 1
  store i32 %180, ptr %178, align 4, !tbaa !6
  %181 = getelementptr inbounds i32, ptr %7, i64 %179
  %182 = load i32, ptr %181, align 4, !tbaa !6
  %183 = getelementptr inbounds i32, ptr %6, i64 %179
  br label %194

184:                                              ; preds = %161
  %185 = icmp eq i32 %164, %167
  br i1 %185, label %186, label %192

186:                                              ; preds = %184
  store i32 0, ptr %163, align 4, !tbaa !6
  %187 = getelementptr inbounds i32, ptr %8, i64 %162
  %188 = load i32, ptr %187, align 4, !tbaa !6
  %189 = getelementptr inbounds i32, ptr %6, i64 %162
  store i32 %188, ptr %189, align 4, !tbaa !6
  %190 = add nuw nsw i64 %162, 1
  %191 = icmp eq i64 %190, %58
  br i1 %191, label %199, label %161, !llvm.loop !588

192:                                              ; preds = %157, %184
  %193 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1015, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5554

194:                                              ; preds = %170, %176
  %195 = phi ptr [ %183, %176 ], [ %163, %170 ]
  %196 = phi i32 [ %182, %176 ], [ 1, %170 ]
  %197 = load i32, ptr %195, align 4, !tbaa !6
  %198 = add nsw i32 %197, %196
  store i32 %198, ptr %195, align 4, !tbaa !6
  br label %199

199:                                              ; preds = %186, %194, %159, %149
  %200 = icmp eq i32 %151, %5
  br i1 %200, label %5549, label %61, !llvm.loop !589

201:                                              ; preds = %44, %340
  %202 = phi i32 [ 0, %44 ], [ %289, %340 ]
  %203 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %45, label %204, label %273

204:                                              ; preds = %201, %263
  %205 = phi i32 [ %272, %263 ], [ 0, %201 ]
  %206 = phi i64 [ %214, %263 ], [ %49, %201 ]
  %207 = phi i64 [ %271, %263 ], [ %48, %201 ]
  %208 = phi i32 [ %269, %263 ], [ %203, %201 ]
  %209 = sub i32 %47, %205
  %210 = tail call i32 @llvm.smin.i32(i32 %209, i32 0)
  %211 = sub i32 %209, %210
  %212 = zext i32 %211 to i64
  %213 = add nuw nsw i64 %212, 1
  %214 = add nsw i64 %206, -1
  %215 = icmp ult i32 %211, 31
  br i1 %215, label %251, label %216

216:                                              ; preds = %204
  %217 = and i64 %213, 8589934560
  %218 = sub i64 %207, %217
  br label %219

219:                                              ; preds = %219, %216
  %220 = phi i64 [ 0, %216 ], [ %243, %219 ]
  %221 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %216 ], [ %239, %219 ]
  %222 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %216 ], [ %240, %219 ]
  %223 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %216 ], [ %241, %219 ]
  %224 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %216 ], [ %242, %219 ]
  %225 = sub i64 %207, %220
  %226 = getelementptr inbounds i32, ptr %11, i64 %225
  %227 = getelementptr inbounds i32, ptr %226, i64 -7
  %228 = load <8 x i32>, ptr %227, align 4, !tbaa !6
  %229 = shufflevector <8 x i32> %228, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %230 = getelementptr inbounds i32, ptr %226, i64 -15
  %231 = load <8 x i32>, ptr %230, align 4, !tbaa !6
  %232 = shufflevector <8 x i32> %231, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %233 = getelementptr inbounds i32, ptr %226, i64 -23
  %234 = load <8 x i32>, ptr %233, align 4, !tbaa !6
  %235 = shufflevector <8 x i32> %234, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %236 = getelementptr inbounds i32, ptr %226, i64 -31
  %237 = load <8 x i32>, ptr %236, align 4, !tbaa !6
  %238 = shufflevector <8 x i32> %237, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %239 = mul <8 x i32> %229, %221
  %240 = mul <8 x i32> %232, %222
  %241 = mul <8 x i32> %235, %223
  %242 = mul <8 x i32> %238, %224
  %243 = add nuw i64 %220, 32
  %244 = icmp eq i64 %243, %217
  br i1 %244, label %245, label %219, !llvm.loop !590

245:                                              ; preds = %219
  %246 = mul <8 x i32> %240, %239
  %247 = mul <8 x i32> %241, %246
  %248 = mul <8 x i32> %242, %247
  %249 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %248)
  %250 = icmp eq i64 %213, %217
  br i1 %250, label %263, label %251

251:                                              ; preds = %204, %245
  %252 = phi i64 [ %207, %204 ], [ %218, %245 ]
  %253 = phi i32 [ 1, %204 ], [ %249, %245 ]
  br label %254

254:                                              ; preds = %251, %254
  %255 = phi i64 [ %260, %254 ], [ %252, %251 ]
  %256 = phi i32 [ %259, %254 ], [ %253, %251 ]
  %257 = getelementptr inbounds i32, ptr %11, i64 %255
  %258 = load i32, ptr %257, align 4, !tbaa !6
  %259 = mul nsw i32 %258, %256
  %260 = add nsw i64 %255, -1
  %261 = trunc i64 %255 to i32
  %262 = icmp sgt i32 %261, 0
  br i1 %262, label %254, label %263, !llvm.loop !591

263:                                              ; preds = %254, %245
  %264 = phi i32 [ %249, %245 ], [ %259, %254 ]
  %265 = and i64 %214, 4294967295
  %266 = getelementptr inbounds i32, ptr %6, i64 %265
  %267 = load i32, ptr %266, align 4, !tbaa !6
  %268 = mul nsw i32 %267, %264
  %269 = add nsw i32 %268, %208
  %270 = icmp sgt i64 %206, 2
  %271 = add nsw i64 %207, -1
  %272 = add i32 %205, 1
  br i1 %270, label %204, label %273, !llvm.loop !592

273:                                              ; preds = %263, %201
  %274 = phi i32 [ %203, %201 ], [ %269, %263 ]
  %275 = icmp slt i32 %274, %5
  br i1 %275, label %278, label %276

276:                                              ; preds = %273
  %277 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1015, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5554

278:                                              ; preds = %273
  %279 = sext i32 %274 to i64
  %280 = getelementptr inbounds i32, ptr %24, i64 %279
  %281 = load i32, ptr %280, align 4, !tbaa !6
  %282 = load i8, ptr %26, align 1, !tbaa !12
  %283 = zext i8 %282 to i32
  %284 = and i32 %281, 255
  %285 = icmp ugt i32 %284, %283
  br i1 %285, label %286, label %288

286:                                              ; preds = %278
  %287 = trunc i32 %281 to i8
  store i8 %287, ptr %26, align 1, !tbaa !12
  br label %288

288:                                              ; preds = %278, %286
  %289 = add nuw nsw i32 %202, 1
  br i1 %46, label %290, label %340

290:                                              ; preds = %288
  %291 = load i32, ptr %4, align 4, !tbaa !6
  %292 = load i32, ptr %12, align 4, !tbaa !6
  %293 = add nsw i32 %292, -1
  %294 = icmp slt i32 %291, %293
  br i1 %294, label %317, label %295

295:                                              ; preds = %290
  %296 = icmp eq i32 %291, %293
  br i1 %296, label %297, label %333

297:                                              ; preds = %295
  store i32 0, ptr %4, align 4, !tbaa !6
  %298 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %298, ptr %6, align 4, !tbaa !6
  br i1 %51, label %340, label %299

299:                                              ; preds = %297, %327
  %300 = phi i64 [ %331, %327 ], [ 1, %297 ]
  %301 = getelementptr inbounds i32, ptr %4, i64 %300
  %302 = load i32, ptr %301, align 4, !tbaa !6
  %303 = getelementptr inbounds i32, ptr %12, i64 %300
  %304 = load i32, ptr %303, align 4, !tbaa !6
  %305 = add nsw i32 %304, -1
  %306 = icmp slt i32 %302, %305
  br i1 %306, label %307, label %325

307:                                              ; preds = %299
  br i1 %294, label %317, label %308

308:                                              ; preds = %307
  %309 = shl i64 %300, 32
  %310 = add i64 %309, -4294967296
  %311 = ashr exact i64 %310, 32
  %312 = getelementptr inbounds i32, ptr %7, i64 %311
  %313 = load i32, ptr %312, align 4, !tbaa !6
  %314 = getelementptr inbounds i32, ptr %6, i64 %300
  %315 = load i32, ptr %314, align 4, !tbaa !6
  %316 = add nsw i32 %315, %313
  store i32 %316, ptr %314, align 4, !tbaa !6
  br label %335

317:                                              ; preds = %290, %307
  %318 = phi i32 [ %302, %307 ], [ %291, %290 ]
  %319 = phi ptr [ %301, %307 ], [ %4, %290 ]
  %320 = phi i64 [ %300, %307 ], [ 0, %290 ]
  %321 = add nsw i32 %318, 1
  store i32 %321, ptr %319, align 4, !tbaa !6
  %322 = getelementptr inbounds i32, ptr %7, i64 %320
  %323 = load i32, ptr %322, align 4, !tbaa !6
  %324 = getelementptr inbounds i32, ptr %6, i64 %320
  br label %335

325:                                              ; preds = %299
  %326 = icmp eq i32 %302, %305
  br i1 %326, label %327, label %333

327:                                              ; preds = %325
  store i32 0, ptr %301, align 4, !tbaa !6
  %328 = getelementptr inbounds i32, ptr %8, i64 %300
  %329 = load i32, ptr %328, align 4, !tbaa !6
  %330 = getelementptr inbounds i32, ptr %6, i64 %300
  store i32 %329, ptr %330, align 4, !tbaa !6
  %331 = add nuw nsw i64 %300, 1
  %332 = icmp eq i64 %331, %49
  br i1 %332, label %340, label %299, !llvm.loop !593

333:                                              ; preds = %295, %325
  %334 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1015, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5554

335:                                              ; preds = %308, %317
  %336 = phi ptr [ %324, %317 ], [ %301, %308 ]
  %337 = phi i32 [ %323, %317 ], [ 1, %308 ]
  %338 = load i32, ptr %336, align 4, !tbaa !6
  %339 = add nsw i32 %338, %337
  store i32 %339, ptr %336, align 4, !tbaa !6
  br label %340

340:                                              ; preds = %327, %335, %297, %288
  %341 = icmp eq i32 %289, %5
  br i1 %341, label %5549, label %201, !llvm.loop !594

342:                                              ; preds = %37
  %343 = getelementptr inbounds i32, ptr %3, i64 %19
  %344 = load i32, ptr %343, align 4, !tbaa !6
  %345 = icmp eq i32 %344, 0
  %346 = icmp sgt i32 %5, 0
  br i1 %345, label %356, label %347

347:                                              ; preds = %342
  br i1 %346, label %348, label %5549

348:                                              ; preds = %347
  %349 = icmp sgt i32 %13, 1
  %350 = icmp sgt i32 %13, 0
  %351 = add i32 %13, -2
  %352 = zext i32 %351 to i64
  %353 = zext i32 %13 to i64
  %354 = add nuw i32 %5, 1
  %355 = icmp eq i32 %13, 1
  br label %501

356:                                              ; preds = %342
  br i1 %346, label %357, label %5549

357:                                              ; preds = %356
  %358 = icmp sgt i32 %13, 1
  %359 = icmp sgt i32 %13, 0
  %360 = add i32 %13, -2
  %361 = zext i32 %360 to i64
  %362 = zext i32 %13 to i64
  %363 = add nuw i32 %5, 1
  %364 = icmp eq i32 %13, 1
  br label %365

365:                                              ; preds = %357, %499
  %366 = phi i32 [ 0, %357 ], [ %451, %499 ]
  %367 = phi double [ 0.000000e+00, %357 ], [ %450, %499 ]
  %368 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %358, label %369, label %438

369:                                              ; preds = %365, %428
  %370 = phi i32 [ %437, %428 ], [ 0, %365 ]
  %371 = phi i64 [ %379, %428 ], [ %362, %365 ]
  %372 = phi i64 [ %436, %428 ], [ %361, %365 ]
  %373 = phi i32 [ %434, %428 ], [ %368, %365 ]
  %374 = sub i32 %360, %370
  %375 = tail call i32 @llvm.smin.i32(i32 %374, i32 0)
  %376 = sub i32 %374, %375
  %377 = zext i32 %376 to i64
  %378 = add nuw nsw i64 %377, 1
  %379 = add nsw i64 %371, -1
  %380 = icmp ult i32 %376, 31
  br i1 %380, label %416, label %381

381:                                              ; preds = %369
  %382 = and i64 %378, 8589934560
  %383 = sub i64 %372, %382
  br label %384

384:                                              ; preds = %384, %381
  %385 = phi i64 [ 0, %381 ], [ %408, %384 ]
  %386 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %381 ], [ %404, %384 ]
  %387 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %381 ], [ %405, %384 ]
  %388 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %381 ], [ %406, %384 ]
  %389 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %381 ], [ %407, %384 ]
  %390 = sub i64 %372, %385
  %391 = getelementptr inbounds i32, ptr %9, i64 %390
  %392 = getelementptr inbounds i32, ptr %391, i64 -7
  %393 = load <8 x i32>, ptr %392, align 4, !tbaa !6
  %394 = shufflevector <8 x i32> %393, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %395 = getelementptr inbounds i32, ptr %391, i64 -15
  %396 = load <8 x i32>, ptr %395, align 4, !tbaa !6
  %397 = shufflevector <8 x i32> %396, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %398 = getelementptr inbounds i32, ptr %391, i64 -23
  %399 = load <8 x i32>, ptr %398, align 4, !tbaa !6
  %400 = shufflevector <8 x i32> %399, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %401 = getelementptr inbounds i32, ptr %391, i64 -31
  %402 = load <8 x i32>, ptr %401, align 4, !tbaa !6
  %403 = shufflevector <8 x i32> %402, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %404 = mul <8 x i32> %394, %386
  %405 = mul <8 x i32> %397, %387
  %406 = mul <8 x i32> %400, %388
  %407 = mul <8 x i32> %403, %389
  %408 = add nuw i64 %385, 32
  %409 = icmp eq i64 %408, %382
  br i1 %409, label %410, label %384, !llvm.loop !595

410:                                              ; preds = %384
  %411 = mul <8 x i32> %405, %404
  %412 = mul <8 x i32> %406, %411
  %413 = mul <8 x i32> %407, %412
  %414 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %413)
  %415 = icmp eq i64 %378, %382
  br i1 %415, label %428, label %416

416:                                              ; preds = %369, %410
  %417 = phi i64 [ %372, %369 ], [ %383, %410 ]
  %418 = phi i32 [ 1, %369 ], [ %414, %410 ]
  br label %419

419:                                              ; preds = %416, %419
  %420 = phi i64 [ %425, %419 ], [ %417, %416 ]
  %421 = phi i32 [ %424, %419 ], [ %418, %416 ]
  %422 = getelementptr inbounds i32, ptr %9, i64 %420
  %423 = load i32, ptr %422, align 4, !tbaa !6
  %424 = mul nsw i32 %423, %421
  %425 = add nsw i64 %420, -1
  %426 = trunc i64 %420 to i32
  %427 = icmp sgt i32 %426, 0
  br i1 %427, label %419, label %428, !llvm.loop !596

428:                                              ; preds = %419, %410
  %429 = phi i32 [ %414, %410 ], [ %424, %419 ]
  %430 = and i64 %379, 4294967295
  %431 = getelementptr inbounds i32, ptr %6, i64 %430
  %432 = load i32, ptr %431, align 4, !tbaa !6
  %433 = mul nsw i32 %432, %429
  %434 = add nsw i32 %433, %373
  %435 = icmp sgt i64 %371, 2
  %436 = add nsw i64 %372, -1
  %437 = add i32 %370, 1
  br i1 %435, label %369, label %438, !llvm.loop !597

438:                                              ; preds = %428, %365
  %439 = phi i32 [ %368, %365 ], [ %434, %428 ]
  %440 = sext i32 %439 to i64
  %441 = getelementptr inbounds i32, ptr %24, i64 %440
  %442 = load i32, ptr %441, align 4, !tbaa !6
  %443 = load i8, ptr %26, align 1, !tbaa !12
  %444 = zext i8 %443 to i32
  %445 = and i32 %442, 255
  %446 = icmp ugt i32 %445, %444
  br i1 %446, label %447, label %449

447:                                              ; preds = %438
  %448 = trunc i32 %442 to i8
  store i8 %448, ptr %26, align 1, !tbaa !12
  br label %449

449:                                              ; preds = %447, %438
  %450 = fadd fast double %367, 1.000000e+00
  %451 = add nuw nsw i32 %366, 1
  br i1 %359, label %452, label %499

452:                                              ; preds = %449
  %453 = load i32, ptr %4, align 4, !tbaa !6
  %454 = load i32, ptr %12, align 4, !tbaa !6
  %455 = add nsw i32 %454, -1
  %456 = icmp slt i32 %453, %455
  br i1 %456, label %476, label %457

457:                                              ; preds = %452
  %458 = icmp eq i32 %453, %455
  br i1 %458, label %459, label %492

459:                                              ; preds = %457
  store i32 0, ptr %4, align 4, !tbaa !6
  %460 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %460, ptr %6, align 4, !tbaa !6
  br i1 %364, label %499, label %461

461:                                              ; preds = %459, %486
  %462 = phi i64 [ %490, %486 ], [ 1, %459 ]
  %463 = getelementptr inbounds i32, ptr %4, i64 %462
  %464 = load i32, ptr %463, align 4, !tbaa !6
  %465 = getelementptr inbounds i32, ptr %12, i64 %462
  %466 = load i32, ptr %465, align 4, !tbaa !6
  %467 = add nsw i32 %466, -1
  %468 = icmp slt i32 %464, %467
  br i1 %468, label %469, label %484

469:                                              ; preds = %461
  br i1 %456, label %476, label %470

470:                                              ; preds = %469
  %471 = getelementptr inbounds i32, ptr %7, i64 %462
  %472 = load i32, ptr %471, align 4, !tbaa !6
  %473 = getelementptr inbounds i32, ptr %6, i64 %462
  %474 = load i32, ptr %473, align 4, !tbaa !6
  %475 = add nsw i32 %474, %472
  store i32 %475, ptr %473, align 4, !tbaa !6
  br label %494

476:                                              ; preds = %452, %469
  %477 = phi i32 [ %464, %469 ], [ %453, %452 ]
  %478 = phi ptr [ %463, %469 ], [ %4, %452 ]
  %479 = phi i64 [ %462, %469 ], [ 0, %452 ]
  %480 = add nsw i32 %477, 1
  store i32 %480, ptr %478, align 4, !tbaa !6
  %481 = getelementptr inbounds i32, ptr %7, i64 %479
  %482 = load i32, ptr %481, align 4, !tbaa !6
  %483 = getelementptr inbounds i32, ptr %6, i64 %479
  br label %494

484:                                              ; preds = %461
  %485 = icmp eq i32 %464, %467
  br i1 %485, label %486, label %492

486:                                              ; preds = %484
  store i32 0, ptr %463, align 4, !tbaa !6
  %487 = getelementptr inbounds i32, ptr %8, i64 %462
  %488 = load i32, ptr %487, align 4, !tbaa !6
  %489 = getelementptr inbounds i32, ptr %6, i64 %462
  store i32 %488, ptr %489, align 4, !tbaa !6
  %490 = add nuw nsw i64 %462, 1
  %491 = icmp eq i64 %490, %362
  br i1 %491, label %499, label %461, !llvm.loop !598

492:                                              ; preds = %457, %484
  %493 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1015, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5554

494:                                              ; preds = %470, %476
  %495 = phi ptr [ %483, %476 ], [ %463, %470 ]
  %496 = phi i32 [ %482, %476 ], [ 1, %470 ]
  %497 = load i32, ptr %495, align 4, !tbaa !6
  %498 = add nsw i32 %497, %496
  store i32 %498, ptr %495, align 4, !tbaa !6
  br label %499

499:                                              ; preds = %486, %494, %459, %449
  %500 = icmp eq i32 %451, %5
  br i1 %500, label %5549, label %365, !llvm.loop !599

501:                                              ; preds = %348, %640
  %502 = phi i32 [ 0, %348 ], [ %589, %640 ]
  %503 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %349, label %504, label %573

504:                                              ; preds = %501, %563
  %505 = phi i32 [ %572, %563 ], [ 0, %501 ]
  %506 = phi i64 [ %514, %563 ], [ %353, %501 ]
  %507 = phi i64 [ %571, %563 ], [ %352, %501 ]
  %508 = phi i32 [ %569, %563 ], [ %503, %501 ]
  %509 = sub i32 %351, %505
  %510 = tail call i32 @llvm.smin.i32(i32 %509, i32 0)
  %511 = sub i32 %509, %510
  %512 = zext i32 %511 to i64
  %513 = add nuw nsw i64 %512, 1
  %514 = add nsw i64 %506, -1
  %515 = icmp ult i32 %511, 31
  br i1 %515, label %551, label %516

516:                                              ; preds = %504
  %517 = and i64 %513, 8589934560
  %518 = sub i64 %507, %517
  br label %519

519:                                              ; preds = %519, %516
  %520 = phi i64 [ 0, %516 ], [ %543, %519 ]
  %521 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %516 ], [ %539, %519 ]
  %522 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %516 ], [ %540, %519 ]
  %523 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %516 ], [ %541, %519 ]
  %524 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %516 ], [ %542, %519 ]
  %525 = sub i64 %507, %520
  %526 = getelementptr inbounds i32, ptr %11, i64 %525
  %527 = getelementptr inbounds i32, ptr %526, i64 -7
  %528 = load <8 x i32>, ptr %527, align 4, !tbaa !6
  %529 = shufflevector <8 x i32> %528, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %530 = getelementptr inbounds i32, ptr %526, i64 -15
  %531 = load <8 x i32>, ptr %530, align 4, !tbaa !6
  %532 = shufflevector <8 x i32> %531, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %533 = getelementptr inbounds i32, ptr %526, i64 -23
  %534 = load <8 x i32>, ptr %533, align 4, !tbaa !6
  %535 = shufflevector <8 x i32> %534, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %536 = getelementptr inbounds i32, ptr %526, i64 -31
  %537 = load <8 x i32>, ptr %536, align 4, !tbaa !6
  %538 = shufflevector <8 x i32> %537, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %539 = mul <8 x i32> %529, %521
  %540 = mul <8 x i32> %532, %522
  %541 = mul <8 x i32> %535, %523
  %542 = mul <8 x i32> %538, %524
  %543 = add nuw i64 %520, 32
  %544 = icmp eq i64 %543, %517
  br i1 %544, label %545, label %519, !llvm.loop !600

545:                                              ; preds = %519
  %546 = mul <8 x i32> %540, %539
  %547 = mul <8 x i32> %541, %546
  %548 = mul <8 x i32> %542, %547
  %549 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %548)
  %550 = icmp eq i64 %513, %517
  br i1 %550, label %563, label %551

551:                                              ; preds = %504, %545
  %552 = phi i64 [ %507, %504 ], [ %518, %545 ]
  %553 = phi i32 [ 1, %504 ], [ %549, %545 ]
  br label %554

554:                                              ; preds = %551, %554
  %555 = phi i64 [ %560, %554 ], [ %552, %551 ]
  %556 = phi i32 [ %559, %554 ], [ %553, %551 ]
  %557 = getelementptr inbounds i32, ptr %11, i64 %555
  %558 = load i32, ptr %557, align 4, !tbaa !6
  %559 = mul nsw i32 %558, %556
  %560 = add nsw i64 %555, -1
  %561 = trunc i64 %555 to i32
  %562 = icmp sgt i32 %561, 0
  br i1 %562, label %554, label %563, !llvm.loop !601

563:                                              ; preds = %554, %545
  %564 = phi i32 [ %549, %545 ], [ %559, %554 ]
  %565 = and i64 %514, 4294967295
  %566 = getelementptr inbounds i32, ptr %6, i64 %565
  %567 = load i32, ptr %566, align 4, !tbaa !6
  %568 = mul nsw i32 %567, %564
  %569 = add nsw i32 %568, %508
  %570 = icmp sgt i64 %506, 2
  %571 = add nsw i64 %507, -1
  %572 = add i32 %505, 1
  br i1 %570, label %504, label %573, !llvm.loop !602

573:                                              ; preds = %563, %501
  %574 = phi i32 [ %503, %501 ], [ %569, %563 ]
  %575 = icmp slt i32 %574, %5
  br i1 %575, label %578, label %576

576:                                              ; preds = %573
  %577 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1015, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5554

578:                                              ; preds = %573
  %579 = sext i32 %574 to i64
  %580 = getelementptr inbounds i32, ptr %24, i64 %579
  %581 = load i32, ptr %580, align 4, !tbaa !6
  %582 = load i8, ptr %26, align 1, !tbaa !12
  %583 = zext i8 %582 to i32
  %584 = and i32 %581, 255
  %585 = icmp ugt i32 %584, %583
  br i1 %585, label %586, label %588

586:                                              ; preds = %578
  %587 = trunc i32 %581 to i8
  store i8 %587, ptr %26, align 1, !tbaa !12
  br label %588

588:                                              ; preds = %586, %578
  %589 = add nuw nsw i32 %502, 1
  br i1 %350, label %590, label %640

590:                                              ; preds = %588
  %591 = load i32, ptr %4, align 4, !tbaa !6
  %592 = load i32, ptr %12, align 4, !tbaa !6
  %593 = add nsw i32 %592, -1
  %594 = icmp slt i32 %591, %593
  br i1 %594, label %617, label %595

595:                                              ; preds = %590
  %596 = icmp eq i32 %591, %593
  br i1 %596, label %597, label %633

597:                                              ; preds = %595
  store i32 0, ptr %4, align 4, !tbaa !6
  %598 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %598, ptr %6, align 4, !tbaa !6
  br i1 %355, label %640, label %599

599:                                              ; preds = %597, %627
  %600 = phi i64 [ %631, %627 ], [ 1, %597 ]
  %601 = getelementptr inbounds i32, ptr %4, i64 %600
  %602 = load i32, ptr %601, align 4, !tbaa !6
  %603 = getelementptr inbounds i32, ptr %12, i64 %600
  %604 = load i32, ptr %603, align 4, !tbaa !6
  %605 = add nsw i32 %604, -1
  %606 = icmp slt i32 %602, %605
  br i1 %606, label %607, label %625

607:                                              ; preds = %599
  br i1 %594, label %617, label %608

608:                                              ; preds = %607
  %609 = shl i64 %600, 32
  %610 = add i64 %609, -4294967296
  %611 = ashr exact i64 %610, 32
  %612 = getelementptr inbounds i32, ptr %7, i64 %611
  %613 = load i32, ptr %612, align 4, !tbaa !6
  %614 = getelementptr inbounds i32, ptr %6, i64 %600
  %615 = load i32, ptr %614, align 4, !tbaa !6
  %616 = add nsw i32 %615, %613
  store i32 %616, ptr %614, align 4, !tbaa !6
  br label %635

617:                                              ; preds = %590, %607
  %618 = phi i32 [ %602, %607 ], [ %591, %590 ]
  %619 = phi ptr [ %601, %607 ], [ %4, %590 ]
  %620 = phi i64 [ %600, %607 ], [ 0, %590 ]
  %621 = add nsw i32 %618, 1
  store i32 %621, ptr %619, align 4, !tbaa !6
  %622 = getelementptr inbounds i32, ptr %7, i64 %620
  %623 = load i32, ptr %622, align 4, !tbaa !6
  %624 = getelementptr inbounds i32, ptr %6, i64 %620
  br label %635

625:                                              ; preds = %599
  %626 = icmp eq i32 %602, %605
  br i1 %626, label %627, label %633

627:                                              ; preds = %625
  store i32 0, ptr %601, align 4, !tbaa !6
  %628 = getelementptr inbounds i32, ptr %8, i64 %600
  %629 = load i32, ptr %628, align 4, !tbaa !6
  %630 = getelementptr inbounds i32, ptr %6, i64 %600
  store i32 %629, ptr %630, align 4, !tbaa !6
  %631 = add nuw nsw i64 %600, 1
  %632 = icmp eq i64 %631, %353
  br i1 %632, label %640, label %599, !llvm.loop !603

633:                                              ; preds = %595, %625
  %634 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1015, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5554

635:                                              ; preds = %608, %617
  %636 = phi ptr [ %624, %617 ], [ %601, %608 ]
  %637 = phi i32 [ %623, %617 ], [ 1, %608 ]
  %638 = load i32, ptr %636, align 4, !tbaa !6
  %639 = add nsw i32 %638, %637
  store i32 %639, ptr %636, align 4, !tbaa !6
  br label %640

640:                                              ; preds = %627, %635, %597, %588
  %641 = icmp eq i32 %589, %5
  br i1 %641, label %5549, label %501, !llvm.loop !604

642:                                              ; preds = %37
  %643 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1015, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5549

644:                                              ; preds = %18
  %645 = getelementptr inbounds ptr, ptr %14, i64 %19
  %646 = load ptr, ptr %645, align 8, !tbaa !10
  %647 = getelementptr inbounds ptr, ptr %16, i64 %19
  %648 = load ptr, ptr %647, align 8, !tbaa !10
  %649 = load i32, ptr %646, align 4, !tbaa !6
  store i32 %649, ptr %648, align 4, !tbaa !6
  %650 = icmp eq i32 %13, 0
  br i1 %650, label %651, label %655

651:                                              ; preds = %644
  %652 = load i32, ptr %646, align 4, !tbaa !6
  %653 = icmp slt i32 %649, %652
  br i1 %653, label %654, label %5549

654:                                              ; preds = %651
  store i32 %652, ptr %648, align 4, !tbaa !6
  br label %5549

655:                                              ; preds = %644
  switch i32 %1, label %1248 [
    i32 1, label %656
    i32 0, label %954
  ]

656:                                              ; preds = %655
  %657 = getelementptr inbounds i32, ptr %3, i64 %19
  %658 = load i32, ptr %657, align 4, !tbaa !6
  %659 = icmp eq i32 %658, 0
  %660 = icmp sgt i32 %5, 0
  br i1 %659, label %670, label %661

661:                                              ; preds = %656
  br i1 %660, label %662, label %5549

662:                                              ; preds = %661
  %663 = icmp sgt i32 %13, 1
  %664 = icmp sgt i32 %13, 0
  %665 = add i32 %13, -2
  %666 = zext i32 %665 to i64
  %667 = zext i32 %13 to i64
  %668 = add nuw i32 %5, 1
  %669 = icmp eq i32 %13, 1
  br label %816

670:                                              ; preds = %656
  br i1 %660, label %671, label %5549

671:                                              ; preds = %670
  %672 = icmp sgt i32 %13, 1
  %673 = icmp sgt i32 %13, 0
  %674 = add i32 %13, -2
  %675 = zext i32 %674 to i64
  %676 = zext i32 %13 to i64
  %677 = add nuw i32 %5, 1
  %678 = icmp eq i32 %13, 1
  br label %679

679:                                              ; preds = %671, %814
  %680 = phi i32 [ 0, %671 ], [ %766, %814 ]
  %681 = phi double [ 0.000000e+00, %671 ], [ %765, %814 ]
  %682 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %672, label %683, label %752

683:                                              ; preds = %679, %742
  %684 = phi i32 [ %751, %742 ], [ 0, %679 ]
  %685 = phi i64 [ %693, %742 ], [ %676, %679 ]
  %686 = phi i64 [ %750, %742 ], [ %675, %679 ]
  %687 = phi i32 [ %748, %742 ], [ %682, %679 ]
  %688 = sub i32 %674, %684
  %689 = tail call i32 @llvm.smin.i32(i32 %688, i32 0)
  %690 = sub i32 %688, %689
  %691 = zext i32 %690 to i64
  %692 = add nuw nsw i64 %691, 1
  %693 = add nsw i64 %685, -1
  %694 = icmp ult i32 %690, 31
  br i1 %694, label %730, label %695

695:                                              ; preds = %683
  %696 = and i64 %692, 8589934560
  %697 = sub i64 %686, %696
  br label %698

698:                                              ; preds = %698, %695
  %699 = phi i64 [ 0, %695 ], [ %722, %698 ]
  %700 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %695 ], [ %718, %698 ]
  %701 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %695 ], [ %719, %698 ]
  %702 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %695 ], [ %720, %698 ]
  %703 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %695 ], [ %721, %698 ]
  %704 = sub i64 %686, %699
  %705 = getelementptr inbounds i32, ptr %9, i64 %704
  %706 = getelementptr inbounds i32, ptr %705, i64 -7
  %707 = load <8 x i32>, ptr %706, align 4, !tbaa !6
  %708 = shufflevector <8 x i32> %707, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %709 = getelementptr inbounds i32, ptr %705, i64 -15
  %710 = load <8 x i32>, ptr %709, align 4, !tbaa !6
  %711 = shufflevector <8 x i32> %710, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %712 = getelementptr inbounds i32, ptr %705, i64 -23
  %713 = load <8 x i32>, ptr %712, align 4, !tbaa !6
  %714 = shufflevector <8 x i32> %713, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %715 = getelementptr inbounds i32, ptr %705, i64 -31
  %716 = load <8 x i32>, ptr %715, align 4, !tbaa !6
  %717 = shufflevector <8 x i32> %716, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %718 = mul <8 x i32> %708, %700
  %719 = mul <8 x i32> %711, %701
  %720 = mul <8 x i32> %714, %702
  %721 = mul <8 x i32> %717, %703
  %722 = add nuw i64 %699, 32
  %723 = icmp eq i64 %722, %696
  br i1 %723, label %724, label %698, !llvm.loop !605

724:                                              ; preds = %698
  %725 = mul <8 x i32> %719, %718
  %726 = mul <8 x i32> %720, %725
  %727 = mul <8 x i32> %721, %726
  %728 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %727)
  %729 = icmp eq i64 %692, %696
  br i1 %729, label %742, label %730

730:                                              ; preds = %683, %724
  %731 = phi i64 [ %686, %683 ], [ %697, %724 ]
  %732 = phi i32 [ 1, %683 ], [ %728, %724 ]
  br label %733

733:                                              ; preds = %730, %733
  %734 = phi i64 [ %739, %733 ], [ %731, %730 ]
  %735 = phi i32 [ %738, %733 ], [ %732, %730 ]
  %736 = getelementptr inbounds i32, ptr %9, i64 %734
  %737 = load i32, ptr %736, align 4, !tbaa !6
  %738 = mul nsw i32 %737, %735
  %739 = add nsw i64 %734, -1
  %740 = trunc i64 %734 to i32
  %741 = icmp sgt i32 %740, 0
  br i1 %741, label %733, label %742, !llvm.loop !606

742:                                              ; preds = %733, %724
  %743 = phi i32 [ %728, %724 ], [ %738, %733 ]
  %744 = and i64 %693, 4294967295
  %745 = getelementptr inbounds i32, ptr %6, i64 %744
  %746 = load i32, ptr %745, align 4, !tbaa !6
  %747 = mul nsw i32 %746, %743
  %748 = add nsw i32 %747, %687
  %749 = icmp sgt i64 %685, 2
  %750 = add nsw i64 %686, -1
  %751 = add i32 %684, 1
  br i1 %749, label %683, label %752, !llvm.loop !607

752:                                              ; preds = %742, %679
  %753 = phi i32 [ %682, %679 ], [ %748, %742 ]
  %754 = sext i32 %753 to i64
  %755 = getelementptr inbounds double, ptr %2, i64 %754
  %756 = load double, ptr %755, align 8, !tbaa !19
  %757 = getelementptr inbounds i32, ptr %646, i64 %754
  %758 = load i32, ptr %757, align 4, !tbaa !6
  %759 = fcmp fast ueq double %756, 0.000000e+00
  br i1 %759, label %764, label %760

760:                                              ; preds = %752
  %761 = load i32, ptr %648, align 4, !tbaa !6
  %762 = icmp slt i32 %761, %758
  br i1 %762, label %763, label %764

763:                                              ; preds = %760
  store i32 %758, ptr %648, align 4, !tbaa !6
  br label %764

764:                                              ; preds = %760, %763, %752
  %765 = fadd fast double %756, %681
  %766 = add nuw nsw i32 %680, 1
  br i1 %673, label %767, label %814

767:                                              ; preds = %764
  %768 = load i32, ptr %4, align 4, !tbaa !6
  %769 = load i32, ptr %12, align 4, !tbaa !6
  %770 = add nsw i32 %769, -1
  %771 = icmp slt i32 %768, %770
  br i1 %771, label %791, label %772

772:                                              ; preds = %767
  %773 = icmp eq i32 %768, %770
  br i1 %773, label %774, label %807

774:                                              ; preds = %772
  store i32 0, ptr %4, align 4, !tbaa !6
  %775 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %775, ptr %6, align 4, !tbaa !6
  br i1 %678, label %814, label %776

776:                                              ; preds = %774, %801
  %777 = phi i64 [ %805, %801 ], [ 1, %774 ]
  %778 = getelementptr inbounds i32, ptr %4, i64 %777
  %779 = load i32, ptr %778, align 4, !tbaa !6
  %780 = getelementptr inbounds i32, ptr %12, i64 %777
  %781 = load i32, ptr %780, align 4, !tbaa !6
  %782 = add nsw i32 %781, -1
  %783 = icmp slt i32 %779, %782
  br i1 %783, label %784, label %799

784:                                              ; preds = %776
  br i1 %771, label %791, label %785

785:                                              ; preds = %784
  %786 = getelementptr inbounds i32, ptr %7, i64 %777
  %787 = load i32, ptr %786, align 4, !tbaa !6
  %788 = getelementptr inbounds i32, ptr %6, i64 %777
  %789 = load i32, ptr %788, align 4, !tbaa !6
  %790 = add nsw i32 %789, %787
  store i32 %790, ptr %788, align 4, !tbaa !6
  br label %809

791:                                              ; preds = %767, %784
  %792 = phi i32 [ %779, %784 ], [ %768, %767 ]
  %793 = phi ptr [ %778, %784 ], [ %4, %767 ]
  %794 = phi i64 [ %777, %784 ], [ 0, %767 ]
  %795 = add nsw i32 %792, 1
  store i32 %795, ptr %793, align 4, !tbaa !6
  %796 = getelementptr inbounds i32, ptr %7, i64 %794
  %797 = load i32, ptr %796, align 4, !tbaa !6
  %798 = getelementptr inbounds i32, ptr %6, i64 %794
  br label %809

799:                                              ; preds = %776
  %800 = icmp eq i32 %779, %782
  br i1 %800, label %801, label %807

801:                                              ; preds = %799
  store i32 0, ptr %778, align 4, !tbaa !6
  %802 = getelementptr inbounds i32, ptr %8, i64 %777
  %803 = load i32, ptr %802, align 4, !tbaa !6
  %804 = getelementptr inbounds i32, ptr %6, i64 %777
  store i32 %803, ptr %804, align 4, !tbaa !6
  %805 = add nuw nsw i64 %777, 1
  %806 = icmp eq i64 %805, %676
  br i1 %806, label %814, label %776, !llvm.loop !608

807:                                              ; preds = %772, %799
  %808 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1018, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5554

809:                                              ; preds = %785, %791
  %810 = phi ptr [ %798, %791 ], [ %778, %785 ]
  %811 = phi i32 [ %797, %791 ], [ 1, %785 ]
  %812 = load i32, ptr %810, align 4, !tbaa !6
  %813 = add nsw i32 %812, %811
  store i32 %813, ptr %810, align 4, !tbaa !6
  br label %814

814:                                              ; preds = %801, %809, %774, %764
  %815 = icmp eq i32 %766, %5
  br i1 %815, label %5549, label %679, !llvm.loop !609

816:                                              ; preds = %662, %952
  %817 = phi i32 [ 0, %662 ], [ %901, %952 ]
  %818 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %663, label %819, label %888

819:                                              ; preds = %816, %878
  %820 = phi i32 [ %887, %878 ], [ 0, %816 ]
  %821 = phi i64 [ %829, %878 ], [ %667, %816 ]
  %822 = phi i64 [ %886, %878 ], [ %666, %816 ]
  %823 = phi i32 [ %884, %878 ], [ %818, %816 ]
  %824 = sub i32 %665, %820
  %825 = tail call i32 @llvm.smin.i32(i32 %824, i32 0)
  %826 = sub i32 %824, %825
  %827 = zext i32 %826 to i64
  %828 = add nuw nsw i64 %827, 1
  %829 = add nsw i64 %821, -1
  %830 = icmp ult i32 %826, 31
  br i1 %830, label %866, label %831

831:                                              ; preds = %819
  %832 = and i64 %828, 8589934560
  %833 = sub i64 %822, %832
  br label %834

834:                                              ; preds = %834, %831
  %835 = phi i64 [ 0, %831 ], [ %858, %834 ]
  %836 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %831 ], [ %854, %834 ]
  %837 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %831 ], [ %855, %834 ]
  %838 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %831 ], [ %856, %834 ]
  %839 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %831 ], [ %857, %834 ]
  %840 = sub i64 %822, %835
  %841 = getelementptr inbounds i32, ptr %11, i64 %840
  %842 = getelementptr inbounds i32, ptr %841, i64 -7
  %843 = load <8 x i32>, ptr %842, align 4, !tbaa !6
  %844 = shufflevector <8 x i32> %843, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %845 = getelementptr inbounds i32, ptr %841, i64 -15
  %846 = load <8 x i32>, ptr %845, align 4, !tbaa !6
  %847 = shufflevector <8 x i32> %846, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %848 = getelementptr inbounds i32, ptr %841, i64 -23
  %849 = load <8 x i32>, ptr %848, align 4, !tbaa !6
  %850 = shufflevector <8 x i32> %849, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %851 = getelementptr inbounds i32, ptr %841, i64 -31
  %852 = load <8 x i32>, ptr %851, align 4, !tbaa !6
  %853 = shufflevector <8 x i32> %852, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %854 = mul <8 x i32> %844, %836
  %855 = mul <8 x i32> %847, %837
  %856 = mul <8 x i32> %850, %838
  %857 = mul <8 x i32> %853, %839
  %858 = add nuw i64 %835, 32
  %859 = icmp eq i64 %858, %832
  br i1 %859, label %860, label %834, !llvm.loop !610

860:                                              ; preds = %834
  %861 = mul <8 x i32> %855, %854
  %862 = mul <8 x i32> %856, %861
  %863 = mul <8 x i32> %857, %862
  %864 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %863)
  %865 = icmp eq i64 %828, %832
  br i1 %865, label %878, label %866

866:                                              ; preds = %819, %860
  %867 = phi i64 [ %822, %819 ], [ %833, %860 ]
  %868 = phi i32 [ 1, %819 ], [ %864, %860 ]
  br label %869

869:                                              ; preds = %866, %869
  %870 = phi i64 [ %875, %869 ], [ %867, %866 ]
  %871 = phi i32 [ %874, %869 ], [ %868, %866 ]
  %872 = getelementptr inbounds i32, ptr %11, i64 %870
  %873 = load i32, ptr %872, align 4, !tbaa !6
  %874 = mul nsw i32 %873, %871
  %875 = add nsw i64 %870, -1
  %876 = trunc i64 %870 to i32
  %877 = icmp sgt i32 %876, 0
  br i1 %877, label %869, label %878, !llvm.loop !611

878:                                              ; preds = %869, %860
  %879 = phi i32 [ %864, %860 ], [ %874, %869 ]
  %880 = and i64 %829, 4294967295
  %881 = getelementptr inbounds i32, ptr %6, i64 %880
  %882 = load i32, ptr %881, align 4, !tbaa !6
  %883 = mul nsw i32 %882, %879
  %884 = add nsw i32 %883, %823
  %885 = icmp sgt i64 %821, 2
  %886 = add nsw i64 %822, -1
  %887 = add i32 %820, 1
  br i1 %885, label %819, label %888, !llvm.loop !612

888:                                              ; preds = %878, %816
  %889 = phi i32 [ %818, %816 ], [ %884, %878 ]
  %890 = icmp slt i32 %889, %5
  br i1 %890, label %893, label %891

891:                                              ; preds = %888
  %892 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1018, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5554

893:                                              ; preds = %888
  %894 = sext i32 %889 to i64
  %895 = getelementptr inbounds i32, ptr %646, i64 %894
  %896 = load i32, ptr %895, align 4, !tbaa !6
  %897 = load i32, ptr %648, align 4, !tbaa !6
  %898 = icmp slt i32 %897, %896
  br i1 %898, label %899, label %900

899:                                              ; preds = %893
  store i32 %896, ptr %648, align 4, !tbaa !6
  br label %900

900:                                              ; preds = %893, %899
  %901 = add nuw nsw i32 %817, 1
  br i1 %664, label %902, label %952

902:                                              ; preds = %900
  %903 = load i32, ptr %4, align 4, !tbaa !6
  %904 = load i32, ptr %12, align 4, !tbaa !6
  %905 = add nsw i32 %904, -1
  %906 = icmp slt i32 %903, %905
  br i1 %906, label %929, label %907

907:                                              ; preds = %902
  %908 = icmp eq i32 %903, %905
  br i1 %908, label %909, label %945

909:                                              ; preds = %907
  store i32 0, ptr %4, align 4, !tbaa !6
  %910 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %910, ptr %6, align 4, !tbaa !6
  br i1 %669, label %952, label %911

911:                                              ; preds = %909, %939
  %912 = phi i64 [ %943, %939 ], [ 1, %909 ]
  %913 = getelementptr inbounds i32, ptr %4, i64 %912
  %914 = load i32, ptr %913, align 4, !tbaa !6
  %915 = getelementptr inbounds i32, ptr %12, i64 %912
  %916 = load i32, ptr %915, align 4, !tbaa !6
  %917 = add nsw i32 %916, -1
  %918 = icmp slt i32 %914, %917
  br i1 %918, label %919, label %937

919:                                              ; preds = %911
  br i1 %906, label %929, label %920

920:                                              ; preds = %919
  %921 = shl i64 %912, 32
  %922 = add i64 %921, -4294967296
  %923 = ashr exact i64 %922, 32
  %924 = getelementptr inbounds i32, ptr %7, i64 %923
  %925 = load i32, ptr %924, align 4, !tbaa !6
  %926 = getelementptr inbounds i32, ptr %6, i64 %912
  %927 = load i32, ptr %926, align 4, !tbaa !6
  %928 = add nsw i32 %927, %925
  store i32 %928, ptr %926, align 4, !tbaa !6
  br label %947

929:                                              ; preds = %902, %919
  %930 = phi i32 [ %914, %919 ], [ %903, %902 ]
  %931 = phi ptr [ %913, %919 ], [ %4, %902 ]
  %932 = phi i64 [ %912, %919 ], [ 0, %902 ]
  %933 = add nsw i32 %930, 1
  store i32 %933, ptr %931, align 4, !tbaa !6
  %934 = getelementptr inbounds i32, ptr %7, i64 %932
  %935 = load i32, ptr %934, align 4, !tbaa !6
  %936 = getelementptr inbounds i32, ptr %6, i64 %932
  br label %947

937:                                              ; preds = %911
  %938 = icmp eq i32 %914, %917
  br i1 %938, label %939, label %945

939:                                              ; preds = %937
  store i32 0, ptr %913, align 4, !tbaa !6
  %940 = getelementptr inbounds i32, ptr %8, i64 %912
  %941 = load i32, ptr %940, align 4, !tbaa !6
  %942 = getelementptr inbounds i32, ptr %6, i64 %912
  store i32 %941, ptr %942, align 4, !tbaa !6
  %943 = add nuw nsw i64 %912, 1
  %944 = icmp eq i64 %943, %667
  br i1 %944, label %952, label %911, !llvm.loop !613

945:                                              ; preds = %907, %937
  %946 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1018, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5554

947:                                              ; preds = %920, %929
  %948 = phi ptr [ %936, %929 ], [ %913, %920 ]
  %949 = phi i32 [ %935, %929 ], [ 1, %920 ]
  %950 = load i32, ptr %948, align 4, !tbaa !6
  %951 = add nsw i32 %950, %949
  store i32 %951, ptr %948, align 4, !tbaa !6
  br label %952

952:                                              ; preds = %939, %947, %909, %900
  %953 = icmp eq i32 %901, %5
  br i1 %953, label %5549, label %816, !llvm.loop !614

954:                                              ; preds = %655
  %955 = getelementptr inbounds i32, ptr %3, i64 %19
  %956 = load i32, ptr %955, align 4, !tbaa !6
  %957 = icmp eq i32 %956, 0
  %958 = icmp sgt i32 %5, 0
  br i1 %957, label %968, label %959

959:                                              ; preds = %954
  br i1 %958, label %960, label %5549

960:                                              ; preds = %959
  %961 = icmp sgt i32 %13, 1
  %962 = icmp sgt i32 %13, 0
  %963 = add i32 %13, -2
  %964 = zext i32 %963 to i64
  %965 = zext i32 %13 to i64
  %966 = add nuw i32 %5, 1
  %967 = icmp eq i32 %13, 1
  br label %1110

968:                                              ; preds = %954
  br i1 %958, label %969, label %5549

969:                                              ; preds = %968
  %970 = icmp sgt i32 %13, 1
  %971 = icmp sgt i32 %13, 0
  %972 = add i32 %13, -2
  %973 = zext i32 %972 to i64
  %974 = zext i32 %13 to i64
  %975 = add nuw i32 %5, 1
  %976 = icmp eq i32 %13, 1
  br label %977

977:                                              ; preds = %969, %1108
  %978 = phi i32 [ 0, %969 ], [ %1060, %1108 ]
  %979 = phi double [ 0.000000e+00, %969 ], [ %1059, %1108 ]
  %980 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %970, label %981, label %1050

981:                                              ; preds = %977, %1040
  %982 = phi i32 [ %1049, %1040 ], [ 0, %977 ]
  %983 = phi i64 [ %991, %1040 ], [ %974, %977 ]
  %984 = phi i64 [ %1048, %1040 ], [ %973, %977 ]
  %985 = phi i32 [ %1046, %1040 ], [ %980, %977 ]
  %986 = sub i32 %972, %982
  %987 = tail call i32 @llvm.smin.i32(i32 %986, i32 0)
  %988 = sub i32 %986, %987
  %989 = zext i32 %988 to i64
  %990 = add nuw nsw i64 %989, 1
  %991 = add nsw i64 %983, -1
  %992 = icmp ult i32 %988, 31
  br i1 %992, label %1028, label %993

993:                                              ; preds = %981
  %994 = and i64 %990, 8589934560
  %995 = sub i64 %984, %994
  br label %996

996:                                              ; preds = %996, %993
  %997 = phi i64 [ 0, %993 ], [ %1020, %996 ]
  %998 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %993 ], [ %1016, %996 ]
  %999 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %993 ], [ %1017, %996 ]
  %1000 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %993 ], [ %1018, %996 ]
  %1001 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %993 ], [ %1019, %996 ]
  %1002 = sub i64 %984, %997
  %1003 = getelementptr inbounds i32, ptr %9, i64 %1002
  %1004 = getelementptr inbounds i32, ptr %1003, i64 -7
  %1005 = load <8 x i32>, ptr %1004, align 4, !tbaa !6
  %1006 = shufflevector <8 x i32> %1005, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1007 = getelementptr inbounds i32, ptr %1003, i64 -15
  %1008 = load <8 x i32>, ptr %1007, align 4, !tbaa !6
  %1009 = shufflevector <8 x i32> %1008, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1010 = getelementptr inbounds i32, ptr %1003, i64 -23
  %1011 = load <8 x i32>, ptr %1010, align 4, !tbaa !6
  %1012 = shufflevector <8 x i32> %1011, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1013 = getelementptr inbounds i32, ptr %1003, i64 -31
  %1014 = load <8 x i32>, ptr %1013, align 4, !tbaa !6
  %1015 = shufflevector <8 x i32> %1014, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1016 = mul <8 x i32> %1006, %998
  %1017 = mul <8 x i32> %1009, %999
  %1018 = mul <8 x i32> %1012, %1000
  %1019 = mul <8 x i32> %1015, %1001
  %1020 = add nuw i64 %997, 32
  %1021 = icmp eq i64 %1020, %994
  br i1 %1021, label %1022, label %996, !llvm.loop !615

1022:                                             ; preds = %996
  %1023 = mul <8 x i32> %1017, %1016
  %1024 = mul <8 x i32> %1018, %1023
  %1025 = mul <8 x i32> %1019, %1024
  %1026 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1025)
  %1027 = icmp eq i64 %990, %994
  br i1 %1027, label %1040, label %1028

1028:                                             ; preds = %981, %1022
  %1029 = phi i64 [ %984, %981 ], [ %995, %1022 ]
  %1030 = phi i32 [ 1, %981 ], [ %1026, %1022 ]
  br label %1031

1031:                                             ; preds = %1028, %1031
  %1032 = phi i64 [ %1037, %1031 ], [ %1029, %1028 ]
  %1033 = phi i32 [ %1036, %1031 ], [ %1030, %1028 ]
  %1034 = getelementptr inbounds i32, ptr %9, i64 %1032
  %1035 = load i32, ptr %1034, align 4, !tbaa !6
  %1036 = mul nsw i32 %1035, %1033
  %1037 = add nsw i64 %1032, -1
  %1038 = trunc i64 %1032 to i32
  %1039 = icmp sgt i32 %1038, 0
  br i1 %1039, label %1031, label %1040, !llvm.loop !616

1040:                                             ; preds = %1031, %1022
  %1041 = phi i32 [ %1026, %1022 ], [ %1036, %1031 ]
  %1042 = and i64 %991, 4294967295
  %1043 = getelementptr inbounds i32, ptr %6, i64 %1042
  %1044 = load i32, ptr %1043, align 4, !tbaa !6
  %1045 = mul nsw i32 %1044, %1041
  %1046 = add nsw i32 %1045, %985
  %1047 = icmp sgt i64 %983, 2
  %1048 = add nsw i64 %984, -1
  %1049 = add i32 %982, 1
  br i1 %1047, label %981, label %1050, !llvm.loop !617

1050:                                             ; preds = %1040, %977
  %1051 = phi i32 [ %980, %977 ], [ %1046, %1040 ]
  %1052 = sext i32 %1051 to i64
  %1053 = getelementptr inbounds i32, ptr %646, i64 %1052
  %1054 = load i32, ptr %1053, align 4, !tbaa !6
  %1055 = load i32, ptr %648, align 4, !tbaa !6
  %1056 = icmp slt i32 %1055, %1054
  br i1 %1056, label %1057, label %1058

1057:                                             ; preds = %1050
  store i32 %1054, ptr %648, align 4, !tbaa !6
  br label %1058

1058:                                             ; preds = %1057, %1050
  %1059 = fadd fast double %979, 1.000000e+00
  %1060 = add nuw nsw i32 %978, 1
  br i1 %971, label %1061, label %1108

1061:                                             ; preds = %1058
  %1062 = load i32, ptr %4, align 4, !tbaa !6
  %1063 = load i32, ptr %12, align 4, !tbaa !6
  %1064 = add nsw i32 %1063, -1
  %1065 = icmp slt i32 %1062, %1064
  br i1 %1065, label %1085, label %1066

1066:                                             ; preds = %1061
  %1067 = icmp eq i32 %1062, %1064
  br i1 %1067, label %1068, label %1101

1068:                                             ; preds = %1066
  store i32 0, ptr %4, align 4, !tbaa !6
  %1069 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1069, ptr %6, align 4, !tbaa !6
  br i1 %976, label %1108, label %1070

1070:                                             ; preds = %1068, %1095
  %1071 = phi i64 [ %1099, %1095 ], [ 1, %1068 ]
  %1072 = getelementptr inbounds i32, ptr %4, i64 %1071
  %1073 = load i32, ptr %1072, align 4, !tbaa !6
  %1074 = getelementptr inbounds i32, ptr %12, i64 %1071
  %1075 = load i32, ptr %1074, align 4, !tbaa !6
  %1076 = add nsw i32 %1075, -1
  %1077 = icmp slt i32 %1073, %1076
  br i1 %1077, label %1078, label %1093

1078:                                             ; preds = %1070
  br i1 %1065, label %1085, label %1079

1079:                                             ; preds = %1078
  %1080 = getelementptr inbounds i32, ptr %7, i64 %1071
  %1081 = load i32, ptr %1080, align 4, !tbaa !6
  %1082 = getelementptr inbounds i32, ptr %6, i64 %1071
  %1083 = load i32, ptr %1082, align 4, !tbaa !6
  %1084 = add nsw i32 %1083, %1081
  store i32 %1084, ptr %1082, align 4, !tbaa !6
  br label %1103

1085:                                             ; preds = %1061, %1078
  %1086 = phi i32 [ %1073, %1078 ], [ %1062, %1061 ]
  %1087 = phi ptr [ %1072, %1078 ], [ %4, %1061 ]
  %1088 = phi i64 [ %1071, %1078 ], [ 0, %1061 ]
  %1089 = add nsw i32 %1086, 1
  store i32 %1089, ptr %1087, align 4, !tbaa !6
  %1090 = getelementptr inbounds i32, ptr %7, i64 %1088
  %1091 = load i32, ptr %1090, align 4, !tbaa !6
  %1092 = getelementptr inbounds i32, ptr %6, i64 %1088
  br label %1103

1093:                                             ; preds = %1070
  %1094 = icmp eq i32 %1073, %1076
  br i1 %1094, label %1095, label %1101

1095:                                             ; preds = %1093
  store i32 0, ptr %1072, align 4, !tbaa !6
  %1096 = getelementptr inbounds i32, ptr %8, i64 %1071
  %1097 = load i32, ptr %1096, align 4, !tbaa !6
  %1098 = getelementptr inbounds i32, ptr %6, i64 %1071
  store i32 %1097, ptr %1098, align 4, !tbaa !6
  %1099 = add nuw nsw i64 %1071, 1
  %1100 = icmp eq i64 %1099, %974
  br i1 %1100, label %1108, label %1070, !llvm.loop !618

1101:                                             ; preds = %1066, %1093
  %1102 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1018, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5554

1103:                                             ; preds = %1079, %1085
  %1104 = phi ptr [ %1092, %1085 ], [ %1072, %1079 ]
  %1105 = phi i32 [ %1091, %1085 ], [ 1, %1079 ]
  %1106 = load i32, ptr %1104, align 4, !tbaa !6
  %1107 = add nsw i32 %1106, %1105
  store i32 %1107, ptr %1104, align 4, !tbaa !6
  br label %1108

1108:                                             ; preds = %1095, %1103, %1068, %1058
  %1109 = icmp eq i32 %1060, %5
  br i1 %1109, label %5549, label %977, !llvm.loop !619

1110:                                             ; preds = %960, %1246
  %1111 = phi i32 [ 0, %960 ], [ %1195, %1246 ]
  %1112 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %961, label %1113, label %1182

1113:                                             ; preds = %1110, %1172
  %1114 = phi i32 [ %1181, %1172 ], [ 0, %1110 ]
  %1115 = phi i64 [ %1123, %1172 ], [ %965, %1110 ]
  %1116 = phi i64 [ %1180, %1172 ], [ %964, %1110 ]
  %1117 = phi i32 [ %1178, %1172 ], [ %1112, %1110 ]
  %1118 = sub i32 %963, %1114
  %1119 = tail call i32 @llvm.smin.i32(i32 %1118, i32 0)
  %1120 = sub i32 %1118, %1119
  %1121 = zext i32 %1120 to i64
  %1122 = add nuw nsw i64 %1121, 1
  %1123 = add nsw i64 %1115, -1
  %1124 = icmp ult i32 %1120, 31
  br i1 %1124, label %1160, label %1125

1125:                                             ; preds = %1113
  %1126 = and i64 %1122, 8589934560
  %1127 = sub i64 %1116, %1126
  br label %1128

1128:                                             ; preds = %1128, %1125
  %1129 = phi i64 [ 0, %1125 ], [ %1152, %1128 ]
  %1130 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1125 ], [ %1148, %1128 ]
  %1131 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1125 ], [ %1149, %1128 ]
  %1132 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1125 ], [ %1150, %1128 ]
  %1133 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1125 ], [ %1151, %1128 ]
  %1134 = sub i64 %1116, %1129
  %1135 = getelementptr inbounds i32, ptr %11, i64 %1134
  %1136 = getelementptr inbounds i32, ptr %1135, i64 -7
  %1137 = load <8 x i32>, ptr %1136, align 4, !tbaa !6
  %1138 = shufflevector <8 x i32> %1137, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1139 = getelementptr inbounds i32, ptr %1135, i64 -15
  %1140 = load <8 x i32>, ptr %1139, align 4, !tbaa !6
  %1141 = shufflevector <8 x i32> %1140, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1142 = getelementptr inbounds i32, ptr %1135, i64 -23
  %1143 = load <8 x i32>, ptr %1142, align 4, !tbaa !6
  %1144 = shufflevector <8 x i32> %1143, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1145 = getelementptr inbounds i32, ptr %1135, i64 -31
  %1146 = load <8 x i32>, ptr %1145, align 4, !tbaa !6
  %1147 = shufflevector <8 x i32> %1146, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1148 = mul <8 x i32> %1138, %1130
  %1149 = mul <8 x i32> %1141, %1131
  %1150 = mul <8 x i32> %1144, %1132
  %1151 = mul <8 x i32> %1147, %1133
  %1152 = add nuw i64 %1129, 32
  %1153 = icmp eq i64 %1152, %1126
  br i1 %1153, label %1154, label %1128, !llvm.loop !620

1154:                                             ; preds = %1128
  %1155 = mul <8 x i32> %1149, %1148
  %1156 = mul <8 x i32> %1150, %1155
  %1157 = mul <8 x i32> %1151, %1156
  %1158 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1157)
  %1159 = icmp eq i64 %1122, %1126
  br i1 %1159, label %1172, label %1160

1160:                                             ; preds = %1113, %1154
  %1161 = phi i64 [ %1116, %1113 ], [ %1127, %1154 ]
  %1162 = phi i32 [ 1, %1113 ], [ %1158, %1154 ]
  br label %1163

1163:                                             ; preds = %1160, %1163
  %1164 = phi i64 [ %1169, %1163 ], [ %1161, %1160 ]
  %1165 = phi i32 [ %1168, %1163 ], [ %1162, %1160 ]
  %1166 = getelementptr inbounds i32, ptr %11, i64 %1164
  %1167 = load i32, ptr %1166, align 4, !tbaa !6
  %1168 = mul nsw i32 %1167, %1165
  %1169 = add nsw i64 %1164, -1
  %1170 = trunc i64 %1164 to i32
  %1171 = icmp sgt i32 %1170, 0
  br i1 %1171, label %1163, label %1172, !llvm.loop !621

1172:                                             ; preds = %1163, %1154
  %1173 = phi i32 [ %1158, %1154 ], [ %1168, %1163 ]
  %1174 = and i64 %1123, 4294967295
  %1175 = getelementptr inbounds i32, ptr %6, i64 %1174
  %1176 = load i32, ptr %1175, align 4, !tbaa !6
  %1177 = mul nsw i32 %1176, %1173
  %1178 = add nsw i32 %1177, %1117
  %1179 = icmp sgt i64 %1115, 2
  %1180 = add nsw i64 %1116, -1
  %1181 = add i32 %1114, 1
  br i1 %1179, label %1113, label %1182, !llvm.loop !622

1182:                                             ; preds = %1172, %1110
  %1183 = phi i32 [ %1112, %1110 ], [ %1178, %1172 ]
  %1184 = icmp slt i32 %1183, %5
  br i1 %1184, label %1187, label %1185

1185:                                             ; preds = %1182
  %1186 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1018, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5554

1187:                                             ; preds = %1182
  %1188 = sext i32 %1183 to i64
  %1189 = getelementptr inbounds i32, ptr %646, i64 %1188
  %1190 = load i32, ptr %1189, align 4, !tbaa !6
  %1191 = load i32, ptr %648, align 4, !tbaa !6
  %1192 = icmp slt i32 %1191, %1190
  br i1 %1192, label %1193, label %1194

1193:                                             ; preds = %1187
  store i32 %1190, ptr %648, align 4, !tbaa !6
  br label %1194

1194:                                             ; preds = %1193, %1187
  %1195 = add nuw nsw i32 %1111, 1
  br i1 %962, label %1196, label %1246

1196:                                             ; preds = %1194
  %1197 = load i32, ptr %4, align 4, !tbaa !6
  %1198 = load i32, ptr %12, align 4, !tbaa !6
  %1199 = add nsw i32 %1198, -1
  %1200 = icmp slt i32 %1197, %1199
  br i1 %1200, label %1223, label %1201

1201:                                             ; preds = %1196
  %1202 = icmp eq i32 %1197, %1199
  br i1 %1202, label %1203, label %1239

1203:                                             ; preds = %1201
  store i32 0, ptr %4, align 4, !tbaa !6
  %1204 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1204, ptr %6, align 4, !tbaa !6
  br i1 %967, label %1246, label %1205

1205:                                             ; preds = %1203, %1233
  %1206 = phi i64 [ %1237, %1233 ], [ 1, %1203 ]
  %1207 = getelementptr inbounds i32, ptr %4, i64 %1206
  %1208 = load i32, ptr %1207, align 4, !tbaa !6
  %1209 = getelementptr inbounds i32, ptr %12, i64 %1206
  %1210 = load i32, ptr %1209, align 4, !tbaa !6
  %1211 = add nsw i32 %1210, -1
  %1212 = icmp slt i32 %1208, %1211
  br i1 %1212, label %1213, label %1231

1213:                                             ; preds = %1205
  br i1 %1200, label %1223, label %1214

1214:                                             ; preds = %1213
  %1215 = shl i64 %1206, 32
  %1216 = add i64 %1215, -4294967296
  %1217 = ashr exact i64 %1216, 32
  %1218 = getelementptr inbounds i32, ptr %7, i64 %1217
  %1219 = load i32, ptr %1218, align 4, !tbaa !6
  %1220 = getelementptr inbounds i32, ptr %6, i64 %1206
  %1221 = load i32, ptr %1220, align 4, !tbaa !6
  %1222 = add nsw i32 %1221, %1219
  store i32 %1222, ptr %1220, align 4, !tbaa !6
  br label %1241

1223:                                             ; preds = %1196, %1213
  %1224 = phi i32 [ %1208, %1213 ], [ %1197, %1196 ]
  %1225 = phi ptr [ %1207, %1213 ], [ %4, %1196 ]
  %1226 = phi i64 [ %1206, %1213 ], [ 0, %1196 ]
  %1227 = add nsw i32 %1224, 1
  store i32 %1227, ptr %1225, align 4, !tbaa !6
  %1228 = getelementptr inbounds i32, ptr %7, i64 %1226
  %1229 = load i32, ptr %1228, align 4, !tbaa !6
  %1230 = getelementptr inbounds i32, ptr %6, i64 %1226
  br label %1241

1231:                                             ; preds = %1205
  %1232 = icmp eq i32 %1208, %1211
  br i1 %1232, label %1233, label %1239

1233:                                             ; preds = %1231
  store i32 0, ptr %1207, align 4, !tbaa !6
  %1234 = getelementptr inbounds i32, ptr %8, i64 %1206
  %1235 = load i32, ptr %1234, align 4, !tbaa !6
  %1236 = getelementptr inbounds i32, ptr %6, i64 %1206
  store i32 %1235, ptr %1236, align 4, !tbaa !6
  %1237 = add nuw nsw i64 %1206, 1
  %1238 = icmp eq i64 %1237, %965
  br i1 %1238, label %1246, label %1205, !llvm.loop !623

1239:                                             ; preds = %1201, %1231
  %1240 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1018, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5554

1241:                                             ; preds = %1214, %1223
  %1242 = phi ptr [ %1230, %1223 ], [ %1207, %1214 ]
  %1243 = phi i32 [ %1229, %1223 ], [ 1, %1214 ]
  %1244 = load i32, ptr %1242, align 4, !tbaa !6
  %1245 = add nsw i32 %1244, %1243
  store i32 %1245, ptr %1242, align 4, !tbaa !6
  br label %1246

1246:                                             ; preds = %1233, %1241, %1203, %1194
  %1247 = icmp eq i32 %1195, %5
  br i1 %1247, label %5549, label %1110, !llvm.loop !624

1248:                                             ; preds = %655
  %1249 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1018, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5549

1250:                                             ; preds = %18
  %1251 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1252 = load ptr, ptr %1251, align 8, !tbaa !10
  %1253 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1254 = load ptr, ptr %1253, align 8, !tbaa !10
  %1255 = load i32, ptr %1252, align 4, !tbaa !6
  %1256 = trunc i32 %1255 to i8
  store i8 %1256, ptr %1254, align 1, !tbaa !12
  %1257 = icmp eq i32 %13, 0
  br i1 %1257, label %1258, label %1265

1258:                                             ; preds = %1250
  %1259 = load i32, ptr %1252, align 4, !tbaa !6
  %1260 = shl i32 %1255, 24
  %1261 = shl i32 %1259, 24
  %1262 = icmp slt i32 %1260, %1261
  br i1 %1262, label %1263, label %5549

1263:                                             ; preds = %1258
  %1264 = trunc i32 %1259 to i8
  store i8 %1264, ptr %1254, align 1, !tbaa !12
  br label %5549

1265:                                             ; preds = %1250
  switch i32 %1, label %1874 [
    i32 1, label %1266
    i32 0, label %1572
  ]

1266:                                             ; preds = %1265
  %1267 = getelementptr inbounds i32, ptr %3, i64 %19
  %1268 = load i32, ptr %1267, align 4, !tbaa !6
  %1269 = icmp eq i32 %1268, 0
  %1270 = icmp sgt i32 %5, 0
  br i1 %1269, label %1280, label %1271

1271:                                             ; preds = %1266
  br i1 %1270, label %1272, label %5549

1272:                                             ; preds = %1271
  %1273 = icmp sgt i32 %13, 1
  %1274 = icmp sgt i32 %13, 0
  %1275 = add i32 %13, -2
  %1276 = zext i32 %1275 to i64
  %1277 = zext i32 %13 to i64
  %1278 = add nuw i32 %5, 1
  %1279 = icmp eq i32 %13, 1
  br label %1430

1280:                                             ; preds = %1266
  br i1 %1270, label %1281, label %5549

1281:                                             ; preds = %1280
  %1282 = icmp sgt i32 %13, 1
  %1283 = icmp sgt i32 %13, 0
  %1284 = add i32 %13, -2
  %1285 = zext i32 %1284 to i64
  %1286 = zext i32 %13 to i64
  %1287 = add nuw i32 %5, 1
  %1288 = icmp eq i32 %13, 1
  br label %1289

1289:                                             ; preds = %1281, %1428
  %1290 = phi i32 [ 0, %1281 ], [ %1380, %1428 ]
  %1291 = phi double [ 0.000000e+00, %1281 ], [ %1379, %1428 ]
  %1292 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1282, label %1293, label %1362

1293:                                             ; preds = %1289, %1352
  %1294 = phi i32 [ %1361, %1352 ], [ 0, %1289 ]
  %1295 = phi i64 [ %1303, %1352 ], [ %1286, %1289 ]
  %1296 = phi i64 [ %1360, %1352 ], [ %1285, %1289 ]
  %1297 = phi i32 [ %1358, %1352 ], [ %1292, %1289 ]
  %1298 = sub i32 %1284, %1294
  %1299 = tail call i32 @llvm.smin.i32(i32 %1298, i32 0)
  %1300 = sub i32 %1298, %1299
  %1301 = zext i32 %1300 to i64
  %1302 = add nuw nsw i64 %1301, 1
  %1303 = add nsw i64 %1295, -1
  %1304 = icmp ult i32 %1300, 31
  br i1 %1304, label %1340, label %1305

1305:                                             ; preds = %1293
  %1306 = and i64 %1302, 8589934560
  %1307 = sub i64 %1296, %1306
  br label %1308

1308:                                             ; preds = %1308, %1305
  %1309 = phi i64 [ 0, %1305 ], [ %1332, %1308 ]
  %1310 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1305 ], [ %1328, %1308 ]
  %1311 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1305 ], [ %1329, %1308 ]
  %1312 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1305 ], [ %1330, %1308 ]
  %1313 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1305 ], [ %1331, %1308 ]
  %1314 = sub i64 %1296, %1309
  %1315 = getelementptr inbounds i32, ptr %9, i64 %1314
  %1316 = getelementptr inbounds i32, ptr %1315, i64 -7
  %1317 = load <8 x i32>, ptr %1316, align 4, !tbaa !6
  %1318 = shufflevector <8 x i32> %1317, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1319 = getelementptr inbounds i32, ptr %1315, i64 -15
  %1320 = load <8 x i32>, ptr %1319, align 4, !tbaa !6
  %1321 = shufflevector <8 x i32> %1320, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1322 = getelementptr inbounds i32, ptr %1315, i64 -23
  %1323 = load <8 x i32>, ptr %1322, align 4, !tbaa !6
  %1324 = shufflevector <8 x i32> %1323, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1325 = getelementptr inbounds i32, ptr %1315, i64 -31
  %1326 = load <8 x i32>, ptr %1325, align 4, !tbaa !6
  %1327 = shufflevector <8 x i32> %1326, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1328 = mul <8 x i32> %1318, %1310
  %1329 = mul <8 x i32> %1321, %1311
  %1330 = mul <8 x i32> %1324, %1312
  %1331 = mul <8 x i32> %1327, %1313
  %1332 = add nuw i64 %1309, 32
  %1333 = icmp eq i64 %1332, %1306
  br i1 %1333, label %1334, label %1308, !llvm.loop !625

1334:                                             ; preds = %1308
  %1335 = mul <8 x i32> %1329, %1328
  %1336 = mul <8 x i32> %1330, %1335
  %1337 = mul <8 x i32> %1331, %1336
  %1338 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1337)
  %1339 = icmp eq i64 %1302, %1306
  br i1 %1339, label %1352, label %1340

1340:                                             ; preds = %1293, %1334
  %1341 = phi i64 [ %1296, %1293 ], [ %1307, %1334 ]
  %1342 = phi i32 [ 1, %1293 ], [ %1338, %1334 ]
  br label %1343

1343:                                             ; preds = %1340, %1343
  %1344 = phi i64 [ %1349, %1343 ], [ %1341, %1340 ]
  %1345 = phi i32 [ %1348, %1343 ], [ %1342, %1340 ]
  %1346 = getelementptr inbounds i32, ptr %9, i64 %1344
  %1347 = load i32, ptr %1346, align 4, !tbaa !6
  %1348 = mul nsw i32 %1347, %1345
  %1349 = add nsw i64 %1344, -1
  %1350 = trunc i64 %1344 to i32
  %1351 = icmp sgt i32 %1350, 0
  br i1 %1351, label %1343, label %1352, !llvm.loop !626

1352:                                             ; preds = %1343, %1334
  %1353 = phi i32 [ %1338, %1334 ], [ %1348, %1343 ]
  %1354 = and i64 %1303, 4294967295
  %1355 = getelementptr inbounds i32, ptr %6, i64 %1354
  %1356 = load i32, ptr %1355, align 4, !tbaa !6
  %1357 = mul nsw i32 %1356, %1353
  %1358 = add nsw i32 %1357, %1297
  %1359 = icmp sgt i64 %1295, 2
  %1360 = add nsw i64 %1296, -1
  %1361 = add i32 %1294, 1
  br i1 %1359, label %1293, label %1362, !llvm.loop !627

1362:                                             ; preds = %1352, %1289
  %1363 = phi i32 [ %1292, %1289 ], [ %1358, %1352 ]
  %1364 = sext i32 %1363 to i64
  %1365 = getelementptr inbounds double, ptr %2, i64 %1364
  %1366 = load double, ptr %1365, align 8, !tbaa !19
  %1367 = getelementptr inbounds i32, ptr %1252, i64 %1364
  %1368 = load i32, ptr %1367, align 4, !tbaa !6
  %1369 = trunc i32 %1368 to i8
  %1370 = fcmp fast ueq double %1366, 0.000000e+00
  br i1 %1370, label %1378, label %1371

1371:                                             ; preds = %1362
  %1372 = load i8, ptr %1254, align 1, !tbaa !12
  %1373 = sext i8 %1372 to i32
  %1374 = shl i32 %1368, 24
  %1375 = ashr exact i32 %1374, 24
  %1376 = icmp sgt i32 %1375, %1373
  br i1 %1376, label %1377, label %1378

1377:                                             ; preds = %1371
  store i8 %1369, ptr %1254, align 1, !tbaa !12
  br label %1378

1378:                                             ; preds = %1371, %1377, %1362
  %1379 = fadd fast double %1366, %1291
  %1380 = add nuw nsw i32 %1290, 1
  br i1 %1283, label %1381, label %1428

1381:                                             ; preds = %1378
  %1382 = load i32, ptr %4, align 4, !tbaa !6
  %1383 = load i32, ptr %12, align 4, !tbaa !6
  %1384 = add nsw i32 %1383, -1
  %1385 = icmp slt i32 %1382, %1384
  br i1 %1385, label %1405, label %1386

1386:                                             ; preds = %1381
  %1387 = icmp eq i32 %1382, %1384
  br i1 %1387, label %1388, label %1421

1388:                                             ; preds = %1386
  store i32 0, ptr %4, align 4, !tbaa !6
  %1389 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1389, ptr %6, align 4, !tbaa !6
  br i1 %1288, label %1428, label %1390

1390:                                             ; preds = %1388, %1415
  %1391 = phi i64 [ %1419, %1415 ], [ 1, %1388 ]
  %1392 = getelementptr inbounds i32, ptr %4, i64 %1391
  %1393 = load i32, ptr %1392, align 4, !tbaa !6
  %1394 = getelementptr inbounds i32, ptr %12, i64 %1391
  %1395 = load i32, ptr %1394, align 4, !tbaa !6
  %1396 = add nsw i32 %1395, -1
  %1397 = icmp slt i32 %1393, %1396
  br i1 %1397, label %1398, label %1413

1398:                                             ; preds = %1390
  br i1 %1385, label %1405, label %1399

1399:                                             ; preds = %1398
  %1400 = getelementptr inbounds i32, ptr %7, i64 %1391
  %1401 = load i32, ptr %1400, align 4, !tbaa !6
  %1402 = getelementptr inbounds i32, ptr %6, i64 %1391
  %1403 = load i32, ptr %1402, align 4, !tbaa !6
  %1404 = add nsw i32 %1403, %1401
  store i32 %1404, ptr %1402, align 4, !tbaa !6
  br label %1423

1405:                                             ; preds = %1381, %1398
  %1406 = phi i32 [ %1393, %1398 ], [ %1382, %1381 ]
  %1407 = phi ptr [ %1392, %1398 ], [ %4, %1381 ]
  %1408 = phi i64 [ %1391, %1398 ], [ 0, %1381 ]
  %1409 = add nsw i32 %1406, 1
  store i32 %1409, ptr %1407, align 4, !tbaa !6
  %1410 = getelementptr inbounds i32, ptr %7, i64 %1408
  %1411 = load i32, ptr %1410, align 4, !tbaa !6
  %1412 = getelementptr inbounds i32, ptr %6, i64 %1408
  br label %1423

1413:                                             ; preds = %1390
  %1414 = icmp eq i32 %1393, %1396
  br i1 %1414, label %1415, label %1421

1415:                                             ; preds = %1413
  store i32 0, ptr %1392, align 4, !tbaa !6
  %1416 = getelementptr inbounds i32, ptr %8, i64 %1391
  %1417 = load i32, ptr %1416, align 4, !tbaa !6
  %1418 = getelementptr inbounds i32, ptr %6, i64 %1391
  store i32 %1417, ptr %1418, align 4, !tbaa !6
  %1419 = add nuw nsw i64 %1391, 1
  %1420 = icmp eq i64 %1419, %1286
  br i1 %1420, label %1428, label %1390, !llvm.loop !628

1421:                                             ; preds = %1386, %1413
  %1422 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1022, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5554

1423:                                             ; preds = %1399, %1405
  %1424 = phi ptr [ %1412, %1405 ], [ %1392, %1399 ]
  %1425 = phi i32 [ %1411, %1405 ], [ 1, %1399 ]
  %1426 = load i32, ptr %1424, align 4, !tbaa !6
  %1427 = add nsw i32 %1426, %1425
  store i32 %1427, ptr %1424, align 4, !tbaa !6
  br label %1428

1428:                                             ; preds = %1415, %1423, %1388, %1378
  %1429 = icmp eq i32 %1380, %5
  br i1 %1429, label %5549, label %1289, !llvm.loop !629

1430:                                             ; preds = %1272, %1570
  %1431 = phi i32 [ 0, %1272 ], [ %1519, %1570 ]
  %1432 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1273, label %1433, label %1502

1433:                                             ; preds = %1430, %1492
  %1434 = phi i32 [ %1501, %1492 ], [ 0, %1430 ]
  %1435 = phi i64 [ %1443, %1492 ], [ %1277, %1430 ]
  %1436 = phi i64 [ %1500, %1492 ], [ %1276, %1430 ]
  %1437 = phi i32 [ %1498, %1492 ], [ %1432, %1430 ]
  %1438 = sub i32 %1275, %1434
  %1439 = tail call i32 @llvm.smin.i32(i32 %1438, i32 0)
  %1440 = sub i32 %1438, %1439
  %1441 = zext i32 %1440 to i64
  %1442 = add nuw nsw i64 %1441, 1
  %1443 = add nsw i64 %1435, -1
  %1444 = icmp ult i32 %1440, 31
  br i1 %1444, label %1480, label %1445

1445:                                             ; preds = %1433
  %1446 = and i64 %1442, 8589934560
  %1447 = sub i64 %1436, %1446
  br label %1448

1448:                                             ; preds = %1448, %1445
  %1449 = phi i64 [ 0, %1445 ], [ %1472, %1448 ]
  %1450 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1445 ], [ %1468, %1448 ]
  %1451 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1445 ], [ %1469, %1448 ]
  %1452 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1445 ], [ %1470, %1448 ]
  %1453 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1445 ], [ %1471, %1448 ]
  %1454 = sub i64 %1436, %1449
  %1455 = getelementptr inbounds i32, ptr %11, i64 %1454
  %1456 = getelementptr inbounds i32, ptr %1455, i64 -7
  %1457 = load <8 x i32>, ptr %1456, align 4, !tbaa !6
  %1458 = shufflevector <8 x i32> %1457, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1459 = getelementptr inbounds i32, ptr %1455, i64 -15
  %1460 = load <8 x i32>, ptr %1459, align 4, !tbaa !6
  %1461 = shufflevector <8 x i32> %1460, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1462 = getelementptr inbounds i32, ptr %1455, i64 -23
  %1463 = load <8 x i32>, ptr %1462, align 4, !tbaa !6
  %1464 = shufflevector <8 x i32> %1463, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1465 = getelementptr inbounds i32, ptr %1455, i64 -31
  %1466 = load <8 x i32>, ptr %1465, align 4, !tbaa !6
  %1467 = shufflevector <8 x i32> %1466, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1468 = mul <8 x i32> %1458, %1450
  %1469 = mul <8 x i32> %1461, %1451
  %1470 = mul <8 x i32> %1464, %1452
  %1471 = mul <8 x i32> %1467, %1453
  %1472 = add nuw i64 %1449, 32
  %1473 = icmp eq i64 %1472, %1446
  br i1 %1473, label %1474, label %1448, !llvm.loop !630

1474:                                             ; preds = %1448
  %1475 = mul <8 x i32> %1469, %1468
  %1476 = mul <8 x i32> %1470, %1475
  %1477 = mul <8 x i32> %1471, %1476
  %1478 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1477)
  %1479 = icmp eq i64 %1442, %1446
  br i1 %1479, label %1492, label %1480

1480:                                             ; preds = %1433, %1474
  %1481 = phi i64 [ %1436, %1433 ], [ %1447, %1474 ]
  %1482 = phi i32 [ 1, %1433 ], [ %1478, %1474 ]
  br label %1483

1483:                                             ; preds = %1480, %1483
  %1484 = phi i64 [ %1489, %1483 ], [ %1481, %1480 ]
  %1485 = phi i32 [ %1488, %1483 ], [ %1482, %1480 ]
  %1486 = getelementptr inbounds i32, ptr %11, i64 %1484
  %1487 = load i32, ptr %1486, align 4, !tbaa !6
  %1488 = mul nsw i32 %1487, %1485
  %1489 = add nsw i64 %1484, -1
  %1490 = trunc i64 %1484 to i32
  %1491 = icmp sgt i32 %1490, 0
  br i1 %1491, label %1483, label %1492, !llvm.loop !631

1492:                                             ; preds = %1483, %1474
  %1493 = phi i32 [ %1478, %1474 ], [ %1488, %1483 ]
  %1494 = and i64 %1443, 4294967295
  %1495 = getelementptr inbounds i32, ptr %6, i64 %1494
  %1496 = load i32, ptr %1495, align 4, !tbaa !6
  %1497 = mul nsw i32 %1496, %1493
  %1498 = add nsw i32 %1497, %1437
  %1499 = icmp sgt i64 %1435, 2
  %1500 = add nsw i64 %1436, -1
  %1501 = add i32 %1434, 1
  br i1 %1499, label %1433, label %1502, !llvm.loop !632

1502:                                             ; preds = %1492, %1430
  %1503 = phi i32 [ %1432, %1430 ], [ %1498, %1492 ]
  %1504 = icmp slt i32 %1503, %5
  br i1 %1504, label %1507, label %1505

1505:                                             ; preds = %1502
  %1506 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1022, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5554

1507:                                             ; preds = %1502
  %1508 = sext i32 %1503 to i64
  %1509 = getelementptr inbounds i32, ptr %1252, i64 %1508
  %1510 = load i32, ptr %1509, align 4, !tbaa !6
  %1511 = load i8, ptr %1254, align 1, !tbaa !12
  %1512 = sext i8 %1511 to i32
  %1513 = shl i32 %1510, 24
  %1514 = ashr exact i32 %1513, 24
  %1515 = icmp sgt i32 %1514, %1512
  br i1 %1515, label %1516, label %1518

1516:                                             ; preds = %1507
  %1517 = trunc i32 %1510 to i8
  store i8 %1517, ptr %1254, align 1, !tbaa !12
  br label %1518

1518:                                             ; preds = %1507, %1516
  %1519 = add nuw nsw i32 %1431, 1
  br i1 %1274, label %1520, label %1570

1520:                                             ; preds = %1518
  %1521 = load i32, ptr %4, align 4, !tbaa !6
  %1522 = load i32, ptr %12, align 4, !tbaa !6
  %1523 = add nsw i32 %1522, -1
  %1524 = icmp slt i32 %1521, %1523
  br i1 %1524, label %1547, label %1525

1525:                                             ; preds = %1520
  %1526 = icmp eq i32 %1521, %1523
  br i1 %1526, label %1527, label %1563

1527:                                             ; preds = %1525
  store i32 0, ptr %4, align 4, !tbaa !6
  %1528 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1528, ptr %6, align 4, !tbaa !6
  br i1 %1279, label %1570, label %1529

1529:                                             ; preds = %1527, %1557
  %1530 = phi i64 [ %1561, %1557 ], [ 1, %1527 ]
  %1531 = getelementptr inbounds i32, ptr %4, i64 %1530
  %1532 = load i32, ptr %1531, align 4, !tbaa !6
  %1533 = getelementptr inbounds i32, ptr %12, i64 %1530
  %1534 = load i32, ptr %1533, align 4, !tbaa !6
  %1535 = add nsw i32 %1534, -1
  %1536 = icmp slt i32 %1532, %1535
  br i1 %1536, label %1537, label %1555

1537:                                             ; preds = %1529
  br i1 %1524, label %1547, label %1538

1538:                                             ; preds = %1537
  %1539 = shl i64 %1530, 32
  %1540 = add i64 %1539, -4294967296
  %1541 = ashr exact i64 %1540, 32
  %1542 = getelementptr inbounds i32, ptr %7, i64 %1541
  %1543 = load i32, ptr %1542, align 4, !tbaa !6
  %1544 = getelementptr inbounds i32, ptr %6, i64 %1530
  %1545 = load i32, ptr %1544, align 4, !tbaa !6
  %1546 = add nsw i32 %1545, %1543
  store i32 %1546, ptr %1544, align 4, !tbaa !6
  br label %1565

1547:                                             ; preds = %1520, %1537
  %1548 = phi i32 [ %1532, %1537 ], [ %1521, %1520 ]
  %1549 = phi ptr [ %1531, %1537 ], [ %4, %1520 ]
  %1550 = phi i64 [ %1530, %1537 ], [ 0, %1520 ]
  %1551 = add nsw i32 %1548, 1
  store i32 %1551, ptr %1549, align 4, !tbaa !6
  %1552 = getelementptr inbounds i32, ptr %7, i64 %1550
  %1553 = load i32, ptr %1552, align 4, !tbaa !6
  %1554 = getelementptr inbounds i32, ptr %6, i64 %1550
  br label %1565

1555:                                             ; preds = %1529
  %1556 = icmp eq i32 %1532, %1535
  br i1 %1556, label %1557, label %1563

1557:                                             ; preds = %1555
  store i32 0, ptr %1531, align 4, !tbaa !6
  %1558 = getelementptr inbounds i32, ptr %8, i64 %1530
  %1559 = load i32, ptr %1558, align 4, !tbaa !6
  %1560 = getelementptr inbounds i32, ptr %6, i64 %1530
  store i32 %1559, ptr %1560, align 4, !tbaa !6
  %1561 = add nuw nsw i64 %1530, 1
  %1562 = icmp eq i64 %1561, %1277
  br i1 %1562, label %1570, label %1529, !llvm.loop !633

1563:                                             ; preds = %1525, %1555
  %1564 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1022, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5554

1565:                                             ; preds = %1538, %1547
  %1566 = phi ptr [ %1554, %1547 ], [ %1531, %1538 ]
  %1567 = phi i32 [ %1553, %1547 ], [ 1, %1538 ]
  %1568 = load i32, ptr %1566, align 4, !tbaa !6
  %1569 = add nsw i32 %1568, %1567
  store i32 %1569, ptr %1566, align 4, !tbaa !6
  br label %1570

1570:                                             ; preds = %1557, %1565, %1527, %1518
  %1571 = icmp eq i32 %1519, %5
  br i1 %1571, label %5549, label %1430, !llvm.loop !634

1572:                                             ; preds = %1265
  %1573 = getelementptr inbounds i32, ptr %3, i64 %19
  %1574 = load i32, ptr %1573, align 4, !tbaa !6
  %1575 = icmp eq i32 %1574, 0
  %1576 = icmp sgt i32 %5, 0
  br i1 %1575, label %1586, label %1577

1577:                                             ; preds = %1572
  br i1 %1576, label %1578, label %5549

1578:                                             ; preds = %1577
  %1579 = icmp sgt i32 %13, 1
  %1580 = icmp sgt i32 %13, 0
  %1581 = add i32 %13, -2
  %1582 = zext i32 %1581 to i64
  %1583 = zext i32 %13 to i64
  %1584 = add nuw i32 %5, 1
  %1585 = icmp eq i32 %13, 1
  br label %1732

1586:                                             ; preds = %1572
  br i1 %1576, label %1587, label %5549

1587:                                             ; preds = %1586
  %1588 = icmp sgt i32 %13, 1
  %1589 = icmp sgt i32 %13, 0
  %1590 = add i32 %13, -2
  %1591 = zext i32 %1590 to i64
  %1592 = zext i32 %13 to i64
  %1593 = add nuw i32 %5, 1
  %1594 = icmp eq i32 %13, 1
  br label %1595

1595:                                             ; preds = %1587, %1730
  %1596 = phi i32 [ 0, %1587 ], [ %1682, %1730 ]
  %1597 = phi double [ 0.000000e+00, %1587 ], [ %1681, %1730 ]
  %1598 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1588, label %1599, label %1668

1599:                                             ; preds = %1595, %1658
  %1600 = phi i32 [ %1667, %1658 ], [ 0, %1595 ]
  %1601 = phi i64 [ %1609, %1658 ], [ %1592, %1595 ]
  %1602 = phi i64 [ %1666, %1658 ], [ %1591, %1595 ]
  %1603 = phi i32 [ %1664, %1658 ], [ %1598, %1595 ]
  %1604 = sub i32 %1590, %1600
  %1605 = tail call i32 @llvm.smin.i32(i32 %1604, i32 0)
  %1606 = sub i32 %1604, %1605
  %1607 = zext i32 %1606 to i64
  %1608 = add nuw nsw i64 %1607, 1
  %1609 = add nsw i64 %1601, -1
  %1610 = icmp ult i32 %1606, 31
  br i1 %1610, label %1646, label %1611

1611:                                             ; preds = %1599
  %1612 = and i64 %1608, 8589934560
  %1613 = sub i64 %1602, %1612
  br label %1614

1614:                                             ; preds = %1614, %1611
  %1615 = phi i64 [ 0, %1611 ], [ %1638, %1614 ]
  %1616 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1611 ], [ %1634, %1614 ]
  %1617 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1611 ], [ %1635, %1614 ]
  %1618 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1611 ], [ %1636, %1614 ]
  %1619 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1611 ], [ %1637, %1614 ]
  %1620 = sub i64 %1602, %1615
  %1621 = getelementptr inbounds i32, ptr %9, i64 %1620
  %1622 = getelementptr inbounds i32, ptr %1621, i64 -7
  %1623 = load <8 x i32>, ptr %1622, align 4, !tbaa !6
  %1624 = shufflevector <8 x i32> %1623, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1625 = getelementptr inbounds i32, ptr %1621, i64 -15
  %1626 = load <8 x i32>, ptr %1625, align 4, !tbaa !6
  %1627 = shufflevector <8 x i32> %1626, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1628 = getelementptr inbounds i32, ptr %1621, i64 -23
  %1629 = load <8 x i32>, ptr %1628, align 4, !tbaa !6
  %1630 = shufflevector <8 x i32> %1629, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1631 = getelementptr inbounds i32, ptr %1621, i64 -31
  %1632 = load <8 x i32>, ptr %1631, align 4, !tbaa !6
  %1633 = shufflevector <8 x i32> %1632, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1634 = mul <8 x i32> %1624, %1616
  %1635 = mul <8 x i32> %1627, %1617
  %1636 = mul <8 x i32> %1630, %1618
  %1637 = mul <8 x i32> %1633, %1619
  %1638 = add nuw i64 %1615, 32
  %1639 = icmp eq i64 %1638, %1612
  br i1 %1639, label %1640, label %1614, !llvm.loop !635

1640:                                             ; preds = %1614
  %1641 = mul <8 x i32> %1635, %1634
  %1642 = mul <8 x i32> %1636, %1641
  %1643 = mul <8 x i32> %1637, %1642
  %1644 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1643)
  %1645 = icmp eq i64 %1608, %1612
  br i1 %1645, label %1658, label %1646

1646:                                             ; preds = %1599, %1640
  %1647 = phi i64 [ %1602, %1599 ], [ %1613, %1640 ]
  %1648 = phi i32 [ 1, %1599 ], [ %1644, %1640 ]
  br label %1649

1649:                                             ; preds = %1646, %1649
  %1650 = phi i64 [ %1655, %1649 ], [ %1647, %1646 ]
  %1651 = phi i32 [ %1654, %1649 ], [ %1648, %1646 ]
  %1652 = getelementptr inbounds i32, ptr %9, i64 %1650
  %1653 = load i32, ptr %1652, align 4, !tbaa !6
  %1654 = mul nsw i32 %1653, %1651
  %1655 = add nsw i64 %1650, -1
  %1656 = trunc i64 %1650 to i32
  %1657 = icmp sgt i32 %1656, 0
  br i1 %1657, label %1649, label %1658, !llvm.loop !636

1658:                                             ; preds = %1649, %1640
  %1659 = phi i32 [ %1644, %1640 ], [ %1654, %1649 ]
  %1660 = and i64 %1609, 4294967295
  %1661 = getelementptr inbounds i32, ptr %6, i64 %1660
  %1662 = load i32, ptr %1661, align 4, !tbaa !6
  %1663 = mul nsw i32 %1662, %1659
  %1664 = add nsw i32 %1663, %1603
  %1665 = icmp sgt i64 %1601, 2
  %1666 = add nsw i64 %1602, -1
  %1667 = add i32 %1600, 1
  br i1 %1665, label %1599, label %1668, !llvm.loop !637

1668:                                             ; preds = %1658, %1595
  %1669 = phi i32 [ %1598, %1595 ], [ %1664, %1658 ]
  %1670 = sext i32 %1669 to i64
  %1671 = getelementptr inbounds i32, ptr %1252, i64 %1670
  %1672 = load i32, ptr %1671, align 4, !tbaa !6
  %1673 = load i8, ptr %1254, align 1, !tbaa !12
  %1674 = sext i8 %1673 to i32
  %1675 = shl i32 %1672, 24
  %1676 = ashr exact i32 %1675, 24
  %1677 = icmp sgt i32 %1676, %1674
  br i1 %1677, label %1678, label %1680

1678:                                             ; preds = %1668
  %1679 = trunc i32 %1672 to i8
  store i8 %1679, ptr %1254, align 1, !tbaa !12
  br label %1680

1680:                                             ; preds = %1678, %1668
  %1681 = fadd fast double %1597, 1.000000e+00
  %1682 = add nuw nsw i32 %1596, 1
  br i1 %1589, label %1683, label %1730

1683:                                             ; preds = %1680
  %1684 = load i32, ptr %4, align 4, !tbaa !6
  %1685 = load i32, ptr %12, align 4, !tbaa !6
  %1686 = add nsw i32 %1685, -1
  %1687 = icmp slt i32 %1684, %1686
  br i1 %1687, label %1707, label %1688

1688:                                             ; preds = %1683
  %1689 = icmp eq i32 %1684, %1686
  br i1 %1689, label %1690, label %1723

1690:                                             ; preds = %1688
  store i32 0, ptr %4, align 4, !tbaa !6
  %1691 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1691, ptr %6, align 4, !tbaa !6
  br i1 %1594, label %1730, label %1692

1692:                                             ; preds = %1690, %1717
  %1693 = phi i64 [ %1721, %1717 ], [ 1, %1690 ]
  %1694 = getelementptr inbounds i32, ptr %4, i64 %1693
  %1695 = load i32, ptr %1694, align 4, !tbaa !6
  %1696 = getelementptr inbounds i32, ptr %12, i64 %1693
  %1697 = load i32, ptr %1696, align 4, !tbaa !6
  %1698 = add nsw i32 %1697, -1
  %1699 = icmp slt i32 %1695, %1698
  br i1 %1699, label %1700, label %1715

1700:                                             ; preds = %1692
  br i1 %1687, label %1707, label %1701

1701:                                             ; preds = %1700
  %1702 = getelementptr inbounds i32, ptr %7, i64 %1693
  %1703 = load i32, ptr %1702, align 4, !tbaa !6
  %1704 = getelementptr inbounds i32, ptr %6, i64 %1693
  %1705 = load i32, ptr %1704, align 4, !tbaa !6
  %1706 = add nsw i32 %1705, %1703
  store i32 %1706, ptr %1704, align 4, !tbaa !6
  br label %1725

1707:                                             ; preds = %1683, %1700
  %1708 = phi i32 [ %1695, %1700 ], [ %1684, %1683 ]
  %1709 = phi ptr [ %1694, %1700 ], [ %4, %1683 ]
  %1710 = phi i64 [ %1693, %1700 ], [ 0, %1683 ]
  %1711 = add nsw i32 %1708, 1
  store i32 %1711, ptr %1709, align 4, !tbaa !6
  %1712 = getelementptr inbounds i32, ptr %7, i64 %1710
  %1713 = load i32, ptr %1712, align 4, !tbaa !6
  %1714 = getelementptr inbounds i32, ptr %6, i64 %1710
  br label %1725

1715:                                             ; preds = %1692
  %1716 = icmp eq i32 %1695, %1698
  br i1 %1716, label %1717, label %1723

1717:                                             ; preds = %1715
  store i32 0, ptr %1694, align 4, !tbaa !6
  %1718 = getelementptr inbounds i32, ptr %8, i64 %1693
  %1719 = load i32, ptr %1718, align 4, !tbaa !6
  %1720 = getelementptr inbounds i32, ptr %6, i64 %1693
  store i32 %1719, ptr %1720, align 4, !tbaa !6
  %1721 = add nuw nsw i64 %1693, 1
  %1722 = icmp eq i64 %1721, %1592
  br i1 %1722, label %1730, label %1692, !llvm.loop !638

1723:                                             ; preds = %1688, %1715
  %1724 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1022, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5554

1725:                                             ; preds = %1701, %1707
  %1726 = phi ptr [ %1714, %1707 ], [ %1694, %1701 ]
  %1727 = phi i32 [ %1713, %1707 ], [ 1, %1701 ]
  %1728 = load i32, ptr %1726, align 4, !tbaa !6
  %1729 = add nsw i32 %1728, %1727
  store i32 %1729, ptr %1726, align 4, !tbaa !6
  br label %1730

1730:                                             ; preds = %1717, %1725, %1690, %1680
  %1731 = icmp eq i32 %1682, %5
  br i1 %1731, label %5549, label %1595, !llvm.loop !639

1732:                                             ; preds = %1578, %1872
  %1733 = phi i32 [ 0, %1578 ], [ %1821, %1872 ]
  %1734 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1579, label %1735, label %1804

1735:                                             ; preds = %1732, %1794
  %1736 = phi i32 [ %1803, %1794 ], [ 0, %1732 ]
  %1737 = phi i64 [ %1745, %1794 ], [ %1583, %1732 ]
  %1738 = phi i64 [ %1802, %1794 ], [ %1582, %1732 ]
  %1739 = phi i32 [ %1800, %1794 ], [ %1734, %1732 ]
  %1740 = sub i32 %1581, %1736
  %1741 = tail call i32 @llvm.smin.i32(i32 %1740, i32 0)
  %1742 = sub i32 %1740, %1741
  %1743 = zext i32 %1742 to i64
  %1744 = add nuw nsw i64 %1743, 1
  %1745 = add nsw i64 %1737, -1
  %1746 = icmp ult i32 %1742, 31
  br i1 %1746, label %1782, label %1747

1747:                                             ; preds = %1735
  %1748 = and i64 %1744, 8589934560
  %1749 = sub i64 %1738, %1748
  br label %1750

1750:                                             ; preds = %1750, %1747
  %1751 = phi i64 [ 0, %1747 ], [ %1774, %1750 ]
  %1752 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1747 ], [ %1770, %1750 ]
  %1753 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1747 ], [ %1771, %1750 ]
  %1754 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1747 ], [ %1772, %1750 ]
  %1755 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1747 ], [ %1773, %1750 ]
  %1756 = sub i64 %1738, %1751
  %1757 = getelementptr inbounds i32, ptr %11, i64 %1756
  %1758 = getelementptr inbounds i32, ptr %1757, i64 -7
  %1759 = load <8 x i32>, ptr %1758, align 4, !tbaa !6
  %1760 = shufflevector <8 x i32> %1759, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1761 = getelementptr inbounds i32, ptr %1757, i64 -15
  %1762 = load <8 x i32>, ptr %1761, align 4, !tbaa !6
  %1763 = shufflevector <8 x i32> %1762, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1764 = getelementptr inbounds i32, ptr %1757, i64 -23
  %1765 = load <8 x i32>, ptr %1764, align 4, !tbaa !6
  %1766 = shufflevector <8 x i32> %1765, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1767 = getelementptr inbounds i32, ptr %1757, i64 -31
  %1768 = load <8 x i32>, ptr %1767, align 4, !tbaa !6
  %1769 = shufflevector <8 x i32> %1768, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1770 = mul <8 x i32> %1760, %1752
  %1771 = mul <8 x i32> %1763, %1753
  %1772 = mul <8 x i32> %1766, %1754
  %1773 = mul <8 x i32> %1769, %1755
  %1774 = add nuw i64 %1751, 32
  %1775 = icmp eq i64 %1774, %1748
  br i1 %1775, label %1776, label %1750, !llvm.loop !640

1776:                                             ; preds = %1750
  %1777 = mul <8 x i32> %1771, %1770
  %1778 = mul <8 x i32> %1772, %1777
  %1779 = mul <8 x i32> %1773, %1778
  %1780 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1779)
  %1781 = icmp eq i64 %1744, %1748
  br i1 %1781, label %1794, label %1782

1782:                                             ; preds = %1735, %1776
  %1783 = phi i64 [ %1738, %1735 ], [ %1749, %1776 ]
  %1784 = phi i32 [ 1, %1735 ], [ %1780, %1776 ]
  br label %1785

1785:                                             ; preds = %1782, %1785
  %1786 = phi i64 [ %1791, %1785 ], [ %1783, %1782 ]
  %1787 = phi i32 [ %1790, %1785 ], [ %1784, %1782 ]
  %1788 = getelementptr inbounds i32, ptr %11, i64 %1786
  %1789 = load i32, ptr %1788, align 4, !tbaa !6
  %1790 = mul nsw i32 %1789, %1787
  %1791 = add nsw i64 %1786, -1
  %1792 = trunc i64 %1786 to i32
  %1793 = icmp sgt i32 %1792, 0
  br i1 %1793, label %1785, label %1794, !llvm.loop !641

1794:                                             ; preds = %1785, %1776
  %1795 = phi i32 [ %1780, %1776 ], [ %1790, %1785 ]
  %1796 = and i64 %1745, 4294967295
  %1797 = getelementptr inbounds i32, ptr %6, i64 %1796
  %1798 = load i32, ptr %1797, align 4, !tbaa !6
  %1799 = mul nsw i32 %1798, %1795
  %1800 = add nsw i32 %1799, %1739
  %1801 = icmp sgt i64 %1737, 2
  %1802 = add nsw i64 %1738, -1
  %1803 = add i32 %1736, 1
  br i1 %1801, label %1735, label %1804, !llvm.loop !642

1804:                                             ; preds = %1794, %1732
  %1805 = phi i32 [ %1734, %1732 ], [ %1800, %1794 ]
  %1806 = icmp slt i32 %1805, %5
  br i1 %1806, label %1809, label %1807

1807:                                             ; preds = %1804
  %1808 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1022, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5554

1809:                                             ; preds = %1804
  %1810 = sext i32 %1805 to i64
  %1811 = getelementptr inbounds i32, ptr %1252, i64 %1810
  %1812 = load i32, ptr %1811, align 4, !tbaa !6
  %1813 = load i8, ptr %1254, align 1, !tbaa !12
  %1814 = sext i8 %1813 to i32
  %1815 = shl i32 %1812, 24
  %1816 = ashr exact i32 %1815, 24
  %1817 = icmp sgt i32 %1816, %1814
  br i1 %1817, label %1818, label %1820

1818:                                             ; preds = %1809
  %1819 = trunc i32 %1812 to i8
  store i8 %1819, ptr %1254, align 1, !tbaa !12
  br label %1820

1820:                                             ; preds = %1818, %1809
  %1821 = add nuw nsw i32 %1733, 1
  br i1 %1580, label %1822, label %1872

1822:                                             ; preds = %1820
  %1823 = load i32, ptr %4, align 4, !tbaa !6
  %1824 = load i32, ptr %12, align 4, !tbaa !6
  %1825 = add nsw i32 %1824, -1
  %1826 = icmp slt i32 %1823, %1825
  br i1 %1826, label %1849, label %1827

1827:                                             ; preds = %1822
  %1828 = icmp eq i32 %1823, %1825
  br i1 %1828, label %1829, label %1865

1829:                                             ; preds = %1827
  store i32 0, ptr %4, align 4, !tbaa !6
  %1830 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1830, ptr %6, align 4, !tbaa !6
  br i1 %1585, label %1872, label %1831

1831:                                             ; preds = %1829, %1859
  %1832 = phi i64 [ %1863, %1859 ], [ 1, %1829 ]
  %1833 = getelementptr inbounds i32, ptr %4, i64 %1832
  %1834 = load i32, ptr %1833, align 4, !tbaa !6
  %1835 = getelementptr inbounds i32, ptr %12, i64 %1832
  %1836 = load i32, ptr %1835, align 4, !tbaa !6
  %1837 = add nsw i32 %1836, -1
  %1838 = icmp slt i32 %1834, %1837
  br i1 %1838, label %1839, label %1857

1839:                                             ; preds = %1831
  br i1 %1826, label %1849, label %1840

1840:                                             ; preds = %1839
  %1841 = shl i64 %1832, 32
  %1842 = add i64 %1841, -4294967296
  %1843 = ashr exact i64 %1842, 32
  %1844 = getelementptr inbounds i32, ptr %7, i64 %1843
  %1845 = load i32, ptr %1844, align 4, !tbaa !6
  %1846 = getelementptr inbounds i32, ptr %6, i64 %1832
  %1847 = load i32, ptr %1846, align 4, !tbaa !6
  %1848 = add nsw i32 %1847, %1845
  store i32 %1848, ptr %1846, align 4, !tbaa !6
  br label %1867

1849:                                             ; preds = %1822, %1839
  %1850 = phi i32 [ %1834, %1839 ], [ %1823, %1822 ]
  %1851 = phi ptr [ %1833, %1839 ], [ %4, %1822 ]
  %1852 = phi i64 [ %1832, %1839 ], [ 0, %1822 ]
  %1853 = add nsw i32 %1850, 1
  store i32 %1853, ptr %1851, align 4, !tbaa !6
  %1854 = getelementptr inbounds i32, ptr %7, i64 %1852
  %1855 = load i32, ptr %1854, align 4, !tbaa !6
  %1856 = getelementptr inbounds i32, ptr %6, i64 %1852
  br label %1867

1857:                                             ; preds = %1831
  %1858 = icmp eq i32 %1834, %1837
  br i1 %1858, label %1859, label %1865

1859:                                             ; preds = %1857
  store i32 0, ptr %1833, align 4, !tbaa !6
  %1860 = getelementptr inbounds i32, ptr %8, i64 %1832
  %1861 = load i32, ptr %1860, align 4, !tbaa !6
  %1862 = getelementptr inbounds i32, ptr %6, i64 %1832
  store i32 %1861, ptr %1862, align 4, !tbaa !6
  %1863 = add nuw nsw i64 %1832, 1
  %1864 = icmp eq i64 %1863, %1583
  br i1 %1864, label %1872, label %1831, !llvm.loop !643

1865:                                             ; preds = %1827, %1857
  %1866 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1022, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5554

1867:                                             ; preds = %1840, %1849
  %1868 = phi ptr [ %1856, %1849 ], [ %1833, %1840 ]
  %1869 = phi i32 [ %1855, %1849 ], [ 1, %1840 ]
  %1870 = load i32, ptr %1868, align 4, !tbaa !6
  %1871 = add nsw i32 %1870, %1869
  store i32 %1871, ptr %1868, align 4, !tbaa !6
  br label %1872

1872:                                             ; preds = %1859, %1867, %1829, %1820
  %1873 = icmp eq i32 %1821, %5
  br i1 %1873, label %5549, label %1732, !llvm.loop !644

1874:                                             ; preds = %1265
  %1875 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1022, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5549

1876:                                             ; preds = %18
  %1877 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1878 = load ptr, ptr %1877, align 8, !tbaa !10
  %1879 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1880 = load ptr, ptr %1879, align 8, !tbaa !10
  %1881 = load i32, ptr %1878, align 4, !tbaa !6
  %1882 = trunc i32 %1881 to i16
  store i16 %1882, ptr %1880, align 2, !tbaa !79
  %1883 = icmp eq i32 %13, 0
  br i1 %1883, label %5549, label %1884

1884:                                             ; preds = %1876
  switch i32 %1, label %2497 [
    i32 1, label %1885
    i32 0, label %2193
  ]

1885:                                             ; preds = %1884
  %1886 = getelementptr inbounds i32, ptr %3, i64 %19
  %1887 = load i32, ptr %1886, align 4, !tbaa !6
  %1888 = icmp eq i32 %1887, 0
  %1889 = icmp sgt i32 %5, 0
  br i1 %1888, label %1899, label %1890

1890:                                             ; preds = %1885
  br i1 %1889, label %1891, label %5549

1891:                                             ; preds = %1890
  %1892 = icmp sgt i32 %13, 1
  %1893 = icmp sgt i32 %13, 0
  %1894 = add i32 %13, -2
  %1895 = zext i32 %1894 to i64
  %1896 = zext i32 %13 to i64
  %1897 = add nuw i32 %5, 1
  %1898 = icmp eq i32 %13, 1
  br label %2050

1899:                                             ; preds = %1885
  br i1 %1889, label %1900, label %5549

1900:                                             ; preds = %1899
  %1901 = icmp sgt i32 %13, 1
  %1902 = icmp sgt i32 %13, 0
  %1903 = add i32 %13, -2
  %1904 = zext i32 %1903 to i64
  %1905 = zext i32 %13 to i64
  %1906 = add nuw i32 %5, 1
  %1907 = icmp eq i32 %13, 1
  br label %1908

1908:                                             ; preds = %1900, %2048
  %1909 = phi i16 [ %1882, %1900 ], [ %1998, %2048 ]
  %1910 = phi i32 [ 0, %1900 ], [ %2000, %2048 ]
  %1911 = phi double [ 0.000000e+00, %1900 ], [ %1999, %2048 ]
  %1912 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1901, label %1913, label %1982

1913:                                             ; preds = %1908, %1972
  %1914 = phi i32 [ %1981, %1972 ], [ 0, %1908 ]
  %1915 = phi i64 [ %1923, %1972 ], [ %1905, %1908 ]
  %1916 = phi i64 [ %1980, %1972 ], [ %1904, %1908 ]
  %1917 = phi i32 [ %1978, %1972 ], [ %1912, %1908 ]
  %1918 = sub i32 %1903, %1914
  %1919 = tail call i32 @llvm.smin.i32(i32 %1918, i32 0)
  %1920 = sub i32 %1918, %1919
  %1921 = zext i32 %1920 to i64
  %1922 = add nuw nsw i64 %1921, 1
  %1923 = add nsw i64 %1915, -1
  %1924 = icmp ult i32 %1920, 31
  br i1 %1924, label %1960, label %1925

1925:                                             ; preds = %1913
  %1926 = and i64 %1922, 8589934560
  %1927 = sub i64 %1916, %1926
  br label %1928

1928:                                             ; preds = %1928, %1925
  %1929 = phi i64 [ 0, %1925 ], [ %1952, %1928 ]
  %1930 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1925 ], [ %1948, %1928 ]
  %1931 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1925 ], [ %1949, %1928 ]
  %1932 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1925 ], [ %1950, %1928 ]
  %1933 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1925 ], [ %1951, %1928 ]
  %1934 = sub i64 %1916, %1929
  %1935 = getelementptr inbounds i32, ptr %9, i64 %1934
  %1936 = getelementptr inbounds i32, ptr %1935, i64 -7
  %1937 = load <8 x i32>, ptr %1936, align 4, !tbaa !6
  %1938 = shufflevector <8 x i32> %1937, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1939 = getelementptr inbounds i32, ptr %1935, i64 -15
  %1940 = load <8 x i32>, ptr %1939, align 4, !tbaa !6
  %1941 = shufflevector <8 x i32> %1940, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1942 = getelementptr inbounds i32, ptr %1935, i64 -23
  %1943 = load <8 x i32>, ptr %1942, align 4, !tbaa !6
  %1944 = shufflevector <8 x i32> %1943, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1945 = getelementptr inbounds i32, ptr %1935, i64 -31
  %1946 = load <8 x i32>, ptr %1945, align 4, !tbaa !6
  %1947 = shufflevector <8 x i32> %1946, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1948 = mul <8 x i32> %1938, %1930
  %1949 = mul <8 x i32> %1941, %1931
  %1950 = mul <8 x i32> %1944, %1932
  %1951 = mul <8 x i32> %1947, %1933
  %1952 = add nuw i64 %1929, 32
  %1953 = icmp eq i64 %1952, %1926
  br i1 %1953, label %1954, label %1928, !llvm.loop !645

1954:                                             ; preds = %1928
  %1955 = mul <8 x i32> %1949, %1948
  %1956 = mul <8 x i32> %1950, %1955
  %1957 = mul <8 x i32> %1951, %1956
  %1958 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1957)
  %1959 = icmp eq i64 %1922, %1926
  br i1 %1959, label %1972, label %1960

1960:                                             ; preds = %1913, %1954
  %1961 = phi i64 [ %1916, %1913 ], [ %1927, %1954 ]
  %1962 = phi i32 [ 1, %1913 ], [ %1958, %1954 ]
  br label %1963

1963:                                             ; preds = %1960, %1963
  %1964 = phi i64 [ %1969, %1963 ], [ %1961, %1960 ]
  %1965 = phi i32 [ %1968, %1963 ], [ %1962, %1960 ]
  %1966 = getelementptr inbounds i32, ptr %9, i64 %1964
  %1967 = load i32, ptr %1966, align 4, !tbaa !6
  %1968 = mul nsw i32 %1967, %1965
  %1969 = add nsw i64 %1964, -1
  %1970 = trunc i64 %1964 to i32
  %1971 = icmp sgt i32 %1970, 0
  br i1 %1971, label %1963, label %1972, !llvm.loop !646

1972:                                             ; preds = %1963, %1954
  %1973 = phi i32 [ %1958, %1954 ], [ %1968, %1963 ]
  %1974 = and i64 %1923, 4294967295
  %1975 = getelementptr inbounds i32, ptr %6, i64 %1974
  %1976 = load i32, ptr %1975, align 4, !tbaa !6
  %1977 = mul nsw i32 %1976, %1973
  %1978 = add nsw i32 %1977, %1917
  %1979 = icmp sgt i64 %1915, 2
  %1980 = add nsw i64 %1916, -1
  %1981 = add i32 %1914, 1
  br i1 %1979, label %1913, label %1982, !llvm.loop !647

1982:                                             ; preds = %1972, %1908
  %1983 = phi i32 [ %1912, %1908 ], [ %1978, %1972 ]
  %1984 = sext i32 %1983 to i64
  %1985 = getelementptr inbounds double, ptr %2, i64 %1984
  %1986 = load double, ptr %1985, align 8, !tbaa !19
  %1987 = getelementptr inbounds i32, ptr %1878, i64 %1984
  %1988 = load i32, ptr %1987, align 4, !tbaa !6
  %1989 = trunc i32 %1988 to i16
  %1990 = fcmp fast ueq double %1986, 0.000000e+00
  br i1 %1990, label %1997, label %1991

1991:                                             ; preds = %1982
  %1992 = sext i16 %1909 to i32
  %1993 = shl i32 %1988, 16
  %1994 = ashr exact i32 %1993, 16
  %1995 = icmp sgt i32 %1994, %1992
  br i1 %1995, label %1996, label %1997

1996:                                             ; preds = %1991
  store i16 %1989, ptr %1880, align 2, !tbaa !79
  br label %1997

1997:                                             ; preds = %1991, %1996, %1982
  %1998 = phi i16 [ %1909, %1991 ], [ %1989, %1996 ], [ %1909, %1982 ]
  %1999 = fadd fast double %1986, %1911
  %2000 = add nuw nsw i32 %1910, 1
  br i1 %1902, label %2001, label %2048

2001:                                             ; preds = %1997
  %2002 = load i32, ptr %4, align 4, !tbaa !6
  %2003 = load i32, ptr %12, align 4, !tbaa !6
  %2004 = add nsw i32 %2003, -1
  %2005 = icmp slt i32 %2002, %2004
  br i1 %2005, label %2025, label %2006

2006:                                             ; preds = %2001
  %2007 = icmp eq i32 %2002, %2004
  br i1 %2007, label %2008, label %2041

2008:                                             ; preds = %2006
  store i32 0, ptr %4, align 4, !tbaa !6
  %2009 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2009, ptr %6, align 4, !tbaa !6
  br i1 %1907, label %2048, label %2010

2010:                                             ; preds = %2008, %2035
  %2011 = phi i64 [ %2039, %2035 ], [ 1, %2008 ]
  %2012 = getelementptr inbounds i32, ptr %4, i64 %2011
  %2013 = load i32, ptr %2012, align 4, !tbaa !6
  %2014 = getelementptr inbounds i32, ptr %12, i64 %2011
  %2015 = load i32, ptr %2014, align 4, !tbaa !6
  %2016 = add nsw i32 %2015, -1
  %2017 = icmp slt i32 %2013, %2016
  br i1 %2017, label %2018, label %2033

2018:                                             ; preds = %2010
  br i1 %2005, label %2025, label %2019

2019:                                             ; preds = %2018
  %2020 = getelementptr inbounds i32, ptr %7, i64 %2011
  %2021 = load i32, ptr %2020, align 4, !tbaa !6
  %2022 = getelementptr inbounds i32, ptr %6, i64 %2011
  %2023 = load i32, ptr %2022, align 4, !tbaa !6
  %2024 = add nsw i32 %2023, %2021
  store i32 %2024, ptr %2022, align 4, !tbaa !6
  br label %2043

2025:                                             ; preds = %2001, %2018
  %2026 = phi i32 [ %2013, %2018 ], [ %2002, %2001 ]
  %2027 = phi ptr [ %2012, %2018 ], [ %4, %2001 ]
  %2028 = phi i64 [ %2011, %2018 ], [ 0, %2001 ]
  %2029 = add nsw i32 %2026, 1
  store i32 %2029, ptr %2027, align 4, !tbaa !6
  %2030 = getelementptr inbounds i32, ptr %7, i64 %2028
  %2031 = load i32, ptr %2030, align 4, !tbaa !6
  %2032 = getelementptr inbounds i32, ptr %6, i64 %2028
  br label %2043

2033:                                             ; preds = %2010
  %2034 = icmp eq i32 %2013, %2016
  br i1 %2034, label %2035, label %2041

2035:                                             ; preds = %2033
  store i32 0, ptr %2012, align 4, !tbaa !6
  %2036 = getelementptr inbounds i32, ptr %8, i64 %2011
  %2037 = load i32, ptr %2036, align 4, !tbaa !6
  %2038 = getelementptr inbounds i32, ptr %6, i64 %2011
  store i32 %2037, ptr %2038, align 4, !tbaa !6
  %2039 = add nuw nsw i64 %2011, 1
  %2040 = icmp eq i64 %2039, %1905
  br i1 %2040, label %2048, label %2010, !llvm.loop !648

2041:                                             ; preds = %2006, %2033
  %2042 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1027, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5554

2043:                                             ; preds = %2019, %2025
  %2044 = phi ptr [ %2032, %2025 ], [ %2012, %2019 ]
  %2045 = phi i32 [ %2031, %2025 ], [ 1, %2019 ]
  %2046 = load i32, ptr %2044, align 4, !tbaa !6
  %2047 = add nsw i32 %2046, %2045
  store i32 %2047, ptr %2044, align 4, !tbaa !6
  br label %2048

2048:                                             ; preds = %2035, %2043, %2008, %1997
  %2049 = icmp eq i32 %2000, %5
  br i1 %2049, label %5549, label %1908, !llvm.loop !649

2050:                                             ; preds = %1891, %2191
  %2051 = phi i16 [ %1882, %1891 ], [ %2139, %2191 ]
  %2052 = phi i32 [ 0, %1891 ], [ %2140, %2191 ]
  %2053 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1892, label %2054, label %2123

2054:                                             ; preds = %2050, %2113
  %2055 = phi i32 [ %2122, %2113 ], [ 0, %2050 ]
  %2056 = phi i64 [ %2064, %2113 ], [ %1896, %2050 ]
  %2057 = phi i64 [ %2121, %2113 ], [ %1895, %2050 ]
  %2058 = phi i32 [ %2119, %2113 ], [ %2053, %2050 ]
  %2059 = sub i32 %1894, %2055
  %2060 = tail call i32 @llvm.smin.i32(i32 %2059, i32 0)
  %2061 = sub i32 %2059, %2060
  %2062 = zext i32 %2061 to i64
  %2063 = add nuw nsw i64 %2062, 1
  %2064 = add nsw i64 %2056, -1
  %2065 = icmp ult i32 %2061, 31
  br i1 %2065, label %2101, label %2066

2066:                                             ; preds = %2054
  %2067 = and i64 %2063, 8589934560
  %2068 = sub i64 %2057, %2067
  br label %2069

2069:                                             ; preds = %2069, %2066
  %2070 = phi i64 [ 0, %2066 ], [ %2093, %2069 ]
  %2071 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2066 ], [ %2089, %2069 ]
  %2072 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2066 ], [ %2090, %2069 ]
  %2073 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2066 ], [ %2091, %2069 ]
  %2074 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2066 ], [ %2092, %2069 ]
  %2075 = sub i64 %2057, %2070
  %2076 = getelementptr inbounds i32, ptr %11, i64 %2075
  %2077 = getelementptr inbounds i32, ptr %2076, i64 -7
  %2078 = load <8 x i32>, ptr %2077, align 4, !tbaa !6
  %2079 = shufflevector <8 x i32> %2078, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2080 = getelementptr inbounds i32, ptr %2076, i64 -15
  %2081 = load <8 x i32>, ptr %2080, align 4, !tbaa !6
  %2082 = shufflevector <8 x i32> %2081, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2083 = getelementptr inbounds i32, ptr %2076, i64 -23
  %2084 = load <8 x i32>, ptr %2083, align 4, !tbaa !6
  %2085 = shufflevector <8 x i32> %2084, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2086 = getelementptr inbounds i32, ptr %2076, i64 -31
  %2087 = load <8 x i32>, ptr %2086, align 4, !tbaa !6
  %2088 = shufflevector <8 x i32> %2087, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2089 = mul <8 x i32> %2079, %2071
  %2090 = mul <8 x i32> %2082, %2072
  %2091 = mul <8 x i32> %2085, %2073
  %2092 = mul <8 x i32> %2088, %2074
  %2093 = add nuw i64 %2070, 32
  %2094 = icmp eq i64 %2093, %2067
  br i1 %2094, label %2095, label %2069, !llvm.loop !650

2095:                                             ; preds = %2069
  %2096 = mul <8 x i32> %2090, %2089
  %2097 = mul <8 x i32> %2091, %2096
  %2098 = mul <8 x i32> %2092, %2097
  %2099 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2098)
  %2100 = icmp eq i64 %2063, %2067
  br i1 %2100, label %2113, label %2101

2101:                                             ; preds = %2054, %2095
  %2102 = phi i64 [ %2057, %2054 ], [ %2068, %2095 ]
  %2103 = phi i32 [ 1, %2054 ], [ %2099, %2095 ]
  br label %2104

2104:                                             ; preds = %2101, %2104
  %2105 = phi i64 [ %2110, %2104 ], [ %2102, %2101 ]
  %2106 = phi i32 [ %2109, %2104 ], [ %2103, %2101 ]
  %2107 = getelementptr inbounds i32, ptr %11, i64 %2105
  %2108 = load i32, ptr %2107, align 4, !tbaa !6
  %2109 = mul nsw i32 %2108, %2106
  %2110 = add nsw i64 %2105, -1
  %2111 = trunc i64 %2105 to i32
  %2112 = icmp sgt i32 %2111, 0
  br i1 %2112, label %2104, label %2113, !llvm.loop !651

2113:                                             ; preds = %2104, %2095
  %2114 = phi i32 [ %2099, %2095 ], [ %2109, %2104 ]
  %2115 = and i64 %2064, 4294967295
  %2116 = getelementptr inbounds i32, ptr %6, i64 %2115
  %2117 = load i32, ptr %2116, align 4, !tbaa !6
  %2118 = mul nsw i32 %2117, %2114
  %2119 = add nsw i32 %2118, %2058
  %2120 = icmp sgt i64 %2056, 2
  %2121 = add nsw i64 %2057, -1
  %2122 = add i32 %2055, 1
  br i1 %2120, label %2054, label %2123, !llvm.loop !652

2123:                                             ; preds = %2113, %2050
  %2124 = phi i32 [ %2053, %2050 ], [ %2119, %2113 ]
  %2125 = icmp slt i32 %2124, %5
  br i1 %2125, label %2128, label %2126

2126:                                             ; preds = %2123
  %2127 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1027, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5554

2128:                                             ; preds = %2123
  %2129 = sext i32 %2124 to i64
  %2130 = getelementptr inbounds i32, ptr %1878, i64 %2129
  %2131 = load i32, ptr %2130, align 4, !tbaa !6
  %2132 = sext i16 %2051 to i32
  %2133 = shl i32 %2131, 16
  %2134 = ashr exact i32 %2133, 16
  %2135 = icmp sgt i32 %2134, %2132
  br i1 %2135, label %2136, label %2138

2136:                                             ; preds = %2128
  %2137 = trunc i32 %2131 to i16
  store i16 %2137, ptr %1880, align 2, !tbaa !79
  br label %2138

2138:                                             ; preds = %2128, %2136
  %2139 = phi i16 [ %2051, %2128 ], [ %2137, %2136 ]
  %2140 = add nuw nsw i32 %2052, 1
  br i1 %1893, label %2141, label %2191

2141:                                             ; preds = %2138
  %2142 = load i32, ptr %4, align 4, !tbaa !6
  %2143 = load i32, ptr %12, align 4, !tbaa !6
  %2144 = add nsw i32 %2143, -1
  %2145 = icmp slt i32 %2142, %2144
  br i1 %2145, label %2168, label %2146

2146:                                             ; preds = %2141
  %2147 = icmp eq i32 %2142, %2144
  br i1 %2147, label %2148, label %2184

2148:                                             ; preds = %2146
  store i32 0, ptr %4, align 4, !tbaa !6
  %2149 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2149, ptr %6, align 4, !tbaa !6
  br i1 %1898, label %2191, label %2150

2150:                                             ; preds = %2148, %2178
  %2151 = phi i64 [ %2182, %2178 ], [ 1, %2148 ]
  %2152 = getelementptr inbounds i32, ptr %4, i64 %2151
  %2153 = load i32, ptr %2152, align 4, !tbaa !6
  %2154 = getelementptr inbounds i32, ptr %12, i64 %2151
  %2155 = load i32, ptr %2154, align 4, !tbaa !6
  %2156 = add nsw i32 %2155, -1
  %2157 = icmp slt i32 %2153, %2156
  br i1 %2157, label %2158, label %2176

2158:                                             ; preds = %2150
  br i1 %2145, label %2168, label %2159

2159:                                             ; preds = %2158
  %2160 = shl i64 %2151, 32
  %2161 = add i64 %2160, -4294967296
  %2162 = ashr exact i64 %2161, 32
  %2163 = getelementptr inbounds i32, ptr %7, i64 %2162
  %2164 = load i32, ptr %2163, align 4, !tbaa !6
  %2165 = getelementptr inbounds i32, ptr %6, i64 %2151
  %2166 = load i32, ptr %2165, align 4, !tbaa !6
  %2167 = add nsw i32 %2166, %2164
  store i32 %2167, ptr %2165, align 4, !tbaa !6
  br label %2186

2168:                                             ; preds = %2141, %2158
  %2169 = phi i32 [ %2153, %2158 ], [ %2142, %2141 ]
  %2170 = phi ptr [ %2152, %2158 ], [ %4, %2141 ]
  %2171 = phi i64 [ %2151, %2158 ], [ 0, %2141 ]
  %2172 = add nsw i32 %2169, 1
  store i32 %2172, ptr %2170, align 4, !tbaa !6
  %2173 = getelementptr inbounds i32, ptr %7, i64 %2171
  %2174 = load i32, ptr %2173, align 4, !tbaa !6
  %2175 = getelementptr inbounds i32, ptr %6, i64 %2171
  br label %2186

2176:                                             ; preds = %2150
  %2177 = icmp eq i32 %2153, %2156
  br i1 %2177, label %2178, label %2184

2178:                                             ; preds = %2176
  store i32 0, ptr %2152, align 4, !tbaa !6
  %2179 = getelementptr inbounds i32, ptr %8, i64 %2151
  %2180 = load i32, ptr %2179, align 4, !tbaa !6
  %2181 = getelementptr inbounds i32, ptr %6, i64 %2151
  store i32 %2180, ptr %2181, align 4, !tbaa !6
  %2182 = add nuw nsw i64 %2151, 1
  %2183 = icmp eq i64 %2182, %1896
  br i1 %2183, label %2191, label %2150, !llvm.loop !653

2184:                                             ; preds = %2146, %2176
  %2185 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1027, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5554

2186:                                             ; preds = %2159, %2168
  %2187 = phi ptr [ %2175, %2168 ], [ %2152, %2159 ]
  %2188 = phi i32 [ %2174, %2168 ], [ 1, %2159 ]
  %2189 = load i32, ptr %2187, align 4, !tbaa !6
  %2190 = add nsw i32 %2189, %2188
  store i32 %2190, ptr %2187, align 4, !tbaa !6
  br label %2191

2191:                                             ; preds = %2178, %2186, %2148, %2138
  %2192 = icmp eq i32 %2140, %5
  br i1 %2192, label %5549, label %2050, !llvm.loop !654

2193:                                             ; preds = %1884
  %2194 = getelementptr inbounds i32, ptr %3, i64 %19
  %2195 = load i32, ptr %2194, align 4, !tbaa !6
  %2196 = icmp eq i32 %2195, 0
  %2197 = icmp sgt i32 %5, 0
  br i1 %2196, label %2207, label %2198

2198:                                             ; preds = %2193
  br i1 %2197, label %2199, label %5549

2199:                                             ; preds = %2198
  %2200 = icmp sgt i32 %13, 1
  %2201 = icmp sgt i32 %13, 0
  %2202 = add i32 %13, -2
  %2203 = zext i32 %2202 to i64
  %2204 = zext i32 %13 to i64
  %2205 = add nuw i32 %5, 1
  %2206 = icmp eq i32 %13, 1
  br label %2354

2207:                                             ; preds = %2193
  br i1 %2197, label %2208, label %5549

2208:                                             ; preds = %2207
  %2209 = icmp sgt i32 %13, 1
  %2210 = icmp sgt i32 %13, 0
  %2211 = add i32 %13, -2
  %2212 = zext i32 %2211 to i64
  %2213 = zext i32 %13 to i64
  %2214 = add nuw i32 %5, 1
  %2215 = icmp eq i32 %13, 1
  br label %2216

2216:                                             ; preds = %2208, %2352
  %2217 = phi i16 [ %1882, %2208 ], [ %2302, %2352 ]
  %2218 = phi i32 [ 0, %2208 ], [ %2304, %2352 ]
  %2219 = phi double [ 0.000000e+00, %2208 ], [ %2303, %2352 ]
  %2220 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2209, label %2221, label %2290

2221:                                             ; preds = %2216, %2280
  %2222 = phi i32 [ %2289, %2280 ], [ 0, %2216 ]
  %2223 = phi i64 [ %2231, %2280 ], [ %2213, %2216 ]
  %2224 = phi i64 [ %2288, %2280 ], [ %2212, %2216 ]
  %2225 = phi i32 [ %2286, %2280 ], [ %2220, %2216 ]
  %2226 = sub i32 %2211, %2222
  %2227 = tail call i32 @llvm.smin.i32(i32 %2226, i32 0)
  %2228 = sub i32 %2226, %2227
  %2229 = zext i32 %2228 to i64
  %2230 = add nuw nsw i64 %2229, 1
  %2231 = add nsw i64 %2223, -1
  %2232 = icmp ult i32 %2228, 31
  br i1 %2232, label %2268, label %2233

2233:                                             ; preds = %2221
  %2234 = and i64 %2230, 8589934560
  %2235 = sub i64 %2224, %2234
  br label %2236

2236:                                             ; preds = %2236, %2233
  %2237 = phi i64 [ 0, %2233 ], [ %2260, %2236 ]
  %2238 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2233 ], [ %2256, %2236 ]
  %2239 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2233 ], [ %2257, %2236 ]
  %2240 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2233 ], [ %2258, %2236 ]
  %2241 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2233 ], [ %2259, %2236 ]
  %2242 = sub i64 %2224, %2237
  %2243 = getelementptr inbounds i32, ptr %9, i64 %2242
  %2244 = getelementptr inbounds i32, ptr %2243, i64 -7
  %2245 = load <8 x i32>, ptr %2244, align 4, !tbaa !6
  %2246 = shufflevector <8 x i32> %2245, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2247 = getelementptr inbounds i32, ptr %2243, i64 -15
  %2248 = load <8 x i32>, ptr %2247, align 4, !tbaa !6
  %2249 = shufflevector <8 x i32> %2248, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2250 = getelementptr inbounds i32, ptr %2243, i64 -23
  %2251 = load <8 x i32>, ptr %2250, align 4, !tbaa !6
  %2252 = shufflevector <8 x i32> %2251, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2253 = getelementptr inbounds i32, ptr %2243, i64 -31
  %2254 = load <8 x i32>, ptr %2253, align 4, !tbaa !6
  %2255 = shufflevector <8 x i32> %2254, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2256 = mul <8 x i32> %2246, %2238
  %2257 = mul <8 x i32> %2249, %2239
  %2258 = mul <8 x i32> %2252, %2240
  %2259 = mul <8 x i32> %2255, %2241
  %2260 = add nuw i64 %2237, 32
  %2261 = icmp eq i64 %2260, %2234
  br i1 %2261, label %2262, label %2236, !llvm.loop !655

2262:                                             ; preds = %2236
  %2263 = mul <8 x i32> %2257, %2256
  %2264 = mul <8 x i32> %2258, %2263
  %2265 = mul <8 x i32> %2259, %2264
  %2266 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2265)
  %2267 = icmp eq i64 %2230, %2234
  br i1 %2267, label %2280, label %2268

2268:                                             ; preds = %2221, %2262
  %2269 = phi i64 [ %2224, %2221 ], [ %2235, %2262 ]
  %2270 = phi i32 [ 1, %2221 ], [ %2266, %2262 ]
  br label %2271

2271:                                             ; preds = %2268, %2271
  %2272 = phi i64 [ %2277, %2271 ], [ %2269, %2268 ]
  %2273 = phi i32 [ %2276, %2271 ], [ %2270, %2268 ]
  %2274 = getelementptr inbounds i32, ptr %9, i64 %2272
  %2275 = load i32, ptr %2274, align 4, !tbaa !6
  %2276 = mul nsw i32 %2275, %2273
  %2277 = add nsw i64 %2272, -1
  %2278 = trunc i64 %2272 to i32
  %2279 = icmp sgt i32 %2278, 0
  br i1 %2279, label %2271, label %2280, !llvm.loop !656

2280:                                             ; preds = %2271, %2262
  %2281 = phi i32 [ %2266, %2262 ], [ %2276, %2271 ]
  %2282 = and i64 %2231, 4294967295
  %2283 = getelementptr inbounds i32, ptr %6, i64 %2282
  %2284 = load i32, ptr %2283, align 4, !tbaa !6
  %2285 = mul nsw i32 %2284, %2281
  %2286 = add nsw i32 %2285, %2225
  %2287 = icmp sgt i64 %2223, 2
  %2288 = add nsw i64 %2224, -1
  %2289 = add i32 %2222, 1
  br i1 %2287, label %2221, label %2290, !llvm.loop !657

2290:                                             ; preds = %2280, %2216
  %2291 = phi i32 [ %2220, %2216 ], [ %2286, %2280 ]
  %2292 = sext i32 %2291 to i64
  %2293 = getelementptr inbounds i32, ptr %1878, i64 %2292
  %2294 = load i32, ptr %2293, align 4, !tbaa !6
  %2295 = sext i16 %2217 to i32
  %2296 = shl i32 %2294, 16
  %2297 = ashr exact i32 %2296, 16
  %2298 = icmp sgt i32 %2297, %2295
  br i1 %2298, label %2299, label %2301

2299:                                             ; preds = %2290
  %2300 = trunc i32 %2294 to i16
  store i16 %2300, ptr %1880, align 2, !tbaa !79
  br label %2301

2301:                                             ; preds = %2299, %2290
  %2302 = phi i16 [ %2300, %2299 ], [ %2217, %2290 ]
  %2303 = fadd fast double %2219, 1.000000e+00
  %2304 = add nuw nsw i32 %2218, 1
  br i1 %2210, label %2305, label %2352

2305:                                             ; preds = %2301
  %2306 = load i32, ptr %4, align 4, !tbaa !6
  %2307 = load i32, ptr %12, align 4, !tbaa !6
  %2308 = add nsw i32 %2307, -1
  %2309 = icmp slt i32 %2306, %2308
  br i1 %2309, label %2329, label %2310

2310:                                             ; preds = %2305
  %2311 = icmp eq i32 %2306, %2308
  br i1 %2311, label %2312, label %2345

2312:                                             ; preds = %2310
  store i32 0, ptr %4, align 4, !tbaa !6
  %2313 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2313, ptr %6, align 4, !tbaa !6
  br i1 %2215, label %2352, label %2314

2314:                                             ; preds = %2312, %2339
  %2315 = phi i64 [ %2343, %2339 ], [ 1, %2312 ]
  %2316 = getelementptr inbounds i32, ptr %4, i64 %2315
  %2317 = load i32, ptr %2316, align 4, !tbaa !6
  %2318 = getelementptr inbounds i32, ptr %12, i64 %2315
  %2319 = load i32, ptr %2318, align 4, !tbaa !6
  %2320 = add nsw i32 %2319, -1
  %2321 = icmp slt i32 %2317, %2320
  br i1 %2321, label %2322, label %2337

2322:                                             ; preds = %2314
  br i1 %2309, label %2329, label %2323

2323:                                             ; preds = %2322
  %2324 = getelementptr inbounds i32, ptr %7, i64 %2315
  %2325 = load i32, ptr %2324, align 4, !tbaa !6
  %2326 = getelementptr inbounds i32, ptr %6, i64 %2315
  %2327 = load i32, ptr %2326, align 4, !tbaa !6
  %2328 = add nsw i32 %2327, %2325
  store i32 %2328, ptr %2326, align 4, !tbaa !6
  br label %2347

2329:                                             ; preds = %2305, %2322
  %2330 = phi i32 [ %2317, %2322 ], [ %2306, %2305 ]
  %2331 = phi ptr [ %2316, %2322 ], [ %4, %2305 ]
  %2332 = phi i64 [ %2315, %2322 ], [ 0, %2305 ]
  %2333 = add nsw i32 %2330, 1
  store i32 %2333, ptr %2331, align 4, !tbaa !6
  %2334 = getelementptr inbounds i32, ptr %7, i64 %2332
  %2335 = load i32, ptr %2334, align 4, !tbaa !6
  %2336 = getelementptr inbounds i32, ptr %6, i64 %2332
  br label %2347

2337:                                             ; preds = %2314
  %2338 = icmp eq i32 %2317, %2320
  br i1 %2338, label %2339, label %2345

2339:                                             ; preds = %2337
  store i32 0, ptr %2316, align 4, !tbaa !6
  %2340 = getelementptr inbounds i32, ptr %8, i64 %2315
  %2341 = load i32, ptr %2340, align 4, !tbaa !6
  %2342 = getelementptr inbounds i32, ptr %6, i64 %2315
  store i32 %2341, ptr %2342, align 4, !tbaa !6
  %2343 = add nuw nsw i64 %2315, 1
  %2344 = icmp eq i64 %2343, %2213
  br i1 %2344, label %2352, label %2314, !llvm.loop !658

2345:                                             ; preds = %2310, %2337
  %2346 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1027, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5554

2347:                                             ; preds = %2323, %2329
  %2348 = phi ptr [ %2336, %2329 ], [ %2316, %2323 ]
  %2349 = phi i32 [ %2335, %2329 ], [ 1, %2323 ]
  %2350 = load i32, ptr %2348, align 4, !tbaa !6
  %2351 = add nsw i32 %2350, %2349
  store i32 %2351, ptr %2348, align 4, !tbaa !6
  br label %2352

2352:                                             ; preds = %2339, %2347, %2312, %2301
  %2353 = icmp eq i32 %2304, %5
  br i1 %2353, label %5549, label %2216, !llvm.loop !659

2354:                                             ; preds = %2199, %2495
  %2355 = phi i16 [ %1882, %2199 ], [ %2443, %2495 ]
  %2356 = phi i32 [ 0, %2199 ], [ %2444, %2495 ]
  %2357 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2200, label %2358, label %2427

2358:                                             ; preds = %2354, %2417
  %2359 = phi i32 [ %2426, %2417 ], [ 0, %2354 ]
  %2360 = phi i64 [ %2368, %2417 ], [ %2204, %2354 ]
  %2361 = phi i64 [ %2425, %2417 ], [ %2203, %2354 ]
  %2362 = phi i32 [ %2423, %2417 ], [ %2357, %2354 ]
  %2363 = sub i32 %2202, %2359
  %2364 = tail call i32 @llvm.smin.i32(i32 %2363, i32 0)
  %2365 = sub i32 %2363, %2364
  %2366 = zext i32 %2365 to i64
  %2367 = add nuw nsw i64 %2366, 1
  %2368 = add nsw i64 %2360, -1
  %2369 = icmp ult i32 %2365, 31
  br i1 %2369, label %2405, label %2370

2370:                                             ; preds = %2358
  %2371 = and i64 %2367, 8589934560
  %2372 = sub i64 %2361, %2371
  br label %2373

2373:                                             ; preds = %2373, %2370
  %2374 = phi i64 [ 0, %2370 ], [ %2397, %2373 ]
  %2375 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2370 ], [ %2393, %2373 ]
  %2376 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2370 ], [ %2394, %2373 ]
  %2377 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2370 ], [ %2395, %2373 ]
  %2378 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2370 ], [ %2396, %2373 ]
  %2379 = sub i64 %2361, %2374
  %2380 = getelementptr inbounds i32, ptr %11, i64 %2379
  %2381 = getelementptr inbounds i32, ptr %2380, i64 -7
  %2382 = load <8 x i32>, ptr %2381, align 4, !tbaa !6
  %2383 = shufflevector <8 x i32> %2382, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2384 = getelementptr inbounds i32, ptr %2380, i64 -15
  %2385 = load <8 x i32>, ptr %2384, align 4, !tbaa !6
  %2386 = shufflevector <8 x i32> %2385, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2387 = getelementptr inbounds i32, ptr %2380, i64 -23
  %2388 = load <8 x i32>, ptr %2387, align 4, !tbaa !6
  %2389 = shufflevector <8 x i32> %2388, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2390 = getelementptr inbounds i32, ptr %2380, i64 -31
  %2391 = load <8 x i32>, ptr %2390, align 4, !tbaa !6
  %2392 = shufflevector <8 x i32> %2391, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2393 = mul <8 x i32> %2383, %2375
  %2394 = mul <8 x i32> %2386, %2376
  %2395 = mul <8 x i32> %2389, %2377
  %2396 = mul <8 x i32> %2392, %2378
  %2397 = add nuw i64 %2374, 32
  %2398 = icmp eq i64 %2397, %2371
  br i1 %2398, label %2399, label %2373, !llvm.loop !660

2399:                                             ; preds = %2373
  %2400 = mul <8 x i32> %2394, %2393
  %2401 = mul <8 x i32> %2395, %2400
  %2402 = mul <8 x i32> %2396, %2401
  %2403 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2402)
  %2404 = icmp eq i64 %2367, %2371
  br i1 %2404, label %2417, label %2405

2405:                                             ; preds = %2358, %2399
  %2406 = phi i64 [ %2361, %2358 ], [ %2372, %2399 ]
  %2407 = phi i32 [ 1, %2358 ], [ %2403, %2399 ]
  br label %2408

2408:                                             ; preds = %2405, %2408
  %2409 = phi i64 [ %2414, %2408 ], [ %2406, %2405 ]
  %2410 = phi i32 [ %2413, %2408 ], [ %2407, %2405 ]
  %2411 = getelementptr inbounds i32, ptr %11, i64 %2409
  %2412 = load i32, ptr %2411, align 4, !tbaa !6
  %2413 = mul nsw i32 %2412, %2410
  %2414 = add nsw i64 %2409, -1
  %2415 = trunc i64 %2409 to i32
  %2416 = icmp sgt i32 %2415, 0
  br i1 %2416, label %2408, label %2417, !llvm.loop !661

2417:                                             ; preds = %2408, %2399
  %2418 = phi i32 [ %2403, %2399 ], [ %2413, %2408 ]
  %2419 = and i64 %2368, 4294967295
  %2420 = getelementptr inbounds i32, ptr %6, i64 %2419
  %2421 = load i32, ptr %2420, align 4, !tbaa !6
  %2422 = mul nsw i32 %2421, %2418
  %2423 = add nsw i32 %2422, %2362
  %2424 = icmp sgt i64 %2360, 2
  %2425 = add nsw i64 %2361, -1
  %2426 = add i32 %2359, 1
  br i1 %2424, label %2358, label %2427, !llvm.loop !662

2427:                                             ; preds = %2417, %2354
  %2428 = phi i32 [ %2357, %2354 ], [ %2423, %2417 ]
  %2429 = icmp slt i32 %2428, %5
  br i1 %2429, label %2432, label %2430

2430:                                             ; preds = %2427
  %2431 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1027, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5554

2432:                                             ; preds = %2427
  %2433 = sext i32 %2428 to i64
  %2434 = getelementptr inbounds i32, ptr %1878, i64 %2433
  %2435 = load i32, ptr %2434, align 4, !tbaa !6
  %2436 = sext i16 %2355 to i32
  %2437 = shl i32 %2435, 16
  %2438 = ashr exact i32 %2437, 16
  %2439 = icmp sgt i32 %2438, %2436
  br i1 %2439, label %2440, label %2442

2440:                                             ; preds = %2432
  %2441 = trunc i32 %2435 to i16
  store i16 %2441, ptr %1880, align 2, !tbaa !79
  br label %2442

2442:                                             ; preds = %2440, %2432
  %2443 = phi i16 [ %2441, %2440 ], [ %2355, %2432 ]
  %2444 = add nuw nsw i32 %2356, 1
  br i1 %2201, label %2445, label %2495

2445:                                             ; preds = %2442
  %2446 = load i32, ptr %4, align 4, !tbaa !6
  %2447 = load i32, ptr %12, align 4, !tbaa !6
  %2448 = add nsw i32 %2447, -1
  %2449 = icmp slt i32 %2446, %2448
  br i1 %2449, label %2472, label %2450

2450:                                             ; preds = %2445
  %2451 = icmp eq i32 %2446, %2448
  br i1 %2451, label %2452, label %2488

2452:                                             ; preds = %2450
  store i32 0, ptr %4, align 4, !tbaa !6
  %2453 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2453, ptr %6, align 4, !tbaa !6
  br i1 %2206, label %2495, label %2454

2454:                                             ; preds = %2452, %2482
  %2455 = phi i64 [ %2486, %2482 ], [ 1, %2452 ]
  %2456 = getelementptr inbounds i32, ptr %4, i64 %2455
  %2457 = load i32, ptr %2456, align 4, !tbaa !6
  %2458 = getelementptr inbounds i32, ptr %12, i64 %2455
  %2459 = load i32, ptr %2458, align 4, !tbaa !6
  %2460 = add nsw i32 %2459, -1
  %2461 = icmp slt i32 %2457, %2460
  br i1 %2461, label %2462, label %2480

2462:                                             ; preds = %2454
  br i1 %2449, label %2472, label %2463

2463:                                             ; preds = %2462
  %2464 = shl i64 %2455, 32
  %2465 = add i64 %2464, -4294967296
  %2466 = ashr exact i64 %2465, 32
  %2467 = getelementptr inbounds i32, ptr %7, i64 %2466
  %2468 = load i32, ptr %2467, align 4, !tbaa !6
  %2469 = getelementptr inbounds i32, ptr %6, i64 %2455
  %2470 = load i32, ptr %2469, align 4, !tbaa !6
  %2471 = add nsw i32 %2470, %2468
  store i32 %2471, ptr %2469, align 4, !tbaa !6
  br label %2490

2472:                                             ; preds = %2445, %2462
  %2473 = phi i32 [ %2457, %2462 ], [ %2446, %2445 ]
  %2474 = phi ptr [ %2456, %2462 ], [ %4, %2445 ]
  %2475 = phi i64 [ %2455, %2462 ], [ 0, %2445 ]
  %2476 = add nsw i32 %2473, 1
  store i32 %2476, ptr %2474, align 4, !tbaa !6
  %2477 = getelementptr inbounds i32, ptr %7, i64 %2475
  %2478 = load i32, ptr %2477, align 4, !tbaa !6
  %2479 = getelementptr inbounds i32, ptr %6, i64 %2475
  br label %2490

2480:                                             ; preds = %2454
  %2481 = icmp eq i32 %2457, %2460
  br i1 %2481, label %2482, label %2488

2482:                                             ; preds = %2480
  store i32 0, ptr %2456, align 4, !tbaa !6
  %2483 = getelementptr inbounds i32, ptr %8, i64 %2455
  %2484 = load i32, ptr %2483, align 4, !tbaa !6
  %2485 = getelementptr inbounds i32, ptr %6, i64 %2455
  store i32 %2484, ptr %2485, align 4, !tbaa !6
  %2486 = add nuw nsw i64 %2455, 1
  %2487 = icmp eq i64 %2486, %2204
  br i1 %2487, label %2495, label %2454, !llvm.loop !663

2488:                                             ; preds = %2450, %2480
  %2489 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1027, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5554

2490:                                             ; preds = %2463, %2472
  %2491 = phi ptr [ %2479, %2472 ], [ %2456, %2463 ]
  %2492 = phi i32 [ %2478, %2472 ], [ 1, %2463 ]
  %2493 = load i32, ptr %2491, align 4, !tbaa !6
  %2494 = add nsw i32 %2493, %2492
  store i32 %2494, ptr %2491, align 4, !tbaa !6
  br label %2495

2495:                                             ; preds = %2482, %2490, %2452, %2442
  %2496 = icmp eq i32 %2444, %5
  br i1 %2496, label %5549, label %2354, !llvm.loop !664

2497:                                             ; preds = %1884
  %2498 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1027, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5549

2499:                                             ; preds = %18
  %2500 = getelementptr inbounds ptr, ptr %14, i64 %19
  %2501 = load ptr, ptr %2500, align 8, !tbaa !10
  %2502 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2503 = load ptr, ptr %2502, align 8, !tbaa !10
  %2504 = load i32, ptr %2501, align 4, !tbaa !6
  store i32 %2504, ptr %2503, align 4, !tbaa !6
  %2505 = icmp eq i32 %13, 0
  br i1 %2505, label %2506, label %2510

2506:                                             ; preds = %2499
  %2507 = load i32, ptr %2501, align 4, !tbaa !6
  %2508 = icmp slt i32 %2504, %2507
  br i1 %2508, label %2509, label %5549

2509:                                             ; preds = %2506
  store i32 %2507, ptr %2503, align 4, !tbaa !6
  br label %5549

2510:                                             ; preds = %2499
  switch i32 %1, label %3103 [
    i32 1, label %2511
    i32 0, label %2809
  ]

2511:                                             ; preds = %2510
  %2512 = getelementptr inbounds i32, ptr %3, i64 %19
  %2513 = load i32, ptr %2512, align 4, !tbaa !6
  %2514 = icmp eq i32 %2513, 0
  %2515 = icmp sgt i32 %5, 0
  br i1 %2514, label %2525, label %2516

2516:                                             ; preds = %2511
  br i1 %2515, label %2517, label %5549

2517:                                             ; preds = %2516
  %2518 = icmp sgt i32 %13, 1
  %2519 = icmp sgt i32 %13, 0
  %2520 = add i32 %13, -2
  %2521 = zext i32 %2520 to i64
  %2522 = zext i32 %13 to i64
  %2523 = add nuw i32 %5, 1
  %2524 = icmp eq i32 %13, 1
  br label %2671

2525:                                             ; preds = %2511
  br i1 %2515, label %2526, label %5549

2526:                                             ; preds = %2525
  %2527 = icmp sgt i32 %13, 1
  %2528 = icmp sgt i32 %13, 0
  %2529 = add i32 %13, -2
  %2530 = zext i32 %2529 to i64
  %2531 = zext i32 %13 to i64
  %2532 = add nuw i32 %5, 1
  %2533 = icmp eq i32 %13, 1
  br label %2534

2534:                                             ; preds = %2526, %2669
  %2535 = phi i32 [ 0, %2526 ], [ %2621, %2669 ]
  %2536 = phi double [ 0.000000e+00, %2526 ], [ %2620, %2669 ]
  %2537 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2527, label %2538, label %2607

2538:                                             ; preds = %2534, %2597
  %2539 = phi i32 [ %2606, %2597 ], [ 0, %2534 ]
  %2540 = phi i64 [ %2548, %2597 ], [ %2531, %2534 ]
  %2541 = phi i64 [ %2605, %2597 ], [ %2530, %2534 ]
  %2542 = phi i32 [ %2603, %2597 ], [ %2537, %2534 ]
  %2543 = sub i32 %2529, %2539
  %2544 = tail call i32 @llvm.smin.i32(i32 %2543, i32 0)
  %2545 = sub i32 %2543, %2544
  %2546 = zext i32 %2545 to i64
  %2547 = add nuw nsw i64 %2546, 1
  %2548 = add nsw i64 %2540, -1
  %2549 = icmp ult i32 %2545, 31
  br i1 %2549, label %2585, label %2550

2550:                                             ; preds = %2538
  %2551 = and i64 %2547, 8589934560
  %2552 = sub i64 %2541, %2551
  br label %2553

2553:                                             ; preds = %2553, %2550
  %2554 = phi i64 [ 0, %2550 ], [ %2577, %2553 ]
  %2555 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2550 ], [ %2573, %2553 ]
  %2556 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2550 ], [ %2574, %2553 ]
  %2557 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2550 ], [ %2575, %2553 ]
  %2558 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2550 ], [ %2576, %2553 ]
  %2559 = sub i64 %2541, %2554
  %2560 = getelementptr inbounds i32, ptr %9, i64 %2559
  %2561 = getelementptr inbounds i32, ptr %2560, i64 -7
  %2562 = load <8 x i32>, ptr %2561, align 4, !tbaa !6
  %2563 = shufflevector <8 x i32> %2562, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2564 = getelementptr inbounds i32, ptr %2560, i64 -15
  %2565 = load <8 x i32>, ptr %2564, align 4, !tbaa !6
  %2566 = shufflevector <8 x i32> %2565, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2567 = getelementptr inbounds i32, ptr %2560, i64 -23
  %2568 = load <8 x i32>, ptr %2567, align 4, !tbaa !6
  %2569 = shufflevector <8 x i32> %2568, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2570 = getelementptr inbounds i32, ptr %2560, i64 -31
  %2571 = load <8 x i32>, ptr %2570, align 4, !tbaa !6
  %2572 = shufflevector <8 x i32> %2571, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2573 = mul <8 x i32> %2563, %2555
  %2574 = mul <8 x i32> %2566, %2556
  %2575 = mul <8 x i32> %2569, %2557
  %2576 = mul <8 x i32> %2572, %2558
  %2577 = add nuw i64 %2554, 32
  %2578 = icmp eq i64 %2577, %2551
  br i1 %2578, label %2579, label %2553, !llvm.loop !665

2579:                                             ; preds = %2553
  %2580 = mul <8 x i32> %2574, %2573
  %2581 = mul <8 x i32> %2575, %2580
  %2582 = mul <8 x i32> %2576, %2581
  %2583 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2582)
  %2584 = icmp eq i64 %2547, %2551
  br i1 %2584, label %2597, label %2585

2585:                                             ; preds = %2538, %2579
  %2586 = phi i64 [ %2541, %2538 ], [ %2552, %2579 ]
  %2587 = phi i32 [ 1, %2538 ], [ %2583, %2579 ]
  br label %2588

2588:                                             ; preds = %2585, %2588
  %2589 = phi i64 [ %2594, %2588 ], [ %2586, %2585 ]
  %2590 = phi i32 [ %2593, %2588 ], [ %2587, %2585 ]
  %2591 = getelementptr inbounds i32, ptr %9, i64 %2589
  %2592 = load i32, ptr %2591, align 4, !tbaa !6
  %2593 = mul nsw i32 %2592, %2590
  %2594 = add nsw i64 %2589, -1
  %2595 = trunc i64 %2589 to i32
  %2596 = icmp sgt i32 %2595, 0
  br i1 %2596, label %2588, label %2597, !llvm.loop !666

2597:                                             ; preds = %2588, %2579
  %2598 = phi i32 [ %2583, %2579 ], [ %2593, %2588 ]
  %2599 = and i64 %2548, 4294967295
  %2600 = getelementptr inbounds i32, ptr %6, i64 %2599
  %2601 = load i32, ptr %2600, align 4, !tbaa !6
  %2602 = mul nsw i32 %2601, %2598
  %2603 = add nsw i32 %2602, %2542
  %2604 = icmp sgt i64 %2540, 2
  %2605 = add nsw i64 %2541, -1
  %2606 = add i32 %2539, 1
  br i1 %2604, label %2538, label %2607, !llvm.loop !667

2607:                                             ; preds = %2597, %2534
  %2608 = phi i32 [ %2537, %2534 ], [ %2603, %2597 ]
  %2609 = sext i32 %2608 to i64
  %2610 = getelementptr inbounds double, ptr %2, i64 %2609
  %2611 = load double, ptr %2610, align 8, !tbaa !19
  %2612 = getelementptr inbounds i32, ptr %2501, i64 %2609
  %2613 = load i32, ptr %2612, align 4, !tbaa !6
  %2614 = fcmp fast ueq double %2611, 0.000000e+00
  br i1 %2614, label %2619, label %2615

2615:                                             ; preds = %2607
  %2616 = load i32, ptr %2503, align 4, !tbaa !6
  %2617 = icmp slt i32 %2616, %2613
  br i1 %2617, label %2618, label %2619

2618:                                             ; preds = %2615
  store i32 %2613, ptr %2503, align 4, !tbaa !6
  br label %2619

2619:                                             ; preds = %2615, %2618, %2607
  %2620 = fadd fast double %2611, %2536
  %2621 = add nuw nsw i32 %2535, 1
  br i1 %2528, label %2622, label %2669

2622:                                             ; preds = %2619
  %2623 = load i32, ptr %4, align 4, !tbaa !6
  %2624 = load i32, ptr %12, align 4, !tbaa !6
  %2625 = add nsw i32 %2624, -1
  %2626 = icmp slt i32 %2623, %2625
  br i1 %2626, label %2646, label %2627

2627:                                             ; preds = %2622
  %2628 = icmp eq i32 %2623, %2625
  br i1 %2628, label %2629, label %2662

2629:                                             ; preds = %2627
  store i32 0, ptr %4, align 4, !tbaa !6
  %2630 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2630, ptr %6, align 4, !tbaa !6
  br i1 %2533, label %2669, label %2631

2631:                                             ; preds = %2629, %2656
  %2632 = phi i64 [ %2660, %2656 ], [ 1, %2629 ]
  %2633 = getelementptr inbounds i32, ptr %4, i64 %2632
  %2634 = load i32, ptr %2633, align 4, !tbaa !6
  %2635 = getelementptr inbounds i32, ptr %12, i64 %2632
  %2636 = load i32, ptr %2635, align 4, !tbaa !6
  %2637 = add nsw i32 %2636, -1
  %2638 = icmp slt i32 %2634, %2637
  br i1 %2638, label %2639, label %2654

2639:                                             ; preds = %2631
  br i1 %2626, label %2646, label %2640

2640:                                             ; preds = %2639
  %2641 = getelementptr inbounds i32, ptr %7, i64 %2632
  %2642 = load i32, ptr %2641, align 4, !tbaa !6
  %2643 = getelementptr inbounds i32, ptr %6, i64 %2632
  %2644 = load i32, ptr %2643, align 4, !tbaa !6
  %2645 = add nsw i32 %2644, %2642
  store i32 %2645, ptr %2643, align 4, !tbaa !6
  br label %2664

2646:                                             ; preds = %2622, %2639
  %2647 = phi i32 [ %2634, %2639 ], [ %2623, %2622 ]
  %2648 = phi ptr [ %2633, %2639 ], [ %4, %2622 ]
  %2649 = phi i64 [ %2632, %2639 ], [ 0, %2622 ]
  %2650 = add nsw i32 %2647, 1
  store i32 %2650, ptr %2648, align 4, !tbaa !6
  %2651 = getelementptr inbounds i32, ptr %7, i64 %2649
  %2652 = load i32, ptr %2651, align 4, !tbaa !6
  %2653 = getelementptr inbounds i32, ptr %6, i64 %2649
  br label %2664

2654:                                             ; preds = %2631
  %2655 = icmp eq i32 %2634, %2637
  br i1 %2655, label %2656, label %2662

2656:                                             ; preds = %2654
  store i32 0, ptr %2633, align 4, !tbaa !6
  %2657 = getelementptr inbounds i32, ptr %8, i64 %2632
  %2658 = load i32, ptr %2657, align 4, !tbaa !6
  %2659 = getelementptr inbounds i32, ptr %6, i64 %2632
  store i32 %2658, ptr %2659, align 4, !tbaa !6
  %2660 = add nuw nsw i64 %2632, 1
  %2661 = icmp eq i64 %2660, %2531
  br i1 %2661, label %2669, label %2631, !llvm.loop !668

2662:                                             ; preds = %2627, %2654
  %2663 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1032, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5554

2664:                                             ; preds = %2640, %2646
  %2665 = phi ptr [ %2653, %2646 ], [ %2633, %2640 ]
  %2666 = phi i32 [ %2652, %2646 ], [ 1, %2640 ]
  %2667 = load i32, ptr %2665, align 4, !tbaa !6
  %2668 = add nsw i32 %2667, %2666
  store i32 %2668, ptr %2665, align 4, !tbaa !6
  br label %2669

2669:                                             ; preds = %2656, %2664, %2629, %2619
  %2670 = icmp eq i32 %2621, %5
  br i1 %2670, label %5549, label %2534, !llvm.loop !669

2671:                                             ; preds = %2517, %2807
  %2672 = phi i32 [ 0, %2517 ], [ %2756, %2807 ]
  %2673 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2518, label %2674, label %2743

2674:                                             ; preds = %2671, %2733
  %2675 = phi i32 [ %2742, %2733 ], [ 0, %2671 ]
  %2676 = phi i64 [ %2684, %2733 ], [ %2522, %2671 ]
  %2677 = phi i64 [ %2741, %2733 ], [ %2521, %2671 ]
  %2678 = phi i32 [ %2739, %2733 ], [ %2673, %2671 ]
  %2679 = sub i32 %2520, %2675
  %2680 = tail call i32 @llvm.smin.i32(i32 %2679, i32 0)
  %2681 = sub i32 %2679, %2680
  %2682 = zext i32 %2681 to i64
  %2683 = add nuw nsw i64 %2682, 1
  %2684 = add nsw i64 %2676, -1
  %2685 = icmp ult i32 %2681, 31
  br i1 %2685, label %2721, label %2686

2686:                                             ; preds = %2674
  %2687 = and i64 %2683, 8589934560
  %2688 = sub i64 %2677, %2687
  br label %2689

2689:                                             ; preds = %2689, %2686
  %2690 = phi i64 [ 0, %2686 ], [ %2713, %2689 ]
  %2691 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2686 ], [ %2709, %2689 ]
  %2692 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2686 ], [ %2710, %2689 ]
  %2693 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2686 ], [ %2711, %2689 ]
  %2694 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2686 ], [ %2712, %2689 ]
  %2695 = sub i64 %2677, %2690
  %2696 = getelementptr inbounds i32, ptr %11, i64 %2695
  %2697 = getelementptr inbounds i32, ptr %2696, i64 -7
  %2698 = load <8 x i32>, ptr %2697, align 4, !tbaa !6
  %2699 = shufflevector <8 x i32> %2698, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2700 = getelementptr inbounds i32, ptr %2696, i64 -15
  %2701 = load <8 x i32>, ptr %2700, align 4, !tbaa !6
  %2702 = shufflevector <8 x i32> %2701, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2703 = getelementptr inbounds i32, ptr %2696, i64 -23
  %2704 = load <8 x i32>, ptr %2703, align 4, !tbaa !6
  %2705 = shufflevector <8 x i32> %2704, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2706 = getelementptr inbounds i32, ptr %2696, i64 -31
  %2707 = load <8 x i32>, ptr %2706, align 4, !tbaa !6
  %2708 = shufflevector <8 x i32> %2707, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2709 = mul <8 x i32> %2699, %2691
  %2710 = mul <8 x i32> %2702, %2692
  %2711 = mul <8 x i32> %2705, %2693
  %2712 = mul <8 x i32> %2708, %2694
  %2713 = add nuw i64 %2690, 32
  %2714 = icmp eq i64 %2713, %2687
  br i1 %2714, label %2715, label %2689, !llvm.loop !670

2715:                                             ; preds = %2689
  %2716 = mul <8 x i32> %2710, %2709
  %2717 = mul <8 x i32> %2711, %2716
  %2718 = mul <8 x i32> %2712, %2717
  %2719 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2718)
  %2720 = icmp eq i64 %2683, %2687
  br i1 %2720, label %2733, label %2721

2721:                                             ; preds = %2674, %2715
  %2722 = phi i64 [ %2677, %2674 ], [ %2688, %2715 ]
  %2723 = phi i32 [ 1, %2674 ], [ %2719, %2715 ]
  br label %2724

2724:                                             ; preds = %2721, %2724
  %2725 = phi i64 [ %2730, %2724 ], [ %2722, %2721 ]
  %2726 = phi i32 [ %2729, %2724 ], [ %2723, %2721 ]
  %2727 = getelementptr inbounds i32, ptr %11, i64 %2725
  %2728 = load i32, ptr %2727, align 4, !tbaa !6
  %2729 = mul nsw i32 %2728, %2726
  %2730 = add nsw i64 %2725, -1
  %2731 = trunc i64 %2725 to i32
  %2732 = icmp sgt i32 %2731, 0
  br i1 %2732, label %2724, label %2733, !llvm.loop !671

2733:                                             ; preds = %2724, %2715
  %2734 = phi i32 [ %2719, %2715 ], [ %2729, %2724 ]
  %2735 = and i64 %2684, 4294967295
  %2736 = getelementptr inbounds i32, ptr %6, i64 %2735
  %2737 = load i32, ptr %2736, align 4, !tbaa !6
  %2738 = mul nsw i32 %2737, %2734
  %2739 = add nsw i32 %2738, %2678
  %2740 = icmp sgt i64 %2676, 2
  %2741 = add nsw i64 %2677, -1
  %2742 = add i32 %2675, 1
  br i1 %2740, label %2674, label %2743, !llvm.loop !672

2743:                                             ; preds = %2733, %2671
  %2744 = phi i32 [ %2673, %2671 ], [ %2739, %2733 ]
  %2745 = icmp slt i32 %2744, %5
  br i1 %2745, label %2748, label %2746

2746:                                             ; preds = %2743
  %2747 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1032, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5554

2748:                                             ; preds = %2743
  %2749 = sext i32 %2744 to i64
  %2750 = getelementptr inbounds i32, ptr %2501, i64 %2749
  %2751 = load i32, ptr %2750, align 4, !tbaa !6
  %2752 = load i32, ptr %2503, align 4, !tbaa !6
  %2753 = icmp slt i32 %2752, %2751
  br i1 %2753, label %2754, label %2755

2754:                                             ; preds = %2748
  store i32 %2751, ptr %2503, align 4, !tbaa !6
  br label %2755

2755:                                             ; preds = %2748, %2754
  %2756 = add nuw nsw i32 %2672, 1
  br i1 %2519, label %2757, label %2807

2757:                                             ; preds = %2755
  %2758 = load i32, ptr %4, align 4, !tbaa !6
  %2759 = load i32, ptr %12, align 4, !tbaa !6
  %2760 = add nsw i32 %2759, -1
  %2761 = icmp slt i32 %2758, %2760
  br i1 %2761, label %2784, label %2762

2762:                                             ; preds = %2757
  %2763 = icmp eq i32 %2758, %2760
  br i1 %2763, label %2764, label %2800

2764:                                             ; preds = %2762
  store i32 0, ptr %4, align 4, !tbaa !6
  %2765 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2765, ptr %6, align 4, !tbaa !6
  br i1 %2524, label %2807, label %2766

2766:                                             ; preds = %2764, %2794
  %2767 = phi i64 [ %2798, %2794 ], [ 1, %2764 ]
  %2768 = getelementptr inbounds i32, ptr %4, i64 %2767
  %2769 = load i32, ptr %2768, align 4, !tbaa !6
  %2770 = getelementptr inbounds i32, ptr %12, i64 %2767
  %2771 = load i32, ptr %2770, align 4, !tbaa !6
  %2772 = add nsw i32 %2771, -1
  %2773 = icmp slt i32 %2769, %2772
  br i1 %2773, label %2774, label %2792

2774:                                             ; preds = %2766
  br i1 %2761, label %2784, label %2775

2775:                                             ; preds = %2774
  %2776 = shl i64 %2767, 32
  %2777 = add i64 %2776, -4294967296
  %2778 = ashr exact i64 %2777, 32
  %2779 = getelementptr inbounds i32, ptr %7, i64 %2778
  %2780 = load i32, ptr %2779, align 4, !tbaa !6
  %2781 = getelementptr inbounds i32, ptr %6, i64 %2767
  %2782 = load i32, ptr %2781, align 4, !tbaa !6
  %2783 = add nsw i32 %2782, %2780
  store i32 %2783, ptr %2781, align 4, !tbaa !6
  br label %2802

2784:                                             ; preds = %2757, %2774
  %2785 = phi i32 [ %2769, %2774 ], [ %2758, %2757 ]
  %2786 = phi ptr [ %2768, %2774 ], [ %4, %2757 ]
  %2787 = phi i64 [ %2767, %2774 ], [ 0, %2757 ]
  %2788 = add nsw i32 %2785, 1
  store i32 %2788, ptr %2786, align 4, !tbaa !6
  %2789 = getelementptr inbounds i32, ptr %7, i64 %2787
  %2790 = load i32, ptr %2789, align 4, !tbaa !6
  %2791 = getelementptr inbounds i32, ptr %6, i64 %2787
  br label %2802

2792:                                             ; preds = %2766
  %2793 = icmp eq i32 %2769, %2772
  br i1 %2793, label %2794, label %2800

2794:                                             ; preds = %2792
  store i32 0, ptr %2768, align 4, !tbaa !6
  %2795 = getelementptr inbounds i32, ptr %8, i64 %2767
  %2796 = load i32, ptr %2795, align 4, !tbaa !6
  %2797 = getelementptr inbounds i32, ptr %6, i64 %2767
  store i32 %2796, ptr %2797, align 4, !tbaa !6
  %2798 = add nuw nsw i64 %2767, 1
  %2799 = icmp eq i64 %2798, %2522
  br i1 %2799, label %2807, label %2766, !llvm.loop !673

2800:                                             ; preds = %2762, %2792
  %2801 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1032, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5554

2802:                                             ; preds = %2775, %2784
  %2803 = phi ptr [ %2791, %2784 ], [ %2768, %2775 ]
  %2804 = phi i32 [ %2790, %2784 ], [ 1, %2775 ]
  %2805 = load i32, ptr %2803, align 4, !tbaa !6
  %2806 = add nsw i32 %2805, %2804
  store i32 %2806, ptr %2803, align 4, !tbaa !6
  br label %2807

2807:                                             ; preds = %2794, %2802, %2764, %2755
  %2808 = icmp eq i32 %2756, %5
  br i1 %2808, label %5549, label %2671, !llvm.loop !674

2809:                                             ; preds = %2510
  %2810 = getelementptr inbounds i32, ptr %3, i64 %19
  %2811 = load i32, ptr %2810, align 4, !tbaa !6
  %2812 = icmp eq i32 %2811, 0
  %2813 = icmp sgt i32 %5, 0
  br i1 %2812, label %2823, label %2814

2814:                                             ; preds = %2809
  br i1 %2813, label %2815, label %5549

2815:                                             ; preds = %2814
  %2816 = icmp sgt i32 %13, 1
  %2817 = icmp sgt i32 %13, 0
  %2818 = add i32 %13, -2
  %2819 = zext i32 %2818 to i64
  %2820 = zext i32 %13 to i64
  %2821 = add nuw i32 %5, 1
  %2822 = icmp eq i32 %13, 1
  br label %2965

2823:                                             ; preds = %2809
  br i1 %2813, label %2824, label %5549

2824:                                             ; preds = %2823
  %2825 = icmp sgt i32 %13, 1
  %2826 = icmp sgt i32 %13, 0
  %2827 = add i32 %13, -2
  %2828 = zext i32 %2827 to i64
  %2829 = zext i32 %13 to i64
  %2830 = add nuw i32 %5, 1
  %2831 = icmp eq i32 %13, 1
  br label %2832

2832:                                             ; preds = %2824, %2963
  %2833 = phi i32 [ 0, %2824 ], [ %2915, %2963 ]
  %2834 = phi double [ 0.000000e+00, %2824 ], [ %2914, %2963 ]
  %2835 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2825, label %2836, label %2905

2836:                                             ; preds = %2832, %2895
  %2837 = phi i32 [ %2904, %2895 ], [ 0, %2832 ]
  %2838 = phi i64 [ %2846, %2895 ], [ %2829, %2832 ]
  %2839 = phi i64 [ %2903, %2895 ], [ %2828, %2832 ]
  %2840 = phi i32 [ %2901, %2895 ], [ %2835, %2832 ]
  %2841 = sub i32 %2827, %2837
  %2842 = tail call i32 @llvm.smin.i32(i32 %2841, i32 0)
  %2843 = sub i32 %2841, %2842
  %2844 = zext i32 %2843 to i64
  %2845 = add nuw nsw i64 %2844, 1
  %2846 = add nsw i64 %2838, -1
  %2847 = icmp ult i32 %2843, 31
  br i1 %2847, label %2883, label %2848

2848:                                             ; preds = %2836
  %2849 = and i64 %2845, 8589934560
  %2850 = sub i64 %2839, %2849
  br label %2851

2851:                                             ; preds = %2851, %2848
  %2852 = phi i64 [ 0, %2848 ], [ %2875, %2851 ]
  %2853 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2848 ], [ %2871, %2851 ]
  %2854 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2848 ], [ %2872, %2851 ]
  %2855 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2848 ], [ %2873, %2851 ]
  %2856 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2848 ], [ %2874, %2851 ]
  %2857 = sub i64 %2839, %2852
  %2858 = getelementptr inbounds i32, ptr %9, i64 %2857
  %2859 = getelementptr inbounds i32, ptr %2858, i64 -7
  %2860 = load <8 x i32>, ptr %2859, align 4, !tbaa !6
  %2861 = shufflevector <8 x i32> %2860, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2862 = getelementptr inbounds i32, ptr %2858, i64 -15
  %2863 = load <8 x i32>, ptr %2862, align 4, !tbaa !6
  %2864 = shufflevector <8 x i32> %2863, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2865 = getelementptr inbounds i32, ptr %2858, i64 -23
  %2866 = load <8 x i32>, ptr %2865, align 4, !tbaa !6
  %2867 = shufflevector <8 x i32> %2866, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2868 = getelementptr inbounds i32, ptr %2858, i64 -31
  %2869 = load <8 x i32>, ptr %2868, align 4, !tbaa !6
  %2870 = shufflevector <8 x i32> %2869, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2871 = mul <8 x i32> %2861, %2853
  %2872 = mul <8 x i32> %2864, %2854
  %2873 = mul <8 x i32> %2867, %2855
  %2874 = mul <8 x i32> %2870, %2856
  %2875 = add nuw i64 %2852, 32
  %2876 = icmp eq i64 %2875, %2849
  br i1 %2876, label %2877, label %2851, !llvm.loop !675

2877:                                             ; preds = %2851
  %2878 = mul <8 x i32> %2872, %2871
  %2879 = mul <8 x i32> %2873, %2878
  %2880 = mul <8 x i32> %2874, %2879
  %2881 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2880)
  %2882 = icmp eq i64 %2845, %2849
  br i1 %2882, label %2895, label %2883

2883:                                             ; preds = %2836, %2877
  %2884 = phi i64 [ %2839, %2836 ], [ %2850, %2877 ]
  %2885 = phi i32 [ 1, %2836 ], [ %2881, %2877 ]
  br label %2886

2886:                                             ; preds = %2883, %2886
  %2887 = phi i64 [ %2892, %2886 ], [ %2884, %2883 ]
  %2888 = phi i32 [ %2891, %2886 ], [ %2885, %2883 ]
  %2889 = getelementptr inbounds i32, ptr %9, i64 %2887
  %2890 = load i32, ptr %2889, align 4, !tbaa !6
  %2891 = mul nsw i32 %2890, %2888
  %2892 = add nsw i64 %2887, -1
  %2893 = trunc i64 %2887 to i32
  %2894 = icmp sgt i32 %2893, 0
  br i1 %2894, label %2886, label %2895, !llvm.loop !676

2895:                                             ; preds = %2886, %2877
  %2896 = phi i32 [ %2881, %2877 ], [ %2891, %2886 ]
  %2897 = and i64 %2846, 4294967295
  %2898 = getelementptr inbounds i32, ptr %6, i64 %2897
  %2899 = load i32, ptr %2898, align 4, !tbaa !6
  %2900 = mul nsw i32 %2899, %2896
  %2901 = add nsw i32 %2900, %2840
  %2902 = icmp sgt i64 %2838, 2
  %2903 = add nsw i64 %2839, -1
  %2904 = add i32 %2837, 1
  br i1 %2902, label %2836, label %2905, !llvm.loop !677

2905:                                             ; preds = %2895, %2832
  %2906 = phi i32 [ %2835, %2832 ], [ %2901, %2895 ]
  %2907 = sext i32 %2906 to i64
  %2908 = getelementptr inbounds i32, ptr %2501, i64 %2907
  %2909 = load i32, ptr %2908, align 4, !tbaa !6
  %2910 = load i32, ptr %2503, align 4, !tbaa !6
  %2911 = icmp slt i32 %2910, %2909
  br i1 %2911, label %2912, label %2913

2912:                                             ; preds = %2905
  store i32 %2909, ptr %2503, align 4, !tbaa !6
  br label %2913

2913:                                             ; preds = %2912, %2905
  %2914 = fadd fast double %2834, 1.000000e+00
  %2915 = add nuw nsw i32 %2833, 1
  br i1 %2826, label %2916, label %2963

2916:                                             ; preds = %2913
  %2917 = load i32, ptr %4, align 4, !tbaa !6
  %2918 = load i32, ptr %12, align 4, !tbaa !6
  %2919 = add nsw i32 %2918, -1
  %2920 = icmp slt i32 %2917, %2919
  br i1 %2920, label %2940, label %2921

2921:                                             ; preds = %2916
  %2922 = icmp eq i32 %2917, %2919
  br i1 %2922, label %2923, label %2956

2923:                                             ; preds = %2921
  store i32 0, ptr %4, align 4, !tbaa !6
  %2924 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2924, ptr %6, align 4, !tbaa !6
  br i1 %2831, label %2963, label %2925

2925:                                             ; preds = %2923, %2950
  %2926 = phi i64 [ %2954, %2950 ], [ 1, %2923 ]
  %2927 = getelementptr inbounds i32, ptr %4, i64 %2926
  %2928 = load i32, ptr %2927, align 4, !tbaa !6
  %2929 = getelementptr inbounds i32, ptr %12, i64 %2926
  %2930 = load i32, ptr %2929, align 4, !tbaa !6
  %2931 = add nsw i32 %2930, -1
  %2932 = icmp slt i32 %2928, %2931
  br i1 %2932, label %2933, label %2948

2933:                                             ; preds = %2925
  br i1 %2920, label %2940, label %2934

2934:                                             ; preds = %2933
  %2935 = getelementptr inbounds i32, ptr %7, i64 %2926
  %2936 = load i32, ptr %2935, align 4, !tbaa !6
  %2937 = getelementptr inbounds i32, ptr %6, i64 %2926
  %2938 = load i32, ptr %2937, align 4, !tbaa !6
  %2939 = add nsw i32 %2938, %2936
  store i32 %2939, ptr %2937, align 4, !tbaa !6
  br label %2958

2940:                                             ; preds = %2916, %2933
  %2941 = phi i32 [ %2928, %2933 ], [ %2917, %2916 ]
  %2942 = phi ptr [ %2927, %2933 ], [ %4, %2916 ]
  %2943 = phi i64 [ %2926, %2933 ], [ 0, %2916 ]
  %2944 = add nsw i32 %2941, 1
  store i32 %2944, ptr %2942, align 4, !tbaa !6
  %2945 = getelementptr inbounds i32, ptr %7, i64 %2943
  %2946 = load i32, ptr %2945, align 4, !tbaa !6
  %2947 = getelementptr inbounds i32, ptr %6, i64 %2943
  br label %2958

2948:                                             ; preds = %2925
  %2949 = icmp eq i32 %2928, %2931
  br i1 %2949, label %2950, label %2956

2950:                                             ; preds = %2948
  store i32 0, ptr %2927, align 4, !tbaa !6
  %2951 = getelementptr inbounds i32, ptr %8, i64 %2926
  %2952 = load i32, ptr %2951, align 4, !tbaa !6
  %2953 = getelementptr inbounds i32, ptr %6, i64 %2926
  store i32 %2952, ptr %2953, align 4, !tbaa !6
  %2954 = add nuw nsw i64 %2926, 1
  %2955 = icmp eq i64 %2954, %2829
  br i1 %2955, label %2963, label %2925, !llvm.loop !678

2956:                                             ; preds = %2921, %2948
  %2957 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1032, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5554

2958:                                             ; preds = %2934, %2940
  %2959 = phi ptr [ %2947, %2940 ], [ %2927, %2934 ]
  %2960 = phi i32 [ %2946, %2940 ], [ 1, %2934 ]
  %2961 = load i32, ptr %2959, align 4, !tbaa !6
  %2962 = add nsw i32 %2961, %2960
  store i32 %2962, ptr %2959, align 4, !tbaa !6
  br label %2963

2963:                                             ; preds = %2950, %2958, %2923, %2913
  %2964 = icmp eq i32 %2915, %5
  br i1 %2964, label %5549, label %2832, !llvm.loop !679

2965:                                             ; preds = %2815, %3101
  %2966 = phi i32 [ 0, %2815 ], [ %3050, %3101 ]
  %2967 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2816, label %2968, label %3037

2968:                                             ; preds = %2965, %3027
  %2969 = phi i32 [ %3036, %3027 ], [ 0, %2965 ]
  %2970 = phi i64 [ %2978, %3027 ], [ %2820, %2965 ]
  %2971 = phi i64 [ %3035, %3027 ], [ %2819, %2965 ]
  %2972 = phi i32 [ %3033, %3027 ], [ %2967, %2965 ]
  %2973 = sub i32 %2818, %2969
  %2974 = tail call i32 @llvm.smin.i32(i32 %2973, i32 0)
  %2975 = sub i32 %2973, %2974
  %2976 = zext i32 %2975 to i64
  %2977 = add nuw nsw i64 %2976, 1
  %2978 = add nsw i64 %2970, -1
  %2979 = icmp ult i32 %2975, 31
  br i1 %2979, label %3015, label %2980

2980:                                             ; preds = %2968
  %2981 = and i64 %2977, 8589934560
  %2982 = sub i64 %2971, %2981
  br label %2983

2983:                                             ; preds = %2983, %2980
  %2984 = phi i64 [ 0, %2980 ], [ %3007, %2983 ]
  %2985 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2980 ], [ %3003, %2983 ]
  %2986 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2980 ], [ %3004, %2983 ]
  %2987 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2980 ], [ %3005, %2983 ]
  %2988 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2980 ], [ %3006, %2983 ]
  %2989 = sub i64 %2971, %2984
  %2990 = getelementptr inbounds i32, ptr %11, i64 %2989
  %2991 = getelementptr inbounds i32, ptr %2990, i64 -7
  %2992 = load <8 x i32>, ptr %2991, align 4, !tbaa !6
  %2993 = shufflevector <8 x i32> %2992, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2994 = getelementptr inbounds i32, ptr %2990, i64 -15
  %2995 = load <8 x i32>, ptr %2994, align 4, !tbaa !6
  %2996 = shufflevector <8 x i32> %2995, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2997 = getelementptr inbounds i32, ptr %2990, i64 -23
  %2998 = load <8 x i32>, ptr %2997, align 4, !tbaa !6
  %2999 = shufflevector <8 x i32> %2998, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3000 = getelementptr inbounds i32, ptr %2990, i64 -31
  %3001 = load <8 x i32>, ptr %3000, align 4, !tbaa !6
  %3002 = shufflevector <8 x i32> %3001, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3003 = mul <8 x i32> %2993, %2985
  %3004 = mul <8 x i32> %2996, %2986
  %3005 = mul <8 x i32> %2999, %2987
  %3006 = mul <8 x i32> %3002, %2988
  %3007 = add nuw i64 %2984, 32
  %3008 = icmp eq i64 %3007, %2981
  br i1 %3008, label %3009, label %2983, !llvm.loop !680

3009:                                             ; preds = %2983
  %3010 = mul <8 x i32> %3004, %3003
  %3011 = mul <8 x i32> %3005, %3010
  %3012 = mul <8 x i32> %3006, %3011
  %3013 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3012)
  %3014 = icmp eq i64 %2977, %2981
  br i1 %3014, label %3027, label %3015

3015:                                             ; preds = %2968, %3009
  %3016 = phi i64 [ %2971, %2968 ], [ %2982, %3009 ]
  %3017 = phi i32 [ 1, %2968 ], [ %3013, %3009 ]
  br label %3018

3018:                                             ; preds = %3015, %3018
  %3019 = phi i64 [ %3024, %3018 ], [ %3016, %3015 ]
  %3020 = phi i32 [ %3023, %3018 ], [ %3017, %3015 ]
  %3021 = getelementptr inbounds i32, ptr %11, i64 %3019
  %3022 = load i32, ptr %3021, align 4, !tbaa !6
  %3023 = mul nsw i32 %3022, %3020
  %3024 = add nsw i64 %3019, -1
  %3025 = trunc i64 %3019 to i32
  %3026 = icmp sgt i32 %3025, 0
  br i1 %3026, label %3018, label %3027, !llvm.loop !681

3027:                                             ; preds = %3018, %3009
  %3028 = phi i32 [ %3013, %3009 ], [ %3023, %3018 ]
  %3029 = and i64 %2978, 4294967295
  %3030 = getelementptr inbounds i32, ptr %6, i64 %3029
  %3031 = load i32, ptr %3030, align 4, !tbaa !6
  %3032 = mul nsw i32 %3031, %3028
  %3033 = add nsw i32 %3032, %2972
  %3034 = icmp sgt i64 %2970, 2
  %3035 = add nsw i64 %2971, -1
  %3036 = add i32 %2969, 1
  br i1 %3034, label %2968, label %3037, !llvm.loop !682

3037:                                             ; preds = %3027, %2965
  %3038 = phi i32 [ %2967, %2965 ], [ %3033, %3027 ]
  %3039 = icmp slt i32 %3038, %5
  br i1 %3039, label %3042, label %3040

3040:                                             ; preds = %3037
  %3041 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1032, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5554

3042:                                             ; preds = %3037
  %3043 = sext i32 %3038 to i64
  %3044 = getelementptr inbounds i32, ptr %2501, i64 %3043
  %3045 = load i32, ptr %3044, align 4, !tbaa !6
  %3046 = load i32, ptr %2503, align 4, !tbaa !6
  %3047 = icmp slt i32 %3046, %3045
  br i1 %3047, label %3048, label %3049

3048:                                             ; preds = %3042
  store i32 %3045, ptr %2503, align 4, !tbaa !6
  br label %3049

3049:                                             ; preds = %3048, %3042
  %3050 = add nuw nsw i32 %2966, 1
  br i1 %2817, label %3051, label %3101

3051:                                             ; preds = %3049
  %3052 = load i32, ptr %4, align 4, !tbaa !6
  %3053 = load i32, ptr %12, align 4, !tbaa !6
  %3054 = add nsw i32 %3053, -1
  %3055 = icmp slt i32 %3052, %3054
  br i1 %3055, label %3078, label %3056

3056:                                             ; preds = %3051
  %3057 = icmp eq i32 %3052, %3054
  br i1 %3057, label %3058, label %3094

3058:                                             ; preds = %3056
  store i32 0, ptr %4, align 4, !tbaa !6
  %3059 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3059, ptr %6, align 4, !tbaa !6
  br i1 %2822, label %3101, label %3060

3060:                                             ; preds = %3058, %3088
  %3061 = phi i64 [ %3092, %3088 ], [ 1, %3058 ]
  %3062 = getelementptr inbounds i32, ptr %4, i64 %3061
  %3063 = load i32, ptr %3062, align 4, !tbaa !6
  %3064 = getelementptr inbounds i32, ptr %12, i64 %3061
  %3065 = load i32, ptr %3064, align 4, !tbaa !6
  %3066 = add nsw i32 %3065, -1
  %3067 = icmp slt i32 %3063, %3066
  br i1 %3067, label %3068, label %3086

3068:                                             ; preds = %3060
  br i1 %3055, label %3078, label %3069

3069:                                             ; preds = %3068
  %3070 = shl i64 %3061, 32
  %3071 = add i64 %3070, -4294967296
  %3072 = ashr exact i64 %3071, 32
  %3073 = getelementptr inbounds i32, ptr %7, i64 %3072
  %3074 = load i32, ptr %3073, align 4, !tbaa !6
  %3075 = getelementptr inbounds i32, ptr %6, i64 %3061
  %3076 = load i32, ptr %3075, align 4, !tbaa !6
  %3077 = add nsw i32 %3076, %3074
  store i32 %3077, ptr %3075, align 4, !tbaa !6
  br label %3096

3078:                                             ; preds = %3051, %3068
  %3079 = phi i32 [ %3063, %3068 ], [ %3052, %3051 ]
  %3080 = phi ptr [ %3062, %3068 ], [ %4, %3051 ]
  %3081 = phi i64 [ %3061, %3068 ], [ 0, %3051 ]
  %3082 = add nsw i32 %3079, 1
  store i32 %3082, ptr %3080, align 4, !tbaa !6
  %3083 = getelementptr inbounds i32, ptr %7, i64 %3081
  %3084 = load i32, ptr %3083, align 4, !tbaa !6
  %3085 = getelementptr inbounds i32, ptr %6, i64 %3081
  br label %3096

3086:                                             ; preds = %3060
  %3087 = icmp eq i32 %3063, %3066
  br i1 %3087, label %3088, label %3094

3088:                                             ; preds = %3086
  store i32 0, ptr %3062, align 4, !tbaa !6
  %3089 = getelementptr inbounds i32, ptr %8, i64 %3061
  %3090 = load i32, ptr %3089, align 4, !tbaa !6
  %3091 = getelementptr inbounds i32, ptr %6, i64 %3061
  store i32 %3090, ptr %3091, align 4, !tbaa !6
  %3092 = add nuw nsw i64 %3061, 1
  %3093 = icmp eq i64 %3092, %2820
  br i1 %3093, label %3101, label %3060, !llvm.loop !683

3094:                                             ; preds = %3056, %3086
  %3095 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1032, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5554

3096:                                             ; preds = %3069, %3078
  %3097 = phi ptr [ %3085, %3078 ], [ %3062, %3069 ]
  %3098 = phi i32 [ %3084, %3078 ], [ 1, %3069 ]
  %3099 = load i32, ptr %3097, align 4, !tbaa !6
  %3100 = add nsw i32 %3099, %3098
  store i32 %3100, ptr %3097, align 4, !tbaa !6
  br label %3101

3101:                                             ; preds = %3088, %3096, %3058, %3049
  %3102 = icmp eq i32 %3050, %5
  br i1 %3102, label %5549, label %2965, !llvm.loop !684

3103:                                             ; preds = %2510
  %3104 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1032, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5549

3105:                                             ; preds = %18
  %3106 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3107 = load ptr, ptr %3106, align 8, !tbaa !10
  %3108 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3109 = load ptr, ptr %3108, align 8, !tbaa !10
  %3110 = load i32, ptr %3107, align 4, !tbaa !6
  %3111 = sext i32 %3110 to i64
  store i64 %3111, ptr %3109, align 8, !tbaa !121
  %3112 = icmp eq i32 %13, 0
  br i1 %3112, label %5549, label %3113

3113:                                             ; preds = %3105
  switch i32 %1, label %3714 [
    i32 1, label %3114
    i32 0, label %3416
  ]

3114:                                             ; preds = %3113
  %3115 = getelementptr inbounds i32, ptr %3, i64 %19
  %3116 = load i32, ptr %3115, align 4, !tbaa !6
  %3117 = icmp eq i32 %3116, 0
  %3118 = icmp sgt i32 %5, 0
  br i1 %3117, label %3128, label %3119

3119:                                             ; preds = %3114
  br i1 %3118, label %3120, label %5549

3120:                                             ; preds = %3119
  %3121 = icmp sgt i32 %13, 1
  %3122 = icmp sgt i32 %13, 0
  %3123 = add i32 %13, -2
  %3124 = zext i32 %3123 to i64
  %3125 = zext i32 %13 to i64
  %3126 = add nuw i32 %5, 1
  %3127 = icmp eq i32 %13, 1
  br label %3276

3128:                                             ; preds = %3114
  br i1 %3118, label %3129, label %5549

3129:                                             ; preds = %3128
  %3130 = icmp sgt i32 %13, 1
  %3131 = icmp sgt i32 %13, 0
  %3132 = add i32 %13, -2
  %3133 = zext i32 %3132 to i64
  %3134 = zext i32 %13 to i64
  %3135 = add nuw i32 %5, 1
  %3136 = icmp eq i32 %13, 1
  br label %3137

3137:                                             ; preds = %3129, %3274
  %3138 = phi i64 [ %3111, %3129 ], [ %3224, %3274 ]
  %3139 = phi i32 [ 0, %3129 ], [ %3226, %3274 ]
  %3140 = phi double [ 0.000000e+00, %3129 ], [ %3225, %3274 ]
  %3141 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3130, label %3142, label %3211

3142:                                             ; preds = %3137, %3201
  %3143 = phi i32 [ %3210, %3201 ], [ 0, %3137 ]
  %3144 = phi i64 [ %3152, %3201 ], [ %3134, %3137 ]
  %3145 = phi i64 [ %3209, %3201 ], [ %3133, %3137 ]
  %3146 = phi i32 [ %3207, %3201 ], [ %3141, %3137 ]
  %3147 = sub i32 %3132, %3143
  %3148 = tail call i32 @llvm.smin.i32(i32 %3147, i32 0)
  %3149 = sub i32 %3147, %3148
  %3150 = zext i32 %3149 to i64
  %3151 = add nuw nsw i64 %3150, 1
  %3152 = add nsw i64 %3144, -1
  %3153 = icmp ult i32 %3149, 31
  br i1 %3153, label %3189, label %3154

3154:                                             ; preds = %3142
  %3155 = and i64 %3151, 8589934560
  %3156 = sub i64 %3145, %3155
  br label %3157

3157:                                             ; preds = %3157, %3154
  %3158 = phi i64 [ 0, %3154 ], [ %3181, %3157 ]
  %3159 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3154 ], [ %3177, %3157 ]
  %3160 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3154 ], [ %3178, %3157 ]
  %3161 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3154 ], [ %3179, %3157 ]
  %3162 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3154 ], [ %3180, %3157 ]
  %3163 = sub i64 %3145, %3158
  %3164 = getelementptr inbounds i32, ptr %9, i64 %3163
  %3165 = getelementptr inbounds i32, ptr %3164, i64 -7
  %3166 = load <8 x i32>, ptr %3165, align 4, !tbaa !6
  %3167 = shufflevector <8 x i32> %3166, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3168 = getelementptr inbounds i32, ptr %3164, i64 -15
  %3169 = load <8 x i32>, ptr %3168, align 4, !tbaa !6
  %3170 = shufflevector <8 x i32> %3169, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3171 = getelementptr inbounds i32, ptr %3164, i64 -23
  %3172 = load <8 x i32>, ptr %3171, align 4, !tbaa !6
  %3173 = shufflevector <8 x i32> %3172, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3174 = getelementptr inbounds i32, ptr %3164, i64 -31
  %3175 = load <8 x i32>, ptr %3174, align 4, !tbaa !6
  %3176 = shufflevector <8 x i32> %3175, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3177 = mul <8 x i32> %3167, %3159
  %3178 = mul <8 x i32> %3170, %3160
  %3179 = mul <8 x i32> %3173, %3161
  %3180 = mul <8 x i32> %3176, %3162
  %3181 = add nuw i64 %3158, 32
  %3182 = icmp eq i64 %3181, %3155
  br i1 %3182, label %3183, label %3157, !llvm.loop !685

3183:                                             ; preds = %3157
  %3184 = mul <8 x i32> %3178, %3177
  %3185 = mul <8 x i32> %3179, %3184
  %3186 = mul <8 x i32> %3180, %3185
  %3187 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3186)
  %3188 = icmp eq i64 %3151, %3155
  br i1 %3188, label %3201, label %3189

3189:                                             ; preds = %3142, %3183
  %3190 = phi i64 [ %3145, %3142 ], [ %3156, %3183 ]
  %3191 = phi i32 [ 1, %3142 ], [ %3187, %3183 ]
  br label %3192

3192:                                             ; preds = %3189, %3192
  %3193 = phi i64 [ %3198, %3192 ], [ %3190, %3189 ]
  %3194 = phi i32 [ %3197, %3192 ], [ %3191, %3189 ]
  %3195 = getelementptr inbounds i32, ptr %9, i64 %3193
  %3196 = load i32, ptr %3195, align 4, !tbaa !6
  %3197 = mul nsw i32 %3196, %3194
  %3198 = add nsw i64 %3193, -1
  %3199 = trunc i64 %3193 to i32
  %3200 = icmp sgt i32 %3199, 0
  br i1 %3200, label %3192, label %3201, !llvm.loop !686

3201:                                             ; preds = %3192, %3183
  %3202 = phi i32 [ %3187, %3183 ], [ %3197, %3192 ]
  %3203 = and i64 %3152, 4294967295
  %3204 = getelementptr inbounds i32, ptr %6, i64 %3203
  %3205 = load i32, ptr %3204, align 4, !tbaa !6
  %3206 = mul nsw i32 %3205, %3202
  %3207 = add nsw i32 %3206, %3146
  %3208 = icmp sgt i64 %3144, 2
  %3209 = add nsw i64 %3145, -1
  %3210 = add i32 %3143, 1
  br i1 %3208, label %3142, label %3211, !llvm.loop !687

3211:                                             ; preds = %3201, %3137
  %3212 = phi i32 [ %3141, %3137 ], [ %3207, %3201 ]
  %3213 = sext i32 %3212 to i64
  %3214 = getelementptr inbounds double, ptr %2, i64 %3213
  %3215 = load double, ptr %3214, align 8, !tbaa !19
  %3216 = getelementptr inbounds i32, ptr %3107, i64 %3213
  %3217 = load i32, ptr %3216, align 4, !tbaa !6
  %3218 = sext i32 %3217 to i64
  %3219 = fcmp fast one double %3215, 0.000000e+00
  %3220 = icmp slt i64 %3138, %3218
  %3221 = select i1 %3219, i1 %3220, i1 false
  br i1 %3221, label %3222, label %3223

3222:                                             ; preds = %3211
  store i64 %3218, ptr %3109, align 8, !tbaa !121
  br label %3223

3223:                                             ; preds = %3222, %3211
  %3224 = phi i64 [ %3218, %3222 ], [ %3138, %3211 ]
  %3225 = fadd fast double %3215, %3140
  %3226 = add nuw nsw i32 %3139, 1
  br i1 %3131, label %3227, label %3274

3227:                                             ; preds = %3223
  %3228 = load i32, ptr %4, align 4, !tbaa !6
  %3229 = load i32, ptr %12, align 4, !tbaa !6
  %3230 = add nsw i32 %3229, -1
  %3231 = icmp slt i32 %3228, %3230
  br i1 %3231, label %3251, label %3232

3232:                                             ; preds = %3227
  %3233 = icmp eq i32 %3228, %3230
  br i1 %3233, label %3234, label %3267

3234:                                             ; preds = %3232
  store i32 0, ptr %4, align 4, !tbaa !6
  %3235 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3235, ptr %6, align 4, !tbaa !6
  br i1 %3136, label %3274, label %3236

3236:                                             ; preds = %3234, %3261
  %3237 = phi i64 [ %3265, %3261 ], [ 1, %3234 ]
  %3238 = getelementptr inbounds i32, ptr %4, i64 %3237
  %3239 = load i32, ptr %3238, align 4, !tbaa !6
  %3240 = getelementptr inbounds i32, ptr %12, i64 %3237
  %3241 = load i32, ptr %3240, align 4, !tbaa !6
  %3242 = add nsw i32 %3241, -1
  %3243 = icmp slt i32 %3239, %3242
  br i1 %3243, label %3244, label %3259

3244:                                             ; preds = %3236
  br i1 %3231, label %3251, label %3245

3245:                                             ; preds = %3244
  %3246 = getelementptr inbounds i32, ptr %7, i64 %3237
  %3247 = load i32, ptr %3246, align 4, !tbaa !6
  %3248 = getelementptr inbounds i32, ptr %6, i64 %3237
  %3249 = load i32, ptr %3248, align 4, !tbaa !6
  %3250 = add nsw i32 %3249, %3247
  store i32 %3250, ptr %3248, align 4, !tbaa !6
  br label %3269

3251:                                             ; preds = %3227, %3244
  %3252 = phi i32 [ %3239, %3244 ], [ %3228, %3227 ]
  %3253 = phi ptr [ %3238, %3244 ], [ %4, %3227 ]
  %3254 = phi i64 [ %3237, %3244 ], [ 0, %3227 ]
  %3255 = add nsw i32 %3252, 1
  store i32 %3255, ptr %3253, align 4, !tbaa !6
  %3256 = getelementptr inbounds i32, ptr %7, i64 %3254
  %3257 = load i32, ptr %3256, align 4, !tbaa !6
  %3258 = getelementptr inbounds i32, ptr %6, i64 %3254
  br label %3269

3259:                                             ; preds = %3236
  %3260 = icmp eq i32 %3239, %3242
  br i1 %3260, label %3261, label %3267

3261:                                             ; preds = %3259
  store i32 0, ptr %3238, align 4, !tbaa !6
  %3262 = getelementptr inbounds i32, ptr %8, i64 %3237
  %3263 = load i32, ptr %3262, align 4, !tbaa !6
  %3264 = getelementptr inbounds i32, ptr %6, i64 %3237
  store i32 %3263, ptr %3264, align 4, !tbaa !6
  %3265 = add nuw nsw i64 %3237, 1
  %3266 = icmp eq i64 %3265, %3134
  br i1 %3266, label %3274, label %3236, !llvm.loop !688

3267:                                             ; preds = %3232, %3259
  %3268 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1037, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5554

3269:                                             ; preds = %3245, %3251
  %3270 = phi ptr [ %3258, %3251 ], [ %3238, %3245 ]
  %3271 = phi i32 [ %3257, %3251 ], [ 1, %3245 ]
  %3272 = load i32, ptr %3270, align 4, !tbaa !6
  %3273 = add nsw i32 %3272, %3271
  store i32 %3273, ptr %3270, align 4, !tbaa !6
  br label %3274

3274:                                             ; preds = %3261, %3269, %3234, %3223
  %3275 = icmp eq i32 %3226, %5
  br i1 %3275, label %5549, label %3137, !llvm.loop !689

3276:                                             ; preds = %3120, %3414
  %3277 = phi i64 [ %3111, %3120 ], [ %3362, %3414 ]
  %3278 = phi i32 [ 0, %3120 ], [ %3363, %3414 ]
  %3279 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3121, label %3280, label %3349

3280:                                             ; preds = %3276, %3339
  %3281 = phi i32 [ %3348, %3339 ], [ 0, %3276 ]
  %3282 = phi i64 [ %3290, %3339 ], [ %3125, %3276 ]
  %3283 = phi i64 [ %3347, %3339 ], [ %3124, %3276 ]
  %3284 = phi i32 [ %3345, %3339 ], [ %3279, %3276 ]
  %3285 = sub i32 %3123, %3281
  %3286 = tail call i32 @llvm.smin.i32(i32 %3285, i32 0)
  %3287 = sub i32 %3285, %3286
  %3288 = zext i32 %3287 to i64
  %3289 = add nuw nsw i64 %3288, 1
  %3290 = add nsw i64 %3282, -1
  %3291 = icmp ult i32 %3287, 31
  br i1 %3291, label %3327, label %3292

3292:                                             ; preds = %3280
  %3293 = and i64 %3289, 8589934560
  %3294 = sub i64 %3283, %3293
  br label %3295

3295:                                             ; preds = %3295, %3292
  %3296 = phi i64 [ 0, %3292 ], [ %3319, %3295 ]
  %3297 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3292 ], [ %3315, %3295 ]
  %3298 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3292 ], [ %3316, %3295 ]
  %3299 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3292 ], [ %3317, %3295 ]
  %3300 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3292 ], [ %3318, %3295 ]
  %3301 = sub i64 %3283, %3296
  %3302 = getelementptr inbounds i32, ptr %11, i64 %3301
  %3303 = getelementptr inbounds i32, ptr %3302, i64 -7
  %3304 = load <8 x i32>, ptr %3303, align 4, !tbaa !6
  %3305 = shufflevector <8 x i32> %3304, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3306 = getelementptr inbounds i32, ptr %3302, i64 -15
  %3307 = load <8 x i32>, ptr %3306, align 4, !tbaa !6
  %3308 = shufflevector <8 x i32> %3307, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3309 = getelementptr inbounds i32, ptr %3302, i64 -23
  %3310 = load <8 x i32>, ptr %3309, align 4, !tbaa !6
  %3311 = shufflevector <8 x i32> %3310, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3312 = getelementptr inbounds i32, ptr %3302, i64 -31
  %3313 = load <8 x i32>, ptr %3312, align 4, !tbaa !6
  %3314 = shufflevector <8 x i32> %3313, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3315 = mul <8 x i32> %3305, %3297
  %3316 = mul <8 x i32> %3308, %3298
  %3317 = mul <8 x i32> %3311, %3299
  %3318 = mul <8 x i32> %3314, %3300
  %3319 = add nuw i64 %3296, 32
  %3320 = icmp eq i64 %3319, %3293
  br i1 %3320, label %3321, label %3295, !llvm.loop !690

3321:                                             ; preds = %3295
  %3322 = mul <8 x i32> %3316, %3315
  %3323 = mul <8 x i32> %3317, %3322
  %3324 = mul <8 x i32> %3318, %3323
  %3325 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3324)
  %3326 = icmp eq i64 %3289, %3293
  br i1 %3326, label %3339, label %3327

3327:                                             ; preds = %3280, %3321
  %3328 = phi i64 [ %3283, %3280 ], [ %3294, %3321 ]
  %3329 = phi i32 [ 1, %3280 ], [ %3325, %3321 ]
  br label %3330

3330:                                             ; preds = %3327, %3330
  %3331 = phi i64 [ %3336, %3330 ], [ %3328, %3327 ]
  %3332 = phi i32 [ %3335, %3330 ], [ %3329, %3327 ]
  %3333 = getelementptr inbounds i32, ptr %11, i64 %3331
  %3334 = load i32, ptr %3333, align 4, !tbaa !6
  %3335 = mul nsw i32 %3334, %3332
  %3336 = add nsw i64 %3331, -1
  %3337 = trunc i64 %3331 to i32
  %3338 = icmp sgt i32 %3337, 0
  br i1 %3338, label %3330, label %3339, !llvm.loop !691

3339:                                             ; preds = %3330, %3321
  %3340 = phi i32 [ %3325, %3321 ], [ %3335, %3330 ]
  %3341 = and i64 %3290, 4294967295
  %3342 = getelementptr inbounds i32, ptr %6, i64 %3341
  %3343 = load i32, ptr %3342, align 4, !tbaa !6
  %3344 = mul nsw i32 %3343, %3340
  %3345 = add nsw i32 %3344, %3284
  %3346 = icmp sgt i64 %3282, 2
  %3347 = add nsw i64 %3283, -1
  %3348 = add i32 %3281, 1
  br i1 %3346, label %3280, label %3349, !llvm.loop !692

3349:                                             ; preds = %3339, %3276
  %3350 = phi i32 [ %3279, %3276 ], [ %3345, %3339 ]
  %3351 = icmp slt i32 %3350, %5
  br i1 %3351, label %3354, label %3352

3352:                                             ; preds = %3349
  %3353 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1037, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5554

3354:                                             ; preds = %3349
  %3355 = sext i32 %3350 to i64
  %3356 = getelementptr inbounds i32, ptr %3107, i64 %3355
  %3357 = load i32, ptr %3356, align 4, !tbaa !6
  %3358 = sext i32 %3357 to i64
  %3359 = icmp slt i64 %3277, %3358
  br i1 %3359, label %3360, label %3361

3360:                                             ; preds = %3354
  store i64 %3358, ptr %3109, align 8, !tbaa !121
  br label %3361

3361:                                             ; preds = %3354, %3360
  %3362 = phi i64 [ %3277, %3354 ], [ %3358, %3360 ]
  %3363 = add nuw nsw i32 %3278, 1
  br i1 %3122, label %3364, label %3414

3364:                                             ; preds = %3361
  %3365 = load i32, ptr %4, align 4, !tbaa !6
  %3366 = load i32, ptr %12, align 4, !tbaa !6
  %3367 = add nsw i32 %3366, -1
  %3368 = icmp slt i32 %3365, %3367
  br i1 %3368, label %3391, label %3369

3369:                                             ; preds = %3364
  %3370 = icmp eq i32 %3365, %3367
  br i1 %3370, label %3371, label %3407

3371:                                             ; preds = %3369
  store i32 0, ptr %4, align 4, !tbaa !6
  %3372 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3372, ptr %6, align 4, !tbaa !6
  br i1 %3127, label %3414, label %3373

3373:                                             ; preds = %3371, %3401
  %3374 = phi i64 [ %3405, %3401 ], [ 1, %3371 ]
  %3375 = getelementptr inbounds i32, ptr %4, i64 %3374
  %3376 = load i32, ptr %3375, align 4, !tbaa !6
  %3377 = getelementptr inbounds i32, ptr %12, i64 %3374
  %3378 = load i32, ptr %3377, align 4, !tbaa !6
  %3379 = add nsw i32 %3378, -1
  %3380 = icmp slt i32 %3376, %3379
  br i1 %3380, label %3381, label %3399

3381:                                             ; preds = %3373
  br i1 %3368, label %3391, label %3382

3382:                                             ; preds = %3381
  %3383 = shl i64 %3374, 32
  %3384 = add i64 %3383, -4294967296
  %3385 = ashr exact i64 %3384, 32
  %3386 = getelementptr inbounds i32, ptr %7, i64 %3385
  %3387 = load i32, ptr %3386, align 4, !tbaa !6
  %3388 = getelementptr inbounds i32, ptr %6, i64 %3374
  %3389 = load i32, ptr %3388, align 4, !tbaa !6
  %3390 = add nsw i32 %3389, %3387
  store i32 %3390, ptr %3388, align 4, !tbaa !6
  br label %3409

3391:                                             ; preds = %3364, %3381
  %3392 = phi i32 [ %3376, %3381 ], [ %3365, %3364 ]
  %3393 = phi ptr [ %3375, %3381 ], [ %4, %3364 ]
  %3394 = phi i64 [ %3374, %3381 ], [ 0, %3364 ]
  %3395 = add nsw i32 %3392, 1
  store i32 %3395, ptr %3393, align 4, !tbaa !6
  %3396 = getelementptr inbounds i32, ptr %7, i64 %3394
  %3397 = load i32, ptr %3396, align 4, !tbaa !6
  %3398 = getelementptr inbounds i32, ptr %6, i64 %3394
  br label %3409

3399:                                             ; preds = %3373
  %3400 = icmp eq i32 %3376, %3379
  br i1 %3400, label %3401, label %3407

3401:                                             ; preds = %3399
  store i32 0, ptr %3375, align 4, !tbaa !6
  %3402 = getelementptr inbounds i32, ptr %8, i64 %3374
  %3403 = load i32, ptr %3402, align 4, !tbaa !6
  %3404 = getelementptr inbounds i32, ptr %6, i64 %3374
  store i32 %3403, ptr %3404, align 4, !tbaa !6
  %3405 = add nuw nsw i64 %3374, 1
  %3406 = icmp eq i64 %3405, %3125
  br i1 %3406, label %3414, label %3373, !llvm.loop !693

3407:                                             ; preds = %3369, %3399
  %3408 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1037, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5554

3409:                                             ; preds = %3382, %3391
  %3410 = phi ptr [ %3398, %3391 ], [ %3375, %3382 ]
  %3411 = phi i32 [ %3397, %3391 ], [ 1, %3382 ]
  %3412 = load i32, ptr %3410, align 4, !tbaa !6
  %3413 = add nsw i32 %3412, %3411
  store i32 %3413, ptr %3410, align 4, !tbaa !6
  br label %3414

3414:                                             ; preds = %3401, %3409, %3371, %3361
  %3415 = icmp eq i32 %3363, %5
  br i1 %3415, label %5549, label %3276, !llvm.loop !694

3416:                                             ; preds = %3113
  %3417 = getelementptr inbounds i32, ptr %3, i64 %19
  %3418 = load i32, ptr %3417, align 4, !tbaa !6
  %3419 = icmp eq i32 %3418, 0
  %3420 = icmp sgt i32 %5, 0
  br i1 %3419, label %3430, label %3421

3421:                                             ; preds = %3416
  br i1 %3420, label %3422, label %5549

3422:                                             ; preds = %3421
  %3423 = icmp sgt i32 %13, 1
  %3424 = icmp sgt i32 %13, 0
  %3425 = add i32 %13, -2
  %3426 = zext i32 %3425 to i64
  %3427 = zext i32 %13 to i64
  %3428 = add nuw i32 %5, 1
  %3429 = icmp eq i32 %13, 1
  br label %3574

3430:                                             ; preds = %3416
  br i1 %3420, label %3431, label %5549

3431:                                             ; preds = %3430
  %3432 = icmp sgt i32 %13, 1
  %3433 = icmp sgt i32 %13, 0
  %3434 = add i32 %13, -2
  %3435 = zext i32 %3434 to i64
  %3436 = zext i32 %13 to i64
  %3437 = add nuw i32 %5, 1
  %3438 = icmp eq i32 %13, 1
  br label %3439

3439:                                             ; preds = %3431, %3572
  %3440 = phi i64 [ %3111, %3431 ], [ %3522, %3572 ]
  %3441 = phi i32 [ 0, %3431 ], [ %3524, %3572 ]
  %3442 = phi double [ 0.000000e+00, %3431 ], [ %3523, %3572 ]
  %3443 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3432, label %3444, label %3513

3444:                                             ; preds = %3439, %3503
  %3445 = phi i32 [ %3512, %3503 ], [ 0, %3439 ]
  %3446 = phi i64 [ %3454, %3503 ], [ %3436, %3439 ]
  %3447 = phi i64 [ %3511, %3503 ], [ %3435, %3439 ]
  %3448 = phi i32 [ %3509, %3503 ], [ %3443, %3439 ]
  %3449 = sub i32 %3434, %3445
  %3450 = tail call i32 @llvm.smin.i32(i32 %3449, i32 0)
  %3451 = sub i32 %3449, %3450
  %3452 = zext i32 %3451 to i64
  %3453 = add nuw nsw i64 %3452, 1
  %3454 = add nsw i64 %3446, -1
  %3455 = icmp ult i32 %3451, 31
  br i1 %3455, label %3491, label %3456

3456:                                             ; preds = %3444
  %3457 = and i64 %3453, 8589934560
  %3458 = sub i64 %3447, %3457
  br label %3459

3459:                                             ; preds = %3459, %3456
  %3460 = phi i64 [ 0, %3456 ], [ %3483, %3459 ]
  %3461 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3456 ], [ %3479, %3459 ]
  %3462 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3456 ], [ %3480, %3459 ]
  %3463 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3456 ], [ %3481, %3459 ]
  %3464 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3456 ], [ %3482, %3459 ]
  %3465 = sub i64 %3447, %3460
  %3466 = getelementptr inbounds i32, ptr %9, i64 %3465
  %3467 = getelementptr inbounds i32, ptr %3466, i64 -7
  %3468 = load <8 x i32>, ptr %3467, align 4, !tbaa !6
  %3469 = shufflevector <8 x i32> %3468, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3470 = getelementptr inbounds i32, ptr %3466, i64 -15
  %3471 = load <8 x i32>, ptr %3470, align 4, !tbaa !6
  %3472 = shufflevector <8 x i32> %3471, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3473 = getelementptr inbounds i32, ptr %3466, i64 -23
  %3474 = load <8 x i32>, ptr %3473, align 4, !tbaa !6
  %3475 = shufflevector <8 x i32> %3474, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3476 = getelementptr inbounds i32, ptr %3466, i64 -31
  %3477 = load <8 x i32>, ptr %3476, align 4, !tbaa !6
  %3478 = shufflevector <8 x i32> %3477, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3479 = mul <8 x i32> %3469, %3461
  %3480 = mul <8 x i32> %3472, %3462
  %3481 = mul <8 x i32> %3475, %3463
  %3482 = mul <8 x i32> %3478, %3464
  %3483 = add nuw i64 %3460, 32
  %3484 = icmp eq i64 %3483, %3457
  br i1 %3484, label %3485, label %3459, !llvm.loop !695

3485:                                             ; preds = %3459
  %3486 = mul <8 x i32> %3480, %3479
  %3487 = mul <8 x i32> %3481, %3486
  %3488 = mul <8 x i32> %3482, %3487
  %3489 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3488)
  %3490 = icmp eq i64 %3453, %3457
  br i1 %3490, label %3503, label %3491

3491:                                             ; preds = %3444, %3485
  %3492 = phi i64 [ %3447, %3444 ], [ %3458, %3485 ]
  %3493 = phi i32 [ 1, %3444 ], [ %3489, %3485 ]
  br label %3494

3494:                                             ; preds = %3491, %3494
  %3495 = phi i64 [ %3500, %3494 ], [ %3492, %3491 ]
  %3496 = phi i32 [ %3499, %3494 ], [ %3493, %3491 ]
  %3497 = getelementptr inbounds i32, ptr %9, i64 %3495
  %3498 = load i32, ptr %3497, align 4, !tbaa !6
  %3499 = mul nsw i32 %3498, %3496
  %3500 = add nsw i64 %3495, -1
  %3501 = trunc i64 %3495 to i32
  %3502 = icmp sgt i32 %3501, 0
  br i1 %3502, label %3494, label %3503, !llvm.loop !696

3503:                                             ; preds = %3494, %3485
  %3504 = phi i32 [ %3489, %3485 ], [ %3499, %3494 ]
  %3505 = and i64 %3454, 4294967295
  %3506 = getelementptr inbounds i32, ptr %6, i64 %3505
  %3507 = load i32, ptr %3506, align 4, !tbaa !6
  %3508 = mul nsw i32 %3507, %3504
  %3509 = add nsw i32 %3508, %3448
  %3510 = icmp sgt i64 %3446, 2
  %3511 = add nsw i64 %3447, -1
  %3512 = add i32 %3445, 1
  br i1 %3510, label %3444, label %3513, !llvm.loop !697

3513:                                             ; preds = %3503, %3439
  %3514 = phi i32 [ %3443, %3439 ], [ %3509, %3503 ]
  %3515 = sext i32 %3514 to i64
  %3516 = getelementptr inbounds i32, ptr %3107, i64 %3515
  %3517 = load i32, ptr %3516, align 4, !tbaa !6
  %3518 = sext i32 %3517 to i64
  %3519 = icmp slt i64 %3440, %3518
  br i1 %3519, label %3520, label %3521

3520:                                             ; preds = %3513
  store i64 %3518, ptr %3109, align 8, !tbaa !121
  br label %3521

3521:                                             ; preds = %3520, %3513
  %3522 = phi i64 [ %3518, %3520 ], [ %3440, %3513 ]
  %3523 = fadd fast double %3442, 1.000000e+00
  %3524 = add nuw nsw i32 %3441, 1
  br i1 %3433, label %3525, label %3572

3525:                                             ; preds = %3521
  %3526 = load i32, ptr %4, align 4, !tbaa !6
  %3527 = load i32, ptr %12, align 4, !tbaa !6
  %3528 = add nsw i32 %3527, -1
  %3529 = icmp slt i32 %3526, %3528
  br i1 %3529, label %3549, label %3530

3530:                                             ; preds = %3525
  %3531 = icmp eq i32 %3526, %3528
  br i1 %3531, label %3532, label %3565

3532:                                             ; preds = %3530
  store i32 0, ptr %4, align 4, !tbaa !6
  %3533 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3533, ptr %6, align 4, !tbaa !6
  br i1 %3438, label %3572, label %3534

3534:                                             ; preds = %3532, %3559
  %3535 = phi i64 [ %3563, %3559 ], [ 1, %3532 ]
  %3536 = getelementptr inbounds i32, ptr %4, i64 %3535
  %3537 = load i32, ptr %3536, align 4, !tbaa !6
  %3538 = getelementptr inbounds i32, ptr %12, i64 %3535
  %3539 = load i32, ptr %3538, align 4, !tbaa !6
  %3540 = add nsw i32 %3539, -1
  %3541 = icmp slt i32 %3537, %3540
  br i1 %3541, label %3542, label %3557

3542:                                             ; preds = %3534
  br i1 %3529, label %3549, label %3543

3543:                                             ; preds = %3542
  %3544 = getelementptr inbounds i32, ptr %7, i64 %3535
  %3545 = load i32, ptr %3544, align 4, !tbaa !6
  %3546 = getelementptr inbounds i32, ptr %6, i64 %3535
  %3547 = load i32, ptr %3546, align 4, !tbaa !6
  %3548 = add nsw i32 %3547, %3545
  store i32 %3548, ptr %3546, align 4, !tbaa !6
  br label %3567

3549:                                             ; preds = %3525, %3542
  %3550 = phi i32 [ %3537, %3542 ], [ %3526, %3525 ]
  %3551 = phi ptr [ %3536, %3542 ], [ %4, %3525 ]
  %3552 = phi i64 [ %3535, %3542 ], [ 0, %3525 ]
  %3553 = add nsw i32 %3550, 1
  store i32 %3553, ptr %3551, align 4, !tbaa !6
  %3554 = getelementptr inbounds i32, ptr %7, i64 %3552
  %3555 = load i32, ptr %3554, align 4, !tbaa !6
  %3556 = getelementptr inbounds i32, ptr %6, i64 %3552
  br label %3567

3557:                                             ; preds = %3534
  %3558 = icmp eq i32 %3537, %3540
  br i1 %3558, label %3559, label %3565

3559:                                             ; preds = %3557
  store i32 0, ptr %3536, align 4, !tbaa !6
  %3560 = getelementptr inbounds i32, ptr %8, i64 %3535
  %3561 = load i32, ptr %3560, align 4, !tbaa !6
  %3562 = getelementptr inbounds i32, ptr %6, i64 %3535
  store i32 %3561, ptr %3562, align 4, !tbaa !6
  %3563 = add nuw nsw i64 %3535, 1
  %3564 = icmp eq i64 %3563, %3436
  br i1 %3564, label %3572, label %3534, !llvm.loop !698

3565:                                             ; preds = %3530, %3557
  %3566 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1037, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5554

3567:                                             ; preds = %3543, %3549
  %3568 = phi ptr [ %3556, %3549 ], [ %3536, %3543 ]
  %3569 = phi i32 [ %3555, %3549 ], [ 1, %3543 ]
  %3570 = load i32, ptr %3568, align 4, !tbaa !6
  %3571 = add nsw i32 %3570, %3569
  store i32 %3571, ptr %3568, align 4, !tbaa !6
  br label %3572

3572:                                             ; preds = %3559, %3567, %3532, %3521
  %3573 = icmp eq i32 %3524, %5
  br i1 %3573, label %5549, label %3439, !llvm.loop !699

3574:                                             ; preds = %3422, %3712
  %3575 = phi i64 [ %3111, %3422 ], [ %3660, %3712 ]
  %3576 = phi i32 [ 0, %3422 ], [ %3661, %3712 ]
  %3577 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3423, label %3578, label %3647

3578:                                             ; preds = %3574, %3637
  %3579 = phi i32 [ %3646, %3637 ], [ 0, %3574 ]
  %3580 = phi i64 [ %3588, %3637 ], [ %3427, %3574 ]
  %3581 = phi i64 [ %3645, %3637 ], [ %3426, %3574 ]
  %3582 = phi i32 [ %3643, %3637 ], [ %3577, %3574 ]
  %3583 = sub i32 %3425, %3579
  %3584 = tail call i32 @llvm.smin.i32(i32 %3583, i32 0)
  %3585 = sub i32 %3583, %3584
  %3586 = zext i32 %3585 to i64
  %3587 = add nuw nsw i64 %3586, 1
  %3588 = add nsw i64 %3580, -1
  %3589 = icmp ult i32 %3585, 31
  br i1 %3589, label %3625, label %3590

3590:                                             ; preds = %3578
  %3591 = and i64 %3587, 8589934560
  %3592 = sub i64 %3581, %3591
  br label %3593

3593:                                             ; preds = %3593, %3590
  %3594 = phi i64 [ 0, %3590 ], [ %3617, %3593 ]
  %3595 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3590 ], [ %3613, %3593 ]
  %3596 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3590 ], [ %3614, %3593 ]
  %3597 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3590 ], [ %3615, %3593 ]
  %3598 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3590 ], [ %3616, %3593 ]
  %3599 = sub i64 %3581, %3594
  %3600 = getelementptr inbounds i32, ptr %11, i64 %3599
  %3601 = getelementptr inbounds i32, ptr %3600, i64 -7
  %3602 = load <8 x i32>, ptr %3601, align 4, !tbaa !6
  %3603 = shufflevector <8 x i32> %3602, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3604 = getelementptr inbounds i32, ptr %3600, i64 -15
  %3605 = load <8 x i32>, ptr %3604, align 4, !tbaa !6
  %3606 = shufflevector <8 x i32> %3605, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3607 = getelementptr inbounds i32, ptr %3600, i64 -23
  %3608 = load <8 x i32>, ptr %3607, align 4, !tbaa !6
  %3609 = shufflevector <8 x i32> %3608, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3610 = getelementptr inbounds i32, ptr %3600, i64 -31
  %3611 = load <8 x i32>, ptr %3610, align 4, !tbaa !6
  %3612 = shufflevector <8 x i32> %3611, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3613 = mul <8 x i32> %3603, %3595
  %3614 = mul <8 x i32> %3606, %3596
  %3615 = mul <8 x i32> %3609, %3597
  %3616 = mul <8 x i32> %3612, %3598
  %3617 = add nuw i64 %3594, 32
  %3618 = icmp eq i64 %3617, %3591
  br i1 %3618, label %3619, label %3593, !llvm.loop !700

3619:                                             ; preds = %3593
  %3620 = mul <8 x i32> %3614, %3613
  %3621 = mul <8 x i32> %3615, %3620
  %3622 = mul <8 x i32> %3616, %3621
  %3623 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3622)
  %3624 = icmp eq i64 %3587, %3591
  br i1 %3624, label %3637, label %3625

3625:                                             ; preds = %3578, %3619
  %3626 = phi i64 [ %3581, %3578 ], [ %3592, %3619 ]
  %3627 = phi i32 [ 1, %3578 ], [ %3623, %3619 ]
  br label %3628

3628:                                             ; preds = %3625, %3628
  %3629 = phi i64 [ %3634, %3628 ], [ %3626, %3625 ]
  %3630 = phi i32 [ %3633, %3628 ], [ %3627, %3625 ]
  %3631 = getelementptr inbounds i32, ptr %11, i64 %3629
  %3632 = load i32, ptr %3631, align 4, !tbaa !6
  %3633 = mul nsw i32 %3632, %3630
  %3634 = add nsw i64 %3629, -1
  %3635 = trunc i64 %3629 to i32
  %3636 = icmp sgt i32 %3635, 0
  br i1 %3636, label %3628, label %3637, !llvm.loop !701

3637:                                             ; preds = %3628, %3619
  %3638 = phi i32 [ %3623, %3619 ], [ %3633, %3628 ]
  %3639 = and i64 %3588, 4294967295
  %3640 = getelementptr inbounds i32, ptr %6, i64 %3639
  %3641 = load i32, ptr %3640, align 4, !tbaa !6
  %3642 = mul nsw i32 %3641, %3638
  %3643 = add nsw i32 %3642, %3582
  %3644 = icmp sgt i64 %3580, 2
  %3645 = add nsw i64 %3581, -1
  %3646 = add i32 %3579, 1
  br i1 %3644, label %3578, label %3647, !llvm.loop !702

3647:                                             ; preds = %3637, %3574
  %3648 = phi i32 [ %3577, %3574 ], [ %3643, %3637 ]
  %3649 = icmp slt i32 %3648, %5
  br i1 %3649, label %3652, label %3650

3650:                                             ; preds = %3647
  %3651 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1037, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5554

3652:                                             ; preds = %3647
  %3653 = sext i32 %3648 to i64
  %3654 = getelementptr inbounds i32, ptr %3107, i64 %3653
  %3655 = load i32, ptr %3654, align 4, !tbaa !6
  %3656 = sext i32 %3655 to i64
  %3657 = icmp slt i64 %3575, %3656
  br i1 %3657, label %3658, label %3659

3658:                                             ; preds = %3652
  store i64 %3656, ptr %3109, align 8, !tbaa !121
  br label %3659

3659:                                             ; preds = %3658, %3652
  %3660 = phi i64 [ %3656, %3658 ], [ %3575, %3652 ]
  %3661 = add nuw nsw i32 %3576, 1
  br i1 %3424, label %3662, label %3712

3662:                                             ; preds = %3659
  %3663 = load i32, ptr %4, align 4, !tbaa !6
  %3664 = load i32, ptr %12, align 4, !tbaa !6
  %3665 = add nsw i32 %3664, -1
  %3666 = icmp slt i32 %3663, %3665
  br i1 %3666, label %3689, label %3667

3667:                                             ; preds = %3662
  %3668 = icmp eq i32 %3663, %3665
  br i1 %3668, label %3669, label %3705

3669:                                             ; preds = %3667
  store i32 0, ptr %4, align 4, !tbaa !6
  %3670 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3670, ptr %6, align 4, !tbaa !6
  br i1 %3429, label %3712, label %3671

3671:                                             ; preds = %3669, %3699
  %3672 = phi i64 [ %3703, %3699 ], [ 1, %3669 ]
  %3673 = getelementptr inbounds i32, ptr %4, i64 %3672
  %3674 = load i32, ptr %3673, align 4, !tbaa !6
  %3675 = getelementptr inbounds i32, ptr %12, i64 %3672
  %3676 = load i32, ptr %3675, align 4, !tbaa !6
  %3677 = add nsw i32 %3676, -1
  %3678 = icmp slt i32 %3674, %3677
  br i1 %3678, label %3679, label %3697

3679:                                             ; preds = %3671
  br i1 %3666, label %3689, label %3680

3680:                                             ; preds = %3679
  %3681 = shl i64 %3672, 32
  %3682 = add i64 %3681, -4294967296
  %3683 = ashr exact i64 %3682, 32
  %3684 = getelementptr inbounds i32, ptr %7, i64 %3683
  %3685 = load i32, ptr %3684, align 4, !tbaa !6
  %3686 = getelementptr inbounds i32, ptr %6, i64 %3672
  %3687 = load i32, ptr %3686, align 4, !tbaa !6
  %3688 = add nsw i32 %3687, %3685
  store i32 %3688, ptr %3686, align 4, !tbaa !6
  br label %3707

3689:                                             ; preds = %3662, %3679
  %3690 = phi i32 [ %3674, %3679 ], [ %3663, %3662 ]
  %3691 = phi ptr [ %3673, %3679 ], [ %4, %3662 ]
  %3692 = phi i64 [ %3672, %3679 ], [ 0, %3662 ]
  %3693 = add nsw i32 %3690, 1
  store i32 %3693, ptr %3691, align 4, !tbaa !6
  %3694 = getelementptr inbounds i32, ptr %7, i64 %3692
  %3695 = load i32, ptr %3694, align 4, !tbaa !6
  %3696 = getelementptr inbounds i32, ptr %6, i64 %3692
  br label %3707

3697:                                             ; preds = %3671
  %3698 = icmp eq i32 %3674, %3677
  br i1 %3698, label %3699, label %3705

3699:                                             ; preds = %3697
  store i32 0, ptr %3673, align 4, !tbaa !6
  %3700 = getelementptr inbounds i32, ptr %8, i64 %3672
  %3701 = load i32, ptr %3700, align 4, !tbaa !6
  %3702 = getelementptr inbounds i32, ptr %6, i64 %3672
  store i32 %3701, ptr %3702, align 4, !tbaa !6
  %3703 = add nuw nsw i64 %3672, 1
  %3704 = icmp eq i64 %3703, %3427
  br i1 %3704, label %3712, label %3671, !llvm.loop !703

3705:                                             ; preds = %3667, %3697
  %3706 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1037, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5554

3707:                                             ; preds = %3680, %3689
  %3708 = phi ptr [ %3696, %3689 ], [ %3673, %3680 ]
  %3709 = phi i32 [ %3695, %3689 ], [ 1, %3680 ]
  %3710 = load i32, ptr %3708, align 4, !tbaa !6
  %3711 = add nsw i32 %3710, %3709
  store i32 %3711, ptr %3708, align 4, !tbaa !6
  br label %3712

3712:                                             ; preds = %3699, %3707, %3669, %3659
  %3713 = icmp eq i32 %3661, %5
  br i1 %3713, label %5549, label %3574, !llvm.loop !704

3714:                                             ; preds = %3113
  %3715 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1037, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5549

3716:                                             ; preds = %18
  %3717 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3718 = load ptr, ptr %3717, align 8, !tbaa !10
  %3719 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3720 = load ptr, ptr %3719, align 8, !tbaa !10
  %3721 = load i32, ptr %3718, align 4, !tbaa !6
  %3722 = sitofp i32 %3721 to double
  store double %3722, ptr %3720, align 8, !tbaa !19
  %3723 = icmp eq i32 %13, 0
  br i1 %3723, label %5549, label %3724

3724:                                             ; preds = %3716
  switch i32 %1, label %4325 [
    i32 1, label %3725
    i32 0, label %4027
  ]

3725:                                             ; preds = %3724
  %3726 = getelementptr inbounds i32, ptr %3, i64 %19
  %3727 = load i32, ptr %3726, align 4, !tbaa !6
  %3728 = icmp eq i32 %3727, 0
  %3729 = icmp sgt i32 %5, 0
  br i1 %3728, label %3739, label %3730

3730:                                             ; preds = %3725
  br i1 %3729, label %3731, label %5549

3731:                                             ; preds = %3730
  %3732 = icmp sgt i32 %13, 1
  %3733 = icmp sgt i32 %13, 0
  %3734 = add i32 %13, -2
  %3735 = zext i32 %3734 to i64
  %3736 = zext i32 %13 to i64
  %3737 = add nuw i32 %5, 1
  %3738 = icmp eq i32 %13, 1
  br label %3887

3739:                                             ; preds = %3725
  br i1 %3729, label %3740, label %5549

3740:                                             ; preds = %3739
  %3741 = icmp sgt i32 %13, 1
  %3742 = icmp sgt i32 %13, 0
  %3743 = add i32 %13, -2
  %3744 = zext i32 %3743 to i64
  %3745 = zext i32 %13 to i64
  %3746 = add nuw i32 %5, 1
  %3747 = icmp eq i32 %13, 1
  br label %3748

3748:                                             ; preds = %3740, %3885
  %3749 = phi double [ %3722, %3740 ], [ %3835, %3885 ]
  %3750 = phi i32 [ 0, %3740 ], [ %3837, %3885 ]
  %3751 = phi double [ 0.000000e+00, %3740 ], [ %3836, %3885 ]
  %3752 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3741, label %3753, label %3822

3753:                                             ; preds = %3748, %3812
  %3754 = phi i32 [ %3821, %3812 ], [ 0, %3748 ]
  %3755 = phi i64 [ %3763, %3812 ], [ %3745, %3748 ]
  %3756 = phi i64 [ %3820, %3812 ], [ %3744, %3748 ]
  %3757 = phi i32 [ %3818, %3812 ], [ %3752, %3748 ]
  %3758 = sub i32 %3743, %3754
  %3759 = tail call i32 @llvm.smin.i32(i32 %3758, i32 0)
  %3760 = sub i32 %3758, %3759
  %3761 = zext i32 %3760 to i64
  %3762 = add nuw nsw i64 %3761, 1
  %3763 = add nsw i64 %3755, -1
  %3764 = icmp ult i32 %3760, 31
  br i1 %3764, label %3800, label %3765

3765:                                             ; preds = %3753
  %3766 = and i64 %3762, 8589934560
  %3767 = sub i64 %3756, %3766
  br label %3768

3768:                                             ; preds = %3768, %3765
  %3769 = phi i64 [ 0, %3765 ], [ %3792, %3768 ]
  %3770 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3765 ], [ %3788, %3768 ]
  %3771 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3765 ], [ %3789, %3768 ]
  %3772 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3765 ], [ %3790, %3768 ]
  %3773 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3765 ], [ %3791, %3768 ]
  %3774 = sub i64 %3756, %3769
  %3775 = getelementptr inbounds i32, ptr %9, i64 %3774
  %3776 = getelementptr inbounds i32, ptr %3775, i64 -7
  %3777 = load <8 x i32>, ptr %3776, align 4, !tbaa !6
  %3778 = shufflevector <8 x i32> %3777, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3779 = getelementptr inbounds i32, ptr %3775, i64 -15
  %3780 = load <8 x i32>, ptr %3779, align 4, !tbaa !6
  %3781 = shufflevector <8 x i32> %3780, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3782 = getelementptr inbounds i32, ptr %3775, i64 -23
  %3783 = load <8 x i32>, ptr %3782, align 4, !tbaa !6
  %3784 = shufflevector <8 x i32> %3783, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3785 = getelementptr inbounds i32, ptr %3775, i64 -31
  %3786 = load <8 x i32>, ptr %3785, align 4, !tbaa !6
  %3787 = shufflevector <8 x i32> %3786, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3788 = mul <8 x i32> %3778, %3770
  %3789 = mul <8 x i32> %3781, %3771
  %3790 = mul <8 x i32> %3784, %3772
  %3791 = mul <8 x i32> %3787, %3773
  %3792 = add nuw i64 %3769, 32
  %3793 = icmp eq i64 %3792, %3766
  br i1 %3793, label %3794, label %3768, !llvm.loop !705

3794:                                             ; preds = %3768
  %3795 = mul <8 x i32> %3789, %3788
  %3796 = mul <8 x i32> %3790, %3795
  %3797 = mul <8 x i32> %3791, %3796
  %3798 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3797)
  %3799 = icmp eq i64 %3762, %3766
  br i1 %3799, label %3812, label %3800

3800:                                             ; preds = %3753, %3794
  %3801 = phi i64 [ %3756, %3753 ], [ %3767, %3794 ]
  %3802 = phi i32 [ 1, %3753 ], [ %3798, %3794 ]
  br label %3803

3803:                                             ; preds = %3800, %3803
  %3804 = phi i64 [ %3809, %3803 ], [ %3801, %3800 ]
  %3805 = phi i32 [ %3808, %3803 ], [ %3802, %3800 ]
  %3806 = getelementptr inbounds i32, ptr %9, i64 %3804
  %3807 = load i32, ptr %3806, align 4, !tbaa !6
  %3808 = mul nsw i32 %3807, %3805
  %3809 = add nsw i64 %3804, -1
  %3810 = trunc i64 %3804 to i32
  %3811 = icmp sgt i32 %3810, 0
  br i1 %3811, label %3803, label %3812, !llvm.loop !706

3812:                                             ; preds = %3803, %3794
  %3813 = phi i32 [ %3798, %3794 ], [ %3808, %3803 ]
  %3814 = and i64 %3763, 4294967295
  %3815 = getelementptr inbounds i32, ptr %6, i64 %3814
  %3816 = load i32, ptr %3815, align 4, !tbaa !6
  %3817 = mul nsw i32 %3816, %3813
  %3818 = add nsw i32 %3817, %3757
  %3819 = icmp sgt i64 %3755, 2
  %3820 = add nsw i64 %3756, -1
  %3821 = add i32 %3754, 1
  br i1 %3819, label %3753, label %3822, !llvm.loop !707

3822:                                             ; preds = %3812, %3748
  %3823 = phi i32 [ %3752, %3748 ], [ %3818, %3812 ]
  %3824 = sext i32 %3823 to i64
  %3825 = getelementptr inbounds double, ptr %2, i64 %3824
  %3826 = load double, ptr %3825, align 8, !tbaa !19
  %3827 = getelementptr inbounds i32, ptr %3718, i64 %3824
  %3828 = load i32, ptr %3827, align 4, !tbaa !6
  %3829 = sitofp i32 %3828 to double
  %3830 = fcmp fast one double %3826, 0.000000e+00
  %3831 = fcmp fast olt double %3749, %3829
  %3832 = select i1 %3830, i1 %3831, i1 false
  br i1 %3832, label %3833, label %3834

3833:                                             ; preds = %3822
  store double %3829, ptr %3720, align 8, !tbaa !19
  br label %3834

3834:                                             ; preds = %3833, %3822
  %3835 = phi double [ %3829, %3833 ], [ %3749, %3822 ]
  %3836 = fadd fast double %3826, %3751
  %3837 = add nuw nsw i32 %3750, 1
  br i1 %3742, label %3838, label %3885

3838:                                             ; preds = %3834
  %3839 = load i32, ptr %4, align 4, !tbaa !6
  %3840 = load i32, ptr %12, align 4, !tbaa !6
  %3841 = add nsw i32 %3840, -1
  %3842 = icmp slt i32 %3839, %3841
  br i1 %3842, label %3862, label %3843

3843:                                             ; preds = %3838
  %3844 = icmp eq i32 %3839, %3841
  br i1 %3844, label %3845, label %3878

3845:                                             ; preds = %3843
  store i32 0, ptr %4, align 4, !tbaa !6
  %3846 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3846, ptr %6, align 4, !tbaa !6
  br i1 %3747, label %3885, label %3847

3847:                                             ; preds = %3845, %3872
  %3848 = phi i64 [ %3876, %3872 ], [ 1, %3845 ]
  %3849 = getelementptr inbounds i32, ptr %4, i64 %3848
  %3850 = load i32, ptr %3849, align 4, !tbaa !6
  %3851 = getelementptr inbounds i32, ptr %12, i64 %3848
  %3852 = load i32, ptr %3851, align 4, !tbaa !6
  %3853 = add nsw i32 %3852, -1
  %3854 = icmp slt i32 %3850, %3853
  br i1 %3854, label %3855, label %3870

3855:                                             ; preds = %3847
  br i1 %3842, label %3862, label %3856

3856:                                             ; preds = %3855
  %3857 = getelementptr inbounds i32, ptr %7, i64 %3848
  %3858 = load i32, ptr %3857, align 4, !tbaa !6
  %3859 = getelementptr inbounds i32, ptr %6, i64 %3848
  %3860 = load i32, ptr %3859, align 4, !tbaa !6
  %3861 = add nsw i32 %3860, %3858
  store i32 %3861, ptr %3859, align 4, !tbaa !6
  br label %3880

3862:                                             ; preds = %3838, %3855
  %3863 = phi i32 [ %3850, %3855 ], [ %3839, %3838 ]
  %3864 = phi ptr [ %3849, %3855 ], [ %4, %3838 ]
  %3865 = phi i64 [ %3848, %3855 ], [ 0, %3838 ]
  %3866 = add nsw i32 %3863, 1
  store i32 %3866, ptr %3864, align 4, !tbaa !6
  %3867 = getelementptr inbounds i32, ptr %7, i64 %3865
  %3868 = load i32, ptr %3867, align 4, !tbaa !6
  %3869 = getelementptr inbounds i32, ptr %6, i64 %3865
  br label %3880

3870:                                             ; preds = %3847
  %3871 = icmp eq i32 %3850, %3853
  br i1 %3871, label %3872, label %3878

3872:                                             ; preds = %3870
  store i32 0, ptr %3849, align 4, !tbaa !6
  %3873 = getelementptr inbounds i32, ptr %8, i64 %3848
  %3874 = load i32, ptr %3873, align 4, !tbaa !6
  %3875 = getelementptr inbounds i32, ptr %6, i64 %3848
  store i32 %3874, ptr %3875, align 4, !tbaa !6
  %3876 = add nuw nsw i64 %3848, 1
  %3877 = icmp eq i64 %3876, %3745
  br i1 %3877, label %3885, label %3847, !llvm.loop !708

3878:                                             ; preds = %3843, %3870
  %3879 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1041, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5554

3880:                                             ; preds = %3856, %3862
  %3881 = phi ptr [ %3869, %3862 ], [ %3849, %3856 ]
  %3882 = phi i32 [ %3868, %3862 ], [ 1, %3856 ]
  %3883 = load i32, ptr %3881, align 4, !tbaa !6
  %3884 = add nsw i32 %3883, %3882
  store i32 %3884, ptr %3881, align 4, !tbaa !6
  br label %3885

3885:                                             ; preds = %3872, %3880, %3845, %3834
  %3886 = icmp eq i32 %3837, %5
  br i1 %3886, label %5549, label %3748, !llvm.loop !709

3887:                                             ; preds = %3731, %4025
  %3888 = phi double [ %3722, %3731 ], [ %3973, %4025 ]
  %3889 = phi i32 [ 0, %3731 ], [ %3974, %4025 ]
  %3890 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3732, label %3891, label %3960

3891:                                             ; preds = %3887, %3950
  %3892 = phi i32 [ %3959, %3950 ], [ 0, %3887 ]
  %3893 = phi i64 [ %3901, %3950 ], [ %3736, %3887 ]
  %3894 = phi i64 [ %3958, %3950 ], [ %3735, %3887 ]
  %3895 = phi i32 [ %3956, %3950 ], [ %3890, %3887 ]
  %3896 = sub i32 %3734, %3892
  %3897 = tail call i32 @llvm.smin.i32(i32 %3896, i32 0)
  %3898 = sub i32 %3896, %3897
  %3899 = zext i32 %3898 to i64
  %3900 = add nuw nsw i64 %3899, 1
  %3901 = add nsw i64 %3893, -1
  %3902 = icmp ult i32 %3898, 31
  br i1 %3902, label %3938, label %3903

3903:                                             ; preds = %3891
  %3904 = and i64 %3900, 8589934560
  %3905 = sub i64 %3894, %3904
  br label %3906

3906:                                             ; preds = %3906, %3903
  %3907 = phi i64 [ 0, %3903 ], [ %3930, %3906 ]
  %3908 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3903 ], [ %3926, %3906 ]
  %3909 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3903 ], [ %3927, %3906 ]
  %3910 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3903 ], [ %3928, %3906 ]
  %3911 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3903 ], [ %3929, %3906 ]
  %3912 = sub i64 %3894, %3907
  %3913 = getelementptr inbounds i32, ptr %11, i64 %3912
  %3914 = getelementptr inbounds i32, ptr %3913, i64 -7
  %3915 = load <8 x i32>, ptr %3914, align 4, !tbaa !6
  %3916 = shufflevector <8 x i32> %3915, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3917 = getelementptr inbounds i32, ptr %3913, i64 -15
  %3918 = load <8 x i32>, ptr %3917, align 4, !tbaa !6
  %3919 = shufflevector <8 x i32> %3918, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3920 = getelementptr inbounds i32, ptr %3913, i64 -23
  %3921 = load <8 x i32>, ptr %3920, align 4, !tbaa !6
  %3922 = shufflevector <8 x i32> %3921, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3923 = getelementptr inbounds i32, ptr %3913, i64 -31
  %3924 = load <8 x i32>, ptr %3923, align 4, !tbaa !6
  %3925 = shufflevector <8 x i32> %3924, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3926 = mul <8 x i32> %3916, %3908
  %3927 = mul <8 x i32> %3919, %3909
  %3928 = mul <8 x i32> %3922, %3910
  %3929 = mul <8 x i32> %3925, %3911
  %3930 = add nuw i64 %3907, 32
  %3931 = icmp eq i64 %3930, %3904
  br i1 %3931, label %3932, label %3906, !llvm.loop !710

3932:                                             ; preds = %3906
  %3933 = mul <8 x i32> %3927, %3926
  %3934 = mul <8 x i32> %3928, %3933
  %3935 = mul <8 x i32> %3929, %3934
  %3936 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3935)
  %3937 = icmp eq i64 %3900, %3904
  br i1 %3937, label %3950, label %3938

3938:                                             ; preds = %3891, %3932
  %3939 = phi i64 [ %3894, %3891 ], [ %3905, %3932 ]
  %3940 = phi i32 [ 1, %3891 ], [ %3936, %3932 ]
  br label %3941

3941:                                             ; preds = %3938, %3941
  %3942 = phi i64 [ %3947, %3941 ], [ %3939, %3938 ]
  %3943 = phi i32 [ %3946, %3941 ], [ %3940, %3938 ]
  %3944 = getelementptr inbounds i32, ptr %11, i64 %3942
  %3945 = load i32, ptr %3944, align 4, !tbaa !6
  %3946 = mul nsw i32 %3945, %3943
  %3947 = add nsw i64 %3942, -1
  %3948 = trunc i64 %3942 to i32
  %3949 = icmp sgt i32 %3948, 0
  br i1 %3949, label %3941, label %3950, !llvm.loop !711

3950:                                             ; preds = %3941, %3932
  %3951 = phi i32 [ %3936, %3932 ], [ %3946, %3941 ]
  %3952 = and i64 %3901, 4294967295
  %3953 = getelementptr inbounds i32, ptr %6, i64 %3952
  %3954 = load i32, ptr %3953, align 4, !tbaa !6
  %3955 = mul nsw i32 %3954, %3951
  %3956 = add nsw i32 %3955, %3895
  %3957 = icmp sgt i64 %3893, 2
  %3958 = add nsw i64 %3894, -1
  %3959 = add i32 %3892, 1
  br i1 %3957, label %3891, label %3960, !llvm.loop !712

3960:                                             ; preds = %3950, %3887
  %3961 = phi i32 [ %3890, %3887 ], [ %3956, %3950 ]
  %3962 = icmp slt i32 %3961, %5
  br i1 %3962, label %3965, label %3963

3963:                                             ; preds = %3960
  %3964 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1041, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5554

3965:                                             ; preds = %3960
  %3966 = sext i32 %3961 to i64
  %3967 = getelementptr inbounds i32, ptr %3718, i64 %3966
  %3968 = load i32, ptr %3967, align 4, !tbaa !6
  %3969 = sitofp i32 %3968 to double
  %3970 = fcmp fast olt double %3888, %3969
  br i1 %3970, label %3971, label %3972

3971:                                             ; preds = %3965
  store double %3969, ptr %3720, align 8, !tbaa !19
  br label %3972

3972:                                             ; preds = %3965, %3971
  %3973 = phi double [ %3888, %3965 ], [ %3969, %3971 ]
  %3974 = add nuw nsw i32 %3889, 1
  br i1 %3733, label %3975, label %4025

3975:                                             ; preds = %3972
  %3976 = load i32, ptr %4, align 4, !tbaa !6
  %3977 = load i32, ptr %12, align 4, !tbaa !6
  %3978 = add nsw i32 %3977, -1
  %3979 = icmp slt i32 %3976, %3978
  br i1 %3979, label %4002, label %3980

3980:                                             ; preds = %3975
  %3981 = icmp eq i32 %3976, %3978
  br i1 %3981, label %3982, label %4018

3982:                                             ; preds = %3980
  store i32 0, ptr %4, align 4, !tbaa !6
  %3983 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3983, ptr %6, align 4, !tbaa !6
  br i1 %3738, label %4025, label %3984

3984:                                             ; preds = %3982, %4012
  %3985 = phi i64 [ %4016, %4012 ], [ 1, %3982 ]
  %3986 = getelementptr inbounds i32, ptr %4, i64 %3985
  %3987 = load i32, ptr %3986, align 4, !tbaa !6
  %3988 = getelementptr inbounds i32, ptr %12, i64 %3985
  %3989 = load i32, ptr %3988, align 4, !tbaa !6
  %3990 = add nsw i32 %3989, -1
  %3991 = icmp slt i32 %3987, %3990
  br i1 %3991, label %3992, label %4010

3992:                                             ; preds = %3984
  br i1 %3979, label %4002, label %3993

3993:                                             ; preds = %3992
  %3994 = shl i64 %3985, 32
  %3995 = add i64 %3994, -4294967296
  %3996 = ashr exact i64 %3995, 32
  %3997 = getelementptr inbounds i32, ptr %7, i64 %3996
  %3998 = load i32, ptr %3997, align 4, !tbaa !6
  %3999 = getelementptr inbounds i32, ptr %6, i64 %3985
  %4000 = load i32, ptr %3999, align 4, !tbaa !6
  %4001 = add nsw i32 %4000, %3998
  store i32 %4001, ptr %3999, align 4, !tbaa !6
  br label %4020

4002:                                             ; preds = %3975, %3992
  %4003 = phi i32 [ %3987, %3992 ], [ %3976, %3975 ]
  %4004 = phi ptr [ %3986, %3992 ], [ %4, %3975 ]
  %4005 = phi i64 [ %3985, %3992 ], [ 0, %3975 ]
  %4006 = add nsw i32 %4003, 1
  store i32 %4006, ptr %4004, align 4, !tbaa !6
  %4007 = getelementptr inbounds i32, ptr %7, i64 %4005
  %4008 = load i32, ptr %4007, align 4, !tbaa !6
  %4009 = getelementptr inbounds i32, ptr %6, i64 %4005
  br label %4020

4010:                                             ; preds = %3984
  %4011 = icmp eq i32 %3987, %3990
  br i1 %4011, label %4012, label %4018

4012:                                             ; preds = %4010
  store i32 0, ptr %3986, align 4, !tbaa !6
  %4013 = getelementptr inbounds i32, ptr %8, i64 %3985
  %4014 = load i32, ptr %4013, align 4, !tbaa !6
  %4015 = getelementptr inbounds i32, ptr %6, i64 %3985
  store i32 %4014, ptr %4015, align 4, !tbaa !6
  %4016 = add nuw nsw i64 %3985, 1
  %4017 = icmp eq i64 %4016, %3736
  br i1 %4017, label %4025, label %3984, !llvm.loop !713

4018:                                             ; preds = %3980, %4010
  %4019 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1041, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5554

4020:                                             ; preds = %3993, %4002
  %4021 = phi ptr [ %4009, %4002 ], [ %3986, %3993 ]
  %4022 = phi i32 [ %4008, %4002 ], [ 1, %3993 ]
  %4023 = load i32, ptr %4021, align 4, !tbaa !6
  %4024 = add nsw i32 %4023, %4022
  store i32 %4024, ptr %4021, align 4, !tbaa !6
  br label %4025

4025:                                             ; preds = %4012, %4020, %3982, %3972
  %4026 = icmp eq i32 %3974, %5
  br i1 %4026, label %5549, label %3887, !llvm.loop !714

4027:                                             ; preds = %3724
  %4028 = getelementptr inbounds i32, ptr %3, i64 %19
  %4029 = load i32, ptr %4028, align 4, !tbaa !6
  %4030 = icmp eq i32 %4029, 0
  %4031 = icmp sgt i32 %5, 0
  br i1 %4030, label %4041, label %4032

4032:                                             ; preds = %4027
  br i1 %4031, label %4033, label %5549

4033:                                             ; preds = %4032
  %4034 = icmp sgt i32 %13, 1
  %4035 = icmp sgt i32 %13, 0
  %4036 = add i32 %13, -2
  %4037 = zext i32 %4036 to i64
  %4038 = zext i32 %13 to i64
  %4039 = add nuw i32 %5, 1
  %4040 = icmp eq i32 %13, 1
  br label %4185

4041:                                             ; preds = %4027
  br i1 %4031, label %4042, label %5549

4042:                                             ; preds = %4041
  %4043 = icmp sgt i32 %13, 1
  %4044 = icmp sgt i32 %13, 0
  %4045 = add i32 %13, -2
  %4046 = zext i32 %4045 to i64
  %4047 = zext i32 %13 to i64
  %4048 = add nuw i32 %5, 1
  %4049 = icmp eq i32 %13, 1
  br label %4050

4050:                                             ; preds = %4042, %4183
  %4051 = phi double [ %3722, %4042 ], [ %4133, %4183 ]
  %4052 = phi i32 [ 0, %4042 ], [ %4135, %4183 ]
  %4053 = phi double [ 0.000000e+00, %4042 ], [ %4134, %4183 ]
  %4054 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4043, label %4055, label %4124

4055:                                             ; preds = %4050, %4114
  %4056 = phi i32 [ %4123, %4114 ], [ 0, %4050 ]
  %4057 = phi i64 [ %4065, %4114 ], [ %4047, %4050 ]
  %4058 = phi i64 [ %4122, %4114 ], [ %4046, %4050 ]
  %4059 = phi i32 [ %4120, %4114 ], [ %4054, %4050 ]
  %4060 = sub i32 %4045, %4056
  %4061 = tail call i32 @llvm.smin.i32(i32 %4060, i32 0)
  %4062 = sub i32 %4060, %4061
  %4063 = zext i32 %4062 to i64
  %4064 = add nuw nsw i64 %4063, 1
  %4065 = add nsw i64 %4057, -1
  %4066 = icmp ult i32 %4062, 31
  br i1 %4066, label %4102, label %4067

4067:                                             ; preds = %4055
  %4068 = and i64 %4064, 8589934560
  %4069 = sub i64 %4058, %4068
  br label %4070

4070:                                             ; preds = %4070, %4067
  %4071 = phi i64 [ 0, %4067 ], [ %4094, %4070 ]
  %4072 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4067 ], [ %4090, %4070 ]
  %4073 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4067 ], [ %4091, %4070 ]
  %4074 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4067 ], [ %4092, %4070 ]
  %4075 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4067 ], [ %4093, %4070 ]
  %4076 = sub i64 %4058, %4071
  %4077 = getelementptr inbounds i32, ptr %9, i64 %4076
  %4078 = getelementptr inbounds i32, ptr %4077, i64 -7
  %4079 = load <8 x i32>, ptr %4078, align 4, !tbaa !6
  %4080 = shufflevector <8 x i32> %4079, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4081 = getelementptr inbounds i32, ptr %4077, i64 -15
  %4082 = load <8 x i32>, ptr %4081, align 4, !tbaa !6
  %4083 = shufflevector <8 x i32> %4082, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4084 = getelementptr inbounds i32, ptr %4077, i64 -23
  %4085 = load <8 x i32>, ptr %4084, align 4, !tbaa !6
  %4086 = shufflevector <8 x i32> %4085, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4087 = getelementptr inbounds i32, ptr %4077, i64 -31
  %4088 = load <8 x i32>, ptr %4087, align 4, !tbaa !6
  %4089 = shufflevector <8 x i32> %4088, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4090 = mul <8 x i32> %4080, %4072
  %4091 = mul <8 x i32> %4083, %4073
  %4092 = mul <8 x i32> %4086, %4074
  %4093 = mul <8 x i32> %4089, %4075
  %4094 = add nuw i64 %4071, 32
  %4095 = icmp eq i64 %4094, %4068
  br i1 %4095, label %4096, label %4070, !llvm.loop !715

4096:                                             ; preds = %4070
  %4097 = mul <8 x i32> %4091, %4090
  %4098 = mul <8 x i32> %4092, %4097
  %4099 = mul <8 x i32> %4093, %4098
  %4100 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4099)
  %4101 = icmp eq i64 %4064, %4068
  br i1 %4101, label %4114, label %4102

4102:                                             ; preds = %4055, %4096
  %4103 = phi i64 [ %4058, %4055 ], [ %4069, %4096 ]
  %4104 = phi i32 [ 1, %4055 ], [ %4100, %4096 ]
  br label %4105

4105:                                             ; preds = %4102, %4105
  %4106 = phi i64 [ %4111, %4105 ], [ %4103, %4102 ]
  %4107 = phi i32 [ %4110, %4105 ], [ %4104, %4102 ]
  %4108 = getelementptr inbounds i32, ptr %9, i64 %4106
  %4109 = load i32, ptr %4108, align 4, !tbaa !6
  %4110 = mul nsw i32 %4109, %4107
  %4111 = add nsw i64 %4106, -1
  %4112 = trunc i64 %4106 to i32
  %4113 = icmp sgt i32 %4112, 0
  br i1 %4113, label %4105, label %4114, !llvm.loop !716

4114:                                             ; preds = %4105, %4096
  %4115 = phi i32 [ %4100, %4096 ], [ %4110, %4105 ]
  %4116 = and i64 %4065, 4294967295
  %4117 = getelementptr inbounds i32, ptr %6, i64 %4116
  %4118 = load i32, ptr %4117, align 4, !tbaa !6
  %4119 = mul nsw i32 %4118, %4115
  %4120 = add nsw i32 %4119, %4059
  %4121 = icmp sgt i64 %4057, 2
  %4122 = add nsw i64 %4058, -1
  %4123 = add i32 %4056, 1
  br i1 %4121, label %4055, label %4124, !llvm.loop !717

4124:                                             ; preds = %4114, %4050
  %4125 = phi i32 [ %4054, %4050 ], [ %4120, %4114 ]
  %4126 = sext i32 %4125 to i64
  %4127 = getelementptr inbounds i32, ptr %3718, i64 %4126
  %4128 = load i32, ptr %4127, align 4, !tbaa !6
  %4129 = sitofp i32 %4128 to double
  %4130 = fcmp fast olt double %4051, %4129
  br i1 %4130, label %4131, label %4132

4131:                                             ; preds = %4124
  store double %4129, ptr %3720, align 8, !tbaa !19
  br label %4132

4132:                                             ; preds = %4131, %4124
  %4133 = phi double [ %4129, %4131 ], [ %4051, %4124 ]
  %4134 = fadd fast double %4053, 1.000000e+00
  %4135 = add nuw nsw i32 %4052, 1
  br i1 %4044, label %4136, label %4183

4136:                                             ; preds = %4132
  %4137 = load i32, ptr %4, align 4, !tbaa !6
  %4138 = load i32, ptr %12, align 4, !tbaa !6
  %4139 = add nsw i32 %4138, -1
  %4140 = icmp slt i32 %4137, %4139
  br i1 %4140, label %4160, label %4141

4141:                                             ; preds = %4136
  %4142 = icmp eq i32 %4137, %4139
  br i1 %4142, label %4143, label %4176

4143:                                             ; preds = %4141
  store i32 0, ptr %4, align 4, !tbaa !6
  %4144 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4144, ptr %6, align 4, !tbaa !6
  br i1 %4049, label %4183, label %4145

4145:                                             ; preds = %4143, %4170
  %4146 = phi i64 [ %4174, %4170 ], [ 1, %4143 ]
  %4147 = getelementptr inbounds i32, ptr %4, i64 %4146
  %4148 = load i32, ptr %4147, align 4, !tbaa !6
  %4149 = getelementptr inbounds i32, ptr %12, i64 %4146
  %4150 = load i32, ptr %4149, align 4, !tbaa !6
  %4151 = add nsw i32 %4150, -1
  %4152 = icmp slt i32 %4148, %4151
  br i1 %4152, label %4153, label %4168

4153:                                             ; preds = %4145
  br i1 %4140, label %4160, label %4154

4154:                                             ; preds = %4153
  %4155 = getelementptr inbounds i32, ptr %7, i64 %4146
  %4156 = load i32, ptr %4155, align 4, !tbaa !6
  %4157 = getelementptr inbounds i32, ptr %6, i64 %4146
  %4158 = load i32, ptr %4157, align 4, !tbaa !6
  %4159 = add nsw i32 %4158, %4156
  store i32 %4159, ptr %4157, align 4, !tbaa !6
  br label %4178

4160:                                             ; preds = %4136, %4153
  %4161 = phi i32 [ %4148, %4153 ], [ %4137, %4136 ]
  %4162 = phi ptr [ %4147, %4153 ], [ %4, %4136 ]
  %4163 = phi i64 [ %4146, %4153 ], [ 0, %4136 ]
  %4164 = add nsw i32 %4161, 1
  store i32 %4164, ptr %4162, align 4, !tbaa !6
  %4165 = getelementptr inbounds i32, ptr %7, i64 %4163
  %4166 = load i32, ptr %4165, align 4, !tbaa !6
  %4167 = getelementptr inbounds i32, ptr %6, i64 %4163
  br label %4178

4168:                                             ; preds = %4145
  %4169 = icmp eq i32 %4148, %4151
  br i1 %4169, label %4170, label %4176

4170:                                             ; preds = %4168
  store i32 0, ptr %4147, align 4, !tbaa !6
  %4171 = getelementptr inbounds i32, ptr %8, i64 %4146
  %4172 = load i32, ptr %4171, align 4, !tbaa !6
  %4173 = getelementptr inbounds i32, ptr %6, i64 %4146
  store i32 %4172, ptr %4173, align 4, !tbaa !6
  %4174 = add nuw nsw i64 %4146, 1
  %4175 = icmp eq i64 %4174, %4047
  br i1 %4175, label %4183, label %4145, !llvm.loop !718

4176:                                             ; preds = %4141, %4168
  %4177 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1041, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5554

4178:                                             ; preds = %4154, %4160
  %4179 = phi ptr [ %4167, %4160 ], [ %4147, %4154 ]
  %4180 = phi i32 [ %4166, %4160 ], [ 1, %4154 ]
  %4181 = load i32, ptr %4179, align 4, !tbaa !6
  %4182 = add nsw i32 %4181, %4180
  store i32 %4182, ptr %4179, align 4, !tbaa !6
  br label %4183

4183:                                             ; preds = %4170, %4178, %4143, %4132
  %4184 = icmp eq i32 %4135, %5
  br i1 %4184, label %5549, label %4050, !llvm.loop !719

4185:                                             ; preds = %4033, %4323
  %4186 = phi double [ %3722, %4033 ], [ %4271, %4323 ]
  %4187 = phi i32 [ 0, %4033 ], [ %4272, %4323 ]
  %4188 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4034, label %4189, label %4258

4189:                                             ; preds = %4185, %4248
  %4190 = phi i32 [ %4257, %4248 ], [ 0, %4185 ]
  %4191 = phi i64 [ %4199, %4248 ], [ %4038, %4185 ]
  %4192 = phi i64 [ %4256, %4248 ], [ %4037, %4185 ]
  %4193 = phi i32 [ %4254, %4248 ], [ %4188, %4185 ]
  %4194 = sub i32 %4036, %4190
  %4195 = tail call i32 @llvm.smin.i32(i32 %4194, i32 0)
  %4196 = sub i32 %4194, %4195
  %4197 = zext i32 %4196 to i64
  %4198 = add nuw nsw i64 %4197, 1
  %4199 = add nsw i64 %4191, -1
  %4200 = icmp ult i32 %4196, 31
  br i1 %4200, label %4236, label %4201

4201:                                             ; preds = %4189
  %4202 = and i64 %4198, 8589934560
  %4203 = sub i64 %4192, %4202
  br label %4204

4204:                                             ; preds = %4204, %4201
  %4205 = phi i64 [ 0, %4201 ], [ %4228, %4204 ]
  %4206 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4201 ], [ %4224, %4204 ]
  %4207 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4201 ], [ %4225, %4204 ]
  %4208 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4201 ], [ %4226, %4204 ]
  %4209 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4201 ], [ %4227, %4204 ]
  %4210 = sub i64 %4192, %4205
  %4211 = getelementptr inbounds i32, ptr %11, i64 %4210
  %4212 = getelementptr inbounds i32, ptr %4211, i64 -7
  %4213 = load <8 x i32>, ptr %4212, align 4, !tbaa !6
  %4214 = shufflevector <8 x i32> %4213, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4215 = getelementptr inbounds i32, ptr %4211, i64 -15
  %4216 = load <8 x i32>, ptr %4215, align 4, !tbaa !6
  %4217 = shufflevector <8 x i32> %4216, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4218 = getelementptr inbounds i32, ptr %4211, i64 -23
  %4219 = load <8 x i32>, ptr %4218, align 4, !tbaa !6
  %4220 = shufflevector <8 x i32> %4219, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4221 = getelementptr inbounds i32, ptr %4211, i64 -31
  %4222 = load <8 x i32>, ptr %4221, align 4, !tbaa !6
  %4223 = shufflevector <8 x i32> %4222, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4224 = mul <8 x i32> %4214, %4206
  %4225 = mul <8 x i32> %4217, %4207
  %4226 = mul <8 x i32> %4220, %4208
  %4227 = mul <8 x i32> %4223, %4209
  %4228 = add nuw i64 %4205, 32
  %4229 = icmp eq i64 %4228, %4202
  br i1 %4229, label %4230, label %4204, !llvm.loop !720

4230:                                             ; preds = %4204
  %4231 = mul <8 x i32> %4225, %4224
  %4232 = mul <8 x i32> %4226, %4231
  %4233 = mul <8 x i32> %4227, %4232
  %4234 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4233)
  %4235 = icmp eq i64 %4198, %4202
  br i1 %4235, label %4248, label %4236

4236:                                             ; preds = %4189, %4230
  %4237 = phi i64 [ %4192, %4189 ], [ %4203, %4230 ]
  %4238 = phi i32 [ 1, %4189 ], [ %4234, %4230 ]
  br label %4239

4239:                                             ; preds = %4236, %4239
  %4240 = phi i64 [ %4245, %4239 ], [ %4237, %4236 ]
  %4241 = phi i32 [ %4244, %4239 ], [ %4238, %4236 ]
  %4242 = getelementptr inbounds i32, ptr %11, i64 %4240
  %4243 = load i32, ptr %4242, align 4, !tbaa !6
  %4244 = mul nsw i32 %4243, %4241
  %4245 = add nsw i64 %4240, -1
  %4246 = trunc i64 %4240 to i32
  %4247 = icmp sgt i32 %4246, 0
  br i1 %4247, label %4239, label %4248, !llvm.loop !721

4248:                                             ; preds = %4239, %4230
  %4249 = phi i32 [ %4234, %4230 ], [ %4244, %4239 ]
  %4250 = and i64 %4199, 4294967295
  %4251 = getelementptr inbounds i32, ptr %6, i64 %4250
  %4252 = load i32, ptr %4251, align 4, !tbaa !6
  %4253 = mul nsw i32 %4252, %4249
  %4254 = add nsw i32 %4253, %4193
  %4255 = icmp sgt i64 %4191, 2
  %4256 = add nsw i64 %4192, -1
  %4257 = add i32 %4190, 1
  br i1 %4255, label %4189, label %4258, !llvm.loop !722

4258:                                             ; preds = %4248, %4185
  %4259 = phi i32 [ %4188, %4185 ], [ %4254, %4248 ]
  %4260 = icmp slt i32 %4259, %5
  br i1 %4260, label %4263, label %4261

4261:                                             ; preds = %4258
  %4262 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1041, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5554

4263:                                             ; preds = %4258
  %4264 = sext i32 %4259 to i64
  %4265 = getelementptr inbounds i32, ptr %3718, i64 %4264
  %4266 = load i32, ptr %4265, align 4, !tbaa !6
  %4267 = sitofp i32 %4266 to double
  %4268 = fcmp fast olt double %4186, %4267
  br i1 %4268, label %4269, label %4270

4269:                                             ; preds = %4263
  store double %4267, ptr %3720, align 8, !tbaa !19
  br label %4270

4270:                                             ; preds = %4269, %4263
  %4271 = phi double [ %4267, %4269 ], [ %4186, %4263 ]
  %4272 = add nuw nsw i32 %4187, 1
  br i1 %4035, label %4273, label %4323

4273:                                             ; preds = %4270
  %4274 = load i32, ptr %4, align 4, !tbaa !6
  %4275 = load i32, ptr %12, align 4, !tbaa !6
  %4276 = add nsw i32 %4275, -1
  %4277 = icmp slt i32 %4274, %4276
  br i1 %4277, label %4300, label %4278

4278:                                             ; preds = %4273
  %4279 = icmp eq i32 %4274, %4276
  br i1 %4279, label %4280, label %4316

4280:                                             ; preds = %4278
  store i32 0, ptr %4, align 4, !tbaa !6
  %4281 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4281, ptr %6, align 4, !tbaa !6
  br i1 %4040, label %4323, label %4282

4282:                                             ; preds = %4280, %4310
  %4283 = phi i64 [ %4314, %4310 ], [ 1, %4280 ]
  %4284 = getelementptr inbounds i32, ptr %4, i64 %4283
  %4285 = load i32, ptr %4284, align 4, !tbaa !6
  %4286 = getelementptr inbounds i32, ptr %12, i64 %4283
  %4287 = load i32, ptr %4286, align 4, !tbaa !6
  %4288 = add nsw i32 %4287, -1
  %4289 = icmp slt i32 %4285, %4288
  br i1 %4289, label %4290, label %4308

4290:                                             ; preds = %4282
  br i1 %4277, label %4300, label %4291

4291:                                             ; preds = %4290
  %4292 = shl i64 %4283, 32
  %4293 = add i64 %4292, -4294967296
  %4294 = ashr exact i64 %4293, 32
  %4295 = getelementptr inbounds i32, ptr %7, i64 %4294
  %4296 = load i32, ptr %4295, align 4, !tbaa !6
  %4297 = getelementptr inbounds i32, ptr %6, i64 %4283
  %4298 = load i32, ptr %4297, align 4, !tbaa !6
  %4299 = add nsw i32 %4298, %4296
  store i32 %4299, ptr %4297, align 4, !tbaa !6
  br label %4318

4300:                                             ; preds = %4273, %4290
  %4301 = phi i32 [ %4285, %4290 ], [ %4274, %4273 ]
  %4302 = phi ptr [ %4284, %4290 ], [ %4, %4273 ]
  %4303 = phi i64 [ %4283, %4290 ], [ 0, %4273 ]
  %4304 = add nsw i32 %4301, 1
  store i32 %4304, ptr %4302, align 4, !tbaa !6
  %4305 = getelementptr inbounds i32, ptr %7, i64 %4303
  %4306 = load i32, ptr %4305, align 4, !tbaa !6
  %4307 = getelementptr inbounds i32, ptr %6, i64 %4303
  br label %4318

4308:                                             ; preds = %4282
  %4309 = icmp eq i32 %4285, %4288
  br i1 %4309, label %4310, label %4316

4310:                                             ; preds = %4308
  store i32 0, ptr %4284, align 4, !tbaa !6
  %4311 = getelementptr inbounds i32, ptr %8, i64 %4283
  %4312 = load i32, ptr %4311, align 4, !tbaa !6
  %4313 = getelementptr inbounds i32, ptr %6, i64 %4283
  store i32 %4312, ptr %4313, align 4, !tbaa !6
  %4314 = add nuw nsw i64 %4283, 1
  %4315 = icmp eq i64 %4314, %4038
  br i1 %4315, label %4323, label %4282, !llvm.loop !723

4316:                                             ; preds = %4278, %4308
  %4317 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1041, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5554

4318:                                             ; preds = %4291, %4300
  %4319 = phi ptr [ %4307, %4300 ], [ %4284, %4291 ]
  %4320 = phi i32 [ %4306, %4300 ], [ 1, %4291 ]
  %4321 = load i32, ptr %4319, align 4, !tbaa !6
  %4322 = add nsw i32 %4321, %4320
  store i32 %4322, ptr %4319, align 4, !tbaa !6
  br label %4323

4323:                                             ; preds = %4310, %4318, %4280, %4270
  %4324 = icmp eq i32 %4272, %5
  br i1 %4324, label %5549, label %4185, !llvm.loop !724

4325:                                             ; preds = %3724
  %4326 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1041, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5549

4327:                                             ; preds = %18
  %4328 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4329 = load ptr, ptr %4328, align 8, !tbaa !10
  %4330 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4331 = load ptr, ptr %4330, align 8, !tbaa !10
  %4332 = load i32, ptr %4329, align 4, !tbaa !6
  %4333 = sitofp i32 %4332 to float
  store float %4333, ptr %4331, align 4, !tbaa !163
  %4334 = icmp eq i32 %13, 0
  br i1 %4334, label %5549, label %4335

4335:                                             ; preds = %4327
  switch i32 %1, label %4936 [
    i32 1, label %4336
    i32 0, label %4638
  ]

4336:                                             ; preds = %4335
  %4337 = getelementptr inbounds i32, ptr %3, i64 %19
  %4338 = load i32, ptr %4337, align 4, !tbaa !6
  %4339 = icmp eq i32 %4338, 0
  %4340 = icmp sgt i32 %5, 0
  br i1 %4339, label %4350, label %4341

4341:                                             ; preds = %4336
  br i1 %4340, label %4342, label %5549

4342:                                             ; preds = %4341
  %4343 = icmp sgt i32 %13, 1
  %4344 = icmp sgt i32 %13, 0
  %4345 = add i32 %13, -2
  %4346 = zext i32 %4345 to i64
  %4347 = zext i32 %13 to i64
  %4348 = add nuw i32 %5, 1
  %4349 = icmp eq i32 %13, 1
  br label %4498

4350:                                             ; preds = %4336
  br i1 %4340, label %4351, label %5549

4351:                                             ; preds = %4350
  %4352 = icmp sgt i32 %13, 1
  %4353 = icmp sgt i32 %13, 0
  %4354 = add i32 %13, -2
  %4355 = zext i32 %4354 to i64
  %4356 = zext i32 %13 to i64
  %4357 = add nuw i32 %5, 1
  %4358 = icmp eq i32 %13, 1
  br label %4359

4359:                                             ; preds = %4351, %4496
  %4360 = phi float [ %4333, %4351 ], [ %4446, %4496 ]
  %4361 = phi i32 [ 0, %4351 ], [ %4448, %4496 ]
  %4362 = phi double [ 0.000000e+00, %4351 ], [ %4447, %4496 ]
  %4363 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4352, label %4364, label %4433

4364:                                             ; preds = %4359, %4423
  %4365 = phi i32 [ %4432, %4423 ], [ 0, %4359 ]
  %4366 = phi i64 [ %4374, %4423 ], [ %4356, %4359 ]
  %4367 = phi i64 [ %4431, %4423 ], [ %4355, %4359 ]
  %4368 = phi i32 [ %4429, %4423 ], [ %4363, %4359 ]
  %4369 = sub i32 %4354, %4365
  %4370 = tail call i32 @llvm.smin.i32(i32 %4369, i32 0)
  %4371 = sub i32 %4369, %4370
  %4372 = zext i32 %4371 to i64
  %4373 = add nuw nsw i64 %4372, 1
  %4374 = add nsw i64 %4366, -1
  %4375 = icmp ult i32 %4371, 31
  br i1 %4375, label %4411, label %4376

4376:                                             ; preds = %4364
  %4377 = and i64 %4373, 8589934560
  %4378 = sub i64 %4367, %4377
  br label %4379

4379:                                             ; preds = %4379, %4376
  %4380 = phi i64 [ 0, %4376 ], [ %4403, %4379 ]
  %4381 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4376 ], [ %4399, %4379 ]
  %4382 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4376 ], [ %4400, %4379 ]
  %4383 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4376 ], [ %4401, %4379 ]
  %4384 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4376 ], [ %4402, %4379 ]
  %4385 = sub i64 %4367, %4380
  %4386 = getelementptr inbounds i32, ptr %9, i64 %4385
  %4387 = getelementptr inbounds i32, ptr %4386, i64 -7
  %4388 = load <8 x i32>, ptr %4387, align 4, !tbaa !6
  %4389 = shufflevector <8 x i32> %4388, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4390 = getelementptr inbounds i32, ptr %4386, i64 -15
  %4391 = load <8 x i32>, ptr %4390, align 4, !tbaa !6
  %4392 = shufflevector <8 x i32> %4391, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4393 = getelementptr inbounds i32, ptr %4386, i64 -23
  %4394 = load <8 x i32>, ptr %4393, align 4, !tbaa !6
  %4395 = shufflevector <8 x i32> %4394, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4396 = getelementptr inbounds i32, ptr %4386, i64 -31
  %4397 = load <8 x i32>, ptr %4396, align 4, !tbaa !6
  %4398 = shufflevector <8 x i32> %4397, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4399 = mul <8 x i32> %4389, %4381
  %4400 = mul <8 x i32> %4392, %4382
  %4401 = mul <8 x i32> %4395, %4383
  %4402 = mul <8 x i32> %4398, %4384
  %4403 = add nuw i64 %4380, 32
  %4404 = icmp eq i64 %4403, %4377
  br i1 %4404, label %4405, label %4379, !llvm.loop !725

4405:                                             ; preds = %4379
  %4406 = mul <8 x i32> %4400, %4399
  %4407 = mul <8 x i32> %4401, %4406
  %4408 = mul <8 x i32> %4402, %4407
  %4409 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4408)
  %4410 = icmp eq i64 %4373, %4377
  br i1 %4410, label %4423, label %4411

4411:                                             ; preds = %4364, %4405
  %4412 = phi i64 [ %4367, %4364 ], [ %4378, %4405 ]
  %4413 = phi i32 [ 1, %4364 ], [ %4409, %4405 ]
  br label %4414

4414:                                             ; preds = %4411, %4414
  %4415 = phi i64 [ %4420, %4414 ], [ %4412, %4411 ]
  %4416 = phi i32 [ %4419, %4414 ], [ %4413, %4411 ]
  %4417 = getelementptr inbounds i32, ptr %9, i64 %4415
  %4418 = load i32, ptr %4417, align 4, !tbaa !6
  %4419 = mul nsw i32 %4418, %4416
  %4420 = add nsw i64 %4415, -1
  %4421 = trunc i64 %4415 to i32
  %4422 = icmp sgt i32 %4421, 0
  br i1 %4422, label %4414, label %4423, !llvm.loop !726

4423:                                             ; preds = %4414, %4405
  %4424 = phi i32 [ %4409, %4405 ], [ %4419, %4414 ]
  %4425 = and i64 %4374, 4294967295
  %4426 = getelementptr inbounds i32, ptr %6, i64 %4425
  %4427 = load i32, ptr %4426, align 4, !tbaa !6
  %4428 = mul nsw i32 %4427, %4424
  %4429 = add nsw i32 %4428, %4368
  %4430 = icmp sgt i64 %4366, 2
  %4431 = add nsw i64 %4367, -1
  %4432 = add i32 %4365, 1
  br i1 %4430, label %4364, label %4433, !llvm.loop !727

4433:                                             ; preds = %4423, %4359
  %4434 = phi i32 [ %4363, %4359 ], [ %4429, %4423 ]
  %4435 = sext i32 %4434 to i64
  %4436 = getelementptr inbounds double, ptr %2, i64 %4435
  %4437 = load double, ptr %4436, align 8, !tbaa !19
  %4438 = getelementptr inbounds i32, ptr %4329, i64 %4435
  %4439 = load i32, ptr %4438, align 4, !tbaa !6
  %4440 = sitofp i32 %4439 to float
  %4441 = fcmp fast one double %4437, 0.000000e+00
  %4442 = fcmp fast olt float %4360, %4440
  %4443 = select i1 %4441, i1 %4442, i1 false
  br i1 %4443, label %4444, label %4445

4444:                                             ; preds = %4433
  store float %4440, ptr %4331, align 4, !tbaa !163
  br label %4445

4445:                                             ; preds = %4444, %4433
  %4446 = phi float [ %4440, %4444 ], [ %4360, %4433 ]
  %4447 = fadd fast double %4437, %4362
  %4448 = add nuw nsw i32 %4361, 1
  br i1 %4353, label %4449, label %4496

4449:                                             ; preds = %4445
  %4450 = load i32, ptr %4, align 4, !tbaa !6
  %4451 = load i32, ptr %12, align 4, !tbaa !6
  %4452 = add nsw i32 %4451, -1
  %4453 = icmp slt i32 %4450, %4452
  br i1 %4453, label %4473, label %4454

4454:                                             ; preds = %4449
  %4455 = icmp eq i32 %4450, %4452
  br i1 %4455, label %4456, label %4489

4456:                                             ; preds = %4454
  store i32 0, ptr %4, align 4, !tbaa !6
  %4457 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4457, ptr %6, align 4, !tbaa !6
  br i1 %4358, label %4496, label %4458

4458:                                             ; preds = %4456, %4483
  %4459 = phi i64 [ %4487, %4483 ], [ 1, %4456 ]
  %4460 = getelementptr inbounds i32, ptr %4, i64 %4459
  %4461 = load i32, ptr %4460, align 4, !tbaa !6
  %4462 = getelementptr inbounds i32, ptr %12, i64 %4459
  %4463 = load i32, ptr %4462, align 4, !tbaa !6
  %4464 = add nsw i32 %4463, -1
  %4465 = icmp slt i32 %4461, %4464
  br i1 %4465, label %4466, label %4481

4466:                                             ; preds = %4458
  br i1 %4453, label %4473, label %4467

4467:                                             ; preds = %4466
  %4468 = getelementptr inbounds i32, ptr %7, i64 %4459
  %4469 = load i32, ptr %4468, align 4, !tbaa !6
  %4470 = getelementptr inbounds i32, ptr %6, i64 %4459
  %4471 = load i32, ptr %4470, align 4, !tbaa !6
  %4472 = add nsw i32 %4471, %4469
  store i32 %4472, ptr %4470, align 4, !tbaa !6
  br label %4491

4473:                                             ; preds = %4449, %4466
  %4474 = phi i32 [ %4461, %4466 ], [ %4450, %4449 ]
  %4475 = phi ptr [ %4460, %4466 ], [ %4, %4449 ]
  %4476 = phi i64 [ %4459, %4466 ], [ 0, %4449 ]
  %4477 = add nsw i32 %4474, 1
  store i32 %4477, ptr %4475, align 4, !tbaa !6
  %4478 = getelementptr inbounds i32, ptr %7, i64 %4476
  %4479 = load i32, ptr %4478, align 4, !tbaa !6
  %4480 = getelementptr inbounds i32, ptr %6, i64 %4476
  br label %4491

4481:                                             ; preds = %4458
  %4482 = icmp eq i32 %4461, %4464
  br i1 %4482, label %4483, label %4489

4483:                                             ; preds = %4481
  store i32 0, ptr %4460, align 4, !tbaa !6
  %4484 = getelementptr inbounds i32, ptr %8, i64 %4459
  %4485 = load i32, ptr %4484, align 4, !tbaa !6
  %4486 = getelementptr inbounds i32, ptr %6, i64 %4459
  store i32 %4485, ptr %4486, align 4, !tbaa !6
  %4487 = add nuw nsw i64 %4459, 1
  %4488 = icmp eq i64 %4487, %4356
  br i1 %4488, label %4496, label %4458, !llvm.loop !728

4489:                                             ; preds = %4454, %4481
  %4490 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1045, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5554

4491:                                             ; preds = %4467, %4473
  %4492 = phi ptr [ %4480, %4473 ], [ %4460, %4467 ]
  %4493 = phi i32 [ %4479, %4473 ], [ 1, %4467 ]
  %4494 = load i32, ptr %4492, align 4, !tbaa !6
  %4495 = add nsw i32 %4494, %4493
  store i32 %4495, ptr %4492, align 4, !tbaa !6
  br label %4496

4496:                                             ; preds = %4483, %4491, %4456, %4445
  %4497 = icmp eq i32 %4448, %5
  br i1 %4497, label %5549, label %4359, !llvm.loop !729

4498:                                             ; preds = %4342, %4636
  %4499 = phi float [ %4333, %4342 ], [ %4584, %4636 ]
  %4500 = phi i32 [ 0, %4342 ], [ %4585, %4636 ]
  %4501 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4343, label %4502, label %4571

4502:                                             ; preds = %4498, %4561
  %4503 = phi i32 [ %4570, %4561 ], [ 0, %4498 ]
  %4504 = phi i64 [ %4512, %4561 ], [ %4347, %4498 ]
  %4505 = phi i64 [ %4569, %4561 ], [ %4346, %4498 ]
  %4506 = phi i32 [ %4567, %4561 ], [ %4501, %4498 ]
  %4507 = sub i32 %4345, %4503
  %4508 = tail call i32 @llvm.smin.i32(i32 %4507, i32 0)
  %4509 = sub i32 %4507, %4508
  %4510 = zext i32 %4509 to i64
  %4511 = add nuw nsw i64 %4510, 1
  %4512 = add nsw i64 %4504, -1
  %4513 = icmp ult i32 %4509, 31
  br i1 %4513, label %4549, label %4514

4514:                                             ; preds = %4502
  %4515 = and i64 %4511, 8589934560
  %4516 = sub i64 %4505, %4515
  br label %4517

4517:                                             ; preds = %4517, %4514
  %4518 = phi i64 [ 0, %4514 ], [ %4541, %4517 ]
  %4519 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4514 ], [ %4537, %4517 ]
  %4520 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4514 ], [ %4538, %4517 ]
  %4521 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4514 ], [ %4539, %4517 ]
  %4522 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4514 ], [ %4540, %4517 ]
  %4523 = sub i64 %4505, %4518
  %4524 = getelementptr inbounds i32, ptr %11, i64 %4523
  %4525 = getelementptr inbounds i32, ptr %4524, i64 -7
  %4526 = load <8 x i32>, ptr %4525, align 4, !tbaa !6
  %4527 = shufflevector <8 x i32> %4526, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4528 = getelementptr inbounds i32, ptr %4524, i64 -15
  %4529 = load <8 x i32>, ptr %4528, align 4, !tbaa !6
  %4530 = shufflevector <8 x i32> %4529, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4531 = getelementptr inbounds i32, ptr %4524, i64 -23
  %4532 = load <8 x i32>, ptr %4531, align 4, !tbaa !6
  %4533 = shufflevector <8 x i32> %4532, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4534 = getelementptr inbounds i32, ptr %4524, i64 -31
  %4535 = load <8 x i32>, ptr %4534, align 4, !tbaa !6
  %4536 = shufflevector <8 x i32> %4535, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4537 = mul <8 x i32> %4527, %4519
  %4538 = mul <8 x i32> %4530, %4520
  %4539 = mul <8 x i32> %4533, %4521
  %4540 = mul <8 x i32> %4536, %4522
  %4541 = add nuw i64 %4518, 32
  %4542 = icmp eq i64 %4541, %4515
  br i1 %4542, label %4543, label %4517, !llvm.loop !730

4543:                                             ; preds = %4517
  %4544 = mul <8 x i32> %4538, %4537
  %4545 = mul <8 x i32> %4539, %4544
  %4546 = mul <8 x i32> %4540, %4545
  %4547 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4546)
  %4548 = icmp eq i64 %4511, %4515
  br i1 %4548, label %4561, label %4549

4549:                                             ; preds = %4502, %4543
  %4550 = phi i64 [ %4505, %4502 ], [ %4516, %4543 ]
  %4551 = phi i32 [ 1, %4502 ], [ %4547, %4543 ]
  br label %4552

4552:                                             ; preds = %4549, %4552
  %4553 = phi i64 [ %4558, %4552 ], [ %4550, %4549 ]
  %4554 = phi i32 [ %4557, %4552 ], [ %4551, %4549 ]
  %4555 = getelementptr inbounds i32, ptr %11, i64 %4553
  %4556 = load i32, ptr %4555, align 4, !tbaa !6
  %4557 = mul nsw i32 %4556, %4554
  %4558 = add nsw i64 %4553, -1
  %4559 = trunc i64 %4553 to i32
  %4560 = icmp sgt i32 %4559, 0
  br i1 %4560, label %4552, label %4561, !llvm.loop !731

4561:                                             ; preds = %4552, %4543
  %4562 = phi i32 [ %4547, %4543 ], [ %4557, %4552 ]
  %4563 = and i64 %4512, 4294967295
  %4564 = getelementptr inbounds i32, ptr %6, i64 %4563
  %4565 = load i32, ptr %4564, align 4, !tbaa !6
  %4566 = mul nsw i32 %4565, %4562
  %4567 = add nsw i32 %4566, %4506
  %4568 = icmp sgt i64 %4504, 2
  %4569 = add nsw i64 %4505, -1
  %4570 = add i32 %4503, 1
  br i1 %4568, label %4502, label %4571, !llvm.loop !732

4571:                                             ; preds = %4561, %4498
  %4572 = phi i32 [ %4501, %4498 ], [ %4567, %4561 ]
  %4573 = icmp slt i32 %4572, %5
  br i1 %4573, label %4576, label %4574

4574:                                             ; preds = %4571
  %4575 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1045, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5554

4576:                                             ; preds = %4571
  %4577 = sext i32 %4572 to i64
  %4578 = getelementptr inbounds i32, ptr %4329, i64 %4577
  %4579 = load i32, ptr %4578, align 4, !tbaa !6
  %4580 = sitofp i32 %4579 to float
  %4581 = fcmp fast olt float %4499, %4580
  br i1 %4581, label %4582, label %4583

4582:                                             ; preds = %4576
  store float %4580, ptr %4331, align 4, !tbaa !163
  br label %4583

4583:                                             ; preds = %4576, %4582
  %4584 = phi float [ %4499, %4576 ], [ %4580, %4582 ]
  %4585 = add nuw nsw i32 %4500, 1
  br i1 %4344, label %4586, label %4636

4586:                                             ; preds = %4583
  %4587 = load i32, ptr %4, align 4, !tbaa !6
  %4588 = load i32, ptr %12, align 4, !tbaa !6
  %4589 = add nsw i32 %4588, -1
  %4590 = icmp slt i32 %4587, %4589
  br i1 %4590, label %4613, label %4591

4591:                                             ; preds = %4586
  %4592 = icmp eq i32 %4587, %4589
  br i1 %4592, label %4593, label %4629

4593:                                             ; preds = %4591
  store i32 0, ptr %4, align 4, !tbaa !6
  %4594 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4594, ptr %6, align 4, !tbaa !6
  br i1 %4349, label %4636, label %4595

4595:                                             ; preds = %4593, %4623
  %4596 = phi i64 [ %4627, %4623 ], [ 1, %4593 ]
  %4597 = getelementptr inbounds i32, ptr %4, i64 %4596
  %4598 = load i32, ptr %4597, align 4, !tbaa !6
  %4599 = getelementptr inbounds i32, ptr %12, i64 %4596
  %4600 = load i32, ptr %4599, align 4, !tbaa !6
  %4601 = add nsw i32 %4600, -1
  %4602 = icmp slt i32 %4598, %4601
  br i1 %4602, label %4603, label %4621

4603:                                             ; preds = %4595
  br i1 %4590, label %4613, label %4604

4604:                                             ; preds = %4603
  %4605 = shl i64 %4596, 32
  %4606 = add i64 %4605, -4294967296
  %4607 = ashr exact i64 %4606, 32
  %4608 = getelementptr inbounds i32, ptr %7, i64 %4607
  %4609 = load i32, ptr %4608, align 4, !tbaa !6
  %4610 = getelementptr inbounds i32, ptr %6, i64 %4596
  %4611 = load i32, ptr %4610, align 4, !tbaa !6
  %4612 = add nsw i32 %4611, %4609
  store i32 %4612, ptr %4610, align 4, !tbaa !6
  br label %4631

4613:                                             ; preds = %4586, %4603
  %4614 = phi i32 [ %4598, %4603 ], [ %4587, %4586 ]
  %4615 = phi ptr [ %4597, %4603 ], [ %4, %4586 ]
  %4616 = phi i64 [ %4596, %4603 ], [ 0, %4586 ]
  %4617 = add nsw i32 %4614, 1
  store i32 %4617, ptr %4615, align 4, !tbaa !6
  %4618 = getelementptr inbounds i32, ptr %7, i64 %4616
  %4619 = load i32, ptr %4618, align 4, !tbaa !6
  %4620 = getelementptr inbounds i32, ptr %6, i64 %4616
  br label %4631

4621:                                             ; preds = %4595
  %4622 = icmp eq i32 %4598, %4601
  br i1 %4622, label %4623, label %4629

4623:                                             ; preds = %4621
  store i32 0, ptr %4597, align 4, !tbaa !6
  %4624 = getelementptr inbounds i32, ptr %8, i64 %4596
  %4625 = load i32, ptr %4624, align 4, !tbaa !6
  %4626 = getelementptr inbounds i32, ptr %6, i64 %4596
  store i32 %4625, ptr %4626, align 4, !tbaa !6
  %4627 = add nuw nsw i64 %4596, 1
  %4628 = icmp eq i64 %4627, %4347
  br i1 %4628, label %4636, label %4595, !llvm.loop !733

4629:                                             ; preds = %4591, %4621
  %4630 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1045, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5554

4631:                                             ; preds = %4604, %4613
  %4632 = phi ptr [ %4620, %4613 ], [ %4597, %4604 ]
  %4633 = phi i32 [ %4619, %4613 ], [ 1, %4604 ]
  %4634 = load i32, ptr %4632, align 4, !tbaa !6
  %4635 = add nsw i32 %4634, %4633
  store i32 %4635, ptr %4632, align 4, !tbaa !6
  br label %4636

4636:                                             ; preds = %4623, %4631, %4593, %4583
  %4637 = icmp eq i32 %4585, %5
  br i1 %4637, label %5549, label %4498, !llvm.loop !734

4638:                                             ; preds = %4335
  %4639 = getelementptr inbounds i32, ptr %3, i64 %19
  %4640 = load i32, ptr %4639, align 4, !tbaa !6
  %4641 = icmp eq i32 %4640, 0
  %4642 = icmp sgt i32 %5, 0
  br i1 %4641, label %4652, label %4643

4643:                                             ; preds = %4638
  br i1 %4642, label %4644, label %5549

4644:                                             ; preds = %4643
  %4645 = icmp sgt i32 %13, 1
  %4646 = icmp sgt i32 %13, 0
  %4647 = add i32 %13, -2
  %4648 = zext i32 %4647 to i64
  %4649 = zext i32 %13 to i64
  %4650 = add nuw i32 %5, 1
  %4651 = icmp eq i32 %13, 1
  br label %4796

4652:                                             ; preds = %4638
  br i1 %4642, label %4653, label %5549

4653:                                             ; preds = %4652
  %4654 = icmp sgt i32 %13, 1
  %4655 = icmp sgt i32 %13, 0
  %4656 = add i32 %13, -2
  %4657 = zext i32 %4656 to i64
  %4658 = zext i32 %13 to i64
  %4659 = add nuw i32 %5, 1
  %4660 = icmp eq i32 %13, 1
  br label %4661

4661:                                             ; preds = %4653, %4794
  %4662 = phi float [ %4333, %4653 ], [ %4744, %4794 ]
  %4663 = phi i32 [ 0, %4653 ], [ %4746, %4794 ]
  %4664 = phi double [ 0.000000e+00, %4653 ], [ %4745, %4794 ]
  %4665 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4654, label %4666, label %4735

4666:                                             ; preds = %4661, %4725
  %4667 = phi i32 [ %4734, %4725 ], [ 0, %4661 ]
  %4668 = phi i64 [ %4676, %4725 ], [ %4658, %4661 ]
  %4669 = phi i64 [ %4733, %4725 ], [ %4657, %4661 ]
  %4670 = phi i32 [ %4731, %4725 ], [ %4665, %4661 ]
  %4671 = sub i32 %4656, %4667
  %4672 = tail call i32 @llvm.smin.i32(i32 %4671, i32 0)
  %4673 = sub i32 %4671, %4672
  %4674 = zext i32 %4673 to i64
  %4675 = add nuw nsw i64 %4674, 1
  %4676 = add nsw i64 %4668, -1
  %4677 = icmp ult i32 %4673, 31
  br i1 %4677, label %4713, label %4678

4678:                                             ; preds = %4666
  %4679 = and i64 %4675, 8589934560
  %4680 = sub i64 %4669, %4679
  br label %4681

4681:                                             ; preds = %4681, %4678
  %4682 = phi i64 [ 0, %4678 ], [ %4705, %4681 ]
  %4683 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4678 ], [ %4701, %4681 ]
  %4684 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4678 ], [ %4702, %4681 ]
  %4685 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4678 ], [ %4703, %4681 ]
  %4686 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4678 ], [ %4704, %4681 ]
  %4687 = sub i64 %4669, %4682
  %4688 = getelementptr inbounds i32, ptr %9, i64 %4687
  %4689 = getelementptr inbounds i32, ptr %4688, i64 -7
  %4690 = load <8 x i32>, ptr %4689, align 4, !tbaa !6
  %4691 = shufflevector <8 x i32> %4690, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4692 = getelementptr inbounds i32, ptr %4688, i64 -15
  %4693 = load <8 x i32>, ptr %4692, align 4, !tbaa !6
  %4694 = shufflevector <8 x i32> %4693, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4695 = getelementptr inbounds i32, ptr %4688, i64 -23
  %4696 = load <8 x i32>, ptr %4695, align 4, !tbaa !6
  %4697 = shufflevector <8 x i32> %4696, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4698 = getelementptr inbounds i32, ptr %4688, i64 -31
  %4699 = load <8 x i32>, ptr %4698, align 4, !tbaa !6
  %4700 = shufflevector <8 x i32> %4699, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4701 = mul <8 x i32> %4691, %4683
  %4702 = mul <8 x i32> %4694, %4684
  %4703 = mul <8 x i32> %4697, %4685
  %4704 = mul <8 x i32> %4700, %4686
  %4705 = add nuw i64 %4682, 32
  %4706 = icmp eq i64 %4705, %4679
  br i1 %4706, label %4707, label %4681, !llvm.loop !735

4707:                                             ; preds = %4681
  %4708 = mul <8 x i32> %4702, %4701
  %4709 = mul <8 x i32> %4703, %4708
  %4710 = mul <8 x i32> %4704, %4709
  %4711 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4710)
  %4712 = icmp eq i64 %4675, %4679
  br i1 %4712, label %4725, label %4713

4713:                                             ; preds = %4666, %4707
  %4714 = phi i64 [ %4669, %4666 ], [ %4680, %4707 ]
  %4715 = phi i32 [ 1, %4666 ], [ %4711, %4707 ]
  br label %4716

4716:                                             ; preds = %4713, %4716
  %4717 = phi i64 [ %4722, %4716 ], [ %4714, %4713 ]
  %4718 = phi i32 [ %4721, %4716 ], [ %4715, %4713 ]
  %4719 = getelementptr inbounds i32, ptr %9, i64 %4717
  %4720 = load i32, ptr %4719, align 4, !tbaa !6
  %4721 = mul nsw i32 %4720, %4718
  %4722 = add nsw i64 %4717, -1
  %4723 = trunc i64 %4717 to i32
  %4724 = icmp sgt i32 %4723, 0
  br i1 %4724, label %4716, label %4725, !llvm.loop !736

4725:                                             ; preds = %4716, %4707
  %4726 = phi i32 [ %4711, %4707 ], [ %4721, %4716 ]
  %4727 = and i64 %4676, 4294967295
  %4728 = getelementptr inbounds i32, ptr %6, i64 %4727
  %4729 = load i32, ptr %4728, align 4, !tbaa !6
  %4730 = mul nsw i32 %4729, %4726
  %4731 = add nsw i32 %4730, %4670
  %4732 = icmp sgt i64 %4668, 2
  %4733 = add nsw i64 %4669, -1
  %4734 = add i32 %4667, 1
  br i1 %4732, label %4666, label %4735, !llvm.loop !737

4735:                                             ; preds = %4725, %4661
  %4736 = phi i32 [ %4665, %4661 ], [ %4731, %4725 ]
  %4737 = sext i32 %4736 to i64
  %4738 = getelementptr inbounds i32, ptr %4329, i64 %4737
  %4739 = load i32, ptr %4738, align 4, !tbaa !6
  %4740 = sitofp i32 %4739 to float
  %4741 = fcmp fast olt float %4662, %4740
  br i1 %4741, label %4742, label %4743

4742:                                             ; preds = %4735
  store float %4740, ptr %4331, align 4, !tbaa !163
  br label %4743

4743:                                             ; preds = %4742, %4735
  %4744 = phi float [ %4740, %4742 ], [ %4662, %4735 ]
  %4745 = fadd fast double %4664, 1.000000e+00
  %4746 = add nuw nsw i32 %4663, 1
  br i1 %4655, label %4747, label %4794

4747:                                             ; preds = %4743
  %4748 = load i32, ptr %4, align 4, !tbaa !6
  %4749 = load i32, ptr %12, align 4, !tbaa !6
  %4750 = add nsw i32 %4749, -1
  %4751 = icmp slt i32 %4748, %4750
  br i1 %4751, label %4771, label %4752

4752:                                             ; preds = %4747
  %4753 = icmp eq i32 %4748, %4750
  br i1 %4753, label %4754, label %4787

4754:                                             ; preds = %4752
  store i32 0, ptr %4, align 4, !tbaa !6
  %4755 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4755, ptr %6, align 4, !tbaa !6
  br i1 %4660, label %4794, label %4756

4756:                                             ; preds = %4754, %4781
  %4757 = phi i64 [ %4785, %4781 ], [ 1, %4754 ]
  %4758 = getelementptr inbounds i32, ptr %4, i64 %4757
  %4759 = load i32, ptr %4758, align 4, !tbaa !6
  %4760 = getelementptr inbounds i32, ptr %12, i64 %4757
  %4761 = load i32, ptr %4760, align 4, !tbaa !6
  %4762 = add nsw i32 %4761, -1
  %4763 = icmp slt i32 %4759, %4762
  br i1 %4763, label %4764, label %4779

4764:                                             ; preds = %4756
  br i1 %4751, label %4771, label %4765

4765:                                             ; preds = %4764
  %4766 = getelementptr inbounds i32, ptr %7, i64 %4757
  %4767 = load i32, ptr %4766, align 4, !tbaa !6
  %4768 = getelementptr inbounds i32, ptr %6, i64 %4757
  %4769 = load i32, ptr %4768, align 4, !tbaa !6
  %4770 = add nsw i32 %4769, %4767
  store i32 %4770, ptr %4768, align 4, !tbaa !6
  br label %4789

4771:                                             ; preds = %4747, %4764
  %4772 = phi i32 [ %4759, %4764 ], [ %4748, %4747 ]
  %4773 = phi ptr [ %4758, %4764 ], [ %4, %4747 ]
  %4774 = phi i64 [ %4757, %4764 ], [ 0, %4747 ]
  %4775 = add nsw i32 %4772, 1
  store i32 %4775, ptr %4773, align 4, !tbaa !6
  %4776 = getelementptr inbounds i32, ptr %7, i64 %4774
  %4777 = load i32, ptr %4776, align 4, !tbaa !6
  %4778 = getelementptr inbounds i32, ptr %6, i64 %4774
  br label %4789

4779:                                             ; preds = %4756
  %4780 = icmp eq i32 %4759, %4762
  br i1 %4780, label %4781, label %4787

4781:                                             ; preds = %4779
  store i32 0, ptr %4758, align 4, !tbaa !6
  %4782 = getelementptr inbounds i32, ptr %8, i64 %4757
  %4783 = load i32, ptr %4782, align 4, !tbaa !6
  %4784 = getelementptr inbounds i32, ptr %6, i64 %4757
  store i32 %4783, ptr %4784, align 4, !tbaa !6
  %4785 = add nuw nsw i64 %4757, 1
  %4786 = icmp eq i64 %4785, %4658
  br i1 %4786, label %4794, label %4756, !llvm.loop !738

4787:                                             ; preds = %4752, %4779
  %4788 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1045, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5554

4789:                                             ; preds = %4765, %4771
  %4790 = phi ptr [ %4778, %4771 ], [ %4758, %4765 ]
  %4791 = phi i32 [ %4777, %4771 ], [ 1, %4765 ]
  %4792 = load i32, ptr %4790, align 4, !tbaa !6
  %4793 = add nsw i32 %4792, %4791
  store i32 %4793, ptr %4790, align 4, !tbaa !6
  br label %4794

4794:                                             ; preds = %4781, %4789, %4754, %4743
  %4795 = icmp eq i32 %4746, %5
  br i1 %4795, label %5549, label %4661, !llvm.loop !739

4796:                                             ; preds = %4644, %4934
  %4797 = phi float [ %4333, %4644 ], [ %4882, %4934 ]
  %4798 = phi i32 [ 0, %4644 ], [ %4883, %4934 ]
  %4799 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4645, label %4800, label %4869

4800:                                             ; preds = %4796, %4859
  %4801 = phi i32 [ %4868, %4859 ], [ 0, %4796 ]
  %4802 = phi i64 [ %4810, %4859 ], [ %4649, %4796 ]
  %4803 = phi i64 [ %4867, %4859 ], [ %4648, %4796 ]
  %4804 = phi i32 [ %4865, %4859 ], [ %4799, %4796 ]
  %4805 = sub i32 %4647, %4801
  %4806 = tail call i32 @llvm.smin.i32(i32 %4805, i32 0)
  %4807 = sub i32 %4805, %4806
  %4808 = zext i32 %4807 to i64
  %4809 = add nuw nsw i64 %4808, 1
  %4810 = add nsw i64 %4802, -1
  %4811 = icmp ult i32 %4807, 31
  br i1 %4811, label %4847, label %4812

4812:                                             ; preds = %4800
  %4813 = and i64 %4809, 8589934560
  %4814 = sub i64 %4803, %4813
  br label %4815

4815:                                             ; preds = %4815, %4812
  %4816 = phi i64 [ 0, %4812 ], [ %4839, %4815 ]
  %4817 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4812 ], [ %4835, %4815 ]
  %4818 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4812 ], [ %4836, %4815 ]
  %4819 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4812 ], [ %4837, %4815 ]
  %4820 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4812 ], [ %4838, %4815 ]
  %4821 = sub i64 %4803, %4816
  %4822 = getelementptr inbounds i32, ptr %11, i64 %4821
  %4823 = getelementptr inbounds i32, ptr %4822, i64 -7
  %4824 = load <8 x i32>, ptr %4823, align 4, !tbaa !6
  %4825 = shufflevector <8 x i32> %4824, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4826 = getelementptr inbounds i32, ptr %4822, i64 -15
  %4827 = load <8 x i32>, ptr %4826, align 4, !tbaa !6
  %4828 = shufflevector <8 x i32> %4827, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4829 = getelementptr inbounds i32, ptr %4822, i64 -23
  %4830 = load <8 x i32>, ptr %4829, align 4, !tbaa !6
  %4831 = shufflevector <8 x i32> %4830, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4832 = getelementptr inbounds i32, ptr %4822, i64 -31
  %4833 = load <8 x i32>, ptr %4832, align 4, !tbaa !6
  %4834 = shufflevector <8 x i32> %4833, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4835 = mul <8 x i32> %4825, %4817
  %4836 = mul <8 x i32> %4828, %4818
  %4837 = mul <8 x i32> %4831, %4819
  %4838 = mul <8 x i32> %4834, %4820
  %4839 = add nuw i64 %4816, 32
  %4840 = icmp eq i64 %4839, %4813
  br i1 %4840, label %4841, label %4815, !llvm.loop !740

4841:                                             ; preds = %4815
  %4842 = mul <8 x i32> %4836, %4835
  %4843 = mul <8 x i32> %4837, %4842
  %4844 = mul <8 x i32> %4838, %4843
  %4845 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4844)
  %4846 = icmp eq i64 %4809, %4813
  br i1 %4846, label %4859, label %4847

4847:                                             ; preds = %4800, %4841
  %4848 = phi i64 [ %4803, %4800 ], [ %4814, %4841 ]
  %4849 = phi i32 [ 1, %4800 ], [ %4845, %4841 ]
  br label %4850

4850:                                             ; preds = %4847, %4850
  %4851 = phi i64 [ %4856, %4850 ], [ %4848, %4847 ]
  %4852 = phi i32 [ %4855, %4850 ], [ %4849, %4847 ]
  %4853 = getelementptr inbounds i32, ptr %11, i64 %4851
  %4854 = load i32, ptr %4853, align 4, !tbaa !6
  %4855 = mul nsw i32 %4854, %4852
  %4856 = add nsw i64 %4851, -1
  %4857 = trunc i64 %4851 to i32
  %4858 = icmp sgt i32 %4857, 0
  br i1 %4858, label %4850, label %4859, !llvm.loop !741

4859:                                             ; preds = %4850, %4841
  %4860 = phi i32 [ %4845, %4841 ], [ %4855, %4850 ]
  %4861 = and i64 %4810, 4294967295
  %4862 = getelementptr inbounds i32, ptr %6, i64 %4861
  %4863 = load i32, ptr %4862, align 4, !tbaa !6
  %4864 = mul nsw i32 %4863, %4860
  %4865 = add nsw i32 %4864, %4804
  %4866 = icmp sgt i64 %4802, 2
  %4867 = add nsw i64 %4803, -1
  %4868 = add i32 %4801, 1
  br i1 %4866, label %4800, label %4869, !llvm.loop !742

4869:                                             ; preds = %4859, %4796
  %4870 = phi i32 [ %4799, %4796 ], [ %4865, %4859 ]
  %4871 = icmp slt i32 %4870, %5
  br i1 %4871, label %4874, label %4872

4872:                                             ; preds = %4869
  %4873 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1045, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5554

4874:                                             ; preds = %4869
  %4875 = sext i32 %4870 to i64
  %4876 = getelementptr inbounds i32, ptr %4329, i64 %4875
  %4877 = load i32, ptr %4876, align 4, !tbaa !6
  %4878 = sitofp i32 %4877 to float
  %4879 = fcmp fast olt float %4797, %4878
  br i1 %4879, label %4880, label %4881

4880:                                             ; preds = %4874
  store float %4878, ptr %4331, align 4, !tbaa !163
  br label %4881

4881:                                             ; preds = %4880, %4874
  %4882 = phi float [ %4878, %4880 ], [ %4797, %4874 ]
  %4883 = add nuw nsw i32 %4798, 1
  br i1 %4646, label %4884, label %4934

4884:                                             ; preds = %4881
  %4885 = load i32, ptr %4, align 4, !tbaa !6
  %4886 = load i32, ptr %12, align 4, !tbaa !6
  %4887 = add nsw i32 %4886, -1
  %4888 = icmp slt i32 %4885, %4887
  br i1 %4888, label %4911, label %4889

4889:                                             ; preds = %4884
  %4890 = icmp eq i32 %4885, %4887
  br i1 %4890, label %4891, label %4927

4891:                                             ; preds = %4889
  store i32 0, ptr %4, align 4, !tbaa !6
  %4892 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4892, ptr %6, align 4, !tbaa !6
  br i1 %4651, label %4934, label %4893

4893:                                             ; preds = %4891, %4921
  %4894 = phi i64 [ %4925, %4921 ], [ 1, %4891 ]
  %4895 = getelementptr inbounds i32, ptr %4, i64 %4894
  %4896 = load i32, ptr %4895, align 4, !tbaa !6
  %4897 = getelementptr inbounds i32, ptr %12, i64 %4894
  %4898 = load i32, ptr %4897, align 4, !tbaa !6
  %4899 = add nsw i32 %4898, -1
  %4900 = icmp slt i32 %4896, %4899
  br i1 %4900, label %4901, label %4919

4901:                                             ; preds = %4893
  br i1 %4888, label %4911, label %4902

4902:                                             ; preds = %4901
  %4903 = shl i64 %4894, 32
  %4904 = add i64 %4903, -4294967296
  %4905 = ashr exact i64 %4904, 32
  %4906 = getelementptr inbounds i32, ptr %7, i64 %4905
  %4907 = load i32, ptr %4906, align 4, !tbaa !6
  %4908 = getelementptr inbounds i32, ptr %6, i64 %4894
  %4909 = load i32, ptr %4908, align 4, !tbaa !6
  %4910 = add nsw i32 %4909, %4907
  store i32 %4910, ptr %4908, align 4, !tbaa !6
  br label %4929

4911:                                             ; preds = %4884, %4901
  %4912 = phi i32 [ %4896, %4901 ], [ %4885, %4884 ]
  %4913 = phi ptr [ %4895, %4901 ], [ %4, %4884 ]
  %4914 = phi i64 [ %4894, %4901 ], [ 0, %4884 ]
  %4915 = add nsw i32 %4912, 1
  store i32 %4915, ptr %4913, align 4, !tbaa !6
  %4916 = getelementptr inbounds i32, ptr %7, i64 %4914
  %4917 = load i32, ptr %4916, align 4, !tbaa !6
  %4918 = getelementptr inbounds i32, ptr %6, i64 %4914
  br label %4929

4919:                                             ; preds = %4893
  %4920 = icmp eq i32 %4896, %4899
  br i1 %4920, label %4921, label %4927

4921:                                             ; preds = %4919
  store i32 0, ptr %4895, align 4, !tbaa !6
  %4922 = getelementptr inbounds i32, ptr %8, i64 %4894
  %4923 = load i32, ptr %4922, align 4, !tbaa !6
  %4924 = getelementptr inbounds i32, ptr %6, i64 %4894
  store i32 %4923, ptr %4924, align 4, !tbaa !6
  %4925 = add nuw nsw i64 %4894, 1
  %4926 = icmp eq i64 %4925, %4649
  br i1 %4926, label %4934, label %4893, !llvm.loop !743

4927:                                             ; preds = %4889, %4919
  %4928 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1045, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5554

4929:                                             ; preds = %4902, %4911
  %4930 = phi ptr [ %4918, %4911 ], [ %4895, %4902 ]
  %4931 = phi i32 [ %4917, %4911 ], [ 1, %4902 ]
  %4932 = load i32, ptr %4930, align 4, !tbaa !6
  %4933 = add nsw i32 %4932, %4931
  store i32 %4933, ptr %4930, align 4, !tbaa !6
  br label %4934

4934:                                             ; preds = %4921, %4929, %4891, %4881
  %4935 = icmp eq i32 %4883, %5
  br i1 %4935, label %5549, label %4796, !llvm.loop !744

4936:                                             ; preds = %4335
  %4937 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1045, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5549

4938:                                             ; preds = %18
  %4939 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4940 = load ptr, ptr %4939, align 8, !tbaa !10
  %4941 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4942 = load ptr, ptr %4941, align 8, !tbaa !10
  %4943 = load i32, ptr %4940, align 4, !tbaa !6
  %4944 = sitofp i32 %4943 to double
  store double %4944, ptr %4942, align 8, !tbaa !19
  %4945 = icmp eq i32 %13, 0
  br i1 %4945, label %5549, label %4946

4946:                                             ; preds = %4938
  switch i32 %1, label %5547 [
    i32 1, label %4947
    i32 0, label %5249
  ]

4947:                                             ; preds = %4946
  %4948 = getelementptr inbounds i32, ptr %3, i64 %19
  %4949 = load i32, ptr %4948, align 4, !tbaa !6
  %4950 = icmp eq i32 %4949, 0
  %4951 = icmp sgt i32 %5, 0
  br i1 %4950, label %4961, label %4952

4952:                                             ; preds = %4947
  br i1 %4951, label %4953, label %5549

4953:                                             ; preds = %4952
  %4954 = icmp sgt i32 %13, 1
  %4955 = icmp sgt i32 %13, 0
  %4956 = add i32 %13, -2
  %4957 = zext i32 %4956 to i64
  %4958 = zext i32 %13 to i64
  %4959 = add nuw i32 %5, 1
  %4960 = icmp eq i32 %13, 1
  br label %5109

4961:                                             ; preds = %4947
  br i1 %4951, label %4962, label %5549

4962:                                             ; preds = %4961
  %4963 = icmp sgt i32 %13, 1
  %4964 = icmp sgt i32 %13, 0
  %4965 = add i32 %13, -2
  %4966 = zext i32 %4965 to i64
  %4967 = zext i32 %13 to i64
  %4968 = add nuw i32 %5, 1
  %4969 = icmp eq i32 %13, 1
  br label %4970

4970:                                             ; preds = %4962, %5107
  %4971 = phi double [ %4944, %4962 ], [ %5057, %5107 ]
  %4972 = phi i32 [ 0, %4962 ], [ %5059, %5107 ]
  %4973 = phi double [ 0.000000e+00, %4962 ], [ %5058, %5107 ]
  %4974 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4963, label %4975, label %5044

4975:                                             ; preds = %4970, %5034
  %4976 = phi i32 [ %5043, %5034 ], [ 0, %4970 ]
  %4977 = phi i64 [ %4985, %5034 ], [ %4967, %4970 ]
  %4978 = phi i64 [ %5042, %5034 ], [ %4966, %4970 ]
  %4979 = phi i32 [ %5040, %5034 ], [ %4974, %4970 ]
  %4980 = sub i32 %4965, %4976
  %4981 = tail call i32 @llvm.smin.i32(i32 %4980, i32 0)
  %4982 = sub i32 %4980, %4981
  %4983 = zext i32 %4982 to i64
  %4984 = add nuw nsw i64 %4983, 1
  %4985 = add nsw i64 %4977, -1
  %4986 = icmp ult i32 %4982, 31
  br i1 %4986, label %5022, label %4987

4987:                                             ; preds = %4975
  %4988 = and i64 %4984, 8589934560
  %4989 = sub i64 %4978, %4988
  br label %4990

4990:                                             ; preds = %4990, %4987
  %4991 = phi i64 [ 0, %4987 ], [ %5014, %4990 ]
  %4992 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4987 ], [ %5010, %4990 ]
  %4993 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4987 ], [ %5011, %4990 ]
  %4994 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4987 ], [ %5012, %4990 ]
  %4995 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4987 ], [ %5013, %4990 ]
  %4996 = sub i64 %4978, %4991
  %4997 = getelementptr inbounds i32, ptr %9, i64 %4996
  %4998 = getelementptr inbounds i32, ptr %4997, i64 -7
  %4999 = load <8 x i32>, ptr %4998, align 4, !tbaa !6
  %5000 = shufflevector <8 x i32> %4999, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5001 = getelementptr inbounds i32, ptr %4997, i64 -15
  %5002 = load <8 x i32>, ptr %5001, align 4, !tbaa !6
  %5003 = shufflevector <8 x i32> %5002, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5004 = getelementptr inbounds i32, ptr %4997, i64 -23
  %5005 = load <8 x i32>, ptr %5004, align 4, !tbaa !6
  %5006 = shufflevector <8 x i32> %5005, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5007 = getelementptr inbounds i32, ptr %4997, i64 -31
  %5008 = load <8 x i32>, ptr %5007, align 4, !tbaa !6
  %5009 = shufflevector <8 x i32> %5008, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5010 = mul <8 x i32> %5000, %4992
  %5011 = mul <8 x i32> %5003, %4993
  %5012 = mul <8 x i32> %5006, %4994
  %5013 = mul <8 x i32> %5009, %4995
  %5014 = add nuw i64 %4991, 32
  %5015 = icmp eq i64 %5014, %4988
  br i1 %5015, label %5016, label %4990, !llvm.loop !745

5016:                                             ; preds = %4990
  %5017 = mul <8 x i32> %5011, %5010
  %5018 = mul <8 x i32> %5012, %5017
  %5019 = mul <8 x i32> %5013, %5018
  %5020 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5019)
  %5021 = icmp eq i64 %4984, %4988
  br i1 %5021, label %5034, label %5022

5022:                                             ; preds = %4975, %5016
  %5023 = phi i64 [ %4978, %4975 ], [ %4989, %5016 ]
  %5024 = phi i32 [ 1, %4975 ], [ %5020, %5016 ]
  br label %5025

5025:                                             ; preds = %5022, %5025
  %5026 = phi i64 [ %5031, %5025 ], [ %5023, %5022 ]
  %5027 = phi i32 [ %5030, %5025 ], [ %5024, %5022 ]
  %5028 = getelementptr inbounds i32, ptr %9, i64 %5026
  %5029 = load i32, ptr %5028, align 4, !tbaa !6
  %5030 = mul nsw i32 %5029, %5027
  %5031 = add nsw i64 %5026, -1
  %5032 = trunc i64 %5026 to i32
  %5033 = icmp sgt i32 %5032, 0
  br i1 %5033, label %5025, label %5034, !llvm.loop !746

5034:                                             ; preds = %5025, %5016
  %5035 = phi i32 [ %5020, %5016 ], [ %5030, %5025 ]
  %5036 = and i64 %4985, 4294967295
  %5037 = getelementptr inbounds i32, ptr %6, i64 %5036
  %5038 = load i32, ptr %5037, align 4, !tbaa !6
  %5039 = mul nsw i32 %5038, %5035
  %5040 = add nsw i32 %5039, %4979
  %5041 = icmp sgt i64 %4977, 2
  %5042 = add nsw i64 %4978, -1
  %5043 = add i32 %4976, 1
  br i1 %5041, label %4975, label %5044, !llvm.loop !747

5044:                                             ; preds = %5034, %4970
  %5045 = phi i32 [ %4974, %4970 ], [ %5040, %5034 ]
  %5046 = sext i32 %5045 to i64
  %5047 = getelementptr inbounds double, ptr %2, i64 %5046
  %5048 = load double, ptr %5047, align 8, !tbaa !19
  %5049 = getelementptr inbounds i32, ptr %4940, i64 %5046
  %5050 = load i32, ptr %5049, align 4, !tbaa !6
  %5051 = sitofp i32 %5050 to double
  %5052 = fcmp fast one double %5048, 0.000000e+00
  %5053 = fcmp fast olt double %4971, %5051
  %5054 = select i1 %5052, i1 %5053, i1 false
  br i1 %5054, label %5055, label %5056

5055:                                             ; preds = %5044
  store double %5051, ptr %4942, align 8, !tbaa !19
  br label %5056

5056:                                             ; preds = %5055, %5044
  %5057 = phi double [ %5051, %5055 ], [ %4971, %5044 ]
  %5058 = fadd fast double %5048, %4973
  %5059 = add nuw nsw i32 %4972, 1
  br i1 %4964, label %5060, label %5107

5060:                                             ; preds = %5056
  %5061 = load i32, ptr %4, align 4, !tbaa !6
  %5062 = load i32, ptr %12, align 4, !tbaa !6
  %5063 = add nsw i32 %5062, -1
  %5064 = icmp slt i32 %5061, %5063
  br i1 %5064, label %5084, label %5065

5065:                                             ; preds = %5060
  %5066 = icmp eq i32 %5061, %5063
  br i1 %5066, label %5067, label %5100

5067:                                             ; preds = %5065
  store i32 0, ptr %4, align 4, !tbaa !6
  %5068 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5068, ptr %6, align 4, !tbaa !6
  br i1 %4969, label %5107, label %5069

5069:                                             ; preds = %5067, %5094
  %5070 = phi i64 [ %5098, %5094 ], [ 1, %5067 ]
  %5071 = getelementptr inbounds i32, ptr %4, i64 %5070
  %5072 = load i32, ptr %5071, align 4, !tbaa !6
  %5073 = getelementptr inbounds i32, ptr %12, i64 %5070
  %5074 = load i32, ptr %5073, align 4, !tbaa !6
  %5075 = add nsw i32 %5074, -1
  %5076 = icmp slt i32 %5072, %5075
  br i1 %5076, label %5077, label %5092

5077:                                             ; preds = %5069
  br i1 %5064, label %5084, label %5078

5078:                                             ; preds = %5077
  %5079 = getelementptr inbounds i32, ptr %7, i64 %5070
  %5080 = load i32, ptr %5079, align 4, !tbaa !6
  %5081 = getelementptr inbounds i32, ptr %6, i64 %5070
  %5082 = load i32, ptr %5081, align 4, !tbaa !6
  %5083 = add nsw i32 %5082, %5080
  store i32 %5083, ptr %5081, align 4, !tbaa !6
  br label %5102

5084:                                             ; preds = %5060, %5077
  %5085 = phi i32 [ %5072, %5077 ], [ %5061, %5060 ]
  %5086 = phi ptr [ %5071, %5077 ], [ %4, %5060 ]
  %5087 = phi i64 [ %5070, %5077 ], [ 0, %5060 ]
  %5088 = add nsw i32 %5085, 1
  store i32 %5088, ptr %5086, align 4, !tbaa !6
  %5089 = getelementptr inbounds i32, ptr %7, i64 %5087
  %5090 = load i32, ptr %5089, align 4, !tbaa !6
  %5091 = getelementptr inbounds i32, ptr %6, i64 %5087
  br label %5102

5092:                                             ; preds = %5069
  %5093 = icmp eq i32 %5072, %5075
  br i1 %5093, label %5094, label %5100

5094:                                             ; preds = %5092
  store i32 0, ptr %5071, align 4, !tbaa !6
  %5095 = getelementptr inbounds i32, ptr %8, i64 %5070
  %5096 = load i32, ptr %5095, align 4, !tbaa !6
  %5097 = getelementptr inbounds i32, ptr %6, i64 %5070
  store i32 %5096, ptr %5097, align 4, !tbaa !6
  %5098 = add nuw nsw i64 %5070, 1
  %5099 = icmp eq i64 %5098, %4967
  br i1 %5099, label %5107, label %5069, !llvm.loop !748

5100:                                             ; preds = %5065, %5092
  %5101 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1050, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5554

5102:                                             ; preds = %5078, %5084
  %5103 = phi ptr [ %5091, %5084 ], [ %5071, %5078 ]
  %5104 = phi i32 [ %5090, %5084 ], [ 1, %5078 ]
  %5105 = load i32, ptr %5103, align 4, !tbaa !6
  %5106 = add nsw i32 %5105, %5104
  store i32 %5106, ptr %5103, align 4, !tbaa !6
  br label %5107

5107:                                             ; preds = %5094, %5102, %5067, %5056
  %5108 = icmp eq i32 %5059, %5
  br i1 %5108, label %5549, label %4970, !llvm.loop !749

5109:                                             ; preds = %4953, %5247
  %5110 = phi double [ %4944, %4953 ], [ %5195, %5247 ]
  %5111 = phi i32 [ 0, %4953 ], [ %5196, %5247 ]
  %5112 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4954, label %5113, label %5182

5113:                                             ; preds = %5109, %5172
  %5114 = phi i32 [ %5181, %5172 ], [ 0, %5109 ]
  %5115 = phi i64 [ %5123, %5172 ], [ %4958, %5109 ]
  %5116 = phi i64 [ %5180, %5172 ], [ %4957, %5109 ]
  %5117 = phi i32 [ %5178, %5172 ], [ %5112, %5109 ]
  %5118 = sub i32 %4956, %5114
  %5119 = tail call i32 @llvm.smin.i32(i32 %5118, i32 0)
  %5120 = sub i32 %5118, %5119
  %5121 = zext i32 %5120 to i64
  %5122 = add nuw nsw i64 %5121, 1
  %5123 = add nsw i64 %5115, -1
  %5124 = icmp ult i32 %5120, 31
  br i1 %5124, label %5160, label %5125

5125:                                             ; preds = %5113
  %5126 = and i64 %5122, 8589934560
  %5127 = sub i64 %5116, %5126
  br label %5128

5128:                                             ; preds = %5128, %5125
  %5129 = phi i64 [ 0, %5125 ], [ %5152, %5128 ]
  %5130 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5125 ], [ %5148, %5128 ]
  %5131 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5125 ], [ %5149, %5128 ]
  %5132 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5125 ], [ %5150, %5128 ]
  %5133 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5125 ], [ %5151, %5128 ]
  %5134 = sub i64 %5116, %5129
  %5135 = getelementptr inbounds i32, ptr %11, i64 %5134
  %5136 = getelementptr inbounds i32, ptr %5135, i64 -7
  %5137 = load <8 x i32>, ptr %5136, align 4, !tbaa !6
  %5138 = shufflevector <8 x i32> %5137, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5139 = getelementptr inbounds i32, ptr %5135, i64 -15
  %5140 = load <8 x i32>, ptr %5139, align 4, !tbaa !6
  %5141 = shufflevector <8 x i32> %5140, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5142 = getelementptr inbounds i32, ptr %5135, i64 -23
  %5143 = load <8 x i32>, ptr %5142, align 4, !tbaa !6
  %5144 = shufflevector <8 x i32> %5143, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5145 = getelementptr inbounds i32, ptr %5135, i64 -31
  %5146 = load <8 x i32>, ptr %5145, align 4, !tbaa !6
  %5147 = shufflevector <8 x i32> %5146, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5148 = mul <8 x i32> %5138, %5130
  %5149 = mul <8 x i32> %5141, %5131
  %5150 = mul <8 x i32> %5144, %5132
  %5151 = mul <8 x i32> %5147, %5133
  %5152 = add nuw i64 %5129, 32
  %5153 = icmp eq i64 %5152, %5126
  br i1 %5153, label %5154, label %5128, !llvm.loop !750

5154:                                             ; preds = %5128
  %5155 = mul <8 x i32> %5149, %5148
  %5156 = mul <8 x i32> %5150, %5155
  %5157 = mul <8 x i32> %5151, %5156
  %5158 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5157)
  %5159 = icmp eq i64 %5122, %5126
  br i1 %5159, label %5172, label %5160

5160:                                             ; preds = %5113, %5154
  %5161 = phi i64 [ %5116, %5113 ], [ %5127, %5154 ]
  %5162 = phi i32 [ 1, %5113 ], [ %5158, %5154 ]
  br label %5163

5163:                                             ; preds = %5160, %5163
  %5164 = phi i64 [ %5169, %5163 ], [ %5161, %5160 ]
  %5165 = phi i32 [ %5168, %5163 ], [ %5162, %5160 ]
  %5166 = getelementptr inbounds i32, ptr %11, i64 %5164
  %5167 = load i32, ptr %5166, align 4, !tbaa !6
  %5168 = mul nsw i32 %5167, %5165
  %5169 = add nsw i64 %5164, -1
  %5170 = trunc i64 %5164 to i32
  %5171 = icmp sgt i32 %5170, 0
  br i1 %5171, label %5163, label %5172, !llvm.loop !751

5172:                                             ; preds = %5163, %5154
  %5173 = phi i32 [ %5158, %5154 ], [ %5168, %5163 ]
  %5174 = and i64 %5123, 4294967295
  %5175 = getelementptr inbounds i32, ptr %6, i64 %5174
  %5176 = load i32, ptr %5175, align 4, !tbaa !6
  %5177 = mul nsw i32 %5176, %5173
  %5178 = add nsw i32 %5177, %5117
  %5179 = icmp sgt i64 %5115, 2
  %5180 = add nsw i64 %5116, -1
  %5181 = add i32 %5114, 1
  br i1 %5179, label %5113, label %5182, !llvm.loop !752

5182:                                             ; preds = %5172, %5109
  %5183 = phi i32 [ %5112, %5109 ], [ %5178, %5172 ]
  %5184 = icmp slt i32 %5183, %5
  br i1 %5184, label %5187, label %5185

5185:                                             ; preds = %5182
  %5186 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1050, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5554

5187:                                             ; preds = %5182
  %5188 = sext i32 %5183 to i64
  %5189 = getelementptr inbounds i32, ptr %4940, i64 %5188
  %5190 = load i32, ptr %5189, align 4, !tbaa !6
  %5191 = sitofp i32 %5190 to double
  %5192 = fcmp fast olt double %5110, %5191
  br i1 %5192, label %5193, label %5194

5193:                                             ; preds = %5187
  store double %5191, ptr %4942, align 8, !tbaa !19
  br label %5194

5194:                                             ; preds = %5187, %5193
  %5195 = phi double [ %5110, %5187 ], [ %5191, %5193 ]
  %5196 = add nuw nsw i32 %5111, 1
  br i1 %4955, label %5197, label %5247

5197:                                             ; preds = %5194
  %5198 = load i32, ptr %4, align 4, !tbaa !6
  %5199 = load i32, ptr %12, align 4, !tbaa !6
  %5200 = add nsw i32 %5199, -1
  %5201 = icmp slt i32 %5198, %5200
  br i1 %5201, label %5224, label %5202

5202:                                             ; preds = %5197
  %5203 = icmp eq i32 %5198, %5200
  br i1 %5203, label %5204, label %5240

5204:                                             ; preds = %5202
  store i32 0, ptr %4, align 4, !tbaa !6
  %5205 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5205, ptr %6, align 4, !tbaa !6
  br i1 %4960, label %5247, label %5206

5206:                                             ; preds = %5204, %5234
  %5207 = phi i64 [ %5238, %5234 ], [ 1, %5204 ]
  %5208 = getelementptr inbounds i32, ptr %4, i64 %5207
  %5209 = load i32, ptr %5208, align 4, !tbaa !6
  %5210 = getelementptr inbounds i32, ptr %12, i64 %5207
  %5211 = load i32, ptr %5210, align 4, !tbaa !6
  %5212 = add nsw i32 %5211, -1
  %5213 = icmp slt i32 %5209, %5212
  br i1 %5213, label %5214, label %5232

5214:                                             ; preds = %5206
  br i1 %5201, label %5224, label %5215

5215:                                             ; preds = %5214
  %5216 = shl i64 %5207, 32
  %5217 = add i64 %5216, -4294967296
  %5218 = ashr exact i64 %5217, 32
  %5219 = getelementptr inbounds i32, ptr %7, i64 %5218
  %5220 = load i32, ptr %5219, align 4, !tbaa !6
  %5221 = getelementptr inbounds i32, ptr %6, i64 %5207
  %5222 = load i32, ptr %5221, align 4, !tbaa !6
  %5223 = add nsw i32 %5222, %5220
  store i32 %5223, ptr %5221, align 4, !tbaa !6
  br label %5242

5224:                                             ; preds = %5197, %5214
  %5225 = phi i32 [ %5209, %5214 ], [ %5198, %5197 ]
  %5226 = phi ptr [ %5208, %5214 ], [ %4, %5197 ]
  %5227 = phi i64 [ %5207, %5214 ], [ 0, %5197 ]
  %5228 = add nsw i32 %5225, 1
  store i32 %5228, ptr %5226, align 4, !tbaa !6
  %5229 = getelementptr inbounds i32, ptr %7, i64 %5227
  %5230 = load i32, ptr %5229, align 4, !tbaa !6
  %5231 = getelementptr inbounds i32, ptr %6, i64 %5227
  br label %5242

5232:                                             ; preds = %5206
  %5233 = icmp eq i32 %5209, %5212
  br i1 %5233, label %5234, label %5240

5234:                                             ; preds = %5232
  store i32 0, ptr %5208, align 4, !tbaa !6
  %5235 = getelementptr inbounds i32, ptr %8, i64 %5207
  %5236 = load i32, ptr %5235, align 4, !tbaa !6
  %5237 = getelementptr inbounds i32, ptr %6, i64 %5207
  store i32 %5236, ptr %5237, align 4, !tbaa !6
  %5238 = add nuw nsw i64 %5207, 1
  %5239 = icmp eq i64 %5238, %4958
  br i1 %5239, label %5247, label %5206, !llvm.loop !753

5240:                                             ; preds = %5202, %5232
  %5241 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1050, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5554

5242:                                             ; preds = %5215, %5224
  %5243 = phi ptr [ %5231, %5224 ], [ %5208, %5215 ]
  %5244 = phi i32 [ %5230, %5224 ], [ 1, %5215 ]
  %5245 = load i32, ptr %5243, align 4, !tbaa !6
  %5246 = add nsw i32 %5245, %5244
  store i32 %5246, ptr %5243, align 4, !tbaa !6
  br label %5247

5247:                                             ; preds = %5234, %5242, %5204, %5194
  %5248 = icmp eq i32 %5196, %5
  br i1 %5248, label %5549, label %5109, !llvm.loop !754

5249:                                             ; preds = %4946
  %5250 = getelementptr inbounds i32, ptr %3, i64 %19
  %5251 = load i32, ptr %5250, align 4, !tbaa !6
  %5252 = icmp eq i32 %5251, 0
  %5253 = icmp sgt i32 %5, 0
  br i1 %5252, label %5263, label %5254

5254:                                             ; preds = %5249
  br i1 %5253, label %5255, label %5549

5255:                                             ; preds = %5254
  %5256 = icmp sgt i32 %13, 1
  %5257 = icmp sgt i32 %13, 0
  %5258 = add i32 %13, -2
  %5259 = zext i32 %5258 to i64
  %5260 = zext i32 %13 to i64
  %5261 = add nuw i32 %5, 1
  %5262 = icmp eq i32 %13, 1
  br label %5407

5263:                                             ; preds = %5249
  br i1 %5253, label %5264, label %5549

5264:                                             ; preds = %5263
  %5265 = icmp sgt i32 %13, 1
  %5266 = icmp sgt i32 %13, 0
  %5267 = add i32 %13, -2
  %5268 = zext i32 %5267 to i64
  %5269 = zext i32 %13 to i64
  %5270 = add nuw i32 %5, 1
  %5271 = icmp eq i32 %13, 1
  br label %5272

5272:                                             ; preds = %5264, %5405
  %5273 = phi double [ %4944, %5264 ], [ %5355, %5405 ]
  %5274 = phi i32 [ 0, %5264 ], [ %5357, %5405 ]
  %5275 = phi double [ 0.000000e+00, %5264 ], [ %5356, %5405 ]
  %5276 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %5265, label %5277, label %5346

5277:                                             ; preds = %5272, %5336
  %5278 = phi i32 [ %5345, %5336 ], [ 0, %5272 ]
  %5279 = phi i64 [ %5287, %5336 ], [ %5269, %5272 ]
  %5280 = phi i64 [ %5344, %5336 ], [ %5268, %5272 ]
  %5281 = phi i32 [ %5342, %5336 ], [ %5276, %5272 ]
  %5282 = sub i32 %5267, %5278
  %5283 = tail call i32 @llvm.smin.i32(i32 %5282, i32 0)
  %5284 = sub i32 %5282, %5283
  %5285 = zext i32 %5284 to i64
  %5286 = add nuw nsw i64 %5285, 1
  %5287 = add nsw i64 %5279, -1
  %5288 = icmp ult i32 %5284, 31
  br i1 %5288, label %5324, label %5289

5289:                                             ; preds = %5277
  %5290 = and i64 %5286, 8589934560
  %5291 = sub i64 %5280, %5290
  br label %5292

5292:                                             ; preds = %5292, %5289
  %5293 = phi i64 [ 0, %5289 ], [ %5316, %5292 ]
  %5294 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5289 ], [ %5312, %5292 ]
  %5295 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5289 ], [ %5313, %5292 ]
  %5296 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5289 ], [ %5314, %5292 ]
  %5297 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5289 ], [ %5315, %5292 ]
  %5298 = sub i64 %5280, %5293
  %5299 = getelementptr inbounds i32, ptr %9, i64 %5298
  %5300 = getelementptr inbounds i32, ptr %5299, i64 -7
  %5301 = load <8 x i32>, ptr %5300, align 4, !tbaa !6
  %5302 = shufflevector <8 x i32> %5301, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5303 = getelementptr inbounds i32, ptr %5299, i64 -15
  %5304 = load <8 x i32>, ptr %5303, align 4, !tbaa !6
  %5305 = shufflevector <8 x i32> %5304, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5306 = getelementptr inbounds i32, ptr %5299, i64 -23
  %5307 = load <8 x i32>, ptr %5306, align 4, !tbaa !6
  %5308 = shufflevector <8 x i32> %5307, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5309 = getelementptr inbounds i32, ptr %5299, i64 -31
  %5310 = load <8 x i32>, ptr %5309, align 4, !tbaa !6
  %5311 = shufflevector <8 x i32> %5310, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5312 = mul <8 x i32> %5302, %5294
  %5313 = mul <8 x i32> %5305, %5295
  %5314 = mul <8 x i32> %5308, %5296
  %5315 = mul <8 x i32> %5311, %5297
  %5316 = add nuw i64 %5293, 32
  %5317 = icmp eq i64 %5316, %5290
  br i1 %5317, label %5318, label %5292, !llvm.loop !755

5318:                                             ; preds = %5292
  %5319 = mul <8 x i32> %5313, %5312
  %5320 = mul <8 x i32> %5314, %5319
  %5321 = mul <8 x i32> %5315, %5320
  %5322 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5321)
  %5323 = icmp eq i64 %5286, %5290
  br i1 %5323, label %5336, label %5324

5324:                                             ; preds = %5277, %5318
  %5325 = phi i64 [ %5280, %5277 ], [ %5291, %5318 ]
  %5326 = phi i32 [ 1, %5277 ], [ %5322, %5318 ]
  br label %5327

5327:                                             ; preds = %5324, %5327
  %5328 = phi i64 [ %5333, %5327 ], [ %5325, %5324 ]
  %5329 = phi i32 [ %5332, %5327 ], [ %5326, %5324 ]
  %5330 = getelementptr inbounds i32, ptr %9, i64 %5328
  %5331 = load i32, ptr %5330, align 4, !tbaa !6
  %5332 = mul nsw i32 %5331, %5329
  %5333 = add nsw i64 %5328, -1
  %5334 = trunc i64 %5328 to i32
  %5335 = icmp sgt i32 %5334, 0
  br i1 %5335, label %5327, label %5336, !llvm.loop !756

5336:                                             ; preds = %5327, %5318
  %5337 = phi i32 [ %5322, %5318 ], [ %5332, %5327 ]
  %5338 = and i64 %5287, 4294967295
  %5339 = getelementptr inbounds i32, ptr %6, i64 %5338
  %5340 = load i32, ptr %5339, align 4, !tbaa !6
  %5341 = mul nsw i32 %5340, %5337
  %5342 = add nsw i32 %5341, %5281
  %5343 = icmp sgt i64 %5279, 2
  %5344 = add nsw i64 %5280, -1
  %5345 = add i32 %5278, 1
  br i1 %5343, label %5277, label %5346, !llvm.loop !757

5346:                                             ; preds = %5336, %5272
  %5347 = phi i32 [ %5276, %5272 ], [ %5342, %5336 ]
  %5348 = sext i32 %5347 to i64
  %5349 = getelementptr inbounds i32, ptr %4940, i64 %5348
  %5350 = load i32, ptr %5349, align 4, !tbaa !6
  %5351 = sitofp i32 %5350 to double
  %5352 = fcmp fast olt double %5273, %5351
  br i1 %5352, label %5353, label %5354

5353:                                             ; preds = %5346
  store double %5351, ptr %4942, align 8, !tbaa !19
  br label %5354

5354:                                             ; preds = %5353, %5346
  %5355 = phi double [ %5351, %5353 ], [ %5273, %5346 ]
  %5356 = fadd fast double %5275, 1.000000e+00
  %5357 = add nuw nsw i32 %5274, 1
  br i1 %5266, label %5358, label %5405

5358:                                             ; preds = %5354
  %5359 = load i32, ptr %4, align 4, !tbaa !6
  %5360 = load i32, ptr %12, align 4, !tbaa !6
  %5361 = add nsw i32 %5360, -1
  %5362 = icmp slt i32 %5359, %5361
  br i1 %5362, label %5382, label %5363

5363:                                             ; preds = %5358
  %5364 = icmp eq i32 %5359, %5361
  br i1 %5364, label %5365, label %5398

5365:                                             ; preds = %5363
  store i32 0, ptr %4, align 4, !tbaa !6
  %5366 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5366, ptr %6, align 4, !tbaa !6
  br i1 %5271, label %5405, label %5367

5367:                                             ; preds = %5365, %5392
  %5368 = phi i64 [ %5396, %5392 ], [ 1, %5365 ]
  %5369 = getelementptr inbounds i32, ptr %4, i64 %5368
  %5370 = load i32, ptr %5369, align 4, !tbaa !6
  %5371 = getelementptr inbounds i32, ptr %12, i64 %5368
  %5372 = load i32, ptr %5371, align 4, !tbaa !6
  %5373 = add nsw i32 %5372, -1
  %5374 = icmp slt i32 %5370, %5373
  br i1 %5374, label %5375, label %5390

5375:                                             ; preds = %5367
  br i1 %5362, label %5382, label %5376

5376:                                             ; preds = %5375
  %5377 = getelementptr inbounds i32, ptr %7, i64 %5368
  %5378 = load i32, ptr %5377, align 4, !tbaa !6
  %5379 = getelementptr inbounds i32, ptr %6, i64 %5368
  %5380 = load i32, ptr %5379, align 4, !tbaa !6
  %5381 = add nsw i32 %5380, %5378
  store i32 %5381, ptr %5379, align 4, !tbaa !6
  br label %5400

5382:                                             ; preds = %5358, %5375
  %5383 = phi i32 [ %5370, %5375 ], [ %5359, %5358 ]
  %5384 = phi ptr [ %5369, %5375 ], [ %4, %5358 ]
  %5385 = phi i64 [ %5368, %5375 ], [ 0, %5358 ]
  %5386 = add nsw i32 %5383, 1
  store i32 %5386, ptr %5384, align 4, !tbaa !6
  %5387 = getelementptr inbounds i32, ptr %7, i64 %5385
  %5388 = load i32, ptr %5387, align 4, !tbaa !6
  %5389 = getelementptr inbounds i32, ptr %6, i64 %5385
  br label %5400

5390:                                             ; preds = %5367
  %5391 = icmp eq i32 %5370, %5373
  br i1 %5391, label %5392, label %5398

5392:                                             ; preds = %5390
  store i32 0, ptr %5369, align 4, !tbaa !6
  %5393 = getelementptr inbounds i32, ptr %8, i64 %5368
  %5394 = load i32, ptr %5393, align 4, !tbaa !6
  %5395 = getelementptr inbounds i32, ptr %6, i64 %5368
  store i32 %5394, ptr %5395, align 4, !tbaa !6
  %5396 = add nuw nsw i64 %5368, 1
  %5397 = icmp eq i64 %5396, %5269
  br i1 %5397, label %5405, label %5367, !llvm.loop !758

5398:                                             ; preds = %5363, %5390
  %5399 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1050, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5554

5400:                                             ; preds = %5376, %5382
  %5401 = phi ptr [ %5389, %5382 ], [ %5369, %5376 ]
  %5402 = phi i32 [ %5388, %5382 ], [ 1, %5376 ]
  %5403 = load i32, ptr %5401, align 4, !tbaa !6
  %5404 = add nsw i32 %5403, %5402
  store i32 %5404, ptr %5401, align 4, !tbaa !6
  br label %5405

5405:                                             ; preds = %5392, %5400, %5365, %5354
  %5406 = icmp eq i32 %5357, %5
  br i1 %5406, label %5549, label %5272, !llvm.loop !759

5407:                                             ; preds = %5255, %5545
  %5408 = phi double [ %4944, %5255 ], [ %5493, %5545 ]
  %5409 = phi i32 [ 0, %5255 ], [ %5494, %5545 ]
  %5410 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %5256, label %5411, label %5480

5411:                                             ; preds = %5407, %5470
  %5412 = phi i32 [ %5479, %5470 ], [ 0, %5407 ]
  %5413 = phi i64 [ %5421, %5470 ], [ %5260, %5407 ]
  %5414 = phi i64 [ %5478, %5470 ], [ %5259, %5407 ]
  %5415 = phi i32 [ %5476, %5470 ], [ %5410, %5407 ]
  %5416 = sub i32 %5258, %5412
  %5417 = tail call i32 @llvm.smin.i32(i32 %5416, i32 0)
  %5418 = sub i32 %5416, %5417
  %5419 = zext i32 %5418 to i64
  %5420 = add nuw nsw i64 %5419, 1
  %5421 = add nsw i64 %5413, -1
  %5422 = icmp ult i32 %5418, 31
  br i1 %5422, label %5458, label %5423

5423:                                             ; preds = %5411
  %5424 = and i64 %5420, 8589934560
  %5425 = sub i64 %5414, %5424
  br label %5426

5426:                                             ; preds = %5426, %5423
  %5427 = phi i64 [ 0, %5423 ], [ %5450, %5426 ]
  %5428 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5423 ], [ %5446, %5426 ]
  %5429 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5423 ], [ %5447, %5426 ]
  %5430 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5423 ], [ %5448, %5426 ]
  %5431 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5423 ], [ %5449, %5426 ]
  %5432 = sub i64 %5414, %5427
  %5433 = getelementptr inbounds i32, ptr %11, i64 %5432
  %5434 = getelementptr inbounds i32, ptr %5433, i64 -7
  %5435 = load <8 x i32>, ptr %5434, align 4, !tbaa !6
  %5436 = shufflevector <8 x i32> %5435, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5437 = getelementptr inbounds i32, ptr %5433, i64 -15
  %5438 = load <8 x i32>, ptr %5437, align 4, !tbaa !6
  %5439 = shufflevector <8 x i32> %5438, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5440 = getelementptr inbounds i32, ptr %5433, i64 -23
  %5441 = load <8 x i32>, ptr %5440, align 4, !tbaa !6
  %5442 = shufflevector <8 x i32> %5441, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5443 = getelementptr inbounds i32, ptr %5433, i64 -31
  %5444 = load <8 x i32>, ptr %5443, align 4, !tbaa !6
  %5445 = shufflevector <8 x i32> %5444, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5446 = mul <8 x i32> %5436, %5428
  %5447 = mul <8 x i32> %5439, %5429
  %5448 = mul <8 x i32> %5442, %5430
  %5449 = mul <8 x i32> %5445, %5431
  %5450 = add nuw i64 %5427, 32
  %5451 = icmp eq i64 %5450, %5424
  br i1 %5451, label %5452, label %5426, !llvm.loop !760

5452:                                             ; preds = %5426
  %5453 = mul <8 x i32> %5447, %5446
  %5454 = mul <8 x i32> %5448, %5453
  %5455 = mul <8 x i32> %5449, %5454
  %5456 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5455)
  %5457 = icmp eq i64 %5420, %5424
  br i1 %5457, label %5470, label %5458

5458:                                             ; preds = %5411, %5452
  %5459 = phi i64 [ %5414, %5411 ], [ %5425, %5452 ]
  %5460 = phi i32 [ 1, %5411 ], [ %5456, %5452 ]
  br label %5461

5461:                                             ; preds = %5458, %5461
  %5462 = phi i64 [ %5467, %5461 ], [ %5459, %5458 ]
  %5463 = phi i32 [ %5466, %5461 ], [ %5460, %5458 ]
  %5464 = getelementptr inbounds i32, ptr %11, i64 %5462
  %5465 = load i32, ptr %5464, align 4, !tbaa !6
  %5466 = mul nsw i32 %5465, %5463
  %5467 = add nsw i64 %5462, -1
  %5468 = trunc i64 %5462 to i32
  %5469 = icmp sgt i32 %5468, 0
  br i1 %5469, label %5461, label %5470, !llvm.loop !761

5470:                                             ; preds = %5461, %5452
  %5471 = phi i32 [ %5456, %5452 ], [ %5466, %5461 ]
  %5472 = and i64 %5421, 4294967295
  %5473 = getelementptr inbounds i32, ptr %6, i64 %5472
  %5474 = load i32, ptr %5473, align 4, !tbaa !6
  %5475 = mul nsw i32 %5474, %5471
  %5476 = add nsw i32 %5475, %5415
  %5477 = icmp sgt i64 %5413, 2
  %5478 = add nsw i64 %5414, -1
  %5479 = add i32 %5412, 1
  br i1 %5477, label %5411, label %5480, !llvm.loop !762

5480:                                             ; preds = %5470, %5407
  %5481 = phi i32 [ %5410, %5407 ], [ %5476, %5470 ]
  %5482 = icmp slt i32 %5481, %5
  br i1 %5482, label %5485, label %5483

5483:                                             ; preds = %5480
  %5484 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1050, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5554

5485:                                             ; preds = %5480
  %5486 = sext i32 %5481 to i64
  %5487 = getelementptr inbounds i32, ptr %4940, i64 %5486
  %5488 = load i32, ptr %5487, align 4, !tbaa !6
  %5489 = sitofp i32 %5488 to double
  %5490 = fcmp fast olt double %5408, %5489
  br i1 %5490, label %5491, label %5492

5491:                                             ; preds = %5485
  store double %5489, ptr %4942, align 8, !tbaa !19
  br label %5492

5492:                                             ; preds = %5491, %5485
  %5493 = phi double [ %5489, %5491 ], [ %5408, %5485 ]
  %5494 = add nuw nsw i32 %5409, 1
  br i1 %5257, label %5495, label %5545

5495:                                             ; preds = %5492
  %5496 = load i32, ptr %4, align 4, !tbaa !6
  %5497 = load i32, ptr %12, align 4, !tbaa !6
  %5498 = add nsw i32 %5497, -1
  %5499 = icmp slt i32 %5496, %5498
  br i1 %5499, label %5522, label %5500

5500:                                             ; preds = %5495
  %5501 = icmp eq i32 %5496, %5498
  br i1 %5501, label %5502, label %5538

5502:                                             ; preds = %5500
  store i32 0, ptr %4, align 4, !tbaa !6
  %5503 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5503, ptr %6, align 4, !tbaa !6
  br i1 %5262, label %5545, label %5504

5504:                                             ; preds = %5502, %5532
  %5505 = phi i64 [ %5536, %5532 ], [ 1, %5502 ]
  %5506 = getelementptr inbounds i32, ptr %4, i64 %5505
  %5507 = load i32, ptr %5506, align 4, !tbaa !6
  %5508 = getelementptr inbounds i32, ptr %12, i64 %5505
  %5509 = load i32, ptr %5508, align 4, !tbaa !6
  %5510 = add nsw i32 %5509, -1
  %5511 = icmp slt i32 %5507, %5510
  br i1 %5511, label %5512, label %5530

5512:                                             ; preds = %5504
  br i1 %5499, label %5522, label %5513

5513:                                             ; preds = %5512
  %5514 = shl i64 %5505, 32
  %5515 = add i64 %5514, -4294967296
  %5516 = ashr exact i64 %5515, 32
  %5517 = getelementptr inbounds i32, ptr %7, i64 %5516
  %5518 = load i32, ptr %5517, align 4, !tbaa !6
  %5519 = getelementptr inbounds i32, ptr %6, i64 %5505
  %5520 = load i32, ptr %5519, align 4, !tbaa !6
  %5521 = add nsw i32 %5520, %5518
  store i32 %5521, ptr %5519, align 4, !tbaa !6
  br label %5540

5522:                                             ; preds = %5495, %5512
  %5523 = phi i32 [ %5507, %5512 ], [ %5496, %5495 ]
  %5524 = phi ptr [ %5506, %5512 ], [ %4, %5495 ]
  %5525 = phi i64 [ %5505, %5512 ], [ 0, %5495 ]
  %5526 = add nsw i32 %5523, 1
  store i32 %5526, ptr %5524, align 4, !tbaa !6
  %5527 = getelementptr inbounds i32, ptr %7, i64 %5525
  %5528 = load i32, ptr %5527, align 4, !tbaa !6
  %5529 = getelementptr inbounds i32, ptr %6, i64 %5525
  br label %5540

5530:                                             ; preds = %5504
  %5531 = icmp eq i32 %5507, %5510
  br i1 %5531, label %5532, label %5538

5532:                                             ; preds = %5530
  store i32 0, ptr %5506, align 4, !tbaa !6
  %5533 = getelementptr inbounds i32, ptr %8, i64 %5505
  %5534 = load i32, ptr %5533, align 4, !tbaa !6
  %5535 = getelementptr inbounds i32, ptr %6, i64 %5505
  store i32 %5534, ptr %5535, align 4, !tbaa !6
  %5536 = add nuw nsw i64 %5505, 1
  %5537 = icmp eq i64 %5536, %5260
  br i1 %5537, label %5545, label %5504, !llvm.loop !763

5538:                                             ; preds = %5500, %5530
  %5539 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1050, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5554

5540:                                             ; preds = %5513, %5522
  %5541 = phi ptr [ %5529, %5522 ], [ %5506, %5513 ]
  %5542 = phi i32 [ %5528, %5522 ], [ 1, %5513 ]
  %5543 = load i32, ptr %5541, align 4, !tbaa !6
  %5544 = add nsw i32 %5543, %5542
  store i32 %5544, ptr %5541, align 4, !tbaa !6
  br label %5545

5545:                                             ; preds = %5532, %5540, %5502, %5492
  %5546 = icmp eq i32 %5494, %5
  br i1 %5546, label %5549, label %5407, !llvm.loop !764

5547:                                             ; preds = %4946
  %5548 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1050, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5549

5549:                                             ; preds = %5545, %5405, %5247, %5107, %4934, %4794, %4636, %4496, %4323, %4183, %4025, %3885, %3712, %3572, %3414, %3274, %3101, %2963, %2807, %2669, %2495, %2352, %2191, %2048, %1872, %1730, %1570, %1428, %1246, %1108, %952, %814, %640, %499, %340, %199, %5254, %5263, %4952, %4961, %4643, %4652, %4341, %4350, %4032, %4041, %3730, %3739, %3421, %3430, %3119, %3128, %2814, %2823, %2516, %2525, %2198, %2207, %1890, %1899, %1577, %1586, %1271, %1280, %959, %968, %661, %670, %347, %356, %43, %52, %1876, %4938, %5547, %4327, %4936, %3716, %4325, %3105, %3714, %2509, %2506, %3103, %2497, %1263, %1258, %1874, %654, %651, %1248, %35, %30, %642, %18
  %5550 = phi double [ 0.000000e+00, %18 ], [ 0.000000e+00, %642 ], [ 0.000000e+00, %30 ], [ 0.000000e+00, %35 ], [ 0.000000e+00, %1248 ], [ 0.000000e+00, %651 ], [ 0.000000e+00, %654 ], [ 0.000000e+00, %1874 ], [ 0.000000e+00, %1258 ], [ 0.000000e+00, %1263 ], [ 0.000000e+00, %2497 ], [ 0.000000e+00, %3103 ], [ 0.000000e+00, %2506 ], [ 0.000000e+00, %2509 ], [ 0.000000e+00, %3105 ], [ 0.000000e+00, %3714 ], [ 0.000000e+00, %3716 ], [ 0.000000e+00, %4325 ], [ 0.000000e+00, %4327 ], [ 0.000000e+00, %4936 ], [ 0.000000e+00, %4938 ], [ 0.000000e+00, %5547 ], [ 0.000000e+00, %1876 ], [ 0.000000e+00, %52 ], [ 0.000000e+00, %43 ], [ 0.000000e+00, %356 ], [ 0.000000e+00, %347 ], [ 0.000000e+00, %670 ], [ 0.000000e+00, %661 ], [ 0.000000e+00, %968 ], [ 0.000000e+00, %959 ], [ 0.000000e+00, %1280 ], [ 0.000000e+00, %1271 ], [ 0.000000e+00, %1586 ], [ 0.000000e+00, %1577 ], [ 0.000000e+00, %1899 ], [ 0.000000e+00, %1890 ], [ 0.000000e+00, %2207 ], [ 0.000000e+00, %2198 ], [ 0.000000e+00, %2525 ], [ 0.000000e+00, %2516 ], [ 0.000000e+00, %2823 ], [ 0.000000e+00, %2814 ], [ 0.000000e+00, %3128 ], [ 0.000000e+00, %3119 ], [ 0.000000e+00, %3430 ], [ 0.000000e+00, %3421 ], [ 0.000000e+00, %3739 ], [ 0.000000e+00, %3730 ], [ 0.000000e+00, %4041 ], [ 0.000000e+00, %4032 ], [ 0.000000e+00, %4350 ], [ 0.000000e+00, %4341 ], [ 0.000000e+00, %4652 ], [ 0.000000e+00, %4643 ], [ 0.000000e+00, %4961 ], [ 0.000000e+00, %4952 ], [ 0.000000e+00, %5263 ], [ 0.000000e+00, %5254 ], [ %150, %199 ], [ 0.000000e+00, %340 ], [ %450, %499 ], [ 0.000000e+00, %640 ], [ %765, %814 ], [ 0.000000e+00, %952 ], [ %1059, %1108 ], [ 0.000000e+00, %1246 ], [ %1379, %1428 ], [ 0.000000e+00, %1570 ], [ %1681, %1730 ], [ 0.000000e+00, %1872 ], [ %1999, %2048 ], [ 0.000000e+00, %2191 ], [ %2303, %2352 ], [ 0.000000e+00, %2495 ], [ %2620, %2669 ], [ 0.000000e+00, %2807 ], [ %2914, %2963 ], [ 0.000000e+00, %3101 ], [ %3225, %3274 ], [ 0.000000e+00, %3414 ], [ %3523, %3572 ], [ 0.000000e+00, %3712 ], [ %3836, %3885 ], [ 0.000000e+00, %4025 ], [ %4134, %4183 ], [ 0.000000e+00, %4323 ], [ %4447, %4496 ], [ 0.000000e+00, %4636 ], [ %4745, %4794 ], [ 0.000000e+00, %4934 ], [ %5058, %5107 ], [ 0.000000e+00, %5247 ], [ %5356, %5405 ], [ 0.000000e+00, %5545 ]
  %5551 = phi i32 [ %10, %18 ], [ 1, %642 ], [ 1, %30 ], [ 1, %35 ], [ 1, %1248 ], [ 1, %651 ], [ 1, %654 ], [ 1, %1874 ], [ 1, %1258 ], [ 1, %1263 ], [ 1, %2497 ], [ 1, %3103 ], [ 1, %2506 ], [ 1, %2509 ], [ 1, %3105 ], [ 1, %3714 ], [ 1, %3716 ], [ 1, %4325 ], [ 1, %4327 ], [ 1, %4936 ], [ 1, %4938 ], [ 1, %5547 ], [ 1, %1876 ], [ 1, %52 ], [ 1, %43 ], [ 1, %356 ], [ 1, %347 ], [ 1, %670 ], [ 1, %661 ], [ 1, %968 ], [ 1, %959 ], [ 1, %1280 ], [ 1, %1271 ], [ 1, %1586 ], [ 1, %1577 ], [ 1, %1899 ], [ 1, %1890 ], [ 1, %2207 ], [ 1, %2198 ], [ 1, %2525 ], [ 1, %2516 ], [ 1, %2823 ], [ 1, %2814 ], [ 1, %3128 ], [ 1, %3119 ], [ 1, %3430 ], [ 1, %3421 ], [ 1, %3739 ], [ 1, %3730 ], [ 1, %4041 ], [ 1, %4032 ], [ 1, %4350 ], [ 1, %4341 ], [ 1, %4652 ], [ 1, %4643 ], [ 1, %4961 ], [ 1, %4952 ], [ 1, %5263 ], [ 1, %5254 ], [ %59, %199 ], [ %50, %340 ], [ %363, %499 ], [ %354, %640 ], [ %677, %814 ], [ %668, %952 ], [ %975, %1108 ], [ %966, %1246 ], [ %1287, %1428 ], [ %1278, %1570 ], [ %1593, %1730 ], [ %1584, %1872 ], [ %1906, %2048 ], [ %1897, %2191 ], [ %2214, %2352 ], [ %2205, %2495 ], [ %2532, %2669 ], [ %2523, %2807 ], [ %2830, %2963 ], [ %2821, %3101 ], [ %3135, %3274 ], [ %3126, %3414 ], [ %3437, %3572 ], [ %3428, %3712 ], [ %3746, %3885 ], [ %3737, %4025 ], [ %4048, %4183 ], [ %4039, %4323 ], [ %4357, %4496 ], [ %4348, %4636 ], [ %4659, %4794 ], [ %4650, %4934 ], [ %4968, %5107 ], [ %4959, %5247 ], [ %5270, %5405 ], [ %5261, %5545 ]
  %5552 = tail call i32 @Util_TableSetInt(i32 noundef %17, i32 noundef %5551, ptr noundef nonnull @.str.5) #3
  %5553 = tail call i32 @Util_TableSetReal(i32 noundef %17, double noundef nofpclass(nan inf) %5550, ptr noundef nonnull @.str.6) #3
  br label %5554

5554:                                             ; preds = %5100, %5185, %5240, %5398, %5483, %5538, %4489, %4574, %4629, %4787, %4872, %4927, %3878, %3963, %4018, %4176, %4261, %4316, %3267, %3352, %3407, %3565, %3650, %3705, %2662, %2746, %2800, %2956, %3040, %3094, %2041, %2126, %2184, %2345, %2430, %2488, %1421, %1505, %1563, %1723, %1807, %1865, %807, %891, %945, %1101, %1185, %1239, %192, %276, %333, %492, %576, %633, %5549
  %5555 = phi i32 [ 0, %5549 ], [ -1, %633 ], [ -1, %576 ], [ -1, %492 ], [ -1, %333 ], [ -1, %276 ], [ -1, %192 ], [ -1, %1239 ], [ -1, %1185 ], [ -1, %1101 ], [ -1, %945 ], [ -1, %891 ], [ -1, %807 ], [ -1, %1865 ], [ -1, %1807 ], [ -1, %1723 ], [ -1, %1563 ], [ -1, %1505 ], [ -1, %1421 ], [ -1, %2488 ], [ -1, %2430 ], [ -1, %2345 ], [ -1, %2184 ], [ -1, %2126 ], [ -1, %2041 ], [ -1, %3094 ], [ -1, %3040 ], [ -1, %2956 ], [ -1, %2800 ], [ -1, %2746 ], [ -1, %2662 ], [ -1, %3705 ], [ -1, %3650 ], [ -1, %3565 ], [ -1, %3407 ], [ -1, %3352 ], [ -1, %3267 ], [ -1, %4316 ], [ -1, %4261 ], [ -1, %4176 ], [ -1, %4018 ], [ -1, %3963 ], [ -1, %3878 ], [ -1, %4927 ], [ -1, %4872 ], [ -1, %4787 ], [ -1, %4629 ], [ -1, %4574 ], [ -1, %4489 ], [ -1, %5538 ], [ -1, %5483 ], [ -1, %5398 ], [ -1, %5240 ], [ -1, %5185 ], [ -1, %5100 ]
  ret i32 %5555
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_Max_INT8(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr noundef readonly %7, ptr noundef readonly %8, ptr nocapture noundef readonly %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr noundef readonly %12, i32 noundef %13, ptr nocapture noundef readonly %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !6
  switch i32 %21, label %5530 [
    i32 101, label %22
    i32 102, label %650
    i32 103, label %1257
    i32 104, label %1869
    i32 105, label %2480
    i32 106, label %3087
    i32 107, label %3697
    i32 108, label %4308
    i32 109, label %4919
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %14, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !10
  %25 = getelementptr inbounds ptr, ptr %16, i64 %19
  %26 = load ptr, ptr %25, align 8, !tbaa !10
  %27 = load i64, ptr %24, align 8, !tbaa !121
  %28 = trunc i64 %27 to i8
  store i8 %28, ptr %26, align 1, !tbaa !12
  %29 = icmp eq i32 %13, 0
  br i1 %29, label %30, label %39

30:                                               ; preds = %22
  %31 = load i64, ptr %24, align 8, !tbaa !121
  %32 = trunc i64 %27 to i32
  %33 = and i32 %32, 255
  %34 = trunc i64 %31 to i32
  %35 = and i32 %34, 255
  %36 = icmp ult i32 %33, %35
  br i1 %36, label %37, label %5530

37:                                               ; preds = %30
  %38 = trunc i64 %31 to i8
  store i8 %38, ptr %26, align 1, !tbaa !12
  br label %5530

39:                                               ; preds = %22
  switch i32 %1, label %648 [
    i32 1, label %40
    i32 0, label %346
  ]

40:                                               ; preds = %39
  %41 = getelementptr inbounds i32, ptr %3, i64 %19
  %42 = load i32, ptr %41, align 4, !tbaa !6
  %43 = icmp eq i32 %42, 0
  %44 = icmp sgt i32 %5, 0
  br i1 %43, label %54, label %45

45:                                               ; preds = %40
  br i1 %44, label %46, label %5530

46:                                               ; preds = %45
  %47 = icmp sgt i32 %13, 1
  %48 = icmp sgt i32 %13, 0
  %49 = add i32 %13, -2
  %50 = zext i32 %49 to i64
  %51 = zext i32 %13 to i64
  %52 = add nuw i32 %5, 1
  %53 = icmp eq i32 %13, 1
  br label %204

54:                                               ; preds = %40
  br i1 %44, label %55, label %5530

55:                                               ; preds = %54
  %56 = icmp sgt i32 %13, 1
  %57 = icmp sgt i32 %13, 0
  %58 = add i32 %13, -2
  %59 = zext i32 %58 to i64
  %60 = zext i32 %13 to i64
  %61 = add nuw i32 %5, 1
  %62 = icmp eq i32 %13, 1
  br label %63

63:                                               ; preds = %55, %202
  %64 = phi i32 [ 0, %55 ], [ %154, %202 ]
  %65 = phi double [ 0.000000e+00, %55 ], [ %153, %202 ]
  %66 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %56, label %67, label %136

67:                                               ; preds = %63, %126
  %68 = phi i32 [ %135, %126 ], [ 0, %63 ]
  %69 = phi i64 [ %77, %126 ], [ %60, %63 ]
  %70 = phi i64 [ %134, %126 ], [ %59, %63 ]
  %71 = phi i32 [ %132, %126 ], [ %66, %63 ]
  %72 = sub i32 %58, %68
  %73 = tail call i32 @llvm.smin.i32(i32 %72, i32 0)
  %74 = sub i32 %72, %73
  %75 = zext i32 %74 to i64
  %76 = add nuw nsw i64 %75, 1
  %77 = add nsw i64 %69, -1
  %78 = icmp ult i32 %74, 31
  br i1 %78, label %114, label %79

79:                                               ; preds = %67
  %80 = and i64 %76, 8589934560
  %81 = sub i64 %70, %80
  br label %82

82:                                               ; preds = %82, %79
  %83 = phi i64 [ 0, %79 ], [ %106, %82 ]
  %84 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %79 ], [ %102, %82 ]
  %85 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %79 ], [ %103, %82 ]
  %86 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %79 ], [ %104, %82 ]
  %87 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %79 ], [ %105, %82 ]
  %88 = sub i64 %70, %83
  %89 = getelementptr inbounds i32, ptr %9, i64 %88
  %90 = getelementptr inbounds i32, ptr %89, i64 -7
  %91 = load <8 x i32>, ptr %90, align 4, !tbaa !6
  %92 = shufflevector <8 x i32> %91, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %93 = getelementptr inbounds i32, ptr %89, i64 -15
  %94 = load <8 x i32>, ptr %93, align 4, !tbaa !6
  %95 = shufflevector <8 x i32> %94, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %96 = getelementptr inbounds i32, ptr %89, i64 -23
  %97 = load <8 x i32>, ptr %96, align 4, !tbaa !6
  %98 = shufflevector <8 x i32> %97, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %99 = getelementptr inbounds i32, ptr %89, i64 -31
  %100 = load <8 x i32>, ptr %99, align 4, !tbaa !6
  %101 = shufflevector <8 x i32> %100, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %102 = mul <8 x i32> %92, %84
  %103 = mul <8 x i32> %95, %85
  %104 = mul <8 x i32> %98, %86
  %105 = mul <8 x i32> %101, %87
  %106 = add nuw i64 %83, 32
  %107 = icmp eq i64 %106, %80
  br i1 %107, label %108, label %82, !llvm.loop !765

108:                                              ; preds = %82
  %109 = mul <8 x i32> %103, %102
  %110 = mul <8 x i32> %104, %109
  %111 = mul <8 x i32> %105, %110
  %112 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %111)
  %113 = icmp eq i64 %76, %80
  br i1 %113, label %126, label %114

114:                                              ; preds = %67, %108
  %115 = phi i64 [ %70, %67 ], [ %81, %108 ]
  %116 = phi i32 [ 1, %67 ], [ %112, %108 ]
  br label %117

117:                                              ; preds = %114, %117
  %118 = phi i64 [ %123, %117 ], [ %115, %114 ]
  %119 = phi i32 [ %122, %117 ], [ %116, %114 ]
  %120 = getelementptr inbounds i32, ptr %9, i64 %118
  %121 = load i32, ptr %120, align 4, !tbaa !6
  %122 = mul nsw i32 %121, %119
  %123 = add nsw i64 %118, -1
  %124 = trunc i64 %118 to i32
  %125 = icmp sgt i32 %124, 0
  br i1 %125, label %117, label %126, !llvm.loop !766

126:                                              ; preds = %117, %108
  %127 = phi i32 [ %112, %108 ], [ %122, %117 ]
  %128 = and i64 %77, 4294967295
  %129 = getelementptr inbounds i32, ptr %6, i64 %128
  %130 = load i32, ptr %129, align 4, !tbaa !6
  %131 = mul nsw i32 %130, %127
  %132 = add nsw i32 %131, %71
  %133 = icmp sgt i64 %69, 2
  %134 = add nsw i64 %70, -1
  %135 = add i32 %68, 1
  br i1 %133, label %67, label %136, !llvm.loop !767

136:                                              ; preds = %126, %63
  %137 = phi i32 [ %66, %63 ], [ %132, %126 ]
  %138 = sext i32 %137 to i64
  %139 = getelementptr inbounds double, ptr %2, i64 %138
  %140 = load double, ptr %139, align 8, !tbaa !19
  %141 = getelementptr inbounds i64, ptr %24, i64 %138
  %142 = load i64, ptr %141, align 8, !tbaa !121
  %143 = trunc i64 %142 to i8
  %144 = fcmp fast ueq double %140, 0.000000e+00
  br i1 %144, label %152, label %145

145:                                              ; preds = %136
  %146 = load i8, ptr %26, align 1, !tbaa !12
  %147 = zext i8 %146 to i32
  %148 = trunc i64 %142 to i32
  %149 = and i32 %148, 255
  %150 = icmp ugt i32 %149, %147
  br i1 %150, label %151, label %152

151:                                              ; preds = %145
  store i8 %143, ptr %26, align 1, !tbaa !12
  br label %152

152:                                              ; preds = %145, %151, %136
  %153 = fadd fast double %140, %65
  %154 = add nuw nsw i32 %64, 1
  br i1 %57, label %155, label %202

155:                                              ; preds = %152
  %156 = load i32, ptr %4, align 4, !tbaa !6
  %157 = load i32, ptr %12, align 4, !tbaa !6
  %158 = add nsw i32 %157, -1
  %159 = icmp slt i32 %156, %158
  br i1 %159, label %179, label %160

160:                                              ; preds = %155
  %161 = icmp eq i32 %156, %158
  br i1 %161, label %162, label %195

162:                                              ; preds = %160
  store i32 0, ptr %4, align 4, !tbaa !6
  %163 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %163, ptr %6, align 4, !tbaa !6
  br i1 %62, label %202, label %164

164:                                              ; preds = %162, %189
  %165 = phi i64 [ %193, %189 ], [ 1, %162 ]
  %166 = getelementptr inbounds i32, ptr %4, i64 %165
  %167 = load i32, ptr %166, align 4, !tbaa !6
  %168 = getelementptr inbounds i32, ptr %12, i64 %165
  %169 = load i32, ptr %168, align 4, !tbaa !6
  %170 = add nsw i32 %169, -1
  %171 = icmp slt i32 %167, %170
  br i1 %171, label %172, label %187

172:                                              ; preds = %164
  br i1 %159, label %179, label %173

173:                                              ; preds = %172
  %174 = getelementptr inbounds i32, ptr %7, i64 %165
  %175 = load i32, ptr %174, align 4, !tbaa !6
  %176 = getelementptr inbounds i32, ptr %6, i64 %165
  %177 = load i32, ptr %176, align 4, !tbaa !6
  %178 = add nsw i32 %177, %175
  store i32 %178, ptr %176, align 4, !tbaa !6
  br label %197

179:                                              ; preds = %155, %172
  %180 = phi i32 [ %167, %172 ], [ %156, %155 ]
  %181 = phi ptr [ %166, %172 ], [ %4, %155 ]
  %182 = phi i64 [ %165, %172 ], [ 0, %155 ]
  %183 = add nsw i32 %180, 1
  store i32 %183, ptr %181, align 4, !tbaa !6
  %184 = getelementptr inbounds i32, ptr %7, i64 %182
  %185 = load i32, ptr %184, align 4, !tbaa !6
  %186 = getelementptr inbounds i32, ptr %6, i64 %182
  br label %197

187:                                              ; preds = %164
  %188 = icmp eq i32 %167, %170
  br i1 %188, label %189, label %195

189:                                              ; preds = %187
  store i32 0, ptr %166, align 4, !tbaa !6
  %190 = getelementptr inbounds i32, ptr %8, i64 %165
  %191 = load i32, ptr %190, align 4, !tbaa !6
  %192 = getelementptr inbounds i32, ptr %6, i64 %165
  store i32 %191, ptr %192, align 4, !tbaa !6
  %193 = add nuw nsw i64 %165, 1
  %194 = icmp eq i64 %193, %60
  br i1 %194, label %202, label %164, !llvm.loop !768

195:                                              ; preds = %160, %187
  %196 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1256, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5535

197:                                              ; preds = %173, %179
  %198 = phi ptr [ %186, %179 ], [ %166, %173 ]
  %199 = phi i32 [ %185, %179 ], [ 1, %173 ]
  %200 = load i32, ptr %198, align 4, !tbaa !6
  %201 = add nsw i32 %200, %199
  store i32 %201, ptr %198, align 4, !tbaa !6
  br label %202

202:                                              ; preds = %189, %197, %162, %152
  %203 = icmp eq i32 %154, %5
  br i1 %203, label %5530, label %63, !llvm.loop !769

204:                                              ; preds = %46, %344
  %205 = phi i32 [ 0, %46 ], [ %293, %344 ]
  %206 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %47, label %207, label %276

207:                                              ; preds = %204, %266
  %208 = phi i32 [ %275, %266 ], [ 0, %204 ]
  %209 = phi i64 [ %217, %266 ], [ %51, %204 ]
  %210 = phi i64 [ %274, %266 ], [ %50, %204 ]
  %211 = phi i32 [ %272, %266 ], [ %206, %204 ]
  %212 = sub i32 %49, %208
  %213 = tail call i32 @llvm.smin.i32(i32 %212, i32 0)
  %214 = sub i32 %212, %213
  %215 = zext i32 %214 to i64
  %216 = add nuw nsw i64 %215, 1
  %217 = add nsw i64 %209, -1
  %218 = icmp ult i32 %214, 31
  br i1 %218, label %254, label %219

219:                                              ; preds = %207
  %220 = and i64 %216, 8589934560
  %221 = sub i64 %210, %220
  br label %222

222:                                              ; preds = %222, %219
  %223 = phi i64 [ 0, %219 ], [ %246, %222 ]
  %224 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %219 ], [ %242, %222 ]
  %225 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %219 ], [ %243, %222 ]
  %226 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %219 ], [ %244, %222 ]
  %227 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %219 ], [ %245, %222 ]
  %228 = sub i64 %210, %223
  %229 = getelementptr inbounds i32, ptr %11, i64 %228
  %230 = getelementptr inbounds i32, ptr %229, i64 -7
  %231 = load <8 x i32>, ptr %230, align 4, !tbaa !6
  %232 = shufflevector <8 x i32> %231, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %233 = getelementptr inbounds i32, ptr %229, i64 -15
  %234 = load <8 x i32>, ptr %233, align 4, !tbaa !6
  %235 = shufflevector <8 x i32> %234, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %236 = getelementptr inbounds i32, ptr %229, i64 -23
  %237 = load <8 x i32>, ptr %236, align 4, !tbaa !6
  %238 = shufflevector <8 x i32> %237, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %239 = getelementptr inbounds i32, ptr %229, i64 -31
  %240 = load <8 x i32>, ptr %239, align 4, !tbaa !6
  %241 = shufflevector <8 x i32> %240, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %242 = mul <8 x i32> %232, %224
  %243 = mul <8 x i32> %235, %225
  %244 = mul <8 x i32> %238, %226
  %245 = mul <8 x i32> %241, %227
  %246 = add nuw i64 %223, 32
  %247 = icmp eq i64 %246, %220
  br i1 %247, label %248, label %222, !llvm.loop !770

248:                                              ; preds = %222
  %249 = mul <8 x i32> %243, %242
  %250 = mul <8 x i32> %244, %249
  %251 = mul <8 x i32> %245, %250
  %252 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %251)
  %253 = icmp eq i64 %216, %220
  br i1 %253, label %266, label %254

254:                                              ; preds = %207, %248
  %255 = phi i64 [ %210, %207 ], [ %221, %248 ]
  %256 = phi i32 [ 1, %207 ], [ %252, %248 ]
  br label %257

257:                                              ; preds = %254, %257
  %258 = phi i64 [ %263, %257 ], [ %255, %254 ]
  %259 = phi i32 [ %262, %257 ], [ %256, %254 ]
  %260 = getelementptr inbounds i32, ptr %11, i64 %258
  %261 = load i32, ptr %260, align 4, !tbaa !6
  %262 = mul nsw i32 %261, %259
  %263 = add nsw i64 %258, -1
  %264 = trunc i64 %258 to i32
  %265 = icmp sgt i32 %264, 0
  br i1 %265, label %257, label %266, !llvm.loop !771

266:                                              ; preds = %257, %248
  %267 = phi i32 [ %252, %248 ], [ %262, %257 ]
  %268 = and i64 %217, 4294967295
  %269 = getelementptr inbounds i32, ptr %6, i64 %268
  %270 = load i32, ptr %269, align 4, !tbaa !6
  %271 = mul nsw i32 %270, %267
  %272 = add nsw i32 %271, %211
  %273 = icmp sgt i64 %209, 2
  %274 = add nsw i64 %210, -1
  %275 = add i32 %208, 1
  br i1 %273, label %207, label %276, !llvm.loop !772

276:                                              ; preds = %266, %204
  %277 = phi i32 [ %206, %204 ], [ %272, %266 ]
  %278 = icmp slt i32 %277, %5
  br i1 %278, label %281, label %279

279:                                              ; preds = %276
  %280 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1256, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5535

281:                                              ; preds = %276
  %282 = sext i32 %277 to i64
  %283 = getelementptr inbounds i64, ptr %24, i64 %282
  %284 = load i64, ptr %283, align 8, !tbaa !121
  %285 = load i8, ptr %26, align 1, !tbaa !12
  %286 = zext i8 %285 to i32
  %287 = trunc i64 %284 to i32
  %288 = and i32 %287, 255
  %289 = icmp ugt i32 %288, %286
  br i1 %289, label %290, label %292

290:                                              ; preds = %281
  %291 = trunc i64 %284 to i8
  store i8 %291, ptr %26, align 1, !tbaa !12
  br label %292

292:                                              ; preds = %281, %290
  %293 = add nuw nsw i32 %205, 1
  br i1 %48, label %294, label %344

294:                                              ; preds = %292
  %295 = load i32, ptr %4, align 4, !tbaa !6
  %296 = load i32, ptr %12, align 4, !tbaa !6
  %297 = add nsw i32 %296, -1
  %298 = icmp slt i32 %295, %297
  br i1 %298, label %321, label %299

299:                                              ; preds = %294
  %300 = icmp eq i32 %295, %297
  br i1 %300, label %301, label %337

301:                                              ; preds = %299
  store i32 0, ptr %4, align 4, !tbaa !6
  %302 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %302, ptr %6, align 4, !tbaa !6
  br i1 %53, label %344, label %303

303:                                              ; preds = %301, %331
  %304 = phi i64 [ %335, %331 ], [ 1, %301 ]
  %305 = getelementptr inbounds i32, ptr %4, i64 %304
  %306 = load i32, ptr %305, align 4, !tbaa !6
  %307 = getelementptr inbounds i32, ptr %12, i64 %304
  %308 = load i32, ptr %307, align 4, !tbaa !6
  %309 = add nsw i32 %308, -1
  %310 = icmp slt i32 %306, %309
  br i1 %310, label %311, label %329

311:                                              ; preds = %303
  br i1 %298, label %321, label %312

312:                                              ; preds = %311
  %313 = shl i64 %304, 32
  %314 = add i64 %313, -4294967296
  %315 = ashr exact i64 %314, 32
  %316 = getelementptr inbounds i32, ptr %7, i64 %315
  %317 = load i32, ptr %316, align 4, !tbaa !6
  %318 = getelementptr inbounds i32, ptr %6, i64 %304
  %319 = load i32, ptr %318, align 4, !tbaa !6
  %320 = add nsw i32 %319, %317
  store i32 %320, ptr %318, align 4, !tbaa !6
  br label %339

321:                                              ; preds = %294, %311
  %322 = phi i32 [ %306, %311 ], [ %295, %294 ]
  %323 = phi ptr [ %305, %311 ], [ %4, %294 ]
  %324 = phi i64 [ %304, %311 ], [ 0, %294 ]
  %325 = add nsw i32 %322, 1
  store i32 %325, ptr %323, align 4, !tbaa !6
  %326 = getelementptr inbounds i32, ptr %7, i64 %324
  %327 = load i32, ptr %326, align 4, !tbaa !6
  %328 = getelementptr inbounds i32, ptr %6, i64 %324
  br label %339

329:                                              ; preds = %303
  %330 = icmp eq i32 %306, %309
  br i1 %330, label %331, label %337

331:                                              ; preds = %329
  store i32 0, ptr %305, align 4, !tbaa !6
  %332 = getelementptr inbounds i32, ptr %8, i64 %304
  %333 = load i32, ptr %332, align 4, !tbaa !6
  %334 = getelementptr inbounds i32, ptr %6, i64 %304
  store i32 %333, ptr %334, align 4, !tbaa !6
  %335 = add nuw nsw i64 %304, 1
  %336 = icmp eq i64 %335, %51
  br i1 %336, label %344, label %303, !llvm.loop !773

337:                                              ; preds = %299, %329
  %338 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1256, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5535

339:                                              ; preds = %312, %321
  %340 = phi ptr [ %328, %321 ], [ %305, %312 ]
  %341 = phi i32 [ %327, %321 ], [ 1, %312 ]
  %342 = load i32, ptr %340, align 4, !tbaa !6
  %343 = add nsw i32 %342, %341
  store i32 %343, ptr %340, align 4, !tbaa !6
  br label %344

344:                                              ; preds = %331, %339, %301, %292
  %345 = icmp eq i32 %293, %5
  br i1 %345, label %5530, label %204, !llvm.loop !774

346:                                              ; preds = %39
  %347 = getelementptr inbounds i32, ptr %3, i64 %19
  %348 = load i32, ptr %347, align 4, !tbaa !6
  %349 = icmp eq i32 %348, 0
  %350 = icmp sgt i32 %5, 0
  br i1 %349, label %360, label %351

351:                                              ; preds = %346
  br i1 %350, label %352, label %5530

352:                                              ; preds = %351
  %353 = icmp sgt i32 %13, 1
  %354 = icmp sgt i32 %13, 0
  %355 = add i32 %13, -2
  %356 = zext i32 %355 to i64
  %357 = zext i32 %13 to i64
  %358 = add nuw i32 %5, 1
  %359 = icmp eq i32 %13, 1
  br label %506

360:                                              ; preds = %346
  br i1 %350, label %361, label %5530

361:                                              ; preds = %360
  %362 = icmp sgt i32 %13, 1
  %363 = icmp sgt i32 %13, 0
  %364 = add i32 %13, -2
  %365 = zext i32 %364 to i64
  %366 = zext i32 %13 to i64
  %367 = add nuw i32 %5, 1
  %368 = icmp eq i32 %13, 1
  br label %369

369:                                              ; preds = %361, %504
  %370 = phi i32 [ 0, %361 ], [ %456, %504 ]
  %371 = phi double [ 0.000000e+00, %361 ], [ %455, %504 ]
  %372 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %362, label %373, label %442

373:                                              ; preds = %369, %432
  %374 = phi i32 [ %441, %432 ], [ 0, %369 ]
  %375 = phi i64 [ %383, %432 ], [ %366, %369 ]
  %376 = phi i64 [ %440, %432 ], [ %365, %369 ]
  %377 = phi i32 [ %438, %432 ], [ %372, %369 ]
  %378 = sub i32 %364, %374
  %379 = tail call i32 @llvm.smin.i32(i32 %378, i32 0)
  %380 = sub i32 %378, %379
  %381 = zext i32 %380 to i64
  %382 = add nuw nsw i64 %381, 1
  %383 = add nsw i64 %375, -1
  %384 = icmp ult i32 %380, 31
  br i1 %384, label %420, label %385

385:                                              ; preds = %373
  %386 = and i64 %382, 8589934560
  %387 = sub i64 %376, %386
  br label %388

388:                                              ; preds = %388, %385
  %389 = phi i64 [ 0, %385 ], [ %412, %388 ]
  %390 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %385 ], [ %408, %388 ]
  %391 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %385 ], [ %409, %388 ]
  %392 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %385 ], [ %410, %388 ]
  %393 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %385 ], [ %411, %388 ]
  %394 = sub i64 %376, %389
  %395 = getelementptr inbounds i32, ptr %9, i64 %394
  %396 = getelementptr inbounds i32, ptr %395, i64 -7
  %397 = load <8 x i32>, ptr %396, align 4, !tbaa !6
  %398 = shufflevector <8 x i32> %397, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %399 = getelementptr inbounds i32, ptr %395, i64 -15
  %400 = load <8 x i32>, ptr %399, align 4, !tbaa !6
  %401 = shufflevector <8 x i32> %400, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %402 = getelementptr inbounds i32, ptr %395, i64 -23
  %403 = load <8 x i32>, ptr %402, align 4, !tbaa !6
  %404 = shufflevector <8 x i32> %403, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %405 = getelementptr inbounds i32, ptr %395, i64 -31
  %406 = load <8 x i32>, ptr %405, align 4, !tbaa !6
  %407 = shufflevector <8 x i32> %406, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %408 = mul <8 x i32> %398, %390
  %409 = mul <8 x i32> %401, %391
  %410 = mul <8 x i32> %404, %392
  %411 = mul <8 x i32> %407, %393
  %412 = add nuw i64 %389, 32
  %413 = icmp eq i64 %412, %386
  br i1 %413, label %414, label %388, !llvm.loop !775

414:                                              ; preds = %388
  %415 = mul <8 x i32> %409, %408
  %416 = mul <8 x i32> %410, %415
  %417 = mul <8 x i32> %411, %416
  %418 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %417)
  %419 = icmp eq i64 %382, %386
  br i1 %419, label %432, label %420

420:                                              ; preds = %373, %414
  %421 = phi i64 [ %376, %373 ], [ %387, %414 ]
  %422 = phi i32 [ 1, %373 ], [ %418, %414 ]
  br label %423

423:                                              ; preds = %420, %423
  %424 = phi i64 [ %429, %423 ], [ %421, %420 ]
  %425 = phi i32 [ %428, %423 ], [ %422, %420 ]
  %426 = getelementptr inbounds i32, ptr %9, i64 %424
  %427 = load i32, ptr %426, align 4, !tbaa !6
  %428 = mul nsw i32 %427, %425
  %429 = add nsw i64 %424, -1
  %430 = trunc i64 %424 to i32
  %431 = icmp sgt i32 %430, 0
  br i1 %431, label %423, label %432, !llvm.loop !776

432:                                              ; preds = %423, %414
  %433 = phi i32 [ %418, %414 ], [ %428, %423 ]
  %434 = and i64 %383, 4294967295
  %435 = getelementptr inbounds i32, ptr %6, i64 %434
  %436 = load i32, ptr %435, align 4, !tbaa !6
  %437 = mul nsw i32 %436, %433
  %438 = add nsw i32 %437, %377
  %439 = icmp sgt i64 %375, 2
  %440 = add nsw i64 %376, -1
  %441 = add i32 %374, 1
  br i1 %439, label %373, label %442, !llvm.loop !777

442:                                              ; preds = %432, %369
  %443 = phi i32 [ %372, %369 ], [ %438, %432 ]
  %444 = sext i32 %443 to i64
  %445 = getelementptr inbounds i64, ptr %24, i64 %444
  %446 = load i64, ptr %445, align 8, !tbaa !121
  %447 = load i8, ptr %26, align 1, !tbaa !12
  %448 = zext i8 %447 to i32
  %449 = trunc i64 %446 to i32
  %450 = and i32 %449, 255
  %451 = icmp ugt i32 %450, %448
  br i1 %451, label %452, label %454

452:                                              ; preds = %442
  %453 = trunc i64 %446 to i8
  store i8 %453, ptr %26, align 1, !tbaa !12
  br label %454

454:                                              ; preds = %452, %442
  %455 = fadd fast double %371, 1.000000e+00
  %456 = add nuw nsw i32 %370, 1
  br i1 %363, label %457, label %504

457:                                              ; preds = %454
  %458 = load i32, ptr %4, align 4, !tbaa !6
  %459 = load i32, ptr %12, align 4, !tbaa !6
  %460 = add nsw i32 %459, -1
  %461 = icmp slt i32 %458, %460
  br i1 %461, label %481, label %462

462:                                              ; preds = %457
  %463 = icmp eq i32 %458, %460
  br i1 %463, label %464, label %497

464:                                              ; preds = %462
  store i32 0, ptr %4, align 4, !tbaa !6
  %465 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %465, ptr %6, align 4, !tbaa !6
  br i1 %368, label %504, label %466

466:                                              ; preds = %464, %491
  %467 = phi i64 [ %495, %491 ], [ 1, %464 ]
  %468 = getelementptr inbounds i32, ptr %4, i64 %467
  %469 = load i32, ptr %468, align 4, !tbaa !6
  %470 = getelementptr inbounds i32, ptr %12, i64 %467
  %471 = load i32, ptr %470, align 4, !tbaa !6
  %472 = add nsw i32 %471, -1
  %473 = icmp slt i32 %469, %472
  br i1 %473, label %474, label %489

474:                                              ; preds = %466
  br i1 %461, label %481, label %475

475:                                              ; preds = %474
  %476 = getelementptr inbounds i32, ptr %7, i64 %467
  %477 = load i32, ptr %476, align 4, !tbaa !6
  %478 = getelementptr inbounds i32, ptr %6, i64 %467
  %479 = load i32, ptr %478, align 4, !tbaa !6
  %480 = add nsw i32 %479, %477
  store i32 %480, ptr %478, align 4, !tbaa !6
  br label %499

481:                                              ; preds = %457, %474
  %482 = phi i32 [ %469, %474 ], [ %458, %457 ]
  %483 = phi ptr [ %468, %474 ], [ %4, %457 ]
  %484 = phi i64 [ %467, %474 ], [ 0, %457 ]
  %485 = add nsw i32 %482, 1
  store i32 %485, ptr %483, align 4, !tbaa !6
  %486 = getelementptr inbounds i32, ptr %7, i64 %484
  %487 = load i32, ptr %486, align 4, !tbaa !6
  %488 = getelementptr inbounds i32, ptr %6, i64 %484
  br label %499

489:                                              ; preds = %466
  %490 = icmp eq i32 %469, %472
  br i1 %490, label %491, label %497

491:                                              ; preds = %489
  store i32 0, ptr %468, align 4, !tbaa !6
  %492 = getelementptr inbounds i32, ptr %8, i64 %467
  %493 = load i32, ptr %492, align 4, !tbaa !6
  %494 = getelementptr inbounds i32, ptr %6, i64 %467
  store i32 %493, ptr %494, align 4, !tbaa !6
  %495 = add nuw nsw i64 %467, 1
  %496 = icmp eq i64 %495, %366
  br i1 %496, label %504, label %466, !llvm.loop !778

497:                                              ; preds = %462, %489
  %498 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1256, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5535

499:                                              ; preds = %475, %481
  %500 = phi ptr [ %488, %481 ], [ %468, %475 ]
  %501 = phi i32 [ %487, %481 ], [ 1, %475 ]
  %502 = load i32, ptr %500, align 4, !tbaa !6
  %503 = add nsw i32 %502, %501
  store i32 %503, ptr %500, align 4, !tbaa !6
  br label %504

504:                                              ; preds = %491, %499, %464, %454
  %505 = icmp eq i32 %456, %5
  br i1 %505, label %5530, label %369, !llvm.loop !779

506:                                              ; preds = %352, %646
  %507 = phi i32 [ 0, %352 ], [ %595, %646 ]
  %508 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %353, label %509, label %578

509:                                              ; preds = %506, %568
  %510 = phi i32 [ %577, %568 ], [ 0, %506 ]
  %511 = phi i64 [ %519, %568 ], [ %357, %506 ]
  %512 = phi i64 [ %576, %568 ], [ %356, %506 ]
  %513 = phi i32 [ %574, %568 ], [ %508, %506 ]
  %514 = sub i32 %355, %510
  %515 = tail call i32 @llvm.smin.i32(i32 %514, i32 0)
  %516 = sub i32 %514, %515
  %517 = zext i32 %516 to i64
  %518 = add nuw nsw i64 %517, 1
  %519 = add nsw i64 %511, -1
  %520 = icmp ult i32 %516, 31
  br i1 %520, label %556, label %521

521:                                              ; preds = %509
  %522 = and i64 %518, 8589934560
  %523 = sub i64 %512, %522
  br label %524

524:                                              ; preds = %524, %521
  %525 = phi i64 [ 0, %521 ], [ %548, %524 ]
  %526 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %521 ], [ %544, %524 ]
  %527 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %521 ], [ %545, %524 ]
  %528 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %521 ], [ %546, %524 ]
  %529 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %521 ], [ %547, %524 ]
  %530 = sub i64 %512, %525
  %531 = getelementptr inbounds i32, ptr %11, i64 %530
  %532 = getelementptr inbounds i32, ptr %531, i64 -7
  %533 = load <8 x i32>, ptr %532, align 4, !tbaa !6
  %534 = shufflevector <8 x i32> %533, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %535 = getelementptr inbounds i32, ptr %531, i64 -15
  %536 = load <8 x i32>, ptr %535, align 4, !tbaa !6
  %537 = shufflevector <8 x i32> %536, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %538 = getelementptr inbounds i32, ptr %531, i64 -23
  %539 = load <8 x i32>, ptr %538, align 4, !tbaa !6
  %540 = shufflevector <8 x i32> %539, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %541 = getelementptr inbounds i32, ptr %531, i64 -31
  %542 = load <8 x i32>, ptr %541, align 4, !tbaa !6
  %543 = shufflevector <8 x i32> %542, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %544 = mul <8 x i32> %534, %526
  %545 = mul <8 x i32> %537, %527
  %546 = mul <8 x i32> %540, %528
  %547 = mul <8 x i32> %543, %529
  %548 = add nuw i64 %525, 32
  %549 = icmp eq i64 %548, %522
  br i1 %549, label %550, label %524, !llvm.loop !780

550:                                              ; preds = %524
  %551 = mul <8 x i32> %545, %544
  %552 = mul <8 x i32> %546, %551
  %553 = mul <8 x i32> %547, %552
  %554 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %553)
  %555 = icmp eq i64 %518, %522
  br i1 %555, label %568, label %556

556:                                              ; preds = %509, %550
  %557 = phi i64 [ %512, %509 ], [ %523, %550 ]
  %558 = phi i32 [ 1, %509 ], [ %554, %550 ]
  br label %559

559:                                              ; preds = %556, %559
  %560 = phi i64 [ %565, %559 ], [ %557, %556 ]
  %561 = phi i32 [ %564, %559 ], [ %558, %556 ]
  %562 = getelementptr inbounds i32, ptr %11, i64 %560
  %563 = load i32, ptr %562, align 4, !tbaa !6
  %564 = mul nsw i32 %563, %561
  %565 = add nsw i64 %560, -1
  %566 = trunc i64 %560 to i32
  %567 = icmp sgt i32 %566, 0
  br i1 %567, label %559, label %568, !llvm.loop !781

568:                                              ; preds = %559, %550
  %569 = phi i32 [ %554, %550 ], [ %564, %559 ]
  %570 = and i64 %519, 4294967295
  %571 = getelementptr inbounds i32, ptr %6, i64 %570
  %572 = load i32, ptr %571, align 4, !tbaa !6
  %573 = mul nsw i32 %572, %569
  %574 = add nsw i32 %573, %513
  %575 = icmp sgt i64 %511, 2
  %576 = add nsw i64 %512, -1
  %577 = add i32 %510, 1
  br i1 %575, label %509, label %578, !llvm.loop !782

578:                                              ; preds = %568, %506
  %579 = phi i32 [ %508, %506 ], [ %574, %568 ]
  %580 = icmp slt i32 %579, %5
  br i1 %580, label %583, label %581

581:                                              ; preds = %578
  %582 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1256, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5535

583:                                              ; preds = %578
  %584 = sext i32 %579 to i64
  %585 = getelementptr inbounds i64, ptr %24, i64 %584
  %586 = load i64, ptr %585, align 8, !tbaa !121
  %587 = load i8, ptr %26, align 1, !tbaa !12
  %588 = zext i8 %587 to i32
  %589 = trunc i64 %586 to i32
  %590 = and i32 %589, 255
  %591 = icmp ugt i32 %590, %588
  br i1 %591, label %592, label %594

592:                                              ; preds = %583
  %593 = trunc i64 %586 to i8
  store i8 %593, ptr %26, align 1, !tbaa !12
  br label %594

594:                                              ; preds = %592, %583
  %595 = add nuw nsw i32 %507, 1
  br i1 %354, label %596, label %646

596:                                              ; preds = %594
  %597 = load i32, ptr %4, align 4, !tbaa !6
  %598 = load i32, ptr %12, align 4, !tbaa !6
  %599 = add nsw i32 %598, -1
  %600 = icmp slt i32 %597, %599
  br i1 %600, label %623, label %601

601:                                              ; preds = %596
  %602 = icmp eq i32 %597, %599
  br i1 %602, label %603, label %639

603:                                              ; preds = %601
  store i32 0, ptr %4, align 4, !tbaa !6
  %604 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %604, ptr %6, align 4, !tbaa !6
  br i1 %359, label %646, label %605

605:                                              ; preds = %603, %633
  %606 = phi i64 [ %637, %633 ], [ 1, %603 ]
  %607 = getelementptr inbounds i32, ptr %4, i64 %606
  %608 = load i32, ptr %607, align 4, !tbaa !6
  %609 = getelementptr inbounds i32, ptr %12, i64 %606
  %610 = load i32, ptr %609, align 4, !tbaa !6
  %611 = add nsw i32 %610, -1
  %612 = icmp slt i32 %608, %611
  br i1 %612, label %613, label %631

613:                                              ; preds = %605
  br i1 %600, label %623, label %614

614:                                              ; preds = %613
  %615 = shl i64 %606, 32
  %616 = add i64 %615, -4294967296
  %617 = ashr exact i64 %616, 32
  %618 = getelementptr inbounds i32, ptr %7, i64 %617
  %619 = load i32, ptr %618, align 4, !tbaa !6
  %620 = getelementptr inbounds i32, ptr %6, i64 %606
  %621 = load i32, ptr %620, align 4, !tbaa !6
  %622 = add nsw i32 %621, %619
  store i32 %622, ptr %620, align 4, !tbaa !6
  br label %641

623:                                              ; preds = %596, %613
  %624 = phi i32 [ %608, %613 ], [ %597, %596 ]
  %625 = phi ptr [ %607, %613 ], [ %4, %596 ]
  %626 = phi i64 [ %606, %613 ], [ 0, %596 ]
  %627 = add nsw i32 %624, 1
  store i32 %627, ptr %625, align 4, !tbaa !6
  %628 = getelementptr inbounds i32, ptr %7, i64 %626
  %629 = load i32, ptr %628, align 4, !tbaa !6
  %630 = getelementptr inbounds i32, ptr %6, i64 %626
  br label %641

631:                                              ; preds = %605
  %632 = icmp eq i32 %608, %611
  br i1 %632, label %633, label %639

633:                                              ; preds = %631
  store i32 0, ptr %607, align 4, !tbaa !6
  %634 = getelementptr inbounds i32, ptr %8, i64 %606
  %635 = load i32, ptr %634, align 4, !tbaa !6
  %636 = getelementptr inbounds i32, ptr %6, i64 %606
  store i32 %635, ptr %636, align 4, !tbaa !6
  %637 = add nuw nsw i64 %606, 1
  %638 = icmp eq i64 %637, %357
  br i1 %638, label %646, label %605, !llvm.loop !783

639:                                              ; preds = %601, %631
  %640 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1256, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5535

641:                                              ; preds = %614, %623
  %642 = phi ptr [ %630, %623 ], [ %607, %614 ]
  %643 = phi i32 [ %629, %623 ], [ 1, %614 ]
  %644 = load i32, ptr %642, align 4, !tbaa !6
  %645 = add nsw i32 %644, %643
  store i32 %645, ptr %642, align 4, !tbaa !6
  br label %646

646:                                              ; preds = %633, %641, %603, %594
  %647 = icmp eq i32 %595, %5
  br i1 %647, label %5530, label %506, !llvm.loop !784

648:                                              ; preds = %39
  %649 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1256, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5530

650:                                              ; preds = %18
  %651 = getelementptr inbounds ptr, ptr %14, i64 %19
  %652 = load ptr, ptr %651, align 8, !tbaa !10
  %653 = getelementptr inbounds ptr, ptr %16, i64 %19
  %654 = load ptr, ptr %653, align 8, !tbaa !10
  %655 = load i64, ptr %652, align 8, !tbaa !121
  %656 = trunc i64 %655 to i32
  store i32 %656, ptr %654, align 4, !tbaa !6
  %657 = icmp eq i32 %13, 0
  br i1 %657, label %5530, label %658

658:                                              ; preds = %650
  switch i32 %1, label %1255 [
    i32 1, label %659
    i32 0, label %959
  ]

659:                                              ; preds = %658
  %660 = getelementptr inbounds i32, ptr %3, i64 %19
  %661 = load i32, ptr %660, align 4, !tbaa !6
  %662 = icmp eq i32 %661, 0
  %663 = icmp sgt i32 %5, 0
  br i1 %662, label %673, label %664

664:                                              ; preds = %659
  br i1 %663, label %665, label %5530

665:                                              ; preds = %664
  %666 = icmp sgt i32 %13, 1
  %667 = icmp sgt i32 %13, 0
  %668 = add i32 %13, -2
  %669 = zext i32 %668 to i64
  %670 = zext i32 %13 to i64
  %671 = add nuw i32 %5, 1
  %672 = icmp eq i32 %13, 1
  br label %820

673:                                              ; preds = %659
  br i1 %663, label %674, label %5530

674:                                              ; preds = %673
  %675 = icmp sgt i32 %13, 1
  %676 = icmp sgt i32 %13, 0
  %677 = add i32 %13, -2
  %678 = zext i32 %677 to i64
  %679 = zext i32 %13 to i64
  %680 = add nuw i32 %5, 1
  %681 = icmp eq i32 %13, 1
  br label %682

682:                                              ; preds = %674, %818
  %683 = phi i32 [ 0, %674 ], [ %770, %818 ]
  %684 = phi double [ 0.000000e+00, %674 ], [ %769, %818 ]
  %685 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %675, label %686, label %755

686:                                              ; preds = %682, %745
  %687 = phi i32 [ %754, %745 ], [ 0, %682 ]
  %688 = phi i64 [ %696, %745 ], [ %679, %682 ]
  %689 = phi i64 [ %753, %745 ], [ %678, %682 ]
  %690 = phi i32 [ %751, %745 ], [ %685, %682 ]
  %691 = sub i32 %677, %687
  %692 = tail call i32 @llvm.smin.i32(i32 %691, i32 0)
  %693 = sub i32 %691, %692
  %694 = zext i32 %693 to i64
  %695 = add nuw nsw i64 %694, 1
  %696 = add nsw i64 %688, -1
  %697 = icmp ult i32 %693, 31
  br i1 %697, label %733, label %698

698:                                              ; preds = %686
  %699 = and i64 %695, 8589934560
  %700 = sub i64 %689, %699
  br label %701

701:                                              ; preds = %701, %698
  %702 = phi i64 [ 0, %698 ], [ %725, %701 ]
  %703 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %698 ], [ %721, %701 ]
  %704 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %698 ], [ %722, %701 ]
  %705 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %698 ], [ %723, %701 ]
  %706 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %698 ], [ %724, %701 ]
  %707 = sub i64 %689, %702
  %708 = getelementptr inbounds i32, ptr %9, i64 %707
  %709 = getelementptr inbounds i32, ptr %708, i64 -7
  %710 = load <8 x i32>, ptr %709, align 4, !tbaa !6
  %711 = shufflevector <8 x i32> %710, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %712 = getelementptr inbounds i32, ptr %708, i64 -15
  %713 = load <8 x i32>, ptr %712, align 4, !tbaa !6
  %714 = shufflevector <8 x i32> %713, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %715 = getelementptr inbounds i32, ptr %708, i64 -23
  %716 = load <8 x i32>, ptr %715, align 4, !tbaa !6
  %717 = shufflevector <8 x i32> %716, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %718 = getelementptr inbounds i32, ptr %708, i64 -31
  %719 = load <8 x i32>, ptr %718, align 4, !tbaa !6
  %720 = shufflevector <8 x i32> %719, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %721 = mul <8 x i32> %711, %703
  %722 = mul <8 x i32> %714, %704
  %723 = mul <8 x i32> %717, %705
  %724 = mul <8 x i32> %720, %706
  %725 = add nuw i64 %702, 32
  %726 = icmp eq i64 %725, %699
  br i1 %726, label %727, label %701, !llvm.loop !785

727:                                              ; preds = %701
  %728 = mul <8 x i32> %722, %721
  %729 = mul <8 x i32> %723, %728
  %730 = mul <8 x i32> %724, %729
  %731 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %730)
  %732 = icmp eq i64 %695, %699
  br i1 %732, label %745, label %733

733:                                              ; preds = %686, %727
  %734 = phi i64 [ %689, %686 ], [ %700, %727 ]
  %735 = phi i32 [ 1, %686 ], [ %731, %727 ]
  br label %736

736:                                              ; preds = %733, %736
  %737 = phi i64 [ %742, %736 ], [ %734, %733 ]
  %738 = phi i32 [ %741, %736 ], [ %735, %733 ]
  %739 = getelementptr inbounds i32, ptr %9, i64 %737
  %740 = load i32, ptr %739, align 4, !tbaa !6
  %741 = mul nsw i32 %740, %738
  %742 = add nsw i64 %737, -1
  %743 = trunc i64 %737 to i32
  %744 = icmp sgt i32 %743, 0
  br i1 %744, label %736, label %745, !llvm.loop !786

745:                                              ; preds = %736, %727
  %746 = phi i32 [ %731, %727 ], [ %741, %736 ]
  %747 = and i64 %696, 4294967295
  %748 = getelementptr inbounds i32, ptr %6, i64 %747
  %749 = load i32, ptr %748, align 4, !tbaa !6
  %750 = mul nsw i32 %749, %746
  %751 = add nsw i32 %750, %690
  %752 = icmp sgt i64 %688, 2
  %753 = add nsw i64 %689, -1
  %754 = add i32 %687, 1
  br i1 %752, label %686, label %755, !llvm.loop !787

755:                                              ; preds = %745, %682
  %756 = phi i32 [ %685, %682 ], [ %751, %745 ]
  %757 = sext i32 %756 to i64
  %758 = getelementptr inbounds double, ptr %2, i64 %757
  %759 = load double, ptr %758, align 8, !tbaa !19
  %760 = getelementptr inbounds i64, ptr %652, i64 %757
  %761 = load i64, ptr %760, align 8, !tbaa !121
  %762 = trunc i64 %761 to i32
  %763 = fcmp fast ueq double %759, 0.000000e+00
  br i1 %763, label %768, label %764

764:                                              ; preds = %755
  %765 = load i32, ptr %654, align 4, !tbaa !6
  %766 = icmp slt i32 %765, %762
  br i1 %766, label %767, label %768

767:                                              ; preds = %764
  store i32 %762, ptr %654, align 4, !tbaa !6
  br label %768

768:                                              ; preds = %764, %767, %755
  %769 = fadd fast double %759, %684
  %770 = add nuw nsw i32 %683, 1
  br i1 %676, label %771, label %818

771:                                              ; preds = %768
  %772 = load i32, ptr %4, align 4, !tbaa !6
  %773 = load i32, ptr %12, align 4, !tbaa !6
  %774 = add nsw i32 %773, -1
  %775 = icmp slt i32 %772, %774
  br i1 %775, label %795, label %776

776:                                              ; preds = %771
  %777 = icmp eq i32 %772, %774
  br i1 %777, label %778, label %811

778:                                              ; preds = %776
  store i32 0, ptr %4, align 4, !tbaa !6
  %779 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %779, ptr %6, align 4, !tbaa !6
  br i1 %681, label %818, label %780

780:                                              ; preds = %778, %805
  %781 = phi i64 [ %809, %805 ], [ 1, %778 ]
  %782 = getelementptr inbounds i32, ptr %4, i64 %781
  %783 = load i32, ptr %782, align 4, !tbaa !6
  %784 = getelementptr inbounds i32, ptr %12, i64 %781
  %785 = load i32, ptr %784, align 4, !tbaa !6
  %786 = add nsw i32 %785, -1
  %787 = icmp slt i32 %783, %786
  br i1 %787, label %788, label %803

788:                                              ; preds = %780
  br i1 %775, label %795, label %789

789:                                              ; preds = %788
  %790 = getelementptr inbounds i32, ptr %7, i64 %781
  %791 = load i32, ptr %790, align 4, !tbaa !6
  %792 = getelementptr inbounds i32, ptr %6, i64 %781
  %793 = load i32, ptr %792, align 4, !tbaa !6
  %794 = add nsw i32 %793, %791
  store i32 %794, ptr %792, align 4, !tbaa !6
  br label %813

795:                                              ; preds = %771, %788
  %796 = phi i32 [ %783, %788 ], [ %772, %771 ]
  %797 = phi ptr [ %782, %788 ], [ %4, %771 ]
  %798 = phi i64 [ %781, %788 ], [ 0, %771 ]
  %799 = add nsw i32 %796, 1
  store i32 %799, ptr %797, align 4, !tbaa !6
  %800 = getelementptr inbounds i32, ptr %7, i64 %798
  %801 = load i32, ptr %800, align 4, !tbaa !6
  %802 = getelementptr inbounds i32, ptr %6, i64 %798
  br label %813

803:                                              ; preds = %780
  %804 = icmp eq i32 %783, %786
  br i1 %804, label %805, label %811

805:                                              ; preds = %803
  store i32 0, ptr %782, align 4, !tbaa !6
  %806 = getelementptr inbounds i32, ptr %8, i64 %781
  %807 = load i32, ptr %806, align 4, !tbaa !6
  %808 = getelementptr inbounds i32, ptr %6, i64 %781
  store i32 %807, ptr %808, align 4, !tbaa !6
  %809 = add nuw nsw i64 %781, 1
  %810 = icmp eq i64 %809, %679
  br i1 %810, label %818, label %780, !llvm.loop !788

811:                                              ; preds = %776, %803
  %812 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1259, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5535

813:                                              ; preds = %789, %795
  %814 = phi ptr [ %802, %795 ], [ %782, %789 ]
  %815 = phi i32 [ %801, %795 ], [ 1, %789 ]
  %816 = load i32, ptr %814, align 4, !tbaa !6
  %817 = add nsw i32 %816, %815
  store i32 %817, ptr %814, align 4, !tbaa !6
  br label %818

818:                                              ; preds = %805, %813, %778, %768
  %819 = icmp eq i32 %770, %5
  br i1 %819, label %5530, label %682, !llvm.loop !789

820:                                              ; preds = %665, %957
  %821 = phi i32 [ 0, %665 ], [ %906, %957 ]
  %822 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %666, label %823, label %892

823:                                              ; preds = %820, %882
  %824 = phi i32 [ %891, %882 ], [ 0, %820 ]
  %825 = phi i64 [ %833, %882 ], [ %670, %820 ]
  %826 = phi i64 [ %890, %882 ], [ %669, %820 ]
  %827 = phi i32 [ %888, %882 ], [ %822, %820 ]
  %828 = sub i32 %668, %824
  %829 = tail call i32 @llvm.smin.i32(i32 %828, i32 0)
  %830 = sub i32 %828, %829
  %831 = zext i32 %830 to i64
  %832 = add nuw nsw i64 %831, 1
  %833 = add nsw i64 %825, -1
  %834 = icmp ult i32 %830, 31
  br i1 %834, label %870, label %835

835:                                              ; preds = %823
  %836 = and i64 %832, 8589934560
  %837 = sub i64 %826, %836
  br label %838

838:                                              ; preds = %838, %835
  %839 = phi i64 [ 0, %835 ], [ %862, %838 ]
  %840 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %835 ], [ %858, %838 ]
  %841 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %835 ], [ %859, %838 ]
  %842 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %835 ], [ %860, %838 ]
  %843 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %835 ], [ %861, %838 ]
  %844 = sub i64 %826, %839
  %845 = getelementptr inbounds i32, ptr %11, i64 %844
  %846 = getelementptr inbounds i32, ptr %845, i64 -7
  %847 = load <8 x i32>, ptr %846, align 4, !tbaa !6
  %848 = shufflevector <8 x i32> %847, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %849 = getelementptr inbounds i32, ptr %845, i64 -15
  %850 = load <8 x i32>, ptr %849, align 4, !tbaa !6
  %851 = shufflevector <8 x i32> %850, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %852 = getelementptr inbounds i32, ptr %845, i64 -23
  %853 = load <8 x i32>, ptr %852, align 4, !tbaa !6
  %854 = shufflevector <8 x i32> %853, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %855 = getelementptr inbounds i32, ptr %845, i64 -31
  %856 = load <8 x i32>, ptr %855, align 4, !tbaa !6
  %857 = shufflevector <8 x i32> %856, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %858 = mul <8 x i32> %848, %840
  %859 = mul <8 x i32> %851, %841
  %860 = mul <8 x i32> %854, %842
  %861 = mul <8 x i32> %857, %843
  %862 = add nuw i64 %839, 32
  %863 = icmp eq i64 %862, %836
  br i1 %863, label %864, label %838, !llvm.loop !790

864:                                              ; preds = %838
  %865 = mul <8 x i32> %859, %858
  %866 = mul <8 x i32> %860, %865
  %867 = mul <8 x i32> %861, %866
  %868 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %867)
  %869 = icmp eq i64 %832, %836
  br i1 %869, label %882, label %870

870:                                              ; preds = %823, %864
  %871 = phi i64 [ %826, %823 ], [ %837, %864 ]
  %872 = phi i32 [ 1, %823 ], [ %868, %864 ]
  br label %873

873:                                              ; preds = %870, %873
  %874 = phi i64 [ %879, %873 ], [ %871, %870 ]
  %875 = phi i32 [ %878, %873 ], [ %872, %870 ]
  %876 = getelementptr inbounds i32, ptr %11, i64 %874
  %877 = load i32, ptr %876, align 4, !tbaa !6
  %878 = mul nsw i32 %877, %875
  %879 = add nsw i64 %874, -1
  %880 = trunc i64 %874 to i32
  %881 = icmp sgt i32 %880, 0
  br i1 %881, label %873, label %882, !llvm.loop !791

882:                                              ; preds = %873, %864
  %883 = phi i32 [ %868, %864 ], [ %878, %873 ]
  %884 = and i64 %833, 4294967295
  %885 = getelementptr inbounds i32, ptr %6, i64 %884
  %886 = load i32, ptr %885, align 4, !tbaa !6
  %887 = mul nsw i32 %886, %883
  %888 = add nsw i32 %887, %827
  %889 = icmp sgt i64 %825, 2
  %890 = add nsw i64 %826, -1
  %891 = add i32 %824, 1
  br i1 %889, label %823, label %892, !llvm.loop !792

892:                                              ; preds = %882, %820
  %893 = phi i32 [ %822, %820 ], [ %888, %882 ]
  %894 = icmp slt i32 %893, %5
  br i1 %894, label %897, label %895

895:                                              ; preds = %892
  %896 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1259, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5535

897:                                              ; preds = %892
  %898 = sext i32 %893 to i64
  %899 = getelementptr inbounds i64, ptr %652, i64 %898
  %900 = load i64, ptr %899, align 8, !tbaa !121
  %901 = trunc i64 %900 to i32
  %902 = load i32, ptr %654, align 4, !tbaa !6
  %903 = icmp slt i32 %902, %901
  br i1 %903, label %904, label %905

904:                                              ; preds = %897
  store i32 %901, ptr %654, align 4, !tbaa !6
  br label %905

905:                                              ; preds = %897, %904
  %906 = add nuw nsw i32 %821, 1
  br i1 %667, label %907, label %957

907:                                              ; preds = %905
  %908 = load i32, ptr %4, align 4, !tbaa !6
  %909 = load i32, ptr %12, align 4, !tbaa !6
  %910 = add nsw i32 %909, -1
  %911 = icmp slt i32 %908, %910
  br i1 %911, label %934, label %912

912:                                              ; preds = %907
  %913 = icmp eq i32 %908, %910
  br i1 %913, label %914, label %950

914:                                              ; preds = %912
  store i32 0, ptr %4, align 4, !tbaa !6
  %915 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %915, ptr %6, align 4, !tbaa !6
  br i1 %672, label %957, label %916

916:                                              ; preds = %914, %944
  %917 = phi i64 [ %948, %944 ], [ 1, %914 ]
  %918 = getelementptr inbounds i32, ptr %4, i64 %917
  %919 = load i32, ptr %918, align 4, !tbaa !6
  %920 = getelementptr inbounds i32, ptr %12, i64 %917
  %921 = load i32, ptr %920, align 4, !tbaa !6
  %922 = add nsw i32 %921, -1
  %923 = icmp slt i32 %919, %922
  br i1 %923, label %924, label %942

924:                                              ; preds = %916
  br i1 %911, label %934, label %925

925:                                              ; preds = %924
  %926 = shl i64 %917, 32
  %927 = add i64 %926, -4294967296
  %928 = ashr exact i64 %927, 32
  %929 = getelementptr inbounds i32, ptr %7, i64 %928
  %930 = load i32, ptr %929, align 4, !tbaa !6
  %931 = getelementptr inbounds i32, ptr %6, i64 %917
  %932 = load i32, ptr %931, align 4, !tbaa !6
  %933 = add nsw i32 %932, %930
  store i32 %933, ptr %931, align 4, !tbaa !6
  br label %952

934:                                              ; preds = %907, %924
  %935 = phi i32 [ %919, %924 ], [ %908, %907 ]
  %936 = phi ptr [ %918, %924 ], [ %4, %907 ]
  %937 = phi i64 [ %917, %924 ], [ 0, %907 ]
  %938 = add nsw i32 %935, 1
  store i32 %938, ptr %936, align 4, !tbaa !6
  %939 = getelementptr inbounds i32, ptr %7, i64 %937
  %940 = load i32, ptr %939, align 4, !tbaa !6
  %941 = getelementptr inbounds i32, ptr %6, i64 %937
  br label %952

942:                                              ; preds = %916
  %943 = icmp eq i32 %919, %922
  br i1 %943, label %944, label %950

944:                                              ; preds = %942
  store i32 0, ptr %918, align 4, !tbaa !6
  %945 = getelementptr inbounds i32, ptr %8, i64 %917
  %946 = load i32, ptr %945, align 4, !tbaa !6
  %947 = getelementptr inbounds i32, ptr %6, i64 %917
  store i32 %946, ptr %947, align 4, !tbaa !6
  %948 = add nuw nsw i64 %917, 1
  %949 = icmp eq i64 %948, %670
  br i1 %949, label %957, label %916, !llvm.loop !793

950:                                              ; preds = %912, %942
  %951 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1259, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5535

952:                                              ; preds = %925, %934
  %953 = phi ptr [ %941, %934 ], [ %918, %925 ]
  %954 = phi i32 [ %940, %934 ], [ 1, %925 ]
  %955 = load i32, ptr %953, align 4, !tbaa !6
  %956 = add nsw i32 %955, %954
  store i32 %956, ptr %953, align 4, !tbaa !6
  br label %957

957:                                              ; preds = %944, %952, %914, %905
  %958 = icmp eq i32 %906, %5
  br i1 %958, label %5530, label %820, !llvm.loop !794

959:                                              ; preds = %658
  %960 = getelementptr inbounds i32, ptr %3, i64 %19
  %961 = load i32, ptr %960, align 4, !tbaa !6
  %962 = icmp eq i32 %961, 0
  %963 = icmp sgt i32 %5, 0
  br i1 %962, label %973, label %964

964:                                              ; preds = %959
  br i1 %963, label %965, label %5530

965:                                              ; preds = %964
  %966 = icmp sgt i32 %13, 1
  %967 = icmp sgt i32 %13, 0
  %968 = add i32 %13, -2
  %969 = zext i32 %968 to i64
  %970 = zext i32 %13 to i64
  %971 = add nuw i32 %5, 1
  %972 = icmp eq i32 %13, 1
  br label %1116

973:                                              ; preds = %959
  br i1 %963, label %974, label %5530

974:                                              ; preds = %973
  %975 = icmp sgt i32 %13, 1
  %976 = icmp sgt i32 %13, 0
  %977 = add i32 %13, -2
  %978 = zext i32 %977 to i64
  %979 = zext i32 %13 to i64
  %980 = add nuw i32 %5, 1
  %981 = icmp eq i32 %13, 1
  br label %982

982:                                              ; preds = %974, %1114
  %983 = phi i32 [ 0, %974 ], [ %1066, %1114 ]
  %984 = phi double [ 0.000000e+00, %974 ], [ %1065, %1114 ]
  %985 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %975, label %986, label %1055

986:                                              ; preds = %982, %1045
  %987 = phi i32 [ %1054, %1045 ], [ 0, %982 ]
  %988 = phi i64 [ %996, %1045 ], [ %979, %982 ]
  %989 = phi i64 [ %1053, %1045 ], [ %978, %982 ]
  %990 = phi i32 [ %1051, %1045 ], [ %985, %982 ]
  %991 = sub i32 %977, %987
  %992 = tail call i32 @llvm.smin.i32(i32 %991, i32 0)
  %993 = sub i32 %991, %992
  %994 = zext i32 %993 to i64
  %995 = add nuw nsw i64 %994, 1
  %996 = add nsw i64 %988, -1
  %997 = icmp ult i32 %993, 31
  br i1 %997, label %1033, label %998

998:                                              ; preds = %986
  %999 = and i64 %995, 8589934560
  %1000 = sub i64 %989, %999
  br label %1001

1001:                                             ; preds = %1001, %998
  %1002 = phi i64 [ 0, %998 ], [ %1025, %1001 ]
  %1003 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %998 ], [ %1021, %1001 ]
  %1004 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %998 ], [ %1022, %1001 ]
  %1005 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %998 ], [ %1023, %1001 ]
  %1006 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %998 ], [ %1024, %1001 ]
  %1007 = sub i64 %989, %1002
  %1008 = getelementptr inbounds i32, ptr %9, i64 %1007
  %1009 = getelementptr inbounds i32, ptr %1008, i64 -7
  %1010 = load <8 x i32>, ptr %1009, align 4, !tbaa !6
  %1011 = shufflevector <8 x i32> %1010, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1012 = getelementptr inbounds i32, ptr %1008, i64 -15
  %1013 = load <8 x i32>, ptr %1012, align 4, !tbaa !6
  %1014 = shufflevector <8 x i32> %1013, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1015 = getelementptr inbounds i32, ptr %1008, i64 -23
  %1016 = load <8 x i32>, ptr %1015, align 4, !tbaa !6
  %1017 = shufflevector <8 x i32> %1016, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1018 = getelementptr inbounds i32, ptr %1008, i64 -31
  %1019 = load <8 x i32>, ptr %1018, align 4, !tbaa !6
  %1020 = shufflevector <8 x i32> %1019, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1021 = mul <8 x i32> %1011, %1003
  %1022 = mul <8 x i32> %1014, %1004
  %1023 = mul <8 x i32> %1017, %1005
  %1024 = mul <8 x i32> %1020, %1006
  %1025 = add nuw i64 %1002, 32
  %1026 = icmp eq i64 %1025, %999
  br i1 %1026, label %1027, label %1001, !llvm.loop !795

1027:                                             ; preds = %1001
  %1028 = mul <8 x i32> %1022, %1021
  %1029 = mul <8 x i32> %1023, %1028
  %1030 = mul <8 x i32> %1024, %1029
  %1031 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1030)
  %1032 = icmp eq i64 %995, %999
  br i1 %1032, label %1045, label %1033

1033:                                             ; preds = %986, %1027
  %1034 = phi i64 [ %989, %986 ], [ %1000, %1027 ]
  %1035 = phi i32 [ 1, %986 ], [ %1031, %1027 ]
  br label %1036

1036:                                             ; preds = %1033, %1036
  %1037 = phi i64 [ %1042, %1036 ], [ %1034, %1033 ]
  %1038 = phi i32 [ %1041, %1036 ], [ %1035, %1033 ]
  %1039 = getelementptr inbounds i32, ptr %9, i64 %1037
  %1040 = load i32, ptr %1039, align 4, !tbaa !6
  %1041 = mul nsw i32 %1040, %1038
  %1042 = add nsw i64 %1037, -1
  %1043 = trunc i64 %1037 to i32
  %1044 = icmp sgt i32 %1043, 0
  br i1 %1044, label %1036, label %1045, !llvm.loop !796

1045:                                             ; preds = %1036, %1027
  %1046 = phi i32 [ %1031, %1027 ], [ %1041, %1036 ]
  %1047 = and i64 %996, 4294967295
  %1048 = getelementptr inbounds i32, ptr %6, i64 %1047
  %1049 = load i32, ptr %1048, align 4, !tbaa !6
  %1050 = mul nsw i32 %1049, %1046
  %1051 = add nsw i32 %1050, %990
  %1052 = icmp sgt i64 %988, 2
  %1053 = add nsw i64 %989, -1
  %1054 = add i32 %987, 1
  br i1 %1052, label %986, label %1055, !llvm.loop !797

1055:                                             ; preds = %1045, %982
  %1056 = phi i32 [ %985, %982 ], [ %1051, %1045 ]
  %1057 = sext i32 %1056 to i64
  %1058 = getelementptr inbounds i64, ptr %652, i64 %1057
  %1059 = load i64, ptr %1058, align 8, !tbaa !121
  %1060 = trunc i64 %1059 to i32
  %1061 = load i32, ptr %654, align 4, !tbaa !6
  %1062 = icmp slt i32 %1061, %1060
  br i1 %1062, label %1063, label %1064

1063:                                             ; preds = %1055
  store i32 %1060, ptr %654, align 4, !tbaa !6
  br label %1064

1064:                                             ; preds = %1063, %1055
  %1065 = fadd fast double %984, 1.000000e+00
  %1066 = add nuw nsw i32 %983, 1
  br i1 %976, label %1067, label %1114

1067:                                             ; preds = %1064
  %1068 = load i32, ptr %4, align 4, !tbaa !6
  %1069 = load i32, ptr %12, align 4, !tbaa !6
  %1070 = add nsw i32 %1069, -1
  %1071 = icmp slt i32 %1068, %1070
  br i1 %1071, label %1091, label %1072

1072:                                             ; preds = %1067
  %1073 = icmp eq i32 %1068, %1070
  br i1 %1073, label %1074, label %1107

1074:                                             ; preds = %1072
  store i32 0, ptr %4, align 4, !tbaa !6
  %1075 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1075, ptr %6, align 4, !tbaa !6
  br i1 %981, label %1114, label %1076

1076:                                             ; preds = %1074, %1101
  %1077 = phi i64 [ %1105, %1101 ], [ 1, %1074 ]
  %1078 = getelementptr inbounds i32, ptr %4, i64 %1077
  %1079 = load i32, ptr %1078, align 4, !tbaa !6
  %1080 = getelementptr inbounds i32, ptr %12, i64 %1077
  %1081 = load i32, ptr %1080, align 4, !tbaa !6
  %1082 = add nsw i32 %1081, -1
  %1083 = icmp slt i32 %1079, %1082
  br i1 %1083, label %1084, label %1099

1084:                                             ; preds = %1076
  br i1 %1071, label %1091, label %1085

1085:                                             ; preds = %1084
  %1086 = getelementptr inbounds i32, ptr %7, i64 %1077
  %1087 = load i32, ptr %1086, align 4, !tbaa !6
  %1088 = getelementptr inbounds i32, ptr %6, i64 %1077
  %1089 = load i32, ptr %1088, align 4, !tbaa !6
  %1090 = add nsw i32 %1089, %1087
  store i32 %1090, ptr %1088, align 4, !tbaa !6
  br label %1109

1091:                                             ; preds = %1067, %1084
  %1092 = phi i32 [ %1079, %1084 ], [ %1068, %1067 ]
  %1093 = phi ptr [ %1078, %1084 ], [ %4, %1067 ]
  %1094 = phi i64 [ %1077, %1084 ], [ 0, %1067 ]
  %1095 = add nsw i32 %1092, 1
  store i32 %1095, ptr %1093, align 4, !tbaa !6
  %1096 = getelementptr inbounds i32, ptr %7, i64 %1094
  %1097 = load i32, ptr %1096, align 4, !tbaa !6
  %1098 = getelementptr inbounds i32, ptr %6, i64 %1094
  br label %1109

1099:                                             ; preds = %1076
  %1100 = icmp eq i32 %1079, %1082
  br i1 %1100, label %1101, label %1107

1101:                                             ; preds = %1099
  store i32 0, ptr %1078, align 4, !tbaa !6
  %1102 = getelementptr inbounds i32, ptr %8, i64 %1077
  %1103 = load i32, ptr %1102, align 4, !tbaa !6
  %1104 = getelementptr inbounds i32, ptr %6, i64 %1077
  store i32 %1103, ptr %1104, align 4, !tbaa !6
  %1105 = add nuw nsw i64 %1077, 1
  %1106 = icmp eq i64 %1105, %979
  br i1 %1106, label %1114, label %1076, !llvm.loop !798

1107:                                             ; preds = %1072, %1099
  %1108 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1259, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5535

1109:                                             ; preds = %1085, %1091
  %1110 = phi ptr [ %1098, %1091 ], [ %1078, %1085 ]
  %1111 = phi i32 [ %1097, %1091 ], [ 1, %1085 ]
  %1112 = load i32, ptr %1110, align 4, !tbaa !6
  %1113 = add nsw i32 %1112, %1111
  store i32 %1113, ptr %1110, align 4, !tbaa !6
  br label %1114

1114:                                             ; preds = %1101, %1109, %1074, %1064
  %1115 = icmp eq i32 %1066, %5
  br i1 %1115, label %5530, label %982, !llvm.loop !799

1116:                                             ; preds = %965, %1253
  %1117 = phi i32 [ 0, %965 ], [ %1202, %1253 ]
  %1118 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %966, label %1119, label %1188

1119:                                             ; preds = %1116, %1178
  %1120 = phi i32 [ %1187, %1178 ], [ 0, %1116 ]
  %1121 = phi i64 [ %1129, %1178 ], [ %970, %1116 ]
  %1122 = phi i64 [ %1186, %1178 ], [ %969, %1116 ]
  %1123 = phi i32 [ %1184, %1178 ], [ %1118, %1116 ]
  %1124 = sub i32 %968, %1120
  %1125 = tail call i32 @llvm.smin.i32(i32 %1124, i32 0)
  %1126 = sub i32 %1124, %1125
  %1127 = zext i32 %1126 to i64
  %1128 = add nuw nsw i64 %1127, 1
  %1129 = add nsw i64 %1121, -1
  %1130 = icmp ult i32 %1126, 31
  br i1 %1130, label %1166, label %1131

1131:                                             ; preds = %1119
  %1132 = and i64 %1128, 8589934560
  %1133 = sub i64 %1122, %1132
  br label %1134

1134:                                             ; preds = %1134, %1131
  %1135 = phi i64 [ 0, %1131 ], [ %1158, %1134 ]
  %1136 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1131 ], [ %1154, %1134 ]
  %1137 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1131 ], [ %1155, %1134 ]
  %1138 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1131 ], [ %1156, %1134 ]
  %1139 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1131 ], [ %1157, %1134 ]
  %1140 = sub i64 %1122, %1135
  %1141 = getelementptr inbounds i32, ptr %11, i64 %1140
  %1142 = getelementptr inbounds i32, ptr %1141, i64 -7
  %1143 = load <8 x i32>, ptr %1142, align 4, !tbaa !6
  %1144 = shufflevector <8 x i32> %1143, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1145 = getelementptr inbounds i32, ptr %1141, i64 -15
  %1146 = load <8 x i32>, ptr %1145, align 4, !tbaa !6
  %1147 = shufflevector <8 x i32> %1146, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1148 = getelementptr inbounds i32, ptr %1141, i64 -23
  %1149 = load <8 x i32>, ptr %1148, align 4, !tbaa !6
  %1150 = shufflevector <8 x i32> %1149, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1151 = getelementptr inbounds i32, ptr %1141, i64 -31
  %1152 = load <8 x i32>, ptr %1151, align 4, !tbaa !6
  %1153 = shufflevector <8 x i32> %1152, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1154 = mul <8 x i32> %1144, %1136
  %1155 = mul <8 x i32> %1147, %1137
  %1156 = mul <8 x i32> %1150, %1138
  %1157 = mul <8 x i32> %1153, %1139
  %1158 = add nuw i64 %1135, 32
  %1159 = icmp eq i64 %1158, %1132
  br i1 %1159, label %1160, label %1134, !llvm.loop !800

1160:                                             ; preds = %1134
  %1161 = mul <8 x i32> %1155, %1154
  %1162 = mul <8 x i32> %1156, %1161
  %1163 = mul <8 x i32> %1157, %1162
  %1164 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1163)
  %1165 = icmp eq i64 %1128, %1132
  br i1 %1165, label %1178, label %1166

1166:                                             ; preds = %1119, %1160
  %1167 = phi i64 [ %1122, %1119 ], [ %1133, %1160 ]
  %1168 = phi i32 [ 1, %1119 ], [ %1164, %1160 ]
  br label %1169

1169:                                             ; preds = %1166, %1169
  %1170 = phi i64 [ %1175, %1169 ], [ %1167, %1166 ]
  %1171 = phi i32 [ %1174, %1169 ], [ %1168, %1166 ]
  %1172 = getelementptr inbounds i32, ptr %11, i64 %1170
  %1173 = load i32, ptr %1172, align 4, !tbaa !6
  %1174 = mul nsw i32 %1173, %1171
  %1175 = add nsw i64 %1170, -1
  %1176 = trunc i64 %1170 to i32
  %1177 = icmp sgt i32 %1176, 0
  br i1 %1177, label %1169, label %1178, !llvm.loop !801

1178:                                             ; preds = %1169, %1160
  %1179 = phi i32 [ %1164, %1160 ], [ %1174, %1169 ]
  %1180 = and i64 %1129, 4294967295
  %1181 = getelementptr inbounds i32, ptr %6, i64 %1180
  %1182 = load i32, ptr %1181, align 4, !tbaa !6
  %1183 = mul nsw i32 %1182, %1179
  %1184 = add nsw i32 %1183, %1123
  %1185 = icmp sgt i64 %1121, 2
  %1186 = add nsw i64 %1122, -1
  %1187 = add i32 %1120, 1
  br i1 %1185, label %1119, label %1188, !llvm.loop !802

1188:                                             ; preds = %1178, %1116
  %1189 = phi i32 [ %1118, %1116 ], [ %1184, %1178 ]
  %1190 = icmp slt i32 %1189, %5
  br i1 %1190, label %1193, label %1191

1191:                                             ; preds = %1188
  %1192 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1259, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5535

1193:                                             ; preds = %1188
  %1194 = sext i32 %1189 to i64
  %1195 = getelementptr inbounds i64, ptr %652, i64 %1194
  %1196 = load i64, ptr %1195, align 8, !tbaa !121
  %1197 = trunc i64 %1196 to i32
  %1198 = load i32, ptr %654, align 4, !tbaa !6
  %1199 = icmp slt i32 %1198, %1197
  br i1 %1199, label %1200, label %1201

1200:                                             ; preds = %1193
  store i32 %1197, ptr %654, align 4, !tbaa !6
  br label %1201

1201:                                             ; preds = %1200, %1193
  %1202 = add nuw nsw i32 %1117, 1
  br i1 %967, label %1203, label %1253

1203:                                             ; preds = %1201
  %1204 = load i32, ptr %4, align 4, !tbaa !6
  %1205 = load i32, ptr %12, align 4, !tbaa !6
  %1206 = add nsw i32 %1205, -1
  %1207 = icmp slt i32 %1204, %1206
  br i1 %1207, label %1230, label %1208

1208:                                             ; preds = %1203
  %1209 = icmp eq i32 %1204, %1206
  br i1 %1209, label %1210, label %1246

1210:                                             ; preds = %1208
  store i32 0, ptr %4, align 4, !tbaa !6
  %1211 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1211, ptr %6, align 4, !tbaa !6
  br i1 %972, label %1253, label %1212

1212:                                             ; preds = %1210, %1240
  %1213 = phi i64 [ %1244, %1240 ], [ 1, %1210 ]
  %1214 = getelementptr inbounds i32, ptr %4, i64 %1213
  %1215 = load i32, ptr %1214, align 4, !tbaa !6
  %1216 = getelementptr inbounds i32, ptr %12, i64 %1213
  %1217 = load i32, ptr %1216, align 4, !tbaa !6
  %1218 = add nsw i32 %1217, -1
  %1219 = icmp slt i32 %1215, %1218
  br i1 %1219, label %1220, label %1238

1220:                                             ; preds = %1212
  br i1 %1207, label %1230, label %1221

1221:                                             ; preds = %1220
  %1222 = shl i64 %1213, 32
  %1223 = add i64 %1222, -4294967296
  %1224 = ashr exact i64 %1223, 32
  %1225 = getelementptr inbounds i32, ptr %7, i64 %1224
  %1226 = load i32, ptr %1225, align 4, !tbaa !6
  %1227 = getelementptr inbounds i32, ptr %6, i64 %1213
  %1228 = load i32, ptr %1227, align 4, !tbaa !6
  %1229 = add nsw i32 %1228, %1226
  store i32 %1229, ptr %1227, align 4, !tbaa !6
  br label %1248

1230:                                             ; preds = %1203, %1220
  %1231 = phi i32 [ %1215, %1220 ], [ %1204, %1203 ]
  %1232 = phi ptr [ %1214, %1220 ], [ %4, %1203 ]
  %1233 = phi i64 [ %1213, %1220 ], [ 0, %1203 ]
  %1234 = add nsw i32 %1231, 1
  store i32 %1234, ptr %1232, align 4, !tbaa !6
  %1235 = getelementptr inbounds i32, ptr %7, i64 %1233
  %1236 = load i32, ptr %1235, align 4, !tbaa !6
  %1237 = getelementptr inbounds i32, ptr %6, i64 %1233
  br label %1248

1238:                                             ; preds = %1212
  %1239 = icmp eq i32 %1215, %1218
  br i1 %1239, label %1240, label %1246

1240:                                             ; preds = %1238
  store i32 0, ptr %1214, align 4, !tbaa !6
  %1241 = getelementptr inbounds i32, ptr %8, i64 %1213
  %1242 = load i32, ptr %1241, align 4, !tbaa !6
  %1243 = getelementptr inbounds i32, ptr %6, i64 %1213
  store i32 %1242, ptr %1243, align 4, !tbaa !6
  %1244 = add nuw nsw i64 %1213, 1
  %1245 = icmp eq i64 %1244, %970
  br i1 %1245, label %1253, label %1212, !llvm.loop !803

1246:                                             ; preds = %1208, %1238
  %1247 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1259, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5535

1248:                                             ; preds = %1221, %1230
  %1249 = phi ptr [ %1237, %1230 ], [ %1214, %1221 ]
  %1250 = phi i32 [ %1236, %1230 ], [ 1, %1221 ]
  %1251 = load i32, ptr %1249, align 4, !tbaa !6
  %1252 = add nsw i32 %1251, %1250
  store i32 %1252, ptr %1249, align 4, !tbaa !6
  br label %1253

1253:                                             ; preds = %1240, %1248, %1210, %1201
  %1254 = icmp eq i32 %1202, %5
  br i1 %1254, label %5530, label %1116, !llvm.loop !804

1255:                                             ; preds = %658
  %1256 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1259, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5530

1257:                                             ; preds = %18
  %1258 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1259 = load ptr, ptr %1258, align 8, !tbaa !10
  %1260 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1261 = load ptr, ptr %1260, align 8, !tbaa !10
  %1262 = load i64, ptr %1259, align 8, !tbaa !121
  %1263 = trunc i64 %1262 to i8
  store i8 %1263, ptr %1261, align 1, !tbaa !12
  %1264 = icmp eq i32 %13, 0
  br i1 %1264, label %1265, label %1270

1265:                                             ; preds = %1257
  %1266 = load i64, ptr %1259, align 8, !tbaa !121
  %1267 = trunc i64 %1266 to i8
  %1268 = icmp slt i8 %1263, %1267
  br i1 %1268, label %1269, label %5530

1269:                                             ; preds = %1265
  store i8 %1267, ptr %1261, align 1, !tbaa !12
  br label %5530

1270:                                             ; preds = %1257
  switch i32 %1, label %1867 [
    i32 1, label %1271
    i32 0, label %1571
  ]

1271:                                             ; preds = %1270
  %1272 = getelementptr inbounds i32, ptr %3, i64 %19
  %1273 = load i32, ptr %1272, align 4, !tbaa !6
  %1274 = icmp eq i32 %1273, 0
  %1275 = icmp sgt i32 %5, 0
  br i1 %1274, label %1285, label %1276

1276:                                             ; preds = %1271
  br i1 %1275, label %1277, label %5530

1277:                                             ; preds = %1276
  %1278 = icmp sgt i32 %13, 1
  %1279 = icmp sgt i32 %13, 0
  %1280 = add i32 %13, -2
  %1281 = zext i32 %1280 to i64
  %1282 = zext i32 %13 to i64
  %1283 = add nuw i32 %5, 1
  %1284 = icmp eq i32 %13, 1
  br label %1432

1285:                                             ; preds = %1271
  br i1 %1275, label %1286, label %5530

1286:                                             ; preds = %1285
  %1287 = icmp sgt i32 %13, 1
  %1288 = icmp sgt i32 %13, 0
  %1289 = add i32 %13, -2
  %1290 = zext i32 %1289 to i64
  %1291 = zext i32 %13 to i64
  %1292 = add nuw i32 %5, 1
  %1293 = icmp eq i32 %13, 1
  br label %1294

1294:                                             ; preds = %1286, %1430
  %1295 = phi i32 [ 0, %1286 ], [ %1382, %1430 ]
  %1296 = phi double [ 0.000000e+00, %1286 ], [ %1381, %1430 ]
  %1297 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1287, label %1298, label %1367

1298:                                             ; preds = %1294, %1357
  %1299 = phi i32 [ %1366, %1357 ], [ 0, %1294 ]
  %1300 = phi i64 [ %1308, %1357 ], [ %1291, %1294 ]
  %1301 = phi i64 [ %1365, %1357 ], [ %1290, %1294 ]
  %1302 = phi i32 [ %1363, %1357 ], [ %1297, %1294 ]
  %1303 = sub i32 %1289, %1299
  %1304 = tail call i32 @llvm.smin.i32(i32 %1303, i32 0)
  %1305 = sub i32 %1303, %1304
  %1306 = zext i32 %1305 to i64
  %1307 = add nuw nsw i64 %1306, 1
  %1308 = add nsw i64 %1300, -1
  %1309 = icmp ult i32 %1305, 31
  br i1 %1309, label %1345, label %1310

1310:                                             ; preds = %1298
  %1311 = and i64 %1307, 8589934560
  %1312 = sub i64 %1301, %1311
  br label %1313

1313:                                             ; preds = %1313, %1310
  %1314 = phi i64 [ 0, %1310 ], [ %1337, %1313 ]
  %1315 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1310 ], [ %1333, %1313 ]
  %1316 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1310 ], [ %1334, %1313 ]
  %1317 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1310 ], [ %1335, %1313 ]
  %1318 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1310 ], [ %1336, %1313 ]
  %1319 = sub i64 %1301, %1314
  %1320 = getelementptr inbounds i32, ptr %9, i64 %1319
  %1321 = getelementptr inbounds i32, ptr %1320, i64 -7
  %1322 = load <8 x i32>, ptr %1321, align 4, !tbaa !6
  %1323 = shufflevector <8 x i32> %1322, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1324 = getelementptr inbounds i32, ptr %1320, i64 -15
  %1325 = load <8 x i32>, ptr %1324, align 4, !tbaa !6
  %1326 = shufflevector <8 x i32> %1325, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1327 = getelementptr inbounds i32, ptr %1320, i64 -23
  %1328 = load <8 x i32>, ptr %1327, align 4, !tbaa !6
  %1329 = shufflevector <8 x i32> %1328, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1330 = getelementptr inbounds i32, ptr %1320, i64 -31
  %1331 = load <8 x i32>, ptr %1330, align 4, !tbaa !6
  %1332 = shufflevector <8 x i32> %1331, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1333 = mul <8 x i32> %1323, %1315
  %1334 = mul <8 x i32> %1326, %1316
  %1335 = mul <8 x i32> %1329, %1317
  %1336 = mul <8 x i32> %1332, %1318
  %1337 = add nuw i64 %1314, 32
  %1338 = icmp eq i64 %1337, %1311
  br i1 %1338, label %1339, label %1313, !llvm.loop !805

1339:                                             ; preds = %1313
  %1340 = mul <8 x i32> %1334, %1333
  %1341 = mul <8 x i32> %1335, %1340
  %1342 = mul <8 x i32> %1336, %1341
  %1343 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1342)
  %1344 = icmp eq i64 %1307, %1311
  br i1 %1344, label %1357, label %1345

1345:                                             ; preds = %1298, %1339
  %1346 = phi i64 [ %1301, %1298 ], [ %1312, %1339 ]
  %1347 = phi i32 [ 1, %1298 ], [ %1343, %1339 ]
  br label %1348

1348:                                             ; preds = %1345, %1348
  %1349 = phi i64 [ %1354, %1348 ], [ %1346, %1345 ]
  %1350 = phi i32 [ %1353, %1348 ], [ %1347, %1345 ]
  %1351 = getelementptr inbounds i32, ptr %9, i64 %1349
  %1352 = load i32, ptr %1351, align 4, !tbaa !6
  %1353 = mul nsw i32 %1352, %1350
  %1354 = add nsw i64 %1349, -1
  %1355 = trunc i64 %1349 to i32
  %1356 = icmp sgt i32 %1355, 0
  br i1 %1356, label %1348, label %1357, !llvm.loop !806

1357:                                             ; preds = %1348, %1339
  %1358 = phi i32 [ %1343, %1339 ], [ %1353, %1348 ]
  %1359 = and i64 %1308, 4294967295
  %1360 = getelementptr inbounds i32, ptr %6, i64 %1359
  %1361 = load i32, ptr %1360, align 4, !tbaa !6
  %1362 = mul nsw i32 %1361, %1358
  %1363 = add nsw i32 %1362, %1302
  %1364 = icmp sgt i64 %1300, 2
  %1365 = add nsw i64 %1301, -1
  %1366 = add i32 %1299, 1
  br i1 %1364, label %1298, label %1367, !llvm.loop !807

1367:                                             ; preds = %1357, %1294
  %1368 = phi i32 [ %1297, %1294 ], [ %1363, %1357 ]
  %1369 = sext i32 %1368 to i64
  %1370 = getelementptr inbounds double, ptr %2, i64 %1369
  %1371 = load double, ptr %1370, align 8, !tbaa !19
  %1372 = getelementptr inbounds i64, ptr %1259, i64 %1369
  %1373 = load i64, ptr %1372, align 8, !tbaa !121
  %1374 = trunc i64 %1373 to i8
  %1375 = fcmp fast ueq double %1371, 0.000000e+00
  br i1 %1375, label %1380, label %1376

1376:                                             ; preds = %1367
  %1377 = load i8, ptr %1261, align 1, !tbaa !12
  %1378 = icmp slt i8 %1377, %1374
  br i1 %1378, label %1379, label %1380

1379:                                             ; preds = %1376
  store i8 %1374, ptr %1261, align 1, !tbaa !12
  br label %1380

1380:                                             ; preds = %1376, %1379, %1367
  %1381 = fadd fast double %1371, %1296
  %1382 = add nuw nsw i32 %1295, 1
  br i1 %1288, label %1383, label %1430

1383:                                             ; preds = %1380
  %1384 = load i32, ptr %4, align 4, !tbaa !6
  %1385 = load i32, ptr %12, align 4, !tbaa !6
  %1386 = add nsw i32 %1385, -1
  %1387 = icmp slt i32 %1384, %1386
  br i1 %1387, label %1407, label %1388

1388:                                             ; preds = %1383
  %1389 = icmp eq i32 %1384, %1386
  br i1 %1389, label %1390, label %1423

1390:                                             ; preds = %1388
  store i32 0, ptr %4, align 4, !tbaa !6
  %1391 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1391, ptr %6, align 4, !tbaa !6
  br i1 %1293, label %1430, label %1392

1392:                                             ; preds = %1390, %1417
  %1393 = phi i64 [ %1421, %1417 ], [ 1, %1390 ]
  %1394 = getelementptr inbounds i32, ptr %4, i64 %1393
  %1395 = load i32, ptr %1394, align 4, !tbaa !6
  %1396 = getelementptr inbounds i32, ptr %12, i64 %1393
  %1397 = load i32, ptr %1396, align 4, !tbaa !6
  %1398 = add nsw i32 %1397, -1
  %1399 = icmp slt i32 %1395, %1398
  br i1 %1399, label %1400, label %1415

1400:                                             ; preds = %1392
  br i1 %1387, label %1407, label %1401

1401:                                             ; preds = %1400
  %1402 = getelementptr inbounds i32, ptr %7, i64 %1393
  %1403 = load i32, ptr %1402, align 4, !tbaa !6
  %1404 = getelementptr inbounds i32, ptr %6, i64 %1393
  %1405 = load i32, ptr %1404, align 4, !tbaa !6
  %1406 = add nsw i32 %1405, %1403
  store i32 %1406, ptr %1404, align 4, !tbaa !6
  br label %1425

1407:                                             ; preds = %1383, %1400
  %1408 = phi i32 [ %1395, %1400 ], [ %1384, %1383 ]
  %1409 = phi ptr [ %1394, %1400 ], [ %4, %1383 ]
  %1410 = phi i64 [ %1393, %1400 ], [ 0, %1383 ]
  %1411 = add nsw i32 %1408, 1
  store i32 %1411, ptr %1409, align 4, !tbaa !6
  %1412 = getelementptr inbounds i32, ptr %7, i64 %1410
  %1413 = load i32, ptr %1412, align 4, !tbaa !6
  %1414 = getelementptr inbounds i32, ptr %6, i64 %1410
  br label %1425

1415:                                             ; preds = %1392
  %1416 = icmp eq i32 %1395, %1398
  br i1 %1416, label %1417, label %1423

1417:                                             ; preds = %1415
  store i32 0, ptr %1394, align 4, !tbaa !6
  %1418 = getelementptr inbounds i32, ptr %8, i64 %1393
  %1419 = load i32, ptr %1418, align 4, !tbaa !6
  %1420 = getelementptr inbounds i32, ptr %6, i64 %1393
  store i32 %1419, ptr %1420, align 4, !tbaa !6
  %1421 = add nuw nsw i64 %1393, 1
  %1422 = icmp eq i64 %1421, %1291
  br i1 %1422, label %1430, label %1392, !llvm.loop !808

1423:                                             ; preds = %1388, %1415
  %1424 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1263, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5535

1425:                                             ; preds = %1401, %1407
  %1426 = phi ptr [ %1414, %1407 ], [ %1394, %1401 ]
  %1427 = phi i32 [ %1413, %1407 ], [ 1, %1401 ]
  %1428 = load i32, ptr %1426, align 4, !tbaa !6
  %1429 = add nsw i32 %1428, %1427
  store i32 %1429, ptr %1426, align 4, !tbaa !6
  br label %1430

1430:                                             ; preds = %1417, %1425, %1390, %1380
  %1431 = icmp eq i32 %1382, %5
  br i1 %1431, label %5530, label %1294, !llvm.loop !809

1432:                                             ; preds = %1277, %1569
  %1433 = phi i32 [ 0, %1277 ], [ %1518, %1569 ]
  %1434 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1278, label %1435, label %1504

1435:                                             ; preds = %1432, %1494
  %1436 = phi i32 [ %1503, %1494 ], [ 0, %1432 ]
  %1437 = phi i64 [ %1445, %1494 ], [ %1282, %1432 ]
  %1438 = phi i64 [ %1502, %1494 ], [ %1281, %1432 ]
  %1439 = phi i32 [ %1500, %1494 ], [ %1434, %1432 ]
  %1440 = sub i32 %1280, %1436
  %1441 = tail call i32 @llvm.smin.i32(i32 %1440, i32 0)
  %1442 = sub i32 %1440, %1441
  %1443 = zext i32 %1442 to i64
  %1444 = add nuw nsw i64 %1443, 1
  %1445 = add nsw i64 %1437, -1
  %1446 = icmp ult i32 %1442, 31
  br i1 %1446, label %1482, label %1447

1447:                                             ; preds = %1435
  %1448 = and i64 %1444, 8589934560
  %1449 = sub i64 %1438, %1448
  br label %1450

1450:                                             ; preds = %1450, %1447
  %1451 = phi i64 [ 0, %1447 ], [ %1474, %1450 ]
  %1452 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1447 ], [ %1470, %1450 ]
  %1453 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1447 ], [ %1471, %1450 ]
  %1454 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1447 ], [ %1472, %1450 ]
  %1455 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1447 ], [ %1473, %1450 ]
  %1456 = sub i64 %1438, %1451
  %1457 = getelementptr inbounds i32, ptr %11, i64 %1456
  %1458 = getelementptr inbounds i32, ptr %1457, i64 -7
  %1459 = load <8 x i32>, ptr %1458, align 4, !tbaa !6
  %1460 = shufflevector <8 x i32> %1459, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1461 = getelementptr inbounds i32, ptr %1457, i64 -15
  %1462 = load <8 x i32>, ptr %1461, align 4, !tbaa !6
  %1463 = shufflevector <8 x i32> %1462, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1464 = getelementptr inbounds i32, ptr %1457, i64 -23
  %1465 = load <8 x i32>, ptr %1464, align 4, !tbaa !6
  %1466 = shufflevector <8 x i32> %1465, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1467 = getelementptr inbounds i32, ptr %1457, i64 -31
  %1468 = load <8 x i32>, ptr %1467, align 4, !tbaa !6
  %1469 = shufflevector <8 x i32> %1468, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1470 = mul <8 x i32> %1460, %1452
  %1471 = mul <8 x i32> %1463, %1453
  %1472 = mul <8 x i32> %1466, %1454
  %1473 = mul <8 x i32> %1469, %1455
  %1474 = add nuw i64 %1451, 32
  %1475 = icmp eq i64 %1474, %1448
  br i1 %1475, label %1476, label %1450, !llvm.loop !810

1476:                                             ; preds = %1450
  %1477 = mul <8 x i32> %1471, %1470
  %1478 = mul <8 x i32> %1472, %1477
  %1479 = mul <8 x i32> %1473, %1478
  %1480 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1479)
  %1481 = icmp eq i64 %1444, %1448
  br i1 %1481, label %1494, label %1482

1482:                                             ; preds = %1435, %1476
  %1483 = phi i64 [ %1438, %1435 ], [ %1449, %1476 ]
  %1484 = phi i32 [ 1, %1435 ], [ %1480, %1476 ]
  br label %1485

1485:                                             ; preds = %1482, %1485
  %1486 = phi i64 [ %1491, %1485 ], [ %1483, %1482 ]
  %1487 = phi i32 [ %1490, %1485 ], [ %1484, %1482 ]
  %1488 = getelementptr inbounds i32, ptr %11, i64 %1486
  %1489 = load i32, ptr %1488, align 4, !tbaa !6
  %1490 = mul nsw i32 %1489, %1487
  %1491 = add nsw i64 %1486, -1
  %1492 = trunc i64 %1486 to i32
  %1493 = icmp sgt i32 %1492, 0
  br i1 %1493, label %1485, label %1494, !llvm.loop !811

1494:                                             ; preds = %1485, %1476
  %1495 = phi i32 [ %1480, %1476 ], [ %1490, %1485 ]
  %1496 = and i64 %1445, 4294967295
  %1497 = getelementptr inbounds i32, ptr %6, i64 %1496
  %1498 = load i32, ptr %1497, align 4, !tbaa !6
  %1499 = mul nsw i32 %1498, %1495
  %1500 = add nsw i32 %1499, %1439
  %1501 = icmp sgt i64 %1437, 2
  %1502 = add nsw i64 %1438, -1
  %1503 = add i32 %1436, 1
  br i1 %1501, label %1435, label %1504, !llvm.loop !812

1504:                                             ; preds = %1494, %1432
  %1505 = phi i32 [ %1434, %1432 ], [ %1500, %1494 ]
  %1506 = icmp slt i32 %1505, %5
  br i1 %1506, label %1509, label %1507

1507:                                             ; preds = %1504
  %1508 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1263, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5535

1509:                                             ; preds = %1504
  %1510 = sext i32 %1505 to i64
  %1511 = getelementptr inbounds i64, ptr %1259, i64 %1510
  %1512 = load i64, ptr %1511, align 8, !tbaa !121
  %1513 = trunc i64 %1512 to i8
  %1514 = load i8, ptr %1261, align 1, !tbaa !12
  %1515 = icmp slt i8 %1514, %1513
  br i1 %1515, label %1516, label %1517

1516:                                             ; preds = %1509
  store i8 %1513, ptr %1261, align 1, !tbaa !12
  br label %1517

1517:                                             ; preds = %1509, %1516
  %1518 = add nuw nsw i32 %1433, 1
  br i1 %1279, label %1519, label %1569

1519:                                             ; preds = %1517
  %1520 = load i32, ptr %4, align 4, !tbaa !6
  %1521 = load i32, ptr %12, align 4, !tbaa !6
  %1522 = add nsw i32 %1521, -1
  %1523 = icmp slt i32 %1520, %1522
  br i1 %1523, label %1546, label %1524

1524:                                             ; preds = %1519
  %1525 = icmp eq i32 %1520, %1522
  br i1 %1525, label %1526, label %1562

1526:                                             ; preds = %1524
  store i32 0, ptr %4, align 4, !tbaa !6
  %1527 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1527, ptr %6, align 4, !tbaa !6
  br i1 %1284, label %1569, label %1528

1528:                                             ; preds = %1526, %1556
  %1529 = phi i64 [ %1560, %1556 ], [ 1, %1526 ]
  %1530 = getelementptr inbounds i32, ptr %4, i64 %1529
  %1531 = load i32, ptr %1530, align 4, !tbaa !6
  %1532 = getelementptr inbounds i32, ptr %12, i64 %1529
  %1533 = load i32, ptr %1532, align 4, !tbaa !6
  %1534 = add nsw i32 %1533, -1
  %1535 = icmp slt i32 %1531, %1534
  br i1 %1535, label %1536, label %1554

1536:                                             ; preds = %1528
  br i1 %1523, label %1546, label %1537

1537:                                             ; preds = %1536
  %1538 = shl i64 %1529, 32
  %1539 = add i64 %1538, -4294967296
  %1540 = ashr exact i64 %1539, 32
  %1541 = getelementptr inbounds i32, ptr %7, i64 %1540
  %1542 = load i32, ptr %1541, align 4, !tbaa !6
  %1543 = getelementptr inbounds i32, ptr %6, i64 %1529
  %1544 = load i32, ptr %1543, align 4, !tbaa !6
  %1545 = add nsw i32 %1544, %1542
  store i32 %1545, ptr %1543, align 4, !tbaa !6
  br label %1564

1546:                                             ; preds = %1519, %1536
  %1547 = phi i32 [ %1531, %1536 ], [ %1520, %1519 ]
  %1548 = phi ptr [ %1530, %1536 ], [ %4, %1519 ]
  %1549 = phi i64 [ %1529, %1536 ], [ 0, %1519 ]
  %1550 = add nsw i32 %1547, 1
  store i32 %1550, ptr %1548, align 4, !tbaa !6
  %1551 = getelementptr inbounds i32, ptr %7, i64 %1549
  %1552 = load i32, ptr %1551, align 4, !tbaa !6
  %1553 = getelementptr inbounds i32, ptr %6, i64 %1549
  br label %1564

1554:                                             ; preds = %1528
  %1555 = icmp eq i32 %1531, %1534
  br i1 %1555, label %1556, label %1562

1556:                                             ; preds = %1554
  store i32 0, ptr %1530, align 4, !tbaa !6
  %1557 = getelementptr inbounds i32, ptr %8, i64 %1529
  %1558 = load i32, ptr %1557, align 4, !tbaa !6
  %1559 = getelementptr inbounds i32, ptr %6, i64 %1529
  store i32 %1558, ptr %1559, align 4, !tbaa !6
  %1560 = add nuw nsw i64 %1529, 1
  %1561 = icmp eq i64 %1560, %1282
  br i1 %1561, label %1569, label %1528, !llvm.loop !813

1562:                                             ; preds = %1524, %1554
  %1563 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1263, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5535

1564:                                             ; preds = %1537, %1546
  %1565 = phi ptr [ %1553, %1546 ], [ %1530, %1537 ]
  %1566 = phi i32 [ %1552, %1546 ], [ 1, %1537 ]
  %1567 = load i32, ptr %1565, align 4, !tbaa !6
  %1568 = add nsw i32 %1567, %1566
  store i32 %1568, ptr %1565, align 4, !tbaa !6
  br label %1569

1569:                                             ; preds = %1556, %1564, %1526, %1517
  %1570 = icmp eq i32 %1518, %5
  br i1 %1570, label %5530, label %1432, !llvm.loop !814

1571:                                             ; preds = %1270
  %1572 = getelementptr inbounds i32, ptr %3, i64 %19
  %1573 = load i32, ptr %1572, align 4, !tbaa !6
  %1574 = icmp eq i32 %1573, 0
  %1575 = icmp sgt i32 %5, 0
  br i1 %1574, label %1585, label %1576

1576:                                             ; preds = %1571
  br i1 %1575, label %1577, label %5530

1577:                                             ; preds = %1576
  %1578 = icmp sgt i32 %13, 1
  %1579 = icmp sgt i32 %13, 0
  %1580 = add i32 %13, -2
  %1581 = zext i32 %1580 to i64
  %1582 = zext i32 %13 to i64
  %1583 = add nuw i32 %5, 1
  %1584 = icmp eq i32 %13, 1
  br label %1728

1585:                                             ; preds = %1571
  br i1 %1575, label %1586, label %5530

1586:                                             ; preds = %1585
  %1587 = icmp sgt i32 %13, 1
  %1588 = icmp sgt i32 %13, 0
  %1589 = add i32 %13, -2
  %1590 = zext i32 %1589 to i64
  %1591 = zext i32 %13 to i64
  %1592 = add nuw i32 %5, 1
  %1593 = icmp eq i32 %13, 1
  br label %1594

1594:                                             ; preds = %1586, %1726
  %1595 = phi i32 [ 0, %1586 ], [ %1678, %1726 ]
  %1596 = phi double [ 0.000000e+00, %1586 ], [ %1677, %1726 ]
  %1597 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1587, label %1598, label %1667

1598:                                             ; preds = %1594, %1657
  %1599 = phi i32 [ %1666, %1657 ], [ 0, %1594 ]
  %1600 = phi i64 [ %1608, %1657 ], [ %1591, %1594 ]
  %1601 = phi i64 [ %1665, %1657 ], [ %1590, %1594 ]
  %1602 = phi i32 [ %1663, %1657 ], [ %1597, %1594 ]
  %1603 = sub i32 %1589, %1599
  %1604 = tail call i32 @llvm.smin.i32(i32 %1603, i32 0)
  %1605 = sub i32 %1603, %1604
  %1606 = zext i32 %1605 to i64
  %1607 = add nuw nsw i64 %1606, 1
  %1608 = add nsw i64 %1600, -1
  %1609 = icmp ult i32 %1605, 31
  br i1 %1609, label %1645, label %1610

1610:                                             ; preds = %1598
  %1611 = and i64 %1607, 8589934560
  %1612 = sub i64 %1601, %1611
  br label %1613

1613:                                             ; preds = %1613, %1610
  %1614 = phi i64 [ 0, %1610 ], [ %1637, %1613 ]
  %1615 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1610 ], [ %1633, %1613 ]
  %1616 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1610 ], [ %1634, %1613 ]
  %1617 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1610 ], [ %1635, %1613 ]
  %1618 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1610 ], [ %1636, %1613 ]
  %1619 = sub i64 %1601, %1614
  %1620 = getelementptr inbounds i32, ptr %9, i64 %1619
  %1621 = getelementptr inbounds i32, ptr %1620, i64 -7
  %1622 = load <8 x i32>, ptr %1621, align 4, !tbaa !6
  %1623 = shufflevector <8 x i32> %1622, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1624 = getelementptr inbounds i32, ptr %1620, i64 -15
  %1625 = load <8 x i32>, ptr %1624, align 4, !tbaa !6
  %1626 = shufflevector <8 x i32> %1625, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1627 = getelementptr inbounds i32, ptr %1620, i64 -23
  %1628 = load <8 x i32>, ptr %1627, align 4, !tbaa !6
  %1629 = shufflevector <8 x i32> %1628, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1630 = getelementptr inbounds i32, ptr %1620, i64 -31
  %1631 = load <8 x i32>, ptr %1630, align 4, !tbaa !6
  %1632 = shufflevector <8 x i32> %1631, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1633 = mul <8 x i32> %1623, %1615
  %1634 = mul <8 x i32> %1626, %1616
  %1635 = mul <8 x i32> %1629, %1617
  %1636 = mul <8 x i32> %1632, %1618
  %1637 = add nuw i64 %1614, 32
  %1638 = icmp eq i64 %1637, %1611
  br i1 %1638, label %1639, label %1613, !llvm.loop !815

1639:                                             ; preds = %1613
  %1640 = mul <8 x i32> %1634, %1633
  %1641 = mul <8 x i32> %1635, %1640
  %1642 = mul <8 x i32> %1636, %1641
  %1643 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1642)
  %1644 = icmp eq i64 %1607, %1611
  br i1 %1644, label %1657, label %1645

1645:                                             ; preds = %1598, %1639
  %1646 = phi i64 [ %1601, %1598 ], [ %1612, %1639 ]
  %1647 = phi i32 [ 1, %1598 ], [ %1643, %1639 ]
  br label %1648

1648:                                             ; preds = %1645, %1648
  %1649 = phi i64 [ %1654, %1648 ], [ %1646, %1645 ]
  %1650 = phi i32 [ %1653, %1648 ], [ %1647, %1645 ]
  %1651 = getelementptr inbounds i32, ptr %9, i64 %1649
  %1652 = load i32, ptr %1651, align 4, !tbaa !6
  %1653 = mul nsw i32 %1652, %1650
  %1654 = add nsw i64 %1649, -1
  %1655 = trunc i64 %1649 to i32
  %1656 = icmp sgt i32 %1655, 0
  br i1 %1656, label %1648, label %1657, !llvm.loop !816

1657:                                             ; preds = %1648, %1639
  %1658 = phi i32 [ %1643, %1639 ], [ %1653, %1648 ]
  %1659 = and i64 %1608, 4294967295
  %1660 = getelementptr inbounds i32, ptr %6, i64 %1659
  %1661 = load i32, ptr %1660, align 4, !tbaa !6
  %1662 = mul nsw i32 %1661, %1658
  %1663 = add nsw i32 %1662, %1602
  %1664 = icmp sgt i64 %1600, 2
  %1665 = add nsw i64 %1601, -1
  %1666 = add i32 %1599, 1
  br i1 %1664, label %1598, label %1667, !llvm.loop !817

1667:                                             ; preds = %1657, %1594
  %1668 = phi i32 [ %1597, %1594 ], [ %1663, %1657 ]
  %1669 = sext i32 %1668 to i64
  %1670 = getelementptr inbounds i64, ptr %1259, i64 %1669
  %1671 = load i64, ptr %1670, align 8, !tbaa !121
  %1672 = trunc i64 %1671 to i8
  %1673 = load i8, ptr %1261, align 1, !tbaa !12
  %1674 = icmp slt i8 %1673, %1672
  br i1 %1674, label %1675, label %1676

1675:                                             ; preds = %1667
  store i8 %1672, ptr %1261, align 1, !tbaa !12
  br label %1676

1676:                                             ; preds = %1675, %1667
  %1677 = fadd fast double %1596, 1.000000e+00
  %1678 = add nuw nsw i32 %1595, 1
  br i1 %1588, label %1679, label %1726

1679:                                             ; preds = %1676
  %1680 = load i32, ptr %4, align 4, !tbaa !6
  %1681 = load i32, ptr %12, align 4, !tbaa !6
  %1682 = add nsw i32 %1681, -1
  %1683 = icmp slt i32 %1680, %1682
  br i1 %1683, label %1703, label %1684

1684:                                             ; preds = %1679
  %1685 = icmp eq i32 %1680, %1682
  br i1 %1685, label %1686, label %1719

1686:                                             ; preds = %1684
  store i32 0, ptr %4, align 4, !tbaa !6
  %1687 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1687, ptr %6, align 4, !tbaa !6
  br i1 %1593, label %1726, label %1688

1688:                                             ; preds = %1686, %1713
  %1689 = phi i64 [ %1717, %1713 ], [ 1, %1686 ]
  %1690 = getelementptr inbounds i32, ptr %4, i64 %1689
  %1691 = load i32, ptr %1690, align 4, !tbaa !6
  %1692 = getelementptr inbounds i32, ptr %12, i64 %1689
  %1693 = load i32, ptr %1692, align 4, !tbaa !6
  %1694 = add nsw i32 %1693, -1
  %1695 = icmp slt i32 %1691, %1694
  br i1 %1695, label %1696, label %1711

1696:                                             ; preds = %1688
  br i1 %1683, label %1703, label %1697

1697:                                             ; preds = %1696
  %1698 = getelementptr inbounds i32, ptr %7, i64 %1689
  %1699 = load i32, ptr %1698, align 4, !tbaa !6
  %1700 = getelementptr inbounds i32, ptr %6, i64 %1689
  %1701 = load i32, ptr %1700, align 4, !tbaa !6
  %1702 = add nsw i32 %1701, %1699
  store i32 %1702, ptr %1700, align 4, !tbaa !6
  br label %1721

1703:                                             ; preds = %1679, %1696
  %1704 = phi i32 [ %1691, %1696 ], [ %1680, %1679 ]
  %1705 = phi ptr [ %1690, %1696 ], [ %4, %1679 ]
  %1706 = phi i64 [ %1689, %1696 ], [ 0, %1679 ]
  %1707 = add nsw i32 %1704, 1
  store i32 %1707, ptr %1705, align 4, !tbaa !6
  %1708 = getelementptr inbounds i32, ptr %7, i64 %1706
  %1709 = load i32, ptr %1708, align 4, !tbaa !6
  %1710 = getelementptr inbounds i32, ptr %6, i64 %1706
  br label %1721

1711:                                             ; preds = %1688
  %1712 = icmp eq i32 %1691, %1694
  br i1 %1712, label %1713, label %1719

1713:                                             ; preds = %1711
  store i32 0, ptr %1690, align 4, !tbaa !6
  %1714 = getelementptr inbounds i32, ptr %8, i64 %1689
  %1715 = load i32, ptr %1714, align 4, !tbaa !6
  %1716 = getelementptr inbounds i32, ptr %6, i64 %1689
  store i32 %1715, ptr %1716, align 4, !tbaa !6
  %1717 = add nuw nsw i64 %1689, 1
  %1718 = icmp eq i64 %1717, %1591
  br i1 %1718, label %1726, label %1688, !llvm.loop !818

1719:                                             ; preds = %1684, %1711
  %1720 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1263, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5535

1721:                                             ; preds = %1697, %1703
  %1722 = phi ptr [ %1710, %1703 ], [ %1690, %1697 ]
  %1723 = phi i32 [ %1709, %1703 ], [ 1, %1697 ]
  %1724 = load i32, ptr %1722, align 4, !tbaa !6
  %1725 = add nsw i32 %1724, %1723
  store i32 %1725, ptr %1722, align 4, !tbaa !6
  br label %1726

1726:                                             ; preds = %1713, %1721, %1686, %1676
  %1727 = icmp eq i32 %1678, %5
  br i1 %1727, label %5530, label %1594, !llvm.loop !819

1728:                                             ; preds = %1577, %1865
  %1729 = phi i32 [ 0, %1577 ], [ %1814, %1865 ]
  %1730 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1578, label %1731, label %1800

1731:                                             ; preds = %1728, %1790
  %1732 = phi i32 [ %1799, %1790 ], [ 0, %1728 ]
  %1733 = phi i64 [ %1741, %1790 ], [ %1582, %1728 ]
  %1734 = phi i64 [ %1798, %1790 ], [ %1581, %1728 ]
  %1735 = phi i32 [ %1796, %1790 ], [ %1730, %1728 ]
  %1736 = sub i32 %1580, %1732
  %1737 = tail call i32 @llvm.smin.i32(i32 %1736, i32 0)
  %1738 = sub i32 %1736, %1737
  %1739 = zext i32 %1738 to i64
  %1740 = add nuw nsw i64 %1739, 1
  %1741 = add nsw i64 %1733, -1
  %1742 = icmp ult i32 %1738, 31
  br i1 %1742, label %1778, label %1743

1743:                                             ; preds = %1731
  %1744 = and i64 %1740, 8589934560
  %1745 = sub i64 %1734, %1744
  br label %1746

1746:                                             ; preds = %1746, %1743
  %1747 = phi i64 [ 0, %1743 ], [ %1770, %1746 ]
  %1748 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1743 ], [ %1766, %1746 ]
  %1749 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1743 ], [ %1767, %1746 ]
  %1750 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1743 ], [ %1768, %1746 ]
  %1751 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1743 ], [ %1769, %1746 ]
  %1752 = sub i64 %1734, %1747
  %1753 = getelementptr inbounds i32, ptr %11, i64 %1752
  %1754 = getelementptr inbounds i32, ptr %1753, i64 -7
  %1755 = load <8 x i32>, ptr %1754, align 4, !tbaa !6
  %1756 = shufflevector <8 x i32> %1755, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1757 = getelementptr inbounds i32, ptr %1753, i64 -15
  %1758 = load <8 x i32>, ptr %1757, align 4, !tbaa !6
  %1759 = shufflevector <8 x i32> %1758, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1760 = getelementptr inbounds i32, ptr %1753, i64 -23
  %1761 = load <8 x i32>, ptr %1760, align 4, !tbaa !6
  %1762 = shufflevector <8 x i32> %1761, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1763 = getelementptr inbounds i32, ptr %1753, i64 -31
  %1764 = load <8 x i32>, ptr %1763, align 4, !tbaa !6
  %1765 = shufflevector <8 x i32> %1764, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1766 = mul <8 x i32> %1756, %1748
  %1767 = mul <8 x i32> %1759, %1749
  %1768 = mul <8 x i32> %1762, %1750
  %1769 = mul <8 x i32> %1765, %1751
  %1770 = add nuw i64 %1747, 32
  %1771 = icmp eq i64 %1770, %1744
  br i1 %1771, label %1772, label %1746, !llvm.loop !820

1772:                                             ; preds = %1746
  %1773 = mul <8 x i32> %1767, %1766
  %1774 = mul <8 x i32> %1768, %1773
  %1775 = mul <8 x i32> %1769, %1774
  %1776 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1775)
  %1777 = icmp eq i64 %1740, %1744
  br i1 %1777, label %1790, label %1778

1778:                                             ; preds = %1731, %1772
  %1779 = phi i64 [ %1734, %1731 ], [ %1745, %1772 ]
  %1780 = phi i32 [ 1, %1731 ], [ %1776, %1772 ]
  br label %1781

1781:                                             ; preds = %1778, %1781
  %1782 = phi i64 [ %1787, %1781 ], [ %1779, %1778 ]
  %1783 = phi i32 [ %1786, %1781 ], [ %1780, %1778 ]
  %1784 = getelementptr inbounds i32, ptr %11, i64 %1782
  %1785 = load i32, ptr %1784, align 4, !tbaa !6
  %1786 = mul nsw i32 %1785, %1783
  %1787 = add nsw i64 %1782, -1
  %1788 = trunc i64 %1782 to i32
  %1789 = icmp sgt i32 %1788, 0
  br i1 %1789, label %1781, label %1790, !llvm.loop !821

1790:                                             ; preds = %1781, %1772
  %1791 = phi i32 [ %1776, %1772 ], [ %1786, %1781 ]
  %1792 = and i64 %1741, 4294967295
  %1793 = getelementptr inbounds i32, ptr %6, i64 %1792
  %1794 = load i32, ptr %1793, align 4, !tbaa !6
  %1795 = mul nsw i32 %1794, %1791
  %1796 = add nsw i32 %1795, %1735
  %1797 = icmp sgt i64 %1733, 2
  %1798 = add nsw i64 %1734, -1
  %1799 = add i32 %1732, 1
  br i1 %1797, label %1731, label %1800, !llvm.loop !822

1800:                                             ; preds = %1790, %1728
  %1801 = phi i32 [ %1730, %1728 ], [ %1796, %1790 ]
  %1802 = icmp slt i32 %1801, %5
  br i1 %1802, label %1805, label %1803

1803:                                             ; preds = %1800
  %1804 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1263, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5535

1805:                                             ; preds = %1800
  %1806 = sext i32 %1801 to i64
  %1807 = getelementptr inbounds i64, ptr %1259, i64 %1806
  %1808 = load i64, ptr %1807, align 8, !tbaa !121
  %1809 = trunc i64 %1808 to i8
  %1810 = load i8, ptr %1261, align 1, !tbaa !12
  %1811 = icmp slt i8 %1810, %1809
  br i1 %1811, label %1812, label %1813

1812:                                             ; preds = %1805
  store i8 %1809, ptr %1261, align 1, !tbaa !12
  br label %1813

1813:                                             ; preds = %1812, %1805
  %1814 = add nuw nsw i32 %1729, 1
  br i1 %1579, label %1815, label %1865

1815:                                             ; preds = %1813
  %1816 = load i32, ptr %4, align 4, !tbaa !6
  %1817 = load i32, ptr %12, align 4, !tbaa !6
  %1818 = add nsw i32 %1817, -1
  %1819 = icmp slt i32 %1816, %1818
  br i1 %1819, label %1842, label %1820

1820:                                             ; preds = %1815
  %1821 = icmp eq i32 %1816, %1818
  br i1 %1821, label %1822, label %1858

1822:                                             ; preds = %1820
  store i32 0, ptr %4, align 4, !tbaa !6
  %1823 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1823, ptr %6, align 4, !tbaa !6
  br i1 %1584, label %1865, label %1824

1824:                                             ; preds = %1822, %1852
  %1825 = phi i64 [ %1856, %1852 ], [ 1, %1822 ]
  %1826 = getelementptr inbounds i32, ptr %4, i64 %1825
  %1827 = load i32, ptr %1826, align 4, !tbaa !6
  %1828 = getelementptr inbounds i32, ptr %12, i64 %1825
  %1829 = load i32, ptr %1828, align 4, !tbaa !6
  %1830 = add nsw i32 %1829, -1
  %1831 = icmp slt i32 %1827, %1830
  br i1 %1831, label %1832, label %1850

1832:                                             ; preds = %1824
  br i1 %1819, label %1842, label %1833

1833:                                             ; preds = %1832
  %1834 = shl i64 %1825, 32
  %1835 = add i64 %1834, -4294967296
  %1836 = ashr exact i64 %1835, 32
  %1837 = getelementptr inbounds i32, ptr %7, i64 %1836
  %1838 = load i32, ptr %1837, align 4, !tbaa !6
  %1839 = getelementptr inbounds i32, ptr %6, i64 %1825
  %1840 = load i32, ptr %1839, align 4, !tbaa !6
  %1841 = add nsw i32 %1840, %1838
  store i32 %1841, ptr %1839, align 4, !tbaa !6
  br label %1860

1842:                                             ; preds = %1815, %1832
  %1843 = phi i32 [ %1827, %1832 ], [ %1816, %1815 ]
  %1844 = phi ptr [ %1826, %1832 ], [ %4, %1815 ]
  %1845 = phi i64 [ %1825, %1832 ], [ 0, %1815 ]
  %1846 = add nsw i32 %1843, 1
  store i32 %1846, ptr %1844, align 4, !tbaa !6
  %1847 = getelementptr inbounds i32, ptr %7, i64 %1845
  %1848 = load i32, ptr %1847, align 4, !tbaa !6
  %1849 = getelementptr inbounds i32, ptr %6, i64 %1845
  br label %1860

1850:                                             ; preds = %1824
  %1851 = icmp eq i32 %1827, %1830
  br i1 %1851, label %1852, label %1858

1852:                                             ; preds = %1850
  store i32 0, ptr %1826, align 4, !tbaa !6
  %1853 = getelementptr inbounds i32, ptr %8, i64 %1825
  %1854 = load i32, ptr %1853, align 4, !tbaa !6
  %1855 = getelementptr inbounds i32, ptr %6, i64 %1825
  store i32 %1854, ptr %1855, align 4, !tbaa !6
  %1856 = add nuw nsw i64 %1825, 1
  %1857 = icmp eq i64 %1856, %1582
  br i1 %1857, label %1865, label %1824, !llvm.loop !823

1858:                                             ; preds = %1820, %1850
  %1859 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1263, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5535

1860:                                             ; preds = %1833, %1842
  %1861 = phi ptr [ %1849, %1842 ], [ %1826, %1833 ]
  %1862 = phi i32 [ %1848, %1842 ], [ 1, %1833 ]
  %1863 = load i32, ptr %1861, align 4, !tbaa !6
  %1864 = add nsw i32 %1863, %1862
  store i32 %1864, ptr %1861, align 4, !tbaa !6
  br label %1865

1865:                                             ; preds = %1852, %1860, %1822, %1813
  %1866 = icmp eq i32 %1814, %5
  br i1 %1866, label %5530, label %1728, !llvm.loop !824

1867:                                             ; preds = %1270
  %1868 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1263, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5530

1869:                                             ; preds = %18
  %1870 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1871 = load ptr, ptr %1870, align 8, !tbaa !10
  %1872 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1873 = load ptr, ptr %1872, align 8, !tbaa !10
  %1874 = load i64, ptr %1871, align 8, !tbaa !121
  %1875 = trunc i64 %1874 to i16
  store i16 %1875, ptr %1873, align 2, !tbaa !79
  %1876 = icmp eq i32 %13, 0
  br i1 %1876, label %5530, label %1877

1877:                                             ; preds = %1869
  switch i32 %1, label %2478 [
    i32 1, label %1878
    i32 0, label %2180
  ]

1878:                                             ; preds = %1877
  %1879 = getelementptr inbounds i32, ptr %3, i64 %19
  %1880 = load i32, ptr %1879, align 4, !tbaa !6
  %1881 = icmp eq i32 %1880, 0
  %1882 = icmp sgt i32 %5, 0
  br i1 %1881, label %1892, label %1883

1883:                                             ; preds = %1878
  br i1 %1882, label %1884, label %5530

1884:                                             ; preds = %1883
  %1885 = icmp sgt i32 %13, 1
  %1886 = icmp sgt i32 %13, 0
  %1887 = add i32 %13, -2
  %1888 = zext i32 %1887 to i64
  %1889 = zext i32 %13 to i64
  %1890 = add nuw i32 %5, 1
  %1891 = icmp eq i32 %13, 1
  br label %2040

1892:                                             ; preds = %1878
  br i1 %1882, label %1893, label %5530

1893:                                             ; preds = %1892
  %1894 = icmp sgt i32 %13, 1
  %1895 = icmp sgt i32 %13, 0
  %1896 = add i32 %13, -2
  %1897 = zext i32 %1896 to i64
  %1898 = zext i32 %13 to i64
  %1899 = add nuw i32 %5, 1
  %1900 = icmp eq i32 %13, 1
  br label %1901

1901:                                             ; preds = %1893, %2038
  %1902 = phi i16 [ %1875, %1893 ], [ %1988, %2038 ]
  %1903 = phi i32 [ 0, %1893 ], [ %1990, %2038 ]
  %1904 = phi double [ 0.000000e+00, %1893 ], [ %1989, %2038 ]
  %1905 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1894, label %1906, label %1975

1906:                                             ; preds = %1901, %1965
  %1907 = phi i32 [ %1974, %1965 ], [ 0, %1901 ]
  %1908 = phi i64 [ %1916, %1965 ], [ %1898, %1901 ]
  %1909 = phi i64 [ %1973, %1965 ], [ %1897, %1901 ]
  %1910 = phi i32 [ %1971, %1965 ], [ %1905, %1901 ]
  %1911 = sub i32 %1896, %1907
  %1912 = tail call i32 @llvm.smin.i32(i32 %1911, i32 0)
  %1913 = sub i32 %1911, %1912
  %1914 = zext i32 %1913 to i64
  %1915 = add nuw nsw i64 %1914, 1
  %1916 = add nsw i64 %1908, -1
  %1917 = icmp ult i32 %1913, 31
  br i1 %1917, label %1953, label %1918

1918:                                             ; preds = %1906
  %1919 = and i64 %1915, 8589934560
  %1920 = sub i64 %1909, %1919
  br label %1921

1921:                                             ; preds = %1921, %1918
  %1922 = phi i64 [ 0, %1918 ], [ %1945, %1921 ]
  %1923 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1918 ], [ %1941, %1921 ]
  %1924 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1918 ], [ %1942, %1921 ]
  %1925 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1918 ], [ %1943, %1921 ]
  %1926 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1918 ], [ %1944, %1921 ]
  %1927 = sub i64 %1909, %1922
  %1928 = getelementptr inbounds i32, ptr %9, i64 %1927
  %1929 = getelementptr inbounds i32, ptr %1928, i64 -7
  %1930 = load <8 x i32>, ptr %1929, align 4, !tbaa !6
  %1931 = shufflevector <8 x i32> %1930, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1932 = getelementptr inbounds i32, ptr %1928, i64 -15
  %1933 = load <8 x i32>, ptr %1932, align 4, !tbaa !6
  %1934 = shufflevector <8 x i32> %1933, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1935 = getelementptr inbounds i32, ptr %1928, i64 -23
  %1936 = load <8 x i32>, ptr %1935, align 4, !tbaa !6
  %1937 = shufflevector <8 x i32> %1936, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1938 = getelementptr inbounds i32, ptr %1928, i64 -31
  %1939 = load <8 x i32>, ptr %1938, align 4, !tbaa !6
  %1940 = shufflevector <8 x i32> %1939, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1941 = mul <8 x i32> %1931, %1923
  %1942 = mul <8 x i32> %1934, %1924
  %1943 = mul <8 x i32> %1937, %1925
  %1944 = mul <8 x i32> %1940, %1926
  %1945 = add nuw i64 %1922, 32
  %1946 = icmp eq i64 %1945, %1919
  br i1 %1946, label %1947, label %1921, !llvm.loop !825

1947:                                             ; preds = %1921
  %1948 = mul <8 x i32> %1942, %1941
  %1949 = mul <8 x i32> %1943, %1948
  %1950 = mul <8 x i32> %1944, %1949
  %1951 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1950)
  %1952 = icmp eq i64 %1915, %1919
  br i1 %1952, label %1965, label %1953

1953:                                             ; preds = %1906, %1947
  %1954 = phi i64 [ %1909, %1906 ], [ %1920, %1947 ]
  %1955 = phi i32 [ 1, %1906 ], [ %1951, %1947 ]
  br label %1956

1956:                                             ; preds = %1953, %1956
  %1957 = phi i64 [ %1962, %1956 ], [ %1954, %1953 ]
  %1958 = phi i32 [ %1961, %1956 ], [ %1955, %1953 ]
  %1959 = getelementptr inbounds i32, ptr %9, i64 %1957
  %1960 = load i32, ptr %1959, align 4, !tbaa !6
  %1961 = mul nsw i32 %1960, %1958
  %1962 = add nsw i64 %1957, -1
  %1963 = trunc i64 %1957 to i32
  %1964 = icmp sgt i32 %1963, 0
  br i1 %1964, label %1956, label %1965, !llvm.loop !826

1965:                                             ; preds = %1956, %1947
  %1966 = phi i32 [ %1951, %1947 ], [ %1961, %1956 ]
  %1967 = and i64 %1916, 4294967295
  %1968 = getelementptr inbounds i32, ptr %6, i64 %1967
  %1969 = load i32, ptr %1968, align 4, !tbaa !6
  %1970 = mul nsw i32 %1969, %1966
  %1971 = add nsw i32 %1970, %1910
  %1972 = icmp sgt i64 %1908, 2
  %1973 = add nsw i64 %1909, -1
  %1974 = add i32 %1907, 1
  br i1 %1972, label %1906, label %1975, !llvm.loop !827

1975:                                             ; preds = %1965, %1901
  %1976 = phi i32 [ %1905, %1901 ], [ %1971, %1965 ]
  %1977 = sext i32 %1976 to i64
  %1978 = getelementptr inbounds double, ptr %2, i64 %1977
  %1979 = load double, ptr %1978, align 8, !tbaa !19
  %1980 = getelementptr inbounds i64, ptr %1871, i64 %1977
  %1981 = load i64, ptr %1980, align 8, !tbaa !121
  %1982 = trunc i64 %1981 to i16
  %1983 = fcmp fast one double %1979, 0.000000e+00
  %1984 = icmp slt i16 %1902, %1982
  %1985 = select i1 %1983, i1 %1984, i1 false
  br i1 %1985, label %1986, label %1987

1986:                                             ; preds = %1975
  store i16 %1982, ptr %1873, align 2, !tbaa !79
  br label %1987

1987:                                             ; preds = %1986, %1975
  %1988 = phi i16 [ %1982, %1986 ], [ %1902, %1975 ]
  %1989 = fadd fast double %1979, %1904
  %1990 = add nuw nsw i32 %1903, 1
  br i1 %1895, label %1991, label %2038

1991:                                             ; preds = %1987
  %1992 = load i32, ptr %4, align 4, !tbaa !6
  %1993 = load i32, ptr %12, align 4, !tbaa !6
  %1994 = add nsw i32 %1993, -1
  %1995 = icmp slt i32 %1992, %1994
  br i1 %1995, label %2015, label %1996

1996:                                             ; preds = %1991
  %1997 = icmp eq i32 %1992, %1994
  br i1 %1997, label %1998, label %2031

1998:                                             ; preds = %1996
  store i32 0, ptr %4, align 4, !tbaa !6
  %1999 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1999, ptr %6, align 4, !tbaa !6
  br i1 %1900, label %2038, label %2000

2000:                                             ; preds = %1998, %2025
  %2001 = phi i64 [ %2029, %2025 ], [ 1, %1998 ]
  %2002 = getelementptr inbounds i32, ptr %4, i64 %2001
  %2003 = load i32, ptr %2002, align 4, !tbaa !6
  %2004 = getelementptr inbounds i32, ptr %12, i64 %2001
  %2005 = load i32, ptr %2004, align 4, !tbaa !6
  %2006 = add nsw i32 %2005, -1
  %2007 = icmp slt i32 %2003, %2006
  br i1 %2007, label %2008, label %2023

2008:                                             ; preds = %2000
  br i1 %1995, label %2015, label %2009

2009:                                             ; preds = %2008
  %2010 = getelementptr inbounds i32, ptr %7, i64 %2001
  %2011 = load i32, ptr %2010, align 4, !tbaa !6
  %2012 = getelementptr inbounds i32, ptr %6, i64 %2001
  %2013 = load i32, ptr %2012, align 4, !tbaa !6
  %2014 = add nsw i32 %2013, %2011
  store i32 %2014, ptr %2012, align 4, !tbaa !6
  br label %2033

2015:                                             ; preds = %1991, %2008
  %2016 = phi i32 [ %2003, %2008 ], [ %1992, %1991 ]
  %2017 = phi ptr [ %2002, %2008 ], [ %4, %1991 ]
  %2018 = phi i64 [ %2001, %2008 ], [ 0, %1991 ]
  %2019 = add nsw i32 %2016, 1
  store i32 %2019, ptr %2017, align 4, !tbaa !6
  %2020 = getelementptr inbounds i32, ptr %7, i64 %2018
  %2021 = load i32, ptr %2020, align 4, !tbaa !6
  %2022 = getelementptr inbounds i32, ptr %6, i64 %2018
  br label %2033

2023:                                             ; preds = %2000
  %2024 = icmp eq i32 %2003, %2006
  br i1 %2024, label %2025, label %2031

2025:                                             ; preds = %2023
  store i32 0, ptr %2002, align 4, !tbaa !6
  %2026 = getelementptr inbounds i32, ptr %8, i64 %2001
  %2027 = load i32, ptr %2026, align 4, !tbaa !6
  %2028 = getelementptr inbounds i32, ptr %6, i64 %2001
  store i32 %2027, ptr %2028, align 4, !tbaa !6
  %2029 = add nuw nsw i64 %2001, 1
  %2030 = icmp eq i64 %2029, %1898
  br i1 %2030, label %2038, label %2000, !llvm.loop !828

2031:                                             ; preds = %1996, %2023
  %2032 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1268, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5535

2033:                                             ; preds = %2009, %2015
  %2034 = phi ptr [ %2022, %2015 ], [ %2002, %2009 ]
  %2035 = phi i32 [ %2021, %2015 ], [ 1, %2009 ]
  %2036 = load i32, ptr %2034, align 4, !tbaa !6
  %2037 = add nsw i32 %2036, %2035
  store i32 %2037, ptr %2034, align 4, !tbaa !6
  br label %2038

2038:                                             ; preds = %2025, %2033, %1998, %1987
  %2039 = icmp eq i32 %1990, %5
  br i1 %2039, label %5530, label %1901, !llvm.loop !829

2040:                                             ; preds = %1884, %2178
  %2041 = phi i16 [ %1875, %1884 ], [ %2126, %2178 ]
  %2042 = phi i32 [ 0, %1884 ], [ %2127, %2178 ]
  %2043 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1885, label %2044, label %2113

2044:                                             ; preds = %2040, %2103
  %2045 = phi i32 [ %2112, %2103 ], [ 0, %2040 ]
  %2046 = phi i64 [ %2054, %2103 ], [ %1889, %2040 ]
  %2047 = phi i64 [ %2111, %2103 ], [ %1888, %2040 ]
  %2048 = phi i32 [ %2109, %2103 ], [ %2043, %2040 ]
  %2049 = sub i32 %1887, %2045
  %2050 = tail call i32 @llvm.smin.i32(i32 %2049, i32 0)
  %2051 = sub i32 %2049, %2050
  %2052 = zext i32 %2051 to i64
  %2053 = add nuw nsw i64 %2052, 1
  %2054 = add nsw i64 %2046, -1
  %2055 = icmp ult i32 %2051, 31
  br i1 %2055, label %2091, label %2056

2056:                                             ; preds = %2044
  %2057 = and i64 %2053, 8589934560
  %2058 = sub i64 %2047, %2057
  br label %2059

2059:                                             ; preds = %2059, %2056
  %2060 = phi i64 [ 0, %2056 ], [ %2083, %2059 ]
  %2061 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2056 ], [ %2079, %2059 ]
  %2062 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2056 ], [ %2080, %2059 ]
  %2063 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2056 ], [ %2081, %2059 ]
  %2064 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2056 ], [ %2082, %2059 ]
  %2065 = sub i64 %2047, %2060
  %2066 = getelementptr inbounds i32, ptr %11, i64 %2065
  %2067 = getelementptr inbounds i32, ptr %2066, i64 -7
  %2068 = load <8 x i32>, ptr %2067, align 4, !tbaa !6
  %2069 = shufflevector <8 x i32> %2068, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2070 = getelementptr inbounds i32, ptr %2066, i64 -15
  %2071 = load <8 x i32>, ptr %2070, align 4, !tbaa !6
  %2072 = shufflevector <8 x i32> %2071, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2073 = getelementptr inbounds i32, ptr %2066, i64 -23
  %2074 = load <8 x i32>, ptr %2073, align 4, !tbaa !6
  %2075 = shufflevector <8 x i32> %2074, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2076 = getelementptr inbounds i32, ptr %2066, i64 -31
  %2077 = load <8 x i32>, ptr %2076, align 4, !tbaa !6
  %2078 = shufflevector <8 x i32> %2077, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2079 = mul <8 x i32> %2069, %2061
  %2080 = mul <8 x i32> %2072, %2062
  %2081 = mul <8 x i32> %2075, %2063
  %2082 = mul <8 x i32> %2078, %2064
  %2083 = add nuw i64 %2060, 32
  %2084 = icmp eq i64 %2083, %2057
  br i1 %2084, label %2085, label %2059, !llvm.loop !830

2085:                                             ; preds = %2059
  %2086 = mul <8 x i32> %2080, %2079
  %2087 = mul <8 x i32> %2081, %2086
  %2088 = mul <8 x i32> %2082, %2087
  %2089 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2088)
  %2090 = icmp eq i64 %2053, %2057
  br i1 %2090, label %2103, label %2091

2091:                                             ; preds = %2044, %2085
  %2092 = phi i64 [ %2047, %2044 ], [ %2058, %2085 ]
  %2093 = phi i32 [ 1, %2044 ], [ %2089, %2085 ]
  br label %2094

2094:                                             ; preds = %2091, %2094
  %2095 = phi i64 [ %2100, %2094 ], [ %2092, %2091 ]
  %2096 = phi i32 [ %2099, %2094 ], [ %2093, %2091 ]
  %2097 = getelementptr inbounds i32, ptr %11, i64 %2095
  %2098 = load i32, ptr %2097, align 4, !tbaa !6
  %2099 = mul nsw i32 %2098, %2096
  %2100 = add nsw i64 %2095, -1
  %2101 = trunc i64 %2095 to i32
  %2102 = icmp sgt i32 %2101, 0
  br i1 %2102, label %2094, label %2103, !llvm.loop !831

2103:                                             ; preds = %2094, %2085
  %2104 = phi i32 [ %2089, %2085 ], [ %2099, %2094 ]
  %2105 = and i64 %2054, 4294967295
  %2106 = getelementptr inbounds i32, ptr %6, i64 %2105
  %2107 = load i32, ptr %2106, align 4, !tbaa !6
  %2108 = mul nsw i32 %2107, %2104
  %2109 = add nsw i32 %2108, %2048
  %2110 = icmp sgt i64 %2046, 2
  %2111 = add nsw i64 %2047, -1
  %2112 = add i32 %2045, 1
  br i1 %2110, label %2044, label %2113, !llvm.loop !832

2113:                                             ; preds = %2103, %2040
  %2114 = phi i32 [ %2043, %2040 ], [ %2109, %2103 ]
  %2115 = icmp slt i32 %2114, %5
  br i1 %2115, label %2118, label %2116

2116:                                             ; preds = %2113
  %2117 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1268, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5535

2118:                                             ; preds = %2113
  %2119 = sext i32 %2114 to i64
  %2120 = getelementptr inbounds i64, ptr %1871, i64 %2119
  %2121 = load i64, ptr %2120, align 8, !tbaa !121
  %2122 = trunc i64 %2121 to i16
  %2123 = icmp slt i16 %2041, %2122
  br i1 %2123, label %2124, label %2125

2124:                                             ; preds = %2118
  store i16 %2122, ptr %1873, align 2, !tbaa !79
  br label %2125

2125:                                             ; preds = %2118, %2124
  %2126 = phi i16 [ %2041, %2118 ], [ %2122, %2124 ]
  %2127 = add nuw nsw i32 %2042, 1
  br i1 %1886, label %2128, label %2178

2128:                                             ; preds = %2125
  %2129 = load i32, ptr %4, align 4, !tbaa !6
  %2130 = load i32, ptr %12, align 4, !tbaa !6
  %2131 = add nsw i32 %2130, -1
  %2132 = icmp slt i32 %2129, %2131
  br i1 %2132, label %2155, label %2133

2133:                                             ; preds = %2128
  %2134 = icmp eq i32 %2129, %2131
  br i1 %2134, label %2135, label %2171

2135:                                             ; preds = %2133
  store i32 0, ptr %4, align 4, !tbaa !6
  %2136 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2136, ptr %6, align 4, !tbaa !6
  br i1 %1891, label %2178, label %2137

2137:                                             ; preds = %2135, %2165
  %2138 = phi i64 [ %2169, %2165 ], [ 1, %2135 ]
  %2139 = getelementptr inbounds i32, ptr %4, i64 %2138
  %2140 = load i32, ptr %2139, align 4, !tbaa !6
  %2141 = getelementptr inbounds i32, ptr %12, i64 %2138
  %2142 = load i32, ptr %2141, align 4, !tbaa !6
  %2143 = add nsw i32 %2142, -1
  %2144 = icmp slt i32 %2140, %2143
  br i1 %2144, label %2145, label %2163

2145:                                             ; preds = %2137
  br i1 %2132, label %2155, label %2146

2146:                                             ; preds = %2145
  %2147 = shl i64 %2138, 32
  %2148 = add i64 %2147, -4294967296
  %2149 = ashr exact i64 %2148, 32
  %2150 = getelementptr inbounds i32, ptr %7, i64 %2149
  %2151 = load i32, ptr %2150, align 4, !tbaa !6
  %2152 = getelementptr inbounds i32, ptr %6, i64 %2138
  %2153 = load i32, ptr %2152, align 4, !tbaa !6
  %2154 = add nsw i32 %2153, %2151
  store i32 %2154, ptr %2152, align 4, !tbaa !6
  br label %2173

2155:                                             ; preds = %2128, %2145
  %2156 = phi i32 [ %2140, %2145 ], [ %2129, %2128 ]
  %2157 = phi ptr [ %2139, %2145 ], [ %4, %2128 ]
  %2158 = phi i64 [ %2138, %2145 ], [ 0, %2128 ]
  %2159 = add nsw i32 %2156, 1
  store i32 %2159, ptr %2157, align 4, !tbaa !6
  %2160 = getelementptr inbounds i32, ptr %7, i64 %2158
  %2161 = load i32, ptr %2160, align 4, !tbaa !6
  %2162 = getelementptr inbounds i32, ptr %6, i64 %2158
  br label %2173

2163:                                             ; preds = %2137
  %2164 = icmp eq i32 %2140, %2143
  br i1 %2164, label %2165, label %2171

2165:                                             ; preds = %2163
  store i32 0, ptr %2139, align 4, !tbaa !6
  %2166 = getelementptr inbounds i32, ptr %8, i64 %2138
  %2167 = load i32, ptr %2166, align 4, !tbaa !6
  %2168 = getelementptr inbounds i32, ptr %6, i64 %2138
  store i32 %2167, ptr %2168, align 4, !tbaa !6
  %2169 = add nuw nsw i64 %2138, 1
  %2170 = icmp eq i64 %2169, %1889
  br i1 %2170, label %2178, label %2137, !llvm.loop !833

2171:                                             ; preds = %2133, %2163
  %2172 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1268, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5535

2173:                                             ; preds = %2146, %2155
  %2174 = phi ptr [ %2162, %2155 ], [ %2139, %2146 ]
  %2175 = phi i32 [ %2161, %2155 ], [ 1, %2146 ]
  %2176 = load i32, ptr %2174, align 4, !tbaa !6
  %2177 = add nsw i32 %2176, %2175
  store i32 %2177, ptr %2174, align 4, !tbaa !6
  br label %2178

2178:                                             ; preds = %2165, %2173, %2135, %2125
  %2179 = icmp eq i32 %2127, %5
  br i1 %2179, label %5530, label %2040, !llvm.loop !834

2180:                                             ; preds = %1877
  %2181 = getelementptr inbounds i32, ptr %3, i64 %19
  %2182 = load i32, ptr %2181, align 4, !tbaa !6
  %2183 = icmp eq i32 %2182, 0
  %2184 = icmp sgt i32 %5, 0
  br i1 %2183, label %2194, label %2185

2185:                                             ; preds = %2180
  br i1 %2184, label %2186, label %5530

2186:                                             ; preds = %2185
  %2187 = icmp sgt i32 %13, 1
  %2188 = icmp sgt i32 %13, 0
  %2189 = add i32 %13, -2
  %2190 = zext i32 %2189 to i64
  %2191 = zext i32 %13 to i64
  %2192 = add nuw i32 %5, 1
  %2193 = icmp eq i32 %13, 1
  br label %2338

2194:                                             ; preds = %2180
  br i1 %2184, label %2195, label %5530

2195:                                             ; preds = %2194
  %2196 = icmp sgt i32 %13, 1
  %2197 = icmp sgt i32 %13, 0
  %2198 = add i32 %13, -2
  %2199 = zext i32 %2198 to i64
  %2200 = zext i32 %13 to i64
  %2201 = add nuw i32 %5, 1
  %2202 = icmp eq i32 %13, 1
  br label %2203

2203:                                             ; preds = %2195, %2336
  %2204 = phi i16 [ %1875, %2195 ], [ %2286, %2336 ]
  %2205 = phi i32 [ 0, %2195 ], [ %2288, %2336 ]
  %2206 = phi double [ 0.000000e+00, %2195 ], [ %2287, %2336 ]
  %2207 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2196, label %2208, label %2277

2208:                                             ; preds = %2203, %2267
  %2209 = phi i32 [ %2276, %2267 ], [ 0, %2203 ]
  %2210 = phi i64 [ %2218, %2267 ], [ %2200, %2203 ]
  %2211 = phi i64 [ %2275, %2267 ], [ %2199, %2203 ]
  %2212 = phi i32 [ %2273, %2267 ], [ %2207, %2203 ]
  %2213 = sub i32 %2198, %2209
  %2214 = tail call i32 @llvm.smin.i32(i32 %2213, i32 0)
  %2215 = sub i32 %2213, %2214
  %2216 = zext i32 %2215 to i64
  %2217 = add nuw nsw i64 %2216, 1
  %2218 = add nsw i64 %2210, -1
  %2219 = icmp ult i32 %2215, 31
  br i1 %2219, label %2255, label %2220

2220:                                             ; preds = %2208
  %2221 = and i64 %2217, 8589934560
  %2222 = sub i64 %2211, %2221
  br label %2223

2223:                                             ; preds = %2223, %2220
  %2224 = phi i64 [ 0, %2220 ], [ %2247, %2223 ]
  %2225 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2220 ], [ %2243, %2223 ]
  %2226 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2220 ], [ %2244, %2223 ]
  %2227 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2220 ], [ %2245, %2223 ]
  %2228 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2220 ], [ %2246, %2223 ]
  %2229 = sub i64 %2211, %2224
  %2230 = getelementptr inbounds i32, ptr %9, i64 %2229
  %2231 = getelementptr inbounds i32, ptr %2230, i64 -7
  %2232 = load <8 x i32>, ptr %2231, align 4, !tbaa !6
  %2233 = shufflevector <8 x i32> %2232, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2234 = getelementptr inbounds i32, ptr %2230, i64 -15
  %2235 = load <8 x i32>, ptr %2234, align 4, !tbaa !6
  %2236 = shufflevector <8 x i32> %2235, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2237 = getelementptr inbounds i32, ptr %2230, i64 -23
  %2238 = load <8 x i32>, ptr %2237, align 4, !tbaa !6
  %2239 = shufflevector <8 x i32> %2238, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2240 = getelementptr inbounds i32, ptr %2230, i64 -31
  %2241 = load <8 x i32>, ptr %2240, align 4, !tbaa !6
  %2242 = shufflevector <8 x i32> %2241, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2243 = mul <8 x i32> %2233, %2225
  %2244 = mul <8 x i32> %2236, %2226
  %2245 = mul <8 x i32> %2239, %2227
  %2246 = mul <8 x i32> %2242, %2228
  %2247 = add nuw i64 %2224, 32
  %2248 = icmp eq i64 %2247, %2221
  br i1 %2248, label %2249, label %2223, !llvm.loop !835

2249:                                             ; preds = %2223
  %2250 = mul <8 x i32> %2244, %2243
  %2251 = mul <8 x i32> %2245, %2250
  %2252 = mul <8 x i32> %2246, %2251
  %2253 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2252)
  %2254 = icmp eq i64 %2217, %2221
  br i1 %2254, label %2267, label %2255

2255:                                             ; preds = %2208, %2249
  %2256 = phi i64 [ %2211, %2208 ], [ %2222, %2249 ]
  %2257 = phi i32 [ 1, %2208 ], [ %2253, %2249 ]
  br label %2258

2258:                                             ; preds = %2255, %2258
  %2259 = phi i64 [ %2264, %2258 ], [ %2256, %2255 ]
  %2260 = phi i32 [ %2263, %2258 ], [ %2257, %2255 ]
  %2261 = getelementptr inbounds i32, ptr %9, i64 %2259
  %2262 = load i32, ptr %2261, align 4, !tbaa !6
  %2263 = mul nsw i32 %2262, %2260
  %2264 = add nsw i64 %2259, -1
  %2265 = trunc i64 %2259 to i32
  %2266 = icmp sgt i32 %2265, 0
  br i1 %2266, label %2258, label %2267, !llvm.loop !836

2267:                                             ; preds = %2258, %2249
  %2268 = phi i32 [ %2253, %2249 ], [ %2263, %2258 ]
  %2269 = and i64 %2218, 4294967295
  %2270 = getelementptr inbounds i32, ptr %6, i64 %2269
  %2271 = load i32, ptr %2270, align 4, !tbaa !6
  %2272 = mul nsw i32 %2271, %2268
  %2273 = add nsw i32 %2272, %2212
  %2274 = icmp sgt i64 %2210, 2
  %2275 = add nsw i64 %2211, -1
  %2276 = add i32 %2209, 1
  br i1 %2274, label %2208, label %2277, !llvm.loop !837

2277:                                             ; preds = %2267, %2203
  %2278 = phi i32 [ %2207, %2203 ], [ %2273, %2267 ]
  %2279 = sext i32 %2278 to i64
  %2280 = getelementptr inbounds i64, ptr %1871, i64 %2279
  %2281 = load i64, ptr %2280, align 8, !tbaa !121
  %2282 = trunc i64 %2281 to i16
  %2283 = icmp slt i16 %2204, %2282
  br i1 %2283, label %2284, label %2285

2284:                                             ; preds = %2277
  store i16 %2282, ptr %1873, align 2, !tbaa !79
  br label %2285

2285:                                             ; preds = %2284, %2277
  %2286 = phi i16 [ %2282, %2284 ], [ %2204, %2277 ]
  %2287 = fadd fast double %2206, 1.000000e+00
  %2288 = add nuw nsw i32 %2205, 1
  br i1 %2197, label %2289, label %2336

2289:                                             ; preds = %2285
  %2290 = load i32, ptr %4, align 4, !tbaa !6
  %2291 = load i32, ptr %12, align 4, !tbaa !6
  %2292 = add nsw i32 %2291, -1
  %2293 = icmp slt i32 %2290, %2292
  br i1 %2293, label %2313, label %2294

2294:                                             ; preds = %2289
  %2295 = icmp eq i32 %2290, %2292
  br i1 %2295, label %2296, label %2329

2296:                                             ; preds = %2294
  store i32 0, ptr %4, align 4, !tbaa !6
  %2297 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2297, ptr %6, align 4, !tbaa !6
  br i1 %2202, label %2336, label %2298

2298:                                             ; preds = %2296, %2323
  %2299 = phi i64 [ %2327, %2323 ], [ 1, %2296 ]
  %2300 = getelementptr inbounds i32, ptr %4, i64 %2299
  %2301 = load i32, ptr %2300, align 4, !tbaa !6
  %2302 = getelementptr inbounds i32, ptr %12, i64 %2299
  %2303 = load i32, ptr %2302, align 4, !tbaa !6
  %2304 = add nsw i32 %2303, -1
  %2305 = icmp slt i32 %2301, %2304
  br i1 %2305, label %2306, label %2321

2306:                                             ; preds = %2298
  br i1 %2293, label %2313, label %2307

2307:                                             ; preds = %2306
  %2308 = getelementptr inbounds i32, ptr %7, i64 %2299
  %2309 = load i32, ptr %2308, align 4, !tbaa !6
  %2310 = getelementptr inbounds i32, ptr %6, i64 %2299
  %2311 = load i32, ptr %2310, align 4, !tbaa !6
  %2312 = add nsw i32 %2311, %2309
  store i32 %2312, ptr %2310, align 4, !tbaa !6
  br label %2331

2313:                                             ; preds = %2289, %2306
  %2314 = phi i32 [ %2301, %2306 ], [ %2290, %2289 ]
  %2315 = phi ptr [ %2300, %2306 ], [ %4, %2289 ]
  %2316 = phi i64 [ %2299, %2306 ], [ 0, %2289 ]
  %2317 = add nsw i32 %2314, 1
  store i32 %2317, ptr %2315, align 4, !tbaa !6
  %2318 = getelementptr inbounds i32, ptr %7, i64 %2316
  %2319 = load i32, ptr %2318, align 4, !tbaa !6
  %2320 = getelementptr inbounds i32, ptr %6, i64 %2316
  br label %2331

2321:                                             ; preds = %2298
  %2322 = icmp eq i32 %2301, %2304
  br i1 %2322, label %2323, label %2329

2323:                                             ; preds = %2321
  store i32 0, ptr %2300, align 4, !tbaa !6
  %2324 = getelementptr inbounds i32, ptr %8, i64 %2299
  %2325 = load i32, ptr %2324, align 4, !tbaa !6
  %2326 = getelementptr inbounds i32, ptr %6, i64 %2299
  store i32 %2325, ptr %2326, align 4, !tbaa !6
  %2327 = add nuw nsw i64 %2299, 1
  %2328 = icmp eq i64 %2327, %2200
  br i1 %2328, label %2336, label %2298, !llvm.loop !838

2329:                                             ; preds = %2294, %2321
  %2330 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1268, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5535

2331:                                             ; preds = %2307, %2313
  %2332 = phi ptr [ %2320, %2313 ], [ %2300, %2307 ]
  %2333 = phi i32 [ %2319, %2313 ], [ 1, %2307 ]
  %2334 = load i32, ptr %2332, align 4, !tbaa !6
  %2335 = add nsw i32 %2334, %2333
  store i32 %2335, ptr %2332, align 4, !tbaa !6
  br label %2336

2336:                                             ; preds = %2323, %2331, %2296, %2285
  %2337 = icmp eq i32 %2288, %5
  br i1 %2337, label %5530, label %2203, !llvm.loop !839

2338:                                             ; preds = %2186, %2476
  %2339 = phi i16 [ %1875, %2186 ], [ %2424, %2476 ]
  %2340 = phi i32 [ 0, %2186 ], [ %2425, %2476 ]
  %2341 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2187, label %2342, label %2411

2342:                                             ; preds = %2338, %2401
  %2343 = phi i32 [ %2410, %2401 ], [ 0, %2338 ]
  %2344 = phi i64 [ %2352, %2401 ], [ %2191, %2338 ]
  %2345 = phi i64 [ %2409, %2401 ], [ %2190, %2338 ]
  %2346 = phi i32 [ %2407, %2401 ], [ %2341, %2338 ]
  %2347 = sub i32 %2189, %2343
  %2348 = tail call i32 @llvm.smin.i32(i32 %2347, i32 0)
  %2349 = sub i32 %2347, %2348
  %2350 = zext i32 %2349 to i64
  %2351 = add nuw nsw i64 %2350, 1
  %2352 = add nsw i64 %2344, -1
  %2353 = icmp ult i32 %2349, 31
  br i1 %2353, label %2389, label %2354

2354:                                             ; preds = %2342
  %2355 = and i64 %2351, 8589934560
  %2356 = sub i64 %2345, %2355
  br label %2357

2357:                                             ; preds = %2357, %2354
  %2358 = phi i64 [ 0, %2354 ], [ %2381, %2357 ]
  %2359 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2354 ], [ %2377, %2357 ]
  %2360 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2354 ], [ %2378, %2357 ]
  %2361 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2354 ], [ %2379, %2357 ]
  %2362 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2354 ], [ %2380, %2357 ]
  %2363 = sub i64 %2345, %2358
  %2364 = getelementptr inbounds i32, ptr %11, i64 %2363
  %2365 = getelementptr inbounds i32, ptr %2364, i64 -7
  %2366 = load <8 x i32>, ptr %2365, align 4, !tbaa !6
  %2367 = shufflevector <8 x i32> %2366, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2368 = getelementptr inbounds i32, ptr %2364, i64 -15
  %2369 = load <8 x i32>, ptr %2368, align 4, !tbaa !6
  %2370 = shufflevector <8 x i32> %2369, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2371 = getelementptr inbounds i32, ptr %2364, i64 -23
  %2372 = load <8 x i32>, ptr %2371, align 4, !tbaa !6
  %2373 = shufflevector <8 x i32> %2372, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2374 = getelementptr inbounds i32, ptr %2364, i64 -31
  %2375 = load <8 x i32>, ptr %2374, align 4, !tbaa !6
  %2376 = shufflevector <8 x i32> %2375, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2377 = mul <8 x i32> %2367, %2359
  %2378 = mul <8 x i32> %2370, %2360
  %2379 = mul <8 x i32> %2373, %2361
  %2380 = mul <8 x i32> %2376, %2362
  %2381 = add nuw i64 %2358, 32
  %2382 = icmp eq i64 %2381, %2355
  br i1 %2382, label %2383, label %2357, !llvm.loop !840

2383:                                             ; preds = %2357
  %2384 = mul <8 x i32> %2378, %2377
  %2385 = mul <8 x i32> %2379, %2384
  %2386 = mul <8 x i32> %2380, %2385
  %2387 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2386)
  %2388 = icmp eq i64 %2351, %2355
  br i1 %2388, label %2401, label %2389

2389:                                             ; preds = %2342, %2383
  %2390 = phi i64 [ %2345, %2342 ], [ %2356, %2383 ]
  %2391 = phi i32 [ 1, %2342 ], [ %2387, %2383 ]
  br label %2392

2392:                                             ; preds = %2389, %2392
  %2393 = phi i64 [ %2398, %2392 ], [ %2390, %2389 ]
  %2394 = phi i32 [ %2397, %2392 ], [ %2391, %2389 ]
  %2395 = getelementptr inbounds i32, ptr %11, i64 %2393
  %2396 = load i32, ptr %2395, align 4, !tbaa !6
  %2397 = mul nsw i32 %2396, %2394
  %2398 = add nsw i64 %2393, -1
  %2399 = trunc i64 %2393 to i32
  %2400 = icmp sgt i32 %2399, 0
  br i1 %2400, label %2392, label %2401, !llvm.loop !841

2401:                                             ; preds = %2392, %2383
  %2402 = phi i32 [ %2387, %2383 ], [ %2397, %2392 ]
  %2403 = and i64 %2352, 4294967295
  %2404 = getelementptr inbounds i32, ptr %6, i64 %2403
  %2405 = load i32, ptr %2404, align 4, !tbaa !6
  %2406 = mul nsw i32 %2405, %2402
  %2407 = add nsw i32 %2406, %2346
  %2408 = icmp sgt i64 %2344, 2
  %2409 = add nsw i64 %2345, -1
  %2410 = add i32 %2343, 1
  br i1 %2408, label %2342, label %2411, !llvm.loop !842

2411:                                             ; preds = %2401, %2338
  %2412 = phi i32 [ %2341, %2338 ], [ %2407, %2401 ]
  %2413 = icmp slt i32 %2412, %5
  br i1 %2413, label %2416, label %2414

2414:                                             ; preds = %2411
  %2415 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1268, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5535

2416:                                             ; preds = %2411
  %2417 = sext i32 %2412 to i64
  %2418 = getelementptr inbounds i64, ptr %1871, i64 %2417
  %2419 = load i64, ptr %2418, align 8, !tbaa !121
  %2420 = trunc i64 %2419 to i16
  %2421 = icmp slt i16 %2339, %2420
  br i1 %2421, label %2422, label %2423

2422:                                             ; preds = %2416
  store i16 %2420, ptr %1873, align 2, !tbaa !79
  br label %2423

2423:                                             ; preds = %2422, %2416
  %2424 = phi i16 [ %2420, %2422 ], [ %2339, %2416 ]
  %2425 = add nuw nsw i32 %2340, 1
  br i1 %2188, label %2426, label %2476

2426:                                             ; preds = %2423
  %2427 = load i32, ptr %4, align 4, !tbaa !6
  %2428 = load i32, ptr %12, align 4, !tbaa !6
  %2429 = add nsw i32 %2428, -1
  %2430 = icmp slt i32 %2427, %2429
  br i1 %2430, label %2453, label %2431

2431:                                             ; preds = %2426
  %2432 = icmp eq i32 %2427, %2429
  br i1 %2432, label %2433, label %2469

2433:                                             ; preds = %2431
  store i32 0, ptr %4, align 4, !tbaa !6
  %2434 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2434, ptr %6, align 4, !tbaa !6
  br i1 %2193, label %2476, label %2435

2435:                                             ; preds = %2433, %2463
  %2436 = phi i64 [ %2467, %2463 ], [ 1, %2433 ]
  %2437 = getelementptr inbounds i32, ptr %4, i64 %2436
  %2438 = load i32, ptr %2437, align 4, !tbaa !6
  %2439 = getelementptr inbounds i32, ptr %12, i64 %2436
  %2440 = load i32, ptr %2439, align 4, !tbaa !6
  %2441 = add nsw i32 %2440, -1
  %2442 = icmp slt i32 %2438, %2441
  br i1 %2442, label %2443, label %2461

2443:                                             ; preds = %2435
  br i1 %2430, label %2453, label %2444

2444:                                             ; preds = %2443
  %2445 = shl i64 %2436, 32
  %2446 = add i64 %2445, -4294967296
  %2447 = ashr exact i64 %2446, 32
  %2448 = getelementptr inbounds i32, ptr %7, i64 %2447
  %2449 = load i32, ptr %2448, align 4, !tbaa !6
  %2450 = getelementptr inbounds i32, ptr %6, i64 %2436
  %2451 = load i32, ptr %2450, align 4, !tbaa !6
  %2452 = add nsw i32 %2451, %2449
  store i32 %2452, ptr %2450, align 4, !tbaa !6
  br label %2471

2453:                                             ; preds = %2426, %2443
  %2454 = phi i32 [ %2438, %2443 ], [ %2427, %2426 ]
  %2455 = phi ptr [ %2437, %2443 ], [ %4, %2426 ]
  %2456 = phi i64 [ %2436, %2443 ], [ 0, %2426 ]
  %2457 = add nsw i32 %2454, 1
  store i32 %2457, ptr %2455, align 4, !tbaa !6
  %2458 = getelementptr inbounds i32, ptr %7, i64 %2456
  %2459 = load i32, ptr %2458, align 4, !tbaa !6
  %2460 = getelementptr inbounds i32, ptr %6, i64 %2456
  br label %2471

2461:                                             ; preds = %2435
  %2462 = icmp eq i32 %2438, %2441
  br i1 %2462, label %2463, label %2469

2463:                                             ; preds = %2461
  store i32 0, ptr %2437, align 4, !tbaa !6
  %2464 = getelementptr inbounds i32, ptr %8, i64 %2436
  %2465 = load i32, ptr %2464, align 4, !tbaa !6
  %2466 = getelementptr inbounds i32, ptr %6, i64 %2436
  store i32 %2465, ptr %2466, align 4, !tbaa !6
  %2467 = add nuw nsw i64 %2436, 1
  %2468 = icmp eq i64 %2467, %2191
  br i1 %2468, label %2476, label %2435, !llvm.loop !843

2469:                                             ; preds = %2431, %2461
  %2470 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1268, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5535

2471:                                             ; preds = %2444, %2453
  %2472 = phi ptr [ %2460, %2453 ], [ %2437, %2444 ]
  %2473 = phi i32 [ %2459, %2453 ], [ 1, %2444 ]
  %2474 = load i32, ptr %2472, align 4, !tbaa !6
  %2475 = add nsw i32 %2474, %2473
  store i32 %2475, ptr %2472, align 4, !tbaa !6
  br label %2476

2476:                                             ; preds = %2463, %2471, %2433, %2423
  %2477 = icmp eq i32 %2425, %5
  br i1 %2477, label %5530, label %2338, !llvm.loop !844

2478:                                             ; preds = %1877
  %2479 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1268, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5530

2480:                                             ; preds = %18
  %2481 = getelementptr inbounds ptr, ptr %14, i64 %19
  %2482 = load ptr, ptr %2481, align 8, !tbaa !10
  %2483 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2484 = load ptr, ptr %2483, align 8, !tbaa !10
  %2485 = load i64, ptr %2482, align 8, !tbaa !121
  %2486 = trunc i64 %2485 to i32
  store i32 %2486, ptr %2484, align 4, !tbaa !6
  %2487 = icmp eq i32 %13, 0
  br i1 %2487, label %5530, label %2488

2488:                                             ; preds = %2480
  switch i32 %1, label %3085 [
    i32 1, label %2489
    i32 0, label %2789
  ]

2489:                                             ; preds = %2488
  %2490 = getelementptr inbounds i32, ptr %3, i64 %19
  %2491 = load i32, ptr %2490, align 4, !tbaa !6
  %2492 = icmp eq i32 %2491, 0
  %2493 = icmp sgt i32 %5, 0
  br i1 %2492, label %2503, label %2494

2494:                                             ; preds = %2489
  br i1 %2493, label %2495, label %5530

2495:                                             ; preds = %2494
  %2496 = icmp sgt i32 %13, 1
  %2497 = icmp sgt i32 %13, 0
  %2498 = add i32 %13, -2
  %2499 = zext i32 %2498 to i64
  %2500 = zext i32 %13 to i64
  %2501 = add nuw i32 %5, 1
  %2502 = icmp eq i32 %13, 1
  br label %2650

2503:                                             ; preds = %2489
  br i1 %2493, label %2504, label %5530

2504:                                             ; preds = %2503
  %2505 = icmp sgt i32 %13, 1
  %2506 = icmp sgt i32 %13, 0
  %2507 = add i32 %13, -2
  %2508 = zext i32 %2507 to i64
  %2509 = zext i32 %13 to i64
  %2510 = add nuw i32 %5, 1
  %2511 = icmp eq i32 %13, 1
  br label %2512

2512:                                             ; preds = %2504, %2648
  %2513 = phi i32 [ 0, %2504 ], [ %2600, %2648 ]
  %2514 = phi double [ 0.000000e+00, %2504 ], [ %2599, %2648 ]
  %2515 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2505, label %2516, label %2585

2516:                                             ; preds = %2512, %2575
  %2517 = phi i32 [ %2584, %2575 ], [ 0, %2512 ]
  %2518 = phi i64 [ %2526, %2575 ], [ %2509, %2512 ]
  %2519 = phi i64 [ %2583, %2575 ], [ %2508, %2512 ]
  %2520 = phi i32 [ %2581, %2575 ], [ %2515, %2512 ]
  %2521 = sub i32 %2507, %2517
  %2522 = tail call i32 @llvm.smin.i32(i32 %2521, i32 0)
  %2523 = sub i32 %2521, %2522
  %2524 = zext i32 %2523 to i64
  %2525 = add nuw nsw i64 %2524, 1
  %2526 = add nsw i64 %2518, -1
  %2527 = icmp ult i32 %2523, 31
  br i1 %2527, label %2563, label %2528

2528:                                             ; preds = %2516
  %2529 = and i64 %2525, 8589934560
  %2530 = sub i64 %2519, %2529
  br label %2531

2531:                                             ; preds = %2531, %2528
  %2532 = phi i64 [ 0, %2528 ], [ %2555, %2531 ]
  %2533 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2528 ], [ %2551, %2531 ]
  %2534 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2528 ], [ %2552, %2531 ]
  %2535 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2528 ], [ %2553, %2531 ]
  %2536 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2528 ], [ %2554, %2531 ]
  %2537 = sub i64 %2519, %2532
  %2538 = getelementptr inbounds i32, ptr %9, i64 %2537
  %2539 = getelementptr inbounds i32, ptr %2538, i64 -7
  %2540 = load <8 x i32>, ptr %2539, align 4, !tbaa !6
  %2541 = shufflevector <8 x i32> %2540, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2542 = getelementptr inbounds i32, ptr %2538, i64 -15
  %2543 = load <8 x i32>, ptr %2542, align 4, !tbaa !6
  %2544 = shufflevector <8 x i32> %2543, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2545 = getelementptr inbounds i32, ptr %2538, i64 -23
  %2546 = load <8 x i32>, ptr %2545, align 4, !tbaa !6
  %2547 = shufflevector <8 x i32> %2546, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2548 = getelementptr inbounds i32, ptr %2538, i64 -31
  %2549 = load <8 x i32>, ptr %2548, align 4, !tbaa !6
  %2550 = shufflevector <8 x i32> %2549, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2551 = mul <8 x i32> %2541, %2533
  %2552 = mul <8 x i32> %2544, %2534
  %2553 = mul <8 x i32> %2547, %2535
  %2554 = mul <8 x i32> %2550, %2536
  %2555 = add nuw i64 %2532, 32
  %2556 = icmp eq i64 %2555, %2529
  br i1 %2556, label %2557, label %2531, !llvm.loop !845

2557:                                             ; preds = %2531
  %2558 = mul <8 x i32> %2552, %2551
  %2559 = mul <8 x i32> %2553, %2558
  %2560 = mul <8 x i32> %2554, %2559
  %2561 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2560)
  %2562 = icmp eq i64 %2525, %2529
  br i1 %2562, label %2575, label %2563

2563:                                             ; preds = %2516, %2557
  %2564 = phi i64 [ %2519, %2516 ], [ %2530, %2557 ]
  %2565 = phi i32 [ 1, %2516 ], [ %2561, %2557 ]
  br label %2566

2566:                                             ; preds = %2563, %2566
  %2567 = phi i64 [ %2572, %2566 ], [ %2564, %2563 ]
  %2568 = phi i32 [ %2571, %2566 ], [ %2565, %2563 ]
  %2569 = getelementptr inbounds i32, ptr %9, i64 %2567
  %2570 = load i32, ptr %2569, align 4, !tbaa !6
  %2571 = mul nsw i32 %2570, %2568
  %2572 = add nsw i64 %2567, -1
  %2573 = trunc i64 %2567 to i32
  %2574 = icmp sgt i32 %2573, 0
  br i1 %2574, label %2566, label %2575, !llvm.loop !846

2575:                                             ; preds = %2566, %2557
  %2576 = phi i32 [ %2561, %2557 ], [ %2571, %2566 ]
  %2577 = and i64 %2526, 4294967295
  %2578 = getelementptr inbounds i32, ptr %6, i64 %2577
  %2579 = load i32, ptr %2578, align 4, !tbaa !6
  %2580 = mul nsw i32 %2579, %2576
  %2581 = add nsw i32 %2580, %2520
  %2582 = icmp sgt i64 %2518, 2
  %2583 = add nsw i64 %2519, -1
  %2584 = add i32 %2517, 1
  br i1 %2582, label %2516, label %2585, !llvm.loop !847

2585:                                             ; preds = %2575, %2512
  %2586 = phi i32 [ %2515, %2512 ], [ %2581, %2575 ]
  %2587 = sext i32 %2586 to i64
  %2588 = getelementptr inbounds double, ptr %2, i64 %2587
  %2589 = load double, ptr %2588, align 8, !tbaa !19
  %2590 = getelementptr inbounds i64, ptr %2482, i64 %2587
  %2591 = load i64, ptr %2590, align 8, !tbaa !121
  %2592 = trunc i64 %2591 to i32
  %2593 = fcmp fast ueq double %2589, 0.000000e+00
  br i1 %2593, label %2598, label %2594

2594:                                             ; preds = %2585
  %2595 = load i32, ptr %2484, align 4, !tbaa !6
  %2596 = icmp slt i32 %2595, %2592
  br i1 %2596, label %2597, label %2598

2597:                                             ; preds = %2594
  store i32 %2592, ptr %2484, align 4, !tbaa !6
  br label %2598

2598:                                             ; preds = %2594, %2597, %2585
  %2599 = fadd fast double %2589, %2514
  %2600 = add nuw nsw i32 %2513, 1
  br i1 %2506, label %2601, label %2648

2601:                                             ; preds = %2598
  %2602 = load i32, ptr %4, align 4, !tbaa !6
  %2603 = load i32, ptr %12, align 4, !tbaa !6
  %2604 = add nsw i32 %2603, -1
  %2605 = icmp slt i32 %2602, %2604
  br i1 %2605, label %2625, label %2606

2606:                                             ; preds = %2601
  %2607 = icmp eq i32 %2602, %2604
  br i1 %2607, label %2608, label %2641

2608:                                             ; preds = %2606
  store i32 0, ptr %4, align 4, !tbaa !6
  %2609 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2609, ptr %6, align 4, !tbaa !6
  br i1 %2511, label %2648, label %2610

2610:                                             ; preds = %2608, %2635
  %2611 = phi i64 [ %2639, %2635 ], [ 1, %2608 ]
  %2612 = getelementptr inbounds i32, ptr %4, i64 %2611
  %2613 = load i32, ptr %2612, align 4, !tbaa !6
  %2614 = getelementptr inbounds i32, ptr %12, i64 %2611
  %2615 = load i32, ptr %2614, align 4, !tbaa !6
  %2616 = add nsw i32 %2615, -1
  %2617 = icmp slt i32 %2613, %2616
  br i1 %2617, label %2618, label %2633

2618:                                             ; preds = %2610
  br i1 %2605, label %2625, label %2619

2619:                                             ; preds = %2618
  %2620 = getelementptr inbounds i32, ptr %7, i64 %2611
  %2621 = load i32, ptr %2620, align 4, !tbaa !6
  %2622 = getelementptr inbounds i32, ptr %6, i64 %2611
  %2623 = load i32, ptr %2622, align 4, !tbaa !6
  %2624 = add nsw i32 %2623, %2621
  store i32 %2624, ptr %2622, align 4, !tbaa !6
  br label %2643

2625:                                             ; preds = %2601, %2618
  %2626 = phi i32 [ %2613, %2618 ], [ %2602, %2601 ]
  %2627 = phi ptr [ %2612, %2618 ], [ %4, %2601 ]
  %2628 = phi i64 [ %2611, %2618 ], [ 0, %2601 ]
  %2629 = add nsw i32 %2626, 1
  store i32 %2629, ptr %2627, align 4, !tbaa !6
  %2630 = getelementptr inbounds i32, ptr %7, i64 %2628
  %2631 = load i32, ptr %2630, align 4, !tbaa !6
  %2632 = getelementptr inbounds i32, ptr %6, i64 %2628
  br label %2643

2633:                                             ; preds = %2610
  %2634 = icmp eq i32 %2613, %2616
  br i1 %2634, label %2635, label %2641

2635:                                             ; preds = %2633
  store i32 0, ptr %2612, align 4, !tbaa !6
  %2636 = getelementptr inbounds i32, ptr %8, i64 %2611
  %2637 = load i32, ptr %2636, align 4, !tbaa !6
  %2638 = getelementptr inbounds i32, ptr %6, i64 %2611
  store i32 %2637, ptr %2638, align 4, !tbaa !6
  %2639 = add nuw nsw i64 %2611, 1
  %2640 = icmp eq i64 %2639, %2509
  br i1 %2640, label %2648, label %2610, !llvm.loop !848

2641:                                             ; preds = %2606, %2633
  %2642 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1273, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5535

2643:                                             ; preds = %2619, %2625
  %2644 = phi ptr [ %2632, %2625 ], [ %2612, %2619 ]
  %2645 = phi i32 [ %2631, %2625 ], [ 1, %2619 ]
  %2646 = load i32, ptr %2644, align 4, !tbaa !6
  %2647 = add nsw i32 %2646, %2645
  store i32 %2647, ptr %2644, align 4, !tbaa !6
  br label %2648

2648:                                             ; preds = %2635, %2643, %2608, %2598
  %2649 = icmp eq i32 %2600, %5
  br i1 %2649, label %5530, label %2512, !llvm.loop !849

2650:                                             ; preds = %2495, %2787
  %2651 = phi i32 [ 0, %2495 ], [ %2736, %2787 ]
  %2652 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2496, label %2653, label %2722

2653:                                             ; preds = %2650, %2712
  %2654 = phi i32 [ %2721, %2712 ], [ 0, %2650 ]
  %2655 = phi i64 [ %2663, %2712 ], [ %2500, %2650 ]
  %2656 = phi i64 [ %2720, %2712 ], [ %2499, %2650 ]
  %2657 = phi i32 [ %2718, %2712 ], [ %2652, %2650 ]
  %2658 = sub i32 %2498, %2654
  %2659 = tail call i32 @llvm.smin.i32(i32 %2658, i32 0)
  %2660 = sub i32 %2658, %2659
  %2661 = zext i32 %2660 to i64
  %2662 = add nuw nsw i64 %2661, 1
  %2663 = add nsw i64 %2655, -1
  %2664 = icmp ult i32 %2660, 31
  br i1 %2664, label %2700, label %2665

2665:                                             ; preds = %2653
  %2666 = and i64 %2662, 8589934560
  %2667 = sub i64 %2656, %2666
  br label %2668

2668:                                             ; preds = %2668, %2665
  %2669 = phi i64 [ 0, %2665 ], [ %2692, %2668 ]
  %2670 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2665 ], [ %2688, %2668 ]
  %2671 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2665 ], [ %2689, %2668 ]
  %2672 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2665 ], [ %2690, %2668 ]
  %2673 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2665 ], [ %2691, %2668 ]
  %2674 = sub i64 %2656, %2669
  %2675 = getelementptr inbounds i32, ptr %11, i64 %2674
  %2676 = getelementptr inbounds i32, ptr %2675, i64 -7
  %2677 = load <8 x i32>, ptr %2676, align 4, !tbaa !6
  %2678 = shufflevector <8 x i32> %2677, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2679 = getelementptr inbounds i32, ptr %2675, i64 -15
  %2680 = load <8 x i32>, ptr %2679, align 4, !tbaa !6
  %2681 = shufflevector <8 x i32> %2680, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2682 = getelementptr inbounds i32, ptr %2675, i64 -23
  %2683 = load <8 x i32>, ptr %2682, align 4, !tbaa !6
  %2684 = shufflevector <8 x i32> %2683, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2685 = getelementptr inbounds i32, ptr %2675, i64 -31
  %2686 = load <8 x i32>, ptr %2685, align 4, !tbaa !6
  %2687 = shufflevector <8 x i32> %2686, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2688 = mul <8 x i32> %2678, %2670
  %2689 = mul <8 x i32> %2681, %2671
  %2690 = mul <8 x i32> %2684, %2672
  %2691 = mul <8 x i32> %2687, %2673
  %2692 = add nuw i64 %2669, 32
  %2693 = icmp eq i64 %2692, %2666
  br i1 %2693, label %2694, label %2668, !llvm.loop !850

2694:                                             ; preds = %2668
  %2695 = mul <8 x i32> %2689, %2688
  %2696 = mul <8 x i32> %2690, %2695
  %2697 = mul <8 x i32> %2691, %2696
  %2698 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2697)
  %2699 = icmp eq i64 %2662, %2666
  br i1 %2699, label %2712, label %2700

2700:                                             ; preds = %2653, %2694
  %2701 = phi i64 [ %2656, %2653 ], [ %2667, %2694 ]
  %2702 = phi i32 [ 1, %2653 ], [ %2698, %2694 ]
  br label %2703

2703:                                             ; preds = %2700, %2703
  %2704 = phi i64 [ %2709, %2703 ], [ %2701, %2700 ]
  %2705 = phi i32 [ %2708, %2703 ], [ %2702, %2700 ]
  %2706 = getelementptr inbounds i32, ptr %11, i64 %2704
  %2707 = load i32, ptr %2706, align 4, !tbaa !6
  %2708 = mul nsw i32 %2707, %2705
  %2709 = add nsw i64 %2704, -1
  %2710 = trunc i64 %2704 to i32
  %2711 = icmp sgt i32 %2710, 0
  br i1 %2711, label %2703, label %2712, !llvm.loop !851

2712:                                             ; preds = %2703, %2694
  %2713 = phi i32 [ %2698, %2694 ], [ %2708, %2703 ]
  %2714 = and i64 %2663, 4294967295
  %2715 = getelementptr inbounds i32, ptr %6, i64 %2714
  %2716 = load i32, ptr %2715, align 4, !tbaa !6
  %2717 = mul nsw i32 %2716, %2713
  %2718 = add nsw i32 %2717, %2657
  %2719 = icmp sgt i64 %2655, 2
  %2720 = add nsw i64 %2656, -1
  %2721 = add i32 %2654, 1
  br i1 %2719, label %2653, label %2722, !llvm.loop !852

2722:                                             ; preds = %2712, %2650
  %2723 = phi i32 [ %2652, %2650 ], [ %2718, %2712 ]
  %2724 = icmp slt i32 %2723, %5
  br i1 %2724, label %2727, label %2725

2725:                                             ; preds = %2722
  %2726 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1273, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5535

2727:                                             ; preds = %2722
  %2728 = sext i32 %2723 to i64
  %2729 = getelementptr inbounds i64, ptr %2482, i64 %2728
  %2730 = load i64, ptr %2729, align 8, !tbaa !121
  %2731 = trunc i64 %2730 to i32
  %2732 = load i32, ptr %2484, align 4, !tbaa !6
  %2733 = icmp slt i32 %2732, %2731
  br i1 %2733, label %2734, label %2735

2734:                                             ; preds = %2727
  store i32 %2731, ptr %2484, align 4, !tbaa !6
  br label %2735

2735:                                             ; preds = %2727, %2734
  %2736 = add nuw nsw i32 %2651, 1
  br i1 %2497, label %2737, label %2787

2737:                                             ; preds = %2735
  %2738 = load i32, ptr %4, align 4, !tbaa !6
  %2739 = load i32, ptr %12, align 4, !tbaa !6
  %2740 = add nsw i32 %2739, -1
  %2741 = icmp slt i32 %2738, %2740
  br i1 %2741, label %2764, label %2742

2742:                                             ; preds = %2737
  %2743 = icmp eq i32 %2738, %2740
  br i1 %2743, label %2744, label %2780

2744:                                             ; preds = %2742
  store i32 0, ptr %4, align 4, !tbaa !6
  %2745 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2745, ptr %6, align 4, !tbaa !6
  br i1 %2502, label %2787, label %2746

2746:                                             ; preds = %2744, %2774
  %2747 = phi i64 [ %2778, %2774 ], [ 1, %2744 ]
  %2748 = getelementptr inbounds i32, ptr %4, i64 %2747
  %2749 = load i32, ptr %2748, align 4, !tbaa !6
  %2750 = getelementptr inbounds i32, ptr %12, i64 %2747
  %2751 = load i32, ptr %2750, align 4, !tbaa !6
  %2752 = add nsw i32 %2751, -1
  %2753 = icmp slt i32 %2749, %2752
  br i1 %2753, label %2754, label %2772

2754:                                             ; preds = %2746
  br i1 %2741, label %2764, label %2755

2755:                                             ; preds = %2754
  %2756 = shl i64 %2747, 32
  %2757 = add i64 %2756, -4294967296
  %2758 = ashr exact i64 %2757, 32
  %2759 = getelementptr inbounds i32, ptr %7, i64 %2758
  %2760 = load i32, ptr %2759, align 4, !tbaa !6
  %2761 = getelementptr inbounds i32, ptr %6, i64 %2747
  %2762 = load i32, ptr %2761, align 4, !tbaa !6
  %2763 = add nsw i32 %2762, %2760
  store i32 %2763, ptr %2761, align 4, !tbaa !6
  br label %2782

2764:                                             ; preds = %2737, %2754
  %2765 = phi i32 [ %2749, %2754 ], [ %2738, %2737 ]
  %2766 = phi ptr [ %2748, %2754 ], [ %4, %2737 ]
  %2767 = phi i64 [ %2747, %2754 ], [ 0, %2737 ]
  %2768 = add nsw i32 %2765, 1
  store i32 %2768, ptr %2766, align 4, !tbaa !6
  %2769 = getelementptr inbounds i32, ptr %7, i64 %2767
  %2770 = load i32, ptr %2769, align 4, !tbaa !6
  %2771 = getelementptr inbounds i32, ptr %6, i64 %2767
  br label %2782

2772:                                             ; preds = %2746
  %2773 = icmp eq i32 %2749, %2752
  br i1 %2773, label %2774, label %2780

2774:                                             ; preds = %2772
  store i32 0, ptr %2748, align 4, !tbaa !6
  %2775 = getelementptr inbounds i32, ptr %8, i64 %2747
  %2776 = load i32, ptr %2775, align 4, !tbaa !6
  %2777 = getelementptr inbounds i32, ptr %6, i64 %2747
  store i32 %2776, ptr %2777, align 4, !tbaa !6
  %2778 = add nuw nsw i64 %2747, 1
  %2779 = icmp eq i64 %2778, %2500
  br i1 %2779, label %2787, label %2746, !llvm.loop !853

2780:                                             ; preds = %2742, %2772
  %2781 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1273, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5535

2782:                                             ; preds = %2755, %2764
  %2783 = phi ptr [ %2771, %2764 ], [ %2748, %2755 ]
  %2784 = phi i32 [ %2770, %2764 ], [ 1, %2755 ]
  %2785 = load i32, ptr %2783, align 4, !tbaa !6
  %2786 = add nsw i32 %2785, %2784
  store i32 %2786, ptr %2783, align 4, !tbaa !6
  br label %2787

2787:                                             ; preds = %2774, %2782, %2744, %2735
  %2788 = icmp eq i32 %2736, %5
  br i1 %2788, label %5530, label %2650, !llvm.loop !854

2789:                                             ; preds = %2488
  %2790 = getelementptr inbounds i32, ptr %3, i64 %19
  %2791 = load i32, ptr %2790, align 4, !tbaa !6
  %2792 = icmp eq i32 %2791, 0
  %2793 = icmp sgt i32 %5, 0
  br i1 %2792, label %2803, label %2794

2794:                                             ; preds = %2789
  br i1 %2793, label %2795, label %5530

2795:                                             ; preds = %2794
  %2796 = icmp sgt i32 %13, 1
  %2797 = icmp sgt i32 %13, 0
  %2798 = add i32 %13, -2
  %2799 = zext i32 %2798 to i64
  %2800 = zext i32 %13 to i64
  %2801 = add nuw i32 %5, 1
  %2802 = icmp eq i32 %13, 1
  br label %2946

2803:                                             ; preds = %2789
  br i1 %2793, label %2804, label %5530

2804:                                             ; preds = %2803
  %2805 = icmp sgt i32 %13, 1
  %2806 = icmp sgt i32 %13, 0
  %2807 = add i32 %13, -2
  %2808 = zext i32 %2807 to i64
  %2809 = zext i32 %13 to i64
  %2810 = add nuw i32 %5, 1
  %2811 = icmp eq i32 %13, 1
  br label %2812

2812:                                             ; preds = %2804, %2944
  %2813 = phi i32 [ 0, %2804 ], [ %2896, %2944 ]
  %2814 = phi double [ 0.000000e+00, %2804 ], [ %2895, %2944 ]
  %2815 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2805, label %2816, label %2885

2816:                                             ; preds = %2812, %2875
  %2817 = phi i32 [ %2884, %2875 ], [ 0, %2812 ]
  %2818 = phi i64 [ %2826, %2875 ], [ %2809, %2812 ]
  %2819 = phi i64 [ %2883, %2875 ], [ %2808, %2812 ]
  %2820 = phi i32 [ %2881, %2875 ], [ %2815, %2812 ]
  %2821 = sub i32 %2807, %2817
  %2822 = tail call i32 @llvm.smin.i32(i32 %2821, i32 0)
  %2823 = sub i32 %2821, %2822
  %2824 = zext i32 %2823 to i64
  %2825 = add nuw nsw i64 %2824, 1
  %2826 = add nsw i64 %2818, -1
  %2827 = icmp ult i32 %2823, 31
  br i1 %2827, label %2863, label %2828

2828:                                             ; preds = %2816
  %2829 = and i64 %2825, 8589934560
  %2830 = sub i64 %2819, %2829
  br label %2831

2831:                                             ; preds = %2831, %2828
  %2832 = phi i64 [ 0, %2828 ], [ %2855, %2831 ]
  %2833 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2828 ], [ %2851, %2831 ]
  %2834 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2828 ], [ %2852, %2831 ]
  %2835 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2828 ], [ %2853, %2831 ]
  %2836 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2828 ], [ %2854, %2831 ]
  %2837 = sub i64 %2819, %2832
  %2838 = getelementptr inbounds i32, ptr %9, i64 %2837
  %2839 = getelementptr inbounds i32, ptr %2838, i64 -7
  %2840 = load <8 x i32>, ptr %2839, align 4, !tbaa !6
  %2841 = shufflevector <8 x i32> %2840, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2842 = getelementptr inbounds i32, ptr %2838, i64 -15
  %2843 = load <8 x i32>, ptr %2842, align 4, !tbaa !6
  %2844 = shufflevector <8 x i32> %2843, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2845 = getelementptr inbounds i32, ptr %2838, i64 -23
  %2846 = load <8 x i32>, ptr %2845, align 4, !tbaa !6
  %2847 = shufflevector <8 x i32> %2846, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2848 = getelementptr inbounds i32, ptr %2838, i64 -31
  %2849 = load <8 x i32>, ptr %2848, align 4, !tbaa !6
  %2850 = shufflevector <8 x i32> %2849, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2851 = mul <8 x i32> %2841, %2833
  %2852 = mul <8 x i32> %2844, %2834
  %2853 = mul <8 x i32> %2847, %2835
  %2854 = mul <8 x i32> %2850, %2836
  %2855 = add nuw i64 %2832, 32
  %2856 = icmp eq i64 %2855, %2829
  br i1 %2856, label %2857, label %2831, !llvm.loop !855

2857:                                             ; preds = %2831
  %2858 = mul <8 x i32> %2852, %2851
  %2859 = mul <8 x i32> %2853, %2858
  %2860 = mul <8 x i32> %2854, %2859
  %2861 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2860)
  %2862 = icmp eq i64 %2825, %2829
  br i1 %2862, label %2875, label %2863

2863:                                             ; preds = %2816, %2857
  %2864 = phi i64 [ %2819, %2816 ], [ %2830, %2857 ]
  %2865 = phi i32 [ 1, %2816 ], [ %2861, %2857 ]
  br label %2866

2866:                                             ; preds = %2863, %2866
  %2867 = phi i64 [ %2872, %2866 ], [ %2864, %2863 ]
  %2868 = phi i32 [ %2871, %2866 ], [ %2865, %2863 ]
  %2869 = getelementptr inbounds i32, ptr %9, i64 %2867
  %2870 = load i32, ptr %2869, align 4, !tbaa !6
  %2871 = mul nsw i32 %2870, %2868
  %2872 = add nsw i64 %2867, -1
  %2873 = trunc i64 %2867 to i32
  %2874 = icmp sgt i32 %2873, 0
  br i1 %2874, label %2866, label %2875, !llvm.loop !856

2875:                                             ; preds = %2866, %2857
  %2876 = phi i32 [ %2861, %2857 ], [ %2871, %2866 ]
  %2877 = and i64 %2826, 4294967295
  %2878 = getelementptr inbounds i32, ptr %6, i64 %2877
  %2879 = load i32, ptr %2878, align 4, !tbaa !6
  %2880 = mul nsw i32 %2879, %2876
  %2881 = add nsw i32 %2880, %2820
  %2882 = icmp sgt i64 %2818, 2
  %2883 = add nsw i64 %2819, -1
  %2884 = add i32 %2817, 1
  br i1 %2882, label %2816, label %2885, !llvm.loop !857

2885:                                             ; preds = %2875, %2812
  %2886 = phi i32 [ %2815, %2812 ], [ %2881, %2875 ]
  %2887 = sext i32 %2886 to i64
  %2888 = getelementptr inbounds i64, ptr %2482, i64 %2887
  %2889 = load i64, ptr %2888, align 8, !tbaa !121
  %2890 = trunc i64 %2889 to i32
  %2891 = load i32, ptr %2484, align 4, !tbaa !6
  %2892 = icmp slt i32 %2891, %2890
  br i1 %2892, label %2893, label %2894

2893:                                             ; preds = %2885
  store i32 %2890, ptr %2484, align 4, !tbaa !6
  br label %2894

2894:                                             ; preds = %2893, %2885
  %2895 = fadd fast double %2814, 1.000000e+00
  %2896 = add nuw nsw i32 %2813, 1
  br i1 %2806, label %2897, label %2944

2897:                                             ; preds = %2894
  %2898 = load i32, ptr %4, align 4, !tbaa !6
  %2899 = load i32, ptr %12, align 4, !tbaa !6
  %2900 = add nsw i32 %2899, -1
  %2901 = icmp slt i32 %2898, %2900
  br i1 %2901, label %2921, label %2902

2902:                                             ; preds = %2897
  %2903 = icmp eq i32 %2898, %2900
  br i1 %2903, label %2904, label %2937

2904:                                             ; preds = %2902
  store i32 0, ptr %4, align 4, !tbaa !6
  %2905 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2905, ptr %6, align 4, !tbaa !6
  br i1 %2811, label %2944, label %2906

2906:                                             ; preds = %2904, %2931
  %2907 = phi i64 [ %2935, %2931 ], [ 1, %2904 ]
  %2908 = getelementptr inbounds i32, ptr %4, i64 %2907
  %2909 = load i32, ptr %2908, align 4, !tbaa !6
  %2910 = getelementptr inbounds i32, ptr %12, i64 %2907
  %2911 = load i32, ptr %2910, align 4, !tbaa !6
  %2912 = add nsw i32 %2911, -1
  %2913 = icmp slt i32 %2909, %2912
  br i1 %2913, label %2914, label %2929

2914:                                             ; preds = %2906
  br i1 %2901, label %2921, label %2915

2915:                                             ; preds = %2914
  %2916 = getelementptr inbounds i32, ptr %7, i64 %2907
  %2917 = load i32, ptr %2916, align 4, !tbaa !6
  %2918 = getelementptr inbounds i32, ptr %6, i64 %2907
  %2919 = load i32, ptr %2918, align 4, !tbaa !6
  %2920 = add nsw i32 %2919, %2917
  store i32 %2920, ptr %2918, align 4, !tbaa !6
  br label %2939

2921:                                             ; preds = %2897, %2914
  %2922 = phi i32 [ %2909, %2914 ], [ %2898, %2897 ]
  %2923 = phi ptr [ %2908, %2914 ], [ %4, %2897 ]
  %2924 = phi i64 [ %2907, %2914 ], [ 0, %2897 ]
  %2925 = add nsw i32 %2922, 1
  store i32 %2925, ptr %2923, align 4, !tbaa !6
  %2926 = getelementptr inbounds i32, ptr %7, i64 %2924
  %2927 = load i32, ptr %2926, align 4, !tbaa !6
  %2928 = getelementptr inbounds i32, ptr %6, i64 %2924
  br label %2939

2929:                                             ; preds = %2906
  %2930 = icmp eq i32 %2909, %2912
  br i1 %2930, label %2931, label %2937

2931:                                             ; preds = %2929
  store i32 0, ptr %2908, align 4, !tbaa !6
  %2932 = getelementptr inbounds i32, ptr %8, i64 %2907
  %2933 = load i32, ptr %2932, align 4, !tbaa !6
  %2934 = getelementptr inbounds i32, ptr %6, i64 %2907
  store i32 %2933, ptr %2934, align 4, !tbaa !6
  %2935 = add nuw nsw i64 %2907, 1
  %2936 = icmp eq i64 %2935, %2809
  br i1 %2936, label %2944, label %2906, !llvm.loop !858

2937:                                             ; preds = %2902, %2929
  %2938 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1273, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5535

2939:                                             ; preds = %2915, %2921
  %2940 = phi ptr [ %2928, %2921 ], [ %2908, %2915 ]
  %2941 = phi i32 [ %2927, %2921 ], [ 1, %2915 ]
  %2942 = load i32, ptr %2940, align 4, !tbaa !6
  %2943 = add nsw i32 %2942, %2941
  store i32 %2943, ptr %2940, align 4, !tbaa !6
  br label %2944

2944:                                             ; preds = %2931, %2939, %2904, %2894
  %2945 = icmp eq i32 %2896, %5
  br i1 %2945, label %5530, label %2812, !llvm.loop !859

2946:                                             ; preds = %2795, %3083
  %2947 = phi i32 [ 0, %2795 ], [ %3032, %3083 ]
  %2948 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2796, label %2949, label %3018

2949:                                             ; preds = %2946, %3008
  %2950 = phi i32 [ %3017, %3008 ], [ 0, %2946 ]
  %2951 = phi i64 [ %2959, %3008 ], [ %2800, %2946 ]
  %2952 = phi i64 [ %3016, %3008 ], [ %2799, %2946 ]
  %2953 = phi i32 [ %3014, %3008 ], [ %2948, %2946 ]
  %2954 = sub i32 %2798, %2950
  %2955 = tail call i32 @llvm.smin.i32(i32 %2954, i32 0)
  %2956 = sub i32 %2954, %2955
  %2957 = zext i32 %2956 to i64
  %2958 = add nuw nsw i64 %2957, 1
  %2959 = add nsw i64 %2951, -1
  %2960 = icmp ult i32 %2956, 31
  br i1 %2960, label %2996, label %2961

2961:                                             ; preds = %2949
  %2962 = and i64 %2958, 8589934560
  %2963 = sub i64 %2952, %2962
  br label %2964

2964:                                             ; preds = %2964, %2961
  %2965 = phi i64 [ 0, %2961 ], [ %2988, %2964 ]
  %2966 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2961 ], [ %2984, %2964 ]
  %2967 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2961 ], [ %2985, %2964 ]
  %2968 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2961 ], [ %2986, %2964 ]
  %2969 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2961 ], [ %2987, %2964 ]
  %2970 = sub i64 %2952, %2965
  %2971 = getelementptr inbounds i32, ptr %11, i64 %2970
  %2972 = getelementptr inbounds i32, ptr %2971, i64 -7
  %2973 = load <8 x i32>, ptr %2972, align 4, !tbaa !6
  %2974 = shufflevector <8 x i32> %2973, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2975 = getelementptr inbounds i32, ptr %2971, i64 -15
  %2976 = load <8 x i32>, ptr %2975, align 4, !tbaa !6
  %2977 = shufflevector <8 x i32> %2976, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2978 = getelementptr inbounds i32, ptr %2971, i64 -23
  %2979 = load <8 x i32>, ptr %2978, align 4, !tbaa !6
  %2980 = shufflevector <8 x i32> %2979, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2981 = getelementptr inbounds i32, ptr %2971, i64 -31
  %2982 = load <8 x i32>, ptr %2981, align 4, !tbaa !6
  %2983 = shufflevector <8 x i32> %2982, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2984 = mul <8 x i32> %2974, %2966
  %2985 = mul <8 x i32> %2977, %2967
  %2986 = mul <8 x i32> %2980, %2968
  %2987 = mul <8 x i32> %2983, %2969
  %2988 = add nuw i64 %2965, 32
  %2989 = icmp eq i64 %2988, %2962
  br i1 %2989, label %2990, label %2964, !llvm.loop !860

2990:                                             ; preds = %2964
  %2991 = mul <8 x i32> %2985, %2984
  %2992 = mul <8 x i32> %2986, %2991
  %2993 = mul <8 x i32> %2987, %2992
  %2994 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2993)
  %2995 = icmp eq i64 %2958, %2962
  br i1 %2995, label %3008, label %2996

2996:                                             ; preds = %2949, %2990
  %2997 = phi i64 [ %2952, %2949 ], [ %2963, %2990 ]
  %2998 = phi i32 [ 1, %2949 ], [ %2994, %2990 ]
  br label %2999

2999:                                             ; preds = %2996, %2999
  %3000 = phi i64 [ %3005, %2999 ], [ %2997, %2996 ]
  %3001 = phi i32 [ %3004, %2999 ], [ %2998, %2996 ]
  %3002 = getelementptr inbounds i32, ptr %11, i64 %3000
  %3003 = load i32, ptr %3002, align 4, !tbaa !6
  %3004 = mul nsw i32 %3003, %3001
  %3005 = add nsw i64 %3000, -1
  %3006 = trunc i64 %3000 to i32
  %3007 = icmp sgt i32 %3006, 0
  br i1 %3007, label %2999, label %3008, !llvm.loop !861

3008:                                             ; preds = %2999, %2990
  %3009 = phi i32 [ %2994, %2990 ], [ %3004, %2999 ]
  %3010 = and i64 %2959, 4294967295
  %3011 = getelementptr inbounds i32, ptr %6, i64 %3010
  %3012 = load i32, ptr %3011, align 4, !tbaa !6
  %3013 = mul nsw i32 %3012, %3009
  %3014 = add nsw i32 %3013, %2953
  %3015 = icmp sgt i64 %2951, 2
  %3016 = add nsw i64 %2952, -1
  %3017 = add i32 %2950, 1
  br i1 %3015, label %2949, label %3018, !llvm.loop !862

3018:                                             ; preds = %3008, %2946
  %3019 = phi i32 [ %2948, %2946 ], [ %3014, %3008 ]
  %3020 = icmp slt i32 %3019, %5
  br i1 %3020, label %3023, label %3021

3021:                                             ; preds = %3018
  %3022 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1273, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5535

3023:                                             ; preds = %3018
  %3024 = sext i32 %3019 to i64
  %3025 = getelementptr inbounds i64, ptr %2482, i64 %3024
  %3026 = load i64, ptr %3025, align 8, !tbaa !121
  %3027 = trunc i64 %3026 to i32
  %3028 = load i32, ptr %2484, align 4, !tbaa !6
  %3029 = icmp slt i32 %3028, %3027
  br i1 %3029, label %3030, label %3031

3030:                                             ; preds = %3023
  store i32 %3027, ptr %2484, align 4, !tbaa !6
  br label %3031

3031:                                             ; preds = %3030, %3023
  %3032 = add nuw nsw i32 %2947, 1
  br i1 %2797, label %3033, label %3083

3033:                                             ; preds = %3031
  %3034 = load i32, ptr %4, align 4, !tbaa !6
  %3035 = load i32, ptr %12, align 4, !tbaa !6
  %3036 = add nsw i32 %3035, -1
  %3037 = icmp slt i32 %3034, %3036
  br i1 %3037, label %3060, label %3038

3038:                                             ; preds = %3033
  %3039 = icmp eq i32 %3034, %3036
  br i1 %3039, label %3040, label %3076

3040:                                             ; preds = %3038
  store i32 0, ptr %4, align 4, !tbaa !6
  %3041 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3041, ptr %6, align 4, !tbaa !6
  br i1 %2802, label %3083, label %3042

3042:                                             ; preds = %3040, %3070
  %3043 = phi i64 [ %3074, %3070 ], [ 1, %3040 ]
  %3044 = getelementptr inbounds i32, ptr %4, i64 %3043
  %3045 = load i32, ptr %3044, align 4, !tbaa !6
  %3046 = getelementptr inbounds i32, ptr %12, i64 %3043
  %3047 = load i32, ptr %3046, align 4, !tbaa !6
  %3048 = add nsw i32 %3047, -1
  %3049 = icmp slt i32 %3045, %3048
  br i1 %3049, label %3050, label %3068

3050:                                             ; preds = %3042
  br i1 %3037, label %3060, label %3051

3051:                                             ; preds = %3050
  %3052 = shl i64 %3043, 32
  %3053 = add i64 %3052, -4294967296
  %3054 = ashr exact i64 %3053, 32
  %3055 = getelementptr inbounds i32, ptr %7, i64 %3054
  %3056 = load i32, ptr %3055, align 4, !tbaa !6
  %3057 = getelementptr inbounds i32, ptr %6, i64 %3043
  %3058 = load i32, ptr %3057, align 4, !tbaa !6
  %3059 = add nsw i32 %3058, %3056
  store i32 %3059, ptr %3057, align 4, !tbaa !6
  br label %3078

3060:                                             ; preds = %3033, %3050
  %3061 = phi i32 [ %3045, %3050 ], [ %3034, %3033 ]
  %3062 = phi ptr [ %3044, %3050 ], [ %4, %3033 ]
  %3063 = phi i64 [ %3043, %3050 ], [ 0, %3033 ]
  %3064 = add nsw i32 %3061, 1
  store i32 %3064, ptr %3062, align 4, !tbaa !6
  %3065 = getelementptr inbounds i32, ptr %7, i64 %3063
  %3066 = load i32, ptr %3065, align 4, !tbaa !6
  %3067 = getelementptr inbounds i32, ptr %6, i64 %3063
  br label %3078

3068:                                             ; preds = %3042
  %3069 = icmp eq i32 %3045, %3048
  br i1 %3069, label %3070, label %3076

3070:                                             ; preds = %3068
  store i32 0, ptr %3044, align 4, !tbaa !6
  %3071 = getelementptr inbounds i32, ptr %8, i64 %3043
  %3072 = load i32, ptr %3071, align 4, !tbaa !6
  %3073 = getelementptr inbounds i32, ptr %6, i64 %3043
  store i32 %3072, ptr %3073, align 4, !tbaa !6
  %3074 = add nuw nsw i64 %3043, 1
  %3075 = icmp eq i64 %3074, %2800
  br i1 %3075, label %3083, label %3042, !llvm.loop !863

3076:                                             ; preds = %3038, %3068
  %3077 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1273, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5535

3078:                                             ; preds = %3051, %3060
  %3079 = phi ptr [ %3067, %3060 ], [ %3044, %3051 ]
  %3080 = phi i32 [ %3066, %3060 ], [ 1, %3051 ]
  %3081 = load i32, ptr %3079, align 4, !tbaa !6
  %3082 = add nsw i32 %3081, %3080
  store i32 %3082, ptr %3079, align 4, !tbaa !6
  br label %3083

3083:                                             ; preds = %3070, %3078, %3040, %3031
  %3084 = icmp eq i32 %3032, %5
  br i1 %3084, label %5530, label %2946, !llvm.loop !864

3085:                                             ; preds = %2488
  %3086 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1273, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5530

3087:                                             ; preds = %18
  %3088 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3089 = load ptr, ptr %3088, align 8, !tbaa !10
  %3090 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3091 = load ptr, ptr %3090, align 8, !tbaa !10
  %3092 = load i64, ptr %3089, align 8, !tbaa !121
  store i64 %3092, ptr %3091, align 8, !tbaa !121
  %3093 = icmp eq i32 %13, 0
  br i1 %3093, label %3094, label %3098

3094:                                             ; preds = %3087
  %3095 = load i64, ptr %3089, align 8, !tbaa !121
  %3096 = icmp slt i64 %3092, %3095
  br i1 %3096, label %3097, label %5530

3097:                                             ; preds = %3094
  store i64 %3095, ptr %3091, align 8, !tbaa !121
  br label %5530

3098:                                             ; preds = %3087
  switch i32 %1, label %3695 [
    i32 1, label %3099
    i32 0, label %3399
  ]

3099:                                             ; preds = %3098
  %3100 = getelementptr inbounds i32, ptr %3, i64 %19
  %3101 = load i32, ptr %3100, align 4, !tbaa !6
  %3102 = icmp eq i32 %3101, 0
  %3103 = icmp sgt i32 %5, 0
  br i1 %3102, label %3113, label %3104

3104:                                             ; preds = %3099
  br i1 %3103, label %3105, label %5530

3105:                                             ; preds = %3104
  %3106 = icmp sgt i32 %13, 1
  %3107 = icmp sgt i32 %13, 0
  %3108 = add i32 %13, -2
  %3109 = zext i32 %3108 to i64
  %3110 = zext i32 %13 to i64
  %3111 = add nuw i32 %5, 1
  %3112 = icmp eq i32 %13, 1
  br label %3260

3113:                                             ; preds = %3099
  br i1 %3103, label %3114, label %5530

3114:                                             ; preds = %3113
  %3115 = icmp sgt i32 %13, 1
  %3116 = icmp sgt i32 %13, 0
  %3117 = add i32 %13, -2
  %3118 = zext i32 %3117 to i64
  %3119 = zext i32 %13 to i64
  %3120 = add nuw i32 %5, 1
  %3121 = icmp eq i32 %13, 1
  br label %3122

3122:                                             ; preds = %3114, %3258
  %3123 = phi i64 [ %3092, %3114 ], [ %3208, %3258 ]
  %3124 = phi i32 [ 0, %3114 ], [ %3210, %3258 ]
  %3125 = phi double [ 0.000000e+00, %3114 ], [ %3209, %3258 ]
  %3126 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3115, label %3127, label %3196

3127:                                             ; preds = %3122, %3186
  %3128 = phi i32 [ %3195, %3186 ], [ 0, %3122 ]
  %3129 = phi i64 [ %3137, %3186 ], [ %3119, %3122 ]
  %3130 = phi i64 [ %3194, %3186 ], [ %3118, %3122 ]
  %3131 = phi i32 [ %3192, %3186 ], [ %3126, %3122 ]
  %3132 = sub i32 %3117, %3128
  %3133 = tail call i32 @llvm.smin.i32(i32 %3132, i32 0)
  %3134 = sub i32 %3132, %3133
  %3135 = zext i32 %3134 to i64
  %3136 = add nuw nsw i64 %3135, 1
  %3137 = add nsw i64 %3129, -1
  %3138 = icmp ult i32 %3134, 31
  br i1 %3138, label %3174, label %3139

3139:                                             ; preds = %3127
  %3140 = and i64 %3136, 8589934560
  %3141 = sub i64 %3130, %3140
  br label %3142

3142:                                             ; preds = %3142, %3139
  %3143 = phi i64 [ 0, %3139 ], [ %3166, %3142 ]
  %3144 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3139 ], [ %3162, %3142 ]
  %3145 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3139 ], [ %3163, %3142 ]
  %3146 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3139 ], [ %3164, %3142 ]
  %3147 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3139 ], [ %3165, %3142 ]
  %3148 = sub i64 %3130, %3143
  %3149 = getelementptr inbounds i32, ptr %9, i64 %3148
  %3150 = getelementptr inbounds i32, ptr %3149, i64 -7
  %3151 = load <8 x i32>, ptr %3150, align 4, !tbaa !6
  %3152 = shufflevector <8 x i32> %3151, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3153 = getelementptr inbounds i32, ptr %3149, i64 -15
  %3154 = load <8 x i32>, ptr %3153, align 4, !tbaa !6
  %3155 = shufflevector <8 x i32> %3154, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3156 = getelementptr inbounds i32, ptr %3149, i64 -23
  %3157 = load <8 x i32>, ptr %3156, align 4, !tbaa !6
  %3158 = shufflevector <8 x i32> %3157, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3159 = getelementptr inbounds i32, ptr %3149, i64 -31
  %3160 = load <8 x i32>, ptr %3159, align 4, !tbaa !6
  %3161 = shufflevector <8 x i32> %3160, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3162 = mul <8 x i32> %3152, %3144
  %3163 = mul <8 x i32> %3155, %3145
  %3164 = mul <8 x i32> %3158, %3146
  %3165 = mul <8 x i32> %3161, %3147
  %3166 = add nuw i64 %3143, 32
  %3167 = icmp eq i64 %3166, %3140
  br i1 %3167, label %3168, label %3142, !llvm.loop !865

3168:                                             ; preds = %3142
  %3169 = mul <8 x i32> %3163, %3162
  %3170 = mul <8 x i32> %3164, %3169
  %3171 = mul <8 x i32> %3165, %3170
  %3172 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3171)
  %3173 = icmp eq i64 %3136, %3140
  br i1 %3173, label %3186, label %3174

3174:                                             ; preds = %3127, %3168
  %3175 = phi i64 [ %3130, %3127 ], [ %3141, %3168 ]
  %3176 = phi i32 [ 1, %3127 ], [ %3172, %3168 ]
  br label %3177

3177:                                             ; preds = %3174, %3177
  %3178 = phi i64 [ %3183, %3177 ], [ %3175, %3174 ]
  %3179 = phi i32 [ %3182, %3177 ], [ %3176, %3174 ]
  %3180 = getelementptr inbounds i32, ptr %9, i64 %3178
  %3181 = load i32, ptr %3180, align 4, !tbaa !6
  %3182 = mul nsw i32 %3181, %3179
  %3183 = add nsw i64 %3178, -1
  %3184 = trunc i64 %3178 to i32
  %3185 = icmp sgt i32 %3184, 0
  br i1 %3185, label %3177, label %3186, !llvm.loop !866

3186:                                             ; preds = %3177, %3168
  %3187 = phi i32 [ %3172, %3168 ], [ %3182, %3177 ]
  %3188 = and i64 %3137, 4294967295
  %3189 = getelementptr inbounds i32, ptr %6, i64 %3188
  %3190 = load i32, ptr %3189, align 4, !tbaa !6
  %3191 = mul nsw i32 %3190, %3187
  %3192 = add nsw i32 %3191, %3131
  %3193 = icmp sgt i64 %3129, 2
  %3194 = add nsw i64 %3130, -1
  %3195 = add i32 %3128, 1
  br i1 %3193, label %3127, label %3196, !llvm.loop !867

3196:                                             ; preds = %3186, %3122
  %3197 = phi i32 [ %3126, %3122 ], [ %3192, %3186 ]
  %3198 = sext i32 %3197 to i64
  %3199 = getelementptr inbounds double, ptr %2, i64 %3198
  %3200 = load double, ptr %3199, align 8, !tbaa !19
  %3201 = getelementptr inbounds i64, ptr %3089, i64 %3198
  %3202 = load i64, ptr %3201, align 8, !tbaa !121
  %3203 = fcmp fast one double %3200, 0.000000e+00
  %3204 = icmp slt i64 %3123, %3202
  %3205 = select i1 %3203, i1 %3204, i1 false
  br i1 %3205, label %3206, label %3207

3206:                                             ; preds = %3196
  store i64 %3202, ptr %3091, align 8, !tbaa !121
  br label %3207

3207:                                             ; preds = %3206, %3196
  %3208 = phi i64 [ %3202, %3206 ], [ %3123, %3196 ]
  %3209 = fadd fast double %3200, %3125
  %3210 = add nuw nsw i32 %3124, 1
  br i1 %3116, label %3211, label %3258

3211:                                             ; preds = %3207
  %3212 = load i32, ptr %4, align 4, !tbaa !6
  %3213 = load i32, ptr %12, align 4, !tbaa !6
  %3214 = add nsw i32 %3213, -1
  %3215 = icmp slt i32 %3212, %3214
  br i1 %3215, label %3235, label %3216

3216:                                             ; preds = %3211
  %3217 = icmp eq i32 %3212, %3214
  br i1 %3217, label %3218, label %3251

3218:                                             ; preds = %3216
  store i32 0, ptr %4, align 4, !tbaa !6
  %3219 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3219, ptr %6, align 4, !tbaa !6
  br i1 %3121, label %3258, label %3220

3220:                                             ; preds = %3218, %3245
  %3221 = phi i64 [ %3249, %3245 ], [ 1, %3218 ]
  %3222 = getelementptr inbounds i32, ptr %4, i64 %3221
  %3223 = load i32, ptr %3222, align 4, !tbaa !6
  %3224 = getelementptr inbounds i32, ptr %12, i64 %3221
  %3225 = load i32, ptr %3224, align 4, !tbaa !6
  %3226 = add nsw i32 %3225, -1
  %3227 = icmp slt i32 %3223, %3226
  br i1 %3227, label %3228, label %3243

3228:                                             ; preds = %3220
  br i1 %3215, label %3235, label %3229

3229:                                             ; preds = %3228
  %3230 = getelementptr inbounds i32, ptr %7, i64 %3221
  %3231 = load i32, ptr %3230, align 4, !tbaa !6
  %3232 = getelementptr inbounds i32, ptr %6, i64 %3221
  %3233 = load i32, ptr %3232, align 4, !tbaa !6
  %3234 = add nsw i32 %3233, %3231
  store i32 %3234, ptr %3232, align 4, !tbaa !6
  br label %3253

3235:                                             ; preds = %3211, %3228
  %3236 = phi i32 [ %3223, %3228 ], [ %3212, %3211 ]
  %3237 = phi ptr [ %3222, %3228 ], [ %4, %3211 ]
  %3238 = phi i64 [ %3221, %3228 ], [ 0, %3211 ]
  %3239 = add nsw i32 %3236, 1
  store i32 %3239, ptr %3237, align 4, !tbaa !6
  %3240 = getelementptr inbounds i32, ptr %7, i64 %3238
  %3241 = load i32, ptr %3240, align 4, !tbaa !6
  %3242 = getelementptr inbounds i32, ptr %6, i64 %3238
  br label %3253

3243:                                             ; preds = %3220
  %3244 = icmp eq i32 %3223, %3226
  br i1 %3244, label %3245, label %3251

3245:                                             ; preds = %3243
  store i32 0, ptr %3222, align 4, !tbaa !6
  %3246 = getelementptr inbounds i32, ptr %8, i64 %3221
  %3247 = load i32, ptr %3246, align 4, !tbaa !6
  %3248 = getelementptr inbounds i32, ptr %6, i64 %3221
  store i32 %3247, ptr %3248, align 4, !tbaa !6
  %3249 = add nuw nsw i64 %3221, 1
  %3250 = icmp eq i64 %3249, %3119
  br i1 %3250, label %3258, label %3220, !llvm.loop !868

3251:                                             ; preds = %3216, %3243
  %3252 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1278, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5535

3253:                                             ; preds = %3229, %3235
  %3254 = phi ptr [ %3242, %3235 ], [ %3222, %3229 ]
  %3255 = phi i32 [ %3241, %3235 ], [ 1, %3229 ]
  %3256 = load i32, ptr %3254, align 4, !tbaa !6
  %3257 = add nsw i32 %3256, %3255
  store i32 %3257, ptr %3254, align 4, !tbaa !6
  br label %3258

3258:                                             ; preds = %3245, %3253, %3218, %3207
  %3259 = icmp eq i32 %3210, %5
  br i1 %3259, label %5530, label %3122, !llvm.loop !869

3260:                                             ; preds = %3105, %3397
  %3261 = phi i64 [ %3092, %3105 ], [ %3345, %3397 ]
  %3262 = phi i32 [ 0, %3105 ], [ %3346, %3397 ]
  %3263 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3106, label %3264, label %3333

3264:                                             ; preds = %3260, %3323
  %3265 = phi i32 [ %3332, %3323 ], [ 0, %3260 ]
  %3266 = phi i64 [ %3274, %3323 ], [ %3110, %3260 ]
  %3267 = phi i64 [ %3331, %3323 ], [ %3109, %3260 ]
  %3268 = phi i32 [ %3329, %3323 ], [ %3263, %3260 ]
  %3269 = sub i32 %3108, %3265
  %3270 = tail call i32 @llvm.smin.i32(i32 %3269, i32 0)
  %3271 = sub i32 %3269, %3270
  %3272 = zext i32 %3271 to i64
  %3273 = add nuw nsw i64 %3272, 1
  %3274 = add nsw i64 %3266, -1
  %3275 = icmp ult i32 %3271, 31
  br i1 %3275, label %3311, label %3276

3276:                                             ; preds = %3264
  %3277 = and i64 %3273, 8589934560
  %3278 = sub i64 %3267, %3277
  br label %3279

3279:                                             ; preds = %3279, %3276
  %3280 = phi i64 [ 0, %3276 ], [ %3303, %3279 ]
  %3281 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3276 ], [ %3299, %3279 ]
  %3282 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3276 ], [ %3300, %3279 ]
  %3283 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3276 ], [ %3301, %3279 ]
  %3284 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3276 ], [ %3302, %3279 ]
  %3285 = sub i64 %3267, %3280
  %3286 = getelementptr inbounds i32, ptr %11, i64 %3285
  %3287 = getelementptr inbounds i32, ptr %3286, i64 -7
  %3288 = load <8 x i32>, ptr %3287, align 4, !tbaa !6
  %3289 = shufflevector <8 x i32> %3288, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3290 = getelementptr inbounds i32, ptr %3286, i64 -15
  %3291 = load <8 x i32>, ptr %3290, align 4, !tbaa !6
  %3292 = shufflevector <8 x i32> %3291, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3293 = getelementptr inbounds i32, ptr %3286, i64 -23
  %3294 = load <8 x i32>, ptr %3293, align 4, !tbaa !6
  %3295 = shufflevector <8 x i32> %3294, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3296 = getelementptr inbounds i32, ptr %3286, i64 -31
  %3297 = load <8 x i32>, ptr %3296, align 4, !tbaa !6
  %3298 = shufflevector <8 x i32> %3297, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3299 = mul <8 x i32> %3289, %3281
  %3300 = mul <8 x i32> %3292, %3282
  %3301 = mul <8 x i32> %3295, %3283
  %3302 = mul <8 x i32> %3298, %3284
  %3303 = add nuw i64 %3280, 32
  %3304 = icmp eq i64 %3303, %3277
  br i1 %3304, label %3305, label %3279, !llvm.loop !870

3305:                                             ; preds = %3279
  %3306 = mul <8 x i32> %3300, %3299
  %3307 = mul <8 x i32> %3301, %3306
  %3308 = mul <8 x i32> %3302, %3307
  %3309 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3308)
  %3310 = icmp eq i64 %3273, %3277
  br i1 %3310, label %3323, label %3311

3311:                                             ; preds = %3264, %3305
  %3312 = phi i64 [ %3267, %3264 ], [ %3278, %3305 ]
  %3313 = phi i32 [ 1, %3264 ], [ %3309, %3305 ]
  br label %3314

3314:                                             ; preds = %3311, %3314
  %3315 = phi i64 [ %3320, %3314 ], [ %3312, %3311 ]
  %3316 = phi i32 [ %3319, %3314 ], [ %3313, %3311 ]
  %3317 = getelementptr inbounds i32, ptr %11, i64 %3315
  %3318 = load i32, ptr %3317, align 4, !tbaa !6
  %3319 = mul nsw i32 %3318, %3316
  %3320 = add nsw i64 %3315, -1
  %3321 = trunc i64 %3315 to i32
  %3322 = icmp sgt i32 %3321, 0
  br i1 %3322, label %3314, label %3323, !llvm.loop !871

3323:                                             ; preds = %3314, %3305
  %3324 = phi i32 [ %3309, %3305 ], [ %3319, %3314 ]
  %3325 = and i64 %3274, 4294967295
  %3326 = getelementptr inbounds i32, ptr %6, i64 %3325
  %3327 = load i32, ptr %3326, align 4, !tbaa !6
  %3328 = mul nsw i32 %3327, %3324
  %3329 = add nsw i32 %3328, %3268
  %3330 = icmp sgt i64 %3266, 2
  %3331 = add nsw i64 %3267, -1
  %3332 = add i32 %3265, 1
  br i1 %3330, label %3264, label %3333, !llvm.loop !872

3333:                                             ; preds = %3323, %3260
  %3334 = phi i32 [ %3263, %3260 ], [ %3329, %3323 ]
  %3335 = icmp slt i32 %3334, %5
  br i1 %3335, label %3338, label %3336

3336:                                             ; preds = %3333
  %3337 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1278, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5535

3338:                                             ; preds = %3333
  %3339 = sext i32 %3334 to i64
  %3340 = getelementptr inbounds i64, ptr %3089, i64 %3339
  %3341 = load i64, ptr %3340, align 8, !tbaa !121
  %3342 = icmp slt i64 %3261, %3341
  br i1 %3342, label %3343, label %3344

3343:                                             ; preds = %3338
  store i64 %3341, ptr %3091, align 8, !tbaa !121
  br label %3344

3344:                                             ; preds = %3338, %3343
  %3345 = phi i64 [ %3261, %3338 ], [ %3341, %3343 ]
  %3346 = add nuw nsw i32 %3262, 1
  br i1 %3107, label %3347, label %3397

3347:                                             ; preds = %3344
  %3348 = load i32, ptr %4, align 4, !tbaa !6
  %3349 = load i32, ptr %12, align 4, !tbaa !6
  %3350 = add nsw i32 %3349, -1
  %3351 = icmp slt i32 %3348, %3350
  br i1 %3351, label %3374, label %3352

3352:                                             ; preds = %3347
  %3353 = icmp eq i32 %3348, %3350
  br i1 %3353, label %3354, label %3390

3354:                                             ; preds = %3352
  store i32 0, ptr %4, align 4, !tbaa !6
  %3355 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3355, ptr %6, align 4, !tbaa !6
  br i1 %3112, label %3397, label %3356

3356:                                             ; preds = %3354, %3384
  %3357 = phi i64 [ %3388, %3384 ], [ 1, %3354 ]
  %3358 = getelementptr inbounds i32, ptr %4, i64 %3357
  %3359 = load i32, ptr %3358, align 4, !tbaa !6
  %3360 = getelementptr inbounds i32, ptr %12, i64 %3357
  %3361 = load i32, ptr %3360, align 4, !tbaa !6
  %3362 = add nsw i32 %3361, -1
  %3363 = icmp slt i32 %3359, %3362
  br i1 %3363, label %3364, label %3382

3364:                                             ; preds = %3356
  br i1 %3351, label %3374, label %3365

3365:                                             ; preds = %3364
  %3366 = shl i64 %3357, 32
  %3367 = add i64 %3366, -4294967296
  %3368 = ashr exact i64 %3367, 32
  %3369 = getelementptr inbounds i32, ptr %7, i64 %3368
  %3370 = load i32, ptr %3369, align 4, !tbaa !6
  %3371 = getelementptr inbounds i32, ptr %6, i64 %3357
  %3372 = load i32, ptr %3371, align 4, !tbaa !6
  %3373 = add nsw i32 %3372, %3370
  store i32 %3373, ptr %3371, align 4, !tbaa !6
  br label %3392

3374:                                             ; preds = %3347, %3364
  %3375 = phi i32 [ %3359, %3364 ], [ %3348, %3347 ]
  %3376 = phi ptr [ %3358, %3364 ], [ %4, %3347 ]
  %3377 = phi i64 [ %3357, %3364 ], [ 0, %3347 ]
  %3378 = add nsw i32 %3375, 1
  store i32 %3378, ptr %3376, align 4, !tbaa !6
  %3379 = getelementptr inbounds i32, ptr %7, i64 %3377
  %3380 = load i32, ptr %3379, align 4, !tbaa !6
  %3381 = getelementptr inbounds i32, ptr %6, i64 %3377
  br label %3392

3382:                                             ; preds = %3356
  %3383 = icmp eq i32 %3359, %3362
  br i1 %3383, label %3384, label %3390

3384:                                             ; preds = %3382
  store i32 0, ptr %3358, align 4, !tbaa !6
  %3385 = getelementptr inbounds i32, ptr %8, i64 %3357
  %3386 = load i32, ptr %3385, align 4, !tbaa !6
  %3387 = getelementptr inbounds i32, ptr %6, i64 %3357
  store i32 %3386, ptr %3387, align 4, !tbaa !6
  %3388 = add nuw nsw i64 %3357, 1
  %3389 = icmp eq i64 %3388, %3110
  br i1 %3389, label %3397, label %3356, !llvm.loop !873

3390:                                             ; preds = %3352, %3382
  %3391 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1278, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5535

3392:                                             ; preds = %3365, %3374
  %3393 = phi ptr [ %3381, %3374 ], [ %3358, %3365 ]
  %3394 = phi i32 [ %3380, %3374 ], [ 1, %3365 ]
  %3395 = load i32, ptr %3393, align 4, !tbaa !6
  %3396 = add nsw i32 %3395, %3394
  store i32 %3396, ptr %3393, align 4, !tbaa !6
  br label %3397

3397:                                             ; preds = %3384, %3392, %3354, %3344
  %3398 = icmp eq i32 %3346, %5
  br i1 %3398, label %5530, label %3260, !llvm.loop !874

3399:                                             ; preds = %3098
  %3400 = getelementptr inbounds i32, ptr %3, i64 %19
  %3401 = load i32, ptr %3400, align 4, !tbaa !6
  %3402 = icmp eq i32 %3401, 0
  %3403 = icmp sgt i32 %5, 0
  br i1 %3402, label %3413, label %3404

3404:                                             ; preds = %3399
  br i1 %3403, label %3405, label %5530

3405:                                             ; preds = %3404
  %3406 = icmp sgt i32 %13, 1
  %3407 = icmp sgt i32 %13, 0
  %3408 = add i32 %13, -2
  %3409 = zext i32 %3408 to i64
  %3410 = zext i32 %13 to i64
  %3411 = add nuw i32 %5, 1
  %3412 = icmp eq i32 %13, 1
  br label %3556

3413:                                             ; preds = %3399
  br i1 %3403, label %3414, label %5530

3414:                                             ; preds = %3413
  %3415 = icmp sgt i32 %13, 1
  %3416 = icmp sgt i32 %13, 0
  %3417 = add i32 %13, -2
  %3418 = zext i32 %3417 to i64
  %3419 = zext i32 %13 to i64
  %3420 = add nuw i32 %5, 1
  %3421 = icmp eq i32 %13, 1
  br label %3422

3422:                                             ; preds = %3414, %3554
  %3423 = phi i64 [ %3092, %3414 ], [ %3504, %3554 ]
  %3424 = phi i32 [ 0, %3414 ], [ %3506, %3554 ]
  %3425 = phi double [ 0.000000e+00, %3414 ], [ %3505, %3554 ]
  %3426 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3415, label %3427, label %3496

3427:                                             ; preds = %3422, %3486
  %3428 = phi i32 [ %3495, %3486 ], [ 0, %3422 ]
  %3429 = phi i64 [ %3437, %3486 ], [ %3419, %3422 ]
  %3430 = phi i64 [ %3494, %3486 ], [ %3418, %3422 ]
  %3431 = phi i32 [ %3492, %3486 ], [ %3426, %3422 ]
  %3432 = sub i32 %3417, %3428
  %3433 = tail call i32 @llvm.smin.i32(i32 %3432, i32 0)
  %3434 = sub i32 %3432, %3433
  %3435 = zext i32 %3434 to i64
  %3436 = add nuw nsw i64 %3435, 1
  %3437 = add nsw i64 %3429, -1
  %3438 = icmp ult i32 %3434, 31
  br i1 %3438, label %3474, label %3439

3439:                                             ; preds = %3427
  %3440 = and i64 %3436, 8589934560
  %3441 = sub i64 %3430, %3440
  br label %3442

3442:                                             ; preds = %3442, %3439
  %3443 = phi i64 [ 0, %3439 ], [ %3466, %3442 ]
  %3444 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3439 ], [ %3462, %3442 ]
  %3445 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3439 ], [ %3463, %3442 ]
  %3446 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3439 ], [ %3464, %3442 ]
  %3447 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3439 ], [ %3465, %3442 ]
  %3448 = sub i64 %3430, %3443
  %3449 = getelementptr inbounds i32, ptr %9, i64 %3448
  %3450 = getelementptr inbounds i32, ptr %3449, i64 -7
  %3451 = load <8 x i32>, ptr %3450, align 4, !tbaa !6
  %3452 = shufflevector <8 x i32> %3451, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3453 = getelementptr inbounds i32, ptr %3449, i64 -15
  %3454 = load <8 x i32>, ptr %3453, align 4, !tbaa !6
  %3455 = shufflevector <8 x i32> %3454, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3456 = getelementptr inbounds i32, ptr %3449, i64 -23
  %3457 = load <8 x i32>, ptr %3456, align 4, !tbaa !6
  %3458 = shufflevector <8 x i32> %3457, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3459 = getelementptr inbounds i32, ptr %3449, i64 -31
  %3460 = load <8 x i32>, ptr %3459, align 4, !tbaa !6
  %3461 = shufflevector <8 x i32> %3460, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3462 = mul <8 x i32> %3452, %3444
  %3463 = mul <8 x i32> %3455, %3445
  %3464 = mul <8 x i32> %3458, %3446
  %3465 = mul <8 x i32> %3461, %3447
  %3466 = add nuw i64 %3443, 32
  %3467 = icmp eq i64 %3466, %3440
  br i1 %3467, label %3468, label %3442, !llvm.loop !875

3468:                                             ; preds = %3442
  %3469 = mul <8 x i32> %3463, %3462
  %3470 = mul <8 x i32> %3464, %3469
  %3471 = mul <8 x i32> %3465, %3470
  %3472 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3471)
  %3473 = icmp eq i64 %3436, %3440
  br i1 %3473, label %3486, label %3474

3474:                                             ; preds = %3427, %3468
  %3475 = phi i64 [ %3430, %3427 ], [ %3441, %3468 ]
  %3476 = phi i32 [ 1, %3427 ], [ %3472, %3468 ]
  br label %3477

3477:                                             ; preds = %3474, %3477
  %3478 = phi i64 [ %3483, %3477 ], [ %3475, %3474 ]
  %3479 = phi i32 [ %3482, %3477 ], [ %3476, %3474 ]
  %3480 = getelementptr inbounds i32, ptr %9, i64 %3478
  %3481 = load i32, ptr %3480, align 4, !tbaa !6
  %3482 = mul nsw i32 %3481, %3479
  %3483 = add nsw i64 %3478, -1
  %3484 = trunc i64 %3478 to i32
  %3485 = icmp sgt i32 %3484, 0
  br i1 %3485, label %3477, label %3486, !llvm.loop !876

3486:                                             ; preds = %3477, %3468
  %3487 = phi i32 [ %3472, %3468 ], [ %3482, %3477 ]
  %3488 = and i64 %3437, 4294967295
  %3489 = getelementptr inbounds i32, ptr %6, i64 %3488
  %3490 = load i32, ptr %3489, align 4, !tbaa !6
  %3491 = mul nsw i32 %3490, %3487
  %3492 = add nsw i32 %3491, %3431
  %3493 = icmp sgt i64 %3429, 2
  %3494 = add nsw i64 %3430, -1
  %3495 = add i32 %3428, 1
  br i1 %3493, label %3427, label %3496, !llvm.loop !877

3496:                                             ; preds = %3486, %3422
  %3497 = phi i32 [ %3426, %3422 ], [ %3492, %3486 ]
  %3498 = sext i32 %3497 to i64
  %3499 = getelementptr inbounds i64, ptr %3089, i64 %3498
  %3500 = load i64, ptr %3499, align 8, !tbaa !121
  %3501 = icmp slt i64 %3423, %3500
  br i1 %3501, label %3502, label %3503

3502:                                             ; preds = %3496
  store i64 %3500, ptr %3091, align 8, !tbaa !121
  br label %3503

3503:                                             ; preds = %3502, %3496
  %3504 = phi i64 [ %3500, %3502 ], [ %3423, %3496 ]
  %3505 = fadd fast double %3425, 1.000000e+00
  %3506 = add nuw nsw i32 %3424, 1
  br i1 %3416, label %3507, label %3554

3507:                                             ; preds = %3503
  %3508 = load i32, ptr %4, align 4, !tbaa !6
  %3509 = load i32, ptr %12, align 4, !tbaa !6
  %3510 = add nsw i32 %3509, -1
  %3511 = icmp slt i32 %3508, %3510
  br i1 %3511, label %3531, label %3512

3512:                                             ; preds = %3507
  %3513 = icmp eq i32 %3508, %3510
  br i1 %3513, label %3514, label %3547

3514:                                             ; preds = %3512
  store i32 0, ptr %4, align 4, !tbaa !6
  %3515 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3515, ptr %6, align 4, !tbaa !6
  br i1 %3421, label %3554, label %3516

3516:                                             ; preds = %3514, %3541
  %3517 = phi i64 [ %3545, %3541 ], [ 1, %3514 ]
  %3518 = getelementptr inbounds i32, ptr %4, i64 %3517
  %3519 = load i32, ptr %3518, align 4, !tbaa !6
  %3520 = getelementptr inbounds i32, ptr %12, i64 %3517
  %3521 = load i32, ptr %3520, align 4, !tbaa !6
  %3522 = add nsw i32 %3521, -1
  %3523 = icmp slt i32 %3519, %3522
  br i1 %3523, label %3524, label %3539

3524:                                             ; preds = %3516
  br i1 %3511, label %3531, label %3525

3525:                                             ; preds = %3524
  %3526 = getelementptr inbounds i32, ptr %7, i64 %3517
  %3527 = load i32, ptr %3526, align 4, !tbaa !6
  %3528 = getelementptr inbounds i32, ptr %6, i64 %3517
  %3529 = load i32, ptr %3528, align 4, !tbaa !6
  %3530 = add nsw i32 %3529, %3527
  store i32 %3530, ptr %3528, align 4, !tbaa !6
  br label %3549

3531:                                             ; preds = %3507, %3524
  %3532 = phi i32 [ %3519, %3524 ], [ %3508, %3507 ]
  %3533 = phi ptr [ %3518, %3524 ], [ %4, %3507 ]
  %3534 = phi i64 [ %3517, %3524 ], [ 0, %3507 ]
  %3535 = add nsw i32 %3532, 1
  store i32 %3535, ptr %3533, align 4, !tbaa !6
  %3536 = getelementptr inbounds i32, ptr %7, i64 %3534
  %3537 = load i32, ptr %3536, align 4, !tbaa !6
  %3538 = getelementptr inbounds i32, ptr %6, i64 %3534
  br label %3549

3539:                                             ; preds = %3516
  %3540 = icmp eq i32 %3519, %3522
  br i1 %3540, label %3541, label %3547

3541:                                             ; preds = %3539
  store i32 0, ptr %3518, align 4, !tbaa !6
  %3542 = getelementptr inbounds i32, ptr %8, i64 %3517
  %3543 = load i32, ptr %3542, align 4, !tbaa !6
  %3544 = getelementptr inbounds i32, ptr %6, i64 %3517
  store i32 %3543, ptr %3544, align 4, !tbaa !6
  %3545 = add nuw nsw i64 %3517, 1
  %3546 = icmp eq i64 %3545, %3419
  br i1 %3546, label %3554, label %3516, !llvm.loop !878

3547:                                             ; preds = %3512, %3539
  %3548 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1278, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5535

3549:                                             ; preds = %3525, %3531
  %3550 = phi ptr [ %3538, %3531 ], [ %3518, %3525 ]
  %3551 = phi i32 [ %3537, %3531 ], [ 1, %3525 ]
  %3552 = load i32, ptr %3550, align 4, !tbaa !6
  %3553 = add nsw i32 %3552, %3551
  store i32 %3553, ptr %3550, align 4, !tbaa !6
  br label %3554

3554:                                             ; preds = %3541, %3549, %3514, %3503
  %3555 = icmp eq i32 %3506, %5
  br i1 %3555, label %5530, label %3422, !llvm.loop !879

3556:                                             ; preds = %3405, %3693
  %3557 = phi i64 [ %3092, %3405 ], [ %3641, %3693 ]
  %3558 = phi i32 [ 0, %3405 ], [ %3642, %3693 ]
  %3559 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3406, label %3560, label %3629

3560:                                             ; preds = %3556, %3619
  %3561 = phi i32 [ %3628, %3619 ], [ 0, %3556 ]
  %3562 = phi i64 [ %3570, %3619 ], [ %3410, %3556 ]
  %3563 = phi i64 [ %3627, %3619 ], [ %3409, %3556 ]
  %3564 = phi i32 [ %3625, %3619 ], [ %3559, %3556 ]
  %3565 = sub i32 %3408, %3561
  %3566 = tail call i32 @llvm.smin.i32(i32 %3565, i32 0)
  %3567 = sub i32 %3565, %3566
  %3568 = zext i32 %3567 to i64
  %3569 = add nuw nsw i64 %3568, 1
  %3570 = add nsw i64 %3562, -1
  %3571 = icmp ult i32 %3567, 31
  br i1 %3571, label %3607, label %3572

3572:                                             ; preds = %3560
  %3573 = and i64 %3569, 8589934560
  %3574 = sub i64 %3563, %3573
  br label %3575

3575:                                             ; preds = %3575, %3572
  %3576 = phi i64 [ 0, %3572 ], [ %3599, %3575 ]
  %3577 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3572 ], [ %3595, %3575 ]
  %3578 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3572 ], [ %3596, %3575 ]
  %3579 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3572 ], [ %3597, %3575 ]
  %3580 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3572 ], [ %3598, %3575 ]
  %3581 = sub i64 %3563, %3576
  %3582 = getelementptr inbounds i32, ptr %11, i64 %3581
  %3583 = getelementptr inbounds i32, ptr %3582, i64 -7
  %3584 = load <8 x i32>, ptr %3583, align 4, !tbaa !6
  %3585 = shufflevector <8 x i32> %3584, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3586 = getelementptr inbounds i32, ptr %3582, i64 -15
  %3587 = load <8 x i32>, ptr %3586, align 4, !tbaa !6
  %3588 = shufflevector <8 x i32> %3587, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3589 = getelementptr inbounds i32, ptr %3582, i64 -23
  %3590 = load <8 x i32>, ptr %3589, align 4, !tbaa !6
  %3591 = shufflevector <8 x i32> %3590, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3592 = getelementptr inbounds i32, ptr %3582, i64 -31
  %3593 = load <8 x i32>, ptr %3592, align 4, !tbaa !6
  %3594 = shufflevector <8 x i32> %3593, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3595 = mul <8 x i32> %3585, %3577
  %3596 = mul <8 x i32> %3588, %3578
  %3597 = mul <8 x i32> %3591, %3579
  %3598 = mul <8 x i32> %3594, %3580
  %3599 = add nuw i64 %3576, 32
  %3600 = icmp eq i64 %3599, %3573
  br i1 %3600, label %3601, label %3575, !llvm.loop !880

3601:                                             ; preds = %3575
  %3602 = mul <8 x i32> %3596, %3595
  %3603 = mul <8 x i32> %3597, %3602
  %3604 = mul <8 x i32> %3598, %3603
  %3605 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3604)
  %3606 = icmp eq i64 %3569, %3573
  br i1 %3606, label %3619, label %3607

3607:                                             ; preds = %3560, %3601
  %3608 = phi i64 [ %3563, %3560 ], [ %3574, %3601 ]
  %3609 = phi i32 [ 1, %3560 ], [ %3605, %3601 ]
  br label %3610

3610:                                             ; preds = %3607, %3610
  %3611 = phi i64 [ %3616, %3610 ], [ %3608, %3607 ]
  %3612 = phi i32 [ %3615, %3610 ], [ %3609, %3607 ]
  %3613 = getelementptr inbounds i32, ptr %11, i64 %3611
  %3614 = load i32, ptr %3613, align 4, !tbaa !6
  %3615 = mul nsw i32 %3614, %3612
  %3616 = add nsw i64 %3611, -1
  %3617 = trunc i64 %3611 to i32
  %3618 = icmp sgt i32 %3617, 0
  br i1 %3618, label %3610, label %3619, !llvm.loop !881

3619:                                             ; preds = %3610, %3601
  %3620 = phi i32 [ %3605, %3601 ], [ %3615, %3610 ]
  %3621 = and i64 %3570, 4294967295
  %3622 = getelementptr inbounds i32, ptr %6, i64 %3621
  %3623 = load i32, ptr %3622, align 4, !tbaa !6
  %3624 = mul nsw i32 %3623, %3620
  %3625 = add nsw i32 %3624, %3564
  %3626 = icmp sgt i64 %3562, 2
  %3627 = add nsw i64 %3563, -1
  %3628 = add i32 %3561, 1
  br i1 %3626, label %3560, label %3629, !llvm.loop !882

3629:                                             ; preds = %3619, %3556
  %3630 = phi i32 [ %3559, %3556 ], [ %3625, %3619 ]
  %3631 = icmp slt i32 %3630, %5
  br i1 %3631, label %3634, label %3632

3632:                                             ; preds = %3629
  %3633 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1278, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5535

3634:                                             ; preds = %3629
  %3635 = sext i32 %3630 to i64
  %3636 = getelementptr inbounds i64, ptr %3089, i64 %3635
  %3637 = load i64, ptr %3636, align 8, !tbaa !121
  %3638 = icmp slt i64 %3557, %3637
  br i1 %3638, label %3639, label %3640

3639:                                             ; preds = %3634
  store i64 %3637, ptr %3091, align 8, !tbaa !121
  br label %3640

3640:                                             ; preds = %3639, %3634
  %3641 = phi i64 [ %3637, %3639 ], [ %3557, %3634 ]
  %3642 = add nuw nsw i32 %3558, 1
  br i1 %3407, label %3643, label %3693

3643:                                             ; preds = %3640
  %3644 = load i32, ptr %4, align 4, !tbaa !6
  %3645 = load i32, ptr %12, align 4, !tbaa !6
  %3646 = add nsw i32 %3645, -1
  %3647 = icmp slt i32 %3644, %3646
  br i1 %3647, label %3670, label %3648

3648:                                             ; preds = %3643
  %3649 = icmp eq i32 %3644, %3646
  br i1 %3649, label %3650, label %3686

3650:                                             ; preds = %3648
  store i32 0, ptr %4, align 4, !tbaa !6
  %3651 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3651, ptr %6, align 4, !tbaa !6
  br i1 %3412, label %3693, label %3652

3652:                                             ; preds = %3650, %3680
  %3653 = phi i64 [ %3684, %3680 ], [ 1, %3650 ]
  %3654 = getelementptr inbounds i32, ptr %4, i64 %3653
  %3655 = load i32, ptr %3654, align 4, !tbaa !6
  %3656 = getelementptr inbounds i32, ptr %12, i64 %3653
  %3657 = load i32, ptr %3656, align 4, !tbaa !6
  %3658 = add nsw i32 %3657, -1
  %3659 = icmp slt i32 %3655, %3658
  br i1 %3659, label %3660, label %3678

3660:                                             ; preds = %3652
  br i1 %3647, label %3670, label %3661

3661:                                             ; preds = %3660
  %3662 = shl i64 %3653, 32
  %3663 = add i64 %3662, -4294967296
  %3664 = ashr exact i64 %3663, 32
  %3665 = getelementptr inbounds i32, ptr %7, i64 %3664
  %3666 = load i32, ptr %3665, align 4, !tbaa !6
  %3667 = getelementptr inbounds i32, ptr %6, i64 %3653
  %3668 = load i32, ptr %3667, align 4, !tbaa !6
  %3669 = add nsw i32 %3668, %3666
  store i32 %3669, ptr %3667, align 4, !tbaa !6
  br label %3688

3670:                                             ; preds = %3643, %3660
  %3671 = phi i32 [ %3655, %3660 ], [ %3644, %3643 ]
  %3672 = phi ptr [ %3654, %3660 ], [ %4, %3643 ]
  %3673 = phi i64 [ %3653, %3660 ], [ 0, %3643 ]
  %3674 = add nsw i32 %3671, 1
  store i32 %3674, ptr %3672, align 4, !tbaa !6
  %3675 = getelementptr inbounds i32, ptr %7, i64 %3673
  %3676 = load i32, ptr %3675, align 4, !tbaa !6
  %3677 = getelementptr inbounds i32, ptr %6, i64 %3673
  br label %3688

3678:                                             ; preds = %3652
  %3679 = icmp eq i32 %3655, %3658
  br i1 %3679, label %3680, label %3686

3680:                                             ; preds = %3678
  store i32 0, ptr %3654, align 4, !tbaa !6
  %3681 = getelementptr inbounds i32, ptr %8, i64 %3653
  %3682 = load i32, ptr %3681, align 4, !tbaa !6
  %3683 = getelementptr inbounds i32, ptr %6, i64 %3653
  store i32 %3682, ptr %3683, align 4, !tbaa !6
  %3684 = add nuw nsw i64 %3653, 1
  %3685 = icmp eq i64 %3684, %3410
  br i1 %3685, label %3693, label %3652, !llvm.loop !883

3686:                                             ; preds = %3648, %3678
  %3687 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1278, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5535

3688:                                             ; preds = %3661, %3670
  %3689 = phi ptr [ %3677, %3670 ], [ %3654, %3661 ]
  %3690 = phi i32 [ %3676, %3670 ], [ 1, %3661 ]
  %3691 = load i32, ptr %3689, align 4, !tbaa !6
  %3692 = add nsw i32 %3691, %3690
  store i32 %3692, ptr %3689, align 4, !tbaa !6
  br label %3693

3693:                                             ; preds = %3680, %3688, %3650, %3640
  %3694 = icmp eq i32 %3642, %5
  br i1 %3694, label %5530, label %3556, !llvm.loop !884

3695:                                             ; preds = %3098
  %3696 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1278, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5530

3697:                                             ; preds = %18
  %3698 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3699 = load ptr, ptr %3698, align 8, !tbaa !10
  %3700 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3701 = load ptr, ptr %3700, align 8, !tbaa !10
  %3702 = load i64, ptr %3699, align 8, !tbaa !121
  %3703 = sitofp i64 %3702 to double
  store double %3703, ptr %3701, align 8, !tbaa !19
  %3704 = icmp eq i32 %13, 0
  br i1 %3704, label %5530, label %3705

3705:                                             ; preds = %3697
  switch i32 %1, label %4306 [
    i32 1, label %3706
    i32 0, label %4008
  ]

3706:                                             ; preds = %3705
  %3707 = getelementptr inbounds i32, ptr %3, i64 %19
  %3708 = load i32, ptr %3707, align 4, !tbaa !6
  %3709 = icmp eq i32 %3708, 0
  %3710 = icmp sgt i32 %5, 0
  br i1 %3709, label %3720, label %3711

3711:                                             ; preds = %3706
  br i1 %3710, label %3712, label %5530

3712:                                             ; preds = %3711
  %3713 = icmp sgt i32 %13, 1
  %3714 = icmp sgt i32 %13, 0
  %3715 = add i32 %13, -2
  %3716 = zext i32 %3715 to i64
  %3717 = zext i32 %13 to i64
  %3718 = add nuw i32 %5, 1
  %3719 = icmp eq i32 %13, 1
  br label %3868

3720:                                             ; preds = %3706
  br i1 %3710, label %3721, label %5530

3721:                                             ; preds = %3720
  %3722 = icmp sgt i32 %13, 1
  %3723 = icmp sgt i32 %13, 0
  %3724 = add i32 %13, -2
  %3725 = zext i32 %3724 to i64
  %3726 = zext i32 %13 to i64
  %3727 = add nuw i32 %5, 1
  %3728 = icmp eq i32 %13, 1
  br label %3729

3729:                                             ; preds = %3721, %3866
  %3730 = phi double [ %3703, %3721 ], [ %3816, %3866 ]
  %3731 = phi i32 [ 0, %3721 ], [ %3818, %3866 ]
  %3732 = phi double [ 0.000000e+00, %3721 ], [ %3817, %3866 ]
  %3733 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3722, label %3734, label %3803

3734:                                             ; preds = %3729, %3793
  %3735 = phi i32 [ %3802, %3793 ], [ 0, %3729 ]
  %3736 = phi i64 [ %3744, %3793 ], [ %3726, %3729 ]
  %3737 = phi i64 [ %3801, %3793 ], [ %3725, %3729 ]
  %3738 = phi i32 [ %3799, %3793 ], [ %3733, %3729 ]
  %3739 = sub i32 %3724, %3735
  %3740 = tail call i32 @llvm.smin.i32(i32 %3739, i32 0)
  %3741 = sub i32 %3739, %3740
  %3742 = zext i32 %3741 to i64
  %3743 = add nuw nsw i64 %3742, 1
  %3744 = add nsw i64 %3736, -1
  %3745 = icmp ult i32 %3741, 31
  br i1 %3745, label %3781, label %3746

3746:                                             ; preds = %3734
  %3747 = and i64 %3743, 8589934560
  %3748 = sub i64 %3737, %3747
  br label %3749

3749:                                             ; preds = %3749, %3746
  %3750 = phi i64 [ 0, %3746 ], [ %3773, %3749 ]
  %3751 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3746 ], [ %3769, %3749 ]
  %3752 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3746 ], [ %3770, %3749 ]
  %3753 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3746 ], [ %3771, %3749 ]
  %3754 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3746 ], [ %3772, %3749 ]
  %3755 = sub i64 %3737, %3750
  %3756 = getelementptr inbounds i32, ptr %9, i64 %3755
  %3757 = getelementptr inbounds i32, ptr %3756, i64 -7
  %3758 = load <8 x i32>, ptr %3757, align 4, !tbaa !6
  %3759 = shufflevector <8 x i32> %3758, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3760 = getelementptr inbounds i32, ptr %3756, i64 -15
  %3761 = load <8 x i32>, ptr %3760, align 4, !tbaa !6
  %3762 = shufflevector <8 x i32> %3761, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3763 = getelementptr inbounds i32, ptr %3756, i64 -23
  %3764 = load <8 x i32>, ptr %3763, align 4, !tbaa !6
  %3765 = shufflevector <8 x i32> %3764, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3766 = getelementptr inbounds i32, ptr %3756, i64 -31
  %3767 = load <8 x i32>, ptr %3766, align 4, !tbaa !6
  %3768 = shufflevector <8 x i32> %3767, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3769 = mul <8 x i32> %3759, %3751
  %3770 = mul <8 x i32> %3762, %3752
  %3771 = mul <8 x i32> %3765, %3753
  %3772 = mul <8 x i32> %3768, %3754
  %3773 = add nuw i64 %3750, 32
  %3774 = icmp eq i64 %3773, %3747
  br i1 %3774, label %3775, label %3749, !llvm.loop !885

3775:                                             ; preds = %3749
  %3776 = mul <8 x i32> %3770, %3769
  %3777 = mul <8 x i32> %3771, %3776
  %3778 = mul <8 x i32> %3772, %3777
  %3779 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3778)
  %3780 = icmp eq i64 %3743, %3747
  br i1 %3780, label %3793, label %3781

3781:                                             ; preds = %3734, %3775
  %3782 = phi i64 [ %3737, %3734 ], [ %3748, %3775 ]
  %3783 = phi i32 [ 1, %3734 ], [ %3779, %3775 ]
  br label %3784

3784:                                             ; preds = %3781, %3784
  %3785 = phi i64 [ %3790, %3784 ], [ %3782, %3781 ]
  %3786 = phi i32 [ %3789, %3784 ], [ %3783, %3781 ]
  %3787 = getelementptr inbounds i32, ptr %9, i64 %3785
  %3788 = load i32, ptr %3787, align 4, !tbaa !6
  %3789 = mul nsw i32 %3788, %3786
  %3790 = add nsw i64 %3785, -1
  %3791 = trunc i64 %3785 to i32
  %3792 = icmp sgt i32 %3791, 0
  br i1 %3792, label %3784, label %3793, !llvm.loop !886

3793:                                             ; preds = %3784, %3775
  %3794 = phi i32 [ %3779, %3775 ], [ %3789, %3784 ]
  %3795 = and i64 %3744, 4294967295
  %3796 = getelementptr inbounds i32, ptr %6, i64 %3795
  %3797 = load i32, ptr %3796, align 4, !tbaa !6
  %3798 = mul nsw i32 %3797, %3794
  %3799 = add nsw i32 %3798, %3738
  %3800 = icmp sgt i64 %3736, 2
  %3801 = add nsw i64 %3737, -1
  %3802 = add i32 %3735, 1
  br i1 %3800, label %3734, label %3803, !llvm.loop !887

3803:                                             ; preds = %3793, %3729
  %3804 = phi i32 [ %3733, %3729 ], [ %3799, %3793 ]
  %3805 = sext i32 %3804 to i64
  %3806 = getelementptr inbounds double, ptr %2, i64 %3805
  %3807 = load double, ptr %3806, align 8, !tbaa !19
  %3808 = getelementptr inbounds i64, ptr %3699, i64 %3805
  %3809 = load i64, ptr %3808, align 8, !tbaa !121
  %3810 = sitofp i64 %3809 to double
  %3811 = fcmp fast one double %3807, 0.000000e+00
  %3812 = fcmp fast olt double %3730, %3810
  %3813 = select i1 %3811, i1 %3812, i1 false
  br i1 %3813, label %3814, label %3815

3814:                                             ; preds = %3803
  store double %3810, ptr %3701, align 8, !tbaa !19
  br label %3815

3815:                                             ; preds = %3814, %3803
  %3816 = phi double [ %3810, %3814 ], [ %3730, %3803 ]
  %3817 = fadd fast double %3807, %3732
  %3818 = add nuw nsw i32 %3731, 1
  br i1 %3723, label %3819, label %3866

3819:                                             ; preds = %3815
  %3820 = load i32, ptr %4, align 4, !tbaa !6
  %3821 = load i32, ptr %12, align 4, !tbaa !6
  %3822 = add nsw i32 %3821, -1
  %3823 = icmp slt i32 %3820, %3822
  br i1 %3823, label %3843, label %3824

3824:                                             ; preds = %3819
  %3825 = icmp eq i32 %3820, %3822
  br i1 %3825, label %3826, label %3859

3826:                                             ; preds = %3824
  store i32 0, ptr %4, align 4, !tbaa !6
  %3827 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3827, ptr %6, align 4, !tbaa !6
  br i1 %3728, label %3866, label %3828

3828:                                             ; preds = %3826, %3853
  %3829 = phi i64 [ %3857, %3853 ], [ 1, %3826 ]
  %3830 = getelementptr inbounds i32, ptr %4, i64 %3829
  %3831 = load i32, ptr %3830, align 4, !tbaa !6
  %3832 = getelementptr inbounds i32, ptr %12, i64 %3829
  %3833 = load i32, ptr %3832, align 4, !tbaa !6
  %3834 = add nsw i32 %3833, -1
  %3835 = icmp slt i32 %3831, %3834
  br i1 %3835, label %3836, label %3851

3836:                                             ; preds = %3828
  br i1 %3823, label %3843, label %3837

3837:                                             ; preds = %3836
  %3838 = getelementptr inbounds i32, ptr %7, i64 %3829
  %3839 = load i32, ptr %3838, align 4, !tbaa !6
  %3840 = getelementptr inbounds i32, ptr %6, i64 %3829
  %3841 = load i32, ptr %3840, align 4, !tbaa !6
  %3842 = add nsw i32 %3841, %3839
  store i32 %3842, ptr %3840, align 4, !tbaa !6
  br label %3861

3843:                                             ; preds = %3819, %3836
  %3844 = phi i32 [ %3831, %3836 ], [ %3820, %3819 ]
  %3845 = phi ptr [ %3830, %3836 ], [ %4, %3819 ]
  %3846 = phi i64 [ %3829, %3836 ], [ 0, %3819 ]
  %3847 = add nsw i32 %3844, 1
  store i32 %3847, ptr %3845, align 4, !tbaa !6
  %3848 = getelementptr inbounds i32, ptr %7, i64 %3846
  %3849 = load i32, ptr %3848, align 4, !tbaa !6
  %3850 = getelementptr inbounds i32, ptr %6, i64 %3846
  br label %3861

3851:                                             ; preds = %3828
  %3852 = icmp eq i32 %3831, %3834
  br i1 %3852, label %3853, label %3859

3853:                                             ; preds = %3851
  store i32 0, ptr %3830, align 4, !tbaa !6
  %3854 = getelementptr inbounds i32, ptr %8, i64 %3829
  %3855 = load i32, ptr %3854, align 4, !tbaa !6
  %3856 = getelementptr inbounds i32, ptr %6, i64 %3829
  store i32 %3855, ptr %3856, align 4, !tbaa !6
  %3857 = add nuw nsw i64 %3829, 1
  %3858 = icmp eq i64 %3857, %3726
  br i1 %3858, label %3866, label %3828, !llvm.loop !888

3859:                                             ; preds = %3824, %3851
  %3860 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1282, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5535

3861:                                             ; preds = %3837, %3843
  %3862 = phi ptr [ %3850, %3843 ], [ %3830, %3837 ]
  %3863 = phi i32 [ %3849, %3843 ], [ 1, %3837 ]
  %3864 = load i32, ptr %3862, align 4, !tbaa !6
  %3865 = add nsw i32 %3864, %3863
  store i32 %3865, ptr %3862, align 4, !tbaa !6
  br label %3866

3866:                                             ; preds = %3853, %3861, %3826, %3815
  %3867 = icmp eq i32 %3818, %5
  br i1 %3867, label %5530, label %3729, !llvm.loop !889

3868:                                             ; preds = %3712, %4006
  %3869 = phi double [ %3703, %3712 ], [ %3954, %4006 ]
  %3870 = phi i32 [ 0, %3712 ], [ %3955, %4006 ]
  %3871 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3713, label %3872, label %3941

3872:                                             ; preds = %3868, %3931
  %3873 = phi i32 [ %3940, %3931 ], [ 0, %3868 ]
  %3874 = phi i64 [ %3882, %3931 ], [ %3717, %3868 ]
  %3875 = phi i64 [ %3939, %3931 ], [ %3716, %3868 ]
  %3876 = phi i32 [ %3937, %3931 ], [ %3871, %3868 ]
  %3877 = sub i32 %3715, %3873
  %3878 = tail call i32 @llvm.smin.i32(i32 %3877, i32 0)
  %3879 = sub i32 %3877, %3878
  %3880 = zext i32 %3879 to i64
  %3881 = add nuw nsw i64 %3880, 1
  %3882 = add nsw i64 %3874, -1
  %3883 = icmp ult i32 %3879, 31
  br i1 %3883, label %3919, label %3884

3884:                                             ; preds = %3872
  %3885 = and i64 %3881, 8589934560
  %3886 = sub i64 %3875, %3885
  br label %3887

3887:                                             ; preds = %3887, %3884
  %3888 = phi i64 [ 0, %3884 ], [ %3911, %3887 ]
  %3889 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3884 ], [ %3907, %3887 ]
  %3890 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3884 ], [ %3908, %3887 ]
  %3891 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3884 ], [ %3909, %3887 ]
  %3892 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3884 ], [ %3910, %3887 ]
  %3893 = sub i64 %3875, %3888
  %3894 = getelementptr inbounds i32, ptr %11, i64 %3893
  %3895 = getelementptr inbounds i32, ptr %3894, i64 -7
  %3896 = load <8 x i32>, ptr %3895, align 4, !tbaa !6
  %3897 = shufflevector <8 x i32> %3896, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3898 = getelementptr inbounds i32, ptr %3894, i64 -15
  %3899 = load <8 x i32>, ptr %3898, align 4, !tbaa !6
  %3900 = shufflevector <8 x i32> %3899, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3901 = getelementptr inbounds i32, ptr %3894, i64 -23
  %3902 = load <8 x i32>, ptr %3901, align 4, !tbaa !6
  %3903 = shufflevector <8 x i32> %3902, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3904 = getelementptr inbounds i32, ptr %3894, i64 -31
  %3905 = load <8 x i32>, ptr %3904, align 4, !tbaa !6
  %3906 = shufflevector <8 x i32> %3905, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3907 = mul <8 x i32> %3897, %3889
  %3908 = mul <8 x i32> %3900, %3890
  %3909 = mul <8 x i32> %3903, %3891
  %3910 = mul <8 x i32> %3906, %3892
  %3911 = add nuw i64 %3888, 32
  %3912 = icmp eq i64 %3911, %3885
  br i1 %3912, label %3913, label %3887, !llvm.loop !890

3913:                                             ; preds = %3887
  %3914 = mul <8 x i32> %3908, %3907
  %3915 = mul <8 x i32> %3909, %3914
  %3916 = mul <8 x i32> %3910, %3915
  %3917 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3916)
  %3918 = icmp eq i64 %3881, %3885
  br i1 %3918, label %3931, label %3919

3919:                                             ; preds = %3872, %3913
  %3920 = phi i64 [ %3875, %3872 ], [ %3886, %3913 ]
  %3921 = phi i32 [ 1, %3872 ], [ %3917, %3913 ]
  br label %3922

3922:                                             ; preds = %3919, %3922
  %3923 = phi i64 [ %3928, %3922 ], [ %3920, %3919 ]
  %3924 = phi i32 [ %3927, %3922 ], [ %3921, %3919 ]
  %3925 = getelementptr inbounds i32, ptr %11, i64 %3923
  %3926 = load i32, ptr %3925, align 4, !tbaa !6
  %3927 = mul nsw i32 %3926, %3924
  %3928 = add nsw i64 %3923, -1
  %3929 = trunc i64 %3923 to i32
  %3930 = icmp sgt i32 %3929, 0
  br i1 %3930, label %3922, label %3931, !llvm.loop !891

3931:                                             ; preds = %3922, %3913
  %3932 = phi i32 [ %3917, %3913 ], [ %3927, %3922 ]
  %3933 = and i64 %3882, 4294967295
  %3934 = getelementptr inbounds i32, ptr %6, i64 %3933
  %3935 = load i32, ptr %3934, align 4, !tbaa !6
  %3936 = mul nsw i32 %3935, %3932
  %3937 = add nsw i32 %3936, %3876
  %3938 = icmp sgt i64 %3874, 2
  %3939 = add nsw i64 %3875, -1
  %3940 = add i32 %3873, 1
  br i1 %3938, label %3872, label %3941, !llvm.loop !892

3941:                                             ; preds = %3931, %3868
  %3942 = phi i32 [ %3871, %3868 ], [ %3937, %3931 ]
  %3943 = icmp slt i32 %3942, %5
  br i1 %3943, label %3946, label %3944

3944:                                             ; preds = %3941
  %3945 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1282, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5535

3946:                                             ; preds = %3941
  %3947 = sext i32 %3942 to i64
  %3948 = getelementptr inbounds i64, ptr %3699, i64 %3947
  %3949 = load i64, ptr %3948, align 8, !tbaa !121
  %3950 = sitofp i64 %3949 to double
  %3951 = fcmp fast olt double %3869, %3950
  br i1 %3951, label %3952, label %3953

3952:                                             ; preds = %3946
  store double %3950, ptr %3701, align 8, !tbaa !19
  br label %3953

3953:                                             ; preds = %3946, %3952
  %3954 = phi double [ %3869, %3946 ], [ %3950, %3952 ]
  %3955 = add nuw nsw i32 %3870, 1
  br i1 %3714, label %3956, label %4006

3956:                                             ; preds = %3953
  %3957 = load i32, ptr %4, align 4, !tbaa !6
  %3958 = load i32, ptr %12, align 4, !tbaa !6
  %3959 = add nsw i32 %3958, -1
  %3960 = icmp slt i32 %3957, %3959
  br i1 %3960, label %3983, label %3961

3961:                                             ; preds = %3956
  %3962 = icmp eq i32 %3957, %3959
  br i1 %3962, label %3963, label %3999

3963:                                             ; preds = %3961
  store i32 0, ptr %4, align 4, !tbaa !6
  %3964 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3964, ptr %6, align 4, !tbaa !6
  br i1 %3719, label %4006, label %3965

3965:                                             ; preds = %3963, %3993
  %3966 = phi i64 [ %3997, %3993 ], [ 1, %3963 ]
  %3967 = getelementptr inbounds i32, ptr %4, i64 %3966
  %3968 = load i32, ptr %3967, align 4, !tbaa !6
  %3969 = getelementptr inbounds i32, ptr %12, i64 %3966
  %3970 = load i32, ptr %3969, align 4, !tbaa !6
  %3971 = add nsw i32 %3970, -1
  %3972 = icmp slt i32 %3968, %3971
  br i1 %3972, label %3973, label %3991

3973:                                             ; preds = %3965
  br i1 %3960, label %3983, label %3974

3974:                                             ; preds = %3973
  %3975 = shl i64 %3966, 32
  %3976 = add i64 %3975, -4294967296
  %3977 = ashr exact i64 %3976, 32
  %3978 = getelementptr inbounds i32, ptr %7, i64 %3977
  %3979 = load i32, ptr %3978, align 4, !tbaa !6
  %3980 = getelementptr inbounds i32, ptr %6, i64 %3966
  %3981 = load i32, ptr %3980, align 4, !tbaa !6
  %3982 = add nsw i32 %3981, %3979
  store i32 %3982, ptr %3980, align 4, !tbaa !6
  br label %4001

3983:                                             ; preds = %3956, %3973
  %3984 = phi i32 [ %3968, %3973 ], [ %3957, %3956 ]
  %3985 = phi ptr [ %3967, %3973 ], [ %4, %3956 ]
  %3986 = phi i64 [ %3966, %3973 ], [ 0, %3956 ]
  %3987 = add nsw i32 %3984, 1
  store i32 %3987, ptr %3985, align 4, !tbaa !6
  %3988 = getelementptr inbounds i32, ptr %7, i64 %3986
  %3989 = load i32, ptr %3988, align 4, !tbaa !6
  %3990 = getelementptr inbounds i32, ptr %6, i64 %3986
  br label %4001

3991:                                             ; preds = %3965
  %3992 = icmp eq i32 %3968, %3971
  br i1 %3992, label %3993, label %3999

3993:                                             ; preds = %3991
  store i32 0, ptr %3967, align 4, !tbaa !6
  %3994 = getelementptr inbounds i32, ptr %8, i64 %3966
  %3995 = load i32, ptr %3994, align 4, !tbaa !6
  %3996 = getelementptr inbounds i32, ptr %6, i64 %3966
  store i32 %3995, ptr %3996, align 4, !tbaa !6
  %3997 = add nuw nsw i64 %3966, 1
  %3998 = icmp eq i64 %3997, %3717
  br i1 %3998, label %4006, label %3965, !llvm.loop !893

3999:                                             ; preds = %3961, %3991
  %4000 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1282, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5535

4001:                                             ; preds = %3974, %3983
  %4002 = phi ptr [ %3990, %3983 ], [ %3967, %3974 ]
  %4003 = phi i32 [ %3989, %3983 ], [ 1, %3974 ]
  %4004 = load i32, ptr %4002, align 4, !tbaa !6
  %4005 = add nsw i32 %4004, %4003
  store i32 %4005, ptr %4002, align 4, !tbaa !6
  br label %4006

4006:                                             ; preds = %3993, %4001, %3963, %3953
  %4007 = icmp eq i32 %3955, %5
  br i1 %4007, label %5530, label %3868, !llvm.loop !894

4008:                                             ; preds = %3705
  %4009 = getelementptr inbounds i32, ptr %3, i64 %19
  %4010 = load i32, ptr %4009, align 4, !tbaa !6
  %4011 = icmp eq i32 %4010, 0
  %4012 = icmp sgt i32 %5, 0
  br i1 %4011, label %4022, label %4013

4013:                                             ; preds = %4008
  br i1 %4012, label %4014, label %5530

4014:                                             ; preds = %4013
  %4015 = icmp sgt i32 %13, 1
  %4016 = icmp sgt i32 %13, 0
  %4017 = add i32 %13, -2
  %4018 = zext i32 %4017 to i64
  %4019 = zext i32 %13 to i64
  %4020 = add nuw i32 %5, 1
  %4021 = icmp eq i32 %13, 1
  br label %4166

4022:                                             ; preds = %4008
  br i1 %4012, label %4023, label %5530

4023:                                             ; preds = %4022
  %4024 = icmp sgt i32 %13, 1
  %4025 = icmp sgt i32 %13, 0
  %4026 = add i32 %13, -2
  %4027 = zext i32 %4026 to i64
  %4028 = zext i32 %13 to i64
  %4029 = add nuw i32 %5, 1
  %4030 = icmp eq i32 %13, 1
  br label %4031

4031:                                             ; preds = %4023, %4164
  %4032 = phi double [ %3703, %4023 ], [ %4114, %4164 ]
  %4033 = phi i32 [ 0, %4023 ], [ %4116, %4164 ]
  %4034 = phi double [ 0.000000e+00, %4023 ], [ %4115, %4164 ]
  %4035 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4024, label %4036, label %4105

4036:                                             ; preds = %4031, %4095
  %4037 = phi i32 [ %4104, %4095 ], [ 0, %4031 ]
  %4038 = phi i64 [ %4046, %4095 ], [ %4028, %4031 ]
  %4039 = phi i64 [ %4103, %4095 ], [ %4027, %4031 ]
  %4040 = phi i32 [ %4101, %4095 ], [ %4035, %4031 ]
  %4041 = sub i32 %4026, %4037
  %4042 = tail call i32 @llvm.smin.i32(i32 %4041, i32 0)
  %4043 = sub i32 %4041, %4042
  %4044 = zext i32 %4043 to i64
  %4045 = add nuw nsw i64 %4044, 1
  %4046 = add nsw i64 %4038, -1
  %4047 = icmp ult i32 %4043, 31
  br i1 %4047, label %4083, label %4048

4048:                                             ; preds = %4036
  %4049 = and i64 %4045, 8589934560
  %4050 = sub i64 %4039, %4049
  br label %4051

4051:                                             ; preds = %4051, %4048
  %4052 = phi i64 [ 0, %4048 ], [ %4075, %4051 ]
  %4053 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4048 ], [ %4071, %4051 ]
  %4054 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4048 ], [ %4072, %4051 ]
  %4055 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4048 ], [ %4073, %4051 ]
  %4056 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4048 ], [ %4074, %4051 ]
  %4057 = sub i64 %4039, %4052
  %4058 = getelementptr inbounds i32, ptr %9, i64 %4057
  %4059 = getelementptr inbounds i32, ptr %4058, i64 -7
  %4060 = load <8 x i32>, ptr %4059, align 4, !tbaa !6
  %4061 = shufflevector <8 x i32> %4060, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4062 = getelementptr inbounds i32, ptr %4058, i64 -15
  %4063 = load <8 x i32>, ptr %4062, align 4, !tbaa !6
  %4064 = shufflevector <8 x i32> %4063, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4065 = getelementptr inbounds i32, ptr %4058, i64 -23
  %4066 = load <8 x i32>, ptr %4065, align 4, !tbaa !6
  %4067 = shufflevector <8 x i32> %4066, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4068 = getelementptr inbounds i32, ptr %4058, i64 -31
  %4069 = load <8 x i32>, ptr %4068, align 4, !tbaa !6
  %4070 = shufflevector <8 x i32> %4069, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4071 = mul <8 x i32> %4061, %4053
  %4072 = mul <8 x i32> %4064, %4054
  %4073 = mul <8 x i32> %4067, %4055
  %4074 = mul <8 x i32> %4070, %4056
  %4075 = add nuw i64 %4052, 32
  %4076 = icmp eq i64 %4075, %4049
  br i1 %4076, label %4077, label %4051, !llvm.loop !895

4077:                                             ; preds = %4051
  %4078 = mul <8 x i32> %4072, %4071
  %4079 = mul <8 x i32> %4073, %4078
  %4080 = mul <8 x i32> %4074, %4079
  %4081 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4080)
  %4082 = icmp eq i64 %4045, %4049
  br i1 %4082, label %4095, label %4083

4083:                                             ; preds = %4036, %4077
  %4084 = phi i64 [ %4039, %4036 ], [ %4050, %4077 ]
  %4085 = phi i32 [ 1, %4036 ], [ %4081, %4077 ]
  br label %4086

4086:                                             ; preds = %4083, %4086
  %4087 = phi i64 [ %4092, %4086 ], [ %4084, %4083 ]
  %4088 = phi i32 [ %4091, %4086 ], [ %4085, %4083 ]
  %4089 = getelementptr inbounds i32, ptr %9, i64 %4087
  %4090 = load i32, ptr %4089, align 4, !tbaa !6
  %4091 = mul nsw i32 %4090, %4088
  %4092 = add nsw i64 %4087, -1
  %4093 = trunc i64 %4087 to i32
  %4094 = icmp sgt i32 %4093, 0
  br i1 %4094, label %4086, label %4095, !llvm.loop !896

4095:                                             ; preds = %4086, %4077
  %4096 = phi i32 [ %4081, %4077 ], [ %4091, %4086 ]
  %4097 = and i64 %4046, 4294967295
  %4098 = getelementptr inbounds i32, ptr %6, i64 %4097
  %4099 = load i32, ptr %4098, align 4, !tbaa !6
  %4100 = mul nsw i32 %4099, %4096
  %4101 = add nsw i32 %4100, %4040
  %4102 = icmp sgt i64 %4038, 2
  %4103 = add nsw i64 %4039, -1
  %4104 = add i32 %4037, 1
  br i1 %4102, label %4036, label %4105, !llvm.loop !897

4105:                                             ; preds = %4095, %4031
  %4106 = phi i32 [ %4035, %4031 ], [ %4101, %4095 ]
  %4107 = sext i32 %4106 to i64
  %4108 = getelementptr inbounds i64, ptr %3699, i64 %4107
  %4109 = load i64, ptr %4108, align 8, !tbaa !121
  %4110 = sitofp i64 %4109 to double
  %4111 = fcmp fast olt double %4032, %4110
  br i1 %4111, label %4112, label %4113

4112:                                             ; preds = %4105
  store double %4110, ptr %3701, align 8, !tbaa !19
  br label %4113

4113:                                             ; preds = %4112, %4105
  %4114 = phi double [ %4110, %4112 ], [ %4032, %4105 ]
  %4115 = fadd fast double %4034, 1.000000e+00
  %4116 = add nuw nsw i32 %4033, 1
  br i1 %4025, label %4117, label %4164

4117:                                             ; preds = %4113
  %4118 = load i32, ptr %4, align 4, !tbaa !6
  %4119 = load i32, ptr %12, align 4, !tbaa !6
  %4120 = add nsw i32 %4119, -1
  %4121 = icmp slt i32 %4118, %4120
  br i1 %4121, label %4141, label %4122

4122:                                             ; preds = %4117
  %4123 = icmp eq i32 %4118, %4120
  br i1 %4123, label %4124, label %4157

4124:                                             ; preds = %4122
  store i32 0, ptr %4, align 4, !tbaa !6
  %4125 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4125, ptr %6, align 4, !tbaa !6
  br i1 %4030, label %4164, label %4126

4126:                                             ; preds = %4124, %4151
  %4127 = phi i64 [ %4155, %4151 ], [ 1, %4124 ]
  %4128 = getelementptr inbounds i32, ptr %4, i64 %4127
  %4129 = load i32, ptr %4128, align 4, !tbaa !6
  %4130 = getelementptr inbounds i32, ptr %12, i64 %4127
  %4131 = load i32, ptr %4130, align 4, !tbaa !6
  %4132 = add nsw i32 %4131, -1
  %4133 = icmp slt i32 %4129, %4132
  br i1 %4133, label %4134, label %4149

4134:                                             ; preds = %4126
  br i1 %4121, label %4141, label %4135

4135:                                             ; preds = %4134
  %4136 = getelementptr inbounds i32, ptr %7, i64 %4127
  %4137 = load i32, ptr %4136, align 4, !tbaa !6
  %4138 = getelementptr inbounds i32, ptr %6, i64 %4127
  %4139 = load i32, ptr %4138, align 4, !tbaa !6
  %4140 = add nsw i32 %4139, %4137
  store i32 %4140, ptr %4138, align 4, !tbaa !6
  br label %4159

4141:                                             ; preds = %4117, %4134
  %4142 = phi i32 [ %4129, %4134 ], [ %4118, %4117 ]
  %4143 = phi ptr [ %4128, %4134 ], [ %4, %4117 ]
  %4144 = phi i64 [ %4127, %4134 ], [ 0, %4117 ]
  %4145 = add nsw i32 %4142, 1
  store i32 %4145, ptr %4143, align 4, !tbaa !6
  %4146 = getelementptr inbounds i32, ptr %7, i64 %4144
  %4147 = load i32, ptr %4146, align 4, !tbaa !6
  %4148 = getelementptr inbounds i32, ptr %6, i64 %4144
  br label %4159

4149:                                             ; preds = %4126
  %4150 = icmp eq i32 %4129, %4132
  br i1 %4150, label %4151, label %4157

4151:                                             ; preds = %4149
  store i32 0, ptr %4128, align 4, !tbaa !6
  %4152 = getelementptr inbounds i32, ptr %8, i64 %4127
  %4153 = load i32, ptr %4152, align 4, !tbaa !6
  %4154 = getelementptr inbounds i32, ptr %6, i64 %4127
  store i32 %4153, ptr %4154, align 4, !tbaa !6
  %4155 = add nuw nsw i64 %4127, 1
  %4156 = icmp eq i64 %4155, %4028
  br i1 %4156, label %4164, label %4126, !llvm.loop !898

4157:                                             ; preds = %4122, %4149
  %4158 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1282, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5535

4159:                                             ; preds = %4135, %4141
  %4160 = phi ptr [ %4148, %4141 ], [ %4128, %4135 ]
  %4161 = phi i32 [ %4147, %4141 ], [ 1, %4135 ]
  %4162 = load i32, ptr %4160, align 4, !tbaa !6
  %4163 = add nsw i32 %4162, %4161
  store i32 %4163, ptr %4160, align 4, !tbaa !6
  br label %4164

4164:                                             ; preds = %4151, %4159, %4124, %4113
  %4165 = icmp eq i32 %4116, %5
  br i1 %4165, label %5530, label %4031, !llvm.loop !899

4166:                                             ; preds = %4014, %4304
  %4167 = phi double [ %3703, %4014 ], [ %4252, %4304 ]
  %4168 = phi i32 [ 0, %4014 ], [ %4253, %4304 ]
  %4169 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4015, label %4170, label %4239

4170:                                             ; preds = %4166, %4229
  %4171 = phi i32 [ %4238, %4229 ], [ 0, %4166 ]
  %4172 = phi i64 [ %4180, %4229 ], [ %4019, %4166 ]
  %4173 = phi i64 [ %4237, %4229 ], [ %4018, %4166 ]
  %4174 = phi i32 [ %4235, %4229 ], [ %4169, %4166 ]
  %4175 = sub i32 %4017, %4171
  %4176 = tail call i32 @llvm.smin.i32(i32 %4175, i32 0)
  %4177 = sub i32 %4175, %4176
  %4178 = zext i32 %4177 to i64
  %4179 = add nuw nsw i64 %4178, 1
  %4180 = add nsw i64 %4172, -1
  %4181 = icmp ult i32 %4177, 31
  br i1 %4181, label %4217, label %4182

4182:                                             ; preds = %4170
  %4183 = and i64 %4179, 8589934560
  %4184 = sub i64 %4173, %4183
  br label %4185

4185:                                             ; preds = %4185, %4182
  %4186 = phi i64 [ 0, %4182 ], [ %4209, %4185 ]
  %4187 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4182 ], [ %4205, %4185 ]
  %4188 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4182 ], [ %4206, %4185 ]
  %4189 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4182 ], [ %4207, %4185 ]
  %4190 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4182 ], [ %4208, %4185 ]
  %4191 = sub i64 %4173, %4186
  %4192 = getelementptr inbounds i32, ptr %11, i64 %4191
  %4193 = getelementptr inbounds i32, ptr %4192, i64 -7
  %4194 = load <8 x i32>, ptr %4193, align 4, !tbaa !6
  %4195 = shufflevector <8 x i32> %4194, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4196 = getelementptr inbounds i32, ptr %4192, i64 -15
  %4197 = load <8 x i32>, ptr %4196, align 4, !tbaa !6
  %4198 = shufflevector <8 x i32> %4197, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4199 = getelementptr inbounds i32, ptr %4192, i64 -23
  %4200 = load <8 x i32>, ptr %4199, align 4, !tbaa !6
  %4201 = shufflevector <8 x i32> %4200, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4202 = getelementptr inbounds i32, ptr %4192, i64 -31
  %4203 = load <8 x i32>, ptr %4202, align 4, !tbaa !6
  %4204 = shufflevector <8 x i32> %4203, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4205 = mul <8 x i32> %4195, %4187
  %4206 = mul <8 x i32> %4198, %4188
  %4207 = mul <8 x i32> %4201, %4189
  %4208 = mul <8 x i32> %4204, %4190
  %4209 = add nuw i64 %4186, 32
  %4210 = icmp eq i64 %4209, %4183
  br i1 %4210, label %4211, label %4185, !llvm.loop !900

4211:                                             ; preds = %4185
  %4212 = mul <8 x i32> %4206, %4205
  %4213 = mul <8 x i32> %4207, %4212
  %4214 = mul <8 x i32> %4208, %4213
  %4215 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4214)
  %4216 = icmp eq i64 %4179, %4183
  br i1 %4216, label %4229, label %4217

4217:                                             ; preds = %4170, %4211
  %4218 = phi i64 [ %4173, %4170 ], [ %4184, %4211 ]
  %4219 = phi i32 [ 1, %4170 ], [ %4215, %4211 ]
  br label %4220

4220:                                             ; preds = %4217, %4220
  %4221 = phi i64 [ %4226, %4220 ], [ %4218, %4217 ]
  %4222 = phi i32 [ %4225, %4220 ], [ %4219, %4217 ]
  %4223 = getelementptr inbounds i32, ptr %11, i64 %4221
  %4224 = load i32, ptr %4223, align 4, !tbaa !6
  %4225 = mul nsw i32 %4224, %4222
  %4226 = add nsw i64 %4221, -1
  %4227 = trunc i64 %4221 to i32
  %4228 = icmp sgt i32 %4227, 0
  br i1 %4228, label %4220, label %4229, !llvm.loop !901

4229:                                             ; preds = %4220, %4211
  %4230 = phi i32 [ %4215, %4211 ], [ %4225, %4220 ]
  %4231 = and i64 %4180, 4294967295
  %4232 = getelementptr inbounds i32, ptr %6, i64 %4231
  %4233 = load i32, ptr %4232, align 4, !tbaa !6
  %4234 = mul nsw i32 %4233, %4230
  %4235 = add nsw i32 %4234, %4174
  %4236 = icmp sgt i64 %4172, 2
  %4237 = add nsw i64 %4173, -1
  %4238 = add i32 %4171, 1
  br i1 %4236, label %4170, label %4239, !llvm.loop !902

4239:                                             ; preds = %4229, %4166
  %4240 = phi i32 [ %4169, %4166 ], [ %4235, %4229 ]
  %4241 = icmp slt i32 %4240, %5
  br i1 %4241, label %4244, label %4242

4242:                                             ; preds = %4239
  %4243 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1282, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5535

4244:                                             ; preds = %4239
  %4245 = sext i32 %4240 to i64
  %4246 = getelementptr inbounds i64, ptr %3699, i64 %4245
  %4247 = load i64, ptr %4246, align 8, !tbaa !121
  %4248 = sitofp i64 %4247 to double
  %4249 = fcmp fast olt double %4167, %4248
  br i1 %4249, label %4250, label %4251

4250:                                             ; preds = %4244
  store double %4248, ptr %3701, align 8, !tbaa !19
  br label %4251

4251:                                             ; preds = %4250, %4244
  %4252 = phi double [ %4248, %4250 ], [ %4167, %4244 ]
  %4253 = add nuw nsw i32 %4168, 1
  br i1 %4016, label %4254, label %4304

4254:                                             ; preds = %4251
  %4255 = load i32, ptr %4, align 4, !tbaa !6
  %4256 = load i32, ptr %12, align 4, !tbaa !6
  %4257 = add nsw i32 %4256, -1
  %4258 = icmp slt i32 %4255, %4257
  br i1 %4258, label %4281, label %4259

4259:                                             ; preds = %4254
  %4260 = icmp eq i32 %4255, %4257
  br i1 %4260, label %4261, label %4297

4261:                                             ; preds = %4259
  store i32 0, ptr %4, align 4, !tbaa !6
  %4262 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4262, ptr %6, align 4, !tbaa !6
  br i1 %4021, label %4304, label %4263

4263:                                             ; preds = %4261, %4291
  %4264 = phi i64 [ %4295, %4291 ], [ 1, %4261 ]
  %4265 = getelementptr inbounds i32, ptr %4, i64 %4264
  %4266 = load i32, ptr %4265, align 4, !tbaa !6
  %4267 = getelementptr inbounds i32, ptr %12, i64 %4264
  %4268 = load i32, ptr %4267, align 4, !tbaa !6
  %4269 = add nsw i32 %4268, -1
  %4270 = icmp slt i32 %4266, %4269
  br i1 %4270, label %4271, label %4289

4271:                                             ; preds = %4263
  br i1 %4258, label %4281, label %4272

4272:                                             ; preds = %4271
  %4273 = shl i64 %4264, 32
  %4274 = add i64 %4273, -4294967296
  %4275 = ashr exact i64 %4274, 32
  %4276 = getelementptr inbounds i32, ptr %7, i64 %4275
  %4277 = load i32, ptr %4276, align 4, !tbaa !6
  %4278 = getelementptr inbounds i32, ptr %6, i64 %4264
  %4279 = load i32, ptr %4278, align 4, !tbaa !6
  %4280 = add nsw i32 %4279, %4277
  store i32 %4280, ptr %4278, align 4, !tbaa !6
  br label %4299

4281:                                             ; preds = %4254, %4271
  %4282 = phi i32 [ %4266, %4271 ], [ %4255, %4254 ]
  %4283 = phi ptr [ %4265, %4271 ], [ %4, %4254 ]
  %4284 = phi i64 [ %4264, %4271 ], [ 0, %4254 ]
  %4285 = add nsw i32 %4282, 1
  store i32 %4285, ptr %4283, align 4, !tbaa !6
  %4286 = getelementptr inbounds i32, ptr %7, i64 %4284
  %4287 = load i32, ptr %4286, align 4, !tbaa !6
  %4288 = getelementptr inbounds i32, ptr %6, i64 %4284
  br label %4299

4289:                                             ; preds = %4263
  %4290 = icmp eq i32 %4266, %4269
  br i1 %4290, label %4291, label %4297

4291:                                             ; preds = %4289
  store i32 0, ptr %4265, align 4, !tbaa !6
  %4292 = getelementptr inbounds i32, ptr %8, i64 %4264
  %4293 = load i32, ptr %4292, align 4, !tbaa !6
  %4294 = getelementptr inbounds i32, ptr %6, i64 %4264
  store i32 %4293, ptr %4294, align 4, !tbaa !6
  %4295 = add nuw nsw i64 %4264, 1
  %4296 = icmp eq i64 %4295, %4019
  br i1 %4296, label %4304, label %4263, !llvm.loop !903

4297:                                             ; preds = %4259, %4289
  %4298 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1282, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5535

4299:                                             ; preds = %4272, %4281
  %4300 = phi ptr [ %4288, %4281 ], [ %4265, %4272 ]
  %4301 = phi i32 [ %4287, %4281 ], [ 1, %4272 ]
  %4302 = load i32, ptr %4300, align 4, !tbaa !6
  %4303 = add nsw i32 %4302, %4301
  store i32 %4303, ptr %4300, align 4, !tbaa !6
  br label %4304

4304:                                             ; preds = %4291, %4299, %4261, %4251
  %4305 = icmp eq i32 %4253, %5
  br i1 %4305, label %5530, label %4166, !llvm.loop !904

4306:                                             ; preds = %3705
  %4307 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1282, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5530

4308:                                             ; preds = %18
  %4309 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4310 = load ptr, ptr %4309, align 8, !tbaa !10
  %4311 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4312 = load ptr, ptr %4311, align 8, !tbaa !10
  %4313 = load i64, ptr %4310, align 8, !tbaa !121
  %4314 = sitofp i64 %4313 to float
  store float %4314, ptr %4312, align 4, !tbaa !163
  %4315 = icmp eq i32 %13, 0
  br i1 %4315, label %5530, label %4316

4316:                                             ; preds = %4308
  switch i32 %1, label %4917 [
    i32 1, label %4317
    i32 0, label %4619
  ]

4317:                                             ; preds = %4316
  %4318 = getelementptr inbounds i32, ptr %3, i64 %19
  %4319 = load i32, ptr %4318, align 4, !tbaa !6
  %4320 = icmp eq i32 %4319, 0
  %4321 = icmp sgt i32 %5, 0
  br i1 %4320, label %4331, label %4322

4322:                                             ; preds = %4317
  br i1 %4321, label %4323, label %5530

4323:                                             ; preds = %4322
  %4324 = icmp sgt i32 %13, 1
  %4325 = icmp sgt i32 %13, 0
  %4326 = add i32 %13, -2
  %4327 = zext i32 %4326 to i64
  %4328 = zext i32 %13 to i64
  %4329 = add nuw i32 %5, 1
  %4330 = icmp eq i32 %13, 1
  br label %4479

4331:                                             ; preds = %4317
  br i1 %4321, label %4332, label %5530

4332:                                             ; preds = %4331
  %4333 = icmp sgt i32 %13, 1
  %4334 = icmp sgt i32 %13, 0
  %4335 = add i32 %13, -2
  %4336 = zext i32 %4335 to i64
  %4337 = zext i32 %13 to i64
  %4338 = add nuw i32 %5, 1
  %4339 = icmp eq i32 %13, 1
  br label %4340

4340:                                             ; preds = %4332, %4477
  %4341 = phi float [ %4314, %4332 ], [ %4427, %4477 ]
  %4342 = phi i32 [ 0, %4332 ], [ %4429, %4477 ]
  %4343 = phi double [ 0.000000e+00, %4332 ], [ %4428, %4477 ]
  %4344 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4333, label %4345, label %4414

4345:                                             ; preds = %4340, %4404
  %4346 = phi i32 [ %4413, %4404 ], [ 0, %4340 ]
  %4347 = phi i64 [ %4355, %4404 ], [ %4337, %4340 ]
  %4348 = phi i64 [ %4412, %4404 ], [ %4336, %4340 ]
  %4349 = phi i32 [ %4410, %4404 ], [ %4344, %4340 ]
  %4350 = sub i32 %4335, %4346
  %4351 = tail call i32 @llvm.smin.i32(i32 %4350, i32 0)
  %4352 = sub i32 %4350, %4351
  %4353 = zext i32 %4352 to i64
  %4354 = add nuw nsw i64 %4353, 1
  %4355 = add nsw i64 %4347, -1
  %4356 = icmp ult i32 %4352, 31
  br i1 %4356, label %4392, label %4357

4357:                                             ; preds = %4345
  %4358 = and i64 %4354, 8589934560
  %4359 = sub i64 %4348, %4358
  br label %4360

4360:                                             ; preds = %4360, %4357
  %4361 = phi i64 [ 0, %4357 ], [ %4384, %4360 ]
  %4362 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4357 ], [ %4380, %4360 ]
  %4363 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4357 ], [ %4381, %4360 ]
  %4364 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4357 ], [ %4382, %4360 ]
  %4365 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4357 ], [ %4383, %4360 ]
  %4366 = sub i64 %4348, %4361
  %4367 = getelementptr inbounds i32, ptr %9, i64 %4366
  %4368 = getelementptr inbounds i32, ptr %4367, i64 -7
  %4369 = load <8 x i32>, ptr %4368, align 4, !tbaa !6
  %4370 = shufflevector <8 x i32> %4369, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4371 = getelementptr inbounds i32, ptr %4367, i64 -15
  %4372 = load <8 x i32>, ptr %4371, align 4, !tbaa !6
  %4373 = shufflevector <8 x i32> %4372, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4374 = getelementptr inbounds i32, ptr %4367, i64 -23
  %4375 = load <8 x i32>, ptr %4374, align 4, !tbaa !6
  %4376 = shufflevector <8 x i32> %4375, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4377 = getelementptr inbounds i32, ptr %4367, i64 -31
  %4378 = load <8 x i32>, ptr %4377, align 4, !tbaa !6
  %4379 = shufflevector <8 x i32> %4378, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4380 = mul <8 x i32> %4370, %4362
  %4381 = mul <8 x i32> %4373, %4363
  %4382 = mul <8 x i32> %4376, %4364
  %4383 = mul <8 x i32> %4379, %4365
  %4384 = add nuw i64 %4361, 32
  %4385 = icmp eq i64 %4384, %4358
  br i1 %4385, label %4386, label %4360, !llvm.loop !905

4386:                                             ; preds = %4360
  %4387 = mul <8 x i32> %4381, %4380
  %4388 = mul <8 x i32> %4382, %4387
  %4389 = mul <8 x i32> %4383, %4388
  %4390 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4389)
  %4391 = icmp eq i64 %4354, %4358
  br i1 %4391, label %4404, label %4392

4392:                                             ; preds = %4345, %4386
  %4393 = phi i64 [ %4348, %4345 ], [ %4359, %4386 ]
  %4394 = phi i32 [ 1, %4345 ], [ %4390, %4386 ]
  br label %4395

4395:                                             ; preds = %4392, %4395
  %4396 = phi i64 [ %4401, %4395 ], [ %4393, %4392 ]
  %4397 = phi i32 [ %4400, %4395 ], [ %4394, %4392 ]
  %4398 = getelementptr inbounds i32, ptr %9, i64 %4396
  %4399 = load i32, ptr %4398, align 4, !tbaa !6
  %4400 = mul nsw i32 %4399, %4397
  %4401 = add nsw i64 %4396, -1
  %4402 = trunc i64 %4396 to i32
  %4403 = icmp sgt i32 %4402, 0
  br i1 %4403, label %4395, label %4404, !llvm.loop !906

4404:                                             ; preds = %4395, %4386
  %4405 = phi i32 [ %4390, %4386 ], [ %4400, %4395 ]
  %4406 = and i64 %4355, 4294967295
  %4407 = getelementptr inbounds i32, ptr %6, i64 %4406
  %4408 = load i32, ptr %4407, align 4, !tbaa !6
  %4409 = mul nsw i32 %4408, %4405
  %4410 = add nsw i32 %4409, %4349
  %4411 = icmp sgt i64 %4347, 2
  %4412 = add nsw i64 %4348, -1
  %4413 = add i32 %4346, 1
  br i1 %4411, label %4345, label %4414, !llvm.loop !907

4414:                                             ; preds = %4404, %4340
  %4415 = phi i32 [ %4344, %4340 ], [ %4410, %4404 ]
  %4416 = sext i32 %4415 to i64
  %4417 = getelementptr inbounds double, ptr %2, i64 %4416
  %4418 = load double, ptr %4417, align 8, !tbaa !19
  %4419 = getelementptr inbounds i64, ptr %4310, i64 %4416
  %4420 = load i64, ptr %4419, align 8, !tbaa !121
  %4421 = sitofp i64 %4420 to float
  %4422 = fcmp fast one double %4418, 0.000000e+00
  %4423 = fcmp fast olt float %4341, %4421
  %4424 = select i1 %4422, i1 %4423, i1 false
  br i1 %4424, label %4425, label %4426

4425:                                             ; preds = %4414
  store float %4421, ptr %4312, align 4, !tbaa !163
  br label %4426

4426:                                             ; preds = %4425, %4414
  %4427 = phi float [ %4421, %4425 ], [ %4341, %4414 ]
  %4428 = fadd fast double %4418, %4343
  %4429 = add nuw nsw i32 %4342, 1
  br i1 %4334, label %4430, label %4477

4430:                                             ; preds = %4426
  %4431 = load i32, ptr %4, align 4, !tbaa !6
  %4432 = load i32, ptr %12, align 4, !tbaa !6
  %4433 = add nsw i32 %4432, -1
  %4434 = icmp slt i32 %4431, %4433
  br i1 %4434, label %4454, label %4435

4435:                                             ; preds = %4430
  %4436 = icmp eq i32 %4431, %4433
  br i1 %4436, label %4437, label %4470

4437:                                             ; preds = %4435
  store i32 0, ptr %4, align 4, !tbaa !6
  %4438 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4438, ptr %6, align 4, !tbaa !6
  br i1 %4339, label %4477, label %4439

4439:                                             ; preds = %4437, %4464
  %4440 = phi i64 [ %4468, %4464 ], [ 1, %4437 ]
  %4441 = getelementptr inbounds i32, ptr %4, i64 %4440
  %4442 = load i32, ptr %4441, align 4, !tbaa !6
  %4443 = getelementptr inbounds i32, ptr %12, i64 %4440
  %4444 = load i32, ptr %4443, align 4, !tbaa !6
  %4445 = add nsw i32 %4444, -1
  %4446 = icmp slt i32 %4442, %4445
  br i1 %4446, label %4447, label %4462

4447:                                             ; preds = %4439
  br i1 %4434, label %4454, label %4448

4448:                                             ; preds = %4447
  %4449 = getelementptr inbounds i32, ptr %7, i64 %4440
  %4450 = load i32, ptr %4449, align 4, !tbaa !6
  %4451 = getelementptr inbounds i32, ptr %6, i64 %4440
  %4452 = load i32, ptr %4451, align 4, !tbaa !6
  %4453 = add nsw i32 %4452, %4450
  store i32 %4453, ptr %4451, align 4, !tbaa !6
  br label %4472

4454:                                             ; preds = %4430, %4447
  %4455 = phi i32 [ %4442, %4447 ], [ %4431, %4430 ]
  %4456 = phi ptr [ %4441, %4447 ], [ %4, %4430 ]
  %4457 = phi i64 [ %4440, %4447 ], [ 0, %4430 ]
  %4458 = add nsw i32 %4455, 1
  store i32 %4458, ptr %4456, align 4, !tbaa !6
  %4459 = getelementptr inbounds i32, ptr %7, i64 %4457
  %4460 = load i32, ptr %4459, align 4, !tbaa !6
  %4461 = getelementptr inbounds i32, ptr %6, i64 %4457
  br label %4472

4462:                                             ; preds = %4439
  %4463 = icmp eq i32 %4442, %4445
  br i1 %4463, label %4464, label %4470

4464:                                             ; preds = %4462
  store i32 0, ptr %4441, align 4, !tbaa !6
  %4465 = getelementptr inbounds i32, ptr %8, i64 %4440
  %4466 = load i32, ptr %4465, align 4, !tbaa !6
  %4467 = getelementptr inbounds i32, ptr %6, i64 %4440
  store i32 %4466, ptr %4467, align 4, !tbaa !6
  %4468 = add nuw nsw i64 %4440, 1
  %4469 = icmp eq i64 %4468, %4337
  br i1 %4469, label %4477, label %4439, !llvm.loop !908

4470:                                             ; preds = %4435, %4462
  %4471 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1286, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5535

4472:                                             ; preds = %4448, %4454
  %4473 = phi ptr [ %4461, %4454 ], [ %4441, %4448 ]
  %4474 = phi i32 [ %4460, %4454 ], [ 1, %4448 ]
  %4475 = load i32, ptr %4473, align 4, !tbaa !6
  %4476 = add nsw i32 %4475, %4474
  store i32 %4476, ptr %4473, align 4, !tbaa !6
  br label %4477

4477:                                             ; preds = %4464, %4472, %4437, %4426
  %4478 = icmp eq i32 %4429, %5
  br i1 %4478, label %5530, label %4340, !llvm.loop !909

4479:                                             ; preds = %4323, %4617
  %4480 = phi float [ %4314, %4323 ], [ %4565, %4617 ]
  %4481 = phi i32 [ 0, %4323 ], [ %4566, %4617 ]
  %4482 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4324, label %4483, label %4552

4483:                                             ; preds = %4479, %4542
  %4484 = phi i32 [ %4551, %4542 ], [ 0, %4479 ]
  %4485 = phi i64 [ %4493, %4542 ], [ %4328, %4479 ]
  %4486 = phi i64 [ %4550, %4542 ], [ %4327, %4479 ]
  %4487 = phi i32 [ %4548, %4542 ], [ %4482, %4479 ]
  %4488 = sub i32 %4326, %4484
  %4489 = tail call i32 @llvm.smin.i32(i32 %4488, i32 0)
  %4490 = sub i32 %4488, %4489
  %4491 = zext i32 %4490 to i64
  %4492 = add nuw nsw i64 %4491, 1
  %4493 = add nsw i64 %4485, -1
  %4494 = icmp ult i32 %4490, 31
  br i1 %4494, label %4530, label %4495

4495:                                             ; preds = %4483
  %4496 = and i64 %4492, 8589934560
  %4497 = sub i64 %4486, %4496
  br label %4498

4498:                                             ; preds = %4498, %4495
  %4499 = phi i64 [ 0, %4495 ], [ %4522, %4498 ]
  %4500 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4495 ], [ %4518, %4498 ]
  %4501 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4495 ], [ %4519, %4498 ]
  %4502 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4495 ], [ %4520, %4498 ]
  %4503 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4495 ], [ %4521, %4498 ]
  %4504 = sub i64 %4486, %4499
  %4505 = getelementptr inbounds i32, ptr %11, i64 %4504
  %4506 = getelementptr inbounds i32, ptr %4505, i64 -7
  %4507 = load <8 x i32>, ptr %4506, align 4, !tbaa !6
  %4508 = shufflevector <8 x i32> %4507, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4509 = getelementptr inbounds i32, ptr %4505, i64 -15
  %4510 = load <8 x i32>, ptr %4509, align 4, !tbaa !6
  %4511 = shufflevector <8 x i32> %4510, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4512 = getelementptr inbounds i32, ptr %4505, i64 -23
  %4513 = load <8 x i32>, ptr %4512, align 4, !tbaa !6
  %4514 = shufflevector <8 x i32> %4513, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4515 = getelementptr inbounds i32, ptr %4505, i64 -31
  %4516 = load <8 x i32>, ptr %4515, align 4, !tbaa !6
  %4517 = shufflevector <8 x i32> %4516, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4518 = mul <8 x i32> %4508, %4500
  %4519 = mul <8 x i32> %4511, %4501
  %4520 = mul <8 x i32> %4514, %4502
  %4521 = mul <8 x i32> %4517, %4503
  %4522 = add nuw i64 %4499, 32
  %4523 = icmp eq i64 %4522, %4496
  br i1 %4523, label %4524, label %4498, !llvm.loop !910

4524:                                             ; preds = %4498
  %4525 = mul <8 x i32> %4519, %4518
  %4526 = mul <8 x i32> %4520, %4525
  %4527 = mul <8 x i32> %4521, %4526
  %4528 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4527)
  %4529 = icmp eq i64 %4492, %4496
  br i1 %4529, label %4542, label %4530

4530:                                             ; preds = %4483, %4524
  %4531 = phi i64 [ %4486, %4483 ], [ %4497, %4524 ]
  %4532 = phi i32 [ 1, %4483 ], [ %4528, %4524 ]
  br label %4533

4533:                                             ; preds = %4530, %4533
  %4534 = phi i64 [ %4539, %4533 ], [ %4531, %4530 ]
  %4535 = phi i32 [ %4538, %4533 ], [ %4532, %4530 ]
  %4536 = getelementptr inbounds i32, ptr %11, i64 %4534
  %4537 = load i32, ptr %4536, align 4, !tbaa !6
  %4538 = mul nsw i32 %4537, %4535
  %4539 = add nsw i64 %4534, -1
  %4540 = trunc i64 %4534 to i32
  %4541 = icmp sgt i32 %4540, 0
  br i1 %4541, label %4533, label %4542, !llvm.loop !911

4542:                                             ; preds = %4533, %4524
  %4543 = phi i32 [ %4528, %4524 ], [ %4538, %4533 ]
  %4544 = and i64 %4493, 4294967295
  %4545 = getelementptr inbounds i32, ptr %6, i64 %4544
  %4546 = load i32, ptr %4545, align 4, !tbaa !6
  %4547 = mul nsw i32 %4546, %4543
  %4548 = add nsw i32 %4547, %4487
  %4549 = icmp sgt i64 %4485, 2
  %4550 = add nsw i64 %4486, -1
  %4551 = add i32 %4484, 1
  br i1 %4549, label %4483, label %4552, !llvm.loop !912

4552:                                             ; preds = %4542, %4479
  %4553 = phi i32 [ %4482, %4479 ], [ %4548, %4542 ]
  %4554 = icmp slt i32 %4553, %5
  br i1 %4554, label %4557, label %4555

4555:                                             ; preds = %4552
  %4556 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1286, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5535

4557:                                             ; preds = %4552
  %4558 = sext i32 %4553 to i64
  %4559 = getelementptr inbounds i64, ptr %4310, i64 %4558
  %4560 = load i64, ptr %4559, align 8, !tbaa !121
  %4561 = sitofp i64 %4560 to float
  %4562 = fcmp fast olt float %4480, %4561
  br i1 %4562, label %4563, label %4564

4563:                                             ; preds = %4557
  store float %4561, ptr %4312, align 4, !tbaa !163
  br label %4564

4564:                                             ; preds = %4557, %4563
  %4565 = phi float [ %4480, %4557 ], [ %4561, %4563 ]
  %4566 = add nuw nsw i32 %4481, 1
  br i1 %4325, label %4567, label %4617

4567:                                             ; preds = %4564
  %4568 = load i32, ptr %4, align 4, !tbaa !6
  %4569 = load i32, ptr %12, align 4, !tbaa !6
  %4570 = add nsw i32 %4569, -1
  %4571 = icmp slt i32 %4568, %4570
  br i1 %4571, label %4594, label %4572

4572:                                             ; preds = %4567
  %4573 = icmp eq i32 %4568, %4570
  br i1 %4573, label %4574, label %4610

4574:                                             ; preds = %4572
  store i32 0, ptr %4, align 4, !tbaa !6
  %4575 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4575, ptr %6, align 4, !tbaa !6
  br i1 %4330, label %4617, label %4576

4576:                                             ; preds = %4574, %4604
  %4577 = phi i64 [ %4608, %4604 ], [ 1, %4574 ]
  %4578 = getelementptr inbounds i32, ptr %4, i64 %4577
  %4579 = load i32, ptr %4578, align 4, !tbaa !6
  %4580 = getelementptr inbounds i32, ptr %12, i64 %4577
  %4581 = load i32, ptr %4580, align 4, !tbaa !6
  %4582 = add nsw i32 %4581, -1
  %4583 = icmp slt i32 %4579, %4582
  br i1 %4583, label %4584, label %4602

4584:                                             ; preds = %4576
  br i1 %4571, label %4594, label %4585

4585:                                             ; preds = %4584
  %4586 = shl i64 %4577, 32
  %4587 = add i64 %4586, -4294967296
  %4588 = ashr exact i64 %4587, 32
  %4589 = getelementptr inbounds i32, ptr %7, i64 %4588
  %4590 = load i32, ptr %4589, align 4, !tbaa !6
  %4591 = getelementptr inbounds i32, ptr %6, i64 %4577
  %4592 = load i32, ptr %4591, align 4, !tbaa !6
  %4593 = add nsw i32 %4592, %4590
  store i32 %4593, ptr %4591, align 4, !tbaa !6
  br label %4612

4594:                                             ; preds = %4567, %4584
  %4595 = phi i32 [ %4579, %4584 ], [ %4568, %4567 ]
  %4596 = phi ptr [ %4578, %4584 ], [ %4, %4567 ]
  %4597 = phi i64 [ %4577, %4584 ], [ 0, %4567 ]
  %4598 = add nsw i32 %4595, 1
  store i32 %4598, ptr %4596, align 4, !tbaa !6
  %4599 = getelementptr inbounds i32, ptr %7, i64 %4597
  %4600 = load i32, ptr %4599, align 4, !tbaa !6
  %4601 = getelementptr inbounds i32, ptr %6, i64 %4597
  br label %4612

4602:                                             ; preds = %4576
  %4603 = icmp eq i32 %4579, %4582
  br i1 %4603, label %4604, label %4610

4604:                                             ; preds = %4602
  store i32 0, ptr %4578, align 4, !tbaa !6
  %4605 = getelementptr inbounds i32, ptr %8, i64 %4577
  %4606 = load i32, ptr %4605, align 4, !tbaa !6
  %4607 = getelementptr inbounds i32, ptr %6, i64 %4577
  store i32 %4606, ptr %4607, align 4, !tbaa !6
  %4608 = add nuw nsw i64 %4577, 1
  %4609 = icmp eq i64 %4608, %4328
  br i1 %4609, label %4617, label %4576, !llvm.loop !913

4610:                                             ; preds = %4572, %4602
  %4611 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1286, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5535

4612:                                             ; preds = %4585, %4594
  %4613 = phi ptr [ %4601, %4594 ], [ %4578, %4585 ]
  %4614 = phi i32 [ %4600, %4594 ], [ 1, %4585 ]
  %4615 = load i32, ptr %4613, align 4, !tbaa !6
  %4616 = add nsw i32 %4615, %4614
  store i32 %4616, ptr %4613, align 4, !tbaa !6
  br label %4617

4617:                                             ; preds = %4604, %4612, %4574, %4564
  %4618 = icmp eq i32 %4566, %5
  br i1 %4618, label %5530, label %4479, !llvm.loop !914

4619:                                             ; preds = %4316
  %4620 = getelementptr inbounds i32, ptr %3, i64 %19
  %4621 = load i32, ptr %4620, align 4, !tbaa !6
  %4622 = icmp eq i32 %4621, 0
  %4623 = icmp sgt i32 %5, 0
  br i1 %4622, label %4633, label %4624

4624:                                             ; preds = %4619
  br i1 %4623, label %4625, label %5530

4625:                                             ; preds = %4624
  %4626 = icmp sgt i32 %13, 1
  %4627 = icmp sgt i32 %13, 0
  %4628 = add i32 %13, -2
  %4629 = zext i32 %4628 to i64
  %4630 = zext i32 %13 to i64
  %4631 = add nuw i32 %5, 1
  %4632 = icmp eq i32 %13, 1
  br label %4777

4633:                                             ; preds = %4619
  br i1 %4623, label %4634, label %5530

4634:                                             ; preds = %4633
  %4635 = icmp sgt i32 %13, 1
  %4636 = icmp sgt i32 %13, 0
  %4637 = add i32 %13, -2
  %4638 = zext i32 %4637 to i64
  %4639 = zext i32 %13 to i64
  %4640 = add nuw i32 %5, 1
  %4641 = icmp eq i32 %13, 1
  br label %4642

4642:                                             ; preds = %4634, %4775
  %4643 = phi float [ %4314, %4634 ], [ %4725, %4775 ]
  %4644 = phi i32 [ 0, %4634 ], [ %4727, %4775 ]
  %4645 = phi double [ 0.000000e+00, %4634 ], [ %4726, %4775 ]
  %4646 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4635, label %4647, label %4716

4647:                                             ; preds = %4642, %4706
  %4648 = phi i32 [ %4715, %4706 ], [ 0, %4642 ]
  %4649 = phi i64 [ %4657, %4706 ], [ %4639, %4642 ]
  %4650 = phi i64 [ %4714, %4706 ], [ %4638, %4642 ]
  %4651 = phi i32 [ %4712, %4706 ], [ %4646, %4642 ]
  %4652 = sub i32 %4637, %4648
  %4653 = tail call i32 @llvm.smin.i32(i32 %4652, i32 0)
  %4654 = sub i32 %4652, %4653
  %4655 = zext i32 %4654 to i64
  %4656 = add nuw nsw i64 %4655, 1
  %4657 = add nsw i64 %4649, -1
  %4658 = icmp ult i32 %4654, 31
  br i1 %4658, label %4694, label %4659

4659:                                             ; preds = %4647
  %4660 = and i64 %4656, 8589934560
  %4661 = sub i64 %4650, %4660
  br label %4662

4662:                                             ; preds = %4662, %4659
  %4663 = phi i64 [ 0, %4659 ], [ %4686, %4662 ]
  %4664 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4659 ], [ %4682, %4662 ]
  %4665 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4659 ], [ %4683, %4662 ]
  %4666 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4659 ], [ %4684, %4662 ]
  %4667 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4659 ], [ %4685, %4662 ]
  %4668 = sub i64 %4650, %4663
  %4669 = getelementptr inbounds i32, ptr %9, i64 %4668
  %4670 = getelementptr inbounds i32, ptr %4669, i64 -7
  %4671 = load <8 x i32>, ptr %4670, align 4, !tbaa !6
  %4672 = shufflevector <8 x i32> %4671, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4673 = getelementptr inbounds i32, ptr %4669, i64 -15
  %4674 = load <8 x i32>, ptr %4673, align 4, !tbaa !6
  %4675 = shufflevector <8 x i32> %4674, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4676 = getelementptr inbounds i32, ptr %4669, i64 -23
  %4677 = load <8 x i32>, ptr %4676, align 4, !tbaa !6
  %4678 = shufflevector <8 x i32> %4677, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4679 = getelementptr inbounds i32, ptr %4669, i64 -31
  %4680 = load <8 x i32>, ptr %4679, align 4, !tbaa !6
  %4681 = shufflevector <8 x i32> %4680, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4682 = mul <8 x i32> %4672, %4664
  %4683 = mul <8 x i32> %4675, %4665
  %4684 = mul <8 x i32> %4678, %4666
  %4685 = mul <8 x i32> %4681, %4667
  %4686 = add nuw i64 %4663, 32
  %4687 = icmp eq i64 %4686, %4660
  br i1 %4687, label %4688, label %4662, !llvm.loop !915

4688:                                             ; preds = %4662
  %4689 = mul <8 x i32> %4683, %4682
  %4690 = mul <8 x i32> %4684, %4689
  %4691 = mul <8 x i32> %4685, %4690
  %4692 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4691)
  %4693 = icmp eq i64 %4656, %4660
  br i1 %4693, label %4706, label %4694

4694:                                             ; preds = %4647, %4688
  %4695 = phi i64 [ %4650, %4647 ], [ %4661, %4688 ]
  %4696 = phi i32 [ 1, %4647 ], [ %4692, %4688 ]
  br label %4697

4697:                                             ; preds = %4694, %4697
  %4698 = phi i64 [ %4703, %4697 ], [ %4695, %4694 ]
  %4699 = phi i32 [ %4702, %4697 ], [ %4696, %4694 ]
  %4700 = getelementptr inbounds i32, ptr %9, i64 %4698
  %4701 = load i32, ptr %4700, align 4, !tbaa !6
  %4702 = mul nsw i32 %4701, %4699
  %4703 = add nsw i64 %4698, -1
  %4704 = trunc i64 %4698 to i32
  %4705 = icmp sgt i32 %4704, 0
  br i1 %4705, label %4697, label %4706, !llvm.loop !916

4706:                                             ; preds = %4697, %4688
  %4707 = phi i32 [ %4692, %4688 ], [ %4702, %4697 ]
  %4708 = and i64 %4657, 4294967295
  %4709 = getelementptr inbounds i32, ptr %6, i64 %4708
  %4710 = load i32, ptr %4709, align 4, !tbaa !6
  %4711 = mul nsw i32 %4710, %4707
  %4712 = add nsw i32 %4711, %4651
  %4713 = icmp sgt i64 %4649, 2
  %4714 = add nsw i64 %4650, -1
  %4715 = add i32 %4648, 1
  br i1 %4713, label %4647, label %4716, !llvm.loop !917

4716:                                             ; preds = %4706, %4642
  %4717 = phi i32 [ %4646, %4642 ], [ %4712, %4706 ]
  %4718 = sext i32 %4717 to i64
  %4719 = getelementptr inbounds i64, ptr %4310, i64 %4718
  %4720 = load i64, ptr %4719, align 8, !tbaa !121
  %4721 = sitofp i64 %4720 to float
  %4722 = fcmp fast olt float %4643, %4721
  br i1 %4722, label %4723, label %4724

4723:                                             ; preds = %4716
  store float %4721, ptr %4312, align 4, !tbaa !163
  br label %4724

4724:                                             ; preds = %4723, %4716
  %4725 = phi float [ %4721, %4723 ], [ %4643, %4716 ]
  %4726 = fadd fast double %4645, 1.000000e+00
  %4727 = add nuw nsw i32 %4644, 1
  br i1 %4636, label %4728, label %4775

4728:                                             ; preds = %4724
  %4729 = load i32, ptr %4, align 4, !tbaa !6
  %4730 = load i32, ptr %12, align 4, !tbaa !6
  %4731 = add nsw i32 %4730, -1
  %4732 = icmp slt i32 %4729, %4731
  br i1 %4732, label %4752, label %4733

4733:                                             ; preds = %4728
  %4734 = icmp eq i32 %4729, %4731
  br i1 %4734, label %4735, label %4768

4735:                                             ; preds = %4733
  store i32 0, ptr %4, align 4, !tbaa !6
  %4736 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4736, ptr %6, align 4, !tbaa !6
  br i1 %4641, label %4775, label %4737

4737:                                             ; preds = %4735, %4762
  %4738 = phi i64 [ %4766, %4762 ], [ 1, %4735 ]
  %4739 = getelementptr inbounds i32, ptr %4, i64 %4738
  %4740 = load i32, ptr %4739, align 4, !tbaa !6
  %4741 = getelementptr inbounds i32, ptr %12, i64 %4738
  %4742 = load i32, ptr %4741, align 4, !tbaa !6
  %4743 = add nsw i32 %4742, -1
  %4744 = icmp slt i32 %4740, %4743
  br i1 %4744, label %4745, label %4760

4745:                                             ; preds = %4737
  br i1 %4732, label %4752, label %4746

4746:                                             ; preds = %4745
  %4747 = getelementptr inbounds i32, ptr %7, i64 %4738
  %4748 = load i32, ptr %4747, align 4, !tbaa !6
  %4749 = getelementptr inbounds i32, ptr %6, i64 %4738
  %4750 = load i32, ptr %4749, align 4, !tbaa !6
  %4751 = add nsw i32 %4750, %4748
  store i32 %4751, ptr %4749, align 4, !tbaa !6
  br label %4770

4752:                                             ; preds = %4728, %4745
  %4753 = phi i32 [ %4740, %4745 ], [ %4729, %4728 ]
  %4754 = phi ptr [ %4739, %4745 ], [ %4, %4728 ]
  %4755 = phi i64 [ %4738, %4745 ], [ 0, %4728 ]
  %4756 = add nsw i32 %4753, 1
  store i32 %4756, ptr %4754, align 4, !tbaa !6
  %4757 = getelementptr inbounds i32, ptr %7, i64 %4755
  %4758 = load i32, ptr %4757, align 4, !tbaa !6
  %4759 = getelementptr inbounds i32, ptr %6, i64 %4755
  br label %4770

4760:                                             ; preds = %4737
  %4761 = icmp eq i32 %4740, %4743
  br i1 %4761, label %4762, label %4768

4762:                                             ; preds = %4760
  store i32 0, ptr %4739, align 4, !tbaa !6
  %4763 = getelementptr inbounds i32, ptr %8, i64 %4738
  %4764 = load i32, ptr %4763, align 4, !tbaa !6
  %4765 = getelementptr inbounds i32, ptr %6, i64 %4738
  store i32 %4764, ptr %4765, align 4, !tbaa !6
  %4766 = add nuw nsw i64 %4738, 1
  %4767 = icmp eq i64 %4766, %4639
  br i1 %4767, label %4775, label %4737, !llvm.loop !918

4768:                                             ; preds = %4733, %4760
  %4769 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1286, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5535

4770:                                             ; preds = %4746, %4752
  %4771 = phi ptr [ %4759, %4752 ], [ %4739, %4746 ]
  %4772 = phi i32 [ %4758, %4752 ], [ 1, %4746 ]
  %4773 = load i32, ptr %4771, align 4, !tbaa !6
  %4774 = add nsw i32 %4773, %4772
  store i32 %4774, ptr %4771, align 4, !tbaa !6
  br label %4775

4775:                                             ; preds = %4762, %4770, %4735, %4724
  %4776 = icmp eq i32 %4727, %5
  br i1 %4776, label %5530, label %4642, !llvm.loop !919

4777:                                             ; preds = %4625, %4915
  %4778 = phi float [ %4314, %4625 ], [ %4863, %4915 ]
  %4779 = phi i32 [ 0, %4625 ], [ %4864, %4915 ]
  %4780 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4626, label %4781, label %4850

4781:                                             ; preds = %4777, %4840
  %4782 = phi i32 [ %4849, %4840 ], [ 0, %4777 ]
  %4783 = phi i64 [ %4791, %4840 ], [ %4630, %4777 ]
  %4784 = phi i64 [ %4848, %4840 ], [ %4629, %4777 ]
  %4785 = phi i32 [ %4846, %4840 ], [ %4780, %4777 ]
  %4786 = sub i32 %4628, %4782
  %4787 = tail call i32 @llvm.smin.i32(i32 %4786, i32 0)
  %4788 = sub i32 %4786, %4787
  %4789 = zext i32 %4788 to i64
  %4790 = add nuw nsw i64 %4789, 1
  %4791 = add nsw i64 %4783, -1
  %4792 = icmp ult i32 %4788, 31
  br i1 %4792, label %4828, label %4793

4793:                                             ; preds = %4781
  %4794 = and i64 %4790, 8589934560
  %4795 = sub i64 %4784, %4794
  br label %4796

4796:                                             ; preds = %4796, %4793
  %4797 = phi i64 [ 0, %4793 ], [ %4820, %4796 ]
  %4798 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4793 ], [ %4816, %4796 ]
  %4799 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4793 ], [ %4817, %4796 ]
  %4800 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4793 ], [ %4818, %4796 ]
  %4801 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4793 ], [ %4819, %4796 ]
  %4802 = sub i64 %4784, %4797
  %4803 = getelementptr inbounds i32, ptr %11, i64 %4802
  %4804 = getelementptr inbounds i32, ptr %4803, i64 -7
  %4805 = load <8 x i32>, ptr %4804, align 4, !tbaa !6
  %4806 = shufflevector <8 x i32> %4805, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4807 = getelementptr inbounds i32, ptr %4803, i64 -15
  %4808 = load <8 x i32>, ptr %4807, align 4, !tbaa !6
  %4809 = shufflevector <8 x i32> %4808, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4810 = getelementptr inbounds i32, ptr %4803, i64 -23
  %4811 = load <8 x i32>, ptr %4810, align 4, !tbaa !6
  %4812 = shufflevector <8 x i32> %4811, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4813 = getelementptr inbounds i32, ptr %4803, i64 -31
  %4814 = load <8 x i32>, ptr %4813, align 4, !tbaa !6
  %4815 = shufflevector <8 x i32> %4814, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4816 = mul <8 x i32> %4806, %4798
  %4817 = mul <8 x i32> %4809, %4799
  %4818 = mul <8 x i32> %4812, %4800
  %4819 = mul <8 x i32> %4815, %4801
  %4820 = add nuw i64 %4797, 32
  %4821 = icmp eq i64 %4820, %4794
  br i1 %4821, label %4822, label %4796, !llvm.loop !920

4822:                                             ; preds = %4796
  %4823 = mul <8 x i32> %4817, %4816
  %4824 = mul <8 x i32> %4818, %4823
  %4825 = mul <8 x i32> %4819, %4824
  %4826 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4825)
  %4827 = icmp eq i64 %4790, %4794
  br i1 %4827, label %4840, label %4828

4828:                                             ; preds = %4781, %4822
  %4829 = phi i64 [ %4784, %4781 ], [ %4795, %4822 ]
  %4830 = phi i32 [ 1, %4781 ], [ %4826, %4822 ]
  br label %4831

4831:                                             ; preds = %4828, %4831
  %4832 = phi i64 [ %4837, %4831 ], [ %4829, %4828 ]
  %4833 = phi i32 [ %4836, %4831 ], [ %4830, %4828 ]
  %4834 = getelementptr inbounds i32, ptr %11, i64 %4832
  %4835 = load i32, ptr %4834, align 4, !tbaa !6
  %4836 = mul nsw i32 %4835, %4833
  %4837 = add nsw i64 %4832, -1
  %4838 = trunc i64 %4832 to i32
  %4839 = icmp sgt i32 %4838, 0
  br i1 %4839, label %4831, label %4840, !llvm.loop !921

4840:                                             ; preds = %4831, %4822
  %4841 = phi i32 [ %4826, %4822 ], [ %4836, %4831 ]
  %4842 = and i64 %4791, 4294967295
  %4843 = getelementptr inbounds i32, ptr %6, i64 %4842
  %4844 = load i32, ptr %4843, align 4, !tbaa !6
  %4845 = mul nsw i32 %4844, %4841
  %4846 = add nsw i32 %4845, %4785
  %4847 = icmp sgt i64 %4783, 2
  %4848 = add nsw i64 %4784, -1
  %4849 = add i32 %4782, 1
  br i1 %4847, label %4781, label %4850, !llvm.loop !922

4850:                                             ; preds = %4840, %4777
  %4851 = phi i32 [ %4780, %4777 ], [ %4846, %4840 ]
  %4852 = icmp slt i32 %4851, %5
  br i1 %4852, label %4855, label %4853

4853:                                             ; preds = %4850
  %4854 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1286, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5535

4855:                                             ; preds = %4850
  %4856 = sext i32 %4851 to i64
  %4857 = getelementptr inbounds i64, ptr %4310, i64 %4856
  %4858 = load i64, ptr %4857, align 8, !tbaa !121
  %4859 = sitofp i64 %4858 to float
  %4860 = fcmp fast olt float %4778, %4859
  br i1 %4860, label %4861, label %4862

4861:                                             ; preds = %4855
  store float %4859, ptr %4312, align 4, !tbaa !163
  br label %4862

4862:                                             ; preds = %4861, %4855
  %4863 = phi float [ %4859, %4861 ], [ %4778, %4855 ]
  %4864 = add nuw nsw i32 %4779, 1
  br i1 %4627, label %4865, label %4915

4865:                                             ; preds = %4862
  %4866 = load i32, ptr %4, align 4, !tbaa !6
  %4867 = load i32, ptr %12, align 4, !tbaa !6
  %4868 = add nsw i32 %4867, -1
  %4869 = icmp slt i32 %4866, %4868
  br i1 %4869, label %4892, label %4870

4870:                                             ; preds = %4865
  %4871 = icmp eq i32 %4866, %4868
  br i1 %4871, label %4872, label %4908

4872:                                             ; preds = %4870
  store i32 0, ptr %4, align 4, !tbaa !6
  %4873 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4873, ptr %6, align 4, !tbaa !6
  br i1 %4632, label %4915, label %4874

4874:                                             ; preds = %4872, %4902
  %4875 = phi i64 [ %4906, %4902 ], [ 1, %4872 ]
  %4876 = getelementptr inbounds i32, ptr %4, i64 %4875
  %4877 = load i32, ptr %4876, align 4, !tbaa !6
  %4878 = getelementptr inbounds i32, ptr %12, i64 %4875
  %4879 = load i32, ptr %4878, align 4, !tbaa !6
  %4880 = add nsw i32 %4879, -1
  %4881 = icmp slt i32 %4877, %4880
  br i1 %4881, label %4882, label %4900

4882:                                             ; preds = %4874
  br i1 %4869, label %4892, label %4883

4883:                                             ; preds = %4882
  %4884 = shl i64 %4875, 32
  %4885 = add i64 %4884, -4294967296
  %4886 = ashr exact i64 %4885, 32
  %4887 = getelementptr inbounds i32, ptr %7, i64 %4886
  %4888 = load i32, ptr %4887, align 4, !tbaa !6
  %4889 = getelementptr inbounds i32, ptr %6, i64 %4875
  %4890 = load i32, ptr %4889, align 4, !tbaa !6
  %4891 = add nsw i32 %4890, %4888
  store i32 %4891, ptr %4889, align 4, !tbaa !6
  br label %4910

4892:                                             ; preds = %4865, %4882
  %4893 = phi i32 [ %4877, %4882 ], [ %4866, %4865 ]
  %4894 = phi ptr [ %4876, %4882 ], [ %4, %4865 ]
  %4895 = phi i64 [ %4875, %4882 ], [ 0, %4865 ]
  %4896 = add nsw i32 %4893, 1
  store i32 %4896, ptr %4894, align 4, !tbaa !6
  %4897 = getelementptr inbounds i32, ptr %7, i64 %4895
  %4898 = load i32, ptr %4897, align 4, !tbaa !6
  %4899 = getelementptr inbounds i32, ptr %6, i64 %4895
  br label %4910

4900:                                             ; preds = %4874
  %4901 = icmp eq i32 %4877, %4880
  br i1 %4901, label %4902, label %4908

4902:                                             ; preds = %4900
  store i32 0, ptr %4876, align 4, !tbaa !6
  %4903 = getelementptr inbounds i32, ptr %8, i64 %4875
  %4904 = load i32, ptr %4903, align 4, !tbaa !6
  %4905 = getelementptr inbounds i32, ptr %6, i64 %4875
  store i32 %4904, ptr %4905, align 4, !tbaa !6
  %4906 = add nuw nsw i64 %4875, 1
  %4907 = icmp eq i64 %4906, %4630
  br i1 %4907, label %4915, label %4874, !llvm.loop !923

4908:                                             ; preds = %4870, %4900
  %4909 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1286, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5535

4910:                                             ; preds = %4883, %4892
  %4911 = phi ptr [ %4899, %4892 ], [ %4876, %4883 ]
  %4912 = phi i32 [ %4898, %4892 ], [ 1, %4883 ]
  %4913 = load i32, ptr %4911, align 4, !tbaa !6
  %4914 = add nsw i32 %4913, %4912
  store i32 %4914, ptr %4911, align 4, !tbaa !6
  br label %4915

4915:                                             ; preds = %4902, %4910, %4872, %4862
  %4916 = icmp eq i32 %4864, %5
  br i1 %4916, label %5530, label %4777, !llvm.loop !924

4917:                                             ; preds = %4316
  %4918 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1286, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5530

4919:                                             ; preds = %18
  %4920 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4921 = load ptr, ptr %4920, align 8, !tbaa !10
  %4922 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4923 = load ptr, ptr %4922, align 8, !tbaa !10
  %4924 = load i64, ptr %4921, align 8, !tbaa !121
  %4925 = sitofp i64 %4924 to double
  store double %4925, ptr %4923, align 8, !tbaa !19
  %4926 = icmp eq i32 %13, 0
  br i1 %4926, label %5530, label %4927

4927:                                             ; preds = %4919
  switch i32 %1, label %5528 [
    i32 1, label %4928
    i32 0, label %5230
  ]

4928:                                             ; preds = %4927
  %4929 = getelementptr inbounds i32, ptr %3, i64 %19
  %4930 = load i32, ptr %4929, align 4, !tbaa !6
  %4931 = icmp eq i32 %4930, 0
  %4932 = icmp sgt i32 %5, 0
  br i1 %4931, label %4942, label %4933

4933:                                             ; preds = %4928
  br i1 %4932, label %4934, label %5530

4934:                                             ; preds = %4933
  %4935 = icmp sgt i32 %13, 1
  %4936 = icmp sgt i32 %13, 0
  %4937 = add i32 %13, -2
  %4938 = zext i32 %4937 to i64
  %4939 = zext i32 %13 to i64
  %4940 = add nuw i32 %5, 1
  %4941 = icmp eq i32 %13, 1
  br label %5090

4942:                                             ; preds = %4928
  br i1 %4932, label %4943, label %5530

4943:                                             ; preds = %4942
  %4944 = icmp sgt i32 %13, 1
  %4945 = icmp sgt i32 %13, 0
  %4946 = add i32 %13, -2
  %4947 = zext i32 %4946 to i64
  %4948 = zext i32 %13 to i64
  %4949 = add nuw i32 %5, 1
  %4950 = icmp eq i32 %13, 1
  br label %4951

4951:                                             ; preds = %4943, %5088
  %4952 = phi double [ %4925, %4943 ], [ %5038, %5088 ]
  %4953 = phi i32 [ 0, %4943 ], [ %5040, %5088 ]
  %4954 = phi double [ 0.000000e+00, %4943 ], [ %5039, %5088 ]
  %4955 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4944, label %4956, label %5025

4956:                                             ; preds = %4951, %5015
  %4957 = phi i32 [ %5024, %5015 ], [ 0, %4951 ]
  %4958 = phi i64 [ %4966, %5015 ], [ %4948, %4951 ]
  %4959 = phi i64 [ %5023, %5015 ], [ %4947, %4951 ]
  %4960 = phi i32 [ %5021, %5015 ], [ %4955, %4951 ]
  %4961 = sub i32 %4946, %4957
  %4962 = tail call i32 @llvm.smin.i32(i32 %4961, i32 0)
  %4963 = sub i32 %4961, %4962
  %4964 = zext i32 %4963 to i64
  %4965 = add nuw nsw i64 %4964, 1
  %4966 = add nsw i64 %4958, -1
  %4967 = icmp ult i32 %4963, 31
  br i1 %4967, label %5003, label %4968

4968:                                             ; preds = %4956
  %4969 = and i64 %4965, 8589934560
  %4970 = sub i64 %4959, %4969
  br label %4971

4971:                                             ; preds = %4971, %4968
  %4972 = phi i64 [ 0, %4968 ], [ %4995, %4971 ]
  %4973 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4968 ], [ %4991, %4971 ]
  %4974 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4968 ], [ %4992, %4971 ]
  %4975 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4968 ], [ %4993, %4971 ]
  %4976 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4968 ], [ %4994, %4971 ]
  %4977 = sub i64 %4959, %4972
  %4978 = getelementptr inbounds i32, ptr %9, i64 %4977
  %4979 = getelementptr inbounds i32, ptr %4978, i64 -7
  %4980 = load <8 x i32>, ptr %4979, align 4, !tbaa !6
  %4981 = shufflevector <8 x i32> %4980, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4982 = getelementptr inbounds i32, ptr %4978, i64 -15
  %4983 = load <8 x i32>, ptr %4982, align 4, !tbaa !6
  %4984 = shufflevector <8 x i32> %4983, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4985 = getelementptr inbounds i32, ptr %4978, i64 -23
  %4986 = load <8 x i32>, ptr %4985, align 4, !tbaa !6
  %4987 = shufflevector <8 x i32> %4986, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4988 = getelementptr inbounds i32, ptr %4978, i64 -31
  %4989 = load <8 x i32>, ptr %4988, align 4, !tbaa !6
  %4990 = shufflevector <8 x i32> %4989, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4991 = mul <8 x i32> %4981, %4973
  %4992 = mul <8 x i32> %4984, %4974
  %4993 = mul <8 x i32> %4987, %4975
  %4994 = mul <8 x i32> %4990, %4976
  %4995 = add nuw i64 %4972, 32
  %4996 = icmp eq i64 %4995, %4969
  br i1 %4996, label %4997, label %4971, !llvm.loop !925

4997:                                             ; preds = %4971
  %4998 = mul <8 x i32> %4992, %4991
  %4999 = mul <8 x i32> %4993, %4998
  %5000 = mul <8 x i32> %4994, %4999
  %5001 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5000)
  %5002 = icmp eq i64 %4965, %4969
  br i1 %5002, label %5015, label %5003

5003:                                             ; preds = %4956, %4997
  %5004 = phi i64 [ %4959, %4956 ], [ %4970, %4997 ]
  %5005 = phi i32 [ 1, %4956 ], [ %5001, %4997 ]
  br label %5006

5006:                                             ; preds = %5003, %5006
  %5007 = phi i64 [ %5012, %5006 ], [ %5004, %5003 ]
  %5008 = phi i32 [ %5011, %5006 ], [ %5005, %5003 ]
  %5009 = getelementptr inbounds i32, ptr %9, i64 %5007
  %5010 = load i32, ptr %5009, align 4, !tbaa !6
  %5011 = mul nsw i32 %5010, %5008
  %5012 = add nsw i64 %5007, -1
  %5013 = trunc i64 %5007 to i32
  %5014 = icmp sgt i32 %5013, 0
  br i1 %5014, label %5006, label %5015, !llvm.loop !926

5015:                                             ; preds = %5006, %4997
  %5016 = phi i32 [ %5001, %4997 ], [ %5011, %5006 ]
  %5017 = and i64 %4966, 4294967295
  %5018 = getelementptr inbounds i32, ptr %6, i64 %5017
  %5019 = load i32, ptr %5018, align 4, !tbaa !6
  %5020 = mul nsw i32 %5019, %5016
  %5021 = add nsw i32 %5020, %4960
  %5022 = icmp sgt i64 %4958, 2
  %5023 = add nsw i64 %4959, -1
  %5024 = add i32 %4957, 1
  br i1 %5022, label %4956, label %5025, !llvm.loop !927

5025:                                             ; preds = %5015, %4951
  %5026 = phi i32 [ %4955, %4951 ], [ %5021, %5015 ]
  %5027 = sext i32 %5026 to i64
  %5028 = getelementptr inbounds double, ptr %2, i64 %5027
  %5029 = load double, ptr %5028, align 8, !tbaa !19
  %5030 = getelementptr inbounds i64, ptr %4921, i64 %5027
  %5031 = load i64, ptr %5030, align 8, !tbaa !121
  %5032 = sitofp i64 %5031 to double
  %5033 = fcmp fast one double %5029, 0.000000e+00
  %5034 = fcmp fast olt double %4952, %5032
  %5035 = select i1 %5033, i1 %5034, i1 false
  br i1 %5035, label %5036, label %5037

5036:                                             ; preds = %5025
  store double %5032, ptr %4923, align 8, !tbaa !19
  br label %5037

5037:                                             ; preds = %5036, %5025
  %5038 = phi double [ %5032, %5036 ], [ %4952, %5025 ]
  %5039 = fadd fast double %5029, %4954
  %5040 = add nuw nsw i32 %4953, 1
  br i1 %4945, label %5041, label %5088

5041:                                             ; preds = %5037
  %5042 = load i32, ptr %4, align 4, !tbaa !6
  %5043 = load i32, ptr %12, align 4, !tbaa !6
  %5044 = add nsw i32 %5043, -1
  %5045 = icmp slt i32 %5042, %5044
  br i1 %5045, label %5065, label %5046

5046:                                             ; preds = %5041
  %5047 = icmp eq i32 %5042, %5044
  br i1 %5047, label %5048, label %5081

5048:                                             ; preds = %5046
  store i32 0, ptr %4, align 4, !tbaa !6
  %5049 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5049, ptr %6, align 4, !tbaa !6
  br i1 %4950, label %5088, label %5050

5050:                                             ; preds = %5048, %5075
  %5051 = phi i64 [ %5079, %5075 ], [ 1, %5048 ]
  %5052 = getelementptr inbounds i32, ptr %4, i64 %5051
  %5053 = load i32, ptr %5052, align 4, !tbaa !6
  %5054 = getelementptr inbounds i32, ptr %12, i64 %5051
  %5055 = load i32, ptr %5054, align 4, !tbaa !6
  %5056 = add nsw i32 %5055, -1
  %5057 = icmp slt i32 %5053, %5056
  br i1 %5057, label %5058, label %5073

5058:                                             ; preds = %5050
  br i1 %5045, label %5065, label %5059

5059:                                             ; preds = %5058
  %5060 = getelementptr inbounds i32, ptr %7, i64 %5051
  %5061 = load i32, ptr %5060, align 4, !tbaa !6
  %5062 = getelementptr inbounds i32, ptr %6, i64 %5051
  %5063 = load i32, ptr %5062, align 4, !tbaa !6
  %5064 = add nsw i32 %5063, %5061
  store i32 %5064, ptr %5062, align 4, !tbaa !6
  br label %5083

5065:                                             ; preds = %5041, %5058
  %5066 = phi i32 [ %5053, %5058 ], [ %5042, %5041 ]
  %5067 = phi ptr [ %5052, %5058 ], [ %4, %5041 ]
  %5068 = phi i64 [ %5051, %5058 ], [ 0, %5041 ]
  %5069 = add nsw i32 %5066, 1
  store i32 %5069, ptr %5067, align 4, !tbaa !6
  %5070 = getelementptr inbounds i32, ptr %7, i64 %5068
  %5071 = load i32, ptr %5070, align 4, !tbaa !6
  %5072 = getelementptr inbounds i32, ptr %6, i64 %5068
  br label %5083

5073:                                             ; preds = %5050
  %5074 = icmp eq i32 %5053, %5056
  br i1 %5074, label %5075, label %5081

5075:                                             ; preds = %5073
  store i32 0, ptr %5052, align 4, !tbaa !6
  %5076 = getelementptr inbounds i32, ptr %8, i64 %5051
  %5077 = load i32, ptr %5076, align 4, !tbaa !6
  %5078 = getelementptr inbounds i32, ptr %6, i64 %5051
  store i32 %5077, ptr %5078, align 4, !tbaa !6
  %5079 = add nuw nsw i64 %5051, 1
  %5080 = icmp eq i64 %5079, %4948
  br i1 %5080, label %5088, label %5050, !llvm.loop !928

5081:                                             ; preds = %5046, %5073
  %5082 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1291, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5535

5083:                                             ; preds = %5059, %5065
  %5084 = phi ptr [ %5072, %5065 ], [ %5052, %5059 ]
  %5085 = phi i32 [ %5071, %5065 ], [ 1, %5059 ]
  %5086 = load i32, ptr %5084, align 4, !tbaa !6
  %5087 = add nsw i32 %5086, %5085
  store i32 %5087, ptr %5084, align 4, !tbaa !6
  br label %5088

5088:                                             ; preds = %5075, %5083, %5048, %5037
  %5089 = icmp eq i32 %5040, %5
  br i1 %5089, label %5530, label %4951, !llvm.loop !929

5090:                                             ; preds = %4934, %5228
  %5091 = phi double [ %4925, %4934 ], [ %5176, %5228 ]
  %5092 = phi i32 [ 0, %4934 ], [ %5177, %5228 ]
  %5093 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4935, label %5094, label %5163

5094:                                             ; preds = %5090, %5153
  %5095 = phi i32 [ %5162, %5153 ], [ 0, %5090 ]
  %5096 = phi i64 [ %5104, %5153 ], [ %4939, %5090 ]
  %5097 = phi i64 [ %5161, %5153 ], [ %4938, %5090 ]
  %5098 = phi i32 [ %5159, %5153 ], [ %5093, %5090 ]
  %5099 = sub i32 %4937, %5095
  %5100 = tail call i32 @llvm.smin.i32(i32 %5099, i32 0)
  %5101 = sub i32 %5099, %5100
  %5102 = zext i32 %5101 to i64
  %5103 = add nuw nsw i64 %5102, 1
  %5104 = add nsw i64 %5096, -1
  %5105 = icmp ult i32 %5101, 31
  br i1 %5105, label %5141, label %5106

5106:                                             ; preds = %5094
  %5107 = and i64 %5103, 8589934560
  %5108 = sub i64 %5097, %5107
  br label %5109

5109:                                             ; preds = %5109, %5106
  %5110 = phi i64 [ 0, %5106 ], [ %5133, %5109 ]
  %5111 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5106 ], [ %5129, %5109 ]
  %5112 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5106 ], [ %5130, %5109 ]
  %5113 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5106 ], [ %5131, %5109 ]
  %5114 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5106 ], [ %5132, %5109 ]
  %5115 = sub i64 %5097, %5110
  %5116 = getelementptr inbounds i32, ptr %11, i64 %5115
  %5117 = getelementptr inbounds i32, ptr %5116, i64 -7
  %5118 = load <8 x i32>, ptr %5117, align 4, !tbaa !6
  %5119 = shufflevector <8 x i32> %5118, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5120 = getelementptr inbounds i32, ptr %5116, i64 -15
  %5121 = load <8 x i32>, ptr %5120, align 4, !tbaa !6
  %5122 = shufflevector <8 x i32> %5121, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5123 = getelementptr inbounds i32, ptr %5116, i64 -23
  %5124 = load <8 x i32>, ptr %5123, align 4, !tbaa !6
  %5125 = shufflevector <8 x i32> %5124, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5126 = getelementptr inbounds i32, ptr %5116, i64 -31
  %5127 = load <8 x i32>, ptr %5126, align 4, !tbaa !6
  %5128 = shufflevector <8 x i32> %5127, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5129 = mul <8 x i32> %5119, %5111
  %5130 = mul <8 x i32> %5122, %5112
  %5131 = mul <8 x i32> %5125, %5113
  %5132 = mul <8 x i32> %5128, %5114
  %5133 = add nuw i64 %5110, 32
  %5134 = icmp eq i64 %5133, %5107
  br i1 %5134, label %5135, label %5109, !llvm.loop !930

5135:                                             ; preds = %5109
  %5136 = mul <8 x i32> %5130, %5129
  %5137 = mul <8 x i32> %5131, %5136
  %5138 = mul <8 x i32> %5132, %5137
  %5139 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5138)
  %5140 = icmp eq i64 %5103, %5107
  br i1 %5140, label %5153, label %5141

5141:                                             ; preds = %5094, %5135
  %5142 = phi i64 [ %5097, %5094 ], [ %5108, %5135 ]
  %5143 = phi i32 [ 1, %5094 ], [ %5139, %5135 ]
  br label %5144

5144:                                             ; preds = %5141, %5144
  %5145 = phi i64 [ %5150, %5144 ], [ %5142, %5141 ]
  %5146 = phi i32 [ %5149, %5144 ], [ %5143, %5141 ]
  %5147 = getelementptr inbounds i32, ptr %11, i64 %5145
  %5148 = load i32, ptr %5147, align 4, !tbaa !6
  %5149 = mul nsw i32 %5148, %5146
  %5150 = add nsw i64 %5145, -1
  %5151 = trunc i64 %5145 to i32
  %5152 = icmp sgt i32 %5151, 0
  br i1 %5152, label %5144, label %5153, !llvm.loop !931

5153:                                             ; preds = %5144, %5135
  %5154 = phi i32 [ %5139, %5135 ], [ %5149, %5144 ]
  %5155 = and i64 %5104, 4294967295
  %5156 = getelementptr inbounds i32, ptr %6, i64 %5155
  %5157 = load i32, ptr %5156, align 4, !tbaa !6
  %5158 = mul nsw i32 %5157, %5154
  %5159 = add nsw i32 %5158, %5098
  %5160 = icmp sgt i64 %5096, 2
  %5161 = add nsw i64 %5097, -1
  %5162 = add i32 %5095, 1
  br i1 %5160, label %5094, label %5163, !llvm.loop !932

5163:                                             ; preds = %5153, %5090
  %5164 = phi i32 [ %5093, %5090 ], [ %5159, %5153 ]
  %5165 = icmp slt i32 %5164, %5
  br i1 %5165, label %5168, label %5166

5166:                                             ; preds = %5163
  %5167 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1291, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5535

5168:                                             ; preds = %5163
  %5169 = sext i32 %5164 to i64
  %5170 = getelementptr inbounds i64, ptr %4921, i64 %5169
  %5171 = load i64, ptr %5170, align 8, !tbaa !121
  %5172 = sitofp i64 %5171 to double
  %5173 = fcmp fast olt double %5091, %5172
  br i1 %5173, label %5174, label %5175

5174:                                             ; preds = %5168
  store double %5172, ptr %4923, align 8, !tbaa !19
  br label %5175

5175:                                             ; preds = %5168, %5174
  %5176 = phi double [ %5091, %5168 ], [ %5172, %5174 ]
  %5177 = add nuw nsw i32 %5092, 1
  br i1 %4936, label %5178, label %5228

5178:                                             ; preds = %5175
  %5179 = load i32, ptr %4, align 4, !tbaa !6
  %5180 = load i32, ptr %12, align 4, !tbaa !6
  %5181 = add nsw i32 %5180, -1
  %5182 = icmp slt i32 %5179, %5181
  br i1 %5182, label %5205, label %5183

5183:                                             ; preds = %5178
  %5184 = icmp eq i32 %5179, %5181
  br i1 %5184, label %5185, label %5221

5185:                                             ; preds = %5183
  store i32 0, ptr %4, align 4, !tbaa !6
  %5186 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5186, ptr %6, align 4, !tbaa !6
  br i1 %4941, label %5228, label %5187

5187:                                             ; preds = %5185, %5215
  %5188 = phi i64 [ %5219, %5215 ], [ 1, %5185 ]
  %5189 = getelementptr inbounds i32, ptr %4, i64 %5188
  %5190 = load i32, ptr %5189, align 4, !tbaa !6
  %5191 = getelementptr inbounds i32, ptr %12, i64 %5188
  %5192 = load i32, ptr %5191, align 4, !tbaa !6
  %5193 = add nsw i32 %5192, -1
  %5194 = icmp slt i32 %5190, %5193
  br i1 %5194, label %5195, label %5213

5195:                                             ; preds = %5187
  br i1 %5182, label %5205, label %5196

5196:                                             ; preds = %5195
  %5197 = shl i64 %5188, 32
  %5198 = add i64 %5197, -4294967296
  %5199 = ashr exact i64 %5198, 32
  %5200 = getelementptr inbounds i32, ptr %7, i64 %5199
  %5201 = load i32, ptr %5200, align 4, !tbaa !6
  %5202 = getelementptr inbounds i32, ptr %6, i64 %5188
  %5203 = load i32, ptr %5202, align 4, !tbaa !6
  %5204 = add nsw i32 %5203, %5201
  store i32 %5204, ptr %5202, align 4, !tbaa !6
  br label %5223

5205:                                             ; preds = %5178, %5195
  %5206 = phi i32 [ %5190, %5195 ], [ %5179, %5178 ]
  %5207 = phi ptr [ %5189, %5195 ], [ %4, %5178 ]
  %5208 = phi i64 [ %5188, %5195 ], [ 0, %5178 ]
  %5209 = add nsw i32 %5206, 1
  store i32 %5209, ptr %5207, align 4, !tbaa !6
  %5210 = getelementptr inbounds i32, ptr %7, i64 %5208
  %5211 = load i32, ptr %5210, align 4, !tbaa !6
  %5212 = getelementptr inbounds i32, ptr %6, i64 %5208
  br label %5223

5213:                                             ; preds = %5187
  %5214 = icmp eq i32 %5190, %5193
  br i1 %5214, label %5215, label %5221

5215:                                             ; preds = %5213
  store i32 0, ptr %5189, align 4, !tbaa !6
  %5216 = getelementptr inbounds i32, ptr %8, i64 %5188
  %5217 = load i32, ptr %5216, align 4, !tbaa !6
  %5218 = getelementptr inbounds i32, ptr %6, i64 %5188
  store i32 %5217, ptr %5218, align 4, !tbaa !6
  %5219 = add nuw nsw i64 %5188, 1
  %5220 = icmp eq i64 %5219, %4939
  br i1 %5220, label %5228, label %5187, !llvm.loop !933

5221:                                             ; preds = %5183, %5213
  %5222 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1291, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5535

5223:                                             ; preds = %5196, %5205
  %5224 = phi ptr [ %5212, %5205 ], [ %5189, %5196 ]
  %5225 = phi i32 [ %5211, %5205 ], [ 1, %5196 ]
  %5226 = load i32, ptr %5224, align 4, !tbaa !6
  %5227 = add nsw i32 %5226, %5225
  store i32 %5227, ptr %5224, align 4, !tbaa !6
  br label %5228

5228:                                             ; preds = %5215, %5223, %5185, %5175
  %5229 = icmp eq i32 %5177, %5
  br i1 %5229, label %5530, label %5090, !llvm.loop !934

5230:                                             ; preds = %4927
  %5231 = getelementptr inbounds i32, ptr %3, i64 %19
  %5232 = load i32, ptr %5231, align 4, !tbaa !6
  %5233 = icmp eq i32 %5232, 0
  %5234 = icmp sgt i32 %5, 0
  br i1 %5233, label %5244, label %5235

5235:                                             ; preds = %5230
  br i1 %5234, label %5236, label %5530

5236:                                             ; preds = %5235
  %5237 = icmp sgt i32 %13, 1
  %5238 = icmp sgt i32 %13, 0
  %5239 = add i32 %13, -2
  %5240 = zext i32 %5239 to i64
  %5241 = zext i32 %13 to i64
  %5242 = add nuw i32 %5, 1
  %5243 = icmp eq i32 %13, 1
  br label %5388

5244:                                             ; preds = %5230
  br i1 %5234, label %5245, label %5530

5245:                                             ; preds = %5244
  %5246 = icmp sgt i32 %13, 1
  %5247 = icmp sgt i32 %13, 0
  %5248 = add i32 %13, -2
  %5249 = zext i32 %5248 to i64
  %5250 = zext i32 %13 to i64
  %5251 = add nuw i32 %5, 1
  %5252 = icmp eq i32 %13, 1
  br label %5253

5253:                                             ; preds = %5245, %5386
  %5254 = phi double [ %4925, %5245 ], [ %5336, %5386 ]
  %5255 = phi i32 [ 0, %5245 ], [ %5338, %5386 ]
  %5256 = phi double [ 0.000000e+00, %5245 ], [ %5337, %5386 ]
  %5257 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %5246, label %5258, label %5327

5258:                                             ; preds = %5253, %5317
  %5259 = phi i32 [ %5326, %5317 ], [ 0, %5253 ]
  %5260 = phi i64 [ %5268, %5317 ], [ %5250, %5253 ]
  %5261 = phi i64 [ %5325, %5317 ], [ %5249, %5253 ]
  %5262 = phi i32 [ %5323, %5317 ], [ %5257, %5253 ]
  %5263 = sub i32 %5248, %5259
  %5264 = tail call i32 @llvm.smin.i32(i32 %5263, i32 0)
  %5265 = sub i32 %5263, %5264
  %5266 = zext i32 %5265 to i64
  %5267 = add nuw nsw i64 %5266, 1
  %5268 = add nsw i64 %5260, -1
  %5269 = icmp ult i32 %5265, 31
  br i1 %5269, label %5305, label %5270

5270:                                             ; preds = %5258
  %5271 = and i64 %5267, 8589934560
  %5272 = sub i64 %5261, %5271
  br label %5273

5273:                                             ; preds = %5273, %5270
  %5274 = phi i64 [ 0, %5270 ], [ %5297, %5273 ]
  %5275 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5270 ], [ %5293, %5273 ]
  %5276 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5270 ], [ %5294, %5273 ]
  %5277 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5270 ], [ %5295, %5273 ]
  %5278 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5270 ], [ %5296, %5273 ]
  %5279 = sub i64 %5261, %5274
  %5280 = getelementptr inbounds i32, ptr %9, i64 %5279
  %5281 = getelementptr inbounds i32, ptr %5280, i64 -7
  %5282 = load <8 x i32>, ptr %5281, align 4, !tbaa !6
  %5283 = shufflevector <8 x i32> %5282, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5284 = getelementptr inbounds i32, ptr %5280, i64 -15
  %5285 = load <8 x i32>, ptr %5284, align 4, !tbaa !6
  %5286 = shufflevector <8 x i32> %5285, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5287 = getelementptr inbounds i32, ptr %5280, i64 -23
  %5288 = load <8 x i32>, ptr %5287, align 4, !tbaa !6
  %5289 = shufflevector <8 x i32> %5288, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5290 = getelementptr inbounds i32, ptr %5280, i64 -31
  %5291 = load <8 x i32>, ptr %5290, align 4, !tbaa !6
  %5292 = shufflevector <8 x i32> %5291, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5293 = mul <8 x i32> %5283, %5275
  %5294 = mul <8 x i32> %5286, %5276
  %5295 = mul <8 x i32> %5289, %5277
  %5296 = mul <8 x i32> %5292, %5278
  %5297 = add nuw i64 %5274, 32
  %5298 = icmp eq i64 %5297, %5271
  br i1 %5298, label %5299, label %5273, !llvm.loop !935

5299:                                             ; preds = %5273
  %5300 = mul <8 x i32> %5294, %5293
  %5301 = mul <8 x i32> %5295, %5300
  %5302 = mul <8 x i32> %5296, %5301
  %5303 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5302)
  %5304 = icmp eq i64 %5267, %5271
  br i1 %5304, label %5317, label %5305

5305:                                             ; preds = %5258, %5299
  %5306 = phi i64 [ %5261, %5258 ], [ %5272, %5299 ]
  %5307 = phi i32 [ 1, %5258 ], [ %5303, %5299 ]
  br label %5308

5308:                                             ; preds = %5305, %5308
  %5309 = phi i64 [ %5314, %5308 ], [ %5306, %5305 ]
  %5310 = phi i32 [ %5313, %5308 ], [ %5307, %5305 ]
  %5311 = getelementptr inbounds i32, ptr %9, i64 %5309
  %5312 = load i32, ptr %5311, align 4, !tbaa !6
  %5313 = mul nsw i32 %5312, %5310
  %5314 = add nsw i64 %5309, -1
  %5315 = trunc i64 %5309 to i32
  %5316 = icmp sgt i32 %5315, 0
  br i1 %5316, label %5308, label %5317, !llvm.loop !936

5317:                                             ; preds = %5308, %5299
  %5318 = phi i32 [ %5303, %5299 ], [ %5313, %5308 ]
  %5319 = and i64 %5268, 4294967295
  %5320 = getelementptr inbounds i32, ptr %6, i64 %5319
  %5321 = load i32, ptr %5320, align 4, !tbaa !6
  %5322 = mul nsw i32 %5321, %5318
  %5323 = add nsw i32 %5322, %5262
  %5324 = icmp sgt i64 %5260, 2
  %5325 = add nsw i64 %5261, -1
  %5326 = add i32 %5259, 1
  br i1 %5324, label %5258, label %5327, !llvm.loop !937

5327:                                             ; preds = %5317, %5253
  %5328 = phi i32 [ %5257, %5253 ], [ %5323, %5317 ]
  %5329 = sext i32 %5328 to i64
  %5330 = getelementptr inbounds i64, ptr %4921, i64 %5329
  %5331 = load i64, ptr %5330, align 8, !tbaa !121
  %5332 = sitofp i64 %5331 to double
  %5333 = fcmp fast olt double %5254, %5332
  br i1 %5333, label %5334, label %5335

5334:                                             ; preds = %5327
  store double %5332, ptr %4923, align 8, !tbaa !19
  br label %5335

5335:                                             ; preds = %5334, %5327
  %5336 = phi double [ %5332, %5334 ], [ %5254, %5327 ]
  %5337 = fadd fast double %5256, 1.000000e+00
  %5338 = add nuw nsw i32 %5255, 1
  br i1 %5247, label %5339, label %5386

5339:                                             ; preds = %5335
  %5340 = load i32, ptr %4, align 4, !tbaa !6
  %5341 = load i32, ptr %12, align 4, !tbaa !6
  %5342 = add nsw i32 %5341, -1
  %5343 = icmp slt i32 %5340, %5342
  br i1 %5343, label %5363, label %5344

5344:                                             ; preds = %5339
  %5345 = icmp eq i32 %5340, %5342
  br i1 %5345, label %5346, label %5379

5346:                                             ; preds = %5344
  store i32 0, ptr %4, align 4, !tbaa !6
  %5347 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5347, ptr %6, align 4, !tbaa !6
  br i1 %5252, label %5386, label %5348

5348:                                             ; preds = %5346, %5373
  %5349 = phi i64 [ %5377, %5373 ], [ 1, %5346 ]
  %5350 = getelementptr inbounds i32, ptr %4, i64 %5349
  %5351 = load i32, ptr %5350, align 4, !tbaa !6
  %5352 = getelementptr inbounds i32, ptr %12, i64 %5349
  %5353 = load i32, ptr %5352, align 4, !tbaa !6
  %5354 = add nsw i32 %5353, -1
  %5355 = icmp slt i32 %5351, %5354
  br i1 %5355, label %5356, label %5371

5356:                                             ; preds = %5348
  br i1 %5343, label %5363, label %5357

5357:                                             ; preds = %5356
  %5358 = getelementptr inbounds i32, ptr %7, i64 %5349
  %5359 = load i32, ptr %5358, align 4, !tbaa !6
  %5360 = getelementptr inbounds i32, ptr %6, i64 %5349
  %5361 = load i32, ptr %5360, align 4, !tbaa !6
  %5362 = add nsw i32 %5361, %5359
  store i32 %5362, ptr %5360, align 4, !tbaa !6
  br label %5381

5363:                                             ; preds = %5339, %5356
  %5364 = phi i32 [ %5351, %5356 ], [ %5340, %5339 ]
  %5365 = phi ptr [ %5350, %5356 ], [ %4, %5339 ]
  %5366 = phi i64 [ %5349, %5356 ], [ 0, %5339 ]
  %5367 = add nsw i32 %5364, 1
  store i32 %5367, ptr %5365, align 4, !tbaa !6
  %5368 = getelementptr inbounds i32, ptr %7, i64 %5366
  %5369 = load i32, ptr %5368, align 4, !tbaa !6
  %5370 = getelementptr inbounds i32, ptr %6, i64 %5366
  br label %5381

5371:                                             ; preds = %5348
  %5372 = icmp eq i32 %5351, %5354
  br i1 %5372, label %5373, label %5379

5373:                                             ; preds = %5371
  store i32 0, ptr %5350, align 4, !tbaa !6
  %5374 = getelementptr inbounds i32, ptr %8, i64 %5349
  %5375 = load i32, ptr %5374, align 4, !tbaa !6
  %5376 = getelementptr inbounds i32, ptr %6, i64 %5349
  store i32 %5375, ptr %5376, align 4, !tbaa !6
  %5377 = add nuw nsw i64 %5349, 1
  %5378 = icmp eq i64 %5377, %5250
  br i1 %5378, label %5386, label %5348, !llvm.loop !938

5379:                                             ; preds = %5344, %5371
  %5380 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1291, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5535

5381:                                             ; preds = %5357, %5363
  %5382 = phi ptr [ %5370, %5363 ], [ %5350, %5357 ]
  %5383 = phi i32 [ %5369, %5363 ], [ 1, %5357 ]
  %5384 = load i32, ptr %5382, align 4, !tbaa !6
  %5385 = add nsw i32 %5384, %5383
  store i32 %5385, ptr %5382, align 4, !tbaa !6
  br label %5386

5386:                                             ; preds = %5373, %5381, %5346, %5335
  %5387 = icmp eq i32 %5338, %5
  br i1 %5387, label %5530, label %5253, !llvm.loop !939

5388:                                             ; preds = %5236, %5526
  %5389 = phi double [ %4925, %5236 ], [ %5474, %5526 ]
  %5390 = phi i32 [ 0, %5236 ], [ %5475, %5526 ]
  %5391 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %5237, label %5392, label %5461

5392:                                             ; preds = %5388, %5451
  %5393 = phi i32 [ %5460, %5451 ], [ 0, %5388 ]
  %5394 = phi i64 [ %5402, %5451 ], [ %5241, %5388 ]
  %5395 = phi i64 [ %5459, %5451 ], [ %5240, %5388 ]
  %5396 = phi i32 [ %5457, %5451 ], [ %5391, %5388 ]
  %5397 = sub i32 %5239, %5393
  %5398 = tail call i32 @llvm.smin.i32(i32 %5397, i32 0)
  %5399 = sub i32 %5397, %5398
  %5400 = zext i32 %5399 to i64
  %5401 = add nuw nsw i64 %5400, 1
  %5402 = add nsw i64 %5394, -1
  %5403 = icmp ult i32 %5399, 31
  br i1 %5403, label %5439, label %5404

5404:                                             ; preds = %5392
  %5405 = and i64 %5401, 8589934560
  %5406 = sub i64 %5395, %5405
  br label %5407

5407:                                             ; preds = %5407, %5404
  %5408 = phi i64 [ 0, %5404 ], [ %5431, %5407 ]
  %5409 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5404 ], [ %5427, %5407 ]
  %5410 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5404 ], [ %5428, %5407 ]
  %5411 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5404 ], [ %5429, %5407 ]
  %5412 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5404 ], [ %5430, %5407 ]
  %5413 = sub i64 %5395, %5408
  %5414 = getelementptr inbounds i32, ptr %11, i64 %5413
  %5415 = getelementptr inbounds i32, ptr %5414, i64 -7
  %5416 = load <8 x i32>, ptr %5415, align 4, !tbaa !6
  %5417 = shufflevector <8 x i32> %5416, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5418 = getelementptr inbounds i32, ptr %5414, i64 -15
  %5419 = load <8 x i32>, ptr %5418, align 4, !tbaa !6
  %5420 = shufflevector <8 x i32> %5419, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5421 = getelementptr inbounds i32, ptr %5414, i64 -23
  %5422 = load <8 x i32>, ptr %5421, align 4, !tbaa !6
  %5423 = shufflevector <8 x i32> %5422, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5424 = getelementptr inbounds i32, ptr %5414, i64 -31
  %5425 = load <8 x i32>, ptr %5424, align 4, !tbaa !6
  %5426 = shufflevector <8 x i32> %5425, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5427 = mul <8 x i32> %5417, %5409
  %5428 = mul <8 x i32> %5420, %5410
  %5429 = mul <8 x i32> %5423, %5411
  %5430 = mul <8 x i32> %5426, %5412
  %5431 = add nuw i64 %5408, 32
  %5432 = icmp eq i64 %5431, %5405
  br i1 %5432, label %5433, label %5407, !llvm.loop !940

5433:                                             ; preds = %5407
  %5434 = mul <8 x i32> %5428, %5427
  %5435 = mul <8 x i32> %5429, %5434
  %5436 = mul <8 x i32> %5430, %5435
  %5437 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5436)
  %5438 = icmp eq i64 %5401, %5405
  br i1 %5438, label %5451, label %5439

5439:                                             ; preds = %5392, %5433
  %5440 = phi i64 [ %5395, %5392 ], [ %5406, %5433 ]
  %5441 = phi i32 [ 1, %5392 ], [ %5437, %5433 ]
  br label %5442

5442:                                             ; preds = %5439, %5442
  %5443 = phi i64 [ %5448, %5442 ], [ %5440, %5439 ]
  %5444 = phi i32 [ %5447, %5442 ], [ %5441, %5439 ]
  %5445 = getelementptr inbounds i32, ptr %11, i64 %5443
  %5446 = load i32, ptr %5445, align 4, !tbaa !6
  %5447 = mul nsw i32 %5446, %5444
  %5448 = add nsw i64 %5443, -1
  %5449 = trunc i64 %5443 to i32
  %5450 = icmp sgt i32 %5449, 0
  br i1 %5450, label %5442, label %5451, !llvm.loop !941

5451:                                             ; preds = %5442, %5433
  %5452 = phi i32 [ %5437, %5433 ], [ %5447, %5442 ]
  %5453 = and i64 %5402, 4294967295
  %5454 = getelementptr inbounds i32, ptr %6, i64 %5453
  %5455 = load i32, ptr %5454, align 4, !tbaa !6
  %5456 = mul nsw i32 %5455, %5452
  %5457 = add nsw i32 %5456, %5396
  %5458 = icmp sgt i64 %5394, 2
  %5459 = add nsw i64 %5395, -1
  %5460 = add i32 %5393, 1
  br i1 %5458, label %5392, label %5461, !llvm.loop !942

5461:                                             ; preds = %5451, %5388
  %5462 = phi i32 [ %5391, %5388 ], [ %5457, %5451 ]
  %5463 = icmp slt i32 %5462, %5
  br i1 %5463, label %5466, label %5464

5464:                                             ; preds = %5461
  %5465 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1291, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5535

5466:                                             ; preds = %5461
  %5467 = sext i32 %5462 to i64
  %5468 = getelementptr inbounds i64, ptr %4921, i64 %5467
  %5469 = load i64, ptr %5468, align 8, !tbaa !121
  %5470 = sitofp i64 %5469 to double
  %5471 = fcmp fast olt double %5389, %5470
  br i1 %5471, label %5472, label %5473

5472:                                             ; preds = %5466
  store double %5470, ptr %4923, align 8, !tbaa !19
  br label %5473

5473:                                             ; preds = %5472, %5466
  %5474 = phi double [ %5470, %5472 ], [ %5389, %5466 ]
  %5475 = add nuw nsw i32 %5390, 1
  br i1 %5238, label %5476, label %5526

5476:                                             ; preds = %5473
  %5477 = load i32, ptr %4, align 4, !tbaa !6
  %5478 = load i32, ptr %12, align 4, !tbaa !6
  %5479 = add nsw i32 %5478, -1
  %5480 = icmp slt i32 %5477, %5479
  br i1 %5480, label %5503, label %5481

5481:                                             ; preds = %5476
  %5482 = icmp eq i32 %5477, %5479
  br i1 %5482, label %5483, label %5519

5483:                                             ; preds = %5481
  store i32 0, ptr %4, align 4, !tbaa !6
  %5484 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5484, ptr %6, align 4, !tbaa !6
  br i1 %5243, label %5526, label %5485

5485:                                             ; preds = %5483, %5513
  %5486 = phi i64 [ %5517, %5513 ], [ 1, %5483 ]
  %5487 = getelementptr inbounds i32, ptr %4, i64 %5486
  %5488 = load i32, ptr %5487, align 4, !tbaa !6
  %5489 = getelementptr inbounds i32, ptr %12, i64 %5486
  %5490 = load i32, ptr %5489, align 4, !tbaa !6
  %5491 = add nsw i32 %5490, -1
  %5492 = icmp slt i32 %5488, %5491
  br i1 %5492, label %5493, label %5511

5493:                                             ; preds = %5485
  br i1 %5480, label %5503, label %5494

5494:                                             ; preds = %5493
  %5495 = shl i64 %5486, 32
  %5496 = add i64 %5495, -4294967296
  %5497 = ashr exact i64 %5496, 32
  %5498 = getelementptr inbounds i32, ptr %7, i64 %5497
  %5499 = load i32, ptr %5498, align 4, !tbaa !6
  %5500 = getelementptr inbounds i32, ptr %6, i64 %5486
  %5501 = load i32, ptr %5500, align 4, !tbaa !6
  %5502 = add nsw i32 %5501, %5499
  store i32 %5502, ptr %5500, align 4, !tbaa !6
  br label %5521

5503:                                             ; preds = %5476, %5493
  %5504 = phi i32 [ %5488, %5493 ], [ %5477, %5476 ]
  %5505 = phi ptr [ %5487, %5493 ], [ %4, %5476 ]
  %5506 = phi i64 [ %5486, %5493 ], [ 0, %5476 ]
  %5507 = add nsw i32 %5504, 1
  store i32 %5507, ptr %5505, align 4, !tbaa !6
  %5508 = getelementptr inbounds i32, ptr %7, i64 %5506
  %5509 = load i32, ptr %5508, align 4, !tbaa !6
  %5510 = getelementptr inbounds i32, ptr %6, i64 %5506
  br label %5521

5511:                                             ; preds = %5485
  %5512 = icmp eq i32 %5488, %5491
  br i1 %5512, label %5513, label %5519

5513:                                             ; preds = %5511
  store i32 0, ptr %5487, align 4, !tbaa !6
  %5514 = getelementptr inbounds i32, ptr %8, i64 %5486
  %5515 = load i32, ptr %5514, align 4, !tbaa !6
  %5516 = getelementptr inbounds i32, ptr %6, i64 %5486
  store i32 %5515, ptr %5516, align 4, !tbaa !6
  %5517 = add nuw nsw i64 %5486, 1
  %5518 = icmp eq i64 %5517, %5241
  br i1 %5518, label %5526, label %5485, !llvm.loop !943

5519:                                             ; preds = %5481, %5511
  %5520 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1291, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5535

5521:                                             ; preds = %5494, %5503
  %5522 = phi ptr [ %5510, %5503 ], [ %5487, %5494 ]
  %5523 = phi i32 [ %5509, %5503 ], [ 1, %5494 ]
  %5524 = load i32, ptr %5522, align 4, !tbaa !6
  %5525 = add nsw i32 %5524, %5523
  store i32 %5525, ptr %5522, align 4, !tbaa !6
  br label %5526

5526:                                             ; preds = %5513, %5521, %5483, %5473
  %5527 = icmp eq i32 %5475, %5
  br i1 %5527, label %5530, label %5388, !llvm.loop !944

5528:                                             ; preds = %4927
  %5529 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1291, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5530

5530:                                             ; preds = %5526, %5386, %5228, %5088, %4915, %4775, %4617, %4477, %4304, %4164, %4006, %3866, %3693, %3554, %3397, %3258, %3083, %2944, %2787, %2648, %2476, %2336, %2178, %2038, %1865, %1726, %1569, %1430, %1253, %1114, %957, %818, %646, %504, %344, %202, %5235, %5244, %4933, %4942, %4624, %4633, %4322, %4331, %4013, %4022, %3711, %3720, %3404, %3413, %3104, %3113, %2794, %2803, %2494, %2503, %2185, %2194, %1883, %1892, %1576, %1585, %1276, %1285, %964, %973, %664, %673, %351, %360, %45, %54, %4919, %5528, %4308, %4917, %3697, %4306, %3097, %3094, %3695, %2480, %3085, %1869, %2478, %1269, %1265, %1867, %650, %1255, %37, %30, %648, %18
  %5531 = phi double [ 0.000000e+00, %18 ], [ 0.000000e+00, %648 ], [ 0.000000e+00, %30 ], [ 0.000000e+00, %37 ], [ 0.000000e+00, %650 ], [ 0.000000e+00, %1255 ], [ 0.000000e+00, %1867 ], [ 0.000000e+00, %1265 ], [ 0.000000e+00, %1269 ], [ 0.000000e+00, %1869 ], [ 0.000000e+00, %2478 ], [ 0.000000e+00, %2480 ], [ 0.000000e+00, %3085 ], [ 0.000000e+00, %3695 ], [ 0.000000e+00, %3094 ], [ 0.000000e+00, %3097 ], [ 0.000000e+00, %3697 ], [ 0.000000e+00, %4306 ], [ 0.000000e+00, %4308 ], [ 0.000000e+00, %4917 ], [ 0.000000e+00, %4919 ], [ 0.000000e+00, %5528 ], [ 0.000000e+00, %54 ], [ 0.000000e+00, %45 ], [ 0.000000e+00, %360 ], [ 0.000000e+00, %351 ], [ 0.000000e+00, %673 ], [ 0.000000e+00, %664 ], [ 0.000000e+00, %973 ], [ 0.000000e+00, %964 ], [ 0.000000e+00, %1285 ], [ 0.000000e+00, %1276 ], [ 0.000000e+00, %1585 ], [ 0.000000e+00, %1576 ], [ 0.000000e+00, %1892 ], [ 0.000000e+00, %1883 ], [ 0.000000e+00, %2194 ], [ 0.000000e+00, %2185 ], [ 0.000000e+00, %2503 ], [ 0.000000e+00, %2494 ], [ 0.000000e+00, %2803 ], [ 0.000000e+00, %2794 ], [ 0.000000e+00, %3113 ], [ 0.000000e+00, %3104 ], [ 0.000000e+00, %3413 ], [ 0.000000e+00, %3404 ], [ 0.000000e+00, %3720 ], [ 0.000000e+00, %3711 ], [ 0.000000e+00, %4022 ], [ 0.000000e+00, %4013 ], [ 0.000000e+00, %4331 ], [ 0.000000e+00, %4322 ], [ 0.000000e+00, %4633 ], [ 0.000000e+00, %4624 ], [ 0.000000e+00, %4942 ], [ 0.000000e+00, %4933 ], [ 0.000000e+00, %5244 ], [ 0.000000e+00, %5235 ], [ %153, %202 ], [ 0.000000e+00, %344 ], [ %455, %504 ], [ 0.000000e+00, %646 ], [ %769, %818 ], [ 0.000000e+00, %957 ], [ %1065, %1114 ], [ 0.000000e+00, %1253 ], [ %1381, %1430 ], [ 0.000000e+00, %1569 ], [ %1677, %1726 ], [ 0.000000e+00, %1865 ], [ %1989, %2038 ], [ 0.000000e+00, %2178 ], [ %2287, %2336 ], [ 0.000000e+00, %2476 ], [ %2599, %2648 ], [ 0.000000e+00, %2787 ], [ %2895, %2944 ], [ 0.000000e+00, %3083 ], [ %3209, %3258 ], [ 0.000000e+00, %3397 ], [ %3505, %3554 ], [ 0.000000e+00, %3693 ], [ %3817, %3866 ], [ 0.000000e+00, %4006 ], [ %4115, %4164 ], [ 0.000000e+00, %4304 ], [ %4428, %4477 ], [ 0.000000e+00, %4617 ], [ %4726, %4775 ], [ 0.000000e+00, %4915 ], [ %5039, %5088 ], [ 0.000000e+00, %5228 ], [ %5337, %5386 ], [ 0.000000e+00, %5526 ]
  %5532 = phi i32 [ %10, %18 ], [ 1, %648 ], [ 1, %30 ], [ 1, %37 ], [ 1, %650 ], [ 1, %1255 ], [ 1, %1867 ], [ 1, %1265 ], [ 1, %1269 ], [ 1, %1869 ], [ 1, %2478 ], [ 1, %2480 ], [ 1, %3085 ], [ 1, %3695 ], [ 1, %3094 ], [ 1, %3097 ], [ 1, %3697 ], [ 1, %4306 ], [ 1, %4308 ], [ 1, %4917 ], [ 1, %4919 ], [ 1, %5528 ], [ 1, %54 ], [ 1, %45 ], [ 1, %360 ], [ 1, %351 ], [ 1, %673 ], [ 1, %664 ], [ 1, %973 ], [ 1, %964 ], [ 1, %1285 ], [ 1, %1276 ], [ 1, %1585 ], [ 1, %1576 ], [ 1, %1892 ], [ 1, %1883 ], [ 1, %2194 ], [ 1, %2185 ], [ 1, %2503 ], [ 1, %2494 ], [ 1, %2803 ], [ 1, %2794 ], [ 1, %3113 ], [ 1, %3104 ], [ 1, %3413 ], [ 1, %3404 ], [ 1, %3720 ], [ 1, %3711 ], [ 1, %4022 ], [ 1, %4013 ], [ 1, %4331 ], [ 1, %4322 ], [ 1, %4633 ], [ 1, %4624 ], [ 1, %4942 ], [ 1, %4933 ], [ 1, %5244 ], [ 1, %5235 ], [ %61, %202 ], [ %52, %344 ], [ %367, %504 ], [ %358, %646 ], [ %680, %818 ], [ %671, %957 ], [ %980, %1114 ], [ %971, %1253 ], [ %1292, %1430 ], [ %1283, %1569 ], [ %1592, %1726 ], [ %1583, %1865 ], [ %1899, %2038 ], [ %1890, %2178 ], [ %2201, %2336 ], [ %2192, %2476 ], [ %2510, %2648 ], [ %2501, %2787 ], [ %2810, %2944 ], [ %2801, %3083 ], [ %3120, %3258 ], [ %3111, %3397 ], [ %3420, %3554 ], [ %3411, %3693 ], [ %3727, %3866 ], [ %3718, %4006 ], [ %4029, %4164 ], [ %4020, %4304 ], [ %4338, %4477 ], [ %4329, %4617 ], [ %4640, %4775 ], [ %4631, %4915 ], [ %4949, %5088 ], [ %4940, %5228 ], [ %5251, %5386 ], [ %5242, %5526 ]
  %5533 = tail call i32 @Util_TableSetInt(i32 noundef %17, i32 noundef %5532, ptr noundef nonnull @.str.5) #3
  %5534 = tail call i32 @Util_TableSetReal(i32 noundef %17, double noundef nofpclass(nan inf) %5531, ptr noundef nonnull @.str.6) #3
  br label %5535

5535:                                             ; preds = %5081, %5166, %5221, %5379, %5464, %5519, %4470, %4555, %4610, %4768, %4853, %4908, %3859, %3944, %3999, %4157, %4242, %4297, %3251, %3336, %3390, %3547, %3632, %3686, %2641, %2725, %2780, %2937, %3021, %3076, %2031, %2116, %2171, %2329, %2414, %2469, %1423, %1507, %1562, %1719, %1803, %1858, %811, %895, %950, %1107, %1191, %1246, %195, %279, %337, %497, %581, %639, %5530
  %5536 = phi i32 [ 0, %5530 ], [ -1, %639 ], [ -1, %581 ], [ -1, %497 ], [ -1, %337 ], [ -1, %279 ], [ -1, %195 ], [ -1, %1246 ], [ -1, %1191 ], [ -1, %1107 ], [ -1, %950 ], [ -1, %895 ], [ -1, %811 ], [ -1, %1858 ], [ -1, %1803 ], [ -1, %1719 ], [ -1, %1562 ], [ -1, %1507 ], [ -1, %1423 ], [ -1, %2469 ], [ -1, %2414 ], [ -1, %2329 ], [ -1, %2171 ], [ -1, %2116 ], [ -1, %2031 ], [ -1, %3076 ], [ -1, %3021 ], [ -1, %2937 ], [ -1, %2780 ], [ -1, %2725 ], [ -1, %2641 ], [ -1, %3686 ], [ -1, %3632 ], [ -1, %3547 ], [ -1, %3390 ], [ -1, %3336 ], [ -1, %3251 ], [ -1, %4297 ], [ -1, %4242 ], [ -1, %4157 ], [ -1, %3999 ], [ -1, %3944 ], [ -1, %3859 ], [ -1, %4908 ], [ -1, %4853 ], [ -1, %4768 ], [ -1, %4610 ], [ -1, %4555 ], [ -1, %4470 ], [ -1, %5519 ], [ -1, %5464 ], [ -1, %5379 ], [ -1, %5221 ], [ -1, %5166 ], [ -1, %5081 ]
  ret i32 %5536
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_Max_REAL(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr noundef readonly %7, ptr noundef readonly %8, ptr nocapture noundef readonly %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr noundef readonly %12, i32 noundef %13, ptr nocapture noundef readonly %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !6
  switch i32 %21, label %5513 [
    i32 101, label %22
    i32 102, label %634
    i32 103, label %1241
    i32 104, label %1853
    i32 105, label %2464
    i32 106, label %3071
    i32 107, label %3682
    i32 108, label %4292
    i32 109, label %4903
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %14, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !10
  %25 = getelementptr inbounds ptr, ptr %16, i64 %19
  %26 = load ptr, ptr %25, align 8, !tbaa !10
  %27 = load double, ptr %24, align 8, !tbaa !19
  %28 = fptoui double %27 to i8
  store i8 %28, ptr %26, align 1, !tbaa !12
  %29 = icmp eq i32 %13, 0
  br i1 %29, label %30, label %35

30:                                               ; preds = %22
  %31 = load double, ptr %24, align 8, !tbaa !19
  %32 = fptoui double %31 to i8
  %33 = icmp ult i8 %28, %32
  br i1 %33, label %34, label %5513

34:                                               ; preds = %30
  store i8 %32, ptr %26, align 1, !tbaa !12
  br label %5513

35:                                               ; preds = %22
  switch i32 %1, label %632 [
    i32 1, label %36
    i32 0, label %336
  ]

36:                                               ; preds = %35
  %37 = getelementptr inbounds i32, ptr %3, i64 %19
  %38 = load i32, ptr %37, align 4, !tbaa !6
  %39 = icmp eq i32 %38, 0
  %40 = icmp sgt i32 %5, 0
  br i1 %39, label %50, label %41

41:                                               ; preds = %36
  br i1 %40, label %42, label %5513

42:                                               ; preds = %41
  %43 = icmp sgt i32 %13, 1
  %44 = icmp sgt i32 %13, 0
  %45 = add i32 %13, -2
  %46 = zext i32 %45 to i64
  %47 = zext i32 %13 to i64
  %48 = add nuw i32 %5, 1
  %49 = icmp eq i32 %13, 1
  br label %197

50:                                               ; preds = %36
  br i1 %40, label %51, label %5513

51:                                               ; preds = %50
  %52 = icmp sgt i32 %13, 1
  %53 = icmp sgt i32 %13, 0
  %54 = add i32 %13, -2
  %55 = zext i32 %54 to i64
  %56 = zext i32 %13 to i64
  %57 = add nuw i32 %5, 1
  %58 = icmp eq i32 %13, 1
  br label %59

59:                                               ; preds = %51, %195
  %60 = phi i32 [ 0, %51 ], [ %147, %195 ]
  %61 = phi double [ 0.000000e+00, %51 ], [ %146, %195 ]
  %62 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %52, label %63, label %132

63:                                               ; preds = %59, %122
  %64 = phi i32 [ %131, %122 ], [ 0, %59 ]
  %65 = phi i64 [ %73, %122 ], [ %56, %59 ]
  %66 = phi i64 [ %130, %122 ], [ %55, %59 ]
  %67 = phi i32 [ %128, %122 ], [ %62, %59 ]
  %68 = sub i32 %54, %64
  %69 = tail call i32 @llvm.smin.i32(i32 %68, i32 0)
  %70 = sub i32 %68, %69
  %71 = zext i32 %70 to i64
  %72 = add nuw nsw i64 %71, 1
  %73 = add nsw i64 %65, -1
  %74 = icmp ult i32 %70, 31
  br i1 %74, label %110, label %75

75:                                               ; preds = %63
  %76 = and i64 %72, 8589934560
  %77 = sub i64 %66, %76
  br label %78

78:                                               ; preds = %78, %75
  %79 = phi i64 [ 0, %75 ], [ %102, %78 ]
  %80 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %75 ], [ %98, %78 ]
  %81 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %75 ], [ %99, %78 ]
  %82 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %75 ], [ %100, %78 ]
  %83 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %75 ], [ %101, %78 ]
  %84 = sub i64 %66, %79
  %85 = getelementptr inbounds i32, ptr %9, i64 %84
  %86 = getelementptr inbounds i32, ptr %85, i64 -7
  %87 = load <8 x i32>, ptr %86, align 4, !tbaa !6
  %88 = shufflevector <8 x i32> %87, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %89 = getelementptr inbounds i32, ptr %85, i64 -15
  %90 = load <8 x i32>, ptr %89, align 4, !tbaa !6
  %91 = shufflevector <8 x i32> %90, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %92 = getelementptr inbounds i32, ptr %85, i64 -23
  %93 = load <8 x i32>, ptr %92, align 4, !tbaa !6
  %94 = shufflevector <8 x i32> %93, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %95 = getelementptr inbounds i32, ptr %85, i64 -31
  %96 = load <8 x i32>, ptr %95, align 4, !tbaa !6
  %97 = shufflevector <8 x i32> %96, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %98 = mul <8 x i32> %88, %80
  %99 = mul <8 x i32> %91, %81
  %100 = mul <8 x i32> %94, %82
  %101 = mul <8 x i32> %97, %83
  %102 = add nuw i64 %79, 32
  %103 = icmp eq i64 %102, %76
  br i1 %103, label %104, label %78, !llvm.loop !945

104:                                              ; preds = %78
  %105 = mul <8 x i32> %99, %98
  %106 = mul <8 x i32> %100, %105
  %107 = mul <8 x i32> %101, %106
  %108 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %107)
  %109 = icmp eq i64 %72, %76
  br i1 %109, label %122, label %110

110:                                              ; preds = %63, %104
  %111 = phi i64 [ %66, %63 ], [ %77, %104 ]
  %112 = phi i32 [ 1, %63 ], [ %108, %104 ]
  br label %113

113:                                              ; preds = %110, %113
  %114 = phi i64 [ %119, %113 ], [ %111, %110 ]
  %115 = phi i32 [ %118, %113 ], [ %112, %110 ]
  %116 = getelementptr inbounds i32, ptr %9, i64 %114
  %117 = load i32, ptr %116, align 4, !tbaa !6
  %118 = mul nsw i32 %117, %115
  %119 = add nsw i64 %114, -1
  %120 = trunc i64 %114 to i32
  %121 = icmp sgt i32 %120, 0
  br i1 %121, label %113, label %122, !llvm.loop !946

122:                                              ; preds = %113, %104
  %123 = phi i32 [ %108, %104 ], [ %118, %113 ]
  %124 = and i64 %73, 4294967295
  %125 = getelementptr inbounds i32, ptr %6, i64 %124
  %126 = load i32, ptr %125, align 4, !tbaa !6
  %127 = mul nsw i32 %126, %123
  %128 = add nsw i32 %127, %67
  %129 = icmp sgt i64 %65, 2
  %130 = add nsw i64 %66, -1
  %131 = add i32 %64, 1
  br i1 %129, label %63, label %132, !llvm.loop !947

132:                                              ; preds = %122, %59
  %133 = phi i32 [ %62, %59 ], [ %128, %122 ]
  %134 = sext i32 %133 to i64
  %135 = getelementptr inbounds double, ptr %2, i64 %134
  %136 = load double, ptr %135, align 8, !tbaa !19
  %137 = getelementptr inbounds double, ptr %24, i64 %134
  %138 = load double, ptr %137, align 8, !tbaa !19
  %139 = fptoui double %138 to i8
  %140 = fcmp fast ueq double %136, 0.000000e+00
  br i1 %140, label %145, label %141

141:                                              ; preds = %132
  %142 = load i8, ptr %26, align 1, !tbaa !12
  %143 = icmp ult i8 %142, %139
  br i1 %143, label %144, label %145

144:                                              ; preds = %141
  store i8 %139, ptr %26, align 1, !tbaa !12
  br label %145

145:                                              ; preds = %141, %144, %132
  %146 = fadd fast double %136, %61
  %147 = add nuw nsw i32 %60, 1
  br i1 %53, label %148, label %195

148:                                              ; preds = %145
  %149 = load i32, ptr %4, align 4, !tbaa !6
  %150 = load i32, ptr %12, align 4, !tbaa !6
  %151 = add nsw i32 %150, -1
  %152 = icmp slt i32 %149, %151
  br i1 %152, label %172, label %153

153:                                              ; preds = %148
  %154 = icmp eq i32 %149, %151
  br i1 %154, label %155, label %188

155:                                              ; preds = %153
  store i32 0, ptr %4, align 4, !tbaa !6
  %156 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %156, ptr %6, align 4, !tbaa !6
  br i1 %58, label %195, label %157

157:                                              ; preds = %155, %182
  %158 = phi i64 [ %186, %182 ], [ 1, %155 ]
  %159 = getelementptr inbounds i32, ptr %4, i64 %158
  %160 = load i32, ptr %159, align 4, !tbaa !6
  %161 = getelementptr inbounds i32, ptr %12, i64 %158
  %162 = load i32, ptr %161, align 4, !tbaa !6
  %163 = add nsw i32 %162, -1
  %164 = icmp slt i32 %160, %163
  br i1 %164, label %165, label %180

165:                                              ; preds = %157
  br i1 %152, label %172, label %166

166:                                              ; preds = %165
  %167 = getelementptr inbounds i32, ptr %7, i64 %158
  %168 = load i32, ptr %167, align 4, !tbaa !6
  %169 = getelementptr inbounds i32, ptr %6, i64 %158
  %170 = load i32, ptr %169, align 4, !tbaa !6
  %171 = add nsw i32 %170, %168
  store i32 %171, ptr %169, align 4, !tbaa !6
  br label %190

172:                                              ; preds = %148, %165
  %173 = phi i32 [ %160, %165 ], [ %149, %148 ]
  %174 = phi ptr [ %159, %165 ], [ %4, %148 ]
  %175 = phi i64 [ %158, %165 ], [ 0, %148 ]
  %176 = add nsw i32 %173, 1
  store i32 %176, ptr %174, align 4, !tbaa !6
  %177 = getelementptr inbounds i32, ptr %7, i64 %175
  %178 = load i32, ptr %177, align 4, !tbaa !6
  %179 = getelementptr inbounds i32, ptr %6, i64 %175
  br label %190

180:                                              ; preds = %157
  %181 = icmp eq i32 %160, %163
  br i1 %181, label %182, label %188

182:                                              ; preds = %180
  store i32 0, ptr %159, align 4, !tbaa !6
  %183 = getelementptr inbounds i32, ptr %8, i64 %158
  %184 = load i32, ptr %183, align 4, !tbaa !6
  %185 = getelementptr inbounds i32, ptr %6, i64 %158
  store i32 %184, ptr %185, align 4, !tbaa !6
  %186 = add nuw nsw i64 %158, 1
  %187 = icmp eq i64 %186, %56
  br i1 %187, label %195, label %157, !llvm.loop !948

188:                                              ; preds = %153, %180
  %189 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1496, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5518

190:                                              ; preds = %166, %172
  %191 = phi ptr [ %179, %172 ], [ %159, %166 ]
  %192 = phi i32 [ %178, %172 ], [ 1, %166 ]
  %193 = load i32, ptr %191, align 4, !tbaa !6
  %194 = add nsw i32 %193, %192
  store i32 %194, ptr %191, align 4, !tbaa !6
  br label %195

195:                                              ; preds = %182, %190, %155, %145
  %196 = icmp eq i32 %147, %5
  br i1 %196, label %5513, label %59, !llvm.loop !949

197:                                              ; preds = %42, %334
  %198 = phi i32 [ 0, %42 ], [ %283, %334 ]
  %199 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %43, label %200, label %269

200:                                              ; preds = %197, %259
  %201 = phi i32 [ %268, %259 ], [ 0, %197 ]
  %202 = phi i64 [ %210, %259 ], [ %47, %197 ]
  %203 = phi i64 [ %267, %259 ], [ %46, %197 ]
  %204 = phi i32 [ %265, %259 ], [ %199, %197 ]
  %205 = sub i32 %45, %201
  %206 = tail call i32 @llvm.smin.i32(i32 %205, i32 0)
  %207 = sub i32 %205, %206
  %208 = zext i32 %207 to i64
  %209 = add nuw nsw i64 %208, 1
  %210 = add nsw i64 %202, -1
  %211 = icmp ult i32 %207, 31
  br i1 %211, label %247, label %212

212:                                              ; preds = %200
  %213 = and i64 %209, 8589934560
  %214 = sub i64 %203, %213
  br label %215

215:                                              ; preds = %215, %212
  %216 = phi i64 [ 0, %212 ], [ %239, %215 ]
  %217 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %212 ], [ %235, %215 ]
  %218 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %212 ], [ %236, %215 ]
  %219 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %212 ], [ %237, %215 ]
  %220 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %212 ], [ %238, %215 ]
  %221 = sub i64 %203, %216
  %222 = getelementptr inbounds i32, ptr %11, i64 %221
  %223 = getelementptr inbounds i32, ptr %222, i64 -7
  %224 = load <8 x i32>, ptr %223, align 4, !tbaa !6
  %225 = shufflevector <8 x i32> %224, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %226 = getelementptr inbounds i32, ptr %222, i64 -15
  %227 = load <8 x i32>, ptr %226, align 4, !tbaa !6
  %228 = shufflevector <8 x i32> %227, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %229 = getelementptr inbounds i32, ptr %222, i64 -23
  %230 = load <8 x i32>, ptr %229, align 4, !tbaa !6
  %231 = shufflevector <8 x i32> %230, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %232 = getelementptr inbounds i32, ptr %222, i64 -31
  %233 = load <8 x i32>, ptr %232, align 4, !tbaa !6
  %234 = shufflevector <8 x i32> %233, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %235 = mul <8 x i32> %225, %217
  %236 = mul <8 x i32> %228, %218
  %237 = mul <8 x i32> %231, %219
  %238 = mul <8 x i32> %234, %220
  %239 = add nuw i64 %216, 32
  %240 = icmp eq i64 %239, %213
  br i1 %240, label %241, label %215, !llvm.loop !950

241:                                              ; preds = %215
  %242 = mul <8 x i32> %236, %235
  %243 = mul <8 x i32> %237, %242
  %244 = mul <8 x i32> %238, %243
  %245 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %244)
  %246 = icmp eq i64 %209, %213
  br i1 %246, label %259, label %247

247:                                              ; preds = %200, %241
  %248 = phi i64 [ %203, %200 ], [ %214, %241 ]
  %249 = phi i32 [ 1, %200 ], [ %245, %241 ]
  br label %250

250:                                              ; preds = %247, %250
  %251 = phi i64 [ %256, %250 ], [ %248, %247 ]
  %252 = phi i32 [ %255, %250 ], [ %249, %247 ]
  %253 = getelementptr inbounds i32, ptr %11, i64 %251
  %254 = load i32, ptr %253, align 4, !tbaa !6
  %255 = mul nsw i32 %254, %252
  %256 = add nsw i64 %251, -1
  %257 = trunc i64 %251 to i32
  %258 = icmp sgt i32 %257, 0
  br i1 %258, label %250, label %259, !llvm.loop !951

259:                                              ; preds = %250, %241
  %260 = phi i32 [ %245, %241 ], [ %255, %250 ]
  %261 = and i64 %210, 4294967295
  %262 = getelementptr inbounds i32, ptr %6, i64 %261
  %263 = load i32, ptr %262, align 4, !tbaa !6
  %264 = mul nsw i32 %263, %260
  %265 = add nsw i32 %264, %204
  %266 = icmp sgt i64 %202, 2
  %267 = add nsw i64 %203, -1
  %268 = add i32 %201, 1
  br i1 %266, label %200, label %269, !llvm.loop !952

269:                                              ; preds = %259, %197
  %270 = phi i32 [ %199, %197 ], [ %265, %259 ]
  %271 = icmp slt i32 %270, %5
  br i1 %271, label %274, label %272

272:                                              ; preds = %269
  %273 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1496, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5518

274:                                              ; preds = %269
  %275 = sext i32 %270 to i64
  %276 = getelementptr inbounds double, ptr %24, i64 %275
  %277 = load double, ptr %276, align 8, !tbaa !19
  %278 = fptoui double %277 to i8
  %279 = load i8, ptr %26, align 1, !tbaa !12
  %280 = icmp ult i8 %279, %278
  br i1 %280, label %281, label %282

281:                                              ; preds = %274
  store i8 %278, ptr %26, align 1, !tbaa !12
  br label %282

282:                                              ; preds = %274, %281
  %283 = add nuw nsw i32 %198, 1
  br i1 %44, label %284, label %334

284:                                              ; preds = %282
  %285 = load i32, ptr %4, align 4, !tbaa !6
  %286 = load i32, ptr %12, align 4, !tbaa !6
  %287 = add nsw i32 %286, -1
  %288 = icmp slt i32 %285, %287
  br i1 %288, label %311, label %289

289:                                              ; preds = %284
  %290 = icmp eq i32 %285, %287
  br i1 %290, label %291, label %327

291:                                              ; preds = %289
  store i32 0, ptr %4, align 4, !tbaa !6
  %292 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %292, ptr %6, align 4, !tbaa !6
  br i1 %49, label %334, label %293

293:                                              ; preds = %291, %321
  %294 = phi i64 [ %325, %321 ], [ 1, %291 ]
  %295 = getelementptr inbounds i32, ptr %4, i64 %294
  %296 = load i32, ptr %295, align 4, !tbaa !6
  %297 = getelementptr inbounds i32, ptr %12, i64 %294
  %298 = load i32, ptr %297, align 4, !tbaa !6
  %299 = add nsw i32 %298, -1
  %300 = icmp slt i32 %296, %299
  br i1 %300, label %301, label %319

301:                                              ; preds = %293
  br i1 %288, label %311, label %302

302:                                              ; preds = %301
  %303 = shl i64 %294, 32
  %304 = add i64 %303, -4294967296
  %305 = ashr exact i64 %304, 32
  %306 = getelementptr inbounds i32, ptr %7, i64 %305
  %307 = load i32, ptr %306, align 4, !tbaa !6
  %308 = getelementptr inbounds i32, ptr %6, i64 %294
  %309 = load i32, ptr %308, align 4, !tbaa !6
  %310 = add nsw i32 %309, %307
  store i32 %310, ptr %308, align 4, !tbaa !6
  br label %329

311:                                              ; preds = %284, %301
  %312 = phi i32 [ %296, %301 ], [ %285, %284 ]
  %313 = phi ptr [ %295, %301 ], [ %4, %284 ]
  %314 = phi i64 [ %294, %301 ], [ 0, %284 ]
  %315 = add nsw i32 %312, 1
  store i32 %315, ptr %313, align 4, !tbaa !6
  %316 = getelementptr inbounds i32, ptr %7, i64 %314
  %317 = load i32, ptr %316, align 4, !tbaa !6
  %318 = getelementptr inbounds i32, ptr %6, i64 %314
  br label %329

319:                                              ; preds = %293
  %320 = icmp eq i32 %296, %299
  br i1 %320, label %321, label %327

321:                                              ; preds = %319
  store i32 0, ptr %295, align 4, !tbaa !6
  %322 = getelementptr inbounds i32, ptr %8, i64 %294
  %323 = load i32, ptr %322, align 4, !tbaa !6
  %324 = getelementptr inbounds i32, ptr %6, i64 %294
  store i32 %323, ptr %324, align 4, !tbaa !6
  %325 = add nuw nsw i64 %294, 1
  %326 = icmp eq i64 %325, %47
  br i1 %326, label %334, label %293, !llvm.loop !953

327:                                              ; preds = %289, %319
  %328 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1496, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5518

329:                                              ; preds = %302, %311
  %330 = phi ptr [ %318, %311 ], [ %295, %302 ]
  %331 = phi i32 [ %317, %311 ], [ 1, %302 ]
  %332 = load i32, ptr %330, align 4, !tbaa !6
  %333 = add nsw i32 %332, %331
  store i32 %333, ptr %330, align 4, !tbaa !6
  br label %334

334:                                              ; preds = %321, %329, %291, %282
  %335 = icmp eq i32 %283, %5
  br i1 %335, label %5513, label %197, !llvm.loop !954

336:                                              ; preds = %35
  %337 = getelementptr inbounds i32, ptr %3, i64 %19
  %338 = load i32, ptr %337, align 4, !tbaa !6
  %339 = icmp eq i32 %338, 0
  %340 = icmp sgt i32 %5, 0
  br i1 %339, label %350, label %341

341:                                              ; preds = %336
  br i1 %340, label %342, label %5513

342:                                              ; preds = %341
  %343 = icmp sgt i32 %13, 1
  %344 = icmp sgt i32 %13, 0
  %345 = add i32 %13, -2
  %346 = zext i32 %345 to i64
  %347 = zext i32 %13 to i64
  %348 = add nuw i32 %5, 1
  %349 = icmp eq i32 %13, 1
  br label %493

350:                                              ; preds = %336
  br i1 %340, label %351, label %5513

351:                                              ; preds = %350
  %352 = icmp sgt i32 %13, 1
  %353 = icmp sgt i32 %13, 0
  %354 = add i32 %13, -2
  %355 = zext i32 %354 to i64
  %356 = zext i32 %13 to i64
  %357 = add nuw i32 %5, 1
  %358 = icmp eq i32 %13, 1
  br label %359

359:                                              ; preds = %351, %491
  %360 = phi i32 [ 0, %351 ], [ %443, %491 ]
  %361 = phi double [ 0.000000e+00, %351 ], [ %442, %491 ]
  %362 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %352, label %363, label %432

363:                                              ; preds = %359, %422
  %364 = phi i32 [ %431, %422 ], [ 0, %359 ]
  %365 = phi i64 [ %373, %422 ], [ %356, %359 ]
  %366 = phi i64 [ %430, %422 ], [ %355, %359 ]
  %367 = phi i32 [ %428, %422 ], [ %362, %359 ]
  %368 = sub i32 %354, %364
  %369 = tail call i32 @llvm.smin.i32(i32 %368, i32 0)
  %370 = sub i32 %368, %369
  %371 = zext i32 %370 to i64
  %372 = add nuw nsw i64 %371, 1
  %373 = add nsw i64 %365, -1
  %374 = icmp ult i32 %370, 31
  br i1 %374, label %410, label %375

375:                                              ; preds = %363
  %376 = and i64 %372, 8589934560
  %377 = sub i64 %366, %376
  br label %378

378:                                              ; preds = %378, %375
  %379 = phi i64 [ 0, %375 ], [ %402, %378 ]
  %380 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %375 ], [ %398, %378 ]
  %381 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %375 ], [ %399, %378 ]
  %382 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %375 ], [ %400, %378 ]
  %383 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %375 ], [ %401, %378 ]
  %384 = sub i64 %366, %379
  %385 = getelementptr inbounds i32, ptr %9, i64 %384
  %386 = getelementptr inbounds i32, ptr %385, i64 -7
  %387 = load <8 x i32>, ptr %386, align 4, !tbaa !6
  %388 = shufflevector <8 x i32> %387, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %389 = getelementptr inbounds i32, ptr %385, i64 -15
  %390 = load <8 x i32>, ptr %389, align 4, !tbaa !6
  %391 = shufflevector <8 x i32> %390, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %392 = getelementptr inbounds i32, ptr %385, i64 -23
  %393 = load <8 x i32>, ptr %392, align 4, !tbaa !6
  %394 = shufflevector <8 x i32> %393, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %395 = getelementptr inbounds i32, ptr %385, i64 -31
  %396 = load <8 x i32>, ptr %395, align 4, !tbaa !6
  %397 = shufflevector <8 x i32> %396, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %398 = mul <8 x i32> %388, %380
  %399 = mul <8 x i32> %391, %381
  %400 = mul <8 x i32> %394, %382
  %401 = mul <8 x i32> %397, %383
  %402 = add nuw i64 %379, 32
  %403 = icmp eq i64 %402, %376
  br i1 %403, label %404, label %378, !llvm.loop !955

404:                                              ; preds = %378
  %405 = mul <8 x i32> %399, %398
  %406 = mul <8 x i32> %400, %405
  %407 = mul <8 x i32> %401, %406
  %408 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %407)
  %409 = icmp eq i64 %372, %376
  br i1 %409, label %422, label %410

410:                                              ; preds = %363, %404
  %411 = phi i64 [ %366, %363 ], [ %377, %404 ]
  %412 = phi i32 [ 1, %363 ], [ %408, %404 ]
  br label %413

413:                                              ; preds = %410, %413
  %414 = phi i64 [ %419, %413 ], [ %411, %410 ]
  %415 = phi i32 [ %418, %413 ], [ %412, %410 ]
  %416 = getelementptr inbounds i32, ptr %9, i64 %414
  %417 = load i32, ptr %416, align 4, !tbaa !6
  %418 = mul nsw i32 %417, %415
  %419 = add nsw i64 %414, -1
  %420 = trunc i64 %414 to i32
  %421 = icmp sgt i32 %420, 0
  br i1 %421, label %413, label %422, !llvm.loop !956

422:                                              ; preds = %413, %404
  %423 = phi i32 [ %408, %404 ], [ %418, %413 ]
  %424 = and i64 %373, 4294967295
  %425 = getelementptr inbounds i32, ptr %6, i64 %424
  %426 = load i32, ptr %425, align 4, !tbaa !6
  %427 = mul nsw i32 %426, %423
  %428 = add nsw i32 %427, %367
  %429 = icmp sgt i64 %365, 2
  %430 = add nsw i64 %366, -1
  %431 = add i32 %364, 1
  br i1 %429, label %363, label %432, !llvm.loop !957

432:                                              ; preds = %422, %359
  %433 = phi i32 [ %362, %359 ], [ %428, %422 ]
  %434 = sext i32 %433 to i64
  %435 = getelementptr inbounds double, ptr %24, i64 %434
  %436 = load double, ptr %435, align 8, !tbaa !19
  %437 = fptoui double %436 to i8
  %438 = load i8, ptr %26, align 1, !tbaa !12
  %439 = icmp ult i8 %438, %437
  br i1 %439, label %440, label %441

440:                                              ; preds = %432
  store i8 %437, ptr %26, align 1, !tbaa !12
  br label %441

441:                                              ; preds = %440, %432
  %442 = fadd fast double %361, 1.000000e+00
  %443 = add nuw nsw i32 %360, 1
  br i1 %353, label %444, label %491

444:                                              ; preds = %441
  %445 = load i32, ptr %4, align 4, !tbaa !6
  %446 = load i32, ptr %12, align 4, !tbaa !6
  %447 = add nsw i32 %446, -1
  %448 = icmp slt i32 %445, %447
  br i1 %448, label %468, label %449

449:                                              ; preds = %444
  %450 = icmp eq i32 %445, %447
  br i1 %450, label %451, label %484

451:                                              ; preds = %449
  store i32 0, ptr %4, align 4, !tbaa !6
  %452 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %452, ptr %6, align 4, !tbaa !6
  br i1 %358, label %491, label %453

453:                                              ; preds = %451, %478
  %454 = phi i64 [ %482, %478 ], [ 1, %451 ]
  %455 = getelementptr inbounds i32, ptr %4, i64 %454
  %456 = load i32, ptr %455, align 4, !tbaa !6
  %457 = getelementptr inbounds i32, ptr %12, i64 %454
  %458 = load i32, ptr %457, align 4, !tbaa !6
  %459 = add nsw i32 %458, -1
  %460 = icmp slt i32 %456, %459
  br i1 %460, label %461, label %476

461:                                              ; preds = %453
  br i1 %448, label %468, label %462

462:                                              ; preds = %461
  %463 = getelementptr inbounds i32, ptr %7, i64 %454
  %464 = load i32, ptr %463, align 4, !tbaa !6
  %465 = getelementptr inbounds i32, ptr %6, i64 %454
  %466 = load i32, ptr %465, align 4, !tbaa !6
  %467 = add nsw i32 %466, %464
  store i32 %467, ptr %465, align 4, !tbaa !6
  br label %486

468:                                              ; preds = %444, %461
  %469 = phi i32 [ %456, %461 ], [ %445, %444 ]
  %470 = phi ptr [ %455, %461 ], [ %4, %444 ]
  %471 = phi i64 [ %454, %461 ], [ 0, %444 ]
  %472 = add nsw i32 %469, 1
  store i32 %472, ptr %470, align 4, !tbaa !6
  %473 = getelementptr inbounds i32, ptr %7, i64 %471
  %474 = load i32, ptr %473, align 4, !tbaa !6
  %475 = getelementptr inbounds i32, ptr %6, i64 %471
  br label %486

476:                                              ; preds = %453
  %477 = icmp eq i32 %456, %459
  br i1 %477, label %478, label %484

478:                                              ; preds = %476
  store i32 0, ptr %455, align 4, !tbaa !6
  %479 = getelementptr inbounds i32, ptr %8, i64 %454
  %480 = load i32, ptr %479, align 4, !tbaa !6
  %481 = getelementptr inbounds i32, ptr %6, i64 %454
  store i32 %480, ptr %481, align 4, !tbaa !6
  %482 = add nuw nsw i64 %454, 1
  %483 = icmp eq i64 %482, %356
  br i1 %483, label %491, label %453, !llvm.loop !958

484:                                              ; preds = %449, %476
  %485 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1496, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5518

486:                                              ; preds = %462, %468
  %487 = phi ptr [ %475, %468 ], [ %455, %462 ]
  %488 = phi i32 [ %474, %468 ], [ 1, %462 ]
  %489 = load i32, ptr %487, align 4, !tbaa !6
  %490 = add nsw i32 %489, %488
  store i32 %490, ptr %487, align 4, !tbaa !6
  br label %491

491:                                              ; preds = %478, %486, %451, %441
  %492 = icmp eq i32 %443, %5
  br i1 %492, label %5513, label %359, !llvm.loop !959

493:                                              ; preds = %342, %630
  %494 = phi i32 [ 0, %342 ], [ %579, %630 ]
  %495 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %343, label %496, label %565

496:                                              ; preds = %493, %555
  %497 = phi i32 [ %564, %555 ], [ 0, %493 ]
  %498 = phi i64 [ %506, %555 ], [ %347, %493 ]
  %499 = phi i64 [ %563, %555 ], [ %346, %493 ]
  %500 = phi i32 [ %561, %555 ], [ %495, %493 ]
  %501 = sub i32 %345, %497
  %502 = tail call i32 @llvm.smin.i32(i32 %501, i32 0)
  %503 = sub i32 %501, %502
  %504 = zext i32 %503 to i64
  %505 = add nuw nsw i64 %504, 1
  %506 = add nsw i64 %498, -1
  %507 = icmp ult i32 %503, 31
  br i1 %507, label %543, label %508

508:                                              ; preds = %496
  %509 = and i64 %505, 8589934560
  %510 = sub i64 %499, %509
  br label %511

511:                                              ; preds = %511, %508
  %512 = phi i64 [ 0, %508 ], [ %535, %511 ]
  %513 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %508 ], [ %531, %511 ]
  %514 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %508 ], [ %532, %511 ]
  %515 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %508 ], [ %533, %511 ]
  %516 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %508 ], [ %534, %511 ]
  %517 = sub i64 %499, %512
  %518 = getelementptr inbounds i32, ptr %11, i64 %517
  %519 = getelementptr inbounds i32, ptr %518, i64 -7
  %520 = load <8 x i32>, ptr %519, align 4, !tbaa !6
  %521 = shufflevector <8 x i32> %520, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %522 = getelementptr inbounds i32, ptr %518, i64 -15
  %523 = load <8 x i32>, ptr %522, align 4, !tbaa !6
  %524 = shufflevector <8 x i32> %523, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %525 = getelementptr inbounds i32, ptr %518, i64 -23
  %526 = load <8 x i32>, ptr %525, align 4, !tbaa !6
  %527 = shufflevector <8 x i32> %526, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %528 = getelementptr inbounds i32, ptr %518, i64 -31
  %529 = load <8 x i32>, ptr %528, align 4, !tbaa !6
  %530 = shufflevector <8 x i32> %529, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %531 = mul <8 x i32> %521, %513
  %532 = mul <8 x i32> %524, %514
  %533 = mul <8 x i32> %527, %515
  %534 = mul <8 x i32> %530, %516
  %535 = add nuw i64 %512, 32
  %536 = icmp eq i64 %535, %509
  br i1 %536, label %537, label %511, !llvm.loop !960

537:                                              ; preds = %511
  %538 = mul <8 x i32> %532, %531
  %539 = mul <8 x i32> %533, %538
  %540 = mul <8 x i32> %534, %539
  %541 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %540)
  %542 = icmp eq i64 %505, %509
  br i1 %542, label %555, label %543

543:                                              ; preds = %496, %537
  %544 = phi i64 [ %499, %496 ], [ %510, %537 ]
  %545 = phi i32 [ 1, %496 ], [ %541, %537 ]
  br label %546

546:                                              ; preds = %543, %546
  %547 = phi i64 [ %552, %546 ], [ %544, %543 ]
  %548 = phi i32 [ %551, %546 ], [ %545, %543 ]
  %549 = getelementptr inbounds i32, ptr %11, i64 %547
  %550 = load i32, ptr %549, align 4, !tbaa !6
  %551 = mul nsw i32 %550, %548
  %552 = add nsw i64 %547, -1
  %553 = trunc i64 %547 to i32
  %554 = icmp sgt i32 %553, 0
  br i1 %554, label %546, label %555, !llvm.loop !961

555:                                              ; preds = %546, %537
  %556 = phi i32 [ %541, %537 ], [ %551, %546 ]
  %557 = and i64 %506, 4294967295
  %558 = getelementptr inbounds i32, ptr %6, i64 %557
  %559 = load i32, ptr %558, align 4, !tbaa !6
  %560 = mul nsw i32 %559, %556
  %561 = add nsw i32 %560, %500
  %562 = icmp sgt i64 %498, 2
  %563 = add nsw i64 %499, -1
  %564 = add i32 %497, 1
  br i1 %562, label %496, label %565, !llvm.loop !962

565:                                              ; preds = %555, %493
  %566 = phi i32 [ %495, %493 ], [ %561, %555 ]
  %567 = icmp slt i32 %566, %5
  br i1 %567, label %570, label %568

568:                                              ; preds = %565
  %569 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1496, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5518

570:                                              ; preds = %565
  %571 = sext i32 %566 to i64
  %572 = getelementptr inbounds double, ptr %24, i64 %571
  %573 = load double, ptr %572, align 8, !tbaa !19
  %574 = fptoui double %573 to i8
  %575 = load i8, ptr %26, align 1, !tbaa !12
  %576 = icmp ult i8 %575, %574
  br i1 %576, label %577, label %578

577:                                              ; preds = %570
  store i8 %574, ptr %26, align 1, !tbaa !12
  br label %578

578:                                              ; preds = %577, %570
  %579 = add nuw nsw i32 %494, 1
  br i1 %344, label %580, label %630

580:                                              ; preds = %578
  %581 = load i32, ptr %4, align 4, !tbaa !6
  %582 = load i32, ptr %12, align 4, !tbaa !6
  %583 = add nsw i32 %582, -1
  %584 = icmp slt i32 %581, %583
  br i1 %584, label %607, label %585

585:                                              ; preds = %580
  %586 = icmp eq i32 %581, %583
  br i1 %586, label %587, label %623

587:                                              ; preds = %585
  store i32 0, ptr %4, align 4, !tbaa !6
  %588 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %588, ptr %6, align 4, !tbaa !6
  br i1 %349, label %630, label %589

589:                                              ; preds = %587, %617
  %590 = phi i64 [ %621, %617 ], [ 1, %587 ]
  %591 = getelementptr inbounds i32, ptr %4, i64 %590
  %592 = load i32, ptr %591, align 4, !tbaa !6
  %593 = getelementptr inbounds i32, ptr %12, i64 %590
  %594 = load i32, ptr %593, align 4, !tbaa !6
  %595 = add nsw i32 %594, -1
  %596 = icmp slt i32 %592, %595
  br i1 %596, label %597, label %615

597:                                              ; preds = %589
  br i1 %584, label %607, label %598

598:                                              ; preds = %597
  %599 = shl i64 %590, 32
  %600 = add i64 %599, -4294967296
  %601 = ashr exact i64 %600, 32
  %602 = getelementptr inbounds i32, ptr %7, i64 %601
  %603 = load i32, ptr %602, align 4, !tbaa !6
  %604 = getelementptr inbounds i32, ptr %6, i64 %590
  %605 = load i32, ptr %604, align 4, !tbaa !6
  %606 = add nsw i32 %605, %603
  store i32 %606, ptr %604, align 4, !tbaa !6
  br label %625

607:                                              ; preds = %580, %597
  %608 = phi i32 [ %592, %597 ], [ %581, %580 ]
  %609 = phi ptr [ %591, %597 ], [ %4, %580 ]
  %610 = phi i64 [ %590, %597 ], [ 0, %580 ]
  %611 = add nsw i32 %608, 1
  store i32 %611, ptr %609, align 4, !tbaa !6
  %612 = getelementptr inbounds i32, ptr %7, i64 %610
  %613 = load i32, ptr %612, align 4, !tbaa !6
  %614 = getelementptr inbounds i32, ptr %6, i64 %610
  br label %625

615:                                              ; preds = %589
  %616 = icmp eq i32 %592, %595
  br i1 %616, label %617, label %623

617:                                              ; preds = %615
  store i32 0, ptr %591, align 4, !tbaa !6
  %618 = getelementptr inbounds i32, ptr %8, i64 %590
  %619 = load i32, ptr %618, align 4, !tbaa !6
  %620 = getelementptr inbounds i32, ptr %6, i64 %590
  store i32 %619, ptr %620, align 4, !tbaa !6
  %621 = add nuw nsw i64 %590, 1
  %622 = icmp eq i64 %621, %347
  br i1 %622, label %630, label %589, !llvm.loop !963

623:                                              ; preds = %585, %615
  %624 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1496, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5518

625:                                              ; preds = %598, %607
  %626 = phi ptr [ %614, %607 ], [ %591, %598 ]
  %627 = phi i32 [ %613, %607 ], [ 1, %598 ]
  %628 = load i32, ptr %626, align 4, !tbaa !6
  %629 = add nsw i32 %628, %627
  store i32 %629, ptr %626, align 4, !tbaa !6
  br label %630

630:                                              ; preds = %617, %625, %587, %578
  %631 = icmp eq i32 %579, %5
  br i1 %631, label %5513, label %493, !llvm.loop !964

632:                                              ; preds = %35
  %633 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1496, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5513

634:                                              ; preds = %18
  %635 = getelementptr inbounds ptr, ptr %14, i64 %19
  %636 = load ptr, ptr %635, align 8, !tbaa !10
  %637 = getelementptr inbounds ptr, ptr %16, i64 %19
  %638 = load ptr, ptr %637, align 8, !tbaa !10
  %639 = load double, ptr %636, align 8, !tbaa !19
  %640 = fptosi double %639 to i32
  store i32 %640, ptr %638, align 4, !tbaa !6
  %641 = icmp eq i32 %13, 0
  br i1 %641, label %5513, label %642

642:                                              ; preds = %634
  switch i32 %1, label %1239 [
    i32 1, label %643
    i32 0, label %943
  ]

643:                                              ; preds = %642
  %644 = getelementptr inbounds i32, ptr %3, i64 %19
  %645 = load i32, ptr %644, align 4, !tbaa !6
  %646 = icmp eq i32 %645, 0
  %647 = icmp sgt i32 %5, 0
  br i1 %646, label %657, label %648

648:                                              ; preds = %643
  br i1 %647, label %649, label %5513

649:                                              ; preds = %648
  %650 = icmp sgt i32 %13, 1
  %651 = icmp sgt i32 %13, 0
  %652 = add i32 %13, -2
  %653 = zext i32 %652 to i64
  %654 = zext i32 %13 to i64
  %655 = add nuw i32 %5, 1
  %656 = icmp eq i32 %13, 1
  br label %804

657:                                              ; preds = %643
  br i1 %647, label %658, label %5513

658:                                              ; preds = %657
  %659 = icmp sgt i32 %13, 1
  %660 = icmp sgt i32 %13, 0
  %661 = add i32 %13, -2
  %662 = zext i32 %661 to i64
  %663 = zext i32 %13 to i64
  %664 = add nuw i32 %5, 1
  %665 = icmp eq i32 %13, 1
  br label %666

666:                                              ; preds = %658, %802
  %667 = phi i32 [ 0, %658 ], [ %754, %802 ]
  %668 = phi double [ 0.000000e+00, %658 ], [ %753, %802 ]
  %669 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %659, label %670, label %739

670:                                              ; preds = %666, %729
  %671 = phi i32 [ %738, %729 ], [ 0, %666 ]
  %672 = phi i64 [ %680, %729 ], [ %663, %666 ]
  %673 = phi i64 [ %737, %729 ], [ %662, %666 ]
  %674 = phi i32 [ %735, %729 ], [ %669, %666 ]
  %675 = sub i32 %661, %671
  %676 = tail call i32 @llvm.smin.i32(i32 %675, i32 0)
  %677 = sub i32 %675, %676
  %678 = zext i32 %677 to i64
  %679 = add nuw nsw i64 %678, 1
  %680 = add nsw i64 %672, -1
  %681 = icmp ult i32 %677, 31
  br i1 %681, label %717, label %682

682:                                              ; preds = %670
  %683 = and i64 %679, 8589934560
  %684 = sub i64 %673, %683
  br label %685

685:                                              ; preds = %685, %682
  %686 = phi i64 [ 0, %682 ], [ %709, %685 ]
  %687 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %682 ], [ %705, %685 ]
  %688 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %682 ], [ %706, %685 ]
  %689 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %682 ], [ %707, %685 ]
  %690 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %682 ], [ %708, %685 ]
  %691 = sub i64 %673, %686
  %692 = getelementptr inbounds i32, ptr %9, i64 %691
  %693 = getelementptr inbounds i32, ptr %692, i64 -7
  %694 = load <8 x i32>, ptr %693, align 4, !tbaa !6
  %695 = shufflevector <8 x i32> %694, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %696 = getelementptr inbounds i32, ptr %692, i64 -15
  %697 = load <8 x i32>, ptr %696, align 4, !tbaa !6
  %698 = shufflevector <8 x i32> %697, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %699 = getelementptr inbounds i32, ptr %692, i64 -23
  %700 = load <8 x i32>, ptr %699, align 4, !tbaa !6
  %701 = shufflevector <8 x i32> %700, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %702 = getelementptr inbounds i32, ptr %692, i64 -31
  %703 = load <8 x i32>, ptr %702, align 4, !tbaa !6
  %704 = shufflevector <8 x i32> %703, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %705 = mul <8 x i32> %695, %687
  %706 = mul <8 x i32> %698, %688
  %707 = mul <8 x i32> %701, %689
  %708 = mul <8 x i32> %704, %690
  %709 = add nuw i64 %686, 32
  %710 = icmp eq i64 %709, %683
  br i1 %710, label %711, label %685, !llvm.loop !965

711:                                              ; preds = %685
  %712 = mul <8 x i32> %706, %705
  %713 = mul <8 x i32> %707, %712
  %714 = mul <8 x i32> %708, %713
  %715 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %714)
  %716 = icmp eq i64 %679, %683
  br i1 %716, label %729, label %717

717:                                              ; preds = %670, %711
  %718 = phi i64 [ %673, %670 ], [ %684, %711 ]
  %719 = phi i32 [ 1, %670 ], [ %715, %711 ]
  br label %720

720:                                              ; preds = %717, %720
  %721 = phi i64 [ %726, %720 ], [ %718, %717 ]
  %722 = phi i32 [ %725, %720 ], [ %719, %717 ]
  %723 = getelementptr inbounds i32, ptr %9, i64 %721
  %724 = load i32, ptr %723, align 4, !tbaa !6
  %725 = mul nsw i32 %724, %722
  %726 = add nsw i64 %721, -1
  %727 = trunc i64 %721 to i32
  %728 = icmp sgt i32 %727, 0
  br i1 %728, label %720, label %729, !llvm.loop !966

729:                                              ; preds = %720, %711
  %730 = phi i32 [ %715, %711 ], [ %725, %720 ]
  %731 = and i64 %680, 4294967295
  %732 = getelementptr inbounds i32, ptr %6, i64 %731
  %733 = load i32, ptr %732, align 4, !tbaa !6
  %734 = mul nsw i32 %733, %730
  %735 = add nsw i32 %734, %674
  %736 = icmp sgt i64 %672, 2
  %737 = add nsw i64 %673, -1
  %738 = add i32 %671, 1
  br i1 %736, label %670, label %739, !llvm.loop !967

739:                                              ; preds = %729, %666
  %740 = phi i32 [ %669, %666 ], [ %735, %729 ]
  %741 = sext i32 %740 to i64
  %742 = getelementptr inbounds double, ptr %2, i64 %741
  %743 = load double, ptr %742, align 8, !tbaa !19
  %744 = getelementptr inbounds double, ptr %636, i64 %741
  %745 = load double, ptr %744, align 8, !tbaa !19
  %746 = fptosi double %745 to i32
  %747 = fcmp fast ueq double %743, 0.000000e+00
  br i1 %747, label %752, label %748

748:                                              ; preds = %739
  %749 = load i32, ptr %638, align 4, !tbaa !6
  %750 = icmp slt i32 %749, %746
  br i1 %750, label %751, label %752

751:                                              ; preds = %748
  store i32 %746, ptr %638, align 4, !tbaa !6
  br label %752

752:                                              ; preds = %748, %751, %739
  %753 = fadd fast double %743, %668
  %754 = add nuw nsw i32 %667, 1
  br i1 %660, label %755, label %802

755:                                              ; preds = %752
  %756 = load i32, ptr %4, align 4, !tbaa !6
  %757 = load i32, ptr %12, align 4, !tbaa !6
  %758 = add nsw i32 %757, -1
  %759 = icmp slt i32 %756, %758
  br i1 %759, label %779, label %760

760:                                              ; preds = %755
  %761 = icmp eq i32 %756, %758
  br i1 %761, label %762, label %795

762:                                              ; preds = %760
  store i32 0, ptr %4, align 4, !tbaa !6
  %763 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %763, ptr %6, align 4, !tbaa !6
  br i1 %665, label %802, label %764

764:                                              ; preds = %762, %789
  %765 = phi i64 [ %793, %789 ], [ 1, %762 ]
  %766 = getelementptr inbounds i32, ptr %4, i64 %765
  %767 = load i32, ptr %766, align 4, !tbaa !6
  %768 = getelementptr inbounds i32, ptr %12, i64 %765
  %769 = load i32, ptr %768, align 4, !tbaa !6
  %770 = add nsw i32 %769, -1
  %771 = icmp slt i32 %767, %770
  br i1 %771, label %772, label %787

772:                                              ; preds = %764
  br i1 %759, label %779, label %773

773:                                              ; preds = %772
  %774 = getelementptr inbounds i32, ptr %7, i64 %765
  %775 = load i32, ptr %774, align 4, !tbaa !6
  %776 = getelementptr inbounds i32, ptr %6, i64 %765
  %777 = load i32, ptr %776, align 4, !tbaa !6
  %778 = add nsw i32 %777, %775
  store i32 %778, ptr %776, align 4, !tbaa !6
  br label %797

779:                                              ; preds = %755, %772
  %780 = phi i32 [ %767, %772 ], [ %756, %755 ]
  %781 = phi ptr [ %766, %772 ], [ %4, %755 ]
  %782 = phi i64 [ %765, %772 ], [ 0, %755 ]
  %783 = add nsw i32 %780, 1
  store i32 %783, ptr %781, align 4, !tbaa !6
  %784 = getelementptr inbounds i32, ptr %7, i64 %782
  %785 = load i32, ptr %784, align 4, !tbaa !6
  %786 = getelementptr inbounds i32, ptr %6, i64 %782
  br label %797

787:                                              ; preds = %764
  %788 = icmp eq i32 %767, %770
  br i1 %788, label %789, label %795

789:                                              ; preds = %787
  store i32 0, ptr %766, align 4, !tbaa !6
  %790 = getelementptr inbounds i32, ptr %8, i64 %765
  %791 = load i32, ptr %790, align 4, !tbaa !6
  %792 = getelementptr inbounds i32, ptr %6, i64 %765
  store i32 %791, ptr %792, align 4, !tbaa !6
  %793 = add nuw nsw i64 %765, 1
  %794 = icmp eq i64 %793, %663
  br i1 %794, label %802, label %764, !llvm.loop !968

795:                                              ; preds = %760, %787
  %796 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1499, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5518

797:                                              ; preds = %773, %779
  %798 = phi ptr [ %786, %779 ], [ %766, %773 ]
  %799 = phi i32 [ %785, %779 ], [ 1, %773 ]
  %800 = load i32, ptr %798, align 4, !tbaa !6
  %801 = add nsw i32 %800, %799
  store i32 %801, ptr %798, align 4, !tbaa !6
  br label %802

802:                                              ; preds = %789, %797, %762, %752
  %803 = icmp eq i32 %754, %5
  br i1 %803, label %5513, label %666, !llvm.loop !969

804:                                              ; preds = %649, %941
  %805 = phi i32 [ 0, %649 ], [ %890, %941 ]
  %806 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %650, label %807, label %876

807:                                              ; preds = %804, %866
  %808 = phi i32 [ %875, %866 ], [ 0, %804 ]
  %809 = phi i64 [ %817, %866 ], [ %654, %804 ]
  %810 = phi i64 [ %874, %866 ], [ %653, %804 ]
  %811 = phi i32 [ %872, %866 ], [ %806, %804 ]
  %812 = sub i32 %652, %808
  %813 = tail call i32 @llvm.smin.i32(i32 %812, i32 0)
  %814 = sub i32 %812, %813
  %815 = zext i32 %814 to i64
  %816 = add nuw nsw i64 %815, 1
  %817 = add nsw i64 %809, -1
  %818 = icmp ult i32 %814, 31
  br i1 %818, label %854, label %819

819:                                              ; preds = %807
  %820 = and i64 %816, 8589934560
  %821 = sub i64 %810, %820
  br label %822

822:                                              ; preds = %822, %819
  %823 = phi i64 [ 0, %819 ], [ %846, %822 ]
  %824 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %819 ], [ %842, %822 ]
  %825 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %819 ], [ %843, %822 ]
  %826 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %819 ], [ %844, %822 ]
  %827 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %819 ], [ %845, %822 ]
  %828 = sub i64 %810, %823
  %829 = getelementptr inbounds i32, ptr %11, i64 %828
  %830 = getelementptr inbounds i32, ptr %829, i64 -7
  %831 = load <8 x i32>, ptr %830, align 4, !tbaa !6
  %832 = shufflevector <8 x i32> %831, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %833 = getelementptr inbounds i32, ptr %829, i64 -15
  %834 = load <8 x i32>, ptr %833, align 4, !tbaa !6
  %835 = shufflevector <8 x i32> %834, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %836 = getelementptr inbounds i32, ptr %829, i64 -23
  %837 = load <8 x i32>, ptr %836, align 4, !tbaa !6
  %838 = shufflevector <8 x i32> %837, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %839 = getelementptr inbounds i32, ptr %829, i64 -31
  %840 = load <8 x i32>, ptr %839, align 4, !tbaa !6
  %841 = shufflevector <8 x i32> %840, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %842 = mul <8 x i32> %832, %824
  %843 = mul <8 x i32> %835, %825
  %844 = mul <8 x i32> %838, %826
  %845 = mul <8 x i32> %841, %827
  %846 = add nuw i64 %823, 32
  %847 = icmp eq i64 %846, %820
  br i1 %847, label %848, label %822, !llvm.loop !970

848:                                              ; preds = %822
  %849 = mul <8 x i32> %843, %842
  %850 = mul <8 x i32> %844, %849
  %851 = mul <8 x i32> %845, %850
  %852 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %851)
  %853 = icmp eq i64 %816, %820
  br i1 %853, label %866, label %854

854:                                              ; preds = %807, %848
  %855 = phi i64 [ %810, %807 ], [ %821, %848 ]
  %856 = phi i32 [ 1, %807 ], [ %852, %848 ]
  br label %857

857:                                              ; preds = %854, %857
  %858 = phi i64 [ %863, %857 ], [ %855, %854 ]
  %859 = phi i32 [ %862, %857 ], [ %856, %854 ]
  %860 = getelementptr inbounds i32, ptr %11, i64 %858
  %861 = load i32, ptr %860, align 4, !tbaa !6
  %862 = mul nsw i32 %861, %859
  %863 = add nsw i64 %858, -1
  %864 = trunc i64 %858 to i32
  %865 = icmp sgt i32 %864, 0
  br i1 %865, label %857, label %866, !llvm.loop !971

866:                                              ; preds = %857, %848
  %867 = phi i32 [ %852, %848 ], [ %862, %857 ]
  %868 = and i64 %817, 4294967295
  %869 = getelementptr inbounds i32, ptr %6, i64 %868
  %870 = load i32, ptr %869, align 4, !tbaa !6
  %871 = mul nsw i32 %870, %867
  %872 = add nsw i32 %871, %811
  %873 = icmp sgt i64 %809, 2
  %874 = add nsw i64 %810, -1
  %875 = add i32 %808, 1
  br i1 %873, label %807, label %876, !llvm.loop !972

876:                                              ; preds = %866, %804
  %877 = phi i32 [ %806, %804 ], [ %872, %866 ]
  %878 = icmp slt i32 %877, %5
  br i1 %878, label %881, label %879

879:                                              ; preds = %876
  %880 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1499, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5518

881:                                              ; preds = %876
  %882 = sext i32 %877 to i64
  %883 = getelementptr inbounds double, ptr %636, i64 %882
  %884 = load double, ptr %883, align 8, !tbaa !19
  %885 = fptosi double %884 to i32
  %886 = load i32, ptr %638, align 4, !tbaa !6
  %887 = icmp slt i32 %886, %885
  br i1 %887, label %888, label %889

888:                                              ; preds = %881
  store i32 %885, ptr %638, align 4, !tbaa !6
  br label %889

889:                                              ; preds = %881, %888
  %890 = add nuw nsw i32 %805, 1
  br i1 %651, label %891, label %941

891:                                              ; preds = %889
  %892 = load i32, ptr %4, align 4, !tbaa !6
  %893 = load i32, ptr %12, align 4, !tbaa !6
  %894 = add nsw i32 %893, -1
  %895 = icmp slt i32 %892, %894
  br i1 %895, label %918, label %896

896:                                              ; preds = %891
  %897 = icmp eq i32 %892, %894
  br i1 %897, label %898, label %934

898:                                              ; preds = %896
  store i32 0, ptr %4, align 4, !tbaa !6
  %899 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %899, ptr %6, align 4, !tbaa !6
  br i1 %656, label %941, label %900

900:                                              ; preds = %898, %928
  %901 = phi i64 [ %932, %928 ], [ 1, %898 ]
  %902 = getelementptr inbounds i32, ptr %4, i64 %901
  %903 = load i32, ptr %902, align 4, !tbaa !6
  %904 = getelementptr inbounds i32, ptr %12, i64 %901
  %905 = load i32, ptr %904, align 4, !tbaa !6
  %906 = add nsw i32 %905, -1
  %907 = icmp slt i32 %903, %906
  br i1 %907, label %908, label %926

908:                                              ; preds = %900
  br i1 %895, label %918, label %909

909:                                              ; preds = %908
  %910 = shl i64 %901, 32
  %911 = add i64 %910, -4294967296
  %912 = ashr exact i64 %911, 32
  %913 = getelementptr inbounds i32, ptr %7, i64 %912
  %914 = load i32, ptr %913, align 4, !tbaa !6
  %915 = getelementptr inbounds i32, ptr %6, i64 %901
  %916 = load i32, ptr %915, align 4, !tbaa !6
  %917 = add nsw i32 %916, %914
  store i32 %917, ptr %915, align 4, !tbaa !6
  br label %936

918:                                              ; preds = %891, %908
  %919 = phi i32 [ %903, %908 ], [ %892, %891 ]
  %920 = phi ptr [ %902, %908 ], [ %4, %891 ]
  %921 = phi i64 [ %901, %908 ], [ 0, %891 ]
  %922 = add nsw i32 %919, 1
  store i32 %922, ptr %920, align 4, !tbaa !6
  %923 = getelementptr inbounds i32, ptr %7, i64 %921
  %924 = load i32, ptr %923, align 4, !tbaa !6
  %925 = getelementptr inbounds i32, ptr %6, i64 %921
  br label %936

926:                                              ; preds = %900
  %927 = icmp eq i32 %903, %906
  br i1 %927, label %928, label %934

928:                                              ; preds = %926
  store i32 0, ptr %902, align 4, !tbaa !6
  %929 = getelementptr inbounds i32, ptr %8, i64 %901
  %930 = load i32, ptr %929, align 4, !tbaa !6
  %931 = getelementptr inbounds i32, ptr %6, i64 %901
  store i32 %930, ptr %931, align 4, !tbaa !6
  %932 = add nuw nsw i64 %901, 1
  %933 = icmp eq i64 %932, %654
  br i1 %933, label %941, label %900, !llvm.loop !973

934:                                              ; preds = %896, %926
  %935 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1499, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5518

936:                                              ; preds = %909, %918
  %937 = phi ptr [ %925, %918 ], [ %902, %909 ]
  %938 = phi i32 [ %924, %918 ], [ 1, %909 ]
  %939 = load i32, ptr %937, align 4, !tbaa !6
  %940 = add nsw i32 %939, %938
  store i32 %940, ptr %937, align 4, !tbaa !6
  br label %941

941:                                              ; preds = %928, %936, %898, %889
  %942 = icmp eq i32 %890, %5
  br i1 %942, label %5513, label %804, !llvm.loop !974

943:                                              ; preds = %642
  %944 = getelementptr inbounds i32, ptr %3, i64 %19
  %945 = load i32, ptr %944, align 4, !tbaa !6
  %946 = icmp eq i32 %945, 0
  %947 = icmp sgt i32 %5, 0
  br i1 %946, label %957, label %948

948:                                              ; preds = %943
  br i1 %947, label %949, label %5513

949:                                              ; preds = %948
  %950 = icmp sgt i32 %13, 1
  %951 = icmp sgt i32 %13, 0
  %952 = add i32 %13, -2
  %953 = zext i32 %952 to i64
  %954 = zext i32 %13 to i64
  %955 = add nuw i32 %5, 1
  %956 = icmp eq i32 %13, 1
  br label %1100

957:                                              ; preds = %943
  br i1 %947, label %958, label %5513

958:                                              ; preds = %957
  %959 = icmp sgt i32 %13, 1
  %960 = icmp sgt i32 %13, 0
  %961 = add i32 %13, -2
  %962 = zext i32 %961 to i64
  %963 = zext i32 %13 to i64
  %964 = add nuw i32 %5, 1
  %965 = icmp eq i32 %13, 1
  br label %966

966:                                              ; preds = %958, %1098
  %967 = phi i32 [ 0, %958 ], [ %1050, %1098 ]
  %968 = phi double [ 0.000000e+00, %958 ], [ %1049, %1098 ]
  %969 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %959, label %970, label %1039

970:                                              ; preds = %966, %1029
  %971 = phi i32 [ %1038, %1029 ], [ 0, %966 ]
  %972 = phi i64 [ %980, %1029 ], [ %963, %966 ]
  %973 = phi i64 [ %1037, %1029 ], [ %962, %966 ]
  %974 = phi i32 [ %1035, %1029 ], [ %969, %966 ]
  %975 = sub i32 %961, %971
  %976 = tail call i32 @llvm.smin.i32(i32 %975, i32 0)
  %977 = sub i32 %975, %976
  %978 = zext i32 %977 to i64
  %979 = add nuw nsw i64 %978, 1
  %980 = add nsw i64 %972, -1
  %981 = icmp ult i32 %977, 31
  br i1 %981, label %1017, label %982

982:                                              ; preds = %970
  %983 = and i64 %979, 8589934560
  %984 = sub i64 %973, %983
  br label %985

985:                                              ; preds = %985, %982
  %986 = phi i64 [ 0, %982 ], [ %1009, %985 ]
  %987 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %982 ], [ %1005, %985 ]
  %988 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %982 ], [ %1006, %985 ]
  %989 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %982 ], [ %1007, %985 ]
  %990 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %982 ], [ %1008, %985 ]
  %991 = sub i64 %973, %986
  %992 = getelementptr inbounds i32, ptr %9, i64 %991
  %993 = getelementptr inbounds i32, ptr %992, i64 -7
  %994 = load <8 x i32>, ptr %993, align 4, !tbaa !6
  %995 = shufflevector <8 x i32> %994, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %996 = getelementptr inbounds i32, ptr %992, i64 -15
  %997 = load <8 x i32>, ptr %996, align 4, !tbaa !6
  %998 = shufflevector <8 x i32> %997, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %999 = getelementptr inbounds i32, ptr %992, i64 -23
  %1000 = load <8 x i32>, ptr %999, align 4, !tbaa !6
  %1001 = shufflevector <8 x i32> %1000, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1002 = getelementptr inbounds i32, ptr %992, i64 -31
  %1003 = load <8 x i32>, ptr %1002, align 4, !tbaa !6
  %1004 = shufflevector <8 x i32> %1003, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1005 = mul <8 x i32> %995, %987
  %1006 = mul <8 x i32> %998, %988
  %1007 = mul <8 x i32> %1001, %989
  %1008 = mul <8 x i32> %1004, %990
  %1009 = add nuw i64 %986, 32
  %1010 = icmp eq i64 %1009, %983
  br i1 %1010, label %1011, label %985, !llvm.loop !975

1011:                                             ; preds = %985
  %1012 = mul <8 x i32> %1006, %1005
  %1013 = mul <8 x i32> %1007, %1012
  %1014 = mul <8 x i32> %1008, %1013
  %1015 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1014)
  %1016 = icmp eq i64 %979, %983
  br i1 %1016, label %1029, label %1017

1017:                                             ; preds = %970, %1011
  %1018 = phi i64 [ %973, %970 ], [ %984, %1011 ]
  %1019 = phi i32 [ 1, %970 ], [ %1015, %1011 ]
  br label %1020

1020:                                             ; preds = %1017, %1020
  %1021 = phi i64 [ %1026, %1020 ], [ %1018, %1017 ]
  %1022 = phi i32 [ %1025, %1020 ], [ %1019, %1017 ]
  %1023 = getelementptr inbounds i32, ptr %9, i64 %1021
  %1024 = load i32, ptr %1023, align 4, !tbaa !6
  %1025 = mul nsw i32 %1024, %1022
  %1026 = add nsw i64 %1021, -1
  %1027 = trunc i64 %1021 to i32
  %1028 = icmp sgt i32 %1027, 0
  br i1 %1028, label %1020, label %1029, !llvm.loop !976

1029:                                             ; preds = %1020, %1011
  %1030 = phi i32 [ %1015, %1011 ], [ %1025, %1020 ]
  %1031 = and i64 %980, 4294967295
  %1032 = getelementptr inbounds i32, ptr %6, i64 %1031
  %1033 = load i32, ptr %1032, align 4, !tbaa !6
  %1034 = mul nsw i32 %1033, %1030
  %1035 = add nsw i32 %1034, %974
  %1036 = icmp sgt i64 %972, 2
  %1037 = add nsw i64 %973, -1
  %1038 = add i32 %971, 1
  br i1 %1036, label %970, label %1039, !llvm.loop !977

1039:                                             ; preds = %1029, %966
  %1040 = phi i32 [ %969, %966 ], [ %1035, %1029 ]
  %1041 = sext i32 %1040 to i64
  %1042 = getelementptr inbounds double, ptr %636, i64 %1041
  %1043 = load double, ptr %1042, align 8, !tbaa !19
  %1044 = fptosi double %1043 to i32
  %1045 = load i32, ptr %638, align 4, !tbaa !6
  %1046 = icmp slt i32 %1045, %1044
  br i1 %1046, label %1047, label %1048

1047:                                             ; preds = %1039
  store i32 %1044, ptr %638, align 4, !tbaa !6
  br label %1048

1048:                                             ; preds = %1047, %1039
  %1049 = fadd fast double %968, 1.000000e+00
  %1050 = add nuw nsw i32 %967, 1
  br i1 %960, label %1051, label %1098

1051:                                             ; preds = %1048
  %1052 = load i32, ptr %4, align 4, !tbaa !6
  %1053 = load i32, ptr %12, align 4, !tbaa !6
  %1054 = add nsw i32 %1053, -1
  %1055 = icmp slt i32 %1052, %1054
  br i1 %1055, label %1075, label %1056

1056:                                             ; preds = %1051
  %1057 = icmp eq i32 %1052, %1054
  br i1 %1057, label %1058, label %1091

1058:                                             ; preds = %1056
  store i32 0, ptr %4, align 4, !tbaa !6
  %1059 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1059, ptr %6, align 4, !tbaa !6
  br i1 %965, label %1098, label %1060

1060:                                             ; preds = %1058, %1085
  %1061 = phi i64 [ %1089, %1085 ], [ 1, %1058 ]
  %1062 = getelementptr inbounds i32, ptr %4, i64 %1061
  %1063 = load i32, ptr %1062, align 4, !tbaa !6
  %1064 = getelementptr inbounds i32, ptr %12, i64 %1061
  %1065 = load i32, ptr %1064, align 4, !tbaa !6
  %1066 = add nsw i32 %1065, -1
  %1067 = icmp slt i32 %1063, %1066
  br i1 %1067, label %1068, label %1083

1068:                                             ; preds = %1060
  br i1 %1055, label %1075, label %1069

1069:                                             ; preds = %1068
  %1070 = getelementptr inbounds i32, ptr %7, i64 %1061
  %1071 = load i32, ptr %1070, align 4, !tbaa !6
  %1072 = getelementptr inbounds i32, ptr %6, i64 %1061
  %1073 = load i32, ptr %1072, align 4, !tbaa !6
  %1074 = add nsw i32 %1073, %1071
  store i32 %1074, ptr %1072, align 4, !tbaa !6
  br label %1093

1075:                                             ; preds = %1051, %1068
  %1076 = phi i32 [ %1063, %1068 ], [ %1052, %1051 ]
  %1077 = phi ptr [ %1062, %1068 ], [ %4, %1051 ]
  %1078 = phi i64 [ %1061, %1068 ], [ 0, %1051 ]
  %1079 = add nsw i32 %1076, 1
  store i32 %1079, ptr %1077, align 4, !tbaa !6
  %1080 = getelementptr inbounds i32, ptr %7, i64 %1078
  %1081 = load i32, ptr %1080, align 4, !tbaa !6
  %1082 = getelementptr inbounds i32, ptr %6, i64 %1078
  br label %1093

1083:                                             ; preds = %1060
  %1084 = icmp eq i32 %1063, %1066
  br i1 %1084, label %1085, label %1091

1085:                                             ; preds = %1083
  store i32 0, ptr %1062, align 4, !tbaa !6
  %1086 = getelementptr inbounds i32, ptr %8, i64 %1061
  %1087 = load i32, ptr %1086, align 4, !tbaa !6
  %1088 = getelementptr inbounds i32, ptr %6, i64 %1061
  store i32 %1087, ptr %1088, align 4, !tbaa !6
  %1089 = add nuw nsw i64 %1061, 1
  %1090 = icmp eq i64 %1089, %963
  br i1 %1090, label %1098, label %1060, !llvm.loop !978

1091:                                             ; preds = %1056, %1083
  %1092 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1499, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5518

1093:                                             ; preds = %1069, %1075
  %1094 = phi ptr [ %1082, %1075 ], [ %1062, %1069 ]
  %1095 = phi i32 [ %1081, %1075 ], [ 1, %1069 ]
  %1096 = load i32, ptr %1094, align 4, !tbaa !6
  %1097 = add nsw i32 %1096, %1095
  store i32 %1097, ptr %1094, align 4, !tbaa !6
  br label %1098

1098:                                             ; preds = %1085, %1093, %1058, %1048
  %1099 = icmp eq i32 %1050, %5
  br i1 %1099, label %5513, label %966, !llvm.loop !979

1100:                                             ; preds = %949, %1237
  %1101 = phi i32 [ 0, %949 ], [ %1186, %1237 ]
  %1102 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %950, label %1103, label %1172

1103:                                             ; preds = %1100, %1162
  %1104 = phi i32 [ %1171, %1162 ], [ 0, %1100 ]
  %1105 = phi i64 [ %1113, %1162 ], [ %954, %1100 ]
  %1106 = phi i64 [ %1170, %1162 ], [ %953, %1100 ]
  %1107 = phi i32 [ %1168, %1162 ], [ %1102, %1100 ]
  %1108 = sub i32 %952, %1104
  %1109 = tail call i32 @llvm.smin.i32(i32 %1108, i32 0)
  %1110 = sub i32 %1108, %1109
  %1111 = zext i32 %1110 to i64
  %1112 = add nuw nsw i64 %1111, 1
  %1113 = add nsw i64 %1105, -1
  %1114 = icmp ult i32 %1110, 31
  br i1 %1114, label %1150, label %1115

1115:                                             ; preds = %1103
  %1116 = and i64 %1112, 8589934560
  %1117 = sub i64 %1106, %1116
  br label %1118

1118:                                             ; preds = %1118, %1115
  %1119 = phi i64 [ 0, %1115 ], [ %1142, %1118 ]
  %1120 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1115 ], [ %1138, %1118 ]
  %1121 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1115 ], [ %1139, %1118 ]
  %1122 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1115 ], [ %1140, %1118 ]
  %1123 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1115 ], [ %1141, %1118 ]
  %1124 = sub i64 %1106, %1119
  %1125 = getelementptr inbounds i32, ptr %11, i64 %1124
  %1126 = getelementptr inbounds i32, ptr %1125, i64 -7
  %1127 = load <8 x i32>, ptr %1126, align 4, !tbaa !6
  %1128 = shufflevector <8 x i32> %1127, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1129 = getelementptr inbounds i32, ptr %1125, i64 -15
  %1130 = load <8 x i32>, ptr %1129, align 4, !tbaa !6
  %1131 = shufflevector <8 x i32> %1130, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1132 = getelementptr inbounds i32, ptr %1125, i64 -23
  %1133 = load <8 x i32>, ptr %1132, align 4, !tbaa !6
  %1134 = shufflevector <8 x i32> %1133, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1135 = getelementptr inbounds i32, ptr %1125, i64 -31
  %1136 = load <8 x i32>, ptr %1135, align 4, !tbaa !6
  %1137 = shufflevector <8 x i32> %1136, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1138 = mul <8 x i32> %1128, %1120
  %1139 = mul <8 x i32> %1131, %1121
  %1140 = mul <8 x i32> %1134, %1122
  %1141 = mul <8 x i32> %1137, %1123
  %1142 = add nuw i64 %1119, 32
  %1143 = icmp eq i64 %1142, %1116
  br i1 %1143, label %1144, label %1118, !llvm.loop !980

1144:                                             ; preds = %1118
  %1145 = mul <8 x i32> %1139, %1138
  %1146 = mul <8 x i32> %1140, %1145
  %1147 = mul <8 x i32> %1141, %1146
  %1148 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1147)
  %1149 = icmp eq i64 %1112, %1116
  br i1 %1149, label %1162, label %1150

1150:                                             ; preds = %1103, %1144
  %1151 = phi i64 [ %1106, %1103 ], [ %1117, %1144 ]
  %1152 = phi i32 [ 1, %1103 ], [ %1148, %1144 ]
  br label %1153

1153:                                             ; preds = %1150, %1153
  %1154 = phi i64 [ %1159, %1153 ], [ %1151, %1150 ]
  %1155 = phi i32 [ %1158, %1153 ], [ %1152, %1150 ]
  %1156 = getelementptr inbounds i32, ptr %11, i64 %1154
  %1157 = load i32, ptr %1156, align 4, !tbaa !6
  %1158 = mul nsw i32 %1157, %1155
  %1159 = add nsw i64 %1154, -1
  %1160 = trunc i64 %1154 to i32
  %1161 = icmp sgt i32 %1160, 0
  br i1 %1161, label %1153, label %1162, !llvm.loop !981

1162:                                             ; preds = %1153, %1144
  %1163 = phi i32 [ %1148, %1144 ], [ %1158, %1153 ]
  %1164 = and i64 %1113, 4294967295
  %1165 = getelementptr inbounds i32, ptr %6, i64 %1164
  %1166 = load i32, ptr %1165, align 4, !tbaa !6
  %1167 = mul nsw i32 %1166, %1163
  %1168 = add nsw i32 %1167, %1107
  %1169 = icmp sgt i64 %1105, 2
  %1170 = add nsw i64 %1106, -1
  %1171 = add i32 %1104, 1
  br i1 %1169, label %1103, label %1172, !llvm.loop !982

1172:                                             ; preds = %1162, %1100
  %1173 = phi i32 [ %1102, %1100 ], [ %1168, %1162 ]
  %1174 = icmp slt i32 %1173, %5
  br i1 %1174, label %1177, label %1175

1175:                                             ; preds = %1172
  %1176 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1499, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5518

1177:                                             ; preds = %1172
  %1178 = sext i32 %1173 to i64
  %1179 = getelementptr inbounds double, ptr %636, i64 %1178
  %1180 = load double, ptr %1179, align 8, !tbaa !19
  %1181 = fptosi double %1180 to i32
  %1182 = load i32, ptr %638, align 4, !tbaa !6
  %1183 = icmp slt i32 %1182, %1181
  br i1 %1183, label %1184, label %1185

1184:                                             ; preds = %1177
  store i32 %1181, ptr %638, align 4, !tbaa !6
  br label %1185

1185:                                             ; preds = %1184, %1177
  %1186 = add nuw nsw i32 %1101, 1
  br i1 %951, label %1187, label %1237

1187:                                             ; preds = %1185
  %1188 = load i32, ptr %4, align 4, !tbaa !6
  %1189 = load i32, ptr %12, align 4, !tbaa !6
  %1190 = add nsw i32 %1189, -1
  %1191 = icmp slt i32 %1188, %1190
  br i1 %1191, label %1214, label %1192

1192:                                             ; preds = %1187
  %1193 = icmp eq i32 %1188, %1190
  br i1 %1193, label %1194, label %1230

1194:                                             ; preds = %1192
  store i32 0, ptr %4, align 4, !tbaa !6
  %1195 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1195, ptr %6, align 4, !tbaa !6
  br i1 %956, label %1237, label %1196

1196:                                             ; preds = %1194, %1224
  %1197 = phi i64 [ %1228, %1224 ], [ 1, %1194 ]
  %1198 = getelementptr inbounds i32, ptr %4, i64 %1197
  %1199 = load i32, ptr %1198, align 4, !tbaa !6
  %1200 = getelementptr inbounds i32, ptr %12, i64 %1197
  %1201 = load i32, ptr %1200, align 4, !tbaa !6
  %1202 = add nsw i32 %1201, -1
  %1203 = icmp slt i32 %1199, %1202
  br i1 %1203, label %1204, label %1222

1204:                                             ; preds = %1196
  br i1 %1191, label %1214, label %1205

1205:                                             ; preds = %1204
  %1206 = shl i64 %1197, 32
  %1207 = add i64 %1206, -4294967296
  %1208 = ashr exact i64 %1207, 32
  %1209 = getelementptr inbounds i32, ptr %7, i64 %1208
  %1210 = load i32, ptr %1209, align 4, !tbaa !6
  %1211 = getelementptr inbounds i32, ptr %6, i64 %1197
  %1212 = load i32, ptr %1211, align 4, !tbaa !6
  %1213 = add nsw i32 %1212, %1210
  store i32 %1213, ptr %1211, align 4, !tbaa !6
  br label %1232

1214:                                             ; preds = %1187, %1204
  %1215 = phi i32 [ %1199, %1204 ], [ %1188, %1187 ]
  %1216 = phi ptr [ %1198, %1204 ], [ %4, %1187 ]
  %1217 = phi i64 [ %1197, %1204 ], [ 0, %1187 ]
  %1218 = add nsw i32 %1215, 1
  store i32 %1218, ptr %1216, align 4, !tbaa !6
  %1219 = getelementptr inbounds i32, ptr %7, i64 %1217
  %1220 = load i32, ptr %1219, align 4, !tbaa !6
  %1221 = getelementptr inbounds i32, ptr %6, i64 %1217
  br label %1232

1222:                                             ; preds = %1196
  %1223 = icmp eq i32 %1199, %1202
  br i1 %1223, label %1224, label %1230

1224:                                             ; preds = %1222
  store i32 0, ptr %1198, align 4, !tbaa !6
  %1225 = getelementptr inbounds i32, ptr %8, i64 %1197
  %1226 = load i32, ptr %1225, align 4, !tbaa !6
  %1227 = getelementptr inbounds i32, ptr %6, i64 %1197
  store i32 %1226, ptr %1227, align 4, !tbaa !6
  %1228 = add nuw nsw i64 %1197, 1
  %1229 = icmp eq i64 %1228, %954
  br i1 %1229, label %1237, label %1196, !llvm.loop !983

1230:                                             ; preds = %1192, %1222
  %1231 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1499, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5518

1232:                                             ; preds = %1205, %1214
  %1233 = phi ptr [ %1221, %1214 ], [ %1198, %1205 ]
  %1234 = phi i32 [ %1220, %1214 ], [ 1, %1205 ]
  %1235 = load i32, ptr %1233, align 4, !tbaa !6
  %1236 = add nsw i32 %1235, %1234
  store i32 %1236, ptr %1233, align 4, !tbaa !6
  br label %1237

1237:                                             ; preds = %1224, %1232, %1194, %1185
  %1238 = icmp eq i32 %1186, %5
  br i1 %1238, label %5513, label %1100, !llvm.loop !984

1239:                                             ; preds = %642
  %1240 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1499, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5513

1241:                                             ; preds = %18
  %1242 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1243 = load ptr, ptr %1242, align 8, !tbaa !10
  %1244 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1245 = load ptr, ptr %1244, align 8, !tbaa !10
  %1246 = load double, ptr %1243, align 8, !tbaa !19
  %1247 = fptosi double %1246 to i8
  store i8 %1247, ptr %1245, align 1, !tbaa !12
  %1248 = icmp eq i32 %13, 0
  br i1 %1248, label %1249, label %1254

1249:                                             ; preds = %1241
  %1250 = load double, ptr %1243, align 8, !tbaa !19
  %1251 = fptosi double %1250 to i8
  %1252 = icmp slt i8 %1247, %1251
  br i1 %1252, label %1253, label %5513

1253:                                             ; preds = %1249
  store i8 %1251, ptr %1245, align 1, !tbaa !12
  br label %5513

1254:                                             ; preds = %1241
  switch i32 %1, label %1851 [
    i32 1, label %1255
    i32 0, label %1555
  ]

1255:                                             ; preds = %1254
  %1256 = getelementptr inbounds i32, ptr %3, i64 %19
  %1257 = load i32, ptr %1256, align 4, !tbaa !6
  %1258 = icmp eq i32 %1257, 0
  %1259 = icmp sgt i32 %5, 0
  br i1 %1258, label %1269, label %1260

1260:                                             ; preds = %1255
  br i1 %1259, label %1261, label %5513

1261:                                             ; preds = %1260
  %1262 = icmp sgt i32 %13, 1
  %1263 = icmp sgt i32 %13, 0
  %1264 = add i32 %13, -2
  %1265 = zext i32 %1264 to i64
  %1266 = zext i32 %13 to i64
  %1267 = add nuw i32 %5, 1
  %1268 = icmp eq i32 %13, 1
  br label %1416

1269:                                             ; preds = %1255
  br i1 %1259, label %1270, label %5513

1270:                                             ; preds = %1269
  %1271 = icmp sgt i32 %13, 1
  %1272 = icmp sgt i32 %13, 0
  %1273 = add i32 %13, -2
  %1274 = zext i32 %1273 to i64
  %1275 = zext i32 %13 to i64
  %1276 = add nuw i32 %5, 1
  %1277 = icmp eq i32 %13, 1
  br label %1278

1278:                                             ; preds = %1270, %1414
  %1279 = phi i32 [ 0, %1270 ], [ %1366, %1414 ]
  %1280 = phi double [ 0.000000e+00, %1270 ], [ %1365, %1414 ]
  %1281 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1271, label %1282, label %1351

1282:                                             ; preds = %1278, %1341
  %1283 = phi i32 [ %1350, %1341 ], [ 0, %1278 ]
  %1284 = phi i64 [ %1292, %1341 ], [ %1275, %1278 ]
  %1285 = phi i64 [ %1349, %1341 ], [ %1274, %1278 ]
  %1286 = phi i32 [ %1347, %1341 ], [ %1281, %1278 ]
  %1287 = sub i32 %1273, %1283
  %1288 = tail call i32 @llvm.smin.i32(i32 %1287, i32 0)
  %1289 = sub i32 %1287, %1288
  %1290 = zext i32 %1289 to i64
  %1291 = add nuw nsw i64 %1290, 1
  %1292 = add nsw i64 %1284, -1
  %1293 = icmp ult i32 %1289, 31
  br i1 %1293, label %1329, label %1294

1294:                                             ; preds = %1282
  %1295 = and i64 %1291, 8589934560
  %1296 = sub i64 %1285, %1295
  br label %1297

1297:                                             ; preds = %1297, %1294
  %1298 = phi i64 [ 0, %1294 ], [ %1321, %1297 ]
  %1299 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1294 ], [ %1317, %1297 ]
  %1300 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1294 ], [ %1318, %1297 ]
  %1301 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1294 ], [ %1319, %1297 ]
  %1302 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1294 ], [ %1320, %1297 ]
  %1303 = sub i64 %1285, %1298
  %1304 = getelementptr inbounds i32, ptr %9, i64 %1303
  %1305 = getelementptr inbounds i32, ptr %1304, i64 -7
  %1306 = load <8 x i32>, ptr %1305, align 4, !tbaa !6
  %1307 = shufflevector <8 x i32> %1306, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1308 = getelementptr inbounds i32, ptr %1304, i64 -15
  %1309 = load <8 x i32>, ptr %1308, align 4, !tbaa !6
  %1310 = shufflevector <8 x i32> %1309, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1311 = getelementptr inbounds i32, ptr %1304, i64 -23
  %1312 = load <8 x i32>, ptr %1311, align 4, !tbaa !6
  %1313 = shufflevector <8 x i32> %1312, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1314 = getelementptr inbounds i32, ptr %1304, i64 -31
  %1315 = load <8 x i32>, ptr %1314, align 4, !tbaa !6
  %1316 = shufflevector <8 x i32> %1315, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1317 = mul <8 x i32> %1307, %1299
  %1318 = mul <8 x i32> %1310, %1300
  %1319 = mul <8 x i32> %1313, %1301
  %1320 = mul <8 x i32> %1316, %1302
  %1321 = add nuw i64 %1298, 32
  %1322 = icmp eq i64 %1321, %1295
  br i1 %1322, label %1323, label %1297, !llvm.loop !985

1323:                                             ; preds = %1297
  %1324 = mul <8 x i32> %1318, %1317
  %1325 = mul <8 x i32> %1319, %1324
  %1326 = mul <8 x i32> %1320, %1325
  %1327 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1326)
  %1328 = icmp eq i64 %1291, %1295
  br i1 %1328, label %1341, label %1329

1329:                                             ; preds = %1282, %1323
  %1330 = phi i64 [ %1285, %1282 ], [ %1296, %1323 ]
  %1331 = phi i32 [ 1, %1282 ], [ %1327, %1323 ]
  br label %1332

1332:                                             ; preds = %1329, %1332
  %1333 = phi i64 [ %1338, %1332 ], [ %1330, %1329 ]
  %1334 = phi i32 [ %1337, %1332 ], [ %1331, %1329 ]
  %1335 = getelementptr inbounds i32, ptr %9, i64 %1333
  %1336 = load i32, ptr %1335, align 4, !tbaa !6
  %1337 = mul nsw i32 %1336, %1334
  %1338 = add nsw i64 %1333, -1
  %1339 = trunc i64 %1333 to i32
  %1340 = icmp sgt i32 %1339, 0
  br i1 %1340, label %1332, label %1341, !llvm.loop !986

1341:                                             ; preds = %1332, %1323
  %1342 = phi i32 [ %1327, %1323 ], [ %1337, %1332 ]
  %1343 = and i64 %1292, 4294967295
  %1344 = getelementptr inbounds i32, ptr %6, i64 %1343
  %1345 = load i32, ptr %1344, align 4, !tbaa !6
  %1346 = mul nsw i32 %1345, %1342
  %1347 = add nsw i32 %1346, %1286
  %1348 = icmp sgt i64 %1284, 2
  %1349 = add nsw i64 %1285, -1
  %1350 = add i32 %1283, 1
  br i1 %1348, label %1282, label %1351, !llvm.loop !987

1351:                                             ; preds = %1341, %1278
  %1352 = phi i32 [ %1281, %1278 ], [ %1347, %1341 ]
  %1353 = sext i32 %1352 to i64
  %1354 = getelementptr inbounds double, ptr %2, i64 %1353
  %1355 = load double, ptr %1354, align 8, !tbaa !19
  %1356 = getelementptr inbounds double, ptr %1243, i64 %1353
  %1357 = load double, ptr %1356, align 8, !tbaa !19
  %1358 = fptosi double %1357 to i8
  %1359 = fcmp fast ueq double %1355, 0.000000e+00
  br i1 %1359, label %1364, label %1360

1360:                                             ; preds = %1351
  %1361 = load i8, ptr %1245, align 1, !tbaa !12
  %1362 = icmp slt i8 %1361, %1358
  br i1 %1362, label %1363, label %1364

1363:                                             ; preds = %1360
  store i8 %1358, ptr %1245, align 1, !tbaa !12
  br label %1364

1364:                                             ; preds = %1360, %1363, %1351
  %1365 = fadd fast double %1355, %1280
  %1366 = add nuw nsw i32 %1279, 1
  br i1 %1272, label %1367, label %1414

1367:                                             ; preds = %1364
  %1368 = load i32, ptr %4, align 4, !tbaa !6
  %1369 = load i32, ptr %12, align 4, !tbaa !6
  %1370 = add nsw i32 %1369, -1
  %1371 = icmp slt i32 %1368, %1370
  br i1 %1371, label %1391, label %1372

1372:                                             ; preds = %1367
  %1373 = icmp eq i32 %1368, %1370
  br i1 %1373, label %1374, label %1407

1374:                                             ; preds = %1372
  store i32 0, ptr %4, align 4, !tbaa !6
  %1375 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1375, ptr %6, align 4, !tbaa !6
  br i1 %1277, label %1414, label %1376

1376:                                             ; preds = %1374, %1401
  %1377 = phi i64 [ %1405, %1401 ], [ 1, %1374 ]
  %1378 = getelementptr inbounds i32, ptr %4, i64 %1377
  %1379 = load i32, ptr %1378, align 4, !tbaa !6
  %1380 = getelementptr inbounds i32, ptr %12, i64 %1377
  %1381 = load i32, ptr %1380, align 4, !tbaa !6
  %1382 = add nsw i32 %1381, -1
  %1383 = icmp slt i32 %1379, %1382
  br i1 %1383, label %1384, label %1399

1384:                                             ; preds = %1376
  br i1 %1371, label %1391, label %1385

1385:                                             ; preds = %1384
  %1386 = getelementptr inbounds i32, ptr %7, i64 %1377
  %1387 = load i32, ptr %1386, align 4, !tbaa !6
  %1388 = getelementptr inbounds i32, ptr %6, i64 %1377
  %1389 = load i32, ptr %1388, align 4, !tbaa !6
  %1390 = add nsw i32 %1389, %1387
  store i32 %1390, ptr %1388, align 4, !tbaa !6
  br label %1409

1391:                                             ; preds = %1367, %1384
  %1392 = phi i32 [ %1379, %1384 ], [ %1368, %1367 ]
  %1393 = phi ptr [ %1378, %1384 ], [ %4, %1367 ]
  %1394 = phi i64 [ %1377, %1384 ], [ 0, %1367 ]
  %1395 = add nsw i32 %1392, 1
  store i32 %1395, ptr %1393, align 4, !tbaa !6
  %1396 = getelementptr inbounds i32, ptr %7, i64 %1394
  %1397 = load i32, ptr %1396, align 4, !tbaa !6
  %1398 = getelementptr inbounds i32, ptr %6, i64 %1394
  br label %1409

1399:                                             ; preds = %1376
  %1400 = icmp eq i32 %1379, %1382
  br i1 %1400, label %1401, label %1407

1401:                                             ; preds = %1399
  store i32 0, ptr %1378, align 4, !tbaa !6
  %1402 = getelementptr inbounds i32, ptr %8, i64 %1377
  %1403 = load i32, ptr %1402, align 4, !tbaa !6
  %1404 = getelementptr inbounds i32, ptr %6, i64 %1377
  store i32 %1403, ptr %1404, align 4, !tbaa !6
  %1405 = add nuw nsw i64 %1377, 1
  %1406 = icmp eq i64 %1405, %1275
  br i1 %1406, label %1414, label %1376, !llvm.loop !988

1407:                                             ; preds = %1372, %1399
  %1408 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1503, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5518

1409:                                             ; preds = %1385, %1391
  %1410 = phi ptr [ %1398, %1391 ], [ %1378, %1385 ]
  %1411 = phi i32 [ %1397, %1391 ], [ 1, %1385 ]
  %1412 = load i32, ptr %1410, align 4, !tbaa !6
  %1413 = add nsw i32 %1412, %1411
  store i32 %1413, ptr %1410, align 4, !tbaa !6
  br label %1414

1414:                                             ; preds = %1401, %1409, %1374, %1364
  %1415 = icmp eq i32 %1366, %5
  br i1 %1415, label %5513, label %1278, !llvm.loop !989

1416:                                             ; preds = %1261, %1553
  %1417 = phi i32 [ 0, %1261 ], [ %1502, %1553 ]
  %1418 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1262, label %1419, label %1488

1419:                                             ; preds = %1416, %1478
  %1420 = phi i32 [ %1487, %1478 ], [ 0, %1416 ]
  %1421 = phi i64 [ %1429, %1478 ], [ %1266, %1416 ]
  %1422 = phi i64 [ %1486, %1478 ], [ %1265, %1416 ]
  %1423 = phi i32 [ %1484, %1478 ], [ %1418, %1416 ]
  %1424 = sub i32 %1264, %1420
  %1425 = tail call i32 @llvm.smin.i32(i32 %1424, i32 0)
  %1426 = sub i32 %1424, %1425
  %1427 = zext i32 %1426 to i64
  %1428 = add nuw nsw i64 %1427, 1
  %1429 = add nsw i64 %1421, -1
  %1430 = icmp ult i32 %1426, 31
  br i1 %1430, label %1466, label %1431

1431:                                             ; preds = %1419
  %1432 = and i64 %1428, 8589934560
  %1433 = sub i64 %1422, %1432
  br label %1434

1434:                                             ; preds = %1434, %1431
  %1435 = phi i64 [ 0, %1431 ], [ %1458, %1434 ]
  %1436 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1431 ], [ %1454, %1434 ]
  %1437 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1431 ], [ %1455, %1434 ]
  %1438 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1431 ], [ %1456, %1434 ]
  %1439 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1431 ], [ %1457, %1434 ]
  %1440 = sub i64 %1422, %1435
  %1441 = getelementptr inbounds i32, ptr %11, i64 %1440
  %1442 = getelementptr inbounds i32, ptr %1441, i64 -7
  %1443 = load <8 x i32>, ptr %1442, align 4, !tbaa !6
  %1444 = shufflevector <8 x i32> %1443, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1445 = getelementptr inbounds i32, ptr %1441, i64 -15
  %1446 = load <8 x i32>, ptr %1445, align 4, !tbaa !6
  %1447 = shufflevector <8 x i32> %1446, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1448 = getelementptr inbounds i32, ptr %1441, i64 -23
  %1449 = load <8 x i32>, ptr %1448, align 4, !tbaa !6
  %1450 = shufflevector <8 x i32> %1449, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1451 = getelementptr inbounds i32, ptr %1441, i64 -31
  %1452 = load <8 x i32>, ptr %1451, align 4, !tbaa !6
  %1453 = shufflevector <8 x i32> %1452, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1454 = mul <8 x i32> %1444, %1436
  %1455 = mul <8 x i32> %1447, %1437
  %1456 = mul <8 x i32> %1450, %1438
  %1457 = mul <8 x i32> %1453, %1439
  %1458 = add nuw i64 %1435, 32
  %1459 = icmp eq i64 %1458, %1432
  br i1 %1459, label %1460, label %1434, !llvm.loop !990

1460:                                             ; preds = %1434
  %1461 = mul <8 x i32> %1455, %1454
  %1462 = mul <8 x i32> %1456, %1461
  %1463 = mul <8 x i32> %1457, %1462
  %1464 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1463)
  %1465 = icmp eq i64 %1428, %1432
  br i1 %1465, label %1478, label %1466

1466:                                             ; preds = %1419, %1460
  %1467 = phi i64 [ %1422, %1419 ], [ %1433, %1460 ]
  %1468 = phi i32 [ 1, %1419 ], [ %1464, %1460 ]
  br label %1469

1469:                                             ; preds = %1466, %1469
  %1470 = phi i64 [ %1475, %1469 ], [ %1467, %1466 ]
  %1471 = phi i32 [ %1474, %1469 ], [ %1468, %1466 ]
  %1472 = getelementptr inbounds i32, ptr %11, i64 %1470
  %1473 = load i32, ptr %1472, align 4, !tbaa !6
  %1474 = mul nsw i32 %1473, %1471
  %1475 = add nsw i64 %1470, -1
  %1476 = trunc i64 %1470 to i32
  %1477 = icmp sgt i32 %1476, 0
  br i1 %1477, label %1469, label %1478, !llvm.loop !991

1478:                                             ; preds = %1469, %1460
  %1479 = phi i32 [ %1464, %1460 ], [ %1474, %1469 ]
  %1480 = and i64 %1429, 4294967295
  %1481 = getelementptr inbounds i32, ptr %6, i64 %1480
  %1482 = load i32, ptr %1481, align 4, !tbaa !6
  %1483 = mul nsw i32 %1482, %1479
  %1484 = add nsw i32 %1483, %1423
  %1485 = icmp sgt i64 %1421, 2
  %1486 = add nsw i64 %1422, -1
  %1487 = add i32 %1420, 1
  br i1 %1485, label %1419, label %1488, !llvm.loop !992

1488:                                             ; preds = %1478, %1416
  %1489 = phi i32 [ %1418, %1416 ], [ %1484, %1478 ]
  %1490 = icmp slt i32 %1489, %5
  br i1 %1490, label %1493, label %1491

1491:                                             ; preds = %1488
  %1492 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1503, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5518

1493:                                             ; preds = %1488
  %1494 = sext i32 %1489 to i64
  %1495 = getelementptr inbounds double, ptr %1243, i64 %1494
  %1496 = load double, ptr %1495, align 8, !tbaa !19
  %1497 = fptosi double %1496 to i8
  %1498 = load i8, ptr %1245, align 1, !tbaa !12
  %1499 = icmp slt i8 %1498, %1497
  br i1 %1499, label %1500, label %1501

1500:                                             ; preds = %1493
  store i8 %1497, ptr %1245, align 1, !tbaa !12
  br label %1501

1501:                                             ; preds = %1493, %1500
  %1502 = add nuw nsw i32 %1417, 1
  br i1 %1263, label %1503, label %1553

1503:                                             ; preds = %1501
  %1504 = load i32, ptr %4, align 4, !tbaa !6
  %1505 = load i32, ptr %12, align 4, !tbaa !6
  %1506 = add nsw i32 %1505, -1
  %1507 = icmp slt i32 %1504, %1506
  br i1 %1507, label %1530, label %1508

1508:                                             ; preds = %1503
  %1509 = icmp eq i32 %1504, %1506
  br i1 %1509, label %1510, label %1546

1510:                                             ; preds = %1508
  store i32 0, ptr %4, align 4, !tbaa !6
  %1511 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1511, ptr %6, align 4, !tbaa !6
  br i1 %1268, label %1553, label %1512

1512:                                             ; preds = %1510, %1540
  %1513 = phi i64 [ %1544, %1540 ], [ 1, %1510 ]
  %1514 = getelementptr inbounds i32, ptr %4, i64 %1513
  %1515 = load i32, ptr %1514, align 4, !tbaa !6
  %1516 = getelementptr inbounds i32, ptr %12, i64 %1513
  %1517 = load i32, ptr %1516, align 4, !tbaa !6
  %1518 = add nsw i32 %1517, -1
  %1519 = icmp slt i32 %1515, %1518
  br i1 %1519, label %1520, label %1538

1520:                                             ; preds = %1512
  br i1 %1507, label %1530, label %1521

1521:                                             ; preds = %1520
  %1522 = shl i64 %1513, 32
  %1523 = add i64 %1522, -4294967296
  %1524 = ashr exact i64 %1523, 32
  %1525 = getelementptr inbounds i32, ptr %7, i64 %1524
  %1526 = load i32, ptr %1525, align 4, !tbaa !6
  %1527 = getelementptr inbounds i32, ptr %6, i64 %1513
  %1528 = load i32, ptr %1527, align 4, !tbaa !6
  %1529 = add nsw i32 %1528, %1526
  store i32 %1529, ptr %1527, align 4, !tbaa !6
  br label %1548

1530:                                             ; preds = %1503, %1520
  %1531 = phi i32 [ %1515, %1520 ], [ %1504, %1503 ]
  %1532 = phi ptr [ %1514, %1520 ], [ %4, %1503 ]
  %1533 = phi i64 [ %1513, %1520 ], [ 0, %1503 ]
  %1534 = add nsw i32 %1531, 1
  store i32 %1534, ptr %1532, align 4, !tbaa !6
  %1535 = getelementptr inbounds i32, ptr %7, i64 %1533
  %1536 = load i32, ptr %1535, align 4, !tbaa !6
  %1537 = getelementptr inbounds i32, ptr %6, i64 %1533
  br label %1548

1538:                                             ; preds = %1512
  %1539 = icmp eq i32 %1515, %1518
  br i1 %1539, label %1540, label %1546

1540:                                             ; preds = %1538
  store i32 0, ptr %1514, align 4, !tbaa !6
  %1541 = getelementptr inbounds i32, ptr %8, i64 %1513
  %1542 = load i32, ptr %1541, align 4, !tbaa !6
  %1543 = getelementptr inbounds i32, ptr %6, i64 %1513
  store i32 %1542, ptr %1543, align 4, !tbaa !6
  %1544 = add nuw nsw i64 %1513, 1
  %1545 = icmp eq i64 %1544, %1266
  br i1 %1545, label %1553, label %1512, !llvm.loop !993

1546:                                             ; preds = %1508, %1538
  %1547 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1503, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5518

1548:                                             ; preds = %1521, %1530
  %1549 = phi ptr [ %1537, %1530 ], [ %1514, %1521 ]
  %1550 = phi i32 [ %1536, %1530 ], [ 1, %1521 ]
  %1551 = load i32, ptr %1549, align 4, !tbaa !6
  %1552 = add nsw i32 %1551, %1550
  store i32 %1552, ptr %1549, align 4, !tbaa !6
  br label %1553

1553:                                             ; preds = %1540, %1548, %1510, %1501
  %1554 = icmp eq i32 %1502, %5
  br i1 %1554, label %5513, label %1416, !llvm.loop !994

1555:                                             ; preds = %1254
  %1556 = getelementptr inbounds i32, ptr %3, i64 %19
  %1557 = load i32, ptr %1556, align 4, !tbaa !6
  %1558 = icmp eq i32 %1557, 0
  %1559 = icmp sgt i32 %5, 0
  br i1 %1558, label %1569, label %1560

1560:                                             ; preds = %1555
  br i1 %1559, label %1561, label %5513

1561:                                             ; preds = %1560
  %1562 = icmp sgt i32 %13, 1
  %1563 = icmp sgt i32 %13, 0
  %1564 = add i32 %13, -2
  %1565 = zext i32 %1564 to i64
  %1566 = zext i32 %13 to i64
  %1567 = add nuw i32 %5, 1
  %1568 = icmp eq i32 %13, 1
  br label %1712

1569:                                             ; preds = %1555
  br i1 %1559, label %1570, label %5513

1570:                                             ; preds = %1569
  %1571 = icmp sgt i32 %13, 1
  %1572 = icmp sgt i32 %13, 0
  %1573 = add i32 %13, -2
  %1574 = zext i32 %1573 to i64
  %1575 = zext i32 %13 to i64
  %1576 = add nuw i32 %5, 1
  %1577 = icmp eq i32 %13, 1
  br label %1578

1578:                                             ; preds = %1570, %1710
  %1579 = phi i32 [ 0, %1570 ], [ %1662, %1710 ]
  %1580 = phi double [ 0.000000e+00, %1570 ], [ %1661, %1710 ]
  %1581 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1571, label %1582, label %1651

1582:                                             ; preds = %1578, %1641
  %1583 = phi i32 [ %1650, %1641 ], [ 0, %1578 ]
  %1584 = phi i64 [ %1592, %1641 ], [ %1575, %1578 ]
  %1585 = phi i64 [ %1649, %1641 ], [ %1574, %1578 ]
  %1586 = phi i32 [ %1647, %1641 ], [ %1581, %1578 ]
  %1587 = sub i32 %1573, %1583
  %1588 = tail call i32 @llvm.smin.i32(i32 %1587, i32 0)
  %1589 = sub i32 %1587, %1588
  %1590 = zext i32 %1589 to i64
  %1591 = add nuw nsw i64 %1590, 1
  %1592 = add nsw i64 %1584, -1
  %1593 = icmp ult i32 %1589, 31
  br i1 %1593, label %1629, label %1594

1594:                                             ; preds = %1582
  %1595 = and i64 %1591, 8589934560
  %1596 = sub i64 %1585, %1595
  br label %1597

1597:                                             ; preds = %1597, %1594
  %1598 = phi i64 [ 0, %1594 ], [ %1621, %1597 ]
  %1599 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1594 ], [ %1617, %1597 ]
  %1600 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1594 ], [ %1618, %1597 ]
  %1601 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1594 ], [ %1619, %1597 ]
  %1602 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1594 ], [ %1620, %1597 ]
  %1603 = sub i64 %1585, %1598
  %1604 = getelementptr inbounds i32, ptr %9, i64 %1603
  %1605 = getelementptr inbounds i32, ptr %1604, i64 -7
  %1606 = load <8 x i32>, ptr %1605, align 4, !tbaa !6
  %1607 = shufflevector <8 x i32> %1606, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1608 = getelementptr inbounds i32, ptr %1604, i64 -15
  %1609 = load <8 x i32>, ptr %1608, align 4, !tbaa !6
  %1610 = shufflevector <8 x i32> %1609, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1611 = getelementptr inbounds i32, ptr %1604, i64 -23
  %1612 = load <8 x i32>, ptr %1611, align 4, !tbaa !6
  %1613 = shufflevector <8 x i32> %1612, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1614 = getelementptr inbounds i32, ptr %1604, i64 -31
  %1615 = load <8 x i32>, ptr %1614, align 4, !tbaa !6
  %1616 = shufflevector <8 x i32> %1615, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1617 = mul <8 x i32> %1607, %1599
  %1618 = mul <8 x i32> %1610, %1600
  %1619 = mul <8 x i32> %1613, %1601
  %1620 = mul <8 x i32> %1616, %1602
  %1621 = add nuw i64 %1598, 32
  %1622 = icmp eq i64 %1621, %1595
  br i1 %1622, label %1623, label %1597, !llvm.loop !995

1623:                                             ; preds = %1597
  %1624 = mul <8 x i32> %1618, %1617
  %1625 = mul <8 x i32> %1619, %1624
  %1626 = mul <8 x i32> %1620, %1625
  %1627 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1626)
  %1628 = icmp eq i64 %1591, %1595
  br i1 %1628, label %1641, label %1629

1629:                                             ; preds = %1582, %1623
  %1630 = phi i64 [ %1585, %1582 ], [ %1596, %1623 ]
  %1631 = phi i32 [ 1, %1582 ], [ %1627, %1623 ]
  br label %1632

1632:                                             ; preds = %1629, %1632
  %1633 = phi i64 [ %1638, %1632 ], [ %1630, %1629 ]
  %1634 = phi i32 [ %1637, %1632 ], [ %1631, %1629 ]
  %1635 = getelementptr inbounds i32, ptr %9, i64 %1633
  %1636 = load i32, ptr %1635, align 4, !tbaa !6
  %1637 = mul nsw i32 %1636, %1634
  %1638 = add nsw i64 %1633, -1
  %1639 = trunc i64 %1633 to i32
  %1640 = icmp sgt i32 %1639, 0
  br i1 %1640, label %1632, label %1641, !llvm.loop !996

1641:                                             ; preds = %1632, %1623
  %1642 = phi i32 [ %1627, %1623 ], [ %1637, %1632 ]
  %1643 = and i64 %1592, 4294967295
  %1644 = getelementptr inbounds i32, ptr %6, i64 %1643
  %1645 = load i32, ptr %1644, align 4, !tbaa !6
  %1646 = mul nsw i32 %1645, %1642
  %1647 = add nsw i32 %1646, %1586
  %1648 = icmp sgt i64 %1584, 2
  %1649 = add nsw i64 %1585, -1
  %1650 = add i32 %1583, 1
  br i1 %1648, label %1582, label %1651, !llvm.loop !997

1651:                                             ; preds = %1641, %1578
  %1652 = phi i32 [ %1581, %1578 ], [ %1647, %1641 ]
  %1653 = sext i32 %1652 to i64
  %1654 = getelementptr inbounds double, ptr %1243, i64 %1653
  %1655 = load double, ptr %1654, align 8, !tbaa !19
  %1656 = fptosi double %1655 to i8
  %1657 = load i8, ptr %1245, align 1, !tbaa !12
  %1658 = icmp slt i8 %1657, %1656
  br i1 %1658, label %1659, label %1660

1659:                                             ; preds = %1651
  store i8 %1656, ptr %1245, align 1, !tbaa !12
  br label %1660

1660:                                             ; preds = %1659, %1651
  %1661 = fadd fast double %1580, 1.000000e+00
  %1662 = add nuw nsw i32 %1579, 1
  br i1 %1572, label %1663, label %1710

1663:                                             ; preds = %1660
  %1664 = load i32, ptr %4, align 4, !tbaa !6
  %1665 = load i32, ptr %12, align 4, !tbaa !6
  %1666 = add nsw i32 %1665, -1
  %1667 = icmp slt i32 %1664, %1666
  br i1 %1667, label %1687, label %1668

1668:                                             ; preds = %1663
  %1669 = icmp eq i32 %1664, %1666
  br i1 %1669, label %1670, label %1703

1670:                                             ; preds = %1668
  store i32 0, ptr %4, align 4, !tbaa !6
  %1671 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1671, ptr %6, align 4, !tbaa !6
  br i1 %1577, label %1710, label %1672

1672:                                             ; preds = %1670, %1697
  %1673 = phi i64 [ %1701, %1697 ], [ 1, %1670 ]
  %1674 = getelementptr inbounds i32, ptr %4, i64 %1673
  %1675 = load i32, ptr %1674, align 4, !tbaa !6
  %1676 = getelementptr inbounds i32, ptr %12, i64 %1673
  %1677 = load i32, ptr %1676, align 4, !tbaa !6
  %1678 = add nsw i32 %1677, -1
  %1679 = icmp slt i32 %1675, %1678
  br i1 %1679, label %1680, label %1695

1680:                                             ; preds = %1672
  br i1 %1667, label %1687, label %1681

1681:                                             ; preds = %1680
  %1682 = getelementptr inbounds i32, ptr %7, i64 %1673
  %1683 = load i32, ptr %1682, align 4, !tbaa !6
  %1684 = getelementptr inbounds i32, ptr %6, i64 %1673
  %1685 = load i32, ptr %1684, align 4, !tbaa !6
  %1686 = add nsw i32 %1685, %1683
  store i32 %1686, ptr %1684, align 4, !tbaa !6
  br label %1705

1687:                                             ; preds = %1663, %1680
  %1688 = phi i32 [ %1675, %1680 ], [ %1664, %1663 ]
  %1689 = phi ptr [ %1674, %1680 ], [ %4, %1663 ]
  %1690 = phi i64 [ %1673, %1680 ], [ 0, %1663 ]
  %1691 = add nsw i32 %1688, 1
  store i32 %1691, ptr %1689, align 4, !tbaa !6
  %1692 = getelementptr inbounds i32, ptr %7, i64 %1690
  %1693 = load i32, ptr %1692, align 4, !tbaa !6
  %1694 = getelementptr inbounds i32, ptr %6, i64 %1690
  br label %1705

1695:                                             ; preds = %1672
  %1696 = icmp eq i32 %1675, %1678
  br i1 %1696, label %1697, label %1703

1697:                                             ; preds = %1695
  store i32 0, ptr %1674, align 4, !tbaa !6
  %1698 = getelementptr inbounds i32, ptr %8, i64 %1673
  %1699 = load i32, ptr %1698, align 4, !tbaa !6
  %1700 = getelementptr inbounds i32, ptr %6, i64 %1673
  store i32 %1699, ptr %1700, align 4, !tbaa !6
  %1701 = add nuw nsw i64 %1673, 1
  %1702 = icmp eq i64 %1701, %1575
  br i1 %1702, label %1710, label %1672, !llvm.loop !998

1703:                                             ; preds = %1668, %1695
  %1704 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1503, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5518

1705:                                             ; preds = %1681, %1687
  %1706 = phi ptr [ %1694, %1687 ], [ %1674, %1681 ]
  %1707 = phi i32 [ %1693, %1687 ], [ 1, %1681 ]
  %1708 = load i32, ptr %1706, align 4, !tbaa !6
  %1709 = add nsw i32 %1708, %1707
  store i32 %1709, ptr %1706, align 4, !tbaa !6
  br label %1710

1710:                                             ; preds = %1697, %1705, %1670, %1660
  %1711 = icmp eq i32 %1662, %5
  br i1 %1711, label %5513, label %1578, !llvm.loop !999

1712:                                             ; preds = %1561, %1849
  %1713 = phi i32 [ 0, %1561 ], [ %1798, %1849 ]
  %1714 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1562, label %1715, label %1784

1715:                                             ; preds = %1712, %1774
  %1716 = phi i32 [ %1783, %1774 ], [ 0, %1712 ]
  %1717 = phi i64 [ %1725, %1774 ], [ %1566, %1712 ]
  %1718 = phi i64 [ %1782, %1774 ], [ %1565, %1712 ]
  %1719 = phi i32 [ %1780, %1774 ], [ %1714, %1712 ]
  %1720 = sub i32 %1564, %1716
  %1721 = tail call i32 @llvm.smin.i32(i32 %1720, i32 0)
  %1722 = sub i32 %1720, %1721
  %1723 = zext i32 %1722 to i64
  %1724 = add nuw nsw i64 %1723, 1
  %1725 = add nsw i64 %1717, -1
  %1726 = icmp ult i32 %1722, 31
  br i1 %1726, label %1762, label %1727

1727:                                             ; preds = %1715
  %1728 = and i64 %1724, 8589934560
  %1729 = sub i64 %1718, %1728
  br label %1730

1730:                                             ; preds = %1730, %1727
  %1731 = phi i64 [ 0, %1727 ], [ %1754, %1730 ]
  %1732 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1727 ], [ %1750, %1730 ]
  %1733 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1727 ], [ %1751, %1730 ]
  %1734 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1727 ], [ %1752, %1730 ]
  %1735 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1727 ], [ %1753, %1730 ]
  %1736 = sub i64 %1718, %1731
  %1737 = getelementptr inbounds i32, ptr %11, i64 %1736
  %1738 = getelementptr inbounds i32, ptr %1737, i64 -7
  %1739 = load <8 x i32>, ptr %1738, align 4, !tbaa !6
  %1740 = shufflevector <8 x i32> %1739, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1741 = getelementptr inbounds i32, ptr %1737, i64 -15
  %1742 = load <8 x i32>, ptr %1741, align 4, !tbaa !6
  %1743 = shufflevector <8 x i32> %1742, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1744 = getelementptr inbounds i32, ptr %1737, i64 -23
  %1745 = load <8 x i32>, ptr %1744, align 4, !tbaa !6
  %1746 = shufflevector <8 x i32> %1745, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1747 = getelementptr inbounds i32, ptr %1737, i64 -31
  %1748 = load <8 x i32>, ptr %1747, align 4, !tbaa !6
  %1749 = shufflevector <8 x i32> %1748, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1750 = mul <8 x i32> %1740, %1732
  %1751 = mul <8 x i32> %1743, %1733
  %1752 = mul <8 x i32> %1746, %1734
  %1753 = mul <8 x i32> %1749, %1735
  %1754 = add nuw i64 %1731, 32
  %1755 = icmp eq i64 %1754, %1728
  br i1 %1755, label %1756, label %1730, !llvm.loop !1000

1756:                                             ; preds = %1730
  %1757 = mul <8 x i32> %1751, %1750
  %1758 = mul <8 x i32> %1752, %1757
  %1759 = mul <8 x i32> %1753, %1758
  %1760 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1759)
  %1761 = icmp eq i64 %1724, %1728
  br i1 %1761, label %1774, label %1762

1762:                                             ; preds = %1715, %1756
  %1763 = phi i64 [ %1718, %1715 ], [ %1729, %1756 ]
  %1764 = phi i32 [ 1, %1715 ], [ %1760, %1756 ]
  br label %1765

1765:                                             ; preds = %1762, %1765
  %1766 = phi i64 [ %1771, %1765 ], [ %1763, %1762 ]
  %1767 = phi i32 [ %1770, %1765 ], [ %1764, %1762 ]
  %1768 = getelementptr inbounds i32, ptr %11, i64 %1766
  %1769 = load i32, ptr %1768, align 4, !tbaa !6
  %1770 = mul nsw i32 %1769, %1767
  %1771 = add nsw i64 %1766, -1
  %1772 = trunc i64 %1766 to i32
  %1773 = icmp sgt i32 %1772, 0
  br i1 %1773, label %1765, label %1774, !llvm.loop !1001

1774:                                             ; preds = %1765, %1756
  %1775 = phi i32 [ %1760, %1756 ], [ %1770, %1765 ]
  %1776 = and i64 %1725, 4294967295
  %1777 = getelementptr inbounds i32, ptr %6, i64 %1776
  %1778 = load i32, ptr %1777, align 4, !tbaa !6
  %1779 = mul nsw i32 %1778, %1775
  %1780 = add nsw i32 %1779, %1719
  %1781 = icmp sgt i64 %1717, 2
  %1782 = add nsw i64 %1718, -1
  %1783 = add i32 %1716, 1
  br i1 %1781, label %1715, label %1784, !llvm.loop !1002

1784:                                             ; preds = %1774, %1712
  %1785 = phi i32 [ %1714, %1712 ], [ %1780, %1774 ]
  %1786 = icmp slt i32 %1785, %5
  br i1 %1786, label %1789, label %1787

1787:                                             ; preds = %1784
  %1788 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1503, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5518

1789:                                             ; preds = %1784
  %1790 = sext i32 %1785 to i64
  %1791 = getelementptr inbounds double, ptr %1243, i64 %1790
  %1792 = load double, ptr %1791, align 8, !tbaa !19
  %1793 = fptosi double %1792 to i8
  %1794 = load i8, ptr %1245, align 1, !tbaa !12
  %1795 = icmp slt i8 %1794, %1793
  br i1 %1795, label %1796, label %1797

1796:                                             ; preds = %1789
  store i8 %1793, ptr %1245, align 1, !tbaa !12
  br label %1797

1797:                                             ; preds = %1796, %1789
  %1798 = add nuw nsw i32 %1713, 1
  br i1 %1563, label %1799, label %1849

1799:                                             ; preds = %1797
  %1800 = load i32, ptr %4, align 4, !tbaa !6
  %1801 = load i32, ptr %12, align 4, !tbaa !6
  %1802 = add nsw i32 %1801, -1
  %1803 = icmp slt i32 %1800, %1802
  br i1 %1803, label %1826, label %1804

1804:                                             ; preds = %1799
  %1805 = icmp eq i32 %1800, %1802
  br i1 %1805, label %1806, label %1842

1806:                                             ; preds = %1804
  store i32 0, ptr %4, align 4, !tbaa !6
  %1807 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1807, ptr %6, align 4, !tbaa !6
  br i1 %1568, label %1849, label %1808

1808:                                             ; preds = %1806, %1836
  %1809 = phi i64 [ %1840, %1836 ], [ 1, %1806 ]
  %1810 = getelementptr inbounds i32, ptr %4, i64 %1809
  %1811 = load i32, ptr %1810, align 4, !tbaa !6
  %1812 = getelementptr inbounds i32, ptr %12, i64 %1809
  %1813 = load i32, ptr %1812, align 4, !tbaa !6
  %1814 = add nsw i32 %1813, -1
  %1815 = icmp slt i32 %1811, %1814
  br i1 %1815, label %1816, label %1834

1816:                                             ; preds = %1808
  br i1 %1803, label %1826, label %1817

1817:                                             ; preds = %1816
  %1818 = shl i64 %1809, 32
  %1819 = add i64 %1818, -4294967296
  %1820 = ashr exact i64 %1819, 32
  %1821 = getelementptr inbounds i32, ptr %7, i64 %1820
  %1822 = load i32, ptr %1821, align 4, !tbaa !6
  %1823 = getelementptr inbounds i32, ptr %6, i64 %1809
  %1824 = load i32, ptr %1823, align 4, !tbaa !6
  %1825 = add nsw i32 %1824, %1822
  store i32 %1825, ptr %1823, align 4, !tbaa !6
  br label %1844

1826:                                             ; preds = %1799, %1816
  %1827 = phi i32 [ %1811, %1816 ], [ %1800, %1799 ]
  %1828 = phi ptr [ %1810, %1816 ], [ %4, %1799 ]
  %1829 = phi i64 [ %1809, %1816 ], [ 0, %1799 ]
  %1830 = add nsw i32 %1827, 1
  store i32 %1830, ptr %1828, align 4, !tbaa !6
  %1831 = getelementptr inbounds i32, ptr %7, i64 %1829
  %1832 = load i32, ptr %1831, align 4, !tbaa !6
  %1833 = getelementptr inbounds i32, ptr %6, i64 %1829
  br label %1844

1834:                                             ; preds = %1808
  %1835 = icmp eq i32 %1811, %1814
  br i1 %1835, label %1836, label %1842

1836:                                             ; preds = %1834
  store i32 0, ptr %1810, align 4, !tbaa !6
  %1837 = getelementptr inbounds i32, ptr %8, i64 %1809
  %1838 = load i32, ptr %1837, align 4, !tbaa !6
  %1839 = getelementptr inbounds i32, ptr %6, i64 %1809
  store i32 %1838, ptr %1839, align 4, !tbaa !6
  %1840 = add nuw nsw i64 %1809, 1
  %1841 = icmp eq i64 %1840, %1566
  br i1 %1841, label %1849, label %1808, !llvm.loop !1003

1842:                                             ; preds = %1804, %1834
  %1843 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1503, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5518

1844:                                             ; preds = %1817, %1826
  %1845 = phi ptr [ %1833, %1826 ], [ %1810, %1817 ]
  %1846 = phi i32 [ %1832, %1826 ], [ 1, %1817 ]
  %1847 = load i32, ptr %1845, align 4, !tbaa !6
  %1848 = add nsw i32 %1847, %1846
  store i32 %1848, ptr %1845, align 4, !tbaa !6
  br label %1849

1849:                                             ; preds = %1836, %1844, %1806, %1797
  %1850 = icmp eq i32 %1798, %5
  br i1 %1850, label %5513, label %1712, !llvm.loop !1004

1851:                                             ; preds = %1254
  %1852 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1503, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5513

1853:                                             ; preds = %18
  %1854 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1855 = load ptr, ptr %1854, align 8, !tbaa !10
  %1856 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1857 = load ptr, ptr %1856, align 8, !tbaa !10
  %1858 = load double, ptr %1855, align 8, !tbaa !19
  %1859 = fptosi double %1858 to i16
  store i16 %1859, ptr %1857, align 2, !tbaa !79
  %1860 = icmp eq i32 %13, 0
  br i1 %1860, label %5513, label %1861

1861:                                             ; preds = %1853
  switch i32 %1, label %2462 [
    i32 1, label %1862
    i32 0, label %2164
  ]

1862:                                             ; preds = %1861
  %1863 = getelementptr inbounds i32, ptr %3, i64 %19
  %1864 = load i32, ptr %1863, align 4, !tbaa !6
  %1865 = icmp eq i32 %1864, 0
  %1866 = icmp sgt i32 %5, 0
  br i1 %1865, label %1876, label %1867

1867:                                             ; preds = %1862
  br i1 %1866, label %1868, label %5513

1868:                                             ; preds = %1867
  %1869 = icmp sgt i32 %13, 1
  %1870 = icmp sgt i32 %13, 0
  %1871 = add i32 %13, -2
  %1872 = zext i32 %1871 to i64
  %1873 = zext i32 %13 to i64
  %1874 = add nuw i32 %5, 1
  %1875 = icmp eq i32 %13, 1
  br label %2024

1876:                                             ; preds = %1862
  br i1 %1866, label %1877, label %5513

1877:                                             ; preds = %1876
  %1878 = icmp sgt i32 %13, 1
  %1879 = icmp sgt i32 %13, 0
  %1880 = add i32 %13, -2
  %1881 = zext i32 %1880 to i64
  %1882 = zext i32 %13 to i64
  %1883 = add nuw i32 %5, 1
  %1884 = icmp eq i32 %13, 1
  br label %1885

1885:                                             ; preds = %1877, %2022
  %1886 = phi i16 [ %1859, %1877 ], [ %1972, %2022 ]
  %1887 = phi i32 [ 0, %1877 ], [ %1974, %2022 ]
  %1888 = phi double [ 0.000000e+00, %1877 ], [ %1973, %2022 ]
  %1889 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1878, label %1890, label %1959

1890:                                             ; preds = %1885, %1949
  %1891 = phi i32 [ %1958, %1949 ], [ 0, %1885 ]
  %1892 = phi i64 [ %1900, %1949 ], [ %1882, %1885 ]
  %1893 = phi i64 [ %1957, %1949 ], [ %1881, %1885 ]
  %1894 = phi i32 [ %1955, %1949 ], [ %1889, %1885 ]
  %1895 = sub i32 %1880, %1891
  %1896 = tail call i32 @llvm.smin.i32(i32 %1895, i32 0)
  %1897 = sub i32 %1895, %1896
  %1898 = zext i32 %1897 to i64
  %1899 = add nuw nsw i64 %1898, 1
  %1900 = add nsw i64 %1892, -1
  %1901 = icmp ult i32 %1897, 31
  br i1 %1901, label %1937, label %1902

1902:                                             ; preds = %1890
  %1903 = and i64 %1899, 8589934560
  %1904 = sub i64 %1893, %1903
  br label %1905

1905:                                             ; preds = %1905, %1902
  %1906 = phi i64 [ 0, %1902 ], [ %1929, %1905 ]
  %1907 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1902 ], [ %1925, %1905 ]
  %1908 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1902 ], [ %1926, %1905 ]
  %1909 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1902 ], [ %1927, %1905 ]
  %1910 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1902 ], [ %1928, %1905 ]
  %1911 = sub i64 %1893, %1906
  %1912 = getelementptr inbounds i32, ptr %9, i64 %1911
  %1913 = getelementptr inbounds i32, ptr %1912, i64 -7
  %1914 = load <8 x i32>, ptr %1913, align 4, !tbaa !6
  %1915 = shufflevector <8 x i32> %1914, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1916 = getelementptr inbounds i32, ptr %1912, i64 -15
  %1917 = load <8 x i32>, ptr %1916, align 4, !tbaa !6
  %1918 = shufflevector <8 x i32> %1917, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1919 = getelementptr inbounds i32, ptr %1912, i64 -23
  %1920 = load <8 x i32>, ptr %1919, align 4, !tbaa !6
  %1921 = shufflevector <8 x i32> %1920, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1922 = getelementptr inbounds i32, ptr %1912, i64 -31
  %1923 = load <8 x i32>, ptr %1922, align 4, !tbaa !6
  %1924 = shufflevector <8 x i32> %1923, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1925 = mul <8 x i32> %1915, %1907
  %1926 = mul <8 x i32> %1918, %1908
  %1927 = mul <8 x i32> %1921, %1909
  %1928 = mul <8 x i32> %1924, %1910
  %1929 = add nuw i64 %1906, 32
  %1930 = icmp eq i64 %1929, %1903
  br i1 %1930, label %1931, label %1905, !llvm.loop !1005

1931:                                             ; preds = %1905
  %1932 = mul <8 x i32> %1926, %1925
  %1933 = mul <8 x i32> %1927, %1932
  %1934 = mul <8 x i32> %1928, %1933
  %1935 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1934)
  %1936 = icmp eq i64 %1899, %1903
  br i1 %1936, label %1949, label %1937

1937:                                             ; preds = %1890, %1931
  %1938 = phi i64 [ %1893, %1890 ], [ %1904, %1931 ]
  %1939 = phi i32 [ 1, %1890 ], [ %1935, %1931 ]
  br label %1940

1940:                                             ; preds = %1937, %1940
  %1941 = phi i64 [ %1946, %1940 ], [ %1938, %1937 ]
  %1942 = phi i32 [ %1945, %1940 ], [ %1939, %1937 ]
  %1943 = getelementptr inbounds i32, ptr %9, i64 %1941
  %1944 = load i32, ptr %1943, align 4, !tbaa !6
  %1945 = mul nsw i32 %1944, %1942
  %1946 = add nsw i64 %1941, -1
  %1947 = trunc i64 %1941 to i32
  %1948 = icmp sgt i32 %1947, 0
  br i1 %1948, label %1940, label %1949, !llvm.loop !1006

1949:                                             ; preds = %1940, %1931
  %1950 = phi i32 [ %1935, %1931 ], [ %1945, %1940 ]
  %1951 = and i64 %1900, 4294967295
  %1952 = getelementptr inbounds i32, ptr %6, i64 %1951
  %1953 = load i32, ptr %1952, align 4, !tbaa !6
  %1954 = mul nsw i32 %1953, %1950
  %1955 = add nsw i32 %1954, %1894
  %1956 = icmp sgt i64 %1892, 2
  %1957 = add nsw i64 %1893, -1
  %1958 = add i32 %1891, 1
  br i1 %1956, label %1890, label %1959, !llvm.loop !1007

1959:                                             ; preds = %1949, %1885
  %1960 = phi i32 [ %1889, %1885 ], [ %1955, %1949 ]
  %1961 = sext i32 %1960 to i64
  %1962 = getelementptr inbounds double, ptr %2, i64 %1961
  %1963 = load double, ptr %1962, align 8, !tbaa !19
  %1964 = getelementptr inbounds double, ptr %1855, i64 %1961
  %1965 = load double, ptr %1964, align 8, !tbaa !19
  %1966 = fptosi double %1965 to i16
  %1967 = fcmp fast one double %1963, 0.000000e+00
  %1968 = icmp slt i16 %1886, %1966
  %1969 = select i1 %1967, i1 %1968, i1 false
  br i1 %1969, label %1970, label %1971

1970:                                             ; preds = %1959
  store i16 %1966, ptr %1857, align 2, !tbaa !79
  br label %1971

1971:                                             ; preds = %1970, %1959
  %1972 = phi i16 [ %1966, %1970 ], [ %1886, %1959 ]
  %1973 = fadd fast double %1963, %1888
  %1974 = add nuw nsw i32 %1887, 1
  br i1 %1879, label %1975, label %2022

1975:                                             ; preds = %1971
  %1976 = load i32, ptr %4, align 4, !tbaa !6
  %1977 = load i32, ptr %12, align 4, !tbaa !6
  %1978 = add nsw i32 %1977, -1
  %1979 = icmp slt i32 %1976, %1978
  br i1 %1979, label %1999, label %1980

1980:                                             ; preds = %1975
  %1981 = icmp eq i32 %1976, %1978
  br i1 %1981, label %1982, label %2015

1982:                                             ; preds = %1980
  store i32 0, ptr %4, align 4, !tbaa !6
  %1983 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1983, ptr %6, align 4, !tbaa !6
  br i1 %1884, label %2022, label %1984

1984:                                             ; preds = %1982, %2009
  %1985 = phi i64 [ %2013, %2009 ], [ 1, %1982 ]
  %1986 = getelementptr inbounds i32, ptr %4, i64 %1985
  %1987 = load i32, ptr %1986, align 4, !tbaa !6
  %1988 = getelementptr inbounds i32, ptr %12, i64 %1985
  %1989 = load i32, ptr %1988, align 4, !tbaa !6
  %1990 = add nsw i32 %1989, -1
  %1991 = icmp slt i32 %1987, %1990
  br i1 %1991, label %1992, label %2007

1992:                                             ; preds = %1984
  br i1 %1979, label %1999, label %1993

1993:                                             ; preds = %1992
  %1994 = getelementptr inbounds i32, ptr %7, i64 %1985
  %1995 = load i32, ptr %1994, align 4, !tbaa !6
  %1996 = getelementptr inbounds i32, ptr %6, i64 %1985
  %1997 = load i32, ptr %1996, align 4, !tbaa !6
  %1998 = add nsw i32 %1997, %1995
  store i32 %1998, ptr %1996, align 4, !tbaa !6
  br label %2017

1999:                                             ; preds = %1975, %1992
  %2000 = phi i32 [ %1987, %1992 ], [ %1976, %1975 ]
  %2001 = phi ptr [ %1986, %1992 ], [ %4, %1975 ]
  %2002 = phi i64 [ %1985, %1992 ], [ 0, %1975 ]
  %2003 = add nsw i32 %2000, 1
  store i32 %2003, ptr %2001, align 4, !tbaa !6
  %2004 = getelementptr inbounds i32, ptr %7, i64 %2002
  %2005 = load i32, ptr %2004, align 4, !tbaa !6
  %2006 = getelementptr inbounds i32, ptr %6, i64 %2002
  br label %2017

2007:                                             ; preds = %1984
  %2008 = icmp eq i32 %1987, %1990
  br i1 %2008, label %2009, label %2015

2009:                                             ; preds = %2007
  store i32 0, ptr %1986, align 4, !tbaa !6
  %2010 = getelementptr inbounds i32, ptr %8, i64 %1985
  %2011 = load i32, ptr %2010, align 4, !tbaa !6
  %2012 = getelementptr inbounds i32, ptr %6, i64 %1985
  store i32 %2011, ptr %2012, align 4, !tbaa !6
  %2013 = add nuw nsw i64 %1985, 1
  %2014 = icmp eq i64 %2013, %1882
  br i1 %2014, label %2022, label %1984, !llvm.loop !1008

2015:                                             ; preds = %1980, %2007
  %2016 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1508, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5518

2017:                                             ; preds = %1993, %1999
  %2018 = phi ptr [ %2006, %1999 ], [ %1986, %1993 ]
  %2019 = phi i32 [ %2005, %1999 ], [ 1, %1993 ]
  %2020 = load i32, ptr %2018, align 4, !tbaa !6
  %2021 = add nsw i32 %2020, %2019
  store i32 %2021, ptr %2018, align 4, !tbaa !6
  br label %2022

2022:                                             ; preds = %2009, %2017, %1982, %1971
  %2023 = icmp eq i32 %1974, %5
  br i1 %2023, label %5513, label %1885, !llvm.loop !1009

2024:                                             ; preds = %1868, %2162
  %2025 = phi i16 [ %1859, %1868 ], [ %2110, %2162 ]
  %2026 = phi i32 [ 0, %1868 ], [ %2111, %2162 ]
  %2027 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1869, label %2028, label %2097

2028:                                             ; preds = %2024, %2087
  %2029 = phi i32 [ %2096, %2087 ], [ 0, %2024 ]
  %2030 = phi i64 [ %2038, %2087 ], [ %1873, %2024 ]
  %2031 = phi i64 [ %2095, %2087 ], [ %1872, %2024 ]
  %2032 = phi i32 [ %2093, %2087 ], [ %2027, %2024 ]
  %2033 = sub i32 %1871, %2029
  %2034 = tail call i32 @llvm.smin.i32(i32 %2033, i32 0)
  %2035 = sub i32 %2033, %2034
  %2036 = zext i32 %2035 to i64
  %2037 = add nuw nsw i64 %2036, 1
  %2038 = add nsw i64 %2030, -1
  %2039 = icmp ult i32 %2035, 31
  br i1 %2039, label %2075, label %2040

2040:                                             ; preds = %2028
  %2041 = and i64 %2037, 8589934560
  %2042 = sub i64 %2031, %2041
  br label %2043

2043:                                             ; preds = %2043, %2040
  %2044 = phi i64 [ 0, %2040 ], [ %2067, %2043 ]
  %2045 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2040 ], [ %2063, %2043 ]
  %2046 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2040 ], [ %2064, %2043 ]
  %2047 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2040 ], [ %2065, %2043 ]
  %2048 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2040 ], [ %2066, %2043 ]
  %2049 = sub i64 %2031, %2044
  %2050 = getelementptr inbounds i32, ptr %11, i64 %2049
  %2051 = getelementptr inbounds i32, ptr %2050, i64 -7
  %2052 = load <8 x i32>, ptr %2051, align 4, !tbaa !6
  %2053 = shufflevector <8 x i32> %2052, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2054 = getelementptr inbounds i32, ptr %2050, i64 -15
  %2055 = load <8 x i32>, ptr %2054, align 4, !tbaa !6
  %2056 = shufflevector <8 x i32> %2055, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2057 = getelementptr inbounds i32, ptr %2050, i64 -23
  %2058 = load <8 x i32>, ptr %2057, align 4, !tbaa !6
  %2059 = shufflevector <8 x i32> %2058, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2060 = getelementptr inbounds i32, ptr %2050, i64 -31
  %2061 = load <8 x i32>, ptr %2060, align 4, !tbaa !6
  %2062 = shufflevector <8 x i32> %2061, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2063 = mul <8 x i32> %2053, %2045
  %2064 = mul <8 x i32> %2056, %2046
  %2065 = mul <8 x i32> %2059, %2047
  %2066 = mul <8 x i32> %2062, %2048
  %2067 = add nuw i64 %2044, 32
  %2068 = icmp eq i64 %2067, %2041
  br i1 %2068, label %2069, label %2043, !llvm.loop !1010

2069:                                             ; preds = %2043
  %2070 = mul <8 x i32> %2064, %2063
  %2071 = mul <8 x i32> %2065, %2070
  %2072 = mul <8 x i32> %2066, %2071
  %2073 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2072)
  %2074 = icmp eq i64 %2037, %2041
  br i1 %2074, label %2087, label %2075

2075:                                             ; preds = %2028, %2069
  %2076 = phi i64 [ %2031, %2028 ], [ %2042, %2069 ]
  %2077 = phi i32 [ 1, %2028 ], [ %2073, %2069 ]
  br label %2078

2078:                                             ; preds = %2075, %2078
  %2079 = phi i64 [ %2084, %2078 ], [ %2076, %2075 ]
  %2080 = phi i32 [ %2083, %2078 ], [ %2077, %2075 ]
  %2081 = getelementptr inbounds i32, ptr %11, i64 %2079
  %2082 = load i32, ptr %2081, align 4, !tbaa !6
  %2083 = mul nsw i32 %2082, %2080
  %2084 = add nsw i64 %2079, -1
  %2085 = trunc i64 %2079 to i32
  %2086 = icmp sgt i32 %2085, 0
  br i1 %2086, label %2078, label %2087, !llvm.loop !1011

2087:                                             ; preds = %2078, %2069
  %2088 = phi i32 [ %2073, %2069 ], [ %2083, %2078 ]
  %2089 = and i64 %2038, 4294967295
  %2090 = getelementptr inbounds i32, ptr %6, i64 %2089
  %2091 = load i32, ptr %2090, align 4, !tbaa !6
  %2092 = mul nsw i32 %2091, %2088
  %2093 = add nsw i32 %2092, %2032
  %2094 = icmp sgt i64 %2030, 2
  %2095 = add nsw i64 %2031, -1
  %2096 = add i32 %2029, 1
  br i1 %2094, label %2028, label %2097, !llvm.loop !1012

2097:                                             ; preds = %2087, %2024
  %2098 = phi i32 [ %2027, %2024 ], [ %2093, %2087 ]
  %2099 = icmp slt i32 %2098, %5
  br i1 %2099, label %2102, label %2100

2100:                                             ; preds = %2097
  %2101 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1508, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5518

2102:                                             ; preds = %2097
  %2103 = sext i32 %2098 to i64
  %2104 = getelementptr inbounds double, ptr %1855, i64 %2103
  %2105 = load double, ptr %2104, align 8, !tbaa !19
  %2106 = fptosi double %2105 to i16
  %2107 = icmp slt i16 %2025, %2106
  br i1 %2107, label %2108, label %2109

2108:                                             ; preds = %2102
  store i16 %2106, ptr %1857, align 2, !tbaa !79
  br label %2109

2109:                                             ; preds = %2102, %2108
  %2110 = phi i16 [ %2025, %2102 ], [ %2106, %2108 ]
  %2111 = add nuw nsw i32 %2026, 1
  br i1 %1870, label %2112, label %2162

2112:                                             ; preds = %2109
  %2113 = load i32, ptr %4, align 4, !tbaa !6
  %2114 = load i32, ptr %12, align 4, !tbaa !6
  %2115 = add nsw i32 %2114, -1
  %2116 = icmp slt i32 %2113, %2115
  br i1 %2116, label %2139, label %2117

2117:                                             ; preds = %2112
  %2118 = icmp eq i32 %2113, %2115
  br i1 %2118, label %2119, label %2155

2119:                                             ; preds = %2117
  store i32 0, ptr %4, align 4, !tbaa !6
  %2120 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2120, ptr %6, align 4, !tbaa !6
  br i1 %1875, label %2162, label %2121

2121:                                             ; preds = %2119, %2149
  %2122 = phi i64 [ %2153, %2149 ], [ 1, %2119 ]
  %2123 = getelementptr inbounds i32, ptr %4, i64 %2122
  %2124 = load i32, ptr %2123, align 4, !tbaa !6
  %2125 = getelementptr inbounds i32, ptr %12, i64 %2122
  %2126 = load i32, ptr %2125, align 4, !tbaa !6
  %2127 = add nsw i32 %2126, -1
  %2128 = icmp slt i32 %2124, %2127
  br i1 %2128, label %2129, label %2147

2129:                                             ; preds = %2121
  br i1 %2116, label %2139, label %2130

2130:                                             ; preds = %2129
  %2131 = shl i64 %2122, 32
  %2132 = add i64 %2131, -4294967296
  %2133 = ashr exact i64 %2132, 32
  %2134 = getelementptr inbounds i32, ptr %7, i64 %2133
  %2135 = load i32, ptr %2134, align 4, !tbaa !6
  %2136 = getelementptr inbounds i32, ptr %6, i64 %2122
  %2137 = load i32, ptr %2136, align 4, !tbaa !6
  %2138 = add nsw i32 %2137, %2135
  store i32 %2138, ptr %2136, align 4, !tbaa !6
  br label %2157

2139:                                             ; preds = %2112, %2129
  %2140 = phi i32 [ %2124, %2129 ], [ %2113, %2112 ]
  %2141 = phi ptr [ %2123, %2129 ], [ %4, %2112 ]
  %2142 = phi i64 [ %2122, %2129 ], [ 0, %2112 ]
  %2143 = add nsw i32 %2140, 1
  store i32 %2143, ptr %2141, align 4, !tbaa !6
  %2144 = getelementptr inbounds i32, ptr %7, i64 %2142
  %2145 = load i32, ptr %2144, align 4, !tbaa !6
  %2146 = getelementptr inbounds i32, ptr %6, i64 %2142
  br label %2157

2147:                                             ; preds = %2121
  %2148 = icmp eq i32 %2124, %2127
  br i1 %2148, label %2149, label %2155

2149:                                             ; preds = %2147
  store i32 0, ptr %2123, align 4, !tbaa !6
  %2150 = getelementptr inbounds i32, ptr %8, i64 %2122
  %2151 = load i32, ptr %2150, align 4, !tbaa !6
  %2152 = getelementptr inbounds i32, ptr %6, i64 %2122
  store i32 %2151, ptr %2152, align 4, !tbaa !6
  %2153 = add nuw nsw i64 %2122, 1
  %2154 = icmp eq i64 %2153, %1873
  br i1 %2154, label %2162, label %2121, !llvm.loop !1013

2155:                                             ; preds = %2117, %2147
  %2156 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1508, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5518

2157:                                             ; preds = %2130, %2139
  %2158 = phi ptr [ %2146, %2139 ], [ %2123, %2130 ]
  %2159 = phi i32 [ %2145, %2139 ], [ 1, %2130 ]
  %2160 = load i32, ptr %2158, align 4, !tbaa !6
  %2161 = add nsw i32 %2160, %2159
  store i32 %2161, ptr %2158, align 4, !tbaa !6
  br label %2162

2162:                                             ; preds = %2149, %2157, %2119, %2109
  %2163 = icmp eq i32 %2111, %5
  br i1 %2163, label %5513, label %2024, !llvm.loop !1014

2164:                                             ; preds = %1861
  %2165 = getelementptr inbounds i32, ptr %3, i64 %19
  %2166 = load i32, ptr %2165, align 4, !tbaa !6
  %2167 = icmp eq i32 %2166, 0
  %2168 = icmp sgt i32 %5, 0
  br i1 %2167, label %2178, label %2169

2169:                                             ; preds = %2164
  br i1 %2168, label %2170, label %5513

2170:                                             ; preds = %2169
  %2171 = icmp sgt i32 %13, 1
  %2172 = icmp sgt i32 %13, 0
  %2173 = add i32 %13, -2
  %2174 = zext i32 %2173 to i64
  %2175 = zext i32 %13 to i64
  %2176 = add nuw i32 %5, 1
  %2177 = icmp eq i32 %13, 1
  br label %2322

2178:                                             ; preds = %2164
  br i1 %2168, label %2179, label %5513

2179:                                             ; preds = %2178
  %2180 = icmp sgt i32 %13, 1
  %2181 = icmp sgt i32 %13, 0
  %2182 = add i32 %13, -2
  %2183 = zext i32 %2182 to i64
  %2184 = zext i32 %13 to i64
  %2185 = add nuw i32 %5, 1
  %2186 = icmp eq i32 %13, 1
  br label %2187

2187:                                             ; preds = %2179, %2320
  %2188 = phi i16 [ %1859, %2179 ], [ %2270, %2320 ]
  %2189 = phi i32 [ 0, %2179 ], [ %2272, %2320 ]
  %2190 = phi double [ 0.000000e+00, %2179 ], [ %2271, %2320 ]
  %2191 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2180, label %2192, label %2261

2192:                                             ; preds = %2187, %2251
  %2193 = phi i32 [ %2260, %2251 ], [ 0, %2187 ]
  %2194 = phi i64 [ %2202, %2251 ], [ %2184, %2187 ]
  %2195 = phi i64 [ %2259, %2251 ], [ %2183, %2187 ]
  %2196 = phi i32 [ %2257, %2251 ], [ %2191, %2187 ]
  %2197 = sub i32 %2182, %2193
  %2198 = tail call i32 @llvm.smin.i32(i32 %2197, i32 0)
  %2199 = sub i32 %2197, %2198
  %2200 = zext i32 %2199 to i64
  %2201 = add nuw nsw i64 %2200, 1
  %2202 = add nsw i64 %2194, -1
  %2203 = icmp ult i32 %2199, 31
  br i1 %2203, label %2239, label %2204

2204:                                             ; preds = %2192
  %2205 = and i64 %2201, 8589934560
  %2206 = sub i64 %2195, %2205
  br label %2207

2207:                                             ; preds = %2207, %2204
  %2208 = phi i64 [ 0, %2204 ], [ %2231, %2207 ]
  %2209 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2204 ], [ %2227, %2207 ]
  %2210 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2204 ], [ %2228, %2207 ]
  %2211 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2204 ], [ %2229, %2207 ]
  %2212 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2204 ], [ %2230, %2207 ]
  %2213 = sub i64 %2195, %2208
  %2214 = getelementptr inbounds i32, ptr %9, i64 %2213
  %2215 = getelementptr inbounds i32, ptr %2214, i64 -7
  %2216 = load <8 x i32>, ptr %2215, align 4, !tbaa !6
  %2217 = shufflevector <8 x i32> %2216, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2218 = getelementptr inbounds i32, ptr %2214, i64 -15
  %2219 = load <8 x i32>, ptr %2218, align 4, !tbaa !6
  %2220 = shufflevector <8 x i32> %2219, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2221 = getelementptr inbounds i32, ptr %2214, i64 -23
  %2222 = load <8 x i32>, ptr %2221, align 4, !tbaa !6
  %2223 = shufflevector <8 x i32> %2222, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2224 = getelementptr inbounds i32, ptr %2214, i64 -31
  %2225 = load <8 x i32>, ptr %2224, align 4, !tbaa !6
  %2226 = shufflevector <8 x i32> %2225, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2227 = mul <8 x i32> %2217, %2209
  %2228 = mul <8 x i32> %2220, %2210
  %2229 = mul <8 x i32> %2223, %2211
  %2230 = mul <8 x i32> %2226, %2212
  %2231 = add nuw i64 %2208, 32
  %2232 = icmp eq i64 %2231, %2205
  br i1 %2232, label %2233, label %2207, !llvm.loop !1015

2233:                                             ; preds = %2207
  %2234 = mul <8 x i32> %2228, %2227
  %2235 = mul <8 x i32> %2229, %2234
  %2236 = mul <8 x i32> %2230, %2235
  %2237 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2236)
  %2238 = icmp eq i64 %2201, %2205
  br i1 %2238, label %2251, label %2239

2239:                                             ; preds = %2192, %2233
  %2240 = phi i64 [ %2195, %2192 ], [ %2206, %2233 ]
  %2241 = phi i32 [ 1, %2192 ], [ %2237, %2233 ]
  br label %2242

2242:                                             ; preds = %2239, %2242
  %2243 = phi i64 [ %2248, %2242 ], [ %2240, %2239 ]
  %2244 = phi i32 [ %2247, %2242 ], [ %2241, %2239 ]
  %2245 = getelementptr inbounds i32, ptr %9, i64 %2243
  %2246 = load i32, ptr %2245, align 4, !tbaa !6
  %2247 = mul nsw i32 %2246, %2244
  %2248 = add nsw i64 %2243, -1
  %2249 = trunc i64 %2243 to i32
  %2250 = icmp sgt i32 %2249, 0
  br i1 %2250, label %2242, label %2251, !llvm.loop !1016

2251:                                             ; preds = %2242, %2233
  %2252 = phi i32 [ %2237, %2233 ], [ %2247, %2242 ]
  %2253 = and i64 %2202, 4294967295
  %2254 = getelementptr inbounds i32, ptr %6, i64 %2253
  %2255 = load i32, ptr %2254, align 4, !tbaa !6
  %2256 = mul nsw i32 %2255, %2252
  %2257 = add nsw i32 %2256, %2196
  %2258 = icmp sgt i64 %2194, 2
  %2259 = add nsw i64 %2195, -1
  %2260 = add i32 %2193, 1
  br i1 %2258, label %2192, label %2261, !llvm.loop !1017

2261:                                             ; preds = %2251, %2187
  %2262 = phi i32 [ %2191, %2187 ], [ %2257, %2251 ]
  %2263 = sext i32 %2262 to i64
  %2264 = getelementptr inbounds double, ptr %1855, i64 %2263
  %2265 = load double, ptr %2264, align 8, !tbaa !19
  %2266 = fptosi double %2265 to i16
  %2267 = icmp slt i16 %2188, %2266
  br i1 %2267, label %2268, label %2269

2268:                                             ; preds = %2261
  store i16 %2266, ptr %1857, align 2, !tbaa !79
  br label %2269

2269:                                             ; preds = %2268, %2261
  %2270 = phi i16 [ %2266, %2268 ], [ %2188, %2261 ]
  %2271 = fadd fast double %2190, 1.000000e+00
  %2272 = add nuw nsw i32 %2189, 1
  br i1 %2181, label %2273, label %2320

2273:                                             ; preds = %2269
  %2274 = load i32, ptr %4, align 4, !tbaa !6
  %2275 = load i32, ptr %12, align 4, !tbaa !6
  %2276 = add nsw i32 %2275, -1
  %2277 = icmp slt i32 %2274, %2276
  br i1 %2277, label %2297, label %2278

2278:                                             ; preds = %2273
  %2279 = icmp eq i32 %2274, %2276
  br i1 %2279, label %2280, label %2313

2280:                                             ; preds = %2278
  store i32 0, ptr %4, align 4, !tbaa !6
  %2281 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2281, ptr %6, align 4, !tbaa !6
  br i1 %2186, label %2320, label %2282

2282:                                             ; preds = %2280, %2307
  %2283 = phi i64 [ %2311, %2307 ], [ 1, %2280 ]
  %2284 = getelementptr inbounds i32, ptr %4, i64 %2283
  %2285 = load i32, ptr %2284, align 4, !tbaa !6
  %2286 = getelementptr inbounds i32, ptr %12, i64 %2283
  %2287 = load i32, ptr %2286, align 4, !tbaa !6
  %2288 = add nsw i32 %2287, -1
  %2289 = icmp slt i32 %2285, %2288
  br i1 %2289, label %2290, label %2305

2290:                                             ; preds = %2282
  br i1 %2277, label %2297, label %2291

2291:                                             ; preds = %2290
  %2292 = getelementptr inbounds i32, ptr %7, i64 %2283
  %2293 = load i32, ptr %2292, align 4, !tbaa !6
  %2294 = getelementptr inbounds i32, ptr %6, i64 %2283
  %2295 = load i32, ptr %2294, align 4, !tbaa !6
  %2296 = add nsw i32 %2295, %2293
  store i32 %2296, ptr %2294, align 4, !tbaa !6
  br label %2315

2297:                                             ; preds = %2273, %2290
  %2298 = phi i32 [ %2285, %2290 ], [ %2274, %2273 ]
  %2299 = phi ptr [ %2284, %2290 ], [ %4, %2273 ]
  %2300 = phi i64 [ %2283, %2290 ], [ 0, %2273 ]
  %2301 = add nsw i32 %2298, 1
  store i32 %2301, ptr %2299, align 4, !tbaa !6
  %2302 = getelementptr inbounds i32, ptr %7, i64 %2300
  %2303 = load i32, ptr %2302, align 4, !tbaa !6
  %2304 = getelementptr inbounds i32, ptr %6, i64 %2300
  br label %2315

2305:                                             ; preds = %2282
  %2306 = icmp eq i32 %2285, %2288
  br i1 %2306, label %2307, label %2313

2307:                                             ; preds = %2305
  store i32 0, ptr %2284, align 4, !tbaa !6
  %2308 = getelementptr inbounds i32, ptr %8, i64 %2283
  %2309 = load i32, ptr %2308, align 4, !tbaa !6
  %2310 = getelementptr inbounds i32, ptr %6, i64 %2283
  store i32 %2309, ptr %2310, align 4, !tbaa !6
  %2311 = add nuw nsw i64 %2283, 1
  %2312 = icmp eq i64 %2311, %2184
  br i1 %2312, label %2320, label %2282, !llvm.loop !1018

2313:                                             ; preds = %2278, %2305
  %2314 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1508, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5518

2315:                                             ; preds = %2291, %2297
  %2316 = phi ptr [ %2304, %2297 ], [ %2284, %2291 ]
  %2317 = phi i32 [ %2303, %2297 ], [ 1, %2291 ]
  %2318 = load i32, ptr %2316, align 4, !tbaa !6
  %2319 = add nsw i32 %2318, %2317
  store i32 %2319, ptr %2316, align 4, !tbaa !6
  br label %2320

2320:                                             ; preds = %2307, %2315, %2280, %2269
  %2321 = icmp eq i32 %2272, %5
  br i1 %2321, label %5513, label %2187, !llvm.loop !1019

2322:                                             ; preds = %2170, %2460
  %2323 = phi i16 [ %1859, %2170 ], [ %2408, %2460 ]
  %2324 = phi i32 [ 0, %2170 ], [ %2409, %2460 ]
  %2325 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2171, label %2326, label %2395

2326:                                             ; preds = %2322, %2385
  %2327 = phi i32 [ %2394, %2385 ], [ 0, %2322 ]
  %2328 = phi i64 [ %2336, %2385 ], [ %2175, %2322 ]
  %2329 = phi i64 [ %2393, %2385 ], [ %2174, %2322 ]
  %2330 = phi i32 [ %2391, %2385 ], [ %2325, %2322 ]
  %2331 = sub i32 %2173, %2327
  %2332 = tail call i32 @llvm.smin.i32(i32 %2331, i32 0)
  %2333 = sub i32 %2331, %2332
  %2334 = zext i32 %2333 to i64
  %2335 = add nuw nsw i64 %2334, 1
  %2336 = add nsw i64 %2328, -1
  %2337 = icmp ult i32 %2333, 31
  br i1 %2337, label %2373, label %2338

2338:                                             ; preds = %2326
  %2339 = and i64 %2335, 8589934560
  %2340 = sub i64 %2329, %2339
  br label %2341

2341:                                             ; preds = %2341, %2338
  %2342 = phi i64 [ 0, %2338 ], [ %2365, %2341 ]
  %2343 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2338 ], [ %2361, %2341 ]
  %2344 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2338 ], [ %2362, %2341 ]
  %2345 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2338 ], [ %2363, %2341 ]
  %2346 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2338 ], [ %2364, %2341 ]
  %2347 = sub i64 %2329, %2342
  %2348 = getelementptr inbounds i32, ptr %11, i64 %2347
  %2349 = getelementptr inbounds i32, ptr %2348, i64 -7
  %2350 = load <8 x i32>, ptr %2349, align 4, !tbaa !6
  %2351 = shufflevector <8 x i32> %2350, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2352 = getelementptr inbounds i32, ptr %2348, i64 -15
  %2353 = load <8 x i32>, ptr %2352, align 4, !tbaa !6
  %2354 = shufflevector <8 x i32> %2353, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2355 = getelementptr inbounds i32, ptr %2348, i64 -23
  %2356 = load <8 x i32>, ptr %2355, align 4, !tbaa !6
  %2357 = shufflevector <8 x i32> %2356, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2358 = getelementptr inbounds i32, ptr %2348, i64 -31
  %2359 = load <8 x i32>, ptr %2358, align 4, !tbaa !6
  %2360 = shufflevector <8 x i32> %2359, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2361 = mul <8 x i32> %2351, %2343
  %2362 = mul <8 x i32> %2354, %2344
  %2363 = mul <8 x i32> %2357, %2345
  %2364 = mul <8 x i32> %2360, %2346
  %2365 = add nuw i64 %2342, 32
  %2366 = icmp eq i64 %2365, %2339
  br i1 %2366, label %2367, label %2341, !llvm.loop !1020

2367:                                             ; preds = %2341
  %2368 = mul <8 x i32> %2362, %2361
  %2369 = mul <8 x i32> %2363, %2368
  %2370 = mul <8 x i32> %2364, %2369
  %2371 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2370)
  %2372 = icmp eq i64 %2335, %2339
  br i1 %2372, label %2385, label %2373

2373:                                             ; preds = %2326, %2367
  %2374 = phi i64 [ %2329, %2326 ], [ %2340, %2367 ]
  %2375 = phi i32 [ 1, %2326 ], [ %2371, %2367 ]
  br label %2376

2376:                                             ; preds = %2373, %2376
  %2377 = phi i64 [ %2382, %2376 ], [ %2374, %2373 ]
  %2378 = phi i32 [ %2381, %2376 ], [ %2375, %2373 ]
  %2379 = getelementptr inbounds i32, ptr %11, i64 %2377
  %2380 = load i32, ptr %2379, align 4, !tbaa !6
  %2381 = mul nsw i32 %2380, %2378
  %2382 = add nsw i64 %2377, -1
  %2383 = trunc i64 %2377 to i32
  %2384 = icmp sgt i32 %2383, 0
  br i1 %2384, label %2376, label %2385, !llvm.loop !1021

2385:                                             ; preds = %2376, %2367
  %2386 = phi i32 [ %2371, %2367 ], [ %2381, %2376 ]
  %2387 = and i64 %2336, 4294967295
  %2388 = getelementptr inbounds i32, ptr %6, i64 %2387
  %2389 = load i32, ptr %2388, align 4, !tbaa !6
  %2390 = mul nsw i32 %2389, %2386
  %2391 = add nsw i32 %2390, %2330
  %2392 = icmp sgt i64 %2328, 2
  %2393 = add nsw i64 %2329, -1
  %2394 = add i32 %2327, 1
  br i1 %2392, label %2326, label %2395, !llvm.loop !1022

2395:                                             ; preds = %2385, %2322
  %2396 = phi i32 [ %2325, %2322 ], [ %2391, %2385 ]
  %2397 = icmp slt i32 %2396, %5
  br i1 %2397, label %2400, label %2398

2398:                                             ; preds = %2395
  %2399 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1508, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5518

2400:                                             ; preds = %2395
  %2401 = sext i32 %2396 to i64
  %2402 = getelementptr inbounds double, ptr %1855, i64 %2401
  %2403 = load double, ptr %2402, align 8, !tbaa !19
  %2404 = fptosi double %2403 to i16
  %2405 = icmp slt i16 %2323, %2404
  br i1 %2405, label %2406, label %2407

2406:                                             ; preds = %2400
  store i16 %2404, ptr %1857, align 2, !tbaa !79
  br label %2407

2407:                                             ; preds = %2406, %2400
  %2408 = phi i16 [ %2404, %2406 ], [ %2323, %2400 ]
  %2409 = add nuw nsw i32 %2324, 1
  br i1 %2172, label %2410, label %2460

2410:                                             ; preds = %2407
  %2411 = load i32, ptr %4, align 4, !tbaa !6
  %2412 = load i32, ptr %12, align 4, !tbaa !6
  %2413 = add nsw i32 %2412, -1
  %2414 = icmp slt i32 %2411, %2413
  br i1 %2414, label %2437, label %2415

2415:                                             ; preds = %2410
  %2416 = icmp eq i32 %2411, %2413
  br i1 %2416, label %2417, label %2453

2417:                                             ; preds = %2415
  store i32 0, ptr %4, align 4, !tbaa !6
  %2418 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2418, ptr %6, align 4, !tbaa !6
  br i1 %2177, label %2460, label %2419

2419:                                             ; preds = %2417, %2447
  %2420 = phi i64 [ %2451, %2447 ], [ 1, %2417 ]
  %2421 = getelementptr inbounds i32, ptr %4, i64 %2420
  %2422 = load i32, ptr %2421, align 4, !tbaa !6
  %2423 = getelementptr inbounds i32, ptr %12, i64 %2420
  %2424 = load i32, ptr %2423, align 4, !tbaa !6
  %2425 = add nsw i32 %2424, -1
  %2426 = icmp slt i32 %2422, %2425
  br i1 %2426, label %2427, label %2445

2427:                                             ; preds = %2419
  br i1 %2414, label %2437, label %2428

2428:                                             ; preds = %2427
  %2429 = shl i64 %2420, 32
  %2430 = add i64 %2429, -4294967296
  %2431 = ashr exact i64 %2430, 32
  %2432 = getelementptr inbounds i32, ptr %7, i64 %2431
  %2433 = load i32, ptr %2432, align 4, !tbaa !6
  %2434 = getelementptr inbounds i32, ptr %6, i64 %2420
  %2435 = load i32, ptr %2434, align 4, !tbaa !6
  %2436 = add nsw i32 %2435, %2433
  store i32 %2436, ptr %2434, align 4, !tbaa !6
  br label %2455

2437:                                             ; preds = %2410, %2427
  %2438 = phi i32 [ %2422, %2427 ], [ %2411, %2410 ]
  %2439 = phi ptr [ %2421, %2427 ], [ %4, %2410 ]
  %2440 = phi i64 [ %2420, %2427 ], [ 0, %2410 ]
  %2441 = add nsw i32 %2438, 1
  store i32 %2441, ptr %2439, align 4, !tbaa !6
  %2442 = getelementptr inbounds i32, ptr %7, i64 %2440
  %2443 = load i32, ptr %2442, align 4, !tbaa !6
  %2444 = getelementptr inbounds i32, ptr %6, i64 %2440
  br label %2455

2445:                                             ; preds = %2419
  %2446 = icmp eq i32 %2422, %2425
  br i1 %2446, label %2447, label %2453

2447:                                             ; preds = %2445
  store i32 0, ptr %2421, align 4, !tbaa !6
  %2448 = getelementptr inbounds i32, ptr %8, i64 %2420
  %2449 = load i32, ptr %2448, align 4, !tbaa !6
  %2450 = getelementptr inbounds i32, ptr %6, i64 %2420
  store i32 %2449, ptr %2450, align 4, !tbaa !6
  %2451 = add nuw nsw i64 %2420, 1
  %2452 = icmp eq i64 %2451, %2175
  br i1 %2452, label %2460, label %2419, !llvm.loop !1023

2453:                                             ; preds = %2415, %2445
  %2454 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1508, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5518

2455:                                             ; preds = %2428, %2437
  %2456 = phi ptr [ %2444, %2437 ], [ %2421, %2428 ]
  %2457 = phi i32 [ %2443, %2437 ], [ 1, %2428 ]
  %2458 = load i32, ptr %2456, align 4, !tbaa !6
  %2459 = add nsw i32 %2458, %2457
  store i32 %2459, ptr %2456, align 4, !tbaa !6
  br label %2460

2460:                                             ; preds = %2447, %2455, %2417, %2407
  %2461 = icmp eq i32 %2409, %5
  br i1 %2461, label %5513, label %2322, !llvm.loop !1024

2462:                                             ; preds = %1861
  %2463 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1508, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5513

2464:                                             ; preds = %18
  %2465 = getelementptr inbounds ptr, ptr %14, i64 %19
  %2466 = load ptr, ptr %2465, align 8, !tbaa !10
  %2467 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2468 = load ptr, ptr %2467, align 8, !tbaa !10
  %2469 = load double, ptr %2466, align 8, !tbaa !19
  %2470 = fptosi double %2469 to i32
  store i32 %2470, ptr %2468, align 4, !tbaa !6
  %2471 = icmp eq i32 %13, 0
  br i1 %2471, label %5513, label %2472

2472:                                             ; preds = %2464
  switch i32 %1, label %3069 [
    i32 1, label %2473
    i32 0, label %2773
  ]

2473:                                             ; preds = %2472
  %2474 = getelementptr inbounds i32, ptr %3, i64 %19
  %2475 = load i32, ptr %2474, align 4, !tbaa !6
  %2476 = icmp eq i32 %2475, 0
  %2477 = icmp sgt i32 %5, 0
  br i1 %2476, label %2487, label %2478

2478:                                             ; preds = %2473
  br i1 %2477, label %2479, label %5513

2479:                                             ; preds = %2478
  %2480 = icmp sgt i32 %13, 1
  %2481 = icmp sgt i32 %13, 0
  %2482 = add i32 %13, -2
  %2483 = zext i32 %2482 to i64
  %2484 = zext i32 %13 to i64
  %2485 = add nuw i32 %5, 1
  %2486 = icmp eq i32 %13, 1
  br label %2634

2487:                                             ; preds = %2473
  br i1 %2477, label %2488, label %5513

2488:                                             ; preds = %2487
  %2489 = icmp sgt i32 %13, 1
  %2490 = icmp sgt i32 %13, 0
  %2491 = add i32 %13, -2
  %2492 = zext i32 %2491 to i64
  %2493 = zext i32 %13 to i64
  %2494 = add nuw i32 %5, 1
  %2495 = icmp eq i32 %13, 1
  br label %2496

2496:                                             ; preds = %2488, %2632
  %2497 = phi i32 [ 0, %2488 ], [ %2584, %2632 ]
  %2498 = phi double [ 0.000000e+00, %2488 ], [ %2583, %2632 ]
  %2499 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2489, label %2500, label %2569

2500:                                             ; preds = %2496, %2559
  %2501 = phi i32 [ %2568, %2559 ], [ 0, %2496 ]
  %2502 = phi i64 [ %2510, %2559 ], [ %2493, %2496 ]
  %2503 = phi i64 [ %2567, %2559 ], [ %2492, %2496 ]
  %2504 = phi i32 [ %2565, %2559 ], [ %2499, %2496 ]
  %2505 = sub i32 %2491, %2501
  %2506 = tail call i32 @llvm.smin.i32(i32 %2505, i32 0)
  %2507 = sub i32 %2505, %2506
  %2508 = zext i32 %2507 to i64
  %2509 = add nuw nsw i64 %2508, 1
  %2510 = add nsw i64 %2502, -1
  %2511 = icmp ult i32 %2507, 31
  br i1 %2511, label %2547, label %2512

2512:                                             ; preds = %2500
  %2513 = and i64 %2509, 8589934560
  %2514 = sub i64 %2503, %2513
  br label %2515

2515:                                             ; preds = %2515, %2512
  %2516 = phi i64 [ 0, %2512 ], [ %2539, %2515 ]
  %2517 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2512 ], [ %2535, %2515 ]
  %2518 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2512 ], [ %2536, %2515 ]
  %2519 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2512 ], [ %2537, %2515 ]
  %2520 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2512 ], [ %2538, %2515 ]
  %2521 = sub i64 %2503, %2516
  %2522 = getelementptr inbounds i32, ptr %9, i64 %2521
  %2523 = getelementptr inbounds i32, ptr %2522, i64 -7
  %2524 = load <8 x i32>, ptr %2523, align 4, !tbaa !6
  %2525 = shufflevector <8 x i32> %2524, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2526 = getelementptr inbounds i32, ptr %2522, i64 -15
  %2527 = load <8 x i32>, ptr %2526, align 4, !tbaa !6
  %2528 = shufflevector <8 x i32> %2527, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2529 = getelementptr inbounds i32, ptr %2522, i64 -23
  %2530 = load <8 x i32>, ptr %2529, align 4, !tbaa !6
  %2531 = shufflevector <8 x i32> %2530, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2532 = getelementptr inbounds i32, ptr %2522, i64 -31
  %2533 = load <8 x i32>, ptr %2532, align 4, !tbaa !6
  %2534 = shufflevector <8 x i32> %2533, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2535 = mul <8 x i32> %2525, %2517
  %2536 = mul <8 x i32> %2528, %2518
  %2537 = mul <8 x i32> %2531, %2519
  %2538 = mul <8 x i32> %2534, %2520
  %2539 = add nuw i64 %2516, 32
  %2540 = icmp eq i64 %2539, %2513
  br i1 %2540, label %2541, label %2515, !llvm.loop !1025

2541:                                             ; preds = %2515
  %2542 = mul <8 x i32> %2536, %2535
  %2543 = mul <8 x i32> %2537, %2542
  %2544 = mul <8 x i32> %2538, %2543
  %2545 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2544)
  %2546 = icmp eq i64 %2509, %2513
  br i1 %2546, label %2559, label %2547

2547:                                             ; preds = %2500, %2541
  %2548 = phi i64 [ %2503, %2500 ], [ %2514, %2541 ]
  %2549 = phi i32 [ 1, %2500 ], [ %2545, %2541 ]
  br label %2550

2550:                                             ; preds = %2547, %2550
  %2551 = phi i64 [ %2556, %2550 ], [ %2548, %2547 ]
  %2552 = phi i32 [ %2555, %2550 ], [ %2549, %2547 ]
  %2553 = getelementptr inbounds i32, ptr %9, i64 %2551
  %2554 = load i32, ptr %2553, align 4, !tbaa !6
  %2555 = mul nsw i32 %2554, %2552
  %2556 = add nsw i64 %2551, -1
  %2557 = trunc i64 %2551 to i32
  %2558 = icmp sgt i32 %2557, 0
  br i1 %2558, label %2550, label %2559, !llvm.loop !1026

2559:                                             ; preds = %2550, %2541
  %2560 = phi i32 [ %2545, %2541 ], [ %2555, %2550 ]
  %2561 = and i64 %2510, 4294967295
  %2562 = getelementptr inbounds i32, ptr %6, i64 %2561
  %2563 = load i32, ptr %2562, align 4, !tbaa !6
  %2564 = mul nsw i32 %2563, %2560
  %2565 = add nsw i32 %2564, %2504
  %2566 = icmp sgt i64 %2502, 2
  %2567 = add nsw i64 %2503, -1
  %2568 = add i32 %2501, 1
  br i1 %2566, label %2500, label %2569, !llvm.loop !1027

2569:                                             ; preds = %2559, %2496
  %2570 = phi i32 [ %2499, %2496 ], [ %2565, %2559 ]
  %2571 = sext i32 %2570 to i64
  %2572 = getelementptr inbounds double, ptr %2, i64 %2571
  %2573 = load double, ptr %2572, align 8, !tbaa !19
  %2574 = getelementptr inbounds double, ptr %2466, i64 %2571
  %2575 = load double, ptr %2574, align 8, !tbaa !19
  %2576 = fptosi double %2575 to i32
  %2577 = fcmp fast ueq double %2573, 0.000000e+00
  br i1 %2577, label %2582, label %2578

2578:                                             ; preds = %2569
  %2579 = load i32, ptr %2468, align 4, !tbaa !6
  %2580 = icmp slt i32 %2579, %2576
  br i1 %2580, label %2581, label %2582

2581:                                             ; preds = %2578
  store i32 %2576, ptr %2468, align 4, !tbaa !6
  br label %2582

2582:                                             ; preds = %2578, %2581, %2569
  %2583 = fadd fast double %2573, %2498
  %2584 = add nuw nsw i32 %2497, 1
  br i1 %2490, label %2585, label %2632

2585:                                             ; preds = %2582
  %2586 = load i32, ptr %4, align 4, !tbaa !6
  %2587 = load i32, ptr %12, align 4, !tbaa !6
  %2588 = add nsw i32 %2587, -1
  %2589 = icmp slt i32 %2586, %2588
  br i1 %2589, label %2609, label %2590

2590:                                             ; preds = %2585
  %2591 = icmp eq i32 %2586, %2588
  br i1 %2591, label %2592, label %2625

2592:                                             ; preds = %2590
  store i32 0, ptr %4, align 4, !tbaa !6
  %2593 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2593, ptr %6, align 4, !tbaa !6
  br i1 %2495, label %2632, label %2594

2594:                                             ; preds = %2592, %2619
  %2595 = phi i64 [ %2623, %2619 ], [ 1, %2592 ]
  %2596 = getelementptr inbounds i32, ptr %4, i64 %2595
  %2597 = load i32, ptr %2596, align 4, !tbaa !6
  %2598 = getelementptr inbounds i32, ptr %12, i64 %2595
  %2599 = load i32, ptr %2598, align 4, !tbaa !6
  %2600 = add nsw i32 %2599, -1
  %2601 = icmp slt i32 %2597, %2600
  br i1 %2601, label %2602, label %2617

2602:                                             ; preds = %2594
  br i1 %2589, label %2609, label %2603

2603:                                             ; preds = %2602
  %2604 = getelementptr inbounds i32, ptr %7, i64 %2595
  %2605 = load i32, ptr %2604, align 4, !tbaa !6
  %2606 = getelementptr inbounds i32, ptr %6, i64 %2595
  %2607 = load i32, ptr %2606, align 4, !tbaa !6
  %2608 = add nsw i32 %2607, %2605
  store i32 %2608, ptr %2606, align 4, !tbaa !6
  br label %2627

2609:                                             ; preds = %2585, %2602
  %2610 = phi i32 [ %2597, %2602 ], [ %2586, %2585 ]
  %2611 = phi ptr [ %2596, %2602 ], [ %4, %2585 ]
  %2612 = phi i64 [ %2595, %2602 ], [ 0, %2585 ]
  %2613 = add nsw i32 %2610, 1
  store i32 %2613, ptr %2611, align 4, !tbaa !6
  %2614 = getelementptr inbounds i32, ptr %7, i64 %2612
  %2615 = load i32, ptr %2614, align 4, !tbaa !6
  %2616 = getelementptr inbounds i32, ptr %6, i64 %2612
  br label %2627

2617:                                             ; preds = %2594
  %2618 = icmp eq i32 %2597, %2600
  br i1 %2618, label %2619, label %2625

2619:                                             ; preds = %2617
  store i32 0, ptr %2596, align 4, !tbaa !6
  %2620 = getelementptr inbounds i32, ptr %8, i64 %2595
  %2621 = load i32, ptr %2620, align 4, !tbaa !6
  %2622 = getelementptr inbounds i32, ptr %6, i64 %2595
  store i32 %2621, ptr %2622, align 4, !tbaa !6
  %2623 = add nuw nsw i64 %2595, 1
  %2624 = icmp eq i64 %2623, %2493
  br i1 %2624, label %2632, label %2594, !llvm.loop !1028

2625:                                             ; preds = %2590, %2617
  %2626 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1513, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5518

2627:                                             ; preds = %2603, %2609
  %2628 = phi ptr [ %2616, %2609 ], [ %2596, %2603 ]
  %2629 = phi i32 [ %2615, %2609 ], [ 1, %2603 ]
  %2630 = load i32, ptr %2628, align 4, !tbaa !6
  %2631 = add nsw i32 %2630, %2629
  store i32 %2631, ptr %2628, align 4, !tbaa !6
  br label %2632

2632:                                             ; preds = %2619, %2627, %2592, %2582
  %2633 = icmp eq i32 %2584, %5
  br i1 %2633, label %5513, label %2496, !llvm.loop !1029

2634:                                             ; preds = %2479, %2771
  %2635 = phi i32 [ 0, %2479 ], [ %2720, %2771 ]
  %2636 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2480, label %2637, label %2706

2637:                                             ; preds = %2634, %2696
  %2638 = phi i32 [ %2705, %2696 ], [ 0, %2634 ]
  %2639 = phi i64 [ %2647, %2696 ], [ %2484, %2634 ]
  %2640 = phi i64 [ %2704, %2696 ], [ %2483, %2634 ]
  %2641 = phi i32 [ %2702, %2696 ], [ %2636, %2634 ]
  %2642 = sub i32 %2482, %2638
  %2643 = tail call i32 @llvm.smin.i32(i32 %2642, i32 0)
  %2644 = sub i32 %2642, %2643
  %2645 = zext i32 %2644 to i64
  %2646 = add nuw nsw i64 %2645, 1
  %2647 = add nsw i64 %2639, -1
  %2648 = icmp ult i32 %2644, 31
  br i1 %2648, label %2684, label %2649

2649:                                             ; preds = %2637
  %2650 = and i64 %2646, 8589934560
  %2651 = sub i64 %2640, %2650
  br label %2652

2652:                                             ; preds = %2652, %2649
  %2653 = phi i64 [ 0, %2649 ], [ %2676, %2652 ]
  %2654 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2649 ], [ %2672, %2652 ]
  %2655 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2649 ], [ %2673, %2652 ]
  %2656 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2649 ], [ %2674, %2652 ]
  %2657 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2649 ], [ %2675, %2652 ]
  %2658 = sub i64 %2640, %2653
  %2659 = getelementptr inbounds i32, ptr %11, i64 %2658
  %2660 = getelementptr inbounds i32, ptr %2659, i64 -7
  %2661 = load <8 x i32>, ptr %2660, align 4, !tbaa !6
  %2662 = shufflevector <8 x i32> %2661, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2663 = getelementptr inbounds i32, ptr %2659, i64 -15
  %2664 = load <8 x i32>, ptr %2663, align 4, !tbaa !6
  %2665 = shufflevector <8 x i32> %2664, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2666 = getelementptr inbounds i32, ptr %2659, i64 -23
  %2667 = load <8 x i32>, ptr %2666, align 4, !tbaa !6
  %2668 = shufflevector <8 x i32> %2667, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2669 = getelementptr inbounds i32, ptr %2659, i64 -31
  %2670 = load <8 x i32>, ptr %2669, align 4, !tbaa !6
  %2671 = shufflevector <8 x i32> %2670, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2672 = mul <8 x i32> %2662, %2654
  %2673 = mul <8 x i32> %2665, %2655
  %2674 = mul <8 x i32> %2668, %2656
  %2675 = mul <8 x i32> %2671, %2657
  %2676 = add nuw i64 %2653, 32
  %2677 = icmp eq i64 %2676, %2650
  br i1 %2677, label %2678, label %2652, !llvm.loop !1030

2678:                                             ; preds = %2652
  %2679 = mul <8 x i32> %2673, %2672
  %2680 = mul <8 x i32> %2674, %2679
  %2681 = mul <8 x i32> %2675, %2680
  %2682 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2681)
  %2683 = icmp eq i64 %2646, %2650
  br i1 %2683, label %2696, label %2684

2684:                                             ; preds = %2637, %2678
  %2685 = phi i64 [ %2640, %2637 ], [ %2651, %2678 ]
  %2686 = phi i32 [ 1, %2637 ], [ %2682, %2678 ]
  br label %2687

2687:                                             ; preds = %2684, %2687
  %2688 = phi i64 [ %2693, %2687 ], [ %2685, %2684 ]
  %2689 = phi i32 [ %2692, %2687 ], [ %2686, %2684 ]
  %2690 = getelementptr inbounds i32, ptr %11, i64 %2688
  %2691 = load i32, ptr %2690, align 4, !tbaa !6
  %2692 = mul nsw i32 %2691, %2689
  %2693 = add nsw i64 %2688, -1
  %2694 = trunc i64 %2688 to i32
  %2695 = icmp sgt i32 %2694, 0
  br i1 %2695, label %2687, label %2696, !llvm.loop !1031

2696:                                             ; preds = %2687, %2678
  %2697 = phi i32 [ %2682, %2678 ], [ %2692, %2687 ]
  %2698 = and i64 %2647, 4294967295
  %2699 = getelementptr inbounds i32, ptr %6, i64 %2698
  %2700 = load i32, ptr %2699, align 4, !tbaa !6
  %2701 = mul nsw i32 %2700, %2697
  %2702 = add nsw i32 %2701, %2641
  %2703 = icmp sgt i64 %2639, 2
  %2704 = add nsw i64 %2640, -1
  %2705 = add i32 %2638, 1
  br i1 %2703, label %2637, label %2706, !llvm.loop !1032

2706:                                             ; preds = %2696, %2634
  %2707 = phi i32 [ %2636, %2634 ], [ %2702, %2696 ]
  %2708 = icmp slt i32 %2707, %5
  br i1 %2708, label %2711, label %2709

2709:                                             ; preds = %2706
  %2710 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1513, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5518

2711:                                             ; preds = %2706
  %2712 = sext i32 %2707 to i64
  %2713 = getelementptr inbounds double, ptr %2466, i64 %2712
  %2714 = load double, ptr %2713, align 8, !tbaa !19
  %2715 = fptosi double %2714 to i32
  %2716 = load i32, ptr %2468, align 4, !tbaa !6
  %2717 = icmp slt i32 %2716, %2715
  br i1 %2717, label %2718, label %2719

2718:                                             ; preds = %2711
  store i32 %2715, ptr %2468, align 4, !tbaa !6
  br label %2719

2719:                                             ; preds = %2711, %2718
  %2720 = add nuw nsw i32 %2635, 1
  br i1 %2481, label %2721, label %2771

2721:                                             ; preds = %2719
  %2722 = load i32, ptr %4, align 4, !tbaa !6
  %2723 = load i32, ptr %12, align 4, !tbaa !6
  %2724 = add nsw i32 %2723, -1
  %2725 = icmp slt i32 %2722, %2724
  br i1 %2725, label %2748, label %2726

2726:                                             ; preds = %2721
  %2727 = icmp eq i32 %2722, %2724
  br i1 %2727, label %2728, label %2764

2728:                                             ; preds = %2726
  store i32 0, ptr %4, align 4, !tbaa !6
  %2729 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2729, ptr %6, align 4, !tbaa !6
  br i1 %2486, label %2771, label %2730

2730:                                             ; preds = %2728, %2758
  %2731 = phi i64 [ %2762, %2758 ], [ 1, %2728 ]
  %2732 = getelementptr inbounds i32, ptr %4, i64 %2731
  %2733 = load i32, ptr %2732, align 4, !tbaa !6
  %2734 = getelementptr inbounds i32, ptr %12, i64 %2731
  %2735 = load i32, ptr %2734, align 4, !tbaa !6
  %2736 = add nsw i32 %2735, -1
  %2737 = icmp slt i32 %2733, %2736
  br i1 %2737, label %2738, label %2756

2738:                                             ; preds = %2730
  br i1 %2725, label %2748, label %2739

2739:                                             ; preds = %2738
  %2740 = shl i64 %2731, 32
  %2741 = add i64 %2740, -4294967296
  %2742 = ashr exact i64 %2741, 32
  %2743 = getelementptr inbounds i32, ptr %7, i64 %2742
  %2744 = load i32, ptr %2743, align 4, !tbaa !6
  %2745 = getelementptr inbounds i32, ptr %6, i64 %2731
  %2746 = load i32, ptr %2745, align 4, !tbaa !6
  %2747 = add nsw i32 %2746, %2744
  store i32 %2747, ptr %2745, align 4, !tbaa !6
  br label %2766

2748:                                             ; preds = %2721, %2738
  %2749 = phi i32 [ %2733, %2738 ], [ %2722, %2721 ]
  %2750 = phi ptr [ %2732, %2738 ], [ %4, %2721 ]
  %2751 = phi i64 [ %2731, %2738 ], [ 0, %2721 ]
  %2752 = add nsw i32 %2749, 1
  store i32 %2752, ptr %2750, align 4, !tbaa !6
  %2753 = getelementptr inbounds i32, ptr %7, i64 %2751
  %2754 = load i32, ptr %2753, align 4, !tbaa !6
  %2755 = getelementptr inbounds i32, ptr %6, i64 %2751
  br label %2766

2756:                                             ; preds = %2730
  %2757 = icmp eq i32 %2733, %2736
  br i1 %2757, label %2758, label %2764

2758:                                             ; preds = %2756
  store i32 0, ptr %2732, align 4, !tbaa !6
  %2759 = getelementptr inbounds i32, ptr %8, i64 %2731
  %2760 = load i32, ptr %2759, align 4, !tbaa !6
  %2761 = getelementptr inbounds i32, ptr %6, i64 %2731
  store i32 %2760, ptr %2761, align 4, !tbaa !6
  %2762 = add nuw nsw i64 %2731, 1
  %2763 = icmp eq i64 %2762, %2484
  br i1 %2763, label %2771, label %2730, !llvm.loop !1033

2764:                                             ; preds = %2726, %2756
  %2765 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1513, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5518

2766:                                             ; preds = %2739, %2748
  %2767 = phi ptr [ %2755, %2748 ], [ %2732, %2739 ]
  %2768 = phi i32 [ %2754, %2748 ], [ 1, %2739 ]
  %2769 = load i32, ptr %2767, align 4, !tbaa !6
  %2770 = add nsw i32 %2769, %2768
  store i32 %2770, ptr %2767, align 4, !tbaa !6
  br label %2771

2771:                                             ; preds = %2758, %2766, %2728, %2719
  %2772 = icmp eq i32 %2720, %5
  br i1 %2772, label %5513, label %2634, !llvm.loop !1034

2773:                                             ; preds = %2472
  %2774 = getelementptr inbounds i32, ptr %3, i64 %19
  %2775 = load i32, ptr %2774, align 4, !tbaa !6
  %2776 = icmp eq i32 %2775, 0
  %2777 = icmp sgt i32 %5, 0
  br i1 %2776, label %2787, label %2778

2778:                                             ; preds = %2773
  br i1 %2777, label %2779, label %5513

2779:                                             ; preds = %2778
  %2780 = icmp sgt i32 %13, 1
  %2781 = icmp sgt i32 %13, 0
  %2782 = add i32 %13, -2
  %2783 = zext i32 %2782 to i64
  %2784 = zext i32 %13 to i64
  %2785 = add nuw i32 %5, 1
  %2786 = icmp eq i32 %13, 1
  br label %2930

2787:                                             ; preds = %2773
  br i1 %2777, label %2788, label %5513

2788:                                             ; preds = %2787
  %2789 = icmp sgt i32 %13, 1
  %2790 = icmp sgt i32 %13, 0
  %2791 = add i32 %13, -2
  %2792 = zext i32 %2791 to i64
  %2793 = zext i32 %13 to i64
  %2794 = add nuw i32 %5, 1
  %2795 = icmp eq i32 %13, 1
  br label %2796

2796:                                             ; preds = %2788, %2928
  %2797 = phi i32 [ 0, %2788 ], [ %2880, %2928 ]
  %2798 = phi double [ 0.000000e+00, %2788 ], [ %2879, %2928 ]
  %2799 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2789, label %2800, label %2869

2800:                                             ; preds = %2796, %2859
  %2801 = phi i32 [ %2868, %2859 ], [ 0, %2796 ]
  %2802 = phi i64 [ %2810, %2859 ], [ %2793, %2796 ]
  %2803 = phi i64 [ %2867, %2859 ], [ %2792, %2796 ]
  %2804 = phi i32 [ %2865, %2859 ], [ %2799, %2796 ]
  %2805 = sub i32 %2791, %2801
  %2806 = tail call i32 @llvm.smin.i32(i32 %2805, i32 0)
  %2807 = sub i32 %2805, %2806
  %2808 = zext i32 %2807 to i64
  %2809 = add nuw nsw i64 %2808, 1
  %2810 = add nsw i64 %2802, -1
  %2811 = icmp ult i32 %2807, 31
  br i1 %2811, label %2847, label %2812

2812:                                             ; preds = %2800
  %2813 = and i64 %2809, 8589934560
  %2814 = sub i64 %2803, %2813
  br label %2815

2815:                                             ; preds = %2815, %2812
  %2816 = phi i64 [ 0, %2812 ], [ %2839, %2815 ]
  %2817 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2812 ], [ %2835, %2815 ]
  %2818 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2812 ], [ %2836, %2815 ]
  %2819 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2812 ], [ %2837, %2815 ]
  %2820 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2812 ], [ %2838, %2815 ]
  %2821 = sub i64 %2803, %2816
  %2822 = getelementptr inbounds i32, ptr %9, i64 %2821
  %2823 = getelementptr inbounds i32, ptr %2822, i64 -7
  %2824 = load <8 x i32>, ptr %2823, align 4, !tbaa !6
  %2825 = shufflevector <8 x i32> %2824, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2826 = getelementptr inbounds i32, ptr %2822, i64 -15
  %2827 = load <8 x i32>, ptr %2826, align 4, !tbaa !6
  %2828 = shufflevector <8 x i32> %2827, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2829 = getelementptr inbounds i32, ptr %2822, i64 -23
  %2830 = load <8 x i32>, ptr %2829, align 4, !tbaa !6
  %2831 = shufflevector <8 x i32> %2830, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2832 = getelementptr inbounds i32, ptr %2822, i64 -31
  %2833 = load <8 x i32>, ptr %2832, align 4, !tbaa !6
  %2834 = shufflevector <8 x i32> %2833, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2835 = mul <8 x i32> %2825, %2817
  %2836 = mul <8 x i32> %2828, %2818
  %2837 = mul <8 x i32> %2831, %2819
  %2838 = mul <8 x i32> %2834, %2820
  %2839 = add nuw i64 %2816, 32
  %2840 = icmp eq i64 %2839, %2813
  br i1 %2840, label %2841, label %2815, !llvm.loop !1035

2841:                                             ; preds = %2815
  %2842 = mul <8 x i32> %2836, %2835
  %2843 = mul <8 x i32> %2837, %2842
  %2844 = mul <8 x i32> %2838, %2843
  %2845 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2844)
  %2846 = icmp eq i64 %2809, %2813
  br i1 %2846, label %2859, label %2847

2847:                                             ; preds = %2800, %2841
  %2848 = phi i64 [ %2803, %2800 ], [ %2814, %2841 ]
  %2849 = phi i32 [ 1, %2800 ], [ %2845, %2841 ]
  br label %2850

2850:                                             ; preds = %2847, %2850
  %2851 = phi i64 [ %2856, %2850 ], [ %2848, %2847 ]
  %2852 = phi i32 [ %2855, %2850 ], [ %2849, %2847 ]
  %2853 = getelementptr inbounds i32, ptr %9, i64 %2851
  %2854 = load i32, ptr %2853, align 4, !tbaa !6
  %2855 = mul nsw i32 %2854, %2852
  %2856 = add nsw i64 %2851, -1
  %2857 = trunc i64 %2851 to i32
  %2858 = icmp sgt i32 %2857, 0
  br i1 %2858, label %2850, label %2859, !llvm.loop !1036

2859:                                             ; preds = %2850, %2841
  %2860 = phi i32 [ %2845, %2841 ], [ %2855, %2850 ]
  %2861 = and i64 %2810, 4294967295
  %2862 = getelementptr inbounds i32, ptr %6, i64 %2861
  %2863 = load i32, ptr %2862, align 4, !tbaa !6
  %2864 = mul nsw i32 %2863, %2860
  %2865 = add nsw i32 %2864, %2804
  %2866 = icmp sgt i64 %2802, 2
  %2867 = add nsw i64 %2803, -1
  %2868 = add i32 %2801, 1
  br i1 %2866, label %2800, label %2869, !llvm.loop !1037

2869:                                             ; preds = %2859, %2796
  %2870 = phi i32 [ %2799, %2796 ], [ %2865, %2859 ]
  %2871 = sext i32 %2870 to i64
  %2872 = getelementptr inbounds double, ptr %2466, i64 %2871
  %2873 = load double, ptr %2872, align 8, !tbaa !19
  %2874 = fptosi double %2873 to i32
  %2875 = load i32, ptr %2468, align 4, !tbaa !6
  %2876 = icmp slt i32 %2875, %2874
  br i1 %2876, label %2877, label %2878

2877:                                             ; preds = %2869
  store i32 %2874, ptr %2468, align 4, !tbaa !6
  br label %2878

2878:                                             ; preds = %2877, %2869
  %2879 = fadd fast double %2798, 1.000000e+00
  %2880 = add nuw nsw i32 %2797, 1
  br i1 %2790, label %2881, label %2928

2881:                                             ; preds = %2878
  %2882 = load i32, ptr %4, align 4, !tbaa !6
  %2883 = load i32, ptr %12, align 4, !tbaa !6
  %2884 = add nsw i32 %2883, -1
  %2885 = icmp slt i32 %2882, %2884
  br i1 %2885, label %2905, label %2886

2886:                                             ; preds = %2881
  %2887 = icmp eq i32 %2882, %2884
  br i1 %2887, label %2888, label %2921

2888:                                             ; preds = %2886
  store i32 0, ptr %4, align 4, !tbaa !6
  %2889 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2889, ptr %6, align 4, !tbaa !6
  br i1 %2795, label %2928, label %2890

2890:                                             ; preds = %2888, %2915
  %2891 = phi i64 [ %2919, %2915 ], [ 1, %2888 ]
  %2892 = getelementptr inbounds i32, ptr %4, i64 %2891
  %2893 = load i32, ptr %2892, align 4, !tbaa !6
  %2894 = getelementptr inbounds i32, ptr %12, i64 %2891
  %2895 = load i32, ptr %2894, align 4, !tbaa !6
  %2896 = add nsw i32 %2895, -1
  %2897 = icmp slt i32 %2893, %2896
  br i1 %2897, label %2898, label %2913

2898:                                             ; preds = %2890
  br i1 %2885, label %2905, label %2899

2899:                                             ; preds = %2898
  %2900 = getelementptr inbounds i32, ptr %7, i64 %2891
  %2901 = load i32, ptr %2900, align 4, !tbaa !6
  %2902 = getelementptr inbounds i32, ptr %6, i64 %2891
  %2903 = load i32, ptr %2902, align 4, !tbaa !6
  %2904 = add nsw i32 %2903, %2901
  store i32 %2904, ptr %2902, align 4, !tbaa !6
  br label %2923

2905:                                             ; preds = %2881, %2898
  %2906 = phi i32 [ %2893, %2898 ], [ %2882, %2881 ]
  %2907 = phi ptr [ %2892, %2898 ], [ %4, %2881 ]
  %2908 = phi i64 [ %2891, %2898 ], [ 0, %2881 ]
  %2909 = add nsw i32 %2906, 1
  store i32 %2909, ptr %2907, align 4, !tbaa !6
  %2910 = getelementptr inbounds i32, ptr %7, i64 %2908
  %2911 = load i32, ptr %2910, align 4, !tbaa !6
  %2912 = getelementptr inbounds i32, ptr %6, i64 %2908
  br label %2923

2913:                                             ; preds = %2890
  %2914 = icmp eq i32 %2893, %2896
  br i1 %2914, label %2915, label %2921

2915:                                             ; preds = %2913
  store i32 0, ptr %2892, align 4, !tbaa !6
  %2916 = getelementptr inbounds i32, ptr %8, i64 %2891
  %2917 = load i32, ptr %2916, align 4, !tbaa !6
  %2918 = getelementptr inbounds i32, ptr %6, i64 %2891
  store i32 %2917, ptr %2918, align 4, !tbaa !6
  %2919 = add nuw nsw i64 %2891, 1
  %2920 = icmp eq i64 %2919, %2793
  br i1 %2920, label %2928, label %2890, !llvm.loop !1038

2921:                                             ; preds = %2886, %2913
  %2922 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1513, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5518

2923:                                             ; preds = %2899, %2905
  %2924 = phi ptr [ %2912, %2905 ], [ %2892, %2899 ]
  %2925 = phi i32 [ %2911, %2905 ], [ 1, %2899 ]
  %2926 = load i32, ptr %2924, align 4, !tbaa !6
  %2927 = add nsw i32 %2926, %2925
  store i32 %2927, ptr %2924, align 4, !tbaa !6
  br label %2928

2928:                                             ; preds = %2915, %2923, %2888, %2878
  %2929 = icmp eq i32 %2880, %5
  br i1 %2929, label %5513, label %2796, !llvm.loop !1039

2930:                                             ; preds = %2779, %3067
  %2931 = phi i32 [ 0, %2779 ], [ %3016, %3067 ]
  %2932 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2780, label %2933, label %3002

2933:                                             ; preds = %2930, %2992
  %2934 = phi i32 [ %3001, %2992 ], [ 0, %2930 ]
  %2935 = phi i64 [ %2943, %2992 ], [ %2784, %2930 ]
  %2936 = phi i64 [ %3000, %2992 ], [ %2783, %2930 ]
  %2937 = phi i32 [ %2998, %2992 ], [ %2932, %2930 ]
  %2938 = sub i32 %2782, %2934
  %2939 = tail call i32 @llvm.smin.i32(i32 %2938, i32 0)
  %2940 = sub i32 %2938, %2939
  %2941 = zext i32 %2940 to i64
  %2942 = add nuw nsw i64 %2941, 1
  %2943 = add nsw i64 %2935, -1
  %2944 = icmp ult i32 %2940, 31
  br i1 %2944, label %2980, label %2945

2945:                                             ; preds = %2933
  %2946 = and i64 %2942, 8589934560
  %2947 = sub i64 %2936, %2946
  br label %2948

2948:                                             ; preds = %2948, %2945
  %2949 = phi i64 [ 0, %2945 ], [ %2972, %2948 ]
  %2950 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2945 ], [ %2968, %2948 ]
  %2951 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2945 ], [ %2969, %2948 ]
  %2952 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2945 ], [ %2970, %2948 ]
  %2953 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2945 ], [ %2971, %2948 ]
  %2954 = sub i64 %2936, %2949
  %2955 = getelementptr inbounds i32, ptr %11, i64 %2954
  %2956 = getelementptr inbounds i32, ptr %2955, i64 -7
  %2957 = load <8 x i32>, ptr %2956, align 4, !tbaa !6
  %2958 = shufflevector <8 x i32> %2957, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2959 = getelementptr inbounds i32, ptr %2955, i64 -15
  %2960 = load <8 x i32>, ptr %2959, align 4, !tbaa !6
  %2961 = shufflevector <8 x i32> %2960, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2962 = getelementptr inbounds i32, ptr %2955, i64 -23
  %2963 = load <8 x i32>, ptr %2962, align 4, !tbaa !6
  %2964 = shufflevector <8 x i32> %2963, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2965 = getelementptr inbounds i32, ptr %2955, i64 -31
  %2966 = load <8 x i32>, ptr %2965, align 4, !tbaa !6
  %2967 = shufflevector <8 x i32> %2966, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2968 = mul <8 x i32> %2958, %2950
  %2969 = mul <8 x i32> %2961, %2951
  %2970 = mul <8 x i32> %2964, %2952
  %2971 = mul <8 x i32> %2967, %2953
  %2972 = add nuw i64 %2949, 32
  %2973 = icmp eq i64 %2972, %2946
  br i1 %2973, label %2974, label %2948, !llvm.loop !1040

2974:                                             ; preds = %2948
  %2975 = mul <8 x i32> %2969, %2968
  %2976 = mul <8 x i32> %2970, %2975
  %2977 = mul <8 x i32> %2971, %2976
  %2978 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2977)
  %2979 = icmp eq i64 %2942, %2946
  br i1 %2979, label %2992, label %2980

2980:                                             ; preds = %2933, %2974
  %2981 = phi i64 [ %2936, %2933 ], [ %2947, %2974 ]
  %2982 = phi i32 [ 1, %2933 ], [ %2978, %2974 ]
  br label %2983

2983:                                             ; preds = %2980, %2983
  %2984 = phi i64 [ %2989, %2983 ], [ %2981, %2980 ]
  %2985 = phi i32 [ %2988, %2983 ], [ %2982, %2980 ]
  %2986 = getelementptr inbounds i32, ptr %11, i64 %2984
  %2987 = load i32, ptr %2986, align 4, !tbaa !6
  %2988 = mul nsw i32 %2987, %2985
  %2989 = add nsw i64 %2984, -1
  %2990 = trunc i64 %2984 to i32
  %2991 = icmp sgt i32 %2990, 0
  br i1 %2991, label %2983, label %2992, !llvm.loop !1041

2992:                                             ; preds = %2983, %2974
  %2993 = phi i32 [ %2978, %2974 ], [ %2988, %2983 ]
  %2994 = and i64 %2943, 4294967295
  %2995 = getelementptr inbounds i32, ptr %6, i64 %2994
  %2996 = load i32, ptr %2995, align 4, !tbaa !6
  %2997 = mul nsw i32 %2996, %2993
  %2998 = add nsw i32 %2997, %2937
  %2999 = icmp sgt i64 %2935, 2
  %3000 = add nsw i64 %2936, -1
  %3001 = add i32 %2934, 1
  br i1 %2999, label %2933, label %3002, !llvm.loop !1042

3002:                                             ; preds = %2992, %2930
  %3003 = phi i32 [ %2932, %2930 ], [ %2998, %2992 ]
  %3004 = icmp slt i32 %3003, %5
  br i1 %3004, label %3007, label %3005

3005:                                             ; preds = %3002
  %3006 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1513, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5518

3007:                                             ; preds = %3002
  %3008 = sext i32 %3003 to i64
  %3009 = getelementptr inbounds double, ptr %2466, i64 %3008
  %3010 = load double, ptr %3009, align 8, !tbaa !19
  %3011 = fptosi double %3010 to i32
  %3012 = load i32, ptr %2468, align 4, !tbaa !6
  %3013 = icmp slt i32 %3012, %3011
  br i1 %3013, label %3014, label %3015

3014:                                             ; preds = %3007
  store i32 %3011, ptr %2468, align 4, !tbaa !6
  br label %3015

3015:                                             ; preds = %3014, %3007
  %3016 = add nuw nsw i32 %2931, 1
  br i1 %2781, label %3017, label %3067

3017:                                             ; preds = %3015
  %3018 = load i32, ptr %4, align 4, !tbaa !6
  %3019 = load i32, ptr %12, align 4, !tbaa !6
  %3020 = add nsw i32 %3019, -1
  %3021 = icmp slt i32 %3018, %3020
  br i1 %3021, label %3044, label %3022

3022:                                             ; preds = %3017
  %3023 = icmp eq i32 %3018, %3020
  br i1 %3023, label %3024, label %3060

3024:                                             ; preds = %3022
  store i32 0, ptr %4, align 4, !tbaa !6
  %3025 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3025, ptr %6, align 4, !tbaa !6
  br i1 %2786, label %3067, label %3026

3026:                                             ; preds = %3024, %3054
  %3027 = phi i64 [ %3058, %3054 ], [ 1, %3024 ]
  %3028 = getelementptr inbounds i32, ptr %4, i64 %3027
  %3029 = load i32, ptr %3028, align 4, !tbaa !6
  %3030 = getelementptr inbounds i32, ptr %12, i64 %3027
  %3031 = load i32, ptr %3030, align 4, !tbaa !6
  %3032 = add nsw i32 %3031, -1
  %3033 = icmp slt i32 %3029, %3032
  br i1 %3033, label %3034, label %3052

3034:                                             ; preds = %3026
  br i1 %3021, label %3044, label %3035

3035:                                             ; preds = %3034
  %3036 = shl i64 %3027, 32
  %3037 = add i64 %3036, -4294967296
  %3038 = ashr exact i64 %3037, 32
  %3039 = getelementptr inbounds i32, ptr %7, i64 %3038
  %3040 = load i32, ptr %3039, align 4, !tbaa !6
  %3041 = getelementptr inbounds i32, ptr %6, i64 %3027
  %3042 = load i32, ptr %3041, align 4, !tbaa !6
  %3043 = add nsw i32 %3042, %3040
  store i32 %3043, ptr %3041, align 4, !tbaa !6
  br label %3062

3044:                                             ; preds = %3017, %3034
  %3045 = phi i32 [ %3029, %3034 ], [ %3018, %3017 ]
  %3046 = phi ptr [ %3028, %3034 ], [ %4, %3017 ]
  %3047 = phi i64 [ %3027, %3034 ], [ 0, %3017 ]
  %3048 = add nsw i32 %3045, 1
  store i32 %3048, ptr %3046, align 4, !tbaa !6
  %3049 = getelementptr inbounds i32, ptr %7, i64 %3047
  %3050 = load i32, ptr %3049, align 4, !tbaa !6
  %3051 = getelementptr inbounds i32, ptr %6, i64 %3047
  br label %3062

3052:                                             ; preds = %3026
  %3053 = icmp eq i32 %3029, %3032
  br i1 %3053, label %3054, label %3060

3054:                                             ; preds = %3052
  store i32 0, ptr %3028, align 4, !tbaa !6
  %3055 = getelementptr inbounds i32, ptr %8, i64 %3027
  %3056 = load i32, ptr %3055, align 4, !tbaa !6
  %3057 = getelementptr inbounds i32, ptr %6, i64 %3027
  store i32 %3056, ptr %3057, align 4, !tbaa !6
  %3058 = add nuw nsw i64 %3027, 1
  %3059 = icmp eq i64 %3058, %2784
  br i1 %3059, label %3067, label %3026, !llvm.loop !1043

3060:                                             ; preds = %3022, %3052
  %3061 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1513, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5518

3062:                                             ; preds = %3035, %3044
  %3063 = phi ptr [ %3051, %3044 ], [ %3028, %3035 ]
  %3064 = phi i32 [ %3050, %3044 ], [ 1, %3035 ]
  %3065 = load i32, ptr %3063, align 4, !tbaa !6
  %3066 = add nsw i32 %3065, %3064
  store i32 %3066, ptr %3063, align 4, !tbaa !6
  br label %3067

3067:                                             ; preds = %3054, %3062, %3024, %3015
  %3068 = icmp eq i32 %3016, %5
  br i1 %3068, label %5513, label %2930, !llvm.loop !1044

3069:                                             ; preds = %2472
  %3070 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1513, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5513

3071:                                             ; preds = %18
  %3072 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3073 = load ptr, ptr %3072, align 8, !tbaa !10
  %3074 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3075 = load ptr, ptr %3074, align 8, !tbaa !10
  %3076 = load double, ptr %3073, align 8, !tbaa !19
  %3077 = fptosi double %3076 to i64
  store i64 %3077, ptr %3075, align 8, !tbaa !121
  %3078 = icmp eq i32 %13, 0
  br i1 %3078, label %5513, label %3079

3079:                                             ; preds = %3071
  switch i32 %1, label %3680 [
    i32 1, label %3080
    i32 0, label %3382
  ]

3080:                                             ; preds = %3079
  %3081 = getelementptr inbounds i32, ptr %3, i64 %19
  %3082 = load i32, ptr %3081, align 4, !tbaa !6
  %3083 = icmp eq i32 %3082, 0
  %3084 = icmp sgt i32 %5, 0
  br i1 %3083, label %3094, label %3085

3085:                                             ; preds = %3080
  br i1 %3084, label %3086, label %5513

3086:                                             ; preds = %3085
  %3087 = icmp sgt i32 %13, 1
  %3088 = icmp sgt i32 %13, 0
  %3089 = add i32 %13, -2
  %3090 = zext i32 %3089 to i64
  %3091 = zext i32 %13 to i64
  %3092 = add nuw i32 %5, 1
  %3093 = icmp eq i32 %13, 1
  br label %3242

3094:                                             ; preds = %3080
  br i1 %3084, label %3095, label %5513

3095:                                             ; preds = %3094
  %3096 = icmp sgt i32 %13, 1
  %3097 = icmp sgt i32 %13, 0
  %3098 = add i32 %13, -2
  %3099 = zext i32 %3098 to i64
  %3100 = zext i32 %13 to i64
  %3101 = add nuw i32 %5, 1
  %3102 = icmp eq i32 %13, 1
  br label %3103

3103:                                             ; preds = %3095, %3240
  %3104 = phi i64 [ %3077, %3095 ], [ %3190, %3240 ]
  %3105 = phi i32 [ 0, %3095 ], [ %3192, %3240 ]
  %3106 = phi double [ 0.000000e+00, %3095 ], [ %3191, %3240 ]
  %3107 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3096, label %3108, label %3177

3108:                                             ; preds = %3103, %3167
  %3109 = phi i32 [ %3176, %3167 ], [ 0, %3103 ]
  %3110 = phi i64 [ %3118, %3167 ], [ %3100, %3103 ]
  %3111 = phi i64 [ %3175, %3167 ], [ %3099, %3103 ]
  %3112 = phi i32 [ %3173, %3167 ], [ %3107, %3103 ]
  %3113 = sub i32 %3098, %3109
  %3114 = tail call i32 @llvm.smin.i32(i32 %3113, i32 0)
  %3115 = sub i32 %3113, %3114
  %3116 = zext i32 %3115 to i64
  %3117 = add nuw nsw i64 %3116, 1
  %3118 = add nsw i64 %3110, -1
  %3119 = icmp ult i32 %3115, 31
  br i1 %3119, label %3155, label %3120

3120:                                             ; preds = %3108
  %3121 = and i64 %3117, 8589934560
  %3122 = sub i64 %3111, %3121
  br label %3123

3123:                                             ; preds = %3123, %3120
  %3124 = phi i64 [ 0, %3120 ], [ %3147, %3123 ]
  %3125 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3120 ], [ %3143, %3123 ]
  %3126 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3120 ], [ %3144, %3123 ]
  %3127 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3120 ], [ %3145, %3123 ]
  %3128 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3120 ], [ %3146, %3123 ]
  %3129 = sub i64 %3111, %3124
  %3130 = getelementptr inbounds i32, ptr %9, i64 %3129
  %3131 = getelementptr inbounds i32, ptr %3130, i64 -7
  %3132 = load <8 x i32>, ptr %3131, align 4, !tbaa !6
  %3133 = shufflevector <8 x i32> %3132, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3134 = getelementptr inbounds i32, ptr %3130, i64 -15
  %3135 = load <8 x i32>, ptr %3134, align 4, !tbaa !6
  %3136 = shufflevector <8 x i32> %3135, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3137 = getelementptr inbounds i32, ptr %3130, i64 -23
  %3138 = load <8 x i32>, ptr %3137, align 4, !tbaa !6
  %3139 = shufflevector <8 x i32> %3138, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3140 = getelementptr inbounds i32, ptr %3130, i64 -31
  %3141 = load <8 x i32>, ptr %3140, align 4, !tbaa !6
  %3142 = shufflevector <8 x i32> %3141, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3143 = mul <8 x i32> %3133, %3125
  %3144 = mul <8 x i32> %3136, %3126
  %3145 = mul <8 x i32> %3139, %3127
  %3146 = mul <8 x i32> %3142, %3128
  %3147 = add nuw i64 %3124, 32
  %3148 = icmp eq i64 %3147, %3121
  br i1 %3148, label %3149, label %3123, !llvm.loop !1045

3149:                                             ; preds = %3123
  %3150 = mul <8 x i32> %3144, %3143
  %3151 = mul <8 x i32> %3145, %3150
  %3152 = mul <8 x i32> %3146, %3151
  %3153 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3152)
  %3154 = icmp eq i64 %3117, %3121
  br i1 %3154, label %3167, label %3155

3155:                                             ; preds = %3108, %3149
  %3156 = phi i64 [ %3111, %3108 ], [ %3122, %3149 ]
  %3157 = phi i32 [ 1, %3108 ], [ %3153, %3149 ]
  br label %3158

3158:                                             ; preds = %3155, %3158
  %3159 = phi i64 [ %3164, %3158 ], [ %3156, %3155 ]
  %3160 = phi i32 [ %3163, %3158 ], [ %3157, %3155 ]
  %3161 = getelementptr inbounds i32, ptr %9, i64 %3159
  %3162 = load i32, ptr %3161, align 4, !tbaa !6
  %3163 = mul nsw i32 %3162, %3160
  %3164 = add nsw i64 %3159, -1
  %3165 = trunc i64 %3159 to i32
  %3166 = icmp sgt i32 %3165, 0
  br i1 %3166, label %3158, label %3167, !llvm.loop !1046

3167:                                             ; preds = %3158, %3149
  %3168 = phi i32 [ %3153, %3149 ], [ %3163, %3158 ]
  %3169 = and i64 %3118, 4294967295
  %3170 = getelementptr inbounds i32, ptr %6, i64 %3169
  %3171 = load i32, ptr %3170, align 4, !tbaa !6
  %3172 = mul nsw i32 %3171, %3168
  %3173 = add nsw i32 %3172, %3112
  %3174 = icmp sgt i64 %3110, 2
  %3175 = add nsw i64 %3111, -1
  %3176 = add i32 %3109, 1
  br i1 %3174, label %3108, label %3177, !llvm.loop !1047

3177:                                             ; preds = %3167, %3103
  %3178 = phi i32 [ %3107, %3103 ], [ %3173, %3167 ]
  %3179 = sext i32 %3178 to i64
  %3180 = getelementptr inbounds double, ptr %2, i64 %3179
  %3181 = load double, ptr %3180, align 8, !tbaa !19
  %3182 = getelementptr inbounds double, ptr %3073, i64 %3179
  %3183 = load double, ptr %3182, align 8, !tbaa !19
  %3184 = fptosi double %3183 to i64
  %3185 = fcmp fast one double %3181, 0.000000e+00
  %3186 = icmp slt i64 %3104, %3184
  %3187 = select i1 %3185, i1 %3186, i1 false
  br i1 %3187, label %3188, label %3189

3188:                                             ; preds = %3177
  store i64 %3184, ptr %3075, align 8, !tbaa !121
  br label %3189

3189:                                             ; preds = %3188, %3177
  %3190 = phi i64 [ %3184, %3188 ], [ %3104, %3177 ]
  %3191 = fadd fast double %3181, %3106
  %3192 = add nuw nsw i32 %3105, 1
  br i1 %3097, label %3193, label %3240

3193:                                             ; preds = %3189
  %3194 = load i32, ptr %4, align 4, !tbaa !6
  %3195 = load i32, ptr %12, align 4, !tbaa !6
  %3196 = add nsw i32 %3195, -1
  %3197 = icmp slt i32 %3194, %3196
  br i1 %3197, label %3217, label %3198

3198:                                             ; preds = %3193
  %3199 = icmp eq i32 %3194, %3196
  br i1 %3199, label %3200, label %3233

3200:                                             ; preds = %3198
  store i32 0, ptr %4, align 4, !tbaa !6
  %3201 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3201, ptr %6, align 4, !tbaa !6
  br i1 %3102, label %3240, label %3202

3202:                                             ; preds = %3200, %3227
  %3203 = phi i64 [ %3231, %3227 ], [ 1, %3200 ]
  %3204 = getelementptr inbounds i32, ptr %4, i64 %3203
  %3205 = load i32, ptr %3204, align 4, !tbaa !6
  %3206 = getelementptr inbounds i32, ptr %12, i64 %3203
  %3207 = load i32, ptr %3206, align 4, !tbaa !6
  %3208 = add nsw i32 %3207, -1
  %3209 = icmp slt i32 %3205, %3208
  br i1 %3209, label %3210, label %3225

3210:                                             ; preds = %3202
  br i1 %3197, label %3217, label %3211

3211:                                             ; preds = %3210
  %3212 = getelementptr inbounds i32, ptr %7, i64 %3203
  %3213 = load i32, ptr %3212, align 4, !tbaa !6
  %3214 = getelementptr inbounds i32, ptr %6, i64 %3203
  %3215 = load i32, ptr %3214, align 4, !tbaa !6
  %3216 = add nsw i32 %3215, %3213
  store i32 %3216, ptr %3214, align 4, !tbaa !6
  br label %3235

3217:                                             ; preds = %3193, %3210
  %3218 = phi i32 [ %3205, %3210 ], [ %3194, %3193 ]
  %3219 = phi ptr [ %3204, %3210 ], [ %4, %3193 ]
  %3220 = phi i64 [ %3203, %3210 ], [ 0, %3193 ]
  %3221 = add nsw i32 %3218, 1
  store i32 %3221, ptr %3219, align 4, !tbaa !6
  %3222 = getelementptr inbounds i32, ptr %7, i64 %3220
  %3223 = load i32, ptr %3222, align 4, !tbaa !6
  %3224 = getelementptr inbounds i32, ptr %6, i64 %3220
  br label %3235

3225:                                             ; preds = %3202
  %3226 = icmp eq i32 %3205, %3208
  br i1 %3226, label %3227, label %3233

3227:                                             ; preds = %3225
  store i32 0, ptr %3204, align 4, !tbaa !6
  %3228 = getelementptr inbounds i32, ptr %8, i64 %3203
  %3229 = load i32, ptr %3228, align 4, !tbaa !6
  %3230 = getelementptr inbounds i32, ptr %6, i64 %3203
  store i32 %3229, ptr %3230, align 4, !tbaa !6
  %3231 = add nuw nsw i64 %3203, 1
  %3232 = icmp eq i64 %3231, %3100
  br i1 %3232, label %3240, label %3202, !llvm.loop !1048

3233:                                             ; preds = %3198, %3225
  %3234 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1518, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5518

3235:                                             ; preds = %3211, %3217
  %3236 = phi ptr [ %3224, %3217 ], [ %3204, %3211 ]
  %3237 = phi i32 [ %3223, %3217 ], [ 1, %3211 ]
  %3238 = load i32, ptr %3236, align 4, !tbaa !6
  %3239 = add nsw i32 %3238, %3237
  store i32 %3239, ptr %3236, align 4, !tbaa !6
  br label %3240

3240:                                             ; preds = %3227, %3235, %3200, %3189
  %3241 = icmp eq i32 %3192, %5
  br i1 %3241, label %5513, label %3103, !llvm.loop !1049

3242:                                             ; preds = %3086, %3380
  %3243 = phi i64 [ %3077, %3086 ], [ %3328, %3380 ]
  %3244 = phi i32 [ 0, %3086 ], [ %3329, %3380 ]
  %3245 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3087, label %3246, label %3315

3246:                                             ; preds = %3242, %3305
  %3247 = phi i32 [ %3314, %3305 ], [ 0, %3242 ]
  %3248 = phi i64 [ %3256, %3305 ], [ %3091, %3242 ]
  %3249 = phi i64 [ %3313, %3305 ], [ %3090, %3242 ]
  %3250 = phi i32 [ %3311, %3305 ], [ %3245, %3242 ]
  %3251 = sub i32 %3089, %3247
  %3252 = tail call i32 @llvm.smin.i32(i32 %3251, i32 0)
  %3253 = sub i32 %3251, %3252
  %3254 = zext i32 %3253 to i64
  %3255 = add nuw nsw i64 %3254, 1
  %3256 = add nsw i64 %3248, -1
  %3257 = icmp ult i32 %3253, 31
  br i1 %3257, label %3293, label %3258

3258:                                             ; preds = %3246
  %3259 = and i64 %3255, 8589934560
  %3260 = sub i64 %3249, %3259
  br label %3261

3261:                                             ; preds = %3261, %3258
  %3262 = phi i64 [ 0, %3258 ], [ %3285, %3261 ]
  %3263 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3258 ], [ %3281, %3261 ]
  %3264 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3258 ], [ %3282, %3261 ]
  %3265 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3258 ], [ %3283, %3261 ]
  %3266 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3258 ], [ %3284, %3261 ]
  %3267 = sub i64 %3249, %3262
  %3268 = getelementptr inbounds i32, ptr %11, i64 %3267
  %3269 = getelementptr inbounds i32, ptr %3268, i64 -7
  %3270 = load <8 x i32>, ptr %3269, align 4, !tbaa !6
  %3271 = shufflevector <8 x i32> %3270, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3272 = getelementptr inbounds i32, ptr %3268, i64 -15
  %3273 = load <8 x i32>, ptr %3272, align 4, !tbaa !6
  %3274 = shufflevector <8 x i32> %3273, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3275 = getelementptr inbounds i32, ptr %3268, i64 -23
  %3276 = load <8 x i32>, ptr %3275, align 4, !tbaa !6
  %3277 = shufflevector <8 x i32> %3276, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3278 = getelementptr inbounds i32, ptr %3268, i64 -31
  %3279 = load <8 x i32>, ptr %3278, align 4, !tbaa !6
  %3280 = shufflevector <8 x i32> %3279, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3281 = mul <8 x i32> %3271, %3263
  %3282 = mul <8 x i32> %3274, %3264
  %3283 = mul <8 x i32> %3277, %3265
  %3284 = mul <8 x i32> %3280, %3266
  %3285 = add nuw i64 %3262, 32
  %3286 = icmp eq i64 %3285, %3259
  br i1 %3286, label %3287, label %3261, !llvm.loop !1050

3287:                                             ; preds = %3261
  %3288 = mul <8 x i32> %3282, %3281
  %3289 = mul <8 x i32> %3283, %3288
  %3290 = mul <8 x i32> %3284, %3289
  %3291 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3290)
  %3292 = icmp eq i64 %3255, %3259
  br i1 %3292, label %3305, label %3293

3293:                                             ; preds = %3246, %3287
  %3294 = phi i64 [ %3249, %3246 ], [ %3260, %3287 ]
  %3295 = phi i32 [ 1, %3246 ], [ %3291, %3287 ]
  br label %3296

3296:                                             ; preds = %3293, %3296
  %3297 = phi i64 [ %3302, %3296 ], [ %3294, %3293 ]
  %3298 = phi i32 [ %3301, %3296 ], [ %3295, %3293 ]
  %3299 = getelementptr inbounds i32, ptr %11, i64 %3297
  %3300 = load i32, ptr %3299, align 4, !tbaa !6
  %3301 = mul nsw i32 %3300, %3298
  %3302 = add nsw i64 %3297, -1
  %3303 = trunc i64 %3297 to i32
  %3304 = icmp sgt i32 %3303, 0
  br i1 %3304, label %3296, label %3305, !llvm.loop !1051

3305:                                             ; preds = %3296, %3287
  %3306 = phi i32 [ %3291, %3287 ], [ %3301, %3296 ]
  %3307 = and i64 %3256, 4294967295
  %3308 = getelementptr inbounds i32, ptr %6, i64 %3307
  %3309 = load i32, ptr %3308, align 4, !tbaa !6
  %3310 = mul nsw i32 %3309, %3306
  %3311 = add nsw i32 %3310, %3250
  %3312 = icmp sgt i64 %3248, 2
  %3313 = add nsw i64 %3249, -1
  %3314 = add i32 %3247, 1
  br i1 %3312, label %3246, label %3315, !llvm.loop !1052

3315:                                             ; preds = %3305, %3242
  %3316 = phi i32 [ %3245, %3242 ], [ %3311, %3305 ]
  %3317 = icmp slt i32 %3316, %5
  br i1 %3317, label %3320, label %3318

3318:                                             ; preds = %3315
  %3319 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1518, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5518

3320:                                             ; preds = %3315
  %3321 = sext i32 %3316 to i64
  %3322 = getelementptr inbounds double, ptr %3073, i64 %3321
  %3323 = load double, ptr %3322, align 8, !tbaa !19
  %3324 = fptosi double %3323 to i64
  %3325 = icmp slt i64 %3243, %3324
  br i1 %3325, label %3326, label %3327

3326:                                             ; preds = %3320
  store i64 %3324, ptr %3075, align 8, !tbaa !121
  br label %3327

3327:                                             ; preds = %3320, %3326
  %3328 = phi i64 [ %3243, %3320 ], [ %3324, %3326 ]
  %3329 = add nuw nsw i32 %3244, 1
  br i1 %3088, label %3330, label %3380

3330:                                             ; preds = %3327
  %3331 = load i32, ptr %4, align 4, !tbaa !6
  %3332 = load i32, ptr %12, align 4, !tbaa !6
  %3333 = add nsw i32 %3332, -1
  %3334 = icmp slt i32 %3331, %3333
  br i1 %3334, label %3357, label %3335

3335:                                             ; preds = %3330
  %3336 = icmp eq i32 %3331, %3333
  br i1 %3336, label %3337, label %3373

3337:                                             ; preds = %3335
  store i32 0, ptr %4, align 4, !tbaa !6
  %3338 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3338, ptr %6, align 4, !tbaa !6
  br i1 %3093, label %3380, label %3339

3339:                                             ; preds = %3337, %3367
  %3340 = phi i64 [ %3371, %3367 ], [ 1, %3337 ]
  %3341 = getelementptr inbounds i32, ptr %4, i64 %3340
  %3342 = load i32, ptr %3341, align 4, !tbaa !6
  %3343 = getelementptr inbounds i32, ptr %12, i64 %3340
  %3344 = load i32, ptr %3343, align 4, !tbaa !6
  %3345 = add nsw i32 %3344, -1
  %3346 = icmp slt i32 %3342, %3345
  br i1 %3346, label %3347, label %3365

3347:                                             ; preds = %3339
  br i1 %3334, label %3357, label %3348

3348:                                             ; preds = %3347
  %3349 = shl i64 %3340, 32
  %3350 = add i64 %3349, -4294967296
  %3351 = ashr exact i64 %3350, 32
  %3352 = getelementptr inbounds i32, ptr %7, i64 %3351
  %3353 = load i32, ptr %3352, align 4, !tbaa !6
  %3354 = getelementptr inbounds i32, ptr %6, i64 %3340
  %3355 = load i32, ptr %3354, align 4, !tbaa !6
  %3356 = add nsw i32 %3355, %3353
  store i32 %3356, ptr %3354, align 4, !tbaa !6
  br label %3375

3357:                                             ; preds = %3330, %3347
  %3358 = phi i32 [ %3342, %3347 ], [ %3331, %3330 ]
  %3359 = phi ptr [ %3341, %3347 ], [ %4, %3330 ]
  %3360 = phi i64 [ %3340, %3347 ], [ 0, %3330 ]
  %3361 = add nsw i32 %3358, 1
  store i32 %3361, ptr %3359, align 4, !tbaa !6
  %3362 = getelementptr inbounds i32, ptr %7, i64 %3360
  %3363 = load i32, ptr %3362, align 4, !tbaa !6
  %3364 = getelementptr inbounds i32, ptr %6, i64 %3360
  br label %3375

3365:                                             ; preds = %3339
  %3366 = icmp eq i32 %3342, %3345
  br i1 %3366, label %3367, label %3373

3367:                                             ; preds = %3365
  store i32 0, ptr %3341, align 4, !tbaa !6
  %3368 = getelementptr inbounds i32, ptr %8, i64 %3340
  %3369 = load i32, ptr %3368, align 4, !tbaa !6
  %3370 = getelementptr inbounds i32, ptr %6, i64 %3340
  store i32 %3369, ptr %3370, align 4, !tbaa !6
  %3371 = add nuw nsw i64 %3340, 1
  %3372 = icmp eq i64 %3371, %3091
  br i1 %3372, label %3380, label %3339, !llvm.loop !1053

3373:                                             ; preds = %3335, %3365
  %3374 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1518, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5518

3375:                                             ; preds = %3348, %3357
  %3376 = phi ptr [ %3364, %3357 ], [ %3341, %3348 ]
  %3377 = phi i32 [ %3363, %3357 ], [ 1, %3348 ]
  %3378 = load i32, ptr %3376, align 4, !tbaa !6
  %3379 = add nsw i32 %3378, %3377
  store i32 %3379, ptr %3376, align 4, !tbaa !6
  br label %3380

3380:                                             ; preds = %3367, %3375, %3337, %3327
  %3381 = icmp eq i32 %3329, %5
  br i1 %3381, label %5513, label %3242, !llvm.loop !1054

3382:                                             ; preds = %3079
  %3383 = getelementptr inbounds i32, ptr %3, i64 %19
  %3384 = load i32, ptr %3383, align 4, !tbaa !6
  %3385 = icmp eq i32 %3384, 0
  %3386 = icmp sgt i32 %5, 0
  br i1 %3385, label %3396, label %3387

3387:                                             ; preds = %3382
  br i1 %3386, label %3388, label %5513

3388:                                             ; preds = %3387
  %3389 = icmp sgt i32 %13, 1
  %3390 = icmp sgt i32 %13, 0
  %3391 = add i32 %13, -2
  %3392 = zext i32 %3391 to i64
  %3393 = zext i32 %13 to i64
  %3394 = add nuw i32 %5, 1
  %3395 = icmp eq i32 %13, 1
  br label %3540

3396:                                             ; preds = %3382
  br i1 %3386, label %3397, label %5513

3397:                                             ; preds = %3396
  %3398 = icmp sgt i32 %13, 1
  %3399 = icmp sgt i32 %13, 0
  %3400 = add i32 %13, -2
  %3401 = zext i32 %3400 to i64
  %3402 = zext i32 %13 to i64
  %3403 = add nuw i32 %5, 1
  %3404 = icmp eq i32 %13, 1
  br label %3405

3405:                                             ; preds = %3397, %3538
  %3406 = phi i64 [ %3077, %3397 ], [ %3488, %3538 ]
  %3407 = phi i32 [ 0, %3397 ], [ %3490, %3538 ]
  %3408 = phi double [ 0.000000e+00, %3397 ], [ %3489, %3538 ]
  %3409 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3398, label %3410, label %3479

3410:                                             ; preds = %3405, %3469
  %3411 = phi i32 [ %3478, %3469 ], [ 0, %3405 ]
  %3412 = phi i64 [ %3420, %3469 ], [ %3402, %3405 ]
  %3413 = phi i64 [ %3477, %3469 ], [ %3401, %3405 ]
  %3414 = phi i32 [ %3475, %3469 ], [ %3409, %3405 ]
  %3415 = sub i32 %3400, %3411
  %3416 = tail call i32 @llvm.smin.i32(i32 %3415, i32 0)
  %3417 = sub i32 %3415, %3416
  %3418 = zext i32 %3417 to i64
  %3419 = add nuw nsw i64 %3418, 1
  %3420 = add nsw i64 %3412, -1
  %3421 = icmp ult i32 %3417, 31
  br i1 %3421, label %3457, label %3422

3422:                                             ; preds = %3410
  %3423 = and i64 %3419, 8589934560
  %3424 = sub i64 %3413, %3423
  br label %3425

3425:                                             ; preds = %3425, %3422
  %3426 = phi i64 [ 0, %3422 ], [ %3449, %3425 ]
  %3427 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3422 ], [ %3445, %3425 ]
  %3428 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3422 ], [ %3446, %3425 ]
  %3429 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3422 ], [ %3447, %3425 ]
  %3430 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3422 ], [ %3448, %3425 ]
  %3431 = sub i64 %3413, %3426
  %3432 = getelementptr inbounds i32, ptr %9, i64 %3431
  %3433 = getelementptr inbounds i32, ptr %3432, i64 -7
  %3434 = load <8 x i32>, ptr %3433, align 4, !tbaa !6
  %3435 = shufflevector <8 x i32> %3434, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3436 = getelementptr inbounds i32, ptr %3432, i64 -15
  %3437 = load <8 x i32>, ptr %3436, align 4, !tbaa !6
  %3438 = shufflevector <8 x i32> %3437, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3439 = getelementptr inbounds i32, ptr %3432, i64 -23
  %3440 = load <8 x i32>, ptr %3439, align 4, !tbaa !6
  %3441 = shufflevector <8 x i32> %3440, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3442 = getelementptr inbounds i32, ptr %3432, i64 -31
  %3443 = load <8 x i32>, ptr %3442, align 4, !tbaa !6
  %3444 = shufflevector <8 x i32> %3443, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3445 = mul <8 x i32> %3435, %3427
  %3446 = mul <8 x i32> %3438, %3428
  %3447 = mul <8 x i32> %3441, %3429
  %3448 = mul <8 x i32> %3444, %3430
  %3449 = add nuw i64 %3426, 32
  %3450 = icmp eq i64 %3449, %3423
  br i1 %3450, label %3451, label %3425, !llvm.loop !1055

3451:                                             ; preds = %3425
  %3452 = mul <8 x i32> %3446, %3445
  %3453 = mul <8 x i32> %3447, %3452
  %3454 = mul <8 x i32> %3448, %3453
  %3455 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3454)
  %3456 = icmp eq i64 %3419, %3423
  br i1 %3456, label %3469, label %3457

3457:                                             ; preds = %3410, %3451
  %3458 = phi i64 [ %3413, %3410 ], [ %3424, %3451 ]
  %3459 = phi i32 [ 1, %3410 ], [ %3455, %3451 ]
  br label %3460

3460:                                             ; preds = %3457, %3460
  %3461 = phi i64 [ %3466, %3460 ], [ %3458, %3457 ]
  %3462 = phi i32 [ %3465, %3460 ], [ %3459, %3457 ]
  %3463 = getelementptr inbounds i32, ptr %9, i64 %3461
  %3464 = load i32, ptr %3463, align 4, !tbaa !6
  %3465 = mul nsw i32 %3464, %3462
  %3466 = add nsw i64 %3461, -1
  %3467 = trunc i64 %3461 to i32
  %3468 = icmp sgt i32 %3467, 0
  br i1 %3468, label %3460, label %3469, !llvm.loop !1056

3469:                                             ; preds = %3460, %3451
  %3470 = phi i32 [ %3455, %3451 ], [ %3465, %3460 ]
  %3471 = and i64 %3420, 4294967295
  %3472 = getelementptr inbounds i32, ptr %6, i64 %3471
  %3473 = load i32, ptr %3472, align 4, !tbaa !6
  %3474 = mul nsw i32 %3473, %3470
  %3475 = add nsw i32 %3474, %3414
  %3476 = icmp sgt i64 %3412, 2
  %3477 = add nsw i64 %3413, -1
  %3478 = add i32 %3411, 1
  br i1 %3476, label %3410, label %3479, !llvm.loop !1057

3479:                                             ; preds = %3469, %3405
  %3480 = phi i32 [ %3409, %3405 ], [ %3475, %3469 ]
  %3481 = sext i32 %3480 to i64
  %3482 = getelementptr inbounds double, ptr %3073, i64 %3481
  %3483 = load double, ptr %3482, align 8, !tbaa !19
  %3484 = fptosi double %3483 to i64
  %3485 = icmp slt i64 %3406, %3484
  br i1 %3485, label %3486, label %3487

3486:                                             ; preds = %3479
  store i64 %3484, ptr %3075, align 8, !tbaa !121
  br label %3487

3487:                                             ; preds = %3486, %3479
  %3488 = phi i64 [ %3484, %3486 ], [ %3406, %3479 ]
  %3489 = fadd fast double %3408, 1.000000e+00
  %3490 = add nuw nsw i32 %3407, 1
  br i1 %3399, label %3491, label %3538

3491:                                             ; preds = %3487
  %3492 = load i32, ptr %4, align 4, !tbaa !6
  %3493 = load i32, ptr %12, align 4, !tbaa !6
  %3494 = add nsw i32 %3493, -1
  %3495 = icmp slt i32 %3492, %3494
  br i1 %3495, label %3515, label %3496

3496:                                             ; preds = %3491
  %3497 = icmp eq i32 %3492, %3494
  br i1 %3497, label %3498, label %3531

3498:                                             ; preds = %3496
  store i32 0, ptr %4, align 4, !tbaa !6
  %3499 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3499, ptr %6, align 4, !tbaa !6
  br i1 %3404, label %3538, label %3500

3500:                                             ; preds = %3498, %3525
  %3501 = phi i64 [ %3529, %3525 ], [ 1, %3498 ]
  %3502 = getelementptr inbounds i32, ptr %4, i64 %3501
  %3503 = load i32, ptr %3502, align 4, !tbaa !6
  %3504 = getelementptr inbounds i32, ptr %12, i64 %3501
  %3505 = load i32, ptr %3504, align 4, !tbaa !6
  %3506 = add nsw i32 %3505, -1
  %3507 = icmp slt i32 %3503, %3506
  br i1 %3507, label %3508, label %3523

3508:                                             ; preds = %3500
  br i1 %3495, label %3515, label %3509

3509:                                             ; preds = %3508
  %3510 = getelementptr inbounds i32, ptr %7, i64 %3501
  %3511 = load i32, ptr %3510, align 4, !tbaa !6
  %3512 = getelementptr inbounds i32, ptr %6, i64 %3501
  %3513 = load i32, ptr %3512, align 4, !tbaa !6
  %3514 = add nsw i32 %3513, %3511
  store i32 %3514, ptr %3512, align 4, !tbaa !6
  br label %3533

3515:                                             ; preds = %3491, %3508
  %3516 = phi i32 [ %3503, %3508 ], [ %3492, %3491 ]
  %3517 = phi ptr [ %3502, %3508 ], [ %4, %3491 ]
  %3518 = phi i64 [ %3501, %3508 ], [ 0, %3491 ]
  %3519 = add nsw i32 %3516, 1
  store i32 %3519, ptr %3517, align 4, !tbaa !6
  %3520 = getelementptr inbounds i32, ptr %7, i64 %3518
  %3521 = load i32, ptr %3520, align 4, !tbaa !6
  %3522 = getelementptr inbounds i32, ptr %6, i64 %3518
  br label %3533

3523:                                             ; preds = %3500
  %3524 = icmp eq i32 %3503, %3506
  br i1 %3524, label %3525, label %3531

3525:                                             ; preds = %3523
  store i32 0, ptr %3502, align 4, !tbaa !6
  %3526 = getelementptr inbounds i32, ptr %8, i64 %3501
  %3527 = load i32, ptr %3526, align 4, !tbaa !6
  %3528 = getelementptr inbounds i32, ptr %6, i64 %3501
  store i32 %3527, ptr %3528, align 4, !tbaa !6
  %3529 = add nuw nsw i64 %3501, 1
  %3530 = icmp eq i64 %3529, %3402
  br i1 %3530, label %3538, label %3500, !llvm.loop !1058

3531:                                             ; preds = %3496, %3523
  %3532 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1518, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5518

3533:                                             ; preds = %3509, %3515
  %3534 = phi ptr [ %3522, %3515 ], [ %3502, %3509 ]
  %3535 = phi i32 [ %3521, %3515 ], [ 1, %3509 ]
  %3536 = load i32, ptr %3534, align 4, !tbaa !6
  %3537 = add nsw i32 %3536, %3535
  store i32 %3537, ptr %3534, align 4, !tbaa !6
  br label %3538

3538:                                             ; preds = %3525, %3533, %3498, %3487
  %3539 = icmp eq i32 %3490, %5
  br i1 %3539, label %5513, label %3405, !llvm.loop !1059

3540:                                             ; preds = %3388, %3678
  %3541 = phi i64 [ %3077, %3388 ], [ %3626, %3678 ]
  %3542 = phi i32 [ 0, %3388 ], [ %3627, %3678 ]
  %3543 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3389, label %3544, label %3613

3544:                                             ; preds = %3540, %3603
  %3545 = phi i32 [ %3612, %3603 ], [ 0, %3540 ]
  %3546 = phi i64 [ %3554, %3603 ], [ %3393, %3540 ]
  %3547 = phi i64 [ %3611, %3603 ], [ %3392, %3540 ]
  %3548 = phi i32 [ %3609, %3603 ], [ %3543, %3540 ]
  %3549 = sub i32 %3391, %3545
  %3550 = tail call i32 @llvm.smin.i32(i32 %3549, i32 0)
  %3551 = sub i32 %3549, %3550
  %3552 = zext i32 %3551 to i64
  %3553 = add nuw nsw i64 %3552, 1
  %3554 = add nsw i64 %3546, -1
  %3555 = icmp ult i32 %3551, 31
  br i1 %3555, label %3591, label %3556

3556:                                             ; preds = %3544
  %3557 = and i64 %3553, 8589934560
  %3558 = sub i64 %3547, %3557
  br label %3559

3559:                                             ; preds = %3559, %3556
  %3560 = phi i64 [ 0, %3556 ], [ %3583, %3559 ]
  %3561 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3556 ], [ %3579, %3559 ]
  %3562 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3556 ], [ %3580, %3559 ]
  %3563 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3556 ], [ %3581, %3559 ]
  %3564 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3556 ], [ %3582, %3559 ]
  %3565 = sub i64 %3547, %3560
  %3566 = getelementptr inbounds i32, ptr %11, i64 %3565
  %3567 = getelementptr inbounds i32, ptr %3566, i64 -7
  %3568 = load <8 x i32>, ptr %3567, align 4, !tbaa !6
  %3569 = shufflevector <8 x i32> %3568, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3570 = getelementptr inbounds i32, ptr %3566, i64 -15
  %3571 = load <8 x i32>, ptr %3570, align 4, !tbaa !6
  %3572 = shufflevector <8 x i32> %3571, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3573 = getelementptr inbounds i32, ptr %3566, i64 -23
  %3574 = load <8 x i32>, ptr %3573, align 4, !tbaa !6
  %3575 = shufflevector <8 x i32> %3574, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3576 = getelementptr inbounds i32, ptr %3566, i64 -31
  %3577 = load <8 x i32>, ptr %3576, align 4, !tbaa !6
  %3578 = shufflevector <8 x i32> %3577, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3579 = mul <8 x i32> %3569, %3561
  %3580 = mul <8 x i32> %3572, %3562
  %3581 = mul <8 x i32> %3575, %3563
  %3582 = mul <8 x i32> %3578, %3564
  %3583 = add nuw i64 %3560, 32
  %3584 = icmp eq i64 %3583, %3557
  br i1 %3584, label %3585, label %3559, !llvm.loop !1060

3585:                                             ; preds = %3559
  %3586 = mul <8 x i32> %3580, %3579
  %3587 = mul <8 x i32> %3581, %3586
  %3588 = mul <8 x i32> %3582, %3587
  %3589 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3588)
  %3590 = icmp eq i64 %3553, %3557
  br i1 %3590, label %3603, label %3591

3591:                                             ; preds = %3544, %3585
  %3592 = phi i64 [ %3547, %3544 ], [ %3558, %3585 ]
  %3593 = phi i32 [ 1, %3544 ], [ %3589, %3585 ]
  br label %3594

3594:                                             ; preds = %3591, %3594
  %3595 = phi i64 [ %3600, %3594 ], [ %3592, %3591 ]
  %3596 = phi i32 [ %3599, %3594 ], [ %3593, %3591 ]
  %3597 = getelementptr inbounds i32, ptr %11, i64 %3595
  %3598 = load i32, ptr %3597, align 4, !tbaa !6
  %3599 = mul nsw i32 %3598, %3596
  %3600 = add nsw i64 %3595, -1
  %3601 = trunc i64 %3595 to i32
  %3602 = icmp sgt i32 %3601, 0
  br i1 %3602, label %3594, label %3603, !llvm.loop !1061

3603:                                             ; preds = %3594, %3585
  %3604 = phi i32 [ %3589, %3585 ], [ %3599, %3594 ]
  %3605 = and i64 %3554, 4294967295
  %3606 = getelementptr inbounds i32, ptr %6, i64 %3605
  %3607 = load i32, ptr %3606, align 4, !tbaa !6
  %3608 = mul nsw i32 %3607, %3604
  %3609 = add nsw i32 %3608, %3548
  %3610 = icmp sgt i64 %3546, 2
  %3611 = add nsw i64 %3547, -1
  %3612 = add i32 %3545, 1
  br i1 %3610, label %3544, label %3613, !llvm.loop !1062

3613:                                             ; preds = %3603, %3540
  %3614 = phi i32 [ %3543, %3540 ], [ %3609, %3603 ]
  %3615 = icmp slt i32 %3614, %5
  br i1 %3615, label %3618, label %3616

3616:                                             ; preds = %3613
  %3617 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1518, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5518

3618:                                             ; preds = %3613
  %3619 = sext i32 %3614 to i64
  %3620 = getelementptr inbounds double, ptr %3073, i64 %3619
  %3621 = load double, ptr %3620, align 8, !tbaa !19
  %3622 = fptosi double %3621 to i64
  %3623 = icmp slt i64 %3541, %3622
  br i1 %3623, label %3624, label %3625

3624:                                             ; preds = %3618
  store i64 %3622, ptr %3075, align 8, !tbaa !121
  br label %3625

3625:                                             ; preds = %3624, %3618
  %3626 = phi i64 [ %3622, %3624 ], [ %3541, %3618 ]
  %3627 = add nuw nsw i32 %3542, 1
  br i1 %3390, label %3628, label %3678

3628:                                             ; preds = %3625
  %3629 = load i32, ptr %4, align 4, !tbaa !6
  %3630 = load i32, ptr %12, align 4, !tbaa !6
  %3631 = add nsw i32 %3630, -1
  %3632 = icmp slt i32 %3629, %3631
  br i1 %3632, label %3655, label %3633

3633:                                             ; preds = %3628
  %3634 = icmp eq i32 %3629, %3631
  br i1 %3634, label %3635, label %3671

3635:                                             ; preds = %3633
  store i32 0, ptr %4, align 4, !tbaa !6
  %3636 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3636, ptr %6, align 4, !tbaa !6
  br i1 %3395, label %3678, label %3637

3637:                                             ; preds = %3635, %3665
  %3638 = phi i64 [ %3669, %3665 ], [ 1, %3635 ]
  %3639 = getelementptr inbounds i32, ptr %4, i64 %3638
  %3640 = load i32, ptr %3639, align 4, !tbaa !6
  %3641 = getelementptr inbounds i32, ptr %12, i64 %3638
  %3642 = load i32, ptr %3641, align 4, !tbaa !6
  %3643 = add nsw i32 %3642, -1
  %3644 = icmp slt i32 %3640, %3643
  br i1 %3644, label %3645, label %3663

3645:                                             ; preds = %3637
  br i1 %3632, label %3655, label %3646

3646:                                             ; preds = %3645
  %3647 = shl i64 %3638, 32
  %3648 = add i64 %3647, -4294967296
  %3649 = ashr exact i64 %3648, 32
  %3650 = getelementptr inbounds i32, ptr %7, i64 %3649
  %3651 = load i32, ptr %3650, align 4, !tbaa !6
  %3652 = getelementptr inbounds i32, ptr %6, i64 %3638
  %3653 = load i32, ptr %3652, align 4, !tbaa !6
  %3654 = add nsw i32 %3653, %3651
  store i32 %3654, ptr %3652, align 4, !tbaa !6
  br label %3673

3655:                                             ; preds = %3628, %3645
  %3656 = phi i32 [ %3640, %3645 ], [ %3629, %3628 ]
  %3657 = phi ptr [ %3639, %3645 ], [ %4, %3628 ]
  %3658 = phi i64 [ %3638, %3645 ], [ 0, %3628 ]
  %3659 = add nsw i32 %3656, 1
  store i32 %3659, ptr %3657, align 4, !tbaa !6
  %3660 = getelementptr inbounds i32, ptr %7, i64 %3658
  %3661 = load i32, ptr %3660, align 4, !tbaa !6
  %3662 = getelementptr inbounds i32, ptr %6, i64 %3658
  br label %3673

3663:                                             ; preds = %3637
  %3664 = icmp eq i32 %3640, %3643
  br i1 %3664, label %3665, label %3671

3665:                                             ; preds = %3663
  store i32 0, ptr %3639, align 4, !tbaa !6
  %3666 = getelementptr inbounds i32, ptr %8, i64 %3638
  %3667 = load i32, ptr %3666, align 4, !tbaa !6
  %3668 = getelementptr inbounds i32, ptr %6, i64 %3638
  store i32 %3667, ptr %3668, align 4, !tbaa !6
  %3669 = add nuw nsw i64 %3638, 1
  %3670 = icmp eq i64 %3669, %3393
  br i1 %3670, label %3678, label %3637, !llvm.loop !1063

3671:                                             ; preds = %3633, %3663
  %3672 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1518, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5518

3673:                                             ; preds = %3646, %3655
  %3674 = phi ptr [ %3662, %3655 ], [ %3639, %3646 ]
  %3675 = phi i32 [ %3661, %3655 ], [ 1, %3646 ]
  %3676 = load i32, ptr %3674, align 4, !tbaa !6
  %3677 = add nsw i32 %3676, %3675
  store i32 %3677, ptr %3674, align 4, !tbaa !6
  br label %3678

3678:                                             ; preds = %3665, %3673, %3635, %3625
  %3679 = icmp eq i32 %3627, %5
  br i1 %3679, label %5513, label %3540, !llvm.loop !1064

3680:                                             ; preds = %3079
  %3681 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1518, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5513

3682:                                             ; preds = %18
  %3683 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3684 = load ptr, ptr %3683, align 8, !tbaa !10
  %3685 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3686 = load ptr, ptr %3685, align 8, !tbaa !10
  %3687 = load double, ptr %3684, align 8, !tbaa !19
  store double %3687, ptr %3686, align 8, !tbaa !19
  %3688 = icmp eq i32 %13, 0
  br i1 %3688, label %3689, label %3693

3689:                                             ; preds = %3682
  %3690 = load double, ptr %3684, align 8, !tbaa !19
  %3691 = fcmp fast olt double %3687, %3690
  br i1 %3691, label %3692, label %5513

3692:                                             ; preds = %3689
  store double %3690, ptr %3686, align 8, !tbaa !19
  br label %5513

3693:                                             ; preds = %3682
  switch i32 %1, label %4290 [
    i32 1, label %3694
    i32 0, label %3994
  ]

3694:                                             ; preds = %3693
  %3695 = getelementptr inbounds i32, ptr %3, i64 %19
  %3696 = load i32, ptr %3695, align 4, !tbaa !6
  %3697 = icmp eq i32 %3696, 0
  %3698 = icmp sgt i32 %5, 0
  br i1 %3697, label %3708, label %3699

3699:                                             ; preds = %3694
  br i1 %3698, label %3700, label %5513

3700:                                             ; preds = %3699
  %3701 = icmp sgt i32 %13, 1
  %3702 = icmp sgt i32 %13, 0
  %3703 = add i32 %13, -2
  %3704 = zext i32 %3703 to i64
  %3705 = zext i32 %13 to i64
  %3706 = add nuw i32 %5, 1
  %3707 = icmp eq i32 %13, 1
  br label %3855

3708:                                             ; preds = %3694
  br i1 %3698, label %3709, label %5513

3709:                                             ; preds = %3708
  %3710 = icmp sgt i32 %13, 1
  %3711 = icmp sgt i32 %13, 0
  %3712 = add i32 %13, -2
  %3713 = zext i32 %3712 to i64
  %3714 = zext i32 %13 to i64
  %3715 = add nuw i32 %5, 1
  %3716 = icmp eq i32 %13, 1
  br label %3717

3717:                                             ; preds = %3709, %3853
  %3718 = phi double [ %3687, %3709 ], [ %3803, %3853 ]
  %3719 = phi i32 [ 0, %3709 ], [ %3805, %3853 ]
  %3720 = phi double [ 0.000000e+00, %3709 ], [ %3804, %3853 ]
  %3721 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3710, label %3722, label %3791

3722:                                             ; preds = %3717, %3781
  %3723 = phi i32 [ %3790, %3781 ], [ 0, %3717 ]
  %3724 = phi i64 [ %3732, %3781 ], [ %3714, %3717 ]
  %3725 = phi i64 [ %3789, %3781 ], [ %3713, %3717 ]
  %3726 = phi i32 [ %3787, %3781 ], [ %3721, %3717 ]
  %3727 = sub i32 %3712, %3723
  %3728 = tail call i32 @llvm.smin.i32(i32 %3727, i32 0)
  %3729 = sub i32 %3727, %3728
  %3730 = zext i32 %3729 to i64
  %3731 = add nuw nsw i64 %3730, 1
  %3732 = add nsw i64 %3724, -1
  %3733 = icmp ult i32 %3729, 31
  br i1 %3733, label %3769, label %3734

3734:                                             ; preds = %3722
  %3735 = and i64 %3731, 8589934560
  %3736 = sub i64 %3725, %3735
  br label %3737

3737:                                             ; preds = %3737, %3734
  %3738 = phi i64 [ 0, %3734 ], [ %3761, %3737 ]
  %3739 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3734 ], [ %3757, %3737 ]
  %3740 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3734 ], [ %3758, %3737 ]
  %3741 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3734 ], [ %3759, %3737 ]
  %3742 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3734 ], [ %3760, %3737 ]
  %3743 = sub i64 %3725, %3738
  %3744 = getelementptr inbounds i32, ptr %9, i64 %3743
  %3745 = getelementptr inbounds i32, ptr %3744, i64 -7
  %3746 = load <8 x i32>, ptr %3745, align 4, !tbaa !6
  %3747 = shufflevector <8 x i32> %3746, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3748 = getelementptr inbounds i32, ptr %3744, i64 -15
  %3749 = load <8 x i32>, ptr %3748, align 4, !tbaa !6
  %3750 = shufflevector <8 x i32> %3749, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3751 = getelementptr inbounds i32, ptr %3744, i64 -23
  %3752 = load <8 x i32>, ptr %3751, align 4, !tbaa !6
  %3753 = shufflevector <8 x i32> %3752, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3754 = getelementptr inbounds i32, ptr %3744, i64 -31
  %3755 = load <8 x i32>, ptr %3754, align 4, !tbaa !6
  %3756 = shufflevector <8 x i32> %3755, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3757 = mul <8 x i32> %3747, %3739
  %3758 = mul <8 x i32> %3750, %3740
  %3759 = mul <8 x i32> %3753, %3741
  %3760 = mul <8 x i32> %3756, %3742
  %3761 = add nuw i64 %3738, 32
  %3762 = icmp eq i64 %3761, %3735
  br i1 %3762, label %3763, label %3737, !llvm.loop !1065

3763:                                             ; preds = %3737
  %3764 = mul <8 x i32> %3758, %3757
  %3765 = mul <8 x i32> %3759, %3764
  %3766 = mul <8 x i32> %3760, %3765
  %3767 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3766)
  %3768 = icmp eq i64 %3731, %3735
  br i1 %3768, label %3781, label %3769

3769:                                             ; preds = %3722, %3763
  %3770 = phi i64 [ %3725, %3722 ], [ %3736, %3763 ]
  %3771 = phi i32 [ 1, %3722 ], [ %3767, %3763 ]
  br label %3772

3772:                                             ; preds = %3769, %3772
  %3773 = phi i64 [ %3778, %3772 ], [ %3770, %3769 ]
  %3774 = phi i32 [ %3777, %3772 ], [ %3771, %3769 ]
  %3775 = getelementptr inbounds i32, ptr %9, i64 %3773
  %3776 = load i32, ptr %3775, align 4, !tbaa !6
  %3777 = mul nsw i32 %3776, %3774
  %3778 = add nsw i64 %3773, -1
  %3779 = trunc i64 %3773 to i32
  %3780 = icmp sgt i32 %3779, 0
  br i1 %3780, label %3772, label %3781, !llvm.loop !1066

3781:                                             ; preds = %3772, %3763
  %3782 = phi i32 [ %3767, %3763 ], [ %3777, %3772 ]
  %3783 = and i64 %3732, 4294967295
  %3784 = getelementptr inbounds i32, ptr %6, i64 %3783
  %3785 = load i32, ptr %3784, align 4, !tbaa !6
  %3786 = mul nsw i32 %3785, %3782
  %3787 = add nsw i32 %3786, %3726
  %3788 = icmp sgt i64 %3724, 2
  %3789 = add nsw i64 %3725, -1
  %3790 = add i32 %3723, 1
  br i1 %3788, label %3722, label %3791, !llvm.loop !1067

3791:                                             ; preds = %3781, %3717
  %3792 = phi i32 [ %3721, %3717 ], [ %3787, %3781 ]
  %3793 = sext i32 %3792 to i64
  %3794 = getelementptr inbounds double, ptr %2, i64 %3793
  %3795 = load double, ptr %3794, align 8, !tbaa !19
  %3796 = getelementptr inbounds double, ptr %3684, i64 %3793
  %3797 = load double, ptr %3796, align 8, !tbaa !19
  %3798 = fcmp fast one double %3795, 0.000000e+00
  %3799 = fcmp fast olt double %3718, %3797
  %3800 = select i1 %3798, i1 %3799, i1 false
  br i1 %3800, label %3801, label %3802

3801:                                             ; preds = %3791
  store double %3797, ptr %3686, align 8, !tbaa !19
  br label %3802

3802:                                             ; preds = %3801, %3791
  %3803 = phi double [ %3797, %3801 ], [ %3718, %3791 ]
  %3804 = fadd fast double %3795, %3720
  %3805 = add nuw nsw i32 %3719, 1
  br i1 %3711, label %3806, label %3853

3806:                                             ; preds = %3802
  %3807 = load i32, ptr %4, align 4, !tbaa !6
  %3808 = load i32, ptr %12, align 4, !tbaa !6
  %3809 = add nsw i32 %3808, -1
  %3810 = icmp slt i32 %3807, %3809
  br i1 %3810, label %3830, label %3811

3811:                                             ; preds = %3806
  %3812 = icmp eq i32 %3807, %3809
  br i1 %3812, label %3813, label %3846

3813:                                             ; preds = %3811
  store i32 0, ptr %4, align 4, !tbaa !6
  %3814 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3814, ptr %6, align 4, !tbaa !6
  br i1 %3716, label %3853, label %3815

3815:                                             ; preds = %3813, %3840
  %3816 = phi i64 [ %3844, %3840 ], [ 1, %3813 ]
  %3817 = getelementptr inbounds i32, ptr %4, i64 %3816
  %3818 = load i32, ptr %3817, align 4, !tbaa !6
  %3819 = getelementptr inbounds i32, ptr %12, i64 %3816
  %3820 = load i32, ptr %3819, align 4, !tbaa !6
  %3821 = add nsw i32 %3820, -1
  %3822 = icmp slt i32 %3818, %3821
  br i1 %3822, label %3823, label %3838

3823:                                             ; preds = %3815
  br i1 %3810, label %3830, label %3824

3824:                                             ; preds = %3823
  %3825 = getelementptr inbounds i32, ptr %7, i64 %3816
  %3826 = load i32, ptr %3825, align 4, !tbaa !6
  %3827 = getelementptr inbounds i32, ptr %6, i64 %3816
  %3828 = load i32, ptr %3827, align 4, !tbaa !6
  %3829 = add nsw i32 %3828, %3826
  store i32 %3829, ptr %3827, align 4, !tbaa !6
  br label %3848

3830:                                             ; preds = %3806, %3823
  %3831 = phi i32 [ %3818, %3823 ], [ %3807, %3806 ]
  %3832 = phi ptr [ %3817, %3823 ], [ %4, %3806 ]
  %3833 = phi i64 [ %3816, %3823 ], [ 0, %3806 ]
  %3834 = add nsw i32 %3831, 1
  store i32 %3834, ptr %3832, align 4, !tbaa !6
  %3835 = getelementptr inbounds i32, ptr %7, i64 %3833
  %3836 = load i32, ptr %3835, align 4, !tbaa !6
  %3837 = getelementptr inbounds i32, ptr %6, i64 %3833
  br label %3848

3838:                                             ; preds = %3815
  %3839 = icmp eq i32 %3818, %3821
  br i1 %3839, label %3840, label %3846

3840:                                             ; preds = %3838
  store i32 0, ptr %3817, align 4, !tbaa !6
  %3841 = getelementptr inbounds i32, ptr %8, i64 %3816
  %3842 = load i32, ptr %3841, align 4, !tbaa !6
  %3843 = getelementptr inbounds i32, ptr %6, i64 %3816
  store i32 %3842, ptr %3843, align 4, !tbaa !6
  %3844 = add nuw nsw i64 %3816, 1
  %3845 = icmp eq i64 %3844, %3714
  br i1 %3845, label %3853, label %3815, !llvm.loop !1068

3846:                                             ; preds = %3811, %3838
  %3847 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1522, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5518

3848:                                             ; preds = %3824, %3830
  %3849 = phi ptr [ %3837, %3830 ], [ %3817, %3824 ]
  %3850 = phi i32 [ %3836, %3830 ], [ 1, %3824 ]
  %3851 = load i32, ptr %3849, align 4, !tbaa !6
  %3852 = add nsw i32 %3851, %3850
  store i32 %3852, ptr %3849, align 4, !tbaa !6
  br label %3853

3853:                                             ; preds = %3840, %3848, %3813, %3802
  %3854 = icmp eq i32 %3805, %5
  br i1 %3854, label %5513, label %3717, !llvm.loop !1069

3855:                                             ; preds = %3700, %3992
  %3856 = phi double [ %3687, %3700 ], [ %3940, %3992 ]
  %3857 = phi i32 [ 0, %3700 ], [ %3941, %3992 ]
  %3858 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3701, label %3859, label %3928

3859:                                             ; preds = %3855, %3918
  %3860 = phi i32 [ %3927, %3918 ], [ 0, %3855 ]
  %3861 = phi i64 [ %3869, %3918 ], [ %3705, %3855 ]
  %3862 = phi i64 [ %3926, %3918 ], [ %3704, %3855 ]
  %3863 = phi i32 [ %3924, %3918 ], [ %3858, %3855 ]
  %3864 = sub i32 %3703, %3860
  %3865 = tail call i32 @llvm.smin.i32(i32 %3864, i32 0)
  %3866 = sub i32 %3864, %3865
  %3867 = zext i32 %3866 to i64
  %3868 = add nuw nsw i64 %3867, 1
  %3869 = add nsw i64 %3861, -1
  %3870 = icmp ult i32 %3866, 31
  br i1 %3870, label %3906, label %3871

3871:                                             ; preds = %3859
  %3872 = and i64 %3868, 8589934560
  %3873 = sub i64 %3862, %3872
  br label %3874

3874:                                             ; preds = %3874, %3871
  %3875 = phi i64 [ 0, %3871 ], [ %3898, %3874 ]
  %3876 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3871 ], [ %3894, %3874 ]
  %3877 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3871 ], [ %3895, %3874 ]
  %3878 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3871 ], [ %3896, %3874 ]
  %3879 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3871 ], [ %3897, %3874 ]
  %3880 = sub i64 %3862, %3875
  %3881 = getelementptr inbounds i32, ptr %11, i64 %3880
  %3882 = getelementptr inbounds i32, ptr %3881, i64 -7
  %3883 = load <8 x i32>, ptr %3882, align 4, !tbaa !6
  %3884 = shufflevector <8 x i32> %3883, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3885 = getelementptr inbounds i32, ptr %3881, i64 -15
  %3886 = load <8 x i32>, ptr %3885, align 4, !tbaa !6
  %3887 = shufflevector <8 x i32> %3886, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3888 = getelementptr inbounds i32, ptr %3881, i64 -23
  %3889 = load <8 x i32>, ptr %3888, align 4, !tbaa !6
  %3890 = shufflevector <8 x i32> %3889, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3891 = getelementptr inbounds i32, ptr %3881, i64 -31
  %3892 = load <8 x i32>, ptr %3891, align 4, !tbaa !6
  %3893 = shufflevector <8 x i32> %3892, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3894 = mul <8 x i32> %3884, %3876
  %3895 = mul <8 x i32> %3887, %3877
  %3896 = mul <8 x i32> %3890, %3878
  %3897 = mul <8 x i32> %3893, %3879
  %3898 = add nuw i64 %3875, 32
  %3899 = icmp eq i64 %3898, %3872
  br i1 %3899, label %3900, label %3874, !llvm.loop !1070

3900:                                             ; preds = %3874
  %3901 = mul <8 x i32> %3895, %3894
  %3902 = mul <8 x i32> %3896, %3901
  %3903 = mul <8 x i32> %3897, %3902
  %3904 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3903)
  %3905 = icmp eq i64 %3868, %3872
  br i1 %3905, label %3918, label %3906

3906:                                             ; preds = %3859, %3900
  %3907 = phi i64 [ %3862, %3859 ], [ %3873, %3900 ]
  %3908 = phi i32 [ 1, %3859 ], [ %3904, %3900 ]
  br label %3909

3909:                                             ; preds = %3906, %3909
  %3910 = phi i64 [ %3915, %3909 ], [ %3907, %3906 ]
  %3911 = phi i32 [ %3914, %3909 ], [ %3908, %3906 ]
  %3912 = getelementptr inbounds i32, ptr %11, i64 %3910
  %3913 = load i32, ptr %3912, align 4, !tbaa !6
  %3914 = mul nsw i32 %3913, %3911
  %3915 = add nsw i64 %3910, -1
  %3916 = trunc i64 %3910 to i32
  %3917 = icmp sgt i32 %3916, 0
  br i1 %3917, label %3909, label %3918, !llvm.loop !1071

3918:                                             ; preds = %3909, %3900
  %3919 = phi i32 [ %3904, %3900 ], [ %3914, %3909 ]
  %3920 = and i64 %3869, 4294967295
  %3921 = getelementptr inbounds i32, ptr %6, i64 %3920
  %3922 = load i32, ptr %3921, align 4, !tbaa !6
  %3923 = mul nsw i32 %3922, %3919
  %3924 = add nsw i32 %3923, %3863
  %3925 = icmp sgt i64 %3861, 2
  %3926 = add nsw i64 %3862, -1
  %3927 = add i32 %3860, 1
  br i1 %3925, label %3859, label %3928, !llvm.loop !1072

3928:                                             ; preds = %3918, %3855
  %3929 = phi i32 [ %3858, %3855 ], [ %3924, %3918 ]
  %3930 = icmp slt i32 %3929, %5
  br i1 %3930, label %3933, label %3931

3931:                                             ; preds = %3928
  %3932 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1522, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5518

3933:                                             ; preds = %3928
  %3934 = sext i32 %3929 to i64
  %3935 = getelementptr inbounds double, ptr %3684, i64 %3934
  %3936 = load double, ptr %3935, align 8, !tbaa !19
  %3937 = fcmp fast olt double %3856, %3936
  br i1 %3937, label %3938, label %3939

3938:                                             ; preds = %3933
  store double %3936, ptr %3686, align 8, !tbaa !19
  br label %3939

3939:                                             ; preds = %3933, %3938
  %3940 = phi double [ %3856, %3933 ], [ %3936, %3938 ]
  %3941 = add nuw nsw i32 %3857, 1
  br i1 %3702, label %3942, label %3992

3942:                                             ; preds = %3939
  %3943 = load i32, ptr %4, align 4, !tbaa !6
  %3944 = load i32, ptr %12, align 4, !tbaa !6
  %3945 = add nsw i32 %3944, -1
  %3946 = icmp slt i32 %3943, %3945
  br i1 %3946, label %3969, label %3947

3947:                                             ; preds = %3942
  %3948 = icmp eq i32 %3943, %3945
  br i1 %3948, label %3949, label %3985

3949:                                             ; preds = %3947
  store i32 0, ptr %4, align 4, !tbaa !6
  %3950 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3950, ptr %6, align 4, !tbaa !6
  br i1 %3707, label %3992, label %3951

3951:                                             ; preds = %3949, %3979
  %3952 = phi i64 [ %3983, %3979 ], [ 1, %3949 ]
  %3953 = getelementptr inbounds i32, ptr %4, i64 %3952
  %3954 = load i32, ptr %3953, align 4, !tbaa !6
  %3955 = getelementptr inbounds i32, ptr %12, i64 %3952
  %3956 = load i32, ptr %3955, align 4, !tbaa !6
  %3957 = add nsw i32 %3956, -1
  %3958 = icmp slt i32 %3954, %3957
  br i1 %3958, label %3959, label %3977

3959:                                             ; preds = %3951
  br i1 %3946, label %3969, label %3960

3960:                                             ; preds = %3959
  %3961 = shl i64 %3952, 32
  %3962 = add i64 %3961, -4294967296
  %3963 = ashr exact i64 %3962, 32
  %3964 = getelementptr inbounds i32, ptr %7, i64 %3963
  %3965 = load i32, ptr %3964, align 4, !tbaa !6
  %3966 = getelementptr inbounds i32, ptr %6, i64 %3952
  %3967 = load i32, ptr %3966, align 4, !tbaa !6
  %3968 = add nsw i32 %3967, %3965
  store i32 %3968, ptr %3966, align 4, !tbaa !6
  br label %3987

3969:                                             ; preds = %3942, %3959
  %3970 = phi i32 [ %3954, %3959 ], [ %3943, %3942 ]
  %3971 = phi ptr [ %3953, %3959 ], [ %4, %3942 ]
  %3972 = phi i64 [ %3952, %3959 ], [ 0, %3942 ]
  %3973 = add nsw i32 %3970, 1
  store i32 %3973, ptr %3971, align 4, !tbaa !6
  %3974 = getelementptr inbounds i32, ptr %7, i64 %3972
  %3975 = load i32, ptr %3974, align 4, !tbaa !6
  %3976 = getelementptr inbounds i32, ptr %6, i64 %3972
  br label %3987

3977:                                             ; preds = %3951
  %3978 = icmp eq i32 %3954, %3957
  br i1 %3978, label %3979, label %3985

3979:                                             ; preds = %3977
  store i32 0, ptr %3953, align 4, !tbaa !6
  %3980 = getelementptr inbounds i32, ptr %8, i64 %3952
  %3981 = load i32, ptr %3980, align 4, !tbaa !6
  %3982 = getelementptr inbounds i32, ptr %6, i64 %3952
  store i32 %3981, ptr %3982, align 4, !tbaa !6
  %3983 = add nuw nsw i64 %3952, 1
  %3984 = icmp eq i64 %3983, %3705
  br i1 %3984, label %3992, label %3951, !llvm.loop !1073

3985:                                             ; preds = %3947, %3977
  %3986 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1522, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5518

3987:                                             ; preds = %3960, %3969
  %3988 = phi ptr [ %3976, %3969 ], [ %3953, %3960 ]
  %3989 = phi i32 [ %3975, %3969 ], [ 1, %3960 ]
  %3990 = load i32, ptr %3988, align 4, !tbaa !6
  %3991 = add nsw i32 %3990, %3989
  store i32 %3991, ptr %3988, align 4, !tbaa !6
  br label %3992

3992:                                             ; preds = %3979, %3987, %3949, %3939
  %3993 = icmp eq i32 %3941, %5
  br i1 %3993, label %5513, label %3855, !llvm.loop !1074

3994:                                             ; preds = %3693
  %3995 = getelementptr inbounds i32, ptr %3, i64 %19
  %3996 = load i32, ptr %3995, align 4, !tbaa !6
  %3997 = icmp eq i32 %3996, 0
  %3998 = icmp sgt i32 %5, 0
  br i1 %3997, label %4008, label %3999

3999:                                             ; preds = %3994
  br i1 %3998, label %4000, label %5513

4000:                                             ; preds = %3999
  %4001 = icmp sgt i32 %13, 1
  %4002 = icmp sgt i32 %13, 0
  %4003 = add i32 %13, -2
  %4004 = zext i32 %4003 to i64
  %4005 = zext i32 %13 to i64
  %4006 = add nuw i32 %5, 1
  %4007 = icmp eq i32 %13, 1
  br label %4151

4008:                                             ; preds = %3994
  br i1 %3998, label %4009, label %5513

4009:                                             ; preds = %4008
  %4010 = icmp sgt i32 %13, 1
  %4011 = icmp sgt i32 %13, 0
  %4012 = add i32 %13, -2
  %4013 = zext i32 %4012 to i64
  %4014 = zext i32 %13 to i64
  %4015 = add nuw i32 %5, 1
  %4016 = icmp eq i32 %13, 1
  br label %4017

4017:                                             ; preds = %4009, %4149
  %4018 = phi double [ %3687, %4009 ], [ %4099, %4149 ]
  %4019 = phi i32 [ 0, %4009 ], [ %4101, %4149 ]
  %4020 = phi double [ 0.000000e+00, %4009 ], [ %4100, %4149 ]
  %4021 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4010, label %4022, label %4091

4022:                                             ; preds = %4017, %4081
  %4023 = phi i32 [ %4090, %4081 ], [ 0, %4017 ]
  %4024 = phi i64 [ %4032, %4081 ], [ %4014, %4017 ]
  %4025 = phi i64 [ %4089, %4081 ], [ %4013, %4017 ]
  %4026 = phi i32 [ %4087, %4081 ], [ %4021, %4017 ]
  %4027 = sub i32 %4012, %4023
  %4028 = tail call i32 @llvm.smin.i32(i32 %4027, i32 0)
  %4029 = sub i32 %4027, %4028
  %4030 = zext i32 %4029 to i64
  %4031 = add nuw nsw i64 %4030, 1
  %4032 = add nsw i64 %4024, -1
  %4033 = icmp ult i32 %4029, 31
  br i1 %4033, label %4069, label %4034

4034:                                             ; preds = %4022
  %4035 = and i64 %4031, 8589934560
  %4036 = sub i64 %4025, %4035
  br label %4037

4037:                                             ; preds = %4037, %4034
  %4038 = phi i64 [ 0, %4034 ], [ %4061, %4037 ]
  %4039 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4034 ], [ %4057, %4037 ]
  %4040 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4034 ], [ %4058, %4037 ]
  %4041 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4034 ], [ %4059, %4037 ]
  %4042 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4034 ], [ %4060, %4037 ]
  %4043 = sub i64 %4025, %4038
  %4044 = getelementptr inbounds i32, ptr %9, i64 %4043
  %4045 = getelementptr inbounds i32, ptr %4044, i64 -7
  %4046 = load <8 x i32>, ptr %4045, align 4, !tbaa !6
  %4047 = shufflevector <8 x i32> %4046, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4048 = getelementptr inbounds i32, ptr %4044, i64 -15
  %4049 = load <8 x i32>, ptr %4048, align 4, !tbaa !6
  %4050 = shufflevector <8 x i32> %4049, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4051 = getelementptr inbounds i32, ptr %4044, i64 -23
  %4052 = load <8 x i32>, ptr %4051, align 4, !tbaa !6
  %4053 = shufflevector <8 x i32> %4052, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4054 = getelementptr inbounds i32, ptr %4044, i64 -31
  %4055 = load <8 x i32>, ptr %4054, align 4, !tbaa !6
  %4056 = shufflevector <8 x i32> %4055, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4057 = mul <8 x i32> %4047, %4039
  %4058 = mul <8 x i32> %4050, %4040
  %4059 = mul <8 x i32> %4053, %4041
  %4060 = mul <8 x i32> %4056, %4042
  %4061 = add nuw i64 %4038, 32
  %4062 = icmp eq i64 %4061, %4035
  br i1 %4062, label %4063, label %4037, !llvm.loop !1075

4063:                                             ; preds = %4037
  %4064 = mul <8 x i32> %4058, %4057
  %4065 = mul <8 x i32> %4059, %4064
  %4066 = mul <8 x i32> %4060, %4065
  %4067 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4066)
  %4068 = icmp eq i64 %4031, %4035
  br i1 %4068, label %4081, label %4069

4069:                                             ; preds = %4022, %4063
  %4070 = phi i64 [ %4025, %4022 ], [ %4036, %4063 ]
  %4071 = phi i32 [ 1, %4022 ], [ %4067, %4063 ]
  br label %4072

4072:                                             ; preds = %4069, %4072
  %4073 = phi i64 [ %4078, %4072 ], [ %4070, %4069 ]
  %4074 = phi i32 [ %4077, %4072 ], [ %4071, %4069 ]
  %4075 = getelementptr inbounds i32, ptr %9, i64 %4073
  %4076 = load i32, ptr %4075, align 4, !tbaa !6
  %4077 = mul nsw i32 %4076, %4074
  %4078 = add nsw i64 %4073, -1
  %4079 = trunc i64 %4073 to i32
  %4080 = icmp sgt i32 %4079, 0
  br i1 %4080, label %4072, label %4081, !llvm.loop !1076

4081:                                             ; preds = %4072, %4063
  %4082 = phi i32 [ %4067, %4063 ], [ %4077, %4072 ]
  %4083 = and i64 %4032, 4294967295
  %4084 = getelementptr inbounds i32, ptr %6, i64 %4083
  %4085 = load i32, ptr %4084, align 4, !tbaa !6
  %4086 = mul nsw i32 %4085, %4082
  %4087 = add nsw i32 %4086, %4026
  %4088 = icmp sgt i64 %4024, 2
  %4089 = add nsw i64 %4025, -1
  %4090 = add i32 %4023, 1
  br i1 %4088, label %4022, label %4091, !llvm.loop !1077

4091:                                             ; preds = %4081, %4017
  %4092 = phi i32 [ %4021, %4017 ], [ %4087, %4081 ]
  %4093 = sext i32 %4092 to i64
  %4094 = getelementptr inbounds double, ptr %3684, i64 %4093
  %4095 = load double, ptr %4094, align 8, !tbaa !19
  %4096 = fcmp fast olt double %4018, %4095
  br i1 %4096, label %4097, label %4098

4097:                                             ; preds = %4091
  store double %4095, ptr %3686, align 8, !tbaa !19
  br label %4098

4098:                                             ; preds = %4097, %4091
  %4099 = phi double [ %4095, %4097 ], [ %4018, %4091 ]
  %4100 = fadd fast double %4020, 1.000000e+00
  %4101 = add nuw nsw i32 %4019, 1
  br i1 %4011, label %4102, label %4149

4102:                                             ; preds = %4098
  %4103 = load i32, ptr %4, align 4, !tbaa !6
  %4104 = load i32, ptr %12, align 4, !tbaa !6
  %4105 = add nsw i32 %4104, -1
  %4106 = icmp slt i32 %4103, %4105
  br i1 %4106, label %4126, label %4107

4107:                                             ; preds = %4102
  %4108 = icmp eq i32 %4103, %4105
  br i1 %4108, label %4109, label %4142

4109:                                             ; preds = %4107
  store i32 0, ptr %4, align 4, !tbaa !6
  %4110 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4110, ptr %6, align 4, !tbaa !6
  br i1 %4016, label %4149, label %4111

4111:                                             ; preds = %4109, %4136
  %4112 = phi i64 [ %4140, %4136 ], [ 1, %4109 ]
  %4113 = getelementptr inbounds i32, ptr %4, i64 %4112
  %4114 = load i32, ptr %4113, align 4, !tbaa !6
  %4115 = getelementptr inbounds i32, ptr %12, i64 %4112
  %4116 = load i32, ptr %4115, align 4, !tbaa !6
  %4117 = add nsw i32 %4116, -1
  %4118 = icmp slt i32 %4114, %4117
  br i1 %4118, label %4119, label %4134

4119:                                             ; preds = %4111
  br i1 %4106, label %4126, label %4120

4120:                                             ; preds = %4119
  %4121 = getelementptr inbounds i32, ptr %7, i64 %4112
  %4122 = load i32, ptr %4121, align 4, !tbaa !6
  %4123 = getelementptr inbounds i32, ptr %6, i64 %4112
  %4124 = load i32, ptr %4123, align 4, !tbaa !6
  %4125 = add nsw i32 %4124, %4122
  store i32 %4125, ptr %4123, align 4, !tbaa !6
  br label %4144

4126:                                             ; preds = %4102, %4119
  %4127 = phi i32 [ %4114, %4119 ], [ %4103, %4102 ]
  %4128 = phi ptr [ %4113, %4119 ], [ %4, %4102 ]
  %4129 = phi i64 [ %4112, %4119 ], [ 0, %4102 ]
  %4130 = add nsw i32 %4127, 1
  store i32 %4130, ptr %4128, align 4, !tbaa !6
  %4131 = getelementptr inbounds i32, ptr %7, i64 %4129
  %4132 = load i32, ptr %4131, align 4, !tbaa !6
  %4133 = getelementptr inbounds i32, ptr %6, i64 %4129
  br label %4144

4134:                                             ; preds = %4111
  %4135 = icmp eq i32 %4114, %4117
  br i1 %4135, label %4136, label %4142

4136:                                             ; preds = %4134
  store i32 0, ptr %4113, align 4, !tbaa !6
  %4137 = getelementptr inbounds i32, ptr %8, i64 %4112
  %4138 = load i32, ptr %4137, align 4, !tbaa !6
  %4139 = getelementptr inbounds i32, ptr %6, i64 %4112
  store i32 %4138, ptr %4139, align 4, !tbaa !6
  %4140 = add nuw nsw i64 %4112, 1
  %4141 = icmp eq i64 %4140, %4014
  br i1 %4141, label %4149, label %4111, !llvm.loop !1078

4142:                                             ; preds = %4107, %4134
  %4143 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1522, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5518

4144:                                             ; preds = %4120, %4126
  %4145 = phi ptr [ %4133, %4126 ], [ %4113, %4120 ]
  %4146 = phi i32 [ %4132, %4126 ], [ 1, %4120 ]
  %4147 = load i32, ptr %4145, align 4, !tbaa !6
  %4148 = add nsw i32 %4147, %4146
  store i32 %4148, ptr %4145, align 4, !tbaa !6
  br label %4149

4149:                                             ; preds = %4136, %4144, %4109, %4098
  %4150 = icmp eq i32 %4101, %5
  br i1 %4150, label %5513, label %4017, !llvm.loop !1079

4151:                                             ; preds = %4000, %4288
  %4152 = phi double [ %3687, %4000 ], [ %4236, %4288 ]
  %4153 = phi i32 [ 0, %4000 ], [ %4237, %4288 ]
  %4154 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4001, label %4155, label %4224

4155:                                             ; preds = %4151, %4214
  %4156 = phi i32 [ %4223, %4214 ], [ 0, %4151 ]
  %4157 = phi i64 [ %4165, %4214 ], [ %4005, %4151 ]
  %4158 = phi i64 [ %4222, %4214 ], [ %4004, %4151 ]
  %4159 = phi i32 [ %4220, %4214 ], [ %4154, %4151 ]
  %4160 = sub i32 %4003, %4156
  %4161 = tail call i32 @llvm.smin.i32(i32 %4160, i32 0)
  %4162 = sub i32 %4160, %4161
  %4163 = zext i32 %4162 to i64
  %4164 = add nuw nsw i64 %4163, 1
  %4165 = add nsw i64 %4157, -1
  %4166 = icmp ult i32 %4162, 31
  br i1 %4166, label %4202, label %4167

4167:                                             ; preds = %4155
  %4168 = and i64 %4164, 8589934560
  %4169 = sub i64 %4158, %4168
  br label %4170

4170:                                             ; preds = %4170, %4167
  %4171 = phi i64 [ 0, %4167 ], [ %4194, %4170 ]
  %4172 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4167 ], [ %4190, %4170 ]
  %4173 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4167 ], [ %4191, %4170 ]
  %4174 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4167 ], [ %4192, %4170 ]
  %4175 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4167 ], [ %4193, %4170 ]
  %4176 = sub i64 %4158, %4171
  %4177 = getelementptr inbounds i32, ptr %11, i64 %4176
  %4178 = getelementptr inbounds i32, ptr %4177, i64 -7
  %4179 = load <8 x i32>, ptr %4178, align 4, !tbaa !6
  %4180 = shufflevector <8 x i32> %4179, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4181 = getelementptr inbounds i32, ptr %4177, i64 -15
  %4182 = load <8 x i32>, ptr %4181, align 4, !tbaa !6
  %4183 = shufflevector <8 x i32> %4182, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4184 = getelementptr inbounds i32, ptr %4177, i64 -23
  %4185 = load <8 x i32>, ptr %4184, align 4, !tbaa !6
  %4186 = shufflevector <8 x i32> %4185, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4187 = getelementptr inbounds i32, ptr %4177, i64 -31
  %4188 = load <8 x i32>, ptr %4187, align 4, !tbaa !6
  %4189 = shufflevector <8 x i32> %4188, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4190 = mul <8 x i32> %4180, %4172
  %4191 = mul <8 x i32> %4183, %4173
  %4192 = mul <8 x i32> %4186, %4174
  %4193 = mul <8 x i32> %4189, %4175
  %4194 = add nuw i64 %4171, 32
  %4195 = icmp eq i64 %4194, %4168
  br i1 %4195, label %4196, label %4170, !llvm.loop !1080

4196:                                             ; preds = %4170
  %4197 = mul <8 x i32> %4191, %4190
  %4198 = mul <8 x i32> %4192, %4197
  %4199 = mul <8 x i32> %4193, %4198
  %4200 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4199)
  %4201 = icmp eq i64 %4164, %4168
  br i1 %4201, label %4214, label %4202

4202:                                             ; preds = %4155, %4196
  %4203 = phi i64 [ %4158, %4155 ], [ %4169, %4196 ]
  %4204 = phi i32 [ 1, %4155 ], [ %4200, %4196 ]
  br label %4205

4205:                                             ; preds = %4202, %4205
  %4206 = phi i64 [ %4211, %4205 ], [ %4203, %4202 ]
  %4207 = phi i32 [ %4210, %4205 ], [ %4204, %4202 ]
  %4208 = getelementptr inbounds i32, ptr %11, i64 %4206
  %4209 = load i32, ptr %4208, align 4, !tbaa !6
  %4210 = mul nsw i32 %4209, %4207
  %4211 = add nsw i64 %4206, -1
  %4212 = trunc i64 %4206 to i32
  %4213 = icmp sgt i32 %4212, 0
  br i1 %4213, label %4205, label %4214, !llvm.loop !1081

4214:                                             ; preds = %4205, %4196
  %4215 = phi i32 [ %4200, %4196 ], [ %4210, %4205 ]
  %4216 = and i64 %4165, 4294967295
  %4217 = getelementptr inbounds i32, ptr %6, i64 %4216
  %4218 = load i32, ptr %4217, align 4, !tbaa !6
  %4219 = mul nsw i32 %4218, %4215
  %4220 = add nsw i32 %4219, %4159
  %4221 = icmp sgt i64 %4157, 2
  %4222 = add nsw i64 %4158, -1
  %4223 = add i32 %4156, 1
  br i1 %4221, label %4155, label %4224, !llvm.loop !1082

4224:                                             ; preds = %4214, %4151
  %4225 = phi i32 [ %4154, %4151 ], [ %4220, %4214 ]
  %4226 = icmp slt i32 %4225, %5
  br i1 %4226, label %4229, label %4227

4227:                                             ; preds = %4224
  %4228 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1522, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5518

4229:                                             ; preds = %4224
  %4230 = sext i32 %4225 to i64
  %4231 = getelementptr inbounds double, ptr %3684, i64 %4230
  %4232 = load double, ptr %4231, align 8, !tbaa !19
  %4233 = fcmp fast olt double %4152, %4232
  br i1 %4233, label %4234, label %4235

4234:                                             ; preds = %4229
  store double %4232, ptr %3686, align 8, !tbaa !19
  br label %4235

4235:                                             ; preds = %4234, %4229
  %4236 = phi double [ %4232, %4234 ], [ %4152, %4229 ]
  %4237 = add nuw nsw i32 %4153, 1
  br i1 %4002, label %4238, label %4288

4238:                                             ; preds = %4235
  %4239 = load i32, ptr %4, align 4, !tbaa !6
  %4240 = load i32, ptr %12, align 4, !tbaa !6
  %4241 = add nsw i32 %4240, -1
  %4242 = icmp slt i32 %4239, %4241
  br i1 %4242, label %4265, label %4243

4243:                                             ; preds = %4238
  %4244 = icmp eq i32 %4239, %4241
  br i1 %4244, label %4245, label %4281

4245:                                             ; preds = %4243
  store i32 0, ptr %4, align 4, !tbaa !6
  %4246 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4246, ptr %6, align 4, !tbaa !6
  br i1 %4007, label %4288, label %4247

4247:                                             ; preds = %4245, %4275
  %4248 = phi i64 [ %4279, %4275 ], [ 1, %4245 ]
  %4249 = getelementptr inbounds i32, ptr %4, i64 %4248
  %4250 = load i32, ptr %4249, align 4, !tbaa !6
  %4251 = getelementptr inbounds i32, ptr %12, i64 %4248
  %4252 = load i32, ptr %4251, align 4, !tbaa !6
  %4253 = add nsw i32 %4252, -1
  %4254 = icmp slt i32 %4250, %4253
  br i1 %4254, label %4255, label %4273

4255:                                             ; preds = %4247
  br i1 %4242, label %4265, label %4256

4256:                                             ; preds = %4255
  %4257 = shl i64 %4248, 32
  %4258 = add i64 %4257, -4294967296
  %4259 = ashr exact i64 %4258, 32
  %4260 = getelementptr inbounds i32, ptr %7, i64 %4259
  %4261 = load i32, ptr %4260, align 4, !tbaa !6
  %4262 = getelementptr inbounds i32, ptr %6, i64 %4248
  %4263 = load i32, ptr %4262, align 4, !tbaa !6
  %4264 = add nsw i32 %4263, %4261
  store i32 %4264, ptr %4262, align 4, !tbaa !6
  br label %4283

4265:                                             ; preds = %4238, %4255
  %4266 = phi i32 [ %4250, %4255 ], [ %4239, %4238 ]
  %4267 = phi ptr [ %4249, %4255 ], [ %4, %4238 ]
  %4268 = phi i64 [ %4248, %4255 ], [ 0, %4238 ]
  %4269 = add nsw i32 %4266, 1
  store i32 %4269, ptr %4267, align 4, !tbaa !6
  %4270 = getelementptr inbounds i32, ptr %7, i64 %4268
  %4271 = load i32, ptr %4270, align 4, !tbaa !6
  %4272 = getelementptr inbounds i32, ptr %6, i64 %4268
  br label %4283

4273:                                             ; preds = %4247
  %4274 = icmp eq i32 %4250, %4253
  br i1 %4274, label %4275, label %4281

4275:                                             ; preds = %4273
  store i32 0, ptr %4249, align 4, !tbaa !6
  %4276 = getelementptr inbounds i32, ptr %8, i64 %4248
  %4277 = load i32, ptr %4276, align 4, !tbaa !6
  %4278 = getelementptr inbounds i32, ptr %6, i64 %4248
  store i32 %4277, ptr %4278, align 4, !tbaa !6
  %4279 = add nuw nsw i64 %4248, 1
  %4280 = icmp eq i64 %4279, %4005
  br i1 %4280, label %4288, label %4247, !llvm.loop !1083

4281:                                             ; preds = %4243, %4273
  %4282 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1522, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5518

4283:                                             ; preds = %4256, %4265
  %4284 = phi ptr [ %4272, %4265 ], [ %4249, %4256 ]
  %4285 = phi i32 [ %4271, %4265 ], [ 1, %4256 ]
  %4286 = load i32, ptr %4284, align 4, !tbaa !6
  %4287 = add nsw i32 %4286, %4285
  store i32 %4287, ptr %4284, align 4, !tbaa !6
  br label %4288

4288:                                             ; preds = %4275, %4283, %4245, %4235
  %4289 = icmp eq i32 %4237, %5
  br i1 %4289, label %5513, label %4151, !llvm.loop !1084

4290:                                             ; preds = %3693
  %4291 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1522, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5513

4292:                                             ; preds = %18
  %4293 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4294 = load ptr, ptr %4293, align 8, !tbaa !10
  %4295 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4296 = load ptr, ptr %4295, align 8, !tbaa !10
  %4297 = load double, ptr %4294, align 8, !tbaa !19
  %4298 = fptrunc double %4297 to float
  store float %4298, ptr %4296, align 4, !tbaa !163
  %4299 = icmp eq i32 %13, 0
  br i1 %4299, label %5513, label %4300

4300:                                             ; preds = %4292
  switch i32 %1, label %4901 [
    i32 1, label %4301
    i32 0, label %4603
  ]

4301:                                             ; preds = %4300
  %4302 = getelementptr inbounds i32, ptr %3, i64 %19
  %4303 = load i32, ptr %4302, align 4, !tbaa !6
  %4304 = icmp eq i32 %4303, 0
  %4305 = icmp sgt i32 %5, 0
  br i1 %4304, label %4315, label %4306

4306:                                             ; preds = %4301
  br i1 %4305, label %4307, label %5513

4307:                                             ; preds = %4306
  %4308 = icmp sgt i32 %13, 1
  %4309 = icmp sgt i32 %13, 0
  %4310 = add i32 %13, -2
  %4311 = zext i32 %4310 to i64
  %4312 = zext i32 %13 to i64
  %4313 = add nuw i32 %5, 1
  %4314 = icmp eq i32 %13, 1
  br label %4463

4315:                                             ; preds = %4301
  br i1 %4305, label %4316, label %5513

4316:                                             ; preds = %4315
  %4317 = icmp sgt i32 %13, 1
  %4318 = icmp sgt i32 %13, 0
  %4319 = add i32 %13, -2
  %4320 = zext i32 %4319 to i64
  %4321 = zext i32 %13 to i64
  %4322 = add nuw i32 %5, 1
  %4323 = icmp eq i32 %13, 1
  br label %4324

4324:                                             ; preds = %4316, %4461
  %4325 = phi float [ %4298, %4316 ], [ %4411, %4461 ]
  %4326 = phi i32 [ 0, %4316 ], [ %4413, %4461 ]
  %4327 = phi double [ 0.000000e+00, %4316 ], [ %4412, %4461 ]
  %4328 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4317, label %4329, label %4398

4329:                                             ; preds = %4324, %4388
  %4330 = phi i32 [ %4397, %4388 ], [ 0, %4324 ]
  %4331 = phi i64 [ %4339, %4388 ], [ %4321, %4324 ]
  %4332 = phi i64 [ %4396, %4388 ], [ %4320, %4324 ]
  %4333 = phi i32 [ %4394, %4388 ], [ %4328, %4324 ]
  %4334 = sub i32 %4319, %4330
  %4335 = tail call i32 @llvm.smin.i32(i32 %4334, i32 0)
  %4336 = sub i32 %4334, %4335
  %4337 = zext i32 %4336 to i64
  %4338 = add nuw nsw i64 %4337, 1
  %4339 = add nsw i64 %4331, -1
  %4340 = icmp ult i32 %4336, 31
  br i1 %4340, label %4376, label %4341

4341:                                             ; preds = %4329
  %4342 = and i64 %4338, 8589934560
  %4343 = sub i64 %4332, %4342
  br label %4344

4344:                                             ; preds = %4344, %4341
  %4345 = phi i64 [ 0, %4341 ], [ %4368, %4344 ]
  %4346 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4341 ], [ %4364, %4344 ]
  %4347 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4341 ], [ %4365, %4344 ]
  %4348 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4341 ], [ %4366, %4344 ]
  %4349 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4341 ], [ %4367, %4344 ]
  %4350 = sub i64 %4332, %4345
  %4351 = getelementptr inbounds i32, ptr %9, i64 %4350
  %4352 = getelementptr inbounds i32, ptr %4351, i64 -7
  %4353 = load <8 x i32>, ptr %4352, align 4, !tbaa !6
  %4354 = shufflevector <8 x i32> %4353, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4355 = getelementptr inbounds i32, ptr %4351, i64 -15
  %4356 = load <8 x i32>, ptr %4355, align 4, !tbaa !6
  %4357 = shufflevector <8 x i32> %4356, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4358 = getelementptr inbounds i32, ptr %4351, i64 -23
  %4359 = load <8 x i32>, ptr %4358, align 4, !tbaa !6
  %4360 = shufflevector <8 x i32> %4359, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4361 = getelementptr inbounds i32, ptr %4351, i64 -31
  %4362 = load <8 x i32>, ptr %4361, align 4, !tbaa !6
  %4363 = shufflevector <8 x i32> %4362, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4364 = mul <8 x i32> %4354, %4346
  %4365 = mul <8 x i32> %4357, %4347
  %4366 = mul <8 x i32> %4360, %4348
  %4367 = mul <8 x i32> %4363, %4349
  %4368 = add nuw i64 %4345, 32
  %4369 = icmp eq i64 %4368, %4342
  br i1 %4369, label %4370, label %4344, !llvm.loop !1085

4370:                                             ; preds = %4344
  %4371 = mul <8 x i32> %4365, %4364
  %4372 = mul <8 x i32> %4366, %4371
  %4373 = mul <8 x i32> %4367, %4372
  %4374 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4373)
  %4375 = icmp eq i64 %4338, %4342
  br i1 %4375, label %4388, label %4376

4376:                                             ; preds = %4329, %4370
  %4377 = phi i64 [ %4332, %4329 ], [ %4343, %4370 ]
  %4378 = phi i32 [ 1, %4329 ], [ %4374, %4370 ]
  br label %4379

4379:                                             ; preds = %4376, %4379
  %4380 = phi i64 [ %4385, %4379 ], [ %4377, %4376 ]
  %4381 = phi i32 [ %4384, %4379 ], [ %4378, %4376 ]
  %4382 = getelementptr inbounds i32, ptr %9, i64 %4380
  %4383 = load i32, ptr %4382, align 4, !tbaa !6
  %4384 = mul nsw i32 %4383, %4381
  %4385 = add nsw i64 %4380, -1
  %4386 = trunc i64 %4380 to i32
  %4387 = icmp sgt i32 %4386, 0
  br i1 %4387, label %4379, label %4388, !llvm.loop !1086

4388:                                             ; preds = %4379, %4370
  %4389 = phi i32 [ %4374, %4370 ], [ %4384, %4379 ]
  %4390 = and i64 %4339, 4294967295
  %4391 = getelementptr inbounds i32, ptr %6, i64 %4390
  %4392 = load i32, ptr %4391, align 4, !tbaa !6
  %4393 = mul nsw i32 %4392, %4389
  %4394 = add nsw i32 %4393, %4333
  %4395 = icmp sgt i64 %4331, 2
  %4396 = add nsw i64 %4332, -1
  %4397 = add i32 %4330, 1
  br i1 %4395, label %4329, label %4398, !llvm.loop !1087

4398:                                             ; preds = %4388, %4324
  %4399 = phi i32 [ %4328, %4324 ], [ %4394, %4388 ]
  %4400 = sext i32 %4399 to i64
  %4401 = getelementptr inbounds double, ptr %2, i64 %4400
  %4402 = load double, ptr %4401, align 8, !tbaa !19
  %4403 = getelementptr inbounds double, ptr %4294, i64 %4400
  %4404 = load double, ptr %4403, align 8, !tbaa !19
  %4405 = fptrunc double %4404 to float
  %4406 = fcmp fast one double %4402, 0.000000e+00
  %4407 = fcmp fast olt float %4325, %4405
  %4408 = select i1 %4406, i1 %4407, i1 false
  br i1 %4408, label %4409, label %4410

4409:                                             ; preds = %4398
  store float %4405, ptr %4296, align 4, !tbaa !163
  br label %4410

4410:                                             ; preds = %4409, %4398
  %4411 = phi float [ %4405, %4409 ], [ %4325, %4398 ]
  %4412 = fadd fast double %4402, %4327
  %4413 = add nuw nsw i32 %4326, 1
  br i1 %4318, label %4414, label %4461

4414:                                             ; preds = %4410
  %4415 = load i32, ptr %4, align 4, !tbaa !6
  %4416 = load i32, ptr %12, align 4, !tbaa !6
  %4417 = add nsw i32 %4416, -1
  %4418 = icmp slt i32 %4415, %4417
  br i1 %4418, label %4438, label %4419

4419:                                             ; preds = %4414
  %4420 = icmp eq i32 %4415, %4417
  br i1 %4420, label %4421, label %4454

4421:                                             ; preds = %4419
  store i32 0, ptr %4, align 4, !tbaa !6
  %4422 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4422, ptr %6, align 4, !tbaa !6
  br i1 %4323, label %4461, label %4423

4423:                                             ; preds = %4421, %4448
  %4424 = phi i64 [ %4452, %4448 ], [ 1, %4421 ]
  %4425 = getelementptr inbounds i32, ptr %4, i64 %4424
  %4426 = load i32, ptr %4425, align 4, !tbaa !6
  %4427 = getelementptr inbounds i32, ptr %12, i64 %4424
  %4428 = load i32, ptr %4427, align 4, !tbaa !6
  %4429 = add nsw i32 %4428, -1
  %4430 = icmp slt i32 %4426, %4429
  br i1 %4430, label %4431, label %4446

4431:                                             ; preds = %4423
  br i1 %4418, label %4438, label %4432

4432:                                             ; preds = %4431
  %4433 = getelementptr inbounds i32, ptr %7, i64 %4424
  %4434 = load i32, ptr %4433, align 4, !tbaa !6
  %4435 = getelementptr inbounds i32, ptr %6, i64 %4424
  %4436 = load i32, ptr %4435, align 4, !tbaa !6
  %4437 = add nsw i32 %4436, %4434
  store i32 %4437, ptr %4435, align 4, !tbaa !6
  br label %4456

4438:                                             ; preds = %4414, %4431
  %4439 = phi i32 [ %4426, %4431 ], [ %4415, %4414 ]
  %4440 = phi ptr [ %4425, %4431 ], [ %4, %4414 ]
  %4441 = phi i64 [ %4424, %4431 ], [ 0, %4414 ]
  %4442 = add nsw i32 %4439, 1
  store i32 %4442, ptr %4440, align 4, !tbaa !6
  %4443 = getelementptr inbounds i32, ptr %7, i64 %4441
  %4444 = load i32, ptr %4443, align 4, !tbaa !6
  %4445 = getelementptr inbounds i32, ptr %6, i64 %4441
  br label %4456

4446:                                             ; preds = %4423
  %4447 = icmp eq i32 %4426, %4429
  br i1 %4447, label %4448, label %4454

4448:                                             ; preds = %4446
  store i32 0, ptr %4425, align 4, !tbaa !6
  %4449 = getelementptr inbounds i32, ptr %8, i64 %4424
  %4450 = load i32, ptr %4449, align 4, !tbaa !6
  %4451 = getelementptr inbounds i32, ptr %6, i64 %4424
  store i32 %4450, ptr %4451, align 4, !tbaa !6
  %4452 = add nuw nsw i64 %4424, 1
  %4453 = icmp eq i64 %4452, %4321
  br i1 %4453, label %4461, label %4423, !llvm.loop !1088

4454:                                             ; preds = %4419, %4446
  %4455 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1526, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5518

4456:                                             ; preds = %4432, %4438
  %4457 = phi ptr [ %4445, %4438 ], [ %4425, %4432 ]
  %4458 = phi i32 [ %4444, %4438 ], [ 1, %4432 ]
  %4459 = load i32, ptr %4457, align 4, !tbaa !6
  %4460 = add nsw i32 %4459, %4458
  store i32 %4460, ptr %4457, align 4, !tbaa !6
  br label %4461

4461:                                             ; preds = %4448, %4456, %4421, %4410
  %4462 = icmp eq i32 %4413, %5
  br i1 %4462, label %5513, label %4324, !llvm.loop !1089

4463:                                             ; preds = %4307, %4601
  %4464 = phi float [ %4298, %4307 ], [ %4549, %4601 ]
  %4465 = phi i32 [ 0, %4307 ], [ %4550, %4601 ]
  %4466 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4308, label %4467, label %4536

4467:                                             ; preds = %4463, %4526
  %4468 = phi i32 [ %4535, %4526 ], [ 0, %4463 ]
  %4469 = phi i64 [ %4477, %4526 ], [ %4312, %4463 ]
  %4470 = phi i64 [ %4534, %4526 ], [ %4311, %4463 ]
  %4471 = phi i32 [ %4532, %4526 ], [ %4466, %4463 ]
  %4472 = sub i32 %4310, %4468
  %4473 = tail call i32 @llvm.smin.i32(i32 %4472, i32 0)
  %4474 = sub i32 %4472, %4473
  %4475 = zext i32 %4474 to i64
  %4476 = add nuw nsw i64 %4475, 1
  %4477 = add nsw i64 %4469, -1
  %4478 = icmp ult i32 %4474, 31
  br i1 %4478, label %4514, label %4479

4479:                                             ; preds = %4467
  %4480 = and i64 %4476, 8589934560
  %4481 = sub i64 %4470, %4480
  br label %4482

4482:                                             ; preds = %4482, %4479
  %4483 = phi i64 [ 0, %4479 ], [ %4506, %4482 ]
  %4484 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4479 ], [ %4502, %4482 ]
  %4485 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4479 ], [ %4503, %4482 ]
  %4486 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4479 ], [ %4504, %4482 ]
  %4487 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4479 ], [ %4505, %4482 ]
  %4488 = sub i64 %4470, %4483
  %4489 = getelementptr inbounds i32, ptr %11, i64 %4488
  %4490 = getelementptr inbounds i32, ptr %4489, i64 -7
  %4491 = load <8 x i32>, ptr %4490, align 4, !tbaa !6
  %4492 = shufflevector <8 x i32> %4491, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4493 = getelementptr inbounds i32, ptr %4489, i64 -15
  %4494 = load <8 x i32>, ptr %4493, align 4, !tbaa !6
  %4495 = shufflevector <8 x i32> %4494, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4496 = getelementptr inbounds i32, ptr %4489, i64 -23
  %4497 = load <8 x i32>, ptr %4496, align 4, !tbaa !6
  %4498 = shufflevector <8 x i32> %4497, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4499 = getelementptr inbounds i32, ptr %4489, i64 -31
  %4500 = load <8 x i32>, ptr %4499, align 4, !tbaa !6
  %4501 = shufflevector <8 x i32> %4500, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4502 = mul <8 x i32> %4492, %4484
  %4503 = mul <8 x i32> %4495, %4485
  %4504 = mul <8 x i32> %4498, %4486
  %4505 = mul <8 x i32> %4501, %4487
  %4506 = add nuw i64 %4483, 32
  %4507 = icmp eq i64 %4506, %4480
  br i1 %4507, label %4508, label %4482, !llvm.loop !1090

4508:                                             ; preds = %4482
  %4509 = mul <8 x i32> %4503, %4502
  %4510 = mul <8 x i32> %4504, %4509
  %4511 = mul <8 x i32> %4505, %4510
  %4512 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4511)
  %4513 = icmp eq i64 %4476, %4480
  br i1 %4513, label %4526, label %4514

4514:                                             ; preds = %4467, %4508
  %4515 = phi i64 [ %4470, %4467 ], [ %4481, %4508 ]
  %4516 = phi i32 [ 1, %4467 ], [ %4512, %4508 ]
  br label %4517

4517:                                             ; preds = %4514, %4517
  %4518 = phi i64 [ %4523, %4517 ], [ %4515, %4514 ]
  %4519 = phi i32 [ %4522, %4517 ], [ %4516, %4514 ]
  %4520 = getelementptr inbounds i32, ptr %11, i64 %4518
  %4521 = load i32, ptr %4520, align 4, !tbaa !6
  %4522 = mul nsw i32 %4521, %4519
  %4523 = add nsw i64 %4518, -1
  %4524 = trunc i64 %4518 to i32
  %4525 = icmp sgt i32 %4524, 0
  br i1 %4525, label %4517, label %4526, !llvm.loop !1091

4526:                                             ; preds = %4517, %4508
  %4527 = phi i32 [ %4512, %4508 ], [ %4522, %4517 ]
  %4528 = and i64 %4477, 4294967295
  %4529 = getelementptr inbounds i32, ptr %6, i64 %4528
  %4530 = load i32, ptr %4529, align 4, !tbaa !6
  %4531 = mul nsw i32 %4530, %4527
  %4532 = add nsw i32 %4531, %4471
  %4533 = icmp sgt i64 %4469, 2
  %4534 = add nsw i64 %4470, -1
  %4535 = add i32 %4468, 1
  br i1 %4533, label %4467, label %4536, !llvm.loop !1092

4536:                                             ; preds = %4526, %4463
  %4537 = phi i32 [ %4466, %4463 ], [ %4532, %4526 ]
  %4538 = icmp slt i32 %4537, %5
  br i1 %4538, label %4541, label %4539

4539:                                             ; preds = %4536
  %4540 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1526, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5518

4541:                                             ; preds = %4536
  %4542 = sext i32 %4537 to i64
  %4543 = getelementptr inbounds double, ptr %4294, i64 %4542
  %4544 = load double, ptr %4543, align 8, !tbaa !19
  %4545 = fptrunc double %4544 to float
  %4546 = fcmp fast olt float %4464, %4545
  br i1 %4546, label %4547, label %4548

4547:                                             ; preds = %4541
  store float %4545, ptr %4296, align 4, !tbaa !163
  br label %4548

4548:                                             ; preds = %4541, %4547
  %4549 = phi float [ %4464, %4541 ], [ %4545, %4547 ]
  %4550 = add nuw nsw i32 %4465, 1
  br i1 %4309, label %4551, label %4601

4551:                                             ; preds = %4548
  %4552 = load i32, ptr %4, align 4, !tbaa !6
  %4553 = load i32, ptr %12, align 4, !tbaa !6
  %4554 = add nsw i32 %4553, -1
  %4555 = icmp slt i32 %4552, %4554
  br i1 %4555, label %4578, label %4556

4556:                                             ; preds = %4551
  %4557 = icmp eq i32 %4552, %4554
  br i1 %4557, label %4558, label %4594

4558:                                             ; preds = %4556
  store i32 0, ptr %4, align 4, !tbaa !6
  %4559 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4559, ptr %6, align 4, !tbaa !6
  br i1 %4314, label %4601, label %4560

4560:                                             ; preds = %4558, %4588
  %4561 = phi i64 [ %4592, %4588 ], [ 1, %4558 ]
  %4562 = getelementptr inbounds i32, ptr %4, i64 %4561
  %4563 = load i32, ptr %4562, align 4, !tbaa !6
  %4564 = getelementptr inbounds i32, ptr %12, i64 %4561
  %4565 = load i32, ptr %4564, align 4, !tbaa !6
  %4566 = add nsw i32 %4565, -1
  %4567 = icmp slt i32 %4563, %4566
  br i1 %4567, label %4568, label %4586

4568:                                             ; preds = %4560
  br i1 %4555, label %4578, label %4569

4569:                                             ; preds = %4568
  %4570 = shl i64 %4561, 32
  %4571 = add i64 %4570, -4294967296
  %4572 = ashr exact i64 %4571, 32
  %4573 = getelementptr inbounds i32, ptr %7, i64 %4572
  %4574 = load i32, ptr %4573, align 4, !tbaa !6
  %4575 = getelementptr inbounds i32, ptr %6, i64 %4561
  %4576 = load i32, ptr %4575, align 4, !tbaa !6
  %4577 = add nsw i32 %4576, %4574
  store i32 %4577, ptr %4575, align 4, !tbaa !6
  br label %4596

4578:                                             ; preds = %4551, %4568
  %4579 = phi i32 [ %4563, %4568 ], [ %4552, %4551 ]
  %4580 = phi ptr [ %4562, %4568 ], [ %4, %4551 ]
  %4581 = phi i64 [ %4561, %4568 ], [ 0, %4551 ]
  %4582 = add nsw i32 %4579, 1
  store i32 %4582, ptr %4580, align 4, !tbaa !6
  %4583 = getelementptr inbounds i32, ptr %7, i64 %4581
  %4584 = load i32, ptr %4583, align 4, !tbaa !6
  %4585 = getelementptr inbounds i32, ptr %6, i64 %4581
  br label %4596

4586:                                             ; preds = %4560
  %4587 = icmp eq i32 %4563, %4566
  br i1 %4587, label %4588, label %4594

4588:                                             ; preds = %4586
  store i32 0, ptr %4562, align 4, !tbaa !6
  %4589 = getelementptr inbounds i32, ptr %8, i64 %4561
  %4590 = load i32, ptr %4589, align 4, !tbaa !6
  %4591 = getelementptr inbounds i32, ptr %6, i64 %4561
  store i32 %4590, ptr %4591, align 4, !tbaa !6
  %4592 = add nuw nsw i64 %4561, 1
  %4593 = icmp eq i64 %4592, %4312
  br i1 %4593, label %4601, label %4560, !llvm.loop !1093

4594:                                             ; preds = %4556, %4586
  %4595 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1526, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5518

4596:                                             ; preds = %4569, %4578
  %4597 = phi ptr [ %4585, %4578 ], [ %4562, %4569 ]
  %4598 = phi i32 [ %4584, %4578 ], [ 1, %4569 ]
  %4599 = load i32, ptr %4597, align 4, !tbaa !6
  %4600 = add nsw i32 %4599, %4598
  store i32 %4600, ptr %4597, align 4, !tbaa !6
  br label %4601

4601:                                             ; preds = %4588, %4596, %4558, %4548
  %4602 = icmp eq i32 %4550, %5
  br i1 %4602, label %5513, label %4463, !llvm.loop !1094

4603:                                             ; preds = %4300
  %4604 = getelementptr inbounds i32, ptr %3, i64 %19
  %4605 = load i32, ptr %4604, align 4, !tbaa !6
  %4606 = icmp eq i32 %4605, 0
  %4607 = icmp sgt i32 %5, 0
  br i1 %4606, label %4617, label %4608

4608:                                             ; preds = %4603
  br i1 %4607, label %4609, label %5513

4609:                                             ; preds = %4608
  %4610 = icmp sgt i32 %13, 1
  %4611 = icmp sgt i32 %13, 0
  %4612 = add i32 %13, -2
  %4613 = zext i32 %4612 to i64
  %4614 = zext i32 %13 to i64
  %4615 = add nuw i32 %5, 1
  %4616 = icmp eq i32 %13, 1
  br label %4761

4617:                                             ; preds = %4603
  br i1 %4607, label %4618, label %5513

4618:                                             ; preds = %4617
  %4619 = icmp sgt i32 %13, 1
  %4620 = icmp sgt i32 %13, 0
  %4621 = add i32 %13, -2
  %4622 = zext i32 %4621 to i64
  %4623 = zext i32 %13 to i64
  %4624 = add nuw i32 %5, 1
  %4625 = icmp eq i32 %13, 1
  br label %4626

4626:                                             ; preds = %4618, %4759
  %4627 = phi float [ %4298, %4618 ], [ %4709, %4759 ]
  %4628 = phi i32 [ 0, %4618 ], [ %4711, %4759 ]
  %4629 = phi double [ 0.000000e+00, %4618 ], [ %4710, %4759 ]
  %4630 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4619, label %4631, label %4700

4631:                                             ; preds = %4626, %4690
  %4632 = phi i32 [ %4699, %4690 ], [ 0, %4626 ]
  %4633 = phi i64 [ %4641, %4690 ], [ %4623, %4626 ]
  %4634 = phi i64 [ %4698, %4690 ], [ %4622, %4626 ]
  %4635 = phi i32 [ %4696, %4690 ], [ %4630, %4626 ]
  %4636 = sub i32 %4621, %4632
  %4637 = tail call i32 @llvm.smin.i32(i32 %4636, i32 0)
  %4638 = sub i32 %4636, %4637
  %4639 = zext i32 %4638 to i64
  %4640 = add nuw nsw i64 %4639, 1
  %4641 = add nsw i64 %4633, -1
  %4642 = icmp ult i32 %4638, 31
  br i1 %4642, label %4678, label %4643

4643:                                             ; preds = %4631
  %4644 = and i64 %4640, 8589934560
  %4645 = sub i64 %4634, %4644
  br label %4646

4646:                                             ; preds = %4646, %4643
  %4647 = phi i64 [ 0, %4643 ], [ %4670, %4646 ]
  %4648 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4643 ], [ %4666, %4646 ]
  %4649 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4643 ], [ %4667, %4646 ]
  %4650 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4643 ], [ %4668, %4646 ]
  %4651 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4643 ], [ %4669, %4646 ]
  %4652 = sub i64 %4634, %4647
  %4653 = getelementptr inbounds i32, ptr %9, i64 %4652
  %4654 = getelementptr inbounds i32, ptr %4653, i64 -7
  %4655 = load <8 x i32>, ptr %4654, align 4, !tbaa !6
  %4656 = shufflevector <8 x i32> %4655, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4657 = getelementptr inbounds i32, ptr %4653, i64 -15
  %4658 = load <8 x i32>, ptr %4657, align 4, !tbaa !6
  %4659 = shufflevector <8 x i32> %4658, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4660 = getelementptr inbounds i32, ptr %4653, i64 -23
  %4661 = load <8 x i32>, ptr %4660, align 4, !tbaa !6
  %4662 = shufflevector <8 x i32> %4661, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4663 = getelementptr inbounds i32, ptr %4653, i64 -31
  %4664 = load <8 x i32>, ptr %4663, align 4, !tbaa !6
  %4665 = shufflevector <8 x i32> %4664, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4666 = mul <8 x i32> %4656, %4648
  %4667 = mul <8 x i32> %4659, %4649
  %4668 = mul <8 x i32> %4662, %4650
  %4669 = mul <8 x i32> %4665, %4651
  %4670 = add nuw i64 %4647, 32
  %4671 = icmp eq i64 %4670, %4644
  br i1 %4671, label %4672, label %4646, !llvm.loop !1095

4672:                                             ; preds = %4646
  %4673 = mul <8 x i32> %4667, %4666
  %4674 = mul <8 x i32> %4668, %4673
  %4675 = mul <8 x i32> %4669, %4674
  %4676 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4675)
  %4677 = icmp eq i64 %4640, %4644
  br i1 %4677, label %4690, label %4678

4678:                                             ; preds = %4631, %4672
  %4679 = phi i64 [ %4634, %4631 ], [ %4645, %4672 ]
  %4680 = phi i32 [ 1, %4631 ], [ %4676, %4672 ]
  br label %4681

4681:                                             ; preds = %4678, %4681
  %4682 = phi i64 [ %4687, %4681 ], [ %4679, %4678 ]
  %4683 = phi i32 [ %4686, %4681 ], [ %4680, %4678 ]
  %4684 = getelementptr inbounds i32, ptr %9, i64 %4682
  %4685 = load i32, ptr %4684, align 4, !tbaa !6
  %4686 = mul nsw i32 %4685, %4683
  %4687 = add nsw i64 %4682, -1
  %4688 = trunc i64 %4682 to i32
  %4689 = icmp sgt i32 %4688, 0
  br i1 %4689, label %4681, label %4690, !llvm.loop !1096

4690:                                             ; preds = %4681, %4672
  %4691 = phi i32 [ %4676, %4672 ], [ %4686, %4681 ]
  %4692 = and i64 %4641, 4294967295
  %4693 = getelementptr inbounds i32, ptr %6, i64 %4692
  %4694 = load i32, ptr %4693, align 4, !tbaa !6
  %4695 = mul nsw i32 %4694, %4691
  %4696 = add nsw i32 %4695, %4635
  %4697 = icmp sgt i64 %4633, 2
  %4698 = add nsw i64 %4634, -1
  %4699 = add i32 %4632, 1
  br i1 %4697, label %4631, label %4700, !llvm.loop !1097

4700:                                             ; preds = %4690, %4626
  %4701 = phi i32 [ %4630, %4626 ], [ %4696, %4690 ]
  %4702 = sext i32 %4701 to i64
  %4703 = getelementptr inbounds double, ptr %4294, i64 %4702
  %4704 = load double, ptr %4703, align 8, !tbaa !19
  %4705 = fptrunc double %4704 to float
  %4706 = fcmp fast olt float %4627, %4705
  br i1 %4706, label %4707, label %4708

4707:                                             ; preds = %4700
  store float %4705, ptr %4296, align 4, !tbaa !163
  br label %4708

4708:                                             ; preds = %4707, %4700
  %4709 = phi float [ %4705, %4707 ], [ %4627, %4700 ]
  %4710 = fadd fast double %4629, 1.000000e+00
  %4711 = add nuw nsw i32 %4628, 1
  br i1 %4620, label %4712, label %4759

4712:                                             ; preds = %4708
  %4713 = load i32, ptr %4, align 4, !tbaa !6
  %4714 = load i32, ptr %12, align 4, !tbaa !6
  %4715 = add nsw i32 %4714, -1
  %4716 = icmp slt i32 %4713, %4715
  br i1 %4716, label %4736, label %4717

4717:                                             ; preds = %4712
  %4718 = icmp eq i32 %4713, %4715
  br i1 %4718, label %4719, label %4752

4719:                                             ; preds = %4717
  store i32 0, ptr %4, align 4, !tbaa !6
  %4720 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4720, ptr %6, align 4, !tbaa !6
  br i1 %4625, label %4759, label %4721

4721:                                             ; preds = %4719, %4746
  %4722 = phi i64 [ %4750, %4746 ], [ 1, %4719 ]
  %4723 = getelementptr inbounds i32, ptr %4, i64 %4722
  %4724 = load i32, ptr %4723, align 4, !tbaa !6
  %4725 = getelementptr inbounds i32, ptr %12, i64 %4722
  %4726 = load i32, ptr %4725, align 4, !tbaa !6
  %4727 = add nsw i32 %4726, -1
  %4728 = icmp slt i32 %4724, %4727
  br i1 %4728, label %4729, label %4744

4729:                                             ; preds = %4721
  br i1 %4716, label %4736, label %4730

4730:                                             ; preds = %4729
  %4731 = getelementptr inbounds i32, ptr %7, i64 %4722
  %4732 = load i32, ptr %4731, align 4, !tbaa !6
  %4733 = getelementptr inbounds i32, ptr %6, i64 %4722
  %4734 = load i32, ptr %4733, align 4, !tbaa !6
  %4735 = add nsw i32 %4734, %4732
  store i32 %4735, ptr %4733, align 4, !tbaa !6
  br label %4754

4736:                                             ; preds = %4712, %4729
  %4737 = phi i32 [ %4724, %4729 ], [ %4713, %4712 ]
  %4738 = phi ptr [ %4723, %4729 ], [ %4, %4712 ]
  %4739 = phi i64 [ %4722, %4729 ], [ 0, %4712 ]
  %4740 = add nsw i32 %4737, 1
  store i32 %4740, ptr %4738, align 4, !tbaa !6
  %4741 = getelementptr inbounds i32, ptr %7, i64 %4739
  %4742 = load i32, ptr %4741, align 4, !tbaa !6
  %4743 = getelementptr inbounds i32, ptr %6, i64 %4739
  br label %4754

4744:                                             ; preds = %4721
  %4745 = icmp eq i32 %4724, %4727
  br i1 %4745, label %4746, label %4752

4746:                                             ; preds = %4744
  store i32 0, ptr %4723, align 4, !tbaa !6
  %4747 = getelementptr inbounds i32, ptr %8, i64 %4722
  %4748 = load i32, ptr %4747, align 4, !tbaa !6
  %4749 = getelementptr inbounds i32, ptr %6, i64 %4722
  store i32 %4748, ptr %4749, align 4, !tbaa !6
  %4750 = add nuw nsw i64 %4722, 1
  %4751 = icmp eq i64 %4750, %4623
  br i1 %4751, label %4759, label %4721, !llvm.loop !1098

4752:                                             ; preds = %4717, %4744
  %4753 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1526, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5518

4754:                                             ; preds = %4730, %4736
  %4755 = phi ptr [ %4743, %4736 ], [ %4723, %4730 ]
  %4756 = phi i32 [ %4742, %4736 ], [ 1, %4730 ]
  %4757 = load i32, ptr %4755, align 4, !tbaa !6
  %4758 = add nsw i32 %4757, %4756
  store i32 %4758, ptr %4755, align 4, !tbaa !6
  br label %4759

4759:                                             ; preds = %4746, %4754, %4719, %4708
  %4760 = icmp eq i32 %4711, %5
  br i1 %4760, label %5513, label %4626, !llvm.loop !1099

4761:                                             ; preds = %4609, %4899
  %4762 = phi float [ %4298, %4609 ], [ %4847, %4899 ]
  %4763 = phi i32 [ 0, %4609 ], [ %4848, %4899 ]
  %4764 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4610, label %4765, label %4834

4765:                                             ; preds = %4761, %4824
  %4766 = phi i32 [ %4833, %4824 ], [ 0, %4761 ]
  %4767 = phi i64 [ %4775, %4824 ], [ %4614, %4761 ]
  %4768 = phi i64 [ %4832, %4824 ], [ %4613, %4761 ]
  %4769 = phi i32 [ %4830, %4824 ], [ %4764, %4761 ]
  %4770 = sub i32 %4612, %4766
  %4771 = tail call i32 @llvm.smin.i32(i32 %4770, i32 0)
  %4772 = sub i32 %4770, %4771
  %4773 = zext i32 %4772 to i64
  %4774 = add nuw nsw i64 %4773, 1
  %4775 = add nsw i64 %4767, -1
  %4776 = icmp ult i32 %4772, 31
  br i1 %4776, label %4812, label %4777

4777:                                             ; preds = %4765
  %4778 = and i64 %4774, 8589934560
  %4779 = sub i64 %4768, %4778
  br label %4780

4780:                                             ; preds = %4780, %4777
  %4781 = phi i64 [ 0, %4777 ], [ %4804, %4780 ]
  %4782 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4777 ], [ %4800, %4780 ]
  %4783 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4777 ], [ %4801, %4780 ]
  %4784 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4777 ], [ %4802, %4780 ]
  %4785 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4777 ], [ %4803, %4780 ]
  %4786 = sub i64 %4768, %4781
  %4787 = getelementptr inbounds i32, ptr %11, i64 %4786
  %4788 = getelementptr inbounds i32, ptr %4787, i64 -7
  %4789 = load <8 x i32>, ptr %4788, align 4, !tbaa !6
  %4790 = shufflevector <8 x i32> %4789, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4791 = getelementptr inbounds i32, ptr %4787, i64 -15
  %4792 = load <8 x i32>, ptr %4791, align 4, !tbaa !6
  %4793 = shufflevector <8 x i32> %4792, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4794 = getelementptr inbounds i32, ptr %4787, i64 -23
  %4795 = load <8 x i32>, ptr %4794, align 4, !tbaa !6
  %4796 = shufflevector <8 x i32> %4795, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4797 = getelementptr inbounds i32, ptr %4787, i64 -31
  %4798 = load <8 x i32>, ptr %4797, align 4, !tbaa !6
  %4799 = shufflevector <8 x i32> %4798, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4800 = mul <8 x i32> %4790, %4782
  %4801 = mul <8 x i32> %4793, %4783
  %4802 = mul <8 x i32> %4796, %4784
  %4803 = mul <8 x i32> %4799, %4785
  %4804 = add nuw i64 %4781, 32
  %4805 = icmp eq i64 %4804, %4778
  br i1 %4805, label %4806, label %4780, !llvm.loop !1100

4806:                                             ; preds = %4780
  %4807 = mul <8 x i32> %4801, %4800
  %4808 = mul <8 x i32> %4802, %4807
  %4809 = mul <8 x i32> %4803, %4808
  %4810 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4809)
  %4811 = icmp eq i64 %4774, %4778
  br i1 %4811, label %4824, label %4812

4812:                                             ; preds = %4765, %4806
  %4813 = phi i64 [ %4768, %4765 ], [ %4779, %4806 ]
  %4814 = phi i32 [ 1, %4765 ], [ %4810, %4806 ]
  br label %4815

4815:                                             ; preds = %4812, %4815
  %4816 = phi i64 [ %4821, %4815 ], [ %4813, %4812 ]
  %4817 = phi i32 [ %4820, %4815 ], [ %4814, %4812 ]
  %4818 = getelementptr inbounds i32, ptr %11, i64 %4816
  %4819 = load i32, ptr %4818, align 4, !tbaa !6
  %4820 = mul nsw i32 %4819, %4817
  %4821 = add nsw i64 %4816, -1
  %4822 = trunc i64 %4816 to i32
  %4823 = icmp sgt i32 %4822, 0
  br i1 %4823, label %4815, label %4824, !llvm.loop !1101

4824:                                             ; preds = %4815, %4806
  %4825 = phi i32 [ %4810, %4806 ], [ %4820, %4815 ]
  %4826 = and i64 %4775, 4294967295
  %4827 = getelementptr inbounds i32, ptr %6, i64 %4826
  %4828 = load i32, ptr %4827, align 4, !tbaa !6
  %4829 = mul nsw i32 %4828, %4825
  %4830 = add nsw i32 %4829, %4769
  %4831 = icmp sgt i64 %4767, 2
  %4832 = add nsw i64 %4768, -1
  %4833 = add i32 %4766, 1
  br i1 %4831, label %4765, label %4834, !llvm.loop !1102

4834:                                             ; preds = %4824, %4761
  %4835 = phi i32 [ %4764, %4761 ], [ %4830, %4824 ]
  %4836 = icmp slt i32 %4835, %5
  br i1 %4836, label %4839, label %4837

4837:                                             ; preds = %4834
  %4838 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1526, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5518

4839:                                             ; preds = %4834
  %4840 = sext i32 %4835 to i64
  %4841 = getelementptr inbounds double, ptr %4294, i64 %4840
  %4842 = load double, ptr %4841, align 8, !tbaa !19
  %4843 = fptrunc double %4842 to float
  %4844 = fcmp fast olt float %4762, %4843
  br i1 %4844, label %4845, label %4846

4845:                                             ; preds = %4839
  store float %4843, ptr %4296, align 4, !tbaa !163
  br label %4846

4846:                                             ; preds = %4845, %4839
  %4847 = phi float [ %4843, %4845 ], [ %4762, %4839 ]
  %4848 = add nuw nsw i32 %4763, 1
  br i1 %4611, label %4849, label %4899

4849:                                             ; preds = %4846
  %4850 = load i32, ptr %4, align 4, !tbaa !6
  %4851 = load i32, ptr %12, align 4, !tbaa !6
  %4852 = add nsw i32 %4851, -1
  %4853 = icmp slt i32 %4850, %4852
  br i1 %4853, label %4876, label %4854

4854:                                             ; preds = %4849
  %4855 = icmp eq i32 %4850, %4852
  br i1 %4855, label %4856, label %4892

4856:                                             ; preds = %4854
  store i32 0, ptr %4, align 4, !tbaa !6
  %4857 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4857, ptr %6, align 4, !tbaa !6
  br i1 %4616, label %4899, label %4858

4858:                                             ; preds = %4856, %4886
  %4859 = phi i64 [ %4890, %4886 ], [ 1, %4856 ]
  %4860 = getelementptr inbounds i32, ptr %4, i64 %4859
  %4861 = load i32, ptr %4860, align 4, !tbaa !6
  %4862 = getelementptr inbounds i32, ptr %12, i64 %4859
  %4863 = load i32, ptr %4862, align 4, !tbaa !6
  %4864 = add nsw i32 %4863, -1
  %4865 = icmp slt i32 %4861, %4864
  br i1 %4865, label %4866, label %4884

4866:                                             ; preds = %4858
  br i1 %4853, label %4876, label %4867

4867:                                             ; preds = %4866
  %4868 = shl i64 %4859, 32
  %4869 = add i64 %4868, -4294967296
  %4870 = ashr exact i64 %4869, 32
  %4871 = getelementptr inbounds i32, ptr %7, i64 %4870
  %4872 = load i32, ptr %4871, align 4, !tbaa !6
  %4873 = getelementptr inbounds i32, ptr %6, i64 %4859
  %4874 = load i32, ptr %4873, align 4, !tbaa !6
  %4875 = add nsw i32 %4874, %4872
  store i32 %4875, ptr %4873, align 4, !tbaa !6
  br label %4894

4876:                                             ; preds = %4849, %4866
  %4877 = phi i32 [ %4861, %4866 ], [ %4850, %4849 ]
  %4878 = phi ptr [ %4860, %4866 ], [ %4, %4849 ]
  %4879 = phi i64 [ %4859, %4866 ], [ 0, %4849 ]
  %4880 = add nsw i32 %4877, 1
  store i32 %4880, ptr %4878, align 4, !tbaa !6
  %4881 = getelementptr inbounds i32, ptr %7, i64 %4879
  %4882 = load i32, ptr %4881, align 4, !tbaa !6
  %4883 = getelementptr inbounds i32, ptr %6, i64 %4879
  br label %4894

4884:                                             ; preds = %4858
  %4885 = icmp eq i32 %4861, %4864
  br i1 %4885, label %4886, label %4892

4886:                                             ; preds = %4884
  store i32 0, ptr %4860, align 4, !tbaa !6
  %4887 = getelementptr inbounds i32, ptr %8, i64 %4859
  %4888 = load i32, ptr %4887, align 4, !tbaa !6
  %4889 = getelementptr inbounds i32, ptr %6, i64 %4859
  store i32 %4888, ptr %4889, align 4, !tbaa !6
  %4890 = add nuw nsw i64 %4859, 1
  %4891 = icmp eq i64 %4890, %4614
  br i1 %4891, label %4899, label %4858, !llvm.loop !1103

4892:                                             ; preds = %4854, %4884
  %4893 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1526, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5518

4894:                                             ; preds = %4867, %4876
  %4895 = phi ptr [ %4883, %4876 ], [ %4860, %4867 ]
  %4896 = phi i32 [ %4882, %4876 ], [ 1, %4867 ]
  %4897 = load i32, ptr %4895, align 4, !tbaa !6
  %4898 = add nsw i32 %4897, %4896
  store i32 %4898, ptr %4895, align 4, !tbaa !6
  br label %4899

4899:                                             ; preds = %4886, %4894, %4856, %4846
  %4900 = icmp eq i32 %4848, %5
  br i1 %4900, label %5513, label %4761, !llvm.loop !1104

4901:                                             ; preds = %4300
  %4902 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1526, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5513

4903:                                             ; preds = %18
  %4904 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4905 = load ptr, ptr %4904, align 8, !tbaa !10
  %4906 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4907 = load ptr, ptr %4906, align 8, !tbaa !10
  %4908 = load double, ptr %4905, align 8, !tbaa !19
  store double %4908, ptr %4907, align 8, !tbaa !19
  %4909 = icmp eq i32 %13, 0
  br i1 %4909, label %4910, label %4914

4910:                                             ; preds = %4903
  %4911 = load double, ptr %4905, align 8, !tbaa !19
  %4912 = fcmp fast olt double %4908, %4911
  br i1 %4912, label %4913, label %5513

4913:                                             ; preds = %4910
  store double %4911, ptr %4907, align 8, !tbaa !19
  br label %5513

4914:                                             ; preds = %4903
  switch i32 %1, label %5511 [
    i32 1, label %4915
    i32 0, label %5215
  ]

4915:                                             ; preds = %4914
  %4916 = getelementptr inbounds i32, ptr %3, i64 %19
  %4917 = load i32, ptr %4916, align 4, !tbaa !6
  %4918 = icmp eq i32 %4917, 0
  %4919 = icmp sgt i32 %5, 0
  br i1 %4918, label %4929, label %4920

4920:                                             ; preds = %4915
  br i1 %4919, label %4921, label %5513

4921:                                             ; preds = %4920
  %4922 = icmp sgt i32 %13, 1
  %4923 = icmp sgt i32 %13, 0
  %4924 = add i32 %13, -2
  %4925 = zext i32 %4924 to i64
  %4926 = zext i32 %13 to i64
  %4927 = add nuw i32 %5, 1
  %4928 = icmp eq i32 %13, 1
  br label %5076

4929:                                             ; preds = %4915
  br i1 %4919, label %4930, label %5513

4930:                                             ; preds = %4929
  %4931 = icmp sgt i32 %13, 1
  %4932 = icmp sgt i32 %13, 0
  %4933 = add i32 %13, -2
  %4934 = zext i32 %4933 to i64
  %4935 = zext i32 %13 to i64
  %4936 = add nuw i32 %5, 1
  %4937 = icmp eq i32 %13, 1
  br label %4938

4938:                                             ; preds = %4930, %5074
  %4939 = phi double [ %4908, %4930 ], [ %5024, %5074 ]
  %4940 = phi i32 [ 0, %4930 ], [ %5026, %5074 ]
  %4941 = phi double [ 0.000000e+00, %4930 ], [ %5025, %5074 ]
  %4942 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4931, label %4943, label %5012

4943:                                             ; preds = %4938, %5002
  %4944 = phi i32 [ %5011, %5002 ], [ 0, %4938 ]
  %4945 = phi i64 [ %4953, %5002 ], [ %4935, %4938 ]
  %4946 = phi i64 [ %5010, %5002 ], [ %4934, %4938 ]
  %4947 = phi i32 [ %5008, %5002 ], [ %4942, %4938 ]
  %4948 = sub i32 %4933, %4944
  %4949 = tail call i32 @llvm.smin.i32(i32 %4948, i32 0)
  %4950 = sub i32 %4948, %4949
  %4951 = zext i32 %4950 to i64
  %4952 = add nuw nsw i64 %4951, 1
  %4953 = add nsw i64 %4945, -1
  %4954 = icmp ult i32 %4950, 31
  br i1 %4954, label %4990, label %4955

4955:                                             ; preds = %4943
  %4956 = and i64 %4952, 8589934560
  %4957 = sub i64 %4946, %4956
  br label %4958

4958:                                             ; preds = %4958, %4955
  %4959 = phi i64 [ 0, %4955 ], [ %4982, %4958 ]
  %4960 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4955 ], [ %4978, %4958 ]
  %4961 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4955 ], [ %4979, %4958 ]
  %4962 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4955 ], [ %4980, %4958 ]
  %4963 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4955 ], [ %4981, %4958 ]
  %4964 = sub i64 %4946, %4959
  %4965 = getelementptr inbounds i32, ptr %9, i64 %4964
  %4966 = getelementptr inbounds i32, ptr %4965, i64 -7
  %4967 = load <8 x i32>, ptr %4966, align 4, !tbaa !6
  %4968 = shufflevector <8 x i32> %4967, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4969 = getelementptr inbounds i32, ptr %4965, i64 -15
  %4970 = load <8 x i32>, ptr %4969, align 4, !tbaa !6
  %4971 = shufflevector <8 x i32> %4970, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4972 = getelementptr inbounds i32, ptr %4965, i64 -23
  %4973 = load <8 x i32>, ptr %4972, align 4, !tbaa !6
  %4974 = shufflevector <8 x i32> %4973, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4975 = getelementptr inbounds i32, ptr %4965, i64 -31
  %4976 = load <8 x i32>, ptr %4975, align 4, !tbaa !6
  %4977 = shufflevector <8 x i32> %4976, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4978 = mul <8 x i32> %4968, %4960
  %4979 = mul <8 x i32> %4971, %4961
  %4980 = mul <8 x i32> %4974, %4962
  %4981 = mul <8 x i32> %4977, %4963
  %4982 = add nuw i64 %4959, 32
  %4983 = icmp eq i64 %4982, %4956
  br i1 %4983, label %4984, label %4958, !llvm.loop !1105

4984:                                             ; preds = %4958
  %4985 = mul <8 x i32> %4979, %4978
  %4986 = mul <8 x i32> %4980, %4985
  %4987 = mul <8 x i32> %4981, %4986
  %4988 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4987)
  %4989 = icmp eq i64 %4952, %4956
  br i1 %4989, label %5002, label %4990

4990:                                             ; preds = %4943, %4984
  %4991 = phi i64 [ %4946, %4943 ], [ %4957, %4984 ]
  %4992 = phi i32 [ 1, %4943 ], [ %4988, %4984 ]
  br label %4993

4993:                                             ; preds = %4990, %4993
  %4994 = phi i64 [ %4999, %4993 ], [ %4991, %4990 ]
  %4995 = phi i32 [ %4998, %4993 ], [ %4992, %4990 ]
  %4996 = getelementptr inbounds i32, ptr %9, i64 %4994
  %4997 = load i32, ptr %4996, align 4, !tbaa !6
  %4998 = mul nsw i32 %4997, %4995
  %4999 = add nsw i64 %4994, -1
  %5000 = trunc i64 %4994 to i32
  %5001 = icmp sgt i32 %5000, 0
  br i1 %5001, label %4993, label %5002, !llvm.loop !1106

5002:                                             ; preds = %4993, %4984
  %5003 = phi i32 [ %4988, %4984 ], [ %4998, %4993 ]
  %5004 = and i64 %4953, 4294967295
  %5005 = getelementptr inbounds i32, ptr %6, i64 %5004
  %5006 = load i32, ptr %5005, align 4, !tbaa !6
  %5007 = mul nsw i32 %5006, %5003
  %5008 = add nsw i32 %5007, %4947
  %5009 = icmp sgt i64 %4945, 2
  %5010 = add nsw i64 %4946, -1
  %5011 = add i32 %4944, 1
  br i1 %5009, label %4943, label %5012, !llvm.loop !1107

5012:                                             ; preds = %5002, %4938
  %5013 = phi i32 [ %4942, %4938 ], [ %5008, %5002 ]
  %5014 = sext i32 %5013 to i64
  %5015 = getelementptr inbounds double, ptr %2, i64 %5014
  %5016 = load double, ptr %5015, align 8, !tbaa !19
  %5017 = getelementptr inbounds double, ptr %4905, i64 %5014
  %5018 = load double, ptr %5017, align 8, !tbaa !19
  %5019 = fcmp fast one double %5016, 0.000000e+00
  %5020 = fcmp fast olt double %4939, %5018
  %5021 = select i1 %5019, i1 %5020, i1 false
  br i1 %5021, label %5022, label %5023

5022:                                             ; preds = %5012
  store double %5018, ptr %4907, align 8, !tbaa !19
  br label %5023

5023:                                             ; preds = %5022, %5012
  %5024 = phi double [ %5018, %5022 ], [ %4939, %5012 ]
  %5025 = fadd fast double %5016, %4941
  %5026 = add nuw nsw i32 %4940, 1
  br i1 %4932, label %5027, label %5074

5027:                                             ; preds = %5023
  %5028 = load i32, ptr %4, align 4, !tbaa !6
  %5029 = load i32, ptr %12, align 4, !tbaa !6
  %5030 = add nsw i32 %5029, -1
  %5031 = icmp slt i32 %5028, %5030
  br i1 %5031, label %5051, label %5032

5032:                                             ; preds = %5027
  %5033 = icmp eq i32 %5028, %5030
  br i1 %5033, label %5034, label %5067

5034:                                             ; preds = %5032
  store i32 0, ptr %4, align 4, !tbaa !6
  %5035 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5035, ptr %6, align 4, !tbaa !6
  br i1 %4937, label %5074, label %5036

5036:                                             ; preds = %5034, %5061
  %5037 = phi i64 [ %5065, %5061 ], [ 1, %5034 ]
  %5038 = getelementptr inbounds i32, ptr %4, i64 %5037
  %5039 = load i32, ptr %5038, align 4, !tbaa !6
  %5040 = getelementptr inbounds i32, ptr %12, i64 %5037
  %5041 = load i32, ptr %5040, align 4, !tbaa !6
  %5042 = add nsw i32 %5041, -1
  %5043 = icmp slt i32 %5039, %5042
  br i1 %5043, label %5044, label %5059

5044:                                             ; preds = %5036
  br i1 %5031, label %5051, label %5045

5045:                                             ; preds = %5044
  %5046 = getelementptr inbounds i32, ptr %7, i64 %5037
  %5047 = load i32, ptr %5046, align 4, !tbaa !6
  %5048 = getelementptr inbounds i32, ptr %6, i64 %5037
  %5049 = load i32, ptr %5048, align 4, !tbaa !6
  %5050 = add nsw i32 %5049, %5047
  store i32 %5050, ptr %5048, align 4, !tbaa !6
  br label %5069

5051:                                             ; preds = %5027, %5044
  %5052 = phi i32 [ %5039, %5044 ], [ %5028, %5027 ]
  %5053 = phi ptr [ %5038, %5044 ], [ %4, %5027 ]
  %5054 = phi i64 [ %5037, %5044 ], [ 0, %5027 ]
  %5055 = add nsw i32 %5052, 1
  store i32 %5055, ptr %5053, align 4, !tbaa !6
  %5056 = getelementptr inbounds i32, ptr %7, i64 %5054
  %5057 = load i32, ptr %5056, align 4, !tbaa !6
  %5058 = getelementptr inbounds i32, ptr %6, i64 %5054
  br label %5069

5059:                                             ; preds = %5036
  %5060 = icmp eq i32 %5039, %5042
  br i1 %5060, label %5061, label %5067

5061:                                             ; preds = %5059
  store i32 0, ptr %5038, align 4, !tbaa !6
  %5062 = getelementptr inbounds i32, ptr %8, i64 %5037
  %5063 = load i32, ptr %5062, align 4, !tbaa !6
  %5064 = getelementptr inbounds i32, ptr %6, i64 %5037
  store i32 %5063, ptr %5064, align 4, !tbaa !6
  %5065 = add nuw nsw i64 %5037, 1
  %5066 = icmp eq i64 %5065, %4935
  br i1 %5066, label %5074, label %5036, !llvm.loop !1108

5067:                                             ; preds = %5032, %5059
  %5068 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1531, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5518

5069:                                             ; preds = %5045, %5051
  %5070 = phi ptr [ %5058, %5051 ], [ %5038, %5045 ]
  %5071 = phi i32 [ %5057, %5051 ], [ 1, %5045 ]
  %5072 = load i32, ptr %5070, align 4, !tbaa !6
  %5073 = add nsw i32 %5072, %5071
  store i32 %5073, ptr %5070, align 4, !tbaa !6
  br label %5074

5074:                                             ; preds = %5061, %5069, %5034, %5023
  %5075 = icmp eq i32 %5026, %5
  br i1 %5075, label %5513, label %4938, !llvm.loop !1109

5076:                                             ; preds = %4921, %5213
  %5077 = phi double [ %4908, %4921 ], [ %5161, %5213 ]
  %5078 = phi i32 [ 0, %4921 ], [ %5162, %5213 ]
  %5079 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4922, label %5080, label %5149

5080:                                             ; preds = %5076, %5139
  %5081 = phi i32 [ %5148, %5139 ], [ 0, %5076 ]
  %5082 = phi i64 [ %5090, %5139 ], [ %4926, %5076 ]
  %5083 = phi i64 [ %5147, %5139 ], [ %4925, %5076 ]
  %5084 = phi i32 [ %5145, %5139 ], [ %5079, %5076 ]
  %5085 = sub i32 %4924, %5081
  %5086 = tail call i32 @llvm.smin.i32(i32 %5085, i32 0)
  %5087 = sub i32 %5085, %5086
  %5088 = zext i32 %5087 to i64
  %5089 = add nuw nsw i64 %5088, 1
  %5090 = add nsw i64 %5082, -1
  %5091 = icmp ult i32 %5087, 31
  br i1 %5091, label %5127, label %5092

5092:                                             ; preds = %5080
  %5093 = and i64 %5089, 8589934560
  %5094 = sub i64 %5083, %5093
  br label %5095

5095:                                             ; preds = %5095, %5092
  %5096 = phi i64 [ 0, %5092 ], [ %5119, %5095 ]
  %5097 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5092 ], [ %5115, %5095 ]
  %5098 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5092 ], [ %5116, %5095 ]
  %5099 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5092 ], [ %5117, %5095 ]
  %5100 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5092 ], [ %5118, %5095 ]
  %5101 = sub i64 %5083, %5096
  %5102 = getelementptr inbounds i32, ptr %11, i64 %5101
  %5103 = getelementptr inbounds i32, ptr %5102, i64 -7
  %5104 = load <8 x i32>, ptr %5103, align 4, !tbaa !6
  %5105 = shufflevector <8 x i32> %5104, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5106 = getelementptr inbounds i32, ptr %5102, i64 -15
  %5107 = load <8 x i32>, ptr %5106, align 4, !tbaa !6
  %5108 = shufflevector <8 x i32> %5107, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5109 = getelementptr inbounds i32, ptr %5102, i64 -23
  %5110 = load <8 x i32>, ptr %5109, align 4, !tbaa !6
  %5111 = shufflevector <8 x i32> %5110, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5112 = getelementptr inbounds i32, ptr %5102, i64 -31
  %5113 = load <8 x i32>, ptr %5112, align 4, !tbaa !6
  %5114 = shufflevector <8 x i32> %5113, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5115 = mul <8 x i32> %5105, %5097
  %5116 = mul <8 x i32> %5108, %5098
  %5117 = mul <8 x i32> %5111, %5099
  %5118 = mul <8 x i32> %5114, %5100
  %5119 = add nuw i64 %5096, 32
  %5120 = icmp eq i64 %5119, %5093
  br i1 %5120, label %5121, label %5095, !llvm.loop !1110

5121:                                             ; preds = %5095
  %5122 = mul <8 x i32> %5116, %5115
  %5123 = mul <8 x i32> %5117, %5122
  %5124 = mul <8 x i32> %5118, %5123
  %5125 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5124)
  %5126 = icmp eq i64 %5089, %5093
  br i1 %5126, label %5139, label %5127

5127:                                             ; preds = %5080, %5121
  %5128 = phi i64 [ %5083, %5080 ], [ %5094, %5121 ]
  %5129 = phi i32 [ 1, %5080 ], [ %5125, %5121 ]
  br label %5130

5130:                                             ; preds = %5127, %5130
  %5131 = phi i64 [ %5136, %5130 ], [ %5128, %5127 ]
  %5132 = phi i32 [ %5135, %5130 ], [ %5129, %5127 ]
  %5133 = getelementptr inbounds i32, ptr %11, i64 %5131
  %5134 = load i32, ptr %5133, align 4, !tbaa !6
  %5135 = mul nsw i32 %5134, %5132
  %5136 = add nsw i64 %5131, -1
  %5137 = trunc i64 %5131 to i32
  %5138 = icmp sgt i32 %5137, 0
  br i1 %5138, label %5130, label %5139, !llvm.loop !1111

5139:                                             ; preds = %5130, %5121
  %5140 = phi i32 [ %5125, %5121 ], [ %5135, %5130 ]
  %5141 = and i64 %5090, 4294967295
  %5142 = getelementptr inbounds i32, ptr %6, i64 %5141
  %5143 = load i32, ptr %5142, align 4, !tbaa !6
  %5144 = mul nsw i32 %5143, %5140
  %5145 = add nsw i32 %5144, %5084
  %5146 = icmp sgt i64 %5082, 2
  %5147 = add nsw i64 %5083, -1
  %5148 = add i32 %5081, 1
  br i1 %5146, label %5080, label %5149, !llvm.loop !1112

5149:                                             ; preds = %5139, %5076
  %5150 = phi i32 [ %5079, %5076 ], [ %5145, %5139 ]
  %5151 = icmp slt i32 %5150, %5
  br i1 %5151, label %5154, label %5152

5152:                                             ; preds = %5149
  %5153 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1531, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5518

5154:                                             ; preds = %5149
  %5155 = sext i32 %5150 to i64
  %5156 = getelementptr inbounds double, ptr %4905, i64 %5155
  %5157 = load double, ptr %5156, align 8, !tbaa !19
  %5158 = fcmp fast olt double %5077, %5157
  br i1 %5158, label %5159, label %5160

5159:                                             ; preds = %5154
  store double %5157, ptr %4907, align 8, !tbaa !19
  br label %5160

5160:                                             ; preds = %5154, %5159
  %5161 = phi double [ %5077, %5154 ], [ %5157, %5159 ]
  %5162 = add nuw nsw i32 %5078, 1
  br i1 %4923, label %5163, label %5213

5163:                                             ; preds = %5160
  %5164 = load i32, ptr %4, align 4, !tbaa !6
  %5165 = load i32, ptr %12, align 4, !tbaa !6
  %5166 = add nsw i32 %5165, -1
  %5167 = icmp slt i32 %5164, %5166
  br i1 %5167, label %5190, label %5168

5168:                                             ; preds = %5163
  %5169 = icmp eq i32 %5164, %5166
  br i1 %5169, label %5170, label %5206

5170:                                             ; preds = %5168
  store i32 0, ptr %4, align 4, !tbaa !6
  %5171 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5171, ptr %6, align 4, !tbaa !6
  br i1 %4928, label %5213, label %5172

5172:                                             ; preds = %5170, %5200
  %5173 = phi i64 [ %5204, %5200 ], [ 1, %5170 ]
  %5174 = getelementptr inbounds i32, ptr %4, i64 %5173
  %5175 = load i32, ptr %5174, align 4, !tbaa !6
  %5176 = getelementptr inbounds i32, ptr %12, i64 %5173
  %5177 = load i32, ptr %5176, align 4, !tbaa !6
  %5178 = add nsw i32 %5177, -1
  %5179 = icmp slt i32 %5175, %5178
  br i1 %5179, label %5180, label %5198

5180:                                             ; preds = %5172
  br i1 %5167, label %5190, label %5181

5181:                                             ; preds = %5180
  %5182 = shl i64 %5173, 32
  %5183 = add i64 %5182, -4294967296
  %5184 = ashr exact i64 %5183, 32
  %5185 = getelementptr inbounds i32, ptr %7, i64 %5184
  %5186 = load i32, ptr %5185, align 4, !tbaa !6
  %5187 = getelementptr inbounds i32, ptr %6, i64 %5173
  %5188 = load i32, ptr %5187, align 4, !tbaa !6
  %5189 = add nsw i32 %5188, %5186
  store i32 %5189, ptr %5187, align 4, !tbaa !6
  br label %5208

5190:                                             ; preds = %5163, %5180
  %5191 = phi i32 [ %5175, %5180 ], [ %5164, %5163 ]
  %5192 = phi ptr [ %5174, %5180 ], [ %4, %5163 ]
  %5193 = phi i64 [ %5173, %5180 ], [ 0, %5163 ]
  %5194 = add nsw i32 %5191, 1
  store i32 %5194, ptr %5192, align 4, !tbaa !6
  %5195 = getelementptr inbounds i32, ptr %7, i64 %5193
  %5196 = load i32, ptr %5195, align 4, !tbaa !6
  %5197 = getelementptr inbounds i32, ptr %6, i64 %5193
  br label %5208

5198:                                             ; preds = %5172
  %5199 = icmp eq i32 %5175, %5178
  br i1 %5199, label %5200, label %5206

5200:                                             ; preds = %5198
  store i32 0, ptr %5174, align 4, !tbaa !6
  %5201 = getelementptr inbounds i32, ptr %8, i64 %5173
  %5202 = load i32, ptr %5201, align 4, !tbaa !6
  %5203 = getelementptr inbounds i32, ptr %6, i64 %5173
  store i32 %5202, ptr %5203, align 4, !tbaa !6
  %5204 = add nuw nsw i64 %5173, 1
  %5205 = icmp eq i64 %5204, %4926
  br i1 %5205, label %5213, label %5172, !llvm.loop !1113

5206:                                             ; preds = %5168, %5198
  %5207 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1531, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5518

5208:                                             ; preds = %5181, %5190
  %5209 = phi ptr [ %5197, %5190 ], [ %5174, %5181 ]
  %5210 = phi i32 [ %5196, %5190 ], [ 1, %5181 ]
  %5211 = load i32, ptr %5209, align 4, !tbaa !6
  %5212 = add nsw i32 %5211, %5210
  store i32 %5212, ptr %5209, align 4, !tbaa !6
  br label %5213

5213:                                             ; preds = %5200, %5208, %5170, %5160
  %5214 = icmp eq i32 %5162, %5
  br i1 %5214, label %5513, label %5076, !llvm.loop !1114

5215:                                             ; preds = %4914
  %5216 = getelementptr inbounds i32, ptr %3, i64 %19
  %5217 = load i32, ptr %5216, align 4, !tbaa !6
  %5218 = icmp eq i32 %5217, 0
  %5219 = icmp sgt i32 %5, 0
  br i1 %5218, label %5229, label %5220

5220:                                             ; preds = %5215
  br i1 %5219, label %5221, label %5513

5221:                                             ; preds = %5220
  %5222 = icmp sgt i32 %13, 1
  %5223 = icmp sgt i32 %13, 0
  %5224 = add i32 %13, -2
  %5225 = zext i32 %5224 to i64
  %5226 = zext i32 %13 to i64
  %5227 = add nuw i32 %5, 1
  %5228 = icmp eq i32 %13, 1
  br label %5372

5229:                                             ; preds = %5215
  br i1 %5219, label %5230, label %5513

5230:                                             ; preds = %5229
  %5231 = icmp sgt i32 %13, 1
  %5232 = icmp sgt i32 %13, 0
  %5233 = add i32 %13, -2
  %5234 = zext i32 %5233 to i64
  %5235 = zext i32 %13 to i64
  %5236 = add nuw i32 %5, 1
  %5237 = icmp eq i32 %13, 1
  br label %5238

5238:                                             ; preds = %5230, %5370
  %5239 = phi double [ %4908, %5230 ], [ %5320, %5370 ]
  %5240 = phi i32 [ 0, %5230 ], [ %5322, %5370 ]
  %5241 = phi double [ 0.000000e+00, %5230 ], [ %5321, %5370 ]
  %5242 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %5231, label %5243, label %5312

5243:                                             ; preds = %5238, %5302
  %5244 = phi i32 [ %5311, %5302 ], [ 0, %5238 ]
  %5245 = phi i64 [ %5253, %5302 ], [ %5235, %5238 ]
  %5246 = phi i64 [ %5310, %5302 ], [ %5234, %5238 ]
  %5247 = phi i32 [ %5308, %5302 ], [ %5242, %5238 ]
  %5248 = sub i32 %5233, %5244
  %5249 = tail call i32 @llvm.smin.i32(i32 %5248, i32 0)
  %5250 = sub i32 %5248, %5249
  %5251 = zext i32 %5250 to i64
  %5252 = add nuw nsw i64 %5251, 1
  %5253 = add nsw i64 %5245, -1
  %5254 = icmp ult i32 %5250, 31
  br i1 %5254, label %5290, label %5255

5255:                                             ; preds = %5243
  %5256 = and i64 %5252, 8589934560
  %5257 = sub i64 %5246, %5256
  br label %5258

5258:                                             ; preds = %5258, %5255
  %5259 = phi i64 [ 0, %5255 ], [ %5282, %5258 ]
  %5260 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5255 ], [ %5278, %5258 ]
  %5261 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5255 ], [ %5279, %5258 ]
  %5262 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5255 ], [ %5280, %5258 ]
  %5263 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5255 ], [ %5281, %5258 ]
  %5264 = sub i64 %5246, %5259
  %5265 = getelementptr inbounds i32, ptr %9, i64 %5264
  %5266 = getelementptr inbounds i32, ptr %5265, i64 -7
  %5267 = load <8 x i32>, ptr %5266, align 4, !tbaa !6
  %5268 = shufflevector <8 x i32> %5267, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5269 = getelementptr inbounds i32, ptr %5265, i64 -15
  %5270 = load <8 x i32>, ptr %5269, align 4, !tbaa !6
  %5271 = shufflevector <8 x i32> %5270, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5272 = getelementptr inbounds i32, ptr %5265, i64 -23
  %5273 = load <8 x i32>, ptr %5272, align 4, !tbaa !6
  %5274 = shufflevector <8 x i32> %5273, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5275 = getelementptr inbounds i32, ptr %5265, i64 -31
  %5276 = load <8 x i32>, ptr %5275, align 4, !tbaa !6
  %5277 = shufflevector <8 x i32> %5276, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5278 = mul <8 x i32> %5268, %5260
  %5279 = mul <8 x i32> %5271, %5261
  %5280 = mul <8 x i32> %5274, %5262
  %5281 = mul <8 x i32> %5277, %5263
  %5282 = add nuw i64 %5259, 32
  %5283 = icmp eq i64 %5282, %5256
  br i1 %5283, label %5284, label %5258, !llvm.loop !1115

5284:                                             ; preds = %5258
  %5285 = mul <8 x i32> %5279, %5278
  %5286 = mul <8 x i32> %5280, %5285
  %5287 = mul <8 x i32> %5281, %5286
  %5288 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5287)
  %5289 = icmp eq i64 %5252, %5256
  br i1 %5289, label %5302, label %5290

5290:                                             ; preds = %5243, %5284
  %5291 = phi i64 [ %5246, %5243 ], [ %5257, %5284 ]
  %5292 = phi i32 [ 1, %5243 ], [ %5288, %5284 ]
  br label %5293

5293:                                             ; preds = %5290, %5293
  %5294 = phi i64 [ %5299, %5293 ], [ %5291, %5290 ]
  %5295 = phi i32 [ %5298, %5293 ], [ %5292, %5290 ]
  %5296 = getelementptr inbounds i32, ptr %9, i64 %5294
  %5297 = load i32, ptr %5296, align 4, !tbaa !6
  %5298 = mul nsw i32 %5297, %5295
  %5299 = add nsw i64 %5294, -1
  %5300 = trunc i64 %5294 to i32
  %5301 = icmp sgt i32 %5300, 0
  br i1 %5301, label %5293, label %5302, !llvm.loop !1116

5302:                                             ; preds = %5293, %5284
  %5303 = phi i32 [ %5288, %5284 ], [ %5298, %5293 ]
  %5304 = and i64 %5253, 4294967295
  %5305 = getelementptr inbounds i32, ptr %6, i64 %5304
  %5306 = load i32, ptr %5305, align 4, !tbaa !6
  %5307 = mul nsw i32 %5306, %5303
  %5308 = add nsw i32 %5307, %5247
  %5309 = icmp sgt i64 %5245, 2
  %5310 = add nsw i64 %5246, -1
  %5311 = add i32 %5244, 1
  br i1 %5309, label %5243, label %5312, !llvm.loop !1117

5312:                                             ; preds = %5302, %5238
  %5313 = phi i32 [ %5242, %5238 ], [ %5308, %5302 ]
  %5314 = sext i32 %5313 to i64
  %5315 = getelementptr inbounds double, ptr %4905, i64 %5314
  %5316 = load double, ptr %5315, align 8, !tbaa !19
  %5317 = fcmp fast olt double %5239, %5316
  br i1 %5317, label %5318, label %5319

5318:                                             ; preds = %5312
  store double %5316, ptr %4907, align 8, !tbaa !19
  br label %5319

5319:                                             ; preds = %5318, %5312
  %5320 = phi double [ %5316, %5318 ], [ %5239, %5312 ]
  %5321 = fadd fast double %5241, 1.000000e+00
  %5322 = add nuw nsw i32 %5240, 1
  br i1 %5232, label %5323, label %5370

5323:                                             ; preds = %5319
  %5324 = load i32, ptr %4, align 4, !tbaa !6
  %5325 = load i32, ptr %12, align 4, !tbaa !6
  %5326 = add nsw i32 %5325, -1
  %5327 = icmp slt i32 %5324, %5326
  br i1 %5327, label %5347, label %5328

5328:                                             ; preds = %5323
  %5329 = icmp eq i32 %5324, %5326
  br i1 %5329, label %5330, label %5363

5330:                                             ; preds = %5328
  store i32 0, ptr %4, align 4, !tbaa !6
  %5331 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5331, ptr %6, align 4, !tbaa !6
  br i1 %5237, label %5370, label %5332

5332:                                             ; preds = %5330, %5357
  %5333 = phi i64 [ %5361, %5357 ], [ 1, %5330 ]
  %5334 = getelementptr inbounds i32, ptr %4, i64 %5333
  %5335 = load i32, ptr %5334, align 4, !tbaa !6
  %5336 = getelementptr inbounds i32, ptr %12, i64 %5333
  %5337 = load i32, ptr %5336, align 4, !tbaa !6
  %5338 = add nsw i32 %5337, -1
  %5339 = icmp slt i32 %5335, %5338
  br i1 %5339, label %5340, label %5355

5340:                                             ; preds = %5332
  br i1 %5327, label %5347, label %5341

5341:                                             ; preds = %5340
  %5342 = getelementptr inbounds i32, ptr %7, i64 %5333
  %5343 = load i32, ptr %5342, align 4, !tbaa !6
  %5344 = getelementptr inbounds i32, ptr %6, i64 %5333
  %5345 = load i32, ptr %5344, align 4, !tbaa !6
  %5346 = add nsw i32 %5345, %5343
  store i32 %5346, ptr %5344, align 4, !tbaa !6
  br label %5365

5347:                                             ; preds = %5323, %5340
  %5348 = phi i32 [ %5335, %5340 ], [ %5324, %5323 ]
  %5349 = phi ptr [ %5334, %5340 ], [ %4, %5323 ]
  %5350 = phi i64 [ %5333, %5340 ], [ 0, %5323 ]
  %5351 = add nsw i32 %5348, 1
  store i32 %5351, ptr %5349, align 4, !tbaa !6
  %5352 = getelementptr inbounds i32, ptr %7, i64 %5350
  %5353 = load i32, ptr %5352, align 4, !tbaa !6
  %5354 = getelementptr inbounds i32, ptr %6, i64 %5350
  br label %5365

5355:                                             ; preds = %5332
  %5356 = icmp eq i32 %5335, %5338
  br i1 %5356, label %5357, label %5363

5357:                                             ; preds = %5355
  store i32 0, ptr %5334, align 4, !tbaa !6
  %5358 = getelementptr inbounds i32, ptr %8, i64 %5333
  %5359 = load i32, ptr %5358, align 4, !tbaa !6
  %5360 = getelementptr inbounds i32, ptr %6, i64 %5333
  store i32 %5359, ptr %5360, align 4, !tbaa !6
  %5361 = add nuw nsw i64 %5333, 1
  %5362 = icmp eq i64 %5361, %5235
  br i1 %5362, label %5370, label %5332, !llvm.loop !1118

5363:                                             ; preds = %5328, %5355
  %5364 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1531, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5518

5365:                                             ; preds = %5341, %5347
  %5366 = phi ptr [ %5354, %5347 ], [ %5334, %5341 ]
  %5367 = phi i32 [ %5353, %5347 ], [ 1, %5341 ]
  %5368 = load i32, ptr %5366, align 4, !tbaa !6
  %5369 = add nsw i32 %5368, %5367
  store i32 %5369, ptr %5366, align 4, !tbaa !6
  br label %5370

5370:                                             ; preds = %5357, %5365, %5330, %5319
  %5371 = icmp eq i32 %5322, %5
  br i1 %5371, label %5513, label %5238, !llvm.loop !1119

5372:                                             ; preds = %5221, %5509
  %5373 = phi double [ %4908, %5221 ], [ %5457, %5509 ]
  %5374 = phi i32 [ 0, %5221 ], [ %5458, %5509 ]
  %5375 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %5222, label %5376, label %5445

5376:                                             ; preds = %5372, %5435
  %5377 = phi i32 [ %5444, %5435 ], [ 0, %5372 ]
  %5378 = phi i64 [ %5386, %5435 ], [ %5226, %5372 ]
  %5379 = phi i64 [ %5443, %5435 ], [ %5225, %5372 ]
  %5380 = phi i32 [ %5441, %5435 ], [ %5375, %5372 ]
  %5381 = sub i32 %5224, %5377
  %5382 = tail call i32 @llvm.smin.i32(i32 %5381, i32 0)
  %5383 = sub i32 %5381, %5382
  %5384 = zext i32 %5383 to i64
  %5385 = add nuw nsw i64 %5384, 1
  %5386 = add nsw i64 %5378, -1
  %5387 = icmp ult i32 %5383, 31
  br i1 %5387, label %5423, label %5388

5388:                                             ; preds = %5376
  %5389 = and i64 %5385, 8589934560
  %5390 = sub i64 %5379, %5389
  br label %5391

5391:                                             ; preds = %5391, %5388
  %5392 = phi i64 [ 0, %5388 ], [ %5415, %5391 ]
  %5393 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5388 ], [ %5411, %5391 ]
  %5394 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5388 ], [ %5412, %5391 ]
  %5395 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5388 ], [ %5413, %5391 ]
  %5396 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5388 ], [ %5414, %5391 ]
  %5397 = sub i64 %5379, %5392
  %5398 = getelementptr inbounds i32, ptr %11, i64 %5397
  %5399 = getelementptr inbounds i32, ptr %5398, i64 -7
  %5400 = load <8 x i32>, ptr %5399, align 4, !tbaa !6
  %5401 = shufflevector <8 x i32> %5400, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5402 = getelementptr inbounds i32, ptr %5398, i64 -15
  %5403 = load <8 x i32>, ptr %5402, align 4, !tbaa !6
  %5404 = shufflevector <8 x i32> %5403, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5405 = getelementptr inbounds i32, ptr %5398, i64 -23
  %5406 = load <8 x i32>, ptr %5405, align 4, !tbaa !6
  %5407 = shufflevector <8 x i32> %5406, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5408 = getelementptr inbounds i32, ptr %5398, i64 -31
  %5409 = load <8 x i32>, ptr %5408, align 4, !tbaa !6
  %5410 = shufflevector <8 x i32> %5409, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5411 = mul <8 x i32> %5401, %5393
  %5412 = mul <8 x i32> %5404, %5394
  %5413 = mul <8 x i32> %5407, %5395
  %5414 = mul <8 x i32> %5410, %5396
  %5415 = add nuw i64 %5392, 32
  %5416 = icmp eq i64 %5415, %5389
  br i1 %5416, label %5417, label %5391, !llvm.loop !1120

5417:                                             ; preds = %5391
  %5418 = mul <8 x i32> %5412, %5411
  %5419 = mul <8 x i32> %5413, %5418
  %5420 = mul <8 x i32> %5414, %5419
  %5421 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5420)
  %5422 = icmp eq i64 %5385, %5389
  br i1 %5422, label %5435, label %5423

5423:                                             ; preds = %5376, %5417
  %5424 = phi i64 [ %5379, %5376 ], [ %5390, %5417 ]
  %5425 = phi i32 [ 1, %5376 ], [ %5421, %5417 ]
  br label %5426

5426:                                             ; preds = %5423, %5426
  %5427 = phi i64 [ %5432, %5426 ], [ %5424, %5423 ]
  %5428 = phi i32 [ %5431, %5426 ], [ %5425, %5423 ]
  %5429 = getelementptr inbounds i32, ptr %11, i64 %5427
  %5430 = load i32, ptr %5429, align 4, !tbaa !6
  %5431 = mul nsw i32 %5430, %5428
  %5432 = add nsw i64 %5427, -1
  %5433 = trunc i64 %5427 to i32
  %5434 = icmp sgt i32 %5433, 0
  br i1 %5434, label %5426, label %5435, !llvm.loop !1121

5435:                                             ; preds = %5426, %5417
  %5436 = phi i32 [ %5421, %5417 ], [ %5431, %5426 ]
  %5437 = and i64 %5386, 4294967295
  %5438 = getelementptr inbounds i32, ptr %6, i64 %5437
  %5439 = load i32, ptr %5438, align 4, !tbaa !6
  %5440 = mul nsw i32 %5439, %5436
  %5441 = add nsw i32 %5440, %5380
  %5442 = icmp sgt i64 %5378, 2
  %5443 = add nsw i64 %5379, -1
  %5444 = add i32 %5377, 1
  br i1 %5442, label %5376, label %5445, !llvm.loop !1122

5445:                                             ; preds = %5435, %5372
  %5446 = phi i32 [ %5375, %5372 ], [ %5441, %5435 ]
  %5447 = icmp slt i32 %5446, %5
  br i1 %5447, label %5450, label %5448

5448:                                             ; preds = %5445
  %5449 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1531, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5518

5450:                                             ; preds = %5445
  %5451 = sext i32 %5446 to i64
  %5452 = getelementptr inbounds double, ptr %4905, i64 %5451
  %5453 = load double, ptr %5452, align 8, !tbaa !19
  %5454 = fcmp fast olt double %5373, %5453
  br i1 %5454, label %5455, label %5456

5455:                                             ; preds = %5450
  store double %5453, ptr %4907, align 8, !tbaa !19
  br label %5456

5456:                                             ; preds = %5455, %5450
  %5457 = phi double [ %5453, %5455 ], [ %5373, %5450 ]
  %5458 = add nuw nsw i32 %5374, 1
  br i1 %5223, label %5459, label %5509

5459:                                             ; preds = %5456
  %5460 = load i32, ptr %4, align 4, !tbaa !6
  %5461 = load i32, ptr %12, align 4, !tbaa !6
  %5462 = add nsw i32 %5461, -1
  %5463 = icmp slt i32 %5460, %5462
  br i1 %5463, label %5486, label %5464

5464:                                             ; preds = %5459
  %5465 = icmp eq i32 %5460, %5462
  br i1 %5465, label %5466, label %5502

5466:                                             ; preds = %5464
  store i32 0, ptr %4, align 4, !tbaa !6
  %5467 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5467, ptr %6, align 4, !tbaa !6
  br i1 %5228, label %5509, label %5468

5468:                                             ; preds = %5466, %5496
  %5469 = phi i64 [ %5500, %5496 ], [ 1, %5466 ]
  %5470 = getelementptr inbounds i32, ptr %4, i64 %5469
  %5471 = load i32, ptr %5470, align 4, !tbaa !6
  %5472 = getelementptr inbounds i32, ptr %12, i64 %5469
  %5473 = load i32, ptr %5472, align 4, !tbaa !6
  %5474 = add nsw i32 %5473, -1
  %5475 = icmp slt i32 %5471, %5474
  br i1 %5475, label %5476, label %5494

5476:                                             ; preds = %5468
  br i1 %5463, label %5486, label %5477

5477:                                             ; preds = %5476
  %5478 = shl i64 %5469, 32
  %5479 = add i64 %5478, -4294967296
  %5480 = ashr exact i64 %5479, 32
  %5481 = getelementptr inbounds i32, ptr %7, i64 %5480
  %5482 = load i32, ptr %5481, align 4, !tbaa !6
  %5483 = getelementptr inbounds i32, ptr %6, i64 %5469
  %5484 = load i32, ptr %5483, align 4, !tbaa !6
  %5485 = add nsw i32 %5484, %5482
  store i32 %5485, ptr %5483, align 4, !tbaa !6
  br label %5504

5486:                                             ; preds = %5459, %5476
  %5487 = phi i32 [ %5471, %5476 ], [ %5460, %5459 ]
  %5488 = phi ptr [ %5470, %5476 ], [ %4, %5459 ]
  %5489 = phi i64 [ %5469, %5476 ], [ 0, %5459 ]
  %5490 = add nsw i32 %5487, 1
  store i32 %5490, ptr %5488, align 4, !tbaa !6
  %5491 = getelementptr inbounds i32, ptr %7, i64 %5489
  %5492 = load i32, ptr %5491, align 4, !tbaa !6
  %5493 = getelementptr inbounds i32, ptr %6, i64 %5489
  br label %5504

5494:                                             ; preds = %5468
  %5495 = icmp eq i32 %5471, %5474
  br i1 %5495, label %5496, label %5502

5496:                                             ; preds = %5494
  store i32 0, ptr %5470, align 4, !tbaa !6
  %5497 = getelementptr inbounds i32, ptr %8, i64 %5469
  %5498 = load i32, ptr %5497, align 4, !tbaa !6
  %5499 = getelementptr inbounds i32, ptr %6, i64 %5469
  store i32 %5498, ptr %5499, align 4, !tbaa !6
  %5500 = add nuw nsw i64 %5469, 1
  %5501 = icmp eq i64 %5500, %5226
  br i1 %5501, label %5509, label %5468, !llvm.loop !1123

5502:                                             ; preds = %5464, %5494
  %5503 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1531, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5518

5504:                                             ; preds = %5477, %5486
  %5505 = phi ptr [ %5493, %5486 ], [ %5470, %5477 ]
  %5506 = phi i32 [ %5492, %5486 ], [ 1, %5477 ]
  %5507 = load i32, ptr %5505, align 4, !tbaa !6
  %5508 = add nsw i32 %5507, %5506
  store i32 %5508, ptr %5505, align 4, !tbaa !6
  br label %5509

5509:                                             ; preds = %5496, %5504, %5466, %5456
  %5510 = icmp eq i32 %5458, %5
  br i1 %5510, label %5513, label %5372, !llvm.loop !1124

5511:                                             ; preds = %4914
  %5512 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1531, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5513

5513:                                             ; preds = %5509, %5370, %5213, %5074, %4899, %4759, %4601, %4461, %4288, %4149, %3992, %3853, %3678, %3538, %3380, %3240, %3067, %2928, %2771, %2632, %2460, %2320, %2162, %2022, %1849, %1710, %1553, %1414, %1237, %1098, %941, %802, %630, %491, %334, %195, %5220, %5229, %4920, %4929, %4608, %4617, %4306, %4315, %3999, %4008, %3699, %3708, %3387, %3396, %3085, %3094, %2778, %2787, %2478, %2487, %2169, %2178, %1867, %1876, %1560, %1569, %1260, %1269, %948, %957, %648, %657, %341, %350, %41, %50, %4913, %4910, %5511, %4292, %4901, %3692, %3689, %4290, %3071, %3680, %2464, %3069, %1853, %2462, %1253, %1249, %1851, %634, %1239, %34, %30, %632, %18
  %5514 = phi double [ 0.000000e+00, %18 ], [ 0.000000e+00, %632 ], [ 0.000000e+00, %30 ], [ 0.000000e+00, %34 ], [ 0.000000e+00, %634 ], [ 0.000000e+00, %1239 ], [ 0.000000e+00, %1851 ], [ 0.000000e+00, %1249 ], [ 0.000000e+00, %1253 ], [ 0.000000e+00, %1853 ], [ 0.000000e+00, %2462 ], [ 0.000000e+00, %2464 ], [ 0.000000e+00, %3069 ], [ 0.000000e+00, %3071 ], [ 0.000000e+00, %3680 ], [ 0.000000e+00, %4290 ], [ 0.000000e+00, %3689 ], [ 0.000000e+00, %3692 ], [ 0.000000e+00, %4292 ], [ 0.000000e+00, %4901 ], [ 0.000000e+00, %5511 ], [ 0.000000e+00, %4910 ], [ 0.000000e+00, %4913 ], [ 0.000000e+00, %50 ], [ 0.000000e+00, %41 ], [ 0.000000e+00, %350 ], [ 0.000000e+00, %341 ], [ 0.000000e+00, %657 ], [ 0.000000e+00, %648 ], [ 0.000000e+00, %957 ], [ 0.000000e+00, %948 ], [ 0.000000e+00, %1269 ], [ 0.000000e+00, %1260 ], [ 0.000000e+00, %1569 ], [ 0.000000e+00, %1560 ], [ 0.000000e+00, %1876 ], [ 0.000000e+00, %1867 ], [ 0.000000e+00, %2178 ], [ 0.000000e+00, %2169 ], [ 0.000000e+00, %2487 ], [ 0.000000e+00, %2478 ], [ 0.000000e+00, %2787 ], [ 0.000000e+00, %2778 ], [ 0.000000e+00, %3094 ], [ 0.000000e+00, %3085 ], [ 0.000000e+00, %3396 ], [ 0.000000e+00, %3387 ], [ 0.000000e+00, %3708 ], [ 0.000000e+00, %3699 ], [ 0.000000e+00, %4008 ], [ 0.000000e+00, %3999 ], [ 0.000000e+00, %4315 ], [ 0.000000e+00, %4306 ], [ 0.000000e+00, %4617 ], [ 0.000000e+00, %4608 ], [ 0.000000e+00, %4929 ], [ 0.000000e+00, %4920 ], [ 0.000000e+00, %5229 ], [ 0.000000e+00, %5220 ], [ %146, %195 ], [ 0.000000e+00, %334 ], [ %442, %491 ], [ 0.000000e+00, %630 ], [ %753, %802 ], [ 0.000000e+00, %941 ], [ %1049, %1098 ], [ 0.000000e+00, %1237 ], [ %1365, %1414 ], [ 0.000000e+00, %1553 ], [ %1661, %1710 ], [ 0.000000e+00, %1849 ], [ %1973, %2022 ], [ 0.000000e+00, %2162 ], [ %2271, %2320 ], [ 0.000000e+00, %2460 ], [ %2583, %2632 ], [ 0.000000e+00, %2771 ], [ %2879, %2928 ], [ 0.000000e+00, %3067 ], [ %3191, %3240 ], [ 0.000000e+00, %3380 ], [ %3489, %3538 ], [ 0.000000e+00, %3678 ], [ %3804, %3853 ], [ 0.000000e+00, %3992 ], [ %4100, %4149 ], [ 0.000000e+00, %4288 ], [ %4412, %4461 ], [ 0.000000e+00, %4601 ], [ %4710, %4759 ], [ 0.000000e+00, %4899 ], [ %5025, %5074 ], [ 0.000000e+00, %5213 ], [ %5321, %5370 ], [ 0.000000e+00, %5509 ]
  %5515 = phi i32 [ %10, %18 ], [ 1, %632 ], [ 1, %30 ], [ 1, %34 ], [ 1, %634 ], [ 1, %1239 ], [ 1, %1851 ], [ 1, %1249 ], [ 1, %1253 ], [ 1, %1853 ], [ 1, %2462 ], [ 1, %2464 ], [ 1, %3069 ], [ 1, %3071 ], [ 1, %3680 ], [ 1, %4290 ], [ 1, %3689 ], [ 1, %3692 ], [ 1, %4292 ], [ 1, %4901 ], [ 1, %5511 ], [ 1, %4910 ], [ 1, %4913 ], [ 1, %50 ], [ 1, %41 ], [ 1, %350 ], [ 1, %341 ], [ 1, %657 ], [ 1, %648 ], [ 1, %957 ], [ 1, %948 ], [ 1, %1269 ], [ 1, %1260 ], [ 1, %1569 ], [ 1, %1560 ], [ 1, %1876 ], [ 1, %1867 ], [ 1, %2178 ], [ 1, %2169 ], [ 1, %2487 ], [ 1, %2478 ], [ 1, %2787 ], [ 1, %2778 ], [ 1, %3094 ], [ 1, %3085 ], [ 1, %3396 ], [ 1, %3387 ], [ 1, %3708 ], [ 1, %3699 ], [ 1, %4008 ], [ 1, %3999 ], [ 1, %4315 ], [ 1, %4306 ], [ 1, %4617 ], [ 1, %4608 ], [ 1, %4929 ], [ 1, %4920 ], [ 1, %5229 ], [ 1, %5220 ], [ %57, %195 ], [ %48, %334 ], [ %357, %491 ], [ %348, %630 ], [ %664, %802 ], [ %655, %941 ], [ %964, %1098 ], [ %955, %1237 ], [ %1276, %1414 ], [ %1267, %1553 ], [ %1576, %1710 ], [ %1567, %1849 ], [ %1883, %2022 ], [ %1874, %2162 ], [ %2185, %2320 ], [ %2176, %2460 ], [ %2494, %2632 ], [ %2485, %2771 ], [ %2794, %2928 ], [ %2785, %3067 ], [ %3101, %3240 ], [ %3092, %3380 ], [ %3403, %3538 ], [ %3394, %3678 ], [ %3715, %3853 ], [ %3706, %3992 ], [ %4015, %4149 ], [ %4006, %4288 ], [ %4322, %4461 ], [ %4313, %4601 ], [ %4624, %4759 ], [ %4615, %4899 ], [ %4936, %5074 ], [ %4927, %5213 ], [ %5236, %5370 ], [ %5227, %5509 ]
  %5516 = tail call i32 @Util_TableSetInt(i32 noundef %17, i32 noundef %5515, ptr noundef nonnull @.str.5) #3
  %5517 = tail call i32 @Util_TableSetReal(i32 noundef %17, double noundef nofpclass(nan inf) %5514, ptr noundef nonnull @.str.6) #3
  br label %5518

5518:                                             ; preds = %5067, %5152, %5206, %5363, %5448, %5502, %4454, %4539, %4594, %4752, %4837, %4892, %3846, %3931, %3985, %4142, %4227, %4281, %3233, %3318, %3373, %3531, %3616, %3671, %2625, %2709, %2764, %2921, %3005, %3060, %2015, %2100, %2155, %2313, %2398, %2453, %1407, %1491, %1546, %1703, %1787, %1842, %795, %879, %934, %1091, %1175, %1230, %188, %272, %327, %484, %568, %623, %5513
  %5519 = phi i32 [ 0, %5513 ], [ -1, %623 ], [ -1, %568 ], [ -1, %484 ], [ -1, %327 ], [ -1, %272 ], [ -1, %188 ], [ -1, %1230 ], [ -1, %1175 ], [ -1, %1091 ], [ -1, %934 ], [ -1, %879 ], [ -1, %795 ], [ -1, %1842 ], [ -1, %1787 ], [ -1, %1703 ], [ -1, %1546 ], [ -1, %1491 ], [ -1, %1407 ], [ -1, %2453 ], [ -1, %2398 ], [ -1, %2313 ], [ -1, %2155 ], [ -1, %2100 ], [ -1, %2015 ], [ -1, %3060 ], [ -1, %3005 ], [ -1, %2921 ], [ -1, %2764 ], [ -1, %2709 ], [ -1, %2625 ], [ -1, %3671 ], [ -1, %3616 ], [ -1, %3531 ], [ -1, %3373 ], [ -1, %3318 ], [ -1, %3233 ], [ -1, %4281 ], [ -1, %4227 ], [ -1, %4142 ], [ -1, %3985 ], [ -1, %3931 ], [ -1, %3846 ], [ -1, %4892 ], [ -1, %4837 ], [ -1, %4752 ], [ -1, %4594 ], [ -1, %4539 ], [ -1, %4454 ], [ -1, %5502 ], [ -1, %5448 ], [ -1, %5363 ], [ -1, %5206 ], [ -1, %5152 ], [ -1, %5067 ]
  ret i32 %5519
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_Max_REAL4(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr noundef readonly %7, ptr noundef readonly %8, ptr nocapture noundef readonly %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr noundef readonly %12, i32 noundef %13, ptr nocapture noundef readonly %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !6
  switch i32 %21, label %5514 [
    i32 101, label %22
    i32 102, label %634
    i32 103, label %1241
    i32 104, label %1853
    i32 105, label %2464
    i32 106, label %3071
    i32 107, label %3682
    i32 108, label %4293
    i32 109, label %4903
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %14, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !10
  %25 = getelementptr inbounds ptr, ptr %16, i64 %19
  %26 = load ptr, ptr %25, align 8, !tbaa !10
  %27 = load float, ptr %24, align 4, !tbaa !163
  %28 = fptoui float %27 to i8
  store i8 %28, ptr %26, align 1, !tbaa !12
  %29 = icmp eq i32 %13, 0
  br i1 %29, label %30, label %35

30:                                               ; preds = %22
  %31 = load float, ptr %24, align 4, !tbaa !163
  %32 = fptoui float %31 to i8
  %33 = icmp ult i8 %28, %32
  br i1 %33, label %34, label %5514

34:                                               ; preds = %30
  store i8 %32, ptr %26, align 1, !tbaa !12
  br label %5514

35:                                               ; preds = %22
  switch i32 %1, label %632 [
    i32 1, label %36
    i32 0, label %336
  ]

36:                                               ; preds = %35
  %37 = getelementptr inbounds i32, ptr %3, i64 %19
  %38 = load i32, ptr %37, align 4, !tbaa !6
  %39 = icmp eq i32 %38, 0
  %40 = icmp sgt i32 %5, 0
  br i1 %39, label %50, label %41

41:                                               ; preds = %36
  br i1 %40, label %42, label %5514

42:                                               ; preds = %41
  %43 = icmp sgt i32 %13, 1
  %44 = icmp sgt i32 %13, 0
  %45 = add i32 %13, -2
  %46 = zext i32 %45 to i64
  %47 = zext i32 %13 to i64
  %48 = add nuw i32 %5, 1
  %49 = icmp eq i32 %13, 1
  br label %197

50:                                               ; preds = %36
  br i1 %40, label %51, label %5514

51:                                               ; preds = %50
  %52 = icmp sgt i32 %13, 1
  %53 = icmp sgt i32 %13, 0
  %54 = add i32 %13, -2
  %55 = zext i32 %54 to i64
  %56 = zext i32 %13 to i64
  %57 = add nuw i32 %5, 1
  %58 = icmp eq i32 %13, 1
  br label %59

59:                                               ; preds = %51, %195
  %60 = phi i32 [ 0, %51 ], [ %147, %195 ]
  %61 = phi double [ 0.000000e+00, %51 ], [ %146, %195 ]
  %62 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %52, label %63, label %132

63:                                               ; preds = %59, %122
  %64 = phi i32 [ %131, %122 ], [ 0, %59 ]
  %65 = phi i64 [ %73, %122 ], [ %56, %59 ]
  %66 = phi i64 [ %130, %122 ], [ %55, %59 ]
  %67 = phi i32 [ %128, %122 ], [ %62, %59 ]
  %68 = sub i32 %54, %64
  %69 = tail call i32 @llvm.smin.i32(i32 %68, i32 0)
  %70 = sub i32 %68, %69
  %71 = zext i32 %70 to i64
  %72 = add nuw nsw i64 %71, 1
  %73 = add nsw i64 %65, -1
  %74 = icmp ult i32 %70, 31
  br i1 %74, label %110, label %75

75:                                               ; preds = %63
  %76 = and i64 %72, 8589934560
  %77 = sub i64 %66, %76
  br label %78

78:                                               ; preds = %78, %75
  %79 = phi i64 [ 0, %75 ], [ %102, %78 ]
  %80 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %75 ], [ %98, %78 ]
  %81 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %75 ], [ %99, %78 ]
  %82 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %75 ], [ %100, %78 ]
  %83 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %75 ], [ %101, %78 ]
  %84 = sub i64 %66, %79
  %85 = getelementptr inbounds i32, ptr %9, i64 %84
  %86 = getelementptr inbounds i32, ptr %85, i64 -7
  %87 = load <8 x i32>, ptr %86, align 4, !tbaa !6
  %88 = shufflevector <8 x i32> %87, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %89 = getelementptr inbounds i32, ptr %85, i64 -15
  %90 = load <8 x i32>, ptr %89, align 4, !tbaa !6
  %91 = shufflevector <8 x i32> %90, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %92 = getelementptr inbounds i32, ptr %85, i64 -23
  %93 = load <8 x i32>, ptr %92, align 4, !tbaa !6
  %94 = shufflevector <8 x i32> %93, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %95 = getelementptr inbounds i32, ptr %85, i64 -31
  %96 = load <8 x i32>, ptr %95, align 4, !tbaa !6
  %97 = shufflevector <8 x i32> %96, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %98 = mul <8 x i32> %88, %80
  %99 = mul <8 x i32> %91, %81
  %100 = mul <8 x i32> %94, %82
  %101 = mul <8 x i32> %97, %83
  %102 = add nuw i64 %79, 32
  %103 = icmp eq i64 %102, %76
  br i1 %103, label %104, label %78, !llvm.loop !1125

104:                                              ; preds = %78
  %105 = mul <8 x i32> %99, %98
  %106 = mul <8 x i32> %100, %105
  %107 = mul <8 x i32> %101, %106
  %108 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %107)
  %109 = icmp eq i64 %72, %76
  br i1 %109, label %122, label %110

110:                                              ; preds = %63, %104
  %111 = phi i64 [ %66, %63 ], [ %77, %104 ]
  %112 = phi i32 [ 1, %63 ], [ %108, %104 ]
  br label %113

113:                                              ; preds = %110, %113
  %114 = phi i64 [ %119, %113 ], [ %111, %110 ]
  %115 = phi i32 [ %118, %113 ], [ %112, %110 ]
  %116 = getelementptr inbounds i32, ptr %9, i64 %114
  %117 = load i32, ptr %116, align 4, !tbaa !6
  %118 = mul nsw i32 %117, %115
  %119 = add nsw i64 %114, -1
  %120 = trunc i64 %114 to i32
  %121 = icmp sgt i32 %120, 0
  br i1 %121, label %113, label %122, !llvm.loop !1126

122:                                              ; preds = %113, %104
  %123 = phi i32 [ %108, %104 ], [ %118, %113 ]
  %124 = and i64 %73, 4294967295
  %125 = getelementptr inbounds i32, ptr %6, i64 %124
  %126 = load i32, ptr %125, align 4, !tbaa !6
  %127 = mul nsw i32 %126, %123
  %128 = add nsw i32 %127, %67
  %129 = icmp sgt i64 %65, 2
  %130 = add nsw i64 %66, -1
  %131 = add i32 %64, 1
  br i1 %129, label %63, label %132, !llvm.loop !1127

132:                                              ; preds = %122, %59
  %133 = phi i32 [ %62, %59 ], [ %128, %122 ]
  %134 = sext i32 %133 to i64
  %135 = getelementptr inbounds double, ptr %2, i64 %134
  %136 = load double, ptr %135, align 8, !tbaa !19
  %137 = getelementptr inbounds float, ptr %24, i64 %134
  %138 = load float, ptr %137, align 4, !tbaa !163
  %139 = fptoui float %138 to i8
  %140 = fcmp fast ueq double %136, 0.000000e+00
  br i1 %140, label %145, label %141

141:                                              ; preds = %132
  %142 = load i8, ptr %26, align 1, !tbaa !12
  %143 = icmp ult i8 %142, %139
  br i1 %143, label %144, label %145

144:                                              ; preds = %141
  store i8 %139, ptr %26, align 1, !tbaa !12
  br label %145

145:                                              ; preds = %141, %144, %132
  %146 = fadd fast double %136, %61
  %147 = add nuw nsw i32 %60, 1
  br i1 %53, label %148, label %195

148:                                              ; preds = %145
  %149 = load i32, ptr %4, align 4, !tbaa !6
  %150 = load i32, ptr %12, align 4, !tbaa !6
  %151 = add nsw i32 %150, -1
  %152 = icmp slt i32 %149, %151
  br i1 %152, label %172, label %153

153:                                              ; preds = %148
  %154 = icmp eq i32 %149, %151
  br i1 %154, label %155, label %188

155:                                              ; preds = %153
  store i32 0, ptr %4, align 4, !tbaa !6
  %156 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %156, ptr %6, align 4, !tbaa !6
  br i1 %58, label %195, label %157

157:                                              ; preds = %155, %182
  %158 = phi i64 [ %186, %182 ], [ 1, %155 ]
  %159 = getelementptr inbounds i32, ptr %4, i64 %158
  %160 = load i32, ptr %159, align 4, !tbaa !6
  %161 = getelementptr inbounds i32, ptr %12, i64 %158
  %162 = load i32, ptr %161, align 4, !tbaa !6
  %163 = add nsw i32 %162, -1
  %164 = icmp slt i32 %160, %163
  br i1 %164, label %165, label %180

165:                                              ; preds = %157
  br i1 %152, label %172, label %166

166:                                              ; preds = %165
  %167 = getelementptr inbounds i32, ptr %7, i64 %158
  %168 = load i32, ptr %167, align 4, !tbaa !6
  %169 = getelementptr inbounds i32, ptr %6, i64 %158
  %170 = load i32, ptr %169, align 4, !tbaa !6
  %171 = add nsw i32 %170, %168
  store i32 %171, ptr %169, align 4, !tbaa !6
  br label %190

172:                                              ; preds = %148, %165
  %173 = phi i32 [ %160, %165 ], [ %149, %148 ]
  %174 = phi ptr [ %159, %165 ], [ %4, %148 ]
  %175 = phi i64 [ %158, %165 ], [ 0, %148 ]
  %176 = add nsw i32 %173, 1
  store i32 %176, ptr %174, align 4, !tbaa !6
  %177 = getelementptr inbounds i32, ptr %7, i64 %175
  %178 = load i32, ptr %177, align 4, !tbaa !6
  %179 = getelementptr inbounds i32, ptr %6, i64 %175
  br label %190

180:                                              ; preds = %157
  %181 = icmp eq i32 %160, %163
  br i1 %181, label %182, label %188

182:                                              ; preds = %180
  store i32 0, ptr %159, align 4, !tbaa !6
  %183 = getelementptr inbounds i32, ptr %8, i64 %158
  %184 = load i32, ptr %183, align 4, !tbaa !6
  %185 = getelementptr inbounds i32, ptr %6, i64 %158
  store i32 %184, ptr %185, align 4, !tbaa !6
  %186 = add nuw nsw i64 %158, 1
  %187 = icmp eq i64 %186, %56
  br i1 %187, label %195, label %157, !llvm.loop !1128

188:                                              ; preds = %153, %180
  %189 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1736, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5519

190:                                              ; preds = %166, %172
  %191 = phi ptr [ %179, %172 ], [ %159, %166 ]
  %192 = phi i32 [ %178, %172 ], [ 1, %166 ]
  %193 = load i32, ptr %191, align 4, !tbaa !6
  %194 = add nsw i32 %193, %192
  store i32 %194, ptr %191, align 4, !tbaa !6
  br label %195

195:                                              ; preds = %182, %190, %155, %145
  %196 = icmp eq i32 %147, %5
  br i1 %196, label %5514, label %59, !llvm.loop !1129

197:                                              ; preds = %42, %334
  %198 = phi i32 [ 0, %42 ], [ %283, %334 ]
  %199 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %43, label %200, label %269

200:                                              ; preds = %197, %259
  %201 = phi i32 [ %268, %259 ], [ 0, %197 ]
  %202 = phi i64 [ %210, %259 ], [ %47, %197 ]
  %203 = phi i64 [ %267, %259 ], [ %46, %197 ]
  %204 = phi i32 [ %265, %259 ], [ %199, %197 ]
  %205 = sub i32 %45, %201
  %206 = tail call i32 @llvm.smin.i32(i32 %205, i32 0)
  %207 = sub i32 %205, %206
  %208 = zext i32 %207 to i64
  %209 = add nuw nsw i64 %208, 1
  %210 = add nsw i64 %202, -1
  %211 = icmp ult i32 %207, 31
  br i1 %211, label %247, label %212

212:                                              ; preds = %200
  %213 = and i64 %209, 8589934560
  %214 = sub i64 %203, %213
  br label %215

215:                                              ; preds = %215, %212
  %216 = phi i64 [ 0, %212 ], [ %239, %215 ]
  %217 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %212 ], [ %235, %215 ]
  %218 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %212 ], [ %236, %215 ]
  %219 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %212 ], [ %237, %215 ]
  %220 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %212 ], [ %238, %215 ]
  %221 = sub i64 %203, %216
  %222 = getelementptr inbounds i32, ptr %11, i64 %221
  %223 = getelementptr inbounds i32, ptr %222, i64 -7
  %224 = load <8 x i32>, ptr %223, align 4, !tbaa !6
  %225 = shufflevector <8 x i32> %224, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %226 = getelementptr inbounds i32, ptr %222, i64 -15
  %227 = load <8 x i32>, ptr %226, align 4, !tbaa !6
  %228 = shufflevector <8 x i32> %227, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %229 = getelementptr inbounds i32, ptr %222, i64 -23
  %230 = load <8 x i32>, ptr %229, align 4, !tbaa !6
  %231 = shufflevector <8 x i32> %230, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %232 = getelementptr inbounds i32, ptr %222, i64 -31
  %233 = load <8 x i32>, ptr %232, align 4, !tbaa !6
  %234 = shufflevector <8 x i32> %233, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %235 = mul <8 x i32> %225, %217
  %236 = mul <8 x i32> %228, %218
  %237 = mul <8 x i32> %231, %219
  %238 = mul <8 x i32> %234, %220
  %239 = add nuw i64 %216, 32
  %240 = icmp eq i64 %239, %213
  br i1 %240, label %241, label %215, !llvm.loop !1130

241:                                              ; preds = %215
  %242 = mul <8 x i32> %236, %235
  %243 = mul <8 x i32> %237, %242
  %244 = mul <8 x i32> %238, %243
  %245 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %244)
  %246 = icmp eq i64 %209, %213
  br i1 %246, label %259, label %247

247:                                              ; preds = %200, %241
  %248 = phi i64 [ %203, %200 ], [ %214, %241 ]
  %249 = phi i32 [ 1, %200 ], [ %245, %241 ]
  br label %250

250:                                              ; preds = %247, %250
  %251 = phi i64 [ %256, %250 ], [ %248, %247 ]
  %252 = phi i32 [ %255, %250 ], [ %249, %247 ]
  %253 = getelementptr inbounds i32, ptr %11, i64 %251
  %254 = load i32, ptr %253, align 4, !tbaa !6
  %255 = mul nsw i32 %254, %252
  %256 = add nsw i64 %251, -1
  %257 = trunc i64 %251 to i32
  %258 = icmp sgt i32 %257, 0
  br i1 %258, label %250, label %259, !llvm.loop !1131

259:                                              ; preds = %250, %241
  %260 = phi i32 [ %245, %241 ], [ %255, %250 ]
  %261 = and i64 %210, 4294967295
  %262 = getelementptr inbounds i32, ptr %6, i64 %261
  %263 = load i32, ptr %262, align 4, !tbaa !6
  %264 = mul nsw i32 %263, %260
  %265 = add nsw i32 %264, %204
  %266 = icmp sgt i64 %202, 2
  %267 = add nsw i64 %203, -1
  %268 = add i32 %201, 1
  br i1 %266, label %200, label %269, !llvm.loop !1132

269:                                              ; preds = %259, %197
  %270 = phi i32 [ %199, %197 ], [ %265, %259 ]
  %271 = icmp slt i32 %270, %5
  br i1 %271, label %274, label %272

272:                                              ; preds = %269
  %273 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1736, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5519

274:                                              ; preds = %269
  %275 = sext i32 %270 to i64
  %276 = getelementptr inbounds float, ptr %24, i64 %275
  %277 = load float, ptr %276, align 4, !tbaa !163
  %278 = fptoui float %277 to i8
  %279 = load i8, ptr %26, align 1, !tbaa !12
  %280 = icmp ult i8 %279, %278
  br i1 %280, label %281, label %282

281:                                              ; preds = %274
  store i8 %278, ptr %26, align 1, !tbaa !12
  br label %282

282:                                              ; preds = %274, %281
  %283 = add nuw nsw i32 %198, 1
  br i1 %44, label %284, label %334

284:                                              ; preds = %282
  %285 = load i32, ptr %4, align 4, !tbaa !6
  %286 = load i32, ptr %12, align 4, !tbaa !6
  %287 = add nsw i32 %286, -1
  %288 = icmp slt i32 %285, %287
  br i1 %288, label %311, label %289

289:                                              ; preds = %284
  %290 = icmp eq i32 %285, %287
  br i1 %290, label %291, label %327

291:                                              ; preds = %289
  store i32 0, ptr %4, align 4, !tbaa !6
  %292 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %292, ptr %6, align 4, !tbaa !6
  br i1 %49, label %334, label %293

293:                                              ; preds = %291, %321
  %294 = phi i64 [ %325, %321 ], [ 1, %291 ]
  %295 = getelementptr inbounds i32, ptr %4, i64 %294
  %296 = load i32, ptr %295, align 4, !tbaa !6
  %297 = getelementptr inbounds i32, ptr %12, i64 %294
  %298 = load i32, ptr %297, align 4, !tbaa !6
  %299 = add nsw i32 %298, -1
  %300 = icmp slt i32 %296, %299
  br i1 %300, label %301, label %319

301:                                              ; preds = %293
  br i1 %288, label %311, label %302

302:                                              ; preds = %301
  %303 = shl i64 %294, 32
  %304 = add i64 %303, -4294967296
  %305 = ashr exact i64 %304, 32
  %306 = getelementptr inbounds i32, ptr %7, i64 %305
  %307 = load i32, ptr %306, align 4, !tbaa !6
  %308 = getelementptr inbounds i32, ptr %6, i64 %294
  %309 = load i32, ptr %308, align 4, !tbaa !6
  %310 = add nsw i32 %309, %307
  store i32 %310, ptr %308, align 4, !tbaa !6
  br label %329

311:                                              ; preds = %284, %301
  %312 = phi i32 [ %296, %301 ], [ %285, %284 ]
  %313 = phi ptr [ %295, %301 ], [ %4, %284 ]
  %314 = phi i64 [ %294, %301 ], [ 0, %284 ]
  %315 = add nsw i32 %312, 1
  store i32 %315, ptr %313, align 4, !tbaa !6
  %316 = getelementptr inbounds i32, ptr %7, i64 %314
  %317 = load i32, ptr %316, align 4, !tbaa !6
  %318 = getelementptr inbounds i32, ptr %6, i64 %314
  br label %329

319:                                              ; preds = %293
  %320 = icmp eq i32 %296, %299
  br i1 %320, label %321, label %327

321:                                              ; preds = %319
  store i32 0, ptr %295, align 4, !tbaa !6
  %322 = getelementptr inbounds i32, ptr %8, i64 %294
  %323 = load i32, ptr %322, align 4, !tbaa !6
  %324 = getelementptr inbounds i32, ptr %6, i64 %294
  store i32 %323, ptr %324, align 4, !tbaa !6
  %325 = add nuw nsw i64 %294, 1
  %326 = icmp eq i64 %325, %47
  br i1 %326, label %334, label %293, !llvm.loop !1133

327:                                              ; preds = %289, %319
  %328 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1736, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5519

329:                                              ; preds = %302, %311
  %330 = phi ptr [ %318, %311 ], [ %295, %302 ]
  %331 = phi i32 [ %317, %311 ], [ 1, %302 ]
  %332 = load i32, ptr %330, align 4, !tbaa !6
  %333 = add nsw i32 %332, %331
  store i32 %333, ptr %330, align 4, !tbaa !6
  br label %334

334:                                              ; preds = %321, %329, %291, %282
  %335 = icmp eq i32 %283, %5
  br i1 %335, label %5514, label %197, !llvm.loop !1134

336:                                              ; preds = %35
  %337 = getelementptr inbounds i32, ptr %3, i64 %19
  %338 = load i32, ptr %337, align 4, !tbaa !6
  %339 = icmp eq i32 %338, 0
  %340 = icmp sgt i32 %5, 0
  br i1 %339, label %350, label %341

341:                                              ; preds = %336
  br i1 %340, label %342, label %5514

342:                                              ; preds = %341
  %343 = icmp sgt i32 %13, 1
  %344 = icmp sgt i32 %13, 0
  %345 = add i32 %13, -2
  %346 = zext i32 %345 to i64
  %347 = zext i32 %13 to i64
  %348 = add nuw i32 %5, 1
  %349 = icmp eq i32 %13, 1
  br label %493

350:                                              ; preds = %336
  br i1 %340, label %351, label %5514

351:                                              ; preds = %350
  %352 = icmp sgt i32 %13, 1
  %353 = icmp sgt i32 %13, 0
  %354 = add i32 %13, -2
  %355 = zext i32 %354 to i64
  %356 = zext i32 %13 to i64
  %357 = add nuw i32 %5, 1
  %358 = icmp eq i32 %13, 1
  br label %359

359:                                              ; preds = %351, %491
  %360 = phi i32 [ 0, %351 ], [ %443, %491 ]
  %361 = phi double [ 0.000000e+00, %351 ], [ %442, %491 ]
  %362 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %352, label %363, label %432

363:                                              ; preds = %359, %422
  %364 = phi i32 [ %431, %422 ], [ 0, %359 ]
  %365 = phi i64 [ %373, %422 ], [ %356, %359 ]
  %366 = phi i64 [ %430, %422 ], [ %355, %359 ]
  %367 = phi i32 [ %428, %422 ], [ %362, %359 ]
  %368 = sub i32 %354, %364
  %369 = tail call i32 @llvm.smin.i32(i32 %368, i32 0)
  %370 = sub i32 %368, %369
  %371 = zext i32 %370 to i64
  %372 = add nuw nsw i64 %371, 1
  %373 = add nsw i64 %365, -1
  %374 = icmp ult i32 %370, 31
  br i1 %374, label %410, label %375

375:                                              ; preds = %363
  %376 = and i64 %372, 8589934560
  %377 = sub i64 %366, %376
  br label %378

378:                                              ; preds = %378, %375
  %379 = phi i64 [ 0, %375 ], [ %402, %378 ]
  %380 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %375 ], [ %398, %378 ]
  %381 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %375 ], [ %399, %378 ]
  %382 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %375 ], [ %400, %378 ]
  %383 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %375 ], [ %401, %378 ]
  %384 = sub i64 %366, %379
  %385 = getelementptr inbounds i32, ptr %9, i64 %384
  %386 = getelementptr inbounds i32, ptr %385, i64 -7
  %387 = load <8 x i32>, ptr %386, align 4, !tbaa !6
  %388 = shufflevector <8 x i32> %387, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %389 = getelementptr inbounds i32, ptr %385, i64 -15
  %390 = load <8 x i32>, ptr %389, align 4, !tbaa !6
  %391 = shufflevector <8 x i32> %390, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %392 = getelementptr inbounds i32, ptr %385, i64 -23
  %393 = load <8 x i32>, ptr %392, align 4, !tbaa !6
  %394 = shufflevector <8 x i32> %393, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %395 = getelementptr inbounds i32, ptr %385, i64 -31
  %396 = load <8 x i32>, ptr %395, align 4, !tbaa !6
  %397 = shufflevector <8 x i32> %396, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %398 = mul <8 x i32> %388, %380
  %399 = mul <8 x i32> %391, %381
  %400 = mul <8 x i32> %394, %382
  %401 = mul <8 x i32> %397, %383
  %402 = add nuw i64 %379, 32
  %403 = icmp eq i64 %402, %376
  br i1 %403, label %404, label %378, !llvm.loop !1135

404:                                              ; preds = %378
  %405 = mul <8 x i32> %399, %398
  %406 = mul <8 x i32> %400, %405
  %407 = mul <8 x i32> %401, %406
  %408 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %407)
  %409 = icmp eq i64 %372, %376
  br i1 %409, label %422, label %410

410:                                              ; preds = %363, %404
  %411 = phi i64 [ %366, %363 ], [ %377, %404 ]
  %412 = phi i32 [ 1, %363 ], [ %408, %404 ]
  br label %413

413:                                              ; preds = %410, %413
  %414 = phi i64 [ %419, %413 ], [ %411, %410 ]
  %415 = phi i32 [ %418, %413 ], [ %412, %410 ]
  %416 = getelementptr inbounds i32, ptr %9, i64 %414
  %417 = load i32, ptr %416, align 4, !tbaa !6
  %418 = mul nsw i32 %417, %415
  %419 = add nsw i64 %414, -1
  %420 = trunc i64 %414 to i32
  %421 = icmp sgt i32 %420, 0
  br i1 %421, label %413, label %422, !llvm.loop !1136

422:                                              ; preds = %413, %404
  %423 = phi i32 [ %408, %404 ], [ %418, %413 ]
  %424 = and i64 %373, 4294967295
  %425 = getelementptr inbounds i32, ptr %6, i64 %424
  %426 = load i32, ptr %425, align 4, !tbaa !6
  %427 = mul nsw i32 %426, %423
  %428 = add nsw i32 %427, %367
  %429 = icmp sgt i64 %365, 2
  %430 = add nsw i64 %366, -1
  %431 = add i32 %364, 1
  br i1 %429, label %363, label %432, !llvm.loop !1137

432:                                              ; preds = %422, %359
  %433 = phi i32 [ %362, %359 ], [ %428, %422 ]
  %434 = sext i32 %433 to i64
  %435 = getelementptr inbounds float, ptr %24, i64 %434
  %436 = load float, ptr %435, align 4, !tbaa !163
  %437 = fptoui float %436 to i8
  %438 = load i8, ptr %26, align 1, !tbaa !12
  %439 = icmp ult i8 %438, %437
  br i1 %439, label %440, label %441

440:                                              ; preds = %432
  store i8 %437, ptr %26, align 1, !tbaa !12
  br label %441

441:                                              ; preds = %440, %432
  %442 = fadd fast double %361, 1.000000e+00
  %443 = add nuw nsw i32 %360, 1
  br i1 %353, label %444, label %491

444:                                              ; preds = %441
  %445 = load i32, ptr %4, align 4, !tbaa !6
  %446 = load i32, ptr %12, align 4, !tbaa !6
  %447 = add nsw i32 %446, -1
  %448 = icmp slt i32 %445, %447
  br i1 %448, label %468, label %449

449:                                              ; preds = %444
  %450 = icmp eq i32 %445, %447
  br i1 %450, label %451, label %484

451:                                              ; preds = %449
  store i32 0, ptr %4, align 4, !tbaa !6
  %452 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %452, ptr %6, align 4, !tbaa !6
  br i1 %358, label %491, label %453

453:                                              ; preds = %451, %478
  %454 = phi i64 [ %482, %478 ], [ 1, %451 ]
  %455 = getelementptr inbounds i32, ptr %4, i64 %454
  %456 = load i32, ptr %455, align 4, !tbaa !6
  %457 = getelementptr inbounds i32, ptr %12, i64 %454
  %458 = load i32, ptr %457, align 4, !tbaa !6
  %459 = add nsw i32 %458, -1
  %460 = icmp slt i32 %456, %459
  br i1 %460, label %461, label %476

461:                                              ; preds = %453
  br i1 %448, label %468, label %462

462:                                              ; preds = %461
  %463 = getelementptr inbounds i32, ptr %7, i64 %454
  %464 = load i32, ptr %463, align 4, !tbaa !6
  %465 = getelementptr inbounds i32, ptr %6, i64 %454
  %466 = load i32, ptr %465, align 4, !tbaa !6
  %467 = add nsw i32 %466, %464
  store i32 %467, ptr %465, align 4, !tbaa !6
  br label %486

468:                                              ; preds = %444, %461
  %469 = phi i32 [ %456, %461 ], [ %445, %444 ]
  %470 = phi ptr [ %455, %461 ], [ %4, %444 ]
  %471 = phi i64 [ %454, %461 ], [ 0, %444 ]
  %472 = add nsw i32 %469, 1
  store i32 %472, ptr %470, align 4, !tbaa !6
  %473 = getelementptr inbounds i32, ptr %7, i64 %471
  %474 = load i32, ptr %473, align 4, !tbaa !6
  %475 = getelementptr inbounds i32, ptr %6, i64 %471
  br label %486

476:                                              ; preds = %453
  %477 = icmp eq i32 %456, %459
  br i1 %477, label %478, label %484

478:                                              ; preds = %476
  store i32 0, ptr %455, align 4, !tbaa !6
  %479 = getelementptr inbounds i32, ptr %8, i64 %454
  %480 = load i32, ptr %479, align 4, !tbaa !6
  %481 = getelementptr inbounds i32, ptr %6, i64 %454
  store i32 %480, ptr %481, align 4, !tbaa !6
  %482 = add nuw nsw i64 %454, 1
  %483 = icmp eq i64 %482, %356
  br i1 %483, label %491, label %453, !llvm.loop !1138

484:                                              ; preds = %449, %476
  %485 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1736, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5519

486:                                              ; preds = %462, %468
  %487 = phi ptr [ %475, %468 ], [ %455, %462 ]
  %488 = phi i32 [ %474, %468 ], [ 1, %462 ]
  %489 = load i32, ptr %487, align 4, !tbaa !6
  %490 = add nsw i32 %489, %488
  store i32 %490, ptr %487, align 4, !tbaa !6
  br label %491

491:                                              ; preds = %478, %486, %451, %441
  %492 = icmp eq i32 %443, %5
  br i1 %492, label %5514, label %359, !llvm.loop !1139

493:                                              ; preds = %342, %630
  %494 = phi i32 [ 0, %342 ], [ %579, %630 ]
  %495 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %343, label %496, label %565

496:                                              ; preds = %493, %555
  %497 = phi i32 [ %564, %555 ], [ 0, %493 ]
  %498 = phi i64 [ %506, %555 ], [ %347, %493 ]
  %499 = phi i64 [ %563, %555 ], [ %346, %493 ]
  %500 = phi i32 [ %561, %555 ], [ %495, %493 ]
  %501 = sub i32 %345, %497
  %502 = tail call i32 @llvm.smin.i32(i32 %501, i32 0)
  %503 = sub i32 %501, %502
  %504 = zext i32 %503 to i64
  %505 = add nuw nsw i64 %504, 1
  %506 = add nsw i64 %498, -1
  %507 = icmp ult i32 %503, 31
  br i1 %507, label %543, label %508

508:                                              ; preds = %496
  %509 = and i64 %505, 8589934560
  %510 = sub i64 %499, %509
  br label %511

511:                                              ; preds = %511, %508
  %512 = phi i64 [ 0, %508 ], [ %535, %511 ]
  %513 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %508 ], [ %531, %511 ]
  %514 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %508 ], [ %532, %511 ]
  %515 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %508 ], [ %533, %511 ]
  %516 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %508 ], [ %534, %511 ]
  %517 = sub i64 %499, %512
  %518 = getelementptr inbounds i32, ptr %11, i64 %517
  %519 = getelementptr inbounds i32, ptr %518, i64 -7
  %520 = load <8 x i32>, ptr %519, align 4, !tbaa !6
  %521 = shufflevector <8 x i32> %520, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %522 = getelementptr inbounds i32, ptr %518, i64 -15
  %523 = load <8 x i32>, ptr %522, align 4, !tbaa !6
  %524 = shufflevector <8 x i32> %523, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %525 = getelementptr inbounds i32, ptr %518, i64 -23
  %526 = load <8 x i32>, ptr %525, align 4, !tbaa !6
  %527 = shufflevector <8 x i32> %526, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %528 = getelementptr inbounds i32, ptr %518, i64 -31
  %529 = load <8 x i32>, ptr %528, align 4, !tbaa !6
  %530 = shufflevector <8 x i32> %529, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %531 = mul <8 x i32> %521, %513
  %532 = mul <8 x i32> %524, %514
  %533 = mul <8 x i32> %527, %515
  %534 = mul <8 x i32> %530, %516
  %535 = add nuw i64 %512, 32
  %536 = icmp eq i64 %535, %509
  br i1 %536, label %537, label %511, !llvm.loop !1140

537:                                              ; preds = %511
  %538 = mul <8 x i32> %532, %531
  %539 = mul <8 x i32> %533, %538
  %540 = mul <8 x i32> %534, %539
  %541 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %540)
  %542 = icmp eq i64 %505, %509
  br i1 %542, label %555, label %543

543:                                              ; preds = %496, %537
  %544 = phi i64 [ %499, %496 ], [ %510, %537 ]
  %545 = phi i32 [ 1, %496 ], [ %541, %537 ]
  br label %546

546:                                              ; preds = %543, %546
  %547 = phi i64 [ %552, %546 ], [ %544, %543 ]
  %548 = phi i32 [ %551, %546 ], [ %545, %543 ]
  %549 = getelementptr inbounds i32, ptr %11, i64 %547
  %550 = load i32, ptr %549, align 4, !tbaa !6
  %551 = mul nsw i32 %550, %548
  %552 = add nsw i64 %547, -1
  %553 = trunc i64 %547 to i32
  %554 = icmp sgt i32 %553, 0
  br i1 %554, label %546, label %555, !llvm.loop !1141

555:                                              ; preds = %546, %537
  %556 = phi i32 [ %541, %537 ], [ %551, %546 ]
  %557 = and i64 %506, 4294967295
  %558 = getelementptr inbounds i32, ptr %6, i64 %557
  %559 = load i32, ptr %558, align 4, !tbaa !6
  %560 = mul nsw i32 %559, %556
  %561 = add nsw i32 %560, %500
  %562 = icmp sgt i64 %498, 2
  %563 = add nsw i64 %499, -1
  %564 = add i32 %497, 1
  br i1 %562, label %496, label %565, !llvm.loop !1142

565:                                              ; preds = %555, %493
  %566 = phi i32 [ %495, %493 ], [ %561, %555 ]
  %567 = icmp slt i32 %566, %5
  br i1 %567, label %570, label %568

568:                                              ; preds = %565
  %569 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1736, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5519

570:                                              ; preds = %565
  %571 = sext i32 %566 to i64
  %572 = getelementptr inbounds float, ptr %24, i64 %571
  %573 = load float, ptr %572, align 4, !tbaa !163
  %574 = fptoui float %573 to i8
  %575 = load i8, ptr %26, align 1, !tbaa !12
  %576 = icmp ult i8 %575, %574
  br i1 %576, label %577, label %578

577:                                              ; preds = %570
  store i8 %574, ptr %26, align 1, !tbaa !12
  br label %578

578:                                              ; preds = %577, %570
  %579 = add nuw nsw i32 %494, 1
  br i1 %344, label %580, label %630

580:                                              ; preds = %578
  %581 = load i32, ptr %4, align 4, !tbaa !6
  %582 = load i32, ptr %12, align 4, !tbaa !6
  %583 = add nsw i32 %582, -1
  %584 = icmp slt i32 %581, %583
  br i1 %584, label %607, label %585

585:                                              ; preds = %580
  %586 = icmp eq i32 %581, %583
  br i1 %586, label %587, label %623

587:                                              ; preds = %585
  store i32 0, ptr %4, align 4, !tbaa !6
  %588 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %588, ptr %6, align 4, !tbaa !6
  br i1 %349, label %630, label %589

589:                                              ; preds = %587, %617
  %590 = phi i64 [ %621, %617 ], [ 1, %587 ]
  %591 = getelementptr inbounds i32, ptr %4, i64 %590
  %592 = load i32, ptr %591, align 4, !tbaa !6
  %593 = getelementptr inbounds i32, ptr %12, i64 %590
  %594 = load i32, ptr %593, align 4, !tbaa !6
  %595 = add nsw i32 %594, -1
  %596 = icmp slt i32 %592, %595
  br i1 %596, label %597, label %615

597:                                              ; preds = %589
  br i1 %584, label %607, label %598

598:                                              ; preds = %597
  %599 = shl i64 %590, 32
  %600 = add i64 %599, -4294967296
  %601 = ashr exact i64 %600, 32
  %602 = getelementptr inbounds i32, ptr %7, i64 %601
  %603 = load i32, ptr %602, align 4, !tbaa !6
  %604 = getelementptr inbounds i32, ptr %6, i64 %590
  %605 = load i32, ptr %604, align 4, !tbaa !6
  %606 = add nsw i32 %605, %603
  store i32 %606, ptr %604, align 4, !tbaa !6
  br label %625

607:                                              ; preds = %580, %597
  %608 = phi i32 [ %592, %597 ], [ %581, %580 ]
  %609 = phi ptr [ %591, %597 ], [ %4, %580 ]
  %610 = phi i64 [ %590, %597 ], [ 0, %580 ]
  %611 = add nsw i32 %608, 1
  store i32 %611, ptr %609, align 4, !tbaa !6
  %612 = getelementptr inbounds i32, ptr %7, i64 %610
  %613 = load i32, ptr %612, align 4, !tbaa !6
  %614 = getelementptr inbounds i32, ptr %6, i64 %610
  br label %625

615:                                              ; preds = %589
  %616 = icmp eq i32 %592, %595
  br i1 %616, label %617, label %623

617:                                              ; preds = %615
  store i32 0, ptr %591, align 4, !tbaa !6
  %618 = getelementptr inbounds i32, ptr %8, i64 %590
  %619 = load i32, ptr %618, align 4, !tbaa !6
  %620 = getelementptr inbounds i32, ptr %6, i64 %590
  store i32 %619, ptr %620, align 4, !tbaa !6
  %621 = add nuw nsw i64 %590, 1
  %622 = icmp eq i64 %621, %347
  br i1 %622, label %630, label %589, !llvm.loop !1143

623:                                              ; preds = %585, %615
  %624 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1736, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5519

625:                                              ; preds = %598, %607
  %626 = phi ptr [ %614, %607 ], [ %591, %598 ]
  %627 = phi i32 [ %613, %607 ], [ 1, %598 ]
  %628 = load i32, ptr %626, align 4, !tbaa !6
  %629 = add nsw i32 %628, %627
  store i32 %629, ptr %626, align 4, !tbaa !6
  br label %630

630:                                              ; preds = %617, %625, %587, %578
  %631 = icmp eq i32 %579, %5
  br i1 %631, label %5514, label %493, !llvm.loop !1144

632:                                              ; preds = %35
  %633 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1736, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5514

634:                                              ; preds = %18
  %635 = getelementptr inbounds ptr, ptr %14, i64 %19
  %636 = load ptr, ptr %635, align 8, !tbaa !10
  %637 = getelementptr inbounds ptr, ptr %16, i64 %19
  %638 = load ptr, ptr %637, align 8, !tbaa !10
  %639 = load float, ptr %636, align 4, !tbaa !163
  %640 = fptosi float %639 to i32
  store i32 %640, ptr %638, align 4, !tbaa !6
  %641 = icmp eq i32 %13, 0
  br i1 %641, label %5514, label %642

642:                                              ; preds = %634
  switch i32 %1, label %1239 [
    i32 1, label %643
    i32 0, label %943
  ]

643:                                              ; preds = %642
  %644 = getelementptr inbounds i32, ptr %3, i64 %19
  %645 = load i32, ptr %644, align 4, !tbaa !6
  %646 = icmp eq i32 %645, 0
  %647 = icmp sgt i32 %5, 0
  br i1 %646, label %657, label %648

648:                                              ; preds = %643
  br i1 %647, label %649, label %5514

649:                                              ; preds = %648
  %650 = icmp sgt i32 %13, 1
  %651 = icmp sgt i32 %13, 0
  %652 = add i32 %13, -2
  %653 = zext i32 %652 to i64
  %654 = zext i32 %13 to i64
  %655 = add nuw i32 %5, 1
  %656 = icmp eq i32 %13, 1
  br label %804

657:                                              ; preds = %643
  br i1 %647, label %658, label %5514

658:                                              ; preds = %657
  %659 = icmp sgt i32 %13, 1
  %660 = icmp sgt i32 %13, 0
  %661 = add i32 %13, -2
  %662 = zext i32 %661 to i64
  %663 = zext i32 %13 to i64
  %664 = add nuw i32 %5, 1
  %665 = icmp eq i32 %13, 1
  br label %666

666:                                              ; preds = %658, %802
  %667 = phi i32 [ 0, %658 ], [ %754, %802 ]
  %668 = phi double [ 0.000000e+00, %658 ], [ %753, %802 ]
  %669 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %659, label %670, label %739

670:                                              ; preds = %666, %729
  %671 = phi i32 [ %738, %729 ], [ 0, %666 ]
  %672 = phi i64 [ %680, %729 ], [ %663, %666 ]
  %673 = phi i64 [ %737, %729 ], [ %662, %666 ]
  %674 = phi i32 [ %735, %729 ], [ %669, %666 ]
  %675 = sub i32 %661, %671
  %676 = tail call i32 @llvm.smin.i32(i32 %675, i32 0)
  %677 = sub i32 %675, %676
  %678 = zext i32 %677 to i64
  %679 = add nuw nsw i64 %678, 1
  %680 = add nsw i64 %672, -1
  %681 = icmp ult i32 %677, 31
  br i1 %681, label %717, label %682

682:                                              ; preds = %670
  %683 = and i64 %679, 8589934560
  %684 = sub i64 %673, %683
  br label %685

685:                                              ; preds = %685, %682
  %686 = phi i64 [ 0, %682 ], [ %709, %685 ]
  %687 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %682 ], [ %705, %685 ]
  %688 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %682 ], [ %706, %685 ]
  %689 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %682 ], [ %707, %685 ]
  %690 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %682 ], [ %708, %685 ]
  %691 = sub i64 %673, %686
  %692 = getelementptr inbounds i32, ptr %9, i64 %691
  %693 = getelementptr inbounds i32, ptr %692, i64 -7
  %694 = load <8 x i32>, ptr %693, align 4, !tbaa !6
  %695 = shufflevector <8 x i32> %694, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %696 = getelementptr inbounds i32, ptr %692, i64 -15
  %697 = load <8 x i32>, ptr %696, align 4, !tbaa !6
  %698 = shufflevector <8 x i32> %697, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %699 = getelementptr inbounds i32, ptr %692, i64 -23
  %700 = load <8 x i32>, ptr %699, align 4, !tbaa !6
  %701 = shufflevector <8 x i32> %700, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %702 = getelementptr inbounds i32, ptr %692, i64 -31
  %703 = load <8 x i32>, ptr %702, align 4, !tbaa !6
  %704 = shufflevector <8 x i32> %703, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %705 = mul <8 x i32> %695, %687
  %706 = mul <8 x i32> %698, %688
  %707 = mul <8 x i32> %701, %689
  %708 = mul <8 x i32> %704, %690
  %709 = add nuw i64 %686, 32
  %710 = icmp eq i64 %709, %683
  br i1 %710, label %711, label %685, !llvm.loop !1145

711:                                              ; preds = %685
  %712 = mul <8 x i32> %706, %705
  %713 = mul <8 x i32> %707, %712
  %714 = mul <8 x i32> %708, %713
  %715 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %714)
  %716 = icmp eq i64 %679, %683
  br i1 %716, label %729, label %717

717:                                              ; preds = %670, %711
  %718 = phi i64 [ %673, %670 ], [ %684, %711 ]
  %719 = phi i32 [ 1, %670 ], [ %715, %711 ]
  br label %720

720:                                              ; preds = %717, %720
  %721 = phi i64 [ %726, %720 ], [ %718, %717 ]
  %722 = phi i32 [ %725, %720 ], [ %719, %717 ]
  %723 = getelementptr inbounds i32, ptr %9, i64 %721
  %724 = load i32, ptr %723, align 4, !tbaa !6
  %725 = mul nsw i32 %724, %722
  %726 = add nsw i64 %721, -1
  %727 = trunc i64 %721 to i32
  %728 = icmp sgt i32 %727, 0
  br i1 %728, label %720, label %729, !llvm.loop !1146

729:                                              ; preds = %720, %711
  %730 = phi i32 [ %715, %711 ], [ %725, %720 ]
  %731 = and i64 %680, 4294967295
  %732 = getelementptr inbounds i32, ptr %6, i64 %731
  %733 = load i32, ptr %732, align 4, !tbaa !6
  %734 = mul nsw i32 %733, %730
  %735 = add nsw i32 %734, %674
  %736 = icmp sgt i64 %672, 2
  %737 = add nsw i64 %673, -1
  %738 = add i32 %671, 1
  br i1 %736, label %670, label %739, !llvm.loop !1147

739:                                              ; preds = %729, %666
  %740 = phi i32 [ %669, %666 ], [ %735, %729 ]
  %741 = sext i32 %740 to i64
  %742 = getelementptr inbounds double, ptr %2, i64 %741
  %743 = load double, ptr %742, align 8, !tbaa !19
  %744 = getelementptr inbounds float, ptr %636, i64 %741
  %745 = load float, ptr %744, align 4, !tbaa !163
  %746 = fptosi float %745 to i32
  %747 = fcmp fast ueq double %743, 0.000000e+00
  br i1 %747, label %752, label %748

748:                                              ; preds = %739
  %749 = load i32, ptr %638, align 4, !tbaa !6
  %750 = icmp slt i32 %749, %746
  br i1 %750, label %751, label %752

751:                                              ; preds = %748
  store i32 %746, ptr %638, align 4, !tbaa !6
  br label %752

752:                                              ; preds = %748, %751, %739
  %753 = fadd fast double %743, %668
  %754 = add nuw nsw i32 %667, 1
  br i1 %660, label %755, label %802

755:                                              ; preds = %752
  %756 = load i32, ptr %4, align 4, !tbaa !6
  %757 = load i32, ptr %12, align 4, !tbaa !6
  %758 = add nsw i32 %757, -1
  %759 = icmp slt i32 %756, %758
  br i1 %759, label %779, label %760

760:                                              ; preds = %755
  %761 = icmp eq i32 %756, %758
  br i1 %761, label %762, label %795

762:                                              ; preds = %760
  store i32 0, ptr %4, align 4, !tbaa !6
  %763 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %763, ptr %6, align 4, !tbaa !6
  br i1 %665, label %802, label %764

764:                                              ; preds = %762, %789
  %765 = phi i64 [ %793, %789 ], [ 1, %762 ]
  %766 = getelementptr inbounds i32, ptr %4, i64 %765
  %767 = load i32, ptr %766, align 4, !tbaa !6
  %768 = getelementptr inbounds i32, ptr %12, i64 %765
  %769 = load i32, ptr %768, align 4, !tbaa !6
  %770 = add nsw i32 %769, -1
  %771 = icmp slt i32 %767, %770
  br i1 %771, label %772, label %787

772:                                              ; preds = %764
  br i1 %759, label %779, label %773

773:                                              ; preds = %772
  %774 = getelementptr inbounds i32, ptr %7, i64 %765
  %775 = load i32, ptr %774, align 4, !tbaa !6
  %776 = getelementptr inbounds i32, ptr %6, i64 %765
  %777 = load i32, ptr %776, align 4, !tbaa !6
  %778 = add nsw i32 %777, %775
  store i32 %778, ptr %776, align 4, !tbaa !6
  br label %797

779:                                              ; preds = %755, %772
  %780 = phi i32 [ %767, %772 ], [ %756, %755 ]
  %781 = phi ptr [ %766, %772 ], [ %4, %755 ]
  %782 = phi i64 [ %765, %772 ], [ 0, %755 ]
  %783 = add nsw i32 %780, 1
  store i32 %783, ptr %781, align 4, !tbaa !6
  %784 = getelementptr inbounds i32, ptr %7, i64 %782
  %785 = load i32, ptr %784, align 4, !tbaa !6
  %786 = getelementptr inbounds i32, ptr %6, i64 %782
  br label %797

787:                                              ; preds = %764
  %788 = icmp eq i32 %767, %770
  br i1 %788, label %789, label %795

789:                                              ; preds = %787
  store i32 0, ptr %766, align 4, !tbaa !6
  %790 = getelementptr inbounds i32, ptr %8, i64 %765
  %791 = load i32, ptr %790, align 4, !tbaa !6
  %792 = getelementptr inbounds i32, ptr %6, i64 %765
  store i32 %791, ptr %792, align 4, !tbaa !6
  %793 = add nuw nsw i64 %765, 1
  %794 = icmp eq i64 %793, %663
  br i1 %794, label %802, label %764, !llvm.loop !1148

795:                                              ; preds = %760, %787
  %796 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1739, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5519

797:                                              ; preds = %773, %779
  %798 = phi ptr [ %786, %779 ], [ %766, %773 ]
  %799 = phi i32 [ %785, %779 ], [ 1, %773 ]
  %800 = load i32, ptr %798, align 4, !tbaa !6
  %801 = add nsw i32 %800, %799
  store i32 %801, ptr %798, align 4, !tbaa !6
  br label %802

802:                                              ; preds = %789, %797, %762, %752
  %803 = icmp eq i32 %754, %5
  br i1 %803, label %5514, label %666, !llvm.loop !1149

804:                                              ; preds = %649, %941
  %805 = phi i32 [ 0, %649 ], [ %890, %941 ]
  %806 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %650, label %807, label %876

807:                                              ; preds = %804, %866
  %808 = phi i32 [ %875, %866 ], [ 0, %804 ]
  %809 = phi i64 [ %817, %866 ], [ %654, %804 ]
  %810 = phi i64 [ %874, %866 ], [ %653, %804 ]
  %811 = phi i32 [ %872, %866 ], [ %806, %804 ]
  %812 = sub i32 %652, %808
  %813 = tail call i32 @llvm.smin.i32(i32 %812, i32 0)
  %814 = sub i32 %812, %813
  %815 = zext i32 %814 to i64
  %816 = add nuw nsw i64 %815, 1
  %817 = add nsw i64 %809, -1
  %818 = icmp ult i32 %814, 31
  br i1 %818, label %854, label %819

819:                                              ; preds = %807
  %820 = and i64 %816, 8589934560
  %821 = sub i64 %810, %820
  br label %822

822:                                              ; preds = %822, %819
  %823 = phi i64 [ 0, %819 ], [ %846, %822 ]
  %824 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %819 ], [ %842, %822 ]
  %825 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %819 ], [ %843, %822 ]
  %826 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %819 ], [ %844, %822 ]
  %827 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %819 ], [ %845, %822 ]
  %828 = sub i64 %810, %823
  %829 = getelementptr inbounds i32, ptr %11, i64 %828
  %830 = getelementptr inbounds i32, ptr %829, i64 -7
  %831 = load <8 x i32>, ptr %830, align 4, !tbaa !6
  %832 = shufflevector <8 x i32> %831, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %833 = getelementptr inbounds i32, ptr %829, i64 -15
  %834 = load <8 x i32>, ptr %833, align 4, !tbaa !6
  %835 = shufflevector <8 x i32> %834, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %836 = getelementptr inbounds i32, ptr %829, i64 -23
  %837 = load <8 x i32>, ptr %836, align 4, !tbaa !6
  %838 = shufflevector <8 x i32> %837, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %839 = getelementptr inbounds i32, ptr %829, i64 -31
  %840 = load <8 x i32>, ptr %839, align 4, !tbaa !6
  %841 = shufflevector <8 x i32> %840, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %842 = mul <8 x i32> %832, %824
  %843 = mul <8 x i32> %835, %825
  %844 = mul <8 x i32> %838, %826
  %845 = mul <8 x i32> %841, %827
  %846 = add nuw i64 %823, 32
  %847 = icmp eq i64 %846, %820
  br i1 %847, label %848, label %822, !llvm.loop !1150

848:                                              ; preds = %822
  %849 = mul <8 x i32> %843, %842
  %850 = mul <8 x i32> %844, %849
  %851 = mul <8 x i32> %845, %850
  %852 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %851)
  %853 = icmp eq i64 %816, %820
  br i1 %853, label %866, label %854

854:                                              ; preds = %807, %848
  %855 = phi i64 [ %810, %807 ], [ %821, %848 ]
  %856 = phi i32 [ 1, %807 ], [ %852, %848 ]
  br label %857

857:                                              ; preds = %854, %857
  %858 = phi i64 [ %863, %857 ], [ %855, %854 ]
  %859 = phi i32 [ %862, %857 ], [ %856, %854 ]
  %860 = getelementptr inbounds i32, ptr %11, i64 %858
  %861 = load i32, ptr %860, align 4, !tbaa !6
  %862 = mul nsw i32 %861, %859
  %863 = add nsw i64 %858, -1
  %864 = trunc i64 %858 to i32
  %865 = icmp sgt i32 %864, 0
  br i1 %865, label %857, label %866, !llvm.loop !1151

866:                                              ; preds = %857, %848
  %867 = phi i32 [ %852, %848 ], [ %862, %857 ]
  %868 = and i64 %817, 4294967295
  %869 = getelementptr inbounds i32, ptr %6, i64 %868
  %870 = load i32, ptr %869, align 4, !tbaa !6
  %871 = mul nsw i32 %870, %867
  %872 = add nsw i32 %871, %811
  %873 = icmp sgt i64 %809, 2
  %874 = add nsw i64 %810, -1
  %875 = add i32 %808, 1
  br i1 %873, label %807, label %876, !llvm.loop !1152

876:                                              ; preds = %866, %804
  %877 = phi i32 [ %806, %804 ], [ %872, %866 ]
  %878 = icmp slt i32 %877, %5
  br i1 %878, label %881, label %879

879:                                              ; preds = %876
  %880 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1739, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5519

881:                                              ; preds = %876
  %882 = sext i32 %877 to i64
  %883 = getelementptr inbounds float, ptr %636, i64 %882
  %884 = load float, ptr %883, align 4, !tbaa !163
  %885 = fptosi float %884 to i32
  %886 = load i32, ptr %638, align 4, !tbaa !6
  %887 = icmp slt i32 %886, %885
  br i1 %887, label %888, label %889

888:                                              ; preds = %881
  store i32 %885, ptr %638, align 4, !tbaa !6
  br label %889

889:                                              ; preds = %881, %888
  %890 = add nuw nsw i32 %805, 1
  br i1 %651, label %891, label %941

891:                                              ; preds = %889
  %892 = load i32, ptr %4, align 4, !tbaa !6
  %893 = load i32, ptr %12, align 4, !tbaa !6
  %894 = add nsw i32 %893, -1
  %895 = icmp slt i32 %892, %894
  br i1 %895, label %918, label %896

896:                                              ; preds = %891
  %897 = icmp eq i32 %892, %894
  br i1 %897, label %898, label %934

898:                                              ; preds = %896
  store i32 0, ptr %4, align 4, !tbaa !6
  %899 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %899, ptr %6, align 4, !tbaa !6
  br i1 %656, label %941, label %900

900:                                              ; preds = %898, %928
  %901 = phi i64 [ %932, %928 ], [ 1, %898 ]
  %902 = getelementptr inbounds i32, ptr %4, i64 %901
  %903 = load i32, ptr %902, align 4, !tbaa !6
  %904 = getelementptr inbounds i32, ptr %12, i64 %901
  %905 = load i32, ptr %904, align 4, !tbaa !6
  %906 = add nsw i32 %905, -1
  %907 = icmp slt i32 %903, %906
  br i1 %907, label %908, label %926

908:                                              ; preds = %900
  br i1 %895, label %918, label %909

909:                                              ; preds = %908
  %910 = shl i64 %901, 32
  %911 = add i64 %910, -4294967296
  %912 = ashr exact i64 %911, 32
  %913 = getelementptr inbounds i32, ptr %7, i64 %912
  %914 = load i32, ptr %913, align 4, !tbaa !6
  %915 = getelementptr inbounds i32, ptr %6, i64 %901
  %916 = load i32, ptr %915, align 4, !tbaa !6
  %917 = add nsw i32 %916, %914
  store i32 %917, ptr %915, align 4, !tbaa !6
  br label %936

918:                                              ; preds = %891, %908
  %919 = phi i32 [ %903, %908 ], [ %892, %891 ]
  %920 = phi ptr [ %902, %908 ], [ %4, %891 ]
  %921 = phi i64 [ %901, %908 ], [ 0, %891 ]
  %922 = add nsw i32 %919, 1
  store i32 %922, ptr %920, align 4, !tbaa !6
  %923 = getelementptr inbounds i32, ptr %7, i64 %921
  %924 = load i32, ptr %923, align 4, !tbaa !6
  %925 = getelementptr inbounds i32, ptr %6, i64 %921
  br label %936

926:                                              ; preds = %900
  %927 = icmp eq i32 %903, %906
  br i1 %927, label %928, label %934

928:                                              ; preds = %926
  store i32 0, ptr %902, align 4, !tbaa !6
  %929 = getelementptr inbounds i32, ptr %8, i64 %901
  %930 = load i32, ptr %929, align 4, !tbaa !6
  %931 = getelementptr inbounds i32, ptr %6, i64 %901
  store i32 %930, ptr %931, align 4, !tbaa !6
  %932 = add nuw nsw i64 %901, 1
  %933 = icmp eq i64 %932, %654
  br i1 %933, label %941, label %900, !llvm.loop !1153

934:                                              ; preds = %896, %926
  %935 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1739, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5519

936:                                              ; preds = %909, %918
  %937 = phi ptr [ %925, %918 ], [ %902, %909 ]
  %938 = phi i32 [ %924, %918 ], [ 1, %909 ]
  %939 = load i32, ptr %937, align 4, !tbaa !6
  %940 = add nsw i32 %939, %938
  store i32 %940, ptr %937, align 4, !tbaa !6
  br label %941

941:                                              ; preds = %928, %936, %898, %889
  %942 = icmp eq i32 %890, %5
  br i1 %942, label %5514, label %804, !llvm.loop !1154

943:                                              ; preds = %642
  %944 = getelementptr inbounds i32, ptr %3, i64 %19
  %945 = load i32, ptr %944, align 4, !tbaa !6
  %946 = icmp eq i32 %945, 0
  %947 = icmp sgt i32 %5, 0
  br i1 %946, label %957, label %948

948:                                              ; preds = %943
  br i1 %947, label %949, label %5514

949:                                              ; preds = %948
  %950 = icmp sgt i32 %13, 1
  %951 = icmp sgt i32 %13, 0
  %952 = add i32 %13, -2
  %953 = zext i32 %952 to i64
  %954 = zext i32 %13 to i64
  %955 = add nuw i32 %5, 1
  %956 = icmp eq i32 %13, 1
  br label %1100

957:                                              ; preds = %943
  br i1 %947, label %958, label %5514

958:                                              ; preds = %957
  %959 = icmp sgt i32 %13, 1
  %960 = icmp sgt i32 %13, 0
  %961 = add i32 %13, -2
  %962 = zext i32 %961 to i64
  %963 = zext i32 %13 to i64
  %964 = add nuw i32 %5, 1
  %965 = icmp eq i32 %13, 1
  br label %966

966:                                              ; preds = %958, %1098
  %967 = phi i32 [ 0, %958 ], [ %1050, %1098 ]
  %968 = phi double [ 0.000000e+00, %958 ], [ %1049, %1098 ]
  %969 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %959, label %970, label %1039

970:                                              ; preds = %966, %1029
  %971 = phi i32 [ %1038, %1029 ], [ 0, %966 ]
  %972 = phi i64 [ %980, %1029 ], [ %963, %966 ]
  %973 = phi i64 [ %1037, %1029 ], [ %962, %966 ]
  %974 = phi i32 [ %1035, %1029 ], [ %969, %966 ]
  %975 = sub i32 %961, %971
  %976 = tail call i32 @llvm.smin.i32(i32 %975, i32 0)
  %977 = sub i32 %975, %976
  %978 = zext i32 %977 to i64
  %979 = add nuw nsw i64 %978, 1
  %980 = add nsw i64 %972, -1
  %981 = icmp ult i32 %977, 31
  br i1 %981, label %1017, label %982

982:                                              ; preds = %970
  %983 = and i64 %979, 8589934560
  %984 = sub i64 %973, %983
  br label %985

985:                                              ; preds = %985, %982
  %986 = phi i64 [ 0, %982 ], [ %1009, %985 ]
  %987 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %982 ], [ %1005, %985 ]
  %988 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %982 ], [ %1006, %985 ]
  %989 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %982 ], [ %1007, %985 ]
  %990 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %982 ], [ %1008, %985 ]
  %991 = sub i64 %973, %986
  %992 = getelementptr inbounds i32, ptr %9, i64 %991
  %993 = getelementptr inbounds i32, ptr %992, i64 -7
  %994 = load <8 x i32>, ptr %993, align 4, !tbaa !6
  %995 = shufflevector <8 x i32> %994, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %996 = getelementptr inbounds i32, ptr %992, i64 -15
  %997 = load <8 x i32>, ptr %996, align 4, !tbaa !6
  %998 = shufflevector <8 x i32> %997, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %999 = getelementptr inbounds i32, ptr %992, i64 -23
  %1000 = load <8 x i32>, ptr %999, align 4, !tbaa !6
  %1001 = shufflevector <8 x i32> %1000, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1002 = getelementptr inbounds i32, ptr %992, i64 -31
  %1003 = load <8 x i32>, ptr %1002, align 4, !tbaa !6
  %1004 = shufflevector <8 x i32> %1003, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1005 = mul <8 x i32> %995, %987
  %1006 = mul <8 x i32> %998, %988
  %1007 = mul <8 x i32> %1001, %989
  %1008 = mul <8 x i32> %1004, %990
  %1009 = add nuw i64 %986, 32
  %1010 = icmp eq i64 %1009, %983
  br i1 %1010, label %1011, label %985, !llvm.loop !1155

1011:                                             ; preds = %985
  %1012 = mul <8 x i32> %1006, %1005
  %1013 = mul <8 x i32> %1007, %1012
  %1014 = mul <8 x i32> %1008, %1013
  %1015 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1014)
  %1016 = icmp eq i64 %979, %983
  br i1 %1016, label %1029, label %1017

1017:                                             ; preds = %970, %1011
  %1018 = phi i64 [ %973, %970 ], [ %984, %1011 ]
  %1019 = phi i32 [ 1, %970 ], [ %1015, %1011 ]
  br label %1020

1020:                                             ; preds = %1017, %1020
  %1021 = phi i64 [ %1026, %1020 ], [ %1018, %1017 ]
  %1022 = phi i32 [ %1025, %1020 ], [ %1019, %1017 ]
  %1023 = getelementptr inbounds i32, ptr %9, i64 %1021
  %1024 = load i32, ptr %1023, align 4, !tbaa !6
  %1025 = mul nsw i32 %1024, %1022
  %1026 = add nsw i64 %1021, -1
  %1027 = trunc i64 %1021 to i32
  %1028 = icmp sgt i32 %1027, 0
  br i1 %1028, label %1020, label %1029, !llvm.loop !1156

1029:                                             ; preds = %1020, %1011
  %1030 = phi i32 [ %1015, %1011 ], [ %1025, %1020 ]
  %1031 = and i64 %980, 4294967295
  %1032 = getelementptr inbounds i32, ptr %6, i64 %1031
  %1033 = load i32, ptr %1032, align 4, !tbaa !6
  %1034 = mul nsw i32 %1033, %1030
  %1035 = add nsw i32 %1034, %974
  %1036 = icmp sgt i64 %972, 2
  %1037 = add nsw i64 %973, -1
  %1038 = add i32 %971, 1
  br i1 %1036, label %970, label %1039, !llvm.loop !1157

1039:                                             ; preds = %1029, %966
  %1040 = phi i32 [ %969, %966 ], [ %1035, %1029 ]
  %1041 = sext i32 %1040 to i64
  %1042 = getelementptr inbounds float, ptr %636, i64 %1041
  %1043 = load float, ptr %1042, align 4, !tbaa !163
  %1044 = fptosi float %1043 to i32
  %1045 = load i32, ptr %638, align 4, !tbaa !6
  %1046 = icmp slt i32 %1045, %1044
  br i1 %1046, label %1047, label %1048

1047:                                             ; preds = %1039
  store i32 %1044, ptr %638, align 4, !tbaa !6
  br label %1048

1048:                                             ; preds = %1047, %1039
  %1049 = fadd fast double %968, 1.000000e+00
  %1050 = add nuw nsw i32 %967, 1
  br i1 %960, label %1051, label %1098

1051:                                             ; preds = %1048
  %1052 = load i32, ptr %4, align 4, !tbaa !6
  %1053 = load i32, ptr %12, align 4, !tbaa !6
  %1054 = add nsw i32 %1053, -1
  %1055 = icmp slt i32 %1052, %1054
  br i1 %1055, label %1075, label %1056

1056:                                             ; preds = %1051
  %1057 = icmp eq i32 %1052, %1054
  br i1 %1057, label %1058, label %1091

1058:                                             ; preds = %1056
  store i32 0, ptr %4, align 4, !tbaa !6
  %1059 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1059, ptr %6, align 4, !tbaa !6
  br i1 %965, label %1098, label %1060

1060:                                             ; preds = %1058, %1085
  %1061 = phi i64 [ %1089, %1085 ], [ 1, %1058 ]
  %1062 = getelementptr inbounds i32, ptr %4, i64 %1061
  %1063 = load i32, ptr %1062, align 4, !tbaa !6
  %1064 = getelementptr inbounds i32, ptr %12, i64 %1061
  %1065 = load i32, ptr %1064, align 4, !tbaa !6
  %1066 = add nsw i32 %1065, -1
  %1067 = icmp slt i32 %1063, %1066
  br i1 %1067, label %1068, label %1083

1068:                                             ; preds = %1060
  br i1 %1055, label %1075, label %1069

1069:                                             ; preds = %1068
  %1070 = getelementptr inbounds i32, ptr %7, i64 %1061
  %1071 = load i32, ptr %1070, align 4, !tbaa !6
  %1072 = getelementptr inbounds i32, ptr %6, i64 %1061
  %1073 = load i32, ptr %1072, align 4, !tbaa !6
  %1074 = add nsw i32 %1073, %1071
  store i32 %1074, ptr %1072, align 4, !tbaa !6
  br label %1093

1075:                                             ; preds = %1051, %1068
  %1076 = phi i32 [ %1063, %1068 ], [ %1052, %1051 ]
  %1077 = phi ptr [ %1062, %1068 ], [ %4, %1051 ]
  %1078 = phi i64 [ %1061, %1068 ], [ 0, %1051 ]
  %1079 = add nsw i32 %1076, 1
  store i32 %1079, ptr %1077, align 4, !tbaa !6
  %1080 = getelementptr inbounds i32, ptr %7, i64 %1078
  %1081 = load i32, ptr %1080, align 4, !tbaa !6
  %1082 = getelementptr inbounds i32, ptr %6, i64 %1078
  br label %1093

1083:                                             ; preds = %1060
  %1084 = icmp eq i32 %1063, %1066
  br i1 %1084, label %1085, label %1091

1085:                                             ; preds = %1083
  store i32 0, ptr %1062, align 4, !tbaa !6
  %1086 = getelementptr inbounds i32, ptr %8, i64 %1061
  %1087 = load i32, ptr %1086, align 4, !tbaa !6
  %1088 = getelementptr inbounds i32, ptr %6, i64 %1061
  store i32 %1087, ptr %1088, align 4, !tbaa !6
  %1089 = add nuw nsw i64 %1061, 1
  %1090 = icmp eq i64 %1089, %963
  br i1 %1090, label %1098, label %1060, !llvm.loop !1158

1091:                                             ; preds = %1056, %1083
  %1092 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1739, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5519

1093:                                             ; preds = %1069, %1075
  %1094 = phi ptr [ %1082, %1075 ], [ %1062, %1069 ]
  %1095 = phi i32 [ %1081, %1075 ], [ 1, %1069 ]
  %1096 = load i32, ptr %1094, align 4, !tbaa !6
  %1097 = add nsw i32 %1096, %1095
  store i32 %1097, ptr %1094, align 4, !tbaa !6
  br label %1098

1098:                                             ; preds = %1085, %1093, %1058, %1048
  %1099 = icmp eq i32 %1050, %5
  br i1 %1099, label %5514, label %966, !llvm.loop !1159

1100:                                             ; preds = %949, %1237
  %1101 = phi i32 [ 0, %949 ], [ %1186, %1237 ]
  %1102 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %950, label %1103, label %1172

1103:                                             ; preds = %1100, %1162
  %1104 = phi i32 [ %1171, %1162 ], [ 0, %1100 ]
  %1105 = phi i64 [ %1113, %1162 ], [ %954, %1100 ]
  %1106 = phi i64 [ %1170, %1162 ], [ %953, %1100 ]
  %1107 = phi i32 [ %1168, %1162 ], [ %1102, %1100 ]
  %1108 = sub i32 %952, %1104
  %1109 = tail call i32 @llvm.smin.i32(i32 %1108, i32 0)
  %1110 = sub i32 %1108, %1109
  %1111 = zext i32 %1110 to i64
  %1112 = add nuw nsw i64 %1111, 1
  %1113 = add nsw i64 %1105, -1
  %1114 = icmp ult i32 %1110, 31
  br i1 %1114, label %1150, label %1115

1115:                                             ; preds = %1103
  %1116 = and i64 %1112, 8589934560
  %1117 = sub i64 %1106, %1116
  br label %1118

1118:                                             ; preds = %1118, %1115
  %1119 = phi i64 [ 0, %1115 ], [ %1142, %1118 ]
  %1120 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1115 ], [ %1138, %1118 ]
  %1121 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1115 ], [ %1139, %1118 ]
  %1122 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1115 ], [ %1140, %1118 ]
  %1123 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1115 ], [ %1141, %1118 ]
  %1124 = sub i64 %1106, %1119
  %1125 = getelementptr inbounds i32, ptr %11, i64 %1124
  %1126 = getelementptr inbounds i32, ptr %1125, i64 -7
  %1127 = load <8 x i32>, ptr %1126, align 4, !tbaa !6
  %1128 = shufflevector <8 x i32> %1127, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1129 = getelementptr inbounds i32, ptr %1125, i64 -15
  %1130 = load <8 x i32>, ptr %1129, align 4, !tbaa !6
  %1131 = shufflevector <8 x i32> %1130, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1132 = getelementptr inbounds i32, ptr %1125, i64 -23
  %1133 = load <8 x i32>, ptr %1132, align 4, !tbaa !6
  %1134 = shufflevector <8 x i32> %1133, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1135 = getelementptr inbounds i32, ptr %1125, i64 -31
  %1136 = load <8 x i32>, ptr %1135, align 4, !tbaa !6
  %1137 = shufflevector <8 x i32> %1136, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1138 = mul <8 x i32> %1128, %1120
  %1139 = mul <8 x i32> %1131, %1121
  %1140 = mul <8 x i32> %1134, %1122
  %1141 = mul <8 x i32> %1137, %1123
  %1142 = add nuw i64 %1119, 32
  %1143 = icmp eq i64 %1142, %1116
  br i1 %1143, label %1144, label %1118, !llvm.loop !1160

1144:                                             ; preds = %1118
  %1145 = mul <8 x i32> %1139, %1138
  %1146 = mul <8 x i32> %1140, %1145
  %1147 = mul <8 x i32> %1141, %1146
  %1148 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1147)
  %1149 = icmp eq i64 %1112, %1116
  br i1 %1149, label %1162, label %1150

1150:                                             ; preds = %1103, %1144
  %1151 = phi i64 [ %1106, %1103 ], [ %1117, %1144 ]
  %1152 = phi i32 [ 1, %1103 ], [ %1148, %1144 ]
  br label %1153

1153:                                             ; preds = %1150, %1153
  %1154 = phi i64 [ %1159, %1153 ], [ %1151, %1150 ]
  %1155 = phi i32 [ %1158, %1153 ], [ %1152, %1150 ]
  %1156 = getelementptr inbounds i32, ptr %11, i64 %1154
  %1157 = load i32, ptr %1156, align 4, !tbaa !6
  %1158 = mul nsw i32 %1157, %1155
  %1159 = add nsw i64 %1154, -1
  %1160 = trunc i64 %1154 to i32
  %1161 = icmp sgt i32 %1160, 0
  br i1 %1161, label %1153, label %1162, !llvm.loop !1161

1162:                                             ; preds = %1153, %1144
  %1163 = phi i32 [ %1148, %1144 ], [ %1158, %1153 ]
  %1164 = and i64 %1113, 4294967295
  %1165 = getelementptr inbounds i32, ptr %6, i64 %1164
  %1166 = load i32, ptr %1165, align 4, !tbaa !6
  %1167 = mul nsw i32 %1166, %1163
  %1168 = add nsw i32 %1167, %1107
  %1169 = icmp sgt i64 %1105, 2
  %1170 = add nsw i64 %1106, -1
  %1171 = add i32 %1104, 1
  br i1 %1169, label %1103, label %1172, !llvm.loop !1162

1172:                                             ; preds = %1162, %1100
  %1173 = phi i32 [ %1102, %1100 ], [ %1168, %1162 ]
  %1174 = icmp slt i32 %1173, %5
  br i1 %1174, label %1177, label %1175

1175:                                             ; preds = %1172
  %1176 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1739, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5519

1177:                                             ; preds = %1172
  %1178 = sext i32 %1173 to i64
  %1179 = getelementptr inbounds float, ptr %636, i64 %1178
  %1180 = load float, ptr %1179, align 4, !tbaa !163
  %1181 = fptosi float %1180 to i32
  %1182 = load i32, ptr %638, align 4, !tbaa !6
  %1183 = icmp slt i32 %1182, %1181
  br i1 %1183, label %1184, label %1185

1184:                                             ; preds = %1177
  store i32 %1181, ptr %638, align 4, !tbaa !6
  br label %1185

1185:                                             ; preds = %1184, %1177
  %1186 = add nuw nsw i32 %1101, 1
  br i1 %951, label %1187, label %1237

1187:                                             ; preds = %1185
  %1188 = load i32, ptr %4, align 4, !tbaa !6
  %1189 = load i32, ptr %12, align 4, !tbaa !6
  %1190 = add nsw i32 %1189, -1
  %1191 = icmp slt i32 %1188, %1190
  br i1 %1191, label %1214, label %1192

1192:                                             ; preds = %1187
  %1193 = icmp eq i32 %1188, %1190
  br i1 %1193, label %1194, label %1230

1194:                                             ; preds = %1192
  store i32 0, ptr %4, align 4, !tbaa !6
  %1195 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1195, ptr %6, align 4, !tbaa !6
  br i1 %956, label %1237, label %1196

1196:                                             ; preds = %1194, %1224
  %1197 = phi i64 [ %1228, %1224 ], [ 1, %1194 ]
  %1198 = getelementptr inbounds i32, ptr %4, i64 %1197
  %1199 = load i32, ptr %1198, align 4, !tbaa !6
  %1200 = getelementptr inbounds i32, ptr %12, i64 %1197
  %1201 = load i32, ptr %1200, align 4, !tbaa !6
  %1202 = add nsw i32 %1201, -1
  %1203 = icmp slt i32 %1199, %1202
  br i1 %1203, label %1204, label %1222

1204:                                             ; preds = %1196
  br i1 %1191, label %1214, label %1205

1205:                                             ; preds = %1204
  %1206 = shl i64 %1197, 32
  %1207 = add i64 %1206, -4294967296
  %1208 = ashr exact i64 %1207, 32
  %1209 = getelementptr inbounds i32, ptr %7, i64 %1208
  %1210 = load i32, ptr %1209, align 4, !tbaa !6
  %1211 = getelementptr inbounds i32, ptr %6, i64 %1197
  %1212 = load i32, ptr %1211, align 4, !tbaa !6
  %1213 = add nsw i32 %1212, %1210
  store i32 %1213, ptr %1211, align 4, !tbaa !6
  br label %1232

1214:                                             ; preds = %1187, %1204
  %1215 = phi i32 [ %1199, %1204 ], [ %1188, %1187 ]
  %1216 = phi ptr [ %1198, %1204 ], [ %4, %1187 ]
  %1217 = phi i64 [ %1197, %1204 ], [ 0, %1187 ]
  %1218 = add nsw i32 %1215, 1
  store i32 %1218, ptr %1216, align 4, !tbaa !6
  %1219 = getelementptr inbounds i32, ptr %7, i64 %1217
  %1220 = load i32, ptr %1219, align 4, !tbaa !6
  %1221 = getelementptr inbounds i32, ptr %6, i64 %1217
  br label %1232

1222:                                             ; preds = %1196
  %1223 = icmp eq i32 %1199, %1202
  br i1 %1223, label %1224, label %1230

1224:                                             ; preds = %1222
  store i32 0, ptr %1198, align 4, !tbaa !6
  %1225 = getelementptr inbounds i32, ptr %8, i64 %1197
  %1226 = load i32, ptr %1225, align 4, !tbaa !6
  %1227 = getelementptr inbounds i32, ptr %6, i64 %1197
  store i32 %1226, ptr %1227, align 4, !tbaa !6
  %1228 = add nuw nsw i64 %1197, 1
  %1229 = icmp eq i64 %1228, %954
  br i1 %1229, label %1237, label %1196, !llvm.loop !1163

1230:                                             ; preds = %1192, %1222
  %1231 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1739, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5519

1232:                                             ; preds = %1205, %1214
  %1233 = phi ptr [ %1221, %1214 ], [ %1198, %1205 ]
  %1234 = phi i32 [ %1220, %1214 ], [ 1, %1205 ]
  %1235 = load i32, ptr %1233, align 4, !tbaa !6
  %1236 = add nsw i32 %1235, %1234
  store i32 %1236, ptr %1233, align 4, !tbaa !6
  br label %1237

1237:                                             ; preds = %1224, %1232, %1194, %1185
  %1238 = icmp eq i32 %1186, %5
  br i1 %1238, label %5514, label %1100, !llvm.loop !1164

1239:                                             ; preds = %642
  %1240 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1739, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5514

1241:                                             ; preds = %18
  %1242 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1243 = load ptr, ptr %1242, align 8, !tbaa !10
  %1244 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1245 = load ptr, ptr %1244, align 8, !tbaa !10
  %1246 = load float, ptr %1243, align 4, !tbaa !163
  %1247 = fptosi float %1246 to i8
  store i8 %1247, ptr %1245, align 1, !tbaa !12
  %1248 = icmp eq i32 %13, 0
  br i1 %1248, label %1249, label %1254

1249:                                             ; preds = %1241
  %1250 = load float, ptr %1243, align 4, !tbaa !163
  %1251 = fptosi float %1250 to i8
  %1252 = icmp slt i8 %1247, %1251
  br i1 %1252, label %1253, label %5514

1253:                                             ; preds = %1249
  store i8 %1251, ptr %1245, align 1, !tbaa !12
  br label %5514

1254:                                             ; preds = %1241
  switch i32 %1, label %1851 [
    i32 1, label %1255
    i32 0, label %1555
  ]

1255:                                             ; preds = %1254
  %1256 = getelementptr inbounds i32, ptr %3, i64 %19
  %1257 = load i32, ptr %1256, align 4, !tbaa !6
  %1258 = icmp eq i32 %1257, 0
  %1259 = icmp sgt i32 %5, 0
  br i1 %1258, label %1269, label %1260

1260:                                             ; preds = %1255
  br i1 %1259, label %1261, label %5514

1261:                                             ; preds = %1260
  %1262 = icmp sgt i32 %13, 1
  %1263 = icmp sgt i32 %13, 0
  %1264 = add i32 %13, -2
  %1265 = zext i32 %1264 to i64
  %1266 = zext i32 %13 to i64
  %1267 = add nuw i32 %5, 1
  %1268 = icmp eq i32 %13, 1
  br label %1416

1269:                                             ; preds = %1255
  br i1 %1259, label %1270, label %5514

1270:                                             ; preds = %1269
  %1271 = icmp sgt i32 %13, 1
  %1272 = icmp sgt i32 %13, 0
  %1273 = add i32 %13, -2
  %1274 = zext i32 %1273 to i64
  %1275 = zext i32 %13 to i64
  %1276 = add nuw i32 %5, 1
  %1277 = icmp eq i32 %13, 1
  br label %1278

1278:                                             ; preds = %1270, %1414
  %1279 = phi i32 [ 0, %1270 ], [ %1366, %1414 ]
  %1280 = phi double [ 0.000000e+00, %1270 ], [ %1365, %1414 ]
  %1281 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1271, label %1282, label %1351

1282:                                             ; preds = %1278, %1341
  %1283 = phi i32 [ %1350, %1341 ], [ 0, %1278 ]
  %1284 = phi i64 [ %1292, %1341 ], [ %1275, %1278 ]
  %1285 = phi i64 [ %1349, %1341 ], [ %1274, %1278 ]
  %1286 = phi i32 [ %1347, %1341 ], [ %1281, %1278 ]
  %1287 = sub i32 %1273, %1283
  %1288 = tail call i32 @llvm.smin.i32(i32 %1287, i32 0)
  %1289 = sub i32 %1287, %1288
  %1290 = zext i32 %1289 to i64
  %1291 = add nuw nsw i64 %1290, 1
  %1292 = add nsw i64 %1284, -1
  %1293 = icmp ult i32 %1289, 31
  br i1 %1293, label %1329, label %1294

1294:                                             ; preds = %1282
  %1295 = and i64 %1291, 8589934560
  %1296 = sub i64 %1285, %1295
  br label %1297

1297:                                             ; preds = %1297, %1294
  %1298 = phi i64 [ 0, %1294 ], [ %1321, %1297 ]
  %1299 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1294 ], [ %1317, %1297 ]
  %1300 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1294 ], [ %1318, %1297 ]
  %1301 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1294 ], [ %1319, %1297 ]
  %1302 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1294 ], [ %1320, %1297 ]
  %1303 = sub i64 %1285, %1298
  %1304 = getelementptr inbounds i32, ptr %9, i64 %1303
  %1305 = getelementptr inbounds i32, ptr %1304, i64 -7
  %1306 = load <8 x i32>, ptr %1305, align 4, !tbaa !6
  %1307 = shufflevector <8 x i32> %1306, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1308 = getelementptr inbounds i32, ptr %1304, i64 -15
  %1309 = load <8 x i32>, ptr %1308, align 4, !tbaa !6
  %1310 = shufflevector <8 x i32> %1309, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1311 = getelementptr inbounds i32, ptr %1304, i64 -23
  %1312 = load <8 x i32>, ptr %1311, align 4, !tbaa !6
  %1313 = shufflevector <8 x i32> %1312, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1314 = getelementptr inbounds i32, ptr %1304, i64 -31
  %1315 = load <8 x i32>, ptr %1314, align 4, !tbaa !6
  %1316 = shufflevector <8 x i32> %1315, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1317 = mul <8 x i32> %1307, %1299
  %1318 = mul <8 x i32> %1310, %1300
  %1319 = mul <8 x i32> %1313, %1301
  %1320 = mul <8 x i32> %1316, %1302
  %1321 = add nuw i64 %1298, 32
  %1322 = icmp eq i64 %1321, %1295
  br i1 %1322, label %1323, label %1297, !llvm.loop !1165

1323:                                             ; preds = %1297
  %1324 = mul <8 x i32> %1318, %1317
  %1325 = mul <8 x i32> %1319, %1324
  %1326 = mul <8 x i32> %1320, %1325
  %1327 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1326)
  %1328 = icmp eq i64 %1291, %1295
  br i1 %1328, label %1341, label %1329

1329:                                             ; preds = %1282, %1323
  %1330 = phi i64 [ %1285, %1282 ], [ %1296, %1323 ]
  %1331 = phi i32 [ 1, %1282 ], [ %1327, %1323 ]
  br label %1332

1332:                                             ; preds = %1329, %1332
  %1333 = phi i64 [ %1338, %1332 ], [ %1330, %1329 ]
  %1334 = phi i32 [ %1337, %1332 ], [ %1331, %1329 ]
  %1335 = getelementptr inbounds i32, ptr %9, i64 %1333
  %1336 = load i32, ptr %1335, align 4, !tbaa !6
  %1337 = mul nsw i32 %1336, %1334
  %1338 = add nsw i64 %1333, -1
  %1339 = trunc i64 %1333 to i32
  %1340 = icmp sgt i32 %1339, 0
  br i1 %1340, label %1332, label %1341, !llvm.loop !1166

1341:                                             ; preds = %1332, %1323
  %1342 = phi i32 [ %1327, %1323 ], [ %1337, %1332 ]
  %1343 = and i64 %1292, 4294967295
  %1344 = getelementptr inbounds i32, ptr %6, i64 %1343
  %1345 = load i32, ptr %1344, align 4, !tbaa !6
  %1346 = mul nsw i32 %1345, %1342
  %1347 = add nsw i32 %1346, %1286
  %1348 = icmp sgt i64 %1284, 2
  %1349 = add nsw i64 %1285, -1
  %1350 = add i32 %1283, 1
  br i1 %1348, label %1282, label %1351, !llvm.loop !1167

1351:                                             ; preds = %1341, %1278
  %1352 = phi i32 [ %1281, %1278 ], [ %1347, %1341 ]
  %1353 = sext i32 %1352 to i64
  %1354 = getelementptr inbounds double, ptr %2, i64 %1353
  %1355 = load double, ptr %1354, align 8, !tbaa !19
  %1356 = getelementptr inbounds float, ptr %1243, i64 %1353
  %1357 = load float, ptr %1356, align 4, !tbaa !163
  %1358 = fptosi float %1357 to i8
  %1359 = fcmp fast ueq double %1355, 0.000000e+00
  br i1 %1359, label %1364, label %1360

1360:                                             ; preds = %1351
  %1361 = load i8, ptr %1245, align 1, !tbaa !12
  %1362 = icmp slt i8 %1361, %1358
  br i1 %1362, label %1363, label %1364

1363:                                             ; preds = %1360
  store i8 %1358, ptr %1245, align 1, !tbaa !12
  br label %1364

1364:                                             ; preds = %1360, %1363, %1351
  %1365 = fadd fast double %1355, %1280
  %1366 = add nuw nsw i32 %1279, 1
  br i1 %1272, label %1367, label %1414

1367:                                             ; preds = %1364
  %1368 = load i32, ptr %4, align 4, !tbaa !6
  %1369 = load i32, ptr %12, align 4, !tbaa !6
  %1370 = add nsw i32 %1369, -1
  %1371 = icmp slt i32 %1368, %1370
  br i1 %1371, label %1391, label %1372

1372:                                             ; preds = %1367
  %1373 = icmp eq i32 %1368, %1370
  br i1 %1373, label %1374, label %1407

1374:                                             ; preds = %1372
  store i32 0, ptr %4, align 4, !tbaa !6
  %1375 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1375, ptr %6, align 4, !tbaa !6
  br i1 %1277, label %1414, label %1376

1376:                                             ; preds = %1374, %1401
  %1377 = phi i64 [ %1405, %1401 ], [ 1, %1374 ]
  %1378 = getelementptr inbounds i32, ptr %4, i64 %1377
  %1379 = load i32, ptr %1378, align 4, !tbaa !6
  %1380 = getelementptr inbounds i32, ptr %12, i64 %1377
  %1381 = load i32, ptr %1380, align 4, !tbaa !6
  %1382 = add nsw i32 %1381, -1
  %1383 = icmp slt i32 %1379, %1382
  br i1 %1383, label %1384, label %1399

1384:                                             ; preds = %1376
  br i1 %1371, label %1391, label %1385

1385:                                             ; preds = %1384
  %1386 = getelementptr inbounds i32, ptr %7, i64 %1377
  %1387 = load i32, ptr %1386, align 4, !tbaa !6
  %1388 = getelementptr inbounds i32, ptr %6, i64 %1377
  %1389 = load i32, ptr %1388, align 4, !tbaa !6
  %1390 = add nsw i32 %1389, %1387
  store i32 %1390, ptr %1388, align 4, !tbaa !6
  br label %1409

1391:                                             ; preds = %1367, %1384
  %1392 = phi i32 [ %1379, %1384 ], [ %1368, %1367 ]
  %1393 = phi ptr [ %1378, %1384 ], [ %4, %1367 ]
  %1394 = phi i64 [ %1377, %1384 ], [ 0, %1367 ]
  %1395 = add nsw i32 %1392, 1
  store i32 %1395, ptr %1393, align 4, !tbaa !6
  %1396 = getelementptr inbounds i32, ptr %7, i64 %1394
  %1397 = load i32, ptr %1396, align 4, !tbaa !6
  %1398 = getelementptr inbounds i32, ptr %6, i64 %1394
  br label %1409

1399:                                             ; preds = %1376
  %1400 = icmp eq i32 %1379, %1382
  br i1 %1400, label %1401, label %1407

1401:                                             ; preds = %1399
  store i32 0, ptr %1378, align 4, !tbaa !6
  %1402 = getelementptr inbounds i32, ptr %8, i64 %1377
  %1403 = load i32, ptr %1402, align 4, !tbaa !6
  %1404 = getelementptr inbounds i32, ptr %6, i64 %1377
  store i32 %1403, ptr %1404, align 4, !tbaa !6
  %1405 = add nuw nsw i64 %1377, 1
  %1406 = icmp eq i64 %1405, %1275
  br i1 %1406, label %1414, label %1376, !llvm.loop !1168

1407:                                             ; preds = %1372, %1399
  %1408 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1743, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5519

1409:                                             ; preds = %1385, %1391
  %1410 = phi ptr [ %1398, %1391 ], [ %1378, %1385 ]
  %1411 = phi i32 [ %1397, %1391 ], [ 1, %1385 ]
  %1412 = load i32, ptr %1410, align 4, !tbaa !6
  %1413 = add nsw i32 %1412, %1411
  store i32 %1413, ptr %1410, align 4, !tbaa !6
  br label %1414

1414:                                             ; preds = %1401, %1409, %1374, %1364
  %1415 = icmp eq i32 %1366, %5
  br i1 %1415, label %5514, label %1278, !llvm.loop !1169

1416:                                             ; preds = %1261, %1553
  %1417 = phi i32 [ 0, %1261 ], [ %1502, %1553 ]
  %1418 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1262, label %1419, label %1488

1419:                                             ; preds = %1416, %1478
  %1420 = phi i32 [ %1487, %1478 ], [ 0, %1416 ]
  %1421 = phi i64 [ %1429, %1478 ], [ %1266, %1416 ]
  %1422 = phi i64 [ %1486, %1478 ], [ %1265, %1416 ]
  %1423 = phi i32 [ %1484, %1478 ], [ %1418, %1416 ]
  %1424 = sub i32 %1264, %1420
  %1425 = tail call i32 @llvm.smin.i32(i32 %1424, i32 0)
  %1426 = sub i32 %1424, %1425
  %1427 = zext i32 %1426 to i64
  %1428 = add nuw nsw i64 %1427, 1
  %1429 = add nsw i64 %1421, -1
  %1430 = icmp ult i32 %1426, 31
  br i1 %1430, label %1466, label %1431

1431:                                             ; preds = %1419
  %1432 = and i64 %1428, 8589934560
  %1433 = sub i64 %1422, %1432
  br label %1434

1434:                                             ; preds = %1434, %1431
  %1435 = phi i64 [ 0, %1431 ], [ %1458, %1434 ]
  %1436 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1431 ], [ %1454, %1434 ]
  %1437 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1431 ], [ %1455, %1434 ]
  %1438 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1431 ], [ %1456, %1434 ]
  %1439 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1431 ], [ %1457, %1434 ]
  %1440 = sub i64 %1422, %1435
  %1441 = getelementptr inbounds i32, ptr %11, i64 %1440
  %1442 = getelementptr inbounds i32, ptr %1441, i64 -7
  %1443 = load <8 x i32>, ptr %1442, align 4, !tbaa !6
  %1444 = shufflevector <8 x i32> %1443, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1445 = getelementptr inbounds i32, ptr %1441, i64 -15
  %1446 = load <8 x i32>, ptr %1445, align 4, !tbaa !6
  %1447 = shufflevector <8 x i32> %1446, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1448 = getelementptr inbounds i32, ptr %1441, i64 -23
  %1449 = load <8 x i32>, ptr %1448, align 4, !tbaa !6
  %1450 = shufflevector <8 x i32> %1449, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1451 = getelementptr inbounds i32, ptr %1441, i64 -31
  %1452 = load <8 x i32>, ptr %1451, align 4, !tbaa !6
  %1453 = shufflevector <8 x i32> %1452, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1454 = mul <8 x i32> %1444, %1436
  %1455 = mul <8 x i32> %1447, %1437
  %1456 = mul <8 x i32> %1450, %1438
  %1457 = mul <8 x i32> %1453, %1439
  %1458 = add nuw i64 %1435, 32
  %1459 = icmp eq i64 %1458, %1432
  br i1 %1459, label %1460, label %1434, !llvm.loop !1170

1460:                                             ; preds = %1434
  %1461 = mul <8 x i32> %1455, %1454
  %1462 = mul <8 x i32> %1456, %1461
  %1463 = mul <8 x i32> %1457, %1462
  %1464 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1463)
  %1465 = icmp eq i64 %1428, %1432
  br i1 %1465, label %1478, label %1466

1466:                                             ; preds = %1419, %1460
  %1467 = phi i64 [ %1422, %1419 ], [ %1433, %1460 ]
  %1468 = phi i32 [ 1, %1419 ], [ %1464, %1460 ]
  br label %1469

1469:                                             ; preds = %1466, %1469
  %1470 = phi i64 [ %1475, %1469 ], [ %1467, %1466 ]
  %1471 = phi i32 [ %1474, %1469 ], [ %1468, %1466 ]
  %1472 = getelementptr inbounds i32, ptr %11, i64 %1470
  %1473 = load i32, ptr %1472, align 4, !tbaa !6
  %1474 = mul nsw i32 %1473, %1471
  %1475 = add nsw i64 %1470, -1
  %1476 = trunc i64 %1470 to i32
  %1477 = icmp sgt i32 %1476, 0
  br i1 %1477, label %1469, label %1478, !llvm.loop !1171

1478:                                             ; preds = %1469, %1460
  %1479 = phi i32 [ %1464, %1460 ], [ %1474, %1469 ]
  %1480 = and i64 %1429, 4294967295
  %1481 = getelementptr inbounds i32, ptr %6, i64 %1480
  %1482 = load i32, ptr %1481, align 4, !tbaa !6
  %1483 = mul nsw i32 %1482, %1479
  %1484 = add nsw i32 %1483, %1423
  %1485 = icmp sgt i64 %1421, 2
  %1486 = add nsw i64 %1422, -1
  %1487 = add i32 %1420, 1
  br i1 %1485, label %1419, label %1488, !llvm.loop !1172

1488:                                             ; preds = %1478, %1416
  %1489 = phi i32 [ %1418, %1416 ], [ %1484, %1478 ]
  %1490 = icmp slt i32 %1489, %5
  br i1 %1490, label %1493, label %1491

1491:                                             ; preds = %1488
  %1492 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1743, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5519

1493:                                             ; preds = %1488
  %1494 = sext i32 %1489 to i64
  %1495 = getelementptr inbounds float, ptr %1243, i64 %1494
  %1496 = load float, ptr %1495, align 4, !tbaa !163
  %1497 = fptosi float %1496 to i8
  %1498 = load i8, ptr %1245, align 1, !tbaa !12
  %1499 = icmp slt i8 %1498, %1497
  br i1 %1499, label %1500, label %1501

1500:                                             ; preds = %1493
  store i8 %1497, ptr %1245, align 1, !tbaa !12
  br label %1501

1501:                                             ; preds = %1493, %1500
  %1502 = add nuw nsw i32 %1417, 1
  br i1 %1263, label %1503, label %1553

1503:                                             ; preds = %1501
  %1504 = load i32, ptr %4, align 4, !tbaa !6
  %1505 = load i32, ptr %12, align 4, !tbaa !6
  %1506 = add nsw i32 %1505, -1
  %1507 = icmp slt i32 %1504, %1506
  br i1 %1507, label %1530, label %1508

1508:                                             ; preds = %1503
  %1509 = icmp eq i32 %1504, %1506
  br i1 %1509, label %1510, label %1546

1510:                                             ; preds = %1508
  store i32 0, ptr %4, align 4, !tbaa !6
  %1511 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1511, ptr %6, align 4, !tbaa !6
  br i1 %1268, label %1553, label %1512

1512:                                             ; preds = %1510, %1540
  %1513 = phi i64 [ %1544, %1540 ], [ 1, %1510 ]
  %1514 = getelementptr inbounds i32, ptr %4, i64 %1513
  %1515 = load i32, ptr %1514, align 4, !tbaa !6
  %1516 = getelementptr inbounds i32, ptr %12, i64 %1513
  %1517 = load i32, ptr %1516, align 4, !tbaa !6
  %1518 = add nsw i32 %1517, -1
  %1519 = icmp slt i32 %1515, %1518
  br i1 %1519, label %1520, label %1538

1520:                                             ; preds = %1512
  br i1 %1507, label %1530, label %1521

1521:                                             ; preds = %1520
  %1522 = shl i64 %1513, 32
  %1523 = add i64 %1522, -4294967296
  %1524 = ashr exact i64 %1523, 32
  %1525 = getelementptr inbounds i32, ptr %7, i64 %1524
  %1526 = load i32, ptr %1525, align 4, !tbaa !6
  %1527 = getelementptr inbounds i32, ptr %6, i64 %1513
  %1528 = load i32, ptr %1527, align 4, !tbaa !6
  %1529 = add nsw i32 %1528, %1526
  store i32 %1529, ptr %1527, align 4, !tbaa !6
  br label %1548

1530:                                             ; preds = %1503, %1520
  %1531 = phi i32 [ %1515, %1520 ], [ %1504, %1503 ]
  %1532 = phi ptr [ %1514, %1520 ], [ %4, %1503 ]
  %1533 = phi i64 [ %1513, %1520 ], [ 0, %1503 ]
  %1534 = add nsw i32 %1531, 1
  store i32 %1534, ptr %1532, align 4, !tbaa !6
  %1535 = getelementptr inbounds i32, ptr %7, i64 %1533
  %1536 = load i32, ptr %1535, align 4, !tbaa !6
  %1537 = getelementptr inbounds i32, ptr %6, i64 %1533
  br label %1548

1538:                                             ; preds = %1512
  %1539 = icmp eq i32 %1515, %1518
  br i1 %1539, label %1540, label %1546

1540:                                             ; preds = %1538
  store i32 0, ptr %1514, align 4, !tbaa !6
  %1541 = getelementptr inbounds i32, ptr %8, i64 %1513
  %1542 = load i32, ptr %1541, align 4, !tbaa !6
  %1543 = getelementptr inbounds i32, ptr %6, i64 %1513
  store i32 %1542, ptr %1543, align 4, !tbaa !6
  %1544 = add nuw nsw i64 %1513, 1
  %1545 = icmp eq i64 %1544, %1266
  br i1 %1545, label %1553, label %1512, !llvm.loop !1173

1546:                                             ; preds = %1508, %1538
  %1547 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1743, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5519

1548:                                             ; preds = %1521, %1530
  %1549 = phi ptr [ %1537, %1530 ], [ %1514, %1521 ]
  %1550 = phi i32 [ %1536, %1530 ], [ 1, %1521 ]
  %1551 = load i32, ptr %1549, align 4, !tbaa !6
  %1552 = add nsw i32 %1551, %1550
  store i32 %1552, ptr %1549, align 4, !tbaa !6
  br label %1553

1553:                                             ; preds = %1540, %1548, %1510, %1501
  %1554 = icmp eq i32 %1502, %5
  br i1 %1554, label %5514, label %1416, !llvm.loop !1174

1555:                                             ; preds = %1254
  %1556 = getelementptr inbounds i32, ptr %3, i64 %19
  %1557 = load i32, ptr %1556, align 4, !tbaa !6
  %1558 = icmp eq i32 %1557, 0
  %1559 = icmp sgt i32 %5, 0
  br i1 %1558, label %1569, label %1560

1560:                                             ; preds = %1555
  br i1 %1559, label %1561, label %5514

1561:                                             ; preds = %1560
  %1562 = icmp sgt i32 %13, 1
  %1563 = icmp sgt i32 %13, 0
  %1564 = add i32 %13, -2
  %1565 = zext i32 %1564 to i64
  %1566 = zext i32 %13 to i64
  %1567 = add nuw i32 %5, 1
  %1568 = icmp eq i32 %13, 1
  br label %1712

1569:                                             ; preds = %1555
  br i1 %1559, label %1570, label %5514

1570:                                             ; preds = %1569
  %1571 = icmp sgt i32 %13, 1
  %1572 = icmp sgt i32 %13, 0
  %1573 = add i32 %13, -2
  %1574 = zext i32 %1573 to i64
  %1575 = zext i32 %13 to i64
  %1576 = add nuw i32 %5, 1
  %1577 = icmp eq i32 %13, 1
  br label %1578

1578:                                             ; preds = %1570, %1710
  %1579 = phi i32 [ 0, %1570 ], [ %1662, %1710 ]
  %1580 = phi double [ 0.000000e+00, %1570 ], [ %1661, %1710 ]
  %1581 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1571, label %1582, label %1651

1582:                                             ; preds = %1578, %1641
  %1583 = phi i32 [ %1650, %1641 ], [ 0, %1578 ]
  %1584 = phi i64 [ %1592, %1641 ], [ %1575, %1578 ]
  %1585 = phi i64 [ %1649, %1641 ], [ %1574, %1578 ]
  %1586 = phi i32 [ %1647, %1641 ], [ %1581, %1578 ]
  %1587 = sub i32 %1573, %1583
  %1588 = tail call i32 @llvm.smin.i32(i32 %1587, i32 0)
  %1589 = sub i32 %1587, %1588
  %1590 = zext i32 %1589 to i64
  %1591 = add nuw nsw i64 %1590, 1
  %1592 = add nsw i64 %1584, -1
  %1593 = icmp ult i32 %1589, 31
  br i1 %1593, label %1629, label %1594

1594:                                             ; preds = %1582
  %1595 = and i64 %1591, 8589934560
  %1596 = sub i64 %1585, %1595
  br label %1597

1597:                                             ; preds = %1597, %1594
  %1598 = phi i64 [ 0, %1594 ], [ %1621, %1597 ]
  %1599 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1594 ], [ %1617, %1597 ]
  %1600 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1594 ], [ %1618, %1597 ]
  %1601 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1594 ], [ %1619, %1597 ]
  %1602 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1594 ], [ %1620, %1597 ]
  %1603 = sub i64 %1585, %1598
  %1604 = getelementptr inbounds i32, ptr %9, i64 %1603
  %1605 = getelementptr inbounds i32, ptr %1604, i64 -7
  %1606 = load <8 x i32>, ptr %1605, align 4, !tbaa !6
  %1607 = shufflevector <8 x i32> %1606, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1608 = getelementptr inbounds i32, ptr %1604, i64 -15
  %1609 = load <8 x i32>, ptr %1608, align 4, !tbaa !6
  %1610 = shufflevector <8 x i32> %1609, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1611 = getelementptr inbounds i32, ptr %1604, i64 -23
  %1612 = load <8 x i32>, ptr %1611, align 4, !tbaa !6
  %1613 = shufflevector <8 x i32> %1612, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1614 = getelementptr inbounds i32, ptr %1604, i64 -31
  %1615 = load <8 x i32>, ptr %1614, align 4, !tbaa !6
  %1616 = shufflevector <8 x i32> %1615, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1617 = mul <8 x i32> %1607, %1599
  %1618 = mul <8 x i32> %1610, %1600
  %1619 = mul <8 x i32> %1613, %1601
  %1620 = mul <8 x i32> %1616, %1602
  %1621 = add nuw i64 %1598, 32
  %1622 = icmp eq i64 %1621, %1595
  br i1 %1622, label %1623, label %1597, !llvm.loop !1175

1623:                                             ; preds = %1597
  %1624 = mul <8 x i32> %1618, %1617
  %1625 = mul <8 x i32> %1619, %1624
  %1626 = mul <8 x i32> %1620, %1625
  %1627 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1626)
  %1628 = icmp eq i64 %1591, %1595
  br i1 %1628, label %1641, label %1629

1629:                                             ; preds = %1582, %1623
  %1630 = phi i64 [ %1585, %1582 ], [ %1596, %1623 ]
  %1631 = phi i32 [ 1, %1582 ], [ %1627, %1623 ]
  br label %1632

1632:                                             ; preds = %1629, %1632
  %1633 = phi i64 [ %1638, %1632 ], [ %1630, %1629 ]
  %1634 = phi i32 [ %1637, %1632 ], [ %1631, %1629 ]
  %1635 = getelementptr inbounds i32, ptr %9, i64 %1633
  %1636 = load i32, ptr %1635, align 4, !tbaa !6
  %1637 = mul nsw i32 %1636, %1634
  %1638 = add nsw i64 %1633, -1
  %1639 = trunc i64 %1633 to i32
  %1640 = icmp sgt i32 %1639, 0
  br i1 %1640, label %1632, label %1641, !llvm.loop !1176

1641:                                             ; preds = %1632, %1623
  %1642 = phi i32 [ %1627, %1623 ], [ %1637, %1632 ]
  %1643 = and i64 %1592, 4294967295
  %1644 = getelementptr inbounds i32, ptr %6, i64 %1643
  %1645 = load i32, ptr %1644, align 4, !tbaa !6
  %1646 = mul nsw i32 %1645, %1642
  %1647 = add nsw i32 %1646, %1586
  %1648 = icmp sgt i64 %1584, 2
  %1649 = add nsw i64 %1585, -1
  %1650 = add i32 %1583, 1
  br i1 %1648, label %1582, label %1651, !llvm.loop !1177

1651:                                             ; preds = %1641, %1578
  %1652 = phi i32 [ %1581, %1578 ], [ %1647, %1641 ]
  %1653 = sext i32 %1652 to i64
  %1654 = getelementptr inbounds float, ptr %1243, i64 %1653
  %1655 = load float, ptr %1654, align 4, !tbaa !163
  %1656 = fptosi float %1655 to i8
  %1657 = load i8, ptr %1245, align 1, !tbaa !12
  %1658 = icmp slt i8 %1657, %1656
  br i1 %1658, label %1659, label %1660

1659:                                             ; preds = %1651
  store i8 %1656, ptr %1245, align 1, !tbaa !12
  br label %1660

1660:                                             ; preds = %1659, %1651
  %1661 = fadd fast double %1580, 1.000000e+00
  %1662 = add nuw nsw i32 %1579, 1
  br i1 %1572, label %1663, label %1710

1663:                                             ; preds = %1660
  %1664 = load i32, ptr %4, align 4, !tbaa !6
  %1665 = load i32, ptr %12, align 4, !tbaa !6
  %1666 = add nsw i32 %1665, -1
  %1667 = icmp slt i32 %1664, %1666
  br i1 %1667, label %1687, label %1668

1668:                                             ; preds = %1663
  %1669 = icmp eq i32 %1664, %1666
  br i1 %1669, label %1670, label %1703

1670:                                             ; preds = %1668
  store i32 0, ptr %4, align 4, !tbaa !6
  %1671 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1671, ptr %6, align 4, !tbaa !6
  br i1 %1577, label %1710, label %1672

1672:                                             ; preds = %1670, %1697
  %1673 = phi i64 [ %1701, %1697 ], [ 1, %1670 ]
  %1674 = getelementptr inbounds i32, ptr %4, i64 %1673
  %1675 = load i32, ptr %1674, align 4, !tbaa !6
  %1676 = getelementptr inbounds i32, ptr %12, i64 %1673
  %1677 = load i32, ptr %1676, align 4, !tbaa !6
  %1678 = add nsw i32 %1677, -1
  %1679 = icmp slt i32 %1675, %1678
  br i1 %1679, label %1680, label %1695

1680:                                             ; preds = %1672
  br i1 %1667, label %1687, label %1681

1681:                                             ; preds = %1680
  %1682 = getelementptr inbounds i32, ptr %7, i64 %1673
  %1683 = load i32, ptr %1682, align 4, !tbaa !6
  %1684 = getelementptr inbounds i32, ptr %6, i64 %1673
  %1685 = load i32, ptr %1684, align 4, !tbaa !6
  %1686 = add nsw i32 %1685, %1683
  store i32 %1686, ptr %1684, align 4, !tbaa !6
  br label %1705

1687:                                             ; preds = %1663, %1680
  %1688 = phi i32 [ %1675, %1680 ], [ %1664, %1663 ]
  %1689 = phi ptr [ %1674, %1680 ], [ %4, %1663 ]
  %1690 = phi i64 [ %1673, %1680 ], [ 0, %1663 ]
  %1691 = add nsw i32 %1688, 1
  store i32 %1691, ptr %1689, align 4, !tbaa !6
  %1692 = getelementptr inbounds i32, ptr %7, i64 %1690
  %1693 = load i32, ptr %1692, align 4, !tbaa !6
  %1694 = getelementptr inbounds i32, ptr %6, i64 %1690
  br label %1705

1695:                                             ; preds = %1672
  %1696 = icmp eq i32 %1675, %1678
  br i1 %1696, label %1697, label %1703

1697:                                             ; preds = %1695
  store i32 0, ptr %1674, align 4, !tbaa !6
  %1698 = getelementptr inbounds i32, ptr %8, i64 %1673
  %1699 = load i32, ptr %1698, align 4, !tbaa !6
  %1700 = getelementptr inbounds i32, ptr %6, i64 %1673
  store i32 %1699, ptr %1700, align 4, !tbaa !6
  %1701 = add nuw nsw i64 %1673, 1
  %1702 = icmp eq i64 %1701, %1575
  br i1 %1702, label %1710, label %1672, !llvm.loop !1178

1703:                                             ; preds = %1668, %1695
  %1704 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1743, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5519

1705:                                             ; preds = %1681, %1687
  %1706 = phi ptr [ %1694, %1687 ], [ %1674, %1681 ]
  %1707 = phi i32 [ %1693, %1687 ], [ 1, %1681 ]
  %1708 = load i32, ptr %1706, align 4, !tbaa !6
  %1709 = add nsw i32 %1708, %1707
  store i32 %1709, ptr %1706, align 4, !tbaa !6
  br label %1710

1710:                                             ; preds = %1697, %1705, %1670, %1660
  %1711 = icmp eq i32 %1662, %5
  br i1 %1711, label %5514, label %1578, !llvm.loop !1179

1712:                                             ; preds = %1561, %1849
  %1713 = phi i32 [ 0, %1561 ], [ %1798, %1849 ]
  %1714 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1562, label %1715, label %1784

1715:                                             ; preds = %1712, %1774
  %1716 = phi i32 [ %1783, %1774 ], [ 0, %1712 ]
  %1717 = phi i64 [ %1725, %1774 ], [ %1566, %1712 ]
  %1718 = phi i64 [ %1782, %1774 ], [ %1565, %1712 ]
  %1719 = phi i32 [ %1780, %1774 ], [ %1714, %1712 ]
  %1720 = sub i32 %1564, %1716
  %1721 = tail call i32 @llvm.smin.i32(i32 %1720, i32 0)
  %1722 = sub i32 %1720, %1721
  %1723 = zext i32 %1722 to i64
  %1724 = add nuw nsw i64 %1723, 1
  %1725 = add nsw i64 %1717, -1
  %1726 = icmp ult i32 %1722, 31
  br i1 %1726, label %1762, label %1727

1727:                                             ; preds = %1715
  %1728 = and i64 %1724, 8589934560
  %1729 = sub i64 %1718, %1728
  br label %1730

1730:                                             ; preds = %1730, %1727
  %1731 = phi i64 [ 0, %1727 ], [ %1754, %1730 ]
  %1732 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1727 ], [ %1750, %1730 ]
  %1733 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1727 ], [ %1751, %1730 ]
  %1734 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1727 ], [ %1752, %1730 ]
  %1735 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1727 ], [ %1753, %1730 ]
  %1736 = sub i64 %1718, %1731
  %1737 = getelementptr inbounds i32, ptr %11, i64 %1736
  %1738 = getelementptr inbounds i32, ptr %1737, i64 -7
  %1739 = load <8 x i32>, ptr %1738, align 4, !tbaa !6
  %1740 = shufflevector <8 x i32> %1739, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1741 = getelementptr inbounds i32, ptr %1737, i64 -15
  %1742 = load <8 x i32>, ptr %1741, align 4, !tbaa !6
  %1743 = shufflevector <8 x i32> %1742, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1744 = getelementptr inbounds i32, ptr %1737, i64 -23
  %1745 = load <8 x i32>, ptr %1744, align 4, !tbaa !6
  %1746 = shufflevector <8 x i32> %1745, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1747 = getelementptr inbounds i32, ptr %1737, i64 -31
  %1748 = load <8 x i32>, ptr %1747, align 4, !tbaa !6
  %1749 = shufflevector <8 x i32> %1748, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1750 = mul <8 x i32> %1740, %1732
  %1751 = mul <8 x i32> %1743, %1733
  %1752 = mul <8 x i32> %1746, %1734
  %1753 = mul <8 x i32> %1749, %1735
  %1754 = add nuw i64 %1731, 32
  %1755 = icmp eq i64 %1754, %1728
  br i1 %1755, label %1756, label %1730, !llvm.loop !1180

1756:                                             ; preds = %1730
  %1757 = mul <8 x i32> %1751, %1750
  %1758 = mul <8 x i32> %1752, %1757
  %1759 = mul <8 x i32> %1753, %1758
  %1760 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1759)
  %1761 = icmp eq i64 %1724, %1728
  br i1 %1761, label %1774, label %1762

1762:                                             ; preds = %1715, %1756
  %1763 = phi i64 [ %1718, %1715 ], [ %1729, %1756 ]
  %1764 = phi i32 [ 1, %1715 ], [ %1760, %1756 ]
  br label %1765

1765:                                             ; preds = %1762, %1765
  %1766 = phi i64 [ %1771, %1765 ], [ %1763, %1762 ]
  %1767 = phi i32 [ %1770, %1765 ], [ %1764, %1762 ]
  %1768 = getelementptr inbounds i32, ptr %11, i64 %1766
  %1769 = load i32, ptr %1768, align 4, !tbaa !6
  %1770 = mul nsw i32 %1769, %1767
  %1771 = add nsw i64 %1766, -1
  %1772 = trunc i64 %1766 to i32
  %1773 = icmp sgt i32 %1772, 0
  br i1 %1773, label %1765, label %1774, !llvm.loop !1181

1774:                                             ; preds = %1765, %1756
  %1775 = phi i32 [ %1760, %1756 ], [ %1770, %1765 ]
  %1776 = and i64 %1725, 4294967295
  %1777 = getelementptr inbounds i32, ptr %6, i64 %1776
  %1778 = load i32, ptr %1777, align 4, !tbaa !6
  %1779 = mul nsw i32 %1778, %1775
  %1780 = add nsw i32 %1779, %1719
  %1781 = icmp sgt i64 %1717, 2
  %1782 = add nsw i64 %1718, -1
  %1783 = add i32 %1716, 1
  br i1 %1781, label %1715, label %1784, !llvm.loop !1182

1784:                                             ; preds = %1774, %1712
  %1785 = phi i32 [ %1714, %1712 ], [ %1780, %1774 ]
  %1786 = icmp slt i32 %1785, %5
  br i1 %1786, label %1789, label %1787

1787:                                             ; preds = %1784
  %1788 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1743, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5519

1789:                                             ; preds = %1784
  %1790 = sext i32 %1785 to i64
  %1791 = getelementptr inbounds float, ptr %1243, i64 %1790
  %1792 = load float, ptr %1791, align 4, !tbaa !163
  %1793 = fptosi float %1792 to i8
  %1794 = load i8, ptr %1245, align 1, !tbaa !12
  %1795 = icmp slt i8 %1794, %1793
  br i1 %1795, label %1796, label %1797

1796:                                             ; preds = %1789
  store i8 %1793, ptr %1245, align 1, !tbaa !12
  br label %1797

1797:                                             ; preds = %1796, %1789
  %1798 = add nuw nsw i32 %1713, 1
  br i1 %1563, label %1799, label %1849

1799:                                             ; preds = %1797
  %1800 = load i32, ptr %4, align 4, !tbaa !6
  %1801 = load i32, ptr %12, align 4, !tbaa !6
  %1802 = add nsw i32 %1801, -1
  %1803 = icmp slt i32 %1800, %1802
  br i1 %1803, label %1826, label %1804

1804:                                             ; preds = %1799
  %1805 = icmp eq i32 %1800, %1802
  br i1 %1805, label %1806, label %1842

1806:                                             ; preds = %1804
  store i32 0, ptr %4, align 4, !tbaa !6
  %1807 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1807, ptr %6, align 4, !tbaa !6
  br i1 %1568, label %1849, label %1808

1808:                                             ; preds = %1806, %1836
  %1809 = phi i64 [ %1840, %1836 ], [ 1, %1806 ]
  %1810 = getelementptr inbounds i32, ptr %4, i64 %1809
  %1811 = load i32, ptr %1810, align 4, !tbaa !6
  %1812 = getelementptr inbounds i32, ptr %12, i64 %1809
  %1813 = load i32, ptr %1812, align 4, !tbaa !6
  %1814 = add nsw i32 %1813, -1
  %1815 = icmp slt i32 %1811, %1814
  br i1 %1815, label %1816, label %1834

1816:                                             ; preds = %1808
  br i1 %1803, label %1826, label %1817

1817:                                             ; preds = %1816
  %1818 = shl i64 %1809, 32
  %1819 = add i64 %1818, -4294967296
  %1820 = ashr exact i64 %1819, 32
  %1821 = getelementptr inbounds i32, ptr %7, i64 %1820
  %1822 = load i32, ptr %1821, align 4, !tbaa !6
  %1823 = getelementptr inbounds i32, ptr %6, i64 %1809
  %1824 = load i32, ptr %1823, align 4, !tbaa !6
  %1825 = add nsw i32 %1824, %1822
  store i32 %1825, ptr %1823, align 4, !tbaa !6
  br label %1844

1826:                                             ; preds = %1799, %1816
  %1827 = phi i32 [ %1811, %1816 ], [ %1800, %1799 ]
  %1828 = phi ptr [ %1810, %1816 ], [ %4, %1799 ]
  %1829 = phi i64 [ %1809, %1816 ], [ 0, %1799 ]
  %1830 = add nsw i32 %1827, 1
  store i32 %1830, ptr %1828, align 4, !tbaa !6
  %1831 = getelementptr inbounds i32, ptr %7, i64 %1829
  %1832 = load i32, ptr %1831, align 4, !tbaa !6
  %1833 = getelementptr inbounds i32, ptr %6, i64 %1829
  br label %1844

1834:                                             ; preds = %1808
  %1835 = icmp eq i32 %1811, %1814
  br i1 %1835, label %1836, label %1842

1836:                                             ; preds = %1834
  store i32 0, ptr %1810, align 4, !tbaa !6
  %1837 = getelementptr inbounds i32, ptr %8, i64 %1809
  %1838 = load i32, ptr %1837, align 4, !tbaa !6
  %1839 = getelementptr inbounds i32, ptr %6, i64 %1809
  store i32 %1838, ptr %1839, align 4, !tbaa !6
  %1840 = add nuw nsw i64 %1809, 1
  %1841 = icmp eq i64 %1840, %1566
  br i1 %1841, label %1849, label %1808, !llvm.loop !1183

1842:                                             ; preds = %1804, %1834
  %1843 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1743, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5519

1844:                                             ; preds = %1817, %1826
  %1845 = phi ptr [ %1833, %1826 ], [ %1810, %1817 ]
  %1846 = phi i32 [ %1832, %1826 ], [ 1, %1817 ]
  %1847 = load i32, ptr %1845, align 4, !tbaa !6
  %1848 = add nsw i32 %1847, %1846
  store i32 %1848, ptr %1845, align 4, !tbaa !6
  br label %1849

1849:                                             ; preds = %1836, %1844, %1806, %1797
  %1850 = icmp eq i32 %1798, %5
  br i1 %1850, label %5514, label %1712, !llvm.loop !1184

1851:                                             ; preds = %1254
  %1852 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1743, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5514

1853:                                             ; preds = %18
  %1854 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1855 = load ptr, ptr %1854, align 8, !tbaa !10
  %1856 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1857 = load ptr, ptr %1856, align 8, !tbaa !10
  %1858 = load float, ptr %1855, align 4, !tbaa !163
  %1859 = fptosi float %1858 to i16
  store i16 %1859, ptr %1857, align 2, !tbaa !79
  %1860 = icmp eq i32 %13, 0
  br i1 %1860, label %5514, label %1861

1861:                                             ; preds = %1853
  switch i32 %1, label %2462 [
    i32 1, label %1862
    i32 0, label %2164
  ]

1862:                                             ; preds = %1861
  %1863 = getelementptr inbounds i32, ptr %3, i64 %19
  %1864 = load i32, ptr %1863, align 4, !tbaa !6
  %1865 = icmp eq i32 %1864, 0
  %1866 = icmp sgt i32 %5, 0
  br i1 %1865, label %1876, label %1867

1867:                                             ; preds = %1862
  br i1 %1866, label %1868, label %5514

1868:                                             ; preds = %1867
  %1869 = icmp sgt i32 %13, 1
  %1870 = icmp sgt i32 %13, 0
  %1871 = add i32 %13, -2
  %1872 = zext i32 %1871 to i64
  %1873 = zext i32 %13 to i64
  %1874 = add nuw i32 %5, 1
  %1875 = icmp eq i32 %13, 1
  br label %2024

1876:                                             ; preds = %1862
  br i1 %1866, label %1877, label %5514

1877:                                             ; preds = %1876
  %1878 = icmp sgt i32 %13, 1
  %1879 = icmp sgt i32 %13, 0
  %1880 = add i32 %13, -2
  %1881 = zext i32 %1880 to i64
  %1882 = zext i32 %13 to i64
  %1883 = add nuw i32 %5, 1
  %1884 = icmp eq i32 %13, 1
  br label %1885

1885:                                             ; preds = %1877, %2022
  %1886 = phi i16 [ %1859, %1877 ], [ %1972, %2022 ]
  %1887 = phi i32 [ 0, %1877 ], [ %1974, %2022 ]
  %1888 = phi double [ 0.000000e+00, %1877 ], [ %1973, %2022 ]
  %1889 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1878, label %1890, label %1959

1890:                                             ; preds = %1885, %1949
  %1891 = phi i32 [ %1958, %1949 ], [ 0, %1885 ]
  %1892 = phi i64 [ %1900, %1949 ], [ %1882, %1885 ]
  %1893 = phi i64 [ %1957, %1949 ], [ %1881, %1885 ]
  %1894 = phi i32 [ %1955, %1949 ], [ %1889, %1885 ]
  %1895 = sub i32 %1880, %1891
  %1896 = tail call i32 @llvm.smin.i32(i32 %1895, i32 0)
  %1897 = sub i32 %1895, %1896
  %1898 = zext i32 %1897 to i64
  %1899 = add nuw nsw i64 %1898, 1
  %1900 = add nsw i64 %1892, -1
  %1901 = icmp ult i32 %1897, 31
  br i1 %1901, label %1937, label %1902

1902:                                             ; preds = %1890
  %1903 = and i64 %1899, 8589934560
  %1904 = sub i64 %1893, %1903
  br label %1905

1905:                                             ; preds = %1905, %1902
  %1906 = phi i64 [ 0, %1902 ], [ %1929, %1905 ]
  %1907 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1902 ], [ %1925, %1905 ]
  %1908 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1902 ], [ %1926, %1905 ]
  %1909 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1902 ], [ %1927, %1905 ]
  %1910 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1902 ], [ %1928, %1905 ]
  %1911 = sub i64 %1893, %1906
  %1912 = getelementptr inbounds i32, ptr %9, i64 %1911
  %1913 = getelementptr inbounds i32, ptr %1912, i64 -7
  %1914 = load <8 x i32>, ptr %1913, align 4, !tbaa !6
  %1915 = shufflevector <8 x i32> %1914, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1916 = getelementptr inbounds i32, ptr %1912, i64 -15
  %1917 = load <8 x i32>, ptr %1916, align 4, !tbaa !6
  %1918 = shufflevector <8 x i32> %1917, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1919 = getelementptr inbounds i32, ptr %1912, i64 -23
  %1920 = load <8 x i32>, ptr %1919, align 4, !tbaa !6
  %1921 = shufflevector <8 x i32> %1920, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1922 = getelementptr inbounds i32, ptr %1912, i64 -31
  %1923 = load <8 x i32>, ptr %1922, align 4, !tbaa !6
  %1924 = shufflevector <8 x i32> %1923, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1925 = mul <8 x i32> %1915, %1907
  %1926 = mul <8 x i32> %1918, %1908
  %1927 = mul <8 x i32> %1921, %1909
  %1928 = mul <8 x i32> %1924, %1910
  %1929 = add nuw i64 %1906, 32
  %1930 = icmp eq i64 %1929, %1903
  br i1 %1930, label %1931, label %1905, !llvm.loop !1185

1931:                                             ; preds = %1905
  %1932 = mul <8 x i32> %1926, %1925
  %1933 = mul <8 x i32> %1927, %1932
  %1934 = mul <8 x i32> %1928, %1933
  %1935 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1934)
  %1936 = icmp eq i64 %1899, %1903
  br i1 %1936, label %1949, label %1937

1937:                                             ; preds = %1890, %1931
  %1938 = phi i64 [ %1893, %1890 ], [ %1904, %1931 ]
  %1939 = phi i32 [ 1, %1890 ], [ %1935, %1931 ]
  br label %1940

1940:                                             ; preds = %1937, %1940
  %1941 = phi i64 [ %1946, %1940 ], [ %1938, %1937 ]
  %1942 = phi i32 [ %1945, %1940 ], [ %1939, %1937 ]
  %1943 = getelementptr inbounds i32, ptr %9, i64 %1941
  %1944 = load i32, ptr %1943, align 4, !tbaa !6
  %1945 = mul nsw i32 %1944, %1942
  %1946 = add nsw i64 %1941, -1
  %1947 = trunc i64 %1941 to i32
  %1948 = icmp sgt i32 %1947, 0
  br i1 %1948, label %1940, label %1949, !llvm.loop !1186

1949:                                             ; preds = %1940, %1931
  %1950 = phi i32 [ %1935, %1931 ], [ %1945, %1940 ]
  %1951 = and i64 %1900, 4294967295
  %1952 = getelementptr inbounds i32, ptr %6, i64 %1951
  %1953 = load i32, ptr %1952, align 4, !tbaa !6
  %1954 = mul nsw i32 %1953, %1950
  %1955 = add nsw i32 %1954, %1894
  %1956 = icmp sgt i64 %1892, 2
  %1957 = add nsw i64 %1893, -1
  %1958 = add i32 %1891, 1
  br i1 %1956, label %1890, label %1959, !llvm.loop !1187

1959:                                             ; preds = %1949, %1885
  %1960 = phi i32 [ %1889, %1885 ], [ %1955, %1949 ]
  %1961 = sext i32 %1960 to i64
  %1962 = getelementptr inbounds double, ptr %2, i64 %1961
  %1963 = load double, ptr %1962, align 8, !tbaa !19
  %1964 = getelementptr inbounds float, ptr %1855, i64 %1961
  %1965 = load float, ptr %1964, align 4, !tbaa !163
  %1966 = fptosi float %1965 to i16
  %1967 = fcmp fast one double %1963, 0.000000e+00
  %1968 = icmp slt i16 %1886, %1966
  %1969 = select i1 %1967, i1 %1968, i1 false
  br i1 %1969, label %1970, label %1971

1970:                                             ; preds = %1959
  store i16 %1966, ptr %1857, align 2, !tbaa !79
  br label %1971

1971:                                             ; preds = %1970, %1959
  %1972 = phi i16 [ %1966, %1970 ], [ %1886, %1959 ]
  %1973 = fadd fast double %1963, %1888
  %1974 = add nuw nsw i32 %1887, 1
  br i1 %1879, label %1975, label %2022

1975:                                             ; preds = %1971
  %1976 = load i32, ptr %4, align 4, !tbaa !6
  %1977 = load i32, ptr %12, align 4, !tbaa !6
  %1978 = add nsw i32 %1977, -1
  %1979 = icmp slt i32 %1976, %1978
  br i1 %1979, label %1999, label %1980

1980:                                             ; preds = %1975
  %1981 = icmp eq i32 %1976, %1978
  br i1 %1981, label %1982, label %2015

1982:                                             ; preds = %1980
  store i32 0, ptr %4, align 4, !tbaa !6
  %1983 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1983, ptr %6, align 4, !tbaa !6
  br i1 %1884, label %2022, label %1984

1984:                                             ; preds = %1982, %2009
  %1985 = phi i64 [ %2013, %2009 ], [ 1, %1982 ]
  %1986 = getelementptr inbounds i32, ptr %4, i64 %1985
  %1987 = load i32, ptr %1986, align 4, !tbaa !6
  %1988 = getelementptr inbounds i32, ptr %12, i64 %1985
  %1989 = load i32, ptr %1988, align 4, !tbaa !6
  %1990 = add nsw i32 %1989, -1
  %1991 = icmp slt i32 %1987, %1990
  br i1 %1991, label %1992, label %2007

1992:                                             ; preds = %1984
  br i1 %1979, label %1999, label %1993

1993:                                             ; preds = %1992
  %1994 = getelementptr inbounds i32, ptr %7, i64 %1985
  %1995 = load i32, ptr %1994, align 4, !tbaa !6
  %1996 = getelementptr inbounds i32, ptr %6, i64 %1985
  %1997 = load i32, ptr %1996, align 4, !tbaa !6
  %1998 = add nsw i32 %1997, %1995
  store i32 %1998, ptr %1996, align 4, !tbaa !6
  br label %2017

1999:                                             ; preds = %1975, %1992
  %2000 = phi i32 [ %1987, %1992 ], [ %1976, %1975 ]
  %2001 = phi ptr [ %1986, %1992 ], [ %4, %1975 ]
  %2002 = phi i64 [ %1985, %1992 ], [ 0, %1975 ]
  %2003 = add nsw i32 %2000, 1
  store i32 %2003, ptr %2001, align 4, !tbaa !6
  %2004 = getelementptr inbounds i32, ptr %7, i64 %2002
  %2005 = load i32, ptr %2004, align 4, !tbaa !6
  %2006 = getelementptr inbounds i32, ptr %6, i64 %2002
  br label %2017

2007:                                             ; preds = %1984
  %2008 = icmp eq i32 %1987, %1990
  br i1 %2008, label %2009, label %2015

2009:                                             ; preds = %2007
  store i32 0, ptr %1986, align 4, !tbaa !6
  %2010 = getelementptr inbounds i32, ptr %8, i64 %1985
  %2011 = load i32, ptr %2010, align 4, !tbaa !6
  %2012 = getelementptr inbounds i32, ptr %6, i64 %1985
  store i32 %2011, ptr %2012, align 4, !tbaa !6
  %2013 = add nuw nsw i64 %1985, 1
  %2014 = icmp eq i64 %2013, %1882
  br i1 %2014, label %2022, label %1984, !llvm.loop !1188

2015:                                             ; preds = %1980, %2007
  %2016 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1748, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5519

2017:                                             ; preds = %1993, %1999
  %2018 = phi ptr [ %2006, %1999 ], [ %1986, %1993 ]
  %2019 = phi i32 [ %2005, %1999 ], [ 1, %1993 ]
  %2020 = load i32, ptr %2018, align 4, !tbaa !6
  %2021 = add nsw i32 %2020, %2019
  store i32 %2021, ptr %2018, align 4, !tbaa !6
  br label %2022

2022:                                             ; preds = %2009, %2017, %1982, %1971
  %2023 = icmp eq i32 %1974, %5
  br i1 %2023, label %5514, label %1885, !llvm.loop !1189

2024:                                             ; preds = %1868, %2162
  %2025 = phi i16 [ %1859, %1868 ], [ %2110, %2162 ]
  %2026 = phi i32 [ 0, %1868 ], [ %2111, %2162 ]
  %2027 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1869, label %2028, label %2097

2028:                                             ; preds = %2024, %2087
  %2029 = phi i32 [ %2096, %2087 ], [ 0, %2024 ]
  %2030 = phi i64 [ %2038, %2087 ], [ %1873, %2024 ]
  %2031 = phi i64 [ %2095, %2087 ], [ %1872, %2024 ]
  %2032 = phi i32 [ %2093, %2087 ], [ %2027, %2024 ]
  %2033 = sub i32 %1871, %2029
  %2034 = tail call i32 @llvm.smin.i32(i32 %2033, i32 0)
  %2035 = sub i32 %2033, %2034
  %2036 = zext i32 %2035 to i64
  %2037 = add nuw nsw i64 %2036, 1
  %2038 = add nsw i64 %2030, -1
  %2039 = icmp ult i32 %2035, 31
  br i1 %2039, label %2075, label %2040

2040:                                             ; preds = %2028
  %2041 = and i64 %2037, 8589934560
  %2042 = sub i64 %2031, %2041
  br label %2043

2043:                                             ; preds = %2043, %2040
  %2044 = phi i64 [ 0, %2040 ], [ %2067, %2043 ]
  %2045 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2040 ], [ %2063, %2043 ]
  %2046 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2040 ], [ %2064, %2043 ]
  %2047 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2040 ], [ %2065, %2043 ]
  %2048 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2040 ], [ %2066, %2043 ]
  %2049 = sub i64 %2031, %2044
  %2050 = getelementptr inbounds i32, ptr %11, i64 %2049
  %2051 = getelementptr inbounds i32, ptr %2050, i64 -7
  %2052 = load <8 x i32>, ptr %2051, align 4, !tbaa !6
  %2053 = shufflevector <8 x i32> %2052, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2054 = getelementptr inbounds i32, ptr %2050, i64 -15
  %2055 = load <8 x i32>, ptr %2054, align 4, !tbaa !6
  %2056 = shufflevector <8 x i32> %2055, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2057 = getelementptr inbounds i32, ptr %2050, i64 -23
  %2058 = load <8 x i32>, ptr %2057, align 4, !tbaa !6
  %2059 = shufflevector <8 x i32> %2058, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2060 = getelementptr inbounds i32, ptr %2050, i64 -31
  %2061 = load <8 x i32>, ptr %2060, align 4, !tbaa !6
  %2062 = shufflevector <8 x i32> %2061, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2063 = mul <8 x i32> %2053, %2045
  %2064 = mul <8 x i32> %2056, %2046
  %2065 = mul <8 x i32> %2059, %2047
  %2066 = mul <8 x i32> %2062, %2048
  %2067 = add nuw i64 %2044, 32
  %2068 = icmp eq i64 %2067, %2041
  br i1 %2068, label %2069, label %2043, !llvm.loop !1190

2069:                                             ; preds = %2043
  %2070 = mul <8 x i32> %2064, %2063
  %2071 = mul <8 x i32> %2065, %2070
  %2072 = mul <8 x i32> %2066, %2071
  %2073 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2072)
  %2074 = icmp eq i64 %2037, %2041
  br i1 %2074, label %2087, label %2075

2075:                                             ; preds = %2028, %2069
  %2076 = phi i64 [ %2031, %2028 ], [ %2042, %2069 ]
  %2077 = phi i32 [ 1, %2028 ], [ %2073, %2069 ]
  br label %2078

2078:                                             ; preds = %2075, %2078
  %2079 = phi i64 [ %2084, %2078 ], [ %2076, %2075 ]
  %2080 = phi i32 [ %2083, %2078 ], [ %2077, %2075 ]
  %2081 = getelementptr inbounds i32, ptr %11, i64 %2079
  %2082 = load i32, ptr %2081, align 4, !tbaa !6
  %2083 = mul nsw i32 %2082, %2080
  %2084 = add nsw i64 %2079, -1
  %2085 = trunc i64 %2079 to i32
  %2086 = icmp sgt i32 %2085, 0
  br i1 %2086, label %2078, label %2087, !llvm.loop !1191

2087:                                             ; preds = %2078, %2069
  %2088 = phi i32 [ %2073, %2069 ], [ %2083, %2078 ]
  %2089 = and i64 %2038, 4294967295
  %2090 = getelementptr inbounds i32, ptr %6, i64 %2089
  %2091 = load i32, ptr %2090, align 4, !tbaa !6
  %2092 = mul nsw i32 %2091, %2088
  %2093 = add nsw i32 %2092, %2032
  %2094 = icmp sgt i64 %2030, 2
  %2095 = add nsw i64 %2031, -1
  %2096 = add i32 %2029, 1
  br i1 %2094, label %2028, label %2097, !llvm.loop !1192

2097:                                             ; preds = %2087, %2024
  %2098 = phi i32 [ %2027, %2024 ], [ %2093, %2087 ]
  %2099 = icmp slt i32 %2098, %5
  br i1 %2099, label %2102, label %2100

2100:                                             ; preds = %2097
  %2101 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1748, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5519

2102:                                             ; preds = %2097
  %2103 = sext i32 %2098 to i64
  %2104 = getelementptr inbounds float, ptr %1855, i64 %2103
  %2105 = load float, ptr %2104, align 4, !tbaa !163
  %2106 = fptosi float %2105 to i16
  %2107 = icmp slt i16 %2025, %2106
  br i1 %2107, label %2108, label %2109

2108:                                             ; preds = %2102
  store i16 %2106, ptr %1857, align 2, !tbaa !79
  br label %2109

2109:                                             ; preds = %2102, %2108
  %2110 = phi i16 [ %2025, %2102 ], [ %2106, %2108 ]
  %2111 = add nuw nsw i32 %2026, 1
  br i1 %1870, label %2112, label %2162

2112:                                             ; preds = %2109
  %2113 = load i32, ptr %4, align 4, !tbaa !6
  %2114 = load i32, ptr %12, align 4, !tbaa !6
  %2115 = add nsw i32 %2114, -1
  %2116 = icmp slt i32 %2113, %2115
  br i1 %2116, label %2139, label %2117

2117:                                             ; preds = %2112
  %2118 = icmp eq i32 %2113, %2115
  br i1 %2118, label %2119, label %2155

2119:                                             ; preds = %2117
  store i32 0, ptr %4, align 4, !tbaa !6
  %2120 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2120, ptr %6, align 4, !tbaa !6
  br i1 %1875, label %2162, label %2121

2121:                                             ; preds = %2119, %2149
  %2122 = phi i64 [ %2153, %2149 ], [ 1, %2119 ]
  %2123 = getelementptr inbounds i32, ptr %4, i64 %2122
  %2124 = load i32, ptr %2123, align 4, !tbaa !6
  %2125 = getelementptr inbounds i32, ptr %12, i64 %2122
  %2126 = load i32, ptr %2125, align 4, !tbaa !6
  %2127 = add nsw i32 %2126, -1
  %2128 = icmp slt i32 %2124, %2127
  br i1 %2128, label %2129, label %2147

2129:                                             ; preds = %2121
  br i1 %2116, label %2139, label %2130

2130:                                             ; preds = %2129
  %2131 = shl i64 %2122, 32
  %2132 = add i64 %2131, -4294967296
  %2133 = ashr exact i64 %2132, 32
  %2134 = getelementptr inbounds i32, ptr %7, i64 %2133
  %2135 = load i32, ptr %2134, align 4, !tbaa !6
  %2136 = getelementptr inbounds i32, ptr %6, i64 %2122
  %2137 = load i32, ptr %2136, align 4, !tbaa !6
  %2138 = add nsw i32 %2137, %2135
  store i32 %2138, ptr %2136, align 4, !tbaa !6
  br label %2157

2139:                                             ; preds = %2112, %2129
  %2140 = phi i32 [ %2124, %2129 ], [ %2113, %2112 ]
  %2141 = phi ptr [ %2123, %2129 ], [ %4, %2112 ]
  %2142 = phi i64 [ %2122, %2129 ], [ 0, %2112 ]
  %2143 = add nsw i32 %2140, 1
  store i32 %2143, ptr %2141, align 4, !tbaa !6
  %2144 = getelementptr inbounds i32, ptr %7, i64 %2142
  %2145 = load i32, ptr %2144, align 4, !tbaa !6
  %2146 = getelementptr inbounds i32, ptr %6, i64 %2142
  br label %2157

2147:                                             ; preds = %2121
  %2148 = icmp eq i32 %2124, %2127
  br i1 %2148, label %2149, label %2155

2149:                                             ; preds = %2147
  store i32 0, ptr %2123, align 4, !tbaa !6
  %2150 = getelementptr inbounds i32, ptr %8, i64 %2122
  %2151 = load i32, ptr %2150, align 4, !tbaa !6
  %2152 = getelementptr inbounds i32, ptr %6, i64 %2122
  store i32 %2151, ptr %2152, align 4, !tbaa !6
  %2153 = add nuw nsw i64 %2122, 1
  %2154 = icmp eq i64 %2153, %1873
  br i1 %2154, label %2162, label %2121, !llvm.loop !1193

2155:                                             ; preds = %2117, %2147
  %2156 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1748, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5519

2157:                                             ; preds = %2130, %2139
  %2158 = phi ptr [ %2146, %2139 ], [ %2123, %2130 ]
  %2159 = phi i32 [ %2145, %2139 ], [ 1, %2130 ]
  %2160 = load i32, ptr %2158, align 4, !tbaa !6
  %2161 = add nsw i32 %2160, %2159
  store i32 %2161, ptr %2158, align 4, !tbaa !6
  br label %2162

2162:                                             ; preds = %2149, %2157, %2119, %2109
  %2163 = icmp eq i32 %2111, %5
  br i1 %2163, label %5514, label %2024, !llvm.loop !1194

2164:                                             ; preds = %1861
  %2165 = getelementptr inbounds i32, ptr %3, i64 %19
  %2166 = load i32, ptr %2165, align 4, !tbaa !6
  %2167 = icmp eq i32 %2166, 0
  %2168 = icmp sgt i32 %5, 0
  br i1 %2167, label %2178, label %2169

2169:                                             ; preds = %2164
  br i1 %2168, label %2170, label %5514

2170:                                             ; preds = %2169
  %2171 = icmp sgt i32 %13, 1
  %2172 = icmp sgt i32 %13, 0
  %2173 = add i32 %13, -2
  %2174 = zext i32 %2173 to i64
  %2175 = zext i32 %13 to i64
  %2176 = add nuw i32 %5, 1
  %2177 = icmp eq i32 %13, 1
  br label %2322

2178:                                             ; preds = %2164
  br i1 %2168, label %2179, label %5514

2179:                                             ; preds = %2178
  %2180 = icmp sgt i32 %13, 1
  %2181 = icmp sgt i32 %13, 0
  %2182 = add i32 %13, -2
  %2183 = zext i32 %2182 to i64
  %2184 = zext i32 %13 to i64
  %2185 = add nuw i32 %5, 1
  %2186 = icmp eq i32 %13, 1
  br label %2187

2187:                                             ; preds = %2179, %2320
  %2188 = phi i16 [ %1859, %2179 ], [ %2270, %2320 ]
  %2189 = phi i32 [ 0, %2179 ], [ %2272, %2320 ]
  %2190 = phi double [ 0.000000e+00, %2179 ], [ %2271, %2320 ]
  %2191 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2180, label %2192, label %2261

2192:                                             ; preds = %2187, %2251
  %2193 = phi i32 [ %2260, %2251 ], [ 0, %2187 ]
  %2194 = phi i64 [ %2202, %2251 ], [ %2184, %2187 ]
  %2195 = phi i64 [ %2259, %2251 ], [ %2183, %2187 ]
  %2196 = phi i32 [ %2257, %2251 ], [ %2191, %2187 ]
  %2197 = sub i32 %2182, %2193
  %2198 = tail call i32 @llvm.smin.i32(i32 %2197, i32 0)
  %2199 = sub i32 %2197, %2198
  %2200 = zext i32 %2199 to i64
  %2201 = add nuw nsw i64 %2200, 1
  %2202 = add nsw i64 %2194, -1
  %2203 = icmp ult i32 %2199, 31
  br i1 %2203, label %2239, label %2204

2204:                                             ; preds = %2192
  %2205 = and i64 %2201, 8589934560
  %2206 = sub i64 %2195, %2205
  br label %2207

2207:                                             ; preds = %2207, %2204
  %2208 = phi i64 [ 0, %2204 ], [ %2231, %2207 ]
  %2209 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2204 ], [ %2227, %2207 ]
  %2210 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2204 ], [ %2228, %2207 ]
  %2211 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2204 ], [ %2229, %2207 ]
  %2212 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2204 ], [ %2230, %2207 ]
  %2213 = sub i64 %2195, %2208
  %2214 = getelementptr inbounds i32, ptr %9, i64 %2213
  %2215 = getelementptr inbounds i32, ptr %2214, i64 -7
  %2216 = load <8 x i32>, ptr %2215, align 4, !tbaa !6
  %2217 = shufflevector <8 x i32> %2216, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2218 = getelementptr inbounds i32, ptr %2214, i64 -15
  %2219 = load <8 x i32>, ptr %2218, align 4, !tbaa !6
  %2220 = shufflevector <8 x i32> %2219, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2221 = getelementptr inbounds i32, ptr %2214, i64 -23
  %2222 = load <8 x i32>, ptr %2221, align 4, !tbaa !6
  %2223 = shufflevector <8 x i32> %2222, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2224 = getelementptr inbounds i32, ptr %2214, i64 -31
  %2225 = load <8 x i32>, ptr %2224, align 4, !tbaa !6
  %2226 = shufflevector <8 x i32> %2225, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2227 = mul <8 x i32> %2217, %2209
  %2228 = mul <8 x i32> %2220, %2210
  %2229 = mul <8 x i32> %2223, %2211
  %2230 = mul <8 x i32> %2226, %2212
  %2231 = add nuw i64 %2208, 32
  %2232 = icmp eq i64 %2231, %2205
  br i1 %2232, label %2233, label %2207, !llvm.loop !1195

2233:                                             ; preds = %2207
  %2234 = mul <8 x i32> %2228, %2227
  %2235 = mul <8 x i32> %2229, %2234
  %2236 = mul <8 x i32> %2230, %2235
  %2237 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2236)
  %2238 = icmp eq i64 %2201, %2205
  br i1 %2238, label %2251, label %2239

2239:                                             ; preds = %2192, %2233
  %2240 = phi i64 [ %2195, %2192 ], [ %2206, %2233 ]
  %2241 = phi i32 [ 1, %2192 ], [ %2237, %2233 ]
  br label %2242

2242:                                             ; preds = %2239, %2242
  %2243 = phi i64 [ %2248, %2242 ], [ %2240, %2239 ]
  %2244 = phi i32 [ %2247, %2242 ], [ %2241, %2239 ]
  %2245 = getelementptr inbounds i32, ptr %9, i64 %2243
  %2246 = load i32, ptr %2245, align 4, !tbaa !6
  %2247 = mul nsw i32 %2246, %2244
  %2248 = add nsw i64 %2243, -1
  %2249 = trunc i64 %2243 to i32
  %2250 = icmp sgt i32 %2249, 0
  br i1 %2250, label %2242, label %2251, !llvm.loop !1196

2251:                                             ; preds = %2242, %2233
  %2252 = phi i32 [ %2237, %2233 ], [ %2247, %2242 ]
  %2253 = and i64 %2202, 4294967295
  %2254 = getelementptr inbounds i32, ptr %6, i64 %2253
  %2255 = load i32, ptr %2254, align 4, !tbaa !6
  %2256 = mul nsw i32 %2255, %2252
  %2257 = add nsw i32 %2256, %2196
  %2258 = icmp sgt i64 %2194, 2
  %2259 = add nsw i64 %2195, -1
  %2260 = add i32 %2193, 1
  br i1 %2258, label %2192, label %2261, !llvm.loop !1197

2261:                                             ; preds = %2251, %2187
  %2262 = phi i32 [ %2191, %2187 ], [ %2257, %2251 ]
  %2263 = sext i32 %2262 to i64
  %2264 = getelementptr inbounds float, ptr %1855, i64 %2263
  %2265 = load float, ptr %2264, align 4, !tbaa !163
  %2266 = fptosi float %2265 to i16
  %2267 = icmp slt i16 %2188, %2266
  br i1 %2267, label %2268, label %2269

2268:                                             ; preds = %2261
  store i16 %2266, ptr %1857, align 2, !tbaa !79
  br label %2269

2269:                                             ; preds = %2268, %2261
  %2270 = phi i16 [ %2266, %2268 ], [ %2188, %2261 ]
  %2271 = fadd fast double %2190, 1.000000e+00
  %2272 = add nuw nsw i32 %2189, 1
  br i1 %2181, label %2273, label %2320

2273:                                             ; preds = %2269
  %2274 = load i32, ptr %4, align 4, !tbaa !6
  %2275 = load i32, ptr %12, align 4, !tbaa !6
  %2276 = add nsw i32 %2275, -1
  %2277 = icmp slt i32 %2274, %2276
  br i1 %2277, label %2297, label %2278

2278:                                             ; preds = %2273
  %2279 = icmp eq i32 %2274, %2276
  br i1 %2279, label %2280, label %2313

2280:                                             ; preds = %2278
  store i32 0, ptr %4, align 4, !tbaa !6
  %2281 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2281, ptr %6, align 4, !tbaa !6
  br i1 %2186, label %2320, label %2282

2282:                                             ; preds = %2280, %2307
  %2283 = phi i64 [ %2311, %2307 ], [ 1, %2280 ]
  %2284 = getelementptr inbounds i32, ptr %4, i64 %2283
  %2285 = load i32, ptr %2284, align 4, !tbaa !6
  %2286 = getelementptr inbounds i32, ptr %12, i64 %2283
  %2287 = load i32, ptr %2286, align 4, !tbaa !6
  %2288 = add nsw i32 %2287, -1
  %2289 = icmp slt i32 %2285, %2288
  br i1 %2289, label %2290, label %2305

2290:                                             ; preds = %2282
  br i1 %2277, label %2297, label %2291

2291:                                             ; preds = %2290
  %2292 = getelementptr inbounds i32, ptr %7, i64 %2283
  %2293 = load i32, ptr %2292, align 4, !tbaa !6
  %2294 = getelementptr inbounds i32, ptr %6, i64 %2283
  %2295 = load i32, ptr %2294, align 4, !tbaa !6
  %2296 = add nsw i32 %2295, %2293
  store i32 %2296, ptr %2294, align 4, !tbaa !6
  br label %2315

2297:                                             ; preds = %2273, %2290
  %2298 = phi i32 [ %2285, %2290 ], [ %2274, %2273 ]
  %2299 = phi ptr [ %2284, %2290 ], [ %4, %2273 ]
  %2300 = phi i64 [ %2283, %2290 ], [ 0, %2273 ]
  %2301 = add nsw i32 %2298, 1
  store i32 %2301, ptr %2299, align 4, !tbaa !6
  %2302 = getelementptr inbounds i32, ptr %7, i64 %2300
  %2303 = load i32, ptr %2302, align 4, !tbaa !6
  %2304 = getelementptr inbounds i32, ptr %6, i64 %2300
  br label %2315

2305:                                             ; preds = %2282
  %2306 = icmp eq i32 %2285, %2288
  br i1 %2306, label %2307, label %2313

2307:                                             ; preds = %2305
  store i32 0, ptr %2284, align 4, !tbaa !6
  %2308 = getelementptr inbounds i32, ptr %8, i64 %2283
  %2309 = load i32, ptr %2308, align 4, !tbaa !6
  %2310 = getelementptr inbounds i32, ptr %6, i64 %2283
  store i32 %2309, ptr %2310, align 4, !tbaa !6
  %2311 = add nuw nsw i64 %2283, 1
  %2312 = icmp eq i64 %2311, %2184
  br i1 %2312, label %2320, label %2282, !llvm.loop !1198

2313:                                             ; preds = %2278, %2305
  %2314 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1748, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5519

2315:                                             ; preds = %2291, %2297
  %2316 = phi ptr [ %2304, %2297 ], [ %2284, %2291 ]
  %2317 = phi i32 [ %2303, %2297 ], [ 1, %2291 ]
  %2318 = load i32, ptr %2316, align 4, !tbaa !6
  %2319 = add nsw i32 %2318, %2317
  store i32 %2319, ptr %2316, align 4, !tbaa !6
  br label %2320

2320:                                             ; preds = %2307, %2315, %2280, %2269
  %2321 = icmp eq i32 %2272, %5
  br i1 %2321, label %5514, label %2187, !llvm.loop !1199

2322:                                             ; preds = %2170, %2460
  %2323 = phi i16 [ %1859, %2170 ], [ %2408, %2460 ]
  %2324 = phi i32 [ 0, %2170 ], [ %2409, %2460 ]
  %2325 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2171, label %2326, label %2395

2326:                                             ; preds = %2322, %2385
  %2327 = phi i32 [ %2394, %2385 ], [ 0, %2322 ]
  %2328 = phi i64 [ %2336, %2385 ], [ %2175, %2322 ]
  %2329 = phi i64 [ %2393, %2385 ], [ %2174, %2322 ]
  %2330 = phi i32 [ %2391, %2385 ], [ %2325, %2322 ]
  %2331 = sub i32 %2173, %2327
  %2332 = tail call i32 @llvm.smin.i32(i32 %2331, i32 0)
  %2333 = sub i32 %2331, %2332
  %2334 = zext i32 %2333 to i64
  %2335 = add nuw nsw i64 %2334, 1
  %2336 = add nsw i64 %2328, -1
  %2337 = icmp ult i32 %2333, 31
  br i1 %2337, label %2373, label %2338

2338:                                             ; preds = %2326
  %2339 = and i64 %2335, 8589934560
  %2340 = sub i64 %2329, %2339
  br label %2341

2341:                                             ; preds = %2341, %2338
  %2342 = phi i64 [ 0, %2338 ], [ %2365, %2341 ]
  %2343 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2338 ], [ %2361, %2341 ]
  %2344 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2338 ], [ %2362, %2341 ]
  %2345 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2338 ], [ %2363, %2341 ]
  %2346 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2338 ], [ %2364, %2341 ]
  %2347 = sub i64 %2329, %2342
  %2348 = getelementptr inbounds i32, ptr %11, i64 %2347
  %2349 = getelementptr inbounds i32, ptr %2348, i64 -7
  %2350 = load <8 x i32>, ptr %2349, align 4, !tbaa !6
  %2351 = shufflevector <8 x i32> %2350, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2352 = getelementptr inbounds i32, ptr %2348, i64 -15
  %2353 = load <8 x i32>, ptr %2352, align 4, !tbaa !6
  %2354 = shufflevector <8 x i32> %2353, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2355 = getelementptr inbounds i32, ptr %2348, i64 -23
  %2356 = load <8 x i32>, ptr %2355, align 4, !tbaa !6
  %2357 = shufflevector <8 x i32> %2356, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2358 = getelementptr inbounds i32, ptr %2348, i64 -31
  %2359 = load <8 x i32>, ptr %2358, align 4, !tbaa !6
  %2360 = shufflevector <8 x i32> %2359, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2361 = mul <8 x i32> %2351, %2343
  %2362 = mul <8 x i32> %2354, %2344
  %2363 = mul <8 x i32> %2357, %2345
  %2364 = mul <8 x i32> %2360, %2346
  %2365 = add nuw i64 %2342, 32
  %2366 = icmp eq i64 %2365, %2339
  br i1 %2366, label %2367, label %2341, !llvm.loop !1200

2367:                                             ; preds = %2341
  %2368 = mul <8 x i32> %2362, %2361
  %2369 = mul <8 x i32> %2363, %2368
  %2370 = mul <8 x i32> %2364, %2369
  %2371 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2370)
  %2372 = icmp eq i64 %2335, %2339
  br i1 %2372, label %2385, label %2373

2373:                                             ; preds = %2326, %2367
  %2374 = phi i64 [ %2329, %2326 ], [ %2340, %2367 ]
  %2375 = phi i32 [ 1, %2326 ], [ %2371, %2367 ]
  br label %2376

2376:                                             ; preds = %2373, %2376
  %2377 = phi i64 [ %2382, %2376 ], [ %2374, %2373 ]
  %2378 = phi i32 [ %2381, %2376 ], [ %2375, %2373 ]
  %2379 = getelementptr inbounds i32, ptr %11, i64 %2377
  %2380 = load i32, ptr %2379, align 4, !tbaa !6
  %2381 = mul nsw i32 %2380, %2378
  %2382 = add nsw i64 %2377, -1
  %2383 = trunc i64 %2377 to i32
  %2384 = icmp sgt i32 %2383, 0
  br i1 %2384, label %2376, label %2385, !llvm.loop !1201

2385:                                             ; preds = %2376, %2367
  %2386 = phi i32 [ %2371, %2367 ], [ %2381, %2376 ]
  %2387 = and i64 %2336, 4294967295
  %2388 = getelementptr inbounds i32, ptr %6, i64 %2387
  %2389 = load i32, ptr %2388, align 4, !tbaa !6
  %2390 = mul nsw i32 %2389, %2386
  %2391 = add nsw i32 %2390, %2330
  %2392 = icmp sgt i64 %2328, 2
  %2393 = add nsw i64 %2329, -1
  %2394 = add i32 %2327, 1
  br i1 %2392, label %2326, label %2395, !llvm.loop !1202

2395:                                             ; preds = %2385, %2322
  %2396 = phi i32 [ %2325, %2322 ], [ %2391, %2385 ]
  %2397 = icmp slt i32 %2396, %5
  br i1 %2397, label %2400, label %2398

2398:                                             ; preds = %2395
  %2399 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1748, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5519

2400:                                             ; preds = %2395
  %2401 = sext i32 %2396 to i64
  %2402 = getelementptr inbounds float, ptr %1855, i64 %2401
  %2403 = load float, ptr %2402, align 4, !tbaa !163
  %2404 = fptosi float %2403 to i16
  %2405 = icmp slt i16 %2323, %2404
  br i1 %2405, label %2406, label %2407

2406:                                             ; preds = %2400
  store i16 %2404, ptr %1857, align 2, !tbaa !79
  br label %2407

2407:                                             ; preds = %2406, %2400
  %2408 = phi i16 [ %2404, %2406 ], [ %2323, %2400 ]
  %2409 = add nuw nsw i32 %2324, 1
  br i1 %2172, label %2410, label %2460

2410:                                             ; preds = %2407
  %2411 = load i32, ptr %4, align 4, !tbaa !6
  %2412 = load i32, ptr %12, align 4, !tbaa !6
  %2413 = add nsw i32 %2412, -1
  %2414 = icmp slt i32 %2411, %2413
  br i1 %2414, label %2437, label %2415

2415:                                             ; preds = %2410
  %2416 = icmp eq i32 %2411, %2413
  br i1 %2416, label %2417, label %2453

2417:                                             ; preds = %2415
  store i32 0, ptr %4, align 4, !tbaa !6
  %2418 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2418, ptr %6, align 4, !tbaa !6
  br i1 %2177, label %2460, label %2419

2419:                                             ; preds = %2417, %2447
  %2420 = phi i64 [ %2451, %2447 ], [ 1, %2417 ]
  %2421 = getelementptr inbounds i32, ptr %4, i64 %2420
  %2422 = load i32, ptr %2421, align 4, !tbaa !6
  %2423 = getelementptr inbounds i32, ptr %12, i64 %2420
  %2424 = load i32, ptr %2423, align 4, !tbaa !6
  %2425 = add nsw i32 %2424, -1
  %2426 = icmp slt i32 %2422, %2425
  br i1 %2426, label %2427, label %2445

2427:                                             ; preds = %2419
  br i1 %2414, label %2437, label %2428

2428:                                             ; preds = %2427
  %2429 = shl i64 %2420, 32
  %2430 = add i64 %2429, -4294967296
  %2431 = ashr exact i64 %2430, 32
  %2432 = getelementptr inbounds i32, ptr %7, i64 %2431
  %2433 = load i32, ptr %2432, align 4, !tbaa !6
  %2434 = getelementptr inbounds i32, ptr %6, i64 %2420
  %2435 = load i32, ptr %2434, align 4, !tbaa !6
  %2436 = add nsw i32 %2435, %2433
  store i32 %2436, ptr %2434, align 4, !tbaa !6
  br label %2455

2437:                                             ; preds = %2410, %2427
  %2438 = phi i32 [ %2422, %2427 ], [ %2411, %2410 ]
  %2439 = phi ptr [ %2421, %2427 ], [ %4, %2410 ]
  %2440 = phi i64 [ %2420, %2427 ], [ 0, %2410 ]
  %2441 = add nsw i32 %2438, 1
  store i32 %2441, ptr %2439, align 4, !tbaa !6
  %2442 = getelementptr inbounds i32, ptr %7, i64 %2440
  %2443 = load i32, ptr %2442, align 4, !tbaa !6
  %2444 = getelementptr inbounds i32, ptr %6, i64 %2440
  br label %2455

2445:                                             ; preds = %2419
  %2446 = icmp eq i32 %2422, %2425
  br i1 %2446, label %2447, label %2453

2447:                                             ; preds = %2445
  store i32 0, ptr %2421, align 4, !tbaa !6
  %2448 = getelementptr inbounds i32, ptr %8, i64 %2420
  %2449 = load i32, ptr %2448, align 4, !tbaa !6
  %2450 = getelementptr inbounds i32, ptr %6, i64 %2420
  store i32 %2449, ptr %2450, align 4, !tbaa !6
  %2451 = add nuw nsw i64 %2420, 1
  %2452 = icmp eq i64 %2451, %2175
  br i1 %2452, label %2460, label %2419, !llvm.loop !1203

2453:                                             ; preds = %2415, %2445
  %2454 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1748, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5519

2455:                                             ; preds = %2428, %2437
  %2456 = phi ptr [ %2444, %2437 ], [ %2421, %2428 ]
  %2457 = phi i32 [ %2443, %2437 ], [ 1, %2428 ]
  %2458 = load i32, ptr %2456, align 4, !tbaa !6
  %2459 = add nsw i32 %2458, %2457
  store i32 %2459, ptr %2456, align 4, !tbaa !6
  br label %2460

2460:                                             ; preds = %2447, %2455, %2417, %2407
  %2461 = icmp eq i32 %2409, %5
  br i1 %2461, label %5514, label %2322, !llvm.loop !1204

2462:                                             ; preds = %1861
  %2463 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1748, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5514

2464:                                             ; preds = %18
  %2465 = getelementptr inbounds ptr, ptr %14, i64 %19
  %2466 = load ptr, ptr %2465, align 8, !tbaa !10
  %2467 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2468 = load ptr, ptr %2467, align 8, !tbaa !10
  %2469 = load float, ptr %2466, align 4, !tbaa !163
  %2470 = fptosi float %2469 to i32
  store i32 %2470, ptr %2468, align 4, !tbaa !6
  %2471 = icmp eq i32 %13, 0
  br i1 %2471, label %5514, label %2472

2472:                                             ; preds = %2464
  switch i32 %1, label %3069 [
    i32 1, label %2473
    i32 0, label %2773
  ]

2473:                                             ; preds = %2472
  %2474 = getelementptr inbounds i32, ptr %3, i64 %19
  %2475 = load i32, ptr %2474, align 4, !tbaa !6
  %2476 = icmp eq i32 %2475, 0
  %2477 = icmp sgt i32 %5, 0
  br i1 %2476, label %2487, label %2478

2478:                                             ; preds = %2473
  br i1 %2477, label %2479, label %5514

2479:                                             ; preds = %2478
  %2480 = icmp sgt i32 %13, 1
  %2481 = icmp sgt i32 %13, 0
  %2482 = add i32 %13, -2
  %2483 = zext i32 %2482 to i64
  %2484 = zext i32 %13 to i64
  %2485 = add nuw i32 %5, 1
  %2486 = icmp eq i32 %13, 1
  br label %2634

2487:                                             ; preds = %2473
  br i1 %2477, label %2488, label %5514

2488:                                             ; preds = %2487
  %2489 = icmp sgt i32 %13, 1
  %2490 = icmp sgt i32 %13, 0
  %2491 = add i32 %13, -2
  %2492 = zext i32 %2491 to i64
  %2493 = zext i32 %13 to i64
  %2494 = add nuw i32 %5, 1
  %2495 = icmp eq i32 %13, 1
  br label %2496

2496:                                             ; preds = %2488, %2632
  %2497 = phi i32 [ 0, %2488 ], [ %2584, %2632 ]
  %2498 = phi double [ 0.000000e+00, %2488 ], [ %2583, %2632 ]
  %2499 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2489, label %2500, label %2569

2500:                                             ; preds = %2496, %2559
  %2501 = phi i32 [ %2568, %2559 ], [ 0, %2496 ]
  %2502 = phi i64 [ %2510, %2559 ], [ %2493, %2496 ]
  %2503 = phi i64 [ %2567, %2559 ], [ %2492, %2496 ]
  %2504 = phi i32 [ %2565, %2559 ], [ %2499, %2496 ]
  %2505 = sub i32 %2491, %2501
  %2506 = tail call i32 @llvm.smin.i32(i32 %2505, i32 0)
  %2507 = sub i32 %2505, %2506
  %2508 = zext i32 %2507 to i64
  %2509 = add nuw nsw i64 %2508, 1
  %2510 = add nsw i64 %2502, -1
  %2511 = icmp ult i32 %2507, 31
  br i1 %2511, label %2547, label %2512

2512:                                             ; preds = %2500
  %2513 = and i64 %2509, 8589934560
  %2514 = sub i64 %2503, %2513
  br label %2515

2515:                                             ; preds = %2515, %2512
  %2516 = phi i64 [ 0, %2512 ], [ %2539, %2515 ]
  %2517 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2512 ], [ %2535, %2515 ]
  %2518 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2512 ], [ %2536, %2515 ]
  %2519 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2512 ], [ %2537, %2515 ]
  %2520 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2512 ], [ %2538, %2515 ]
  %2521 = sub i64 %2503, %2516
  %2522 = getelementptr inbounds i32, ptr %9, i64 %2521
  %2523 = getelementptr inbounds i32, ptr %2522, i64 -7
  %2524 = load <8 x i32>, ptr %2523, align 4, !tbaa !6
  %2525 = shufflevector <8 x i32> %2524, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2526 = getelementptr inbounds i32, ptr %2522, i64 -15
  %2527 = load <8 x i32>, ptr %2526, align 4, !tbaa !6
  %2528 = shufflevector <8 x i32> %2527, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2529 = getelementptr inbounds i32, ptr %2522, i64 -23
  %2530 = load <8 x i32>, ptr %2529, align 4, !tbaa !6
  %2531 = shufflevector <8 x i32> %2530, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2532 = getelementptr inbounds i32, ptr %2522, i64 -31
  %2533 = load <8 x i32>, ptr %2532, align 4, !tbaa !6
  %2534 = shufflevector <8 x i32> %2533, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2535 = mul <8 x i32> %2525, %2517
  %2536 = mul <8 x i32> %2528, %2518
  %2537 = mul <8 x i32> %2531, %2519
  %2538 = mul <8 x i32> %2534, %2520
  %2539 = add nuw i64 %2516, 32
  %2540 = icmp eq i64 %2539, %2513
  br i1 %2540, label %2541, label %2515, !llvm.loop !1205

2541:                                             ; preds = %2515
  %2542 = mul <8 x i32> %2536, %2535
  %2543 = mul <8 x i32> %2537, %2542
  %2544 = mul <8 x i32> %2538, %2543
  %2545 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2544)
  %2546 = icmp eq i64 %2509, %2513
  br i1 %2546, label %2559, label %2547

2547:                                             ; preds = %2500, %2541
  %2548 = phi i64 [ %2503, %2500 ], [ %2514, %2541 ]
  %2549 = phi i32 [ 1, %2500 ], [ %2545, %2541 ]
  br label %2550

2550:                                             ; preds = %2547, %2550
  %2551 = phi i64 [ %2556, %2550 ], [ %2548, %2547 ]
  %2552 = phi i32 [ %2555, %2550 ], [ %2549, %2547 ]
  %2553 = getelementptr inbounds i32, ptr %9, i64 %2551
  %2554 = load i32, ptr %2553, align 4, !tbaa !6
  %2555 = mul nsw i32 %2554, %2552
  %2556 = add nsw i64 %2551, -1
  %2557 = trunc i64 %2551 to i32
  %2558 = icmp sgt i32 %2557, 0
  br i1 %2558, label %2550, label %2559, !llvm.loop !1206

2559:                                             ; preds = %2550, %2541
  %2560 = phi i32 [ %2545, %2541 ], [ %2555, %2550 ]
  %2561 = and i64 %2510, 4294967295
  %2562 = getelementptr inbounds i32, ptr %6, i64 %2561
  %2563 = load i32, ptr %2562, align 4, !tbaa !6
  %2564 = mul nsw i32 %2563, %2560
  %2565 = add nsw i32 %2564, %2504
  %2566 = icmp sgt i64 %2502, 2
  %2567 = add nsw i64 %2503, -1
  %2568 = add i32 %2501, 1
  br i1 %2566, label %2500, label %2569, !llvm.loop !1207

2569:                                             ; preds = %2559, %2496
  %2570 = phi i32 [ %2499, %2496 ], [ %2565, %2559 ]
  %2571 = sext i32 %2570 to i64
  %2572 = getelementptr inbounds double, ptr %2, i64 %2571
  %2573 = load double, ptr %2572, align 8, !tbaa !19
  %2574 = getelementptr inbounds float, ptr %2466, i64 %2571
  %2575 = load float, ptr %2574, align 4, !tbaa !163
  %2576 = fptosi float %2575 to i32
  %2577 = fcmp fast ueq double %2573, 0.000000e+00
  br i1 %2577, label %2582, label %2578

2578:                                             ; preds = %2569
  %2579 = load i32, ptr %2468, align 4, !tbaa !6
  %2580 = icmp slt i32 %2579, %2576
  br i1 %2580, label %2581, label %2582

2581:                                             ; preds = %2578
  store i32 %2576, ptr %2468, align 4, !tbaa !6
  br label %2582

2582:                                             ; preds = %2578, %2581, %2569
  %2583 = fadd fast double %2573, %2498
  %2584 = add nuw nsw i32 %2497, 1
  br i1 %2490, label %2585, label %2632

2585:                                             ; preds = %2582
  %2586 = load i32, ptr %4, align 4, !tbaa !6
  %2587 = load i32, ptr %12, align 4, !tbaa !6
  %2588 = add nsw i32 %2587, -1
  %2589 = icmp slt i32 %2586, %2588
  br i1 %2589, label %2609, label %2590

2590:                                             ; preds = %2585
  %2591 = icmp eq i32 %2586, %2588
  br i1 %2591, label %2592, label %2625

2592:                                             ; preds = %2590
  store i32 0, ptr %4, align 4, !tbaa !6
  %2593 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2593, ptr %6, align 4, !tbaa !6
  br i1 %2495, label %2632, label %2594

2594:                                             ; preds = %2592, %2619
  %2595 = phi i64 [ %2623, %2619 ], [ 1, %2592 ]
  %2596 = getelementptr inbounds i32, ptr %4, i64 %2595
  %2597 = load i32, ptr %2596, align 4, !tbaa !6
  %2598 = getelementptr inbounds i32, ptr %12, i64 %2595
  %2599 = load i32, ptr %2598, align 4, !tbaa !6
  %2600 = add nsw i32 %2599, -1
  %2601 = icmp slt i32 %2597, %2600
  br i1 %2601, label %2602, label %2617

2602:                                             ; preds = %2594
  br i1 %2589, label %2609, label %2603

2603:                                             ; preds = %2602
  %2604 = getelementptr inbounds i32, ptr %7, i64 %2595
  %2605 = load i32, ptr %2604, align 4, !tbaa !6
  %2606 = getelementptr inbounds i32, ptr %6, i64 %2595
  %2607 = load i32, ptr %2606, align 4, !tbaa !6
  %2608 = add nsw i32 %2607, %2605
  store i32 %2608, ptr %2606, align 4, !tbaa !6
  br label %2627

2609:                                             ; preds = %2585, %2602
  %2610 = phi i32 [ %2597, %2602 ], [ %2586, %2585 ]
  %2611 = phi ptr [ %2596, %2602 ], [ %4, %2585 ]
  %2612 = phi i64 [ %2595, %2602 ], [ 0, %2585 ]
  %2613 = add nsw i32 %2610, 1
  store i32 %2613, ptr %2611, align 4, !tbaa !6
  %2614 = getelementptr inbounds i32, ptr %7, i64 %2612
  %2615 = load i32, ptr %2614, align 4, !tbaa !6
  %2616 = getelementptr inbounds i32, ptr %6, i64 %2612
  br label %2627

2617:                                             ; preds = %2594
  %2618 = icmp eq i32 %2597, %2600
  br i1 %2618, label %2619, label %2625

2619:                                             ; preds = %2617
  store i32 0, ptr %2596, align 4, !tbaa !6
  %2620 = getelementptr inbounds i32, ptr %8, i64 %2595
  %2621 = load i32, ptr %2620, align 4, !tbaa !6
  %2622 = getelementptr inbounds i32, ptr %6, i64 %2595
  store i32 %2621, ptr %2622, align 4, !tbaa !6
  %2623 = add nuw nsw i64 %2595, 1
  %2624 = icmp eq i64 %2623, %2493
  br i1 %2624, label %2632, label %2594, !llvm.loop !1208

2625:                                             ; preds = %2590, %2617
  %2626 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1753, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5519

2627:                                             ; preds = %2603, %2609
  %2628 = phi ptr [ %2616, %2609 ], [ %2596, %2603 ]
  %2629 = phi i32 [ %2615, %2609 ], [ 1, %2603 ]
  %2630 = load i32, ptr %2628, align 4, !tbaa !6
  %2631 = add nsw i32 %2630, %2629
  store i32 %2631, ptr %2628, align 4, !tbaa !6
  br label %2632

2632:                                             ; preds = %2619, %2627, %2592, %2582
  %2633 = icmp eq i32 %2584, %5
  br i1 %2633, label %5514, label %2496, !llvm.loop !1209

2634:                                             ; preds = %2479, %2771
  %2635 = phi i32 [ 0, %2479 ], [ %2720, %2771 ]
  %2636 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2480, label %2637, label %2706

2637:                                             ; preds = %2634, %2696
  %2638 = phi i32 [ %2705, %2696 ], [ 0, %2634 ]
  %2639 = phi i64 [ %2647, %2696 ], [ %2484, %2634 ]
  %2640 = phi i64 [ %2704, %2696 ], [ %2483, %2634 ]
  %2641 = phi i32 [ %2702, %2696 ], [ %2636, %2634 ]
  %2642 = sub i32 %2482, %2638
  %2643 = tail call i32 @llvm.smin.i32(i32 %2642, i32 0)
  %2644 = sub i32 %2642, %2643
  %2645 = zext i32 %2644 to i64
  %2646 = add nuw nsw i64 %2645, 1
  %2647 = add nsw i64 %2639, -1
  %2648 = icmp ult i32 %2644, 31
  br i1 %2648, label %2684, label %2649

2649:                                             ; preds = %2637
  %2650 = and i64 %2646, 8589934560
  %2651 = sub i64 %2640, %2650
  br label %2652

2652:                                             ; preds = %2652, %2649
  %2653 = phi i64 [ 0, %2649 ], [ %2676, %2652 ]
  %2654 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2649 ], [ %2672, %2652 ]
  %2655 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2649 ], [ %2673, %2652 ]
  %2656 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2649 ], [ %2674, %2652 ]
  %2657 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2649 ], [ %2675, %2652 ]
  %2658 = sub i64 %2640, %2653
  %2659 = getelementptr inbounds i32, ptr %11, i64 %2658
  %2660 = getelementptr inbounds i32, ptr %2659, i64 -7
  %2661 = load <8 x i32>, ptr %2660, align 4, !tbaa !6
  %2662 = shufflevector <8 x i32> %2661, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2663 = getelementptr inbounds i32, ptr %2659, i64 -15
  %2664 = load <8 x i32>, ptr %2663, align 4, !tbaa !6
  %2665 = shufflevector <8 x i32> %2664, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2666 = getelementptr inbounds i32, ptr %2659, i64 -23
  %2667 = load <8 x i32>, ptr %2666, align 4, !tbaa !6
  %2668 = shufflevector <8 x i32> %2667, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2669 = getelementptr inbounds i32, ptr %2659, i64 -31
  %2670 = load <8 x i32>, ptr %2669, align 4, !tbaa !6
  %2671 = shufflevector <8 x i32> %2670, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2672 = mul <8 x i32> %2662, %2654
  %2673 = mul <8 x i32> %2665, %2655
  %2674 = mul <8 x i32> %2668, %2656
  %2675 = mul <8 x i32> %2671, %2657
  %2676 = add nuw i64 %2653, 32
  %2677 = icmp eq i64 %2676, %2650
  br i1 %2677, label %2678, label %2652, !llvm.loop !1210

2678:                                             ; preds = %2652
  %2679 = mul <8 x i32> %2673, %2672
  %2680 = mul <8 x i32> %2674, %2679
  %2681 = mul <8 x i32> %2675, %2680
  %2682 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2681)
  %2683 = icmp eq i64 %2646, %2650
  br i1 %2683, label %2696, label %2684

2684:                                             ; preds = %2637, %2678
  %2685 = phi i64 [ %2640, %2637 ], [ %2651, %2678 ]
  %2686 = phi i32 [ 1, %2637 ], [ %2682, %2678 ]
  br label %2687

2687:                                             ; preds = %2684, %2687
  %2688 = phi i64 [ %2693, %2687 ], [ %2685, %2684 ]
  %2689 = phi i32 [ %2692, %2687 ], [ %2686, %2684 ]
  %2690 = getelementptr inbounds i32, ptr %11, i64 %2688
  %2691 = load i32, ptr %2690, align 4, !tbaa !6
  %2692 = mul nsw i32 %2691, %2689
  %2693 = add nsw i64 %2688, -1
  %2694 = trunc i64 %2688 to i32
  %2695 = icmp sgt i32 %2694, 0
  br i1 %2695, label %2687, label %2696, !llvm.loop !1211

2696:                                             ; preds = %2687, %2678
  %2697 = phi i32 [ %2682, %2678 ], [ %2692, %2687 ]
  %2698 = and i64 %2647, 4294967295
  %2699 = getelementptr inbounds i32, ptr %6, i64 %2698
  %2700 = load i32, ptr %2699, align 4, !tbaa !6
  %2701 = mul nsw i32 %2700, %2697
  %2702 = add nsw i32 %2701, %2641
  %2703 = icmp sgt i64 %2639, 2
  %2704 = add nsw i64 %2640, -1
  %2705 = add i32 %2638, 1
  br i1 %2703, label %2637, label %2706, !llvm.loop !1212

2706:                                             ; preds = %2696, %2634
  %2707 = phi i32 [ %2636, %2634 ], [ %2702, %2696 ]
  %2708 = icmp slt i32 %2707, %5
  br i1 %2708, label %2711, label %2709

2709:                                             ; preds = %2706
  %2710 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1753, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5519

2711:                                             ; preds = %2706
  %2712 = sext i32 %2707 to i64
  %2713 = getelementptr inbounds float, ptr %2466, i64 %2712
  %2714 = load float, ptr %2713, align 4, !tbaa !163
  %2715 = fptosi float %2714 to i32
  %2716 = load i32, ptr %2468, align 4, !tbaa !6
  %2717 = icmp slt i32 %2716, %2715
  br i1 %2717, label %2718, label %2719

2718:                                             ; preds = %2711
  store i32 %2715, ptr %2468, align 4, !tbaa !6
  br label %2719

2719:                                             ; preds = %2711, %2718
  %2720 = add nuw nsw i32 %2635, 1
  br i1 %2481, label %2721, label %2771

2721:                                             ; preds = %2719
  %2722 = load i32, ptr %4, align 4, !tbaa !6
  %2723 = load i32, ptr %12, align 4, !tbaa !6
  %2724 = add nsw i32 %2723, -1
  %2725 = icmp slt i32 %2722, %2724
  br i1 %2725, label %2748, label %2726

2726:                                             ; preds = %2721
  %2727 = icmp eq i32 %2722, %2724
  br i1 %2727, label %2728, label %2764

2728:                                             ; preds = %2726
  store i32 0, ptr %4, align 4, !tbaa !6
  %2729 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2729, ptr %6, align 4, !tbaa !6
  br i1 %2486, label %2771, label %2730

2730:                                             ; preds = %2728, %2758
  %2731 = phi i64 [ %2762, %2758 ], [ 1, %2728 ]
  %2732 = getelementptr inbounds i32, ptr %4, i64 %2731
  %2733 = load i32, ptr %2732, align 4, !tbaa !6
  %2734 = getelementptr inbounds i32, ptr %12, i64 %2731
  %2735 = load i32, ptr %2734, align 4, !tbaa !6
  %2736 = add nsw i32 %2735, -1
  %2737 = icmp slt i32 %2733, %2736
  br i1 %2737, label %2738, label %2756

2738:                                             ; preds = %2730
  br i1 %2725, label %2748, label %2739

2739:                                             ; preds = %2738
  %2740 = shl i64 %2731, 32
  %2741 = add i64 %2740, -4294967296
  %2742 = ashr exact i64 %2741, 32
  %2743 = getelementptr inbounds i32, ptr %7, i64 %2742
  %2744 = load i32, ptr %2743, align 4, !tbaa !6
  %2745 = getelementptr inbounds i32, ptr %6, i64 %2731
  %2746 = load i32, ptr %2745, align 4, !tbaa !6
  %2747 = add nsw i32 %2746, %2744
  store i32 %2747, ptr %2745, align 4, !tbaa !6
  br label %2766

2748:                                             ; preds = %2721, %2738
  %2749 = phi i32 [ %2733, %2738 ], [ %2722, %2721 ]
  %2750 = phi ptr [ %2732, %2738 ], [ %4, %2721 ]
  %2751 = phi i64 [ %2731, %2738 ], [ 0, %2721 ]
  %2752 = add nsw i32 %2749, 1
  store i32 %2752, ptr %2750, align 4, !tbaa !6
  %2753 = getelementptr inbounds i32, ptr %7, i64 %2751
  %2754 = load i32, ptr %2753, align 4, !tbaa !6
  %2755 = getelementptr inbounds i32, ptr %6, i64 %2751
  br label %2766

2756:                                             ; preds = %2730
  %2757 = icmp eq i32 %2733, %2736
  br i1 %2757, label %2758, label %2764

2758:                                             ; preds = %2756
  store i32 0, ptr %2732, align 4, !tbaa !6
  %2759 = getelementptr inbounds i32, ptr %8, i64 %2731
  %2760 = load i32, ptr %2759, align 4, !tbaa !6
  %2761 = getelementptr inbounds i32, ptr %6, i64 %2731
  store i32 %2760, ptr %2761, align 4, !tbaa !6
  %2762 = add nuw nsw i64 %2731, 1
  %2763 = icmp eq i64 %2762, %2484
  br i1 %2763, label %2771, label %2730, !llvm.loop !1213

2764:                                             ; preds = %2726, %2756
  %2765 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1753, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5519

2766:                                             ; preds = %2739, %2748
  %2767 = phi ptr [ %2755, %2748 ], [ %2732, %2739 ]
  %2768 = phi i32 [ %2754, %2748 ], [ 1, %2739 ]
  %2769 = load i32, ptr %2767, align 4, !tbaa !6
  %2770 = add nsw i32 %2769, %2768
  store i32 %2770, ptr %2767, align 4, !tbaa !6
  br label %2771

2771:                                             ; preds = %2758, %2766, %2728, %2719
  %2772 = icmp eq i32 %2720, %5
  br i1 %2772, label %5514, label %2634, !llvm.loop !1214

2773:                                             ; preds = %2472
  %2774 = getelementptr inbounds i32, ptr %3, i64 %19
  %2775 = load i32, ptr %2774, align 4, !tbaa !6
  %2776 = icmp eq i32 %2775, 0
  %2777 = icmp sgt i32 %5, 0
  br i1 %2776, label %2787, label %2778

2778:                                             ; preds = %2773
  br i1 %2777, label %2779, label %5514

2779:                                             ; preds = %2778
  %2780 = icmp sgt i32 %13, 1
  %2781 = icmp sgt i32 %13, 0
  %2782 = add i32 %13, -2
  %2783 = zext i32 %2782 to i64
  %2784 = zext i32 %13 to i64
  %2785 = add nuw i32 %5, 1
  %2786 = icmp eq i32 %13, 1
  br label %2930

2787:                                             ; preds = %2773
  br i1 %2777, label %2788, label %5514

2788:                                             ; preds = %2787
  %2789 = icmp sgt i32 %13, 1
  %2790 = icmp sgt i32 %13, 0
  %2791 = add i32 %13, -2
  %2792 = zext i32 %2791 to i64
  %2793 = zext i32 %13 to i64
  %2794 = add nuw i32 %5, 1
  %2795 = icmp eq i32 %13, 1
  br label %2796

2796:                                             ; preds = %2788, %2928
  %2797 = phi i32 [ 0, %2788 ], [ %2880, %2928 ]
  %2798 = phi double [ 0.000000e+00, %2788 ], [ %2879, %2928 ]
  %2799 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2789, label %2800, label %2869

2800:                                             ; preds = %2796, %2859
  %2801 = phi i32 [ %2868, %2859 ], [ 0, %2796 ]
  %2802 = phi i64 [ %2810, %2859 ], [ %2793, %2796 ]
  %2803 = phi i64 [ %2867, %2859 ], [ %2792, %2796 ]
  %2804 = phi i32 [ %2865, %2859 ], [ %2799, %2796 ]
  %2805 = sub i32 %2791, %2801
  %2806 = tail call i32 @llvm.smin.i32(i32 %2805, i32 0)
  %2807 = sub i32 %2805, %2806
  %2808 = zext i32 %2807 to i64
  %2809 = add nuw nsw i64 %2808, 1
  %2810 = add nsw i64 %2802, -1
  %2811 = icmp ult i32 %2807, 31
  br i1 %2811, label %2847, label %2812

2812:                                             ; preds = %2800
  %2813 = and i64 %2809, 8589934560
  %2814 = sub i64 %2803, %2813
  br label %2815

2815:                                             ; preds = %2815, %2812
  %2816 = phi i64 [ 0, %2812 ], [ %2839, %2815 ]
  %2817 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2812 ], [ %2835, %2815 ]
  %2818 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2812 ], [ %2836, %2815 ]
  %2819 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2812 ], [ %2837, %2815 ]
  %2820 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2812 ], [ %2838, %2815 ]
  %2821 = sub i64 %2803, %2816
  %2822 = getelementptr inbounds i32, ptr %9, i64 %2821
  %2823 = getelementptr inbounds i32, ptr %2822, i64 -7
  %2824 = load <8 x i32>, ptr %2823, align 4, !tbaa !6
  %2825 = shufflevector <8 x i32> %2824, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2826 = getelementptr inbounds i32, ptr %2822, i64 -15
  %2827 = load <8 x i32>, ptr %2826, align 4, !tbaa !6
  %2828 = shufflevector <8 x i32> %2827, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2829 = getelementptr inbounds i32, ptr %2822, i64 -23
  %2830 = load <8 x i32>, ptr %2829, align 4, !tbaa !6
  %2831 = shufflevector <8 x i32> %2830, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2832 = getelementptr inbounds i32, ptr %2822, i64 -31
  %2833 = load <8 x i32>, ptr %2832, align 4, !tbaa !6
  %2834 = shufflevector <8 x i32> %2833, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2835 = mul <8 x i32> %2825, %2817
  %2836 = mul <8 x i32> %2828, %2818
  %2837 = mul <8 x i32> %2831, %2819
  %2838 = mul <8 x i32> %2834, %2820
  %2839 = add nuw i64 %2816, 32
  %2840 = icmp eq i64 %2839, %2813
  br i1 %2840, label %2841, label %2815, !llvm.loop !1215

2841:                                             ; preds = %2815
  %2842 = mul <8 x i32> %2836, %2835
  %2843 = mul <8 x i32> %2837, %2842
  %2844 = mul <8 x i32> %2838, %2843
  %2845 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2844)
  %2846 = icmp eq i64 %2809, %2813
  br i1 %2846, label %2859, label %2847

2847:                                             ; preds = %2800, %2841
  %2848 = phi i64 [ %2803, %2800 ], [ %2814, %2841 ]
  %2849 = phi i32 [ 1, %2800 ], [ %2845, %2841 ]
  br label %2850

2850:                                             ; preds = %2847, %2850
  %2851 = phi i64 [ %2856, %2850 ], [ %2848, %2847 ]
  %2852 = phi i32 [ %2855, %2850 ], [ %2849, %2847 ]
  %2853 = getelementptr inbounds i32, ptr %9, i64 %2851
  %2854 = load i32, ptr %2853, align 4, !tbaa !6
  %2855 = mul nsw i32 %2854, %2852
  %2856 = add nsw i64 %2851, -1
  %2857 = trunc i64 %2851 to i32
  %2858 = icmp sgt i32 %2857, 0
  br i1 %2858, label %2850, label %2859, !llvm.loop !1216

2859:                                             ; preds = %2850, %2841
  %2860 = phi i32 [ %2845, %2841 ], [ %2855, %2850 ]
  %2861 = and i64 %2810, 4294967295
  %2862 = getelementptr inbounds i32, ptr %6, i64 %2861
  %2863 = load i32, ptr %2862, align 4, !tbaa !6
  %2864 = mul nsw i32 %2863, %2860
  %2865 = add nsw i32 %2864, %2804
  %2866 = icmp sgt i64 %2802, 2
  %2867 = add nsw i64 %2803, -1
  %2868 = add i32 %2801, 1
  br i1 %2866, label %2800, label %2869, !llvm.loop !1217

2869:                                             ; preds = %2859, %2796
  %2870 = phi i32 [ %2799, %2796 ], [ %2865, %2859 ]
  %2871 = sext i32 %2870 to i64
  %2872 = getelementptr inbounds float, ptr %2466, i64 %2871
  %2873 = load float, ptr %2872, align 4, !tbaa !163
  %2874 = fptosi float %2873 to i32
  %2875 = load i32, ptr %2468, align 4, !tbaa !6
  %2876 = icmp slt i32 %2875, %2874
  br i1 %2876, label %2877, label %2878

2877:                                             ; preds = %2869
  store i32 %2874, ptr %2468, align 4, !tbaa !6
  br label %2878

2878:                                             ; preds = %2877, %2869
  %2879 = fadd fast double %2798, 1.000000e+00
  %2880 = add nuw nsw i32 %2797, 1
  br i1 %2790, label %2881, label %2928

2881:                                             ; preds = %2878
  %2882 = load i32, ptr %4, align 4, !tbaa !6
  %2883 = load i32, ptr %12, align 4, !tbaa !6
  %2884 = add nsw i32 %2883, -1
  %2885 = icmp slt i32 %2882, %2884
  br i1 %2885, label %2905, label %2886

2886:                                             ; preds = %2881
  %2887 = icmp eq i32 %2882, %2884
  br i1 %2887, label %2888, label %2921

2888:                                             ; preds = %2886
  store i32 0, ptr %4, align 4, !tbaa !6
  %2889 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2889, ptr %6, align 4, !tbaa !6
  br i1 %2795, label %2928, label %2890

2890:                                             ; preds = %2888, %2915
  %2891 = phi i64 [ %2919, %2915 ], [ 1, %2888 ]
  %2892 = getelementptr inbounds i32, ptr %4, i64 %2891
  %2893 = load i32, ptr %2892, align 4, !tbaa !6
  %2894 = getelementptr inbounds i32, ptr %12, i64 %2891
  %2895 = load i32, ptr %2894, align 4, !tbaa !6
  %2896 = add nsw i32 %2895, -1
  %2897 = icmp slt i32 %2893, %2896
  br i1 %2897, label %2898, label %2913

2898:                                             ; preds = %2890
  br i1 %2885, label %2905, label %2899

2899:                                             ; preds = %2898
  %2900 = getelementptr inbounds i32, ptr %7, i64 %2891
  %2901 = load i32, ptr %2900, align 4, !tbaa !6
  %2902 = getelementptr inbounds i32, ptr %6, i64 %2891
  %2903 = load i32, ptr %2902, align 4, !tbaa !6
  %2904 = add nsw i32 %2903, %2901
  store i32 %2904, ptr %2902, align 4, !tbaa !6
  br label %2923

2905:                                             ; preds = %2881, %2898
  %2906 = phi i32 [ %2893, %2898 ], [ %2882, %2881 ]
  %2907 = phi ptr [ %2892, %2898 ], [ %4, %2881 ]
  %2908 = phi i64 [ %2891, %2898 ], [ 0, %2881 ]
  %2909 = add nsw i32 %2906, 1
  store i32 %2909, ptr %2907, align 4, !tbaa !6
  %2910 = getelementptr inbounds i32, ptr %7, i64 %2908
  %2911 = load i32, ptr %2910, align 4, !tbaa !6
  %2912 = getelementptr inbounds i32, ptr %6, i64 %2908
  br label %2923

2913:                                             ; preds = %2890
  %2914 = icmp eq i32 %2893, %2896
  br i1 %2914, label %2915, label %2921

2915:                                             ; preds = %2913
  store i32 0, ptr %2892, align 4, !tbaa !6
  %2916 = getelementptr inbounds i32, ptr %8, i64 %2891
  %2917 = load i32, ptr %2916, align 4, !tbaa !6
  %2918 = getelementptr inbounds i32, ptr %6, i64 %2891
  store i32 %2917, ptr %2918, align 4, !tbaa !6
  %2919 = add nuw nsw i64 %2891, 1
  %2920 = icmp eq i64 %2919, %2793
  br i1 %2920, label %2928, label %2890, !llvm.loop !1218

2921:                                             ; preds = %2886, %2913
  %2922 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1753, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5519

2923:                                             ; preds = %2899, %2905
  %2924 = phi ptr [ %2912, %2905 ], [ %2892, %2899 ]
  %2925 = phi i32 [ %2911, %2905 ], [ 1, %2899 ]
  %2926 = load i32, ptr %2924, align 4, !tbaa !6
  %2927 = add nsw i32 %2926, %2925
  store i32 %2927, ptr %2924, align 4, !tbaa !6
  br label %2928

2928:                                             ; preds = %2915, %2923, %2888, %2878
  %2929 = icmp eq i32 %2880, %5
  br i1 %2929, label %5514, label %2796, !llvm.loop !1219

2930:                                             ; preds = %2779, %3067
  %2931 = phi i32 [ 0, %2779 ], [ %3016, %3067 ]
  %2932 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2780, label %2933, label %3002

2933:                                             ; preds = %2930, %2992
  %2934 = phi i32 [ %3001, %2992 ], [ 0, %2930 ]
  %2935 = phi i64 [ %2943, %2992 ], [ %2784, %2930 ]
  %2936 = phi i64 [ %3000, %2992 ], [ %2783, %2930 ]
  %2937 = phi i32 [ %2998, %2992 ], [ %2932, %2930 ]
  %2938 = sub i32 %2782, %2934
  %2939 = tail call i32 @llvm.smin.i32(i32 %2938, i32 0)
  %2940 = sub i32 %2938, %2939
  %2941 = zext i32 %2940 to i64
  %2942 = add nuw nsw i64 %2941, 1
  %2943 = add nsw i64 %2935, -1
  %2944 = icmp ult i32 %2940, 31
  br i1 %2944, label %2980, label %2945

2945:                                             ; preds = %2933
  %2946 = and i64 %2942, 8589934560
  %2947 = sub i64 %2936, %2946
  br label %2948

2948:                                             ; preds = %2948, %2945
  %2949 = phi i64 [ 0, %2945 ], [ %2972, %2948 ]
  %2950 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2945 ], [ %2968, %2948 ]
  %2951 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2945 ], [ %2969, %2948 ]
  %2952 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2945 ], [ %2970, %2948 ]
  %2953 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2945 ], [ %2971, %2948 ]
  %2954 = sub i64 %2936, %2949
  %2955 = getelementptr inbounds i32, ptr %11, i64 %2954
  %2956 = getelementptr inbounds i32, ptr %2955, i64 -7
  %2957 = load <8 x i32>, ptr %2956, align 4, !tbaa !6
  %2958 = shufflevector <8 x i32> %2957, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2959 = getelementptr inbounds i32, ptr %2955, i64 -15
  %2960 = load <8 x i32>, ptr %2959, align 4, !tbaa !6
  %2961 = shufflevector <8 x i32> %2960, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2962 = getelementptr inbounds i32, ptr %2955, i64 -23
  %2963 = load <8 x i32>, ptr %2962, align 4, !tbaa !6
  %2964 = shufflevector <8 x i32> %2963, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2965 = getelementptr inbounds i32, ptr %2955, i64 -31
  %2966 = load <8 x i32>, ptr %2965, align 4, !tbaa !6
  %2967 = shufflevector <8 x i32> %2966, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2968 = mul <8 x i32> %2958, %2950
  %2969 = mul <8 x i32> %2961, %2951
  %2970 = mul <8 x i32> %2964, %2952
  %2971 = mul <8 x i32> %2967, %2953
  %2972 = add nuw i64 %2949, 32
  %2973 = icmp eq i64 %2972, %2946
  br i1 %2973, label %2974, label %2948, !llvm.loop !1220

2974:                                             ; preds = %2948
  %2975 = mul <8 x i32> %2969, %2968
  %2976 = mul <8 x i32> %2970, %2975
  %2977 = mul <8 x i32> %2971, %2976
  %2978 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2977)
  %2979 = icmp eq i64 %2942, %2946
  br i1 %2979, label %2992, label %2980

2980:                                             ; preds = %2933, %2974
  %2981 = phi i64 [ %2936, %2933 ], [ %2947, %2974 ]
  %2982 = phi i32 [ 1, %2933 ], [ %2978, %2974 ]
  br label %2983

2983:                                             ; preds = %2980, %2983
  %2984 = phi i64 [ %2989, %2983 ], [ %2981, %2980 ]
  %2985 = phi i32 [ %2988, %2983 ], [ %2982, %2980 ]
  %2986 = getelementptr inbounds i32, ptr %11, i64 %2984
  %2987 = load i32, ptr %2986, align 4, !tbaa !6
  %2988 = mul nsw i32 %2987, %2985
  %2989 = add nsw i64 %2984, -1
  %2990 = trunc i64 %2984 to i32
  %2991 = icmp sgt i32 %2990, 0
  br i1 %2991, label %2983, label %2992, !llvm.loop !1221

2992:                                             ; preds = %2983, %2974
  %2993 = phi i32 [ %2978, %2974 ], [ %2988, %2983 ]
  %2994 = and i64 %2943, 4294967295
  %2995 = getelementptr inbounds i32, ptr %6, i64 %2994
  %2996 = load i32, ptr %2995, align 4, !tbaa !6
  %2997 = mul nsw i32 %2996, %2993
  %2998 = add nsw i32 %2997, %2937
  %2999 = icmp sgt i64 %2935, 2
  %3000 = add nsw i64 %2936, -1
  %3001 = add i32 %2934, 1
  br i1 %2999, label %2933, label %3002, !llvm.loop !1222

3002:                                             ; preds = %2992, %2930
  %3003 = phi i32 [ %2932, %2930 ], [ %2998, %2992 ]
  %3004 = icmp slt i32 %3003, %5
  br i1 %3004, label %3007, label %3005

3005:                                             ; preds = %3002
  %3006 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1753, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5519

3007:                                             ; preds = %3002
  %3008 = sext i32 %3003 to i64
  %3009 = getelementptr inbounds float, ptr %2466, i64 %3008
  %3010 = load float, ptr %3009, align 4, !tbaa !163
  %3011 = fptosi float %3010 to i32
  %3012 = load i32, ptr %2468, align 4, !tbaa !6
  %3013 = icmp slt i32 %3012, %3011
  br i1 %3013, label %3014, label %3015

3014:                                             ; preds = %3007
  store i32 %3011, ptr %2468, align 4, !tbaa !6
  br label %3015

3015:                                             ; preds = %3014, %3007
  %3016 = add nuw nsw i32 %2931, 1
  br i1 %2781, label %3017, label %3067

3017:                                             ; preds = %3015
  %3018 = load i32, ptr %4, align 4, !tbaa !6
  %3019 = load i32, ptr %12, align 4, !tbaa !6
  %3020 = add nsw i32 %3019, -1
  %3021 = icmp slt i32 %3018, %3020
  br i1 %3021, label %3044, label %3022

3022:                                             ; preds = %3017
  %3023 = icmp eq i32 %3018, %3020
  br i1 %3023, label %3024, label %3060

3024:                                             ; preds = %3022
  store i32 0, ptr %4, align 4, !tbaa !6
  %3025 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3025, ptr %6, align 4, !tbaa !6
  br i1 %2786, label %3067, label %3026

3026:                                             ; preds = %3024, %3054
  %3027 = phi i64 [ %3058, %3054 ], [ 1, %3024 ]
  %3028 = getelementptr inbounds i32, ptr %4, i64 %3027
  %3029 = load i32, ptr %3028, align 4, !tbaa !6
  %3030 = getelementptr inbounds i32, ptr %12, i64 %3027
  %3031 = load i32, ptr %3030, align 4, !tbaa !6
  %3032 = add nsw i32 %3031, -1
  %3033 = icmp slt i32 %3029, %3032
  br i1 %3033, label %3034, label %3052

3034:                                             ; preds = %3026
  br i1 %3021, label %3044, label %3035

3035:                                             ; preds = %3034
  %3036 = shl i64 %3027, 32
  %3037 = add i64 %3036, -4294967296
  %3038 = ashr exact i64 %3037, 32
  %3039 = getelementptr inbounds i32, ptr %7, i64 %3038
  %3040 = load i32, ptr %3039, align 4, !tbaa !6
  %3041 = getelementptr inbounds i32, ptr %6, i64 %3027
  %3042 = load i32, ptr %3041, align 4, !tbaa !6
  %3043 = add nsw i32 %3042, %3040
  store i32 %3043, ptr %3041, align 4, !tbaa !6
  br label %3062

3044:                                             ; preds = %3017, %3034
  %3045 = phi i32 [ %3029, %3034 ], [ %3018, %3017 ]
  %3046 = phi ptr [ %3028, %3034 ], [ %4, %3017 ]
  %3047 = phi i64 [ %3027, %3034 ], [ 0, %3017 ]
  %3048 = add nsw i32 %3045, 1
  store i32 %3048, ptr %3046, align 4, !tbaa !6
  %3049 = getelementptr inbounds i32, ptr %7, i64 %3047
  %3050 = load i32, ptr %3049, align 4, !tbaa !6
  %3051 = getelementptr inbounds i32, ptr %6, i64 %3047
  br label %3062

3052:                                             ; preds = %3026
  %3053 = icmp eq i32 %3029, %3032
  br i1 %3053, label %3054, label %3060

3054:                                             ; preds = %3052
  store i32 0, ptr %3028, align 4, !tbaa !6
  %3055 = getelementptr inbounds i32, ptr %8, i64 %3027
  %3056 = load i32, ptr %3055, align 4, !tbaa !6
  %3057 = getelementptr inbounds i32, ptr %6, i64 %3027
  store i32 %3056, ptr %3057, align 4, !tbaa !6
  %3058 = add nuw nsw i64 %3027, 1
  %3059 = icmp eq i64 %3058, %2784
  br i1 %3059, label %3067, label %3026, !llvm.loop !1223

3060:                                             ; preds = %3022, %3052
  %3061 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1753, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5519

3062:                                             ; preds = %3035, %3044
  %3063 = phi ptr [ %3051, %3044 ], [ %3028, %3035 ]
  %3064 = phi i32 [ %3050, %3044 ], [ 1, %3035 ]
  %3065 = load i32, ptr %3063, align 4, !tbaa !6
  %3066 = add nsw i32 %3065, %3064
  store i32 %3066, ptr %3063, align 4, !tbaa !6
  br label %3067

3067:                                             ; preds = %3054, %3062, %3024, %3015
  %3068 = icmp eq i32 %3016, %5
  br i1 %3068, label %5514, label %2930, !llvm.loop !1224

3069:                                             ; preds = %2472
  %3070 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1753, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5514

3071:                                             ; preds = %18
  %3072 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3073 = load ptr, ptr %3072, align 8, !tbaa !10
  %3074 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3075 = load ptr, ptr %3074, align 8, !tbaa !10
  %3076 = load float, ptr %3073, align 4, !tbaa !163
  %3077 = fptosi float %3076 to i64
  store i64 %3077, ptr %3075, align 8, !tbaa !121
  %3078 = icmp eq i32 %13, 0
  br i1 %3078, label %5514, label %3079

3079:                                             ; preds = %3071
  switch i32 %1, label %3680 [
    i32 1, label %3080
    i32 0, label %3382
  ]

3080:                                             ; preds = %3079
  %3081 = getelementptr inbounds i32, ptr %3, i64 %19
  %3082 = load i32, ptr %3081, align 4, !tbaa !6
  %3083 = icmp eq i32 %3082, 0
  %3084 = icmp sgt i32 %5, 0
  br i1 %3083, label %3094, label %3085

3085:                                             ; preds = %3080
  br i1 %3084, label %3086, label %5514

3086:                                             ; preds = %3085
  %3087 = icmp sgt i32 %13, 1
  %3088 = icmp sgt i32 %13, 0
  %3089 = add i32 %13, -2
  %3090 = zext i32 %3089 to i64
  %3091 = zext i32 %13 to i64
  %3092 = add nuw i32 %5, 1
  %3093 = icmp eq i32 %13, 1
  br label %3242

3094:                                             ; preds = %3080
  br i1 %3084, label %3095, label %5514

3095:                                             ; preds = %3094
  %3096 = icmp sgt i32 %13, 1
  %3097 = icmp sgt i32 %13, 0
  %3098 = add i32 %13, -2
  %3099 = zext i32 %3098 to i64
  %3100 = zext i32 %13 to i64
  %3101 = add nuw i32 %5, 1
  %3102 = icmp eq i32 %13, 1
  br label %3103

3103:                                             ; preds = %3095, %3240
  %3104 = phi i64 [ %3077, %3095 ], [ %3190, %3240 ]
  %3105 = phi i32 [ 0, %3095 ], [ %3192, %3240 ]
  %3106 = phi double [ 0.000000e+00, %3095 ], [ %3191, %3240 ]
  %3107 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3096, label %3108, label %3177

3108:                                             ; preds = %3103, %3167
  %3109 = phi i32 [ %3176, %3167 ], [ 0, %3103 ]
  %3110 = phi i64 [ %3118, %3167 ], [ %3100, %3103 ]
  %3111 = phi i64 [ %3175, %3167 ], [ %3099, %3103 ]
  %3112 = phi i32 [ %3173, %3167 ], [ %3107, %3103 ]
  %3113 = sub i32 %3098, %3109
  %3114 = tail call i32 @llvm.smin.i32(i32 %3113, i32 0)
  %3115 = sub i32 %3113, %3114
  %3116 = zext i32 %3115 to i64
  %3117 = add nuw nsw i64 %3116, 1
  %3118 = add nsw i64 %3110, -1
  %3119 = icmp ult i32 %3115, 31
  br i1 %3119, label %3155, label %3120

3120:                                             ; preds = %3108
  %3121 = and i64 %3117, 8589934560
  %3122 = sub i64 %3111, %3121
  br label %3123

3123:                                             ; preds = %3123, %3120
  %3124 = phi i64 [ 0, %3120 ], [ %3147, %3123 ]
  %3125 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3120 ], [ %3143, %3123 ]
  %3126 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3120 ], [ %3144, %3123 ]
  %3127 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3120 ], [ %3145, %3123 ]
  %3128 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3120 ], [ %3146, %3123 ]
  %3129 = sub i64 %3111, %3124
  %3130 = getelementptr inbounds i32, ptr %9, i64 %3129
  %3131 = getelementptr inbounds i32, ptr %3130, i64 -7
  %3132 = load <8 x i32>, ptr %3131, align 4, !tbaa !6
  %3133 = shufflevector <8 x i32> %3132, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3134 = getelementptr inbounds i32, ptr %3130, i64 -15
  %3135 = load <8 x i32>, ptr %3134, align 4, !tbaa !6
  %3136 = shufflevector <8 x i32> %3135, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3137 = getelementptr inbounds i32, ptr %3130, i64 -23
  %3138 = load <8 x i32>, ptr %3137, align 4, !tbaa !6
  %3139 = shufflevector <8 x i32> %3138, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3140 = getelementptr inbounds i32, ptr %3130, i64 -31
  %3141 = load <8 x i32>, ptr %3140, align 4, !tbaa !6
  %3142 = shufflevector <8 x i32> %3141, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3143 = mul <8 x i32> %3133, %3125
  %3144 = mul <8 x i32> %3136, %3126
  %3145 = mul <8 x i32> %3139, %3127
  %3146 = mul <8 x i32> %3142, %3128
  %3147 = add nuw i64 %3124, 32
  %3148 = icmp eq i64 %3147, %3121
  br i1 %3148, label %3149, label %3123, !llvm.loop !1225

3149:                                             ; preds = %3123
  %3150 = mul <8 x i32> %3144, %3143
  %3151 = mul <8 x i32> %3145, %3150
  %3152 = mul <8 x i32> %3146, %3151
  %3153 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3152)
  %3154 = icmp eq i64 %3117, %3121
  br i1 %3154, label %3167, label %3155

3155:                                             ; preds = %3108, %3149
  %3156 = phi i64 [ %3111, %3108 ], [ %3122, %3149 ]
  %3157 = phi i32 [ 1, %3108 ], [ %3153, %3149 ]
  br label %3158

3158:                                             ; preds = %3155, %3158
  %3159 = phi i64 [ %3164, %3158 ], [ %3156, %3155 ]
  %3160 = phi i32 [ %3163, %3158 ], [ %3157, %3155 ]
  %3161 = getelementptr inbounds i32, ptr %9, i64 %3159
  %3162 = load i32, ptr %3161, align 4, !tbaa !6
  %3163 = mul nsw i32 %3162, %3160
  %3164 = add nsw i64 %3159, -1
  %3165 = trunc i64 %3159 to i32
  %3166 = icmp sgt i32 %3165, 0
  br i1 %3166, label %3158, label %3167, !llvm.loop !1226

3167:                                             ; preds = %3158, %3149
  %3168 = phi i32 [ %3153, %3149 ], [ %3163, %3158 ]
  %3169 = and i64 %3118, 4294967295
  %3170 = getelementptr inbounds i32, ptr %6, i64 %3169
  %3171 = load i32, ptr %3170, align 4, !tbaa !6
  %3172 = mul nsw i32 %3171, %3168
  %3173 = add nsw i32 %3172, %3112
  %3174 = icmp sgt i64 %3110, 2
  %3175 = add nsw i64 %3111, -1
  %3176 = add i32 %3109, 1
  br i1 %3174, label %3108, label %3177, !llvm.loop !1227

3177:                                             ; preds = %3167, %3103
  %3178 = phi i32 [ %3107, %3103 ], [ %3173, %3167 ]
  %3179 = sext i32 %3178 to i64
  %3180 = getelementptr inbounds double, ptr %2, i64 %3179
  %3181 = load double, ptr %3180, align 8, !tbaa !19
  %3182 = getelementptr inbounds float, ptr %3073, i64 %3179
  %3183 = load float, ptr %3182, align 4, !tbaa !163
  %3184 = fptosi float %3183 to i64
  %3185 = fcmp fast one double %3181, 0.000000e+00
  %3186 = icmp slt i64 %3104, %3184
  %3187 = select i1 %3185, i1 %3186, i1 false
  br i1 %3187, label %3188, label %3189

3188:                                             ; preds = %3177
  store i64 %3184, ptr %3075, align 8, !tbaa !121
  br label %3189

3189:                                             ; preds = %3188, %3177
  %3190 = phi i64 [ %3184, %3188 ], [ %3104, %3177 ]
  %3191 = fadd fast double %3181, %3106
  %3192 = add nuw nsw i32 %3105, 1
  br i1 %3097, label %3193, label %3240

3193:                                             ; preds = %3189
  %3194 = load i32, ptr %4, align 4, !tbaa !6
  %3195 = load i32, ptr %12, align 4, !tbaa !6
  %3196 = add nsw i32 %3195, -1
  %3197 = icmp slt i32 %3194, %3196
  br i1 %3197, label %3217, label %3198

3198:                                             ; preds = %3193
  %3199 = icmp eq i32 %3194, %3196
  br i1 %3199, label %3200, label %3233

3200:                                             ; preds = %3198
  store i32 0, ptr %4, align 4, !tbaa !6
  %3201 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3201, ptr %6, align 4, !tbaa !6
  br i1 %3102, label %3240, label %3202

3202:                                             ; preds = %3200, %3227
  %3203 = phi i64 [ %3231, %3227 ], [ 1, %3200 ]
  %3204 = getelementptr inbounds i32, ptr %4, i64 %3203
  %3205 = load i32, ptr %3204, align 4, !tbaa !6
  %3206 = getelementptr inbounds i32, ptr %12, i64 %3203
  %3207 = load i32, ptr %3206, align 4, !tbaa !6
  %3208 = add nsw i32 %3207, -1
  %3209 = icmp slt i32 %3205, %3208
  br i1 %3209, label %3210, label %3225

3210:                                             ; preds = %3202
  br i1 %3197, label %3217, label %3211

3211:                                             ; preds = %3210
  %3212 = getelementptr inbounds i32, ptr %7, i64 %3203
  %3213 = load i32, ptr %3212, align 4, !tbaa !6
  %3214 = getelementptr inbounds i32, ptr %6, i64 %3203
  %3215 = load i32, ptr %3214, align 4, !tbaa !6
  %3216 = add nsw i32 %3215, %3213
  store i32 %3216, ptr %3214, align 4, !tbaa !6
  br label %3235

3217:                                             ; preds = %3193, %3210
  %3218 = phi i32 [ %3205, %3210 ], [ %3194, %3193 ]
  %3219 = phi ptr [ %3204, %3210 ], [ %4, %3193 ]
  %3220 = phi i64 [ %3203, %3210 ], [ 0, %3193 ]
  %3221 = add nsw i32 %3218, 1
  store i32 %3221, ptr %3219, align 4, !tbaa !6
  %3222 = getelementptr inbounds i32, ptr %7, i64 %3220
  %3223 = load i32, ptr %3222, align 4, !tbaa !6
  %3224 = getelementptr inbounds i32, ptr %6, i64 %3220
  br label %3235

3225:                                             ; preds = %3202
  %3226 = icmp eq i32 %3205, %3208
  br i1 %3226, label %3227, label %3233

3227:                                             ; preds = %3225
  store i32 0, ptr %3204, align 4, !tbaa !6
  %3228 = getelementptr inbounds i32, ptr %8, i64 %3203
  %3229 = load i32, ptr %3228, align 4, !tbaa !6
  %3230 = getelementptr inbounds i32, ptr %6, i64 %3203
  store i32 %3229, ptr %3230, align 4, !tbaa !6
  %3231 = add nuw nsw i64 %3203, 1
  %3232 = icmp eq i64 %3231, %3100
  br i1 %3232, label %3240, label %3202, !llvm.loop !1228

3233:                                             ; preds = %3198, %3225
  %3234 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1758, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5519

3235:                                             ; preds = %3211, %3217
  %3236 = phi ptr [ %3224, %3217 ], [ %3204, %3211 ]
  %3237 = phi i32 [ %3223, %3217 ], [ 1, %3211 ]
  %3238 = load i32, ptr %3236, align 4, !tbaa !6
  %3239 = add nsw i32 %3238, %3237
  store i32 %3239, ptr %3236, align 4, !tbaa !6
  br label %3240

3240:                                             ; preds = %3227, %3235, %3200, %3189
  %3241 = icmp eq i32 %3192, %5
  br i1 %3241, label %5514, label %3103, !llvm.loop !1229

3242:                                             ; preds = %3086, %3380
  %3243 = phi i64 [ %3077, %3086 ], [ %3328, %3380 ]
  %3244 = phi i32 [ 0, %3086 ], [ %3329, %3380 ]
  %3245 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3087, label %3246, label %3315

3246:                                             ; preds = %3242, %3305
  %3247 = phi i32 [ %3314, %3305 ], [ 0, %3242 ]
  %3248 = phi i64 [ %3256, %3305 ], [ %3091, %3242 ]
  %3249 = phi i64 [ %3313, %3305 ], [ %3090, %3242 ]
  %3250 = phi i32 [ %3311, %3305 ], [ %3245, %3242 ]
  %3251 = sub i32 %3089, %3247
  %3252 = tail call i32 @llvm.smin.i32(i32 %3251, i32 0)
  %3253 = sub i32 %3251, %3252
  %3254 = zext i32 %3253 to i64
  %3255 = add nuw nsw i64 %3254, 1
  %3256 = add nsw i64 %3248, -1
  %3257 = icmp ult i32 %3253, 31
  br i1 %3257, label %3293, label %3258

3258:                                             ; preds = %3246
  %3259 = and i64 %3255, 8589934560
  %3260 = sub i64 %3249, %3259
  br label %3261

3261:                                             ; preds = %3261, %3258
  %3262 = phi i64 [ 0, %3258 ], [ %3285, %3261 ]
  %3263 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3258 ], [ %3281, %3261 ]
  %3264 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3258 ], [ %3282, %3261 ]
  %3265 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3258 ], [ %3283, %3261 ]
  %3266 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3258 ], [ %3284, %3261 ]
  %3267 = sub i64 %3249, %3262
  %3268 = getelementptr inbounds i32, ptr %11, i64 %3267
  %3269 = getelementptr inbounds i32, ptr %3268, i64 -7
  %3270 = load <8 x i32>, ptr %3269, align 4, !tbaa !6
  %3271 = shufflevector <8 x i32> %3270, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3272 = getelementptr inbounds i32, ptr %3268, i64 -15
  %3273 = load <8 x i32>, ptr %3272, align 4, !tbaa !6
  %3274 = shufflevector <8 x i32> %3273, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3275 = getelementptr inbounds i32, ptr %3268, i64 -23
  %3276 = load <8 x i32>, ptr %3275, align 4, !tbaa !6
  %3277 = shufflevector <8 x i32> %3276, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3278 = getelementptr inbounds i32, ptr %3268, i64 -31
  %3279 = load <8 x i32>, ptr %3278, align 4, !tbaa !6
  %3280 = shufflevector <8 x i32> %3279, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3281 = mul <8 x i32> %3271, %3263
  %3282 = mul <8 x i32> %3274, %3264
  %3283 = mul <8 x i32> %3277, %3265
  %3284 = mul <8 x i32> %3280, %3266
  %3285 = add nuw i64 %3262, 32
  %3286 = icmp eq i64 %3285, %3259
  br i1 %3286, label %3287, label %3261, !llvm.loop !1230

3287:                                             ; preds = %3261
  %3288 = mul <8 x i32> %3282, %3281
  %3289 = mul <8 x i32> %3283, %3288
  %3290 = mul <8 x i32> %3284, %3289
  %3291 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3290)
  %3292 = icmp eq i64 %3255, %3259
  br i1 %3292, label %3305, label %3293

3293:                                             ; preds = %3246, %3287
  %3294 = phi i64 [ %3249, %3246 ], [ %3260, %3287 ]
  %3295 = phi i32 [ 1, %3246 ], [ %3291, %3287 ]
  br label %3296

3296:                                             ; preds = %3293, %3296
  %3297 = phi i64 [ %3302, %3296 ], [ %3294, %3293 ]
  %3298 = phi i32 [ %3301, %3296 ], [ %3295, %3293 ]
  %3299 = getelementptr inbounds i32, ptr %11, i64 %3297
  %3300 = load i32, ptr %3299, align 4, !tbaa !6
  %3301 = mul nsw i32 %3300, %3298
  %3302 = add nsw i64 %3297, -1
  %3303 = trunc i64 %3297 to i32
  %3304 = icmp sgt i32 %3303, 0
  br i1 %3304, label %3296, label %3305, !llvm.loop !1231

3305:                                             ; preds = %3296, %3287
  %3306 = phi i32 [ %3291, %3287 ], [ %3301, %3296 ]
  %3307 = and i64 %3256, 4294967295
  %3308 = getelementptr inbounds i32, ptr %6, i64 %3307
  %3309 = load i32, ptr %3308, align 4, !tbaa !6
  %3310 = mul nsw i32 %3309, %3306
  %3311 = add nsw i32 %3310, %3250
  %3312 = icmp sgt i64 %3248, 2
  %3313 = add nsw i64 %3249, -1
  %3314 = add i32 %3247, 1
  br i1 %3312, label %3246, label %3315, !llvm.loop !1232

3315:                                             ; preds = %3305, %3242
  %3316 = phi i32 [ %3245, %3242 ], [ %3311, %3305 ]
  %3317 = icmp slt i32 %3316, %5
  br i1 %3317, label %3320, label %3318

3318:                                             ; preds = %3315
  %3319 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1758, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5519

3320:                                             ; preds = %3315
  %3321 = sext i32 %3316 to i64
  %3322 = getelementptr inbounds float, ptr %3073, i64 %3321
  %3323 = load float, ptr %3322, align 4, !tbaa !163
  %3324 = fptosi float %3323 to i64
  %3325 = icmp slt i64 %3243, %3324
  br i1 %3325, label %3326, label %3327

3326:                                             ; preds = %3320
  store i64 %3324, ptr %3075, align 8, !tbaa !121
  br label %3327

3327:                                             ; preds = %3320, %3326
  %3328 = phi i64 [ %3243, %3320 ], [ %3324, %3326 ]
  %3329 = add nuw nsw i32 %3244, 1
  br i1 %3088, label %3330, label %3380

3330:                                             ; preds = %3327
  %3331 = load i32, ptr %4, align 4, !tbaa !6
  %3332 = load i32, ptr %12, align 4, !tbaa !6
  %3333 = add nsw i32 %3332, -1
  %3334 = icmp slt i32 %3331, %3333
  br i1 %3334, label %3357, label %3335

3335:                                             ; preds = %3330
  %3336 = icmp eq i32 %3331, %3333
  br i1 %3336, label %3337, label %3373

3337:                                             ; preds = %3335
  store i32 0, ptr %4, align 4, !tbaa !6
  %3338 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3338, ptr %6, align 4, !tbaa !6
  br i1 %3093, label %3380, label %3339

3339:                                             ; preds = %3337, %3367
  %3340 = phi i64 [ %3371, %3367 ], [ 1, %3337 ]
  %3341 = getelementptr inbounds i32, ptr %4, i64 %3340
  %3342 = load i32, ptr %3341, align 4, !tbaa !6
  %3343 = getelementptr inbounds i32, ptr %12, i64 %3340
  %3344 = load i32, ptr %3343, align 4, !tbaa !6
  %3345 = add nsw i32 %3344, -1
  %3346 = icmp slt i32 %3342, %3345
  br i1 %3346, label %3347, label %3365

3347:                                             ; preds = %3339
  br i1 %3334, label %3357, label %3348

3348:                                             ; preds = %3347
  %3349 = shl i64 %3340, 32
  %3350 = add i64 %3349, -4294967296
  %3351 = ashr exact i64 %3350, 32
  %3352 = getelementptr inbounds i32, ptr %7, i64 %3351
  %3353 = load i32, ptr %3352, align 4, !tbaa !6
  %3354 = getelementptr inbounds i32, ptr %6, i64 %3340
  %3355 = load i32, ptr %3354, align 4, !tbaa !6
  %3356 = add nsw i32 %3355, %3353
  store i32 %3356, ptr %3354, align 4, !tbaa !6
  br label %3375

3357:                                             ; preds = %3330, %3347
  %3358 = phi i32 [ %3342, %3347 ], [ %3331, %3330 ]
  %3359 = phi ptr [ %3341, %3347 ], [ %4, %3330 ]
  %3360 = phi i64 [ %3340, %3347 ], [ 0, %3330 ]
  %3361 = add nsw i32 %3358, 1
  store i32 %3361, ptr %3359, align 4, !tbaa !6
  %3362 = getelementptr inbounds i32, ptr %7, i64 %3360
  %3363 = load i32, ptr %3362, align 4, !tbaa !6
  %3364 = getelementptr inbounds i32, ptr %6, i64 %3360
  br label %3375

3365:                                             ; preds = %3339
  %3366 = icmp eq i32 %3342, %3345
  br i1 %3366, label %3367, label %3373

3367:                                             ; preds = %3365
  store i32 0, ptr %3341, align 4, !tbaa !6
  %3368 = getelementptr inbounds i32, ptr %8, i64 %3340
  %3369 = load i32, ptr %3368, align 4, !tbaa !6
  %3370 = getelementptr inbounds i32, ptr %6, i64 %3340
  store i32 %3369, ptr %3370, align 4, !tbaa !6
  %3371 = add nuw nsw i64 %3340, 1
  %3372 = icmp eq i64 %3371, %3091
  br i1 %3372, label %3380, label %3339, !llvm.loop !1233

3373:                                             ; preds = %3335, %3365
  %3374 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1758, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5519

3375:                                             ; preds = %3348, %3357
  %3376 = phi ptr [ %3364, %3357 ], [ %3341, %3348 ]
  %3377 = phi i32 [ %3363, %3357 ], [ 1, %3348 ]
  %3378 = load i32, ptr %3376, align 4, !tbaa !6
  %3379 = add nsw i32 %3378, %3377
  store i32 %3379, ptr %3376, align 4, !tbaa !6
  br label %3380

3380:                                             ; preds = %3367, %3375, %3337, %3327
  %3381 = icmp eq i32 %3329, %5
  br i1 %3381, label %5514, label %3242, !llvm.loop !1234

3382:                                             ; preds = %3079
  %3383 = getelementptr inbounds i32, ptr %3, i64 %19
  %3384 = load i32, ptr %3383, align 4, !tbaa !6
  %3385 = icmp eq i32 %3384, 0
  %3386 = icmp sgt i32 %5, 0
  br i1 %3385, label %3396, label %3387

3387:                                             ; preds = %3382
  br i1 %3386, label %3388, label %5514

3388:                                             ; preds = %3387
  %3389 = icmp sgt i32 %13, 1
  %3390 = icmp sgt i32 %13, 0
  %3391 = add i32 %13, -2
  %3392 = zext i32 %3391 to i64
  %3393 = zext i32 %13 to i64
  %3394 = add nuw i32 %5, 1
  %3395 = icmp eq i32 %13, 1
  br label %3540

3396:                                             ; preds = %3382
  br i1 %3386, label %3397, label %5514

3397:                                             ; preds = %3396
  %3398 = icmp sgt i32 %13, 1
  %3399 = icmp sgt i32 %13, 0
  %3400 = add i32 %13, -2
  %3401 = zext i32 %3400 to i64
  %3402 = zext i32 %13 to i64
  %3403 = add nuw i32 %5, 1
  %3404 = icmp eq i32 %13, 1
  br label %3405

3405:                                             ; preds = %3397, %3538
  %3406 = phi i64 [ %3077, %3397 ], [ %3488, %3538 ]
  %3407 = phi i32 [ 0, %3397 ], [ %3490, %3538 ]
  %3408 = phi double [ 0.000000e+00, %3397 ], [ %3489, %3538 ]
  %3409 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3398, label %3410, label %3479

3410:                                             ; preds = %3405, %3469
  %3411 = phi i32 [ %3478, %3469 ], [ 0, %3405 ]
  %3412 = phi i64 [ %3420, %3469 ], [ %3402, %3405 ]
  %3413 = phi i64 [ %3477, %3469 ], [ %3401, %3405 ]
  %3414 = phi i32 [ %3475, %3469 ], [ %3409, %3405 ]
  %3415 = sub i32 %3400, %3411
  %3416 = tail call i32 @llvm.smin.i32(i32 %3415, i32 0)
  %3417 = sub i32 %3415, %3416
  %3418 = zext i32 %3417 to i64
  %3419 = add nuw nsw i64 %3418, 1
  %3420 = add nsw i64 %3412, -1
  %3421 = icmp ult i32 %3417, 31
  br i1 %3421, label %3457, label %3422

3422:                                             ; preds = %3410
  %3423 = and i64 %3419, 8589934560
  %3424 = sub i64 %3413, %3423
  br label %3425

3425:                                             ; preds = %3425, %3422
  %3426 = phi i64 [ 0, %3422 ], [ %3449, %3425 ]
  %3427 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3422 ], [ %3445, %3425 ]
  %3428 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3422 ], [ %3446, %3425 ]
  %3429 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3422 ], [ %3447, %3425 ]
  %3430 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3422 ], [ %3448, %3425 ]
  %3431 = sub i64 %3413, %3426
  %3432 = getelementptr inbounds i32, ptr %9, i64 %3431
  %3433 = getelementptr inbounds i32, ptr %3432, i64 -7
  %3434 = load <8 x i32>, ptr %3433, align 4, !tbaa !6
  %3435 = shufflevector <8 x i32> %3434, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3436 = getelementptr inbounds i32, ptr %3432, i64 -15
  %3437 = load <8 x i32>, ptr %3436, align 4, !tbaa !6
  %3438 = shufflevector <8 x i32> %3437, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3439 = getelementptr inbounds i32, ptr %3432, i64 -23
  %3440 = load <8 x i32>, ptr %3439, align 4, !tbaa !6
  %3441 = shufflevector <8 x i32> %3440, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3442 = getelementptr inbounds i32, ptr %3432, i64 -31
  %3443 = load <8 x i32>, ptr %3442, align 4, !tbaa !6
  %3444 = shufflevector <8 x i32> %3443, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3445 = mul <8 x i32> %3435, %3427
  %3446 = mul <8 x i32> %3438, %3428
  %3447 = mul <8 x i32> %3441, %3429
  %3448 = mul <8 x i32> %3444, %3430
  %3449 = add nuw i64 %3426, 32
  %3450 = icmp eq i64 %3449, %3423
  br i1 %3450, label %3451, label %3425, !llvm.loop !1235

3451:                                             ; preds = %3425
  %3452 = mul <8 x i32> %3446, %3445
  %3453 = mul <8 x i32> %3447, %3452
  %3454 = mul <8 x i32> %3448, %3453
  %3455 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3454)
  %3456 = icmp eq i64 %3419, %3423
  br i1 %3456, label %3469, label %3457

3457:                                             ; preds = %3410, %3451
  %3458 = phi i64 [ %3413, %3410 ], [ %3424, %3451 ]
  %3459 = phi i32 [ 1, %3410 ], [ %3455, %3451 ]
  br label %3460

3460:                                             ; preds = %3457, %3460
  %3461 = phi i64 [ %3466, %3460 ], [ %3458, %3457 ]
  %3462 = phi i32 [ %3465, %3460 ], [ %3459, %3457 ]
  %3463 = getelementptr inbounds i32, ptr %9, i64 %3461
  %3464 = load i32, ptr %3463, align 4, !tbaa !6
  %3465 = mul nsw i32 %3464, %3462
  %3466 = add nsw i64 %3461, -1
  %3467 = trunc i64 %3461 to i32
  %3468 = icmp sgt i32 %3467, 0
  br i1 %3468, label %3460, label %3469, !llvm.loop !1236

3469:                                             ; preds = %3460, %3451
  %3470 = phi i32 [ %3455, %3451 ], [ %3465, %3460 ]
  %3471 = and i64 %3420, 4294967295
  %3472 = getelementptr inbounds i32, ptr %6, i64 %3471
  %3473 = load i32, ptr %3472, align 4, !tbaa !6
  %3474 = mul nsw i32 %3473, %3470
  %3475 = add nsw i32 %3474, %3414
  %3476 = icmp sgt i64 %3412, 2
  %3477 = add nsw i64 %3413, -1
  %3478 = add i32 %3411, 1
  br i1 %3476, label %3410, label %3479, !llvm.loop !1237

3479:                                             ; preds = %3469, %3405
  %3480 = phi i32 [ %3409, %3405 ], [ %3475, %3469 ]
  %3481 = sext i32 %3480 to i64
  %3482 = getelementptr inbounds float, ptr %3073, i64 %3481
  %3483 = load float, ptr %3482, align 4, !tbaa !163
  %3484 = fptosi float %3483 to i64
  %3485 = icmp slt i64 %3406, %3484
  br i1 %3485, label %3486, label %3487

3486:                                             ; preds = %3479
  store i64 %3484, ptr %3075, align 8, !tbaa !121
  br label %3487

3487:                                             ; preds = %3486, %3479
  %3488 = phi i64 [ %3484, %3486 ], [ %3406, %3479 ]
  %3489 = fadd fast double %3408, 1.000000e+00
  %3490 = add nuw nsw i32 %3407, 1
  br i1 %3399, label %3491, label %3538

3491:                                             ; preds = %3487
  %3492 = load i32, ptr %4, align 4, !tbaa !6
  %3493 = load i32, ptr %12, align 4, !tbaa !6
  %3494 = add nsw i32 %3493, -1
  %3495 = icmp slt i32 %3492, %3494
  br i1 %3495, label %3515, label %3496

3496:                                             ; preds = %3491
  %3497 = icmp eq i32 %3492, %3494
  br i1 %3497, label %3498, label %3531

3498:                                             ; preds = %3496
  store i32 0, ptr %4, align 4, !tbaa !6
  %3499 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3499, ptr %6, align 4, !tbaa !6
  br i1 %3404, label %3538, label %3500

3500:                                             ; preds = %3498, %3525
  %3501 = phi i64 [ %3529, %3525 ], [ 1, %3498 ]
  %3502 = getelementptr inbounds i32, ptr %4, i64 %3501
  %3503 = load i32, ptr %3502, align 4, !tbaa !6
  %3504 = getelementptr inbounds i32, ptr %12, i64 %3501
  %3505 = load i32, ptr %3504, align 4, !tbaa !6
  %3506 = add nsw i32 %3505, -1
  %3507 = icmp slt i32 %3503, %3506
  br i1 %3507, label %3508, label %3523

3508:                                             ; preds = %3500
  br i1 %3495, label %3515, label %3509

3509:                                             ; preds = %3508
  %3510 = getelementptr inbounds i32, ptr %7, i64 %3501
  %3511 = load i32, ptr %3510, align 4, !tbaa !6
  %3512 = getelementptr inbounds i32, ptr %6, i64 %3501
  %3513 = load i32, ptr %3512, align 4, !tbaa !6
  %3514 = add nsw i32 %3513, %3511
  store i32 %3514, ptr %3512, align 4, !tbaa !6
  br label %3533

3515:                                             ; preds = %3491, %3508
  %3516 = phi i32 [ %3503, %3508 ], [ %3492, %3491 ]
  %3517 = phi ptr [ %3502, %3508 ], [ %4, %3491 ]
  %3518 = phi i64 [ %3501, %3508 ], [ 0, %3491 ]
  %3519 = add nsw i32 %3516, 1
  store i32 %3519, ptr %3517, align 4, !tbaa !6
  %3520 = getelementptr inbounds i32, ptr %7, i64 %3518
  %3521 = load i32, ptr %3520, align 4, !tbaa !6
  %3522 = getelementptr inbounds i32, ptr %6, i64 %3518
  br label %3533

3523:                                             ; preds = %3500
  %3524 = icmp eq i32 %3503, %3506
  br i1 %3524, label %3525, label %3531

3525:                                             ; preds = %3523
  store i32 0, ptr %3502, align 4, !tbaa !6
  %3526 = getelementptr inbounds i32, ptr %8, i64 %3501
  %3527 = load i32, ptr %3526, align 4, !tbaa !6
  %3528 = getelementptr inbounds i32, ptr %6, i64 %3501
  store i32 %3527, ptr %3528, align 4, !tbaa !6
  %3529 = add nuw nsw i64 %3501, 1
  %3530 = icmp eq i64 %3529, %3402
  br i1 %3530, label %3538, label %3500, !llvm.loop !1238

3531:                                             ; preds = %3496, %3523
  %3532 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1758, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5519

3533:                                             ; preds = %3509, %3515
  %3534 = phi ptr [ %3522, %3515 ], [ %3502, %3509 ]
  %3535 = phi i32 [ %3521, %3515 ], [ 1, %3509 ]
  %3536 = load i32, ptr %3534, align 4, !tbaa !6
  %3537 = add nsw i32 %3536, %3535
  store i32 %3537, ptr %3534, align 4, !tbaa !6
  br label %3538

3538:                                             ; preds = %3525, %3533, %3498, %3487
  %3539 = icmp eq i32 %3490, %5
  br i1 %3539, label %5514, label %3405, !llvm.loop !1239

3540:                                             ; preds = %3388, %3678
  %3541 = phi i64 [ %3077, %3388 ], [ %3626, %3678 ]
  %3542 = phi i32 [ 0, %3388 ], [ %3627, %3678 ]
  %3543 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3389, label %3544, label %3613

3544:                                             ; preds = %3540, %3603
  %3545 = phi i32 [ %3612, %3603 ], [ 0, %3540 ]
  %3546 = phi i64 [ %3554, %3603 ], [ %3393, %3540 ]
  %3547 = phi i64 [ %3611, %3603 ], [ %3392, %3540 ]
  %3548 = phi i32 [ %3609, %3603 ], [ %3543, %3540 ]
  %3549 = sub i32 %3391, %3545
  %3550 = tail call i32 @llvm.smin.i32(i32 %3549, i32 0)
  %3551 = sub i32 %3549, %3550
  %3552 = zext i32 %3551 to i64
  %3553 = add nuw nsw i64 %3552, 1
  %3554 = add nsw i64 %3546, -1
  %3555 = icmp ult i32 %3551, 31
  br i1 %3555, label %3591, label %3556

3556:                                             ; preds = %3544
  %3557 = and i64 %3553, 8589934560
  %3558 = sub i64 %3547, %3557
  br label %3559

3559:                                             ; preds = %3559, %3556
  %3560 = phi i64 [ 0, %3556 ], [ %3583, %3559 ]
  %3561 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3556 ], [ %3579, %3559 ]
  %3562 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3556 ], [ %3580, %3559 ]
  %3563 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3556 ], [ %3581, %3559 ]
  %3564 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3556 ], [ %3582, %3559 ]
  %3565 = sub i64 %3547, %3560
  %3566 = getelementptr inbounds i32, ptr %11, i64 %3565
  %3567 = getelementptr inbounds i32, ptr %3566, i64 -7
  %3568 = load <8 x i32>, ptr %3567, align 4, !tbaa !6
  %3569 = shufflevector <8 x i32> %3568, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3570 = getelementptr inbounds i32, ptr %3566, i64 -15
  %3571 = load <8 x i32>, ptr %3570, align 4, !tbaa !6
  %3572 = shufflevector <8 x i32> %3571, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3573 = getelementptr inbounds i32, ptr %3566, i64 -23
  %3574 = load <8 x i32>, ptr %3573, align 4, !tbaa !6
  %3575 = shufflevector <8 x i32> %3574, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3576 = getelementptr inbounds i32, ptr %3566, i64 -31
  %3577 = load <8 x i32>, ptr %3576, align 4, !tbaa !6
  %3578 = shufflevector <8 x i32> %3577, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3579 = mul <8 x i32> %3569, %3561
  %3580 = mul <8 x i32> %3572, %3562
  %3581 = mul <8 x i32> %3575, %3563
  %3582 = mul <8 x i32> %3578, %3564
  %3583 = add nuw i64 %3560, 32
  %3584 = icmp eq i64 %3583, %3557
  br i1 %3584, label %3585, label %3559, !llvm.loop !1240

3585:                                             ; preds = %3559
  %3586 = mul <8 x i32> %3580, %3579
  %3587 = mul <8 x i32> %3581, %3586
  %3588 = mul <8 x i32> %3582, %3587
  %3589 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3588)
  %3590 = icmp eq i64 %3553, %3557
  br i1 %3590, label %3603, label %3591

3591:                                             ; preds = %3544, %3585
  %3592 = phi i64 [ %3547, %3544 ], [ %3558, %3585 ]
  %3593 = phi i32 [ 1, %3544 ], [ %3589, %3585 ]
  br label %3594

3594:                                             ; preds = %3591, %3594
  %3595 = phi i64 [ %3600, %3594 ], [ %3592, %3591 ]
  %3596 = phi i32 [ %3599, %3594 ], [ %3593, %3591 ]
  %3597 = getelementptr inbounds i32, ptr %11, i64 %3595
  %3598 = load i32, ptr %3597, align 4, !tbaa !6
  %3599 = mul nsw i32 %3598, %3596
  %3600 = add nsw i64 %3595, -1
  %3601 = trunc i64 %3595 to i32
  %3602 = icmp sgt i32 %3601, 0
  br i1 %3602, label %3594, label %3603, !llvm.loop !1241

3603:                                             ; preds = %3594, %3585
  %3604 = phi i32 [ %3589, %3585 ], [ %3599, %3594 ]
  %3605 = and i64 %3554, 4294967295
  %3606 = getelementptr inbounds i32, ptr %6, i64 %3605
  %3607 = load i32, ptr %3606, align 4, !tbaa !6
  %3608 = mul nsw i32 %3607, %3604
  %3609 = add nsw i32 %3608, %3548
  %3610 = icmp sgt i64 %3546, 2
  %3611 = add nsw i64 %3547, -1
  %3612 = add i32 %3545, 1
  br i1 %3610, label %3544, label %3613, !llvm.loop !1242

3613:                                             ; preds = %3603, %3540
  %3614 = phi i32 [ %3543, %3540 ], [ %3609, %3603 ]
  %3615 = icmp slt i32 %3614, %5
  br i1 %3615, label %3618, label %3616

3616:                                             ; preds = %3613
  %3617 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1758, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5519

3618:                                             ; preds = %3613
  %3619 = sext i32 %3614 to i64
  %3620 = getelementptr inbounds float, ptr %3073, i64 %3619
  %3621 = load float, ptr %3620, align 4, !tbaa !163
  %3622 = fptosi float %3621 to i64
  %3623 = icmp slt i64 %3541, %3622
  br i1 %3623, label %3624, label %3625

3624:                                             ; preds = %3618
  store i64 %3622, ptr %3075, align 8, !tbaa !121
  br label %3625

3625:                                             ; preds = %3624, %3618
  %3626 = phi i64 [ %3622, %3624 ], [ %3541, %3618 ]
  %3627 = add nuw nsw i32 %3542, 1
  br i1 %3390, label %3628, label %3678

3628:                                             ; preds = %3625
  %3629 = load i32, ptr %4, align 4, !tbaa !6
  %3630 = load i32, ptr %12, align 4, !tbaa !6
  %3631 = add nsw i32 %3630, -1
  %3632 = icmp slt i32 %3629, %3631
  br i1 %3632, label %3655, label %3633

3633:                                             ; preds = %3628
  %3634 = icmp eq i32 %3629, %3631
  br i1 %3634, label %3635, label %3671

3635:                                             ; preds = %3633
  store i32 0, ptr %4, align 4, !tbaa !6
  %3636 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3636, ptr %6, align 4, !tbaa !6
  br i1 %3395, label %3678, label %3637

3637:                                             ; preds = %3635, %3665
  %3638 = phi i64 [ %3669, %3665 ], [ 1, %3635 ]
  %3639 = getelementptr inbounds i32, ptr %4, i64 %3638
  %3640 = load i32, ptr %3639, align 4, !tbaa !6
  %3641 = getelementptr inbounds i32, ptr %12, i64 %3638
  %3642 = load i32, ptr %3641, align 4, !tbaa !6
  %3643 = add nsw i32 %3642, -1
  %3644 = icmp slt i32 %3640, %3643
  br i1 %3644, label %3645, label %3663

3645:                                             ; preds = %3637
  br i1 %3632, label %3655, label %3646

3646:                                             ; preds = %3645
  %3647 = shl i64 %3638, 32
  %3648 = add i64 %3647, -4294967296
  %3649 = ashr exact i64 %3648, 32
  %3650 = getelementptr inbounds i32, ptr %7, i64 %3649
  %3651 = load i32, ptr %3650, align 4, !tbaa !6
  %3652 = getelementptr inbounds i32, ptr %6, i64 %3638
  %3653 = load i32, ptr %3652, align 4, !tbaa !6
  %3654 = add nsw i32 %3653, %3651
  store i32 %3654, ptr %3652, align 4, !tbaa !6
  br label %3673

3655:                                             ; preds = %3628, %3645
  %3656 = phi i32 [ %3640, %3645 ], [ %3629, %3628 ]
  %3657 = phi ptr [ %3639, %3645 ], [ %4, %3628 ]
  %3658 = phi i64 [ %3638, %3645 ], [ 0, %3628 ]
  %3659 = add nsw i32 %3656, 1
  store i32 %3659, ptr %3657, align 4, !tbaa !6
  %3660 = getelementptr inbounds i32, ptr %7, i64 %3658
  %3661 = load i32, ptr %3660, align 4, !tbaa !6
  %3662 = getelementptr inbounds i32, ptr %6, i64 %3658
  br label %3673

3663:                                             ; preds = %3637
  %3664 = icmp eq i32 %3640, %3643
  br i1 %3664, label %3665, label %3671

3665:                                             ; preds = %3663
  store i32 0, ptr %3639, align 4, !tbaa !6
  %3666 = getelementptr inbounds i32, ptr %8, i64 %3638
  %3667 = load i32, ptr %3666, align 4, !tbaa !6
  %3668 = getelementptr inbounds i32, ptr %6, i64 %3638
  store i32 %3667, ptr %3668, align 4, !tbaa !6
  %3669 = add nuw nsw i64 %3638, 1
  %3670 = icmp eq i64 %3669, %3393
  br i1 %3670, label %3678, label %3637, !llvm.loop !1243

3671:                                             ; preds = %3633, %3663
  %3672 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1758, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5519

3673:                                             ; preds = %3646, %3655
  %3674 = phi ptr [ %3662, %3655 ], [ %3639, %3646 ]
  %3675 = phi i32 [ %3661, %3655 ], [ 1, %3646 ]
  %3676 = load i32, ptr %3674, align 4, !tbaa !6
  %3677 = add nsw i32 %3676, %3675
  store i32 %3677, ptr %3674, align 4, !tbaa !6
  br label %3678

3678:                                             ; preds = %3665, %3673, %3635, %3625
  %3679 = icmp eq i32 %3627, %5
  br i1 %3679, label %5514, label %3540, !llvm.loop !1244

3680:                                             ; preds = %3079
  %3681 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1758, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5514

3682:                                             ; preds = %18
  %3683 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3684 = load ptr, ptr %3683, align 8, !tbaa !10
  %3685 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3686 = load ptr, ptr %3685, align 8, !tbaa !10
  %3687 = load float, ptr %3684, align 4, !tbaa !163
  %3688 = fpext float %3687 to double
  store double %3688, ptr %3686, align 8, !tbaa !19
  %3689 = icmp eq i32 %13, 0
  br i1 %3689, label %5514, label %3690

3690:                                             ; preds = %3682
  switch i32 %1, label %4291 [
    i32 1, label %3691
    i32 0, label %3993
  ]

3691:                                             ; preds = %3690
  %3692 = getelementptr inbounds i32, ptr %3, i64 %19
  %3693 = load i32, ptr %3692, align 4, !tbaa !6
  %3694 = icmp eq i32 %3693, 0
  %3695 = icmp sgt i32 %5, 0
  br i1 %3694, label %3705, label %3696

3696:                                             ; preds = %3691
  br i1 %3695, label %3697, label %5514

3697:                                             ; preds = %3696
  %3698 = icmp sgt i32 %13, 1
  %3699 = icmp sgt i32 %13, 0
  %3700 = add i32 %13, -2
  %3701 = zext i32 %3700 to i64
  %3702 = zext i32 %13 to i64
  %3703 = add nuw i32 %5, 1
  %3704 = icmp eq i32 %13, 1
  br label %3853

3705:                                             ; preds = %3691
  br i1 %3695, label %3706, label %5514

3706:                                             ; preds = %3705
  %3707 = icmp sgt i32 %13, 1
  %3708 = icmp sgt i32 %13, 0
  %3709 = add i32 %13, -2
  %3710 = zext i32 %3709 to i64
  %3711 = zext i32 %13 to i64
  %3712 = add nuw i32 %5, 1
  %3713 = icmp eq i32 %13, 1
  br label %3714

3714:                                             ; preds = %3706, %3851
  %3715 = phi double [ %3688, %3706 ], [ %3801, %3851 ]
  %3716 = phi i32 [ 0, %3706 ], [ %3803, %3851 ]
  %3717 = phi double [ 0.000000e+00, %3706 ], [ %3802, %3851 ]
  %3718 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3707, label %3719, label %3788

3719:                                             ; preds = %3714, %3778
  %3720 = phi i32 [ %3787, %3778 ], [ 0, %3714 ]
  %3721 = phi i64 [ %3729, %3778 ], [ %3711, %3714 ]
  %3722 = phi i64 [ %3786, %3778 ], [ %3710, %3714 ]
  %3723 = phi i32 [ %3784, %3778 ], [ %3718, %3714 ]
  %3724 = sub i32 %3709, %3720
  %3725 = tail call i32 @llvm.smin.i32(i32 %3724, i32 0)
  %3726 = sub i32 %3724, %3725
  %3727 = zext i32 %3726 to i64
  %3728 = add nuw nsw i64 %3727, 1
  %3729 = add nsw i64 %3721, -1
  %3730 = icmp ult i32 %3726, 31
  br i1 %3730, label %3766, label %3731

3731:                                             ; preds = %3719
  %3732 = and i64 %3728, 8589934560
  %3733 = sub i64 %3722, %3732
  br label %3734

3734:                                             ; preds = %3734, %3731
  %3735 = phi i64 [ 0, %3731 ], [ %3758, %3734 ]
  %3736 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3731 ], [ %3754, %3734 ]
  %3737 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3731 ], [ %3755, %3734 ]
  %3738 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3731 ], [ %3756, %3734 ]
  %3739 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3731 ], [ %3757, %3734 ]
  %3740 = sub i64 %3722, %3735
  %3741 = getelementptr inbounds i32, ptr %9, i64 %3740
  %3742 = getelementptr inbounds i32, ptr %3741, i64 -7
  %3743 = load <8 x i32>, ptr %3742, align 4, !tbaa !6
  %3744 = shufflevector <8 x i32> %3743, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3745 = getelementptr inbounds i32, ptr %3741, i64 -15
  %3746 = load <8 x i32>, ptr %3745, align 4, !tbaa !6
  %3747 = shufflevector <8 x i32> %3746, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3748 = getelementptr inbounds i32, ptr %3741, i64 -23
  %3749 = load <8 x i32>, ptr %3748, align 4, !tbaa !6
  %3750 = shufflevector <8 x i32> %3749, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3751 = getelementptr inbounds i32, ptr %3741, i64 -31
  %3752 = load <8 x i32>, ptr %3751, align 4, !tbaa !6
  %3753 = shufflevector <8 x i32> %3752, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3754 = mul <8 x i32> %3744, %3736
  %3755 = mul <8 x i32> %3747, %3737
  %3756 = mul <8 x i32> %3750, %3738
  %3757 = mul <8 x i32> %3753, %3739
  %3758 = add nuw i64 %3735, 32
  %3759 = icmp eq i64 %3758, %3732
  br i1 %3759, label %3760, label %3734, !llvm.loop !1245

3760:                                             ; preds = %3734
  %3761 = mul <8 x i32> %3755, %3754
  %3762 = mul <8 x i32> %3756, %3761
  %3763 = mul <8 x i32> %3757, %3762
  %3764 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3763)
  %3765 = icmp eq i64 %3728, %3732
  br i1 %3765, label %3778, label %3766

3766:                                             ; preds = %3719, %3760
  %3767 = phi i64 [ %3722, %3719 ], [ %3733, %3760 ]
  %3768 = phi i32 [ 1, %3719 ], [ %3764, %3760 ]
  br label %3769

3769:                                             ; preds = %3766, %3769
  %3770 = phi i64 [ %3775, %3769 ], [ %3767, %3766 ]
  %3771 = phi i32 [ %3774, %3769 ], [ %3768, %3766 ]
  %3772 = getelementptr inbounds i32, ptr %9, i64 %3770
  %3773 = load i32, ptr %3772, align 4, !tbaa !6
  %3774 = mul nsw i32 %3773, %3771
  %3775 = add nsw i64 %3770, -1
  %3776 = trunc i64 %3770 to i32
  %3777 = icmp sgt i32 %3776, 0
  br i1 %3777, label %3769, label %3778, !llvm.loop !1246

3778:                                             ; preds = %3769, %3760
  %3779 = phi i32 [ %3764, %3760 ], [ %3774, %3769 ]
  %3780 = and i64 %3729, 4294967295
  %3781 = getelementptr inbounds i32, ptr %6, i64 %3780
  %3782 = load i32, ptr %3781, align 4, !tbaa !6
  %3783 = mul nsw i32 %3782, %3779
  %3784 = add nsw i32 %3783, %3723
  %3785 = icmp sgt i64 %3721, 2
  %3786 = add nsw i64 %3722, -1
  %3787 = add i32 %3720, 1
  br i1 %3785, label %3719, label %3788, !llvm.loop !1247

3788:                                             ; preds = %3778, %3714
  %3789 = phi i32 [ %3718, %3714 ], [ %3784, %3778 ]
  %3790 = sext i32 %3789 to i64
  %3791 = getelementptr inbounds double, ptr %2, i64 %3790
  %3792 = load double, ptr %3791, align 8, !tbaa !19
  %3793 = getelementptr inbounds float, ptr %3684, i64 %3790
  %3794 = load float, ptr %3793, align 4, !tbaa !163
  %3795 = fpext float %3794 to double
  %3796 = fcmp fast one double %3792, 0.000000e+00
  %3797 = fcmp fast olt double %3715, %3795
  %3798 = select i1 %3796, i1 %3797, i1 false
  br i1 %3798, label %3799, label %3800

3799:                                             ; preds = %3788
  store double %3795, ptr %3686, align 8, !tbaa !19
  br label %3800

3800:                                             ; preds = %3799, %3788
  %3801 = phi double [ %3795, %3799 ], [ %3715, %3788 ]
  %3802 = fadd fast double %3792, %3717
  %3803 = add nuw nsw i32 %3716, 1
  br i1 %3708, label %3804, label %3851

3804:                                             ; preds = %3800
  %3805 = load i32, ptr %4, align 4, !tbaa !6
  %3806 = load i32, ptr %12, align 4, !tbaa !6
  %3807 = add nsw i32 %3806, -1
  %3808 = icmp slt i32 %3805, %3807
  br i1 %3808, label %3828, label %3809

3809:                                             ; preds = %3804
  %3810 = icmp eq i32 %3805, %3807
  br i1 %3810, label %3811, label %3844

3811:                                             ; preds = %3809
  store i32 0, ptr %4, align 4, !tbaa !6
  %3812 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3812, ptr %6, align 4, !tbaa !6
  br i1 %3713, label %3851, label %3813

3813:                                             ; preds = %3811, %3838
  %3814 = phi i64 [ %3842, %3838 ], [ 1, %3811 ]
  %3815 = getelementptr inbounds i32, ptr %4, i64 %3814
  %3816 = load i32, ptr %3815, align 4, !tbaa !6
  %3817 = getelementptr inbounds i32, ptr %12, i64 %3814
  %3818 = load i32, ptr %3817, align 4, !tbaa !6
  %3819 = add nsw i32 %3818, -1
  %3820 = icmp slt i32 %3816, %3819
  br i1 %3820, label %3821, label %3836

3821:                                             ; preds = %3813
  br i1 %3808, label %3828, label %3822

3822:                                             ; preds = %3821
  %3823 = getelementptr inbounds i32, ptr %7, i64 %3814
  %3824 = load i32, ptr %3823, align 4, !tbaa !6
  %3825 = getelementptr inbounds i32, ptr %6, i64 %3814
  %3826 = load i32, ptr %3825, align 4, !tbaa !6
  %3827 = add nsw i32 %3826, %3824
  store i32 %3827, ptr %3825, align 4, !tbaa !6
  br label %3846

3828:                                             ; preds = %3804, %3821
  %3829 = phi i32 [ %3816, %3821 ], [ %3805, %3804 ]
  %3830 = phi ptr [ %3815, %3821 ], [ %4, %3804 ]
  %3831 = phi i64 [ %3814, %3821 ], [ 0, %3804 ]
  %3832 = add nsw i32 %3829, 1
  store i32 %3832, ptr %3830, align 4, !tbaa !6
  %3833 = getelementptr inbounds i32, ptr %7, i64 %3831
  %3834 = load i32, ptr %3833, align 4, !tbaa !6
  %3835 = getelementptr inbounds i32, ptr %6, i64 %3831
  br label %3846

3836:                                             ; preds = %3813
  %3837 = icmp eq i32 %3816, %3819
  br i1 %3837, label %3838, label %3844

3838:                                             ; preds = %3836
  store i32 0, ptr %3815, align 4, !tbaa !6
  %3839 = getelementptr inbounds i32, ptr %8, i64 %3814
  %3840 = load i32, ptr %3839, align 4, !tbaa !6
  %3841 = getelementptr inbounds i32, ptr %6, i64 %3814
  store i32 %3840, ptr %3841, align 4, !tbaa !6
  %3842 = add nuw nsw i64 %3814, 1
  %3843 = icmp eq i64 %3842, %3711
  br i1 %3843, label %3851, label %3813, !llvm.loop !1248

3844:                                             ; preds = %3809, %3836
  %3845 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1762, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5519

3846:                                             ; preds = %3822, %3828
  %3847 = phi ptr [ %3835, %3828 ], [ %3815, %3822 ]
  %3848 = phi i32 [ %3834, %3828 ], [ 1, %3822 ]
  %3849 = load i32, ptr %3847, align 4, !tbaa !6
  %3850 = add nsw i32 %3849, %3848
  store i32 %3850, ptr %3847, align 4, !tbaa !6
  br label %3851

3851:                                             ; preds = %3838, %3846, %3811, %3800
  %3852 = icmp eq i32 %3803, %5
  br i1 %3852, label %5514, label %3714, !llvm.loop !1249

3853:                                             ; preds = %3697, %3991
  %3854 = phi double [ %3688, %3697 ], [ %3939, %3991 ]
  %3855 = phi i32 [ 0, %3697 ], [ %3940, %3991 ]
  %3856 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3698, label %3857, label %3926

3857:                                             ; preds = %3853, %3916
  %3858 = phi i32 [ %3925, %3916 ], [ 0, %3853 ]
  %3859 = phi i64 [ %3867, %3916 ], [ %3702, %3853 ]
  %3860 = phi i64 [ %3924, %3916 ], [ %3701, %3853 ]
  %3861 = phi i32 [ %3922, %3916 ], [ %3856, %3853 ]
  %3862 = sub i32 %3700, %3858
  %3863 = tail call i32 @llvm.smin.i32(i32 %3862, i32 0)
  %3864 = sub i32 %3862, %3863
  %3865 = zext i32 %3864 to i64
  %3866 = add nuw nsw i64 %3865, 1
  %3867 = add nsw i64 %3859, -1
  %3868 = icmp ult i32 %3864, 31
  br i1 %3868, label %3904, label %3869

3869:                                             ; preds = %3857
  %3870 = and i64 %3866, 8589934560
  %3871 = sub i64 %3860, %3870
  br label %3872

3872:                                             ; preds = %3872, %3869
  %3873 = phi i64 [ 0, %3869 ], [ %3896, %3872 ]
  %3874 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3869 ], [ %3892, %3872 ]
  %3875 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3869 ], [ %3893, %3872 ]
  %3876 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3869 ], [ %3894, %3872 ]
  %3877 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3869 ], [ %3895, %3872 ]
  %3878 = sub i64 %3860, %3873
  %3879 = getelementptr inbounds i32, ptr %11, i64 %3878
  %3880 = getelementptr inbounds i32, ptr %3879, i64 -7
  %3881 = load <8 x i32>, ptr %3880, align 4, !tbaa !6
  %3882 = shufflevector <8 x i32> %3881, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3883 = getelementptr inbounds i32, ptr %3879, i64 -15
  %3884 = load <8 x i32>, ptr %3883, align 4, !tbaa !6
  %3885 = shufflevector <8 x i32> %3884, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3886 = getelementptr inbounds i32, ptr %3879, i64 -23
  %3887 = load <8 x i32>, ptr %3886, align 4, !tbaa !6
  %3888 = shufflevector <8 x i32> %3887, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3889 = getelementptr inbounds i32, ptr %3879, i64 -31
  %3890 = load <8 x i32>, ptr %3889, align 4, !tbaa !6
  %3891 = shufflevector <8 x i32> %3890, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3892 = mul <8 x i32> %3882, %3874
  %3893 = mul <8 x i32> %3885, %3875
  %3894 = mul <8 x i32> %3888, %3876
  %3895 = mul <8 x i32> %3891, %3877
  %3896 = add nuw i64 %3873, 32
  %3897 = icmp eq i64 %3896, %3870
  br i1 %3897, label %3898, label %3872, !llvm.loop !1250

3898:                                             ; preds = %3872
  %3899 = mul <8 x i32> %3893, %3892
  %3900 = mul <8 x i32> %3894, %3899
  %3901 = mul <8 x i32> %3895, %3900
  %3902 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3901)
  %3903 = icmp eq i64 %3866, %3870
  br i1 %3903, label %3916, label %3904

3904:                                             ; preds = %3857, %3898
  %3905 = phi i64 [ %3860, %3857 ], [ %3871, %3898 ]
  %3906 = phi i32 [ 1, %3857 ], [ %3902, %3898 ]
  br label %3907

3907:                                             ; preds = %3904, %3907
  %3908 = phi i64 [ %3913, %3907 ], [ %3905, %3904 ]
  %3909 = phi i32 [ %3912, %3907 ], [ %3906, %3904 ]
  %3910 = getelementptr inbounds i32, ptr %11, i64 %3908
  %3911 = load i32, ptr %3910, align 4, !tbaa !6
  %3912 = mul nsw i32 %3911, %3909
  %3913 = add nsw i64 %3908, -1
  %3914 = trunc i64 %3908 to i32
  %3915 = icmp sgt i32 %3914, 0
  br i1 %3915, label %3907, label %3916, !llvm.loop !1251

3916:                                             ; preds = %3907, %3898
  %3917 = phi i32 [ %3902, %3898 ], [ %3912, %3907 ]
  %3918 = and i64 %3867, 4294967295
  %3919 = getelementptr inbounds i32, ptr %6, i64 %3918
  %3920 = load i32, ptr %3919, align 4, !tbaa !6
  %3921 = mul nsw i32 %3920, %3917
  %3922 = add nsw i32 %3921, %3861
  %3923 = icmp sgt i64 %3859, 2
  %3924 = add nsw i64 %3860, -1
  %3925 = add i32 %3858, 1
  br i1 %3923, label %3857, label %3926, !llvm.loop !1252

3926:                                             ; preds = %3916, %3853
  %3927 = phi i32 [ %3856, %3853 ], [ %3922, %3916 ]
  %3928 = icmp slt i32 %3927, %5
  br i1 %3928, label %3931, label %3929

3929:                                             ; preds = %3926
  %3930 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1762, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5519

3931:                                             ; preds = %3926
  %3932 = sext i32 %3927 to i64
  %3933 = getelementptr inbounds float, ptr %3684, i64 %3932
  %3934 = load float, ptr %3933, align 4, !tbaa !163
  %3935 = fpext float %3934 to double
  %3936 = fcmp fast olt double %3854, %3935
  br i1 %3936, label %3937, label %3938

3937:                                             ; preds = %3931
  store double %3935, ptr %3686, align 8, !tbaa !19
  br label %3938

3938:                                             ; preds = %3931, %3937
  %3939 = phi double [ %3854, %3931 ], [ %3935, %3937 ]
  %3940 = add nuw nsw i32 %3855, 1
  br i1 %3699, label %3941, label %3991

3941:                                             ; preds = %3938
  %3942 = load i32, ptr %4, align 4, !tbaa !6
  %3943 = load i32, ptr %12, align 4, !tbaa !6
  %3944 = add nsw i32 %3943, -1
  %3945 = icmp slt i32 %3942, %3944
  br i1 %3945, label %3968, label %3946

3946:                                             ; preds = %3941
  %3947 = icmp eq i32 %3942, %3944
  br i1 %3947, label %3948, label %3984

3948:                                             ; preds = %3946
  store i32 0, ptr %4, align 4, !tbaa !6
  %3949 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3949, ptr %6, align 4, !tbaa !6
  br i1 %3704, label %3991, label %3950

3950:                                             ; preds = %3948, %3978
  %3951 = phi i64 [ %3982, %3978 ], [ 1, %3948 ]
  %3952 = getelementptr inbounds i32, ptr %4, i64 %3951
  %3953 = load i32, ptr %3952, align 4, !tbaa !6
  %3954 = getelementptr inbounds i32, ptr %12, i64 %3951
  %3955 = load i32, ptr %3954, align 4, !tbaa !6
  %3956 = add nsw i32 %3955, -1
  %3957 = icmp slt i32 %3953, %3956
  br i1 %3957, label %3958, label %3976

3958:                                             ; preds = %3950
  br i1 %3945, label %3968, label %3959

3959:                                             ; preds = %3958
  %3960 = shl i64 %3951, 32
  %3961 = add i64 %3960, -4294967296
  %3962 = ashr exact i64 %3961, 32
  %3963 = getelementptr inbounds i32, ptr %7, i64 %3962
  %3964 = load i32, ptr %3963, align 4, !tbaa !6
  %3965 = getelementptr inbounds i32, ptr %6, i64 %3951
  %3966 = load i32, ptr %3965, align 4, !tbaa !6
  %3967 = add nsw i32 %3966, %3964
  store i32 %3967, ptr %3965, align 4, !tbaa !6
  br label %3986

3968:                                             ; preds = %3941, %3958
  %3969 = phi i32 [ %3953, %3958 ], [ %3942, %3941 ]
  %3970 = phi ptr [ %3952, %3958 ], [ %4, %3941 ]
  %3971 = phi i64 [ %3951, %3958 ], [ 0, %3941 ]
  %3972 = add nsw i32 %3969, 1
  store i32 %3972, ptr %3970, align 4, !tbaa !6
  %3973 = getelementptr inbounds i32, ptr %7, i64 %3971
  %3974 = load i32, ptr %3973, align 4, !tbaa !6
  %3975 = getelementptr inbounds i32, ptr %6, i64 %3971
  br label %3986

3976:                                             ; preds = %3950
  %3977 = icmp eq i32 %3953, %3956
  br i1 %3977, label %3978, label %3984

3978:                                             ; preds = %3976
  store i32 0, ptr %3952, align 4, !tbaa !6
  %3979 = getelementptr inbounds i32, ptr %8, i64 %3951
  %3980 = load i32, ptr %3979, align 4, !tbaa !6
  %3981 = getelementptr inbounds i32, ptr %6, i64 %3951
  store i32 %3980, ptr %3981, align 4, !tbaa !6
  %3982 = add nuw nsw i64 %3951, 1
  %3983 = icmp eq i64 %3982, %3702
  br i1 %3983, label %3991, label %3950, !llvm.loop !1253

3984:                                             ; preds = %3946, %3976
  %3985 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1762, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5519

3986:                                             ; preds = %3959, %3968
  %3987 = phi ptr [ %3975, %3968 ], [ %3952, %3959 ]
  %3988 = phi i32 [ %3974, %3968 ], [ 1, %3959 ]
  %3989 = load i32, ptr %3987, align 4, !tbaa !6
  %3990 = add nsw i32 %3989, %3988
  store i32 %3990, ptr %3987, align 4, !tbaa !6
  br label %3991

3991:                                             ; preds = %3978, %3986, %3948, %3938
  %3992 = icmp eq i32 %3940, %5
  br i1 %3992, label %5514, label %3853, !llvm.loop !1254

3993:                                             ; preds = %3690
  %3994 = getelementptr inbounds i32, ptr %3, i64 %19
  %3995 = load i32, ptr %3994, align 4, !tbaa !6
  %3996 = icmp eq i32 %3995, 0
  %3997 = icmp sgt i32 %5, 0
  br i1 %3996, label %4007, label %3998

3998:                                             ; preds = %3993
  br i1 %3997, label %3999, label %5514

3999:                                             ; preds = %3998
  %4000 = icmp sgt i32 %13, 1
  %4001 = icmp sgt i32 %13, 0
  %4002 = add i32 %13, -2
  %4003 = zext i32 %4002 to i64
  %4004 = zext i32 %13 to i64
  %4005 = add nuw i32 %5, 1
  %4006 = icmp eq i32 %13, 1
  br label %4151

4007:                                             ; preds = %3993
  br i1 %3997, label %4008, label %5514

4008:                                             ; preds = %4007
  %4009 = icmp sgt i32 %13, 1
  %4010 = icmp sgt i32 %13, 0
  %4011 = add i32 %13, -2
  %4012 = zext i32 %4011 to i64
  %4013 = zext i32 %13 to i64
  %4014 = add nuw i32 %5, 1
  %4015 = icmp eq i32 %13, 1
  br label %4016

4016:                                             ; preds = %4008, %4149
  %4017 = phi double [ %3688, %4008 ], [ %4099, %4149 ]
  %4018 = phi i32 [ 0, %4008 ], [ %4101, %4149 ]
  %4019 = phi double [ 0.000000e+00, %4008 ], [ %4100, %4149 ]
  %4020 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4009, label %4021, label %4090

4021:                                             ; preds = %4016, %4080
  %4022 = phi i32 [ %4089, %4080 ], [ 0, %4016 ]
  %4023 = phi i64 [ %4031, %4080 ], [ %4013, %4016 ]
  %4024 = phi i64 [ %4088, %4080 ], [ %4012, %4016 ]
  %4025 = phi i32 [ %4086, %4080 ], [ %4020, %4016 ]
  %4026 = sub i32 %4011, %4022
  %4027 = tail call i32 @llvm.smin.i32(i32 %4026, i32 0)
  %4028 = sub i32 %4026, %4027
  %4029 = zext i32 %4028 to i64
  %4030 = add nuw nsw i64 %4029, 1
  %4031 = add nsw i64 %4023, -1
  %4032 = icmp ult i32 %4028, 31
  br i1 %4032, label %4068, label %4033

4033:                                             ; preds = %4021
  %4034 = and i64 %4030, 8589934560
  %4035 = sub i64 %4024, %4034
  br label %4036

4036:                                             ; preds = %4036, %4033
  %4037 = phi i64 [ 0, %4033 ], [ %4060, %4036 ]
  %4038 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4033 ], [ %4056, %4036 ]
  %4039 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4033 ], [ %4057, %4036 ]
  %4040 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4033 ], [ %4058, %4036 ]
  %4041 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4033 ], [ %4059, %4036 ]
  %4042 = sub i64 %4024, %4037
  %4043 = getelementptr inbounds i32, ptr %9, i64 %4042
  %4044 = getelementptr inbounds i32, ptr %4043, i64 -7
  %4045 = load <8 x i32>, ptr %4044, align 4, !tbaa !6
  %4046 = shufflevector <8 x i32> %4045, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4047 = getelementptr inbounds i32, ptr %4043, i64 -15
  %4048 = load <8 x i32>, ptr %4047, align 4, !tbaa !6
  %4049 = shufflevector <8 x i32> %4048, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4050 = getelementptr inbounds i32, ptr %4043, i64 -23
  %4051 = load <8 x i32>, ptr %4050, align 4, !tbaa !6
  %4052 = shufflevector <8 x i32> %4051, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4053 = getelementptr inbounds i32, ptr %4043, i64 -31
  %4054 = load <8 x i32>, ptr %4053, align 4, !tbaa !6
  %4055 = shufflevector <8 x i32> %4054, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4056 = mul <8 x i32> %4046, %4038
  %4057 = mul <8 x i32> %4049, %4039
  %4058 = mul <8 x i32> %4052, %4040
  %4059 = mul <8 x i32> %4055, %4041
  %4060 = add nuw i64 %4037, 32
  %4061 = icmp eq i64 %4060, %4034
  br i1 %4061, label %4062, label %4036, !llvm.loop !1255

4062:                                             ; preds = %4036
  %4063 = mul <8 x i32> %4057, %4056
  %4064 = mul <8 x i32> %4058, %4063
  %4065 = mul <8 x i32> %4059, %4064
  %4066 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4065)
  %4067 = icmp eq i64 %4030, %4034
  br i1 %4067, label %4080, label %4068

4068:                                             ; preds = %4021, %4062
  %4069 = phi i64 [ %4024, %4021 ], [ %4035, %4062 ]
  %4070 = phi i32 [ 1, %4021 ], [ %4066, %4062 ]
  br label %4071

4071:                                             ; preds = %4068, %4071
  %4072 = phi i64 [ %4077, %4071 ], [ %4069, %4068 ]
  %4073 = phi i32 [ %4076, %4071 ], [ %4070, %4068 ]
  %4074 = getelementptr inbounds i32, ptr %9, i64 %4072
  %4075 = load i32, ptr %4074, align 4, !tbaa !6
  %4076 = mul nsw i32 %4075, %4073
  %4077 = add nsw i64 %4072, -1
  %4078 = trunc i64 %4072 to i32
  %4079 = icmp sgt i32 %4078, 0
  br i1 %4079, label %4071, label %4080, !llvm.loop !1256

4080:                                             ; preds = %4071, %4062
  %4081 = phi i32 [ %4066, %4062 ], [ %4076, %4071 ]
  %4082 = and i64 %4031, 4294967295
  %4083 = getelementptr inbounds i32, ptr %6, i64 %4082
  %4084 = load i32, ptr %4083, align 4, !tbaa !6
  %4085 = mul nsw i32 %4084, %4081
  %4086 = add nsw i32 %4085, %4025
  %4087 = icmp sgt i64 %4023, 2
  %4088 = add nsw i64 %4024, -1
  %4089 = add i32 %4022, 1
  br i1 %4087, label %4021, label %4090, !llvm.loop !1257

4090:                                             ; preds = %4080, %4016
  %4091 = phi i32 [ %4020, %4016 ], [ %4086, %4080 ]
  %4092 = sext i32 %4091 to i64
  %4093 = getelementptr inbounds float, ptr %3684, i64 %4092
  %4094 = load float, ptr %4093, align 4, !tbaa !163
  %4095 = fpext float %4094 to double
  %4096 = fcmp fast olt double %4017, %4095
  br i1 %4096, label %4097, label %4098

4097:                                             ; preds = %4090
  store double %4095, ptr %3686, align 8, !tbaa !19
  br label %4098

4098:                                             ; preds = %4097, %4090
  %4099 = phi double [ %4095, %4097 ], [ %4017, %4090 ]
  %4100 = fadd fast double %4019, 1.000000e+00
  %4101 = add nuw nsw i32 %4018, 1
  br i1 %4010, label %4102, label %4149

4102:                                             ; preds = %4098
  %4103 = load i32, ptr %4, align 4, !tbaa !6
  %4104 = load i32, ptr %12, align 4, !tbaa !6
  %4105 = add nsw i32 %4104, -1
  %4106 = icmp slt i32 %4103, %4105
  br i1 %4106, label %4126, label %4107

4107:                                             ; preds = %4102
  %4108 = icmp eq i32 %4103, %4105
  br i1 %4108, label %4109, label %4142

4109:                                             ; preds = %4107
  store i32 0, ptr %4, align 4, !tbaa !6
  %4110 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4110, ptr %6, align 4, !tbaa !6
  br i1 %4015, label %4149, label %4111

4111:                                             ; preds = %4109, %4136
  %4112 = phi i64 [ %4140, %4136 ], [ 1, %4109 ]
  %4113 = getelementptr inbounds i32, ptr %4, i64 %4112
  %4114 = load i32, ptr %4113, align 4, !tbaa !6
  %4115 = getelementptr inbounds i32, ptr %12, i64 %4112
  %4116 = load i32, ptr %4115, align 4, !tbaa !6
  %4117 = add nsw i32 %4116, -1
  %4118 = icmp slt i32 %4114, %4117
  br i1 %4118, label %4119, label %4134

4119:                                             ; preds = %4111
  br i1 %4106, label %4126, label %4120

4120:                                             ; preds = %4119
  %4121 = getelementptr inbounds i32, ptr %7, i64 %4112
  %4122 = load i32, ptr %4121, align 4, !tbaa !6
  %4123 = getelementptr inbounds i32, ptr %6, i64 %4112
  %4124 = load i32, ptr %4123, align 4, !tbaa !6
  %4125 = add nsw i32 %4124, %4122
  store i32 %4125, ptr %4123, align 4, !tbaa !6
  br label %4144

4126:                                             ; preds = %4102, %4119
  %4127 = phi i32 [ %4114, %4119 ], [ %4103, %4102 ]
  %4128 = phi ptr [ %4113, %4119 ], [ %4, %4102 ]
  %4129 = phi i64 [ %4112, %4119 ], [ 0, %4102 ]
  %4130 = add nsw i32 %4127, 1
  store i32 %4130, ptr %4128, align 4, !tbaa !6
  %4131 = getelementptr inbounds i32, ptr %7, i64 %4129
  %4132 = load i32, ptr %4131, align 4, !tbaa !6
  %4133 = getelementptr inbounds i32, ptr %6, i64 %4129
  br label %4144

4134:                                             ; preds = %4111
  %4135 = icmp eq i32 %4114, %4117
  br i1 %4135, label %4136, label %4142

4136:                                             ; preds = %4134
  store i32 0, ptr %4113, align 4, !tbaa !6
  %4137 = getelementptr inbounds i32, ptr %8, i64 %4112
  %4138 = load i32, ptr %4137, align 4, !tbaa !6
  %4139 = getelementptr inbounds i32, ptr %6, i64 %4112
  store i32 %4138, ptr %4139, align 4, !tbaa !6
  %4140 = add nuw nsw i64 %4112, 1
  %4141 = icmp eq i64 %4140, %4013
  br i1 %4141, label %4149, label %4111, !llvm.loop !1258

4142:                                             ; preds = %4107, %4134
  %4143 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1762, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5519

4144:                                             ; preds = %4120, %4126
  %4145 = phi ptr [ %4133, %4126 ], [ %4113, %4120 ]
  %4146 = phi i32 [ %4132, %4126 ], [ 1, %4120 ]
  %4147 = load i32, ptr %4145, align 4, !tbaa !6
  %4148 = add nsw i32 %4147, %4146
  store i32 %4148, ptr %4145, align 4, !tbaa !6
  br label %4149

4149:                                             ; preds = %4136, %4144, %4109, %4098
  %4150 = icmp eq i32 %4101, %5
  br i1 %4150, label %5514, label %4016, !llvm.loop !1259

4151:                                             ; preds = %3999, %4289
  %4152 = phi double [ %3688, %3999 ], [ %4237, %4289 ]
  %4153 = phi i32 [ 0, %3999 ], [ %4238, %4289 ]
  %4154 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4000, label %4155, label %4224

4155:                                             ; preds = %4151, %4214
  %4156 = phi i32 [ %4223, %4214 ], [ 0, %4151 ]
  %4157 = phi i64 [ %4165, %4214 ], [ %4004, %4151 ]
  %4158 = phi i64 [ %4222, %4214 ], [ %4003, %4151 ]
  %4159 = phi i32 [ %4220, %4214 ], [ %4154, %4151 ]
  %4160 = sub i32 %4002, %4156
  %4161 = tail call i32 @llvm.smin.i32(i32 %4160, i32 0)
  %4162 = sub i32 %4160, %4161
  %4163 = zext i32 %4162 to i64
  %4164 = add nuw nsw i64 %4163, 1
  %4165 = add nsw i64 %4157, -1
  %4166 = icmp ult i32 %4162, 31
  br i1 %4166, label %4202, label %4167

4167:                                             ; preds = %4155
  %4168 = and i64 %4164, 8589934560
  %4169 = sub i64 %4158, %4168
  br label %4170

4170:                                             ; preds = %4170, %4167
  %4171 = phi i64 [ 0, %4167 ], [ %4194, %4170 ]
  %4172 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4167 ], [ %4190, %4170 ]
  %4173 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4167 ], [ %4191, %4170 ]
  %4174 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4167 ], [ %4192, %4170 ]
  %4175 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4167 ], [ %4193, %4170 ]
  %4176 = sub i64 %4158, %4171
  %4177 = getelementptr inbounds i32, ptr %11, i64 %4176
  %4178 = getelementptr inbounds i32, ptr %4177, i64 -7
  %4179 = load <8 x i32>, ptr %4178, align 4, !tbaa !6
  %4180 = shufflevector <8 x i32> %4179, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4181 = getelementptr inbounds i32, ptr %4177, i64 -15
  %4182 = load <8 x i32>, ptr %4181, align 4, !tbaa !6
  %4183 = shufflevector <8 x i32> %4182, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4184 = getelementptr inbounds i32, ptr %4177, i64 -23
  %4185 = load <8 x i32>, ptr %4184, align 4, !tbaa !6
  %4186 = shufflevector <8 x i32> %4185, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4187 = getelementptr inbounds i32, ptr %4177, i64 -31
  %4188 = load <8 x i32>, ptr %4187, align 4, !tbaa !6
  %4189 = shufflevector <8 x i32> %4188, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4190 = mul <8 x i32> %4180, %4172
  %4191 = mul <8 x i32> %4183, %4173
  %4192 = mul <8 x i32> %4186, %4174
  %4193 = mul <8 x i32> %4189, %4175
  %4194 = add nuw i64 %4171, 32
  %4195 = icmp eq i64 %4194, %4168
  br i1 %4195, label %4196, label %4170, !llvm.loop !1260

4196:                                             ; preds = %4170
  %4197 = mul <8 x i32> %4191, %4190
  %4198 = mul <8 x i32> %4192, %4197
  %4199 = mul <8 x i32> %4193, %4198
  %4200 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4199)
  %4201 = icmp eq i64 %4164, %4168
  br i1 %4201, label %4214, label %4202

4202:                                             ; preds = %4155, %4196
  %4203 = phi i64 [ %4158, %4155 ], [ %4169, %4196 ]
  %4204 = phi i32 [ 1, %4155 ], [ %4200, %4196 ]
  br label %4205

4205:                                             ; preds = %4202, %4205
  %4206 = phi i64 [ %4211, %4205 ], [ %4203, %4202 ]
  %4207 = phi i32 [ %4210, %4205 ], [ %4204, %4202 ]
  %4208 = getelementptr inbounds i32, ptr %11, i64 %4206
  %4209 = load i32, ptr %4208, align 4, !tbaa !6
  %4210 = mul nsw i32 %4209, %4207
  %4211 = add nsw i64 %4206, -1
  %4212 = trunc i64 %4206 to i32
  %4213 = icmp sgt i32 %4212, 0
  br i1 %4213, label %4205, label %4214, !llvm.loop !1261

4214:                                             ; preds = %4205, %4196
  %4215 = phi i32 [ %4200, %4196 ], [ %4210, %4205 ]
  %4216 = and i64 %4165, 4294967295
  %4217 = getelementptr inbounds i32, ptr %6, i64 %4216
  %4218 = load i32, ptr %4217, align 4, !tbaa !6
  %4219 = mul nsw i32 %4218, %4215
  %4220 = add nsw i32 %4219, %4159
  %4221 = icmp sgt i64 %4157, 2
  %4222 = add nsw i64 %4158, -1
  %4223 = add i32 %4156, 1
  br i1 %4221, label %4155, label %4224, !llvm.loop !1262

4224:                                             ; preds = %4214, %4151
  %4225 = phi i32 [ %4154, %4151 ], [ %4220, %4214 ]
  %4226 = icmp slt i32 %4225, %5
  br i1 %4226, label %4229, label %4227

4227:                                             ; preds = %4224
  %4228 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1762, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5519

4229:                                             ; preds = %4224
  %4230 = sext i32 %4225 to i64
  %4231 = getelementptr inbounds float, ptr %3684, i64 %4230
  %4232 = load float, ptr %4231, align 4, !tbaa !163
  %4233 = fpext float %4232 to double
  %4234 = fcmp fast olt double %4152, %4233
  br i1 %4234, label %4235, label %4236

4235:                                             ; preds = %4229
  store double %4233, ptr %3686, align 8, !tbaa !19
  br label %4236

4236:                                             ; preds = %4235, %4229
  %4237 = phi double [ %4233, %4235 ], [ %4152, %4229 ]
  %4238 = add nuw nsw i32 %4153, 1
  br i1 %4001, label %4239, label %4289

4239:                                             ; preds = %4236
  %4240 = load i32, ptr %4, align 4, !tbaa !6
  %4241 = load i32, ptr %12, align 4, !tbaa !6
  %4242 = add nsw i32 %4241, -1
  %4243 = icmp slt i32 %4240, %4242
  br i1 %4243, label %4266, label %4244

4244:                                             ; preds = %4239
  %4245 = icmp eq i32 %4240, %4242
  br i1 %4245, label %4246, label %4282

4246:                                             ; preds = %4244
  store i32 0, ptr %4, align 4, !tbaa !6
  %4247 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4247, ptr %6, align 4, !tbaa !6
  br i1 %4006, label %4289, label %4248

4248:                                             ; preds = %4246, %4276
  %4249 = phi i64 [ %4280, %4276 ], [ 1, %4246 ]
  %4250 = getelementptr inbounds i32, ptr %4, i64 %4249
  %4251 = load i32, ptr %4250, align 4, !tbaa !6
  %4252 = getelementptr inbounds i32, ptr %12, i64 %4249
  %4253 = load i32, ptr %4252, align 4, !tbaa !6
  %4254 = add nsw i32 %4253, -1
  %4255 = icmp slt i32 %4251, %4254
  br i1 %4255, label %4256, label %4274

4256:                                             ; preds = %4248
  br i1 %4243, label %4266, label %4257

4257:                                             ; preds = %4256
  %4258 = shl i64 %4249, 32
  %4259 = add i64 %4258, -4294967296
  %4260 = ashr exact i64 %4259, 32
  %4261 = getelementptr inbounds i32, ptr %7, i64 %4260
  %4262 = load i32, ptr %4261, align 4, !tbaa !6
  %4263 = getelementptr inbounds i32, ptr %6, i64 %4249
  %4264 = load i32, ptr %4263, align 4, !tbaa !6
  %4265 = add nsw i32 %4264, %4262
  store i32 %4265, ptr %4263, align 4, !tbaa !6
  br label %4284

4266:                                             ; preds = %4239, %4256
  %4267 = phi i32 [ %4251, %4256 ], [ %4240, %4239 ]
  %4268 = phi ptr [ %4250, %4256 ], [ %4, %4239 ]
  %4269 = phi i64 [ %4249, %4256 ], [ 0, %4239 ]
  %4270 = add nsw i32 %4267, 1
  store i32 %4270, ptr %4268, align 4, !tbaa !6
  %4271 = getelementptr inbounds i32, ptr %7, i64 %4269
  %4272 = load i32, ptr %4271, align 4, !tbaa !6
  %4273 = getelementptr inbounds i32, ptr %6, i64 %4269
  br label %4284

4274:                                             ; preds = %4248
  %4275 = icmp eq i32 %4251, %4254
  br i1 %4275, label %4276, label %4282

4276:                                             ; preds = %4274
  store i32 0, ptr %4250, align 4, !tbaa !6
  %4277 = getelementptr inbounds i32, ptr %8, i64 %4249
  %4278 = load i32, ptr %4277, align 4, !tbaa !6
  %4279 = getelementptr inbounds i32, ptr %6, i64 %4249
  store i32 %4278, ptr %4279, align 4, !tbaa !6
  %4280 = add nuw nsw i64 %4249, 1
  %4281 = icmp eq i64 %4280, %4004
  br i1 %4281, label %4289, label %4248, !llvm.loop !1263

4282:                                             ; preds = %4244, %4274
  %4283 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1762, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5519

4284:                                             ; preds = %4257, %4266
  %4285 = phi ptr [ %4273, %4266 ], [ %4250, %4257 ]
  %4286 = phi i32 [ %4272, %4266 ], [ 1, %4257 ]
  %4287 = load i32, ptr %4285, align 4, !tbaa !6
  %4288 = add nsw i32 %4287, %4286
  store i32 %4288, ptr %4285, align 4, !tbaa !6
  br label %4289

4289:                                             ; preds = %4276, %4284, %4246, %4236
  %4290 = icmp eq i32 %4238, %5
  br i1 %4290, label %5514, label %4151, !llvm.loop !1264

4291:                                             ; preds = %3690
  %4292 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1762, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5514

4293:                                             ; preds = %18
  %4294 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4295 = load ptr, ptr %4294, align 8, !tbaa !10
  %4296 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4297 = load ptr, ptr %4296, align 8, !tbaa !10
  %4298 = load float, ptr %4295, align 4, !tbaa !163
  store float %4298, ptr %4297, align 4, !tbaa !163
  %4299 = icmp eq i32 %13, 0
  br i1 %4299, label %4300, label %4304

4300:                                             ; preds = %4293
  %4301 = load float, ptr %4295, align 4, !tbaa !163
  %4302 = fcmp fast olt float %4298, %4301
  br i1 %4302, label %4303, label %5514

4303:                                             ; preds = %4300
  store float %4301, ptr %4297, align 4, !tbaa !163
  br label %5514

4304:                                             ; preds = %4293
  switch i32 %1, label %4901 [
    i32 1, label %4305
    i32 0, label %4605
  ]

4305:                                             ; preds = %4304
  %4306 = getelementptr inbounds i32, ptr %3, i64 %19
  %4307 = load i32, ptr %4306, align 4, !tbaa !6
  %4308 = icmp eq i32 %4307, 0
  %4309 = icmp sgt i32 %5, 0
  br i1 %4308, label %4319, label %4310

4310:                                             ; preds = %4305
  br i1 %4309, label %4311, label %5514

4311:                                             ; preds = %4310
  %4312 = icmp sgt i32 %13, 1
  %4313 = icmp sgt i32 %13, 0
  %4314 = add i32 %13, -2
  %4315 = zext i32 %4314 to i64
  %4316 = zext i32 %13 to i64
  %4317 = add nuw i32 %5, 1
  %4318 = icmp eq i32 %13, 1
  br label %4466

4319:                                             ; preds = %4305
  br i1 %4309, label %4320, label %5514

4320:                                             ; preds = %4319
  %4321 = icmp sgt i32 %13, 1
  %4322 = icmp sgt i32 %13, 0
  %4323 = add i32 %13, -2
  %4324 = zext i32 %4323 to i64
  %4325 = zext i32 %13 to i64
  %4326 = add nuw i32 %5, 1
  %4327 = icmp eq i32 %13, 1
  br label %4328

4328:                                             ; preds = %4320, %4464
  %4329 = phi float [ %4298, %4320 ], [ %4414, %4464 ]
  %4330 = phi i32 [ 0, %4320 ], [ %4416, %4464 ]
  %4331 = phi double [ 0.000000e+00, %4320 ], [ %4415, %4464 ]
  %4332 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4321, label %4333, label %4402

4333:                                             ; preds = %4328, %4392
  %4334 = phi i32 [ %4401, %4392 ], [ 0, %4328 ]
  %4335 = phi i64 [ %4343, %4392 ], [ %4325, %4328 ]
  %4336 = phi i64 [ %4400, %4392 ], [ %4324, %4328 ]
  %4337 = phi i32 [ %4398, %4392 ], [ %4332, %4328 ]
  %4338 = sub i32 %4323, %4334
  %4339 = tail call i32 @llvm.smin.i32(i32 %4338, i32 0)
  %4340 = sub i32 %4338, %4339
  %4341 = zext i32 %4340 to i64
  %4342 = add nuw nsw i64 %4341, 1
  %4343 = add nsw i64 %4335, -1
  %4344 = icmp ult i32 %4340, 31
  br i1 %4344, label %4380, label %4345

4345:                                             ; preds = %4333
  %4346 = and i64 %4342, 8589934560
  %4347 = sub i64 %4336, %4346
  br label %4348

4348:                                             ; preds = %4348, %4345
  %4349 = phi i64 [ 0, %4345 ], [ %4372, %4348 ]
  %4350 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4345 ], [ %4368, %4348 ]
  %4351 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4345 ], [ %4369, %4348 ]
  %4352 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4345 ], [ %4370, %4348 ]
  %4353 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4345 ], [ %4371, %4348 ]
  %4354 = sub i64 %4336, %4349
  %4355 = getelementptr inbounds i32, ptr %9, i64 %4354
  %4356 = getelementptr inbounds i32, ptr %4355, i64 -7
  %4357 = load <8 x i32>, ptr %4356, align 4, !tbaa !6
  %4358 = shufflevector <8 x i32> %4357, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4359 = getelementptr inbounds i32, ptr %4355, i64 -15
  %4360 = load <8 x i32>, ptr %4359, align 4, !tbaa !6
  %4361 = shufflevector <8 x i32> %4360, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4362 = getelementptr inbounds i32, ptr %4355, i64 -23
  %4363 = load <8 x i32>, ptr %4362, align 4, !tbaa !6
  %4364 = shufflevector <8 x i32> %4363, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4365 = getelementptr inbounds i32, ptr %4355, i64 -31
  %4366 = load <8 x i32>, ptr %4365, align 4, !tbaa !6
  %4367 = shufflevector <8 x i32> %4366, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4368 = mul <8 x i32> %4358, %4350
  %4369 = mul <8 x i32> %4361, %4351
  %4370 = mul <8 x i32> %4364, %4352
  %4371 = mul <8 x i32> %4367, %4353
  %4372 = add nuw i64 %4349, 32
  %4373 = icmp eq i64 %4372, %4346
  br i1 %4373, label %4374, label %4348, !llvm.loop !1265

4374:                                             ; preds = %4348
  %4375 = mul <8 x i32> %4369, %4368
  %4376 = mul <8 x i32> %4370, %4375
  %4377 = mul <8 x i32> %4371, %4376
  %4378 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4377)
  %4379 = icmp eq i64 %4342, %4346
  br i1 %4379, label %4392, label %4380

4380:                                             ; preds = %4333, %4374
  %4381 = phi i64 [ %4336, %4333 ], [ %4347, %4374 ]
  %4382 = phi i32 [ 1, %4333 ], [ %4378, %4374 ]
  br label %4383

4383:                                             ; preds = %4380, %4383
  %4384 = phi i64 [ %4389, %4383 ], [ %4381, %4380 ]
  %4385 = phi i32 [ %4388, %4383 ], [ %4382, %4380 ]
  %4386 = getelementptr inbounds i32, ptr %9, i64 %4384
  %4387 = load i32, ptr %4386, align 4, !tbaa !6
  %4388 = mul nsw i32 %4387, %4385
  %4389 = add nsw i64 %4384, -1
  %4390 = trunc i64 %4384 to i32
  %4391 = icmp sgt i32 %4390, 0
  br i1 %4391, label %4383, label %4392, !llvm.loop !1266

4392:                                             ; preds = %4383, %4374
  %4393 = phi i32 [ %4378, %4374 ], [ %4388, %4383 ]
  %4394 = and i64 %4343, 4294967295
  %4395 = getelementptr inbounds i32, ptr %6, i64 %4394
  %4396 = load i32, ptr %4395, align 4, !tbaa !6
  %4397 = mul nsw i32 %4396, %4393
  %4398 = add nsw i32 %4397, %4337
  %4399 = icmp sgt i64 %4335, 2
  %4400 = add nsw i64 %4336, -1
  %4401 = add i32 %4334, 1
  br i1 %4399, label %4333, label %4402, !llvm.loop !1267

4402:                                             ; preds = %4392, %4328
  %4403 = phi i32 [ %4332, %4328 ], [ %4398, %4392 ]
  %4404 = sext i32 %4403 to i64
  %4405 = getelementptr inbounds double, ptr %2, i64 %4404
  %4406 = load double, ptr %4405, align 8, !tbaa !19
  %4407 = getelementptr inbounds float, ptr %4295, i64 %4404
  %4408 = load float, ptr %4407, align 4, !tbaa !163
  %4409 = fcmp fast one double %4406, 0.000000e+00
  %4410 = fcmp fast olt float %4329, %4408
  %4411 = select i1 %4409, i1 %4410, i1 false
  br i1 %4411, label %4412, label %4413

4412:                                             ; preds = %4402
  store float %4408, ptr %4297, align 4, !tbaa !163
  br label %4413

4413:                                             ; preds = %4412, %4402
  %4414 = phi float [ %4408, %4412 ], [ %4329, %4402 ]
  %4415 = fadd fast double %4406, %4331
  %4416 = add nuw nsw i32 %4330, 1
  br i1 %4322, label %4417, label %4464

4417:                                             ; preds = %4413
  %4418 = load i32, ptr %4, align 4, !tbaa !6
  %4419 = load i32, ptr %12, align 4, !tbaa !6
  %4420 = add nsw i32 %4419, -1
  %4421 = icmp slt i32 %4418, %4420
  br i1 %4421, label %4441, label %4422

4422:                                             ; preds = %4417
  %4423 = icmp eq i32 %4418, %4420
  br i1 %4423, label %4424, label %4457

4424:                                             ; preds = %4422
  store i32 0, ptr %4, align 4, !tbaa !6
  %4425 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4425, ptr %6, align 4, !tbaa !6
  br i1 %4327, label %4464, label %4426

4426:                                             ; preds = %4424, %4451
  %4427 = phi i64 [ %4455, %4451 ], [ 1, %4424 ]
  %4428 = getelementptr inbounds i32, ptr %4, i64 %4427
  %4429 = load i32, ptr %4428, align 4, !tbaa !6
  %4430 = getelementptr inbounds i32, ptr %12, i64 %4427
  %4431 = load i32, ptr %4430, align 4, !tbaa !6
  %4432 = add nsw i32 %4431, -1
  %4433 = icmp slt i32 %4429, %4432
  br i1 %4433, label %4434, label %4449

4434:                                             ; preds = %4426
  br i1 %4421, label %4441, label %4435

4435:                                             ; preds = %4434
  %4436 = getelementptr inbounds i32, ptr %7, i64 %4427
  %4437 = load i32, ptr %4436, align 4, !tbaa !6
  %4438 = getelementptr inbounds i32, ptr %6, i64 %4427
  %4439 = load i32, ptr %4438, align 4, !tbaa !6
  %4440 = add nsw i32 %4439, %4437
  store i32 %4440, ptr %4438, align 4, !tbaa !6
  br label %4459

4441:                                             ; preds = %4417, %4434
  %4442 = phi i32 [ %4429, %4434 ], [ %4418, %4417 ]
  %4443 = phi ptr [ %4428, %4434 ], [ %4, %4417 ]
  %4444 = phi i64 [ %4427, %4434 ], [ 0, %4417 ]
  %4445 = add nsw i32 %4442, 1
  store i32 %4445, ptr %4443, align 4, !tbaa !6
  %4446 = getelementptr inbounds i32, ptr %7, i64 %4444
  %4447 = load i32, ptr %4446, align 4, !tbaa !6
  %4448 = getelementptr inbounds i32, ptr %6, i64 %4444
  br label %4459

4449:                                             ; preds = %4426
  %4450 = icmp eq i32 %4429, %4432
  br i1 %4450, label %4451, label %4457

4451:                                             ; preds = %4449
  store i32 0, ptr %4428, align 4, !tbaa !6
  %4452 = getelementptr inbounds i32, ptr %8, i64 %4427
  %4453 = load i32, ptr %4452, align 4, !tbaa !6
  %4454 = getelementptr inbounds i32, ptr %6, i64 %4427
  store i32 %4453, ptr %4454, align 4, !tbaa !6
  %4455 = add nuw nsw i64 %4427, 1
  %4456 = icmp eq i64 %4455, %4325
  br i1 %4456, label %4464, label %4426, !llvm.loop !1268

4457:                                             ; preds = %4422, %4449
  %4458 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1766, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5519

4459:                                             ; preds = %4435, %4441
  %4460 = phi ptr [ %4448, %4441 ], [ %4428, %4435 ]
  %4461 = phi i32 [ %4447, %4441 ], [ 1, %4435 ]
  %4462 = load i32, ptr %4460, align 4, !tbaa !6
  %4463 = add nsw i32 %4462, %4461
  store i32 %4463, ptr %4460, align 4, !tbaa !6
  br label %4464

4464:                                             ; preds = %4451, %4459, %4424, %4413
  %4465 = icmp eq i32 %4416, %5
  br i1 %4465, label %5514, label %4328, !llvm.loop !1269

4466:                                             ; preds = %4311, %4603
  %4467 = phi float [ %4298, %4311 ], [ %4551, %4603 ]
  %4468 = phi i32 [ 0, %4311 ], [ %4552, %4603 ]
  %4469 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4312, label %4470, label %4539

4470:                                             ; preds = %4466, %4529
  %4471 = phi i32 [ %4538, %4529 ], [ 0, %4466 ]
  %4472 = phi i64 [ %4480, %4529 ], [ %4316, %4466 ]
  %4473 = phi i64 [ %4537, %4529 ], [ %4315, %4466 ]
  %4474 = phi i32 [ %4535, %4529 ], [ %4469, %4466 ]
  %4475 = sub i32 %4314, %4471
  %4476 = tail call i32 @llvm.smin.i32(i32 %4475, i32 0)
  %4477 = sub i32 %4475, %4476
  %4478 = zext i32 %4477 to i64
  %4479 = add nuw nsw i64 %4478, 1
  %4480 = add nsw i64 %4472, -1
  %4481 = icmp ult i32 %4477, 31
  br i1 %4481, label %4517, label %4482

4482:                                             ; preds = %4470
  %4483 = and i64 %4479, 8589934560
  %4484 = sub i64 %4473, %4483
  br label %4485

4485:                                             ; preds = %4485, %4482
  %4486 = phi i64 [ 0, %4482 ], [ %4509, %4485 ]
  %4487 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4482 ], [ %4505, %4485 ]
  %4488 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4482 ], [ %4506, %4485 ]
  %4489 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4482 ], [ %4507, %4485 ]
  %4490 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4482 ], [ %4508, %4485 ]
  %4491 = sub i64 %4473, %4486
  %4492 = getelementptr inbounds i32, ptr %11, i64 %4491
  %4493 = getelementptr inbounds i32, ptr %4492, i64 -7
  %4494 = load <8 x i32>, ptr %4493, align 4, !tbaa !6
  %4495 = shufflevector <8 x i32> %4494, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4496 = getelementptr inbounds i32, ptr %4492, i64 -15
  %4497 = load <8 x i32>, ptr %4496, align 4, !tbaa !6
  %4498 = shufflevector <8 x i32> %4497, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4499 = getelementptr inbounds i32, ptr %4492, i64 -23
  %4500 = load <8 x i32>, ptr %4499, align 4, !tbaa !6
  %4501 = shufflevector <8 x i32> %4500, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4502 = getelementptr inbounds i32, ptr %4492, i64 -31
  %4503 = load <8 x i32>, ptr %4502, align 4, !tbaa !6
  %4504 = shufflevector <8 x i32> %4503, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4505 = mul <8 x i32> %4495, %4487
  %4506 = mul <8 x i32> %4498, %4488
  %4507 = mul <8 x i32> %4501, %4489
  %4508 = mul <8 x i32> %4504, %4490
  %4509 = add nuw i64 %4486, 32
  %4510 = icmp eq i64 %4509, %4483
  br i1 %4510, label %4511, label %4485, !llvm.loop !1270

4511:                                             ; preds = %4485
  %4512 = mul <8 x i32> %4506, %4505
  %4513 = mul <8 x i32> %4507, %4512
  %4514 = mul <8 x i32> %4508, %4513
  %4515 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4514)
  %4516 = icmp eq i64 %4479, %4483
  br i1 %4516, label %4529, label %4517

4517:                                             ; preds = %4470, %4511
  %4518 = phi i64 [ %4473, %4470 ], [ %4484, %4511 ]
  %4519 = phi i32 [ 1, %4470 ], [ %4515, %4511 ]
  br label %4520

4520:                                             ; preds = %4517, %4520
  %4521 = phi i64 [ %4526, %4520 ], [ %4518, %4517 ]
  %4522 = phi i32 [ %4525, %4520 ], [ %4519, %4517 ]
  %4523 = getelementptr inbounds i32, ptr %11, i64 %4521
  %4524 = load i32, ptr %4523, align 4, !tbaa !6
  %4525 = mul nsw i32 %4524, %4522
  %4526 = add nsw i64 %4521, -1
  %4527 = trunc i64 %4521 to i32
  %4528 = icmp sgt i32 %4527, 0
  br i1 %4528, label %4520, label %4529, !llvm.loop !1271

4529:                                             ; preds = %4520, %4511
  %4530 = phi i32 [ %4515, %4511 ], [ %4525, %4520 ]
  %4531 = and i64 %4480, 4294967295
  %4532 = getelementptr inbounds i32, ptr %6, i64 %4531
  %4533 = load i32, ptr %4532, align 4, !tbaa !6
  %4534 = mul nsw i32 %4533, %4530
  %4535 = add nsw i32 %4534, %4474
  %4536 = icmp sgt i64 %4472, 2
  %4537 = add nsw i64 %4473, -1
  %4538 = add i32 %4471, 1
  br i1 %4536, label %4470, label %4539, !llvm.loop !1272

4539:                                             ; preds = %4529, %4466
  %4540 = phi i32 [ %4469, %4466 ], [ %4535, %4529 ]
  %4541 = icmp slt i32 %4540, %5
  br i1 %4541, label %4544, label %4542

4542:                                             ; preds = %4539
  %4543 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1766, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5519

4544:                                             ; preds = %4539
  %4545 = sext i32 %4540 to i64
  %4546 = getelementptr inbounds float, ptr %4295, i64 %4545
  %4547 = load float, ptr %4546, align 4, !tbaa !163
  %4548 = fcmp fast olt float %4467, %4547
  br i1 %4548, label %4549, label %4550

4549:                                             ; preds = %4544
  store float %4547, ptr %4297, align 4, !tbaa !163
  br label %4550

4550:                                             ; preds = %4544, %4549
  %4551 = phi float [ %4467, %4544 ], [ %4547, %4549 ]
  %4552 = add nuw nsw i32 %4468, 1
  br i1 %4313, label %4553, label %4603

4553:                                             ; preds = %4550
  %4554 = load i32, ptr %4, align 4, !tbaa !6
  %4555 = load i32, ptr %12, align 4, !tbaa !6
  %4556 = add nsw i32 %4555, -1
  %4557 = icmp slt i32 %4554, %4556
  br i1 %4557, label %4580, label %4558

4558:                                             ; preds = %4553
  %4559 = icmp eq i32 %4554, %4556
  br i1 %4559, label %4560, label %4596

4560:                                             ; preds = %4558
  store i32 0, ptr %4, align 4, !tbaa !6
  %4561 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4561, ptr %6, align 4, !tbaa !6
  br i1 %4318, label %4603, label %4562

4562:                                             ; preds = %4560, %4590
  %4563 = phi i64 [ %4594, %4590 ], [ 1, %4560 ]
  %4564 = getelementptr inbounds i32, ptr %4, i64 %4563
  %4565 = load i32, ptr %4564, align 4, !tbaa !6
  %4566 = getelementptr inbounds i32, ptr %12, i64 %4563
  %4567 = load i32, ptr %4566, align 4, !tbaa !6
  %4568 = add nsw i32 %4567, -1
  %4569 = icmp slt i32 %4565, %4568
  br i1 %4569, label %4570, label %4588

4570:                                             ; preds = %4562
  br i1 %4557, label %4580, label %4571

4571:                                             ; preds = %4570
  %4572 = shl i64 %4563, 32
  %4573 = add i64 %4572, -4294967296
  %4574 = ashr exact i64 %4573, 32
  %4575 = getelementptr inbounds i32, ptr %7, i64 %4574
  %4576 = load i32, ptr %4575, align 4, !tbaa !6
  %4577 = getelementptr inbounds i32, ptr %6, i64 %4563
  %4578 = load i32, ptr %4577, align 4, !tbaa !6
  %4579 = add nsw i32 %4578, %4576
  store i32 %4579, ptr %4577, align 4, !tbaa !6
  br label %4598

4580:                                             ; preds = %4553, %4570
  %4581 = phi i32 [ %4565, %4570 ], [ %4554, %4553 ]
  %4582 = phi ptr [ %4564, %4570 ], [ %4, %4553 ]
  %4583 = phi i64 [ %4563, %4570 ], [ 0, %4553 ]
  %4584 = add nsw i32 %4581, 1
  store i32 %4584, ptr %4582, align 4, !tbaa !6
  %4585 = getelementptr inbounds i32, ptr %7, i64 %4583
  %4586 = load i32, ptr %4585, align 4, !tbaa !6
  %4587 = getelementptr inbounds i32, ptr %6, i64 %4583
  br label %4598

4588:                                             ; preds = %4562
  %4589 = icmp eq i32 %4565, %4568
  br i1 %4589, label %4590, label %4596

4590:                                             ; preds = %4588
  store i32 0, ptr %4564, align 4, !tbaa !6
  %4591 = getelementptr inbounds i32, ptr %8, i64 %4563
  %4592 = load i32, ptr %4591, align 4, !tbaa !6
  %4593 = getelementptr inbounds i32, ptr %6, i64 %4563
  store i32 %4592, ptr %4593, align 4, !tbaa !6
  %4594 = add nuw nsw i64 %4563, 1
  %4595 = icmp eq i64 %4594, %4316
  br i1 %4595, label %4603, label %4562, !llvm.loop !1273

4596:                                             ; preds = %4558, %4588
  %4597 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1766, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5519

4598:                                             ; preds = %4571, %4580
  %4599 = phi ptr [ %4587, %4580 ], [ %4564, %4571 ]
  %4600 = phi i32 [ %4586, %4580 ], [ 1, %4571 ]
  %4601 = load i32, ptr %4599, align 4, !tbaa !6
  %4602 = add nsw i32 %4601, %4600
  store i32 %4602, ptr %4599, align 4, !tbaa !6
  br label %4603

4603:                                             ; preds = %4590, %4598, %4560, %4550
  %4604 = icmp eq i32 %4552, %5
  br i1 %4604, label %5514, label %4466, !llvm.loop !1274

4605:                                             ; preds = %4304
  %4606 = getelementptr inbounds i32, ptr %3, i64 %19
  %4607 = load i32, ptr %4606, align 4, !tbaa !6
  %4608 = icmp eq i32 %4607, 0
  %4609 = icmp sgt i32 %5, 0
  br i1 %4608, label %4619, label %4610

4610:                                             ; preds = %4605
  br i1 %4609, label %4611, label %5514

4611:                                             ; preds = %4610
  %4612 = icmp sgt i32 %13, 1
  %4613 = icmp sgt i32 %13, 0
  %4614 = add i32 %13, -2
  %4615 = zext i32 %4614 to i64
  %4616 = zext i32 %13 to i64
  %4617 = add nuw i32 %5, 1
  %4618 = icmp eq i32 %13, 1
  br label %4762

4619:                                             ; preds = %4605
  br i1 %4609, label %4620, label %5514

4620:                                             ; preds = %4619
  %4621 = icmp sgt i32 %13, 1
  %4622 = icmp sgt i32 %13, 0
  %4623 = add i32 %13, -2
  %4624 = zext i32 %4623 to i64
  %4625 = zext i32 %13 to i64
  %4626 = add nuw i32 %5, 1
  %4627 = icmp eq i32 %13, 1
  br label %4628

4628:                                             ; preds = %4620, %4760
  %4629 = phi float [ %4298, %4620 ], [ %4710, %4760 ]
  %4630 = phi i32 [ 0, %4620 ], [ %4712, %4760 ]
  %4631 = phi double [ 0.000000e+00, %4620 ], [ %4711, %4760 ]
  %4632 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4621, label %4633, label %4702

4633:                                             ; preds = %4628, %4692
  %4634 = phi i32 [ %4701, %4692 ], [ 0, %4628 ]
  %4635 = phi i64 [ %4643, %4692 ], [ %4625, %4628 ]
  %4636 = phi i64 [ %4700, %4692 ], [ %4624, %4628 ]
  %4637 = phi i32 [ %4698, %4692 ], [ %4632, %4628 ]
  %4638 = sub i32 %4623, %4634
  %4639 = tail call i32 @llvm.smin.i32(i32 %4638, i32 0)
  %4640 = sub i32 %4638, %4639
  %4641 = zext i32 %4640 to i64
  %4642 = add nuw nsw i64 %4641, 1
  %4643 = add nsw i64 %4635, -1
  %4644 = icmp ult i32 %4640, 31
  br i1 %4644, label %4680, label %4645

4645:                                             ; preds = %4633
  %4646 = and i64 %4642, 8589934560
  %4647 = sub i64 %4636, %4646
  br label %4648

4648:                                             ; preds = %4648, %4645
  %4649 = phi i64 [ 0, %4645 ], [ %4672, %4648 ]
  %4650 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4645 ], [ %4668, %4648 ]
  %4651 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4645 ], [ %4669, %4648 ]
  %4652 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4645 ], [ %4670, %4648 ]
  %4653 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4645 ], [ %4671, %4648 ]
  %4654 = sub i64 %4636, %4649
  %4655 = getelementptr inbounds i32, ptr %9, i64 %4654
  %4656 = getelementptr inbounds i32, ptr %4655, i64 -7
  %4657 = load <8 x i32>, ptr %4656, align 4, !tbaa !6
  %4658 = shufflevector <8 x i32> %4657, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4659 = getelementptr inbounds i32, ptr %4655, i64 -15
  %4660 = load <8 x i32>, ptr %4659, align 4, !tbaa !6
  %4661 = shufflevector <8 x i32> %4660, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4662 = getelementptr inbounds i32, ptr %4655, i64 -23
  %4663 = load <8 x i32>, ptr %4662, align 4, !tbaa !6
  %4664 = shufflevector <8 x i32> %4663, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4665 = getelementptr inbounds i32, ptr %4655, i64 -31
  %4666 = load <8 x i32>, ptr %4665, align 4, !tbaa !6
  %4667 = shufflevector <8 x i32> %4666, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4668 = mul <8 x i32> %4658, %4650
  %4669 = mul <8 x i32> %4661, %4651
  %4670 = mul <8 x i32> %4664, %4652
  %4671 = mul <8 x i32> %4667, %4653
  %4672 = add nuw i64 %4649, 32
  %4673 = icmp eq i64 %4672, %4646
  br i1 %4673, label %4674, label %4648, !llvm.loop !1275

4674:                                             ; preds = %4648
  %4675 = mul <8 x i32> %4669, %4668
  %4676 = mul <8 x i32> %4670, %4675
  %4677 = mul <8 x i32> %4671, %4676
  %4678 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4677)
  %4679 = icmp eq i64 %4642, %4646
  br i1 %4679, label %4692, label %4680

4680:                                             ; preds = %4633, %4674
  %4681 = phi i64 [ %4636, %4633 ], [ %4647, %4674 ]
  %4682 = phi i32 [ 1, %4633 ], [ %4678, %4674 ]
  br label %4683

4683:                                             ; preds = %4680, %4683
  %4684 = phi i64 [ %4689, %4683 ], [ %4681, %4680 ]
  %4685 = phi i32 [ %4688, %4683 ], [ %4682, %4680 ]
  %4686 = getelementptr inbounds i32, ptr %9, i64 %4684
  %4687 = load i32, ptr %4686, align 4, !tbaa !6
  %4688 = mul nsw i32 %4687, %4685
  %4689 = add nsw i64 %4684, -1
  %4690 = trunc i64 %4684 to i32
  %4691 = icmp sgt i32 %4690, 0
  br i1 %4691, label %4683, label %4692, !llvm.loop !1276

4692:                                             ; preds = %4683, %4674
  %4693 = phi i32 [ %4678, %4674 ], [ %4688, %4683 ]
  %4694 = and i64 %4643, 4294967295
  %4695 = getelementptr inbounds i32, ptr %6, i64 %4694
  %4696 = load i32, ptr %4695, align 4, !tbaa !6
  %4697 = mul nsw i32 %4696, %4693
  %4698 = add nsw i32 %4697, %4637
  %4699 = icmp sgt i64 %4635, 2
  %4700 = add nsw i64 %4636, -1
  %4701 = add i32 %4634, 1
  br i1 %4699, label %4633, label %4702, !llvm.loop !1277

4702:                                             ; preds = %4692, %4628
  %4703 = phi i32 [ %4632, %4628 ], [ %4698, %4692 ]
  %4704 = sext i32 %4703 to i64
  %4705 = getelementptr inbounds float, ptr %4295, i64 %4704
  %4706 = load float, ptr %4705, align 4, !tbaa !163
  %4707 = fcmp fast olt float %4629, %4706
  br i1 %4707, label %4708, label %4709

4708:                                             ; preds = %4702
  store float %4706, ptr %4297, align 4, !tbaa !163
  br label %4709

4709:                                             ; preds = %4708, %4702
  %4710 = phi float [ %4706, %4708 ], [ %4629, %4702 ]
  %4711 = fadd fast double %4631, 1.000000e+00
  %4712 = add nuw nsw i32 %4630, 1
  br i1 %4622, label %4713, label %4760

4713:                                             ; preds = %4709
  %4714 = load i32, ptr %4, align 4, !tbaa !6
  %4715 = load i32, ptr %12, align 4, !tbaa !6
  %4716 = add nsw i32 %4715, -1
  %4717 = icmp slt i32 %4714, %4716
  br i1 %4717, label %4737, label %4718

4718:                                             ; preds = %4713
  %4719 = icmp eq i32 %4714, %4716
  br i1 %4719, label %4720, label %4753

4720:                                             ; preds = %4718
  store i32 0, ptr %4, align 4, !tbaa !6
  %4721 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4721, ptr %6, align 4, !tbaa !6
  br i1 %4627, label %4760, label %4722

4722:                                             ; preds = %4720, %4747
  %4723 = phi i64 [ %4751, %4747 ], [ 1, %4720 ]
  %4724 = getelementptr inbounds i32, ptr %4, i64 %4723
  %4725 = load i32, ptr %4724, align 4, !tbaa !6
  %4726 = getelementptr inbounds i32, ptr %12, i64 %4723
  %4727 = load i32, ptr %4726, align 4, !tbaa !6
  %4728 = add nsw i32 %4727, -1
  %4729 = icmp slt i32 %4725, %4728
  br i1 %4729, label %4730, label %4745

4730:                                             ; preds = %4722
  br i1 %4717, label %4737, label %4731

4731:                                             ; preds = %4730
  %4732 = getelementptr inbounds i32, ptr %7, i64 %4723
  %4733 = load i32, ptr %4732, align 4, !tbaa !6
  %4734 = getelementptr inbounds i32, ptr %6, i64 %4723
  %4735 = load i32, ptr %4734, align 4, !tbaa !6
  %4736 = add nsw i32 %4735, %4733
  store i32 %4736, ptr %4734, align 4, !tbaa !6
  br label %4755

4737:                                             ; preds = %4713, %4730
  %4738 = phi i32 [ %4725, %4730 ], [ %4714, %4713 ]
  %4739 = phi ptr [ %4724, %4730 ], [ %4, %4713 ]
  %4740 = phi i64 [ %4723, %4730 ], [ 0, %4713 ]
  %4741 = add nsw i32 %4738, 1
  store i32 %4741, ptr %4739, align 4, !tbaa !6
  %4742 = getelementptr inbounds i32, ptr %7, i64 %4740
  %4743 = load i32, ptr %4742, align 4, !tbaa !6
  %4744 = getelementptr inbounds i32, ptr %6, i64 %4740
  br label %4755

4745:                                             ; preds = %4722
  %4746 = icmp eq i32 %4725, %4728
  br i1 %4746, label %4747, label %4753

4747:                                             ; preds = %4745
  store i32 0, ptr %4724, align 4, !tbaa !6
  %4748 = getelementptr inbounds i32, ptr %8, i64 %4723
  %4749 = load i32, ptr %4748, align 4, !tbaa !6
  %4750 = getelementptr inbounds i32, ptr %6, i64 %4723
  store i32 %4749, ptr %4750, align 4, !tbaa !6
  %4751 = add nuw nsw i64 %4723, 1
  %4752 = icmp eq i64 %4751, %4625
  br i1 %4752, label %4760, label %4722, !llvm.loop !1278

4753:                                             ; preds = %4718, %4745
  %4754 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1766, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5519

4755:                                             ; preds = %4731, %4737
  %4756 = phi ptr [ %4744, %4737 ], [ %4724, %4731 ]
  %4757 = phi i32 [ %4743, %4737 ], [ 1, %4731 ]
  %4758 = load i32, ptr %4756, align 4, !tbaa !6
  %4759 = add nsw i32 %4758, %4757
  store i32 %4759, ptr %4756, align 4, !tbaa !6
  br label %4760

4760:                                             ; preds = %4747, %4755, %4720, %4709
  %4761 = icmp eq i32 %4712, %5
  br i1 %4761, label %5514, label %4628, !llvm.loop !1279

4762:                                             ; preds = %4611, %4899
  %4763 = phi float [ %4298, %4611 ], [ %4847, %4899 ]
  %4764 = phi i32 [ 0, %4611 ], [ %4848, %4899 ]
  %4765 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4612, label %4766, label %4835

4766:                                             ; preds = %4762, %4825
  %4767 = phi i32 [ %4834, %4825 ], [ 0, %4762 ]
  %4768 = phi i64 [ %4776, %4825 ], [ %4616, %4762 ]
  %4769 = phi i64 [ %4833, %4825 ], [ %4615, %4762 ]
  %4770 = phi i32 [ %4831, %4825 ], [ %4765, %4762 ]
  %4771 = sub i32 %4614, %4767
  %4772 = tail call i32 @llvm.smin.i32(i32 %4771, i32 0)
  %4773 = sub i32 %4771, %4772
  %4774 = zext i32 %4773 to i64
  %4775 = add nuw nsw i64 %4774, 1
  %4776 = add nsw i64 %4768, -1
  %4777 = icmp ult i32 %4773, 31
  br i1 %4777, label %4813, label %4778

4778:                                             ; preds = %4766
  %4779 = and i64 %4775, 8589934560
  %4780 = sub i64 %4769, %4779
  br label %4781

4781:                                             ; preds = %4781, %4778
  %4782 = phi i64 [ 0, %4778 ], [ %4805, %4781 ]
  %4783 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4778 ], [ %4801, %4781 ]
  %4784 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4778 ], [ %4802, %4781 ]
  %4785 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4778 ], [ %4803, %4781 ]
  %4786 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4778 ], [ %4804, %4781 ]
  %4787 = sub i64 %4769, %4782
  %4788 = getelementptr inbounds i32, ptr %11, i64 %4787
  %4789 = getelementptr inbounds i32, ptr %4788, i64 -7
  %4790 = load <8 x i32>, ptr %4789, align 4, !tbaa !6
  %4791 = shufflevector <8 x i32> %4790, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4792 = getelementptr inbounds i32, ptr %4788, i64 -15
  %4793 = load <8 x i32>, ptr %4792, align 4, !tbaa !6
  %4794 = shufflevector <8 x i32> %4793, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4795 = getelementptr inbounds i32, ptr %4788, i64 -23
  %4796 = load <8 x i32>, ptr %4795, align 4, !tbaa !6
  %4797 = shufflevector <8 x i32> %4796, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4798 = getelementptr inbounds i32, ptr %4788, i64 -31
  %4799 = load <8 x i32>, ptr %4798, align 4, !tbaa !6
  %4800 = shufflevector <8 x i32> %4799, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4801 = mul <8 x i32> %4791, %4783
  %4802 = mul <8 x i32> %4794, %4784
  %4803 = mul <8 x i32> %4797, %4785
  %4804 = mul <8 x i32> %4800, %4786
  %4805 = add nuw i64 %4782, 32
  %4806 = icmp eq i64 %4805, %4779
  br i1 %4806, label %4807, label %4781, !llvm.loop !1280

4807:                                             ; preds = %4781
  %4808 = mul <8 x i32> %4802, %4801
  %4809 = mul <8 x i32> %4803, %4808
  %4810 = mul <8 x i32> %4804, %4809
  %4811 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4810)
  %4812 = icmp eq i64 %4775, %4779
  br i1 %4812, label %4825, label %4813

4813:                                             ; preds = %4766, %4807
  %4814 = phi i64 [ %4769, %4766 ], [ %4780, %4807 ]
  %4815 = phi i32 [ 1, %4766 ], [ %4811, %4807 ]
  br label %4816

4816:                                             ; preds = %4813, %4816
  %4817 = phi i64 [ %4822, %4816 ], [ %4814, %4813 ]
  %4818 = phi i32 [ %4821, %4816 ], [ %4815, %4813 ]
  %4819 = getelementptr inbounds i32, ptr %11, i64 %4817
  %4820 = load i32, ptr %4819, align 4, !tbaa !6
  %4821 = mul nsw i32 %4820, %4818
  %4822 = add nsw i64 %4817, -1
  %4823 = trunc i64 %4817 to i32
  %4824 = icmp sgt i32 %4823, 0
  br i1 %4824, label %4816, label %4825, !llvm.loop !1281

4825:                                             ; preds = %4816, %4807
  %4826 = phi i32 [ %4811, %4807 ], [ %4821, %4816 ]
  %4827 = and i64 %4776, 4294967295
  %4828 = getelementptr inbounds i32, ptr %6, i64 %4827
  %4829 = load i32, ptr %4828, align 4, !tbaa !6
  %4830 = mul nsw i32 %4829, %4826
  %4831 = add nsw i32 %4830, %4770
  %4832 = icmp sgt i64 %4768, 2
  %4833 = add nsw i64 %4769, -1
  %4834 = add i32 %4767, 1
  br i1 %4832, label %4766, label %4835, !llvm.loop !1282

4835:                                             ; preds = %4825, %4762
  %4836 = phi i32 [ %4765, %4762 ], [ %4831, %4825 ]
  %4837 = icmp slt i32 %4836, %5
  br i1 %4837, label %4840, label %4838

4838:                                             ; preds = %4835
  %4839 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1766, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5519

4840:                                             ; preds = %4835
  %4841 = sext i32 %4836 to i64
  %4842 = getelementptr inbounds float, ptr %4295, i64 %4841
  %4843 = load float, ptr %4842, align 4, !tbaa !163
  %4844 = fcmp fast olt float %4763, %4843
  br i1 %4844, label %4845, label %4846

4845:                                             ; preds = %4840
  store float %4843, ptr %4297, align 4, !tbaa !163
  br label %4846

4846:                                             ; preds = %4845, %4840
  %4847 = phi float [ %4843, %4845 ], [ %4763, %4840 ]
  %4848 = add nuw nsw i32 %4764, 1
  br i1 %4613, label %4849, label %4899

4849:                                             ; preds = %4846
  %4850 = load i32, ptr %4, align 4, !tbaa !6
  %4851 = load i32, ptr %12, align 4, !tbaa !6
  %4852 = add nsw i32 %4851, -1
  %4853 = icmp slt i32 %4850, %4852
  br i1 %4853, label %4876, label %4854

4854:                                             ; preds = %4849
  %4855 = icmp eq i32 %4850, %4852
  br i1 %4855, label %4856, label %4892

4856:                                             ; preds = %4854
  store i32 0, ptr %4, align 4, !tbaa !6
  %4857 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4857, ptr %6, align 4, !tbaa !6
  br i1 %4618, label %4899, label %4858

4858:                                             ; preds = %4856, %4886
  %4859 = phi i64 [ %4890, %4886 ], [ 1, %4856 ]
  %4860 = getelementptr inbounds i32, ptr %4, i64 %4859
  %4861 = load i32, ptr %4860, align 4, !tbaa !6
  %4862 = getelementptr inbounds i32, ptr %12, i64 %4859
  %4863 = load i32, ptr %4862, align 4, !tbaa !6
  %4864 = add nsw i32 %4863, -1
  %4865 = icmp slt i32 %4861, %4864
  br i1 %4865, label %4866, label %4884

4866:                                             ; preds = %4858
  br i1 %4853, label %4876, label %4867

4867:                                             ; preds = %4866
  %4868 = shl i64 %4859, 32
  %4869 = add i64 %4868, -4294967296
  %4870 = ashr exact i64 %4869, 32
  %4871 = getelementptr inbounds i32, ptr %7, i64 %4870
  %4872 = load i32, ptr %4871, align 4, !tbaa !6
  %4873 = getelementptr inbounds i32, ptr %6, i64 %4859
  %4874 = load i32, ptr %4873, align 4, !tbaa !6
  %4875 = add nsw i32 %4874, %4872
  store i32 %4875, ptr %4873, align 4, !tbaa !6
  br label %4894

4876:                                             ; preds = %4849, %4866
  %4877 = phi i32 [ %4861, %4866 ], [ %4850, %4849 ]
  %4878 = phi ptr [ %4860, %4866 ], [ %4, %4849 ]
  %4879 = phi i64 [ %4859, %4866 ], [ 0, %4849 ]
  %4880 = add nsw i32 %4877, 1
  store i32 %4880, ptr %4878, align 4, !tbaa !6
  %4881 = getelementptr inbounds i32, ptr %7, i64 %4879
  %4882 = load i32, ptr %4881, align 4, !tbaa !6
  %4883 = getelementptr inbounds i32, ptr %6, i64 %4879
  br label %4894

4884:                                             ; preds = %4858
  %4885 = icmp eq i32 %4861, %4864
  br i1 %4885, label %4886, label %4892

4886:                                             ; preds = %4884
  store i32 0, ptr %4860, align 4, !tbaa !6
  %4887 = getelementptr inbounds i32, ptr %8, i64 %4859
  %4888 = load i32, ptr %4887, align 4, !tbaa !6
  %4889 = getelementptr inbounds i32, ptr %6, i64 %4859
  store i32 %4888, ptr %4889, align 4, !tbaa !6
  %4890 = add nuw nsw i64 %4859, 1
  %4891 = icmp eq i64 %4890, %4616
  br i1 %4891, label %4899, label %4858, !llvm.loop !1283

4892:                                             ; preds = %4854, %4884
  %4893 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1766, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5519

4894:                                             ; preds = %4867, %4876
  %4895 = phi ptr [ %4883, %4876 ], [ %4860, %4867 ]
  %4896 = phi i32 [ %4882, %4876 ], [ 1, %4867 ]
  %4897 = load i32, ptr %4895, align 4, !tbaa !6
  %4898 = add nsw i32 %4897, %4896
  store i32 %4898, ptr %4895, align 4, !tbaa !6
  br label %4899

4899:                                             ; preds = %4886, %4894, %4856, %4846
  %4900 = icmp eq i32 %4848, %5
  br i1 %4900, label %5514, label %4762, !llvm.loop !1284

4901:                                             ; preds = %4304
  %4902 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1766, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5514

4903:                                             ; preds = %18
  %4904 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4905 = load ptr, ptr %4904, align 8, !tbaa !10
  %4906 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4907 = load ptr, ptr %4906, align 8, !tbaa !10
  %4908 = load float, ptr %4905, align 4, !tbaa !163
  %4909 = fpext float %4908 to double
  store double %4909, ptr %4907, align 8, !tbaa !19
  %4910 = icmp eq i32 %13, 0
  br i1 %4910, label %5514, label %4911

4911:                                             ; preds = %4903
  switch i32 %1, label %5512 [
    i32 1, label %4912
    i32 0, label %5214
  ]

4912:                                             ; preds = %4911
  %4913 = getelementptr inbounds i32, ptr %3, i64 %19
  %4914 = load i32, ptr %4913, align 4, !tbaa !6
  %4915 = icmp eq i32 %4914, 0
  %4916 = icmp sgt i32 %5, 0
  br i1 %4915, label %4926, label %4917

4917:                                             ; preds = %4912
  br i1 %4916, label %4918, label %5514

4918:                                             ; preds = %4917
  %4919 = icmp sgt i32 %13, 1
  %4920 = icmp sgt i32 %13, 0
  %4921 = add i32 %13, -2
  %4922 = zext i32 %4921 to i64
  %4923 = zext i32 %13 to i64
  %4924 = add nuw i32 %5, 1
  %4925 = icmp eq i32 %13, 1
  br label %5074

4926:                                             ; preds = %4912
  br i1 %4916, label %4927, label %5514

4927:                                             ; preds = %4926
  %4928 = icmp sgt i32 %13, 1
  %4929 = icmp sgt i32 %13, 0
  %4930 = add i32 %13, -2
  %4931 = zext i32 %4930 to i64
  %4932 = zext i32 %13 to i64
  %4933 = add nuw i32 %5, 1
  %4934 = icmp eq i32 %13, 1
  br label %4935

4935:                                             ; preds = %4927, %5072
  %4936 = phi double [ %4909, %4927 ], [ %5022, %5072 ]
  %4937 = phi i32 [ 0, %4927 ], [ %5024, %5072 ]
  %4938 = phi double [ 0.000000e+00, %4927 ], [ %5023, %5072 ]
  %4939 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4928, label %4940, label %5009

4940:                                             ; preds = %4935, %4999
  %4941 = phi i32 [ %5008, %4999 ], [ 0, %4935 ]
  %4942 = phi i64 [ %4950, %4999 ], [ %4932, %4935 ]
  %4943 = phi i64 [ %5007, %4999 ], [ %4931, %4935 ]
  %4944 = phi i32 [ %5005, %4999 ], [ %4939, %4935 ]
  %4945 = sub i32 %4930, %4941
  %4946 = tail call i32 @llvm.smin.i32(i32 %4945, i32 0)
  %4947 = sub i32 %4945, %4946
  %4948 = zext i32 %4947 to i64
  %4949 = add nuw nsw i64 %4948, 1
  %4950 = add nsw i64 %4942, -1
  %4951 = icmp ult i32 %4947, 31
  br i1 %4951, label %4987, label %4952

4952:                                             ; preds = %4940
  %4953 = and i64 %4949, 8589934560
  %4954 = sub i64 %4943, %4953
  br label %4955

4955:                                             ; preds = %4955, %4952
  %4956 = phi i64 [ 0, %4952 ], [ %4979, %4955 ]
  %4957 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4952 ], [ %4975, %4955 ]
  %4958 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4952 ], [ %4976, %4955 ]
  %4959 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4952 ], [ %4977, %4955 ]
  %4960 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4952 ], [ %4978, %4955 ]
  %4961 = sub i64 %4943, %4956
  %4962 = getelementptr inbounds i32, ptr %9, i64 %4961
  %4963 = getelementptr inbounds i32, ptr %4962, i64 -7
  %4964 = load <8 x i32>, ptr %4963, align 4, !tbaa !6
  %4965 = shufflevector <8 x i32> %4964, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4966 = getelementptr inbounds i32, ptr %4962, i64 -15
  %4967 = load <8 x i32>, ptr %4966, align 4, !tbaa !6
  %4968 = shufflevector <8 x i32> %4967, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4969 = getelementptr inbounds i32, ptr %4962, i64 -23
  %4970 = load <8 x i32>, ptr %4969, align 4, !tbaa !6
  %4971 = shufflevector <8 x i32> %4970, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4972 = getelementptr inbounds i32, ptr %4962, i64 -31
  %4973 = load <8 x i32>, ptr %4972, align 4, !tbaa !6
  %4974 = shufflevector <8 x i32> %4973, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4975 = mul <8 x i32> %4965, %4957
  %4976 = mul <8 x i32> %4968, %4958
  %4977 = mul <8 x i32> %4971, %4959
  %4978 = mul <8 x i32> %4974, %4960
  %4979 = add nuw i64 %4956, 32
  %4980 = icmp eq i64 %4979, %4953
  br i1 %4980, label %4981, label %4955, !llvm.loop !1285

4981:                                             ; preds = %4955
  %4982 = mul <8 x i32> %4976, %4975
  %4983 = mul <8 x i32> %4977, %4982
  %4984 = mul <8 x i32> %4978, %4983
  %4985 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4984)
  %4986 = icmp eq i64 %4949, %4953
  br i1 %4986, label %4999, label %4987

4987:                                             ; preds = %4940, %4981
  %4988 = phi i64 [ %4943, %4940 ], [ %4954, %4981 ]
  %4989 = phi i32 [ 1, %4940 ], [ %4985, %4981 ]
  br label %4990

4990:                                             ; preds = %4987, %4990
  %4991 = phi i64 [ %4996, %4990 ], [ %4988, %4987 ]
  %4992 = phi i32 [ %4995, %4990 ], [ %4989, %4987 ]
  %4993 = getelementptr inbounds i32, ptr %9, i64 %4991
  %4994 = load i32, ptr %4993, align 4, !tbaa !6
  %4995 = mul nsw i32 %4994, %4992
  %4996 = add nsw i64 %4991, -1
  %4997 = trunc i64 %4991 to i32
  %4998 = icmp sgt i32 %4997, 0
  br i1 %4998, label %4990, label %4999, !llvm.loop !1286

4999:                                             ; preds = %4990, %4981
  %5000 = phi i32 [ %4985, %4981 ], [ %4995, %4990 ]
  %5001 = and i64 %4950, 4294967295
  %5002 = getelementptr inbounds i32, ptr %6, i64 %5001
  %5003 = load i32, ptr %5002, align 4, !tbaa !6
  %5004 = mul nsw i32 %5003, %5000
  %5005 = add nsw i32 %5004, %4944
  %5006 = icmp sgt i64 %4942, 2
  %5007 = add nsw i64 %4943, -1
  %5008 = add i32 %4941, 1
  br i1 %5006, label %4940, label %5009, !llvm.loop !1287

5009:                                             ; preds = %4999, %4935
  %5010 = phi i32 [ %4939, %4935 ], [ %5005, %4999 ]
  %5011 = sext i32 %5010 to i64
  %5012 = getelementptr inbounds double, ptr %2, i64 %5011
  %5013 = load double, ptr %5012, align 8, !tbaa !19
  %5014 = getelementptr inbounds float, ptr %4905, i64 %5011
  %5015 = load float, ptr %5014, align 4, !tbaa !163
  %5016 = fpext float %5015 to double
  %5017 = fcmp fast one double %5013, 0.000000e+00
  %5018 = fcmp fast olt double %4936, %5016
  %5019 = select i1 %5017, i1 %5018, i1 false
  br i1 %5019, label %5020, label %5021

5020:                                             ; preds = %5009
  store double %5016, ptr %4907, align 8, !tbaa !19
  br label %5021

5021:                                             ; preds = %5020, %5009
  %5022 = phi double [ %5016, %5020 ], [ %4936, %5009 ]
  %5023 = fadd fast double %5013, %4938
  %5024 = add nuw nsw i32 %4937, 1
  br i1 %4929, label %5025, label %5072

5025:                                             ; preds = %5021
  %5026 = load i32, ptr %4, align 4, !tbaa !6
  %5027 = load i32, ptr %12, align 4, !tbaa !6
  %5028 = add nsw i32 %5027, -1
  %5029 = icmp slt i32 %5026, %5028
  br i1 %5029, label %5049, label %5030

5030:                                             ; preds = %5025
  %5031 = icmp eq i32 %5026, %5028
  br i1 %5031, label %5032, label %5065

5032:                                             ; preds = %5030
  store i32 0, ptr %4, align 4, !tbaa !6
  %5033 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5033, ptr %6, align 4, !tbaa !6
  br i1 %4934, label %5072, label %5034

5034:                                             ; preds = %5032, %5059
  %5035 = phi i64 [ %5063, %5059 ], [ 1, %5032 ]
  %5036 = getelementptr inbounds i32, ptr %4, i64 %5035
  %5037 = load i32, ptr %5036, align 4, !tbaa !6
  %5038 = getelementptr inbounds i32, ptr %12, i64 %5035
  %5039 = load i32, ptr %5038, align 4, !tbaa !6
  %5040 = add nsw i32 %5039, -1
  %5041 = icmp slt i32 %5037, %5040
  br i1 %5041, label %5042, label %5057

5042:                                             ; preds = %5034
  br i1 %5029, label %5049, label %5043

5043:                                             ; preds = %5042
  %5044 = getelementptr inbounds i32, ptr %7, i64 %5035
  %5045 = load i32, ptr %5044, align 4, !tbaa !6
  %5046 = getelementptr inbounds i32, ptr %6, i64 %5035
  %5047 = load i32, ptr %5046, align 4, !tbaa !6
  %5048 = add nsw i32 %5047, %5045
  store i32 %5048, ptr %5046, align 4, !tbaa !6
  br label %5067

5049:                                             ; preds = %5025, %5042
  %5050 = phi i32 [ %5037, %5042 ], [ %5026, %5025 ]
  %5051 = phi ptr [ %5036, %5042 ], [ %4, %5025 ]
  %5052 = phi i64 [ %5035, %5042 ], [ 0, %5025 ]
  %5053 = add nsw i32 %5050, 1
  store i32 %5053, ptr %5051, align 4, !tbaa !6
  %5054 = getelementptr inbounds i32, ptr %7, i64 %5052
  %5055 = load i32, ptr %5054, align 4, !tbaa !6
  %5056 = getelementptr inbounds i32, ptr %6, i64 %5052
  br label %5067

5057:                                             ; preds = %5034
  %5058 = icmp eq i32 %5037, %5040
  br i1 %5058, label %5059, label %5065

5059:                                             ; preds = %5057
  store i32 0, ptr %5036, align 4, !tbaa !6
  %5060 = getelementptr inbounds i32, ptr %8, i64 %5035
  %5061 = load i32, ptr %5060, align 4, !tbaa !6
  %5062 = getelementptr inbounds i32, ptr %6, i64 %5035
  store i32 %5061, ptr %5062, align 4, !tbaa !6
  %5063 = add nuw nsw i64 %5035, 1
  %5064 = icmp eq i64 %5063, %4932
  br i1 %5064, label %5072, label %5034, !llvm.loop !1288

5065:                                             ; preds = %5030, %5057
  %5066 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1771, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5519

5067:                                             ; preds = %5043, %5049
  %5068 = phi ptr [ %5056, %5049 ], [ %5036, %5043 ]
  %5069 = phi i32 [ %5055, %5049 ], [ 1, %5043 ]
  %5070 = load i32, ptr %5068, align 4, !tbaa !6
  %5071 = add nsw i32 %5070, %5069
  store i32 %5071, ptr %5068, align 4, !tbaa !6
  br label %5072

5072:                                             ; preds = %5059, %5067, %5032, %5021
  %5073 = icmp eq i32 %5024, %5
  br i1 %5073, label %5514, label %4935, !llvm.loop !1289

5074:                                             ; preds = %4918, %5212
  %5075 = phi double [ %4909, %4918 ], [ %5160, %5212 ]
  %5076 = phi i32 [ 0, %4918 ], [ %5161, %5212 ]
  %5077 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4919, label %5078, label %5147

5078:                                             ; preds = %5074, %5137
  %5079 = phi i32 [ %5146, %5137 ], [ 0, %5074 ]
  %5080 = phi i64 [ %5088, %5137 ], [ %4923, %5074 ]
  %5081 = phi i64 [ %5145, %5137 ], [ %4922, %5074 ]
  %5082 = phi i32 [ %5143, %5137 ], [ %5077, %5074 ]
  %5083 = sub i32 %4921, %5079
  %5084 = tail call i32 @llvm.smin.i32(i32 %5083, i32 0)
  %5085 = sub i32 %5083, %5084
  %5086 = zext i32 %5085 to i64
  %5087 = add nuw nsw i64 %5086, 1
  %5088 = add nsw i64 %5080, -1
  %5089 = icmp ult i32 %5085, 31
  br i1 %5089, label %5125, label %5090

5090:                                             ; preds = %5078
  %5091 = and i64 %5087, 8589934560
  %5092 = sub i64 %5081, %5091
  br label %5093

5093:                                             ; preds = %5093, %5090
  %5094 = phi i64 [ 0, %5090 ], [ %5117, %5093 ]
  %5095 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5090 ], [ %5113, %5093 ]
  %5096 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5090 ], [ %5114, %5093 ]
  %5097 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5090 ], [ %5115, %5093 ]
  %5098 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5090 ], [ %5116, %5093 ]
  %5099 = sub i64 %5081, %5094
  %5100 = getelementptr inbounds i32, ptr %11, i64 %5099
  %5101 = getelementptr inbounds i32, ptr %5100, i64 -7
  %5102 = load <8 x i32>, ptr %5101, align 4, !tbaa !6
  %5103 = shufflevector <8 x i32> %5102, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5104 = getelementptr inbounds i32, ptr %5100, i64 -15
  %5105 = load <8 x i32>, ptr %5104, align 4, !tbaa !6
  %5106 = shufflevector <8 x i32> %5105, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5107 = getelementptr inbounds i32, ptr %5100, i64 -23
  %5108 = load <8 x i32>, ptr %5107, align 4, !tbaa !6
  %5109 = shufflevector <8 x i32> %5108, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5110 = getelementptr inbounds i32, ptr %5100, i64 -31
  %5111 = load <8 x i32>, ptr %5110, align 4, !tbaa !6
  %5112 = shufflevector <8 x i32> %5111, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5113 = mul <8 x i32> %5103, %5095
  %5114 = mul <8 x i32> %5106, %5096
  %5115 = mul <8 x i32> %5109, %5097
  %5116 = mul <8 x i32> %5112, %5098
  %5117 = add nuw i64 %5094, 32
  %5118 = icmp eq i64 %5117, %5091
  br i1 %5118, label %5119, label %5093, !llvm.loop !1290

5119:                                             ; preds = %5093
  %5120 = mul <8 x i32> %5114, %5113
  %5121 = mul <8 x i32> %5115, %5120
  %5122 = mul <8 x i32> %5116, %5121
  %5123 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5122)
  %5124 = icmp eq i64 %5087, %5091
  br i1 %5124, label %5137, label %5125

5125:                                             ; preds = %5078, %5119
  %5126 = phi i64 [ %5081, %5078 ], [ %5092, %5119 ]
  %5127 = phi i32 [ 1, %5078 ], [ %5123, %5119 ]
  br label %5128

5128:                                             ; preds = %5125, %5128
  %5129 = phi i64 [ %5134, %5128 ], [ %5126, %5125 ]
  %5130 = phi i32 [ %5133, %5128 ], [ %5127, %5125 ]
  %5131 = getelementptr inbounds i32, ptr %11, i64 %5129
  %5132 = load i32, ptr %5131, align 4, !tbaa !6
  %5133 = mul nsw i32 %5132, %5130
  %5134 = add nsw i64 %5129, -1
  %5135 = trunc i64 %5129 to i32
  %5136 = icmp sgt i32 %5135, 0
  br i1 %5136, label %5128, label %5137, !llvm.loop !1291

5137:                                             ; preds = %5128, %5119
  %5138 = phi i32 [ %5123, %5119 ], [ %5133, %5128 ]
  %5139 = and i64 %5088, 4294967295
  %5140 = getelementptr inbounds i32, ptr %6, i64 %5139
  %5141 = load i32, ptr %5140, align 4, !tbaa !6
  %5142 = mul nsw i32 %5141, %5138
  %5143 = add nsw i32 %5142, %5082
  %5144 = icmp sgt i64 %5080, 2
  %5145 = add nsw i64 %5081, -1
  %5146 = add i32 %5079, 1
  br i1 %5144, label %5078, label %5147, !llvm.loop !1292

5147:                                             ; preds = %5137, %5074
  %5148 = phi i32 [ %5077, %5074 ], [ %5143, %5137 ]
  %5149 = icmp slt i32 %5148, %5
  br i1 %5149, label %5152, label %5150

5150:                                             ; preds = %5147
  %5151 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1771, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5519

5152:                                             ; preds = %5147
  %5153 = sext i32 %5148 to i64
  %5154 = getelementptr inbounds float, ptr %4905, i64 %5153
  %5155 = load float, ptr %5154, align 4, !tbaa !163
  %5156 = fpext float %5155 to double
  %5157 = fcmp fast olt double %5075, %5156
  br i1 %5157, label %5158, label %5159

5158:                                             ; preds = %5152
  store double %5156, ptr %4907, align 8, !tbaa !19
  br label %5159

5159:                                             ; preds = %5152, %5158
  %5160 = phi double [ %5075, %5152 ], [ %5156, %5158 ]
  %5161 = add nuw nsw i32 %5076, 1
  br i1 %4920, label %5162, label %5212

5162:                                             ; preds = %5159
  %5163 = load i32, ptr %4, align 4, !tbaa !6
  %5164 = load i32, ptr %12, align 4, !tbaa !6
  %5165 = add nsw i32 %5164, -1
  %5166 = icmp slt i32 %5163, %5165
  br i1 %5166, label %5189, label %5167

5167:                                             ; preds = %5162
  %5168 = icmp eq i32 %5163, %5165
  br i1 %5168, label %5169, label %5205

5169:                                             ; preds = %5167
  store i32 0, ptr %4, align 4, !tbaa !6
  %5170 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5170, ptr %6, align 4, !tbaa !6
  br i1 %4925, label %5212, label %5171

5171:                                             ; preds = %5169, %5199
  %5172 = phi i64 [ %5203, %5199 ], [ 1, %5169 ]
  %5173 = getelementptr inbounds i32, ptr %4, i64 %5172
  %5174 = load i32, ptr %5173, align 4, !tbaa !6
  %5175 = getelementptr inbounds i32, ptr %12, i64 %5172
  %5176 = load i32, ptr %5175, align 4, !tbaa !6
  %5177 = add nsw i32 %5176, -1
  %5178 = icmp slt i32 %5174, %5177
  br i1 %5178, label %5179, label %5197

5179:                                             ; preds = %5171
  br i1 %5166, label %5189, label %5180

5180:                                             ; preds = %5179
  %5181 = shl i64 %5172, 32
  %5182 = add i64 %5181, -4294967296
  %5183 = ashr exact i64 %5182, 32
  %5184 = getelementptr inbounds i32, ptr %7, i64 %5183
  %5185 = load i32, ptr %5184, align 4, !tbaa !6
  %5186 = getelementptr inbounds i32, ptr %6, i64 %5172
  %5187 = load i32, ptr %5186, align 4, !tbaa !6
  %5188 = add nsw i32 %5187, %5185
  store i32 %5188, ptr %5186, align 4, !tbaa !6
  br label %5207

5189:                                             ; preds = %5162, %5179
  %5190 = phi i32 [ %5174, %5179 ], [ %5163, %5162 ]
  %5191 = phi ptr [ %5173, %5179 ], [ %4, %5162 ]
  %5192 = phi i64 [ %5172, %5179 ], [ 0, %5162 ]
  %5193 = add nsw i32 %5190, 1
  store i32 %5193, ptr %5191, align 4, !tbaa !6
  %5194 = getelementptr inbounds i32, ptr %7, i64 %5192
  %5195 = load i32, ptr %5194, align 4, !tbaa !6
  %5196 = getelementptr inbounds i32, ptr %6, i64 %5192
  br label %5207

5197:                                             ; preds = %5171
  %5198 = icmp eq i32 %5174, %5177
  br i1 %5198, label %5199, label %5205

5199:                                             ; preds = %5197
  store i32 0, ptr %5173, align 4, !tbaa !6
  %5200 = getelementptr inbounds i32, ptr %8, i64 %5172
  %5201 = load i32, ptr %5200, align 4, !tbaa !6
  %5202 = getelementptr inbounds i32, ptr %6, i64 %5172
  store i32 %5201, ptr %5202, align 4, !tbaa !6
  %5203 = add nuw nsw i64 %5172, 1
  %5204 = icmp eq i64 %5203, %4923
  br i1 %5204, label %5212, label %5171, !llvm.loop !1293

5205:                                             ; preds = %5167, %5197
  %5206 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1771, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5519

5207:                                             ; preds = %5180, %5189
  %5208 = phi ptr [ %5196, %5189 ], [ %5173, %5180 ]
  %5209 = phi i32 [ %5195, %5189 ], [ 1, %5180 ]
  %5210 = load i32, ptr %5208, align 4, !tbaa !6
  %5211 = add nsw i32 %5210, %5209
  store i32 %5211, ptr %5208, align 4, !tbaa !6
  br label %5212

5212:                                             ; preds = %5199, %5207, %5169, %5159
  %5213 = icmp eq i32 %5161, %5
  br i1 %5213, label %5514, label %5074, !llvm.loop !1294

5214:                                             ; preds = %4911
  %5215 = getelementptr inbounds i32, ptr %3, i64 %19
  %5216 = load i32, ptr %5215, align 4, !tbaa !6
  %5217 = icmp eq i32 %5216, 0
  %5218 = icmp sgt i32 %5, 0
  br i1 %5217, label %5228, label %5219

5219:                                             ; preds = %5214
  br i1 %5218, label %5220, label %5514

5220:                                             ; preds = %5219
  %5221 = icmp sgt i32 %13, 1
  %5222 = icmp sgt i32 %13, 0
  %5223 = add i32 %13, -2
  %5224 = zext i32 %5223 to i64
  %5225 = zext i32 %13 to i64
  %5226 = add nuw i32 %5, 1
  %5227 = icmp eq i32 %13, 1
  br label %5372

5228:                                             ; preds = %5214
  br i1 %5218, label %5229, label %5514

5229:                                             ; preds = %5228
  %5230 = icmp sgt i32 %13, 1
  %5231 = icmp sgt i32 %13, 0
  %5232 = add i32 %13, -2
  %5233 = zext i32 %5232 to i64
  %5234 = zext i32 %13 to i64
  %5235 = add nuw i32 %5, 1
  %5236 = icmp eq i32 %13, 1
  br label %5237

5237:                                             ; preds = %5229, %5370
  %5238 = phi double [ %4909, %5229 ], [ %5320, %5370 ]
  %5239 = phi i32 [ 0, %5229 ], [ %5322, %5370 ]
  %5240 = phi double [ 0.000000e+00, %5229 ], [ %5321, %5370 ]
  %5241 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %5230, label %5242, label %5311

5242:                                             ; preds = %5237, %5301
  %5243 = phi i32 [ %5310, %5301 ], [ 0, %5237 ]
  %5244 = phi i64 [ %5252, %5301 ], [ %5234, %5237 ]
  %5245 = phi i64 [ %5309, %5301 ], [ %5233, %5237 ]
  %5246 = phi i32 [ %5307, %5301 ], [ %5241, %5237 ]
  %5247 = sub i32 %5232, %5243
  %5248 = tail call i32 @llvm.smin.i32(i32 %5247, i32 0)
  %5249 = sub i32 %5247, %5248
  %5250 = zext i32 %5249 to i64
  %5251 = add nuw nsw i64 %5250, 1
  %5252 = add nsw i64 %5244, -1
  %5253 = icmp ult i32 %5249, 31
  br i1 %5253, label %5289, label %5254

5254:                                             ; preds = %5242
  %5255 = and i64 %5251, 8589934560
  %5256 = sub i64 %5245, %5255
  br label %5257

5257:                                             ; preds = %5257, %5254
  %5258 = phi i64 [ 0, %5254 ], [ %5281, %5257 ]
  %5259 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5254 ], [ %5277, %5257 ]
  %5260 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5254 ], [ %5278, %5257 ]
  %5261 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5254 ], [ %5279, %5257 ]
  %5262 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5254 ], [ %5280, %5257 ]
  %5263 = sub i64 %5245, %5258
  %5264 = getelementptr inbounds i32, ptr %9, i64 %5263
  %5265 = getelementptr inbounds i32, ptr %5264, i64 -7
  %5266 = load <8 x i32>, ptr %5265, align 4, !tbaa !6
  %5267 = shufflevector <8 x i32> %5266, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5268 = getelementptr inbounds i32, ptr %5264, i64 -15
  %5269 = load <8 x i32>, ptr %5268, align 4, !tbaa !6
  %5270 = shufflevector <8 x i32> %5269, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5271 = getelementptr inbounds i32, ptr %5264, i64 -23
  %5272 = load <8 x i32>, ptr %5271, align 4, !tbaa !6
  %5273 = shufflevector <8 x i32> %5272, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5274 = getelementptr inbounds i32, ptr %5264, i64 -31
  %5275 = load <8 x i32>, ptr %5274, align 4, !tbaa !6
  %5276 = shufflevector <8 x i32> %5275, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5277 = mul <8 x i32> %5267, %5259
  %5278 = mul <8 x i32> %5270, %5260
  %5279 = mul <8 x i32> %5273, %5261
  %5280 = mul <8 x i32> %5276, %5262
  %5281 = add nuw i64 %5258, 32
  %5282 = icmp eq i64 %5281, %5255
  br i1 %5282, label %5283, label %5257, !llvm.loop !1295

5283:                                             ; preds = %5257
  %5284 = mul <8 x i32> %5278, %5277
  %5285 = mul <8 x i32> %5279, %5284
  %5286 = mul <8 x i32> %5280, %5285
  %5287 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5286)
  %5288 = icmp eq i64 %5251, %5255
  br i1 %5288, label %5301, label %5289

5289:                                             ; preds = %5242, %5283
  %5290 = phi i64 [ %5245, %5242 ], [ %5256, %5283 ]
  %5291 = phi i32 [ 1, %5242 ], [ %5287, %5283 ]
  br label %5292

5292:                                             ; preds = %5289, %5292
  %5293 = phi i64 [ %5298, %5292 ], [ %5290, %5289 ]
  %5294 = phi i32 [ %5297, %5292 ], [ %5291, %5289 ]
  %5295 = getelementptr inbounds i32, ptr %9, i64 %5293
  %5296 = load i32, ptr %5295, align 4, !tbaa !6
  %5297 = mul nsw i32 %5296, %5294
  %5298 = add nsw i64 %5293, -1
  %5299 = trunc i64 %5293 to i32
  %5300 = icmp sgt i32 %5299, 0
  br i1 %5300, label %5292, label %5301, !llvm.loop !1296

5301:                                             ; preds = %5292, %5283
  %5302 = phi i32 [ %5287, %5283 ], [ %5297, %5292 ]
  %5303 = and i64 %5252, 4294967295
  %5304 = getelementptr inbounds i32, ptr %6, i64 %5303
  %5305 = load i32, ptr %5304, align 4, !tbaa !6
  %5306 = mul nsw i32 %5305, %5302
  %5307 = add nsw i32 %5306, %5246
  %5308 = icmp sgt i64 %5244, 2
  %5309 = add nsw i64 %5245, -1
  %5310 = add i32 %5243, 1
  br i1 %5308, label %5242, label %5311, !llvm.loop !1297

5311:                                             ; preds = %5301, %5237
  %5312 = phi i32 [ %5241, %5237 ], [ %5307, %5301 ]
  %5313 = sext i32 %5312 to i64
  %5314 = getelementptr inbounds float, ptr %4905, i64 %5313
  %5315 = load float, ptr %5314, align 4, !tbaa !163
  %5316 = fpext float %5315 to double
  %5317 = fcmp fast olt double %5238, %5316
  br i1 %5317, label %5318, label %5319

5318:                                             ; preds = %5311
  store double %5316, ptr %4907, align 8, !tbaa !19
  br label %5319

5319:                                             ; preds = %5318, %5311
  %5320 = phi double [ %5316, %5318 ], [ %5238, %5311 ]
  %5321 = fadd fast double %5240, 1.000000e+00
  %5322 = add nuw nsw i32 %5239, 1
  br i1 %5231, label %5323, label %5370

5323:                                             ; preds = %5319
  %5324 = load i32, ptr %4, align 4, !tbaa !6
  %5325 = load i32, ptr %12, align 4, !tbaa !6
  %5326 = add nsw i32 %5325, -1
  %5327 = icmp slt i32 %5324, %5326
  br i1 %5327, label %5347, label %5328

5328:                                             ; preds = %5323
  %5329 = icmp eq i32 %5324, %5326
  br i1 %5329, label %5330, label %5363

5330:                                             ; preds = %5328
  store i32 0, ptr %4, align 4, !tbaa !6
  %5331 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5331, ptr %6, align 4, !tbaa !6
  br i1 %5236, label %5370, label %5332

5332:                                             ; preds = %5330, %5357
  %5333 = phi i64 [ %5361, %5357 ], [ 1, %5330 ]
  %5334 = getelementptr inbounds i32, ptr %4, i64 %5333
  %5335 = load i32, ptr %5334, align 4, !tbaa !6
  %5336 = getelementptr inbounds i32, ptr %12, i64 %5333
  %5337 = load i32, ptr %5336, align 4, !tbaa !6
  %5338 = add nsw i32 %5337, -1
  %5339 = icmp slt i32 %5335, %5338
  br i1 %5339, label %5340, label %5355

5340:                                             ; preds = %5332
  br i1 %5327, label %5347, label %5341

5341:                                             ; preds = %5340
  %5342 = getelementptr inbounds i32, ptr %7, i64 %5333
  %5343 = load i32, ptr %5342, align 4, !tbaa !6
  %5344 = getelementptr inbounds i32, ptr %6, i64 %5333
  %5345 = load i32, ptr %5344, align 4, !tbaa !6
  %5346 = add nsw i32 %5345, %5343
  store i32 %5346, ptr %5344, align 4, !tbaa !6
  br label %5365

5347:                                             ; preds = %5323, %5340
  %5348 = phi i32 [ %5335, %5340 ], [ %5324, %5323 ]
  %5349 = phi ptr [ %5334, %5340 ], [ %4, %5323 ]
  %5350 = phi i64 [ %5333, %5340 ], [ 0, %5323 ]
  %5351 = add nsw i32 %5348, 1
  store i32 %5351, ptr %5349, align 4, !tbaa !6
  %5352 = getelementptr inbounds i32, ptr %7, i64 %5350
  %5353 = load i32, ptr %5352, align 4, !tbaa !6
  %5354 = getelementptr inbounds i32, ptr %6, i64 %5350
  br label %5365

5355:                                             ; preds = %5332
  %5356 = icmp eq i32 %5335, %5338
  br i1 %5356, label %5357, label %5363

5357:                                             ; preds = %5355
  store i32 0, ptr %5334, align 4, !tbaa !6
  %5358 = getelementptr inbounds i32, ptr %8, i64 %5333
  %5359 = load i32, ptr %5358, align 4, !tbaa !6
  %5360 = getelementptr inbounds i32, ptr %6, i64 %5333
  store i32 %5359, ptr %5360, align 4, !tbaa !6
  %5361 = add nuw nsw i64 %5333, 1
  %5362 = icmp eq i64 %5361, %5234
  br i1 %5362, label %5370, label %5332, !llvm.loop !1298

5363:                                             ; preds = %5328, %5355
  %5364 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1771, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5519

5365:                                             ; preds = %5341, %5347
  %5366 = phi ptr [ %5354, %5347 ], [ %5334, %5341 ]
  %5367 = phi i32 [ %5353, %5347 ], [ 1, %5341 ]
  %5368 = load i32, ptr %5366, align 4, !tbaa !6
  %5369 = add nsw i32 %5368, %5367
  store i32 %5369, ptr %5366, align 4, !tbaa !6
  br label %5370

5370:                                             ; preds = %5357, %5365, %5330, %5319
  %5371 = icmp eq i32 %5322, %5
  br i1 %5371, label %5514, label %5237, !llvm.loop !1299

5372:                                             ; preds = %5220, %5510
  %5373 = phi double [ %4909, %5220 ], [ %5458, %5510 ]
  %5374 = phi i32 [ 0, %5220 ], [ %5459, %5510 ]
  %5375 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %5221, label %5376, label %5445

5376:                                             ; preds = %5372, %5435
  %5377 = phi i32 [ %5444, %5435 ], [ 0, %5372 ]
  %5378 = phi i64 [ %5386, %5435 ], [ %5225, %5372 ]
  %5379 = phi i64 [ %5443, %5435 ], [ %5224, %5372 ]
  %5380 = phi i32 [ %5441, %5435 ], [ %5375, %5372 ]
  %5381 = sub i32 %5223, %5377
  %5382 = tail call i32 @llvm.smin.i32(i32 %5381, i32 0)
  %5383 = sub i32 %5381, %5382
  %5384 = zext i32 %5383 to i64
  %5385 = add nuw nsw i64 %5384, 1
  %5386 = add nsw i64 %5378, -1
  %5387 = icmp ult i32 %5383, 31
  br i1 %5387, label %5423, label %5388

5388:                                             ; preds = %5376
  %5389 = and i64 %5385, 8589934560
  %5390 = sub i64 %5379, %5389
  br label %5391

5391:                                             ; preds = %5391, %5388
  %5392 = phi i64 [ 0, %5388 ], [ %5415, %5391 ]
  %5393 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5388 ], [ %5411, %5391 ]
  %5394 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5388 ], [ %5412, %5391 ]
  %5395 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5388 ], [ %5413, %5391 ]
  %5396 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5388 ], [ %5414, %5391 ]
  %5397 = sub i64 %5379, %5392
  %5398 = getelementptr inbounds i32, ptr %11, i64 %5397
  %5399 = getelementptr inbounds i32, ptr %5398, i64 -7
  %5400 = load <8 x i32>, ptr %5399, align 4, !tbaa !6
  %5401 = shufflevector <8 x i32> %5400, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5402 = getelementptr inbounds i32, ptr %5398, i64 -15
  %5403 = load <8 x i32>, ptr %5402, align 4, !tbaa !6
  %5404 = shufflevector <8 x i32> %5403, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5405 = getelementptr inbounds i32, ptr %5398, i64 -23
  %5406 = load <8 x i32>, ptr %5405, align 4, !tbaa !6
  %5407 = shufflevector <8 x i32> %5406, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5408 = getelementptr inbounds i32, ptr %5398, i64 -31
  %5409 = load <8 x i32>, ptr %5408, align 4, !tbaa !6
  %5410 = shufflevector <8 x i32> %5409, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5411 = mul <8 x i32> %5401, %5393
  %5412 = mul <8 x i32> %5404, %5394
  %5413 = mul <8 x i32> %5407, %5395
  %5414 = mul <8 x i32> %5410, %5396
  %5415 = add nuw i64 %5392, 32
  %5416 = icmp eq i64 %5415, %5389
  br i1 %5416, label %5417, label %5391, !llvm.loop !1300

5417:                                             ; preds = %5391
  %5418 = mul <8 x i32> %5412, %5411
  %5419 = mul <8 x i32> %5413, %5418
  %5420 = mul <8 x i32> %5414, %5419
  %5421 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5420)
  %5422 = icmp eq i64 %5385, %5389
  br i1 %5422, label %5435, label %5423

5423:                                             ; preds = %5376, %5417
  %5424 = phi i64 [ %5379, %5376 ], [ %5390, %5417 ]
  %5425 = phi i32 [ 1, %5376 ], [ %5421, %5417 ]
  br label %5426

5426:                                             ; preds = %5423, %5426
  %5427 = phi i64 [ %5432, %5426 ], [ %5424, %5423 ]
  %5428 = phi i32 [ %5431, %5426 ], [ %5425, %5423 ]
  %5429 = getelementptr inbounds i32, ptr %11, i64 %5427
  %5430 = load i32, ptr %5429, align 4, !tbaa !6
  %5431 = mul nsw i32 %5430, %5428
  %5432 = add nsw i64 %5427, -1
  %5433 = trunc i64 %5427 to i32
  %5434 = icmp sgt i32 %5433, 0
  br i1 %5434, label %5426, label %5435, !llvm.loop !1301

5435:                                             ; preds = %5426, %5417
  %5436 = phi i32 [ %5421, %5417 ], [ %5431, %5426 ]
  %5437 = and i64 %5386, 4294967295
  %5438 = getelementptr inbounds i32, ptr %6, i64 %5437
  %5439 = load i32, ptr %5438, align 4, !tbaa !6
  %5440 = mul nsw i32 %5439, %5436
  %5441 = add nsw i32 %5440, %5380
  %5442 = icmp sgt i64 %5378, 2
  %5443 = add nsw i64 %5379, -1
  %5444 = add i32 %5377, 1
  br i1 %5442, label %5376, label %5445, !llvm.loop !1302

5445:                                             ; preds = %5435, %5372
  %5446 = phi i32 [ %5375, %5372 ], [ %5441, %5435 ]
  %5447 = icmp slt i32 %5446, %5
  br i1 %5447, label %5450, label %5448

5448:                                             ; preds = %5445
  %5449 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1771, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5519

5450:                                             ; preds = %5445
  %5451 = sext i32 %5446 to i64
  %5452 = getelementptr inbounds float, ptr %4905, i64 %5451
  %5453 = load float, ptr %5452, align 4, !tbaa !163
  %5454 = fpext float %5453 to double
  %5455 = fcmp fast olt double %5373, %5454
  br i1 %5455, label %5456, label %5457

5456:                                             ; preds = %5450
  store double %5454, ptr %4907, align 8, !tbaa !19
  br label %5457

5457:                                             ; preds = %5456, %5450
  %5458 = phi double [ %5454, %5456 ], [ %5373, %5450 ]
  %5459 = add nuw nsw i32 %5374, 1
  br i1 %5222, label %5460, label %5510

5460:                                             ; preds = %5457
  %5461 = load i32, ptr %4, align 4, !tbaa !6
  %5462 = load i32, ptr %12, align 4, !tbaa !6
  %5463 = add nsw i32 %5462, -1
  %5464 = icmp slt i32 %5461, %5463
  br i1 %5464, label %5487, label %5465

5465:                                             ; preds = %5460
  %5466 = icmp eq i32 %5461, %5463
  br i1 %5466, label %5467, label %5503

5467:                                             ; preds = %5465
  store i32 0, ptr %4, align 4, !tbaa !6
  %5468 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5468, ptr %6, align 4, !tbaa !6
  br i1 %5227, label %5510, label %5469

5469:                                             ; preds = %5467, %5497
  %5470 = phi i64 [ %5501, %5497 ], [ 1, %5467 ]
  %5471 = getelementptr inbounds i32, ptr %4, i64 %5470
  %5472 = load i32, ptr %5471, align 4, !tbaa !6
  %5473 = getelementptr inbounds i32, ptr %12, i64 %5470
  %5474 = load i32, ptr %5473, align 4, !tbaa !6
  %5475 = add nsw i32 %5474, -1
  %5476 = icmp slt i32 %5472, %5475
  br i1 %5476, label %5477, label %5495

5477:                                             ; preds = %5469
  br i1 %5464, label %5487, label %5478

5478:                                             ; preds = %5477
  %5479 = shl i64 %5470, 32
  %5480 = add i64 %5479, -4294967296
  %5481 = ashr exact i64 %5480, 32
  %5482 = getelementptr inbounds i32, ptr %7, i64 %5481
  %5483 = load i32, ptr %5482, align 4, !tbaa !6
  %5484 = getelementptr inbounds i32, ptr %6, i64 %5470
  %5485 = load i32, ptr %5484, align 4, !tbaa !6
  %5486 = add nsw i32 %5485, %5483
  store i32 %5486, ptr %5484, align 4, !tbaa !6
  br label %5505

5487:                                             ; preds = %5460, %5477
  %5488 = phi i32 [ %5472, %5477 ], [ %5461, %5460 ]
  %5489 = phi ptr [ %5471, %5477 ], [ %4, %5460 ]
  %5490 = phi i64 [ %5470, %5477 ], [ 0, %5460 ]
  %5491 = add nsw i32 %5488, 1
  store i32 %5491, ptr %5489, align 4, !tbaa !6
  %5492 = getelementptr inbounds i32, ptr %7, i64 %5490
  %5493 = load i32, ptr %5492, align 4, !tbaa !6
  %5494 = getelementptr inbounds i32, ptr %6, i64 %5490
  br label %5505

5495:                                             ; preds = %5469
  %5496 = icmp eq i32 %5472, %5475
  br i1 %5496, label %5497, label %5503

5497:                                             ; preds = %5495
  store i32 0, ptr %5471, align 4, !tbaa !6
  %5498 = getelementptr inbounds i32, ptr %8, i64 %5470
  %5499 = load i32, ptr %5498, align 4, !tbaa !6
  %5500 = getelementptr inbounds i32, ptr %6, i64 %5470
  store i32 %5499, ptr %5500, align 4, !tbaa !6
  %5501 = add nuw nsw i64 %5470, 1
  %5502 = icmp eq i64 %5501, %5225
  br i1 %5502, label %5510, label %5469, !llvm.loop !1303

5503:                                             ; preds = %5465, %5495
  %5504 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1771, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5519

5505:                                             ; preds = %5478, %5487
  %5506 = phi ptr [ %5494, %5487 ], [ %5471, %5478 ]
  %5507 = phi i32 [ %5493, %5487 ], [ 1, %5478 ]
  %5508 = load i32, ptr %5506, align 4, !tbaa !6
  %5509 = add nsw i32 %5508, %5507
  store i32 %5509, ptr %5506, align 4, !tbaa !6
  br label %5510

5510:                                             ; preds = %5497, %5505, %5467, %5457
  %5511 = icmp eq i32 %5459, %5
  br i1 %5511, label %5514, label %5372, !llvm.loop !1304

5512:                                             ; preds = %4911
  %5513 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1771, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5514

5514:                                             ; preds = %5510, %5370, %5212, %5072, %4899, %4760, %4603, %4464, %4289, %4149, %3991, %3851, %3678, %3538, %3380, %3240, %3067, %2928, %2771, %2632, %2460, %2320, %2162, %2022, %1849, %1710, %1553, %1414, %1237, %1098, %941, %802, %630, %491, %334, %195, %5219, %5228, %4917, %4926, %4610, %4619, %4310, %4319, %3998, %4007, %3696, %3705, %3387, %3396, %3085, %3094, %2778, %2787, %2478, %2487, %2169, %2178, %1867, %1876, %1560, %1569, %1260, %1269, %948, %957, %648, %657, %341, %350, %41, %50, %4903, %5512, %4303, %4300, %4901, %3682, %4291, %3071, %3680, %2464, %3069, %1853, %2462, %1253, %1249, %1851, %634, %1239, %34, %30, %632, %18
  %5515 = phi double [ 0.000000e+00, %18 ], [ 0.000000e+00, %632 ], [ 0.000000e+00, %30 ], [ 0.000000e+00, %34 ], [ 0.000000e+00, %634 ], [ 0.000000e+00, %1239 ], [ 0.000000e+00, %1851 ], [ 0.000000e+00, %1249 ], [ 0.000000e+00, %1253 ], [ 0.000000e+00, %1853 ], [ 0.000000e+00, %2462 ], [ 0.000000e+00, %2464 ], [ 0.000000e+00, %3069 ], [ 0.000000e+00, %3071 ], [ 0.000000e+00, %3680 ], [ 0.000000e+00, %3682 ], [ 0.000000e+00, %4291 ], [ 0.000000e+00, %4901 ], [ 0.000000e+00, %4300 ], [ 0.000000e+00, %4303 ], [ 0.000000e+00, %4903 ], [ 0.000000e+00, %5512 ], [ 0.000000e+00, %50 ], [ 0.000000e+00, %41 ], [ 0.000000e+00, %350 ], [ 0.000000e+00, %341 ], [ 0.000000e+00, %657 ], [ 0.000000e+00, %648 ], [ 0.000000e+00, %957 ], [ 0.000000e+00, %948 ], [ 0.000000e+00, %1269 ], [ 0.000000e+00, %1260 ], [ 0.000000e+00, %1569 ], [ 0.000000e+00, %1560 ], [ 0.000000e+00, %1876 ], [ 0.000000e+00, %1867 ], [ 0.000000e+00, %2178 ], [ 0.000000e+00, %2169 ], [ 0.000000e+00, %2487 ], [ 0.000000e+00, %2478 ], [ 0.000000e+00, %2787 ], [ 0.000000e+00, %2778 ], [ 0.000000e+00, %3094 ], [ 0.000000e+00, %3085 ], [ 0.000000e+00, %3396 ], [ 0.000000e+00, %3387 ], [ 0.000000e+00, %3705 ], [ 0.000000e+00, %3696 ], [ 0.000000e+00, %4007 ], [ 0.000000e+00, %3998 ], [ 0.000000e+00, %4319 ], [ 0.000000e+00, %4310 ], [ 0.000000e+00, %4619 ], [ 0.000000e+00, %4610 ], [ 0.000000e+00, %4926 ], [ 0.000000e+00, %4917 ], [ 0.000000e+00, %5228 ], [ 0.000000e+00, %5219 ], [ %146, %195 ], [ 0.000000e+00, %334 ], [ %442, %491 ], [ 0.000000e+00, %630 ], [ %753, %802 ], [ 0.000000e+00, %941 ], [ %1049, %1098 ], [ 0.000000e+00, %1237 ], [ %1365, %1414 ], [ 0.000000e+00, %1553 ], [ %1661, %1710 ], [ 0.000000e+00, %1849 ], [ %1973, %2022 ], [ 0.000000e+00, %2162 ], [ %2271, %2320 ], [ 0.000000e+00, %2460 ], [ %2583, %2632 ], [ 0.000000e+00, %2771 ], [ %2879, %2928 ], [ 0.000000e+00, %3067 ], [ %3191, %3240 ], [ 0.000000e+00, %3380 ], [ %3489, %3538 ], [ 0.000000e+00, %3678 ], [ %3802, %3851 ], [ 0.000000e+00, %3991 ], [ %4100, %4149 ], [ 0.000000e+00, %4289 ], [ %4415, %4464 ], [ 0.000000e+00, %4603 ], [ %4711, %4760 ], [ 0.000000e+00, %4899 ], [ %5023, %5072 ], [ 0.000000e+00, %5212 ], [ %5321, %5370 ], [ 0.000000e+00, %5510 ]
  %5516 = phi i32 [ %10, %18 ], [ 1, %632 ], [ 1, %30 ], [ 1, %34 ], [ 1, %634 ], [ 1, %1239 ], [ 1, %1851 ], [ 1, %1249 ], [ 1, %1253 ], [ 1, %1853 ], [ 1, %2462 ], [ 1, %2464 ], [ 1, %3069 ], [ 1, %3071 ], [ 1, %3680 ], [ 1, %3682 ], [ 1, %4291 ], [ 1, %4901 ], [ 1, %4300 ], [ 1, %4303 ], [ 1, %4903 ], [ 1, %5512 ], [ 1, %50 ], [ 1, %41 ], [ 1, %350 ], [ 1, %341 ], [ 1, %657 ], [ 1, %648 ], [ 1, %957 ], [ 1, %948 ], [ 1, %1269 ], [ 1, %1260 ], [ 1, %1569 ], [ 1, %1560 ], [ 1, %1876 ], [ 1, %1867 ], [ 1, %2178 ], [ 1, %2169 ], [ 1, %2487 ], [ 1, %2478 ], [ 1, %2787 ], [ 1, %2778 ], [ 1, %3094 ], [ 1, %3085 ], [ 1, %3396 ], [ 1, %3387 ], [ 1, %3705 ], [ 1, %3696 ], [ 1, %4007 ], [ 1, %3998 ], [ 1, %4319 ], [ 1, %4310 ], [ 1, %4619 ], [ 1, %4610 ], [ 1, %4926 ], [ 1, %4917 ], [ 1, %5228 ], [ 1, %5219 ], [ %57, %195 ], [ %48, %334 ], [ %357, %491 ], [ %348, %630 ], [ %664, %802 ], [ %655, %941 ], [ %964, %1098 ], [ %955, %1237 ], [ %1276, %1414 ], [ %1267, %1553 ], [ %1576, %1710 ], [ %1567, %1849 ], [ %1883, %2022 ], [ %1874, %2162 ], [ %2185, %2320 ], [ %2176, %2460 ], [ %2494, %2632 ], [ %2485, %2771 ], [ %2794, %2928 ], [ %2785, %3067 ], [ %3101, %3240 ], [ %3092, %3380 ], [ %3403, %3538 ], [ %3394, %3678 ], [ %3712, %3851 ], [ %3703, %3991 ], [ %4014, %4149 ], [ %4005, %4289 ], [ %4326, %4464 ], [ %4317, %4603 ], [ %4626, %4760 ], [ %4617, %4899 ], [ %4933, %5072 ], [ %4924, %5212 ], [ %5235, %5370 ], [ %5226, %5510 ]
  %5517 = tail call i32 @Util_TableSetInt(i32 noundef %17, i32 noundef %5516, ptr noundef nonnull @.str.5) #3
  %5518 = tail call i32 @Util_TableSetReal(i32 noundef %17, double noundef nofpclass(nan inf) %5515, ptr noundef nonnull @.str.6) #3
  br label %5519

5519:                                             ; preds = %5065, %5150, %5205, %5363, %5448, %5503, %4457, %4542, %4596, %4753, %4838, %4892, %3844, %3929, %3984, %4142, %4227, %4282, %3233, %3318, %3373, %3531, %3616, %3671, %2625, %2709, %2764, %2921, %3005, %3060, %2015, %2100, %2155, %2313, %2398, %2453, %1407, %1491, %1546, %1703, %1787, %1842, %795, %879, %934, %1091, %1175, %1230, %188, %272, %327, %484, %568, %623, %5514
  %5520 = phi i32 [ 0, %5514 ], [ -1, %623 ], [ -1, %568 ], [ -1, %484 ], [ -1, %327 ], [ -1, %272 ], [ -1, %188 ], [ -1, %1230 ], [ -1, %1175 ], [ -1, %1091 ], [ -1, %934 ], [ -1, %879 ], [ -1, %795 ], [ -1, %1842 ], [ -1, %1787 ], [ -1, %1703 ], [ -1, %1546 ], [ -1, %1491 ], [ -1, %1407 ], [ -1, %2453 ], [ -1, %2398 ], [ -1, %2313 ], [ -1, %2155 ], [ -1, %2100 ], [ -1, %2015 ], [ -1, %3060 ], [ -1, %3005 ], [ -1, %2921 ], [ -1, %2764 ], [ -1, %2709 ], [ -1, %2625 ], [ -1, %3671 ], [ -1, %3616 ], [ -1, %3531 ], [ -1, %3373 ], [ -1, %3318 ], [ -1, %3233 ], [ -1, %4282 ], [ -1, %4227 ], [ -1, %4142 ], [ -1, %3984 ], [ -1, %3929 ], [ -1, %3844 ], [ -1, %4892 ], [ -1, %4838 ], [ -1, %4753 ], [ -1, %4596 ], [ -1, %4542 ], [ -1, %4457 ], [ -1, %5503 ], [ -1, %5448 ], [ -1, %5363 ], [ -1, %5205 ], [ -1, %5150 ], [ -1, %5065 ]
  ret i32 %5520
}

; Function Attrs: nounwind sspstrong uwtable
define dso_local i32 @LocalReduce_Max_REAL8(i32 noundef %0, i32 noundef %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3, ptr noundef %4, i32 noundef %5, ptr noundef %6, ptr noundef readonly %7, ptr noundef readonly %8, ptr nocapture noundef readonly %9, i32 noundef %10, ptr nocapture noundef readonly %11, ptr noundef readonly %12, i32 noundef %13, ptr nocapture noundef readonly %14, ptr nocapture noundef readonly %15, ptr nocapture noundef readonly %16, i32 noundef %17) local_unnamed_addr #0 {
  %19 = sext i32 %0 to i64
  %20 = getelementptr inbounds i32, ptr %15, i64 %19
  %21 = load i32, ptr %20, align 4, !tbaa !6
  switch i32 %21, label %5513 [
    i32 101, label %22
    i32 102, label %634
    i32 103, label %1241
    i32 104, label %1853
    i32 105, label %2464
    i32 106, label %3071
    i32 107, label %3682
    i32 108, label %4292
    i32 109, label %4903
  ]

22:                                               ; preds = %18
  %23 = getelementptr inbounds ptr, ptr %14, i64 %19
  %24 = load ptr, ptr %23, align 8, !tbaa !10
  %25 = getelementptr inbounds ptr, ptr %16, i64 %19
  %26 = load ptr, ptr %25, align 8, !tbaa !10
  %27 = load double, ptr %24, align 8, !tbaa !19
  %28 = fptoui double %27 to i8
  store i8 %28, ptr %26, align 1, !tbaa !12
  %29 = icmp eq i32 %13, 0
  br i1 %29, label %30, label %35

30:                                               ; preds = %22
  %31 = load double, ptr %24, align 8, !tbaa !19
  %32 = fptoui double %31 to i8
  %33 = icmp ult i8 %28, %32
  br i1 %33, label %34, label %5513

34:                                               ; preds = %30
  store i8 %32, ptr %26, align 1, !tbaa !12
  br label %5513

35:                                               ; preds = %22
  switch i32 %1, label %632 [
    i32 1, label %36
    i32 0, label %336
  ]

36:                                               ; preds = %35
  %37 = getelementptr inbounds i32, ptr %3, i64 %19
  %38 = load i32, ptr %37, align 4, !tbaa !6
  %39 = icmp eq i32 %38, 0
  %40 = icmp sgt i32 %5, 0
  br i1 %39, label %50, label %41

41:                                               ; preds = %36
  br i1 %40, label %42, label %5513

42:                                               ; preds = %41
  %43 = icmp sgt i32 %13, 1
  %44 = icmp sgt i32 %13, 0
  %45 = add i32 %13, -2
  %46 = zext i32 %45 to i64
  %47 = zext i32 %13 to i64
  %48 = add nuw i32 %5, 1
  %49 = icmp eq i32 %13, 1
  br label %197

50:                                               ; preds = %36
  br i1 %40, label %51, label %5513

51:                                               ; preds = %50
  %52 = icmp sgt i32 %13, 1
  %53 = icmp sgt i32 %13, 0
  %54 = add i32 %13, -2
  %55 = zext i32 %54 to i64
  %56 = zext i32 %13 to i64
  %57 = add nuw i32 %5, 1
  %58 = icmp eq i32 %13, 1
  br label %59

59:                                               ; preds = %51, %195
  %60 = phi i32 [ 0, %51 ], [ %147, %195 ]
  %61 = phi double [ 0.000000e+00, %51 ], [ %146, %195 ]
  %62 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %52, label %63, label %132

63:                                               ; preds = %59, %122
  %64 = phi i32 [ %131, %122 ], [ 0, %59 ]
  %65 = phi i64 [ %73, %122 ], [ %56, %59 ]
  %66 = phi i64 [ %130, %122 ], [ %55, %59 ]
  %67 = phi i32 [ %128, %122 ], [ %62, %59 ]
  %68 = sub i32 %54, %64
  %69 = tail call i32 @llvm.smin.i32(i32 %68, i32 0)
  %70 = sub i32 %68, %69
  %71 = zext i32 %70 to i64
  %72 = add nuw nsw i64 %71, 1
  %73 = add nsw i64 %65, -1
  %74 = icmp ult i32 %70, 31
  br i1 %74, label %110, label %75

75:                                               ; preds = %63
  %76 = and i64 %72, 8589934560
  %77 = sub i64 %66, %76
  br label %78

78:                                               ; preds = %78, %75
  %79 = phi i64 [ 0, %75 ], [ %102, %78 ]
  %80 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %75 ], [ %98, %78 ]
  %81 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %75 ], [ %99, %78 ]
  %82 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %75 ], [ %100, %78 ]
  %83 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %75 ], [ %101, %78 ]
  %84 = sub i64 %66, %79
  %85 = getelementptr inbounds i32, ptr %9, i64 %84
  %86 = getelementptr inbounds i32, ptr %85, i64 -7
  %87 = load <8 x i32>, ptr %86, align 4, !tbaa !6
  %88 = shufflevector <8 x i32> %87, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %89 = getelementptr inbounds i32, ptr %85, i64 -15
  %90 = load <8 x i32>, ptr %89, align 4, !tbaa !6
  %91 = shufflevector <8 x i32> %90, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %92 = getelementptr inbounds i32, ptr %85, i64 -23
  %93 = load <8 x i32>, ptr %92, align 4, !tbaa !6
  %94 = shufflevector <8 x i32> %93, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %95 = getelementptr inbounds i32, ptr %85, i64 -31
  %96 = load <8 x i32>, ptr %95, align 4, !tbaa !6
  %97 = shufflevector <8 x i32> %96, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %98 = mul <8 x i32> %88, %80
  %99 = mul <8 x i32> %91, %81
  %100 = mul <8 x i32> %94, %82
  %101 = mul <8 x i32> %97, %83
  %102 = add nuw i64 %79, 32
  %103 = icmp eq i64 %102, %76
  br i1 %103, label %104, label %78, !llvm.loop !1305

104:                                              ; preds = %78
  %105 = mul <8 x i32> %99, %98
  %106 = mul <8 x i32> %100, %105
  %107 = mul <8 x i32> %101, %106
  %108 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %107)
  %109 = icmp eq i64 %72, %76
  br i1 %109, label %122, label %110

110:                                              ; preds = %63, %104
  %111 = phi i64 [ %66, %63 ], [ %77, %104 ]
  %112 = phi i32 [ 1, %63 ], [ %108, %104 ]
  br label %113

113:                                              ; preds = %110, %113
  %114 = phi i64 [ %119, %113 ], [ %111, %110 ]
  %115 = phi i32 [ %118, %113 ], [ %112, %110 ]
  %116 = getelementptr inbounds i32, ptr %9, i64 %114
  %117 = load i32, ptr %116, align 4, !tbaa !6
  %118 = mul nsw i32 %117, %115
  %119 = add nsw i64 %114, -1
  %120 = trunc i64 %114 to i32
  %121 = icmp sgt i32 %120, 0
  br i1 %121, label %113, label %122, !llvm.loop !1306

122:                                              ; preds = %113, %104
  %123 = phi i32 [ %108, %104 ], [ %118, %113 ]
  %124 = and i64 %73, 4294967295
  %125 = getelementptr inbounds i32, ptr %6, i64 %124
  %126 = load i32, ptr %125, align 4, !tbaa !6
  %127 = mul nsw i32 %126, %123
  %128 = add nsw i32 %127, %67
  %129 = icmp sgt i64 %65, 2
  %130 = add nsw i64 %66, -1
  %131 = add i32 %64, 1
  br i1 %129, label %63, label %132, !llvm.loop !1307

132:                                              ; preds = %122, %59
  %133 = phi i32 [ %62, %59 ], [ %128, %122 ]
  %134 = sext i32 %133 to i64
  %135 = getelementptr inbounds double, ptr %2, i64 %134
  %136 = load double, ptr %135, align 8, !tbaa !19
  %137 = getelementptr inbounds double, ptr %24, i64 %134
  %138 = load double, ptr %137, align 8, !tbaa !19
  %139 = fptoui double %138 to i8
  %140 = fcmp fast ueq double %136, 0.000000e+00
  br i1 %140, label %145, label %141

141:                                              ; preds = %132
  %142 = load i8, ptr %26, align 1, !tbaa !12
  %143 = icmp ult i8 %142, %139
  br i1 %143, label %144, label %145

144:                                              ; preds = %141
  store i8 %139, ptr %26, align 1, !tbaa !12
  br label %145

145:                                              ; preds = %141, %144, %132
  %146 = fadd fast double %136, %61
  %147 = add nuw nsw i32 %60, 1
  br i1 %53, label %148, label %195

148:                                              ; preds = %145
  %149 = load i32, ptr %4, align 4, !tbaa !6
  %150 = load i32, ptr %12, align 4, !tbaa !6
  %151 = add nsw i32 %150, -1
  %152 = icmp slt i32 %149, %151
  br i1 %152, label %172, label %153

153:                                              ; preds = %148
  %154 = icmp eq i32 %149, %151
  br i1 %154, label %155, label %188

155:                                              ; preds = %153
  store i32 0, ptr %4, align 4, !tbaa !6
  %156 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %156, ptr %6, align 4, !tbaa !6
  br i1 %58, label %195, label %157

157:                                              ; preds = %155, %182
  %158 = phi i64 [ %186, %182 ], [ 1, %155 ]
  %159 = getelementptr inbounds i32, ptr %4, i64 %158
  %160 = load i32, ptr %159, align 4, !tbaa !6
  %161 = getelementptr inbounds i32, ptr %12, i64 %158
  %162 = load i32, ptr %161, align 4, !tbaa !6
  %163 = add nsw i32 %162, -1
  %164 = icmp slt i32 %160, %163
  br i1 %164, label %165, label %180

165:                                              ; preds = %157
  br i1 %152, label %172, label %166

166:                                              ; preds = %165
  %167 = getelementptr inbounds i32, ptr %7, i64 %158
  %168 = load i32, ptr %167, align 4, !tbaa !6
  %169 = getelementptr inbounds i32, ptr %6, i64 %158
  %170 = load i32, ptr %169, align 4, !tbaa !6
  %171 = add nsw i32 %170, %168
  store i32 %171, ptr %169, align 4, !tbaa !6
  br label %190

172:                                              ; preds = %148, %165
  %173 = phi i32 [ %160, %165 ], [ %149, %148 ]
  %174 = phi ptr [ %159, %165 ], [ %4, %148 ]
  %175 = phi i64 [ %158, %165 ], [ 0, %148 ]
  %176 = add nsw i32 %173, 1
  store i32 %176, ptr %174, align 4, !tbaa !6
  %177 = getelementptr inbounds i32, ptr %7, i64 %175
  %178 = load i32, ptr %177, align 4, !tbaa !6
  %179 = getelementptr inbounds i32, ptr %6, i64 %175
  br label %190

180:                                              ; preds = %157
  %181 = icmp eq i32 %160, %163
  br i1 %181, label %182, label %188

182:                                              ; preds = %180
  store i32 0, ptr %159, align 4, !tbaa !6
  %183 = getelementptr inbounds i32, ptr %8, i64 %158
  %184 = load i32, ptr %183, align 4, !tbaa !6
  %185 = getelementptr inbounds i32, ptr %6, i64 %158
  store i32 %184, ptr %185, align 4, !tbaa !6
  %186 = add nuw nsw i64 %158, 1
  %187 = icmp eq i64 %186, %56
  br i1 %187, label %195, label %157, !llvm.loop !1308

188:                                              ; preds = %153, %180
  %189 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1977, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5518

190:                                              ; preds = %166, %172
  %191 = phi ptr [ %179, %172 ], [ %159, %166 ]
  %192 = phi i32 [ %178, %172 ], [ 1, %166 ]
  %193 = load i32, ptr %191, align 4, !tbaa !6
  %194 = add nsw i32 %193, %192
  store i32 %194, ptr %191, align 4, !tbaa !6
  br label %195

195:                                              ; preds = %182, %190, %155, %145
  %196 = icmp eq i32 %147, %5
  br i1 %196, label %5513, label %59, !llvm.loop !1309

197:                                              ; preds = %42, %334
  %198 = phi i32 [ 0, %42 ], [ %283, %334 ]
  %199 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %43, label %200, label %269

200:                                              ; preds = %197, %259
  %201 = phi i32 [ %268, %259 ], [ 0, %197 ]
  %202 = phi i64 [ %210, %259 ], [ %47, %197 ]
  %203 = phi i64 [ %267, %259 ], [ %46, %197 ]
  %204 = phi i32 [ %265, %259 ], [ %199, %197 ]
  %205 = sub i32 %45, %201
  %206 = tail call i32 @llvm.smin.i32(i32 %205, i32 0)
  %207 = sub i32 %205, %206
  %208 = zext i32 %207 to i64
  %209 = add nuw nsw i64 %208, 1
  %210 = add nsw i64 %202, -1
  %211 = icmp ult i32 %207, 31
  br i1 %211, label %247, label %212

212:                                              ; preds = %200
  %213 = and i64 %209, 8589934560
  %214 = sub i64 %203, %213
  br label %215

215:                                              ; preds = %215, %212
  %216 = phi i64 [ 0, %212 ], [ %239, %215 ]
  %217 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %212 ], [ %235, %215 ]
  %218 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %212 ], [ %236, %215 ]
  %219 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %212 ], [ %237, %215 ]
  %220 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %212 ], [ %238, %215 ]
  %221 = sub i64 %203, %216
  %222 = getelementptr inbounds i32, ptr %11, i64 %221
  %223 = getelementptr inbounds i32, ptr %222, i64 -7
  %224 = load <8 x i32>, ptr %223, align 4, !tbaa !6
  %225 = shufflevector <8 x i32> %224, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %226 = getelementptr inbounds i32, ptr %222, i64 -15
  %227 = load <8 x i32>, ptr %226, align 4, !tbaa !6
  %228 = shufflevector <8 x i32> %227, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %229 = getelementptr inbounds i32, ptr %222, i64 -23
  %230 = load <8 x i32>, ptr %229, align 4, !tbaa !6
  %231 = shufflevector <8 x i32> %230, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %232 = getelementptr inbounds i32, ptr %222, i64 -31
  %233 = load <8 x i32>, ptr %232, align 4, !tbaa !6
  %234 = shufflevector <8 x i32> %233, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %235 = mul <8 x i32> %225, %217
  %236 = mul <8 x i32> %228, %218
  %237 = mul <8 x i32> %231, %219
  %238 = mul <8 x i32> %234, %220
  %239 = add nuw i64 %216, 32
  %240 = icmp eq i64 %239, %213
  br i1 %240, label %241, label %215, !llvm.loop !1310

241:                                              ; preds = %215
  %242 = mul <8 x i32> %236, %235
  %243 = mul <8 x i32> %237, %242
  %244 = mul <8 x i32> %238, %243
  %245 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %244)
  %246 = icmp eq i64 %209, %213
  br i1 %246, label %259, label %247

247:                                              ; preds = %200, %241
  %248 = phi i64 [ %203, %200 ], [ %214, %241 ]
  %249 = phi i32 [ 1, %200 ], [ %245, %241 ]
  br label %250

250:                                              ; preds = %247, %250
  %251 = phi i64 [ %256, %250 ], [ %248, %247 ]
  %252 = phi i32 [ %255, %250 ], [ %249, %247 ]
  %253 = getelementptr inbounds i32, ptr %11, i64 %251
  %254 = load i32, ptr %253, align 4, !tbaa !6
  %255 = mul nsw i32 %254, %252
  %256 = add nsw i64 %251, -1
  %257 = trunc i64 %251 to i32
  %258 = icmp sgt i32 %257, 0
  br i1 %258, label %250, label %259, !llvm.loop !1311

259:                                              ; preds = %250, %241
  %260 = phi i32 [ %245, %241 ], [ %255, %250 ]
  %261 = and i64 %210, 4294967295
  %262 = getelementptr inbounds i32, ptr %6, i64 %261
  %263 = load i32, ptr %262, align 4, !tbaa !6
  %264 = mul nsw i32 %263, %260
  %265 = add nsw i32 %264, %204
  %266 = icmp sgt i64 %202, 2
  %267 = add nsw i64 %203, -1
  %268 = add i32 %201, 1
  br i1 %266, label %200, label %269, !llvm.loop !1312

269:                                              ; preds = %259, %197
  %270 = phi i32 [ %199, %197 ], [ %265, %259 ]
  %271 = icmp slt i32 %270, %5
  br i1 %271, label %274, label %272

272:                                              ; preds = %269
  %273 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1977, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5518

274:                                              ; preds = %269
  %275 = sext i32 %270 to i64
  %276 = getelementptr inbounds double, ptr %24, i64 %275
  %277 = load double, ptr %276, align 8, !tbaa !19
  %278 = fptoui double %277 to i8
  %279 = load i8, ptr %26, align 1, !tbaa !12
  %280 = icmp ult i8 %279, %278
  br i1 %280, label %281, label %282

281:                                              ; preds = %274
  store i8 %278, ptr %26, align 1, !tbaa !12
  br label %282

282:                                              ; preds = %274, %281
  %283 = add nuw nsw i32 %198, 1
  br i1 %44, label %284, label %334

284:                                              ; preds = %282
  %285 = load i32, ptr %4, align 4, !tbaa !6
  %286 = load i32, ptr %12, align 4, !tbaa !6
  %287 = add nsw i32 %286, -1
  %288 = icmp slt i32 %285, %287
  br i1 %288, label %311, label %289

289:                                              ; preds = %284
  %290 = icmp eq i32 %285, %287
  br i1 %290, label %291, label %327

291:                                              ; preds = %289
  store i32 0, ptr %4, align 4, !tbaa !6
  %292 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %292, ptr %6, align 4, !tbaa !6
  br i1 %49, label %334, label %293

293:                                              ; preds = %291, %321
  %294 = phi i64 [ %325, %321 ], [ 1, %291 ]
  %295 = getelementptr inbounds i32, ptr %4, i64 %294
  %296 = load i32, ptr %295, align 4, !tbaa !6
  %297 = getelementptr inbounds i32, ptr %12, i64 %294
  %298 = load i32, ptr %297, align 4, !tbaa !6
  %299 = add nsw i32 %298, -1
  %300 = icmp slt i32 %296, %299
  br i1 %300, label %301, label %319

301:                                              ; preds = %293
  br i1 %288, label %311, label %302

302:                                              ; preds = %301
  %303 = shl i64 %294, 32
  %304 = add i64 %303, -4294967296
  %305 = ashr exact i64 %304, 32
  %306 = getelementptr inbounds i32, ptr %7, i64 %305
  %307 = load i32, ptr %306, align 4, !tbaa !6
  %308 = getelementptr inbounds i32, ptr %6, i64 %294
  %309 = load i32, ptr %308, align 4, !tbaa !6
  %310 = add nsw i32 %309, %307
  store i32 %310, ptr %308, align 4, !tbaa !6
  br label %329

311:                                              ; preds = %284, %301
  %312 = phi i32 [ %296, %301 ], [ %285, %284 ]
  %313 = phi ptr [ %295, %301 ], [ %4, %284 ]
  %314 = phi i64 [ %294, %301 ], [ 0, %284 ]
  %315 = add nsw i32 %312, 1
  store i32 %315, ptr %313, align 4, !tbaa !6
  %316 = getelementptr inbounds i32, ptr %7, i64 %314
  %317 = load i32, ptr %316, align 4, !tbaa !6
  %318 = getelementptr inbounds i32, ptr %6, i64 %314
  br label %329

319:                                              ; preds = %293
  %320 = icmp eq i32 %296, %299
  br i1 %320, label %321, label %327

321:                                              ; preds = %319
  store i32 0, ptr %295, align 4, !tbaa !6
  %322 = getelementptr inbounds i32, ptr %8, i64 %294
  %323 = load i32, ptr %322, align 4, !tbaa !6
  %324 = getelementptr inbounds i32, ptr %6, i64 %294
  store i32 %323, ptr %324, align 4, !tbaa !6
  %325 = add nuw nsw i64 %294, 1
  %326 = icmp eq i64 %325, %47
  br i1 %326, label %334, label %293, !llvm.loop !1313

327:                                              ; preds = %289, %319
  %328 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1977, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5518

329:                                              ; preds = %302, %311
  %330 = phi ptr [ %318, %311 ], [ %295, %302 ]
  %331 = phi i32 [ %317, %311 ], [ 1, %302 ]
  %332 = load i32, ptr %330, align 4, !tbaa !6
  %333 = add nsw i32 %332, %331
  store i32 %333, ptr %330, align 4, !tbaa !6
  br label %334

334:                                              ; preds = %321, %329, %291, %282
  %335 = icmp eq i32 %283, %5
  br i1 %335, label %5513, label %197, !llvm.loop !1314

336:                                              ; preds = %35
  %337 = getelementptr inbounds i32, ptr %3, i64 %19
  %338 = load i32, ptr %337, align 4, !tbaa !6
  %339 = icmp eq i32 %338, 0
  %340 = icmp sgt i32 %5, 0
  br i1 %339, label %350, label %341

341:                                              ; preds = %336
  br i1 %340, label %342, label %5513

342:                                              ; preds = %341
  %343 = icmp sgt i32 %13, 1
  %344 = icmp sgt i32 %13, 0
  %345 = add i32 %13, -2
  %346 = zext i32 %345 to i64
  %347 = zext i32 %13 to i64
  %348 = add nuw i32 %5, 1
  %349 = icmp eq i32 %13, 1
  br label %493

350:                                              ; preds = %336
  br i1 %340, label %351, label %5513

351:                                              ; preds = %350
  %352 = icmp sgt i32 %13, 1
  %353 = icmp sgt i32 %13, 0
  %354 = add i32 %13, -2
  %355 = zext i32 %354 to i64
  %356 = zext i32 %13 to i64
  %357 = add nuw i32 %5, 1
  %358 = icmp eq i32 %13, 1
  br label %359

359:                                              ; preds = %351, %491
  %360 = phi i32 [ 0, %351 ], [ %443, %491 ]
  %361 = phi double [ 0.000000e+00, %351 ], [ %442, %491 ]
  %362 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %352, label %363, label %432

363:                                              ; preds = %359, %422
  %364 = phi i32 [ %431, %422 ], [ 0, %359 ]
  %365 = phi i64 [ %373, %422 ], [ %356, %359 ]
  %366 = phi i64 [ %430, %422 ], [ %355, %359 ]
  %367 = phi i32 [ %428, %422 ], [ %362, %359 ]
  %368 = sub i32 %354, %364
  %369 = tail call i32 @llvm.smin.i32(i32 %368, i32 0)
  %370 = sub i32 %368, %369
  %371 = zext i32 %370 to i64
  %372 = add nuw nsw i64 %371, 1
  %373 = add nsw i64 %365, -1
  %374 = icmp ult i32 %370, 31
  br i1 %374, label %410, label %375

375:                                              ; preds = %363
  %376 = and i64 %372, 8589934560
  %377 = sub i64 %366, %376
  br label %378

378:                                              ; preds = %378, %375
  %379 = phi i64 [ 0, %375 ], [ %402, %378 ]
  %380 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %375 ], [ %398, %378 ]
  %381 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %375 ], [ %399, %378 ]
  %382 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %375 ], [ %400, %378 ]
  %383 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %375 ], [ %401, %378 ]
  %384 = sub i64 %366, %379
  %385 = getelementptr inbounds i32, ptr %9, i64 %384
  %386 = getelementptr inbounds i32, ptr %385, i64 -7
  %387 = load <8 x i32>, ptr %386, align 4, !tbaa !6
  %388 = shufflevector <8 x i32> %387, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %389 = getelementptr inbounds i32, ptr %385, i64 -15
  %390 = load <8 x i32>, ptr %389, align 4, !tbaa !6
  %391 = shufflevector <8 x i32> %390, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %392 = getelementptr inbounds i32, ptr %385, i64 -23
  %393 = load <8 x i32>, ptr %392, align 4, !tbaa !6
  %394 = shufflevector <8 x i32> %393, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %395 = getelementptr inbounds i32, ptr %385, i64 -31
  %396 = load <8 x i32>, ptr %395, align 4, !tbaa !6
  %397 = shufflevector <8 x i32> %396, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %398 = mul <8 x i32> %388, %380
  %399 = mul <8 x i32> %391, %381
  %400 = mul <8 x i32> %394, %382
  %401 = mul <8 x i32> %397, %383
  %402 = add nuw i64 %379, 32
  %403 = icmp eq i64 %402, %376
  br i1 %403, label %404, label %378, !llvm.loop !1315

404:                                              ; preds = %378
  %405 = mul <8 x i32> %399, %398
  %406 = mul <8 x i32> %400, %405
  %407 = mul <8 x i32> %401, %406
  %408 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %407)
  %409 = icmp eq i64 %372, %376
  br i1 %409, label %422, label %410

410:                                              ; preds = %363, %404
  %411 = phi i64 [ %366, %363 ], [ %377, %404 ]
  %412 = phi i32 [ 1, %363 ], [ %408, %404 ]
  br label %413

413:                                              ; preds = %410, %413
  %414 = phi i64 [ %419, %413 ], [ %411, %410 ]
  %415 = phi i32 [ %418, %413 ], [ %412, %410 ]
  %416 = getelementptr inbounds i32, ptr %9, i64 %414
  %417 = load i32, ptr %416, align 4, !tbaa !6
  %418 = mul nsw i32 %417, %415
  %419 = add nsw i64 %414, -1
  %420 = trunc i64 %414 to i32
  %421 = icmp sgt i32 %420, 0
  br i1 %421, label %413, label %422, !llvm.loop !1316

422:                                              ; preds = %413, %404
  %423 = phi i32 [ %408, %404 ], [ %418, %413 ]
  %424 = and i64 %373, 4294967295
  %425 = getelementptr inbounds i32, ptr %6, i64 %424
  %426 = load i32, ptr %425, align 4, !tbaa !6
  %427 = mul nsw i32 %426, %423
  %428 = add nsw i32 %427, %367
  %429 = icmp sgt i64 %365, 2
  %430 = add nsw i64 %366, -1
  %431 = add i32 %364, 1
  br i1 %429, label %363, label %432, !llvm.loop !1317

432:                                              ; preds = %422, %359
  %433 = phi i32 [ %362, %359 ], [ %428, %422 ]
  %434 = sext i32 %433 to i64
  %435 = getelementptr inbounds double, ptr %24, i64 %434
  %436 = load double, ptr %435, align 8, !tbaa !19
  %437 = fptoui double %436 to i8
  %438 = load i8, ptr %26, align 1, !tbaa !12
  %439 = icmp ult i8 %438, %437
  br i1 %439, label %440, label %441

440:                                              ; preds = %432
  store i8 %437, ptr %26, align 1, !tbaa !12
  br label %441

441:                                              ; preds = %440, %432
  %442 = fadd fast double %361, 1.000000e+00
  %443 = add nuw nsw i32 %360, 1
  br i1 %353, label %444, label %491

444:                                              ; preds = %441
  %445 = load i32, ptr %4, align 4, !tbaa !6
  %446 = load i32, ptr %12, align 4, !tbaa !6
  %447 = add nsw i32 %446, -1
  %448 = icmp slt i32 %445, %447
  br i1 %448, label %468, label %449

449:                                              ; preds = %444
  %450 = icmp eq i32 %445, %447
  br i1 %450, label %451, label %484

451:                                              ; preds = %449
  store i32 0, ptr %4, align 4, !tbaa !6
  %452 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %452, ptr %6, align 4, !tbaa !6
  br i1 %358, label %491, label %453

453:                                              ; preds = %451, %478
  %454 = phi i64 [ %482, %478 ], [ 1, %451 ]
  %455 = getelementptr inbounds i32, ptr %4, i64 %454
  %456 = load i32, ptr %455, align 4, !tbaa !6
  %457 = getelementptr inbounds i32, ptr %12, i64 %454
  %458 = load i32, ptr %457, align 4, !tbaa !6
  %459 = add nsw i32 %458, -1
  %460 = icmp slt i32 %456, %459
  br i1 %460, label %461, label %476

461:                                              ; preds = %453
  br i1 %448, label %468, label %462

462:                                              ; preds = %461
  %463 = getelementptr inbounds i32, ptr %7, i64 %454
  %464 = load i32, ptr %463, align 4, !tbaa !6
  %465 = getelementptr inbounds i32, ptr %6, i64 %454
  %466 = load i32, ptr %465, align 4, !tbaa !6
  %467 = add nsw i32 %466, %464
  store i32 %467, ptr %465, align 4, !tbaa !6
  br label %486

468:                                              ; preds = %444, %461
  %469 = phi i32 [ %456, %461 ], [ %445, %444 ]
  %470 = phi ptr [ %455, %461 ], [ %4, %444 ]
  %471 = phi i64 [ %454, %461 ], [ 0, %444 ]
  %472 = add nsw i32 %469, 1
  store i32 %472, ptr %470, align 4, !tbaa !6
  %473 = getelementptr inbounds i32, ptr %7, i64 %471
  %474 = load i32, ptr %473, align 4, !tbaa !6
  %475 = getelementptr inbounds i32, ptr %6, i64 %471
  br label %486

476:                                              ; preds = %453
  %477 = icmp eq i32 %456, %459
  br i1 %477, label %478, label %484

478:                                              ; preds = %476
  store i32 0, ptr %455, align 4, !tbaa !6
  %479 = getelementptr inbounds i32, ptr %8, i64 %454
  %480 = load i32, ptr %479, align 4, !tbaa !6
  %481 = getelementptr inbounds i32, ptr %6, i64 %454
  store i32 %480, ptr %481, align 4, !tbaa !6
  %482 = add nuw nsw i64 %454, 1
  %483 = icmp eq i64 %482, %356
  br i1 %483, label %491, label %453, !llvm.loop !1318

484:                                              ; preds = %449, %476
  %485 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1977, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5518

486:                                              ; preds = %462, %468
  %487 = phi ptr [ %475, %468 ], [ %455, %462 ]
  %488 = phi i32 [ %474, %468 ], [ 1, %462 ]
  %489 = load i32, ptr %487, align 4, !tbaa !6
  %490 = add nsw i32 %489, %488
  store i32 %490, ptr %487, align 4, !tbaa !6
  br label %491

491:                                              ; preds = %478, %486, %451, %441
  %492 = icmp eq i32 %443, %5
  br i1 %492, label %5513, label %359, !llvm.loop !1319

493:                                              ; preds = %342, %630
  %494 = phi i32 [ 0, %342 ], [ %579, %630 ]
  %495 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %343, label %496, label %565

496:                                              ; preds = %493, %555
  %497 = phi i32 [ %564, %555 ], [ 0, %493 ]
  %498 = phi i64 [ %506, %555 ], [ %347, %493 ]
  %499 = phi i64 [ %563, %555 ], [ %346, %493 ]
  %500 = phi i32 [ %561, %555 ], [ %495, %493 ]
  %501 = sub i32 %345, %497
  %502 = tail call i32 @llvm.smin.i32(i32 %501, i32 0)
  %503 = sub i32 %501, %502
  %504 = zext i32 %503 to i64
  %505 = add nuw nsw i64 %504, 1
  %506 = add nsw i64 %498, -1
  %507 = icmp ult i32 %503, 31
  br i1 %507, label %543, label %508

508:                                              ; preds = %496
  %509 = and i64 %505, 8589934560
  %510 = sub i64 %499, %509
  br label %511

511:                                              ; preds = %511, %508
  %512 = phi i64 [ 0, %508 ], [ %535, %511 ]
  %513 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %508 ], [ %531, %511 ]
  %514 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %508 ], [ %532, %511 ]
  %515 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %508 ], [ %533, %511 ]
  %516 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %508 ], [ %534, %511 ]
  %517 = sub i64 %499, %512
  %518 = getelementptr inbounds i32, ptr %11, i64 %517
  %519 = getelementptr inbounds i32, ptr %518, i64 -7
  %520 = load <8 x i32>, ptr %519, align 4, !tbaa !6
  %521 = shufflevector <8 x i32> %520, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %522 = getelementptr inbounds i32, ptr %518, i64 -15
  %523 = load <8 x i32>, ptr %522, align 4, !tbaa !6
  %524 = shufflevector <8 x i32> %523, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %525 = getelementptr inbounds i32, ptr %518, i64 -23
  %526 = load <8 x i32>, ptr %525, align 4, !tbaa !6
  %527 = shufflevector <8 x i32> %526, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %528 = getelementptr inbounds i32, ptr %518, i64 -31
  %529 = load <8 x i32>, ptr %528, align 4, !tbaa !6
  %530 = shufflevector <8 x i32> %529, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %531 = mul <8 x i32> %521, %513
  %532 = mul <8 x i32> %524, %514
  %533 = mul <8 x i32> %527, %515
  %534 = mul <8 x i32> %530, %516
  %535 = add nuw i64 %512, 32
  %536 = icmp eq i64 %535, %509
  br i1 %536, label %537, label %511, !llvm.loop !1320

537:                                              ; preds = %511
  %538 = mul <8 x i32> %532, %531
  %539 = mul <8 x i32> %533, %538
  %540 = mul <8 x i32> %534, %539
  %541 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %540)
  %542 = icmp eq i64 %505, %509
  br i1 %542, label %555, label %543

543:                                              ; preds = %496, %537
  %544 = phi i64 [ %499, %496 ], [ %510, %537 ]
  %545 = phi i32 [ 1, %496 ], [ %541, %537 ]
  br label %546

546:                                              ; preds = %543, %546
  %547 = phi i64 [ %552, %546 ], [ %544, %543 ]
  %548 = phi i32 [ %551, %546 ], [ %545, %543 ]
  %549 = getelementptr inbounds i32, ptr %11, i64 %547
  %550 = load i32, ptr %549, align 4, !tbaa !6
  %551 = mul nsw i32 %550, %548
  %552 = add nsw i64 %547, -1
  %553 = trunc i64 %547 to i32
  %554 = icmp sgt i32 %553, 0
  br i1 %554, label %546, label %555, !llvm.loop !1321

555:                                              ; preds = %546, %537
  %556 = phi i32 [ %541, %537 ], [ %551, %546 ]
  %557 = and i64 %506, 4294967295
  %558 = getelementptr inbounds i32, ptr %6, i64 %557
  %559 = load i32, ptr %558, align 4, !tbaa !6
  %560 = mul nsw i32 %559, %556
  %561 = add nsw i32 %560, %500
  %562 = icmp sgt i64 %498, 2
  %563 = add nsw i64 %499, -1
  %564 = add i32 %497, 1
  br i1 %562, label %496, label %565, !llvm.loop !1322

565:                                              ; preds = %555, %493
  %566 = phi i32 [ %495, %493 ], [ %561, %555 ]
  %567 = icmp slt i32 %566, %5
  br i1 %567, label %570, label %568

568:                                              ; preds = %565
  %569 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1977, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5518

570:                                              ; preds = %565
  %571 = sext i32 %566 to i64
  %572 = getelementptr inbounds double, ptr %24, i64 %571
  %573 = load double, ptr %572, align 8, !tbaa !19
  %574 = fptoui double %573 to i8
  %575 = load i8, ptr %26, align 1, !tbaa !12
  %576 = icmp ult i8 %575, %574
  br i1 %576, label %577, label %578

577:                                              ; preds = %570
  store i8 %574, ptr %26, align 1, !tbaa !12
  br label %578

578:                                              ; preds = %577, %570
  %579 = add nuw nsw i32 %494, 1
  br i1 %344, label %580, label %630

580:                                              ; preds = %578
  %581 = load i32, ptr %4, align 4, !tbaa !6
  %582 = load i32, ptr %12, align 4, !tbaa !6
  %583 = add nsw i32 %582, -1
  %584 = icmp slt i32 %581, %583
  br i1 %584, label %607, label %585

585:                                              ; preds = %580
  %586 = icmp eq i32 %581, %583
  br i1 %586, label %587, label %623

587:                                              ; preds = %585
  store i32 0, ptr %4, align 4, !tbaa !6
  %588 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %588, ptr %6, align 4, !tbaa !6
  br i1 %349, label %630, label %589

589:                                              ; preds = %587, %617
  %590 = phi i64 [ %621, %617 ], [ 1, %587 ]
  %591 = getelementptr inbounds i32, ptr %4, i64 %590
  %592 = load i32, ptr %591, align 4, !tbaa !6
  %593 = getelementptr inbounds i32, ptr %12, i64 %590
  %594 = load i32, ptr %593, align 4, !tbaa !6
  %595 = add nsw i32 %594, -1
  %596 = icmp slt i32 %592, %595
  br i1 %596, label %597, label %615

597:                                              ; preds = %589
  br i1 %584, label %607, label %598

598:                                              ; preds = %597
  %599 = shl i64 %590, 32
  %600 = add i64 %599, -4294967296
  %601 = ashr exact i64 %600, 32
  %602 = getelementptr inbounds i32, ptr %7, i64 %601
  %603 = load i32, ptr %602, align 4, !tbaa !6
  %604 = getelementptr inbounds i32, ptr %6, i64 %590
  %605 = load i32, ptr %604, align 4, !tbaa !6
  %606 = add nsw i32 %605, %603
  store i32 %606, ptr %604, align 4, !tbaa !6
  br label %625

607:                                              ; preds = %580, %597
  %608 = phi i32 [ %592, %597 ], [ %581, %580 ]
  %609 = phi ptr [ %591, %597 ], [ %4, %580 ]
  %610 = phi i64 [ %590, %597 ], [ 0, %580 ]
  %611 = add nsw i32 %608, 1
  store i32 %611, ptr %609, align 4, !tbaa !6
  %612 = getelementptr inbounds i32, ptr %7, i64 %610
  %613 = load i32, ptr %612, align 4, !tbaa !6
  %614 = getelementptr inbounds i32, ptr %6, i64 %610
  br label %625

615:                                              ; preds = %589
  %616 = icmp eq i32 %592, %595
  br i1 %616, label %617, label %623

617:                                              ; preds = %615
  store i32 0, ptr %591, align 4, !tbaa !6
  %618 = getelementptr inbounds i32, ptr %8, i64 %590
  %619 = load i32, ptr %618, align 4, !tbaa !6
  %620 = getelementptr inbounds i32, ptr %6, i64 %590
  store i32 %619, ptr %620, align 4, !tbaa !6
  %621 = add nuw nsw i64 %590, 1
  %622 = icmp eq i64 %621, %347
  br i1 %622, label %630, label %589, !llvm.loop !1323

623:                                              ; preds = %585, %615
  %624 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1977, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5518

625:                                              ; preds = %598, %607
  %626 = phi ptr [ %614, %607 ], [ %591, %598 ]
  %627 = phi i32 [ %613, %607 ], [ 1, %598 ]
  %628 = load i32, ptr %626, align 4, !tbaa !6
  %629 = add nsw i32 %628, %627
  store i32 %629, ptr %626, align 4, !tbaa !6
  br label %630

630:                                              ; preds = %617, %625, %587, %578
  %631 = icmp eq i32 %579, %5
  br i1 %631, label %5513, label %493, !llvm.loop !1324

632:                                              ; preds = %35
  %633 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1977, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5513

634:                                              ; preds = %18
  %635 = getelementptr inbounds ptr, ptr %14, i64 %19
  %636 = load ptr, ptr %635, align 8, !tbaa !10
  %637 = getelementptr inbounds ptr, ptr %16, i64 %19
  %638 = load ptr, ptr %637, align 8, !tbaa !10
  %639 = load double, ptr %636, align 8, !tbaa !19
  %640 = fptosi double %639 to i32
  store i32 %640, ptr %638, align 4, !tbaa !6
  %641 = icmp eq i32 %13, 0
  br i1 %641, label %5513, label %642

642:                                              ; preds = %634
  switch i32 %1, label %1239 [
    i32 1, label %643
    i32 0, label %943
  ]

643:                                              ; preds = %642
  %644 = getelementptr inbounds i32, ptr %3, i64 %19
  %645 = load i32, ptr %644, align 4, !tbaa !6
  %646 = icmp eq i32 %645, 0
  %647 = icmp sgt i32 %5, 0
  br i1 %646, label %657, label %648

648:                                              ; preds = %643
  br i1 %647, label %649, label %5513

649:                                              ; preds = %648
  %650 = icmp sgt i32 %13, 1
  %651 = icmp sgt i32 %13, 0
  %652 = add i32 %13, -2
  %653 = zext i32 %652 to i64
  %654 = zext i32 %13 to i64
  %655 = add nuw i32 %5, 1
  %656 = icmp eq i32 %13, 1
  br label %804

657:                                              ; preds = %643
  br i1 %647, label %658, label %5513

658:                                              ; preds = %657
  %659 = icmp sgt i32 %13, 1
  %660 = icmp sgt i32 %13, 0
  %661 = add i32 %13, -2
  %662 = zext i32 %661 to i64
  %663 = zext i32 %13 to i64
  %664 = add nuw i32 %5, 1
  %665 = icmp eq i32 %13, 1
  br label %666

666:                                              ; preds = %658, %802
  %667 = phi i32 [ 0, %658 ], [ %754, %802 ]
  %668 = phi double [ 0.000000e+00, %658 ], [ %753, %802 ]
  %669 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %659, label %670, label %739

670:                                              ; preds = %666, %729
  %671 = phi i32 [ %738, %729 ], [ 0, %666 ]
  %672 = phi i64 [ %680, %729 ], [ %663, %666 ]
  %673 = phi i64 [ %737, %729 ], [ %662, %666 ]
  %674 = phi i32 [ %735, %729 ], [ %669, %666 ]
  %675 = sub i32 %661, %671
  %676 = tail call i32 @llvm.smin.i32(i32 %675, i32 0)
  %677 = sub i32 %675, %676
  %678 = zext i32 %677 to i64
  %679 = add nuw nsw i64 %678, 1
  %680 = add nsw i64 %672, -1
  %681 = icmp ult i32 %677, 31
  br i1 %681, label %717, label %682

682:                                              ; preds = %670
  %683 = and i64 %679, 8589934560
  %684 = sub i64 %673, %683
  br label %685

685:                                              ; preds = %685, %682
  %686 = phi i64 [ 0, %682 ], [ %709, %685 ]
  %687 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %682 ], [ %705, %685 ]
  %688 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %682 ], [ %706, %685 ]
  %689 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %682 ], [ %707, %685 ]
  %690 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %682 ], [ %708, %685 ]
  %691 = sub i64 %673, %686
  %692 = getelementptr inbounds i32, ptr %9, i64 %691
  %693 = getelementptr inbounds i32, ptr %692, i64 -7
  %694 = load <8 x i32>, ptr %693, align 4, !tbaa !6
  %695 = shufflevector <8 x i32> %694, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %696 = getelementptr inbounds i32, ptr %692, i64 -15
  %697 = load <8 x i32>, ptr %696, align 4, !tbaa !6
  %698 = shufflevector <8 x i32> %697, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %699 = getelementptr inbounds i32, ptr %692, i64 -23
  %700 = load <8 x i32>, ptr %699, align 4, !tbaa !6
  %701 = shufflevector <8 x i32> %700, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %702 = getelementptr inbounds i32, ptr %692, i64 -31
  %703 = load <8 x i32>, ptr %702, align 4, !tbaa !6
  %704 = shufflevector <8 x i32> %703, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %705 = mul <8 x i32> %695, %687
  %706 = mul <8 x i32> %698, %688
  %707 = mul <8 x i32> %701, %689
  %708 = mul <8 x i32> %704, %690
  %709 = add nuw i64 %686, 32
  %710 = icmp eq i64 %709, %683
  br i1 %710, label %711, label %685, !llvm.loop !1325

711:                                              ; preds = %685
  %712 = mul <8 x i32> %706, %705
  %713 = mul <8 x i32> %707, %712
  %714 = mul <8 x i32> %708, %713
  %715 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %714)
  %716 = icmp eq i64 %679, %683
  br i1 %716, label %729, label %717

717:                                              ; preds = %670, %711
  %718 = phi i64 [ %673, %670 ], [ %684, %711 ]
  %719 = phi i32 [ 1, %670 ], [ %715, %711 ]
  br label %720

720:                                              ; preds = %717, %720
  %721 = phi i64 [ %726, %720 ], [ %718, %717 ]
  %722 = phi i32 [ %725, %720 ], [ %719, %717 ]
  %723 = getelementptr inbounds i32, ptr %9, i64 %721
  %724 = load i32, ptr %723, align 4, !tbaa !6
  %725 = mul nsw i32 %724, %722
  %726 = add nsw i64 %721, -1
  %727 = trunc i64 %721 to i32
  %728 = icmp sgt i32 %727, 0
  br i1 %728, label %720, label %729, !llvm.loop !1326

729:                                              ; preds = %720, %711
  %730 = phi i32 [ %715, %711 ], [ %725, %720 ]
  %731 = and i64 %680, 4294967295
  %732 = getelementptr inbounds i32, ptr %6, i64 %731
  %733 = load i32, ptr %732, align 4, !tbaa !6
  %734 = mul nsw i32 %733, %730
  %735 = add nsw i32 %734, %674
  %736 = icmp sgt i64 %672, 2
  %737 = add nsw i64 %673, -1
  %738 = add i32 %671, 1
  br i1 %736, label %670, label %739, !llvm.loop !1327

739:                                              ; preds = %729, %666
  %740 = phi i32 [ %669, %666 ], [ %735, %729 ]
  %741 = sext i32 %740 to i64
  %742 = getelementptr inbounds double, ptr %2, i64 %741
  %743 = load double, ptr %742, align 8, !tbaa !19
  %744 = getelementptr inbounds double, ptr %636, i64 %741
  %745 = load double, ptr %744, align 8, !tbaa !19
  %746 = fptosi double %745 to i32
  %747 = fcmp fast ueq double %743, 0.000000e+00
  br i1 %747, label %752, label %748

748:                                              ; preds = %739
  %749 = load i32, ptr %638, align 4, !tbaa !6
  %750 = icmp slt i32 %749, %746
  br i1 %750, label %751, label %752

751:                                              ; preds = %748
  store i32 %746, ptr %638, align 4, !tbaa !6
  br label %752

752:                                              ; preds = %748, %751, %739
  %753 = fadd fast double %743, %668
  %754 = add nuw nsw i32 %667, 1
  br i1 %660, label %755, label %802

755:                                              ; preds = %752
  %756 = load i32, ptr %4, align 4, !tbaa !6
  %757 = load i32, ptr %12, align 4, !tbaa !6
  %758 = add nsw i32 %757, -1
  %759 = icmp slt i32 %756, %758
  br i1 %759, label %779, label %760

760:                                              ; preds = %755
  %761 = icmp eq i32 %756, %758
  br i1 %761, label %762, label %795

762:                                              ; preds = %760
  store i32 0, ptr %4, align 4, !tbaa !6
  %763 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %763, ptr %6, align 4, !tbaa !6
  br i1 %665, label %802, label %764

764:                                              ; preds = %762, %789
  %765 = phi i64 [ %793, %789 ], [ 1, %762 ]
  %766 = getelementptr inbounds i32, ptr %4, i64 %765
  %767 = load i32, ptr %766, align 4, !tbaa !6
  %768 = getelementptr inbounds i32, ptr %12, i64 %765
  %769 = load i32, ptr %768, align 4, !tbaa !6
  %770 = add nsw i32 %769, -1
  %771 = icmp slt i32 %767, %770
  br i1 %771, label %772, label %787

772:                                              ; preds = %764
  br i1 %759, label %779, label %773

773:                                              ; preds = %772
  %774 = getelementptr inbounds i32, ptr %7, i64 %765
  %775 = load i32, ptr %774, align 4, !tbaa !6
  %776 = getelementptr inbounds i32, ptr %6, i64 %765
  %777 = load i32, ptr %776, align 4, !tbaa !6
  %778 = add nsw i32 %777, %775
  store i32 %778, ptr %776, align 4, !tbaa !6
  br label %797

779:                                              ; preds = %755, %772
  %780 = phi i32 [ %767, %772 ], [ %756, %755 ]
  %781 = phi ptr [ %766, %772 ], [ %4, %755 ]
  %782 = phi i64 [ %765, %772 ], [ 0, %755 ]
  %783 = add nsw i32 %780, 1
  store i32 %783, ptr %781, align 4, !tbaa !6
  %784 = getelementptr inbounds i32, ptr %7, i64 %782
  %785 = load i32, ptr %784, align 4, !tbaa !6
  %786 = getelementptr inbounds i32, ptr %6, i64 %782
  br label %797

787:                                              ; preds = %764
  %788 = icmp eq i32 %767, %770
  br i1 %788, label %789, label %795

789:                                              ; preds = %787
  store i32 0, ptr %766, align 4, !tbaa !6
  %790 = getelementptr inbounds i32, ptr %8, i64 %765
  %791 = load i32, ptr %790, align 4, !tbaa !6
  %792 = getelementptr inbounds i32, ptr %6, i64 %765
  store i32 %791, ptr %792, align 4, !tbaa !6
  %793 = add nuw nsw i64 %765, 1
  %794 = icmp eq i64 %793, %663
  br i1 %794, label %802, label %764, !llvm.loop !1328

795:                                              ; preds = %760, %787
  %796 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1980, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5518

797:                                              ; preds = %773, %779
  %798 = phi ptr [ %786, %779 ], [ %766, %773 ]
  %799 = phi i32 [ %785, %779 ], [ 1, %773 ]
  %800 = load i32, ptr %798, align 4, !tbaa !6
  %801 = add nsw i32 %800, %799
  store i32 %801, ptr %798, align 4, !tbaa !6
  br label %802

802:                                              ; preds = %789, %797, %762, %752
  %803 = icmp eq i32 %754, %5
  br i1 %803, label %5513, label %666, !llvm.loop !1329

804:                                              ; preds = %649, %941
  %805 = phi i32 [ 0, %649 ], [ %890, %941 ]
  %806 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %650, label %807, label %876

807:                                              ; preds = %804, %866
  %808 = phi i32 [ %875, %866 ], [ 0, %804 ]
  %809 = phi i64 [ %817, %866 ], [ %654, %804 ]
  %810 = phi i64 [ %874, %866 ], [ %653, %804 ]
  %811 = phi i32 [ %872, %866 ], [ %806, %804 ]
  %812 = sub i32 %652, %808
  %813 = tail call i32 @llvm.smin.i32(i32 %812, i32 0)
  %814 = sub i32 %812, %813
  %815 = zext i32 %814 to i64
  %816 = add nuw nsw i64 %815, 1
  %817 = add nsw i64 %809, -1
  %818 = icmp ult i32 %814, 31
  br i1 %818, label %854, label %819

819:                                              ; preds = %807
  %820 = and i64 %816, 8589934560
  %821 = sub i64 %810, %820
  br label %822

822:                                              ; preds = %822, %819
  %823 = phi i64 [ 0, %819 ], [ %846, %822 ]
  %824 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %819 ], [ %842, %822 ]
  %825 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %819 ], [ %843, %822 ]
  %826 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %819 ], [ %844, %822 ]
  %827 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %819 ], [ %845, %822 ]
  %828 = sub i64 %810, %823
  %829 = getelementptr inbounds i32, ptr %11, i64 %828
  %830 = getelementptr inbounds i32, ptr %829, i64 -7
  %831 = load <8 x i32>, ptr %830, align 4, !tbaa !6
  %832 = shufflevector <8 x i32> %831, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %833 = getelementptr inbounds i32, ptr %829, i64 -15
  %834 = load <8 x i32>, ptr %833, align 4, !tbaa !6
  %835 = shufflevector <8 x i32> %834, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %836 = getelementptr inbounds i32, ptr %829, i64 -23
  %837 = load <8 x i32>, ptr %836, align 4, !tbaa !6
  %838 = shufflevector <8 x i32> %837, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %839 = getelementptr inbounds i32, ptr %829, i64 -31
  %840 = load <8 x i32>, ptr %839, align 4, !tbaa !6
  %841 = shufflevector <8 x i32> %840, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %842 = mul <8 x i32> %832, %824
  %843 = mul <8 x i32> %835, %825
  %844 = mul <8 x i32> %838, %826
  %845 = mul <8 x i32> %841, %827
  %846 = add nuw i64 %823, 32
  %847 = icmp eq i64 %846, %820
  br i1 %847, label %848, label %822, !llvm.loop !1330

848:                                              ; preds = %822
  %849 = mul <8 x i32> %843, %842
  %850 = mul <8 x i32> %844, %849
  %851 = mul <8 x i32> %845, %850
  %852 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %851)
  %853 = icmp eq i64 %816, %820
  br i1 %853, label %866, label %854

854:                                              ; preds = %807, %848
  %855 = phi i64 [ %810, %807 ], [ %821, %848 ]
  %856 = phi i32 [ 1, %807 ], [ %852, %848 ]
  br label %857

857:                                              ; preds = %854, %857
  %858 = phi i64 [ %863, %857 ], [ %855, %854 ]
  %859 = phi i32 [ %862, %857 ], [ %856, %854 ]
  %860 = getelementptr inbounds i32, ptr %11, i64 %858
  %861 = load i32, ptr %860, align 4, !tbaa !6
  %862 = mul nsw i32 %861, %859
  %863 = add nsw i64 %858, -1
  %864 = trunc i64 %858 to i32
  %865 = icmp sgt i32 %864, 0
  br i1 %865, label %857, label %866, !llvm.loop !1331

866:                                              ; preds = %857, %848
  %867 = phi i32 [ %852, %848 ], [ %862, %857 ]
  %868 = and i64 %817, 4294967295
  %869 = getelementptr inbounds i32, ptr %6, i64 %868
  %870 = load i32, ptr %869, align 4, !tbaa !6
  %871 = mul nsw i32 %870, %867
  %872 = add nsw i32 %871, %811
  %873 = icmp sgt i64 %809, 2
  %874 = add nsw i64 %810, -1
  %875 = add i32 %808, 1
  br i1 %873, label %807, label %876, !llvm.loop !1332

876:                                              ; preds = %866, %804
  %877 = phi i32 [ %806, %804 ], [ %872, %866 ]
  %878 = icmp slt i32 %877, %5
  br i1 %878, label %881, label %879

879:                                              ; preds = %876
  %880 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1980, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5518

881:                                              ; preds = %876
  %882 = sext i32 %877 to i64
  %883 = getelementptr inbounds double, ptr %636, i64 %882
  %884 = load double, ptr %883, align 8, !tbaa !19
  %885 = fptosi double %884 to i32
  %886 = load i32, ptr %638, align 4, !tbaa !6
  %887 = icmp slt i32 %886, %885
  br i1 %887, label %888, label %889

888:                                              ; preds = %881
  store i32 %885, ptr %638, align 4, !tbaa !6
  br label %889

889:                                              ; preds = %881, %888
  %890 = add nuw nsw i32 %805, 1
  br i1 %651, label %891, label %941

891:                                              ; preds = %889
  %892 = load i32, ptr %4, align 4, !tbaa !6
  %893 = load i32, ptr %12, align 4, !tbaa !6
  %894 = add nsw i32 %893, -1
  %895 = icmp slt i32 %892, %894
  br i1 %895, label %918, label %896

896:                                              ; preds = %891
  %897 = icmp eq i32 %892, %894
  br i1 %897, label %898, label %934

898:                                              ; preds = %896
  store i32 0, ptr %4, align 4, !tbaa !6
  %899 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %899, ptr %6, align 4, !tbaa !6
  br i1 %656, label %941, label %900

900:                                              ; preds = %898, %928
  %901 = phi i64 [ %932, %928 ], [ 1, %898 ]
  %902 = getelementptr inbounds i32, ptr %4, i64 %901
  %903 = load i32, ptr %902, align 4, !tbaa !6
  %904 = getelementptr inbounds i32, ptr %12, i64 %901
  %905 = load i32, ptr %904, align 4, !tbaa !6
  %906 = add nsw i32 %905, -1
  %907 = icmp slt i32 %903, %906
  br i1 %907, label %908, label %926

908:                                              ; preds = %900
  br i1 %895, label %918, label %909

909:                                              ; preds = %908
  %910 = shl i64 %901, 32
  %911 = add i64 %910, -4294967296
  %912 = ashr exact i64 %911, 32
  %913 = getelementptr inbounds i32, ptr %7, i64 %912
  %914 = load i32, ptr %913, align 4, !tbaa !6
  %915 = getelementptr inbounds i32, ptr %6, i64 %901
  %916 = load i32, ptr %915, align 4, !tbaa !6
  %917 = add nsw i32 %916, %914
  store i32 %917, ptr %915, align 4, !tbaa !6
  br label %936

918:                                              ; preds = %891, %908
  %919 = phi i32 [ %903, %908 ], [ %892, %891 ]
  %920 = phi ptr [ %902, %908 ], [ %4, %891 ]
  %921 = phi i64 [ %901, %908 ], [ 0, %891 ]
  %922 = add nsw i32 %919, 1
  store i32 %922, ptr %920, align 4, !tbaa !6
  %923 = getelementptr inbounds i32, ptr %7, i64 %921
  %924 = load i32, ptr %923, align 4, !tbaa !6
  %925 = getelementptr inbounds i32, ptr %6, i64 %921
  br label %936

926:                                              ; preds = %900
  %927 = icmp eq i32 %903, %906
  br i1 %927, label %928, label %934

928:                                              ; preds = %926
  store i32 0, ptr %902, align 4, !tbaa !6
  %929 = getelementptr inbounds i32, ptr %8, i64 %901
  %930 = load i32, ptr %929, align 4, !tbaa !6
  %931 = getelementptr inbounds i32, ptr %6, i64 %901
  store i32 %930, ptr %931, align 4, !tbaa !6
  %932 = add nuw nsw i64 %901, 1
  %933 = icmp eq i64 %932, %654
  br i1 %933, label %941, label %900, !llvm.loop !1333

934:                                              ; preds = %896, %926
  %935 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1980, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5518

936:                                              ; preds = %909, %918
  %937 = phi ptr [ %925, %918 ], [ %902, %909 ]
  %938 = phi i32 [ %924, %918 ], [ 1, %909 ]
  %939 = load i32, ptr %937, align 4, !tbaa !6
  %940 = add nsw i32 %939, %938
  store i32 %940, ptr %937, align 4, !tbaa !6
  br label %941

941:                                              ; preds = %928, %936, %898, %889
  %942 = icmp eq i32 %890, %5
  br i1 %942, label %5513, label %804, !llvm.loop !1334

943:                                              ; preds = %642
  %944 = getelementptr inbounds i32, ptr %3, i64 %19
  %945 = load i32, ptr %944, align 4, !tbaa !6
  %946 = icmp eq i32 %945, 0
  %947 = icmp sgt i32 %5, 0
  br i1 %946, label %957, label %948

948:                                              ; preds = %943
  br i1 %947, label %949, label %5513

949:                                              ; preds = %948
  %950 = icmp sgt i32 %13, 1
  %951 = icmp sgt i32 %13, 0
  %952 = add i32 %13, -2
  %953 = zext i32 %952 to i64
  %954 = zext i32 %13 to i64
  %955 = add nuw i32 %5, 1
  %956 = icmp eq i32 %13, 1
  br label %1100

957:                                              ; preds = %943
  br i1 %947, label %958, label %5513

958:                                              ; preds = %957
  %959 = icmp sgt i32 %13, 1
  %960 = icmp sgt i32 %13, 0
  %961 = add i32 %13, -2
  %962 = zext i32 %961 to i64
  %963 = zext i32 %13 to i64
  %964 = add nuw i32 %5, 1
  %965 = icmp eq i32 %13, 1
  br label %966

966:                                              ; preds = %958, %1098
  %967 = phi i32 [ 0, %958 ], [ %1050, %1098 ]
  %968 = phi double [ 0.000000e+00, %958 ], [ %1049, %1098 ]
  %969 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %959, label %970, label %1039

970:                                              ; preds = %966, %1029
  %971 = phi i32 [ %1038, %1029 ], [ 0, %966 ]
  %972 = phi i64 [ %980, %1029 ], [ %963, %966 ]
  %973 = phi i64 [ %1037, %1029 ], [ %962, %966 ]
  %974 = phi i32 [ %1035, %1029 ], [ %969, %966 ]
  %975 = sub i32 %961, %971
  %976 = tail call i32 @llvm.smin.i32(i32 %975, i32 0)
  %977 = sub i32 %975, %976
  %978 = zext i32 %977 to i64
  %979 = add nuw nsw i64 %978, 1
  %980 = add nsw i64 %972, -1
  %981 = icmp ult i32 %977, 31
  br i1 %981, label %1017, label %982

982:                                              ; preds = %970
  %983 = and i64 %979, 8589934560
  %984 = sub i64 %973, %983
  br label %985

985:                                              ; preds = %985, %982
  %986 = phi i64 [ 0, %982 ], [ %1009, %985 ]
  %987 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %982 ], [ %1005, %985 ]
  %988 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %982 ], [ %1006, %985 ]
  %989 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %982 ], [ %1007, %985 ]
  %990 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %982 ], [ %1008, %985 ]
  %991 = sub i64 %973, %986
  %992 = getelementptr inbounds i32, ptr %9, i64 %991
  %993 = getelementptr inbounds i32, ptr %992, i64 -7
  %994 = load <8 x i32>, ptr %993, align 4, !tbaa !6
  %995 = shufflevector <8 x i32> %994, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %996 = getelementptr inbounds i32, ptr %992, i64 -15
  %997 = load <8 x i32>, ptr %996, align 4, !tbaa !6
  %998 = shufflevector <8 x i32> %997, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %999 = getelementptr inbounds i32, ptr %992, i64 -23
  %1000 = load <8 x i32>, ptr %999, align 4, !tbaa !6
  %1001 = shufflevector <8 x i32> %1000, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1002 = getelementptr inbounds i32, ptr %992, i64 -31
  %1003 = load <8 x i32>, ptr %1002, align 4, !tbaa !6
  %1004 = shufflevector <8 x i32> %1003, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1005 = mul <8 x i32> %995, %987
  %1006 = mul <8 x i32> %998, %988
  %1007 = mul <8 x i32> %1001, %989
  %1008 = mul <8 x i32> %1004, %990
  %1009 = add nuw i64 %986, 32
  %1010 = icmp eq i64 %1009, %983
  br i1 %1010, label %1011, label %985, !llvm.loop !1335

1011:                                             ; preds = %985
  %1012 = mul <8 x i32> %1006, %1005
  %1013 = mul <8 x i32> %1007, %1012
  %1014 = mul <8 x i32> %1008, %1013
  %1015 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1014)
  %1016 = icmp eq i64 %979, %983
  br i1 %1016, label %1029, label %1017

1017:                                             ; preds = %970, %1011
  %1018 = phi i64 [ %973, %970 ], [ %984, %1011 ]
  %1019 = phi i32 [ 1, %970 ], [ %1015, %1011 ]
  br label %1020

1020:                                             ; preds = %1017, %1020
  %1021 = phi i64 [ %1026, %1020 ], [ %1018, %1017 ]
  %1022 = phi i32 [ %1025, %1020 ], [ %1019, %1017 ]
  %1023 = getelementptr inbounds i32, ptr %9, i64 %1021
  %1024 = load i32, ptr %1023, align 4, !tbaa !6
  %1025 = mul nsw i32 %1024, %1022
  %1026 = add nsw i64 %1021, -1
  %1027 = trunc i64 %1021 to i32
  %1028 = icmp sgt i32 %1027, 0
  br i1 %1028, label %1020, label %1029, !llvm.loop !1336

1029:                                             ; preds = %1020, %1011
  %1030 = phi i32 [ %1015, %1011 ], [ %1025, %1020 ]
  %1031 = and i64 %980, 4294967295
  %1032 = getelementptr inbounds i32, ptr %6, i64 %1031
  %1033 = load i32, ptr %1032, align 4, !tbaa !6
  %1034 = mul nsw i32 %1033, %1030
  %1035 = add nsw i32 %1034, %974
  %1036 = icmp sgt i64 %972, 2
  %1037 = add nsw i64 %973, -1
  %1038 = add i32 %971, 1
  br i1 %1036, label %970, label %1039, !llvm.loop !1337

1039:                                             ; preds = %1029, %966
  %1040 = phi i32 [ %969, %966 ], [ %1035, %1029 ]
  %1041 = sext i32 %1040 to i64
  %1042 = getelementptr inbounds double, ptr %636, i64 %1041
  %1043 = load double, ptr %1042, align 8, !tbaa !19
  %1044 = fptosi double %1043 to i32
  %1045 = load i32, ptr %638, align 4, !tbaa !6
  %1046 = icmp slt i32 %1045, %1044
  br i1 %1046, label %1047, label %1048

1047:                                             ; preds = %1039
  store i32 %1044, ptr %638, align 4, !tbaa !6
  br label %1048

1048:                                             ; preds = %1047, %1039
  %1049 = fadd fast double %968, 1.000000e+00
  %1050 = add nuw nsw i32 %967, 1
  br i1 %960, label %1051, label %1098

1051:                                             ; preds = %1048
  %1052 = load i32, ptr %4, align 4, !tbaa !6
  %1053 = load i32, ptr %12, align 4, !tbaa !6
  %1054 = add nsw i32 %1053, -1
  %1055 = icmp slt i32 %1052, %1054
  br i1 %1055, label %1075, label %1056

1056:                                             ; preds = %1051
  %1057 = icmp eq i32 %1052, %1054
  br i1 %1057, label %1058, label %1091

1058:                                             ; preds = %1056
  store i32 0, ptr %4, align 4, !tbaa !6
  %1059 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1059, ptr %6, align 4, !tbaa !6
  br i1 %965, label %1098, label %1060

1060:                                             ; preds = %1058, %1085
  %1061 = phi i64 [ %1089, %1085 ], [ 1, %1058 ]
  %1062 = getelementptr inbounds i32, ptr %4, i64 %1061
  %1063 = load i32, ptr %1062, align 4, !tbaa !6
  %1064 = getelementptr inbounds i32, ptr %12, i64 %1061
  %1065 = load i32, ptr %1064, align 4, !tbaa !6
  %1066 = add nsw i32 %1065, -1
  %1067 = icmp slt i32 %1063, %1066
  br i1 %1067, label %1068, label %1083

1068:                                             ; preds = %1060
  br i1 %1055, label %1075, label %1069

1069:                                             ; preds = %1068
  %1070 = getelementptr inbounds i32, ptr %7, i64 %1061
  %1071 = load i32, ptr %1070, align 4, !tbaa !6
  %1072 = getelementptr inbounds i32, ptr %6, i64 %1061
  %1073 = load i32, ptr %1072, align 4, !tbaa !6
  %1074 = add nsw i32 %1073, %1071
  store i32 %1074, ptr %1072, align 4, !tbaa !6
  br label %1093

1075:                                             ; preds = %1051, %1068
  %1076 = phi i32 [ %1063, %1068 ], [ %1052, %1051 ]
  %1077 = phi ptr [ %1062, %1068 ], [ %4, %1051 ]
  %1078 = phi i64 [ %1061, %1068 ], [ 0, %1051 ]
  %1079 = add nsw i32 %1076, 1
  store i32 %1079, ptr %1077, align 4, !tbaa !6
  %1080 = getelementptr inbounds i32, ptr %7, i64 %1078
  %1081 = load i32, ptr %1080, align 4, !tbaa !6
  %1082 = getelementptr inbounds i32, ptr %6, i64 %1078
  br label %1093

1083:                                             ; preds = %1060
  %1084 = icmp eq i32 %1063, %1066
  br i1 %1084, label %1085, label %1091

1085:                                             ; preds = %1083
  store i32 0, ptr %1062, align 4, !tbaa !6
  %1086 = getelementptr inbounds i32, ptr %8, i64 %1061
  %1087 = load i32, ptr %1086, align 4, !tbaa !6
  %1088 = getelementptr inbounds i32, ptr %6, i64 %1061
  store i32 %1087, ptr %1088, align 4, !tbaa !6
  %1089 = add nuw nsw i64 %1061, 1
  %1090 = icmp eq i64 %1089, %963
  br i1 %1090, label %1098, label %1060, !llvm.loop !1338

1091:                                             ; preds = %1056, %1083
  %1092 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1980, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5518

1093:                                             ; preds = %1069, %1075
  %1094 = phi ptr [ %1082, %1075 ], [ %1062, %1069 ]
  %1095 = phi i32 [ %1081, %1075 ], [ 1, %1069 ]
  %1096 = load i32, ptr %1094, align 4, !tbaa !6
  %1097 = add nsw i32 %1096, %1095
  store i32 %1097, ptr %1094, align 4, !tbaa !6
  br label %1098

1098:                                             ; preds = %1085, %1093, %1058, %1048
  %1099 = icmp eq i32 %1050, %5
  br i1 %1099, label %5513, label %966, !llvm.loop !1339

1100:                                             ; preds = %949, %1237
  %1101 = phi i32 [ 0, %949 ], [ %1186, %1237 ]
  %1102 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %950, label %1103, label %1172

1103:                                             ; preds = %1100, %1162
  %1104 = phi i32 [ %1171, %1162 ], [ 0, %1100 ]
  %1105 = phi i64 [ %1113, %1162 ], [ %954, %1100 ]
  %1106 = phi i64 [ %1170, %1162 ], [ %953, %1100 ]
  %1107 = phi i32 [ %1168, %1162 ], [ %1102, %1100 ]
  %1108 = sub i32 %952, %1104
  %1109 = tail call i32 @llvm.smin.i32(i32 %1108, i32 0)
  %1110 = sub i32 %1108, %1109
  %1111 = zext i32 %1110 to i64
  %1112 = add nuw nsw i64 %1111, 1
  %1113 = add nsw i64 %1105, -1
  %1114 = icmp ult i32 %1110, 31
  br i1 %1114, label %1150, label %1115

1115:                                             ; preds = %1103
  %1116 = and i64 %1112, 8589934560
  %1117 = sub i64 %1106, %1116
  br label %1118

1118:                                             ; preds = %1118, %1115
  %1119 = phi i64 [ 0, %1115 ], [ %1142, %1118 ]
  %1120 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1115 ], [ %1138, %1118 ]
  %1121 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1115 ], [ %1139, %1118 ]
  %1122 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1115 ], [ %1140, %1118 ]
  %1123 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1115 ], [ %1141, %1118 ]
  %1124 = sub i64 %1106, %1119
  %1125 = getelementptr inbounds i32, ptr %11, i64 %1124
  %1126 = getelementptr inbounds i32, ptr %1125, i64 -7
  %1127 = load <8 x i32>, ptr %1126, align 4, !tbaa !6
  %1128 = shufflevector <8 x i32> %1127, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1129 = getelementptr inbounds i32, ptr %1125, i64 -15
  %1130 = load <8 x i32>, ptr %1129, align 4, !tbaa !6
  %1131 = shufflevector <8 x i32> %1130, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1132 = getelementptr inbounds i32, ptr %1125, i64 -23
  %1133 = load <8 x i32>, ptr %1132, align 4, !tbaa !6
  %1134 = shufflevector <8 x i32> %1133, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1135 = getelementptr inbounds i32, ptr %1125, i64 -31
  %1136 = load <8 x i32>, ptr %1135, align 4, !tbaa !6
  %1137 = shufflevector <8 x i32> %1136, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1138 = mul <8 x i32> %1128, %1120
  %1139 = mul <8 x i32> %1131, %1121
  %1140 = mul <8 x i32> %1134, %1122
  %1141 = mul <8 x i32> %1137, %1123
  %1142 = add nuw i64 %1119, 32
  %1143 = icmp eq i64 %1142, %1116
  br i1 %1143, label %1144, label %1118, !llvm.loop !1340

1144:                                             ; preds = %1118
  %1145 = mul <8 x i32> %1139, %1138
  %1146 = mul <8 x i32> %1140, %1145
  %1147 = mul <8 x i32> %1141, %1146
  %1148 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1147)
  %1149 = icmp eq i64 %1112, %1116
  br i1 %1149, label %1162, label %1150

1150:                                             ; preds = %1103, %1144
  %1151 = phi i64 [ %1106, %1103 ], [ %1117, %1144 ]
  %1152 = phi i32 [ 1, %1103 ], [ %1148, %1144 ]
  br label %1153

1153:                                             ; preds = %1150, %1153
  %1154 = phi i64 [ %1159, %1153 ], [ %1151, %1150 ]
  %1155 = phi i32 [ %1158, %1153 ], [ %1152, %1150 ]
  %1156 = getelementptr inbounds i32, ptr %11, i64 %1154
  %1157 = load i32, ptr %1156, align 4, !tbaa !6
  %1158 = mul nsw i32 %1157, %1155
  %1159 = add nsw i64 %1154, -1
  %1160 = trunc i64 %1154 to i32
  %1161 = icmp sgt i32 %1160, 0
  br i1 %1161, label %1153, label %1162, !llvm.loop !1341

1162:                                             ; preds = %1153, %1144
  %1163 = phi i32 [ %1148, %1144 ], [ %1158, %1153 ]
  %1164 = and i64 %1113, 4294967295
  %1165 = getelementptr inbounds i32, ptr %6, i64 %1164
  %1166 = load i32, ptr %1165, align 4, !tbaa !6
  %1167 = mul nsw i32 %1166, %1163
  %1168 = add nsw i32 %1167, %1107
  %1169 = icmp sgt i64 %1105, 2
  %1170 = add nsw i64 %1106, -1
  %1171 = add i32 %1104, 1
  br i1 %1169, label %1103, label %1172, !llvm.loop !1342

1172:                                             ; preds = %1162, %1100
  %1173 = phi i32 [ %1102, %1100 ], [ %1168, %1162 ]
  %1174 = icmp slt i32 %1173, %5
  br i1 %1174, label %1177, label %1175

1175:                                             ; preds = %1172
  %1176 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1980, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5518

1177:                                             ; preds = %1172
  %1178 = sext i32 %1173 to i64
  %1179 = getelementptr inbounds double, ptr %636, i64 %1178
  %1180 = load double, ptr %1179, align 8, !tbaa !19
  %1181 = fptosi double %1180 to i32
  %1182 = load i32, ptr %638, align 4, !tbaa !6
  %1183 = icmp slt i32 %1182, %1181
  br i1 %1183, label %1184, label %1185

1184:                                             ; preds = %1177
  store i32 %1181, ptr %638, align 4, !tbaa !6
  br label %1185

1185:                                             ; preds = %1184, %1177
  %1186 = add nuw nsw i32 %1101, 1
  br i1 %951, label %1187, label %1237

1187:                                             ; preds = %1185
  %1188 = load i32, ptr %4, align 4, !tbaa !6
  %1189 = load i32, ptr %12, align 4, !tbaa !6
  %1190 = add nsw i32 %1189, -1
  %1191 = icmp slt i32 %1188, %1190
  br i1 %1191, label %1214, label %1192

1192:                                             ; preds = %1187
  %1193 = icmp eq i32 %1188, %1190
  br i1 %1193, label %1194, label %1230

1194:                                             ; preds = %1192
  store i32 0, ptr %4, align 4, !tbaa !6
  %1195 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1195, ptr %6, align 4, !tbaa !6
  br i1 %956, label %1237, label %1196

1196:                                             ; preds = %1194, %1224
  %1197 = phi i64 [ %1228, %1224 ], [ 1, %1194 ]
  %1198 = getelementptr inbounds i32, ptr %4, i64 %1197
  %1199 = load i32, ptr %1198, align 4, !tbaa !6
  %1200 = getelementptr inbounds i32, ptr %12, i64 %1197
  %1201 = load i32, ptr %1200, align 4, !tbaa !6
  %1202 = add nsw i32 %1201, -1
  %1203 = icmp slt i32 %1199, %1202
  br i1 %1203, label %1204, label %1222

1204:                                             ; preds = %1196
  br i1 %1191, label %1214, label %1205

1205:                                             ; preds = %1204
  %1206 = shl i64 %1197, 32
  %1207 = add i64 %1206, -4294967296
  %1208 = ashr exact i64 %1207, 32
  %1209 = getelementptr inbounds i32, ptr %7, i64 %1208
  %1210 = load i32, ptr %1209, align 4, !tbaa !6
  %1211 = getelementptr inbounds i32, ptr %6, i64 %1197
  %1212 = load i32, ptr %1211, align 4, !tbaa !6
  %1213 = add nsw i32 %1212, %1210
  store i32 %1213, ptr %1211, align 4, !tbaa !6
  br label %1232

1214:                                             ; preds = %1187, %1204
  %1215 = phi i32 [ %1199, %1204 ], [ %1188, %1187 ]
  %1216 = phi ptr [ %1198, %1204 ], [ %4, %1187 ]
  %1217 = phi i64 [ %1197, %1204 ], [ 0, %1187 ]
  %1218 = add nsw i32 %1215, 1
  store i32 %1218, ptr %1216, align 4, !tbaa !6
  %1219 = getelementptr inbounds i32, ptr %7, i64 %1217
  %1220 = load i32, ptr %1219, align 4, !tbaa !6
  %1221 = getelementptr inbounds i32, ptr %6, i64 %1217
  br label %1232

1222:                                             ; preds = %1196
  %1223 = icmp eq i32 %1199, %1202
  br i1 %1223, label %1224, label %1230

1224:                                             ; preds = %1222
  store i32 0, ptr %1198, align 4, !tbaa !6
  %1225 = getelementptr inbounds i32, ptr %8, i64 %1197
  %1226 = load i32, ptr %1225, align 4, !tbaa !6
  %1227 = getelementptr inbounds i32, ptr %6, i64 %1197
  store i32 %1226, ptr %1227, align 4, !tbaa !6
  %1228 = add nuw nsw i64 %1197, 1
  %1229 = icmp eq i64 %1228, %954
  br i1 %1229, label %1237, label %1196, !llvm.loop !1343

1230:                                             ; preds = %1192, %1222
  %1231 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1980, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5518

1232:                                             ; preds = %1205, %1214
  %1233 = phi ptr [ %1221, %1214 ], [ %1198, %1205 ]
  %1234 = phi i32 [ %1220, %1214 ], [ 1, %1205 ]
  %1235 = load i32, ptr %1233, align 4, !tbaa !6
  %1236 = add nsw i32 %1235, %1234
  store i32 %1236, ptr %1233, align 4, !tbaa !6
  br label %1237

1237:                                             ; preds = %1224, %1232, %1194, %1185
  %1238 = icmp eq i32 %1186, %5
  br i1 %1238, label %5513, label %1100, !llvm.loop !1344

1239:                                             ; preds = %642
  %1240 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1980, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5513

1241:                                             ; preds = %18
  %1242 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1243 = load ptr, ptr %1242, align 8, !tbaa !10
  %1244 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1245 = load ptr, ptr %1244, align 8, !tbaa !10
  %1246 = load double, ptr %1243, align 8, !tbaa !19
  %1247 = fptosi double %1246 to i8
  store i8 %1247, ptr %1245, align 1, !tbaa !12
  %1248 = icmp eq i32 %13, 0
  br i1 %1248, label %1249, label %1254

1249:                                             ; preds = %1241
  %1250 = load double, ptr %1243, align 8, !tbaa !19
  %1251 = fptosi double %1250 to i8
  %1252 = icmp slt i8 %1247, %1251
  br i1 %1252, label %1253, label %5513

1253:                                             ; preds = %1249
  store i8 %1251, ptr %1245, align 1, !tbaa !12
  br label %5513

1254:                                             ; preds = %1241
  switch i32 %1, label %1851 [
    i32 1, label %1255
    i32 0, label %1555
  ]

1255:                                             ; preds = %1254
  %1256 = getelementptr inbounds i32, ptr %3, i64 %19
  %1257 = load i32, ptr %1256, align 4, !tbaa !6
  %1258 = icmp eq i32 %1257, 0
  %1259 = icmp sgt i32 %5, 0
  br i1 %1258, label %1269, label %1260

1260:                                             ; preds = %1255
  br i1 %1259, label %1261, label %5513

1261:                                             ; preds = %1260
  %1262 = icmp sgt i32 %13, 1
  %1263 = icmp sgt i32 %13, 0
  %1264 = add i32 %13, -2
  %1265 = zext i32 %1264 to i64
  %1266 = zext i32 %13 to i64
  %1267 = add nuw i32 %5, 1
  %1268 = icmp eq i32 %13, 1
  br label %1416

1269:                                             ; preds = %1255
  br i1 %1259, label %1270, label %5513

1270:                                             ; preds = %1269
  %1271 = icmp sgt i32 %13, 1
  %1272 = icmp sgt i32 %13, 0
  %1273 = add i32 %13, -2
  %1274 = zext i32 %1273 to i64
  %1275 = zext i32 %13 to i64
  %1276 = add nuw i32 %5, 1
  %1277 = icmp eq i32 %13, 1
  br label %1278

1278:                                             ; preds = %1270, %1414
  %1279 = phi i32 [ 0, %1270 ], [ %1366, %1414 ]
  %1280 = phi double [ 0.000000e+00, %1270 ], [ %1365, %1414 ]
  %1281 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1271, label %1282, label %1351

1282:                                             ; preds = %1278, %1341
  %1283 = phi i32 [ %1350, %1341 ], [ 0, %1278 ]
  %1284 = phi i64 [ %1292, %1341 ], [ %1275, %1278 ]
  %1285 = phi i64 [ %1349, %1341 ], [ %1274, %1278 ]
  %1286 = phi i32 [ %1347, %1341 ], [ %1281, %1278 ]
  %1287 = sub i32 %1273, %1283
  %1288 = tail call i32 @llvm.smin.i32(i32 %1287, i32 0)
  %1289 = sub i32 %1287, %1288
  %1290 = zext i32 %1289 to i64
  %1291 = add nuw nsw i64 %1290, 1
  %1292 = add nsw i64 %1284, -1
  %1293 = icmp ult i32 %1289, 31
  br i1 %1293, label %1329, label %1294

1294:                                             ; preds = %1282
  %1295 = and i64 %1291, 8589934560
  %1296 = sub i64 %1285, %1295
  br label %1297

1297:                                             ; preds = %1297, %1294
  %1298 = phi i64 [ 0, %1294 ], [ %1321, %1297 ]
  %1299 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1294 ], [ %1317, %1297 ]
  %1300 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1294 ], [ %1318, %1297 ]
  %1301 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1294 ], [ %1319, %1297 ]
  %1302 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1294 ], [ %1320, %1297 ]
  %1303 = sub i64 %1285, %1298
  %1304 = getelementptr inbounds i32, ptr %9, i64 %1303
  %1305 = getelementptr inbounds i32, ptr %1304, i64 -7
  %1306 = load <8 x i32>, ptr %1305, align 4, !tbaa !6
  %1307 = shufflevector <8 x i32> %1306, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1308 = getelementptr inbounds i32, ptr %1304, i64 -15
  %1309 = load <8 x i32>, ptr %1308, align 4, !tbaa !6
  %1310 = shufflevector <8 x i32> %1309, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1311 = getelementptr inbounds i32, ptr %1304, i64 -23
  %1312 = load <8 x i32>, ptr %1311, align 4, !tbaa !6
  %1313 = shufflevector <8 x i32> %1312, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1314 = getelementptr inbounds i32, ptr %1304, i64 -31
  %1315 = load <8 x i32>, ptr %1314, align 4, !tbaa !6
  %1316 = shufflevector <8 x i32> %1315, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1317 = mul <8 x i32> %1307, %1299
  %1318 = mul <8 x i32> %1310, %1300
  %1319 = mul <8 x i32> %1313, %1301
  %1320 = mul <8 x i32> %1316, %1302
  %1321 = add nuw i64 %1298, 32
  %1322 = icmp eq i64 %1321, %1295
  br i1 %1322, label %1323, label %1297, !llvm.loop !1345

1323:                                             ; preds = %1297
  %1324 = mul <8 x i32> %1318, %1317
  %1325 = mul <8 x i32> %1319, %1324
  %1326 = mul <8 x i32> %1320, %1325
  %1327 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1326)
  %1328 = icmp eq i64 %1291, %1295
  br i1 %1328, label %1341, label %1329

1329:                                             ; preds = %1282, %1323
  %1330 = phi i64 [ %1285, %1282 ], [ %1296, %1323 ]
  %1331 = phi i32 [ 1, %1282 ], [ %1327, %1323 ]
  br label %1332

1332:                                             ; preds = %1329, %1332
  %1333 = phi i64 [ %1338, %1332 ], [ %1330, %1329 ]
  %1334 = phi i32 [ %1337, %1332 ], [ %1331, %1329 ]
  %1335 = getelementptr inbounds i32, ptr %9, i64 %1333
  %1336 = load i32, ptr %1335, align 4, !tbaa !6
  %1337 = mul nsw i32 %1336, %1334
  %1338 = add nsw i64 %1333, -1
  %1339 = trunc i64 %1333 to i32
  %1340 = icmp sgt i32 %1339, 0
  br i1 %1340, label %1332, label %1341, !llvm.loop !1346

1341:                                             ; preds = %1332, %1323
  %1342 = phi i32 [ %1327, %1323 ], [ %1337, %1332 ]
  %1343 = and i64 %1292, 4294967295
  %1344 = getelementptr inbounds i32, ptr %6, i64 %1343
  %1345 = load i32, ptr %1344, align 4, !tbaa !6
  %1346 = mul nsw i32 %1345, %1342
  %1347 = add nsw i32 %1346, %1286
  %1348 = icmp sgt i64 %1284, 2
  %1349 = add nsw i64 %1285, -1
  %1350 = add i32 %1283, 1
  br i1 %1348, label %1282, label %1351, !llvm.loop !1347

1351:                                             ; preds = %1341, %1278
  %1352 = phi i32 [ %1281, %1278 ], [ %1347, %1341 ]
  %1353 = sext i32 %1352 to i64
  %1354 = getelementptr inbounds double, ptr %2, i64 %1353
  %1355 = load double, ptr %1354, align 8, !tbaa !19
  %1356 = getelementptr inbounds double, ptr %1243, i64 %1353
  %1357 = load double, ptr %1356, align 8, !tbaa !19
  %1358 = fptosi double %1357 to i8
  %1359 = fcmp fast ueq double %1355, 0.000000e+00
  br i1 %1359, label %1364, label %1360

1360:                                             ; preds = %1351
  %1361 = load i8, ptr %1245, align 1, !tbaa !12
  %1362 = icmp slt i8 %1361, %1358
  br i1 %1362, label %1363, label %1364

1363:                                             ; preds = %1360
  store i8 %1358, ptr %1245, align 1, !tbaa !12
  br label %1364

1364:                                             ; preds = %1360, %1363, %1351
  %1365 = fadd fast double %1355, %1280
  %1366 = add nuw nsw i32 %1279, 1
  br i1 %1272, label %1367, label %1414

1367:                                             ; preds = %1364
  %1368 = load i32, ptr %4, align 4, !tbaa !6
  %1369 = load i32, ptr %12, align 4, !tbaa !6
  %1370 = add nsw i32 %1369, -1
  %1371 = icmp slt i32 %1368, %1370
  br i1 %1371, label %1391, label %1372

1372:                                             ; preds = %1367
  %1373 = icmp eq i32 %1368, %1370
  br i1 %1373, label %1374, label %1407

1374:                                             ; preds = %1372
  store i32 0, ptr %4, align 4, !tbaa !6
  %1375 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1375, ptr %6, align 4, !tbaa !6
  br i1 %1277, label %1414, label %1376

1376:                                             ; preds = %1374, %1401
  %1377 = phi i64 [ %1405, %1401 ], [ 1, %1374 ]
  %1378 = getelementptr inbounds i32, ptr %4, i64 %1377
  %1379 = load i32, ptr %1378, align 4, !tbaa !6
  %1380 = getelementptr inbounds i32, ptr %12, i64 %1377
  %1381 = load i32, ptr %1380, align 4, !tbaa !6
  %1382 = add nsw i32 %1381, -1
  %1383 = icmp slt i32 %1379, %1382
  br i1 %1383, label %1384, label %1399

1384:                                             ; preds = %1376
  br i1 %1371, label %1391, label %1385

1385:                                             ; preds = %1384
  %1386 = getelementptr inbounds i32, ptr %7, i64 %1377
  %1387 = load i32, ptr %1386, align 4, !tbaa !6
  %1388 = getelementptr inbounds i32, ptr %6, i64 %1377
  %1389 = load i32, ptr %1388, align 4, !tbaa !6
  %1390 = add nsw i32 %1389, %1387
  store i32 %1390, ptr %1388, align 4, !tbaa !6
  br label %1409

1391:                                             ; preds = %1367, %1384
  %1392 = phi i32 [ %1379, %1384 ], [ %1368, %1367 ]
  %1393 = phi ptr [ %1378, %1384 ], [ %4, %1367 ]
  %1394 = phi i64 [ %1377, %1384 ], [ 0, %1367 ]
  %1395 = add nsw i32 %1392, 1
  store i32 %1395, ptr %1393, align 4, !tbaa !6
  %1396 = getelementptr inbounds i32, ptr %7, i64 %1394
  %1397 = load i32, ptr %1396, align 4, !tbaa !6
  %1398 = getelementptr inbounds i32, ptr %6, i64 %1394
  br label %1409

1399:                                             ; preds = %1376
  %1400 = icmp eq i32 %1379, %1382
  br i1 %1400, label %1401, label %1407

1401:                                             ; preds = %1399
  store i32 0, ptr %1378, align 4, !tbaa !6
  %1402 = getelementptr inbounds i32, ptr %8, i64 %1377
  %1403 = load i32, ptr %1402, align 4, !tbaa !6
  %1404 = getelementptr inbounds i32, ptr %6, i64 %1377
  store i32 %1403, ptr %1404, align 4, !tbaa !6
  %1405 = add nuw nsw i64 %1377, 1
  %1406 = icmp eq i64 %1405, %1275
  br i1 %1406, label %1414, label %1376, !llvm.loop !1348

1407:                                             ; preds = %1372, %1399
  %1408 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1984, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5518

1409:                                             ; preds = %1385, %1391
  %1410 = phi ptr [ %1398, %1391 ], [ %1378, %1385 ]
  %1411 = phi i32 [ %1397, %1391 ], [ 1, %1385 ]
  %1412 = load i32, ptr %1410, align 4, !tbaa !6
  %1413 = add nsw i32 %1412, %1411
  store i32 %1413, ptr %1410, align 4, !tbaa !6
  br label %1414

1414:                                             ; preds = %1401, %1409, %1374, %1364
  %1415 = icmp eq i32 %1366, %5
  br i1 %1415, label %5513, label %1278, !llvm.loop !1349

1416:                                             ; preds = %1261, %1553
  %1417 = phi i32 [ 0, %1261 ], [ %1502, %1553 ]
  %1418 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1262, label %1419, label %1488

1419:                                             ; preds = %1416, %1478
  %1420 = phi i32 [ %1487, %1478 ], [ 0, %1416 ]
  %1421 = phi i64 [ %1429, %1478 ], [ %1266, %1416 ]
  %1422 = phi i64 [ %1486, %1478 ], [ %1265, %1416 ]
  %1423 = phi i32 [ %1484, %1478 ], [ %1418, %1416 ]
  %1424 = sub i32 %1264, %1420
  %1425 = tail call i32 @llvm.smin.i32(i32 %1424, i32 0)
  %1426 = sub i32 %1424, %1425
  %1427 = zext i32 %1426 to i64
  %1428 = add nuw nsw i64 %1427, 1
  %1429 = add nsw i64 %1421, -1
  %1430 = icmp ult i32 %1426, 31
  br i1 %1430, label %1466, label %1431

1431:                                             ; preds = %1419
  %1432 = and i64 %1428, 8589934560
  %1433 = sub i64 %1422, %1432
  br label %1434

1434:                                             ; preds = %1434, %1431
  %1435 = phi i64 [ 0, %1431 ], [ %1458, %1434 ]
  %1436 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1431 ], [ %1454, %1434 ]
  %1437 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1431 ], [ %1455, %1434 ]
  %1438 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1431 ], [ %1456, %1434 ]
  %1439 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1431 ], [ %1457, %1434 ]
  %1440 = sub i64 %1422, %1435
  %1441 = getelementptr inbounds i32, ptr %11, i64 %1440
  %1442 = getelementptr inbounds i32, ptr %1441, i64 -7
  %1443 = load <8 x i32>, ptr %1442, align 4, !tbaa !6
  %1444 = shufflevector <8 x i32> %1443, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1445 = getelementptr inbounds i32, ptr %1441, i64 -15
  %1446 = load <8 x i32>, ptr %1445, align 4, !tbaa !6
  %1447 = shufflevector <8 x i32> %1446, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1448 = getelementptr inbounds i32, ptr %1441, i64 -23
  %1449 = load <8 x i32>, ptr %1448, align 4, !tbaa !6
  %1450 = shufflevector <8 x i32> %1449, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1451 = getelementptr inbounds i32, ptr %1441, i64 -31
  %1452 = load <8 x i32>, ptr %1451, align 4, !tbaa !6
  %1453 = shufflevector <8 x i32> %1452, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1454 = mul <8 x i32> %1444, %1436
  %1455 = mul <8 x i32> %1447, %1437
  %1456 = mul <8 x i32> %1450, %1438
  %1457 = mul <8 x i32> %1453, %1439
  %1458 = add nuw i64 %1435, 32
  %1459 = icmp eq i64 %1458, %1432
  br i1 %1459, label %1460, label %1434, !llvm.loop !1350

1460:                                             ; preds = %1434
  %1461 = mul <8 x i32> %1455, %1454
  %1462 = mul <8 x i32> %1456, %1461
  %1463 = mul <8 x i32> %1457, %1462
  %1464 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1463)
  %1465 = icmp eq i64 %1428, %1432
  br i1 %1465, label %1478, label %1466

1466:                                             ; preds = %1419, %1460
  %1467 = phi i64 [ %1422, %1419 ], [ %1433, %1460 ]
  %1468 = phi i32 [ 1, %1419 ], [ %1464, %1460 ]
  br label %1469

1469:                                             ; preds = %1466, %1469
  %1470 = phi i64 [ %1475, %1469 ], [ %1467, %1466 ]
  %1471 = phi i32 [ %1474, %1469 ], [ %1468, %1466 ]
  %1472 = getelementptr inbounds i32, ptr %11, i64 %1470
  %1473 = load i32, ptr %1472, align 4, !tbaa !6
  %1474 = mul nsw i32 %1473, %1471
  %1475 = add nsw i64 %1470, -1
  %1476 = trunc i64 %1470 to i32
  %1477 = icmp sgt i32 %1476, 0
  br i1 %1477, label %1469, label %1478, !llvm.loop !1351

1478:                                             ; preds = %1469, %1460
  %1479 = phi i32 [ %1464, %1460 ], [ %1474, %1469 ]
  %1480 = and i64 %1429, 4294967295
  %1481 = getelementptr inbounds i32, ptr %6, i64 %1480
  %1482 = load i32, ptr %1481, align 4, !tbaa !6
  %1483 = mul nsw i32 %1482, %1479
  %1484 = add nsw i32 %1483, %1423
  %1485 = icmp sgt i64 %1421, 2
  %1486 = add nsw i64 %1422, -1
  %1487 = add i32 %1420, 1
  br i1 %1485, label %1419, label %1488, !llvm.loop !1352

1488:                                             ; preds = %1478, %1416
  %1489 = phi i32 [ %1418, %1416 ], [ %1484, %1478 ]
  %1490 = icmp slt i32 %1489, %5
  br i1 %1490, label %1493, label %1491

1491:                                             ; preds = %1488
  %1492 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1984, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5518

1493:                                             ; preds = %1488
  %1494 = sext i32 %1489 to i64
  %1495 = getelementptr inbounds double, ptr %1243, i64 %1494
  %1496 = load double, ptr %1495, align 8, !tbaa !19
  %1497 = fptosi double %1496 to i8
  %1498 = load i8, ptr %1245, align 1, !tbaa !12
  %1499 = icmp slt i8 %1498, %1497
  br i1 %1499, label %1500, label %1501

1500:                                             ; preds = %1493
  store i8 %1497, ptr %1245, align 1, !tbaa !12
  br label %1501

1501:                                             ; preds = %1493, %1500
  %1502 = add nuw nsw i32 %1417, 1
  br i1 %1263, label %1503, label %1553

1503:                                             ; preds = %1501
  %1504 = load i32, ptr %4, align 4, !tbaa !6
  %1505 = load i32, ptr %12, align 4, !tbaa !6
  %1506 = add nsw i32 %1505, -1
  %1507 = icmp slt i32 %1504, %1506
  br i1 %1507, label %1530, label %1508

1508:                                             ; preds = %1503
  %1509 = icmp eq i32 %1504, %1506
  br i1 %1509, label %1510, label %1546

1510:                                             ; preds = %1508
  store i32 0, ptr %4, align 4, !tbaa !6
  %1511 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1511, ptr %6, align 4, !tbaa !6
  br i1 %1268, label %1553, label %1512

1512:                                             ; preds = %1510, %1540
  %1513 = phi i64 [ %1544, %1540 ], [ 1, %1510 ]
  %1514 = getelementptr inbounds i32, ptr %4, i64 %1513
  %1515 = load i32, ptr %1514, align 4, !tbaa !6
  %1516 = getelementptr inbounds i32, ptr %12, i64 %1513
  %1517 = load i32, ptr %1516, align 4, !tbaa !6
  %1518 = add nsw i32 %1517, -1
  %1519 = icmp slt i32 %1515, %1518
  br i1 %1519, label %1520, label %1538

1520:                                             ; preds = %1512
  br i1 %1507, label %1530, label %1521

1521:                                             ; preds = %1520
  %1522 = shl i64 %1513, 32
  %1523 = add i64 %1522, -4294967296
  %1524 = ashr exact i64 %1523, 32
  %1525 = getelementptr inbounds i32, ptr %7, i64 %1524
  %1526 = load i32, ptr %1525, align 4, !tbaa !6
  %1527 = getelementptr inbounds i32, ptr %6, i64 %1513
  %1528 = load i32, ptr %1527, align 4, !tbaa !6
  %1529 = add nsw i32 %1528, %1526
  store i32 %1529, ptr %1527, align 4, !tbaa !6
  br label %1548

1530:                                             ; preds = %1503, %1520
  %1531 = phi i32 [ %1515, %1520 ], [ %1504, %1503 ]
  %1532 = phi ptr [ %1514, %1520 ], [ %4, %1503 ]
  %1533 = phi i64 [ %1513, %1520 ], [ 0, %1503 ]
  %1534 = add nsw i32 %1531, 1
  store i32 %1534, ptr %1532, align 4, !tbaa !6
  %1535 = getelementptr inbounds i32, ptr %7, i64 %1533
  %1536 = load i32, ptr %1535, align 4, !tbaa !6
  %1537 = getelementptr inbounds i32, ptr %6, i64 %1533
  br label %1548

1538:                                             ; preds = %1512
  %1539 = icmp eq i32 %1515, %1518
  br i1 %1539, label %1540, label %1546

1540:                                             ; preds = %1538
  store i32 0, ptr %1514, align 4, !tbaa !6
  %1541 = getelementptr inbounds i32, ptr %8, i64 %1513
  %1542 = load i32, ptr %1541, align 4, !tbaa !6
  %1543 = getelementptr inbounds i32, ptr %6, i64 %1513
  store i32 %1542, ptr %1543, align 4, !tbaa !6
  %1544 = add nuw nsw i64 %1513, 1
  %1545 = icmp eq i64 %1544, %1266
  br i1 %1545, label %1553, label %1512, !llvm.loop !1353

1546:                                             ; preds = %1508, %1538
  %1547 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1984, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5518

1548:                                             ; preds = %1521, %1530
  %1549 = phi ptr [ %1537, %1530 ], [ %1514, %1521 ]
  %1550 = phi i32 [ %1536, %1530 ], [ 1, %1521 ]
  %1551 = load i32, ptr %1549, align 4, !tbaa !6
  %1552 = add nsw i32 %1551, %1550
  store i32 %1552, ptr %1549, align 4, !tbaa !6
  br label %1553

1553:                                             ; preds = %1540, %1548, %1510, %1501
  %1554 = icmp eq i32 %1502, %5
  br i1 %1554, label %5513, label %1416, !llvm.loop !1354

1555:                                             ; preds = %1254
  %1556 = getelementptr inbounds i32, ptr %3, i64 %19
  %1557 = load i32, ptr %1556, align 4, !tbaa !6
  %1558 = icmp eq i32 %1557, 0
  %1559 = icmp sgt i32 %5, 0
  br i1 %1558, label %1569, label %1560

1560:                                             ; preds = %1555
  br i1 %1559, label %1561, label %5513

1561:                                             ; preds = %1560
  %1562 = icmp sgt i32 %13, 1
  %1563 = icmp sgt i32 %13, 0
  %1564 = add i32 %13, -2
  %1565 = zext i32 %1564 to i64
  %1566 = zext i32 %13 to i64
  %1567 = add nuw i32 %5, 1
  %1568 = icmp eq i32 %13, 1
  br label %1712

1569:                                             ; preds = %1555
  br i1 %1559, label %1570, label %5513

1570:                                             ; preds = %1569
  %1571 = icmp sgt i32 %13, 1
  %1572 = icmp sgt i32 %13, 0
  %1573 = add i32 %13, -2
  %1574 = zext i32 %1573 to i64
  %1575 = zext i32 %13 to i64
  %1576 = add nuw i32 %5, 1
  %1577 = icmp eq i32 %13, 1
  br label %1578

1578:                                             ; preds = %1570, %1710
  %1579 = phi i32 [ 0, %1570 ], [ %1662, %1710 ]
  %1580 = phi double [ 0.000000e+00, %1570 ], [ %1661, %1710 ]
  %1581 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1571, label %1582, label %1651

1582:                                             ; preds = %1578, %1641
  %1583 = phi i32 [ %1650, %1641 ], [ 0, %1578 ]
  %1584 = phi i64 [ %1592, %1641 ], [ %1575, %1578 ]
  %1585 = phi i64 [ %1649, %1641 ], [ %1574, %1578 ]
  %1586 = phi i32 [ %1647, %1641 ], [ %1581, %1578 ]
  %1587 = sub i32 %1573, %1583
  %1588 = tail call i32 @llvm.smin.i32(i32 %1587, i32 0)
  %1589 = sub i32 %1587, %1588
  %1590 = zext i32 %1589 to i64
  %1591 = add nuw nsw i64 %1590, 1
  %1592 = add nsw i64 %1584, -1
  %1593 = icmp ult i32 %1589, 31
  br i1 %1593, label %1629, label %1594

1594:                                             ; preds = %1582
  %1595 = and i64 %1591, 8589934560
  %1596 = sub i64 %1585, %1595
  br label %1597

1597:                                             ; preds = %1597, %1594
  %1598 = phi i64 [ 0, %1594 ], [ %1621, %1597 ]
  %1599 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1594 ], [ %1617, %1597 ]
  %1600 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1594 ], [ %1618, %1597 ]
  %1601 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1594 ], [ %1619, %1597 ]
  %1602 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1594 ], [ %1620, %1597 ]
  %1603 = sub i64 %1585, %1598
  %1604 = getelementptr inbounds i32, ptr %9, i64 %1603
  %1605 = getelementptr inbounds i32, ptr %1604, i64 -7
  %1606 = load <8 x i32>, ptr %1605, align 4, !tbaa !6
  %1607 = shufflevector <8 x i32> %1606, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1608 = getelementptr inbounds i32, ptr %1604, i64 -15
  %1609 = load <8 x i32>, ptr %1608, align 4, !tbaa !6
  %1610 = shufflevector <8 x i32> %1609, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1611 = getelementptr inbounds i32, ptr %1604, i64 -23
  %1612 = load <8 x i32>, ptr %1611, align 4, !tbaa !6
  %1613 = shufflevector <8 x i32> %1612, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1614 = getelementptr inbounds i32, ptr %1604, i64 -31
  %1615 = load <8 x i32>, ptr %1614, align 4, !tbaa !6
  %1616 = shufflevector <8 x i32> %1615, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1617 = mul <8 x i32> %1607, %1599
  %1618 = mul <8 x i32> %1610, %1600
  %1619 = mul <8 x i32> %1613, %1601
  %1620 = mul <8 x i32> %1616, %1602
  %1621 = add nuw i64 %1598, 32
  %1622 = icmp eq i64 %1621, %1595
  br i1 %1622, label %1623, label %1597, !llvm.loop !1355

1623:                                             ; preds = %1597
  %1624 = mul <8 x i32> %1618, %1617
  %1625 = mul <8 x i32> %1619, %1624
  %1626 = mul <8 x i32> %1620, %1625
  %1627 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1626)
  %1628 = icmp eq i64 %1591, %1595
  br i1 %1628, label %1641, label %1629

1629:                                             ; preds = %1582, %1623
  %1630 = phi i64 [ %1585, %1582 ], [ %1596, %1623 ]
  %1631 = phi i32 [ 1, %1582 ], [ %1627, %1623 ]
  br label %1632

1632:                                             ; preds = %1629, %1632
  %1633 = phi i64 [ %1638, %1632 ], [ %1630, %1629 ]
  %1634 = phi i32 [ %1637, %1632 ], [ %1631, %1629 ]
  %1635 = getelementptr inbounds i32, ptr %9, i64 %1633
  %1636 = load i32, ptr %1635, align 4, !tbaa !6
  %1637 = mul nsw i32 %1636, %1634
  %1638 = add nsw i64 %1633, -1
  %1639 = trunc i64 %1633 to i32
  %1640 = icmp sgt i32 %1639, 0
  br i1 %1640, label %1632, label %1641, !llvm.loop !1356

1641:                                             ; preds = %1632, %1623
  %1642 = phi i32 [ %1627, %1623 ], [ %1637, %1632 ]
  %1643 = and i64 %1592, 4294967295
  %1644 = getelementptr inbounds i32, ptr %6, i64 %1643
  %1645 = load i32, ptr %1644, align 4, !tbaa !6
  %1646 = mul nsw i32 %1645, %1642
  %1647 = add nsw i32 %1646, %1586
  %1648 = icmp sgt i64 %1584, 2
  %1649 = add nsw i64 %1585, -1
  %1650 = add i32 %1583, 1
  br i1 %1648, label %1582, label %1651, !llvm.loop !1357

1651:                                             ; preds = %1641, %1578
  %1652 = phi i32 [ %1581, %1578 ], [ %1647, %1641 ]
  %1653 = sext i32 %1652 to i64
  %1654 = getelementptr inbounds double, ptr %1243, i64 %1653
  %1655 = load double, ptr %1654, align 8, !tbaa !19
  %1656 = fptosi double %1655 to i8
  %1657 = load i8, ptr %1245, align 1, !tbaa !12
  %1658 = icmp slt i8 %1657, %1656
  br i1 %1658, label %1659, label %1660

1659:                                             ; preds = %1651
  store i8 %1656, ptr %1245, align 1, !tbaa !12
  br label %1660

1660:                                             ; preds = %1659, %1651
  %1661 = fadd fast double %1580, 1.000000e+00
  %1662 = add nuw nsw i32 %1579, 1
  br i1 %1572, label %1663, label %1710

1663:                                             ; preds = %1660
  %1664 = load i32, ptr %4, align 4, !tbaa !6
  %1665 = load i32, ptr %12, align 4, !tbaa !6
  %1666 = add nsw i32 %1665, -1
  %1667 = icmp slt i32 %1664, %1666
  br i1 %1667, label %1687, label %1668

1668:                                             ; preds = %1663
  %1669 = icmp eq i32 %1664, %1666
  br i1 %1669, label %1670, label %1703

1670:                                             ; preds = %1668
  store i32 0, ptr %4, align 4, !tbaa !6
  %1671 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1671, ptr %6, align 4, !tbaa !6
  br i1 %1577, label %1710, label %1672

1672:                                             ; preds = %1670, %1697
  %1673 = phi i64 [ %1701, %1697 ], [ 1, %1670 ]
  %1674 = getelementptr inbounds i32, ptr %4, i64 %1673
  %1675 = load i32, ptr %1674, align 4, !tbaa !6
  %1676 = getelementptr inbounds i32, ptr %12, i64 %1673
  %1677 = load i32, ptr %1676, align 4, !tbaa !6
  %1678 = add nsw i32 %1677, -1
  %1679 = icmp slt i32 %1675, %1678
  br i1 %1679, label %1680, label %1695

1680:                                             ; preds = %1672
  br i1 %1667, label %1687, label %1681

1681:                                             ; preds = %1680
  %1682 = getelementptr inbounds i32, ptr %7, i64 %1673
  %1683 = load i32, ptr %1682, align 4, !tbaa !6
  %1684 = getelementptr inbounds i32, ptr %6, i64 %1673
  %1685 = load i32, ptr %1684, align 4, !tbaa !6
  %1686 = add nsw i32 %1685, %1683
  store i32 %1686, ptr %1684, align 4, !tbaa !6
  br label %1705

1687:                                             ; preds = %1663, %1680
  %1688 = phi i32 [ %1675, %1680 ], [ %1664, %1663 ]
  %1689 = phi ptr [ %1674, %1680 ], [ %4, %1663 ]
  %1690 = phi i64 [ %1673, %1680 ], [ 0, %1663 ]
  %1691 = add nsw i32 %1688, 1
  store i32 %1691, ptr %1689, align 4, !tbaa !6
  %1692 = getelementptr inbounds i32, ptr %7, i64 %1690
  %1693 = load i32, ptr %1692, align 4, !tbaa !6
  %1694 = getelementptr inbounds i32, ptr %6, i64 %1690
  br label %1705

1695:                                             ; preds = %1672
  %1696 = icmp eq i32 %1675, %1678
  br i1 %1696, label %1697, label %1703

1697:                                             ; preds = %1695
  store i32 0, ptr %1674, align 4, !tbaa !6
  %1698 = getelementptr inbounds i32, ptr %8, i64 %1673
  %1699 = load i32, ptr %1698, align 4, !tbaa !6
  %1700 = getelementptr inbounds i32, ptr %6, i64 %1673
  store i32 %1699, ptr %1700, align 4, !tbaa !6
  %1701 = add nuw nsw i64 %1673, 1
  %1702 = icmp eq i64 %1701, %1575
  br i1 %1702, label %1710, label %1672, !llvm.loop !1358

1703:                                             ; preds = %1668, %1695
  %1704 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1984, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5518

1705:                                             ; preds = %1681, %1687
  %1706 = phi ptr [ %1694, %1687 ], [ %1674, %1681 ]
  %1707 = phi i32 [ %1693, %1687 ], [ 1, %1681 ]
  %1708 = load i32, ptr %1706, align 4, !tbaa !6
  %1709 = add nsw i32 %1708, %1707
  store i32 %1709, ptr %1706, align 4, !tbaa !6
  br label %1710

1710:                                             ; preds = %1697, %1705, %1670, %1660
  %1711 = icmp eq i32 %1662, %5
  br i1 %1711, label %5513, label %1578, !llvm.loop !1359

1712:                                             ; preds = %1561, %1849
  %1713 = phi i32 [ 0, %1561 ], [ %1798, %1849 ]
  %1714 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1562, label %1715, label %1784

1715:                                             ; preds = %1712, %1774
  %1716 = phi i32 [ %1783, %1774 ], [ 0, %1712 ]
  %1717 = phi i64 [ %1725, %1774 ], [ %1566, %1712 ]
  %1718 = phi i64 [ %1782, %1774 ], [ %1565, %1712 ]
  %1719 = phi i32 [ %1780, %1774 ], [ %1714, %1712 ]
  %1720 = sub i32 %1564, %1716
  %1721 = tail call i32 @llvm.smin.i32(i32 %1720, i32 0)
  %1722 = sub i32 %1720, %1721
  %1723 = zext i32 %1722 to i64
  %1724 = add nuw nsw i64 %1723, 1
  %1725 = add nsw i64 %1717, -1
  %1726 = icmp ult i32 %1722, 31
  br i1 %1726, label %1762, label %1727

1727:                                             ; preds = %1715
  %1728 = and i64 %1724, 8589934560
  %1729 = sub i64 %1718, %1728
  br label %1730

1730:                                             ; preds = %1730, %1727
  %1731 = phi i64 [ 0, %1727 ], [ %1754, %1730 ]
  %1732 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1727 ], [ %1750, %1730 ]
  %1733 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1727 ], [ %1751, %1730 ]
  %1734 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1727 ], [ %1752, %1730 ]
  %1735 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1727 ], [ %1753, %1730 ]
  %1736 = sub i64 %1718, %1731
  %1737 = getelementptr inbounds i32, ptr %11, i64 %1736
  %1738 = getelementptr inbounds i32, ptr %1737, i64 -7
  %1739 = load <8 x i32>, ptr %1738, align 4, !tbaa !6
  %1740 = shufflevector <8 x i32> %1739, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1741 = getelementptr inbounds i32, ptr %1737, i64 -15
  %1742 = load <8 x i32>, ptr %1741, align 4, !tbaa !6
  %1743 = shufflevector <8 x i32> %1742, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1744 = getelementptr inbounds i32, ptr %1737, i64 -23
  %1745 = load <8 x i32>, ptr %1744, align 4, !tbaa !6
  %1746 = shufflevector <8 x i32> %1745, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1747 = getelementptr inbounds i32, ptr %1737, i64 -31
  %1748 = load <8 x i32>, ptr %1747, align 4, !tbaa !6
  %1749 = shufflevector <8 x i32> %1748, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1750 = mul <8 x i32> %1740, %1732
  %1751 = mul <8 x i32> %1743, %1733
  %1752 = mul <8 x i32> %1746, %1734
  %1753 = mul <8 x i32> %1749, %1735
  %1754 = add nuw i64 %1731, 32
  %1755 = icmp eq i64 %1754, %1728
  br i1 %1755, label %1756, label %1730, !llvm.loop !1360

1756:                                             ; preds = %1730
  %1757 = mul <8 x i32> %1751, %1750
  %1758 = mul <8 x i32> %1752, %1757
  %1759 = mul <8 x i32> %1753, %1758
  %1760 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1759)
  %1761 = icmp eq i64 %1724, %1728
  br i1 %1761, label %1774, label %1762

1762:                                             ; preds = %1715, %1756
  %1763 = phi i64 [ %1718, %1715 ], [ %1729, %1756 ]
  %1764 = phi i32 [ 1, %1715 ], [ %1760, %1756 ]
  br label %1765

1765:                                             ; preds = %1762, %1765
  %1766 = phi i64 [ %1771, %1765 ], [ %1763, %1762 ]
  %1767 = phi i32 [ %1770, %1765 ], [ %1764, %1762 ]
  %1768 = getelementptr inbounds i32, ptr %11, i64 %1766
  %1769 = load i32, ptr %1768, align 4, !tbaa !6
  %1770 = mul nsw i32 %1769, %1767
  %1771 = add nsw i64 %1766, -1
  %1772 = trunc i64 %1766 to i32
  %1773 = icmp sgt i32 %1772, 0
  br i1 %1773, label %1765, label %1774, !llvm.loop !1361

1774:                                             ; preds = %1765, %1756
  %1775 = phi i32 [ %1760, %1756 ], [ %1770, %1765 ]
  %1776 = and i64 %1725, 4294967295
  %1777 = getelementptr inbounds i32, ptr %6, i64 %1776
  %1778 = load i32, ptr %1777, align 4, !tbaa !6
  %1779 = mul nsw i32 %1778, %1775
  %1780 = add nsw i32 %1779, %1719
  %1781 = icmp sgt i64 %1717, 2
  %1782 = add nsw i64 %1718, -1
  %1783 = add i32 %1716, 1
  br i1 %1781, label %1715, label %1784, !llvm.loop !1362

1784:                                             ; preds = %1774, %1712
  %1785 = phi i32 [ %1714, %1712 ], [ %1780, %1774 ]
  %1786 = icmp slt i32 %1785, %5
  br i1 %1786, label %1789, label %1787

1787:                                             ; preds = %1784
  %1788 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1984, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5518

1789:                                             ; preds = %1784
  %1790 = sext i32 %1785 to i64
  %1791 = getelementptr inbounds double, ptr %1243, i64 %1790
  %1792 = load double, ptr %1791, align 8, !tbaa !19
  %1793 = fptosi double %1792 to i8
  %1794 = load i8, ptr %1245, align 1, !tbaa !12
  %1795 = icmp slt i8 %1794, %1793
  br i1 %1795, label %1796, label %1797

1796:                                             ; preds = %1789
  store i8 %1793, ptr %1245, align 1, !tbaa !12
  br label %1797

1797:                                             ; preds = %1796, %1789
  %1798 = add nuw nsw i32 %1713, 1
  br i1 %1563, label %1799, label %1849

1799:                                             ; preds = %1797
  %1800 = load i32, ptr %4, align 4, !tbaa !6
  %1801 = load i32, ptr %12, align 4, !tbaa !6
  %1802 = add nsw i32 %1801, -1
  %1803 = icmp slt i32 %1800, %1802
  br i1 %1803, label %1826, label %1804

1804:                                             ; preds = %1799
  %1805 = icmp eq i32 %1800, %1802
  br i1 %1805, label %1806, label %1842

1806:                                             ; preds = %1804
  store i32 0, ptr %4, align 4, !tbaa !6
  %1807 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1807, ptr %6, align 4, !tbaa !6
  br i1 %1568, label %1849, label %1808

1808:                                             ; preds = %1806, %1836
  %1809 = phi i64 [ %1840, %1836 ], [ 1, %1806 ]
  %1810 = getelementptr inbounds i32, ptr %4, i64 %1809
  %1811 = load i32, ptr %1810, align 4, !tbaa !6
  %1812 = getelementptr inbounds i32, ptr %12, i64 %1809
  %1813 = load i32, ptr %1812, align 4, !tbaa !6
  %1814 = add nsw i32 %1813, -1
  %1815 = icmp slt i32 %1811, %1814
  br i1 %1815, label %1816, label %1834

1816:                                             ; preds = %1808
  br i1 %1803, label %1826, label %1817

1817:                                             ; preds = %1816
  %1818 = shl i64 %1809, 32
  %1819 = add i64 %1818, -4294967296
  %1820 = ashr exact i64 %1819, 32
  %1821 = getelementptr inbounds i32, ptr %7, i64 %1820
  %1822 = load i32, ptr %1821, align 4, !tbaa !6
  %1823 = getelementptr inbounds i32, ptr %6, i64 %1809
  %1824 = load i32, ptr %1823, align 4, !tbaa !6
  %1825 = add nsw i32 %1824, %1822
  store i32 %1825, ptr %1823, align 4, !tbaa !6
  br label %1844

1826:                                             ; preds = %1799, %1816
  %1827 = phi i32 [ %1811, %1816 ], [ %1800, %1799 ]
  %1828 = phi ptr [ %1810, %1816 ], [ %4, %1799 ]
  %1829 = phi i64 [ %1809, %1816 ], [ 0, %1799 ]
  %1830 = add nsw i32 %1827, 1
  store i32 %1830, ptr %1828, align 4, !tbaa !6
  %1831 = getelementptr inbounds i32, ptr %7, i64 %1829
  %1832 = load i32, ptr %1831, align 4, !tbaa !6
  %1833 = getelementptr inbounds i32, ptr %6, i64 %1829
  br label %1844

1834:                                             ; preds = %1808
  %1835 = icmp eq i32 %1811, %1814
  br i1 %1835, label %1836, label %1842

1836:                                             ; preds = %1834
  store i32 0, ptr %1810, align 4, !tbaa !6
  %1837 = getelementptr inbounds i32, ptr %8, i64 %1809
  %1838 = load i32, ptr %1837, align 4, !tbaa !6
  %1839 = getelementptr inbounds i32, ptr %6, i64 %1809
  store i32 %1838, ptr %1839, align 4, !tbaa !6
  %1840 = add nuw nsw i64 %1809, 1
  %1841 = icmp eq i64 %1840, %1566
  br i1 %1841, label %1849, label %1808, !llvm.loop !1363

1842:                                             ; preds = %1804, %1834
  %1843 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1984, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5518

1844:                                             ; preds = %1817, %1826
  %1845 = phi ptr [ %1833, %1826 ], [ %1810, %1817 ]
  %1846 = phi i32 [ %1832, %1826 ], [ 1, %1817 ]
  %1847 = load i32, ptr %1845, align 4, !tbaa !6
  %1848 = add nsw i32 %1847, %1846
  store i32 %1848, ptr %1845, align 4, !tbaa !6
  br label %1849

1849:                                             ; preds = %1836, %1844, %1806, %1797
  %1850 = icmp eq i32 %1798, %5
  br i1 %1850, label %5513, label %1712, !llvm.loop !1364

1851:                                             ; preds = %1254
  %1852 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1984, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5513

1853:                                             ; preds = %18
  %1854 = getelementptr inbounds ptr, ptr %14, i64 %19
  %1855 = load ptr, ptr %1854, align 8, !tbaa !10
  %1856 = getelementptr inbounds ptr, ptr %16, i64 %19
  %1857 = load ptr, ptr %1856, align 8, !tbaa !10
  %1858 = load double, ptr %1855, align 8, !tbaa !19
  %1859 = fptosi double %1858 to i16
  store i16 %1859, ptr %1857, align 2, !tbaa !79
  %1860 = icmp eq i32 %13, 0
  br i1 %1860, label %5513, label %1861

1861:                                             ; preds = %1853
  switch i32 %1, label %2462 [
    i32 1, label %1862
    i32 0, label %2164
  ]

1862:                                             ; preds = %1861
  %1863 = getelementptr inbounds i32, ptr %3, i64 %19
  %1864 = load i32, ptr %1863, align 4, !tbaa !6
  %1865 = icmp eq i32 %1864, 0
  %1866 = icmp sgt i32 %5, 0
  br i1 %1865, label %1876, label %1867

1867:                                             ; preds = %1862
  br i1 %1866, label %1868, label %5513

1868:                                             ; preds = %1867
  %1869 = icmp sgt i32 %13, 1
  %1870 = icmp sgt i32 %13, 0
  %1871 = add i32 %13, -2
  %1872 = zext i32 %1871 to i64
  %1873 = zext i32 %13 to i64
  %1874 = add nuw i32 %5, 1
  %1875 = icmp eq i32 %13, 1
  br label %2024

1876:                                             ; preds = %1862
  br i1 %1866, label %1877, label %5513

1877:                                             ; preds = %1876
  %1878 = icmp sgt i32 %13, 1
  %1879 = icmp sgt i32 %13, 0
  %1880 = add i32 %13, -2
  %1881 = zext i32 %1880 to i64
  %1882 = zext i32 %13 to i64
  %1883 = add nuw i32 %5, 1
  %1884 = icmp eq i32 %13, 1
  br label %1885

1885:                                             ; preds = %1877, %2022
  %1886 = phi i16 [ %1859, %1877 ], [ %1972, %2022 ]
  %1887 = phi i32 [ 0, %1877 ], [ %1974, %2022 ]
  %1888 = phi double [ 0.000000e+00, %1877 ], [ %1973, %2022 ]
  %1889 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1878, label %1890, label %1959

1890:                                             ; preds = %1885, %1949
  %1891 = phi i32 [ %1958, %1949 ], [ 0, %1885 ]
  %1892 = phi i64 [ %1900, %1949 ], [ %1882, %1885 ]
  %1893 = phi i64 [ %1957, %1949 ], [ %1881, %1885 ]
  %1894 = phi i32 [ %1955, %1949 ], [ %1889, %1885 ]
  %1895 = sub i32 %1880, %1891
  %1896 = tail call i32 @llvm.smin.i32(i32 %1895, i32 0)
  %1897 = sub i32 %1895, %1896
  %1898 = zext i32 %1897 to i64
  %1899 = add nuw nsw i64 %1898, 1
  %1900 = add nsw i64 %1892, -1
  %1901 = icmp ult i32 %1897, 31
  br i1 %1901, label %1937, label %1902

1902:                                             ; preds = %1890
  %1903 = and i64 %1899, 8589934560
  %1904 = sub i64 %1893, %1903
  br label %1905

1905:                                             ; preds = %1905, %1902
  %1906 = phi i64 [ 0, %1902 ], [ %1929, %1905 ]
  %1907 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1902 ], [ %1925, %1905 ]
  %1908 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1902 ], [ %1926, %1905 ]
  %1909 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1902 ], [ %1927, %1905 ]
  %1910 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %1902 ], [ %1928, %1905 ]
  %1911 = sub i64 %1893, %1906
  %1912 = getelementptr inbounds i32, ptr %9, i64 %1911
  %1913 = getelementptr inbounds i32, ptr %1912, i64 -7
  %1914 = load <8 x i32>, ptr %1913, align 4, !tbaa !6
  %1915 = shufflevector <8 x i32> %1914, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1916 = getelementptr inbounds i32, ptr %1912, i64 -15
  %1917 = load <8 x i32>, ptr %1916, align 4, !tbaa !6
  %1918 = shufflevector <8 x i32> %1917, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1919 = getelementptr inbounds i32, ptr %1912, i64 -23
  %1920 = load <8 x i32>, ptr %1919, align 4, !tbaa !6
  %1921 = shufflevector <8 x i32> %1920, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1922 = getelementptr inbounds i32, ptr %1912, i64 -31
  %1923 = load <8 x i32>, ptr %1922, align 4, !tbaa !6
  %1924 = shufflevector <8 x i32> %1923, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %1925 = mul <8 x i32> %1915, %1907
  %1926 = mul <8 x i32> %1918, %1908
  %1927 = mul <8 x i32> %1921, %1909
  %1928 = mul <8 x i32> %1924, %1910
  %1929 = add nuw i64 %1906, 32
  %1930 = icmp eq i64 %1929, %1903
  br i1 %1930, label %1931, label %1905, !llvm.loop !1365

1931:                                             ; preds = %1905
  %1932 = mul <8 x i32> %1926, %1925
  %1933 = mul <8 x i32> %1927, %1932
  %1934 = mul <8 x i32> %1928, %1933
  %1935 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %1934)
  %1936 = icmp eq i64 %1899, %1903
  br i1 %1936, label %1949, label %1937

1937:                                             ; preds = %1890, %1931
  %1938 = phi i64 [ %1893, %1890 ], [ %1904, %1931 ]
  %1939 = phi i32 [ 1, %1890 ], [ %1935, %1931 ]
  br label %1940

1940:                                             ; preds = %1937, %1940
  %1941 = phi i64 [ %1946, %1940 ], [ %1938, %1937 ]
  %1942 = phi i32 [ %1945, %1940 ], [ %1939, %1937 ]
  %1943 = getelementptr inbounds i32, ptr %9, i64 %1941
  %1944 = load i32, ptr %1943, align 4, !tbaa !6
  %1945 = mul nsw i32 %1944, %1942
  %1946 = add nsw i64 %1941, -1
  %1947 = trunc i64 %1941 to i32
  %1948 = icmp sgt i32 %1947, 0
  br i1 %1948, label %1940, label %1949, !llvm.loop !1366

1949:                                             ; preds = %1940, %1931
  %1950 = phi i32 [ %1935, %1931 ], [ %1945, %1940 ]
  %1951 = and i64 %1900, 4294967295
  %1952 = getelementptr inbounds i32, ptr %6, i64 %1951
  %1953 = load i32, ptr %1952, align 4, !tbaa !6
  %1954 = mul nsw i32 %1953, %1950
  %1955 = add nsw i32 %1954, %1894
  %1956 = icmp sgt i64 %1892, 2
  %1957 = add nsw i64 %1893, -1
  %1958 = add i32 %1891, 1
  br i1 %1956, label %1890, label %1959, !llvm.loop !1367

1959:                                             ; preds = %1949, %1885
  %1960 = phi i32 [ %1889, %1885 ], [ %1955, %1949 ]
  %1961 = sext i32 %1960 to i64
  %1962 = getelementptr inbounds double, ptr %2, i64 %1961
  %1963 = load double, ptr %1962, align 8, !tbaa !19
  %1964 = getelementptr inbounds double, ptr %1855, i64 %1961
  %1965 = load double, ptr %1964, align 8, !tbaa !19
  %1966 = fptosi double %1965 to i16
  %1967 = fcmp fast one double %1963, 0.000000e+00
  %1968 = icmp slt i16 %1886, %1966
  %1969 = select i1 %1967, i1 %1968, i1 false
  br i1 %1969, label %1970, label %1971

1970:                                             ; preds = %1959
  store i16 %1966, ptr %1857, align 2, !tbaa !79
  br label %1971

1971:                                             ; preds = %1970, %1959
  %1972 = phi i16 [ %1966, %1970 ], [ %1886, %1959 ]
  %1973 = fadd fast double %1963, %1888
  %1974 = add nuw nsw i32 %1887, 1
  br i1 %1879, label %1975, label %2022

1975:                                             ; preds = %1971
  %1976 = load i32, ptr %4, align 4, !tbaa !6
  %1977 = load i32, ptr %12, align 4, !tbaa !6
  %1978 = add nsw i32 %1977, -1
  %1979 = icmp slt i32 %1976, %1978
  br i1 %1979, label %1999, label %1980

1980:                                             ; preds = %1975
  %1981 = icmp eq i32 %1976, %1978
  br i1 %1981, label %1982, label %2015

1982:                                             ; preds = %1980
  store i32 0, ptr %4, align 4, !tbaa !6
  %1983 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %1983, ptr %6, align 4, !tbaa !6
  br i1 %1884, label %2022, label %1984

1984:                                             ; preds = %1982, %2009
  %1985 = phi i64 [ %2013, %2009 ], [ 1, %1982 ]
  %1986 = getelementptr inbounds i32, ptr %4, i64 %1985
  %1987 = load i32, ptr %1986, align 4, !tbaa !6
  %1988 = getelementptr inbounds i32, ptr %12, i64 %1985
  %1989 = load i32, ptr %1988, align 4, !tbaa !6
  %1990 = add nsw i32 %1989, -1
  %1991 = icmp slt i32 %1987, %1990
  br i1 %1991, label %1992, label %2007

1992:                                             ; preds = %1984
  br i1 %1979, label %1999, label %1993

1993:                                             ; preds = %1992
  %1994 = getelementptr inbounds i32, ptr %7, i64 %1985
  %1995 = load i32, ptr %1994, align 4, !tbaa !6
  %1996 = getelementptr inbounds i32, ptr %6, i64 %1985
  %1997 = load i32, ptr %1996, align 4, !tbaa !6
  %1998 = add nsw i32 %1997, %1995
  store i32 %1998, ptr %1996, align 4, !tbaa !6
  br label %2017

1999:                                             ; preds = %1975, %1992
  %2000 = phi i32 [ %1987, %1992 ], [ %1976, %1975 ]
  %2001 = phi ptr [ %1986, %1992 ], [ %4, %1975 ]
  %2002 = phi i64 [ %1985, %1992 ], [ 0, %1975 ]
  %2003 = add nsw i32 %2000, 1
  store i32 %2003, ptr %2001, align 4, !tbaa !6
  %2004 = getelementptr inbounds i32, ptr %7, i64 %2002
  %2005 = load i32, ptr %2004, align 4, !tbaa !6
  %2006 = getelementptr inbounds i32, ptr %6, i64 %2002
  br label %2017

2007:                                             ; preds = %1984
  %2008 = icmp eq i32 %1987, %1990
  br i1 %2008, label %2009, label %2015

2009:                                             ; preds = %2007
  store i32 0, ptr %1986, align 4, !tbaa !6
  %2010 = getelementptr inbounds i32, ptr %8, i64 %1985
  %2011 = load i32, ptr %2010, align 4, !tbaa !6
  %2012 = getelementptr inbounds i32, ptr %6, i64 %1985
  store i32 %2011, ptr %2012, align 4, !tbaa !6
  %2013 = add nuw nsw i64 %1985, 1
  %2014 = icmp eq i64 %2013, %1882
  br i1 %2014, label %2022, label %1984, !llvm.loop !1368

2015:                                             ; preds = %1980, %2007
  %2016 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1989, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5518

2017:                                             ; preds = %1993, %1999
  %2018 = phi ptr [ %2006, %1999 ], [ %1986, %1993 ]
  %2019 = phi i32 [ %2005, %1999 ], [ 1, %1993 ]
  %2020 = load i32, ptr %2018, align 4, !tbaa !6
  %2021 = add nsw i32 %2020, %2019
  store i32 %2021, ptr %2018, align 4, !tbaa !6
  br label %2022

2022:                                             ; preds = %2009, %2017, %1982, %1971
  %2023 = icmp eq i32 %1974, %5
  br i1 %2023, label %5513, label %1885, !llvm.loop !1369

2024:                                             ; preds = %1868, %2162
  %2025 = phi i16 [ %1859, %1868 ], [ %2110, %2162 ]
  %2026 = phi i32 [ 0, %1868 ], [ %2111, %2162 ]
  %2027 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %1869, label %2028, label %2097

2028:                                             ; preds = %2024, %2087
  %2029 = phi i32 [ %2096, %2087 ], [ 0, %2024 ]
  %2030 = phi i64 [ %2038, %2087 ], [ %1873, %2024 ]
  %2031 = phi i64 [ %2095, %2087 ], [ %1872, %2024 ]
  %2032 = phi i32 [ %2093, %2087 ], [ %2027, %2024 ]
  %2033 = sub i32 %1871, %2029
  %2034 = tail call i32 @llvm.smin.i32(i32 %2033, i32 0)
  %2035 = sub i32 %2033, %2034
  %2036 = zext i32 %2035 to i64
  %2037 = add nuw nsw i64 %2036, 1
  %2038 = add nsw i64 %2030, -1
  %2039 = icmp ult i32 %2035, 31
  br i1 %2039, label %2075, label %2040

2040:                                             ; preds = %2028
  %2041 = and i64 %2037, 8589934560
  %2042 = sub i64 %2031, %2041
  br label %2043

2043:                                             ; preds = %2043, %2040
  %2044 = phi i64 [ 0, %2040 ], [ %2067, %2043 ]
  %2045 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2040 ], [ %2063, %2043 ]
  %2046 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2040 ], [ %2064, %2043 ]
  %2047 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2040 ], [ %2065, %2043 ]
  %2048 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2040 ], [ %2066, %2043 ]
  %2049 = sub i64 %2031, %2044
  %2050 = getelementptr inbounds i32, ptr %11, i64 %2049
  %2051 = getelementptr inbounds i32, ptr %2050, i64 -7
  %2052 = load <8 x i32>, ptr %2051, align 4, !tbaa !6
  %2053 = shufflevector <8 x i32> %2052, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2054 = getelementptr inbounds i32, ptr %2050, i64 -15
  %2055 = load <8 x i32>, ptr %2054, align 4, !tbaa !6
  %2056 = shufflevector <8 x i32> %2055, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2057 = getelementptr inbounds i32, ptr %2050, i64 -23
  %2058 = load <8 x i32>, ptr %2057, align 4, !tbaa !6
  %2059 = shufflevector <8 x i32> %2058, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2060 = getelementptr inbounds i32, ptr %2050, i64 -31
  %2061 = load <8 x i32>, ptr %2060, align 4, !tbaa !6
  %2062 = shufflevector <8 x i32> %2061, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2063 = mul <8 x i32> %2053, %2045
  %2064 = mul <8 x i32> %2056, %2046
  %2065 = mul <8 x i32> %2059, %2047
  %2066 = mul <8 x i32> %2062, %2048
  %2067 = add nuw i64 %2044, 32
  %2068 = icmp eq i64 %2067, %2041
  br i1 %2068, label %2069, label %2043, !llvm.loop !1370

2069:                                             ; preds = %2043
  %2070 = mul <8 x i32> %2064, %2063
  %2071 = mul <8 x i32> %2065, %2070
  %2072 = mul <8 x i32> %2066, %2071
  %2073 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2072)
  %2074 = icmp eq i64 %2037, %2041
  br i1 %2074, label %2087, label %2075

2075:                                             ; preds = %2028, %2069
  %2076 = phi i64 [ %2031, %2028 ], [ %2042, %2069 ]
  %2077 = phi i32 [ 1, %2028 ], [ %2073, %2069 ]
  br label %2078

2078:                                             ; preds = %2075, %2078
  %2079 = phi i64 [ %2084, %2078 ], [ %2076, %2075 ]
  %2080 = phi i32 [ %2083, %2078 ], [ %2077, %2075 ]
  %2081 = getelementptr inbounds i32, ptr %11, i64 %2079
  %2082 = load i32, ptr %2081, align 4, !tbaa !6
  %2083 = mul nsw i32 %2082, %2080
  %2084 = add nsw i64 %2079, -1
  %2085 = trunc i64 %2079 to i32
  %2086 = icmp sgt i32 %2085, 0
  br i1 %2086, label %2078, label %2087, !llvm.loop !1371

2087:                                             ; preds = %2078, %2069
  %2088 = phi i32 [ %2073, %2069 ], [ %2083, %2078 ]
  %2089 = and i64 %2038, 4294967295
  %2090 = getelementptr inbounds i32, ptr %6, i64 %2089
  %2091 = load i32, ptr %2090, align 4, !tbaa !6
  %2092 = mul nsw i32 %2091, %2088
  %2093 = add nsw i32 %2092, %2032
  %2094 = icmp sgt i64 %2030, 2
  %2095 = add nsw i64 %2031, -1
  %2096 = add i32 %2029, 1
  br i1 %2094, label %2028, label %2097, !llvm.loop !1372

2097:                                             ; preds = %2087, %2024
  %2098 = phi i32 [ %2027, %2024 ], [ %2093, %2087 ]
  %2099 = icmp slt i32 %2098, %5
  br i1 %2099, label %2102, label %2100

2100:                                             ; preds = %2097
  %2101 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1989, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5518

2102:                                             ; preds = %2097
  %2103 = sext i32 %2098 to i64
  %2104 = getelementptr inbounds double, ptr %1855, i64 %2103
  %2105 = load double, ptr %2104, align 8, !tbaa !19
  %2106 = fptosi double %2105 to i16
  %2107 = icmp slt i16 %2025, %2106
  br i1 %2107, label %2108, label %2109

2108:                                             ; preds = %2102
  store i16 %2106, ptr %1857, align 2, !tbaa !79
  br label %2109

2109:                                             ; preds = %2102, %2108
  %2110 = phi i16 [ %2025, %2102 ], [ %2106, %2108 ]
  %2111 = add nuw nsw i32 %2026, 1
  br i1 %1870, label %2112, label %2162

2112:                                             ; preds = %2109
  %2113 = load i32, ptr %4, align 4, !tbaa !6
  %2114 = load i32, ptr %12, align 4, !tbaa !6
  %2115 = add nsw i32 %2114, -1
  %2116 = icmp slt i32 %2113, %2115
  br i1 %2116, label %2139, label %2117

2117:                                             ; preds = %2112
  %2118 = icmp eq i32 %2113, %2115
  br i1 %2118, label %2119, label %2155

2119:                                             ; preds = %2117
  store i32 0, ptr %4, align 4, !tbaa !6
  %2120 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2120, ptr %6, align 4, !tbaa !6
  br i1 %1875, label %2162, label %2121

2121:                                             ; preds = %2119, %2149
  %2122 = phi i64 [ %2153, %2149 ], [ 1, %2119 ]
  %2123 = getelementptr inbounds i32, ptr %4, i64 %2122
  %2124 = load i32, ptr %2123, align 4, !tbaa !6
  %2125 = getelementptr inbounds i32, ptr %12, i64 %2122
  %2126 = load i32, ptr %2125, align 4, !tbaa !6
  %2127 = add nsw i32 %2126, -1
  %2128 = icmp slt i32 %2124, %2127
  br i1 %2128, label %2129, label %2147

2129:                                             ; preds = %2121
  br i1 %2116, label %2139, label %2130

2130:                                             ; preds = %2129
  %2131 = shl i64 %2122, 32
  %2132 = add i64 %2131, -4294967296
  %2133 = ashr exact i64 %2132, 32
  %2134 = getelementptr inbounds i32, ptr %7, i64 %2133
  %2135 = load i32, ptr %2134, align 4, !tbaa !6
  %2136 = getelementptr inbounds i32, ptr %6, i64 %2122
  %2137 = load i32, ptr %2136, align 4, !tbaa !6
  %2138 = add nsw i32 %2137, %2135
  store i32 %2138, ptr %2136, align 4, !tbaa !6
  br label %2157

2139:                                             ; preds = %2112, %2129
  %2140 = phi i32 [ %2124, %2129 ], [ %2113, %2112 ]
  %2141 = phi ptr [ %2123, %2129 ], [ %4, %2112 ]
  %2142 = phi i64 [ %2122, %2129 ], [ 0, %2112 ]
  %2143 = add nsw i32 %2140, 1
  store i32 %2143, ptr %2141, align 4, !tbaa !6
  %2144 = getelementptr inbounds i32, ptr %7, i64 %2142
  %2145 = load i32, ptr %2144, align 4, !tbaa !6
  %2146 = getelementptr inbounds i32, ptr %6, i64 %2142
  br label %2157

2147:                                             ; preds = %2121
  %2148 = icmp eq i32 %2124, %2127
  br i1 %2148, label %2149, label %2155

2149:                                             ; preds = %2147
  store i32 0, ptr %2123, align 4, !tbaa !6
  %2150 = getelementptr inbounds i32, ptr %8, i64 %2122
  %2151 = load i32, ptr %2150, align 4, !tbaa !6
  %2152 = getelementptr inbounds i32, ptr %6, i64 %2122
  store i32 %2151, ptr %2152, align 4, !tbaa !6
  %2153 = add nuw nsw i64 %2122, 1
  %2154 = icmp eq i64 %2153, %1873
  br i1 %2154, label %2162, label %2121, !llvm.loop !1373

2155:                                             ; preds = %2117, %2147
  %2156 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1989, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5518

2157:                                             ; preds = %2130, %2139
  %2158 = phi ptr [ %2146, %2139 ], [ %2123, %2130 ]
  %2159 = phi i32 [ %2145, %2139 ], [ 1, %2130 ]
  %2160 = load i32, ptr %2158, align 4, !tbaa !6
  %2161 = add nsw i32 %2160, %2159
  store i32 %2161, ptr %2158, align 4, !tbaa !6
  br label %2162

2162:                                             ; preds = %2149, %2157, %2119, %2109
  %2163 = icmp eq i32 %2111, %5
  br i1 %2163, label %5513, label %2024, !llvm.loop !1374

2164:                                             ; preds = %1861
  %2165 = getelementptr inbounds i32, ptr %3, i64 %19
  %2166 = load i32, ptr %2165, align 4, !tbaa !6
  %2167 = icmp eq i32 %2166, 0
  %2168 = icmp sgt i32 %5, 0
  br i1 %2167, label %2178, label %2169

2169:                                             ; preds = %2164
  br i1 %2168, label %2170, label %5513

2170:                                             ; preds = %2169
  %2171 = icmp sgt i32 %13, 1
  %2172 = icmp sgt i32 %13, 0
  %2173 = add i32 %13, -2
  %2174 = zext i32 %2173 to i64
  %2175 = zext i32 %13 to i64
  %2176 = add nuw i32 %5, 1
  %2177 = icmp eq i32 %13, 1
  br label %2322

2178:                                             ; preds = %2164
  br i1 %2168, label %2179, label %5513

2179:                                             ; preds = %2178
  %2180 = icmp sgt i32 %13, 1
  %2181 = icmp sgt i32 %13, 0
  %2182 = add i32 %13, -2
  %2183 = zext i32 %2182 to i64
  %2184 = zext i32 %13 to i64
  %2185 = add nuw i32 %5, 1
  %2186 = icmp eq i32 %13, 1
  br label %2187

2187:                                             ; preds = %2179, %2320
  %2188 = phi i16 [ %1859, %2179 ], [ %2270, %2320 ]
  %2189 = phi i32 [ 0, %2179 ], [ %2272, %2320 ]
  %2190 = phi double [ 0.000000e+00, %2179 ], [ %2271, %2320 ]
  %2191 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2180, label %2192, label %2261

2192:                                             ; preds = %2187, %2251
  %2193 = phi i32 [ %2260, %2251 ], [ 0, %2187 ]
  %2194 = phi i64 [ %2202, %2251 ], [ %2184, %2187 ]
  %2195 = phi i64 [ %2259, %2251 ], [ %2183, %2187 ]
  %2196 = phi i32 [ %2257, %2251 ], [ %2191, %2187 ]
  %2197 = sub i32 %2182, %2193
  %2198 = tail call i32 @llvm.smin.i32(i32 %2197, i32 0)
  %2199 = sub i32 %2197, %2198
  %2200 = zext i32 %2199 to i64
  %2201 = add nuw nsw i64 %2200, 1
  %2202 = add nsw i64 %2194, -1
  %2203 = icmp ult i32 %2199, 31
  br i1 %2203, label %2239, label %2204

2204:                                             ; preds = %2192
  %2205 = and i64 %2201, 8589934560
  %2206 = sub i64 %2195, %2205
  br label %2207

2207:                                             ; preds = %2207, %2204
  %2208 = phi i64 [ 0, %2204 ], [ %2231, %2207 ]
  %2209 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2204 ], [ %2227, %2207 ]
  %2210 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2204 ], [ %2228, %2207 ]
  %2211 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2204 ], [ %2229, %2207 ]
  %2212 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2204 ], [ %2230, %2207 ]
  %2213 = sub i64 %2195, %2208
  %2214 = getelementptr inbounds i32, ptr %9, i64 %2213
  %2215 = getelementptr inbounds i32, ptr %2214, i64 -7
  %2216 = load <8 x i32>, ptr %2215, align 4, !tbaa !6
  %2217 = shufflevector <8 x i32> %2216, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2218 = getelementptr inbounds i32, ptr %2214, i64 -15
  %2219 = load <8 x i32>, ptr %2218, align 4, !tbaa !6
  %2220 = shufflevector <8 x i32> %2219, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2221 = getelementptr inbounds i32, ptr %2214, i64 -23
  %2222 = load <8 x i32>, ptr %2221, align 4, !tbaa !6
  %2223 = shufflevector <8 x i32> %2222, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2224 = getelementptr inbounds i32, ptr %2214, i64 -31
  %2225 = load <8 x i32>, ptr %2224, align 4, !tbaa !6
  %2226 = shufflevector <8 x i32> %2225, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2227 = mul <8 x i32> %2217, %2209
  %2228 = mul <8 x i32> %2220, %2210
  %2229 = mul <8 x i32> %2223, %2211
  %2230 = mul <8 x i32> %2226, %2212
  %2231 = add nuw i64 %2208, 32
  %2232 = icmp eq i64 %2231, %2205
  br i1 %2232, label %2233, label %2207, !llvm.loop !1375

2233:                                             ; preds = %2207
  %2234 = mul <8 x i32> %2228, %2227
  %2235 = mul <8 x i32> %2229, %2234
  %2236 = mul <8 x i32> %2230, %2235
  %2237 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2236)
  %2238 = icmp eq i64 %2201, %2205
  br i1 %2238, label %2251, label %2239

2239:                                             ; preds = %2192, %2233
  %2240 = phi i64 [ %2195, %2192 ], [ %2206, %2233 ]
  %2241 = phi i32 [ 1, %2192 ], [ %2237, %2233 ]
  br label %2242

2242:                                             ; preds = %2239, %2242
  %2243 = phi i64 [ %2248, %2242 ], [ %2240, %2239 ]
  %2244 = phi i32 [ %2247, %2242 ], [ %2241, %2239 ]
  %2245 = getelementptr inbounds i32, ptr %9, i64 %2243
  %2246 = load i32, ptr %2245, align 4, !tbaa !6
  %2247 = mul nsw i32 %2246, %2244
  %2248 = add nsw i64 %2243, -1
  %2249 = trunc i64 %2243 to i32
  %2250 = icmp sgt i32 %2249, 0
  br i1 %2250, label %2242, label %2251, !llvm.loop !1376

2251:                                             ; preds = %2242, %2233
  %2252 = phi i32 [ %2237, %2233 ], [ %2247, %2242 ]
  %2253 = and i64 %2202, 4294967295
  %2254 = getelementptr inbounds i32, ptr %6, i64 %2253
  %2255 = load i32, ptr %2254, align 4, !tbaa !6
  %2256 = mul nsw i32 %2255, %2252
  %2257 = add nsw i32 %2256, %2196
  %2258 = icmp sgt i64 %2194, 2
  %2259 = add nsw i64 %2195, -1
  %2260 = add i32 %2193, 1
  br i1 %2258, label %2192, label %2261, !llvm.loop !1377

2261:                                             ; preds = %2251, %2187
  %2262 = phi i32 [ %2191, %2187 ], [ %2257, %2251 ]
  %2263 = sext i32 %2262 to i64
  %2264 = getelementptr inbounds double, ptr %1855, i64 %2263
  %2265 = load double, ptr %2264, align 8, !tbaa !19
  %2266 = fptosi double %2265 to i16
  %2267 = icmp slt i16 %2188, %2266
  br i1 %2267, label %2268, label %2269

2268:                                             ; preds = %2261
  store i16 %2266, ptr %1857, align 2, !tbaa !79
  br label %2269

2269:                                             ; preds = %2268, %2261
  %2270 = phi i16 [ %2266, %2268 ], [ %2188, %2261 ]
  %2271 = fadd fast double %2190, 1.000000e+00
  %2272 = add nuw nsw i32 %2189, 1
  br i1 %2181, label %2273, label %2320

2273:                                             ; preds = %2269
  %2274 = load i32, ptr %4, align 4, !tbaa !6
  %2275 = load i32, ptr %12, align 4, !tbaa !6
  %2276 = add nsw i32 %2275, -1
  %2277 = icmp slt i32 %2274, %2276
  br i1 %2277, label %2297, label %2278

2278:                                             ; preds = %2273
  %2279 = icmp eq i32 %2274, %2276
  br i1 %2279, label %2280, label %2313

2280:                                             ; preds = %2278
  store i32 0, ptr %4, align 4, !tbaa !6
  %2281 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2281, ptr %6, align 4, !tbaa !6
  br i1 %2186, label %2320, label %2282

2282:                                             ; preds = %2280, %2307
  %2283 = phi i64 [ %2311, %2307 ], [ 1, %2280 ]
  %2284 = getelementptr inbounds i32, ptr %4, i64 %2283
  %2285 = load i32, ptr %2284, align 4, !tbaa !6
  %2286 = getelementptr inbounds i32, ptr %12, i64 %2283
  %2287 = load i32, ptr %2286, align 4, !tbaa !6
  %2288 = add nsw i32 %2287, -1
  %2289 = icmp slt i32 %2285, %2288
  br i1 %2289, label %2290, label %2305

2290:                                             ; preds = %2282
  br i1 %2277, label %2297, label %2291

2291:                                             ; preds = %2290
  %2292 = getelementptr inbounds i32, ptr %7, i64 %2283
  %2293 = load i32, ptr %2292, align 4, !tbaa !6
  %2294 = getelementptr inbounds i32, ptr %6, i64 %2283
  %2295 = load i32, ptr %2294, align 4, !tbaa !6
  %2296 = add nsw i32 %2295, %2293
  store i32 %2296, ptr %2294, align 4, !tbaa !6
  br label %2315

2297:                                             ; preds = %2273, %2290
  %2298 = phi i32 [ %2285, %2290 ], [ %2274, %2273 ]
  %2299 = phi ptr [ %2284, %2290 ], [ %4, %2273 ]
  %2300 = phi i64 [ %2283, %2290 ], [ 0, %2273 ]
  %2301 = add nsw i32 %2298, 1
  store i32 %2301, ptr %2299, align 4, !tbaa !6
  %2302 = getelementptr inbounds i32, ptr %7, i64 %2300
  %2303 = load i32, ptr %2302, align 4, !tbaa !6
  %2304 = getelementptr inbounds i32, ptr %6, i64 %2300
  br label %2315

2305:                                             ; preds = %2282
  %2306 = icmp eq i32 %2285, %2288
  br i1 %2306, label %2307, label %2313

2307:                                             ; preds = %2305
  store i32 0, ptr %2284, align 4, !tbaa !6
  %2308 = getelementptr inbounds i32, ptr %8, i64 %2283
  %2309 = load i32, ptr %2308, align 4, !tbaa !6
  %2310 = getelementptr inbounds i32, ptr %6, i64 %2283
  store i32 %2309, ptr %2310, align 4, !tbaa !6
  %2311 = add nuw nsw i64 %2283, 1
  %2312 = icmp eq i64 %2311, %2184
  br i1 %2312, label %2320, label %2282, !llvm.loop !1378

2313:                                             ; preds = %2278, %2305
  %2314 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1989, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5518

2315:                                             ; preds = %2291, %2297
  %2316 = phi ptr [ %2304, %2297 ], [ %2284, %2291 ]
  %2317 = phi i32 [ %2303, %2297 ], [ 1, %2291 ]
  %2318 = load i32, ptr %2316, align 4, !tbaa !6
  %2319 = add nsw i32 %2318, %2317
  store i32 %2319, ptr %2316, align 4, !tbaa !6
  br label %2320

2320:                                             ; preds = %2307, %2315, %2280, %2269
  %2321 = icmp eq i32 %2272, %5
  br i1 %2321, label %5513, label %2187, !llvm.loop !1379

2322:                                             ; preds = %2170, %2460
  %2323 = phi i16 [ %1859, %2170 ], [ %2408, %2460 ]
  %2324 = phi i32 [ 0, %2170 ], [ %2409, %2460 ]
  %2325 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2171, label %2326, label %2395

2326:                                             ; preds = %2322, %2385
  %2327 = phi i32 [ %2394, %2385 ], [ 0, %2322 ]
  %2328 = phi i64 [ %2336, %2385 ], [ %2175, %2322 ]
  %2329 = phi i64 [ %2393, %2385 ], [ %2174, %2322 ]
  %2330 = phi i32 [ %2391, %2385 ], [ %2325, %2322 ]
  %2331 = sub i32 %2173, %2327
  %2332 = tail call i32 @llvm.smin.i32(i32 %2331, i32 0)
  %2333 = sub i32 %2331, %2332
  %2334 = zext i32 %2333 to i64
  %2335 = add nuw nsw i64 %2334, 1
  %2336 = add nsw i64 %2328, -1
  %2337 = icmp ult i32 %2333, 31
  br i1 %2337, label %2373, label %2338

2338:                                             ; preds = %2326
  %2339 = and i64 %2335, 8589934560
  %2340 = sub i64 %2329, %2339
  br label %2341

2341:                                             ; preds = %2341, %2338
  %2342 = phi i64 [ 0, %2338 ], [ %2365, %2341 ]
  %2343 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2338 ], [ %2361, %2341 ]
  %2344 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2338 ], [ %2362, %2341 ]
  %2345 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2338 ], [ %2363, %2341 ]
  %2346 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2338 ], [ %2364, %2341 ]
  %2347 = sub i64 %2329, %2342
  %2348 = getelementptr inbounds i32, ptr %11, i64 %2347
  %2349 = getelementptr inbounds i32, ptr %2348, i64 -7
  %2350 = load <8 x i32>, ptr %2349, align 4, !tbaa !6
  %2351 = shufflevector <8 x i32> %2350, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2352 = getelementptr inbounds i32, ptr %2348, i64 -15
  %2353 = load <8 x i32>, ptr %2352, align 4, !tbaa !6
  %2354 = shufflevector <8 x i32> %2353, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2355 = getelementptr inbounds i32, ptr %2348, i64 -23
  %2356 = load <8 x i32>, ptr %2355, align 4, !tbaa !6
  %2357 = shufflevector <8 x i32> %2356, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2358 = getelementptr inbounds i32, ptr %2348, i64 -31
  %2359 = load <8 x i32>, ptr %2358, align 4, !tbaa !6
  %2360 = shufflevector <8 x i32> %2359, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2361 = mul <8 x i32> %2351, %2343
  %2362 = mul <8 x i32> %2354, %2344
  %2363 = mul <8 x i32> %2357, %2345
  %2364 = mul <8 x i32> %2360, %2346
  %2365 = add nuw i64 %2342, 32
  %2366 = icmp eq i64 %2365, %2339
  br i1 %2366, label %2367, label %2341, !llvm.loop !1380

2367:                                             ; preds = %2341
  %2368 = mul <8 x i32> %2362, %2361
  %2369 = mul <8 x i32> %2363, %2368
  %2370 = mul <8 x i32> %2364, %2369
  %2371 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2370)
  %2372 = icmp eq i64 %2335, %2339
  br i1 %2372, label %2385, label %2373

2373:                                             ; preds = %2326, %2367
  %2374 = phi i64 [ %2329, %2326 ], [ %2340, %2367 ]
  %2375 = phi i32 [ 1, %2326 ], [ %2371, %2367 ]
  br label %2376

2376:                                             ; preds = %2373, %2376
  %2377 = phi i64 [ %2382, %2376 ], [ %2374, %2373 ]
  %2378 = phi i32 [ %2381, %2376 ], [ %2375, %2373 ]
  %2379 = getelementptr inbounds i32, ptr %11, i64 %2377
  %2380 = load i32, ptr %2379, align 4, !tbaa !6
  %2381 = mul nsw i32 %2380, %2378
  %2382 = add nsw i64 %2377, -1
  %2383 = trunc i64 %2377 to i32
  %2384 = icmp sgt i32 %2383, 0
  br i1 %2384, label %2376, label %2385, !llvm.loop !1381

2385:                                             ; preds = %2376, %2367
  %2386 = phi i32 [ %2371, %2367 ], [ %2381, %2376 ]
  %2387 = and i64 %2336, 4294967295
  %2388 = getelementptr inbounds i32, ptr %6, i64 %2387
  %2389 = load i32, ptr %2388, align 4, !tbaa !6
  %2390 = mul nsw i32 %2389, %2386
  %2391 = add nsw i32 %2390, %2330
  %2392 = icmp sgt i64 %2328, 2
  %2393 = add nsw i64 %2329, -1
  %2394 = add i32 %2327, 1
  br i1 %2392, label %2326, label %2395, !llvm.loop !1382

2395:                                             ; preds = %2385, %2322
  %2396 = phi i32 [ %2325, %2322 ], [ %2391, %2385 ]
  %2397 = icmp slt i32 %2396, %5
  br i1 %2397, label %2400, label %2398

2398:                                             ; preds = %2395
  %2399 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1989, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5518

2400:                                             ; preds = %2395
  %2401 = sext i32 %2396 to i64
  %2402 = getelementptr inbounds double, ptr %1855, i64 %2401
  %2403 = load double, ptr %2402, align 8, !tbaa !19
  %2404 = fptosi double %2403 to i16
  %2405 = icmp slt i16 %2323, %2404
  br i1 %2405, label %2406, label %2407

2406:                                             ; preds = %2400
  store i16 %2404, ptr %1857, align 2, !tbaa !79
  br label %2407

2407:                                             ; preds = %2406, %2400
  %2408 = phi i16 [ %2404, %2406 ], [ %2323, %2400 ]
  %2409 = add nuw nsw i32 %2324, 1
  br i1 %2172, label %2410, label %2460

2410:                                             ; preds = %2407
  %2411 = load i32, ptr %4, align 4, !tbaa !6
  %2412 = load i32, ptr %12, align 4, !tbaa !6
  %2413 = add nsw i32 %2412, -1
  %2414 = icmp slt i32 %2411, %2413
  br i1 %2414, label %2437, label %2415

2415:                                             ; preds = %2410
  %2416 = icmp eq i32 %2411, %2413
  br i1 %2416, label %2417, label %2453

2417:                                             ; preds = %2415
  store i32 0, ptr %4, align 4, !tbaa !6
  %2418 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2418, ptr %6, align 4, !tbaa !6
  br i1 %2177, label %2460, label %2419

2419:                                             ; preds = %2417, %2447
  %2420 = phi i64 [ %2451, %2447 ], [ 1, %2417 ]
  %2421 = getelementptr inbounds i32, ptr %4, i64 %2420
  %2422 = load i32, ptr %2421, align 4, !tbaa !6
  %2423 = getelementptr inbounds i32, ptr %12, i64 %2420
  %2424 = load i32, ptr %2423, align 4, !tbaa !6
  %2425 = add nsw i32 %2424, -1
  %2426 = icmp slt i32 %2422, %2425
  br i1 %2426, label %2427, label %2445

2427:                                             ; preds = %2419
  br i1 %2414, label %2437, label %2428

2428:                                             ; preds = %2427
  %2429 = shl i64 %2420, 32
  %2430 = add i64 %2429, -4294967296
  %2431 = ashr exact i64 %2430, 32
  %2432 = getelementptr inbounds i32, ptr %7, i64 %2431
  %2433 = load i32, ptr %2432, align 4, !tbaa !6
  %2434 = getelementptr inbounds i32, ptr %6, i64 %2420
  %2435 = load i32, ptr %2434, align 4, !tbaa !6
  %2436 = add nsw i32 %2435, %2433
  store i32 %2436, ptr %2434, align 4, !tbaa !6
  br label %2455

2437:                                             ; preds = %2410, %2427
  %2438 = phi i32 [ %2422, %2427 ], [ %2411, %2410 ]
  %2439 = phi ptr [ %2421, %2427 ], [ %4, %2410 ]
  %2440 = phi i64 [ %2420, %2427 ], [ 0, %2410 ]
  %2441 = add nsw i32 %2438, 1
  store i32 %2441, ptr %2439, align 4, !tbaa !6
  %2442 = getelementptr inbounds i32, ptr %7, i64 %2440
  %2443 = load i32, ptr %2442, align 4, !tbaa !6
  %2444 = getelementptr inbounds i32, ptr %6, i64 %2440
  br label %2455

2445:                                             ; preds = %2419
  %2446 = icmp eq i32 %2422, %2425
  br i1 %2446, label %2447, label %2453

2447:                                             ; preds = %2445
  store i32 0, ptr %2421, align 4, !tbaa !6
  %2448 = getelementptr inbounds i32, ptr %8, i64 %2420
  %2449 = load i32, ptr %2448, align 4, !tbaa !6
  %2450 = getelementptr inbounds i32, ptr %6, i64 %2420
  store i32 %2449, ptr %2450, align 4, !tbaa !6
  %2451 = add nuw nsw i64 %2420, 1
  %2452 = icmp eq i64 %2451, %2175
  br i1 %2452, label %2460, label %2419, !llvm.loop !1383

2453:                                             ; preds = %2415, %2445
  %2454 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1989, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5518

2455:                                             ; preds = %2428, %2437
  %2456 = phi ptr [ %2444, %2437 ], [ %2421, %2428 ]
  %2457 = phi i32 [ %2443, %2437 ], [ 1, %2428 ]
  %2458 = load i32, ptr %2456, align 4, !tbaa !6
  %2459 = add nsw i32 %2458, %2457
  store i32 %2459, ptr %2456, align 4, !tbaa !6
  br label %2460

2460:                                             ; preds = %2447, %2455, %2417, %2407
  %2461 = icmp eq i32 %2409, %5
  br i1 %2461, label %5513, label %2322, !llvm.loop !1384

2462:                                             ; preds = %1861
  %2463 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1989, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5513

2464:                                             ; preds = %18
  %2465 = getelementptr inbounds ptr, ptr %14, i64 %19
  %2466 = load ptr, ptr %2465, align 8, !tbaa !10
  %2467 = getelementptr inbounds ptr, ptr %16, i64 %19
  %2468 = load ptr, ptr %2467, align 8, !tbaa !10
  %2469 = load double, ptr %2466, align 8, !tbaa !19
  %2470 = fptosi double %2469 to i32
  store i32 %2470, ptr %2468, align 4, !tbaa !6
  %2471 = icmp eq i32 %13, 0
  br i1 %2471, label %5513, label %2472

2472:                                             ; preds = %2464
  switch i32 %1, label %3069 [
    i32 1, label %2473
    i32 0, label %2773
  ]

2473:                                             ; preds = %2472
  %2474 = getelementptr inbounds i32, ptr %3, i64 %19
  %2475 = load i32, ptr %2474, align 4, !tbaa !6
  %2476 = icmp eq i32 %2475, 0
  %2477 = icmp sgt i32 %5, 0
  br i1 %2476, label %2487, label %2478

2478:                                             ; preds = %2473
  br i1 %2477, label %2479, label %5513

2479:                                             ; preds = %2478
  %2480 = icmp sgt i32 %13, 1
  %2481 = icmp sgt i32 %13, 0
  %2482 = add i32 %13, -2
  %2483 = zext i32 %2482 to i64
  %2484 = zext i32 %13 to i64
  %2485 = add nuw i32 %5, 1
  %2486 = icmp eq i32 %13, 1
  br label %2634

2487:                                             ; preds = %2473
  br i1 %2477, label %2488, label %5513

2488:                                             ; preds = %2487
  %2489 = icmp sgt i32 %13, 1
  %2490 = icmp sgt i32 %13, 0
  %2491 = add i32 %13, -2
  %2492 = zext i32 %2491 to i64
  %2493 = zext i32 %13 to i64
  %2494 = add nuw i32 %5, 1
  %2495 = icmp eq i32 %13, 1
  br label %2496

2496:                                             ; preds = %2488, %2632
  %2497 = phi i32 [ 0, %2488 ], [ %2584, %2632 ]
  %2498 = phi double [ 0.000000e+00, %2488 ], [ %2583, %2632 ]
  %2499 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2489, label %2500, label %2569

2500:                                             ; preds = %2496, %2559
  %2501 = phi i32 [ %2568, %2559 ], [ 0, %2496 ]
  %2502 = phi i64 [ %2510, %2559 ], [ %2493, %2496 ]
  %2503 = phi i64 [ %2567, %2559 ], [ %2492, %2496 ]
  %2504 = phi i32 [ %2565, %2559 ], [ %2499, %2496 ]
  %2505 = sub i32 %2491, %2501
  %2506 = tail call i32 @llvm.smin.i32(i32 %2505, i32 0)
  %2507 = sub i32 %2505, %2506
  %2508 = zext i32 %2507 to i64
  %2509 = add nuw nsw i64 %2508, 1
  %2510 = add nsw i64 %2502, -1
  %2511 = icmp ult i32 %2507, 31
  br i1 %2511, label %2547, label %2512

2512:                                             ; preds = %2500
  %2513 = and i64 %2509, 8589934560
  %2514 = sub i64 %2503, %2513
  br label %2515

2515:                                             ; preds = %2515, %2512
  %2516 = phi i64 [ 0, %2512 ], [ %2539, %2515 ]
  %2517 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2512 ], [ %2535, %2515 ]
  %2518 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2512 ], [ %2536, %2515 ]
  %2519 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2512 ], [ %2537, %2515 ]
  %2520 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2512 ], [ %2538, %2515 ]
  %2521 = sub i64 %2503, %2516
  %2522 = getelementptr inbounds i32, ptr %9, i64 %2521
  %2523 = getelementptr inbounds i32, ptr %2522, i64 -7
  %2524 = load <8 x i32>, ptr %2523, align 4, !tbaa !6
  %2525 = shufflevector <8 x i32> %2524, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2526 = getelementptr inbounds i32, ptr %2522, i64 -15
  %2527 = load <8 x i32>, ptr %2526, align 4, !tbaa !6
  %2528 = shufflevector <8 x i32> %2527, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2529 = getelementptr inbounds i32, ptr %2522, i64 -23
  %2530 = load <8 x i32>, ptr %2529, align 4, !tbaa !6
  %2531 = shufflevector <8 x i32> %2530, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2532 = getelementptr inbounds i32, ptr %2522, i64 -31
  %2533 = load <8 x i32>, ptr %2532, align 4, !tbaa !6
  %2534 = shufflevector <8 x i32> %2533, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2535 = mul <8 x i32> %2525, %2517
  %2536 = mul <8 x i32> %2528, %2518
  %2537 = mul <8 x i32> %2531, %2519
  %2538 = mul <8 x i32> %2534, %2520
  %2539 = add nuw i64 %2516, 32
  %2540 = icmp eq i64 %2539, %2513
  br i1 %2540, label %2541, label %2515, !llvm.loop !1385

2541:                                             ; preds = %2515
  %2542 = mul <8 x i32> %2536, %2535
  %2543 = mul <8 x i32> %2537, %2542
  %2544 = mul <8 x i32> %2538, %2543
  %2545 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2544)
  %2546 = icmp eq i64 %2509, %2513
  br i1 %2546, label %2559, label %2547

2547:                                             ; preds = %2500, %2541
  %2548 = phi i64 [ %2503, %2500 ], [ %2514, %2541 ]
  %2549 = phi i32 [ 1, %2500 ], [ %2545, %2541 ]
  br label %2550

2550:                                             ; preds = %2547, %2550
  %2551 = phi i64 [ %2556, %2550 ], [ %2548, %2547 ]
  %2552 = phi i32 [ %2555, %2550 ], [ %2549, %2547 ]
  %2553 = getelementptr inbounds i32, ptr %9, i64 %2551
  %2554 = load i32, ptr %2553, align 4, !tbaa !6
  %2555 = mul nsw i32 %2554, %2552
  %2556 = add nsw i64 %2551, -1
  %2557 = trunc i64 %2551 to i32
  %2558 = icmp sgt i32 %2557, 0
  br i1 %2558, label %2550, label %2559, !llvm.loop !1386

2559:                                             ; preds = %2550, %2541
  %2560 = phi i32 [ %2545, %2541 ], [ %2555, %2550 ]
  %2561 = and i64 %2510, 4294967295
  %2562 = getelementptr inbounds i32, ptr %6, i64 %2561
  %2563 = load i32, ptr %2562, align 4, !tbaa !6
  %2564 = mul nsw i32 %2563, %2560
  %2565 = add nsw i32 %2564, %2504
  %2566 = icmp sgt i64 %2502, 2
  %2567 = add nsw i64 %2503, -1
  %2568 = add i32 %2501, 1
  br i1 %2566, label %2500, label %2569, !llvm.loop !1387

2569:                                             ; preds = %2559, %2496
  %2570 = phi i32 [ %2499, %2496 ], [ %2565, %2559 ]
  %2571 = sext i32 %2570 to i64
  %2572 = getelementptr inbounds double, ptr %2, i64 %2571
  %2573 = load double, ptr %2572, align 8, !tbaa !19
  %2574 = getelementptr inbounds double, ptr %2466, i64 %2571
  %2575 = load double, ptr %2574, align 8, !tbaa !19
  %2576 = fptosi double %2575 to i32
  %2577 = fcmp fast ueq double %2573, 0.000000e+00
  br i1 %2577, label %2582, label %2578

2578:                                             ; preds = %2569
  %2579 = load i32, ptr %2468, align 4, !tbaa !6
  %2580 = icmp slt i32 %2579, %2576
  br i1 %2580, label %2581, label %2582

2581:                                             ; preds = %2578
  store i32 %2576, ptr %2468, align 4, !tbaa !6
  br label %2582

2582:                                             ; preds = %2578, %2581, %2569
  %2583 = fadd fast double %2573, %2498
  %2584 = add nuw nsw i32 %2497, 1
  br i1 %2490, label %2585, label %2632

2585:                                             ; preds = %2582
  %2586 = load i32, ptr %4, align 4, !tbaa !6
  %2587 = load i32, ptr %12, align 4, !tbaa !6
  %2588 = add nsw i32 %2587, -1
  %2589 = icmp slt i32 %2586, %2588
  br i1 %2589, label %2609, label %2590

2590:                                             ; preds = %2585
  %2591 = icmp eq i32 %2586, %2588
  br i1 %2591, label %2592, label %2625

2592:                                             ; preds = %2590
  store i32 0, ptr %4, align 4, !tbaa !6
  %2593 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2593, ptr %6, align 4, !tbaa !6
  br i1 %2495, label %2632, label %2594

2594:                                             ; preds = %2592, %2619
  %2595 = phi i64 [ %2623, %2619 ], [ 1, %2592 ]
  %2596 = getelementptr inbounds i32, ptr %4, i64 %2595
  %2597 = load i32, ptr %2596, align 4, !tbaa !6
  %2598 = getelementptr inbounds i32, ptr %12, i64 %2595
  %2599 = load i32, ptr %2598, align 4, !tbaa !6
  %2600 = add nsw i32 %2599, -1
  %2601 = icmp slt i32 %2597, %2600
  br i1 %2601, label %2602, label %2617

2602:                                             ; preds = %2594
  br i1 %2589, label %2609, label %2603

2603:                                             ; preds = %2602
  %2604 = getelementptr inbounds i32, ptr %7, i64 %2595
  %2605 = load i32, ptr %2604, align 4, !tbaa !6
  %2606 = getelementptr inbounds i32, ptr %6, i64 %2595
  %2607 = load i32, ptr %2606, align 4, !tbaa !6
  %2608 = add nsw i32 %2607, %2605
  store i32 %2608, ptr %2606, align 4, !tbaa !6
  br label %2627

2609:                                             ; preds = %2585, %2602
  %2610 = phi i32 [ %2597, %2602 ], [ %2586, %2585 ]
  %2611 = phi ptr [ %2596, %2602 ], [ %4, %2585 ]
  %2612 = phi i64 [ %2595, %2602 ], [ 0, %2585 ]
  %2613 = add nsw i32 %2610, 1
  store i32 %2613, ptr %2611, align 4, !tbaa !6
  %2614 = getelementptr inbounds i32, ptr %7, i64 %2612
  %2615 = load i32, ptr %2614, align 4, !tbaa !6
  %2616 = getelementptr inbounds i32, ptr %6, i64 %2612
  br label %2627

2617:                                             ; preds = %2594
  %2618 = icmp eq i32 %2597, %2600
  br i1 %2618, label %2619, label %2625

2619:                                             ; preds = %2617
  store i32 0, ptr %2596, align 4, !tbaa !6
  %2620 = getelementptr inbounds i32, ptr %8, i64 %2595
  %2621 = load i32, ptr %2620, align 4, !tbaa !6
  %2622 = getelementptr inbounds i32, ptr %6, i64 %2595
  store i32 %2621, ptr %2622, align 4, !tbaa !6
  %2623 = add nuw nsw i64 %2595, 1
  %2624 = icmp eq i64 %2623, %2493
  br i1 %2624, label %2632, label %2594, !llvm.loop !1388

2625:                                             ; preds = %2590, %2617
  %2626 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1994, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5518

2627:                                             ; preds = %2603, %2609
  %2628 = phi ptr [ %2616, %2609 ], [ %2596, %2603 ]
  %2629 = phi i32 [ %2615, %2609 ], [ 1, %2603 ]
  %2630 = load i32, ptr %2628, align 4, !tbaa !6
  %2631 = add nsw i32 %2630, %2629
  store i32 %2631, ptr %2628, align 4, !tbaa !6
  br label %2632

2632:                                             ; preds = %2619, %2627, %2592, %2582
  %2633 = icmp eq i32 %2584, %5
  br i1 %2633, label %5513, label %2496, !llvm.loop !1389

2634:                                             ; preds = %2479, %2771
  %2635 = phi i32 [ 0, %2479 ], [ %2720, %2771 ]
  %2636 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2480, label %2637, label %2706

2637:                                             ; preds = %2634, %2696
  %2638 = phi i32 [ %2705, %2696 ], [ 0, %2634 ]
  %2639 = phi i64 [ %2647, %2696 ], [ %2484, %2634 ]
  %2640 = phi i64 [ %2704, %2696 ], [ %2483, %2634 ]
  %2641 = phi i32 [ %2702, %2696 ], [ %2636, %2634 ]
  %2642 = sub i32 %2482, %2638
  %2643 = tail call i32 @llvm.smin.i32(i32 %2642, i32 0)
  %2644 = sub i32 %2642, %2643
  %2645 = zext i32 %2644 to i64
  %2646 = add nuw nsw i64 %2645, 1
  %2647 = add nsw i64 %2639, -1
  %2648 = icmp ult i32 %2644, 31
  br i1 %2648, label %2684, label %2649

2649:                                             ; preds = %2637
  %2650 = and i64 %2646, 8589934560
  %2651 = sub i64 %2640, %2650
  br label %2652

2652:                                             ; preds = %2652, %2649
  %2653 = phi i64 [ 0, %2649 ], [ %2676, %2652 ]
  %2654 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2649 ], [ %2672, %2652 ]
  %2655 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2649 ], [ %2673, %2652 ]
  %2656 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2649 ], [ %2674, %2652 ]
  %2657 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2649 ], [ %2675, %2652 ]
  %2658 = sub i64 %2640, %2653
  %2659 = getelementptr inbounds i32, ptr %11, i64 %2658
  %2660 = getelementptr inbounds i32, ptr %2659, i64 -7
  %2661 = load <8 x i32>, ptr %2660, align 4, !tbaa !6
  %2662 = shufflevector <8 x i32> %2661, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2663 = getelementptr inbounds i32, ptr %2659, i64 -15
  %2664 = load <8 x i32>, ptr %2663, align 4, !tbaa !6
  %2665 = shufflevector <8 x i32> %2664, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2666 = getelementptr inbounds i32, ptr %2659, i64 -23
  %2667 = load <8 x i32>, ptr %2666, align 4, !tbaa !6
  %2668 = shufflevector <8 x i32> %2667, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2669 = getelementptr inbounds i32, ptr %2659, i64 -31
  %2670 = load <8 x i32>, ptr %2669, align 4, !tbaa !6
  %2671 = shufflevector <8 x i32> %2670, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2672 = mul <8 x i32> %2662, %2654
  %2673 = mul <8 x i32> %2665, %2655
  %2674 = mul <8 x i32> %2668, %2656
  %2675 = mul <8 x i32> %2671, %2657
  %2676 = add nuw i64 %2653, 32
  %2677 = icmp eq i64 %2676, %2650
  br i1 %2677, label %2678, label %2652, !llvm.loop !1390

2678:                                             ; preds = %2652
  %2679 = mul <8 x i32> %2673, %2672
  %2680 = mul <8 x i32> %2674, %2679
  %2681 = mul <8 x i32> %2675, %2680
  %2682 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2681)
  %2683 = icmp eq i64 %2646, %2650
  br i1 %2683, label %2696, label %2684

2684:                                             ; preds = %2637, %2678
  %2685 = phi i64 [ %2640, %2637 ], [ %2651, %2678 ]
  %2686 = phi i32 [ 1, %2637 ], [ %2682, %2678 ]
  br label %2687

2687:                                             ; preds = %2684, %2687
  %2688 = phi i64 [ %2693, %2687 ], [ %2685, %2684 ]
  %2689 = phi i32 [ %2692, %2687 ], [ %2686, %2684 ]
  %2690 = getelementptr inbounds i32, ptr %11, i64 %2688
  %2691 = load i32, ptr %2690, align 4, !tbaa !6
  %2692 = mul nsw i32 %2691, %2689
  %2693 = add nsw i64 %2688, -1
  %2694 = trunc i64 %2688 to i32
  %2695 = icmp sgt i32 %2694, 0
  br i1 %2695, label %2687, label %2696, !llvm.loop !1391

2696:                                             ; preds = %2687, %2678
  %2697 = phi i32 [ %2682, %2678 ], [ %2692, %2687 ]
  %2698 = and i64 %2647, 4294967295
  %2699 = getelementptr inbounds i32, ptr %6, i64 %2698
  %2700 = load i32, ptr %2699, align 4, !tbaa !6
  %2701 = mul nsw i32 %2700, %2697
  %2702 = add nsw i32 %2701, %2641
  %2703 = icmp sgt i64 %2639, 2
  %2704 = add nsw i64 %2640, -1
  %2705 = add i32 %2638, 1
  br i1 %2703, label %2637, label %2706, !llvm.loop !1392

2706:                                             ; preds = %2696, %2634
  %2707 = phi i32 [ %2636, %2634 ], [ %2702, %2696 ]
  %2708 = icmp slt i32 %2707, %5
  br i1 %2708, label %2711, label %2709

2709:                                             ; preds = %2706
  %2710 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1994, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5518

2711:                                             ; preds = %2706
  %2712 = sext i32 %2707 to i64
  %2713 = getelementptr inbounds double, ptr %2466, i64 %2712
  %2714 = load double, ptr %2713, align 8, !tbaa !19
  %2715 = fptosi double %2714 to i32
  %2716 = load i32, ptr %2468, align 4, !tbaa !6
  %2717 = icmp slt i32 %2716, %2715
  br i1 %2717, label %2718, label %2719

2718:                                             ; preds = %2711
  store i32 %2715, ptr %2468, align 4, !tbaa !6
  br label %2719

2719:                                             ; preds = %2711, %2718
  %2720 = add nuw nsw i32 %2635, 1
  br i1 %2481, label %2721, label %2771

2721:                                             ; preds = %2719
  %2722 = load i32, ptr %4, align 4, !tbaa !6
  %2723 = load i32, ptr %12, align 4, !tbaa !6
  %2724 = add nsw i32 %2723, -1
  %2725 = icmp slt i32 %2722, %2724
  br i1 %2725, label %2748, label %2726

2726:                                             ; preds = %2721
  %2727 = icmp eq i32 %2722, %2724
  br i1 %2727, label %2728, label %2764

2728:                                             ; preds = %2726
  store i32 0, ptr %4, align 4, !tbaa !6
  %2729 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2729, ptr %6, align 4, !tbaa !6
  br i1 %2486, label %2771, label %2730

2730:                                             ; preds = %2728, %2758
  %2731 = phi i64 [ %2762, %2758 ], [ 1, %2728 ]
  %2732 = getelementptr inbounds i32, ptr %4, i64 %2731
  %2733 = load i32, ptr %2732, align 4, !tbaa !6
  %2734 = getelementptr inbounds i32, ptr %12, i64 %2731
  %2735 = load i32, ptr %2734, align 4, !tbaa !6
  %2736 = add nsw i32 %2735, -1
  %2737 = icmp slt i32 %2733, %2736
  br i1 %2737, label %2738, label %2756

2738:                                             ; preds = %2730
  br i1 %2725, label %2748, label %2739

2739:                                             ; preds = %2738
  %2740 = shl i64 %2731, 32
  %2741 = add i64 %2740, -4294967296
  %2742 = ashr exact i64 %2741, 32
  %2743 = getelementptr inbounds i32, ptr %7, i64 %2742
  %2744 = load i32, ptr %2743, align 4, !tbaa !6
  %2745 = getelementptr inbounds i32, ptr %6, i64 %2731
  %2746 = load i32, ptr %2745, align 4, !tbaa !6
  %2747 = add nsw i32 %2746, %2744
  store i32 %2747, ptr %2745, align 4, !tbaa !6
  br label %2766

2748:                                             ; preds = %2721, %2738
  %2749 = phi i32 [ %2733, %2738 ], [ %2722, %2721 ]
  %2750 = phi ptr [ %2732, %2738 ], [ %4, %2721 ]
  %2751 = phi i64 [ %2731, %2738 ], [ 0, %2721 ]
  %2752 = add nsw i32 %2749, 1
  store i32 %2752, ptr %2750, align 4, !tbaa !6
  %2753 = getelementptr inbounds i32, ptr %7, i64 %2751
  %2754 = load i32, ptr %2753, align 4, !tbaa !6
  %2755 = getelementptr inbounds i32, ptr %6, i64 %2751
  br label %2766

2756:                                             ; preds = %2730
  %2757 = icmp eq i32 %2733, %2736
  br i1 %2757, label %2758, label %2764

2758:                                             ; preds = %2756
  store i32 0, ptr %2732, align 4, !tbaa !6
  %2759 = getelementptr inbounds i32, ptr %8, i64 %2731
  %2760 = load i32, ptr %2759, align 4, !tbaa !6
  %2761 = getelementptr inbounds i32, ptr %6, i64 %2731
  store i32 %2760, ptr %2761, align 4, !tbaa !6
  %2762 = add nuw nsw i64 %2731, 1
  %2763 = icmp eq i64 %2762, %2484
  br i1 %2763, label %2771, label %2730, !llvm.loop !1393

2764:                                             ; preds = %2726, %2756
  %2765 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1994, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5518

2766:                                             ; preds = %2739, %2748
  %2767 = phi ptr [ %2755, %2748 ], [ %2732, %2739 ]
  %2768 = phi i32 [ %2754, %2748 ], [ 1, %2739 ]
  %2769 = load i32, ptr %2767, align 4, !tbaa !6
  %2770 = add nsw i32 %2769, %2768
  store i32 %2770, ptr %2767, align 4, !tbaa !6
  br label %2771

2771:                                             ; preds = %2758, %2766, %2728, %2719
  %2772 = icmp eq i32 %2720, %5
  br i1 %2772, label %5513, label %2634, !llvm.loop !1394

2773:                                             ; preds = %2472
  %2774 = getelementptr inbounds i32, ptr %3, i64 %19
  %2775 = load i32, ptr %2774, align 4, !tbaa !6
  %2776 = icmp eq i32 %2775, 0
  %2777 = icmp sgt i32 %5, 0
  br i1 %2776, label %2787, label %2778

2778:                                             ; preds = %2773
  br i1 %2777, label %2779, label %5513

2779:                                             ; preds = %2778
  %2780 = icmp sgt i32 %13, 1
  %2781 = icmp sgt i32 %13, 0
  %2782 = add i32 %13, -2
  %2783 = zext i32 %2782 to i64
  %2784 = zext i32 %13 to i64
  %2785 = add nuw i32 %5, 1
  %2786 = icmp eq i32 %13, 1
  br label %2930

2787:                                             ; preds = %2773
  br i1 %2777, label %2788, label %5513

2788:                                             ; preds = %2787
  %2789 = icmp sgt i32 %13, 1
  %2790 = icmp sgt i32 %13, 0
  %2791 = add i32 %13, -2
  %2792 = zext i32 %2791 to i64
  %2793 = zext i32 %13 to i64
  %2794 = add nuw i32 %5, 1
  %2795 = icmp eq i32 %13, 1
  br label %2796

2796:                                             ; preds = %2788, %2928
  %2797 = phi i32 [ 0, %2788 ], [ %2880, %2928 ]
  %2798 = phi double [ 0.000000e+00, %2788 ], [ %2879, %2928 ]
  %2799 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2789, label %2800, label %2869

2800:                                             ; preds = %2796, %2859
  %2801 = phi i32 [ %2868, %2859 ], [ 0, %2796 ]
  %2802 = phi i64 [ %2810, %2859 ], [ %2793, %2796 ]
  %2803 = phi i64 [ %2867, %2859 ], [ %2792, %2796 ]
  %2804 = phi i32 [ %2865, %2859 ], [ %2799, %2796 ]
  %2805 = sub i32 %2791, %2801
  %2806 = tail call i32 @llvm.smin.i32(i32 %2805, i32 0)
  %2807 = sub i32 %2805, %2806
  %2808 = zext i32 %2807 to i64
  %2809 = add nuw nsw i64 %2808, 1
  %2810 = add nsw i64 %2802, -1
  %2811 = icmp ult i32 %2807, 31
  br i1 %2811, label %2847, label %2812

2812:                                             ; preds = %2800
  %2813 = and i64 %2809, 8589934560
  %2814 = sub i64 %2803, %2813
  br label %2815

2815:                                             ; preds = %2815, %2812
  %2816 = phi i64 [ 0, %2812 ], [ %2839, %2815 ]
  %2817 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2812 ], [ %2835, %2815 ]
  %2818 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2812 ], [ %2836, %2815 ]
  %2819 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2812 ], [ %2837, %2815 ]
  %2820 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2812 ], [ %2838, %2815 ]
  %2821 = sub i64 %2803, %2816
  %2822 = getelementptr inbounds i32, ptr %9, i64 %2821
  %2823 = getelementptr inbounds i32, ptr %2822, i64 -7
  %2824 = load <8 x i32>, ptr %2823, align 4, !tbaa !6
  %2825 = shufflevector <8 x i32> %2824, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2826 = getelementptr inbounds i32, ptr %2822, i64 -15
  %2827 = load <8 x i32>, ptr %2826, align 4, !tbaa !6
  %2828 = shufflevector <8 x i32> %2827, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2829 = getelementptr inbounds i32, ptr %2822, i64 -23
  %2830 = load <8 x i32>, ptr %2829, align 4, !tbaa !6
  %2831 = shufflevector <8 x i32> %2830, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2832 = getelementptr inbounds i32, ptr %2822, i64 -31
  %2833 = load <8 x i32>, ptr %2832, align 4, !tbaa !6
  %2834 = shufflevector <8 x i32> %2833, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2835 = mul <8 x i32> %2825, %2817
  %2836 = mul <8 x i32> %2828, %2818
  %2837 = mul <8 x i32> %2831, %2819
  %2838 = mul <8 x i32> %2834, %2820
  %2839 = add nuw i64 %2816, 32
  %2840 = icmp eq i64 %2839, %2813
  br i1 %2840, label %2841, label %2815, !llvm.loop !1395

2841:                                             ; preds = %2815
  %2842 = mul <8 x i32> %2836, %2835
  %2843 = mul <8 x i32> %2837, %2842
  %2844 = mul <8 x i32> %2838, %2843
  %2845 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2844)
  %2846 = icmp eq i64 %2809, %2813
  br i1 %2846, label %2859, label %2847

2847:                                             ; preds = %2800, %2841
  %2848 = phi i64 [ %2803, %2800 ], [ %2814, %2841 ]
  %2849 = phi i32 [ 1, %2800 ], [ %2845, %2841 ]
  br label %2850

2850:                                             ; preds = %2847, %2850
  %2851 = phi i64 [ %2856, %2850 ], [ %2848, %2847 ]
  %2852 = phi i32 [ %2855, %2850 ], [ %2849, %2847 ]
  %2853 = getelementptr inbounds i32, ptr %9, i64 %2851
  %2854 = load i32, ptr %2853, align 4, !tbaa !6
  %2855 = mul nsw i32 %2854, %2852
  %2856 = add nsw i64 %2851, -1
  %2857 = trunc i64 %2851 to i32
  %2858 = icmp sgt i32 %2857, 0
  br i1 %2858, label %2850, label %2859, !llvm.loop !1396

2859:                                             ; preds = %2850, %2841
  %2860 = phi i32 [ %2845, %2841 ], [ %2855, %2850 ]
  %2861 = and i64 %2810, 4294967295
  %2862 = getelementptr inbounds i32, ptr %6, i64 %2861
  %2863 = load i32, ptr %2862, align 4, !tbaa !6
  %2864 = mul nsw i32 %2863, %2860
  %2865 = add nsw i32 %2864, %2804
  %2866 = icmp sgt i64 %2802, 2
  %2867 = add nsw i64 %2803, -1
  %2868 = add i32 %2801, 1
  br i1 %2866, label %2800, label %2869, !llvm.loop !1397

2869:                                             ; preds = %2859, %2796
  %2870 = phi i32 [ %2799, %2796 ], [ %2865, %2859 ]
  %2871 = sext i32 %2870 to i64
  %2872 = getelementptr inbounds double, ptr %2466, i64 %2871
  %2873 = load double, ptr %2872, align 8, !tbaa !19
  %2874 = fptosi double %2873 to i32
  %2875 = load i32, ptr %2468, align 4, !tbaa !6
  %2876 = icmp slt i32 %2875, %2874
  br i1 %2876, label %2877, label %2878

2877:                                             ; preds = %2869
  store i32 %2874, ptr %2468, align 4, !tbaa !6
  br label %2878

2878:                                             ; preds = %2877, %2869
  %2879 = fadd fast double %2798, 1.000000e+00
  %2880 = add nuw nsw i32 %2797, 1
  br i1 %2790, label %2881, label %2928

2881:                                             ; preds = %2878
  %2882 = load i32, ptr %4, align 4, !tbaa !6
  %2883 = load i32, ptr %12, align 4, !tbaa !6
  %2884 = add nsw i32 %2883, -1
  %2885 = icmp slt i32 %2882, %2884
  br i1 %2885, label %2905, label %2886

2886:                                             ; preds = %2881
  %2887 = icmp eq i32 %2882, %2884
  br i1 %2887, label %2888, label %2921

2888:                                             ; preds = %2886
  store i32 0, ptr %4, align 4, !tbaa !6
  %2889 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %2889, ptr %6, align 4, !tbaa !6
  br i1 %2795, label %2928, label %2890

2890:                                             ; preds = %2888, %2915
  %2891 = phi i64 [ %2919, %2915 ], [ 1, %2888 ]
  %2892 = getelementptr inbounds i32, ptr %4, i64 %2891
  %2893 = load i32, ptr %2892, align 4, !tbaa !6
  %2894 = getelementptr inbounds i32, ptr %12, i64 %2891
  %2895 = load i32, ptr %2894, align 4, !tbaa !6
  %2896 = add nsw i32 %2895, -1
  %2897 = icmp slt i32 %2893, %2896
  br i1 %2897, label %2898, label %2913

2898:                                             ; preds = %2890
  br i1 %2885, label %2905, label %2899

2899:                                             ; preds = %2898
  %2900 = getelementptr inbounds i32, ptr %7, i64 %2891
  %2901 = load i32, ptr %2900, align 4, !tbaa !6
  %2902 = getelementptr inbounds i32, ptr %6, i64 %2891
  %2903 = load i32, ptr %2902, align 4, !tbaa !6
  %2904 = add nsw i32 %2903, %2901
  store i32 %2904, ptr %2902, align 4, !tbaa !6
  br label %2923

2905:                                             ; preds = %2881, %2898
  %2906 = phi i32 [ %2893, %2898 ], [ %2882, %2881 ]
  %2907 = phi ptr [ %2892, %2898 ], [ %4, %2881 ]
  %2908 = phi i64 [ %2891, %2898 ], [ 0, %2881 ]
  %2909 = add nsw i32 %2906, 1
  store i32 %2909, ptr %2907, align 4, !tbaa !6
  %2910 = getelementptr inbounds i32, ptr %7, i64 %2908
  %2911 = load i32, ptr %2910, align 4, !tbaa !6
  %2912 = getelementptr inbounds i32, ptr %6, i64 %2908
  br label %2923

2913:                                             ; preds = %2890
  %2914 = icmp eq i32 %2893, %2896
  br i1 %2914, label %2915, label %2921

2915:                                             ; preds = %2913
  store i32 0, ptr %2892, align 4, !tbaa !6
  %2916 = getelementptr inbounds i32, ptr %8, i64 %2891
  %2917 = load i32, ptr %2916, align 4, !tbaa !6
  %2918 = getelementptr inbounds i32, ptr %6, i64 %2891
  store i32 %2917, ptr %2918, align 4, !tbaa !6
  %2919 = add nuw nsw i64 %2891, 1
  %2920 = icmp eq i64 %2919, %2793
  br i1 %2920, label %2928, label %2890, !llvm.loop !1398

2921:                                             ; preds = %2886, %2913
  %2922 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1994, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5518

2923:                                             ; preds = %2899, %2905
  %2924 = phi ptr [ %2912, %2905 ], [ %2892, %2899 ]
  %2925 = phi i32 [ %2911, %2905 ], [ 1, %2899 ]
  %2926 = load i32, ptr %2924, align 4, !tbaa !6
  %2927 = add nsw i32 %2926, %2925
  store i32 %2927, ptr %2924, align 4, !tbaa !6
  br label %2928

2928:                                             ; preds = %2915, %2923, %2888, %2878
  %2929 = icmp eq i32 %2880, %5
  br i1 %2929, label %5513, label %2796, !llvm.loop !1399

2930:                                             ; preds = %2779, %3067
  %2931 = phi i32 [ 0, %2779 ], [ %3016, %3067 ]
  %2932 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %2780, label %2933, label %3002

2933:                                             ; preds = %2930, %2992
  %2934 = phi i32 [ %3001, %2992 ], [ 0, %2930 ]
  %2935 = phi i64 [ %2943, %2992 ], [ %2784, %2930 ]
  %2936 = phi i64 [ %3000, %2992 ], [ %2783, %2930 ]
  %2937 = phi i32 [ %2998, %2992 ], [ %2932, %2930 ]
  %2938 = sub i32 %2782, %2934
  %2939 = tail call i32 @llvm.smin.i32(i32 %2938, i32 0)
  %2940 = sub i32 %2938, %2939
  %2941 = zext i32 %2940 to i64
  %2942 = add nuw nsw i64 %2941, 1
  %2943 = add nsw i64 %2935, -1
  %2944 = icmp ult i32 %2940, 31
  br i1 %2944, label %2980, label %2945

2945:                                             ; preds = %2933
  %2946 = and i64 %2942, 8589934560
  %2947 = sub i64 %2936, %2946
  br label %2948

2948:                                             ; preds = %2948, %2945
  %2949 = phi i64 [ 0, %2945 ], [ %2972, %2948 ]
  %2950 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2945 ], [ %2968, %2948 ]
  %2951 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2945 ], [ %2969, %2948 ]
  %2952 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2945 ], [ %2970, %2948 ]
  %2953 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %2945 ], [ %2971, %2948 ]
  %2954 = sub i64 %2936, %2949
  %2955 = getelementptr inbounds i32, ptr %11, i64 %2954
  %2956 = getelementptr inbounds i32, ptr %2955, i64 -7
  %2957 = load <8 x i32>, ptr %2956, align 4, !tbaa !6
  %2958 = shufflevector <8 x i32> %2957, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2959 = getelementptr inbounds i32, ptr %2955, i64 -15
  %2960 = load <8 x i32>, ptr %2959, align 4, !tbaa !6
  %2961 = shufflevector <8 x i32> %2960, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2962 = getelementptr inbounds i32, ptr %2955, i64 -23
  %2963 = load <8 x i32>, ptr %2962, align 4, !tbaa !6
  %2964 = shufflevector <8 x i32> %2963, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2965 = getelementptr inbounds i32, ptr %2955, i64 -31
  %2966 = load <8 x i32>, ptr %2965, align 4, !tbaa !6
  %2967 = shufflevector <8 x i32> %2966, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %2968 = mul <8 x i32> %2958, %2950
  %2969 = mul <8 x i32> %2961, %2951
  %2970 = mul <8 x i32> %2964, %2952
  %2971 = mul <8 x i32> %2967, %2953
  %2972 = add nuw i64 %2949, 32
  %2973 = icmp eq i64 %2972, %2946
  br i1 %2973, label %2974, label %2948, !llvm.loop !1400

2974:                                             ; preds = %2948
  %2975 = mul <8 x i32> %2969, %2968
  %2976 = mul <8 x i32> %2970, %2975
  %2977 = mul <8 x i32> %2971, %2976
  %2978 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %2977)
  %2979 = icmp eq i64 %2942, %2946
  br i1 %2979, label %2992, label %2980

2980:                                             ; preds = %2933, %2974
  %2981 = phi i64 [ %2936, %2933 ], [ %2947, %2974 ]
  %2982 = phi i32 [ 1, %2933 ], [ %2978, %2974 ]
  br label %2983

2983:                                             ; preds = %2980, %2983
  %2984 = phi i64 [ %2989, %2983 ], [ %2981, %2980 ]
  %2985 = phi i32 [ %2988, %2983 ], [ %2982, %2980 ]
  %2986 = getelementptr inbounds i32, ptr %11, i64 %2984
  %2987 = load i32, ptr %2986, align 4, !tbaa !6
  %2988 = mul nsw i32 %2987, %2985
  %2989 = add nsw i64 %2984, -1
  %2990 = trunc i64 %2984 to i32
  %2991 = icmp sgt i32 %2990, 0
  br i1 %2991, label %2983, label %2992, !llvm.loop !1401

2992:                                             ; preds = %2983, %2974
  %2993 = phi i32 [ %2978, %2974 ], [ %2988, %2983 ]
  %2994 = and i64 %2943, 4294967295
  %2995 = getelementptr inbounds i32, ptr %6, i64 %2994
  %2996 = load i32, ptr %2995, align 4, !tbaa !6
  %2997 = mul nsw i32 %2996, %2993
  %2998 = add nsw i32 %2997, %2937
  %2999 = icmp sgt i64 %2935, 2
  %3000 = add nsw i64 %2936, -1
  %3001 = add i32 %2934, 1
  br i1 %2999, label %2933, label %3002, !llvm.loop !1402

3002:                                             ; preds = %2992, %2930
  %3003 = phi i32 [ %2932, %2930 ], [ %2998, %2992 ]
  %3004 = icmp slt i32 %3003, %5
  br i1 %3004, label %3007, label %3005

3005:                                             ; preds = %3002
  %3006 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1994, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5518

3007:                                             ; preds = %3002
  %3008 = sext i32 %3003 to i64
  %3009 = getelementptr inbounds double, ptr %2466, i64 %3008
  %3010 = load double, ptr %3009, align 8, !tbaa !19
  %3011 = fptosi double %3010 to i32
  %3012 = load i32, ptr %2468, align 4, !tbaa !6
  %3013 = icmp slt i32 %3012, %3011
  br i1 %3013, label %3014, label %3015

3014:                                             ; preds = %3007
  store i32 %3011, ptr %2468, align 4, !tbaa !6
  br label %3015

3015:                                             ; preds = %3014, %3007
  %3016 = add nuw nsw i32 %2931, 1
  br i1 %2781, label %3017, label %3067

3017:                                             ; preds = %3015
  %3018 = load i32, ptr %4, align 4, !tbaa !6
  %3019 = load i32, ptr %12, align 4, !tbaa !6
  %3020 = add nsw i32 %3019, -1
  %3021 = icmp slt i32 %3018, %3020
  br i1 %3021, label %3044, label %3022

3022:                                             ; preds = %3017
  %3023 = icmp eq i32 %3018, %3020
  br i1 %3023, label %3024, label %3060

3024:                                             ; preds = %3022
  store i32 0, ptr %4, align 4, !tbaa !6
  %3025 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3025, ptr %6, align 4, !tbaa !6
  br i1 %2786, label %3067, label %3026

3026:                                             ; preds = %3024, %3054
  %3027 = phi i64 [ %3058, %3054 ], [ 1, %3024 ]
  %3028 = getelementptr inbounds i32, ptr %4, i64 %3027
  %3029 = load i32, ptr %3028, align 4, !tbaa !6
  %3030 = getelementptr inbounds i32, ptr %12, i64 %3027
  %3031 = load i32, ptr %3030, align 4, !tbaa !6
  %3032 = add nsw i32 %3031, -1
  %3033 = icmp slt i32 %3029, %3032
  br i1 %3033, label %3034, label %3052

3034:                                             ; preds = %3026
  br i1 %3021, label %3044, label %3035

3035:                                             ; preds = %3034
  %3036 = shl i64 %3027, 32
  %3037 = add i64 %3036, -4294967296
  %3038 = ashr exact i64 %3037, 32
  %3039 = getelementptr inbounds i32, ptr %7, i64 %3038
  %3040 = load i32, ptr %3039, align 4, !tbaa !6
  %3041 = getelementptr inbounds i32, ptr %6, i64 %3027
  %3042 = load i32, ptr %3041, align 4, !tbaa !6
  %3043 = add nsw i32 %3042, %3040
  store i32 %3043, ptr %3041, align 4, !tbaa !6
  br label %3062

3044:                                             ; preds = %3017, %3034
  %3045 = phi i32 [ %3029, %3034 ], [ %3018, %3017 ]
  %3046 = phi ptr [ %3028, %3034 ], [ %4, %3017 ]
  %3047 = phi i64 [ %3027, %3034 ], [ 0, %3017 ]
  %3048 = add nsw i32 %3045, 1
  store i32 %3048, ptr %3046, align 4, !tbaa !6
  %3049 = getelementptr inbounds i32, ptr %7, i64 %3047
  %3050 = load i32, ptr %3049, align 4, !tbaa !6
  %3051 = getelementptr inbounds i32, ptr %6, i64 %3047
  br label %3062

3052:                                             ; preds = %3026
  %3053 = icmp eq i32 %3029, %3032
  br i1 %3053, label %3054, label %3060

3054:                                             ; preds = %3052
  store i32 0, ptr %3028, align 4, !tbaa !6
  %3055 = getelementptr inbounds i32, ptr %8, i64 %3027
  %3056 = load i32, ptr %3055, align 4, !tbaa !6
  %3057 = getelementptr inbounds i32, ptr %6, i64 %3027
  store i32 %3056, ptr %3057, align 4, !tbaa !6
  %3058 = add nuw nsw i64 %3027, 1
  %3059 = icmp eq i64 %3058, %2784
  br i1 %3059, label %3067, label %3026, !llvm.loop !1403

3060:                                             ; preds = %3022, %3052
  %3061 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1994, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5518

3062:                                             ; preds = %3035, %3044
  %3063 = phi ptr [ %3051, %3044 ], [ %3028, %3035 ]
  %3064 = phi i32 [ %3050, %3044 ], [ 1, %3035 ]
  %3065 = load i32, ptr %3063, align 4, !tbaa !6
  %3066 = add nsw i32 %3065, %3064
  store i32 %3066, ptr %3063, align 4, !tbaa !6
  br label %3067

3067:                                             ; preds = %3054, %3062, %3024, %3015
  %3068 = icmp eq i32 %3016, %5
  br i1 %3068, label %5513, label %2930, !llvm.loop !1404

3069:                                             ; preds = %2472
  %3070 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1994, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5513

3071:                                             ; preds = %18
  %3072 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3073 = load ptr, ptr %3072, align 8, !tbaa !10
  %3074 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3075 = load ptr, ptr %3074, align 8, !tbaa !10
  %3076 = load double, ptr %3073, align 8, !tbaa !19
  %3077 = fptosi double %3076 to i64
  store i64 %3077, ptr %3075, align 8, !tbaa !121
  %3078 = icmp eq i32 %13, 0
  br i1 %3078, label %5513, label %3079

3079:                                             ; preds = %3071
  switch i32 %1, label %3680 [
    i32 1, label %3080
    i32 0, label %3382
  ]

3080:                                             ; preds = %3079
  %3081 = getelementptr inbounds i32, ptr %3, i64 %19
  %3082 = load i32, ptr %3081, align 4, !tbaa !6
  %3083 = icmp eq i32 %3082, 0
  %3084 = icmp sgt i32 %5, 0
  br i1 %3083, label %3094, label %3085

3085:                                             ; preds = %3080
  br i1 %3084, label %3086, label %5513

3086:                                             ; preds = %3085
  %3087 = icmp sgt i32 %13, 1
  %3088 = icmp sgt i32 %13, 0
  %3089 = add i32 %13, -2
  %3090 = zext i32 %3089 to i64
  %3091 = zext i32 %13 to i64
  %3092 = add nuw i32 %5, 1
  %3093 = icmp eq i32 %13, 1
  br label %3242

3094:                                             ; preds = %3080
  br i1 %3084, label %3095, label %5513

3095:                                             ; preds = %3094
  %3096 = icmp sgt i32 %13, 1
  %3097 = icmp sgt i32 %13, 0
  %3098 = add i32 %13, -2
  %3099 = zext i32 %3098 to i64
  %3100 = zext i32 %13 to i64
  %3101 = add nuw i32 %5, 1
  %3102 = icmp eq i32 %13, 1
  br label %3103

3103:                                             ; preds = %3095, %3240
  %3104 = phi i64 [ %3077, %3095 ], [ %3190, %3240 ]
  %3105 = phi i32 [ 0, %3095 ], [ %3192, %3240 ]
  %3106 = phi double [ 0.000000e+00, %3095 ], [ %3191, %3240 ]
  %3107 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3096, label %3108, label %3177

3108:                                             ; preds = %3103, %3167
  %3109 = phi i32 [ %3176, %3167 ], [ 0, %3103 ]
  %3110 = phi i64 [ %3118, %3167 ], [ %3100, %3103 ]
  %3111 = phi i64 [ %3175, %3167 ], [ %3099, %3103 ]
  %3112 = phi i32 [ %3173, %3167 ], [ %3107, %3103 ]
  %3113 = sub i32 %3098, %3109
  %3114 = tail call i32 @llvm.smin.i32(i32 %3113, i32 0)
  %3115 = sub i32 %3113, %3114
  %3116 = zext i32 %3115 to i64
  %3117 = add nuw nsw i64 %3116, 1
  %3118 = add nsw i64 %3110, -1
  %3119 = icmp ult i32 %3115, 31
  br i1 %3119, label %3155, label %3120

3120:                                             ; preds = %3108
  %3121 = and i64 %3117, 8589934560
  %3122 = sub i64 %3111, %3121
  br label %3123

3123:                                             ; preds = %3123, %3120
  %3124 = phi i64 [ 0, %3120 ], [ %3147, %3123 ]
  %3125 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3120 ], [ %3143, %3123 ]
  %3126 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3120 ], [ %3144, %3123 ]
  %3127 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3120 ], [ %3145, %3123 ]
  %3128 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3120 ], [ %3146, %3123 ]
  %3129 = sub i64 %3111, %3124
  %3130 = getelementptr inbounds i32, ptr %9, i64 %3129
  %3131 = getelementptr inbounds i32, ptr %3130, i64 -7
  %3132 = load <8 x i32>, ptr %3131, align 4, !tbaa !6
  %3133 = shufflevector <8 x i32> %3132, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3134 = getelementptr inbounds i32, ptr %3130, i64 -15
  %3135 = load <8 x i32>, ptr %3134, align 4, !tbaa !6
  %3136 = shufflevector <8 x i32> %3135, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3137 = getelementptr inbounds i32, ptr %3130, i64 -23
  %3138 = load <8 x i32>, ptr %3137, align 4, !tbaa !6
  %3139 = shufflevector <8 x i32> %3138, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3140 = getelementptr inbounds i32, ptr %3130, i64 -31
  %3141 = load <8 x i32>, ptr %3140, align 4, !tbaa !6
  %3142 = shufflevector <8 x i32> %3141, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3143 = mul <8 x i32> %3133, %3125
  %3144 = mul <8 x i32> %3136, %3126
  %3145 = mul <8 x i32> %3139, %3127
  %3146 = mul <8 x i32> %3142, %3128
  %3147 = add nuw i64 %3124, 32
  %3148 = icmp eq i64 %3147, %3121
  br i1 %3148, label %3149, label %3123, !llvm.loop !1405

3149:                                             ; preds = %3123
  %3150 = mul <8 x i32> %3144, %3143
  %3151 = mul <8 x i32> %3145, %3150
  %3152 = mul <8 x i32> %3146, %3151
  %3153 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3152)
  %3154 = icmp eq i64 %3117, %3121
  br i1 %3154, label %3167, label %3155

3155:                                             ; preds = %3108, %3149
  %3156 = phi i64 [ %3111, %3108 ], [ %3122, %3149 ]
  %3157 = phi i32 [ 1, %3108 ], [ %3153, %3149 ]
  br label %3158

3158:                                             ; preds = %3155, %3158
  %3159 = phi i64 [ %3164, %3158 ], [ %3156, %3155 ]
  %3160 = phi i32 [ %3163, %3158 ], [ %3157, %3155 ]
  %3161 = getelementptr inbounds i32, ptr %9, i64 %3159
  %3162 = load i32, ptr %3161, align 4, !tbaa !6
  %3163 = mul nsw i32 %3162, %3160
  %3164 = add nsw i64 %3159, -1
  %3165 = trunc i64 %3159 to i32
  %3166 = icmp sgt i32 %3165, 0
  br i1 %3166, label %3158, label %3167, !llvm.loop !1406

3167:                                             ; preds = %3158, %3149
  %3168 = phi i32 [ %3153, %3149 ], [ %3163, %3158 ]
  %3169 = and i64 %3118, 4294967295
  %3170 = getelementptr inbounds i32, ptr %6, i64 %3169
  %3171 = load i32, ptr %3170, align 4, !tbaa !6
  %3172 = mul nsw i32 %3171, %3168
  %3173 = add nsw i32 %3172, %3112
  %3174 = icmp sgt i64 %3110, 2
  %3175 = add nsw i64 %3111, -1
  %3176 = add i32 %3109, 1
  br i1 %3174, label %3108, label %3177, !llvm.loop !1407

3177:                                             ; preds = %3167, %3103
  %3178 = phi i32 [ %3107, %3103 ], [ %3173, %3167 ]
  %3179 = sext i32 %3178 to i64
  %3180 = getelementptr inbounds double, ptr %2, i64 %3179
  %3181 = load double, ptr %3180, align 8, !tbaa !19
  %3182 = getelementptr inbounds double, ptr %3073, i64 %3179
  %3183 = load double, ptr %3182, align 8, !tbaa !19
  %3184 = fptosi double %3183 to i64
  %3185 = fcmp fast one double %3181, 0.000000e+00
  %3186 = icmp slt i64 %3104, %3184
  %3187 = select i1 %3185, i1 %3186, i1 false
  br i1 %3187, label %3188, label %3189

3188:                                             ; preds = %3177
  store i64 %3184, ptr %3075, align 8, !tbaa !121
  br label %3189

3189:                                             ; preds = %3188, %3177
  %3190 = phi i64 [ %3184, %3188 ], [ %3104, %3177 ]
  %3191 = fadd fast double %3181, %3106
  %3192 = add nuw nsw i32 %3105, 1
  br i1 %3097, label %3193, label %3240

3193:                                             ; preds = %3189
  %3194 = load i32, ptr %4, align 4, !tbaa !6
  %3195 = load i32, ptr %12, align 4, !tbaa !6
  %3196 = add nsw i32 %3195, -1
  %3197 = icmp slt i32 %3194, %3196
  br i1 %3197, label %3217, label %3198

3198:                                             ; preds = %3193
  %3199 = icmp eq i32 %3194, %3196
  br i1 %3199, label %3200, label %3233

3200:                                             ; preds = %3198
  store i32 0, ptr %4, align 4, !tbaa !6
  %3201 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3201, ptr %6, align 4, !tbaa !6
  br i1 %3102, label %3240, label %3202

3202:                                             ; preds = %3200, %3227
  %3203 = phi i64 [ %3231, %3227 ], [ 1, %3200 ]
  %3204 = getelementptr inbounds i32, ptr %4, i64 %3203
  %3205 = load i32, ptr %3204, align 4, !tbaa !6
  %3206 = getelementptr inbounds i32, ptr %12, i64 %3203
  %3207 = load i32, ptr %3206, align 4, !tbaa !6
  %3208 = add nsw i32 %3207, -1
  %3209 = icmp slt i32 %3205, %3208
  br i1 %3209, label %3210, label %3225

3210:                                             ; preds = %3202
  br i1 %3197, label %3217, label %3211

3211:                                             ; preds = %3210
  %3212 = getelementptr inbounds i32, ptr %7, i64 %3203
  %3213 = load i32, ptr %3212, align 4, !tbaa !6
  %3214 = getelementptr inbounds i32, ptr %6, i64 %3203
  %3215 = load i32, ptr %3214, align 4, !tbaa !6
  %3216 = add nsw i32 %3215, %3213
  store i32 %3216, ptr %3214, align 4, !tbaa !6
  br label %3235

3217:                                             ; preds = %3193, %3210
  %3218 = phi i32 [ %3205, %3210 ], [ %3194, %3193 ]
  %3219 = phi ptr [ %3204, %3210 ], [ %4, %3193 ]
  %3220 = phi i64 [ %3203, %3210 ], [ 0, %3193 ]
  %3221 = add nsw i32 %3218, 1
  store i32 %3221, ptr %3219, align 4, !tbaa !6
  %3222 = getelementptr inbounds i32, ptr %7, i64 %3220
  %3223 = load i32, ptr %3222, align 4, !tbaa !6
  %3224 = getelementptr inbounds i32, ptr %6, i64 %3220
  br label %3235

3225:                                             ; preds = %3202
  %3226 = icmp eq i32 %3205, %3208
  br i1 %3226, label %3227, label %3233

3227:                                             ; preds = %3225
  store i32 0, ptr %3204, align 4, !tbaa !6
  %3228 = getelementptr inbounds i32, ptr %8, i64 %3203
  %3229 = load i32, ptr %3228, align 4, !tbaa !6
  %3230 = getelementptr inbounds i32, ptr %6, i64 %3203
  store i32 %3229, ptr %3230, align 4, !tbaa !6
  %3231 = add nuw nsw i64 %3203, 1
  %3232 = icmp eq i64 %3231, %3100
  br i1 %3232, label %3240, label %3202, !llvm.loop !1408

3233:                                             ; preds = %3198, %3225
  %3234 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1999, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5518

3235:                                             ; preds = %3211, %3217
  %3236 = phi ptr [ %3224, %3217 ], [ %3204, %3211 ]
  %3237 = phi i32 [ %3223, %3217 ], [ 1, %3211 ]
  %3238 = load i32, ptr %3236, align 4, !tbaa !6
  %3239 = add nsw i32 %3238, %3237
  store i32 %3239, ptr %3236, align 4, !tbaa !6
  br label %3240

3240:                                             ; preds = %3227, %3235, %3200, %3189
  %3241 = icmp eq i32 %3192, %5
  br i1 %3241, label %5513, label %3103, !llvm.loop !1409

3242:                                             ; preds = %3086, %3380
  %3243 = phi i64 [ %3077, %3086 ], [ %3328, %3380 ]
  %3244 = phi i32 [ 0, %3086 ], [ %3329, %3380 ]
  %3245 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3087, label %3246, label %3315

3246:                                             ; preds = %3242, %3305
  %3247 = phi i32 [ %3314, %3305 ], [ 0, %3242 ]
  %3248 = phi i64 [ %3256, %3305 ], [ %3091, %3242 ]
  %3249 = phi i64 [ %3313, %3305 ], [ %3090, %3242 ]
  %3250 = phi i32 [ %3311, %3305 ], [ %3245, %3242 ]
  %3251 = sub i32 %3089, %3247
  %3252 = tail call i32 @llvm.smin.i32(i32 %3251, i32 0)
  %3253 = sub i32 %3251, %3252
  %3254 = zext i32 %3253 to i64
  %3255 = add nuw nsw i64 %3254, 1
  %3256 = add nsw i64 %3248, -1
  %3257 = icmp ult i32 %3253, 31
  br i1 %3257, label %3293, label %3258

3258:                                             ; preds = %3246
  %3259 = and i64 %3255, 8589934560
  %3260 = sub i64 %3249, %3259
  br label %3261

3261:                                             ; preds = %3261, %3258
  %3262 = phi i64 [ 0, %3258 ], [ %3285, %3261 ]
  %3263 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3258 ], [ %3281, %3261 ]
  %3264 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3258 ], [ %3282, %3261 ]
  %3265 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3258 ], [ %3283, %3261 ]
  %3266 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3258 ], [ %3284, %3261 ]
  %3267 = sub i64 %3249, %3262
  %3268 = getelementptr inbounds i32, ptr %11, i64 %3267
  %3269 = getelementptr inbounds i32, ptr %3268, i64 -7
  %3270 = load <8 x i32>, ptr %3269, align 4, !tbaa !6
  %3271 = shufflevector <8 x i32> %3270, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3272 = getelementptr inbounds i32, ptr %3268, i64 -15
  %3273 = load <8 x i32>, ptr %3272, align 4, !tbaa !6
  %3274 = shufflevector <8 x i32> %3273, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3275 = getelementptr inbounds i32, ptr %3268, i64 -23
  %3276 = load <8 x i32>, ptr %3275, align 4, !tbaa !6
  %3277 = shufflevector <8 x i32> %3276, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3278 = getelementptr inbounds i32, ptr %3268, i64 -31
  %3279 = load <8 x i32>, ptr %3278, align 4, !tbaa !6
  %3280 = shufflevector <8 x i32> %3279, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3281 = mul <8 x i32> %3271, %3263
  %3282 = mul <8 x i32> %3274, %3264
  %3283 = mul <8 x i32> %3277, %3265
  %3284 = mul <8 x i32> %3280, %3266
  %3285 = add nuw i64 %3262, 32
  %3286 = icmp eq i64 %3285, %3259
  br i1 %3286, label %3287, label %3261, !llvm.loop !1410

3287:                                             ; preds = %3261
  %3288 = mul <8 x i32> %3282, %3281
  %3289 = mul <8 x i32> %3283, %3288
  %3290 = mul <8 x i32> %3284, %3289
  %3291 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3290)
  %3292 = icmp eq i64 %3255, %3259
  br i1 %3292, label %3305, label %3293

3293:                                             ; preds = %3246, %3287
  %3294 = phi i64 [ %3249, %3246 ], [ %3260, %3287 ]
  %3295 = phi i32 [ 1, %3246 ], [ %3291, %3287 ]
  br label %3296

3296:                                             ; preds = %3293, %3296
  %3297 = phi i64 [ %3302, %3296 ], [ %3294, %3293 ]
  %3298 = phi i32 [ %3301, %3296 ], [ %3295, %3293 ]
  %3299 = getelementptr inbounds i32, ptr %11, i64 %3297
  %3300 = load i32, ptr %3299, align 4, !tbaa !6
  %3301 = mul nsw i32 %3300, %3298
  %3302 = add nsw i64 %3297, -1
  %3303 = trunc i64 %3297 to i32
  %3304 = icmp sgt i32 %3303, 0
  br i1 %3304, label %3296, label %3305, !llvm.loop !1411

3305:                                             ; preds = %3296, %3287
  %3306 = phi i32 [ %3291, %3287 ], [ %3301, %3296 ]
  %3307 = and i64 %3256, 4294967295
  %3308 = getelementptr inbounds i32, ptr %6, i64 %3307
  %3309 = load i32, ptr %3308, align 4, !tbaa !6
  %3310 = mul nsw i32 %3309, %3306
  %3311 = add nsw i32 %3310, %3250
  %3312 = icmp sgt i64 %3248, 2
  %3313 = add nsw i64 %3249, -1
  %3314 = add i32 %3247, 1
  br i1 %3312, label %3246, label %3315, !llvm.loop !1412

3315:                                             ; preds = %3305, %3242
  %3316 = phi i32 [ %3245, %3242 ], [ %3311, %3305 ]
  %3317 = icmp slt i32 %3316, %5
  br i1 %3317, label %3320, label %3318

3318:                                             ; preds = %3315
  %3319 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1999, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5518

3320:                                             ; preds = %3315
  %3321 = sext i32 %3316 to i64
  %3322 = getelementptr inbounds double, ptr %3073, i64 %3321
  %3323 = load double, ptr %3322, align 8, !tbaa !19
  %3324 = fptosi double %3323 to i64
  %3325 = icmp slt i64 %3243, %3324
  br i1 %3325, label %3326, label %3327

3326:                                             ; preds = %3320
  store i64 %3324, ptr %3075, align 8, !tbaa !121
  br label %3327

3327:                                             ; preds = %3320, %3326
  %3328 = phi i64 [ %3243, %3320 ], [ %3324, %3326 ]
  %3329 = add nuw nsw i32 %3244, 1
  br i1 %3088, label %3330, label %3380

3330:                                             ; preds = %3327
  %3331 = load i32, ptr %4, align 4, !tbaa !6
  %3332 = load i32, ptr %12, align 4, !tbaa !6
  %3333 = add nsw i32 %3332, -1
  %3334 = icmp slt i32 %3331, %3333
  br i1 %3334, label %3357, label %3335

3335:                                             ; preds = %3330
  %3336 = icmp eq i32 %3331, %3333
  br i1 %3336, label %3337, label %3373

3337:                                             ; preds = %3335
  store i32 0, ptr %4, align 4, !tbaa !6
  %3338 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3338, ptr %6, align 4, !tbaa !6
  br i1 %3093, label %3380, label %3339

3339:                                             ; preds = %3337, %3367
  %3340 = phi i64 [ %3371, %3367 ], [ 1, %3337 ]
  %3341 = getelementptr inbounds i32, ptr %4, i64 %3340
  %3342 = load i32, ptr %3341, align 4, !tbaa !6
  %3343 = getelementptr inbounds i32, ptr %12, i64 %3340
  %3344 = load i32, ptr %3343, align 4, !tbaa !6
  %3345 = add nsw i32 %3344, -1
  %3346 = icmp slt i32 %3342, %3345
  br i1 %3346, label %3347, label %3365

3347:                                             ; preds = %3339
  br i1 %3334, label %3357, label %3348

3348:                                             ; preds = %3347
  %3349 = shl i64 %3340, 32
  %3350 = add i64 %3349, -4294967296
  %3351 = ashr exact i64 %3350, 32
  %3352 = getelementptr inbounds i32, ptr %7, i64 %3351
  %3353 = load i32, ptr %3352, align 4, !tbaa !6
  %3354 = getelementptr inbounds i32, ptr %6, i64 %3340
  %3355 = load i32, ptr %3354, align 4, !tbaa !6
  %3356 = add nsw i32 %3355, %3353
  store i32 %3356, ptr %3354, align 4, !tbaa !6
  br label %3375

3357:                                             ; preds = %3330, %3347
  %3358 = phi i32 [ %3342, %3347 ], [ %3331, %3330 ]
  %3359 = phi ptr [ %3341, %3347 ], [ %4, %3330 ]
  %3360 = phi i64 [ %3340, %3347 ], [ 0, %3330 ]
  %3361 = add nsw i32 %3358, 1
  store i32 %3361, ptr %3359, align 4, !tbaa !6
  %3362 = getelementptr inbounds i32, ptr %7, i64 %3360
  %3363 = load i32, ptr %3362, align 4, !tbaa !6
  %3364 = getelementptr inbounds i32, ptr %6, i64 %3360
  br label %3375

3365:                                             ; preds = %3339
  %3366 = icmp eq i32 %3342, %3345
  br i1 %3366, label %3367, label %3373

3367:                                             ; preds = %3365
  store i32 0, ptr %3341, align 4, !tbaa !6
  %3368 = getelementptr inbounds i32, ptr %8, i64 %3340
  %3369 = load i32, ptr %3368, align 4, !tbaa !6
  %3370 = getelementptr inbounds i32, ptr %6, i64 %3340
  store i32 %3369, ptr %3370, align 4, !tbaa !6
  %3371 = add nuw nsw i64 %3340, 1
  %3372 = icmp eq i64 %3371, %3091
  br i1 %3372, label %3380, label %3339, !llvm.loop !1413

3373:                                             ; preds = %3335, %3365
  %3374 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1999, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5518

3375:                                             ; preds = %3348, %3357
  %3376 = phi ptr [ %3364, %3357 ], [ %3341, %3348 ]
  %3377 = phi i32 [ %3363, %3357 ], [ 1, %3348 ]
  %3378 = load i32, ptr %3376, align 4, !tbaa !6
  %3379 = add nsw i32 %3378, %3377
  store i32 %3379, ptr %3376, align 4, !tbaa !6
  br label %3380

3380:                                             ; preds = %3367, %3375, %3337, %3327
  %3381 = icmp eq i32 %3329, %5
  br i1 %3381, label %5513, label %3242, !llvm.loop !1414

3382:                                             ; preds = %3079
  %3383 = getelementptr inbounds i32, ptr %3, i64 %19
  %3384 = load i32, ptr %3383, align 4, !tbaa !6
  %3385 = icmp eq i32 %3384, 0
  %3386 = icmp sgt i32 %5, 0
  br i1 %3385, label %3396, label %3387

3387:                                             ; preds = %3382
  br i1 %3386, label %3388, label %5513

3388:                                             ; preds = %3387
  %3389 = icmp sgt i32 %13, 1
  %3390 = icmp sgt i32 %13, 0
  %3391 = add i32 %13, -2
  %3392 = zext i32 %3391 to i64
  %3393 = zext i32 %13 to i64
  %3394 = add nuw i32 %5, 1
  %3395 = icmp eq i32 %13, 1
  br label %3540

3396:                                             ; preds = %3382
  br i1 %3386, label %3397, label %5513

3397:                                             ; preds = %3396
  %3398 = icmp sgt i32 %13, 1
  %3399 = icmp sgt i32 %13, 0
  %3400 = add i32 %13, -2
  %3401 = zext i32 %3400 to i64
  %3402 = zext i32 %13 to i64
  %3403 = add nuw i32 %5, 1
  %3404 = icmp eq i32 %13, 1
  br label %3405

3405:                                             ; preds = %3397, %3538
  %3406 = phi i64 [ %3077, %3397 ], [ %3488, %3538 ]
  %3407 = phi i32 [ 0, %3397 ], [ %3490, %3538 ]
  %3408 = phi double [ 0.000000e+00, %3397 ], [ %3489, %3538 ]
  %3409 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3398, label %3410, label %3479

3410:                                             ; preds = %3405, %3469
  %3411 = phi i32 [ %3478, %3469 ], [ 0, %3405 ]
  %3412 = phi i64 [ %3420, %3469 ], [ %3402, %3405 ]
  %3413 = phi i64 [ %3477, %3469 ], [ %3401, %3405 ]
  %3414 = phi i32 [ %3475, %3469 ], [ %3409, %3405 ]
  %3415 = sub i32 %3400, %3411
  %3416 = tail call i32 @llvm.smin.i32(i32 %3415, i32 0)
  %3417 = sub i32 %3415, %3416
  %3418 = zext i32 %3417 to i64
  %3419 = add nuw nsw i64 %3418, 1
  %3420 = add nsw i64 %3412, -1
  %3421 = icmp ult i32 %3417, 31
  br i1 %3421, label %3457, label %3422

3422:                                             ; preds = %3410
  %3423 = and i64 %3419, 8589934560
  %3424 = sub i64 %3413, %3423
  br label %3425

3425:                                             ; preds = %3425, %3422
  %3426 = phi i64 [ 0, %3422 ], [ %3449, %3425 ]
  %3427 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3422 ], [ %3445, %3425 ]
  %3428 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3422 ], [ %3446, %3425 ]
  %3429 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3422 ], [ %3447, %3425 ]
  %3430 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3422 ], [ %3448, %3425 ]
  %3431 = sub i64 %3413, %3426
  %3432 = getelementptr inbounds i32, ptr %9, i64 %3431
  %3433 = getelementptr inbounds i32, ptr %3432, i64 -7
  %3434 = load <8 x i32>, ptr %3433, align 4, !tbaa !6
  %3435 = shufflevector <8 x i32> %3434, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3436 = getelementptr inbounds i32, ptr %3432, i64 -15
  %3437 = load <8 x i32>, ptr %3436, align 4, !tbaa !6
  %3438 = shufflevector <8 x i32> %3437, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3439 = getelementptr inbounds i32, ptr %3432, i64 -23
  %3440 = load <8 x i32>, ptr %3439, align 4, !tbaa !6
  %3441 = shufflevector <8 x i32> %3440, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3442 = getelementptr inbounds i32, ptr %3432, i64 -31
  %3443 = load <8 x i32>, ptr %3442, align 4, !tbaa !6
  %3444 = shufflevector <8 x i32> %3443, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3445 = mul <8 x i32> %3435, %3427
  %3446 = mul <8 x i32> %3438, %3428
  %3447 = mul <8 x i32> %3441, %3429
  %3448 = mul <8 x i32> %3444, %3430
  %3449 = add nuw i64 %3426, 32
  %3450 = icmp eq i64 %3449, %3423
  br i1 %3450, label %3451, label %3425, !llvm.loop !1415

3451:                                             ; preds = %3425
  %3452 = mul <8 x i32> %3446, %3445
  %3453 = mul <8 x i32> %3447, %3452
  %3454 = mul <8 x i32> %3448, %3453
  %3455 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3454)
  %3456 = icmp eq i64 %3419, %3423
  br i1 %3456, label %3469, label %3457

3457:                                             ; preds = %3410, %3451
  %3458 = phi i64 [ %3413, %3410 ], [ %3424, %3451 ]
  %3459 = phi i32 [ 1, %3410 ], [ %3455, %3451 ]
  br label %3460

3460:                                             ; preds = %3457, %3460
  %3461 = phi i64 [ %3466, %3460 ], [ %3458, %3457 ]
  %3462 = phi i32 [ %3465, %3460 ], [ %3459, %3457 ]
  %3463 = getelementptr inbounds i32, ptr %9, i64 %3461
  %3464 = load i32, ptr %3463, align 4, !tbaa !6
  %3465 = mul nsw i32 %3464, %3462
  %3466 = add nsw i64 %3461, -1
  %3467 = trunc i64 %3461 to i32
  %3468 = icmp sgt i32 %3467, 0
  br i1 %3468, label %3460, label %3469, !llvm.loop !1416

3469:                                             ; preds = %3460, %3451
  %3470 = phi i32 [ %3455, %3451 ], [ %3465, %3460 ]
  %3471 = and i64 %3420, 4294967295
  %3472 = getelementptr inbounds i32, ptr %6, i64 %3471
  %3473 = load i32, ptr %3472, align 4, !tbaa !6
  %3474 = mul nsw i32 %3473, %3470
  %3475 = add nsw i32 %3474, %3414
  %3476 = icmp sgt i64 %3412, 2
  %3477 = add nsw i64 %3413, -1
  %3478 = add i32 %3411, 1
  br i1 %3476, label %3410, label %3479, !llvm.loop !1417

3479:                                             ; preds = %3469, %3405
  %3480 = phi i32 [ %3409, %3405 ], [ %3475, %3469 ]
  %3481 = sext i32 %3480 to i64
  %3482 = getelementptr inbounds double, ptr %3073, i64 %3481
  %3483 = load double, ptr %3482, align 8, !tbaa !19
  %3484 = fptosi double %3483 to i64
  %3485 = icmp slt i64 %3406, %3484
  br i1 %3485, label %3486, label %3487

3486:                                             ; preds = %3479
  store i64 %3484, ptr %3075, align 8, !tbaa !121
  br label %3487

3487:                                             ; preds = %3486, %3479
  %3488 = phi i64 [ %3484, %3486 ], [ %3406, %3479 ]
  %3489 = fadd fast double %3408, 1.000000e+00
  %3490 = add nuw nsw i32 %3407, 1
  br i1 %3399, label %3491, label %3538

3491:                                             ; preds = %3487
  %3492 = load i32, ptr %4, align 4, !tbaa !6
  %3493 = load i32, ptr %12, align 4, !tbaa !6
  %3494 = add nsw i32 %3493, -1
  %3495 = icmp slt i32 %3492, %3494
  br i1 %3495, label %3515, label %3496

3496:                                             ; preds = %3491
  %3497 = icmp eq i32 %3492, %3494
  br i1 %3497, label %3498, label %3531

3498:                                             ; preds = %3496
  store i32 0, ptr %4, align 4, !tbaa !6
  %3499 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3499, ptr %6, align 4, !tbaa !6
  br i1 %3404, label %3538, label %3500

3500:                                             ; preds = %3498, %3525
  %3501 = phi i64 [ %3529, %3525 ], [ 1, %3498 ]
  %3502 = getelementptr inbounds i32, ptr %4, i64 %3501
  %3503 = load i32, ptr %3502, align 4, !tbaa !6
  %3504 = getelementptr inbounds i32, ptr %12, i64 %3501
  %3505 = load i32, ptr %3504, align 4, !tbaa !6
  %3506 = add nsw i32 %3505, -1
  %3507 = icmp slt i32 %3503, %3506
  br i1 %3507, label %3508, label %3523

3508:                                             ; preds = %3500
  br i1 %3495, label %3515, label %3509

3509:                                             ; preds = %3508
  %3510 = getelementptr inbounds i32, ptr %7, i64 %3501
  %3511 = load i32, ptr %3510, align 4, !tbaa !6
  %3512 = getelementptr inbounds i32, ptr %6, i64 %3501
  %3513 = load i32, ptr %3512, align 4, !tbaa !6
  %3514 = add nsw i32 %3513, %3511
  store i32 %3514, ptr %3512, align 4, !tbaa !6
  br label %3533

3515:                                             ; preds = %3491, %3508
  %3516 = phi i32 [ %3503, %3508 ], [ %3492, %3491 ]
  %3517 = phi ptr [ %3502, %3508 ], [ %4, %3491 ]
  %3518 = phi i64 [ %3501, %3508 ], [ 0, %3491 ]
  %3519 = add nsw i32 %3516, 1
  store i32 %3519, ptr %3517, align 4, !tbaa !6
  %3520 = getelementptr inbounds i32, ptr %7, i64 %3518
  %3521 = load i32, ptr %3520, align 4, !tbaa !6
  %3522 = getelementptr inbounds i32, ptr %6, i64 %3518
  br label %3533

3523:                                             ; preds = %3500
  %3524 = icmp eq i32 %3503, %3506
  br i1 %3524, label %3525, label %3531

3525:                                             ; preds = %3523
  store i32 0, ptr %3502, align 4, !tbaa !6
  %3526 = getelementptr inbounds i32, ptr %8, i64 %3501
  %3527 = load i32, ptr %3526, align 4, !tbaa !6
  %3528 = getelementptr inbounds i32, ptr %6, i64 %3501
  store i32 %3527, ptr %3528, align 4, !tbaa !6
  %3529 = add nuw nsw i64 %3501, 1
  %3530 = icmp eq i64 %3529, %3402
  br i1 %3530, label %3538, label %3500, !llvm.loop !1418

3531:                                             ; preds = %3496, %3523
  %3532 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1999, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5518

3533:                                             ; preds = %3509, %3515
  %3534 = phi ptr [ %3522, %3515 ], [ %3502, %3509 ]
  %3535 = phi i32 [ %3521, %3515 ], [ 1, %3509 ]
  %3536 = load i32, ptr %3534, align 4, !tbaa !6
  %3537 = add nsw i32 %3536, %3535
  store i32 %3537, ptr %3534, align 4, !tbaa !6
  br label %3538

3538:                                             ; preds = %3525, %3533, %3498, %3487
  %3539 = icmp eq i32 %3490, %5
  br i1 %3539, label %5513, label %3405, !llvm.loop !1419

3540:                                             ; preds = %3388, %3678
  %3541 = phi i64 [ %3077, %3388 ], [ %3626, %3678 ]
  %3542 = phi i32 [ 0, %3388 ], [ %3627, %3678 ]
  %3543 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3389, label %3544, label %3613

3544:                                             ; preds = %3540, %3603
  %3545 = phi i32 [ %3612, %3603 ], [ 0, %3540 ]
  %3546 = phi i64 [ %3554, %3603 ], [ %3393, %3540 ]
  %3547 = phi i64 [ %3611, %3603 ], [ %3392, %3540 ]
  %3548 = phi i32 [ %3609, %3603 ], [ %3543, %3540 ]
  %3549 = sub i32 %3391, %3545
  %3550 = tail call i32 @llvm.smin.i32(i32 %3549, i32 0)
  %3551 = sub i32 %3549, %3550
  %3552 = zext i32 %3551 to i64
  %3553 = add nuw nsw i64 %3552, 1
  %3554 = add nsw i64 %3546, -1
  %3555 = icmp ult i32 %3551, 31
  br i1 %3555, label %3591, label %3556

3556:                                             ; preds = %3544
  %3557 = and i64 %3553, 8589934560
  %3558 = sub i64 %3547, %3557
  br label %3559

3559:                                             ; preds = %3559, %3556
  %3560 = phi i64 [ 0, %3556 ], [ %3583, %3559 ]
  %3561 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3556 ], [ %3579, %3559 ]
  %3562 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3556 ], [ %3580, %3559 ]
  %3563 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3556 ], [ %3581, %3559 ]
  %3564 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3556 ], [ %3582, %3559 ]
  %3565 = sub i64 %3547, %3560
  %3566 = getelementptr inbounds i32, ptr %11, i64 %3565
  %3567 = getelementptr inbounds i32, ptr %3566, i64 -7
  %3568 = load <8 x i32>, ptr %3567, align 4, !tbaa !6
  %3569 = shufflevector <8 x i32> %3568, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3570 = getelementptr inbounds i32, ptr %3566, i64 -15
  %3571 = load <8 x i32>, ptr %3570, align 4, !tbaa !6
  %3572 = shufflevector <8 x i32> %3571, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3573 = getelementptr inbounds i32, ptr %3566, i64 -23
  %3574 = load <8 x i32>, ptr %3573, align 4, !tbaa !6
  %3575 = shufflevector <8 x i32> %3574, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3576 = getelementptr inbounds i32, ptr %3566, i64 -31
  %3577 = load <8 x i32>, ptr %3576, align 4, !tbaa !6
  %3578 = shufflevector <8 x i32> %3577, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3579 = mul <8 x i32> %3569, %3561
  %3580 = mul <8 x i32> %3572, %3562
  %3581 = mul <8 x i32> %3575, %3563
  %3582 = mul <8 x i32> %3578, %3564
  %3583 = add nuw i64 %3560, 32
  %3584 = icmp eq i64 %3583, %3557
  br i1 %3584, label %3585, label %3559, !llvm.loop !1420

3585:                                             ; preds = %3559
  %3586 = mul <8 x i32> %3580, %3579
  %3587 = mul <8 x i32> %3581, %3586
  %3588 = mul <8 x i32> %3582, %3587
  %3589 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3588)
  %3590 = icmp eq i64 %3553, %3557
  br i1 %3590, label %3603, label %3591

3591:                                             ; preds = %3544, %3585
  %3592 = phi i64 [ %3547, %3544 ], [ %3558, %3585 ]
  %3593 = phi i32 [ 1, %3544 ], [ %3589, %3585 ]
  br label %3594

3594:                                             ; preds = %3591, %3594
  %3595 = phi i64 [ %3600, %3594 ], [ %3592, %3591 ]
  %3596 = phi i32 [ %3599, %3594 ], [ %3593, %3591 ]
  %3597 = getelementptr inbounds i32, ptr %11, i64 %3595
  %3598 = load i32, ptr %3597, align 4, !tbaa !6
  %3599 = mul nsw i32 %3598, %3596
  %3600 = add nsw i64 %3595, -1
  %3601 = trunc i64 %3595 to i32
  %3602 = icmp sgt i32 %3601, 0
  br i1 %3602, label %3594, label %3603, !llvm.loop !1421

3603:                                             ; preds = %3594, %3585
  %3604 = phi i32 [ %3589, %3585 ], [ %3599, %3594 ]
  %3605 = and i64 %3554, 4294967295
  %3606 = getelementptr inbounds i32, ptr %6, i64 %3605
  %3607 = load i32, ptr %3606, align 4, !tbaa !6
  %3608 = mul nsw i32 %3607, %3604
  %3609 = add nsw i32 %3608, %3548
  %3610 = icmp sgt i64 %3546, 2
  %3611 = add nsw i64 %3547, -1
  %3612 = add i32 %3545, 1
  br i1 %3610, label %3544, label %3613, !llvm.loop !1422

3613:                                             ; preds = %3603, %3540
  %3614 = phi i32 [ %3543, %3540 ], [ %3609, %3603 ]
  %3615 = icmp slt i32 %3614, %5
  br i1 %3615, label %3618, label %3616

3616:                                             ; preds = %3613
  %3617 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1999, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5518

3618:                                             ; preds = %3613
  %3619 = sext i32 %3614 to i64
  %3620 = getelementptr inbounds double, ptr %3073, i64 %3619
  %3621 = load double, ptr %3620, align 8, !tbaa !19
  %3622 = fptosi double %3621 to i64
  %3623 = icmp slt i64 %3541, %3622
  br i1 %3623, label %3624, label %3625

3624:                                             ; preds = %3618
  store i64 %3622, ptr %3075, align 8, !tbaa !121
  br label %3625

3625:                                             ; preds = %3624, %3618
  %3626 = phi i64 [ %3622, %3624 ], [ %3541, %3618 ]
  %3627 = add nuw nsw i32 %3542, 1
  br i1 %3390, label %3628, label %3678

3628:                                             ; preds = %3625
  %3629 = load i32, ptr %4, align 4, !tbaa !6
  %3630 = load i32, ptr %12, align 4, !tbaa !6
  %3631 = add nsw i32 %3630, -1
  %3632 = icmp slt i32 %3629, %3631
  br i1 %3632, label %3655, label %3633

3633:                                             ; preds = %3628
  %3634 = icmp eq i32 %3629, %3631
  br i1 %3634, label %3635, label %3671

3635:                                             ; preds = %3633
  store i32 0, ptr %4, align 4, !tbaa !6
  %3636 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3636, ptr %6, align 4, !tbaa !6
  br i1 %3395, label %3678, label %3637

3637:                                             ; preds = %3635, %3665
  %3638 = phi i64 [ %3669, %3665 ], [ 1, %3635 ]
  %3639 = getelementptr inbounds i32, ptr %4, i64 %3638
  %3640 = load i32, ptr %3639, align 4, !tbaa !6
  %3641 = getelementptr inbounds i32, ptr %12, i64 %3638
  %3642 = load i32, ptr %3641, align 4, !tbaa !6
  %3643 = add nsw i32 %3642, -1
  %3644 = icmp slt i32 %3640, %3643
  br i1 %3644, label %3645, label %3663

3645:                                             ; preds = %3637
  br i1 %3632, label %3655, label %3646

3646:                                             ; preds = %3645
  %3647 = shl i64 %3638, 32
  %3648 = add i64 %3647, -4294967296
  %3649 = ashr exact i64 %3648, 32
  %3650 = getelementptr inbounds i32, ptr %7, i64 %3649
  %3651 = load i32, ptr %3650, align 4, !tbaa !6
  %3652 = getelementptr inbounds i32, ptr %6, i64 %3638
  %3653 = load i32, ptr %3652, align 4, !tbaa !6
  %3654 = add nsw i32 %3653, %3651
  store i32 %3654, ptr %3652, align 4, !tbaa !6
  br label %3673

3655:                                             ; preds = %3628, %3645
  %3656 = phi i32 [ %3640, %3645 ], [ %3629, %3628 ]
  %3657 = phi ptr [ %3639, %3645 ], [ %4, %3628 ]
  %3658 = phi i64 [ %3638, %3645 ], [ 0, %3628 ]
  %3659 = add nsw i32 %3656, 1
  store i32 %3659, ptr %3657, align 4, !tbaa !6
  %3660 = getelementptr inbounds i32, ptr %7, i64 %3658
  %3661 = load i32, ptr %3660, align 4, !tbaa !6
  %3662 = getelementptr inbounds i32, ptr %6, i64 %3658
  br label %3673

3663:                                             ; preds = %3637
  %3664 = icmp eq i32 %3640, %3643
  br i1 %3664, label %3665, label %3671

3665:                                             ; preds = %3663
  store i32 0, ptr %3639, align 4, !tbaa !6
  %3666 = getelementptr inbounds i32, ptr %8, i64 %3638
  %3667 = load i32, ptr %3666, align 4, !tbaa !6
  %3668 = getelementptr inbounds i32, ptr %6, i64 %3638
  store i32 %3667, ptr %3668, align 4, !tbaa !6
  %3669 = add nuw nsw i64 %3638, 1
  %3670 = icmp eq i64 %3669, %3393
  br i1 %3670, label %3678, label %3637, !llvm.loop !1423

3671:                                             ; preds = %3633, %3663
  %3672 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1999, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5518

3673:                                             ; preds = %3646, %3655
  %3674 = phi ptr [ %3662, %3655 ], [ %3639, %3646 ]
  %3675 = phi i32 [ %3661, %3655 ], [ 1, %3646 ]
  %3676 = load i32, ptr %3674, align 4, !tbaa !6
  %3677 = add nsw i32 %3676, %3675
  store i32 %3677, ptr %3674, align 4, !tbaa !6
  br label %3678

3678:                                             ; preds = %3665, %3673, %3635, %3625
  %3679 = icmp eq i32 %3627, %5
  br i1 %3679, label %5513, label %3540, !llvm.loop !1424

3680:                                             ; preds = %3079
  %3681 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 1999, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5513

3682:                                             ; preds = %18
  %3683 = getelementptr inbounds ptr, ptr %14, i64 %19
  %3684 = load ptr, ptr %3683, align 8, !tbaa !10
  %3685 = getelementptr inbounds ptr, ptr %16, i64 %19
  %3686 = load ptr, ptr %3685, align 8, !tbaa !10
  %3687 = load double, ptr %3684, align 8, !tbaa !19
  store double %3687, ptr %3686, align 8, !tbaa !19
  %3688 = icmp eq i32 %13, 0
  br i1 %3688, label %3689, label %3693

3689:                                             ; preds = %3682
  %3690 = load double, ptr %3684, align 8, !tbaa !19
  %3691 = fcmp fast olt double %3687, %3690
  br i1 %3691, label %3692, label %5513

3692:                                             ; preds = %3689
  store double %3690, ptr %3686, align 8, !tbaa !19
  br label %5513

3693:                                             ; preds = %3682
  switch i32 %1, label %4290 [
    i32 1, label %3694
    i32 0, label %3994
  ]

3694:                                             ; preds = %3693
  %3695 = getelementptr inbounds i32, ptr %3, i64 %19
  %3696 = load i32, ptr %3695, align 4, !tbaa !6
  %3697 = icmp eq i32 %3696, 0
  %3698 = icmp sgt i32 %5, 0
  br i1 %3697, label %3708, label %3699

3699:                                             ; preds = %3694
  br i1 %3698, label %3700, label %5513

3700:                                             ; preds = %3699
  %3701 = icmp sgt i32 %13, 1
  %3702 = icmp sgt i32 %13, 0
  %3703 = add i32 %13, -2
  %3704 = zext i32 %3703 to i64
  %3705 = zext i32 %13 to i64
  %3706 = add nuw i32 %5, 1
  %3707 = icmp eq i32 %13, 1
  br label %3855

3708:                                             ; preds = %3694
  br i1 %3698, label %3709, label %5513

3709:                                             ; preds = %3708
  %3710 = icmp sgt i32 %13, 1
  %3711 = icmp sgt i32 %13, 0
  %3712 = add i32 %13, -2
  %3713 = zext i32 %3712 to i64
  %3714 = zext i32 %13 to i64
  %3715 = add nuw i32 %5, 1
  %3716 = icmp eq i32 %13, 1
  br label %3717

3717:                                             ; preds = %3709, %3853
  %3718 = phi double [ %3687, %3709 ], [ %3803, %3853 ]
  %3719 = phi i32 [ 0, %3709 ], [ %3805, %3853 ]
  %3720 = phi double [ 0.000000e+00, %3709 ], [ %3804, %3853 ]
  %3721 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3710, label %3722, label %3791

3722:                                             ; preds = %3717, %3781
  %3723 = phi i32 [ %3790, %3781 ], [ 0, %3717 ]
  %3724 = phi i64 [ %3732, %3781 ], [ %3714, %3717 ]
  %3725 = phi i64 [ %3789, %3781 ], [ %3713, %3717 ]
  %3726 = phi i32 [ %3787, %3781 ], [ %3721, %3717 ]
  %3727 = sub i32 %3712, %3723
  %3728 = tail call i32 @llvm.smin.i32(i32 %3727, i32 0)
  %3729 = sub i32 %3727, %3728
  %3730 = zext i32 %3729 to i64
  %3731 = add nuw nsw i64 %3730, 1
  %3732 = add nsw i64 %3724, -1
  %3733 = icmp ult i32 %3729, 31
  br i1 %3733, label %3769, label %3734

3734:                                             ; preds = %3722
  %3735 = and i64 %3731, 8589934560
  %3736 = sub i64 %3725, %3735
  br label %3737

3737:                                             ; preds = %3737, %3734
  %3738 = phi i64 [ 0, %3734 ], [ %3761, %3737 ]
  %3739 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3734 ], [ %3757, %3737 ]
  %3740 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3734 ], [ %3758, %3737 ]
  %3741 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3734 ], [ %3759, %3737 ]
  %3742 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3734 ], [ %3760, %3737 ]
  %3743 = sub i64 %3725, %3738
  %3744 = getelementptr inbounds i32, ptr %9, i64 %3743
  %3745 = getelementptr inbounds i32, ptr %3744, i64 -7
  %3746 = load <8 x i32>, ptr %3745, align 4, !tbaa !6
  %3747 = shufflevector <8 x i32> %3746, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3748 = getelementptr inbounds i32, ptr %3744, i64 -15
  %3749 = load <8 x i32>, ptr %3748, align 4, !tbaa !6
  %3750 = shufflevector <8 x i32> %3749, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3751 = getelementptr inbounds i32, ptr %3744, i64 -23
  %3752 = load <8 x i32>, ptr %3751, align 4, !tbaa !6
  %3753 = shufflevector <8 x i32> %3752, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3754 = getelementptr inbounds i32, ptr %3744, i64 -31
  %3755 = load <8 x i32>, ptr %3754, align 4, !tbaa !6
  %3756 = shufflevector <8 x i32> %3755, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3757 = mul <8 x i32> %3747, %3739
  %3758 = mul <8 x i32> %3750, %3740
  %3759 = mul <8 x i32> %3753, %3741
  %3760 = mul <8 x i32> %3756, %3742
  %3761 = add nuw i64 %3738, 32
  %3762 = icmp eq i64 %3761, %3735
  br i1 %3762, label %3763, label %3737, !llvm.loop !1425

3763:                                             ; preds = %3737
  %3764 = mul <8 x i32> %3758, %3757
  %3765 = mul <8 x i32> %3759, %3764
  %3766 = mul <8 x i32> %3760, %3765
  %3767 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3766)
  %3768 = icmp eq i64 %3731, %3735
  br i1 %3768, label %3781, label %3769

3769:                                             ; preds = %3722, %3763
  %3770 = phi i64 [ %3725, %3722 ], [ %3736, %3763 ]
  %3771 = phi i32 [ 1, %3722 ], [ %3767, %3763 ]
  br label %3772

3772:                                             ; preds = %3769, %3772
  %3773 = phi i64 [ %3778, %3772 ], [ %3770, %3769 ]
  %3774 = phi i32 [ %3777, %3772 ], [ %3771, %3769 ]
  %3775 = getelementptr inbounds i32, ptr %9, i64 %3773
  %3776 = load i32, ptr %3775, align 4, !tbaa !6
  %3777 = mul nsw i32 %3776, %3774
  %3778 = add nsw i64 %3773, -1
  %3779 = trunc i64 %3773 to i32
  %3780 = icmp sgt i32 %3779, 0
  br i1 %3780, label %3772, label %3781, !llvm.loop !1426

3781:                                             ; preds = %3772, %3763
  %3782 = phi i32 [ %3767, %3763 ], [ %3777, %3772 ]
  %3783 = and i64 %3732, 4294967295
  %3784 = getelementptr inbounds i32, ptr %6, i64 %3783
  %3785 = load i32, ptr %3784, align 4, !tbaa !6
  %3786 = mul nsw i32 %3785, %3782
  %3787 = add nsw i32 %3786, %3726
  %3788 = icmp sgt i64 %3724, 2
  %3789 = add nsw i64 %3725, -1
  %3790 = add i32 %3723, 1
  br i1 %3788, label %3722, label %3791, !llvm.loop !1427

3791:                                             ; preds = %3781, %3717
  %3792 = phi i32 [ %3721, %3717 ], [ %3787, %3781 ]
  %3793 = sext i32 %3792 to i64
  %3794 = getelementptr inbounds double, ptr %2, i64 %3793
  %3795 = load double, ptr %3794, align 8, !tbaa !19
  %3796 = getelementptr inbounds double, ptr %3684, i64 %3793
  %3797 = load double, ptr %3796, align 8, !tbaa !19
  %3798 = fcmp fast one double %3795, 0.000000e+00
  %3799 = fcmp fast olt double %3718, %3797
  %3800 = select i1 %3798, i1 %3799, i1 false
  br i1 %3800, label %3801, label %3802

3801:                                             ; preds = %3791
  store double %3797, ptr %3686, align 8, !tbaa !19
  br label %3802

3802:                                             ; preds = %3801, %3791
  %3803 = phi double [ %3797, %3801 ], [ %3718, %3791 ]
  %3804 = fadd fast double %3795, %3720
  %3805 = add nuw nsw i32 %3719, 1
  br i1 %3711, label %3806, label %3853

3806:                                             ; preds = %3802
  %3807 = load i32, ptr %4, align 4, !tbaa !6
  %3808 = load i32, ptr %12, align 4, !tbaa !6
  %3809 = add nsw i32 %3808, -1
  %3810 = icmp slt i32 %3807, %3809
  br i1 %3810, label %3830, label %3811

3811:                                             ; preds = %3806
  %3812 = icmp eq i32 %3807, %3809
  br i1 %3812, label %3813, label %3846

3813:                                             ; preds = %3811
  store i32 0, ptr %4, align 4, !tbaa !6
  %3814 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3814, ptr %6, align 4, !tbaa !6
  br i1 %3716, label %3853, label %3815

3815:                                             ; preds = %3813, %3840
  %3816 = phi i64 [ %3844, %3840 ], [ 1, %3813 ]
  %3817 = getelementptr inbounds i32, ptr %4, i64 %3816
  %3818 = load i32, ptr %3817, align 4, !tbaa !6
  %3819 = getelementptr inbounds i32, ptr %12, i64 %3816
  %3820 = load i32, ptr %3819, align 4, !tbaa !6
  %3821 = add nsw i32 %3820, -1
  %3822 = icmp slt i32 %3818, %3821
  br i1 %3822, label %3823, label %3838

3823:                                             ; preds = %3815
  br i1 %3810, label %3830, label %3824

3824:                                             ; preds = %3823
  %3825 = getelementptr inbounds i32, ptr %7, i64 %3816
  %3826 = load i32, ptr %3825, align 4, !tbaa !6
  %3827 = getelementptr inbounds i32, ptr %6, i64 %3816
  %3828 = load i32, ptr %3827, align 4, !tbaa !6
  %3829 = add nsw i32 %3828, %3826
  store i32 %3829, ptr %3827, align 4, !tbaa !6
  br label %3848

3830:                                             ; preds = %3806, %3823
  %3831 = phi i32 [ %3818, %3823 ], [ %3807, %3806 ]
  %3832 = phi ptr [ %3817, %3823 ], [ %4, %3806 ]
  %3833 = phi i64 [ %3816, %3823 ], [ 0, %3806 ]
  %3834 = add nsw i32 %3831, 1
  store i32 %3834, ptr %3832, align 4, !tbaa !6
  %3835 = getelementptr inbounds i32, ptr %7, i64 %3833
  %3836 = load i32, ptr %3835, align 4, !tbaa !6
  %3837 = getelementptr inbounds i32, ptr %6, i64 %3833
  br label %3848

3838:                                             ; preds = %3815
  %3839 = icmp eq i32 %3818, %3821
  br i1 %3839, label %3840, label %3846

3840:                                             ; preds = %3838
  store i32 0, ptr %3817, align 4, !tbaa !6
  %3841 = getelementptr inbounds i32, ptr %8, i64 %3816
  %3842 = load i32, ptr %3841, align 4, !tbaa !6
  %3843 = getelementptr inbounds i32, ptr %6, i64 %3816
  store i32 %3842, ptr %3843, align 4, !tbaa !6
  %3844 = add nuw nsw i64 %3816, 1
  %3845 = icmp eq i64 %3844, %3714
  br i1 %3845, label %3853, label %3815, !llvm.loop !1428

3846:                                             ; preds = %3811, %3838
  %3847 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2003, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5518

3848:                                             ; preds = %3824, %3830
  %3849 = phi ptr [ %3837, %3830 ], [ %3817, %3824 ]
  %3850 = phi i32 [ %3836, %3830 ], [ 1, %3824 ]
  %3851 = load i32, ptr %3849, align 4, !tbaa !6
  %3852 = add nsw i32 %3851, %3850
  store i32 %3852, ptr %3849, align 4, !tbaa !6
  br label %3853

3853:                                             ; preds = %3840, %3848, %3813, %3802
  %3854 = icmp eq i32 %3805, %5
  br i1 %3854, label %5513, label %3717, !llvm.loop !1429

3855:                                             ; preds = %3700, %3992
  %3856 = phi double [ %3687, %3700 ], [ %3940, %3992 ]
  %3857 = phi i32 [ 0, %3700 ], [ %3941, %3992 ]
  %3858 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %3701, label %3859, label %3928

3859:                                             ; preds = %3855, %3918
  %3860 = phi i32 [ %3927, %3918 ], [ 0, %3855 ]
  %3861 = phi i64 [ %3869, %3918 ], [ %3705, %3855 ]
  %3862 = phi i64 [ %3926, %3918 ], [ %3704, %3855 ]
  %3863 = phi i32 [ %3924, %3918 ], [ %3858, %3855 ]
  %3864 = sub i32 %3703, %3860
  %3865 = tail call i32 @llvm.smin.i32(i32 %3864, i32 0)
  %3866 = sub i32 %3864, %3865
  %3867 = zext i32 %3866 to i64
  %3868 = add nuw nsw i64 %3867, 1
  %3869 = add nsw i64 %3861, -1
  %3870 = icmp ult i32 %3866, 31
  br i1 %3870, label %3906, label %3871

3871:                                             ; preds = %3859
  %3872 = and i64 %3868, 8589934560
  %3873 = sub i64 %3862, %3872
  br label %3874

3874:                                             ; preds = %3874, %3871
  %3875 = phi i64 [ 0, %3871 ], [ %3898, %3874 ]
  %3876 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3871 ], [ %3894, %3874 ]
  %3877 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3871 ], [ %3895, %3874 ]
  %3878 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3871 ], [ %3896, %3874 ]
  %3879 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %3871 ], [ %3897, %3874 ]
  %3880 = sub i64 %3862, %3875
  %3881 = getelementptr inbounds i32, ptr %11, i64 %3880
  %3882 = getelementptr inbounds i32, ptr %3881, i64 -7
  %3883 = load <8 x i32>, ptr %3882, align 4, !tbaa !6
  %3884 = shufflevector <8 x i32> %3883, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3885 = getelementptr inbounds i32, ptr %3881, i64 -15
  %3886 = load <8 x i32>, ptr %3885, align 4, !tbaa !6
  %3887 = shufflevector <8 x i32> %3886, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3888 = getelementptr inbounds i32, ptr %3881, i64 -23
  %3889 = load <8 x i32>, ptr %3888, align 4, !tbaa !6
  %3890 = shufflevector <8 x i32> %3889, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3891 = getelementptr inbounds i32, ptr %3881, i64 -31
  %3892 = load <8 x i32>, ptr %3891, align 4, !tbaa !6
  %3893 = shufflevector <8 x i32> %3892, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %3894 = mul <8 x i32> %3884, %3876
  %3895 = mul <8 x i32> %3887, %3877
  %3896 = mul <8 x i32> %3890, %3878
  %3897 = mul <8 x i32> %3893, %3879
  %3898 = add nuw i64 %3875, 32
  %3899 = icmp eq i64 %3898, %3872
  br i1 %3899, label %3900, label %3874, !llvm.loop !1430

3900:                                             ; preds = %3874
  %3901 = mul <8 x i32> %3895, %3894
  %3902 = mul <8 x i32> %3896, %3901
  %3903 = mul <8 x i32> %3897, %3902
  %3904 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %3903)
  %3905 = icmp eq i64 %3868, %3872
  br i1 %3905, label %3918, label %3906

3906:                                             ; preds = %3859, %3900
  %3907 = phi i64 [ %3862, %3859 ], [ %3873, %3900 ]
  %3908 = phi i32 [ 1, %3859 ], [ %3904, %3900 ]
  br label %3909

3909:                                             ; preds = %3906, %3909
  %3910 = phi i64 [ %3915, %3909 ], [ %3907, %3906 ]
  %3911 = phi i32 [ %3914, %3909 ], [ %3908, %3906 ]
  %3912 = getelementptr inbounds i32, ptr %11, i64 %3910
  %3913 = load i32, ptr %3912, align 4, !tbaa !6
  %3914 = mul nsw i32 %3913, %3911
  %3915 = add nsw i64 %3910, -1
  %3916 = trunc i64 %3910 to i32
  %3917 = icmp sgt i32 %3916, 0
  br i1 %3917, label %3909, label %3918, !llvm.loop !1431

3918:                                             ; preds = %3909, %3900
  %3919 = phi i32 [ %3904, %3900 ], [ %3914, %3909 ]
  %3920 = and i64 %3869, 4294967295
  %3921 = getelementptr inbounds i32, ptr %6, i64 %3920
  %3922 = load i32, ptr %3921, align 4, !tbaa !6
  %3923 = mul nsw i32 %3922, %3919
  %3924 = add nsw i32 %3923, %3863
  %3925 = icmp sgt i64 %3861, 2
  %3926 = add nsw i64 %3862, -1
  %3927 = add i32 %3860, 1
  br i1 %3925, label %3859, label %3928, !llvm.loop !1432

3928:                                             ; preds = %3918, %3855
  %3929 = phi i32 [ %3858, %3855 ], [ %3924, %3918 ]
  %3930 = icmp slt i32 %3929, %5
  br i1 %3930, label %3933, label %3931

3931:                                             ; preds = %3928
  %3932 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2003, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5518

3933:                                             ; preds = %3928
  %3934 = sext i32 %3929 to i64
  %3935 = getelementptr inbounds double, ptr %3684, i64 %3934
  %3936 = load double, ptr %3935, align 8, !tbaa !19
  %3937 = fcmp fast olt double %3856, %3936
  br i1 %3937, label %3938, label %3939

3938:                                             ; preds = %3933
  store double %3936, ptr %3686, align 8, !tbaa !19
  br label %3939

3939:                                             ; preds = %3933, %3938
  %3940 = phi double [ %3856, %3933 ], [ %3936, %3938 ]
  %3941 = add nuw nsw i32 %3857, 1
  br i1 %3702, label %3942, label %3992

3942:                                             ; preds = %3939
  %3943 = load i32, ptr %4, align 4, !tbaa !6
  %3944 = load i32, ptr %12, align 4, !tbaa !6
  %3945 = add nsw i32 %3944, -1
  %3946 = icmp slt i32 %3943, %3945
  br i1 %3946, label %3969, label %3947

3947:                                             ; preds = %3942
  %3948 = icmp eq i32 %3943, %3945
  br i1 %3948, label %3949, label %3985

3949:                                             ; preds = %3947
  store i32 0, ptr %4, align 4, !tbaa !6
  %3950 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %3950, ptr %6, align 4, !tbaa !6
  br i1 %3707, label %3992, label %3951

3951:                                             ; preds = %3949, %3979
  %3952 = phi i64 [ %3983, %3979 ], [ 1, %3949 ]
  %3953 = getelementptr inbounds i32, ptr %4, i64 %3952
  %3954 = load i32, ptr %3953, align 4, !tbaa !6
  %3955 = getelementptr inbounds i32, ptr %12, i64 %3952
  %3956 = load i32, ptr %3955, align 4, !tbaa !6
  %3957 = add nsw i32 %3956, -1
  %3958 = icmp slt i32 %3954, %3957
  br i1 %3958, label %3959, label %3977

3959:                                             ; preds = %3951
  br i1 %3946, label %3969, label %3960

3960:                                             ; preds = %3959
  %3961 = shl i64 %3952, 32
  %3962 = add i64 %3961, -4294967296
  %3963 = ashr exact i64 %3962, 32
  %3964 = getelementptr inbounds i32, ptr %7, i64 %3963
  %3965 = load i32, ptr %3964, align 4, !tbaa !6
  %3966 = getelementptr inbounds i32, ptr %6, i64 %3952
  %3967 = load i32, ptr %3966, align 4, !tbaa !6
  %3968 = add nsw i32 %3967, %3965
  store i32 %3968, ptr %3966, align 4, !tbaa !6
  br label %3987

3969:                                             ; preds = %3942, %3959
  %3970 = phi i32 [ %3954, %3959 ], [ %3943, %3942 ]
  %3971 = phi ptr [ %3953, %3959 ], [ %4, %3942 ]
  %3972 = phi i64 [ %3952, %3959 ], [ 0, %3942 ]
  %3973 = add nsw i32 %3970, 1
  store i32 %3973, ptr %3971, align 4, !tbaa !6
  %3974 = getelementptr inbounds i32, ptr %7, i64 %3972
  %3975 = load i32, ptr %3974, align 4, !tbaa !6
  %3976 = getelementptr inbounds i32, ptr %6, i64 %3972
  br label %3987

3977:                                             ; preds = %3951
  %3978 = icmp eq i32 %3954, %3957
  br i1 %3978, label %3979, label %3985

3979:                                             ; preds = %3977
  store i32 0, ptr %3953, align 4, !tbaa !6
  %3980 = getelementptr inbounds i32, ptr %8, i64 %3952
  %3981 = load i32, ptr %3980, align 4, !tbaa !6
  %3982 = getelementptr inbounds i32, ptr %6, i64 %3952
  store i32 %3981, ptr %3982, align 4, !tbaa !6
  %3983 = add nuw nsw i64 %3952, 1
  %3984 = icmp eq i64 %3983, %3705
  br i1 %3984, label %3992, label %3951, !llvm.loop !1433

3985:                                             ; preds = %3947, %3977
  %3986 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2003, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5518

3987:                                             ; preds = %3960, %3969
  %3988 = phi ptr [ %3976, %3969 ], [ %3953, %3960 ]
  %3989 = phi i32 [ %3975, %3969 ], [ 1, %3960 ]
  %3990 = load i32, ptr %3988, align 4, !tbaa !6
  %3991 = add nsw i32 %3990, %3989
  store i32 %3991, ptr %3988, align 4, !tbaa !6
  br label %3992

3992:                                             ; preds = %3979, %3987, %3949, %3939
  %3993 = icmp eq i32 %3941, %5
  br i1 %3993, label %5513, label %3855, !llvm.loop !1434

3994:                                             ; preds = %3693
  %3995 = getelementptr inbounds i32, ptr %3, i64 %19
  %3996 = load i32, ptr %3995, align 4, !tbaa !6
  %3997 = icmp eq i32 %3996, 0
  %3998 = icmp sgt i32 %5, 0
  br i1 %3997, label %4008, label %3999

3999:                                             ; preds = %3994
  br i1 %3998, label %4000, label %5513

4000:                                             ; preds = %3999
  %4001 = icmp sgt i32 %13, 1
  %4002 = icmp sgt i32 %13, 0
  %4003 = add i32 %13, -2
  %4004 = zext i32 %4003 to i64
  %4005 = zext i32 %13 to i64
  %4006 = add nuw i32 %5, 1
  %4007 = icmp eq i32 %13, 1
  br label %4151

4008:                                             ; preds = %3994
  br i1 %3998, label %4009, label %5513

4009:                                             ; preds = %4008
  %4010 = icmp sgt i32 %13, 1
  %4011 = icmp sgt i32 %13, 0
  %4012 = add i32 %13, -2
  %4013 = zext i32 %4012 to i64
  %4014 = zext i32 %13 to i64
  %4015 = add nuw i32 %5, 1
  %4016 = icmp eq i32 %13, 1
  br label %4017

4017:                                             ; preds = %4009, %4149
  %4018 = phi double [ %3687, %4009 ], [ %4099, %4149 ]
  %4019 = phi i32 [ 0, %4009 ], [ %4101, %4149 ]
  %4020 = phi double [ 0.000000e+00, %4009 ], [ %4100, %4149 ]
  %4021 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4010, label %4022, label %4091

4022:                                             ; preds = %4017, %4081
  %4023 = phi i32 [ %4090, %4081 ], [ 0, %4017 ]
  %4024 = phi i64 [ %4032, %4081 ], [ %4014, %4017 ]
  %4025 = phi i64 [ %4089, %4081 ], [ %4013, %4017 ]
  %4026 = phi i32 [ %4087, %4081 ], [ %4021, %4017 ]
  %4027 = sub i32 %4012, %4023
  %4028 = tail call i32 @llvm.smin.i32(i32 %4027, i32 0)
  %4029 = sub i32 %4027, %4028
  %4030 = zext i32 %4029 to i64
  %4031 = add nuw nsw i64 %4030, 1
  %4032 = add nsw i64 %4024, -1
  %4033 = icmp ult i32 %4029, 31
  br i1 %4033, label %4069, label %4034

4034:                                             ; preds = %4022
  %4035 = and i64 %4031, 8589934560
  %4036 = sub i64 %4025, %4035
  br label %4037

4037:                                             ; preds = %4037, %4034
  %4038 = phi i64 [ 0, %4034 ], [ %4061, %4037 ]
  %4039 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4034 ], [ %4057, %4037 ]
  %4040 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4034 ], [ %4058, %4037 ]
  %4041 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4034 ], [ %4059, %4037 ]
  %4042 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4034 ], [ %4060, %4037 ]
  %4043 = sub i64 %4025, %4038
  %4044 = getelementptr inbounds i32, ptr %9, i64 %4043
  %4045 = getelementptr inbounds i32, ptr %4044, i64 -7
  %4046 = load <8 x i32>, ptr %4045, align 4, !tbaa !6
  %4047 = shufflevector <8 x i32> %4046, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4048 = getelementptr inbounds i32, ptr %4044, i64 -15
  %4049 = load <8 x i32>, ptr %4048, align 4, !tbaa !6
  %4050 = shufflevector <8 x i32> %4049, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4051 = getelementptr inbounds i32, ptr %4044, i64 -23
  %4052 = load <8 x i32>, ptr %4051, align 4, !tbaa !6
  %4053 = shufflevector <8 x i32> %4052, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4054 = getelementptr inbounds i32, ptr %4044, i64 -31
  %4055 = load <8 x i32>, ptr %4054, align 4, !tbaa !6
  %4056 = shufflevector <8 x i32> %4055, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4057 = mul <8 x i32> %4047, %4039
  %4058 = mul <8 x i32> %4050, %4040
  %4059 = mul <8 x i32> %4053, %4041
  %4060 = mul <8 x i32> %4056, %4042
  %4061 = add nuw i64 %4038, 32
  %4062 = icmp eq i64 %4061, %4035
  br i1 %4062, label %4063, label %4037, !llvm.loop !1435

4063:                                             ; preds = %4037
  %4064 = mul <8 x i32> %4058, %4057
  %4065 = mul <8 x i32> %4059, %4064
  %4066 = mul <8 x i32> %4060, %4065
  %4067 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4066)
  %4068 = icmp eq i64 %4031, %4035
  br i1 %4068, label %4081, label %4069

4069:                                             ; preds = %4022, %4063
  %4070 = phi i64 [ %4025, %4022 ], [ %4036, %4063 ]
  %4071 = phi i32 [ 1, %4022 ], [ %4067, %4063 ]
  br label %4072

4072:                                             ; preds = %4069, %4072
  %4073 = phi i64 [ %4078, %4072 ], [ %4070, %4069 ]
  %4074 = phi i32 [ %4077, %4072 ], [ %4071, %4069 ]
  %4075 = getelementptr inbounds i32, ptr %9, i64 %4073
  %4076 = load i32, ptr %4075, align 4, !tbaa !6
  %4077 = mul nsw i32 %4076, %4074
  %4078 = add nsw i64 %4073, -1
  %4079 = trunc i64 %4073 to i32
  %4080 = icmp sgt i32 %4079, 0
  br i1 %4080, label %4072, label %4081, !llvm.loop !1436

4081:                                             ; preds = %4072, %4063
  %4082 = phi i32 [ %4067, %4063 ], [ %4077, %4072 ]
  %4083 = and i64 %4032, 4294967295
  %4084 = getelementptr inbounds i32, ptr %6, i64 %4083
  %4085 = load i32, ptr %4084, align 4, !tbaa !6
  %4086 = mul nsw i32 %4085, %4082
  %4087 = add nsw i32 %4086, %4026
  %4088 = icmp sgt i64 %4024, 2
  %4089 = add nsw i64 %4025, -1
  %4090 = add i32 %4023, 1
  br i1 %4088, label %4022, label %4091, !llvm.loop !1437

4091:                                             ; preds = %4081, %4017
  %4092 = phi i32 [ %4021, %4017 ], [ %4087, %4081 ]
  %4093 = sext i32 %4092 to i64
  %4094 = getelementptr inbounds double, ptr %3684, i64 %4093
  %4095 = load double, ptr %4094, align 8, !tbaa !19
  %4096 = fcmp fast olt double %4018, %4095
  br i1 %4096, label %4097, label %4098

4097:                                             ; preds = %4091
  store double %4095, ptr %3686, align 8, !tbaa !19
  br label %4098

4098:                                             ; preds = %4097, %4091
  %4099 = phi double [ %4095, %4097 ], [ %4018, %4091 ]
  %4100 = fadd fast double %4020, 1.000000e+00
  %4101 = add nuw nsw i32 %4019, 1
  br i1 %4011, label %4102, label %4149

4102:                                             ; preds = %4098
  %4103 = load i32, ptr %4, align 4, !tbaa !6
  %4104 = load i32, ptr %12, align 4, !tbaa !6
  %4105 = add nsw i32 %4104, -1
  %4106 = icmp slt i32 %4103, %4105
  br i1 %4106, label %4126, label %4107

4107:                                             ; preds = %4102
  %4108 = icmp eq i32 %4103, %4105
  br i1 %4108, label %4109, label %4142

4109:                                             ; preds = %4107
  store i32 0, ptr %4, align 4, !tbaa !6
  %4110 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4110, ptr %6, align 4, !tbaa !6
  br i1 %4016, label %4149, label %4111

4111:                                             ; preds = %4109, %4136
  %4112 = phi i64 [ %4140, %4136 ], [ 1, %4109 ]
  %4113 = getelementptr inbounds i32, ptr %4, i64 %4112
  %4114 = load i32, ptr %4113, align 4, !tbaa !6
  %4115 = getelementptr inbounds i32, ptr %12, i64 %4112
  %4116 = load i32, ptr %4115, align 4, !tbaa !6
  %4117 = add nsw i32 %4116, -1
  %4118 = icmp slt i32 %4114, %4117
  br i1 %4118, label %4119, label %4134

4119:                                             ; preds = %4111
  br i1 %4106, label %4126, label %4120

4120:                                             ; preds = %4119
  %4121 = getelementptr inbounds i32, ptr %7, i64 %4112
  %4122 = load i32, ptr %4121, align 4, !tbaa !6
  %4123 = getelementptr inbounds i32, ptr %6, i64 %4112
  %4124 = load i32, ptr %4123, align 4, !tbaa !6
  %4125 = add nsw i32 %4124, %4122
  store i32 %4125, ptr %4123, align 4, !tbaa !6
  br label %4144

4126:                                             ; preds = %4102, %4119
  %4127 = phi i32 [ %4114, %4119 ], [ %4103, %4102 ]
  %4128 = phi ptr [ %4113, %4119 ], [ %4, %4102 ]
  %4129 = phi i64 [ %4112, %4119 ], [ 0, %4102 ]
  %4130 = add nsw i32 %4127, 1
  store i32 %4130, ptr %4128, align 4, !tbaa !6
  %4131 = getelementptr inbounds i32, ptr %7, i64 %4129
  %4132 = load i32, ptr %4131, align 4, !tbaa !6
  %4133 = getelementptr inbounds i32, ptr %6, i64 %4129
  br label %4144

4134:                                             ; preds = %4111
  %4135 = icmp eq i32 %4114, %4117
  br i1 %4135, label %4136, label %4142

4136:                                             ; preds = %4134
  store i32 0, ptr %4113, align 4, !tbaa !6
  %4137 = getelementptr inbounds i32, ptr %8, i64 %4112
  %4138 = load i32, ptr %4137, align 4, !tbaa !6
  %4139 = getelementptr inbounds i32, ptr %6, i64 %4112
  store i32 %4138, ptr %4139, align 4, !tbaa !6
  %4140 = add nuw nsw i64 %4112, 1
  %4141 = icmp eq i64 %4140, %4014
  br i1 %4141, label %4149, label %4111, !llvm.loop !1438

4142:                                             ; preds = %4107, %4134
  %4143 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2003, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5518

4144:                                             ; preds = %4120, %4126
  %4145 = phi ptr [ %4133, %4126 ], [ %4113, %4120 ]
  %4146 = phi i32 [ %4132, %4126 ], [ 1, %4120 ]
  %4147 = load i32, ptr %4145, align 4, !tbaa !6
  %4148 = add nsw i32 %4147, %4146
  store i32 %4148, ptr %4145, align 4, !tbaa !6
  br label %4149

4149:                                             ; preds = %4136, %4144, %4109, %4098
  %4150 = icmp eq i32 %4101, %5
  br i1 %4150, label %5513, label %4017, !llvm.loop !1439

4151:                                             ; preds = %4000, %4288
  %4152 = phi double [ %3687, %4000 ], [ %4236, %4288 ]
  %4153 = phi i32 [ 0, %4000 ], [ %4237, %4288 ]
  %4154 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4001, label %4155, label %4224

4155:                                             ; preds = %4151, %4214
  %4156 = phi i32 [ %4223, %4214 ], [ 0, %4151 ]
  %4157 = phi i64 [ %4165, %4214 ], [ %4005, %4151 ]
  %4158 = phi i64 [ %4222, %4214 ], [ %4004, %4151 ]
  %4159 = phi i32 [ %4220, %4214 ], [ %4154, %4151 ]
  %4160 = sub i32 %4003, %4156
  %4161 = tail call i32 @llvm.smin.i32(i32 %4160, i32 0)
  %4162 = sub i32 %4160, %4161
  %4163 = zext i32 %4162 to i64
  %4164 = add nuw nsw i64 %4163, 1
  %4165 = add nsw i64 %4157, -1
  %4166 = icmp ult i32 %4162, 31
  br i1 %4166, label %4202, label %4167

4167:                                             ; preds = %4155
  %4168 = and i64 %4164, 8589934560
  %4169 = sub i64 %4158, %4168
  br label %4170

4170:                                             ; preds = %4170, %4167
  %4171 = phi i64 [ 0, %4167 ], [ %4194, %4170 ]
  %4172 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4167 ], [ %4190, %4170 ]
  %4173 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4167 ], [ %4191, %4170 ]
  %4174 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4167 ], [ %4192, %4170 ]
  %4175 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4167 ], [ %4193, %4170 ]
  %4176 = sub i64 %4158, %4171
  %4177 = getelementptr inbounds i32, ptr %11, i64 %4176
  %4178 = getelementptr inbounds i32, ptr %4177, i64 -7
  %4179 = load <8 x i32>, ptr %4178, align 4, !tbaa !6
  %4180 = shufflevector <8 x i32> %4179, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4181 = getelementptr inbounds i32, ptr %4177, i64 -15
  %4182 = load <8 x i32>, ptr %4181, align 4, !tbaa !6
  %4183 = shufflevector <8 x i32> %4182, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4184 = getelementptr inbounds i32, ptr %4177, i64 -23
  %4185 = load <8 x i32>, ptr %4184, align 4, !tbaa !6
  %4186 = shufflevector <8 x i32> %4185, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4187 = getelementptr inbounds i32, ptr %4177, i64 -31
  %4188 = load <8 x i32>, ptr %4187, align 4, !tbaa !6
  %4189 = shufflevector <8 x i32> %4188, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4190 = mul <8 x i32> %4180, %4172
  %4191 = mul <8 x i32> %4183, %4173
  %4192 = mul <8 x i32> %4186, %4174
  %4193 = mul <8 x i32> %4189, %4175
  %4194 = add nuw i64 %4171, 32
  %4195 = icmp eq i64 %4194, %4168
  br i1 %4195, label %4196, label %4170, !llvm.loop !1440

4196:                                             ; preds = %4170
  %4197 = mul <8 x i32> %4191, %4190
  %4198 = mul <8 x i32> %4192, %4197
  %4199 = mul <8 x i32> %4193, %4198
  %4200 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4199)
  %4201 = icmp eq i64 %4164, %4168
  br i1 %4201, label %4214, label %4202

4202:                                             ; preds = %4155, %4196
  %4203 = phi i64 [ %4158, %4155 ], [ %4169, %4196 ]
  %4204 = phi i32 [ 1, %4155 ], [ %4200, %4196 ]
  br label %4205

4205:                                             ; preds = %4202, %4205
  %4206 = phi i64 [ %4211, %4205 ], [ %4203, %4202 ]
  %4207 = phi i32 [ %4210, %4205 ], [ %4204, %4202 ]
  %4208 = getelementptr inbounds i32, ptr %11, i64 %4206
  %4209 = load i32, ptr %4208, align 4, !tbaa !6
  %4210 = mul nsw i32 %4209, %4207
  %4211 = add nsw i64 %4206, -1
  %4212 = trunc i64 %4206 to i32
  %4213 = icmp sgt i32 %4212, 0
  br i1 %4213, label %4205, label %4214, !llvm.loop !1441

4214:                                             ; preds = %4205, %4196
  %4215 = phi i32 [ %4200, %4196 ], [ %4210, %4205 ]
  %4216 = and i64 %4165, 4294967295
  %4217 = getelementptr inbounds i32, ptr %6, i64 %4216
  %4218 = load i32, ptr %4217, align 4, !tbaa !6
  %4219 = mul nsw i32 %4218, %4215
  %4220 = add nsw i32 %4219, %4159
  %4221 = icmp sgt i64 %4157, 2
  %4222 = add nsw i64 %4158, -1
  %4223 = add i32 %4156, 1
  br i1 %4221, label %4155, label %4224, !llvm.loop !1442

4224:                                             ; preds = %4214, %4151
  %4225 = phi i32 [ %4154, %4151 ], [ %4220, %4214 ]
  %4226 = icmp slt i32 %4225, %5
  br i1 %4226, label %4229, label %4227

4227:                                             ; preds = %4224
  %4228 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2003, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5518

4229:                                             ; preds = %4224
  %4230 = sext i32 %4225 to i64
  %4231 = getelementptr inbounds double, ptr %3684, i64 %4230
  %4232 = load double, ptr %4231, align 8, !tbaa !19
  %4233 = fcmp fast olt double %4152, %4232
  br i1 %4233, label %4234, label %4235

4234:                                             ; preds = %4229
  store double %4232, ptr %3686, align 8, !tbaa !19
  br label %4235

4235:                                             ; preds = %4234, %4229
  %4236 = phi double [ %4232, %4234 ], [ %4152, %4229 ]
  %4237 = add nuw nsw i32 %4153, 1
  br i1 %4002, label %4238, label %4288

4238:                                             ; preds = %4235
  %4239 = load i32, ptr %4, align 4, !tbaa !6
  %4240 = load i32, ptr %12, align 4, !tbaa !6
  %4241 = add nsw i32 %4240, -1
  %4242 = icmp slt i32 %4239, %4241
  br i1 %4242, label %4265, label %4243

4243:                                             ; preds = %4238
  %4244 = icmp eq i32 %4239, %4241
  br i1 %4244, label %4245, label %4281

4245:                                             ; preds = %4243
  store i32 0, ptr %4, align 4, !tbaa !6
  %4246 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4246, ptr %6, align 4, !tbaa !6
  br i1 %4007, label %4288, label %4247

4247:                                             ; preds = %4245, %4275
  %4248 = phi i64 [ %4279, %4275 ], [ 1, %4245 ]
  %4249 = getelementptr inbounds i32, ptr %4, i64 %4248
  %4250 = load i32, ptr %4249, align 4, !tbaa !6
  %4251 = getelementptr inbounds i32, ptr %12, i64 %4248
  %4252 = load i32, ptr %4251, align 4, !tbaa !6
  %4253 = add nsw i32 %4252, -1
  %4254 = icmp slt i32 %4250, %4253
  br i1 %4254, label %4255, label %4273

4255:                                             ; preds = %4247
  br i1 %4242, label %4265, label %4256

4256:                                             ; preds = %4255
  %4257 = shl i64 %4248, 32
  %4258 = add i64 %4257, -4294967296
  %4259 = ashr exact i64 %4258, 32
  %4260 = getelementptr inbounds i32, ptr %7, i64 %4259
  %4261 = load i32, ptr %4260, align 4, !tbaa !6
  %4262 = getelementptr inbounds i32, ptr %6, i64 %4248
  %4263 = load i32, ptr %4262, align 4, !tbaa !6
  %4264 = add nsw i32 %4263, %4261
  store i32 %4264, ptr %4262, align 4, !tbaa !6
  br label %4283

4265:                                             ; preds = %4238, %4255
  %4266 = phi i32 [ %4250, %4255 ], [ %4239, %4238 ]
  %4267 = phi ptr [ %4249, %4255 ], [ %4, %4238 ]
  %4268 = phi i64 [ %4248, %4255 ], [ 0, %4238 ]
  %4269 = add nsw i32 %4266, 1
  store i32 %4269, ptr %4267, align 4, !tbaa !6
  %4270 = getelementptr inbounds i32, ptr %7, i64 %4268
  %4271 = load i32, ptr %4270, align 4, !tbaa !6
  %4272 = getelementptr inbounds i32, ptr %6, i64 %4268
  br label %4283

4273:                                             ; preds = %4247
  %4274 = icmp eq i32 %4250, %4253
  br i1 %4274, label %4275, label %4281

4275:                                             ; preds = %4273
  store i32 0, ptr %4249, align 4, !tbaa !6
  %4276 = getelementptr inbounds i32, ptr %8, i64 %4248
  %4277 = load i32, ptr %4276, align 4, !tbaa !6
  %4278 = getelementptr inbounds i32, ptr %6, i64 %4248
  store i32 %4277, ptr %4278, align 4, !tbaa !6
  %4279 = add nuw nsw i64 %4248, 1
  %4280 = icmp eq i64 %4279, %4005
  br i1 %4280, label %4288, label %4247, !llvm.loop !1443

4281:                                             ; preds = %4243, %4273
  %4282 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2003, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5518

4283:                                             ; preds = %4256, %4265
  %4284 = phi ptr [ %4272, %4265 ], [ %4249, %4256 ]
  %4285 = phi i32 [ %4271, %4265 ], [ 1, %4256 ]
  %4286 = load i32, ptr %4284, align 4, !tbaa !6
  %4287 = add nsw i32 %4286, %4285
  store i32 %4287, ptr %4284, align 4, !tbaa !6
  br label %4288

4288:                                             ; preds = %4275, %4283, %4245, %4235
  %4289 = icmp eq i32 %4237, %5
  br i1 %4289, label %5513, label %4151, !llvm.loop !1444

4290:                                             ; preds = %3693
  %4291 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2003, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5513

4292:                                             ; preds = %18
  %4293 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4294 = load ptr, ptr %4293, align 8, !tbaa !10
  %4295 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4296 = load ptr, ptr %4295, align 8, !tbaa !10
  %4297 = load double, ptr %4294, align 8, !tbaa !19
  %4298 = fptrunc double %4297 to float
  store float %4298, ptr %4296, align 4, !tbaa !163
  %4299 = icmp eq i32 %13, 0
  br i1 %4299, label %5513, label %4300

4300:                                             ; preds = %4292
  switch i32 %1, label %4901 [
    i32 1, label %4301
    i32 0, label %4603
  ]

4301:                                             ; preds = %4300
  %4302 = getelementptr inbounds i32, ptr %3, i64 %19
  %4303 = load i32, ptr %4302, align 4, !tbaa !6
  %4304 = icmp eq i32 %4303, 0
  %4305 = icmp sgt i32 %5, 0
  br i1 %4304, label %4315, label %4306

4306:                                             ; preds = %4301
  br i1 %4305, label %4307, label %5513

4307:                                             ; preds = %4306
  %4308 = icmp sgt i32 %13, 1
  %4309 = icmp sgt i32 %13, 0
  %4310 = add i32 %13, -2
  %4311 = zext i32 %4310 to i64
  %4312 = zext i32 %13 to i64
  %4313 = add nuw i32 %5, 1
  %4314 = icmp eq i32 %13, 1
  br label %4463

4315:                                             ; preds = %4301
  br i1 %4305, label %4316, label %5513

4316:                                             ; preds = %4315
  %4317 = icmp sgt i32 %13, 1
  %4318 = icmp sgt i32 %13, 0
  %4319 = add i32 %13, -2
  %4320 = zext i32 %4319 to i64
  %4321 = zext i32 %13 to i64
  %4322 = add nuw i32 %5, 1
  %4323 = icmp eq i32 %13, 1
  br label %4324

4324:                                             ; preds = %4316, %4461
  %4325 = phi float [ %4298, %4316 ], [ %4411, %4461 ]
  %4326 = phi i32 [ 0, %4316 ], [ %4413, %4461 ]
  %4327 = phi double [ 0.000000e+00, %4316 ], [ %4412, %4461 ]
  %4328 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4317, label %4329, label %4398

4329:                                             ; preds = %4324, %4388
  %4330 = phi i32 [ %4397, %4388 ], [ 0, %4324 ]
  %4331 = phi i64 [ %4339, %4388 ], [ %4321, %4324 ]
  %4332 = phi i64 [ %4396, %4388 ], [ %4320, %4324 ]
  %4333 = phi i32 [ %4394, %4388 ], [ %4328, %4324 ]
  %4334 = sub i32 %4319, %4330
  %4335 = tail call i32 @llvm.smin.i32(i32 %4334, i32 0)
  %4336 = sub i32 %4334, %4335
  %4337 = zext i32 %4336 to i64
  %4338 = add nuw nsw i64 %4337, 1
  %4339 = add nsw i64 %4331, -1
  %4340 = icmp ult i32 %4336, 31
  br i1 %4340, label %4376, label %4341

4341:                                             ; preds = %4329
  %4342 = and i64 %4338, 8589934560
  %4343 = sub i64 %4332, %4342
  br label %4344

4344:                                             ; preds = %4344, %4341
  %4345 = phi i64 [ 0, %4341 ], [ %4368, %4344 ]
  %4346 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4341 ], [ %4364, %4344 ]
  %4347 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4341 ], [ %4365, %4344 ]
  %4348 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4341 ], [ %4366, %4344 ]
  %4349 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4341 ], [ %4367, %4344 ]
  %4350 = sub i64 %4332, %4345
  %4351 = getelementptr inbounds i32, ptr %9, i64 %4350
  %4352 = getelementptr inbounds i32, ptr %4351, i64 -7
  %4353 = load <8 x i32>, ptr %4352, align 4, !tbaa !6
  %4354 = shufflevector <8 x i32> %4353, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4355 = getelementptr inbounds i32, ptr %4351, i64 -15
  %4356 = load <8 x i32>, ptr %4355, align 4, !tbaa !6
  %4357 = shufflevector <8 x i32> %4356, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4358 = getelementptr inbounds i32, ptr %4351, i64 -23
  %4359 = load <8 x i32>, ptr %4358, align 4, !tbaa !6
  %4360 = shufflevector <8 x i32> %4359, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4361 = getelementptr inbounds i32, ptr %4351, i64 -31
  %4362 = load <8 x i32>, ptr %4361, align 4, !tbaa !6
  %4363 = shufflevector <8 x i32> %4362, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4364 = mul <8 x i32> %4354, %4346
  %4365 = mul <8 x i32> %4357, %4347
  %4366 = mul <8 x i32> %4360, %4348
  %4367 = mul <8 x i32> %4363, %4349
  %4368 = add nuw i64 %4345, 32
  %4369 = icmp eq i64 %4368, %4342
  br i1 %4369, label %4370, label %4344, !llvm.loop !1445

4370:                                             ; preds = %4344
  %4371 = mul <8 x i32> %4365, %4364
  %4372 = mul <8 x i32> %4366, %4371
  %4373 = mul <8 x i32> %4367, %4372
  %4374 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4373)
  %4375 = icmp eq i64 %4338, %4342
  br i1 %4375, label %4388, label %4376

4376:                                             ; preds = %4329, %4370
  %4377 = phi i64 [ %4332, %4329 ], [ %4343, %4370 ]
  %4378 = phi i32 [ 1, %4329 ], [ %4374, %4370 ]
  br label %4379

4379:                                             ; preds = %4376, %4379
  %4380 = phi i64 [ %4385, %4379 ], [ %4377, %4376 ]
  %4381 = phi i32 [ %4384, %4379 ], [ %4378, %4376 ]
  %4382 = getelementptr inbounds i32, ptr %9, i64 %4380
  %4383 = load i32, ptr %4382, align 4, !tbaa !6
  %4384 = mul nsw i32 %4383, %4381
  %4385 = add nsw i64 %4380, -1
  %4386 = trunc i64 %4380 to i32
  %4387 = icmp sgt i32 %4386, 0
  br i1 %4387, label %4379, label %4388, !llvm.loop !1446

4388:                                             ; preds = %4379, %4370
  %4389 = phi i32 [ %4374, %4370 ], [ %4384, %4379 ]
  %4390 = and i64 %4339, 4294967295
  %4391 = getelementptr inbounds i32, ptr %6, i64 %4390
  %4392 = load i32, ptr %4391, align 4, !tbaa !6
  %4393 = mul nsw i32 %4392, %4389
  %4394 = add nsw i32 %4393, %4333
  %4395 = icmp sgt i64 %4331, 2
  %4396 = add nsw i64 %4332, -1
  %4397 = add i32 %4330, 1
  br i1 %4395, label %4329, label %4398, !llvm.loop !1447

4398:                                             ; preds = %4388, %4324
  %4399 = phi i32 [ %4328, %4324 ], [ %4394, %4388 ]
  %4400 = sext i32 %4399 to i64
  %4401 = getelementptr inbounds double, ptr %2, i64 %4400
  %4402 = load double, ptr %4401, align 8, !tbaa !19
  %4403 = getelementptr inbounds double, ptr %4294, i64 %4400
  %4404 = load double, ptr %4403, align 8, !tbaa !19
  %4405 = fptrunc double %4404 to float
  %4406 = fcmp fast one double %4402, 0.000000e+00
  %4407 = fcmp fast olt float %4325, %4405
  %4408 = select i1 %4406, i1 %4407, i1 false
  br i1 %4408, label %4409, label %4410

4409:                                             ; preds = %4398
  store float %4405, ptr %4296, align 4, !tbaa !163
  br label %4410

4410:                                             ; preds = %4409, %4398
  %4411 = phi float [ %4405, %4409 ], [ %4325, %4398 ]
  %4412 = fadd fast double %4402, %4327
  %4413 = add nuw nsw i32 %4326, 1
  br i1 %4318, label %4414, label %4461

4414:                                             ; preds = %4410
  %4415 = load i32, ptr %4, align 4, !tbaa !6
  %4416 = load i32, ptr %12, align 4, !tbaa !6
  %4417 = add nsw i32 %4416, -1
  %4418 = icmp slt i32 %4415, %4417
  br i1 %4418, label %4438, label %4419

4419:                                             ; preds = %4414
  %4420 = icmp eq i32 %4415, %4417
  br i1 %4420, label %4421, label %4454

4421:                                             ; preds = %4419
  store i32 0, ptr %4, align 4, !tbaa !6
  %4422 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4422, ptr %6, align 4, !tbaa !6
  br i1 %4323, label %4461, label %4423

4423:                                             ; preds = %4421, %4448
  %4424 = phi i64 [ %4452, %4448 ], [ 1, %4421 ]
  %4425 = getelementptr inbounds i32, ptr %4, i64 %4424
  %4426 = load i32, ptr %4425, align 4, !tbaa !6
  %4427 = getelementptr inbounds i32, ptr %12, i64 %4424
  %4428 = load i32, ptr %4427, align 4, !tbaa !6
  %4429 = add nsw i32 %4428, -1
  %4430 = icmp slt i32 %4426, %4429
  br i1 %4430, label %4431, label %4446

4431:                                             ; preds = %4423
  br i1 %4418, label %4438, label %4432

4432:                                             ; preds = %4431
  %4433 = getelementptr inbounds i32, ptr %7, i64 %4424
  %4434 = load i32, ptr %4433, align 4, !tbaa !6
  %4435 = getelementptr inbounds i32, ptr %6, i64 %4424
  %4436 = load i32, ptr %4435, align 4, !tbaa !6
  %4437 = add nsw i32 %4436, %4434
  store i32 %4437, ptr %4435, align 4, !tbaa !6
  br label %4456

4438:                                             ; preds = %4414, %4431
  %4439 = phi i32 [ %4426, %4431 ], [ %4415, %4414 ]
  %4440 = phi ptr [ %4425, %4431 ], [ %4, %4414 ]
  %4441 = phi i64 [ %4424, %4431 ], [ 0, %4414 ]
  %4442 = add nsw i32 %4439, 1
  store i32 %4442, ptr %4440, align 4, !tbaa !6
  %4443 = getelementptr inbounds i32, ptr %7, i64 %4441
  %4444 = load i32, ptr %4443, align 4, !tbaa !6
  %4445 = getelementptr inbounds i32, ptr %6, i64 %4441
  br label %4456

4446:                                             ; preds = %4423
  %4447 = icmp eq i32 %4426, %4429
  br i1 %4447, label %4448, label %4454

4448:                                             ; preds = %4446
  store i32 0, ptr %4425, align 4, !tbaa !6
  %4449 = getelementptr inbounds i32, ptr %8, i64 %4424
  %4450 = load i32, ptr %4449, align 4, !tbaa !6
  %4451 = getelementptr inbounds i32, ptr %6, i64 %4424
  store i32 %4450, ptr %4451, align 4, !tbaa !6
  %4452 = add nuw nsw i64 %4424, 1
  %4453 = icmp eq i64 %4452, %4321
  br i1 %4453, label %4461, label %4423, !llvm.loop !1448

4454:                                             ; preds = %4419, %4446
  %4455 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2007, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5518

4456:                                             ; preds = %4432, %4438
  %4457 = phi ptr [ %4445, %4438 ], [ %4425, %4432 ]
  %4458 = phi i32 [ %4444, %4438 ], [ 1, %4432 ]
  %4459 = load i32, ptr %4457, align 4, !tbaa !6
  %4460 = add nsw i32 %4459, %4458
  store i32 %4460, ptr %4457, align 4, !tbaa !6
  br label %4461

4461:                                             ; preds = %4448, %4456, %4421, %4410
  %4462 = icmp eq i32 %4413, %5
  br i1 %4462, label %5513, label %4324, !llvm.loop !1449

4463:                                             ; preds = %4307, %4601
  %4464 = phi float [ %4298, %4307 ], [ %4549, %4601 ]
  %4465 = phi i32 [ 0, %4307 ], [ %4550, %4601 ]
  %4466 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4308, label %4467, label %4536

4467:                                             ; preds = %4463, %4526
  %4468 = phi i32 [ %4535, %4526 ], [ 0, %4463 ]
  %4469 = phi i64 [ %4477, %4526 ], [ %4312, %4463 ]
  %4470 = phi i64 [ %4534, %4526 ], [ %4311, %4463 ]
  %4471 = phi i32 [ %4532, %4526 ], [ %4466, %4463 ]
  %4472 = sub i32 %4310, %4468
  %4473 = tail call i32 @llvm.smin.i32(i32 %4472, i32 0)
  %4474 = sub i32 %4472, %4473
  %4475 = zext i32 %4474 to i64
  %4476 = add nuw nsw i64 %4475, 1
  %4477 = add nsw i64 %4469, -1
  %4478 = icmp ult i32 %4474, 31
  br i1 %4478, label %4514, label %4479

4479:                                             ; preds = %4467
  %4480 = and i64 %4476, 8589934560
  %4481 = sub i64 %4470, %4480
  br label %4482

4482:                                             ; preds = %4482, %4479
  %4483 = phi i64 [ 0, %4479 ], [ %4506, %4482 ]
  %4484 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4479 ], [ %4502, %4482 ]
  %4485 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4479 ], [ %4503, %4482 ]
  %4486 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4479 ], [ %4504, %4482 ]
  %4487 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4479 ], [ %4505, %4482 ]
  %4488 = sub i64 %4470, %4483
  %4489 = getelementptr inbounds i32, ptr %11, i64 %4488
  %4490 = getelementptr inbounds i32, ptr %4489, i64 -7
  %4491 = load <8 x i32>, ptr %4490, align 4, !tbaa !6
  %4492 = shufflevector <8 x i32> %4491, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4493 = getelementptr inbounds i32, ptr %4489, i64 -15
  %4494 = load <8 x i32>, ptr %4493, align 4, !tbaa !6
  %4495 = shufflevector <8 x i32> %4494, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4496 = getelementptr inbounds i32, ptr %4489, i64 -23
  %4497 = load <8 x i32>, ptr %4496, align 4, !tbaa !6
  %4498 = shufflevector <8 x i32> %4497, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4499 = getelementptr inbounds i32, ptr %4489, i64 -31
  %4500 = load <8 x i32>, ptr %4499, align 4, !tbaa !6
  %4501 = shufflevector <8 x i32> %4500, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4502 = mul <8 x i32> %4492, %4484
  %4503 = mul <8 x i32> %4495, %4485
  %4504 = mul <8 x i32> %4498, %4486
  %4505 = mul <8 x i32> %4501, %4487
  %4506 = add nuw i64 %4483, 32
  %4507 = icmp eq i64 %4506, %4480
  br i1 %4507, label %4508, label %4482, !llvm.loop !1450

4508:                                             ; preds = %4482
  %4509 = mul <8 x i32> %4503, %4502
  %4510 = mul <8 x i32> %4504, %4509
  %4511 = mul <8 x i32> %4505, %4510
  %4512 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4511)
  %4513 = icmp eq i64 %4476, %4480
  br i1 %4513, label %4526, label %4514

4514:                                             ; preds = %4467, %4508
  %4515 = phi i64 [ %4470, %4467 ], [ %4481, %4508 ]
  %4516 = phi i32 [ 1, %4467 ], [ %4512, %4508 ]
  br label %4517

4517:                                             ; preds = %4514, %4517
  %4518 = phi i64 [ %4523, %4517 ], [ %4515, %4514 ]
  %4519 = phi i32 [ %4522, %4517 ], [ %4516, %4514 ]
  %4520 = getelementptr inbounds i32, ptr %11, i64 %4518
  %4521 = load i32, ptr %4520, align 4, !tbaa !6
  %4522 = mul nsw i32 %4521, %4519
  %4523 = add nsw i64 %4518, -1
  %4524 = trunc i64 %4518 to i32
  %4525 = icmp sgt i32 %4524, 0
  br i1 %4525, label %4517, label %4526, !llvm.loop !1451

4526:                                             ; preds = %4517, %4508
  %4527 = phi i32 [ %4512, %4508 ], [ %4522, %4517 ]
  %4528 = and i64 %4477, 4294967295
  %4529 = getelementptr inbounds i32, ptr %6, i64 %4528
  %4530 = load i32, ptr %4529, align 4, !tbaa !6
  %4531 = mul nsw i32 %4530, %4527
  %4532 = add nsw i32 %4531, %4471
  %4533 = icmp sgt i64 %4469, 2
  %4534 = add nsw i64 %4470, -1
  %4535 = add i32 %4468, 1
  br i1 %4533, label %4467, label %4536, !llvm.loop !1452

4536:                                             ; preds = %4526, %4463
  %4537 = phi i32 [ %4466, %4463 ], [ %4532, %4526 ]
  %4538 = icmp slt i32 %4537, %5
  br i1 %4538, label %4541, label %4539

4539:                                             ; preds = %4536
  %4540 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2007, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5518

4541:                                             ; preds = %4536
  %4542 = sext i32 %4537 to i64
  %4543 = getelementptr inbounds double, ptr %4294, i64 %4542
  %4544 = load double, ptr %4543, align 8, !tbaa !19
  %4545 = fptrunc double %4544 to float
  %4546 = fcmp fast olt float %4464, %4545
  br i1 %4546, label %4547, label %4548

4547:                                             ; preds = %4541
  store float %4545, ptr %4296, align 4, !tbaa !163
  br label %4548

4548:                                             ; preds = %4541, %4547
  %4549 = phi float [ %4464, %4541 ], [ %4545, %4547 ]
  %4550 = add nuw nsw i32 %4465, 1
  br i1 %4309, label %4551, label %4601

4551:                                             ; preds = %4548
  %4552 = load i32, ptr %4, align 4, !tbaa !6
  %4553 = load i32, ptr %12, align 4, !tbaa !6
  %4554 = add nsw i32 %4553, -1
  %4555 = icmp slt i32 %4552, %4554
  br i1 %4555, label %4578, label %4556

4556:                                             ; preds = %4551
  %4557 = icmp eq i32 %4552, %4554
  br i1 %4557, label %4558, label %4594

4558:                                             ; preds = %4556
  store i32 0, ptr %4, align 4, !tbaa !6
  %4559 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4559, ptr %6, align 4, !tbaa !6
  br i1 %4314, label %4601, label %4560

4560:                                             ; preds = %4558, %4588
  %4561 = phi i64 [ %4592, %4588 ], [ 1, %4558 ]
  %4562 = getelementptr inbounds i32, ptr %4, i64 %4561
  %4563 = load i32, ptr %4562, align 4, !tbaa !6
  %4564 = getelementptr inbounds i32, ptr %12, i64 %4561
  %4565 = load i32, ptr %4564, align 4, !tbaa !6
  %4566 = add nsw i32 %4565, -1
  %4567 = icmp slt i32 %4563, %4566
  br i1 %4567, label %4568, label %4586

4568:                                             ; preds = %4560
  br i1 %4555, label %4578, label %4569

4569:                                             ; preds = %4568
  %4570 = shl i64 %4561, 32
  %4571 = add i64 %4570, -4294967296
  %4572 = ashr exact i64 %4571, 32
  %4573 = getelementptr inbounds i32, ptr %7, i64 %4572
  %4574 = load i32, ptr %4573, align 4, !tbaa !6
  %4575 = getelementptr inbounds i32, ptr %6, i64 %4561
  %4576 = load i32, ptr %4575, align 4, !tbaa !6
  %4577 = add nsw i32 %4576, %4574
  store i32 %4577, ptr %4575, align 4, !tbaa !6
  br label %4596

4578:                                             ; preds = %4551, %4568
  %4579 = phi i32 [ %4563, %4568 ], [ %4552, %4551 ]
  %4580 = phi ptr [ %4562, %4568 ], [ %4, %4551 ]
  %4581 = phi i64 [ %4561, %4568 ], [ 0, %4551 ]
  %4582 = add nsw i32 %4579, 1
  store i32 %4582, ptr %4580, align 4, !tbaa !6
  %4583 = getelementptr inbounds i32, ptr %7, i64 %4581
  %4584 = load i32, ptr %4583, align 4, !tbaa !6
  %4585 = getelementptr inbounds i32, ptr %6, i64 %4581
  br label %4596

4586:                                             ; preds = %4560
  %4587 = icmp eq i32 %4563, %4566
  br i1 %4587, label %4588, label %4594

4588:                                             ; preds = %4586
  store i32 0, ptr %4562, align 4, !tbaa !6
  %4589 = getelementptr inbounds i32, ptr %8, i64 %4561
  %4590 = load i32, ptr %4589, align 4, !tbaa !6
  %4591 = getelementptr inbounds i32, ptr %6, i64 %4561
  store i32 %4590, ptr %4591, align 4, !tbaa !6
  %4592 = add nuw nsw i64 %4561, 1
  %4593 = icmp eq i64 %4592, %4312
  br i1 %4593, label %4601, label %4560, !llvm.loop !1453

4594:                                             ; preds = %4556, %4586
  %4595 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2007, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5518

4596:                                             ; preds = %4569, %4578
  %4597 = phi ptr [ %4585, %4578 ], [ %4562, %4569 ]
  %4598 = phi i32 [ %4584, %4578 ], [ 1, %4569 ]
  %4599 = load i32, ptr %4597, align 4, !tbaa !6
  %4600 = add nsw i32 %4599, %4598
  store i32 %4600, ptr %4597, align 4, !tbaa !6
  br label %4601

4601:                                             ; preds = %4588, %4596, %4558, %4548
  %4602 = icmp eq i32 %4550, %5
  br i1 %4602, label %5513, label %4463, !llvm.loop !1454

4603:                                             ; preds = %4300
  %4604 = getelementptr inbounds i32, ptr %3, i64 %19
  %4605 = load i32, ptr %4604, align 4, !tbaa !6
  %4606 = icmp eq i32 %4605, 0
  %4607 = icmp sgt i32 %5, 0
  br i1 %4606, label %4617, label %4608

4608:                                             ; preds = %4603
  br i1 %4607, label %4609, label %5513

4609:                                             ; preds = %4608
  %4610 = icmp sgt i32 %13, 1
  %4611 = icmp sgt i32 %13, 0
  %4612 = add i32 %13, -2
  %4613 = zext i32 %4612 to i64
  %4614 = zext i32 %13 to i64
  %4615 = add nuw i32 %5, 1
  %4616 = icmp eq i32 %13, 1
  br label %4761

4617:                                             ; preds = %4603
  br i1 %4607, label %4618, label %5513

4618:                                             ; preds = %4617
  %4619 = icmp sgt i32 %13, 1
  %4620 = icmp sgt i32 %13, 0
  %4621 = add i32 %13, -2
  %4622 = zext i32 %4621 to i64
  %4623 = zext i32 %13 to i64
  %4624 = add nuw i32 %5, 1
  %4625 = icmp eq i32 %13, 1
  br label %4626

4626:                                             ; preds = %4618, %4759
  %4627 = phi float [ %4298, %4618 ], [ %4709, %4759 ]
  %4628 = phi i32 [ 0, %4618 ], [ %4711, %4759 ]
  %4629 = phi double [ 0.000000e+00, %4618 ], [ %4710, %4759 ]
  %4630 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4619, label %4631, label %4700

4631:                                             ; preds = %4626, %4690
  %4632 = phi i32 [ %4699, %4690 ], [ 0, %4626 ]
  %4633 = phi i64 [ %4641, %4690 ], [ %4623, %4626 ]
  %4634 = phi i64 [ %4698, %4690 ], [ %4622, %4626 ]
  %4635 = phi i32 [ %4696, %4690 ], [ %4630, %4626 ]
  %4636 = sub i32 %4621, %4632
  %4637 = tail call i32 @llvm.smin.i32(i32 %4636, i32 0)
  %4638 = sub i32 %4636, %4637
  %4639 = zext i32 %4638 to i64
  %4640 = add nuw nsw i64 %4639, 1
  %4641 = add nsw i64 %4633, -1
  %4642 = icmp ult i32 %4638, 31
  br i1 %4642, label %4678, label %4643

4643:                                             ; preds = %4631
  %4644 = and i64 %4640, 8589934560
  %4645 = sub i64 %4634, %4644
  br label %4646

4646:                                             ; preds = %4646, %4643
  %4647 = phi i64 [ 0, %4643 ], [ %4670, %4646 ]
  %4648 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4643 ], [ %4666, %4646 ]
  %4649 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4643 ], [ %4667, %4646 ]
  %4650 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4643 ], [ %4668, %4646 ]
  %4651 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4643 ], [ %4669, %4646 ]
  %4652 = sub i64 %4634, %4647
  %4653 = getelementptr inbounds i32, ptr %9, i64 %4652
  %4654 = getelementptr inbounds i32, ptr %4653, i64 -7
  %4655 = load <8 x i32>, ptr %4654, align 4, !tbaa !6
  %4656 = shufflevector <8 x i32> %4655, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4657 = getelementptr inbounds i32, ptr %4653, i64 -15
  %4658 = load <8 x i32>, ptr %4657, align 4, !tbaa !6
  %4659 = shufflevector <8 x i32> %4658, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4660 = getelementptr inbounds i32, ptr %4653, i64 -23
  %4661 = load <8 x i32>, ptr %4660, align 4, !tbaa !6
  %4662 = shufflevector <8 x i32> %4661, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4663 = getelementptr inbounds i32, ptr %4653, i64 -31
  %4664 = load <8 x i32>, ptr %4663, align 4, !tbaa !6
  %4665 = shufflevector <8 x i32> %4664, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4666 = mul <8 x i32> %4656, %4648
  %4667 = mul <8 x i32> %4659, %4649
  %4668 = mul <8 x i32> %4662, %4650
  %4669 = mul <8 x i32> %4665, %4651
  %4670 = add nuw i64 %4647, 32
  %4671 = icmp eq i64 %4670, %4644
  br i1 %4671, label %4672, label %4646, !llvm.loop !1455

4672:                                             ; preds = %4646
  %4673 = mul <8 x i32> %4667, %4666
  %4674 = mul <8 x i32> %4668, %4673
  %4675 = mul <8 x i32> %4669, %4674
  %4676 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4675)
  %4677 = icmp eq i64 %4640, %4644
  br i1 %4677, label %4690, label %4678

4678:                                             ; preds = %4631, %4672
  %4679 = phi i64 [ %4634, %4631 ], [ %4645, %4672 ]
  %4680 = phi i32 [ 1, %4631 ], [ %4676, %4672 ]
  br label %4681

4681:                                             ; preds = %4678, %4681
  %4682 = phi i64 [ %4687, %4681 ], [ %4679, %4678 ]
  %4683 = phi i32 [ %4686, %4681 ], [ %4680, %4678 ]
  %4684 = getelementptr inbounds i32, ptr %9, i64 %4682
  %4685 = load i32, ptr %4684, align 4, !tbaa !6
  %4686 = mul nsw i32 %4685, %4683
  %4687 = add nsw i64 %4682, -1
  %4688 = trunc i64 %4682 to i32
  %4689 = icmp sgt i32 %4688, 0
  br i1 %4689, label %4681, label %4690, !llvm.loop !1456

4690:                                             ; preds = %4681, %4672
  %4691 = phi i32 [ %4676, %4672 ], [ %4686, %4681 ]
  %4692 = and i64 %4641, 4294967295
  %4693 = getelementptr inbounds i32, ptr %6, i64 %4692
  %4694 = load i32, ptr %4693, align 4, !tbaa !6
  %4695 = mul nsw i32 %4694, %4691
  %4696 = add nsw i32 %4695, %4635
  %4697 = icmp sgt i64 %4633, 2
  %4698 = add nsw i64 %4634, -1
  %4699 = add i32 %4632, 1
  br i1 %4697, label %4631, label %4700, !llvm.loop !1457

4700:                                             ; preds = %4690, %4626
  %4701 = phi i32 [ %4630, %4626 ], [ %4696, %4690 ]
  %4702 = sext i32 %4701 to i64
  %4703 = getelementptr inbounds double, ptr %4294, i64 %4702
  %4704 = load double, ptr %4703, align 8, !tbaa !19
  %4705 = fptrunc double %4704 to float
  %4706 = fcmp fast olt float %4627, %4705
  br i1 %4706, label %4707, label %4708

4707:                                             ; preds = %4700
  store float %4705, ptr %4296, align 4, !tbaa !163
  br label %4708

4708:                                             ; preds = %4707, %4700
  %4709 = phi float [ %4705, %4707 ], [ %4627, %4700 ]
  %4710 = fadd fast double %4629, 1.000000e+00
  %4711 = add nuw nsw i32 %4628, 1
  br i1 %4620, label %4712, label %4759

4712:                                             ; preds = %4708
  %4713 = load i32, ptr %4, align 4, !tbaa !6
  %4714 = load i32, ptr %12, align 4, !tbaa !6
  %4715 = add nsw i32 %4714, -1
  %4716 = icmp slt i32 %4713, %4715
  br i1 %4716, label %4736, label %4717

4717:                                             ; preds = %4712
  %4718 = icmp eq i32 %4713, %4715
  br i1 %4718, label %4719, label %4752

4719:                                             ; preds = %4717
  store i32 0, ptr %4, align 4, !tbaa !6
  %4720 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4720, ptr %6, align 4, !tbaa !6
  br i1 %4625, label %4759, label %4721

4721:                                             ; preds = %4719, %4746
  %4722 = phi i64 [ %4750, %4746 ], [ 1, %4719 ]
  %4723 = getelementptr inbounds i32, ptr %4, i64 %4722
  %4724 = load i32, ptr %4723, align 4, !tbaa !6
  %4725 = getelementptr inbounds i32, ptr %12, i64 %4722
  %4726 = load i32, ptr %4725, align 4, !tbaa !6
  %4727 = add nsw i32 %4726, -1
  %4728 = icmp slt i32 %4724, %4727
  br i1 %4728, label %4729, label %4744

4729:                                             ; preds = %4721
  br i1 %4716, label %4736, label %4730

4730:                                             ; preds = %4729
  %4731 = getelementptr inbounds i32, ptr %7, i64 %4722
  %4732 = load i32, ptr %4731, align 4, !tbaa !6
  %4733 = getelementptr inbounds i32, ptr %6, i64 %4722
  %4734 = load i32, ptr %4733, align 4, !tbaa !6
  %4735 = add nsw i32 %4734, %4732
  store i32 %4735, ptr %4733, align 4, !tbaa !6
  br label %4754

4736:                                             ; preds = %4712, %4729
  %4737 = phi i32 [ %4724, %4729 ], [ %4713, %4712 ]
  %4738 = phi ptr [ %4723, %4729 ], [ %4, %4712 ]
  %4739 = phi i64 [ %4722, %4729 ], [ 0, %4712 ]
  %4740 = add nsw i32 %4737, 1
  store i32 %4740, ptr %4738, align 4, !tbaa !6
  %4741 = getelementptr inbounds i32, ptr %7, i64 %4739
  %4742 = load i32, ptr %4741, align 4, !tbaa !6
  %4743 = getelementptr inbounds i32, ptr %6, i64 %4739
  br label %4754

4744:                                             ; preds = %4721
  %4745 = icmp eq i32 %4724, %4727
  br i1 %4745, label %4746, label %4752

4746:                                             ; preds = %4744
  store i32 0, ptr %4723, align 4, !tbaa !6
  %4747 = getelementptr inbounds i32, ptr %8, i64 %4722
  %4748 = load i32, ptr %4747, align 4, !tbaa !6
  %4749 = getelementptr inbounds i32, ptr %6, i64 %4722
  store i32 %4748, ptr %4749, align 4, !tbaa !6
  %4750 = add nuw nsw i64 %4722, 1
  %4751 = icmp eq i64 %4750, %4623
  br i1 %4751, label %4759, label %4721, !llvm.loop !1458

4752:                                             ; preds = %4717, %4744
  %4753 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2007, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5518

4754:                                             ; preds = %4730, %4736
  %4755 = phi ptr [ %4743, %4736 ], [ %4723, %4730 ]
  %4756 = phi i32 [ %4742, %4736 ], [ 1, %4730 ]
  %4757 = load i32, ptr %4755, align 4, !tbaa !6
  %4758 = add nsw i32 %4757, %4756
  store i32 %4758, ptr %4755, align 4, !tbaa !6
  br label %4759

4759:                                             ; preds = %4746, %4754, %4719, %4708
  %4760 = icmp eq i32 %4711, %5
  br i1 %4760, label %5513, label %4626, !llvm.loop !1459

4761:                                             ; preds = %4609, %4899
  %4762 = phi float [ %4298, %4609 ], [ %4847, %4899 ]
  %4763 = phi i32 [ 0, %4609 ], [ %4848, %4899 ]
  %4764 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4610, label %4765, label %4834

4765:                                             ; preds = %4761, %4824
  %4766 = phi i32 [ %4833, %4824 ], [ 0, %4761 ]
  %4767 = phi i64 [ %4775, %4824 ], [ %4614, %4761 ]
  %4768 = phi i64 [ %4832, %4824 ], [ %4613, %4761 ]
  %4769 = phi i32 [ %4830, %4824 ], [ %4764, %4761 ]
  %4770 = sub i32 %4612, %4766
  %4771 = tail call i32 @llvm.smin.i32(i32 %4770, i32 0)
  %4772 = sub i32 %4770, %4771
  %4773 = zext i32 %4772 to i64
  %4774 = add nuw nsw i64 %4773, 1
  %4775 = add nsw i64 %4767, -1
  %4776 = icmp ult i32 %4772, 31
  br i1 %4776, label %4812, label %4777

4777:                                             ; preds = %4765
  %4778 = and i64 %4774, 8589934560
  %4779 = sub i64 %4768, %4778
  br label %4780

4780:                                             ; preds = %4780, %4777
  %4781 = phi i64 [ 0, %4777 ], [ %4804, %4780 ]
  %4782 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4777 ], [ %4800, %4780 ]
  %4783 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4777 ], [ %4801, %4780 ]
  %4784 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4777 ], [ %4802, %4780 ]
  %4785 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4777 ], [ %4803, %4780 ]
  %4786 = sub i64 %4768, %4781
  %4787 = getelementptr inbounds i32, ptr %11, i64 %4786
  %4788 = getelementptr inbounds i32, ptr %4787, i64 -7
  %4789 = load <8 x i32>, ptr %4788, align 4, !tbaa !6
  %4790 = shufflevector <8 x i32> %4789, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4791 = getelementptr inbounds i32, ptr %4787, i64 -15
  %4792 = load <8 x i32>, ptr %4791, align 4, !tbaa !6
  %4793 = shufflevector <8 x i32> %4792, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4794 = getelementptr inbounds i32, ptr %4787, i64 -23
  %4795 = load <8 x i32>, ptr %4794, align 4, !tbaa !6
  %4796 = shufflevector <8 x i32> %4795, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4797 = getelementptr inbounds i32, ptr %4787, i64 -31
  %4798 = load <8 x i32>, ptr %4797, align 4, !tbaa !6
  %4799 = shufflevector <8 x i32> %4798, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4800 = mul <8 x i32> %4790, %4782
  %4801 = mul <8 x i32> %4793, %4783
  %4802 = mul <8 x i32> %4796, %4784
  %4803 = mul <8 x i32> %4799, %4785
  %4804 = add nuw i64 %4781, 32
  %4805 = icmp eq i64 %4804, %4778
  br i1 %4805, label %4806, label %4780, !llvm.loop !1460

4806:                                             ; preds = %4780
  %4807 = mul <8 x i32> %4801, %4800
  %4808 = mul <8 x i32> %4802, %4807
  %4809 = mul <8 x i32> %4803, %4808
  %4810 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4809)
  %4811 = icmp eq i64 %4774, %4778
  br i1 %4811, label %4824, label %4812

4812:                                             ; preds = %4765, %4806
  %4813 = phi i64 [ %4768, %4765 ], [ %4779, %4806 ]
  %4814 = phi i32 [ 1, %4765 ], [ %4810, %4806 ]
  br label %4815

4815:                                             ; preds = %4812, %4815
  %4816 = phi i64 [ %4821, %4815 ], [ %4813, %4812 ]
  %4817 = phi i32 [ %4820, %4815 ], [ %4814, %4812 ]
  %4818 = getelementptr inbounds i32, ptr %11, i64 %4816
  %4819 = load i32, ptr %4818, align 4, !tbaa !6
  %4820 = mul nsw i32 %4819, %4817
  %4821 = add nsw i64 %4816, -1
  %4822 = trunc i64 %4816 to i32
  %4823 = icmp sgt i32 %4822, 0
  br i1 %4823, label %4815, label %4824, !llvm.loop !1461

4824:                                             ; preds = %4815, %4806
  %4825 = phi i32 [ %4810, %4806 ], [ %4820, %4815 ]
  %4826 = and i64 %4775, 4294967295
  %4827 = getelementptr inbounds i32, ptr %6, i64 %4826
  %4828 = load i32, ptr %4827, align 4, !tbaa !6
  %4829 = mul nsw i32 %4828, %4825
  %4830 = add nsw i32 %4829, %4769
  %4831 = icmp sgt i64 %4767, 2
  %4832 = add nsw i64 %4768, -1
  %4833 = add i32 %4766, 1
  br i1 %4831, label %4765, label %4834, !llvm.loop !1462

4834:                                             ; preds = %4824, %4761
  %4835 = phi i32 [ %4764, %4761 ], [ %4830, %4824 ]
  %4836 = icmp slt i32 %4835, %5
  br i1 %4836, label %4839, label %4837

4837:                                             ; preds = %4834
  %4838 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2007, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5518

4839:                                             ; preds = %4834
  %4840 = sext i32 %4835 to i64
  %4841 = getelementptr inbounds double, ptr %4294, i64 %4840
  %4842 = load double, ptr %4841, align 8, !tbaa !19
  %4843 = fptrunc double %4842 to float
  %4844 = fcmp fast olt float %4762, %4843
  br i1 %4844, label %4845, label %4846

4845:                                             ; preds = %4839
  store float %4843, ptr %4296, align 4, !tbaa !163
  br label %4846

4846:                                             ; preds = %4845, %4839
  %4847 = phi float [ %4843, %4845 ], [ %4762, %4839 ]
  %4848 = add nuw nsw i32 %4763, 1
  br i1 %4611, label %4849, label %4899

4849:                                             ; preds = %4846
  %4850 = load i32, ptr %4, align 4, !tbaa !6
  %4851 = load i32, ptr %12, align 4, !tbaa !6
  %4852 = add nsw i32 %4851, -1
  %4853 = icmp slt i32 %4850, %4852
  br i1 %4853, label %4876, label %4854

4854:                                             ; preds = %4849
  %4855 = icmp eq i32 %4850, %4852
  br i1 %4855, label %4856, label %4892

4856:                                             ; preds = %4854
  store i32 0, ptr %4, align 4, !tbaa !6
  %4857 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %4857, ptr %6, align 4, !tbaa !6
  br i1 %4616, label %4899, label %4858

4858:                                             ; preds = %4856, %4886
  %4859 = phi i64 [ %4890, %4886 ], [ 1, %4856 ]
  %4860 = getelementptr inbounds i32, ptr %4, i64 %4859
  %4861 = load i32, ptr %4860, align 4, !tbaa !6
  %4862 = getelementptr inbounds i32, ptr %12, i64 %4859
  %4863 = load i32, ptr %4862, align 4, !tbaa !6
  %4864 = add nsw i32 %4863, -1
  %4865 = icmp slt i32 %4861, %4864
  br i1 %4865, label %4866, label %4884

4866:                                             ; preds = %4858
  br i1 %4853, label %4876, label %4867

4867:                                             ; preds = %4866
  %4868 = shl i64 %4859, 32
  %4869 = add i64 %4868, -4294967296
  %4870 = ashr exact i64 %4869, 32
  %4871 = getelementptr inbounds i32, ptr %7, i64 %4870
  %4872 = load i32, ptr %4871, align 4, !tbaa !6
  %4873 = getelementptr inbounds i32, ptr %6, i64 %4859
  %4874 = load i32, ptr %4873, align 4, !tbaa !6
  %4875 = add nsw i32 %4874, %4872
  store i32 %4875, ptr %4873, align 4, !tbaa !6
  br label %4894

4876:                                             ; preds = %4849, %4866
  %4877 = phi i32 [ %4861, %4866 ], [ %4850, %4849 ]
  %4878 = phi ptr [ %4860, %4866 ], [ %4, %4849 ]
  %4879 = phi i64 [ %4859, %4866 ], [ 0, %4849 ]
  %4880 = add nsw i32 %4877, 1
  store i32 %4880, ptr %4878, align 4, !tbaa !6
  %4881 = getelementptr inbounds i32, ptr %7, i64 %4879
  %4882 = load i32, ptr %4881, align 4, !tbaa !6
  %4883 = getelementptr inbounds i32, ptr %6, i64 %4879
  br label %4894

4884:                                             ; preds = %4858
  %4885 = icmp eq i32 %4861, %4864
  br i1 %4885, label %4886, label %4892

4886:                                             ; preds = %4884
  store i32 0, ptr %4860, align 4, !tbaa !6
  %4887 = getelementptr inbounds i32, ptr %8, i64 %4859
  %4888 = load i32, ptr %4887, align 4, !tbaa !6
  %4889 = getelementptr inbounds i32, ptr %6, i64 %4859
  store i32 %4888, ptr %4889, align 4, !tbaa !6
  %4890 = add nuw nsw i64 %4859, 1
  %4891 = icmp eq i64 %4890, %4614
  br i1 %4891, label %4899, label %4858, !llvm.loop !1463

4892:                                             ; preds = %4854, %4884
  %4893 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2007, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5518

4894:                                             ; preds = %4867, %4876
  %4895 = phi ptr [ %4883, %4876 ], [ %4860, %4867 ]
  %4896 = phi i32 [ %4882, %4876 ], [ 1, %4867 ]
  %4897 = load i32, ptr %4895, align 4, !tbaa !6
  %4898 = add nsw i32 %4897, %4896
  store i32 %4898, ptr %4895, align 4, !tbaa !6
  br label %4899

4899:                                             ; preds = %4886, %4894, %4856, %4846
  %4900 = icmp eq i32 %4848, %5
  br i1 %4900, label %5513, label %4761, !llvm.loop !1464

4901:                                             ; preds = %4300
  %4902 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2007, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5513

4903:                                             ; preds = %18
  %4904 = getelementptr inbounds ptr, ptr %14, i64 %19
  %4905 = load ptr, ptr %4904, align 8, !tbaa !10
  %4906 = getelementptr inbounds ptr, ptr %16, i64 %19
  %4907 = load ptr, ptr %4906, align 8, !tbaa !10
  %4908 = load double, ptr %4905, align 8, !tbaa !19
  store double %4908, ptr %4907, align 8, !tbaa !19
  %4909 = icmp eq i32 %13, 0
  br i1 %4909, label %4910, label %4914

4910:                                             ; preds = %4903
  %4911 = load double, ptr %4905, align 8, !tbaa !19
  %4912 = fcmp fast olt double %4908, %4911
  br i1 %4912, label %4913, label %5513

4913:                                             ; preds = %4910
  store double %4911, ptr %4907, align 8, !tbaa !19
  br label %5513

4914:                                             ; preds = %4903
  switch i32 %1, label %5511 [
    i32 1, label %4915
    i32 0, label %5215
  ]

4915:                                             ; preds = %4914
  %4916 = getelementptr inbounds i32, ptr %3, i64 %19
  %4917 = load i32, ptr %4916, align 4, !tbaa !6
  %4918 = icmp eq i32 %4917, 0
  %4919 = icmp sgt i32 %5, 0
  br i1 %4918, label %4929, label %4920

4920:                                             ; preds = %4915
  br i1 %4919, label %4921, label %5513

4921:                                             ; preds = %4920
  %4922 = icmp sgt i32 %13, 1
  %4923 = icmp sgt i32 %13, 0
  %4924 = add i32 %13, -2
  %4925 = zext i32 %4924 to i64
  %4926 = zext i32 %13 to i64
  %4927 = add nuw i32 %5, 1
  %4928 = icmp eq i32 %13, 1
  br label %5076

4929:                                             ; preds = %4915
  br i1 %4919, label %4930, label %5513

4930:                                             ; preds = %4929
  %4931 = icmp sgt i32 %13, 1
  %4932 = icmp sgt i32 %13, 0
  %4933 = add i32 %13, -2
  %4934 = zext i32 %4933 to i64
  %4935 = zext i32 %13 to i64
  %4936 = add nuw i32 %5, 1
  %4937 = icmp eq i32 %13, 1
  br label %4938

4938:                                             ; preds = %4930, %5074
  %4939 = phi double [ %4908, %4930 ], [ %5024, %5074 ]
  %4940 = phi i32 [ 0, %4930 ], [ %5026, %5074 ]
  %4941 = phi double [ 0.000000e+00, %4930 ], [ %5025, %5074 ]
  %4942 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4931, label %4943, label %5012

4943:                                             ; preds = %4938, %5002
  %4944 = phi i32 [ %5011, %5002 ], [ 0, %4938 ]
  %4945 = phi i64 [ %4953, %5002 ], [ %4935, %4938 ]
  %4946 = phi i64 [ %5010, %5002 ], [ %4934, %4938 ]
  %4947 = phi i32 [ %5008, %5002 ], [ %4942, %4938 ]
  %4948 = sub i32 %4933, %4944
  %4949 = tail call i32 @llvm.smin.i32(i32 %4948, i32 0)
  %4950 = sub i32 %4948, %4949
  %4951 = zext i32 %4950 to i64
  %4952 = add nuw nsw i64 %4951, 1
  %4953 = add nsw i64 %4945, -1
  %4954 = icmp ult i32 %4950, 31
  br i1 %4954, label %4990, label %4955

4955:                                             ; preds = %4943
  %4956 = and i64 %4952, 8589934560
  %4957 = sub i64 %4946, %4956
  br label %4958

4958:                                             ; preds = %4958, %4955
  %4959 = phi i64 [ 0, %4955 ], [ %4982, %4958 ]
  %4960 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4955 ], [ %4978, %4958 ]
  %4961 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4955 ], [ %4979, %4958 ]
  %4962 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4955 ], [ %4980, %4958 ]
  %4963 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %4955 ], [ %4981, %4958 ]
  %4964 = sub i64 %4946, %4959
  %4965 = getelementptr inbounds i32, ptr %9, i64 %4964
  %4966 = getelementptr inbounds i32, ptr %4965, i64 -7
  %4967 = load <8 x i32>, ptr %4966, align 4, !tbaa !6
  %4968 = shufflevector <8 x i32> %4967, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4969 = getelementptr inbounds i32, ptr %4965, i64 -15
  %4970 = load <8 x i32>, ptr %4969, align 4, !tbaa !6
  %4971 = shufflevector <8 x i32> %4970, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4972 = getelementptr inbounds i32, ptr %4965, i64 -23
  %4973 = load <8 x i32>, ptr %4972, align 4, !tbaa !6
  %4974 = shufflevector <8 x i32> %4973, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4975 = getelementptr inbounds i32, ptr %4965, i64 -31
  %4976 = load <8 x i32>, ptr %4975, align 4, !tbaa !6
  %4977 = shufflevector <8 x i32> %4976, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %4978 = mul <8 x i32> %4968, %4960
  %4979 = mul <8 x i32> %4971, %4961
  %4980 = mul <8 x i32> %4974, %4962
  %4981 = mul <8 x i32> %4977, %4963
  %4982 = add nuw i64 %4959, 32
  %4983 = icmp eq i64 %4982, %4956
  br i1 %4983, label %4984, label %4958, !llvm.loop !1465

4984:                                             ; preds = %4958
  %4985 = mul <8 x i32> %4979, %4978
  %4986 = mul <8 x i32> %4980, %4985
  %4987 = mul <8 x i32> %4981, %4986
  %4988 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %4987)
  %4989 = icmp eq i64 %4952, %4956
  br i1 %4989, label %5002, label %4990

4990:                                             ; preds = %4943, %4984
  %4991 = phi i64 [ %4946, %4943 ], [ %4957, %4984 ]
  %4992 = phi i32 [ 1, %4943 ], [ %4988, %4984 ]
  br label %4993

4993:                                             ; preds = %4990, %4993
  %4994 = phi i64 [ %4999, %4993 ], [ %4991, %4990 ]
  %4995 = phi i32 [ %4998, %4993 ], [ %4992, %4990 ]
  %4996 = getelementptr inbounds i32, ptr %9, i64 %4994
  %4997 = load i32, ptr %4996, align 4, !tbaa !6
  %4998 = mul nsw i32 %4997, %4995
  %4999 = add nsw i64 %4994, -1
  %5000 = trunc i64 %4994 to i32
  %5001 = icmp sgt i32 %5000, 0
  br i1 %5001, label %4993, label %5002, !llvm.loop !1466

5002:                                             ; preds = %4993, %4984
  %5003 = phi i32 [ %4988, %4984 ], [ %4998, %4993 ]
  %5004 = and i64 %4953, 4294967295
  %5005 = getelementptr inbounds i32, ptr %6, i64 %5004
  %5006 = load i32, ptr %5005, align 4, !tbaa !6
  %5007 = mul nsw i32 %5006, %5003
  %5008 = add nsw i32 %5007, %4947
  %5009 = icmp sgt i64 %4945, 2
  %5010 = add nsw i64 %4946, -1
  %5011 = add i32 %4944, 1
  br i1 %5009, label %4943, label %5012, !llvm.loop !1467

5012:                                             ; preds = %5002, %4938
  %5013 = phi i32 [ %4942, %4938 ], [ %5008, %5002 ]
  %5014 = sext i32 %5013 to i64
  %5015 = getelementptr inbounds double, ptr %2, i64 %5014
  %5016 = load double, ptr %5015, align 8, !tbaa !19
  %5017 = getelementptr inbounds double, ptr %4905, i64 %5014
  %5018 = load double, ptr %5017, align 8, !tbaa !19
  %5019 = fcmp fast one double %5016, 0.000000e+00
  %5020 = fcmp fast olt double %4939, %5018
  %5021 = select i1 %5019, i1 %5020, i1 false
  br i1 %5021, label %5022, label %5023

5022:                                             ; preds = %5012
  store double %5018, ptr %4907, align 8, !tbaa !19
  br label %5023

5023:                                             ; preds = %5022, %5012
  %5024 = phi double [ %5018, %5022 ], [ %4939, %5012 ]
  %5025 = fadd fast double %5016, %4941
  %5026 = add nuw nsw i32 %4940, 1
  br i1 %4932, label %5027, label %5074

5027:                                             ; preds = %5023
  %5028 = load i32, ptr %4, align 4, !tbaa !6
  %5029 = load i32, ptr %12, align 4, !tbaa !6
  %5030 = add nsw i32 %5029, -1
  %5031 = icmp slt i32 %5028, %5030
  br i1 %5031, label %5051, label %5032

5032:                                             ; preds = %5027
  %5033 = icmp eq i32 %5028, %5030
  br i1 %5033, label %5034, label %5067

5034:                                             ; preds = %5032
  store i32 0, ptr %4, align 4, !tbaa !6
  %5035 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5035, ptr %6, align 4, !tbaa !6
  br i1 %4937, label %5074, label %5036

5036:                                             ; preds = %5034, %5061
  %5037 = phi i64 [ %5065, %5061 ], [ 1, %5034 ]
  %5038 = getelementptr inbounds i32, ptr %4, i64 %5037
  %5039 = load i32, ptr %5038, align 4, !tbaa !6
  %5040 = getelementptr inbounds i32, ptr %12, i64 %5037
  %5041 = load i32, ptr %5040, align 4, !tbaa !6
  %5042 = add nsw i32 %5041, -1
  %5043 = icmp slt i32 %5039, %5042
  br i1 %5043, label %5044, label %5059

5044:                                             ; preds = %5036
  br i1 %5031, label %5051, label %5045

5045:                                             ; preds = %5044
  %5046 = getelementptr inbounds i32, ptr %7, i64 %5037
  %5047 = load i32, ptr %5046, align 4, !tbaa !6
  %5048 = getelementptr inbounds i32, ptr %6, i64 %5037
  %5049 = load i32, ptr %5048, align 4, !tbaa !6
  %5050 = add nsw i32 %5049, %5047
  store i32 %5050, ptr %5048, align 4, !tbaa !6
  br label %5069

5051:                                             ; preds = %5027, %5044
  %5052 = phi i32 [ %5039, %5044 ], [ %5028, %5027 ]
  %5053 = phi ptr [ %5038, %5044 ], [ %4, %5027 ]
  %5054 = phi i64 [ %5037, %5044 ], [ 0, %5027 ]
  %5055 = add nsw i32 %5052, 1
  store i32 %5055, ptr %5053, align 4, !tbaa !6
  %5056 = getelementptr inbounds i32, ptr %7, i64 %5054
  %5057 = load i32, ptr %5056, align 4, !tbaa !6
  %5058 = getelementptr inbounds i32, ptr %6, i64 %5054
  br label %5069

5059:                                             ; preds = %5036
  %5060 = icmp eq i32 %5039, %5042
  br i1 %5060, label %5061, label %5067

5061:                                             ; preds = %5059
  store i32 0, ptr %5038, align 4, !tbaa !6
  %5062 = getelementptr inbounds i32, ptr %8, i64 %5037
  %5063 = load i32, ptr %5062, align 4, !tbaa !6
  %5064 = getelementptr inbounds i32, ptr %6, i64 %5037
  store i32 %5063, ptr %5064, align 4, !tbaa !6
  %5065 = add nuw nsw i64 %5037, 1
  %5066 = icmp eq i64 %5065, %4935
  br i1 %5066, label %5074, label %5036, !llvm.loop !1468

5067:                                             ; preds = %5032, %5059
  %5068 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2012, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5518

5069:                                             ; preds = %5045, %5051
  %5070 = phi ptr [ %5058, %5051 ], [ %5038, %5045 ]
  %5071 = phi i32 [ %5057, %5051 ], [ 1, %5045 ]
  %5072 = load i32, ptr %5070, align 4, !tbaa !6
  %5073 = add nsw i32 %5072, %5071
  store i32 %5073, ptr %5070, align 4, !tbaa !6
  br label %5074

5074:                                             ; preds = %5061, %5069, %5034, %5023
  %5075 = icmp eq i32 %5026, %5
  br i1 %5075, label %5513, label %4938, !llvm.loop !1469

5076:                                             ; preds = %4921, %5213
  %5077 = phi double [ %4908, %4921 ], [ %5161, %5213 ]
  %5078 = phi i32 [ 0, %4921 ], [ %5162, %5213 ]
  %5079 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %4922, label %5080, label %5149

5080:                                             ; preds = %5076, %5139
  %5081 = phi i32 [ %5148, %5139 ], [ 0, %5076 ]
  %5082 = phi i64 [ %5090, %5139 ], [ %4926, %5076 ]
  %5083 = phi i64 [ %5147, %5139 ], [ %4925, %5076 ]
  %5084 = phi i32 [ %5145, %5139 ], [ %5079, %5076 ]
  %5085 = sub i32 %4924, %5081
  %5086 = tail call i32 @llvm.smin.i32(i32 %5085, i32 0)
  %5087 = sub i32 %5085, %5086
  %5088 = zext i32 %5087 to i64
  %5089 = add nuw nsw i64 %5088, 1
  %5090 = add nsw i64 %5082, -1
  %5091 = icmp ult i32 %5087, 31
  br i1 %5091, label %5127, label %5092

5092:                                             ; preds = %5080
  %5093 = and i64 %5089, 8589934560
  %5094 = sub i64 %5083, %5093
  br label %5095

5095:                                             ; preds = %5095, %5092
  %5096 = phi i64 [ 0, %5092 ], [ %5119, %5095 ]
  %5097 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5092 ], [ %5115, %5095 ]
  %5098 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5092 ], [ %5116, %5095 ]
  %5099 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5092 ], [ %5117, %5095 ]
  %5100 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5092 ], [ %5118, %5095 ]
  %5101 = sub i64 %5083, %5096
  %5102 = getelementptr inbounds i32, ptr %11, i64 %5101
  %5103 = getelementptr inbounds i32, ptr %5102, i64 -7
  %5104 = load <8 x i32>, ptr %5103, align 4, !tbaa !6
  %5105 = shufflevector <8 x i32> %5104, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5106 = getelementptr inbounds i32, ptr %5102, i64 -15
  %5107 = load <8 x i32>, ptr %5106, align 4, !tbaa !6
  %5108 = shufflevector <8 x i32> %5107, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5109 = getelementptr inbounds i32, ptr %5102, i64 -23
  %5110 = load <8 x i32>, ptr %5109, align 4, !tbaa !6
  %5111 = shufflevector <8 x i32> %5110, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5112 = getelementptr inbounds i32, ptr %5102, i64 -31
  %5113 = load <8 x i32>, ptr %5112, align 4, !tbaa !6
  %5114 = shufflevector <8 x i32> %5113, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5115 = mul <8 x i32> %5105, %5097
  %5116 = mul <8 x i32> %5108, %5098
  %5117 = mul <8 x i32> %5111, %5099
  %5118 = mul <8 x i32> %5114, %5100
  %5119 = add nuw i64 %5096, 32
  %5120 = icmp eq i64 %5119, %5093
  br i1 %5120, label %5121, label %5095, !llvm.loop !1470

5121:                                             ; preds = %5095
  %5122 = mul <8 x i32> %5116, %5115
  %5123 = mul <8 x i32> %5117, %5122
  %5124 = mul <8 x i32> %5118, %5123
  %5125 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5124)
  %5126 = icmp eq i64 %5089, %5093
  br i1 %5126, label %5139, label %5127

5127:                                             ; preds = %5080, %5121
  %5128 = phi i64 [ %5083, %5080 ], [ %5094, %5121 ]
  %5129 = phi i32 [ 1, %5080 ], [ %5125, %5121 ]
  br label %5130

5130:                                             ; preds = %5127, %5130
  %5131 = phi i64 [ %5136, %5130 ], [ %5128, %5127 ]
  %5132 = phi i32 [ %5135, %5130 ], [ %5129, %5127 ]
  %5133 = getelementptr inbounds i32, ptr %11, i64 %5131
  %5134 = load i32, ptr %5133, align 4, !tbaa !6
  %5135 = mul nsw i32 %5134, %5132
  %5136 = add nsw i64 %5131, -1
  %5137 = trunc i64 %5131 to i32
  %5138 = icmp sgt i32 %5137, 0
  br i1 %5138, label %5130, label %5139, !llvm.loop !1471

5139:                                             ; preds = %5130, %5121
  %5140 = phi i32 [ %5125, %5121 ], [ %5135, %5130 ]
  %5141 = and i64 %5090, 4294967295
  %5142 = getelementptr inbounds i32, ptr %6, i64 %5141
  %5143 = load i32, ptr %5142, align 4, !tbaa !6
  %5144 = mul nsw i32 %5143, %5140
  %5145 = add nsw i32 %5144, %5084
  %5146 = icmp sgt i64 %5082, 2
  %5147 = add nsw i64 %5083, -1
  %5148 = add i32 %5081, 1
  br i1 %5146, label %5080, label %5149, !llvm.loop !1472

5149:                                             ; preds = %5139, %5076
  %5150 = phi i32 [ %5079, %5076 ], [ %5145, %5139 ]
  %5151 = icmp slt i32 %5150, %5
  br i1 %5151, label %5154, label %5152

5152:                                             ; preds = %5149
  %5153 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2012, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5518

5154:                                             ; preds = %5149
  %5155 = sext i32 %5150 to i64
  %5156 = getelementptr inbounds double, ptr %4905, i64 %5155
  %5157 = load double, ptr %5156, align 8, !tbaa !19
  %5158 = fcmp fast olt double %5077, %5157
  br i1 %5158, label %5159, label %5160

5159:                                             ; preds = %5154
  store double %5157, ptr %4907, align 8, !tbaa !19
  br label %5160

5160:                                             ; preds = %5154, %5159
  %5161 = phi double [ %5077, %5154 ], [ %5157, %5159 ]
  %5162 = add nuw nsw i32 %5078, 1
  br i1 %4923, label %5163, label %5213

5163:                                             ; preds = %5160
  %5164 = load i32, ptr %4, align 4, !tbaa !6
  %5165 = load i32, ptr %12, align 4, !tbaa !6
  %5166 = add nsw i32 %5165, -1
  %5167 = icmp slt i32 %5164, %5166
  br i1 %5167, label %5190, label %5168

5168:                                             ; preds = %5163
  %5169 = icmp eq i32 %5164, %5166
  br i1 %5169, label %5170, label %5206

5170:                                             ; preds = %5168
  store i32 0, ptr %4, align 4, !tbaa !6
  %5171 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5171, ptr %6, align 4, !tbaa !6
  br i1 %4928, label %5213, label %5172

5172:                                             ; preds = %5170, %5200
  %5173 = phi i64 [ %5204, %5200 ], [ 1, %5170 ]
  %5174 = getelementptr inbounds i32, ptr %4, i64 %5173
  %5175 = load i32, ptr %5174, align 4, !tbaa !6
  %5176 = getelementptr inbounds i32, ptr %12, i64 %5173
  %5177 = load i32, ptr %5176, align 4, !tbaa !6
  %5178 = add nsw i32 %5177, -1
  %5179 = icmp slt i32 %5175, %5178
  br i1 %5179, label %5180, label %5198

5180:                                             ; preds = %5172
  br i1 %5167, label %5190, label %5181

5181:                                             ; preds = %5180
  %5182 = shl i64 %5173, 32
  %5183 = add i64 %5182, -4294967296
  %5184 = ashr exact i64 %5183, 32
  %5185 = getelementptr inbounds i32, ptr %7, i64 %5184
  %5186 = load i32, ptr %5185, align 4, !tbaa !6
  %5187 = getelementptr inbounds i32, ptr %6, i64 %5173
  %5188 = load i32, ptr %5187, align 4, !tbaa !6
  %5189 = add nsw i32 %5188, %5186
  store i32 %5189, ptr %5187, align 4, !tbaa !6
  br label %5208

5190:                                             ; preds = %5163, %5180
  %5191 = phi i32 [ %5175, %5180 ], [ %5164, %5163 ]
  %5192 = phi ptr [ %5174, %5180 ], [ %4, %5163 ]
  %5193 = phi i64 [ %5173, %5180 ], [ 0, %5163 ]
  %5194 = add nsw i32 %5191, 1
  store i32 %5194, ptr %5192, align 4, !tbaa !6
  %5195 = getelementptr inbounds i32, ptr %7, i64 %5193
  %5196 = load i32, ptr %5195, align 4, !tbaa !6
  %5197 = getelementptr inbounds i32, ptr %6, i64 %5193
  br label %5208

5198:                                             ; preds = %5172
  %5199 = icmp eq i32 %5175, %5178
  br i1 %5199, label %5200, label %5206

5200:                                             ; preds = %5198
  store i32 0, ptr %5174, align 4, !tbaa !6
  %5201 = getelementptr inbounds i32, ptr %8, i64 %5173
  %5202 = load i32, ptr %5201, align 4, !tbaa !6
  %5203 = getelementptr inbounds i32, ptr %6, i64 %5173
  store i32 %5202, ptr %5203, align 4, !tbaa !6
  %5204 = add nuw nsw i64 %5173, 1
  %5205 = icmp eq i64 %5204, %4926
  br i1 %5205, label %5213, label %5172, !llvm.loop !1473

5206:                                             ; preds = %5168, %5198
  %5207 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2012, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5518

5208:                                             ; preds = %5181, %5190
  %5209 = phi ptr [ %5197, %5190 ], [ %5174, %5181 ]
  %5210 = phi i32 [ %5196, %5190 ], [ 1, %5181 ]
  %5211 = load i32, ptr %5209, align 4, !tbaa !6
  %5212 = add nsw i32 %5211, %5210
  store i32 %5212, ptr %5209, align 4, !tbaa !6
  br label %5213

5213:                                             ; preds = %5200, %5208, %5170, %5160
  %5214 = icmp eq i32 %5162, %5
  br i1 %5214, label %5513, label %5076, !llvm.loop !1474

5215:                                             ; preds = %4914
  %5216 = getelementptr inbounds i32, ptr %3, i64 %19
  %5217 = load i32, ptr %5216, align 4, !tbaa !6
  %5218 = icmp eq i32 %5217, 0
  %5219 = icmp sgt i32 %5, 0
  br i1 %5218, label %5229, label %5220

5220:                                             ; preds = %5215
  br i1 %5219, label %5221, label %5513

5221:                                             ; preds = %5220
  %5222 = icmp sgt i32 %13, 1
  %5223 = icmp sgt i32 %13, 0
  %5224 = add i32 %13, -2
  %5225 = zext i32 %5224 to i64
  %5226 = zext i32 %13 to i64
  %5227 = add nuw i32 %5, 1
  %5228 = icmp eq i32 %13, 1
  br label %5372

5229:                                             ; preds = %5215
  br i1 %5219, label %5230, label %5513

5230:                                             ; preds = %5229
  %5231 = icmp sgt i32 %13, 1
  %5232 = icmp sgt i32 %13, 0
  %5233 = add i32 %13, -2
  %5234 = zext i32 %5233 to i64
  %5235 = zext i32 %13 to i64
  %5236 = add nuw i32 %5, 1
  %5237 = icmp eq i32 %13, 1
  br label %5238

5238:                                             ; preds = %5230, %5370
  %5239 = phi double [ %4908, %5230 ], [ %5320, %5370 ]
  %5240 = phi i32 [ 0, %5230 ], [ %5322, %5370 ]
  %5241 = phi double [ 0.000000e+00, %5230 ], [ %5321, %5370 ]
  %5242 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %5231, label %5243, label %5312

5243:                                             ; preds = %5238, %5302
  %5244 = phi i32 [ %5311, %5302 ], [ 0, %5238 ]
  %5245 = phi i64 [ %5253, %5302 ], [ %5235, %5238 ]
  %5246 = phi i64 [ %5310, %5302 ], [ %5234, %5238 ]
  %5247 = phi i32 [ %5308, %5302 ], [ %5242, %5238 ]
  %5248 = sub i32 %5233, %5244
  %5249 = tail call i32 @llvm.smin.i32(i32 %5248, i32 0)
  %5250 = sub i32 %5248, %5249
  %5251 = zext i32 %5250 to i64
  %5252 = add nuw nsw i64 %5251, 1
  %5253 = add nsw i64 %5245, -1
  %5254 = icmp ult i32 %5250, 31
  br i1 %5254, label %5290, label %5255

5255:                                             ; preds = %5243
  %5256 = and i64 %5252, 8589934560
  %5257 = sub i64 %5246, %5256
  br label %5258

5258:                                             ; preds = %5258, %5255
  %5259 = phi i64 [ 0, %5255 ], [ %5282, %5258 ]
  %5260 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5255 ], [ %5278, %5258 ]
  %5261 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5255 ], [ %5279, %5258 ]
  %5262 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5255 ], [ %5280, %5258 ]
  %5263 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5255 ], [ %5281, %5258 ]
  %5264 = sub i64 %5246, %5259
  %5265 = getelementptr inbounds i32, ptr %9, i64 %5264
  %5266 = getelementptr inbounds i32, ptr %5265, i64 -7
  %5267 = load <8 x i32>, ptr %5266, align 4, !tbaa !6
  %5268 = shufflevector <8 x i32> %5267, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5269 = getelementptr inbounds i32, ptr %5265, i64 -15
  %5270 = load <8 x i32>, ptr %5269, align 4, !tbaa !6
  %5271 = shufflevector <8 x i32> %5270, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5272 = getelementptr inbounds i32, ptr %5265, i64 -23
  %5273 = load <8 x i32>, ptr %5272, align 4, !tbaa !6
  %5274 = shufflevector <8 x i32> %5273, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5275 = getelementptr inbounds i32, ptr %5265, i64 -31
  %5276 = load <8 x i32>, ptr %5275, align 4, !tbaa !6
  %5277 = shufflevector <8 x i32> %5276, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5278 = mul <8 x i32> %5268, %5260
  %5279 = mul <8 x i32> %5271, %5261
  %5280 = mul <8 x i32> %5274, %5262
  %5281 = mul <8 x i32> %5277, %5263
  %5282 = add nuw i64 %5259, 32
  %5283 = icmp eq i64 %5282, %5256
  br i1 %5283, label %5284, label %5258, !llvm.loop !1475

5284:                                             ; preds = %5258
  %5285 = mul <8 x i32> %5279, %5278
  %5286 = mul <8 x i32> %5280, %5285
  %5287 = mul <8 x i32> %5281, %5286
  %5288 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5287)
  %5289 = icmp eq i64 %5252, %5256
  br i1 %5289, label %5302, label %5290

5290:                                             ; preds = %5243, %5284
  %5291 = phi i64 [ %5246, %5243 ], [ %5257, %5284 ]
  %5292 = phi i32 [ 1, %5243 ], [ %5288, %5284 ]
  br label %5293

5293:                                             ; preds = %5290, %5293
  %5294 = phi i64 [ %5299, %5293 ], [ %5291, %5290 ]
  %5295 = phi i32 [ %5298, %5293 ], [ %5292, %5290 ]
  %5296 = getelementptr inbounds i32, ptr %9, i64 %5294
  %5297 = load i32, ptr %5296, align 4, !tbaa !6
  %5298 = mul nsw i32 %5297, %5295
  %5299 = add nsw i64 %5294, -1
  %5300 = trunc i64 %5294 to i32
  %5301 = icmp sgt i32 %5300, 0
  br i1 %5301, label %5293, label %5302, !llvm.loop !1476

5302:                                             ; preds = %5293, %5284
  %5303 = phi i32 [ %5288, %5284 ], [ %5298, %5293 ]
  %5304 = and i64 %5253, 4294967295
  %5305 = getelementptr inbounds i32, ptr %6, i64 %5304
  %5306 = load i32, ptr %5305, align 4, !tbaa !6
  %5307 = mul nsw i32 %5306, %5303
  %5308 = add nsw i32 %5307, %5247
  %5309 = icmp sgt i64 %5245, 2
  %5310 = add nsw i64 %5246, -1
  %5311 = add i32 %5244, 1
  br i1 %5309, label %5243, label %5312, !llvm.loop !1477

5312:                                             ; preds = %5302, %5238
  %5313 = phi i32 [ %5242, %5238 ], [ %5308, %5302 ]
  %5314 = sext i32 %5313 to i64
  %5315 = getelementptr inbounds double, ptr %4905, i64 %5314
  %5316 = load double, ptr %5315, align 8, !tbaa !19
  %5317 = fcmp fast olt double %5239, %5316
  br i1 %5317, label %5318, label %5319

5318:                                             ; preds = %5312
  store double %5316, ptr %4907, align 8, !tbaa !19
  br label %5319

5319:                                             ; preds = %5318, %5312
  %5320 = phi double [ %5316, %5318 ], [ %5239, %5312 ]
  %5321 = fadd fast double %5241, 1.000000e+00
  %5322 = add nuw nsw i32 %5240, 1
  br i1 %5232, label %5323, label %5370

5323:                                             ; preds = %5319
  %5324 = load i32, ptr %4, align 4, !tbaa !6
  %5325 = load i32, ptr %12, align 4, !tbaa !6
  %5326 = add nsw i32 %5325, -1
  %5327 = icmp slt i32 %5324, %5326
  br i1 %5327, label %5347, label %5328

5328:                                             ; preds = %5323
  %5329 = icmp eq i32 %5324, %5326
  br i1 %5329, label %5330, label %5363

5330:                                             ; preds = %5328
  store i32 0, ptr %4, align 4, !tbaa !6
  %5331 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5331, ptr %6, align 4, !tbaa !6
  br i1 %5237, label %5370, label %5332

5332:                                             ; preds = %5330, %5357
  %5333 = phi i64 [ %5361, %5357 ], [ 1, %5330 ]
  %5334 = getelementptr inbounds i32, ptr %4, i64 %5333
  %5335 = load i32, ptr %5334, align 4, !tbaa !6
  %5336 = getelementptr inbounds i32, ptr %12, i64 %5333
  %5337 = load i32, ptr %5336, align 4, !tbaa !6
  %5338 = add nsw i32 %5337, -1
  %5339 = icmp slt i32 %5335, %5338
  br i1 %5339, label %5340, label %5355

5340:                                             ; preds = %5332
  br i1 %5327, label %5347, label %5341

5341:                                             ; preds = %5340
  %5342 = getelementptr inbounds i32, ptr %7, i64 %5333
  %5343 = load i32, ptr %5342, align 4, !tbaa !6
  %5344 = getelementptr inbounds i32, ptr %6, i64 %5333
  %5345 = load i32, ptr %5344, align 4, !tbaa !6
  %5346 = add nsw i32 %5345, %5343
  store i32 %5346, ptr %5344, align 4, !tbaa !6
  br label %5365

5347:                                             ; preds = %5323, %5340
  %5348 = phi i32 [ %5335, %5340 ], [ %5324, %5323 ]
  %5349 = phi ptr [ %5334, %5340 ], [ %4, %5323 ]
  %5350 = phi i64 [ %5333, %5340 ], [ 0, %5323 ]
  %5351 = add nsw i32 %5348, 1
  store i32 %5351, ptr %5349, align 4, !tbaa !6
  %5352 = getelementptr inbounds i32, ptr %7, i64 %5350
  %5353 = load i32, ptr %5352, align 4, !tbaa !6
  %5354 = getelementptr inbounds i32, ptr %6, i64 %5350
  br label %5365

5355:                                             ; preds = %5332
  %5356 = icmp eq i32 %5335, %5338
  br i1 %5356, label %5357, label %5363

5357:                                             ; preds = %5355
  store i32 0, ptr %5334, align 4, !tbaa !6
  %5358 = getelementptr inbounds i32, ptr %8, i64 %5333
  %5359 = load i32, ptr %5358, align 4, !tbaa !6
  %5360 = getelementptr inbounds i32, ptr %6, i64 %5333
  store i32 %5359, ptr %5360, align 4, !tbaa !6
  %5361 = add nuw nsw i64 %5333, 1
  %5362 = icmp eq i64 %5361, %5235
  br i1 %5362, label %5370, label %5332, !llvm.loop !1478

5363:                                             ; preds = %5328, %5355
  %5364 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2012, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5518

5365:                                             ; preds = %5341, %5347
  %5366 = phi ptr [ %5354, %5347 ], [ %5334, %5341 ]
  %5367 = phi i32 [ %5353, %5347 ], [ 1, %5341 ]
  %5368 = load i32, ptr %5366, align 4, !tbaa !6
  %5369 = add nsw i32 %5368, %5367
  store i32 %5369, ptr %5366, align 4, !tbaa !6
  br label %5370

5370:                                             ; preds = %5357, %5365, %5330, %5319
  %5371 = icmp eq i32 %5322, %5
  br i1 %5371, label %5513, label %5238, !llvm.loop !1479

5372:                                             ; preds = %5221, %5509
  %5373 = phi double [ %4908, %5221 ], [ %5457, %5509 ]
  %5374 = phi i32 [ 0, %5221 ], [ %5458, %5509 ]
  %5375 = load i32, ptr %6, align 4, !tbaa !6
  br i1 %5222, label %5376, label %5445

5376:                                             ; preds = %5372, %5435
  %5377 = phi i32 [ %5444, %5435 ], [ 0, %5372 ]
  %5378 = phi i64 [ %5386, %5435 ], [ %5226, %5372 ]
  %5379 = phi i64 [ %5443, %5435 ], [ %5225, %5372 ]
  %5380 = phi i32 [ %5441, %5435 ], [ %5375, %5372 ]
  %5381 = sub i32 %5224, %5377
  %5382 = tail call i32 @llvm.smin.i32(i32 %5381, i32 0)
  %5383 = sub i32 %5381, %5382
  %5384 = zext i32 %5383 to i64
  %5385 = add nuw nsw i64 %5384, 1
  %5386 = add nsw i64 %5378, -1
  %5387 = icmp ult i32 %5383, 31
  br i1 %5387, label %5423, label %5388

5388:                                             ; preds = %5376
  %5389 = and i64 %5385, 8589934560
  %5390 = sub i64 %5379, %5389
  br label %5391

5391:                                             ; preds = %5391, %5388
  %5392 = phi i64 [ 0, %5388 ], [ %5415, %5391 ]
  %5393 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5388 ], [ %5411, %5391 ]
  %5394 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5388 ], [ %5412, %5391 ]
  %5395 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5388 ], [ %5413, %5391 ]
  %5396 = phi <8 x i32> [ <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>, %5388 ], [ %5414, %5391 ]
  %5397 = sub i64 %5379, %5392
  %5398 = getelementptr inbounds i32, ptr %11, i64 %5397
  %5399 = getelementptr inbounds i32, ptr %5398, i64 -7
  %5400 = load <8 x i32>, ptr %5399, align 4, !tbaa !6
  %5401 = shufflevector <8 x i32> %5400, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5402 = getelementptr inbounds i32, ptr %5398, i64 -15
  %5403 = load <8 x i32>, ptr %5402, align 4, !tbaa !6
  %5404 = shufflevector <8 x i32> %5403, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5405 = getelementptr inbounds i32, ptr %5398, i64 -23
  %5406 = load <8 x i32>, ptr %5405, align 4, !tbaa !6
  %5407 = shufflevector <8 x i32> %5406, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5408 = getelementptr inbounds i32, ptr %5398, i64 -31
  %5409 = load <8 x i32>, ptr %5408, align 4, !tbaa !6
  %5410 = shufflevector <8 x i32> %5409, <8 x i32> poison, <8 x i32> <i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %5411 = mul <8 x i32> %5401, %5393
  %5412 = mul <8 x i32> %5404, %5394
  %5413 = mul <8 x i32> %5407, %5395
  %5414 = mul <8 x i32> %5410, %5396
  %5415 = add nuw i64 %5392, 32
  %5416 = icmp eq i64 %5415, %5389
  br i1 %5416, label %5417, label %5391, !llvm.loop !1480

5417:                                             ; preds = %5391
  %5418 = mul <8 x i32> %5412, %5411
  %5419 = mul <8 x i32> %5413, %5418
  %5420 = mul <8 x i32> %5414, %5419
  %5421 = tail call i32 @llvm.vector.reduce.mul.v8i32(<8 x i32> %5420)
  %5422 = icmp eq i64 %5385, %5389
  br i1 %5422, label %5435, label %5423

5423:                                             ; preds = %5376, %5417
  %5424 = phi i64 [ %5379, %5376 ], [ %5390, %5417 ]
  %5425 = phi i32 [ 1, %5376 ], [ %5421, %5417 ]
  br label %5426

5426:                                             ; preds = %5423, %5426
  %5427 = phi i64 [ %5432, %5426 ], [ %5424, %5423 ]
  %5428 = phi i32 [ %5431, %5426 ], [ %5425, %5423 ]
  %5429 = getelementptr inbounds i32, ptr %11, i64 %5427
  %5430 = load i32, ptr %5429, align 4, !tbaa !6
  %5431 = mul nsw i32 %5430, %5428
  %5432 = add nsw i64 %5427, -1
  %5433 = trunc i64 %5427 to i32
  %5434 = icmp sgt i32 %5433, 0
  br i1 %5434, label %5426, label %5435, !llvm.loop !1481

5435:                                             ; preds = %5426, %5417
  %5436 = phi i32 [ %5421, %5417 ], [ %5431, %5426 ]
  %5437 = and i64 %5386, 4294967295
  %5438 = getelementptr inbounds i32, ptr %6, i64 %5437
  %5439 = load i32, ptr %5438, align 4, !tbaa !6
  %5440 = mul nsw i32 %5439, %5436
  %5441 = add nsw i32 %5440, %5380
  %5442 = icmp sgt i64 %5378, 2
  %5443 = add nsw i64 %5379, -1
  %5444 = add i32 %5377, 1
  br i1 %5442, label %5376, label %5445, !llvm.loop !1482

5445:                                             ; preds = %5435, %5372
  %5446 = phi i32 [ %5375, %5372 ], [ %5441, %5435 ]
  %5447 = icmp slt i32 %5446, %5
  br i1 %5447, label %5450, label %5448

5448:                                             ; preds = %5445
  %5449 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2012, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.3) #3
  br label %5518

5450:                                             ; preds = %5445
  %5451 = sext i32 %5446 to i64
  %5452 = getelementptr inbounds double, ptr %4905, i64 %5451
  %5453 = load double, ptr %5452, align 8, !tbaa !19
  %5454 = fcmp fast olt double %5373, %5453
  br i1 %5454, label %5455, label %5456

5455:                                             ; preds = %5450
  store double %5453, ptr %4907, align 8, !tbaa !19
  br label %5456

5456:                                             ; preds = %5455, %5450
  %5457 = phi double [ %5453, %5455 ], [ %5373, %5450 ]
  %5458 = add nuw nsw i32 %5374, 1
  br i1 %5223, label %5459, label %5509

5459:                                             ; preds = %5456
  %5460 = load i32, ptr %4, align 4, !tbaa !6
  %5461 = load i32, ptr %12, align 4, !tbaa !6
  %5462 = add nsw i32 %5461, -1
  %5463 = icmp slt i32 %5460, %5462
  br i1 %5463, label %5486, label %5464

5464:                                             ; preds = %5459
  %5465 = icmp eq i32 %5460, %5462
  br i1 %5465, label %5466, label %5502

5466:                                             ; preds = %5464
  store i32 0, ptr %4, align 4, !tbaa !6
  %5467 = load i32, ptr %8, align 4, !tbaa !6
  store i32 %5467, ptr %6, align 4, !tbaa !6
  br i1 %5228, label %5509, label %5468

5468:                                             ; preds = %5466, %5496
  %5469 = phi i64 [ %5500, %5496 ], [ 1, %5466 ]
  %5470 = getelementptr inbounds i32, ptr %4, i64 %5469
  %5471 = load i32, ptr %5470, align 4, !tbaa !6
  %5472 = getelementptr inbounds i32, ptr %12, i64 %5469
  %5473 = load i32, ptr %5472, align 4, !tbaa !6
  %5474 = add nsw i32 %5473, -1
  %5475 = icmp slt i32 %5471, %5474
  br i1 %5475, label %5476, label %5494

5476:                                             ; preds = %5468
  br i1 %5463, label %5486, label %5477

5477:                                             ; preds = %5476
  %5478 = shl i64 %5469, 32
  %5479 = add i64 %5478, -4294967296
  %5480 = ashr exact i64 %5479, 32
  %5481 = getelementptr inbounds i32, ptr %7, i64 %5480
  %5482 = load i32, ptr %5481, align 4, !tbaa !6
  %5483 = getelementptr inbounds i32, ptr %6, i64 %5469
  %5484 = load i32, ptr %5483, align 4, !tbaa !6
  %5485 = add nsw i32 %5484, %5482
  store i32 %5485, ptr %5483, align 4, !tbaa !6
  br label %5504

5486:                                             ; preds = %5459, %5476
  %5487 = phi i32 [ %5471, %5476 ], [ %5460, %5459 ]
  %5488 = phi ptr [ %5470, %5476 ], [ %4, %5459 ]
  %5489 = phi i64 [ %5469, %5476 ], [ 0, %5459 ]
  %5490 = add nsw i32 %5487, 1
  store i32 %5490, ptr %5488, align 4, !tbaa !6
  %5491 = getelementptr inbounds i32, ptr %7, i64 %5489
  %5492 = load i32, ptr %5491, align 4, !tbaa !6
  %5493 = getelementptr inbounds i32, ptr %6, i64 %5489
  br label %5504

5494:                                             ; preds = %5468
  %5495 = icmp eq i32 %5471, %5474
  br i1 %5495, label %5496, label %5502

5496:                                             ; preds = %5494
  store i32 0, ptr %5470, align 4, !tbaa !6
  %5497 = getelementptr inbounds i32, ptr %8, i64 %5469
  %5498 = load i32, ptr %5497, align 4, !tbaa !6
  %5499 = getelementptr inbounds i32, ptr %6, i64 %5469
  store i32 %5498, ptr %5499, align 4, !tbaa !6
  %5500 = add nuw nsw i64 %5469, 1
  %5501 = icmp eq i64 %5500, %5226
  br i1 %5501, label %5509, label %5468, !llvm.loop !1483

5502:                                             ; preds = %5464, %5494
  %5503 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2012, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.2) #3
  br label %5518

5504:                                             ; preds = %5477, %5486
  %5505 = phi ptr [ %5493, %5486 ], [ %5470, %5477 ]
  %5506 = phi i32 [ %5492, %5486 ], [ 1, %5477 ]
  %5507 = load i32, ptr %5505, align 4, !tbaa !6
  %5508 = add nsw i32 %5507, %5506
  store i32 %5508, ptr %5505, align 4, !tbaa !6
  br label %5509

5509:                                             ; preds = %5496, %5504, %5466, %5456
  %5510 = icmp eq i32 %5458, %5
  br i1 %5510, label %5513, label %5372, !llvm.loop !1484

5511:                                             ; preds = %4914
  %5512 = tail call i32 @CCTK_Warn(i32 noundef 1, i32 noundef 2012, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, ptr noundef nonnull @.str.4) #3
  br label %5513

5513:                                             ; preds = %5509, %5370, %5213, %5074, %4899, %4759, %4601, %4461, %4288, %4149, %3992, %3853, %3678, %3538, %3380, %3240, %3067, %2928, %2771, %2632, %2460, %2320, %2162, %2022, %1849, %1710, %1553, %1414, %1237, %1098, %941, %802, %630, %491, %334, %195, %5220, %5229, %4920, %4929, %4608, %4617, %4306, %4315, %3999, %4008, %3699, %3708, %3387, %3396, %3085, %3094, %2778, %2787, %2478, %2487, %2169, %2178, %1867, %1876, %1560, %1569, %1260, %1269, %948, %957, %648, %657, %341, %350, %41, %50, %4913, %4910, %5511, %4292, %4901, %3692, %3689, %4290, %3071, %3680, %2464, %3069, %1853, %2462, %1253, %1249, %1851, %634, %1239, %34, %30, %632, %18
  %5514 = phi double [ 0.000000e+00, %18 ], [ 0.000000e+00, %632 ], [ 0.000000e+00, %30 ], [ 0.000000e+00, %34 ], [ 0.000000e+00, %634 ], [ 0.000000e+00, %1239 ], [ 0.000000e+00, %1851 ], [ 0.000000e+00, %1249 ], [ 0.000000e+00, %1253 ], [ 0.000000e+00, %1853 ], [ 0.000000e+00, %2462 ], [ 0.000000e+00, %2464 ], [ 0.000000e+00, %3069 ], [ 0.000000e+00, %3071 ], [ 0.000000e+00, %3680 ], [ 0.000000e+00, %4290 ], [ 0.000000e+00, %3689 ], [ 0.000000e+00, %3692 ], [ 0.000000e+00, %4292 ], [ 0.000000e+00, %4901 ], [ 0.000000e+00, %5511 ], [ 0.000000e+00, %4910 ], [ 0.000000e+00, %4913 ], [ 0.000000e+00, %50 ], [ 0.000000e+00, %41 ], [ 0.000000e+00, %350 ], [ 0.000000e+00, %341 ], [ 0.000000e+00, %657 ], [ 0.000000e+00, %648 ], [ 0.000000e+00, %957 ], [ 0.000000e+00, %948 ], [ 0.000000e+00, %1269 ], [ 0.000000e+00, %1260 ], [ 0.000000e+00, %1569 ], [ 0.000000e+00, %1560 ], [ 0.000000e+00, %1876 ], [ 0.000000e+00, %1867 ], [ 0.000000e+00, %2178 ], [ 0.000000e+00, %2169 ], [ 0.000000e+00, %2487 ], [ 0.000000e+00, %2478 ], [ 0.000000e+00, %2787 ], [ 0.000000e+00, %2778 ], [ 0.000000e+00, %3094 ], [ 0.000000e+00, %3085 ], [ 0.000000e+00, %3396 ], [ 0.000000e+00, %3387 ], [ 0.000000e+00, %3708 ], [ 0.000000e+00, %3699 ], [ 0.000000e+00, %4008 ], [ 0.000000e+00, %3999 ], [ 0.000000e+00, %4315 ], [ 0.000000e+00, %4306 ], [ 0.000000e+00, %4617 ], [ 0.000000e+00, %4608 ], [ 0.000000e+00, %4929 ], [ 0.000000e+00, %4920 ], [ 0.000000e+00, %5229 ], [ 0.000000e+00, %5220 ], [ %146, %195 ], [ 0.000000e+00, %334 ], [ %442, %491 ], [ 0.000000e+00, %630 ], [ %753, %802 ], [ 0.000000e+00, %941 ], [ %1049, %1098 ], [ 0.000000e+00, %1237 ], [ %1365, %1414 ], [ 0.000000e+00, %1553 ], [ %1661, %1710 ], [ 0.000000e+00, %1849 ], [ %1973, %2022 ], [ 0.000000e+00, %2162 ], [ %2271, %2320 ], [ 0.000000e+00, %2460 ], [ %2583, %2632 ], [ 0.000000e+00, %2771 ], [ %2879, %2928 ], [ 0.000000e+00, %3067 ], [ %3191, %3240 ], [ 0.000000e+00, %3380 ], [ %3489, %3538 ], [ 0.000000e+00, %3678 ], [ %3804, %3853 ], [ 0.000000e+00, %3992 ], [ %4100, %4149 ], [ 0.000000e+00, %4288 ], [ %4412, %4461 ], [ 0.000000e+00, %4601 ], [ %4710, %4759 ], [ 0.000000e+00, %4899 ], [ %5025, %5074 ], [ 0.000000e+00, %5213 ], [ %5321, %5370 ], [ 0.000000e+00, %5509 ]
  %5515 = phi i32 [ %10, %18 ], [ 1, %632 ], [ 1, %30 ], [ 1, %34 ], [ 1, %634 ], [ 1, %1239 ], [ 1, %1851 ], [ 1, %1249 ], [ 1, %1253 ], [ 1, %1853 ], [ 1, %2462 ], [ 1, %2464 ], [ 1, %3069 ], [ 1, %3071 ], [ 1, %3680 ], [ 1, %4290 ], [ 1, %3689 ], [ 1, %3692 ], [ 1, %4292 ], [ 1, %4901 ], [ 1, %5511 ], [ 1, %4910 ], [ 1, %4913 ], [ 1, %50 ], [ 1, %41 ], [ 1, %350 ], [ 1, %341 ], [ 1, %657 ], [ 1, %648 ], [ 1, %957 ], [ 1, %948 ], [ 1, %1269 ], [ 1, %1260 ], [ 1, %1569 ], [ 1, %1560 ], [ 1, %1876 ], [ 1, %1867 ], [ 1, %2178 ], [ 1, %2169 ], [ 1, %2487 ], [ 1, %2478 ], [ 1, %2787 ], [ 1, %2778 ], [ 1, %3094 ], [ 1, %3085 ], [ 1, %3396 ], [ 1, %3387 ], [ 1, %3708 ], [ 1, %3699 ], [ 1, %4008 ], [ 1, %3999 ], [ 1, %4315 ], [ 1, %4306 ], [ 1, %4617 ], [ 1, %4608 ], [ 1, %4929 ], [ 1, %4920 ], [ 1, %5229 ], [ 1, %5220 ], [ %57, %195 ], [ %48, %334 ], [ %357, %491 ], [ %348, %630 ], [ %664, %802 ], [ %655, %941 ], [ %964, %1098 ], [ %955, %1237 ], [ %1276, %1414 ], [ %1267, %1553 ], [ %1576, %1710 ], [ %1567, %1849 ], [ %1883, %2022 ], [ %1874, %2162 ], [ %2185, %2320 ], [ %2176, %2460 ], [ %2494, %2632 ], [ %2485, %2771 ], [ %2794, %2928 ], [ %2785, %3067 ], [ %3101, %3240 ], [ %3092, %3380 ], [ %3403, %3538 ], [ %3394, %3678 ], [ %3715, %3853 ], [ %3706, %3992 ], [ %4015, %4149 ], [ %4006, %4288 ], [ %4322, %4461 ], [ %4313, %4601 ], [ %4624, %4759 ], [ %4615, %4899 ], [ %4936, %5074 ], [ %4927, %5213 ], [ %5236, %5370 ], [ %5227, %5509 ]
  %5516 = tail call i32 @Util_TableSetInt(i32 noundef %17, i32 noundef %5515, ptr noundef nonnull @.str.5) #3
  %5517 = tail call i32 @Util_TableSetReal(i32 noundef %17, double noundef nofpclass(nan inf) %5514, ptr noundef nonnull @.str.6) #3
  br label %5518

5518:                                             ; preds = %5067, %5152, %5206, %5363, %5448, %5502, %4454, %4539, %4594, %4752, %4837, %4892, %3846, %3931, %3985, %4142, %4227, %4281, %3233, %3318, %3373, %3531, %3616, %3671, %2625, %2709, %2764, %2921, %3005, %3060, %2015, %2100, %2155, %2313, %2398, %2453, %1407, %1491, %1546, %1703, %1787, %1842, %795, %879, %934, %1091, %1175, %1230, %188, %272, %327, %484, %568, %623, %5513
  %5519 = phi i32 [ 0, %5513 ], [ -1, %623 ], [ -1, %568 ], [ -1, %484 ], [ -1, %327 ], [ -1, %272 ], [ -1, %188 ], [ -1, %1230 ], [ -1, %1175 ], [ -1, %1091 ], [ -1, %934 ], [ -1, %879 ], [ -1, %795 ], [ -1, %1842 ], [ -1, %1787 ], [ -1, %1703 ], [ -1, %1546 ], [ -1, %1491 ], [ -1, %1407 ], [ -1, %2453 ], [ -1, %2398 ], [ -1, %2313 ], [ -1, %2155 ], [ -1, %2100 ], [ -1, %2015 ], [ -1, %3060 ], [ -1, %3005 ], [ -1, %2921 ], [ -1, %2764 ], [ -1, %2709 ], [ -1, %2625 ], [ -1, %3671 ], [ -1, %3616 ], [ -1, %3531 ], [ -1, %3373 ], [ -1, %3318 ], [ -1, %3233 ], [ -1, %4281 ], [ -1, %4227 ], [ -1, %4142 ], [ -1, %3985 ], [ -1, %3931 ], [ -1, %3846 ], [ -1, %4892 ], [ -1, %4837 ], [ -1, %4752 ], [ -1, %4594 ], [ -1, %4539 ], [ -1, %4454 ], [ -1, %5502 ], [ -1, %5448 ], [ -1, %5363 ], [ -1, %5206 ], [ -1, %5152 ], [ -1, %5067 ]
  ret i32 %5519
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.vector.reduce.mul.v8i32(<8 x i32>) #2

attributes #0 = { nounwind sspstrong uwtable "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #1 = { "approx-func-fp-math"="true" "denormal-fp-math"="preserve-sign,preserve-sign" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cmov,+crc32,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "tune-cpu"="generic" "unsafe-fp-math"="true" }
attributes #2 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1, !2, !3, !4}
!llvm.ident = !{!5}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"openmp", i32 51}
!2 = !{i32 8, !"PIC Level", i32 2}
!3 = !{i32 7, !"PIE Level", i32 2}
!4 = !{i32 7, !"uwtable", i32 2}
!5 = !{!"clang version 17.0.6"}
!6 = !{!7, !7, i64 0}
!7 = !{!"int", !8, i64 0}
!8 = !{!"omnipotent char", !9, i64 0}
!9 = !{!"Simple C/C++ TBAA"}
!10 = !{!11, !11, i64 0}
!11 = !{!"any pointer", !8, i64 0}
!12 = !{!8, !8, i64 0}
!13 = distinct !{!13, !14, !15, !16}
!14 = !{!"llvm.loop.mustprogress"}
!15 = !{!"llvm.loop.isvectorized", i32 1}
!16 = !{!"llvm.loop.unroll.runtime.disable"}
!17 = distinct !{!17, !14, !16, !15}
!18 = distinct !{!18, !14}
!19 = !{!20, !20, i64 0}
!20 = !{!"double", !8, i64 0}
!21 = distinct !{!21, !14, !22}
!22 = !{!"llvm.loop.peeled.count", i32 1}
!23 = distinct !{!23, !14}
!24 = distinct !{!24, !14, !15, !16}
!25 = distinct !{!25, !14, !16, !15}
!26 = distinct !{!26, !14}
!27 = distinct !{!27, !14, !22}
!28 = distinct !{!28, !14}
!29 = distinct !{!29, !14, !15, !16}
!30 = distinct !{!30, !14, !16, !15}
!31 = distinct !{!31, !14}
!32 = distinct !{!32, !14, !22}
!33 = distinct !{!33, !14}
!34 = distinct !{!34, !14, !15, !16}
!35 = distinct !{!35, !14, !16, !15}
!36 = distinct !{!36, !14}
!37 = distinct !{!37, !14, !22}
!38 = distinct !{!38, !14}
!39 = distinct !{!39, !14, !15, !16}
!40 = distinct !{!40, !14, !16, !15}
!41 = distinct !{!41, !14}
!42 = distinct !{!42, !14, !22}
!43 = distinct !{!43, !14}
!44 = distinct !{!44, !14, !15, !16}
!45 = distinct !{!45, !14, !16, !15}
!46 = distinct !{!46, !14}
!47 = distinct !{!47, !14, !22}
!48 = distinct !{!48, !14}
!49 = distinct !{!49, !14, !15, !16}
!50 = distinct !{!50, !14, !16, !15}
!51 = distinct !{!51, !14}
!52 = distinct !{!52, !14, !22}
!53 = distinct !{!53, !14}
!54 = distinct !{!54, !14, !15, !16}
!55 = distinct !{!55, !14, !16, !15}
!56 = distinct !{!56, !14}
!57 = distinct !{!57, !14, !22}
!58 = distinct !{!58, !14}
!59 = distinct !{!59, !14, !15, !16}
!60 = distinct !{!60, !14, !16, !15}
!61 = distinct !{!61, !14}
!62 = distinct !{!62, !14, !22}
!63 = distinct !{!63, !14}
!64 = distinct !{!64, !14, !15, !16}
!65 = distinct !{!65, !14, !16, !15}
!66 = distinct !{!66, !14}
!67 = distinct !{!67, !14, !22}
!68 = distinct !{!68, !14}
!69 = distinct !{!69, !14, !15, !16}
!70 = distinct !{!70, !14, !16, !15}
!71 = distinct !{!71, !14}
!72 = distinct !{!72, !14, !22}
!73 = distinct !{!73, !14}
!74 = distinct !{!74, !14, !15, !16}
!75 = distinct !{!75, !14, !16, !15}
!76 = distinct !{!76, !14}
!77 = distinct !{!77, !14, !22}
!78 = distinct !{!78, !14}
!79 = !{!80, !80, i64 0}
!80 = !{!"short", !8, i64 0}
!81 = distinct !{!81, !14, !15, !16}
!82 = distinct !{!82, !14, !16, !15}
!83 = distinct !{!83, !14}
!84 = distinct !{!84, !14, !22}
!85 = distinct !{!85, !14}
!86 = distinct !{!86, !14, !15, !16}
!87 = distinct !{!87, !14, !16, !15}
!88 = distinct !{!88, !14}
!89 = distinct !{!89, !14, !22}
!90 = distinct !{!90, !14}
!91 = distinct !{!91, !14, !15, !16}
!92 = distinct !{!92, !14, !16, !15}
!93 = distinct !{!93, !14}
!94 = distinct !{!94, !14, !22}
!95 = distinct !{!95, !14}
!96 = distinct !{!96, !14, !15, !16}
!97 = distinct !{!97, !14, !16, !15}
!98 = distinct !{!98, !14}
!99 = distinct !{!99, !14, !22}
!100 = distinct !{!100, !14}
!101 = distinct !{!101, !14, !15, !16}
!102 = distinct !{!102, !14, !16, !15}
!103 = distinct !{!103, !14}
!104 = distinct !{!104, !14, !22}
!105 = distinct !{!105, !14}
!106 = distinct !{!106, !14, !15, !16}
!107 = distinct !{!107, !14, !16, !15}
!108 = distinct !{!108, !14}
!109 = distinct !{!109, !14, !22}
!110 = distinct !{!110, !14}
!111 = distinct !{!111, !14, !15, !16}
!112 = distinct !{!112, !14, !16, !15}
!113 = distinct !{!113, !14}
!114 = distinct !{!114, !14, !22}
!115 = distinct !{!115, !14}
!116 = distinct !{!116, !14, !15, !16}
!117 = distinct !{!117, !14, !16, !15}
!118 = distinct !{!118, !14}
!119 = distinct !{!119, !14, !22}
!120 = distinct !{!120, !14}
!121 = !{!122, !122, i64 0}
!122 = !{!"long", !8, i64 0}
!123 = distinct !{!123, !14, !15, !16}
!124 = distinct !{!124, !14, !16, !15}
!125 = distinct !{!125, !14}
!126 = distinct !{!126, !14, !22}
!127 = distinct !{!127, !14}
!128 = distinct !{!128, !14, !15, !16}
!129 = distinct !{!129, !14, !16, !15}
!130 = distinct !{!130, !14}
!131 = distinct !{!131, !14, !22}
!132 = distinct !{!132, !14}
!133 = distinct !{!133, !14, !15, !16}
!134 = distinct !{!134, !14, !16, !15}
!135 = distinct !{!135, !14}
!136 = distinct !{!136, !14, !22}
!137 = distinct !{!137, !14}
!138 = distinct !{!138, !14, !15, !16}
!139 = distinct !{!139, !14, !16, !15}
!140 = distinct !{!140, !14}
!141 = distinct !{!141, !14, !22}
!142 = distinct !{!142, !14}
!143 = distinct !{!143, !14, !15, !16}
!144 = distinct !{!144, !14, !16, !15}
!145 = distinct !{!145, !14}
!146 = distinct !{!146, !14, !22}
!147 = distinct !{!147, !14}
!148 = distinct !{!148, !14, !15, !16}
!149 = distinct !{!149, !14, !16, !15}
!150 = distinct !{!150, !14}
!151 = distinct !{!151, !14, !22}
!152 = distinct !{!152, !14}
!153 = distinct !{!153, !14, !15, !16}
!154 = distinct !{!154, !14, !16, !15}
!155 = distinct !{!155, !14}
!156 = distinct !{!156, !14, !22}
!157 = distinct !{!157, !14}
!158 = distinct !{!158, !14, !15, !16}
!159 = distinct !{!159, !14, !16, !15}
!160 = distinct !{!160, !14}
!161 = distinct !{!161, !14, !22}
!162 = distinct !{!162, !14}
!163 = !{!164, !164, i64 0}
!164 = !{!"float", !8, i64 0}
!165 = distinct !{!165, !14, !15, !16}
!166 = distinct !{!166, !14, !16, !15}
!167 = distinct !{!167, !14}
!168 = distinct !{!168, !14, !22}
!169 = distinct !{!169, !14}
!170 = distinct !{!170, !14, !15, !16}
!171 = distinct !{!171, !14, !16, !15}
!172 = distinct !{!172, !14}
!173 = distinct !{!173, !14, !22}
!174 = distinct !{!174, !14}
!175 = distinct !{!175, !14, !15, !16}
!176 = distinct !{!176, !14, !16, !15}
!177 = distinct !{!177, !14}
!178 = distinct !{!178, !14, !22}
!179 = distinct !{!179, !14}
!180 = distinct !{!180, !14, !15, !16}
!181 = distinct !{!181, !14, !16, !15}
!182 = distinct !{!182, !14}
!183 = distinct !{!183, !14, !22}
!184 = distinct !{!184, !14}
!185 = distinct !{!185, !14, !15, !16}
!186 = distinct !{!186, !14, !16, !15}
!187 = distinct !{!187, !14}
!188 = distinct !{!188, !14, !22}
!189 = distinct !{!189, !14}
!190 = distinct !{!190, !14, !15, !16}
!191 = distinct !{!191, !14, !16, !15}
!192 = distinct !{!192, !14}
!193 = distinct !{!193, !14, !22}
!194 = distinct !{!194, !14}
!195 = distinct !{!195, !14, !15, !16}
!196 = distinct !{!196, !14, !16, !15}
!197 = distinct !{!197, !14}
!198 = distinct !{!198, !14, !22}
!199 = distinct !{!199, !14}
!200 = distinct !{!200, !14, !15, !16}
!201 = distinct !{!201, !14, !16, !15}
!202 = distinct !{!202, !14}
!203 = distinct !{!203, !14, !22}
!204 = distinct !{!204, !14}
!205 = distinct !{!205, !14, !15, !16}
!206 = distinct !{!206, !14, !16, !15}
!207 = distinct !{!207, !14}
!208 = distinct !{!208, !14, !22}
!209 = distinct !{!209, !14}
!210 = distinct !{!210, !14, !15, !16}
!211 = distinct !{!211, !14, !16, !15}
!212 = distinct !{!212, !14}
!213 = distinct !{!213, !14, !22}
!214 = distinct !{!214, !14}
!215 = distinct !{!215, !14, !15, !16}
!216 = distinct !{!216, !14, !16, !15}
!217 = distinct !{!217, !14}
!218 = distinct !{!218, !14, !22}
!219 = distinct !{!219, !14}
!220 = distinct !{!220, !14, !15, !16}
!221 = distinct !{!221, !14, !16, !15}
!222 = distinct !{!222, !14}
!223 = distinct !{!223, !14, !22}
!224 = distinct !{!224, !14}
!225 = distinct !{!225, !14, !15, !16}
!226 = distinct !{!226, !14, !16, !15}
!227 = distinct !{!227, !14}
!228 = distinct !{!228, !14, !22}
!229 = distinct !{!229, !14}
!230 = distinct !{!230, !14, !15, !16}
!231 = distinct !{!231, !14, !16, !15}
!232 = distinct !{!232, !14}
!233 = distinct !{!233, !14, !22}
!234 = distinct !{!234, !14}
!235 = distinct !{!235, !14, !15, !16}
!236 = distinct !{!236, !14, !16, !15}
!237 = distinct !{!237, !14}
!238 = distinct !{!238, !14, !22}
!239 = distinct !{!239, !14}
!240 = distinct !{!240, !14, !15, !16}
!241 = distinct !{!241, !14, !16, !15}
!242 = distinct !{!242, !14}
!243 = distinct !{!243, !14, !22}
!244 = distinct !{!244, !14}
!245 = distinct !{!245, !14, !15, !16}
!246 = distinct !{!246, !14, !16, !15}
!247 = distinct !{!247, !14}
!248 = distinct !{!248, !14, !22}
!249 = distinct !{!249, !14}
!250 = distinct !{!250, !14, !15, !16}
!251 = distinct !{!251, !14, !16, !15}
!252 = distinct !{!252, !14}
!253 = distinct !{!253, !14, !22}
!254 = distinct !{!254, !14}
!255 = distinct !{!255, !14, !15, !16}
!256 = distinct !{!256, !14, !16, !15}
!257 = distinct !{!257, !14}
!258 = distinct !{!258, !14, !22}
!259 = distinct !{!259, !14}
!260 = distinct !{!260, !14, !15, !16}
!261 = distinct !{!261, !14, !16, !15}
!262 = distinct !{!262, !14}
!263 = distinct !{!263, !14, !22}
!264 = distinct !{!264, !14}
!265 = distinct !{!265, !14, !15, !16}
!266 = distinct !{!266, !14, !16, !15}
!267 = distinct !{!267, !14}
!268 = distinct !{!268, !14, !22}
!269 = distinct !{!269, !14}
!270 = distinct !{!270, !14, !15, !16}
!271 = distinct !{!271, !14, !16, !15}
!272 = distinct !{!272, !14}
!273 = distinct !{!273, !14, !22}
!274 = distinct !{!274, !14}
!275 = distinct !{!275, !14, !15, !16}
!276 = distinct !{!276, !14, !16, !15}
!277 = distinct !{!277, !14}
!278 = distinct !{!278, !14, !22}
!279 = distinct !{!279, !14}
!280 = distinct !{!280, !14, !15, !16}
!281 = distinct !{!281, !14, !16, !15}
!282 = distinct !{!282, !14}
!283 = distinct !{!283, !14, !22}
!284 = distinct !{!284, !14}
!285 = distinct !{!285, !14, !15, !16}
!286 = distinct !{!286, !14, !16, !15}
!287 = distinct !{!287, !14}
!288 = distinct !{!288, !14, !22}
!289 = distinct !{!289, !14}
!290 = distinct !{!290, !14, !15, !16}
!291 = distinct !{!291, !14, !16, !15}
!292 = distinct !{!292, !14}
!293 = distinct !{!293, !14, !22}
!294 = distinct !{!294, !14}
!295 = distinct !{!295, !14, !15, !16}
!296 = distinct !{!296, !14, !16, !15}
!297 = distinct !{!297, !14}
!298 = distinct !{!298, !14, !22}
!299 = distinct !{!299, !14}
!300 = distinct !{!300, !14, !15, !16}
!301 = distinct !{!301, !14, !16, !15}
!302 = distinct !{!302, !14}
!303 = distinct !{!303, !14, !22}
!304 = distinct !{!304, !14}
!305 = distinct !{!305, !14, !15, !16}
!306 = distinct !{!306, !14, !16, !15}
!307 = distinct !{!307, !14}
!308 = distinct !{!308, !14, !22}
!309 = distinct !{!309, !14}
!310 = distinct !{!310, !14, !15, !16}
!311 = distinct !{!311, !14, !16, !15}
!312 = distinct !{!312, !14}
!313 = distinct !{!313, !14, !22}
!314 = distinct !{!314, !14}
!315 = distinct !{!315, !14, !15, !16}
!316 = distinct !{!316, !14, !16, !15}
!317 = distinct !{!317, !14}
!318 = distinct !{!318, !14, !22}
!319 = distinct !{!319, !14}
!320 = distinct !{!320, !14, !15, !16}
!321 = distinct !{!321, !14, !16, !15}
!322 = distinct !{!322, !14}
!323 = distinct !{!323, !14, !22}
!324 = distinct !{!324, !14}
!325 = distinct !{!325, !14, !15, !16}
!326 = distinct !{!326, !14, !16, !15}
!327 = distinct !{!327, !14}
!328 = distinct !{!328, !14, !22}
!329 = distinct !{!329, !14}
!330 = distinct !{!330, !14, !15, !16}
!331 = distinct !{!331, !14, !16, !15}
!332 = distinct !{!332, !14}
!333 = distinct !{!333, !14, !22}
!334 = distinct !{!334, !14}
!335 = distinct !{!335, !14, !15, !16}
!336 = distinct !{!336, !14, !16, !15}
!337 = distinct !{!337, !14}
!338 = distinct !{!338, !14, !22}
!339 = distinct !{!339, !14}
!340 = distinct !{!340, !14, !15, !16}
!341 = distinct !{!341, !14, !16, !15}
!342 = distinct !{!342, !14}
!343 = distinct !{!343, !14, !22}
!344 = distinct !{!344, !14}
!345 = distinct !{!345, !14, !15, !16}
!346 = distinct !{!346, !14, !16, !15}
!347 = distinct !{!347, !14}
!348 = distinct !{!348, !14, !22}
!349 = distinct !{!349, !14}
!350 = distinct !{!350, !14, !15, !16}
!351 = distinct !{!351, !14, !16, !15}
!352 = distinct !{!352, !14}
!353 = distinct !{!353, !14, !22}
!354 = distinct !{!354, !14}
!355 = distinct !{!355, !14, !15, !16}
!356 = distinct !{!356, !14, !16, !15}
!357 = distinct !{!357, !14}
!358 = distinct !{!358, !14, !22}
!359 = distinct !{!359, !14}
!360 = distinct !{!360, !14, !15, !16}
!361 = distinct !{!361, !14, !16, !15}
!362 = distinct !{!362, !14}
!363 = distinct !{!363, !14, !22}
!364 = distinct !{!364, !14}
!365 = distinct !{!365, !14, !15, !16}
!366 = distinct !{!366, !14, !16, !15}
!367 = distinct !{!367, !14}
!368 = distinct !{!368, !14, !22}
!369 = distinct !{!369, !14}
!370 = distinct !{!370, !14, !15, !16}
!371 = distinct !{!371, !14, !16, !15}
!372 = distinct !{!372, !14}
!373 = distinct !{!373, !14, !22}
!374 = distinct !{!374, !14}
!375 = distinct !{!375, !14, !15, !16}
!376 = distinct !{!376, !14, !16, !15}
!377 = distinct !{!377, !14}
!378 = distinct !{!378, !14, !22}
!379 = distinct !{!379, !14}
!380 = distinct !{!380, !14, !15, !16}
!381 = distinct !{!381, !14, !16, !15}
!382 = distinct !{!382, !14}
!383 = distinct !{!383, !14, !22}
!384 = distinct !{!384, !14}
!385 = distinct !{!385, !14, !15, !16}
!386 = distinct !{!386, !14, !16, !15}
!387 = distinct !{!387, !14}
!388 = distinct !{!388, !14, !22}
!389 = distinct !{!389, !14}
!390 = distinct !{!390, !14, !15, !16}
!391 = distinct !{!391, !14, !16, !15}
!392 = distinct !{!392, !14}
!393 = distinct !{!393, !14, !22}
!394 = distinct !{!394, !14}
!395 = distinct !{!395, !14, !15, !16}
!396 = distinct !{!396, !14, !16, !15}
!397 = distinct !{!397, !14}
!398 = distinct !{!398, !14, !22}
!399 = distinct !{!399, !14}
!400 = distinct !{!400, !14, !15, !16}
!401 = distinct !{!401, !14, !16, !15}
!402 = distinct !{!402, !14}
!403 = distinct !{!403, !14, !22}
!404 = distinct !{!404, !14}
!405 = distinct !{!405, !14, !15, !16}
!406 = distinct !{!406, !14, !16, !15}
!407 = distinct !{!407, !14}
!408 = distinct !{!408, !14, !22}
!409 = distinct !{!409, !14}
!410 = distinct !{!410, !14, !15, !16}
!411 = distinct !{!411, !14, !16, !15}
!412 = distinct !{!412, !14}
!413 = distinct !{!413, !14, !22}
!414 = distinct !{!414, !14}
!415 = distinct !{!415, !14, !15, !16}
!416 = distinct !{!416, !14, !16, !15}
!417 = distinct !{!417, !14}
!418 = distinct !{!418, !14, !22}
!419 = distinct !{!419, !14}
!420 = distinct !{!420, !14, !15, !16}
!421 = distinct !{!421, !14, !16, !15}
!422 = distinct !{!422, !14}
!423 = distinct !{!423, !14, !22}
!424 = distinct !{!424, !14}
!425 = distinct !{!425, !14, !15, !16}
!426 = distinct !{!426, !14, !16, !15}
!427 = distinct !{!427, !14}
!428 = distinct !{!428, !14, !22}
!429 = distinct !{!429, !14}
!430 = distinct !{!430, !14, !15, !16}
!431 = distinct !{!431, !14, !16, !15}
!432 = distinct !{!432, !14}
!433 = distinct !{!433, !14, !22}
!434 = distinct !{!434, !14}
!435 = distinct !{!435, !14, !15, !16}
!436 = distinct !{!436, !14, !16, !15}
!437 = distinct !{!437, !14}
!438 = distinct !{!438, !14, !22}
!439 = distinct !{!439, !14}
!440 = distinct !{!440, !14, !15, !16}
!441 = distinct !{!441, !14, !16, !15}
!442 = distinct !{!442, !14}
!443 = distinct !{!443, !14, !22}
!444 = distinct !{!444, !14}
!445 = distinct !{!445, !14, !15, !16}
!446 = distinct !{!446, !14, !16, !15}
!447 = distinct !{!447, !14}
!448 = distinct !{!448, !14, !22}
!449 = distinct !{!449, !14}
!450 = distinct !{!450, !14, !15, !16}
!451 = distinct !{!451, !14, !16, !15}
!452 = distinct !{!452, !14}
!453 = distinct !{!453, !14, !22}
!454 = distinct !{!454, !14}
!455 = distinct !{!455, !14, !15, !16}
!456 = distinct !{!456, !14, !16, !15}
!457 = distinct !{!457, !14}
!458 = distinct !{!458, !14, !22}
!459 = distinct !{!459, !14}
!460 = distinct !{!460, !14, !15, !16}
!461 = distinct !{!461, !14, !16, !15}
!462 = distinct !{!462, !14}
!463 = distinct !{!463, !14, !22}
!464 = distinct !{!464, !14}
!465 = distinct !{!465, !14, !15, !16}
!466 = distinct !{!466, !14, !16, !15}
!467 = distinct !{!467, !14}
!468 = distinct !{!468, !14, !22}
!469 = distinct !{!469, !14}
!470 = distinct !{!470, !14, !15, !16}
!471 = distinct !{!471, !14, !16, !15}
!472 = distinct !{!472, !14}
!473 = distinct !{!473, !14, !22}
!474 = distinct !{!474, !14}
!475 = distinct !{!475, !14, !15, !16}
!476 = distinct !{!476, !14, !16, !15}
!477 = distinct !{!477, !14}
!478 = distinct !{!478, !14, !22}
!479 = distinct !{!479, !14}
!480 = distinct !{!480, !14, !15, !16}
!481 = distinct !{!481, !14, !16, !15}
!482 = distinct !{!482, !14}
!483 = distinct !{!483, !14, !22}
!484 = distinct !{!484, !14}
!485 = distinct !{!485, !14, !15, !16}
!486 = distinct !{!486, !14, !16, !15}
!487 = distinct !{!487, !14}
!488 = distinct !{!488, !14, !22}
!489 = distinct !{!489, !14}
!490 = distinct !{!490, !14, !15, !16}
!491 = distinct !{!491, !14, !16, !15}
!492 = distinct !{!492, !14}
!493 = distinct !{!493, !14, !22}
!494 = distinct !{!494, !14}
!495 = distinct !{!495, !14, !15, !16}
!496 = distinct !{!496, !14, !16, !15}
!497 = distinct !{!497, !14}
!498 = distinct !{!498, !14, !22}
!499 = distinct !{!499, !14}
!500 = distinct !{!500, !14, !15, !16}
!501 = distinct !{!501, !14, !16, !15}
!502 = distinct !{!502, !14}
!503 = distinct !{!503, !14, !22}
!504 = distinct !{!504, !14}
!505 = distinct !{!505, !14, !15, !16}
!506 = distinct !{!506, !14, !16, !15}
!507 = distinct !{!507, !14}
!508 = distinct !{!508, !14, !22}
!509 = distinct !{!509, !14}
!510 = distinct !{!510, !14, !15, !16}
!511 = distinct !{!511, !14, !16, !15}
!512 = distinct !{!512, !14}
!513 = distinct !{!513, !14, !22}
!514 = distinct !{!514, !14}
!515 = distinct !{!515, !14, !15, !16}
!516 = distinct !{!516, !14, !16, !15}
!517 = distinct !{!517, !14}
!518 = distinct !{!518, !14, !22}
!519 = distinct !{!519, !14}
!520 = distinct !{!520, !14, !15, !16}
!521 = distinct !{!521, !14, !16, !15}
!522 = distinct !{!522, !14}
!523 = distinct !{!523, !14, !22}
!524 = distinct !{!524, !14}
!525 = distinct !{!525, !14, !15, !16}
!526 = distinct !{!526, !14, !16, !15}
!527 = distinct !{!527, !14}
!528 = distinct !{!528, !14, !22}
!529 = distinct !{!529, !14}
!530 = distinct !{!530, !14, !15, !16}
!531 = distinct !{!531, !14, !16, !15}
!532 = distinct !{!532, !14}
!533 = distinct !{!533, !14, !22}
!534 = distinct !{!534, !14}
!535 = distinct !{!535, !14, !15, !16}
!536 = distinct !{!536, !14, !16, !15}
!537 = distinct !{!537, !14}
!538 = distinct !{!538, !14, !22}
!539 = distinct !{!539, !14}
!540 = distinct !{!540, !14, !15, !16}
!541 = distinct !{!541, !14, !16, !15}
!542 = distinct !{!542, !14}
!543 = distinct !{!543, !14, !22}
!544 = distinct !{!544, !14}
!545 = distinct !{!545, !14, !15, !16}
!546 = distinct !{!546, !14, !16, !15}
!547 = distinct !{!547, !14}
!548 = distinct !{!548, !14, !22}
!549 = distinct !{!549, !14}
!550 = distinct !{!550, !14, !15, !16}
!551 = distinct !{!551, !14, !16, !15}
!552 = distinct !{!552, !14}
!553 = distinct !{!553, !14, !22}
!554 = distinct !{!554, !14}
!555 = distinct !{!555, !14, !15, !16}
!556 = distinct !{!556, !14, !16, !15}
!557 = distinct !{!557, !14}
!558 = distinct !{!558, !14, !22}
!559 = distinct !{!559, !14}
!560 = distinct !{!560, !14, !15, !16}
!561 = distinct !{!561, !14, !16, !15}
!562 = distinct !{!562, !14}
!563 = distinct !{!563, !14, !22}
!564 = distinct !{!564, !14}
!565 = distinct !{!565, !14, !15, !16}
!566 = distinct !{!566, !14, !16, !15}
!567 = distinct !{!567, !14}
!568 = distinct !{!568, !14, !22}
!569 = distinct !{!569, !14}
!570 = distinct !{!570, !14, !15, !16}
!571 = distinct !{!571, !14, !16, !15}
!572 = distinct !{!572, !14}
!573 = distinct !{!573, !14, !22}
!574 = distinct !{!574, !14}
!575 = distinct !{!575, !14, !15, !16}
!576 = distinct !{!576, !14, !16, !15}
!577 = distinct !{!577, !14}
!578 = distinct !{!578, !14, !22}
!579 = distinct !{!579, !14}
!580 = distinct !{!580, !14, !15, !16}
!581 = distinct !{!581, !14, !16, !15}
!582 = distinct !{!582, !14}
!583 = distinct !{!583, !14, !22}
!584 = distinct !{!584, !14}
!585 = distinct !{!585, !14, !15, !16}
!586 = distinct !{!586, !14, !16, !15}
!587 = distinct !{!587, !14}
!588 = distinct !{!588, !14, !22}
!589 = distinct !{!589, !14}
!590 = distinct !{!590, !14, !15, !16}
!591 = distinct !{!591, !14, !16, !15}
!592 = distinct !{!592, !14}
!593 = distinct !{!593, !14, !22}
!594 = distinct !{!594, !14}
!595 = distinct !{!595, !14, !15, !16}
!596 = distinct !{!596, !14, !16, !15}
!597 = distinct !{!597, !14}
!598 = distinct !{!598, !14, !22}
!599 = distinct !{!599, !14}
!600 = distinct !{!600, !14, !15, !16}
!601 = distinct !{!601, !14, !16, !15}
!602 = distinct !{!602, !14}
!603 = distinct !{!603, !14, !22}
!604 = distinct !{!604, !14}
!605 = distinct !{!605, !14, !15, !16}
!606 = distinct !{!606, !14, !16, !15}
!607 = distinct !{!607, !14}
!608 = distinct !{!608, !14, !22}
!609 = distinct !{!609, !14}
!610 = distinct !{!610, !14, !15, !16}
!611 = distinct !{!611, !14, !16, !15}
!612 = distinct !{!612, !14}
!613 = distinct !{!613, !14, !22}
!614 = distinct !{!614, !14}
!615 = distinct !{!615, !14, !15, !16}
!616 = distinct !{!616, !14, !16, !15}
!617 = distinct !{!617, !14}
!618 = distinct !{!618, !14, !22}
!619 = distinct !{!619, !14}
!620 = distinct !{!620, !14, !15, !16}
!621 = distinct !{!621, !14, !16, !15}
!622 = distinct !{!622, !14}
!623 = distinct !{!623, !14, !22}
!624 = distinct !{!624, !14}
!625 = distinct !{!625, !14, !15, !16}
!626 = distinct !{!626, !14, !16, !15}
!627 = distinct !{!627, !14}
!628 = distinct !{!628, !14, !22}
!629 = distinct !{!629, !14}
!630 = distinct !{!630, !14, !15, !16}
!631 = distinct !{!631, !14, !16, !15}
!632 = distinct !{!632, !14}
!633 = distinct !{!633, !14, !22}
!634 = distinct !{!634, !14}
!635 = distinct !{!635, !14, !15, !16}
!636 = distinct !{!636, !14, !16, !15}
!637 = distinct !{!637, !14}
!638 = distinct !{!638, !14, !22}
!639 = distinct !{!639, !14}
!640 = distinct !{!640, !14, !15, !16}
!641 = distinct !{!641, !14, !16, !15}
!642 = distinct !{!642, !14}
!643 = distinct !{!643, !14, !22}
!644 = distinct !{!644, !14}
!645 = distinct !{!645, !14, !15, !16}
!646 = distinct !{!646, !14, !16, !15}
!647 = distinct !{!647, !14}
!648 = distinct !{!648, !14, !22}
!649 = distinct !{!649, !14}
!650 = distinct !{!650, !14, !15, !16}
!651 = distinct !{!651, !14, !16, !15}
!652 = distinct !{!652, !14}
!653 = distinct !{!653, !14, !22}
!654 = distinct !{!654, !14}
!655 = distinct !{!655, !14, !15, !16}
!656 = distinct !{!656, !14, !16, !15}
!657 = distinct !{!657, !14}
!658 = distinct !{!658, !14, !22}
!659 = distinct !{!659, !14}
!660 = distinct !{!660, !14, !15, !16}
!661 = distinct !{!661, !14, !16, !15}
!662 = distinct !{!662, !14}
!663 = distinct !{!663, !14, !22}
!664 = distinct !{!664, !14}
!665 = distinct !{!665, !14, !15, !16}
!666 = distinct !{!666, !14, !16, !15}
!667 = distinct !{!667, !14}
!668 = distinct !{!668, !14, !22}
!669 = distinct !{!669, !14}
!670 = distinct !{!670, !14, !15, !16}
!671 = distinct !{!671, !14, !16, !15}
!672 = distinct !{!672, !14}
!673 = distinct !{!673, !14, !22}
!674 = distinct !{!674, !14}
!675 = distinct !{!675, !14, !15, !16}
!676 = distinct !{!676, !14, !16, !15}
!677 = distinct !{!677, !14}
!678 = distinct !{!678, !14, !22}
!679 = distinct !{!679, !14}
!680 = distinct !{!680, !14, !15, !16}
!681 = distinct !{!681, !14, !16, !15}
!682 = distinct !{!682, !14}
!683 = distinct !{!683, !14, !22}
!684 = distinct !{!684, !14}
!685 = distinct !{!685, !14, !15, !16}
!686 = distinct !{!686, !14, !16, !15}
!687 = distinct !{!687, !14}
!688 = distinct !{!688, !14, !22}
!689 = distinct !{!689, !14}
!690 = distinct !{!690, !14, !15, !16}
!691 = distinct !{!691, !14, !16, !15}
!692 = distinct !{!692, !14}
!693 = distinct !{!693, !14, !22}
!694 = distinct !{!694, !14}
!695 = distinct !{!695, !14, !15, !16}
!696 = distinct !{!696, !14, !16, !15}
!697 = distinct !{!697, !14}
!698 = distinct !{!698, !14, !22}
!699 = distinct !{!699, !14}
!700 = distinct !{!700, !14, !15, !16}
!701 = distinct !{!701, !14, !16, !15}
!702 = distinct !{!702, !14}
!703 = distinct !{!703, !14, !22}
!704 = distinct !{!704, !14}
!705 = distinct !{!705, !14, !15, !16}
!706 = distinct !{!706, !14, !16, !15}
!707 = distinct !{!707, !14}
!708 = distinct !{!708, !14, !22}
!709 = distinct !{!709, !14}
!710 = distinct !{!710, !14, !15, !16}
!711 = distinct !{!711, !14, !16, !15}
!712 = distinct !{!712, !14}
!713 = distinct !{!713, !14, !22}
!714 = distinct !{!714, !14}
!715 = distinct !{!715, !14, !15, !16}
!716 = distinct !{!716, !14, !16, !15}
!717 = distinct !{!717, !14}
!718 = distinct !{!718, !14, !22}
!719 = distinct !{!719, !14}
!720 = distinct !{!720, !14, !15, !16}
!721 = distinct !{!721, !14, !16, !15}
!722 = distinct !{!722, !14}
!723 = distinct !{!723, !14, !22}
!724 = distinct !{!724, !14}
!725 = distinct !{!725, !14, !15, !16}
!726 = distinct !{!726, !14, !16, !15}
!727 = distinct !{!727, !14}
!728 = distinct !{!728, !14, !22}
!729 = distinct !{!729, !14}
!730 = distinct !{!730, !14, !15, !16}
!731 = distinct !{!731, !14, !16, !15}
!732 = distinct !{!732, !14}
!733 = distinct !{!733, !14, !22}
!734 = distinct !{!734, !14}
!735 = distinct !{!735, !14, !15, !16}
!736 = distinct !{!736, !14, !16, !15}
!737 = distinct !{!737, !14}
!738 = distinct !{!738, !14, !22}
!739 = distinct !{!739, !14}
!740 = distinct !{!740, !14, !15, !16}
!741 = distinct !{!741, !14, !16, !15}
!742 = distinct !{!742, !14}
!743 = distinct !{!743, !14, !22}
!744 = distinct !{!744, !14}
!745 = distinct !{!745, !14, !15, !16}
!746 = distinct !{!746, !14, !16, !15}
!747 = distinct !{!747, !14}
!748 = distinct !{!748, !14, !22}
!749 = distinct !{!749, !14}
!750 = distinct !{!750, !14, !15, !16}
!751 = distinct !{!751, !14, !16, !15}
!752 = distinct !{!752, !14}
!753 = distinct !{!753, !14, !22}
!754 = distinct !{!754, !14}
!755 = distinct !{!755, !14, !15, !16}
!756 = distinct !{!756, !14, !16, !15}
!757 = distinct !{!757, !14}
!758 = distinct !{!758, !14, !22}
!759 = distinct !{!759, !14}
!760 = distinct !{!760, !14, !15, !16}
!761 = distinct !{!761, !14, !16, !15}
!762 = distinct !{!762, !14}
!763 = distinct !{!763, !14, !22}
!764 = distinct !{!764, !14}
!765 = distinct !{!765, !14, !15, !16}
!766 = distinct !{!766, !14, !16, !15}
!767 = distinct !{!767, !14}
!768 = distinct !{!768, !14, !22}
!769 = distinct !{!769, !14}
!770 = distinct !{!770, !14, !15, !16}
!771 = distinct !{!771, !14, !16, !15}
!772 = distinct !{!772, !14}
!773 = distinct !{!773, !14, !22}
!774 = distinct !{!774, !14}
!775 = distinct !{!775, !14, !15, !16}
!776 = distinct !{!776, !14, !16, !15}
!777 = distinct !{!777, !14}
!778 = distinct !{!778, !14, !22}
!779 = distinct !{!779, !14}
!780 = distinct !{!780, !14, !15, !16}
!781 = distinct !{!781, !14, !16, !15}
!782 = distinct !{!782, !14}
!783 = distinct !{!783, !14, !22}
!784 = distinct !{!784, !14}
!785 = distinct !{!785, !14, !15, !16}
!786 = distinct !{!786, !14, !16, !15}
!787 = distinct !{!787, !14}
!788 = distinct !{!788, !14, !22}
!789 = distinct !{!789, !14}
!790 = distinct !{!790, !14, !15, !16}
!791 = distinct !{!791, !14, !16, !15}
!792 = distinct !{!792, !14}
!793 = distinct !{!793, !14, !22}
!794 = distinct !{!794, !14}
!795 = distinct !{!795, !14, !15, !16}
!796 = distinct !{!796, !14, !16, !15}
!797 = distinct !{!797, !14}
!798 = distinct !{!798, !14, !22}
!799 = distinct !{!799, !14}
!800 = distinct !{!800, !14, !15, !16}
!801 = distinct !{!801, !14, !16, !15}
!802 = distinct !{!802, !14}
!803 = distinct !{!803, !14, !22}
!804 = distinct !{!804, !14}
!805 = distinct !{!805, !14, !15, !16}
!806 = distinct !{!806, !14, !16, !15}
!807 = distinct !{!807, !14}
!808 = distinct !{!808, !14, !22}
!809 = distinct !{!809, !14}
!810 = distinct !{!810, !14, !15, !16}
!811 = distinct !{!811, !14, !16, !15}
!812 = distinct !{!812, !14}
!813 = distinct !{!813, !14, !22}
!814 = distinct !{!814, !14}
!815 = distinct !{!815, !14, !15, !16}
!816 = distinct !{!816, !14, !16, !15}
!817 = distinct !{!817, !14}
!818 = distinct !{!818, !14, !22}
!819 = distinct !{!819, !14}
!820 = distinct !{!820, !14, !15, !16}
!821 = distinct !{!821, !14, !16, !15}
!822 = distinct !{!822, !14}
!823 = distinct !{!823, !14, !22}
!824 = distinct !{!824, !14}
!825 = distinct !{!825, !14, !15, !16}
!826 = distinct !{!826, !14, !16, !15}
!827 = distinct !{!827, !14}
!828 = distinct !{!828, !14, !22}
!829 = distinct !{!829, !14}
!830 = distinct !{!830, !14, !15, !16}
!831 = distinct !{!831, !14, !16, !15}
!832 = distinct !{!832, !14}
!833 = distinct !{!833, !14, !22}
!834 = distinct !{!834, !14}
!835 = distinct !{!835, !14, !15, !16}
!836 = distinct !{!836, !14, !16, !15}
!837 = distinct !{!837, !14}
!838 = distinct !{!838, !14, !22}
!839 = distinct !{!839, !14}
!840 = distinct !{!840, !14, !15, !16}
!841 = distinct !{!841, !14, !16, !15}
!842 = distinct !{!842, !14}
!843 = distinct !{!843, !14, !22}
!844 = distinct !{!844, !14}
!845 = distinct !{!845, !14, !15, !16}
!846 = distinct !{!846, !14, !16, !15}
!847 = distinct !{!847, !14}
!848 = distinct !{!848, !14, !22}
!849 = distinct !{!849, !14}
!850 = distinct !{!850, !14, !15, !16}
!851 = distinct !{!851, !14, !16, !15}
!852 = distinct !{!852, !14}
!853 = distinct !{!853, !14, !22}
!854 = distinct !{!854, !14}
!855 = distinct !{!855, !14, !15, !16}
!856 = distinct !{!856, !14, !16, !15}
!857 = distinct !{!857, !14}
!858 = distinct !{!858, !14, !22}
!859 = distinct !{!859, !14}
!860 = distinct !{!860, !14, !15, !16}
!861 = distinct !{!861, !14, !16, !15}
!862 = distinct !{!862, !14}
!863 = distinct !{!863, !14, !22}
!864 = distinct !{!864, !14}
!865 = distinct !{!865, !14, !15, !16}
!866 = distinct !{!866, !14, !16, !15}
!867 = distinct !{!867, !14}
!868 = distinct !{!868, !14, !22}
!869 = distinct !{!869, !14}
!870 = distinct !{!870, !14, !15, !16}
!871 = distinct !{!871, !14, !16, !15}
!872 = distinct !{!872, !14}
!873 = distinct !{!873, !14, !22}
!874 = distinct !{!874, !14}
!875 = distinct !{!875, !14, !15, !16}
!876 = distinct !{!876, !14, !16, !15}
!877 = distinct !{!877, !14}
!878 = distinct !{!878, !14, !22}
!879 = distinct !{!879, !14}
!880 = distinct !{!880, !14, !15, !16}
!881 = distinct !{!881, !14, !16, !15}
!882 = distinct !{!882, !14}
!883 = distinct !{!883, !14, !22}
!884 = distinct !{!884, !14}
!885 = distinct !{!885, !14, !15, !16}
!886 = distinct !{!886, !14, !16, !15}
!887 = distinct !{!887, !14}
!888 = distinct !{!888, !14, !22}
!889 = distinct !{!889, !14}
!890 = distinct !{!890, !14, !15, !16}
!891 = distinct !{!891, !14, !16, !15}
!892 = distinct !{!892, !14}
!893 = distinct !{!893, !14, !22}
!894 = distinct !{!894, !14}
!895 = distinct !{!895, !14, !15, !16}
!896 = distinct !{!896, !14, !16, !15}
!897 = distinct !{!897, !14}
!898 = distinct !{!898, !14, !22}
!899 = distinct !{!899, !14}
!900 = distinct !{!900, !14, !15, !16}
!901 = distinct !{!901, !14, !16, !15}
!902 = distinct !{!902, !14}
!903 = distinct !{!903, !14, !22}
!904 = distinct !{!904, !14}
!905 = distinct !{!905, !14, !15, !16}
!906 = distinct !{!906, !14, !16, !15}
!907 = distinct !{!907, !14}
!908 = distinct !{!908, !14, !22}
!909 = distinct !{!909, !14}
!910 = distinct !{!910, !14, !15, !16}
!911 = distinct !{!911, !14, !16, !15}
!912 = distinct !{!912, !14}
!913 = distinct !{!913, !14, !22}
!914 = distinct !{!914, !14}
!915 = distinct !{!915, !14, !15, !16}
!916 = distinct !{!916, !14, !16, !15}
!917 = distinct !{!917, !14}
!918 = distinct !{!918, !14, !22}
!919 = distinct !{!919, !14}
!920 = distinct !{!920, !14, !15, !16}
!921 = distinct !{!921, !14, !16, !15}
!922 = distinct !{!922, !14}
!923 = distinct !{!923, !14, !22}
!924 = distinct !{!924, !14}
!925 = distinct !{!925, !14, !15, !16}
!926 = distinct !{!926, !14, !16, !15}
!927 = distinct !{!927, !14}
!928 = distinct !{!928, !14, !22}
!929 = distinct !{!929, !14}
!930 = distinct !{!930, !14, !15, !16}
!931 = distinct !{!931, !14, !16, !15}
!932 = distinct !{!932, !14}
!933 = distinct !{!933, !14, !22}
!934 = distinct !{!934, !14}
!935 = distinct !{!935, !14, !15, !16}
!936 = distinct !{!936, !14, !16, !15}
!937 = distinct !{!937, !14}
!938 = distinct !{!938, !14, !22}
!939 = distinct !{!939, !14}
!940 = distinct !{!940, !14, !15, !16}
!941 = distinct !{!941, !14, !16, !15}
!942 = distinct !{!942, !14}
!943 = distinct !{!943, !14, !22}
!944 = distinct !{!944, !14}
!945 = distinct !{!945, !14, !15, !16}
!946 = distinct !{!946, !14, !16, !15}
!947 = distinct !{!947, !14}
!948 = distinct !{!948, !14, !22}
!949 = distinct !{!949, !14}
!950 = distinct !{!950, !14, !15, !16}
!951 = distinct !{!951, !14, !16, !15}
!952 = distinct !{!952, !14}
!953 = distinct !{!953, !14, !22}
!954 = distinct !{!954, !14}
!955 = distinct !{!955, !14, !15, !16}
!956 = distinct !{!956, !14, !16, !15}
!957 = distinct !{!957, !14}
!958 = distinct !{!958, !14, !22}
!959 = distinct !{!959, !14}
!960 = distinct !{!960, !14, !15, !16}
!961 = distinct !{!961, !14, !16, !15}
!962 = distinct !{!962, !14}
!963 = distinct !{!963, !14, !22}
!964 = distinct !{!964, !14}
!965 = distinct !{!965, !14, !15, !16}
!966 = distinct !{!966, !14, !16, !15}
!967 = distinct !{!967, !14}
!968 = distinct !{!968, !14, !22}
!969 = distinct !{!969, !14}
!970 = distinct !{!970, !14, !15, !16}
!971 = distinct !{!971, !14, !16, !15}
!972 = distinct !{!972, !14}
!973 = distinct !{!973, !14, !22}
!974 = distinct !{!974, !14}
!975 = distinct !{!975, !14, !15, !16}
!976 = distinct !{!976, !14, !16, !15}
!977 = distinct !{!977, !14}
!978 = distinct !{!978, !14, !22}
!979 = distinct !{!979, !14}
!980 = distinct !{!980, !14, !15, !16}
!981 = distinct !{!981, !14, !16, !15}
!982 = distinct !{!982, !14}
!983 = distinct !{!983, !14, !22}
!984 = distinct !{!984, !14}
!985 = distinct !{!985, !14, !15, !16}
!986 = distinct !{!986, !14, !16, !15}
!987 = distinct !{!987, !14}
!988 = distinct !{!988, !14, !22}
!989 = distinct !{!989, !14}
!990 = distinct !{!990, !14, !15, !16}
!991 = distinct !{!991, !14, !16, !15}
!992 = distinct !{!992, !14}
!993 = distinct !{!993, !14, !22}
!994 = distinct !{!994, !14}
!995 = distinct !{!995, !14, !15, !16}
!996 = distinct !{!996, !14, !16, !15}
!997 = distinct !{!997, !14}
!998 = distinct !{!998, !14, !22}
!999 = distinct !{!999, !14}
!1000 = distinct !{!1000, !14, !15, !16}
!1001 = distinct !{!1001, !14, !16, !15}
!1002 = distinct !{!1002, !14}
!1003 = distinct !{!1003, !14, !22}
!1004 = distinct !{!1004, !14}
!1005 = distinct !{!1005, !14, !15, !16}
!1006 = distinct !{!1006, !14, !16, !15}
!1007 = distinct !{!1007, !14}
!1008 = distinct !{!1008, !14, !22}
!1009 = distinct !{!1009, !14}
!1010 = distinct !{!1010, !14, !15, !16}
!1011 = distinct !{!1011, !14, !16, !15}
!1012 = distinct !{!1012, !14}
!1013 = distinct !{!1013, !14, !22}
!1014 = distinct !{!1014, !14}
!1015 = distinct !{!1015, !14, !15, !16}
!1016 = distinct !{!1016, !14, !16, !15}
!1017 = distinct !{!1017, !14}
!1018 = distinct !{!1018, !14, !22}
!1019 = distinct !{!1019, !14}
!1020 = distinct !{!1020, !14, !15, !16}
!1021 = distinct !{!1021, !14, !16, !15}
!1022 = distinct !{!1022, !14}
!1023 = distinct !{!1023, !14, !22}
!1024 = distinct !{!1024, !14}
!1025 = distinct !{!1025, !14, !15, !16}
!1026 = distinct !{!1026, !14, !16, !15}
!1027 = distinct !{!1027, !14}
!1028 = distinct !{!1028, !14, !22}
!1029 = distinct !{!1029, !14}
!1030 = distinct !{!1030, !14, !15, !16}
!1031 = distinct !{!1031, !14, !16, !15}
!1032 = distinct !{!1032, !14}
!1033 = distinct !{!1033, !14, !22}
!1034 = distinct !{!1034, !14}
!1035 = distinct !{!1035, !14, !15, !16}
!1036 = distinct !{!1036, !14, !16, !15}
!1037 = distinct !{!1037, !14}
!1038 = distinct !{!1038, !14, !22}
!1039 = distinct !{!1039, !14}
!1040 = distinct !{!1040, !14, !15, !16}
!1041 = distinct !{!1041, !14, !16, !15}
!1042 = distinct !{!1042, !14}
!1043 = distinct !{!1043, !14, !22}
!1044 = distinct !{!1044, !14}
!1045 = distinct !{!1045, !14, !15, !16}
!1046 = distinct !{!1046, !14, !16, !15}
!1047 = distinct !{!1047, !14}
!1048 = distinct !{!1048, !14, !22}
!1049 = distinct !{!1049, !14}
!1050 = distinct !{!1050, !14, !15, !16}
!1051 = distinct !{!1051, !14, !16, !15}
!1052 = distinct !{!1052, !14}
!1053 = distinct !{!1053, !14, !22}
!1054 = distinct !{!1054, !14}
!1055 = distinct !{!1055, !14, !15, !16}
!1056 = distinct !{!1056, !14, !16, !15}
!1057 = distinct !{!1057, !14}
!1058 = distinct !{!1058, !14, !22}
!1059 = distinct !{!1059, !14}
!1060 = distinct !{!1060, !14, !15, !16}
!1061 = distinct !{!1061, !14, !16, !15}
!1062 = distinct !{!1062, !14}
!1063 = distinct !{!1063, !14, !22}
!1064 = distinct !{!1064, !14}
!1065 = distinct !{!1065, !14, !15, !16}
!1066 = distinct !{!1066, !14, !16, !15}
!1067 = distinct !{!1067, !14}
!1068 = distinct !{!1068, !14, !22}
!1069 = distinct !{!1069, !14}
!1070 = distinct !{!1070, !14, !15, !16}
!1071 = distinct !{!1071, !14, !16, !15}
!1072 = distinct !{!1072, !14}
!1073 = distinct !{!1073, !14, !22}
!1074 = distinct !{!1074, !14}
!1075 = distinct !{!1075, !14, !15, !16}
!1076 = distinct !{!1076, !14, !16, !15}
!1077 = distinct !{!1077, !14}
!1078 = distinct !{!1078, !14, !22}
!1079 = distinct !{!1079, !14}
!1080 = distinct !{!1080, !14, !15, !16}
!1081 = distinct !{!1081, !14, !16, !15}
!1082 = distinct !{!1082, !14}
!1083 = distinct !{!1083, !14, !22}
!1084 = distinct !{!1084, !14}
!1085 = distinct !{!1085, !14, !15, !16}
!1086 = distinct !{!1086, !14, !16, !15}
!1087 = distinct !{!1087, !14}
!1088 = distinct !{!1088, !14, !22}
!1089 = distinct !{!1089, !14}
!1090 = distinct !{!1090, !14, !15, !16}
!1091 = distinct !{!1091, !14, !16, !15}
!1092 = distinct !{!1092, !14}
!1093 = distinct !{!1093, !14, !22}
!1094 = distinct !{!1094, !14}
!1095 = distinct !{!1095, !14, !15, !16}
!1096 = distinct !{!1096, !14, !16, !15}
!1097 = distinct !{!1097, !14}
!1098 = distinct !{!1098, !14, !22}
!1099 = distinct !{!1099, !14}
!1100 = distinct !{!1100, !14, !15, !16}
!1101 = distinct !{!1101, !14, !16, !15}
!1102 = distinct !{!1102, !14}
!1103 = distinct !{!1103, !14, !22}
!1104 = distinct !{!1104, !14}
!1105 = distinct !{!1105, !14, !15, !16}
!1106 = distinct !{!1106, !14, !16, !15}
!1107 = distinct !{!1107, !14}
!1108 = distinct !{!1108, !14, !22}
!1109 = distinct !{!1109, !14}
!1110 = distinct !{!1110, !14, !15, !16}
!1111 = distinct !{!1111, !14, !16, !15}
!1112 = distinct !{!1112, !14}
!1113 = distinct !{!1113, !14, !22}
!1114 = distinct !{!1114, !14}
!1115 = distinct !{!1115, !14, !15, !16}
!1116 = distinct !{!1116, !14, !16, !15}
!1117 = distinct !{!1117, !14}
!1118 = distinct !{!1118, !14, !22}
!1119 = distinct !{!1119, !14}
!1120 = distinct !{!1120, !14, !15, !16}
!1121 = distinct !{!1121, !14, !16, !15}
!1122 = distinct !{!1122, !14}
!1123 = distinct !{!1123, !14, !22}
!1124 = distinct !{!1124, !14}
!1125 = distinct !{!1125, !14, !15, !16}
!1126 = distinct !{!1126, !14, !16, !15}
!1127 = distinct !{!1127, !14}
!1128 = distinct !{!1128, !14, !22}
!1129 = distinct !{!1129, !14}
!1130 = distinct !{!1130, !14, !15, !16}
!1131 = distinct !{!1131, !14, !16, !15}
!1132 = distinct !{!1132, !14}
!1133 = distinct !{!1133, !14, !22}
!1134 = distinct !{!1134, !14}
!1135 = distinct !{!1135, !14, !15, !16}
!1136 = distinct !{!1136, !14, !16, !15}
!1137 = distinct !{!1137, !14}
!1138 = distinct !{!1138, !14, !22}
!1139 = distinct !{!1139, !14}
!1140 = distinct !{!1140, !14, !15, !16}
!1141 = distinct !{!1141, !14, !16, !15}
!1142 = distinct !{!1142, !14}
!1143 = distinct !{!1143, !14, !22}
!1144 = distinct !{!1144, !14}
!1145 = distinct !{!1145, !14, !15, !16}
!1146 = distinct !{!1146, !14, !16, !15}
!1147 = distinct !{!1147, !14}
!1148 = distinct !{!1148, !14, !22}
!1149 = distinct !{!1149, !14}
!1150 = distinct !{!1150, !14, !15, !16}
!1151 = distinct !{!1151, !14, !16, !15}
!1152 = distinct !{!1152, !14}
!1153 = distinct !{!1153, !14, !22}
!1154 = distinct !{!1154, !14}
!1155 = distinct !{!1155, !14, !15, !16}
!1156 = distinct !{!1156, !14, !16, !15}
!1157 = distinct !{!1157, !14}
!1158 = distinct !{!1158, !14, !22}
!1159 = distinct !{!1159, !14}
!1160 = distinct !{!1160, !14, !15, !16}
!1161 = distinct !{!1161, !14, !16, !15}
!1162 = distinct !{!1162, !14}
!1163 = distinct !{!1163, !14, !22}
!1164 = distinct !{!1164, !14}
!1165 = distinct !{!1165, !14, !15, !16}
!1166 = distinct !{!1166, !14, !16, !15}
!1167 = distinct !{!1167, !14}
!1168 = distinct !{!1168, !14, !22}
!1169 = distinct !{!1169, !14}
!1170 = distinct !{!1170, !14, !15, !16}
!1171 = distinct !{!1171, !14, !16, !15}
!1172 = distinct !{!1172, !14}
!1173 = distinct !{!1173, !14, !22}
!1174 = distinct !{!1174, !14}
!1175 = distinct !{!1175, !14, !15, !16}
!1176 = distinct !{!1176, !14, !16, !15}
!1177 = distinct !{!1177, !14}
!1178 = distinct !{!1178, !14, !22}
!1179 = distinct !{!1179, !14}
!1180 = distinct !{!1180, !14, !15, !16}
!1181 = distinct !{!1181, !14, !16, !15}
!1182 = distinct !{!1182, !14}
!1183 = distinct !{!1183, !14, !22}
!1184 = distinct !{!1184, !14}
!1185 = distinct !{!1185, !14, !15, !16}
!1186 = distinct !{!1186, !14, !16, !15}
!1187 = distinct !{!1187, !14}
!1188 = distinct !{!1188, !14, !22}
!1189 = distinct !{!1189, !14}
!1190 = distinct !{!1190, !14, !15, !16}
!1191 = distinct !{!1191, !14, !16, !15}
!1192 = distinct !{!1192, !14}
!1193 = distinct !{!1193, !14, !22}
!1194 = distinct !{!1194, !14}
!1195 = distinct !{!1195, !14, !15, !16}
!1196 = distinct !{!1196, !14, !16, !15}
!1197 = distinct !{!1197, !14}
!1198 = distinct !{!1198, !14, !22}
!1199 = distinct !{!1199, !14}
!1200 = distinct !{!1200, !14, !15, !16}
!1201 = distinct !{!1201, !14, !16, !15}
!1202 = distinct !{!1202, !14}
!1203 = distinct !{!1203, !14, !22}
!1204 = distinct !{!1204, !14}
!1205 = distinct !{!1205, !14, !15, !16}
!1206 = distinct !{!1206, !14, !16, !15}
!1207 = distinct !{!1207, !14}
!1208 = distinct !{!1208, !14, !22}
!1209 = distinct !{!1209, !14}
!1210 = distinct !{!1210, !14, !15, !16}
!1211 = distinct !{!1211, !14, !16, !15}
!1212 = distinct !{!1212, !14}
!1213 = distinct !{!1213, !14, !22}
!1214 = distinct !{!1214, !14}
!1215 = distinct !{!1215, !14, !15, !16}
!1216 = distinct !{!1216, !14, !16, !15}
!1217 = distinct !{!1217, !14}
!1218 = distinct !{!1218, !14, !22}
!1219 = distinct !{!1219, !14}
!1220 = distinct !{!1220, !14, !15, !16}
!1221 = distinct !{!1221, !14, !16, !15}
!1222 = distinct !{!1222, !14}
!1223 = distinct !{!1223, !14, !22}
!1224 = distinct !{!1224, !14}
!1225 = distinct !{!1225, !14, !15, !16}
!1226 = distinct !{!1226, !14, !16, !15}
!1227 = distinct !{!1227, !14}
!1228 = distinct !{!1228, !14, !22}
!1229 = distinct !{!1229, !14}
!1230 = distinct !{!1230, !14, !15, !16}
!1231 = distinct !{!1231, !14, !16, !15}
!1232 = distinct !{!1232, !14}
!1233 = distinct !{!1233, !14, !22}
!1234 = distinct !{!1234, !14}
!1235 = distinct !{!1235, !14, !15, !16}
!1236 = distinct !{!1236, !14, !16, !15}
!1237 = distinct !{!1237, !14}
!1238 = distinct !{!1238, !14, !22}
!1239 = distinct !{!1239, !14}
!1240 = distinct !{!1240, !14, !15, !16}
!1241 = distinct !{!1241, !14, !16, !15}
!1242 = distinct !{!1242, !14}
!1243 = distinct !{!1243, !14, !22}
!1244 = distinct !{!1244, !14}
!1245 = distinct !{!1245, !14, !15, !16}
!1246 = distinct !{!1246, !14, !16, !15}
!1247 = distinct !{!1247, !14}
!1248 = distinct !{!1248, !14, !22}
!1249 = distinct !{!1249, !14}
!1250 = distinct !{!1250, !14, !15, !16}
!1251 = distinct !{!1251, !14, !16, !15}
!1252 = distinct !{!1252, !14}
!1253 = distinct !{!1253, !14, !22}
!1254 = distinct !{!1254, !14}
!1255 = distinct !{!1255, !14, !15, !16}
!1256 = distinct !{!1256, !14, !16, !15}
!1257 = distinct !{!1257, !14}
!1258 = distinct !{!1258, !14, !22}
!1259 = distinct !{!1259, !14}
!1260 = distinct !{!1260, !14, !15, !16}
!1261 = distinct !{!1261, !14, !16, !15}
!1262 = distinct !{!1262, !14}
!1263 = distinct !{!1263, !14, !22}
!1264 = distinct !{!1264, !14}
!1265 = distinct !{!1265, !14, !15, !16}
!1266 = distinct !{!1266, !14, !16, !15}
!1267 = distinct !{!1267, !14}
!1268 = distinct !{!1268, !14, !22}
!1269 = distinct !{!1269, !14}
!1270 = distinct !{!1270, !14, !15, !16}
!1271 = distinct !{!1271, !14, !16, !15}
!1272 = distinct !{!1272, !14}
!1273 = distinct !{!1273, !14, !22}
!1274 = distinct !{!1274, !14}
!1275 = distinct !{!1275, !14, !15, !16}
!1276 = distinct !{!1276, !14, !16, !15}
!1277 = distinct !{!1277, !14}
!1278 = distinct !{!1278, !14, !22}
!1279 = distinct !{!1279, !14}
!1280 = distinct !{!1280, !14, !15, !16}
!1281 = distinct !{!1281, !14, !16, !15}
!1282 = distinct !{!1282, !14}
!1283 = distinct !{!1283, !14, !22}
!1284 = distinct !{!1284, !14}
!1285 = distinct !{!1285, !14, !15, !16}
!1286 = distinct !{!1286, !14, !16, !15}
!1287 = distinct !{!1287, !14}
!1288 = distinct !{!1288, !14, !22}
!1289 = distinct !{!1289, !14}
!1290 = distinct !{!1290, !14, !15, !16}
!1291 = distinct !{!1291, !14, !16, !15}
!1292 = distinct !{!1292, !14}
!1293 = distinct !{!1293, !14, !22}
!1294 = distinct !{!1294, !14}
!1295 = distinct !{!1295, !14, !15, !16}
!1296 = distinct !{!1296, !14, !16, !15}
!1297 = distinct !{!1297, !14}
!1298 = distinct !{!1298, !14, !22}
!1299 = distinct !{!1299, !14}
!1300 = distinct !{!1300, !14, !15, !16}
!1301 = distinct !{!1301, !14, !16, !15}
!1302 = distinct !{!1302, !14}
!1303 = distinct !{!1303, !14, !22}
!1304 = distinct !{!1304, !14}
!1305 = distinct !{!1305, !14, !15, !16}
!1306 = distinct !{!1306, !14, !16, !15}
!1307 = distinct !{!1307, !14}
!1308 = distinct !{!1308, !14, !22}
!1309 = distinct !{!1309, !14}
!1310 = distinct !{!1310, !14, !15, !16}
!1311 = distinct !{!1311, !14, !16, !15}
!1312 = distinct !{!1312, !14}
!1313 = distinct !{!1313, !14, !22}
!1314 = distinct !{!1314, !14}
!1315 = distinct !{!1315, !14, !15, !16}
!1316 = distinct !{!1316, !14, !16, !15}
!1317 = distinct !{!1317, !14}
!1318 = distinct !{!1318, !14, !22}
!1319 = distinct !{!1319, !14}
!1320 = distinct !{!1320, !14, !15, !16}
!1321 = distinct !{!1321, !14, !16, !15}
!1322 = distinct !{!1322, !14}
!1323 = distinct !{!1323, !14, !22}
!1324 = distinct !{!1324, !14}
!1325 = distinct !{!1325, !14, !15, !16}
!1326 = distinct !{!1326, !14, !16, !15}
!1327 = distinct !{!1327, !14}
!1328 = distinct !{!1328, !14, !22}
!1329 = distinct !{!1329, !14}
!1330 = distinct !{!1330, !14, !15, !16}
!1331 = distinct !{!1331, !14, !16, !15}
!1332 = distinct !{!1332, !14}
!1333 = distinct !{!1333, !14, !22}
!1334 = distinct !{!1334, !14}
!1335 = distinct !{!1335, !14, !15, !16}
!1336 = distinct !{!1336, !14, !16, !15}
!1337 = distinct !{!1337, !14}
!1338 = distinct !{!1338, !14, !22}
!1339 = distinct !{!1339, !14}
!1340 = distinct !{!1340, !14, !15, !16}
!1341 = distinct !{!1341, !14, !16, !15}
!1342 = distinct !{!1342, !14}
!1343 = distinct !{!1343, !14, !22}
!1344 = distinct !{!1344, !14}
!1345 = distinct !{!1345, !14, !15, !16}
!1346 = distinct !{!1346, !14, !16, !15}
!1347 = distinct !{!1347, !14}
!1348 = distinct !{!1348, !14, !22}
!1349 = distinct !{!1349, !14}
!1350 = distinct !{!1350, !14, !15, !16}
!1351 = distinct !{!1351, !14, !16, !15}
!1352 = distinct !{!1352, !14}
!1353 = distinct !{!1353, !14, !22}
!1354 = distinct !{!1354, !14}
!1355 = distinct !{!1355, !14, !15, !16}
!1356 = distinct !{!1356, !14, !16, !15}
!1357 = distinct !{!1357, !14}
!1358 = distinct !{!1358, !14, !22}
!1359 = distinct !{!1359, !14}
!1360 = distinct !{!1360, !14, !15, !16}
!1361 = distinct !{!1361, !14, !16, !15}
!1362 = distinct !{!1362, !14}
!1363 = distinct !{!1363, !14, !22}
!1364 = distinct !{!1364, !14}
!1365 = distinct !{!1365, !14, !15, !16}
!1366 = distinct !{!1366, !14, !16, !15}
!1367 = distinct !{!1367, !14}
!1368 = distinct !{!1368, !14, !22}
!1369 = distinct !{!1369, !14}
!1370 = distinct !{!1370, !14, !15, !16}
!1371 = distinct !{!1371, !14, !16, !15}
!1372 = distinct !{!1372, !14}
!1373 = distinct !{!1373, !14, !22}
!1374 = distinct !{!1374, !14}
!1375 = distinct !{!1375, !14, !15, !16}
!1376 = distinct !{!1376, !14, !16, !15}
!1377 = distinct !{!1377, !14}
!1378 = distinct !{!1378, !14, !22}
!1379 = distinct !{!1379, !14}
!1380 = distinct !{!1380, !14, !15, !16}
!1381 = distinct !{!1381, !14, !16, !15}
!1382 = distinct !{!1382, !14}
!1383 = distinct !{!1383, !14, !22}
!1384 = distinct !{!1384, !14}
!1385 = distinct !{!1385, !14, !15, !16}
!1386 = distinct !{!1386, !14, !16, !15}
!1387 = distinct !{!1387, !14}
!1388 = distinct !{!1388, !14, !22}
!1389 = distinct !{!1389, !14}
!1390 = distinct !{!1390, !14, !15, !16}
!1391 = distinct !{!1391, !14, !16, !15}
!1392 = distinct !{!1392, !14}
!1393 = distinct !{!1393, !14, !22}
!1394 = distinct !{!1394, !14}
!1395 = distinct !{!1395, !14, !15, !16}
!1396 = distinct !{!1396, !14, !16, !15}
!1397 = distinct !{!1397, !14}
!1398 = distinct !{!1398, !14, !22}
!1399 = distinct !{!1399, !14}
!1400 = distinct !{!1400, !14, !15, !16}
!1401 = distinct !{!1401, !14, !16, !15}
!1402 = distinct !{!1402, !14}
!1403 = distinct !{!1403, !14, !22}
!1404 = distinct !{!1404, !14}
!1405 = distinct !{!1405, !14, !15, !16}
!1406 = distinct !{!1406, !14, !16, !15}
!1407 = distinct !{!1407, !14}
!1408 = distinct !{!1408, !14, !22}
!1409 = distinct !{!1409, !14}
!1410 = distinct !{!1410, !14, !15, !16}
!1411 = distinct !{!1411, !14, !16, !15}
!1412 = distinct !{!1412, !14}
!1413 = distinct !{!1413, !14, !22}
!1414 = distinct !{!1414, !14}
!1415 = distinct !{!1415, !14, !15, !16}
!1416 = distinct !{!1416, !14, !16, !15}
!1417 = distinct !{!1417, !14}
!1418 = distinct !{!1418, !14, !22}
!1419 = distinct !{!1419, !14}
!1420 = distinct !{!1420, !14, !15, !16}
!1421 = distinct !{!1421, !14, !16, !15}
!1422 = distinct !{!1422, !14}
!1423 = distinct !{!1423, !14, !22}
!1424 = distinct !{!1424, !14}
!1425 = distinct !{!1425, !14, !15, !16}
!1426 = distinct !{!1426, !14, !16, !15}
!1427 = distinct !{!1427, !14}
!1428 = distinct !{!1428, !14, !22}
!1429 = distinct !{!1429, !14}
!1430 = distinct !{!1430, !14, !15, !16}
!1431 = distinct !{!1431, !14, !16, !15}
!1432 = distinct !{!1432, !14}
!1433 = distinct !{!1433, !14, !22}
!1434 = distinct !{!1434, !14}
!1435 = distinct !{!1435, !14, !15, !16}
!1436 = distinct !{!1436, !14, !16, !15}
!1437 = distinct !{!1437, !14}
!1438 = distinct !{!1438, !14, !22}
!1439 = distinct !{!1439, !14}
!1440 = distinct !{!1440, !14, !15, !16}
!1441 = distinct !{!1441, !14, !16, !15}
!1442 = distinct !{!1442, !14}
!1443 = distinct !{!1443, !14, !22}
!1444 = distinct !{!1444, !14}
!1445 = distinct !{!1445, !14, !15, !16}
!1446 = distinct !{!1446, !14, !16, !15}
!1447 = distinct !{!1447, !14}
!1448 = distinct !{!1448, !14, !22}
!1449 = distinct !{!1449, !14}
!1450 = distinct !{!1450, !14, !15, !16}
!1451 = distinct !{!1451, !14, !16, !15}
!1452 = distinct !{!1452, !14}
!1453 = distinct !{!1453, !14, !22}
!1454 = distinct !{!1454, !14}
!1455 = distinct !{!1455, !14, !15, !16}
!1456 = distinct !{!1456, !14, !16, !15}
!1457 = distinct !{!1457, !14}
!1458 = distinct !{!1458, !14, !22}
!1459 = distinct !{!1459, !14}
!1460 = distinct !{!1460, !14, !15, !16}
!1461 = distinct !{!1461, !14, !16, !15}
!1462 = distinct !{!1462, !14}
!1463 = distinct !{!1463, !14, !22}
!1464 = distinct !{!1464, !14}
!1465 = distinct !{!1465, !14, !15, !16}
!1466 = distinct !{!1466, !14, !16, !15}
!1467 = distinct !{!1467, !14}
!1468 = distinct !{!1468, !14, !22}
!1469 = distinct !{!1469, !14}
!1470 = distinct !{!1470, !14, !15, !16}
!1471 = distinct !{!1471, !14, !16, !15}
!1472 = distinct !{!1472, !14}
!1473 = distinct !{!1473, !14, !22}
!1474 = distinct !{!1474, !14}
!1475 = distinct !{!1475, !14, !15, !16}
!1476 = distinct !{!1476, !14, !16, !15}
!1477 = distinct !{!1477, !14}
!1478 = distinct !{!1478, !14, !22}
!1479 = distinct !{!1479, !14}
!1480 = distinct !{!1480, !14, !15, !16}
!1481 = distinct !{!1481, !14, !16, !15}
!1482 = distinct !{!1482, !14}
!1483 = distinct !{!1483, !14, !22}
!1484 = distinct !{!1484, !14}
